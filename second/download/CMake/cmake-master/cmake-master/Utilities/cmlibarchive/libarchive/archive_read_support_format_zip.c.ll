; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.archive_cryptor = type { i32 (i8*, i64, i8*, i64, i32, i8*, i64)*, i32 (i32*, i8*, i64)*, i32 (i32*, i8*, i64, i8*, i64*)*, i32 (i32*)*, i32 (i32*, i8*, i64)*, i32 (i32*, i8*, i64, i8*, i64*)*, i32 (i32*)* }
%struct.archive_hmac = type { i32 (i32*, i8*, i64)*, void (i32*, i8*, i64)*, void (i32*, i8*, i64*)*, void (i32*)* }
%struct.anon.1 = type { i32, i8* }
%struct.archive_rb_tree_ops = type { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)*, i32 (%struct.archive_rb_node*, i8*)* }
%struct.archive_rb_node = type { [2 x %struct.archive_rb_node*], i64 }
%struct.archive = type { i32, i32, %struct.archive_vtable*, i32, i8*, i32, i8*, i32, i32, i8*, %struct.archive_string, i8*, i32, i32, %struct.archive_string_conv*, i8*, i64, i64, i64, i8, i64 }
%struct.archive_vtable = type { {}*, {}*, i32 (%struct.archive*, %struct.archive_entry*)*, {}*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i64)*, i32 (%struct.archive*, %struct.archive_entry**)*, i32 (%struct.archive*, %struct.archive_entry*)*, i32 (%struct.archive*, i8**, i64*, i64*)*, {}*, i64 (%struct.archive*, i32)*, i32 (%struct.archive*, i32)*, i8* (%struct.archive*, i32)* }
%struct.archive_entry = type opaque
%struct.archive_string = type { i8*, i64, i64 }
%struct.archive_string_conv = type opaque
%struct.archive_read = type { %struct.archive, %struct.archive_entry*, i32, i64, i64, %struct.archive_read_client, [16 x %struct.archive_read_filter_bidder], %struct.archive_read_filter*, i32, i64, i32, i32, [16 x %struct.archive_format_descriptor], %struct.archive_format_descriptor*, %struct.archive_read_extract*, i32 (%struct.archive_read*)*, %struct.anon }
%struct.archive_read_client = type { i32 (%struct.archive*, i8*)*, i64 (%struct.archive*, i8*, i8**)*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i32)*, i32 (%struct.archive*, i8*)*, i32 (%struct.archive*, i8*, i8*)*, i32, i32, i64, %struct.archive_read_data_node* }
%struct.archive_read_data_node = type { i64, i64, i8* }
%struct.archive_read_filter_bidder = type { i8*, i8*, i32 (%struct.archive_read_filter_bidder*, %struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter_bidder*, i8*, i8*)*, i32 (%struct.archive_read_filter_bidder*)* }
%struct.archive_read_filter = type { i64, %struct.archive_read_filter_bidder*, %struct.archive_read_filter*, %struct.archive_read*, i32 (%struct.archive_read_filter*)*, i64 (%struct.archive_read_filter*, i8**)*, i64 (%struct.archive_read_filter*, i64)*, i64 (%struct.archive_read_filter*, i64, i32)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*, i32)*, i8*, i8*, i32, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8, i8, i8 }
%struct.archive_format_descriptor = type { i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)* }
%struct.archive_read_extract = type { %struct.archive*, void (i8*)*, i8* }
%struct.anon = type { %struct.archive_read_passphrase*, %struct.archive_read_passphrase**, i32, i8* (%struct.archive*, i8*)*, i8* }
%struct.archive_read_passphrase = type { i8*, %struct.archive_read_passphrase* }
%struct.zip = type { %struct.archive_string, i64, i64, i64, i32, %struct.zip_entry*, %struct.archive_rb_tree, %struct.archive_rb_tree, i64, %struct.zip_entry*, i64, i64, i64, i64, i64 (i64, i8*, i64)*, i8, i8, i8, i8*, i64, %struct.z_stream_s, i8, %struct.archive_string_conv*, %struct.archive_string_conv*, %struct.archive_string_conv*, i32, i32, i8, i8*, i8*, i64, i64, i64, %struct.trad_enc_ctx, i8, i32, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8* }
%struct.archive_rb_tree = type { %struct.archive_rb_node*, %struct.archive_rb_tree_ops* }
%struct.zip_entry = type { %struct.archive_rb_node, %struct.zip_entry*, i64, i64, i64, i64, i64, %struct.archive_string, i64, i64, i64, i32, i16, i16, i8, i8, i8, i8, %struct.anon.0 }
%struct.anon.0 = type { i32, i32, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.trad_enc_ctx = type { [3 x i32] }
%struct.archive_wstring = type { i32*, i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [32 x i8] c"archive_read_support_format_zip\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Can't allocate zip data\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"zip\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"archive_read_support_format_zip_seekable\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"compat-2x\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"hdrcharset\00", align 1
@.str.6 = private unnamed_addr constant [50 x i8] c"zip: hdrcharset option needs a character-set name\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"ignorecrc32\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"mac-ext\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"ZIP\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Out  of memory\00", align 1
@__archive_cryptor = external constant %struct.archive_cryptor, align 8
@__archive_hmac = external constant %struct.archive_hmac, align 8
@.str.12 = private unnamed_addr constant [26 x i8] c"Truncated ZIP file header\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"PK\03\04\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"Damaged Zip archive\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c"Can't allocate memory for Pathname\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"Pathname cannot be converted from %s to current locale.\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"Inconsistent CRC32 values\00", align 1
@.str.18 = private unnamed_addr constant [76 x i8] c"Inconsistent compressed size: %jd in central directory, %jd in local header\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"Inconsistent uncompressed size: %jd in central directory, %jd in local header\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"Zip file with oversized link entry\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"Truncated Zip file\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"Can't allocate memory for Symlink\00", align 1
@.str.23 = private unnamed_addr constant [55 x i8] c"Symlink cannot be converted from %s to current locale.\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"Read error skipping symlink target name\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"ZIP %d.%d (%s)\00", align 1
@.str.26 = private unnamed_addr constant [69 x i8] c"Too-small extra data: Need at least 4 bytes, but only found %d bytes\00", align 1
@.str.27 = private unnamed_addr constant [59 x i8] c"Extra data overflow: Need %d bytes but only found %d bytes\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"Malformed 64-bit uncompressed size\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"Malformed 64-bit compressed size\00", align 1
@.str.30 = private unnamed_addr constant [37 x i8] c"Malformed 64-bit local header offset\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"Malformed extra data: Consumed %d bytes of %d bytes\00", align 1
@compression_name.num_compression_methods = internal constant i32 23, align 4
@compression_methods = internal global [23 x %struct.anon.1] [%struct.anon.1 { i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0) }, %struct.anon.1 { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0) }, %struct.anon.1 { i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0) }, %struct.anon.1 { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0) }, %struct.anon.1 { i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0) }, %struct.anon.1 { i32 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0) }, %struct.anon.1 { i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0) }, %struct.anon.1 { i32 7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.1 { i32 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0) }, %struct.anon.1 { i32 9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i32 0, i32 0) }, %struct.anon.1 { i32 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0) }, %struct.anon.1 { i32 11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.1 { i32 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0) }, %struct.anon.1 { i32 13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.1 { i32 14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0) }, %struct.anon.1 { i32 15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.1 { i32 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.1 { i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.1 { i32 18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0) }, %struct.anon.1 { i32 19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i32 0, i32 0) }, %struct.anon.1 { i32 97, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i32 0, i32 0) }, %struct.anon.1 { i32 98, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0) }, %struct.anon.1 { i32 99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0) }], align 16
@.str.32 = private unnamed_addr constant [3 x i8] c"??\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"uncompressed\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"shrinking\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"reduced-1\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"reduced-2\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"reduced-3\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"reduced-4\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"imploded\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"reserved\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"deflation\00", align 1
@.str.42 = private unnamed_addr constant [17 x i8] c"deflation-64-bit\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"ibm-terse\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"bzip\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"lzma\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"ibm-terse-new\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"ibm-lz777\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"wav-pack\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"ppmd-1\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"aes\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"Unsupported ZIP compression method (%s)\00", align 1
@.str.52 = private unnamed_addr constant [59 x i8] c"ZIP compressed data is wrong size (read %jd, expected %jd)\00", align 1
@.str.53 = private unnamed_addr constant [62 x i8] c"ZIP uncompressed data is wrong size (read %jd, expected %jd)\0A\00", align 1
@.str.54 = private unnamed_addr constant [35 x i8] c"ZIP bad CRC: 0x%lx should be 0x%lx\00", align 1
@.str.55 = private unnamed_addr constant [42 x i8] c"Unsupported encryption format version: %u\00", align 1
@.str.56 = private unnamed_addr constant [33 x i8] c"Unknown encryption algorithm: %u\00", align 1
@.str.57 = private unnamed_addr constant [28 x i8] c"Unknown encryption flag: %u\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"Encrypted file is unsupported\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"Truncated ZIP file data\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"Corrupted ZIP file data\00", align 1
@.str.61 = private unnamed_addr constant [29 x i8] c"No memory for ZIP decryption\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"Incorrect passphrase\00", align 1
@.str.63 = private unnamed_addr constant [35 x i8] c"Passphrase required for this entry\00", align 1
@.str.64 = private unnamed_addr constant [56 x i8] c"Decryption is unsupported due to lack of crypto library\00", align 1
@.str.65 = private unnamed_addr constant [31 x i8] c"Too many incorrect passphrases\00", align 1
@.str.66 = private unnamed_addr constant [31 x i8] c"Failed to initialize HMAC-SHA1\00", align 1
@.str.67 = private unnamed_addr constant [55 x i8] c"Truncated Zip encrypted body: only %jd bytes available\00", align 1
@.str.68 = private unnamed_addr constant [30 x i8] c"Overflow of 64-bit file sizes\00", align 1
@.str.69 = private unnamed_addr constant [28 x i8] c"ZIP bad Authentication code\00", align 1
@.str.70 = private unnamed_addr constant [32 x i8] c"No memory for ZIP decompression\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"Truncated ZIP file body\00", align 1
@.str.72 = private unnamed_addr constant [36 x i8] c"Out of memory for ZIP decompression\00", align 1
@.str.73 = private unnamed_addr constant [30 x i8] c"ZIP decompression failed (%d)\00", align 1
@.str.74 = private unnamed_addr constant [33 x i8] c"Truncated ZIP end-of-file record\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"1.2.3\00", align 1
@.str.76 = private unnamed_addr constant [36 x i8] c"Can't initialize ZIP decompression.\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"PK\05\06\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"PK\06\07\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"PK\01\02\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"PK\06\06\00", align 1
@rb_ops = internal constant %struct.archive_rb_tree_ops { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)* @cmp_node, i32 (%struct.archive_rb_node*, i8*)* @cmp_key }, align 8
@rb_rsrc_ops = internal constant %struct.archive_rb_tree_ops { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)* @rsrc_cmp_node, i32 (%struct.archive_rb_node*, i8*)* @rsrc_cmp_key }, align 8
@.str.81 = private unnamed_addr constant [36 x i8] c"Invalid central directory signature\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"__MACOSX/\00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c"._\00", align 1
@.str.84 = private unnamed_addr constant [49 x i8] c"Malformed OS X metadata entry: inconsistent size\00", align 1
@.str.85 = private unnamed_addr constant [42 x i8] c"Mac metadata is too large: %jd > 4M bytes\00", align 1
@.str.86 = private unnamed_addr constant [39 x i8] c"Can't allocate memory for Mac metadata\00", align 1

; Function Attrs: nounwind uwtable
define i32 @archive_read_support_format_zip(%struct.archive* %a) #0 !dbg !474 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive*, align 8
  %r = alloca i32, align 4
  store %struct.archive* %a, %struct.archive** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive** %a.addr, metadata !577, metadata !578), !dbg !579
  call void @llvm.dbg.declare(metadata i32* %r, metadata !580, metadata !578), !dbg !581
  %0 = load %struct.archive*, %struct.archive** %a.addr, align 8, !dbg !582
  %call = call i32 @archive_read_support_format_zip_streamable(%struct.archive* %0), !dbg !583
  store i32 %call, i32* %r, align 4, !dbg !584
  %1 = load i32, i32* %r, align 4, !dbg !585
  %cmp = icmp ne i32 %1, 0, !dbg !587
  br i1 %cmp, label %if.then, label %if.end, !dbg !588

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %r, align 4, !dbg !589
  store i32 %2, i32* %retval, align 4, !dbg !590
  br label %return, !dbg !590

if.end:                                           ; preds = %entry
  %3 = load %struct.archive*, %struct.archive** %a.addr, align 8, !dbg !591
  %call1 = call i32 @archive_read_support_format_zip_seekable(%struct.archive* %3), !dbg !592
  store i32 %call1, i32* %retval, align 4, !dbg !593
  br label %return, !dbg !593

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !594
  ret i32 %4, !dbg !594
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @archive_read_support_format_zip_streamable(%struct.archive* %_a) #0 !dbg !475 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive*, align 8
  %a = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %r = alloca i32, align 4
  %magic_test = alloca i32, align 4
  store %struct.archive* %_a, %struct.archive** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive** %_a.addr, metadata !595, metadata !578), !dbg !596
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a, metadata !597, metadata !578), !dbg !598
  %0 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !599
  %1 = bitcast %struct.archive* %0 to %struct.archive_read*, !dbg !600
  store %struct.archive_read* %1, %struct.archive_read** %a, align 8, !dbg !598
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !601, metadata !578), !dbg !602
  call void @llvm.dbg.declare(metadata i32* %r, metadata !603, metadata !578), !dbg !604
  br label %do.body, !dbg !605

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %magic_test, metadata !606, metadata !578), !dbg !608
  %2 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !609
  %call = call i32 @__archive_check_magic(%struct.archive* %2, i32 14594245, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0)), !dbg !609
  store i32 %call, i32* %magic_test, align 4, !dbg !609
  %3 = load i32, i32* %magic_test, align 4, !dbg !609
  %cmp = icmp eq i32 %3, -30, !dbg !609
  br i1 %cmp, label %if.then, label %if.end, !dbg !609

if.then:                                          ; preds = %do.body
  store i32 -30, i32* %retval, align 4, !dbg !611
  br label %return, !dbg !611

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !614

do.end:                                           ; preds = %if.end
  %call1 = call noalias i8* @calloc(i64 1, i64 464) #8, !dbg !616
  %4 = bitcast i8* %call1 to %struct.zip*, !dbg !617
  store %struct.zip* %4, %struct.zip** %zip, align 8, !dbg !618
  %5 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !619
  %cmp2 = icmp eq %struct.zip* %5, null, !dbg !621
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !622

if.then3:                                         ; preds = %do.end
  %6 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !623
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 0, !dbg !625
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !626
  store i32 -30, i32* %retval, align 4, !dbg !627
  br label %return, !dbg !627

if.end4:                                          ; preds = %do.end
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !628
  %process_mac_extensions = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 26, !dbg !629
  store i32 0, i32* %process_mac_extensions, align 4, !dbg !630
  %8 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !631
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 4, !dbg !632
  store i32 -1, i32* %has_encrypted_entries, align 8, !dbg !633
  %9 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !634
  %crc32func = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 14, !dbg !635
  store i64 (i64, i8*, i64)* @real_crc32, i64 (i64, i8*, i64)** %crc32func, align 8, !dbg !636
  %10 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !637
  %11 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !638
  %12 = bitcast %struct.zip* %11 to i8*, !dbg !638
  %call5 = call i32 @__archive_read_register_format(%struct.archive_read* %10, i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.archive_read*, i32)* @archive_read_format_zip_streamable_bid, i32 (%struct.archive_read*, i8*, i8*)* @archive_read_format_zip_options, i32 (%struct.archive_read*, %struct.archive_entry*)* @archive_read_format_zip_streamable_read_header, i32 (%struct.archive_read*, i8**, i64*, i64*)* @archive_read_format_zip_read_data, i32 (%struct.archive_read*)* @archive_read_format_zip_read_data_skip_streamable, i64 (%struct.archive_read*, i64, i32)* null, i32 (%struct.archive_read*)* @archive_read_format_zip_cleanup, i32 (%struct.archive_read*)* @archive_read_support_format_zip_capabilities_streamable, i32 (%struct.archive_read*)* @archive_read_format_zip_has_encrypted_entries), !dbg !639
  store i32 %call5, i32* %r, align 4, !dbg !640
  %13 = load i32, i32* %r, align 4, !dbg !641
  %cmp6 = icmp ne i32 %13, 0, !dbg !643
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !644

if.then7:                                         ; preds = %if.end4
  %14 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !645
  %15 = bitcast %struct.zip* %14 to i8*, !dbg !645
  call void @free(i8* %15) #8, !dbg !646
  br label %if.end8, !dbg !646

if.end8:                                          ; preds = %if.then7, %if.end4
  store i32 0, i32* %retval, align 4, !dbg !647
  br label %return, !dbg !647

return:                                           ; preds = %if.end8, %if.then3, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !648
  ret i32 %16, !dbg !648
}

; Function Attrs: nounwind uwtable
define i32 @archive_read_support_format_zip_seekable(%struct.archive* %_a) #0 !dbg !476 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive*, align 8
  %a = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %r = alloca i32, align 4
  %magic_test = alloca i32, align 4
  store %struct.archive* %_a, %struct.archive** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive** %_a.addr, metadata !649, metadata !578), !dbg !650
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a, metadata !651, metadata !578), !dbg !652
  %0 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !653
  %1 = bitcast %struct.archive* %0 to %struct.archive_read*, !dbg !654
  store %struct.archive_read* %1, %struct.archive_read** %a, align 8, !dbg !652
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !655, metadata !578), !dbg !656
  call void @llvm.dbg.declare(metadata i32* %r, metadata !657, metadata !578), !dbg !658
  br label %do.body, !dbg !659

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %magic_test, metadata !660, metadata !578), !dbg !662
  %2 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !663
  %call = call i32 @__archive_check_magic(%struct.archive* %2, i32 14594245, i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0)), !dbg !663
  store i32 %call, i32* %magic_test, align 4, !dbg !663
  %3 = load i32, i32* %magic_test, align 4, !dbg !663
  %cmp = icmp eq i32 %3, -30, !dbg !663
  br i1 %cmp, label %if.then, label %if.end, !dbg !663

if.then:                                          ; preds = %do.body
  store i32 -30, i32* %retval, align 4, !dbg !665
  br label %return, !dbg !665

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !668

do.end:                                           ; preds = %if.end
  %call1 = call noalias i8* @calloc(i64 1, i64 464) #8, !dbg !670
  %4 = bitcast i8* %call1 to %struct.zip*, !dbg !671
  store %struct.zip* %4, %struct.zip** %zip, align 8, !dbg !672
  %5 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !673
  %cmp2 = icmp eq %struct.zip* %5, null, !dbg !675
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !676

if.then3:                                         ; preds = %do.end
  %6 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !677
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 0, !dbg !679
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !680
  store i32 -30, i32* %retval, align 4, !dbg !681
  br label %return, !dbg !681

if.end4:                                          ; preds = %do.end
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !682
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 4, !dbg !683
  store i32 -1, i32* %has_encrypted_entries, align 8, !dbg !684
  %8 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !685
  %crc32func = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 14, !dbg !686
  store i64 (i64, i8*, i64)* @real_crc32, i64 (i64, i8*, i64)** %crc32func, align 8, !dbg !687
  %9 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !688
  %10 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !689
  %11 = bitcast %struct.zip* %10 to i8*, !dbg !689
  %call5 = call i32 @__archive_read_register_format(%struct.archive_read* %9, i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.archive_read*, i32)* @archive_read_format_zip_seekable_bid, i32 (%struct.archive_read*, i8*, i8*)* @archive_read_format_zip_options, i32 (%struct.archive_read*, %struct.archive_entry*)* @archive_read_format_zip_seekable_read_header, i32 (%struct.archive_read*, i8**, i64*, i64*)* @archive_read_format_zip_read_data, i32 (%struct.archive_read*)* @archive_read_format_zip_read_data_skip_seekable, i64 (%struct.archive_read*, i64, i32)* null, i32 (%struct.archive_read*)* @archive_read_format_zip_cleanup, i32 (%struct.archive_read*)* @archive_read_support_format_zip_capabilities_seekable, i32 (%struct.archive_read*)* @archive_read_format_zip_has_encrypted_entries), !dbg !690
  store i32 %call5, i32* %r, align 4, !dbg !691
  %12 = load i32, i32* %r, align 4, !dbg !692
  %cmp6 = icmp ne i32 %12, 0, !dbg !694
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !695

if.then7:                                         ; preds = %if.end4
  %13 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !696
  %14 = bitcast %struct.zip* %13 to i8*, !dbg !696
  call void @free(i8* %14) #8, !dbg !697
  br label %if.end8, !dbg !697

if.end8:                                          ; preds = %if.then7, %if.end4
  store i32 0, i32* %retval, align 4, !dbg !698
  br label %return, !dbg !698

return:                                           ; preds = %if.end8, %if.then3, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !699
  ret i32 %15, !dbg !699
}

declare i32 @__archive_check_magic(%struct.archive*, i32, i32, i8*) #2

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

declare void @archive_set_error(%struct.archive*, i32, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i64 @real_crc32(i64 %crc, i8* %buff, i64 %len) #0 !dbg !477 {
entry:
  %crc.addr = alloca i64, align 8
  %buff.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i64 %crc, i64* %crc.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %crc.addr, metadata !700, metadata !578), !dbg !701
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !702, metadata !578), !dbg !703
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !704, metadata !578), !dbg !705
  %0 = load i64, i64* %crc.addr, align 8, !dbg !706
  %1 = load i8*, i8** %buff.addr, align 8, !dbg !707
  %2 = load i64, i64* %len.addr, align 8, !dbg !708
  %conv = trunc i64 %2 to i32, !dbg !709
  %call = call i64 @cm_zlib_crc32(i64 %0, i8* %1, i32 %conv), !dbg !710
  ret i64 %call, !dbg !711
}

declare i32 @__archive_read_register_format(%struct.archive_read*, i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_streamable_bid(%struct.archive_read* %a, i32 %best_bid) #0 !dbg !478 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %best_bid.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !712, metadata !578), !dbg !713
  store i32 %best_bid, i32* %best_bid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %best_bid.addr, metadata !714, metadata !578), !dbg !715
  call void @llvm.dbg.declare(metadata i8** %p, metadata !716, metadata !578), !dbg !717
  %0 = load i32, i32* %best_bid.addr, align 4, !dbg !718
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !719
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %1, i64 4, i64* null), !dbg !721
  store i8* %call, i8** %p, align 8, !dbg !722
  %cmp = icmp eq i8* %call, null, !dbg !723
  br i1 %cmp, label %if.then, label %if.end, !dbg !724

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !726
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !726
  %3 = load i8, i8* %arrayidx, align 1, !dbg !726
  %conv = sext i8 %3 to i32, !dbg !726
  %cmp1 = icmp eq i32 %conv, 80, !dbg !728
  br i1 %cmp1, label %land.lhs.true, label %if.end68, !dbg !729

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8*, i8** %p, align 8, !dbg !730
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !730
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !730
  %conv4 = sext i8 %5 to i32, !dbg !730
  %cmp5 = icmp eq i32 %conv4, 75, !dbg !732
  br i1 %cmp5, label %if.then7, label %if.end68, !dbg !733

if.then7:                                         ; preds = %land.lhs.true
  %6 = load i8*, i8** %p, align 8, !dbg !734
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !734
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !734
  %conv9 = sext i8 %7 to i32, !dbg !734
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !737
  br i1 %cmp10, label %land.lhs.true12, label %lor.lhs.false, !dbg !738

land.lhs.true12:                                  ; preds = %if.then7
  %8 = load i8*, i8** %p, align 8, !dbg !739
  %arrayidx13 = getelementptr inbounds i8, i8* %8, i64 3, !dbg !739
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !739
  %conv14 = sext i8 %9 to i32, !dbg !739
  %cmp15 = icmp eq i32 %conv14, 2, !dbg !741
  br i1 %cmp15, label %if.then66, label %lor.lhs.false, !dbg !742

lor.lhs.false:                                    ; preds = %land.lhs.true12, %if.then7
  %10 = load i8*, i8** %p, align 8, !dbg !743
  %arrayidx17 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !743
  %11 = load i8, i8* %arrayidx17, align 1, !dbg !743
  %conv18 = sext i8 %11 to i32, !dbg !743
  %cmp19 = icmp eq i32 %conv18, 3, !dbg !744
  br i1 %cmp19, label %land.lhs.true21, label %lor.lhs.false26, !dbg !745

land.lhs.true21:                                  ; preds = %lor.lhs.false
  %12 = load i8*, i8** %p, align 8, !dbg !746
  %arrayidx22 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !746
  %13 = load i8, i8* %arrayidx22, align 1, !dbg !746
  %conv23 = sext i8 %13 to i32, !dbg !746
  %cmp24 = icmp eq i32 %conv23, 4, !dbg !748
  br i1 %cmp24, label %if.then66, label %lor.lhs.false26, !dbg !749

lor.lhs.false26:                                  ; preds = %land.lhs.true21, %lor.lhs.false
  %14 = load i8*, i8** %p, align 8, !dbg !750
  %arrayidx27 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !750
  %15 = load i8, i8* %arrayidx27, align 1, !dbg !750
  %conv28 = sext i8 %15 to i32, !dbg !750
  %cmp29 = icmp eq i32 %conv28, 5, !dbg !751
  br i1 %cmp29, label %land.lhs.true31, label %lor.lhs.false36, !dbg !752

land.lhs.true31:                                  ; preds = %lor.lhs.false26
  %16 = load i8*, i8** %p, align 8, !dbg !753
  %arrayidx32 = getelementptr inbounds i8, i8* %16, i64 3, !dbg !753
  %17 = load i8, i8* %arrayidx32, align 1, !dbg !753
  %conv33 = sext i8 %17 to i32, !dbg !753
  %cmp34 = icmp eq i32 %conv33, 6, !dbg !754
  br i1 %cmp34, label %if.then66, label %lor.lhs.false36, !dbg !755

lor.lhs.false36:                                  ; preds = %land.lhs.true31, %lor.lhs.false26
  %18 = load i8*, i8** %p, align 8, !dbg !756
  %arrayidx37 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !756
  %19 = load i8, i8* %arrayidx37, align 1, !dbg !756
  %conv38 = sext i8 %19 to i32, !dbg !756
  %cmp39 = icmp eq i32 %conv38, 6, !dbg !757
  br i1 %cmp39, label %land.lhs.true41, label %lor.lhs.false46, !dbg !758

land.lhs.true41:                                  ; preds = %lor.lhs.false36
  %20 = load i8*, i8** %p, align 8, !dbg !759
  %arrayidx42 = getelementptr inbounds i8, i8* %20, i64 3, !dbg !759
  %21 = load i8, i8* %arrayidx42, align 1, !dbg !759
  %conv43 = sext i8 %21 to i32, !dbg !759
  %cmp44 = icmp eq i32 %conv43, 6, !dbg !760
  br i1 %cmp44, label %if.then66, label %lor.lhs.false46, !dbg !761

lor.lhs.false46:                                  ; preds = %land.lhs.true41, %lor.lhs.false36
  %22 = load i8*, i8** %p, align 8, !dbg !762
  %arrayidx47 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !762
  %23 = load i8, i8* %arrayidx47, align 1, !dbg !762
  %conv48 = sext i8 %23 to i32, !dbg !762
  %cmp49 = icmp eq i32 %conv48, 7, !dbg !763
  br i1 %cmp49, label %land.lhs.true51, label %lor.lhs.false56, !dbg !764

land.lhs.true51:                                  ; preds = %lor.lhs.false46
  %24 = load i8*, i8** %p, align 8, !dbg !765
  %arrayidx52 = getelementptr inbounds i8, i8* %24, i64 3, !dbg !765
  %25 = load i8, i8* %arrayidx52, align 1, !dbg !765
  %conv53 = sext i8 %25 to i32, !dbg !765
  %cmp54 = icmp eq i32 %conv53, 8, !dbg !766
  br i1 %cmp54, label %if.then66, label %lor.lhs.false56, !dbg !767

lor.lhs.false56:                                  ; preds = %land.lhs.true51, %lor.lhs.false46
  %26 = load i8*, i8** %p, align 8, !dbg !768
  %arrayidx57 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !768
  %27 = load i8, i8* %arrayidx57, align 1, !dbg !768
  %conv58 = sext i8 %27 to i32, !dbg !768
  %cmp59 = icmp eq i32 %conv58, 48, !dbg !769
  br i1 %cmp59, label %land.lhs.true61, label %if.end67, !dbg !770

land.lhs.true61:                                  ; preds = %lor.lhs.false56
  %28 = load i8*, i8** %p, align 8, !dbg !771
  %arrayidx62 = getelementptr inbounds i8, i8* %28, i64 3, !dbg !771
  %29 = load i8, i8* %arrayidx62, align 1, !dbg !771
  %conv63 = sext i8 %29 to i32, !dbg !771
  %cmp64 = icmp eq i32 %conv63, 48, !dbg !772
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !773

if.then66:                                        ; preds = %land.lhs.true61, %land.lhs.true51, %land.lhs.true41, %land.lhs.true31, %land.lhs.true21, %land.lhs.true12
  store i32 29, i32* %retval, align 4, !dbg !775
  br label %return, !dbg !775

if.end67:                                         ; preds = %land.lhs.true61, %lor.lhs.false56
  br label %if.end68, !dbg !776

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !777
  br label %return, !dbg !777

return:                                           ; preds = %if.end68, %if.then66, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !778
  ret i32 %30, !dbg !778
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_options(%struct.archive_read* %a, i8* %key, i8* %val) #0 !dbg !479 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %key.addr = alloca i8*, align 8
  %val.addr = alloca i8*, align 8
  %zip = alloca %struct.zip*, align 8
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !779, metadata !578), !dbg !780
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !781, metadata !578), !dbg !782
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !783, metadata !578), !dbg !784
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !785, metadata !578), !dbg !786
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !787, metadata !578), !dbg !788
  store i32 -25, i32* %ret, align 4, !dbg !788
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !789
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !790
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !790
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !791
  %2 = load i8*, i8** %data, align 8, !dbg !791
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !792
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !793
  %4 = load i8*, i8** %key.addr, align 8, !dbg !794
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0)) #9, !dbg !796
  %cmp = icmp eq i32 %call, 0, !dbg !797
  br i1 %cmp, label %if.then, label %if.else, !dbg !798

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %val.addr, align 8, !dbg !799
  %cmp1 = icmp ne i8* %5, null, !dbg !801
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !802
  %6 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !803
  %init_default_conversion = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 25, !dbg !804
  store i32 %cond, i32* %init_default_conversion, align 8, !dbg !805
  store i32 0, i32* %retval, align 4, !dbg !806
  br label %return, !dbg !806

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %key.addr, align 8, !dbg !807
  %call2 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0)) #9, !dbg !809
  %cmp3 = icmp eq i32 %call2, 0, !dbg !810
  br i1 %cmp3, label %if.then4, label %if.else24, !dbg !811

if.then4:                                         ; preds = %if.else
  %8 = load i8*, i8** %val.addr, align 8, !dbg !812
  %cmp5 = icmp eq i8* %8, null, !dbg !815
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !816

lor.lhs.false:                                    ; preds = %if.then4
  %9 = load i8*, i8** %val.addr, align 8, !dbg !817
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !817
  %10 = load i8, i8* %arrayidx, align 1, !dbg !817
  %conv = sext i8 %10 to i32, !dbg !817
  %cmp6 = icmp eq i32 %conv, 0, !dbg !819
  br i1 %cmp6, label %if.then8, label %if.else9, !dbg !820

if.then8:                                         ; preds = %lor.lhs.false, %if.then4
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !821
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !822
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i32 0, i32 0)), !dbg !823
  br label %if.end23, !dbg !823

if.else9:                                         ; preds = %lor.lhs.false
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !824
  %archive10 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %12, i32 0, i32 0, !dbg !826
  %13 = load i8*, i8** %val.addr, align 8, !dbg !827
  %call11 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive10, i8* %13, i32 0), !dbg !828
  %14 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !829
  %sconv = getelementptr inbounds %struct.zip, %struct.zip* %14, i32 0, i32 22, !dbg !830
  store %struct.archive_string_conv* %call11, %struct.archive_string_conv** %sconv, align 8, !dbg !831
  %15 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !832
  %sconv12 = getelementptr inbounds %struct.zip, %struct.zip* %15, i32 0, i32 22, !dbg !834
  %16 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv12, align 8, !dbg !834
  %cmp13 = icmp ne %struct.archive_string_conv* %16, null, !dbg !835
  br i1 %cmp13, label %if.then15, label %if.else21, !dbg !836

if.then15:                                        ; preds = %if.else9
  %17 = load i8*, i8** %val.addr, align 8, !dbg !837
  %call16 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0)) #9, !dbg !840
  %cmp17 = icmp eq i32 %call16, 0, !dbg !841
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !842

if.then19:                                        ; preds = %if.then15
  %18 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !843
  %sconv20 = getelementptr inbounds %struct.zip, %struct.zip* %18, i32 0, i32 22, !dbg !844
  %19 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv20, align 8, !dbg !844
  %20 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !845
  %sconv_utf8 = getelementptr inbounds %struct.zip, %struct.zip* %20, i32 0, i32 24, !dbg !846
  store %struct.archive_string_conv* %19, %struct.archive_string_conv** %sconv_utf8, align 8, !dbg !847
  br label %if.end, !dbg !845

if.end:                                           ; preds = %if.then19, %if.then15
  store i32 0, i32* %ret, align 4, !dbg !848
  br label %if.end22, !dbg !849

if.else21:                                        ; preds = %if.else9
  store i32 -30, i32* %ret, align 4, !dbg !850
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.end
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then8
  %21 = load i32, i32* %ret, align 4, !dbg !851
  store i32 %21, i32* %retval, align 4, !dbg !852
  br label %return, !dbg !852

if.else24:                                        ; preds = %if.else
  %22 = load i8*, i8** %key.addr, align 8, !dbg !853
  %call25 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0)) #9, !dbg !855
  %cmp26 = icmp eq i32 %call25, 0, !dbg !856
  br i1 %cmp26, label %if.then28, label %if.else41, !dbg !857

if.then28:                                        ; preds = %if.else24
  %23 = load i8*, i8** %val.addr, align 8, !dbg !858
  %cmp29 = icmp eq i8* %23, null, !dbg !861
  br i1 %cmp29, label %if.then36, label %lor.lhs.false31, !dbg !862

lor.lhs.false31:                                  ; preds = %if.then28
  %24 = load i8*, i8** %val.addr, align 8, !dbg !863
  %arrayidx32 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !863
  %25 = load i8, i8* %arrayidx32, align 1, !dbg !863
  %conv33 = sext i8 %25 to i32, !dbg !863
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !865
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !866

if.then36:                                        ; preds = %lor.lhs.false31, %if.then28
  %26 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !867
  %crc32func = getelementptr inbounds %struct.zip, %struct.zip* %26, i32 0, i32 14, !dbg !869
  store i64 (i64, i8*, i64)* @real_crc32, i64 (i64, i8*, i64)** %crc32func, align 8, !dbg !870
  %27 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !871
  %ignore_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %27, i32 0, i32 15, !dbg !872
  store i8 0, i8* %ignore_crc32, align 8, !dbg !873
  br label %if.end40, !dbg !874

if.else37:                                        ; preds = %lor.lhs.false31
  %28 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !875
  %crc32func38 = getelementptr inbounds %struct.zip, %struct.zip* %28, i32 0, i32 14, !dbg !877
  store i64 (i64, i8*, i64)* @fake_crc32, i64 (i64, i8*, i64)** %crc32func38, align 8, !dbg !878
  %29 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !879
  %ignore_crc3239 = getelementptr inbounds %struct.zip, %struct.zip* %29, i32 0, i32 15, !dbg !880
  store i8 1, i8* %ignore_crc3239, align 8, !dbg !881
  br label %if.end40

if.end40:                                         ; preds = %if.else37, %if.then36
  store i32 0, i32* %retval, align 4, !dbg !882
  br label %return, !dbg !882

if.else41:                                        ; preds = %if.else24
  %30 = load i8*, i8** %key.addr, align 8, !dbg !883
  %call42 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #9, !dbg !885
  %cmp43 = icmp eq i32 %call42, 0, !dbg !886
  br i1 %cmp43, label %if.then45, label %if.end52, !dbg !887

if.then45:                                        ; preds = %if.else41
  %31 = load i8*, i8** %val.addr, align 8, !dbg !888
  %cmp46 = icmp ne i8* %31, null, !dbg !890
  br i1 %cmp46, label %land.rhs, label %land.end, !dbg !891

land.rhs:                                         ; preds = %if.then45
  %32 = load i8*, i8** %val.addr, align 8, !dbg !892
  %arrayidx48 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !892
  %33 = load i8, i8* %arrayidx48, align 1, !dbg !892
  %conv49 = sext i8 %33 to i32, !dbg !892
  %cmp50 = icmp ne i32 %conv49, 0, !dbg !894
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then45
  %34 = phi i1 [ false, %if.then45 ], [ %cmp50, %land.rhs ]
  %land.ext = zext i1 %34 to i32, !dbg !895
  %35 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !897
  %process_mac_extensions = getelementptr inbounds %struct.zip, %struct.zip* %35, i32 0, i32 26, !dbg !898
  store i32 %land.ext, i32* %process_mac_extensions, align 4, !dbg !899
  store i32 0, i32* %retval, align 4, !dbg !900
  br label %return, !dbg !900

if.end52:                                         ; preds = %if.else41
  br label %if.end53

if.end53:                                         ; preds = %if.end52
  br label %if.end54

if.end54:                                         ; preds = %if.end53
  br label %if.end55

if.end55:                                         ; preds = %if.end54
  store i32 -20, i32* %retval, align 4, !dbg !901
  br label %return, !dbg !901

return:                                           ; preds = %if.end55, %land.end, %if.end40, %if.end23, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !902
  ret i32 %36, !dbg !902
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_streamable_read_header(%struct.archive_read* %a, %struct.archive_entry* %entry1) #0 !dbg !481 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %zip = alloca %struct.zip*, align 8
  %skipped = alloca i64, align 8
  %p = alloca i8*, align 8
  %end = alloca i8*, align 8
  %bytes = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !903, metadata !578), !dbg !904
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !905, metadata !578), !dbg !906
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !907, metadata !578), !dbg !908
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !909
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 0, !dbg !910
  %archive_format = getelementptr inbounds %struct.archive, %struct.archive* %archive, i32 0, i32 3, !dbg !911
  store i32 327680, i32* %archive_format, align 8, !dbg !912
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !913
  %archive2 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 0, !dbg !915
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive2, i32 0, i32 4, !dbg !916
  %2 = load i8*, i8** %archive_format_name, align 8, !dbg !916
  %cmp = icmp eq i8* %2, null, !dbg !917
  br i1 %cmp, label %if.then, label %if.end, !dbg !918

if.then:                                          ; preds = %entry
  %3 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !919
  %archive3 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %3, i32 0, i32 0, !dbg !920
  %archive_format_name4 = getelementptr inbounds %struct.archive, %struct.archive* %archive3, i32 0, i32 4, !dbg !921
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8** %archive_format_name4, align 8, !dbg !922
  br label %if.end, !dbg !919

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !923
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %4, i32 0, i32 13, !dbg !924
  %5 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !924
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %5, i32 0, i32 0, !dbg !925
  %6 = load i8*, i8** %data, align 8, !dbg !925
  %7 = bitcast i8* %6 to %struct.zip*, !dbg !926
  store %struct.zip* %7, %struct.zip** %zip, align 8, !dbg !927
  %8 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !928
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 4, !dbg !930
  %9 = load i32, i32* %has_encrypted_entries, align 8, !dbg !930
  %cmp5 = icmp eq i32 %9, -1, !dbg !931
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !932

if.then6:                                         ; preds = %if.end
  %10 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !933
  %has_encrypted_entries7 = getelementptr inbounds %struct.zip, %struct.zip* %10, i32 0, i32 4, !dbg !934
  store i32 0, i32* %has_encrypted_entries7, align 8, !dbg !935
  br label %if.end8, !dbg !933

if.end8:                                          ; preds = %if.then6, %if.end
  %11 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !936
  %zip_entries = getelementptr inbounds %struct.zip, %struct.zip* %11, i32 0, i32 5, !dbg !938
  %12 = load %struct.zip_entry*, %struct.zip_entry** %zip_entries, align 8, !dbg !938
  %cmp9 = icmp eq %struct.zip_entry* %12, null, !dbg !939
  br i1 %cmp9, label %if.then10, label %if.end17, !dbg !940

if.then10:                                        ; preds = %if.end8
  %call = call noalias i8* @malloc(i64 144) #8, !dbg !941
  %13 = bitcast i8* %call to %struct.zip_entry*, !dbg !941
  %14 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !943
  %zip_entries11 = getelementptr inbounds %struct.zip, %struct.zip* %14, i32 0, i32 5, !dbg !944
  store %struct.zip_entry* %13, %struct.zip_entry** %zip_entries11, align 8, !dbg !945
  %15 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !946
  %zip_entries12 = getelementptr inbounds %struct.zip, %struct.zip* %15, i32 0, i32 5, !dbg !948
  %16 = load %struct.zip_entry*, %struct.zip_entry** %zip_entries12, align 8, !dbg !948
  %cmp13 = icmp eq %struct.zip_entry* %16, null, !dbg !949
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !950

if.then14:                                        ; preds = %if.then10
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !951
  %archive15 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %17, i32 0, i32 0, !dbg !953
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive15, i32 12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0)), !dbg !954
  store i32 -30, i32* %retval, align 4, !dbg !955
  br label %return, !dbg !955

if.end16:                                         ; preds = %if.then10
  br label %if.end17, !dbg !956

if.end17:                                         ; preds = %if.end16, %if.end8
  %18 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !957
  %zip_entries18 = getelementptr inbounds %struct.zip, %struct.zip* %18, i32 0, i32 5, !dbg !958
  %19 = load %struct.zip_entry*, %struct.zip_entry** %zip_entries18, align 8, !dbg !958
  %20 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !959
  %entry19 = getelementptr inbounds %struct.zip, %struct.zip* %20, i32 0, i32 9, !dbg !960
  store %struct.zip_entry* %19, %struct.zip_entry** %entry19, align 8, !dbg !961
  %21 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !962
  %entry20 = getelementptr inbounds %struct.zip, %struct.zip* %21, i32 0, i32 9, !dbg !963
  %22 = load %struct.zip_entry*, %struct.zip_entry** %entry20, align 8, !dbg !963
  %23 = bitcast %struct.zip_entry* %22 to i8*, !dbg !964
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 144, i32 8, i1 false), !dbg !964
  %24 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !965
  %cctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %24, i32 0, i32 36, !dbg !967
  %25 = load i8, i8* %cctx_valid, align 4, !dbg !967
  %tobool = icmp ne i8 %25, 0, !dbg !965
  br i1 %tobool, label %if.then21, label %if.end23, !dbg !968

if.then21:                                        ; preds = %if.end17
  %26 = load i32 (i32*)*, i32 (i32*)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 3), align 8, !dbg !969
  %27 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !969
  %cctx = getelementptr inbounds %struct.zip, %struct.zip* %27, i32 0, i32 35, !dbg !969
  %call22 = call i32 %26(i32* %cctx), !dbg !969
  br label %if.end23, !dbg !969

if.end23:                                         ; preds = %if.then21, %if.end17
  %28 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !970
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %28, i32 0, i32 38, !dbg !972
  %29 = load i8, i8* %hctx_valid, align 4, !dbg !972
  %tobool24 = icmp ne i8 %29, 0, !dbg !970
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !973

if.then25:                                        ; preds = %if.end23
  %30 = load void (i32*)*, void (i32*)** getelementptr inbounds (%struct.archive_hmac, %struct.archive_hmac* @__archive_hmac, i32 0, i32 3), align 8, !dbg !974
  %31 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !974
  %hctx = getelementptr inbounds %struct.zip, %struct.zip* %31, i32 0, i32 37, !dbg !974
  call void %30(i32* %hctx), !dbg !974
  br label %if.end26, !dbg !974

if.end26:                                         ; preds = %if.then25, %if.end23
  %32 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !975
  %hctx_valid27 = getelementptr inbounds %struct.zip, %struct.zip* %32, i32 0, i32 38, !dbg !976
  store i8 0, i8* %hctx_valid27, align 4, !dbg !977
  %33 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !978
  %cctx_valid28 = getelementptr inbounds %struct.zip, %struct.zip* %33, i32 0, i32 36, !dbg !979
  store i8 0, i8* %cctx_valid28, align 4, !dbg !980
  %34 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !981
  %tctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %34, i32 0, i32 34, !dbg !982
  store i8 0, i8* %tctx_valid, align 4, !dbg !983
  %35 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !984
  call void @__archive_read_reset_passphrase(%struct.archive_read* %35), !dbg !985
  %36 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !986
  %37 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !987
  %unconsumed = getelementptr inbounds %struct.zip, %struct.zip* %37, i32 0, i32 8, !dbg !988
  %38 = load i64, i64* %unconsumed, align 8, !dbg !988
  %call29 = call i64 @__archive_read_consume(%struct.archive_read* %36, i64 %38), !dbg !989
  %39 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !990
  %unconsumed30 = getelementptr inbounds %struct.zip, %struct.zip* %39, i32 0, i32 8, !dbg !991
  store i64 0, i64* %unconsumed30, align 8, !dbg !992
  br label %for.cond, !dbg !993

for.cond:                                         ; preds = %while.end, %if.end26
  call void @llvm.dbg.declare(metadata i64* %skipped, metadata !994, metadata !578), !dbg !998
  store i64 0, i64* %skipped, align 8, !dbg !998
  call void @llvm.dbg.declare(metadata i8** %p, metadata !999, metadata !578), !dbg !1000
  call void @llvm.dbg.declare(metadata i8** %end, metadata !1001, metadata !578), !dbg !1002
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !1003, metadata !578), !dbg !1004
  %40 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1005
  %call31 = call i8* @__archive_read_ahead(%struct.archive_read* %40, i64 4, i64* %bytes), !dbg !1006
  store i8* %call31, i8** %p, align 8, !dbg !1007
  %41 = load i8*, i8** %p, align 8, !dbg !1008
  %cmp32 = icmp eq i8* %41, null, !dbg !1010
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !1011

if.then33:                                        ; preds = %for.cond
  store i32 -30, i32* %retval, align 4, !dbg !1012
  br label %return, !dbg !1012

if.end34:                                         ; preds = %for.cond
  %42 = load i8*, i8** %p, align 8, !dbg !1013
  %43 = load i64, i64* %bytes, align 8, !dbg !1014
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %43, !dbg !1015
  store i8* %add.ptr, i8** %end, align 8, !dbg !1016
  br label %while.cond, !dbg !1017

while.cond:                                       ; preds = %if.end88, %if.end34
  %44 = load i8*, i8** %p, align 8, !dbg !1018
  %add.ptr35 = getelementptr inbounds i8, i8* %44, i64 4, !dbg !1020
  %45 = load i8*, i8** %end, align 8, !dbg !1021
  %cmp36 = icmp ule i8* %add.ptr35, %45, !dbg !1022
  br i1 %cmp36, label %while.body, label %while.end, !dbg !1023

while.body:                                       ; preds = %while.cond
  %46 = load i8*, i8** %p, align 8, !dbg !1024
  %arrayidx = getelementptr inbounds i8, i8* %46, i64 0, !dbg !1024
  %47 = load i8, i8* %arrayidx, align 1, !dbg !1024
  %conv = sext i8 %47 to i32, !dbg !1024
  %cmp37 = icmp eq i32 %conv, 80, !dbg !1027
  br i1 %cmp37, label %land.lhs.true, label %if.end88, !dbg !1028

land.lhs.true:                                    ; preds = %while.body
  %48 = load i8*, i8** %p, align 8, !dbg !1029
  %arrayidx39 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !1029
  %49 = load i8, i8* %arrayidx39, align 1, !dbg !1029
  %conv40 = sext i8 %49 to i32, !dbg !1029
  %cmp41 = icmp eq i32 %conv40, 75, !dbg !1031
  br i1 %cmp41, label %if.then43, label %if.end88, !dbg !1032

if.then43:                                        ; preds = %land.lhs.true
  %50 = load i8*, i8** %p, align 8, !dbg !1033
  %arrayidx44 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !1033
  %51 = load i8, i8* %arrayidx44, align 1, !dbg !1033
  %conv45 = sext i8 %51 to i32, !dbg !1033
  %cmp46 = icmp eq i32 %conv45, 3, !dbg !1036
  br i1 %cmp46, label %land.lhs.true48, label %if.end56, !dbg !1037

land.lhs.true48:                                  ; preds = %if.then43
  %52 = load i8*, i8** %p, align 8, !dbg !1038
  %arrayidx49 = getelementptr inbounds i8, i8* %52, i64 3, !dbg !1038
  %53 = load i8, i8* %arrayidx49, align 1, !dbg !1038
  %conv50 = sext i8 %53 to i32, !dbg !1038
  %cmp51 = icmp eq i32 %conv50, 4, !dbg !1040
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !1041

if.then53:                                        ; preds = %land.lhs.true48
  %54 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1042
  %55 = load i64, i64* %skipped, align 8, !dbg !1044
  %call54 = call i64 @__archive_read_consume(%struct.archive_read* %54, i64 %55), !dbg !1045
  %56 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1046
  %57 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1047
  %58 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1048
  %call55 = call i32 @zip_read_local_file_header(%struct.archive_read* %56, %struct.archive_entry* %57, %struct.zip* %58), !dbg !1049
  store i32 %call55, i32* %retval, align 4, !dbg !1050
  br label %return, !dbg !1050

if.end56:                                         ; preds = %land.lhs.true48, %if.then43
  %59 = load i8*, i8** %p, align 8, !dbg !1051
  %arrayidx57 = getelementptr inbounds i8, i8* %59, i64 2, !dbg !1051
  %60 = load i8, i8* %arrayidx57, align 1, !dbg !1051
  %conv58 = sext i8 %60 to i32, !dbg !1051
  %cmp59 = icmp eq i32 %conv58, 1, !dbg !1053
  br i1 %cmp59, label %land.lhs.true61, label %if.end67, !dbg !1054

land.lhs.true61:                                  ; preds = %if.end56
  %61 = load i8*, i8** %p, align 8, !dbg !1055
  %arrayidx62 = getelementptr inbounds i8, i8* %61, i64 3, !dbg !1055
  %62 = load i8, i8* %arrayidx62, align 1, !dbg !1055
  %conv63 = sext i8 %62 to i32, !dbg !1055
  %cmp64 = icmp eq i32 %conv63, 2, !dbg !1057
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !1058

if.then66:                                        ; preds = %land.lhs.true61
  store i32 1, i32* %retval, align 4, !dbg !1059
  br label %return, !dbg !1059

if.end67:                                         ; preds = %land.lhs.true61, %if.end56
  %63 = load i8*, i8** %p, align 8, !dbg !1061
  %arrayidx68 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !1061
  %64 = load i8, i8* %arrayidx68, align 1, !dbg !1061
  %conv69 = sext i8 %64 to i32, !dbg !1061
  %cmp70 = icmp eq i32 %conv69, 5, !dbg !1063
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false, !dbg !1064

land.lhs.true72:                                  ; preds = %if.end67
  %65 = load i8*, i8** %p, align 8, !dbg !1065
  %arrayidx73 = getelementptr inbounds i8, i8* %65, i64 3, !dbg !1065
  %66 = load i8, i8* %arrayidx73, align 1, !dbg !1065
  %conv74 = sext i8 %66 to i32, !dbg !1065
  %cmp75 = icmp eq i32 %conv74, 6, !dbg !1067
  br i1 %cmp75, label %if.then86, label %lor.lhs.false, !dbg !1068

lor.lhs.false:                                    ; preds = %land.lhs.true72, %if.end67
  %67 = load i8*, i8** %p, align 8, !dbg !1069
  %arrayidx77 = getelementptr inbounds i8, i8* %67, i64 2, !dbg !1069
  %68 = load i8, i8* %arrayidx77, align 1, !dbg !1069
  %conv78 = sext i8 %68 to i32, !dbg !1069
  %cmp79 = icmp eq i32 %conv78, 6, !dbg !1070
  br i1 %cmp79, label %land.lhs.true81, label %if.end87, !dbg !1071

land.lhs.true81:                                  ; preds = %lor.lhs.false
  %69 = load i8*, i8** %p, align 8, !dbg !1072
  %arrayidx82 = getelementptr inbounds i8, i8* %69, i64 3, !dbg !1072
  %70 = load i8, i8* %arrayidx82, align 1, !dbg !1072
  %conv83 = sext i8 %70 to i32, !dbg !1072
  %cmp84 = icmp eq i32 %conv83, 6, !dbg !1074
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !1075

if.then86:                                        ; preds = %land.lhs.true81, %land.lhs.true72
  store i32 1, i32* %retval, align 4, !dbg !1077
  br label %return, !dbg !1077

if.end87:                                         ; preds = %land.lhs.true81, %lor.lhs.false
  br label %if.end88, !dbg !1078

if.end88:                                         ; preds = %if.end87, %land.lhs.true, %while.body
  %71 = load i8*, i8** %p, align 8, !dbg !1079
  %incdec.ptr = getelementptr inbounds i8, i8* %71, i32 1, !dbg !1079
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1079
  %72 = load i64, i64* %skipped, align 8, !dbg !1080
  %inc = add nsw i64 %72, 1, !dbg !1080
  store i64 %inc, i64* %skipped, align 8, !dbg !1080
  br label %while.cond, !dbg !1081

while.end:                                        ; preds = %while.cond
  %73 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1083
  %74 = load i64, i64* %skipped, align 8, !dbg !1084
  %call89 = call i64 @__archive_read_consume(%struct.archive_read* %73, i64 %74), !dbg !1085
  br label %for.cond, !dbg !1086

return:                                           ; preds = %if.then86, %if.then66, %if.then53, %if.then33, %if.then14
  %75 = load i32, i32* %retval, align 4, !dbg !1088
  ret i32 %75, !dbg !1088
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_read_data(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !505 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %r = alloca i32, align 4
  %zip = alloca %struct.zip*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1089, metadata !578), !dbg !1090
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !1091, metadata !578), !dbg !1092
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !1093, metadata !578), !dbg !1094
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !1095, metadata !578), !dbg !1096
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1097, metadata !578), !dbg !1098
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !1099, metadata !578), !dbg !1100
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1101
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1102
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1102
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1103
  %2 = load i8*, i8** %data, align 8, !dbg !1103
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !1104
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !1100
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1105
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 4, !dbg !1107
  %5 = load i32, i32* %has_encrypted_entries, align 8, !dbg !1107
  %cmp = icmp eq i32 %5, -1, !dbg !1108
  br i1 %cmp, label %if.then, label %if.end, !dbg !1109

if.then:                                          ; preds = %entry
  %6 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1110
  %has_encrypted_entries1 = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 4, !dbg !1112
  store i32 0, i32* %has_encrypted_entries1, align 8, !dbg !1113
  br label %if.end, !dbg !1114

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1115
  %entry_uncompressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 12, !dbg !1116
  %8 = load i64, i64* %entry_uncompressed_bytes_read, align 8, !dbg !1116
  %9 = load i64*, i64** %offset.addr, align 8, !dbg !1117
  store i64 %8, i64* %9, align 8, !dbg !1118
  %10 = load i64*, i64** %size.addr, align 8, !dbg !1119
  store i64 0, i64* %10, align 8, !dbg !1120
  %11 = load i8**, i8*** %buff.addr, align 8, !dbg !1121
  store i8* null, i8** %11, align 8, !dbg !1122
  %12 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1123
  %end_of_entry = getelementptr inbounds %struct.zip, %struct.zip* %12, i32 0, i32 17, !dbg !1125
  %13 = load i8, i8* %end_of_entry, align 2, !dbg !1125
  %tobool = icmp ne i8 %13, 0, !dbg !1123
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !1126

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !1127
  br label %return, !dbg !1127

if.end3:                                          ; preds = %if.end
  %14 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1128
  %entry4 = getelementptr inbounds %struct.zip, %struct.zip* %14, i32 0, i32 9, !dbg !1130
  %15 = load %struct.zip_entry*, %struct.zip_entry** %entry4, align 8, !dbg !1130
  %mode = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %15, i32 0, i32 12, !dbg !1131
  %16 = load i16, i16* %mode, align 4, !dbg !1131
  %conv = zext i16 %16 to i32, !dbg !1128
  %and = and i32 %conv, 61440, !dbg !1132
  %cmp5 = icmp ne i32 32768, %and, !dbg !1133
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !1134

if.then7:                                         ; preds = %if.end3
  store i32 1, i32* %retval, align 4, !dbg !1135
  br label %return, !dbg !1135

if.end8:                                          ; preds = %if.end3
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1136
  %18 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1137
  %unconsumed = getelementptr inbounds %struct.zip, %struct.zip* %18, i32 0, i32 8, !dbg !1138
  %19 = load i64, i64* %unconsumed, align 8, !dbg !1138
  %call = call i64 @__archive_read_consume(%struct.archive_read* %17, i64 %19), !dbg !1139
  %20 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1140
  %unconsumed9 = getelementptr inbounds %struct.zip, %struct.zip* %20, i32 0, i32 8, !dbg !1141
  store i64 0, i64* %unconsumed9, align 8, !dbg !1142
  %21 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1143
  %init_decryption = getelementptr inbounds %struct.zip, %struct.zip* %21, i32 0, i32 27, !dbg !1145
  %22 = load i8, i8* %init_decryption, align 8, !dbg !1145
  %tobool10 = icmp ne i8 %22, 0, !dbg !1143
  br i1 %tobool10, label %if.then11, label %if.end34, !dbg !1146

if.then11:                                        ; preds = %if.end8
  %23 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1147
  %has_encrypted_entries12 = getelementptr inbounds %struct.zip, %struct.zip* %23, i32 0, i32 4, !dbg !1149
  store i32 1, i32* %has_encrypted_entries12, align 8, !dbg !1150
  %24 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1151
  %entry13 = getelementptr inbounds %struct.zip, %struct.zip* %24, i32 0, i32 9, !dbg !1153
  %25 = load %struct.zip_entry*, %struct.zip_entry** %entry13, align 8, !dbg !1153
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %25, i32 0, i32 13, !dbg !1154
  %26 = load i16, i16* %zip_flags, align 2, !dbg !1154
  %conv14 = zext i16 %26 to i32, !dbg !1151
  %and15 = and i32 %conv14, 64, !dbg !1155
  %tobool16 = icmp ne i32 %and15, 0, !dbg !1155
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !1156

if.then17:                                        ; preds = %if.then11
  %27 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1157
  %call18 = call i32 @read_decryption_header(%struct.archive_read* %27), !dbg !1158
  store i32 %call18, i32* %r, align 4, !dbg !1159
  br label %if.end28, !dbg !1160

if.else:                                          ; preds = %if.then11
  %28 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1161
  %entry19 = getelementptr inbounds %struct.zip, %struct.zip* %28, i32 0, i32 9, !dbg !1163
  %29 = load %struct.zip_entry*, %struct.zip_entry** %entry19, align 8, !dbg !1163
  %compression = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %29, i32 0, i32 14, !dbg !1164
  %30 = load i8, i8* %compression, align 8, !dbg !1164
  %conv20 = zext i8 %30 to i32, !dbg !1161
  %cmp21 = icmp eq i32 %conv20, 99, !dbg !1165
  br i1 %cmp21, label %if.then23, label %if.else25, !dbg !1166

if.then23:                                        ; preds = %if.else
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1167
  %call24 = call i32 @init_WinZip_AES_decryption(%struct.archive_read* %31), !dbg !1168
  store i32 %call24, i32* %r, align 4, !dbg !1169
  br label %if.end27, !dbg !1170

if.else25:                                        ; preds = %if.else
  %32 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1171
  %call26 = call i32 @init_traditional_PKWARE_decryption(%struct.archive_read* %32), !dbg !1172
  store i32 %call26, i32* %r, align 4, !dbg !1173
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.then23
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %r, align 4, !dbg !1174
  %cmp29 = icmp ne i32 %33, 0, !dbg !1176
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !1177

if.then31:                                        ; preds = %if.end28
  %34 = load i32, i32* %r, align 4, !dbg !1178
  store i32 %34, i32* %retval, align 4, !dbg !1179
  br label %return, !dbg !1179

if.end32:                                         ; preds = %if.end28
  %35 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1180
  %init_decryption33 = getelementptr inbounds %struct.zip, %struct.zip* %35, i32 0, i32 27, !dbg !1181
  store i8 0, i8* %init_decryption33, align 8, !dbg !1182
  br label %if.end34, !dbg !1183

if.end34:                                         ; preds = %if.end32, %if.end8
  %36 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1184
  %entry35 = getelementptr inbounds %struct.zip, %struct.zip* %36, i32 0, i32 9, !dbg !1185
  %37 = load %struct.zip_entry*, %struct.zip_entry** %entry35, align 8, !dbg !1185
  %compression36 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %37, i32 0, i32 14, !dbg !1186
  %38 = load i8, i8* %compression36, align 8, !dbg !1186
  %conv37 = zext i8 %38 to i32, !dbg !1184
  switch i32 %conv37, label %sw.default [
    i32 0, label %sw.bb
    i32 8, label %sw.bb39
  ], !dbg !1187

sw.bb:                                            ; preds = %if.end34
  %39 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1188
  %40 = load i8**, i8*** %buff.addr, align 8, !dbg !1190
  %41 = load i64*, i64** %size.addr, align 8, !dbg !1191
  %42 = load i64*, i64** %offset.addr, align 8, !dbg !1192
  %call38 = call i32 @zip_read_data_none(%struct.archive_read* %39, i8** %40, i64* %41, i64* %42), !dbg !1193
  store i32 %call38, i32* %r, align 4, !dbg !1194
  br label %sw.epilog, !dbg !1195

sw.bb39:                                          ; preds = %if.end34
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1196
  %44 = load i8**, i8*** %buff.addr, align 8, !dbg !1197
  %45 = load i64*, i64** %size.addr, align 8, !dbg !1198
  %46 = load i64*, i64** %offset.addr, align 8, !dbg !1199
  %call40 = call i32 @zip_read_data_deflate(%struct.archive_read* %43, i8** %44, i64* %45, i64* %46), !dbg !1200
  store i32 %call40, i32* %r, align 4, !dbg !1201
  br label %sw.epilog, !dbg !1202

sw.default:                                       ; preds = %if.end34
  %47 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1203
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %47, i32 0, i32 0, !dbg !1204
  %48 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1205
  %entry41 = getelementptr inbounds %struct.zip, %struct.zip* %48, i32 0, i32 9, !dbg !1206
  %49 = load %struct.zip_entry*, %struct.zip_entry** %entry41, align 8, !dbg !1206
  %compression42 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %49, i32 0, i32 14, !dbg !1207
  %50 = load i8, i8* %compression42, align 8, !dbg !1207
  %conv43 = zext i8 %50 to i32, !dbg !1205
  %call44 = call i8* @compression_name(i32 %conv43), !dbg !1208
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.51, i32 0, i32 0), i8* %call44), !dbg !1209
  store i32 -25, i32* %retval, align 4, !dbg !1210
  br label %return, !dbg !1210

sw.epilog:                                        ; preds = %sw.bb39, %sw.bb
  %51 = load i32, i32* %r, align 4, !dbg !1211
  %cmp45 = icmp ne i32 %51, 0, !dbg !1213
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !1214

if.then47:                                        ; preds = %sw.epilog
  %52 = load i32, i32* %r, align 4, !dbg !1215
  store i32 %52, i32* %retval, align 4, !dbg !1216
  br label %return, !dbg !1216

if.end48:                                         ; preds = %sw.epilog
  %53 = load i64*, i64** %size.addr, align 8, !dbg !1217
  %54 = load i64, i64* %53, align 8, !dbg !1219
  %tobool49 = icmp ne i64 %54, 0, !dbg !1219
  br i1 %tobool49, label %if.then50, label %if.end55, !dbg !1220

if.then50:                                        ; preds = %if.end48
  %55 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1221
  %crc32func = getelementptr inbounds %struct.zip, %struct.zip* %55, i32 0, i32 14, !dbg !1222
  %56 = load i64 (i64, i8*, i64)*, i64 (i64, i8*, i64)** %crc32func, align 8, !dbg !1222
  %57 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1223
  %entry_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %57, i32 0, i32 13, !dbg !1224
  %58 = load i64, i64* %entry_crc32, align 8, !dbg !1224
  %59 = load i8**, i8*** %buff.addr, align 8, !dbg !1225
  %60 = load i8*, i8** %59, align 8, !dbg !1226
  %61 = load i64*, i64** %size.addr, align 8, !dbg !1227
  %62 = load i64, i64* %61, align 8, !dbg !1228
  %conv51 = trunc i64 %62 to i32, !dbg !1229
  %conv52 = zext i32 %conv51 to i64, !dbg !1229
  %call53 = call i64 %56(i64 %58, i8* %60, i64 %conv52), !dbg !1221
  %63 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1230
  %entry_crc3254 = getelementptr inbounds %struct.zip, %struct.zip* %63, i32 0, i32 13, !dbg !1231
  store i64 %call53, i64* %entry_crc3254, align 8, !dbg !1232
  br label %if.end55, !dbg !1230

if.end55:                                         ; preds = %if.then50, %if.end48
  %64 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1233
  %end_of_entry56 = getelementptr inbounds %struct.zip, %struct.zip* %64, i32 0, i32 17, !dbg !1235
  %65 = load i8, i8* %end_of_entry56, align 2, !dbg !1235
  %tobool57 = icmp ne i8 %65, 0, !dbg !1233
  br i1 %tobool57, label %if.then58, label %if.end98, !dbg !1236

if.then58:                                        ; preds = %if.end55
  %66 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1237
  %entry59 = getelementptr inbounds %struct.zip, %struct.zip* %66, i32 0, i32 9, !dbg !1240
  %67 = load %struct.zip_entry*, %struct.zip_entry** %entry59, align 8, !dbg !1240
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %67, i32 0, i32 3, !dbg !1241
  %68 = load i64, i64* %compressed_size, align 8, !dbg !1241
  %69 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1242
  %entry_compressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %69, i32 0, i32 11, !dbg !1243
  %70 = load i64, i64* %entry_compressed_bytes_read, align 8, !dbg !1243
  %cmp60 = icmp ne i64 %68, %70, !dbg !1244
  br i1 %cmp60, label %if.then62, label %if.end67, !dbg !1245

if.then62:                                        ; preds = %if.then58
  %71 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1246
  %archive63 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %71, i32 0, i32 0, !dbg !1248
  %72 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1249
  %entry_compressed_bytes_read64 = getelementptr inbounds %struct.zip, %struct.zip* %72, i32 0, i32 11, !dbg !1250
  %73 = load i64, i64* %entry_compressed_bytes_read64, align 8, !dbg !1250
  %74 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1251
  %entry65 = getelementptr inbounds %struct.zip, %struct.zip* %74, i32 0, i32 9, !dbg !1252
  %75 = load %struct.zip_entry*, %struct.zip_entry** %entry65, align 8, !dbg !1252
  %compressed_size66 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %75, i32 0, i32 3, !dbg !1253
  %76 = load i64, i64* %compressed_size66, align 8, !dbg !1253
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive63, i32 -1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.52, i32 0, i32 0), i64 %73, i64 %76), !dbg !1254
  store i32 -20, i32* %retval, align 4, !dbg !1255
  br label %return, !dbg !1255

if.end67:                                         ; preds = %if.then58
  %77 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1256
  %entry68 = getelementptr inbounds %struct.zip, %struct.zip* %77, i32 0, i32 9, !dbg !1258
  %78 = load %struct.zip_entry*, %struct.zip_entry** %entry68, align 8, !dbg !1258
  %uncompressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %78, i32 0, i32 4, !dbg !1259
  %79 = load i64, i64* %uncompressed_size, align 8, !dbg !1259
  %and69 = and i64 %79, 4294967295, !dbg !1260
  %80 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1261
  %entry_uncompressed_bytes_read70 = getelementptr inbounds %struct.zip, %struct.zip* %80, i32 0, i32 12, !dbg !1262
  %81 = load i64, i64* %entry_uncompressed_bytes_read70, align 8, !dbg !1262
  %and71 = and i64 %81, 4294967295, !dbg !1263
  %cmp72 = icmp ne i64 %and69, %and71, !dbg !1264
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !1265

if.then74:                                        ; preds = %if.end67
  %82 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1266
  %archive75 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %82, i32 0, i32 0, !dbg !1268
  %83 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1269
  %entry_uncompressed_bytes_read76 = getelementptr inbounds %struct.zip, %struct.zip* %83, i32 0, i32 12, !dbg !1270
  %84 = load i64, i64* %entry_uncompressed_bytes_read76, align 8, !dbg !1270
  %85 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1271
  %entry77 = getelementptr inbounds %struct.zip, %struct.zip* %85, i32 0, i32 9, !dbg !1272
  %86 = load %struct.zip_entry*, %struct.zip_entry** %entry77, align 8, !dbg !1272
  %uncompressed_size78 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %86, i32 0, i32 4, !dbg !1273
  %87 = load i64, i64* %uncompressed_size78, align 8, !dbg !1273
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive75, i32 -1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.53, i32 0, i32 0), i64 %84, i64 %87), !dbg !1274
  store i32 -20, i32* %retval, align 4, !dbg !1275
  br label %return, !dbg !1275

if.end79:                                         ; preds = %if.end67
  %88 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1276
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %88, i32 0, i32 38, !dbg !1278
  %89 = load i8, i8* %hctx_valid, align 4, !dbg !1278
  %tobool80 = icmp ne i8 %89, 0, !dbg !1276
  br i1 %tobool80, label %lor.lhs.false, label %land.lhs.true, !dbg !1279

lor.lhs.false:                                    ; preds = %if.end79
  %90 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1280
  %entry81 = getelementptr inbounds %struct.zip, %struct.zip* %90, i32 0, i32 9, !dbg !1281
  %91 = load %struct.zip_entry*, %struct.zip_entry** %entry81, align 8, !dbg !1281
  %aes_extra = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %91, i32 0, i32 18, !dbg !1282
  %vendor = getelementptr inbounds %struct.anon.0, %struct.anon.0* %aes_extra, i32 0, i32 0, !dbg !1283
  %92 = load i32, i32* %vendor, align 4, !dbg !1283
  %cmp82 = icmp ne i32 %92, 2, !dbg !1284
  br i1 %cmp82, label %land.lhs.true, label %if.end97, !dbg !1285

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end79
  %93 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1286
  %entry84 = getelementptr inbounds %struct.zip, %struct.zip* %93, i32 0, i32 9, !dbg !1287
  %94 = load %struct.zip_entry*, %struct.zip_entry** %entry84, align 8, !dbg !1287
  %cm_zlib_crc32 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %94, i32 0, i32 11, !dbg !1288
  %95 = load i32, i32* %cm_zlib_crc32, align 8, !dbg !1288
  %conv85 = zext i32 %95 to i64, !dbg !1286
  %96 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1289
  %entry_crc3286 = getelementptr inbounds %struct.zip, %struct.zip* %96, i32 0, i32 13, !dbg !1290
  %97 = load i64, i64* %entry_crc3286, align 8, !dbg !1290
  %cmp87 = icmp ne i64 %conv85, %97, !dbg !1291
  br i1 %cmp87, label %land.lhs.true89, label %if.end97, !dbg !1292

land.lhs.true89:                                  ; preds = %land.lhs.true
  %98 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1293
  %ignore_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %98, i32 0, i32 15, !dbg !1295
  %99 = load i8, i8* %ignore_crc32, align 8, !dbg !1295
  %tobool90 = icmp ne i8 %99, 0, !dbg !1293
  br i1 %tobool90, label %if.end97, label %if.then91, !dbg !1296

if.then91:                                        ; preds = %land.lhs.true89
  %100 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1298
  %archive92 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %100, i32 0, i32 0, !dbg !1300
  %101 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1301
  %entry_crc3293 = getelementptr inbounds %struct.zip, %struct.zip* %101, i32 0, i32 13, !dbg !1302
  %102 = load i64, i64* %entry_crc3293, align 8, !dbg !1302
  %103 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1303
  %entry94 = getelementptr inbounds %struct.zip, %struct.zip* %103, i32 0, i32 9, !dbg !1304
  %104 = load %struct.zip_entry*, %struct.zip_entry** %entry94, align 8, !dbg !1304
  %cm_zlib_crc3295 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %104, i32 0, i32 11, !dbg !1305
  %105 = load i32, i32* %cm_zlib_crc3295, align 8, !dbg !1305
  %conv96 = zext i32 %105 to i64, !dbg !1306
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive92, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54, i32 0, i32 0), i64 %102, i64 %conv96), !dbg !1307
  store i32 -20, i32* %retval, align 4, !dbg !1308
  br label %return, !dbg !1308

if.end97:                                         ; preds = %land.lhs.true89, %land.lhs.true, %lor.lhs.false
  br label %if.end98, !dbg !1309

if.end98:                                         ; preds = %if.end97, %if.end55
  store i32 0, i32* %retval, align 4, !dbg !1310
  br label %return, !dbg !1310

return:                                           ; preds = %if.end98, %if.then91, %if.then74, %if.then62, %if.then47, %sw.default, %if.then31, %if.then7, %if.then2
  %106 = load i32, i32* %retval, align 4, !dbg !1311
  ret i32 %106, !dbg !1311
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_read_data_skip_streamable(%struct.archive_read* %a) #0 !dbg !531 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %bytes_skipped = alloca i64, align 8
  %r = alloca i32, align 4
  %offset = alloca i64, align 8
  %buff = alloca i8*, align 8
  %size = alloca i64, align 8
  %r47 = alloca i32, align 4
  %p = alloca i8*, align 8
  %buff53 = alloca i8*, align 8
  %bytes_avail = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1312, metadata !578), !dbg !1313
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !1314, metadata !578), !dbg !1315
  call void @llvm.dbg.declare(metadata i64* %bytes_skipped, metadata !1316, metadata !578), !dbg !1317
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1318
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1319
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1319
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1320
  %2 = load i8*, i8** %data, align 8, !dbg !1320
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !1321
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !1322
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1323
  %5 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1324
  %unconsumed = getelementptr inbounds %struct.zip, %struct.zip* %5, i32 0, i32 8, !dbg !1325
  %6 = load i64, i64* %unconsumed, align 8, !dbg !1325
  %call = call i64 @__archive_read_consume(%struct.archive_read* %4, i64 %6), !dbg !1326
  store i64 %call, i64* %bytes_skipped, align 8, !dbg !1327
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1328
  %unconsumed1 = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 8, !dbg !1329
  store i64 0, i64* %unconsumed1, align 8, !dbg !1330
  %8 = load i64, i64* %bytes_skipped, align 8, !dbg !1331
  %cmp = icmp slt i64 %8, 0, !dbg !1333
  br i1 %cmp, label %if.then, label %if.end, !dbg !1334

if.then:                                          ; preds = %entry
  store i32 -30, i32* %retval, align 4, !dbg !1335
  br label %return, !dbg !1335

if.end:                                           ; preds = %entry
  %9 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1336
  %end_of_entry = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 17, !dbg !1338
  %10 = load i8, i8* %end_of_entry, align 2, !dbg !1338
  %tobool = icmp ne i8 %10, 0, !dbg !1336
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !1339

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1340
  br label %return, !dbg !1340

if.end3:                                          ; preds = %if.end
  %11 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1341
  %entry4 = getelementptr inbounds %struct.zip, %struct.zip* %11, i32 0, i32 9, !dbg !1343
  %12 = load %struct.zip_entry*, %struct.zip_entry** %entry4, align 8, !dbg !1343
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %12, i32 0, i32 13, !dbg !1344
  %13 = load i16, i16* %zip_flags, align 2, !dbg !1344
  %conv = zext i16 %13 to i32, !dbg !1341
  %and = and i32 %conv, 8, !dbg !1345
  %cmp5 = icmp eq i32 0, %and, !dbg !1346
  br i1 %cmp5, label %if.then10, label %lor.lhs.false, !dbg !1347

lor.lhs.false:                                    ; preds = %if.end3
  %14 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1348
  %entry7 = getelementptr inbounds %struct.zip, %struct.zip* %14, i32 0, i32 9, !dbg !1350
  %15 = load %struct.zip_entry*, %struct.zip_entry** %entry7, align 8, !dbg !1350
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %15, i32 0, i32 3, !dbg !1351
  %16 = load i64, i64* %compressed_size, align 8, !dbg !1351
  %cmp8 = icmp sgt i64 %16, 0, !dbg !1352
  br i1 %cmp8, label %if.then10, label %if.end16, !dbg !1353

if.then10:                                        ; preds = %lor.lhs.false, %if.end3
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1355
  %18 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1357
  %entry_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %18, i32 0, i32 10, !dbg !1358
  %19 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !1358
  %call11 = call i64 @__archive_read_consume(%struct.archive_read* %17, i64 %19), !dbg !1359
  store i64 %call11, i64* %bytes_skipped, align 8, !dbg !1360
  %20 = load i64, i64* %bytes_skipped, align 8, !dbg !1361
  %cmp12 = icmp slt i64 %20, 0, !dbg !1363
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !1364

if.then14:                                        ; preds = %if.then10
  store i32 -30, i32* %retval, align 4, !dbg !1365
  br label %return, !dbg !1365

if.end15:                                         ; preds = %if.then10
  store i32 0, i32* %retval, align 4, !dbg !1366
  br label %return, !dbg !1366

if.end16:                                         ; preds = %lor.lhs.false
  %21 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1367
  %init_decryption = getelementptr inbounds %struct.zip, %struct.zip* %21, i32 0, i32 27, !dbg !1369
  %22 = load i8, i8* %init_decryption, align 8, !dbg !1369
  %tobool17 = icmp ne i8 %22, 0, !dbg !1367
  br i1 %tobool17, label %if.then18, label %if.end41, !dbg !1370

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1371, metadata !578), !dbg !1373
  %23 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1374
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %23, i32 0, i32 4, !dbg !1375
  store i32 1, i32* %has_encrypted_entries, align 8, !dbg !1376
  %24 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1377
  %entry19 = getelementptr inbounds %struct.zip, %struct.zip* %24, i32 0, i32 9, !dbg !1379
  %25 = load %struct.zip_entry*, %struct.zip_entry** %entry19, align 8, !dbg !1379
  %zip_flags20 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %25, i32 0, i32 13, !dbg !1380
  %26 = load i16, i16* %zip_flags20, align 2, !dbg !1380
  %conv21 = zext i16 %26 to i32, !dbg !1377
  %and22 = and i32 %conv21, 64, !dbg !1381
  %tobool23 = icmp ne i32 %and22, 0, !dbg !1381
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !1382

if.then24:                                        ; preds = %if.then18
  %27 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1383
  %call25 = call i32 @read_decryption_header(%struct.archive_read* %27), !dbg !1384
  store i32 %call25, i32* %r, align 4, !dbg !1385
  br label %if.end35, !dbg !1386

if.else:                                          ; preds = %if.then18
  %28 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1387
  %entry26 = getelementptr inbounds %struct.zip, %struct.zip* %28, i32 0, i32 9, !dbg !1389
  %29 = load %struct.zip_entry*, %struct.zip_entry** %entry26, align 8, !dbg !1389
  %compression = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %29, i32 0, i32 14, !dbg !1390
  %30 = load i8, i8* %compression, align 8, !dbg !1390
  %conv27 = zext i8 %30 to i32, !dbg !1387
  %cmp28 = icmp eq i32 %conv27, 99, !dbg !1391
  br i1 %cmp28, label %if.then30, label %if.else32, !dbg !1392

if.then30:                                        ; preds = %if.else
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1393
  %call31 = call i32 @init_WinZip_AES_decryption(%struct.archive_read* %31), !dbg !1394
  store i32 %call31, i32* %r, align 4, !dbg !1395
  br label %if.end34, !dbg !1396

if.else32:                                        ; preds = %if.else
  %32 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1397
  %call33 = call i32 @init_traditional_PKWARE_decryption(%struct.archive_read* %32), !dbg !1398
  store i32 %call33, i32* %r, align 4, !dbg !1399
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then30
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then24
  %33 = load i32, i32* %r, align 4, !dbg !1400
  %cmp36 = icmp ne i32 %33, 0, !dbg !1402
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !1403

if.then38:                                        ; preds = %if.end35
  %34 = load i32, i32* %r, align 4, !dbg !1404
  store i32 %34, i32* %retval, align 4, !dbg !1405
  br label %return, !dbg !1405

if.end39:                                         ; preds = %if.end35
  %35 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1406
  %init_decryption40 = getelementptr inbounds %struct.zip, %struct.zip* %35, i32 0, i32 27, !dbg !1407
  store i8 0, i8* %init_decryption40, align 8, !dbg !1408
  br label %if.end41, !dbg !1409

if.end41:                                         ; preds = %if.end39, %if.end16
  %36 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1410
  %entry42 = getelementptr inbounds %struct.zip, %struct.zip* %36, i32 0, i32 9, !dbg !1411
  %37 = load %struct.zip_entry*, %struct.zip_entry** %entry42, align 8, !dbg !1411
  %compression43 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %37, i32 0, i32 14, !dbg !1412
  %38 = load i8, i8* %compression43, align 8, !dbg !1412
  %conv44 = zext i8 %38 to i32, !dbg !1410
  switch i32 %conv44, label %sw.default [
    i32 8, label %sw.bb
  ], !dbg !1413

sw.bb:                                            ; preds = %if.end41
  br label %while.cond, !dbg !1414

while.cond:                                       ; preds = %if.end52, %sw.bb
  %39 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1416
  %end_of_entry45 = getelementptr inbounds %struct.zip, %struct.zip* %39, i32 0, i32 17, !dbg !1418
  %40 = load i8, i8* %end_of_entry45, align 2, !dbg !1418
  %tobool46 = icmp ne i8 %40, 0, !dbg !1419
  %lnot = xor i1 %tobool46, true, !dbg !1419
  br i1 %lnot, label %while.body, label %while.end, !dbg !1420

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1421, metadata !578), !dbg !1423
  store i64 0, i64* %offset, align 8, !dbg !1423
  call void @llvm.dbg.declare(metadata i8** %buff, metadata !1424, metadata !578), !dbg !1425
  store i8* null, i8** %buff, align 8, !dbg !1425
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1426, metadata !578), !dbg !1427
  store i64 0, i64* %size, align 8, !dbg !1427
  call void @llvm.dbg.declare(metadata i32* %r47, metadata !1428, metadata !578), !dbg !1429
  %41 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1430
  %call48 = call i32 @zip_read_data_deflate(%struct.archive_read* %41, i8** %buff, i64* %size, i64* %offset), !dbg !1431
  store i32 %call48, i32* %r47, align 4, !dbg !1432
  %42 = load i32, i32* %r47, align 4, !dbg !1433
  %cmp49 = icmp ne i32 %42, 0, !dbg !1435
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !1436

if.then51:                                        ; preds = %while.body
  %43 = load i32, i32* %r47, align 4, !dbg !1437
  store i32 %43, i32* %retval, align 4, !dbg !1438
  br label %return, !dbg !1438

if.end52:                                         ; preds = %while.body
  br label %while.cond, !dbg !1439

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !1441
  br label %return, !dbg !1441

sw.default:                                       ; preds = %if.end41
  br label %for.cond, !dbg !1442

for.cond:                                         ; preds = %while.end122, %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1443, metadata !578), !dbg !1447
  call void @llvm.dbg.declare(metadata i8** %buff53, metadata !1448, metadata !578), !dbg !1449
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !1450, metadata !578), !dbg !1451
  %44 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1452
  %call54 = call i8* @__archive_read_ahead(%struct.archive_read* %44, i64 16, i64* %bytes_avail), !dbg !1453
  store i8* %call54, i8** %buff53, align 8, !dbg !1454
  %45 = load i64, i64* %bytes_avail, align 8, !dbg !1455
  %cmp55 = icmp slt i64 %45, 16, !dbg !1457
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !1458

if.then57:                                        ; preds = %for.cond
  %46 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1459
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %46, i32 0, i32 0, !dbg !1461
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0)), !dbg !1462
  store i32 -30, i32* %retval, align 4, !dbg !1463
  br label %return, !dbg !1463

if.end58:                                         ; preds = %for.cond
  %47 = load i8*, i8** %buff53, align 8, !dbg !1464
  store i8* %47, i8** %p, align 8, !dbg !1465
  br label %while.cond59, !dbg !1466

while.cond59:                                     ; preds = %if.end121, %if.end58
  %48 = load i8*, i8** %p, align 8, !dbg !1467
  %49 = load i8*, i8** %buff53, align 8, !dbg !1469
  %50 = load i64, i64* %bytes_avail, align 8, !dbg !1470
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !1471
  %add.ptr60 = getelementptr inbounds i8, i8* %add.ptr, i64 -16, !dbg !1472
  %cmp61 = icmp ule i8* %48, %add.ptr60, !dbg !1473
  br i1 %cmp61, label %while.body63, label %while.end122, !dbg !1474

while.body63:                                     ; preds = %while.cond59
  %51 = load i8*, i8** %p, align 8, !dbg !1475
  %arrayidx = getelementptr inbounds i8, i8* %51, i64 3, !dbg !1475
  %52 = load i8, i8* %arrayidx, align 1, !dbg !1475
  %conv64 = sext i8 %52 to i32, !dbg !1475
  %cmp65 = icmp eq i32 %conv64, 80, !dbg !1478
  br i1 %cmp65, label %if.then67, label %if.else69, !dbg !1479

if.then67:                                        ; preds = %while.body63
  %53 = load i8*, i8** %p, align 8, !dbg !1480
  %add.ptr68 = getelementptr inbounds i8, i8* %53, i64 3, !dbg !1480
  store i8* %add.ptr68, i8** %p, align 8, !dbg !1480
  br label %if.end121, !dbg !1483

if.else69:                                        ; preds = %while.body63
  %54 = load i8*, i8** %p, align 8, !dbg !1484
  %arrayidx70 = getelementptr inbounds i8, i8* %54, i64 3, !dbg !1484
  %55 = load i8, i8* %arrayidx70, align 1, !dbg !1484
  %conv71 = sext i8 %55 to i32, !dbg !1484
  %cmp72 = icmp eq i32 %conv71, 75, !dbg !1486
  br i1 %cmp72, label %if.then74, label %if.else76, !dbg !1487

if.then74:                                        ; preds = %if.else69
  %56 = load i8*, i8** %p, align 8, !dbg !1488
  %add.ptr75 = getelementptr inbounds i8, i8* %56, i64 2, !dbg !1488
  store i8* %add.ptr75, i8** %p, align 8, !dbg !1488
  br label %if.end120, !dbg !1491

if.else76:                                        ; preds = %if.else69
  %57 = load i8*, i8** %p, align 8, !dbg !1492
  %arrayidx77 = getelementptr inbounds i8, i8* %57, i64 3, !dbg !1492
  %58 = load i8, i8* %arrayidx77, align 1, !dbg !1492
  %conv78 = sext i8 %58 to i32, !dbg !1492
  %cmp79 = icmp eq i32 %conv78, 7, !dbg !1494
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !1495

if.then81:                                        ; preds = %if.else76
  %59 = load i8*, i8** %p, align 8, !dbg !1496
  %add.ptr82 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !1496
  store i8* %add.ptr82, i8** %p, align 8, !dbg !1496
  br label %if.end119, !dbg !1499

if.else83:                                        ; preds = %if.else76
  %60 = load i8*, i8** %p, align 8, !dbg !1500
  %arrayidx84 = getelementptr inbounds i8, i8* %60, i64 3, !dbg !1500
  %61 = load i8, i8* %arrayidx84, align 1, !dbg !1500
  %conv85 = sext i8 %61 to i32, !dbg !1500
  %cmp86 = icmp eq i32 %conv85, 8, !dbg !1502
  br i1 %cmp86, label %land.lhs.true, label %if.else116, !dbg !1503

land.lhs.true:                                    ; preds = %if.else83
  %62 = load i8*, i8** %p, align 8, !dbg !1504
  %arrayidx88 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !1504
  %63 = load i8, i8* %arrayidx88, align 1, !dbg !1504
  %conv89 = sext i8 %63 to i32, !dbg !1504
  %cmp90 = icmp eq i32 %conv89, 7, !dbg !1506
  br i1 %cmp90, label %land.lhs.true92, label %if.else116, !dbg !1507

land.lhs.true92:                                  ; preds = %land.lhs.true
  %64 = load i8*, i8** %p, align 8, !dbg !1508
  %arrayidx93 = getelementptr inbounds i8, i8* %64, i64 1, !dbg !1508
  %65 = load i8, i8* %arrayidx93, align 1, !dbg !1508
  %conv94 = sext i8 %65 to i32, !dbg !1508
  %cmp95 = icmp eq i32 %conv94, 75, !dbg !1509
  br i1 %cmp95, label %land.lhs.true97, label %if.else116, !dbg !1510

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %66 = load i8*, i8** %p, align 8, !dbg !1511
  %arrayidx98 = getelementptr inbounds i8, i8* %66, i64 0, !dbg !1511
  %67 = load i8, i8* %arrayidx98, align 1, !dbg !1511
  %conv99 = sext i8 %67 to i32, !dbg !1511
  %cmp100 = icmp eq i32 %conv99, 80, !dbg !1513
  br i1 %cmp100, label %if.then102, label %if.else116, !dbg !1514

if.then102:                                       ; preds = %land.lhs.true97
  %68 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1516
  %entry103 = getelementptr inbounds %struct.zip, %struct.zip* %68, i32 0, i32 9, !dbg !1519
  %69 = load %struct.zip_entry*, %struct.zip_entry** %entry103, align 8, !dbg !1519
  %flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %69, i32 0, i32 16, !dbg !1520
  %70 = load i8, i8* %flags, align 2, !dbg !1520
  %conv104 = zext i8 %70 to i32, !dbg !1516
  %and105 = and i32 %conv104, 1, !dbg !1521
  %tobool106 = icmp ne i32 %and105, 0, !dbg !1521
  br i1 %tobool106, label %if.then107, label %if.else109, !dbg !1522

if.then107:                                       ; preds = %if.then102
  %71 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1523
  %72 = load i8*, i8** %p, align 8, !dbg !1524
  %73 = load i8*, i8** %buff53, align 8, !dbg !1525
  %sub.ptr.lhs.cast = ptrtoint i8* %72 to i64, !dbg !1526
  %sub.ptr.rhs.cast = ptrtoint i8* %73 to i64, !dbg !1526
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1526
  %add = add nsw i64 %sub.ptr.sub, 24, !dbg !1527
  %call108 = call i64 @__archive_read_consume(%struct.archive_read* %71, i64 %add), !dbg !1528
  br label %if.end115, !dbg !1528

if.else109:                                       ; preds = %if.then102
  %74 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1529
  %75 = load i8*, i8** %p, align 8, !dbg !1530
  %76 = load i8*, i8** %buff53, align 8, !dbg !1531
  %sub.ptr.lhs.cast110 = ptrtoint i8* %75 to i64, !dbg !1532
  %sub.ptr.rhs.cast111 = ptrtoint i8* %76 to i64, !dbg !1532
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111, !dbg !1532
  %add113 = add nsw i64 %sub.ptr.sub112, 16, !dbg !1533
  %call114 = call i64 @__archive_read_consume(%struct.archive_read* %74, i64 %add113), !dbg !1534
  br label %if.end115

if.end115:                                        ; preds = %if.else109, %if.then107
  store i32 0, i32* %retval, align 4, !dbg !1535
  br label %return, !dbg !1535

if.else116:                                       ; preds = %land.lhs.true97, %land.lhs.true92, %land.lhs.true, %if.else83
  %77 = load i8*, i8** %p, align 8, !dbg !1536
  %add.ptr117 = getelementptr inbounds i8, i8* %77, i64 4, !dbg !1536
  store i8* %add.ptr117, i8** %p, align 8, !dbg !1536
  br label %if.end118

if.end118:                                        ; preds = %if.else116
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then81
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then74
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then67
  br label %while.cond59, !dbg !1538

while.end122:                                     ; preds = %while.cond59
  %78 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1540
  %79 = load i8*, i8** %p, align 8, !dbg !1541
  %80 = load i8*, i8** %buff53, align 8, !dbg !1542
  %sub.ptr.lhs.cast123 = ptrtoint i8* %79 to i64, !dbg !1543
  %sub.ptr.rhs.cast124 = ptrtoint i8* %80 to i64, !dbg !1543
  %sub.ptr.sub125 = sub i64 %sub.ptr.lhs.cast123, %sub.ptr.rhs.cast124, !dbg !1543
  %call126 = call i64 @__archive_read_consume(%struct.archive_read* %78, i64 %sub.ptr.sub125), !dbg !1544
  br label %for.cond, !dbg !1545

return:                                           ; preds = %if.end115, %if.then57, %while.end, %if.then51, %if.then38, %if.end15, %if.then14, %if.then2, %if.then
  %81 = load i32, i32* %retval, align 4, !dbg !1547
  ret i32 %81, !dbg !1547
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_cleanup(%struct.archive_read* %a) #0 !dbg !532 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %zip_entry = alloca %struct.zip_entry*, align 8
  %next_zip_entry = alloca %struct.zip_entry*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1548, metadata !578), !dbg !1549
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !1550, metadata !578), !dbg !1551
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %zip_entry, metadata !1552, metadata !578), !dbg !1553
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %next_zip_entry, metadata !1554, metadata !578), !dbg !1555
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1556
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1557
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1557
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1558
  %2 = load i8*, i8** %data, align 8, !dbg !1558
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !1559
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !1560
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1561
  %stream_valid = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 21, !dbg !1563
  %5 = load i8, i8* %stream_valid, align 8, !dbg !1563
  %tobool = icmp ne i8 %5, 0, !dbg !1561
  br i1 %tobool, label %if.then, label %if.end, !dbg !1564

if.then:                                          ; preds = %entry
  %6 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1565
  %stream = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 20, !dbg !1566
  %call = call i32 @cm_zlib_inflateEnd(%struct.z_stream_s* %stream), !dbg !1567
  br label %if.end, !dbg !1567

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1568
  %uncompressed_buffer = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 18, !dbg !1569
  %8 = load i8*, i8** %uncompressed_buffer, align 8, !dbg !1569
  call void @free(i8* %8) #8, !dbg !1570
  %9 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1571
  %zip_entries = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 5, !dbg !1573
  %10 = load %struct.zip_entry*, %struct.zip_entry** %zip_entries, align 8, !dbg !1573
  %tobool1 = icmp ne %struct.zip_entry* %10, null, !dbg !1571
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !1574

if.then2:                                         ; preds = %if.end
  %11 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1575
  %zip_entries3 = getelementptr inbounds %struct.zip, %struct.zip* %11, i32 0, i32 5, !dbg !1577
  %12 = load %struct.zip_entry*, %struct.zip_entry** %zip_entries3, align 8, !dbg !1577
  store %struct.zip_entry* %12, %struct.zip_entry** %zip_entry, align 8, !dbg !1578
  br label %while.cond, !dbg !1579

while.cond:                                       ; preds = %while.body, %if.then2
  %13 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !1580
  %cmp = icmp ne %struct.zip_entry* %13, null, !dbg !1582
  br i1 %cmp, label %while.body, label %while.end, !dbg !1583

while.body:                                       ; preds = %while.cond
  %14 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !1584
  %next = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %14, i32 0, i32 1, !dbg !1586
  %15 = load %struct.zip_entry*, %struct.zip_entry** %next, align 8, !dbg !1586
  store %struct.zip_entry* %15, %struct.zip_entry** %next_zip_entry, align 8, !dbg !1587
  %16 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !1588
  %rsrcname = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %16, i32 0, i32 7, !dbg !1589
  call void @archive_string_free(%struct.archive_string* %rsrcname), !dbg !1590
  %17 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !1591
  %18 = bitcast %struct.zip_entry* %17 to i8*, !dbg !1591
  call void @free(i8* %18) #8, !dbg !1592
  %19 = load %struct.zip_entry*, %struct.zip_entry** %next_zip_entry, align 8, !dbg !1593
  store %struct.zip_entry* %19, %struct.zip_entry** %zip_entry, align 8, !dbg !1594
  br label %while.cond, !dbg !1595

while.end:                                        ; preds = %while.cond
  br label %if.end4, !dbg !1597

if.end4:                                          ; preds = %while.end, %if.end
  %20 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1598
  %decrypted_buffer = getelementptr inbounds %struct.zip, %struct.zip* %20, i32 0, i32 28, !dbg !1599
  %21 = load i8*, i8** %decrypted_buffer, align 8, !dbg !1599
  call void @free(i8* %21) #8, !dbg !1600
  %22 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1601
  %cctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %22, i32 0, i32 36, !dbg !1603
  %23 = load i8, i8* %cctx_valid, align 4, !dbg !1603
  %tobool5 = icmp ne i8 %23, 0, !dbg !1601
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !1604

if.then6:                                         ; preds = %if.end4
  %24 = load i32 (i32*)*, i32 (i32*)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 3), align 8, !dbg !1605
  %25 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1605
  %cctx = getelementptr inbounds %struct.zip, %struct.zip* %25, i32 0, i32 35, !dbg !1605
  %call7 = call i32 %24(i32* %cctx), !dbg !1605
  br label %if.end8, !dbg !1605

if.end8:                                          ; preds = %if.then6, %if.end4
  %26 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1606
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %26, i32 0, i32 38, !dbg !1608
  %27 = load i8, i8* %hctx_valid, align 4, !dbg !1608
  %tobool9 = icmp ne i8 %27, 0, !dbg !1606
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !1609

if.then10:                                        ; preds = %if.end8
  %28 = load void (i32*)*, void (i32*)** getelementptr inbounds (%struct.archive_hmac, %struct.archive_hmac* @__archive_hmac, i32 0, i32 3), align 8, !dbg !1610
  %29 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1610
  %hctx = getelementptr inbounds %struct.zip, %struct.zip* %29, i32 0, i32 37, !dbg !1610
  call void %28(i32* %hctx), !dbg !1610
  br label %if.end11, !dbg !1610

if.end11:                                         ; preds = %if.then10, %if.end8
  %30 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1611
  %iv = getelementptr inbounds %struct.zip, %struct.zip* %30, i32 0, i32 46, !dbg !1612
  %31 = load i8*, i8** %iv, align 8, !dbg !1612
  call void @free(i8* %31) #8, !dbg !1613
  %32 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1614
  %erd = getelementptr inbounds %struct.zip, %struct.zip* %32, i32 0, i32 47, !dbg !1615
  %33 = load i8*, i8** %erd, align 8, !dbg !1615
  call void @free(i8* %33) #8, !dbg !1616
  %34 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1617
  %v_data = getelementptr inbounds %struct.zip, %struct.zip* %34, i32 0, i32 48, !dbg !1618
  %35 = load i8*, i8** %v_data, align 8, !dbg !1618
  call void @free(i8* %35) #8, !dbg !1619
  %36 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1620
  %format_name = getelementptr inbounds %struct.zip, %struct.zip* %36, i32 0, i32 0, !dbg !1621
  call void @archive_string_free(%struct.archive_string* %format_name), !dbg !1622
  %37 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1623
  %38 = bitcast %struct.zip* %37 to i8*, !dbg !1623
  call void @free(i8* %38) #8, !dbg !1624
  %39 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1625
  %format12 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %39, i32 0, i32 13, !dbg !1626
  %40 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format12, align 8, !dbg !1626
  %data13 = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %40, i32 0, i32 0, !dbg !1627
  store i8* null, i8** %data13, align 8, !dbg !1628
  ret i32 0, !dbg !1629
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_support_format_zip_capabilities_streamable(%struct.archive_read* %a) #0 !dbg !533 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1630, metadata !578), !dbg !1631
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1632
  ret i32 3, !dbg !1633
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_has_encrypted_entries(%struct.archive_read* %_a) #0 !dbg !534 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  store %struct.archive_read* %_a, %struct.archive_read** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %_a.addr, metadata !1634, metadata !578), !dbg !1635
  %0 = load %struct.archive_read*, %struct.archive_read** %_a.addr, align 8, !dbg !1636
  %tobool = icmp ne %struct.archive_read* %0, null, !dbg !1636
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !1638

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.archive_read*, %struct.archive_read** %_a.addr, align 8, !dbg !1639
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 13, !dbg !1641
  %2 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1641
  %tobool1 = icmp ne %struct.archive_format_descriptor* %2, null, !dbg !1639
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !1642

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !1643, metadata !578), !dbg !1645
  %3 = load %struct.archive_read*, %struct.archive_read** %_a.addr, align 8, !dbg !1646
  %format2 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %3, i32 0, i32 13, !dbg !1647
  %4 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format2, align 8, !dbg !1647
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %4, i32 0, i32 0, !dbg !1648
  %5 = load i8*, i8** %data, align 8, !dbg !1648
  %6 = bitcast i8* %5 to %struct.zip*, !dbg !1649
  store %struct.zip* %6, %struct.zip** %zip, align 8, !dbg !1645
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1650
  %tobool3 = icmp ne %struct.zip* %7, null, !dbg !1650
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !1652

if.then4:                                         ; preds = %if.then
  %8 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1653
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 4, !dbg !1655
  %9 = load i32, i32* %has_encrypted_entries, align 8, !dbg !1655
  store i32 %9, i32* %retval, align 4, !dbg !1656
  br label %return, !dbg !1656

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !1657

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  store i32 -1, i32* %retval, align 4, !dbg !1658
  br label %return, !dbg !1658

return:                                           ; preds = %if.end5, %if.then4
  %10 = load i32, i32* %retval, align 4, !dbg !1659
  ret i32 %10, !dbg !1659
}

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_seekable_bid(%struct.archive_read* %a, i32 %best_bid) #0 !dbg !535 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %best_bid.addr = alloca i32, align 4
  %zip = alloca %struct.zip*, align 8
  %file_size = alloca i64, align 8
  %current_offset = alloca i64, align 8
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  %tail = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1660, metadata !578), !dbg !1661
  store i32 %best_bid, i32* %best_bid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %best_bid.addr, metadata !1662, metadata !578), !dbg !1663
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !1664, metadata !578), !dbg !1665
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1666
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1667
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1667
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1668
  %2 = load i8*, i8** %data, align 8, !dbg !1668
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !1669
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !1665
  call void @llvm.dbg.declare(metadata i64* %file_size, metadata !1670, metadata !578), !dbg !1671
  call void @llvm.dbg.declare(metadata i64* %current_offset, metadata !1672, metadata !578), !dbg !1673
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1674, metadata !578), !dbg !1675
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1676, metadata !578), !dbg !1677
  call void @llvm.dbg.declare(metadata i32* %tail, metadata !1678, metadata !578), !dbg !1679
  %4 = load i32, i32* %best_bid.addr, align 4, !dbg !1680
  %cmp = icmp sgt i32 %4, 32, !dbg !1682
  br i1 %cmp, label %if.then, label %if.end, !dbg !1683

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !1684
  br label %return, !dbg !1684

if.end:                                           ; preds = %entry
  %5 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1685
  %call = call i64 @__archive_read_seek(%struct.archive_read* %5, i64 0, i32 2), !dbg !1686
  store i64 %call, i64* %file_size, align 8, !dbg !1687
  %6 = load i64, i64* %file_size, align 8, !dbg !1688
  %cmp1 = icmp sle i64 %6, 0, !dbg !1690
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1691

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1692
  br label %return, !dbg !1692

if.end3:                                          ; preds = %if.end
  %7 = load i64, i64* %file_size, align 8, !dbg !1693
  %cmp4 = icmp slt i64 16384, %7, !dbg !1693
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !1693

cond.true:                                        ; preds = %if.end3
  br label %cond.end, !dbg !1694

cond.false:                                       ; preds = %if.end3
  %8 = load i64, i64* %file_size, align 8, !dbg !1696
  br label %cond.end, !dbg !1696

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 16384, %cond.true ], [ %8, %cond.false ], !dbg !1698
  %conv = trunc i64 %cond to i32, !dbg !1700
  store i32 %conv, i32* %tail, align 4, !dbg !1701
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1702
  %10 = load i32, i32* %tail, align 4, !dbg !1703
  %sub = sub nsw i32 0, %10, !dbg !1704
  %conv5 = sext i32 %sub to i64, !dbg !1704
  %call6 = call i64 @__archive_read_seek(%struct.archive_read* %9, i64 %conv5, i32 2), !dbg !1705
  store i64 %call6, i64* %current_offset, align 8, !dbg !1706
  %11 = load i64, i64* %current_offset, align 8, !dbg !1707
  %cmp7 = icmp slt i64 %11, 0, !dbg !1709
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !1710

if.then9:                                         ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !1711
  br label %return, !dbg !1711

if.end10:                                         ; preds = %cond.end
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1712
  %13 = load i32, i32* %tail, align 4, !dbg !1714
  %conv11 = sext i32 %13 to i64, !dbg !1715
  %call12 = call i8* @__archive_read_ahead(%struct.archive_read* %12, i64 %conv11, i64* null), !dbg !1716
  store i8* %call12, i8** %p, align 8, !dbg !1717
  %cmp13 = icmp eq i8* %call12, null, !dbg !1718
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !1719

if.then15:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !1720
  br label %return, !dbg !1720

if.end16:                                         ; preds = %if.end10
  %14 = load i32, i32* %tail, align 4, !dbg !1721
  %sub17 = sub nsw i32 %14, 22, !dbg !1723
  store i32 %sub17, i32* %i, align 4, !dbg !1724
  br label %for.cond, !dbg !1725

for.cond:                                         ; preds = %sw.epilog, %if.end16
  %15 = load i32, i32* %i, align 4, !dbg !1726
  %cmp18 = icmp sgt i32 %15, 0, !dbg !1729
  br i1 %cmp18, label %for.body, label %for.end, !dbg !1730

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !1731
  %idxprom = sext i32 %16 to i64, !dbg !1733
  %17 = load i8*, i8** %p, align 8, !dbg !1733
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom, !dbg !1733
  %18 = load i8, i8* %arrayidx, align 1, !dbg !1733
  %conv20 = sext i8 %18 to i32, !dbg !1733
  switch i32 %conv20, label %sw.default [
    i32 80, label %sw.bb
    i32 75, label %sw.bb48
    i32 5, label %sw.bb50
    i32 6, label %sw.bb52
  ], !dbg !1734

sw.bb:                                            ; preds = %for.body
  %19 = load i8*, i8** %p, align 8, !dbg !1735
  %20 = load i32, i32* %i, align 4, !dbg !1738
  %idx.ext = sext i32 %20 to i64, !dbg !1739
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !1739
  %call21 = call i32 @memcmp(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i64 4) #9, !dbg !1740
  %cmp22 = icmp eq i32 %call21, 0, !dbg !1741
  br i1 %cmp22, label %if.then24, label %if.end46, !dbg !1742

if.then24:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1743, metadata !578), !dbg !1745
  %21 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1746
  %22 = load i8*, i8** %p, align 8, !dbg !1747
  %23 = load i32, i32* %i, align 4, !dbg !1748
  %idx.ext25 = sext i32 %23 to i64, !dbg !1749
  %add.ptr26 = getelementptr inbounds i8, i8* %22, i64 %idx.ext25, !dbg !1749
  %24 = load i64, i64* %current_offset, align 8, !dbg !1750
  %25 = load i32, i32* %i, align 4, !dbg !1751
  %conv27 = sext i32 %25 to i64, !dbg !1751
  %add = add nsw i64 %24, %conv27, !dbg !1752
  %call28 = call i32 @read_eocd(%struct.zip* %21, i8* %add.ptr26, i64 %add), !dbg !1753
  store i32 %call28, i32* %ret, align 4, !dbg !1745
  %26 = load i32, i32* %ret, align 4, !dbg !1754
  %cmp29 = icmp sgt i32 %26, 0, !dbg !1756
  br i1 %cmp29, label %if.then31, label %if.end45, !dbg !1757

if.then31:                                        ; preds = %if.then24
  %27 = load i32, i32* %i, align 4, !dbg !1758
  %cmp32 = icmp sge i32 %27, 20, !dbg !1761
  br i1 %cmp32, label %land.lhs.true, label %if.end44, !dbg !1762

land.lhs.true:                                    ; preds = %if.then31
  %28 = load i8*, i8** %p, align 8, !dbg !1763
  %29 = load i32, i32* %i, align 4, !dbg !1765
  %idx.ext34 = sext i32 %29 to i64, !dbg !1766
  %add.ptr35 = getelementptr inbounds i8, i8* %28, i64 %idx.ext34, !dbg !1766
  %add.ptr36 = getelementptr inbounds i8, i8* %add.ptr35, i64 -20, !dbg !1767
  %call37 = call i32 @memcmp(i8* %add.ptr36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i64 4) #9, !dbg !1768
  %cmp38 = icmp eq i32 %call37, 0, !dbg !1769
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !1770

if.then40:                                        ; preds = %land.lhs.true
  %30 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1772
  %31 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1774
  %32 = load i8*, i8** %p, align 8, !dbg !1775
  %33 = load i32, i32* %i, align 4, !dbg !1776
  %idx.ext41 = sext i32 %33 to i64, !dbg !1777
  %add.ptr42 = getelementptr inbounds i8, i8* %32, i64 %idx.ext41, !dbg !1777
  %add.ptr43 = getelementptr inbounds i8, i8* %add.ptr42, i64 -20, !dbg !1778
  call void @read_zip64_eocd(%struct.archive_read* %30, %struct.zip* %31, i8* %add.ptr43), !dbg !1779
  br label %if.end44, !dbg !1780

if.end44:                                         ; preds = %if.then40, %land.lhs.true, %if.then31
  %34 = load i32, i32* %ret, align 4, !dbg !1781
  store i32 %34, i32* %retval, align 4, !dbg !1782
  br label %return, !dbg !1782

if.end45:                                         ; preds = %if.then24
  br label %if.end46, !dbg !1783

if.end46:                                         ; preds = %if.end45, %sw.bb
  %35 = load i32, i32* %i, align 4, !dbg !1784
  %sub47 = sub nsw i32 %35, 4, !dbg !1784
  store i32 %sub47, i32* %i, align 4, !dbg !1784
  br label %sw.epilog, !dbg !1785

sw.bb48:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !dbg !1786
  %sub49 = sub nsw i32 %36, 1, !dbg !1786
  store i32 %sub49, i32* %i, align 4, !dbg !1786
  br label %sw.epilog, !dbg !1787

sw.bb50:                                          ; preds = %for.body
  %37 = load i32, i32* %i, align 4, !dbg !1788
  %sub51 = sub nsw i32 %37, 2, !dbg !1788
  store i32 %sub51, i32* %i, align 4, !dbg !1788
  br label %sw.epilog, !dbg !1789

sw.bb52:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !1790
  %sub53 = sub nsw i32 %38, 3, !dbg !1790
  store i32 %sub53, i32* %i, align 4, !dbg !1790
  br label %sw.epilog, !dbg !1791

sw.default:                                       ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !1792
  %sub54 = sub nsw i32 %39, 4, !dbg !1792
  store i32 %sub54, i32* %i, align 4, !dbg !1792
  br label %sw.epilog, !dbg !1793

sw.epilog:                                        ; preds = %sw.default, %sw.bb52, %sw.bb50, %sw.bb48, %if.end46
  br label %for.cond, !dbg !1794

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !1796
  br label %return, !dbg !1796

return:                                           ; preds = %for.end, %if.end44, %if.then15, %if.then9, %if.then2, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !1797
  ret i32 %40, !dbg !1797
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_seekable_read_header(%struct.archive_read* %a, %struct.archive_entry* %entry1) #0 !dbg !542 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %zip = alloca %struct.zip*, align 8
  %rsrc = alloca %struct.zip_entry*, align 8
  %offset = alloca i64, align 8
  %r = alloca i32, align 4
  %ret = alloca i32, align 4
  %ret2 = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1798, metadata !578), !dbg !1799
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !1800, metadata !578), !dbg !1801
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !1802, metadata !578), !dbg !1803
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1804
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1805
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1805
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1806
  %2 = load i8*, i8** %data, align 8, !dbg !1806
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !1807
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !1803
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %rsrc, metadata !1808, metadata !578), !dbg !1809
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1810, metadata !578), !dbg !1811
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1812, metadata !578), !dbg !1813
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1814, metadata !578), !dbg !1815
  store i32 0, i32* %ret, align 4, !dbg !1815
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1816
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 4, !dbg !1818
  %5 = load i32, i32* %has_encrypted_entries, align 8, !dbg !1818
  %cmp = icmp eq i32 %5, -1, !dbg !1819
  br i1 %cmp, label %if.then, label %if.end, !dbg !1820

if.then:                                          ; preds = %entry
  %6 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1821
  %has_encrypted_entries2 = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 4, !dbg !1822
  store i32 0, i32* %has_encrypted_entries2, align 8, !dbg !1823
  br label %if.end, !dbg !1821

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1824
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %7, i32 0, i32 0, !dbg !1825
  %archive_format = getelementptr inbounds %struct.archive, %struct.archive* %archive, i32 0, i32 3, !dbg !1826
  store i32 327680, i32* %archive_format, align 8, !dbg !1827
  %8 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1828
  %archive3 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %8, i32 0, i32 0, !dbg !1830
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive3, i32 0, i32 4, !dbg !1831
  %9 = load i8*, i8** %archive_format_name, align 8, !dbg !1831
  %cmp4 = icmp eq i8* %9, null, !dbg !1832
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !1833

if.then5:                                         ; preds = %if.end
  %10 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1834
  %archive6 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %10, i32 0, i32 0, !dbg !1835
  %archive_format_name7 = getelementptr inbounds %struct.archive, %struct.archive* %archive6, i32 0, i32 4, !dbg !1836
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8** %archive_format_name7, align 8, !dbg !1837
  br label %if.end8, !dbg !1834

if.end8:                                          ; preds = %if.then5, %if.end
  %11 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1838
  %zip_entries = getelementptr inbounds %struct.zip, %struct.zip* %11, i32 0, i32 5, !dbg !1840
  %12 = load %struct.zip_entry*, %struct.zip_entry** %zip_entries, align 8, !dbg !1840
  %cmp9 = icmp eq %struct.zip_entry* %12, null, !dbg !1841
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !1842

if.then10:                                        ; preds = %if.end8
  %13 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1843
  %14 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1845
  %call = call i32 @slurp_central_directory(%struct.archive_read* %13, %struct.zip* %14), !dbg !1846
  store i32 %call, i32* %r, align 4, !dbg !1847
  %15 = load i32, i32* %r, align 4, !dbg !1848
  %cmp11 = icmp ne i32 %15, 0, !dbg !1850
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !1851

if.then12:                                        ; preds = %if.then10
  %16 = load i32, i32* %r, align 4, !dbg !1852
  store i32 %16, i32* %retval, align 4, !dbg !1853
  br label %return, !dbg !1853

if.end13:                                         ; preds = %if.then10
  %17 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1854
  %tree = getelementptr inbounds %struct.zip, %struct.zip* %17, i32 0, i32 6, !dbg !1854
  %call14 = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %tree, %struct.archive_rb_node* null, i32 0), !dbg !1854
  %18 = bitcast %struct.archive_rb_node* %call14 to %struct.zip_entry*, !dbg !1855
  %19 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1856
  %entry15 = getelementptr inbounds %struct.zip, %struct.zip* %19, i32 0, i32 9, !dbg !1857
  store %struct.zip_entry* %18, %struct.zip_entry** %entry15, align 8, !dbg !1858
  br label %if.end24, !dbg !1859

if.else:                                          ; preds = %if.end8
  %20 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1860
  %entry16 = getelementptr inbounds %struct.zip, %struct.zip* %20, i32 0, i32 9, !dbg !1863
  %21 = load %struct.zip_entry*, %struct.zip_entry** %entry16, align 8, !dbg !1863
  %cmp17 = icmp ne %struct.zip_entry* %21, null, !dbg !1864
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !1860

if.then18:                                        ; preds = %if.else
  %22 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1865
  %tree19 = getelementptr inbounds %struct.zip, %struct.zip* %22, i32 0, i32 6, !dbg !1867
  %23 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1868
  %entry20 = getelementptr inbounds %struct.zip, %struct.zip* %23, i32 0, i32 9, !dbg !1869
  %24 = load %struct.zip_entry*, %struct.zip_entry** %entry20, align 8, !dbg !1869
  %node = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %24, i32 0, i32 0, !dbg !1870
  %call21 = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %tree19, %struct.archive_rb_node* %node, i32 1), !dbg !1871
  %25 = bitcast %struct.archive_rb_node* %call21 to %struct.zip_entry*, !dbg !1872
  %26 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1873
  %entry22 = getelementptr inbounds %struct.zip, %struct.zip* %26, i32 0, i32 9, !dbg !1874
  store %struct.zip_entry* %25, %struct.zip_entry** %entry22, align 8, !dbg !1875
  br label %if.end23, !dbg !1876

if.end23:                                         ; preds = %if.then18, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end13
  %27 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1877
  %entry25 = getelementptr inbounds %struct.zip, %struct.zip* %27, i32 0, i32 9, !dbg !1879
  %28 = load %struct.zip_entry*, %struct.zip_entry** %entry25, align 8, !dbg !1879
  %cmp26 = icmp eq %struct.zip_entry* %28, null, !dbg !1880
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !1881

if.then27:                                        ; preds = %if.end24
  store i32 1, i32* %retval, align 4, !dbg !1882
  br label %return, !dbg !1882

if.end28:                                         ; preds = %if.end24
  %29 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1883
  %entry29 = getelementptr inbounds %struct.zip, %struct.zip* %29, i32 0, i32 9, !dbg !1885
  %30 = load %struct.zip_entry*, %struct.zip_entry** %entry29, align 8, !dbg !1885
  %rsrcname = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %30, i32 0, i32 7, !dbg !1886
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %rsrcname, i32 0, i32 0, !dbg !1887
  %31 = load i8*, i8** %s, align 8, !dbg !1887
  %tobool = icmp ne i8* %31, null, !dbg !1883
  br i1 %tobool, label %if.then30, label %if.else35, !dbg !1888

if.then30:                                        ; preds = %if.end28
  %32 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1889
  %tree_rsrc = getelementptr inbounds %struct.zip, %struct.zip* %32, i32 0, i32 7, !dbg !1890
  %33 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1891
  %entry31 = getelementptr inbounds %struct.zip, %struct.zip* %33, i32 0, i32 9, !dbg !1892
  %34 = load %struct.zip_entry*, %struct.zip_entry** %entry31, align 8, !dbg !1892
  %rsrcname32 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %34, i32 0, i32 7, !dbg !1893
  %s33 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %rsrcname32, i32 0, i32 0, !dbg !1894
  %35 = load i8*, i8** %s33, align 8, !dbg !1894
  %call34 = call %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree* %tree_rsrc, i8* %35), !dbg !1895
  %36 = bitcast %struct.archive_rb_node* %call34 to %struct.zip_entry*, !dbg !1896
  store %struct.zip_entry* %36, %struct.zip_entry** %rsrc, align 8, !dbg !1897
  br label %if.end36, !dbg !1898

if.else35:                                        ; preds = %if.end28
  store %struct.zip_entry* null, %struct.zip_entry** %rsrc, align 8, !dbg !1899
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.then30
  %37 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1900
  %cctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %37, i32 0, i32 36, !dbg !1902
  %38 = load i8, i8* %cctx_valid, align 4, !dbg !1902
  %tobool37 = icmp ne i8 %38, 0, !dbg !1900
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !1903

if.then38:                                        ; preds = %if.end36
  %39 = load i32 (i32*)*, i32 (i32*)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 3), align 8, !dbg !1904
  %40 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1904
  %cctx = getelementptr inbounds %struct.zip, %struct.zip* %40, i32 0, i32 35, !dbg !1904
  %call39 = call i32 %39(i32* %cctx), !dbg !1904
  br label %if.end40, !dbg !1904

if.end40:                                         ; preds = %if.then38, %if.end36
  %41 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1905
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %41, i32 0, i32 38, !dbg !1907
  %42 = load i8, i8* %hctx_valid, align 4, !dbg !1907
  %tobool41 = icmp ne i8 %42, 0, !dbg !1905
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !1908

if.then42:                                        ; preds = %if.end40
  %43 = load void (i32*)*, void (i32*)** getelementptr inbounds (%struct.archive_hmac, %struct.archive_hmac* @__archive_hmac, i32 0, i32 3), align 8, !dbg !1909
  %44 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1909
  %hctx = getelementptr inbounds %struct.zip, %struct.zip* %44, i32 0, i32 37, !dbg !1909
  call void %43(i32* %hctx), !dbg !1909
  br label %if.end43, !dbg !1909

if.end43:                                         ; preds = %if.then42, %if.end40
  %45 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1910
  %hctx_valid44 = getelementptr inbounds %struct.zip, %struct.zip* %45, i32 0, i32 38, !dbg !1911
  store i8 0, i8* %hctx_valid44, align 4, !dbg !1912
  %46 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1913
  %cctx_valid45 = getelementptr inbounds %struct.zip, %struct.zip* %46, i32 0, i32 36, !dbg !1914
  store i8 0, i8* %cctx_valid45, align 4, !dbg !1915
  %47 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1916
  %tctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %47, i32 0, i32 34, !dbg !1917
  store i8 0, i8* %tctx_valid, align 4, !dbg !1918
  %48 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1919
  call void @__archive_read_reset_passphrase(%struct.archive_read* %48), !dbg !1920
  %49 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1921
  %archive46 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %49, i32 0, i32 0, !dbg !1922
  %call47 = call i64 @archive_filter_bytes(%struct.archive* %archive46, i32 0), !dbg !1923
  store i64 %call47, i64* %offset, align 8, !dbg !1924
  %50 = load i64, i64* %offset, align 8, !dbg !1925
  %51 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1927
  %entry48 = getelementptr inbounds %struct.zip, %struct.zip* %51, i32 0, i32 9, !dbg !1928
  %52 = load %struct.zip_entry*, %struct.zip_entry** %entry48, align 8, !dbg !1928
  %local_header_offset = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %52, i32 0, i32 2, !dbg !1929
  %53 = load i64, i64* %local_header_offset, align 8, !dbg !1929
  %cmp49 = icmp slt i64 %50, %53, !dbg !1930
  br i1 %cmp49, label %if.then50, label %if.else54, !dbg !1931

if.then50:                                        ; preds = %if.end43
  %54 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1932
  %55 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1933
  %entry51 = getelementptr inbounds %struct.zip, %struct.zip* %55, i32 0, i32 9, !dbg !1934
  %56 = load %struct.zip_entry*, %struct.zip_entry** %entry51, align 8, !dbg !1934
  %local_header_offset52 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %56, i32 0, i32 2, !dbg !1935
  %57 = load i64, i64* %local_header_offset52, align 8, !dbg !1935
  %58 = load i64, i64* %offset, align 8, !dbg !1936
  %sub = sub nsw i64 %57, %58, !dbg !1937
  %call53 = call i64 @__archive_read_consume(%struct.archive_read* %54, i64 %sub), !dbg !1938
  br label %if.end63, !dbg !1938

if.else54:                                        ; preds = %if.end43
  %59 = load i64, i64* %offset, align 8, !dbg !1939
  %60 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1941
  %entry55 = getelementptr inbounds %struct.zip, %struct.zip* %60, i32 0, i32 9, !dbg !1942
  %61 = load %struct.zip_entry*, %struct.zip_entry** %entry55, align 8, !dbg !1942
  %local_header_offset56 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %61, i32 0, i32 2, !dbg !1943
  %62 = load i64, i64* %local_header_offset56, align 8, !dbg !1943
  %cmp57 = icmp ne i64 %59, %62, !dbg !1944
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !1945

if.then58:                                        ; preds = %if.else54
  %63 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1946
  %64 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1948
  %entry59 = getelementptr inbounds %struct.zip, %struct.zip* %64, i32 0, i32 9, !dbg !1949
  %65 = load %struct.zip_entry*, %struct.zip_entry** %entry59, align 8, !dbg !1949
  %local_header_offset60 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %65, i32 0, i32 2, !dbg !1950
  %66 = load i64, i64* %local_header_offset60, align 8, !dbg !1950
  %call61 = call i64 @__archive_read_seek(%struct.archive_read* %63, i64 %66, i32 0), !dbg !1951
  br label %if.end62, !dbg !1952

if.end62:                                         ; preds = %if.then58, %if.else54
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then50
  %67 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1953
  %unconsumed = getelementptr inbounds %struct.zip, %struct.zip* %67, i32 0, i32 8, !dbg !1954
  store i64 0, i64* %unconsumed, align 8, !dbg !1955
  %68 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1956
  %69 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1957
  %70 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1958
  %call64 = call i32 @zip_read_local_file_header(%struct.archive_read* %68, %struct.archive_entry* %69, %struct.zip* %70), !dbg !1959
  store i32 %call64, i32* %r, align 4, !dbg !1960
  %71 = load i32, i32* %r, align 4, !dbg !1961
  %cmp65 = icmp ne i32 %71, 0, !dbg !1963
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !1964

if.then66:                                        ; preds = %if.end63
  %72 = load i32, i32* %r, align 4, !dbg !1965
  store i32 %72, i32* %retval, align 4, !dbg !1966
  br label %return, !dbg !1966

if.end67:                                         ; preds = %if.end63
  %73 = load %struct.zip_entry*, %struct.zip_entry** %rsrc, align 8, !dbg !1967
  %tobool68 = icmp ne %struct.zip_entry* %73, null, !dbg !1967
  br i1 %tobool68, label %if.then69, label %if.end74, !dbg !1969

if.then69:                                        ; preds = %if.end67
  call void @llvm.dbg.declare(metadata i32* %ret2, metadata !1970, metadata !578), !dbg !1972
  %74 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1973
  %75 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1974
  %76 = load %struct.zip_entry*, %struct.zip_entry** %rsrc, align 8, !dbg !1975
  %call70 = call i32 @zip_read_mac_metadata(%struct.archive_read* %74, %struct.archive_entry* %75, %struct.zip_entry* %76), !dbg !1976
  store i32 %call70, i32* %ret2, align 4, !dbg !1972
  %77 = load i32, i32* %ret2, align 4, !dbg !1977
  %78 = load i32, i32* %ret, align 4, !dbg !1979
  %cmp71 = icmp slt i32 %77, %78, !dbg !1980
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !1981

if.then72:                                        ; preds = %if.then69
  %79 = load i32, i32* %ret2, align 4, !dbg !1982
  store i32 %79, i32* %ret, align 4, !dbg !1983
  br label %if.end73, !dbg !1984

if.end73:                                         ; preds = %if.then72, %if.then69
  br label %if.end74, !dbg !1985

if.end74:                                         ; preds = %if.end73, %if.end67
  %80 = load i32, i32* %ret, align 4, !dbg !1986
  store i32 %80, i32* %retval, align 4, !dbg !1987
  br label %return, !dbg !1987

return:                                           ; preds = %if.end74, %if.then66, %if.then27, %if.then12
  %81 = load i32, i32* %retval, align 4, !dbg !1988
  ret i32 %81, !dbg !1988
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_zip_read_data_skip_seekable(%struct.archive_read* %a) #0 !dbg !560 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1989, metadata !578), !dbg !1990
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !1991, metadata !578), !dbg !1992
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1993
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1994
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1994
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1995
  %2 = load i8*, i8** %data, align 8, !dbg !1995
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !1996
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !1997
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !1998
  %unconsumed = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 8, !dbg !1999
  store i64 0, i64* %unconsumed, align 8, !dbg !2000
  ret i32 0, !dbg !2001
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_support_format_zip_capabilities_seekable(%struct.archive_read* %a) #0 !dbg !561 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2002, metadata !578), !dbg !2003
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2004
  ret i32 3, !dbg !2005
}

declare i64 @cm_zlib_crc32(i64, i8*, i32) #2

declare i8* @__archive_read_ahead(%struct.archive_read*, i64, i64*) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

declare %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @fake_crc32(i64 %crc, i8* %buff, i64 %len) #0 !dbg !480 {
entry:
  %crc.addr = alloca i64, align 8
  %buff.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i64 %crc, i64* %crc.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %crc.addr, metadata !2006, metadata !578), !dbg !2007
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !2008, metadata !578), !dbg !2009
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !2010, metadata !578), !dbg !2011
  %0 = load i64, i64* %crc.addr, align 8, !dbg !2012
  %1 = load i8*, i8** %buff.addr, align 8, !dbg !2013
  %2 = load i64, i64* %len.addr, align 8, !dbg !2014
  ret i64 0, !dbg !2015
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare void @__archive_read_reset_passphrase(%struct.archive_read*) #2

declare i64 @__archive_read_consume(%struct.archive_read*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @zip_read_local_file_header(%struct.archive_read* %a, %struct.archive_entry* %entry1, %struct.zip* %zip) #0 !dbg !482 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %zip.addr = alloca %struct.zip*, align 8
  %p = alloca i8*, align 8
  %h = alloca i8*, align 8
  %wp = alloca i32*, align 8
  %cp = alloca i8*, align 8
  %len = alloca i64, align 8
  %filename_length = alloca i64, align 8
  %extra_length = alloca i64, align 8
  %sconv = alloca %struct.archive_string_conv*, align 8
  %zip_entry = alloca %struct.zip_entry*, align 8
  %zip_entry_central_dir = alloca %struct.zip_entry, align 8
  %ret = alloca i32, align 4
  %version = alloca i8, align 1
  %has_slash = alloca i32, align 4
  %s = alloca %struct.archive_wstring, align 8
  %s256 = alloca %struct.archive_string, align 8
  %linkname_length = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2016, metadata !578), !dbg !2017
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !2018, metadata !578), !dbg !2019
  store %struct.zip* %zip, %struct.zip** %zip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip** %zip.addr, metadata !2020, metadata !578), !dbg !2021
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2022, metadata !578), !dbg !2023
  call void @llvm.dbg.declare(metadata i8** %h, metadata !2024, metadata !578), !dbg !2025
  call void @llvm.dbg.declare(metadata i32** %wp, metadata !2026, metadata !578), !dbg !2030
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !2031, metadata !578), !dbg !2032
  call void @llvm.dbg.declare(metadata i64* %len, metadata !2033, metadata !578), !dbg !2034
  call void @llvm.dbg.declare(metadata i64* %filename_length, metadata !2035, metadata !578), !dbg !2036
  call void @llvm.dbg.declare(metadata i64* %extra_length, metadata !2037, metadata !578), !dbg !2038
  call void @llvm.dbg.declare(metadata %struct.archive_string_conv** %sconv, metadata !2039, metadata !578), !dbg !2040
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %zip_entry, metadata !2041, metadata !578), !dbg !2042
  %0 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2043
  %entry2 = getelementptr inbounds %struct.zip, %struct.zip* %0, i32 0, i32 9, !dbg !2044
  %1 = load %struct.zip_entry*, %struct.zip_entry** %entry2, align 8, !dbg !2044
  store %struct.zip_entry* %1, %struct.zip_entry** %zip_entry, align 8, !dbg !2042
  call void @llvm.dbg.declare(metadata %struct.zip_entry* %zip_entry_central_dir, metadata !2045, metadata !578), !dbg !2046
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2047, metadata !578), !dbg !2048
  store i32 0, i32* %ret, align 4, !dbg !2048
  call void @llvm.dbg.declare(metadata i8* %version, metadata !2049, metadata !578), !dbg !2050
  %2 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2051
  %3 = bitcast %struct.zip_entry* %zip_entry_central_dir to i8*, !dbg !2052
  %4 = bitcast %struct.zip_entry* %2 to i8*, !dbg !2052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 144, i32 8, i1 false), !dbg !2052
  %5 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2053
  %decompress_init = getelementptr inbounds %struct.zip, %struct.zip* %5, i32 0, i32 16, !dbg !2054
  store i8 0, i8* %decompress_init, align 1, !dbg !2055
  %6 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2056
  %end_of_entry = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 17, !dbg !2057
  store i8 0, i8* %end_of_entry, align 2, !dbg !2058
  %7 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2059
  %entry_uncompressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 12, !dbg !2060
  store i64 0, i64* %entry_uncompressed_bytes_read, align 8, !dbg !2061
  %8 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2062
  %entry_compressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 11, !dbg !2063
  store i64 0, i64* %entry_compressed_bytes_read, align 8, !dbg !2064
  %9 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2065
  %crc32func = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 14, !dbg !2066
  %10 = load i64 (i64, i8*, i64)*, i64 (i64, i8*, i64)** %crc32func, align 8, !dbg !2066
  %call = call i64 %10(i64 0, i8* null, i64 0), !dbg !2065
  %11 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2067
  %entry_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %11, i32 0, i32 13, !dbg !2068
  store i64 %call, i64* %entry_crc32, align 8, !dbg !2069
  %12 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2070
  %sconv3 = getelementptr inbounds %struct.zip, %struct.zip* %12, i32 0, i32 22, !dbg !2072
  %13 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv3, align 8, !dbg !2072
  %cmp = icmp eq %struct.archive_string_conv* %13, null, !dbg !2073
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2074

land.lhs.true:                                    ; preds = %entry
  %14 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2075
  %init_default_conversion = getelementptr inbounds %struct.zip, %struct.zip* %14, i32 0, i32 25, !dbg !2077
  %15 = load i32, i32* %init_default_conversion, align 8, !dbg !2077
  %tobool = icmp ne i32 %15, 0, !dbg !2075
  br i1 %tobool, label %if.end, label %if.then, !dbg !2078

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2079
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %16, i32 0, i32 0, !dbg !2081
  %call4 = call %struct.archive_string_conv* @archive_string_default_conversion_for_read(%struct.archive* %archive), !dbg !2082
  %17 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2083
  %sconv_default = getelementptr inbounds %struct.zip, %struct.zip* %17, i32 0, i32 23, !dbg !2084
  store %struct.archive_string_conv* %call4, %struct.archive_string_conv** %sconv_default, align 8, !dbg !2085
  %18 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2086
  %init_default_conversion5 = getelementptr inbounds %struct.zip, %struct.zip* %18, i32 0, i32 25, !dbg !2087
  store i32 1, i32* %init_default_conversion5, align 8, !dbg !2088
  br label %if.end, !dbg !2089

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2090
  %call6 = call i8* @__archive_read_ahead(%struct.archive_read* %19, i64 30, i64* null), !dbg !2092
  store i8* %call6, i8** %p, align 8, !dbg !2093
  %cmp7 = icmp eq i8* %call6, null, !dbg !2094
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !2095

if.then8:                                         ; preds = %if.end
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2096
  %archive9 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %20, i32 0, i32 0, !dbg !2098
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive9, i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0)), !dbg !2099
  store i32 -30, i32* %retval, align 4, !dbg !2100
  br label %return, !dbg !2100

if.end10:                                         ; preds = %if.end
  %21 = load i8*, i8** %p, align 8, !dbg !2101
  %call11 = call i32 @memcmp(i8* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i64 4) #9, !dbg !2103
  %cmp12 = icmp ne i32 %call11, 0, !dbg !2104
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !2105

if.then13:                                        ; preds = %if.end10
  %22 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2106
  %archive14 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %22, i32 0, i32 0, !dbg !2108
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive14, i32 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0)), !dbg !2109
  store i32 -30, i32* %retval, align 4, !dbg !2110
  br label %return, !dbg !2110

if.end15:                                         ; preds = %if.end10
  %23 = load i8*, i8** %p, align 8, !dbg !2111
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 4, !dbg !2111
  %24 = load i8, i8* %arrayidx, align 1, !dbg !2111
  store i8 %24, i8* %version, align 1, !dbg !2112
  %25 = load i8*, i8** %p, align 8, !dbg !2113
  %arrayidx16 = getelementptr inbounds i8, i8* %25, i64 5, !dbg !2113
  %26 = load i8, i8* %arrayidx16, align 1, !dbg !2113
  %27 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2114
  %system = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %27, i32 0, i32 15, !dbg !2115
  store i8 %26, i8* %system, align 1, !dbg !2116
  %28 = load i8*, i8** %p, align 8, !dbg !2117
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 6, !dbg !2118
  %call17 = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !2119
  %29 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2120
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %29, i32 0, i32 13, !dbg !2121
  store i16 %call17, i16* %zip_flags, align 2, !dbg !2122
  %30 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2123
  %zip_flags18 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %30, i32 0, i32 13, !dbg !2125
  %31 = load i16, i16* %zip_flags18, align 2, !dbg !2125
  %conv = zext i16 %31 to i32, !dbg !2123
  %and = and i32 %conv, 65, !dbg !2126
  %tobool19 = icmp ne i32 %and, 0, !dbg !2126
  br i1 %tobool19, label %if.then20, label %if.end37, !dbg !2127

if.then20:                                        ; preds = %if.end15
  %32 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2128
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %32, i32 0, i32 4, !dbg !2130
  store i32 1, i32* %has_encrypted_entries, align 8, !dbg !2131
  %33 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2132
  call void @archive_entry_set_is_data_encrypted(%struct.archive_entry* %33, i8 signext 1), !dbg !2133
  %34 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2134
  %zip_flags21 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %34, i32 0, i32 13, !dbg !2136
  %35 = load i16, i16* %zip_flags21, align 2, !dbg !2136
  %conv22 = zext i16 %35 to i32, !dbg !2134
  %and23 = and i32 %conv22, 8192, !dbg !2137
  %tobool24 = icmp ne i32 %and23, 0, !dbg !2137
  br i1 %tobool24, label %land.lhs.true25, label %if.end36, !dbg !2138

land.lhs.true25:                                  ; preds = %if.then20
  %36 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2139
  %zip_flags26 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %36, i32 0, i32 13, !dbg !2140
  %37 = load i16, i16* %zip_flags26, align 2, !dbg !2140
  %conv27 = zext i16 %37 to i32, !dbg !2139
  %and28 = and i32 %conv27, 1, !dbg !2141
  %tobool29 = icmp ne i32 %and28, 0, !dbg !2141
  br i1 %tobool29, label %land.lhs.true30, label %if.end36, !dbg !2142

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %38 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2143
  %zip_flags31 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %38, i32 0, i32 13, !dbg !2144
  %39 = load i16, i16* %zip_flags31, align 2, !dbg !2144
  %conv32 = zext i16 %39 to i32, !dbg !2143
  %and33 = and i32 %conv32, 64, !dbg !2145
  %tobool34 = icmp ne i32 %and33, 0, !dbg !2145
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !2146

if.then35:                                        ; preds = %land.lhs.true30
  %40 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2148
  call void @archive_entry_set_is_metadata_encrypted(%struct.archive_entry* %40, i8 signext 1), !dbg !2150
  store i32 -30, i32* %retval, align 4, !dbg !2151
  br label %return, !dbg !2151

if.end36:                                         ; preds = %land.lhs.true30, %land.lhs.true25, %if.then20
  br label %if.end37, !dbg !2152

if.end37:                                         ; preds = %if.end36, %if.end15
  %41 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2153
  %zip_flags38 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %41, i32 0, i32 13, !dbg !2154
  %42 = load i16, i16* %zip_flags38, align 2, !dbg !2154
  %conv39 = zext i16 %42 to i32, !dbg !2153
  %and40 = and i32 %conv39, 1, !dbg !2155
  %conv41 = trunc i32 %and40 to i8, !dbg !2156
  %43 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2157
  %init_decryption = getelementptr inbounds %struct.zip, %struct.zip* %43, i32 0, i32 27, !dbg !2158
  store i8 %conv41, i8* %init_decryption, align 8, !dbg !2159
  %44 = load i8*, i8** %p, align 8, !dbg !2160
  %add.ptr42 = getelementptr inbounds i8, i8* %44, i64 8, !dbg !2161
  %call43 = call zeroext i16 @archive_le16dec(i8* %add.ptr42), !dbg !2162
  %conv44 = trunc i16 %call43 to i8, !dbg !2163
  %45 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2164
  %compression = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %45, i32 0, i32 14, !dbg !2165
  store i8 %conv44, i8* %compression, align 8, !dbg !2166
  %46 = load i8*, i8** %p, align 8, !dbg !2167
  %add.ptr45 = getelementptr inbounds i8, i8* %46, i64 10, !dbg !2168
  %call46 = call i64 @zip_time(i8* %add.ptr45), !dbg !2169
  %47 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2170
  %mtime = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %47, i32 0, i32 8, !dbg !2171
  store i64 %call46, i64* %mtime, align 8, !dbg !2172
  %48 = load i8*, i8** %p, align 8, !dbg !2173
  %add.ptr47 = getelementptr inbounds i8, i8* %48, i64 14, !dbg !2174
  %call48 = call i32 @archive_le32dec(i8* %add.ptr47), !dbg !2175
  %49 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2176
  %cm_zlib_crc32 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %49, i32 0, i32 11, !dbg !2177
  store i32 %call48, i32* %cm_zlib_crc32, align 8, !dbg !2178
  %50 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2179
  %zip_flags49 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %50, i32 0, i32 13, !dbg !2181
  %51 = load i16, i16* %zip_flags49, align 2, !dbg !2181
  %conv50 = zext i16 %51 to i32, !dbg !2179
  %and51 = and i32 %conv50, 8, !dbg !2182
  %tobool52 = icmp ne i32 %and51, 0, !dbg !2182
  br i1 %tobool52, label %if.then53, label %if.else, !dbg !2183

if.then53:                                        ; preds = %if.end37
  %52 = load i8*, i8** %p, align 8, !dbg !2184
  %arrayidx54 = getelementptr inbounds i8, i8* %52, i64 11, !dbg !2184
  %53 = load i8, i8* %arrayidx54, align 1, !dbg !2184
  %54 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2185
  %decdat = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %54, i32 0, i32 17, !dbg !2186
  store i8 %53, i8* %decdat, align 1, !dbg !2187
  br label %if.end57, !dbg !2185

if.else:                                          ; preds = %if.end37
  %55 = load i8*, i8** %p, align 8, !dbg !2188
  %arrayidx55 = getelementptr inbounds i8, i8* %55, i64 17, !dbg !2188
  %56 = load i8, i8* %arrayidx55, align 1, !dbg !2188
  %57 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2189
  %decdat56 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %57, i32 0, i32 17, !dbg !2190
  store i8 %56, i8* %decdat56, align 1, !dbg !2191
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then53
  %58 = load i8*, i8** %p, align 8, !dbg !2192
  %add.ptr58 = getelementptr inbounds i8, i8* %58, i64 18, !dbg !2193
  %call59 = call i32 @archive_le32dec(i8* %add.ptr58), !dbg !2194
  %conv60 = zext i32 %call59 to i64, !dbg !2194
  %59 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2195
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %59, i32 0, i32 3, !dbg !2196
  store i64 %conv60, i64* %compressed_size, align 8, !dbg !2197
  %60 = load i8*, i8** %p, align 8, !dbg !2198
  %add.ptr61 = getelementptr inbounds i8, i8* %60, i64 22, !dbg !2199
  %call62 = call i32 @archive_le32dec(i8* %add.ptr61), !dbg !2200
  %conv63 = zext i32 %call62 to i64, !dbg !2200
  %61 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2201
  %uncompressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %61, i32 0, i32 4, !dbg !2202
  store i64 %conv63, i64* %uncompressed_size, align 8, !dbg !2203
  %62 = load i8*, i8** %p, align 8, !dbg !2204
  %add.ptr64 = getelementptr inbounds i8, i8* %62, i64 26, !dbg !2205
  %call65 = call zeroext i16 @archive_le16dec(i8* %add.ptr64), !dbg !2206
  %conv66 = zext i16 %call65 to i64, !dbg !2206
  store i64 %conv66, i64* %filename_length, align 8, !dbg !2207
  %63 = load i8*, i8** %p, align 8, !dbg !2208
  %add.ptr67 = getelementptr inbounds i8, i8* %63, i64 28, !dbg !2209
  %call68 = call zeroext i16 @archive_le16dec(i8* %add.ptr67), !dbg !2210
  %conv69 = zext i16 %call68 to i64, !dbg !2210
  store i64 %conv69, i64* %extra_length, align 8, !dbg !2211
  %64 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2212
  %call70 = call i64 @__archive_read_consume(%struct.archive_read* %64, i64 30), !dbg !2213
  %65 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2214
  %66 = load i64, i64* %filename_length, align 8, !dbg !2216
  %call71 = call i8* @__archive_read_ahead(%struct.archive_read* %65, i64 %66, i64* null), !dbg !2217
  store i8* %call71, i8** %h, align 8, !dbg !2218
  %cmp72 = icmp eq i8* %call71, null, !dbg !2219
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !2220

if.then74:                                        ; preds = %if.end57
  %67 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2221
  %archive75 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %67, i32 0, i32 0, !dbg !2223
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive75, i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0)), !dbg !2224
  store i32 -30, i32* %retval, align 4, !dbg !2225
  br label %return, !dbg !2225

if.end76:                                         ; preds = %if.end57
  %68 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2226
  %zip_flags77 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %68, i32 0, i32 13, !dbg !2228
  %69 = load i16, i16* %zip_flags77, align 2, !dbg !2228
  %conv78 = zext i16 %69 to i32, !dbg !2226
  %and79 = and i32 %conv78, 2048, !dbg !2229
  %tobool80 = icmp ne i32 %and79, 0, !dbg !2229
  br i1 %tobool80, label %if.then81, label %if.else95, !dbg !2230

if.then81:                                        ; preds = %if.end76
  %70 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2231
  %sconv_utf8 = getelementptr inbounds %struct.zip, %struct.zip* %70, i32 0, i32 24, !dbg !2234
  %71 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8, align 8, !dbg !2234
  %cmp82 = icmp eq %struct.archive_string_conv* %71, null, !dbg !2235
  br i1 %cmp82, label %if.then84, label %if.end93, !dbg !2236

if.then84:                                        ; preds = %if.then81
  %72 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2237
  %archive85 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %72, i32 0, i32 0, !dbg !2239
  %call86 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive85, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 1), !dbg !2240
  %73 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2241
  %sconv_utf887 = getelementptr inbounds %struct.zip, %struct.zip* %73, i32 0, i32 24, !dbg !2242
  store %struct.archive_string_conv* %call86, %struct.archive_string_conv** %sconv_utf887, align 8, !dbg !2243
  %74 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2244
  %sconv_utf888 = getelementptr inbounds %struct.zip, %struct.zip* %74, i32 0, i32 24, !dbg !2246
  %75 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf888, align 8, !dbg !2246
  %cmp89 = icmp eq %struct.archive_string_conv* %75, null, !dbg !2247
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !2248

if.then91:                                        ; preds = %if.then84
  store i32 -30, i32* %retval, align 4, !dbg !2249
  br label %return, !dbg !2249

if.end92:                                         ; preds = %if.then84
  br label %if.end93, !dbg !2250

if.end93:                                         ; preds = %if.end92, %if.then81
  %76 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2251
  %sconv_utf894 = getelementptr inbounds %struct.zip, %struct.zip* %76, i32 0, i32 24, !dbg !2252
  %77 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf894, align 8, !dbg !2252
  store %struct.archive_string_conv* %77, %struct.archive_string_conv** %sconv, align 8, !dbg !2253
  br label %if.end104, !dbg !2254

if.else95:                                        ; preds = %if.end76
  %78 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2255
  %sconv96 = getelementptr inbounds %struct.zip, %struct.zip* %78, i32 0, i32 22, !dbg !2258
  %79 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv96, align 8, !dbg !2258
  %cmp97 = icmp ne %struct.archive_string_conv* %79, null, !dbg !2259
  br i1 %cmp97, label %if.then99, label %if.else101, !dbg !2255

if.then99:                                        ; preds = %if.else95
  %80 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2260
  %sconv100 = getelementptr inbounds %struct.zip, %struct.zip* %80, i32 0, i32 22, !dbg !2261
  %81 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv100, align 8, !dbg !2261
  store %struct.archive_string_conv* %81, %struct.archive_string_conv** %sconv, align 8, !dbg !2262
  br label %if.end103, !dbg !2263

if.else101:                                       ; preds = %if.else95
  %82 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2264
  %sconv_default102 = getelementptr inbounds %struct.zip, %struct.zip* %82, i32 0, i32 23, !dbg !2265
  %83 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_default102, align 8, !dbg !2265
  store %struct.archive_string_conv* %83, %struct.archive_string_conv** %sconv, align 8, !dbg !2266
  br label %if.end103

if.end103:                                        ; preds = %if.else101, %if.then99
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end93
  %84 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2267
  %85 = load i8*, i8** %h, align 8, !dbg !2269
  %86 = load i64, i64* %filename_length, align 8, !dbg !2270
  %87 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2271
  %call105 = call i32 @_archive_entry_copy_pathname_l(%struct.archive_entry* %84, i8* %85, i64 %86, %struct.archive_string_conv* %87), !dbg !2272
  %cmp106 = icmp ne i32 %call105, 0, !dbg !2273
  br i1 %cmp106, label %if.then108, label %if.end117, !dbg !2274

if.then108:                                       ; preds = %if.end104
  %call109 = call i32* @__errno_location() #1, !dbg !2275
  %88 = load i32, i32* %call109, align 4, !dbg !2275
  %cmp110 = icmp eq i32 %88, 12, !dbg !2278
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !2279

if.then112:                                       ; preds = %if.then108
  %89 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2280
  %archive113 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %89, i32 0, i32 0, !dbg !2282
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive113, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i32 0, i32 0)), !dbg !2283
  store i32 -30, i32* %retval, align 4, !dbg !2284
  br label %return, !dbg !2284

if.end114:                                        ; preds = %if.then108
  %90 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2285
  %archive115 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %90, i32 0, i32 0, !dbg !2286
  %91 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2287
  %call116 = call i8* @archive_string_conversion_charset_name(%struct.archive_string_conv* %91), !dbg !2288
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive115, i32 84, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i32 0, i32 0), i8* %call116), !dbg !2289
  store i32 -20, i32* %ret, align 4, !dbg !2290
  br label %if.end117, !dbg !2291

if.end117:                                        ; preds = %if.end114, %if.end104
  %92 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2292
  %93 = load i64, i64* %filename_length, align 8, !dbg !2293
  %call118 = call i64 @__archive_read_consume(%struct.archive_read* %92, i64 %93), !dbg !2294
  %94 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2295
  %95 = load i64, i64* %extra_length, align 8, !dbg !2297
  %call119 = call i8* @__archive_read_ahead(%struct.archive_read* %94, i64 %95, i64* null), !dbg !2298
  store i8* %call119, i8** %h, align 8, !dbg !2299
  %cmp120 = icmp eq i8* %call119, null, !dbg !2300
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !2301

if.then122:                                       ; preds = %if.end117
  %96 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2302
  %archive123 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %96, i32 0, i32 0, !dbg !2304
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive123, i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0)), !dbg !2305
  store i32 -30, i32* %retval, align 4, !dbg !2306
  br label %return, !dbg !2306

if.end124:                                        ; preds = %if.end117
  %97 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2307
  %98 = load i8*, i8** %h, align 8, !dbg !2309
  %99 = load i64, i64* %extra_length, align 8, !dbg !2310
  %100 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2311
  %call125 = call i32 @process_extra(%struct.archive_read* %97, i8* %98, i64 %99, %struct.zip_entry* %100), !dbg !2312
  %cmp126 = icmp ne i32 0, %call125, !dbg !2313
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !2314

if.then128:                                       ; preds = %if.end124
  store i32 -30, i32* %retval, align 4, !dbg !2315
  br label %return, !dbg !2315

if.end129:                                        ; preds = %if.end124
  %101 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2317
  %102 = load i64, i64* %extra_length, align 8, !dbg !2318
  %call130 = call i64 @__archive_read_consume(%struct.archive_read* %101, i64 %102), !dbg !2319
  %103 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2320
  %mode = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %103, i32 0, i32 12, !dbg !2322
  %104 = load i16, i16* %mode, align 4, !dbg !2322
  %conv131 = zext i16 %104 to i32, !dbg !2320
  %and132 = and i32 %conv131, 61440, !dbg !2323
  %cmp133 = icmp eq i32 %and132, 4096, !dbg !2324
  br i1 %cmp133, label %if.then135, label %if.end143, !dbg !2325

if.then135:                                       ; preds = %if.end129
  %105 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2326
  %mode136 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %105, i32 0, i32 12, !dbg !2328
  %106 = load i16, i16* %mode136, align 4, !dbg !2329
  %conv137 = zext i16 %106 to i32, !dbg !2329
  %and138 = and i32 %conv137, -61441, !dbg !2329
  %conv139 = trunc i32 %and138 to i16, !dbg !2329
  store i16 %conv139, i16* %mode136, align 4, !dbg !2329
  %107 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2330
  %mode140 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %107, i32 0, i32 12, !dbg !2331
  %108 = load i16, i16* %mode140, align 4, !dbg !2332
  %conv141 = zext i16 %108 to i32, !dbg !2332
  %or = or i32 %conv141, 32768, !dbg !2332
  %conv142 = trunc i32 %or to i16, !dbg !2332
  store i16 %conv142, i16* %mode140, align 4, !dbg !2332
  br label %if.end143, !dbg !2333

if.end143:                                        ; preds = %if.then135, %if.end129
  %109 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2334
  %mode144 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %109, i32 0, i32 12, !dbg !2336
  %110 = load i16, i16* %mode144, align 4, !dbg !2336
  %conv145 = zext i16 %110 to i32, !dbg !2334
  %cmp146 = icmp eq i32 %conv145, 0, !dbg !2337
  br i1 %cmp146, label %if.then148, label %if.end153, !dbg !2338

if.then148:                                       ; preds = %if.end143
  %111 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2339
  %mode149 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %111, i32 0, i32 12, !dbg !2341
  %112 = load i16, i16* %mode149, align 4, !dbg !2342
  %conv150 = zext i16 %112 to i32, !dbg !2342
  %or151 = or i32 %conv150, 436, !dbg !2342
  %conv152 = trunc i32 %or151 to i16, !dbg !2342
  store i16 %conv152, i16* %mode149, align 4, !dbg !2342
  br label %if.end153, !dbg !2343

if.end153:                                        ; preds = %if.then148, %if.end143
  %113 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2344
  %mode154 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %113, i32 0, i32 12, !dbg !2346
  %114 = load i16, i16* %mode154, align 4, !dbg !2346
  %conv155 = zext i16 %114 to i32, !dbg !2344
  %and156 = and i32 %conv155, 61440, !dbg !2347
  %cmp157 = icmp ne i32 %and156, 16384, !dbg !2348
  br i1 %cmp157, label %if.then159, label %if.end213, !dbg !2349

if.then159:                                       ; preds = %if.end153
  call void @llvm.dbg.declare(metadata i32* %has_slash, metadata !2350, metadata !578), !dbg !2352
  %115 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2353
  %call160 = call i32* @archive_entry_pathname_w(%struct.archive_entry* %115), !dbg !2354
  store i32* %call160, i32** %wp, align 8, !dbg !2355
  %116 = load i32*, i32** %wp, align 8, !dbg !2356
  %cmp161 = icmp ne i32* %116, null, !dbg !2358
  br i1 %cmp161, label %if.then163, label %if.else170, !dbg !2359

if.then163:                                       ; preds = %if.then159
  %117 = load i32*, i32** %wp, align 8, !dbg !2360
  %call164 = call i64 @wcslen(i32* %117) #9, !dbg !2362
  store i64 %call164, i64* %len, align 8, !dbg !2363
  %118 = load i64, i64* %len, align 8, !dbg !2364
  %cmp165 = icmp ugt i64 %118, 0, !dbg !2365
  br i1 %cmp165, label %land.rhs, label %land.end, !dbg !2366

land.rhs:                                         ; preds = %if.then163
  %119 = load i64, i64* %len, align 8, !dbg !2367
  %sub = sub i64 %119, 1, !dbg !2369
  %120 = load i32*, i32** %wp, align 8, !dbg !2370
  %arrayidx167 = getelementptr inbounds i32, i32* %120, i64 %sub, !dbg !2370
  %121 = load i32, i32* %arrayidx167, align 4, !dbg !2370
  %cmp168 = icmp eq i32 %121, 47, !dbg !2371
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then163
  %122 = phi i1 [ false, %if.then163 ], [ %cmp168, %land.rhs ]
  %land.ext = zext i1 %122 to i32, !dbg !2372
  store i32 %land.ext, i32* %has_slash, align 4, !dbg !2374
  br label %if.end185, !dbg !2375

if.else170:                                       ; preds = %if.then159
  %123 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2376
  %call171 = call i8* @archive_entry_pathname(%struct.archive_entry* %123), !dbg !2378
  store i8* %call171, i8** %cp, align 8, !dbg !2379
  %124 = load i8*, i8** %cp, align 8, !dbg !2380
  %cmp172 = icmp ne i8* %124, null, !dbg !2381
  br i1 %cmp172, label %cond.true, label %cond.false, !dbg !2382

cond.true:                                        ; preds = %if.else170
  %125 = load i8*, i8** %cp, align 8, !dbg !2383
  %call174 = call i64 @strlen(i8* %125) #9, !dbg !2385
  br label %cond.end, !dbg !2386

cond.false:                                       ; preds = %if.else170
  br label %cond.end, !dbg !2387

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call174, %cond.true ], [ 0, %cond.false ], !dbg !2389
  store i64 %cond, i64* %len, align 8, !dbg !2391
  %126 = load i64, i64* %len, align 8, !dbg !2392
  %cmp175 = icmp ugt i64 %126, 0, !dbg !2393
  br i1 %cmp175, label %land.rhs177, label %land.end183, !dbg !2394

land.rhs177:                                      ; preds = %cond.end
  %127 = load i64, i64* %len, align 8, !dbg !2395
  %sub178 = sub i64 %127, 1, !dbg !2396
  %128 = load i8*, i8** %cp, align 8, !dbg !2397
  %arrayidx179 = getelementptr inbounds i8, i8* %128, i64 %sub178, !dbg !2397
  %129 = load i8, i8* %arrayidx179, align 1, !dbg !2397
  %conv180 = sext i8 %129 to i32, !dbg !2397
  %cmp181 = icmp eq i32 %conv180, 47, !dbg !2398
  br label %land.end183

land.end183:                                      ; preds = %land.rhs177, %cond.end
  %130 = phi i1 [ false, %cond.end ], [ %cmp181, %land.rhs177 ]
  %land.ext184 = zext i1 %130 to i32, !dbg !2399
  store i32 %land.ext184, i32* %has_slash, align 4, !dbg !2400
  br label %if.end185

if.end185:                                        ; preds = %land.end183, %land.end
  %131 = load i32, i32* %has_slash, align 4, !dbg !2401
  %tobool186 = icmp ne i32 %131, 0, !dbg !2401
  br i1 %tobool186, label %if.then187, label %if.else200, !dbg !2403

if.then187:                                       ; preds = %if.end185
  %132 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2404
  %mode188 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %132, i32 0, i32 12, !dbg !2406
  %133 = load i16, i16* %mode188, align 4, !dbg !2407
  %conv189 = zext i16 %133 to i32, !dbg !2407
  %and190 = and i32 %conv189, -61441, !dbg !2407
  %conv191 = trunc i32 %and190 to i16, !dbg !2407
  store i16 %conv191, i16* %mode188, align 4, !dbg !2407
  %134 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2408
  %mode192 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %134, i32 0, i32 12, !dbg !2409
  %135 = load i16, i16* %mode192, align 4, !dbg !2410
  %conv193 = zext i16 %135 to i32, !dbg !2410
  %or194 = or i32 %conv193, 16384, !dbg !2410
  %conv195 = trunc i32 %or194 to i16, !dbg !2410
  store i16 %conv195, i16* %mode192, align 4, !dbg !2410
  %136 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2411
  %mode196 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %136, i32 0, i32 12, !dbg !2412
  %137 = load i16, i16* %mode196, align 4, !dbg !2413
  %conv197 = zext i16 %137 to i32, !dbg !2413
  %or198 = or i32 %conv197, 73, !dbg !2413
  %conv199 = trunc i32 %or198 to i16, !dbg !2413
  store i16 %conv199, i16* %mode196, align 4, !dbg !2413
  br label %if.end212, !dbg !2414

if.else200:                                       ; preds = %if.end185
  %138 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2415
  %mode201 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %138, i32 0, i32 12, !dbg !2418
  %139 = load i16, i16* %mode201, align 4, !dbg !2418
  %conv202 = zext i16 %139 to i32, !dbg !2415
  %and203 = and i32 %conv202, 61440, !dbg !2419
  %cmp204 = icmp eq i32 %and203, 0, !dbg !2420
  br i1 %cmp204, label %if.then206, label %if.end211, !dbg !2421

if.then206:                                       ; preds = %if.else200
  %140 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2422
  %mode207 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %140, i32 0, i32 12, !dbg !2424
  %141 = load i16, i16* %mode207, align 4, !dbg !2425
  %conv208 = zext i16 %141 to i32, !dbg !2425
  %or209 = or i32 %conv208, 32768, !dbg !2425
  %conv210 = trunc i32 %or209 to i16, !dbg !2425
  store i16 %conv210, i16* %mode207, align 4, !dbg !2425
  br label %if.end211, !dbg !2426

if.end211:                                        ; preds = %if.then206, %if.else200
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then187
  br label %if.end213, !dbg !2427

if.end213:                                        ; preds = %if.end212, %if.end153
  %142 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2428
  %mode214 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %142, i32 0, i32 12, !dbg !2430
  %143 = load i16, i16* %mode214, align 4, !dbg !2430
  %conv215 = zext i16 %143 to i32, !dbg !2428
  %and216 = and i32 %conv215, 61440, !dbg !2431
  %cmp217 = icmp eq i32 %and216, 16384, !dbg !2432
  br i1 %cmp217, label %if.then219, label %if.end267, !dbg !2433

if.then219:                                       ; preds = %if.end213
  %144 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2434
  %call220 = call i32* @archive_entry_pathname_w(%struct.archive_entry* %144), !dbg !2436
  store i32* %call220, i32** %wp, align 8, !dbg !2437
  %145 = load i32*, i32** %wp, align 8, !dbg !2438
  %cmp221 = icmp ne i32* %145, null, !dbg !2440
  br i1 %cmp221, label %if.then223, label %if.else238, !dbg !2441

if.then223:                                       ; preds = %if.then219
  %146 = load i32*, i32** %wp, align 8, !dbg !2442
  %call224 = call i64 @wcslen(i32* %146) #9, !dbg !2444
  store i64 %call224, i64* %len, align 8, !dbg !2445
  %147 = load i64, i64* %len, align 8, !dbg !2446
  %cmp225 = icmp ugt i64 %147, 0, !dbg !2448
  br i1 %cmp225, label %land.lhs.true227, label %if.end237, !dbg !2449

land.lhs.true227:                                 ; preds = %if.then223
  %148 = load i64, i64* %len, align 8, !dbg !2450
  %sub228 = sub i64 %148, 1, !dbg !2452
  %149 = load i32*, i32** %wp, align 8, !dbg !2453
  %arrayidx229 = getelementptr inbounds i32, i32* %149, i64 %sub228, !dbg !2453
  %150 = load i32, i32* %arrayidx229, align 4, !dbg !2453
  %cmp230 = icmp ne i32 %150, 47, !dbg !2454
  br i1 %cmp230, label %if.then232, label %if.end237, !dbg !2455

if.then232:                                       ; preds = %land.lhs.true227
  call void @llvm.dbg.declare(metadata %struct.archive_wstring* %s, metadata !2456, metadata !578), !dbg !2464
  br label %do.body, !dbg !2465

do.body:                                          ; preds = %if.then232
  %s233 = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %s, i32 0, i32 0, !dbg !2466
  store i32* null, i32** %s233, align 8, !dbg !2466
  %length = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %s, i32 0, i32 1, !dbg !2466
  store i64 0, i64* %length, align 8, !dbg !2466
  %buffer_length = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %s, i32 0, i32 2, !dbg !2466
  store i64 0, i64* %buffer_length, align 8, !dbg !2466
  br label %do.end, !dbg !2466

do.end:                                           ; preds = %do.body
  %151 = load i32*, i32** %wp, align 8, !dbg !2469
  %call234 = call %struct.archive_wstring* @archive_wstrcat(%struct.archive_wstring* %s, i32* %151), !dbg !2470
  %call235 = call %struct.archive_wstring* @archive_wstrappend_wchar(%struct.archive_wstring* %s, i32 47), !dbg !2471
  %152 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2472
  %s236 = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %s, i32 0, i32 0, !dbg !2473
  %153 = load i32*, i32** %s236, align 8, !dbg !2473
  call void @archive_entry_copy_pathname_w(%struct.archive_entry* %152, i32* %153), !dbg !2474
  call void @archive_wstring_free(%struct.archive_wstring* %s), !dbg !2475
  br label %if.end237, !dbg !2476

if.end237:                                        ; preds = %do.end, %land.lhs.true227, %if.then223
  br label %if.end266, !dbg !2477

if.else238:                                       ; preds = %if.then219
  %154 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2478
  %call239 = call i8* @archive_entry_pathname(%struct.archive_entry* %154), !dbg !2480
  store i8* %call239, i8** %cp, align 8, !dbg !2481
  %155 = load i8*, i8** %cp, align 8, !dbg !2482
  %cmp240 = icmp ne i8* %155, null, !dbg !2483
  br i1 %cmp240, label %cond.true242, label %cond.false244, !dbg !2484

cond.true242:                                     ; preds = %if.else238
  %156 = load i8*, i8** %cp, align 8, !dbg !2485
  %call243 = call i64 @strlen(i8* %156) #9, !dbg !2487
  br label %cond.end245, !dbg !2488

cond.false244:                                    ; preds = %if.else238
  br label %cond.end245, !dbg !2489

cond.end245:                                      ; preds = %cond.false244, %cond.true242
  %cond246 = phi i64 [ %call243, %cond.true242 ], [ 0, %cond.false244 ], !dbg !2491
  store i64 %cond246, i64* %len, align 8, !dbg !2493
  %157 = load i64, i64* %len, align 8, !dbg !2494
  %cmp247 = icmp ugt i64 %157, 0, !dbg !2496
  br i1 %cmp247, label %land.lhs.true249, label %if.end265, !dbg !2497

land.lhs.true249:                                 ; preds = %cond.end245
  %158 = load i64, i64* %len, align 8, !dbg !2498
  %sub250 = sub i64 %158, 1, !dbg !2500
  %159 = load i8*, i8** %cp, align 8, !dbg !2501
  %arrayidx251 = getelementptr inbounds i8, i8* %159, i64 %sub250, !dbg !2501
  %160 = load i8, i8* %arrayidx251, align 1, !dbg !2501
  %conv252 = sext i8 %160 to i32, !dbg !2501
  %cmp253 = icmp ne i32 %conv252, 47, !dbg !2502
  br i1 %cmp253, label %if.then255, label %if.end265, !dbg !2503

if.then255:                                       ; preds = %land.lhs.true249
  call void @llvm.dbg.declare(metadata %struct.archive_string* %s256, metadata !2504, metadata !578), !dbg !2506
  br label %do.body257, !dbg !2507

do.body257:                                       ; preds = %if.then255
  %s258 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %s256, i32 0, i32 0, !dbg !2508
  store i8* null, i8** %s258, align 8, !dbg !2508
  %length259 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %s256, i32 0, i32 1, !dbg !2508
  store i64 0, i64* %length259, align 8, !dbg !2508
  %buffer_length260 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %s256, i32 0, i32 2, !dbg !2508
  store i64 0, i64* %buffer_length260, align 8, !dbg !2508
  br label %do.end261, !dbg !2508

do.end261:                                        ; preds = %do.body257
  %161 = load i8*, i8** %cp, align 8, !dbg !2511
  %call262 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %s256, i8* %161), !dbg !2512
  %call263 = call %struct.archive_string* @archive_strappend_char(%struct.archive_string* %s256, i8 signext 47), !dbg !2513
  %162 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2514
  %s264 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %s256, i32 0, i32 0, !dbg !2515
  %163 = load i8*, i8** %s264, align 8, !dbg !2515
  call void @archive_entry_set_pathname(%struct.archive_entry* %162, i8* %163), !dbg !2516
  call void @archive_string_free(%struct.archive_string* %s256), !dbg !2517
  br label %if.end265, !dbg !2518

if.end265:                                        ; preds = %do.end261, %land.lhs.true249, %cond.end245
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end237
  br label %if.end267, !dbg !2519

if.end267:                                        ; preds = %if.end266, %if.end213
  %164 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2520
  %flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %164, i32 0, i32 16, !dbg !2522
  %165 = load i8, i8* %flags, align 2, !dbg !2522
  %conv268 = zext i8 %165 to i32, !dbg !2520
  %and269 = and i32 %conv268, 2, !dbg !2523
  %tobool270 = icmp ne i32 %and269, 0, !dbg !2523
  br i1 %tobool270, label %if.then271, label %if.end327, !dbg !2524

if.then271:                                       ; preds = %if.end267
  %166 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2525
  %zip_flags272 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %166, i32 0, i32 13, !dbg !2527
  %167 = load i16, i16* %zip_flags272, align 2, !dbg !2528
  %conv273 = zext i16 %167 to i32, !dbg !2528
  %and274 = and i32 %conv273, -9, !dbg !2528
  %conv275 = trunc i32 %and274 to i16, !dbg !2528
  store i16 %conv275, i16* %zip_flags272, align 2, !dbg !2528
  %168 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2529
  %cm_zlib_crc32276 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %168, i32 0, i32 11, !dbg !2531
  %169 = load i32, i32* %cm_zlib_crc32276, align 8, !dbg !2531
  %cmp277 = icmp eq i32 %169, 0, !dbg !2532
  br i1 %cmp277, label %if.then279, label %if.else282, !dbg !2533

if.then279:                                       ; preds = %if.then271
  %cm_zlib_crc32280 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 11, !dbg !2534
  %170 = load i32, i32* %cm_zlib_crc32280, align 8, !dbg !2534
  %171 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2536
  %cm_zlib_crc32281 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %171, i32 0, i32 11, !dbg !2537
  store i32 %170, i32* %cm_zlib_crc32281, align 8, !dbg !2538
  br label %if.end292, !dbg !2539

if.else282:                                       ; preds = %if.then271
  %172 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2540
  %ignore_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %172, i32 0, i32 15, !dbg !2543
  %173 = load i8, i8* %ignore_crc32, align 8, !dbg !2543
  %tobool283 = icmp ne i8 %173, 0, !dbg !2540
  br i1 %tobool283, label %if.end291, label %land.lhs.true284, !dbg !2544

land.lhs.true284:                                 ; preds = %if.else282
  %174 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2545
  %cm_zlib_crc32285 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %174, i32 0, i32 11, !dbg !2546
  %175 = load i32, i32* %cm_zlib_crc32285, align 8, !dbg !2546
  %cm_zlib_crc32286 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 11, !dbg !2547
  %176 = load i32, i32* %cm_zlib_crc32286, align 8, !dbg !2547
  %cmp287 = icmp ne i32 %175, %176, !dbg !2548
  br i1 %cmp287, label %if.then289, label %if.end291, !dbg !2549

if.then289:                                       ; preds = %land.lhs.true284
  %177 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2551
  %archive290 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %177, i32 0, i32 0, !dbg !2553
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive290, i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i32 0, i32 0)), !dbg !2554
  store i32 -20, i32* %ret, align 4, !dbg !2555
  br label %if.end291, !dbg !2556

if.end291:                                        ; preds = %if.then289, %land.lhs.true284, %if.else282
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.then279
  %178 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2557
  %compressed_size293 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %178, i32 0, i32 3, !dbg !2559
  %179 = load i64, i64* %compressed_size293, align 8, !dbg !2559
  %cmp294 = icmp eq i64 %179, 0, !dbg !2560
  br i1 %cmp294, label %if.then296, label %if.else299, !dbg !2561

if.then296:                                       ; preds = %if.end292
  %compressed_size297 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 3, !dbg !2562
  %180 = load i64, i64* %compressed_size297, align 8, !dbg !2562
  %181 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2564
  %compressed_size298 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %181, i32 0, i32 3, !dbg !2565
  store i64 %180, i64* %compressed_size298, align 8, !dbg !2566
  br label %if.end309, !dbg !2567

if.else299:                                       ; preds = %if.end292
  %182 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2568
  %compressed_size300 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %182, i32 0, i32 3, !dbg !2571
  %183 = load i64, i64* %compressed_size300, align 8, !dbg !2571
  %compressed_size301 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 3, !dbg !2572
  %184 = load i64, i64* %compressed_size301, align 8, !dbg !2572
  %cmp302 = icmp ne i64 %183, %184, !dbg !2573
  br i1 %cmp302, label %if.then304, label %if.end308, !dbg !2568

if.then304:                                       ; preds = %if.else299
  %185 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2574
  %archive305 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %185, i32 0, i32 0, !dbg !2576
  %compressed_size306 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 3, !dbg !2577
  %186 = load i64, i64* %compressed_size306, align 8, !dbg !2577
  %187 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2578
  %compressed_size307 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %187, i32 0, i32 3, !dbg !2579
  %188 = load i64, i64* %compressed_size307, align 8, !dbg !2579
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive305, i32 84, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.18, i32 0, i32 0), i64 %186, i64 %188), !dbg !2580
  store i32 -20, i32* %ret, align 4, !dbg !2581
  br label %if.end308, !dbg !2582

if.end308:                                        ; preds = %if.then304, %if.else299
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %if.then296
  %189 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2583
  %uncompressed_size310 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %189, i32 0, i32 4, !dbg !2585
  %190 = load i64, i64* %uncompressed_size310, align 8, !dbg !2585
  %cmp311 = icmp eq i64 %190, 0, !dbg !2586
  br i1 %cmp311, label %if.then313, label %if.else316, !dbg !2587

if.then313:                                       ; preds = %if.end309
  %uncompressed_size314 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 4, !dbg !2588
  %191 = load i64, i64* %uncompressed_size314, align 8, !dbg !2588
  %192 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2590
  %uncompressed_size315 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %192, i32 0, i32 4, !dbg !2591
  store i64 %191, i64* %uncompressed_size315, align 8, !dbg !2592
  br label %if.end326, !dbg !2593

if.else316:                                       ; preds = %if.end309
  %193 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2594
  %uncompressed_size317 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %193, i32 0, i32 4, !dbg !2597
  %194 = load i64, i64* %uncompressed_size317, align 8, !dbg !2597
  %uncompressed_size318 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 4, !dbg !2598
  %195 = load i64, i64* %uncompressed_size318, align 8, !dbg !2598
  %cmp319 = icmp ne i64 %194, %195, !dbg !2599
  br i1 %cmp319, label %if.then321, label %if.end325, !dbg !2594

if.then321:                                       ; preds = %if.else316
  %196 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2600
  %archive322 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %196, i32 0, i32 0, !dbg !2602
  %uncompressed_size323 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %zip_entry_central_dir, i32 0, i32 4, !dbg !2603
  %197 = load i64, i64* %uncompressed_size323, align 8, !dbg !2603
  %198 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2604
  %uncompressed_size324 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %198, i32 0, i32 4, !dbg !2605
  %199 = load i64, i64* %uncompressed_size324, align 8, !dbg !2605
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive322, i32 84, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i32 0, i32 0), i64 %197, i64 %199), !dbg !2606
  store i32 -20, i32* %ret, align 4, !dbg !2607
  br label %if.end325, !dbg !2608

if.end325:                                        ; preds = %if.then321, %if.else316
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %if.then313
  br label %if.end327, !dbg !2609

if.end327:                                        ; preds = %if.end326, %if.end267
  %200 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2610
  %201 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2611
  %mode328 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %201, i32 0, i32 12, !dbg !2612
  %202 = load i16, i16* %mode328, align 4, !dbg !2612
  %conv329 = zext i16 %202 to i32, !dbg !2611
  call void @archive_entry_set_mode(%struct.archive_entry* %200, i32 %conv329), !dbg !2613
  %203 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2614
  %204 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2615
  %uid = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %204, i32 0, i32 6, !dbg !2616
  %205 = load i64, i64* %uid, align 8, !dbg !2616
  call void @archive_entry_set_uid(%struct.archive_entry* %203, i64 %205), !dbg !2617
  %206 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2618
  %207 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2619
  %gid = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %207, i32 0, i32 5, !dbg !2620
  %208 = load i64, i64* %gid, align 8, !dbg !2620
  call void @archive_entry_set_gid(%struct.archive_entry* %206, i64 %208), !dbg !2621
  %209 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2622
  %210 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2623
  %mtime330 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %210, i32 0, i32 8, !dbg !2624
  %211 = load i64, i64* %mtime330, align 8, !dbg !2624
  call void @archive_entry_set_mtime(%struct.archive_entry* %209, i64 %211, i64 0), !dbg !2625
  %212 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2626
  %213 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2627
  %ctime = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %213, i32 0, i32 10, !dbg !2628
  %214 = load i64, i64* %ctime, align 8, !dbg !2628
  call void @archive_entry_set_ctime(%struct.archive_entry* %212, i64 %214, i64 0), !dbg !2629
  %215 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2630
  %216 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2631
  %atime = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %216, i32 0, i32 9, !dbg !2632
  %217 = load i64, i64* %atime, align 8, !dbg !2632
  call void @archive_entry_set_atime(%struct.archive_entry* %215, i64 %217, i64 0), !dbg !2633
  %218 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2634
  %entry331 = getelementptr inbounds %struct.zip, %struct.zip* %218, i32 0, i32 9, !dbg !2636
  %219 = load %struct.zip_entry*, %struct.zip_entry** %entry331, align 8, !dbg !2636
  %mode332 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %219, i32 0, i32 12, !dbg !2637
  %220 = load i16, i16* %mode332, align 4, !dbg !2637
  %conv333 = zext i16 %220 to i32, !dbg !2634
  %and334 = and i32 %conv333, 61440, !dbg !2638
  %cmp335 = icmp eq i32 %and334, 40960, !dbg !2639
  br i1 %cmp335, label %if.then337, label %if.else416, !dbg !2640

if.then337:                                       ; preds = %if.end327
  call void @llvm.dbg.declare(metadata i64* %linkname_length, metadata !2641, metadata !578), !dbg !2643
  %221 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2644
  %compressed_size338 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %221, i32 0, i32 3, !dbg !2646
  %222 = load i64, i64* %compressed_size338, align 8, !dbg !2646
  %cmp339 = icmp sgt i64 %222, 65536, !dbg !2647
  br i1 %cmp339, label %if.then341, label %if.end343, !dbg !2648

if.then341:                                       ; preds = %if.then337
  %223 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2649
  %archive342 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %223, i32 0, i32 0, !dbg !2651
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive342, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)), !dbg !2652
  store i32 -30, i32* %retval, align 4, !dbg !2653
  br label %return, !dbg !2653

if.end343:                                        ; preds = %if.then337
  %224 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2654
  %compressed_size344 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %224, i32 0, i32 3, !dbg !2655
  %225 = load i64, i64* %compressed_size344, align 8, !dbg !2655
  store i64 %225, i64* %linkname_length, align 8, !dbg !2656
  %226 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2657
  call void @archive_entry_set_size(%struct.archive_entry* %226, i64 0), !dbg !2658
  %227 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2659
  %228 = load i64, i64* %linkname_length, align 8, !dbg !2660
  %call345 = call i8* @__archive_read_ahead(%struct.archive_read* %227, i64 %228, i64* null), !dbg !2661
  store i8* %call345, i8** %p, align 8, !dbg !2662
  %229 = load i8*, i8** %p, align 8, !dbg !2663
  %cmp346 = icmp eq i8* %229, null, !dbg !2665
  br i1 %cmp346, label %if.then348, label %if.end350, !dbg !2666

if.then348:                                       ; preds = %if.end343
  %230 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2667
  %archive349 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %230, i32 0, i32 0, !dbg !2669
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive349, i32 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0)), !dbg !2670
  store i32 -30, i32* %retval, align 4, !dbg !2671
  br label %return, !dbg !2671

if.end350:                                        ; preds = %if.end343
  %231 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2672
  %sconv351 = getelementptr inbounds %struct.zip, %struct.zip* %231, i32 0, i32 22, !dbg !2673
  %232 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv351, align 8, !dbg !2673
  store %struct.archive_string_conv* %232, %struct.archive_string_conv** %sconv, align 8, !dbg !2674
  %233 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2675
  %cmp352 = icmp eq %struct.archive_string_conv* %233, null, !dbg !2677
  br i1 %cmp352, label %land.lhs.true354, label %if.end362, !dbg !2678

land.lhs.true354:                                 ; preds = %if.end350
  %234 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2679
  %entry355 = getelementptr inbounds %struct.zip, %struct.zip* %234, i32 0, i32 9, !dbg !2681
  %235 = load %struct.zip_entry*, %struct.zip_entry** %entry355, align 8, !dbg !2681
  %zip_flags356 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %235, i32 0, i32 13, !dbg !2682
  %236 = load i16, i16* %zip_flags356, align 2, !dbg !2682
  %conv357 = zext i16 %236 to i32, !dbg !2679
  %and358 = and i32 %conv357, 2048, !dbg !2683
  %tobool359 = icmp ne i32 %and358, 0, !dbg !2683
  br i1 %tobool359, label %if.then360, label %if.end362, !dbg !2684

if.then360:                                       ; preds = %land.lhs.true354
  %237 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2685
  %sconv_utf8361 = getelementptr inbounds %struct.zip, %struct.zip* %237, i32 0, i32 24, !dbg !2686
  %238 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8361, align 8, !dbg !2686
  store %struct.archive_string_conv* %238, %struct.archive_string_conv** %sconv, align 8, !dbg !2687
  br label %if.end362, !dbg !2688

if.end362:                                        ; preds = %if.then360, %land.lhs.true354, %if.end350
  %239 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2689
  %cmp363 = icmp eq %struct.archive_string_conv* %239, null, !dbg !2691
  br i1 %cmp363, label %if.then365, label %if.end367, !dbg !2692

if.then365:                                       ; preds = %if.end362
  %240 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2693
  %sconv_default366 = getelementptr inbounds %struct.zip, %struct.zip* %240, i32 0, i32 23, !dbg !2694
  %241 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_default366, align 8, !dbg !2694
  store %struct.archive_string_conv* %241, %struct.archive_string_conv** %sconv, align 8, !dbg !2695
  br label %if.end367, !dbg !2696

if.end367:                                        ; preds = %if.then365, %if.end362
  %242 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2697
  %243 = load i8*, i8** %p, align 8, !dbg !2699
  %244 = load i64, i64* %linkname_length, align 8, !dbg !2700
  %245 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2701
  %call368 = call i32 @_archive_entry_copy_symlink_l(%struct.archive_entry* %242, i8* %243, i64 %244, %struct.archive_string_conv* %245), !dbg !2702
  %cmp369 = icmp ne i32 %call368, 0, !dbg !2703
  br i1 %cmp369, label %if.then371, label %if.end407, !dbg !2704

if.then371:                                       ; preds = %if.end367
  %call372 = call i32* @__errno_location() #1, !dbg !2705
  %246 = load i32, i32* %call372, align 4, !dbg !2705
  %cmp373 = icmp ne i32 %246, 12, !dbg !2708
  br i1 %cmp373, label %land.lhs.true375, label %if.end387, !dbg !2709

land.lhs.true375:                                 ; preds = %if.then371
  %247 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2710
  %248 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2712
  %sconv_utf8376 = getelementptr inbounds %struct.zip, %struct.zip* %248, i32 0, i32 24, !dbg !2713
  %249 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8376, align 8, !dbg !2713
  %cmp377 = icmp eq %struct.archive_string_conv* %247, %249, !dbg !2714
  br i1 %cmp377, label %land.lhs.true379, label %if.end387, !dbg !2715

land.lhs.true379:                                 ; preds = %land.lhs.true375
  %250 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2716
  %entry380 = getelementptr inbounds %struct.zip, %struct.zip* %250, i32 0, i32 9, !dbg !2717
  %251 = load %struct.zip_entry*, %struct.zip_entry** %entry380, align 8, !dbg !2717
  %zip_flags381 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %251, i32 0, i32 13, !dbg !2718
  %252 = load i16, i16* %zip_flags381, align 2, !dbg !2718
  %conv382 = zext i16 %252 to i32, !dbg !2716
  %and383 = and i32 %conv382, 2048, !dbg !2719
  %tobool384 = icmp ne i32 %and383, 0, !dbg !2719
  br i1 %tobool384, label %if.then385, label %if.end387, !dbg !2720

if.then385:                                       ; preds = %land.lhs.true379
  %253 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2722
  %254 = load i8*, i8** %p, align 8, !dbg !2723
  %255 = load i64, i64* %linkname_length, align 8, !dbg !2724
  %call386 = call i32 @_archive_entry_copy_symlink_l(%struct.archive_entry* %253, i8* %254, i64 %255, %struct.archive_string_conv* null), !dbg !2725
  br label %if.end387, !dbg !2725

if.end387:                                        ; preds = %if.then385, %land.lhs.true379, %land.lhs.true375, %if.then371
  %call388 = call i32* @__errno_location() #1, !dbg !2726
  %256 = load i32, i32* %call388, align 4, !dbg !2726
  %cmp389 = icmp eq i32 %256, 12, !dbg !2728
  br i1 %cmp389, label %if.then391, label %if.end393, !dbg !2729

if.then391:                                       ; preds = %if.end387
  %257 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2730
  %archive392 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %257, i32 0, i32 0, !dbg !2732
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive392, i32 12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i32 0, i32 0)), !dbg !2733
  store i32 -30, i32* %retval, align 4, !dbg !2734
  br label %return, !dbg !2734

if.end393:                                        ; preds = %if.end387
  %258 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2735
  %259 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2737
  %sconv_utf8394 = getelementptr inbounds %struct.zip, %struct.zip* %259, i32 0, i32 24, !dbg !2738
  %260 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8394, align 8, !dbg !2738
  %cmp395 = icmp ne %struct.archive_string_conv* %258, %260, !dbg !2739
  br i1 %cmp395, label %if.then403, label %lor.lhs.false, !dbg !2740

lor.lhs.false:                                    ; preds = %if.end393
  %261 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2741
  %entry397 = getelementptr inbounds %struct.zip, %struct.zip* %261, i32 0, i32 9, !dbg !2742
  %262 = load %struct.zip_entry*, %struct.zip_entry** %entry397, align 8, !dbg !2742
  %zip_flags398 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %262, i32 0, i32 13, !dbg !2743
  %263 = load i16, i16* %zip_flags398, align 2, !dbg !2743
  %conv399 = zext i16 %263 to i32, !dbg !2741
  %and400 = and i32 %conv399, 2048, !dbg !2744
  %cmp401 = icmp eq i32 %and400, 0, !dbg !2745
  br i1 %cmp401, label %if.then403, label %if.end406, !dbg !2746

if.then403:                                       ; preds = %lor.lhs.false, %if.end393
  %264 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2748
  %archive404 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %264, i32 0, i32 0, !dbg !2750
  %265 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2751
  %call405 = call i8* @archive_string_conversion_charset_name(%struct.archive_string_conv* %265), !dbg !2752
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive404, i32 84, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i32 0, i32 0), i8* %call405), !dbg !2753
  store i32 -20, i32* %ret, align 4, !dbg !2754
  br label %if.end406, !dbg !2755

if.end406:                                        ; preds = %if.then403, %lor.lhs.false
  br label %if.end407, !dbg !2756

if.end407:                                        ; preds = %if.end406, %if.end367
  %266 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2757
  %compressed_size408 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %266, i32 0, i32 3, !dbg !2758
  store i64 0, i64* %compressed_size408, align 8, !dbg !2759
  %267 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2760
  %uncompressed_size409 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %267, i32 0, i32 4, !dbg !2761
  store i64 0, i64* %uncompressed_size409, align 8, !dbg !2762
  %268 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2763
  %269 = load i64, i64* %linkname_length, align 8, !dbg !2765
  %call410 = call i64 @__archive_read_consume(%struct.archive_read* %268, i64 %269), !dbg !2766
  %cmp411 = icmp slt i64 %call410, 0, !dbg !2767
  br i1 %cmp411, label %if.then413, label %if.end415, !dbg !2768

if.then413:                                       ; preds = %if.end407
  %270 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2769
  %archive414 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %270, i32 0, i32 0, !dbg !2771
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive414, i32 -1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i32 0, i32 0)), !dbg !2772
  store i32 -30, i32* %retval, align 4, !dbg !2773
  br label %return, !dbg !2773

if.end415:                                        ; preds = %if.end407
  br label %if.end429, !dbg !2774

if.else416:                                       ; preds = %if.end327
  %271 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2775
  %zip_flags417 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %271, i32 0, i32 13, !dbg !2778
  %272 = load i16, i16* %zip_flags417, align 2, !dbg !2778
  %conv418 = zext i16 %272 to i32, !dbg !2775
  %and419 = and i32 %conv418, 8, !dbg !2779
  %cmp420 = icmp eq i32 0, %and419, !dbg !2780
  br i1 %cmp420, label %if.then426, label %lor.lhs.false422, !dbg !2781

lor.lhs.false422:                                 ; preds = %if.else416
  %273 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2782
  %uncompressed_size423 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %273, i32 0, i32 4, !dbg !2783
  %274 = load i64, i64* %uncompressed_size423, align 8, !dbg !2783
  %cmp424 = icmp sgt i64 %274, 0, !dbg !2784
  br i1 %cmp424, label %if.then426, label %if.end428, !dbg !2785

if.then426:                                       ; preds = %lor.lhs.false422, %if.else416
  %275 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2787
  %276 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2789
  %uncompressed_size427 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %276, i32 0, i32 4, !dbg !2790
  %277 = load i64, i64* %uncompressed_size427, align 8, !dbg !2790
  call void @archive_entry_set_size(%struct.archive_entry* %275, i64 %277), !dbg !2791
  br label %if.end428, !dbg !2792

if.end428:                                        ; preds = %if.then426, %lor.lhs.false422
  br label %if.end429

if.end429:                                        ; preds = %if.end428, %if.end415
  %278 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2793
  %compressed_size430 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %278, i32 0, i32 3, !dbg !2794
  %279 = load i64, i64* %compressed_size430, align 8, !dbg !2794
  %280 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2795
  %entry_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %280, i32 0, i32 10, !dbg !2796
  store i64 %279, i64* %entry_bytes_remaining, align 8, !dbg !2797
  %281 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !2798
  %zip_flags431 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %281, i32 0, i32 13, !dbg !2800
  %282 = load i16, i16* %zip_flags431, align 2, !dbg !2800
  %conv432 = zext i16 %282 to i32, !dbg !2798
  %and433 = and i32 %conv432, 8, !dbg !2801
  %cmp434 = icmp eq i32 0, %and433, !dbg !2802
  br i1 %cmp434, label %land.lhs.true436, label %if.end442, !dbg !2803

land.lhs.true436:                                 ; preds = %if.end429
  %283 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2804
  %entry_bytes_remaining437 = getelementptr inbounds %struct.zip, %struct.zip* %283, i32 0, i32 10, !dbg !2806
  %284 = load i64, i64* %entry_bytes_remaining437, align 8, !dbg !2806
  %cmp438 = icmp slt i64 %284, 1, !dbg !2807
  br i1 %cmp438, label %if.then440, label %if.end442, !dbg !2808

if.then440:                                       ; preds = %land.lhs.true436
  %285 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2810
  %end_of_entry441 = getelementptr inbounds %struct.zip, %struct.zip* %285, i32 0, i32 17, !dbg !2811
  store i8 1, i8* %end_of_entry441, align 2, !dbg !2812
  br label %if.end442, !dbg !2810

if.end442:                                        ; preds = %if.then440, %land.lhs.true436, %if.end429
  %286 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2813
  %format_name = getelementptr inbounds %struct.zip, %struct.zip* %286, i32 0, i32 0, !dbg !2814
  %287 = load i8, i8* %version, align 1, !dbg !2815
  %conv443 = sext i8 %287 to i32, !dbg !2815
  %div = sdiv i32 %conv443, 10, !dbg !2816
  %288 = load i8, i8* %version, align 1, !dbg !2817
  %conv444 = sext i8 %288 to i32, !dbg !2817
  %rem = srem i32 %conv444, 10, !dbg !2818
  %289 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2819
  %entry445 = getelementptr inbounds %struct.zip, %struct.zip* %289, i32 0, i32 9, !dbg !2820
  %290 = load %struct.zip_entry*, %struct.zip_entry** %entry445, align 8, !dbg !2820
  %compression446 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %290, i32 0, i32 14, !dbg !2821
  %291 = load i8, i8* %compression446, align 8, !dbg !2821
  %conv447 = zext i8 %291 to i32, !dbg !2819
  %call448 = call i8* @compression_name(i32 %conv447), !dbg !2822
  call void (%struct.archive_string*, i8*, ...) @archive_string_sprintf(%struct.archive_string* %format_name, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0), i32 %div, i32 %rem, i8* %call448), !dbg !2823
  %292 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !2824
  %format_name449 = getelementptr inbounds %struct.zip, %struct.zip* %292, i32 0, i32 0, !dbg !2825
  %s450 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %format_name449, i32 0, i32 0, !dbg !2826
  %293 = load i8*, i8** %s450, align 8, !dbg !2826
  %294 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2827
  %archive451 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %294, i32 0, i32 0, !dbg !2828
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive451, i32 0, i32 4, !dbg !2829
  store i8* %293, i8** %archive_format_name, align 8, !dbg !2830
  %295 = load i32, i32* %ret, align 4, !dbg !2831
  store i32 %295, i32* %retval, align 4, !dbg !2832
  br label %return, !dbg !2832

return:                                           ; preds = %if.end442, %if.then413, %if.then391, %if.then348, %if.then341, %if.then128, %if.then122, %if.then112, %if.then91, %if.then74, %if.then35, %if.then13, %if.then8
  %296 = load i32, i32* %retval, align 4, !dbg !2833
  ret i32 %296, !dbg !2833
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

declare %struct.archive_string_conv* @archive_string_default_conversion_for_read(%struct.archive*) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @archive_le16dec(i8* %pp) #6 !dbg !485 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !2834, metadata !578), !dbg !2835
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2836, metadata !578), !dbg !2837
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !2838
  store i8* %0, i8** %p, align 8, !dbg !2837
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !2839, metadata !578), !dbg !2840
  %1 = load i8*, i8** %p, align 8, !dbg !2841
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2841
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2841
  %conv = zext i8 %2 to i32, !dbg !2841
  store i32 %conv, i32* %p1, align 4, !dbg !2840
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !2842, metadata !578), !dbg !2843
  %3 = load i8*, i8** %p, align 8, !dbg !2844
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2844
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !2844
  %conv2 = zext i8 %4 to i32, !dbg !2844
  store i32 %conv2, i32* %p0, align 4, !dbg !2843
  %5 = load i32, i32* %p1, align 4, !dbg !2845
  %shl = shl i32 %5, 8, !dbg !2846
  %6 = load i32, i32* %p0, align 4, !dbg !2847
  %or = or i32 %shl, %6, !dbg !2848
  %conv3 = trunc i32 %or to i16, !dbg !2849
  ret i16 %conv3, !dbg !2850
}

declare void @archive_entry_set_is_data_encrypted(%struct.archive_entry*, i8 signext) #2

declare void @archive_entry_set_is_metadata_encrypted(%struct.archive_entry*, i8 signext) #2

; Function Attrs: nounwind uwtable
define internal i64 @zip_time(i8* %p) #0 !dbg !489 {
entry:
  %p.addr = alloca i8*, align 8
  %msTime = alloca i32, align 4
  %msDate = alloca i32, align 4
  %ts = alloca %struct.tm, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2851, metadata !578), !dbg !2852
  call void @llvm.dbg.declare(metadata i32* %msTime, metadata !2853, metadata !578), !dbg !2854
  call void @llvm.dbg.declare(metadata i32* %msDate, metadata !2855, metadata !578), !dbg !2856
  call void @llvm.dbg.declare(metadata %struct.tm* %ts, metadata !2857, metadata !578), !dbg !2871
  %0 = load i8*, i8** %p.addr, align 8, !dbg !2872
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !2872
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2872
  %conv = sext i8 %1 to i32, !dbg !2873
  %and = and i32 255, %conv, !dbg !2874
  %2 = load i8*, i8** %p.addr, align 8, !dbg !2875
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !2875
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !2875
  %conv2 = sext i8 %3 to i32, !dbg !2876
  %and3 = and i32 255, %conv2, !dbg !2877
  %mul = mul i32 256, %and3, !dbg !2878
  %add = add i32 %and, %mul, !dbg !2879
  store i32 %add, i32* %msTime, align 4, !dbg !2880
  %4 = load i8*, i8** %p.addr, align 8, !dbg !2881
  %arrayidx4 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !2881
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !2881
  %conv5 = sext i8 %5 to i32, !dbg !2882
  %and6 = and i32 255, %conv5, !dbg !2883
  %6 = load i8*, i8** %p.addr, align 8, !dbg !2884
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !2884
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !2884
  %conv8 = sext i8 %7 to i32, !dbg !2885
  %and9 = and i32 255, %conv8, !dbg !2886
  %mul10 = mul i32 256, %and9, !dbg !2887
  %add11 = add i32 %and6, %mul10, !dbg !2888
  store i32 %add11, i32* %msDate, align 4, !dbg !2889
  %8 = bitcast %struct.tm* %ts to i8*, !dbg !2890
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 56, i32 8, i1 false), !dbg !2890
  %9 = load i32, i32* %msDate, align 4, !dbg !2891
  %shr = ashr i32 %9, 9, !dbg !2892
  %and12 = and i32 %shr, 127, !dbg !2893
  %add13 = add nsw i32 %and12, 80, !dbg !2894
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 5, !dbg !2895
  store i32 %add13, i32* %tm_year, align 4, !dbg !2896
  %10 = load i32, i32* %msDate, align 4, !dbg !2897
  %shr14 = ashr i32 %10, 5, !dbg !2898
  %and15 = and i32 %shr14, 15, !dbg !2899
  %sub = sub nsw i32 %and15, 1, !dbg !2900
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 4, !dbg !2901
  store i32 %sub, i32* %tm_mon, align 8, !dbg !2902
  %11 = load i32, i32* %msDate, align 4, !dbg !2903
  %and16 = and i32 %11, 31, !dbg !2904
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 3, !dbg !2905
  store i32 %and16, i32* %tm_mday, align 4, !dbg !2906
  %12 = load i32, i32* %msTime, align 4, !dbg !2907
  %shr17 = ashr i32 %12, 11, !dbg !2908
  %and18 = and i32 %shr17, 31, !dbg !2909
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 2, !dbg !2910
  store i32 %and18, i32* %tm_hour, align 8, !dbg !2911
  %13 = load i32, i32* %msTime, align 4, !dbg !2912
  %shr19 = ashr i32 %13, 5, !dbg !2913
  %and20 = and i32 %shr19, 63, !dbg !2914
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 1, !dbg !2915
  store i32 %and20, i32* %tm_min, align 4, !dbg !2916
  %14 = load i32, i32* %msTime, align 4, !dbg !2917
  %shl = shl i32 %14, 1, !dbg !2918
  %and21 = and i32 %shl, 62, !dbg !2919
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 0, !dbg !2920
  store i32 %and21, i32* %tm_sec, align 8, !dbg !2921
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 8, !dbg !2922
  store i32 -1, i32* %tm_isdst, align 8, !dbg !2923
  %call = call i64 @mktime(%struct.tm* %ts) #8, !dbg !2924
  ret i64 %call, !dbg !2925
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @archive_le32dec(i8* %pp) #6 !dbg !492 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p3 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !2926, metadata !578), !dbg !2927
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2928, metadata !578), !dbg !2929
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !2930
  store i8* %0, i8** %p, align 8, !dbg !2929
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !2931, metadata !578), !dbg !2932
  %1 = load i8*, i8** %p, align 8, !dbg !2933
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 3, !dbg !2933
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2933
  %conv = zext i8 %2 to i32, !dbg !2933
  store i32 %conv, i32* %p3, align 4, !dbg !2932
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !2934, metadata !578), !dbg !2935
  %3 = load i8*, i8** %p, align 8, !dbg !2936
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !2936
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !2936
  %conv2 = zext i8 %4 to i32, !dbg !2936
  store i32 %conv2, i32* %p2, align 4, !dbg !2935
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !2937, metadata !578), !dbg !2938
  %5 = load i8*, i8** %p, align 8, !dbg !2939
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !2939
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !2939
  %conv4 = zext i8 %6 to i32, !dbg !2939
  store i32 %conv4, i32* %p1, align 4, !dbg !2938
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !2940, metadata !578), !dbg !2941
  %7 = load i8*, i8** %p, align 8, !dbg !2942
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !2942
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !2942
  %conv6 = zext i8 %8 to i32, !dbg !2942
  store i32 %conv6, i32* %p0, align 4, !dbg !2941
  %9 = load i32, i32* %p3, align 4, !dbg !2943
  %shl = shl i32 %9, 24, !dbg !2944
  %10 = load i32, i32* %p2, align 4, !dbg !2945
  %shl7 = shl i32 %10, 16, !dbg !2946
  %or = or i32 %shl, %shl7, !dbg !2947
  %11 = load i32, i32* %p1, align 4, !dbg !2948
  %shl8 = shl i32 %11, 8, !dbg !2949
  %or9 = or i32 %or, %shl8, !dbg !2950
  %12 = load i32, i32* %p0, align 4, !dbg !2951
  %or10 = or i32 %or9, %12, !dbg !2952
  ret i32 %or10, !dbg !2953
}

declare i32 @_archive_entry_copy_pathname_l(%struct.archive_entry*, i8*, i64, %struct.archive_string_conv*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

declare i8* @archive_string_conversion_charset_name(%struct.archive_string_conv*) #2

; Function Attrs: nounwind uwtable
define internal i32 @process_extra(%struct.archive_read* %a, i8* %p, i64 %extra_length, %struct.zip_entry* %zip_entry) #0 !dbg !495 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %p.addr = alloca i8*, align 8
  %extra_length.addr = alloca i64, align 8
  %zip_entry.addr = alloca %struct.zip_entry*, align 8
  %offset = alloca i32, align 4
  %headerid = alloca i16, align 2
  %datasize = alloca i16, align 2
  %t = alloca i64, align 8
  %t49 = alloca i64, align 8
  %t71 = alloca i64, align 8
  %flags91 = alloca i32, align 4
  %bitmap = alloca i32, align 4
  %bitmap_last = alloca i32, align 4
  %internal_attributes = alloca i32, align 4
  %external_attributes = alloca i32, align 4
  %comment_length = alloca i32, align 4
  %uidsize = alloca i32, align 4
  %gidsize = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2954, metadata !578), !dbg !2955
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2956, metadata !578), !dbg !2957
  store i64 %extra_length, i64* %extra_length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extra_length.addr, metadata !2958, metadata !578), !dbg !2959
  store %struct.zip_entry* %zip_entry, %struct.zip_entry** %zip_entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %zip_entry.addr, metadata !2960, metadata !578), !dbg !2961
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2962, metadata !578), !dbg !2963
  store i32 0, i32* %offset, align 4, !dbg !2963
  %0 = load i64, i64* %extra_length.addr, align 8, !dbg !2964
  %cmp = icmp eq i64 %0, 0, !dbg !2966
  br i1 %cmp, label %if.then, label %if.end, !dbg !2967

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2968
  br label %return, !dbg !2968

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %extra_length.addr, align 8, !dbg !2970
  %cmp1 = icmp ult i64 %1, 4, !dbg !2972
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2973

if.then2:                                         ; preds = %if.end
  %2 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2974
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %2, i32 0, i32 0, !dbg !2976
  %3 = load i64, i64* %extra_length.addr, align 8, !dbg !2977
  %conv = trunc i64 %3 to i32, !dbg !2978
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.26, i32 0, i32 0), i32 %conv), !dbg !2979
  store i32 -25, i32* %retval, align 4, !dbg !2980
  br label %return, !dbg !2980

if.end3:                                          ; preds = %if.end
  br label %while.cond, !dbg !2981

while.cond:                                       ; preds = %sw.epilog, %if.end3
  %4 = load i32, i32* %offset, align 4, !dbg !2982
  %conv4 = zext i32 %4 to i64, !dbg !2982
  %5 = load i64, i64* %extra_length.addr, align 8, !dbg !2984
  %sub = sub i64 %5, 4, !dbg !2985
  %cmp5 = icmp ule i64 %conv4, %sub, !dbg !2986
  br i1 %cmp5, label %while.body, label %while.end458, !dbg !2987

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16* %headerid, metadata !2988, metadata !578), !dbg !2990
  %6 = load i8*, i8** %p.addr, align 8, !dbg !2991
  %7 = load i32, i32* %offset, align 4, !dbg !2992
  %idx.ext = zext i32 %7 to i64, !dbg !2993
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !2993
  %call = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !2994
  store i16 %call, i16* %headerid, align 2, !dbg !2990
  call void @llvm.dbg.declare(metadata i16* %datasize, metadata !2995, metadata !578), !dbg !2996
  %8 = load i8*, i8** %p.addr, align 8, !dbg !2997
  %9 = load i32, i32* %offset, align 4, !dbg !2998
  %idx.ext7 = zext i32 %9 to i64, !dbg !2999
  %add.ptr8 = getelementptr inbounds i8, i8* %8, i64 %idx.ext7, !dbg !2999
  %add.ptr9 = getelementptr inbounds i8, i8* %add.ptr8, i64 2, !dbg !3000
  %call10 = call zeroext i16 @archive_le16dec(i8* %add.ptr9), !dbg !3001
  store i16 %call10, i16* %datasize, align 2, !dbg !2996
  %10 = load i32, i32* %offset, align 4, !dbg !3002
  %add = add i32 %10, 4, !dbg !3002
  store i32 %add, i32* %offset, align 4, !dbg !3002
  %11 = load i32, i32* %offset, align 4, !dbg !3003
  %12 = load i16, i16* %datasize, align 2, !dbg !3005
  %conv11 = zext i16 %12 to i32, !dbg !3005
  %add12 = add i32 %11, %conv11, !dbg !3006
  %conv13 = zext i32 %add12 to i64, !dbg !3003
  %13 = load i64, i64* %extra_length.addr, align 8, !dbg !3007
  %cmp14 = icmp ugt i64 %conv13, %13, !dbg !3008
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !3009

if.then16:                                        ; preds = %while.body
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3010
  %archive17 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !3012
  %15 = load i16, i16* %datasize, align 2, !dbg !3013
  %conv18 = zext i16 %15 to i32, !dbg !3014
  %16 = load i64, i64* %extra_length.addr, align 8, !dbg !3015
  %17 = load i32, i32* %offset, align 4, !dbg !3016
  %conv19 = zext i32 %17 to i64, !dbg !3016
  %sub20 = sub i64 %16, %conv19, !dbg !3017
  %conv21 = trunc i64 %sub20 to i32, !dbg !3018
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive17, i32 84, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.27, i32 0, i32 0), i32 %conv18, i32 %conv21), !dbg !3019
  store i32 -25, i32* %retval, align 4, !dbg !3020
  br label %return, !dbg !3020

if.end22:                                         ; preds = %while.body
  %18 = load i16, i16* %headerid, align 2, !dbg !3021
  %conv23 = zext i16 %18 to i32, !dbg !3021
  switch i32 %conv23, label %sw.default [
    i32 1, label %sw.bb
    i32 21589, label %sw.bb90
    i32 22613, label %sw.bb142
    i32 27768, label %sw.bb174
    i32 30805, label %sw.bb313
    i32 30837, label %sw.bb335
    i32 39169, label %sw.bb427
  ], !dbg !3022

sw.bb:                                            ; preds = %if.end22
  %19 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3023
  %flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %19, i32 0, i32 16, !dbg !3025
  %20 = load i8, i8* %flags, align 2, !dbg !3026
  %conv24 = zext i8 %20 to i32, !dbg !3026
  %or = or i32 %conv24, 1, !dbg !3026
  %conv25 = trunc i32 %or to i8, !dbg !3026
  store i8 %conv25, i8* %flags, align 2, !dbg !3026
  %21 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3027
  %uncompressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %21, i32 0, i32 4, !dbg !3029
  %22 = load i64, i64* %uncompressed_size, align 8, !dbg !3029
  %cmp26 = icmp eq i64 %22, 4294967295, !dbg !3030
  br i1 %cmp26, label %if.then28, label %if.end45, !dbg !3031

if.then28:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i64* %t, metadata !3032, metadata !578), !dbg !3034
  store i64 0, i64* %t, align 8, !dbg !3034
  %23 = load i16, i16* %datasize, align 2, !dbg !3035
  %conv29 = zext i16 %23 to i32, !dbg !3035
  %cmp30 = icmp slt i32 %conv29, 8, !dbg !3037
  br i1 %cmp30, label %if.then37, label %lor.lhs.false, !dbg !3038

lor.lhs.false:                                    ; preds = %if.then28
  %24 = load i8*, i8** %p.addr, align 8, !dbg !3039
  %25 = load i32, i32* %offset, align 4, !dbg !3041
  %idx.ext32 = zext i32 %25 to i64, !dbg !3042
  %add.ptr33 = getelementptr inbounds i8, i8* %24, i64 %idx.ext32, !dbg !3042
  %call34 = call i64 @archive_le64dec(i8* %add.ptr33), !dbg !3043
  store i64 %call34, i64* %t, align 8, !dbg !3044
  %cmp35 = icmp ugt i64 %call34, 9223372036854775807, !dbg !3045
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !3046

if.then37:                                        ; preds = %lor.lhs.false, %if.then28
  %26 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3048
  %archive38 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %26, i32 0, i32 0, !dbg !3050
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive38, i32 84, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i32 0, i32 0)), !dbg !3051
  store i32 -25, i32* %retval, align 4, !dbg !3052
  br label %return, !dbg !3052

if.end39:                                         ; preds = %lor.lhs.false
  %27 = load i64, i64* %t, align 8, !dbg !3053
  %28 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3054
  %uncompressed_size40 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %28, i32 0, i32 4, !dbg !3055
  store i64 %27, i64* %uncompressed_size40, align 8, !dbg !3056
  %29 = load i32, i32* %offset, align 4, !dbg !3057
  %add41 = add i32 %29, 8, !dbg !3057
  store i32 %add41, i32* %offset, align 4, !dbg !3057
  %30 = load i16, i16* %datasize, align 2, !dbg !3058
  %conv42 = zext i16 %30 to i32, !dbg !3058
  %sub43 = sub nsw i32 %conv42, 8, !dbg !3058
  %conv44 = trunc i32 %sub43 to i16, !dbg !3058
  store i16 %conv44, i16* %datasize, align 2, !dbg !3058
  br label %if.end45, !dbg !3059

if.end45:                                         ; preds = %if.end39, %sw.bb
  %31 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3060
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %31, i32 0, i32 3, !dbg !3062
  %32 = load i64, i64* %compressed_size, align 8, !dbg !3062
  %cmp46 = icmp eq i64 %32, 4294967295, !dbg !3063
  br i1 %cmp46, label %if.then48, label %if.end67, !dbg !3064

if.then48:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata i64* %t49, metadata !3065, metadata !578), !dbg !3067
  store i64 0, i64* %t49, align 8, !dbg !3067
  %33 = load i16, i16* %datasize, align 2, !dbg !3068
  %conv50 = zext i16 %33 to i32, !dbg !3068
  %cmp51 = icmp slt i32 %conv50, 8, !dbg !3070
  br i1 %cmp51, label %if.then59, label %lor.lhs.false53, !dbg !3071

lor.lhs.false53:                                  ; preds = %if.then48
  %34 = load i8*, i8** %p.addr, align 8, !dbg !3072
  %35 = load i32, i32* %offset, align 4, !dbg !3074
  %idx.ext54 = zext i32 %35 to i64, !dbg !3075
  %add.ptr55 = getelementptr inbounds i8, i8* %34, i64 %idx.ext54, !dbg !3075
  %call56 = call i64 @archive_le64dec(i8* %add.ptr55), !dbg !3076
  store i64 %call56, i64* %t49, align 8, !dbg !3077
  %cmp57 = icmp ugt i64 %call56, 9223372036854775807, !dbg !3078
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !3079

if.then59:                                        ; preds = %lor.lhs.false53, %if.then48
  %36 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3081
  %archive60 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %36, i32 0, i32 0, !dbg !3083
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive60, i32 84, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i32 0, i32 0)), !dbg !3084
  store i32 -25, i32* %retval, align 4, !dbg !3085
  br label %return, !dbg !3085

if.end61:                                         ; preds = %lor.lhs.false53
  %37 = load i64, i64* %t49, align 8, !dbg !3086
  %38 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3087
  %compressed_size62 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %38, i32 0, i32 3, !dbg !3088
  store i64 %37, i64* %compressed_size62, align 8, !dbg !3089
  %39 = load i32, i32* %offset, align 4, !dbg !3090
  %add63 = add i32 %39, 8, !dbg !3090
  store i32 %add63, i32* %offset, align 4, !dbg !3090
  %40 = load i16, i16* %datasize, align 2, !dbg !3091
  %conv64 = zext i16 %40 to i32, !dbg !3091
  %sub65 = sub nsw i32 %conv64, 8, !dbg !3091
  %conv66 = trunc i32 %sub65 to i16, !dbg !3091
  store i16 %conv66, i16* %datasize, align 2, !dbg !3091
  br label %if.end67, !dbg !3092

if.end67:                                         ; preds = %if.end61, %if.end45
  %41 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3093
  %local_header_offset = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %41, i32 0, i32 2, !dbg !3095
  %42 = load i64, i64* %local_header_offset, align 8, !dbg !3095
  %cmp68 = icmp eq i64 %42, 4294967295, !dbg !3096
  br i1 %cmp68, label %if.then70, label %if.end89, !dbg !3097

if.then70:                                        ; preds = %if.end67
  call void @llvm.dbg.declare(metadata i64* %t71, metadata !3098, metadata !578), !dbg !3100
  store i64 0, i64* %t71, align 8, !dbg !3100
  %43 = load i16, i16* %datasize, align 2, !dbg !3101
  %conv72 = zext i16 %43 to i32, !dbg !3101
  %cmp73 = icmp slt i32 %conv72, 8, !dbg !3103
  br i1 %cmp73, label %if.then81, label %lor.lhs.false75, !dbg !3104

lor.lhs.false75:                                  ; preds = %if.then70
  %44 = load i8*, i8** %p.addr, align 8, !dbg !3105
  %45 = load i32, i32* %offset, align 4, !dbg !3107
  %idx.ext76 = zext i32 %45 to i64, !dbg !3108
  %add.ptr77 = getelementptr inbounds i8, i8* %44, i64 %idx.ext76, !dbg !3108
  %call78 = call i64 @archive_le64dec(i8* %add.ptr77), !dbg !3109
  store i64 %call78, i64* %t71, align 8, !dbg !3110
  %cmp79 = icmp ugt i64 %call78, 9223372036854775807, !dbg !3111
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !3112

if.then81:                                        ; preds = %lor.lhs.false75, %if.then70
  %46 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3114
  %archive82 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %46, i32 0, i32 0, !dbg !3116
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive82, i32 84, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.30, i32 0, i32 0)), !dbg !3117
  store i32 -25, i32* %retval, align 4, !dbg !3118
  br label %return, !dbg !3118

if.end83:                                         ; preds = %lor.lhs.false75
  %47 = load i64, i64* %t71, align 8, !dbg !3119
  %48 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3120
  %local_header_offset84 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %48, i32 0, i32 2, !dbg !3121
  store i64 %47, i64* %local_header_offset84, align 8, !dbg !3122
  %49 = load i32, i32* %offset, align 4, !dbg !3123
  %add85 = add i32 %49, 8, !dbg !3123
  store i32 %add85, i32* %offset, align 4, !dbg !3123
  %50 = load i16, i16* %datasize, align 2, !dbg !3124
  %conv86 = zext i16 %50 to i32, !dbg !3124
  %sub87 = sub nsw i32 %conv86, 8, !dbg !3124
  %conv88 = trunc i32 %sub87 to i16, !dbg !3124
  store i16 %conv88, i16* %datasize, align 2, !dbg !3124
  br label %if.end89, !dbg !3125

if.end89:                                         ; preds = %if.end83, %if.end67
  br label %sw.epilog, !dbg !3126

sw.bb90:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %flags91, metadata !3127, metadata !578), !dbg !3129
  %51 = load i32, i32* %offset, align 4, !dbg !3130
  %idxprom = zext i32 %51 to i64, !dbg !3131
  %52 = load i8*, i8** %p.addr, align 8, !dbg !3131
  %arrayidx = getelementptr inbounds i8, i8* %52, i64 %idxprom, !dbg !3131
  %53 = load i8, i8* %arrayidx, align 1, !dbg !3131
  %conv92 = sext i8 %53 to i32, !dbg !3131
  store i32 %conv92, i32* %flags91, align 4, !dbg !3129
  %54 = load i32, i32* %offset, align 4, !dbg !3132
  %inc = add i32 %54, 1, !dbg !3132
  store i32 %inc, i32* %offset, align 4, !dbg !3132
  %55 = load i16, i16* %datasize, align 2, !dbg !3133
  %dec = add i16 %55, -1, !dbg !3133
  store i16 %dec, i16* %datasize, align 2, !dbg !3133
  %56 = load i32, i32* %flags91, align 4, !dbg !3134
  %and = and i32 %56, 1, !dbg !3136
  %tobool = icmp ne i32 %and, 0, !dbg !3136
  br i1 %tobool, label %if.then93, label %if.end107, !dbg !3137

if.then93:                                        ; preds = %sw.bb90
  %57 = load i16, i16* %datasize, align 2, !dbg !3138
  %conv94 = zext i16 %57 to i32, !dbg !3138
  %cmp95 = icmp slt i32 %conv94, 4, !dbg !3141
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !3142

if.then97:                                        ; preds = %if.then93
  br label %sw.epilog, !dbg !3143

if.end98:                                         ; preds = %if.then93
  %58 = load i8*, i8** %p.addr, align 8, !dbg !3144
  %59 = load i32, i32* %offset, align 4, !dbg !3145
  %idx.ext99 = zext i32 %59 to i64, !dbg !3146
  %add.ptr100 = getelementptr inbounds i8, i8* %58, i64 %idx.ext99, !dbg !3146
  %call101 = call i32 @archive_le32dec(i8* %add.ptr100), !dbg !3147
  %conv102 = zext i32 %call101 to i64, !dbg !3147
  %60 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3148
  %mtime = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %60, i32 0, i32 8, !dbg !3149
  store i64 %conv102, i64* %mtime, align 8, !dbg !3150
  %61 = load i32, i32* %offset, align 4, !dbg !3151
  %add103 = add i32 %61, 4, !dbg !3151
  store i32 %add103, i32* %offset, align 4, !dbg !3151
  %62 = load i16, i16* %datasize, align 2, !dbg !3152
  %conv104 = zext i16 %62 to i32, !dbg !3152
  %sub105 = sub nsw i32 %conv104, 4, !dbg !3152
  %conv106 = trunc i32 %sub105 to i16, !dbg !3152
  store i16 %conv106, i16* %datasize, align 2, !dbg !3152
  br label %if.end107, !dbg !3153

if.end107:                                        ; preds = %if.end98, %sw.bb90
  %63 = load i32, i32* %flags91, align 4, !dbg !3154
  %and108 = and i32 %63, 2, !dbg !3156
  %tobool109 = icmp ne i32 %and108, 0, !dbg !3156
  br i1 %tobool109, label %if.then110, label %if.end124, !dbg !3157

if.then110:                                       ; preds = %if.end107
  %64 = load i16, i16* %datasize, align 2, !dbg !3158
  %conv111 = zext i16 %64 to i32, !dbg !3158
  %cmp112 = icmp slt i32 %conv111, 4, !dbg !3161
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !3162

if.then114:                                       ; preds = %if.then110
  br label %sw.epilog, !dbg !3163

if.end115:                                        ; preds = %if.then110
  %65 = load i8*, i8** %p.addr, align 8, !dbg !3164
  %66 = load i32, i32* %offset, align 4, !dbg !3165
  %idx.ext116 = zext i32 %66 to i64, !dbg !3166
  %add.ptr117 = getelementptr inbounds i8, i8* %65, i64 %idx.ext116, !dbg !3166
  %call118 = call i32 @archive_le32dec(i8* %add.ptr117), !dbg !3167
  %conv119 = zext i32 %call118 to i64, !dbg !3167
  %67 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3168
  %atime = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %67, i32 0, i32 9, !dbg !3169
  store i64 %conv119, i64* %atime, align 8, !dbg !3170
  %68 = load i32, i32* %offset, align 4, !dbg !3171
  %add120 = add i32 %68, 4, !dbg !3171
  store i32 %add120, i32* %offset, align 4, !dbg !3171
  %69 = load i16, i16* %datasize, align 2, !dbg !3172
  %conv121 = zext i16 %69 to i32, !dbg !3172
  %sub122 = sub nsw i32 %conv121, 4, !dbg !3172
  %conv123 = trunc i32 %sub122 to i16, !dbg !3172
  store i16 %conv123, i16* %datasize, align 2, !dbg !3172
  br label %if.end124, !dbg !3173

if.end124:                                        ; preds = %if.end115, %if.end107
  %70 = load i32, i32* %flags91, align 4, !dbg !3174
  %and125 = and i32 %70, 4, !dbg !3176
  %tobool126 = icmp ne i32 %and125, 0, !dbg !3176
  br i1 %tobool126, label %if.then127, label %if.end141, !dbg !3177

if.then127:                                       ; preds = %if.end124
  %71 = load i16, i16* %datasize, align 2, !dbg !3178
  %conv128 = zext i16 %71 to i32, !dbg !3178
  %cmp129 = icmp slt i32 %conv128, 4, !dbg !3181
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !3182

if.then131:                                       ; preds = %if.then127
  br label %sw.epilog, !dbg !3183

if.end132:                                        ; preds = %if.then127
  %72 = load i8*, i8** %p.addr, align 8, !dbg !3184
  %73 = load i32, i32* %offset, align 4, !dbg !3185
  %idx.ext133 = zext i32 %73 to i64, !dbg !3186
  %add.ptr134 = getelementptr inbounds i8, i8* %72, i64 %idx.ext133, !dbg !3186
  %call135 = call i32 @archive_le32dec(i8* %add.ptr134), !dbg !3187
  %conv136 = zext i32 %call135 to i64, !dbg !3187
  %74 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3188
  %ctime = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %74, i32 0, i32 10, !dbg !3189
  store i64 %conv136, i64* %ctime, align 8, !dbg !3190
  %75 = load i32, i32* %offset, align 4, !dbg !3191
  %add137 = add i32 %75, 4, !dbg !3191
  store i32 %add137, i32* %offset, align 4, !dbg !3191
  %76 = load i16, i16* %datasize, align 2, !dbg !3192
  %conv138 = zext i16 %76 to i32, !dbg !3192
  %sub139 = sub nsw i32 %conv138, 4, !dbg !3192
  %conv140 = trunc i32 %sub139 to i16, !dbg !3192
  store i16 %conv140, i16* %datasize, align 2, !dbg !3192
  br label %if.end141, !dbg !3193

if.end141:                                        ; preds = %if.end132, %if.end124
  br label %sw.epilog, !dbg !3194

sw.bb142:                                         ; preds = %if.end22
  %77 = load i16, i16* %datasize, align 2, !dbg !3195
  %conv143 = zext i16 %77 to i32, !dbg !3195
  %cmp144 = icmp sge i32 %conv143, 8, !dbg !3198
  br i1 %cmp144, label %if.then146, label %if.end158, !dbg !3199

if.then146:                                       ; preds = %sw.bb142
  %78 = load i8*, i8** %p.addr, align 8, !dbg !3200
  %79 = load i32, i32* %offset, align 4, !dbg !3202
  %idx.ext147 = zext i32 %79 to i64, !dbg !3203
  %add.ptr148 = getelementptr inbounds i8, i8* %78, i64 %idx.ext147, !dbg !3203
  %call149 = call i32 @archive_le32dec(i8* %add.ptr148), !dbg !3204
  %conv150 = zext i32 %call149 to i64, !dbg !3204
  %80 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3205
  %atime151 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %80, i32 0, i32 9, !dbg !3206
  store i64 %conv150, i64* %atime151, align 8, !dbg !3207
  %81 = load i8*, i8** %p.addr, align 8, !dbg !3208
  %82 = load i32, i32* %offset, align 4, !dbg !3209
  %idx.ext152 = zext i32 %82 to i64, !dbg !3210
  %add.ptr153 = getelementptr inbounds i8, i8* %81, i64 %idx.ext152, !dbg !3210
  %add.ptr154 = getelementptr inbounds i8, i8* %add.ptr153, i64 4, !dbg !3211
  %call155 = call i32 @archive_le32dec(i8* %add.ptr154), !dbg !3212
  %conv156 = zext i32 %call155 to i64, !dbg !3212
  %83 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3213
  %mtime157 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %83, i32 0, i32 8, !dbg !3214
  store i64 %conv156, i64* %mtime157, align 8, !dbg !3215
  br label %if.end158, !dbg !3216

if.end158:                                        ; preds = %if.then146, %sw.bb142
  %84 = load i16, i16* %datasize, align 2, !dbg !3217
  %conv159 = zext i16 %84 to i32, !dbg !3217
  %cmp160 = icmp sge i32 %conv159, 12, !dbg !3219
  br i1 %cmp160, label %if.then162, label %if.end173, !dbg !3220

if.then162:                                       ; preds = %if.end158
  %85 = load i8*, i8** %p.addr, align 8, !dbg !3221
  %86 = load i32, i32* %offset, align 4, !dbg !3223
  %idx.ext163 = zext i32 %86 to i64, !dbg !3224
  %add.ptr164 = getelementptr inbounds i8, i8* %85, i64 %idx.ext163, !dbg !3224
  %add.ptr165 = getelementptr inbounds i8, i8* %add.ptr164, i64 8, !dbg !3225
  %call166 = call zeroext i16 @archive_le16dec(i8* %add.ptr165), !dbg !3226
  %conv167 = zext i16 %call166 to i64, !dbg !3226
  %87 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3227
  %uid = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %87, i32 0, i32 6, !dbg !3228
  store i64 %conv167, i64* %uid, align 8, !dbg !3229
  %88 = load i8*, i8** %p.addr, align 8, !dbg !3230
  %89 = load i32, i32* %offset, align 4, !dbg !3231
  %idx.ext168 = zext i32 %89 to i64, !dbg !3232
  %add.ptr169 = getelementptr inbounds i8, i8* %88, i64 %idx.ext168, !dbg !3232
  %add.ptr170 = getelementptr inbounds i8, i8* %add.ptr169, i64 10, !dbg !3233
  %call171 = call zeroext i16 @archive_le16dec(i8* %add.ptr170), !dbg !3234
  %conv172 = zext i16 %call171 to i64, !dbg !3234
  %90 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3235
  %gid = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %90, i32 0, i32 5, !dbg !3236
  store i64 %conv172, i64* %gid, align 8, !dbg !3237
  br label %if.end173, !dbg !3238

if.end173:                                        ; preds = %if.then162, %if.end158
  br label %sw.epilog, !dbg !3239

sw.bb174:                                         ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %bitmap, metadata !3240, metadata !578), !dbg !3242
  call void @llvm.dbg.declare(metadata i32* %bitmap_last, metadata !3243, metadata !578), !dbg !3244
  %91 = load i16, i16* %datasize, align 2, !dbg !3245
  %conv175 = zext i16 %91 to i32, !dbg !3245
  %cmp176 = icmp slt i32 %conv175, 1, !dbg !3247
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !3248

if.then178:                                       ; preds = %sw.bb174
  br label %sw.epilog, !dbg !3249

if.end179:                                        ; preds = %sw.bb174
  %92 = load i32, i32* %offset, align 4, !dbg !3250
  %idxprom180 = zext i32 %92 to i64, !dbg !3251
  %93 = load i8*, i8** %p.addr, align 8, !dbg !3251
  %arrayidx181 = getelementptr inbounds i8, i8* %93, i64 %idxprom180, !dbg !3251
  %94 = load i8, i8* %arrayidx181, align 1, !dbg !3251
  %conv182 = sext i8 %94 to i32, !dbg !3251
  %and183 = and i32 255, %conv182, !dbg !3252
  store i32 %and183, i32* %bitmap, align 4, !dbg !3253
  store i32 %and183, i32* %bitmap_last, align 4, !dbg !3254
  %95 = load i32, i32* %offset, align 4, !dbg !3255
  %add184 = add i32 %95, 1, !dbg !3255
  store i32 %add184, i32* %offset, align 4, !dbg !3255
  %96 = load i16, i16* %datasize, align 2, !dbg !3256
  %conv185 = zext i16 %96 to i32, !dbg !3256
  %sub186 = sub nsw i32 %conv185, 1, !dbg !3256
  %conv187 = trunc i32 %sub186 to i16, !dbg !3256
  store i16 %conv187, i16* %datasize, align 2, !dbg !3256
  br label %while.cond188, !dbg !3257

while.cond188:                                    ; preds = %while.body195, %if.end179
  %97 = load i32, i32* %bitmap_last, align 4, !dbg !3258
  %and189 = and i32 %97, 128, !dbg !3260
  %cmp190 = icmp ne i32 %and189, 0, !dbg !3261
  br i1 %cmp190, label %land.rhs, label %land.end, !dbg !3262

land.rhs:                                         ; preds = %while.cond188
  %98 = load i16, i16* %datasize, align 2, !dbg !3263
  %conv192 = zext i16 %98 to i32, !dbg !3263
  %cmp193 = icmp sge i32 %conv192, 1, !dbg !3264
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond188
  %99 = phi i1 [ false, %while.cond188 ], [ %cmp193, %land.rhs ]
  br i1 %99, label %while.body195, label %while.end, !dbg !3265

while.body195:                                    ; preds = %land.end
  %100 = load i32, i32* %offset, align 4, !dbg !3267
  %idxprom196 = zext i32 %100 to i64, !dbg !3269
  %101 = load i8*, i8** %p.addr, align 8, !dbg !3269
  %arrayidx197 = getelementptr inbounds i8, i8* %101, i64 %idxprom196, !dbg !3269
  %102 = load i8, i8* %arrayidx197, align 1, !dbg !3269
  %conv198 = sext i8 %102 to i32, !dbg !3269
  store i32 %conv198, i32* %bitmap_last, align 4, !dbg !3270
  %103 = load i32, i32* %offset, align 4, !dbg !3271
  %add199 = add i32 %103, 1, !dbg !3271
  store i32 %add199, i32* %offset, align 4, !dbg !3271
  %104 = load i16, i16* %datasize, align 2, !dbg !3272
  %conv200 = zext i16 %104 to i32, !dbg !3272
  %sub201 = sub nsw i32 %conv200, 1, !dbg !3272
  %conv202 = trunc i32 %sub201 to i16, !dbg !3272
  store i16 %conv202, i16* %datasize, align 2, !dbg !3272
  br label %while.cond188, !dbg !3273

while.end:                                        ; preds = %land.end
  %105 = load i32, i32* %bitmap, align 4, !dbg !3275
  %and203 = and i32 %105, 1, !dbg !3277
  %tobool204 = icmp ne i32 %and203, 0, !dbg !3277
  br i1 %tobool204, label %if.then205, label %if.end220, !dbg !3278

if.then205:                                       ; preds = %while.end
  %106 = load i16, i16* %datasize, align 2, !dbg !3279
  %conv206 = zext i16 %106 to i32, !dbg !3279
  %cmp207 = icmp slt i32 %conv206, 2, !dbg !3282
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !3283

if.then209:                                       ; preds = %if.then205
  br label %sw.epilog, !dbg !3284

if.end210:                                        ; preds = %if.then205
  %107 = load i8*, i8** %p.addr, align 8, !dbg !3285
  %108 = load i32, i32* %offset, align 4, !dbg !3286
  %idx.ext211 = zext i32 %108 to i64, !dbg !3287
  %add.ptr212 = getelementptr inbounds i8, i8* %107, i64 %idx.ext211, !dbg !3287
  %call213 = call zeroext i16 @archive_le16dec(i8* %add.ptr212), !dbg !3288
  %conv214 = zext i16 %call213 to i32, !dbg !3288
  %shr = ashr i32 %conv214, 8, !dbg !3289
  %conv215 = trunc i32 %shr to i8, !dbg !3288
  %109 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3290
  %system = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %109, i32 0, i32 15, !dbg !3291
  store i8 %conv215, i8* %system, align 1, !dbg !3292
  %110 = load i32, i32* %offset, align 4, !dbg !3293
  %add216 = add i32 %110, 2, !dbg !3293
  store i32 %add216, i32* %offset, align 4, !dbg !3293
  %111 = load i16, i16* %datasize, align 2, !dbg !3294
  %conv217 = zext i16 %111 to i32, !dbg !3294
  %sub218 = sub nsw i32 %conv217, 2, !dbg !3294
  %conv219 = trunc i32 %sub218 to i16, !dbg !3294
  store i16 %conv219, i16* %datasize, align 2, !dbg !3294
  br label %if.end220, !dbg !3295

if.end220:                                        ; preds = %if.end210, %while.end
  %112 = load i32, i32* %bitmap, align 4, !dbg !3296
  %and221 = and i32 %112, 2, !dbg !3298
  %tobool222 = icmp ne i32 %and221, 0, !dbg !3298
  br i1 %tobool222, label %if.then223, label %if.end237, !dbg !3299

if.then223:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i32* %internal_attributes, metadata !3300, metadata !578), !dbg !3302
  %113 = load i16, i16* %datasize, align 2, !dbg !3303
  %conv224 = zext i16 %113 to i32, !dbg !3303
  %cmp225 = icmp slt i32 %conv224, 2, !dbg !3305
  br i1 %cmp225, label %if.then227, label %if.end228, !dbg !3306

if.then227:                                       ; preds = %if.then223
  br label %sw.epilog, !dbg !3307

if.end228:                                        ; preds = %if.then223
  %114 = load i8*, i8** %p.addr, align 8, !dbg !3308
  %115 = load i32, i32* %offset, align 4, !dbg !3309
  %idx.ext229 = zext i32 %115 to i64, !dbg !3310
  %add.ptr230 = getelementptr inbounds i8, i8* %114, i64 %idx.ext229, !dbg !3310
  %call231 = call zeroext i16 @archive_le16dec(i8* %add.ptr230), !dbg !3311
  %conv232 = zext i16 %call231 to i32, !dbg !3311
  store i32 %conv232, i32* %internal_attributes, align 4, !dbg !3312
  %116 = load i32, i32* %internal_attributes, align 4, !dbg !3313
  %117 = load i32, i32* %offset, align 4, !dbg !3314
  %add233 = add i32 %117, 2, !dbg !3314
  store i32 %add233, i32* %offset, align 4, !dbg !3314
  %118 = load i16, i16* %datasize, align 2, !dbg !3315
  %conv234 = zext i16 %118 to i32, !dbg !3315
  %sub235 = sub nsw i32 %conv234, 2, !dbg !3315
  %conv236 = trunc i32 %sub235 to i16, !dbg !3315
  store i16 %conv236, i16* %datasize, align 2, !dbg !3315
  br label %if.end237, !dbg !3316

if.end237:                                        ; preds = %if.end228, %if.end220
  %119 = load i32, i32* %bitmap, align 4, !dbg !3317
  %and238 = and i32 %119, 4, !dbg !3319
  %tobool239 = icmp ne i32 %and238, 0, !dbg !3319
  br i1 %tobool239, label %if.then240, label %if.end286, !dbg !3320

if.then240:                                       ; preds = %if.end237
  call void @llvm.dbg.declare(metadata i32* %external_attributes, metadata !3321, metadata !578), !dbg !3323
  %120 = load i16, i16* %datasize, align 2, !dbg !3324
  %conv241 = zext i16 %120 to i32, !dbg !3324
  %cmp242 = icmp slt i32 %conv241, 4, !dbg !3326
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !3327

if.then244:                                       ; preds = %if.then240
  br label %sw.epilog, !dbg !3328

if.end245:                                        ; preds = %if.then240
  %121 = load i8*, i8** %p.addr, align 8, !dbg !3329
  %122 = load i32, i32* %offset, align 4, !dbg !3330
  %idx.ext246 = zext i32 %122 to i64, !dbg !3331
  %add.ptr247 = getelementptr inbounds i8, i8* %121, i64 %idx.ext246, !dbg !3331
  %call248 = call i32 @archive_le32dec(i8* %add.ptr247), !dbg !3332
  store i32 %call248, i32* %external_attributes, align 4, !dbg !3333
  %123 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3334
  %system249 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %123, i32 0, i32 15, !dbg !3336
  %124 = load i8, i8* %system249, align 1, !dbg !3336
  %conv250 = zext i8 %124 to i32, !dbg !3334
  %cmp251 = icmp eq i32 %conv250, 3, !dbg !3337
  br i1 %cmp251, label %if.then253, label %if.else, !dbg !3338

if.then253:                                       ; preds = %if.end245
  %125 = load i32, i32* %external_attributes, align 4, !dbg !3339
  %shr254 = lshr i32 %125, 16, !dbg !3341
  %conv255 = trunc i32 %shr254 to i16, !dbg !3339
  %126 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3342
  %mode = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %126, i32 0, i32 12, !dbg !3343
  store i16 %conv255, i16* %mode, align 4, !dbg !3344
  br label %if.end281, !dbg !3345

if.else:                                          ; preds = %if.end245
  %127 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3346
  %system256 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %127, i32 0, i32 15, !dbg !3349
  %128 = load i8, i8* %system256, align 1, !dbg !3349
  %conv257 = zext i8 %128 to i32, !dbg !3346
  %cmp258 = icmp eq i32 %conv257, 0, !dbg !3350
  br i1 %cmp258, label %if.then260, label %if.else278, !dbg !3346

if.then260:                                       ; preds = %if.else
  %129 = load i32, i32* %external_attributes, align 4, !dbg !3351
  %and261 = and i32 %129, 16, !dbg !3354
  %cmp262 = icmp eq i32 16, %and261, !dbg !3355
  br i1 %cmp262, label %if.then264, label %if.else266, !dbg !3356

if.then264:                                       ; preds = %if.then260
  %130 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3357
  %mode265 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %130, i32 0, i32 12, !dbg !3359
  store i16 16893, i16* %mode265, align 4, !dbg !3360
  br label %if.end268, !dbg !3361

if.else266:                                       ; preds = %if.then260
  %131 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3362
  %mode267 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %131, i32 0, i32 12, !dbg !3364
  store i16 -32332, i16* %mode267, align 4, !dbg !3365
  br label %if.end268

if.end268:                                        ; preds = %if.else266, %if.then264
  %132 = load i32, i32* %external_attributes, align 4, !dbg !3366
  %and269 = and i32 %132, 1, !dbg !3368
  %cmp270 = icmp eq i32 1, %and269, !dbg !3369
  br i1 %cmp270, label %if.then272, label %if.end277, !dbg !3370

if.then272:                                       ; preds = %if.end268
  %133 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3371
  %mode273 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %133, i32 0, i32 12, !dbg !3373
  %134 = load i16, i16* %mode273, align 4, !dbg !3374
  %conv274 = zext i16 %134 to i32, !dbg !3374
  %and275 = and i32 %conv274, 365, !dbg !3374
  %conv276 = trunc i32 %and275 to i16, !dbg !3374
  store i16 %conv276, i16* %mode273, align 4, !dbg !3374
  br label %if.end277, !dbg !3375

if.end277:                                        ; preds = %if.then272, %if.end268
  br label %if.end280, !dbg !3376

if.else278:                                       ; preds = %if.else
  %135 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3377
  %mode279 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %135, i32 0, i32 12, !dbg !3379
  store i16 0, i16* %mode279, align 4, !dbg !3380
  br label %if.end280

if.end280:                                        ; preds = %if.else278, %if.end277
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then253
  %136 = load i32, i32* %offset, align 4, !dbg !3381
  %add282 = add i32 %136, 4, !dbg !3381
  store i32 %add282, i32* %offset, align 4, !dbg !3381
  %137 = load i16, i16* %datasize, align 2, !dbg !3382
  %conv283 = zext i16 %137 to i32, !dbg !3382
  %sub284 = sub nsw i32 %conv283, 4, !dbg !3382
  %conv285 = trunc i32 %sub284 to i16, !dbg !3382
  store i16 %conv285, i16* %datasize, align 2, !dbg !3382
  br label %if.end286, !dbg !3383

if.end286:                                        ; preds = %if.end281, %if.end237
  %138 = load i32, i32* %bitmap, align 4, !dbg !3384
  %and287 = and i32 %138, 8, !dbg !3386
  %tobool288 = icmp ne i32 %and287, 0, !dbg !3386
  br i1 %tobool288, label %if.then289, label %if.end312, !dbg !3387

if.then289:                                       ; preds = %if.end286
  call void @llvm.dbg.declare(metadata i32* %comment_length, metadata !3388, metadata !578), !dbg !3390
  %139 = load i16, i16* %datasize, align 2, !dbg !3391
  %conv290 = zext i16 %139 to i32, !dbg !3391
  %cmp291 = icmp slt i32 %conv290, 2, !dbg !3393
  br i1 %cmp291, label %if.then293, label %if.end294, !dbg !3394

if.then293:                                       ; preds = %if.then289
  br label %sw.epilog, !dbg !3395

if.end294:                                        ; preds = %if.then289
  %140 = load i8*, i8** %p.addr, align 8, !dbg !3396
  %141 = load i32, i32* %offset, align 4, !dbg !3397
  %idx.ext295 = zext i32 %141 to i64, !dbg !3398
  %add.ptr296 = getelementptr inbounds i8, i8* %140, i64 %idx.ext295, !dbg !3398
  %call297 = call zeroext i16 @archive_le16dec(i8* %add.ptr296), !dbg !3399
  %conv298 = zext i16 %call297 to i32, !dbg !3399
  store i32 %conv298, i32* %comment_length, align 4, !dbg !3400
  %142 = load i32, i32* %offset, align 4, !dbg !3401
  %add299 = add i32 %142, 2, !dbg !3401
  store i32 %add299, i32* %offset, align 4, !dbg !3401
  %143 = load i16, i16* %datasize, align 2, !dbg !3402
  %conv300 = zext i16 %143 to i32, !dbg !3402
  %sub301 = sub nsw i32 %conv300, 2, !dbg !3402
  %conv302 = trunc i32 %sub301 to i16, !dbg !3402
  store i16 %conv302, i16* %datasize, align 2, !dbg !3402
  %144 = load i16, i16* %datasize, align 2, !dbg !3403
  %conv303 = zext i16 %144 to i32, !dbg !3403
  %145 = load i32, i32* %comment_length, align 4, !dbg !3405
  %cmp304 = icmp ult i32 %conv303, %145, !dbg !3406
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !3407

if.then306:                                       ; preds = %if.end294
  br label %sw.epilog, !dbg !3408

if.end307:                                        ; preds = %if.end294
  %146 = load i32, i32* %comment_length, align 4, !dbg !3409
  %147 = load i32, i32* %offset, align 4, !dbg !3410
  %add308 = add i32 %147, %146, !dbg !3410
  store i32 %add308, i32* %offset, align 4, !dbg !3410
  %148 = load i32, i32* %comment_length, align 4, !dbg !3411
  %149 = load i16, i16* %datasize, align 2, !dbg !3412
  %conv309 = zext i16 %149 to i32, !dbg !3412
  %sub310 = sub i32 %conv309, %148, !dbg !3412
  %conv311 = trunc i32 %sub310 to i16, !dbg !3412
  store i16 %conv311, i16* %datasize, align 2, !dbg !3412
  br label %if.end312, !dbg !3413

if.end312:                                        ; preds = %if.end307, %if.end286
  br label %sw.epilog, !dbg !3414

sw.bb313:                                         ; preds = %if.end22
  %150 = load i16, i16* %datasize, align 2, !dbg !3415
  %conv314 = zext i16 %150 to i32, !dbg !3415
  %cmp315 = icmp sge i32 %conv314, 2, !dbg !3417
  br i1 %cmp315, label %if.then317, label %if.end323, !dbg !3418

if.then317:                                       ; preds = %sw.bb313
  %151 = load i8*, i8** %p.addr, align 8, !dbg !3419
  %152 = load i32, i32* %offset, align 4, !dbg !3420
  %idx.ext318 = zext i32 %152 to i64, !dbg !3421
  %add.ptr319 = getelementptr inbounds i8, i8* %151, i64 %idx.ext318, !dbg !3421
  %call320 = call zeroext i16 @archive_le16dec(i8* %add.ptr319), !dbg !3422
  %conv321 = zext i16 %call320 to i64, !dbg !3422
  %153 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3423
  %uid322 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %153, i32 0, i32 6, !dbg !3424
  store i64 %conv321, i64* %uid322, align 8, !dbg !3425
  br label %if.end323, !dbg !3423

if.end323:                                        ; preds = %if.then317, %sw.bb313
  %154 = load i16, i16* %datasize, align 2, !dbg !3426
  %conv324 = zext i16 %154 to i32, !dbg !3426
  %cmp325 = icmp sge i32 %conv324, 4, !dbg !3428
  br i1 %cmp325, label %if.then327, label %if.end334, !dbg !3429

if.then327:                                       ; preds = %if.end323
  %155 = load i8*, i8** %p.addr, align 8, !dbg !3430
  %156 = load i32, i32* %offset, align 4, !dbg !3431
  %idx.ext328 = zext i32 %156 to i64, !dbg !3432
  %add.ptr329 = getelementptr inbounds i8, i8* %155, i64 %idx.ext328, !dbg !3432
  %add.ptr330 = getelementptr inbounds i8, i8* %add.ptr329, i64 2, !dbg !3433
  %call331 = call zeroext i16 @archive_le16dec(i8* %add.ptr330), !dbg !3434
  %conv332 = zext i16 %call331 to i64, !dbg !3434
  %157 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3435
  %gid333 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %157, i32 0, i32 5, !dbg !3436
  store i64 %conv332, i64* %gid333, align 8, !dbg !3437
  br label %if.end334, !dbg !3435

if.end334:                                        ; preds = %if.then327, %if.end323
  br label %sw.epilog, !dbg !3438

sw.bb335:                                         ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %uidsize, metadata !3439, metadata !578), !dbg !3441
  store i32 0, i32* %uidsize, align 4, !dbg !3441
  call void @llvm.dbg.declare(metadata i32* %gidsize, metadata !3442, metadata !578), !dbg !3443
  store i32 0, i32* %gidsize, align 4, !dbg !3443
  %158 = load i16, i16* %datasize, align 2, !dbg !3444
  %conv336 = zext i16 %158 to i32, !dbg !3444
  %cmp337 = icmp sge i32 %conv336, 1, !dbg !3446
  br i1 %cmp337, label %land.lhs.true, label %if.end426, !dbg !3447

land.lhs.true:                                    ; preds = %sw.bb335
  %159 = load i32, i32* %offset, align 4, !dbg !3448
  %idxprom339 = zext i32 %159 to i64, !dbg !3450
  %160 = load i8*, i8** %p.addr, align 8, !dbg !3450
  %arrayidx340 = getelementptr inbounds i8, i8* %160, i64 %idxprom339, !dbg !3450
  %161 = load i8, i8* %arrayidx340, align 1, !dbg !3450
  %conv341 = sext i8 %161 to i32, !dbg !3450
  %cmp342 = icmp eq i32 %conv341, 1, !dbg !3451
  br i1 %cmp342, label %if.then344, label %if.end426, !dbg !3452

if.then344:                                       ; preds = %land.lhs.true
  %162 = load i16, i16* %datasize, align 2, !dbg !3453
  %conv345 = zext i16 %162 to i32, !dbg !3453
  %cmp346 = icmp sge i32 %conv345, 4, !dbg !3456
  br i1 %cmp346, label %if.then348, label %if.end379, !dbg !3457

if.then348:                                       ; preds = %if.then344
  %163 = load i32, i32* %offset, align 4, !dbg !3458
  %add349 = add i32 %163, 1, !dbg !3460
  %idxprom350 = zext i32 %add349 to i64, !dbg !3461
  %164 = load i8*, i8** %p.addr, align 8, !dbg !3461
  %arrayidx351 = getelementptr inbounds i8, i8* %164, i64 %idxprom350, !dbg !3461
  %165 = load i8, i8* %arrayidx351, align 1, !dbg !3461
  %conv352 = sext i8 %165 to i32, !dbg !3462
  %and353 = and i32 255, %conv352, !dbg !3463
  store i32 %and353, i32* %uidsize, align 4, !dbg !3464
  %166 = load i32, i32* %uidsize, align 4, !dbg !3465
  %cmp354 = icmp eq i32 %166, 2, !dbg !3467
  br i1 %cmp354, label %if.then356, label %if.else363, !dbg !3468

if.then356:                                       ; preds = %if.then348
  %167 = load i8*, i8** %p.addr, align 8, !dbg !3469
  %168 = load i32, i32* %offset, align 4, !dbg !3470
  %idx.ext357 = zext i32 %168 to i64, !dbg !3471
  %add.ptr358 = getelementptr inbounds i8, i8* %167, i64 %idx.ext357, !dbg !3471
  %add.ptr359 = getelementptr inbounds i8, i8* %add.ptr358, i64 2, !dbg !3472
  %call360 = call zeroext i16 @archive_le16dec(i8* %add.ptr359), !dbg !3473
  %conv361 = zext i16 %call360 to i64, !dbg !3473
  %169 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3474
  %uid362 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %169, i32 0, i32 6, !dbg !3475
  store i64 %conv361, i64* %uid362, align 8, !dbg !3476
  br label %if.end378, !dbg !3474

if.else363:                                       ; preds = %if.then348
  %170 = load i32, i32* %uidsize, align 4, !dbg !3477
  %cmp364 = icmp eq i32 %170, 4, !dbg !3479
  br i1 %cmp364, label %land.lhs.true366, label %if.end377, !dbg !3480

land.lhs.true366:                                 ; preds = %if.else363
  %171 = load i16, i16* %datasize, align 2, !dbg !3481
  %conv367 = zext i16 %171 to i32, !dbg !3481
  %cmp368 = icmp sge i32 %conv367, 6, !dbg !3483
  br i1 %cmp368, label %if.then370, label %if.end377, !dbg !3484

if.then370:                                       ; preds = %land.lhs.true366
  %172 = load i8*, i8** %p.addr, align 8, !dbg !3485
  %173 = load i32, i32* %offset, align 4, !dbg !3486
  %idx.ext371 = zext i32 %173 to i64, !dbg !3487
  %add.ptr372 = getelementptr inbounds i8, i8* %172, i64 %idx.ext371, !dbg !3487
  %add.ptr373 = getelementptr inbounds i8, i8* %add.ptr372, i64 2, !dbg !3488
  %call374 = call i32 @archive_le32dec(i8* %add.ptr373), !dbg !3489
  %conv375 = zext i32 %call374 to i64, !dbg !3489
  %174 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3490
  %uid376 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %174, i32 0, i32 6, !dbg !3491
  store i64 %conv375, i64* %uid376, align 8, !dbg !3492
  br label %if.end377, !dbg !3490

if.end377:                                        ; preds = %if.then370, %land.lhs.true366, %if.else363
  br label %if.end378

if.end378:                                        ; preds = %if.end377, %if.then356
  br label %if.end379, !dbg !3493

if.end379:                                        ; preds = %if.end378, %if.then344
  %175 = load i16, i16* %datasize, align 2, !dbg !3494
  %conv380 = zext i16 %175 to i32, !dbg !3494
  %176 = load i32, i32* %uidsize, align 4, !dbg !3496
  %add381 = add nsw i32 2, %176, !dbg !3497
  %add382 = add nsw i32 %add381, 3, !dbg !3498
  %cmp383 = icmp sge i32 %conv380, %add382, !dbg !3499
  br i1 %cmp383, label %if.then385, label %if.end425, !dbg !3500

if.then385:                                       ; preds = %if.end379
  %177 = load i32, i32* %offset, align 4, !dbg !3501
  %add386 = add i32 %177, 2, !dbg !3503
  %178 = load i32, i32* %uidsize, align 4, !dbg !3504
  %add387 = add i32 %add386, %178, !dbg !3505
  %idxprom388 = zext i32 %add387 to i64, !dbg !3506
  %179 = load i8*, i8** %p.addr, align 8, !dbg !3506
  %arrayidx389 = getelementptr inbounds i8, i8* %179, i64 %idxprom388, !dbg !3506
  %180 = load i8, i8* %arrayidx389, align 1, !dbg !3506
  %conv390 = sext i8 %180 to i32, !dbg !3507
  %and391 = and i32 255, %conv390, !dbg !3508
  store i32 %and391, i32* %gidsize, align 4, !dbg !3509
  %181 = load i32, i32* %gidsize, align 4, !dbg !3510
  %cmp392 = icmp eq i32 %181, 2, !dbg !3512
  br i1 %cmp392, label %if.then394, label %if.else404, !dbg !3513

if.then394:                                       ; preds = %if.then385
  %182 = load i8*, i8** %p.addr, align 8, !dbg !3514
  %183 = load i32, i32* %offset, align 4, !dbg !3515
  %idx.ext395 = zext i32 %183 to i64, !dbg !3516
  %add.ptr396 = getelementptr inbounds i8, i8* %182, i64 %idx.ext395, !dbg !3516
  %add.ptr397 = getelementptr inbounds i8, i8* %add.ptr396, i64 2, !dbg !3517
  %184 = load i32, i32* %uidsize, align 4, !dbg !3518
  %idx.ext398 = sext i32 %184 to i64, !dbg !3519
  %add.ptr399 = getelementptr inbounds i8, i8* %add.ptr397, i64 %idx.ext398, !dbg !3519
  %add.ptr400 = getelementptr inbounds i8, i8* %add.ptr399, i64 1, !dbg !3520
  %call401 = call zeroext i16 @archive_le16dec(i8* %add.ptr400), !dbg !3521
  %conv402 = zext i16 %call401 to i64, !dbg !3521
  %185 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3522
  %gid403 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %185, i32 0, i32 5, !dbg !3523
  store i64 %conv402, i64* %gid403, align 8, !dbg !3524
  br label %if.end424, !dbg !3522

if.else404:                                       ; preds = %if.then385
  %186 = load i32, i32* %gidsize, align 4, !dbg !3525
  %cmp405 = icmp eq i32 %186, 4, !dbg !3527
  br i1 %cmp405, label %land.lhs.true407, label %if.end423, !dbg !3528

land.lhs.true407:                                 ; preds = %if.else404
  %187 = load i16, i16* %datasize, align 2, !dbg !3529
  %conv408 = zext i16 %187 to i32, !dbg !3529
  %188 = load i32, i32* %uidsize, align 4, !dbg !3530
  %add409 = add nsw i32 2, %188, !dbg !3531
  %add410 = add nsw i32 %add409, 5, !dbg !3532
  %cmp411 = icmp sge i32 %conv408, %add410, !dbg !3533
  br i1 %cmp411, label %if.then413, label %if.end423, !dbg !3534

if.then413:                                       ; preds = %land.lhs.true407
  %189 = load i8*, i8** %p.addr, align 8, !dbg !3536
  %190 = load i32, i32* %offset, align 4, !dbg !3537
  %idx.ext414 = zext i32 %190 to i64, !dbg !3538
  %add.ptr415 = getelementptr inbounds i8, i8* %189, i64 %idx.ext414, !dbg !3538
  %add.ptr416 = getelementptr inbounds i8, i8* %add.ptr415, i64 2, !dbg !3539
  %191 = load i32, i32* %uidsize, align 4, !dbg !3540
  %idx.ext417 = sext i32 %191 to i64, !dbg !3541
  %add.ptr418 = getelementptr inbounds i8, i8* %add.ptr416, i64 %idx.ext417, !dbg !3541
  %add.ptr419 = getelementptr inbounds i8, i8* %add.ptr418, i64 1, !dbg !3542
  %call420 = call i32 @archive_le32dec(i8* %add.ptr419), !dbg !3543
  %conv421 = zext i32 %call420 to i64, !dbg !3543
  %192 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3544
  %gid422 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %192, i32 0, i32 5, !dbg !3545
  store i64 %conv421, i64* %gid422, align 8, !dbg !3546
  br label %if.end423, !dbg !3544

if.end423:                                        ; preds = %if.then413, %land.lhs.true407, %if.else404
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %if.then394
  br label %if.end425, !dbg !3547

if.end425:                                        ; preds = %if.end424, %if.end379
  br label %if.end426, !dbg !3548

if.end426:                                        ; preds = %if.end425, %land.lhs.true, %sw.bb335
  br label %sw.epilog, !dbg !3549

sw.bb427:                                         ; preds = %if.end22
  %193 = load i32, i32* %offset, align 4, !dbg !3550
  %add428 = add i32 %193, 2, !dbg !3552
  %idxprom429 = zext i32 %add428 to i64, !dbg !3553
  %194 = load i8*, i8** %p.addr, align 8, !dbg !3553
  %arrayidx430 = getelementptr inbounds i8, i8* %194, i64 %idxprom429, !dbg !3553
  %195 = load i8, i8* %arrayidx430, align 1, !dbg !3553
  %conv431 = sext i8 %195 to i32, !dbg !3553
  %cmp432 = icmp eq i32 %conv431, 65, !dbg !3554
  br i1 %cmp432, label %land.lhs.true434, label %if.end455, !dbg !3555

land.lhs.true434:                                 ; preds = %sw.bb427
  %196 = load i32, i32* %offset, align 4, !dbg !3556
  %add435 = add i32 %196, 3, !dbg !3558
  %idxprom436 = zext i32 %add435 to i64, !dbg !3559
  %197 = load i8*, i8** %p.addr, align 8, !dbg !3559
  %arrayidx437 = getelementptr inbounds i8, i8* %197, i64 %idxprom436, !dbg !3559
  %198 = load i8, i8* %arrayidx437, align 1, !dbg !3559
  %conv438 = sext i8 %198 to i32, !dbg !3559
  %cmp439 = icmp eq i32 %conv438, 69, !dbg !3560
  br i1 %cmp439, label %if.then441, label %if.end455, !dbg !3561

if.then441:                                       ; preds = %land.lhs.true434
  %199 = load i8*, i8** %p.addr, align 8, !dbg !3562
  %200 = load i32, i32* %offset, align 4, !dbg !3564
  %idx.ext442 = zext i32 %200 to i64, !dbg !3565
  %add.ptr443 = getelementptr inbounds i8, i8* %199, i64 %idx.ext442, !dbg !3565
  %call444 = call zeroext i16 @archive_le16dec(i8* %add.ptr443), !dbg !3566
  %conv445 = zext i16 %call444 to i32, !dbg !3566
  %201 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3567
  %aes_extra = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %201, i32 0, i32 18, !dbg !3568
  %vendor = getelementptr inbounds %struct.anon.0, %struct.anon.0* %aes_extra, i32 0, i32 0, !dbg !3569
  store i32 %conv445, i32* %vendor, align 4, !dbg !3570
  %202 = load i32, i32* %offset, align 4, !dbg !3571
  %add446 = add i32 %202, 4, !dbg !3572
  %idxprom447 = zext i32 %add446 to i64, !dbg !3573
  %203 = load i8*, i8** %p.addr, align 8, !dbg !3573
  %arrayidx448 = getelementptr inbounds i8, i8* %203, i64 %idxprom447, !dbg !3573
  %204 = load i8, i8* %arrayidx448, align 1, !dbg !3573
  %conv449 = sext i8 %204 to i32, !dbg !3573
  %205 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3574
  %aes_extra450 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %205, i32 0, i32 18, !dbg !3575
  %strength = getelementptr inbounds %struct.anon.0, %struct.anon.0* %aes_extra450, i32 0, i32 1, !dbg !3576
  store i32 %conv449, i32* %strength, align 4, !dbg !3577
  %206 = load i32, i32* %offset, align 4, !dbg !3578
  %add451 = add i32 %206, 5, !dbg !3579
  %idxprom452 = zext i32 %add451 to i64, !dbg !3580
  %207 = load i8*, i8** %p.addr, align 8, !dbg !3580
  %arrayidx453 = getelementptr inbounds i8, i8* %207, i64 %idxprom452, !dbg !3580
  %208 = load i8, i8* %arrayidx453, align 1, !dbg !3580
  %209 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry.addr, align 8, !dbg !3581
  %aes_extra454 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %209, i32 0, i32 18, !dbg !3582
  %compression = getelementptr inbounds %struct.anon.0, %struct.anon.0* %aes_extra454, i32 0, i32 2, !dbg !3583
  store i8 %208, i8* %compression, align 4, !dbg !3584
  br label %if.end455, !dbg !3585

if.end455:                                        ; preds = %if.then441, %land.lhs.true434, %sw.bb427
  br label %sw.epilog, !dbg !3586

sw.default:                                       ; preds = %if.end22
  br label %sw.epilog, !dbg !3587

sw.epilog:                                        ; preds = %sw.default, %if.end455, %if.end426, %if.end334, %if.end312, %if.then306, %if.then293, %if.then244, %if.then227, %if.then209, %if.then178, %if.end173, %if.end141, %if.then131, %if.then114, %if.then97, %if.end89
  %210 = load i16, i16* %datasize, align 2, !dbg !3588
  %conv456 = zext i16 %210 to i32, !dbg !3588
  %211 = load i32, i32* %offset, align 4, !dbg !3589
  %add457 = add i32 %211, %conv456, !dbg !3589
  store i32 %add457, i32* %offset, align 4, !dbg !3589
  br label %while.cond, !dbg !3590

while.end458:                                     ; preds = %while.cond
  %212 = load i32, i32* %offset, align 4, !dbg !3592
  %conv459 = zext i32 %212 to i64, !dbg !3592
  %213 = load i64, i64* %extra_length.addr, align 8, !dbg !3594
  %cmp460 = icmp ne i64 %conv459, %213, !dbg !3595
  br i1 %cmp460, label %if.then462, label %if.end465, !dbg !3596

if.then462:                                       ; preds = %while.end458
  %214 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3597
  %archive463 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %214, i32 0, i32 0, !dbg !3599
  %215 = load i32, i32* %offset, align 4, !dbg !3600
  %216 = load i64, i64* %extra_length.addr, align 8, !dbg !3601
  %conv464 = trunc i64 %216 to i32, !dbg !3602
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive463, i32 84, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i32 0, i32 0), i32 %215, i32 %conv464), !dbg !3603
  store i32 -25, i32* %retval, align 4, !dbg !3604
  br label %return, !dbg !3604

if.end465:                                        ; preds = %while.end458
  store i32 0, i32* %retval, align 4, !dbg !3605
  br label %return, !dbg !3605

return:                                           ; preds = %if.end465, %if.then462, %if.then81, %if.then59, %if.then37, %if.then16, %if.then2, %if.then
  %217 = load i32, i32* %retval, align 4, !dbg !3606
  ret i32 %217, !dbg !3606
}

declare i32* @archive_entry_pathname_w(%struct.archive_entry*) #2

; Function Attrs: nounwind readonly
declare i64 @wcslen(i32*) #4

declare i8* @archive_entry_pathname(%struct.archive_entry*) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

declare %struct.archive_wstring* @archive_wstrcat(%struct.archive_wstring*, i32*) #2

declare %struct.archive_wstring* @archive_wstrappend_wchar(%struct.archive_wstring*, i32) #2

declare void @archive_entry_copy_pathname_w(%struct.archive_entry*, i32*) #2

declare void @archive_wstring_free(%struct.archive_wstring*) #2

declare %struct.archive_string* @archive_strcat(%struct.archive_string*, i8*) #2

declare %struct.archive_string* @archive_strappend_char(%struct.archive_string*, i8 signext) #2

declare void @archive_entry_set_pathname(%struct.archive_entry*, i8*) #2

declare void @archive_string_free(%struct.archive_string*) #2

declare void @archive_entry_set_mode(%struct.archive_entry*, i32) #2

declare void @archive_entry_set_uid(%struct.archive_entry*, i64) #2

declare void @archive_entry_set_gid(%struct.archive_entry*, i64) #2

declare void @archive_entry_set_mtime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_ctime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_atime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_size(%struct.archive_entry*, i64) #2

declare i32 @_archive_entry_copy_symlink_l(%struct.archive_entry*, i8*, i64, %struct.archive_string_conv*) #2

declare void @archive_string_sprintf(%struct.archive_string*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i8* @compression_name(i32 %compression) #0 !dbg !501 {
entry:
  %retval = alloca i8*, align 8
  %compression.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %compression, i32* %compression.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compression.addr, metadata !3607, metadata !578), !dbg !3608
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3609, metadata !578), !dbg !3610
  store i32 0, i32* %i, align 4, !dbg !3610
  br label %while.cond, !dbg !3611

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %compression.addr, align 4, !dbg !3612
  %cmp = icmp sge i32 %0, 0, !dbg !3614
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3615

land.rhs:                                         ; preds = %while.cond
  %1 = load i32, i32* %i, align 4, !dbg !3616
  %cmp1 = icmp slt i32 %1, 23, !dbg !3618
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %2, label %while.body, label %while.end, !dbg !3619

while.body:                                       ; preds = %land.end
  %3 = load i32, i32* %i, align 4, !dbg !3621
  %idxprom = sext i32 %3 to i64, !dbg !3624
  %arrayidx = getelementptr inbounds [23 x %struct.anon.1], [23 x %struct.anon.1]* @compression_methods, i64 0, i64 %idxprom, !dbg !3624
  %id = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 0, !dbg !3625
  %4 = load i32, i32* %id, align 16, !dbg !3625
  %5 = load i32, i32* %compression.addr, align 4, !dbg !3626
  %cmp2 = icmp eq i32 %4, %5, !dbg !3627
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3628

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4, !dbg !3629
  %idxprom3 = sext i32 %6 to i64, !dbg !3630
  %arrayidx4 = getelementptr inbounds [23 x %struct.anon.1], [23 x %struct.anon.1]* @compression_methods, i64 0, i64 %idxprom3, !dbg !3630
  %name = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx4, i32 0, i32 1, !dbg !3631
  %7 = load i8*, i8** %name, align 8, !dbg !3631
  store i8* %7, i8** %retval, align 8, !dbg !3632
  br label %return, !dbg !3632

if.end:                                           ; preds = %while.body
  %8 = load i32, i32* %i, align 4, !dbg !3633
  %inc = add nsw i32 %8, 1, !dbg !3633
  store i32 %inc, i32* %i, align 4, !dbg !3633
  br label %while.cond, !dbg !3634

while.end:                                        ; preds = %land.end
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i8** %retval, align 8, !dbg !3636
  br label %return, !dbg !3636

return:                                           ; preds = %while.end, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !3637
  ret i8* %9, !dbg !3637
}

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @archive_le64dec(i8* %pp) #6 !dbg !498 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !3638, metadata !578), !dbg !3639
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3640, metadata !578), !dbg !3641
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !3642
  store i8* %0, i8** %p, align 8, !dbg !3641
  %1 = load i8*, i8** %p, align 8, !dbg !3643
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 4, !dbg !3644
  %call = call i32 @archive_le32dec(i8* %add.ptr), !dbg !3645
  %conv = zext i32 %call to i64, !dbg !3646
  %shl = shl i64 %conv, 32, !dbg !3647
  %2 = load i8*, i8** %p, align 8, !dbg !3648
  %call1 = call i32 @archive_le32dec(i8* %2), !dbg !3649
  %conv2 = zext i32 %call1 to i64, !dbg !3651
  %or = or i64 %shl, %conv2, !dbg !3652
  ret i64 %or, !dbg !3653
}

; Function Attrs: nounwind uwtable
define internal i32 @read_decryption_header(%struct.archive_read* %a) #0 !dbg !506 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %p = alloca i8*, align 8
  %remaining_size = alloca i32, align 4
  %ts = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3654, metadata !578), !dbg !3655
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !3656, metadata !578), !dbg !3657
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3658
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3659
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3659
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3660
  %2 = load i8*, i8** %data, align 8, !dbg !3660
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !3661
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !3657
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3662, metadata !578), !dbg !3663
  call void @llvm.dbg.declare(metadata i32* %remaining_size, metadata !3664, metadata !578), !dbg !3665
  call void @llvm.dbg.declare(metadata i32* %ts, metadata !3666, metadata !578), !dbg !3667
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3668
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %4, i64 2, i64* null), !dbg !3669
  store i8* %call, i8** %p, align 8, !dbg !3670
  %5 = load i8*, i8** %p, align 8, !dbg !3671
  %cmp = icmp eq i8* %5, null, !dbg !3673
  br i1 %cmp, label %if.then, label %if.end, !dbg !3674

if.then:                                          ; preds = %entry
  br label %truncated, !dbg !3675

if.end:                                           ; preds = %entry
  %6 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3676
  %iv_size = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 39, !dbg !3677
  %7 = load i32, i32* %iv_size, align 8, !dbg !3677
  store i32 %7, i32* %ts, align 4, !dbg !3678
  %8 = load i8*, i8** %p, align 8, !dbg !3679
  %call1 = call zeroext i16 @archive_le16dec(i8* %8), !dbg !3680
  %conv = zext i16 %call1 to i32, !dbg !3680
  %9 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3681
  %iv_size2 = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 39, !dbg !3682
  store i32 %conv, i32* %iv_size2, align 8, !dbg !3683
  %10 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3684
  %call3 = call i64 @__archive_read_consume(%struct.archive_read* %10, i64 2), !dbg !3685
  %11 = load i32, i32* %ts, align 4, !dbg !3686
  %12 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3688
  %iv_size4 = getelementptr inbounds %struct.zip, %struct.zip* %12, i32 0, i32 39, !dbg !3689
  %13 = load i32, i32* %iv_size4, align 8, !dbg !3689
  %cmp5 = icmp ult i32 %11, %13, !dbg !3690
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !3691

if.then7:                                         ; preds = %if.end
  %14 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3692
  %iv = getelementptr inbounds %struct.zip, %struct.zip* %14, i32 0, i32 46, !dbg !3694
  %15 = load i8*, i8** %iv, align 8, !dbg !3694
  call void @free(i8* %15) #8, !dbg !3695
  %16 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3696
  %iv8 = getelementptr inbounds %struct.zip, %struct.zip* %16, i32 0, i32 46, !dbg !3697
  store i8* null, i8** %iv8, align 8, !dbg !3698
  br label %if.end9, !dbg !3699

if.end9:                                          ; preds = %if.then7, %if.end
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3700
  %18 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3701
  %iv_size10 = getelementptr inbounds %struct.zip, %struct.zip* %18, i32 0, i32 39, !dbg !3702
  %19 = load i32, i32* %iv_size10, align 8, !dbg !3702
  %conv11 = zext i32 %19 to i64, !dbg !3701
  %call12 = call i8* @__archive_read_ahead(%struct.archive_read* %17, i64 %conv11, i64* null), !dbg !3703
  store i8* %call12, i8** %p, align 8, !dbg !3704
  %20 = load i8*, i8** %p, align 8, !dbg !3705
  %cmp13 = icmp eq i8* %20, null, !dbg !3707
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3708

if.then15:                                        ; preds = %if.end9
  br label %truncated, !dbg !3709

if.end16:                                         ; preds = %if.end9
  %21 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3710
  %iv17 = getelementptr inbounds %struct.zip, %struct.zip* %21, i32 0, i32 46, !dbg !3712
  %22 = load i8*, i8** %iv17, align 8, !dbg !3712
  %cmp18 = icmp eq i8* %22, null, !dbg !3713
  br i1 %cmp18, label %if.then20, label %if.end30, !dbg !3714

if.then20:                                        ; preds = %if.end16
  %23 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3715
  %iv_size21 = getelementptr inbounds %struct.zip, %struct.zip* %23, i32 0, i32 39, !dbg !3717
  %24 = load i32, i32* %iv_size21, align 8, !dbg !3717
  %conv22 = zext i32 %24 to i64, !dbg !3715
  %call23 = call noalias i8* @malloc(i64 %conv22) #8, !dbg !3718
  %25 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3719
  %iv24 = getelementptr inbounds %struct.zip, %struct.zip* %25, i32 0, i32 46, !dbg !3720
  store i8* %call23, i8** %iv24, align 8, !dbg !3721
  %26 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3722
  %iv25 = getelementptr inbounds %struct.zip, %struct.zip* %26, i32 0, i32 46, !dbg !3724
  %27 = load i8*, i8** %iv25, align 8, !dbg !3724
  %cmp26 = icmp eq i8* %27, null, !dbg !3725
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !3726

if.then28:                                        ; preds = %if.then20
  br label %nomem, !dbg !3727

if.end29:                                         ; preds = %if.then20
  br label %if.end30, !dbg !3728

if.end30:                                         ; preds = %if.end29, %if.end16
  %28 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3729
  %iv31 = getelementptr inbounds %struct.zip, %struct.zip* %28, i32 0, i32 46, !dbg !3730
  %29 = load i8*, i8** %iv31, align 8, !dbg !3730
  %30 = load i8*, i8** %p, align 8, !dbg !3731
  %31 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3732
  %iv_size32 = getelementptr inbounds %struct.zip, %struct.zip* %31, i32 0, i32 39, !dbg !3733
  %32 = load i32, i32* %iv_size32, align 8, !dbg !3733
  %conv33 = zext i32 %32 to i64, !dbg !3732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 %conv33, i32 1, i1 false), !dbg !3734
  %33 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3735
  %34 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3736
  %iv_size34 = getelementptr inbounds %struct.zip, %struct.zip* %34, i32 0, i32 39, !dbg !3737
  %35 = load i32, i32* %iv_size34, align 8, !dbg !3737
  %conv35 = zext i32 %35 to i64, !dbg !3736
  %call36 = call i64 @__archive_read_consume(%struct.archive_read* %33, i64 %conv35), !dbg !3738
  %36 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3739
  %call37 = call i8* @__archive_read_ahead(%struct.archive_read* %36, i64 14, i64* null), !dbg !3740
  store i8* %call37, i8** %p, align 8, !dbg !3741
  %37 = load i8*, i8** %p, align 8, !dbg !3742
  %cmp38 = icmp eq i8* %37, null, !dbg !3744
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !3745

if.then40:                                        ; preds = %if.end30
  br label %truncated, !dbg !3746

if.end41:                                         ; preds = %if.end30
  %38 = load i8*, i8** %p, align 8, !dbg !3747
  %call42 = call i32 @archive_le32dec(i8* %38), !dbg !3748
  store i32 %call42, i32* %remaining_size, align 4, !dbg !3749
  %39 = load i32, i32* %remaining_size, align 4, !dbg !3750
  %cmp43 = icmp ult i32 %39, 16, !dbg !3752
  br i1 %cmp43, label %if.then47, label %lor.lhs.false, !dbg !3753

lor.lhs.false:                                    ; preds = %if.end41
  %40 = load i32, i32* %remaining_size, align 4, !dbg !3754
  %cmp45 = icmp ugt i32 %40, 262144, !dbg !3756
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !3757

if.then47:                                        ; preds = %lor.lhs.false, %if.end41
  br label %corrupted, !dbg !3758

if.end48:                                         ; preds = %lor.lhs.false
  %41 = load i8*, i8** %p, align 8, !dbg !3759
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 4, !dbg !3761
  %call49 = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !3762
  %conv50 = zext i16 %call49 to i32, !dbg !3762
  %cmp51 = icmp ne i32 %conv50, 3, !dbg !3763
  br i1 %cmp51, label %if.then53, label %if.end57, !dbg !3764

if.then53:                                        ; preds = %if.end48
  %42 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3765
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %42, i32 0, i32 0, !dbg !3767
  %43 = load i8*, i8** %p, align 8, !dbg !3768
  %add.ptr54 = getelementptr inbounds i8, i8* %43, i64 4, !dbg !3769
  %call55 = call zeroext i16 @archive_le16dec(i8* %add.ptr54), !dbg !3770
  %conv56 = zext i16 %call55 to i32, !dbg !3770
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.55, i32 0, i32 0), i32 %conv56), !dbg !3771
  store i32 -25, i32* %retval, align 4, !dbg !3772
  br label %return, !dbg !3772

if.end57:                                         ; preds = %if.end48
  %44 = load i8*, i8** %p, align 8, !dbg !3773
  %add.ptr58 = getelementptr inbounds i8, i8* %44, i64 6, !dbg !3774
  %call59 = call zeroext i16 @archive_le16dec(i8* %add.ptr58), !dbg !3775
  %conv60 = zext i16 %call59 to i32, !dbg !3775
  %45 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3776
  %alg_id = getelementptr inbounds %struct.zip, %struct.zip* %45, i32 0, i32 40, !dbg !3777
  store i32 %conv60, i32* %alg_id, align 4, !dbg !3778
  %46 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3779
  %alg_id61 = getelementptr inbounds %struct.zip, %struct.zip* %46, i32 0, i32 40, !dbg !3780
  %47 = load i32, i32* %alg_id61, align 4, !dbg !3780
  switch i32 %47, label %sw.default [
    i32 26113, label %sw.bb
    i32 26114, label %sw.bb
    i32 26115, label %sw.bb
    i32 26121, label %sw.bb
    i32 26126, label %sw.bb
    i32 26127, label %sw.bb
    i32 26128, label %sw.bb
    i32 26370, label %sw.bb
    i32 26400, label %sw.bb
    i32 26401, label %sw.bb
    i32 26625, label %sw.bb
  ], !dbg !3781

sw.bb:                                            ; preds = %if.end57, %if.end57, %if.end57, %if.end57, %if.end57, %if.end57, %if.end57, %if.end57, %if.end57, %if.end57, %if.end57
  br label %sw.epilog, !dbg !3782

sw.default:                                       ; preds = %if.end57
  %48 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3784
  %archive62 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %48, i32 0, i32 0, !dbg !3785
  %49 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3786
  %alg_id63 = getelementptr inbounds %struct.zip, %struct.zip* %49, i32 0, i32 40, !dbg !3787
  %50 = load i32, i32* %alg_id63, align 4, !dbg !3787
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive62, i32 84, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.56, i32 0, i32 0), i32 %50), !dbg !3788
  store i32 -25, i32* %retval, align 4, !dbg !3789
  br label %return, !dbg !3789

sw.epilog:                                        ; preds = %sw.bb
  %51 = load i8*, i8** %p, align 8, !dbg !3790
  %add.ptr64 = getelementptr inbounds i8, i8* %51, i64 8, !dbg !3791
  %call65 = call zeroext i16 @archive_le16dec(i8* %add.ptr64), !dbg !3792
  %conv66 = zext i16 %call65 to i32, !dbg !3792
  %52 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3793
  %bit_len = getelementptr inbounds %struct.zip, %struct.zip* %52, i32 0, i32 41, !dbg !3794
  store i32 %conv66, i32* %bit_len, align 8, !dbg !3795
  %53 = load i8*, i8** %p, align 8, !dbg !3796
  %add.ptr67 = getelementptr inbounds i8, i8* %53, i64 10, !dbg !3797
  %call68 = call zeroext i16 @archive_le16dec(i8* %add.ptr67), !dbg !3798
  %conv69 = zext i16 %call68 to i32, !dbg !3798
  %54 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3799
  %flags = getelementptr inbounds %struct.zip, %struct.zip* %54, i32 0, i32 42, !dbg !3800
  store i32 %conv69, i32* %flags, align 4, !dbg !3801
  %55 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3802
  %flags70 = getelementptr inbounds %struct.zip, %struct.zip* %55, i32 0, i32 42, !dbg !3803
  %56 = load i32, i32* %flags70, align 4, !dbg !3803
  %and = and i32 %56, 61440, !dbg !3804
  switch i32 %and, label %sw.default72 [
    i32 1, label %sw.bb71
    i32 2, label %sw.bb71
    i32 3, label %sw.bb71
  ], !dbg !3805

sw.bb71:                                          ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  br label %sw.epilog75, !dbg !3806

sw.default72:                                     ; preds = %sw.epilog
  %57 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3808
  %archive73 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %57, i32 0, i32 0, !dbg !3809
  %58 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3810
  %flags74 = getelementptr inbounds %struct.zip, %struct.zip* %58, i32 0, i32 42, !dbg !3811
  %59 = load i32, i32* %flags74, align 4, !dbg !3811
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive73, i32 84, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.57, i32 0, i32 0), i32 %59), !dbg !3812
  store i32 -25, i32* %retval, align 4, !dbg !3813
  br label %return, !dbg !3813

sw.epilog75:                                      ; preds = %sw.bb71
  %60 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3814
  %flags76 = getelementptr inbounds %struct.zip, %struct.zip* %60, i32 0, i32 42, !dbg !3816
  %61 = load i32, i32* %flags76, align 4, !dbg !3816
  %and77 = and i32 %61, 61440, !dbg !3817
  %cmp78 = icmp eq i32 %and77, 0, !dbg !3818
  br i1 %cmp78, label %if.then85, label %lor.lhs.false80, !dbg !3819

lor.lhs.false80:                                  ; preds = %sw.epilog75
  %62 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3820
  %flags81 = getelementptr inbounds %struct.zip, %struct.zip* %62, i32 0, i32 42, !dbg !3821
  %63 = load i32, i32* %flags81, align 4, !dbg !3821
  %and82 = and i32 %63, 61440, !dbg !3822
  %cmp83 = icmp eq i32 %and82, 16384, !dbg !3823
  br i1 %cmp83, label %if.then85, label %if.end88, !dbg !3824

if.then85:                                        ; preds = %lor.lhs.false80, %sw.epilog75
  %64 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3826
  %archive86 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %64, i32 0, i32 0, !dbg !3828
  %65 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3829
  %flags87 = getelementptr inbounds %struct.zip, %struct.zip* %65, i32 0, i32 42, !dbg !3830
  %66 = load i32, i32* %flags87, align 4, !dbg !3830
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive86, i32 84, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.57, i32 0, i32 0), i32 %66), !dbg !3831
  store i32 -25, i32* %retval, align 4, !dbg !3832
  br label %return, !dbg !3832

if.end88:                                         ; preds = %lor.lhs.false80
  %67 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3833
  %erd_size = getelementptr inbounds %struct.zip, %struct.zip* %67, i32 0, i32 43, !dbg !3834
  %68 = load i32, i32* %erd_size, align 8, !dbg !3834
  store i32 %68, i32* %ts, align 4, !dbg !3835
  %69 = load i8*, i8** %p, align 8, !dbg !3836
  %add.ptr89 = getelementptr inbounds i8, i8* %69, i64 12, !dbg !3837
  %call90 = call zeroext i16 @archive_le16dec(i8* %add.ptr89), !dbg !3838
  %conv91 = zext i16 %call90 to i32, !dbg !3838
  %70 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3839
  %erd_size92 = getelementptr inbounds %struct.zip, %struct.zip* %70, i32 0, i32 43, !dbg !3840
  store i32 %conv91, i32* %erd_size92, align 8, !dbg !3841
  %71 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3842
  %call93 = call i64 @__archive_read_consume(%struct.archive_read* %71, i64 14), !dbg !3843
  %72 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3844
  %erd_size94 = getelementptr inbounds %struct.zip, %struct.zip* %72, i32 0, i32 43, !dbg !3846
  %73 = load i32, i32* %erd_size94, align 8, !dbg !3846
  %and95 = and i32 %73, 15, !dbg !3847
  %cmp96 = icmp ne i32 %and95, 0, !dbg !3848
  br i1 %cmp96, label %if.then108, label %lor.lhs.false98, !dbg !3849

lor.lhs.false98:                                  ; preds = %if.end88
  %74 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3850
  %erd_size99 = getelementptr inbounds %struct.zip, %struct.zip* %74, i32 0, i32 43, !dbg !3851
  %75 = load i32, i32* %erd_size99, align 8, !dbg !3851
  %add = add i32 %75, 16, !dbg !3852
  %76 = load i32, i32* %remaining_size, align 4, !dbg !3853
  %cmp100 = icmp ugt i32 %add, %76, !dbg !3854
  br i1 %cmp100, label %if.then108, label %lor.lhs.false102, !dbg !3855

lor.lhs.false102:                                 ; preds = %lor.lhs.false98
  %77 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3856
  %erd_size103 = getelementptr inbounds %struct.zip, %struct.zip* %77, i32 0, i32 43, !dbg !3857
  %78 = load i32, i32* %erd_size103, align 8, !dbg !3857
  %add104 = add i32 %78, 16, !dbg !3858
  %79 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3859
  %erd_size105 = getelementptr inbounds %struct.zip, %struct.zip* %79, i32 0, i32 43, !dbg !3860
  %80 = load i32, i32* %erd_size105, align 8, !dbg !3860
  %cmp106 = icmp ult i32 %add104, %80, !dbg !3861
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !3862

if.then108:                                       ; preds = %lor.lhs.false102, %lor.lhs.false98, %if.end88
  br label %corrupted, !dbg !3863

if.end109:                                        ; preds = %lor.lhs.false102
  %81 = load i32, i32* %ts, align 4, !dbg !3864
  %82 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3866
  %erd_size110 = getelementptr inbounds %struct.zip, %struct.zip* %82, i32 0, i32 43, !dbg !3867
  %83 = load i32, i32* %erd_size110, align 8, !dbg !3867
  %cmp111 = icmp ult i32 %81, %83, !dbg !3868
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !3869

if.then113:                                       ; preds = %if.end109
  %84 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3870
  %erd = getelementptr inbounds %struct.zip, %struct.zip* %84, i32 0, i32 47, !dbg !3872
  %85 = load i8*, i8** %erd, align 8, !dbg !3872
  call void @free(i8* %85) #8, !dbg !3873
  %86 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3874
  %erd114 = getelementptr inbounds %struct.zip, %struct.zip* %86, i32 0, i32 47, !dbg !3875
  store i8* null, i8** %erd114, align 8, !dbg !3876
  br label %if.end115, !dbg !3877

if.end115:                                        ; preds = %if.then113, %if.end109
  %87 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3878
  %88 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3879
  %erd_size116 = getelementptr inbounds %struct.zip, %struct.zip* %88, i32 0, i32 43, !dbg !3880
  %89 = load i32, i32* %erd_size116, align 8, !dbg !3880
  %conv117 = zext i32 %89 to i64, !dbg !3879
  %call118 = call i8* @__archive_read_ahead(%struct.archive_read* %87, i64 %conv117, i64* null), !dbg !3881
  store i8* %call118, i8** %p, align 8, !dbg !3882
  %90 = load i8*, i8** %p, align 8, !dbg !3883
  %cmp119 = icmp eq i8* %90, null, !dbg !3885
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !3886

if.then121:                                       ; preds = %if.end115
  br label %truncated, !dbg !3887

if.end122:                                        ; preds = %if.end115
  %91 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3888
  %erd123 = getelementptr inbounds %struct.zip, %struct.zip* %91, i32 0, i32 47, !dbg !3890
  %92 = load i8*, i8** %erd123, align 8, !dbg !3890
  %cmp124 = icmp eq i8* %92, null, !dbg !3891
  br i1 %cmp124, label %if.then126, label %if.end136, !dbg !3892

if.then126:                                       ; preds = %if.end122
  %93 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3893
  %erd_size127 = getelementptr inbounds %struct.zip, %struct.zip* %93, i32 0, i32 43, !dbg !3895
  %94 = load i32, i32* %erd_size127, align 8, !dbg !3895
  %conv128 = zext i32 %94 to i64, !dbg !3893
  %call129 = call noalias i8* @malloc(i64 %conv128) #8, !dbg !3896
  %95 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3897
  %erd130 = getelementptr inbounds %struct.zip, %struct.zip* %95, i32 0, i32 47, !dbg !3898
  store i8* %call129, i8** %erd130, align 8, !dbg !3899
  %96 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3900
  %erd131 = getelementptr inbounds %struct.zip, %struct.zip* %96, i32 0, i32 47, !dbg !3902
  %97 = load i8*, i8** %erd131, align 8, !dbg !3902
  %cmp132 = icmp eq i8* %97, null, !dbg !3903
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !3904

if.then134:                                       ; preds = %if.then126
  br label %nomem, !dbg !3905

if.end135:                                        ; preds = %if.then126
  br label %if.end136, !dbg !3906

if.end136:                                        ; preds = %if.end135, %if.end122
  %98 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3907
  %erd137 = getelementptr inbounds %struct.zip, %struct.zip* %98, i32 0, i32 47, !dbg !3908
  %99 = load i8*, i8** %erd137, align 8, !dbg !3908
  %100 = load i8*, i8** %p, align 8, !dbg !3909
  %101 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3910
  %erd_size138 = getelementptr inbounds %struct.zip, %struct.zip* %101, i32 0, i32 43, !dbg !3911
  %102 = load i32, i32* %erd_size138, align 8, !dbg !3911
  %conv139 = zext i32 %102 to i64, !dbg !3910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 %conv139, i32 1, i1 false), !dbg !3912
  %103 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3913
  %104 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3914
  %erd_size140 = getelementptr inbounds %struct.zip, %struct.zip* %104, i32 0, i32 43, !dbg !3915
  %105 = load i32, i32* %erd_size140, align 8, !dbg !3915
  %conv141 = zext i32 %105 to i64, !dbg !3914
  %call142 = call i64 @__archive_read_consume(%struct.archive_read* %103, i64 %conv141), !dbg !3916
  %106 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3917
  %call143 = call i8* @__archive_read_ahead(%struct.archive_read* %106, i64 4, i64* null), !dbg !3918
  store i8* %call143, i8** %p, align 8, !dbg !3919
  %107 = load i8*, i8** %p, align 8, !dbg !3920
  %cmp144 = icmp eq i8* %107, null, !dbg !3922
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !3923

if.then146:                                       ; preds = %if.end136
  br label %truncated, !dbg !3924

if.end147:                                        ; preds = %if.end136
  %108 = load i8*, i8** %p, align 8, !dbg !3925
  %call148 = call i32 @archive_le32dec(i8* %108), !dbg !3927
  %cmp149 = icmp ne i32 %call148, 0, !dbg !3928
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !3929

if.then151:                                       ; preds = %if.end147
  br label %corrupted, !dbg !3930

if.end152:                                        ; preds = %if.end147
  %109 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3931
  %call153 = call i64 @__archive_read_consume(%struct.archive_read* %109, i64 4), !dbg !3932
  %110 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3933
  %call154 = call i8* @__archive_read_ahead(%struct.archive_read* %110, i64 2, i64* null), !dbg !3934
  store i8* %call154, i8** %p, align 8, !dbg !3935
  %111 = load i8*, i8** %p, align 8, !dbg !3936
  %cmp155 = icmp eq i8* %111, null, !dbg !3938
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !3939

if.then157:                                       ; preds = %if.end152
  br label %truncated, !dbg !3940

if.end158:                                        ; preds = %if.end152
  %112 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3941
  %v_size = getelementptr inbounds %struct.zip, %struct.zip* %112, i32 0, i32 44, !dbg !3942
  %113 = load i32, i32* %v_size, align 4, !dbg !3942
  store i32 %113, i32* %ts, align 4, !dbg !3943
  %114 = load i8*, i8** %p, align 8, !dbg !3944
  %call159 = call zeroext i16 @archive_le16dec(i8* %114), !dbg !3945
  %conv160 = zext i16 %call159 to i32, !dbg !3945
  %115 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3946
  %v_size161 = getelementptr inbounds %struct.zip, %struct.zip* %115, i32 0, i32 44, !dbg !3947
  store i32 %conv160, i32* %v_size161, align 4, !dbg !3948
  %116 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3949
  %call162 = call i64 @__archive_read_consume(%struct.archive_read* %116, i64 2), !dbg !3950
  %117 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3951
  %v_size163 = getelementptr inbounds %struct.zip, %struct.zip* %117, i32 0, i32 44, !dbg !3953
  %118 = load i32, i32* %v_size163, align 4, !dbg !3953
  %and164 = and i32 %118, 15, !dbg !3954
  %cmp165 = icmp ne i32 %and164, 0, !dbg !3955
  br i1 %cmp165, label %if.then184, label %lor.lhs.false167, !dbg !3956

lor.lhs.false167:                                 ; preds = %if.end158
  %119 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3957
  %erd_size168 = getelementptr inbounds %struct.zip, %struct.zip* %119, i32 0, i32 43, !dbg !3958
  %120 = load i32, i32* %erd_size168, align 8, !dbg !3958
  %121 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3959
  %v_size169 = getelementptr inbounds %struct.zip, %struct.zip* %121, i32 0, i32 44, !dbg !3960
  %122 = load i32, i32* %v_size169, align 4, !dbg !3960
  %add170 = add i32 %120, %122, !dbg !3961
  %add171 = add i32 %add170, 16, !dbg !3962
  %123 = load i32, i32* %remaining_size, align 4, !dbg !3963
  %cmp172 = icmp ugt i32 %add171, %123, !dbg !3964
  br i1 %cmp172, label %if.then184, label %lor.lhs.false174, !dbg !3965

lor.lhs.false174:                                 ; preds = %lor.lhs.false167
  %124 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3966
  %erd_size175 = getelementptr inbounds %struct.zip, %struct.zip* %124, i32 0, i32 43, !dbg !3967
  %125 = load i32, i32* %erd_size175, align 8, !dbg !3967
  %126 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3968
  %v_size176 = getelementptr inbounds %struct.zip, %struct.zip* %126, i32 0, i32 44, !dbg !3969
  %127 = load i32, i32* %v_size176, align 4, !dbg !3969
  %add177 = add i32 %125, %127, !dbg !3970
  %add178 = add i32 %add177, 16, !dbg !3971
  %128 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3972
  %erd_size179 = getelementptr inbounds %struct.zip, %struct.zip* %128, i32 0, i32 43, !dbg !3973
  %129 = load i32, i32* %erd_size179, align 8, !dbg !3973
  %130 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3974
  %v_size180 = getelementptr inbounds %struct.zip, %struct.zip* %130, i32 0, i32 44, !dbg !3975
  %131 = load i32, i32* %v_size180, align 4, !dbg !3975
  %add181 = add i32 %129, %131, !dbg !3976
  %cmp182 = icmp ult i32 %add178, %add181, !dbg !3977
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !3978

if.then184:                                       ; preds = %lor.lhs.false174, %lor.lhs.false167, %if.end158
  br label %corrupted, !dbg !3979

if.end185:                                        ; preds = %lor.lhs.false174
  %132 = load i32, i32* %ts, align 4, !dbg !3980
  %133 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3982
  %v_size186 = getelementptr inbounds %struct.zip, %struct.zip* %133, i32 0, i32 44, !dbg !3983
  %134 = load i32, i32* %v_size186, align 4, !dbg !3983
  %cmp187 = icmp ult i32 %132, %134, !dbg !3984
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !3985

if.then189:                                       ; preds = %if.end185
  %135 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3986
  %v_data = getelementptr inbounds %struct.zip, %struct.zip* %135, i32 0, i32 48, !dbg !3988
  %136 = load i8*, i8** %v_data, align 8, !dbg !3988
  call void @free(i8* %136) #8, !dbg !3989
  %137 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3990
  %v_data190 = getelementptr inbounds %struct.zip, %struct.zip* %137, i32 0, i32 48, !dbg !3991
  store i8* null, i8** %v_data190, align 8, !dbg !3992
  br label %if.end191, !dbg !3993

if.end191:                                        ; preds = %if.then189, %if.end185
  %138 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3994
  %139 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !3995
  %v_size192 = getelementptr inbounds %struct.zip, %struct.zip* %139, i32 0, i32 44, !dbg !3996
  %140 = load i32, i32* %v_size192, align 4, !dbg !3996
  %conv193 = zext i32 %140 to i64, !dbg !3995
  %call194 = call i8* @__archive_read_ahead(%struct.archive_read* %138, i64 %conv193, i64* null), !dbg !3997
  store i8* %call194, i8** %p, align 8, !dbg !3998
  %141 = load i8*, i8** %p, align 8, !dbg !3999
  %cmp195 = icmp eq i8* %141, null, !dbg !4001
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !4002

if.then197:                                       ; preds = %if.end191
  br label %truncated, !dbg !4003

if.end198:                                        ; preds = %if.end191
  %142 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4004
  %v_data199 = getelementptr inbounds %struct.zip, %struct.zip* %142, i32 0, i32 48, !dbg !4006
  %143 = load i8*, i8** %v_data199, align 8, !dbg !4006
  %cmp200 = icmp eq i8* %143, null, !dbg !4007
  br i1 %cmp200, label %if.then202, label %if.end212, !dbg !4008

if.then202:                                       ; preds = %if.end198
  %144 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4009
  %v_size203 = getelementptr inbounds %struct.zip, %struct.zip* %144, i32 0, i32 44, !dbg !4011
  %145 = load i32, i32* %v_size203, align 4, !dbg !4011
  %conv204 = zext i32 %145 to i64, !dbg !4009
  %call205 = call noalias i8* @malloc(i64 %conv204) #8, !dbg !4012
  %146 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4013
  %v_data206 = getelementptr inbounds %struct.zip, %struct.zip* %146, i32 0, i32 48, !dbg !4014
  store i8* %call205, i8** %v_data206, align 8, !dbg !4015
  %147 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4016
  %v_data207 = getelementptr inbounds %struct.zip, %struct.zip* %147, i32 0, i32 48, !dbg !4018
  %148 = load i8*, i8** %v_data207, align 8, !dbg !4018
  %cmp208 = icmp eq i8* %148, null, !dbg !4019
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !4020

if.then210:                                       ; preds = %if.then202
  br label %nomem, !dbg !4021

if.end211:                                        ; preds = %if.then202
  br label %if.end212, !dbg !4022

if.end212:                                        ; preds = %if.end211, %if.end198
  %149 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4023
  %v_data213 = getelementptr inbounds %struct.zip, %struct.zip* %149, i32 0, i32 48, !dbg !4024
  %150 = load i8*, i8** %v_data213, align 8, !dbg !4024
  %151 = load i8*, i8** %p, align 8, !dbg !4025
  %152 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4026
  %v_size214 = getelementptr inbounds %struct.zip, %struct.zip* %152, i32 0, i32 44, !dbg !4027
  %153 = load i32, i32* %v_size214, align 4, !dbg !4027
  %conv215 = zext i32 %153 to i64, !dbg !4026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 %conv215, i32 1, i1 false), !dbg !4028
  %154 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4029
  %155 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4030
  %v_size216 = getelementptr inbounds %struct.zip, %struct.zip* %155, i32 0, i32 44, !dbg !4031
  %156 = load i32, i32* %v_size216, align 4, !dbg !4031
  %conv217 = zext i32 %156 to i64, !dbg !4030
  %call218 = call i64 @__archive_read_consume(%struct.archive_read* %154, i64 %conv217), !dbg !4032
  %157 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4033
  %call219 = call i8* @__archive_read_ahead(%struct.archive_read* %157, i64 4, i64* null), !dbg !4034
  store i8* %call219, i8** %p, align 8, !dbg !4035
  %158 = load i8*, i8** %p, align 8, !dbg !4036
  %cmp220 = icmp eq i8* %158, null, !dbg !4038
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !4039

if.then222:                                       ; preds = %if.end212
  br label %truncated, !dbg !4040

if.end223:                                        ; preds = %if.end212
  %159 = load i8*, i8** %p, align 8, !dbg !4041
  %call224 = call i32 @archive_le32dec(i8* %159), !dbg !4042
  %160 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4043
  %v_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %160, i32 0, i32 45, !dbg !4044
  store i32 %call224, i32* %v_crc32, align 8, !dbg !4045
  %161 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4046
  %call225 = call i64 @__archive_read_consume(%struct.archive_read* %161, i64 4), !dbg !4047
  %162 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4048
  %archive226 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %162, i32 0, i32 0, !dbg !4049
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive226, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i32 0, i32 0)), !dbg !4050
  store i32 -25, i32* %retval, align 4, !dbg !4051
  br label %return, !dbg !4051

truncated:                                        ; preds = %if.then222, %if.then197, %if.then157, %if.then146, %if.then121, %if.then40, %if.then15, %if.then
  %163 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4052
  %archive227 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %163, i32 0, i32 0, !dbg !4053
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive227, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0)), !dbg !4054
  store i32 -30, i32* %retval, align 4, !dbg !4055
  br label %return, !dbg !4055

corrupted:                                        ; preds = %if.then184, %if.then151, %if.then108, %if.then47
  %164 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4056
  %archive228 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %164, i32 0, i32 0, !dbg !4057
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive228, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i32 0, i32 0)), !dbg !4058
  store i32 -30, i32* %retval, align 4, !dbg !4059
  br label %return, !dbg !4059

nomem:                                            ; preds = %if.then210, %if.then134, %if.then28
  %165 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4060
  %archive229 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %165, i32 0, i32 0, !dbg !4061
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive229, i32 12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i32 0, i32 0)), !dbg !4062
  store i32 -30, i32* %retval, align 4, !dbg !4063
  br label %return, !dbg !4063

return:                                           ; preds = %nomem, %corrupted, %truncated, %if.end223, %if.then85, %sw.default72, %sw.default, %if.then53
  %166 = load i32, i32* %retval, align 4, !dbg !4064
  ret i32 %166, !dbg !4064
}

; Function Attrs: nounwind uwtable
define internal i32 @init_WinZip_AES_decryption(%struct.archive_read* %a) #0 !dbg !507 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %p = alloca i8*, align 8
  %pv = alloca i8*, align 8
  %key_len = alloca i64, align 8
  %salt_len = alloca i64, align 8
  %derived_key = alloca [66 x i8], align 16
  %retry = alloca i32, align 4
  %r = alloca i32, align 4
  %passphrase = alloca i8*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4065, metadata !578), !dbg !4066
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !4067, metadata !578), !dbg !4068
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4069
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !4070
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4070
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !4071
  %2 = load i8*, i8** %data, align 8, !dbg !4071
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !4072
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !4068
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4073, metadata !578), !dbg !4074
  call void @llvm.dbg.declare(metadata i8** %pv, metadata !4075, metadata !578), !dbg !4076
  call void @llvm.dbg.declare(metadata i64* %key_len, metadata !4077, metadata !578), !dbg !4078
  call void @llvm.dbg.declare(metadata i64* %salt_len, metadata !4079, metadata !578), !dbg !4080
  call void @llvm.dbg.declare(metadata [66 x i8]* %derived_key, metadata !4081, metadata !578), !dbg !4085
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !4086, metadata !578), !dbg !4087
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4088, metadata !578), !dbg !4089
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4090
  %cctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 36, !dbg !4092
  %5 = load i8, i8* %cctx_valid, align 4, !dbg !4092
  %conv = sext i8 %5 to i32, !dbg !4090
  %tobool = icmp ne i32 %conv, 0, !dbg !4090
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4093

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4094
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 38, !dbg !4096
  %7 = load i8, i8* %hctx_valid, align 4, !dbg !4096
  %conv1 = sext i8 %7 to i32, !dbg !4094
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !4094
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4097

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4098
  br label %return, !dbg !4098

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4099
  %entry3 = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 9, !dbg !4100
  %9 = load %struct.zip_entry*, %struct.zip_entry** %entry3, align 8, !dbg !4100
  %aes_extra = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %9, i32 0, i32 18, !dbg !4101
  %strength = getelementptr inbounds %struct.anon.0, %struct.anon.0* %aes_extra, i32 0, i32 1, !dbg !4102
  %10 = load i32, i32* %strength, align 4, !dbg !4102
  switch i32 %10, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb4
    i32 3, label %sw.bb5
  ], !dbg !4103

sw.bb:                                            ; preds = %if.end
  store i64 8, i64* %salt_len, align 8, !dbg !4104
  store i64 16, i64* %key_len, align 8, !dbg !4106
  br label %sw.epilog, !dbg !4107

sw.bb4:                                           ; preds = %if.end
  store i64 12, i64* %salt_len, align 8, !dbg !4108
  store i64 24, i64* %key_len, align 8, !dbg !4109
  br label %sw.epilog, !dbg !4110

sw.bb5:                                           ; preds = %if.end
  store i64 16, i64* %salt_len, align 8, !dbg !4111
  store i64 32, i64* %key_len, align 8, !dbg !4112
  br label %sw.epilog, !dbg !4113

sw.default:                                       ; preds = %if.end
  br label %corrupted, !dbg !4114

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4115
  %12 = load i64, i64* %salt_len, align 8, !dbg !4116
  %add = add i64 %12, 2, !dbg !4117
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %11, i64 %add, i64* null), !dbg !4118
  store i8* %call, i8** %p, align 8, !dbg !4119
  %13 = load i8*, i8** %p, align 8, !dbg !4120
  %cmp = icmp eq i8* %13, null, !dbg !4122
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !4123

if.then7:                                         ; preds = %sw.epilog
  br label %truncated, !dbg !4124

if.end8:                                          ; preds = %sw.epilog
  store i32 0, i32* %retry, align 4, !dbg !4125
  br label %for.cond, !dbg !4127

for.cond:                                         ; preds = %for.inc, %if.end8
  call void @llvm.dbg.declare(metadata i8** %passphrase, metadata !4128, metadata !578), !dbg !4131
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4132
  %call9 = call i8* @__archive_read_next_passphrase(%struct.archive_read* %14), !dbg !4133
  store i8* %call9, i8** %passphrase, align 8, !dbg !4134
  %15 = load i8*, i8** %passphrase, align 8, !dbg !4135
  %cmp10 = icmp eq i8* %15, null, !dbg !4137
  br i1 %cmp10, label %if.then12, label %if.end15, !dbg !4138

if.then12:                                        ; preds = %for.cond
  %16 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4139
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %16, i32 0, i32 0, !dbg !4141
  %17 = load i32, i32* %retry, align 4, !dbg !4142
  %cmp13 = icmp sgt i32 %17, 0, !dbg !4143
  %cond = select i1 %cmp13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i32 0, i32 0), !dbg !4144
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* %cond), !dbg !4145
  store i32 -25, i32* %retval, align 4, !dbg !4146
  br label %return, !dbg !4146

if.end15:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %derived_key, i32 0, i32 0, !dbg !4147
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 66, i32 16, i1 false), !dbg !4147
  %18 = load i32 (i8*, i64, i8*, i64, i32, i8*, i64)*, i32 (i8*, i64, i8*, i64, i32, i8*, i64)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 0), align 8, !dbg !4148
  %19 = load i8*, i8** %passphrase, align 8, !dbg !4148
  %20 = load i8*, i8** %passphrase, align 8, !dbg !4148
  %call16 = call i64 @strlen(i8* %20) #9, !dbg !4148
  %21 = load i8*, i8** %p, align 8, !dbg !4148
  %22 = load i64, i64* %salt_len, align 8, !dbg !4148
  %arraydecay17 = getelementptr inbounds [66 x i8], [66 x i8]* %derived_key, i32 0, i32 0, !dbg !4148
  %23 = load i64, i64* %key_len, align 8, !dbg !4148
  %mul = mul i64 %23, 2, !dbg !4148
  %add18 = add i64 %mul, 2, !dbg !4148
  %call19 = call i32 %18(i8* %19, i64 %call16, i8* %21, i64 %22, i32 1000, i8* %arraydecay17, i64 %add18), !dbg !4149
  store i32 %call19, i32* %r, align 4, !dbg !4151
  %24 = load i32, i32* %r, align 4, !dbg !4152
  %cmp20 = icmp ne i32 %24, 0, !dbg !4154
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !4155

if.then22:                                        ; preds = %if.end15
  %25 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4156
  %archive23 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %25, i32 0, i32 0, !dbg !4158
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive23, i32 -1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.64, i32 0, i32 0)), !dbg !4159
  store i32 -25, i32* %retval, align 4, !dbg !4160
  br label %return, !dbg !4160

if.end24:                                         ; preds = %if.end15
  %26 = load i8*, i8** %p, align 8, !dbg !4161
  %27 = load i64, i64* %salt_len, align 8, !dbg !4162
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !4163
  store i8* %add.ptr, i8** %pv, align 8, !dbg !4164
  %28 = load i64, i64* %key_len, align 8, !dbg !4165
  %mul25 = mul i64 %28, 2, !dbg !4167
  %arrayidx = getelementptr inbounds [66 x i8], [66 x i8]* %derived_key, i64 0, i64 %mul25, !dbg !4168
  %29 = load i8, i8* %arrayidx, align 1, !dbg !4168
  %conv26 = zext i8 %29 to i32, !dbg !4168
  %30 = load i8*, i8** %pv, align 8, !dbg !4169
  %arrayidx27 = getelementptr inbounds i8, i8* %30, i64 0, !dbg !4169
  %31 = load i8, i8* %arrayidx27, align 1, !dbg !4169
  %conv28 = zext i8 %31 to i32, !dbg !4169
  %cmp29 = icmp eq i32 %conv26, %conv28, !dbg !4170
  br i1 %cmp29, label %land.lhs.true, label %if.end40, !dbg !4171

land.lhs.true:                                    ; preds = %if.end24
  %32 = load i64, i64* %key_len, align 8, !dbg !4172
  %mul31 = mul i64 %32, 2, !dbg !4173
  %add32 = add i64 %mul31, 1, !dbg !4174
  %arrayidx33 = getelementptr inbounds [66 x i8], [66 x i8]* %derived_key, i64 0, i64 %add32, !dbg !4175
  %33 = load i8, i8* %arrayidx33, align 1, !dbg !4175
  %conv34 = zext i8 %33 to i32, !dbg !4175
  %34 = load i8*, i8** %pv, align 8, !dbg !4176
  %arrayidx35 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !4176
  %35 = load i8, i8* %arrayidx35, align 1, !dbg !4176
  %conv36 = zext i8 %35 to i32, !dbg !4176
  %cmp37 = icmp eq i32 %conv34, %conv36, !dbg !4177
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4178

if.then39:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !4179

if.end40:                                         ; preds = %land.lhs.true, %if.end24
  %36 = load i32, i32* %retry, align 4, !dbg !4180
  %cmp41 = icmp sgt i32 %36, 10000, !dbg !4182
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !4183

if.then43:                                        ; preds = %if.end40
  %37 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4184
  %archive44 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %37, i32 0, i32 0, !dbg !4186
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive44, i32 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.65, i32 0, i32 0)), !dbg !4187
  store i32 -25, i32* %retval, align 4, !dbg !4188
  br label %return, !dbg !4188

if.end45:                                         ; preds = %if.end40
  br label %for.inc, !dbg !4189

for.inc:                                          ; preds = %if.end45
  %38 = load i32, i32* %retry, align 4, !dbg !4190
  %inc = add nsw i32 %38, 1, !dbg !4190
  store i32 %inc, i32* %retry, align 4, !dbg !4190
  br label %for.cond, !dbg !4192

for.end:                                          ; preds = %if.then39
  %39 = load i32 (i32*, i8*, i64)*, i32 (i32*, i8*, i64)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 1), align 8, !dbg !4193
  %40 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4193
  %cctx = getelementptr inbounds %struct.zip, %struct.zip* %40, i32 0, i32 35, !dbg !4193
  %arraydecay46 = getelementptr inbounds [66 x i8], [66 x i8]* %derived_key, i32 0, i32 0, !dbg !4193
  %41 = load i64, i64* %key_len, align 8, !dbg !4193
  %call47 = call i32 %39(i32* %cctx, i8* %arraydecay46, i64 %41), !dbg !4193
  store i32 %call47, i32* %r, align 4, !dbg !4194
  %42 = load i32, i32* %r, align 4, !dbg !4195
  %cmp48 = icmp ne i32 %42, 0, !dbg !4197
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !4198

if.then50:                                        ; preds = %for.end
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4199
  %archive51 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %43, i32 0, i32 0, !dbg !4201
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive51, i32 -1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.64, i32 0, i32 0)), !dbg !4202
  store i32 -25, i32* %retval, align 4, !dbg !4203
  br label %return, !dbg !4203

if.end52:                                         ; preds = %for.end
  %44 = load i32 (i32*, i8*, i64)*, i32 (i32*, i8*, i64)** getelementptr inbounds (%struct.archive_hmac, %struct.archive_hmac* @__archive_hmac, i32 0, i32 0), align 8, !dbg !4204
  %45 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4204
  %hctx = getelementptr inbounds %struct.zip, %struct.zip* %45, i32 0, i32 37, !dbg !4204
  %arraydecay53 = getelementptr inbounds [66 x i8], [66 x i8]* %derived_key, i32 0, i32 0, !dbg !4204
  %46 = load i64, i64* %key_len, align 8, !dbg !4204
  %add.ptr54 = getelementptr inbounds i8, i8* %arraydecay53, i64 %46, !dbg !4204
  %47 = load i64, i64* %key_len, align 8, !dbg !4204
  %call55 = call i32 %44(i32* %hctx, i8* %add.ptr54, i64 %47), !dbg !4204
  store i32 %call55, i32* %r, align 4, !dbg !4205
  %48 = load i32, i32* %r, align 4, !dbg !4206
  %cmp56 = icmp ne i32 %48, 0, !dbg !4208
  br i1 %cmp56, label %if.then58, label %if.end62, !dbg !4209

if.then58:                                        ; preds = %if.end52
  %49 = load i32 (i32*)*, i32 (i32*)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 3), align 8, !dbg !4210
  %50 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4210
  %cctx59 = getelementptr inbounds %struct.zip, %struct.zip* %50, i32 0, i32 35, !dbg !4210
  %call60 = call i32 %49(i32* %cctx59), !dbg !4210
  %51 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4212
  %archive61 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %51, i32 0, i32 0, !dbg !4213
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive61, i32 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.66, i32 0, i32 0)), !dbg !4214
  store i32 -25, i32* %retval, align 4, !dbg !4215
  br label %return, !dbg !4215

if.end62:                                         ; preds = %if.end52
  %52 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4216
  %hctx_valid63 = getelementptr inbounds %struct.zip, %struct.zip* %52, i32 0, i32 38, !dbg !4217
  store i8 1, i8* %hctx_valid63, align 4, !dbg !4218
  %53 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4219
  %cctx_valid64 = getelementptr inbounds %struct.zip, %struct.zip* %53, i32 0, i32 36, !dbg !4220
  store i8 1, i8* %cctx_valid64, align 4, !dbg !4221
  %54 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4222
  %55 = load i64, i64* %salt_len, align 8, !dbg !4223
  %add65 = add i64 %55, 2, !dbg !4224
  %call66 = call i64 @__archive_read_consume(%struct.archive_read* %54, i64 %add65), !dbg !4225
  %56 = load i64, i64* %salt_len, align 8, !dbg !4226
  %add67 = add i64 %56, 2, !dbg !4227
  %add68 = add i64 %add67, 10, !dbg !4228
  %57 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4229
  %entry_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %57, i32 0, i32 10, !dbg !4230
  %58 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !4231
  %sub = sub i64 %58, %add68, !dbg !4231
  store i64 %sub, i64* %entry_bytes_remaining, align 8, !dbg !4231
  %59 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4232
  %entry69 = getelementptr inbounds %struct.zip, %struct.zip* %59, i32 0, i32 9, !dbg !4234
  %60 = load %struct.zip_entry*, %struct.zip_entry** %entry69, align 8, !dbg !4234
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %60, i32 0, i32 13, !dbg !4235
  %61 = load i16, i16* %zip_flags, align 2, !dbg !4235
  %conv70 = zext i16 %61 to i32, !dbg !4232
  %and = and i32 %conv70, 8, !dbg !4236
  %cmp71 = icmp eq i32 0, %and, !dbg !4237
  br i1 %cmp71, label %land.lhs.true73, label %if.end78, !dbg !4238

land.lhs.true73:                                  ; preds = %if.end62
  %62 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4239
  %entry_bytes_remaining74 = getelementptr inbounds %struct.zip, %struct.zip* %62, i32 0, i32 10, !dbg !4241
  %63 = load i64, i64* %entry_bytes_remaining74, align 8, !dbg !4241
  %cmp75 = icmp slt i64 %63, 0, !dbg !4242
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !4243

if.then77:                                        ; preds = %land.lhs.true73
  br label %corrupted, !dbg !4245

if.end78:                                         ; preds = %land.lhs.true73, %if.end62
  %64 = load i64, i64* %salt_len, align 8, !dbg !4246
  %add79 = add i64 %64, 2, !dbg !4247
  %add80 = add i64 %add79, 10, !dbg !4248
  %65 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4249
  %entry_compressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %65, i32 0, i32 11, !dbg !4250
  %66 = load i64, i64* %entry_compressed_bytes_read, align 8, !dbg !4251
  %add81 = add i64 %66, %add80, !dbg !4251
  store i64 %add81, i64* %entry_compressed_bytes_read, align 8, !dbg !4251
  %67 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4252
  %decrypted_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %67, i32 0, i32 31, !dbg !4253
  store i64 0, i64* %decrypted_bytes_remaining, align 8, !dbg !4254
  %68 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4255
  %entry82 = getelementptr inbounds %struct.zip, %struct.zip* %68, i32 0, i32 9, !dbg !4256
  %69 = load %struct.zip_entry*, %struct.zip_entry** %entry82, align 8, !dbg !4256
  %aes_extra83 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %69, i32 0, i32 18, !dbg !4257
  %compression = getelementptr inbounds %struct.anon.0, %struct.anon.0* %aes_extra83, i32 0, i32 2, !dbg !4258
  %70 = load i8, i8* %compression, align 4, !dbg !4258
  %71 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4259
  %entry84 = getelementptr inbounds %struct.zip, %struct.zip* %71, i32 0, i32 9, !dbg !4260
  %72 = load %struct.zip_entry*, %struct.zip_entry** %entry84, align 8, !dbg !4260
  %compression85 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %72, i32 0, i32 14, !dbg !4261
  store i8 %70, i8* %compression85, align 8, !dbg !4262
  %73 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4263
  %call86 = call i32 @zip_alloc_decryption_buffer(%struct.archive_read* %73), !dbg !4264
  store i32 %call86, i32* %retval, align 4, !dbg !4265
  br label %return, !dbg !4265

truncated:                                        ; preds = %if.then7
  %74 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4266
  %archive87 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %74, i32 0, i32 0, !dbg !4267
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive87, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0)), !dbg !4268
  store i32 -30, i32* %retval, align 4, !dbg !4269
  br label %return, !dbg !4269

corrupted:                                        ; preds = %if.then77, %sw.default
  %75 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4270
  %archive88 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %75, i32 0, i32 0, !dbg !4271
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive88, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i32 0, i32 0)), !dbg !4272
  store i32 -30, i32* %retval, align 4, !dbg !4273
  br label %return, !dbg !4273

return:                                           ; preds = %corrupted, %truncated, %if.end78, %if.then58, %if.then50, %if.then43, %if.then22, %if.then12, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !4274
  ret i32 %76, !dbg !4274
}

; Function Attrs: nounwind uwtable
define internal i32 @init_traditional_PKWARE_decryption(%struct.archive_read* %a) #0 !dbg !509 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %p = alloca i8*, align 8
  %retry = alloca i32, align 4
  %r = alloca i32, align 4
  %passphrase = alloca i8*, align 8
  %crcchk = alloca i8, align 1
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4275, metadata !578), !dbg !4276
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !4277, metadata !578), !dbg !4278
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4279
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !4280
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4280
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !4281
  %2 = load i8*, i8** %data, align 8, !dbg !4281
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !4282
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !4278
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4283, metadata !578), !dbg !4284
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !4285, metadata !578), !dbg !4286
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4287, metadata !578), !dbg !4288
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4289
  %tctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 34, !dbg !4291
  %5 = load i8, i8* %tctx_valid, align 4, !dbg !4291
  %tobool = icmp ne i8 %5, 0, !dbg !4289
  br i1 %tobool, label %if.then, label %if.end, !dbg !4292

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4293
  br label %return, !dbg !4293

if.end:                                           ; preds = %entry
  %6 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4294
  %entry1 = getelementptr inbounds %struct.zip, %struct.zip* %6, i32 0, i32 9, !dbg !4296
  %7 = load %struct.zip_entry*, %struct.zip_entry** %entry1, align 8, !dbg !4296
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %7, i32 0, i32 13, !dbg !4297
  %8 = load i16, i16* %zip_flags, align 2, !dbg !4297
  %conv = zext i16 %8 to i32, !dbg !4294
  %and = and i32 %conv, 8, !dbg !4298
  %cmp = icmp eq i32 0, %and, !dbg !4299
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !4300

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4301
  %entry_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 10, !dbg !4303
  %10 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !4303
  %cmp3 = icmp slt i64 %10, 12, !dbg !4304
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !4305

if.then5:                                         ; preds = %land.lhs.true
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4307
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !4309
  %12 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4310
  %entry_bytes_remaining6 = getelementptr inbounds %struct.zip, %struct.zip* %12, i32 0, i32 10, !dbg !4311
  %13 = load i64, i64* %entry_bytes_remaining6, align 8, !dbg !4311
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.67, i32 0, i32 0), i64 %13), !dbg !4312
  store i32 -30, i32* %retval, align 4, !dbg !4313
  br label %return, !dbg !4313

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4314
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %14, i64 12, i64* null), !dbg !4315
  store i8* %call, i8** %p, align 8, !dbg !4316
  %15 = load i8*, i8** %p, align 8, !dbg !4317
  %cmp8 = icmp eq i8* %15, null, !dbg !4319
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !4320

if.then10:                                        ; preds = %if.end7
  %16 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4321
  %archive11 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %16, i32 0, i32 0, !dbg !4323
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive11, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0)), !dbg !4324
  store i32 -30, i32* %retval, align 4, !dbg !4325
  br label %return, !dbg !4325

if.end12:                                         ; preds = %if.end7
  store i32 0, i32* %retry, align 4, !dbg !4326
  br label %for.cond, !dbg !4328

for.cond:                                         ; preds = %for.inc, %if.end12
  call void @llvm.dbg.declare(metadata i8** %passphrase, metadata !4329, metadata !578), !dbg !4332
  call void @llvm.dbg.declare(metadata i8* %crcchk, metadata !4333, metadata !578), !dbg !4334
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4335
  %call13 = call i8* @__archive_read_next_passphrase(%struct.archive_read* %17), !dbg !4336
  store i8* %call13, i8** %passphrase, align 8, !dbg !4337
  %18 = load i8*, i8** %passphrase, align 8, !dbg !4338
  %cmp14 = icmp eq i8* %18, null, !dbg !4340
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !4341

if.then16:                                        ; preds = %for.cond
  %19 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4342
  %archive17 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %19, i32 0, i32 0, !dbg !4344
  %20 = load i32, i32* %retry, align 4, !dbg !4345
  %cmp18 = icmp sgt i32 %20, 0, !dbg !4346
  %cond = select i1 %cmp18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i32 0, i32 0), !dbg !4347
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive17, i32 -1, i8* %cond), !dbg !4348
  store i32 -25, i32* %retval, align 4, !dbg !4349
  br label %return, !dbg !4349

if.end20:                                         ; preds = %for.cond
  %21 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4350
  %tctx = getelementptr inbounds %struct.zip, %struct.zip* %21, i32 0, i32 33, !dbg !4351
  %22 = load i8*, i8** %passphrase, align 8, !dbg !4352
  %23 = load i8*, i8** %passphrase, align 8, !dbg !4353
  %call21 = call i64 @strlen(i8* %23) #9, !dbg !4354
  %24 = load i8*, i8** %p, align 8, !dbg !4355
  %call22 = call i32 @trad_enc_init(%struct.trad_enc_ctx* %tctx, i8* %22, i64 %call21, i8* %24, i64 12, i8* %crcchk), !dbg !4356
  store i32 %call22, i32* %r, align 4, !dbg !4358
  %25 = load i32, i32* %r, align 4, !dbg !4359
  %cmp23 = icmp eq i32 %25, 0, !dbg !4361
  br i1 %cmp23, label %land.lhs.true25, label %if.end32, !dbg !4362

land.lhs.true25:                                  ; preds = %if.end20
  %26 = load i8, i8* %crcchk, align 1, !dbg !4363
  %conv26 = zext i8 %26 to i32, !dbg !4363
  %27 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4365
  %entry27 = getelementptr inbounds %struct.zip, %struct.zip* %27, i32 0, i32 9, !dbg !4366
  %28 = load %struct.zip_entry*, %struct.zip_entry** %entry27, align 8, !dbg !4366
  %decdat = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %28, i32 0, i32 17, !dbg !4367
  %29 = load i8, i8* %decdat, align 1, !dbg !4367
  %conv28 = zext i8 %29 to i32, !dbg !4365
  %cmp29 = icmp eq i32 %conv26, %conv28, !dbg !4368
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4369

if.then31:                                        ; preds = %land.lhs.true25
  br label %for.end, !dbg !4370

if.end32:                                         ; preds = %land.lhs.true25, %if.end20
  %30 = load i32, i32* %retry, align 4, !dbg !4371
  %cmp33 = icmp sgt i32 %30, 10000, !dbg !4373
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !4374

if.then35:                                        ; preds = %if.end32
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4375
  %archive36 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %31, i32 0, i32 0, !dbg !4377
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive36, i32 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.65, i32 0, i32 0)), !dbg !4378
  store i32 -25, i32* %retval, align 4, !dbg !4379
  br label %return, !dbg !4379

if.end37:                                         ; preds = %if.end32
  br label %for.inc, !dbg !4380

for.inc:                                          ; preds = %if.end37
  %32 = load i32, i32* %retry, align 4, !dbg !4381
  %inc = add nsw i32 %32, 1, !dbg !4381
  store i32 %inc, i32* %retry, align 4, !dbg !4381
  br label %for.cond, !dbg !4383

for.end:                                          ; preds = %if.then31
  %33 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4384
  %call38 = call i64 @__archive_read_consume(%struct.archive_read* %33, i64 12), !dbg !4385
  %34 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4386
  %tctx_valid39 = getelementptr inbounds %struct.zip, %struct.zip* %34, i32 0, i32 34, !dbg !4387
  store i8 1, i8* %tctx_valid39, align 4, !dbg !4388
  %35 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4389
  %entry40 = getelementptr inbounds %struct.zip, %struct.zip* %35, i32 0, i32 9, !dbg !4391
  %36 = load %struct.zip_entry*, %struct.zip_entry** %entry40, align 8, !dbg !4391
  %zip_flags41 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %36, i32 0, i32 13, !dbg !4392
  %37 = load i16, i16* %zip_flags41, align 2, !dbg !4392
  %conv42 = zext i16 %37 to i32, !dbg !4389
  %and43 = and i32 %conv42, 8, !dbg !4393
  %cmp44 = icmp eq i32 0, %and43, !dbg !4394
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !4395

if.then46:                                        ; preds = %for.end
  %38 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4396
  %entry_bytes_remaining47 = getelementptr inbounds %struct.zip, %struct.zip* %38, i32 0, i32 10, !dbg !4398
  %39 = load i64, i64* %entry_bytes_remaining47, align 8, !dbg !4399
  %sub = sub nsw i64 %39, 12, !dbg !4399
  store i64 %sub, i64* %entry_bytes_remaining47, align 8, !dbg !4399
  br label %if.end48, !dbg !4400

if.end48:                                         ; preds = %if.then46, %for.end
  %40 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4401
  %entry_compressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %40, i32 0, i32 11, !dbg !4402
  %41 = load i64, i64* %entry_compressed_bytes_read, align 8, !dbg !4403
  %add = add nsw i64 %41, 12, !dbg !4403
  store i64 %add, i64* %entry_compressed_bytes_read, align 8, !dbg !4403
  %42 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4404
  %decrypted_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %42, i32 0, i32 31, !dbg !4405
  store i64 0, i64* %decrypted_bytes_remaining, align 8, !dbg !4406
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4407
  %call49 = call i32 @zip_alloc_decryption_buffer(%struct.archive_read* %43), !dbg !4408
  store i32 %call49, i32* %retval, align 4, !dbg !4409
  br label %return, !dbg !4409

return:                                           ; preds = %if.end48, %if.then35, %if.then16, %if.then10, %if.then5, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !4410
  ret i32 %44, !dbg !4410
}

; Function Attrs: nounwind uwtable
define internal i32 @zip_read_data_none(%struct.archive_read* %a, i8** %_buff, i64* %size, i64* %offset) #0 !dbg !523 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %_buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %zip = alloca %struct.zip*, align 8
  %buff = alloca i8*, align 8
  %bytes_avail = alloca i64, align 8
  %r = alloca i32, align 4
  %p = alloca i8*, align 8
  %grabbing_bytes = alloca i64, align 8
  %compressed = alloca i64, align 8
  %uncompressed = alloca i64, align 8
  %dec_size = alloca i64, align 8
  %dsize = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4411, metadata !578), !dbg !4412
  store i8** %_buff, i8*** %_buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_buff.addr, metadata !4413, metadata !578), !dbg !4414
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !4415, metadata !578), !dbg !4416
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !4417, metadata !578), !dbg !4418
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !4419, metadata !578), !dbg !4420
  call void @llvm.dbg.declare(metadata i8** %buff, metadata !4421, metadata !578), !dbg !4422
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !4423, metadata !578), !dbg !4424
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4425, metadata !578), !dbg !4426
  %0 = load i64*, i64** %offset.addr, align 8, !dbg !4427
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4428
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 13, !dbg !4429
  %2 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4429
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %2, i32 0, i32 0, !dbg !4430
  %3 = load i8*, i8** %data, align 8, !dbg !4430
  %4 = bitcast i8* %3 to %struct.zip*, !dbg !4431
  store %struct.zip* %4, %struct.zip** %zip, align 8, !dbg !4432
  %5 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4433
  %entry1 = getelementptr inbounds %struct.zip, %struct.zip* %5, i32 0, i32 9, !dbg !4435
  %6 = load %struct.zip_entry*, %struct.zip_entry** %entry1, align 8, !dbg !4435
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %6, i32 0, i32 13, !dbg !4436
  %7 = load i16, i16* %zip_flags, align 2, !dbg !4436
  %conv = zext i16 %7 to i32, !dbg !4433
  %and = and i32 %conv, 8, !dbg !4437
  %tobool = icmp ne i32 %and, 0, !dbg !4437
  br i1 %tobool, label %if.then, label %if.else149, !dbg !4438

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4439, metadata !578), !dbg !4441
  call void @llvm.dbg.declare(metadata i64* %grabbing_bytes, metadata !4442, metadata !578), !dbg !4443
  store i64 24, i64* %grabbing_bytes, align 8, !dbg !4443
  %8 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4444
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 38, !dbg !4446
  %9 = load i8, i8* %hctx_valid, align 4, !dbg !4446
  %tobool2 = icmp ne i8 %9, 0, !dbg !4444
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4447

if.then3:                                         ; preds = %if.then
  %10 = load i64, i64* %grabbing_bytes, align 8, !dbg !4448
  %add = add nsw i64 %10, 10, !dbg !4448
  store i64 %add, i64* %grabbing_bytes, align 8, !dbg !4448
  br label %if.end, !dbg !4449

if.end:                                           ; preds = %if.then3, %if.then
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4450
  %12 = load i64, i64* %grabbing_bytes, align 8, !dbg !4451
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %11, i64 %12, i64* %bytes_avail), !dbg !4452
  store i8* %call, i8** %buff, align 8, !dbg !4453
  %13 = load i64, i64* %bytes_avail, align 8, !dbg !4454
  %14 = load i64, i64* %grabbing_bytes, align 8, !dbg !4456
  %cmp = icmp slt i64 %13, %14, !dbg !4457
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !4458

if.then5:                                         ; preds = %if.end
  %15 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4459
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %15, i32 0, i32 0, !dbg !4461
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0)), !dbg !4462
  store i32 -30, i32* %retval, align 4, !dbg !4463
  br label %return, !dbg !4463

if.end6:                                          ; preds = %if.end
  %16 = load i8*, i8** %buff, align 8, !dbg !4464
  store i8* %16, i8** %p, align 8, !dbg !4465
  %17 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4466
  %hctx_valid7 = getelementptr inbounds %struct.zip, %struct.zip* %17, i32 0, i32 38, !dbg !4468
  %18 = load i8, i8* %hctx_valid7, align 4, !dbg !4468
  %tobool8 = icmp ne i8 %18, 0, !dbg !4466
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !4469

if.then9:                                         ; preds = %if.end6
  %19 = load i8*, i8** %p, align 8, !dbg !4470
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 10, !dbg !4470
  store i8* %add.ptr, i8** %p, align 8, !dbg !4470
  br label %if.end10, !dbg !4471

if.end10:                                         ; preds = %if.then9, %if.end6
  %20 = load i8*, i8** %p, align 8, !dbg !4472
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 0, !dbg !4472
  %21 = load i8, i8* %arrayidx, align 1, !dbg !4472
  %conv11 = sext i8 %21 to i32, !dbg !4472
  %cmp12 = icmp eq i32 %conv11, 80, !dbg !4474
  br i1 %cmp12, label %land.lhs.true, label %if.end92, !dbg !4475

land.lhs.true:                                    ; preds = %if.end10
  %22 = load i8*, i8** %p, align 8, !dbg !4476
  %arrayidx14 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !4476
  %23 = load i8, i8* %arrayidx14, align 1, !dbg !4476
  %conv15 = sext i8 %23 to i32, !dbg !4476
  %cmp16 = icmp eq i32 %conv15, 75, !dbg !4478
  br i1 %cmp16, label %land.lhs.true18, label %if.end92, !dbg !4479

land.lhs.true18:                                  ; preds = %land.lhs.true
  %24 = load i8*, i8** %p, align 8, !dbg !4480
  %arrayidx19 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !4480
  %25 = load i8, i8* %arrayidx19, align 1, !dbg !4480
  %conv20 = sext i8 %25 to i32, !dbg !4480
  %cmp21 = icmp eq i32 %conv20, 7, !dbg !4481
  br i1 %cmp21, label %land.lhs.true23, label %if.end92, !dbg !4482

land.lhs.true23:                                  ; preds = %land.lhs.true18
  %26 = load i8*, i8** %p, align 8, !dbg !4483
  %arrayidx24 = getelementptr inbounds i8, i8* %26, i64 3, !dbg !4483
  %27 = load i8, i8* %arrayidx24, align 1, !dbg !4483
  %conv25 = sext i8 %27 to i32, !dbg !4483
  %cmp26 = icmp eq i32 %conv25, 8, !dbg !4485
  br i1 %cmp26, label %land.lhs.true28, label %if.end92, !dbg !4486

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %28 = load i8*, i8** %p, align 8, !dbg !4487
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 4, !dbg !4488
  %call30 = call i32 @archive_le32dec(i8* %add.ptr29), !dbg !4489
  %conv31 = zext i32 %call30 to i64, !dbg !4489
  %29 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4490
  %entry_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %29, i32 0, i32 13, !dbg !4491
  %30 = load i64, i64* %entry_crc32, align 8, !dbg !4491
  %cmp32 = icmp eq i64 %conv31, %30, !dbg !4492
  br i1 %cmp32, label %if.then44, label %lor.lhs.false, !dbg !4493

lor.lhs.false:                                    ; preds = %land.lhs.true28
  %31 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4494
  %ignore_crc32 = getelementptr inbounds %struct.zip, %struct.zip* %31, i32 0, i32 15, !dbg !4495
  %32 = load i8, i8* %ignore_crc32, align 8, !dbg !4495
  %conv34 = sext i8 %32 to i32, !dbg !4494
  %tobool35 = icmp ne i32 %conv34, 0, !dbg !4494
  br i1 %tobool35, label %if.then44, label %lor.lhs.false36, !dbg !4496

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %33 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4497
  %hctx_valid37 = getelementptr inbounds %struct.zip, %struct.zip* %33, i32 0, i32 38, !dbg !4498
  %34 = load i8, i8* %hctx_valid37, align 4, !dbg !4498
  %conv38 = sext i8 %34 to i32, !dbg !4497
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !4497
  br i1 %tobool39, label %land.lhs.true40, label %if.end92, !dbg !4499

land.lhs.true40:                                  ; preds = %lor.lhs.false36
  %35 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4500
  %entry41 = getelementptr inbounds %struct.zip, %struct.zip* %35, i32 0, i32 9, !dbg !4501
  %36 = load %struct.zip_entry*, %struct.zip_entry** %entry41, align 8, !dbg !4501
  %aes_extra = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %36, i32 0, i32 18, !dbg !4502
  %vendor = getelementptr inbounds %struct.anon.0, %struct.anon.0* %aes_extra, i32 0, i32 0, !dbg !4503
  %37 = load i32, i32* %vendor, align 4, !dbg !4503
  %cmp42 = icmp eq i32 %37, 2, !dbg !4504
  br i1 %cmp42, label %if.then44, label %if.end92, !dbg !4505

if.then44:                                        ; preds = %land.lhs.true40, %lor.lhs.false, %land.lhs.true28
  %38 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4507
  %entry45 = getelementptr inbounds %struct.zip, %struct.zip* %38, i32 0, i32 9, !dbg !4510
  %39 = load %struct.zip_entry*, %struct.zip_entry** %entry45, align 8, !dbg !4510
  %flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %39, i32 0, i32 16, !dbg !4511
  %40 = load i8, i8* %flags, align 2, !dbg !4511
  %conv46 = zext i8 %40 to i32, !dbg !4507
  %and47 = and i32 %conv46, 1, !dbg !4512
  %tobool48 = icmp ne i32 %and47, 0, !dbg !4512
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !4513

if.then49:                                        ; preds = %if.then44
  call void @llvm.dbg.declare(metadata i64* %compressed, metadata !4514, metadata !578), !dbg !4516
  call void @llvm.dbg.declare(metadata i64* %uncompressed, metadata !4517, metadata !578), !dbg !4518
  %41 = load i8*, i8** %p, align 8, !dbg !4519
  %add.ptr50 = getelementptr inbounds i8, i8* %41, i64 4, !dbg !4520
  %call51 = call i32 @archive_le32dec(i8* %add.ptr50), !dbg !4521
  %42 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4522
  %entry52 = getelementptr inbounds %struct.zip, %struct.zip* %42, i32 0, i32 9, !dbg !4523
  %43 = load %struct.zip_entry*, %struct.zip_entry** %entry52, align 8, !dbg !4523
  %cm_zlib_crc32 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %43, i32 0, i32 11, !dbg !4524
  store i32 %call51, i32* %cm_zlib_crc32, align 8, !dbg !4525
  %44 = load i8*, i8** %p, align 8, !dbg !4526
  %add.ptr53 = getelementptr inbounds i8, i8* %44, i64 8, !dbg !4527
  %call54 = call i64 @archive_le64dec(i8* %add.ptr53), !dbg !4528
  store i64 %call54, i64* %compressed, align 8, !dbg !4529
  %45 = load i8*, i8** %p, align 8, !dbg !4530
  %add.ptr55 = getelementptr inbounds i8, i8* %45, i64 16, !dbg !4531
  %call56 = call i64 @archive_le64dec(i8* %add.ptr55), !dbg !4532
  store i64 %call56, i64* %uncompressed, align 8, !dbg !4533
  %46 = load i64, i64* %compressed, align 8, !dbg !4534
  %cmp57 = icmp ugt i64 %46, 9223372036854775807, !dbg !4536
  br i1 %cmp57, label %if.then62, label %lor.lhs.false59, !dbg !4537

lor.lhs.false59:                                  ; preds = %if.then49
  %47 = load i64, i64* %uncompressed, align 8, !dbg !4538
  %cmp60 = icmp ugt i64 %47, 9223372036854775807, !dbg !4540
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !4541

if.then62:                                        ; preds = %lor.lhs.false59, %if.then49
  %48 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4542
  %archive63 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %48, i32 0, i32 0, !dbg !4544
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive63, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i32 0, i32 0)), !dbg !4545
  store i32 -25, i32* %retval, align 4, !dbg !4546
  br label %return, !dbg !4546

if.end64:                                         ; preds = %lor.lhs.false59
  %49 = load i64, i64* %compressed, align 8, !dbg !4547
  %50 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4548
  %entry65 = getelementptr inbounds %struct.zip, %struct.zip* %50, i32 0, i32 9, !dbg !4549
  %51 = load %struct.zip_entry*, %struct.zip_entry** %entry65, align 8, !dbg !4549
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %51, i32 0, i32 3, !dbg !4550
  store i64 %49, i64* %compressed_size, align 8, !dbg !4551
  %52 = load i64, i64* %uncompressed, align 8, !dbg !4552
  %53 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4553
  %entry66 = getelementptr inbounds %struct.zip, %struct.zip* %53, i32 0, i32 9, !dbg !4554
  %54 = load %struct.zip_entry*, %struct.zip_entry** %entry66, align 8, !dbg !4554
  %uncompressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %54, i32 0, i32 4, !dbg !4555
  store i64 %52, i64* %uncompressed_size, align 8, !dbg !4556
  %55 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4557
  %unconsumed = getelementptr inbounds %struct.zip, %struct.zip* %55, i32 0, i32 8, !dbg !4558
  store i64 24, i64* %unconsumed, align 8, !dbg !4559
  br label %if.end82, !dbg !4560

if.else:                                          ; preds = %if.then44
  %56 = load i8*, i8** %p, align 8, !dbg !4561
  %add.ptr67 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !4563
  %call68 = call i32 @archive_le32dec(i8* %add.ptr67), !dbg !4564
  %57 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4565
  %entry69 = getelementptr inbounds %struct.zip, %struct.zip* %57, i32 0, i32 9, !dbg !4566
  %58 = load %struct.zip_entry*, %struct.zip_entry** %entry69, align 8, !dbg !4566
  %cm_zlib_crc3270 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %58, i32 0, i32 11, !dbg !4567
  store i32 %call68, i32* %cm_zlib_crc3270, align 8, !dbg !4568
  %59 = load i8*, i8** %p, align 8, !dbg !4569
  %add.ptr71 = getelementptr inbounds i8, i8* %59, i64 8, !dbg !4570
  %call72 = call i32 @archive_le32dec(i8* %add.ptr71), !dbg !4571
  %conv73 = zext i32 %call72 to i64, !dbg !4571
  %60 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4572
  %entry74 = getelementptr inbounds %struct.zip, %struct.zip* %60, i32 0, i32 9, !dbg !4573
  %61 = load %struct.zip_entry*, %struct.zip_entry** %entry74, align 8, !dbg !4573
  %compressed_size75 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %61, i32 0, i32 3, !dbg !4574
  store i64 %conv73, i64* %compressed_size75, align 8, !dbg !4575
  %62 = load i8*, i8** %p, align 8, !dbg !4576
  %add.ptr76 = getelementptr inbounds i8, i8* %62, i64 12, !dbg !4577
  %call77 = call i32 @archive_le32dec(i8* %add.ptr76), !dbg !4578
  %conv78 = zext i32 %call77 to i64, !dbg !4578
  %63 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4579
  %entry79 = getelementptr inbounds %struct.zip, %struct.zip* %63, i32 0, i32 9, !dbg !4580
  %64 = load %struct.zip_entry*, %struct.zip_entry** %entry79, align 8, !dbg !4580
  %uncompressed_size80 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %64, i32 0, i32 4, !dbg !4581
  store i64 %conv78, i64* %uncompressed_size80, align 8, !dbg !4582
  %65 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4583
  %unconsumed81 = getelementptr inbounds %struct.zip, %struct.zip* %65, i32 0, i32 8, !dbg !4584
  store i64 16, i64* %unconsumed81, align 8, !dbg !4585
  br label %if.end82

if.end82:                                         ; preds = %if.else, %if.end64
  %66 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4586
  %hctx_valid83 = getelementptr inbounds %struct.zip, %struct.zip* %66, i32 0, i32 38, !dbg !4588
  %67 = load i8, i8* %hctx_valid83, align 4, !dbg !4588
  %tobool84 = icmp ne i8 %67, 0, !dbg !4586
  br i1 %tobool84, label %if.then85, label %if.end91, !dbg !4589

if.then85:                                        ; preds = %if.end82
  %68 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4590
  %69 = load i8*, i8** %buff, align 8, !dbg !4592
  %call86 = call i32 @check_authentication_code(%struct.archive_read* %68, i8* %69), !dbg !4593
  store i32 %call86, i32* %r, align 4, !dbg !4594
  %70 = load i32, i32* %r, align 4, !dbg !4595
  %cmp87 = icmp ne i32 %70, 0, !dbg !4597
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !4598

if.then89:                                        ; preds = %if.then85
  %71 = load i32, i32* %r, align 4, !dbg !4599
  store i32 %71, i32* %retval, align 4, !dbg !4600
  br label %return, !dbg !4600

if.end90:                                         ; preds = %if.then85
  br label %if.end91, !dbg !4601

if.end91:                                         ; preds = %if.end90, %if.end82
  %72 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4602
  %end_of_entry = getelementptr inbounds %struct.zip, %struct.zip* %72, i32 0, i32 17, !dbg !4603
  store i8 1, i8* %end_of_entry, align 2, !dbg !4604
  store i32 0, i32* %retval, align 4, !dbg !4605
  br label %return, !dbg !4605

if.end92:                                         ; preds = %land.lhs.true40, %lor.lhs.false36, %land.lhs.true23, %land.lhs.true18, %land.lhs.true, %if.end10
  %73 = load i8*, i8** %p, align 8, !dbg !4606
  %incdec.ptr = getelementptr inbounds i8, i8* %73, i32 1, !dbg !4606
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !4606
  br label %while.cond, !dbg !4607

while.cond:                                       ; preds = %if.end148, %if.end92
  %74 = load i8*, i8** %p, align 8, !dbg !4608
  %75 = load i8*, i8** %buff, align 8, !dbg !4610
  %76 = load i64, i64* %bytes_avail, align 8, !dbg !4611
  %add.ptr93 = getelementptr inbounds i8, i8* %75, i64 %76, !dbg !4612
  %add.ptr94 = getelementptr inbounds i8, i8* %add.ptr93, i64 -4, !dbg !4613
  %cmp95 = icmp ult i8* %74, %add.ptr94, !dbg !4614
  br i1 %cmp95, label %while.body, label %while.end, !dbg !4615

while.body:                                       ; preds = %while.cond
  %77 = load i8*, i8** %p, align 8, !dbg !4616
  %arrayidx97 = getelementptr inbounds i8, i8* %77, i64 3, !dbg !4616
  %78 = load i8, i8* %arrayidx97, align 1, !dbg !4616
  %conv98 = sext i8 %78 to i32, !dbg !4616
  %cmp99 = icmp eq i32 %conv98, 80, !dbg !4619
  br i1 %cmp99, label %if.then101, label %if.else103, !dbg !4620

if.then101:                                       ; preds = %while.body
  %79 = load i8*, i8** %p, align 8, !dbg !4621
  %add.ptr102 = getelementptr inbounds i8, i8* %79, i64 3, !dbg !4621
  store i8* %add.ptr102, i8** %p, align 8, !dbg !4621
  br label %if.end148, !dbg !4624

if.else103:                                       ; preds = %while.body
  %80 = load i8*, i8** %p, align 8, !dbg !4625
  %arrayidx104 = getelementptr inbounds i8, i8* %80, i64 3, !dbg !4625
  %81 = load i8, i8* %arrayidx104, align 1, !dbg !4625
  %conv105 = sext i8 %81 to i32, !dbg !4625
  %cmp106 = icmp eq i32 %conv105, 75, !dbg !4627
  br i1 %cmp106, label %if.then108, label %if.else110, !dbg !4628

if.then108:                                       ; preds = %if.else103
  %82 = load i8*, i8** %p, align 8, !dbg !4629
  %add.ptr109 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !4629
  store i8* %add.ptr109, i8** %p, align 8, !dbg !4629
  br label %if.end147, !dbg !4632

if.else110:                                       ; preds = %if.else103
  %83 = load i8*, i8** %p, align 8, !dbg !4633
  %arrayidx111 = getelementptr inbounds i8, i8* %83, i64 3, !dbg !4633
  %84 = load i8, i8* %arrayidx111, align 1, !dbg !4633
  %conv112 = sext i8 %84 to i32, !dbg !4633
  %cmp113 = icmp eq i32 %conv112, 7, !dbg !4635
  br i1 %cmp113, label %if.then115, label %if.else117, !dbg !4636

if.then115:                                       ; preds = %if.else110
  %85 = load i8*, i8** %p, align 8, !dbg !4637
  %add.ptr116 = getelementptr inbounds i8, i8* %85, i64 1, !dbg !4637
  store i8* %add.ptr116, i8** %p, align 8, !dbg !4637
  br label %if.end146, !dbg !4640

if.else117:                                       ; preds = %if.else110
  %86 = load i8*, i8** %p, align 8, !dbg !4641
  %arrayidx118 = getelementptr inbounds i8, i8* %86, i64 3, !dbg !4641
  %87 = load i8, i8* %arrayidx118, align 1, !dbg !4641
  %conv119 = sext i8 %87 to i32, !dbg !4641
  %cmp120 = icmp eq i32 %conv119, 8, !dbg !4643
  br i1 %cmp120, label %land.lhs.true122, label %if.else143, !dbg !4644

land.lhs.true122:                                 ; preds = %if.else117
  %88 = load i8*, i8** %p, align 8, !dbg !4645
  %arrayidx123 = getelementptr inbounds i8, i8* %88, i64 2, !dbg !4645
  %89 = load i8, i8* %arrayidx123, align 1, !dbg !4645
  %conv124 = sext i8 %89 to i32, !dbg !4645
  %cmp125 = icmp eq i32 %conv124, 7, !dbg !4647
  br i1 %cmp125, label %land.lhs.true127, label %if.else143, !dbg !4648

land.lhs.true127:                                 ; preds = %land.lhs.true122
  %90 = load i8*, i8** %p, align 8, !dbg !4649
  %arrayidx128 = getelementptr inbounds i8, i8* %90, i64 1, !dbg !4649
  %91 = load i8, i8* %arrayidx128, align 1, !dbg !4649
  %conv129 = sext i8 %91 to i32, !dbg !4649
  %cmp130 = icmp eq i32 %conv129, 75, !dbg !4650
  br i1 %cmp130, label %land.lhs.true132, label %if.else143, !dbg !4651

land.lhs.true132:                                 ; preds = %land.lhs.true127
  %92 = load i8*, i8** %p, align 8, !dbg !4652
  %arrayidx133 = getelementptr inbounds i8, i8* %92, i64 0, !dbg !4652
  %93 = load i8, i8* %arrayidx133, align 1, !dbg !4652
  %conv134 = sext i8 %93 to i32, !dbg !4652
  %cmp135 = icmp eq i32 %conv134, 80, !dbg !4654
  br i1 %cmp135, label %if.then137, label %if.else143, !dbg !4655

if.then137:                                       ; preds = %land.lhs.true132
  %94 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4657
  %hctx_valid138 = getelementptr inbounds %struct.zip, %struct.zip* %94, i32 0, i32 38, !dbg !4660
  %95 = load i8, i8* %hctx_valid138, align 4, !dbg !4660
  %tobool139 = icmp ne i8 %95, 0, !dbg !4657
  br i1 %tobool139, label %if.then140, label %if.end142, !dbg !4661

if.then140:                                       ; preds = %if.then137
  %96 = load i8*, i8** %p, align 8, !dbg !4662
  %add.ptr141 = getelementptr inbounds i8, i8* %96, i64 -10, !dbg !4662
  store i8* %add.ptr141, i8** %p, align 8, !dbg !4662
  br label %if.end142, !dbg !4663

if.end142:                                        ; preds = %if.then140, %if.then137
  br label %while.end, !dbg !4664

if.else143:                                       ; preds = %land.lhs.true132, %land.lhs.true127, %land.lhs.true122, %if.else117
  %97 = load i8*, i8** %p, align 8, !dbg !4665
  %add.ptr144 = getelementptr inbounds i8, i8* %97, i64 4, !dbg !4665
  store i8* %add.ptr144, i8** %p, align 8, !dbg !4665
  br label %if.end145

if.end145:                                        ; preds = %if.else143
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then115
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then108
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then101
  br label %while.cond, !dbg !4667

while.end:                                        ; preds = %if.end142, %while.cond
  %98 = load i8*, i8** %p, align 8, !dbg !4668
  %99 = load i8*, i8** %buff, align 8, !dbg !4669
  %sub.ptr.lhs.cast = ptrtoint i8* %98 to i64, !dbg !4670
  %sub.ptr.rhs.cast = ptrtoint i8* %99 to i64, !dbg !4670
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4670
  store i64 %sub.ptr.sub, i64* %bytes_avail, align 8, !dbg !4671
  br label %if.end176, !dbg !4672

if.else149:                                       ; preds = %entry
  %100 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4673
  %entry_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %100, i32 0, i32 10, !dbg !4676
  %101 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !4676
  %cmp150 = icmp eq i64 %101, 0, !dbg !4677
  br i1 %cmp150, label %if.then152, label %if.end163, !dbg !4678

if.then152:                                       ; preds = %if.else149
  %102 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4679
  %end_of_entry153 = getelementptr inbounds %struct.zip, %struct.zip* %102, i32 0, i32 17, !dbg !4681
  store i8 1, i8* %end_of_entry153, align 2, !dbg !4682
  %103 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4683
  %hctx_valid154 = getelementptr inbounds %struct.zip, %struct.zip* %103, i32 0, i32 38, !dbg !4685
  %104 = load i8, i8* %hctx_valid154, align 4, !dbg !4685
  %tobool155 = icmp ne i8 %104, 0, !dbg !4683
  br i1 %tobool155, label %if.then156, label %if.end162, !dbg !4686

if.then156:                                       ; preds = %if.then152
  %105 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4687
  %call157 = call i32 @check_authentication_code(%struct.archive_read* %105, i8* null), !dbg !4689
  store i32 %call157, i32* %r, align 4, !dbg !4690
  %106 = load i32, i32* %r, align 4, !dbg !4691
  %cmp158 = icmp ne i32 %106, 0, !dbg !4693
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !4694

if.then160:                                       ; preds = %if.then156
  %107 = load i32, i32* %r, align 4, !dbg !4695
  store i32 %107, i32* %retval, align 4, !dbg !4696
  br label %return, !dbg !4696

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !4697

if.end162:                                        ; preds = %if.end161, %if.then152
  store i32 0, i32* %retval, align 4, !dbg !4698
  br label %return, !dbg !4698

if.end163:                                        ; preds = %if.else149
  %108 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4699
  %call164 = call i8* @__archive_read_ahead(%struct.archive_read* %108, i64 1, i64* %bytes_avail), !dbg !4700
  store i8* %call164, i8** %buff, align 8, !dbg !4701
  %109 = load i64, i64* %bytes_avail, align 8, !dbg !4702
  %cmp165 = icmp sle i64 %109, 0, !dbg !4704
  br i1 %cmp165, label %if.then167, label %if.end169, !dbg !4705

if.then167:                                       ; preds = %if.end163
  %110 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4706
  %archive168 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %110, i32 0, i32 0, !dbg !4708
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive168, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0)), !dbg !4709
  store i32 -30, i32* %retval, align 4, !dbg !4710
  br label %return, !dbg !4710

if.end169:                                        ; preds = %if.end163
  %111 = load i64, i64* %bytes_avail, align 8, !dbg !4711
  %112 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4713
  %entry_bytes_remaining170 = getelementptr inbounds %struct.zip, %struct.zip* %112, i32 0, i32 10, !dbg !4714
  %113 = load i64, i64* %entry_bytes_remaining170, align 8, !dbg !4714
  %cmp171 = icmp sgt i64 %111, %113, !dbg !4715
  br i1 %cmp171, label %if.then173, label %if.end175, !dbg !4716

if.then173:                                       ; preds = %if.end169
  %114 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4717
  %entry_bytes_remaining174 = getelementptr inbounds %struct.zip, %struct.zip* %114, i32 0, i32 10, !dbg !4718
  %115 = load i64, i64* %entry_bytes_remaining174, align 8, !dbg !4718
  store i64 %115, i64* %bytes_avail, align 8, !dbg !4719
  br label %if.end175, !dbg !4720

if.end175:                                        ; preds = %if.then173, %if.end169
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %while.end
  %116 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4721
  %tctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %116, i32 0, i32 34, !dbg !4723
  %117 = load i8, i8* %tctx_valid, align 4, !dbg !4723
  %conv177 = sext i8 %117 to i32, !dbg !4721
  %tobool178 = icmp ne i32 %conv177, 0, !dbg !4721
  br i1 %tobool178, label %if.then182, label %lor.lhs.false179, !dbg !4724

lor.lhs.false179:                                 ; preds = %if.end176
  %118 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4725
  %cctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %118, i32 0, i32 36, !dbg !4727
  %119 = load i8, i8* %cctx_valid, align 4, !dbg !4727
  %conv180 = sext i8 %119 to i32, !dbg !4725
  %tobool181 = icmp ne i32 %conv180, 0, !dbg !4725
  br i1 %tobool181, label %if.then182, label %if.end196, !dbg !4728

if.then182:                                       ; preds = %lor.lhs.false179, %if.end176
  call void @llvm.dbg.declare(metadata i64* %dec_size, metadata !4729, metadata !578), !dbg !4731
  %120 = load i64, i64* %bytes_avail, align 8, !dbg !4732
  store i64 %120, i64* %dec_size, align 8, !dbg !4731
  %121 = load i64, i64* %dec_size, align 8, !dbg !4733
  %122 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4735
  %decrypted_buffer_size = getelementptr inbounds %struct.zip, %struct.zip* %122, i32 0, i32 30, !dbg !4736
  %123 = load i64, i64* %decrypted_buffer_size, align 8, !dbg !4736
  %cmp183 = icmp ugt i64 %121, %123, !dbg !4737
  br i1 %cmp183, label %if.then185, label %if.end187, !dbg !4738

if.then185:                                       ; preds = %if.then182
  %124 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4739
  %decrypted_buffer_size186 = getelementptr inbounds %struct.zip, %struct.zip* %124, i32 0, i32 30, !dbg !4740
  %125 = load i64, i64* %decrypted_buffer_size186, align 8, !dbg !4740
  store i64 %125, i64* %dec_size, align 8, !dbg !4741
  br label %if.end187, !dbg !4742

if.end187:                                        ; preds = %if.then185, %if.then182
  %126 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4743
  %tctx_valid188 = getelementptr inbounds %struct.zip, %struct.zip* %126, i32 0, i32 34, !dbg !4745
  %127 = load i8, i8* %tctx_valid188, align 4, !dbg !4745
  %tobool189 = icmp ne i8 %127, 0, !dbg !4743
  br i1 %tobool189, label %if.then190, label %if.else191, !dbg !4746

if.then190:                                       ; preds = %if.end187
  %128 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4747
  %tctx = getelementptr inbounds %struct.zip, %struct.zip* %128, i32 0, i32 33, !dbg !4749
  %129 = load i8*, i8** %buff, align 8, !dbg !4750
  %130 = load i64, i64* %dec_size, align 8, !dbg !4751
  %131 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4752
  %decrypted_buffer = getelementptr inbounds %struct.zip, %struct.zip* %131, i32 0, i32 28, !dbg !4753
  %132 = load i8*, i8** %decrypted_buffer, align 8, !dbg !4753
  %133 = load i64, i64* %dec_size, align 8, !dbg !4754
  call void @trad_enc_decrypt_update(%struct.trad_enc_ctx* %tctx, i8* %129, i64 %130, i8* %132, i64 %133), !dbg !4755
  br label %if.end194, !dbg !4756

if.else191:                                       ; preds = %if.end187
  call void @llvm.dbg.declare(metadata i64* %dsize, metadata !4757, metadata !578), !dbg !4759
  %134 = load i64, i64* %dec_size, align 8, !dbg !4760
  store i64 %134, i64* %dsize, align 8, !dbg !4759
  %135 = load void (i32*, i8*, i64)*, void (i32*, i8*, i64)** getelementptr inbounds (%struct.archive_hmac, %struct.archive_hmac* @__archive_hmac, i32 0, i32 1), align 8, !dbg !4761
  %136 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4761
  %hctx = getelementptr inbounds %struct.zip, %struct.zip* %136, i32 0, i32 37, !dbg !4761
  %137 = load i8*, i8** %buff, align 8, !dbg !4761
  %138 = load i64, i64* %dec_size, align 8, !dbg !4761
  call void %135(i32* %hctx, i8* %137, i64 %138), !dbg !4761
  %139 = load i32 (i32*, i8*, i64, i8*, i64*)*, i32 (i32*, i8*, i64, i8*, i64*)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 2), align 8, !dbg !4762
  %140 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4762
  %cctx = getelementptr inbounds %struct.zip, %struct.zip* %140, i32 0, i32 35, !dbg !4762
  %141 = load i8*, i8** %buff, align 8, !dbg !4762
  %142 = load i64, i64* %dec_size, align 8, !dbg !4762
  %143 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4762
  %decrypted_buffer192 = getelementptr inbounds %struct.zip, %struct.zip* %143, i32 0, i32 28, !dbg !4762
  %144 = load i8*, i8** %decrypted_buffer192, align 8, !dbg !4762
  %call193 = call i32 %139(i32* %cctx, i8* %141, i64 %142, i8* %144, i64* %dsize), !dbg !4762
  br label %if.end194

if.end194:                                        ; preds = %if.else191, %if.then190
  %145 = load i64, i64* %dec_size, align 8, !dbg !4763
  store i64 %145, i64* %bytes_avail, align 8, !dbg !4764
  %146 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4765
  %decrypted_buffer195 = getelementptr inbounds %struct.zip, %struct.zip* %146, i32 0, i32 28, !dbg !4766
  %147 = load i8*, i8** %decrypted_buffer195, align 8, !dbg !4766
  store i8* %147, i8** %buff, align 8, !dbg !4767
  br label %if.end196, !dbg !4768

if.end196:                                        ; preds = %if.end194, %lor.lhs.false179
  %148 = load i64, i64* %bytes_avail, align 8, !dbg !4769
  %149 = load i64*, i64** %size.addr, align 8, !dbg !4770
  store i64 %148, i64* %149, align 8, !dbg !4771
  %150 = load i64, i64* %bytes_avail, align 8, !dbg !4772
  %151 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4773
  %entry_bytes_remaining197 = getelementptr inbounds %struct.zip, %struct.zip* %151, i32 0, i32 10, !dbg !4774
  %152 = load i64, i64* %entry_bytes_remaining197, align 8, !dbg !4775
  %sub = sub nsw i64 %152, %150, !dbg !4775
  store i64 %sub, i64* %entry_bytes_remaining197, align 8, !dbg !4775
  %153 = load i64, i64* %bytes_avail, align 8, !dbg !4776
  %154 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4777
  %entry_uncompressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %154, i32 0, i32 12, !dbg !4778
  %155 = load i64, i64* %entry_uncompressed_bytes_read, align 8, !dbg !4779
  %add198 = add nsw i64 %155, %153, !dbg !4779
  store i64 %add198, i64* %entry_uncompressed_bytes_read, align 8, !dbg !4779
  %156 = load i64, i64* %bytes_avail, align 8, !dbg !4780
  %157 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4781
  %entry_compressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %157, i32 0, i32 11, !dbg !4782
  %158 = load i64, i64* %entry_compressed_bytes_read, align 8, !dbg !4783
  %add199 = add nsw i64 %158, %156, !dbg !4783
  store i64 %add199, i64* %entry_compressed_bytes_read, align 8, !dbg !4783
  %159 = load i64, i64* %bytes_avail, align 8, !dbg !4784
  %160 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4785
  %unconsumed200 = getelementptr inbounds %struct.zip, %struct.zip* %160, i32 0, i32 8, !dbg !4786
  %161 = load i64, i64* %unconsumed200, align 8, !dbg !4787
  %add201 = add i64 %161, %159, !dbg !4787
  store i64 %add201, i64* %unconsumed200, align 8, !dbg !4787
  %162 = load i8*, i8** %buff, align 8, !dbg !4788
  %163 = load i8**, i8*** %_buff.addr, align 8, !dbg !4789
  store i8* %162, i8** %163, align 8, !dbg !4790
  store i32 0, i32* %retval, align 4, !dbg !4791
  br label %return, !dbg !4791

return:                                           ; preds = %if.end196, %if.then167, %if.end162, %if.then160, %if.end91, %if.then89, %if.then62, %if.then5
  %164 = load i32, i32* %retval, align 4, !dbg !4792
  ret i32 %164, !dbg !4792
}

; Function Attrs: nounwind uwtable
define internal i32 @zip_read_data_deflate(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !527 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %zip = alloca %struct.zip*, align 8
  %bytes_avail = alloca i64, align 8
  %compressed_buff = alloca i8*, align 8
  %sp = alloca i8*, align 8
  %r = alloca i32, align 4
  %buff_remaining = alloca i64, align 8
  %dsize = alloca i64, align 8
  %p = alloca i8*, align 8
  %compressed = alloca i64, align 8
  %uncompressed = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4793, metadata !578), !dbg !4794
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !4795, metadata !578), !dbg !4796
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !4797, metadata !578), !dbg !4798
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !4799, metadata !578), !dbg !4800
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !4801, metadata !578), !dbg !4802
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !4803, metadata !578), !dbg !4804
  call void @llvm.dbg.declare(metadata i8** %compressed_buff, metadata !4805, metadata !578), !dbg !4806
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !4807, metadata !578), !dbg !4808
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4809, metadata !578), !dbg !4810
  %0 = load i64*, i64** %offset.addr, align 8, !dbg !4811
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4812
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 13, !dbg !4813
  %2 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4813
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %2, i32 0, i32 0, !dbg !4814
  %3 = load i8*, i8** %data, align 8, !dbg !4814
  %4 = bitcast i8* %3 to %struct.zip*, !dbg !4815
  store %struct.zip* %4, %struct.zip** %zip, align 8, !dbg !4816
  %5 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4817
  %uncompressed_buffer = getelementptr inbounds %struct.zip, %struct.zip* %5, i32 0, i32 18, !dbg !4819
  %6 = load i8*, i8** %uncompressed_buffer, align 8, !dbg !4819
  %cmp = icmp eq i8* %6, null, !dbg !4820
  br i1 %cmp, label %if.then, label %if.end6, !dbg !4821

if.then:                                          ; preds = %entry
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4822
  %uncompressed_buffer_size = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 19, !dbg !4824
  store i64 262144, i64* %uncompressed_buffer_size, align 8, !dbg !4825
  %8 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4826
  %uncompressed_buffer_size1 = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 19, !dbg !4827
  %9 = load i64, i64* %uncompressed_buffer_size1, align 8, !dbg !4827
  %call = call noalias i8* @malloc(i64 %9) #8, !dbg !4828
  %10 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4829
  %uncompressed_buffer2 = getelementptr inbounds %struct.zip, %struct.zip* %10, i32 0, i32 18, !dbg !4830
  store i8* %call, i8** %uncompressed_buffer2, align 8, !dbg !4831
  %11 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4832
  %uncompressed_buffer3 = getelementptr inbounds %struct.zip, %struct.zip* %11, i32 0, i32 18, !dbg !4834
  %12 = load i8*, i8** %uncompressed_buffer3, align 8, !dbg !4834
  %cmp4 = icmp eq i8* %12, null, !dbg !4835
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !4836

if.then5:                                         ; preds = %if.then
  %13 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4837
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %13, i32 0, i32 0, !dbg !4839
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70, i32 0, i32 0)), !dbg !4840
  store i32 -30, i32* %retval, align 4, !dbg !4841
  br label %return, !dbg !4841

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !4842

if.end6:                                          ; preds = %if.end, %entry
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4843
  %15 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4844
  %call7 = call i32 @zip_deflate_init(%struct.archive_read* %14, %struct.zip* %15), !dbg !4845
  store i32 %call7, i32* %r, align 4, !dbg !4846
  %16 = load i32, i32* %r, align 4, !dbg !4847
  %cmp8 = icmp ne i32 %16, 0, !dbg !4849
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4850

if.then9:                                         ; preds = %if.end6
  %17 = load i32, i32* %r, align 4, !dbg !4851
  store i32 %17, i32* %retval, align 4, !dbg !4852
  br label %return, !dbg !4852

if.end10:                                         ; preds = %if.end6
  %18 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4853
  %call11 = call i8* @__archive_read_ahead(%struct.archive_read* %18, i64 1, i64* %bytes_avail), !dbg !4854
  store i8* %call11, i8** %sp, align 8, !dbg !4855
  store i8* %call11, i8** %compressed_buff, align 8, !dbg !4856
  %19 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4857
  %entry12 = getelementptr inbounds %struct.zip, %struct.zip* %19, i32 0, i32 9, !dbg !4859
  %20 = load %struct.zip_entry*, %struct.zip_entry** %entry12, align 8, !dbg !4859
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %20, i32 0, i32 13, !dbg !4860
  %21 = load i16, i16* %zip_flags, align 2, !dbg !4860
  %conv = zext i16 %21 to i32, !dbg !4857
  %and = and i32 %conv, 8, !dbg !4861
  %cmp13 = icmp eq i32 0, %and, !dbg !4862
  br i1 %cmp13, label %land.lhs.true, label %if.end19, !dbg !4863

land.lhs.true:                                    ; preds = %if.end10
  %22 = load i64, i64* %bytes_avail, align 8, !dbg !4864
  %23 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4866
  %entry_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %23, i32 0, i32 10, !dbg !4867
  %24 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !4867
  %cmp15 = icmp sgt i64 %22, %24, !dbg !4868
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !4869

if.then17:                                        ; preds = %land.lhs.true
  %25 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4871
  %entry_bytes_remaining18 = getelementptr inbounds %struct.zip, %struct.zip* %25, i32 0, i32 10, !dbg !4873
  %26 = load i64, i64* %entry_bytes_remaining18, align 8, !dbg !4873
  store i64 %26, i64* %bytes_avail, align 8, !dbg !4874
  br label %if.end19, !dbg !4875

if.end19:                                         ; preds = %if.then17, %land.lhs.true, %if.end10
  %27 = load i64, i64* %bytes_avail, align 8, !dbg !4876
  %cmp20 = icmp slt i64 %27, 0, !dbg !4878
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !4879

if.then22:                                        ; preds = %if.end19
  %28 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4880
  %archive23 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %28, i32 0, i32 0, !dbg !4882
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive23, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i32 0, i32 0)), !dbg !4883
  store i32 -30, i32* %retval, align 4, !dbg !4884
  br label %return, !dbg !4884

if.end24:                                         ; preds = %if.end19
  %29 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4885
  %tctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %29, i32 0, i32 34, !dbg !4887
  %30 = load i8, i8* %tctx_valid, align 4, !dbg !4887
  %conv25 = sext i8 %30 to i32, !dbg !4885
  %tobool = icmp ne i32 %conv25, 0, !dbg !4885
  br i1 %tobool, label %if.then28, label %lor.lhs.false, !dbg !4888

lor.lhs.false:                                    ; preds = %if.end24
  %31 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4889
  %cctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %31, i32 0, i32 36, !dbg !4891
  %32 = load i8, i8* %cctx_valid, align 4, !dbg !4891
  %conv26 = sext i8 %32 to i32, !dbg !4889
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !4889
  br i1 %tobool27, label %if.then28, label %if.end85, !dbg !4892

if.then28:                                        ; preds = %lor.lhs.false, %if.end24
  %33 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4893
  %decrypted_bytes_remaining = getelementptr inbounds %struct.zip, %struct.zip* %33, i32 0, i32 31, !dbg !4896
  %34 = load i64, i64* %decrypted_bytes_remaining, align 8, !dbg !4896
  %35 = load i64, i64* %bytes_avail, align 8, !dbg !4897
  %cmp29 = icmp ult i64 %34, %35, !dbg !4898
  br i1 %cmp29, label %if.then31, label %if.end82, !dbg !4899

if.then31:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata i64* %buff_remaining, metadata !4900, metadata !578), !dbg !4902
  %36 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4903
  %decrypted_buffer = getelementptr inbounds %struct.zip, %struct.zip* %36, i32 0, i32 28, !dbg !4904
  %37 = load i8*, i8** %decrypted_buffer, align 8, !dbg !4904
  %38 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4905
  %decrypted_buffer_size = getelementptr inbounds %struct.zip, %struct.zip* %38, i32 0, i32 30, !dbg !4906
  %39 = load i64, i64* %decrypted_buffer_size, align 8, !dbg !4906
  %add.ptr = getelementptr inbounds i8, i8* %37, i64 %39, !dbg !4907
  %40 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4908
  %decrypted_ptr = getelementptr inbounds %struct.zip, %struct.zip* %40, i32 0, i32 29, !dbg !4909
  %41 = load i8*, i8** %decrypted_ptr, align 8, !dbg !4909
  %42 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4910
  %decrypted_bytes_remaining32 = getelementptr inbounds %struct.zip, %struct.zip* %42, i32 0, i32 31, !dbg !4911
  %43 = load i64, i64* %decrypted_bytes_remaining32, align 8, !dbg !4911
  %add.ptr33 = getelementptr inbounds i8, i8* %41, i64 %43, !dbg !4912
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !4913
  %sub.ptr.rhs.cast = ptrtoint i8* %add.ptr33 to i64, !dbg !4913
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4913
  store i64 %sub.ptr.sub, i64* %buff_remaining, align 8, !dbg !4902
  %44 = load i64, i64* %buff_remaining, align 8, !dbg !4914
  %45 = load i64, i64* %bytes_avail, align 8, !dbg !4916
  %cmp34 = icmp ugt i64 %44, %45, !dbg !4917
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !4918

if.then36:                                        ; preds = %if.then31
  %46 = load i64, i64* %bytes_avail, align 8, !dbg !4919
  store i64 %46, i64* %buff_remaining, align 8, !dbg !4920
  br label %if.end37, !dbg !4921

if.end37:                                         ; preds = %if.then36, %if.then31
  %47 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4922
  %entry38 = getelementptr inbounds %struct.zip, %struct.zip* %47, i32 0, i32 9, !dbg !4924
  %48 = load %struct.zip_entry*, %struct.zip_entry** %entry38, align 8, !dbg !4924
  %zip_flags39 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %48, i32 0, i32 13, !dbg !4925
  %49 = load i16, i16* %zip_flags39, align 2, !dbg !4925
  %conv40 = zext i16 %49 to i32, !dbg !4922
  %and41 = and i32 %conv40, 8, !dbg !4926
  %cmp42 = icmp eq i32 0, %and41, !dbg !4927
  br i1 %cmp42, label %land.lhs.true44, label %if.end63, !dbg !4928

land.lhs.true44:                                  ; preds = %if.end37
  %50 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4929
  %entry_bytes_remaining45 = getelementptr inbounds %struct.zip, %struct.zip* %50, i32 0, i32 10, !dbg !4930
  %51 = load i64, i64* %entry_bytes_remaining45, align 8, !dbg !4930
  %cmp46 = icmp sgt i64 %51, 0, !dbg !4931
  br i1 %cmp46, label %if.then48, label %if.end63, !dbg !4932

if.then48:                                        ; preds = %land.lhs.true44
  %52 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4934
  %decrypted_bytes_remaining49 = getelementptr inbounds %struct.zip, %struct.zip* %52, i32 0, i32 31, !dbg !4937
  %53 = load i64, i64* %decrypted_bytes_remaining49, align 8, !dbg !4937
  %54 = load i64, i64* %buff_remaining, align 8, !dbg !4938
  %add = add i64 %53, %54, !dbg !4939
  %55 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4940
  %entry_bytes_remaining50 = getelementptr inbounds %struct.zip, %struct.zip* %55, i32 0, i32 10, !dbg !4941
  %56 = load i64, i64* %entry_bytes_remaining50, align 8, !dbg !4941
  %cmp51 = icmp sgt i64 %add, %56, !dbg !4942
  br i1 %cmp51, label %if.then53, label %if.end62, !dbg !4943

if.then53:                                        ; preds = %if.then48
  %57 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4944
  %entry_bytes_remaining54 = getelementptr inbounds %struct.zip, %struct.zip* %57, i32 0, i32 10, !dbg !4947
  %58 = load i64, i64* %entry_bytes_remaining54, align 8, !dbg !4947
  %59 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4948
  %decrypted_bytes_remaining55 = getelementptr inbounds %struct.zip, %struct.zip* %59, i32 0, i32 31, !dbg !4949
  %60 = load i64, i64* %decrypted_bytes_remaining55, align 8, !dbg !4949
  %cmp56 = icmp slt i64 %58, %60, !dbg !4950
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !4951

if.then58:                                        ; preds = %if.then53
  store i64 0, i64* %buff_remaining, align 8, !dbg !4952
  br label %if.end61, !dbg !4953

if.else:                                          ; preds = %if.then53
  %61 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4954
  %entry_bytes_remaining59 = getelementptr inbounds %struct.zip, %struct.zip* %61, i32 0, i32 10, !dbg !4955
  %62 = load i64, i64* %entry_bytes_remaining59, align 8, !dbg !4955
  %63 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4956
  %decrypted_bytes_remaining60 = getelementptr inbounds %struct.zip, %struct.zip* %63, i32 0, i32 31, !dbg !4957
  %64 = load i64, i64* %decrypted_bytes_remaining60, align 8, !dbg !4957
  %sub = sub i64 %62, %64, !dbg !4958
  store i64 %sub, i64* %buff_remaining, align 8, !dbg !4959
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then58
  br label %if.end62, !dbg !4960

if.end62:                                         ; preds = %if.end61, %if.then48
  br label %if.end63, !dbg !4961

if.end63:                                         ; preds = %if.end62, %land.lhs.true44, %if.end37
  %65 = load i64, i64* %buff_remaining, align 8, !dbg !4962
  %cmp64 = icmp ugt i64 %65, 0, !dbg !4964
  br i1 %cmp64, label %if.then66, label %if.end81, !dbg !4965

if.then66:                                        ; preds = %if.end63
  %66 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4966
  %tctx_valid67 = getelementptr inbounds %struct.zip, %struct.zip* %66, i32 0, i32 34, !dbg !4969
  %67 = load i8, i8* %tctx_valid67, align 4, !dbg !4969
  %tobool68 = icmp ne i8 %67, 0, !dbg !4966
  br i1 %tobool68, label %if.then69, label %if.else73, !dbg !4970

if.then69:                                        ; preds = %if.then66
  %68 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4971
  %tctx = getelementptr inbounds %struct.zip, %struct.zip* %68, i32 0, i32 33, !dbg !4973
  %69 = load i8*, i8** %compressed_buff, align 8, !dbg !4974
  %70 = load i64, i64* %buff_remaining, align 8, !dbg !4975
  %71 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4976
  %decrypted_ptr70 = getelementptr inbounds %struct.zip, %struct.zip* %71, i32 0, i32 29, !dbg !4977
  %72 = load i8*, i8** %decrypted_ptr70, align 8, !dbg !4977
  %73 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4978
  %decrypted_bytes_remaining71 = getelementptr inbounds %struct.zip, %struct.zip* %73, i32 0, i32 31, !dbg !4979
  %74 = load i64, i64* %decrypted_bytes_remaining71, align 8, !dbg !4979
  %add.ptr72 = getelementptr inbounds i8, i8* %72, i64 %74, !dbg !4980
  %75 = load i64, i64* %buff_remaining, align 8, !dbg !4981
  call void @trad_enc_decrypt_update(%struct.trad_enc_ctx* %tctx, i8* %69, i64 %70, i8* %add.ptr72, i64 %75), !dbg !4982
  br label %if.end78, !dbg !4983

if.else73:                                        ; preds = %if.then66
  call void @llvm.dbg.declare(metadata i64* %dsize, metadata !4984, metadata !578), !dbg !4986
  %76 = load i64, i64* %buff_remaining, align 8, !dbg !4987
  store i64 %76, i64* %dsize, align 8, !dbg !4986
  %77 = load i32 (i32*, i8*, i64, i8*, i64*)*, i32 (i32*, i8*, i64, i8*, i64*)** getelementptr inbounds (%struct.archive_cryptor, %struct.archive_cryptor* @__archive_cryptor, i32 0, i32 2), align 8, !dbg !4988
  %78 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4988
  %cctx = getelementptr inbounds %struct.zip, %struct.zip* %78, i32 0, i32 35, !dbg !4988
  %79 = load i8*, i8** %compressed_buff, align 8, !dbg !4988
  %80 = load i64, i64* %buff_remaining, align 8, !dbg !4988
  %81 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4988
  %decrypted_ptr74 = getelementptr inbounds %struct.zip, %struct.zip* %81, i32 0, i32 29, !dbg !4988
  %82 = load i8*, i8** %decrypted_ptr74, align 8, !dbg !4988
  %83 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4988
  %decrypted_bytes_remaining75 = getelementptr inbounds %struct.zip, %struct.zip* %83, i32 0, i32 31, !dbg !4988
  %84 = load i64, i64* %decrypted_bytes_remaining75, align 8, !dbg !4988
  %add.ptr76 = getelementptr inbounds i8, i8* %82, i64 %84, !dbg !4988
  %call77 = call i32 %77(i32* %cctx, i8* %79, i64 %80, i8* %add.ptr76, i64* %dsize), !dbg !4988
  br label %if.end78

if.end78:                                         ; preds = %if.else73, %if.then69
  %85 = load i64, i64* %buff_remaining, align 8, !dbg !4989
  %86 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4990
  %decrypted_bytes_remaining79 = getelementptr inbounds %struct.zip, %struct.zip* %86, i32 0, i32 31, !dbg !4991
  %87 = load i64, i64* %decrypted_bytes_remaining79, align 8, !dbg !4992
  %add80 = add i64 %87, %85, !dbg !4992
  store i64 %add80, i64* %decrypted_bytes_remaining79, align 8, !dbg !4992
  br label %if.end81, !dbg !4993

if.end81:                                         ; preds = %if.end78, %if.end63
  br label %if.end82, !dbg !4994

if.end82:                                         ; preds = %if.end81, %if.then28
  %88 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4995
  %decrypted_bytes_remaining83 = getelementptr inbounds %struct.zip, %struct.zip* %88, i32 0, i32 31, !dbg !4996
  %89 = load i64, i64* %decrypted_bytes_remaining83, align 8, !dbg !4996
  store i64 %89, i64* %bytes_avail, align 8, !dbg !4997
  %90 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !4998
  %decrypted_ptr84 = getelementptr inbounds %struct.zip, %struct.zip* %90, i32 0, i32 29, !dbg !4999
  %91 = load i8*, i8** %decrypted_ptr84, align 8, !dbg !4999
  store i8* %91, i8** %compressed_buff, align 8, !dbg !5000
  br label %if.end85, !dbg !5001

if.end85:                                         ; preds = %if.end82, %lor.lhs.false
  %92 = load i8*, i8** %compressed_buff, align 8, !dbg !5002
  %93 = ptrtoint i8* %92 to i64, !dbg !5003
  %94 = inttoptr i64 %93 to i8*, !dbg !5004
  %95 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5005
  %stream = getelementptr inbounds %struct.zip, %struct.zip* %95, i32 0, i32 20, !dbg !5006
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream, i32 0, i32 0, !dbg !5007
  store i8* %94, i8** %next_in, align 8, !dbg !5008
  %96 = load i64, i64* %bytes_avail, align 8, !dbg !5009
  %conv86 = trunc i64 %96 to i32, !dbg !5010
  %97 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5011
  %stream87 = getelementptr inbounds %struct.zip, %struct.zip* %97, i32 0, i32 20, !dbg !5012
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream87, i32 0, i32 1, !dbg !5013
  store i32 %conv86, i32* %avail_in, align 8, !dbg !5014
  %98 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5015
  %stream88 = getelementptr inbounds %struct.zip, %struct.zip* %98, i32 0, i32 20, !dbg !5016
  %total_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream88, i32 0, i32 2, !dbg !5017
  store i64 0, i64* %total_in, align 8, !dbg !5018
  %99 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5019
  %uncompressed_buffer89 = getelementptr inbounds %struct.zip, %struct.zip* %99, i32 0, i32 18, !dbg !5020
  %100 = load i8*, i8** %uncompressed_buffer89, align 8, !dbg !5020
  %101 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5021
  %stream90 = getelementptr inbounds %struct.zip, %struct.zip* %101, i32 0, i32 20, !dbg !5022
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream90, i32 0, i32 3, !dbg !5023
  store i8* %100, i8** %next_out, align 8, !dbg !5024
  %102 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5025
  %uncompressed_buffer_size91 = getelementptr inbounds %struct.zip, %struct.zip* %102, i32 0, i32 19, !dbg !5026
  %103 = load i64, i64* %uncompressed_buffer_size91, align 8, !dbg !5026
  %conv92 = trunc i64 %103 to i32, !dbg !5027
  %104 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5028
  %stream93 = getelementptr inbounds %struct.zip, %struct.zip* %104, i32 0, i32 20, !dbg !5029
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream93, i32 0, i32 4, !dbg !5030
  store i32 %conv92, i32* %avail_out, align 8, !dbg !5031
  %105 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5032
  %stream94 = getelementptr inbounds %struct.zip, %struct.zip* %105, i32 0, i32 20, !dbg !5033
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream94, i32 0, i32 5, !dbg !5034
  store i64 0, i64* %total_out, align 8, !dbg !5035
  %106 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5036
  %stream95 = getelementptr inbounds %struct.zip, %struct.zip* %106, i32 0, i32 20, !dbg !5037
  %call96 = call i32 @cm_zlib_inflate(%struct.z_stream_s* %stream95, i32 0), !dbg !5038
  store i32 %call96, i32* %r, align 4, !dbg !5039
  %107 = load i32, i32* %r, align 4, !dbg !5040
  switch i32 %107, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb97
    i32 -4, label %sw.bb98
  ], !dbg !5041

sw.bb:                                            ; preds = %if.end85
  br label %sw.epilog, !dbg !5042

sw.bb97:                                          ; preds = %if.end85
  %108 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5044
  %end_of_entry = getelementptr inbounds %struct.zip, %struct.zip* %108, i32 0, i32 17, !dbg !5045
  store i8 1, i8* %end_of_entry, align 2, !dbg !5046
  br label %sw.epilog, !dbg !5047

sw.bb98:                                          ; preds = %if.end85
  %109 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5048
  %archive99 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %109, i32 0, i32 0, !dbg !5049
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive99, i32 12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.72, i32 0, i32 0)), !dbg !5050
  store i32 -30, i32* %retval, align 4, !dbg !5051
  br label %return, !dbg !5051

sw.default:                                       ; preds = %if.end85
  %110 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5052
  %archive100 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %110, i32 0, i32 0, !dbg !5053
  %111 = load i32, i32* %r, align 4, !dbg !5054
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive100, i32 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i32 0, i32 0), i32 %111), !dbg !5055
  store i32 -30, i32* %retval, align 4, !dbg !5056
  br label %return, !dbg !5056

sw.epilog:                                        ; preds = %sw.bb97, %sw.bb
  %112 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5057
  %stream101 = getelementptr inbounds %struct.zip, %struct.zip* %112, i32 0, i32 20, !dbg !5058
  %total_in102 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream101, i32 0, i32 2, !dbg !5059
  %113 = load i64, i64* %total_in102, align 8, !dbg !5059
  store i64 %113, i64* %bytes_avail, align 8, !dbg !5060
  %114 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5061
  %tctx_valid103 = getelementptr inbounds %struct.zip, %struct.zip* %114, i32 0, i32 34, !dbg !5063
  %115 = load i8, i8* %tctx_valid103, align 4, !dbg !5063
  %conv104 = sext i8 %115 to i32, !dbg !5061
  %tobool105 = icmp ne i32 %conv104, 0, !dbg !5061
  br i1 %tobool105, label %if.then110, label %lor.lhs.false106, !dbg !5064

lor.lhs.false106:                                 ; preds = %sw.epilog
  %116 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5065
  %cctx_valid107 = getelementptr inbounds %struct.zip, %struct.zip* %116, i32 0, i32 36, !dbg !5067
  %117 = load i8, i8* %cctx_valid107, align 4, !dbg !5067
  %conv108 = sext i8 %117 to i32, !dbg !5065
  %tobool109 = icmp ne i32 %conv108, 0, !dbg !5065
  br i1 %tobool109, label %if.then110, label %if.end123, !dbg !5068

if.then110:                                       ; preds = %lor.lhs.false106, %sw.epilog
  %118 = load i64, i64* %bytes_avail, align 8, !dbg !5069
  %119 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5071
  %decrypted_bytes_remaining111 = getelementptr inbounds %struct.zip, %struct.zip* %119, i32 0, i32 31, !dbg !5072
  %120 = load i64, i64* %decrypted_bytes_remaining111, align 8, !dbg !5073
  %sub112 = sub i64 %120, %118, !dbg !5073
  store i64 %sub112, i64* %decrypted_bytes_remaining111, align 8, !dbg !5073
  %121 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5074
  %decrypted_bytes_remaining113 = getelementptr inbounds %struct.zip, %struct.zip* %121, i32 0, i32 31, !dbg !5076
  %122 = load i64, i64* %decrypted_bytes_remaining113, align 8, !dbg !5076
  %cmp114 = icmp eq i64 %122, 0, !dbg !5077
  br i1 %cmp114, label %if.then116, label %if.else119, !dbg !5078

if.then116:                                       ; preds = %if.then110
  %123 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5079
  %decrypted_buffer117 = getelementptr inbounds %struct.zip, %struct.zip* %123, i32 0, i32 28, !dbg !5080
  %124 = load i8*, i8** %decrypted_buffer117, align 8, !dbg !5080
  %125 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5081
  %decrypted_ptr118 = getelementptr inbounds %struct.zip, %struct.zip* %125, i32 0, i32 29, !dbg !5082
  store i8* %124, i8** %decrypted_ptr118, align 8, !dbg !5083
  br label %if.end122, !dbg !5081

if.else119:                                       ; preds = %if.then110
  %126 = load i64, i64* %bytes_avail, align 8, !dbg !5084
  %127 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5085
  %decrypted_ptr120 = getelementptr inbounds %struct.zip, %struct.zip* %127, i32 0, i32 29, !dbg !5086
  %128 = load i8*, i8** %decrypted_ptr120, align 8, !dbg !5087
  %add.ptr121 = getelementptr inbounds i8, i8* %128, i64 %126, !dbg !5087
  store i8* %add.ptr121, i8** %decrypted_ptr120, align 8, !dbg !5087
  br label %if.end122

if.end122:                                        ; preds = %if.else119, %if.then116
  br label %if.end123, !dbg !5088

if.end123:                                        ; preds = %if.end122, %lor.lhs.false106
  %129 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5089
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %129, i32 0, i32 38, !dbg !5091
  %130 = load i8, i8* %hctx_valid, align 4, !dbg !5091
  %tobool124 = icmp ne i8 %130, 0, !dbg !5089
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !5092

if.then125:                                       ; preds = %if.end123
  %131 = load void (i32*, i8*, i64)*, void (i32*, i8*, i64)** getelementptr inbounds (%struct.archive_hmac, %struct.archive_hmac* @__archive_hmac, i32 0, i32 1), align 8, !dbg !5093
  %132 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5093
  %hctx = getelementptr inbounds %struct.zip, %struct.zip* %132, i32 0, i32 37, !dbg !5093
  %133 = load i8*, i8** %sp, align 8, !dbg !5093
  %134 = load i64, i64* %bytes_avail, align 8, !dbg !5093
  call void %131(i32* %hctx, i8* %133, i64 %134), !dbg !5093
  br label %if.end126, !dbg !5093

if.end126:                                        ; preds = %if.then125, %if.end123
  %135 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5094
  %136 = load i64, i64* %bytes_avail, align 8, !dbg !5095
  %call127 = call i64 @__archive_read_consume(%struct.archive_read* %135, i64 %136), !dbg !5096
  %137 = load i64, i64* %bytes_avail, align 8, !dbg !5097
  %138 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5098
  %entry_bytes_remaining128 = getelementptr inbounds %struct.zip, %struct.zip* %138, i32 0, i32 10, !dbg !5099
  %139 = load i64, i64* %entry_bytes_remaining128, align 8, !dbg !5100
  %sub129 = sub nsw i64 %139, %137, !dbg !5100
  store i64 %sub129, i64* %entry_bytes_remaining128, align 8, !dbg !5100
  %140 = load i64, i64* %bytes_avail, align 8, !dbg !5101
  %141 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5102
  %entry_compressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %141, i32 0, i32 11, !dbg !5103
  %142 = load i64, i64* %entry_compressed_bytes_read, align 8, !dbg !5104
  %add130 = add nsw i64 %142, %140, !dbg !5104
  store i64 %add130, i64* %entry_compressed_bytes_read, align 8, !dbg !5104
  %143 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5105
  %stream131 = getelementptr inbounds %struct.zip, %struct.zip* %143, i32 0, i32 20, !dbg !5106
  %total_out132 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream131, i32 0, i32 5, !dbg !5107
  %144 = load i64, i64* %total_out132, align 8, !dbg !5107
  %145 = load i64*, i64** %size.addr, align 8, !dbg !5108
  store i64 %144, i64* %145, align 8, !dbg !5109
  %146 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5110
  %stream133 = getelementptr inbounds %struct.zip, %struct.zip* %146, i32 0, i32 20, !dbg !5111
  %total_out134 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream133, i32 0, i32 5, !dbg !5112
  %147 = load i64, i64* %total_out134, align 8, !dbg !5112
  %148 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5113
  %entry_uncompressed_bytes_read = getelementptr inbounds %struct.zip, %struct.zip* %148, i32 0, i32 12, !dbg !5114
  %149 = load i64, i64* %entry_uncompressed_bytes_read, align 8, !dbg !5115
  %add135 = add i64 %149, %147, !dbg !5115
  store i64 %add135, i64* %entry_uncompressed_bytes_read, align 8, !dbg !5115
  %150 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5116
  %uncompressed_buffer136 = getelementptr inbounds %struct.zip, %struct.zip* %150, i32 0, i32 18, !dbg !5117
  %151 = load i8*, i8** %uncompressed_buffer136, align 8, !dbg !5117
  %152 = load i8**, i8*** %buff.addr, align 8, !dbg !5118
  store i8* %151, i8** %152, align 8, !dbg !5119
  %153 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5120
  %end_of_entry137 = getelementptr inbounds %struct.zip, %struct.zip* %153, i32 0, i32 17, !dbg !5122
  %154 = load i8, i8* %end_of_entry137, align 2, !dbg !5122
  %conv138 = sext i8 %154 to i32, !dbg !5120
  %tobool139 = icmp ne i32 %conv138, 0, !dbg !5120
  br i1 %tobool139, label %land.lhs.true140, label %if.end150, !dbg !5123

land.lhs.true140:                                 ; preds = %if.end126
  %155 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5124
  %hctx_valid141 = getelementptr inbounds %struct.zip, %struct.zip* %155, i32 0, i32 38, !dbg !5126
  %156 = load i8, i8* %hctx_valid141, align 4, !dbg !5126
  %conv142 = sext i8 %156 to i32, !dbg !5124
  %tobool143 = icmp ne i32 %conv142, 0, !dbg !5124
  br i1 %tobool143, label %if.then144, label %if.end150, !dbg !5127

if.then144:                                       ; preds = %land.lhs.true140
  %157 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5128
  %call145 = call i32 @check_authentication_code(%struct.archive_read* %157, i8* null), !dbg !5130
  store i32 %call145, i32* %r, align 4, !dbg !5131
  %158 = load i32, i32* %r, align 4, !dbg !5132
  %cmp146 = icmp ne i32 %158, 0, !dbg !5134
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !5135

if.then148:                                       ; preds = %if.then144
  %159 = load i32, i32* %r, align 4, !dbg !5136
  store i32 %159, i32* %retval, align 4, !dbg !5137
  br label %return, !dbg !5137

if.end149:                                        ; preds = %if.then144
  br label %if.end150, !dbg !5138

if.end150:                                        ; preds = %if.end149, %land.lhs.true140, %if.end126
  %160 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5139
  %end_of_entry151 = getelementptr inbounds %struct.zip, %struct.zip* %160, i32 0, i32 17, !dbg !5141
  %161 = load i8, i8* %end_of_entry151, align 2, !dbg !5141
  %conv152 = sext i8 %161 to i32, !dbg !5139
  %tobool153 = icmp ne i32 %conv152, 0, !dbg !5139
  br i1 %tobool153, label %land.lhs.true154, label %if.end228, !dbg !5142

land.lhs.true154:                                 ; preds = %if.end150
  %162 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5143
  %entry155 = getelementptr inbounds %struct.zip, %struct.zip* %162, i32 0, i32 9, !dbg !5145
  %163 = load %struct.zip_entry*, %struct.zip_entry** %entry155, align 8, !dbg !5145
  %zip_flags156 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %163, i32 0, i32 13, !dbg !5146
  %164 = load i16, i16* %zip_flags156, align 2, !dbg !5146
  %conv157 = zext i16 %164 to i32, !dbg !5143
  %and158 = and i32 %conv157, 8, !dbg !5147
  %tobool159 = icmp ne i32 %and158, 0, !dbg !5147
  br i1 %tobool159, label %if.then160, label %if.end228, !dbg !5148

if.then160:                                       ; preds = %land.lhs.true154
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5149, metadata !578), !dbg !5151
  %165 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5152
  %call161 = call i8* @__archive_read_ahead(%struct.archive_read* %165, i64 24, i64* null), !dbg !5154
  store i8* %call161, i8** %p, align 8, !dbg !5155
  %cmp162 = icmp eq i8* null, %call161, !dbg !5156
  br i1 %cmp162, label %if.then164, label %if.end166, !dbg !5157

if.then164:                                       ; preds = %if.then160
  %166 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5158
  %archive165 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %166, i32 0, i32 0, !dbg !5160
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive165, i32 84, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.74, i32 0, i32 0)), !dbg !5161
  store i32 -30, i32* %retval, align 4, !dbg !5162
  br label %return, !dbg !5162

if.end166:                                        ; preds = %if.then160
  %167 = load i8*, i8** %p, align 8, !dbg !5163
  %arrayidx = getelementptr inbounds i8, i8* %167, i64 0, !dbg !5163
  %168 = load i8, i8* %arrayidx, align 1, !dbg !5163
  %conv167 = sext i8 %168 to i32, !dbg !5163
  %cmp168 = icmp eq i32 %conv167, 80, !dbg !5165
  br i1 %cmp168, label %land.lhs.true170, label %if.end187, !dbg !5166

land.lhs.true170:                                 ; preds = %if.end166
  %169 = load i8*, i8** %p, align 8, !dbg !5167
  %arrayidx171 = getelementptr inbounds i8, i8* %169, i64 1, !dbg !5167
  %170 = load i8, i8* %arrayidx171, align 1, !dbg !5167
  %conv172 = sext i8 %170 to i32, !dbg !5167
  %cmp173 = icmp eq i32 %conv172, 75, !dbg !5169
  br i1 %cmp173, label %land.lhs.true175, label %if.end187, !dbg !5170

land.lhs.true175:                                 ; preds = %land.lhs.true170
  %171 = load i8*, i8** %p, align 8, !dbg !5171
  %arrayidx176 = getelementptr inbounds i8, i8* %171, i64 2, !dbg !5171
  %172 = load i8, i8* %arrayidx176, align 1, !dbg !5171
  %conv177 = sext i8 %172 to i32, !dbg !5171
  %cmp178 = icmp eq i32 %conv177, 7, !dbg !5172
  br i1 %cmp178, label %land.lhs.true180, label %if.end187, !dbg !5173

land.lhs.true180:                                 ; preds = %land.lhs.true175
  %173 = load i8*, i8** %p, align 8, !dbg !5174
  %arrayidx181 = getelementptr inbounds i8, i8* %173, i64 3, !dbg !5174
  %174 = load i8, i8* %arrayidx181, align 1, !dbg !5174
  %conv182 = sext i8 %174 to i32, !dbg !5174
  %cmp183 = icmp eq i32 %conv182, 8, !dbg !5175
  br i1 %cmp183, label %if.then185, label %if.end187, !dbg !5176

if.then185:                                       ; preds = %land.lhs.true180
  %175 = load i8*, i8** %p, align 8, !dbg !5178
  %add.ptr186 = getelementptr inbounds i8, i8* %175, i64 4, !dbg !5178
  store i8* %add.ptr186, i8** %p, align 8, !dbg !5178
  %176 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5180
  %unconsumed = getelementptr inbounds %struct.zip, %struct.zip* %176, i32 0, i32 8, !dbg !5181
  store i64 4, i64* %unconsumed, align 8, !dbg !5182
  br label %if.end187, !dbg !5183

if.end187:                                        ; preds = %if.then185, %land.lhs.true180, %land.lhs.true175, %land.lhs.true170, %if.end166
  %177 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5184
  %entry188 = getelementptr inbounds %struct.zip, %struct.zip* %177, i32 0, i32 9, !dbg !5186
  %178 = load %struct.zip_entry*, %struct.zip_entry** %entry188, align 8, !dbg !5186
  %flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %178, i32 0, i32 16, !dbg !5187
  %179 = load i8, i8* %flags, align 2, !dbg !5187
  %conv189 = zext i8 %179 to i32, !dbg !5184
  %and190 = and i32 %conv189, 1, !dbg !5188
  %tobool191 = icmp ne i32 %and190, 0, !dbg !5188
  br i1 %tobool191, label %if.then192, label %if.else211, !dbg !5189

if.then192:                                       ; preds = %if.end187
  call void @llvm.dbg.declare(metadata i64* %compressed, metadata !5190, metadata !578), !dbg !5192
  call void @llvm.dbg.declare(metadata i64* %uncompressed, metadata !5193, metadata !578), !dbg !5194
  %180 = load i8*, i8** %p, align 8, !dbg !5195
  %call193 = call i32 @archive_le32dec(i8* %180), !dbg !5196
  %181 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5197
  %entry194 = getelementptr inbounds %struct.zip, %struct.zip* %181, i32 0, i32 9, !dbg !5198
  %182 = load %struct.zip_entry*, %struct.zip_entry** %entry194, align 8, !dbg !5198
  %cm_zlib_crc32 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %182, i32 0, i32 11, !dbg !5199
  store i32 %call193, i32* %cm_zlib_crc32, align 8, !dbg !5200
  %183 = load i8*, i8** %p, align 8, !dbg !5201
  %add.ptr195 = getelementptr inbounds i8, i8* %183, i64 4, !dbg !5202
  %call196 = call i64 @archive_le64dec(i8* %add.ptr195), !dbg !5203
  store i64 %call196, i64* %compressed, align 8, !dbg !5204
  %184 = load i8*, i8** %p, align 8, !dbg !5205
  %add.ptr197 = getelementptr inbounds i8, i8* %184, i64 12, !dbg !5206
  %call198 = call i64 @archive_le64dec(i8* %add.ptr197), !dbg !5207
  store i64 %call198, i64* %uncompressed, align 8, !dbg !5208
  %185 = load i64, i64* %compressed, align 8, !dbg !5209
  %cmp199 = icmp ugt i64 %185, 9223372036854775807, !dbg !5211
  br i1 %cmp199, label %if.then204, label %lor.lhs.false201, !dbg !5212

lor.lhs.false201:                                 ; preds = %if.then192
  %186 = load i64, i64* %uncompressed, align 8, !dbg !5213
  %cmp202 = icmp ugt i64 %186, 9223372036854775807, !dbg !5215
  br i1 %cmp202, label %if.then204, label %if.end206, !dbg !5216

if.then204:                                       ; preds = %lor.lhs.false201, %if.then192
  %187 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5217
  %archive205 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %187, i32 0, i32 0, !dbg !5219
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive205, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i32 0, i32 0)), !dbg !5220
  store i32 -25, i32* %retval, align 4, !dbg !5221
  br label %return, !dbg !5221

if.end206:                                        ; preds = %lor.lhs.false201
  %188 = load i64, i64* %compressed, align 8, !dbg !5222
  %189 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5223
  %entry207 = getelementptr inbounds %struct.zip, %struct.zip* %189, i32 0, i32 9, !dbg !5224
  %190 = load %struct.zip_entry*, %struct.zip_entry** %entry207, align 8, !dbg !5224
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %190, i32 0, i32 3, !dbg !5225
  store i64 %188, i64* %compressed_size, align 8, !dbg !5226
  %191 = load i64, i64* %uncompressed, align 8, !dbg !5227
  %192 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5228
  %entry208 = getelementptr inbounds %struct.zip, %struct.zip* %192, i32 0, i32 9, !dbg !5229
  %193 = load %struct.zip_entry*, %struct.zip_entry** %entry208, align 8, !dbg !5229
  %uncompressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %193, i32 0, i32 4, !dbg !5230
  store i64 %191, i64* %uncompressed_size, align 8, !dbg !5231
  %194 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5232
  %unconsumed209 = getelementptr inbounds %struct.zip, %struct.zip* %194, i32 0, i32 8, !dbg !5233
  %195 = load i64, i64* %unconsumed209, align 8, !dbg !5234
  %add210 = add i64 %195, 20, !dbg !5234
  store i64 %add210, i64* %unconsumed209, align 8, !dbg !5234
  br label %if.end227, !dbg !5235

if.else211:                                       ; preds = %if.end187
  %196 = load i8*, i8** %p, align 8, !dbg !5236
  %call212 = call i32 @archive_le32dec(i8* %196), !dbg !5238
  %197 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5239
  %entry213 = getelementptr inbounds %struct.zip, %struct.zip* %197, i32 0, i32 9, !dbg !5240
  %198 = load %struct.zip_entry*, %struct.zip_entry** %entry213, align 8, !dbg !5240
  %cm_zlib_crc32214 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %198, i32 0, i32 11, !dbg !5241
  store i32 %call212, i32* %cm_zlib_crc32214, align 8, !dbg !5242
  %199 = load i8*, i8** %p, align 8, !dbg !5243
  %add.ptr215 = getelementptr inbounds i8, i8* %199, i64 4, !dbg !5244
  %call216 = call i32 @archive_le32dec(i8* %add.ptr215), !dbg !5245
  %conv217 = zext i32 %call216 to i64, !dbg !5245
  %200 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5246
  %entry218 = getelementptr inbounds %struct.zip, %struct.zip* %200, i32 0, i32 9, !dbg !5247
  %201 = load %struct.zip_entry*, %struct.zip_entry** %entry218, align 8, !dbg !5247
  %compressed_size219 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %201, i32 0, i32 3, !dbg !5248
  store i64 %conv217, i64* %compressed_size219, align 8, !dbg !5249
  %202 = load i8*, i8** %p, align 8, !dbg !5250
  %add.ptr220 = getelementptr inbounds i8, i8* %202, i64 8, !dbg !5251
  %call221 = call i32 @archive_le32dec(i8* %add.ptr220), !dbg !5252
  %conv222 = zext i32 %call221 to i64, !dbg !5252
  %203 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5253
  %entry223 = getelementptr inbounds %struct.zip, %struct.zip* %203, i32 0, i32 9, !dbg !5254
  %204 = load %struct.zip_entry*, %struct.zip_entry** %entry223, align 8, !dbg !5254
  %uncompressed_size224 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %204, i32 0, i32 4, !dbg !5255
  store i64 %conv222, i64* %uncompressed_size224, align 8, !dbg !5256
  %205 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5257
  %unconsumed225 = getelementptr inbounds %struct.zip, %struct.zip* %205, i32 0, i32 8, !dbg !5258
  %206 = load i64, i64* %unconsumed225, align 8, !dbg !5259
  %add226 = add i64 %206, 12, !dbg !5259
  store i64 %add226, i64* %unconsumed225, align 8, !dbg !5259
  br label %if.end227

if.end227:                                        ; preds = %if.else211, %if.end206
  br label %if.end228, !dbg !5260

if.end228:                                        ; preds = %if.end227, %land.lhs.true154, %if.end150
  store i32 0, i32* %retval, align 4, !dbg !5261
  br label %return, !dbg !5261

return:                                           ; preds = %if.end228, %if.then204, %if.then164, %if.then148, %sw.default, %sw.bb98, %if.then22, %if.then9, %if.then5
  %207 = load i32, i32* %retval, align 4, !dbg !5262
  ret i32 %207, !dbg !5262
}

declare i8* @__archive_read_next_passphrase(%struct.archive_read*) #2

; Function Attrs: nounwind uwtable
define internal i32 @zip_alloc_decryption_buffer(%struct.archive_read* %a) #0 !dbg !508 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %zip = alloca %struct.zip*, align 8
  %bs = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5263, metadata !578), !dbg !5264
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !5265, metadata !578), !dbg !5266
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5267
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !5268
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !5268
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !5269
  %2 = load i8*, i8** %data, align 8, !dbg !5269
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !5270
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !5266
  call void @llvm.dbg.declare(metadata i64* %bs, metadata !5271, metadata !578), !dbg !5272
  store i64 262144, i64* %bs, align 8, !dbg !5272
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5273
  %decrypted_buffer = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 28, !dbg !5275
  %5 = load i8*, i8** %decrypted_buffer, align 8, !dbg !5275
  %cmp = icmp eq i8* %5, null, !dbg !5276
  br i1 %cmp, label %if.then, label %if.end5, !dbg !5277

if.then:                                          ; preds = %entry
  %6 = load i64, i64* %bs, align 8, !dbg !5278
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5280
  %decrypted_buffer_size = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 30, !dbg !5281
  store i64 %6, i64* %decrypted_buffer_size, align 8, !dbg !5282
  %8 = load i64, i64* %bs, align 8, !dbg !5283
  %call = call noalias i8* @malloc(i64 %8) #8, !dbg !5284
  %9 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5285
  %decrypted_buffer1 = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 28, !dbg !5286
  store i8* %call, i8** %decrypted_buffer1, align 8, !dbg !5287
  %10 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5288
  %decrypted_buffer2 = getelementptr inbounds %struct.zip, %struct.zip* %10, i32 0, i32 28, !dbg !5290
  %11 = load i8*, i8** %decrypted_buffer2, align 8, !dbg !5290
  %cmp3 = icmp eq i8* %11, null, !dbg !5291
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !5292

if.then4:                                         ; preds = %if.then
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5293
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %12, i32 0, i32 0, !dbg !5295
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i32 0, i32 0)), !dbg !5296
  store i32 -30, i32* %retval, align 4, !dbg !5297
  br label %return, !dbg !5297

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !5298

if.end5:                                          ; preds = %if.end, %entry
  %13 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5299
  %decrypted_buffer6 = getelementptr inbounds %struct.zip, %struct.zip* %13, i32 0, i32 28, !dbg !5300
  %14 = load i8*, i8** %decrypted_buffer6, align 8, !dbg !5300
  %15 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5301
  %decrypted_ptr = getelementptr inbounds %struct.zip, %struct.zip* %15, i32 0, i32 29, !dbg !5302
  store i8* %14, i8** %decrypted_ptr, align 8, !dbg !5303
  store i32 0, i32* %retval, align 4, !dbg !5304
  br label %return, !dbg !5304

return:                                           ; preds = %if.end5, %if.then4
  %16 = load i32, i32* %retval, align 4, !dbg !5305
  ret i32 %16, !dbg !5305
}

; Function Attrs: nounwind uwtable
define internal i32 @trad_enc_init(%struct.trad_enc_ctx* %ctx, i8* %pw, i64 %pw_len, i8* %key, i64 %key_len, i8* %crcchk) #0 !dbg !510 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.trad_enc_ctx*, align 8
  %pw.addr = alloca i8*, align 8
  %pw_len.addr = alloca i64, align 8
  %key.addr = alloca i8*, align 8
  %key_len.addr = alloca i64, align 8
  %crcchk.addr = alloca i8*, align 8
  %header = alloca [12 x i8], align 1
  store %struct.trad_enc_ctx* %ctx, %struct.trad_enc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.trad_enc_ctx** %ctx.addr, metadata !5306, metadata !578), !dbg !5307
  store i8* %pw, i8** %pw.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pw.addr, metadata !5308, metadata !578), !dbg !5309
  store i64 %pw_len, i64* %pw_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pw_len.addr, metadata !5310, metadata !578), !dbg !5311
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5312, metadata !578), !dbg !5313
  store i64 %key_len, i64* %key_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %key_len.addr, metadata !5314, metadata !578), !dbg !5315
  store i8* %crcchk, i8** %crcchk.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %crcchk.addr, metadata !5316, metadata !578), !dbg !5317
  call void @llvm.dbg.declare(metadata [12 x i8]* %header, metadata !5318, metadata !578), !dbg !5322
  %0 = load i64, i64* %key_len.addr, align 8, !dbg !5323
  %cmp = icmp ult i64 %0, 12, !dbg !5325
  br i1 %cmp, label %if.then, label %if.end, !dbg !5326

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %crcchk.addr, align 8, !dbg !5327
  store i8 -1, i8* %1, align 1, !dbg !5329
  store i32 -1, i32* %retval, align 4, !dbg !5330
  br label %return, !dbg !5330

if.end:                                           ; preds = %entry
  %2 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5331
  %keys = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %2, i32 0, i32 0, !dbg !5332
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %keys, i64 0, i64 0, !dbg !5331
  store i32 305419896, i32* %arrayidx, align 4, !dbg !5333
  %3 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5334
  %keys1 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %3, i32 0, i32 0, !dbg !5335
  %arrayidx2 = getelementptr inbounds [3 x i32], [3 x i32]* %keys1, i64 0, i64 1, !dbg !5334
  store i32 591751049, i32* %arrayidx2, align 4, !dbg !5336
  %4 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5337
  %keys3 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %4, i32 0, i32 0, !dbg !5338
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %keys3, i64 0, i64 2, !dbg !5337
  store i32 878082192, i32* %arrayidx4, align 4, !dbg !5339
  br label %for.cond, !dbg !5340

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i64, i64* %pw_len.addr, align 8, !dbg !5341
  %tobool = icmp ne i64 %5, 0, !dbg !5345
  br i1 %tobool, label %for.body, label %for.end, !dbg !5345

for.body:                                         ; preds = %for.cond
  %6 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5346
  %7 = load i8*, i8** %pw.addr, align 8, !dbg !5347
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5347
  store i8* %incdec.ptr, i8** %pw.addr, align 8, !dbg !5347
  %8 = load i8, i8* %7, align 1, !dbg !5348
  call void @trad_enc_update_keys(%struct.trad_enc_ctx* %6, i8 zeroext %8), !dbg !5349
  br label %for.inc, !dbg !5349

for.inc:                                          ; preds = %for.body
  %9 = load i64, i64* %pw_len.addr, align 8, !dbg !5350
  %dec = add i64 %9, -1, !dbg !5350
  store i64 %dec, i64* %pw_len.addr, align 8, !dbg !5350
  br label %for.cond, !dbg !5352

for.end:                                          ; preds = %for.cond
  %10 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5353
  %11 = load i8*, i8** %key.addr, align 8, !dbg !5354
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %header, i32 0, i32 0, !dbg !5355
  call void @trad_enc_decrypt_update(%struct.trad_enc_ctx* %10, i8* %11, i64 12, i8* %arraydecay, i64 12), !dbg !5356
  %arrayidx5 = getelementptr inbounds [12 x i8], [12 x i8]* %header, i64 0, i64 11, !dbg !5357
  %12 = load i8, i8* %arrayidx5, align 1, !dbg !5357
  %13 = load i8*, i8** %crcchk.addr, align 8, !dbg !5358
  store i8 %12, i8* %13, align 1, !dbg !5359
  store i32 0, i32* %retval, align 4, !dbg !5360
  br label %return, !dbg !5360

return:                                           ; preds = %for.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !5361
  ret i32 %14, !dbg !5361
}

; Function Attrs: nounwind uwtable
define internal void @trad_enc_update_keys(%struct.trad_enc_ctx* %ctx, i8 zeroext %c) #0 !dbg !514 {
entry:
  %ctx.addr = alloca %struct.trad_enc_ctx*, align 8
  %c.addr = alloca i8, align 1
  %t = alloca i8, align 1
  store %struct.trad_enc_ctx* %ctx, %struct.trad_enc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.trad_enc_ctx** %ctx.addr, metadata !5362, metadata !578), !dbg !5363
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !5364, metadata !578), !dbg !5365
  call void @llvm.dbg.declare(metadata i8* %t, metadata !5366, metadata !578), !dbg !5367
  %0 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5368
  %keys = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %0, i32 0, i32 0, !dbg !5368
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %keys, i64 0, i64 0, !dbg !5368
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5368
  %conv = zext i32 %1 to i64, !dbg !5368
  %xor = xor i64 %conv, 4294967295, !dbg !5368
  %call = call i64 @cm_zlib_crc32(i64 %xor, i8* %c.addr, i32 1), !dbg !5368
  %xor1 = xor i64 %call, 4294967295, !dbg !5368
  %conv2 = trunc i64 %xor1 to i32, !dbg !5368
  %2 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5369
  %keys3 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %2, i32 0, i32 0, !dbg !5370
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %keys3, i64 0, i64 0, !dbg !5369
  store i32 %conv2, i32* %arrayidx4, align 4, !dbg !5371
  %3 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5372
  %keys5 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %3, i32 0, i32 0, !dbg !5373
  %arrayidx6 = getelementptr inbounds [3 x i32], [3 x i32]* %keys5, i64 0, i64 1, !dbg !5372
  %4 = load i32, i32* %arrayidx6, align 4, !dbg !5372
  %5 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5374
  %keys7 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %5, i32 0, i32 0, !dbg !5375
  %arrayidx8 = getelementptr inbounds [3 x i32], [3 x i32]* %keys7, i64 0, i64 0, !dbg !5374
  %6 = load i32, i32* %arrayidx8, align 4, !dbg !5374
  %and = and i32 %6, 255, !dbg !5376
  %add = add i32 %4, %and, !dbg !5377
  %conv9 = zext i32 %add to i64, !dbg !5378
  %mul = mul nsw i64 %conv9, 134775813, !dbg !5379
  %add10 = add nsw i64 %mul, 1, !dbg !5380
  %conv11 = trunc i64 %add10 to i32, !dbg !5378
  %7 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5381
  %keys12 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %7, i32 0, i32 0, !dbg !5382
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %keys12, i64 0, i64 1, !dbg !5381
  store i32 %conv11, i32* %arrayidx13, align 4, !dbg !5383
  %8 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5384
  %keys14 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %8, i32 0, i32 0, !dbg !5385
  %arrayidx15 = getelementptr inbounds [3 x i32], [3 x i32]* %keys14, i64 0, i64 1, !dbg !5384
  %9 = load i32, i32* %arrayidx15, align 4, !dbg !5384
  %shr = lshr i32 %9, 24, !dbg !5386
  %and16 = and i32 %shr, 255, !dbg !5387
  %conv17 = trunc i32 %and16 to i8, !dbg !5388
  store i8 %conv17, i8* %t, align 1, !dbg !5389
  %10 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5390
  %keys18 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %10, i32 0, i32 0, !dbg !5390
  %arrayidx19 = getelementptr inbounds [3 x i32], [3 x i32]* %keys18, i64 0, i64 2, !dbg !5390
  %11 = load i32, i32* %arrayidx19, align 4, !dbg !5390
  %conv20 = zext i32 %11 to i64, !dbg !5390
  %xor21 = xor i64 %conv20, 4294967295, !dbg !5390
  %call22 = call i64 @cm_zlib_crc32(i64 %xor21, i8* %t, i32 1), !dbg !5390
  %xor23 = xor i64 %call22, 4294967295, !dbg !5390
  %conv24 = trunc i64 %xor23 to i32, !dbg !5390
  %12 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5391
  %keys25 = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %12, i32 0, i32 0, !dbg !5392
  %arrayidx26 = getelementptr inbounds [3 x i32], [3 x i32]* %keys25, i64 0, i64 2, !dbg !5391
  store i32 %conv24, i32* %arrayidx26, align 4, !dbg !5393
  ret void, !dbg !5394
}

; Function Attrs: nounwind uwtable
define internal void @trad_enc_decrypt_update(%struct.trad_enc_ctx* %ctx, i8* %in, i64 %in_len, i8* %out, i64 %out_len) #0 !dbg !517 {
entry:
  %ctx.addr = alloca %struct.trad_enc_ctx*, align 8
  %in.addr = alloca i8*, align 8
  %in_len.addr = alloca i64, align 8
  %out.addr = alloca i8*, align 8
  %out_len.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %max = alloca i32, align 4
  %t = alloca i8, align 1
  store %struct.trad_enc_ctx* %ctx, %struct.trad_enc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.trad_enc_ctx** %ctx.addr, metadata !5395, metadata !578), !dbg !5396
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !5397, metadata !578), !dbg !5398
  store i64 %in_len, i64* %in_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %in_len.addr, metadata !5399, metadata !578), !dbg !5400
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !5401, metadata !578), !dbg !5402
  store i64 %out_len, i64* %out_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %out_len.addr, metadata !5403, metadata !578), !dbg !5404
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5405, metadata !578), !dbg !5406
  call void @llvm.dbg.declare(metadata i32* %max, metadata !5407, metadata !578), !dbg !5408
  %0 = load i64, i64* %in_len.addr, align 8, !dbg !5409
  %1 = load i64, i64* %out_len.addr, align 8, !dbg !5410
  %cmp = icmp ult i64 %0, %1, !dbg !5411
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5412

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %in_len.addr, align 8, !dbg !5413
  br label %cond.end, !dbg !5415

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %out_len.addr, align 8, !dbg !5416
  br label %cond.end, !dbg !5418

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5419
  %conv = trunc i64 %cond to i32, !dbg !5421
  store i32 %conv, i32* %max, align 4, !dbg !5422
  store i32 0, i32* %i, align 4, !dbg !5423
  br label %for.cond, !dbg !5425

for.cond:                                         ; preds = %for.inc, %cond.end
  %4 = load i32, i32* %i, align 4, !dbg !5426
  %5 = load i32, i32* %max, align 4, !dbg !5429
  %cmp1 = icmp ult i32 %4, %5, !dbg !5430
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5431

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %t, metadata !5432, metadata !578), !dbg !5434
  %6 = load i32, i32* %i, align 4, !dbg !5435
  %idxprom = zext i32 %6 to i64, !dbg !5436
  %7 = load i8*, i8** %in.addr, align 8, !dbg !5436
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !5436
  %8 = load i8, i8* %arrayidx, align 1, !dbg !5436
  %conv3 = zext i8 %8 to i32, !dbg !5436
  %9 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5437
  %call = call zeroext i8 @trad_enc_decrypt_byte(%struct.trad_enc_ctx* %9), !dbg !5438
  %conv4 = zext i8 %call to i32, !dbg !5438
  %xor = xor i32 %conv3, %conv4, !dbg !5439
  %conv5 = trunc i32 %xor to i8, !dbg !5436
  store i8 %conv5, i8* %t, align 1, !dbg !5434
  %10 = load i8, i8* %t, align 1, !dbg !5440
  %11 = load i32, i32* %i, align 4, !dbg !5441
  %idxprom6 = zext i32 %11 to i64, !dbg !5442
  %12 = load i8*, i8** %out.addr, align 8, !dbg !5442
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %idxprom6, !dbg !5442
  store i8 %10, i8* %arrayidx7, align 1, !dbg !5443
  %13 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5444
  %14 = load i8, i8* %t, align 1, !dbg !5445
  call void @trad_enc_update_keys(%struct.trad_enc_ctx* %13, i8 zeroext %14), !dbg !5446
  br label %for.inc, !dbg !5447

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !5448
  %inc = add i32 %15, 1, !dbg !5448
  store i32 %inc, i32* %i, align 4, !dbg !5448
  br label %for.cond, !dbg !5450

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5451
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @trad_enc_decrypt_byte(%struct.trad_enc_ctx* %ctx) #0 !dbg !520 {
entry:
  %ctx.addr = alloca %struct.trad_enc_ctx*, align 8
  %temp = alloca i32, align 4
  store %struct.trad_enc_ctx* %ctx, %struct.trad_enc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.trad_enc_ctx** %ctx.addr, metadata !5452, metadata !578), !dbg !5453
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !5454, metadata !578), !dbg !5455
  %0 = load %struct.trad_enc_ctx*, %struct.trad_enc_ctx** %ctx.addr, align 8, !dbg !5456
  %keys = getelementptr inbounds %struct.trad_enc_ctx, %struct.trad_enc_ctx* %0, i32 0, i32 0, !dbg !5457
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %keys, i64 0, i64 2, !dbg !5456
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5456
  %or = or i32 %1, 2, !dbg !5458
  store i32 %or, i32* %temp, align 4, !dbg !5455
  %2 = load i32, i32* %temp, align 4, !dbg !5459
  %3 = load i32, i32* %temp, align 4, !dbg !5460
  %xor = xor i32 %3, 1, !dbg !5461
  %mul = mul i32 %2, %xor, !dbg !5462
  %shr = lshr i32 %mul, 8, !dbg !5463
  %conv = trunc i32 %shr to i8, !dbg !5464
  %conv1 = zext i8 %conv to i32, !dbg !5464
  %and = and i32 %conv1, 255, !dbg !5465
  %conv2 = trunc i32 %and to i8, !dbg !5464
  ret i8 %conv2, !dbg !5466
}

; Function Attrs: nounwind uwtable
define internal i32 @check_authentication_code(%struct.archive_read* %a, i8* %_p) #0 !dbg !524 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %_p.addr = alloca i8*, align 8
  %zip = alloca %struct.zip*, align 8
  %p = alloca i8*, align 8
  %hmac = alloca [20 x i8], align 16
  %hmac_len = alloca i64, align 8
  %cmp = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5467, metadata !578), !dbg !5468
  store i8* %_p, i8** %_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_p.addr, metadata !5469, metadata !578), !dbg !5470
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !5471, metadata !578), !dbg !5472
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5473
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !5474
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !5474
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !5475
  %2 = load i8*, i8** %data, align 8, !dbg !5475
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !5476
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !5472
  %4 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5477
  %hctx_valid = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 38, !dbg !5479
  %5 = load i8, i8* %hctx_valid, align 4, !dbg !5479
  %tobool = icmp ne i8 %5, 0, !dbg !5477
  br i1 %tobool, label %if.then, label %if.end13, !dbg !5480

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5481, metadata !578), !dbg !5483
  call void @llvm.dbg.declare(metadata [20 x i8]* %hmac, metadata !5484, metadata !578), !dbg !5488
  call void @llvm.dbg.declare(metadata i64* %hmac_len, metadata !5489, metadata !578), !dbg !5490
  store i64 20, i64* %hmac_len, align 8, !dbg !5490
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !5491, metadata !578), !dbg !5492
  %6 = load void (i32*, i8*, i64*)*, void (i32*, i8*, i64*)** getelementptr inbounds (%struct.archive_hmac, %struct.archive_hmac* @__archive_hmac, i32 0, i32 2), align 8, !dbg !5493
  %7 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !5493
  %hctx = getelementptr inbounds %struct.zip, %struct.zip* %7, i32 0, i32 37, !dbg !5493
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %hmac, i32 0, i32 0, !dbg !5493
  call void %6(i32* %hctx, i8* %arraydecay, i64* %hmac_len), !dbg !5493
  %8 = load i8*, i8** %_p.addr, align 8, !dbg !5494
  %cmp1 = icmp eq i8* %8, null, !dbg !5496
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !5497

if.then2:                                         ; preds = %if.then
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5498
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %9, i64 10, i64* null), !dbg !5500
  store i8* %call, i8** %p, align 8, !dbg !5501
  %10 = load i8*, i8** %p, align 8, !dbg !5502
  %cmp3 = icmp eq i8* %10, null, !dbg !5504
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !5505

if.then4:                                         ; preds = %if.then2
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5506
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !5508
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0)), !dbg !5509
  store i32 -30, i32* %retval, align 4, !dbg !5510
  br label %return, !dbg !5510

if.end:                                           ; preds = %if.then2
  br label %if.end5, !dbg !5511

if.else:                                          ; preds = %if.then
  %12 = load i8*, i8** %_p.addr, align 8, !dbg !5512
  store i8* %12, i8** %p, align 8, !dbg !5514
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end
  %arraydecay6 = getelementptr inbounds [20 x i8], [20 x i8]* %hmac, i32 0, i32 0, !dbg !5515
  %13 = load i8*, i8** %p, align 8, !dbg !5516
  %call7 = call i32 @memcmp(i8* %arraydecay6, i8* %13, i64 10) #9, !dbg !5517
  store i32 %call7, i32* %cmp, align 4, !dbg !5518
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5519
  %call8 = call i64 @__archive_read_consume(%struct.archive_read* %14, i64 10), !dbg !5520
  %15 = load i32, i32* %cmp, align 4, !dbg !5521
  %cmp9 = icmp ne i32 %15, 0, !dbg !5523
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !5524

if.then10:                                        ; preds = %if.end5
  %16 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5525
  %archive11 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %16, i32 0, i32 0, !dbg !5527
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive11, i32 -1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.69, i32 0, i32 0)), !dbg !5528
  store i32 -20, i32* %retval, align 4, !dbg !5529
  br label %return, !dbg !5529

if.end12:                                         ; preds = %if.end5
  br label %if.end13, !dbg !5530

if.end13:                                         ; preds = %if.end12, %entry
  store i32 0, i32* %retval, align 4, !dbg !5531
  br label %return, !dbg !5531

return:                                           ; preds = %if.end13, %if.then10, %if.then4
  %17 = load i32, i32* %retval, align 4, !dbg !5532
  ret i32 %17, !dbg !5532
}

; Function Attrs: nounwind uwtable
define internal i32 @zip_deflate_init(%struct.archive_read* %a, %struct.zip* %zip) #0 !dbg !528 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %zip.addr = alloca %struct.zip*, align 8
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5533, metadata !578), !dbg !5534
  store %struct.zip* %zip, %struct.zip** %zip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip** %zip.addr, metadata !5535, metadata !578), !dbg !5536
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5537, metadata !578), !dbg !5538
  %0 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5539
  %decompress_init = getelementptr inbounds %struct.zip, %struct.zip* %0, i32 0, i32 16, !dbg !5541
  %1 = load i8, i8* %decompress_init, align 1, !dbg !5541
  %tobool = icmp ne i8 %1, 0, !dbg !5539
  br i1 %tobool, label %if.end9, label %if.then, !dbg !5542

if.then:                                          ; preds = %entry
  %2 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5543
  %stream_valid = getelementptr inbounds %struct.zip, %struct.zip* %2, i32 0, i32 21, !dbg !5546
  %3 = load i8, i8* %stream_valid, align 8, !dbg !5546
  %tobool1 = icmp ne i8 %3, 0, !dbg !5543
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5547

if.then2:                                         ; preds = %if.then
  %4 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5548
  %stream = getelementptr inbounds %struct.zip, %struct.zip* %4, i32 0, i32 20, !dbg !5549
  %call = call i32 @cm_zlib_inflateReset(%struct.z_stream_s* %stream), !dbg !5550
  store i32 %call, i32* %r, align 4, !dbg !5551
  br label %if.end, !dbg !5552

if.else:                                          ; preds = %if.then
  %5 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5553
  %stream3 = getelementptr inbounds %struct.zip, %struct.zip* %5, i32 0, i32 20, !dbg !5553
  %call4 = call i32 @cm_zlib_inflateInit2_(%struct.z_stream_s* %stream3, i32 -15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i32 112), !dbg !5553
  store i32 %call4, i32* %r, align 4, !dbg !5554
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %6 = load i32, i32* %r, align 4, !dbg !5555
  %cmp = icmp ne i32 %6, 0, !dbg !5557
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !5558

if.then5:                                         ; preds = %if.end
  %7 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5559
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %7, i32 0, i32 0, !dbg !5561
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.76, i32 0, i32 0)), !dbg !5562
  store i32 -30, i32* %retval, align 4, !dbg !5563
  br label %return, !dbg !5563

if.end6:                                          ; preds = %if.end
  %8 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5564
  %stream_valid7 = getelementptr inbounds %struct.zip, %struct.zip* %8, i32 0, i32 21, !dbg !5565
  store i8 1, i8* %stream_valid7, align 8, !dbg !5566
  %9 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5567
  %decompress_init8 = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 16, !dbg !5568
  store i8 1, i8* %decompress_init8, align 1, !dbg !5569
  br label %if.end9, !dbg !5570

if.end9:                                          ; preds = %if.end6, %entry
  store i32 0, i32* %retval, align 4, !dbg !5571
  br label %return, !dbg !5571

return:                                           ; preds = %if.end9, %if.then5
  %10 = load i32, i32* %retval, align 4, !dbg !5572
  ret i32 %10, !dbg !5572
}

declare i32 @cm_zlib_inflate(%struct.z_stream_s*, i32) #2

declare i32 @cm_zlib_inflateReset(%struct.z_stream_s*) #2

declare i32 @cm_zlib_inflateInit2_(%struct.z_stream_s*, i32, i8*, i32) #2

declare i32 @cm_zlib_inflateEnd(%struct.z_stream_s*) #2

declare i64 @__archive_read_seek(%struct.archive_read*, i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_eocd(%struct.zip* %zip, i8* %p, i64 %current_offset) #0 !dbg !536 {
entry:
  %retval = alloca i32, align 4
  %zip.addr = alloca %struct.zip*, align 8
  %p.addr = alloca i8*, align 8
  %current_offset.addr = alloca i64, align 8
  store %struct.zip* %zip, %struct.zip** %zip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip** %zip.addr, metadata !5573, metadata !578), !dbg !5574
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5575, metadata !578), !dbg !5576
  store i64 %current_offset, i64* %current_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %current_offset.addr, metadata !5577, metadata !578), !dbg !5578
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5579
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 4, !dbg !5581
  %call = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !5582
  %conv = zext i16 %call to i32, !dbg !5582
  %cmp = icmp ne i32 %conv, 0, !dbg !5583
  br i1 %cmp, label %if.then, label %if.end, !dbg !5584

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5585
  br label %return, !dbg !5585

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !5586
  %add.ptr2 = getelementptr inbounds i8, i8* %1, i64 4, !dbg !5588
  %call3 = call zeroext i16 @archive_le16dec(i8* %add.ptr2), !dbg !5589
  %conv4 = zext i16 %call3 to i32, !dbg !5589
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5590
  %add.ptr5 = getelementptr inbounds i8, i8* %2, i64 6, !dbg !5591
  %call6 = call zeroext i16 @archive_le16dec(i8* %add.ptr5), !dbg !5592
  %conv7 = zext i16 %call6 to i32, !dbg !5594
  %cmp8 = icmp ne i32 %conv4, %conv7, !dbg !5595
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !5596

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5597
  br label %return, !dbg !5597

if.end11:                                         ; preds = %if.end
  %3 = load i8*, i8** %p.addr, align 8, !dbg !5598
  %add.ptr12 = getelementptr inbounds i8, i8* %3, i64 10, !dbg !5600
  %call13 = call zeroext i16 @archive_le16dec(i8* %add.ptr12), !dbg !5601
  %conv14 = zext i16 %call13 to i32, !dbg !5601
  %4 = load i8*, i8** %p.addr, align 8, !dbg !5602
  %add.ptr15 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !5603
  %call16 = call zeroext i16 @archive_le16dec(i8* %add.ptr15), !dbg !5604
  %conv17 = zext i16 %call16 to i32, !dbg !5606
  %cmp18 = icmp ne i32 %conv14, %conv17, !dbg !5607
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !5608

if.then20:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !5609
  br label %return, !dbg !5609

if.end21:                                         ; preds = %if.end11
  %5 = load i8*, i8** %p.addr, align 8, !dbg !5610
  %add.ptr22 = getelementptr inbounds i8, i8* %5, i64 16, !dbg !5612
  %call23 = call i32 @archive_le32dec(i8* %add.ptr22), !dbg !5613
  %6 = load i8*, i8** %p.addr, align 8, !dbg !5614
  %add.ptr24 = getelementptr inbounds i8, i8* %6, i64 12, !dbg !5615
  %call25 = call i32 @archive_le32dec(i8* %add.ptr24), !dbg !5616
  %add = add i32 %call23, %call25, !dbg !5618
  %conv26 = zext i32 %add to i64, !dbg !5613
  %7 = load i64, i64* %current_offset.addr, align 8, !dbg !5619
  %cmp27 = icmp sgt i64 %conv26, %7, !dbg !5620
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !5621

if.then29:                                        ; preds = %if.end21
  store i32 0, i32* %retval, align 4, !dbg !5622
  br label %return, !dbg !5622

if.end30:                                         ; preds = %if.end21
  %8 = load i8*, i8** %p.addr, align 8, !dbg !5623
  %add.ptr31 = getelementptr inbounds i8, i8* %8, i64 16, !dbg !5624
  %call32 = call i32 @archive_le32dec(i8* %add.ptr31), !dbg !5625
  %conv33 = zext i32 %call32 to i64, !dbg !5625
  %9 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5626
  %central_directory_offset = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 1, !dbg !5627
  store i64 %conv33, i64* %central_directory_offset, align 8, !dbg !5628
  store i32 32, i32* %retval, align 4, !dbg !5629
  br label %return, !dbg !5629

return:                                           ; preds = %if.end30, %if.then29, %if.then20, %if.then10, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5630
  ret i32 %10, !dbg !5630
}

; Function Attrs: nounwind uwtable
define internal void @read_zip64_eocd(%struct.archive_read* %a, %struct.zip* %zip, i8* %p) #0 !dbg !539 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %zip.addr = alloca %struct.zip*, align 8
  %p.addr = alloca i8*, align 8
  %eocd64_offset = alloca i64, align 8
  %eocd64_size = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5631, metadata !578), !dbg !5632
  store %struct.zip* %zip, %struct.zip** %zip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip** %zip.addr, metadata !5633, metadata !578), !dbg !5634
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5635, metadata !578), !dbg !5636
  call void @llvm.dbg.declare(metadata i64* %eocd64_offset, metadata !5637, metadata !578), !dbg !5638
  call void @llvm.dbg.declare(metadata i64* %eocd64_size, metadata !5639, metadata !578), !dbg !5640
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5641
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 4, !dbg !5643
  %call = call i32 @archive_le32dec(i8* %add.ptr), !dbg !5644
  %cmp = icmp ne i32 %call, 0, !dbg !5645
  br i1 %cmp, label %if.then, label %if.end, !dbg !5646

if.then:                                          ; preds = %entry
  br label %return, !dbg !5647

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !5648
  %add.ptr1 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !5650
  %call2 = call i32 @archive_le32dec(i8* %add.ptr1), !dbg !5651
  %cmp3 = icmp ne i32 %call2, 1, !dbg !5652
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5653

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !5654

if.end5:                                          ; preds = %if.end
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5655
  %add.ptr6 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !5656
  %call7 = call i64 @archive_le64dec(i8* %add.ptr6), !dbg !5657
  store i64 %call7, i64* %eocd64_offset, align 8, !dbg !5658
  %3 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5659
  %4 = load i64, i64* %eocd64_offset, align 8, !dbg !5661
  %call8 = call i64 @__archive_read_seek(%struct.archive_read* %3, i64 %4, i32 0), !dbg !5662
  %cmp9 = icmp slt i64 %call8, 0, !dbg !5663
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5664

if.then10:                                        ; preds = %if.end5
  br label %return, !dbg !5665

if.end11:                                         ; preds = %if.end5
  %5 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5666
  %call12 = call i8* @__archive_read_ahead(%struct.archive_read* %5, i64 56, i64* null), !dbg !5668
  store i8* %call12, i8** %p.addr, align 8, !dbg !5669
  %cmp13 = icmp eq i8* %call12, null, !dbg !5670
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5671

if.then14:                                        ; preds = %if.end11
  br label %return, !dbg !5672

if.end15:                                         ; preds = %if.end11
  %6 = load i8*, i8** %p.addr, align 8, !dbg !5673
  %add.ptr16 = getelementptr inbounds i8, i8* %6, i64 4, !dbg !5674
  %call17 = call i64 @archive_le64dec(i8* %add.ptr16), !dbg !5675
  %add = add i64 %call17, 12, !dbg !5676
  store i64 %add, i64* %eocd64_size, align 8, !dbg !5677
  %7 = load i64, i64* %eocd64_size, align 8, !dbg !5678
  %cmp18 = icmp slt i64 %7, 56, !dbg !5680
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !5681

lor.lhs.false:                                    ; preds = %if.end15
  %8 = load i64, i64* %eocd64_size, align 8, !dbg !5682
  %cmp19 = icmp sgt i64 %8, 16384, !dbg !5684
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5685

if.then20:                                        ; preds = %lor.lhs.false, %if.end15
  br label %return, !dbg !5686

if.end21:                                         ; preds = %lor.lhs.false
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5687
  %10 = load i64, i64* %eocd64_size, align 8, !dbg !5689
  %call22 = call i8* @__archive_read_ahead(%struct.archive_read* %9, i64 %10, i64* null), !dbg !5690
  store i8* %call22, i8** %p.addr, align 8, !dbg !5691
  %cmp23 = icmp eq i8* %call22, null, !dbg !5692
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !5693

if.then24:                                        ; preds = %if.end21
  br label %return, !dbg !5694

if.end25:                                         ; preds = %if.end21
  %11 = load i8*, i8** %p.addr, align 8, !dbg !5695
  %add.ptr26 = getelementptr inbounds i8, i8* %11, i64 16, !dbg !5697
  %call27 = call i32 @archive_le32dec(i8* %add.ptr26), !dbg !5698
  %cmp28 = icmp ne i32 %call27, 0, !dbg !5699
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !5700

if.then29:                                        ; preds = %if.end25
  br label %return, !dbg !5701

if.end30:                                         ; preds = %if.end25
  %12 = load i8*, i8** %p.addr, align 8, !dbg !5702
  %add.ptr31 = getelementptr inbounds i8, i8* %12, i64 20, !dbg !5704
  %call32 = call i32 @archive_le32dec(i8* %add.ptr31), !dbg !5705
  %cmp33 = icmp ne i32 %call32, 0, !dbg !5706
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !5707

if.then34:                                        ; preds = %if.end30
  br label %return, !dbg !5708

if.end35:                                         ; preds = %if.end30
  %13 = load i8*, i8** %p.addr, align 8, !dbg !5709
  %add.ptr36 = getelementptr inbounds i8, i8* %13, i64 24, !dbg !5711
  %call37 = call i64 @archive_le64dec(i8* %add.ptr36), !dbg !5712
  %14 = load i8*, i8** %p.addr, align 8, !dbg !5713
  %add.ptr38 = getelementptr inbounds i8, i8* %14, i64 32, !dbg !5714
  %call39 = call i64 @archive_le64dec(i8* %add.ptr38), !dbg !5715
  %cmp40 = icmp ne i64 %call37, %call39, !dbg !5717
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !5718

if.then41:                                        ; preds = %if.end35
  br label %return, !dbg !5719

if.end42:                                         ; preds = %if.end35
  %15 = load i8*, i8** %p.addr, align 8, !dbg !5720
  %add.ptr43 = getelementptr inbounds i8, i8* %15, i64 48, !dbg !5721
  %call44 = call i64 @archive_le64dec(i8* %add.ptr43), !dbg !5722
  %16 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5723
  %central_directory_offset = getelementptr inbounds %struct.zip, %struct.zip* %16, i32 0, i32 1, !dbg !5724
  store i64 %call44, i64* %central_directory_offset, align 8, !dbg !5725
  br label %return, !dbg !5726

return:                                           ; preds = %if.end42, %if.then41, %if.then34, %if.then29, %if.then24, %if.then20, %if.then14, %if.then10, %if.then4, %if.then
  ret void, !dbg !5727
}

; Function Attrs: nounwind uwtable
define internal i32 @slurp_central_directory(%struct.archive_read* %a, %struct.zip* %zip) #0 !dbg !543 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %zip.addr = alloca %struct.zip*, align 8
  %i = alloca i64, align 8
  %found = alloca i32, align 4
  %correction = alloca i64, align 8
  %bytes_avail = alloca i64, align 8
  %p = alloca i8*, align 8
  %zip_entry = alloca %struct.zip_entry*, align 8
  %filename_length = alloca i64, align 8
  %extra_length = alloca i64, align 8
  %comment_length = alloca i64, align 8
  %external_attributes = alloca i32, align 4
  %name = alloca i8*, align 8
  %r = alloca i8*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5729, metadata !578), !dbg !5730
  store %struct.zip* %zip, %struct.zip** %zip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip** %zip.addr, metadata !5731, metadata !578), !dbg !5732
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5733, metadata !578), !dbg !5734
  call void @llvm.dbg.declare(metadata i32* %found, metadata !5735, metadata !578), !dbg !5736
  call void @llvm.dbg.declare(metadata i64* %correction, metadata !5737, metadata !578), !dbg !5738
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !5739, metadata !578), !dbg !5740
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5741, metadata !578), !dbg !5742
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5743
  %1 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5745
  %central_directory_offset = getelementptr inbounds %struct.zip, %struct.zip* %1, i32 0, i32 1, !dbg !5746
  %2 = load i64, i64* %central_directory_offset, align 8, !dbg !5746
  %call = call i64 @__archive_read_seek(%struct.archive_read* %0, i64 %2, i32 0), !dbg !5747
  %cmp = icmp slt i64 %call, 0, !dbg !5748
  br i1 %cmp, label %if.then, label %if.end, !dbg !5749

if.then:                                          ; preds = %entry
  store i32 -30, i32* %retval, align 4, !dbg !5750
  br label %return, !dbg !5750

if.end:                                           ; preds = %entry
  store i32 0, i32* %found, align 4, !dbg !5751
  br label %while.cond, !dbg !5752

while.cond:                                       ; preds = %for.end, %if.end
  %3 = load i32, i32* %found, align 4, !dbg !5753
  %tobool = icmp ne i32 %3, 0, !dbg !5755
  %lnot = xor i1 %tobool, true, !dbg !5755
  br i1 %lnot, label %while.body, label %while.end, !dbg !5756

while.body:                                       ; preds = %while.cond
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5757
  %call1 = call i8* @__archive_read_ahead(%struct.archive_read* %4, i64 20, i64* %bytes_avail), !dbg !5760
  store i8* %call1, i8** %p, align 8, !dbg !5761
  %cmp2 = icmp eq i8* %call1, null, !dbg !5762
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5763

if.then3:                                         ; preds = %while.body
  store i32 -30, i32* %retval, align 4, !dbg !5764
  br label %return, !dbg !5764

if.end4:                                          ; preds = %while.body
  store i32 0, i32* %found, align 4, !dbg !5765
  store i64 0, i64* %i, align 8, !dbg !5767
  br label %for.cond, !dbg !5768

for.cond:                                         ; preds = %sw.epilog, %if.end4
  %5 = load i32, i32* %found, align 4, !dbg !5769
  %tobool5 = icmp ne i32 %5, 0, !dbg !5769
  br i1 %tobool5, label %land.end, label %land.rhs, !dbg !5772

land.rhs:                                         ; preds = %for.cond
  %6 = load i64, i64* %i, align 8, !dbg !5773
  %7 = load i64, i64* %bytes_avail, align 8, !dbg !5775
  %sub = sub nsw i64 %7, 4, !dbg !5776
  %cmp6 = icmp slt i64 %6, %sub, !dbg !5777
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %8 = phi i1 [ false, %for.cond ], [ %cmp6, %land.rhs ]
  br i1 %8, label %for.body, label %for.end, !dbg !5778

for.body:                                         ; preds = %land.end
  %9 = load i64, i64* %i, align 8, !dbg !5780
  %add = add nsw i64 %9, 3, !dbg !5782
  %10 = load i8*, i8** %p, align 8, !dbg !5783
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %add, !dbg !5783
  %11 = load i8, i8* %arrayidx, align 1, !dbg !5783
  %conv = sext i8 %11 to i32, !dbg !5783
  switch i32 %conv, label %sw.default [
    i32 80, label %sw.bb
    i32 75, label %sw.bb8
    i32 1, label %sw.bb10
    i32 2, label %sw.bb12
    i32 5, label %sw.bb20
    i32 6, label %sw.bb22
  ], !dbg !5784

sw.bb:                                            ; preds = %for.body
  %12 = load i64, i64* %i, align 8, !dbg !5785
  %add7 = add nsw i64 %12, 3, !dbg !5785
  store i64 %add7, i64* %i, align 8, !dbg !5785
  br label %sw.epilog, !dbg !5787

sw.bb8:                                           ; preds = %for.body
  %13 = load i64, i64* %i, align 8, !dbg !5788
  %add9 = add nsw i64 %13, 2, !dbg !5788
  store i64 %add9, i64* %i, align 8, !dbg !5788
  br label %sw.epilog, !dbg !5789

sw.bb10:                                          ; preds = %for.body
  %14 = load i64, i64* %i, align 8, !dbg !5790
  %add11 = add nsw i64 %14, 1, !dbg !5790
  store i64 %add11, i64* %i, align 8, !dbg !5790
  br label %sw.epilog, !dbg !5791

sw.bb12:                                          ; preds = %for.body
  %15 = load i8*, i8** %p, align 8, !dbg !5792
  %16 = load i64, i64* %i, align 8, !dbg !5794
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %16, !dbg !5795
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i64 4) #9, !dbg !5796
  %cmp14 = icmp eq i32 %call13, 0, !dbg !5797
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !5798

if.then16:                                        ; preds = %sw.bb12
  %17 = load i64, i64* %i, align 8, !dbg !5799
  %18 = load i8*, i8** %p, align 8, !dbg !5801
  %add.ptr17 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !5801
  store i8* %add.ptr17, i8** %p, align 8, !dbg !5801
  store i32 1, i32* %found, align 4, !dbg !5802
  br label %if.end19, !dbg !5803

if.else:                                          ; preds = %sw.bb12
  %19 = load i64, i64* %i, align 8, !dbg !5804
  %add18 = add nsw i64 %19, 4, !dbg !5804
  store i64 %add18, i64* %i, align 8, !dbg !5804
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then16
  br label %sw.epilog, !dbg !5805

sw.bb20:                                          ; preds = %for.body
  %20 = load i64, i64* %i, align 8, !dbg !5806
  %add21 = add nsw i64 %20, 1, !dbg !5806
  store i64 %add21, i64* %i, align 8, !dbg !5806
  br label %sw.epilog, !dbg !5807

sw.bb22:                                          ; preds = %for.body
  %21 = load i8*, i8** %p, align 8, !dbg !5808
  %22 = load i64, i64* %i, align 8, !dbg !5810
  %add.ptr23 = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !5811
  %call24 = call i32 @memcmp(i8* %add.ptr23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i64 4) #9, !dbg !5812
  %cmp25 = icmp eq i32 %call24, 0, !dbg !5813
  br i1 %cmp25, label %if.then27, label %if.else29, !dbg !5814

if.then27:                                        ; preds = %sw.bb22
  %23 = load i64, i64* %i, align 8, !dbg !5815
  %24 = load i8*, i8** %p, align 8, !dbg !5817
  %add.ptr28 = getelementptr inbounds i8, i8* %24, i64 %23, !dbg !5817
  store i8* %add.ptr28, i8** %p, align 8, !dbg !5817
  store i32 1, i32* %found, align 4, !dbg !5818
  br label %if.end39, !dbg !5819

if.else29:                                        ; preds = %sw.bb22
  %25 = load i8*, i8** %p, align 8, !dbg !5820
  %26 = load i64, i64* %i, align 8, !dbg !5823
  %add.ptr30 = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !5824
  %call31 = call i32 @memcmp(i8* %add.ptr30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i64 4) #9, !dbg !5825
  %cmp32 = icmp eq i32 %call31, 0, !dbg !5826
  br i1 %cmp32, label %if.then34, label %if.else36, !dbg !5825

if.then34:                                        ; preds = %if.else29
  %27 = load i64, i64* %i, align 8, !dbg !5827
  %28 = load i8*, i8** %p, align 8, !dbg !5829
  %add.ptr35 = getelementptr inbounds i8, i8* %28, i64 %27, !dbg !5829
  store i8* %add.ptr35, i8** %p, align 8, !dbg !5829
  store i32 1, i32* %found, align 4, !dbg !5830
  br label %if.end38, !dbg !5831

if.else36:                                        ; preds = %if.else29
  %29 = load i64, i64* %i, align 8, !dbg !5832
  %add37 = add nsw i64 %29, 1, !dbg !5832
  store i64 %add37, i64* %i, align 8, !dbg !5832
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then27
  br label %sw.epilog, !dbg !5833

sw.default:                                       ; preds = %for.body
  %30 = load i64, i64* %i, align 8, !dbg !5834
  %add40 = add nsw i64 %30, 4, !dbg !5834
  store i64 %add40, i64* %i, align 8, !dbg !5834
  br label %sw.epilog, !dbg !5835

sw.epilog:                                        ; preds = %sw.default, %if.end39, %sw.bb20, %if.end19, %sw.bb10, %sw.bb8, %sw.bb
  br label %for.cond, !dbg !5836

for.end:                                          ; preds = %land.end
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5838
  %32 = load i64, i64* %i, align 8, !dbg !5839
  %call41 = call i64 @__archive_read_consume(%struct.archive_read* %31, i64 %32), !dbg !5840
  br label %while.cond, !dbg !5841

while.end:                                        ; preds = %while.cond
  %33 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5843
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %33, i32 0, i32 0, !dbg !5844
  %call42 = call i64 @archive_filter_bytes(%struct.archive* %archive, i32 0), !dbg !5845
  %34 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5846
  %central_directory_offset43 = getelementptr inbounds %struct.zip, %struct.zip* %34, i32 0, i32 1, !dbg !5847
  %35 = load i64, i64* %central_directory_offset43, align 8, !dbg !5847
  %sub44 = sub nsw i64 %call42, %35, !dbg !5848
  store i64 %sub44, i64* %correction, align 8, !dbg !5849
  %36 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5850
  %tree = getelementptr inbounds %struct.zip, %struct.zip* %36, i32 0, i32 6, !dbg !5851
  call void @__archive_rb_tree_init(%struct.archive_rb_tree* %tree, %struct.archive_rb_tree_ops* @rb_ops), !dbg !5852
  %37 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5853
  %tree_rsrc = getelementptr inbounds %struct.zip, %struct.zip* %37, i32 0, i32 7, !dbg !5854
  call void @__archive_rb_tree_init(%struct.archive_rb_tree* %tree_rsrc, %struct.archive_rb_tree_ops* @rb_rsrc_ops), !dbg !5855
  %38 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5856
  %central_directory_entries_total = getelementptr inbounds %struct.zip, %struct.zip* %38, i32 0, i32 2, !dbg !5857
  store i64 0, i64* %central_directory_entries_total, align 8, !dbg !5858
  br label %while.body46, !dbg !5859

while.body46:                                     ; preds = %while.end, %if.end237
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %zip_entry, metadata !5860, metadata !578), !dbg !5862
  call void @llvm.dbg.declare(metadata i64* %filename_length, metadata !5863, metadata !578), !dbg !5864
  call void @llvm.dbg.declare(metadata i64* %extra_length, metadata !5865, metadata !578), !dbg !5866
  call void @llvm.dbg.declare(metadata i64* %comment_length, metadata !5867, metadata !578), !dbg !5868
  call void @llvm.dbg.declare(metadata i32* %external_attributes, metadata !5869, metadata !578), !dbg !5870
  call void @llvm.dbg.declare(metadata i8** %name, metadata !5871, metadata !578), !dbg !5872
  call void @llvm.dbg.declare(metadata i8** %r, metadata !5873, metadata !578), !dbg !5874
  %39 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5875
  %call47 = call i8* @__archive_read_ahead(%struct.archive_read* %39, i64 4, i64* null), !dbg !5877
  store i8* %call47, i8** %p, align 8, !dbg !5878
  %cmp48 = icmp eq i8* %call47, null, !dbg !5879
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !5880

if.then50:                                        ; preds = %while.body46
  store i32 -30, i32* %retval, align 4, !dbg !5881
  br label %return, !dbg !5881

if.end51:                                         ; preds = %while.body46
  %40 = load i8*, i8** %p, align 8, !dbg !5882
  %call52 = call i32 @memcmp(i8* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i64 4) #9, !dbg !5884
  %cmp53 = icmp eq i32 %call52, 0, !dbg !5885
  br i1 %cmp53, label %if.then58, label %lor.lhs.false, !dbg !5886

lor.lhs.false:                                    ; preds = %if.end51
  %41 = load i8*, i8** %p, align 8, !dbg !5887
  %call55 = call i32 @memcmp(i8* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i64 4) #9, !dbg !5889
  %cmp56 = icmp eq i32 %call55, 0, !dbg !5890
  br i1 %cmp56, label %if.then58, label %if.else59, !dbg !5891

if.then58:                                        ; preds = %lor.lhs.false, %if.end51
  br label %while.end241, !dbg !5893

if.else59:                                        ; preds = %lor.lhs.false
  %42 = load i8*, i8** %p, align 8, !dbg !5895
  %call60 = call i32 @memcmp(i8* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i64 4) #9, !dbg !5897
  %cmp61 = icmp ne i32 %call60, 0, !dbg !5898
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !5899

if.then63:                                        ; preds = %if.else59
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5900
  %archive64 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %43, i32 0, i32 0, !dbg !5902
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive64, i32 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.81, i32 0, i32 0)), !dbg !5903
  store i32 -30, i32* %retval, align 4, !dbg !5904
  br label %return, !dbg !5904

if.end65:                                         ; preds = %if.else59
  br label %if.end66

if.end66:                                         ; preds = %if.end65
  %44 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5905
  %call67 = call i8* @__archive_read_ahead(%struct.archive_read* %44, i64 46, i64* null), !dbg !5907
  store i8* %call67, i8** %p, align 8, !dbg !5908
  %cmp68 = icmp eq i8* %call67, null, !dbg !5909
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !5910

if.then70:                                        ; preds = %if.end66
  store i32 -30, i32* %retval, align 4, !dbg !5911
  br label %return, !dbg !5911

if.end71:                                         ; preds = %if.end66
  %call72 = call noalias i8* @calloc(i64 1, i64 144) #8, !dbg !5912
  %45 = bitcast i8* %call72 to %struct.zip_entry*, !dbg !5912
  store %struct.zip_entry* %45, %struct.zip_entry** %zip_entry, align 8, !dbg !5913
  %46 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5914
  %zip_entries = getelementptr inbounds %struct.zip, %struct.zip* %46, i32 0, i32 5, !dbg !5915
  %47 = load %struct.zip_entry*, %struct.zip_entry** %zip_entries, align 8, !dbg !5915
  %48 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5916
  %next = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %48, i32 0, i32 1, !dbg !5917
  store %struct.zip_entry* %47, %struct.zip_entry** %next, align 8, !dbg !5918
  %49 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5919
  %flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %49, i32 0, i32 16, !dbg !5920
  %50 = load i8, i8* %flags, align 2, !dbg !5921
  %conv73 = zext i8 %50 to i32, !dbg !5921
  %or = or i32 %conv73, 2, !dbg !5921
  %conv74 = trunc i32 %or to i8, !dbg !5921
  store i8 %conv74, i8* %flags, align 2, !dbg !5921
  %51 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5922
  %52 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5923
  %zip_entries75 = getelementptr inbounds %struct.zip, %struct.zip* %52, i32 0, i32 5, !dbg !5924
  store %struct.zip_entry* %51, %struct.zip_entry** %zip_entries75, align 8, !dbg !5925
  %53 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5926
  %central_directory_entries_total76 = getelementptr inbounds %struct.zip, %struct.zip* %53, i32 0, i32 2, !dbg !5927
  %54 = load i64, i64* %central_directory_entries_total76, align 8, !dbg !5928
  %inc = add i64 %54, 1, !dbg !5928
  store i64 %inc, i64* %central_directory_entries_total76, align 8, !dbg !5928
  %55 = load i8*, i8** %p, align 8, !dbg !5929
  %arrayidx77 = getelementptr inbounds i8, i8* %55, i64 5, !dbg !5929
  %56 = load i8, i8* %arrayidx77, align 1, !dbg !5929
  %57 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5930
  %system = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %57, i32 0, i32 15, !dbg !5931
  store i8 %56, i8* %system, align 1, !dbg !5932
  %58 = load i8*, i8** %p, align 8, !dbg !5933
  %add.ptr78 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !5934
  %call79 = call zeroext i16 @archive_le16dec(i8* %add.ptr78), !dbg !5935
  %59 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5936
  %zip_flags = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %59, i32 0, i32 13, !dbg !5937
  store i16 %call79, i16* %zip_flags, align 2, !dbg !5938
  %60 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5939
  %zip_flags80 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %60, i32 0, i32 13, !dbg !5941
  %61 = load i16, i16* %zip_flags80, align 2, !dbg !5941
  %conv81 = zext i16 %61 to i32, !dbg !5939
  %and = and i32 %conv81, 65, !dbg !5942
  %tobool82 = icmp ne i32 %and, 0, !dbg !5942
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !5943

if.then83:                                        ; preds = %if.end71
  %62 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !5944
  %has_encrypted_entries = getelementptr inbounds %struct.zip, %struct.zip* %62, i32 0, i32 4, !dbg !5946
  store i32 1, i32* %has_encrypted_entries, align 8, !dbg !5947
  br label %if.end84, !dbg !5948

if.end84:                                         ; preds = %if.then83, %if.end71
  %63 = load i8*, i8** %p, align 8, !dbg !5949
  %add.ptr85 = getelementptr inbounds i8, i8* %63, i64 10, !dbg !5950
  %call86 = call zeroext i16 @archive_le16dec(i8* %add.ptr85), !dbg !5951
  %conv87 = trunc i16 %call86 to i8, !dbg !5952
  %64 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5953
  %compression = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %64, i32 0, i32 14, !dbg !5954
  store i8 %conv87, i8* %compression, align 8, !dbg !5955
  %65 = load i8*, i8** %p, align 8, !dbg !5956
  %add.ptr88 = getelementptr inbounds i8, i8* %65, i64 12, !dbg !5957
  %call89 = call i64 @zip_time(i8* %add.ptr88), !dbg !5958
  %66 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5959
  %mtime = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %66, i32 0, i32 8, !dbg !5960
  store i64 %call89, i64* %mtime, align 8, !dbg !5961
  %67 = load i8*, i8** %p, align 8, !dbg !5962
  %add.ptr90 = getelementptr inbounds i8, i8* %67, i64 16, !dbg !5963
  %call91 = call i32 @archive_le32dec(i8* %add.ptr90), !dbg !5964
  %68 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5965
  %cm_zlib_crc32 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %68, i32 0, i32 11, !dbg !5966
  store i32 %call91, i32* %cm_zlib_crc32, align 8, !dbg !5967
  %69 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5968
  %zip_flags92 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %69, i32 0, i32 13, !dbg !5970
  %70 = load i16, i16* %zip_flags92, align 2, !dbg !5970
  %conv93 = zext i16 %70 to i32, !dbg !5968
  %and94 = and i32 %conv93, 8, !dbg !5971
  %tobool95 = icmp ne i32 %and94, 0, !dbg !5971
  br i1 %tobool95, label %if.then96, label %if.else98, !dbg !5972

if.then96:                                        ; preds = %if.end84
  %71 = load i8*, i8** %p, align 8, !dbg !5973
  %arrayidx97 = getelementptr inbounds i8, i8* %71, i64 13, !dbg !5973
  %72 = load i8, i8* %arrayidx97, align 1, !dbg !5973
  %73 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5974
  %decdat = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %73, i32 0, i32 17, !dbg !5975
  store i8 %72, i8* %decdat, align 1, !dbg !5976
  br label %if.end101, !dbg !5974

if.else98:                                        ; preds = %if.end84
  %74 = load i8*, i8** %p, align 8, !dbg !5977
  %arrayidx99 = getelementptr inbounds i8, i8* %74, i64 19, !dbg !5977
  %75 = load i8, i8* %arrayidx99, align 1, !dbg !5977
  %76 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5978
  %decdat100 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %76, i32 0, i32 17, !dbg !5979
  store i8 %75, i8* %decdat100, align 1, !dbg !5980
  br label %if.end101

if.end101:                                        ; preds = %if.else98, %if.then96
  %77 = load i8*, i8** %p, align 8, !dbg !5981
  %add.ptr102 = getelementptr inbounds i8, i8* %77, i64 20, !dbg !5982
  %call103 = call i32 @archive_le32dec(i8* %add.ptr102), !dbg !5983
  %conv104 = zext i32 %call103 to i64, !dbg !5983
  %78 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5984
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %78, i32 0, i32 3, !dbg !5985
  store i64 %conv104, i64* %compressed_size, align 8, !dbg !5986
  %79 = load i8*, i8** %p, align 8, !dbg !5987
  %add.ptr105 = getelementptr inbounds i8, i8* %79, i64 24, !dbg !5988
  %call106 = call i32 @archive_le32dec(i8* %add.ptr105), !dbg !5989
  %conv107 = zext i32 %call106 to i64, !dbg !5989
  %80 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !5990
  %uncompressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %80, i32 0, i32 4, !dbg !5991
  store i64 %conv107, i64* %uncompressed_size, align 8, !dbg !5992
  %81 = load i8*, i8** %p, align 8, !dbg !5993
  %add.ptr108 = getelementptr inbounds i8, i8* %81, i64 28, !dbg !5994
  %call109 = call zeroext i16 @archive_le16dec(i8* %add.ptr108), !dbg !5995
  %conv110 = zext i16 %call109 to i64, !dbg !5995
  store i64 %conv110, i64* %filename_length, align 8, !dbg !5996
  %82 = load i8*, i8** %p, align 8, !dbg !5997
  %add.ptr111 = getelementptr inbounds i8, i8* %82, i64 30, !dbg !5998
  %call112 = call zeroext i16 @archive_le16dec(i8* %add.ptr111), !dbg !5999
  %conv113 = zext i16 %call112 to i64, !dbg !5999
  store i64 %conv113, i64* %extra_length, align 8, !dbg !6000
  %83 = load i8*, i8** %p, align 8, !dbg !6001
  %add.ptr114 = getelementptr inbounds i8, i8* %83, i64 32, !dbg !6002
  %call115 = call zeroext i16 @archive_le16dec(i8* %add.ptr114), !dbg !6003
  %conv116 = zext i16 %call115 to i64, !dbg !6003
  store i64 %conv116, i64* %comment_length, align 8, !dbg !6004
  %84 = load i8*, i8** %p, align 8, !dbg !6005
  %add.ptr117 = getelementptr inbounds i8, i8* %84, i64 38, !dbg !6006
  %call118 = call i32 @archive_le32dec(i8* %add.ptr117), !dbg !6007
  store i32 %call118, i32* %external_attributes, align 4, !dbg !6008
  %85 = load i8*, i8** %p, align 8, !dbg !6009
  %add.ptr119 = getelementptr inbounds i8, i8* %85, i64 42, !dbg !6010
  %call120 = call i32 @archive_le32dec(i8* %add.ptr119), !dbg !6011
  %conv121 = zext i32 %call120 to i64, !dbg !6011
  %86 = load i64, i64* %correction, align 8, !dbg !6012
  %add122 = add nsw i64 %conv121, %86, !dbg !6013
  %87 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6014
  %local_header_offset = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %87, i32 0, i32 2, !dbg !6015
  store i64 %add122, i64* %local_header_offset, align 8, !dbg !6016
  %88 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6017
  %system123 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %88, i32 0, i32 15, !dbg !6019
  %89 = load i8, i8* %system123, align 1, !dbg !6019
  %conv124 = zext i8 %89 to i32, !dbg !6017
  %cmp125 = icmp eq i32 %conv124, 3, !dbg !6020
  br i1 %cmp125, label %if.then127, label %if.else129, !dbg !6021

if.then127:                                       ; preds = %if.end101
  %90 = load i32, i32* %external_attributes, align 4, !dbg !6022
  %shr = lshr i32 %90, 16, !dbg !6024
  %conv128 = trunc i32 %shr to i16, !dbg !6022
  %91 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6025
  %mode = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %91, i32 0, i32 12, !dbg !6026
  store i16 %conv128, i16* %mode, align 4, !dbg !6027
  br label %if.end155, !dbg !6028

if.else129:                                       ; preds = %if.end101
  %92 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6029
  %system130 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %92, i32 0, i32 15, !dbg !6032
  %93 = load i8, i8* %system130, align 1, !dbg !6032
  %conv131 = zext i8 %93 to i32, !dbg !6029
  %cmp132 = icmp eq i32 %conv131, 0, !dbg !6033
  br i1 %cmp132, label %if.then134, label %if.else152, !dbg !6029

if.then134:                                       ; preds = %if.else129
  %94 = load i32, i32* %external_attributes, align 4, !dbg !6034
  %and135 = and i32 %94, 16, !dbg !6037
  %cmp136 = icmp eq i32 16, %and135, !dbg !6038
  br i1 %cmp136, label %if.then138, label %if.else140, !dbg !6039

if.then138:                                       ; preds = %if.then134
  %95 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6040
  %mode139 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %95, i32 0, i32 12, !dbg !6042
  store i16 16893, i16* %mode139, align 4, !dbg !6043
  br label %if.end142, !dbg !6044

if.else140:                                       ; preds = %if.then134
  %96 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6045
  %mode141 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %96, i32 0, i32 12, !dbg !6047
  store i16 -32332, i16* %mode141, align 4, !dbg !6048
  br label %if.end142

if.end142:                                        ; preds = %if.else140, %if.then138
  %97 = load i32, i32* %external_attributes, align 4, !dbg !6049
  %and143 = and i32 %97, 1, !dbg !6051
  %cmp144 = icmp eq i32 1, %and143, !dbg !6052
  br i1 %cmp144, label %if.then146, label %if.end151, !dbg !6053

if.then146:                                       ; preds = %if.end142
  %98 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6054
  %mode147 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %98, i32 0, i32 12, !dbg !6056
  %99 = load i16, i16* %mode147, align 4, !dbg !6057
  %conv148 = zext i16 %99 to i32, !dbg !6057
  %and149 = and i32 %conv148, 365, !dbg !6057
  %conv150 = trunc i32 %and149 to i16, !dbg !6057
  store i16 %conv150, i16* %mode147, align 4, !dbg !6057
  br label %if.end151, !dbg !6058

if.end151:                                        ; preds = %if.then146, %if.end142
  br label %if.end154, !dbg !6059

if.else152:                                       ; preds = %if.else129
  %100 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6060
  %mode153 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %100, i32 0, i32 12, !dbg !6062
  store i16 0, i16* %mode153, align 4, !dbg !6063
  br label %if.end154

if.end154:                                        ; preds = %if.else152, %if.end151
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then127
  %101 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6064
  %call156 = call i64 @__archive_read_consume(%struct.archive_read* %101, i64 46), !dbg !6065
  %102 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6066
  %103 = load i64, i64* %filename_length, align 8, !dbg !6067
  %104 = load i64, i64* %extra_length, align 8, !dbg !6068
  %add157 = add i64 %103, %104, !dbg !6069
  %call158 = call i8* @__archive_read_ahead(%struct.archive_read* %102, i64 %add157, i64* null), !dbg !6070
  store i8* %call158, i8** %p, align 8, !dbg !6071
  %105 = load i8*, i8** %p, align 8, !dbg !6072
  %cmp159 = icmp eq i8* %105, null, !dbg !6074
  br i1 %cmp159, label %if.then161, label %if.end163, !dbg !6075

if.then161:                                       ; preds = %if.end155
  %106 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6076
  %archive162 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %106, i32 0, i32 0, !dbg !6078
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive162, i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0)), !dbg !6079
  store i32 -30, i32* %retval, align 4, !dbg !6080
  br label %return, !dbg !6080

if.end163:                                        ; preds = %if.end155
  %107 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6081
  %108 = load i8*, i8** %p, align 8, !dbg !6083
  %109 = load i64, i64* %filename_length, align 8, !dbg !6084
  %add.ptr164 = getelementptr inbounds i8, i8* %108, i64 %109, !dbg !6085
  %110 = load i64, i64* %extra_length, align 8, !dbg !6086
  %111 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6087
  %call165 = call i32 @process_extra(%struct.archive_read* %107, i8* %add.ptr164, i64 %110, %struct.zip_entry* %111), !dbg !6088
  %cmp166 = icmp ne i32 0, %call165, !dbg !6089
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !6090

if.then168:                                       ; preds = %if.end163
  store i32 -30, i32* %retval, align 4, !dbg !6091
  br label %return, !dbg !6091

if.end169:                                        ; preds = %if.end163
  %112 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6093
  %process_mac_extensions = getelementptr inbounds %struct.zip, %struct.zip* %112, i32 0, i32 26, !dbg !6095
  %113 = load i32, i32* %process_mac_extensions, align 4, !dbg !6095
  %tobool170 = icmp ne i32 %113, 0, !dbg !6093
  br i1 %tobool170, label %if.else174, label %if.then171, !dbg !6096

if.then171:                                       ; preds = %if.end169
  %114 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6097
  %tree172 = getelementptr inbounds %struct.zip, %struct.zip* %114, i32 0, i32 6, !dbg !6099
  %115 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6100
  %node = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %115, i32 0, i32 0, !dbg !6101
  %call173 = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %tree172, %struct.archive_rb_node* %node), !dbg !6102
  br label %if.end237, !dbg !6103

if.else174:                                       ; preds = %if.end169
  %116 = load i8*, i8** %p, align 8, !dbg !6104
  store i8* %116, i8** %name, align 8, !dbg !6106
  %117 = load i8*, i8** %name, align 8, !dbg !6107
  %118 = load i64, i64* %filename_length, align 8, !dbg !6108
  %call175 = call i8* @rsrc_basename(i8* %117, i64 %118), !dbg !6109
  store i8* %call175, i8** %r, align 8, !dbg !6110
  %119 = load i64, i64* %filename_length, align 8, !dbg !6111
  %cmp176 = icmp uge i64 %119, 9, !dbg !6113
  br i1 %cmp176, label %land.lhs.true, label %if.else211, !dbg !6114

land.lhs.true:                                    ; preds = %if.else174
  %120 = load i8*, i8** %name, align 8, !dbg !6115
  %call178 = call i32 @strncmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i32 0, i32 0), i8* %120, i64 9) #9, !dbg !6116
  %cmp179 = icmp eq i32 %call178, 0, !dbg !6117
  br i1 %cmp179, label %if.then181, label %if.else211, !dbg !6118

if.then181:                                       ; preds = %land.lhs.true
  %121 = load i64, i64* %filename_length, align 8, !dbg !6120
  %sub182 = sub i64 %121, 1, !dbg !6123
  %122 = load i8*, i8** %name, align 8, !dbg !6124
  %arrayidx183 = getelementptr inbounds i8, i8* %122, i64 %sub182, !dbg !6124
  %123 = load i8, i8* %arrayidx183, align 1, !dbg !6124
  %conv184 = sext i8 %123 to i32, !dbg !6124
  %cmp185 = icmp ne i32 %conv184, 47, !dbg !6125
  br i1 %cmp185, label %land.lhs.true187, label %if.else204, !dbg !6126

land.lhs.true187:                                 ; preds = %if.then181
  %124 = load i8*, i8** %r, align 8, !dbg !6127
  %125 = load i8*, i8** %name, align 8, !dbg !6128
  %sub.ptr.lhs.cast = ptrtoint i8* %124 to i64, !dbg !6129
  %sub.ptr.rhs.cast = ptrtoint i8* %125 to i64, !dbg !6129
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6129
  %cmp188 = icmp slt i64 %sub.ptr.sub, 3, !dbg !6130
  br i1 %cmp188, label %if.then200, label %lor.lhs.false190, !dbg !6131

lor.lhs.false190:                                 ; preds = %land.lhs.true187
  %126 = load i8*, i8** %r, align 8, !dbg !6132
  %arrayidx191 = getelementptr inbounds i8, i8* %126, i64 0, !dbg !6132
  %127 = load i8, i8* %arrayidx191, align 1, !dbg !6132
  %conv192 = sext i8 %127 to i32, !dbg !6132
  %cmp193 = icmp ne i32 %conv192, 46, !dbg !6134
  br i1 %cmp193, label %if.then200, label %lor.lhs.false195, !dbg !6135

lor.lhs.false195:                                 ; preds = %lor.lhs.false190
  %128 = load i8*, i8** %r, align 8, !dbg !6136
  %arrayidx196 = getelementptr inbounds i8, i8* %128, i64 1, !dbg !6136
  %129 = load i8, i8* %arrayidx196, align 1, !dbg !6136
  %conv197 = sext i8 %129 to i32, !dbg !6136
  %cmp198 = icmp ne i32 %conv197, 95, !dbg !6138
  br i1 %cmp198, label %if.then200, label %if.else204, !dbg !6139

if.then200:                                       ; preds = %lor.lhs.false195, %lor.lhs.false190, %land.lhs.true187
  %130 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6141
  %tree201 = getelementptr inbounds %struct.zip, %struct.zip* %130, i32 0, i32 6, !dbg !6143
  %131 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6144
  %node202 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %131, i32 0, i32 0, !dbg !6145
  %call203 = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %tree201, %struct.archive_rb_node* %node202), !dbg !6146
  %132 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6147
  %133 = load i8*, i8** %name, align 8, !dbg !6148
  %134 = load i64, i64* %filename_length, align 8, !dbg !6149
  call void @expose_parent_dirs(%struct.zip* %132, i8* %133, i64 %134), !dbg !6150
  br label %if.end210, !dbg !6151

if.else204:                                       ; preds = %lor.lhs.false195, %if.then181
  %135 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6152
  %rsrcname = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %135, i32 0, i32 7, !dbg !6152
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %rsrcname, i32 0, i32 1, !dbg !6152
  store i64 0, i64* %length, align 8, !dbg !6152
  %136 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6152
  %rsrcname205 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %136, i32 0, i32 7, !dbg !6152
  %137 = load i8*, i8** %name, align 8, !dbg !6152
  %138 = load i64, i64* %filename_length, align 8, !dbg !6152
  %call206 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %rsrcname205, i8* %137, i64 %138), !dbg !6152
  %139 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6154
  %tree_rsrc207 = getelementptr inbounds %struct.zip, %struct.zip* %139, i32 0, i32 7, !dbg !6155
  %140 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6156
  %node208 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %140, i32 0, i32 0, !dbg !6157
  %call209 = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %tree_rsrc207, %struct.archive_rb_node* %node208), !dbg !6158
  br label %if.end210

if.end210:                                        ; preds = %if.else204, %if.then200
  br label %if.end236, !dbg !6159

if.else211:                                       ; preds = %land.lhs.true, %if.else174
  %141 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6160
  %rsrcname212 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %141, i32 0, i32 7, !dbg !6160
  %length213 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %rsrcname212, i32 0, i32 1, !dbg !6160
  store i64 0, i64* %length213, align 8, !dbg !6160
  %142 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6160
  %rsrcname214 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %142, i32 0, i32 7, !dbg !6160
  %call215 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %rsrcname214, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i32 0, i32 0), i64 9), !dbg !6160
  %143 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6162
  %rsrcname216 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %143, i32 0, i32 7, !dbg !6163
  %144 = load i8*, i8** %name, align 8, !dbg !6164
  %145 = load i8*, i8** %r, align 8, !dbg !6165
  %146 = load i8*, i8** %name, align 8, !dbg !6166
  %sub.ptr.lhs.cast217 = ptrtoint i8* %145 to i64, !dbg !6167
  %sub.ptr.rhs.cast218 = ptrtoint i8* %146 to i64, !dbg !6167
  %sub.ptr.sub219 = sub i64 %sub.ptr.lhs.cast217, %sub.ptr.rhs.cast218, !dbg !6167
  %call220 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %rsrcname216, i8* %144, i64 %sub.ptr.sub219), !dbg !6168
  %147 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6169
  %rsrcname221 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %147, i32 0, i32 7, !dbg !6170
  %call222 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %rsrcname221, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i32 0, i32 0)), !dbg !6171
  %148 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6172
  %rsrcname223 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %148, i32 0, i32 7, !dbg !6173
  %149 = load i8*, i8** %name, align 8, !dbg !6174
  %150 = load i8*, i8** %r, align 8, !dbg !6175
  %151 = load i8*, i8** %name, align 8, !dbg !6176
  %sub.ptr.lhs.cast224 = ptrtoint i8* %150 to i64, !dbg !6177
  %sub.ptr.rhs.cast225 = ptrtoint i8* %151 to i64, !dbg !6177
  %sub.ptr.sub226 = sub i64 %sub.ptr.lhs.cast224, %sub.ptr.rhs.cast225, !dbg !6177
  %add.ptr227 = getelementptr inbounds i8, i8* %149, i64 %sub.ptr.sub226, !dbg !6178
  %152 = load i64, i64* %filename_length, align 8, !dbg !6179
  %153 = load i8*, i8** %r, align 8, !dbg !6180
  %154 = load i8*, i8** %name, align 8, !dbg !6181
  %sub.ptr.lhs.cast228 = ptrtoint i8* %153 to i64, !dbg !6182
  %sub.ptr.rhs.cast229 = ptrtoint i8* %154 to i64, !dbg !6182
  %sub.ptr.sub230 = sub i64 %sub.ptr.lhs.cast228, %sub.ptr.rhs.cast229, !dbg !6182
  %sub231 = sub i64 %152, %sub.ptr.sub230, !dbg !6183
  %call232 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %rsrcname223, i8* %add.ptr227, i64 %sub231), !dbg !6184
  %155 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6185
  %tree233 = getelementptr inbounds %struct.zip, %struct.zip* %155, i32 0, i32 6, !dbg !6186
  %156 = load %struct.zip_entry*, %struct.zip_entry** %zip_entry, align 8, !dbg !6187
  %node234 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %156, i32 0, i32 0, !dbg !6188
  %call235 = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %tree233, %struct.archive_rb_node* %node234), !dbg !6189
  br label %if.end236

if.end236:                                        ; preds = %if.else211, %if.end210
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.then171
  %157 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6190
  %158 = load i64, i64* %filename_length, align 8, !dbg !6191
  %159 = load i64, i64* %extra_length, align 8, !dbg !6192
  %add238 = add i64 %158, %159, !dbg !6193
  %160 = load i64, i64* %comment_length, align 8, !dbg !6194
  %add239 = add i64 %add238, %160, !dbg !6195
  %call240 = call i64 @__archive_read_consume(%struct.archive_read* %157, i64 %add239), !dbg !6196
  br label %while.body46, !dbg !6197

while.end241:                                     ; preds = %if.then58
  store i32 0, i32* %retval, align 4, !dbg !6198
  br label %return, !dbg !6198

return:                                           ; preds = %while.end241, %if.then168, %if.then161, %if.then70, %if.then63, %if.then50, %if.then3, %if.then
  %161 = load i32, i32* %retval, align 4, !dbg !6199
  ret i32 %161, !dbg !6199
}

declare %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree*, %struct.archive_rb_node*, i32) #2

declare %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree*, i8*) #2

declare i64 @archive_filter_bytes(%struct.archive*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @zip_read_mac_metadata(%struct.archive_read* %a, %struct.archive_entry* %entry1, %struct.zip_entry* %rsrc) #0 !dbg !554 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %rsrc.addr = alloca %struct.zip_entry*, align 8
  %zip = alloca %struct.zip*, align 8
  %metadata = alloca i8*, align 8
  %mp = alloca i8*, align 8
  %offset = alloca i64, align 8
  %remaining_bytes = alloca i64, align 8
  %metadata_bytes = alloca i64, align 8
  %hsize = alloca i64, align 8
  %ret = alloca i32, align 4
  %eof = alloca i32, align 4
  %p = alloca i8*, align 8
  %bytes_avail = alloca i64, align 8
  %bytes_used = alloca i64, align 8
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6200, metadata !578), !dbg !6201
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !6202, metadata !578), !dbg !6203
  store %struct.zip_entry* %rsrc, %struct.zip_entry** %rsrc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %rsrc.addr, metadata !6204, metadata !578), !dbg !6205
  call void @llvm.dbg.declare(metadata %struct.zip** %zip, metadata !6206, metadata !578), !dbg !6207
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6208
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !6209
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !6209
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !6210
  %2 = load i8*, i8** %data, align 8, !dbg !6210
  %3 = bitcast i8* %2 to %struct.zip*, !dbg !6211
  store %struct.zip* %3, %struct.zip** %zip, align 8, !dbg !6207
  call void @llvm.dbg.declare(metadata i8** %metadata, metadata !6212, metadata !578), !dbg !6213
  call void @llvm.dbg.declare(metadata i8** %mp, metadata !6214, metadata !578), !dbg !6215
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !6216, metadata !578), !dbg !6217
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6218
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %4, i32 0, i32 0, !dbg !6219
  %call = call i64 @archive_filter_bytes(%struct.archive* %archive, i32 0), !dbg !6220
  store i64 %call, i64* %offset, align 8, !dbg !6217
  call void @llvm.dbg.declare(metadata i64* %remaining_bytes, metadata !6221, metadata !578), !dbg !6222
  call void @llvm.dbg.declare(metadata i64* %metadata_bytes, metadata !6223, metadata !578), !dbg !6224
  call void @llvm.dbg.declare(metadata i64* %hsize, metadata !6225, metadata !578), !dbg !6226
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6227, metadata !578), !dbg !6228
  store i32 0, i32* %ret, align 4, !dbg !6228
  call void @llvm.dbg.declare(metadata i32* %eof, metadata !6229, metadata !578), !dbg !6230
  %5 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6231
  %compression = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %5, i32 0, i32 14, !dbg !6232
  %6 = load i8, i8* %compression, align 8, !dbg !6232
  %conv = zext i8 %6 to i32, !dbg !6231
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 8, label %sw.bb4
  ], !dbg !6233

sw.bb:                                            ; preds = %entry
  %7 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6234
  %uncompressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %7, i32 0, i32 4, !dbg !6237
  %8 = load i64, i64* %uncompressed_size, align 8, !dbg !6237
  %9 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6238
  %compressed_size = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %9, i32 0, i32 3, !dbg !6239
  %10 = load i64, i64* %compressed_size, align 8, !dbg !6239
  %cmp = icmp ne i64 %8, %10, !dbg !6240
  br i1 %cmp, label %if.then, label %if.end, !dbg !6241

if.then:                                          ; preds = %sw.bb
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6242
  %archive3 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !6244
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive3, i32 84, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.84, i32 0, i32 0)), !dbg !6245
  store i32 -30, i32* %retval, align 4, !dbg !6246
  br label %return, !dbg !6246

if.end:                                           ; preds = %sw.bb
  br label %sw.bb4, !dbg !6247

sw.bb4:                                           ; preds = %entry, %if.end
  br label %sw.epilog, !dbg !6249

sw.default:                                       ; preds = %entry
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6250
  %archive5 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %12, i32 0, i32 0, !dbg !6251
  %13 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6252
  %compression6 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %13, i32 0, i32 14, !dbg !6253
  %14 = load i8, i8* %compression6, align 8, !dbg !6253
  %conv7 = zext i8 %14 to i32, !dbg !6252
  %call8 = call i8* @compression_name(i32 %conv7), !dbg !6254
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive5, i32 84, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.51, i32 0, i32 0), i8* %call8), !dbg !6255
  store i32 -20, i32* %retval, align 4, !dbg !6256
  br label %return, !dbg !6256

sw.epilog:                                        ; preds = %sw.bb4
  %15 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6257
  %uncompressed_size9 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %15, i32 0, i32 4, !dbg !6259
  %16 = load i64, i64* %uncompressed_size9, align 8, !dbg !6259
  %cmp10 = icmp sgt i64 %16, 4194304, !dbg !6260
  br i1 %cmp10, label %if.then12, label %if.end15, !dbg !6261

if.then12:                                        ; preds = %sw.epilog
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6262
  %archive13 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %17, i32 0, i32 0, !dbg !6264
  %18 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6265
  %uncompressed_size14 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %18, i32 0, i32 4, !dbg !6266
  %19 = load i64, i64* %uncompressed_size14, align 8, !dbg !6266
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive13, i32 84, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.85, i32 0, i32 0), i64 %19), !dbg !6267
  store i32 -20, i32* %retval, align 4, !dbg !6268
  br label %return, !dbg !6268

if.end15:                                         ; preds = %sw.epilog
  %20 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6269
  %compressed_size16 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %20, i32 0, i32 3, !dbg !6271
  %21 = load i64, i64* %compressed_size16, align 8, !dbg !6271
  %cmp17 = icmp sgt i64 %21, 4194304, !dbg !6272
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !6273

if.then19:                                        ; preds = %if.end15
  %22 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6274
  %archive20 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %22, i32 0, i32 0, !dbg !6276
  %23 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6277
  %compressed_size21 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %23, i32 0, i32 3, !dbg !6278
  %24 = load i64, i64* %compressed_size21, align 8, !dbg !6278
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive20, i32 84, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.85, i32 0, i32 0), i64 %24), !dbg !6279
  store i32 -20, i32* %retval, align 4, !dbg !6280
  br label %return, !dbg !6280

if.end22:                                         ; preds = %if.end15
  %25 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6281
  %uncompressed_size23 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %25, i32 0, i32 4, !dbg !6282
  %26 = load i64, i64* %uncompressed_size23, align 8, !dbg !6282
  %call24 = call noalias i8* @malloc(i64 %26) #8, !dbg !6283
  store i8* %call24, i8** %metadata, align 8, !dbg !6284
  %27 = load i8*, i8** %metadata, align 8, !dbg !6285
  %cmp25 = icmp eq i8* %27, null, !dbg !6287
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !6288

if.then27:                                        ; preds = %if.end22
  %28 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6289
  %archive28 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %28, i32 0, i32 0, !dbg !6291
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive28, i32 12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.86, i32 0, i32 0)), !dbg !6292
  store i32 -30, i32* %retval, align 4, !dbg !6293
  br label %return, !dbg !6293

if.end29:                                         ; preds = %if.end22
  %29 = load i64, i64* %offset, align 8, !dbg !6294
  %30 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6296
  %local_header_offset = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %30, i32 0, i32 2, !dbg !6297
  %31 = load i64, i64* %local_header_offset, align 8, !dbg !6297
  %cmp30 = icmp slt i64 %29, %31, !dbg !6298
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !6299

if.then32:                                        ; preds = %if.end29
  %32 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6300
  %33 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6301
  %local_header_offset33 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %33, i32 0, i32 2, !dbg !6302
  %34 = load i64, i64* %local_header_offset33, align 8, !dbg !6302
  %35 = load i64, i64* %offset, align 8, !dbg !6303
  %sub = sub nsw i64 %34, %35, !dbg !6304
  %call34 = call i64 @__archive_read_consume(%struct.archive_read* %32, i64 %sub), !dbg !6305
  br label %if.end42, !dbg !6305

if.else:                                          ; preds = %if.end29
  %36 = load i64, i64* %offset, align 8, !dbg !6306
  %37 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6308
  %local_header_offset35 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %37, i32 0, i32 2, !dbg !6309
  %38 = load i64, i64* %local_header_offset35, align 8, !dbg !6309
  %cmp36 = icmp ne i64 %36, %38, !dbg !6310
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !6311

if.then38:                                        ; preds = %if.else
  %39 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6312
  %40 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6314
  %local_header_offset39 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %40, i32 0, i32 2, !dbg !6315
  %41 = load i64, i64* %local_header_offset39, align 8, !dbg !6315
  %call40 = call i64 @__archive_read_seek(%struct.archive_read* %39, i64 %41, i32 0), !dbg !6316
  br label %if.end41, !dbg !6317

if.end41:                                         ; preds = %if.then38, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then32
  %42 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6318
  %call43 = call i64 @zip_get_local_file_header_size(%struct.archive_read* %42, i64 0), !dbg !6319
  store i64 %call43, i64* %hsize, align 8, !dbg !6320
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6321
  %44 = load i64, i64* %hsize, align 8, !dbg !6322
  %call44 = call i64 @__archive_read_consume(%struct.archive_read* %43, i64 %44), !dbg !6323
  %45 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6324
  %compressed_size45 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %45, i32 0, i32 3, !dbg !6325
  %46 = load i64, i64* %compressed_size45, align 8, !dbg !6325
  store i64 %46, i64* %remaining_bytes, align 8, !dbg !6326
  %47 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6327
  %uncompressed_size46 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %47, i32 0, i32 4, !dbg !6328
  %48 = load i64, i64* %uncompressed_size46, align 8, !dbg !6328
  store i64 %48, i64* %metadata_bytes, align 8, !dbg !6329
  %49 = load i8*, i8** %metadata, align 8, !dbg !6330
  store i8* %49, i8** %mp, align 8, !dbg !6331
  store i32 0, i32* %eof, align 4, !dbg !6332
  br label %while.cond, !dbg !6333

while.cond:                                       ; preds = %sw.epilog101, %if.end42
  %50 = load i32, i32* %eof, align 4, !dbg !6334
  %tobool = icmp ne i32 %50, 0, !dbg !6334
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6336

land.rhs:                                         ; preds = %while.cond
  %51 = load i64, i64* %remaining_bytes, align 8, !dbg !6337
  %tobool47 = icmp ne i64 %51, 0, !dbg !6339
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %52 = phi i1 [ false, %while.cond ], [ %tobool47, %land.rhs ]
  br i1 %52, label %while.body, label %while.end, !dbg !6340

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6342, metadata !578), !dbg !6344
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !6345, metadata !578), !dbg !6346
  call void @llvm.dbg.declare(metadata i64* %bytes_used, metadata !6347, metadata !578), !dbg !6348
  %53 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6349
  %call48 = call i8* @__archive_read_ahead(%struct.archive_read* %53, i64 1, i64* %bytes_avail), !dbg !6350
  store i8* %call48, i8** %p, align 8, !dbg !6351
  %54 = load i8*, i8** %p, align 8, !dbg !6352
  %cmp49 = icmp eq i8* %54, null, !dbg !6354
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !6355

if.then51:                                        ; preds = %while.body
  %55 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6356
  %archive52 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %55, i32 0, i32 0, !dbg !6358
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive52, i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0)), !dbg !6359
  store i32 -20, i32* %ret, align 4, !dbg !6360
  br label %exit_mac_metadata, !dbg !6361

if.end53:                                         ; preds = %while.body
  %56 = load i64, i64* %bytes_avail, align 8, !dbg !6362
  %57 = load i64, i64* %remaining_bytes, align 8, !dbg !6364
  %cmp54 = icmp ugt i64 %56, %57, !dbg !6365
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !6366

if.then56:                                        ; preds = %if.end53
  %58 = load i64, i64* %remaining_bytes, align 8, !dbg !6367
  store i64 %58, i64* %bytes_avail, align 8, !dbg !6368
  br label %if.end57, !dbg !6369

if.end57:                                         ; preds = %if.then56, %if.end53
  %59 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6370
  %compression58 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %59, i32 0, i32 14, !dbg !6371
  %60 = load i8, i8* %compression58, align 8, !dbg !6371
  %conv59 = zext i8 %60 to i32, !dbg !6370
  switch i32 %conv59, label %sw.default100 [
    i32 0, label %sw.bb60
    i32 8, label %sw.bb70
  ], !dbg !6372

sw.bb60:                                          ; preds = %if.end57
  %61 = load i64, i64* %bytes_avail, align 8, !dbg !6373
  %62 = load i64, i64* %metadata_bytes, align 8, !dbg !6376
  %cmp61 = icmp ugt i64 %61, %62, !dbg !6377
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !6378

if.then63:                                        ; preds = %sw.bb60
  %63 = load i64, i64* %metadata_bytes, align 8, !dbg !6379
  store i64 %63, i64* %bytes_avail, align 8, !dbg !6380
  br label %if.end64, !dbg !6381

if.end64:                                         ; preds = %if.then63, %sw.bb60
  %64 = load i8*, i8** %mp, align 8, !dbg !6382
  %65 = load i8*, i8** %p, align 8, !dbg !6383
  %66 = load i64, i64* %bytes_avail, align 8, !dbg !6384
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 %66, i32 1, i1 false), !dbg !6385
  %67 = load i64, i64* %bytes_avail, align 8, !dbg !6386
  store i64 %67, i64* %bytes_used, align 8, !dbg !6387
  %68 = load i64, i64* %bytes_used, align 8, !dbg !6388
  %69 = load i64, i64* %metadata_bytes, align 8, !dbg !6389
  %sub65 = sub i64 %69, %68, !dbg !6389
  store i64 %sub65, i64* %metadata_bytes, align 8, !dbg !6389
  %70 = load i64, i64* %bytes_used, align 8, !dbg !6390
  %71 = load i8*, i8** %mp, align 8, !dbg !6391
  %add.ptr = getelementptr inbounds i8, i8* %71, i64 %70, !dbg !6391
  store i8* %add.ptr, i8** %mp, align 8, !dbg !6391
  %72 = load i64, i64* %metadata_bytes, align 8, !dbg !6392
  %cmp66 = icmp eq i64 %72, 0, !dbg !6394
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !6395

if.then68:                                        ; preds = %if.end64
  store i32 1, i32* %eof, align 4, !dbg !6396
  br label %if.end69, !dbg !6397

if.end69:                                         ; preds = %if.then68, %if.end64
  br label %sw.epilog101, !dbg !6398

sw.bb70:                                          ; preds = %if.end57
  call void @llvm.dbg.declare(metadata i32* %r, metadata !6399, metadata !578), !dbg !6401
  %73 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6402
  %74 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6403
  %call71 = call i32 @zip_deflate_init(%struct.archive_read* %73, %struct.zip* %74), !dbg !6404
  store i32 %call71, i32* %ret, align 4, !dbg !6405
  %75 = load i32, i32* %ret, align 4, !dbg !6406
  %cmp72 = icmp ne i32 %75, 0, !dbg !6408
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !6409

if.then74:                                        ; preds = %sw.bb70
  br label %exit_mac_metadata, !dbg !6410

if.end75:                                         ; preds = %sw.bb70
  %76 = load i8*, i8** %p, align 8, !dbg !6411
  %77 = ptrtoint i8* %76 to i64, !dbg !6412
  %78 = inttoptr i64 %77 to i8*, !dbg !6413
  %79 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6414
  %stream = getelementptr inbounds %struct.zip, %struct.zip* %79, i32 0, i32 20, !dbg !6415
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream, i32 0, i32 0, !dbg !6416
  store i8* %78, i8** %next_in, align 8, !dbg !6417
  %80 = load i64, i64* %bytes_avail, align 8, !dbg !6418
  %conv76 = trunc i64 %80 to i32, !dbg !6419
  %81 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6420
  %stream77 = getelementptr inbounds %struct.zip, %struct.zip* %81, i32 0, i32 20, !dbg !6421
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream77, i32 0, i32 1, !dbg !6422
  store i32 %conv76, i32* %avail_in, align 8, !dbg !6423
  %82 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6424
  %stream78 = getelementptr inbounds %struct.zip, %struct.zip* %82, i32 0, i32 20, !dbg !6425
  %total_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream78, i32 0, i32 2, !dbg !6426
  store i64 0, i64* %total_in, align 8, !dbg !6427
  %83 = load i8*, i8** %mp, align 8, !dbg !6428
  %84 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6429
  %stream79 = getelementptr inbounds %struct.zip, %struct.zip* %84, i32 0, i32 20, !dbg !6430
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream79, i32 0, i32 3, !dbg !6431
  store i8* %83, i8** %next_out, align 8, !dbg !6432
  %85 = load i64, i64* %metadata_bytes, align 8, !dbg !6433
  %conv80 = trunc i64 %85 to i32, !dbg !6434
  %86 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6435
  %stream81 = getelementptr inbounds %struct.zip, %struct.zip* %86, i32 0, i32 20, !dbg !6436
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream81, i32 0, i32 4, !dbg !6437
  store i32 %conv80, i32* %avail_out, align 8, !dbg !6438
  %87 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6439
  %stream82 = getelementptr inbounds %struct.zip, %struct.zip* %87, i32 0, i32 20, !dbg !6440
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream82, i32 0, i32 5, !dbg !6441
  store i64 0, i64* %total_out, align 8, !dbg !6442
  %88 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6443
  %stream83 = getelementptr inbounds %struct.zip, %struct.zip* %88, i32 0, i32 20, !dbg !6444
  %call84 = call i32 @cm_zlib_inflate(%struct.z_stream_s* %stream83, i32 0), !dbg !6445
  store i32 %call84, i32* %r, align 4, !dbg !6446
  %89 = load i32, i32* %r, align 4, !dbg !6447
  switch i32 %89, label %sw.default89 [
    i32 0, label %sw.bb85
    i32 1, label %sw.bb86
    i32 -4, label %sw.bb87
  ], !dbg !6448

sw.bb85:                                          ; preds = %if.end75
  br label %sw.epilog91, !dbg !6449

sw.bb86:                                          ; preds = %if.end75
  store i32 1, i32* %eof, align 4, !dbg !6451
  br label %sw.epilog91, !dbg !6452

sw.bb87:                                          ; preds = %if.end75
  %90 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6453
  %archive88 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %90, i32 0, i32 0, !dbg !6454
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive88, i32 12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.72, i32 0, i32 0)), !dbg !6455
  store i32 -30, i32* %ret, align 4, !dbg !6456
  br label %exit_mac_metadata, !dbg !6457

sw.default89:                                     ; preds = %if.end75
  %91 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6458
  %archive90 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %91, i32 0, i32 0, !dbg !6459
  %92 = load i32, i32* %r, align 4, !dbg !6460
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive90, i32 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i32 0, i32 0), i32 %92), !dbg !6461
  store i32 -30, i32* %ret, align 4, !dbg !6462
  br label %exit_mac_metadata, !dbg !6463

sw.epilog91:                                      ; preds = %sw.bb86, %sw.bb85
  %93 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6464
  %stream92 = getelementptr inbounds %struct.zip, %struct.zip* %93, i32 0, i32 20, !dbg !6465
  %total_in93 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream92, i32 0, i32 2, !dbg !6466
  %94 = load i64, i64* %total_in93, align 8, !dbg !6466
  store i64 %94, i64* %bytes_used, align 8, !dbg !6467
  %95 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6468
  %stream94 = getelementptr inbounds %struct.zip, %struct.zip* %95, i32 0, i32 20, !dbg !6469
  %total_out95 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream94, i32 0, i32 5, !dbg !6470
  %96 = load i64, i64* %total_out95, align 8, !dbg !6470
  %97 = load i64, i64* %metadata_bytes, align 8, !dbg !6471
  %sub96 = sub i64 %97, %96, !dbg !6471
  store i64 %sub96, i64* %metadata_bytes, align 8, !dbg !6471
  %98 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6472
  %stream97 = getelementptr inbounds %struct.zip, %struct.zip* %98, i32 0, i32 20, !dbg !6473
  %total_out98 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream97, i32 0, i32 5, !dbg !6474
  %99 = load i64, i64* %total_out98, align 8, !dbg !6474
  %100 = load i8*, i8** %mp, align 8, !dbg !6475
  %add.ptr99 = getelementptr inbounds i8, i8* %100, i64 %99, !dbg !6475
  store i8* %add.ptr99, i8** %mp, align 8, !dbg !6475
  br label %sw.epilog101, !dbg !6476

sw.default100:                                    ; preds = %if.end57
  store i64 0, i64* %bytes_used, align 8, !dbg !6477
  br label %sw.epilog101, !dbg !6478

sw.epilog101:                                     ; preds = %sw.default100, %sw.epilog91, %if.end69
  %101 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6479
  %102 = load i64, i64* %bytes_used, align 8, !dbg !6480
  %call102 = call i64 @__archive_read_consume(%struct.archive_read* %101, i64 %102), !dbg !6481
  %103 = load i64, i64* %bytes_used, align 8, !dbg !6482
  %104 = load i64, i64* %remaining_bytes, align 8, !dbg !6483
  %sub103 = sub i64 %104, %103, !dbg !6483
  store i64 %sub103, i64* %remaining_bytes, align 8, !dbg !6483
  br label %while.cond, !dbg !6484

while.end:                                        ; preds = %land.end
  %105 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !6486
  %106 = load i8*, i8** %metadata, align 8, !dbg !6487
  %107 = load %struct.zip_entry*, %struct.zip_entry** %rsrc.addr, align 8, !dbg !6488
  %uncompressed_size104 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %107, i32 0, i32 4, !dbg !6489
  %108 = load i64, i64* %uncompressed_size104, align 8, !dbg !6489
  %109 = load i64, i64* %metadata_bytes, align 8, !dbg !6490
  %sub105 = sub i64 %108, %109, !dbg !6491
  call void @archive_entry_copy_mac_metadata(%struct.archive_entry* %105, i8* %106, i64 %sub105), !dbg !6492
  br label %exit_mac_metadata, !dbg !6492

exit_mac_metadata:                                ; preds = %while.end, %sw.default89, %sw.bb87, %if.then74, %if.then51
  %110 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6493
  %111 = load i64, i64* %offset, align 8, !dbg !6494
  %call106 = call i64 @__archive_read_seek(%struct.archive_read* %110, i64 %111, i32 0), !dbg !6495
  %112 = load %struct.zip*, %struct.zip** %zip, align 8, !dbg !6496
  %decompress_init = getelementptr inbounds %struct.zip, %struct.zip* %112, i32 0, i32 16, !dbg !6497
  store i8 0, i8* %decompress_init, align 1, !dbg !6498
  %113 = load i8*, i8** %metadata, align 8, !dbg !6499
  call void @free(i8* %113) #8, !dbg !6500
  %114 = load i32, i32* %ret, align 4, !dbg !6501
  store i32 %114, i32* %retval, align 4, !dbg !6502
  br label %return, !dbg !6502

return:                                           ; preds = %exit_mac_metadata, %if.then27, %if.then19, %if.then12, %sw.default, %if.then
  %115 = load i32, i32* %retval, align 4, !dbg !6503
  ret i32 %115, !dbg !6503
}

declare void @__archive_rb_tree_init(%struct.archive_rb_tree*, %struct.archive_rb_tree_ops*) #2

declare i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree*, %struct.archive_rb_node*) #2

; Function Attrs: nounwind uwtable
define internal i8* @rsrc_basename(i8* %name, i64 %name_length) #0 !dbg !548 {
entry:
  %name.addr = alloca i8*, align 8
  %name_length.addr = alloca i64, align 8
  %s = alloca i8*, align 8
  %r = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6504, metadata !578), !dbg !6505
  store i64 %name_length, i64* %name_length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %name_length.addr, metadata !6506, metadata !578), !dbg !6507
  call void @llvm.dbg.declare(metadata i8** %s, metadata !6508, metadata !578), !dbg !6509
  call void @llvm.dbg.declare(metadata i8** %r, metadata !6510, metadata !578), !dbg !6511
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6512
  store i8* %0, i8** %s, align 8, !dbg !6513
  store i8* %0, i8** %r, align 8, !dbg !6514
  br label %for.cond, !dbg !6515

for.cond:                                         ; preds = %if.end, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !6516
  %2 = load i64, i64* %name_length.addr, align 8, !dbg !6520
  %3 = load i8*, i8** %s, align 8, !dbg !6521
  %4 = load i8*, i8** %name.addr, align 8, !dbg !6522
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !6523
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !6523
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6523
  %sub = sub i64 %2, %sub.ptr.sub, !dbg !6524
  %call = call i8* @memchr(i8* %1, i32 47, i64 %sub) #9, !dbg !6525
  store i8* %call, i8** %s, align 8, !dbg !6526
  %5 = load i8*, i8** %s, align 8, !dbg !6527
  %cmp = icmp eq i8* %5, null, !dbg !6529
  br i1 %cmp, label %if.then, label %if.end, !dbg !6530

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !6531

if.end:                                           ; preds = %for.cond
  %6 = load i8*, i8** %s, align 8, !dbg !6532
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6532
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !6532
  store i8* %incdec.ptr, i8** %r, align 8, !dbg !6533
  br label %for.cond, !dbg !6534

for.end:                                          ; preds = %if.then
  %7 = load i8*, i8** %r, align 8, !dbg !6536
  ret i8* %7, !dbg !6537
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal void @expose_parent_dirs(%struct.zip* %zip, i8* %name, i64 %name_length) #0 !dbg !551 {
entry:
  %zip.addr = alloca %struct.zip*, align 8
  %name.addr = alloca i8*, align 8
  %name_length.addr = alloca i64, align 8
  %str = alloca %struct.archive_string, align 8
  %dir = alloca %struct.zip_entry*, align 8
  %s = alloca i8*, align 8
  store %struct.zip* %zip, %struct.zip** %zip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zip** %zip.addr, metadata !6538, metadata !578), !dbg !6539
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6540, metadata !578), !dbg !6541
  store i64 %name_length, i64* %name_length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %name_length.addr, metadata !6542, metadata !578), !dbg !6543
  call void @llvm.dbg.declare(metadata %struct.archive_string* %str, metadata !6544, metadata !578), !dbg !6545
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %dir, metadata !6546, metadata !578), !dbg !6547
  call void @llvm.dbg.declare(metadata i8** %s, metadata !6548, metadata !578), !dbg !6549
  br label %do.body, !dbg !6550

do.body:                                          ; preds = %entry
  %s1 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %str, i32 0, i32 0, !dbg !6551
  store i8* null, i8** %s1, align 8, !dbg !6551
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %str, i32 0, i32 1, !dbg !6551
  store i64 0, i64* %length, align 8, !dbg !6551
  %buffer_length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %str, i32 0, i32 2, !dbg !6551
  store i64 0, i64* %buffer_length, align 8, !dbg !6551
  br label %do.end, !dbg !6551

do.end:                                           ; preds = %do.body
  %length2 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %str, i32 0, i32 1, !dbg !6554
  store i64 0, i64* %length2, align 8, !dbg !6554
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6554
  %1 = load i64, i64* %name_length.addr, align 8, !dbg !6554
  %call = call %struct.archive_string* @archive_strncat(%struct.archive_string* %str, i8* %0, i64 %1), !dbg !6554
  br label %for.cond, !dbg !6555

for.cond:                                         ; preds = %if.end9, %do.end
  %s3 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %str, i32 0, i32 0, !dbg !6556
  %2 = load i8*, i8** %s3, align 8, !dbg !6556
  %call4 = call i8* @strrchr(i8* %2, i32 47) #9, !dbg !6560
  store i8* %call4, i8** %s, align 8, !dbg !6561
  %3 = load i8*, i8** %s, align 8, !dbg !6562
  %cmp = icmp eq i8* %3, null, !dbg !6564
  br i1 %cmp, label %if.then, label %if.end, !dbg !6565

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !6566

if.end:                                           ; preds = %for.cond
  %4 = load i8*, i8** %s, align 8, !dbg !6567
  store i8 0, i8* %4, align 1, !dbg !6568
  %5 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6569
  %tree_rsrc = getelementptr inbounds %struct.zip, %struct.zip* %5, i32 0, i32 7, !dbg !6570
  %s5 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %str, i32 0, i32 0, !dbg !6571
  %6 = load i8*, i8** %s5, align 8, !dbg !6571
  %call6 = call %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree* %tree_rsrc, i8* %6), !dbg !6572
  %7 = bitcast %struct.archive_rb_node* %call6 to %struct.zip_entry*, !dbg !6573
  store %struct.zip_entry* %7, %struct.zip_entry** %dir, align 8, !dbg !6574
  %8 = load %struct.zip_entry*, %struct.zip_entry** %dir, align 8, !dbg !6575
  %cmp7 = icmp eq %struct.zip_entry* %8, null, !dbg !6577
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6578

if.then8:                                         ; preds = %if.end
  br label %for.end, !dbg !6579

if.end9:                                          ; preds = %if.end
  %9 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6580
  %tree_rsrc10 = getelementptr inbounds %struct.zip, %struct.zip* %9, i32 0, i32 7, !dbg !6581
  %10 = load %struct.zip_entry*, %struct.zip_entry** %dir, align 8, !dbg !6582
  %node = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %10, i32 0, i32 0, !dbg !6583
  call void @__archive_rb_tree_remove_node(%struct.archive_rb_tree* %tree_rsrc10, %struct.archive_rb_node* %node), !dbg !6584
  %11 = load %struct.zip_entry*, %struct.zip_entry** %dir, align 8, !dbg !6585
  %rsrcname = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %11, i32 0, i32 7, !dbg !6586
  call void @archive_string_free(%struct.archive_string* %rsrcname), !dbg !6587
  %12 = load %struct.zip*, %struct.zip** %zip.addr, align 8, !dbg !6588
  %tree = getelementptr inbounds %struct.zip, %struct.zip* %12, i32 0, i32 6, !dbg !6589
  %13 = load %struct.zip_entry*, %struct.zip_entry** %dir, align 8, !dbg !6590
  %node11 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %13, i32 0, i32 0, !dbg !6591
  %call12 = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %tree, %struct.archive_rb_node* %node11), !dbg !6592
  br label %for.cond, !dbg !6593

for.end:                                          ; preds = %if.then8, %if.then
  call void @archive_string_free(%struct.archive_string* %str), !dbg !6595
  ret void, !dbg !6596
}

declare %struct.archive_string* @archive_strncat(%struct.archive_string*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @cmp_node(%struct.archive_rb_node* %n1, %struct.archive_rb_node* %n2) #0 !dbg !544 {
entry:
  %retval = alloca i32, align 4
  %n1.addr = alloca %struct.archive_rb_node*, align 8
  %n2.addr = alloca %struct.archive_rb_node*, align 8
  %e1 = alloca %struct.zip_entry*, align 8
  %e2 = alloca %struct.zip_entry*, align 8
  store %struct.archive_rb_node* %n1, %struct.archive_rb_node** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n1.addr, metadata !6597, metadata !578), !dbg !6598
  store %struct.archive_rb_node* %n2, %struct.archive_rb_node** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n2.addr, metadata !6599, metadata !578), !dbg !6600
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %e1, metadata !6601, metadata !578), !dbg !6602
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n1.addr, align 8, !dbg !6603
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.zip_entry*, !dbg !6604
  store %struct.zip_entry* %1, %struct.zip_entry** %e1, align 8, !dbg !6602
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %e2, metadata !6605, metadata !578), !dbg !6606
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n2.addr, align 8, !dbg !6607
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.zip_entry*, !dbg !6608
  store %struct.zip_entry* %3, %struct.zip_entry** %e2, align 8, !dbg !6606
  %4 = load %struct.zip_entry*, %struct.zip_entry** %e1, align 8, !dbg !6609
  %local_header_offset = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %4, i32 0, i32 2, !dbg !6611
  %5 = load i64, i64* %local_header_offset, align 8, !dbg !6611
  %6 = load %struct.zip_entry*, %struct.zip_entry** %e2, align 8, !dbg !6612
  %local_header_offset1 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %6, i32 0, i32 2, !dbg !6613
  %7 = load i64, i64* %local_header_offset1, align 8, !dbg !6613
  %cmp = icmp sgt i64 %5, %7, !dbg !6614
  br i1 %cmp, label %if.then, label %if.end, !dbg !6615

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6616
  br label %return, !dbg !6616

if.end:                                           ; preds = %entry
  %8 = load %struct.zip_entry*, %struct.zip_entry** %e1, align 8, !dbg !6617
  %local_header_offset2 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %8, i32 0, i32 2, !dbg !6619
  %9 = load i64, i64* %local_header_offset2, align 8, !dbg !6619
  %10 = load %struct.zip_entry*, %struct.zip_entry** %e2, align 8, !dbg !6620
  %local_header_offset3 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %10, i32 0, i32 2, !dbg !6621
  %11 = load i64, i64* %local_header_offset3, align 8, !dbg !6621
  %cmp4 = icmp slt i64 %9, %11, !dbg !6622
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6623

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !6624
  br label %return, !dbg !6624

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6625
  br label %return, !dbg !6625

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6626
  ret i32 %12, !dbg !6626
}

; Function Attrs: nounwind uwtable
define internal i32 @cmp_key(%struct.archive_rb_node* %n, i8* %key) #0 !dbg !545 {
entry:
  %n.addr = alloca %struct.archive_rb_node*, align 8
  %key.addr = alloca i8*, align 8
  store %struct.archive_rb_node* %n, %struct.archive_rb_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n.addr, metadata !6627, metadata !578), !dbg !6628
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6629, metadata !578), !dbg !6630
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n.addr, align 8, !dbg !6631
  %1 = load i8*, i8** %key.addr, align 8, !dbg !6632
  ret i32 1, !dbg !6633
}

; Function Attrs: nounwind uwtable
define internal i32 @rsrc_cmp_node(%struct.archive_rb_node* %n1, %struct.archive_rb_node* %n2) #0 !dbg !546 {
entry:
  %n1.addr = alloca %struct.archive_rb_node*, align 8
  %n2.addr = alloca %struct.archive_rb_node*, align 8
  %e1 = alloca %struct.zip_entry*, align 8
  %e2 = alloca %struct.zip_entry*, align 8
  store %struct.archive_rb_node* %n1, %struct.archive_rb_node** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n1.addr, metadata !6634, metadata !578), !dbg !6635
  store %struct.archive_rb_node* %n2, %struct.archive_rb_node** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n2.addr, metadata !6636, metadata !578), !dbg !6637
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %e1, metadata !6638, metadata !578), !dbg !6639
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n1.addr, align 8, !dbg !6640
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.zip_entry*, !dbg !6641
  store %struct.zip_entry* %1, %struct.zip_entry** %e1, align 8, !dbg !6639
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %e2, metadata !6642, metadata !578), !dbg !6643
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n2.addr, align 8, !dbg !6644
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.zip_entry*, !dbg !6645
  store %struct.zip_entry* %3, %struct.zip_entry** %e2, align 8, !dbg !6643
  %4 = load %struct.zip_entry*, %struct.zip_entry** %e2, align 8, !dbg !6646
  %rsrcname = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %4, i32 0, i32 7, !dbg !6647
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %rsrcname, i32 0, i32 0, !dbg !6648
  %5 = load i8*, i8** %s, align 8, !dbg !6648
  %6 = load %struct.zip_entry*, %struct.zip_entry** %e1, align 8, !dbg !6649
  %rsrcname1 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %6, i32 0, i32 7, !dbg !6650
  %s2 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %rsrcname1, i32 0, i32 0, !dbg !6651
  %7 = load i8*, i8** %s2, align 8, !dbg !6651
  %call = call i32 @strcmp(i8* %5, i8* %7) #9, !dbg !6652
  ret i32 %call, !dbg !6653
}

; Function Attrs: nounwind uwtable
define internal i32 @rsrc_cmp_key(%struct.archive_rb_node* %n, i8* %key) #0 !dbg !547 {
entry:
  %n.addr = alloca %struct.archive_rb_node*, align 8
  %key.addr = alloca i8*, align 8
  %e = alloca %struct.zip_entry*, align 8
  store %struct.archive_rb_node* %n, %struct.archive_rb_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n.addr, metadata !6654, metadata !578), !dbg !6655
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6656, metadata !578), !dbg !6657
  call void @llvm.dbg.declare(metadata %struct.zip_entry** %e, metadata !6658, metadata !578), !dbg !6659
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n.addr, align 8, !dbg !6660
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.zip_entry*, !dbg !6661
  store %struct.zip_entry* %1, %struct.zip_entry** %e, align 8, !dbg !6659
  %2 = load i8*, i8** %key.addr, align 8, !dbg !6662
  %3 = load %struct.zip_entry*, %struct.zip_entry** %e, align 8, !dbg !6663
  %rsrcname = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %3, i32 0, i32 7, !dbg !6664
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %rsrcname, i32 0, i32 0, !dbg !6665
  %4 = load i8*, i8** %s, align 8, !dbg !6665
  %call = call i32 @strcmp(i8* %2, i8* %4) #9, !dbg !6666
  ret i32 %call, !dbg !6667
}

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #4

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #4

declare void @__archive_rb_tree_remove_node(%struct.archive_rb_tree*, %struct.archive_rb_node*) #2

; Function Attrs: nounwind uwtable
define internal i64 @zip_get_local_file_header_size(%struct.archive_read* %a, i64 %extra) #0 !dbg !557 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %extra.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  %filename_length = alloca i64, align 8
  %extra_length = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6668, metadata !578), !dbg !6669
  store i64 %extra, i64* %extra.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extra.addr, metadata !6670, metadata !578), !dbg !6671
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6672, metadata !578), !dbg !6673
  call void @llvm.dbg.declare(metadata i64* %filename_length, metadata !6674, metadata !578), !dbg !6675
  call void @llvm.dbg.declare(metadata i64* %extra_length, metadata !6676, metadata !578), !dbg !6677
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6678
  %1 = load i64, i64* %extra.addr, align 8, !dbg !6680
  %add = add i64 %1, 30, !dbg !6681
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %0, i64 %add, i64* null), !dbg !6682
  store i8* %call, i8** %p, align 8, !dbg !6683
  %cmp = icmp eq i8* %call, null, !dbg !6684
  br i1 %cmp, label %if.then, label %if.end, !dbg !6685

if.then:                                          ; preds = %entry
  %2 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6686
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %2, i32 0, i32 0, !dbg !6688
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0)), !dbg !6689
  store i64 -20, i64* %retval, align 8, !dbg !6690
  br label %return, !dbg !6690

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %extra.addr, align 8, !dbg !6691
  %4 = load i8*, i8** %p, align 8, !dbg !6692
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %3, !dbg !6692
  store i8* %add.ptr, i8** %p, align 8, !dbg !6692
  %5 = load i8*, i8** %p, align 8, !dbg !6693
  %call1 = call i32 @memcmp(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i64 4) #9, !dbg !6695
  %cmp2 = icmp ne i32 %call1, 0, !dbg !6696
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !6697

if.then3:                                         ; preds = %if.end
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6698
  %archive4 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 0, !dbg !6700
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive4, i32 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0)), !dbg !6701
  store i64 -20, i64* %retval, align 8, !dbg !6702
  br label %return, !dbg !6702

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %p, align 8, !dbg !6703
  %add.ptr6 = getelementptr inbounds i8, i8* %7, i64 26, !dbg !6704
  %call7 = call zeroext i16 @archive_le16dec(i8* %add.ptr6), !dbg !6705
  %conv = zext i16 %call7 to i64, !dbg !6705
  store i64 %conv, i64* %filename_length, align 8, !dbg !6706
  %8 = load i8*, i8** %p, align 8, !dbg !6707
  %add.ptr8 = getelementptr inbounds i8, i8* %8, i64 28, !dbg !6708
  %call9 = call zeroext i16 @archive_le16dec(i8* %add.ptr8), !dbg !6709
  %conv10 = zext i16 %call9 to i64, !dbg !6709
  store i64 %conv10, i64* %extra_length, align 8, !dbg !6710
  %9 = load i64, i64* %filename_length, align 8, !dbg !6711
  %add11 = add nsw i64 30, %9, !dbg !6712
  %10 = load i64, i64* %extra_length, align 8, !dbg !6713
  %add12 = add nsw i64 %add11, %10, !dbg !6714
  store i64 %add12, i64* %retval, align 8, !dbg !6715
  br label %return, !dbg !6715

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !6716
  ret i64 %11, !dbg !6716
}

declare void @archive_entry_copy_mac_metadata(%struct.archive_entry*, i8*, i64) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!574, !575}
!llvm.ident = !{!576}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !473, globals: !562)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!2 = !{}
!3 = !{!4, !292, !123, !13, !82, !463, !465, !45, !466, !23, !468, !47, !469, !460, !38, !80, !383, !52, !391, !314, !43, !396, !301, !471}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read", file: !6, line: 159, size: 20288, align: 64, elements: !7)
!6 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!7 = !{!8, !111, !112, !113, !114, !115, !159, !223, !224, !225, !226, !227, !228, !261, !263, !273, !274}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !5, file: !6, line: 160, baseType: !9, size: 1280, align: 64)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive", file: !10, line: 89, size: 1280, align: 64, elements: !11)
!10 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!11 = !{!12, !14, !15, !83, !84, !85, !86, !87, !88, !89, !90, !98, !99, !100, !101, !105, !106, !107, !108, !109, !110}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !9, file: !10, line: 96, baseType: !13, size: 32, align: 32)
!13 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9, file: !10, line: 97, baseType: !13, size: 32, align: 32, offset: 32)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !9, file: !10, line: 103, baseType: !16, size: 64, align: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_vtable", file: !10, line: 63, size: 832, align: 64, elements: !18)
!18 = !{!19, !25, !26, !33, !34, !48, !54, !59, !60, !67, !68, !72, !76}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "archive_close", scope: !17, file: !10, line: 64, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DISubroutineType(types: !22)
!22 = !{!23, !24}
!23 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "archive_free", scope: !17, file: !10, line: 65, baseType: !20, size: 64, align: 64, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_header", scope: !17, file: !10, line: 66, baseType: !27, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DISubroutineType(types: !29)
!29 = !{!23, !24, !30}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_entry", file: !32, line: 180, flags: DIFlagFwdDecl)
!32 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!33 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_finish_entry", scope: !17, file: !10, line: 68, baseType: !20, size: 64, align: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data", scope: !17, file: !10, line: 69, baseType: !35, size: 64, align: 64, offset: 256)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DISubroutineType(types: !37)
!37 = !{!38, !24, !43, !45}
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !39, line: 109, baseType: !40)
!39 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !41, line: 172, baseType: !42)
!41 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!42 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !46, line: 62, baseType: !47)
!46 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!47 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data_block", scope: !17, file: !10, line: 71, baseType: !49, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DISubroutineType(types: !51)
!51 = !{!38, !24, !43, !45, !52}
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !53, line: 40, baseType: !42)
!53 = !DIFile(filename: "/usr/include/stdint.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!54 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header", scope: !17, file: !10, line: 74, baseType: !55, size: 64, align: 64, offset: 384)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64, align: 64)
!56 = !DISubroutineType(types: !57)
!57 = !{!23, !24, !58}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header2", scope: !17, file: !10, line: 76, baseType: !27, size: 64, align: 64, offset: 448)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_data_block", scope: !17, file: !10, line: 78, baseType: !61, size: 64, align: 64, offset: 512)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{!23, !24, !64, !65, !66}
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_count", scope: !17, file: !10, line: 81, baseType: !20, size: 64, align: 64, offset: 576)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_bytes", scope: !17, file: !10, line: 82, baseType: !69, size: 64, align: 64, offset: 640)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64, align: 64)
!70 = !DISubroutineType(types: !71)
!71 = !{!52, !24, !23}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_code", scope: !17, file: !10, line: 83, baseType: !73, size: 64, align: 64, offset: 704)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DISubroutineType(types: !75)
!75 = !{!23, !24, !23}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_name", scope: !17, file: !10, line: 84, baseType: !77, size: 64, align: 64, offset: 768)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64, align: 64)
!78 = !DISubroutineType(types: !79)
!79 = !{!80, !24, !23}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!82 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format", scope: !9, file: !10, line: 105, baseType: !23, size: 32, align: 32, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format_name", scope: !9, file: !10, line: 106, baseType: !80, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "compression_code", scope: !9, file: !10, line: 108, baseType: !23, size: 32, align: 32, offset: 256)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "compression_name", scope: !9, file: !10, line: 109, baseType: !80, size: 64, align: 64, offset: 320)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "file_count", scope: !9, file: !10, line: 112, baseType: !23, size: 32, align: 32, offset: 384)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "archive_error_number", scope: !9, file: !10, line: 114, baseType: !23, size: 32, align: 32, offset: 416)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !9, file: !10, line: 115, baseType: !80, size: 64, align: 64, offset: 448)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "error_string", scope: !9, file: !10, line: 116, baseType: !91, size: 192, align: 64, offset: 512)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string", file: !92, line: 58, size: 192, align: 64, elements: !93)
!92 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_string.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!93 = !{!94, !96, !97}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !91, file: !92, line: 59, baseType: !95, size: 64, align: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !91, file: !92, line: 60, baseType: !45, size: 64, align: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !91, file: !92, line: 61, baseType: !45, size: 64, align: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "current_code", scope: !9, file: !10, line: 118, baseType: !95, size: 64, align: 64, offset: 704)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "current_codepage", scope: !9, file: !10, line: 119, baseType: !13, size: 32, align: 32, offset: 768)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "current_oemcp", scope: !9, file: !10, line: 120, baseType: !13, size: 32, align: 32, offset: 800)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "sconv", scope: !9, file: !10, line: 121, baseType: !102, size: 64, align: 64, offset: 832)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64, align: 64)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string_conv", file: !104, line: 36, flags: DIFlagFwdDecl)
!104 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_entry_locale.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!105 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_block", scope: !9, file: !10, line: 127, baseType: !80, size: 64, align: 64, offset: 896)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_offset", scope: !9, file: !10, line: 128, baseType: !52, size: 64, align: 64, offset: 960)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_output_offset", scope: !9, file: !10, line: 129, baseType: !52, size: 64, align: 64, offset: 1024)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_remaining", scope: !9, file: !10, line: 130, baseType: !45, size: 64, align: 64, offset: 1088)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_is_posix_read", scope: !9, file: !10, line: 137, baseType: !82, size: 8, align: 8, offset: 1152)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_requested", scope: !9, file: !10, line: 138, baseType: !45, size: 64, align: 64, offset: 1216)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5, file: !6, line: 162, baseType: !30, size: 64, align: 64, offset: 1280)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_set", scope: !5, file: !6, line: 165, baseType: !23, size: 32, align: 32, offset: 1344)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_dev", scope: !5, file: !6, line: 166, baseType: !52, size: 64, align: 64, offset: 1408)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_ino", scope: !5, file: !6, line: 167, baseType: !52, size: 64, align: 64, offset: 1472)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !5, file: !6, line: 170, baseType: !116, size: 576, align: 64, offset: 1536)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_client", file: !6, line: 134, size: 576, align: 64, elements: !117)
!117 = !{!118, !124, !130, !136, !141, !144, !149, !150, !151, !152}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "opener", scope: !116, file: !6, line: 135, baseType: !119, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_open_callback", file: !32, line: 241, baseType: !121)
!121 = !DISubroutineType(types: !122)
!122 = !{!23, !24, !123}
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "reader", scope: !116, file: !6, line: 136, baseType: !125, size: 64, align: 64, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_read_callback", file: !32, line: 218, baseType: !127)
!127 = !DISubroutineType(types: !128)
!128 = !{!129, !24, !123, !64}
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_ssize_t", file: !32, line: 95, baseType: !38)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "skipper", scope: !116, file: !6, line: 137, baseType: !131, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_skip_callback", file: !32, line: 226, baseType: !133)
!133 = !DISubroutineType(types: !134)
!134 = !{!135, !24, !123, !135}
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_int64_t", file: !32, line: 73, baseType: !52)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "seeker", scope: !116, file: !6, line: 138, baseType: !137, size: 64, align: 64, offset: 192)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64, align: 64)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_seek_callback", file: !32, line: 233, baseType: !139)
!139 = !DISubroutineType(types: !140)
!140 = !{!135, !24, !123, !135, !23}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "closer", scope: !116, file: !6, line: 139, baseType: !142, size: 64, align: 64, offset: 256)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64, align: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_close_callback", file: !32, line: 243, baseType: !121)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "switcher", scope: !116, file: !6, line: 140, baseType: !145, size: 64, align: 64, offset: 320)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_switch_callback", file: !32, line: 249, baseType: !147)
!147 = !DISubroutineType(types: !148)
!148 = !{!23, !24, !123, !123}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !116, file: !6, line: 141, baseType: !13, size: 32, align: 32, offset: 384)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !116, file: !6, line: 142, baseType: !13, size: 32, align: 32, offset: 416)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !116, file: !6, line: 143, baseType: !52, size: 64, align: 64, offset: 448)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !116, file: !6, line: 144, baseType: !153, size: 64, align: 64, offset: 512)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!154 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_data_node", file: !6, line: 129, size: 192, align: 64, elements: !155)
!155 = !{!156, !157, !158}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "begin_position", scope: !154, file: !6, line: 130, baseType: !52, size: 64, align: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !154, file: !6, line: 131, baseType: !52, size: 64, align: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !154, file: !6, line: 132, baseType: !123, size: 64, align: 64, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "bidders", scope: !5, file: !6, line: 173, baseType: !160, size: 6144, align: 64, offset: 2112)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 6144, align: 64, elements: !221)
!161 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter_bidder", file: !6, line: 60, size: 384, align: 64, elements: !162)
!162 = !{!163, !164, !165, !212, !213, !217}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !161, file: !6, line: 62, baseType: !123, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !161, file: !6, line: 64, baseType: !80, size: 64, align: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !161, file: !6, line: 66, baseType: !166, size: 64, align: 64, offset: 128)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{!23, !169, !170}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64, align: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64, align: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter", file: !6, line: 82, size: 1408, align: 64, elements: !172)
!172 = !{!173, !174, !175, !176, !177, !181, !185, !189, !193, !194, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !171, file: !6, line: 83, baseType: !52, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "bidder", scope: !171, file: !6, line: 86, baseType: !169, size: 64, align: 64, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "upstream", scope: !171, file: !6, line: 87, baseType: !170, size: 64, align: 64, offset: 128)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !171, file: !6, line: 88, baseType: !4, size: 64, align: 64, offset: 192)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !171, file: !6, line: 90, baseType: !178, size: 64, align: 64, offset: 256)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{!23, !170}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !171, file: !6, line: 92, baseType: !182, size: 64, align: 64, offset: 320)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64, align: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!38, !170, !64}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !171, file: !6, line: 94, baseType: !186, size: 64, align: 64, offset: 384)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64, align: 64)
!187 = !DISubroutineType(types: !188)
!188 = !{!52, !170, !52}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !171, file: !6, line: 96, baseType: !190, size: 64, align: 64, offset: 448)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!52, !170, !52, !23}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !171, file: !6, line: 98, baseType: !178, size: 64, align: 64, offset: 512)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sswitch", scope: !171, file: !6, line: 100, baseType: !195, size: 64, align: 64, offset: 576)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64, align: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!23, !170, !13}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !171, file: !6, line: 102, baseType: !123, size: 64, align: 64, offset: 640)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !171, file: !6, line: 104, baseType: !80, size: 64, align: 64, offset: 704)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !171, file: !6, line: 105, baseType: !23, size: 32, align: 32, offset: 768)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !171, file: !6, line: 108, baseType: !95, size: 64, align: 64, offset: 832)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !171, file: !6, line: 109, baseType: !45, size: 64, align: 64, offset: 896)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !171, file: !6, line: 110, baseType: !95, size: 64, align: 64, offset: 960)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !171, file: !6, line: 111, baseType: !45, size: 64, align: 64, offset: 1024)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "client_buff", scope: !171, file: !6, line: 112, baseType: !43, size: 64, align: 64, offset: 1088)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "client_total", scope: !171, file: !6, line: 113, baseType: !45, size: 64, align: 64, offset: 1152)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "client_next", scope: !171, file: !6, line: 114, baseType: !80, size: 64, align: 64, offset: 1216)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "client_avail", scope: !171, file: !6, line: 115, baseType: !45, size: 64, align: 64, offset: 1280)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_file", scope: !171, file: !6, line: 116, baseType: !82, size: 8, align: 8, offset: 1344)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "closed", scope: !171, file: !6, line: 117, baseType: !82, size: 8, align: 8, offset: 1352)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "fatal", scope: !171, file: !6, line: 118, baseType: !82, size: 8, align: 8, offset: 1360)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !161, file: !6, line: 69, baseType: !178, size: 64, align: 64, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !161, file: !6, line: 71, baseType: !214, size: 64, align: 64, offset: 256)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64, align: 64)
!215 = !DISubroutineType(types: !216)
!216 = !{!23, !169, !80, !80}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !161, file: !6, line: 74, baseType: !218, size: 64, align: 64, offset: 320)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!23, !169}
!221 = !{!222}
!222 = !DISubrange(count: 16)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5, file: !6, line: 176, baseType: !170, size: 64, align: 64, offset: 8256)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_filter_bidding", scope: !5, file: !6, line: 179, baseType: !23, size: 32, align: 32, offset: 8320)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "header_position", scope: !5, file: !6, line: 182, baseType: !52, size: 64, align: 64, offset: 8384)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "data_start_node", scope: !5, file: !6, line: 185, baseType: !13, size: 32, align: 32, offset: 8448)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "data_end_node", scope: !5, file: !6, line: 186, baseType: !13, size: 32, align: 32, offset: 8480)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !5, file: !6, line: 209, baseType: !229, size: 11264, align: 64, offset: 8512)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 11264, align: 64, elements: !221)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_format_descriptor", file: !6, line: 196, size: 704, align: 64, elements: !231)
!231 = !{!232, !233, !234, !238, !242, !246, !250, !254, !258, !259, !260}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !6, line: 197, baseType: !123, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !230, file: !6, line: 198, baseType: !80, size: 64, align: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !230, file: !6, line: 199, baseType: !235, size: 64, align: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DISubroutineType(types: !237)
!237 = !{!23, !4, !23}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !230, file: !6, line: 200, baseType: !239, size: 64, align: 64, offset: 192)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!23, !4, !80, !80}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !230, file: !6, line: 202, baseType: !243, size: 64, align: 64, offset: 256)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!23, !4, !30}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "read_data", scope: !230, file: !6, line: 203, baseType: !247, size: 64, align: 64, offset: 320)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = !DISubroutineType(types: !249)
!249 = !{!23, !4, !64, !65, !66}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_skip", scope: !230, file: !6, line: 204, baseType: !251, size: 64, align: 64, offset: 384)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{!23, !4}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "seek_data", scope: !230, file: !6, line: 205, baseType: !255, size: 64, align: 64, offset: 448)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!52, !4, !52, !23}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !230, file: !6, line: 206, baseType: !251, size: 64, align: 64, offset: 512)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "format_capabilties", scope: !230, file: !6, line: 207, baseType: !251, size: 64, align: 64, offset: 576)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "has_encrypted_entries", scope: !230, file: !6, line: 208, baseType: !251, size: 64, align: 64, offset: 640)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !5, file: !6, line: 210, baseType: !262, size: 64, align: 64, offset: 19776)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !5, file: !6, line: 215, baseType: !264, size: 64, align: 64, offset: 19840)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_extract", file: !6, line: 151, size: 192, align: 64, elements: !266)
!266 = !{!267, !268, !272}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !265, file: !6, line: 152, baseType: !24, size: 64, align: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress", scope: !265, file: !6, line: 155, baseType: !269, size: 64, align: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !123}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress_user_data", scope: !265, file: !6, line: 156, baseType: !123, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_archive_extract", scope: !5, file: !6, line: 216, baseType: !251, size: 64, align: 64, offset: 19904)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "passphrases", scope: !5, file: !6, line: 227, baseType: !275, size: 320, align: 64, offset: 19968)
!275 = !DICompositeType(tag: DW_TAG_structure_type, scope: !5, file: !6, line: 221, size: 320, align: 64, elements: !276)
!276 = !{!277, !283, !285, !286, !291}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !275, file: !6, line: 222, baseType: !278, size: 64, align: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64, align: 64)
!279 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_passphrase", file: !6, line: 146, size: 128, align: 64, elements: !280)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "passphrase", scope: !279, file: !6, line: 147, baseType: !95, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !279, file: !6, line: 148, baseType: !278, size: 64, align: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !275, file: !6, line: 223, baseType: !284, size: 64, align: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "candidate", scope: !275, file: !6, line: 224, baseType: !23, size: 32, align: 32, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !275, file: !6, line: 225, baseType: !287, size: 64, align: 64, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64, align: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_passphrase_callback", file: !32, line: 256, baseType: !289)
!289 = !DISubroutineType(types: !290)
!290 = !{!80, !24, !123}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !275, file: !6, line: 226, baseType: !123, size: 64, align: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "zip", file: !1, line: 134, size: 3712, align: 64, elements: !294)
!294 = !{!295, !296, !297, !298, !299, !300, !345, !368, !369, !370, !371, !372, !373, !374, !375, !379, !380, !381, !382, !384, !385, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !442, !443, !446, !447, !450, !451, !452, !453, !454, !455, !456, !457, !458, !461, !462}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "format_name", scope: !293, file: !1, line: 136, baseType: !91, size: 192, align: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "central_directory_offset", scope: !293, file: !1, line: 137, baseType: !52, size: 64, align: 64, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "central_directory_entries_total", scope: !293, file: !1, line: 138, baseType: !45, size: 64, align: 64, offset: 256)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "central_directory_entries_on_this_disk", scope: !293, file: !1, line: 139, baseType: !45, size: 64, align: 64, offset: 320)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "has_encrypted_entries", scope: !293, file: !1, line: 140, baseType: !23, size: 32, align: 32, offset: 384)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "zip_entries", scope: !293, file: !1, line: 143, baseType: !301, size: 64, align: 64, offset: 448)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64, align: 64)
!302 = !DICompositeType(tag: DW_TAG_structure_type, name: "zip_entry", file: !1, line: 71, size: 1152, align: 64, elements: !303)
!303 = !{!304, !315, !316, !317, !318, !319, !320, !321, !322, !326, !327, !328, !330, !333, !334, !336, !337, !338, !339}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !302, file: !1, line: 72, baseType: !305, size: 192, align: 64)
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_rb_node", file: !306, line: 34, size: 192, align: 64, elements: !307)
!306 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_rb.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!307 = !{!308, !313}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "rb_nodes", scope: !305, file: !306, line: 35, baseType: !309, size: 128, align: 64)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 128, align: 64, elements: !311)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!311 = !{!312}
!312 = !DISubrange(count: 2)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "rb_info", scope: !305, file: !306, line: 41, baseType: !314, size: 64, align: 64, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !53, line: 122, baseType: !47)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !302, file: !1, line: 73, baseType: !301, size: 64, align: 64, offset: 192)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "local_header_offset", scope: !302, file: !1, line: 74, baseType: !52, size: 64, align: 64, offset: 256)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_size", scope: !302, file: !1, line: 75, baseType: !52, size: 64, align: 64, offset: 320)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_size", scope: !302, file: !1, line: 76, baseType: !52, size: 64, align: 64, offset: 384)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !302, file: !1, line: 77, baseType: !52, size: 64, align: 64, offset: 448)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !302, file: !1, line: 78, baseType: !52, size: 64, align: 64, offset: 512)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "rsrcname", scope: !302, file: !1, line: 79, baseType: !91, size: 192, align: 64, offset: 576)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !302, file: !1, line: 80, baseType: !323, size: 64, align: 64, offset: 768)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !324, line: 75, baseType: !325)
!324 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !41, line: 139, baseType: !42)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !302, file: !1, line: 81, baseType: !323, size: 64, align: 64, offset: 832)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !302, file: !1, line: 82, baseType: !323, size: 64, align: 64, offset: 896)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "cm_zlib_crc32", scope: !302, file: !1, line: 83, baseType: !329, size: 32, align: 32, offset: 960)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !53, line: 51, baseType: !13)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !302, file: !1, line: 84, baseType: !331, size: 16, align: 16, offset: 992)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !53, line: 49, baseType: !332)
!332 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "zip_flags", scope: !302, file: !1, line: 85, baseType: !331, size: 16, align: 16, offset: 1008)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !302, file: !1, line: 86, baseType: !335, size: 8, align: 8, offset: 1024)
!335 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !302, file: !1, line: 87, baseType: !335, size: 8, align: 8, offset: 1032)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !302, file: !1, line: 88, baseType: !335, size: 8, align: 8, offset: 1040)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "decdat", scope: !302, file: !1, line: 89, baseType: !335, size: 8, align: 8, offset: 1048)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "aes_extra", scope: !302, file: !1, line: 103, baseType: !340, size: 96, align: 32, offset: 1056)
!340 = !DICompositeType(tag: DW_TAG_structure_type, scope: !302, file: !1, line: 93, size: 96, align: 32, elements: !341)
!341 = !{!342, !343, !344}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !340, file: !1, line: 95, baseType: !13, size: 32, align: 32)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !340, file: !1, line: 100, baseType: !13, size: 32, align: 32, offset: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !340, file: !1, line: 102, baseType: !335, size: 8, align: 8, offset: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !293, file: !1, line: 144, baseType: !346, size: 128, align: 64, offset: 512)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_rb_tree", file: !306, line: 80, size: 128, align: 64, elements: !347)
!347 = !{!348, !349}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "rbt_root", scope: !346, file: !306, line: 81, baseType: !310, size: 64, align: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rbt_ops", scope: !346, file: !306, line: 82, baseType: !350, size: 64, align: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_rb_tree_ops", file: !306, line: 75, size: 128, align: 64, elements: !353)
!353 = !{!354, !362}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "rbto_compare_nodes", scope: !352, file: !306, line: 76, baseType: !355, size: 64, align: 64)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_rbto_compare_nodes_fn", file: !306, line: 70, baseType: !356)
!356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64, align: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{!23, !360, !360}
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64, align: 64)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !305)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rbto_compare_key", scope: !352, file: !306, line: 77, baseType: !363, size: 64, align: 64, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_rbto_compare_key_fn", file: !306, line: 72, baseType: !364)
!364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64, align: 64)
!366 = !DISubroutineType(types: !367)
!367 = !{!23, !360, !43}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "tree_rsrc", scope: !293, file: !1, line: 145, baseType: !346, size: 128, align: 64, offset: 640)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "unconsumed", scope: !293, file: !1, line: 148, baseType: !45, size: 64, align: 64, offset: 768)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !293, file: !1, line: 151, baseType: !301, size: 64, align: 64, offset: 832)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "entry_bytes_remaining", scope: !293, file: !1, line: 152, baseType: !52, size: 64, align: 64, offset: 896)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "entry_compressed_bytes_read", scope: !293, file: !1, line: 155, baseType: !52, size: 64, align: 64, offset: 960)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "entry_uncompressed_bytes_read", scope: !293, file: !1, line: 156, baseType: !52, size: 64, align: 64, offset: 1024)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "entry_crc32", scope: !293, file: !1, line: 159, baseType: !47, size: 64, align: 64, offset: 1088)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "crc32func", scope: !293, file: !1, line: 160, baseType: !376, size: 64, align: 64, offset: 1152)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64, align: 64)
!377 = !DISubroutineType(types: !378)
!378 = !{!47, !47, !43, !45}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_crc32", scope: !293, file: !1, line: 162, baseType: !82, size: 8, align: 8, offset: 1216)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "decompress_init", scope: !293, file: !1, line: 165, baseType: !82, size: 8, align: 8, offset: 1224)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_entry", scope: !293, file: !1, line: 166, baseType: !82, size: 8, align: 8, offset: 1232)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_buffer", scope: !293, file: !1, line: 169, baseType: !383, size: 64, align: 64, offset: 1280)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_buffer_size", scope: !293, file: !1, line: 170, baseType: !45, size: 64, align: 64, offset: 1344)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !293, file: !1, line: 171, baseType: !386, size: 896, align: 64, offset: 1408)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !387, line: 101, baseType: !388)
!387 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zlib.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!388 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !387, line: 82, size: 896, align: 64, elements: !389)
!389 = !{!390, !395, !397, !399, !400, !401, !402, !403, !408, !414, !419, !420, !421, !422}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !388, file: !387, line: 83, baseType: !391, size: 64, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64, align: 64)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !393, line: 276, baseType: !394)
!393 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zconf.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !393, line: 267, baseType: !335)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !388, file: !387, line: 84, baseType: !396, size: 32, align: 32, offset: 64)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !393, line: 269, baseType: !13)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !388, file: !387, line: 85, baseType: !398, size: 64, align: 64, offset: 128)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !393, line: 270, baseType: !47)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !388, file: !387, line: 87, baseType: !391, size: 64, align: 64, offset: 192)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !388, file: !387, line: 88, baseType: !396, size: 32, align: 32, offset: 256)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !388, file: !387, line: 89, baseType: !398, size: 64, align: 64, offset: 320)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !388, file: !387, line: 91, baseType: !95, size: 64, align: 64, offset: 384)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !388, file: !387, line: 92, baseType: !404, size: 64, align: 64, offset: 448)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !387, line: 1346, size: 32, align: 32, elements: !406)
!406 = !{!407}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !405, file: !387, line: 1346, baseType: !23, size: 32, align: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !388, file: !387, line: 94, baseType: !409, size: 64, align: 64, offset: 512)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !387, line: 77, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64, align: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{!413, !413, !396, !396}
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !393, line: 285, baseType: !123)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !388, file: !387, line: 95, baseType: !415, size: 64, align: 64, offset: 576)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !387, line: 78, baseType: !416)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64, align: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !413, !413}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !388, file: !387, line: 96, baseType: !413, size: 64, align: 64, offset: 640)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !388, file: !387, line: 98, baseType: !23, size: 32, align: 32, offset: 704)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !388, file: !387, line: 99, baseType: !398, size: 64, align: 64, offset: 768)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !388, file: !387, line: 100, baseType: !398, size: 64, align: 64, offset: 832)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "stream_valid", scope: !293, file: !1, line: 172, baseType: !82, size: 8, align: 8, offset: 2304)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "sconv", scope: !293, file: !1, line: 175, baseType: !102, size: 64, align: 64, offset: 2368)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_default", scope: !293, file: !1, line: 176, baseType: !102, size: 64, align: 64, offset: 2432)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_utf8", scope: !293, file: !1, line: 177, baseType: !102, size: 64, align: 64, offset: 2496)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "init_default_conversion", scope: !293, file: !1, line: 178, baseType: !23, size: 32, align: 32, offset: 2560)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "process_mac_extensions", scope: !293, file: !1, line: 179, baseType: !23, size: 32, align: 32, offset: 2592)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "init_decryption", scope: !293, file: !1, line: 181, baseType: !82, size: 8, align: 8, offset: 2624)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "decrypted_buffer", scope: !293, file: !1, line: 192, baseType: !383, size: 64, align: 64, offset: 2688)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "decrypted_ptr", scope: !293, file: !1, line: 193, baseType: !383, size: 64, align: 64, offset: 2752)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "decrypted_buffer_size", scope: !293, file: !1, line: 194, baseType: !45, size: 64, align: 64, offset: 2816)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "decrypted_bytes_remaining", scope: !293, file: !1, line: 195, baseType: !45, size: 64, align: 64, offset: 2880)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "decrypted_unconsumed_bytes", scope: !293, file: !1, line: 196, baseType: !45, size: 64, align: 64, offset: 2944)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "tctx", scope: !293, file: !1, line: 199, baseType: !436, size: 96, align: 32, offset: 3008)
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "trad_enc_ctx", file: !1, line: 106, size: 96, align: 32, elements: !437)
!437 = !{!438}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !436, file: !1, line: 107, baseType: !439, size: 96, align: 32)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 96, align: 32, elements: !440)
!440 = !{!441}
!441 = !DISubrange(count: 3)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "tctx_valid", scope: !293, file: !1, line: 200, baseType: !82, size: 8, align: 8, offset: 3104)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "cctx", scope: !293, file: !1, line: 204, baseType: !444, size: 32, align: 32, offset: 3136)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_crypto_ctx", file: !445, line: 120, baseType: !23)
!445 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_cryptor_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!446 = !DIDerivedType(tag: DW_TAG_member, name: "cctx_valid", scope: !293, file: !1, line: 205, baseType: !82, size: 8, align: 8, offset: 3168)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "hctx", scope: !293, file: !1, line: 206, baseType: !448, size: 32, align: 32, offset: 3200)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_hmac_sha1_ctx", file: !449, line: 79, baseType: !23)
!449 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_hmac_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!450 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_valid", scope: !293, file: !1, line: 207, baseType: !82, size: 8, align: 8, offset: 3232)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "iv_size", scope: !293, file: !1, line: 210, baseType: !13, size: 32, align: 32, offset: 3264)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "alg_id", scope: !293, file: !1, line: 211, baseType: !13, size: 32, align: 32, offset: 3296)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "bit_len", scope: !293, file: !1, line: 212, baseType: !13, size: 32, align: 32, offset: 3328)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !293, file: !1, line: 213, baseType: !13, size: 32, align: 32, offset: 3360)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "erd_size", scope: !293, file: !1, line: 214, baseType: !13, size: 32, align: 32, offset: 3392)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "v_size", scope: !293, file: !1, line: 215, baseType: !13, size: 32, align: 32, offset: 3424)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "v_crc32", scope: !293, file: !1, line: 216, baseType: !13, size: 32, align: 32, offset: 3456)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !293, file: !1, line: 217, baseType: !459, size: 64, align: 64, offset: 3520)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64, align: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !53, line: 48, baseType: !335)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "erd", scope: !293, file: !1, line: 218, baseType: !459, size: 64, align: 64, offset: 3584)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v_data", scope: !293, file: !1, line: 219, baseType: !459, size: 64, align: 64, offset: 3648)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !39, line: 70, baseType: !464)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !41, line: 129, baseType: !13)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !53, line: 134, baseType: !42)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !53, line: 55, baseType: !47)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64, align: 64)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!473 = !{!474, !475, !476, !477, !478, !479, !480, !481, !482, !485, !489, !492, !495, !498, !501, !505, !506, !507, !508, !509, !510, !514, !517, !520, !523, !524, !527, !528, !531, !532, !533, !534, !535, !536, !539, !542, !543, !544, !545, !546, !547, !548, !551, !554, !557, !560, !561}
!474 = distinct !DISubprogram(name: "archive_read_support_format_zip", scope: !1, file: !1, line: 2063, type: !21, isLocal: false, isDefinition: true, scopeLine: 2064, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!475 = distinct !DISubprogram(name: "archive_read_support_format_zip_streamable", scope: !1, file: !1, line: 2310, type: !21, isLocal: false, isDefinition: true, scopeLine: 2311, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!476 = distinct !DISubprogram(name: "archive_read_support_format_zip_seekable", scope: !1, file: !1, line: 3068, type: !21, isLocal: false, isDefinition: true, scopeLine: 3069, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!477 = distinct !DISubprogram(name: "real_crc32", scope: !1, file: !1, line: 335, type: !377, isLocal: true, isDefinition: true, scopeLine: 336, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!478 = distinct !DISubprogram(name: "archive_read_format_zip_streamable_bid", scope: !1, file: !1, line: 2088, type: !236, isLocal: true, isDefinition: true, scopeLine: 2089, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!479 = distinct !DISubprogram(name: "archive_read_format_zip_options", scope: !1, file: !1, line: 2014, type: !240, isLocal: true, isDefinition: true, scopeLine: 2016, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!480 = distinct !DISubprogram(name: "fake_crc32", scope: !1, file: !1, line: 342, type: !377, isLocal: true, isDefinition: true, scopeLine: 343, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!481 = distinct !DISubprogram(name: "archive_read_format_zip_streamable_read_header", scope: !1, file: !1, line: 2124, type: !244, isLocal: true, isDefinition: true, scopeLine: 2126, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!482 = distinct !DISubprogram(name: "zip_read_local_file_header", scope: !1, file: !1, line: 755, type: !483, isLocal: true, isDefinition: true, scopeLine: 757, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!483 = !DISubroutineType(types: !484)
!484 = !{!23, !4, !30, !292}
!485 = distinct !DISubprogram(name: "archive_le16dec", scope: !486, file: !486, line: 101, type: !487, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!486 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_endian.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!487 = !DISubroutineType(types: !488)
!488 = !{!331, !43}
!489 = distinct !DISubprogram(name: "zip_time", scope: !1, file: !1, line: 397, type: !490, isLocal: true, isDefinition: true, scopeLine: 398, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!490 = !DISubroutineType(types: !491)
!491 = !{!323, !80}
!492 = distinct !DISubprogram(name: "archive_le32dec", scope: !486, file: !486, line: 115, type: !493, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!493 = !DISubroutineType(types: !494)
!494 = !{!329, !43}
!495 = distinct !DISubprogram(name: "process_extra", scope: !1, file: !1, line: 422, type: !496, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!496 = !DISubroutineType(types: !497)
!497 = !{!23, !4, !80, !45, !301}
!498 = distinct !DISubprogram(name: "archive_le64dec", scope: !486, file: !486, line: 131, type: !499, isLocal: true, isDefinition: true, scopeLine: 132, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!499 = !DISubroutineType(types: !500)
!500 = !{!468, !43}
!501 = distinct !DISubprogram(name: "compression_name", scope: !1, file: !1, line: 381, type: !502, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!502 = !DISubroutineType(types: !503)
!503 = !{!80, !504}
!504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!505 = distinct !DISubprogram(name: "archive_read_format_zip_read_data", scope: !1, file: !1, line: 1863, type: !248, isLocal: true, isDefinition: true, scopeLine: 1865, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!506 = distinct !DISubprogram(name: "read_decryption_header", scope: !1, file: !1, line: 1485, type: !252, isLocal: true, isDefinition: true, scopeLine: 1486, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!507 = distinct !DISubprogram(name: "init_WinZip_AES_decryption", scope: !1, file: !1, line: 1770, type: !252, isLocal: true, isDefinition: true, scopeLine: 1771, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!508 = distinct !DISubprogram(name: "zip_alloc_decryption_buffer", scope: !1, file: !1, line: 1679, type: !252, isLocal: true, isDefinition: true, scopeLine: 1680, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!509 = distinct !DISubprogram(name: "init_traditional_PKWARE_decryption", scope: !1, file: !1, line: 1698, type: !252, isLocal: true, isDefinition: true, scopeLine: 1699, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!510 = distinct !DISubprogram(name: "trad_enc_init", scope: !1, file: !1, line: 267, type: !511, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!511 = !DISubroutineType(types: !512)
!512 = !{!23, !513, !80, !45, !469, !45, !459}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64, align: 64)
!514 = distinct !DISubprogram(name: "trad_enc_update_keys", scope: !1, file: !1, line: 232, type: !515, isLocal: true, isDefinition: true, scopeLine: 233, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!515 = !DISubroutineType(types: !516)
!516 = !{null, !513, !460}
!517 = distinct !DISubprogram(name: "trad_enc_decrypt_update", scope: !1, file: !1, line: 252, type: !518, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!518 = !DISubroutineType(types: !519)
!519 = !{null, !513, !469, !45, !459, !45}
!520 = distinct !DISubprogram(name: "trad_enc_decrypt_byte", scope: !1, file: !1, line: 245, type: !521, isLocal: true, isDefinition: true, scopeLine: 246, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!521 = !DISubroutineType(types: !522)
!522 = !{!460, !513}
!523 = distinct !DISubprogram(name: "zip_read_data_none", scope: !1, file: !1, line: 1129, type: !248, isLocal: true, isDefinition: true, scopeLine: 1131, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!524 = distinct !DISubprogram(name: "check_authentication_code", scope: !1, file: !1, line: 1068, type: !525, isLocal: true, isDefinition: true, scopeLine: 1069, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!525 = !DISubroutineType(types: !526)
!526 = !{!23, !4, !43}
!527 = distinct !DISubprogram(name: "zip_read_data_deflate", scope: !1, file: !1, line: 1296, type: !248, isLocal: true, isDefinition: true, scopeLine: 1298, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!528 = distinct !DISubprogram(name: "zip_deflate_init", scope: !1, file: !1, line: 1271, type: !529, isLocal: true, isDefinition: true, scopeLine: 1272, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!529 = !DISubroutineType(types: !530)
!530 = !{!23, !4, !292}
!531 = distinct !DISubprogram(name: "archive_read_format_zip_read_data_skip_streamable", scope: !1, file: !1, line: 2218, type: !252, isLocal: true, isDefinition: true, scopeLine: 2219, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!532 = distinct !DISubprogram(name: "archive_read_format_zip_cleanup", scope: !1, file: !1, line: 1967, type: !252, isLocal: true, isDefinition: true, scopeLine: 1968, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!533 = distinct !DISubprogram(name: "archive_read_support_format_zip_capabilities_streamable", scope: !1, file: !1, line: 2080, type: !252, isLocal: true, isDefinition: true, scopeLine: 2081, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!534 = distinct !DISubprogram(name: "archive_read_format_zip_has_encrypted_entries", scope: !1, file: !1, line: 2002, type: !252, isLocal: true, isDefinition: true, scopeLine: 2003, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!535 = distinct !DISubprogram(name: "archive_read_format_zip_seekable_bid", scope: !1, file: !1, line: 2452, type: !236, isLocal: true, isDefinition: true, scopeLine: 2453, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!536 = distinct !DISubprogram(name: "read_eocd", scope: !1, file: !1, line: 2378, type: !537, isLocal: true, isDefinition: true, scopeLine: 2379, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!537 = !DISubroutineType(types: !538)
!538 = !{!23, !292, !80, !52}
!539 = distinct !DISubprogram(name: "read_zip64_eocd", scope: !1, file: !1, line: 2411, type: !540, isLocal: true, isDefinition: true, scopeLine: 2412, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!540 = !DISubroutineType(types: !541)
!541 = !{null, !4, !292, !80}
!542 = distinct !DISubprogram(name: "archive_read_format_zip_seekable_read_header", scope: !1, file: !1, line: 2977, type: !244, isLocal: true, isDefinition: true, scopeLine: 2979, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!543 = distinct !DISubprogram(name: "slurp_central_directory", scope: !1, file: !1, line: 2600, type: !529, isLocal: true, isDefinition: true, scopeLine: 2601, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!544 = distinct !DISubprogram(name: "cmp_node", scope: !1, file: !1, line: 2511, type: !358, isLocal: true, isDefinition: true, scopeLine: 2512, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!545 = distinct !DISubprogram(name: "cmp_key", scope: !1, file: !1, line: 2524, type: !366, isLocal: true, isDefinition: true, scopeLine: 2525, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!546 = distinct !DISubprogram(name: "rsrc_cmp_node", scope: !1, file: !1, line: 2537, type: !358, isLocal: true, isDefinition: true, scopeLine: 2539, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!547 = distinct !DISubprogram(name: "rsrc_cmp_key", scope: !1, file: !1, line: 2547, type: !366, isLocal: true, isDefinition: true, scopeLine: 2548, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!548 = distinct !DISubprogram(name: "rsrc_basename", scope: !1, file: !1, line: 2558, type: !549, isLocal: true, isDefinition: true, scopeLine: 2559, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!549 = !DISubroutineType(types: !550)
!550 = !{!80, !80, !45}
!551 = distinct !DISubprogram(name: "expose_parent_dirs", scope: !1, file: !1, line: 2573, type: !552, isLocal: true, isDefinition: true, scopeLine: 2574, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!552 = !DISubroutineType(types: !553)
!553 = !{null, !292, !80, !45}
!554 = distinct !DISubprogram(name: "zip_read_mac_metadata", scope: !1, file: !1, line: 2828, type: !555, isLocal: true, isDefinition: true, scopeLine: 2830, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!555 = !DISubroutineType(types: !556)
!556 = !{!23, !4, !30, !301}
!557 = distinct !DISubprogram(name: "zip_get_local_file_header_size", scope: !1, file: !1, line: 2805, type: !558, isLocal: true, isDefinition: true, scopeLine: 2806, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!558 = !DISubroutineType(types: !559)
!559 = !{!38, !4, !45}
!560 = distinct !DISubprogram(name: "archive_read_format_zip_read_data_skip_seekable", scope: !1, file: !1, line: 3058, type: !252, isLocal: true, isDefinition: true, scopeLine: 3059, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!561 = distinct !DISubprogram(name: "archive_read_support_format_zip_capabilities_seekable", scope: !1, file: !1, line: 2361, type: !252, isLocal: true, isDefinition: true, scopeLine: 2362, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!562 = !{!563, !564, !572, !573}
!563 = !DIGlobalVariable(name: "num_compression_methods", scope: !501, file: !1, line: 383, type: !504, isLocal: true, isDefinition: true, variable: i32* @compression_name.num_compression_methods)
!564 = !DIGlobalVariable(name: "compression_methods", scope: !0, file: !1, line: 353, type: !565, isLocal: true, isDefinition: true, variable: [23 x %struct.anon.1]* @compression_methods)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 2944, align: 64, elements: !570)
!566 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 350, size: 128, align: 64, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !566, file: !1, line: 351, baseType: !23, size: 32, align: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !566, file: !1, line: 352, baseType: !80, size: 64, align: 64, offset: 64)
!570 = !{!571}
!571 = !DISubrange(count: 23)
!572 = !DIGlobalVariable(name: "rb_ops", scope: !0, file: !1, line: 2532, type: !351, isLocal: true, isDefinition: true, variable: %struct.archive_rb_tree_ops* @rb_ops)
!573 = !DIGlobalVariable(name: "rb_rsrc_ops", scope: !0, file: !1, line: 2553, type: !351, isLocal: true, isDefinition: true, variable: %struct.archive_rb_tree_ops* @rb_rsrc_ops)
!574 = !{i32 2, !"Dwarf Version", i32 4}
!575 = !{i32 2, !"Debug Info Version", i32 3}
!576 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!577 = !DILocalVariable(name: "a", arg: 1, scope: !474, file: !1, line: 2063, type: !24)
!578 = !DIExpression()
!579 = !DILocation(line: 2063, column: 49, scope: !474)
!580 = !DILocalVariable(name: "r", scope: !474, file: !1, line: 2065, type: !23)
!581 = !DILocation(line: 2065, column: 6, scope: !474)
!582 = !DILocation(line: 2066, column: 49, scope: !474)
!583 = !DILocation(line: 2066, column: 6, scope: !474)
!584 = !DILocation(line: 2066, column: 4, scope: !474)
!585 = !DILocation(line: 2067, column: 6, scope: !586)
!586 = distinct !DILexicalBlock(scope: !474, file: !1, line: 2067, column: 6)
!587 = !DILocation(line: 2067, column: 8, scope: !586)
!588 = !DILocation(line: 2067, column: 6, scope: !474)
!589 = !DILocation(line: 2068, column: 10, scope: !586)
!590 = !DILocation(line: 2068, column: 3, scope: !586)
!591 = !DILocation(line: 2069, column: 51, scope: !474)
!592 = !DILocation(line: 2069, column: 10, scope: !474)
!593 = !DILocation(line: 2069, column: 2, scope: !474)
!594 = !DILocation(line: 2070, column: 1, scope: !474)
!595 = !DILocalVariable(name: "_a", arg: 1, scope: !475, file: !1, line: 2310, type: !24)
!596 = !DILocation(line: 2310, column: 60, scope: !475)
!597 = !DILocalVariable(name: "a", scope: !475, file: !1, line: 2312, type: !4)
!598 = !DILocation(line: 2312, column: 23, scope: !475)
!599 = !DILocation(line: 2312, column: 50, scope: !475)
!600 = !DILocation(line: 2312, column: 27, scope: !475)
!601 = !DILocalVariable(name: "zip", scope: !475, file: !1, line: 2313, type: !292)
!602 = !DILocation(line: 2313, column: 14, scope: !475)
!603 = !DILocalVariable(name: "r", scope: !475, file: !1, line: 2314, type: !23)
!604 = !DILocation(line: 2314, column: 6, scope: !475)
!605 = !DILocation(line: 2316, column: 2, scope: !475)
!606 = !DILocalVariable(name: "magic_test", scope: !607, file: !1, line: 2316, type: !23)
!607 = distinct !DILexicalBlock(scope: !475, file: !1, line: 2316, column: 2)
!608 = !DILocation(line: 2316, column: 2, scope: !607)
!609 = !DILocation(line: 2316, column: 2, scope: !610)
!610 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 1)
!611 = !DILocation(line: 2316, column: 2, scope: !612)
!612 = !DILexicalBlockFile(scope: !613, file: !1, discriminator: 2)
!613 = distinct !DILexicalBlock(scope: !607, file: !1, line: 2316, column: 2)
!614 = !DILocation(line: 2316, column: 2, scope: !615)
!615 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 3)
!616 = !DILocation(line: 2319, column: 22, scope: !475)
!617 = !DILocation(line: 2319, column: 8, scope: !475)
!618 = !DILocation(line: 2319, column: 6, scope: !475)
!619 = !DILocation(line: 2320, column: 6, scope: !620)
!620 = distinct !DILexicalBlock(scope: !475, file: !1, line: 2320, column: 6)
!621 = !DILocation(line: 2320, column: 10, scope: !620)
!622 = !DILocation(line: 2320, column: 6, scope: !475)
!623 = !DILocation(line: 2321, column: 22, scope: !624)
!624 = distinct !DILexicalBlock(scope: !620, file: !1, line: 2320, column: 19)
!625 = !DILocation(line: 2321, column: 25, scope: !624)
!626 = !DILocation(line: 2321, column: 3, scope: !624)
!627 = !DILocation(line: 2323, column: 3, scope: !624)
!628 = !DILocation(line: 2327, column: 2, scope: !475)
!629 = !DILocation(line: 2327, column: 7, scope: !475)
!630 = !DILocation(line: 2327, column: 30, scope: !475)
!631 = !DILocation(line: 2333, column: 2, scope: !475)
!632 = !DILocation(line: 2333, column: 7, scope: !475)
!633 = !DILocation(line: 2333, column: 29, scope: !475)
!634 = !DILocation(line: 2334, column: 2, scope: !475)
!635 = !DILocation(line: 2334, column: 7, scope: !475)
!636 = !DILocation(line: 2334, column: 17, scope: !475)
!637 = !DILocation(line: 2336, column: 37, scope: !475)
!638 = !DILocation(line: 2337, column: 6, scope: !475)
!639 = !DILocation(line: 2336, column: 6, scope: !475)
!640 = !DILocation(line: 2336, column: 4, scope: !475)
!641 = !DILocation(line: 2349, column: 6, scope: !642)
!642 = distinct !DILexicalBlock(scope: !475, file: !1, line: 2349, column: 6)
!643 = !DILocation(line: 2349, column: 8, scope: !642)
!644 = !DILocation(line: 2349, column: 6, scope: !475)
!645 = !DILocation(line: 2350, column: 8, scope: !642)
!646 = !DILocation(line: 2350, column: 3, scope: !642)
!647 = !DILocation(line: 2351, column: 2, scope: !475)
!648 = !DILocation(line: 2352, column: 1, scope: !475)
!649 = !DILocalVariable(name: "_a", arg: 1, scope: !476, file: !1, line: 3068, type: !24)
!650 = !DILocation(line: 3068, column: 58, scope: !476)
!651 = !DILocalVariable(name: "a", scope: !476, file: !1, line: 3070, type: !4)
!652 = !DILocation(line: 3070, column: 23, scope: !476)
!653 = !DILocation(line: 3070, column: 50, scope: !476)
!654 = !DILocation(line: 3070, column: 27, scope: !476)
!655 = !DILocalVariable(name: "zip", scope: !476, file: !1, line: 3071, type: !292)
!656 = !DILocation(line: 3071, column: 14, scope: !476)
!657 = !DILocalVariable(name: "r", scope: !476, file: !1, line: 3072, type: !23)
!658 = !DILocation(line: 3072, column: 6, scope: !476)
!659 = !DILocation(line: 3074, column: 2, scope: !476)
!660 = !DILocalVariable(name: "magic_test", scope: !661, file: !1, line: 3074, type: !23)
!661 = distinct !DILexicalBlock(scope: !476, file: !1, line: 3074, column: 2)
!662 = !DILocation(line: 3074, column: 2, scope: !661)
!663 = !DILocation(line: 3074, column: 2, scope: !664)
!664 = !DILexicalBlockFile(scope: !661, file: !1, discriminator: 1)
!665 = !DILocation(line: 3074, column: 2, scope: !666)
!666 = !DILexicalBlockFile(scope: !667, file: !1, discriminator: 2)
!667 = distinct !DILexicalBlock(scope: !661, file: !1, line: 3074, column: 2)
!668 = !DILocation(line: 3074, column: 2, scope: !669)
!669 = !DILexicalBlockFile(scope: !661, file: !1, discriminator: 3)
!670 = !DILocation(line: 3077, column: 22, scope: !476)
!671 = !DILocation(line: 3077, column: 8, scope: !476)
!672 = !DILocation(line: 3077, column: 6, scope: !476)
!673 = !DILocation(line: 3078, column: 6, scope: !674)
!674 = distinct !DILexicalBlock(scope: !476, file: !1, line: 3078, column: 6)
!675 = !DILocation(line: 3078, column: 10, scope: !674)
!676 = !DILocation(line: 3078, column: 6, scope: !476)
!677 = !DILocation(line: 3079, column: 22, scope: !678)
!678 = distinct !DILexicalBlock(scope: !674, file: !1, line: 3078, column: 19)
!679 = !DILocation(line: 3079, column: 25, scope: !678)
!680 = !DILocation(line: 3079, column: 3, scope: !678)
!681 = !DILocation(line: 3081, column: 3, scope: !678)
!682 = !DILocation(line: 3093, column: 2, scope: !476)
!683 = !DILocation(line: 3093, column: 7, scope: !476)
!684 = !DILocation(line: 3093, column: 29, scope: !476)
!685 = !DILocation(line: 3094, column: 2, scope: !476)
!686 = !DILocation(line: 3094, column: 7, scope: !476)
!687 = !DILocation(line: 3094, column: 17, scope: !476)
!688 = !DILocation(line: 3096, column: 37, scope: !476)
!689 = !DILocation(line: 3097, column: 6, scope: !476)
!690 = !DILocation(line: 3096, column: 6, scope: !476)
!691 = !DILocation(line: 3096, column: 4, scope: !476)
!692 = !DILocation(line: 3109, column: 6, scope: !693)
!693 = distinct !DILexicalBlock(scope: !476, file: !1, line: 3109, column: 6)
!694 = !DILocation(line: 3109, column: 8, scope: !693)
!695 = !DILocation(line: 3109, column: 6, scope: !476)
!696 = !DILocation(line: 3110, column: 8, scope: !693)
!697 = !DILocation(line: 3110, column: 3, scope: !693)
!698 = !DILocation(line: 3111, column: 2, scope: !476)
!699 = !DILocation(line: 3112, column: 1, scope: !476)
!700 = !DILocalVariable(name: "crc", arg: 1, scope: !477, file: !1, line: 335, type: !47)
!701 = !DILocation(line: 335, column: 26, scope: !477)
!702 = !DILocalVariable(name: "buff", arg: 2, scope: !477, file: !1, line: 335, type: !43)
!703 = !DILocation(line: 335, column: 43, scope: !477)
!704 = !DILocalVariable(name: "len", arg: 3, scope: !477, file: !1, line: 335, type: !45)
!705 = !DILocation(line: 335, column: 56, scope: !477)
!706 = !DILocation(line: 337, column: 15, scope: !477)
!707 = !DILocation(line: 337, column: 20, scope: !477)
!708 = !DILocation(line: 337, column: 40, scope: !477)
!709 = !DILocation(line: 337, column: 26, scope: !477)
!710 = !DILocation(line: 337, column: 9, scope: !477)
!711 = !DILocation(line: 337, column: 2, scope: !477)
!712 = !DILocalVariable(name: "a", arg: 1, scope: !478, file: !1, line: 2088, type: !4)
!713 = !DILocation(line: 2088, column: 61, scope: !478)
!714 = !DILocalVariable(name: "best_bid", arg: 2, scope: !478, file: !1, line: 2088, type: !23)
!715 = !DILocation(line: 2088, column: 68, scope: !478)
!716 = !DILocalVariable(name: "p", scope: !478, file: !1, line: 2090, type: !80)
!717 = !DILocation(line: 2090, column: 14, scope: !478)
!718 = !DILocation(line: 2092, column: 8, scope: !478)
!719 = !DILocation(line: 2094, column: 32, scope: !720)
!720 = distinct !DILexicalBlock(scope: !478, file: !1, line: 2094, column: 6)
!721 = !DILocation(line: 2094, column: 11, scope: !720)
!722 = !DILocation(line: 2094, column: 9, scope: !720)
!723 = !DILocation(line: 2094, column: 45, scope: !720)
!724 = !DILocation(line: 2094, column: 6, scope: !478)
!725 = !DILocation(line: 2095, column: 3, scope: !720)
!726 = !DILocation(line: 2105, column: 6, scope: !727)
!727 = distinct !DILexicalBlock(scope: !478, file: !1, line: 2105, column: 6)
!728 = !DILocation(line: 2105, column: 11, scope: !727)
!729 = !DILocation(line: 2105, column: 18, scope: !727)
!730 = !DILocation(line: 2105, column: 21, scope: !731)
!731 = !DILexicalBlockFile(scope: !727, file: !1, discriminator: 1)
!732 = !DILocation(line: 2105, column: 26, scope: !731)
!733 = !DILocation(line: 2105, column: 6, scope: !731)
!734 = !DILocation(line: 2106, column: 8, scope: !735)
!735 = distinct !DILexicalBlock(scope: !736, file: !1, line: 2106, column: 7)
!736 = distinct !DILexicalBlock(scope: !727, file: !1, line: 2105, column: 34)
!737 = !DILocation(line: 2106, column: 13, scope: !735)
!738 = !DILocation(line: 2106, column: 23, scope: !735)
!739 = !DILocation(line: 2106, column: 26, scope: !740)
!740 = !DILexicalBlockFile(scope: !735, file: !1, discriminator: 1)
!741 = !DILocation(line: 2106, column: 31, scope: !740)
!742 = !DILocation(line: 2107, column: 7, scope: !735)
!743 = !DILocation(line: 2107, column: 11, scope: !740)
!744 = !DILocation(line: 2107, column: 16, scope: !740)
!745 = !DILocation(line: 2107, column: 26, scope: !740)
!746 = !DILocation(line: 2107, column: 29, scope: !747)
!747 = !DILexicalBlockFile(scope: !735, file: !1, discriminator: 2)
!748 = !DILocation(line: 2107, column: 34, scope: !747)
!749 = !DILocation(line: 2108, column: 7, scope: !735)
!750 = !DILocation(line: 2108, column: 11, scope: !740)
!751 = !DILocation(line: 2108, column: 16, scope: !740)
!752 = !DILocation(line: 2108, column: 26, scope: !740)
!753 = !DILocation(line: 2108, column: 29, scope: !747)
!754 = !DILocation(line: 2108, column: 34, scope: !747)
!755 = !DILocation(line: 2109, column: 7, scope: !735)
!756 = !DILocation(line: 2109, column: 11, scope: !740)
!757 = !DILocation(line: 2109, column: 16, scope: !740)
!758 = !DILocation(line: 2109, column: 26, scope: !740)
!759 = !DILocation(line: 2109, column: 29, scope: !747)
!760 = !DILocation(line: 2109, column: 34, scope: !747)
!761 = !DILocation(line: 2110, column: 7, scope: !735)
!762 = !DILocation(line: 2110, column: 11, scope: !740)
!763 = !DILocation(line: 2110, column: 16, scope: !740)
!764 = !DILocation(line: 2110, column: 26, scope: !740)
!765 = !DILocation(line: 2110, column: 29, scope: !747)
!766 = !DILocation(line: 2110, column: 34, scope: !747)
!767 = !DILocation(line: 2111, column: 7, scope: !735)
!768 = !DILocation(line: 2111, column: 11, scope: !740)
!769 = !DILocation(line: 2111, column: 16, scope: !740)
!770 = !DILocation(line: 2111, column: 23, scope: !740)
!771 = !DILocation(line: 2111, column: 26, scope: !747)
!772 = !DILocation(line: 2111, column: 31, scope: !747)
!773 = !DILocation(line: 2106, column: 7, scope: !774)
!774 = !DILexicalBlockFile(scope: !736, file: !1, discriminator: 2)
!775 = !DILocation(line: 2112, column: 4, scope: !735)
!776 = !DILocation(line: 2113, column: 2, scope: !736)
!777 = !DILocation(line: 2120, column: 2, scope: !478)
!778 = !DILocation(line: 2121, column: 1, scope: !478)
!779 = !DILocalVariable(name: "a", arg: 1, scope: !479, file: !1, line: 2014, type: !4)
!780 = !DILocation(line: 2014, column: 54, scope: !479)
!781 = !DILocalVariable(name: "key", arg: 2, scope: !479, file: !1, line: 2015, type: !80)
!782 = !DILocation(line: 2015, column: 17, scope: !479)
!783 = !DILocalVariable(name: "val", arg: 3, scope: !479, file: !1, line: 2015, type: !80)
!784 = !DILocation(line: 2015, column: 34, scope: !479)
!785 = !DILocalVariable(name: "zip", scope: !479, file: !1, line: 2017, type: !292)
!786 = !DILocation(line: 2017, column: 14, scope: !479)
!787 = !DILocalVariable(name: "ret", scope: !479, file: !1, line: 2018, type: !23)
!788 = !DILocation(line: 2018, column: 6, scope: !479)
!789 = !DILocation(line: 2020, column: 23, scope: !479)
!790 = !DILocation(line: 2020, column: 26, scope: !479)
!791 = !DILocation(line: 2020, column: 34, scope: !479)
!792 = !DILocation(line: 2020, column: 8, scope: !479)
!793 = !DILocation(line: 2020, column: 6, scope: !479)
!794 = !DILocation(line: 2021, column: 13, scope: !795)
!795 = distinct !DILexicalBlock(scope: !479, file: !1, line: 2021, column: 6)
!796 = !DILocation(line: 2021, column: 6, scope: !795)
!797 = !DILocation(line: 2021, column: 32, scope: !795)
!798 = !DILocation(line: 2021, column: 6, scope: !479)
!799 = !DILocation(line: 2023, column: 35, scope: !800)
!800 = distinct !DILexicalBlock(scope: !795, file: !1, line: 2021, column: 38)
!801 = !DILocation(line: 2023, column: 39, scope: !800)
!802 = !DILocation(line: 2023, column: 34, scope: !800)
!803 = !DILocation(line: 2023, column: 3, scope: !800)
!804 = !DILocation(line: 2023, column: 8, scope: !800)
!805 = !DILocation(line: 2023, column: 32, scope: !800)
!806 = !DILocation(line: 2024, column: 3, scope: !800)
!807 = !DILocation(line: 2025, column: 20, scope: !808)
!808 = distinct !DILexicalBlock(scope: !795, file: !1, line: 2025, column: 13)
!809 = !DILocation(line: 2025, column: 13, scope: !808)
!810 = !DILocation(line: 2025, column: 40, scope: !808)
!811 = !DILocation(line: 2025, column: 13, scope: !795)
!812 = !DILocation(line: 2026, column: 7, scope: !813)
!813 = distinct !DILexicalBlock(scope: !814, file: !1, line: 2026, column: 7)
!814 = distinct !DILexicalBlock(scope: !808, file: !1, line: 2025, column: 46)
!815 = !DILocation(line: 2026, column: 11, scope: !813)
!816 = !DILocation(line: 2026, column: 19, scope: !813)
!817 = !DILocation(line: 2026, column: 22, scope: !818)
!818 = !DILexicalBlockFile(scope: !813, file: !1, discriminator: 1)
!819 = !DILocation(line: 2026, column: 29, scope: !818)
!820 = !DILocation(line: 2026, column: 7, scope: !818)
!821 = !DILocation(line: 2027, column: 23, scope: !813)
!822 = !DILocation(line: 2027, column: 26, scope: !813)
!823 = !DILocation(line: 2027, column: 4, scope: !813)
!824 = !DILocation(line: 2032, column: 9, scope: !825)
!825 = distinct !DILexicalBlock(scope: !813, file: !1, line: 2030, column: 8)
!826 = !DILocation(line: 2032, column: 12, scope: !825)
!827 = !DILocation(line: 2032, column: 21, scope: !825)
!828 = !DILocation(line: 2031, column: 17, scope: !825)
!829 = !DILocation(line: 2031, column: 4, scope: !825)
!830 = !DILocation(line: 2031, column: 9, scope: !825)
!831 = !DILocation(line: 2031, column: 15, scope: !825)
!832 = !DILocation(line: 2033, column: 8, scope: !833)
!833 = distinct !DILexicalBlock(scope: !825, file: !1, line: 2033, column: 8)
!834 = !DILocation(line: 2033, column: 13, scope: !833)
!835 = !DILocation(line: 2033, column: 19, scope: !833)
!836 = !DILocation(line: 2033, column: 8, scope: !825)
!837 = !DILocation(line: 2034, column: 16, scope: !838)
!838 = distinct !DILexicalBlock(scope: !839, file: !1, line: 2034, column: 9)
!839 = distinct !DILexicalBlock(scope: !833, file: !1, line: 2033, column: 28)
!840 = !DILocation(line: 2034, column: 9, scope: !838)
!841 = !DILocation(line: 2034, column: 30, scope: !838)
!842 = !DILocation(line: 2034, column: 9, scope: !839)
!843 = !DILocation(line: 2035, column: 24, scope: !838)
!844 = !DILocation(line: 2035, column: 29, scope: !838)
!845 = !DILocation(line: 2035, column: 6, scope: !838)
!846 = !DILocation(line: 2035, column: 11, scope: !838)
!847 = !DILocation(line: 2035, column: 22, scope: !838)
!848 = !DILocation(line: 2036, column: 9, scope: !839)
!849 = !DILocation(line: 2037, column: 4, scope: !839)
!850 = !DILocation(line: 2038, column: 9, scope: !833)
!851 = !DILocation(line: 2040, column: 11, scope: !814)
!852 = !DILocation(line: 2040, column: 3, scope: !814)
!853 = !DILocation(line: 2041, column: 20, scope: !854)
!854 = distinct !DILexicalBlock(scope: !808, file: !1, line: 2041, column: 13)
!855 = !DILocation(line: 2041, column: 13, scope: !854)
!856 = !DILocation(line: 2041, column: 40, scope: !854)
!857 = !DILocation(line: 2041, column: 13, scope: !808)
!858 = !DILocation(line: 2043, column: 7, scope: !859)
!859 = distinct !DILexicalBlock(scope: !860, file: !1, line: 2043, column: 7)
!860 = distinct !DILexicalBlock(scope: !854, file: !1, line: 2041, column: 46)
!861 = !DILocation(line: 2043, column: 11, scope: !859)
!862 = !DILocation(line: 2043, column: 19, scope: !859)
!863 = !DILocation(line: 2043, column: 22, scope: !864)
!864 = !DILexicalBlockFile(scope: !859, file: !1, discriminator: 1)
!865 = !DILocation(line: 2043, column: 29, scope: !864)
!866 = !DILocation(line: 2043, column: 7, scope: !864)
!867 = !DILocation(line: 2044, column: 4, scope: !868)
!868 = distinct !DILexicalBlock(scope: !859, file: !1, line: 2043, column: 35)
!869 = !DILocation(line: 2044, column: 9, scope: !868)
!870 = !DILocation(line: 2044, column: 19, scope: !868)
!871 = !DILocation(line: 2045, column: 4, scope: !868)
!872 = !DILocation(line: 2045, column: 9, scope: !868)
!873 = !DILocation(line: 2045, column: 22, scope: !868)
!874 = !DILocation(line: 2046, column: 3, scope: !868)
!875 = !DILocation(line: 2047, column: 4, scope: !876)
!876 = distinct !DILexicalBlock(scope: !859, file: !1, line: 2046, column: 10)
!877 = !DILocation(line: 2047, column: 9, scope: !876)
!878 = !DILocation(line: 2047, column: 19, scope: !876)
!879 = !DILocation(line: 2048, column: 4, scope: !876)
!880 = !DILocation(line: 2048, column: 9, scope: !876)
!881 = !DILocation(line: 2048, column: 22, scope: !876)
!882 = !DILocation(line: 2050, column: 3, scope: !860)
!883 = !DILocation(line: 2051, column: 20, scope: !884)
!884 = distinct !DILexicalBlock(scope: !854, file: !1, line: 2051, column: 13)
!885 = !DILocation(line: 2051, column: 13, scope: !884)
!886 = !DILocation(line: 2051, column: 36, scope: !884)
!887 = !DILocation(line: 2051, column: 13, scope: !854)
!888 = !DILocation(line: 2052, column: 34, scope: !889)
!889 = distinct !DILexicalBlock(scope: !884, file: !1, line: 2051, column: 42)
!890 = !DILocation(line: 2052, column: 38, scope: !889)
!891 = !DILocation(line: 2052, column: 46, scope: !889)
!892 = !DILocation(line: 2052, column: 49, scope: !893)
!893 = !DILexicalBlockFile(scope: !889, file: !1, discriminator: 1)
!894 = !DILocation(line: 2052, column: 56, scope: !893)
!895 = !DILocation(line: 2052, column: 46, scope: !896)
!896 = !DILexicalBlockFile(scope: !889, file: !1, discriminator: 2)
!897 = !DILocation(line: 2052, column: 3, scope: !896)
!898 = !DILocation(line: 2052, column: 8, scope: !896)
!899 = !DILocation(line: 2052, column: 31, scope: !896)
!900 = !DILocation(line: 2053, column: 3, scope: !889)
!901 = !DILocation(line: 2059, column: 2, scope: !479)
!902 = !DILocation(line: 2060, column: 1, scope: !479)
!903 = !DILocalVariable(name: "a", arg: 1, scope: !481, file: !1, line: 2124, type: !4)
!904 = !DILocation(line: 2124, column: 69, scope: !481)
!905 = !DILocalVariable(name: "entry", arg: 2, scope: !481, file: !1, line: 2125, type: !30)
!906 = !DILocation(line: 2125, column: 27, scope: !481)
!907 = !DILocalVariable(name: "zip", scope: !481, file: !1, line: 2127, type: !292)
!908 = !DILocation(line: 2127, column: 14, scope: !481)
!909 = !DILocation(line: 2129, column: 2, scope: !481)
!910 = !DILocation(line: 2129, column: 5, scope: !481)
!911 = !DILocation(line: 2129, column: 13, scope: !481)
!912 = !DILocation(line: 2129, column: 28, scope: !481)
!913 = !DILocation(line: 2130, column: 6, scope: !914)
!914 = distinct !DILexicalBlock(scope: !481, file: !1, line: 2130, column: 6)
!915 = !DILocation(line: 2130, column: 9, scope: !914)
!916 = !DILocation(line: 2130, column: 17, scope: !914)
!917 = !DILocation(line: 2130, column: 37, scope: !914)
!918 = !DILocation(line: 2130, column: 6, scope: !481)
!919 = !DILocation(line: 2131, column: 3, scope: !914)
!920 = !DILocation(line: 2131, column: 6, scope: !914)
!921 = !DILocation(line: 2131, column: 14, scope: !914)
!922 = !DILocation(line: 2131, column: 34, scope: !914)
!923 = !DILocation(line: 2133, column: 23, scope: !481)
!924 = !DILocation(line: 2133, column: 26, scope: !481)
!925 = !DILocation(line: 2133, column: 34, scope: !481)
!926 = !DILocation(line: 2133, column: 8, scope: !481)
!927 = !DILocation(line: 2133, column: 6, scope: !481)
!928 = !DILocation(line: 2142, column: 6, scope: !929)
!929 = distinct !DILexicalBlock(scope: !481, file: !1, line: 2142, column: 6)
!930 = !DILocation(line: 2142, column: 11, scope: !929)
!931 = !DILocation(line: 2142, column: 33, scope: !929)
!932 = !DILocation(line: 2142, column: 6, scope: !481)
!933 = !DILocation(line: 2144, column: 3, scope: !929)
!934 = !DILocation(line: 2144, column: 8, scope: !929)
!935 = !DILocation(line: 2144, column: 30, scope: !929)
!936 = !DILocation(line: 2147, column: 6, scope: !937)
!937 = distinct !DILexicalBlock(scope: !481, file: !1, line: 2147, column: 6)
!938 = !DILocation(line: 2147, column: 11, scope: !937)
!939 = !DILocation(line: 2147, column: 23, scope: !937)
!940 = !DILocation(line: 2147, column: 6, scope: !481)
!941 = !DILocation(line: 2148, column: 22, scope: !942)
!942 = distinct !DILexicalBlock(scope: !937, file: !1, line: 2147, column: 32)
!943 = !DILocation(line: 2148, column: 3, scope: !942)
!944 = !DILocation(line: 2148, column: 8, scope: !942)
!945 = !DILocation(line: 2148, column: 20, scope: !942)
!946 = !DILocation(line: 2149, column: 7, scope: !947)
!947 = distinct !DILexicalBlock(scope: !942, file: !1, line: 2149, column: 7)
!948 = !DILocation(line: 2149, column: 12, scope: !947)
!949 = !DILocation(line: 2149, column: 24, scope: !947)
!950 = !DILocation(line: 2149, column: 7, scope: !942)
!951 = !DILocation(line: 2150, column: 23, scope: !952)
!952 = distinct !DILexicalBlock(scope: !947, file: !1, line: 2149, column: 33)
!953 = !DILocation(line: 2150, column: 26, scope: !952)
!954 = !DILocation(line: 2150, column: 4, scope: !952)
!955 = !DILocation(line: 2152, column: 4, scope: !952)
!956 = !DILocation(line: 2154, column: 2, scope: !942)
!957 = !DILocation(line: 2155, column: 15, scope: !481)
!958 = !DILocation(line: 2155, column: 20, scope: !481)
!959 = !DILocation(line: 2155, column: 2, scope: !481)
!960 = !DILocation(line: 2155, column: 7, scope: !481)
!961 = !DILocation(line: 2155, column: 13, scope: !481)
!962 = !DILocation(line: 2156, column: 9, scope: !481)
!963 = !DILocation(line: 2156, column: 14, scope: !481)
!964 = !DILocation(line: 2156, column: 2, scope: !481)
!965 = !DILocation(line: 2158, column: 6, scope: !966)
!966 = distinct !DILexicalBlock(scope: !481, file: !1, line: 2158, column: 6)
!967 = !DILocation(line: 2158, column: 11, scope: !966)
!968 = !DILocation(line: 2158, column: 6, scope: !481)
!969 = !DILocation(line: 2159, column: 3, scope: !966)
!970 = !DILocation(line: 2160, column: 6, scope: !971)
!971 = distinct !DILexicalBlock(scope: !481, file: !1, line: 2160, column: 6)
!972 = !DILocation(line: 2160, column: 11, scope: !971)
!973 = !DILocation(line: 2160, column: 6, scope: !481)
!974 = !DILocation(line: 2161, column: 3, scope: !971)
!975 = !DILocation(line: 2162, column: 38, scope: !481)
!976 = !DILocation(line: 2162, column: 43, scope: !481)
!977 = !DILocation(line: 2162, column: 54, scope: !481)
!978 = !DILocation(line: 2162, column: 20, scope: !481)
!979 = !DILocation(line: 2162, column: 25, scope: !481)
!980 = !DILocation(line: 2162, column: 36, scope: !481)
!981 = !DILocation(line: 2162, column: 2, scope: !481)
!982 = !DILocation(line: 2162, column: 7, scope: !481)
!983 = !DILocation(line: 2162, column: 18, scope: !481)
!984 = !DILocation(line: 2163, column: 34, scope: !481)
!985 = !DILocation(line: 2163, column: 2, scope: !481)
!986 = !DILocation(line: 2166, column: 25, scope: !481)
!987 = !DILocation(line: 2166, column: 28, scope: !481)
!988 = !DILocation(line: 2166, column: 33, scope: !481)
!989 = !DILocation(line: 2166, column: 2, scope: !481)
!990 = !DILocation(line: 2167, column: 2, scope: !481)
!991 = !DILocation(line: 2167, column: 7, scope: !481)
!992 = !DILocation(line: 2167, column: 18, scope: !481)
!993 = !DILocation(line: 2168, column: 2, scope: !481)
!994 = !DILocalVariable(name: "skipped", scope: !995, file: !1, line: 2169, type: !52)
!995 = distinct !DILexicalBlock(scope: !996, file: !1, line: 2168, column: 11)
!996 = distinct !DILexicalBlock(scope: !997, file: !1, line: 2168, column: 2)
!997 = distinct !DILexicalBlock(scope: !481, file: !1, line: 2168, column: 2)
!998 = !DILocation(line: 2169, column: 11, scope: !995)
!999 = !DILocalVariable(name: "p", scope: !995, file: !1, line: 2170, type: !80)
!1000 = !DILocation(line: 2170, column: 15, scope: !995)
!1001 = !DILocalVariable(name: "end", scope: !995, file: !1, line: 2170, type: !80)
!1002 = !DILocation(line: 2170, column: 19, scope: !995)
!1003 = !DILocalVariable(name: "bytes", scope: !995, file: !1, line: 2171, type: !38)
!1004 = !DILocation(line: 2171, column: 11, scope: !995)
!1005 = !DILocation(line: 2173, column: 28, scope: !995)
!1006 = !DILocation(line: 2173, column: 7, scope: !995)
!1007 = !DILocation(line: 2173, column: 5, scope: !995)
!1008 = !DILocation(line: 2174, column: 7, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !995, file: !1, line: 2174, column: 7)
!1010 = !DILocation(line: 2174, column: 9, scope: !1009)
!1011 = !DILocation(line: 2174, column: 7, scope: !995)
!1012 = !DILocation(line: 2175, column: 4, scope: !1009)
!1013 = !DILocation(line: 2176, column: 9, scope: !995)
!1014 = !DILocation(line: 2176, column: 13, scope: !995)
!1015 = !DILocation(line: 2176, column: 11, scope: !995)
!1016 = !DILocation(line: 2176, column: 7, scope: !995)
!1017 = !DILocation(line: 2178, column: 3, scope: !995)
!1018 = !DILocation(line: 2178, column: 10, scope: !1019)
!1019 = !DILexicalBlockFile(scope: !995, file: !1, discriminator: 1)
!1020 = !DILocation(line: 2178, column: 12, scope: !1019)
!1021 = !DILocation(line: 2178, column: 19, scope: !1019)
!1022 = !DILocation(line: 2178, column: 16, scope: !1019)
!1023 = !DILocation(line: 2178, column: 3, scope: !1019)
!1024 = !DILocation(line: 2179, column: 8, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1026, file: !1, line: 2179, column: 8)
!1026 = distinct !DILexicalBlock(scope: !995, file: !1, line: 2178, column: 24)
!1027 = !DILocation(line: 2179, column: 13, scope: !1025)
!1028 = !DILocation(line: 2179, column: 20, scope: !1025)
!1029 = !DILocation(line: 2179, column: 23, scope: !1030)
!1030 = !DILexicalBlockFile(scope: !1025, file: !1, discriminator: 1)
!1031 = !DILocation(line: 2179, column: 28, scope: !1030)
!1032 = !DILocation(line: 2179, column: 8, scope: !1030)
!1033 = !DILocation(line: 2180, column: 9, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1035, file: !1, line: 2180, column: 9)
!1035 = distinct !DILexicalBlock(scope: !1025, file: !1, line: 2179, column: 36)
!1036 = !DILocation(line: 2180, column: 14, scope: !1034)
!1037 = !DILocation(line: 2180, column: 24, scope: !1034)
!1038 = !DILocation(line: 2180, column: 27, scope: !1039)
!1039 = !DILexicalBlockFile(scope: !1034, file: !1, discriminator: 1)
!1040 = !DILocation(line: 2180, column: 32, scope: !1039)
!1041 = !DILocation(line: 2180, column: 9, scope: !1039)
!1042 = !DILocation(line: 2182, column: 29, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !1034, file: !1, line: 2180, column: 43)
!1044 = !DILocation(line: 2182, column: 32, scope: !1043)
!1045 = !DILocation(line: 2182, column: 6, scope: !1043)
!1046 = !DILocation(line: 2183, column: 40, scope: !1043)
!1047 = !DILocation(line: 2184, column: 10, scope: !1043)
!1048 = !DILocation(line: 2184, column: 17, scope: !1043)
!1049 = !DILocation(line: 2183, column: 13, scope: !1043)
!1050 = !DILocation(line: 2183, column: 6, scope: !1043)
!1051 = !DILocation(line: 2200, column: 35, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1035, file: !1, line: 2200, column: 35)
!1053 = !DILocation(line: 2200, column: 40, scope: !1052)
!1054 = !DILocation(line: 2200, column: 50, scope: !1052)
!1055 = !DILocation(line: 2200, column: 53, scope: !1056)
!1056 = !DILexicalBlockFile(scope: !1052, file: !1, discriminator: 1)
!1057 = !DILocation(line: 2200, column: 58, scope: !1056)
!1058 = !DILocation(line: 2200, column: 35, scope: !1056)
!1059 = !DILocation(line: 2201, column: 39, scope: !1060)
!1060 = distinct !DILexicalBlock(scope: !1052, file: !1, line: 2200, column: 69)
!1061 = !DILocation(line: 2206, column: 36, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1035, file: !1, line: 2206, column: 35)
!1063 = !DILocation(line: 2206, column: 41, scope: !1062)
!1064 = !DILocation(line: 2206, column: 51, scope: !1062)
!1065 = !DILocation(line: 2206, column: 54, scope: !1066)
!1066 = !DILexicalBlockFile(scope: !1062, file: !1, discriminator: 1)
!1067 = !DILocation(line: 2206, column: 59, scope: !1066)
!1068 = !DILocation(line: 2207, column: 35, scope: !1062)
!1069 = !DILocation(line: 2207, column: 39, scope: !1066)
!1070 = !DILocation(line: 2207, column: 44, scope: !1066)
!1071 = !DILocation(line: 2207, column: 54, scope: !1066)
!1072 = !DILocation(line: 2207, column: 57, scope: !1073)
!1073 = !DILexicalBlockFile(scope: !1062, file: !1, discriminator: 2)
!1074 = !DILocation(line: 2207, column: 62, scope: !1073)
!1075 = !DILocation(line: 2206, column: 35, scope: !1076)
!1076 = !DILexicalBlockFile(scope: !1035, file: !1, discriminator: 2)
!1077 = !DILocation(line: 2208, column: 39, scope: !1062)
!1078 = !DILocation(line: 2209, column: 4, scope: !1035)
!1079 = !DILocation(line: 2210, column: 4, scope: !1026)
!1080 = !DILocation(line: 2211, column: 4, scope: !1026)
!1081 = !DILocation(line: 2178, column: 3, scope: !1082)
!1082 = !DILexicalBlockFile(scope: !995, file: !1, discriminator: 2)
!1083 = !DILocation(line: 2213, column: 26, scope: !995)
!1084 = !DILocation(line: 2213, column: 29, scope: !995)
!1085 = !DILocation(line: 2213, column: 3, scope: !995)
!1086 = !DILocation(line: 2168, column: 2, scope: !1087)
!1087 = !DILexicalBlockFile(scope: !996, file: !1, discriminator: 1)
!1088 = !DILocation(line: 2215, column: 1, scope: !481)
!1089 = !DILocalVariable(name: "a", arg: 1, scope: !505, file: !1, line: 1863, type: !4)
!1090 = !DILocation(line: 1863, column: 56, scope: !505)
!1091 = !DILocalVariable(name: "buff", arg: 2, scope: !505, file: !1, line: 1864, type: !64)
!1092 = !DILocation(line: 1864, column: 18, scope: !505)
!1093 = !DILocalVariable(name: "size", arg: 3, scope: !505, file: !1, line: 1864, type: !65)
!1094 = !DILocation(line: 1864, column: 32, scope: !505)
!1095 = !DILocalVariable(name: "offset", arg: 4, scope: !505, file: !1, line: 1864, type: !66)
!1096 = !DILocation(line: 1864, column: 47, scope: !505)
!1097 = !DILocalVariable(name: "r", scope: !505, file: !1, line: 1866, type: !23)
!1098 = !DILocation(line: 1866, column: 6, scope: !505)
!1099 = !DILocalVariable(name: "zip", scope: !505, file: !1, line: 1867, type: !292)
!1100 = !DILocation(line: 1867, column: 14, scope: !505)
!1101 = !DILocation(line: 1867, column: 35, scope: !505)
!1102 = !DILocation(line: 1867, column: 38, scope: !505)
!1103 = !DILocation(line: 1867, column: 46, scope: !505)
!1104 = !DILocation(line: 1867, column: 20, scope: !505)
!1105 = !DILocation(line: 1869, column: 6, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1869, column: 6)
!1107 = !DILocation(line: 1869, column: 11, scope: !1106)
!1108 = !DILocation(line: 1869, column: 33, scope: !1106)
!1109 = !DILocation(line: 1869, column: 6, scope: !505)
!1110 = !DILocation(line: 1871, column: 3, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1106, file: !1, line: 1870, column: 46)
!1112 = !DILocation(line: 1871, column: 8, scope: !1111)
!1113 = !DILocation(line: 1871, column: 30, scope: !1111)
!1114 = !DILocation(line: 1872, column: 2, scope: !1111)
!1115 = !DILocation(line: 1874, column: 12, scope: !505)
!1116 = !DILocation(line: 1874, column: 17, scope: !505)
!1117 = !DILocation(line: 1874, column: 3, scope: !505)
!1118 = !DILocation(line: 1874, column: 10, scope: !505)
!1119 = !DILocation(line: 1875, column: 3, scope: !505)
!1120 = !DILocation(line: 1875, column: 8, scope: !505)
!1121 = !DILocation(line: 1876, column: 3, scope: !505)
!1122 = !DILocation(line: 1876, column: 8, scope: !505)
!1123 = !DILocation(line: 1879, column: 6, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1879, column: 6)
!1125 = !DILocation(line: 1879, column: 11, scope: !1124)
!1126 = !DILocation(line: 1879, column: 6, scope: !505)
!1127 = !DILocation(line: 1880, column: 3, scope: !1124)
!1128 = !DILocation(line: 1883, column: 19, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1883, column: 6)
!1130 = !DILocation(line: 1883, column: 24, scope: !1129)
!1131 = !DILocation(line: 1883, column: 31, scope: !1129)
!1132 = !DILocation(line: 1883, column: 36, scope: !1129)
!1133 = !DILocation(line: 1883, column: 15, scope: !1129)
!1134 = !DILocation(line: 1883, column: 6, scope: !505)
!1135 = !DILocation(line: 1884, column: 3, scope: !1129)
!1136 = !DILocation(line: 1886, column: 25, scope: !505)
!1137 = !DILocation(line: 1886, column: 28, scope: !505)
!1138 = !DILocation(line: 1886, column: 33, scope: !505)
!1139 = !DILocation(line: 1886, column: 2, scope: !505)
!1140 = !DILocation(line: 1887, column: 2, scope: !505)
!1141 = !DILocation(line: 1887, column: 7, scope: !505)
!1142 = !DILocation(line: 1887, column: 18, scope: !505)
!1143 = !DILocation(line: 1889, column: 6, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1889, column: 6)
!1145 = !DILocation(line: 1889, column: 11, scope: !1144)
!1146 = !DILocation(line: 1889, column: 6, scope: !505)
!1147 = !DILocation(line: 1890, column: 3, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1144, file: !1, line: 1889, column: 28)
!1149 = !DILocation(line: 1890, column: 8, scope: !1148)
!1150 = !DILocation(line: 1890, column: 30, scope: !1148)
!1151 = !DILocation(line: 1891, column: 7, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1148, file: !1, line: 1891, column: 7)
!1153 = !DILocation(line: 1891, column: 12, scope: !1152)
!1154 = !DILocation(line: 1891, column: 19, scope: !1152)
!1155 = !DILocation(line: 1891, column: 29, scope: !1152)
!1156 = !DILocation(line: 1891, column: 7, scope: !1148)
!1157 = !DILocation(line: 1892, column: 31, scope: !1152)
!1158 = !DILocation(line: 1892, column: 8, scope: !1152)
!1159 = !DILocation(line: 1892, column: 6, scope: !1152)
!1160 = !DILocation(line: 1892, column: 4, scope: !1152)
!1161 = !DILocation(line: 1893, column: 12, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1152, file: !1, line: 1893, column: 12)
!1163 = !DILocation(line: 1893, column: 17, scope: !1162)
!1164 = !DILocation(line: 1893, column: 24, scope: !1162)
!1165 = !DILocation(line: 1893, column: 36, scope: !1162)
!1166 = !DILocation(line: 1893, column: 12, scope: !1152)
!1167 = !DILocation(line: 1894, column: 35, scope: !1162)
!1168 = !DILocation(line: 1894, column: 8, scope: !1162)
!1169 = !DILocation(line: 1894, column: 6, scope: !1162)
!1170 = !DILocation(line: 1894, column: 4, scope: !1162)
!1171 = !DILocation(line: 1896, column: 43, scope: !1162)
!1172 = !DILocation(line: 1896, column: 8, scope: !1162)
!1173 = !DILocation(line: 1896, column: 6, scope: !1162)
!1174 = !DILocation(line: 1897, column: 7, scope: !1175)
!1175 = distinct !DILexicalBlock(scope: !1148, file: !1, line: 1897, column: 7)
!1176 = !DILocation(line: 1897, column: 9, scope: !1175)
!1177 = !DILocation(line: 1897, column: 7, scope: !1148)
!1178 = !DILocation(line: 1898, column: 12, scope: !1175)
!1179 = !DILocation(line: 1898, column: 4, scope: !1175)
!1180 = !DILocation(line: 1899, column: 3, scope: !1148)
!1181 = !DILocation(line: 1899, column: 8, scope: !1148)
!1182 = !DILocation(line: 1899, column: 24, scope: !1148)
!1183 = !DILocation(line: 1900, column: 2, scope: !1148)
!1184 = !DILocation(line: 1902, column: 9, scope: !505)
!1185 = !DILocation(line: 1902, column: 14, scope: !505)
!1186 = !DILocation(line: 1902, column: 21, scope: !505)
!1187 = !DILocation(line: 1902, column: 2, scope: !505)
!1188 = !DILocation(line: 1904, column: 27, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1902, column: 34)
!1190 = !DILocation(line: 1904, column: 30, scope: !1189)
!1191 = !DILocation(line: 1904, column: 36, scope: !1189)
!1192 = !DILocation(line: 1904, column: 42, scope: !1189)
!1193 = !DILocation(line: 1904, column: 8, scope: !1189)
!1194 = !DILocation(line: 1904, column: 5, scope: !1189)
!1195 = !DILocation(line: 1905, column: 3, scope: !1189)
!1196 = !DILocation(line: 1908, column: 30, scope: !1189)
!1197 = !DILocation(line: 1908, column: 33, scope: !1189)
!1198 = !DILocation(line: 1908, column: 39, scope: !1189)
!1199 = !DILocation(line: 1908, column: 45, scope: !1189)
!1200 = !DILocation(line: 1908, column: 8, scope: !1189)
!1201 = !DILocation(line: 1908, column: 5, scope: !1189)
!1202 = !DILocation(line: 1909, column: 3, scope: !1189)
!1203 = !DILocation(line: 1913, column: 22, scope: !1189)
!1204 = !DILocation(line: 1913, column: 25, scope: !1189)
!1205 = !DILocation(line: 1915, column: 24, scope: !1189)
!1206 = !DILocation(line: 1915, column: 29, scope: !1189)
!1207 = !DILocation(line: 1915, column: 36, scope: !1189)
!1208 = !DILocation(line: 1915, column: 7, scope: !1189)
!1209 = !DILocation(line: 1913, column: 3, scope: !1189)
!1210 = !DILocation(line: 1918, column: 3, scope: !1189)
!1211 = !DILocation(line: 1921, column: 6, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1921, column: 6)
!1213 = !DILocation(line: 1921, column: 8, scope: !1212)
!1214 = !DILocation(line: 1921, column: 6, scope: !505)
!1215 = !DILocation(line: 1922, column: 11, scope: !1212)
!1216 = !DILocation(line: 1922, column: 3, scope: !1212)
!1217 = !DILocation(line: 1924, column: 7, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1924, column: 6)
!1219 = !DILocation(line: 1924, column: 6, scope: !1218)
!1220 = !DILocation(line: 1924, column: 6, scope: !505)
!1221 = !DILocation(line: 1925, column: 22, scope: !1218)
!1222 = !DILocation(line: 1925, column: 27, scope: !1218)
!1223 = !DILocation(line: 1925, column: 37, scope: !1218)
!1224 = !DILocation(line: 1925, column: 42, scope: !1218)
!1225 = !DILocation(line: 1925, column: 56, scope: !1218)
!1226 = !DILocation(line: 1925, column: 55, scope: !1218)
!1227 = !DILocation(line: 1926, column: 18, scope: !1218)
!1228 = !DILocation(line: 1926, column: 17, scope: !1218)
!1229 = !DILocation(line: 1926, column: 7, scope: !1218)
!1230 = !DILocation(line: 1925, column: 3, scope: !1218)
!1231 = !DILocation(line: 1925, column: 8, scope: !1218)
!1232 = !DILocation(line: 1925, column: 20, scope: !1218)
!1233 = !DILocation(line: 1928, column: 6, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !505, file: !1, line: 1928, column: 6)
!1235 = !DILocation(line: 1928, column: 11, scope: !1234)
!1236 = !DILocation(line: 1928, column: 6, scope: !505)
!1237 = !DILocation(line: 1930, column: 7, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !1239, file: !1, line: 1930, column: 7)
!1239 = distinct !DILexicalBlock(scope: !1234, file: !1, line: 1928, column: 25)
!1240 = !DILocation(line: 1930, column: 12, scope: !1238)
!1241 = !DILocation(line: 1930, column: 19, scope: !1238)
!1242 = !DILocation(line: 1931, column: 7, scope: !1238)
!1243 = !DILocation(line: 1931, column: 12, scope: !1238)
!1244 = !DILocation(line: 1930, column: 35, scope: !1238)
!1245 = !DILocation(line: 1930, column: 7, scope: !1239)
!1246 = !DILocation(line: 1932, column: 23, scope: !1247)
!1247 = distinct !DILexicalBlock(scope: !1238, file: !1, line: 1931, column: 41)
!1248 = !DILocation(line: 1932, column: 26, scope: !1247)
!1249 = !DILocation(line: 1935, column: 18, scope: !1247)
!1250 = !DILocation(line: 1935, column: 23, scope: !1247)
!1251 = !DILocation(line: 1936, column: 18, scope: !1247)
!1252 = !DILocation(line: 1936, column: 23, scope: !1247)
!1253 = !DILocation(line: 1936, column: 30, scope: !1247)
!1254 = !DILocation(line: 1932, column: 4, scope: !1247)
!1255 = !DILocation(line: 1937, column: 4, scope: !1247)
!1256 = !DILocation(line: 1941, column: 8, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1239, file: !1, line: 1941, column: 7)
!1258 = !DILocation(line: 1941, column: 13, scope: !1257)
!1259 = !DILocation(line: 1941, column: 20, scope: !1257)
!1260 = !DILocation(line: 1941, column: 38, scope: !1257)
!1261 = !DILocation(line: 1942, column: 11, scope: !1257)
!1262 = !DILocation(line: 1942, column: 16, scope: !1257)
!1263 = !DILocation(line: 1942, column: 46, scope: !1257)
!1264 = !DILocation(line: 1942, column: 7, scope: !1257)
!1265 = !DILocation(line: 1941, column: 7, scope: !1239)
!1266 = !DILocation(line: 1943, column: 23, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1257, file: !1, line: 1942, column: 61)
!1268 = !DILocation(line: 1943, column: 26, scope: !1267)
!1269 = !DILocation(line: 1946, column: 18, scope: !1267)
!1270 = !DILocation(line: 1946, column: 23, scope: !1267)
!1271 = !DILocation(line: 1947, column: 18, scope: !1267)
!1272 = !DILocation(line: 1947, column: 23, scope: !1267)
!1273 = !DILocation(line: 1947, column: 30, scope: !1267)
!1274 = !DILocation(line: 1943, column: 4, scope: !1267)
!1275 = !DILocation(line: 1948, column: 4, scope: !1267)
!1276 = !DILocation(line: 1951, column: 9, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1239, file: !1, line: 1951, column: 7)
!1278 = !DILocation(line: 1951, column: 14, scope: !1277)
!1279 = !DILocation(line: 1951, column: 25, scope: !1277)
!1280 = !DILocation(line: 1952, column: 9, scope: !1277)
!1281 = !DILocation(line: 1952, column: 14, scope: !1277)
!1282 = !DILocation(line: 1952, column: 21, scope: !1277)
!1283 = !DILocation(line: 1952, column: 31, scope: !1277)
!1284 = !DILocation(line: 1952, column: 38, scope: !1277)
!1285 = !DILocation(line: 1952, column: 58, scope: !1277)
!1286 = !DILocation(line: 1953, column: 6, scope: !1277)
!1287 = !DILocation(line: 1953, column: 11, scope: !1277)
!1288 = !DILocation(line: 1953, column: 18, scope: !1277)
!1289 = !DILocation(line: 1953, column: 27, scope: !1277)
!1290 = !DILocation(line: 1953, column: 32, scope: !1277)
!1291 = !DILocation(line: 1953, column: 24, scope: !1277)
!1292 = !DILocation(line: 1954, column: 7, scope: !1277)
!1293 = !DILocation(line: 1954, column: 11, scope: !1294)
!1294 = !DILexicalBlockFile(scope: !1277, file: !1, discriminator: 1)
!1295 = !DILocation(line: 1954, column: 16, scope: !1294)
!1296 = !DILocation(line: 1951, column: 7, scope: !1297)
!1297 = !DILexicalBlockFile(scope: !1239, file: !1, discriminator: 1)
!1298 = !DILocation(line: 1955, column: 23, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1277, file: !1, line: 1954, column: 30)
!1300 = !DILocation(line: 1955, column: 26, scope: !1299)
!1301 = !DILocation(line: 1957, column: 23, scope: !1299)
!1302 = !DILocation(line: 1957, column: 28, scope: !1299)
!1303 = !DILocation(line: 1958, column: 23, scope: !1299)
!1304 = !DILocation(line: 1958, column: 28, scope: !1299)
!1305 = !DILocation(line: 1958, column: 35, scope: !1299)
!1306 = !DILocation(line: 1958, column: 8, scope: !1299)
!1307 = !DILocation(line: 1955, column: 4, scope: !1299)
!1308 = !DILocation(line: 1959, column: 4, scope: !1299)
!1309 = !DILocation(line: 1961, column: 2, scope: !1239)
!1310 = !DILocation(line: 1963, column: 2, scope: !505)
!1311 = !DILocation(line: 1964, column: 1, scope: !505)
!1312 = !DILocalVariable(name: "a", arg: 1, scope: !531, file: !1, line: 2218, type: !4)
!1313 = !DILocation(line: 2218, column: 72, scope: !531)
!1314 = !DILocalVariable(name: "zip", scope: !531, file: !1, line: 2220, type: !292)
!1315 = !DILocation(line: 2220, column: 14, scope: !531)
!1316 = !DILocalVariable(name: "bytes_skipped", scope: !531, file: !1, line: 2221, type: !52)
!1317 = !DILocation(line: 2221, column: 10, scope: !531)
!1318 = !DILocation(line: 2223, column: 23, scope: !531)
!1319 = !DILocation(line: 2223, column: 26, scope: !531)
!1320 = !DILocation(line: 2223, column: 34, scope: !531)
!1321 = !DILocation(line: 2223, column: 8, scope: !531)
!1322 = !DILocation(line: 2223, column: 6, scope: !531)
!1323 = !DILocation(line: 2224, column: 41, scope: !531)
!1324 = !DILocation(line: 2224, column: 44, scope: !531)
!1325 = !DILocation(line: 2224, column: 49, scope: !531)
!1326 = !DILocation(line: 2224, column: 18, scope: !531)
!1327 = !DILocation(line: 2224, column: 16, scope: !531)
!1328 = !DILocation(line: 2225, column: 2, scope: !531)
!1329 = !DILocation(line: 2225, column: 7, scope: !531)
!1330 = !DILocation(line: 2225, column: 18, scope: !531)
!1331 = !DILocation(line: 2226, column: 6, scope: !1332)
!1332 = distinct !DILexicalBlock(scope: !531, file: !1, line: 2226, column: 6)
!1333 = !DILocation(line: 2226, column: 20, scope: !1332)
!1334 = !DILocation(line: 2226, column: 6, scope: !531)
!1335 = !DILocation(line: 2227, column: 3, scope: !1332)
!1336 = !DILocation(line: 2230, column: 6, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !531, file: !1, line: 2230, column: 6)
!1338 = !DILocation(line: 2230, column: 11, scope: !1337)
!1339 = !DILocation(line: 2230, column: 6, scope: !531)
!1340 = !DILocation(line: 2231, column: 3, scope: !1337)
!1341 = !DILocation(line: 2234, column: 12, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !531, file: !1, line: 2234, column: 6)
!1343 = !DILocation(line: 2234, column: 17, scope: !1342)
!1344 = !DILocation(line: 2234, column: 24, scope: !1342)
!1345 = !DILocation(line: 2234, column: 34, scope: !1342)
!1346 = !DILocation(line: 2234, column: 8, scope: !1342)
!1347 = !DILocation(line: 2235, column: 6, scope: !1342)
!1348 = !DILocation(line: 2235, column: 9, scope: !1349)
!1349 = !DILexicalBlockFile(scope: !1342, file: !1, discriminator: 1)
!1350 = !DILocation(line: 2235, column: 14, scope: !1349)
!1351 = !DILocation(line: 2235, column: 21, scope: !1349)
!1352 = !DILocation(line: 2235, column: 37, scope: !1349)
!1353 = !DILocation(line: 2234, column: 6, scope: !1354)
!1354 = !DILexicalBlockFile(scope: !531, file: !1, discriminator: 1)
!1355 = !DILocation(line: 2237, column: 42, scope: !1356)
!1356 = distinct !DILexicalBlock(scope: !1342, file: !1, line: 2235, column: 42)
!1357 = !DILocation(line: 2238, column: 6, scope: !1356)
!1358 = !DILocation(line: 2238, column: 11, scope: !1356)
!1359 = !DILocation(line: 2237, column: 19, scope: !1356)
!1360 = !DILocation(line: 2237, column: 17, scope: !1356)
!1361 = !DILocation(line: 2239, column: 7, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1356, file: !1, line: 2239, column: 7)
!1363 = !DILocation(line: 2239, column: 21, scope: !1362)
!1364 = !DILocation(line: 2239, column: 7, scope: !1356)
!1365 = !DILocation(line: 2240, column: 4, scope: !1362)
!1366 = !DILocation(line: 2241, column: 3, scope: !1356)
!1367 = !DILocation(line: 2244, column: 6, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !531, file: !1, line: 2244, column: 6)
!1369 = !DILocation(line: 2244, column: 11, scope: !1368)
!1370 = !DILocation(line: 2244, column: 6, scope: !531)
!1371 = !DILocalVariable(name: "r", scope: !1372, file: !1, line: 2245, type: !23)
!1372 = distinct !DILexicalBlock(scope: !1368, file: !1, line: 2244, column: 28)
!1373 = !DILocation(line: 2245, column: 7, scope: !1372)
!1374 = !DILocation(line: 2247, column: 3, scope: !1372)
!1375 = !DILocation(line: 2247, column: 8, scope: !1372)
!1376 = !DILocation(line: 2247, column: 30, scope: !1372)
!1377 = !DILocation(line: 2248, column: 7, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !1372, file: !1, line: 2248, column: 7)
!1379 = !DILocation(line: 2248, column: 12, scope: !1378)
!1380 = !DILocation(line: 2248, column: 19, scope: !1378)
!1381 = !DILocation(line: 2248, column: 29, scope: !1378)
!1382 = !DILocation(line: 2248, column: 7, scope: !1372)
!1383 = !DILocation(line: 2249, column: 31, scope: !1378)
!1384 = !DILocation(line: 2249, column: 8, scope: !1378)
!1385 = !DILocation(line: 2249, column: 6, scope: !1378)
!1386 = !DILocation(line: 2249, column: 4, scope: !1378)
!1387 = !DILocation(line: 2250, column: 12, scope: !1388)
!1388 = distinct !DILexicalBlock(scope: !1378, file: !1, line: 2250, column: 12)
!1389 = !DILocation(line: 2250, column: 17, scope: !1388)
!1390 = !DILocation(line: 2250, column: 24, scope: !1388)
!1391 = !DILocation(line: 2250, column: 36, scope: !1388)
!1392 = !DILocation(line: 2250, column: 12, scope: !1378)
!1393 = !DILocation(line: 2251, column: 35, scope: !1388)
!1394 = !DILocation(line: 2251, column: 8, scope: !1388)
!1395 = !DILocation(line: 2251, column: 6, scope: !1388)
!1396 = !DILocation(line: 2251, column: 4, scope: !1388)
!1397 = !DILocation(line: 2253, column: 43, scope: !1388)
!1398 = !DILocation(line: 2253, column: 8, scope: !1388)
!1399 = !DILocation(line: 2253, column: 6, scope: !1388)
!1400 = !DILocation(line: 2254, column: 7, scope: !1401)
!1401 = distinct !DILexicalBlock(scope: !1372, file: !1, line: 2254, column: 7)
!1402 = !DILocation(line: 2254, column: 9, scope: !1401)
!1403 = !DILocation(line: 2254, column: 7, scope: !1372)
!1404 = !DILocation(line: 2255, column: 12, scope: !1401)
!1405 = !DILocation(line: 2255, column: 4, scope: !1401)
!1406 = !DILocation(line: 2256, column: 3, scope: !1372)
!1407 = !DILocation(line: 2256, column: 8, scope: !1372)
!1408 = !DILocation(line: 2256, column: 24, scope: !1372)
!1409 = !DILocation(line: 2257, column: 2, scope: !1372)
!1410 = !DILocation(line: 2262, column: 10, scope: !531)
!1411 = !DILocation(line: 2262, column: 15, scope: !531)
!1412 = !DILocation(line: 2262, column: 22, scope: !531)
!1413 = !DILocation(line: 2262, column: 2, scope: !531)
!1414 = !DILocation(line: 2265, column: 3, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !531, file: !1, line: 2262, column: 35)
!1416 = !DILocation(line: 2265, column: 11, scope: !1417)
!1417 = !DILexicalBlockFile(scope: !1415, file: !1, discriminator: 1)
!1418 = !DILocation(line: 2265, column: 16, scope: !1417)
!1419 = !DILocation(line: 2265, column: 10, scope: !1417)
!1420 = !DILocation(line: 2265, column: 3, scope: !1417)
!1421 = !DILocalVariable(name: "offset", scope: !1422, file: !1, line: 2266, type: !52)
!1422 = distinct !DILexicalBlock(scope: !1415, file: !1, line: 2265, column: 30)
!1423 = !DILocation(line: 2266, column: 12, scope: !1422)
!1424 = !DILocalVariable(name: "buff", scope: !1422, file: !1, line: 2267, type: !43)
!1425 = !DILocation(line: 2267, column: 16, scope: !1422)
!1426 = !DILocalVariable(name: "size", scope: !1422, file: !1, line: 2268, type: !45)
!1427 = !DILocation(line: 2268, column: 11, scope: !1422)
!1428 = !DILocalVariable(name: "r", scope: !1422, file: !1, line: 2269, type: !23)
!1429 = !DILocation(line: 2269, column: 8, scope: !1422)
!1430 = !DILocation(line: 2270, column: 31, scope: !1422)
!1431 = !DILocation(line: 2270, column: 9, scope: !1422)
!1432 = !DILocation(line: 2270, column: 6, scope: !1422)
!1433 = !DILocation(line: 2271, column: 8, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1422, file: !1, line: 2271, column: 8)
!1435 = !DILocation(line: 2271, column: 10, scope: !1434)
!1436 = !DILocation(line: 2271, column: 8, scope: !1422)
!1437 = !DILocation(line: 2272, column: 13, scope: !1434)
!1438 = !DILocation(line: 2272, column: 5, scope: !1434)
!1439 = !DILocation(line: 2265, column: 3, scope: !1440)
!1440 = !DILexicalBlockFile(scope: !1415, file: !1, discriminator: 2)
!1441 = !DILocation(line: 2274, column: 3, scope: !1415)
!1442 = !DILocation(line: 2278, column: 3, scope: !1415)
!1443 = !DILocalVariable(name: "p", scope: !1444, file: !1, line: 2279, type: !80)
!1444 = distinct !DILexicalBlock(scope: !1445, file: !1, line: 2278, column: 12)
!1445 = distinct !DILexicalBlock(scope: !1446, file: !1, line: 2278, column: 3)
!1446 = distinct !DILexicalBlock(scope: !1415, file: !1, line: 2278, column: 3)
!1447 = !DILocation(line: 2279, column: 16, scope: !1444)
!1448 = !DILocalVariable(name: "buff", scope: !1444, file: !1, line: 2279, type: !80)
!1449 = !DILocation(line: 2279, column: 20, scope: !1444)
!1450 = !DILocalVariable(name: "bytes_avail", scope: !1444, file: !1, line: 2280, type: !38)
!1451 = !DILocation(line: 2280, column: 12, scope: !1444)
!1452 = !DILocation(line: 2281, column: 32, scope: !1444)
!1453 = !DILocation(line: 2281, column: 11, scope: !1444)
!1454 = !DILocation(line: 2281, column: 9, scope: !1444)
!1455 = !DILocation(line: 2282, column: 8, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1444, file: !1, line: 2282, column: 8)
!1457 = !DILocation(line: 2282, column: 20, scope: !1456)
!1458 = !DILocation(line: 2282, column: 8, scope: !1444)
!1459 = !DILocation(line: 2283, column: 24, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 2282, column: 26)
!1461 = !DILocation(line: 2283, column: 27, scope: !1460)
!1462 = !DILocation(line: 2283, column: 5, scope: !1460)
!1463 = !DILocation(line: 2286, column: 5, scope: !1460)
!1464 = !DILocation(line: 2288, column: 8, scope: !1444)
!1465 = !DILocation(line: 2288, column: 6, scope: !1444)
!1466 = !DILocation(line: 2289, column: 4, scope: !1444)
!1467 = !DILocation(line: 2289, column: 11, scope: !1468)
!1468 = !DILexicalBlockFile(scope: !1444, file: !1, discriminator: 1)
!1469 = !DILocation(line: 2289, column: 16, scope: !1468)
!1470 = !DILocation(line: 2289, column: 23, scope: !1468)
!1471 = !DILocation(line: 2289, column: 21, scope: !1468)
!1472 = !DILocation(line: 2289, column: 35, scope: !1468)
!1473 = !DILocation(line: 2289, column: 13, scope: !1468)
!1474 = !DILocation(line: 2289, column: 4, scope: !1468)
!1475 = !DILocation(line: 2290, column: 9, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1477, file: !1, line: 2290, column: 9)
!1477 = distinct !DILexicalBlock(scope: !1444, file: !1, line: 2289, column: 41)
!1478 = !DILocation(line: 2290, column: 14, scope: !1476)
!1479 = !DILocation(line: 2290, column: 9, scope: !1477)
!1480 = !DILocation(line: 2290, column: 26, scope: !1481)
!1481 = !DILexicalBlockFile(scope: !1482, file: !1, discriminator: 1)
!1482 = distinct !DILexicalBlock(scope: !1476, file: !1, line: 2290, column: 22)
!1483 = !DILocation(line: 2290, column: 32, scope: !1481)
!1484 = !DILocation(line: 2291, column: 14, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1476, file: !1, line: 2291, column: 14)
!1486 = !DILocation(line: 2291, column: 19, scope: !1485)
!1487 = !DILocation(line: 2291, column: 14, scope: !1476)
!1488 = !DILocation(line: 2291, column: 31, scope: !1489)
!1489 = !DILexicalBlockFile(scope: !1490, file: !1, discriminator: 1)
!1490 = distinct !DILexicalBlock(scope: !1485, file: !1, line: 2291, column: 27)
!1491 = !DILocation(line: 2291, column: 37, scope: !1489)
!1492 = !DILocation(line: 2292, column: 14, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1485, file: !1, line: 2292, column: 14)
!1494 = !DILocation(line: 2292, column: 19, scope: !1493)
!1495 = !DILocation(line: 2292, column: 14, scope: !1485)
!1496 = !DILocation(line: 2292, column: 34, scope: !1497)
!1497 = !DILexicalBlockFile(scope: !1498, file: !1, discriminator: 1)
!1498 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 2292, column: 30)
!1499 = !DILocation(line: 2292, column: 40, scope: !1497)
!1500 = !DILocation(line: 2293, column: 14, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 2293, column: 14)
!1502 = !DILocation(line: 2293, column: 19, scope: !1501)
!1503 = !DILocation(line: 2293, column: 29, scope: !1501)
!1504 = !DILocation(line: 2293, column: 32, scope: !1505)
!1505 = !DILexicalBlockFile(scope: !1501, file: !1, discriminator: 1)
!1506 = !DILocation(line: 2293, column: 37, scope: !1505)
!1507 = !DILocation(line: 2294, column: 9, scope: !1501)
!1508 = !DILocation(line: 2294, column: 12, scope: !1505)
!1509 = !DILocation(line: 2294, column: 17, scope: !1505)
!1510 = !DILocation(line: 2294, column: 24, scope: !1505)
!1511 = !DILocation(line: 2294, column: 27, scope: !1512)
!1512 = !DILexicalBlockFile(scope: !1501, file: !1, discriminator: 2)
!1513 = !DILocation(line: 2294, column: 32, scope: !1512)
!1514 = !DILocation(line: 2293, column: 14, scope: !1515)
!1515 = !DILexicalBlockFile(scope: !1493, file: !1, discriminator: 2)
!1516 = !DILocation(line: 2295, column: 10, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1518, file: !1, line: 2295, column: 10)
!1518 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 2294, column: 40)
!1519 = !DILocation(line: 2295, column: 15, scope: !1517)
!1520 = !DILocation(line: 2295, column: 22, scope: !1517)
!1521 = !DILocation(line: 2295, column: 28, scope: !1517)
!1522 = !DILocation(line: 2295, column: 10, scope: !1518)
!1523 = !DILocation(line: 2296, column: 30, scope: !1517)
!1524 = !DILocation(line: 2297, column: 11, scope: !1517)
!1525 = !DILocation(line: 2297, column: 15, scope: !1517)
!1526 = !DILocation(line: 2297, column: 13, scope: !1517)
!1527 = !DILocation(line: 2297, column: 20, scope: !1517)
!1528 = !DILocation(line: 2296, column: 7, scope: !1517)
!1529 = !DILocation(line: 2299, column: 30, scope: !1517)
!1530 = !DILocation(line: 2300, column: 11, scope: !1517)
!1531 = !DILocation(line: 2300, column: 15, scope: !1517)
!1532 = !DILocation(line: 2300, column: 13, scope: !1517)
!1533 = !DILocation(line: 2300, column: 20, scope: !1517)
!1534 = !DILocation(line: 2299, column: 7, scope: !1517)
!1535 = !DILocation(line: 2301, column: 6, scope: !1518)
!1536 = !DILocation(line: 2302, column: 16, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 2302, column: 12)
!1538 = !DILocation(line: 2289, column: 4, scope: !1539)
!1539 = !DILexicalBlockFile(scope: !1444, file: !1, discriminator: 2)
!1540 = !DILocation(line: 2304, column: 27, scope: !1444)
!1541 = !DILocation(line: 2304, column: 30, scope: !1444)
!1542 = !DILocation(line: 2304, column: 34, scope: !1444)
!1543 = !DILocation(line: 2304, column: 32, scope: !1444)
!1544 = !DILocation(line: 2304, column: 4, scope: !1444)
!1545 = !DILocation(line: 2278, column: 3, scope: !1546)
!1546 = !DILexicalBlockFile(scope: !1445, file: !1, discriminator: 1)
!1547 = !DILocation(line: 2307, column: 1, scope: !531)
!1548 = !DILocalVariable(name: "a", arg: 1, scope: !532, file: !1, line: 1967, type: !4)
!1549 = !DILocation(line: 1967, column: 54, scope: !532)
!1550 = !DILocalVariable(name: "zip", scope: !532, file: !1, line: 1969, type: !292)
!1551 = !DILocation(line: 1969, column: 14, scope: !532)
!1552 = !DILocalVariable(name: "zip_entry", scope: !532, file: !1, line: 1970, type: !301)
!1553 = !DILocation(line: 1970, column: 20, scope: !532)
!1554 = !DILocalVariable(name: "next_zip_entry", scope: !532, file: !1, line: 1970, type: !301)
!1555 = !DILocation(line: 1970, column: 32, scope: !532)
!1556 = !DILocation(line: 1972, column: 23, scope: !532)
!1557 = !DILocation(line: 1972, column: 26, scope: !532)
!1558 = !DILocation(line: 1972, column: 34, scope: !532)
!1559 = !DILocation(line: 1972, column: 8, scope: !532)
!1560 = !DILocation(line: 1972, column: 6, scope: !532)
!1561 = !DILocation(line: 1974, column: 6, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !532, file: !1, line: 1974, column: 6)
!1563 = !DILocation(line: 1974, column: 11, scope: !1562)
!1564 = !DILocation(line: 1974, column: 6, scope: !532)
!1565 = !DILocation(line: 1975, column: 15, scope: !1562)
!1566 = !DILocation(line: 1975, column: 20, scope: !1562)
!1567 = !DILocation(line: 1975, column: 3, scope: !1562)
!1568 = !DILocation(line: 1976, column: 7, scope: !532)
!1569 = !DILocation(line: 1976, column: 12, scope: !532)
!1570 = !DILocation(line: 1976, column: 2, scope: !532)
!1571 = !DILocation(line: 1978, column: 6, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !532, file: !1, line: 1978, column: 6)
!1573 = !DILocation(line: 1978, column: 11, scope: !1572)
!1574 = !DILocation(line: 1978, column: 6, scope: !532)
!1575 = !DILocation(line: 1979, column: 15, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1572, file: !1, line: 1978, column: 24)
!1577 = !DILocation(line: 1979, column: 20, scope: !1576)
!1578 = !DILocation(line: 1979, column: 13, scope: !1576)
!1579 = !DILocation(line: 1980, column: 3, scope: !1576)
!1580 = !DILocation(line: 1980, column: 10, scope: !1581)
!1581 = !DILexicalBlockFile(scope: !1576, file: !1, discriminator: 1)
!1582 = !DILocation(line: 1980, column: 20, scope: !1581)
!1583 = !DILocation(line: 1980, column: 3, scope: !1581)
!1584 = !DILocation(line: 1981, column: 21, scope: !1585)
!1585 = distinct !DILexicalBlock(scope: !1576, file: !1, line: 1980, column: 29)
!1586 = !DILocation(line: 1981, column: 32, scope: !1585)
!1587 = !DILocation(line: 1981, column: 19, scope: !1585)
!1588 = !DILocation(line: 1982, column: 25, scope: !1585)
!1589 = !DILocation(line: 1982, column: 36, scope: !1585)
!1590 = !DILocation(line: 1982, column: 4, scope: !1585)
!1591 = !DILocation(line: 1983, column: 9, scope: !1585)
!1592 = !DILocation(line: 1983, column: 4, scope: !1585)
!1593 = !DILocation(line: 1984, column: 16, scope: !1585)
!1594 = !DILocation(line: 1984, column: 14, scope: !1585)
!1595 = !DILocation(line: 1980, column: 3, scope: !1596)
!1596 = !DILexicalBlockFile(scope: !1576, file: !1, discriminator: 2)
!1597 = !DILocation(line: 1986, column: 2, scope: !1576)
!1598 = !DILocation(line: 1987, column: 7, scope: !532)
!1599 = !DILocation(line: 1987, column: 12, scope: !532)
!1600 = !DILocation(line: 1987, column: 2, scope: !532)
!1601 = !DILocation(line: 1988, column: 6, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !532, file: !1, line: 1988, column: 6)
!1603 = !DILocation(line: 1988, column: 11, scope: !1602)
!1604 = !DILocation(line: 1988, column: 6, scope: !532)
!1605 = !DILocation(line: 1989, column: 3, scope: !1602)
!1606 = !DILocation(line: 1990, column: 6, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !532, file: !1, line: 1990, column: 6)
!1608 = !DILocation(line: 1990, column: 11, scope: !1607)
!1609 = !DILocation(line: 1990, column: 6, scope: !532)
!1610 = !DILocation(line: 1991, column: 3, scope: !1607)
!1611 = !DILocation(line: 1992, column: 7, scope: !532)
!1612 = !DILocation(line: 1992, column: 12, scope: !532)
!1613 = !DILocation(line: 1992, column: 2, scope: !532)
!1614 = !DILocation(line: 1993, column: 7, scope: !532)
!1615 = !DILocation(line: 1993, column: 12, scope: !532)
!1616 = !DILocation(line: 1993, column: 2, scope: !532)
!1617 = !DILocation(line: 1994, column: 7, scope: !532)
!1618 = !DILocation(line: 1994, column: 12, scope: !532)
!1619 = !DILocation(line: 1994, column: 2, scope: !532)
!1620 = !DILocation(line: 1995, column: 23, scope: !532)
!1621 = !DILocation(line: 1995, column: 28, scope: !532)
!1622 = !DILocation(line: 1995, column: 2, scope: !532)
!1623 = !DILocation(line: 1996, column: 7, scope: !532)
!1624 = !DILocation(line: 1996, column: 2, scope: !532)
!1625 = !DILocation(line: 1997, column: 3, scope: !532)
!1626 = !DILocation(line: 1997, column: 6, scope: !532)
!1627 = !DILocation(line: 1997, column: 14, scope: !532)
!1628 = !DILocation(line: 1997, column: 20, scope: !532)
!1629 = !DILocation(line: 1998, column: 2, scope: !532)
!1630 = !DILocalVariable(name: "a", arg: 1, scope: !533, file: !1, line: 2080, type: !4)
!1631 = !DILocation(line: 2080, column: 79, scope: !533)
!1632 = !DILocation(line: 2082, column: 8, scope: !533)
!1633 = !DILocation(line: 2083, column: 2, scope: !533)
!1634 = !DILocalVariable(name: "_a", arg: 1, scope: !534, file: !1, line: 2002, type: !4)
!1635 = !DILocation(line: 2002, column: 68, scope: !534)
!1636 = !DILocation(line: 2004, column: 6, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !534, file: !1, line: 2004, column: 6)
!1638 = !DILocation(line: 2004, column: 9, scope: !1637)
!1639 = !DILocation(line: 2004, column: 12, scope: !1640)
!1640 = !DILexicalBlockFile(scope: !1637, file: !1, discriminator: 1)
!1641 = !DILocation(line: 2004, column: 16, scope: !1640)
!1642 = !DILocation(line: 2004, column: 6, scope: !1640)
!1643 = !DILocalVariable(name: "zip", scope: !1644, file: !1, line: 2005, type: !292)
!1644 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 2004, column: 24)
!1645 = !DILocation(line: 2005, column: 16, scope: !1644)
!1646 = !DILocation(line: 2005, column: 36, scope: !1644)
!1647 = !DILocation(line: 2005, column: 40, scope: !1644)
!1648 = !DILocation(line: 2005, column: 48, scope: !1644)
!1649 = !DILocation(line: 2005, column: 22, scope: !1644)
!1650 = !DILocation(line: 2006, column: 7, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1644, file: !1, line: 2006, column: 7)
!1652 = !DILocation(line: 2006, column: 7, scope: !1644)
!1653 = !DILocation(line: 2007, column: 11, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 2006, column: 12)
!1655 = !DILocation(line: 2007, column: 16, scope: !1654)
!1656 = !DILocation(line: 2007, column: 4, scope: !1654)
!1657 = !DILocation(line: 2009, column: 2, scope: !1644)
!1658 = !DILocation(line: 2010, column: 2, scope: !534)
!1659 = !DILocation(line: 2011, column: 1, scope: !534)
!1660 = !DILocalVariable(name: "a", arg: 1, scope: !535, file: !1, line: 2452, type: !4)
!1661 = !DILocation(line: 2452, column: 59, scope: !535)
!1662 = !DILocalVariable(name: "best_bid", arg: 2, scope: !535, file: !1, line: 2452, type: !23)
!1663 = !DILocation(line: 2452, column: 66, scope: !535)
!1664 = !DILocalVariable(name: "zip", scope: !535, file: !1, line: 2454, type: !292)
!1665 = !DILocation(line: 2454, column: 14, scope: !535)
!1666 = !DILocation(line: 2454, column: 34, scope: !535)
!1667 = !DILocation(line: 2454, column: 37, scope: !535)
!1668 = !DILocation(line: 2454, column: 45, scope: !535)
!1669 = !DILocation(line: 2454, column: 20, scope: !535)
!1670 = !DILocalVariable(name: "file_size", scope: !535, file: !1, line: 2455, type: !52)
!1671 = !DILocation(line: 2455, column: 10, scope: !535)
!1672 = !DILocalVariable(name: "current_offset", scope: !535, file: !1, line: 2455, type: !52)
!1673 = !DILocation(line: 2455, column: 21, scope: !535)
!1674 = !DILocalVariable(name: "p", scope: !535, file: !1, line: 2456, type: !80)
!1675 = !DILocation(line: 2456, column: 14, scope: !535)
!1676 = !DILocalVariable(name: "i", scope: !535, file: !1, line: 2457, type: !23)
!1677 = !DILocation(line: 2457, column: 6, scope: !535)
!1678 = !DILocalVariable(name: "tail", scope: !535, file: !1, line: 2457, type: !23)
!1679 = !DILocation(line: 2457, column: 9, scope: !535)
!1680 = !DILocation(line: 2461, column: 6, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !535, file: !1, line: 2461, column: 6)
!1682 = !DILocation(line: 2461, column: 15, scope: !1681)
!1683 = !DILocation(line: 2461, column: 6, scope: !535)
!1684 = !DILocation(line: 2462, column: 3, scope: !1681)
!1685 = !DILocation(line: 2464, column: 34, scope: !535)
!1686 = !DILocation(line: 2464, column: 14, scope: !535)
!1687 = !DILocation(line: 2464, column: 12, scope: !535)
!1688 = !DILocation(line: 2465, column: 6, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !535, file: !1, line: 2465, column: 6)
!1690 = !DILocation(line: 2465, column: 16, scope: !1689)
!1691 = !DILocation(line: 2465, column: 6, scope: !535)
!1692 = !DILocation(line: 2466, column: 3, scope: !1689)
!1693 = !DILocation(line: 2470, column: 14, scope: !535)
!1694 = !DILocation(line: 2470, column: 14, scope: !1695)
!1695 = !DILexicalBlockFile(scope: !535, file: !1, discriminator: 1)
!1696 = !DILocation(line: 2470, column: 14, scope: !1697)
!1697 = !DILexicalBlockFile(scope: !535, file: !1, discriminator: 2)
!1698 = !DILocation(line: 2470, column: 14, scope: !1699)
!1699 = !DILexicalBlockFile(scope: !535, file: !1, discriminator: 3)
!1700 = !DILocation(line: 2470, column: 9, scope: !1699)
!1701 = !DILocation(line: 2470, column: 7, scope: !1699)
!1702 = !DILocation(line: 2471, column: 39, scope: !535)
!1703 = !DILocation(line: 2471, column: 43, scope: !535)
!1704 = !DILocation(line: 2471, column: 42, scope: !535)
!1705 = !DILocation(line: 2471, column: 19, scope: !535)
!1706 = !DILocation(line: 2471, column: 17, scope: !535)
!1707 = !DILocation(line: 2472, column: 6, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !535, file: !1, line: 2472, column: 6)
!1709 = !DILocation(line: 2472, column: 21, scope: !1708)
!1710 = !DILocation(line: 2472, column: 6, scope: !535)
!1711 = !DILocation(line: 2473, column: 3, scope: !1708)
!1712 = !DILocation(line: 2474, column: 32, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !535, file: !1, line: 2474, column: 6)
!1714 = !DILocation(line: 2474, column: 43, scope: !1713)
!1715 = !DILocation(line: 2474, column: 35, scope: !1713)
!1716 = !DILocation(line: 2474, column: 11, scope: !1713)
!1717 = !DILocation(line: 2474, column: 9, scope: !1713)
!1718 = !DILocation(line: 2474, column: 56, scope: !1713)
!1719 = !DILocation(line: 2474, column: 6, scope: !535)
!1720 = !DILocation(line: 2475, column: 3, scope: !1713)
!1721 = !DILocation(line: 2480, column: 11, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !535, file: !1, line: 2480, column: 2)
!1723 = !DILocation(line: 2480, column: 16, scope: !1722)
!1724 = !DILocation(line: 2480, column: 9, scope: !1722)
!1725 = !DILocation(line: 2480, column: 7, scope: !1722)
!1726 = !DILocation(line: 2480, column: 22, scope: !1727)
!1727 = !DILexicalBlockFile(scope: !1728, file: !1, discriminator: 1)
!1728 = distinct !DILexicalBlock(scope: !1722, file: !1, line: 2480, column: 2)
!1729 = !DILocation(line: 2480, column: 24, scope: !1727)
!1730 = !DILocation(line: 2480, column: 2, scope: !1727)
!1731 = !DILocation(line: 2481, column: 13, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !1728, file: !1, line: 2480, column: 30)
!1733 = !DILocation(line: 2481, column: 11, scope: !1732)
!1734 = !DILocation(line: 2481, column: 3, scope: !1732)
!1735 = !DILocation(line: 2483, column: 15, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1737, file: !1, line: 2483, column: 8)
!1737 = distinct !DILexicalBlock(scope: !1732, file: !1, line: 2481, column: 17)
!1738 = !DILocation(line: 2483, column: 19, scope: !1736)
!1739 = !DILocation(line: 2483, column: 17, scope: !1736)
!1740 = !DILocation(line: 2483, column: 8, scope: !1736)
!1741 = !DILocation(line: 2483, column: 39, scope: !1736)
!1742 = !DILocation(line: 2483, column: 8, scope: !1737)
!1743 = !DILocalVariable(name: "ret", scope: !1744, file: !1, line: 2484, type: !23)
!1744 = distinct !DILexicalBlock(scope: !1736, file: !1, line: 2483, column: 45)
!1745 = !DILocation(line: 2484, column: 9, scope: !1744)
!1746 = !DILocation(line: 2484, column: 25, scope: !1744)
!1747 = !DILocation(line: 2484, column: 30, scope: !1744)
!1748 = !DILocation(line: 2484, column: 34, scope: !1744)
!1749 = !DILocation(line: 2484, column: 32, scope: !1744)
!1750 = !DILocation(line: 2485, column: 9, scope: !1744)
!1751 = !DILocation(line: 2485, column: 26, scope: !1744)
!1752 = !DILocation(line: 2485, column: 24, scope: !1744)
!1753 = !DILocation(line: 2484, column: 15, scope: !1744)
!1754 = !DILocation(line: 2486, column: 9, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1744, file: !1, line: 2486, column: 9)
!1756 = !DILocation(line: 2486, column: 13, scope: !1755)
!1757 = !DILocation(line: 2486, column: 9, scope: !1744)
!1758 = !DILocation(line: 2489, column: 10, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1760, file: !1, line: 2489, column: 10)
!1760 = distinct !DILexicalBlock(scope: !1755, file: !1, line: 2486, column: 18)
!1761 = !DILocation(line: 2489, column: 12, scope: !1759)
!1762 = !DILocation(line: 2490, column: 10, scope: !1759)
!1763 = !DILocation(line: 2490, column: 20, scope: !1764)
!1764 = !DILexicalBlockFile(scope: !1759, file: !1, discriminator: 1)
!1765 = !DILocation(line: 2490, column: 24, scope: !1764)
!1766 = !DILocation(line: 2490, column: 22, scope: !1764)
!1767 = !DILocation(line: 2490, column: 26, scope: !1764)
!1768 = !DILocation(line: 2490, column: 13, scope: !1764)
!1769 = !DILocation(line: 2490, column: 49, scope: !1764)
!1770 = !DILocation(line: 2489, column: 10, scope: !1771)
!1771 = !DILexicalBlockFile(scope: !1760, file: !1, discriminator: 1)
!1772 = !DILocation(line: 2491, column: 23, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1759, file: !1, line: 2490, column: 55)
!1774 = !DILocation(line: 2491, column: 26, scope: !1773)
!1775 = !DILocation(line: 2491, column: 31, scope: !1773)
!1776 = !DILocation(line: 2491, column: 35, scope: !1773)
!1777 = !DILocation(line: 2491, column: 33, scope: !1773)
!1778 = !DILocation(line: 2491, column: 37, scope: !1773)
!1779 = !DILocation(line: 2491, column: 7, scope: !1773)
!1780 = !DILocation(line: 2492, column: 6, scope: !1773)
!1781 = !DILocation(line: 2493, column: 14, scope: !1760)
!1782 = !DILocation(line: 2493, column: 6, scope: !1760)
!1783 = !DILocation(line: 2495, column: 4, scope: !1744)
!1784 = !DILocation(line: 2496, column: 6, scope: !1737)
!1785 = !DILocation(line: 2497, column: 4, scope: !1737)
!1786 = !DILocation(line: 2498, column: 15, scope: !1737)
!1787 = !DILocation(line: 2498, column: 21, scope: !1737)
!1788 = !DILocation(line: 2499, column: 15, scope: !1737)
!1789 = !DILocation(line: 2499, column: 21, scope: !1737)
!1790 = !DILocation(line: 2500, column: 15, scope: !1737)
!1791 = !DILocation(line: 2500, column: 21, scope: !1737)
!1792 = !DILocation(line: 2501, column: 14, scope: !1737)
!1793 = !DILocation(line: 2501, column: 20, scope: !1737)
!1794 = !DILocation(line: 2480, column: 2, scope: !1795)
!1795 = !DILexicalBlockFile(scope: !1728, file: !1, discriminator: 2)
!1796 = !DILocation(line: 2504, column: 2, scope: !535)
!1797 = !DILocation(line: 2505, column: 1, scope: !535)
!1798 = !DILocalVariable(name: "a", arg: 1, scope: !542, file: !1, line: 2977, type: !4)
!1799 = !DILocation(line: 2977, column: 67, scope: !542)
!1800 = !DILocalVariable(name: "entry", arg: 2, scope: !542, file: !1, line: 2978, type: !30)
!1801 = !DILocation(line: 2978, column: 24, scope: !542)
!1802 = !DILocalVariable(name: "zip", scope: !542, file: !1, line: 2980, type: !292)
!1803 = !DILocation(line: 2980, column: 14, scope: !542)
!1804 = !DILocation(line: 2980, column: 34, scope: !542)
!1805 = !DILocation(line: 2980, column: 37, scope: !542)
!1806 = !DILocation(line: 2980, column: 45, scope: !542)
!1807 = !DILocation(line: 2980, column: 20, scope: !542)
!1808 = !DILocalVariable(name: "rsrc", scope: !542, file: !1, line: 2981, type: !301)
!1809 = !DILocation(line: 2981, column: 20, scope: !542)
!1810 = !DILocalVariable(name: "offset", scope: !542, file: !1, line: 2982, type: !52)
!1811 = !DILocation(line: 2982, column: 10, scope: !542)
!1812 = !DILocalVariable(name: "r", scope: !542, file: !1, line: 2983, type: !23)
!1813 = !DILocation(line: 2983, column: 6, scope: !542)
!1814 = !DILocalVariable(name: "ret", scope: !542, file: !1, line: 2983, type: !23)
!1815 = !DILocation(line: 2983, column: 9, scope: !542)
!1816 = !DILocation(line: 2992, column: 6, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !542, file: !1, line: 2992, column: 6)
!1818 = !DILocation(line: 2992, column: 11, scope: !1817)
!1819 = !DILocation(line: 2992, column: 33, scope: !1817)
!1820 = !DILocation(line: 2992, column: 6, scope: !542)
!1821 = !DILocation(line: 2994, column: 3, scope: !1817)
!1822 = !DILocation(line: 2994, column: 8, scope: !1817)
!1823 = !DILocation(line: 2994, column: 30, scope: !1817)
!1824 = !DILocation(line: 2996, column: 2, scope: !542)
!1825 = !DILocation(line: 2996, column: 5, scope: !542)
!1826 = !DILocation(line: 2996, column: 13, scope: !542)
!1827 = !DILocation(line: 2996, column: 28, scope: !542)
!1828 = !DILocation(line: 2997, column: 6, scope: !1829)
!1829 = distinct !DILexicalBlock(scope: !542, file: !1, line: 2997, column: 6)
!1830 = !DILocation(line: 2997, column: 9, scope: !1829)
!1831 = !DILocation(line: 2997, column: 17, scope: !1829)
!1832 = !DILocation(line: 2997, column: 37, scope: !1829)
!1833 = !DILocation(line: 2997, column: 6, scope: !542)
!1834 = !DILocation(line: 2998, column: 3, scope: !1829)
!1835 = !DILocation(line: 2998, column: 6, scope: !1829)
!1836 = !DILocation(line: 2998, column: 14, scope: !1829)
!1837 = !DILocation(line: 2998, column: 34, scope: !1829)
!1838 = !DILocation(line: 3000, column: 6, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3000, column: 6)
!1840 = !DILocation(line: 3000, column: 11, scope: !1839)
!1841 = !DILocation(line: 3000, column: 23, scope: !1839)
!1842 = !DILocation(line: 3000, column: 6, scope: !542)
!1843 = !DILocation(line: 3001, column: 31, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1839, file: !1, line: 3000, column: 32)
!1845 = !DILocation(line: 3001, column: 34, scope: !1844)
!1846 = !DILocation(line: 3001, column: 7, scope: !1844)
!1847 = !DILocation(line: 3001, column: 5, scope: !1844)
!1848 = !DILocation(line: 3002, column: 7, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1844, file: !1, line: 3002, column: 7)
!1850 = !DILocation(line: 3002, column: 9, scope: !1849)
!1851 = !DILocation(line: 3002, column: 7, scope: !1844)
!1852 = !DILocation(line: 3003, column: 11, scope: !1849)
!1853 = !DILocation(line: 3003, column: 4, scope: !1849)
!1854 = !DILocation(line: 3007, column: 27, scope: !1844)
!1855 = !DILocation(line: 3007, column: 7, scope: !1844)
!1856 = !DILocation(line: 3006, column: 3, scope: !1844)
!1857 = !DILocation(line: 3006, column: 8, scope: !1844)
!1858 = !DILocation(line: 3006, column: 14, scope: !1844)
!1859 = !DILocation(line: 3008, column: 2, scope: !1844)
!1860 = !DILocation(line: 3008, column: 13, scope: !1861)
!1861 = !DILexicalBlockFile(scope: !1862, file: !1, discriminator: 1)
!1862 = distinct !DILexicalBlock(scope: !1839, file: !1, line: 3008, column: 13)
!1863 = !DILocation(line: 3008, column: 18, scope: !1861)
!1864 = !DILocation(line: 3008, column: 24, scope: !1861)
!1865 = !DILocation(line: 3011, column: 8, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1862, file: !1, line: 3008, column: 33)
!1867 = !DILocation(line: 3011, column: 13, scope: !1866)
!1868 = !DILocation(line: 3011, column: 20, scope: !1866)
!1869 = !DILocation(line: 3011, column: 25, scope: !1866)
!1870 = !DILocation(line: 3011, column: 32, scope: !1866)
!1871 = !DILocation(line: 3010, column: 36, scope: !1866)
!1872 = !DILocation(line: 3010, column: 16, scope: !1866)
!1873 = !DILocation(line: 3010, column: 3, scope: !1866)
!1874 = !DILocation(line: 3010, column: 8, scope: !1866)
!1875 = !DILocation(line: 3010, column: 14, scope: !1866)
!1876 = !DILocation(line: 3012, column: 2, scope: !1866)
!1877 = !DILocation(line: 3014, column: 6, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3014, column: 6)
!1879 = !DILocation(line: 3014, column: 11, scope: !1878)
!1880 = !DILocation(line: 3014, column: 17, scope: !1878)
!1881 = !DILocation(line: 3014, column: 6, scope: !542)
!1882 = !DILocation(line: 3015, column: 3, scope: !1878)
!1883 = !DILocation(line: 3017, column: 6, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3017, column: 6)
!1885 = !DILocation(line: 3017, column: 11, scope: !1884)
!1886 = !DILocation(line: 3017, column: 18, scope: !1884)
!1887 = !DILocation(line: 3017, column: 27, scope: !1884)
!1888 = !DILocation(line: 3017, column: 6, scope: !542)
!1889 = !DILocation(line: 3019, column: 8, scope: !1884)
!1890 = !DILocation(line: 3019, column: 13, scope: !1884)
!1891 = !DILocation(line: 3019, column: 24, scope: !1884)
!1892 = !DILocation(line: 3019, column: 29, scope: !1884)
!1893 = !DILocation(line: 3019, column: 36, scope: !1884)
!1894 = !DILocation(line: 3019, column: 45, scope: !1884)
!1895 = !DILocation(line: 3018, column: 30, scope: !1884)
!1896 = !DILocation(line: 3018, column: 10, scope: !1884)
!1897 = !DILocation(line: 3018, column: 8, scope: !1884)
!1898 = !DILocation(line: 3018, column: 3, scope: !1884)
!1899 = !DILocation(line: 3021, column: 8, scope: !1884)
!1900 = !DILocation(line: 3023, column: 6, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3023, column: 6)
!1902 = !DILocation(line: 3023, column: 11, scope: !1901)
!1903 = !DILocation(line: 3023, column: 6, scope: !542)
!1904 = !DILocation(line: 3024, column: 3, scope: !1901)
!1905 = !DILocation(line: 3025, column: 6, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3025, column: 6)
!1907 = !DILocation(line: 3025, column: 11, scope: !1906)
!1908 = !DILocation(line: 3025, column: 6, scope: !542)
!1909 = !DILocation(line: 3026, column: 3, scope: !1906)
!1910 = !DILocation(line: 3027, column: 38, scope: !542)
!1911 = !DILocation(line: 3027, column: 43, scope: !542)
!1912 = !DILocation(line: 3027, column: 54, scope: !542)
!1913 = !DILocation(line: 3027, column: 20, scope: !542)
!1914 = !DILocation(line: 3027, column: 25, scope: !542)
!1915 = !DILocation(line: 3027, column: 36, scope: !542)
!1916 = !DILocation(line: 3027, column: 2, scope: !542)
!1917 = !DILocation(line: 3027, column: 7, scope: !542)
!1918 = !DILocation(line: 3027, column: 18, scope: !542)
!1919 = !DILocation(line: 3028, column: 34, scope: !542)
!1920 = !DILocation(line: 3028, column: 2, scope: !542)
!1921 = !DILocation(line: 3033, column: 33, scope: !542)
!1922 = !DILocation(line: 3033, column: 36, scope: !542)
!1923 = !DILocation(line: 3033, column: 11, scope: !542)
!1924 = !DILocation(line: 3033, column: 9, scope: !542)
!1925 = !DILocation(line: 3034, column: 6, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3034, column: 6)
!1927 = !DILocation(line: 3034, column: 15, scope: !1926)
!1928 = !DILocation(line: 3034, column: 20, scope: !1926)
!1929 = !DILocation(line: 3034, column: 27, scope: !1926)
!1930 = !DILocation(line: 3034, column: 13, scope: !1926)
!1931 = !DILocation(line: 3034, column: 6, scope: !542)
!1932 = !DILocation(line: 3035, column: 26, scope: !1926)
!1933 = !DILocation(line: 3036, column: 7, scope: !1926)
!1934 = !DILocation(line: 3036, column: 12, scope: !1926)
!1935 = !DILocation(line: 3036, column: 19, scope: !1926)
!1936 = !DILocation(line: 3036, column: 41, scope: !1926)
!1937 = !DILocation(line: 3036, column: 39, scope: !1926)
!1938 = !DILocation(line: 3035, column: 3, scope: !1926)
!1939 = !DILocation(line: 3037, column: 11, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1926, file: !1, line: 3037, column: 11)
!1941 = !DILocation(line: 3037, column: 21, scope: !1940)
!1942 = !DILocation(line: 3037, column: 26, scope: !1940)
!1943 = !DILocation(line: 3037, column: 33, scope: !1940)
!1944 = !DILocation(line: 3037, column: 18, scope: !1940)
!1945 = !DILocation(line: 3037, column: 11, scope: !1926)
!1946 = !DILocation(line: 3038, column: 23, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1940, file: !1, line: 3037, column: 54)
!1948 = !DILocation(line: 3038, column: 26, scope: !1947)
!1949 = !DILocation(line: 3038, column: 31, scope: !1947)
!1950 = !DILocation(line: 3038, column: 38, scope: !1947)
!1951 = !DILocation(line: 3038, column: 3, scope: !1947)
!1952 = !DILocation(line: 3040, column: 2, scope: !1947)
!1953 = !DILocation(line: 3041, column: 2, scope: !542)
!1954 = !DILocation(line: 3041, column: 7, scope: !542)
!1955 = !DILocation(line: 3041, column: 18, scope: !542)
!1956 = !DILocation(line: 3042, column: 33, scope: !542)
!1957 = !DILocation(line: 3042, column: 36, scope: !542)
!1958 = !DILocation(line: 3042, column: 43, scope: !542)
!1959 = !DILocation(line: 3042, column: 6, scope: !542)
!1960 = !DILocation(line: 3042, column: 4, scope: !542)
!1961 = !DILocation(line: 3043, column: 6, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3043, column: 6)
!1963 = !DILocation(line: 3043, column: 8, scope: !1962)
!1964 = !DILocation(line: 3043, column: 6, scope: !542)
!1965 = !DILocation(line: 3044, column: 10, scope: !1962)
!1966 = !DILocation(line: 3044, column: 3, scope: !1962)
!1967 = !DILocation(line: 3045, column: 6, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !542, file: !1, line: 3045, column: 6)
!1969 = !DILocation(line: 3045, column: 6, scope: !542)
!1970 = !DILocalVariable(name: "ret2", scope: !1971, file: !1, line: 3046, type: !23)
!1971 = distinct !DILexicalBlock(scope: !1968, file: !1, line: 3045, column: 12)
!1972 = !DILocation(line: 3046, column: 7, scope: !1971)
!1973 = !DILocation(line: 3046, column: 36, scope: !1971)
!1974 = !DILocation(line: 3046, column: 39, scope: !1971)
!1975 = !DILocation(line: 3046, column: 46, scope: !1971)
!1976 = !DILocation(line: 3046, column: 14, scope: !1971)
!1977 = !DILocation(line: 3047, column: 7, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1971, file: !1, line: 3047, column: 7)
!1979 = !DILocation(line: 3047, column: 14, scope: !1978)
!1980 = !DILocation(line: 3047, column: 12, scope: !1978)
!1981 = !DILocation(line: 3047, column: 7, scope: !1971)
!1982 = !DILocation(line: 3048, column: 10, scope: !1978)
!1983 = !DILocation(line: 3048, column: 8, scope: !1978)
!1984 = !DILocation(line: 3048, column: 4, scope: !1978)
!1985 = !DILocation(line: 3049, column: 2, scope: !1971)
!1986 = !DILocation(line: 3050, column: 10, scope: !542)
!1987 = !DILocation(line: 3050, column: 2, scope: !542)
!1988 = !DILocation(line: 3051, column: 1, scope: !542)
!1989 = !DILocalVariable(name: "a", arg: 1, scope: !560, file: !1, line: 3058, type: !4)
!1990 = !DILocation(line: 3058, column: 70, scope: !560)
!1991 = !DILocalVariable(name: "zip", scope: !560, file: !1, line: 3060, type: !292)
!1992 = !DILocation(line: 3060, column: 14, scope: !560)
!1993 = !DILocation(line: 3061, column: 23, scope: !560)
!1994 = !DILocation(line: 3061, column: 26, scope: !560)
!1995 = !DILocation(line: 3061, column: 34, scope: !560)
!1996 = !DILocation(line: 3061, column: 8, scope: !560)
!1997 = !DILocation(line: 3061, column: 6, scope: !560)
!1998 = !DILocation(line: 3063, column: 2, scope: !560)
!1999 = !DILocation(line: 3063, column: 7, scope: !560)
!2000 = !DILocation(line: 3063, column: 18, scope: !560)
!2001 = !DILocation(line: 3064, column: 2, scope: !560)
!2002 = !DILocalVariable(name: "a", arg: 1, scope: !561, file: !1, line: 2361, type: !4)
!2003 = !DILocation(line: 2361, column: 77, scope: !561)
!2004 = !DILocation(line: 2363, column: 8, scope: !561)
!2005 = !DILocation(line: 2364, column: 2, scope: !561)
!2006 = !DILocalVariable(name: "crc", arg: 1, scope: !480, file: !1, line: 342, type: !47)
!2007 = !DILocation(line: 342, column: 26, scope: !480)
!2008 = !DILocalVariable(name: "buff", arg: 2, scope: !480, file: !1, line: 342, type: !43)
!2009 = !DILocation(line: 342, column: 43, scope: !480)
!2010 = !DILocalVariable(name: "len", arg: 3, scope: !480, file: !1, line: 342, type: !45)
!2011 = !DILocation(line: 342, column: 56, scope: !480)
!2012 = !DILocation(line: 344, column: 8, scope: !480)
!2013 = !DILocation(line: 345, column: 8, scope: !480)
!2014 = !DILocation(line: 346, column: 8, scope: !480)
!2015 = !DILocation(line: 347, column: 2, scope: !480)
!2016 = !DILocalVariable(name: "a", arg: 1, scope: !482, file: !1, line: 755, type: !4)
!2017 = !DILocation(line: 755, column: 49, scope: !482)
!2018 = !DILocalVariable(name: "entry", arg: 2, scope: !482, file: !1, line: 755, type: !30)
!2019 = !DILocation(line: 755, column: 74, scope: !482)
!2020 = !DILocalVariable(name: "zip", arg: 3, scope: !482, file: !1, line: 756, type: !292)
!2021 = !DILocation(line: 756, column: 17, scope: !482)
!2022 = !DILocalVariable(name: "p", scope: !482, file: !1, line: 758, type: !80)
!2023 = !DILocation(line: 758, column: 14, scope: !482)
!2024 = !DILocalVariable(name: "h", scope: !482, file: !1, line: 759, type: !43)
!2025 = !DILocation(line: 759, column: 14, scope: !482)
!2026 = !DILocalVariable(name: "wp", scope: !482, file: !1, line: 760, type: !2027)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64, align: 64)
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2029)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !46, line: 90, baseType: !23)
!2030 = !DILocation(line: 760, column: 17, scope: !482)
!2031 = !DILocalVariable(name: "cp", scope: !482, file: !1, line: 761, type: !80)
!2032 = !DILocation(line: 761, column: 14, scope: !482)
!2033 = !DILocalVariable(name: "len", scope: !482, file: !1, line: 762, type: !45)
!2034 = !DILocation(line: 762, column: 9, scope: !482)
!2035 = !DILocalVariable(name: "filename_length", scope: !482, file: !1, line: 762, type: !45)
!2036 = !DILocation(line: 762, column: 14, scope: !482)
!2037 = !DILocalVariable(name: "extra_length", scope: !482, file: !1, line: 762, type: !45)
!2038 = !DILocation(line: 762, column: 31, scope: !482)
!2039 = !DILocalVariable(name: "sconv", scope: !482, file: !1, line: 763, type: !102)
!2040 = !DILocation(line: 763, column: 30, scope: !482)
!2041 = !DILocalVariable(name: "zip_entry", scope: !482, file: !1, line: 764, type: !301)
!2042 = !DILocation(line: 764, column: 20, scope: !482)
!2043 = !DILocation(line: 764, column: 32, scope: !482)
!2044 = !DILocation(line: 764, column: 37, scope: !482)
!2045 = !DILocalVariable(name: "zip_entry_central_dir", scope: !482, file: !1, line: 765, type: !302)
!2046 = !DILocation(line: 765, column: 19, scope: !482)
!2047 = !DILocalVariable(name: "ret", scope: !482, file: !1, line: 766, type: !23)
!2048 = !DILocation(line: 766, column: 6, scope: !482)
!2049 = !DILocalVariable(name: "version", scope: !482, file: !1, line: 767, type: !82)
!2050 = !DILocation(line: 767, column: 7, scope: !482)
!2051 = !DILocation(line: 770, column: 27, scope: !482)
!2052 = !DILocation(line: 770, column: 26, scope: !482)
!2053 = !DILocation(line: 772, column: 2, scope: !482)
!2054 = !DILocation(line: 772, column: 7, scope: !482)
!2055 = !DILocation(line: 772, column: 23, scope: !482)
!2056 = !DILocation(line: 773, column: 2, scope: !482)
!2057 = !DILocation(line: 773, column: 7, scope: !482)
!2058 = !DILocation(line: 773, column: 20, scope: !482)
!2059 = !DILocation(line: 774, column: 2, scope: !482)
!2060 = !DILocation(line: 774, column: 7, scope: !482)
!2061 = !DILocation(line: 774, column: 37, scope: !482)
!2062 = !DILocation(line: 775, column: 2, scope: !482)
!2063 = !DILocation(line: 775, column: 7, scope: !482)
!2064 = !DILocation(line: 775, column: 35, scope: !482)
!2065 = !DILocation(line: 776, column: 21, scope: !482)
!2066 = !DILocation(line: 776, column: 26, scope: !482)
!2067 = !DILocation(line: 776, column: 2, scope: !482)
!2068 = !DILocation(line: 776, column: 7, scope: !482)
!2069 = !DILocation(line: 776, column: 19, scope: !482)
!2070 = !DILocation(line: 779, column: 6, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !482, file: !1, line: 779, column: 6)
!2072 = !DILocation(line: 779, column: 11, scope: !2071)
!2073 = !DILocation(line: 779, column: 17, scope: !2071)
!2074 = !DILocation(line: 779, column: 25, scope: !2071)
!2075 = !DILocation(line: 779, column: 29, scope: !2076)
!2076 = !DILexicalBlockFile(scope: !2071, file: !1, discriminator: 1)
!2077 = !DILocation(line: 779, column: 34, scope: !2076)
!2078 = !DILocation(line: 779, column: 6, scope: !2076)
!2079 = !DILocation(line: 781, column: 52, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !2071, file: !1, line: 779, column: 59)
!2081 = !DILocation(line: 781, column: 55, scope: !2080)
!2082 = !DILocation(line: 781, column: 7, scope: !2080)
!2083 = !DILocation(line: 780, column: 3, scope: !2080)
!2084 = !DILocation(line: 780, column: 8, scope: !2080)
!2085 = !DILocation(line: 780, column: 22, scope: !2080)
!2086 = !DILocation(line: 782, column: 3, scope: !2080)
!2087 = !DILocation(line: 782, column: 8, scope: !2080)
!2088 = !DILocation(line: 782, column: 32, scope: !2080)
!2089 = !DILocation(line: 783, column: 2, scope: !2080)
!2090 = !DILocation(line: 785, column: 32, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !482, file: !1, line: 785, column: 6)
!2092 = !DILocation(line: 785, column: 11, scope: !2091)
!2093 = !DILocation(line: 785, column: 9, scope: !2091)
!2094 = !DILocation(line: 785, column: 46, scope: !2091)
!2095 = !DILocation(line: 785, column: 6, scope: !482)
!2096 = !DILocation(line: 786, column: 22, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2091, file: !1, line: 785, column: 55)
!2098 = !DILocation(line: 786, column: 25, scope: !2097)
!2099 = !DILocation(line: 786, column: 3, scope: !2097)
!2100 = !DILocation(line: 788, column: 3, scope: !2097)
!2101 = !DILocation(line: 791, column: 13, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !482, file: !1, line: 791, column: 6)
!2103 = !DILocation(line: 791, column: 6, scope: !2102)
!2104 = !DILocation(line: 791, column: 33, scope: !2102)
!2105 = !DILocation(line: 791, column: 6, scope: !482)
!2106 = !DILocation(line: 792, column: 22, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !2102, file: !1, line: 791, column: 39)
!2108 = !DILocation(line: 792, column: 25, scope: !2107)
!2109 = !DILocation(line: 792, column: 3, scope: !2107)
!2110 = !DILocation(line: 793, column: 3, scope: !2107)
!2111 = !DILocation(line: 795, column: 12, scope: !482)
!2112 = !DILocation(line: 795, column: 10, scope: !482)
!2113 = !DILocation(line: 796, column: 22, scope: !482)
!2114 = !DILocation(line: 796, column: 2, scope: !482)
!2115 = !DILocation(line: 796, column: 13, scope: !482)
!2116 = !DILocation(line: 796, column: 20, scope: !482)
!2117 = !DILocation(line: 797, column: 41, scope: !482)
!2118 = !DILocation(line: 797, column: 43, scope: !482)
!2119 = !DILocation(line: 797, column: 25, scope: !482)
!2120 = !DILocation(line: 797, column: 2, scope: !482)
!2121 = !DILocation(line: 797, column: 13, scope: !482)
!2122 = !DILocation(line: 797, column: 23, scope: !482)
!2123 = !DILocation(line: 798, column: 6, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !482, file: !1, line: 798, column: 6)
!2125 = !DILocation(line: 798, column: 17, scope: !2124)
!2126 = !DILocation(line: 798, column: 27, scope: !2124)
!2127 = !DILocation(line: 798, column: 6, scope: !482)
!2128 = !DILocation(line: 799, column: 3, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !2124, file: !1, line: 798, column: 69)
!2130 = !DILocation(line: 799, column: 8, scope: !2129)
!2131 = !DILocation(line: 799, column: 30, scope: !2129)
!2132 = !DILocation(line: 800, column: 39, scope: !2129)
!2133 = !DILocation(line: 800, column: 3, scope: !2129)
!2134 = !DILocation(line: 801, column: 7, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2129, file: !1, line: 801, column: 7)
!2136 = !DILocation(line: 801, column: 18, scope: !2135)
!2137 = !DILocation(line: 801, column: 28, scope: !2135)
!2138 = !DILocation(line: 801, column: 62, scope: !2135)
!2139 = !DILocation(line: 802, column: 4, scope: !2135)
!2140 = !DILocation(line: 802, column: 15, scope: !2135)
!2141 = !DILocation(line: 802, column: 25, scope: !2135)
!2142 = !DILocation(line: 802, column: 41, scope: !2135)
!2143 = !DILocation(line: 803, column: 4, scope: !2135)
!2144 = !DILocation(line: 803, column: 15, scope: !2135)
!2145 = !DILocation(line: 803, column: 25, scope: !2135)
!2146 = !DILocation(line: 801, column: 7, scope: !2147)
!2147 = !DILexicalBlockFile(scope: !2129, file: !1, discriminator: 1)
!2148 = !DILocation(line: 804, column: 44, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2135, file: !1, line: 803, column: 49)
!2150 = !DILocation(line: 804, column: 4, scope: !2149)
!2151 = !DILocation(line: 805, column: 4, scope: !2149)
!2152 = !DILocation(line: 807, column: 2, scope: !2129)
!2153 = !DILocation(line: 808, column: 26, scope: !482)
!2154 = !DILocation(line: 808, column: 37, scope: !482)
!2155 = !DILocation(line: 808, column: 47, scope: !482)
!2156 = !DILocation(line: 808, column: 25, scope: !482)
!2157 = !DILocation(line: 808, column: 2, scope: !482)
!2158 = !DILocation(line: 808, column: 7, scope: !482)
!2159 = !DILocation(line: 808, column: 23, scope: !482)
!2160 = !DILocation(line: 809, column: 49, scope: !482)
!2161 = !DILocation(line: 809, column: 51, scope: !482)
!2162 = !DILocation(line: 809, column: 33, scope: !482)
!2163 = !DILocation(line: 809, column: 27, scope: !482)
!2164 = !DILocation(line: 809, column: 2, scope: !482)
!2165 = !DILocation(line: 809, column: 13, scope: !482)
!2166 = !DILocation(line: 809, column: 25, scope: !482)
!2167 = !DILocation(line: 810, column: 30, scope: !482)
!2168 = !DILocation(line: 810, column: 32, scope: !482)
!2169 = !DILocation(line: 810, column: 21, scope: !482)
!2170 = !DILocation(line: 810, column: 2, scope: !482)
!2171 = !DILocation(line: 810, column: 13, scope: !482)
!2172 = !DILocation(line: 810, column: 19, scope: !482)
!2173 = !DILocation(line: 811, column: 37, scope: !482)
!2174 = !DILocation(line: 811, column: 39, scope: !482)
!2175 = !DILocation(line: 811, column: 21, scope: !482)
!2176 = !DILocation(line: 811, column: 2, scope: !482)
!2177 = !DILocation(line: 811, column: 13, scope: !482)
!2178 = !DILocation(line: 811, column: 19, scope: !482)
!2179 = !DILocation(line: 812, column: 6, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !482, file: !1, line: 812, column: 6)
!2181 = !DILocation(line: 812, column: 17, scope: !2180)
!2182 = !DILocation(line: 812, column: 27, scope: !2180)
!2183 = !DILocation(line: 812, column: 6, scope: !482)
!2184 = !DILocation(line: 813, column: 23, scope: !2180)
!2185 = !DILocation(line: 813, column: 3, scope: !2180)
!2186 = !DILocation(line: 813, column: 14, scope: !2180)
!2187 = !DILocation(line: 813, column: 21, scope: !2180)
!2188 = !DILocation(line: 815, column: 23, scope: !2180)
!2189 = !DILocation(line: 815, column: 3, scope: !2180)
!2190 = !DILocation(line: 815, column: 14, scope: !2180)
!2191 = !DILocation(line: 815, column: 21, scope: !2180)
!2192 = !DILocation(line: 816, column: 47, scope: !482)
!2193 = !DILocation(line: 816, column: 49, scope: !482)
!2194 = !DILocation(line: 816, column: 31, scope: !482)
!2195 = !DILocation(line: 816, column: 2, scope: !482)
!2196 = !DILocation(line: 816, column: 13, scope: !482)
!2197 = !DILocation(line: 816, column: 29, scope: !482)
!2198 = !DILocation(line: 817, column: 49, scope: !482)
!2199 = !DILocation(line: 817, column: 51, scope: !482)
!2200 = !DILocation(line: 817, column: 33, scope: !482)
!2201 = !DILocation(line: 817, column: 2, scope: !482)
!2202 = !DILocation(line: 817, column: 13, scope: !482)
!2203 = !DILocation(line: 817, column: 31, scope: !482)
!2204 = !DILocation(line: 818, column: 36, scope: !482)
!2205 = !DILocation(line: 818, column: 38, scope: !482)
!2206 = !DILocation(line: 818, column: 20, scope: !482)
!2207 = !DILocation(line: 818, column: 18, scope: !482)
!2208 = !DILocation(line: 819, column: 33, scope: !482)
!2209 = !DILocation(line: 819, column: 35, scope: !482)
!2210 = !DILocation(line: 819, column: 17, scope: !482)
!2211 = !DILocation(line: 819, column: 15, scope: !482)
!2212 = !DILocation(line: 821, column: 25, scope: !482)
!2213 = !DILocation(line: 821, column: 2, scope: !482)
!2214 = !DILocation(line: 824, column: 32, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !482, file: !1, line: 824, column: 6)
!2216 = !DILocation(line: 824, column: 35, scope: !2215)
!2217 = !DILocation(line: 824, column: 11, scope: !2215)
!2218 = !DILocation(line: 824, column: 9, scope: !2215)
!2219 = !DILocation(line: 824, column: 59, scope: !2215)
!2220 = !DILocation(line: 824, column: 6, scope: !482)
!2221 = !DILocation(line: 825, column: 22, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !2215, file: !1, line: 824, column: 68)
!2223 = !DILocation(line: 825, column: 25, scope: !2222)
!2224 = !DILocation(line: 825, column: 3, scope: !2222)
!2225 = !DILocation(line: 827, column: 3, scope: !2222)
!2226 = !DILocation(line: 829, column: 6, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !482, file: !1, line: 829, column: 6)
!2228 = !DILocation(line: 829, column: 17, scope: !2227)
!2229 = !DILocation(line: 829, column: 27, scope: !2227)
!2230 = !DILocation(line: 829, column: 6, scope: !482)
!2231 = !DILocation(line: 831, column: 7, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2233, file: !1, line: 831, column: 7)
!2233 = distinct !DILexicalBlock(scope: !2227, file: !1, line: 829, column: 44)
!2234 = !DILocation(line: 831, column: 12, scope: !2232)
!2235 = !DILocation(line: 831, column: 23, scope: !2232)
!2236 = !DILocation(line: 831, column: 7, scope: !2233)
!2237 = !DILocation(line: 834, column: 6, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2232, file: !1, line: 831, column: 32)
!2239 = !DILocation(line: 834, column: 9, scope: !2238)
!2240 = !DILocation(line: 833, column: 8, scope: !2238)
!2241 = !DILocation(line: 832, column: 4, scope: !2238)
!2242 = !DILocation(line: 832, column: 9, scope: !2238)
!2243 = !DILocation(line: 832, column: 20, scope: !2238)
!2244 = !DILocation(line: 835, column: 8, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2238, file: !1, line: 835, column: 8)
!2246 = !DILocation(line: 835, column: 13, scope: !2245)
!2247 = !DILocation(line: 835, column: 24, scope: !2245)
!2248 = !DILocation(line: 835, column: 8, scope: !2238)
!2249 = !DILocation(line: 836, column: 5, scope: !2245)
!2250 = !DILocation(line: 837, column: 3, scope: !2238)
!2251 = !DILocation(line: 838, column: 11, scope: !2233)
!2252 = !DILocation(line: 838, column: 16, scope: !2233)
!2253 = !DILocation(line: 838, column: 9, scope: !2233)
!2254 = !DILocation(line: 839, column: 2, scope: !2233)
!2255 = !DILocation(line: 839, column: 13, scope: !2256)
!2256 = !DILexicalBlockFile(scope: !2257, file: !1, discriminator: 1)
!2257 = distinct !DILexicalBlock(scope: !2227, file: !1, line: 839, column: 13)
!2258 = !DILocation(line: 839, column: 18, scope: !2256)
!2259 = !DILocation(line: 839, column: 24, scope: !2256)
!2260 = !DILocation(line: 840, column: 11, scope: !2257)
!2261 = !DILocation(line: 840, column: 16, scope: !2257)
!2262 = !DILocation(line: 840, column: 9, scope: !2257)
!2263 = !DILocation(line: 840, column: 3, scope: !2257)
!2264 = !DILocation(line: 842, column: 11, scope: !2257)
!2265 = !DILocation(line: 842, column: 16, scope: !2257)
!2266 = !DILocation(line: 842, column: 9, scope: !2257)
!2267 = !DILocation(line: 844, column: 36, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !482, file: !1, line: 844, column: 6)
!2269 = !DILocation(line: 845, column: 6, scope: !2268)
!2270 = !DILocation(line: 845, column: 9, scope: !2268)
!2271 = !DILocation(line: 845, column: 26, scope: !2268)
!2272 = !DILocation(line: 844, column: 6, scope: !2268)
!2273 = !DILocation(line: 845, column: 33, scope: !2268)
!2274 = !DILocation(line: 844, column: 6, scope: !482)
!2275 = !DILocation(line: 846, column: 7, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2277, file: !1, line: 846, column: 7)
!2277 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 845, column: 39)
!2278 = !DILocation(line: 846, column: 13, scope: !2276)
!2279 = !DILocation(line: 846, column: 7, scope: !2277)
!2280 = !DILocation(line: 847, column: 23, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2276, file: !1, line: 846, column: 24)
!2282 = !DILocation(line: 847, column: 26, scope: !2281)
!2283 = !DILocation(line: 847, column: 4, scope: !2281)
!2284 = !DILocation(line: 849, column: 4, scope: !2281)
!2285 = !DILocation(line: 851, column: 22, scope: !2277)
!2286 = !DILocation(line: 851, column: 25, scope: !2277)
!2287 = !DILocation(line: 855, column: 46, scope: !2277)
!2288 = !DILocation(line: 855, column: 7, scope: !2277)
!2289 = !DILocation(line: 851, column: 3, scope: !2277)
!2290 = !DILocation(line: 856, column: 7, scope: !2277)
!2291 = !DILocation(line: 857, column: 2, scope: !2277)
!2292 = !DILocation(line: 858, column: 25, scope: !482)
!2293 = !DILocation(line: 858, column: 28, scope: !482)
!2294 = !DILocation(line: 858, column: 2, scope: !482)
!2295 = !DILocation(line: 861, column: 32, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !482, file: !1, line: 861, column: 6)
!2297 = !DILocation(line: 861, column: 35, scope: !2296)
!2298 = !DILocation(line: 861, column: 11, scope: !2296)
!2299 = !DILocation(line: 861, column: 9, scope: !2296)
!2300 = !DILocation(line: 861, column: 56, scope: !2296)
!2301 = !DILocation(line: 861, column: 6, scope: !482)
!2302 = !DILocation(line: 862, column: 22, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2296, file: !1, line: 861, column: 65)
!2304 = !DILocation(line: 862, column: 25, scope: !2303)
!2305 = !DILocation(line: 862, column: 3, scope: !2303)
!2306 = !DILocation(line: 864, column: 3, scope: !2303)
!2307 = !DILocation(line: 867, column: 34, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !482, file: !1, line: 867, column: 6)
!2309 = !DILocation(line: 867, column: 37, scope: !2308)
!2310 = !DILocation(line: 867, column: 40, scope: !2308)
!2311 = !DILocation(line: 867, column: 54, scope: !2308)
!2312 = !DILocation(line: 867, column: 20, scope: !2308)
!2313 = !DILocation(line: 867, column: 17, scope: !2308)
!2314 = !DILocation(line: 867, column: 6, scope: !482)
!2315 = !DILocation(line: 868, column: 3, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2308, file: !1, line: 867, column: 66)
!2317 = !DILocation(line: 870, column: 25, scope: !482)
!2318 = !DILocation(line: 870, column: 28, scope: !482)
!2319 = !DILocation(line: 870, column: 2, scope: !482)
!2320 = !DILocation(line: 874, column: 7, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !482, file: !1, line: 874, column: 6)
!2322 = !DILocation(line: 874, column: 18, scope: !2321)
!2323 = !DILocation(line: 874, column: 23, scope: !2321)
!2324 = !DILocation(line: 874, column: 34, scope: !2321)
!2325 = !DILocation(line: 874, column: 6, scope: !482)
!2326 = !DILocation(line: 875, column: 3, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2321, file: !1, line: 874, column: 47)
!2328 = !DILocation(line: 875, column: 14, scope: !2327)
!2329 = !DILocation(line: 875, column: 19, scope: !2327)
!2330 = !DILocation(line: 876, column: 3, scope: !2327)
!2331 = !DILocation(line: 876, column: 14, scope: !2327)
!2332 = !DILocation(line: 876, column: 19, scope: !2327)
!2333 = !DILocation(line: 877, column: 2, scope: !2327)
!2334 = !DILocation(line: 880, column: 6, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !482, file: !1, line: 880, column: 6)
!2336 = !DILocation(line: 880, column: 17, scope: !2335)
!2337 = !DILocation(line: 880, column: 22, scope: !2335)
!2338 = !DILocation(line: 880, column: 6, scope: !482)
!2339 = !DILocation(line: 881, column: 3, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2335, file: !1, line: 880, column: 28)
!2341 = !DILocation(line: 881, column: 14, scope: !2340)
!2342 = !DILocation(line: 881, column: 19, scope: !2340)
!2343 = !DILocation(line: 882, column: 2, scope: !2340)
!2344 = !DILocation(line: 887, column: 7, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !482, file: !1, line: 887, column: 6)
!2346 = !DILocation(line: 887, column: 18, scope: !2345)
!2347 = !DILocation(line: 887, column: 23, scope: !2345)
!2348 = !DILocation(line: 887, column: 34, scope: !2345)
!2349 = !DILocation(line: 887, column: 6, scope: !482)
!2350 = !DILocalVariable(name: "has_slash", scope: !2351, file: !1, line: 888, type: !23)
!2351 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 887, column: 47)
!2352 = !DILocation(line: 888, column: 7, scope: !2351)
!2353 = !DILocation(line: 890, column: 33, scope: !2351)
!2354 = !DILocation(line: 890, column: 8, scope: !2351)
!2355 = !DILocation(line: 890, column: 6, scope: !2351)
!2356 = !DILocation(line: 891, column: 7, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2351, file: !1, line: 891, column: 7)
!2358 = !DILocation(line: 891, column: 10, scope: !2357)
!2359 = !DILocation(line: 891, column: 7, scope: !2351)
!2360 = !DILocation(line: 892, column: 17, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2357, file: !1, line: 891, column: 19)
!2362 = !DILocation(line: 892, column: 10, scope: !2361)
!2363 = !DILocation(line: 892, column: 8, scope: !2361)
!2364 = !DILocation(line: 893, column: 16, scope: !2361)
!2365 = !DILocation(line: 893, column: 20, scope: !2361)
!2366 = !DILocation(line: 893, column: 24, scope: !2361)
!2367 = !DILocation(line: 893, column: 30, scope: !2368)
!2368 = !DILexicalBlockFile(scope: !2361, file: !1, discriminator: 1)
!2369 = !DILocation(line: 893, column: 34, scope: !2368)
!2370 = !DILocation(line: 893, column: 27, scope: !2368)
!2371 = !DILocation(line: 893, column: 39, scope: !2368)
!2372 = !DILocation(line: 893, column: 24, scope: !2373)
!2373 = !DILexicalBlockFile(scope: !2361, file: !1, discriminator: 2)
!2374 = !DILocation(line: 893, column: 14, scope: !2373)
!2375 = !DILocation(line: 894, column: 3, scope: !2361)
!2376 = !DILocation(line: 895, column: 32, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2357, file: !1, line: 894, column: 10)
!2378 = !DILocation(line: 895, column: 9, scope: !2377)
!2379 = !DILocation(line: 895, column: 7, scope: !2377)
!2380 = !DILocation(line: 896, column: 11, scope: !2377)
!2381 = !DILocation(line: 896, column: 14, scope: !2377)
!2382 = !DILocation(line: 896, column: 10, scope: !2377)
!2383 = !DILocation(line: 896, column: 30, scope: !2384)
!2384 = !DILexicalBlockFile(scope: !2377, file: !1, discriminator: 1)
!2385 = !DILocation(line: 896, column: 23, scope: !2384)
!2386 = !DILocation(line: 896, column: 10, scope: !2384)
!2387 = !DILocation(line: 896, column: 10, scope: !2388)
!2388 = !DILexicalBlockFile(scope: !2377, file: !1, discriminator: 2)
!2389 = !DILocation(line: 896, column: 10, scope: !2390)
!2390 = !DILexicalBlockFile(scope: !2377, file: !1, discriminator: 3)
!2391 = !DILocation(line: 896, column: 8, scope: !2390)
!2392 = !DILocation(line: 897, column: 16, scope: !2377)
!2393 = !DILocation(line: 897, column: 20, scope: !2377)
!2394 = !DILocation(line: 897, column: 24, scope: !2377)
!2395 = !DILocation(line: 897, column: 30, scope: !2384)
!2396 = !DILocation(line: 897, column: 34, scope: !2384)
!2397 = !DILocation(line: 897, column: 27, scope: !2384)
!2398 = !DILocation(line: 897, column: 39, scope: !2384)
!2399 = !DILocation(line: 897, column: 24, scope: !2388)
!2400 = !DILocation(line: 897, column: 14, scope: !2388)
!2401 = !DILocation(line: 900, column: 7, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2351, file: !1, line: 900, column: 7)
!2403 = !DILocation(line: 900, column: 7, scope: !2351)
!2404 = !DILocation(line: 901, column: 4, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 900, column: 18)
!2406 = !DILocation(line: 901, column: 15, scope: !2405)
!2407 = !DILocation(line: 901, column: 20, scope: !2405)
!2408 = !DILocation(line: 902, column: 4, scope: !2405)
!2409 = !DILocation(line: 902, column: 15, scope: !2405)
!2410 = !DILocation(line: 902, column: 20, scope: !2405)
!2411 = !DILocation(line: 903, column: 4, scope: !2405)
!2412 = !DILocation(line: 903, column: 15, scope: !2405)
!2413 = !DILocation(line: 903, column: 20, scope: !2405)
!2414 = !DILocation(line: 904, column: 3, scope: !2405)
!2415 = !DILocation(line: 904, column: 15, scope: !2416)
!2416 = !DILexicalBlockFile(scope: !2417, file: !1, discriminator: 1)
!2417 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 904, column: 14)
!2418 = !DILocation(line: 904, column: 26, scope: !2416)
!2419 = !DILocation(line: 904, column: 31, scope: !2416)
!2420 = !DILocation(line: 904, column: 42, scope: !2416)
!2421 = !DILocation(line: 904, column: 14, scope: !2416)
!2422 = !DILocation(line: 905, column: 4, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2417, file: !1, line: 904, column: 48)
!2424 = !DILocation(line: 905, column: 15, scope: !2423)
!2425 = !DILocation(line: 905, column: 20, scope: !2423)
!2426 = !DILocation(line: 906, column: 3, scope: !2423)
!2427 = !DILocation(line: 907, column: 2, scope: !2351)
!2428 = !DILocation(line: 910, column: 7, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !482, file: !1, line: 910, column: 6)
!2430 = !DILocation(line: 910, column: 18, scope: !2429)
!2431 = !DILocation(line: 910, column: 23, scope: !2429)
!2432 = !DILocation(line: 910, column: 34, scope: !2429)
!2433 = !DILocation(line: 910, column: 6, scope: !482)
!2434 = !DILocation(line: 911, column: 33, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2429, file: !1, line: 910, column: 47)
!2436 = !DILocation(line: 911, column: 8, scope: !2435)
!2437 = !DILocation(line: 911, column: 6, scope: !2435)
!2438 = !DILocation(line: 912, column: 7, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2435, file: !1, line: 912, column: 7)
!2440 = !DILocation(line: 912, column: 10, scope: !2439)
!2441 = !DILocation(line: 912, column: 7, scope: !2435)
!2442 = !DILocation(line: 913, column: 17, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2439, file: !1, line: 912, column: 19)
!2444 = !DILocation(line: 913, column: 10, scope: !2443)
!2445 = !DILocation(line: 913, column: 8, scope: !2443)
!2446 = !DILocation(line: 914, column: 8, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !1, line: 914, column: 8)
!2448 = !DILocation(line: 914, column: 12, scope: !2447)
!2449 = !DILocation(line: 914, column: 16, scope: !2447)
!2450 = !DILocation(line: 914, column: 22, scope: !2451)
!2451 = !DILexicalBlockFile(scope: !2447, file: !1, discriminator: 1)
!2452 = !DILocation(line: 914, column: 26, scope: !2451)
!2453 = !DILocation(line: 914, column: 19, scope: !2451)
!2454 = !DILocation(line: 914, column: 31, scope: !2451)
!2455 = !DILocation(line: 914, column: 8, scope: !2451)
!2456 = !DILocalVariable(name: "s", scope: !2457, file: !1, line: 915, type: !2458)
!2457 = distinct !DILexicalBlock(scope: !2447, file: !1, line: 914, column: 40)
!2458 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_wstring", file: !92, line: 64, size: 192, align: 64, elements: !2459)
!2459 = !{!2460, !2462, !2463}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2458, file: !92, line: 65, baseType: !2461, size: 64, align: 64)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64, align: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2458, file: !92, line: 66, baseType: !45, size: 64, align: 64, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !2458, file: !92, line: 67, baseType: !45, size: 64, align: 64, offset: 128)
!2464 = !DILocation(line: 915, column: 28, scope: !2457)
!2465 = !DILocation(line: 916, column: 5, scope: !2457)
!2466 = !DILocation(line: 916, column: 5, scope: !2467)
!2467 = !DILexicalBlockFile(scope: !2468, file: !1, discriminator: 1)
!2468 = distinct !DILexicalBlock(scope: !2457, file: !1, line: 916, column: 5)
!2469 = !DILocation(line: 917, column: 25, scope: !2457)
!2470 = !DILocation(line: 917, column: 5, scope: !2457)
!2471 = !DILocation(line: 918, column: 5, scope: !2457)
!2472 = !DILocation(line: 919, column: 35, scope: !2457)
!2473 = !DILocation(line: 919, column: 44, scope: !2457)
!2474 = !DILocation(line: 919, column: 5, scope: !2457)
!2475 = !DILocation(line: 920, column: 5, scope: !2457)
!2476 = !DILocation(line: 921, column: 4, scope: !2457)
!2477 = !DILocation(line: 922, column: 3, scope: !2443)
!2478 = !DILocation(line: 923, column: 32, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2439, file: !1, line: 922, column: 10)
!2480 = !DILocation(line: 923, column: 9, scope: !2479)
!2481 = !DILocation(line: 923, column: 7, scope: !2479)
!2482 = !DILocation(line: 924, column: 11, scope: !2479)
!2483 = !DILocation(line: 924, column: 14, scope: !2479)
!2484 = !DILocation(line: 924, column: 10, scope: !2479)
!2485 = !DILocation(line: 924, column: 30, scope: !2486)
!2486 = !DILexicalBlockFile(scope: !2479, file: !1, discriminator: 1)
!2487 = !DILocation(line: 924, column: 23, scope: !2486)
!2488 = !DILocation(line: 924, column: 10, scope: !2486)
!2489 = !DILocation(line: 924, column: 10, scope: !2490)
!2490 = !DILexicalBlockFile(scope: !2479, file: !1, discriminator: 2)
!2491 = !DILocation(line: 924, column: 10, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2479, file: !1, discriminator: 3)
!2493 = !DILocation(line: 924, column: 8, scope: !2492)
!2494 = !DILocation(line: 925, column: 8, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2479, file: !1, line: 925, column: 8)
!2496 = !DILocation(line: 925, column: 12, scope: !2495)
!2497 = !DILocation(line: 925, column: 16, scope: !2495)
!2498 = !DILocation(line: 925, column: 22, scope: !2499)
!2499 = !DILexicalBlockFile(scope: !2495, file: !1, discriminator: 1)
!2500 = !DILocation(line: 925, column: 26, scope: !2499)
!2501 = !DILocation(line: 925, column: 19, scope: !2499)
!2502 = !DILocation(line: 925, column: 31, scope: !2499)
!2503 = !DILocation(line: 925, column: 8, scope: !2499)
!2504 = !DILocalVariable(name: "s", scope: !2505, file: !1, line: 926, type: !91)
!2505 = distinct !DILexicalBlock(scope: !2495, file: !1, line: 925, column: 39)
!2506 = !DILocation(line: 926, column: 27, scope: !2505)
!2507 = !DILocation(line: 927, column: 5, scope: !2505)
!2508 = !DILocation(line: 927, column: 5, scope: !2509)
!2509 = !DILexicalBlockFile(scope: !2510, file: !1, discriminator: 1)
!2510 = distinct !DILexicalBlock(scope: !2505, file: !1, line: 927, column: 5)
!2511 = !DILocation(line: 928, column: 24, scope: !2505)
!2512 = !DILocation(line: 928, column: 5, scope: !2505)
!2513 = !DILocation(line: 929, column: 5, scope: !2505)
!2514 = !DILocation(line: 930, column: 32, scope: !2505)
!2515 = !DILocation(line: 930, column: 41, scope: !2505)
!2516 = !DILocation(line: 930, column: 5, scope: !2505)
!2517 = !DILocation(line: 931, column: 5, scope: !2505)
!2518 = !DILocation(line: 932, column: 4, scope: !2505)
!2519 = !DILocation(line: 934, column: 2, scope: !2435)
!2520 = !DILocation(line: 936, column: 6, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !482, file: !1, line: 936, column: 6)
!2522 = !DILocation(line: 936, column: 17, scope: !2521)
!2523 = !DILocation(line: 936, column: 23, scope: !2521)
!2524 = !DILocation(line: 936, column: 6, scope: !482)
!2525 = !DILocation(line: 939, column: 3, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2521, file: !1, line: 936, column: 52)
!2527 = !DILocation(line: 939, column: 14, scope: !2526)
!2528 = !DILocation(line: 939, column: 24, scope: !2526)
!2529 = !DILocation(line: 943, column: 7, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 943, column: 7)
!2531 = !DILocation(line: 943, column: 18, scope: !2530)
!2532 = !DILocation(line: 943, column: 24, scope: !2530)
!2533 = !DILocation(line: 943, column: 7, scope: !2526)
!2534 = !DILocation(line: 944, column: 45, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2530, file: !1, line: 943, column: 30)
!2536 = !DILocation(line: 944, column: 4, scope: !2535)
!2537 = !DILocation(line: 944, column: 15, scope: !2535)
!2538 = !DILocation(line: 944, column: 21, scope: !2535)
!2539 = !DILocation(line: 945, column: 3, scope: !2535)
!2540 = !DILocation(line: 945, column: 15, scope: !2541)
!2541 = !DILexicalBlockFile(scope: !2542, file: !1, discriminator: 1)
!2542 = distinct !DILexicalBlock(scope: !2530, file: !1, line: 945, column: 14)
!2543 = !DILocation(line: 945, column: 20, scope: !2541)
!2544 = !DILocation(line: 946, column: 7, scope: !2542)
!2545 = !DILocation(line: 946, column: 10, scope: !2541)
!2546 = !DILocation(line: 946, column: 21, scope: !2541)
!2547 = !DILocation(line: 946, column: 52, scope: !2541)
!2548 = !DILocation(line: 946, column: 27, scope: !2541)
!2549 = !DILocation(line: 945, column: 14, scope: !2550)
!2550 = !DILexicalBlockFile(scope: !2530, file: !1, discriminator: 2)
!2551 = !DILocation(line: 947, column: 23, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2542, file: !1, line: 946, column: 59)
!2553 = !DILocation(line: 947, column: 26, scope: !2552)
!2554 = !DILocation(line: 947, column: 4, scope: !2552)
!2555 = !DILocation(line: 950, column: 8, scope: !2552)
!2556 = !DILocation(line: 951, column: 3, scope: !2552)
!2557 = !DILocation(line: 952, column: 7, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 952, column: 7)
!2559 = !DILocation(line: 952, column: 18, scope: !2558)
!2560 = !DILocation(line: 952, column: 34, scope: !2558)
!2561 = !DILocation(line: 952, column: 7, scope: !2526)
!2562 = !DILocation(line: 954, column: 32, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2558, file: !1, line: 952, column: 40)
!2564 = !DILocation(line: 953, column: 4, scope: !2563)
!2565 = !DILocation(line: 953, column: 15, scope: !2563)
!2566 = !DILocation(line: 954, column: 8, scope: !2563)
!2567 = !DILocation(line: 955, column: 3, scope: !2563)
!2568 = !DILocation(line: 955, column: 14, scope: !2569)
!2569 = !DILexicalBlockFile(scope: !2570, file: !1, discriminator: 1)
!2570 = distinct !DILexicalBlock(scope: !2558, file: !1, line: 955, column: 14)
!2571 = !DILocation(line: 955, column: 25, scope: !2569)
!2572 = !DILocation(line: 956, column: 32, scope: !2570)
!2573 = !DILocation(line: 956, column: 7, scope: !2570)
!2574 = !DILocation(line: 957, column: 23, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 956, column: 49)
!2576 = !DILocation(line: 957, column: 26, scope: !2575)
!2577 = !DILocation(line: 961, column: 40, scope: !2575)
!2578 = !DILocation(line: 962, column: 18, scope: !2575)
!2579 = !DILocation(line: 962, column: 29, scope: !2575)
!2580 = !DILocation(line: 957, column: 4, scope: !2575)
!2581 = !DILocation(line: 963, column: 8, scope: !2575)
!2582 = !DILocation(line: 964, column: 3, scope: !2575)
!2583 = !DILocation(line: 965, column: 7, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 965, column: 7)
!2585 = !DILocation(line: 965, column: 18, scope: !2584)
!2586 = !DILocation(line: 965, column: 36, scope: !2584)
!2587 = !DILocation(line: 965, column: 7, scope: !2526)
!2588 = !DILocation(line: 967, column: 32, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2584, file: !1, line: 965, column: 42)
!2590 = !DILocation(line: 966, column: 4, scope: !2589)
!2591 = !DILocation(line: 966, column: 15, scope: !2589)
!2592 = !DILocation(line: 967, column: 8, scope: !2589)
!2593 = !DILocation(line: 968, column: 3, scope: !2589)
!2594 = !DILocation(line: 968, column: 14, scope: !2595)
!2595 = !DILexicalBlockFile(scope: !2596, file: !1, discriminator: 1)
!2596 = distinct !DILexicalBlock(scope: !2584, file: !1, line: 968, column: 14)
!2597 = !DILocation(line: 968, column: 25, scope: !2595)
!2598 = !DILocation(line: 969, column: 32, scope: !2596)
!2599 = !DILocation(line: 969, column: 7, scope: !2596)
!2600 = !DILocation(line: 970, column: 23, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2596, file: !1, line: 969, column: 51)
!2602 = !DILocation(line: 970, column: 26, scope: !2601)
!2603 = !DILocation(line: 974, column: 40, scope: !2601)
!2604 = !DILocation(line: 975, column: 18, scope: !2601)
!2605 = !DILocation(line: 975, column: 29, scope: !2601)
!2606 = !DILocation(line: 970, column: 4, scope: !2601)
!2607 = !DILocation(line: 976, column: 8, scope: !2601)
!2608 = !DILocation(line: 977, column: 3, scope: !2601)
!2609 = !DILocation(line: 978, column: 2, scope: !2526)
!2610 = !DILocation(line: 981, column: 25, scope: !482)
!2611 = !DILocation(line: 981, column: 32, scope: !482)
!2612 = !DILocation(line: 981, column: 43, scope: !482)
!2613 = !DILocation(line: 981, column: 2, scope: !482)
!2614 = !DILocation(line: 982, column: 24, scope: !482)
!2615 = !DILocation(line: 982, column: 31, scope: !482)
!2616 = !DILocation(line: 982, column: 42, scope: !482)
!2617 = !DILocation(line: 982, column: 2, scope: !482)
!2618 = !DILocation(line: 983, column: 24, scope: !482)
!2619 = !DILocation(line: 983, column: 31, scope: !482)
!2620 = !DILocation(line: 983, column: 42, scope: !482)
!2621 = !DILocation(line: 983, column: 2, scope: !482)
!2622 = !DILocation(line: 984, column: 26, scope: !482)
!2623 = !DILocation(line: 984, column: 33, scope: !482)
!2624 = !DILocation(line: 984, column: 44, scope: !482)
!2625 = !DILocation(line: 984, column: 2, scope: !482)
!2626 = !DILocation(line: 985, column: 26, scope: !482)
!2627 = !DILocation(line: 985, column: 33, scope: !482)
!2628 = !DILocation(line: 985, column: 44, scope: !482)
!2629 = !DILocation(line: 985, column: 2, scope: !482)
!2630 = !DILocation(line: 986, column: 26, scope: !482)
!2631 = !DILocation(line: 986, column: 33, scope: !482)
!2632 = !DILocation(line: 986, column: 44, scope: !482)
!2633 = !DILocation(line: 986, column: 2, scope: !482)
!2634 = !DILocation(line: 988, column: 7, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !482, file: !1, line: 988, column: 6)
!2636 = !DILocation(line: 988, column: 12, scope: !2635)
!2637 = !DILocation(line: 988, column: 19, scope: !2635)
!2638 = !DILocation(line: 988, column: 24, scope: !2635)
!2639 = !DILocation(line: 988, column: 35, scope: !2635)
!2640 = !DILocation(line: 988, column: 6, scope: !482)
!2641 = !DILocalVariable(name: "linkname_length", scope: !2642, file: !1, line: 989, type: !45)
!2642 = distinct !DILexicalBlock(scope: !2635, file: !1, line: 988, column: 48)
!2643 = !DILocation(line: 989, column: 10, scope: !2642)
!2644 = !DILocation(line: 991, column: 7, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 991, column: 7)
!2646 = !DILocation(line: 991, column: 18, scope: !2645)
!2647 = !DILocation(line: 991, column: 34, scope: !2645)
!2648 = !DILocation(line: 991, column: 7, scope: !2642)
!2649 = !DILocation(line: 992, column: 23, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2645, file: !1, line: 991, column: 47)
!2651 = !DILocation(line: 992, column: 26, scope: !2650)
!2652 = !DILocation(line: 992, column: 4, scope: !2650)
!2653 = !DILocation(line: 994, column: 4, scope: !2650)
!2654 = !DILocation(line: 997, column: 29, scope: !2642)
!2655 = !DILocation(line: 997, column: 40, scope: !2642)
!2656 = !DILocation(line: 997, column: 19, scope: !2642)
!2657 = !DILocation(line: 999, column: 26, scope: !2642)
!2658 = !DILocation(line: 999, column: 3, scope: !2642)
!2659 = !DILocation(line: 1000, column: 28, scope: !2642)
!2660 = !DILocation(line: 1000, column: 31, scope: !2642)
!2661 = !DILocation(line: 1000, column: 7, scope: !2642)
!2662 = !DILocation(line: 1000, column: 5, scope: !2642)
!2663 = !DILocation(line: 1001, column: 7, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 1001, column: 7)
!2665 = !DILocation(line: 1001, column: 9, scope: !2664)
!2666 = !DILocation(line: 1001, column: 7, scope: !2642)
!2667 = !DILocation(line: 1002, column: 23, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2664, file: !1, line: 1001, column: 18)
!2669 = !DILocation(line: 1002, column: 26, scope: !2668)
!2670 = !DILocation(line: 1002, column: 4, scope: !2668)
!2671 = !DILocation(line: 1004, column: 4, scope: !2668)
!2672 = !DILocation(line: 1007, column: 11, scope: !2642)
!2673 = !DILocation(line: 1007, column: 16, scope: !2642)
!2674 = !DILocation(line: 1007, column: 9, scope: !2642)
!2675 = !DILocation(line: 1008, column: 7, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 1008, column: 7)
!2677 = !DILocation(line: 1008, column: 13, scope: !2676)
!2678 = !DILocation(line: 1008, column: 21, scope: !2676)
!2679 = !DILocation(line: 1008, column: 25, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !2676, file: !1, discriminator: 1)
!2681 = !DILocation(line: 1008, column: 30, scope: !2680)
!2682 = !DILocation(line: 1008, column: 37, scope: !2680)
!2683 = !DILocation(line: 1008, column: 47, scope: !2680)
!2684 = !DILocation(line: 1008, column: 7, scope: !2680)
!2685 = !DILocation(line: 1009, column: 12, scope: !2676)
!2686 = !DILocation(line: 1009, column: 17, scope: !2676)
!2687 = !DILocation(line: 1009, column: 10, scope: !2676)
!2688 = !DILocation(line: 1009, column: 4, scope: !2676)
!2689 = !DILocation(line: 1010, column: 7, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 1010, column: 7)
!2691 = !DILocation(line: 1010, column: 13, scope: !2690)
!2692 = !DILocation(line: 1010, column: 7, scope: !2642)
!2693 = !DILocation(line: 1011, column: 12, scope: !2690)
!2694 = !DILocation(line: 1011, column: 17, scope: !2690)
!2695 = !DILocation(line: 1011, column: 10, scope: !2690)
!2696 = !DILocation(line: 1011, column: 4, scope: !2690)
!2697 = !DILocation(line: 1012, column: 36, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 1012, column: 7)
!2699 = !DILocation(line: 1012, column: 43, scope: !2698)
!2700 = !DILocation(line: 1012, column: 46, scope: !2698)
!2701 = !DILocation(line: 1013, column: 7, scope: !2698)
!2702 = !DILocation(line: 1012, column: 7, scope: !2698)
!2703 = !DILocation(line: 1013, column: 14, scope: !2698)
!2704 = !DILocation(line: 1012, column: 7, scope: !2642)
!2705 = !DILocation(line: 1014, column: 8, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2707, file: !1, line: 1014, column: 8)
!2707 = distinct !DILexicalBlock(scope: !2698, file: !1, line: 1013, column: 20)
!2708 = !DILocation(line: 1014, column: 14, scope: !2706)
!2709 = !DILocation(line: 1014, column: 24, scope: !2706)
!2710 = !DILocation(line: 1014, column: 27, scope: !2711)
!2711 = !DILexicalBlockFile(scope: !2706, file: !1, discriminator: 1)
!2712 = !DILocation(line: 1014, column: 36, scope: !2711)
!2713 = !DILocation(line: 1014, column: 41, scope: !2711)
!2714 = !DILocation(line: 1014, column: 33, scope: !2711)
!2715 = !DILocation(line: 1014, column: 52, scope: !2711)
!2716 = !DILocation(line: 1015, column: 9, scope: !2706)
!2717 = !DILocation(line: 1015, column: 14, scope: !2706)
!2718 = !DILocation(line: 1015, column: 21, scope: !2706)
!2719 = !DILocation(line: 1015, column: 31, scope: !2706)
!2720 = !DILocation(line: 1014, column: 8, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !2707, file: !1, discriminator: 2)
!2722 = !DILocation(line: 1016, column: 37, scope: !2706)
!2723 = !DILocation(line: 1016, column: 44, scope: !2706)
!2724 = !DILocation(line: 1017, column: 5, scope: !2706)
!2725 = !DILocation(line: 1016, column: 8, scope: !2706)
!2726 = !DILocation(line: 1018, column: 8, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2707, file: !1, line: 1018, column: 8)
!2728 = !DILocation(line: 1018, column: 14, scope: !2727)
!2729 = !DILocation(line: 1018, column: 8, scope: !2707)
!2730 = !DILocation(line: 1019, column: 24, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2727, file: !1, line: 1018, column: 25)
!2732 = !DILocation(line: 1019, column: 27, scope: !2731)
!2733 = !DILocation(line: 1019, column: 5, scope: !2731)
!2734 = !DILocation(line: 1021, column: 5, scope: !2731)
!2735 = !DILocation(line: 1028, column: 8, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2707, file: !1, line: 1028, column: 8)
!2737 = !DILocation(line: 1028, column: 17, scope: !2736)
!2738 = !DILocation(line: 1028, column: 22, scope: !2736)
!2739 = !DILocation(line: 1028, column: 14, scope: !2736)
!2740 = !DILocation(line: 1028, column: 33, scope: !2736)
!2741 = !DILocation(line: 1029, column: 9, scope: !2736)
!2742 = !DILocation(line: 1029, column: 14, scope: !2736)
!2743 = !DILocation(line: 1029, column: 21, scope: !2736)
!2744 = !DILocation(line: 1029, column: 31, scope: !2736)
!2745 = !DILocation(line: 1029, column: 48, scope: !2736)
!2746 = !DILocation(line: 1028, column: 8, scope: !2747)
!2747 = !DILexicalBlockFile(scope: !2707, file: !1, discriminator: 1)
!2748 = !DILocation(line: 1030, column: 24, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2736, file: !1, line: 1029, column: 54)
!2750 = !DILocation(line: 1030, column: 27, scope: !2749)
!2751 = !DILocation(line: 1035, column: 6, scope: !2749)
!2752 = !DILocation(line: 1034, column: 9, scope: !2749)
!2753 = !DILocation(line: 1030, column: 5, scope: !2749)
!2754 = !DILocation(line: 1036, column: 9, scope: !2749)
!2755 = !DILocation(line: 1037, column: 4, scope: !2749)
!2756 = !DILocation(line: 1038, column: 3, scope: !2707)
!2757 = !DILocation(line: 1039, column: 34, scope: !2642)
!2758 = !DILocation(line: 1039, column: 45, scope: !2642)
!2759 = !DILocation(line: 1039, column: 61, scope: !2642)
!2760 = !DILocation(line: 1039, column: 3, scope: !2642)
!2761 = !DILocation(line: 1039, column: 14, scope: !2642)
!2762 = !DILocation(line: 1039, column: 32, scope: !2642)
!2763 = !DILocation(line: 1041, column: 30, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 1041, column: 7)
!2765 = !DILocation(line: 1041, column: 33, scope: !2764)
!2766 = !DILocation(line: 1041, column: 7, scope: !2764)
!2767 = !DILocation(line: 1041, column: 50, scope: !2764)
!2768 = !DILocation(line: 1041, column: 7, scope: !2642)
!2769 = !DILocation(line: 1042, column: 23, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2764, file: !1, line: 1041, column: 55)
!2771 = !DILocation(line: 1042, column: 26, scope: !2770)
!2772 = !DILocation(line: 1042, column: 4, scope: !2770)
!2773 = !DILocation(line: 1044, column: 4, scope: !2770)
!2774 = !DILocation(line: 1046, column: 2, scope: !2642)
!2775 = !DILocation(line: 1046, column: 19, scope: !2776)
!2776 = !DILexicalBlockFile(scope: !2777, file: !1, discriminator: 1)
!2777 = distinct !DILexicalBlock(scope: !2635, file: !1, line: 1046, column: 13)
!2778 = !DILocation(line: 1046, column: 30, scope: !2776)
!2779 = !DILocation(line: 1046, column: 40, scope: !2776)
!2780 = !DILocation(line: 1046, column: 15, scope: !2776)
!2781 = !DILocation(line: 1047, column: 6, scope: !2777)
!2782 = !DILocation(line: 1047, column: 9, scope: !2776)
!2783 = !DILocation(line: 1047, column: 20, scope: !2776)
!2784 = !DILocation(line: 1047, column: 38, scope: !2776)
!2785 = !DILocation(line: 1046, column: 13, scope: !2786)
!2786 = !DILexicalBlockFile(scope: !2635, file: !1, discriminator: 2)
!2787 = !DILocation(line: 1049, column: 26, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2777, file: !1, line: 1047, column: 43)
!2789 = !DILocation(line: 1049, column: 33, scope: !2788)
!2790 = !DILocation(line: 1049, column: 44, scope: !2788)
!2791 = !DILocation(line: 1049, column: 3, scope: !2788)
!2792 = !DILocation(line: 1050, column: 2, scope: !2788)
!2793 = !DILocation(line: 1051, column: 31, scope: !482)
!2794 = !DILocation(line: 1051, column: 42, scope: !482)
!2795 = !DILocation(line: 1051, column: 2, scope: !482)
!2796 = !DILocation(line: 1051, column: 7, scope: !482)
!2797 = !DILocation(line: 1051, column: 29, scope: !482)
!2798 = !DILocation(line: 1054, column: 12, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !482, file: !1, line: 1054, column: 6)
!2800 = !DILocation(line: 1054, column: 23, scope: !2799)
!2801 = !DILocation(line: 1054, column: 33, scope: !2799)
!2802 = !DILocation(line: 1054, column: 8, scope: !2799)
!2803 = !DILocation(line: 1055, column: 6, scope: !2799)
!2804 = !DILocation(line: 1055, column: 9, scope: !2805)
!2805 = !DILexicalBlockFile(scope: !2799, file: !1, discriminator: 1)
!2806 = !DILocation(line: 1055, column: 14, scope: !2805)
!2807 = !DILocation(line: 1055, column: 36, scope: !2805)
!2808 = !DILocation(line: 1054, column: 6, scope: !2809)
!2809 = !DILexicalBlockFile(scope: !482, file: !1, discriminator: 1)
!2810 = !DILocation(line: 1056, column: 3, scope: !2799)
!2811 = !DILocation(line: 1056, column: 8, scope: !2799)
!2812 = !DILocation(line: 1056, column: 21, scope: !2799)
!2813 = !DILocation(line: 1059, column: 26, scope: !482)
!2814 = !DILocation(line: 1059, column: 31, scope: !482)
!2815 = !DILocation(line: 1060, column: 6, scope: !482)
!2816 = !DILocation(line: 1060, column: 14, scope: !482)
!2817 = !DILocation(line: 1060, column: 20, scope: !482)
!2818 = !DILocation(line: 1060, column: 28, scope: !482)
!2819 = !DILocation(line: 1061, column: 23, scope: !482)
!2820 = !DILocation(line: 1061, column: 28, scope: !482)
!2821 = !DILocation(line: 1061, column: 35, scope: !482)
!2822 = !DILocation(line: 1061, column: 6, scope: !482)
!2823 = !DILocation(line: 1059, column: 2, scope: !482)
!2824 = !DILocation(line: 1062, column: 35, scope: !482)
!2825 = !DILocation(line: 1062, column: 40, scope: !482)
!2826 = !DILocation(line: 1062, column: 52, scope: !482)
!2827 = !DILocation(line: 1062, column: 2, scope: !482)
!2828 = !DILocation(line: 1062, column: 5, scope: !482)
!2829 = !DILocation(line: 1062, column: 13, scope: !482)
!2830 = !DILocation(line: 1062, column: 33, scope: !482)
!2831 = !DILocation(line: 1064, column: 10, scope: !482)
!2832 = !DILocation(line: 1064, column: 2, scope: !482)
!2833 = !DILocation(line: 1065, column: 1, scope: !482)
!2834 = !DILocalVariable(name: "pp", arg: 1, scope: !485, file: !486, line: 101, type: !43)
!2835 = !DILocation(line: 101, column: 29, scope: !485)
!2836 = !DILocalVariable(name: "p", scope: !485, file: !486, line: 103, type: !466)
!2837 = !DILocation(line: 103, column: 23, scope: !485)
!2838 = !DILocation(line: 103, column: 50, scope: !485)
!2839 = !DILocalVariable(name: "p1", scope: !485, file: !486, line: 108, type: !13)
!2840 = !DILocation(line: 108, column: 15, scope: !485)
!2841 = !DILocation(line: 108, column: 20, scope: !485)
!2842 = !DILocalVariable(name: "p0", scope: !485, file: !486, line: 109, type: !13)
!2843 = !DILocation(line: 109, column: 15, scope: !485)
!2844 = !DILocation(line: 109, column: 20, scope: !485)
!2845 = !DILocation(line: 111, column: 11, scope: !485)
!2846 = !DILocation(line: 111, column: 14, scope: !485)
!2847 = !DILocation(line: 111, column: 22, scope: !485)
!2848 = !DILocation(line: 111, column: 20, scope: !485)
!2849 = !DILocation(line: 111, column: 9, scope: !485)
!2850 = !DILocation(line: 111, column: 2, scope: !485)
!2851 = !DILocalVariable(name: "p", arg: 1, scope: !489, file: !1, line: 397, type: !80)
!2852 = !DILocation(line: 397, column: 22, scope: !489)
!2853 = !DILocalVariable(name: "msTime", scope: !489, file: !1, line: 399, type: !23)
!2854 = !DILocation(line: 399, column: 6, scope: !489)
!2855 = !DILocalVariable(name: "msDate", scope: !489, file: !1, line: 399, type: !23)
!2856 = !DILocation(line: 399, column: 14, scope: !489)
!2857 = !DILocalVariable(name: "ts", scope: !489, file: !1, line: 400, type: !2858)
!2858 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !324, line: 133, size: 448, align: 64, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2858, file: !324, line: 135, baseType: !23, size: 32, align: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2858, file: !324, line: 136, baseType: !23, size: 32, align: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2858, file: !324, line: 137, baseType: !23, size: 32, align: 32, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2858, file: !324, line: 138, baseType: !23, size: 32, align: 32, offset: 96)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2858, file: !324, line: 139, baseType: !23, size: 32, align: 32, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2858, file: !324, line: 140, baseType: !23, size: 32, align: 32, offset: 160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2858, file: !324, line: 141, baseType: !23, size: 32, align: 32, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2858, file: !324, line: 142, baseType: !23, size: 32, align: 32, offset: 224)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2858, file: !324, line: 143, baseType: !23, size: 32, align: 32, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2858, file: !324, line: 146, baseType: !42, size: 64, align: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2858, file: !324, line: 147, baseType: !80, size: 64, align: 64, offset: 384)
!2871 = !DILocation(line: 400, column: 12, scope: !489)
!2872 = !DILocation(line: 402, column: 29, scope: !489)
!2873 = !DILocation(line: 402, column: 19, scope: !489)
!2874 = !DILocation(line: 402, column: 17, scope: !489)
!2875 = !DILocation(line: 402, column: 61, scope: !489)
!2876 = !DILocation(line: 402, column: 51, scope: !489)
!2877 = !DILocation(line: 402, column: 49, scope: !489)
!2878 = !DILocation(line: 402, column: 41, scope: !489)
!2879 = !DILocation(line: 402, column: 35, scope: !489)
!2880 = !DILocation(line: 402, column: 9, scope: !489)
!2881 = !DILocation(line: 403, column: 29, scope: !489)
!2882 = !DILocation(line: 403, column: 19, scope: !489)
!2883 = !DILocation(line: 403, column: 17, scope: !489)
!2884 = !DILocation(line: 403, column: 61, scope: !489)
!2885 = !DILocation(line: 403, column: 51, scope: !489)
!2886 = !DILocation(line: 403, column: 49, scope: !489)
!2887 = !DILocation(line: 403, column: 41, scope: !489)
!2888 = !DILocation(line: 403, column: 35, scope: !489)
!2889 = !DILocation(line: 403, column: 9, scope: !489)
!2890 = !DILocation(line: 405, column: 2, scope: !489)
!2891 = !DILocation(line: 406, column: 17, scope: !489)
!2892 = !DILocation(line: 406, column: 24, scope: !489)
!2893 = !DILocation(line: 406, column: 30, scope: !489)
!2894 = !DILocation(line: 406, column: 38, scope: !489)
!2895 = !DILocation(line: 406, column: 5, scope: !489)
!2896 = !DILocation(line: 406, column: 13, scope: !489)
!2897 = !DILocation(line: 407, column: 16, scope: !489)
!2898 = !DILocation(line: 407, column: 23, scope: !489)
!2899 = !DILocation(line: 407, column: 29, scope: !489)
!2900 = !DILocation(line: 407, column: 37, scope: !489)
!2901 = !DILocation(line: 407, column: 5, scope: !489)
!2902 = !DILocation(line: 407, column: 12, scope: !489)
!2903 = !DILocation(line: 408, column: 15, scope: !489)
!2904 = !DILocation(line: 408, column: 22, scope: !489)
!2905 = !DILocation(line: 408, column: 5, scope: !489)
!2906 = !DILocation(line: 408, column: 13, scope: !489)
!2907 = !DILocation(line: 409, column: 16, scope: !489)
!2908 = !DILocation(line: 409, column: 23, scope: !489)
!2909 = !DILocation(line: 409, column: 30, scope: !489)
!2910 = !DILocation(line: 409, column: 5, scope: !489)
!2911 = !DILocation(line: 409, column: 13, scope: !489)
!2912 = !DILocation(line: 410, column: 15, scope: !489)
!2913 = !DILocation(line: 410, column: 22, scope: !489)
!2914 = !DILocation(line: 410, column: 28, scope: !489)
!2915 = !DILocation(line: 410, column: 5, scope: !489)
!2916 = !DILocation(line: 410, column: 12, scope: !489)
!2917 = !DILocation(line: 411, column: 15, scope: !489)
!2918 = !DILocation(line: 411, column: 22, scope: !489)
!2919 = !DILocation(line: 411, column: 28, scope: !489)
!2920 = !DILocation(line: 411, column: 5, scope: !489)
!2921 = !DILocation(line: 411, column: 12, scope: !489)
!2922 = !DILocation(line: 412, column: 5, scope: !489)
!2923 = !DILocation(line: 412, column: 14, scope: !489)
!2924 = !DILocation(line: 413, column: 9, scope: !489)
!2925 = !DILocation(line: 413, column: 2, scope: !489)
!2926 = !DILocalVariable(name: "pp", arg: 1, scope: !492, file: !486, line: 115, type: !43)
!2927 = !DILocation(line: 115, column: 29, scope: !492)
!2928 = !DILocalVariable(name: "p", scope: !492, file: !486, line: 117, type: !466)
!2929 = !DILocation(line: 117, column: 23, scope: !492)
!2930 = !DILocation(line: 117, column: 50, scope: !492)
!2931 = !DILocalVariable(name: "p3", scope: !492, file: !486, line: 122, type: !13)
!2932 = !DILocation(line: 122, column: 15, scope: !492)
!2933 = !DILocation(line: 122, column: 20, scope: !492)
!2934 = !DILocalVariable(name: "p2", scope: !492, file: !486, line: 123, type: !13)
!2935 = !DILocation(line: 123, column: 15, scope: !492)
!2936 = !DILocation(line: 123, column: 20, scope: !492)
!2937 = !DILocalVariable(name: "p1", scope: !492, file: !486, line: 124, type: !13)
!2938 = !DILocation(line: 124, column: 15, scope: !492)
!2939 = !DILocation(line: 124, column: 20, scope: !492)
!2940 = !DILocalVariable(name: "p0", scope: !492, file: !486, line: 125, type: !13)
!2941 = !DILocation(line: 125, column: 15, scope: !492)
!2942 = !DILocation(line: 125, column: 20, scope: !492)
!2943 = !DILocation(line: 127, column: 11, scope: !492)
!2944 = !DILocation(line: 127, column: 14, scope: !492)
!2945 = !DILocation(line: 127, column: 24, scope: !492)
!2946 = !DILocation(line: 127, column: 27, scope: !492)
!2947 = !DILocation(line: 127, column: 21, scope: !492)
!2948 = !DILocation(line: 127, column: 37, scope: !492)
!2949 = !DILocation(line: 127, column: 40, scope: !492)
!2950 = !DILocation(line: 127, column: 34, scope: !492)
!2951 = !DILocation(line: 127, column: 48, scope: !492)
!2952 = !DILocation(line: 127, column: 46, scope: !492)
!2953 = !DILocation(line: 127, column: 2, scope: !492)
!2954 = !DILocalVariable(name: "a", arg: 1, scope: !495, file: !1, line: 422, type: !4)
!2955 = !DILocation(line: 422, column: 36, scope: !495)
!2956 = !DILocalVariable(name: "p", arg: 2, scope: !495, file: !1, line: 422, type: !80)
!2957 = !DILocation(line: 422, column: 51, scope: !495)
!2958 = !DILocalVariable(name: "extra_length", arg: 3, scope: !495, file: !1, line: 422, type: !45)
!2959 = !DILocation(line: 422, column: 61, scope: !495)
!2960 = !DILocalVariable(name: "zip_entry", arg: 4, scope: !495, file: !1, line: 422, type: !301)
!2961 = !DILocation(line: 422, column: 93, scope: !495)
!2962 = !DILocalVariable(name: "offset", scope: !495, file: !1, line: 424, type: !13)
!2963 = !DILocation(line: 424, column: 11, scope: !495)
!2964 = !DILocation(line: 426, column: 6, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !495, file: !1, line: 426, column: 6)
!2966 = !DILocation(line: 426, column: 19, scope: !2965)
!2967 = !DILocation(line: 426, column: 6, scope: !495)
!2968 = !DILocation(line: 427, column: 3, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2965, file: !1, line: 426, column: 25)
!2970 = !DILocation(line: 430, column: 6, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !495, file: !1, line: 430, column: 6)
!2972 = !DILocation(line: 430, column: 19, scope: !2971)
!2973 = !DILocation(line: 430, column: 6, scope: !495)
!2974 = !DILocation(line: 431, column: 22, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2971, file: !1, line: 430, column: 24)
!2976 = !DILocation(line: 431, column: 25, scope: !2975)
!2977 = !DILocation(line: 432, column: 84, scope: !2975)
!2978 = !DILocation(line: 432, column: 79, scope: !2975)
!2979 = !DILocation(line: 431, column: 3, scope: !2975)
!2980 = !DILocation(line: 433, column: 3, scope: !2975)
!2981 = !DILocation(line: 435, column: 2, scope: !495)
!2982 = !DILocation(line: 435, column: 9, scope: !2983)
!2983 = !DILexicalBlockFile(scope: !495, file: !1, discriminator: 1)
!2984 = !DILocation(line: 435, column: 19, scope: !2983)
!2985 = !DILocation(line: 435, column: 32, scope: !2983)
!2986 = !DILocation(line: 435, column: 16, scope: !2983)
!2987 = !DILocation(line: 435, column: 2, scope: !2983)
!2988 = !DILocalVariable(name: "headerid", scope: !2989, file: !1, line: 436, type: !332)
!2989 = distinct !DILexicalBlock(scope: !495, file: !1, line: 435, column: 37)
!2990 = !DILocation(line: 436, column: 18, scope: !2989)
!2991 = !DILocation(line: 436, column: 45, scope: !2989)
!2992 = !DILocation(line: 436, column: 49, scope: !2989)
!2993 = !DILocation(line: 436, column: 47, scope: !2989)
!2994 = !DILocation(line: 436, column: 29, scope: !2989)
!2995 = !DILocalVariable(name: "datasize", scope: !2989, file: !1, line: 437, type: !332)
!2996 = !DILocation(line: 437, column: 18, scope: !2989)
!2997 = !DILocation(line: 437, column: 45, scope: !2989)
!2998 = !DILocation(line: 437, column: 49, scope: !2989)
!2999 = !DILocation(line: 437, column: 47, scope: !2989)
!3000 = !DILocation(line: 437, column: 56, scope: !2989)
!3001 = !DILocation(line: 437, column: 29, scope: !2989)
!3002 = !DILocation(line: 439, column: 10, scope: !2989)
!3003 = !DILocation(line: 440, column: 7, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 440, column: 7)
!3005 = !DILocation(line: 440, column: 16, scope: !3004)
!3006 = !DILocation(line: 440, column: 14, scope: !3004)
!3007 = !DILocation(line: 440, column: 27, scope: !3004)
!3008 = !DILocation(line: 440, column: 25, scope: !3004)
!3009 = !DILocation(line: 440, column: 7, scope: !2989)
!3010 = !DILocation(line: 441, column: 23, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3004, file: !1, line: 440, column: 41)
!3012 = !DILocation(line: 441, column: 26, scope: !3011)
!3013 = !DILocation(line: 443, column: 13, scope: !3011)
!3014 = !DILocation(line: 443, column: 8, scope: !3011)
!3015 = !DILocation(line: 443, column: 29, scope: !3011)
!3016 = !DILocation(line: 443, column: 44, scope: !3011)
!3017 = !DILocation(line: 443, column: 42, scope: !3011)
!3018 = !DILocation(line: 443, column: 23, scope: !3011)
!3019 = !DILocation(line: 441, column: 4, scope: !3011)
!3020 = !DILocation(line: 444, column: 4, scope: !3011)
!3021 = !DILocation(line: 450, column: 11, scope: !2989)
!3022 = !DILocation(line: 450, column: 3, scope: !2989)
!3023 = !DILocation(line: 453, column: 4, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 450, column: 21)
!3025 = !DILocation(line: 453, column: 15, scope: !3024)
!3026 = !DILocation(line: 453, column: 21, scope: !3024)
!3027 = !DILocation(line: 454, column: 8, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 454, column: 8)
!3029 = !DILocation(line: 454, column: 19, scope: !3028)
!3030 = !DILocation(line: 454, column: 37, scope: !3028)
!3031 = !DILocation(line: 454, column: 8, scope: !3024)
!3032 = !DILocalVariable(name: "t", scope: !3033, file: !1, line: 455, type: !468)
!3033 = distinct !DILexicalBlock(scope: !3028, file: !1, line: 454, column: 52)
!3034 = !DILocation(line: 455, column: 14, scope: !3033)
!3035 = !DILocation(line: 456, column: 9, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3033, file: !1, line: 456, column: 9)
!3037 = !DILocation(line: 456, column: 18, scope: !3036)
!3038 = !DILocation(line: 457, column: 9, scope: !3036)
!3039 = !DILocation(line: 457, column: 33, scope: !3040)
!3040 = !DILexicalBlockFile(scope: !3036, file: !1, discriminator: 1)
!3041 = !DILocation(line: 457, column: 37, scope: !3040)
!3042 = !DILocation(line: 457, column: 35, scope: !3040)
!3043 = !DILocation(line: 457, column: 17, scope: !3040)
!3044 = !DILocation(line: 457, column: 15, scope: !3040)
!3045 = !DILocation(line: 457, column: 46, scope: !3040)
!3046 = !DILocation(line: 456, column: 9, scope: !3047)
!3047 = !DILexicalBlockFile(scope: !3033, file: !1, discriminator: 1)
!3048 = !DILocation(line: 458, column: 25, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3036, file: !1, line: 457, column: 59)
!3050 = !DILocation(line: 458, column: 28, scope: !3049)
!3051 = !DILocation(line: 458, column: 6, scope: !3049)
!3052 = !DILocation(line: 460, column: 6, scope: !3049)
!3053 = !DILocation(line: 462, column: 36, scope: !3033)
!3054 = !DILocation(line: 462, column: 5, scope: !3033)
!3055 = !DILocation(line: 462, column: 16, scope: !3033)
!3056 = !DILocation(line: 462, column: 34, scope: !3033)
!3057 = !DILocation(line: 463, column: 12, scope: !3033)
!3058 = !DILocation(line: 464, column: 14, scope: !3033)
!3059 = !DILocation(line: 465, column: 4, scope: !3033)
!3060 = !DILocation(line: 466, column: 8, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 466, column: 8)
!3062 = !DILocation(line: 466, column: 19, scope: !3061)
!3063 = !DILocation(line: 466, column: 35, scope: !3061)
!3064 = !DILocation(line: 466, column: 8, scope: !3024)
!3065 = !DILocalVariable(name: "t", scope: !3066, file: !1, line: 467, type: !468)
!3066 = distinct !DILexicalBlock(scope: !3061, file: !1, line: 466, column: 50)
!3067 = !DILocation(line: 467, column: 14, scope: !3066)
!3068 = !DILocation(line: 468, column: 9, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3066, file: !1, line: 468, column: 9)
!3070 = !DILocation(line: 468, column: 18, scope: !3069)
!3071 = !DILocation(line: 469, column: 9, scope: !3069)
!3072 = !DILocation(line: 469, column: 33, scope: !3073)
!3073 = !DILexicalBlockFile(scope: !3069, file: !1, discriminator: 1)
!3074 = !DILocation(line: 469, column: 37, scope: !3073)
!3075 = !DILocation(line: 469, column: 35, scope: !3073)
!3076 = !DILocation(line: 469, column: 17, scope: !3073)
!3077 = !DILocation(line: 469, column: 15, scope: !3073)
!3078 = !DILocation(line: 469, column: 46, scope: !3073)
!3079 = !DILocation(line: 468, column: 9, scope: !3080)
!3080 = !DILexicalBlockFile(scope: !3066, file: !1, discriminator: 1)
!3081 = !DILocation(line: 470, column: 25, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 469, column: 59)
!3083 = !DILocation(line: 470, column: 28, scope: !3082)
!3084 = !DILocation(line: 470, column: 6, scope: !3082)
!3085 = !DILocation(line: 472, column: 6, scope: !3082)
!3086 = !DILocation(line: 474, column: 34, scope: !3066)
!3087 = !DILocation(line: 474, column: 5, scope: !3066)
!3088 = !DILocation(line: 474, column: 16, scope: !3066)
!3089 = !DILocation(line: 474, column: 32, scope: !3066)
!3090 = !DILocation(line: 475, column: 12, scope: !3066)
!3091 = !DILocation(line: 476, column: 14, scope: !3066)
!3092 = !DILocation(line: 477, column: 4, scope: !3066)
!3093 = !DILocation(line: 478, column: 8, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 478, column: 8)
!3095 = !DILocation(line: 478, column: 19, scope: !3094)
!3096 = !DILocation(line: 478, column: 39, scope: !3094)
!3097 = !DILocation(line: 478, column: 8, scope: !3024)
!3098 = !DILocalVariable(name: "t", scope: !3099, file: !1, line: 479, type: !468)
!3099 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 478, column: 54)
!3100 = !DILocation(line: 479, column: 14, scope: !3099)
!3101 = !DILocation(line: 480, column: 9, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3099, file: !1, line: 480, column: 9)
!3103 = !DILocation(line: 480, column: 18, scope: !3102)
!3104 = !DILocation(line: 481, column: 9, scope: !3102)
!3105 = !DILocation(line: 481, column: 33, scope: !3106)
!3106 = !DILexicalBlockFile(scope: !3102, file: !1, discriminator: 1)
!3107 = !DILocation(line: 481, column: 37, scope: !3106)
!3108 = !DILocation(line: 481, column: 35, scope: !3106)
!3109 = !DILocation(line: 481, column: 17, scope: !3106)
!3110 = !DILocation(line: 481, column: 15, scope: !3106)
!3111 = !DILocation(line: 481, column: 46, scope: !3106)
!3112 = !DILocation(line: 480, column: 9, scope: !3113)
!3113 = !DILexicalBlockFile(scope: !3099, file: !1, discriminator: 1)
!3114 = !DILocation(line: 482, column: 25, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3102, file: !1, line: 481, column: 59)
!3116 = !DILocation(line: 482, column: 28, scope: !3115)
!3117 = !DILocation(line: 482, column: 6, scope: !3115)
!3118 = !DILocation(line: 484, column: 6, scope: !3115)
!3119 = !DILocation(line: 486, column: 38, scope: !3099)
!3120 = !DILocation(line: 486, column: 5, scope: !3099)
!3121 = !DILocation(line: 486, column: 16, scope: !3099)
!3122 = !DILocation(line: 486, column: 36, scope: !3099)
!3123 = !DILocation(line: 487, column: 12, scope: !3099)
!3124 = !DILocation(line: 488, column: 14, scope: !3099)
!3125 = !DILocation(line: 489, column: 4, scope: !3099)
!3126 = !DILocation(line: 493, column: 4, scope: !3024)
!3127 = !DILocalVariable(name: "flags", scope: !3128, file: !1, line: 514, type: !23)
!3128 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 512, column: 3)
!3129 = !DILocation(line: 514, column: 8, scope: !3128)
!3130 = !DILocation(line: 514, column: 18, scope: !3128)
!3131 = !DILocation(line: 514, column: 16, scope: !3128)
!3132 = !DILocation(line: 515, column: 10, scope: !3128)
!3133 = !DILocation(line: 516, column: 12, scope: !3128)
!3134 = !DILocation(line: 518, column: 8, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3128, file: !1, line: 518, column: 8)
!3136 = !DILocation(line: 518, column: 14, scope: !3135)
!3137 = !DILocation(line: 518, column: 8, scope: !3128)
!3138 = !DILocation(line: 525, column: 9, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 525, column: 9)
!3140 = distinct !DILexicalBlock(scope: !3135, file: !1, line: 519, column: 4)
!3141 = !DILocation(line: 525, column: 18, scope: !3139)
!3142 = !DILocation(line: 525, column: 9, scope: !3140)
!3143 = !DILocation(line: 526, column: 6, scope: !3139)
!3144 = !DILocation(line: 527, column: 40, scope: !3140)
!3145 = !DILocation(line: 527, column: 44, scope: !3140)
!3146 = !DILocation(line: 527, column: 42, scope: !3140)
!3147 = !DILocation(line: 527, column: 24, scope: !3140)
!3148 = !DILocation(line: 527, column: 5, scope: !3140)
!3149 = !DILocation(line: 527, column: 16, scope: !3140)
!3150 = !DILocation(line: 527, column: 22, scope: !3140)
!3151 = !DILocation(line: 528, column: 12, scope: !3140)
!3152 = !DILocation(line: 529, column: 14, scope: !3140)
!3153 = !DILocation(line: 530, column: 4, scope: !3140)
!3154 = !DILocation(line: 531, column: 8, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3128, file: !1, line: 531, column: 8)
!3156 = !DILocation(line: 531, column: 14, scope: !3155)
!3157 = !DILocation(line: 531, column: 8, scope: !3128)
!3158 = !DILocation(line: 533, column: 9, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !1, line: 533, column: 9)
!3160 = distinct !DILexicalBlock(scope: !3155, file: !1, line: 532, column: 4)
!3161 = !DILocation(line: 533, column: 18, scope: !3159)
!3162 = !DILocation(line: 533, column: 9, scope: !3160)
!3163 = !DILocation(line: 534, column: 6, scope: !3159)
!3164 = !DILocation(line: 535, column: 40, scope: !3160)
!3165 = !DILocation(line: 535, column: 44, scope: !3160)
!3166 = !DILocation(line: 535, column: 42, scope: !3160)
!3167 = !DILocation(line: 535, column: 24, scope: !3160)
!3168 = !DILocation(line: 535, column: 5, scope: !3160)
!3169 = !DILocation(line: 535, column: 16, scope: !3160)
!3170 = !DILocation(line: 535, column: 22, scope: !3160)
!3171 = !DILocation(line: 536, column: 12, scope: !3160)
!3172 = !DILocation(line: 537, column: 14, scope: !3160)
!3173 = !DILocation(line: 538, column: 4, scope: !3160)
!3174 = !DILocation(line: 539, column: 8, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3128, file: !1, line: 539, column: 8)
!3176 = !DILocation(line: 539, column: 14, scope: !3175)
!3177 = !DILocation(line: 539, column: 8, scope: !3128)
!3178 = !DILocation(line: 541, column: 9, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 541, column: 9)
!3180 = distinct !DILexicalBlock(scope: !3175, file: !1, line: 540, column: 4)
!3181 = !DILocation(line: 541, column: 18, scope: !3179)
!3182 = !DILocation(line: 541, column: 9, scope: !3180)
!3183 = !DILocation(line: 542, column: 6, scope: !3179)
!3184 = !DILocation(line: 543, column: 40, scope: !3180)
!3185 = !DILocation(line: 543, column: 44, scope: !3180)
!3186 = !DILocation(line: 543, column: 42, scope: !3180)
!3187 = !DILocation(line: 543, column: 24, scope: !3180)
!3188 = !DILocation(line: 543, column: 5, scope: !3180)
!3189 = !DILocation(line: 543, column: 16, scope: !3180)
!3190 = !DILocation(line: 543, column: 22, scope: !3180)
!3191 = !DILocation(line: 544, column: 12, scope: !3180)
!3192 = !DILocation(line: 545, column: 14, scope: !3180)
!3193 = !DILocation(line: 546, column: 4, scope: !3180)
!3194 = !DILocation(line: 547, column: 4, scope: !3128)
!3195 = !DILocation(line: 552, column: 8, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 552, column: 8)
!3197 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 550, column: 3)
!3198 = !DILocation(line: 552, column: 17, scope: !3196)
!3199 = !DILocation(line: 552, column: 8, scope: !3197)
!3200 = !DILocation(line: 553, column: 40, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3196, file: !1, line: 552, column: 23)
!3202 = !DILocation(line: 553, column: 44, scope: !3201)
!3203 = !DILocation(line: 553, column: 42, scope: !3201)
!3204 = !DILocation(line: 553, column: 24, scope: !3201)
!3205 = !DILocation(line: 553, column: 5, scope: !3201)
!3206 = !DILocation(line: 553, column: 16, scope: !3201)
!3207 = !DILocation(line: 553, column: 22, scope: !3201)
!3208 = !DILocation(line: 555, column: 25, scope: !3201)
!3209 = !DILocation(line: 555, column: 29, scope: !3201)
!3210 = !DILocation(line: 555, column: 27, scope: !3201)
!3211 = !DILocation(line: 555, column: 36, scope: !3201)
!3212 = !DILocation(line: 555, column: 9, scope: !3201)
!3213 = !DILocation(line: 554, column: 5, scope: !3201)
!3214 = !DILocation(line: 554, column: 16, scope: !3201)
!3215 = !DILocation(line: 554, column: 22, scope: !3201)
!3216 = !DILocation(line: 556, column: 4, scope: !3201)
!3217 = !DILocation(line: 557, column: 8, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 557, column: 8)
!3219 = !DILocation(line: 557, column: 17, scope: !3218)
!3220 = !DILocation(line: 557, column: 8, scope: !3197)
!3221 = !DILocation(line: 559, column: 25, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3218, file: !1, line: 557, column: 24)
!3223 = !DILocation(line: 559, column: 29, scope: !3222)
!3224 = !DILocation(line: 559, column: 27, scope: !3222)
!3225 = !DILocation(line: 559, column: 36, scope: !3222)
!3226 = !DILocation(line: 559, column: 9, scope: !3222)
!3227 = !DILocation(line: 558, column: 5, scope: !3222)
!3228 = !DILocation(line: 558, column: 16, scope: !3222)
!3229 = !DILocation(line: 558, column: 20, scope: !3222)
!3230 = !DILocation(line: 561, column: 25, scope: !3222)
!3231 = !DILocation(line: 561, column: 29, scope: !3222)
!3232 = !DILocation(line: 561, column: 27, scope: !3222)
!3233 = !DILocation(line: 561, column: 36, scope: !3222)
!3234 = !DILocation(line: 561, column: 9, scope: !3222)
!3235 = !DILocation(line: 560, column: 5, scope: !3222)
!3236 = !DILocation(line: 560, column: 16, scope: !3222)
!3237 = !DILocation(line: 560, column: 20, scope: !3222)
!3238 = !DILocation(line: 562, column: 4, scope: !3222)
!3239 = !DILocation(line: 563, column: 4, scope: !3197)
!3240 = !DILocalVariable(name: "bitmap", scope: !3241, file: !1, line: 594, type: !23)
!3241 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 566, column: 3)
!3242 = !DILocation(line: 594, column: 8, scope: !3241)
!3243 = !DILocalVariable(name: "bitmap_last", scope: !3241, file: !1, line: 594, type: !23)
!3244 = !DILocation(line: 594, column: 16, scope: !3241)
!3245 = !DILocation(line: 596, column: 8, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 596, column: 8)
!3247 = !DILocation(line: 596, column: 17, scope: !3246)
!3248 = !DILocation(line: 596, column: 8, scope: !3241)
!3249 = !DILocation(line: 597, column: 5, scope: !3246)
!3250 = !DILocation(line: 598, column: 36, scope: !3241)
!3251 = !DILocation(line: 598, column: 34, scope: !3241)
!3252 = !DILocation(line: 598, column: 32, scope: !3241)
!3253 = !DILocation(line: 598, column: 25, scope: !3241)
!3254 = !DILocation(line: 598, column: 16, scope: !3241)
!3255 = !DILocation(line: 599, column: 11, scope: !3241)
!3256 = !DILocation(line: 600, column: 13, scope: !3241)
!3257 = !DILocation(line: 603, column: 4, scope: !3241)
!3258 = !DILocation(line: 603, column: 12, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3241, file: !1, discriminator: 1)
!3260 = !DILocation(line: 603, column: 24, scope: !3259)
!3261 = !DILocation(line: 603, column: 32, scope: !3259)
!3262 = !DILocation(line: 604, column: 8, scope: !3241)
!3263 = !DILocation(line: 604, column: 11, scope: !3259)
!3264 = !DILocation(line: 604, column: 20, scope: !3259)
!3265 = !DILocation(line: 603, column: 4, scope: !3266)
!3266 = !DILexicalBlockFile(scope: !3241, file: !1, discriminator: 2)
!3267 = !DILocation(line: 605, column: 21, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 604, column: 26)
!3269 = !DILocation(line: 605, column: 19, scope: !3268)
!3270 = !DILocation(line: 605, column: 17, scope: !3268)
!3271 = !DILocation(line: 606, column: 12, scope: !3268)
!3272 = !DILocation(line: 607, column: 14, scope: !3268)
!3273 = !DILocation(line: 603, column: 4, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3241, file: !1, discriminator: 3)
!3275 = !DILocation(line: 610, column: 8, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 610, column: 8)
!3277 = !DILocation(line: 610, column: 15, scope: !3276)
!3278 = !DILocation(line: 610, column: 8, scope: !3241)
!3279 = !DILocation(line: 612, column: 9, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !1, line: 612, column: 9)
!3281 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 610, column: 20)
!3282 = !DILocation(line: 612, column: 18, scope: !3280)
!3283 = !DILocation(line: 612, column: 9, scope: !3281)
!3284 = !DILocation(line: 613, column: 6, scope: !3280)
!3285 = !DILocation(line: 615, column: 27, scope: !3281)
!3286 = !DILocation(line: 615, column: 31, scope: !3281)
!3287 = !DILocation(line: 615, column: 29, scope: !3281)
!3288 = !DILocation(line: 615, column: 11, scope: !3281)
!3289 = !DILocation(line: 615, column: 39, scope: !3281)
!3290 = !DILocation(line: 614, column: 5, scope: !3281)
!3291 = !DILocation(line: 614, column: 16, scope: !3281)
!3292 = !DILocation(line: 615, column: 9, scope: !3281)
!3293 = !DILocation(line: 616, column: 12, scope: !3281)
!3294 = !DILocation(line: 617, column: 14, scope: !3281)
!3295 = !DILocation(line: 618, column: 4, scope: !3281)
!3296 = !DILocation(line: 619, column: 8, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 619, column: 8)
!3298 = !DILocation(line: 619, column: 15, scope: !3297)
!3299 = !DILocation(line: 619, column: 8, scope: !3241)
!3300 = !DILocalVariable(name: "internal_attributes", scope: !3301, file: !1, line: 621, type: !329)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 619, column: 20)
!3302 = !DILocation(line: 621, column: 14, scope: !3301)
!3303 = !DILocation(line: 622, column: 9, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 622, column: 9)
!3305 = !DILocation(line: 622, column: 18, scope: !3304)
!3306 = !DILocation(line: 622, column: 9, scope: !3301)
!3307 = !DILocation(line: 623, column: 6, scope: !3304)
!3308 = !DILocation(line: 625, column: 27, scope: !3301)
!3309 = !DILocation(line: 625, column: 31, scope: !3301)
!3310 = !DILocation(line: 625, column: 29, scope: !3301)
!3311 = !DILocation(line: 625, column: 11, scope: !3301)
!3312 = !DILocation(line: 625, column: 9, scope: !3301)
!3313 = !DILocation(line: 627, column: 11, scope: !3301)
!3314 = !DILocation(line: 628, column: 12, scope: !3301)
!3315 = !DILocation(line: 629, column: 14, scope: !3301)
!3316 = !DILocation(line: 630, column: 4, scope: !3301)
!3317 = !DILocation(line: 631, column: 8, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 631, column: 8)
!3319 = !DILocation(line: 631, column: 15, scope: !3318)
!3320 = !DILocation(line: 631, column: 8, scope: !3241)
!3321 = !DILocalVariable(name: "external_attributes", scope: !3322, file: !1, line: 633, type: !329)
!3322 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 631, column: 20)
!3323 = !DILocation(line: 633, column: 14, scope: !3322)
!3324 = !DILocation(line: 634, column: 9, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3322, file: !1, line: 634, column: 9)
!3326 = !DILocation(line: 634, column: 18, scope: !3325)
!3327 = !DILocation(line: 634, column: 9, scope: !3322)
!3328 = !DILocation(line: 635, column: 6, scope: !3325)
!3329 = !DILocation(line: 637, column: 27, scope: !3322)
!3330 = !DILocation(line: 637, column: 31, scope: !3322)
!3331 = !DILocation(line: 637, column: 29, scope: !3322)
!3332 = !DILocation(line: 637, column: 11, scope: !3322)
!3333 = !DILocation(line: 637, column: 9, scope: !3322)
!3334 = !DILocation(line: 638, column: 9, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3322, file: !1, line: 638, column: 9)
!3336 = !DILocation(line: 638, column: 20, scope: !3335)
!3337 = !DILocation(line: 638, column: 27, scope: !3335)
!3338 = !DILocation(line: 638, column: 9, scope: !3322)
!3339 = !DILocation(line: 640, column: 12, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3335, file: !1, line: 638, column: 33)
!3341 = !DILocation(line: 640, column: 32, scope: !3340)
!3342 = !DILocation(line: 639, column: 6, scope: !3340)
!3343 = !DILocation(line: 639, column: 17, scope: !3340)
!3344 = !DILocation(line: 640, column: 10, scope: !3340)
!3345 = !DILocation(line: 641, column: 5, scope: !3340)
!3346 = !DILocation(line: 641, column: 16, scope: !3347)
!3347 = !DILexicalBlockFile(scope: !3348, file: !1, discriminator: 1)
!3348 = distinct !DILexicalBlock(scope: !3335, file: !1, line: 641, column: 16)
!3349 = !DILocation(line: 641, column: 27, scope: !3347)
!3350 = !DILocation(line: 641, column: 34, scope: !3347)
!3351 = !DILocation(line: 643, column: 19, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 643, column: 10)
!3353 = distinct !DILexicalBlock(scope: !3348, file: !1, line: 641, column: 40)
!3354 = !DILocation(line: 643, column: 39, scope: !3352)
!3355 = !DILocation(line: 643, column: 15, scope: !3352)
!3356 = !DILocation(line: 643, column: 10, scope: !3353)
!3357 = !DILocation(line: 644, column: 7, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3352, file: !1, line: 643, column: 48)
!3359 = !DILocation(line: 644, column: 18, scope: !3358)
!3360 = !DILocation(line: 644, column: 23, scope: !3358)
!3361 = !DILocation(line: 645, column: 6, scope: !3358)
!3362 = !DILocation(line: 646, column: 7, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3352, file: !1, line: 645, column: 13)
!3364 = !DILocation(line: 646, column: 18, scope: !3363)
!3365 = !DILocation(line: 646, column: 23, scope: !3363)
!3366 = !DILocation(line: 648, column: 19, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 648, column: 10)
!3368 = !DILocation(line: 648, column: 39, scope: !3367)
!3369 = !DILocation(line: 648, column: 15, scope: !3367)
!3370 = !DILocation(line: 648, column: 10, scope: !3353)
!3371 = !DILocation(line: 650, column: 7, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3367, file: !1, line: 648, column: 48)
!3373 = !DILocation(line: 650, column: 18, scope: !3372)
!3374 = !DILocation(line: 650, column: 23, scope: !3372)
!3375 = !DILocation(line: 651, column: 6, scope: !3372)
!3376 = !DILocation(line: 652, column: 5, scope: !3353)
!3377 = !DILocation(line: 653, column: 6, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3348, file: !1, line: 652, column: 12)
!3379 = !DILocation(line: 653, column: 17, scope: !3378)
!3380 = !DILocation(line: 653, column: 22, scope: !3378)
!3381 = !DILocation(line: 655, column: 12, scope: !3322)
!3382 = !DILocation(line: 656, column: 14, scope: !3322)
!3383 = !DILocation(line: 657, column: 4, scope: !3322)
!3384 = !DILocation(line: 658, column: 8, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 658, column: 8)
!3386 = !DILocation(line: 658, column: 15, scope: !3385)
!3387 = !DILocation(line: 658, column: 8, scope: !3241)
!3388 = !DILocalVariable(name: "comment_length", scope: !3389, file: !1, line: 660, type: !329)
!3389 = distinct !DILexicalBlock(scope: !3385, file: !1, line: 658, column: 20)
!3390 = !DILocation(line: 660, column: 14, scope: !3389)
!3391 = !DILocation(line: 661, column: 9, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 661, column: 9)
!3393 = !DILocation(line: 661, column: 18, scope: !3392)
!3394 = !DILocation(line: 661, column: 9, scope: !3389)
!3395 = !DILocation(line: 662, column: 6, scope: !3392)
!3396 = !DILocation(line: 664, column: 27, scope: !3389)
!3397 = !DILocation(line: 664, column: 31, scope: !3389)
!3398 = !DILocation(line: 664, column: 29, scope: !3389)
!3399 = !DILocation(line: 664, column: 11, scope: !3389)
!3400 = !DILocation(line: 664, column: 9, scope: !3389)
!3401 = !DILocation(line: 665, column: 12, scope: !3389)
!3402 = !DILocation(line: 666, column: 14, scope: !3389)
!3403 = !DILocation(line: 668, column: 9, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 668, column: 9)
!3405 = !DILocation(line: 668, column: 20, scope: !3404)
!3406 = !DILocation(line: 668, column: 18, scope: !3404)
!3407 = !DILocation(line: 668, column: 9, scope: !3389)
!3408 = !DILocation(line: 669, column: 6, scope: !3404)
!3409 = !DILocation(line: 671, column: 15, scope: !3389)
!3410 = !DILocation(line: 671, column: 12, scope: !3389)
!3411 = !DILocation(line: 672, column: 17, scope: !3389)
!3412 = !DILocation(line: 672, column: 14, scope: !3389)
!3413 = !DILocation(line: 673, column: 4, scope: !3389)
!3414 = !DILocation(line: 674, column: 4, scope: !3241)
!3415 = !DILocation(line: 683, column: 8, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 683, column: 8)
!3417 = !DILocation(line: 683, column: 17, scope: !3416)
!3418 = !DILocation(line: 683, column: 8, scope: !3024)
!3419 = !DILocation(line: 684, column: 38, scope: !3416)
!3420 = !DILocation(line: 684, column: 42, scope: !3416)
!3421 = !DILocation(line: 684, column: 40, scope: !3416)
!3422 = !DILocation(line: 684, column: 22, scope: !3416)
!3423 = !DILocation(line: 684, column: 5, scope: !3416)
!3424 = !DILocation(line: 684, column: 16, scope: !3416)
!3425 = !DILocation(line: 684, column: 20, scope: !3416)
!3426 = !DILocation(line: 685, column: 8, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 685, column: 8)
!3428 = !DILocation(line: 685, column: 17, scope: !3427)
!3429 = !DILocation(line: 685, column: 8, scope: !3024)
!3430 = !DILocation(line: 687, column: 25, scope: !3427)
!3431 = !DILocation(line: 687, column: 29, scope: !3427)
!3432 = !DILocation(line: 687, column: 27, scope: !3427)
!3433 = !DILocation(line: 687, column: 36, scope: !3427)
!3434 = !DILocation(line: 687, column: 9, scope: !3427)
!3435 = !DILocation(line: 686, column: 5, scope: !3427)
!3436 = !DILocation(line: 686, column: 16, scope: !3427)
!3437 = !DILocation(line: 686, column: 20, scope: !3427)
!3438 = !DILocation(line: 688, column: 4, scope: !3024)
!3439 = !DILocalVariable(name: "uidsize", scope: !3440, file: !1, line: 692, type: !23)
!3440 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 690, column: 3)
!3441 = !DILocation(line: 692, column: 8, scope: !3440)
!3442 = !DILocalVariable(name: "gidsize", scope: !3440, file: !1, line: 692, type: !23)
!3443 = !DILocation(line: 692, column: 21, scope: !3440)
!3444 = !DILocation(line: 695, column: 8, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3440, file: !1, line: 695, column: 8)
!3446 = !DILocation(line: 695, column: 17, scope: !3445)
!3447 = !DILocation(line: 695, column: 22, scope: !3445)
!3448 = !DILocation(line: 695, column: 27, scope: !3449)
!3449 = !DILexicalBlockFile(scope: !3445, file: !1, discriminator: 1)
!3450 = !DILocation(line: 695, column: 25, scope: !3449)
!3451 = !DILocation(line: 695, column: 35, scope: !3449)
!3452 = !DILocation(line: 695, column: 8, scope: !3449)
!3453 = !DILocation(line: 696, column: 9, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !1, line: 696, column: 9)
!3455 = distinct !DILexicalBlock(scope: !3445, file: !1, line: 695, column: 41)
!3456 = !DILocation(line: 696, column: 18, scope: !3454)
!3457 = !DILocation(line: 696, column: 9, scope: !3455)
!3458 = !DILocation(line: 698, column: 30, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3454, file: !1, line: 696, column: 24)
!3460 = !DILocation(line: 698, column: 36, scope: !3459)
!3461 = !DILocation(line: 698, column: 28, scope: !3459)
!3462 = !DILocation(line: 698, column: 23, scope: !3459)
!3463 = !DILocation(line: 698, column: 21, scope: !3459)
!3464 = !DILocation(line: 698, column: 14, scope: !3459)
!3465 = !DILocation(line: 699, column: 10, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3459, file: !1, line: 699, column: 10)
!3467 = !DILocation(line: 699, column: 18, scope: !3466)
!3468 = !DILocation(line: 699, column: 10, scope: !3459)
!3469 = !DILocation(line: 702, column: 15, scope: !3466)
!3470 = !DILocation(line: 702, column: 19, scope: !3466)
!3471 = !DILocation(line: 702, column: 17, scope: !3466)
!3472 = !DILocation(line: 702, column: 26, scope: !3466)
!3473 = !DILocation(line: 701, column: 11, scope: !3466)
!3474 = !DILocation(line: 700, column: 7, scope: !3466)
!3475 = !DILocation(line: 700, column: 18, scope: !3466)
!3476 = !DILocation(line: 700, column: 22, scope: !3466)
!3477 = !DILocation(line: 703, column: 15, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3466, file: !1, line: 703, column: 15)
!3479 = !DILocation(line: 703, column: 23, scope: !3478)
!3480 = !DILocation(line: 703, column: 28, scope: !3478)
!3481 = !DILocation(line: 703, column: 31, scope: !3482)
!3482 = !DILexicalBlockFile(scope: !3478, file: !1, discriminator: 1)
!3483 = !DILocation(line: 703, column: 40, scope: !3482)
!3484 = !DILocation(line: 703, column: 15, scope: !3482)
!3485 = !DILocation(line: 706, column: 15, scope: !3478)
!3486 = !DILocation(line: 706, column: 19, scope: !3478)
!3487 = !DILocation(line: 706, column: 17, scope: !3478)
!3488 = !DILocation(line: 706, column: 26, scope: !3478)
!3489 = !DILocation(line: 705, column: 11, scope: !3478)
!3490 = !DILocation(line: 704, column: 7, scope: !3478)
!3491 = !DILocation(line: 704, column: 18, scope: !3478)
!3492 = !DILocation(line: 704, column: 22, scope: !3478)
!3493 = !DILocation(line: 707, column: 5, scope: !3459)
!3494 = !DILocation(line: 708, column: 9, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3455, file: !1, line: 708, column: 9)
!3496 = !DILocation(line: 708, column: 26, scope: !3495)
!3497 = !DILocation(line: 708, column: 24, scope: !3495)
!3498 = !DILocation(line: 708, column: 34, scope: !3495)
!3499 = !DILocation(line: 708, column: 18, scope: !3495)
!3500 = !DILocation(line: 708, column: 9, scope: !3455)
!3501 = !DILocation(line: 710, column: 30, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3495, file: !1, line: 708, column: 40)
!3503 = !DILocation(line: 710, column: 36, scope: !3502)
!3504 = !DILocation(line: 710, column: 39, scope: !3502)
!3505 = !DILocation(line: 710, column: 38, scope: !3502)
!3506 = !DILocation(line: 710, column: 28, scope: !3502)
!3507 = !DILocation(line: 710, column: 23, scope: !3502)
!3508 = !DILocation(line: 710, column: 21, scope: !3502)
!3509 = !DILocation(line: 710, column: 14, scope: !3502)
!3510 = !DILocation(line: 711, column: 10, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3502, file: !1, line: 711, column: 10)
!3512 = !DILocation(line: 711, column: 18, scope: !3511)
!3513 = !DILocation(line: 711, column: 10, scope: !3502)
!3514 = !DILocation(line: 714, column: 15, scope: !3511)
!3515 = !DILocation(line: 714, column: 17, scope: !3511)
!3516 = !DILocation(line: 714, column: 16, scope: !3511)
!3517 = !DILocation(line: 714, column: 23, scope: !3511)
!3518 = !DILocation(line: 714, column: 26, scope: !3511)
!3519 = !DILocation(line: 714, column: 25, scope: !3511)
!3520 = !DILocation(line: 714, column: 33, scope: !3511)
!3521 = !DILocation(line: 713, column: 11, scope: !3511)
!3522 = !DILocation(line: 712, column: 7, scope: !3511)
!3523 = !DILocation(line: 712, column: 18, scope: !3511)
!3524 = !DILocation(line: 712, column: 22, scope: !3511)
!3525 = !DILocation(line: 715, column: 15, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3511, file: !1, line: 715, column: 15)
!3527 = !DILocation(line: 715, column: 23, scope: !3526)
!3528 = !DILocation(line: 715, column: 28, scope: !3526)
!3529 = !DILocation(line: 716, column: 10, scope: !3526)
!3530 = !DILocation(line: 716, column: 27, scope: !3526)
!3531 = !DILocation(line: 716, column: 25, scope: !3526)
!3532 = !DILocation(line: 716, column: 35, scope: !3526)
!3533 = !DILocation(line: 716, column: 19, scope: !3526)
!3534 = !DILocation(line: 715, column: 15, scope: !3535)
!3535 = !DILexicalBlockFile(scope: !3511, file: !1, discriminator: 1)
!3536 = !DILocation(line: 719, column: 15, scope: !3526)
!3537 = !DILocation(line: 719, column: 17, scope: !3526)
!3538 = !DILocation(line: 719, column: 16, scope: !3526)
!3539 = !DILocation(line: 719, column: 23, scope: !3526)
!3540 = !DILocation(line: 719, column: 26, scope: !3526)
!3541 = !DILocation(line: 719, column: 25, scope: !3526)
!3542 = !DILocation(line: 719, column: 33, scope: !3526)
!3543 = !DILocation(line: 718, column: 11, scope: !3526)
!3544 = !DILocation(line: 717, column: 7, scope: !3526)
!3545 = !DILocation(line: 717, column: 18, scope: !3526)
!3546 = !DILocation(line: 717, column: 22, scope: !3526)
!3547 = !DILocation(line: 720, column: 5, scope: !3502)
!3548 = !DILocation(line: 721, column: 4, scope: !3455)
!3549 = !DILocation(line: 722, column: 4, scope: !3440)
!3550 = !DILocation(line: 726, column: 10, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 726, column: 8)
!3552 = !DILocation(line: 726, column: 17, scope: !3551)
!3553 = !DILocation(line: 726, column: 8, scope: !3551)
!3554 = !DILocation(line: 726, column: 22, scope: !3551)
!3555 = !DILocation(line: 726, column: 29, scope: !3551)
!3556 = !DILocation(line: 726, column: 34, scope: !3557)
!3557 = !DILexicalBlockFile(scope: !3551, file: !1, discriminator: 1)
!3558 = !DILocation(line: 726, column: 41, scope: !3557)
!3559 = !DILocation(line: 726, column: 32, scope: !3557)
!3560 = !DILocation(line: 726, column: 46, scope: !3557)
!3561 = !DILocation(line: 726, column: 8, scope: !3557)
!3562 = !DILocation(line: 729, column: 25, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3551, file: !1, line: 726, column: 54)
!3564 = !DILocation(line: 729, column: 29, scope: !3563)
!3565 = !DILocation(line: 729, column: 27, scope: !3563)
!3566 = !DILocation(line: 729, column: 9, scope: !3563)
!3567 = !DILocation(line: 728, column: 5, scope: !3563)
!3568 = !DILocation(line: 728, column: 16, scope: !3563)
!3569 = !DILocation(line: 728, column: 26, scope: !3563)
!3570 = !DILocation(line: 728, column: 33, scope: !3563)
!3571 = !DILocation(line: 731, column: 39, scope: !3563)
!3572 = !DILocation(line: 731, column: 46, scope: !3563)
!3573 = !DILocation(line: 731, column: 37, scope: !3563)
!3574 = !DILocation(line: 731, column: 5, scope: !3563)
!3575 = !DILocation(line: 731, column: 16, scope: !3563)
!3576 = !DILocation(line: 731, column: 26, scope: !3563)
!3577 = !DILocation(line: 731, column: 35, scope: !3563)
!3578 = !DILocation(line: 734, column: 11, scope: !3563)
!3579 = !DILocation(line: 734, column: 18, scope: !3563)
!3580 = !DILocation(line: 734, column: 9, scope: !3563)
!3581 = !DILocation(line: 733, column: 5, scope: !3563)
!3582 = !DILocation(line: 733, column: 16, scope: !3563)
!3583 = !DILocation(line: 733, column: 26, scope: !3563)
!3584 = !DILocation(line: 733, column: 38, scope: !3563)
!3585 = !DILocation(line: 735, column: 4, scope: !3563)
!3586 = !DILocation(line: 736, column: 4, scope: !3024)
!3587 = !DILocation(line: 738, column: 4, scope: !3024)
!3588 = !DILocation(line: 740, column: 13, scope: !2989)
!3589 = !DILocation(line: 740, column: 10, scope: !2989)
!3590 = !DILocation(line: 435, column: 2, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !495, file: !1, discriminator: 2)
!3592 = !DILocation(line: 742, column: 6, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !495, file: !1, line: 742, column: 6)
!3594 = !DILocation(line: 742, column: 16, scope: !3593)
!3595 = !DILocation(line: 742, column: 13, scope: !3593)
!3596 = !DILocation(line: 742, column: 6, scope: !495)
!3597 = !DILocation(line: 743, column: 22, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3593, file: !1, line: 742, column: 30)
!3599 = !DILocation(line: 743, column: 25, scope: !3598)
!3600 = !DILocation(line: 745, column: 12, scope: !3598)
!3601 = !DILocation(line: 745, column: 25, scope: !3598)
!3602 = !DILocation(line: 745, column: 20, scope: !3598)
!3603 = !DILocation(line: 743, column: 3, scope: !3598)
!3604 = !DILocation(line: 746, column: 3, scope: !3598)
!3605 = !DILocation(line: 748, column: 2, scope: !495)
!3606 = !DILocation(line: 749, column: 1, scope: !495)
!3607 = !DILocalVariable(name: "compression", arg: 1, scope: !501, file: !1, line: 381, type: !504)
!3608 = !DILocation(line: 381, column: 28, scope: !501)
!3609 = !DILocalVariable(name: "i", scope: !501, file: !1, line: 385, type: !23)
!3610 = !DILocation(line: 385, column: 6, scope: !501)
!3611 = !DILocation(line: 387, column: 2, scope: !501)
!3612 = !DILocation(line: 387, column: 8, scope: !3613)
!3613 = !DILexicalBlockFile(scope: !501, file: !1, discriminator: 1)
!3614 = !DILocation(line: 387, column: 20, scope: !3613)
!3615 = !DILocation(line: 387, column: 25, scope: !3613)
!3616 = !DILocation(line: 387, column: 28, scope: !3617)
!3617 = !DILexicalBlockFile(scope: !501, file: !1, discriminator: 2)
!3618 = !DILocation(line: 387, column: 30, scope: !3617)
!3619 = !DILocation(line: 387, column: 2, scope: !3620)
!3620 = !DILexicalBlockFile(scope: !501, file: !1, discriminator: 3)
!3621 = !DILocation(line: 388, column: 27, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !1, line: 388, column: 7)
!3623 = distinct !DILexicalBlock(scope: !501, file: !1, line: 387, column: 57)
!3624 = !DILocation(line: 388, column: 7, scope: !3622)
!3625 = !DILocation(line: 388, column: 30, scope: !3622)
!3626 = !DILocation(line: 388, column: 36, scope: !3622)
!3627 = !DILocation(line: 388, column: 33, scope: !3622)
!3628 = !DILocation(line: 388, column: 7, scope: !3623)
!3629 = !DILocation(line: 389, column: 31, scope: !3622)
!3630 = !DILocation(line: 389, column: 11, scope: !3622)
!3631 = !DILocation(line: 389, column: 34, scope: !3622)
!3632 = !DILocation(line: 389, column: 4, scope: !3622)
!3633 = !DILocation(line: 390, column: 4, scope: !3623)
!3634 = !DILocation(line: 387, column: 2, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !501, file: !1, discriminator: 4)
!3636 = !DILocation(line: 392, column: 2, scope: !501)
!3637 = !DILocation(line: 393, column: 1, scope: !501)
!3638 = !DILocalVariable(name: "pp", arg: 1, scope: !498, file: !486, line: 131, type: !43)
!3639 = !DILocation(line: 131, column: 29, scope: !498)
!3640 = !DILocalVariable(name: "p", scope: !498, file: !486, line: 133, type: !466)
!3641 = !DILocation(line: 133, column: 23, scope: !498)
!3642 = !DILocation(line: 133, column: 50, scope: !498)
!3643 = !DILocation(line: 135, column: 37, scope: !498)
!3644 = !DILocation(line: 135, column: 39, scope: !498)
!3645 = !DILocation(line: 135, column: 21, scope: !498)
!3646 = !DILocation(line: 135, column: 11, scope: !498)
!3647 = !DILocation(line: 135, column: 44, scope: !498)
!3648 = !DILocation(line: 135, column: 69, scope: !498)
!3649 = !DILocation(line: 135, column: 53, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !498, file: !486, discriminator: 1)
!3651 = !DILocation(line: 135, column: 53, scope: !498)
!3652 = !DILocation(line: 135, column: 51, scope: !498)
!3653 = !DILocation(line: 135, column: 2, scope: !498)
!3654 = !DILocalVariable(name: "a", arg: 1, scope: !506, file: !1, line: 1485, type: !4)
!3655 = !DILocation(line: 1485, column: 45, scope: !506)
!3656 = !DILocalVariable(name: "zip", scope: !506, file: !1, line: 1487, type: !292)
!3657 = !DILocation(line: 1487, column: 14, scope: !506)
!3658 = !DILocation(line: 1487, column: 35, scope: !506)
!3659 = !DILocation(line: 1487, column: 38, scope: !506)
!3660 = !DILocation(line: 1487, column: 46, scope: !506)
!3661 = !DILocation(line: 1487, column: 20, scope: !506)
!3662 = !DILocalVariable(name: "p", scope: !506, file: !1, line: 1488, type: !80)
!3663 = !DILocation(line: 1488, column: 14, scope: !506)
!3664 = !DILocalVariable(name: "remaining_size", scope: !506, file: !1, line: 1489, type: !13)
!3665 = !DILocation(line: 1489, column: 15, scope: !506)
!3666 = !DILocalVariable(name: "ts", scope: !506, file: !1, line: 1490, type: !13)
!3667 = !DILocation(line: 1490, column: 15, scope: !506)
!3668 = !DILocation(line: 1495, column: 27, scope: !506)
!3669 = !DILocation(line: 1495, column: 6, scope: !506)
!3670 = !DILocation(line: 1495, column: 4, scope: !506)
!3671 = !DILocation(line: 1496, column: 6, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1496, column: 6)
!3673 = !DILocation(line: 1496, column: 8, scope: !3672)
!3674 = !DILocation(line: 1496, column: 6, scope: !506)
!3675 = !DILocation(line: 1497, column: 3, scope: !3672)
!3676 = !DILocation(line: 1498, column: 7, scope: !506)
!3677 = !DILocation(line: 1498, column: 12, scope: !506)
!3678 = !DILocation(line: 1498, column: 5, scope: !506)
!3679 = !DILocation(line: 1499, column: 33, scope: !506)
!3680 = !DILocation(line: 1499, column: 17, scope: !506)
!3681 = !DILocation(line: 1499, column: 2, scope: !506)
!3682 = !DILocation(line: 1499, column: 7, scope: !506)
!3683 = !DILocation(line: 1499, column: 15, scope: !506)
!3684 = !DILocation(line: 1500, column: 25, scope: !506)
!3685 = !DILocation(line: 1500, column: 2, scope: !506)
!3686 = !DILocation(line: 1501, column: 6, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1501, column: 6)
!3688 = !DILocation(line: 1501, column: 11, scope: !3687)
!3689 = !DILocation(line: 1501, column: 16, scope: !3687)
!3690 = !DILocation(line: 1501, column: 9, scope: !3687)
!3691 = !DILocation(line: 1501, column: 6, scope: !506)
!3692 = !DILocation(line: 1502, column: 8, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3687, file: !1, line: 1501, column: 25)
!3694 = !DILocation(line: 1502, column: 13, scope: !3693)
!3695 = !DILocation(line: 1502, column: 3, scope: !3693)
!3696 = !DILocation(line: 1503, column: 3, scope: !3693)
!3697 = !DILocation(line: 1503, column: 8, scope: !3693)
!3698 = !DILocation(line: 1503, column: 11, scope: !3693)
!3699 = !DILocation(line: 1504, column: 2, scope: !3693)
!3700 = !DILocation(line: 1505, column: 27, scope: !506)
!3701 = !DILocation(line: 1505, column: 30, scope: !506)
!3702 = !DILocation(line: 1505, column: 35, scope: !506)
!3703 = !DILocation(line: 1505, column: 6, scope: !506)
!3704 = !DILocation(line: 1505, column: 4, scope: !506)
!3705 = !DILocation(line: 1506, column: 6, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1506, column: 6)
!3707 = !DILocation(line: 1506, column: 8, scope: !3706)
!3708 = !DILocation(line: 1506, column: 6, scope: !506)
!3709 = !DILocation(line: 1507, column: 3, scope: !3706)
!3710 = !DILocation(line: 1508, column: 6, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1508, column: 6)
!3712 = !DILocation(line: 1508, column: 11, scope: !3711)
!3713 = !DILocation(line: 1508, column: 14, scope: !3711)
!3714 = !DILocation(line: 1508, column: 6, scope: !506)
!3715 = !DILocation(line: 1509, column: 20, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3711, file: !1, line: 1508, column: 23)
!3717 = !DILocation(line: 1509, column: 25, scope: !3716)
!3718 = !DILocation(line: 1509, column: 13, scope: !3716)
!3719 = !DILocation(line: 1509, column: 3, scope: !3716)
!3720 = !DILocation(line: 1509, column: 8, scope: !3716)
!3721 = !DILocation(line: 1509, column: 11, scope: !3716)
!3722 = !DILocation(line: 1510, column: 7, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3716, file: !1, line: 1510, column: 7)
!3724 = !DILocation(line: 1510, column: 12, scope: !3723)
!3725 = !DILocation(line: 1510, column: 15, scope: !3723)
!3726 = !DILocation(line: 1510, column: 7, scope: !3716)
!3727 = !DILocation(line: 1511, column: 4, scope: !3723)
!3728 = !DILocation(line: 1512, column: 2, scope: !3716)
!3729 = !DILocation(line: 1513, column: 9, scope: !506)
!3730 = !DILocation(line: 1513, column: 14, scope: !506)
!3731 = !DILocation(line: 1513, column: 18, scope: !506)
!3732 = !DILocation(line: 1513, column: 21, scope: !506)
!3733 = !DILocation(line: 1513, column: 26, scope: !506)
!3734 = !DILocation(line: 1513, column: 2, scope: !506)
!3735 = !DILocation(line: 1514, column: 25, scope: !506)
!3736 = !DILocation(line: 1514, column: 28, scope: !506)
!3737 = !DILocation(line: 1514, column: 33, scope: !506)
!3738 = !DILocation(line: 1514, column: 2, scope: !506)
!3739 = !DILocation(line: 1519, column: 27, scope: !506)
!3740 = !DILocation(line: 1519, column: 6, scope: !506)
!3741 = !DILocation(line: 1519, column: 4, scope: !506)
!3742 = !DILocation(line: 1520, column: 6, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1520, column: 6)
!3744 = !DILocation(line: 1520, column: 8, scope: !3743)
!3745 = !DILocation(line: 1520, column: 6, scope: !506)
!3746 = !DILocation(line: 1521, column: 3, scope: !3743)
!3747 = !DILocation(line: 1522, column: 35, scope: !506)
!3748 = !DILocation(line: 1522, column: 19, scope: !506)
!3749 = !DILocation(line: 1522, column: 17, scope: !506)
!3750 = !DILocation(line: 1523, column: 6, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1523, column: 6)
!3752 = !DILocation(line: 1523, column: 21, scope: !3751)
!3753 = !DILocation(line: 1523, column: 26, scope: !3751)
!3754 = !DILocation(line: 1523, column: 29, scope: !3755)
!3755 = !DILexicalBlockFile(scope: !3751, file: !1, discriminator: 1)
!3756 = !DILocation(line: 1523, column: 44, scope: !3755)
!3757 = !DILocation(line: 1523, column: 6, scope: !3755)
!3758 = !DILocation(line: 1524, column: 3, scope: !3751)
!3759 = !DILocation(line: 1527, column: 22, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1527, column: 6)
!3761 = !DILocation(line: 1527, column: 23, scope: !3760)
!3762 = !DILocation(line: 1527, column: 6, scope: !3760)
!3763 = !DILocation(line: 1527, column: 27, scope: !3760)
!3764 = !DILocation(line: 1527, column: 6, scope: !506)
!3765 = !DILocation(line: 1528, column: 22, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3760, file: !1, line: 1527, column: 33)
!3767 = !DILocation(line: 1528, column: 25, scope: !3766)
!3768 = !DILocation(line: 1531, column: 23, scope: !3766)
!3769 = !DILocation(line: 1531, column: 24, scope: !3766)
!3770 = !DILocation(line: 1531, column: 7, scope: !3766)
!3771 = !DILocation(line: 1528, column: 3, scope: !3766)
!3772 = !DILocation(line: 1532, column: 3, scope: !3766)
!3773 = !DILocation(line: 1538, column: 32, scope: !506)
!3774 = !DILocation(line: 1538, column: 33, scope: !506)
!3775 = !DILocation(line: 1538, column: 16, scope: !506)
!3776 = !DILocation(line: 1538, column: 2, scope: !506)
!3777 = !DILocation(line: 1538, column: 7, scope: !506)
!3778 = !DILocation(line: 1538, column: 14, scope: !506)
!3779 = !DILocation(line: 1539, column: 10, scope: !506)
!3780 = !DILocation(line: 1539, column: 15, scope: !506)
!3781 = !DILocation(line: 1539, column: 2, scope: !506)
!3782 = !DILocation(line: 1552, column: 3, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1539, column: 23)
!3784 = !DILocation(line: 1554, column: 22, scope: !3783)
!3785 = !DILocation(line: 1554, column: 25, scope: !3783)
!3786 = !DILocation(line: 1556, column: 43, scope: !3783)
!3787 = !DILocation(line: 1556, column: 48, scope: !3783)
!3788 = !DILocation(line: 1554, column: 3, scope: !3783)
!3789 = !DILocation(line: 1557, column: 3, scope: !3783)
!3790 = !DILocation(line: 1563, column: 33, scope: !506)
!3791 = !DILocation(line: 1563, column: 34, scope: !506)
!3792 = !DILocation(line: 1563, column: 17, scope: !506)
!3793 = !DILocation(line: 1563, column: 2, scope: !506)
!3794 = !DILocation(line: 1563, column: 7, scope: !506)
!3795 = !DILocation(line: 1563, column: 15, scope: !506)
!3796 = !DILocation(line: 1568, column: 31, scope: !506)
!3797 = !DILocation(line: 1568, column: 32, scope: !506)
!3798 = !DILocation(line: 1568, column: 15, scope: !506)
!3799 = !DILocation(line: 1568, column: 2, scope: !506)
!3800 = !DILocation(line: 1568, column: 7, scope: !506)
!3801 = !DILocation(line: 1568, column: 13, scope: !506)
!3802 = !DILocation(line: 1569, column: 10, scope: !506)
!3803 = !DILocation(line: 1569, column: 15, scope: !506)
!3804 = !DILocation(line: 1569, column: 21, scope: !506)
!3805 = !DILocation(line: 1569, column: 2, scope: !506)
!3806 = !DILocation(line: 1573, column: 3, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1569, column: 31)
!3808 = !DILocation(line: 1575, column: 22, scope: !3807)
!3809 = !DILocation(line: 1575, column: 25, scope: !3807)
!3810 = !DILocation(line: 1577, column: 38, scope: !3807)
!3811 = !DILocation(line: 1577, column: 43, scope: !3807)
!3812 = !DILocation(line: 1575, column: 3, scope: !3807)
!3813 = !DILocation(line: 1578, column: 3, scope: !3807)
!3814 = !DILocation(line: 1580, column: 7, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1580, column: 6)
!3816 = !DILocation(line: 1580, column: 12, scope: !3815)
!3817 = !DILocation(line: 1580, column: 18, scope: !3815)
!3818 = !DILocation(line: 1580, column: 28, scope: !3815)
!3819 = !DILocation(line: 1580, column: 33, scope: !3815)
!3820 = !DILocation(line: 1581, column: 7, scope: !3815)
!3821 = !DILocation(line: 1581, column: 12, scope: !3815)
!3822 = !DILocation(line: 1581, column: 18, scope: !3815)
!3823 = !DILocation(line: 1581, column: 28, scope: !3815)
!3824 = !DILocation(line: 1580, column: 6, scope: !3825)
!3825 = !DILexicalBlockFile(scope: !506, file: !1, discriminator: 1)
!3826 = !DILocation(line: 1582, column: 22, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3815, file: !1, line: 1581, column: 39)
!3828 = !DILocation(line: 1582, column: 25, scope: !3827)
!3829 = !DILocation(line: 1584, column: 38, scope: !3827)
!3830 = !DILocation(line: 1584, column: 43, scope: !3827)
!3831 = !DILocation(line: 1582, column: 3, scope: !3827)
!3832 = !DILocation(line: 1585, column: 3, scope: !3827)
!3833 = !DILocation(line: 1591, column: 7, scope: !506)
!3834 = !DILocation(line: 1591, column: 12, scope: !506)
!3835 = !DILocation(line: 1591, column: 5, scope: !506)
!3836 = !DILocation(line: 1592, column: 34, scope: !506)
!3837 = !DILocation(line: 1592, column: 35, scope: !506)
!3838 = !DILocation(line: 1592, column: 18, scope: !506)
!3839 = !DILocation(line: 1592, column: 2, scope: !506)
!3840 = !DILocation(line: 1592, column: 7, scope: !506)
!3841 = !DILocation(line: 1592, column: 16, scope: !506)
!3842 = !DILocation(line: 1593, column: 25, scope: !506)
!3843 = !DILocation(line: 1593, column: 2, scope: !506)
!3844 = !DILocation(line: 1594, column: 7, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1594, column: 6)
!3846 = !DILocation(line: 1594, column: 12, scope: !3845)
!3847 = !DILocation(line: 1594, column: 21, scope: !3845)
!3848 = !DILocation(line: 1594, column: 28, scope: !3845)
!3849 = !DILocation(line: 1594, column: 33, scope: !3845)
!3850 = !DILocation(line: 1595, column: 7, scope: !3845)
!3851 = !DILocation(line: 1595, column: 12, scope: !3845)
!3852 = !DILocation(line: 1595, column: 21, scope: !3845)
!3853 = !DILocation(line: 1595, column: 29, scope: !3845)
!3854 = !DILocation(line: 1595, column: 27, scope: !3845)
!3855 = !DILocation(line: 1595, column: 44, scope: !3845)
!3856 = !DILocation(line: 1596, column: 7, scope: !3845)
!3857 = !DILocation(line: 1596, column: 12, scope: !3845)
!3858 = !DILocation(line: 1596, column: 21, scope: !3845)
!3859 = !DILocation(line: 1596, column: 29, scope: !3845)
!3860 = !DILocation(line: 1596, column: 34, scope: !3845)
!3861 = !DILocation(line: 1596, column: 27, scope: !3845)
!3862 = !DILocation(line: 1594, column: 6, scope: !3825)
!3863 = !DILocation(line: 1597, column: 3, scope: !3845)
!3864 = !DILocation(line: 1599, column: 6, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1599, column: 6)
!3866 = !DILocation(line: 1599, column: 11, scope: !3865)
!3867 = !DILocation(line: 1599, column: 16, scope: !3865)
!3868 = !DILocation(line: 1599, column: 9, scope: !3865)
!3869 = !DILocation(line: 1599, column: 6, scope: !506)
!3870 = !DILocation(line: 1600, column: 8, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3865, file: !1, line: 1599, column: 26)
!3872 = !DILocation(line: 1600, column: 13, scope: !3871)
!3873 = !DILocation(line: 1600, column: 3, scope: !3871)
!3874 = !DILocation(line: 1601, column: 3, scope: !3871)
!3875 = !DILocation(line: 1601, column: 8, scope: !3871)
!3876 = !DILocation(line: 1601, column: 12, scope: !3871)
!3877 = !DILocation(line: 1602, column: 2, scope: !3871)
!3878 = !DILocation(line: 1603, column: 27, scope: !506)
!3879 = !DILocation(line: 1603, column: 30, scope: !506)
!3880 = !DILocation(line: 1603, column: 35, scope: !506)
!3881 = !DILocation(line: 1603, column: 6, scope: !506)
!3882 = !DILocation(line: 1603, column: 4, scope: !506)
!3883 = !DILocation(line: 1604, column: 6, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1604, column: 6)
!3885 = !DILocation(line: 1604, column: 8, scope: !3884)
!3886 = !DILocation(line: 1604, column: 6, scope: !506)
!3887 = !DILocation(line: 1605, column: 3, scope: !3884)
!3888 = !DILocation(line: 1606, column: 6, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1606, column: 6)
!3890 = !DILocation(line: 1606, column: 11, scope: !3889)
!3891 = !DILocation(line: 1606, column: 15, scope: !3889)
!3892 = !DILocation(line: 1606, column: 6, scope: !506)
!3893 = !DILocation(line: 1607, column: 21, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3889, file: !1, line: 1606, column: 24)
!3895 = !DILocation(line: 1607, column: 26, scope: !3894)
!3896 = !DILocation(line: 1607, column: 14, scope: !3894)
!3897 = !DILocation(line: 1607, column: 3, scope: !3894)
!3898 = !DILocation(line: 1607, column: 8, scope: !3894)
!3899 = !DILocation(line: 1607, column: 12, scope: !3894)
!3900 = !DILocation(line: 1608, column: 7, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3894, file: !1, line: 1608, column: 7)
!3902 = !DILocation(line: 1608, column: 12, scope: !3901)
!3903 = !DILocation(line: 1608, column: 16, scope: !3901)
!3904 = !DILocation(line: 1608, column: 7, scope: !3894)
!3905 = !DILocation(line: 1609, column: 4, scope: !3901)
!3906 = !DILocation(line: 1610, column: 2, scope: !3894)
!3907 = !DILocation(line: 1611, column: 9, scope: !506)
!3908 = !DILocation(line: 1611, column: 14, scope: !506)
!3909 = !DILocation(line: 1611, column: 19, scope: !506)
!3910 = !DILocation(line: 1611, column: 22, scope: !506)
!3911 = !DILocation(line: 1611, column: 27, scope: !506)
!3912 = !DILocation(line: 1611, column: 2, scope: !506)
!3913 = !DILocation(line: 1612, column: 25, scope: !506)
!3914 = !DILocation(line: 1612, column: 28, scope: !506)
!3915 = !DILocation(line: 1612, column: 33, scope: !506)
!3916 = !DILocation(line: 1612, column: 2, scope: !506)
!3917 = !DILocation(line: 1617, column: 27, scope: !506)
!3918 = !DILocation(line: 1617, column: 6, scope: !506)
!3919 = !DILocation(line: 1617, column: 4, scope: !506)
!3920 = !DILocation(line: 1618, column: 6, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1618, column: 6)
!3922 = !DILocation(line: 1618, column: 8, scope: !3921)
!3923 = !DILocation(line: 1618, column: 6, scope: !506)
!3924 = !DILocation(line: 1619, column: 3, scope: !3921)
!3925 = !DILocation(line: 1621, column: 22, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1621, column: 6)
!3927 = !DILocation(line: 1621, column: 6, scope: !3926)
!3928 = !DILocation(line: 1621, column: 25, scope: !3926)
!3929 = !DILocation(line: 1621, column: 6, scope: !506)
!3930 = !DILocation(line: 1622, column: 3, scope: !3926)
!3931 = !DILocation(line: 1623, column: 25, scope: !506)
!3932 = !DILocation(line: 1623, column: 2, scope: !506)
!3933 = !DILocation(line: 1628, column: 27, scope: !506)
!3934 = !DILocation(line: 1628, column: 6, scope: !506)
!3935 = !DILocation(line: 1628, column: 4, scope: !506)
!3936 = !DILocation(line: 1629, column: 6, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1629, column: 6)
!3938 = !DILocation(line: 1629, column: 8, scope: !3937)
!3939 = !DILocation(line: 1629, column: 6, scope: !506)
!3940 = !DILocation(line: 1630, column: 3, scope: !3937)
!3941 = !DILocation(line: 1631, column: 7, scope: !506)
!3942 = !DILocation(line: 1631, column: 12, scope: !506)
!3943 = !DILocation(line: 1631, column: 5, scope: !506)
!3944 = !DILocation(line: 1632, column: 32, scope: !506)
!3945 = !DILocation(line: 1632, column: 16, scope: !506)
!3946 = !DILocation(line: 1632, column: 2, scope: !506)
!3947 = !DILocation(line: 1632, column: 7, scope: !506)
!3948 = !DILocation(line: 1632, column: 14, scope: !506)
!3949 = !DILocation(line: 1633, column: 25, scope: !506)
!3950 = !DILocation(line: 1633, column: 2, scope: !506)
!3951 = !DILocation(line: 1634, column: 7, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1634, column: 6)
!3953 = !DILocation(line: 1634, column: 12, scope: !3952)
!3954 = !DILocation(line: 1634, column: 19, scope: !3952)
!3955 = !DILocation(line: 1634, column: 27, scope: !3952)
!3956 = !DILocation(line: 1634, column: 32, scope: !3952)
!3957 = !DILocation(line: 1635, column: 7, scope: !3952)
!3958 = !DILocation(line: 1635, column: 12, scope: !3952)
!3959 = !DILocation(line: 1635, column: 23, scope: !3952)
!3960 = !DILocation(line: 1635, column: 28, scope: !3952)
!3961 = !DILocation(line: 1635, column: 21, scope: !3952)
!3962 = !DILocation(line: 1635, column: 35, scope: !3952)
!3963 = !DILocation(line: 1635, column: 43, scope: !3952)
!3964 = !DILocation(line: 1635, column: 41, scope: !3952)
!3965 = !DILocation(line: 1635, column: 58, scope: !3952)
!3966 = !DILocation(line: 1636, column: 7, scope: !3952)
!3967 = !DILocation(line: 1636, column: 12, scope: !3952)
!3968 = !DILocation(line: 1636, column: 23, scope: !3952)
!3969 = !DILocation(line: 1636, column: 28, scope: !3952)
!3970 = !DILocation(line: 1636, column: 21, scope: !3952)
!3971 = !DILocation(line: 1636, column: 35, scope: !3952)
!3972 = !DILocation(line: 1636, column: 44, scope: !3952)
!3973 = !DILocation(line: 1636, column: 49, scope: !3952)
!3974 = !DILocation(line: 1636, column: 60, scope: !3952)
!3975 = !DILocation(line: 1636, column: 65, scope: !3952)
!3976 = !DILocation(line: 1636, column: 58, scope: !3952)
!3977 = !DILocation(line: 1636, column: 41, scope: !3952)
!3978 = !DILocation(line: 1634, column: 6, scope: !3825)
!3979 = !DILocation(line: 1637, column: 3, scope: !3952)
!3980 = !DILocation(line: 1638, column: 6, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1638, column: 6)
!3982 = !DILocation(line: 1638, column: 11, scope: !3981)
!3983 = !DILocation(line: 1638, column: 16, scope: !3981)
!3984 = !DILocation(line: 1638, column: 9, scope: !3981)
!3985 = !DILocation(line: 1638, column: 6, scope: !506)
!3986 = !DILocation(line: 1639, column: 8, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3981, file: !1, line: 1638, column: 24)
!3988 = !DILocation(line: 1639, column: 13, scope: !3987)
!3989 = !DILocation(line: 1639, column: 3, scope: !3987)
!3990 = !DILocation(line: 1640, column: 3, scope: !3987)
!3991 = !DILocation(line: 1640, column: 8, scope: !3987)
!3992 = !DILocation(line: 1640, column: 15, scope: !3987)
!3993 = !DILocation(line: 1641, column: 2, scope: !3987)
!3994 = !DILocation(line: 1642, column: 27, scope: !506)
!3995 = !DILocation(line: 1642, column: 30, scope: !506)
!3996 = !DILocation(line: 1642, column: 35, scope: !506)
!3997 = !DILocation(line: 1642, column: 6, scope: !506)
!3998 = !DILocation(line: 1642, column: 4, scope: !506)
!3999 = !DILocation(line: 1643, column: 6, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1643, column: 6)
!4001 = !DILocation(line: 1643, column: 8, scope: !4000)
!4002 = !DILocation(line: 1643, column: 6, scope: !506)
!4003 = !DILocation(line: 1644, column: 3, scope: !4000)
!4004 = !DILocation(line: 1645, column: 6, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1645, column: 6)
!4006 = !DILocation(line: 1645, column: 11, scope: !4005)
!4007 = !DILocation(line: 1645, column: 18, scope: !4005)
!4008 = !DILocation(line: 1645, column: 6, scope: !506)
!4009 = !DILocation(line: 1646, column: 24, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4005, file: !1, line: 1645, column: 27)
!4011 = !DILocation(line: 1646, column: 29, scope: !4010)
!4012 = !DILocation(line: 1646, column: 17, scope: !4010)
!4013 = !DILocation(line: 1646, column: 3, scope: !4010)
!4014 = !DILocation(line: 1646, column: 8, scope: !4010)
!4015 = !DILocation(line: 1646, column: 15, scope: !4010)
!4016 = !DILocation(line: 1647, column: 7, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4010, file: !1, line: 1647, column: 7)
!4018 = !DILocation(line: 1647, column: 12, scope: !4017)
!4019 = !DILocation(line: 1647, column: 19, scope: !4017)
!4020 = !DILocation(line: 1647, column: 7, scope: !4010)
!4021 = !DILocation(line: 1648, column: 4, scope: !4017)
!4022 = !DILocation(line: 1649, column: 2, scope: !4010)
!4023 = !DILocation(line: 1650, column: 9, scope: !506)
!4024 = !DILocation(line: 1650, column: 14, scope: !506)
!4025 = !DILocation(line: 1650, column: 22, scope: !506)
!4026 = !DILocation(line: 1650, column: 25, scope: !506)
!4027 = !DILocation(line: 1650, column: 30, scope: !506)
!4028 = !DILocation(line: 1650, column: 2, scope: !506)
!4029 = !DILocation(line: 1651, column: 25, scope: !506)
!4030 = !DILocation(line: 1651, column: 28, scope: !506)
!4031 = !DILocation(line: 1651, column: 33, scope: !506)
!4032 = !DILocation(line: 1651, column: 2, scope: !506)
!4033 = !DILocation(line: 1653, column: 27, scope: !506)
!4034 = !DILocation(line: 1653, column: 6, scope: !506)
!4035 = !DILocation(line: 1653, column: 4, scope: !506)
!4036 = !DILocation(line: 1654, column: 6, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !506, file: !1, line: 1654, column: 6)
!4038 = !DILocation(line: 1654, column: 8, scope: !4037)
!4039 = !DILocation(line: 1654, column: 6, scope: !506)
!4040 = !DILocation(line: 1655, column: 3, scope: !4037)
!4041 = !DILocation(line: 1656, column: 33, scope: !506)
!4042 = !DILocation(line: 1656, column: 17, scope: !506)
!4043 = !DILocation(line: 1656, column: 2, scope: !506)
!4044 = !DILocation(line: 1656, column: 7, scope: !506)
!4045 = !DILocation(line: 1656, column: 15, scope: !506)
!4046 = !DILocation(line: 1657, column: 25, scope: !506)
!4047 = !DILocation(line: 1657, column: 2, scope: !506)
!4048 = !DILocation(line: 1661, column: 21, scope: !506)
!4049 = !DILocation(line: 1661, column: 24, scope: !506)
!4050 = !DILocation(line: 1661, column: 2, scope: !506)
!4051 = !DILocation(line: 1663, column: 2, scope: !506)
!4052 = !DILocation(line: 1665, column: 21, scope: !506)
!4053 = !DILocation(line: 1665, column: 24, scope: !506)
!4054 = !DILocation(line: 1665, column: 2, scope: !506)
!4055 = !DILocation(line: 1667, column: 2, scope: !506)
!4056 = !DILocation(line: 1669, column: 21, scope: !506)
!4057 = !DILocation(line: 1669, column: 24, scope: !506)
!4058 = !DILocation(line: 1669, column: 2, scope: !506)
!4059 = !DILocation(line: 1671, column: 2, scope: !506)
!4060 = !DILocation(line: 1673, column: 21, scope: !506)
!4061 = !DILocation(line: 1673, column: 24, scope: !506)
!4062 = !DILocation(line: 1673, column: 2, scope: !506)
!4063 = !DILocation(line: 1675, column: 2, scope: !506)
!4064 = !DILocation(line: 1676, column: 1, scope: !506)
!4065 = !DILocalVariable(name: "a", arg: 1, scope: !507, file: !1, line: 1770, type: !4)
!4066 = !DILocation(line: 1770, column: 49, scope: !507)
!4067 = !DILocalVariable(name: "zip", scope: !507, file: !1, line: 1772, type: !292)
!4068 = !DILocation(line: 1772, column: 14, scope: !507)
!4069 = !DILocation(line: 1772, column: 35, scope: !507)
!4070 = !DILocation(line: 1772, column: 38, scope: !507)
!4071 = !DILocation(line: 1772, column: 46, scope: !507)
!4072 = !DILocation(line: 1772, column: 20, scope: !507)
!4073 = !DILocalVariable(name: "p", scope: !507, file: !1, line: 1773, type: !43)
!4074 = !DILocation(line: 1773, column: 14, scope: !507)
!4075 = !DILocalVariable(name: "pv", scope: !507, file: !1, line: 1774, type: !469)
!4076 = !DILocation(line: 1774, column: 17, scope: !507)
!4077 = !DILocalVariable(name: "key_len", scope: !507, file: !1, line: 1775, type: !45)
!4078 = !DILocation(line: 1775, column: 9, scope: !507)
!4079 = !DILocalVariable(name: "salt_len", scope: !507, file: !1, line: 1775, type: !45)
!4080 = !DILocation(line: 1775, column: 18, scope: !507)
!4081 = !DILocalVariable(name: "derived_key", scope: !507, file: !1, line: 1776, type: !4082)
!4082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 528, align: 8, elements: !4083)
!4083 = !{!4084}
!4084 = !DISubrange(count: 66)
!4085 = !DILocation(line: 1776, column: 10, scope: !507)
!4086 = !DILocalVariable(name: "retry", scope: !507, file: !1, line: 1777, type: !23)
!4087 = !DILocation(line: 1777, column: 6, scope: !507)
!4088 = !DILocalVariable(name: "r", scope: !507, file: !1, line: 1778, type: !23)
!4089 = !DILocation(line: 1778, column: 6, scope: !507)
!4090 = !DILocation(line: 1780, column: 6, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !507, file: !1, line: 1780, column: 6)
!4092 = !DILocation(line: 1780, column: 11, scope: !4091)
!4093 = !DILocation(line: 1780, column: 22, scope: !4091)
!4094 = !DILocation(line: 1780, column: 25, scope: !4095)
!4095 = !DILexicalBlockFile(scope: !4091, file: !1, discriminator: 1)
!4096 = !DILocation(line: 1780, column: 30, scope: !4095)
!4097 = !DILocation(line: 1780, column: 6, scope: !4095)
!4098 = !DILocation(line: 1781, column: 3, scope: !4091)
!4099 = !DILocation(line: 1783, column: 10, scope: !507)
!4100 = !DILocation(line: 1783, column: 15, scope: !507)
!4101 = !DILocation(line: 1783, column: 22, scope: !507)
!4102 = !DILocation(line: 1783, column: 32, scope: !507)
!4103 = !DILocation(line: 1783, column: 2, scope: !507)
!4104 = !DILocation(line: 1784, column: 19, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !507, file: !1, line: 1783, column: 42)
!4106 = !DILocation(line: 1784, column: 33, scope: !4105)
!4107 = !DILocation(line: 1784, column: 39, scope: !4105)
!4108 = !DILocation(line: 1785, column: 19, scope: !4105)
!4109 = !DILocation(line: 1785, column: 33, scope: !4105)
!4110 = !DILocation(line: 1785, column: 39, scope: !4105)
!4111 = !DILocation(line: 1786, column: 19, scope: !4105)
!4112 = !DILocation(line: 1786, column: 33, scope: !4105)
!4113 = !DILocation(line: 1786, column: 39, scope: !4105)
!4114 = !DILocation(line: 1787, column: 11, scope: !4105)
!4115 = !DILocation(line: 1789, column: 27, scope: !507)
!4116 = !DILocation(line: 1789, column: 30, scope: !507)
!4117 = !DILocation(line: 1789, column: 39, scope: !507)
!4118 = !DILocation(line: 1789, column: 6, scope: !507)
!4119 = !DILocation(line: 1789, column: 4, scope: !507)
!4120 = !DILocation(line: 1790, column: 6, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !507, file: !1, line: 1790, column: 6)
!4122 = !DILocation(line: 1790, column: 8, scope: !4121)
!4123 = !DILocation(line: 1790, column: 6, scope: !507)
!4124 = !DILocation(line: 1791, column: 3, scope: !4121)
!4125 = !DILocation(line: 1793, column: 13, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !507, file: !1, line: 1793, column: 2)
!4127 = !DILocation(line: 1793, column: 7, scope: !4126)
!4128 = !DILocalVariable(name: "passphrase", scope: !4129, file: !1, line: 1794, type: !80)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !1, line: 1793, column: 28)
!4130 = distinct !DILexicalBlock(scope: !4126, file: !1, line: 1793, column: 2)
!4131 = !DILocation(line: 1794, column: 15, scope: !4129)
!4132 = !DILocation(line: 1796, column: 47, scope: !4129)
!4133 = !DILocation(line: 1796, column: 16, scope: !4129)
!4134 = !DILocation(line: 1796, column: 14, scope: !4129)
!4135 = !DILocation(line: 1797, column: 7, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4129, file: !1, line: 1797, column: 7)
!4137 = !DILocation(line: 1797, column: 18, scope: !4136)
!4138 = !DILocation(line: 1797, column: 7, scope: !4129)
!4139 = !DILocation(line: 1798, column: 23, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1797, column: 27)
!4141 = !DILocation(line: 1798, column: 26, scope: !4140)
!4142 = !DILocation(line: 1799, column: 9, scope: !4140)
!4143 = !DILocation(line: 1799, column: 15, scope: !4140)
!4144 = !DILocation(line: 1799, column: 8, scope: !4140)
!4145 = !DILocation(line: 1798, column: 4, scope: !4140)
!4146 = !DILocation(line: 1802, column: 4, scope: !4140)
!4147 = !DILocation(line: 1804, column: 3, scope: !4129)
!4148 = !DILocation(line: 1805, column: 7, scope: !4129)
!4149 = !DILocation(line: 1805, column: 7, scope: !4150)
!4150 = !DILexicalBlockFile(scope: !4129, file: !1, discriminator: 1)
!4151 = !DILocation(line: 1805, column: 5, scope: !4129)
!4152 = !DILocation(line: 1807, column: 7, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4129, file: !1, line: 1807, column: 7)
!4154 = !DILocation(line: 1807, column: 9, scope: !4153)
!4155 = !DILocation(line: 1807, column: 7, scope: !4129)
!4156 = !DILocation(line: 1808, column: 23, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4153, file: !1, line: 1807, column: 15)
!4158 = !DILocation(line: 1808, column: 26, scope: !4157)
!4159 = !DILocation(line: 1808, column: 4, scope: !4157)
!4160 = !DILocation(line: 1811, column: 4, scope: !4157)
!4161 = !DILocation(line: 1815, column: 26, scope: !4129)
!4162 = !DILocation(line: 1815, column: 31, scope: !4129)
!4163 = !DILocation(line: 1815, column: 29, scope: !4129)
!4164 = !DILocation(line: 1815, column: 6, scope: !4129)
!4165 = !DILocation(line: 1816, column: 19, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4129, file: !1, line: 1816, column: 7)
!4167 = !DILocation(line: 1816, column: 27, scope: !4166)
!4168 = !DILocation(line: 1816, column: 7, scope: !4166)
!4169 = !DILocation(line: 1816, column: 35, scope: !4166)
!4170 = !DILocation(line: 1816, column: 32, scope: !4166)
!4171 = !DILocation(line: 1816, column: 41, scope: !4166)
!4172 = !DILocation(line: 1817, column: 19, scope: !4166)
!4173 = !DILocation(line: 1817, column: 27, scope: !4166)
!4174 = !DILocation(line: 1817, column: 31, scope: !4166)
!4175 = !DILocation(line: 1817, column: 7, scope: !4166)
!4176 = !DILocation(line: 1817, column: 39, scope: !4166)
!4177 = !DILocation(line: 1817, column: 36, scope: !4166)
!4178 = !DILocation(line: 1816, column: 7, scope: !4150)
!4179 = !DILocation(line: 1818, column: 4, scope: !4166)
!4180 = !DILocation(line: 1819, column: 7, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4129, file: !1, line: 1819, column: 7)
!4182 = !DILocation(line: 1819, column: 13, scope: !4181)
!4183 = !DILocation(line: 1819, column: 7, scope: !4129)
!4184 = !DILocation(line: 1821, column: 23, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4181, file: !1, line: 1819, column: 22)
!4186 = !DILocation(line: 1821, column: 26, scope: !4185)
!4187 = !DILocation(line: 1821, column: 4, scope: !4185)
!4188 = !DILocation(line: 1823, column: 4, scope: !4185)
!4189 = !DILocation(line: 1825, column: 2, scope: !4129)
!4190 = !DILocation(line: 1793, column: 24, scope: !4191)
!4191 = !DILexicalBlockFile(scope: !4130, file: !1, discriminator: 1)
!4192 = !DILocation(line: 1793, column: 2, scope: !4191)
!4193 = !DILocation(line: 1827, column: 6, scope: !507)
!4194 = !DILocation(line: 1827, column: 4, scope: !507)
!4195 = !DILocation(line: 1828, column: 6, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !507, file: !1, line: 1828, column: 6)
!4197 = !DILocation(line: 1828, column: 8, scope: !4196)
!4198 = !DILocation(line: 1828, column: 6, scope: !507)
!4199 = !DILocation(line: 1829, column: 22, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4196, file: !1, line: 1828, column: 14)
!4201 = !DILocation(line: 1829, column: 25, scope: !4200)
!4202 = !DILocation(line: 1829, column: 3, scope: !4200)
!4203 = !DILocation(line: 1831, column: 3, scope: !4200)
!4204 = !DILocation(line: 1833, column: 6, scope: !507)
!4205 = !DILocation(line: 1833, column: 4, scope: !507)
!4206 = !DILocation(line: 1834, column: 6, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !507, file: !1, line: 1834, column: 6)
!4208 = !DILocation(line: 1834, column: 8, scope: !4207)
!4209 = !DILocation(line: 1834, column: 6, scope: !507)
!4210 = !DILocation(line: 1835, column: 3, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4207, file: !1, line: 1834, column: 14)
!4212 = !DILocation(line: 1836, column: 22, scope: !4211)
!4213 = !DILocation(line: 1836, column: 25, scope: !4211)
!4214 = !DILocation(line: 1836, column: 3, scope: !4211)
!4215 = !DILocation(line: 1838, column: 3, scope: !4211)
!4216 = !DILocation(line: 1840, column: 20, scope: !507)
!4217 = !DILocation(line: 1840, column: 25, scope: !507)
!4218 = !DILocation(line: 1840, column: 36, scope: !507)
!4219 = !DILocation(line: 1840, column: 2, scope: !507)
!4220 = !DILocation(line: 1840, column: 7, scope: !507)
!4221 = !DILocation(line: 1840, column: 18, scope: !507)
!4222 = !DILocation(line: 1841, column: 25, scope: !507)
!4223 = !DILocation(line: 1841, column: 28, scope: !507)
!4224 = !DILocation(line: 1841, column: 37, scope: !507)
!4225 = !DILocation(line: 1841, column: 2, scope: !507)
!4226 = !DILocation(line: 1842, column: 32, scope: !507)
!4227 = !DILocation(line: 1842, column: 41, scope: !507)
!4228 = !DILocation(line: 1842, column: 45, scope: !507)
!4229 = !DILocation(line: 1842, column: 2, scope: !507)
!4230 = !DILocation(line: 1842, column: 7, scope: !507)
!4231 = !DILocation(line: 1842, column: 29, scope: !507)
!4232 = !DILocation(line: 1843, column: 12, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !507, file: !1, line: 1843, column: 6)
!4234 = !DILocation(line: 1843, column: 17, scope: !4233)
!4235 = !DILocation(line: 1843, column: 24, scope: !4233)
!4236 = !DILocation(line: 1843, column: 34, scope: !4233)
!4237 = !DILocation(line: 1843, column: 8, scope: !4233)
!4238 = !DILocation(line: 1844, column: 6, scope: !4233)
!4239 = !DILocation(line: 1844, column: 9, scope: !4240)
!4240 = !DILexicalBlockFile(scope: !4233, file: !1, discriminator: 1)
!4241 = !DILocation(line: 1844, column: 14, scope: !4240)
!4242 = !DILocation(line: 1844, column: 36, scope: !4240)
!4243 = !DILocation(line: 1843, column: 6, scope: !4244)
!4244 = !DILexicalBlockFile(scope: !507, file: !1, discriminator: 1)
!4245 = !DILocation(line: 1845, column: 3, scope: !4233)
!4246 = !DILocation(line: 1846, column: 38, scope: !507)
!4247 = !DILocation(line: 1846, column: 47, scope: !507)
!4248 = !DILocation(line: 1846, column: 51, scope: !507)
!4249 = !DILocation(line: 1846, column: 2, scope: !507)
!4250 = !DILocation(line: 1846, column: 7, scope: !507)
!4251 = !DILocation(line: 1846, column: 35, scope: !507)
!4252 = !DILocation(line: 1847, column: 2, scope: !507)
!4253 = !DILocation(line: 1847, column: 7, scope: !507)
!4254 = !DILocation(line: 1847, column: 33, scope: !507)
!4255 = !DILocation(line: 1849, column: 28, scope: !507)
!4256 = !DILocation(line: 1849, column: 33, scope: !507)
!4257 = !DILocation(line: 1849, column: 40, scope: !507)
!4258 = !DILocation(line: 1849, column: 50, scope: !507)
!4259 = !DILocation(line: 1849, column: 2, scope: !507)
!4260 = !DILocation(line: 1849, column: 7, scope: !507)
!4261 = !DILocation(line: 1849, column: 14, scope: !507)
!4262 = !DILocation(line: 1849, column: 26, scope: !507)
!4263 = !DILocation(line: 1850, column: 38, scope: !507)
!4264 = !DILocation(line: 1850, column: 10, scope: !507)
!4265 = !DILocation(line: 1850, column: 2, scope: !507)
!4266 = !DILocation(line: 1853, column: 21, scope: !507)
!4267 = !DILocation(line: 1853, column: 24, scope: !507)
!4268 = !DILocation(line: 1853, column: 2, scope: !507)
!4269 = !DILocation(line: 1855, column: 2, scope: !507)
!4270 = !DILocation(line: 1857, column: 21, scope: !507)
!4271 = !DILocation(line: 1857, column: 24, scope: !507)
!4272 = !DILocation(line: 1857, column: 2, scope: !507)
!4273 = !DILocation(line: 1859, column: 2, scope: !507)
!4274 = !DILocation(line: 1860, column: 1, scope: !507)
!4275 = !DILocalVariable(name: "a", arg: 1, scope: !509, file: !1, line: 1698, type: !4)
!4276 = !DILocation(line: 1698, column: 57, scope: !509)
!4277 = !DILocalVariable(name: "zip", scope: !509, file: !1, line: 1700, type: !292)
!4278 = !DILocation(line: 1700, column: 14, scope: !509)
!4279 = !DILocation(line: 1700, column: 35, scope: !509)
!4280 = !DILocation(line: 1700, column: 38, scope: !509)
!4281 = !DILocation(line: 1700, column: 46, scope: !509)
!4282 = !DILocation(line: 1700, column: 20, scope: !509)
!4283 = !DILocalVariable(name: "p", scope: !509, file: !1, line: 1701, type: !43)
!4284 = !DILocation(line: 1701, column: 14, scope: !509)
!4285 = !DILocalVariable(name: "retry", scope: !509, file: !1, line: 1702, type: !23)
!4286 = !DILocation(line: 1702, column: 6, scope: !509)
!4287 = !DILocalVariable(name: "r", scope: !509, file: !1, line: 1703, type: !23)
!4288 = !DILocation(line: 1703, column: 6, scope: !509)
!4289 = !DILocation(line: 1705, column: 6, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !509, file: !1, line: 1705, column: 6)
!4291 = !DILocation(line: 1705, column: 11, scope: !4290)
!4292 = !DILocation(line: 1705, column: 6, scope: !509)
!4293 = !DILocation(line: 1706, column: 3, scope: !4290)
!4294 = !DILocation(line: 1713, column: 12, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !509, file: !1, line: 1713, column: 6)
!4296 = !DILocation(line: 1713, column: 17, scope: !4295)
!4297 = !DILocation(line: 1713, column: 24, scope: !4295)
!4298 = !DILocation(line: 1713, column: 34, scope: !4295)
!4299 = !DILocation(line: 1713, column: 8, scope: !4295)
!4300 = !DILocation(line: 1714, column: 6, scope: !4295)
!4301 = !DILocation(line: 1714, column: 9, scope: !4302)
!4302 = !DILexicalBlockFile(scope: !4295, file: !1, discriminator: 1)
!4303 = !DILocation(line: 1714, column: 14, scope: !4302)
!4304 = !DILocation(line: 1714, column: 36, scope: !4302)
!4305 = !DILocation(line: 1713, column: 6, scope: !4306)
!4306 = !DILexicalBlockFile(scope: !509, file: !1, discriminator: 1)
!4307 = !DILocation(line: 1715, column: 22, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4295, file: !1, line: 1714, column: 55)
!4309 = !DILocation(line: 1715, column: 25, scope: !4308)
!4310 = !DILocation(line: 1717, column: 17, scope: !4308)
!4311 = !DILocation(line: 1717, column: 22, scope: !4308)
!4312 = !DILocation(line: 1715, column: 3, scope: !4308)
!4313 = !DILocation(line: 1718, column: 3, scope: !4308)
!4314 = !DILocation(line: 1721, column: 27, scope: !509)
!4315 = !DILocation(line: 1721, column: 6, scope: !509)
!4316 = !DILocation(line: 1721, column: 4, scope: !509)
!4317 = !DILocation(line: 1722, column: 6, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !509, file: !1, line: 1722, column: 6)
!4319 = !DILocation(line: 1722, column: 8, scope: !4318)
!4320 = !DILocation(line: 1722, column: 6, scope: !509)
!4321 = !DILocation(line: 1723, column: 22, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !1, line: 1722, column: 17)
!4323 = !DILocation(line: 1723, column: 25, scope: !4322)
!4324 = !DILocation(line: 1723, column: 3, scope: !4322)
!4325 = !DILocation(line: 1725, column: 3, scope: !4322)
!4326 = !DILocation(line: 1728, column: 13, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !509, file: !1, line: 1728, column: 2)
!4328 = !DILocation(line: 1728, column: 7, scope: !4327)
!4329 = !DILocalVariable(name: "passphrase", scope: !4330, file: !1, line: 1729, type: !80)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !1, line: 1728, column: 28)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !1, line: 1728, column: 2)
!4332 = !DILocation(line: 1729, column: 15, scope: !4330)
!4333 = !DILocalVariable(name: "crcchk", scope: !4330, file: !1, line: 1730, type: !460)
!4334 = !DILocation(line: 1730, column: 11, scope: !4330)
!4335 = !DILocation(line: 1732, column: 47, scope: !4330)
!4336 = !DILocation(line: 1732, column: 16, scope: !4330)
!4337 = !DILocation(line: 1732, column: 14, scope: !4330)
!4338 = !DILocation(line: 1733, column: 7, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4330, file: !1, line: 1733, column: 7)
!4340 = !DILocation(line: 1733, column: 18, scope: !4339)
!4341 = !DILocation(line: 1733, column: 7, scope: !4330)
!4342 = !DILocation(line: 1734, column: 23, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4339, file: !1, line: 1733, column: 27)
!4344 = !DILocation(line: 1734, column: 26, scope: !4343)
!4345 = !DILocation(line: 1735, column: 9, scope: !4343)
!4346 = !DILocation(line: 1735, column: 15, scope: !4343)
!4347 = !DILocation(line: 1735, column: 8, scope: !4343)
!4348 = !DILocation(line: 1734, column: 4, scope: !4343)
!4349 = !DILocation(line: 1738, column: 4, scope: !4343)
!4350 = !DILocation(line: 1744, column: 22, scope: !4330)
!4351 = !DILocation(line: 1744, column: 27, scope: !4330)
!4352 = !DILocation(line: 1744, column: 33, scope: !4330)
!4353 = !DILocation(line: 1744, column: 52, scope: !4330)
!4354 = !DILocation(line: 1744, column: 45, scope: !4330)
!4355 = !DILocation(line: 1745, column: 4, scope: !4330)
!4356 = !DILocation(line: 1744, column: 7, scope: !4357)
!4357 = !DILexicalBlockFile(scope: !4330, file: !1, discriminator: 1)
!4358 = !DILocation(line: 1744, column: 5, scope: !4330)
!4359 = !DILocation(line: 1746, column: 7, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4330, file: !1, line: 1746, column: 7)
!4361 = !DILocation(line: 1746, column: 9, scope: !4360)
!4362 = !DILocation(line: 1746, column: 14, scope: !4360)
!4363 = !DILocation(line: 1746, column: 17, scope: !4364)
!4364 = !DILexicalBlockFile(scope: !4360, file: !1, discriminator: 1)
!4365 = !DILocation(line: 1746, column: 27, scope: !4364)
!4366 = !DILocation(line: 1746, column: 32, scope: !4364)
!4367 = !DILocation(line: 1746, column: 39, scope: !4364)
!4368 = !DILocation(line: 1746, column: 24, scope: !4364)
!4369 = !DILocation(line: 1746, column: 7, scope: !4364)
!4370 = !DILocation(line: 1747, column: 4, scope: !4360)
!4371 = !DILocation(line: 1748, column: 7, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4330, file: !1, line: 1748, column: 7)
!4373 = !DILocation(line: 1748, column: 13, scope: !4372)
!4374 = !DILocation(line: 1748, column: 7, scope: !4330)
!4375 = !DILocation(line: 1750, column: 23, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4372, file: !1, line: 1748, column: 22)
!4377 = !DILocation(line: 1750, column: 26, scope: !4376)
!4378 = !DILocation(line: 1750, column: 4, scope: !4376)
!4379 = !DILocation(line: 1752, column: 4, scope: !4376)
!4380 = !DILocation(line: 1754, column: 2, scope: !4330)
!4381 = !DILocation(line: 1728, column: 24, scope: !4382)
!4382 = !DILexicalBlockFile(scope: !4331, file: !1, discriminator: 1)
!4383 = !DILocation(line: 1728, column: 2, scope: !4382)
!4384 = !DILocation(line: 1756, column: 25, scope: !509)
!4385 = !DILocation(line: 1756, column: 2, scope: !509)
!4386 = !DILocation(line: 1757, column: 2, scope: !509)
!4387 = !DILocation(line: 1757, column: 7, scope: !509)
!4388 = !DILocation(line: 1757, column: 18, scope: !509)
!4389 = !DILocation(line: 1758, column: 12, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !509, file: !1, line: 1758, column: 6)
!4391 = !DILocation(line: 1758, column: 17, scope: !4390)
!4392 = !DILocation(line: 1758, column: 24, scope: !4390)
!4393 = !DILocation(line: 1758, column: 34, scope: !4390)
!4394 = !DILocation(line: 1758, column: 8, scope: !4390)
!4395 = !DILocation(line: 1758, column: 6, scope: !509)
!4396 = !DILocation(line: 1759, column: 6, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4390, file: !1, line: 1758, column: 56)
!4398 = !DILocation(line: 1759, column: 11, scope: !4397)
!4399 = !DILocation(line: 1759, column: 33, scope: !4397)
!4400 = !DILocation(line: 1760, column: 2, scope: !4397)
!4401 = !DILocation(line: 1762, column: 2, scope: !509)
!4402 = !DILocation(line: 1762, column: 7, scope: !509)
!4403 = !DILocation(line: 1762, column: 35, scope: !509)
!4404 = !DILocation(line: 1763, column: 2, scope: !509)
!4405 = !DILocation(line: 1763, column: 7, scope: !509)
!4406 = !DILocation(line: 1763, column: 33, scope: !509)
!4407 = !DILocation(line: 1765, column: 38, scope: !509)
!4408 = !DILocation(line: 1765, column: 10, scope: !509)
!4409 = !DILocation(line: 1765, column: 2, scope: !509)
!4410 = !DILocation(line: 1767, column: 1, scope: !509)
!4411 = !DILocalVariable(name: "a", arg: 1, scope: !523, file: !1, line: 1129, type: !4)
!4412 = !DILocation(line: 1129, column: 41, scope: !523)
!4413 = !DILocalVariable(name: "_buff", arg: 2, scope: !523, file: !1, line: 1129, type: !64)
!4414 = !DILocation(line: 1129, column: 57, scope: !523)
!4415 = !DILocalVariable(name: "size", arg: 3, scope: !523, file: !1, line: 1130, type: !65)
!4416 = !DILocation(line: 1130, column: 13, scope: !523)
!4417 = !DILocalVariable(name: "offset", arg: 4, scope: !523, file: !1, line: 1130, type: !66)
!4418 = !DILocation(line: 1130, column: 28, scope: !523)
!4419 = !DILocalVariable(name: "zip", scope: !523, file: !1, line: 1132, type: !292)
!4420 = !DILocation(line: 1132, column: 14, scope: !523)
!4421 = !DILocalVariable(name: "buff", scope: !523, file: !1, line: 1133, type: !80)
!4422 = !DILocation(line: 1133, column: 14, scope: !523)
!4423 = !DILocalVariable(name: "bytes_avail", scope: !523, file: !1, line: 1134, type: !38)
!4424 = !DILocation(line: 1134, column: 10, scope: !523)
!4425 = !DILocalVariable(name: "r", scope: !523, file: !1, line: 1135, type: !23)
!4426 = !DILocation(line: 1135, column: 6, scope: !523)
!4427 = !DILocation(line: 1137, column: 8, scope: !523)
!4428 = !DILocation(line: 1139, column: 23, scope: !523)
!4429 = !DILocation(line: 1139, column: 26, scope: !523)
!4430 = !DILocation(line: 1139, column: 34, scope: !523)
!4431 = !DILocation(line: 1139, column: 8, scope: !523)
!4432 = !DILocation(line: 1139, column: 6, scope: !523)
!4433 = !DILocation(line: 1141, column: 6, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1141, column: 6)
!4435 = !DILocation(line: 1141, column: 11, scope: !4434)
!4436 = !DILocation(line: 1141, column: 18, scope: !4434)
!4437 = !DILocation(line: 1141, column: 28, scope: !4434)
!4438 = !DILocation(line: 1141, column: 6, scope: !523)
!4439 = !DILocalVariable(name: "p", scope: !4440, file: !1, line: 1142, type: !80)
!4440 = distinct !DILexicalBlock(scope: !4434, file: !1, line: 1141, column: 49)
!4441 = !DILocation(line: 1142, column: 15, scope: !4440)
!4442 = !DILocalVariable(name: "grabbing_bytes", scope: !4440, file: !1, line: 1143, type: !38)
!4443 = !DILocation(line: 1143, column: 11, scope: !4440)
!4444 = !DILocation(line: 1145, column: 7, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4440, file: !1, line: 1145, column: 7)
!4446 = !DILocation(line: 1145, column: 12, scope: !4445)
!4447 = !DILocation(line: 1145, column: 7, scope: !4440)
!4448 = !DILocation(line: 1146, column: 19, scope: !4445)
!4449 = !DILocation(line: 1146, column: 4, scope: !4445)
!4450 = !DILocation(line: 1148, column: 31, scope: !4440)
!4451 = !DILocation(line: 1148, column: 34, scope: !4440)
!4452 = !DILocation(line: 1148, column: 10, scope: !4440)
!4453 = !DILocation(line: 1148, column: 8, scope: !4440)
!4454 = !DILocation(line: 1149, column: 7, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4440, file: !1, line: 1149, column: 7)
!4456 = !DILocation(line: 1149, column: 21, scope: !4455)
!4457 = !DILocation(line: 1149, column: 19, scope: !4455)
!4458 = !DILocation(line: 1149, column: 7, scope: !4440)
!4459 = !DILocation(line: 1154, column: 23, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4455, file: !1, line: 1149, column: 37)
!4461 = !DILocation(line: 1154, column: 26, scope: !4460)
!4462 = !DILocation(line: 1154, column: 4, scope: !4460)
!4463 = !DILocation(line: 1157, column: 4, scope: !4460)
!4464 = !DILocation(line: 1161, column: 7, scope: !4440)
!4465 = !DILocation(line: 1161, column: 5, scope: !4440)
!4466 = !DILocation(line: 1162, column: 7, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4440, file: !1, line: 1162, column: 7)
!4468 = !DILocation(line: 1162, column: 12, scope: !4467)
!4469 = !DILocation(line: 1162, column: 7, scope: !4440)
!4470 = !DILocation(line: 1163, column: 6, scope: !4467)
!4471 = !DILocation(line: 1163, column: 4, scope: !4467)
!4472 = !DILocation(line: 1164, column: 7, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4440, file: !1, line: 1164, column: 7)
!4474 = !DILocation(line: 1164, column: 12, scope: !4473)
!4475 = !DILocation(line: 1164, column: 19, scope: !4473)
!4476 = !DILocation(line: 1164, column: 22, scope: !4477)
!4477 = !DILexicalBlockFile(scope: !4473, file: !1, discriminator: 1)
!4478 = !DILocation(line: 1164, column: 27, scope: !4477)
!4479 = !DILocation(line: 1165, column: 7, scope: !4473)
!4480 = !DILocation(line: 1165, column: 10, scope: !4477)
!4481 = !DILocation(line: 1165, column: 15, scope: !4477)
!4482 = !DILocation(line: 1165, column: 25, scope: !4477)
!4483 = !DILocation(line: 1165, column: 28, scope: !4484)
!4484 = !DILexicalBlockFile(scope: !4473, file: !1, discriminator: 2)
!4485 = !DILocation(line: 1165, column: 33, scope: !4484)
!4486 = !DILocation(line: 1166, column: 7, scope: !4473)
!4487 = !DILocation(line: 1166, column: 27, scope: !4477)
!4488 = !DILocation(line: 1166, column: 29, scope: !4477)
!4489 = !DILocation(line: 1166, column: 11, scope: !4477)
!4490 = !DILocation(line: 1166, column: 37, scope: !4477)
!4491 = !DILocation(line: 1166, column: 42, scope: !4477)
!4492 = !DILocation(line: 1166, column: 34, scope: !4477)
!4493 = !DILocation(line: 1167, column: 4, scope: !4473)
!4494 = !DILocation(line: 1167, column: 7, scope: !4477)
!4495 = !DILocation(line: 1167, column: 12, scope: !4477)
!4496 = !DILocation(line: 1168, column: 4, scope: !4473)
!4497 = !DILocation(line: 1168, column: 8, scope: !4477)
!4498 = !DILocation(line: 1168, column: 13, scope: !4477)
!4499 = !DILocation(line: 1169, column: 5, scope: !4473)
!4500 = !DILocation(line: 1169, column: 8, scope: !4477)
!4501 = !DILocation(line: 1169, column: 13, scope: !4477)
!4502 = !DILocation(line: 1169, column: 20, scope: !4477)
!4503 = !DILocation(line: 1169, column: 30, scope: !4477)
!4504 = !DILocation(line: 1169, column: 37, scope: !4477)
!4505 = !DILocation(line: 1164, column: 7, scope: !4506)
!4506 = !DILexicalBlockFile(scope: !4440, file: !1, discriminator: 2)
!4507 = !DILocation(line: 1170, column: 8, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !1, line: 1170, column: 8)
!4509 = distinct !DILexicalBlock(scope: !4473, file: !1, line: 1169, column: 59)
!4510 = !DILocation(line: 1170, column: 13, scope: !4508)
!4511 = !DILocation(line: 1170, column: 20, scope: !4508)
!4512 = !DILocation(line: 1170, column: 26, scope: !4508)
!4513 = !DILocation(line: 1170, column: 8, scope: !4509)
!4514 = !DILocalVariable(name: "compressed", scope: !4515, file: !1, line: 1171, type: !468)
!4515 = distinct !DILexicalBlock(scope: !4508, file: !1, line: 1170, column: 43)
!4516 = !DILocation(line: 1171, column: 14, scope: !4515)
!4517 = !DILocalVariable(name: "uncompressed", scope: !4515, file: !1, line: 1171, type: !468)
!4518 = !DILocation(line: 1171, column: 26, scope: !4515)
!4519 = !DILocation(line: 1172, column: 41, scope: !4515)
!4520 = !DILocation(line: 1172, column: 43, scope: !4515)
!4521 = !DILocation(line: 1172, column: 25, scope: !4515)
!4522 = !DILocation(line: 1172, column: 5, scope: !4515)
!4523 = !DILocation(line: 1172, column: 10, scope: !4515)
!4524 = !DILocation(line: 1172, column: 17, scope: !4515)
!4525 = !DILocation(line: 1172, column: 23, scope: !4515)
!4526 = !DILocation(line: 1173, column: 34, scope: !4515)
!4527 = !DILocation(line: 1173, column: 36, scope: !4515)
!4528 = !DILocation(line: 1173, column: 18, scope: !4515)
!4529 = !DILocation(line: 1173, column: 16, scope: !4515)
!4530 = !DILocation(line: 1174, column: 36, scope: !4515)
!4531 = !DILocation(line: 1174, column: 38, scope: !4515)
!4532 = !DILocation(line: 1174, column: 20, scope: !4515)
!4533 = !DILocation(line: 1174, column: 18, scope: !4515)
!4534 = !DILocation(line: 1175, column: 9, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4515, file: !1, line: 1175, column: 9)
!4536 = !DILocation(line: 1175, column: 20, scope: !4535)
!4537 = !DILocation(line: 1175, column: 32, scope: !4535)
!4538 = !DILocation(line: 1175, column: 35, scope: !4539)
!4539 = !DILexicalBlockFile(scope: !4535, file: !1, discriminator: 1)
!4540 = !DILocation(line: 1175, column: 48, scope: !4539)
!4541 = !DILocation(line: 1175, column: 9, scope: !4539)
!4542 = !DILocation(line: 1176, column: 25, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1175, column: 61)
!4544 = !DILocation(line: 1176, column: 28, scope: !4543)
!4545 = !DILocation(line: 1176, column: 6, scope: !4543)
!4546 = !DILocation(line: 1179, column: 6, scope: !4543)
!4547 = !DILocation(line: 1181, column: 35, scope: !4515)
!4548 = !DILocation(line: 1181, column: 5, scope: !4515)
!4549 = !DILocation(line: 1181, column: 10, scope: !4515)
!4550 = !DILocation(line: 1181, column: 17, scope: !4515)
!4551 = !DILocation(line: 1181, column: 33, scope: !4515)
!4552 = !DILocation(line: 1182, column: 37, scope: !4515)
!4553 = !DILocation(line: 1182, column: 5, scope: !4515)
!4554 = !DILocation(line: 1182, column: 10, scope: !4515)
!4555 = !DILocation(line: 1182, column: 17, scope: !4515)
!4556 = !DILocation(line: 1182, column: 35, scope: !4515)
!4557 = !DILocation(line: 1183, column: 5, scope: !4515)
!4558 = !DILocation(line: 1183, column: 10, scope: !4515)
!4559 = !DILocation(line: 1183, column: 21, scope: !4515)
!4560 = !DILocation(line: 1184, column: 4, scope: !4515)
!4561 = !DILocation(line: 1185, column: 41, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4508, file: !1, line: 1184, column: 11)
!4563 = !DILocation(line: 1185, column: 43, scope: !4562)
!4564 = !DILocation(line: 1185, column: 25, scope: !4562)
!4565 = !DILocation(line: 1185, column: 5, scope: !4562)
!4566 = !DILocation(line: 1185, column: 10, scope: !4562)
!4567 = !DILocation(line: 1185, column: 17, scope: !4562)
!4568 = !DILocation(line: 1185, column: 23, scope: !4562)
!4569 = !DILocation(line: 1187, column: 22, scope: !4562)
!4570 = !DILocation(line: 1187, column: 24, scope: !4562)
!4571 = !DILocation(line: 1187, column: 6, scope: !4562)
!4572 = !DILocation(line: 1186, column: 5, scope: !4562)
!4573 = !DILocation(line: 1186, column: 10, scope: !4562)
!4574 = !DILocation(line: 1186, column: 17, scope: !4562)
!4575 = !DILocation(line: 1186, column: 33, scope: !4562)
!4576 = !DILocation(line: 1189, column: 22, scope: !4562)
!4577 = !DILocation(line: 1189, column: 24, scope: !4562)
!4578 = !DILocation(line: 1189, column: 6, scope: !4562)
!4579 = !DILocation(line: 1188, column: 5, scope: !4562)
!4580 = !DILocation(line: 1188, column: 10, scope: !4562)
!4581 = !DILocation(line: 1188, column: 17, scope: !4562)
!4582 = !DILocation(line: 1188, column: 35, scope: !4562)
!4583 = !DILocation(line: 1190, column: 5, scope: !4562)
!4584 = !DILocation(line: 1190, column: 10, scope: !4562)
!4585 = !DILocation(line: 1190, column: 21, scope: !4562)
!4586 = !DILocation(line: 1192, column: 8, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4509, file: !1, line: 1192, column: 8)
!4588 = !DILocation(line: 1192, column: 13, scope: !4587)
!4589 = !DILocation(line: 1192, column: 8, scope: !4509)
!4590 = !DILocation(line: 1193, column: 35, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4587, file: !1, line: 1192, column: 25)
!4592 = !DILocation(line: 1193, column: 38, scope: !4591)
!4593 = !DILocation(line: 1193, column: 9, scope: !4591)
!4594 = !DILocation(line: 1193, column: 7, scope: !4591)
!4595 = !DILocation(line: 1194, column: 9, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4591, file: !1, line: 1194, column: 9)
!4597 = !DILocation(line: 1194, column: 11, scope: !4596)
!4598 = !DILocation(line: 1194, column: 9, scope: !4591)
!4599 = !DILocation(line: 1195, column: 14, scope: !4596)
!4600 = !DILocation(line: 1195, column: 6, scope: !4596)
!4601 = !DILocation(line: 1196, column: 4, scope: !4591)
!4602 = !DILocation(line: 1197, column: 4, scope: !4509)
!4603 = !DILocation(line: 1197, column: 9, scope: !4509)
!4604 = !DILocation(line: 1197, column: 22, scope: !4509)
!4605 = !DILocation(line: 1198, column: 4, scope: !4509)
!4606 = !DILocation(line: 1201, column: 3, scope: !4440)
!4607 = !DILocation(line: 1207, column: 3, scope: !4440)
!4608 = !DILocation(line: 1207, column: 10, scope: !4609)
!4609 = !DILexicalBlockFile(scope: !4440, file: !1, discriminator: 1)
!4610 = !DILocation(line: 1207, column: 14, scope: !4609)
!4611 = !DILocation(line: 1207, column: 21, scope: !4609)
!4612 = !DILocation(line: 1207, column: 19, scope: !4609)
!4613 = !DILocation(line: 1207, column: 33, scope: !4609)
!4614 = !DILocation(line: 1207, column: 12, scope: !4609)
!4615 = !DILocation(line: 1207, column: 3, scope: !4609)
!4616 = !DILocation(line: 1208, column: 8, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1208, column: 8)
!4618 = distinct !DILexicalBlock(scope: !4440, file: !1, line: 1207, column: 38)
!4619 = !DILocation(line: 1208, column: 13, scope: !4617)
!4620 = !DILocation(line: 1208, column: 8, scope: !4618)
!4621 = !DILocation(line: 1208, column: 25, scope: !4622)
!4622 = !DILexicalBlockFile(scope: !4623, file: !1, discriminator: 1)
!4623 = distinct !DILexicalBlock(scope: !4617, file: !1, line: 1208, column: 21)
!4624 = !DILocation(line: 1208, column: 31, scope: !4622)
!4625 = !DILocation(line: 1209, column: 13, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4617, file: !1, line: 1209, column: 13)
!4627 = !DILocation(line: 1209, column: 18, scope: !4626)
!4628 = !DILocation(line: 1209, column: 13, scope: !4617)
!4629 = !DILocation(line: 1209, column: 30, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4631, file: !1, discriminator: 1)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !1, line: 1209, column: 26)
!4632 = !DILocation(line: 1209, column: 36, scope: !4630)
!4633 = !DILocation(line: 1210, column: 13, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4626, file: !1, line: 1210, column: 13)
!4635 = !DILocation(line: 1210, column: 18, scope: !4634)
!4636 = !DILocation(line: 1210, column: 13, scope: !4626)
!4637 = !DILocation(line: 1210, column: 33, scope: !4638)
!4638 = !DILexicalBlockFile(scope: !4639, file: !1, discriminator: 1)
!4639 = distinct !DILexicalBlock(scope: !4634, file: !1, line: 1210, column: 29)
!4640 = !DILocation(line: 1210, column: 39, scope: !4638)
!4641 = !DILocation(line: 1211, column: 13, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4634, file: !1, line: 1211, column: 13)
!4643 = !DILocation(line: 1211, column: 18, scope: !4642)
!4644 = !DILocation(line: 1211, column: 28, scope: !4642)
!4645 = !DILocation(line: 1211, column: 31, scope: !4646)
!4646 = !DILexicalBlockFile(scope: !4642, file: !1, discriminator: 1)
!4647 = !DILocation(line: 1211, column: 36, scope: !4646)
!4648 = !DILocation(line: 1212, column: 8, scope: !4642)
!4649 = !DILocation(line: 1212, column: 11, scope: !4646)
!4650 = !DILocation(line: 1212, column: 16, scope: !4646)
!4651 = !DILocation(line: 1212, column: 23, scope: !4646)
!4652 = !DILocation(line: 1212, column: 26, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4642, file: !1, discriminator: 2)
!4654 = !DILocation(line: 1212, column: 31, scope: !4653)
!4655 = !DILocation(line: 1211, column: 13, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !4634, file: !1, discriminator: 2)
!4657 = !DILocation(line: 1213, column: 9, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 1213, column: 9)
!4659 = distinct !DILexicalBlock(scope: !4642, file: !1, line: 1212, column: 39)
!4660 = !DILocation(line: 1213, column: 14, scope: !4658)
!4661 = !DILocation(line: 1213, column: 9, scope: !4659)
!4662 = !DILocation(line: 1214, column: 8, scope: !4658)
!4663 = !DILocation(line: 1214, column: 6, scope: !4658)
!4664 = !DILocation(line: 1215, column: 5, scope: !4659)
!4665 = !DILocation(line: 1216, column: 15, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4642, file: !1, line: 1216, column: 11)
!4667 = !DILocation(line: 1207, column: 3, scope: !4506)
!4668 = !DILocation(line: 1218, column: 17, scope: !4440)
!4669 = !DILocation(line: 1218, column: 21, scope: !4440)
!4670 = !DILocation(line: 1218, column: 19, scope: !4440)
!4671 = !DILocation(line: 1218, column: 15, scope: !4440)
!4672 = !DILocation(line: 1219, column: 2, scope: !4440)
!4673 = !DILocation(line: 1220, column: 7, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 1220, column: 7)
!4675 = distinct !DILexicalBlock(scope: !4434, file: !1, line: 1219, column: 9)
!4676 = !DILocation(line: 1220, column: 12, scope: !4674)
!4677 = !DILocation(line: 1220, column: 34, scope: !4674)
!4678 = !DILocation(line: 1220, column: 7, scope: !4675)
!4679 = !DILocation(line: 1221, column: 4, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4674, file: !1, line: 1220, column: 40)
!4681 = !DILocation(line: 1221, column: 9, scope: !4680)
!4682 = !DILocation(line: 1221, column: 22, scope: !4680)
!4683 = !DILocation(line: 1222, column: 8, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 1222, column: 8)
!4685 = !DILocation(line: 1222, column: 13, scope: !4684)
!4686 = !DILocation(line: 1222, column: 8, scope: !4680)
!4687 = !DILocation(line: 1223, column: 35, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4684, file: !1, line: 1222, column: 25)
!4689 = !DILocation(line: 1223, column: 9, scope: !4688)
!4690 = !DILocation(line: 1223, column: 7, scope: !4688)
!4691 = !DILocation(line: 1224, column: 9, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4688, file: !1, line: 1224, column: 9)
!4693 = !DILocation(line: 1224, column: 11, scope: !4692)
!4694 = !DILocation(line: 1224, column: 9, scope: !4688)
!4695 = !DILocation(line: 1225, column: 14, scope: !4692)
!4696 = !DILocation(line: 1225, column: 6, scope: !4692)
!4697 = !DILocation(line: 1226, column: 4, scope: !4688)
!4698 = !DILocation(line: 1227, column: 4, scope: !4680)
!4699 = !DILocation(line: 1230, column: 31, scope: !4675)
!4700 = !DILocation(line: 1230, column: 10, scope: !4675)
!4701 = !DILocation(line: 1230, column: 8, scope: !4675)
!4702 = !DILocation(line: 1231, column: 7, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 1231, column: 7)
!4704 = !DILocation(line: 1231, column: 19, scope: !4703)
!4705 = !DILocation(line: 1231, column: 7, scope: !4675)
!4706 = !DILocation(line: 1232, column: 23, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 1231, column: 25)
!4708 = !DILocation(line: 1232, column: 26, scope: !4707)
!4709 = !DILocation(line: 1232, column: 4, scope: !4707)
!4710 = !DILocation(line: 1235, column: 4, scope: !4707)
!4711 = !DILocation(line: 1237, column: 7, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 1237, column: 7)
!4713 = !DILocation(line: 1237, column: 21, scope: !4712)
!4714 = !DILocation(line: 1237, column: 26, scope: !4712)
!4715 = !DILocation(line: 1237, column: 19, scope: !4712)
!4716 = !DILocation(line: 1237, column: 7, scope: !4675)
!4717 = !DILocation(line: 1238, column: 27, scope: !4712)
!4718 = !DILocation(line: 1238, column: 32, scope: !4712)
!4719 = !DILocation(line: 1238, column: 16, scope: !4712)
!4720 = !DILocation(line: 1238, column: 4, scope: !4712)
!4721 = !DILocation(line: 1240, column: 6, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1240, column: 6)
!4723 = !DILocation(line: 1240, column: 11, scope: !4722)
!4724 = !DILocation(line: 1240, column: 22, scope: !4722)
!4725 = !DILocation(line: 1240, column: 25, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4722, file: !1, discriminator: 1)
!4727 = !DILocation(line: 1240, column: 30, scope: !4726)
!4728 = !DILocation(line: 1240, column: 6, scope: !4726)
!4729 = !DILocalVariable(name: "dec_size", scope: !4730, file: !1, line: 1241, type: !45)
!4730 = distinct !DILexicalBlock(scope: !4722, file: !1, line: 1240, column: 42)
!4731 = !DILocation(line: 1241, column: 10, scope: !4730)
!4732 = !DILocation(line: 1241, column: 21, scope: !4730)
!4733 = !DILocation(line: 1243, column: 7, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 1243, column: 7)
!4735 = !DILocation(line: 1243, column: 18, scope: !4734)
!4736 = !DILocation(line: 1243, column: 23, scope: !4734)
!4737 = !DILocation(line: 1243, column: 16, scope: !4734)
!4738 = !DILocation(line: 1243, column: 7, scope: !4730)
!4739 = !DILocation(line: 1244, column: 15, scope: !4734)
!4740 = !DILocation(line: 1244, column: 20, scope: !4734)
!4741 = !DILocation(line: 1244, column: 13, scope: !4734)
!4742 = !DILocation(line: 1244, column: 4, scope: !4734)
!4743 = !DILocation(line: 1245, column: 7, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 1245, column: 7)
!4745 = !DILocation(line: 1245, column: 12, scope: !4744)
!4746 = !DILocation(line: 1245, column: 7, scope: !4730)
!4747 = !DILocation(line: 1246, column: 29, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4744, file: !1, line: 1245, column: 24)
!4749 = !DILocation(line: 1246, column: 34, scope: !4748)
!4750 = !DILocation(line: 1247, column: 25, scope: !4748)
!4751 = !DILocation(line: 1247, column: 31, scope: !4748)
!4752 = !DILocation(line: 1248, column: 8, scope: !4748)
!4753 = !DILocation(line: 1248, column: 13, scope: !4748)
!4754 = !DILocation(line: 1248, column: 31, scope: !4748)
!4755 = !DILocation(line: 1246, column: 4, scope: !4748)
!4756 = !DILocation(line: 1249, column: 3, scope: !4748)
!4757 = !DILocalVariable(name: "dsize", scope: !4758, file: !1, line: 1250, type: !45)
!4758 = distinct !DILexicalBlock(scope: !4744, file: !1, line: 1249, column: 10)
!4759 = !DILocation(line: 1250, column: 11, scope: !4758)
!4760 = !DILocation(line: 1250, column: 19, scope: !4758)
!4761 = !DILocation(line: 1251, column: 4, scope: !4758)
!4762 = !DILocation(line: 1253, column: 4, scope: !4758)
!4763 = !DILocation(line: 1257, column: 17, scope: !4730)
!4764 = !DILocation(line: 1257, column: 15, scope: !4730)
!4765 = !DILocation(line: 1258, column: 24, scope: !4730)
!4766 = !DILocation(line: 1258, column: 29, scope: !4730)
!4767 = !DILocation(line: 1258, column: 8, scope: !4730)
!4768 = !DILocation(line: 1259, column: 2, scope: !4730)
!4769 = !DILocation(line: 1260, column: 10, scope: !523)
!4770 = !DILocation(line: 1260, column: 3, scope: !523)
!4771 = !DILocation(line: 1260, column: 8, scope: !523)
!4772 = !DILocation(line: 1261, column: 32, scope: !523)
!4773 = !DILocation(line: 1261, column: 2, scope: !523)
!4774 = !DILocation(line: 1261, column: 7, scope: !523)
!4775 = !DILocation(line: 1261, column: 29, scope: !523)
!4776 = !DILocation(line: 1262, column: 40, scope: !523)
!4777 = !DILocation(line: 1262, column: 2, scope: !523)
!4778 = !DILocation(line: 1262, column: 7, scope: !523)
!4779 = !DILocation(line: 1262, column: 37, scope: !523)
!4780 = !DILocation(line: 1263, column: 38, scope: !523)
!4781 = !DILocation(line: 1263, column: 2, scope: !523)
!4782 = !DILocation(line: 1263, column: 7, scope: !523)
!4783 = !DILocation(line: 1263, column: 35, scope: !523)
!4784 = !DILocation(line: 1264, column: 21, scope: !523)
!4785 = !DILocation(line: 1264, column: 2, scope: !523)
!4786 = !DILocation(line: 1264, column: 7, scope: !523)
!4787 = !DILocation(line: 1264, column: 18, scope: !523)
!4788 = !DILocation(line: 1265, column: 11, scope: !523)
!4789 = !DILocation(line: 1265, column: 3, scope: !523)
!4790 = !DILocation(line: 1265, column: 9, scope: !523)
!4791 = !DILocation(line: 1266, column: 2, scope: !523)
!4792 = !DILocation(line: 1267, column: 1, scope: !523)
!4793 = !DILocalVariable(name: "a", arg: 1, scope: !527, file: !1, line: 1296, type: !4)
!4794 = !DILocation(line: 1296, column: 44, scope: !527)
!4795 = !DILocalVariable(name: "buff", arg: 2, scope: !527, file: !1, line: 1296, type: !64)
!4796 = !DILocation(line: 1296, column: 60, scope: !527)
!4797 = !DILocalVariable(name: "size", arg: 3, scope: !527, file: !1, line: 1297, type: !65)
!4798 = !DILocation(line: 1297, column: 13, scope: !527)
!4799 = !DILocalVariable(name: "offset", arg: 4, scope: !527, file: !1, line: 1297, type: !66)
!4800 = !DILocation(line: 1297, column: 28, scope: !527)
!4801 = !DILocalVariable(name: "zip", scope: !527, file: !1, line: 1299, type: !292)
!4802 = !DILocation(line: 1299, column: 14, scope: !527)
!4803 = !DILocalVariable(name: "bytes_avail", scope: !527, file: !1, line: 1300, type: !38)
!4804 = !DILocation(line: 1300, column: 10, scope: !527)
!4805 = !DILocalVariable(name: "compressed_buff", scope: !527, file: !1, line: 1301, type: !43)
!4806 = !DILocation(line: 1301, column: 14, scope: !527)
!4807 = !DILocalVariable(name: "sp", scope: !527, file: !1, line: 1301, type: !43)
!4808 = !DILocation(line: 1301, column: 32, scope: !527)
!4809 = !DILocalVariable(name: "r", scope: !527, file: !1, line: 1302, type: !23)
!4810 = !DILocation(line: 1302, column: 6, scope: !527)
!4811 = !DILocation(line: 1304, column: 8, scope: !527)
!4812 = !DILocation(line: 1306, column: 23, scope: !527)
!4813 = !DILocation(line: 1306, column: 26, scope: !527)
!4814 = !DILocation(line: 1306, column: 34, scope: !527)
!4815 = !DILocation(line: 1306, column: 8, scope: !527)
!4816 = !DILocation(line: 1306, column: 6, scope: !527)
!4817 = !DILocation(line: 1309, column: 6, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1309, column: 6)
!4819 = !DILocation(line: 1309, column: 11, scope: !4818)
!4820 = !DILocation(line: 1309, column: 31, scope: !4818)
!4821 = !DILocation(line: 1309, column: 6, scope: !527)
!4822 = !DILocation(line: 1310, column: 3, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4818, file: !1, line: 1309, column: 40)
!4824 = !DILocation(line: 1310, column: 8, scope: !4823)
!4825 = !DILocation(line: 1310, column: 33, scope: !4823)
!4826 = !DILocation(line: 1312, column: 33, scope: !4823)
!4827 = !DILocation(line: 1312, column: 38, scope: !4823)
!4828 = !DILocation(line: 1312, column: 26, scope: !4823)
!4829 = !DILocation(line: 1311, column: 3, scope: !4823)
!4830 = !DILocation(line: 1311, column: 8, scope: !4823)
!4831 = !DILocation(line: 1312, column: 7, scope: !4823)
!4832 = !DILocation(line: 1313, column: 7, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4823, file: !1, line: 1313, column: 7)
!4834 = !DILocation(line: 1313, column: 12, scope: !4833)
!4835 = !DILocation(line: 1313, column: 32, scope: !4833)
!4836 = !DILocation(line: 1313, column: 7, scope: !4823)
!4837 = !DILocation(line: 1314, column: 23, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4833, file: !1, line: 1313, column: 41)
!4839 = !DILocation(line: 1314, column: 26, scope: !4838)
!4840 = !DILocation(line: 1314, column: 4, scope: !4838)
!4841 = !DILocation(line: 1316, column: 4, scope: !4838)
!4842 = !DILocation(line: 1318, column: 2, scope: !4823)
!4843 = !DILocation(line: 1320, column: 23, scope: !527)
!4844 = !DILocation(line: 1320, column: 26, scope: !527)
!4845 = !DILocation(line: 1320, column: 6, scope: !527)
!4846 = !DILocation(line: 1320, column: 4, scope: !527)
!4847 = !DILocation(line: 1321, column: 6, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1321, column: 6)
!4849 = !DILocation(line: 1321, column: 8, scope: !4848)
!4850 = !DILocation(line: 1321, column: 6, scope: !527)
!4851 = !DILocation(line: 1322, column: 11, scope: !4848)
!4852 = !DILocation(line: 1322, column: 3, scope: !4848)
!4853 = !DILocation(line: 1330, column: 46, scope: !527)
!4854 = !DILocation(line: 1330, column: 25, scope: !527)
!4855 = !DILocation(line: 1330, column: 23, scope: !527)
!4856 = !DILocation(line: 1330, column: 18, scope: !527)
!4857 = !DILocation(line: 1331, column: 12, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1331, column: 6)
!4859 = !DILocation(line: 1331, column: 17, scope: !4858)
!4860 = !DILocation(line: 1331, column: 24, scope: !4858)
!4861 = !DILocation(line: 1331, column: 34, scope: !4858)
!4862 = !DILocation(line: 1331, column: 8, scope: !4858)
!4863 = !DILocation(line: 1332, column: 6, scope: !4858)
!4864 = !DILocation(line: 1332, column: 9, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4858, file: !1, discriminator: 1)
!4866 = !DILocation(line: 1332, column: 23, scope: !4865)
!4867 = !DILocation(line: 1332, column: 28, scope: !4865)
!4868 = !DILocation(line: 1332, column: 21, scope: !4865)
!4869 = !DILocation(line: 1331, column: 6, scope: !4870)
!4870 = !DILexicalBlockFile(scope: !527, file: !1, discriminator: 1)
!4871 = !DILocation(line: 1333, column: 26, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4858, file: !1, line: 1332, column: 51)
!4873 = !DILocation(line: 1333, column: 31, scope: !4872)
!4874 = !DILocation(line: 1333, column: 15, scope: !4872)
!4875 = !DILocation(line: 1334, column: 2, scope: !4872)
!4876 = !DILocation(line: 1335, column: 6, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1335, column: 6)
!4878 = !DILocation(line: 1335, column: 18, scope: !4877)
!4879 = !DILocation(line: 1335, column: 6, scope: !527)
!4880 = !DILocation(line: 1336, column: 22, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4877, file: !1, line: 1335, column: 23)
!4882 = !DILocation(line: 1336, column: 25, scope: !4881)
!4883 = !DILocation(line: 1336, column: 3, scope: !4881)
!4884 = !DILocation(line: 1338, column: 3, scope: !4881)
!4885 = !DILocation(line: 1341, column: 6, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1341, column: 6)
!4887 = !DILocation(line: 1341, column: 11, scope: !4886)
!4888 = !DILocation(line: 1341, column: 22, scope: !4886)
!4889 = !DILocation(line: 1341, column: 25, scope: !4890)
!4890 = !DILexicalBlockFile(scope: !4886, file: !1, discriminator: 1)
!4891 = !DILocation(line: 1341, column: 30, scope: !4890)
!4892 = !DILocation(line: 1341, column: 6, scope: !4890)
!4893 = !DILocation(line: 1342, column: 7, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !1, line: 1342, column: 7)
!4895 = distinct !DILexicalBlock(scope: !4886, file: !1, line: 1341, column: 42)
!4896 = !DILocation(line: 1342, column: 12, scope: !4894)
!4897 = !DILocation(line: 1342, column: 48, scope: !4894)
!4898 = !DILocation(line: 1342, column: 38, scope: !4894)
!4899 = !DILocation(line: 1342, column: 7, scope: !4895)
!4900 = !DILocalVariable(name: "buff_remaining", scope: !4901, file: !1, line: 1343, type: !45)
!4901 = distinct !DILexicalBlock(scope: !4894, file: !1, line: 1342, column: 61)
!4902 = !DILocation(line: 1343, column: 11, scope: !4901)
!4903 = !DILocation(line: 1344, column: 9, scope: !4901)
!4904 = !DILocation(line: 1344, column: 14, scope: !4901)
!4905 = !DILocation(line: 1344, column: 33, scope: !4901)
!4906 = !DILocation(line: 1344, column: 38, scope: !4901)
!4907 = !DILocation(line: 1344, column: 31, scope: !4901)
!4908 = !DILocation(line: 1345, column: 11, scope: !4901)
!4909 = !DILocation(line: 1345, column: 16, scope: !4901)
!4910 = !DILocation(line: 1345, column: 32, scope: !4901)
!4911 = !DILocation(line: 1345, column: 37, scope: !4901)
!4912 = !DILocation(line: 1345, column: 30, scope: !4901)
!4913 = !DILocation(line: 1345, column: 8, scope: !4901)
!4914 = !DILocation(line: 1347, column: 8, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4901, file: !1, line: 1347, column: 8)
!4916 = !DILocation(line: 1347, column: 33, scope: !4915)
!4917 = !DILocation(line: 1347, column: 23, scope: !4915)
!4918 = !DILocation(line: 1347, column: 8, scope: !4901)
!4919 = !DILocation(line: 1348, column: 30, scope: !4915)
!4920 = !DILocation(line: 1348, column: 20, scope: !4915)
!4921 = !DILocation(line: 1348, column: 5, scope: !4915)
!4922 = !DILocation(line: 1350, column: 14, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4901, file: !1, line: 1350, column: 8)
!4924 = !DILocation(line: 1350, column: 19, scope: !4923)
!4925 = !DILocation(line: 1350, column: 26, scope: !4923)
!4926 = !DILocation(line: 1350, column: 36, scope: !4923)
!4927 = !DILocation(line: 1350, column: 10, scope: !4923)
!4928 = !DILocation(line: 1350, column: 57, scope: !4923)
!4929 = !DILocation(line: 1351, column: 10, scope: !4923)
!4930 = !DILocation(line: 1351, column: 15, scope: !4923)
!4931 = !DILocation(line: 1351, column: 37, scope: !4923)
!4932 = !DILocation(line: 1350, column: 8, scope: !4933)
!4933 = !DILexicalBlockFile(scope: !4901, file: !1, discriminator: 1)
!4934 = !DILocation(line: 1352, column: 19, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !1, line: 1352, column: 9)
!4936 = distinct !DILexicalBlock(scope: !4923, file: !1, line: 1351, column: 42)
!4937 = !DILocation(line: 1352, column: 24, scope: !4935)
!4938 = !DILocation(line: 1353, column: 11, scope: !4935)
!4939 = !DILocation(line: 1353, column: 9, scope: !4935)
!4940 = !DILocation(line: 1354, column: 13, scope: !4935)
!4941 = !DILocation(line: 1354, column: 18, scope: !4935)
!4942 = !DILocation(line: 1354, column: 11, scope: !4935)
!4943 = !DILocation(line: 1352, column: 9, scope: !4936)
!4944 = !DILocation(line: 1355, column: 10, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4946, file: !1, line: 1355, column: 10)
!4946 = distinct !DILexicalBlock(scope: !4935, file: !1, line: 1354, column: 41)
!4947 = !DILocation(line: 1355, column: 15, scope: !4945)
!4948 = !DILocation(line: 1356, column: 21, scope: !4945)
!4949 = !DILocation(line: 1356, column: 26, scope: !4945)
!4950 = !DILocation(line: 1355, column: 37, scope: !4945)
!4951 = !DILocation(line: 1355, column: 10, scope: !4946)
!4952 = !DILocation(line: 1357, column: 22, scope: !4945)
!4953 = !DILocation(line: 1357, column: 7, scope: !4945)
!4954 = !DILocation(line: 1360, column: 19, scope: !4945)
!4955 = !DILocation(line: 1360, column: 24, scope: !4945)
!4956 = !DILocation(line: 1361, column: 15, scope: !4945)
!4957 = !DILocation(line: 1361, column: 20, scope: !4945)
!4958 = !DILocation(line: 1361, column: 13, scope: !4945)
!4959 = !DILocation(line: 1359, column: 22, scope: !4945)
!4960 = !DILocation(line: 1362, column: 5, scope: !4946)
!4961 = !DILocation(line: 1363, column: 4, scope: !4936)
!4962 = !DILocation(line: 1364, column: 8, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4901, file: !1, line: 1364, column: 8)
!4964 = !DILocation(line: 1364, column: 23, scope: !4963)
!4965 = !DILocation(line: 1364, column: 8, scope: !4901)
!4966 = !DILocation(line: 1365, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !1, line: 1365, column: 9)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !1, line: 1364, column: 28)
!4969 = !DILocation(line: 1365, column: 14, scope: !4967)
!4970 = !DILocation(line: 1365, column: 9, scope: !4968)
!4971 = !DILocation(line: 1366, column: 31, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4967, file: !1, line: 1365, column: 26)
!4973 = !DILocation(line: 1366, column: 36, scope: !4972)
!4974 = !DILocation(line: 1367, column: 10, scope: !4972)
!4975 = !DILocation(line: 1367, column: 27, scope: !4972)
!4976 = !DILocation(line: 1368, column: 10, scope: !4972)
!4977 = !DILocation(line: 1368, column: 15, scope: !4972)
!4978 = !DILocation(line: 1369, column: 14, scope: !4972)
!4979 = !DILocation(line: 1369, column: 19, scope: !4972)
!4980 = !DILocation(line: 1369, column: 12, scope: !4972)
!4981 = !DILocation(line: 1370, column: 10, scope: !4972)
!4982 = !DILocation(line: 1366, column: 6, scope: !4972)
!4983 = !DILocation(line: 1371, column: 5, scope: !4972)
!4984 = !DILocalVariable(name: "dsize", scope: !4985, file: !1, line: 1372, type: !45)
!4985 = distinct !DILexicalBlock(scope: !4967, file: !1, line: 1371, column: 12)
!4986 = !DILocation(line: 1372, column: 13, scope: !4985)
!4987 = !DILocation(line: 1372, column: 21, scope: !4985)
!4988 = !DILocation(line: 1373, column: 6, scope: !4985)
!4989 = !DILocation(line: 1380, column: 39, scope: !4968)
!4990 = !DILocation(line: 1380, column: 5, scope: !4968)
!4991 = !DILocation(line: 1380, column: 10, scope: !4968)
!4992 = !DILocation(line: 1380, column: 36, scope: !4968)
!4993 = !DILocation(line: 1381, column: 4, scope: !4968)
!4994 = !DILocation(line: 1382, column: 3, scope: !4901)
!4995 = !DILocation(line: 1383, column: 17, scope: !4895)
!4996 = !DILocation(line: 1383, column: 22, scope: !4895)
!4997 = !DILocation(line: 1383, column: 15, scope: !4895)
!4998 = !DILocation(line: 1384, column: 35, scope: !4895)
!4999 = !DILocation(line: 1384, column: 40, scope: !4895)
!5000 = !DILocation(line: 1384, column: 19, scope: !4895)
!5001 = !DILocation(line: 1385, column: 2, scope: !4895)
!5002 = !DILocation(line: 1393, column: 58, scope: !527)
!5003 = !DILocation(line: 1393, column: 33, scope: !527)
!5004 = !DILocation(line: 1393, column: 24, scope: !527)
!5005 = !DILocation(line: 1393, column: 2, scope: !527)
!5006 = !DILocation(line: 1393, column: 7, scope: !527)
!5007 = !DILocation(line: 1393, column: 14, scope: !527)
!5008 = !DILocation(line: 1393, column: 22, scope: !527)
!5009 = !DILocation(line: 1394, column: 31, scope: !527)
!5010 = !DILocation(line: 1394, column: 25, scope: !527)
!5011 = !DILocation(line: 1394, column: 2, scope: !527)
!5012 = !DILocation(line: 1394, column: 7, scope: !527)
!5013 = !DILocation(line: 1394, column: 14, scope: !527)
!5014 = !DILocation(line: 1394, column: 23, scope: !527)
!5015 = !DILocation(line: 1395, column: 2, scope: !527)
!5016 = !DILocation(line: 1395, column: 7, scope: !527)
!5017 = !DILocation(line: 1395, column: 14, scope: !527)
!5018 = !DILocation(line: 1395, column: 23, scope: !527)
!5019 = !DILocation(line: 1396, column: 25, scope: !527)
!5020 = !DILocation(line: 1396, column: 30, scope: !527)
!5021 = !DILocation(line: 1396, column: 2, scope: !527)
!5022 = !DILocation(line: 1396, column: 7, scope: !527)
!5023 = !DILocation(line: 1396, column: 14, scope: !527)
!5024 = !DILocation(line: 1396, column: 23, scope: !527)
!5025 = !DILocation(line: 1397, column: 32, scope: !527)
!5026 = !DILocation(line: 1397, column: 37, scope: !527)
!5027 = !DILocation(line: 1397, column: 26, scope: !527)
!5028 = !DILocation(line: 1397, column: 2, scope: !527)
!5029 = !DILocation(line: 1397, column: 7, scope: !527)
!5030 = !DILocation(line: 1397, column: 14, scope: !527)
!5031 = !DILocation(line: 1397, column: 24, scope: !527)
!5032 = !DILocation(line: 1398, column: 2, scope: !527)
!5033 = !DILocation(line: 1398, column: 7, scope: !527)
!5034 = !DILocation(line: 1398, column: 14, scope: !527)
!5035 = !DILocation(line: 1398, column: 24, scope: !527)
!5036 = !DILocation(line: 1400, column: 15, scope: !527)
!5037 = !DILocation(line: 1400, column: 20, scope: !527)
!5038 = !DILocation(line: 1400, column: 6, scope: !527)
!5039 = !DILocation(line: 1400, column: 4, scope: !527)
!5040 = !DILocation(line: 1401, column: 10, scope: !527)
!5041 = !DILocation(line: 1401, column: 2, scope: !527)
!5042 = !DILocation(line: 1403, column: 3, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1401, column: 13)
!5044 = !DILocation(line: 1405, column: 3, scope: !5043)
!5045 = !DILocation(line: 1405, column: 8, scope: !5043)
!5046 = !DILocation(line: 1405, column: 21, scope: !5043)
!5047 = !DILocation(line: 1406, column: 3, scope: !5043)
!5048 = !DILocation(line: 1408, column: 22, scope: !5043)
!5049 = !DILocation(line: 1408, column: 25, scope: !5043)
!5050 = !DILocation(line: 1408, column: 3, scope: !5043)
!5051 = !DILocation(line: 1410, column: 3, scope: !5043)
!5052 = !DILocation(line: 1412, column: 22, scope: !5043)
!5053 = !DILocation(line: 1412, column: 25, scope: !5043)
!5054 = !DILocation(line: 1413, column: 40, scope: !5043)
!5055 = !DILocation(line: 1412, column: 3, scope: !5043)
!5056 = !DILocation(line: 1414, column: 3, scope: !5043)
!5057 = !DILocation(line: 1418, column: 16, scope: !527)
!5058 = !DILocation(line: 1418, column: 21, scope: !527)
!5059 = !DILocation(line: 1418, column: 28, scope: !527)
!5060 = !DILocation(line: 1418, column: 14, scope: !527)
!5061 = !DILocation(line: 1419, column: 6, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1419, column: 6)
!5063 = !DILocation(line: 1419, column: 11, scope: !5062)
!5064 = !DILocation(line: 1419, column: 22, scope: !5062)
!5065 = !DILocation(line: 1419, column: 25, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !5062, file: !1, discriminator: 1)
!5067 = !DILocation(line: 1419, column: 30, scope: !5066)
!5068 = !DILocation(line: 1419, column: 6, scope: !5066)
!5069 = !DILocation(line: 1420, column: 37, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5062, file: !1, line: 1419, column: 42)
!5071 = !DILocation(line: 1420, column: 3, scope: !5070)
!5072 = !DILocation(line: 1420, column: 8, scope: !5070)
!5073 = !DILocation(line: 1420, column: 34, scope: !5070)
!5074 = !DILocation(line: 1421, column: 7, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5070, file: !1, line: 1421, column: 7)
!5076 = !DILocation(line: 1421, column: 12, scope: !5075)
!5077 = !DILocation(line: 1421, column: 38, scope: !5075)
!5078 = !DILocation(line: 1421, column: 7, scope: !5070)
!5079 = !DILocation(line: 1422, column: 25, scope: !5075)
!5080 = !DILocation(line: 1422, column: 30, scope: !5075)
!5081 = !DILocation(line: 1422, column: 4, scope: !5075)
!5082 = !DILocation(line: 1422, column: 9, scope: !5075)
!5083 = !DILocation(line: 1422, column: 23, scope: !5075)
!5084 = !DILocation(line: 1424, column: 26, scope: !5075)
!5085 = !DILocation(line: 1424, column: 4, scope: !5075)
!5086 = !DILocation(line: 1424, column: 9, scope: !5075)
!5087 = !DILocation(line: 1424, column: 23, scope: !5075)
!5088 = !DILocation(line: 1425, column: 2, scope: !5070)
!5089 = !DILocation(line: 1427, column: 6, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1427, column: 6)
!5091 = !DILocation(line: 1427, column: 11, scope: !5090)
!5092 = !DILocation(line: 1427, column: 6, scope: !527)
!5093 = !DILocation(line: 1428, column: 3, scope: !5090)
!5094 = !DILocation(line: 1429, column: 25, scope: !527)
!5095 = !DILocation(line: 1429, column: 28, scope: !527)
!5096 = !DILocation(line: 1429, column: 2, scope: !527)
!5097 = !DILocation(line: 1430, column: 32, scope: !527)
!5098 = !DILocation(line: 1430, column: 2, scope: !527)
!5099 = !DILocation(line: 1430, column: 7, scope: !527)
!5100 = !DILocation(line: 1430, column: 29, scope: !527)
!5101 = !DILocation(line: 1431, column: 38, scope: !527)
!5102 = !DILocation(line: 1431, column: 2, scope: !527)
!5103 = !DILocation(line: 1431, column: 7, scope: !527)
!5104 = !DILocation(line: 1431, column: 35, scope: !527)
!5105 = !DILocation(line: 1433, column: 10, scope: !527)
!5106 = !DILocation(line: 1433, column: 15, scope: !527)
!5107 = !DILocation(line: 1433, column: 22, scope: !527)
!5108 = !DILocation(line: 1433, column: 3, scope: !527)
!5109 = !DILocation(line: 1433, column: 8, scope: !527)
!5110 = !DILocation(line: 1434, column: 40, scope: !527)
!5111 = !DILocation(line: 1434, column: 45, scope: !527)
!5112 = !DILocation(line: 1434, column: 52, scope: !527)
!5113 = !DILocation(line: 1434, column: 2, scope: !527)
!5114 = !DILocation(line: 1434, column: 7, scope: !527)
!5115 = !DILocation(line: 1434, column: 37, scope: !527)
!5116 = !DILocation(line: 1435, column: 10, scope: !527)
!5117 = !DILocation(line: 1435, column: 15, scope: !527)
!5118 = !DILocation(line: 1435, column: 3, scope: !527)
!5119 = !DILocation(line: 1435, column: 8, scope: !527)
!5120 = !DILocation(line: 1437, column: 6, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1437, column: 6)
!5122 = !DILocation(line: 1437, column: 11, scope: !5121)
!5123 = !DILocation(line: 1437, column: 24, scope: !5121)
!5124 = !DILocation(line: 1437, column: 27, scope: !5125)
!5125 = !DILexicalBlockFile(scope: !5121, file: !1, discriminator: 1)
!5126 = !DILocation(line: 1437, column: 32, scope: !5125)
!5127 = !DILocation(line: 1437, column: 6, scope: !5125)
!5128 = !DILocation(line: 1438, column: 33, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5121, file: !1, line: 1437, column: 44)
!5130 = !DILocation(line: 1438, column: 7, scope: !5129)
!5131 = !DILocation(line: 1438, column: 5, scope: !5129)
!5132 = !DILocation(line: 1439, column: 7, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !1, line: 1439, column: 7)
!5134 = !DILocation(line: 1439, column: 9, scope: !5133)
!5135 = !DILocation(line: 1439, column: 7, scope: !5129)
!5136 = !DILocation(line: 1440, column: 12, scope: !5133)
!5137 = !DILocation(line: 1440, column: 4, scope: !5133)
!5138 = !DILocation(line: 1441, column: 2, scope: !5129)
!5139 = !DILocation(line: 1443, column: 6, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1443, column: 6)
!5141 = !DILocation(line: 1443, column: 11, scope: !5140)
!5142 = !DILocation(line: 1443, column: 24, scope: !5140)
!5143 = !DILocation(line: 1443, column: 28, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !5140, file: !1, discriminator: 1)
!5145 = !DILocation(line: 1443, column: 33, scope: !5144)
!5146 = !DILocation(line: 1443, column: 40, scope: !5144)
!5147 = !DILocation(line: 1443, column: 50, scope: !5144)
!5148 = !DILocation(line: 1443, column: 6, scope: !5144)
!5149 = !DILocalVariable(name: "p", scope: !5150, file: !1, line: 1444, type: !80)
!5150 = distinct !DILexicalBlock(scope: !5140, file: !1, line: 1443, column: 72)
!5151 = !DILocation(line: 1444, column: 15, scope: !5150)
!5152 = !DILocation(line: 1446, column: 41, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5150, file: !1, line: 1446, column: 7)
!5154 = !DILocation(line: 1446, column: 20, scope: !5153)
!5155 = !DILocation(line: 1446, column: 18, scope: !5153)
!5156 = !DILocation(line: 1446, column: 12, scope: !5153)
!5157 = !DILocation(line: 1446, column: 7, scope: !5150)
!5158 = !DILocation(line: 1447, column: 23, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5153, file: !1, line: 1446, column: 56)
!5160 = !DILocation(line: 1447, column: 26, scope: !5159)
!5161 = !DILocation(line: 1447, column: 4, scope: !5159)
!5162 = !DILocation(line: 1450, column: 4, scope: !5159)
!5163 = !DILocation(line: 1453, column: 7, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5150, file: !1, line: 1453, column: 7)
!5165 = !DILocation(line: 1453, column: 12, scope: !5164)
!5166 = !DILocation(line: 1453, column: 19, scope: !5164)
!5167 = !DILocation(line: 1453, column: 22, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !5164, file: !1, discriminator: 1)
!5169 = !DILocation(line: 1453, column: 27, scope: !5168)
!5170 = !DILocation(line: 1453, column: 34, scope: !5168)
!5171 = !DILocation(line: 1454, column: 7, scope: !5164)
!5172 = !DILocation(line: 1454, column: 12, scope: !5164)
!5173 = !DILocation(line: 1454, column: 22, scope: !5164)
!5174 = !DILocation(line: 1454, column: 25, scope: !5168)
!5175 = !DILocation(line: 1454, column: 30, scope: !5168)
!5176 = !DILocation(line: 1453, column: 7, scope: !5177)
!5177 = !DILexicalBlockFile(scope: !5150, file: !1, discriminator: 2)
!5178 = !DILocation(line: 1455, column: 6, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5164, file: !1, line: 1454, column: 41)
!5180 = !DILocation(line: 1456, column: 4, scope: !5179)
!5181 = !DILocation(line: 1456, column: 9, scope: !5179)
!5182 = !DILocation(line: 1456, column: 20, scope: !5179)
!5183 = !DILocation(line: 1457, column: 3, scope: !5179)
!5184 = !DILocation(line: 1458, column: 7, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5150, file: !1, line: 1458, column: 7)
!5186 = !DILocation(line: 1458, column: 12, scope: !5185)
!5187 = !DILocation(line: 1458, column: 19, scope: !5185)
!5188 = !DILocation(line: 1458, column: 25, scope: !5185)
!5189 = !DILocation(line: 1458, column: 7, scope: !5150)
!5190 = !DILocalVariable(name: "compressed", scope: !5191, file: !1, line: 1459, type: !468)
!5191 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 1458, column: 42)
!5192 = !DILocation(line: 1459, column: 13, scope: !5191)
!5193 = !DILocalVariable(name: "uncompressed", scope: !5191, file: !1, line: 1459, type: !468)
!5194 = !DILocation(line: 1459, column: 25, scope: !5191)
!5195 = !DILocation(line: 1460, column: 40, scope: !5191)
!5196 = !DILocation(line: 1460, column: 24, scope: !5191)
!5197 = !DILocation(line: 1460, column: 4, scope: !5191)
!5198 = !DILocation(line: 1460, column: 9, scope: !5191)
!5199 = !DILocation(line: 1460, column: 16, scope: !5191)
!5200 = !DILocation(line: 1460, column: 22, scope: !5191)
!5201 = !DILocation(line: 1461, column: 33, scope: !5191)
!5202 = !DILocation(line: 1461, column: 35, scope: !5191)
!5203 = !DILocation(line: 1461, column: 17, scope: !5191)
!5204 = !DILocation(line: 1461, column: 15, scope: !5191)
!5205 = !DILocation(line: 1462, column: 35, scope: !5191)
!5206 = !DILocation(line: 1462, column: 37, scope: !5191)
!5207 = !DILocation(line: 1462, column: 19, scope: !5191)
!5208 = !DILocation(line: 1462, column: 17, scope: !5191)
!5209 = !DILocation(line: 1463, column: 8, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5191, file: !1, line: 1463, column: 8)
!5211 = !DILocation(line: 1463, column: 19, scope: !5210)
!5212 = !DILocation(line: 1463, column: 31, scope: !5210)
!5213 = !DILocation(line: 1463, column: 34, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5210, file: !1, discriminator: 1)
!5215 = !DILocation(line: 1463, column: 47, scope: !5214)
!5216 = !DILocation(line: 1463, column: 8, scope: !5214)
!5217 = !DILocation(line: 1464, column: 24, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5210, file: !1, line: 1463, column: 60)
!5219 = !DILocation(line: 1464, column: 27, scope: !5218)
!5220 = !DILocation(line: 1464, column: 5, scope: !5218)
!5221 = !DILocation(line: 1467, column: 5, scope: !5218)
!5222 = !DILocation(line: 1469, column: 34, scope: !5191)
!5223 = !DILocation(line: 1469, column: 4, scope: !5191)
!5224 = !DILocation(line: 1469, column: 9, scope: !5191)
!5225 = !DILocation(line: 1469, column: 16, scope: !5191)
!5226 = !DILocation(line: 1469, column: 32, scope: !5191)
!5227 = !DILocation(line: 1470, column: 36, scope: !5191)
!5228 = !DILocation(line: 1470, column: 4, scope: !5191)
!5229 = !DILocation(line: 1470, column: 9, scope: !5191)
!5230 = !DILocation(line: 1470, column: 16, scope: !5191)
!5231 = !DILocation(line: 1470, column: 34, scope: !5191)
!5232 = !DILocation(line: 1471, column: 4, scope: !5191)
!5233 = !DILocation(line: 1471, column: 9, scope: !5191)
!5234 = !DILocation(line: 1471, column: 20, scope: !5191)
!5235 = !DILocation(line: 1472, column: 3, scope: !5191)
!5236 = !DILocation(line: 1473, column: 40, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 1472, column: 10)
!5238 = !DILocation(line: 1473, column: 24, scope: !5237)
!5239 = !DILocation(line: 1473, column: 4, scope: !5237)
!5240 = !DILocation(line: 1473, column: 9, scope: !5237)
!5241 = !DILocation(line: 1473, column: 16, scope: !5237)
!5242 = !DILocation(line: 1473, column: 22, scope: !5237)
!5243 = !DILocation(line: 1474, column: 50, scope: !5237)
!5244 = !DILocation(line: 1474, column: 52, scope: !5237)
!5245 = !DILocation(line: 1474, column: 34, scope: !5237)
!5246 = !DILocation(line: 1474, column: 4, scope: !5237)
!5247 = !DILocation(line: 1474, column: 9, scope: !5237)
!5248 = !DILocation(line: 1474, column: 16, scope: !5237)
!5249 = !DILocation(line: 1474, column: 32, scope: !5237)
!5250 = !DILocation(line: 1475, column: 52, scope: !5237)
!5251 = !DILocation(line: 1475, column: 54, scope: !5237)
!5252 = !DILocation(line: 1475, column: 36, scope: !5237)
!5253 = !DILocation(line: 1475, column: 4, scope: !5237)
!5254 = !DILocation(line: 1475, column: 9, scope: !5237)
!5255 = !DILocation(line: 1475, column: 16, scope: !5237)
!5256 = !DILocation(line: 1475, column: 34, scope: !5237)
!5257 = !DILocation(line: 1476, column: 4, scope: !5237)
!5258 = !DILocation(line: 1476, column: 9, scope: !5237)
!5259 = !DILocation(line: 1476, column: 20, scope: !5237)
!5260 = !DILocation(line: 1478, column: 2, scope: !5150)
!5261 = !DILocation(line: 1480, column: 2, scope: !527)
!5262 = !DILocation(line: 1481, column: 1, scope: !527)
!5263 = !DILocalVariable(name: "a", arg: 1, scope: !508, file: !1, line: 1679, type: !4)
!5264 = !DILocation(line: 1679, column: 50, scope: !508)
!5265 = !DILocalVariable(name: "zip", scope: !508, file: !1, line: 1681, type: !292)
!5266 = !DILocation(line: 1681, column: 14, scope: !508)
!5267 = !DILocation(line: 1681, column: 35, scope: !508)
!5268 = !DILocation(line: 1681, column: 38, scope: !508)
!5269 = !DILocation(line: 1681, column: 46, scope: !508)
!5270 = !DILocation(line: 1681, column: 20, scope: !508)
!5271 = !DILocalVariable(name: "bs", scope: !508, file: !1, line: 1682, type: !45)
!5272 = !DILocation(line: 1682, column: 9, scope: !508)
!5273 = !DILocation(line: 1684, column: 6, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !508, file: !1, line: 1684, column: 6)
!5275 = !DILocation(line: 1684, column: 11, scope: !5274)
!5276 = !DILocation(line: 1684, column: 28, scope: !5274)
!5277 = !DILocation(line: 1684, column: 6, scope: !508)
!5278 = !DILocation(line: 1685, column: 32, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 1684, column: 37)
!5280 = !DILocation(line: 1685, column: 3, scope: !5279)
!5281 = !DILocation(line: 1685, column: 8, scope: !5279)
!5282 = !DILocation(line: 1685, column: 30, scope: !5279)
!5283 = !DILocation(line: 1686, column: 34, scope: !5279)
!5284 = !DILocation(line: 1686, column: 27, scope: !5279)
!5285 = !DILocation(line: 1686, column: 3, scope: !5279)
!5286 = !DILocation(line: 1686, column: 8, scope: !5279)
!5287 = !DILocation(line: 1686, column: 25, scope: !5279)
!5288 = !DILocation(line: 1687, column: 7, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5279, file: !1, line: 1687, column: 7)
!5290 = !DILocation(line: 1687, column: 12, scope: !5289)
!5291 = !DILocation(line: 1687, column: 29, scope: !5289)
!5292 = !DILocation(line: 1687, column: 7, scope: !5279)
!5293 = !DILocation(line: 1688, column: 23, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5289, file: !1, line: 1687, column: 38)
!5295 = !DILocation(line: 1688, column: 26, scope: !5294)
!5296 = !DILocation(line: 1688, column: 4, scope: !5294)
!5297 = !DILocation(line: 1690, column: 4, scope: !5294)
!5298 = !DILocation(line: 1692, column: 2, scope: !5279)
!5299 = !DILocation(line: 1693, column: 23, scope: !508)
!5300 = !DILocation(line: 1693, column: 28, scope: !508)
!5301 = !DILocation(line: 1693, column: 2, scope: !508)
!5302 = !DILocation(line: 1693, column: 7, scope: !508)
!5303 = !DILocation(line: 1693, column: 21, scope: !508)
!5304 = !DILocation(line: 1694, column: 2, scope: !508)
!5305 = !DILocation(line: 1695, column: 1, scope: !508)
!5306 = !DILocalVariable(name: "ctx", arg: 1, scope: !510, file: !1, line: 267, type: !513)
!5307 = !DILocation(line: 267, column: 36, scope: !510)
!5308 = !DILocalVariable(name: "pw", arg: 2, scope: !510, file: !1, line: 267, type: !80)
!5309 = !DILocation(line: 267, column: 53, scope: !510)
!5310 = !DILocalVariable(name: "pw_len", arg: 3, scope: !510, file: !1, line: 267, type: !45)
!5311 = !DILocation(line: 267, column: 64, scope: !510)
!5312 = !DILocalVariable(name: "key", arg: 4, scope: !510, file: !1, line: 268, type: !469)
!5313 = !DILocation(line: 268, column: 20, scope: !510)
!5314 = !DILocalVariable(name: "key_len", arg: 5, scope: !510, file: !1, line: 268, type: !45)
!5315 = !DILocation(line: 268, column: 32, scope: !510)
!5316 = !DILocalVariable(name: "crcchk", arg: 6, scope: !510, file: !1, line: 268, type: !459)
!5317 = !DILocation(line: 268, column: 50, scope: !510)
!5318 = !DILocalVariable(name: "header", scope: !510, file: !1, line: 270, type: !5319)
!5319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 96, align: 8, elements: !5320)
!5320 = !{!5321}
!5321 = !DISubrange(count: 12)
!5322 = !DILocation(line: 270, column: 10, scope: !510)
!5323 = !DILocation(line: 272, column: 6, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !510, file: !1, line: 272, column: 6)
!5325 = !DILocation(line: 272, column: 14, scope: !5324)
!5326 = !DILocation(line: 272, column: 6, scope: !510)
!5327 = !DILocation(line: 273, column: 4, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !1, line: 272, column: 20)
!5329 = !DILocation(line: 273, column: 11, scope: !5328)
!5330 = !DILocation(line: 274, column: 3, scope: !5328)
!5331 = !DILocation(line: 277, column: 2, scope: !510)
!5332 = !DILocation(line: 277, column: 7, scope: !510)
!5333 = !DILocation(line: 277, column: 15, scope: !510)
!5334 = !DILocation(line: 278, column: 2, scope: !510)
!5335 = !DILocation(line: 278, column: 7, scope: !510)
!5336 = !DILocation(line: 278, column: 15, scope: !510)
!5337 = !DILocation(line: 279, column: 2, scope: !510)
!5338 = !DILocation(line: 279, column: 7, scope: !510)
!5339 = !DILocation(line: 279, column: 15, scope: !510)
!5340 = !DILocation(line: 281, column: 2, scope: !510)
!5341 = !DILocation(line: 281, column: 8, scope: !5342)
!5342 = !DILexicalBlockFile(scope: !5343, file: !1, discriminator: 1)
!5343 = distinct !DILexicalBlock(scope: !5344, file: !1, line: 281, column: 2)
!5344 = distinct !DILexicalBlock(scope: !510, file: !1, line: 281, column: 2)
!5345 = !DILocation(line: 281, column: 2, scope: !5342)
!5346 = !DILocation(line: 282, column: 24, scope: !5343)
!5347 = !DILocation(line: 282, column: 32, scope: !5343)
!5348 = !DILocation(line: 282, column: 29, scope: !5343)
!5349 = !DILocation(line: 282, column: 3, scope: !5343)
!5350 = !DILocation(line: 281, column: 16, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !5343, file: !1, discriminator: 2)
!5352 = !DILocation(line: 281, column: 2, scope: !5351)
!5353 = !DILocation(line: 284, column: 26, scope: !510)
!5354 = !DILocation(line: 284, column: 31, scope: !510)
!5355 = !DILocation(line: 284, column: 40, scope: !510)
!5356 = !DILocation(line: 284, column: 2, scope: !510)
!5357 = !DILocation(line: 286, column: 12, scope: !510)
!5358 = !DILocation(line: 286, column: 3, scope: !510)
!5359 = !DILocation(line: 286, column: 10, scope: !510)
!5360 = !DILocation(line: 287, column: 2, scope: !510)
!5361 = !DILocation(line: 288, column: 1, scope: !510)
!5362 = !DILocalVariable(name: "ctx", arg: 1, scope: !514, file: !1, line: 232, type: !513)
!5363 = !DILocation(line: 232, column: 43, scope: !514)
!5364 = !DILocalVariable(name: "c", arg: 2, scope: !514, file: !1, line: 232, type: !460)
!5365 = !DILocation(line: 232, column: 56, scope: !514)
!5366 = !DILocalVariable(name: "t", scope: !514, file: !1, line: 234, type: !460)
!5367 = !DILocation(line: 234, column: 10, scope: !514)
!5368 = !DILocation(line: 237, column: 17, scope: !514)
!5369 = !DILocation(line: 237, column: 2, scope: !514)
!5370 = !DILocation(line: 237, column: 7, scope: !514)
!5371 = !DILocation(line: 237, column: 15, scope: !514)
!5372 = !DILocation(line: 238, column: 18, scope: !514)
!5373 = !DILocation(line: 238, column: 23, scope: !514)
!5374 = !DILocation(line: 238, column: 34, scope: !514)
!5375 = !DILocation(line: 238, column: 39, scope: !514)
!5376 = !DILocation(line: 238, column: 47, scope: !514)
!5377 = !DILocation(line: 238, column: 31, scope: !514)
!5378 = !DILocation(line: 238, column: 17, scope: !514)
!5379 = !DILocation(line: 238, column: 56, scope: !514)
!5380 = !DILocation(line: 238, column: 69, scope: !514)
!5381 = !DILocation(line: 238, column: 2, scope: !514)
!5382 = !DILocation(line: 238, column: 7, scope: !514)
!5383 = !DILocation(line: 238, column: 15, scope: !514)
!5384 = !DILocation(line: 239, column: 7, scope: !514)
!5385 = !DILocation(line: 239, column: 12, scope: !514)
!5386 = !DILocation(line: 239, column: 20, scope: !514)
!5387 = !DILocation(line: 239, column: 27, scope: !514)
!5388 = !DILocation(line: 239, column: 6, scope: !514)
!5389 = !DILocation(line: 239, column: 4, scope: !514)
!5390 = !DILocation(line: 240, column: 17, scope: !514)
!5391 = !DILocation(line: 240, column: 2, scope: !514)
!5392 = !DILocation(line: 240, column: 7, scope: !514)
!5393 = !DILocation(line: 240, column: 15, scope: !514)
!5394 = !DILocation(line: 242, column: 1, scope: !514)
!5395 = !DILocalVariable(name: "ctx", arg: 1, scope: !517, file: !1, line: 252, type: !513)
!5396 = !DILocation(line: 252, column: 46, scope: !517)
!5397 = !DILocalVariable(name: "in", arg: 2, scope: !517, file: !1, line: 252, type: !469)
!5398 = !DILocation(line: 252, column: 66, scope: !517)
!5399 = !DILocalVariable(name: "in_len", arg: 3, scope: !517, file: !1, line: 253, type: !45)
!5400 = !DILocation(line: 253, column: 12, scope: !517)
!5401 = !DILocalVariable(name: "out", arg: 4, scope: !517, file: !1, line: 253, type: !459)
!5402 = !DILocation(line: 253, column: 29, scope: !517)
!5403 = !DILocalVariable(name: "out_len", arg: 5, scope: !517, file: !1, line: 253, type: !45)
!5404 = !DILocation(line: 253, column: 41, scope: !517)
!5405 = !DILocalVariable(name: "i", scope: !517, file: !1, line: 255, type: !13)
!5406 = !DILocation(line: 255, column: 11, scope: !517)
!5407 = !DILocalVariable(name: "max", scope: !517, file: !1, line: 255, type: !13)
!5408 = !DILocation(line: 255, column: 14, scope: !517)
!5409 = !DILocation(line: 257, column: 20, scope: !517)
!5410 = !DILocation(line: 257, column: 29, scope: !517)
!5411 = !DILocation(line: 257, column: 27, scope: !517)
!5412 = !DILocation(line: 257, column: 19, scope: !517)
!5413 = !DILocation(line: 257, column: 39, scope: !5414)
!5414 = !DILexicalBlockFile(scope: !517, file: !1, discriminator: 1)
!5415 = !DILocation(line: 257, column: 19, scope: !5414)
!5416 = !DILocation(line: 257, column: 47, scope: !5417)
!5417 = !DILexicalBlockFile(scope: !517, file: !1, discriminator: 2)
!5418 = !DILocation(line: 257, column: 19, scope: !5417)
!5419 = !DILocation(line: 257, column: 19, scope: !5420)
!5420 = !DILexicalBlockFile(scope: !517, file: !1, discriminator: 3)
!5421 = !DILocation(line: 257, column: 8, scope: !5420)
!5422 = !DILocation(line: 257, column: 6, scope: !5420)
!5423 = !DILocation(line: 259, column: 9, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !517, file: !1, line: 259, column: 2)
!5425 = !DILocation(line: 259, column: 7, scope: !5424)
!5426 = !DILocation(line: 259, column: 14, scope: !5427)
!5427 = !DILexicalBlockFile(scope: !5428, file: !1, discriminator: 1)
!5428 = distinct !DILexicalBlock(scope: !5424, file: !1, line: 259, column: 2)
!5429 = !DILocation(line: 259, column: 18, scope: !5427)
!5430 = !DILocation(line: 259, column: 16, scope: !5427)
!5431 = !DILocation(line: 259, column: 2, scope: !5427)
!5432 = !DILocalVariable(name: "t", scope: !5433, file: !1, line: 260, type: !460)
!5433 = distinct !DILexicalBlock(scope: !5428, file: !1, line: 259, column: 28)
!5434 = !DILocation(line: 260, column: 11, scope: !5433)
!5435 = !DILocation(line: 260, column: 18, scope: !5433)
!5436 = !DILocation(line: 260, column: 15, scope: !5433)
!5437 = !DILocation(line: 260, column: 45, scope: !5433)
!5438 = !DILocation(line: 260, column: 23, scope: !5433)
!5439 = !DILocation(line: 260, column: 21, scope: !5433)
!5440 = !DILocation(line: 261, column: 12, scope: !5433)
!5441 = !DILocation(line: 261, column: 7, scope: !5433)
!5442 = !DILocation(line: 261, column: 3, scope: !5433)
!5443 = !DILocation(line: 261, column: 10, scope: !5433)
!5444 = !DILocation(line: 262, column: 24, scope: !5433)
!5445 = !DILocation(line: 262, column: 29, scope: !5433)
!5446 = !DILocation(line: 262, column: 3, scope: !5433)
!5447 = !DILocation(line: 263, column: 2, scope: !5433)
!5448 = !DILocation(line: 259, column: 24, scope: !5449)
!5449 = !DILexicalBlockFile(scope: !5428, file: !1, discriminator: 2)
!5450 = !DILocation(line: 259, column: 2, scope: !5449)
!5451 = !DILocation(line: 264, column: 1, scope: !517)
!5452 = !DILocalVariable(name: "ctx", arg: 1, scope: !520, file: !1, line: 245, type: !513)
!5453 = !DILocation(line: 245, column: 44, scope: !520)
!5454 = !DILocalVariable(name: "temp", scope: !520, file: !1, line: 247, type: !13)
!5455 = !DILocation(line: 247, column: 11, scope: !520)
!5456 = !DILocation(line: 247, column: 18, scope: !520)
!5457 = !DILocation(line: 247, column: 23, scope: !520)
!5458 = !DILocation(line: 247, column: 31, scope: !520)
!5459 = !DILocation(line: 248, column: 20, scope: !520)
!5460 = !DILocation(line: 248, column: 28, scope: !520)
!5461 = !DILocation(line: 248, column: 33, scope: !520)
!5462 = !DILocation(line: 248, column: 25, scope: !520)
!5463 = !DILocation(line: 248, column: 39, scope: !520)
!5464 = !DILocation(line: 248, column: 9, scope: !520)
!5465 = !DILocation(line: 248, column: 45, scope: !520)
!5466 = !DILocation(line: 248, column: 2, scope: !520)
!5467 = !DILocalVariable(name: "a", arg: 1, scope: !524, file: !1, line: 1068, type: !4)
!5468 = !DILocation(line: 1068, column: 48, scope: !524)
!5469 = !DILocalVariable(name: "_p", arg: 2, scope: !524, file: !1, line: 1068, type: !43)
!5470 = !DILocation(line: 1068, column: 63, scope: !524)
!5471 = !DILocalVariable(name: "zip", scope: !524, file: !1, line: 1070, type: !292)
!5472 = !DILocation(line: 1070, column: 14, scope: !524)
!5473 = !DILocation(line: 1070, column: 35, scope: !524)
!5474 = !DILocation(line: 1070, column: 38, scope: !524)
!5475 = !DILocation(line: 1070, column: 46, scope: !524)
!5476 = !DILocation(line: 1070, column: 20, scope: !524)
!5477 = !DILocation(line: 1073, column: 6, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1073, column: 6)
!5479 = !DILocation(line: 1073, column: 11, scope: !5478)
!5480 = !DILocation(line: 1073, column: 6, scope: !524)
!5481 = !DILocalVariable(name: "p", scope: !5482, file: !1, line: 1074, type: !43)
!5482 = distinct !DILexicalBlock(scope: !5478, file: !1, line: 1073, column: 23)
!5483 = !DILocation(line: 1074, column: 15, scope: !5482)
!5484 = !DILocalVariable(name: "hmac", scope: !5482, file: !1, line: 1075, type: !5485)
!5485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 160, align: 8, elements: !5486)
!5486 = !{!5487}
!5487 = !DISubrange(count: 20)
!5488 = !DILocation(line: 1075, column: 11, scope: !5482)
!5489 = !DILocalVariable(name: "hmac_len", scope: !5482, file: !1, line: 1076, type: !45)
!5490 = !DILocation(line: 1076, column: 10, scope: !5482)
!5491 = !DILocalVariable(name: "cmp", scope: !5482, file: !1, line: 1077, type: !23)
!5492 = !DILocation(line: 1077, column: 7, scope: !5482)
!5493 = !DILocation(line: 1079, column: 3, scope: !5482)
!5494 = !DILocation(line: 1080, column: 7, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5482, file: !1, line: 1080, column: 7)
!5496 = !DILocation(line: 1080, column: 10, scope: !5495)
!5497 = !DILocation(line: 1080, column: 7, scope: !5482)
!5498 = !DILocation(line: 1082, column: 29, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5495, file: !1, line: 1080, column: 19)
!5500 = !DILocation(line: 1082, column: 8, scope: !5499)
!5501 = !DILocation(line: 1082, column: 6, scope: !5499)
!5502 = !DILocation(line: 1083, column: 8, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 1083, column: 8)
!5504 = !DILocation(line: 1083, column: 10, scope: !5503)
!5505 = !DILocation(line: 1083, column: 8, scope: !5499)
!5506 = !DILocation(line: 1084, column: 24, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5503, file: !1, line: 1083, column: 19)
!5508 = !DILocation(line: 1084, column: 27, scope: !5507)
!5509 = !DILocation(line: 1084, column: 5, scope: !5507)
!5510 = !DILocation(line: 1087, column: 5, scope: !5507)
!5511 = !DILocation(line: 1089, column: 3, scope: !5499)
!5512 = !DILocation(line: 1090, column: 8, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5495, file: !1, line: 1089, column: 10)
!5514 = !DILocation(line: 1090, column: 6, scope: !5513)
!5515 = !DILocation(line: 1092, column: 16, scope: !5482)
!5516 = !DILocation(line: 1092, column: 22, scope: !5482)
!5517 = !DILocation(line: 1092, column: 9, scope: !5482)
!5518 = !DILocation(line: 1092, column: 7, scope: !5482)
!5519 = !DILocation(line: 1093, column: 26, scope: !5482)
!5520 = !DILocation(line: 1093, column: 3, scope: !5482)
!5521 = !DILocation(line: 1094, column: 7, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5482, file: !1, line: 1094, column: 7)
!5523 = !DILocation(line: 1094, column: 11, scope: !5522)
!5524 = !DILocation(line: 1094, column: 7, scope: !5482)
!5525 = !DILocation(line: 1095, column: 23, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 1094, column: 17)
!5527 = !DILocation(line: 1095, column: 26, scope: !5526)
!5528 = !DILocation(line: 1095, column: 4, scope: !5526)
!5529 = !DILocation(line: 1098, column: 4, scope: !5526)
!5530 = !DILocation(line: 1100, column: 2, scope: !5482)
!5531 = !DILocation(line: 1101, column: 2, scope: !524)
!5532 = !DILocation(line: 1102, column: 1, scope: !524)
!5533 = !DILocalVariable(name: "a", arg: 1, scope: !528, file: !1, line: 1271, type: !4)
!5534 = !DILocation(line: 1271, column: 39, scope: !528)
!5535 = !DILocalVariable(name: "zip", arg: 2, scope: !528, file: !1, line: 1271, type: !292)
!5536 = !DILocation(line: 1271, column: 54, scope: !528)
!5537 = !DILocalVariable(name: "r", scope: !528, file: !1, line: 1273, type: !23)
!5538 = !DILocation(line: 1273, column: 6, scope: !528)
!5539 = !DILocation(line: 1276, column: 7, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !528, file: !1, line: 1276, column: 6)
!5541 = !DILocation(line: 1276, column: 12, scope: !5540)
!5542 = !DILocation(line: 1276, column: 6, scope: !528)
!5543 = !DILocation(line: 1277, column: 7, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !1, line: 1277, column: 7)
!5545 = distinct !DILexicalBlock(scope: !5540, file: !1, line: 1276, column: 29)
!5546 = !DILocation(line: 1277, column: 12, scope: !5544)
!5547 = !DILocation(line: 1277, column: 7, scope: !5545)
!5548 = !DILocation(line: 1278, column: 22, scope: !5544)
!5549 = !DILocation(line: 1278, column: 27, scope: !5544)
!5550 = !DILocation(line: 1278, column: 8, scope: !5544)
!5551 = !DILocation(line: 1278, column: 6, scope: !5544)
!5552 = !DILocation(line: 1278, column: 4, scope: !5544)
!5553 = !DILocation(line: 1280, column: 8, scope: !5544)
!5554 = !DILocation(line: 1280, column: 6, scope: !5544)
!5555 = !DILocation(line: 1282, column: 7, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5545, file: !1, line: 1282, column: 7)
!5557 = !DILocation(line: 1282, column: 9, scope: !5556)
!5558 = !DILocation(line: 1282, column: 7, scope: !5545)
!5559 = !DILocation(line: 1283, column: 23, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5556, file: !1, line: 1282, column: 18)
!5561 = !DILocation(line: 1283, column: 26, scope: !5560)
!5562 = !DILocation(line: 1283, column: 4, scope: !5560)
!5563 = !DILocation(line: 1285, column: 4, scope: !5560)
!5564 = !DILocation(line: 1288, column: 3, scope: !5545)
!5565 = !DILocation(line: 1288, column: 8, scope: !5545)
!5566 = !DILocation(line: 1288, column: 21, scope: !5545)
!5567 = !DILocation(line: 1290, column: 3, scope: !5545)
!5568 = !DILocation(line: 1290, column: 8, scope: !5545)
!5569 = !DILocation(line: 1290, column: 24, scope: !5545)
!5570 = !DILocation(line: 1291, column: 2, scope: !5545)
!5571 = !DILocation(line: 1292, column: 2, scope: !528)
!5572 = !DILocation(line: 1293, column: 1, scope: !528)
!5573 = !DILocalVariable(name: "zip", arg: 1, scope: !536, file: !1, line: 2378, type: !292)
!5574 = !DILocation(line: 2378, column: 23, scope: !536)
!5575 = !DILocalVariable(name: "p", arg: 2, scope: !536, file: !1, line: 2378, type: !80)
!5576 = !DILocation(line: 2378, column: 40, scope: !536)
!5577 = !DILocalVariable(name: "current_offset", arg: 3, scope: !536, file: !1, line: 2378, type: !52)
!5578 = !DILocation(line: 2378, column: 51, scope: !536)
!5579 = !DILocation(line: 2383, column: 22, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !536, file: !1, line: 2383, column: 6)
!5581 = !DILocation(line: 2383, column: 24, scope: !5580)
!5582 = !DILocation(line: 2383, column: 6, scope: !5580)
!5583 = !DILocation(line: 2383, column: 29, scope: !5580)
!5584 = !DILocation(line: 2383, column: 6, scope: !536)
!5585 = !DILocation(line: 2384, column: 3, scope: !5580)
!5586 = !DILocation(line: 2386, column: 22, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !536, file: !1, line: 2386, column: 6)
!5588 = !DILocation(line: 2386, column: 24, scope: !5587)
!5589 = !DILocation(line: 2386, column: 6, scope: !5587)
!5590 = !DILocation(line: 2386, column: 48, scope: !5587)
!5591 = !DILocation(line: 2386, column: 50, scope: !5587)
!5592 = !DILocation(line: 2386, column: 32, scope: !5593)
!5593 = !DILexicalBlockFile(scope: !5587, file: !1, discriminator: 1)
!5594 = !DILocation(line: 2386, column: 32, scope: !5587)
!5595 = !DILocation(line: 2386, column: 29, scope: !5587)
!5596 = !DILocation(line: 2386, column: 6, scope: !536)
!5597 = !DILocation(line: 2387, column: 3, scope: !5587)
!5598 = !DILocation(line: 2389, column: 22, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !536, file: !1, line: 2389, column: 6)
!5600 = !DILocation(line: 2389, column: 24, scope: !5599)
!5601 = !DILocation(line: 2389, column: 6, scope: !5599)
!5602 = !DILocation(line: 2389, column: 49, scope: !5599)
!5603 = !DILocation(line: 2389, column: 51, scope: !5599)
!5604 = !DILocation(line: 2389, column: 33, scope: !5605)
!5605 = !DILexicalBlockFile(scope: !5599, file: !1, discriminator: 1)
!5606 = !DILocation(line: 2389, column: 33, scope: !5599)
!5607 = !DILocation(line: 2389, column: 30, scope: !5599)
!5608 = !DILocation(line: 2389, column: 6, scope: !536)
!5609 = !DILocation(line: 2390, column: 3, scope: !5599)
!5610 = !DILocation(line: 2392, column: 22, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !536, file: !1, line: 2392, column: 6)
!5612 = !DILocation(line: 2392, column: 24, scope: !5611)
!5613 = !DILocation(line: 2392, column: 6, scope: !5611)
!5614 = !DILocation(line: 2392, column: 48, scope: !5611)
!5615 = !DILocation(line: 2392, column: 50, scope: !5611)
!5616 = !DILocation(line: 2392, column: 32, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !5611, file: !1, discriminator: 1)
!5618 = !DILocation(line: 2392, column: 30, scope: !5611)
!5619 = !DILocation(line: 2393, column: 8, scope: !5611)
!5620 = !DILocation(line: 2393, column: 6, scope: !5611)
!5621 = !DILocation(line: 2392, column: 6, scope: !536)
!5622 = !DILocation(line: 2394, column: 3, scope: !5611)
!5623 = !DILocation(line: 2397, column: 50, scope: !536)
!5624 = !DILocation(line: 2397, column: 52, scope: !536)
!5625 = !DILocation(line: 2397, column: 34, scope: !536)
!5626 = !DILocation(line: 2397, column: 2, scope: !536)
!5627 = !DILocation(line: 2397, column: 7, scope: !536)
!5628 = !DILocation(line: 2397, column: 32, scope: !536)
!5629 = !DILocation(line: 2403, column: 2, scope: !536)
!5630 = !DILocation(line: 2404, column: 1, scope: !536)
!5631 = !DILocalVariable(name: "a", arg: 1, scope: !539, file: !1, line: 2411, type: !4)
!5632 = !DILocation(line: 2411, column: 38, scope: !539)
!5633 = !DILocalVariable(name: "zip", arg: 2, scope: !539, file: !1, line: 2411, type: !292)
!5634 = !DILocation(line: 2411, column: 53, scope: !539)
!5635 = !DILocalVariable(name: "p", arg: 3, scope: !539, file: !1, line: 2411, type: !80)
!5636 = !DILocation(line: 2411, column: 70, scope: !539)
!5637 = !DILocalVariable(name: "eocd64_offset", scope: !539, file: !1, line: 2413, type: !52)
!5638 = !DILocation(line: 2413, column: 10, scope: !539)
!5639 = !DILocalVariable(name: "eocd64_size", scope: !539, file: !1, line: 2414, type: !52)
!5640 = !DILocation(line: 2414, column: 10, scope: !539)
!5641 = !DILocation(line: 2419, column: 22, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2419, column: 6)
!5643 = !DILocation(line: 2419, column: 24, scope: !5642)
!5644 = !DILocation(line: 2419, column: 6, scope: !5642)
!5645 = !DILocation(line: 2419, column: 29, scope: !5642)
!5646 = !DILocation(line: 2419, column: 6, scope: !539)
!5647 = !DILocation(line: 2420, column: 3, scope: !5642)
!5648 = !DILocation(line: 2422, column: 22, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2422, column: 6)
!5650 = !DILocation(line: 2422, column: 24, scope: !5649)
!5651 = !DILocation(line: 2422, column: 6, scope: !5649)
!5652 = !DILocation(line: 2422, column: 30, scope: !5649)
!5653 = !DILocation(line: 2422, column: 6, scope: !539)
!5654 = !DILocation(line: 2423, column: 3, scope: !5649)
!5655 = !DILocation(line: 2426, column: 34, scope: !539)
!5656 = !DILocation(line: 2426, column: 36, scope: !539)
!5657 = !DILocation(line: 2426, column: 18, scope: !539)
!5658 = !DILocation(line: 2426, column: 16, scope: !539)
!5659 = !DILocation(line: 2427, column: 26, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2427, column: 6)
!5661 = !DILocation(line: 2427, column: 29, scope: !5660)
!5662 = !DILocation(line: 2427, column: 6, scope: !5660)
!5663 = !DILocation(line: 2427, column: 54, scope: !5660)
!5664 = !DILocation(line: 2427, column: 6, scope: !539)
!5665 = !DILocation(line: 2428, column: 3, scope: !5660)
!5666 = !DILocation(line: 2429, column: 32, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2429, column: 6)
!5668 = !DILocation(line: 2429, column: 11, scope: !5667)
!5669 = !DILocation(line: 2429, column: 9, scope: !5667)
!5670 = !DILocation(line: 2429, column: 46, scope: !5667)
!5671 = !DILocation(line: 2429, column: 6, scope: !539)
!5672 = !DILocation(line: 2430, column: 3, scope: !5667)
!5673 = !DILocation(line: 2432, column: 32, scope: !539)
!5674 = !DILocation(line: 2432, column: 34, scope: !539)
!5675 = !DILocation(line: 2432, column: 16, scope: !539)
!5676 = !DILocation(line: 2432, column: 39, scope: !539)
!5677 = !DILocation(line: 2432, column: 14, scope: !539)
!5678 = !DILocation(line: 2433, column: 6, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2433, column: 6)
!5680 = !DILocation(line: 2433, column: 18, scope: !5679)
!5681 = !DILocation(line: 2433, column: 23, scope: !5679)
!5682 = !DILocation(line: 2433, column: 26, scope: !5683)
!5683 = !DILexicalBlockFile(scope: !5679, file: !1, discriminator: 1)
!5684 = !DILocation(line: 2433, column: 38, scope: !5683)
!5685 = !DILocation(line: 2433, column: 6, scope: !5683)
!5686 = !DILocation(line: 2434, column: 3, scope: !5679)
!5687 = !DILocation(line: 2435, column: 32, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2435, column: 6)
!5689 = !DILocation(line: 2435, column: 43, scope: !5688)
!5690 = !DILocation(line: 2435, column: 11, scope: !5688)
!5691 = !DILocation(line: 2435, column: 9, scope: !5688)
!5692 = !DILocation(line: 2435, column: 63, scope: !5688)
!5693 = !DILocation(line: 2435, column: 6, scope: !539)
!5694 = !DILocation(line: 2436, column: 3, scope: !5688)
!5695 = !DILocation(line: 2439, column: 22, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2439, column: 6)
!5697 = !DILocation(line: 2439, column: 24, scope: !5696)
!5698 = !DILocation(line: 2439, column: 6, scope: !5696)
!5699 = !DILocation(line: 2439, column: 30, scope: !5696)
!5700 = !DILocation(line: 2439, column: 6, scope: !539)
!5701 = !DILocation(line: 2440, column: 3, scope: !5696)
!5702 = !DILocation(line: 2441, column: 22, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2441, column: 6)
!5704 = !DILocation(line: 2441, column: 24, scope: !5703)
!5705 = !DILocation(line: 2441, column: 6, scope: !5703)
!5706 = !DILocation(line: 2441, column: 30, scope: !5703)
!5707 = !DILocation(line: 2441, column: 6, scope: !539)
!5708 = !DILocation(line: 2442, column: 3, scope: !5703)
!5709 = !DILocation(line: 2444, column: 22, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !539, file: !1, line: 2444, column: 6)
!5711 = !DILocation(line: 2444, column: 24, scope: !5710)
!5712 = !DILocation(line: 2444, column: 6, scope: !5710)
!5713 = !DILocation(line: 2444, column: 49, scope: !5710)
!5714 = !DILocation(line: 2444, column: 51, scope: !5710)
!5715 = !DILocation(line: 2444, column: 33, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5710, file: !1, discriminator: 1)
!5717 = !DILocation(line: 2444, column: 30, scope: !5710)
!5718 = !DILocation(line: 2444, column: 6, scope: !539)
!5719 = !DILocation(line: 2445, column: 3, scope: !5710)
!5720 = !DILocation(line: 2448, column: 50, scope: !539)
!5721 = !DILocation(line: 2448, column: 52, scope: !539)
!5722 = !DILocation(line: 2448, column: 34, scope: !539)
!5723 = !DILocation(line: 2448, column: 2, scope: !539)
!5724 = !DILocation(line: 2448, column: 7, scope: !539)
!5725 = !DILocation(line: 2448, column: 32, scope: !539)
!5726 = !DILocation(line: 2449, column: 1, scope: !539)
!5727 = !DILocation(line: 2449, column: 1, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !539, file: !1, discriminator: 1)
!5729 = !DILocalVariable(name: "a", arg: 1, scope: !543, file: !1, line: 2600, type: !4)
!5730 = !DILocation(line: 2600, column: 46, scope: !543)
!5731 = !DILocalVariable(name: "zip", arg: 2, scope: !543, file: !1, line: 2600, type: !292)
!5732 = !DILocation(line: 2600, column: 61, scope: !543)
!5733 = !DILocalVariable(name: "i", scope: !543, file: !1, line: 2602, type: !38)
!5734 = !DILocation(line: 2602, column: 10, scope: !543)
!5735 = !DILocalVariable(name: "found", scope: !543, file: !1, line: 2603, type: !13)
!5736 = !DILocation(line: 2603, column: 11, scope: !543)
!5737 = !DILocalVariable(name: "correction", scope: !543, file: !1, line: 2604, type: !52)
!5738 = !DILocation(line: 2604, column: 10, scope: !543)
!5739 = !DILocalVariable(name: "bytes_avail", scope: !543, file: !1, line: 2605, type: !38)
!5740 = !DILocation(line: 2605, column: 10, scope: !543)
!5741 = !DILocalVariable(name: "p", scope: !543, file: !1, line: 2606, type: !80)
!5742 = !DILocation(line: 2606, column: 14, scope: !543)
!5743 = !DILocation(line: 2618, column: 26, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !543, file: !1, line: 2618, column: 6)
!5745 = !DILocation(line: 2618, column: 29, scope: !5744)
!5746 = !DILocation(line: 2618, column: 34, scope: !5744)
!5747 = !DILocation(line: 2618, column: 6, scope: !5744)
!5748 = !DILocation(line: 2618, column: 70, scope: !5744)
!5749 = !DILocation(line: 2618, column: 6, scope: !543)
!5750 = !DILocation(line: 2619, column: 3, scope: !5744)
!5751 = !DILocation(line: 2621, column: 8, scope: !543)
!5752 = !DILocation(line: 2622, column: 2, scope: !543)
!5753 = !DILocation(line: 2622, column: 10, scope: !5754)
!5754 = !DILexicalBlockFile(scope: !543, file: !1, discriminator: 1)
!5755 = !DILocation(line: 2622, column: 9, scope: !5754)
!5756 = !DILocation(line: 2622, column: 2, scope: !5754)
!5757 = !DILocation(line: 2623, column: 33, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !1, line: 2623, column: 7)
!5759 = distinct !DILexicalBlock(scope: !543, file: !1, line: 2622, column: 17)
!5760 = !DILocation(line: 2623, column: 12, scope: !5758)
!5761 = !DILocation(line: 2623, column: 10, scope: !5758)
!5762 = !DILocation(line: 2623, column: 55, scope: !5758)
!5763 = !DILocation(line: 2623, column: 7, scope: !5759)
!5764 = !DILocation(line: 2624, column: 4, scope: !5758)
!5765 = !DILocation(line: 2625, column: 14, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5759, file: !1, line: 2625, column: 3)
!5767 = !DILocation(line: 2625, column: 21, scope: !5766)
!5768 = !DILocation(line: 2625, column: 8, scope: !5766)
!5769 = !DILocation(line: 2625, column: 27, scope: !5770)
!5770 = !DILexicalBlockFile(scope: !5771, file: !1, discriminator: 1)
!5771 = distinct !DILexicalBlock(scope: !5766, file: !1, line: 2625, column: 3)
!5772 = !DILocation(line: 2625, column: 33, scope: !5770)
!5773 = !DILocation(line: 2625, column: 36, scope: !5774)
!5774 = !DILexicalBlockFile(scope: !5771, file: !1, discriminator: 2)
!5775 = !DILocation(line: 2625, column: 40, scope: !5774)
!5776 = !DILocation(line: 2625, column: 52, scope: !5774)
!5777 = !DILocation(line: 2625, column: 38, scope: !5774)
!5778 = !DILocation(line: 2625, column: 3, scope: !5779)
!5779 = !DILexicalBlockFile(scope: !5766, file: !1, discriminator: 3)
!5780 = !DILocation(line: 2626, column: 14, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5771, file: !1, line: 2625, column: 58)
!5782 = !DILocation(line: 2626, column: 16, scope: !5781)
!5783 = !DILocation(line: 2626, column: 12, scope: !5781)
!5784 = !DILocation(line: 2626, column: 4, scope: !5781)
!5785 = !DILocation(line: 2627, column: 16, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2626, column: 22)
!5787 = !DILocation(line: 2627, column: 22, scope: !5786)
!5788 = !DILocation(line: 2628, column: 16, scope: !5786)
!5789 = !DILocation(line: 2628, column: 22, scope: !5786)
!5790 = !DILocation(line: 2629, column: 16, scope: !5786)
!5791 = !DILocation(line: 2629, column: 22, scope: !5786)
!5792 = !DILocation(line: 2631, column: 16, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5786, file: !1, line: 2631, column: 9)
!5794 = !DILocation(line: 2631, column: 20, scope: !5793)
!5795 = !DILocation(line: 2631, column: 18, scope: !5793)
!5796 = !DILocation(line: 2631, column: 9, scope: !5793)
!5797 = !DILocation(line: 2631, column: 40, scope: !5793)
!5798 = !DILocation(line: 2631, column: 9, scope: !5786)
!5799 = !DILocation(line: 2632, column: 11, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5793, file: !1, line: 2631, column: 46)
!5801 = !DILocation(line: 2632, column: 8, scope: !5800)
!5802 = !DILocation(line: 2633, column: 12, scope: !5800)
!5803 = !DILocation(line: 2634, column: 5, scope: !5800)
!5804 = !DILocation(line: 2635, column: 8, scope: !5793)
!5805 = !DILocation(line: 2636, column: 5, scope: !5786)
!5806 = !DILocation(line: 2637, column: 16, scope: !5786)
!5807 = !DILocation(line: 2637, column: 22, scope: !5786)
!5808 = !DILocation(line: 2639, column: 16, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5786, file: !1, line: 2639, column: 9)
!5810 = !DILocation(line: 2639, column: 20, scope: !5809)
!5811 = !DILocation(line: 2639, column: 18, scope: !5809)
!5812 = !DILocation(line: 2639, column: 9, scope: !5809)
!5813 = !DILocation(line: 2639, column: 40, scope: !5809)
!5814 = !DILocation(line: 2639, column: 9, scope: !5786)
!5815 = !DILocation(line: 2640, column: 11, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5809, file: !1, line: 2639, column: 46)
!5817 = !DILocation(line: 2640, column: 8, scope: !5816)
!5818 = !DILocation(line: 2641, column: 12, scope: !5816)
!5819 = !DILocation(line: 2642, column: 5, scope: !5816)
!5820 = !DILocation(line: 2642, column: 23, scope: !5821)
!5821 = !DILexicalBlockFile(scope: !5822, file: !1, discriminator: 1)
!5822 = distinct !DILexicalBlock(scope: !5809, file: !1, line: 2642, column: 16)
!5823 = !DILocation(line: 2642, column: 27, scope: !5821)
!5824 = !DILocation(line: 2642, column: 25, scope: !5821)
!5825 = !DILocation(line: 2642, column: 16, scope: !5821)
!5826 = !DILocation(line: 2642, column: 47, scope: !5821)
!5827 = !DILocation(line: 2643, column: 11, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5822, file: !1, line: 2642, column: 53)
!5829 = !DILocation(line: 2643, column: 8, scope: !5828)
!5830 = !DILocation(line: 2644, column: 12, scope: !5828)
!5831 = !DILocation(line: 2645, column: 5, scope: !5828)
!5832 = !DILocation(line: 2646, column: 8, scope: !5822)
!5833 = !DILocation(line: 2647, column: 5, scope: !5786)
!5834 = !DILocation(line: 2648, column: 15, scope: !5786)
!5835 = !DILocation(line: 2648, column: 21, scope: !5786)
!5836 = !DILocation(line: 2625, column: 3, scope: !5837)
!5837 = !DILexicalBlockFile(scope: !5771, file: !1, discriminator: 4)
!5838 = !DILocation(line: 2651, column: 26, scope: !5759)
!5839 = !DILocation(line: 2651, column: 29, scope: !5759)
!5840 = !DILocation(line: 2651, column: 3, scope: !5759)
!5841 = !DILocation(line: 2622, column: 2, scope: !5842)
!5842 = !DILexicalBlockFile(scope: !543, file: !1, discriminator: 2)
!5843 = !DILocation(line: 2653, column: 37, scope: !543)
!5844 = !DILocation(line: 2653, column: 40, scope: !543)
!5845 = !DILocation(line: 2653, column: 15, scope: !543)
!5846 = !DILocation(line: 2654, column: 6, scope: !543)
!5847 = !DILocation(line: 2654, column: 11, scope: !543)
!5848 = !DILocation(line: 2654, column: 4, scope: !543)
!5849 = !DILocation(line: 2653, column: 13, scope: !543)
!5850 = !DILocation(line: 2656, column: 26, scope: !543)
!5851 = !DILocation(line: 2656, column: 31, scope: !543)
!5852 = !DILocation(line: 2656, column: 2, scope: !543)
!5853 = !DILocation(line: 2657, column: 26, scope: !543)
!5854 = !DILocation(line: 2657, column: 31, scope: !543)
!5855 = !DILocation(line: 2657, column: 2, scope: !543)
!5856 = !DILocation(line: 2659, column: 2, scope: !543)
!5857 = !DILocation(line: 2659, column: 7, scope: !543)
!5858 = !DILocation(line: 2659, column: 39, scope: !543)
!5859 = !DILocation(line: 2660, column: 2, scope: !543)
!5860 = !DILocalVariable(name: "zip_entry", scope: !5861, file: !1, line: 2661, type: !301)
!5861 = distinct !DILexicalBlock(scope: !543, file: !1, line: 2660, column: 12)
!5862 = !DILocation(line: 2661, column: 21, scope: !5861)
!5863 = !DILocalVariable(name: "filename_length", scope: !5861, file: !1, line: 2662, type: !45)
!5864 = !DILocation(line: 2662, column: 10, scope: !5861)
!5865 = !DILocalVariable(name: "extra_length", scope: !5861, file: !1, line: 2662, type: !45)
!5866 = !DILocation(line: 2662, column: 27, scope: !5861)
!5867 = !DILocalVariable(name: "comment_length", scope: !5861, file: !1, line: 2662, type: !45)
!5868 = !DILocation(line: 2662, column: 41, scope: !5861)
!5869 = !DILocalVariable(name: "external_attributes", scope: !5861, file: !1, line: 2663, type: !329)
!5870 = !DILocation(line: 2663, column: 12, scope: !5861)
!5871 = !DILocalVariable(name: "name", scope: !5861, file: !1, line: 2664, type: !80)
!5872 = !DILocation(line: 2664, column: 15, scope: !5861)
!5873 = !DILocalVariable(name: "r", scope: !5861, file: !1, line: 2664, type: !80)
!5874 = !DILocation(line: 2664, column: 22, scope: !5861)
!5875 = !DILocation(line: 2666, column: 33, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2666, column: 7)
!5877 = !DILocation(line: 2666, column: 12, scope: !5876)
!5878 = !DILocation(line: 2666, column: 10, scope: !5876)
!5879 = !DILocation(line: 2666, column: 46, scope: !5876)
!5880 = !DILocation(line: 2666, column: 7, scope: !5861)
!5881 = !DILocation(line: 2667, column: 4, scope: !5876)
!5882 = !DILocation(line: 2668, column: 14, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2668, column: 7)
!5884 = !DILocation(line: 2668, column: 7, scope: !5883)
!5885 = !DILocation(line: 2668, column: 34, scope: !5883)
!5886 = !DILocation(line: 2669, column: 7, scope: !5883)
!5887 = !DILocation(line: 2669, column: 17, scope: !5888)
!5888 = !DILexicalBlockFile(scope: !5883, file: !1, discriminator: 1)
!5889 = !DILocation(line: 2669, column: 10, scope: !5888)
!5890 = !DILocation(line: 2669, column: 37, scope: !5888)
!5891 = !DILocation(line: 2668, column: 7, scope: !5892)
!5892 = !DILexicalBlockFile(scope: !5861, file: !1, discriminator: 1)
!5893 = !DILocation(line: 2670, column: 4, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5883, file: !1, line: 2669, column: 43)
!5895 = !DILocation(line: 2671, column: 21, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5883, file: !1, line: 2671, column: 14)
!5897 = !DILocation(line: 2671, column: 14, scope: !5896)
!5898 = !DILocation(line: 2671, column: 41, scope: !5896)
!5899 = !DILocation(line: 2671, column: 14, scope: !5883)
!5900 = !DILocation(line: 2672, column: 23, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 2671, column: 47)
!5902 = !DILocation(line: 2672, column: 26, scope: !5901)
!5903 = !DILocation(line: 2672, column: 4, scope: !5901)
!5904 = !DILocation(line: 2674, column: 4, scope: !5901)
!5905 = !DILocation(line: 2676, column: 33, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2676, column: 7)
!5907 = !DILocation(line: 2676, column: 12, scope: !5906)
!5908 = !DILocation(line: 2676, column: 10, scope: !5906)
!5909 = !DILocation(line: 2676, column: 47, scope: !5906)
!5910 = !DILocation(line: 2676, column: 7, scope: !5861)
!5911 = !DILocation(line: 2677, column: 4, scope: !5906)
!5912 = !DILocation(line: 2679, column: 15, scope: !5861)
!5913 = !DILocation(line: 2679, column: 13, scope: !5861)
!5914 = !DILocation(line: 2680, column: 21, scope: !5861)
!5915 = !DILocation(line: 2680, column: 26, scope: !5861)
!5916 = !DILocation(line: 2680, column: 3, scope: !5861)
!5917 = !DILocation(line: 2680, column: 14, scope: !5861)
!5918 = !DILocation(line: 2680, column: 19, scope: !5861)
!5919 = !DILocation(line: 2681, column: 3, scope: !5861)
!5920 = !DILocation(line: 2681, column: 14, scope: !5861)
!5921 = !DILocation(line: 2681, column: 20, scope: !5861)
!5922 = !DILocation(line: 2682, column: 22, scope: !5861)
!5923 = !DILocation(line: 2682, column: 3, scope: !5861)
!5924 = !DILocation(line: 2682, column: 8, scope: !5861)
!5925 = !DILocation(line: 2682, column: 20, scope: !5861)
!5926 = !DILocation(line: 2683, column: 3, scope: !5861)
!5927 = !DILocation(line: 2683, column: 8, scope: !5861)
!5928 = !DILocation(line: 2683, column: 39, scope: !5861)
!5929 = !DILocation(line: 2686, column: 23, scope: !5861)
!5930 = !DILocation(line: 2686, column: 3, scope: !5861)
!5931 = !DILocation(line: 2686, column: 14, scope: !5861)
!5932 = !DILocation(line: 2686, column: 21, scope: !5861)
!5933 = !DILocation(line: 2688, column: 42, scope: !5861)
!5934 = !DILocation(line: 2688, column: 44, scope: !5861)
!5935 = !DILocation(line: 2688, column: 26, scope: !5861)
!5936 = !DILocation(line: 2688, column: 3, scope: !5861)
!5937 = !DILocation(line: 2688, column: 14, scope: !5861)
!5938 = !DILocation(line: 2688, column: 24, scope: !5861)
!5939 = !DILocation(line: 2689, column: 7, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2689, column: 7)
!5941 = !DILocation(line: 2689, column: 18, scope: !5940)
!5942 = !DILocation(line: 2690, column: 9, scope: !5940)
!5943 = !DILocation(line: 2689, column: 7, scope: !5861)
!5944 = !DILocation(line: 2691, column: 4, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5940, file: !1, line: 2690, column: 50)
!5946 = !DILocation(line: 2691, column: 9, scope: !5945)
!5947 = !DILocation(line: 2691, column: 31, scope: !5945)
!5948 = !DILocation(line: 2692, column: 3, scope: !5945)
!5949 = !DILocation(line: 2693, column: 50, scope: !5861)
!5950 = !DILocation(line: 2693, column: 52, scope: !5861)
!5951 = !DILocation(line: 2693, column: 34, scope: !5861)
!5952 = !DILocation(line: 2693, column: 28, scope: !5861)
!5953 = !DILocation(line: 2693, column: 3, scope: !5861)
!5954 = !DILocation(line: 2693, column: 14, scope: !5861)
!5955 = !DILocation(line: 2693, column: 26, scope: !5861)
!5956 = !DILocation(line: 2694, column: 31, scope: !5861)
!5957 = !DILocation(line: 2694, column: 33, scope: !5861)
!5958 = !DILocation(line: 2694, column: 22, scope: !5861)
!5959 = !DILocation(line: 2694, column: 3, scope: !5861)
!5960 = !DILocation(line: 2694, column: 14, scope: !5861)
!5961 = !DILocation(line: 2694, column: 20, scope: !5861)
!5962 = !DILocation(line: 2695, column: 38, scope: !5861)
!5963 = !DILocation(line: 2695, column: 40, scope: !5861)
!5964 = !DILocation(line: 2695, column: 22, scope: !5861)
!5965 = !DILocation(line: 2695, column: 3, scope: !5861)
!5966 = !DILocation(line: 2695, column: 14, scope: !5861)
!5967 = !DILocation(line: 2695, column: 20, scope: !5861)
!5968 = !DILocation(line: 2696, column: 7, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2696, column: 7)
!5970 = !DILocation(line: 2696, column: 18, scope: !5969)
!5971 = !DILocation(line: 2696, column: 28, scope: !5969)
!5972 = !DILocation(line: 2696, column: 7, scope: !5861)
!5973 = !DILocation(line: 2697, column: 24, scope: !5969)
!5974 = !DILocation(line: 2697, column: 4, scope: !5969)
!5975 = !DILocation(line: 2697, column: 15, scope: !5969)
!5976 = !DILocation(line: 2697, column: 22, scope: !5969)
!5977 = !DILocation(line: 2699, column: 24, scope: !5969)
!5978 = !DILocation(line: 2699, column: 4, scope: !5969)
!5979 = !DILocation(line: 2699, column: 15, scope: !5969)
!5980 = !DILocation(line: 2699, column: 22, scope: !5969)
!5981 = !DILocation(line: 2700, column: 48, scope: !5861)
!5982 = !DILocation(line: 2700, column: 50, scope: !5861)
!5983 = !DILocation(line: 2700, column: 32, scope: !5861)
!5984 = !DILocation(line: 2700, column: 3, scope: !5861)
!5985 = !DILocation(line: 2700, column: 14, scope: !5861)
!5986 = !DILocation(line: 2700, column: 30, scope: !5861)
!5987 = !DILocation(line: 2701, column: 50, scope: !5861)
!5988 = !DILocation(line: 2701, column: 52, scope: !5861)
!5989 = !DILocation(line: 2701, column: 34, scope: !5861)
!5990 = !DILocation(line: 2701, column: 3, scope: !5861)
!5991 = !DILocation(line: 2701, column: 14, scope: !5861)
!5992 = !DILocation(line: 2701, column: 32, scope: !5861)
!5993 = !DILocation(line: 2702, column: 37, scope: !5861)
!5994 = !DILocation(line: 2702, column: 39, scope: !5861)
!5995 = !DILocation(line: 2702, column: 21, scope: !5861)
!5996 = !DILocation(line: 2702, column: 19, scope: !5861)
!5997 = !DILocation(line: 2703, column: 34, scope: !5861)
!5998 = !DILocation(line: 2703, column: 36, scope: !5861)
!5999 = !DILocation(line: 2703, column: 18, scope: !5861)
!6000 = !DILocation(line: 2703, column: 16, scope: !5861)
!6001 = !DILocation(line: 2704, column: 36, scope: !5861)
!6002 = !DILocation(line: 2704, column: 38, scope: !5861)
!6003 = !DILocation(line: 2704, column: 20, scope: !5861)
!6004 = !DILocation(line: 2704, column: 18, scope: !5861)
!6005 = !DILocation(line: 2707, column: 41, scope: !5861)
!6006 = !DILocation(line: 2707, column: 43, scope: !5861)
!6007 = !DILocation(line: 2707, column: 25, scope: !5861)
!6008 = !DILocation(line: 2707, column: 23, scope: !5861)
!6009 = !DILocation(line: 2709, column: 23, scope: !5861)
!6010 = !DILocation(line: 2709, column: 25, scope: !5861)
!6011 = !DILocation(line: 2709, column: 7, scope: !5861)
!6012 = !DILocation(line: 2709, column: 33, scope: !5861)
!6013 = !DILocation(line: 2709, column: 31, scope: !5861)
!6014 = !DILocation(line: 2708, column: 3, scope: !5861)
!6015 = !DILocation(line: 2708, column: 14, scope: !5861)
!6016 = !DILocation(line: 2708, column: 34, scope: !5861)
!6017 = !DILocation(line: 2714, column: 7, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2714, column: 7)
!6019 = !DILocation(line: 2714, column: 18, scope: !6018)
!6020 = !DILocation(line: 2714, column: 25, scope: !6018)
!6021 = !DILocation(line: 2714, column: 7, scope: !5861)
!6022 = !DILocation(line: 2715, column: 22, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6018, file: !1, line: 2714, column: 31)
!6024 = !DILocation(line: 2715, column: 42, scope: !6023)
!6025 = !DILocation(line: 2715, column: 4, scope: !6023)
!6026 = !DILocation(line: 2715, column: 15, scope: !6023)
!6027 = !DILocation(line: 2715, column: 20, scope: !6023)
!6028 = !DILocation(line: 2716, column: 3, scope: !6023)
!6029 = !DILocation(line: 2716, column: 14, scope: !6030)
!6030 = !DILexicalBlockFile(scope: !6031, file: !1, discriminator: 1)
!6031 = distinct !DILexicalBlock(scope: !6018, file: !1, line: 2716, column: 14)
!6032 = !DILocation(line: 2716, column: 25, scope: !6030)
!6033 = !DILocation(line: 2716, column: 32, scope: !6030)
!6034 = !DILocation(line: 2718, column: 17, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !1, line: 2718, column: 8)
!6036 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 2716, column: 38)
!6037 = !DILocation(line: 2718, column: 37, scope: !6035)
!6038 = !DILocation(line: 2718, column: 13, scope: !6035)
!6039 = !DILocation(line: 2718, column: 8, scope: !6036)
!6040 = !DILocation(line: 2719, column: 5, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6035, file: !1, line: 2718, column: 46)
!6042 = !DILocation(line: 2719, column: 16, scope: !6041)
!6043 = !DILocation(line: 2719, column: 21, scope: !6041)
!6044 = !DILocation(line: 2720, column: 4, scope: !6041)
!6045 = !DILocation(line: 2721, column: 5, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6035, file: !1, line: 2720, column: 11)
!6047 = !DILocation(line: 2721, column: 16, scope: !6046)
!6048 = !DILocation(line: 2721, column: 21, scope: !6046)
!6049 = !DILocation(line: 2723, column: 17, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6036, file: !1, line: 2723, column: 8)
!6051 = !DILocation(line: 2723, column: 37, scope: !6050)
!6052 = !DILocation(line: 2723, column: 13, scope: !6050)
!6053 = !DILocation(line: 2723, column: 8, scope: !6036)
!6054 = !DILocation(line: 2725, column: 5, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6050, file: !1, line: 2723, column: 46)
!6056 = !DILocation(line: 2725, column: 16, scope: !6055)
!6057 = !DILocation(line: 2725, column: 21, scope: !6055)
!6058 = !DILocation(line: 2726, column: 4, scope: !6055)
!6059 = !DILocation(line: 2727, column: 3, scope: !6036)
!6060 = !DILocation(line: 2728, column: 4, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 2727, column: 10)
!6062 = !DILocation(line: 2728, column: 15, scope: !6061)
!6063 = !DILocation(line: 2728, column: 20, scope: !6061)
!6064 = !DILocation(line: 2733, column: 26, scope: !5861)
!6065 = !DILocation(line: 2733, column: 3, scope: !5861)
!6066 = !DILocation(line: 2734, column: 28, scope: !5861)
!6067 = !DILocation(line: 2734, column: 31, scope: !5861)
!6068 = !DILocation(line: 2734, column: 49, scope: !5861)
!6069 = !DILocation(line: 2734, column: 47, scope: !5861)
!6070 = !DILocation(line: 2734, column: 7, scope: !5861)
!6071 = !DILocation(line: 2734, column: 5, scope: !5861)
!6072 = !DILocation(line: 2736, column: 7, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2736, column: 7)
!6074 = !DILocation(line: 2736, column: 9, scope: !6073)
!6075 = !DILocation(line: 2736, column: 7, scope: !5861)
!6076 = !DILocation(line: 2737, column: 23, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6073, file: !1, line: 2736, column: 18)
!6078 = !DILocation(line: 2737, column: 26, scope: !6077)
!6079 = !DILocation(line: 2737, column: 4, scope: !6077)
!6080 = !DILocation(line: 2740, column: 4, scope: !6077)
!6081 = !DILocation(line: 2742, column: 35, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2742, column: 7)
!6083 = !DILocation(line: 2742, column: 38, scope: !6082)
!6084 = !DILocation(line: 2742, column: 42, scope: !6082)
!6085 = !DILocation(line: 2742, column: 40, scope: !6082)
!6086 = !DILocation(line: 2742, column: 59, scope: !6082)
!6087 = !DILocation(line: 2742, column: 73, scope: !6082)
!6088 = !DILocation(line: 2742, column: 21, scope: !6082)
!6089 = !DILocation(line: 2742, column: 18, scope: !6082)
!6090 = !DILocation(line: 2742, column: 7, scope: !5861)
!6091 = !DILocation(line: 2743, column: 4, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6082, file: !1, line: 2742, column: 85)
!6093 = !DILocation(line: 2751, column: 8, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2751, column: 7)
!6095 = !DILocation(line: 2751, column: 13, scope: !6094)
!6096 = !DILocation(line: 2751, column: 7, scope: !5861)
!6097 = !DILocation(line: 2753, column: 35, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 2751, column: 37)
!6099 = !DILocation(line: 2753, column: 40, scope: !6098)
!6100 = !DILocation(line: 2754, column: 9, scope: !6098)
!6101 = !DILocation(line: 2754, column: 20, scope: !6098)
!6102 = !DILocation(line: 2753, column: 4, scope: !6098)
!6103 = !DILocation(line: 2755, column: 3, scope: !6098)
!6104 = !DILocation(line: 2756, column: 11, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 2755, column: 10)
!6106 = !DILocation(line: 2756, column: 9, scope: !6105)
!6107 = !DILocation(line: 2757, column: 22, scope: !6105)
!6108 = !DILocation(line: 2757, column: 28, scope: !6105)
!6109 = !DILocation(line: 2757, column: 8, scope: !6105)
!6110 = !DILocation(line: 2757, column: 6, scope: !6105)
!6111 = !DILocation(line: 2758, column: 8, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6105, file: !1, line: 2758, column: 8)
!6113 = !DILocation(line: 2758, column: 24, scope: !6112)
!6114 = !DILocation(line: 2758, column: 29, scope: !6112)
!6115 = !DILocation(line: 2759, column: 29, scope: !6112)
!6116 = !DILocation(line: 2759, column: 8, scope: !6112)
!6117 = !DILocation(line: 2759, column: 38, scope: !6112)
!6118 = !DILocation(line: 2758, column: 8, scope: !6119)
!6119 = !DILexicalBlockFile(scope: !6105, file: !1, discriminator: 1)
!6120 = !DILocation(line: 2763, column: 14, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !1, line: 2763, column: 9)
!6122 = distinct !DILexicalBlock(scope: !6112, file: !1, line: 2759, column: 44)
!6123 = !DILocation(line: 2763, column: 29, scope: !6121)
!6124 = !DILocation(line: 2763, column: 9, scope: !6121)
!6125 = !DILocation(line: 2763, column: 33, scope: !6121)
!6126 = !DILocation(line: 2763, column: 40, scope: !6121)
!6127 = !DILocation(line: 2764, column: 10, scope: !6121)
!6128 = !DILocation(line: 2764, column: 14, scope: !6121)
!6129 = !DILocation(line: 2764, column: 12, scope: !6121)
!6130 = !DILocation(line: 2764, column: 19, scope: !6121)
!6131 = !DILocation(line: 2764, column: 23, scope: !6121)
!6132 = !DILocation(line: 2764, column: 26, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !6121, file: !1, discriminator: 1)
!6134 = !DILocation(line: 2764, column: 31, scope: !6133)
!6135 = !DILocation(line: 2764, column: 38, scope: !6133)
!6136 = !DILocation(line: 2764, column: 41, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !6121, file: !1, discriminator: 2)
!6138 = !DILocation(line: 2764, column: 46, scope: !6137)
!6139 = !DILocation(line: 2763, column: 9, scope: !6140)
!6140 = !DILexicalBlockFile(scope: !6122, file: !1, discriminator: 1)
!6141 = !DILocation(line: 2766, column: 11, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 2764, column: 55)
!6143 = !DILocation(line: 2766, column: 16, scope: !6142)
!6144 = !DILocation(line: 2766, column: 23, scope: !6142)
!6145 = !DILocation(line: 2766, column: 34, scope: !6142)
!6146 = !DILocation(line: 2765, column: 6, scope: !6142)
!6147 = !DILocation(line: 2768, column: 25, scope: !6142)
!6148 = !DILocation(line: 2768, column: 30, scope: !6142)
!6149 = !DILocation(line: 2769, column: 10, scope: !6142)
!6150 = !DILocation(line: 2768, column: 6, scope: !6142)
!6151 = !DILocation(line: 2770, column: 5, scope: !6142)
!6152 = !DILocation(line: 2773, column: 6, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 2770, column: 12)
!6154 = !DILocation(line: 2776, column: 11, scope: !6153)
!6155 = !DILocation(line: 2776, column: 16, scope: !6153)
!6156 = !DILocation(line: 2776, column: 28, scope: !6153)
!6157 = !DILocation(line: 2776, column: 39, scope: !6153)
!6158 = !DILocation(line: 2775, column: 6, scope: !6153)
!6159 = !DILocation(line: 2778, column: 4, scope: !6122)
!6160 = !DILocation(line: 2781, column: 5, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6112, file: !1, line: 2778, column: 11)
!6162 = !DILocation(line: 2783, column: 23, scope: !6161)
!6163 = !DILocation(line: 2783, column: 34, scope: !6161)
!6164 = !DILocation(line: 2784, column: 9, scope: !6161)
!6165 = !DILocation(line: 2784, column: 15, scope: !6161)
!6166 = !DILocation(line: 2784, column: 19, scope: !6161)
!6167 = !DILocation(line: 2784, column: 17, scope: !6161)
!6168 = !DILocation(line: 2783, column: 5, scope: !6161)
!6169 = !DILocation(line: 2785, column: 22, scope: !6161)
!6170 = !DILocation(line: 2785, column: 33, scope: !6161)
!6171 = !DILocation(line: 2785, column: 5, scope: !6161)
!6172 = !DILocation(line: 2786, column: 23, scope: !6161)
!6173 = !DILocation(line: 2786, column: 34, scope: !6161)
!6174 = !DILocation(line: 2787, column: 9, scope: !6161)
!6175 = !DILocation(line: 2787, column: 17, scope: !6161)
!6176 = !DILocation(line: 2787, column: 21, scope: !6161)
!6177 = !DILocation(line: 2787, column: 19, scope: !6161)
!6178 = !DILocation(line: 2787, column: 14, scope: !6161)
!6179 = !DILocation(line: 2788, column: 9, scope: !6161)
!6180 = !DILocation(line: 2788, column: 28, scope: !6161)
!6181 = !DILocation(line: 2788, column: 32, scope: !6161)
!6182 = !DILocation(line: 2788, column: 30, scope: !6161)
!6183 = !DILocation(line: 2788, column: 25, scope: !6161)
!6184 = !DILocation(line: 2786, column: 5, scope: !6161)
!6185 = !DILocation(line: 2791, column: 36, scope: !6161)
!6186 = !DILocation(line: 2791, column: 41, scope: !6161)
!6187 = !DILocation(line: 2792, column: 10, scope: !6161)
!6188 = !DILocation(line: 2792, column: 21, scope: !6161)
!6189 = !DILocation(line: 2791, column: 5, scope: !6161)
!6190 = !DILocation(line: 2797, column: 26, scope: !5861)
!6191 = !DILocation(line: 2798, column: 7, scope: !5861)
!6192 = !DILocation(line: 2798, column: 25, scope: !5861)
!6193 = !DILocation(line: 2798, column: 23, scope: !5861)
!6194 = !DILocation(line: 2798, column: 40, scope: !5861)
!6195 = !DILocation(line: 2798, column: 38, scope: !5861)
!6196 = !DILocation(line: 2797, column: 3, scope: !5861)
!6197 = !DILocation(line: 2660, column: 2, scope: !5754)
!6198 = !DILocation(line: 2801, column: 2, scope: !543)
!6199 = !DILocation(line: 2802, column: 1, scope: !543)
!6200 = !DILocalVariable(name: "a", arg: 1, scope: !554, file: !1, line: 2828, type: !4)
!6201 = !DILocation(line: 2828, column: 44, scope: !554)
!6202 = !DILocalVariable(name: "entry", arg: 2, scope: !554, file: !1, line: 2828, type: !30)
!6203 = !DILocation(line: 2828, column: 69, scope: !554)
!6204 = !DILocalVariable(name: "rsrc", arg: 3, scope: !554, file: !1, line: 2829, type: !301)
!6205 = !DILocation(line: 2829, column: 23, scope: !554)
!6206 = !DILocalVariable(name: "zip", scope: !554, file: !1, line: 2831, type: !292)
!6207 = !DILocation(line: 2831, column: 14, scope: !554)
!6208 = !DILocation(line: 2831, column: 34, scope: !554)
!6209 = !DILocation(line: 2831, column: 37, scope: !554)
!6210 = !DILocation(line: 2831, column: 45, scope: !554)
!6211 = !DILocation(line: 2831, column: 20, scope: !554)
!6212 = !DILocalVariable(name: "metadata", scope: !554, file: !1, line: 2832, type: !383)
!6213 = !DILocation(line: 2832, column: 17, scope: !554)
!6214 = !DILocalVariable(name: "mp", scope: !554, file: !1, line: 2832, type: !383)
!6215 = !DILocation(line: 2832, column: 28, scope: !554)
!6216 = !DILocalVariable(name: "offset", scope: !554, file: !1, line: 2833, type: !52)
!6217 = !DILocation(line: 2833, column: 10, scope: !554)
!6218 = !DILocation(line: 2833, column: 41, scope: !554)
!6219 = !DILocation(line: 2833, column: 44, scope: !554)
!6220 = !DILocation(line: 2833, column: 19, scope: !554)
!6221 = !DILocalVariable(name: "remaining_bytes", scope: !554, file: !1, line: 2834, type: !45)
!6222 = !DILocation(line: 2834, column: 9, scope: !554)
!6223 = !DILocalVariable(name: "metadata_bytes", scope: !554, file: !1, line: 2834, type: !45)
!6224 = !DILocation(line: 2834, column: 26, scope: !554)
!6225 = !DILocalVariable(name: "hsize", scope: !554, file: !1, line: 2835, type: !38)
!6226 = !DILocation(line: 2835, column: 10, scope: !554)
!6227 = !DILocalVariable(name: "ret", scope: !554, file: !1, line: 2836, type: !23)
!6228 = !DILocation(line: 2836, column: 6, scope: !554)
!6229 = !DILocalVariable(name: "eof", scope: !554, file: !1, line: 2836, type: !23)
!6230 = !DILocation(line: 2836, column: 24, scope: !554)
!6231 = !DILocation(line: 2838, column: 9, scope: !554)
!6232 = !DILocation(line: 2838, column: 15, scope: !554)
!6233 = !DILocation(line: 2838, column: 2, scope: !554)
!6234 = !DILocation(line: 2840, column: 7, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6236, file: !1, line: 2840, column: 7)
!6236 = distinct !DILexicalBlock(scope: !554, file: !1, line: 2838, column: 28)
!6237 = !DILocation(line: 2840, column: 13, scope: !6235)
!6238 = !DILocation(line: 2840, column: 34, scope: !6235)
!6239 = !DILocation(line: 2840, column: 40, scope: !6235)
!6240 = !DILocation(line: 2840, column: 31, scope: !6235)
!6241 = !DILocation(line: 2840, column: 7, scope: !6236)
!6242 = !DILocation(line: 2841, column: 23, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6235, file: !1, line: 2840, column: 57)
!6244 = !DILocation(line: 2841, column: 26, scope: !6243)
!6245 = !DILocation(line: 2841, column: 4, scope: !6243)
!6246 = !DILocation(line: 2843, column: 4, scope: !6243)
!6247 = !DILocation(line: 2840, column: 40, scope: !6248)
!6248 = !DILexicalBlockFile(scope: !6235, file: !1, discriminator: 1)
!6249 = !DILocation(line: 2848, column: 3, scope: !6236)
!6250 = !DILocation(line: 2851, column: 22, scope: !6236)
!6251 = !DILocation(line: 2851, column: 25, scope: !6236)
!6252 = !DILocation(line: 2853, column: 24, scope: !6236)
!6253 = !DILocation(line: 2853, column: 30, scope: !6236)
!6254 = !DILocation(line: 2853, column: 7, scope: !6236)
!6255 = !DILocation(line: 2851, column: 3, scope: !6236)
!6256 = !DILocation(line: 2856, column: 3, scope: !6236)
!6257 = !DILocation(line: 2859, column: 6, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !554, file: !1, line: 2859, column: 6)
!6259 = !DILocation(line: 2859, column: 12, scope: !6258)
!6260 = !DILocation(line: 2859, column: 30, scope: !6258)
!6261 = !DILocation(line: 2859, column: 6, scope: !554)
!6262 = !DILocation(line: 2860, column: 22, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6258, file: !1, line: 2859, column: 51)
!6264 = !DILocation(line: 2860, column: 25, scope: !6263)
!6265 = !DILocation(line: 2862, column: 17, scope: !6263)
!6266 = !DILocation(line: 2862, column: 23, scope: !6263)
!6267 = !DILocation(line: 2860, column: 3, scope: !6263)
!6268 = !DILocation(line: 2863, column: 3, scope: !6263)
!6269 = !DILocation(line: 2865, column: 6, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !554, file: !1, line: 2865, column: 6)
!6271 = !DILocation(line: 2865, column: 12, scope: !6270)
!6272 = !DILocation(line: 2865, column: 28, scope: !6270)
!6273 = !DILocation(line: 2865, column: 6, scope: !554)
!6274 = !DILocation(line: 2866, column: 22, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6270, file: !1, line: 2865, column: 49)
!6276 = !DILocation(line: 2866, column: 25, scope: !6275)
!6277 = !DILocation(line: 2868, column: 17, scope: !6275)
!6278 = !DILocation(line: 2868, column: 23, scope: !6275)
!6279 = !DILocation(line: 2866, column: 3, scope: !6275)
!6280 = !DILocation(line: 2869, column: 3, scope: !6275)
!6281 = !DILocation(line: 2872, column: 28, scope: !554)
!6282 = !DILocation(line: 2872, column: 34, scope: !554)
!6283 = !DILocation(line: 2872, column: 13, scope: !554)
!6284 = !DILocation(line: 2872, column: 11, scope: !554)
!6285 = !DILocation(line: 2873, column: 6, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !554, file: !1, line: 2873, column: 6)
!6287 = !DILocation(line: 2873, column: 15, scope: !6286)
!6288 = !DILocation(line: 2873, column: 6, scope: !554)
!6289 = !DILocation(line: 2874, column: 22, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6286, file: !1, line: 2873, column: 24)
!6291 = !DILocation(line: 2874, column: 25, scope: !6290)
!6292 = !DILocation(line: 2874, column: 3, scope: !6290)
!6293 = !DILocation(line: 2876, column: 3, scope: !6290)
!6294 = !DILocation(line: 2879, column: 6, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !554, file: !1, line: 2879, column: 6)
!6296 = !DILocation(line: 2879, column: 15, scope: !6295)
!6297 = !DILocation(line: 2879, column: 21, scope: !6295)
!6298 = !DILocation(line: 2879, column: 13, scope: !6295)
!6299 = !DILocation(line: 2879, column: 6, scope: !554)
!6300 = !DILocation(line: 2880, column: 26, scope: !6295)
!6301 = !DILocation(line: 2880, column: 29, scope: !6295)
!6302 = !DILocation(line: 2880, column: 35, scope: !6295)
!6303 = !DILocation(line: 2880, column: 57, scope: !6295)
!6304 = !DILocation(line: 2880, column: 55, scope: !6295)
!6305 = !DILocation(line: 2880, column: 3, scope: !6295)
!6306 = !DILocation(line: 2881, column: 11, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6295, file: !1, line: 2881, column: 11)
!6308 = !DILocation(line: 2881, column: 21, scope: !6307)
!6309 = !DILocation(line: 2881, column: 27, scope: !6307)
!6310 = !DILocation(line: 2881, column: 18, scope: !6307)
!6311 = !DILocation(line: 2881, column: 11, scope: !6295)
!6312 = !DILocation(line: 2882, column: 23, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6307, file: !1, line: 2881, column: 48)
!6314 = !DILocation(line: 2882, column: 26, scope: !6313)
!6315 = !DILocation(line: 2882, column: 32, scope: !6313)
!6316 = !DILocation(line: 2882, column: 3, scope: !6313)
!6317 = !DILocation(line: 2883, column: 2, scope: !6313)
!6318 = !DILocation(line: 2885, column: 41, scope: !554)
!6319 = !DILocation(line: 2885, column: 10, scope: !554)
!6320 = !DILocation(line: 2885, column: 8, scope: !554)
!6321 = !DILocation(line: 2886, column: 25, scope: !554)
!6322 = !DILocation(line: 2886, column: 28, scope: !554)
!6323 = !DILocation(line: 2886, column: 2, scope: !554)
!6324 = !DILocation(line: 2888, column: 28, scope: !554)
!6325 = !DILocation(line: 2888, column: 34, scope: !554)
!6326 = !DILocation(line: 2888, column: 18, scope: !554)
!6327 = !DILocation(line: 2889, column: 27, scope: !554)
!6328 = !DILocation(line: 2889, column: 33, scope: !554)
!6329 = !DILocation(line: 2889, column: 17, scope: !554)
!6330 = !DILocation(line: 2890, column: 7, scope: !554)
!6331 = !DILocation(line: 2890, column: 5, scope: !554)
!6332 = !DILocation(line: 2891, column: 6, scope: !554)
!6333 = !DILocation(line: 2892, column: 2, scope: !554)
!6334 = !DILocation(line: 2892, column: 10, scope: !6335)
!6335 = !DILexicalBlockFile(scope: !554, file: !1, discriminator: 1)
!6336 = !DILocation(line: 2892, column: 14, scope: !6335)
!6337 = !DILocation(line: 2892, column: 17, scope: !6338)
!6338 = !DILexicalBlockFile(scope: !554, file: !1, discriminator: 2)
!6339 = !DILocation(line: 2892, column: 14, scope: !6338)
!6340 = !DILocation(line: 2892, column: 2, scope: !6341)
!6341 = !DILexicalBlockFile(scope: !554, file: !1, discriminator: 3)
!6342 = !DILocalVariable(name: "p", scope: !6343, file: !1, line: 2893, type: !466)
!6343 = distinct !DILexicalBlock(scope: !554, file: !1, line: 2892, column: 34)
!6344 = !DILocation(line: 2893, column: 24, scope: !6343)
!6345 = !DILocalVariable(name: "bytes_avail", scope: !6343, file: !1, line: 2894, type: !38)
!6346 = !DILocation(line: 2894, column: 11, scope: !6343)
!6347 = !DILocalVariable(name: "bytes_used", scope: !6343, file: !1, line: 2895, type: !45)
!6348 = !DILocation(line: 2895, column: 10, scope: !6343)
!6349 = !DILocation(line: 2897, column: 28, scope: !6343)
!6350 = !DILocation(line: 2897, column: 7, scope: !6343)
!6351 = !DILocation(line: 2897, column: 5, scope: !6343)
!6352 = !DILocation(line: 2898, column: 7, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6343, file: !1, line: 2898, column: 7)
!6354 = !DILocation(line: 2898, column: 9, scope: !6353)
!6355 = !DILocation(line: 2898, column: 7, scope: !6343)
!6356 = !DILocation(line: 2899, column: 23, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !1, line: 2898, column: 18)
!6358 = !DILocation(line: 2899, column: 26, scope: !6357)
!6359 = !DILocation(line: 2899, column: 4, scope: !6357)
!6360 = !DILocation(line: 2902, column: 8, scope: !6357)
!6361 = !DILocation(line: 2903, column: 4, scope: !6357)
!6362 = !DILocation(line: 2905, column: 15, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6343, file: !1, line: 2905, column: 7)
!6364 = !DILocation(line: 2905, column: 29, scope: !6363)
!6365 = !DILocation(line: 2905, column: 27, scope: !6363)
!6366 = !DILocation(line: 2905, column: 7, scope: !6343)
!6367 = !DILocation(line: 2906, column: 18, scope: !6363)
!6368 = !DILocation(line: 2906, column: 16, scope: !6363)
!6369 = !DILocation(line: 2906, column: 4, scope: !6363)
!6370 = !DILocation(line: 2907, column: 10, scope: !6343)
!6371 = !DILocation(line: 2907, column: 16, scope: !6343)
!6372 = !DILocation(line: 2907, column: 3, scope: !6343)
!6373 = !DILocation(line: 2909, column: 16, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !1, line: 2909, column: 8)
!6375 = distinct !DILexicalBlock(scope: !6343, file: !1, line: 2907, column: 29)
!6376 = !DILocation(line: 2909, column: 30, scope: !6374)
!6377 = !DILocation(line: 2909, column: 28, scope: !6374)
!6378 = !DILocation(line: 2909, column: 8, scope: !6375)
!6379 = !DILocation(line: 2910, column: 19, scope: !6374)
!6380 = !DILocation(line: 2910, column: 17, scope: !6374)
!6381 = !DILocation(line: 2910, column: 5, scope: !6374)
!6382 = !DILocation(line: 2911, column: 11, scope: !6375)
!6383 = !DILocation(line: 2911, column: 15, scope: !6375)
!6384 = !DILocation(line: 2911, column: 18, scope: !6375)
!6385 = !DILocation(line: 2911, column: 4, scope: !6375)
!6386 = !DILocation(line: 2912, column: 25, scope: !6375)
!6387 = !DILocation(line: 2912, column: 15, scope: !6375)
!6388 = !DILocation(line: 2913, column: 22, scope: !6375)
!6389 = !DILocation(line: 2913, column: 19, scope: !6375)
!6390 = !DILocation(line: 2914, column: 10, scope: !6375)
!6391 = !DILocation(line: 2914, column: 7, scope: !6375)
!6392 = !DILocation(line: 2915, column: 8, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6375, file: !1, line: 2915, column: 8)
!6394 = !DILocation(line: 2915, column: 23, scope: !6393)
!6395 = !DILocation(line: 2915, column: 8, scope: !6375)
!6396 = !DILocation(line: 2916, column: 9, scope: !6393)
!6397 = !DILocation(line: 2916, column: 5, scope: !6393)
!6398 = !DILocation(line: 2917, column: 4, scope: !6375)
!6399 = !DILocalVariable(name: "r", scope: !6400, file: !1, line: 2921, type: !23)
!6400 = distinct !DILexicalBlock(scope: !6375, file: !1, line: 2920, column: 3)
!6401 = !DILocation(line: 2921, column: 8, scope: !6400)
!6402 = !DILocation(line: 2923, column: 27, scope: !6400)
!6403 = !DILocation(line: 2923, column: 30, scope: !6400)
!6404 = !DILocation(line: 2923, column: 10, scope: !6400)
!6405 = !DILocation(line: 2923, column: 8, scope: !6400)
!6406 = !DILocation(line: 2924, column: 8, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 2924, column: 8)
!6408 = !DILocation(line: 2924, column: 12, scope: !6407)
!6409 = !DILocation(line: 2924, column: 8, scope: !6400)
!6410 = !DILocation(line: 2925, column: 5, scope: !6407)
!6411 = !DILocation(line: 2927, column: 42, scope: !6400)
!6412 = !DILocation(line: 2927, column: 17, scope: !6400)
!6413 = !DILocation(line: 2927, column: 8, scope: !6400)
!6414 = !DILocation(line: 2926, column: 4, scope: !6400)
!6415 = !DILocation(line: 2926, column: 9, scope: !6400)
!6416 = !DILocation(line: 2926, column: 16, scope: !6400)
!6417 = !DILocation(line: 2926, column: 24, scope: !6400)
!6418 = !DILocation(line: 2928, column: 33, scope: !6400)
!6419 = !DILocation(line: 2928, column: 27, scope: !6400)
!6420 = !DILocation(line: 2928, column: 4, scope: !6400)
!6421 = !DILocation(line: 2928, column: 9, scope: !6400)
!6422 = !DILocation(line: 2928, column: 16, scope: !6400)
!6423 = !DILocation(line: 2928, column: 25, scope: !6400)
!6424 = !DILocation(line: 2929, column: 4, scope: !6400)
!6425 = !DILocation(line: 2929, column: 9, scope: !6400)
!6426 = !DILocation(line: 2929, column: 16, scope: !6400)
!6427 = !DILocation(line: 2929, column: 25, scope: !6400)
!6428 = !DILocation(line: 2930, column: 27, scope: !6400)
!6429 = !DILocation(line: 2930, column: 4, scope: !6400)
!6430 = !DILocation(line: 2930, column: 9, scope: !6400)
!6431 = !DILocation(line: 2930, column: 16, scope: !6400)
!6432 = !DILocation(line: 2930, column: 25, scope: !6400)
!6433 = !DILocation(line: 2931, column: 34, scope: !6400)
!6434 = !DILocation(line: 2931, column: 28, scope: !6400)
!6435 = !DILocation(line: 2931, column: 4, scope: !6400)
!6436 = !DILocation(line: 2931, column: 9, scope: !6400)
!6437 = !DILocation(line: 2931, column: 16, scope: !6400)
!6438 = !DILocation(line: 2931, column: 26, scope: !6400)
!6439 = !DILocation(line: 2932, column: 4, scope: !6400)
!6440 = !DILocation(line: 2932, column: 9, scope: !6400)
!6441 = !DILocation(line: 2932, column: 16, scope: !6400)
!6442 = !DILocation(line: 2932, column: 26, scope: !6400)
!6443 = !DILocation(line: 2934, column: 17, scope: !6400)
!6444 = !DILocation(line: 2934, column: 22, scope: !6400)
!6445 = !DILocation(line: 2934, column: 8, scope: !6400)
!6446 = !DILocation(line: 2934, column: 6, scope: !6400)
!6447 = !DILocation(line: 2935, column: 12, scope: !6400)
!6448 = !DILocation(line: 2935, column: 4, scope: !6400)
!6449 = !DILocation(line: 2937, column: 5, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 2935, column: 15)
!6451 = !DILocation(line: 2939, column: 9, scope: !6450)
!6452 = !DILocation(line: 2940, column: 5, scope: !6450)
!6453 = !DILocation(line: 2942, column: 24, scope: !6450)
!6454 = !DILocation(line: 2942, column: 27, scope: !6450)
!6455 = !DILocation(line: 2942, column: 5, scope: !6450)
!6456 = !DILocation(line: 2944, column: 9, scope: !6450)
!6457 = !DILocation(line: 2945, column: 5, scope: !6450)
!6458 = !DILocation(line: 2947, column: 24, scope: !6450)
!6459 = !DILocation(line: 2947, column: 27, scope: !6450)
!6460 = !DILocation(line: 2949, column: 42, scope: !6450)
!6461 = !DILocation(line: 2947, column: 5, scope: !6450)
!6462 = !DILocation(line: 2950, column: 9, scope: !6450)
!6463 = !DILocation(line: 2951, column: 5, scope: !6450)
!6464 = !DILocation(line: 2953, column: 17, scope: !6400)
!6465 = !DILocation(line: 2953, column: 22, scope: !6400)
!6466 = !DILocation(line: 2953, column: 29, scope: !6400)
!6467 = !DILocation(line: 2953, column: 15, scope: !6400)
!6468 = !DILocation(line: 2954, column: 22, scope: !6400)
!6469 = !DILocation(line: 2954, column: 27, scope: !6400)
!6470 = !DILocation(line: 2954, column: 34, scope: !6400)
!6471 = !DILocation(line: 2954, column: 19, scope: !6400)
!6472 = !DILocation(line: 2955, column: 10, scope: !6400)
!6473 = !DILocation(line: 2955, column: 15, scope: !6400)
!6474 = !DILocation(line: 2955, column: 22, scope: !6400)
!6475 = !DILocation(line: 2955, column: 7, scope: !6400)
!6476 = !DILocation(line: 2956, column: 4, scope: !6400)
!6477 = !DILocation(line: 2960, column: 15, scope: !6375)
!6478 = !DILocation(line: 2961, column: 4, scope: !6375)
!6479 = !DILocation(line: 2963, column: 26, scope: !6343)
!6480 = !DILocation(line: 2963, column: 29, scope: !6343)
!6481 = !DILocation(line: 2963, column: 3, scope: !6343)
!6482 = !DILocation(line: 2964, column: 22, scope: !6343)
!6483 = !DILocation(line: 2964, column: 19, scope: !6343)
!6484 = !DILocation(line: 2892, column: 2, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !554, file: !1, discriminator: 4)
!6486 = !DILocation(line: 2966, column: 34, scope: !554)
!6487 = !DILocation(line: 2966, column: 41, scope: !554)
!6488 = !DILocation(line: 2967, column: 14, scope: !554)
!6489 = !DILocation(line: 2967, column: 20, scope: !554)
!6490 = !DILocation(line: 2967, column: 40, scope: !554)
!6491 = !DILocation(line: 2967, column: 38, scope: !554)
!6492 = !DILocation(line: 2966, column: 2, scope: !554)
!6493 = !DILocation(line: 2970, column: 22, scope: !554)
!6494 = !DILocation(line: 2970, column: 25, scope: !554)
!6495 = !DILocation(line: 2970, column: 2, scope: !554)
!6496 = !DILocation(line: 2971, column: 2, scope: !554)
!6497 = !DILocation(line: 2971, column: 7, scope: !554)
!6498 = !DILocation(line: 2971, column: 23, scope: !554)
!6499 = !DILocation(line: 2972, column: 7, scope: !554)
!6500 = !DILocation(line: 2972, column: 2, scope: !554)
!6501 = !DILocation(line: 2973, column: 10, scope: !554)
!6502 = !DILocation(line: 2973, column: 2, scope: !554)
!6503 = !DILocation(line: 2974, column: 1, scope: !554)
!6504 = !DILocalVariable(name: "name", arg: 1, scope: !548, file: !1, line: 2558, type: !80)
!6505 = !DILocation(line: 2558, column: 27, scope: !548)
!6506 = !DILocalVariable(name: "name_length", arg: 2, scope: !548, file: !1, line: 2558, type: !45)
!6507 = !DILocation(line: 2558, column: 40, scope: !548)
!6508 = !DILocalVariable(name: "s", scope: !548, file: !1, line: 2560, type: !80)
!6509 = !DILocation(line: 2560, column: 14, scope: !548)
!6510 = !DILocalVariable(name: "r", scope: !548, file: !1, line: 2560, type: !80)
!6511 = !DILocation(line: 2560, column: 18, scope: !548)
!6512 = !DILocation(line: 2562, column: 10, scope: !548)
!6513 = !DILocation(line: 2562, column: 8, scope: !548)
!6514 = !DILocation(line: 2562, column: 4, scope: !548)
!6515 = !DILocation(line: 2563, column: 2, scope: !548)
!6516 = !DILocation(line: 2564, column: 14, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !1, line: 2563, column: 11)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !1, line: 2563, column: 2)
!6519 = distinct !DILexicalBlock(scope: !548, file: !1, line: 2563, column: 2)
!6520 = !DILocation(line: 2564, column: 22, scope: !6517)
!6521 = !DILocation(line: 2564, column: 37, scope: !6517)
!6522 = !DILocation(line: 2564, column: 41, scope: !6517)
!6523 = !DILocation(line: 2564, column: 39, scope: !6517)
!6524 = !DILocation(line: 2564, column: 34, scope: !6517)
!6525 = !DILocation(line: 2564, column: 7, scope: !6517)
!6526 = !DILocation(line: 2564, column: 5, scope: !6517)
!6527 = !DILocation(line: 2565, column: 7, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6517, file: !1, line: 2565, column: 7)
!6529 = !DILocation(line: 2565, column: 9, scope: !6528)
!6530 = !DILocation(line: 2565, column: 7, scope: !6517)
!6531 = !DILocation(line: 2566, column: 4, scope: !6528)
!6532 = !DILocation(line: 2567, column: 7, scope: !6517)
!6533 = !DILocation(line: 2567, column: 5, scope: !6517)
!6534 = !DILocation(line: 2563, column: 2, scope: !6535)
!6535 = !DILexicalBlockFile(scope: !6518, file: !1, discriminator: 1)
!6536 = !DILocation(line: 2569, column: 10, scope: !548)
!6537 = !DILocation(line: 2569, column: 2, scope: !548)
!6538 = !DILocalVariable(name: "zip", arg: 1, scope: !551, file: !1, line: 2573, type: !292)
!6539 = !DILocation(line: 2573, column: 32, scope: !551)
!6540 = !DILocalVariable(name: "name", arg: 2, scope: !551, file: !1, line: 2573, type: !80)
!6541 = !DILocation(line: 2573, column: 49, scope: !551)
!6542 = !DILocalVariable(name: "name_length", arg: 3, scope: !551, file: !1, line: 2573, type: !45)
!6543 = !DILocation(line: 2573, column: 62, scope: !551)
!6544 = !DILocalVariable(name: "str", scope: !551, file: !1, line: 2575, type: !91)
!6545 = !DILocation(line: 2575, column: 24, scope: !551)
!6546 = !DILocalVariable(name: "dir", scope: !551, file: !1, line: 2576, type: !301)
!6547 = !DILocation(line: 2576, column: 20, scope: !551)
!6548 = !DILocalVariable(name: "s", scope: !551, file: !1, line: 2577, type: !95)
!6549 = !DILocation(line: 2577, column: 8, scope: !551)
!6550 = !DILocation(line: 2579, column: 2, scope: !551)
!6551 = !DILocation(line: 2579, column: 2, scope: !6552)
!6552 = !DILexicalBlockFile(scope: !6553, file: !1, discriminator: 1)
!6553 = distinct !DILexicalBlock(scope: !551, file: !1, line: 2579, column: 2)
!6554 = !DILocation(line: 2580, column: 2, scope: !551)
!6555 = !DILocation(line: 2581, column: 2, scope: !551)
!6556 = !DILocation(line: 2582, column: 19, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !1, line: 2581, column: 11)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !1, line: 2581, column: 2)
!6559 = distinct !DILexicalBlock(scope: !551, file: !1, line: 2581, column: 2)
!6560 = !DILocation(line: 2582, column: 7, scope: !6557)
!6561 = !DILocation(line: 2582, column: 5, scope: !6557)
!6562 = !DILocation(line: 2583, column: 7, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6557, file: !1, line: 2583, column: 7)
!6564 = !DILocation(line: 2583, column: 9, scope: !6563)
!6565 = !DILocation(line: 2583, column: 7, scope: !6557)
!6566 = !DILocation(line: 2584, column: 4, scope: !6563)
!6567 = !DILocation(line: 2585, column: 4, scope: !6557)
!6568 = !DILocation(line: 2585, column: 6, scope: !6557)
!6569 = !DILocation(line: 2589, column: 36, scope: !6557)
!6570 = !DILocation(line: 2589, column: 41, scope: !6557)
!6571 = !DILocation(line: 2589, column: 56, scope: !6557)
!6572 = !DILocation(line: 2589, column: 7, scope: !6557)
!6573 = !DILocation(line: 2588, column: 9, scope: !6557)
!6574 = !DILocation(line: 2588, column: 7, scope: !6557)
!6575 = !DILocation(line: 2590, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6557, file: !1, line: 2590, column: 7)
!6577 = !DILocation(line: 2590, column: 11, scope: !6576)
!6578 = !DILocation(line: 2590, column: 7, scope: !6557)
!6579 = !DILocation(line: 2591, column: 4, scope: !6576)
!6580 = !DILocation(line: 2592, column: 34, scope: !6557)
!6581 = !DILocation(line: 2592, column: 39, scope: !6557)
!6582 = !DILocation(line: 2592, column: 51, scope: !6557)
!6583 = !DILocation(line: 2592, column: 56, scope: !6557)
!6584 = !DILocation(line: 2592, column: 3, scope: !6557)
!6585 = !DILocation(line: 2593, column: 24, scope: !6557)
!6586 = !DILocation(line: 2593, column: 29, scope: !6557)
!6587 = !DILocation(line: 2593, column: 3, scope: !6557)
!6588 = !DILocation(line: 2594, column: 34, scope: !6557)
!6589 = !DILocation(line: 2594, column: 39, scope: !6557)
!6590 = !DILocation(line: 2594, column: 46, scope: !6557)
!6591 = !DILocation(line: 2594, column: 51, scope: !6557)
!6592 = !DILocation(line: 2594, column: 3, scope: !6557)
!6593 = !DILocation(line: 2581, column: 2, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !6558, file: !1, discriminator: 1)
!6595 = !DILocation(line: 2596, column: 2, scope: !551)
!6596 = !DILocation(line: 2597, column: 1, scope: !551)
!6597 = !DILocalVariable(name: "n1", arg: 1, scope: !544, file: !1, line: 2511, type: !360)
!6598 = !DILocation(line: 2511, column: 40, scope: !544)
!6599 = !DILocalVariable(name: "n2", arg: 2, scope: !544, file: !1, line: 2511, type: !360)
!6600 = !DILocation(line: 2511, column: 74, scope: !544)
!6601 = !DILocalVariable(name: "e1", scope: !544, file: !1, line: 2513, type: !471)
!6602 = !DILocation(line: 2513, column: 26, scope: !544)
!6603 = !DILocation(line: 2513, column: 57, scope: !544)
!6604 = !DILocation(line: 2513, column: 31, scope: !544)
!6605 = !DILocalVariable(name: "e2", scope: !544, file: !1, line: 2514, type: !471)
!6606 = !DILocation(line: 2514, column: 26, scope: !544)
!6607 = !DILocation(line: 2514, column: 57, scope: !544)
!6608 = !DILocation(line: 2514, column: 31, scope: !544)
!6609 = !DILocation(line: 2516, column: 6, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !544, file: !1, line: 2516, column: 6)
!6611 = !DILocation(line: 2516, column: 10, scope: !6610)
!6612 = !DILocation(line: 2516, column: 32, scope: !6610)
!6613 = !DILocation(line: 2516, column: 36, scope: !6610)
!6614 = !DILocation(line: 2516, column: 30, scope: !6610)
!6615 = !DILocation(line: 2516, column: 6, scope: !544)
!6616 = !DILocation(line: 2517, column: 3, scope: !6610)
!6617 = !DILocation(line: 2518, column: 6, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !544, file: !1, line: 2518, column: 6)
!6619 = !DILocation(line: 2518, column: 10, scope: !6618)
!6620 = !DILocation(line: 2518, column: 32, scope: !6618)
!6621 = !DILocation(line: 2518, column: 36, scope: !6618)
!6622 = !DILocation(line: 2518, column: 30, scope: !6618)
!6623 = !DILocation(line: 2518, column: 6, scope: !544)
!6624 = !DILocation(line: 2519, column: 3, scope: !6618)
!6625 = !DILocation(line: 2520, column: 2, scope: !544)
!6626 = !DILocation(line: 2521, column: 1, scope: !544)
!6627 = !DILocalVariable(name: "n", arg: 1, scope: !545, file: !1, line: 2524, type: !360)
!6628 = !DILocation(line: 2524, column: 39, scope: !545)
!6629 = !DILocalVariable(name: "key", arg: 2, scope: !545, file: !1, line: 2524, type: !43)
!6630 = !DILocation(line: 2524, column: 54, scope: !545)
!6631 = !DILocation(line: 2527, column: 8, scope: !545)
!6632 = !DILocation(line: 2528, column: 8, scope: !545)
!6633 = !DILocation(line: 2529, column: 2, scope: !545)
!6634 = !DILocalVariable(name: "n1", arg: 1, scope: !546, file: !1, line: 2537, type: !360)
!6635 = !DILocation(line: 2537, column: 45, scope: !546)
!6636 = !DILocalVariable(name: "n2", arg: 2, scope: !546, file: !1, line: 2538, type: !360)
!6637 = !DILocation(line: 2538, column: 35, scope: !546)
!6638 = !DILocalVariable(name: "e1", scope: !546, file: !1, line: 2540, type: !471)
!6639 = !DILocation(line: 2540, column: 26, scope: !546)
!6640 = !DILocation(line: 2540, column: 57, scope: !546)
!6641 = !DILocation(line: 2540, column: 31, scope: !546)
!6642 = !DILocalVariable(name: "e2", scope: !546, file: !1, line: 2541, type: !471)
!6643 = !DILocation(line: 2541, column: 26, scope: !546)
!6644 = !DILocation(line: 2541, column: 57, scope: !546)
!6645 = !DILocation(line: 2541, column: 31, scope: !546)
!6646 = !DILocation(line: 2543, column: 17, scope: !546)
!6647 = !DILocation(line: 2543, column: 21, scope: !546)
!6648 = !DILocation(line: 2543, column: 30, scope: !546)
!6649 = !DILocation(line: 2543, column: 33, scope: !546)
!6650 = !DILocation(line: 2543, column: 37, scope: !546)
!6651 = !DILocation(line: 2543, column: 46, scope: !546)
!6652 = !DILocation(line: 2543, column: 10, scope: !546)
!6653 = !DILocation(line: 2543, column: 2, scope: !546)
!6654 = !DILocalVariable(name: "n", arg: 1, scope: !547, file: !1, line: 2547, type: !360)
!6655 = !DILocation(line: 2547, column: 44, scope: !547)
!6656 = !DILocalVariable(name: "key", arg: 2, scope: !547, file: !1, line: 2547, type: !43)
!6657 = !DILocation(line: 2547, column: 59, scope: !547)
!6658 = !DILocalVariable(name: "e", scope: !547, file: !1, line: 2549, type: !471)
!6659 = !DILocation(line: 2549, column: 26, scope: !547)
!6660 = !DILocation(line: 2549, column: 56, scope: !547)
!6661 = !DILocation(line: 2549, column: 30, scope: !547)
!6662 = !DILocation(line: 2550, column: 31, scope: !547)
!6663 = !DILocation(line: 2550, column: 36, scope: !547)
!6664 = !DILocation(line: 2550, column: 39, scope: !547)
!6665 = !DILocation(line: 2550, column: 48, scope: !547)
!6666 = !DILocation(line: 2550, column: 10, scope: !547)
!6667 = !DILocation(line: 2550, column: 2, scope: !547)
!6668 = !DILocalVariable(name: "a", arg: 1, scope: !557, file: !1, line: 2805, type: !4)
!6669 = !DILocation(line: 2805, column: 53, scope: !557)
!6670 = !DILocalVariable(name: "extra", arg: 2, scope: !557, file: !1, line: 2805, type: !45)
!6671 = !DILocation(line: 2805, column: 63, scope: !557)
!6672 = !DILocalVariable(name: "p", scope: !557, file: !1, line: 2807, type: !80)
!6673 = !DILocation(line: 2807, column: 14, scope: !557)
!6674 = !DILocalVariable(name: "filename_length", scope: !557, file: !1, line: 2808, type: !38)
!6675 = !DILocation(line: 2808, column: 10, scope: !557)
!6676 = !DILocalVariable(name: "extra_length", scope: !557, file: !1, line: 2808, type: !38)
!6677 = !DILocation(line: 2808, column: 27, scope: !557)
!6678 = !DILocation(line: 2810, column: 32, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !557, file: !1, line: 2810, column: 6)
!6680 = !DILocation(line: 2810, column: 35, scope: !6679)
!6681 = !DILocation(line: 2810, column: 41, scope: !6679)
!6682 = !DILocation(line: 2810, column: 11, scope: !6679)
!6683 = !DILocation(line: 2810, column: 9, scope: !6679)
!6684 = !DILocation(line: 2810, column: 54, scope: !6679)
!6685 = !DILocation(line: 2810, column: 6, scope: !557)
!6686 = !DILocation(line: 2811, column: 22, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6679, file: !1, line: 2810, column: 63)
!6688 = !DILocation(line: 2811, column: 25, scope: !6687)
!6689 = !DILocation(line: 2811, column: 3, scope: !6687)
!6690 = !DILocation(line: 2813, column: 3, scope: !6687)
!6691 = !DILocation(line: 2815, column: 7, scope: !557)
!6692 = !DILocation(line: 2815, column: 4, scope: !557)
!6693 = !DILocation(line: 2817, column: 13, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !557, file: !1, line: 2817, column: 6)
!6695 = !DILocation(line: 2817, column: 6, scope: !6694)
!6696 = !DILocation(line: 2817, column: 33, scope: !6694)
!6697 = !DILocation(line: 2817, column: 6, scope: !557)
!6698 = !DILocation(line: 2818, column: 22, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6694, file: !1, line: 2817, column: 39)
!6700 = !DILocation(line: 2818, column: 25, scope: !6699)
!6701 = !DILocation(line: 2818, column: 3, scope: !6699)
!6702 = !DILocation(line: 2819, column: 3, scope: !6699)
!6703 = !DILocation(line: 2821, column: 36, scope: !557)
!6704 = !DILocation(line: 2821, column: 38, scope: !557)
!6705 = !DILocation(line: 2821, column: 20, scope: !557)
!6706 = !DILocation(line: 2821, column: 18, scope: !557)
!6707 = !DILocation(line: 2822, column: 33, scope: !557)
!6708 = !DILocation(line: 2822, column: 35, scope: !557)
!6709 = !DILocation(line: 2822, column: 17, scope: !557)
!6710 = !DILocation(line: 2822, column: 15, scope: !557)
!6711 = !DILocation(line: 2824, column: 15, scope: !557)
!6712 = !DILocation(line: 2824, column: 13, scope: !557)
!6713 = !DILocation(line: 2824, column: 33, scope: !557)
!6714 = !DILocation(line: 2824, column: 31, scope: !557)
!6715 = !DILocation(line: 2824, column: 2, scope: !557)
!6716 = !DILocation(line: 2825, column: 1, scope: !557)

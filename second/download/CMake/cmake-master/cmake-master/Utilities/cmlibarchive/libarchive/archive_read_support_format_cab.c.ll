; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.archive = type { i32, i32, %struct.archive_vtable*, i32, i8*, i32, i8*, i32, i32, i8*, %struct.archive_string, i8*, i32, i32, %struct.archive_string_conv*, i8*, i64, i64, i64, i8, i64 }
%struct.archive_vtable = type { {}*, {}*, i32 (%struct.archive*, %struct.archive_entry*)*, {}*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i64)*, i32 (%struct.archive*, %struct.archive_entry**)*, i32 (%struct.archive*, %struct.archive_entry*)*, i32 (%struct.archive*, i8**, i64*, i64*)*, {}*, i64 (%struct.archive*, i32)*, i32 (%struct.archive*, i32)*, i8* (%struct.archive*, i32)* }
%struct.archive_entry = type opaque
%struct.archive_string = type { i8*, i64, i64 }
%struct.archive_string_conv = type opaque
%struct.archive_read = type { %struct.archive, %struct.archive_entry*, i32, i64, i64, %struct.archive_read_client, [16 x %struct.archive_read_filter_bidder], %struct.archive_read_filter*, i32, i64, i32, i32, [16 x %struct.archive_format_descriptor], %struct.archive_format_descriptor*, %struct.archive_read_extract*, i32 (%struct.archive_read*)*, %struct.anon }
%struct.archive_read_client = type { i32 (%struct.archive*, i8*)*, i64 (%struct.archive*, i8*, i8**)*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i32)*, i32 (%struct.archive*, i8*)*, i32 (%struct.archive*, i8*, i8*)*, i32, i32, i64, %struct.archive_read_data_node* }
%struct.archive_read_data_node = type { i64, i64, i8* }
%struct.archive_read_filter_bidder = type { i8*, i8*, i32 (%struct.archive_read_filter_bidder*, %struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter_bidder*, i8*, i8*)*, i32 (%struct.archive_read_filter_bidder*)* }
%struct.archive_read_filter = type { i64, %struct.archive_read_filter_bidder*, %struct.archive_read_filter*, %struct.archive_read*, i32 (%struct.archive_read_filter*)*, i64 (%struct.archive_read_filter*, i8**)*, i64 (%struct.archive_read_filter*, i64)*, i64 (%struct.archive_read_filter*, i64, i32)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*, i32)*, i8*, i8*, i32, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8, i8, i8 }
%struct.archive_format_descriptor = type { i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)* }
%struct.archive_read_extract = type { %struct.archive*, void (i8*)*, i8* }
%struct.anon = type { %struct.archive_read_passphrase*, %struct.archive_read_passphrase**, i32, i8* (%struct.archive*, i8*)*, i8* }
%struct.archive_read_passphrase = type { i8*, %struct.archive_read_passphrase* }
%struct.cab = type { i64, i64, i64, i64, i64, %struct.cffolder*, %struct.cffile*, %struct.cfdata*, i64, %struct.cfheader, %struct.archive_wstring, i8, i8, i8, i8, i8, i64, i8*, i64, i32, %struct.archive_string_conv*, %struct.archive_string_conv*, %struct.archive_string_conv*, [64 x i8], %struct.z_stream_s, i8, %struct.lzx_stream }
%struct.cffolder = type { i32, i16, i16, i16, i8*, %struct.cfdata, i32, i8 }
%struct.cfdata = type { i32, i16, i16, i16, i16, i16, i16, i64, i64, i8*, i32, [4 x i8], i32, i8* }
%struct.cffile = type { i32, i32, i64, i16, i8, %struct.archive_string }
%struct.cfheader = type { i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, %struct.cffolder*, %struct.cffile*, i32 }
%struct.archive_wstring = type { i32*, i64, i64 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.lzx_stream = type { i8*, i64, i64, i8*, i64, i64, %struct.lzx_dec* }
%struct.lzx_dec = type { i32, i32, i32, i8*, i32, i32, i32, i32, i8, i8, i64, i64, i32, i32, i32, [4 x i8], i32, i32, i32, i32, %struct.lzx_pos_tbl*, %struct.lzx_br, %struct.huffman, %struct.huffman, %struct.huffman, %struct.huffman, i32, i32 }
%struct.lzx_pos_tbl = type { i32, i32 }
%struct.lzx_br = type { i64, i32, i8, i8 }
%struct.huffman = type { i32, [17 x i32], i8*, i32, i32, i32, i32, i32, i16*, %struct.htree_t* }
%struct.htree_t = type { i16, i16 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [32 x i8] c"archive_read_support_format_cab\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Can't allocate CAB data\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"cab\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"MSCF\00\00\00\00\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"hdrcharset\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"cab: hdrcharset option needs a character-set name\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"Can't allocate memory for Pathname\00", align 1
@.str.8 = private unnamed_addr constant [56 x i8] c"Pathname cannot be converted from %s to current locale.\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"CAB %d.%d (%s)\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"CAB\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Couldn't find out CAB header\00", align 1
@compression_name = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"Invalid offset of CFFILE %jd < %jd\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"Multivolume cabinet file is unsupported\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"Invalid CAB header\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"Can't allocate memory for CAB data\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"Truncated CAB header\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"MSZIP\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"Quantum\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"LZX\00", align 1
@.str.22 = private unnamed_addr constant [47 x i8] c"Cannot restore this file split in multivolume.\00", align 1
@.str.23 = private unnamed_addr constant [49 x i8] c"Invalid offset of CFDATA in folder(%d) %jd < %jd\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"Invalid CFDATA\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"Checksum error CFDATA[%d] %x:%x in %d bytes\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"Unsupported CAB compression : %s\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"No memory for CAB reader\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"1.2.3\00", align 1
@.str.29 = private unnamed_addr constant [40 x i8] c"Can't initialize deflate decompression.\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"Invalid uncompressed size (%d < %d)\00", align 1
@.str.31 = private unnamed_addr constant [40 x i8] c"Out of memory for deflate decompression\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"Deflate decompression failed (%d)\00", align 1
@.str.33 = private unnamed_addr constant [37 x i8] c"CFDATA incorrect(no MSZIP signature)\00", align 1
@.str.34 = private unnamed_addr constant [36 x i8] c"Can't initialize LZX decompression.\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"Truncated CAB file data\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"LZX decompression failed (%d)\00", align 1
@slots = internal constant [11 x i32] [i32 30, i32 32, i32 34, i32 36, i32 38, i32 42, i32 50, i32 66, i32 98, i32 162, i32 290], align 16
@cache_masks = internal constant [36 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255, i32 511, i32 1023, i32 2047, i32 4095, i32 8191, i32 16383, i32 32767, i32 65535, i32 131071, i32 262143, i32 524287, i32 1048575, i32 2097151, i32 4194303, i32 8388607, i32 16777215, i32 33554431, i32 67108863, i32 134217727, i32 268435455, i32 536870911, i32 1073741823, i32 2147483647, i32 -1, i32 -1, i32 -1, i32 -1], align 16

; Function Attrs: nounwind uwtable
define i32 @archive_read_support_format_cab(%struct.archive* %_a) #0 !dbg !515 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive*, align 8
  %a = alloca %struct.archive_read*, align 8
  %cab = alloca %struct.cab*, align 8
  %r = alloca i32, align 4
  %magic_test = alloca i32, align 4
  store %struct.archive* %_a, %struct.archive** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive** %_a.addr, metadata !637, metadata !638), !dbg !639
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a, metadata !640, metadata !638), !dbg !641
  %0 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !642
  %1 = bitcast %struct.archive* %0 to %struct.archive_read*, !dbg !643
  store %struct.archive_read* %1, %struct.archive_read** %a, align 8, !dbg !641
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !644, metadata !638), !dbg !645
  call void @llvm.dbg.declare(metadata i32* %r, metadata !646, metadata !638), !dbg !647
  br label %do.body, !dbg !648

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %magic_test, metadata !649, metadata !638), !dbg !651
  %2 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !652
  %call = call i32 @__archive_check_magic(%struct.archive* %2, i32 14594245, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0)), !dbg !652
  store i32 %call, i32* %magic_test, align 4, !dbg !652
  %3 = load i32, i32* %magic_test, align 4, !dbg !652
  %cmp = icmp eq i32 %3, -30, !dbg !652
  br i1 %cmp, label %if.then, label %if.end, !dbg !652

if.then:                                          ; preds = %do.body
  store i32 -30, i32* %retval, align 4, !dbg !654
  br label %return, !dbg !654

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !657

do.end:                                           ; preds = %if.end
  %call1 = call noalias i8* @calloc(i64 1, i64 448) #8, !dbg !659
  %4 = bitcast i8* %call1 to %struct.cab*, !dbg !660
  store %struct.cab* %4, %struct.cab** %cab, align 8, !dbg !661
  %5 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !662
  %cmp2 = icmp eq %struct.cab* %5, null, !dbg !664
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !665

if.then3:                                         ; preds = %do.end
  %6 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !666
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 0, !dbg !668
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !669
  store i32 -30, i32* %retval, align 4, !dbg !670
  br label %return, !dbg !670

if.end4:                                          ; preds = %do.end
  br label %do.body5, !dbg !671

do.body5:                                         ; preds = %if.end4
  %7 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !672
  %ws = getelementptr inbounds %struct.cab, %struct.cab* %7, i32 0, i32 10, !dbg !672
  %s = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws, i32 0, i32 0, !dbg !672
  store i32* null, i32** %s, align 8, !dbg !672
  %8 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !672
  %ws6 = getelementptr inbounds %struct.cab, %struct.cab* %8, i32 0, i32 10, !dbg !672
  %length = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws6, i32 0, i32 1, !dbg !672
  store i64 0, i64* %length, align 8, !dbg !672
  %9 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !672
  %ws7 = getelementptr inbounds %struct.cab, %struct.cab* %9, i32 0, i32 10, !dbg !672
  %buffer_length = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws7, i32 0, i32 2, !dbg !672
  store i64 0, i64* %buffer_length, align 8, !dbg !672
  br label %do.end8, !dbg !672

do.end8:                                          ; preds = %do.body5
  %10 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !675
  %ws9 = getelementptr inbounds %struct.cab, %struct.cab* %10, i32 0, i32 10, !dbg !676
  %call10 = call %struct.archive_wstring* @archive_wstring_ensure(%struct.archive_wstring* %ws9, i64 256), !dbg !677
  %11 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !678
  %12 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !679
  %13 = bitcast %struct.cab* %12 to i8*, !dbg !679
  %call11 = call i32 @__archive_read_register_format(%struct.archive_read* %11, i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.archive_read*, i32)* @archive_read_format_cab_bid, i32 (%struct.archive_read*, i8*, i8*)* @archive_read_format_cab_options, i32 (%struct.archive_read*, %struct.archive_entry*)* @archive_read_format_cab_read_header, i32 (%struct.archive_read*, i8**, i64*, i64*)* @archive_read_format_cab_read_data, i32 (%struct.archive_read*)* @archive_read_format_cab_read_data_skip, i64 (%struct.archive_read*, i64, i32)* null, i32 (%struct.archive_read*)* @archive_read_format_cab_cleanup, i32 (%struct.archive_read*)* null, i32 (%struct.archive_read*)* null), !dbg !680
  store i32 %call11, i32* %r, align 4, !dbg !681
  %14 = load i32, i32* %r, align 4, !dbg !682
  %cmp12 = icmp ne i32 %14, 0, !dbg !684
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !685

if.then13:                                        ; preds = %do.end8
  %15 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !686
  %16 = bitcast %struct.cab* %15 to i8*, !dbg !686
  call void @free(i8* %16) #8, !dbg !687
  br label %if.end14, !dbg !687

if.end14:                                         ; preds = %if.then13, %do.end8
  store i32 0, i32* %retval, align 4, !dbg !688
  br label %return, !dbg !688

return:                                           ; preds = %if.end14, %if.then3, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !689
  ret i32 %17, !dbg !689
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @__archive_check_magic(%struct.archive*, i32, i32, i8*) #2

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

declare void @archive_set_error(%struct.archive*, i32, i8*, ...) #2

declare %struct.archive_wstring* @archive_wstring_ensure(%struct.archive_wstring*, i64) #2

declare i32 @__archive_read_register_format(%struct.archive_read*, i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_cab_bid(%struct.archive_read* %a, i32 %best_bid) #0 !dbg !516 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %best_bid.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %bytes_avail = alloca i64, align 8
  %offset = alloca i64, align 8
  %window = alloca i64, align 8
  %h = alloca i8*, align 8
  %next = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !690, metadata !638), !dbg !691
  store i32 %best_bid, i32* %best_bid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %best_bid.addr, metadata !692, metadata !638), !dbg !693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !694, metadata !638), !dbg !695
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !696, metadata !638), !dbg !697
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !698, metadata !638), !dbg !699
  call void @llvm.dbg.declare(metadata i64* %window, metadata !700, metadata !638), !dbg !701
  %0 = load i32, i32* %best_bid.addr, align 4, !dbg !702
  %cmp = icmp sgt i32 %0, 64, !dbg !704
  br i1 %cmp, label %if.then, label %if.end, !dbg !705

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !706
  br label %return, !dbg !706

if.end:                                           ; preds = %entry
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !707
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %1, i64 8, i64* null), !dbg !709
  store i8* %call, i8** %p, align 8, !dbg !710
  %cmp1 = icmp eq i8* %call, null, !dbg !711
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !712

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !713
  br label %return, !dbg !713

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %p, align 8, !dbg !714
  %call4 = call i32 @memcmp(i8* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i64 8) #9, !dbg !716
  %cmp5 = icmp eq i32 %call4, 0, !dbg !717
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !718

if.then6:                                         ; preds = %if.end3
  store i32 64, i32* %retval, align 4, !dbg !719
  br label %return, !dbg !719

if.end7:                                          ; preds = %if.end3
  %3 = load i8*, i8** %p, align 8, !dbg !720
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !720
  %4 = load i8, i8* %arrayidx, align 1, !dbg !720
  %conv = sext i8 %4 to i32, !dbg !720
  %cmp8 = icmp eq i32 %conv, 77, !dbg !722
  br i1 %cmp8, label %land.lhs.true, label %if.end39, !dbg !723

land.lhs.true:                                    ; preds = %if.end7
  %5 = load i8*, i8** %p, align 8, !dbg !724
  %arrayidx10 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !724
  %6 = load i8, i8* %arrayidx10, align 1, !dbg !724
  %conv11 = sext i8 %6 to i32, !dbg !724
  %cmp12 = icmp eq i32 %conv11, 90, !dbg !726
  br i1 %cmp12, label %if.then14, label %if.end39, !dbg !727

if.then14:                                        ; preds = %land.lhs.true
  store i64 0, i64* %offset, align 8, !dbg !728
  store i64 4096, i64* %window, align 8, !dbg !730
  br label %while.cond, !dbg !731

while.cond:                                       ; preds = %while.end, %if.end24, %if.then14
  %7 = load i64, i64* %offset, align 8, !dbg !732
  %cmp15 = icmp slt i64 %7, 131072, !dbg !734
  br i1 %cmp15, label %while.body, label %while.end38, !dbg !735

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %h, metadata !736, metadata !638), !dbg !738
  %8 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !739
  %9 = load i64, i64* %offset, align 8, !dbg !740
  %10 = load i64, i64* %window, align 8, !dbg !741
  %add = add nsw i64 %9, %10, !dbg !742
  %call17 = call i8* @__archive_read_ahead(%struct.archive_read* %8, i64 %add, i64* %bytes_avail), !dbg !743
  store i8* %call17, i8** %h, align 8, !dbg !738
  %11 = load i8*, i8** %h, align 8, !dbg !744
  %cmp18 = icmp eq i8* %11, null, !dbg !746
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !747

if.then20:                                        ; preds = %while.body
  %12 = load i64, i64* %window, align 8, !dbg !748
  %shr = ashr i64 %12, 1, !dbg !748
  store i64 %shr, i64* %window, align 8, !dbg !748
  %13 = load i64, i64* %window, align 8, !dbg !750
  %cmp21 = icmp slt i64 %13, 128, !dbg !752
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !753

if.then23:                                        ; preds = %if.then20
  store i32 0, i32* %retval, align 4, !dbg !754
  br label %return, !dbg !754

if.end24:                                         ; preds = %if.then20
  br label %while.cond, !dbg !755

if.end25:                                         ; preds = %while.body
  %14 = load i8*, i8** %h, align 8, !dbg !756
  %15 = load i64, i64* %offset, align 8, !dbg !757
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !758
  store i8* %add.ptr, i8** %p, align 8, !dbg !759
  br label %while.cond26, !dbg !760

while.cond26:                                     ; preds = %if.end36, %if.end25
  %16 = load i8*, i8** %p, align 8, !dbg !761
  %add.ptr27 = getelementptr inbounds i8, i8* %16, i64 8, !dbg !763
  %17 = load i8*, i8** %h, align 8, !dbg !764
  %18 = load i64, i64* %bytes_avail, align 8, !dbg !765
  %add.ptr28 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !766
  %cmp29 = icmp ult i8* %add.ptr27, %add.ptr28, !dbg !767
  br i1 %cmp29, label %while.body31, label %while.end, !dbg !768

while.body31:                                     ; preds = %while.cond26
  call void @llvm.dbg.declare(metadata i32* %next, metadata !769, metadata !638), !dbg !771
  %19 = load i8*, i8** %p, align 8, !dbg !772
  %call32 = call i32 @find_cab_magic(i8* %19), !dbg !774
  store i32 %call32, i32* %next, align 4, !dbg !775
  %cmp33 = icmp eq i32 %call32, 0, !dbg !776
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !777

if.then35:                                        ; preds = %while.body31
  store i32 64, i32* %retval, align 4, !dbg !778
  br label %return, !dbg !778

if.end36:                                         ; preds = %while.body31
  %20 = load i32, i32* %next, align 4, !dbg !779
  %21 = load i8*, i8** %p, align 8, !dbg !780
  %idx.ext = sext i32 %20 to i64, !dbg !780
  %add.ptr37 = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !780
  store i8* %add.ptr37, i8** %p, align 8, !dbg !780
  br label %while.cond26, !dbg !781

while.end:                                        ; preds = %while.cond26
  %22 = load i8*, i8** %p, align 8, !dbg !783
  %23 = load i8*, i8** %h, align 8, !dbg !784
  %sub.ptr.lhs.cast = ptrtoint i8* %22 to i64, !dbg !785
  %sub.ptr.rhs.cast = ptrtoint i8* %23 to i64, !dbg !785
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !785
  store i64 %sub.ptr.sub, i64* %offset, align 8, !dbg !786
  br label %while.cond, !dbg !787

while.end38:                                      ; preds = %while.cond
  br label %if.end39, !dbg !789

if.end39:                                         ; preds = %while.end38, %land.lhs.true, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !790
  br label %return, !dbg !790

return:                                           ; preds = %if.end39, %if.then35, %if.then23, %if.then6, %if.then2, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !791
  ret i32 %24, !dbg !791
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_cab_options(%struct.archive_read* %a, i8* %key, i8* %val) #0 !dbg !520 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %key.addr = alloca i8*, align 8
  %val.addr = alloca i8*, align 8
  %cab = alloca %struct.cab*, align 8
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !792, metadata !638), !dbg !793
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !794, metadata !638), !dbg !795
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !796, metadata !638), !dbg !797
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !798, metadata !638), !dbg !799
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !800, metadata !638), !dbg !801
  store i32 -25, i32* %ret, align 4, !dbg !801
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !802
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !803
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !803
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !804
  %2 = load i8*, i8** %data, align 8, !dbg !804
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !805
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !806
  %4 = load i8*, i8** %key.addr, align 8, !dbg !807
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0)) #9, !dbg !809
  %cmp = icmp eq i32 %call, 0, !dbg !810
  br i1 %cmp, label %if.then, label %if.end13, !dbg !811

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %val.addr, align 8, !dbg !812
  %cmp1 = icmp eq i8* %5, null, !dbg !815
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !816

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i8*, i8** %val.addr, align 8, !dbg !817
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !817
  %7 = load i8, i8* %arrayidx, align 1, !dbg !817
  %conv = sext i8 %7 to i32, !dbg !817
  %cmp2 = icmp eq i32 %conv, 0, !dbg !819
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !820

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  %8 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !821
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %8, i32 0, i32 0, !dbg !822
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i32 0, i32 0)), !dbg !823
  br label %if.end12, !dbg !823

if.else:                                          ; preds = %lor.lhs.false
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !824
  %archive5 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %9, i32 0, i32 0, !dbg !826
  %10 = load i8*, i8** %val.addr, align 8, !dbg !827
  %call6 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive5, i8* %10, i32 0), !dbg !828
  %11 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !829
  %sconv = getelementptr inbounds %struct.cab, %struct.cab* %11, i32 0, i32 20, !dbg !830
  store %struct.archive_string_conv* %call6, %struct.archive_string_conv** %sconv, align 8, !dbg !831
  %12 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !832
  %sconv7 = getelementptr inbounds %struct.cab, %struct.cab* %12, i32 0, i32 20, !dbg !834
  %13 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv7, align 8, !dbg !834
  %cmp8 = icmp ne %struct.archive_string_conv* %13, null, !dbg !835
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !836

if.then10:                                        ; preds = %if.else
  store i32 0, i32* %ret, align 4, !dbg !837
  br label %if.end, !dbg !838

if.else11:                                        ; preds = %if.else
  store i32 -30, i32* %ret, align 4, !dbg !839
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then4
  %14 = load i32, i32* %ret, align 4, !dbg !840
  store i32 %14, i32* %retval, align 4, !dbg !841
  br label %return, !dbg !841

if.end13:                                         ; preds = %entry
  store i32 -20, i32* %retval, align 4, !dbg !842
  br label %return, !dbg !842

return:                                           ; preds = %if.end13, %if.end12
  %15 = load i32, i32* %retval, align 4, !dbg !843
  ret i32 %15, !dbg !843
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_cab_read_header(%struct.archive_read* %a, %struct.archive_entry* %entry1) #0 !dbg !521 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %cab = alloca %struct.cab*, align 8
  %hd = alloca %struct.cfheader*, align 8
  %prev_folder = alloca %struct.cffolder*, align 8
  %file = alloca %struct.cffile*, align 8
  %sconv = alloca %struct.archive_string_conv*, align 8
  %err = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !844, metadata !638), !dbg !845
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !846, metadata !638), !dbg !847
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !848, metadata !638), !dbg !849
  call void @llvm.dbg.declare(metadata %struct.cfheader** %hd, metadata !850, metadata !638), !dbg !852
  call void @llvm.dbg.declare(metadata %struct.cffolder** %prev_folder, metadata !853, metadata !638), !dbg !854
  call void @llvm.dbg.declare(metadata %struct.cffile** %file, metadata !855, metadata !638), !dbg !856
  call void @llvm.dbg.declare(metadata %struct.archive_string_conv** %sconv, metadata !857, metadata !638), !dbg !858
  call void @llvm.dbg.declare(metadata i32* %err, metadata !859, metadata !638), !dbg !860
  store i32 0, i32* %err, align 4, !dbg !860
  call void @llvm.dbg.declare(metadata i32* %r, metadata !861, metadata !638), !dbg !862
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !863
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !864
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !864
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !865
  %2 = load i8*, i8** %data, align 8, !dbg !865
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !866
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !867
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !868
  %found_header = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 11, !dbg !870
  %5 = load i8, i8* %found_header, align 8, !dbg !870
  %conv = sext i8 %5 to i32, !dbg !868
  %cmp = icmp eq i32 %conv, 0, !dbg !871
  br i1 %cmp, label %if.then, label %if.end7, !dbg !872

if.then:                                          ; preds = %entry
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !873
  %call = call i32 @cab_read_header(%struct.archive_read* %6), !dbg !875
  store i32 %call, i32* %err, align 4, !dbg !876
  %7 = load i32, i32* %err, align 4, !dbg !877
  %cmp3 = icmp slt i32 %7, -20, !dbg !879
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !880

if.then5:                                         ; preds = %if.then
  %8 = load i32, i32* %err, align 4, !dbg !881
  store i32 %8, i32* %retval, align 4, !dbg !882
  br label %return, !dbg !882

if.end:                                           ; preds = %if.then
  %9 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !883
  %found_header6 = getelementptr inbounds %struct.cab, %struct.cab* %9, i32 0, i32 11, !dbg !884
  store i8 1, i8* %found_header6, align 8, !dbg !885
  br label %if.end7, !dbg !886

if.end7:                                          ; preds = %if.end, %entry
  %10 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !887
  %cfheader = getelementptr inbounds %struct.cab, %struct.cab* %10, i32 0, i32 9, !dbg !888
  store %struct.cfheader* %cfheader, %struct.cfheader** %hd, align 8, !dbg !889
  %11 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !890
  %file_index = getelementptr inbounds %struct.cfheader, %struct.cfheader* %11, i32 0, i32 13, !dbg !892
  %12 = load i32, i32* %file_index, align 8, !dbg !892
  %13 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !893
  %file_count = getelementptr inbounds %struct.cfheader, %struct.cfheader* %13, i32 0, i32 3, !dbg !894
  %14 = load i16, i16* %file_count, align 2, !dbg !894
  %conv8 = zext i16 %14 to i32, !dbg !893
  %cmp9 = icmp sge i32 %12, %conv8, !dbg !895
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !896

if.then11:                                        ; preds = %if.end7
  %15 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !897
  %end_of_archive = getelementptr inbounds %struct.cab, %struct.cab* %15, i32 0, i32 12, !dbg !899
  store i8 1, i8* %end_of_archive, align 1, !dbg !900
  store i32 1, i32* %retval, align 4, !dbg !901
  br label %return, !dbg !901

if.end12:                                         ; preds = %if.end7
  %16 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !902
  %file_index13 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %16, i32 0, i32 13, !dbg !903
  %17 = load i32, i32* %file_index13, align 8, !dbg !904
  %inc = add nsw i32 %17, 1, !dbg !904
  store i32 %inc, i32* %file_index13, align 8, !dbg !904
  %idxprom = sext i32 %17 to i64, !dbg !905
  %18 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !905
  %file_array = getelementptr inbounds %struct.cfheader, %struct.cfheader* %18, i32 0, i32 12, !dbg !906
  %19 = load %struct.cffile*, %struct.cffile** %file_array, align 8, !dbg !906
  %arrayidx = getelementptr inbounds %struct.cffile, %struct.cffile* %19, i64 %idxprom, !dbg !905
  store %struct.cffile* %arrayidx, %struct.cffile** %file, align 8, !dbg !907
  %20 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !908
  %end_of_entry = getelementptr inbounds %struct.cab, %struct.cab* %20, i32 0, i32 13, !dbg !909
  store i8 0, i8* %end_of_entry, align 2, !dbg !910
  %21 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !911
  %end_of_entry_cleanup = getelementptr inbounds %struct.cab, %struct.cab* %21, i32 0, i32 14, !dbg !912
  store i8 0, i8* %end_of_entry_cleanup, align 1, !dbg !913
  %22 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !914
  %entry_compressed_bytes_read = getelementptr inbounds %struct.cab, %struct.cab* %22, i32 0, i32 3, !dbg !915
  store i64 0, i64* %entry_compressed_bytes_read, align 8, !dbg !916
  %23 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !917
  %entry_uncompressed_bytes_read = getelementptr inbounds %struct.cab, %struct.cab* %23, i32 0, i32 4, !dbg !918
  store i64 0, i64* %entry_uncompressed_bytes_read, align 8, !dbg !919
  %24 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !920
  %entry_unconsumed = getelementptr inbounds %struct.cab, %struct.cab* %24, i32 0, i32 2, !dbg !921
  store i64 0, i64* %entry_unconsumed, align 8, !dbg !922
  %25 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !923
  %26 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !924
  %entry_cffile = getelementptr inbounds %struct.cab, %struct.cab* %26, i32 0, i32 6, !dbg !925
  store %struct.cffile* %25, %struct.cffile** %entry_cffile, align 8, !dbg !926
  %27 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !927
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %27, i32 0, i32 5, !dbg !928
  %28 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !928
  store %struct.cffolder* %28, %struct.cffolder** %prev_folder, align 8, !dbg !929
  %29 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !930
  %folder = getelementptr inbounds %struct.cffile, %struct.cffile* %29, i32 0, i32 3, !dbg !931
  %30 = load i16, i16* %folder, align 8, !dbg !931
  %conv14 = zext i16 %30 to i32, !dbg !930
  switch i32 %conv14, label %sw.default [
    i32 65533, label %sw.bb
    i32 65535, label %sw.bb
    i32 65534, label %sw.bb17
  ], !dbg !932

sw.bb:                                            ; preds = %if.end12, %if.end12
  %31 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !933
  %folder_array = getelementptr inbounds %struct.cfheader, %struct.cfheader* %31, i32 0, i32 11, !dbg !935
  %32 = load %struct.cffolder*, %struct.cffolder** %folder_array, align 8, !dbg !935
  %arrayidx15 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %32, i64 0, !dbg !933
  %33 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !936
  %entry_cffolder16 = getelementptr inbounds %struct.cab, %struct.cab* %33, i32 0, i32 5, !dbg !937
  store %struct.cffolder* %arrayidx15, %struct.cffolder** %entry_cffolder16, align 8, !dbg !938
  br label %sw.epilog, !dbg !939

sw.bb17:                                          ; preds = %if.end12
  %34 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !940
  %folder_count = getelementptr inbounds %struct.cfheader, %struct.cfheader* %34, i32 0, i32 2, !dbg !941
  %35 = load i16, i16* %folder_count, align 8, !dbg !941
  %conv18 = zext i16 %35 to i32, !dbg !940
  %sub = sub nsw i32 %conv18, 1, !dbg !942
  %idxprom19 = sext i32 %sub to i64, !dbg !943
  %36 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !943
  %folder_array20 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %36, i32 0, i32 11, !dbg !944
  %37 = load %struct.cffolder*, %struct.cffolder** %folder_array20, align 8, !dbg !944
  %arrayidx21 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %37, i64 %idxprom19, !dbg !943
  %38 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !945
  %entry_cffolder22 = getelementptr inbounds %struct.cab, %struct.cab* %38, i32 0, i32 5, !dbg !946
  store %struct.cffolder* %arrayidx21, %struct.cffolder** %entry_cffolder22, align 8, !dbg !947
  br label %sw.epilog, !dbg !948

sw.default:                                       ; preds = %if.end12
  %39 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !949
  %folder23 = getelementptr inbounds %struct.cffile, %struct.cffile* %39, i32 0, i32 3, !dbg !950
  %40 = load i16, i16* %folder23, align 8, !dbg !950
  %idxprom24 = zext i16 %40 to i64, !dbg !951
  %41 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !951
  %folder_array25 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %41, i32 0, i32 11, !dbg !952
  %42 = load %struct.cffolder*, %struct.cffolder** %folder_array25, align 8, !dbg !952
  %arrayidx26 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %42, i64 %idxprom24, !dbg !951
  %43 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !953
  %entry_cffolder27 = getelementptr inbounds %struct.cab, %struct.cab* %43, i32 0, i32 5, !dbg !954
  store %struct.cffolder* %arrayidx26, %struct.cffolder** %entry_cffolder27, align 8, !dbg !955
  br label %sw.epilog, !dbg !956

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb
  %44 = load %struct.cffolder*, %struct.cffolder** %prev_folder, align 8, !dbg !957
  %45 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !959
  %entry_cffolder28 = getelementptr inbounds %struct.cab, %struct.cab* %45, i32 0, i32 5, !dbg !960
  %46 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder28, align 8, !dbg !960
  %cmp29 = icmp ne %struct.cffolder* %44, %46, !dbg !961
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !962

if.then31:                                        ; preds = %sw.epilog
  %47 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !963
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %47, i32 0, i32 7, !dbg !964
  store %struct.cfdata* null, %struct.cfdata** %entry_cfdata, align 8, !dbg !965
  br label %if.end32, !dbg !963

if.end32:                                         ; preds = %if.then31, %sw.epilog
  %48 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !966
  %attr = getelementptr inbounds %struct.cffile, %struct.cffile* %48, i32 0, i32 4, !dbg !968
  %49 = load i8, i8* %attr, align 2, !dbg !968
  %conv33 = zext i8 %49 to i32, !dbg !966
  %and = and i32 %conv33, 128, !dbg !969
  %tobool = icmp ne i32 %and, 0, !dbg !969
  br i1 %tobool, label %if.then34, label %if.else, !dbg !970

if.then34:                                        ; preds = %if.end32
  %50 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !971
  %sconv_utf8 = getelementptr inbounds %struct.cab, %struct.cab* %50, i32 0, i32 22, !dbg !974
  %51 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8, align 8, !dbg !974
  %cmp35 = icmp eq %struct.archive_string_conv* %51, null, !dbg !975
  br i1 %cmp35, label %if.then37, label %if.end45, !dbg !976

if.then37:                                        ; preds = %if.then34
  %52 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !977
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %52, i32 0, i32 0, !dbg !979
  %call38 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i32 1), !dbg !980
  %53 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !981
  %sconv_utf839 = getelementptr inbounds %struct.cab, %struct.cab* %53, i32 0, i32 22, !dbg !982
  store %struct.archive_string_conv* %call38, %struct.archive_string_conv** %sconv_utf839, align 8, !dbg !983
  %54 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !984
  %sconv_utf840 = getelementptr inbounds %struct.cab, %struct.cab* %54, i32 0, i32 22, !dbg !986
  %55 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf840, align 8, !dbg !986
  %cmp41 = icmp eq %struct.archive_string_conv* %55, null, !dbg !987
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !988

if.then43:                                        ; preds = %if.then37
  store i32 -30, i32* %retval, align 4, !dbg !989
  br label %return, !dbg !989

if.end44:                                         ; preds = %if.then37
  br label %if.end45, !dbg !990

if.end45:                                         ; preds = %if.end44, %if.then34
  %56 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !991
  %sconv_utf846 = getelementptr inbounds %struct.cab, %struct.cab* %56, i32 0, i32 22, !dbg !992
  %57 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf846, align 8, !dbg !992
  store %struct.archive_string_conv* %57, %struct.archive_string_conv** %sconv, align 8, !dbg !993
  br label %if.end61, !dbg !994

if.else:                                          ; preds = %if.end32
  %58 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !995
  %sconv47 = getelementptr inbounds %struct.cab, %struct.cab* %58, i32 0, i32 20, !dbg !998
  %59 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv47, align 8, !dbg !998
  %cmp48 = icmp ne %struct.archive_string_conv* %59, null, !dbg !999
  br i1 %cmp48, label %if.then50, label %if.else52, !dbg !995

if.then50:                                        ; preds = %if.else
  %60 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1000
  %sconv51 = getelementptr inbounds %struct.cab, %struct.cab* %60, i32 0, i32 20, !dbg !1002
  %61 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv51, align 8, !dbg !1002
  store %struct.archive_string_conv* %61, %struct.archive_string_conv** %sconv, align 8, !dbg !1003
  br label %if.end60, !dbg !1004

if.else52:                                        ; preds = %if.else
  %62 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1005
  %init_default_conversion = getelementptr inbounds %struct.cab, %struct.cab* %62, i32 0, i32 19, !dbg !1008
  %63 = load i32, i32* %init_default_conversion, align 8, !dbg !1008
  %tobool53 = icmp ne i32 %63, 0, !dbg !1005
  br i1 %tobool53, label %if.end58, label %if.then54, !dbg !1009

if.then54:                                        ; preds = %if.else52
  %64 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1010
  %archive55 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %64, i32 0, i32 0, !dbg !1012
  %call56 = call %struct.archive_string_conv* @archive_string_default_conversion_for_read(%struct.archive* %archive55), !dbg !1013
  %65 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1014
  %sconv_default = getelementptr inbounds %struct.cab, %struct.cab* %65, i32 0, i32 21, !dbg !1015
  store %struct.archive_string_conv* %call56, %struct.archive_string_conv** %sconv_default, align 8, !dbg !1016
  %66 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1017
  %init_default_conversion57 = getelementptr inbounds %struct.cab, %struct.cab* %66, i32 0, i32 19, !dbg !1018
  store i32 1, i32* %init_default_conversion57, align 8, !dbg !1019
  br label %if.end58, !dbg !1020

if.end58:                                         ; preds = %if.then54, %if.else52
  %67 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1021
  %sconv_default59 = getelementptr inbounds %struct.cab, %struct.cab* %67, i32 0, i32 21, !dbg !1022
  %68 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_default59, align 8, !dbg !1022
  store %struct.archive_string_conv* %68, %struct.archive_string_conv** %sconv, align 8, !dbg !1023
  br label %if.end60

if.end60:                                         ; preds = %if.end58, %if.then50
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end45
  %69 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1024
  %pathname = getelementptr inbounds %struct.cffile, %struct.cffile* %69, i32 0, i32 5, !dbg !1025
  %70 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1026
  %attr62 = getelementptr inbounds %struct.cffile, %struct.cffile* %70, i32 0, i32 4, !dbg !1027
  %71 = load i8, i8* %attr62, align 2, !dbg !1027
  %call63 = call i32 @cab_convert_path_separator_1(%struct.archive_string* %pathname, i8 zeroext %71), !dbg !1028
  store i32 %call63, i32* %r, align 4, !dbg !1029
  %72 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1030
  %73 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1032
  %pathname64 = getelementptr inbounds %struct.cffile, %struct.cffile* %73, i32 0, i32 5, !dbg !1033
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname64, i32 0, i32 0, !dbg !1034
  %74 = load i8*, i8** %s, align 8, !dbg !1034
  %75 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1035
  %pathname65 = getelementptr inbounds %struct.cffile, %struct.cffile* %75, i32 0, i32 5, !dbg !1035
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname65, i32 0, i32 1, !dbg !1035
  %76 = load i64, i64* %length, align 8, !dbg !1035
  %77 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !1036
  %call66 = call i32 @_archive_entry_copy_pathname_l(%struct.archive_entry* %72, i8* %74, i64 %76, %struct.archive_string_conv* %77), !dbg !1037
  %cmp67 = icmp ne i32 %call66, 0, !dbg !1038
  br i1 %cmp67, label %if.then69, label %if.end78, !dbg !1039

if.then69:                                        ; preds = %if.end61
  %call70 = call i32* @__errno_location() #1, !dbg !1040
  %78 = load i32, i32* %call70, align 4, !dbg !1040
  %cmp71 = icmp eq i32 %78, 12, !dbg !1043
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !1044

if.then73:                                        ; preds = %if.then69
  %79 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1045
  %archive74 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %79, i32 0, i32 0, !dbg !1047
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive74, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i32 0, i32 0)), !dbg !1048
  store i32 -30, i32* %retval, align 4, !dbg !1049
  br label %return, !dbg !1049

if.end75:                                         ; preds = %if.then69
  %80 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1050
  %archive76 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %80, i32 0, i32 0, !dbg !1051
  %81 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !1052
  %call77 = call i8* @archive_string_conversion_charset_name(%struct.archive_string_conv* %81), !dbg !1053
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive76, i32 84, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i32 0, i32 0), i8* %call77), !dbg !1054
  store i32 -20, i32* %err, align 4, !dbg !1055
  br label %if.end78, !dbg !1056

if.end78:                                         ; preds = %if.end75, %if.end61
  %82 = load i32, i32* %r, align 4, !dbg !1057
  %cmp79 = icmp slt i32 %82, 0, !dbg !1059
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !1060

if.then81:                                        ; preds = %if.end78
  %83 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1061
  %84 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1063
  call void @cab_convert_path_separator_2(%struct.cab* %83, %struct.archive_entry* %84), !dbg !1064
  br label %if.end82, !dbg !1065

if.end82:                                         ; preds = %if.then81, %if.end78
  %85 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1066
  %86 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1067
  %uncompressed_size = getelementptr inbounds %struct.cffile, %struct.cffile* %86, i32 0, i32 0, !dbg !1068
  %87 = load i32, i32* %uncompressed_size, align 8, !dbg !1068
  %conv83 = zext i32 %87 to i64, !dbg !1067
  call void @archive_entry_set_size(%struct.archive_entry* %85, i64 %conv83), !dbg !1069
  %88 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1070
  %attr84 = getelementptr inbounds %struct.cffile, %struct.cffile* %88, i32 0, i32 4, !dbg !1072
  %89 = load i8, i8* %attr84, align 2, !dbg !1072
  %conv85 = zext i8 %89 to i32, !dbg !1070
  %and86 = and i32 %conv85, 1, !dbg !1073
  %tobool87 = icmp ne i32 %and86, 0, !dbg !1073
  br i1 %tobool87, label %if.then88, label %if.else89, !dbg !1074

if.then88:                                        ; preds = %if.end82
  %90 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1075
  call void @archive_entry_set_mode(%struct.archive_entry* %90, i32 33133), !dbg !1076
  br label %if.end90, !dbg !1076

if.else89:                                        ; preds = %if.end82
  %91 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1077
  call void @archive_entry_set_mode(%struct.archive_entry* %91, i32 33206), !dbg !1078
  br label %if.end90

if.end90:                                         ; preds = %if.else89, %if.then88
  %92 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1079
  %93 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1080
  %mtime = getelementptr inbounds %struct.cffile, %struct.cffile* %93, i32 0, i32 2, !dbg !1081
  %94 = load i64, i64* %mtime, align 8, !dbg !1081
  call void @archive_entry_set_mtime(%struct.archive_entry* %92, i64 %94, i64 0), !dbg !1082
  %95 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1083
  %uncompressed_size91 = getelementptr inbounds %struct.cffile, %struct.cffile* %95, i32 0, i32 0, !dbg !1084
  %96 = load i32, i32* %uncompressed_size91, align 8, !dbg !1084
  %conv92 = zext i32 %96 to i64, !dbg !1083
  %97 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1085
  %entry_bytes_remaining = getelementptr inbounds %struct.cab, %struct.cab* %97, i32 0, i32 1, !dbg !1086
  store i64 %conv92, i64* %entry_bytes_remaining, align 8, !dbg !1087
  %98 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1088
  %entry_offset = getelementptr inbounds %struct.cab, %struct.cab* %98, i32 0, i32 0, !dbg !1089
  store i64 0, i64* %entry_offset, align 8, !dbg !1090
  %99 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !1091
  %uncompressed_size93 = getelementptr inbounds %struct.cffile, %struct.cffile* %99, i32 0, i32 0, !dbg !1093
  %100 = load i32, i32* %uncompressed_size93, align 8, !dbg !1093
  %cmp94 = icmp eq i32 %100, 0, !dbg !1094
  br i1 %cmp94, label %if.then96, label %if.end99, !dbg !1095

if.then96:                                        ; preds = %if.end90
  %101 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1096
  %end_of_entry97 = getelementptr inbounds %struct.cab, %struct.cab* %101, i32 0, i32 13, !dbg !1097
  store i8 1, i8* %end_of_entry97, align 2, !dbg !1098
  %102 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1099
  %end_of_entry_cleanup98 = getelementptr inbounds %struct.cab, %struct.cab* %102, i32 0, i32 14, !dbg !1100
  store i8 1, i8* %end_of_entry_cleanup98, align 1, !dbg !1101
  br label %if.end99, !dbg !1099

if.end99:                                         ; preds = %if.then96, %if.end90
  %103 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1102
  %format_name = getelementptr inbounds %struct.cab, %struct.cab* %103, i32 0, i32 23, !dbg !1103
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %format_name, i32 0, i32 0, !dbg !1102
  %104 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1104
  %major = getelementptr inbounds %struct.cfheader, %struct.cfheader* %104, i32 0, i32 7, !dbg !1105
  %105 = load i8, i8* %major, align 2, !dbg !1105
  %conv100 = zext i8 %105 to i32, !dbg !1104
  %106 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1106
  %minor = getelementptr inbounds %struct.cfheader, %struct.cfheader* %106, i32 0, i32 8, !dbg !1107
  %107 = load i8, i8* %minor, align 1, !dbg !1107
  %conv101 = zext i8 %107 to i32, !dbg !1106
  %108 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1108
  %entry_cffolder102 = getelementptr inbounds %struct.cab, %struct.cab* %108, i32 0, i32 5, !dbg !1109
  %109 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder102, align 8, !dbg !1109
  %compname = getelementptr inbounds %struct.cffolder, %struct.cffolder* %109, i32 0, i32 4, !dbg !1110
  %110 = load i8*, i8** %compname, align 8, !dbg !1110
  %call103 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i32 %conv100, i32 %conv101, i8* %110) #8, !dbg !1111
  %111 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1112
  %format_name104 = getelementptr inbounds %struct.cab, %struct.cab* %111, i32 0, i32 23, !dbg !1113
  %arraydecay105 = getelementptr inbounds [64 x i8], [64 x i8]* %format_name104, i32 0, i32 0, !dbg !1112
  %112 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1114
  %archive106 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %112, i32 0, i32 0, !dbg !1115
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive106, i32 0, i32 4, !dbg !1116
  store i8* %arraydecay105, i8** %archive_format_name, align 8, !dbg !1117
  %113 = load i32, i32* %err, align 4, !dbg !1118
  store i32 %113, i32* %retval, align 4, !dbg !1119
  br label %return, !dbg !1119

return:                                           ; preds = %if.end99, %if.then73, %if.then43, %if.then11, %if.then5
  %114 = load i32, i32* %retval, align 4, !dbg !1120
  ret i32 %114, !dbg !1120
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_cab_read_data(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !549 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %cab = alloca %struct.cab*, align 8
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1121, metadata !638), !dbg !1122
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !1123, metadata !638), !dbg !1124
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !1125, metadata !638), !dbg !1126
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !1127, metadata !638), !dbg !1128
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !1129, metadata !638), !dbg !1130
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1131
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1132
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1132
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1133
  %2 = load i8*, i8** %data, align 8, !dbg !1133
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !1134
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !1130
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1135, metadata !638), !dbg !1136
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1137
  %entry_cffile = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 6, !dbg !1138
  %5 = load %struct.cffile*, %struct.cffile** %entry_cffile, align 8, !dbg !1138
  %folder = getelementptr inbounds %struct.cffile, %struct.cffile* %5, i32 0, i32 3, !dbg !1139
  %6 = load i16, i16* %folder, align 8, !dbg !1139
  %conv = zext i16 %6 to i32, !dbg !1137
  switch i32 %conv, label %sw.default [
    i32 65533, label %sw.bb
    i32 65534, label %sw.bb
    i32 65535, label %sw.bb
  ], !dbg !1140

sw.bb:                                            ; preds = %entry, %entry, %entry
  %7 = load i8**, i8*** %buff.addr, align 8, !dbg !1141
  store i8* null, i8** %7, align 8, !dbg !1143
  %8 = load i64*, i64** %size.addr, align 8, !dbg !1144
  store i64 0, i64* %8, align 8, !dbg !1145
  %9 = load i64*, i64** %offset.addr, align 8, !dbg !1146
  store i64 0, i64* %9, align 8, !dbg !1147
  %10 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1148
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %10, i32 0, i32 0, !dbg !1149
  call void @archive_clear_error(%struct.archive* %archive), !dbg !1150
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1151
  %archive1 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !1152
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive1, i32 84, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.22, i32 0, i32 0)), !dbg !1153
  store i32 -25, i32* %retval, align 4, !dbg !1154
  br label %return, !dbg !1154

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !1155

sw.epilog:                                        ; preds = %sw.default
  %12 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1156
  %read_data_invoked = getelementptr inbounds %struct.cab, %struct.cab* %12, i32 0, i32 15, !dbg !1158
  %13 = load i8, i8* %read_data_invoked, align 4, !dbg !1158
  %conv2 = sext i8 %13 to i32, !dbg !1156
  %cmp = icmp eq i32 %conv2, 0, !dbg !1159
  br i1 %cmp, label %if.then, label %if.end21, !dbg !1160

if.then:                                          ; preds = %sw.epilog
  %14 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1161
  %bytes_skipped = getelementptr inbounds %struct.cab, %struct.cab* %14, i32 0, i32 16, !dbg !1164
  %15 = load i64, i64* %bytes_skipped, align 8, !dbg !1164
  %tobool = icmp ne i64 %15, 0, !dbg !1161
  br i1 %tobool, label %if.then4, label %if.end19, !dbg !1165

if.then4:                                         ; preds = %if.then
  %16 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1166
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %16, i32 0, i32 7, !dbg !1169
  %17 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !1169
  %cmp5 = icmp eq %struct.cfdata* %17, null, !dbg !1170
  br i1 %cmp5, label %if.then7, label %if.end11, !dbg !1171

if.then7:                                         ; preds = %if.then4
  %18 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1172
  %call = call i32 @cab_next_cfdata(%struct.archive_read* %18), !dbg !1174
  store i32 %call, i32* %r, align 4, !dbg !1175
  %19 = load i32, i32* %r, align 4, !dbg !1176
  %cmp8 = icmp slt i32 %19, 0, !dbg !1178
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !1179

if.then10:                                        ; preds = %if.then7
  %20 = load i32, i32* %r, align 4, !dbg !1180
  store i32 %20, i32* %retval, align 4, !dbg !1181
  br label %return, !dbg !1181

if.end:                                           ; preds = %if.then7
  br label %if.end11, !dbg !1182

if.end11:                                         ; preds = %if.end, %if.then4
  %21 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1183
  %22 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1185
  %bytes_skipped12 = getelementptr inbounds %struct.cab, %struct.cab* %22, i32 0, i32 16, !dbg !1186
  %23 = load i64, i64* %bytes_skipped12, align 8, !dbg !1186
  %call13 = call i64 @cab_consume_cfdata(%struct.archive_read* %21, i64 %23), !dbg !1187
  %cmp14 = icmp slt i64 %call13, 0, !dbg !1188
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !1189

if.then16:                                        ; preds = %if.end11
  store i32 -30, i32* %retval, align 4, !dbg !1190
  br label %return, !dbg !1190

if.end17:                                         ; preds = %if.end11
  %24 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1191
  %bytes_skipped18 = getelementptr inbounds %struct.cab, %struct.cab* %24, i32 0, i32 16, !dbg !1192
  store i64 0, i64* %bytes_skipped18, align 8, !dbg !1193
  br label %if.end19, !dbg !1194

if.end19:                                         ; preds = %if.end17, %if.then
  %25 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1195
  %read_data_invoked20 = getelementptr inbounds %struct.cab, %struct.cab* %25, i32 0, i32 15, !dbg !1196
  store i8 1, i8* %read_data_invoked20, align 4, !dbg !1197
  br label %if.end21, !dbg !1198

if.end21:                                         ; preds = %if.end19, %sw.epilog
  %26 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1199
  %entry_unconsumed = getelementptr inbounds %struct.cab, %struct.cab* %26, i32 0, i32 2, !dbg !1201
  %27 = load i64, i64* %entry_unconsumed, align 8, !dbg !1201
  %tobool22 = icmp ne i64 %27, 0, !dbg !1199
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !1202

if.then23:                                        ; preds = %if.end21
  %28 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1203
  %29 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1205
  %entry_unconsumed24 = getelementptr inbounds %struct.cab, %struct.cab* %29, i32 0, i32 2, !dbg !1206
  %30 = load i64, i64* %entry_unconsumed24, align 8, !dbg !1206
  %call25 = call i64 @cab_consume_cfdata(%struct.archive_read* %28, i64 %30), !dbg !1207
  %conv26 = trunc i64 %call25 to i32, !dbg !1208
  store i32 %conv26, i32* %r, align 4, !dbg !1209
  %31 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1210
  %entry_unconsumed27 = getelementptr inbounds %struct.cab, %struct.cab* %31, i32 0, i32 2, !dbg !1211
  store i64 0, i64* %entry_unconsumed27, align 8, !dbg !1212
  %32 = load i32, i32* %r, align 4, !dbg !1213
  %cmp28 = icmp slt i32 %32, 0, !dbg !1215
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !1216

if.then30:                                        ; preds = %if.then23
  %33 = load i32, i32* %r, align 4, !dbg !1217
  store i32 %33, i32* %retval, align 4, !dbg !1218
  br label %return, !dbg !1218

if.end31:                                         ; preds = %if.then23
  br label %if.end32, !dbg !1219

if.end32:                                         ; preds = %if.end31, %if.end21
  %34 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1220
  %end_of_archive = getelementptr inbounds %struct.cab, %struct.cab* %34, i32 0, i32 12, !dbg !1222
  %35 = load i8, i8* %end_of_archive, align 1, !dbg !1222
  %conv33 = sext i8 %35 to i32, !dbg !1220
  %tobool34 = icmp ne i32 %conv33, 0, !dbg !1220
  br i1 %tobool34, label %if.then37, label %lor.lhs.false, !dbg !1223

lor.lhs.false:                                    ; preds = %if.end32
  %36 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1224
  %end_of_entry = getelementptr inbounds %struct.cab, %struct.cab* %36, i32 0, i32 13, !dbg !1226
  %37 = load i8, i8* %end_of_entry, align 2, !dbg !1226
  %conv35 = sext i8 %37 to i32, !dbg !1224
  %tobool36 = icmp ne i32 %conv35, 0, !dbg !1224
  br i1 %tobool36, label %if.then37, label %if.end42, !dbg !1227

if.then37:                                        ; preds = %lor.lhs.false, %if.end32
  %38 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1228
  %end_of_entry_cleanup = getelementptr inbounds %struct.cab, %struct.cab* %38, i32 0, i32 14, !dbg !1231
  %39 = load i8, i8* %end_of_entry_cleanup, align 1, !dbg !1231
  %tobool38 = icmp ne i8 %39, 0, !dbg !1228
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !1232

if.then39:                                        ; preds = %if.then37
  %40 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1233
  %end_of_entry_cleanup40 = getelementptr inbounds %struct.cab, %struct.cab* %40, i32 0, i32 14, !dbg !1235
  store i8 1, i8* %end_of_entry_cleanup40, align 1, !dbg !1236
  br label %if.end41, !dbg !1237

if.end41:                                         ; preds = %if.then39, %if.then37
  %41 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1238
  %entry_offset = getelementptr inbounds %struct.cab, %struct.cab* %41, i32 0, i32 0, !dbg !1239
  %42 = load i64, i64* %entry_offset, align 8, !dbg !1239
  %43 = load i64*, i64** %offset.addr, align 8, !dbg !1240
  store i64 %42, i64* %43, align 8, !dbg !1241
  %44 = load i64*, i64** %size.addr, align 8, !dbg !1242
  store i64 0, i64* %44, align 8, !dbg !1243
  %45 = load i8**, i8*** %buff.addr, align 8, !dbg !1244
  store i8* null, i8** %45, align 8, !dbg !1245
  store i32 1, i32* %retval, align 4, !dbg !1246
  br label %return, !dbg !1246

if.end42:                                         ; preds = %lor.lhs.false
  %46 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1247
  %47 = load i8**, i8*** %buff.addr, align 8, !dbg !1248
  %48 = load i64*, i64** %size.addr, align 8, !dbg !1249
  %49 = load i64*, i64** %offset.addr, align 8, !dbg !1250
  %call43 = call i32 @cab_read_data(%struct.archive_read* %46, i8** %47, i64* %48, i64* %49), !dbg !1251
  store i32 %call43, i32* %retval, align 4, !dbg !1252
  br label %return, !dbg !1252

return:                                           ; preds = %if.end42, %if.end41, %if.then30, %if.then16, %if.then10, %sw.bb
  %50 = load i32, i32* %retval, align 4, !dbg !1253
  ret i32 %50, !dbg !1253
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_cab_read_data_skip(%struct.archive_read* %a) #0 !dbg !618 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %cab = alloca %struct.cab*, align 8
  %bytes_skipped = alloca i64, align 8
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1254, metadata !638), !dbg !1255
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !1256, metadata !638), !dbg !1257
  call void @llvm.dbg.declare(metadata i64* %bytes_skipped, metadata !1258, metadata !638), !dbg !1259
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1260, metadata !638), !dbg !1261
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1262
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1263
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1263
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1264
  %2 = load i8*, i8** %data, align 8, !dbg !1264
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !1265
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !1266
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1267
  %end_of_archive = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 12, !dbg !1269
  %5 = load i8, i8* %end_of_archive, align 1, !dbg !1269
  %tobool = icmp ne i8 %5, 0, !dbg !1267
  br i1 %tobool, label %if.then, label %if.end, !dbg !1270

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1271
  br label %return, !dbg !1271

if.end:                                           ; preds = %entry
  %6 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1272
  %read_data_invoked = getelementptr inbounds %struct.cab, %struct.cab* %6, i32 0, i32 15, !dbg !1274
  %7 = load i8, i8* %read_data_invoked, align 4, !dbg !1274
  %tobool1 = icmp ne i8 %7, 0, !dbg !1272
  br i1 %tobool1, label %if.end5, label %if.then2, !dbg !1275

if.then2:                                         ; preds = %if.end
  %8 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1276
  %entry_bytes_remaining = getelementptr inbounds %struct.cab, %struct.cab* %8, i32 0, i32 1, !dbg !1278
  %9 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !1278
  %10 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1279
  %bytes_skipped3 = getelementptr inbounds %struct.cab, %struct.cab* %10, i32 0, i32 16, !dbg !1280
  %11 = load i64, i64* %bytes_skipped3, align 8, !dbg !1281
  %add = add nsw i64 %11, %9, !dbg !1281
  store i64 %add, i64* %bytes_skipped3, align 8, !dbg !1281
  %12 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1282
  %entry_bytes_remaining4 = getelementptr inbounds %struct.cab, %struct.cab* %12, i32 0, i32 1, !dbg !1283
  store i64 0, i64* %entry_bytes_remaining4, align 8, !dbg !1284
  %13 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1285
  %end_of_entry = getelementptr inbounds %struct.cab, %struct.cab* %13, i32 0, i32 13, !dbg !1286
  store i8 1, i8* %end_of_entry, align 2, !dbg !1287
  %14 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1288
  %end_of_entry_cleanup = getelementptr inbounds %struct.cab, %struct.cab* %14, i32 0, i32 14, !dbg !1289
  store i8 1, i8* %end_of_entry_cleanup, align 1, !dbg !1290
  store i32 0, i32* %retval, align 4, !dbg !1291
  br label %return, !dbg !1291

if.end5:                                          ; preds = %if.end
  %15 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1292
  %entry_unconsumed = getelementptr inbounds %struct.cab, %struct.cab* %15, i32 0, i32 2, !dbg !1294
  %16 = load i64, i64* %entry_unconsumed, align 8, !dbg !1294
  %tobool6 = icmp ne i64 %16, 0, !dbg !1292
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !1295

if.then7:                                         ; preds = %if.end5
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1296
  %18 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1298
  %entry_unconsumed8 = getelementptr inbounds %struct.cab, %struct.cab* %18, i32 0, i32 2, !dbg !1299
  %19 = load i64, i64* %entry_unconsumed8, align 8, !dbg !1299
  %call = call i64 @cab_consume_cfdata(%struct.archive_read* %17, i64 %19), !dbg !1300
  %conv = trunc i64 %call to i32, !dbg !1301
  store i32 %conv, i32* %r, align 4, !dbg !1302
  %20 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1303
  %entry_unconsumed9 = getelementptr inbounds %struct.cab, %struct.cab* %20, i32 0, i32 2, !dbg !1304
  store i64 0, i64* %entry_unconsumed9, align 8, !dbg !1305
  %21 = load i32, i32* %r, align 4, !dbg !1306
  %cmp = icmp slt i32 %21, 0, !dbg !1308
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !1309

if.then11:                                        ; preds = %if.then7
  %22 = load i32, i32* %r, align 4, !dbg !1310
  store i32 %22, i32* %retval, align 4, !dbg !1311
  br label %return, !dbg !1311

if.end12:                                         ; preds = %if.then7
  br label %if.end22, !dbg !1312

if.else:                                          ; preds = %if.end5
  %23 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1313
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %23, i32 0, i32 7, !dbg !1316
  %24 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !1316
  %cmp13 = icmp eq %struct.cfdata* %24, null, !dbg !1317
  br i1 %cmp13, label %if.then15, label %if.end21, !dbg !1313

if.then15:                                        ; preds = %if.else
  %25 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1318
  %call16 = call i32 @cab_next_cfdata(%struct.archive_read* %25), !dbg !1320
  store i32 %call16, i32* %r, align 4, !dbg !1321
  %26 = load i32, i32* %r, align 4, !dbg !1322
  %cmp17 = icmp slt i32 %26, 0, !dbg !1324
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !1325

if.then19:                                        ; preds = %if.then15
  %27 = load i32, i32* %r, align 4, !dbg !1326
  store i32 %27, i32* %retval, align 4, !dbg !1327
  br label %return, !dbg !1327

if.end20:                                         ; preds = %if.then15
  br label %if.end21, !dbg !1328

if.end21:                                         ; preds = %if.end20, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end12
  %28 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1329
  %end_of_entry_cleanup23 = getelementptr inbounds %struct.cab, %struct.cab* %28, i32 0, i32 14, !dbg !1331
  %29 = load i8, i8* %end_of_entry_cleanup23, align 1, !dbg !1331
  %tobool24 = icmp ne i8 %29, 0, !dbg !1329
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !1332

if.then25:                                        ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !1333
  br label %return, !dbg !1333

if.end26:                                         ; preds = %if.end22
  %30 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1334
  %31 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1335
  %entry_bytes_remaining27 = getelementptr inbounds %struct.cab, %struct.cab* %31, i32 0, i32 1, !dbg !1336
  %32 = load i64, i64* %entry_bytes_remaining27, align 8, !dbg !1336
  %call28 = call i64 @cab_consume_cfdata(%struct.archive_read* %30, i64 %32), !dbg !1337
  store i64 %call28, i64* %bytes_skipped, align 8, !dbg !1338
  %33 = load i64, i64* %bytes_skipped, align 8, !dbg !1339
  %cmp29 = icmp slt i64 %33, 0, !dbg !1341
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !1342

if.then31:                                        ; preds = %if.end26
  store i32 -30, i32* %retval, align 4, !dbg !1343
  br label %return, !dbg !1343

if.end32:                                         ; preds = %if.end26
  %34 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1344
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %34, i32 0, i32 5, !dbg !1346
  %35 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !1346
  %comptype = getelementptr inbounds %struct.cffolder, %struct.cffolder* %35, i32 0, i32 2, !dbg !1347
  %36 = load i16, i16* %comptype, align 2, !dbg !1347
  %conv33 = zext i16 %36 to i32, !dbg !1344
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !1348
  br i1 %cmp34, label %land.lhs.true, label %if.end41, !dbg !1349

land.lhs.true:                                    ; preds = %if.end32
  %37 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1350
  %entry_cfdata36 = getelementptr inbounds %struct.cab, %struct.cab* %37, i32 0, i32 7, !dbg !1351
  %38 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata36, align 8, !dbg !1351
  %cmp37 = icmp ne %struct.cfdata* %38, null, !dbg !1352
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !1353

if.then39:                                        ; preds = %land.lhs.true
  %39 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1355
  %entry_cfdata40 = getelementptr inbounds %struct.cab, %struct.cab* %39, i32 0, i32 7, !dbg !1356
  %40 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata40, align 8, !dbg !1356
  %unconsumed = getelementptr inbounds %struct.cfdata, %struct.cfdata* %40, i32 0, i32 7, !dbg !1357
  store i64 0, i64* %unconsumed, align 8, !dbg !1358
  br label %if.end41, !dbg !1355

if.end41:                                         ; preds = %if.then39, %land.lhs.true, %if.end32
  %41 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1359
  %end_of_entry42 = getelementptr inbounds %struct.cab, %struct.cab* %41, i32 0, i32 13, !dbg !1360
  store i8 1, i8* %end_of_entry42, align 2, !dbg !1361
  %42 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1362
  %end_of_entry_cleanup43 = getelementptr inbounds %struct.cab, %struct.cab* %42, i32 0, i32 14, !dbg !1363
  store i8 1, i8* %end_of_entry_cleanup43, align 1, !dbg !1364
  store i32 0, i32* %retval, align 4, !dbg !1365
  br label %return, !dbg !1365

return:                                           ; preds = %if.end41, %if.then31, %if.then25, %if.then19, %if.then11, %if.then2, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !1366
  ret i32 %43, !dbg !1366
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_cab_cleanup(%struct.archive_read* %a) #0 !dbg !619 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %cab = alloca %struct.cab*, align 8
  %hd = alloca %struct.cfheader*, align 8
  %i = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1367, metadata !638), !dbg !1368
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !1369, metadata !638), !dbg !1370
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1371
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1372
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1372
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1373
  %2 = load i8*, i8** %data, align 8, !dbg !1373
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !1374
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !1370
  call void @llvm.dbg.declare(metadata %struct.cfheader** %hd, metadata !1375, metadata !638), !dbg !1376
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1377
  %cfheader = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 9, !dbg !1378
  store %struct.cfheader* %cfheader, %struct.cfheader** %hd, align 8, !dbg !1376
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1379, metadata !638), !dbg !1380
  %5 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1381
  %folder_array = getelementptr inbounds %struct.cfheader, %struct.cfheader* %5, i32 0, i32 11, !dbg !1383
  %6 = load %struct.cffolder*, %struct.cffolder** %folder_array, align 8, !dbg !1383
  %cmp = icmp ne %struct.cffolder* %6, null, !dbg !1384
  br i1 %cmp, label %if.then, label %if.end, !dbg !1385

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1386
  br label %for.cond, !dbg !1389

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !1390
  %8 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1393
  %folder_count = getelementptr inbounds %struct.cfheader, %struct.cfheader* %8, i32 0, i32 2, !dbg !1394
  %9 = load i16, i16* %folder_count, align 8, !dbg !1394
  %conv = zext i16 %9 to i32, !dbg !1393
  %cmp1 = icmp slt i32 %7, %conv, !dbg !1395
  br i1 %cmp1, label %for.body, label %for.end, !dbg !1396

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !1397
  %idxprom = sext i32 %10 to i64, !dbg !1398
  %11 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1398
  %folder_array3 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %11, i32 0, i32 11, !dbg !1399
  %12 = load %struct.cffolder*, %struct.cffolder** %folder_array3, align 8, !dbg !1399
  %arrayidx = getelementptr inbounds %struct.cffolder, %struct.cffolder* %12, i64 %idxprom, !dbg !1398
  %cfdata = getelementptr inbounds %struct.cffolder, %struct.cffolder* %arrayidx, i32 0, i32 5, !dbg !1400
  %memimage = getelementptr inbounds %struct.cfdata, %struct.cfdata* %cfdata, i32 0, i32 9, !dbg !1401
  %13 = load i8*, i8** %memimage, align 8, !dbg !1401
  call void @free(i8* %13) #8, !dbg !1402
  br label %for.inc, !dbg !1402

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !1403
  %inc = add nsw i32 %14, 1, !dbg !1403
  store i32 %inc, i32* %i, align 4, !dbg !1403
  br label %for.cond, !dbg !1405

for.end:                                          ; preds = %for.cond
  %15 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1406
  %folder_array4 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %15, i32 0, i32 11, !dbg !1407
  %16 = load %struct.cffolder*, %struct.cffolder** %folder_array4, align 8, !dbg !1407
  %17 = bitcast %struct.cffolder* %16 to i8*, !dbg !1406
  call void @free(i8* %17) #8, !dbg !1408
  br label %if.end, !dbg !1409

if.end:                                           ; preds = %for.end, %entry
  %18 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1410
  %file_array = getelementptr inbounds %struct.cfheader, %struct.cfheader* %18, i32 0, i32 12, !dbg !1412
  %19 = load %struct.cffile*, %struct.cffile** %file_array, align 8, !dbg !1412
  %cmp5 = icmp ne %struct.cffile* %19, null, !dbg !1413
  br i1 %cmp5, label %if.then7, label %if.end21, !dbg !1414

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !1415
  br label %for.cond8, !dbg !1418

for.cond8:                                        ; preds = %for.inc17, %if.then7
  %20 = load i32, i32* %i, align 4, !dbg !1419
  %21 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1422
  %cfheader9 = getelementptr inbounds %struct.cab, %struct.cab* %21, i32 0, i32 9, !dbg !1423
  %file_count = getelementptr inbounds %struct.cfheader, %struct.cfheader* %cfheader9, i32 0, i32 3, !dbg !1424
  %22 = load i16, i16* %file_count, align 2, !dbg !1424
  %conv10 = zext i16 %22 to i32, !dbg !1422
  %cmp11 = icmp slt i32 %20, %conv10, !dbg !1425
  br i1 %cmp11, label %for.body13, label %for.end19, !dbg !1426

for.body13:                                       ; preds = %for.cond8
  %23 = load i32, i32* %i, align 4, !dbg !1427
  %idxprom14 = sext i32 %23 to i64, !dbg !1428
  %24 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1428
  %file_array15 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %24, i32 0, i32 12, !dbg !1429
  %25 = load %struct.cffile*, %struct.cffile** %file_array15, align 8, !dbg !1429
  %arrayidx16 = getelementptr inbounds %struct.cffile, %struct.cffile* %25, i64 %idxprom14, !dbg !1428
  %pathname = getelementptr inbounds %struct.cffile, %struct.cffile* %arrayidx16, i32 0, i32 5, !dbg !1430
  call void @archive_string_free(%struct.archive_string* %pathname), !dbg !1431
  br label %for.inc17, !dbg !1431

for.inc17:                                        ; preds = %for.body13
  %26 = load i32, i32* %i, align 4, !dbg !1432
  %inc18 = add nsw i32 %26, 1, !dbg !1432
  store i32 %inc18, i32* %i, align 4, !dbg !1432
  br label %for.cond8, !dbg !1434

for.end19:                                        ; preds = %for.cond8
  %27 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1435
  %file_array20 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %27, i32 0, i32 12, !dbg !1436
  %28 = load %struct.cffile*, %struct.cffile** %file_array20, align 8, !dbg !1436
  %29 = bitcast %struct.cffile* %28 to i8*, !dbg !1435
  call void @free(i8* %29) #8, !dbg !1437
  br label %if.end21, !dbg !1438

if.end21:                                         ; preds = %for.end19, %if.end
  %30 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1439
  %stream_valid = getelementptr inbounds %struct.cab, %struct.cab* %30, i32 0, i32 25, !dbg !1441
  %31 = load i8, i8* %stream_valid, align 8, !dbg !1441
  %tobool = icmp ne i8 %31, 0, !dbg !1439
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !1442

if.then22:                                        ; preds = %if.end21
  %32 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1443
  %stream = getelementptr inbounds %struct.cab, %struct.cab* %32, i32 0, i32 24, !dbg !1444
  %call = call i32 @cm_zlib_inflateEnd(%struct.z_stream_s* %stream), !dbg !1445
  br label %if.end23, !dbg !1445

if.end23:                                         ; preds = %if.then22, %if.end21
  %33 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1446
  %xstrm = getelementptr inbounds %struct.cab, %struct.cab* %33, i32 0, i32 26, !dbg !1447
  call void @lzx_decode_free(%struct.lzx_stream* %xstrm), !dbg !1448
  %34 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1449
  %ws = getelementptr inbounds %struct.cab, %struct.cab* %34, i32 0, i32 10, !dbg !1450
  call void @archive_wstring_free(%struct.archive_wstring* %ws), !dbg !1451
  %35 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1452
  %uncompressed_buffer = getelementptr inbounds %struct.cab, %struct.cab* %35, i32 0, i32 17, !dbg !1453
  %36 = load i8*, i8** %uncompressed_buffer, align 8, !dbg !1453
  call void @free(i8* %36) #8, !dbg !1454
  %37 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1455
  %38 = bitcast %struct.cab* %37 to i8*, !dbg !1455
  call void @free(i8* %38) #8, !dbg !1456
  %39 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1457
  %format24 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %39, i32 0, i32 13, !dbg !1458
  %40 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format24, align 8, !dbg !1458
  %data25 = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %40, i32 0, i32 0, !dbg !1459
  store i8* null, i8** %data25, align 8, !dbg !1460
  ret i32 0, !dbg !1461
}

; Function Attrs: nounwind
declare void @free(i8*) #3

declare i8* @__archive_read_ahead(%struct.archive_read*, i64, i64*) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @find_cab_magic(i8* %p) #0 !dbg !517 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1462, metadata !638), !dbg !1463
  %0 = load i8*, i8** %p.addr, align 8, !dbg !1464
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 4, !dbg !1464
  %1 = load i8, i8* %arrayidx, align 1, !dbg !1464
  %conv = sext i8 %1 to i32, !dbg !1464
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 70, label %sw.bb2
    i32 67, label %sw.bb3
    i32 83, label %sw.bb4
    i32 77, label %sw.bb5
  ], !dbg !1465

sw.bb:                                            ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !1466
  %call = call i32 @memcmp(i8* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i64 8) #9, !dbg !1469
  %cmp = icmp eq i32 %call, 0, !dbg !1470
  br i1 %cmp, label %if.then, label %if.end, !dbg !1471

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !1472
  br label %return, !dbg !1472

if.end:                                           ; preds = %sw.bb
  store i32 5, i32* %retval, align 4, !dbg !1473
  br label %return, !dbg !1473

sw.bb2:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1474
  br label %return, !dbg !1474

sw.bb3:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !1475
  br label %return, !dbg !1475

sw.bb4:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !1476
  br label %return, !dbg !1476

sw.bb5:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !1477
  br label %return, !dbg !1477

sw.default:                                       ; preds = %entry
  store i32 5, i32* %retval, align 4, !dbg !1478
  br label %return, !dbg !1478

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !1479
  ret i32 %3, !dbg !1479
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

declare %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @cab_read_header(%struct.archive_read* %a) #0 !dbg !522 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %p = alloca i8*, align 8
  %cab = alloca %struct.cab*, align 8
  %hd = alloca %struct.cfheader*, align 8
  %bytes = alloca i64, align 8
  %used = alloca i64, align 8
  %len = alloca i64, align 8
  %skip = alloca i64, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %cur_folder = alloca i32, align 4
  %prev_folder = alloca i32, align 4
  %offset32 = alloca i32, align 4
  %cfheader82 = alloca i16, align 2
  %folder = alloca %struct.cffolder*, align 8
  %file = alloca %struct.cffile*, align 8
  %avail = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1480, metadata !638), !dbg !1481
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1482, metadata !638), !dbg !1483
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !1484, metadata !638), !dbg !1485
  call void @llvm.dbg.declare(metadata %struct.cfheader** %hd, metadata !1486, metadata !638), !dbg !1487
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !1488, metadata !638), !dbg !1489
  call void @llvm.dbg.declare(metadata i64* %used, metadata !1490, metadata !638), !dbg !1491
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1492, metadata !638), !dbg !1493
  call void @llvm.dbg.declare(metadata i64* %skip, metadata !1494, metadata !638), !dbg !1495
  call void @llvm.dbg.declare(metadata i32* %err, metadata !1496, metadata !638), !dbg !1497
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1498, metadata !638), !dbg !1499
  call void @llvm.dbg.declare(metadata i32* %cur_folder, metadata !1500, metadata !638), !dbg !1501
  call void @llvm.dbg.declare(metadata i32* %prev_folder, metadata !1502, metadata !638), !dbg !1503
  call void @llvm.dbg.declare(metadata i32* %offset32, metadata !1504, metadata !638), !dbg !1505
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1506
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 0, !dbg !1507
  %archive_format = getelementptr inbounds %struct.archive, %struct.archive* %archive, i32 0, i32 3, !dbg !1508
  store i32 786432, i32* %archive_format, align 8, !dbg !1509
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1510
  %archive1 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 0, !dbg !1512
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive1, i32 0, i32 4, !dbg !1513
  %2 = load i8*, i8** %archive_format_name, align 8, !dbg !1513
  %cmp = icmp eq i8* %2, null, !dbg !1514
  br i1 %cmp, label %if.then, label %if.end, !dbg !1515

if.then:                                          ; preds = %entry
  %3 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1516
  %archive2 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %3, i32 0, i32 0, !dbg !1517
  %archive_format_name3 = getelementptr inbounds %struct.archive, %struct.archive* %archive2, i32 0, i32 4, !dbg !1518
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8** %archive_format_name3, align 8, !dbg !1519
  br label %if.end, !dbg !1516

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1520
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %4, i64 42, i64* null), !dbg !1522
  store i8* %call, i8** %p, align 8, !dbg !1523
  %cmp4 = icmp eq i8* %call, null, !dbg !1524
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !1525

if.then5:                                         ; preds = %if.end
  %5 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1526
  %call6 = call i32 @truncated_error(%struct.archive_read* %5), !dbg !1527
  store i32 %call6, i32* %retval, align 4, !dbg !1528
  br label %return, !dbg !1528

if.end7:                                          ; preds = %if.end
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1529
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 13, !dbg !1530
  %7 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1530
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %7, i32 0, i32 0, !dbg !1531
  %8 = load i8*, i8** %data, align 8, !dbg !1531
  %9 = bitcast i8* %8 to %struct.cab*, !dbg !1532
  store %struct.cab* %9, %struct.cab** %cab, align 8, !dbg !1533
  %10 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1534
  %found_header = getelementptr inbounds %struct.cab, %struct.cab* %10, i32 0, i32 11, !dbg !1536
  %11 = load i8, i8* %found_header, align 8, !dbg !1536
  %conv = sext i8 %11 to i32, !dbg !1534
  %cmp8 = icmp eq i32 %conv, 0, !dbg !1537
  br i1 %cmp8, label %land.lhs.true, label %if.end30, !dbg !1538

land.lhs.true:                                    ; preds = %if.end7
  %12 = load i8*, i8** %p, align 8, !dbg !1539
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0, !dbg !1539
  %13 = load i8, i8* %arrayidx, align 1, !dbg !1539
  %conv10 = zext i8 %13 to i32, !dbg !1539
  %cmp11 = icmp eq i32 %conv10, 77, !dbg !1540
  br i1 %cmp11, label %land.lhs.true13, label %if.end30, !dbg !1541

land.lhs.true13:                                  ; preds = %land.lhs.true
  %14 = load i8*, i8** %p, align 8, !dbg !1542
  %arrayidx14 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !1542
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !1542
  %conv15 = zext i8 %15 to i32, !dbg !1542
  %cmp16 = icmp eq i32 %conv15, 90, !dbg !1544
  br i1 %cmp16, label %if.then18, label %if.end30, !dbg !1545

if.then18:                                        ; preds = %land.lhs.true13
  %16 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1547
  %call19 = call i32 @cab_skip_sfx(%struct.archive_read* %16), !dbg !1549
  store i32 %call19, i32* %err, align 4, !dbg !1550
  %17 = load i32, i32* %err, align 4, !dbg !1551
  %cmp20 = icmp slt i32 %17, -20, !dbg !1553
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !1554

if.then22:                                        ; preds = %if.then18
  %18 = load i32, i32* %err, align 4, !dbg !1555
  store i32 %18, i32* %retval, align 4, !dbg !1556
  br label %return, !dbg !1556

if.end23:                                         ; preds = %if.then18
  %19 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1557
  %call24 = call i8* @__archive_read_ahead(%struct.archive_read* %19, i64 42, i64* null), !dbg !1559
  store i8* %call24, i8** %p, align 8, !dbg !1560
  %cmp25 = icmp eq i8* %call24, null, !dbg !1561
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !1562

if.then27:                                        ; preds = %if.end23
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1563
  %call28 = call i32 @truncated_error(%struct.archive_read* %20), !dbg !1564
  store i32 %call28, i32* %retval, align 4, !dbg !1565
  br label %return, !dbg !1565

if.end29:                                         ; preds = %if.end23
  br label %if.end30, !dbg !1566

if.end30:                                         ; preds = %if.end29, %land.lhs.true13, %land.lhs.true, %if.end7
  %21 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1567
  %cab_offset = getelementptr inbounds %struct.cab, %struct.cab* %21, i32 0, i32 8, !dbg !1568
  store i64 0, i64* %cab_offset, align 8, !dbg !1569
  %22 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1570
  %cfheader = getelementptr inbounds %struct.cab, %struct.cab* %22, i32 0, i32 9, !dbg !1571
  store %struct.cfheader* %cfheader, %struct.cfheader** %hd, align 8, !dbg !1572
  %23 = load i8*, i8** %p, align 8, !dbg !1573
  %arrayidx31 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !1573
  %24 = load i8, i8* %arrayidx31, align 1, !dbg !1573
  %conv32 = zext i8 %24 to i32, !dbg !1573
  %cmp33 = icmp ne i32 %conv32, 77, !dbg !1575
  br i1 %cmp33, label %if.then49, label %lor.lhs.false, !dbg !1576

lor.lhs.false:                                    ; preds = %if.end30
  %25 = load i8*, i8** %p, align 8, !dbg !1577
  %arrayidx35 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !1577
  %26 = load i8, i8* %arrayidx35, align 1, !dbg !1577
  %conv36 = zext i8 %26 to i32, !dbg !1577
  %cmp37 = icmp ne i32 %conv36, 83, !dbg !1579
  br i1 %cmp37, label %if.then49, label %lor.lhs.false39, !dbg !1580

lor.lhs.false39:                                  ; preds = %lor.lhs.false
  %27 = load i8*, i8** %p, align 8, !dbg !1581
  %arrayidx40 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !1581
  %28 = load i8, i8* %arrayidx40, align 1, !dbg !1581
  %conv41 = zext i8 %28 to i32, !dbg !1581
  %cmp42 = icmp ne i32 %conv41, 67, !dbg !1582
  br i1 %cmp42, label %if.then49, label %lor.lhs.false44, !dbg !1583

lor.lhs.false44:                                  ; preds = %lor.lhs.false39
  %29 = load i8*, i8** %p, align 8, !dbg !1584
  %arrayidx45 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !1584
  %30 = load i8, i8* %arrayidx45, align 1, !dbg !1584
  %conv46 = zext i8 %30 to i32, !dbg !1584
  %cmp47 = icmp ne i32 %conv46, 70, !dbg !1585
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !1586

if.then49:                                        ; preds = %lor.lhs.false44, %lor.lhs.false39, %lor.lhs.false, %if.end30
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1588
  %archive50 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %31, i32 0, i32 0, !dbg !1590
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive50, i32 84, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0)), !dbg !1591
  store i32 -30, i32* %retval, align 4, !dbg !1592
  br label %return, !dbg !1592

if.end51:                                         ; preds = %lor.lhs.false44
  %32 = load i8*, i8** %p, align 8, !dbg !1593
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 8, !dbg !1594
  %call52 = call i32 @archive_le32dec(i8* %add.ptr), !dbg !1595
  %33 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1596
  %total_bytes = getelementptr inbounds %struct.cfheader, %struct.cfheader* %33, i32 0, i32 0, !dbg !1597
  store i32 %call52, i32* %total_bytes, align 8, !dbg !1598
  %34 = load i8*, i8** %p, align 8, !dbg !1599
  %add.ptr53 = getelementptr inbounds i8, i8* %34, i64 16, !dbg !1600
  %call54 = call i32 @archive_le32dec(i8* %add.ptr53), !dbg !1601
  %35 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1602
  %files_offset = getelementptr inbounds %struct.cfheader, %struct.cfheader* %35, i32 0, i32 1, !dbg !1603
  store i32 %call54, i32* %files_offset, align 4, !dbg !1604
  %36 = load i8*, i8** %p, align 8, !dbg !1605
  %arrayidx55 = getelementptr inbounds i8, i8* %36, i64 24, !dbg !1605
  %37 = load i8, i8* %arrayidx55, align 1, !dbg !1605
  %38 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1606
  %minor = getelementptr inbounds %struct.cfheader, %struct.cfheader* %38, i32 0, i32 8, !dbg !1607
  store i8 %37, i8* %minor, align 1, !dbg !1608
  %39 = load i8*, i8** %p, align 8, !dbg !1609
  %arrayidx56 = getelementptr inbounds i8, i8* %39, i64 25, !dbg !1609
  %40 = load i8, i8* %arrayidx56, align 1, !dbg !1609
  %41 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1610
  %major = getelementptr inbounds %struct.cfheader, %struct.cfheader* %41, i32 0, i32 7, !dbg !1611
  store i8 %40, i8* %major, align 2, !dbg !1612
  %42 = load i8*, i8** %p, align 8, !dbg !1613
  %add.ptr57 = getelementptr inbounds i8, i8* %42, i64 26, !dbg !1614
  %call58 = call zeroext i16 @archive_le16dec(i8* %add.ptr57), !dbg !1615
  %43 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1616
  %folder_count = getelementptr inbounds %struct.cfheader, %struct.cfheader* %43, i32 0, i32 2, !dbg !1617
  store i16 %call58, i16* %folder_count, align 8, !dbg !1618
  %44 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1619
  %folder_count59 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %44, i32 0, i32 2, !dbg !1621
  %45 = load i16, i16* %folder_count59, align 8, !dbg !1621
  %conv60 = zext i16 %45 to i32, !dbg !1619
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !1622
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !1623

if.then63:                                        ; preds = %if.end51
  br label %invalid, !dbg !1624

if.end64:                                         ; preds = %if.end51
  %46 = load i8*, i8** %p, align 8, !dbg !1625
  %add.ptr65 = getelementptr inbounds i8, i8* %46, i64 28, !dbg !1626
  %call66 = call zeroext i16 @archive_le16dec(i8* %add.ptr65), !dbg !1627
  %47 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1628
  %file_count = getelementptr inbounds %struct.cfheader, %struct.cfheader* %47, i32 0, i32 3, !dbg !1629
  store i16 %call66, i16* %file_count, align 2, !dbg !1630
  %48 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1631
  %file_count67 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %48, i32 0, i32 3, !dbg !1633
  %49 = load i16, i16* %file_count67, align 2, !dbg !1633
  %conv68 = zext i16 %49 to i32, !dbg !1631
  %cmp69 = icmp eq i32 %conv68, 0, !dbg !1634
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !1635

if.then71:                                        ; preds = %if.end64
  br label %invalid, !dbg !1636

if.end72:                                         ; preds = %if.end64
  %50 = load i8*, i8** %p, align 8, !dbg !1637
  %add.ptr73 = getelementptr inbounds i8, i8* %50, i64 30, !dbg !1638
  %call74 = call zeroext i16 @archive_le16dec(i8* %add.ptr73), !dbg !1639
  %51 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1640
  %flags = getelementptr inbounds %struct.cfheader, %struct.cfheader* %51, i32 0, i32 4, !dbg !1641
  store i16 %call74, i16* %flags, align 4, !dbg !1642
  %52 = load i8*, i8** %p, align 8, !dbg !1643
  %add.ptr75 = getelementptr inbounds i8, i8* %52, i64 32, !dbg !1644
  %call76 = call zeroext i16 @archive_le16dec(i8* %add.ptr75), !dbg !1645
  %53 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1646
  %setid = getelementptr inbounds %struct.cfheader, %struct.cfheader* %53, i32 0, i32 5, !dbg !1647
  store i16 %call76, i16* %setid, align 2, !dbg !1648
  %54 = load i8*, i8** %p, align 8, !dbg !1649
  %add.ptr77 = getelementptr inbounds i8, i8* %54, i64 34, !dbg !1650
  %call78 = call zeroext i16 @archive_le16dec(i8* %add.ptr77), !dbg !1651
  %55 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1652
  %cabinet = getelementptr inbounds %struct.cfheader, %struct.cfheader* %55, i32 0, i32 6, !dbg !1653
  store i16 %call78, i16* %cabinet, align 8, !dbg !1654
  store i64 36, i64* %used, align 8, !dbg !1655
  %56 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1656
  %flags79 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %56, i32 0, i32 4, !dbg !1658
  %57 = load i16, i16* %flags79, align 4, !dbg !1658
  %conv80 = zext i16 %57 to i32, !dbg !1656
  %and = and i32 %conv80, 4, !dbg !1659
  %tobool = icmp ne i32 %and, 0, !dbg !1659
  br i1 %tobool, label %if.then81, label %if.else, !dbg !1660

if.then81:                                        ; preds = %if.end72
  call void @llvm.dbg.declare(metadata i16* %cfheader82, metadata !1661, metadata !638), !dbg !1663
  %58 = load i8*, i8** %p, align 8, !dbg !1664
  %add.ptr83 = getelementptr inbounds i8, i8* %58, i64 36, !dbg !1665
  %call84 = call zeroext i16 @archive_le16dec(i8* %add.ptr83), !dbg !1666
  store i16 %call84, i16* %cfheader82, align 2, !dbg !1667
  %59 = load i16, i16* %cfheader82, align 2, !dbg !1668
  %conv85 = zext i16 %59 to i32, !dbg !1668
  %cmp86 = icmp ugt i32 %conv85, 60000, !dbg !1670
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !1671

if.then88:                                        ; preds = %if.then81
  br label %invalid, !dbg !1672

if.end89:                                         ; preds = %if.then81
  %60 = load i8*, i8** %p, align 8, !dbg !1673
  %arrayidx90 = getelementptr inbounds i8, i8* %60, i64 38, !dbg !1673
  %61 = load i8, i8* %arrayidx90, align 1, !dbg !1673
  %62 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1674
  %cffolder = getelementptr inbounds %struct.cfheader, %struct.cfheader* %62, i32 0, i32 9, !dbg !1675
  store i8 %61, i8* %cffolder, align 4, !dbg !1676
  %63 = load i8*, i8** %p, align 8, !dbg !1677
  %arrayidx91 = getelementptr inbounds i8, i8* %63, i64 39, !dbg !1677
  %64 = load i8, i8* %arrayidx91, align 1, !dbg !1677
  %65 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1678
  %cfdata = getelementptr inbounds %struct.cfheader, %struct.cfheader* %65, i32 0, i32 10, !dbg !1679
  store i8 %64, i8* %cfdata, align 1, !dbg !1680
  %66 = load i64, i64* %used, align 8, !dbg !1681
  %add = add i64 %66, 4, !dbg !1681
  store i64 %add, i64* %used, align 8, !dbg !1681
  %67 = load i16, i16* %cfheader82, align 2, !dbg !1682
  %conv92 = zext i16 %67 to i64, !dbg !1682
  %68 = load i64, i64* %used, align 8, !dbg !1683
  %add93 = add i64 %68, %conv92, !dbg !1683
  store i64 %add93, i64* %used, align 8, !dbg !1683
  br label %if.end95, !dbg !1684

if.else:                                          ; preds = %if.end72
  %69 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1685
  %cffolder94 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %69, i32 0, i32 9, !dbg !1686
  store i8 0, i8* %cffolder94, align 4, !dbg !1687
  br label %if.end95

if.end95:                                         ; preds = %if.else, %if.end89
  %70 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1688
  %flags96 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %70, i32 0, i32 4, !dbg !1690
  %71 = load i16, i16* %flags96, align 4, !dbg !1690
  %conv97 = zext i16 %71 to i32, !dbg !1688
  %and98 = and i32 %conv97, 1, !dbg !1691
  %tobool99 = icmp ne i32 %and98, 0, !dbg !1691
  br i1 %tobool99, label %if.then100, label %if.end131, !dbg !1692

if.then100:                                       ; preds = %if.end95
  %72 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1693
  %73 = load i64, i64* %used, align 8, !dbg !1696
  %add101 = add i64 %73, 256, !dbg !1697
  %call102 = call i8* @__archive_read_ahead(%struct.archive_read* %72, i64 %add101, i64* null), !dbg !1698
  store i8* %call102, i8** %p, align 8, !dbg !1699
  %cmp103 = icmp eq i8* %call102, null, !dbg !1700
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !1701

if.then105:                                       ; preds = %if.then100
  %74 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1702
  %call106 = call i32 @truncated_error(%struct.archive_read* %74), !dbg !1703
  store i32 %call106, i32* %retval, align 4, !dbg !1704
  br label %return, !dbg !1704

if.end107:                                        ; preds = %if.then100
  %75 = load i8*, i8** %p, align 8, !dbg !1705
  %76 = load i64, i64* %used, align 8, !dbg !1707
  %add.ptr108 = getelementptr inbounds i8, i8* %75, i64 %76, !dbg !1708
  %call109 = call i64 @cab_strnlen(i8* %add.ptr108, i64 255), !dbg !1709
  store i64 %call109, i64* %len, align 8, !dbg !1710
  %cmp110 = icmp sle i64 %call109, 0, !dbg !1711
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !1712

if.then112:                                       ; preds = %if.end107
  br label %invalid, !dbg !1713

if.end113:                                        ; preds = %if.end107
  %77 = load i64, i64* %len, align 8, !dbg !1714
  %add114 = add nsw i64 %77, 1, !dbg !1715
  %78 = load i64, i64* %used, align 8, !dbg !1716
  %add115 = add i64 %78, %add114, !dbg !1716
  store i64 %add115, i64* %used, align 8, !dbg !1716
  %79 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1717
  %80 = load i64, i64* %used, align 8, !dbg !1719
  %add116 = add i64 %80, 256, !dbg !1720
  %call117 = call i8* @__archive_read_ahead(%struct.archive_read* %79, i64 %add116, i64* null), !dbg !1721
  store i8* %call117, i8** %p, align 8, !dbg !1722
  %cmp118 = icmp eq i8* %call117, null, !dbg !1723
  br i1 %cmp118, label %if.then120, label %if.end122, !dbg !1724

if.then120:                                       ; preds = %if.end113
  %81 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1725
  %call121 = call i32 @truncated_error(%struct.archive_read* %81), !dbg !1726
  store i32 %call121, i32* %retval, align 4, !dbg !1727
  br label %return, !dbg !1727

if.end122:                                        ; preds = %if.end113
  %82 = load i8*, i8** %p, align 8, !dbg !1728
  %83 = load i64, i64* %used, align 8, !dbg !1730
  %add.ptr123 = getelementptr inbounds i8, i8* %82, i64 %83, !dbg !1731
  %call124 = call i64 @cab_strnlen(i8* %add.ptr123, i64 255), !dbg !1732
  store i64 %call124, i64* %len, align 8, !dbg !1733
  %cmp125 = icmp sle i64 %call124, 0, !dbg !1734
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !1735

if.then127:                                       ; preds = %if.end122
  br label %invalid, !dbg !1736

if.end128:                                        ; preds = %if.end122
  %84 = load i64, i64* %len, align 8, !dbg !1737
  %add129 = add nsw i64 %84, 1, !dbg !1738
  %85 = load i64, i64* %used, align 8, !dbg !1739
  %add130 = add i64 %85, %add129, !dbg !1739
  store i64 %add130, i64* %used, align 8, !dbg !1739
  br label %if.end131, !dbg !1740

if.end131:                                        ; preds = %if.end128, %if.end95
  %86 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1741
  %flags132 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %86, i32 0, i32 4, !dbg !1743
  %87 = load i16, i16* %flags132, align 4, !dbg !1743
  %conv133 = zext i16 %87 to i32, !dbg !1741
  %and134 = and i32 %conv133, 2, !dbg !1744
  %tobool135 = icmp ne i32 %and134, 0, !dbg !1744
  br i1 %tobool135, label %if.then136, label %if.end167, !dbg !1745

if.then136:                                       ; preds = %if.end131
  %88 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1746
  %89 = load i64, i64* %used, align 8, !dbg !1749
  %add137 = add i64 %89, 256, !dbg !1750
  %call138 = call i8* @__archive_read_ahead(%struct.archive_read* %88, i64 %add137, i64* null), !dbg !1751
  store i8* %call138, i8** %p, align 8, !dbg !1752
  %cmp139 = icmp eq i8* %call138, null, !dbg !1753
  br i1 %cmp139, label %if.then141, label %if.end143, !dbg !1754

if.then141:                                       ; preds = %if.then136
  %90 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1755
  %call142 = call i32 @truncated_error(%struct.archive_read* %90), !dbg !1756
  store i32 %call142, i32* %retval, align 4, !dbg !1757
  br label %return, !dbg !1757

if.end143:                                        ; preds = %if.then136
  %91 = load i8*, i8** %p, align 8, !dbg !1758
  %92 = load i64, i64* %used, align 8, !dbg !1760
  %add.ptr144 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !1761
  %call145 = call i64 @cab_strnlen(i8* %add.ptr144, i64 255), !dbg !1762
  store i64 %call145, i64* %len, align 8, !dbg !1763
  %cmp146 = icmp sle i64 %call145, 0, !dbg !1764
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !1765

if.then148:                                       ; preds = %if.end143
  br label %invalid, !dbg !1766

if.end149:                                        ; preds = %if.end143
  %93 = load i64, i64* %len, align 8, !dbg !1767
  %add150 = add nsw i64 %93, 1, !dbg !1768
  %94 = load i64, i64* %used, align 8, !dbg !1769
  %add151 = add i64 %94, %add150, !dbg !1769
  store i64 %add151, i64* %used, align 8, !dbg !1769
  %95 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1770
  %96 = load i64, i64* %used, align 8, !dbg !1772
  %add152 = add i64 %96, 256, !dbg !1773
  %call153 = call i8* @__archive_read_ahead(%struct.archive_read* %95, i64 %add152, i64* null), !dbg !1774
  store i8* %call153, i8** %p, align 8, !dbg !1775
  %cmp154 = icmp eq i8* %call153, null, !dbg !1776
  br i1 %cmp154, label %if.then156, label %if.end158, !dbg !1777

if.then156:                                       ; preds = %if.end149
  %97 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1778
  %call157 = call i32 @truncated_error(%struct.archive_read* %97), !dbg !1779
  store i32 %call157, i32* %retval, align 4, !dbg !1780
  br label %return, !dbg !1780

if.end158:                                        ; preds = %if.end149
  %98 = load i8*, i8** %p, align 8, !dbg !1781
  %99 = load i64, i64* %used, align 8, !dbg !1783
  %add.ptr159 = getelementptr inbounds i8, i8* %98, i64 %99, !dbg !1784
  %call160 = call i64 @cab_strnlen(i8* %add.ptr159, i64 255), !dbg !1785
  store i64 %call160, i64* %len, align 8, !dbg !1786
  %cmp161 = icmp sle i64 %call160, 0, !dbg !1787
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !1788

if.then163:                                       ; preds = %if.end158
  br label %invalid, !dbg !1789

if.end164:                                        ; preds = %if.end158
  %100 = load i64, i64* %len, align 8, !dbg !1790
  %add165 = add nsw i64 %100, 1, !dbg !1791
  %101 = load i64, i64* %used, align 8, !dbg !1792
  %add166 = add i64 %101, %add165, !dbg !1792
  store i64 %add166, i64* %used, align 8, !dbg !1792
  br label %if.end167, !dbg !1793

if.end167:                                        ; preds = %if.end164, %if.end131
  %102 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1794
  %103 = load i64, i64* %used, align 8, !dbg !1795
  %call168 = call i64 @__archive_read_consume(%struct.archive_read* %102, i64 %103), !dbg !1796
  %104 = load i64, i64* %used, align 8, !dbg !1797
  %105 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1798
  %cab_offset169 = getelementptr inbounds %struct.cab, %struct.cab* %105, i32 0, i32 8, !dbg !1799
  %106 = load i64, i64* %cab_offset169, align 8, !dbg !1800
  %add170 = add i64 %106, %104, !dbg !1800
  store i64 %add170, i64* %cab_offset169, align 8, !dbg !1800
  store i64 0, i64* %used, align 8, !dbg !1801
  %107 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1802
  %folder_count171 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %107, i32 0, i32 2, !dbg !1803
  %108 = load i16, i16* %folder_count171, align 8, !dbg !1803
  %conv172 = zext i16 %108 to i64, !dbg !1802
  %call173 = call noalias i8* @calloc(i64 %conv172, i64 96) #8, !dbg !1804
  %109 = bitcast i8* %call173 to %struct.cffolder*, !dbg !1805
  %110 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1806
  %folder_array = getelementptr inbounds %struct.cfheader, %struct.cfheader* %110, i32 0, i32 11, !dbg !1807
  store %struct.cffolder* %109, %struct.cffolder** %folder_array, align 8, !dbg !1808
  %111 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1809
  %folder_array174 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %111, i32 0, i32 11, !dbg !1811
  %112 = load %struct.cffolder*, %struct.cffolder** %folder_array174, align 8, !dbg !1811
  %cmp175 = icmp eq %struct.cffolder* %112, null, !dbg !1812
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !1813

if.then177:                                       ; preds = %if.end167
  br label %nomem, !dbg !1814

if.end178:                                        ; preds = %if.end167
  store i64 8, i64* %bytes, align 8, !dbg !1815
  %113 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1816
  %flags179 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %113, i32 0, i32 4, !dbg !1818
  %114 = load i16, i16* %flags179, align 4, !dbg !1818
  %conv180 = zext i16 %114 to i32, !dbg !1816
  %and181 = and i32 %conv180, 4, !dbg !1819
  %tobool182 = icmp ne i32 %and181, 0, !dbg !1819
  br i1 %tobool182, label %if.then183, label %if.end187, !dbg !1820

if.then183:                                       ; preds = %if.end178
  %115 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1821
  %cffolder184 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %115, i32 0, i32 9, !dbg !1822
  %116 = load i8, i8* %cffolder184, align 4, !dbg !1822
  %conv185 = zext i8 %116 to i64, !dbg !1821
  %117 = load i64, i64* %bytes, align 8, !dbg !1823
  %add186 = add i64 %117, %conv185, !dbg !1823
  store i64 %add186, i64* %bytes, align 8, !dbg !1823
  br label %if.end187, !dbg !1824

if.end187:                                        ; preds = %if.then183, %if.end178
  %118 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1825
  %folder_count188 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %118, i32 0, i32 2, !dbg !1826
  %119 = load i16, i16* %folder_count188, align 8, !dbg !1826
  %conv189 = zext i16 %119 to i64, !dbg !1825
  %120 = load i64, i64* %bytes, align 8, !dbg !1827
  %mul = mul i64 %120, %conv189, !dbg !1827
  store i64 %mul, i64* %bytes, align 8, !dbg !1827
  %121 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1828
  %122 = load i64, i64* %bytes, align 8, !dbg !1830
  %call190 = call i8* @__archive_read_ahead(%struct.archive_read* %121, i64 %122, i64* null), !dbg !1831
  store i8* %call190, i8** %p, align 8, !dbg !1832
  %cmp191 = icmp eq i8* %call190, null, !dbg !1833
  br i1 %cmp191, label %if.then193, label %if.end195, !dbg !1834

if.then193:                                       ; preds = %if.end187
  %123 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1835
  %call194 = call i32 @truncated_error(%struct.archive_read* %123), !dbg !1836
  store i32 %call194, i32* %retval, align 4, !dbg !1837
  br label %return, !dbg !1837

if.end195:                                        ; preds = %if.end187
  store i32 0, i32* %offset32, align 4, !dbg !1838
  store i32 0, i32* %i, align 4, !dbg !1839
  br label %for.cond, !dbg !1841

for.cond:                                         ; preds = %for.inc, %if.end195
  %124 = load i32, i32* %i, align 4, !dbg !1842
  %125 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1845
  %folder_count196 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %125, i32 0, i32 2, !dbg !1846
  %126 = load i16, i16* %folder_count196, align 8, !dbg !1846
  %conv197 = zext i16 %126 to i32, !dbg !1845
  %cmp198 = icmp slt i32 %124, %conv197, !dbg !1847
  br i1 %cmp198, label %for.body, label %for.end, !dbg !1848

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.cffolder** %folder, metadata !1849, metadata !638), !dbg !1851
  %127 = load i32, i32* %i, align 4, !dbg !1852
  %idxprom = sext i32 %127 to i64, !dbg !1853
  %128 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1853
  %folder_array200 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %128, i32 0, i32 11, !dbg !1854
  %129 = load %struct.cffolder*, %struct.cffolder** %folder_array200, align 8, !dbg !1854
  %arrayidx201 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %129, i64 %idxprom, !dbg !1853
  store %struct.cffolder* %arrayidx201, %struct.cffolder** %folder, align 8, !dbg !1851
  %130 = load i8*, i8** %p, align 8, !dbg !1855
  %add.ptr202 = getelementptr inbounds i8, i8* %130, i64 0, !dbg !1856
  %call203 = call i32 @archive_le32dec(i8* %add.ptr202), !dbg !1857
  %131 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1858
  %cfdata_offset_in_cab = getelementptr inbounds %struct.cffolder, %struct.cffolder* %131, i32 0, i32 0, !dbg !1859
  store i32 %call203, i32* %cfdata_offset_in_cab, align 8, !dbg !1860
  %132 = load i8*, i8** %p, align 8, !dbg !1861
  %add.ptr204 = getelementptr inbounds i8, i8* %132, i64 4, !dbg !1862
  %call205 = call zeroext i16 @archive_le16dec(i8* %add.ptr204), !dbg !1863
  %133 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1864
  %cfdata_count = getelementptr inbounds %struct.cffolder, %struct.cffolder* %133, i32 0, i32 1, !dbg !1865
  store i16 %call205, i16* %cfdata_count, align 4, !dbg !1866
  %134 = load i8*, i8** %p, align 8, !dbg !1867
  %add.ptr206 = getelementptr inbounds i8, i8* %134, i64 6, !dbg !1868
  %call207 = call zeroext i16 @archive_le16dec(i8* %add.ptr206), !dbg !1869
  %conv208 = zext i16 %call207 to i32, !dbg !1869
  %and209 = and i32 %conv208, 15, !dbg !1870
  %conv210 = trunc i32 %and209 to i16, !dbg !1869
  %135 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1871
  %comptype = getelementptr inbounds %struct.cffolder, %struct.cffolder* %135, i32 0, i32 2, !dbg !1872
  store i16 %conv210, i16* %comptype, align 2, !dbg !1873
  %136 = load i8*, i8** %p, align 8, !dbg !1874
  %add.ptr211 = getelementptr inbounds i8, i8* %136, i64 6, !dbg !1875
  %call212 = call zeroext i16 @archive_le16dec(i8* %add.ptr211), !dbg !1876
  %conv213 = zext i16 %call212 to i32, !dbg !1876
  %shr = ashr i32 %conv213, 8, !dbg !1877
  %conv214 = trunc i32 %shr to i16, !dbg !1876
  %137 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1878
  %compdata = getelementptr inbounds %struct.cffolder, %struct.cffolder* %137, i32 0, i32 3, !dbg !1879
  store i16 %conv214, i16* %compdata, align 8, !dbg !1880
  %138 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1881
  %comptype215 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %138, i32 0, i32 2, !dbg !1883
  %139 = load i16, i16* %comptype215, align 2, !dbg !1883
  %conv216 = zext i16 %139 to i64, !dbg !1881
  %cmp217 = icmp ult i64 %conv216, 4, !dbg !1884
  br i1 %cmp217, label %if.then219, label %if.else223, !dbg !1885

if.then219:                                       ; preds = %for.body
  %140 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1886
  %comptype220 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %140, i32 0, i32 2, !dbg !1887
  %141 = load i16, i16* %comptype220, align 2, !dbg !1887
  %idxprom221 = zext i16 %141 to i64, !dbg !1888
  %arrayidx222 = getelementptr inbounds [4 x i8*], [4 x i8*]* @compression_name, i64 0, i64 %idxprom221, !dbg !1888
  %142 = load i8*, i8** %arrayidx222, align 8, !dbg !1888
  %143 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1889
  %compname = getelementptr inbounds %struct.cffolder, %struct.cffolder* %143, i32 0, i32 4, !dbg !1890
  store i8* %142, i8** %compname, align 8, !dbg !1891
  br label %if.end225, !dbg !1889

if.else223:                                       ; preds = %for.body
  %144 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1892
  %compname224 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %144, i32 0, i32 4, !dbg !1893
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8** %compname224, align 8, !dbg !1894
  br label %if.end225

if.end225:                                        ; preds = %if.else223, %if.then219
  %145 = load i8*, i8** %p, align 8, !dbg !1895
  %add.ptr226 = getelementptr inbounds i8, i8* %145, i64 8, !dbg !1895
  store i8* %add.ptr226, i8** %p, align 8, !dbg !1895
  %146 = load i64, i64* %used, align 8, !dbg !1896
  %add227 = add i64 %146, 8, !dbg !1896
  store i64 %add227, i64* %used, align 8, !dbg !1896
  %147 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1897
  %flags228 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %147, i32 0, i32 4, !dbg !1899
  %148 = load i16, i16* %flags228, align 4, !dbg !1899
  %conv229 = zext i16 %148 to i32, !dbg !1897
  %and230 = and i32 %conv229, 4, !dbg !1900
  %tobool231 = icmp ne i32 %and230, 0, !dbg !1900
  br i1 %tobool231, label %if.then232, label %if.end239, !dbg !1901

if.then232:                                       ; preds = %if.end225
  %149 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1902
  %cffolder233 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %149, i32 0, i32 9, !dbg !1904
  %150 = load i8, i8* %cffolder233, align 4, !dbg !1904
  %conv234 = zext i8 %150 to i32, !dbg !1902
  %151 = load i8*, i8** %p, align 8, !dbg !1905
  %idx.ext = sext i32 %conv234 to i64, !dbg !1905
  %add.ptr235 = getelementptr inbounds i8, i8* %151, i64 %idx.ext, !dbg !1905
  store i8* %add.ptr235, i8** %p, align 8, !dbg !1905
  %152 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1906
  %cffolder236 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %152, i32 0, i32 9, !dbg !1907
  %153 = load i8, i8* %cffolder236, align 4, !dbg !1907
  %conv237 = zext i8 %153 to i64, !dbg !1906
  %154 = load i64, i64* %used, align 8, !dbg !1908
  %add238 = add i64 %154, %conv237, !dbg !1908
  store i64 %add238, i64* %used, align 8, !dbg !1908
  br label %if.end239, !dbg !1909

if.end239:                                        ; preds = %if.then232, %if.end225
  %155 = load i32, i32* %offset32, align 4, !dbg !1910
  %156 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1912
  %cfdata_offset_in_cab240 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %156, i32 0, i32 0, !dbg !1913
  %157 = load i32, i32* %cfdata_offset_in_cab240, align 8, !dbg !1913
  %cmp241 = icmp uge i32 %155, %157, !dbg !1914
  br i1 %cmp241, label %if.then243, label %if.end244, !dbg !1915

if.then243:                                       ; preds = %if.end239
  br label %invalid, !dbg !1916

if.end244:                                        ; preds = %if.end239
  %158 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1917
  %cfdata_offset_in_cab245 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %158, i32 0, i32 0, !dbg !1918
  %159 = load i32, i32* %cfdata_offset_in_cab245, align 8, !dbg !1918
  store i32 %159, i32* %offset32, align 4, !dbg !1919
  %160 = load %struct.cffolder*, %struct.cffolder** %folder, align 8, !dbg !1920
  %decompress_init = getelementptr inbounds %struct.cffolder, %struct.cffolder* %160, i32 0, i32 7, !dbg !1921
  store i8 0, i8* %decompress_init, align 4, !dbg !1922
  br label %for.inc, !dbg !1923

for.inc:                                          ; preds = %if.end244
  %161 = load i32, i32* %i, align 4, !dbg !1924
  %inc = add nsw i32 %161, 1, !dbg !1924
  store i32 %inc, i32* %i, align 4, !dbg !1924
  br label %for.cond, !dbg !1926

for.end:                                          ; preds = %for.cond
  %162 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1927
  %163 = load i64, i64* %used, align 8, !dbg !1928
  %call246 = call i64 @__archive_read_consume(%struct.archive_read* %162, i64 %163), !dbg !1929
  %164 = load i64, i64* %used, align 8, !dbg !1930
  %165 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1931
  %cab_offset247 = getelementptr inbounds %struct.cab, %struct.cab* %165, i32 0, i32 8, !dbg !1932
  %166 = load i64, i64* %cab_offset247, align 8, !dbg !1933
  %add248 = add i64 %166, %164, !dbg !1933
  store i64 %add248, i64* %cab_offset247, align 8, !dbg !1933
  %167 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1934
  %files_offset249 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %167, i32 0, i32 1, !dbg !1935
  %168 = load i32, i32* %files_offset249, align 4, !dbg !1935
  %conv250 = zext i32 %168 to i64, !dbg !1936
  %169 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1937
  %cab_offset251 = getelementptr inbounds %struct.cab, %struct.cab* %169, i32 0, i32 8, !dbg !1938
  %170 = load i64, i64* %cab_offset251, align 8, !dbg !1938
  %sub = sub nsw i64 %conv250, %170, !dbg !1939
  store i64 %sub, i64* %skip, align 8, !dbg !1940
  %171 = load i64, i64* %skip, align 8, !dbg !1941
  %cmp252 = icmp slt i64 %171, 0, !dbg !1943
  br i1 %cmp252, label %if.then254, label %if.end259, !dbg !1944

if.then254:                                       ; preds = %for.end
  %172 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1945
  %archive255 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %172, i32 0, i32 0, !dbg !1947
  %173 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1948
  %files_offset256 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %173, i32 0, i32 1, !dbg !1949
  %174 = load i32, i32* %files_offset256, align 4, !dbg !1949
  %conv257 = zext i32 %174 to i64, !dbg !1950
  %175 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1951
  %cab_offset258 = getelementptr inbounds %struct.cab, %struct.cab* %175, i32 0, i32 8, !dbg !1952
  %176 = load i64, i64* %cab_offset258, align 8, !dbg !1952
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive255, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i32 0, i32 0), i64 %conv257, i64 %176), !dbg !1953
  store i32 -30, i32* %retval, align 4, !dbg !1954
  br label %return, !dbg !1954

if.end259:                                        ; preds = %for.end
  %177 = load i64, i64* %skip, align 8, !dbg !1955
  %tobool260 = icmp ne i64 %177, 0, !dbg !1955
  br i1 %tobool260, label %if.then261, label %if.end265, !dbg !1957

if.then261:                                       ; preds = %if.end259
  %178 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1958
  %179 = load i64, i64* %skip, align 8, !dbg !1960
  %call262 = call i64 @__archive_read_consume(%struct.archive_read* %178, i64 %179), !dbg !1961
  %180 = load i64, i64* %skip, align 8, !dbg !1962
  %181 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !1963
  %cab_offset263 = getelementptr inbounds %struct.cab, %struct.cab* %181, i32 0, i32 8, !dbg !1964
  %182 = load i64, i64* %cab_offset263, align 8, !dbg !1965
  %add264 = add nsw i64 %182, %180, !dbg !1965
  store i64 %add264, i64* %cab_offset263, align 8, !dbg !1965
  br label %if.end265, !dbg !1966

if.end265:                                        ; preds = %if.then261, %if.end259
  %183 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1967
  %file_count266 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %183, i32 0, i32 3, !dbg !1968
  %184 = load i16, i16* %file_count266, align 2, !dbg !1968
  %conv267 = zext i16 %184 to i64, !dbg !1967
  %call268 = call noalias i8* @calloc(i64 %conv267, i64 48) #8, !dbg !1969
  %185 = bitcast i8* %call268 to %struct.cffile*, !dbg !1970
  %186 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1971
  %file_array = getelementptr inbounds %struct.cfheader, %struct.cfheader* %186, i32 0, i32 12, !dbg !1972
  store %struct.cffile* %185, %struct.cffile** %file_array, align 8, !dbg !1973
  %187 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1974
  %file_array269 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %187, i32 0, i32 12, !dbg !1976
  %188 = load %struct.cffile*, %struct.cffile** %file_array269, align 8, !dbg !1976
  %cmp270 = icmp eq %struct.cffile* %188, null, !dbg !1977
  br i1 %cmp270, label %if.then272, label %if.end273, !dbg !1978

if.then272:                                       ; preds = %if.end265
  br label %nomem, !dbg !1979

if.end273:                                        ; preds = %if.end265
  store i32 -1, i32* %prev_folder, align 4, !dbg !1980
  store i32 0, i32* %i, align 4, !dbg !1981
  br label %for.cond274, !dbg !1983

for.cond274:                                      ; preds = %for.inc404, %if.end273
  %189 = load i32, i32* %i, align 4, !dbg !1984
  %190 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1987
  %file_count275 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %190, i32 0, i32 3, !dbg !1988
  %191 = load i16, i16* %file_count275, align 2, !dbg !1988
  %conv276 = zext i16 %191 to i32, !dbg !1987
  %cmp277 = icmp slt i32 %189, %conv276, !dbg !1989
  br i1 %cmp277, label %for.body279, label %for.end406, !dbg !1990

for.body279:                                      ; preds = %for.cond274
  call void @llvm.dbg.declare(metadata %struct.cffile** %file, metadata !1991, metadata !638), !dbg !1993
  %192 = load i32, i32* %i, align 4, !dbg !1994
  %idxprom280 = sext i32 %192 to i64, !dbg !1995
  %193 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !1995
  %file_array281 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %193, i32 0, i32 12, !dbg !1996
  %194 = load %struct.cffile*, %struct.cffile** %file_array281, align 8, !dbg !1996
  %arrayidx282 = getelementptr inbounds %struct.cffile, %struct.cffile* %194, i64 %idxprom280, !dbg !1995
  store %struct.cffile* %arrayidx282, %struct.cffile** %file, align 8, !dbg !1993
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !1997, metadata !638), !dbg !1998
  %195 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1999
  %call283 = call i8* @__archive_read_ahead(%struct.archive_read* %195, i64 16, i64* null), !dbg !2001
  store i8* %call283, i8** %p, align 8, !dbg !2002
  %cmp284 = icmp eq i8* %call283, null, !dbg !2003
  br i1 %cmp284, label %if.then286, label %if.end288, !dbg !2004

if.then286:                                       ; preds = %for.body279
  %196 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2005
  %call287 = call i32 @truncated_error(%struct.archive_read* %196), !dbg !2006
  store i32 %call287, i32* %retval, align 4, !dbg !2007
  br label %return, !dbg !2007

if.end288:                                        ; preds = %for.body279
  %197 = load i8*, i8** %p, align 8, !dbg !2008
  %add.ptr289 = getelementptr inbounds i8, i8* %197, i64 0, !dbg !2009
  %call290 = call i32 @archive_le32dec(i8* %add.ptr289), !dbg !2010
  %198 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2011
  %uncompressed_size = getelementptr inbounds %struct.cffile, %struct.cffile* %198, i32 0, i32 0, !dbg !2012
  store i32 %call290, i32* %uncompressed_size, align 8, !dbg !2013
  %199 = load i8*, i8** %p, align 8, !dbg !2014
  %add.ptr291 = getelementptr inbounds i8, i8* %199, i64 4, !dbg !2015
  %call292 = call i32 @archive_le32dec(i8* %add.ptr291), !dbg !2016
  %200 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2017
  %offset = getelementptr inbounds %struct.cffile, %struct.cffile* %200, i32 0, i32 1, !dbg !2018
  store i32 %call292, i32* %offset, align 4, !dbg !2019
  %201 = load i8*, i8** %p, align 8, !dbg !2020
  %add.ptr293 = getelementptr inbounds i8, i8* %201, i64 8, !dbg !2021
  %call294 = call zeroext i16 @archive_le16dec(i8* %add.ptr293), !dbg !2022
  %202 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2023
  %folder295 = getelementptr inbounds %struct.cffile, %struct.cffile* %202, i32 0, i32 3, !dbg !2024
  store i16 %call294, i16* %folder295, align 8, !dbg !2025
  %203 = load i8*, i8** %p, align 8, !dbg !2026
  %add.ptr296 = getelementptr inbounds i8, i8* %203, i64 10, !dbg !2027
  %call297 = call i64 @cab_dos_time(i8* %add.ptr296), !dbg !2028
  %204 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2029
  %mtime = getelementptr inbounds %struct.cffile, %struct.cffile* %204, i32 0, i32 2, !dbg !2030
  store i64 %call297, i64* %mtime, align 8, !dbg !2031
  %205 = load i8*, i8** %p, align 8, !dbg !2032
  %add.ptr298 = getelementptr inbounds i8, i8* %205, i64 14, !dbg !2033
  %call299 = call zeroext i16 @archive_le16dec(i8* %add.ptr298), !dbg !2034
  %conv300 = trunc i16 %call299 to i8, !dbg !2035
  %206 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2036
  %attr = getelementptr inbounds %struct.cffile, %struct.cffile* %206, i32 0, i32 4, !dbg !2037
  store i8 %conv300, i8* %attr, align 2, !dbg !2038
  %207 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2039
  %call301 = call i64 @__archive_read_consume(%struct.archive_read* %207, i64 16), !dbg !2040
  %208 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2041
  %cab_offset302 = getelementptr inbounds %struct.cab, %struct.cab* %208, i32 0, i32 8, !dbg !2042
  %209 = load i64, i64* %cab_offset302, align 8, !dbg !2043
  %add303 = add nsw i64 %209, 16, !dbg !2043
  store i64 %add303, i64* %cab_offset302, align 8, !dbg !2043
  %210 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2044
  %call304 = call i8* @cab_read_ahead_remaining(%struct.archive_read* %210, i64 256, i64* %avail), !dbg !2046
  store i8* %call304, i8** %p, align 8, !dbg !2047
  %cmp305 = icmp eq i8* %call304, null, !dbg !2048
  br i1 %cmp305, label %if.then307, label %if.end309, !dbg !2049

if.then307:                                       ; preds = %if.end288
  %211 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2050
  %call308 = call i32 @truncated_error(%struct.archive_read* %211), !dbg !2051
  store i32 %call308, i32* %retval, align 4, !dbg !2052
  br label %return, !dbg !2052

if.end309:                                        ; preds = %if.end288
  %212 = load i8*, i8** %p, align 8, !dbg !2053
  %213 = load i64, i64* %avail, align 8, !dbg !2055
  %sub310 = sub nsw i64 %213, 1, !dbg !2056
  %call311 = call i64 @cab_strnlen(i8* %212, i64 %sub310), !dbg !2057
  store i64 %call311, i64* %len, align 8, !dbg !2058
  %cmp312 = icmp sle i64 %call311, 0, !dbg !2059
  br i1 %cmp312, label %if.then314, label %if.end315, !dbg !2060

if.then314:                                       ; preds = %if.end309
  br label %invalid, !dbg !2061

if.end315:                                        ; preds = %if.end309
  br label %do.body, !dbg !2062

do.body:                                          ; preds = %if.end315
  %214 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2063
  %pathname = getelementptr inbounds %struct.cffile, %struct.cffile* %214, i32 0, i32 5, !dbg !2063
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname, i32 0, i32 0, !dbg !2063
  store i8* null, i8** %s, align 8, !dbg !2063
  %215 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2063
  %pathname316 = getelementptr inbounds %struct.cffile, %struct.cffile* %215, i32 0, i32 5, !dbg !2063
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname316, i32 0, i32 1, !dbg !2063
  store i64 0, i64* %length, align 8, !dbg !2063
  %216 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2063
  %pathname317 = getelementptr inbounds %struct.cffile, %struct.cffile* %216, i32 0, i32 5, !dbg !2063
  %buffer_length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname317, i32 0, i32 2, !dbg !2063
  store i64 0, i64* %buffer_length, align 8, !dbg !2063
  br label %do.end, !dbg !2063

do.end:                                           ; preds = %do.body
  %217 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2066
  %pathname318 = getelementptr inbounds %struct.cffile, %struct.cffile* %217, i32 0, i32 5, !dbg !2066
  %length319 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname318, i32 0, i32 1, !dbg !2066
  store i64 0, i64* %length319, align 8, !dbg !2066
  %218 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2066
  %pathname320 = getelementptr inbounds %struct.cffile, %struct.cffile* %218, i32 0, i32 5, !dbg !2066
  %219 = load i8*, i8** %p, align 8, !dbg !2066
  %220 = load i64, i64* %len, align 8, !dbg !2066
  %call321 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %pathname320, i8* %219, i64 %220), !dbg !2066
  %221 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2067
  %222 = load i64, i64* %len, align 8, !dbg !2068
  %add322 = add nsw i64 %222, 1, !dbg !2069
  %call323 = call i64 @__archive_read_consume(%struct.archive_read* %221, i64 %add322), !dbg !2070
  %223 = load i64, i64* %len, align 8, !dbg !2071
  %add324 = add nsw i64 %223, 1, !dbg !2072
  %224 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2073
  %cab_offset325 = getelementptr inbounds %struct.cab, %struct.cab* %224, i32 0, i32 8, !dbg !2074
  %225 = load i64, i64* %cab_offset325, align 8, !dbg !2075
  %add326 = add nsw i64 %225, %add324, !dbg !2075
  store i64 %add326, i64* %cab_offset325, align 8, !dbg !2075
  %226 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2076
  %uncompressed_size327 = getelementptr inbounds %struct.cffile, %struct.cffile* %226, i32 0, i32 0, !dbg !2078
  %227 = load i32, i32* %uncompressed_size327, align 8, !dbg !2078
  %cmp328 = icmp ugt i32 %227, 2147450880, !dbg !2079
  br i1 %cmp328, label %if.then330, label %if.end331, !dbg !2080

if.then330:                                       ; preds = %do.end
  br label %invalid, !dbg !2081

if.end331:                                        ; preds = %do.end
  %228 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2082
  %offset332 = getelementptr inbounds %struct.cffile, %struct.cffile* %228, i32 0, i32 1, !dbg !2084
  %229 = load i32, i32* %offset332, align 4, !dbg !2084
  %conv333 = zext i32 %229 to i64, !dbg !2085
  %230 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2086
  %uncompressed_size334 = getelementptr inbounds %struct.cffile, %struct.cffile* %230, i32 0, i32 0, !dbg !2087
  %231 = load i32, i32* %uncompressed_size334, align 8, !dbg !2087
  %conv335 = zext i32 %231 to i64, !dbg !2088
  %add336 = add nsw i64 %conv333, %conv335, !dbg !2089
  %cmp337 = icmp sgt i64 %add336, 2147450880, !dbg !2090
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !2091

if.then339:                                       ; preds = %if.end331
  br label %invalid, !dbg !2092

if.end340:                                        ; preds = %if.end331
  %232 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2093
  %folder341 = getelementptr inbounds %struct.cffile, %struct.cffile* %232, i32 0, i32 3, !dbg !2094
  %233 = load i16, i16* %folder341, align 8, !dbg !2094
  %conv342 = zext i16 %233 to i32, !dbg !2093
  switch i32 %conv342, label %sw.default [
    i32 65534, label %sw.bb
    i32 65535, label %sw.bb353
    i32 65533, label %sw.bb360
  ], !dbg !2095

sw.bb:                                            ; preds = %if.end340
  %234 = load i32, i32* %i, align 4, !dbg !2096
  %235 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !2099
  %file_count343 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %235, i32 0, i32 3, !dbg !2100
  %236 = load i16, i16* %file_count343, align 2, !dbg !2100
  %conv344 = zext i16 %236 to i32, !dbg !2099
  %sub345 = sub nsw i32 %conv344, 1, !dbg !2101
  %cmp346 = icmp ne i32 %234, %sub345, !dbg !2102
  br i1 %cmp346, label %if.then348, label %if.end349, !dbg !2103

if.then348:                                       ; preds = %sw.bb
  br label %invalid, !dbg !2104

if.end349:                                        ; preds = %sw.bb
  %237 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !2105
  %folder_count350 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %237, i32 0, i32 2, !dbg !2106
  %238 = load i16, i16* %folder_count350, align 8, !dbg !2106
  %conv351 = zext i16 %238 to i32, !dbg !2105
  %sub352 = sub nsw i32 %conv351, 1, !dbg !2107
  store i32 %sub352, i32* %cur_folder, align 4, !dbg !2108
  br label %sw.epilog, !dbg !2109

sw.bb353:                                         ; preds = %if.end340
  %239 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !2110
  %file_count354 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %239, i32 0, i32 3, !dbg !2112
  %240 = load i16, i16* %file_count354, align 2, !dbg !2112
  %conv355 = zext i16 %240 to i32, !dbg !2110
  %cmp356 = icmp ne i32 %conv355, 1, !dbg !2113
  br i1 %cmp356, label %if.then358, label %if.end359, !dbg !2114

if.then358:                                       ; preds = %sw.bb353
  br label %invalid, !dbg !2115

if.end359:                                        ; preds = %sw.bb353
  br label %sw.bb360, !dbg !2116

sw.bb360:                                         ; preds = %if.end340, %if.end359
  %241 = load i32, i32* %i, align 4, !dbg !2118
  %cmp361 = icmp ne i32 %241, 0, !dbg !2120
  br i1 %cmp361, label %if.then363, label %if.end364, !dbg !2121

if.then363:                                       ; preds = %sw.bb360
  br label %invalid, !dbg !2122

if.end364:                                        ; preds = %sw.bb360
  store i32 0, i32* %cur_folder, align 4, !dbg !2123
  store i32 0, i32* %prev_folder, align 4, !dbg !2124
  %242 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2125
  %offset365 = getelementptr inbounds %struct.cffile, %struct.cffile* %242, i32 0, i32 1, !dbg !2126
  %243 = load i32, i32* %offset365, align 4, !dbg !2126
  store i32 %243, i32* %offset32, align 4, !dbg !2127
  br label %sw.epilog, !dbg !2128

sw.default:                                       ; preds = %if.end340
  %244 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2129
  %folder366 = getelementptr inbounds %struct.cffile, %struct.cffile* %244, i32 0, i32 3, !dbg !2131
  %245 = load i16, i16* %folder366, align 8, !dbg !2131
  %conv367 = zext i16 %245 to i32, !dbg !2129
  %246 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !2132
  %folder_count368 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %246, i32 0, i32 2, !dbg !2133
  %247 = load i16, i16* %folder_count368, align 8, !dbg !2133
  %conv369 = zext i16 %247 to i32, !dbg !2132
  %cmp370 = icmp sge i32 %conv367, %conv369, !dbg !2134
  br i1 %cmp370, label %if.then372, label %if.end373, !dbg !2135

if.then372:                                       ; preds = %sw.default
  br label %invalid, !dbg !2136

if.end373:                                        ; preds = %sw.default
  %248 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2137
  %folder374 = getelementptr inbounds %struct.cffile, %struct.cffile* %248, i32 0, i32 3, !dbg !2138
  %249 = load i16, i16* %folder374, align 8, !dbg !2138
  %conv375 = zext i16 %249 to i32, !dbg !2137
  store i32 %conv375, i32* %cur_folder, align 4, !dbg !2139
  br label %sw.epilog, !dbg !2140

sw.epilog:                                        ; preds = %if.end373, %if.end364, %if.end349
  %250 = load i32, i32* %cur_folder, align 4, !dbg !2141
  %251 = load i32, i32* %prev_folder, align 4, !dbg !2143
  %cmp376 = icmp slt i32 %250, %251, !dbg !2144
  br i1 %cmp376, label %if.then378, label %if.end379, !dbg !2145

if.then378:                                       ; preds = %sw.epilog
  br label %invalid, !dbg !2146

if.end379:                                        ; preds = %sw.epilog
  %252 = load i32, i32* %cur_folder, align 4, !dbg !2147
  %253 = load i32, i32* %prev_folder, align 4, !dbg !2149
  %cmp380 = icmp ne i32 %252, %253, !dbg !2150
  br i1 %cmp380, label %if.then382, label %if.end383, !dbg !2151

if.then382:                                       ; preds = %if.end379
  store i32 0, i32* %offset32, align 4, !dbg !2152
  br label %if.end383, !dbg !2153

if.end383:                                        ; preds = %if.then382, %if.end379
  %254 = load i32, i32* %cur_folder, align 4, !dbg !2154
  store i32 %254, i32* %prev_folder, align 4, !dbg !2155
  %255 = load i32, i32* %offset32, align 4, !dbg !2156
  %256 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2158
  %offset384 = getelementptr inbounds %struct.cffile, %struct.cffile* %256, i32 0, i32 1, !dbg !2159
  %257 = load i32, i32* %offset384, align 4, !dbg !2159
  %cmp385 = icmp ne i32 %255, %257, !dbg !2160
  br i1 %cmp385, label %if.then387, label %if.end388, !dbg !2161

if.then387:                                       ; preds = %if.end383
  br label %invalid, !dbg !2162

if.end388:                                        ; preds = %if.end383
  %258 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2163
  %uncompressed_size389 = getelementptr inbounds %struct.cffile, %struct.cffile* %258, i32 0, i32 0, !dbg !2164
  %259 = load i32, i32* %uncompressed_size389, align 8, !dbg !2164
  %260 = load i32, i32* %offset32, align 4, !dbg !2165
  %add390 = add i32 %260, %259, !dbg !2165
  store i32 %add390, i32* %offset32, align 4, !dbg !2165
  %261 = load %struct.cffile*, %struct.cffile** %file, align 8, !dbg !2166
  %uncompressed_size391 = getelementptr inbounds %struct.cffile, %struct.cffile* %261, i32 0, i32 0, !dbg !2168
  %262 = load i32, i32* %uncompressed_size391, align 8, !dbg !2168
  %cmp392 = icmp ugt i32 %262, 0, !dbg !2169
  br i1 %cmp392, label %land.lhs.true394, label %if.end403, !dbg !2170

land.lhs.true394:                                 ; preds = %if.end388
  %263 = load i32, i32* %cur_folder, align 4, !dbg !2171
  %idxprom395 = sext i32 %263 to i64, !dbg !2172
  %264 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !2172
  %folder_array396 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %264, i32 0, i32 11, !dbg !2173
  %265 = load %struct.cffolder*, %struct.cffolder** %folder_array396, align 8, !dbg !2173
  %arrayidx397 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %265, i64 %idxprom395, !dbg !2172
  %cfdata_count398 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %arrayidx397, i32 0, i32 1, !dbg !2174
  %266 = load i16, i16* %cfdata_count398, align 4, !dbg !2174
  %conv399 = zext i16 %266 to i32, !dbg !2172
  %cmp400 = icmp eq i32 %conv399, 0, !dbg !2175
  br i1 %cmp400, label %if.then402, label %if.end403, !dbg !2176

if.then402:                                       ; preds = %land.lhs.true394
  br label %invalid, !dbg !2178

if.end403:                                        ; preds = %land.lhs.true394, %if.end388
  br label %for.inc404, !dbg !2179

for.inc404:                                       ; preds = %if.end403
  %267 = load i32, i32* %i, align 4, !dbg !2180
  %inc405 = add nsw i32 %267, 1, !dbg !2180
  store i32 %inc405, i32* %i, align 4, !dbg !2180
  br label %for.cond274, !dbg !2182

for.end406:                                       ; preds = %for.cond274
  %268 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !2183
  %cabinet407 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %268, i32 0, i32 6, !dbg !2185
  %269 = load i16, i16* %cabinet407, align 8, !dbg !2185
  %conv408 = zext i16 %269 to i32, !dbg !2183
  %cmp409 = icmp ne i32 %conv408, 0, !dbg !2186
  br i1 %cmp409, label %if.then416, label %lor.lhs.false411, !dbg !2187

lor.lhs.false411:                                 ; preds = %for.end406
  %270 = load %struct.cfheader*, %struct.cfheader** %hd, align 8, !dbg !2188
  %flags412 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %270, i32 0, i32 4, !dbg !2190
  %271 = load i16, i16* %flags412, align 4, !dbg !2190
  %conv413 = zext i16 %271 to i32, !dbg !2188
  %and414 = and i32 %conv413, 3, !dbg !2191
  %tobool415 = icmp ne i32 %and414, 0, !dbg !2191
  br i1 %tobool415, label %if.then416, label %if.end418, !dbg !2192

if.then416:                                       ; preds = %lor.lhs.false411, %for.end406
  %272 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2193
  %archive417 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %272, i32 0, i32 0, !dbg !2195
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive417, i32 84, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i32 0, i32 0)), !dbg !2196
  store i32 -20, i32* %retval, align 4, !dbg !2197
  br label %return, !dbg !2197

if.end418:                                        ; preds = %lor.lhs.false411
  store i32 0, i32* %retval, align 4, !dbg !2198
  br label %return, !dbg !2198

invalid:                                          ; preds = %if.then402, %if.then387, %if.then378, %if.then372, %if.then363, %if.then358, %if.then348, %if.then339, %if.then330, %if.then314, %if.then243, %if.then163, %if.then148, %if.then127, %if.then112, %if.then88, %if.then71, %if.then63
  %273 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2199
  %archive419 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %273, i32 0, i32 0, !dbg !2200
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive419, i32 84, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0)), !dbg !2201
  store i32 -30, i32* %retval, align 4, !dbg !2202
  br label %return, !dbg !2202

nomem:                                            ; preds = %if.then272, %if.then177
  %274 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2203
  %archive420 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %274, i32 0, i32 0, !dbg !2204
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive420, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0)), !dbg !2205
  store i32 -30, i32* %retval, align 4, !dbg !2206
  br label %return, !dbg !2206

return:                                           ; preds = %nomem, %invalid, %if.end418, %if.then416, %if.then307, %if.then286, %if.then254, %if.then193, %if.then156, %if.then141, %if.then120, %if.then105, %if.then49, %if.then27, %if.then22, %if.then5
  %275 = load i32, i32* %retval, align 4, !dbg !2207
  ret i32 %275, !dbg !2207
}

declare %struct.archive_string_conv* @archive_string_default_conversion_for_read(%struct.archive*) #2

; Function Attrs: nounwind uwtable
define internal i32 @cab_convert_path_separator_1(%struct.archive_string* %fn, i8 zeroext %attr) #0 !dbg !542 {
entry:
  %retval = alloca i32, align 4
  %fn.addr = alloca %struct.archive_string*, align 8
  %attr.addr = alloca i8, align 1
  %i = alloca i64, align 8
  %mb = alloca i32, align 4
  store %struct.archive_string* %fn, %struct.archive_string** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_string** %fn.addr, metadata !2208, metadata !638), !dbg !2209
  store i8 %attr, i8* %attr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %attr.addr, metadata !2210, metadata !638), !dbg !2211
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2212, metadata !638), !dbg !2213
  call void @llvm.dbg.declare(metadata i32* %mb, metadata !2214, metadata !638), !dbg !2215
  store i32 0, i32* %mb, align 4, !dbg !2216
  store i64 0, i64* %i, align 8, !dbg !2217
  br label %for.cond, !dbg !2219

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !2220
  %1 = load %struct.archive_string*, %struct.archive_string** %fn.addr, align 8, !dbg !2223
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %1, i32 0, i32 1, !dbg !2223
  %2 = load i64, i64* %length, align 8, !dbg !2223
  %cmp = icmp ult i64 %0, %2, !dbg !2224
  br i1 %cmp, label %for.body, label %for.end, !dbg !2225

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %i, align 8, !dbg !2226
  %4 = load %struct.archive_string*, %struct.archive_string** %fn.addr, align 8, !dbg !2229
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %4, i32 0, i32 0, !dbg !2230
  %5 = load i8*, i8** %s, align 8, !dbg !2230
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %3, !dbg !2229
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2229
  %conv = sext i8 %6 to i32, !dbg !2229
  %cmp1 = icmp eq i32 %conv, 92, !dbg !2231
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2232

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %mb, align 4, !dbg !2233
  %tobool = icmp ne i32 %7, 0, !dbg !2233
  br i1 %tobool, label %if.then3, label %if.end, !dbg !2236

if.then3:                                         ; preds = %if.then
  br label %for.end, !dbg !2237

if.end:                                           ; preds = %if.then
  %8 = load i64, i64* %i, align 8, !dbg !2239
  %9 = load %struct.archive_string*, %struct.archive_string** %fn.addr, align 8, !dbg !2240
  %s4 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %9, i32 0, i32 0, !dbg !2241
  %10 = load i8*, i8** %s4, align 8, !dbg !2241
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 %8, !dbg !2240
  store i8 47, i8* %arrayidx5, align 1, !dbg !2242
  store i32 0, i32* %mb, align 4, !dbg !2243
  br label %if.end16, !dbg !2244

if.else:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8, !dbg !2245
  %12 = load %struct.archive_string*, %struct.archive_string** %fn.addr, align 8, !dbg !2248
  %s6 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %12, i32 0, i32 0, !dbg !2249
  %13 = load i8*, i8** %s6, align 8, !dbg !2249
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 %11, !dbg !2248
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !2248
  %conv8 = sext i8 %14 to i32, !dbg !2248
  %and = and i32 %conv8, 128, !dbg !2250
  %tobool9 = icmp ne i32 %and, 0, !dbg !2250
  br i1 %tobool9, label %land.lhs.true, label %if.else14, !dbg !2251

land.lhs.true:                                    ; preds = %if.else
  %15 = load i8, i8* %attr.addr, align 1, !dbg !2252
  %conv10 = zext i8 %15 to i32, !dbg !2252
  %and11 = and i32 %conv10, 128, !dbg !2254
  %tobool12 = icmp ne i32 %and11, 0, !dbg !2254
  br i1 %tobool12, label %if.else14, label %if.then13, !dbg !2255

if.then13:                                        ; preds = %land.lhs.true
  store i32 1, i32* %mb, align 4, !dbg !2256
  br label %if.end15, !dbg !2257

if.else14:                                        ; preds = %land.lhs.true, %if.else
  store i32 0, i32* %mb, align 4, !dbg !2258
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then13
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end
  br label %for.inc, !dbg !2259

for.inc:                                          ; preds = %if.end16
  %16 = load i64, i64* %i, align 8, !dbg !2260
  %inc = add i64 %16, 1, !dbg !2260
  store i64 %inc, i64* %i, align 8, !dbg !2260
  br label %for.cond, !dbg !2262

for.end:                                          ; preds = %if.then3, %for.cond
  %17 = load i64, i64* %i, align 8, !dbg !2263
  %18 = load %struct.archive_string*, %struct.archive_string** %fn.addr, align 8, !dbg !2265
  %length17 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %18, i32 0, i32 1, !dbg !2265
  %19 = load i64, i64* %length17, align 8, !dbg !2265
  %cmp18 = icmp eq i64 %17, %19, !dbg !2266
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !2267

if.then20:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !2268
  br label %return, !dbg !2268

if.end21:                                         ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !2269
  br label %return, !dbg !2269

return:                                           ; preds = %if.end21, %if.then20
  %20 = load i32, i32* %retval, align 4, !dbg !2270
  ret i32 %20, !dbg !2270
}

declare i32 @_archive_entry_copy_pathname_l(%struct.archive_entry*, i8*, i64, %struct.archive_string_conv*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

declare i8* @archive_string_conversion_charset_name(%struct.archive_string_conv*) #2

; Function Attrs: nounwind uwtable
define internal void @cab_convert_path_separator_2(%struct.cab* %cab, %struct.archive_entry* %entry1) #0 !dbg !546 {
entry:
  %cab.addr = alloca %struct.cab*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %wp = alloca i32*, align 8
  %i = alloca i64, align 8
  store %struct.cab* %cab, %struct.cab** %cab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cab** %cab.addr, metadata !2271, metadata !638), !dbg !2272
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !2273, metadata !638), !dbg !2274
  call void @llvm.dbg.declare(metadata i32** %wp, metadata !2275, metadata !638), !dbg !2278
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2279, metadata !638), !dbg !2280
  %0 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2281
  %call = call i32* @archive_entry_pathname_w(%struct.archive_entry* %0), !dbg !2283
  store i32* %call, i32** %wp, align 8, !dbg !2284
  %cmp = icmp ne i32* %call, null, !dbg !2285
  br i1 %cmp, label %if.then, label %if.end17, !dbg !2286

if.then:                                          ; preds = %entry
  %1 = load %struct.cab*, %struct.cab** %cab.addr, align 8, !dbg !2287
  %ws = getelementptr inbounds %struct.cab, %struct.cab* %1, i32 0, i32 10, !dbg !2287
  %length = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws, i32 0, i32 1, !dbg !2287
  store i64 0, i64* %length, align 8, !dbg !2287
  %2 = load %struct.cab*, %struct.cab** %cab.addr, align 8, !dbg !2287
  %ws2 = getelementptr inbounds %struct.cab, %struct.cab* %2, i32 0, i32 10, !dbg !2287
  %3 = load i32*, i32** %wp, align 8, !dbg !2287
  %4 = load i32*, i32** %wp, align 8, !dbg !2287
  %cmp3 = icmp eq i32* %4, null, !dbg !2287
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !2287

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !2289

cond.false:                                       ; preds = %if.then
  %5 = load i32*, i32** %wp, align 8, !dbg !2291
  %call4 = call i64 @wcslen(i32* %5) #9, !dbg !2291
  br label %cond.end, !dbg !2291

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %call4, %cond.false ], !dbg !2293
  %call5 = call %struct.archive_wstring* @archive_wstrncat(%struct.archive_wstring* %ws2, i32* %3, i64 %cond), !dbg !2293
  store i64 0, i64* %i, align 8, !dbg !2295
  br label %for.cond, !dbg !2297

for.cond:                                         ; preds = %for.inc, %cond.end
  %6 = load i64, i64* %i, align 8, !dbg !2298
  %7 = load %struct.cab*, %struct.cab** %cab.addr, align 8, !dbg !2301
  %ws6 = getelementptr inbounds %struct.cab, %struct.cab* %7, i32 0, i32 10, !dbg !2301
  %length7 = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws6, i32 0, i32 1, !dbg !2301
  %8 = load i64, i64* %length7, align 8, !dbg !2301
  %cmp8 = icmp ult i64 %6, %8, !dbg !2302
  br i1 %cmp8, label %for.body, label %for.end, !dbg !2303

for.body:                                         ; preds = %for.cond
  %9 = load i64, i64* %i, align 8, !dbg !2304
  %10 = load %struct.cab*, %struct.cab** %cab.addr, align 8, !dbg !2307
  %ws9 = getelementptr inbounds %struct.cab, %struct.cab* %10, i32 0, i32 10, !dbg !2308
  %s = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws9, i32 0, i32 0, !dbg !2309
  %11 = load i32*, i32** %s, align 8, !dbg !2309
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %9, !dbg !2307
  %12 = load i32, i32* %arrayidx, align 4, !dbg !2307
  %cmp10 = icmp eq i32 %12, 92, !dbg !2310
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !2311

if.then11:                                        ; preds = %for.body
  %13 = load i64, i64* %i, align 8, !dbg !2312
  %14 = load %struct.cab*, %struct.cab** %cab.addr, align 8, !dbg !2313
  %ws12 = getelementptr inbounds %struct.cab, %struct.cab* %14, i32 0, i32 10, !dbg !2314
  %s13 = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws12, i32 0, i32 0, !dbg !2315
  %15 = load i32*, i32** %s13, align 8, !dbg !2315
  %arrayidx14 = getelementptr inbounds i32, i32* %15, i64 %13, !dbg !2313
  store i32 47, i32* %arrayidx14, align 4, !dbg !2316
  br label %if.end, !dbg !2313

if.end:                                           ; preds = %if.then11, %for.body
  br label %for.inc, !dbg !2317

for.inc:                                          ; preds = %if.end
  %16 = load i64, i64* %i, align 8, !dbg !2318
  %inc = add i64 %16, 1, !dbg !2318
  store i64 %inc, i64* %i, align 8, !dbg !2318
  br label %for.cond, !dbg !2320

for.end:                                          ; preds = %for.cond
  %17 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2321
  %18 = load %struct.cab*, %struct.cab** %cab.addr, align 8, !dbg !2322
  %ws15 = getelementptr inbounds %struct.cab, %struct.cab* %18, i32 0, i32 10, !dbg !2323
  %s16 = getelementptr inbounds %struct.archive_wstring, %struct.archive_wstring* %ws15, i32 0, i32 0, !dbg !2324
  %19 = load i32*, i32** %s16, align 8, !dbg !2324
  call void @archive_entry_copy_pathname_w(%struct.archive_entry* %17, i32* %19), !dbg !2325
  br label %if.end17, !dbg !2326

if.end17:                                         ; preds = %for.end, %entry
  ret void, !dbg !2327
}

declare void @archive_entry_set_size(%struct.archive_entry*, i64) #2

declare void @archive_entry_set_mode(%struct.archive_entry*, i32) #2

declare void @archive_entry_set_mtime(%struct.archive_entry*, i64, i64) #2

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @truncated_error(%struct.archive_read* %a) #0 !dbg !523 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2328, metadata !638), !dbg !2329
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2330
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 0, !dbg !2331
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i32 0, i32 0)), !dbg !2332
  ret i32 -30, !dbg !2333
}

; Function Attrs: nounwind uwtable
define internal i32 @cab_skip_sfx(%struct.archive_read* %a) #0 !dbg !524 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %skip = alloca i64, align 8
  %bytes = alloca i64, align 8
  %window = alloca i64, align 8
  %h = alloca i8*, align 8
  %next = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2334, metadata !638), !dbg !2335
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2336, metadata !638), !dbg !2337
  call void @llvm.dbg.declare(metadata i8** %q, metadata !2338, metadata !638), !dbg !2339
  call void @llvm.dbg.declare(metadata i64* %skip, metadata !2340, metadata !638), !dbg !2341
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !2342, metadata !638), !dbg !2343
  call void @llvm.dbg.declare(metadata i64* %window, metadata !2344, metadata !638), !dbg !2345
  store i64 4096, i64* %window, align 8, !dbg !2346
  br label %for.cond, !dbg !2347

for.cond:                                         ; preds = %while.end, %if.end, %entry
  call void @llvm.dbg.declare(metadata i8** %h, metadata !2348, metadata !638), !dbg !2352
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2353
  %1 = load i64, i64* %window, align 8, !dbg !2354
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %0, i64 %1, i64* %bytes), !dbg !2355
  store i8* %call, i8** %h, align 8, !dbg !2352
  %2 = load i8*, i8** %h, align 8, !dbg !2356
  %cmp = icmp eq i8* %2, null, !dbg !2358
  br i1 %cmp, label %if.then, label %if.end3, !dbg !2359

if.then:                                          ; preds = %for.cond
  %3 = load i64, i64* %window, align 8, !dbg !2360
  %shr = ashr i64 %3, 1, !dbg !2360
  store i64 %shr, i64* %window, align 8, !dbg !2360
  %4 = load i64, i64* %window, align 8, !dbg !2362
  %cmp1 = icmp slt i64 %4, 128, !dbg !2364
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !2365

if.then2:                                         ; preds = %if.then
  %5 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2366
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %5, i32 0, i32 0, !dbg !2368
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0)), !dbg !2369
  store i32 -30, i32* %retval, align 4, !dbg !2370
  br label %return, !dbg !2370

if.end:                                           ; preds = %if.then
  br label %for.cond, !dbg !2371

if.end3:                                          ; preds = %for.cond
  %6 = load i8*, i8** %h, align 8, !dbg !2372
  store i8* %6, i8** %p, align 8, !dbg !2373
  %7 = load i8*, i8** %p, align 8, !dbg !2374
  %8 = load i64, i64* %bytes, align 8, !dbg !2375
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !2376
  store i8* %add.ptr, i8** %q, align 8, !dbg !2377
  br label %while.cond, !dbg !2378

while.cond:                                       ; preds = %if.end10, %if.end3
  %9 = load i8*, i8** %p, align 8, !dbg !2379
  %add.ptr4 = getelementptr inbounds i8, i8* %9, i64 8, !dbg !2381
  %10 = load i8*, i8** %q, align 8, !dbg !2382
  %cmp5 = icmp ult i8* %add.ptr4, %10, !dbg !2383
  br i1 %cmp5, label %while.body, label %while.end, !dbg !2384

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %next, metadata !2385, metadata !638), !dbg !2387
  %11 = load i8*, i8** %p, align 8, !dbg !2388
  %call6 = call i32 @find_cab_magic(i8* %11), !dbg !2390
  store i32 %call6, i32* %next, align 4, !dbg !2391
  %cmp7 = icmp eq i32 %call6, 0, !dbg !2392
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !2393

if.then8:                                         ; preds = %while.body
  %12 = load i8*, i8** %p, align 8, !dbg !2394
  %13 = load i8*, i8** %h, align 8, !dbg !2396
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !2397
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !2397
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2397
  store i64 %sub.ptr.sub, i64* %skip, align 8, !dbg !2398
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2399
  %15 = load i64, i64* %skip, align 8, !dbg !2400
  %call9 = call i64 @__archive_read_consume(%struct.archive_read* %14, i64 %15), !dbg !2401
  store i32 0, i32* %retval, align 4, !dbg !2402
  br label %return, !dbg !2402

if.end10:                                         ; preds = %while.body
  %16 = load i32, i32* %next, align 4, !dbg !2403
  %17 = load i8*, i8** %p, align 8, !dbg !2404
  %idx.ext = sext i32 %16 to i64, !dbg !2404
  %add.ptr11 = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !2404
  store i8* %add.ptr11, i8** %p, align 8, !dbg !2404
  br label %while.cond, !dbg !2405

while.end:                                        ; preds = %while.cond
  %18 = load i8*, i8** %p, align 8, !dbg !2407
  %19 = load i8*, i8** %h, align 8, !dbg !2408
  %sub.ptr.lhs.cast12 = ptrtoint i8* %18 to i64, !dbg !2409
  %sub.ptr.rhs.cast13 = ptrtoint i8* %19 to i64, !dbg !2409
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast12, %sub.ptr.rhs.cast13, !dbg !2409
  store i64 %sub.ptr.sub14, i64* %skip, align 8, !dbg !2410
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2411
  %21 = load i64, i64* %skip, align 8, !dbg !2412
  %call15 = call i64 @__archive_read_consume(%struct.archive_read* %20, i64 %21), !dbg !2413
  br label %for.cond, !dbg !2414

return:                                           ; preds = %if.then8, %if.then2
  %22 = load i32, i32* %retval, align 4, !dbg !2416
  ret i32 %22, !dbg !2416
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @archive_le32dec(i8* %pp) #6 !dbg !525 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p3 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !2417, metadata !638), !dbg !2418
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2419, metadata !638), !dbg !2420
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !2421
  store i8* %0, i8** %p, align 8, !dbg !2420
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !2422, metadata !638), !dbg !2423
  %1 = load i8*, i8** %p, align 8, !dbg !2424
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 3, !dbg !2424
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2424
  %conv = zext i8 %2 to i32, !dbg !2424
  store i32 %conv, i32* %p3, align 4, !dbg !2423
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !2425, metadata !638), !dbg !2426
  %3 = load i8*, i8** %p, align 8, !dbg !2427
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !2427
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !2427
  %conv2 = zext i8 %4 to i32, !dbg !2427
  store i32 %conv2, i32* %p2, align 4, !dbg !2426
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !2428, metadata !638), !dbg !2429
  %5 = load i8*, i8** %p, align 8, !dbg !2430
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !2430
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !2430
  %conv4 = zext i8 %6 to i32, !dbg !2430
  store i32 %conv4, i32* %p1, align 4, !dbg !2429
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !2431, metadata !638), !dbg !2432
  %7 = load i8*, i8** %p, align 8, !dbg !2433
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !2433
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !2433
  %conv6 = zext i8 %8 to i32, !dbg !2433
  store i32 %conv6, i32* %p0, align 4, !dbg !2432
  %9 = load i32, i32* %p3, align 4, !dbg !2434
  %shl = shl i32 %9, 24, !dbg !2435
  %10 = load i32, i32* %p2, align 4, !dbg !2436
  %shl7 = shl i32 %10, 16, !dbg !2437
  %or = or i32 %shl, %shl7, !dbg !2438
  %11 = load i32, i32* %p1, align 4, !dbg !2439
  %shl8 = shl i32 %11, 8, !dbg !2440
  %or9 = or i32 %or, %shl8, !dbg !2441
  %12 = load i32, i32* %p0, align 4, !dbg !2442
  %or10 = or i32 %or9, %12, !dbg !2443
  ret i32 %or10, !dbg !2444
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @archive_le16dec(i8* %pp) #6 !dbg !529 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !2445, metadata !638), !dbg !2446
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2447, metadata !638), !dbg !2448
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !2449
  store i8* %0, i8** %p, align 8, !dbg !2448
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !2450, metadata !638), !dbg !2451
  %1 = load i8*, i8** %p, align 8, !dbg !2452
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2452
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2452
  %conv = zext i8 %2 to i32, !dbg !2452
  store i32 %conv, i32* %p1, align 4, !dbg !2451
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !2453, metadata !638), !dbg !2454
  %3 = load i8*, i8** %p, align 8, !dbg !2455
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2455
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !2455
  %conv2 = zext i8 %4 to i32, !dbg !2455
  store i32 %conv2, i32* %p0, align 4, !dbg !2454
  %5 = load i32, i32* %p1, align 4, !dbg !2456
  %shl = shl i32 %5, 8, !dbg !2457
  %6 = load i32, i32* %p0, align 4, !dbg !2458
  %or = or i32 %shl, %6, !dbg !2459
  %conv3 = trunc i32 %or to i16, !dbg !2460
  ret i16 %conv3, !dbg !2461
}

; Function Attrs: nounwind uwtable
define internal i64 @cab_strnlen(i8* %p, i64 %maxlen) #0 !dbg !532 {
entry:
  %retval = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %maxlen.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2462, metadata !638), !dbg !2463
  store i64 %maxlen, i64* %maxlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxlen.addr, metadata !2464, metadata !638), !dbg !2465
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2466, metadata !638), !dbg !2467
  store i64 0, i64* %i, align 8, !dbg !2468
  br label %for.cond, !dbg !2470

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !2471
  %1 = load i64, i64* %maxlen.addr, align 8, !dbg !2474
  %cmp = icmp ule i64 %0, %1, !dbg !2475
  br i1 %cmp, label %for.body, label %for.end, !dbg !2476

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %i, align 8, !dbg !2477
  %3 = load i8*, i8** %p.addr, align 8, !dbg !2480
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %2, !dbg !2480
  %4 = load i8, i8* %arrayidx, align 1, !dbg !2480
  %conv = zext i8 %4 to i32, !dbg !2480
  %cmp1 = icmp eq i32 %conv, 0, !dbg !2481
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2482

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !2483

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2484

for.inc:                                          ; preds = %if.end
  %5 = load i64, i64* %i, align 8, !dbg !2485
  %inc = add i64 %5, 1, !dbg !2485
  store i64 %inc, i64* %i, align 8, !dbg !2485
  br label %for.cond, !dbg !2487

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i64, i64* %i, align 8, !dbg !2488
  %7 = load i64, i64* %maxlen.addr, align 8, !dbg !2490
  %cmp3 = icmp ugt i64 %6, %7, !dbg !2491
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !2492

if.then5:                                         ; preds = %for.end
  store i64 -1, i64* %retval, align 8, !dbg !2493
  br label %return, !dbg !2493

if.end6:                                          ; preds = %for.end
  %8 = load i64, i64* %i, align 8, !dbg !2494
  store i64 %8, i64* %retval, align 8, !dbg !2495
  br label %return, !dbg !2495

return:                                           ; preds = %if.end6, %if.then5
  %9 = load i64, i64* %retval, align 8, !dbg !2496
  ret i64 %9, !dbg !2496
}

declare i64 @__archive_read_consume(%struct.archive_read*, i64) #2

; Function Attrs: nounwind uwtable
define internal i64 @cab_dos_time(i8* %p) #0 !dbg !535 {
entry:
  %p.addr = alloca i8*, align 8
  %msTime = alloca i32, align 4
  %msDate = alloca i32, align 4
  %ts = alloca %struct.tm, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2497, metadata !638), !dbg !2498
  call void @llvm.dbg.declare(metadata i32* %msTime, metadata !2499, metadata !638), !dbg !2500
  call void @llvm.dbg.declare(metadata i32* %msDate, metadata !2501, metadata !638), !dbg !2502
  call void @llvm.dbg.declare(metadata %struct.tm* %ts, metadata !2503, metadata !638), !dbg !2517
  %0 = load i8*, i8** %p.addr, align 8, !dbg !2518
  %call = call zeroext i16 @archive_le16dec(i8* %0), !dbg !2519
  %conv = zext i16 %call to i32, !dbg !2519
  store i32 %conv, i32* %msDate, align 4, !dbg !2520
  %1 = load i8*, i8** %p.addr, align 8, !dbg !2521
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 2, !dbg !2522
  %call1 = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !2523
  %conv2 = zext i16 %call1 to i32, !dbg !2523
  store i32 %conv2, i32* %msTime, align 4, !dbg !2524
  %2 = bitcast %struct.tm* %ts to i8*, !dbg !2525
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 56, i32 8, i1 false), !dbg !2525
  %3 = load i32, i32* %msDate, align 4, !dbg !2526
  %shr = ashr i32 %3, 9, !dbg !2527
  %and = and i32 %shr, 127, !dbg !2528
  %add = add nsw i32 %and, 80, !dbg !2529
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 5, !dbg !2530
  store i32 %add, i32* %tm_year, align 4, !dbg !2531
  %4 = load i32, i32* %msDate, align 4, !dbg !2532
  %shr3 = ashr i32 %4, 5, !dbg !2533
  %and4 = and i32 %shr3, 15, !dbg !2534
  %sub = sub nsw i32 %and4, 1, !dbg !2535
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 4, !dbg !2536
  store i32 %sub, i32* %tm_mon, align 8, !dbg !2537
  %5 = load i32, i32* %msDate, align 4, !dbg !2538
  %and5 = and i32 %5, 31, !dbg !2539
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 3, !dbg !2540
  store i32 %and5, i32* %tm_mday, align 4, !dbg !2541
  %6 = load i32, i32* %msTime, align 4, !dbg !2542
  %shr6 = ashr i32 %6, 11, !dbg !2543
  %and7 = and i32 %shr6, 31, !dbg !2544
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 2, !dbg !2545
  store i32 %and7, i32* %tm_hour, align 8, !dbg !2546
  %7 = load i32, i32* %msTime, align 4, !dbg !2547
  %shr8 = ashr i32 %7, 5, !dbg !2548
  %and9 = and i32 %shr8, 63, !dbg !2549
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 1, !dbg !2550
  store i32 %and9, i32* %tm_min, align 4, !dbg !2551
  %8 = load i32, i32* %msTime, align 4, !dbg !2552
  %shl = shl i32 %8, 1, !dbg !2553
  %and10 = and i32 %shl, 62, !dbg !2554
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 0, !dbg !2555
  store i32 %and10, i32* %tm_sec, align 8, !dbg !2556
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %ts, i32 0, i32 8, !dbg !2557
  store i32 -1, i32* %tm_isdst, align 8, !dbg !2558
  %call11 = call i64 @mktime(%struct.tm* %ts) #8, !dbg !2559
  ret i64 %call11, !dbg !2560
}

; Function Attrs: nounwind uwtable
define internal i8* @cab_read_ahead_remaining(%struct.archive_read* %a, i64 %min, i64* %avail) #0 !dbg !538 {
entry:
  %retval = alloca i8*, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %min.addr = alloca i64, align 8
  %avail.addr = alloca i64*, align 8
  %p = alloca i8*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2561, metadata !638), !dbg !2562
  store i64 %min, i64* %min.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !2563, metadata !638), !dbg !2564
  store i64* %avail, i64** %avail.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %avail.addr, metadata !2565, metadata !638), !dbg !2566
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2567, metadata !638), !dbg !2568
  br label %while.cond, !dbg !2569

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %min.addr, align 8, !dbg !2570
  %cmp = icmp ugt i64 %0, 0, !dbg !2572
  br i1 %cmp, label %while.body, label %while.end, !dbg !2573

while.body:                                       ; preds = %while.cond
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2574
  %2 = load i64, i64* %min.addr, align 8, !dbg !2576
  %3 = load i64*, i64** %avail.addr, align 8, !dbg !2577
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %1, i64 %2, i64* %3), !dbg !2578
  store i8* %call, i8** %p, align 8, !dbg !2579
  %4 = load i8*, i8** %p, align 8, !dbg !2580
  %cmp1 = icmp ne i8* %4, null, !dbg !2582
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2583

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !2584
  store i8* %5, i8** %retval, align 8, !dbg !2585
  br label %return, !dbg !2585

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %min.addr, align 8, !dbg !2586
  %dec = add i64 %6, -1, !dbg !2586
  store i64 %dec, i64* %min.addr, align 8, !dbg !2586
  br label %while.cond, !dbg !2587

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !2589
  br label %return, !dbg !2589

return:                                           ; preds = %while.end, %if.then
  %7 = load i8*, i8** %retval, align 8, !dbg !2590
  ret i8* %7, !dbg !2590
}

declare %struct.archive_string* @archive_strncat(%struct.archive_string*, i8*, i64) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #7

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm*) #3

declare i32* @archive_entry_pathname_w(%struct.archive_entry*) #2

declare %struct.archive_wstring* @archive_wstrncat(%struct.archive_wstring*, i32*, i64) #2

; Function Attrs: nounwind readonly
declare i64 @wcslen(i32*) #4

declare void @archive_entry_copy_pathname_w(%struct.archive_entry*, i32*) #2

declare void @archive_clear_error(%struct.archive*) #2

; Function Attrs: nounwind uwtable
define internal i32 @cab_next_cfdata(%struct.archive_read* %a) #0 !dbg !550 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %skip = alloca i64, align 8
  %folder_index = alloca i32, align 4
  %p = alloca i8*, align 8
  %l = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2591, metadata !638), !dbg !2592
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !2593, metadata !638), !dbg !2594
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2595
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !2596
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !2596
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !2597
  %2 = load i8*, i8** %data, align 8, !dbg !2597
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !2598
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !2594
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !2599, metadata !638), !dbg !2600
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2601
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 7, !dbg !2602
  %5 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !2602
  store %struct.cfdata* %5, %struct.cfdata** %cfdata, align 8, !dbg !2600
  %6 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2603
  %cmp = icmp ne %struct.cfdata* %6, null, !dbg !2605
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2606

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2607
  %uncompressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %7, i32 0, i32 4, !dbg !2609
  %8 = load i16, i16* %uncompressed_bytes_remaining, align 2, !dbg !2609
  %conv = zext i16 %8 to i32, !dbg !2607
  %cmp1 = icmp sgt i32 %conv, 0, !dbg !2610
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2611

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !2612
  br label %return, !dbg !2612

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2613
  %cmp3 = icmp eq %struct.cfdata* %9, null, !dbg !2615
  br i1 %cmp3, label %if.then5, label %if.end35, !dbg !2616

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %skip, metadata !2617, metadata !638), !dbg !2619
  %10 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2620
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %10, i32 0, i32 5, !dbg !2621
  %11 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !2621
  %cfdata_index = getelementptr inbounds %struct.cffolder, %struct.cffolder* %11, i32 0, i32 6, !dbg !2622
  store i32 0, i32* %cfdata_index, align 8, !dbg !2623
  %12 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2624
  %entry_cffolder6 = getelementptr inbounds %struct.cab, %struct.cab* %12, i32 0, i32 5, !dbg !2625
  %13 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder6, align 8, !dbg !2625
  %cfdata_offset_in_cab = getelementptr inbounds %struct.cffolder, %struct.cffolder* %13, i32 0, i32 0, !dbg !2626
  %14 = load i32, i32* %cfdata_offset_in_cab, align 8, !dbg !2626
  %conv7 = zext i32 %14 to i64, !dbg !2624
  %15 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2627
  %cab_offset = getelementptr inbounds %struct.cab, %struct.cab* %15, i32 0, i32 8, !dbg !2628
  %16 = load i64, i64* %cab_offset, align 8, !dbg !2628
  %sub = sub nsw i64 %conv7, %16, !dbg !2629
  store i64 %sub, i64* %skip, align 8, !dbg !2630
  %17 = load i64, i64* %skip, align 8, !dbg !2631
  %cmp8 = icmp slt i64 %17, 0, !dbg !2633
  br i1 %cmp8, label %if.then10, label %if.end22, !dbg !2634

if.then10:                                        ; preds = %if.then5
  call void @llvm.dbg.declare(metadata i32* %folder_index, metadata !2635, metadata !638), !dbg !2637
  %18 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2638
  %entry_cffile = getelementptr inbounds %struct.cab, %struct.cab* %18, i32 0, i32 6, !dbg !2639
  %19 = load %struct.cffile*, %struct.cffile** %entry_cffile, align 8, !dbg !2639
  %folder = getelementptr inbounds %struct.cffile, %struct.cffile* %19, i32 0, i32 3, !dbg !2640
  %20 = load i16, i16* %folder, align 8, !dbg !2640
  %conv11 = zext i16 %20 to i32, !dbg !2638
  switch i32 %conv11, label %sw.default [
    i32 65533, label %sw.bb
    i32 65535, label %sw.bb
    i32 65534, label %sw.bb12
  ], !dbg !2641

sw.bb:                                            ; preds = %if.then10, %if.then10
  store i32 0, i32* %folder_index, align 4, !dbg !2642
  br label %sw.epilog, !dbg !2644

sw.bb12:                                          ; preds = %if.then10
  %21 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2645
  %cfheader = getelementptr inbounds %struct.cab, %struct.cab* %21, i32 0, i32 9, !dbg !2646
  %folder_count = getelementptr inbounds %struct.cfheader, %struct.cfheader* %cfheader, i32 0, i32 2, !dbg !2647
  %22 = load i16, i16* %folder_count, align 8, !dbg !2647
  %conv13 = zext i16 %22 to i32, !dbg !2645
  %sub14 = sub nsw i32 %conv13, 1, !dbg !2648
  store i32 %sub14, i32* %folder_index, align 4, !dbg !2649
  br label %sw.epilog, !dbg !2650

sw.default:                                       ; preds = %if.then10
  %23 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2651
  %entry_cffile15 = getelementptr inbounds %struct.cab, %struct.cab* %23, i32 0, i32 6, !dbg !2652
  %24 = load %struct.cffile*, %struct.cffile** %entry_cffile15, align 8, !dbg !2652
  %folder16 = getelementptr inbounds %struct.cffile, %struct.cffile* %24, i32 0, i32 3, !dbg !2653
  %25 = load i16, i16* %folder16, align 8, !dbg !2653
  %conv17 = zext i16 %25 to i32, !dbg !2651
  store i32 %conv17, i32* %folder_index, align 4, !dbg !2654
  br label %sw.epilog, !dbg !2655

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb
  %26 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2656
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %26, i32 0, i32 0, !dbg !2657
  %27 = load i32, i32* %folder_index, align 4, !dbg !2658
  %28 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2659
  %entry_cffolder18 = getelementptr inbounds %struct.cab, %struct.cab* %28, i32 0, i32 5, !dbg !2660
  %29 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder18, align 8, !dbg !2660
  %cfdata_offset_in_cab19 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %29, i32 0, i32 0, !dbg !2661
  %30 = load i32, i32* %cfdata_offset_in_cab19, align 8, !dbg !2661
  %conv20 = zext i32 %30 to i64, !dbg !2662
  %31 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2663
  %cab_offset21 = getelementptr inbounds %struct.cab, %struct.cab* %31, i32 0, i32 8, !dbg !2664
  %32 = load i64, i64* %cab_offset21, align 8, !dbg !2664
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.23, i32 0, i32 0), i32 %27, i64 %conv20, i64 %32), !dbg !2665
  store i32 -30, i32* %retval, align 4, !dbg !2666
  br label %return, !dbg !2666

if.end22:                                         ; preds = %if.then5
  %33 = load i64, i64* %skip, align 8, !dbg !2667
  %cmp23 = icmp sgt i64 %33, 0, !dbg !2669
  br i1 %cmp23, label %if.then25, label %if.end34, !dbg !2670

if.then25:                                        ; preds = %if.end22
  %34 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2671
  %35 = load i64, i64* %skip, align 8, !dbg !2674
  %call = call i64 @__archive_read_consume(%struct.archive_read* %34, i64 %35), !dbg !2675
  %cmp26 = icmp slt i64 %call, 0, !dbg !2676
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2677

if.then28:                                        ; preds = %if.then25
  store i32 -30, i32* %retval, align 4, !dbg !2678
  br label %return, !dbg !2678

if.end29:                                         ; preds = %if.then25
  %36 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2679
  %entry_cffolder30 = getelementptr inbounds %struct.cab, %struct.cab* %36, i32 0, i32 5, !dbg !2680
  %37 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder30, align 8, !dbg !2680
  %cfdata_offset_in_cab31 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %37, i32 0, i32 0, !dbg !2681
  %38 = load i32, i32* %cfdata_offset_in_cab31, align 8, !dbg !2681
  %conv32 = zext i32 %38 to i64, !dbg !2679
  %39 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2682
  %cab_offset33 = getelementptr inbounds %struct.cab, %struct.cab* %39, i32 0, i32 8, !dbg !2683
  store i64 %conv32, i64* %cab_offset33, align 8, !dbg !2684
  br label %if.end34, !dbg !2685

if.end34:                                         ; preds = %if.end29, %if.end22
  br label %if.end35, !dbg !2686

if.end35:                                         ; preds = %if.end34, %if.end
  %40 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2687
  %entry_cffolder36 = getelementptr inbounds %struct.cab, %struct.cab* %40, i32 0, i32 5, !dbg !2689
  %41 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder36, align 8, !dbg !2689
  %cfdata_index37 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %41, i32 0, i32 6, !dbg !2690
  %42 = load i32, i32* %cfdata_index37, align 8, !dbg !2690
  %43 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2691
  %entry_cffolder38 = getelementptr inbounds %struct.cab, %struct.cab* %43, i32 0, i32 5, !dbg !2692
  %44 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder38, align 8, !dbg !2692
  %cfdata_count = getelementptr inbounds %struct.cffolder, %struct.cffolder* %44, i32 0, i32 1, !dbg !2693
  %45 = load i16, i16* %cfdata_count, align 4, !dbg !2693
  %conv39 = zext i16 %45 to i32, !dbg !2691
  %cmp40 = icmp slt i32 %42, %conv39, !dbg !2694
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !2695

if.then42:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2696, metadata !638), !dbg !2698
  call void @llvm.dbg.declare(metadata i32* %l, metadata !2699, metadata !638), !dbg !2700
  %46 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2701
  %entry_cffolder43 = getelementptr inbounds %struct.cab, %struct.cab* %46, i32 0, i32 5, !dbg !2702
  %47 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder43, align 8, !dbg !2702
  %cfdata44 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %47, i32 0, i32 5, !dbg !2703
  store %struct.cfdata* %cfdata44, %struct.cfdata** %cfdata, align 8, !dbg !2704
  %48 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2705
  %entry_cffolder45 = getelementptr inbounds %struct.cab, %struct.cab* %48, i32 0, i32 5, !dbg !2706
  %49 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder45, align 8, !dbg !2706
  %cfdata_index46 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %49, i32 0, i32 6, !dbg !2707
  %50 = load i32, i32* %cfdata_index46, align 8, !dbg !2708
  %inc = add nsw i32 %50, 1, !dbg !2708
  store i32 %inc, i32* %cfdata_index46, align 8, !dbg !2708
  %51 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2709
  %52 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2710
  %entry_cfdata47 = getelementptr inbounds %struct.cab, %struct.cab* %52, i32 0, i32 7, !dbg !2711
  store %struct.cfdata* %51, %struct.cfdata** %entry_cfdata47, align 8, !dbg !2712
  %53 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2713
  %sum_calculated = getelementptr inbounds %struct.cfdata, %struct.cfdata* %53, i32 0, i32 10, !dbg !2714
  store i32 0, i32* %sum_calculated, align 8, !dbg !2715
  %54 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2716
  %sum_extra_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %54, i32 0, i32 12, !dbg !2717
  store i32 0, i32* %sum_extra_avail, align 8, !dbg !2718
  %55 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2719
  %sum_ptr = getelementptr inbounds %struct.cfdata, %struct.cfdata* %55, i32 0, i32 13, !dbg !2720
  store i8* null, i8** %sum_ptr, align 8, !dbg !2721
  store i32 8, i32* %l, align 4, !dbg !2722
  %56 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2723
  %cfheader48 = getelementptr inbounds %struct.cab, %struct.cab* %56, i32 0, i32 9, !dbg !2725
  %flags = getelementptr inbounds %struct.cfheader, %struct.cfheader* %cfheader48, i32 0, i32 4, !dbg !2726
  %57 = load i16, i16* %flags, align 4, !dbg !2726
  %conv49 = zext i16 %57 to i32, !dbg !2723
  %and = and i32 %conv49, 4, !dbg !2727
  %tobool = icmp ne i32 %and, 0, !dbg !2727
  br i1 %tobool, label %if.then50, label %if.end54, !dbg !2728

if.then50:                                        ; preds = %if.then42
  %58 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2729
  %cfheader51 = getelementptr inbounds %struct.cab, %struct.cab* %58, i32 0, i32 9, !dbg !2730
  %cfdata52 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %cfheader51, i32 0, i32 10, !dbg !2731
  %59 = load i8, i8* %cfdata52, align 1, !dbg !2731
  %conv53 = zext i8 %59 to i32, !dbg !2729
  %60 = load i32, i32* %l, align 4, !dbg !2732
  %add = add nsw i32 %60, %conv53, !dbg !2732
  store i32 %add, i32* %l, align 4, !dbg !2732
  br label %if.end54, !dbg !2733

if.end54:                                         ; preds = %if.then50, %if.then42
  %61 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2734
  %62 = load i32, i32* %l, align 4, !dbg !2736
  %conv55 = sext i32 %62 to i64, !dbg !2736
  %call56 = call i8* @__archive_read_ahead(%struct.archive_read* %61, i64 %conv55, i64* null), !dbg !2737
  store i8* %call56, i8** %p, align 8, !dbg !2738
  %cmp57 = icmp eq i8* %call56, null, !dbg !2739
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !2740

if.then59:                                        ; preds = %if.end54
  %63 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2741
  %call60 = call i32 @truncated_error(%struct.archive_read* %63), !dbg !2742
  store i32 %call60, i32* %retval, align 4, !dbg !2743
  br label %return, !dbg !2743

if.end61:                                         ; preds = %if.end54
  %64 = load i8*, i8** %p, align 8, !dbg !2744
  %add.ptr = getelementptr inbounds i8, i8* %64, i64 0, !dbg !2745
  %call62 = call i32 @archive_le32dec(i8* %add.ptr), !dbg !2746
  %65 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2747
  %sum = getelementptr inbounds %struct.cfdata, %struct.cfdata* %65, i32 0, i32 0, !dbg !2748
  store i32 %call62, i32* %sum, align 8, !dbg !2749
  %66 = load i8*, i8** %p, align 8, !dbg !2750
  %add.ptr63 = getelementptr inbounds i8, i8* %66, i64 4, !dbg !2751
  %call64 = call zeroext i16 @archive_le16dec(i8* %add.ptr63), !dbg !2752
  %67 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2753
  %compressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %67, i32 0, i32 1, !dbg !2754
  store i16 %call64, i16* %compressed_size, align 4, !dbg !2755
  %68 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2756
  %compressed_size65 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %68, i32 0, i32 1, !dbg !2757
  %69 = load i16, i16* %compressed_size65, align 4, !dbg !2757
  %70 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2758
  %compressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %70, i32 0, i32 2, !dbg !2759
  store i16 %69, i16* %compressed_bytes_remaining, align 2, !dbg !2760
  %71 = load i8*, i8** %p, align 8, !dbg !2761
  %add.ptr66 = getelementptr inbounds i8, i8* %71, i64 6, !dbg !2762
  %call67 = call zeroext i16 @archive_le16dec(i8* %add.ptr66), !dbg !2763
  %72 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2764
  %uncompressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %72, i32 0, i32 3, !dbg !2765
  store i16 %call67, i16* %uncompressed_size, align 8, !dbg !2766
  %73 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2767
  %uncompressed_size68 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %73, i32 0, i32 3, !dbg !2768
  %74 = load i16, i16* %uncompressed_size68, align 8, !dbg !2768
  %75 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2769
  %uncompressed_bytes_remaining69 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %75, i32 0, i32 4, !dbg !2770
  store i16 %74, i16* %uncompressed_bytes_remaining69, align 2, !dbg !2771
  %76 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2772
  %uncompressed_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %76, i32 0, i32 5, !dbg !2773
  store i16 0, i16* %uncompressed_avail, align 4, !dbg !2774
  %77 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2775
  %read_offset = getelementptr inbounds %struct.cfdata, %struct.cfdata* %77, i32 0, i32 6, !dbg !2776
  store i16 0, i16* %read_offset, align 2, !dbg !2777
  %78 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2778
  %unconsumed = getelementptr inbounds %struct.cfdata, %struct.cfdata* %78, i32 0, i32 7, !dbg !2779
  store i64 0, i64* %unconsumed, align 8, !dbg !2780
  %79 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2781
  %compressed_size70 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %79, i32 0, i32 1, !dbg !2783
  %80 = load i16, i16* %compressed_size70, align 4, !dbg !2783
  %conv71 = zext i16 %80 to i32, !dbg !2781
  %cmp72 = icmp eq i32 %conv71, 0, !dbg !2784
  br i1 %cmp72, label %if.then78, label %lor.lhs.false, !dbg !2785

lor.lhs.false:                                    ; preds = %if.end61
  %81 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2786
  %compressed_size74 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %81, i32 0, i32 1, !dbg !2787
  %82 = load i16, i16* %compressed_size74, align 4, !dbg !2787
  %conv75 = zext i16 %82 to i32, !dbg !2786
  %cmp76 = icmp sgt i32 %conv75, 38912, !dbg !2788
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !2789

if.then78:                                        ; preds = %lor.lhs.false, %if.end61
  br label %invalid, !dbg !2791

if.end79:                                         ; preds = %lor.lhs.false
  %83 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2792
  %uncompressed_size80 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %83, i32 0, i32 3, !dbg !2794
  %84 = load i16, i16* %uncompressed_size80, align 8, !dbg !2794
  %conv81 = zext i16 %84 to i32, !dbg !2792
  %cmp82 = icmp sgt i32 %conv81, 32768, !dbg !2795
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !2796

if.then84:                                        ; preds = %if.end79
  br label %invalid, !dbg !2797

if.end85:                                         ; preds = %if.end79
  %85 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2798
  %uncompressed_size86 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %85, i32 0, i32 3, !dbg !2800
  %86 = load i16, i16* %uncompressed_size86, align 8, !dbg !2800
  %conv87 = zext i16 %86 to i32, !dbg !2798
  %cmp88 = icmp eq i32 %conv87, 0, !dbg !2801
  br i1 %cmp88, label %if.then90, label %if.end98, !dbg !2802

if.then90:                                        ; preds = %if.end85
  %87 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2803
  %entry_cffile91 = getelementptr inbounds %struct.cab, %struct.cab* %87, i32 0, i32 6, !dbg !2805
  %88 = load %struct.cffile*, %struct.cffile** %entry_cffile91, align 8, !dbg !2805
  %folder92 = getelementptr inbounds %struct.cffile, %struct.cffile* %88, i32 0, i32 3, !dbg !2806
  %89 = load i16, i16* %folder92, align 8, !dbg !2806
  %conv93 = zext i16 %89 to i32, !dbg !2803
  switch i32 %conv93, label %sw.default96 [
    i32 65535, label %sw.bb94
    i32 65534, label %sw.bb94
    i32 65533, label %sw.bb95
  ], !dbg !2807

sw.bb94:                                          ; preds = %if.then90, %if.then90
  br label %sw.epilog97, !dbg !2808

sw.bb95:                                          ; preds = %if.then90
  br label %sw.default96, !dbg !2810

sw.default96:                                     ; preds = %if.then90, %sw.bb95
  br label %invalid, !dbg !2812

sw.epilog97:                                      ; preds = %sw.bb94
  br label %if.end98, !dbg !2813

if.end98:                                         ; preds = %sw.epilog97, %if.end85
  %90 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2814
  %entry_cffolder99 = getelementptr inbounds %struct.cab, %struct.cab* %90, i32 0, i32 5, !dbg !2816
  %91 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder99, align 8, !dbg !2816
  %cfdata_index100 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %91, i32 0, i32 6, !dbg !2817
  %92 = load i32, i32* %cfdata_index100, align 8, !dbg !2817
  %93 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2818
  %entry_cffolder101 = getelementptr inbounds %struct.cab, %struct.cab* %93, i32 0, i32 5, !dbg !2819
  %94 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder101, align 8, !dbg !2819
  %cfdata_count102 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %94, i32 0, i32 1, !dbg !2820
  %95 = load i16, i16* %cfdata_count102, align 4, !dbg !2820
  %conv103 = zext i16 %95 to i32, !dbg !2818
  %cmp104 = icmp slt i32 %92, %conv103, !dbg !2821
  br i1 %cmp104, label %land.lhs.true106, label %if.end112, !dbg !2822

land.lhs.true106:                                 ; preds = %if.end98
  %96 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2823
  %uncompressed_size107 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %96, i32 0, i32 3, !dbg !2824
  %97 = load i16, i16* %uncompressed_size107, align 8, !dbg !2824
  %conv108 = zext i16 %97 to i32, !dbg !2823
  %cmp109 = icmp ne i32 %conv108, 32768, !dbg !2825
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !2826

if.then111:                                       ; preds = %land.lhs.true106
  br label %invalid, !dbg !2827

if.end112:                                        ; preds = %land.lhs.true106, %if.end98
  %98 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2828
  %entry_cffolder113 = getelementptr inbounds %struct.cab, %struct.cab* %98, i32 0, i32 5, !dbg !2830
  %99 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder113, align 8, !dbg !2830
  %comptype = getelementptr inbounds %struct.cffolder, %struct.cffolder* %99, i32 0, i32 2, !dbg !2831
  %100 = load i16, i16* %comptype, align 2, !dbg !2831
  %conv114 = zext i16 %100 to i32, !dbg !2828
  %cmp115 = icmp eq i32 %conv114, 0, !dbg !2832
  br i1 %cmp115, label %land.lhs.true117, label %if.end125, !dbg !2833

land.lhs.true117:                                 ; preds = %if.end112
  %101 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2834
  %compressed_size118 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %101, i32 0, i32 1, !dbg !2835
  %102 = load i16, i16* %compressed_size118, align 4, !dbg !2835
  %conv119 = zext i16 %102 to i32, !dbg !2834
  %103 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2836
  %uncompressed_size120 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %103, i32 0, i32 3, !dbg !2837
  %104 = load i16, i16* %uncompressed_size120, align 8, !dbg !2837
  %conv121 = zext i16 %104 to i32, !dbg !2836
  %cmp122 = icmp ne i32 %conv119, %conv121, !dbg !2838
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !2839

if.then124:                                       ; preds = %land.lhs.true117
  br label %invalid, !dbg !2840

if.end125:                                        ; preds = %land.lhs.true117, %if.end112
  %105 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2841
  %memimage_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %105, i32 0, i32 8, !dbg !2843
  %106 = load i64, i64* %memimage_size, align 8, !dbg !2843
  %107 = load i32, i32* %l, align 4, !dbg !2844
  %conv126 = sext i32 %107 to i64, !dbg !2845
  %cmp127 = icmp ult i64 %106, %conv126, !dbg !2846
  br i1 %cmp127, label %if.then129, label %if.end141, !dbg !2847

if.then129:                                       ; preds = %if.end125
  %108 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2848
  %memimage = getelementptr inbounds %struct.cfdata, %struct.cfdata* %108, i32 0, i32 9, !dbg !2850
  %109 = load i8*, i8** %memimage, align 8, !dbg !2850
  call void @free(i8* %109) #8, !dbg !2851
  %110 = load i32, i32* %l, align 4, !dbg !2852
  %conv130 = sext i32 %110 to i64, !dbg !2852
  %call131 = call noalias i8* @malloc(i64 %conv130) #8, !dbg !2853
  %111 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2854
  %memimage132 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %111, i32 0, i32 9, !dbg !2855
  store i8* %call131, i8** %memimage132, align 8, !dbg !2856
  %112 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2857
  %memimage133 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %112, i32 0, i32 9, !dbg !2859
  %113 = load i8*, i8** %memimage133, align 8, !dbg !2859
  %cmp134 = icmp eq i8* %113, null, !dbg !2860
  br i1 %cmp134, label %if.then136, label %if.end138, !dbg !2861

if.then136:                                       ; preds = %if.then129
  %114 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2862
  %archive137 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %114, i32 0, i32 0, !dbg !2864
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive137, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0)), !dbg !2865
  store i32 -30, i32* %retval, align 4, !dbg !2866
  br label %return, !dbg !2866

if.end138:                                        ; preds = %if.then129
  %115 = load i32, i32* %l, align 4, !dbg !2867
  %conv139 = sext i32 %115 to i64, !dbg !2867
  %116 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2868
  %memimage_size140 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %116, i32 0, i32 8, !dbg !2869
  store i64 %conv139, i64* %memimage_size140, align 8, !dbg !2870
  br label %if.end141, !dbg !2871

if.end141:                                        ; preds = %if.end138, %if.end125
  %117 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2872
  %memimage142 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %117, i32 0, i32 9, !dbg !2873
  %118 = load i8*, i8** %memimage142, align 8, !dbg !2873
  %119 = load i8*, i8** %p, align 8, !dbg !2874
  %120 = load i32, i32* %l, align 4, !dbg !2875
  %conv143 = sext i32 %120 to i64, !dbg !2875
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 %conv143, i32 1, i1 false), !dbg !2876
  %121 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2877
  %122 = load i32, i32* %l, align 4, !dbg !2878
  %conv144 = sext i32 %122 to i64, !dbg !2878
  %call145 = call i64 @__archive_read_consume(%struct.archive_read* %121, i64 %conv144), !dbg !2879
  %123 = load i32, i32* %l, align 4, !dbg !2880
  %conv146 = sext i32 %123 to i64, !dbg !2880
  %124 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2881
  %cab_offset147 = getelementptr inbounds %struct.cab, %struct.cab* %124, i32 0, i32 8, !dbg !2882
  %125 = load i64, i64* %cab_offset147, align 8, !dbg !2883
  %add148 = add nsw i64 %125, %conv146, !dbg !2883
  store i64 %add148, i64* %cab_offset147, align 8, !dbg !2883
  br label %if.end164, !dbg !2884

if.else:                                          ; preds = %if.end35
  %126 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2885
  %entry_cffolder149 = getelementptr inbounds %struct.cab, %struct.cab* %126, i32 0, i32 5, !dbg !2888
  %127 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder149, align 8, !dbg !2888
  %cfdata_count150 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %127, i32 0, i32 1, !dbg !2889
  %128 = load i16, i16* %cfdata_count150, align 4, !dbg !2889
  %conv151 = zext i16 %128 to i32, !dbg !2885
  %cmp152 = icmp sgt i32 %conv151, 0, !dbg !2890
  br i1 %cmp152, label %if.then154, label %if.else159, !dbg !2885

if.then154:                                       ; preds = %if.else
  %129 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2891
  %compressed_size155 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %129, i32 0, i32 1, !dbg !2893
  store i16 0, i16* %compressed_size155, align 4, !dbg !2894
  %130 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2895
  %uncompressed_size156 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %130, i32 0, i32 3, !dbg !2896
  store i16 0, i16* %uncompressed_size156, align 8, !dbg !2897
  %131 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2898
  %compressed_bytes_remaining157 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %131, i32 0, i32 2, !dbg !2899
  store i16 0, i16* %compressed_bytes_remaining157, align 2, !dbg !2900
  %132 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2901
  %uncompressed_bytes_remaining158 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %132, i32 0, i32 4, !dbg !2902
  store i16 0, i16* %uncompressed_bytes_remaining158, align 2, !dbg !2903
  br label %if.end163, !dbg !2904

if.else159:                                       ; preds = %if.else
  %133 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2905
  %entry_cffolder160 = getelementptr inbounds %struct.cab, %struct.cab* %133, i32 0, i32 5, !dbg !2907
  %134 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder160, align 8, !dbg !2907
  %cfdata161 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %134, i32 0, i32 5, !dbg !2908
  store %struct.cfdata* %cfdata161, %struct.cfdata** %cfdata, align 8, !dbg !2909
  %135 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2910
  %136 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2911
  %entry_cfdata162 = getelementptr inbounds %struct.cab, %struct.cab* %136, i32 0, i32 7, !dbg !2912
  store %struct.cfdata* %135, %struct.cfdata** %entry_cfdata162, align 8, !dbg !2913
  %137 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2914
  %138 = bitcast %struct.cfdata* %137 to i8*, !dbg !2915
  call void @llvm.memset.p0i8.i64(i8* %138, i8 0, i64 64, i32 8, i1 false), !dbg !2915
  br label %if.end163

if.end163:                                        ; preds = %if.else159, %if.then154
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end141
  store i32 0, i32* %retval, align 4, !dbg !2916
  br label %return, !dbg !2916

invalid:                                          ; preds = %if.then124, %if.then111, %sw.default96, %if.then84, %if.then78
  %139 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2917
  %archive165 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %139, i32 0, i32 0, !dbg !2918
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive165, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0)), !dbg !2919
  store i32 -30, i32* %retval, align 4, !dbg !2920
  br label %return, !dbg !2920

return:                                           ; preds = %invalid, %if.end164, %if.then136, %if.then59, %if.then28, %sw.epilog, %if.then
  %140 = load i32, i32* %retval, align 4, !dbg !2921
  ret i32 %140, !dbg !2921
}

; Function Attrs: nounwind uwtable
define internal i64 @cab_consume_cfdata(%struct.archive_read* %a, i64 %consumed_bytes) #0 !dbg !551 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %consumed_bytes.addr = alloca i64, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %cbytes = alloca i64, align 8
  %rbytes = alloca i64, align 8
  %err = alloca i32, align 4
  %avail = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2922, metadata !638), !dbg !2923
  store i64 %consumed_bytes, i64* %consumed_bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %consumed_bytes.addr, metadata !2924, metadata !638), !dbg !2925
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !2926, metadata !638), !dbg !2927
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2928
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !2929
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !2929
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !2930
  %2 = load i8*, i8** %data, align 8, !dbg !2930
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !2931
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !2927
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !2932, metadata !638), !dbg !2933
  call void @llvm.dbg.declare(metadata i64* %cbytes, metadata !2934, metadata !638), !dbg !2935
  call void @llvm.dbg.declare(metadata i64* %rbytes, metadata !2936, metadata !638), !dbg !2937
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2938, metadata !638), !dbg !2939
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2940
  %5 = load i64, i64* %consumed_bytes.addr, align 8, !dbg !2941
  %call = call i64 @cab_minimum_consume_cfdata(%struct.archive_read* %4, i64 %5), !dbg !2942
  store i64 %call, i64* %rbytes, align 8, !dbg !2943
  %6 = load i64, i64* %rbytes, align 8, !dbg !2944
  %cmp = icmp slt i64 %6, 0, !dbg !2946
  br i1 %cmp, label %if.then, label %if.end, !dbg !2947

if.then:                                          ; preds = %entry
  store i64 -30, i64* %retval, align 8, !dbg !2948
  br label %return, !dbg !2948

if.end:                                           ; preds = %entry
  %7 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2949
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %7, i32 0, i32 7, !dbg !2950
  %8 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !2950
  store %struct.cfdata* %8, %struct.cfdata** %cfdata, align 8, !dbg !2951
  br label %while.cond, !dbg !2952

while.cond:                                       ; preds = %while.end, %if.end82, %if.end48, %if.end
  %9 = load i64, i64* %rbytes, align 8, !dbg !2953
  %cmp1 = icmp sgt i64 %9, 0, !dbg !2955
  br i1 %cmp1, label %while.body, label %while.end104, !dbg !2956

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !2957, metadata !638), !dbg !2959
  %10 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2960
  %compressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %10, i32 0, i32 1, !dbg !2962
  %11 = load i16, i16* %compressed_size, align 4, !dbg !2962
  %conv = zext i16 %11 to i32, !dbg !2960
  %cmp2 = icmp eq i32 %conv, 0, !dbg !2963
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2964

if.then4:                                         ; preds = %while.body
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2965
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %12, i32 0, i32 0, !dbg !2967
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0)), !dbg !2968
  store i64 -30, i64* %retval, align 8, !dbg !2969
  br label %return, !dbg !2969

if.end5:                                          ; preds = %while.body
  %13 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2970
  %uncompressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %13, i32 0, i32 4, !dbg !2971
  %14 = load i16, i16* %uncompressed_bytes_remaining, align 2, !dbg !2971
  %conv6 = zext i16 %14 to i64, !dbg !2970
  store i64 %conv6, i64* %cbytes, align 8, !dbg !2972
  %15 = load i64, i64* %cbytes, align 8, !dbg !2973
  %16 = load i64, i64* %rbytes, align 8, !dbg !2975
  %cmp7 = icmp sgt i64 %15, %16, !dbg !2976
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2977

if.then9:                                         ; preds = %if.end5
  %17 = load i64, i64* %rbytes, align 8, !dbg !2978
  store i64 %17, i64* %cbytes, align 8, !dbg !2979
  br label %if.end10, !dbg !2980

if.end10:                                         ; preds = %if.then9, %if.end5
  %18 = load i64, i64* %cbytes, align 8, !dbg !2981
  %19 = load i64, i64* %rbytes, align 8, !dbg !2982
  %sub = sub nsw i64 %19, %18, !dbg !2982
  store i64 %sub, i64* %rbytes, align 8, !dbg !2982
  %20 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !2983
  %uncompressed_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %20, i32 0, i32 5, !dbg !2985
  %21 = load i16, i16* %uncompressed_avail, align 4, !dbg !2985
  %conv11 = zext i16 %21 to i32, !dbg !2983
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !2986
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !2987

land.lhs.true:                                    ; preds = %if.end10
  %22 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2988
  %entry_cffile = getelementptr inbounds %struct.cab, %struct.cab* %22, i32 0, i32 6, !dbg !2989
  %23 = load %struct.cffile*, %struct.cffile** %entry_cffile, align 8, !dbg !2989
  %folder = getelementptr inbounds %struct.cffile, %struct.cffile* %23, i32 0, i32 3, !dbg !2990
  %24 = load i16, i16* %folder, align 8, !dbg !2990
  %conv14 = zext i16 %24 to i32, !dbg !2988
  %cmp15 = icmp eq i32 %conv14, 65535, !dbg !2991
  br i1 %cmp15, label %if.then22, label %lor.lhs.false, !dbg !2992

lor.lhs.false:                                    ; preds = %land.lhs.true
  %25 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !2993
  %entry_cffile17 = getelementptr inbounds %struct.cab, %struct.cab* %25, i32 0, i32 6, !dbg !2994
  %26 = load %struct.cffile*, %struct.cffile** %entry_cffile17, align 8, !dbg !2994
  %folder18 = getelementptr inbounds %struct.cffile, %struct.cffile* %26, i32 0, i32 3, !dbg !2995
  %27 = load i16, i16* %folder18, align 8, !dbg !2995
  %conv19 = zext i16 %27 to i32, !dbg !2993
  %cmp20 = icmp eq i32 %conv19, 65533, !dbg !2996
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !2997

if.then22:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %28 = load i64, i64* %cbytes, align 8, !dbg !2999
  %29 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3002
  %uncompressed_bytes_remaining23 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %29, i32 0, i32 4, !dbg !3003
  %30 = load i16, i16* %uncompressed_bytes_remaining23, align 2, !dbg !3003
  %conv24 = zext i16 %30 to i64, !dbg !3002
  %cmp25 = icmp eq i64 %28, %conv24, !dbg !3004
  br i1 %cmp25, label %if.then27, label %if.end49, !dbg !3005

if.then27:                                        ; preds = %if.then22
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3006
  %32 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3008
  %compressed_size28 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %32, i32 0, i32 1, !dbg !3009
  %33 = load i16, i16* %compressed_size28, align 4, !dbg !3009
  %conv29 = zext i16 %33 to i64, !dbg !3008
  %call30 = call i64 @__archive_read_consume(%struct.archive_read* %31, i64 %conv29), !dbg !3010
  %34 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3011
  %compressed_size31 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %34, i32 0, i32 1, !dbg !3012
  %35 = load i16, i16* %compressed_size31, align 4, !dbg !3012
  %conv32 = zext i16 %35 to i64, !dbg !3011
  %36 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3013
  %cab_offset = getelementptr inbounds %struct.cab, %struct.cab* %36, i32 0, i32 8, !dbg !3014
  %37 = load i64, i64* %cab_offset, align 8, !dbg !3015
  %add = add nsw i64 %37, %conv32, !dbg !3015
  store i64 %add, i64* %cab_offset, align 8, !dbg !3015
  %38 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3016
  %compressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %38, i32 0, i32 2, !dbg !3017
  store i16 0, i16* %compressed_bytes_remaining, align 2, !dbg !3018
  %39 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3019
  %uncompressed_bytes_remaining33 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %39, i32 0, i32 4, !dbg !3020
  store i16 0, i16* %uncompressed_bytes_remaining33, align 2, !dbg !3021
  %40 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3022
  %call34 = call i32 @cab_next_cfdata(%struct.archive_read* %40), !dbg !3023
  store i32 %call34, i32* %err, align 4, !dbg !3024
  %41 = load i32, i32* %err, align 4, !dbg !3025
  %cmp35 = icmp slt i32 %41, 0, !dbg !3027
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !3028

if.then37:                                        ; preds = %if.then27
  %42 = load i32, i32* %err, align 4, !dbg !3029
  %conv38 = sext i32 %42 to i64, !dbg !3030
  store i64 %conv38, i64* %retval, align 8, !dbg !3031
  br label %return, !dbg !3031

if.end39:                                         ; preds = %if.then27
  %43 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3032
  %entry_cfdata40 = getelementptr inbounds %struct.cab, %struct.cab* %43, i32 0, i32 7, !dbg !3033
  %44 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata40, align 8, !dbg !3033
  store %struct.cfdata* %44, %struct.cfdata** %cfdata, align 8, !dbg !3034
  %45 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3035
  %uncompressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %45, i32 0, i32 3, !dbg !3037
  %46 = load i16, i16* %uncompressed_size, align 8, !dbg !3037
  %conv41 = zext i16 %46 to i32, !dbg !3035
  %cmp42 = icmp eq i32 %conv41, 0, !dbg !3038
  br i1 %cmp42, label %if.then44, label %if.end48, !dbg !3039

if.then44:                                        ; preds = %if.end39
  %47 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3040
  %entry_cffile45 = getelementptr inbounds %struct.cab, %struct.cab* %47, i32 0, i32 6, !dbg !3042
  %48 = load %struct.cffile*, %struct.cffile** %entry_cffile45, align 8, !dbg !3042
  %folder46 = getelementptr inbounds %struct.cffile, %struct.cffile* %48, i32 0, i32 3, !dbg !3043
  %49 = load i16, i16* %folder46, align 8, !dbg !3043
  %conv47 = zext i16 %49 to i32, !dbg !3040
  switch i32 %conv47, label %sw.default [
    i32 65535, label %sw.bb
    i32 65534, label %sw.bb
    i32 65533, label %sw.bb
  ], !dbg !3044

sw.bb:                                            ; preds = %if.then44, %if.then44, %if.then44
  store i64 0, i64* %rbytes, align 8, !dbg !3045
  br label %sw.epilog, !dbg !3047

sw.default:                                       ; preds = %if.then44
  br label %sw.epilog, !dbg !3048

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end48, !dbg !3049

if.end48:                                         ; preds = %sw.epilog, %if.end39
  br label %while.cond, !dbg !3050

if.end49:                                         ; preds = %if.then22
  %50 = load i64, i64* %cbytes, align 8, !dbg !3051
  %conv50 = trunc i64 %50 to i16, !dbg !3052
  %conv51 = zext i16 %conv50 to i32, !dbg !3052
  %51 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3053
  %read_offset = getelementptr inbounds %struct.cfdata, %struct.cfdata* %51, i32 0, i32 6, !dbg !3054
  %52 = load i16, i16* %read_offset, align 2, !dbg !3055
  %conv52 = zext i16 %52 to i32, !dbg !3055
  %add53 = add nsw i32 %conv52, %conv51, !dbg !3055
  %conv54 = trunc i32 %add53 to i16, !dbg !3055
  store i16 %conv54, i16* %read_offset, align 2, !dbg !3055
  %53 = load i64, i64* %cbytes, align 8, !dbg !3056
  %conv55 = trunc i64 %53 to i16, !dbg !3057
  %conv56 = zext i16 %conv55 to i32, !dbg !3057
  %54 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3058
  %uncompressed_bytes_remaining57 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %54, i32 0, i32 4, !dbg !3059
  %55 = load i16, i16* %uncompressed_bytes_remaining57, align 2, !dbg !3060
  %conv58 = zext i16 %55 to i32, !dbg !3060
  %sub59 = sub nsw i32 %conv58, %conv56, !dbg !3060
  %conv60 = trunc i32 %sub59 to i16, !dbg !3060
  store i16 %conv60, i16* %uncompressed_bytes_remaining57, align 2, !dbg !3060
  br label %while.end104, !dbg !3061

if.else:                                          ; preds = %lor.lhs.false, %if.end10
  %56 = load i64, i64* %cbytes, align 8, !dbg !3062
  %cmp61 = icmp eq i64 %56, 0, !dbg !3064
  br i1 %cmp61, label %if.then63, label %if.end83, !dbg !3065

if.then63:                                        ; preds = %if.else
  %57 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3066
  %call64 = call i32 @cab_next_cfdata(%struct.archive_read* %57), !dbg !3068
  store i32 %call64, i32* %err, align 4, !dbg !3069
  %58 = load i32, i32* %err, align 4, !dbg !3070
  %cmp65 = icmp slt i32 %58, 0, !dbg !3072
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !3073

if.then67:                                        ; preds = %if.then63
  %59 = load i32, i32* %err, align 4, !dbg !3074
  %conv68 = sext i32 %59 to i64, !dbg !3075
  store i64 %conv68, i64* %retval, align 8, !dbg !3076
  br label %return, !dbg !3076

if.end69:                                         ; preds = %if.then63
  %60 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3077
  %entry_cfdata70 = getelementptr inbounds %struct.cab, %struct.cab* %60, i32 0, i32 7, !dbg !3078
  %61 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata70, align 8, !dbg !3078
  store %struct.cfdata* %61, %struct.cfdata** %cfdata, align 8, !dbg !3079
  %62 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3080
  %uncompressed_size71 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %62, i32 0, i32 3, !dbg !3082
  %63 = load i16, i16* %uncompressed_size71, align 8, !dbg !3082
  %conv72 = zext i16 %63 to i32, !dbg !3080
  %cmp73 = icmp eq i32 %conv72, 0, !dbg !3083
  br i1 %cmp73, label %if.then75, label %if.end82, !dbg !3084

if.then75:                                        ; preds = %if.end69
  %64 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3085
  %entry_cffile76 = getelementptr inbounds %struct.cab, %struct.cab* %64, i32 0, i32 6, !dbg !3087
  %65 = load %struct.cffile*, %struct.cffile** %entry_cffile76, align 8, !dbg !3087
  %folder77 = getelementptr inbounds %struct.cffile, %struct.cffile* %65, i32 0, i32 3, !dbg !3088
  %66 = load i16, i16* %folder77, align 8, !dbg !3088
  %conv78 = zext i16 %66 to i32, !dbg !3085
  switch i32 %conv78, label %sw.default80 [
    i32 65535, label %sw.bb79
    i32 65534, label %sw.bb79
    i32 65533, label %sw.bb79
  ], !dbg !3089

sw.bb79:                                          ; preds = %if.then75, %if.then75, %if.then75
  store i64 -30, i64* %retval, align 8, !dbg !3090
  br label %return, !dbg !3090

sw.default80:                                     ; preds = %if.then75
  br label %sw.epilog81, !dbg !3092

sw.epilog81:                                      ; preds = %sw.default80
  br label %if.end82, !dbg !3093

if.end82:                                         ; preds = %sw.epilog81, %if.end69
  br label %while.cond, !dbg !3094

if.end83:                                         ; preds = %if.else
  br label %if.end84

if.end84:                                         ; preds = %if.end83
  br label %while.cond85, !dbg !3095

while.cond85:                                     ; preds = %if.end102, %if.end84
  %67 = load i64, i64* %cbytes, align 8, !dbg !3096
  %cmp86 = icmp sgt i64 %67, 0, !dbg !3097
  br i1 %cmp86, label %while.body88, label %while.end, !dbg !3098

while.body88:                                     ; preds = %while.cond85
  %68 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3099
  %call89 = call i8* @cab_read_ahead_cfdata(%struct.archive_read* %68, i64* %avail), !dbg !3101
  %69 = load i64, i64* %avail, align 8, !dbg !3102
  %cmp90 = icmp sle i64 %69, 0, !dbg !3104
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3105

if.then92:                                        ; preds = %while.body88
  store i64 -30, i64* %retval, align 8, !dbg !3106
  br label %return, !dbg !3106

if.end93:                                         ; preds = %while.body88
  %70 = load i64, i64* %avail, align 8, !dbg !3107
  %71 = load i64, i64* %cbytes, align 8, !dbg !3109
  %cmp94 = icmp sgt i64 %70, %71, !dbg !3110
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !3111

if.then96:                                        ; preds = %if.end93
  %72 = load i64, i64* %cbytes, align 8, !dbg !3112
  store i64 %72, i64* %avail, align 8, !dbg !3113
  br label %if.end97, !dbg !3114

if.end97:                                         ; preds = %if.then96, %if.end93
  %73 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3115
  %74 = load i64, i64* %avail, align 8, !dbg !3117
  %call98 = call i64 @cab_minimum_consume_cfdata(%struct.archive_read* %73, i64 %74), !dbg !3118
  %cmp99 = icmp slt i64 %call98, 0, !dbg !3119
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !3120

if.then101:                                       ; preds = %if.end97
  store i64 -30, i64* %retval, align 8, !dbg !3121
  br label %return, !dbg !3121

if.end102:                                        ; preds = %if.end97
  %75 = load i64, i64* %avail, align 8, !dbg !3122
  %76 = load i64, i64* %cbytes, align 8, !dbg !3123
  %sub103 = sub nsw i64 %76, %75, !dbg !3123
  store i64 %sub103, i64* %cbytes, align 8, !dbg !3123
  br label %while.cond85, !dbg !3124

while.end:                                        ; preds = %while.cond85
  br label %while.cond, !dbg !3126

while.end104:                                     ; preds = %if.end49, %while.cond
  %77 = load i64, i64* %consumed_bytes.addr, align 8, !dbg !3128
  store i64 %77, i64* %retval, align 8, !dbg !3129
  br label %return, !dbg !3129

return:                                           ; preds = %while.end104, %if.then101, %if.then92, %sw.bb79, %if.then67, %if.then37, %if.then4, %if.then
  %78 = load i64, i64* %retval, align 8, !dbg !3130
  ret i64 %78, !dbg !3130
}

; Function Attrs: nounwind uwtable
define internal i32 @cab_read_data(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !617 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %cab = alloca %struct.cab*, align 8
  %bytes_avail = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3131, metadata !638), !dbg !3132
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !3133, metadata !638), !dbg !3134
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !3135, metadata !638), !dbg !3136
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !3137, metadata !638), !dbg !3138
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !3139, metadata !638), !dbg !3140
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3141
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3142
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3142
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3143
  %2 = load i8*, i8** %data, align 8, !dbg !3143
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !3144
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !3140
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !3145, metadata !638), !dbg !3146
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3147
  %entry_bytes_remaining = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 1, !dbg !3149
  %5 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !3149
  %cmp = icmp eq i64 %5, 0, !dbg !3150
  br i1 %cmp, label %if.then, label %if.end, !dbg !3151

if.then:                                          ; preds = %entry
  %6 = load i8**, i8*** %buff.addr, align 8, !dbg !3152
  store i8* null, i8** %6, align 8, !dbg !3154
  %7 = load i64*, i64** %size.addr, align 8, !dbg !3155
  store i64 0, i64* %7, align 8, !dbg !3156
  %8 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3157
  %entry_offset = getelementptr inbounds %struct.cab, %struct.cab* %8, i32 0, i32 0, !dbg !3158
  %9 = load i64, i64* %entry_offset, align 8, !dbg !3158
  %10 = load i64*, i64** %offset.addr, align 8, !dbg !3159
  store i64 %9, i64* %10, align 8, !dbg !3160
  %11 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3161
  %end_of_entry = getelementptr inbounds %struct.cab, %struct.cab* %11, i32 0, i32 13, !dbg !3162
  store i8 1, i8* %end_of_entry, align 2, !dbg !3163
  store i32 0, i32* %retval, align 4, !dbg !3164
  br label %return, !dbg !3164

if.end:                                           ; preds = %entry
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3165
  %call = call i8* @cab_read_ahead_cfdata(%struct.archive_read* %12, i64* %bytes_avail), !dbg !3166
  %13 = load i8**, i8*** %buff.addr, align 8, !dbg !3167
  store i8* %call, i8** %13, align 8, !dbg !3168
  %14 = load i64, i64* %bytes_avail, align 8, !dbg !3169
  %cmp1 = icmp sle i64 %14, 0, !dbg !3171
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !3172

if.then2:                                         ; preds = %if.end
  %15 = load i8**, i8*** %buff.addr, align 8, !dbg !3173
  store i8* null, i8** %15, align 8, !dbg !3175
  %16 = load i64*, i64** %size.addr, align 8, !dbg !3176
  store i64 0, i64* %16, align 8, !dbg !3177
  %17 = load i64*, i64** %offset.addr, align 8, !dbg !3178
  store i64 0, i64* %17, align 8, !dbg !3179
  %18 = load i64, i64* %bytes_avail, align 8, !dbg !3180
  %cmp3 = icmp eq i64 %18, 0, !dbg !3182
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !3183

land.lhs.true:                                    ; preds = %if.then2
  %19 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3184
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %19, i32 0, i32 7, !dbg !3185
  %20 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !3185
  %uncompressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %20, i32 0, i32 3, !dbg !3186
  %21 = load i16, i16* %uncompressed_size, align 8, !dbg !3186
  %conv = zext i16 %21 to i32, !dbg !3184
  %cmp4 = icmp eq i32 %conv, 0, !dbg !3187
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !3188

if.then6:                                         ; preds = %land.lhs.true
  %22 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3190
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %22, i32 0, i32 0, !dbg !3192
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0)), !dbg !3193
  store i32 -30, i32* %retval, align 4, !dbg !3194
  br label %return, !dbg !3194

if.else:                                          ; preds = %land.lhs.true, %if.then2
  %23 = load i64, i64* %bytes_avail, align 8, !dbg !3195
  %conv7 = trunc i64 %23 to i32, !dbg !3196
  store i32 %conv7, i32* %retval, align 4, !dbg !3197
  br label %return, !dbg !3197

if.end8:                                          ; preds = %if.end
  %24 = load i64, i64* %bytes_avail, align 8, !dbg !3198
  %25 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3200
  %entry_bytes_remaining9 = getelementptr inbounds %struct.cab, %struct.cab* %25, i32 0, i32 1, !dbg !3201
  %26 = load i64, i64* %entry_bytes_remaining9, align 8, !dbg !3201
  %cmp10 = icmp sgt i64 %24, %26, !dbg !3202
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !3203

if.then12:                                        ; preds = %if.end8
  %27 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3204
  %entry_bytes_remaining13 = getelementptr inbounds %struct.cab, %struct.cab* %27, i32 0, i32 1, !dbg !3205
  %28 = load i64, i64* %entry_bytes_remaining13, align 8, !dbg !3205
  store i64 %28, i64* %bytes_avail, align 8, !dbg !3206
  br label %if.end14, !dbg !3207

if.end14:                                         ; preds = %if.then12, %if.end8
  %29 = load i64, i64* %bytes_avail, align 8, !dbg !3208
  %30 = load i64*, i64** %size.addr, align 8, !dbg !3209
  store i64 %29, i64* %30, align 8, !dbg !3210
  %31 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3211
  %entry_offset15 = getelementptr inbounds %struct.cab, %struct.cab* %31, i32 0, i32 0, !dbg !3212
  %32 = load i64, i64* %entry_offset15, align 8, !dbg !3212
  %33 = load i64*, i64** %offset.addr, align 8, !dbg !3213
  store i64 %32, i64* %33, align 8, !dbg !3214
  %34 = load i64, i64* %bytes_avail, align 8, !dbg !3215
  %35 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3216
  %entry_offset16 = getelementptr inbounds %struct.cab, %struct.cab* %35, i32 0, i32 0, !dbg !3217
  %36 = load i64, i64* %entry_offset16, align 8, !dbg !3218
  %add = add nsw i64 %36, %34, !dbg !3218
  store i64 %add, i64* %entry_offset16, align 8, !dbg !3218
  %37 = load i64, i64* %bytes_avail, align 8, !dbg !3219
  %38 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3220
  %entry_bytes_remaining17 = getelementptr inbounds %struct.cab, %struct.cab* %38, i32 0, i32 1, !dbg !3221
  %39 = load i64, i64* %entry_bytes_remaining17, align 8, !dbg !3222
  %sub = sub nsw i64 %39, %37, !dbg !3222
  store i64 %sub, i64* %entry_bytes_remaining17, align 8, !dbg !3222
  %40 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3223
  %entry_bytes_remaining18 = getelementptr inbounds %struct.cab, %struct.cab* %40, i32 0, i32 1, !dbg !3225
  %41 = load i64, i64* %entry_bytes_remaining18, align 8, !dbg !3225
  %cmp19 = icmp eq i64 %41, 0, !dbg !3226
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !3227

if.then21:                                        ; preds = %if.end14
  %42 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3228
  %end_of_entry22 = getelementptr inbounds %struct.cab, %struct.cab* %42, i32 0, i32 13, !dbg !3229
  store i8 1, i8* %end_of_entry22, align 2, !dbg !3230
  br label %if.end23, !dbg !3228

if.end23:                                         ; preds = %if.then21, %if.end14
  %43 = load i64, i64* %bytes_avail, align 8, !dbg !3231
  %44 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3232
  %entry_unconsumed = getelementptr inbounds %struct.cab, %struct.cab* %44, i32 0, i32 2, !dbg !3233
  store i64 %43, i64* %entry_unconsumed, align 8, !dbg !3234
  %45 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3235
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %45, i32 0, i32 5, !dbg !3237
  %46 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !3237
  %comptype = getelementptr inbounds %struct.cffolder, %struct.cffolder* %46, i32 0, i32 2, !dbg !3238
  %47 = load i16, i16* %comptype, align 2, !dbg !3238
  %conv24 = zext i16 %47 to i32, !dbg !3235
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !3239
  br i1 %cmp25, label %if.then27, label %if.end37, !dbg !3240

if.then27:                                        ; preds = %if.end23
  %48 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3241
  %entry_cfdata28 = getelementptr inbounds %struct.cab, %struct.cab* %48, i32 0, i32 7, !dbg !3244
  %49 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata28, align 8, !dbg !3244
  %unconsumed = getelementptr inbounds %struct.cfdata, %struct.cfdata* %49, i32 0, i32 7, !dbg !3245
  %50 = load i64, i64* %unconsumed, align 8, !dbg !3245
  %51 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3246
  %entry_unconsumed29 = getelementptr inbounds %struct.cab, %struct.cab* %51, i32 0, i32 2, !dbg !3247
  %52 = load i64, i64* %entry_unconsumed29, align 8, !dbg !3247
  %cmp30 = icmp sgt i64 %50, %52, !dbg !3248
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !3249

if.then32:                                        ; preds = %if.then27
  %53 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3250
  %entry_unconsumed33 = getelementptr inbounds %struct.cab, %struct.cab* %53, i32 0, i32 2, !dbg !3251
  %54 = load i64, i64* %entry_unconsumed33, align 8, !dbg !3251
  %55 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3252
  %entry_cfdata34 = getelementptr inbounds %struct.cab, %struct.cab* %55, i32 0, i32 7, !dbg !3253
  %56 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata34, align 8, !dbg !3253
  %unconsumed35 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %56, i32 0, i32 7, !dbg !3254
  store i64 %54, i64* %unconsumed35, align 8, !dbg !3255
  br label %if.end36, !dbg !3252

if.end36:                                         ; preds = %if.then32, %if.then27
  br label %if.end37, !dbg !3256

if.end37:                                         ; preds = %if.end36, %if.end23
  store i32 0, i32* %retval, align 4, !dbg !3257
  br label %return, !dbg !3257

return:                                           ; preds = %if.end37, %if.else, %if.then6, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !3258
  ret i32 %57, !dbg !3258
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: nounwind uwtable
define internal i64 @cab_minimum_consume_cfdata(%struct.archive_read* %a, i64 %consumed_bytes) #0 !dbg !554 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %consumed_bytes.addr = alloca i64, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %cbytes = alloca i64, align 8
  %rbytes = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3259, metadata !638), !dbg !3260
  store i64 %consumed_bytes, i64* %consumed_bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %consumed_bytes.addr, metadata !3261, metadata !638), !dbg !3262
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !3263, metadata !638), !dbg !3264
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3265
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3266
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3266
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3267
  %2 = load i8*, i8** %data, align 8, !dbg !3267
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !3268
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !3264
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !3269, metadata !638), !dbg !3270
  call void @llvm.dbg.declare(metadata i64* %cbytes, metadata !3271, metadata !638), !dbg !3272
  call void @llvm.dbg.declare(metadata i64* %rbytes, metadata !3273, metadata !638), !dbg !3274
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3275, metadata !638), !dbg !3276
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3277
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 7, !dbg !3278
  %5 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !3278
  store %struct.cfdata* %5, %struct.cfdata** %cfdata, align 8, !dbg !3279
  %6 = load i64, i64* %consumed_bytes.addr, align 8, !dbg !3280
  store i64 %6, i64* %rbytes, align 8, !dbg !3281
  %7 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3282
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %7, i32 0, i32 5, !dbg !3284
  %8 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !3284
  %comptype = getelementptr inbounds %struct.cffolder, %struct.cffolder* %8, i32 0, i32 2, !dbg !3285
  %9 = load i16, i16* %comptype, align 2, !dbg !3285
  %conv = zext i16 %9 to i32, !dbg !3282
  %cmp = icmp eq i32 %conv, 0, !dbg !3286
  br i1 %cmp, label %if.then, label %if.else17, !dbg !3287

if.then:                                          ; preds = %entry
  %10 = load i64, i64* %consumed_bytes.addr, align 8, !dbg !3288
  %11 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3291
  %unconsumed = getelementptr inbounds %struct.cfdata, %struct.cfdata* %11, i32 0, i32 7, !dbg !3292
  %12 = load i64, i64* %unconsumed, align 8, !dbg !3292
  %cmp2 = icmp slt i64 %10, %12, !dbg !3293
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !3294

if.then4:                                         ; preds = %if.then
  %13 = load i64, i64* %consumed_bytes.addr, align 8, !dbg !3295
  store i64 %13, i64* %cbytes, align 8, !dbg !3296
  br label %if.end, !dbg !3297

if.else:                                          ; preds = %if.then
  %14 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3298
  %unconsumed5 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %14, i32 0, i32 7, !dbg !3299
  %15 = load i64, i64* %unconsumed5, align 8, !dbg !3299
  store i64 %15, i64* %cbytes, align 8, !dbg !3300
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %16 = load i64, i64* %cbytes, align 8, !dbg !3301
  %17 = load i64, i64* %rbytes, align 8, !dbg !3302
  %sub = sub nsw i64 %17, %16, !dbg !3302
  store i64 %sub, i64* %rbytes, align 8, !dbg !3302
  %18 = load i64, i64* %cbytes, align 8, !dbg !3303
  %conv6 = trunc i64 %18 to i16, !dbg !3304
  %conv7 = zext i16 %conv6 to i32, !dbg !3304
  %19 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3305
  %read_offset = getelementptr inbounds %struct.cfdata, %struct.cfdata* %19, i32 0, i32 6, !dbg !3306
  %20 = load i16, i16* %read_offset, align 2, !dbg !3307
  %conv8 = zext i16 %20 to i32, !dbg !3307
  %add = add nsw i32 %conv8, %conv7, !dbg !3307
  %conv9 = trunc i32 %add to i16, !dbg !3307
  store i16 %conv9, i16* %read_offset, align 2, !dbg !3307
  %21 = load i64, i64* %cbytes, align 8, !dbg !3308
  %conv10 = trunc i64 %21 to i16, !dbg !3309
  %conv11 = zext i16 %conv10 to i32, !dbg !3309
  %22 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3310
  %uncompressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %22, i32 0, i32 4, !dbg !3311
  %23 = load i16, i16* %uncompressed_bytes_remaining, align 2, !dbg !3312
  %conv12 = zext i16 %23 to i32, !dbg !3312
  %sub13 = sub nsw i32 %conv12, %conv11, !dbg !3312
  %conv14 = trunc i32 %sub13 to i16, !dbg !3312
  store i16 %conv14, i16* %uncompressed_bytes_remaining, align 2, !dbg !3312
  %24 = load i64, i64* %cbytes, align 8, !dbg !3313
  %25 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3314
  %unconsumed15 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %25, i32 0, i32 7, !dbg !3315
  %26 = load i64, i64* %unconsumed15, align 8, !dbg !3316
  %sub16 = sub nsw i64 %26, %24, !dbg !3316
  store i64 %sub16, i64* %unconsumed15, align 8, !dbg !3316
  br label %if.end50, !dbg !3317

if.else17:                                        ; preds = %entry
  %27 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3318
  %uncompressed_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %27, i32 0, i32 5, !dbg !3320
  %28 = load i16, i16* %uncompressed_avail, align 4, !dbg !3320
  %conv18 = zext i16 %28 to i32, !dbg !3318
  %29 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3321
  %read_offset19 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %29, i32 0, i32 6, !dbg !3322
  %30 = load i16, i16* %read_offset19, align 2, !dbg !3322
  %conv20 = zext i16 %30 to i32, !dbg !3321
  %sub21 = sub nsw i32 %conv18, %conv20, !dbg !3323
  %conv22 = sext i32 %sub21 to i64, !dbg !3318
  store i64 %conv22, i64* %cbytes, align 8, !dbg !3324
  %31 = load i64, i64* %cbytes, align 8, !dbg !3325
  %cmp23 = icmp sgt i64 %31, 0, !dbg !3327
  br i1 %cmp23, label %if.then25, label %if.end43, !dbg !3328

if.then25:                                        ; preds = %if.else17
  %32 = load i64, i64* %consumed_bytes.addr, align 8, !dbg !3329
  %33 = load i64, i64* %cbytes, align 8, !dbg !3332
  %cmp26 = icmp slt i64 %32, %33, !dbg !3333
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !3334

if.then28:                                        ; preds = %if.then25
  %34 = load i64, i64* %consumed_bytes.addr, align 8, !dbg !3335
  store i64 %34, i64* %cbytes, align 8, !dbg !3336
  br label %if.end29, !dbg !3337

if.end29:                                         ; preds = %if.then28, %if.then25
  %35 = load i64, i64* %cbytes, align 8, !dbg !3338
  %36 = load i64, i64* %rbytes, align 8, !dbg !3339
  %sub30 = sub nsw i64 %36, %35, !dbg !3339
  store i64 %sub30, i64* %rbytes, align 8, !dbg !3339
  %37 = load i64, i64* %cbytes, align 8, !dbg !3340
  %conv31 = trunc i64 %37 to i16, !dbg !3341
  %conv32 = zext i16 %conv31 to i32, !dbg !3341
  %38 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3342
  %read_offset33 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %38, i32 0, i32 6, !dbg !3343
  %39 = load i16, i16* %read_offset33, align 2, !dbg !3344
  %conv34 = zext i16 %39 to i32, !dbg !3344
  %add35 = add nsw i32 %conv34, %conv32, !dbg !3344
  %conv36 = trunc i32 %add35 to i16, !dbg !3344
  store i16 %conv36, i16* %read_offset33, align 2, !dbg !3344
  %40 = load i64, i64* %cbytes, align 8, !dbg !3345
  %conv37 = trunc i64 %40 to i16, !dbg !3346
  %conv38 = zext i16 %conv37 to i32, !dbg !3346
  %41 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3347
  %uncompressed_bytes_remaining39 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %41, i32 0, i32 4, !dbg !3348
  %42 = load i16, i16* %uncompressed_bytes_remaining39, align 2, !dbg !3349
  %conv40 = zext i16 %42 to i32, !dbg !3349
  %sub41 = sub nsw i32 %conv40, %conv38, !dbg !3349
  %conv42 = trunc i32 %sub41 to i16, !dbg !3349
  store i16 %conv42, i16* %uncompressed_bytes_remaining39, align 2, !dbg !3349
  br label %if.end43, !dbg !3350

if.end43:                                         ; preds = %if.end29, %if.else17
  %43 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3351
  %unconsumed44 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %43, i32 0, i32 7, !dbg !3353
  %44 = load i64, i64* %unconsumed44, align 8, !dbg !3353
  %tobool = icmp ne i64 %44, 0, !dbg !3351
  br i1 %tobool, label %if.then45, label %if.else48, !dbg !3354

if.then45:                                        ; preds = %if.end43
  %45 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3355
  %unconsumed46 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %45, i32 0, i32 7, !dbg !3357
  %46 = load i64, i64* %unconsumed46, align 8, !dbg !3357
  store i64 %46, i64* %cbytes, align 8, !dbg !3358
  %47 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3359
  %unconsumed47 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %47, i32 0, i32 7, !dbg !3360
  store i64 0, i64* %unconsumed47, align 8, !dbg !3361
  br label %if.end49, !dbg !3362

if.else48:                                        ; preds = %if.end43
  store i64 0, i64* %cbytes, align 8, !dbg !3363
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then45
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end
  %48 = load i64, i64* %cbytes, align 8, !dbg !3364
  %tobool51 = icmp ne i64 %48, 0, !dbg !3364
  br i1 %tobool51, label %if.then52, label %if.end71, !dbg !3366

if.then52:                                        ; preds = %if.end50
  %49 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3367
  %50 = load i64, i64* %cbytes, align 8, !dbg !3369
  call void @cab_checksum_update(%struct.archive_read* %49, i64 %50), !dbg !3370
  %51 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3371
  %52 = load i64, i64* %cbytes, align 8, !dbg !3372
  %call = call i64 @__archive_read_consume(%struct.archive_read* %51, i64 %52), !dbg !3373
  %53 = load i64, i64* %cbytes, align 8, !dbg !3374
  %54 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3375
  %cab_offset = getelementptr inbounds %struct.cab, %struct.cab* %54, i32 0, i32 8, !dbg !3376
  %55 = load i64, i64* %cab_offset, align 8, !dbg !3377
  %add53 = add nsw i64 %55, %53, !dbg !3377
  store i64 %add53, i64* %cab_offset, align 8, !dbg !3377
  %56 = load i64, i64* %cbytes, align 8, !dbg !3378
  %conv54 = trunc i64 %56 to i16, !dbg !3379
  %conv55 = zext i16 %conv54 to i32, !dbg !3379
  %57 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3380
  %compressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %57, i32 0, i32 2, !dbg !3381
  %58 = load i16, i16* %compressed_bytes_remaining, align 2, !dbg !3382
  %conv56 = zext i16 %58 to i32, !dbg !3382
  %sub57 = sub nsw i32 %conv56, %conv55, !dbg !3382
  %conv58 = trunc i32 %sub57 to i16, !dbg !3382
  store i16 %conv58, i16* %compressed_bytes_remaining, align 2, !dbg !3382
  %59 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3383
  %compressed_bytes_remaining59 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %59, i32 0, i32 2, !dbg !3385
  %60 = load i16, i16* %compressed_bytes_remaining59, align 2, !dbg !3385
  %conv60 = zext i16 %60 to i32, !dbg !3383
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !3386
  br i1 %cmp61, label %if.then63, label %if.end70, !dbg !3387

if.then63:                                        ; preds = %if.then52
  %61 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3388
  %call64 = call i32 @cab_checksum_finish(%struct.archive_read* %61), !dbg !3390
  store i32 %call64, i32* %err, align 4, !dbg !3391
  %62 = load i32, i32* %err, align 4, !dbg !3392
  %cmp65 = icmp slt i32 %62, 0, !dbg !3394
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !3395

if.then67:                                        ; preds = %if.then63
  %63 = load i32, i32* %err, align 4, !dbg !3396
  %conv68 = sext i32 %63 to i64, !dbg !3397
  store i64 %conv68, i64* %retval, align 8, !dbg !3398
  br label %return, !dbg !3398

if.end69:                                         ; preds = %if.then63
  br label %if.end70, !dbg !3399

if.end70:                                         ; preds = %if.end69, %if.then52
  br label %if.end71, !dbg !3400

if.end71:                                         ; preds = %if.end70, %if.end50
  %64 = load i64, i64* %rbytes, align 8, !dbg !3401
  store i64 %64, i64* %retval, align 8, !dbg !3402
  br label %return, !dbg !3402

return:                                           ; preds = %if.end71, %if.then67
  %65 = load i64, i64* %retval, align 8, !dbg !3403
  ret i64 %65, !dbg !3403
}

; Function Attrs: nounwind uwtable
define internal i8* @cab_read_ahead_cfdata(%struct.archive_read* %a, i64* %avail) #0 !dbg !563 {
entry:
  %retval = alloca i8*, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %avail.addr = alloca i64*, align 8
  %cab = alloca %struct.cab*, align 8
  %err = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3404, metadata !638), !dbg !3405
  store i64* %avail, i64** %avail.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %avail.addr, metadata !3406, metadata !638), !dbg !3407
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !3408, metadata !638), !dbg !3409
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3410
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3411
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3411
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3412
  %2 = load i8*, i8** %data, align 8, !dbg !3412
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !3413
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !3409
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3414, metadata !638), !dbg !3415
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3416
  %call = call i32 @cab_next_cfdata(%struct.archive_read* %4), !dbg !3417
  store i32 %call, i32* %err, align 4, !dbg !3418
  %5 = load i32, i32* %err, align 4, !dbg !3419
  %cmp = icmp slt i32 %5, 0, !dbg !3421
  br i1 %cmp, label %if.then, label %if.end, !dbg !3422

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !3423
  %conv = sext i32 %6 to i64, !dbg !3423
  %7 = load i64*, i64** %avail.addr, align 8, !dbg !3425
  store i64 %conv, i64* %7, align 8, !dbg !3426
  store i8* null, i8** %retval, align 8, !dbg !3427
  br label %return, !dbg !3427

if.end:                                           ; preds = %entry
  %8 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3428
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %8, i32 0, i32 5, !dbg !3429
  %9 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !3429
  %comptype = getelementptr inbounds %struct.cffolder, %struct.cffolder* %9, i32 0, i32 2, !dbg !3430
  %10 = load i16, i16* %comptype, align 2, !dbg !3430
  %conv1 = zext i16 %10 to i32, !dbg !3428
  switch i32 %conv1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 3, label %sw.bb5
  ], !dbg !3431

sw.bb:                                            ; preds = %if.end
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3432
  %12 = load i64*, i64** %avail.addr, align 8, !dbg !3434
  %call2 = call i8* @cab_read_ahead_cfdata_none(%struct.archive_read* %11, i64* %12), !dbg !3435
  store i8* %call2, i8** %retval, align 8, !dbg !3436
  br label %return, !dbg !3436

sw.bb3:                                           ; preds = %if.end
  %13 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3437
  %14 = load i64*, i64** %avail.addr, align 8, !dbg !3438
  %call4 = call i8* @cab_read_ahead_cfdata_deflate(%struct.archive_read* %13, i64* %14), !dbg !3439
  store i8* %call4, i8** %retval, align 8, !dbg !3440
  br label %return, !dbg !3440

sw.bb5:                                           ; preds = %if.end
  %15 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3441
  %16 = load i64*, i64** %avail.addr, align 8, !dbg !3442
  %call6 = call i8* @cab_read_ahead_cfdata_lzx(%struct.archive_read* %15, i64* %16), !dbg !3443
  store i8* %call6, i8** %retval, align 8, !dbg !3444
  br label %return, !dbg !3444

sw.default:                                       ; preds = %if.end
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3445
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %17, i32 0, i32 0, !dbg !3446
  %18 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3447
  %entry_cffolder7 = getelementptr inbounds %struct.cab, %struct.cab* %18, i32 0, i32 5, !dbg !3448
  %19 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder7, align 8, !dbg !3448
  %compname = getelementptr inbounds %struct.cffolder, %struct.cffolder* %19, i32 0, i32 4, !dbg !3449
  %20 = load i8*, i8** %compname, align 8, !dbg !3449
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i32 0, i32 0), i8* %20), !dbg !3450
  %21 = load i64*, i64** %avail.addr, align 8, !dbg !3451
  store i64 -25, i64* %21, align 8, !dbg !3452
  store i8* null, i8** %retval, align 8, !dbg !3453
  br label %return, !dbg !3453

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb3, %sw.bb, %if.then
  %22 = load i8*, i8** %retval, align 8, !dbg !3454
  ret i8* %22, !dbg !3454
}

; Function Attrs: nounwind uwtable
define internal void @cab_checksum_update(%struct.archive_read* %a, i64 %bytes) #0 !dbg !555 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %bytes.addr = alloca i64, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %p = alloca i8*, align 8
  %sumbytes = alloca i64, align 8
  %odd = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3455, metadata !638), !dbg !3456
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !3457, metadata !638), !dbg !3458
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !3459, metadata !638), !dbg !3460
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3461
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3462
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3462
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3463
  %2 = load i8*, i8** %data, align 8, !dbg !3463
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !3464
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !3460
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !3465, metadata !638), !dbg !3466
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3467
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 7, !dbg !3468
  %5 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !3468
  store %struct.cfdata* %5, %struct.cfdata** %cfdata, align 8, !dbg !3466
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3469, metadata !638), !dbg !3470
  call void @llvm.dbg.declare(metadata i64* %sumbytes, metadata !3471, metadata !638), !dbg !3472
  %6 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3473
  %sum = getelementptr inbounds %struct.cfdata, %struct.cfdata* %6, i32 0, i32 0, !dbg !3475
  %7 = load i32, i32* %sum, align 8, !dbg !3475
  %cmp = icmp eq i32 %7, 0, !dbg !3476
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3477

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3478
  %sum_ptr = getelementptr inbounds %struct.cfdata, %struct.cfdata* %8, i32 0, i32 13, !dbg !3480
  %9 = load i8*, i8** %sum_ptr, align 8, !dbg !3480
  %cmp1 = icmp eq i8* %9, null, !dbg !3481
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3482

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !3483

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3484
  %sum_ptr2 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %10, i32 0, i32 13, !dbg !3485
  %11 = load i8*, i8** %sum_ptr2, align 8, !dbg !3485
  store i8* %11, i8** %p, align 8, !dbg !3486
  %12 = load i64, i64* %bytes.addr, align 8, !dbg !3487
  store i64 %12, i64* %sumbytes, align 8, !dbg !3488
  %13 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3489
  %sum_extra_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %13, i32 0, i32 12, !dbg !3491
  %14 = load i32, i32* %sum_extra_avail, align 8, !dbg !3491
  %tobool = icmp ne i32 %14, 0, !dbg !3489
  br i1 %tobool, label %if.then3, label %if.end15, !dbg !3492

if.then3:                                         ; preds = %if.end
  br label %while.cond, !dbg !3493

while.cond:                                       ; preds = %while.body, %if.then3
  %15 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3495
  %sum_extra_avail4 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %15, i32 0, i32 12, !dbg !3497
  %16 = load i32, i32* %sum_extra_avail4, align 8, !dbg !3497
  %cmp5 = icmp slt i32 %16, 4, !dbg !3498
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !3499

land.rhs:                                         ; preds = %while.cond
  %17 = load i64, i64* %sumbytes, align 8, !dbg !3500
  %cmp6 = icmp ugt i64 %17, 0, !dbg !3502
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ]
  br i1 %18, label %while.body, label %while.end, !dbg !3503

while.body:                                       ; preds = %land.end
  %19 = load i8*, i8** %p, align 8, !dbg !3505
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1, !dbg !3505
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3505
  %20 = load i8, i8* %19, align 1, !dbg !3507
  %21 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3508
  %sum_extra_avail7 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %21, i32 0, i32 12, !dbg !3509
  %22 = load i32, i32* %sum_extra_avail7, align 8, !dbg !3510
  %inc = add nsw i32 %22, 1, !dbg !3510
  store i32 %inc, i32* %sum_extra_avail7, align 8, !dbg !3510
  %idxprom = sext i32 %22 to i64, !dbg !3511
  %23 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3511
  %sum_extra = getelementptr inbounds %struct.cfdata, %struct.cfdata* %23, i32 0, i32 11, !dbg !3512
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %sum_extra, i64 0, i64 %idxprom, !dbg !3511
  store i8 %20, i8* %arrayidx, align 1, !dbg !3513
  %24 = load i64, i64* %sumbytes, align 8, !dbg !3514
  %dec = add i64 %24, -1, !dbg !3514
  store i64 %dec, i64* %sumbytes, align 8, !dbg !3514
  br label %while.cond, !dbg !3515

while.end:                                        ; preds = %land.end
  %25 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3517
  %sum_extra_avail8 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %25, i32 0, i32 12, !dbg !3519
  %26 = load i32, i32* %sum_extra_avail8, align 8, !dbg !3519
  %cmp9 = icmp eq i32 %26, 4, !dbg !3520
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !3521

if.then10:                                        ; preds = %while.end
  %27 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3522
  %sum_extra11 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %27, i32 0, i32 11, !dbg !3524
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %sum_extra11, i32 0, i32 0, !dbg !3522
  %28 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3525
  %sum_calculated = getelementptr inbounds %struct.cfdata, %struct.cfdata* %28, i32 0, i32 10, !dbg !3526
  %29 = load i32, i32* %sum_calculated, align 8, !dbg !3526
  %call = call i32 @cab_checksum_cfdata_4(i8* %arraydecay, i64 4, i32 %29), !dbg !3527
  %30 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3528
  %sum_calculated12 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %30, i32 0, i32 10, !dbg !3529
  store i32 %call, i32* %sum_calculated12, align 8, !dbg !3530
  %31 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3531
  %sum_extra_avail13 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %31, i32 0, i32 12, !dbg !3532
  store i32 0, i32* %sum_extra_avail13, align 8, !dbg !3533
  br label %if.end14, !dbg !3534

if.end14:                                         ; preds = %if.then10, %while.end
  br label %if.end15, !dbg !3535

if.end15:                                         ; preds = %if.end14, %if.end
  %32 = load i64, i64* %sumbytes, align 8, !dbg !3536
  %tobool16 = icmp ne i64 %32, 0, !dbg !3536
  br i1 %tobool16, label %if.then17, label %if.end36, !dbg !3538

if.then17:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i32* %odd, metadata !3539, metadata !638), !dbg !3541
  %33 = load i64, i64* %sumbytes, align 8, !dbg !3542
  %and = and i64 %33, 3, !dbg !3543
  %conv = trunc i64 %and to i32, !dbg !3542
  store i32 %conv, i32* %odd, align 4, !dbg !3541
  %34 = load i64, i64* %sumbytes, align 8, !dbg !3544
  %35 = load i32, i32* %odd, align 4, !dbg !3546
  %conv18 = sext i32 %35 to i64, !dbg !3546
  %sub = sub i64 %34, %conv18, !dbg !3547
  %cmp19 = icmp ugt i64 %sub, 0, !dbg !3548
  br i1 %cmp19, label %if.then21, label %if.end27, !dbg !3549

if.then21:                                        ; preds = %if.then17
  %36 = load i8*, i8** %p, align 8, !dbg !3550
  %37 = load i64, i64* %sumbytes, align 8, !dbg !3551
  %38 = load i32, i32* %odd, align 4, !dbg !3552
  %conv22 = sext i32 %38 to i64, !dbg !3552
  %sub23 = sub i64 %37, %conv22, !dbg !3553
  %39 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3554
  %sum_calculated24 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %39, i32 0, i32 10, !dbg !3555
  %40 = load i32, i32* %sum_calculated24, align 8, !dbg !3555
  %call25 = call i32 @cab_checksum_cfdata_4(i8* %36, i64 %sub23, i32 %40), !dbg !3556
  %41 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3557
  %sum_calculated26 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %41, i32 0, i32 10, !dbg !3558
  store i32 %call25, i32* %sum_calculated26, align 8, !dbg !3559
  br label %if.end27, !dbg !3557

if.end27:                                         ; preds = %if.then21, %if.then17
  %42 = load i32, i32* %odd, align 4, !dbg !3560
  %tobool28 = icmp ne i32 %42, 0, !dbg !3560
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !3562

if.then29:                                        ; preds = %if.end27
  %43 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3563
  %sum_extra30 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %43, i32 0, i32 11, !dbg !3564
  %arraydecay31 = getelementptr inbounds [4 x i8], [4 x i8]* %sum_extra30, i32 0, i32 0, !dbg !3565
  %44 = load i8*, i8** %p, align 8, !dbg !3566
  %45 = load i64, i64* %sumbytes, align 8, !dbg !3567
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !3568
  %46 = load i32, i32* %odd, align 4, !dbg !3569
  %idx.ext = sext i32 %46 to i64, !dbg !3570
  %idx.neg = sub i64 0, %idx.ext, !dbg !3570
  %add.ptr32 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !3570
  %47 = load i32, i32* %odd, align 4, !dbg !3571
  %conv33 = sext i32 %47 to i64, !dbg !3571
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay31, i8* %add.ptr32, i64 %conv33, i32 1, i1 false), !dbg !3565
  br label %if.end34, !dbg !3565

if.end34:                                         ; preds = %if.then29, %if.end27
  %48 = load i32, i32* %odd, align 4, !dbg !3572
  %49 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3573
  %sum_extra_avail35 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %49, i32 0, i32 12, !dbg !3574
  store i32 %48, i32* %sum_extra_avail35, align 8, !dbg !3575
  br label %if.end36, !dbg !3576

if.end36:                                         ; preds = %if.end34, %if.end15
  %50 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3577
  %sum_ptr37 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %50, i32 0, i32 13, !dbg !3578
  store i8* null, i8** %sum_ptr37, align 8, !dbg !3579
  br label %return, !dbg !3580

return:                                           ; preds = %if.end36, %if.then
  ret void, !dbg !3581
}

; Function Attrs: nounwind uwtable
define internal i32 @cab_checksum_finish(%struct.archive_read* %a) #0 !dbg !561 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %l = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3583, metadata !638), !dbg !3584
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !3585, metadata !638), !dbg !3586
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3587
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3588
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3588
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3589
  %2 = load i8*, i8** %data, align 8, !dbg !3589
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !3590
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !3586
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !3591, metadata !638), !dbg !3592
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3593
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 7, !dbg !3594
  %5 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !3594
  store %struct.cfdata* %5, %struct.cfdata** %cfdata, align 8, !dbg !3592
  call void @llvm.dbg.declare(metadata i32* %l, metadata !3595, metadata !638), !dbg !3596
  %6 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3597
  %sum = getelementptr inbounds %struct.cfdata, %struct.cfdata* %6, i32 0, i32 0, !dbg !3599
  %7 = load i32, i32* %sum, align 8, !dbg !3599
  %cmp = icmp eq i32 %7, 0, !dbg !3600
  br i1 %cmp, label %if.then, label %if.end, !dbg !3601

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3602
  br label %return, !dbg !3602

if.end:                                           ; preds = %entry
  %8 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3603
  %sum_extra_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %8, i32 0, i32 12, !dbg !3605
  %9 = load i32, i32* %sum_extra_avail, align 8, !dbg !3605
  %tobool = icmp ne i32 %9, 0, !dbg !3603
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !3606

if.then1:                                         ; preds = %if.end
  %10 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3607
  %sum_extra = getelementptr inbounds %struct.cfdata, %struct.cfdata* %10, i32 0, i32 11, !dbg !3609
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %sum_extra, i32 0, i32 0, !dbg !3607
  %11 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3610
  %sum_extra_avail2 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %11, i32 0, i32 12, !dbg !3611
  %12 = load i32, i32* %sum_extra_avail2, align 8, !dbg !3611
  %conv = sext i32 %12 to i64, !dbg !3610
  %13 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3612
  %sum_calculated = getelementptr inbounds %struct.cfdata, %struct.cfdata* %13, i32 0, i32 10, !dbg !3613
  %14 = load i32, i32* %sum_calculated, align 8, !dbg !3613
  %call = call i32 @cab_checksum_cfdata(i8* %arraydecay, i64 %conv, i32 %14), !dbg !3614
  %15 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3615
  %sum_calculated3 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %15, i32 0, i32 10, !dbg !3616
  store i32 %call, i32* %sum_calculated3, align 8, !dbg !3617
  %16 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3618
  %sum_extra_avail4 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %16, i32 0, i32 12, !dbg !3619
  store i32 0, i32* %sum_extra_avail4, align 8, !dbg !3620
  br label %if.end5, !dbg !3621

if.end5:                                          ; preds = %if.then1, %if.end
  store i32 4, i32* %l, align 4, !dbg !3622
  %17 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3623
  %cfheader = getelementptr inbounds %struct.cab, %struct.cab* %17, i32 0, i32 9, !dbg !3625
  %flags = getelementptr inbounds %struct.cfheader, %struct.cfheader* %cfheader, i32 0, i32 4, !dbg !3626
  %18 = load i16, i16* %flags, align 4, !dbg !3626
  %conv6 = zext i16 %18 to i32, !dbg !3623
  %and = and i32 %conv6, 4, !dbg !3627
  %tobool7 = icmp ne i32 %and, 0, !dbg !3627
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !3628

if.then8:                                         ; preds = %if.end5
  %19 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3629
  %cfheader9 = getelementptr inbounds %struct.cab, %struct.cab* %19, i32 0, i32 9, !dbg !3630
  %cfdata10 = getelementptr inbounds %struct.cfheader, %struct.cfheader* %cfheader9, i32 0, i32 10, !dbg !3631
  %20 = load i8, i8* %cfdata10, align 1, !dbg !3631
  %conv11 = zext i8 %20 to i32, !dbg !3629
  %21 = load i32, i32* %l, align 4, !dbg !3632
  %add = add nsw i32 %21, %conv11, !dbg !3632
  store i32 %add, i32* %l, align 4, !dbg !3632
  br label %if.end12, !dbg !3633

if.end12:                                         ; preds = %if.then8, %if.end5
  %22 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3634
  %memimage = getelementptr inbounds %struct.cfdata, %struct.cfdata* %22, i32 0, i32 9, !dbg !3635
  %23 = load i8*, i8** %memimage, align 8, !dbg !3635
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 4, !dbg !3636
  %24 = load i32, i32* %l, align 4, !dbg !3637
  %conv13 = sext i32 %24 to i64, !dbg !3637
  %25 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3638
  %sum_calculated14 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %25, i32 0, i32 10, !dbg !3639
  %26 = load i32, i32* %sum_calculated14, align 8, !dbg !3639
  %call15 = call i32 @cab_checksum_cfdata(i8* %add.ptr, i64 %conv13, i32 %26), !dbg !3640
  %27 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3641
  %sum_calculated16 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %27, i32 0, i32 10, !dbg !3642
  store i32 %call15, i32* %sum_calculated16, align 8, !dbg !3643
  %28 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3644
  %sum_calculated17 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %28, i32 0, i32 10, !dbg !3646
  %29 = load i32, i32* %sum_calculated17, align 8, !dbg !3646
  %30 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3647
  %sum18 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %30, i32 0, i32 0, !dbg !3648
  %31 = load i32, i32* %sum18, align 8, !dbg !3648
  %cmp19 = icmp ne i32 %29, %31, !dbg !3649
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !3650

if.then21:                                        ; preds = %if.end12
  %32 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3651
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %32, i32 0, i32 0, !dbg !3653
  %33 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3654
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %33, i32 0, i32 5, !dbg !3655
  %34 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !3655
  %cfdata_index = getelementptr inbounds %struct.cffolder, %struct.cffolder* %34, i32 0, i32 6, !dbg !3656
  %35 = load i32, i32* %cfdata_index, align 8, !dbg !3656
  %sub = sub nsw i32 %35, 1, !dbg !3657
  %36 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3658
  %sum22 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %36, i32 0, i32 0, !dbg !3659
  %37 = load i32, i32* %sum22, align 8, !dbg !3659
  %38 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3660
  %sum_calculated23 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %38, i32 0, i32 10, !dbg !3661
  %39 = load i32, i32* %sum_calculated23, align 8, !dbg !3661
  %40 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3662
  %compressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %40, i32 0, i32 1, !dbg !3663
  %41 = load i16, i16* %compressed_size, align 4, !dbg !3663
  %conv24 = zext i16 %41 to i32, !dbg !3662
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i32 0, i32 0), i32 %sub, i32 %37, i32 %39, i32 %conv24), !dbg !3664
  store i32 -25, i32* %retval, align 4, !dbg !3665
  br label %return, !dbg !3665

if.end25:                                         ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !3666
  br label %return, !dbg !3666

return:                                           ; preds = %if.end25, %if.then21, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !3667
  ret i32 %42, !dbg !3667
}

; Function Attrs: nounwind uwtable
define internal i32 @cab_checksum_cfdata_4(i8* %p, i64 %bytes, i32 %seed) #0 !dbg !558 {
entry:
  %p.addr = alloca i8*, align 8
  %bytes.addr = alloca i64, align 8
  %seed.addr = alloca i32, align 4
  %b = alloca i8*, align 8
  %u32num = alloca i32, align 4
  %sum = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3668, metadata !638), !dbg !3669
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !3670, metadata !638), !dbg !3671
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !3672, metadata !638), !dbg !3673
  call void @llvm.dbg.declare(metadata i8** %b, metadata !3674, metadata !638), !dbg !3675
  call void @llvm.dbg.declare(metadata i32* %u32num, metadata !3676, metadata !638), !dbg !3677
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !3678, metadata !638), !dbg !3679
  %0 = load i64, i64* %bytes.addr, align 8, !dbg !3680
  %conv = trunc i64 %0 to i32, !dbg !3681
  %div = udiv i32 %conv, 4, !dbg !3682
  store i32 %div, i32* %u32num, align 4, !dbg !3683
  %1 = load i32, i32* %seed.addr, align 4, !dbg !3684
  store i32 %1, i32* %sum, align 4, !dbg !3685
  %2 = load i8*, i8** %p.addr, align 8, !dbg !3686
  store i8* %2, i8** %b, align 8, !dbg !3687
  br label %for.cond, !dbg !3688

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %u32num, align 4, !dbg !3689
  %cmp = icmp ugt i32 %3, 0, !dbg !3693
  br i1 %cmp, label %for.body, label %for.end, !dbg !3694

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %b, align 8, !dbg !3695
  %call = call i32 @archive_le32dec(i8* %4), !dbg !3697
  %5 = load i32, i32* %sum, align 4, !dbg !3698
  %xor = xor i32 %5, %call, !dbg !3698
  store i32 %xor, i32* %sum, align 4, !dbg !3698
  %6 = load i8*, i8** %b, align 8, !dbg !3699
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 4, !dbg !3699
  store i8* %add.ptr, i8** %b, align 8, !dbg !3699
  br label %for.inc, !dbg !3700

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %u32num, align 4, !dbg !3701
  %dec = add i32 %7, -1, !dbg !3701
  store i32 %dec, i32* %u32num, align 4, !dbg !3701
  br label %for.cond, !dbg !3703

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %sum, align 4, !dbg !3704
  ret i32 %8, !dbg !3705
}

; Function Attrs: nounwind uwtable
define internal i32 @cab_checksum_cfdata(i8* %p, i64 %bytes, i32 %seed) #0 !dbg !562 {
entry:
  %p.addr = alloca i8*, align 8
  %bytes.addr = alloca i64, align 8
  %seed.addr = alloca i32, align 4
  %b = alloca i8*, align 8
  %sum = alloca i32, align 4
  %t = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3706, metadata !638), !dbg !3707
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !3708, metadata !638), !dbg !3709
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !3710, metadata !638), !dbg !3711
  call void @llvm.dbg.declare(metadata i8** %b, metadata !3712, metadata !638), !dbg !3713
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !3714, metadata !638), !dbg !3715
  call void @llvm.dbg.declare(metadata i32* %t, metadata !3716, metadata !638), !dbg !3717
  %0 = load i8*, i8** %p.addr, align 8, !dbg !3718
  %1 = load i64, i64* %bytes.addr, align 8, !dbg !3719
  %2 = load i32, i32* %seed.addr, align 4, !dbg !3720
  %call = call i32 @cab_checksum_cfdata_4(i8* %0, i64 %1, i32 %2), !dbg !3721
  store i32 %call, i32* %sum, align 4, !dbg !3722
  %3 = load i8*, i8** %p.addr, align 8, !dbg !3723
  store i8* %3, i8** %b, align 8, !dbg !3724
  %4 = load i64, i64* %bytes.addr, align 8, !dbg !3725
  %and = and i64 %4, -4, !dbg !3726
  %5 = load i8*, i8** %b, align 8, !dbg !3727
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %and, !dbg !3727
  store i8* %add.ptr, i8** %b, align 8, !dbg !3727
  store i32 0, i32* %t, align 4, !dbg !3728
  %6 = load i64, i64* %bytes.addr, align 8, !dbg !3729
  %and1 = and i64 %6, 3, !dbg !3730
  switch i64 %and1, label %sw.default [
    i64 3, label %sw.bb
    i64 2, label %sw.bb2
    i64 1, label %sw.bb7
  ], !dbg !3731

sw.bb:                                            ; preds = %entry
  %7 = load i8*, i8** %b, align 8, !dbg !3732
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3732
  store i8* %incdec.ptr, i8** %b, align 8, !dbg !3732
  %8 = load i8, i8* %7, align 1, !dbg !3734
  %conv = zext i8 %8 to i32, !dbg !3735
  %shl = shl i32 %conv, 16, !dbg !3736
  %9 = load i32, i32* %t, align 4, !dbg !3737
  %or = or i32 %9, %shl, !dbg !3737
  store i32 %or, i32* %t, align 4, !dbg !3737
  br label %sw.bb2, !dbg !3738

sw.bb2:                                           ; preds = %entry, %sw.bb
  %10 = load i8*, i8** %b, align 8, !dbg !3739
  %incdec.ptr3 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !3739
  store i8* %incdec.ptr3, i8** %b, align 8, !dbg !3739
  %11 = load i8, i8* %10, align 1, !dbg !3740
  %conv4 = zext i8 %11 to i32, !dbg !3741
  %shl5 = shl i32 %conv4, 8, !dbg !3742
  %12 = load i32, i32* %t, align 4, !dbg !3743
  %or6 = or i32 %12, %shl5, !dbg !3743
  store i32 %or6, i32* %t, align 4, !dbg !3743
  br label %sw.bb7, !dbg !3744

sw.bb7:                                           ; preds = %entry, %sw.bb2
  %13 = load i8*, i8** %b, align 8, !dbg !3745
  %14 = load i8, i8* %13, align 1, !dbg !3746
  %conv8 = zext i8 %14 to i32, !dbg !3746
  %15 = load i32, i32* %t, align 4, !dbg !3747
  %or9 = or i32 %15, %conv8, !dbg !3747
  store i32 %or9, i32* %t, align 4, !dbg !3747
  br label %sw.default, !dbg !3748

sw.default:                                       ; preds = %entry, %sw.bb7
  br label %sw.epilog, !dbg !3749

sw.epilog:                                        ; preds = %sw.default
  %16 = load i32, i32* %t, align 4, !dbg !3750
  %17 = load i32, i32* %sum, align 4, !dbg !3751
  %xor = xor i32 %17, %16, !dbg !3751
  store i32 %xor, i32* %sum, align 4, !dbg !3751
  %18 = load i32, i32* %sum, align 4, !dbg !3752
  ret i32 %18, !dbg !3753
}

; Function Attrs: nounwind uwtable
define internal i8* @cab_read_ahead_cfdata_none(%struct.archive_read* %a, i64* %avail) #0 !dbg !566 {
entry:
  %retval = alloca i8*, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %avail.addr = alloca i64*, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %d = alloca i8*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3754, metadata !638), !dbg !3755
  store i64* %avail, i64** %avail.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %avail.addr, metadata !3756, metadata !638), !dbg !3757
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !3758, metadata !638), !dbg !3759
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3760
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3761
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3761
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3762
  %2 = load i8*, i8** %data, align 8, !dbg !3762
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !3763
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !3759
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !3764, metadata !638), !dbg !3765
  call void @llvm.dbg.declare(metadata i8** %d, metadata !3766, metadata !638), !dbg !3767
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3768
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 7, !dbg !3769
  %5 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !3769
  store %struct.cfdata* %5, %struct.cfdata** %cfdata, align 8, !dbg !3770
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3771
  %7 = load i64*, i64** %avail.addr, align 8, !dbg !3772
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %6, i64 1, i64* %7), !dbg !3773
  store i8* %call, i8** %d, align 8, !dbg !3774
  %8 = load i64*, i64** %avail.addr, align 8, !dbg !3775
  %9 = load i64, i64* %8, align 8, !dbg !3777
  %cmp = icmp sle i64 %9, 0, !dbg !3778
  br i1 %cmp, label %if.then, label %if.end, !dbg !3779

if.then:                                          ; preds = %entry
  %10 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3780
  %call1 = call i32 @truncated_error(%struct.archive_read* %10), !dbg !3782
  %conv = sext i32 %call1 to i64, !dbg !3782
  %11 = load i64*, i64** %avail.addr, align 8, !dbg !3783
  store i64 %conv, i64* %11, align 8, !dbg !3784
  store i8* null, i8** %retval, align 8, !dbg !3785
  br label %return, !dbg !3785

if.end:                                           ; preds = %entry
  %12 = load i64*, i64** %avail.addr, align 8, !dbg !3786
  %13 = load i64, i64* %12, align 8, !dbg !3788
  %14 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3789
  %uncompressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %14, i32 0, i32 4, !dbg !3790
  %15 = load i16, i16* %uncompressed_bytes_remaining, align 2, !dbg !3790
  %conv2 = zext i16 %15 to i64, !dbg !3789
  %cmp3 = icmp sgt i64 %13, %conv2, !dbg !3791
  br i1 %cmp3, label %if.then5, label %if.end8, !dbg !3792

if.then5:                                         ; preds = %if.end
  %16 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3793
  %uncompressed_bytes_remaining6 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %16, i32 0, i32 4, !dbg !3794
  %17 = load i16, i16* %uncompressed_bytes_remaining6, align 2, !dbg !3794
  %conv7 = zext i16 %17 to i64, !dbg !3793
  %18 = load i64*, i64** %avail.addr, align 8, !dbg !3795
  store i64 %conv7, i64* %18, align 8, !dbg !3796
  br label %if.end8, !dbg !3797

if.end8:                                          ; preds = %if.then5, %if.end
  %19 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3798
  %uncompressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %19, i32 0, i32 3, !dbg !3799
  %20 = load i16, i16* %uncompressed_size, align 8, !dbg !3799
  %21 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3800
  %uncompressed_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %21, i32 0, i32 5, !dbg !3801
  store i16 %20, i16* %uncompressed_avail, align 4, !dbg !3802
  %22 = load i64*, i64** %avail.addr, align 8, !dbg !3803
  %23 = load i64, i64* %22, align 8, !dbg !3804
  %24 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3805
  %unconsumed = getelementptr inbounds %struct.cfdata, %struct.cfdata* %24, i32 0, i32 7, !dbg !3806
  store i64 %23, i64* %unconsumed, align 8, !dbg !3807
  %25 = load i8*, i8** %d, align 8, !dbg !3808
  %26 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3809
  %sum_ptr = getelementptr inbounds %struct.cfdata, %struct.cfdata* %26, i32 0, i32 13, !dbg !3810
  store i8* %25, i8** %sum_ptr, align 8, !dbg !3811
  %27 = load i8*, i8** %d, align 8, !dbg !3812
  store i8* %27, i8** %retval, align 8, !dbg !3813
  br label %return, !dbg !3813

return:                                           ; preds = %if.end8, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !3814
  ret i8* %28, !dbg !3814
}

; Function Attrs: nounwind uwtable
define internal i8* @cab_read_ahead_cfdata_deflate(%struct.archive_read* %a, i64* %avail) #0 !dbg !567 {
entry:
  %retval = alloca i8*, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %avail.addr = alloca i64*, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %d = alloca i8*, align 8
  %r = alloca i32, align 4
  %mszip = alloca i32, align 4
  %uavail = alloca i16, align 2
  %eod = alloca i8, align 1
  %bytes_avail = alloca i64, align 8
  %bytes_avail212 = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3815, metadata !638), !dbg !3816
  store i64* %avail, i64** %avail.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %avail.addr, metadata !3817, metadata !638), !dbg !3818
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !3819, metadata !638), !dbg !3820
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3821
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3822
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3822
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3823
  %2 = load i8*, i8** %data, align 8, !dbg !3823
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !3824
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !3820
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !3825, metadata !638), !dbg !3826
  call void @llvm.dbg.declare(metadata i8** %d, metadata !3827, metadata !638), !dbg !3828
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3829, metadata !638), !dbg !3830
  call void @llvm.dbg.declare(metadata i32* %mszip, metadata !3831, metadata !638), !dbg !3832
  call void @llvm.dbg.declare(metadata i16* %uavail, metadata !3833, metadata !638), !dbg !3834
  call void @llvm.dbg.declare(metadata i8* %eod, metadata !3835, metadata !638), !dbg !3836
  store i8 0, i8* %eod, align 1, !dbg !3836
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3837
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 7, !dbg !3838
  %5 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !3838
  store %struct.cfdata* %5, %struct.cfdata** %cfdata, align 8, !dbg !3839
  %6 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3840
  %uncompressed_buffer = getelementptr inbounds %struct.cab, %struct.cab* %6, i32 0, i32 17, !dbg !3842
  %7 = load i8*, i8** %uncompressed_buffer, align 8, !dbg !3842
  %cmp = icmp eq i8* %7, null, !dbg !3843
  br i1 %cmp, label %if.then, label %if.end6, !dbg !3844

if.then:                                          ; preds = %entry
  %8 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3845
  %uncompressed_buffer_size = getelementptr inbounds %struct.cab, %struct.cab* %8, i32 0, i32 18, !dbg !3847
  store i64 32768, i64* %uncompressed_buffer_size, align 8, !dbg !3848
  %9 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3849
  %uncompressed_buffer_size1 = getelementptr inbounds %struct.cab, %struct.cab* %9, i32 0, i32 18, !dbg !3850
  %10 = load i64, i64* %uncompressed_buffer_size1, align 8, !dbg !3850
  %call = call noalias i8* @malloc(i64 %10) #8, !dbg !3851
  %11 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3852
  %uncompressed_buffer2 = getelementptr inbounds %struct.cab, %struct.cab* %11, i32 0, i32 17, !dbg !3853
  store i8* %call, i8** %uncompressed_buffer2, align 8, !dbg !3854
  %12 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3855
  %uncompressed_buffer3 = getelementptr inbounds %struct.cab, %struct.cab* %12, i32 0, i32 17, !dbg !3857
  %13 = load i8*, i8** %uncompressed_buffer3, align 8, !dbg !3857
  %cmp4 = icmp eq i8* %13, null, !dbg !3858
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3859

if.then5:                                         ; preds = %if.then
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3860
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !3862
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i32 0, i32 0)), !dbg !3863
  %15 = load i64*, i64** %avail.addr, align 8, !dbg !3864
  store i64 -30, i64* %15, align 8, !dbg !3865
  store i8* null, i8** %retval, align 8, !dbg !3866
  br label %return, !dbg !3866

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !3867

if.end6:                                          ; preds = %if.end, %entry
  %16 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3868
  %uncompressed_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %16, i32 0, i32 5, !dbg !3869
  %17 = load i16, i16* %uncompressed_avail, align 4, !dbg !3869
  store i16 %17, i16* %uavail, align 2, !dbg !3870
  %18 = load i16, i16* %uavail, align 2, !dbg !3871
  %conv = zext i16 %18 to i32, !dbg !3871
  %19 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3873
  %uncompressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %19, i32 0, i32 3, !dbg !3874
  %20 = load i16, i16* %uncompressed_size, align 8, !dbg !3874
  %conv7 = zext i16 %20 to i32, !dbg !3873
  %cmp8 = icmp eq i32 %conv, %conv7, !dbg !3875
  br i1 %cmp8, label %if.then10, label %if.end17, !dbg !3876

if.then10:                                        ; preds = %if.end6
  %21 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3877
  %uncompressed_buffer11 = getelementptr inbounds %struct.cab, %struct.cab* %21, i32 0, i32 17, !dbg !3879
  %22 = load i8*, i8** %uncompressed_buffer11, align 8, !dbg !3879
  %23 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3880
  %read_offset = getelementptr inbounds %struct.cfdata, %struct.cfdata* %23, i32 0, i32 6, !dbg !3881
  %24 = load i16, i16* %read_offset, align 2, !dbg !3881
  %conv12 = zext i16 %24 to i32, !dbg !3880
  %idx.ext = sext i32 %conv12 to i64, !dbg !3882
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext, !dbg !3882
  store i8* %add.ptr, i8** %d, align 8, !dbg !3883
  %25 = load i16, i16* %uavail, align 2, !dbg !3884
  %conv13 = zext i16 %25 to i32, !dbg !3884
  %26 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3885
  %read_offset14 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %26, i32 0, i32 6, !dbg !3886
  %27 = load i16, i16* %read_offset14, align 2, !dbg !3886
  %conv15 = zext i16 %27 to i32, !dbg !3885
  %sub = sub nsw i32 %conv13, %conv15, !dbg !3887
  %conv16 = sext i32 %sub to i64, !dbg !3884
  %28 = load i64*, i64** %avail.addr, align 8, !dbg !3888
  store i64 %conv16, i64* %28, align 8, !dbg !3889
  %29 = load i8*, i8** %d, align 8, !dbg !3890
  store i8* %29, i8** %retval, align 8, !dbg !3891
  br label %return, !dbg !3891

if.end17:                                         ; preds = %if.end6
  %30 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3892
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %30, i32 0, i32 5, !dbg !3894
  %31 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !3894
  %decompress_init = getelementptr inbounds %struct.cffolder, %struct.cffolder* %31, i32 0, i32 7, !dbg !3895
  %32 = load i8, i8* %decompress_init, align 4, !dbg !3895
  %tobool = icmp ne i8 %32, 0, !dbg !3892
  br i1 %tobool, label %if.end39, label %if.then18, !dbg !3896

if.then18:                                        ; preds = %if.end17
  %33 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3897
  %stream = getelementptr inbounds %struct.cab, %struct.cab* %33, i32 0, i32 24, !dbg !3899
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream, i32 0, i32 0, !dbg !3900
  store i8* null, i8** %next_in, align 8, !dbg !3901
  %34 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3902
  %stream19 = getelementptr inbounds %struct.cab, %struct.cab* %34, i32 0, i32 24, !dbg !3903
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream19, i32 0, i32 1, !dbg !3904
  store i32 0, i32* %avail_in, align 8, !dbg !3905
  %35 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3906
  %stream20 = getelementptr inbounds %struct.cab, %struct.cab* %35, i32 0, i32 24, !dbg !3907
  %total_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream20, i32 0, i32 2, !dbg !3908
  store i64 0, i64* %total_in, align 8, !dbg !3909
  %36 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3910
  %stream21 = getelementptr inbounds %struct.cab, %struct.cab* %36, i32 0, i32 24, !dbg !3911
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream21, i32 0, i32 3, !dbg !3912
  store i8* null, i8** %next_out, align 8, !dbg !3913
  %37 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3914
  %stream22 = getelementptr inbounds %struct.cab, %struct.cab* %37, i32 0, i32 24, !dbg !3915
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream22, i32 0, i32 4, !dbg !3916
  store i32 0, i32* %avail_out, align 8, !dbg !3917
  %38 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3918
  %stream23 = getelementptr inbounds %struct.cab, %struct.cab* %38, i32 0, i32 24, !dbg !3919
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream23, i32 0, i32 5, !dbg !3920
  store i64 0, i64* %total_out, align 8, !dbg !3921
  %39 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3922
  %stream_valid = getelementptr inbounds %struct.cab, %struct.cab* %39, i32 0, i32 25, !dbg !3924
  %40 = load i8, i8* %stream_valid, align 8, !dbg !3924
  %tobool24 = icmp ne i8 %40, 0, !dbg !3922
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !3925

if.then25:                                        ; preds = %if.then18
  %41 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3926
  %stream26 = getelementptr inbounds %struct.cab, %struct.cab* %41, i32 0, i32 24, !dbg !3927
  %call27 = call i32 @cm_zlib_inflateReset(%struct.z_stream_s* %stream26), !dbg !3928
  store i32 %call27, i32* %r, align 4, !dbg !3929
  br label %if.end30, !dbg !3930

if.else:                                          ; preds = %if.then18
  %42 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3931
  %stream28 = getelementptr inbounds %struct.cab, %struct.cab* %42, i32 0, i32 24, !dbg !3931
  %call29 = call i32 @cm_zlib_inflateInit2_(%struct.z_stream_s* %stream28, i32 -15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i32 112), !dbg !3931
  store i32 %call29, i32* %r, align 4, !dbg !3932
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then25
  %43 = load i32, i32* %r, align 4, !dbg !3933
  %cmp31 = icmp ne i32 %43, 0, !dbg !3935
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !3936

if.then33:                                        ; preds = %if.end30
  %44 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3937
  %archive34 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %44, i32 0, i32 0, !dbg !3939
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive34, i32 -1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.29, i32 0, i32 0)), !dbg !3940
  %45 = load i64*, i64** %avail.addr, align 8, !dbg !3941
  store i64 -30, i64* %45, align 8, !dbg !3942
  store i8* null, i8** %retval, align 8, !dbg !3943
  br label %return, !dbg !3943

if.end35:                                         ; preds = %if.end30
  %46 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3944
  %stream_valid36 = getelementptr inbounds %struct.cab, %struct.cab* %46, i32 0, i32 25, !dbg !3945
  store i8 1, i8* %stream_valid36, align 8, !dbg !3946
  %47 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3947
  %entry_cffolder37 = getelementptr inbounds %struct.cab, %struct.cab* %47, i32 0, i32 5, !dbg !3948
  %48 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder37, align 8, !dbg !3948
  %decompress_init38 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %48, i32 0, i32 7, !dbg !3949
  store i8 1, i8* %decompress_init38, align 4, !dbg !3950
  br label %if.end39, !dbg !3951

if.end39:                                         ; preds = %if.end35, %if.end17
  %49 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3952
  %compressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %49, i32 0, i32 2, !dbg !3954
  %50 = load i16, i16* %compressed_bytes_remaining, align 2, !dbg !3954
  %conv40 = zext i16 %50 to i32, !dbg !3952
  %51 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3955
  %compressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %51, i32 0, i32 1, !dbg !3956
  %52 = load i16, i16* %compressed_size, align 4, !dbg !3956
  %conv41 = zext i16 %52 to i32, !dbg !3955
  %cmp42 = icmp eq i32 %conv40, %conv41, !dbg !3957
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !3958

if.then44:                                        ; preds = %if.end39
  store i32 2, i32* %mszip, align 4, !dbg !3959
  br label %if.end46, !dbg !3960

if.else45:                                        ; preds = %if.end39
  store i32 0, i32* %mszip, align 4, !dbg !3961
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then44
  store i8 0, i8* %eod, align 1, !dbg !3962
  %53 = load i16, i16* %uavail, align 2, !dbg !3963
  %conv47 = zext i16 %53 to i64, !dbg !3963
  %54 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3964
  %stream48 = getelementptr inbounds %struct.cab, %struct.cab* %54, i32 0, i32 24, !dbg !3965
  %total_out49 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream48, i32 0, i32 5, !dbg !3966
  store i64 %conv47, i64* %total_out49, align 8, !dbg !3967
  br label %while.cond, !dbg !3968

while.cond:                                       ; preds = %if.end192, %if.end139, %if.end46
  %55 = load i8, i8* %eod, align 1, !dbg !3969
  %tobool50 = icmp ne i8 %55, 0, !dbg !3969
  br i1 %tobool50, label %land.end, label %land.rhs, !dbg !3971

land.rhs:                                         ; preds = %while.cond
  %56 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3972
  %stream51 = getelementptr inbounds %struct.cab, %struct.cab* %56, i32 0, i32 24, !dbg !3974
  %total_out52 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream51, i32 0, i32 5, !dbg !3975
  %57 = load i64, i64* %total_out52, align 8, !dbg !3975
  %58 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3976
  %uncompressed_size53 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %58, i32 0, i32 3, !dbg !3977
  %59 = load i16, i16* %uncompressed_size53, align 8, !dbg !3977
  %conv54 = zext i16 %59 to i64, !dbg !3976
  %cmp55 = icmp ult i64 %57, %conv54, !dbg !3978
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %60 = phi i1 [ false, %while.cond ], [ %cmp55, %land.rhs ]
  br i1 %60, label %while.body, label %while.end, !dbg !3979

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !3981, metadata !638), !dbg !3983
  %61 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3984
  %uncompressed_buffer57 = getelementptr inbounds %struct.cab, %struct.cab* %61, i32 0, i32 17, !dbg !3985
  %62 = load i8*, i8** %uncompressed_buffer57, align 8, !dbg !3985
  %63 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3986
  %stream58 = getelementptr inbounds %struct.cab, %struct.cab* %63, i32 0, i32 24, !dbg !3987
  %total_out59 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream58, i32 0, i32 5, !dbg !3988
  %64 = load i64, i64* %total_out59, align 8, !dbg !3988
  %add.ptr60 = getelementptr inbounds i8, i8* %62, i64 %64, !dbg !3989
  %65 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3990
  %stream61 = getelementptr inbounds %struct.cab, %struct.cab* %65, i32 0, i32 24, !dbg !3991
  %next_out62 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream61, i32 0, i32 3, !dbg !3992
  store i8* %add.ptr60, i8** %next_out62, align 8, !dbg !3993
  %66 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !3994
  %uncompressed_size63 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %66, i32 0, i32 3, !dbg !3995
  %67 = load i16, i16* %uncompressed_size63, align 8, !dbg !3995
  %conv64 = zext i16 %67 to i64, !dbg !3994
  %68 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !3996
  %stream65 = getelementptr inbounds %struct.cab, %struct.cab* %68, i32 0, i32 24, !dbg !3997
  %total_out66 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream65, i32 0, i32 5, !dbg !3998
  %69 = load i64, i64* %total_out66, align 8, !dbg !3998
  %sub67 = sub i64 %conv64, %69, !dbg !3999
  %conv68 = trunc i64 %sub67 to i32, !dbg !3994
  %70 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4000
  %stream69 = getelementptr inbounds %struct.cab, %struct.cab* %70, i32 0, i32 24, !dbg !4001
  %avail_out70 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream69, i32 0, i32 4, !dbg !4002
  store i32 %conv68, i32* %avail_out70, align 8, !dbg !4003
  %71 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4004
  %call71 = call i8* @__archive_read_ahead(%struct.archive_read* %71, i64 1, i64* %bytes_avail), !dbg !4005
  store i8* %call71, i8** %d, align 8, !dbg !4006
  %72 = load i64, i64* %bytes_avail, align 8, !dbg !4007
  %cmp72 = icmp sle i64 %72, 0, !dbg !4009
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !4010

if.then74:                                        ; preds = %while.body
  %73 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4011
  %call75 = call i32 @truncated_error(%struct.archive_read* %73), !dbg !4013
  %conv76 = sext i32 %call75 to i64, !dbg !4013
  %74 = load i64*, i64** %avail.addr, align 8, !dbg !4014
  store i64 %conv76, i64* %74, align 8, !dbg !4015
  store i8* null, i8** %retval, align 8, !dbg !4016
  br label %return, !dbg !4016

if.end77:                                         ; preds = %while.body
  %75 = load i64, i64* %bytes_avail, align 8, !dbg !4017
  %76 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4019
  %compressed_bytes_remaining78 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %76, i32 0, i32 2, !dbg !4020
  %77 = load i16, i16* %compressed_bytes_remaining78, align 2, !dbg !4020
  %conv79 = zext i16 %77 to i64, !dbg !4019
  %cmp80 = icmp sgt i64 %75, %conv79, !dbg !4021
  br i1 %cmp80, label %if.then82, label %if.end85, !dbg !4022

if.then82:                                        ; preds = %if.end77
  %78 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4023
  %compressed_bytes_remaining83 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %78, i32 0, i32 2, !dbg !4024
  %79 = load i16, i16* %compressed_bytes_remaining83, align 2, !dbg !4024
  %conv84 = zext i16 %79 to i64, !dbg !4023
  store i64 %conv84, i64* %bytes_avail, align 8, !dbg !4025
  br label %if.end85, !dbg !4026

if.end85:                                         ; preds = %if.then82, %if.end77
  %80 = load i8*, i8** %d, align 8, !dbg !4027
  %81 = ptrtoint i8* %80 to i64, !dbg !4028
  %82 = inttoptr i64 %81 to i8*, !dbg !4029
  %83 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4030
  %stream86 = getelementptr inbounds %struct.cab, %struct.cab* %83, i32 0, i32 24, !dbg !4031
  %next_in87 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream86, i32 0, i32 0, !dbg !4032
  store i8* %82, i8** %next_in87, align 8, !dbg !4033
  %84 = load i64, i64* %bytes_avail, align 8, !dbg !4034
  %conv88 = trunc i64 %84 to i32, !dbg !4035
  %85 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4036
  %stream89 = getelementptr inbounds %struct.cab, %struct.cab* %85, i32 0, i32 24, !dbg !4037
  %avail_in90 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream89, i32 0, i32 1, !dbg !4038
  store i32 %conv88, i32* %avail_in90, align 8, !dbg !4039
  %86 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4040
  %stream91 = getelementptr inbounds %struct.cab, %struct.cab* %86, i32 0, i32 24, !dbg !4041
  %total_in92 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream91, i32 0, i32 2, !dbg !4042
  store i64 0, i64* %total_in92, align 8, !dbg !4043
  %87 = load i32, i32* %mszip, align 4, !dbg !4044
  %cmp93 = icmp sgt i32 %87, 0, !dbg !4046
  br i1 %cmp93, label %if.then95, label %if.end179, !dbg !4047

if.then95:                                        ; preds = %if.end85
  %88 = load i64, i64* %bytes_avail, align 8, !dbg !4048
  %cmp96 = icmp sle i64 %88, 0, !dbg !4051
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !4052

if.then98:                                        ; preds = %if.then95
  br label %nomszip, !dbg !4053

if.end99:                                         ; preds = %if.then95
  %89 = load i64, i64* %bytes_avail, align 8, !dbg !4054
  %90 = load i32, i32* %mszip, align 4, !dbg !4056
  %conv100 = sext i32 %90 to i64, !dbg !4056
  %cmp101 = icmp sle i64 %89, %conv100, !dbg !4057
  br i1 %cmp101, label %if.then103, label %if.end142, !dbg !4058

if.then103:                                       ; preds = %if.end99
  %91 = load i32, i32* %mszip, align 4, !dbg !4059
  %cmp104 = icmp eq i32 %91, 2, !dbg !4062
  br i1 %cmp104, label %if.then106, label %if.else124, !dbg !4063

if.then106:                                       ; preds = %if.then103
  %92 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4064
  %stream107 = getelementptr inbounds %struct.cab, %struct.cab* %92, i32 0, i32 24, !dbg !4067
  %next_in108 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream107, i32 0, i32 0, !dbg !4068
  %93 = load i8*, i8** %next_in108, align 8, !dbg !4068
  %arrayidx = getelementptr inbounds i8, i8* %93, i64 0, !dbg !4064
  %94 = load i8, i8* %arrayidx, align 1, !dbg !4064
  %conv109 = zext i8 %94 to i32, !dbg !4064
  %cmp110 = icmp ne i32 %conv109, 67, !dbg !4069
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !4070

if.then112:                                       ; preds = %if.then106
  br label %nomszip, !dbg !4071

if.end113:                                        ; preds = %if.then106
  %95 = load i64, i64* %bytes_avail, align 8, !dbg !4072
  %cmp114 = icmp sgt i64 %95, 1, !dbg !4074
  br i1 %cmp114, label %land.lhs.true, label %if.end123, !dbg !4075

land.lhs.true:                                    ; preds = %if.end113
  %96 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4076
  %stream116 = getelementptr inbounds %struct.cab, %struct.cab* %96, i32 0, i32 24, !dbg !4077
  %next_in117 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream116, i32 0, i32 0, !dbg !4078
  %97 = load i8*, i8** %next_in117, align 8, !dbg !4078
  %arrayidx118 = getelementptr inbounds i8, i8* %97, i64 1, !dbg !4076
  %98 = load i8, i8* %arrayidx118, align 1, !dbg !4076
  %conv119 = zext i8 %98 to i32, !dbg !4076
  %cmp120 = icmp ne i32 %conv119, 75, !dbg !4079
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !4080

if.then122:                                       ; preds = %land.lhs.true
  br label %nomszip, !dbg !4082

if.end123:                                        ; preds = %land.lhs.true, %if.end113
  br label %if.end133, !dbg !4083

if.else124:                                       ; preds = %if.then103
  %99 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4084
  %stream125 = getelementptr inbounds %struct.cab, %struct.cab* %99, i32 0, i32 24, !dbg !4087
  %next_in126 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream125, i32 0, i32 0, !dbg !4088
  %100 = load i8*, i8** %next_in126, align 8, !dbg !4088
  %arrayidx127 = getelementptr inbounds i8, i8* %100, i64 0, !dbg !4084
  %101 = load i8, i8* %arrayidx127, align 1, !dbg !4084
  %conv128 = zext i8 %101 to i32, !dbg !4084
  %cmp129 = icmp ne i32 %conv128, 75, !dbg !4089
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !4084

if.then131:                                       ; preds = %if.else124
  br label %nomszip, !dbg !4090

if.end132:                                        ; preds = %if.else124
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end123
  %102 = load i64, i64* %bytes_avail, align 8, !dbg !4091
  %103 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4092
  %unconsumed = getelementptr inbounds %struct.cfdata, %struct.cfdata* %103, i32 0, i32 7, !dbg !4093
  store i64 %102, i64* %unconsumed, align 8, !dbg !4094
  %104 = load i8*, i8** %d, align 8, !dbg !4095
  %105 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4096
  %sum_ptr = getelementptr inbounds %struct.cfdata, %struct.cfdata* %105, i32 0, i32 13, !dbg !4097
  store i8* %104, i8** %sum_ptr, align 8, !dbg !4098
  %106 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4099
  %107 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4101
  %unconsumed134 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %107, i32 0, i32 7, !dbg !4102
  %108 = load i64, i64* %unconsumed134, align 8, !dbg !4102
  %call135 = call i64 @cab_minimum_consume_cfdata(%struct.archive_read* %106, i64 %108), !dbg !4103
  %cmp136 = icmp slt i64 %call135, 0, !dbg !4104
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !4105

if.then138:                                       ; preds = %if.end133
  %109 = load i64*, i64** %avail.addr, align 8, !dbg !4106
  store i64 -30, i64* %109, align 8, !dbg !4108
  store i8* null, i8** %retval, align 8, !dbg !4109
  br label %return, !dbg !4109

if.end139:                                        ; preds = %if.end133
  %110 = load i64, i64* %bytes_avail, align 8, !dbg !4110
  %conv140 = trunc i64 %110 to i32, !dbg !4111
  %111 = load i32, i32* %mszip, align 4, !dbg !4112
  %sub141 = sub nsw i32 %111, %conv140, !dbg !4112
  store i32 %sub141, i32* %mszip, align 4, !dbg !4112
  br label %while.cond, !dbg !4113

if.end142:                                        ; preds = %if.end99
  %112 = load i32, i32* %mszip, align 4, !dbg !4114
  %cmp143 = icmp eq i32 %112, 1, !dbg !4116
  br i1 %cmp143, label %land.lhs.true145, label %if.else153, !dbg !4117

land.lhs.true145:                                 ; preds = %if.end142
  %113 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4118
  %stream146 = getelementptr inbounds %struct.cab, %struct.cab* %113, i32 0, i32 24, !dbg !4120
  %next_in147 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream146, i32 0, i32 0, !dbg !4121
  %114 = load i8*, i8** %next_in147, align 8, !dbg !4121
  %arrayidx148 = getelementptr inbounds i8, i8* %114, i64 0, !dbg !4118
  %115 = load i8, i8* %arrayidx148, align 1, !dbg !4118
  %conv149 = zext i8 %115 to i32, !dbg !4118
  %cmp150 = icmp ne i32 %conv149, 75, !dbg !4122
  br i1 %cmp150, label %if.then152, label %if.else153, !dbg !4123

if.then152:                                       ; preds = %land.lhs.true145
  br label %nomszip, !dbg !4124

if.else153:                                       ; preds = %land.lhs.true145, %if.end142
  %116 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4125
  %stream154 = getelementptr inbounds %struct.cab, %struct.cab* %116, i32 0, i32 24, !dbg !4127
  %next_in155 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream154, i32 0, i32 0, !dbg !4128
  %117 = load i8*, i8** %next_in155, align 8, !dbg !4128
  %arrayidx156 = getelementptr inbounds i8, i8* %117, i64 0, !dbg !4125
  %118 = load i8, i8* %arrayidx156, align 1, !dbg !4125
  %conv157 = zext i8 %118 to i32, !dbg !4125
  %cmp158 = icmp ne i32 %conv157, 67, !dbg !4129
  br i1 %cmp158, label %if.then166, label %lor.lhs.false, !dbg !4130

lor.lhs.false:                                    ; preds = %if.else153
  %119 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4131
  %stream160 = getelementptr inbounds %struct.cab, %struct.cab* %119, i32 0, i32 24, !dbg !4132
  %next_in161 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream160, i32 0, i32 0, !dbg !4133
  %120 = load i8*, i8** %next_in161, align 8, !dbg !4133
  %arrayidx162 = getelementptr inbounds i8, i8* %120, i64 1, !dbg !4131
  %121 = load i8, i8* %arrayidx162, align 1, !dbg !4131
  %conv163 = zext i8 %121 to i32, !dbg !4131
  %cmp164 = icmp ne i32 %conv163, 75, !dbg !4134
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !4135

if.then166:                                       ; preds = %lor.lhs.false, %if.else153
  br label %nomszip, !dbg !4136

if.end167:                                        ; preds = %lor.lhs.false
  br label %if.end168

if.end168:                                        ; preds = %if.end167
  %122 = load i32, i32* %mszip, align 4, !dbg !4137
  %123 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4138
  %stream169 = getelementptr inbounds %struct.cab, %struct.cab* %123, i32 0, i32 24, !dbg !4139
  %next_in170 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream169, i32 0, i32 0, !dbg !4140
  %124 = load i8*, i8** %next_in170, align 8, !dbg !4141
  %idx.ext171 = sext i32 %122 to i64, !dbg !4141
  %add.ptr172 = getelementptr inbounds i8, i8* %124, i64 %idx.ext171, !dbg !4141
  store i8* %add.ptr172, i8** %next_in170, align 8, !dbg !4141
  %125 = load i32, i32* %mszip, align 4, !dbg !4142
  %126 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4143
  %stream173 = getelementptr inbounds %struct.cab, %struct.cab* %126, i32 0, i32 24, !dbg !4144
  %avail_in174 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream173, i32 0, i32 1, !dbg !4145
  %127 = load i32, i32* %avail_in174, align 8, !dbg !4146
  %sub175 = sub i32 %127, %125, !dbg !4146
  store i32 %sub175, i32* %avail_in174, align 8, !dbg !4146
  %128 = load i32, i32* %mszip, align 4, !dbg !4147
  %conv176 = sext i32 %128 to i64, !dbg !4147
  %129 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4148
  %stream177 = getelementptr inbounds %struct.cab, %struct.cab* %129, i32 0, i32 24, !dbg !4149
  %total_in178 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream177, i32 0, i32 2, !dbg !4150
  %130 = load i64, i64* %total_in178, align 8, !dbg !4151
  %add = add i64 %130, %conv176, !dbg !4151
  store i64 %add, i64* %total_in178, align 8, !dbg !4151
  store i32 0, i32* %mszip, align 4, !dbg !4152
  br label %if.end179, !dbg !4153

if.end179:                                        ; preds = %if.end168, %if.end85
  %131 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4154
  %stream180 = getelementptr inbounds %struct.cab, %struct.cab* %131, i32 0, i32 24, !dbg !4155
  %call181 = call i32 @cm_zlib_inflate(%struct.z_stream_s* %stream180, i32 0), !dbg !4156
  store i32 %call181, i32* %r, align 4, !dbg !4157
  %132 = load i32, i32* %r, align 4, !dbg !4158
  switch i32 %132, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb182
  ], !dbg !4159

sw.bb:                                            ; preds = %if.end179
  br label %sw.epilog, !dbg !4160

sw.bb182:                                         ; preds = %if.end179
  store i8 1, i8* %eod, align 1, !dbg !4162
  br label %sw.epilog, !dbg !4163

sw.default:                                       ; preds = %if.end179
  br label %zlibfailed, !dbg !4164

sw.epilog:                                        ; preds = %sw.bb182, %sw.bb
  %133 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4165
  %stream183 = getelementptr inbounds %struct.cab, %struct.cab* %133, i32 0, i32 24, !dbg !4166
  %total_in184 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream183, i32 0, i32 2, !dbg !4167
  %134 = load i64, i64* %total_in184, align 8, !dbg !4167
  %135 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4168
  %unconsumed185 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %135, i32 0, i32 7, !dbg !4169
  store i64 %134, i64* %unconsumed185, align 8, !dbg !4170
  %136 = load i8*, i8** %d, align 8, !dbg !4171
  %137 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4172
  %sum_ptr186 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %137, i32 0, i32 13, !dbg !4173
  store i8* %136, i8** %sum_ptr186, align 8, !dbg !4174
  %138 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4175
  %139 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4177
  %unconsumed187 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %139, i32 0, i32 7, !dbg !4178
  %140 = load i64, i64* %unconsumed187, align 8, !dbg !4178
  %call188 = call i64 @cab_minimum_consume_cfdata(%struct.archive_read* %138, i64 %140), !dbg !4179
  %cmp189 = icmp slt i64 %call188, 0, !dbg !4180
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !4181

if.then191:                                       ; preds = %sw.epilog
  %141 = load i64*, i64** %avail.addr, align 8, !dbg !4182
  store i64 -30, i64* %141, align 8, !dbg !4184
  store i8* null, i8** %retval, align 8, !dbg !4185
  br label %return, !dbg !4185

if.end192:                                        ; preds = %sw.epilog
  br label %while.cond, !dbg !4186

while.end:                                        ; preds = %land.end
  %142 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4188
  %stream193 = getelementptr inbounds %struct.cab, %struct.cab* %142, i32 0, i32 24, !dbg !4189
  %total_out194 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream193, i32 0, i32 5, !dbg !4190
  %143 = load i64, i64* %total_out194, align 8, !dbg !4190
  %conv195 = trunc i64 %143 to i16, !dbg !4191
  store i16 %conv195, i16* %uavail, align 2, !dbg !4192
  %144 = load i16, i16* %uavail, align 2, !dbg !4193
  %conv196 = zext i16 %144 to i32, !dbg !4193
  %145 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4195
  %uncompressed_size197 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %145, i32 0, i32 3, !dbg !4196
  %146 = load i16, i16* %uncompressed_size197, align 8, !dbg !4196
  %conv198 = zext i16 %146 to i32, !dbg !4195
  %cmp199 = icmp slt i32 %conv196, %conv198, !dbg !4197
  br i1 %cmp199, label %if.then201, label %if.end206, !dbg !4198

if.then201:                                       ; preds = %while.end
  %147 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4199
  %archive202 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %147, i32 0, i32 0, !dbg !4201
  %148 = load i16, i16* %uavail, align 2, !dbg !4202
  %conv203 = zext i16 %148 to i32, !dbg !4202
  %149 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4203
  %uncompressed_size204 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %149, i32 0, i32 3, !dbg !4204
  %150 = load i16, i16* %uncompressed_size204, align 8, !dbg !4204
  %conv205 = zext i16 %150 to i32, !dbg !4203
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive202, i32 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i32 0, i32 0), i32 %conv203, i32 %conv205), !dbg !4205
  %151 = load i64*, i64** %avail.addr, align 8, !dbg !4206
  store i64 -30, i64* %151, align 8, !dbg !4207
  store i8* null, i8** %retval, align 8, !dbg !4208
  br label %return, !dbg !4208

if.end206:                                        ; preds = %while.end
  %152 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4209
  %compressed_bytes_remaining207 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %152, i32 0, i32 2, !dbg !4211
  %153 = load i16, i16* %compressed_bytes_remaining207, align 2, !dbg !4211
  %conv208 = zext i16 %153 to i32, !dbg !4209
  %cmp209 = icmp sgt i32 %conv208, 0, !dbg !4212
  br i1 %cmp209, label %if.then211, label %if.end232, !dbg !4213

if.then211:                                       ; preds = %if.end206
  call void @llvm.dbg.declare(metadata i64* %bytes_avail212, metadata !4214, metadata !638), !dbg !4216
  %154 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4217
  %155 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4218
  %compressed_bytes_remaining213 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %155, i32 0, i32 2, !dbg !4219
  %156 = load i16, i16* %compressed_bytes_remaining213, align 2, !dbg !4219
  %conv214 = zext i16 %156 to i64, !dbg !4218
  %call215 = call i8* @__archive_read_ahead(%struct.archive_read* %154, i64 %conv214, i64* %bytes_avail212), !dbg !4220
  store i8* %call215, i8** %d, align 8, !dbg !4221
  %157 = load i64, i64* %bytes_avail212, align 8, !dbg !4222
  %cmp216 = icmp sle i64 %157, 0, !dbg !4224
  br i1 %cmp216, label %if.then218, label %if.end221, !dbg !4225

if.then218:                                       ; preds = %if.then211
  %158 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4226
  %call219 = call i32 @truncated_error(%struct.archive_read* %158), !dbg !4228
  %conv220 = sext i32 %call219 to i64, !dbg !4228
  %159 = load i64*, i64** %avail.addr, align 8, !dbg !4229
  store i64 %conv220, i64* %159, align 8, !dbg !4230
  store i8* null, i8** %retval, align 8, !dbg !4231
  br label %return, !dbg !4231

if.end221:                                        ; preds = %if.then211
  %160 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4232
  %compressed_bytes_remaining222 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %160, i32 0, i32 2, !dbg !4233
  %161 = load i16, i16* %compressed_bytes_remaining222, align 2, !dbg !4233
  %conv223 = zext i16 %161 to i64, !dbg !4232
  %162 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4234
  %unconsumed224 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %162, i32 0, i32 7, !dbg !4235
  store i64 %conv223, i64* %unconsumed224, align 8, !dbg !4236
  %163 = load i8*, i8** %d, align 8, !dbg !4237
  %164 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4238
  %sum_ptr225 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %164, i32 0, i32 13, !dbg !4239
  store i8* %163, i8** %sum_ptr225, align 8, !dbg !4240
  %165 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4241
  %166 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4243
  %unconsumed226 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %166, i32 0, i32 7, !dbg !4244
  %167 = load i64, i64* %unconsumed226, align 8, !dbg !4244
  %call227 = call i64 @cab_minimum_consume_cfdata(%struct.archive_read* %165, i64 %167), !dbg !4245
  %cmp228 = icmp slt i64 %call227, 0, !dbg !4246
  br i1 %cmp228, label %if.then230, label %if.end231, !dbg !4247

if.then230:                                       ; preds = %if.end221
  %168 = load i64*, i64** %avail.addr, align 8, !dbg !4248
  store i64 -30, i64* %168, align 8, !dbg !4250
  store i8* null, i8** %retval, align 8, !dbg !4251
  br label %return, !dbg !4251

if.end231:                                        ; preds = %if.end221
  br label %if.end232, !dbg !4252

if.end232:                                        ; preds = %if.end231, %if.end206
  %169 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4253
  %entry_cffolder233 = getelementptr inbounds %struct.cab, %struct.cab* %169, i32 0, i32 5, !dbg !4255
  %170 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder233, align 8, !dbg !4255
  %cfdata_index = getelementptr inbounds %struct.cffolder, %struct.cffolder* %170, i32 0, i32 6, !dbg !4256
  %171 = load i32, i32* %cfdata_index, align 8, !dbg !4256
  %172 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4257
  %entry_cffolder234 = getelementptr inbounds %struct.cab, %struct.cab* %172, i32 0, i32 5, !dbg !4258
  %173 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder234, align 8, !dbg !4258
  %cfdata_count = getelementptr inbounds %struct.cffolder, %struct.cffolder* %173, i32 0, i32 1, !dbg !4259
  %174 = load i16, i16* %cfdata_count, align 4, !dbg !4259
  %conv235 = zext i16 %174 to i32, !dbg !4257
  %cmp236 = icmp slt i32 %171, %conv235, !dbg !4260
  br i1 %cmp236, label %if.then238, label %if.end254, !dbg !4261

if.then238:                                       ; preds = %if.end232
  %175 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4262
  %stream239 = getelementptr inbounds %struct.cab, %struct.cab* %175, i32 0, i32 24, !dbg !4264
  %call240 = call i32 @cm_zlib_inflateReset(%struct.z_stream_s* %stream239), !dbg !4265
  store i32 %call240, i32* %r, align 4, !dbg !4266
  %176 = load i32, i32* %r, align 4, !dbg !4267
  %cmp241 = icmp ne i32 %176, 0, !dbg !4269
  br i1 %cmp241, label %if.then243, label %if.end244, !dbg !4270

if.then243:                                       ; preds = %if.then238
  br label %zlibfailed, !dbg !4271

if.end244:                                        ; preds = %if.then238
  %177 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4272
  %stream245 = getelementptr inbounds %struct.cab, %struct.cab* %177, i32 0, i32 24, !dbg !4273
  %178 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4274
  %uncompressed_buffer246 = getelementptr inbounds %struct.cab, %struct.cab* %178, i32 0, i32 17, !dbg !4275
  %179 = load i8*, i8** %uncompressed_buffer246, align 8, !dbg !4275
  %180 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4276
  %uncompressed_size247 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %180, i32 0, i32 3, !dbg !4277
  %181 = load i16, i16* %uncompressed_size247, align 8, !dbg !4277
  %conv248 = zext i16 %181 to i32, !dbg !4276
  %call249 = call i32 @cm_zlib_inflateSetDictionary(%struct.z_stream_s* %stream245, i8* %179, i32 %conv248), !dbg !4278
  store i32 %call249, i32* %r, align 4, !dbg !4279
  %182 = load i32, i32* %r, align 4, !dbg !4280
  %cmp250 = icmp ne i32 %182, 0, !dbg !4282
  br i1 %cmp250, label %if.then252, label %if.end253, !dbg !4283

if.then252:                                       ; preds = %if.end244
  br label %zlibfailed, !dbg !4284

if.end253:                                        ; preds = %if.end244
  br label %if.end254, !dbg !4285

if.end254:                                        ; preds = %if.end253, %if.end232
  %183 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4286
  %uncompressed_buffer255 = getelementptr inbounds %struct.cab, %struct.cab* %183, i32 0, i32 17, !dbg !4287
  %184 = load i8*, i8** %uncompressed_buffer255, align 8, !dbg !4287
  %185 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4288
  %read_offset256 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %185, i32 0, i32 6, !dbg !4289
  %186 = load i16, i16* %read_offset256, align 2, !dbg !4289
  %conv257 = zext i16 %186 to i32, !dbg !4288
  %idx.ext258 = sext i32 %conv257 to i64, !dbg !4290
  %add.ptr259 = getelementptr inbounds i8, i8* %184, i64 %idx.ext258, !dbg !4290
  store i8* %add.ptr259, i8** %d, align 8, !dbg !4291
  %187 = load i16, i16* %uavail, align 2, !dbg !4292
  %conv260 = zext i16 %187 to i32, !dbg !4292
  %188 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4293
  %read_offset261 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %188, i32 0, i32 6, !dbg !4294
  %189 = load i16, i16* %read_offset261, align 2, !dbg !4294
  %conv262 = zext i16 %189 to i32, !dbg !4293
  %sub263 = sub nsw i32 %conv260, %conv262, !dbg !4295
  %conv264 = sext i32 %sub263 to i64, !dbg !4292
  %190 = load i64*, i64** %avail.addr, align 8, !dbg !4296
  store i64 %conv264, i64* %190, align 8, !dbg !4297
  %191 = load i16, i16* %uavail, align 2, !dbg !4298
  %192 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4299
  %uncompressed_avail265 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %192, i32 0, i32 5, !dbg !4300
  store i16 %191, i16* %uncompressed_avail265, align 4, !dbg !4301
  %193 = load i8*, i8** %d, align 8, !dbg !4302
  store i8* %193, i8** %retval, align 8, !dbg !4303
  br label %return, !dbg !4303

zlibfailed:                                       ; preds = %if.then252, %if.then243, %sw.default
  %194 = load i32, i32* %r, align 4, !dbg !4304
  switch i32 %194, label %sw.default268 [
    i32 -4, label %sw.bb266
  ], !dbg !4305

sw.bb266:                                         ; preds = %zlibfailed
  %195 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4306
  %archive267 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %195, i32 0, i32 0, !dbg !4308
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive267, i32 12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31, i32 0, i32 0)), !dbg !4309
  br label %sw.epilog270, !dbg !4310

sw.default268:                                    ; preds = %zlibfailed
  %196 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4311
  %archive269 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %196, i32 0, i32 0, !dbg !4312
  %197 = load i32, i32* %r, align 4, !dbg !4313
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive269, i32 -1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i32 0, i32 0), i32 %197), !dbg !4314
  br label %sw.epilog270, !dbg !4315

sw.epilog270:                                     ; preds = %sw.default268, %sw.bb266
  %198 = load i64*, i64** %avail.addr, align 8, !dbg !4316
  store i64 -30, i64* %198, align 8, !dbg !4317
  store i8* null, i8** %retval, align 8, !dbg !4318
  br label %return, !dbg !4318

nomszip:                                          ; preds = %if.then166, %if.then152, %if.then131, %if.then122, %if.then112, %if.then98
  %199 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4319
  %archive271 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %199, i32 0, i32 0, !dbg !4320
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive271, i32 -1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.33, i32 0, i32 0)), !dbg !4321
  %200 = load i64*, i64** %avail.addr, align 8, !dbg !4322
  store i64 -30, i64* %200, align 8, !dbg !4323
  store i8* null, i8** %retval, align 8, !dbg !4324
  br label %return, !dbg !4324

return:                                           ; preds = %nomszip, %sw.epilog270, %if.end254, %if.then230, %if.then218, %if.then201, %if.then191, %if.then138, %if.then74, %if.then33, %if.then10, %if.then5
  %201 = load i8*, i8** %retval, align 8, !dbg !4325
  ret i8* %201, !dbg !4325
}

; Function Attrs: nounwind uwtable
define internal i8* @cab_read_ahead_cfdata_lzx(%struct.archive_read* %a, i64* %avail) #0 !dbg !568 {
entry:
  %retval = alloca i8*, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %avail.addr = alloca i64*, align 8
  %cab = alloca %struct.cab*, align 8
  %cfdata = alloca %struct.cfdata*, align 8
  %d = alloca i8*, align 8
  %r = alloca i32, align 4
  %uavail = alloca i16, align 2
  %bytes_avail = alloca i64, align 8
  %bytes_avail89 = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4326, metadata !638), !dbg !4327
  store i64* %avail, i64** %avail.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %avail.addr, metadata !4328, metadata !638), !dbg !4329
  call void @llvm.dbg.declare(metadata %struct.cab** %cab, metadata !4330, metadata !638), !dbg !4331
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4332
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !4333
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4333
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !4334
  %2 = load i8*, i8** %data, align 8, !dbg !4334
  %3 = bitcast i8* %2 to %struct.cab*, !dbg !4335
  store %struct.cab* %3, %struct.cab** %cab, align 8, !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.cfdata** %cfdata, metadata !4336, metadata !638), !dbg !4337
  call void @llvm.dbg.declare(metadata i8** %d, metadata !4338, metadata !638), !dbg !4339
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4340, metadata !638), !dbg !4341
  call void @llvm.dbg.declare(metadata i16* %uavail, metadata !4342, metadata !638), !dbg !4343
  %4 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4344
  %entry_cfdata = getelementptr inbounds %struct.cab, %struct.cab* %4, i32 0, i32 7, !dbg !4345
  %5 = load %struct.cfdata*, %struct.cfdata** %entry_cfdata, align 8, !dbg !4345
  store %struct.cfdata* %5, %struct.cfdata** %cfdata, align 8, !dbg !4346
  %6 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4347
  %uncompressed_buffer = getelementptr inbounds %struct.cab, %struct.cab* %6, i32 0, i32 17, !dbg !4349
  %7 = load i8*, i8** %uncompressed_buffer, align 8, !dbg !4349
  %cmp = icmp eq i8* %7, null, !dbg !4350
  br i1 %cmp, label %if.then, label %if.end6, !dbg !4351

if.then:                                          ; preds = %entry
  %8 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4352
  %uncompressed_buffer_size = getelementptr inbounds %struct.cab, %struct.cab* %8, i32 0, i32 18, !dbg !4354
  store i64 32768, i64* %uncompressed_buffer_size, align 8, !dbg !4355
  %9 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4356
  %uncompressed_buffer_size1 = getelementptr inbounds %struct.cab, %struct.cab* %9, i32 0, i32 18, !dbg !4357
  %10 = load i64, i64* %uncompressed_buffer_size1, align 8, !dbg !4357
  %call = call noalias i8* @malloc(i64 %10) #8, !dbg !4358
  %11 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4359
  %uncompressed_buffer2 = getelementptr inbounds %struct.cab, %struct.cab* %11, i32 0, i32 17, !dbg !4360
  store i8* %call, i8** %uncompressed_buffer2, align 8, !dbg !4361
  %12 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4362
  %uncompressed_buffer3 = getelementptr inbounds %struct.cab, %struct.cab* %12, i32 0, i32 17, !dbg !4364
  %13 = load i8*, i8** %uncompressed_buffer3, align 8, !dbg !4364
  %cmp4 = icmp eq i8* %13, null, !dbg !4365
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !4366

if.then5:                                         ; preds = %if.then
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4367
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !4369
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i32 0, i32 0)), !dbg !4370
  %15 = load i64*, i64** %avail.addr, align 8, !dbg !4371
  store i64 -30, i64* %15, align 8, !dbg !4372
  store i8* null, i8** %retval, align 8, !dbg !4373
  br label %return, !dbg !4373

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !4374

if.end6:                                          ; preds = %if.end, %entry
  %16 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4375
  %uncompressed_avail = getelementptr inbounds %struct.cfdata, %struct.cfdata* %16, i32 0, i32 5, !dbg !4376
  %17 = load i16, i16* %uncompressed_avail, align 4, !dbg !4376
  store i16 %17, i16* %uavail, align 2, !dbg !4377
  %18 = load i16, i16* %uavail, align 2, !dbg !4378
  %conv = zext i16 %18 to i32, !dbg !4378
  %19 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4380
  %uncompressed_size = getelementptr inbounds %struct.cfdata, %struct.cfdata* %19, i32 0, i32 3, !dbg !4381
  %20 = load i16, i16* %uncompressed_size, align 8, !dbg !4381
  %conv7 = zext i16 %20 to i32, !dbg !4380
  %cmp8 = icmp eq i32 %conv, %conv7, !dbg !4382
  br i1 %cmp8, label %if.then10, label %if.end17, !dbg !4383

if.then10:                                        ; preds = %if.end6
  %21 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4384
  %uncompressed_buffer11 = getelementptr inbounds %struct.cab, %struct.cab* %21, i32 0, i32 17, !dbg !4386
  %22 = load i8*, i8** %uncompressed_buffer11, align 8, !dbg !4386
  %23 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4387
  %read_offset = getelementptr inbounds %struct.cfdata, %struct.cfdata* %23, i32 0, i32 6, !dbg !4388
  %24 = load i16, i16* %read_offset, align 2, !dbg !4388
  %conv12 = zext i16 %24 to i32, !dbg !4387
  %idx.ext = sext i32 %conv12 to i64, !dbg !4389
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext, !dbg !4389
  store i8* %add.ptr, i8** %d, align 8, !dbg !4390
  %25 = load i16, i16* %uavail, align 2, !dbg !4391
  %conv13 = zext i16 %25 to i32, !dbg !4391
  %26 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4392
  %read_offset14 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %26, i32 0, i32 6, !dbg !4393
  %27 = load i16, i16* %read_offset14, align 2, !dbg !4393
  %conv15 = zext i16 %27 to i32, !dbg !4392
  %sub = sub nsw i32 %conv13, %conv15, !dbg !4394
  %conv16 = sext i32 %sub to i64, !dbg !4391
  %28 = load i64*, i64** %avail.addr, align 8, !dbg !4395
  store i64 %conv16, i64* %28, align 8, !dbg !4396
  %29 = load i8*, i8** %d, align 8, !dbg !4397
  store i8* %29, i8** %retval, align 8, !dbg !4398
  br label %return, !dbg !4398

if.end17:                                         ; preds = %if.end6
  %30 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4399
  %entry_cffolder = getelementptr inbounds %struct.cab, %struct.cab* %30, i32 0, i32 5, !dbg !4401
  %31 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder, align 8, !dbg !4401
  %decompress_init = getelementptr inbounds %struct.cffolder, %struct.cffolder* %31, i32 0, i32 7, !dbg !4402
  %32 = load i8, i8* %decompress_init, align 4, !dbg !4402
  %tobool = icmp ne i8 %32, 0, !dbg !4399
  br i1 %tobool, label %if.end29, label %if.then18, !dbg !4403

if.then18:                                        ; preds = %if.end17
  %33 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4404
  %xstrm = getelementptr inbounds %struct.cab, %struct.cab* %33, i32 0, i32 26, !dbg !4406
  %34 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4407
  %entry_cffolder19 = getelementptr inbounds %struct.cab, %struct.cab* %34, i32 0, i32 5, !dbg !4408
  %35 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder19, align 8, !dbg !4408
  %compdata = getelementptr inbounds %struct.cffolder, %struct.cffolder* %35, i32 0, i32 3, !dbg !4409
  %36 = load i16, i16* %compdata, align 8, !dbg !4409
  %conv20 = zext i16 %36 to i32, !dbg !4407
  %call21 = call i32 @lzx_decode_init(%struct.lzx_stream* %xstrm, i32 %conv20), !dbg !4410
  store i32 %call21, i32* %r, align 4, !dbg !4411
  %37 = load i32, i32* %r, align 4, !dbg !4412
  %cmp22 = icmp ne i32 %37, 0, !dbg !4414
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !4415

if.then24:                                        ; preds = %if.then18
  %38 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4416
  %archive25 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %38, i32 0, i32 0, !dbg !4418
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive25, i32 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i32 0, i32 0)), !dbg !4419
  %39 = load i64*, i64** %avail.addr, align 8, !dbg !4420
  store i64 -30, i64* %39, align 8, !dbg !4421
  store i8* null, i8** %retval, align 8, !dbg !4422
  br label %return, !dbg !4422

if.end26:                                         ; preds = %if.then18
  %40 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4423
  %entry_cffolder27 = getelementptr inbounds %struct.cab, %struct.cab* %40, i32 0, i32 5, !dbg !4424
  %41 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder27, align 8, !dbg !4424
  %decompress_init28 = getelementptr inbounds %struct.cffolder, %struct.cffolder* %41, i32 0, i32 7, !dbg !4425
  store i8 1, i8* %decompress_init28, align 4, !dbg !4426
  br label %if.end29, !dbg !4427

if.end29:                                         ; preds = %if.end26, %if.end17
  %42 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4428
  %xstrm30 = getelementptr inbounds %struct.cab, %struct.cab* %42, i32 0, i32 26, !dbg !4429
  call void @lzx_cleanup_bitstream(%struct.lzx_stream* %xstrm30), !dbg !4430
  %43 = load i16, i16* %uavail, align 2, !dbg !4431
  %conv31 = zext i16 %43 to i64, !dbg !4431
  %44 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4432
  %xstrm32 = getelementptr inbounds %struct.cab, %struct.cab* %44, i32 0, i32 26, !dbg !4433
  %total_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm32, i32 0, i32 5, !dbg !4434
  store i64 %conv31, i64* %total_out, align 8, !dbg !4435
  br label %while.cond, !dbg !4436

while.cond:                                       ; preds = %if.end80, %if.end29
  %45 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4437
  %xstrm33 = getelementptr inbounds %struct.cab, %struct.cab* %45, i32 0, i32 26, !dbg !4439
  %total_out34 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm33, i32 0, i32 5, !dbg !4440
  %46 = load i64, i64* %total_out34, align 8, !dbg !4440
  %47 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4441
  %uncompressed_size35 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %47, i32 0, i32 3, !dbg !4442
  %48 = load i16, i16* %uncompressed_size35, align 8, !dbg !4442
  %conv36 = zext i16 %48 to i64, !dbg !4441
  %cmp37 = icmp slt i64 %46, %conv36, !dbg !4443
  br i1 %cmp37, label %while.body, label %while.end, !dbg !4444

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !4445, metadata !638), !dbg !4447
  %49 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4448
  %uncompressed_buffer39 = getelementptr inbounds %struct.cab, %struct.cab* %49, i32 0, i32 17, !dbg !4449
  %50 = load i8*, i8** %uncompressed_buffer39, align 8, !dbg !4449
  %51 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4450
  %xstrm40 = getelementptr inbounds %struct.cab, %struct.cab* %51, i32 0, i32 26, !dbg !4451
  %total_out41 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm40, i32 0, i32 5, !dbg !4452
  %52 = load i64, i64* %total_out41, align 8, !dbg !4452
  %add.ptr42 = getelementptr inbounds i8, i8* %50, i64 %52, !dbg !4453
  %53 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4454
  %xstrm43 = getelementptr inbounds %struct.cab, %struct.cab* %53, i32 0, i32 26, !dbg !4455
  %next_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm43, i32 0, i32 3, !dbg !4456
  store i8* %add.ptr42, i8** %next_out, align 8, !dbg !4457
  %54 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4458
  %uncompressed_size44 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %54, i32 0, i32 3, !dbg !4459
  %55 = load i16, i16* %uncompressed_size44, align 8, !dbg !4459
  %conv45 = zext i16 %55 to i64, !dbg !4458
  %56 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4460
  %xstrm46 = getelementptr inbounds %struct.cab, %struct.cab* %56, i32 0, i32 26, !dbg !4461
  %total_out47 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm46, i32 0, i32 5, !dbg !4462
  %57 = load i64, i64* %total_out47, align 8, !dbg !4462
  %sub48 = sub nsw i64 %conv45, %57, !dbg !4463
  %58 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4464
  %xstrm49 = getelementptr inbounds %struct.cab, %struct.cab* %58, i32 0, i32 26, !dbg !4465
  %avail_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm49, i32 0, i32 4, !dbg !4466
  store i64 %sub48, i64* %avail_out, align 8, !dbg !4467
  %59 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4468
  %call50 = call i8* @__archive_read_ahead(%struct.archive_read* %59, i64 1, i64* %bytes_avail), !dbg !4469
  store i8* %call50, i8** %d, align 8, !dbg !4470
  %60 = load i64, i64* %bytes_avail, align 8, !dbg !4471
  %cmp51 = icmp sle i64 %60, 0, !dbg !4473
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !4474

if.then53:                                        ; preds = %while.body
  %61 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4475
  %archive54 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %61, i32 0, i32 0, !dbg !4477
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive54, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0)), !dbg !4478
  %62 = load i64*, i64** %avail.addr, align 8, !dbg !4479
  store i64 -30, i64* %62, align 8, !dbg !4480
  store i8* null, i8** %retval, align 8, !dbg !4481
  br label %return, !dbg !4481

if.end55:                                         ; preds = %while.body
  %63 = load i64, i64* %bytes_avail, align 8, !dbg !4482
  %64 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4484
  %compressed_bytes_remaining = getelementptr inbounds %struct.cfdata, %struct.cfdata* %64, i32 0, i32 2, !dbg !4485
  %65 = load i16, i16* %compressed_bytes_remaining, align 2, !dbg !4485
  %conv56 = zext i16 %65 to i64, !dbg !4484
  %cmp57 = icmp sgt i64 %63, %conv56, !dbg !4486
  br i1 %cmp57, label %if.then59, label %if.end62, !dbg !4487

if.then59:                                        ; preds = %if.end55
  %66 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4488
  %compressed_bytes_remaining60 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %66, i32 0, i32 2, !dbg !4489
  %67 = load i16, i16* %compressed_bytes_remaining60, align 2, !dbg !4489
  %conv61 = zext i16 %67 to i64, !dbg !4488
  store i64 %conv61, i64* %bytes_avail, align 8, !dbg !4490
  br label %if.end62, !dbg !4491

if.end62:                                         ; preds = %if.then59, %if.end55
  %68 = load i8*, i8** %d, align 8, !dbg !4492
  %69 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4493
  %xstrm63 = getelementptr inbounds %struct.cab, %struct.cab* %69, i32 0, i32 26, !dbg !4494
  %next_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm63, i32 0, i32 0, !dbg !4495
  store i8* %68, i8** %next_in, align 8, !dbg !4496
  %70 = load i64, i64* %bytes_avail, align 8, !dbg !4497
  %71 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4498
  %xstrm64 = getelementptr inbounds %struct.cab, %struct.cab* %71, i32 0, i32 26, !dbg !4499
  %avail_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm64, i32 0, i32 1, !dbg !4500
  store i64 %70, i64* %avail_in, align 8, !dbg !4501
  %72 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4502
  %xstrm65 = getelementptr inbounds %struct.cab, %struct.cab* %72, i32 0, i32 26, !dbg !4503
  %total_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm65, i32 0, i32 2, !dbg !4504
  store i64 0, i64* %total_in, align 8, !dbg !4505
  %73 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4506
  %xstrm66 = getelementptr inbounds %struct.cab, %struct.cab* %73, i32 0, i32 26, !dbg !4507
  %74 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4508
  %compressed_bytes_remaining67 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %74, i32 0, i32 2, !dbg !4509
  %75 = load i16, i16* %compressed_bytes_remaining67, align 2, !dbg !4509
  %conv68 = zext i16 %75 to i64, !dbg !4508
  %76 = load i64, i64* %bytes_avail, align 8, !dbg !4510
  %cmp69 = icmp eq i64 %conv68, %76, !dbg !4511
  %conv70 = zext i1 %cmp69 to i32, !dbg !4511
  %call71 = call i32 @lzx_decode(%struct.lzx_stream* %xstrm66, i32 %conv70), !dbg !4512
  store i32 %call71, i32* %r, align 4, !dbg !4513
  %77 = load i32, i32* %r, align 4, !dbg !4514
  switch i32 %77, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
  ], !dbg !4515

sw.bb:                                            ; preds = %if.end62, %if.end62
  br label %sw.epilog, !dbg !4516

sw.default:                                       ; preds = %if.end62
  %78 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4518
  %archive72 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %78, i32 0, i32 0, !dbg !4519
  %79 = load i32, i32* %r, align 4, !dbg !4520
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive72, i32 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i32 %79), !dbg !4521
  %80 = load i64*, i64** %avail.addr, align 8, !dbg !4522
  store i64 -30, i64* %80, align 8, !dbg !4523
  store i8* null, i8** %retval, align 8, !dbg !4524
  br label %return, !dbg !4524

sw.epilog:                                        ; preds = %sw.bb
  %81 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4525
  %xstrm73 = getelementptr inbounds %struct.cab, %struct.cab* %81, i32 0, i32 26, !dbg !4526
  %total_in74 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm73, i32 0, i32 2, !dbg !4527
  %82 = load i64, i64* %total_in74, align 8, !dbg !4527
  %83 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4528
  %unconsumed = getelementptr inbounds %struct.cfdata, %struct.cfdata* %83, i32 0, i32 7, !dbg !4529
  store i64 %82, i64* %unconsumed, align 8, !dbg !4530
  %84 = load i8*, i8** %d, align 8, !dbg !4531
  %85 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4532
  %sum_ptr = getelementptr inbounds %struct.cfdata, %struct.cfdata* %85, i32 0, i32 13, !dbg !4533
  store i8* %84, i8** %sum_ptr, align 8, !dbg !4534
  %86 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4535
  %87 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4537
  %unconsumed75 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %87, i32 0, i32 7, !dbg !4538
  %88 = load i64, i64* %unconsumed75, align 8, !dbg !4538
  %call76 = call i64 @cab_minimum_consume_cfdata(%struct.archive_read* %86, i64 %88), !dbg !4539
  %cmp77 = icmp slt i64 %call76, 0, !dbg !4540
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !4541

if.then79:                                        ; preds = %sw.epilog
  %89 = load i64*, i64** %avail.addr, align 8, !dbg !4542
  store i64 -30, i64* %89, align 8, !dbg !4544
  store i8* null, i8** %retval, align 8, !dbg !4545
  br label %return, !dbg !4545

if.end80:                                         ; preds = %sw.epilog
  br label %while.cond, !dbg !4546

while.end:                                        ; preds = %while.cond
  %90 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4548
  %xstrm81 = getelementptr inbounds %struct.cab, %struct.cab* %90, i32 0, i32 26, !dbg !4549
  %total_out82 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %xstrm81, i32 0, i32 5, !dbg !4550
  %91 = load i64, i64* %total_out82, align 8, !dbg !4550
  %conv83 = trunc i64 %91 to i16, !dbg !4551
  store i16 %conv83, i16* %uavail, align 2, !dbg !4552
  %92 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4553
  %compressed_bytes_remaining84 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %92, i32 0, i32 2, !dbg !4555
  %93 = load i16, i16* %compressed_bytes_remaining84, align 2, !dbg !4555
  %conv85 = zext i16 %93 to i32, !dbg !4553
  %cmp86 = icmp sgt i32 %conv85, 0, !dbg !4556
  br i1 %cmp86, label %if.then88, label %if.end109, !dbg !4557

if.then88:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i64* %bytes_avail89, metadata !4558, metadata !638), !dbg !4560
  %94 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4561
  %95 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4562
  %compressed_bytes_remaining90 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %95, i32 0, i32 2, !dbg !4563
  %96 = load i16, i16* %compressed_bytes_remaining90, align 2, !dbg !4563
  %conv91 = zext i16 %96 to i64, !dbg !4562
  %call92 = call i8* @__archive_read_ahead(%struct.archive_read* %94, i64 %conv91, i64* %bytes_avail89), !dbg !4564
  store i8* %call92, i8** %d, align 8, !dbg !4565
  %97 = load i64, i64* %bytes_avail89, align 8, !dbg !4566
  %cmp93 = icmp sle i64 %97, 0, !dbg !4568
  br i1 %cmp93, label %if.then95, label %if.end98, !dbg !4569

if.then95:                                        ; preds = %if.then88
  %98 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4570
  %call96 = call i32 @truncated_error(%struct.archive_read* %98), !dbg !4572
  %conv97 = sext i32 %call96 to i64, !dbg !4572
  %99 = load i64*, i64** %avail.addr, align 8, !dbg !4573
  store i64 %conv97, i64* %99, align 8, !dbg !4574
  store i8* null, i8** %retval, align 8, !dbg !4575
  br label %return, !dbg !4575

if.end98:                                         ; preds = %if.then88
  %100 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4576
  %compressed_bytes_remaining99 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %100, i32 0, i32 2, !dbg !4577
  %101 = load i16, i16* %compressed_bytes_remaining99, align 2, !dbg !4577
  %conv100 = zext i16 %101 to i64, !dbg !4576
  %102 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4578
  %unconsumed101 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %102, i32 0, i32 7, !dbg !4579
  store i64 %conv100, i64* %unconsumed101, align 8, !dbg !4580
  %103 = load i8*, i8** %d, align 8, !dbg !4581
  %104 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4582
  %sum_ptr102 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %104, i32 0, i32 13, !dbg !4583
  store i8* %103, i8** %sum_ptr102, align 8, !dbg !4584
  %105 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4585
  %106 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4587
  %unconsumed103 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %106, i32 0, i32 7, !dbg !4588
  %107 = load i64, i64* %unconsumed103, align 8, !dbg !4588
  %call104 = call i64 @cab_minimum_consume_cfdata(%struct.archive_read* %105, i64 %107), !dbg !4589
  %cmp105 = icmp slt i64 %call104, 0, !dbg !4590
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !4591

if.then107:                                       ; preds = %if.end98
  %108 = load i64*, i64** %avail.addr, align 8, !dbg !4592
  store i64 -30, i64* %108, align 8, !dbg !4594
  store i8* null, i8** %retval, align 8, !dbg !4595
  br label %return, !dbg !4595

if.end108:                                        ; preds = %if.end98
  br label %if.end109, !dbg !4596

if.end109:                                        ; preds = %if.end108, %while.end
  %109 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4597
  %xstrm110 = getelementptr inbounds %struct.cab, %struct.cab* %109, i32 0, i32 26, !dbg !4598
  %110 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4599
  %uncompressed_buffer111 = getelementptr inbounds %struct.cab, %struct.cab* %110, i32 0, i32 17, !dbg !4600
  %111 = load i8*, i8** %uncompressed_buffer111, align 8, !dbg !4600
  %112 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4601
  %uncompressed_size112 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %112, i32 0, i32 3, !dbg !4602
  %113 = load i16, i16* %uncompressed_size112, align 8, !dbg !4602
  %conv113 = zext i16 %113 to i64, !dbg !4601
  %114 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4603
  %entry_cffolder114 = getelementptr inbounds %struct.cab, %struct.cab* %114, i32 0, i32 5, !dbg !4604
  %115 = load %struct.cffolder*, %struct.cffolder** %entry_cffolder114, align 8, !dbg !4604
  %cfdata_index = getelementptr inbounds %struct.cffolder, %struct.cffolder* %115, i32 0, i32 6, !dbg !4605
  %116 = load i32, i32* %cfdata_index, align 8, !dbg !4605
  %sub115 = sub nsw i32 %116, 1, !dbg !4606
  %mul = mul nsw i32 %sub115, 32768, !dbg !4607
  call void @lzx_translation(%struct.lzx_stream* %xstrm110, i8* %111, i64 %conv113, i32 %mul), !dbg !4608
  %117 = load %struct.cab*, %struct.cab** %cab, align 8, !dbg !4609
  %uncompressed_buffer116 = getelementptr inbounds %struct.cab, %struct.cab* %117, i32 0, i32 17, !dbg !4610
  %118 = load i8*, i8** %uncompressed_buffer116, align 8, !dbg !4610
  %119 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4611
  %read_offset117 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %119, i32 0, i32 6, !dbg !4612
  %120 = load i16, i16* %read_offset117, align 2, !dbg !4612
  %conv118 = zext i16 %120 to i32, !dbg !4611
  %idx.ext119 = sext i32 %conv118 to i64, !dbg !4613
  %add.ptr120 = getelementptr inbounds i8, i8* %118, i64 %idx.ext119, !dbg !4613
  store i8* %add.ptr120, i8** %d, align 8, !dbg !4614
  %121 = load i16, i16* %uavail, align 2, !dbg !4615
  %conv121 = zext i16 %121 to i32, !dbg !4615
  %122 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4616
  %read_offset122 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %122, i32 0, i32 6, !dbg !4617
  %123 = load i16, i16* %read_offset122, align 2, !dbg !4617
  %conv123 = zext i16 %123 to i32, !dbg !4616
  %sub124 = sub nsw i32 %conv121, %conv123, !dbg !4618
  %conv125 = sext i32 %sub124 to i64, !dbg !4615
  %124 = load i64*, i64** %avail.addr, align 8, !dbg !4619
  store i64 %conv125, i64* %124, align 8, !dbg !4620
  %125 = load i16, i16* %uavail, align 2, !dbg !4621
  %126 = load %struct.cfdata*, %struct.cfdata** %cfdata, align 8, !dbg !4622
  %uncompressed_avail126 = getelementptr inbounds %struct.cfdata, %struct.cfdata* %126, i32 0, i32 5, !dbg !4623
  store i16 %125, i16* %uncompressed_avail126, align 4, !dbg !4624
  %127 = load i8*, i8** %d, align 8, !dbg !4625
  store i8* %127, i8** %retval, align 8, !dbg !4626
  br label %return, !dbg !4626

return:                                           ; preds = %if.end109, %if.then107, %if.then95, %if.then79, %sw.default, %if.then53, %if.then24, %if.then10, %if.then5
  %128 = load i8*, i8** %retval, align 8, !dbg !4627
  ret i8* %128, !dbg !4627
}

declare i32 @cm_zlib_inflateReset(%struct.z_stream_s*) #2

declare i32 @cm_zlib_inflateInit2_(%struct.z_stream_s*, i32, i8*, i32) #2

declare i32 @cm_zlib_inflate(%struct.z_stream_s*, i32) #2

declare i32 @cm_zlib_inflateSetDictionary(%struct.z_stream_s*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @lzx_decode_init(%struct.lzx_stream* %strm, i32 %w_bits) #0 !dbg !569 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %w_bits.addr = alloca i32, align 4
  %ds = alloca %struct.lzx_dec*, align 8
  %slot = alloca i32, align 4
  %w_size = alloca i32, align 4
  %w_slot = alloca i32, align 4
  %base = alloca i32, align 4
  %footer = alloca i32, align 4
  %base_inc = alloca [18 x i32], align 16
  %n = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !4628, metadata !638), !dbg !4629
  store i32 %w_bits, i32* %w_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w_bits.addr, metadata !4630, metadata !638), !dbg !4631
  call void @llvm.dbg.declare(metadata %struct.lzx_dec** %ds, metadata !4632, metadata !638), !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %slot, metadata !4634, metadata !638), !dbg !4635
  call void @llvm.dbg.declare(metadata i32* %w_size, metadata !4636, metadata !638), !dbg !4637
  call void @llvm.dbg.declare(metadata i32* %w_slot, metadata !4638, metadata !638), !dbg !4639
  call void @llvm.dbg.declare(metadata i32* %base, metadata !4640, metadata !638), !dbg !4641
  call void @llvm.dbg.declare(metadata i32* %footer, metadata !4642, metadata !638), !dbg !4643
  call void @llvm.dbg.declare(metadata [18 x i32]* %base_inc, metadata !4644, metadata !638), !dbg !4648
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4649
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !4651
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !4651
  %cmp = icmp eq %struct.lzx_dec* %1, null, !dbg !4652
  br i1 %cmp, label %if.then, label %if.end6, !dbg !4653

if.then:                                          ; preds = %entry
  %call = call noalias i8* @calloc(i64 1, i64 608) #8, !dbg !4654
  %2 = bitcast i8* %call to %struct.lzx_dec*, !dbg !4654
  %3 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4656
  %ds2 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %3, i32 0, i32 6, !dbg !4657
  store %struct.lzx_dec* %2, %struct.lzx_dec** %ds2, align 8, !dbg !4658
  %4 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4659
  %ds3 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %4, i32 0, i32 6, !dbg !4661
  %5 = load %struct.lzx_dec*, %struct.lzx_dec** %ds3, align 8, !dbg !4661
  %cmp4 = icmp eq %struct.lzx_dec* %5, null, !dbg !4662
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !4663

if.then5:                                         ; preds = %if.then
  store i32 -30, i32* %retval, align 4, !dbg !4664
  br label %return, !dbg !4664

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !4665

if.end6:                                          ; preds = %if.end, %entry
  %6 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4666
  %ds7 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %6, i32 0, i32 6, !dbg !4667
  %7 = load %struct.lzx_dec*, %struct.lzx_dec** %ds7, align 8, !dbg !4667
  store %struct.lzx_dec* %7, %struct.lzx_dec** %ds, align 8, !dbg !4668
  %8 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4669
  %error = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %8, i32 0, i32 27, !dbg !4670
  store i32 -25, i32* %error, align 4, !dbg !4671
  %9 = load i32, i32* %w_bits.addr, align 4, !dbg !4672
  %cmp8 = icmp slt i32 %9, 15, !dbg !4674
  br i1 %cmp8, label %if.then10, label %lor.lhs.false, !dbg !4675

lor.lhs.false:                                    ; preds = %if.end6
  %10 = load i32, i32* %w_bits.addr, align 4, !dbg !4676
  %cmp9 = icmp sgt i32 %10, 21, !dbg !4678
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4679

if.then10:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 -25, i32* %retval, align 4, !dbg !4680
  br label %return, !dbg !4680

if.end11:                                         ; preds = %lor.lhs.false
  %11 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4681
  %error12 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %11, i32 0, i32 27, !dbg !4682
  store i32 -30, i32* %error12, align 4, !dbg !4683
  %12 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4684
  %w_size13 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %12, i32 0, i32 1, !dbg !4685
  %13 = load i32, i32* %w_size13, align 4, !dbg !4685
  store i32 %13, i32* %w_size, align 4, !dbg !4686
  %14 = load i32, i32* %w_bits.addr, align 4, !dbg !4687
  %sub = sub nsw i32 %14, 15, !dbg !4688
  %idxprom = sext i32 %sub to i64, !dbg !4689
  %arrayidx = getelementptr inbounds [11 x i32], [11 x i32]* @slots, i64 0, i64 %idxprom, !dbg !4689
  %15 = load i32, i32* %arrayidx, align 4, !dbg !4689
  store i32 %15, i32* %w_slot, align 4, !dbg !4690
  %16 = load i32, i32* %w_bits.addr, align 4, !dbg !4691
  %shl = shl i32 1, %16, !dbg !4692
  %17 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4693
  %w_size14 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %17, i32 0, i32 1, !dbg !4694
  store i32 %shl, i32* %w_size14, align 4, !dbg !4695
  %18 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4696
  %w_size15 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %18, i32 0, i32 1, !dbg !4697
  %19 = load i32, i32* %w_size15, align 4, !dbg !4697
  %sub16 = sub nsw i32 %19, 1, !dbg !4698
  %20 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4699
  %w_mask = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %20, i32 0, i32 2, !dbg !4700
  store i32 %sub16, i32* %w_mask, align 8, !dbg !4701
  %21 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4702
  %w_buff = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %21, i32 0, i32 3, !dbg !4704
  %22 = load i8*, i8** %w_buff, align 8, !dbg !4704
  %cmp17 = icmp eq i8* %22, null, !dbg !4705
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !4706

lor.lhs.false18:                                  ; preds = %if.end11
  %23 = load i32, i32* %w_size, align 4, !dbg !4707
  %24 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4709
  %w_size19 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %24, i32 0, i32 1, !dbg !4710
  %25 = load i32, i32* %w_size19, align 4, !dbg !4710
  %cmp20 = icmp ne i32 %23, %25, !dbg !4711
  br i1 %cmp20, label %if.then21, label %if.end39, !dbg !4712

if.then21:                                        ; preds = %lor.lhs.false18, %if.end11
  %26 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4713
  %w_buff22 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %26, i32 0, i32 3, !dbg !4715
  %27 = load i8*, i8** %w_buff22, align 8, !dbg !4715
  call void @free(i8* %27) #8, !dbg !4716
  %28 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4717
  %w_size23 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %28, i32 0, i32 1, !dbg !4718
  %29 = load i32, i32* %w_size23, align 4, !dbg !4718
  %conv = sext i32 %29 to i64, !dbg !4717
  %call24 = call noalias i8* @malloc(i64 %conv) #8, !dbg !4719
  %30 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4720
  %w_buff25 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %30, i32 0, i32 3, !dbg !4721
  store i8* %call24, i8** %w_buff25, align 8, !dbg !4722
  %31 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4723
  %w_buff26 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %31, i32 0, i32 3, !dbg !4725
  %32 = load i8*, i8** %w_buff26, align 8, !dbg !4725
  %cmp27 = icmp eq i8* %32, null, !dbg !4726
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !4727

if.then29:                                        ; preds = %if.then21
  store i32 -30, i32* %retval, align 4, !dbg !4728
  br label %return, !dbg !4728

if.end30:                                         ; preds = %if.then21
  %33 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4729
  %pos_tbl = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %33, i32 0, i32 20, !dbg !4730
  %34 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl, align 8, !dbg !4730
  %35 = bitcast %struct.lzx_pos_tbl* %34 to i8*, !dbg !4729
  call void @free(i8* %35) #8, !dbg !4731
  %36 = load i32, i32* %w_slot, align 4, !dbg !4732
  %conv31 = sext i32 %36 to i64, !dbg !4732
  %mul = mul i64 8, %conv31, !dbg !4733
  %call32 = call noalias i8* @malloc(i64 %mul) #8, !dbg !4734
  %37 = bitcast i8* %call32 to %struct.lzx_pos_tbl*, !dbg !4734
  %38 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4735
  %pos_tbl33 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %38, i32 0, i32 20, !dbg !4736
  store %struct.lzx_pos_tbl* %37, %struct.lzx_pos_tbl** %pos_tbl33, align 8, !dbg !4737
  %39 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4738
  %pos_tbl34 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %39, i32 0, i32 20, !dbg !4740
  %40 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl34, align 8, !dbg !4740
  %cmp35 = icmp eq %struct.lzx_pos_tbl* %40, null, !dbg !4741
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !4742

if.then37:                                        ; preds = %if.end30
  store i32 -30, i32* %retval, align 4, !dbg !4743
  br label %return, !dbg !4743

if.end38:                                         ; preds = %if.end30
  %41 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4744
  %mt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %41, i32 0, i32 24, !dbg !4745
  call void @lzx_huffman_free(%struct.huffman* %mt), !dbg !4746
  br label %if.end39, !dbg !4747

if.end39:                                         ; preds = %if.end38, %lor.lhs.false18
  store i32 0, i32* %footer, align 4, !dbg !4748
  br label %for.cond, !dbg !4750

for.cond:                                         ; preds = %for.inc, %if.end39
  %42 = load i32, i32* %footer, align 4, !dbg !4751
  %cmp40 = icmp slt i32 %42, 18, !dbg !4754
  br i1 %cmp40, label %for.body, label %for.end, !dbg !4755

for.body:                                         ; preds = %for.cond
  %43 = load i32, i32* %footer, align 4, !dbg !4756
  %shl42 = shl i32 1, %43, !dbg !4757
  %44 = load i32, i32* %footer, align 4, !dbg !4758
  %idxprom43 = sext i32 %44 to i64, !dbg !4759
  %arrayidx44 = getelementptr inbounds [18 x i32], [18 x i32]* %base_inc, i64 0, i64 %idxprom43, !dbg !4759
  store i32 %shl42, i32* %arrayidx44, align 4, !dbg !4760
  br label %for.inc, !dbg !4759

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %footer, align 4, !dbg !4761
  %inc = add nsw i32 %45, 1, !dbg !4761
  store i32 %inc, i32* %footer, align 4, !dbg !4761
  br label %for.cond, !dbg !4763

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %footer, align 4, !dbg !4764
  store i32 0, i32* %base, align 4, !dbg !4765
  store i32 0, i32* %slot, align 4, !dbg !4766
  br label %for.cond45, !dbg !4768

for.cond45:                                       ; preds = %for.inc75, %for.end
  %46 = load i32, i32* %slot, align 4, !dbg !4769
  %47 = load i32, i32* %w_slot, align 4, !dbg !4772
  %cmp46 = icmp slt i32 %46, %47, !dbg !4773
  br i1 %cmp46, label %for.body48, label %for.end77, !dbg !4774

for.body48:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4775, metadata !638), !dbg !4777
  %48 = load i32, i32* %footer, align 4, !dbg !4778
  %cmp49 = icmp eq i32 %48, 0, !dbg !4780
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !4781

if.then51:                                        ; preds = %for.body48
  %49 = load i32, i32* %slot, align 4, !dbg !4782
  store i32 %49, i32* %base, align 4, !dbg !4783
  br label %if.end54, !dbg !4784

if.else:                                          ; preds = %for.body48
  %50 = load i32, i32* %footer, align 4, !dbg !4785
  %idxprom52 = sext i32 %50 to i64, !dbg !4786
  %arrayidx53 = getelementptr inbounds [18 x i32], [18 x i32]* %base_inc, i64 0, i64 %idxprom52, !dbg !4786
  %51 = load i32, i32* %arrayidx53, align 4, !dbg !4786
  %52 = load i32, i32* %base, align 4, !dbg !4787
  %add = add nsw i32 %52, %51, !dbg !4787
  store i32 %add, i32* %base, align 4, !dbg !4787
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then51
  %53 = load i32, i32* %footer, align 4, !dbg !4788
  %cmp55 = icmp slt i32 %53, 17, !dbg !4790
  br i1 %cmp55, label %if.then57, label %if.end67, !dbg !4791

if.then57:                                        ; preds = %if.end54
  store i32 -2, i32* %footer, align 4, !dbg !4792
  %54 = load i32, i32* %base, align 4, !dbg !4794
  store i32 %54, i32* %n, align 4, !dbg !4796
  br label %for.cond58, !dbg !4797

for.cond58:                                       ; preds = %for.inc61, %if.then57
  %55 = load i32, i32* %n, align 4, !dbg !4798
  %tobool = icmp ne i32 %55, 0, !dbg !4801
  br i1 %tobool, label %for.body59, label %for.end62, !dbg !4801

for.body59:                                       ; preds = %for.cond58
  %56 = load i32, i32* %footer, align 4, !dbg !4802
  %inc60 = add nsw i32 %56, 1, !dbg !4802
  store i32 %inc60, i32* %footer, align 4, !dbg !4802
  br label %for.inc61, !dbg !4803

for.inc61:                                        ; preds = %for.body59
  %57 = load i32, i32* %n, align 4, !dbg !4804
  %shr = ashr i32 %57, 1, !dbg !4804
  store i32 %shr, i32* %n, align 4, !dbg !4804
  br label %for.cond58, !dbg !4806

for.end62:                                        ; preds = %for.cond58
  %58 = load i32, i32* %footer, align 4, !dbg !4807
  %cmp63 = icmp sle i32 %58, 0, !dbg !4809
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !4810

if.then65:                                        ; preds = %for.end62
  store i32 0, i32* %footer, align 4, !dbg !4811
  br label %if.end66, !dbg !4812

if.end66:                                         ; preds = %if.then65, %for.end62
  br label %if.end67, !dbg !4813

if.end67:                                         ; preds = %if.end66, %if.end54
  %59 = load i32, i32* %base, align 4, !dbg !4814
  %60 = load i32, i32* %slot, align 4, !dbg !4815
  %idxprom68 = sext i32 %60 to i64, !dbg !4816
  %61 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4816
  %pos_tbl69 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %61, i32 0, i32 20, !dbg !4817
  %62 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl69, align 8, !dbg !4817
  %arrayidx70 = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %62, i64 %idxprom68, !dbg !4816
  %base71 = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %arrayidx70, i32 0, i32 0, !dbg !4818
  store i32 %59, i32* %base71, align 4, !dbg !4819
  %63 = load i32, i32* %footer, align 4, !dbg !4820
  %64 = load i32, i32* %slot, align 4, !dbg !4821
  %idxprom72 = sext i32 %64 to i64, !dbg !4822
  %65 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4822
  %pos_tbl73 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %65, i32 0, i32 20, !dbg !4823
  %66 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl73, align 8, !dbg !4823
  %arrayidx74 = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %66, i64 %idxprom72, !dbg !4822
  %footer_bits = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %arrayidx74, i32 0, i32 1, !dbg !4824
  store i32 %63, i32* %footer_bits, align 4, !dbg !4825
  br label %for.inc75, !dbg !4826

for.inc75:                                        ; preds = %if.end67
  %67 = load i32, i32* %slot, align 4, !dbg !4827
  %inc76 = add nsw i32 %67, 1, !dbg !4827
  store i32 %inc76, i32* %slot, align 4, !dbg !4827
  br label %for.cond45, !dbg !4829

for.end77:                                        ; preds = %for.cond45
  %68 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4830
  %w_pos = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %68, i32 0, i32 4, !dbg !4831
  store i32 0, i32* %w_pos, align 8, !dbg !4832
  %69 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4833
  %state = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %69, i32 0, i32 0, !dbg !4834
  store i32 0, i32* %state, align 8, !dbg !4835
  %70 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4836
  %br = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %70, i32 0, i32 21, !dbg !4837
  %cache_buffer = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %br, i32 0, i32 0, !dbg !4838
  store i64 0, i64* %cache_buffer, align 8, !dbg !4839
  %71 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4840
  %br78 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %71, i32 0, i32 21, !dbg !4841
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %br78, i32 0, i32 1, !dbg !4842
  store i32 0, i32* %cache_avail, align 8, !dbg !4843
  %72 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4844
  %r2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %72, i32 0, i32 14, !dbg !4845
  store i32 1, i32* %r2, align 8, !dbg !4846
  %73 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4847
  %r1 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %73, i32 0, i32 13, !dbg !4848
  store i32 1, i32* %r1, align 4, !dbg !4849
  %74 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4850
  %r0 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %74, i32 0, i32 12, !dbg !4851
  store i32 1, i32* %r0, align 8, !dbg !4852
  %75 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4853
  %at = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %75, i32 0, i32 22, !dbg !4855
  %call79 = call i32 @lzx_huffman_init(%struct.huffman* %at, i64 8, i32 8), !dbg !4856
  %cmp80 = icmp ne i32 %call79, 0, !dbg !4857
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !4858

if.then82:                                        ; preds = %for.end77
  store i32 -30, i32* %retval, align 4, !dbg !4859
  br label %return, !dbg !4859

if.end83:                                         ; preds = %for.end77
  %76 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4860
  %pt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %76, i32 0, i32 25, !dbg !4862
  %call84 = call i32 @lzx_huffman_init(%struct.huffman* %pt, i64 20, i32 10), !dbg !4863
  %cmp85 = icmp ne i32 %call84, 0, !dbg !4864
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !4865

if.then87:                                        ; preds = %if.end83
  store i32 -30, i32* %retval, align 4, !dbg !4866
  br label %return, !dbg !4866

if.end88:                                         ; preds = %if.end83
  %77 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4867
  %mt89 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %77, i32 0, i32 24, !dbg !4869
  %78 = load i32, i32* %w_slot, align 4, !dbg !4870
  %shl90 = shl i32 %78, 3, !dbg !4871
  %add91 = add nsw i32 256, %shl90, !dbg !4872
  %conv92 = sext i32 %add91 to i64, !dbg !4873
  %call93 = call i32 @lzx_huffman_init(%struct.huffman* %mt89, i64 %conv92, i32 16), !dbg !4874
  %cmp94 = icmp ne i32 %call93, 0, !dbg !4875
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4876

if.then96:                                        ; preds = %if.end88
  store i32 -30, i32* %retval, align 4, !dbg !4877
  br label %return, !dbg !4877

if.end97:                                         ; preds = %if.end88
  %79 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4878
  %lt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %79, i32 0, i32 23, !dbg !4880
  %call98 = call i32 @lzx_huffman_init(%struct.huffman* %lt, i64 249, i32 16), !dbg !4881
  %cmp99 = icmp ne i32 %call98, 0, !dbg !4882
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !4883

if.then101:                                       ; preds = %if.end97
  store i32 -30, i32* %retval, align 4, !dbg !4884
  br label %return, !dbg !4884

if.end102:                                        ; preds = %if.end97
  %80 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4885
  %error103 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %80, i32 0, i32 27, !dbg !4886
  store i32 0, i32* %error103, align 4, !dbg !4887
  store i32 0, i32* %retval, align 4, !dbg !4888
  br label %return, !dbg !4888

return:                                           ; preds = %if.end102, %if.then101, %if.then96, %if.then87, %if.then82, %if.then37, %if.then29, %if.then10, %if.then5
  %81 = load i32, i32* %retval, align 4, !dbg !4889
  ret i32 %81, !dbg !4889
}

; Function Attrs: nounwind uwtable
define internal void @lzx_cleanup_bitstream(%struct.lzx_stream* %strm) #0 !dbg !580 {
entry:
  %strm.addr = alloca %struct.lzx_stream*, align 8
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !4890, metadata !638), !dbg !4891
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4892
  %ds = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !4893
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4893
  %br = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %1, i32 0, i32 21, !dbg !4894
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %br, i32 0, i32 1, !dbg !4895
  store i32 0, i32* %cache_avail, align 8, !dbg !4896
  %2 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4897
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %2, i32 0, i32 6, !dbg !4898
  %3 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !4898
  %br2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %3, i32 0, i32 21, !dbg !4899
  %have_odd = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %br2, i32 0, i32 3, !dbg !4900
  store i8 0, i8* %have_odd, align 1, !dbg !4901
  ret void, !dbg !4902
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_decode(%struct.lzx_stream* %strm, i32 %last) #0 !dbg !583 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %last.addr = alloca i32, align 4
  %ds = alloca %struct.lzx_dec*, align 8
  %avail_in = alloca i64, align 8
  %r = alloca i32, align 4
  %bytes_written = alloca i64, align 8
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !4903, metadata !638), !dbg !4904
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !4905, metadata !638), !dbg !4906
  call void @llvm.dbg.declare(metadata %struct.lzx_dec** %ds, metadata !4907, metadata !638), !dbg !4908
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4909
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !4910
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !4910
  store %struct.lzx_dec* %1, %struct.lzx_dec** %ds, align 8, !dbg !4908
  call void @llvm.dbg.declare(metadata i64* %avail_in, metadata !4911, metadata !638), !dbg !4912
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4913, metadata !638), !dbg !4914
  %2 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4915
  %error = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %2, i32 0, i32 27, !dbg !4917
  %3 = load i32, i32* %error, align 4, !dbg !4917
  %tobool = icmp ne i32 %3, 0, !dbg !4915
  br i1 %tobool, label %if.then, label %if.end, !dbg !4918

if.then:                                          ; preds = %entry
  %4 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4919
  %error2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %4, i32 0, i32 27, !dbg !4920
  %5 = load i32, i32* %error2, align 4, !dbg !4920
  store i32 %5, i32* %retval, align 4, !dbg !4921
  br label %return, !dbg !4921

if.end:                                           ; preds = %entry
  %6 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4922
  %avail_in3 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %6, i32 0, i32 1, !dbg !4923
  %7 = load i64, i64* %avail_in3, align 8, !dbg !4923
  store i64 %7, i64* %avail_in, align 8, !dbg !4924
  %8 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4925
  %9 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4926
  %br = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %9, i32 0, i32 21, !dbg !4927
  call void @lzx_br_fixup(%struct.lzx_stream* %8, %struct.lzx_br* %br), !dbg !4928
  br label %do.body, !dbg !4929

do.body:                                          ; preds = %do.cond, %if.end
  %10 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4930
  %state = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %10, i32 0, i32 0, !dbg !4933
  %11 = load i32, i32* %state, align 8, !dbg !4933
  %cmp = icmp slt i32 %11, 18, !dbg !4934
  br i1 %cmp, label %if.then4, label %if.else, !dbg !4935

if.then4:                                         ; preds = %do.body
  %12 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4936
  %13 = load i32, i32* %last.addr, align 4, !dbg !4937
  %call = call i32 @lzx_read_blocks(%struct.lzx_stream* %12, i32 %13), !dbg !4938
  store i32 %call, i32* %r, align 4, !dbg !4939
  br label %if.end7, !dbg !4940

if.else:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %bytes_written, metadata !4941, metadata !638), !dbg !4943
  %14 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4944
  %avail_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %14, i32 0, i32 4, !dbg !4945
  %15 = load i64, i64* %avail_out, align 8, !dbg !4945
  store i64 %15, i64* %bytes_written, align 8, !dbg !4943
  %16 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4946
  %17 = load i32, i32* %last.addr, align 4, !dbg !4947
  %call5 = call i32 @lzx_decode_blocks(%struct.lzx_stream* %16, i32 %17), !dbg !4948
  store i32 %call5, i32* %r, align 4, !dbg !4949
  %18 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4950
  %avail_out6 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %18, i32 0, i32 4, !dbg !4951
  %19 = load i64, i64* %avail_out6, align 8, !dbg !4951
  %20 = load i64, i64* %bytes_written, align 8, !dbg !4952
  %sub = sub nsw i64 %20, %19, !dbg !4952
  store i64 %sub, i64* %bytes_written, align 8, !dbg !4952
  %21 = load i64, i64* %bytes_written, align 8, !dbg !4953
  %22 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4954
  %next_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %22, i32 0, i32 3, !dbg !4955
  %23 = load i8*, i8** %next_out, align 8, !dbg !4956
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %21, !dbg !4956
  store i8* %add.ptr, i8** %next_out, align 8, !dbg !4956
  %24 = load i64, i64* %bytes_written, align 8, !dbg !4957
  %25 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4958
  %total_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %25, i32 0, i32 5, !dbg !4959
  %26 = load i64, i64* %total_out, align 8, !dbg !4960
  %add = add nsw i64 %26, %24, !dbg !4960
  store i64 %add, i64* %total_out, align 8, !dbg !4960
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  br label %do.cond, !dbg !4961

do.cond:                                          ; preds = %if.end7
  %27 = load i32, i32* %r, align 4, !dbg !4962
  %cmp8 = icmp eq i32 %27, 100, !dbg !4964
  br i1 %cmp8, label %do.body, label %do.end, !dbg !4965

do.end:                                           ; preds = %do.cond
  %28 = load i64, i64* %avail_in, align 8, !dbg !4966
  %29 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4967
  %avail_in9 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %29, i32 0, i32 1, !dbg !4968
  %30 = load i64, i64* %avail_in9, align 8, !dbg !4968
  %sub10 = sub nsw i64 %28, %30, !dbg !4969
  %31 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4970
  %total_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %31, i32 0, i32 2, !dbg !4971
  %32 = load i64, i64* %total_in, align 8, !dbg !4972
  %add11 = add nsw i64 %32, %sub10, !dbg !4972
  store i64 %add11, i64* %total_in, align 8, !dbg !4972
  %33 = load i32, i32* %r, align 4, !dbg !4973
  store i32 %33, i32* %retval, align 4, !dbg !4974
  br label %return, !dbg !4974

return:                                           ; preds = %do.end, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !4975
  ret i32 %34, !dbg !4975
}

; Function Attrs: nounwind uwtable
define internal void @lzx_translation(%struct.lzx_stream* %strm, i8* %p, i64 %size, i32 %offset) #0 !dbg !611 {
entry:
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %offset.addr = alloca i32, align 4
  %ds = alloca %struct.lzx_dec*, align 8
  %b = alloca i8*, align 8
  %end = alloca i8*, align 8
  %i = alloca i64, align 8
  %cp = alloca i32, align 4
  %displacement = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !4976, metadata !638), !dbg !4977
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !4978, metadata !638), !dbg !4979
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4980, metadata !638), !dbg !4981
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !4982, metadata !638), !dbg !4983
  call void @llvm.dbg.declare(metadata %struct.lzx_dec** %ds, metadata !4984, metadata !638), !dbg !4985
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !4986
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !4987
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !4987
  store %struct.lzx_dec* %1, %struct.lzx_dec** %ds, align 8, !dbg !4985
  call void @llvm.dbg.declare(metadata i8** %b, metadata !4988, metadata !638), !dbg !4989
  call void @llvm.dbg.declare(metadata i8** %end, metadata !4990, metadata !638), !dbg !4991
  %2 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !4992
  %translation = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %2, i32 0, i32 8, !dbg !4994
  %3 = load i8, i8* %translation, align 8, !dbg !4994
  %tobool = icmp ne i8 %3, 0, !dbg !4992
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4995

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %size.addr, align 8, !dbg !4996
  %cmp = icmp ule i64 %4, 10, !dbg !4998
  br i1 %cmp, label %if.then, label %if.end, !dbg !4999

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %while.end, !dbg !5000

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8*, i8** %p.addr, align 8, !dbg !5001
  store i8* %5, i8** %b, align 8, !dbg !5002
  %6 = load i8*, i8** %b, align 8, !dbg !5003
  %7 = load i64, i64* %size.addr, align 8, !dbg !5004
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !5005
  %add.ptr2 = getelementptr inbounds i8, i8* %add.ptr, i64 -10, !dbg !5006
  store i8* %add.ptr2, i8** %end, align 8, !dbg !5007
  br label %while.cond, !dbg !5008

while.cond:                                       ; preds = %if.end22, %if.end
  %8 = load i8*, i8** %b, align 8, !dbg !5009
  %9 = load i8*, i8** %end, align 8, !dbg !5011
  %cmp3 = icmp ult i8* %8, %9, !dbg !5012
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !5013

land.rhs:                                         ; preds = %while.cond
  %10 = load i8*, i8** %b, align 8, !dbg !5014
  %11 = load i8*, i8** %end, align 8, !dbg !5016
  %12 = load i8*, i8** %b, align 8, !dbg !5017
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !5018
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !5018
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5018
  %call = call i8* @memchr(i8* %10, i32 232, i64 %sub.ptr.sub) #9, !dbg !5019
  store i8* %call, i8** %b, align 8, !dbg !5020
  %cmp4 = icmp ne i8* %call, null, !dbg !5021
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %13, label %while.body, label %while.end, !dbg !5022

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5024, metadata !638), !dbg !5026
  %14 = load i8*, i8** %b, align 8, !dbg !5027
  %15 = load i8*, i8** %p.addr, align 8, !dbg !5028
  %sub.ptr.lhs.cast5 = ptrtoint i8* %14 to i64, !dbg !5029
  %sub.ptr.rhs.cast6 = ptrtoint i8* %15 to i64, !dbg !5029
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6, !dbg !5029
  store i64 %sub.ptr.sub7, i64* %i, align 8, !dbg !5026
  call void @llvm.dbg.declare(metadata i32* %cp, metadata !5030, metadata !638), !dbg !5031
  call void @llvm.dbg.declare(metadata i32* %displacement, metadata !5032, metadata !638), !dbg !5033
  call void @llvm.dbg.declare(metadata i32* %value, metadata !5034, metadata !638), !dbg !5035
  %16 = load i32, i32* %offset.addr, align 4, !dbg !5036
  %17 = load i64, i64* %i, align 8, !dbg !5037
  %conv = trunc i64 %17 to i32, !dbg !5038
  %add = add i32 %16, %conv, !dbg !5039
  store i32 %add, i32* %cp, align 4, !dbg !5040
  %18 = load i8*, i8** %b, align 8, !dbg !5041
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 1, !dbg !5041
  %call8 = call i32 @archive_le32dec(i8* %arrayidx), !dbg !5042
  store i32 %call8, i32* %value, align 4, !dbg !5043
  %19 = load i32, i32* %value, align 4, !dbg !5044
  %20 = load i32, i32* %cp, align 4, !dbg !5046
  %sub = sub nsw i32 0, %20, !dbg !5047
  %cmp9 = icmp sge i32 %19, %sub, !dbg !5048
  br i1 %cmp9, label %land.lhs.true, label %if.end22, !dbg !5049

land.lhs.true:                                    ; preds = %while.body
  %21 = load i32, i32* %value, align 4, !dbg !5050
  %22 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5052
  %translation_size = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %22, i32 0, i32 7, !dbg !5053
  %23 = load i32, i32* %translation_size, align 4, !dbg !5053
  %cmp11 = icmp slt i32 %21, %23, !dbg !5054
  br i1 %cmp11, label %if.then13, label %if.end22, !dbg !5055

if.then13:                                        ; preds = %land.lhs.true
  %24 = load i32, i32* %value, align 4, !dbg !5056
  %cmp14 = icmp sge i32 %24, 0, !dbg !5059
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !5060

if.then16:                                        ; preds = %if.then13
  %25 = load i32, i32* %value, align 4, !dbg !5061
  %26 = load i32, i32* %cp, align 4, !dbg !5062
  %sub17 = sub nsw i32 %25, %26, !dbg !5063
  store i32 %sub17, i32* %displacement, align 4, !dbg !5064
  br label %if.end20, !dbg !5065

if.else:                                          ; preds = %if.then13
  %27 = load i32, i32* %value, align 4, !dbg !5066
  %28 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5067
  %translation_size18 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %28, i32 0, i32 7, !dbg !5068
  %29 = load i32, i32* %translation_size18, align 4, !dbg !5068
  %add19 = add i32 %27, %29, !dbg !5069
  store i32 %add19, i32* %displacement, align 4, !dbg !5070
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then16
  %30 = load i8*, i8** %b, align 8, !dbg !5071
  %arrayidx21 = getelementptr inbounds i8, i8* %30, i64 1, !dbg !5071
  %31 = load i32, i32* %displacement, align 4, !dbg !5072
  call void @archive_le32enc(i8* %arrayidx21, i32 %31), !dbg !5073
  br label %if.end22, !dbg !5074

if.end22:                                         ; preds = %if.end20, %land.lhs.true, %while.body
  %32 = load i8*, i8** %b, align 8, !dbg !5075
  %add.ptr23 = getelementptr inbounds i8, i8* %32, i64 5, !dbg !5075
  store i8* %add.ptr23, i8** %b, align 8, !dbg !5075
  br label %while.cond, !dbg !5076

while.end:                                        ; preds = %if.then, %land.end
  ret void, !dbg !5078
}

; Function Attrs: nounwind uwtable
define internal void @lzx_huffman_free(%struct.huffman* %hf) #0 !dbg !573 {
entry:
  %hf.addr = alloca %struct.huffman*, align 8
  store %struct.huffman* %hf, %struct.huffman** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman** %hf.addr, metadata !5079, metadata !638), !dbg !5080
  %0 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5081
  %bitlen = getelementptr inbounds %struct.huffman, %struct.huffman* %0, i32 0, i32 2, !dbg !5082
  %1 = load i8*, i8** %bitlen, align 8, !dbg !5082
  call void @free(i8* %1) #8, !dbg !5083
  %2 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5084
  %tbl = getelementptr inbounds %struct.huffman, %struct.huffman* %2, i32 0, i32 8, !dbg !5085
  %3 = load i16*, i16** %tbl, align 8, !dbg !5085
  %4 = bitcast i16* %3 to i8*, !dbg !5084
  call void @free(i8* %4) #8, !dbg !5086
  %5 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5087
  %tree = getelementptr inbounds %struct.huffman, %struct.huffman* %5, i32 0, i32 9, !dbg !5088
  %6 = load %struct.htree_t*, %struct.htree_t** %tree, align 8, !dbg !5088
  %7 = bitcast %struct.htree_t* %6 to i8*, !dbg !5087
  call void @free(i8* %7) #8, !dbg !5089
  ret void, !dbg !5090
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_huffman_init(%struct.huffman* %hf, i64 %len_size, i32 %tbl_bits) #0 !dbg !577 {
entry:
  %retval = alloca i32, align 4
  %hf.addr = alloca %struct.huffman*, align 8
  %len_size.addr = alloca i64, align 8
  %tbl_bits.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  store %struct.huffman* %hf, %struct.huffman** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman** %hf.addr, metadata !5091, metadata !638), !dbg !5092
  store i64 %len_size, i64* %len_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len_size.addr, metadata !5093, metadata !638), !dbg !5094
  store i32 %tbl_bits, i32* %tbl_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tbl_bits.addr, metadata !5095, metadata !638), !dbg !5096
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !5097, metadata !638), !dbg !5098
  %0 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5099
  %bitlen = getelementptr inbounds %struct.huffman, %struct.huffman* %0, i32 0, i32 2, !dbg !5101
  %1 = load i8*, i8** %bitlen, align 8, !dbg !5101
  %cmp = icmp eq i8* %1, null, !dbg !5102
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5103

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5104
  %len_size1 = getelementptr inbounds %struct.huffman, %struct.huffman* %2, i32 0, i32 0, !dbg !5106
  %3 = load i32, i32* %len_size1, align 8, !dbg !5106
  %4 = load i64, i64* %len_size.addr, align 8, !dbg !5107
  %conv = trunc i64 %4 to i32, !dbg !5108
  %cmp2 = icmp ne i32 %3, %conv, !dbg !5109
  br i1 %cmp2, label %if.then, label %if.else, !dbg !5110

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5111
  %bitlen4 = getelementptr inbounds %struct.huffman, %struct.huffman* %5, i32 0, i32 2, !dbg !5113
  %6 = load i8*, i8** %bitlen4, align 8, !dbg !5113
  call void @free(i8* %6) #8, !dbg !5114
  %7 = load i64, i64* %len_size.addr, align 8, !dbg !5115
  %call = call noalias i8* @calloc(i64 %7, i64 1) #8, !dbg !5116
  %8 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5117
  %bitlen5 = getelementptr inbounds %struct.huffman, %struct.huffman* %8, i32 0, i32 2, !dbg !5118
  store i8* %call, i8** %bitlen5, align 8, !dbg !5119
  %9 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5120
  %bitlen6 = getelementptr inbounds %struct.huffman, %struct.huffman* %9, i32 0, i32 2, !dbg !5122
  %10 = load i8*, i8** %bitlen6, align 8, !dbg !5122
  %cmp7 = icmp eq i8* %10, null, !dbg !5123
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !5124

if.then9:                                         ; preds = %if.then
  store i32 -30, i32* %retval, align 4, !dbg !5125
  br label %return, !dbg !5125

if.end:                                           ; preds = %if.then
  %11 = load i64, i64* %len_size.addr, align 8, !dbg !5126
  %conv10 = trunc i64 %11 to i32, !dbg !5127
  %12 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5128
  %len_size11 = getelementptr inbounds %struct.huffman, %struct.huffman* %12, i32 0, i32 0, !dbg !5129
  store i32 %conv10, i32* %len_size11, align 8, !dbg !5130
  br label %if.end13, !dbg !5131

if.else:                                          ; preds = %lor.lhs.false
  %13 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5132
  %bitlen12 = getelementptr inbounds %struct.huffman, %struct.huffman* %13, i32 0, i32 2, !dbg !5133
  %14 = load i8*, i8** %bitlen12, align 8, !dbg !5133
  %15 = load i64, i64* %len_size.addr, align 8, !dbg !5134
  %mul = mul i64 %15, 1, !dbg !5135
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %mul, i32 1, i1 false), !dbg !5136
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end
  %16 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5137
  %tbl = getelementptr inbounds %struct.huffman, %struct.huffman* %16, i32 0, i32 8, !dbg !5139
  %17 = load i16*, i16** %tbl, align 8, !dbg !5139
  %cmp14 = icmp eq i16* %17, null, !dbg !5140
  br i1 %cmp14, label %if.then16, label %if.end31, !dbg !5141

if.then16:                                        ; preds = %if.end13
  %18 = load i32, i32* %tbl_bits.addr, align 4, !dbg !5142
  %cmp17 = icmp slt i32 %18, 10, !dbg !5145
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !5146

if.then19:                                        ; preds = %if.then16
  %19 = load i32, i32* %tbl_bits.addr, align 4, !dbg !5147
  store i32 %19, i32* %bits, align 4, !dbg !5148
  br label %if.end21, !dbg !5149

if.else20:                                        ; preds = %if.then16
  store i32 10, i32* %bits, align 4, !dbg !5150
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  %20 = load i32, i32* %bits, align 4, !dbg !5151
  %sh_prom = zext i32 %20 to i64, !dbg !5152
  %shl = shl i64 1, %sh_prom, !dbg !5152
  %mul22 = mul i64 %shl, 2, !dbg !5153
  %call23 = call noalias i8* @malloc(i64 %mul22) #8, !dbg !5154
  %21 = bitcast i8* %call23 to i16*, !dbg !5154
  %22 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5155
  %tbl24 = getelementptr inbounds %struct.huffman, %struct.huffman* %22, i32 0, i32 8, !dbg !5156
  store i16* %21, i16** %tbl24, align 8, !dbg !5157
  %23 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5158
  %tbl25 = getelementptr inbounds %struct.huffman, %struct.huffman* %23, i32 0, i32 8, !dbg !5160
  %24 = load i16*, i16** %tbl25, align 8, !dbg !5160
  %cmp26 = icmp eq i16* %24, null, !dbg !5161
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !5162

if.then28:                                        ; preds = %if.end21
  store i32 -30, i32* %retval, align 4, !dbg !5163
  br label %return, !dbg !5163

if.end29:                                         ; preds = %if.end21
  %25 = load i32, i32* %tbl_bits.addr, align 4, !dbg !5164
  %26 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5165
  %tbl_bits30 = getelementptr inbounds %struct.huffman, %struct.huffman* %26, i32 0, i32 5, !dbg !5166
  store i32 %25, i32* %tbl_bits30, align 8, !dbg !5167
  br label %if.end31, !dbg !5168

if.end31:                                         ; preds = %if.end29, %if.end13
  %27 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5169
  %tree = getelementptr inbounds %struct.huffman, %struct.huffman* %27, i32 0, i32 9, !dbg !5171
  %28 = load %struct.htree_t*, %struct.htree_t** %tree, align 8, !dbg !5171
  %cmp32 = icmp eq %struct.htree_t* %28, null, !dbg !5172
  br i1 %cmp32, label %land.lhs.true, label %if.end48, !dbg !5173

land.lhs.true:                                    ; preds = %if.end31
  %29 = load i32, i32* %tbl_bits.addr, align 4, !dbg !5174
  %cmp34 = icmp sgt i32 %29, 10, !dbg !5176
  br i1 %cmp34, label %if.then36, label %if.end48, !dbg !5177

if.then36:                                        ; preds = %land.lhs.true
  %30 = load i32, i32* %tbl_bits.addr, align 4, !dbg !5178
  %sub = sub nsw i32 %30, 10, !dbg !5180
  %add = add nsw i32 %sub, 4, !dbg !5181
  %shl37 = shl i32 1, %add, !dbg !5182
  %31 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5183
  %tree_avail = getelementptr inbounds %struct.huffman, %struct.huffman* %31, i32 0, i32 7, !dbg !5184
  store i32 %shl37, i32* %tree_avail, align 8, !dbg !5185
  %32 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5186
  %tree_avail38 = getelementptr inbounds %struct.huffman, %struct.huffman* %32, i32 0, i32 7, !dbg !5187
  %33 = load i32, i32* %tree_avail38, align 8, !dbg !5187
  %conv39 = sext i32 %33 to i64, !dbg !5186
  %mul40 = mul i64 %conv39, 4, !dbg !5188
  %call41 = call noalias i8* @malloc(i64 %mul40) #8, !dbg !5189
  %34 = bitcast i8* %call41 to %struct.htree_t*, !dbg !5189
  %35 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5190
  %tree42 = getelementptr inbounds %struct.huffman, %struct.huffman* %35, i32 0, i32 9, !dbg !5191
  store %struct.htree_t* %34, %struct.htree_t** %tree42, align 8, !dbg !5192
  %36 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !5193
  %tree43 = getelementptr inbounds %struct.huffman, %struct.huffman* %36, i32 0, i32 9, !dbg !5195
  %37 = load %struct.htree_t*, %struct.htree_t** %tree43, align 8, !dbg !5195
  %cmp44 = icmp eq %struct.htree_t* %37, null, !dbg !5196
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !5197

if.then46:                                        ; preds = %if.then36
  store i32 -30, i32* %retval, align 4, !dbg !5198
  br label %return, !dbg !5198

if.end47:                                         ; preds = %if.then36
  br label %if.end48, !dbg !5199

if.end48:                                         ; preds = %if.end47, %land.lhs.true, %if.end31
  store i32 0, i32* %retval, align 4, !dbg !5200
  br label %return, !dbg !5200

return:                                           ; preds = %if.end48, %if.then46, %if.then28, %if.then9
  %38 = load i32, i32* %retval, align 4, !dbg !5201
  ret i32 %38, !dbg !5201
}

; Function Attrs: nounwind uwtable
define internal void @lzx_br_fixup(%struct.lzx_stream* %strm, %struct.lzx_br* %br) #0 !dbg !584 {
entry:
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %br.addr = alloca %struct.lzx_br*, align 8
  %n = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !5202, metadata !638), !dbg !5203
  store %struct.lzx_br* %br, %struct.lzx_br** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_br** %br.addr, metadata !5204, metadata !638), !dbg !5205
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5206, metadata !638), !dbg !5207
  %0 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !5208
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %0, i32 0, i32 1, !dbg !5209
  %1 = load i32, i32* %cache_avail, align 8, !dbg !5209
  %conv = sext i32 %1 to i64, !dbg !5208
  %sub = sub i64 64, %conv, !dbg !5210
  %conv1 = trunc i64 %sub to i32, !dbg !5211
  store i32 %conv1, i32* %n, align 4, !dbg !5207
  %2 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !5212
  %have_odd = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %2, i32 0, i32 3, !dbg !5214
  %3 = load i8, i8* %have_odd, align 1, !dbg !5214
  %conv2 = sext i8 %3 to i32, !dbg !5212
  %tobool = icmp ne i32 %conv2, 0, !dbg !5212
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5215

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %n, align 4, !dbg !5216
  %cmp = icmp sge i32 %4, 16, !dbg !5218
  br i1 %cmp, label %land.lhs.true4, label %if.end, !dbg !5219

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5220
  %avail_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %5, i32 0, i32 1, !dbg !5222
  %6 = load i64, i64* %avail_in, align 8, !dbg !5222
  %cmp5 = icmp sgt i64 %6, 0, !dbg !5223
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5224

if.then:                                          ; preds = %land.lhs.true4
  %7 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !5225
  %cache_buffer = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %7, i32 0, i32 0, !dbg !5227
  %8 = load i64, i64* %cache_buffer, align 8, !dbg !5227
  %shl = shl i64 %8, 16, !dbg !5228
  %9 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5229
  %next_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %9, i32 0, i32 0, !dbg !5230
  %10 = load i8*, i8** %next_in, align 8, !dbg !5230
  %11 = load i8, i8* %10, align 1, !dbg !5231
  %conv7 = zext i8 %11 to i16, !dbg !5232
  %conv8 = zext i16 %conv7 to i32, !dbg !5233
  %shl9 = shl i32 %conv8, 8, !dbg !5234
  %conv10 = sext i32 %shl9 to i64, !dbg !5233
  %or = or i64 %shl, %conv10, !dbg !5235
  %12 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !5236
  %odd = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %12, i32 0, i32 2, !dbg !5237
  %13 = load i8, i8* %odd, align 4, !dbg !5237
  %conv11 = zext i8 %13 to i64, !dbg !5236
  %or12 = or i64 %or, %conv11, !dbg !5238
  %14 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !5239
  %cache_buffer13 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %14, i32 0, i32 0, !dbg !5240
  store i64 %or12, i64* %cache_buffer13, align 8, !dbg !5241
  %15 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5242
  %next_in14 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %15, i32 0, i32 0, !dbg !5243
  %16 = load i8*, i8** %next_in14, align 8, !dbg !5244
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5244
  store i8* %incdec.ptr, i8** %next_in14, align 8, !dbg !5244
  %17 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5245
  %avail_in15 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %17, i32 0, i32 1, !dbg !5246
  %18 = load i64, i64* %avail_in15, align 8, !dbg !5247
  %dec = add nsw i64 %18, -1, !dbg !5247
  store i64 %dec, i64* %avail_in15, align 8, !dbg !5247
  %19 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !5248
  %cache_avail16 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %19, i32 0, i32 1, !dbg !5249
  %20 = load i32, i32* %cache_avail16, align 8, !dbg !5250
  %add = add nsw i32 %20, 16, !dbg !5250
  store i32 %add, i32* %cache_avail16, align 8, !dbg !5250
  %21 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !5251
  %have_odd17 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %21, i32 0, i32 3, !dbg !5252
  store i8 0, i8* %have_odd17, align 1, !dbg !5253
  br label %if.end, !dbg !5254

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  ret void, !dbg !5255
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_read_blocks(%struct.lzx_stream* %strm, i32 %last) #0 !dbg !588 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %last.addr = alloca i32, align 4
  %ds = alloca %struct.lzx_dec*, align 8
  %br = alloca %struct.lzx_br*, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %u16 = alloca i16, align 2
  %l = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !5256, metadata !638), !dbg !5257
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !5258, metadata !638), !dbg !5259
  call void @llvm.dbg.declare(metadata %struct.lzx_dec** %ds, metadata !5260, metadata !638), !dbg !5261
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5262
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !5263
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !5263
  store %struct.lzx_dec* %1, %struct.lzx_dec** %ds, align 8, !dbg !5261
  call void @llvm.dbg.declare(metadata %struct.lzx_br** %br, metadata !5264, metadata !638), !dbg !5265
  %2 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5266
  %br2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %2, i32 0, i32 21, !dbg !5267
  store %struct.lzx_br* %br2, %struct.lzx_br** %br, align 8, !dbg !5265
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5268, metadata !638), !dbg !5269
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5270, metadata !638), !dbg !5271
  br label %for.cond, !dbg !5272

for.cond:                                         ; preds = %sw.epilog546, %entry
  %3 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5273
  %state = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %3, i32 0, i32 0, !dbg !5277
  %4 = load i32, i32* %state, align 8, !dbg !5277
  switch i32 %4, label %sw.epilog546 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb55
    i32 3, label %sw.bb85
    i32 4, label %sw.bb146
    i32 5, label %sw.bb175
    i32 6, label %sw.bb175
    i32 7, label %sw.bb175
    i32 8, label %sw.bb300
    i32 9, label %sw.bb370
    i32 10, label %sw.bb390
    i32 11, label %sw.bb445
    i32 12, label %sw.bb446
    i32 13, label %sw.bb460
    i32 14, label %sw.bb475
    i32 15, label %sw.bb490
    i32 16, label %sw.bb511
    i32 17, label %sw.bb526
  ], !dbg !5278

sw.bb:                                            ; preds = %for.cond
  %5 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5279
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %5, i32 0, i32 1, !dbg !5279
  %6 = load i32, i32* %cache_avail, align 8, !dbg !5279
  %cmp = icmp sge i32 %6, 1, !dbg !5279
  br i1 %cmp, label %if.end9, label %lor.lhs.false, !dbg !5279

lor.lhs.false:                                    ; preds = %sw.bb
  %7 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5282
  %8 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5282
  %call = call i32 @lzx_br_fillup(%struct.lzx_stream* %7, %struct.lzx_br* %8), !dbg !5282
  %tobool = icmp ne i32 %call, 0, !dbg !5282
  br i1 %tobool, label %if.end9, label %lor.lhs.false3, !dbg !5282

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5284
  %cache_avail4 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %9, i32 0, i32 1, !dbg !5284
  %10 = load i32, i32* %cache_avail4, align 8, !dbg !5284
  %cmp5 = icmp sge i32 %10, 1, !dbg !5284
  br i1 %cmp5, label %if.end9, label %if.then, !dbg !5286

if.then:                                          ; preds = %lor.lhs.false3
  %11 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5287
  %state6 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %11, i32 0, i32 0, !dbg !5289
  store i32 0, i32* %state6, align 8, !dbg !5290
  %12 = load i32, i32* %last.addr, align 4, !dbg !5291
  %tobool7 = icmp ne i32 %12, 0, !dbg !5291
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !5293

if.then8:                                         ; preds = %if.then
  br label %failed, !dbg !5294

if.end:                                           ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !5295
  br label %return, !dbg !5295

if.end9:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %sw.bb
  %13 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5296
  %cache_buffer = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %13, i32 0, i32 0, !dbg !5296
  %14 = load i64, i64* %cache_buffer, align 8, !dbg !5296
  %15 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5296
  %cache_avail10 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %15, i32 0, i32 1, !dbg !5296
  %16 = load i32, i32* %cache_avail10, align 8, !dbg !5296
  %sub = sub nsw i32 %16, 1, !dbg !5296
  %sh_prom = zext i32 %sub to i64, !dbg !5296
  %shr = lshr i64 %14, %sh_prom, !dbg !5296
  %conv = trunc i64 %shr to i32, !dbg !5296
  %17 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 1), align 4, !dbg !5296
  %and = and i32 %conv, %17, !dbg !5296
  %conv11 = trunc i32 %and to i8, !dbg !5296
  %18 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5297
  %translation = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %18, i32 0, i32 8, !dbg !5298
  store i8 %conv11, i8* %translation, align 8, !dbg !5299
  %19 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5300
  %cache_avail12 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %19, i32 0, i32 1, !dbg !5300
  %20 = load i32, i32* %cache_avail12, align 8, !dbg !5300
  %sub13 = sub nsw i32 %20, 1, !dbg !5300
  store i32 %sub13, i32* %cache_avail12, align 8, !dbg !5300
  br label %sw.bb14, !dbg !5300

sw.bb14:                                          ; preds = %for.cond, %if.end9
  %21 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5301
  %translation15 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %21, i32 0, i32 8, !dbg !5303
  %22 = load i8, i8* %translation15, align 8, !dbg !5303
  %tobool16 = icmp ne i8 %22, 0, !dbg !5301
  br i1 %tobool16, label %if.then17, label %if.end54, !dbg !5304

if.then17:                                        ; preds = %sw.bb14
  %23 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5305
  %cache_avail18 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %23, i32 0, i32 1, !dbg !5305
  %24 = load i32, i32* %cache_avail18, align 8, !dbg !5305
  %cmp19 = icmp sge i32 %24, 32, !dbg !5305
  br i1 %cmp19, label %if.end33, label %lor.lhs.false21, !dbg !5305

lor.lhs.false21:                                  ; preds = %if.then17
  %25 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5308
  %26 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5308
  %call22 = call i32 @lzx_br_fillup(%struct.lzx_stream* %25, %struct.lzx_br* %26), !dbg !5308
  %tobool23 = icmp ne i32 %call22, 0, !dbg !5308
  br i1 %tobool23, label %if.end33, label %lor.lhs.false24, !dbg !5308

lor.lhs.false24:                                  ; preds = %lor.lhs.false21
  %27 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5310
  %cache_avail25 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %27, i32 0, i32 1, !dbg !5310
  %28 = load i32, i32* %cache_avail25, align 8, !dbg !5310
  %cmp26 = icmp sge i32 %28, 32, !dbg !5310
  br i1 %cmp26, label %if.end33, label %if.then28, !dbg !5312

if.then28:                                        ; preds = %lor.lhs.false24
  %29 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5313
  %state29 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %29, i32 0, i32 0, !dbg !5315
  store i32 1, i32* %state29, align 8, !dbg !5316
  %30 = load i32, i32* %last.addr, align 4, !dbg !5317
  %tobool30 = icmp ne i32 %30, 0, !dbg !5317
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5319

if.then31:                                        ; preds = %if.then28
  br label %failed, !dbg !5320

if.end32:                                         ; preds = %if.then28
  store i32 0, i32* %retval, align 4, !dbg !5321
  br label %return, !dbg !5321

if.end33:                                         ; preds = %lor.lhs.false24, %lor.lhs.false21, %if.then17
  %31 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5322
  %cache_buffer34 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %31, i32 0, i32 0, !dbg !5322
  %32 = load i64, i64* %cache_buffer34, align 8, !dbg !5322
  %33 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5322
  %cache_avail35 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %33, i32 0, i32 1, !dbg !5322
  %34 = load i32, i32* %cache_avail35, align 8, !dbg !5322
  %sub36 = sub nsw i32 %34, 16, !dbg !5322
  %sh_prom37 = zext i32 %sub36 to i64, !dbg !5322
  %shr38 = lshr i64 %32, %sh_prom37, !dbg !5322
  %conv39 = trunc i64 %shr38 to i32, !dbg !5322
  %35 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 16), align 16, !dbg !5322
  %and40 = and i32 %conv39, %35, !dbg !5322
  %36 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5323
  %translation_size = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %36, i32 0, i32 7, !dbg !5324
  store i32 %and40, i32* %translation_size, align 4, !dbg !5325
  %37 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5326
  %cache_avail41 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %37, i32 0, i32 1, !dbg !5326
  %38 = load i32, i32* %cache_avail41, align 8, !dbg !5326
  %sub42 = sub nsw i32 %38, 16, !dbg !5326
  store i32 %sub42, i32* %cache_avail41, align 8, !dbg !5326
  %39 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5327
  %translation_size43 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %39, i32 0, i32 7, !dbg !5328
  %40 = load i32, i32* %translation_size43, align 4, !dbg !5329
  %shl = shl i32 %40, 16, !dbg !5329
  store i32 %shl, i32* %translation_size43, align 4, !dbg !5329
  %41 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5330
  %cache_buffer44 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %41, i32 0, i32 0, !dbg !5330
  %42 = load i64, i64* %cache_buffer44, align 8, !dbg !5330
  %43 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5330
  %cache_avail45 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %43, i32 0, i32 1, !dbg !5330
  %44 = load i32, i32* %cache_avail45, align 8, !dbg !5330
  %sub46 = sub nsw i32 %44, 16, !dbg !5330
  %sh_prom47 = zext i32 %sub46 to i64, !dbg !5330
  %shr48 = lshr i64 %42, %sh_prom47, !dbg !5330
  %conv49 = trunc i64 %shr48 to i32, !dbg !5330
  %45 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 16), align 16, !dbg !5330
  %and50 = and i32 %conv49, %45, !dbg !5330
  %46 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5331
  %translation_size51 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %46, i32 0, i32 7, !dbg !5332
  %47 = load i32, i32* %translation_size51, align 4, !dbg !5333
  %or = or i32 %47, %and50, !dbg !5333
  store i32 %or, i32* %translation_size51, align 4, !dbg !5333
  %48 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5334
  %cache_avail52 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %48, i32 0, i32 1, !dbg !5334
  %49 = load i32, i32* %cache_avail52, align 8, !dbg !5334
  %sub53 = sub nsw i32 %49, 16, !dbg !5334
  store i32 %sub53, i32* %cache_avail52, align 8, !dbg !5334
  br label %if.end54, !dbg !5335

if.end54:                                         ; preds = %if.end33, %sw.bb14
  br label %sw.bb55, !dbg !5336

sw.bb55:                                          ; preds = %for.cond, %if.end54
  %50 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5338
  %cache_avail56 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %50, i32 0, i32 1, !dbg !5338
  %51 = load i32, i32* %cache_avail56, align 8, !dbg !5338
  %cmp57 = icmp sge i32 %51, 3, !dbg !5338
  br i1 %cmp57, label %if.end71, label %lor.lhs.false59, !dbg !5338

lor.lhs.false59:                                  ; preds = %sw.bb55
  %52 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5340
  %53 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5340
  %call60 = call i32 @lzx_br_fillup(%struct.lzx_stream* %52, %struct.lzx_br* %53), !dbg !5340
  %tobool61 = icmp ne i32 %call60, 0, !dbg !5340
  br i1 %tobool61, label %if.end71, label %lor.lhs.false62, !dbg !5340

lor.lhs.false62:                                  ; preds = %lor.lhs.false59
  %54 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5342
  %cache_avail63 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %54, i32 0, i32 1, !dbg !5342
  %55 = load i32, i32* %cache_avail63, align 8, !dbg !5342
  %cmp64 = icmp sge i32 %55, 3, !dbg !5342
  br i1 %cmp64, label %if.end71, label %if.then66, !dbg !5344

if.then66:                                        ; preds = %lor.lhs.false62
  %56 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5345
  %state67 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %56, i32 0, i32 0, !dbg !5347
  store i32 2, i32* %state67, align 8, !dbg !5348
  %57 = load i32, i32* %last.addr, align 4, !dbg !5349
  %tobool68 = icmp ne i32 %57, 0, !dbg !5349
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !5351

if.then69:                                        ; preds = %if.then66
  br label %failed, !dbg !5352

if.end70:                                         ; preds = %if.then66
  store i32 0, i32* %retval, align 4, !dbg !5353
  br label %return, !dbg !5353

if.end71:                                         ; preds = %lor.lhs.false62, %lor.lhs.false59, %sw.bb55
  %58 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5354
  %cache_buffer72 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %58, i32 0, i32 0, !dbg !5354
  %59 = load i64, i64* %cache_buffer72, align 8, !dbg !5354
  %60 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5354
  %cache_avail73 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %60, i32 0, i32 1, !dbg !5354
  %61 = load i32, i32* %cache_avail73, align 8, !dbg !5354
  %sub74 = sub nsw i32 %61, 3, !dbg !5354
  %sh_prom75 = zext i32 %sub74 to i64, !dbg !5354
  %shr76 = lshr i64 %59, %sh_prom75, !dbg !5354
  %conv77 = trunc i64 %shr76 to i32, !dbg !5354
  %62 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 3), align 4, !dbg !5354
  %and78 = and i32 %conv77, %62, !dbg !5354
  %conv79 = trunc i32 %and78 to i8, !dbg !5354
  %63 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5355
  %block_type = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %63, i32 0, i32 9, !dbg !5356
  store i8 %conv79, i8* %block_type, align 1, !dbg !5357
  %64 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5358
  %cache_avail80 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %64, i32 0, i32 1, !dbg !5358
  %65 = load i32, i32* %cache_avail80, align 8, !dbg !5358
  %sub81 = sub nsw i32 %65, 3, !dbg !5358
  store i32 %sub81, i32* %cache_avail80, align 8, !dbg !5358
  %66 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5359
  %block_type82 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %66, i32 0, i32 9, !dbg !5360
  %67 = load i8, i8* %block_type82, align 1, !dbg !5360
  %conv83 = sext i8 %67 to i32, !dbg !5359
  switch i32 %conv83, label %sw.default [
    i32 1, label %sw.bb84
    i32 2, label %sw.bb84
    i32 3, label %sw.bb84
  ], !dbg !5361

sw.bb84:                                          ; preds = %if.end71, %if.end71, %if.end71
  br label %sw.epilog, !dbg !5362

sw.default:                                       ; preds = %if.end71
  br label %failed, !dbg !5364

sw.epilog:                                        ; preds = %sw.bb84
  br label %sw.bb85, !dbg !5365

sw.bb85:                                          ; preds = %for.cond, %sw.epilog
  %68 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5366
  %cache_avail86 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %68, i32 0, i32 1, !dbg !5366
  %69 = load i32, i32* %cache_avail86, align 8, !dbg !5366
  %cmp87 = icmp sge i32 %69, 24, !dbg !5366
  br i1 %cmp87, label %if.end101, label %lor.lhs.false89, !dbg !5366

lor.lhs.false89:                                  ; preds = %sw.bb85
  %70 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5368
  %71 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5368
  %call90 = call i32 @lzx_br_fillup(%struct.lzx_stream* %70, %struct.lzx_br* %71), !dbg !5368
  %tobool91 = icmp ne i32 %call90, 0, !dbg !5368
  br i1 %tobool91, label %if.end101, label %lor.lhs.false92, !dbg !5368

lor.lhs.false92:                                  ; preds = %lor.lhs.false89
  %72 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5370
  %cache_avail93 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %72, i32 0, i32 1, !dbg !5370
  %73 = load i32, i32* %cache_avail93, align 8, !dbg !5370
  %cmp94 = icmp sge i32 %73, 24, !dbg !5370
  br i1 %cmp94, label %if.end101, label %if.then96, !dbg !5372

if.then96:                                        ; preds = %lor.lhs.false92
  %74 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5373
  %state97 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %74, i32 0, i32 0, !dbg !5375
  store i32 3, i32* %state97, align 8, !dbg !5376
  %75 = load i32, i32* %last.addr, align 4, !dbg !5377
  %tobool98 = icmp ne i32 %75, 0, !dbg !5377
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !5379

if.then99:                                        ; preds = %if.then96
  br label %failed, !dbg !5380

if.end100:                                        ; preds = %if.then96
  store i32 0, i32* %retval, align 4, !dbg !5381
  br label %return, !dbg !5381

if.end101:                                        ; preds = %lor.lhs.false92, %lor.lhs.false89, %sw.bb85
  %76 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5382
  %cache_buffer102 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %76, i32 0, i32 0, !dbg !5382
  %77 = load i64, i64* %cache_buffer102, align 8, !dbg !5382
  %78 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5382
  %cache_avail103 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %78, i32 0, i32 1, !dbg !5382
  %79 = load i32, i32* %cache_avail103, align 8, !dbg !5382
  %sub104 = sub nsw i32 %79, 8, !dbg !5382
  %sh_prom105 = zext i32 %sub104 to i64, !dbg !5382
  %shr106 = lshr i64 %77, %sh_prom105, !dbg !5382
  %conv107 = trunc i64 %shr106 to i32, !dbg !5382
  %80 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 8), align 16, !dbg !5382
  %and108 = and i32 %conv107, %80, !dbg !5382
  %conv109 = zext i32 %and108 to i64, !dbg !5382
  %81 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5383
  %block_size = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %81, i32 0, i32 10, !dbg !5384
  store i64 %conv109, i64* %block_size, align 8, !dbg !5385
  %82 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5386
  %cache_avail110 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %82, i32 0, i32 1, !dbg !5386
  %83 = load i32, i32* %cache_avail110, align 8, !dbg !5386
  %sub111 = sub nsw i32 %83, 8, !dbg !5386
  store i32 %sub111, i32* %cache_avail110, align 8, !dbg !5386
  %84 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5387
  %block_size112 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %84, i32 0, i32 10, !dbg !5388
  %85 = load i64, i64* %block_size112, align 8, !dbg !5389
  %shl113 = shl i64 %85, 16, !dbg !5389
  store i64 %shl113, i64* %block_size112, align 8, !dbg !5389
  %86 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5390
  %cache_buffer114 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %86, i32 0, i32 0, !dbg !5390
  %87 = load i64, i64* %cache_buffer114, align 8, !dbg !5390
  %88 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5390
  %cache_avail115 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %88, i32 0, i32 1, !dbg !5390
  %89 = load i32, i32* %cache_avail115, align 8, !dbg !5390
  %sub116 = sub nsw i32 %89, 16, !dbg !5390
  %sh_prom117 = zext i32 %sub116 to i64, !dbg !5390
  %shr118 = lshr i64 %87, %sh_prom117, !dbg !5390
  %conv119 = trunc i64 %shr118 to i32, !dbg !5390
  %90 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 16), align 16, !dbg !5390
  %and120 = and i32 %conv119, %90, !dbg !5390
  %conv121 = zext i32 %and120 to i64, !dbg !5390
  %91 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5391
  %block_size122 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %91, i32 0, i32 10, !dbg !5392
  %92 = load i64, i64* %block_size122, align 8, !dbg !5393
  %or123 = or i64 %92, %conv121, !dbg !5393
  store i64 %or123, i64* %block_size122, align 8, !dbg !5393
  %93 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5394
  %cache_avail124 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %93, i32 0, i32 1, !dbg !5394
  %94 = load i32, i32* %cache_avail124, align 8, !dbg !5394
  %sub125 = sub nsw i32 %94, 16, !dbg !5394
  store i32 %sub125, i32* %cache_avail124, align 8, !dbg !5394
  %95 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5395
  %block_size126 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %95, i32 0, i32 10, !dbg !5397
  %96 = load i64, i64* %block_size126, align 8, !dbg !5397
  %cmp127 = icmp eq i64 %96, 0, !dbg !5398
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !5399

if.then129:                                       ; preds = %if.end101
  br label %failed, !dbg !5400

if.end130:                                        ; preds = %if.end101
  %97 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5401
  %block_size131 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %97, i32 0, i32 10, !dbg !5402
  %98 = load i64, i64* %block_size131, align 8, !dbg !5402
  %99 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5403
  %block_bytes_avail = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %99, i32 0, i32 11, !dbg !5404
  store i64 %98, i64* %block_bytes_avail, align 8, !dbg !5405
  %100 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5406
  %block_type132 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %100, i32 0, i32 9, !dbg !5408
  %101 = load i8, i8* %block_type132, align 1, !dbg !5408
  %conv133 = sext i8 %101 to i32, !dbg !5406
  %cmp134 = icmp ne i32 %conv133, 3, !dbg !5409
  br i1 %cmp134, label %if.then136, label %if.end145, !dbg !5410

if.then136:                                       ; preds = %if.end130
  %102 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5411
  %block_type137 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %102, i32 0, i32 9, !dbg !5414
  %103 = load i8, i8* %block_type137, align 1, !dbg !5414
  %conv138 = sext i8 %103 to i32, !dbg !5411
  %cmp139 = icmp eq i32 %conv138, 1, !dbg !5415
  br i1 %cmp139, label %if.then141, label %if.else, !dbg !5416

if.then141:                                       ; preds = %if.then136
  %104 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5417
  %state142 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %104, i32 0, i32 0, !dbg !5418
  store i32 11, i32* %state142, align 8, !dbg !5419
  br label %if.end144, !dbg !5417

if.else:                                          ; preds = %if.then136
  %105 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5420
  %state143 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %105, i32 0, i32 0, !dbg !5421
  store i32 10, i32* %state143, align 8, !dbg !5422
  br label %if.end144

if.end144:                                        ; preds = %if.else, %if.then141
  br label %sw.epilog546, !dbg !5423

if.end145:                                        ; preds = %if.end130
  br label %sw.bb146, !dbg !5424

sw.bb146:                                         ; preds = %for.cond, %if.end145
  %106 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5426
  %cache_avail147 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %106, i32 0, i32 1, !dbg !5426
  %107 = load i32, i32* %cache_avail147, align 8, !dbg !5426
  %and148 = and i32 %107, 15, !dbg !5426
  %tobool149 = icmp ne i32 %and148, 0, !dbg !5426
  br i1 %tobool149, label %if.then150, label %if.else153, !dbg !5428

if.then150:                                       ; preds = %sw.bb146
  %108 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5429
  %cache_avail151 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %108, i32 0, i32 1, !dbg !5429
  %109 = load i32, i32* %cache_avail151, align 8, !dbg !5429
  %and152 = and i32 %109, -16, !dbg !5429
  store i32 %and152, i32* %cache_avail151, align 8, !dbg !5429
  br label %if.end173, !dbg !5429

if.else153:                                       ; preds = %sw.bb146
  %110 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5430
  %cache_avail154 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %110, i32 0, i32 1, !dbg !5430
  %111 = load i32, i32* %cache_avail154, align 8, !dbg !5430
  %cmp155 = icmp sge i32 %111, 16, !dbg !5430
  br i1 %cmp155, label %if.then164, label %lor.lhs.false157, !dbg !5430

lor.lhs.false157:                                 ; preds = %if.else153
  %112 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5433
  %113 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5433
  %call158 = call i32 @lzx_br_fillup(%struct.lzx_stream* %112, %struct.lzx_br* %113), !dbg !5433
  %tobool159 = icmp ne i32 %call158, 0, !dbg !5433
  br i1 %tobool159, label %if.then164, label %lor.lhs.false160, !dbg !5433

lor.lhs.false160:                                 ; preds = %lor.lhs.false157
  %114 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5435
  %cache_avail161 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %114, i32 0, i32 1, !dbg !5435
  %115 = load i32, i32* %cache_avail161, align 8, !dbg !5435
  %cmp162 = icmp sge i32 %115, 16, !dbg !5435
  br i1 %cmp162, label %if.then164, label %if.else167, !dbg !5435

if.then164:                                       ; preds = %lor.lhs.false160, %lor.lhs.false157, %if.else153
  %116 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5437
  %cache_avail165 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %116, i32 0, i32 1, !dbg !5437
  %117 = load i32, i32* %cache_avail165, align 8, !dbg !5437
  %sub166 = sub nsw i32 %117, 16, !dbg !5437
  store i32 %sub166, i32* %cache_avail165, align 8, !dbg !5437
  br label %if.end172, !dbg !5437

if.else167:                                       ; preds = %lor.lhs.false160
  %118 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5438
  %state168 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %118, i32 0, i32 0, !dbg !5440
  store i32 4, i32* %state168, align 8, !dbg !5441
  %119 = load i32, i32* %last.addr, align 4, !dbg !5442
  %tobool169 = icmp ne i32 %119, 0, !dbg !5442
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !5444

if.then170:                                       ; preds = %if.else167
  br label %failed, !dbg !5445

if.end171:                                        ; preds = %if.else167
  store i32 0, i32* %retval, align 4, !dbg !5446
  br label %return, !dbg !5446

if.end172:                                        ; preds = %if.then164
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then150
  %120 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5447
  %rbytes_avail = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %120, i32 0, i32 16, !dbg !5448
  store i32 0, i32* %rbytes_avail, align 8, !dbg !5449
  %121 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5450
  %state174 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %121, i32 0, i32 0, !dbg !5451
  store i32 5, i32* %state174, align 8, !dbg !5452
  br label %sw.bb175, !dbg !5450

sw.bb175:                                         ; preds = %for.cond, %for.cond, %for.cond, %if.end173
  br label %do.body, !dbg !5453

do.body:                                          ; preds = %do.cond, %sw.bb175
  call void @llvm.dbg.declare(metadata i16* %u16, metadata !5454, metadata !638), !dbg !5456
  %122 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5457
  %cache_avail176 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %122, i32 0, i32 1, !dbg !5457
  %123 = load i32, i32* %cache_avail176, align 8, !dbg !5457
  %cmp177 = icmp sge i32 %123, 32, !dbg !5457
  br i1 %cmp177, label %if.then179, label %if.else203, !dbg !5459

if.then179:                                       ; preds = %do.body
  %124 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5460
  %cache_buffer180 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %124, i32 0, i32 0, !dbg !5460
  %125 = load i64, i64* %cache_buffer180, align 8, !dbg !5460
  %126 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5460
  %cache_avail181 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %126, i32 0, i32 1, !dbg !5460
  %127 = load i32, i32* %cache_avail181, align 8, !dbg !5460
  %sub182 = sub nsw i32 %127, 16, !dbg !5460
  %sh_prom183 = zext i32 %sub182 to i64, !dbg !5460
  %shr184 = lshr i64 %125, %sh_prom183, !dbg !5460
  %conv185 = trunc i64 %shr184 to i32, !dbg !5460
  %128 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 16), align 16, !dbg !5460
  %and186 = and i32 %conv185, %128, !dbg !5460
  %conv187 = trunc i32 %and186 to i16, !dbg !5460
  store i16 %conv187, i16* %u16, align 2, !dbg !5462
  %129 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5463
  %cache_avail188 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %129, i32 0, i32 1, !dbg !5463
  %130 = load i32, i32* %cache_avail188, align 8, !dbg !5463
  %sub189 = sub nsw i32 %130, 16, !dbg !5463
  store i32 %sub189, i32* %cache_avail188, align 8, !dbg !5463
  %131 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5464
  %rbytes = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %131, i32 0, i32 15, !dbg !5465
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes, i32 0, i32 0, !dbg !5464
  %132 = load i16, i16* %u16, align 2, !dbg !5466
  call void @archive_le16enc(i8* %arraydecay, i16 zeroext %132), !dbg !5467
  %133 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5468
  %cache_buffer190 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %133, i32 0, i32 0, !dbg !5468
  %134 = load i64, i64* %cache_buffer190, align 8, !dbg !5468
  %135 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5468
  %cache_avail191 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %135, i32 0, i32 1, !dbg !5468
  %136 = load i32, i32* %cache_avail191, align 8, !dbg !5468
  %sub192 = sub nsw i32 %136, 16, !dbg !5468
  %sh_prom193 = zext i32 %sub192 to i64, !dbg !5468
  %shr194 = lshr i64 %134, %sh_prom193, !dbg !5468
  %conv195 = trunc i64 %shr194 to i32, !dbg !5468
  %137 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 16), align 16, !dbg !5468
  %and196 = and i32 %conv195, %137, !dbg !5468
  %conv197 = trunc i32 %and196 to i16, !dbg !5468
  store i16 %conv197, i16* %u16, align 2, !dbg !5469
  %138 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5470
  %cache_avail198 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %138, i32 0, i32 1, !dbg !5470
  %139 = load i32, i32* %cache_avail198, align 8, !dbg !5470
  %sub199 = sub nsw i32 %139, 16, !dbg !5470
  store i32 %sub199, i32* %cache_avail198, align 8, !dbg !5470
  %140 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5471
  %rbytes200 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %140, i32 0, i32 15, !dbg !5472
  %arraydecay201 = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes200, i32 0, i32 0, !dbg !5471
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay201, i64 2, !dbg !5473
  %141 = load i16, i16* %u16, align 2, !dbg !5474
  call void @archive_le16enc(i8* %add.ptr, i16 zeroext %141), !dbg !5475
  %142 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5476
  %rbytes_avail202 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %142, i32 0, i32 16, !dbg !5477
  store i32 4, i32* %rbytes_avail202, align 8, !dbg !5478
  br label %if.end222, !dbg !5479

if.else203:                                       ; preds = %do.body
  %143 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5480
  %cache_avail204 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %143, i32 0, i32 1, !dbg !5480
  %144 = load i32, i32* %cache_avail204, align 8, !dbg !5480
  %cmp205 = icmp sge i32 %144, 16, !dbg !5480
  br i1 %cmp205, label %if.then207, label %if.end221, !dbg !5480

if.then207:                                       ; preds = %if.else203
  %145 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5483
  %cache_buffer208 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %145, i32 0, i32 0, !dbg !5483
  %146 = load i64, i64* %cache_buffer208, align 8, !dbg !5483
  %147 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5483
  %cache_avail209 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %147, i32 0, i32 1, !dbg !5483
  %148 = load i32, i32* %cache_avail209, align 8, !dbg !5483
  %sub210 = sub nsw i32 %148, 16, !dbg !5483
  %sh_prom211 = zext i32 %sub210 to i64, !dbg !5483
  %shr212 = lshr i64 %146, %sh_prom211, !dbg !5483
  %conv213 = trunc i64 %shr212 to i32, !dbg !5483
  %149 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 16), align 16, !dbg !5483
  %and214 = and i32 %conv213, %149, !dbg !5483
  %conv215 = trunc i32 %and214 to i16, !dbg !5483
  store i16 %conv215, i16* %u16, align 2, !dbg !5485
  %150 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5486
  %cache_avail216 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %150, i32 0, i32 1, !dbg !5486
  %151 = load i32, i32* %cache_avail216, align 8, !dbg !5486
  %sub217 = sub nsw i32 %151, 16, !dbg !5486
  store i32 %sub217, i32* %cache_avail216, align 8, !dbg !5486
  %152 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5487
  %rbytes218 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %152, i32 0, i32 15, !dbg !5488
  %arraydecay219 = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes218, i32 0, i32 0, !dbg !5487
  %153 = load i16, i16* %u16, align 2, !dbg !5489
  call void @archive_le16enc(i8* %arraydecay219, i16 zeroext %153), !dbg !5490
  %154 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5491
  %rbytes_avail220 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %154, i32 0, i32 16, !dbg !5492
  store i32 2, i32* %rbytes_avail220, align 8, !dbg !5493
  br label %if.end221, !dbg !5494

if.end221:                                        ; preds = %if.then207, %if.else203
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.then179
  %155 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5495
  %rbytes_avail223 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %155, i32 0, i32 16, !dbg !5497
  %156 = load i32, i32* %rbytes_avail223, align 8, !dbg !5497
  %cmp224 = icmp slt i32 %156, 4, !dbg !5498
  br i1 %cmp224, label %land.lhs.true, label %if.end235, !dbg !5499

land.lhs.true:                                    ; preds = %if.end222
  %157 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5500
  %br226 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %157, i32 0, i32 21, !dbg !5502
  %have_odd = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %br226, i32 0, i32 3, !dbg !5503
  %158 = load i8, i8* %have_odd, align 1, !dbg !5503
  %conv227 = sext i8 %158 to i32, !dbg !5500
  %tobool228 = icmp ne i32 %conv227, 0, !dbg !5500
  br i1 %tobool228, label %if.then229, label %if.end235, !dbg !5504

if.then229:                                       ; preds = %land.lhs.true
  %159 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5505
  %br230 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %159, i32 0, i32 21, !dbg !5507
  %odd = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %br230, i32 0, i32 2, !dbg !5508
  %160 = load i8, i8* %odd, align 4, !dbg !5508
  %161 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5509
  %rbytes_avail231 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %161, i32 0, i32 16, !dbg !5510
  %162 = load i32, i32* %rbytes_avail231, align 8, !dbg !5511
  %inc = add nsw i32 %162, 1, !dbg !5511
  store i32 %inc, i32* %rbytes_avail231, align 8, !dbg !5511
  %idxprom = sext i32 %162 to i64, !dbg !5512
  %163 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5512
  %rbytes232 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %163, i32 0, i32 15, !dbg !5513
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes232, i64 0, i64 %idxprom, !dbg !5512
  store i8 %160, i8* %arrayidx, align 1, !dbg !5514
  %164 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5515
  %br233 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %164, i32 0, i32 21, !dbg !5516
  %have_odd234 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %br233, i32 0, i32 3, !dbg !5517
  store i8 0, i8* %have_odd234, align 1, !dbg !5518
  br label %if.end235, !dbg !5519

if.end235:                                        ; preds = %if.then229, %land.lhs.true, %if.end222
  br label %while.cond, !dbg !5520

while.cond:                                       ; preds = %if.end245, %if.end235
  %165 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5521
  %rbytes_avail236 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %165, i32 0, i32 16, !dbg !5523
  %166 = load i32, i32* %rbytes_avail236, align 8, !dbg !5523
  %cmp237 = icmp slt i32 %166, 4, !dbg !5524
  br i1 %cmp237, label %while.body, label %while.end, !dbg !5525

while.body:                                       ; preds = %while.cond
  %167 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5526
  %avail_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %167, i32 0, i32 1, !dbg !5529
  %168 = load i64, i64* %avail_in, align 8, !dbg !5529
  %cmp239 = icmp sle i64 %168, 0, !dbg !5530
  br i1 %cmp239, label %if.then241, label %if.end245, !dbg !5531

if.then241:                                       ; preds = %while.body
  %169 = load i32, i32* %last.addr, align 4, !dbg !5532
  %tobool242 = icmp ne i32 %169, 0, !dbg !5532
  br i1 %tobool242, label %if.then243, label %if.end244, !dbg !5535

if.then243:                                       ; preds = %if.then241
  br label %failed, !dbg !5536

if.end244:                                        ; preds = %if.then241
  store i32 0, i32* %retval, align 4, !dbg !5537
  br label %return, !dbg !5537

if.end245:                                        ; preds = %while.body
  %170 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5538
  %next_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %170, i32 0, i32 0, !dbg !5539
  %171 = load i8*, i8** %next_in, align 8, !dbg !5540
  %incdec.ptr = getelementptr inbounds i8, i8* %171, i32 1, !dbg !5540
  store i8* %incdec.ptr, i8** %next_in, align 8, !dbg !5540
  %172 = load i8, i8* %171, align 1, !dbg !5541
  %173 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5542
  %rbytes_avail246 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %173, i32 0, i32 16, !dbg !5543
  %174 = load i32, i32* %rbytes_avail246, align 8, !dbg !5544
  %inc247 = add nsw i32 %174, 1, !dbg !5544
  store i32 %inc247, i32* %rbytes_avail246, align 8, !dbg !5544
  %idxprom248 = sext i32 %174 to i64, !dbg !5545
  %175 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5545
  %rbytes249 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %175, i32 0, i32 15, !dbg !5546
  %arrayidx250 = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes249, i64 0, i64 %idxprom248, !dbg !5545
  store i8 %172, i8* %arrayidx250, align 1, !dbg !5547
  %176 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5548
  %avail_in251 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %176, i32 0, i32 1, !dbg !5549
  %177 = load i64, i64* %avail_in251, align 8, !dbg !5550
  %dec = add nsw i64 %177, -1, !dbg !5550
  store i64 %dec, i64* %avail_in251, align 8, !dbg !5550
  br label %while.cond, !dbg !5551

while.end:                                        ; preds = %while.cond
  %178 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5553
  %rbytes_avail252 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %178, i32 0, i32 16, !dbg !5554
  store i32 0, i32* %rbytes_avail252, align 8, !dbg !5555
  %179 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5556
  %state253 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %179, i32 0, i32 0, !dbg !5558
  %180 = load i32, i32* %state253, align 8, !dbg !5558
  %cmp254 = icmp eq i32 %180, 5, !dbg !5559
  br i1 %cmp254, label %if.then256, label %if.else266, !dbg !5560

if.then256:                                       ; preds = %while.end
  %181 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5561
  %rbytes257 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %181, i32 0, i32 15, !dbg !5563
  %arraydecay258 = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes257, i32 0, i32 0, !dbg !5561
  %call259 = call i32 @archive_le32dec(i8* %arraydecay258), !dbg !5564
  %182 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5565
  %r0 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %182, i32 0, i32 12, !dbg !5566
  store i32 %call259, i32* %r0, align 8, !dbg !5567
  %183 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5568
  %r0260 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %183, i32 0, i32 12, !dbg !5570
  %184 = load i32, i32* %r0260, align 8, !dbg !5570
  %cmp261 = icmp slt i32 %184, 0, !dbg !5571
  br i1 %cmp261, label %if.then263, label %if.end264, !dbg !5572

if.then263:                                       ; preds = %if.then256
  br label %failed, !dbg !5573

if.end264:                                        ; preds = %if.then256
  %185 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5574
  %state265 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %185, i32 0, i32 0, !dbg !5575
  store i32 6, i32* %state265, align 8, !dbg !5576
  br label %if.end296, !dbg !5577

if.else266:                                       ; preds = %while.end
  %186 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5578
  %state267 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %186, i32 0, i32 0, !dbg !5581
  %187 = load i32, i32* %state267, align 8, !dbg !5581
  %cmp268 = icmp eq i32 %187, 6, !dbg !5582
  br i1 %cmp268, label %if.then270, label %if.else280, !dbg !5578

if.then270:                                       ; preds = %if.else266
  %188 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5583
  %rbytes271 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %188, i32 0, i32 15, !dbg !5585
  %arraydecay272 = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes271, i32 0, i32 0, !dbg !5583
  %call273 = call i32 @archive_le32dec(i8* %arraydecay272), !dbg !5586
  %189 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5587
  %r1 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %189, i32 0, i32 13, !dbg !5588
  store i32 %call273, i32* %r1, align 4, !dbg !5589
  %190 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5590
  %r1274 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %190, i32 0, i32 13, !dbg !5592
  %191 = load i32, i32* %r1274, align 4, !dbg !5592
  %cmp275 = icmp slt i32 %191, 0, !dbg !5593
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !5594

if.then277:                                       ; preds = %if.then270
  br label %failed, !dbg !5595

if.end278:                                        ; preds = %if.then270
  %192 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5596
  %state279 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %192, i32 0, i32 0, !dbg !5597
  store i32 7, i32* %state279, align 8, !dbg !5598
  br label %if.end295, !dbg !5599

if.else280:                                       ; preds = %if.else266
  %193 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5600
  %state281 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %193, i32 0, i32 0, !dbg !5603
  %194 = load i32, i32* %state281, align 8, !dbg !5603
  %cmp282 = icmp eq i32 %194, 7, !dbg !5604
  br i1 %cmp282, label %if.then284, label %if.end294, !dbg !5600

if.then284:                                       ; preds = %if.else280
  %195 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5605
  %rbytes285 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %195, i32 0, i32 15, !dbg !5607
  %arraydecay286 = getelementptr inbounds [4 x i8], [4 x i8]* %rbytes285, i32 0, i32 0, !dbg !5605
  %call287 = call i32 @archive_le32dec(i8* %arraydecay286), !dbg !5608
  %196 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5609
  %r2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %196, i32 0, i32 14, !dbg !5610
  store i32 %call287, i32* %r2, align 8, !dbg !5611
  %197 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5612
  %r2288 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %197, i32 0, i32 14, !dbg !5614
  %198 = load i32, i32* %r2288, align 8, !dbg !5614
  %cmp289 = icmp slt i32 %198, 0, !dbg !5615
  br i1 %cmp289, label %if.then291, label %if.end292, !dbg !5616

if.then291:                                       ; preds = %if.then284
  br label %failed, !dbg !5617

if.end292:                                        ; preds = %if.then284
  %199 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5618
  %state293 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %199, i32 0, i32 0, !dbg !5619
  store i32 8, i32* %state293, align 8, !dbg !5620
  br label %if.end294, !dbg !5621

if.end294:                                        ; preds = %if.end292, %if.else280
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end278
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.end264
  br label %do.cond, !dbg !5622

do.cond:                                          ; preds = %if.end296
  %200 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5623
  %state297 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %200, i32 0, i32 0, !dbg !5625
  %201 = load i32, i32* %state297, align 8, !dbg !5625
  %cmp298 = icmp ne i32 %201, 8, !dbg !5626
  br i1 %cmp298, label %do.body, label %do.end, !dbg !5627

do.end:                                           ; preds = %do.cond
  br label %sw.bb300, !dbg !5628

sw.bb300:                                         ; preds = %for.cond, %do.end
  br label %while.cond301, !dbg !5629

while.cond301:                                    ; preds = %if.end342, %sw.bb300
  %202 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5630
  %block_bytes_avail302 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %202, i32 0, i32 11, !dbg !5631
  %203 = load i64, i64* %block_bytes_avail302, align 8, !dbg !5631
  %tobool303 = icmp ne i64 %203, 0, !dbg !5632
  br i1 %tobool303, label %while.body304, label %while.end369, !dbg !5632

while.body304:                                    ; preds = %while.cond301
  call void @llvm.dbg.declare(metadata i32* %l, metadata !5633, metadata !638), !dbg !5635
  %204 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5636
  %avail_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %204, i32 0, i32 4, !dbg !5638
  %205 = load i64, i64* %avail_out, align 8, !dbg !5638
  %cmp305 = icmp sle i64 %205, 0, !dbg !5639
  br i1 %cmp305, label %if.then307, label %if.end308, !dbg !5640

if.then307:                                       ; preds = %while.body304
  store i32 0, i32* %retval, align 4, !dbg !5641
  br label %return, !dbg !5641

if.end308:                                        ; preds = %while.body304
  %206 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5642
  %avail_in309 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %206, i32 0, i32 1, !dbg !5644
  %207 = load i64, i64* %avail_in309, align 8, !dbg !5644
  %cmp310 = icmp sle i64 %207, 0, !dbg !5645
  br i1 %cmp310, label %if.then312, label %if.end316, !dbg !5646

if.then312:                                       ; preds = %if.end308
  %208 = load i32, i32* %last.addr, align 4, !dbg !5647
  %tobool313 = icmp ne i32 %208, 0, !dbg !5647
  br i1 %tobool313, label %if.then314, label %if.end315, !dbg !5650

if.then314:                                       ; preds = %if.then312
  br label %failed, !dbg !5651

if.end315:                                        ; preds = %if.then312
  store i32 0, i32* %retval, align 4, !dbg !5652
  br label %return, !dbg !5652

if.end316:                                        ; preds = %if.end308
  %209 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5653
  %block_bytes_avail317 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %209, i32 0, i32 11, !dbg !5654
  %210 = load i64, i64* %block_bytes_avail317, align 8, !dbg !5654
  %conv318 = trunc i64 %210 to i32, !dbg !5655
  store i32 %conv318, i32* %l, align 4, !dbg !5656
  %211 = load i32, i32* %l, align 4, !dbg !5657
  %212 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5659
  %w_size = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %212, i32 0, i32 1, !dbg !5660
  %213 = load i32, i32* %w_size, align 4, !dbg !5660
  %214 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5661
  %w_pos = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %214, i32 0, i32 4, !dbg !5662
  %215 = load i32, i32* %w_pos, align 8, !dbg !5662
  %sub319 = sub nsw i32 %213, %215, !dbg !5663
  %cmp320 = icmp sgt i32 %211, %sub319, !dbg !5664
  br i1 %cmp320, label %if.then322, label %if.end326, !dbg !5665

if.then322:                                       ; preds = %if.end316
  %216 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5666
  %w_size323 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %216, i32 0, i32 1, !dbg !5667
  %217 = load i32, i32* %w_size323, align 4, !dbg !5667
  %218 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5668
  %w_pos324 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %218, i32 0, i32 4, !dbg !5669
  %219 = load i32, i32* %w_pos324, align 8, !dbg !5669
  %sub325 = sub nsw i32 %217, %219, !dbg !5670
  store i32 %sub325, i32* %l, align 4, !dbg !5671
  br label %if.end326, !dbg !5672

if.end326:                                        ; preds = %if.then322, %if.end316
  %220 = load i32, i32* %l, align 4, !dbg !5673
  %conv327 = sext i32 %220 to i64, !dbg !5673
  %221 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5675
  %avail_out328 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %221, i32 0, i32 4, !dbg !5676
  %222 = load i64, i64* %avail_out328, align 8, !dbg !5676
  %cmp329 = icmp sgt i64 %conv327, %222, !dbg !5677
  br i1 %cmp329, label %if.then331, label %if.end334, !dbg !5678

if.then331:                                       ; preds = %if.end326
  %223 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5679
  %avail_out332 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %223, i32 0, i32 4, !dbg !5680
  %224 = load i64, i64* %avail_out332, align 8, !dbg !5680
  %conv333 = trunc i64 %224 to i32, !dbg !5681
  store i32 %conv333, i32* %l, align 4, !dbg !5682
  br label %if.end334, !dbg !5683

if.end334:                                        ; preds = %if.then331, %if.end326
  %225 = load i32, i32* %l, align 4, !dbg !5684
  %conv335 = sext i32 %225 to i64, !dbg !5684
  %226 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5686
  %avail_in336 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %226, i32 0, i32 1, !dbg !5687
  %227 = load i64, i64* %avail_in336, align 8, !dbg !5687
  %cmp337 = icmp sgt i64 %conv335, %227, !dbg !5688
  br i1 %cmp337, label %if.then339, label %if.end342, !dbg !5689

if.then339:                                       ; preds = %if.end334
  %228 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5690
  %avail_in340 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %228, i32 0, i32 1, !dbg !5691
  %229 = load i64, i64* %avail_in340, align 8, !dbg !5691
  %conv341 = trunc i64 %229 to i32, !dbg !5692
  store i32 %conv341, i32* %l, align 4, !dbg !5693
  br label %if.end342, !dbg !5694

if.end342:                                        ; preds = %if.then339, %if.end334
  %230 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5695
  %next_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %230, i32 0, i32 3, !dbg !5696
  %231 = load i8*, i8** %next_out, align 8, !dbg !5696
  %232 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5697
  %next_in343 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %232, i32 0, i32 0, !dbg !5698
  %233 = load i8*, i8** %next_in343, align 8, !dbg !5698
  %234 = load i32, i32* %l, align 4, !dbg !5699
  %conv344 = sext i32 %234 to i64, !dbg !5699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %231, i8* %233, i64 %conv344, i32 1, i1 false), !dbg !5700
  %235 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5701
  %w_pos345 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %235, i32 0, i32 4, !dbg !5702
  %236 = load i32, i32* %w_pos345, align 8, !dbg !5702
  %idxprom346 = sext i32 %236 to i64, !dbg !5703
  %237 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5703
  %w_buff = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %237, i32 0, i32 3, !dbg !5704
  %238 = load i8*, i8** %w_buff, align 8, !dbg !5704
  %arrayidx347 = getelementptr inbounds i8, i8* %238, i64 %idxprom346, !dbg !5703
  %239 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5705
  %next_in348 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %239, i32 0, i32 0, !dbg !5706
  %240 = load i8*, i8** %next_in348, align 8, !dbg !5706
  %241 = load i32, i32* %l, align 4, !dbg !5707
  %conv349 = sext i32 %241 to i64, !dbg !5707
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx347, i8* %240, i64 %conv349, i32 1, i1 false), !dbg !5708
  %242 = load i32, i32* %l, align 4, !dbg !5709
  %243 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5710
  %next_in350 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %243, i32 0, i32 0, !dbg !5711
  %244 = load i8*, i8** %next_in350, align 8, !dbg !5712
  %idx.ext = sext i32 %242 to i64, !dbg !5712
  %add.ptr351 = getelementptr inbounds i8, i8* %244, i64 %idx.ext, !dbg !5712
  store i8* %add.ptr351, i8** %next_in350, align 8, !dbg !5712
  %245 = load i32, i32* %l, align 4, !dbg !5713
  %conv352 = sext i32 %245 to i64, !dbg !5713
  %246 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5714
  %avail_in353 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %246, i32 0, i32 1, !dbg !5715
  %247 = load i64, i64* %avail_in353, align 8, !dbg !5716
  %sub354 = sub nsw i64 %247, %conv352, !dbg !5716
  store i64 %sub354, i64* %avail_in353, align 8, !dbg !5716
  %248 = load i32, i32* %l, align 4, !dbg !5717
  %249 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5718
  %next_out355 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %249, i32 0, i32 3, !dbg !5719
  %250 = load i8*, i8** %next_out355, align 8, !dbg !5720
  %idx.ext356 = sext i32 %248 to i64, !dbg !5720
  %add.ptr357 = getelementptr inbounds i8, i8* %250, i64 %idx.ext356, !dbg !5720
  store i8* %add.ptr357, i8** %next_out355, align 8, !dbg !5720
  %251 = load i32, i32* %l, align 4, !dbg !5721
  %conv358 = sext i32 %251 to i64, !dbg !5721
  %252 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5722
  %avail_out359 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %252, i32 0, i32 4, !dbg !5723
  %253 = load i64, i64* %avail_out359, align 8, !dbg !5724
  %sub360 = sub nsw i64 %253, %conv358, !dbg !5724
  store i64 %sub360, i64* %avail_out359, align 8, !dbg !5724
  %254 = load i32, i32* %l, align 4, !dbg !5725
  %conv361 = sext i32 %254 to i64, !dbg !5725
  %255 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5726
  %total_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %255, i32 0, i32 5, !dbg !5727
  %256 = load i64, i64* %total_out, align 8, !dbg !5728
  %add = add nsw i64 %256, %conv361, !dbg !5728
  store i64 %add, i64* %total_out, align 8, !dbg !5728
  %257 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5729
  %w_pos362 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %257, i32 0, i32 4, !dbg !5730
  %258 = load i32, i32* %w_pos362, align 8, !dbg !5730
  %259 = load i32, i32* %l, align 4, !dbg !5731
  %add363 = add nsw i32 %258, %259, !dbg !5732
  %260 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5733
  %w_mask = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %260, i32 0, i32 2, !dbg !5734
  %261 = load i32, i32* %w_mask, align 8, !dbg !5734
  %and364 = and i32 %add363, %261, !dbg !5735
  %262 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5736
  %w_pos365 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %262, i32 0, i32 4, !dbg !5737
  store i32 %and364, i32* %w_pos365, align 8, !dbg !5738
  %263 = load i32, i32* %l, align 4, !dbg !5739
  %conv366 = sext i32 %263 to i64, !dbg !5739
  %264 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5740
  %block_bytes_avail367 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %264, i32 0, i32 11, !dbg !5741
  %265 = load i64, i64* %block_bytes_avail367, align 8, !dbg !5742
  %sub368 = sub i64 %265, %conv366, !dbg !5742
  store i64 %sub368, i64* %block_bytes_avail367, align 8, !dbg !5742
  br label %while.cond301, !dbg !5743

while.end369:                                     ; preds = %while.cond301
  br label %sw.bb370, !dbg !5745

sw.bb370:                                         ; preds = %for.cond, %while.end369
  %266 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5747
  %block_size371 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %266, i32 0, i32 10, !dbg !5749
  %267 = load i64, i64* %block_size371, align 8, !dbg !5749
  %and372 = and i64 %267, 1, !dbg !5750
  %tobool373 = icmp ne i64 %and372, 0, !dbg !5750
  br i1 %tobool373, label %if.then374, label %if.end388, !dbg !5751

if.then374:                                       ; preds = %sw.bb370
  %268 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5752
  %avail_in375 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %268, i32 0, i32 1, !dbg !5755
  %269 = load i64, i64* %avail_in375, align 8, !dbg !5755
  %cmp376 = icmp sle i64 %269, 0, !dbg !5756
  br i1 %cmp376, label %if.then378, label %if.end383, !dbg !5757

if.then378:                                       ; preds = %if.then374
  %270 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5758
  %state379 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %270, i32 0, i32 0, !dbg !5760
  store i32 9, i32* %state379, align 8, !dbg !5761
  %271 = load i32, i32* %last.addr, align 4, !dbg !5762
  %tobool380 = icmp ne i32 %271, 0, !dbg !5762
  br i1 %tobool380, label %if.then381, label %if.end382, !dbg !5764

if.then381:                                       ; preds = %if.then378
  br label %failed, !dbg !5765

if.end382:                                        ; preds = %if.then378
  store i32 0, i32* %retval, align 4, !dbg !5766
  br label %return, !dbg !5766

if.end383:                                        ; preds = %if.then374
  %272 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5767
  %next_in384 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %272, i32 0, i32 0, !dbg !5768
  %273 = load i8*, i8** %next_in384, align 8, !dbg !5769
  %incdec.ptr385 = getelementptr inbounds i8, i8* %273, i32 1, !dbg !5769
  store i8* %incdec.ptr385, i8** %next_in384, align 8, !dbg !5769
  %274 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5770
  %avail_in386 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %274, i32 0, i32 1, !dbg !5771
  %275 = load i64, i64* %avail_in386, align 8, !dbg !5772
  %dec387 = add nsw i64 %275, -1, !dbg !5772
  store i64 %dec387, i64* %avail_in386, align 8, !dbg !5772
  br label %if.end388, !dbg !5773

if.end388:                                        ; preds = %if.end383, %sw.bb370
  %276 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5774
  %state389 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %276, i32 0, i32 0, !dbg !5775
  store i32 2, i32* %state389, align 8, !dbg !5776
  store i32 1, i32* %retval, align 4, !dbg !5777
  br label %return, !dbg !5777

sw.bb390:                                         ; preds = %for.cond
  %277 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5778
  %cache_avail391 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %277, i32 0, i32 1, !dbg !5778
  %278 = load i32, i32* %cache_avail391, align 8, !dbg !5778
  %279 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5778
  %at = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %279, i32 0, i32 22, !dbg !5778
  %len_size = getelementptr inbounds %struct.huffman, %struct.huffman* %at, i32 0, i32 0, !dbg !5778
  %280 = load i32, i32* %len_size, align 8, !dbg !5778
  %mul = mul nsw i32 3, %280, !dbg !5778
  %cmp392 = icmp sge i32 %278, %mul, !dbg !5778
  br i1 %cmp392, label %if.end409, label %lor.lhs.false394, !dbg !5778

lor.lhs.false394:                                 ; preds = %sw.bb390
  %281 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5780
  %282 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5780
  %call395 = call i32 @lzx_br_fillup(%struct.lzx_stream* %281, %struct.lzx_br* %282), !dbg !5780
  %tobool396 = icmp ne i32 %call395, 0, !dbg !5780
  br i1 %tobool396, label %if.end409, label %lor.lhs.false397, !dbg !5780

lor.lhs.false397:                                 ; preds = %lor.lhs.false394
  %283 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5782
  %cache_avail398 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %283, i32 0, i32 1, !dbg !5782
  %284 = load i32, i32* %cache_avail398, align 8, !dbg !5782
  %285 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5782
  %at399 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %285, i32 0, i32 22, !dbg !5782
  %len_size400 = getelementptr inbounds %struct.huffman, %struct.huffman* %at399, i32 0, i32 0, !dbg !5782
  %286 = load i32, i32* %len_size400, align 8, !dbg !5782
  %mul401 = mul nsw i32 3, %286, !dbg !5782
  %cmp402 = icmp sge i32 %284, %mul401, !dbg !5782
  br i1 %cmp402, label %if.end409, label %if.then404, !dbg !5784

if.then404:                                       ; preds = %lor.lhs.false397
  %287 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5785
  %state405 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %287, i32 0, i32 0, !dbg !5787
  store i32 10, i32* %state405, align 8, !dbg !5788
  %288 = load i32, i32* %last.addr, align 4, !dbg !5789
  %tobool406 = icmp ne i32 %288, 0, !dbg !5789
  br i1 %tobool406, label %if.then407, label %if.end408, !dbg !5791

if.then407:                                       ; preds = %if.then404
  br label %failed, !dbg !5792

if.end408:                                        ; preds = %if.then404
  store i32 0, i32* %retval, align 4, !dbg !5793
  br label %return, !dbg !5793

if.end409:                                        ; preds = %lor.lhs.false397, %lor.lhs.false394, %sw.bb390
  %289 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5794
  %at410 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %289, i32 0, i32 22, !dbg !5795
  %freq = getelementptr inbounds %struct.huffman, %struct.huffman* %at410, i32 0, i32 1, !dbg !5796
  %arraydecay411 = getelementptr inbounds [17 x i32], [17 x i32]* %freq, i32 0, i32 0, !dbg !5797
  %290 = bitcast i32* %arraydecay411 to i8*, !dbg !5797
  call void @llvm.memset.p0i8.i64(i8* %290, i8 0, i64 68, i32 4, i1 false), !dbg !5797
  store i32 0, i32* %i, align 4, !dbg !5798
  br label %for.cond412, !dbg !5800

for.cond412:                                      ; preds = %for.inc, %if.end409
  %291 = load i32, i32* %i, align 4, !dbg !5801
  %292 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5804
  %at413 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %292, i32 0, i32 22, !dbg !5805
  %len_size414 = getelementptr inbounds %struct.huffman, %struct.huffman* %at413, i32 0, i32 0, !dbg !5806
  %293 = load i32, i32* %len_size414, align 8, !dbg !5806
  %cmp415 = icmp slt i32 %291, %293, !dbg !5807
  br i1 %cmp415, label %for.body, label %for.end, !dbg !5808

for.body:                                         ; preds = %for.cond412
  %294 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5809
  %cache_buffer417 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %294, i32 0, i32 0, !dbg !5809
  %295 = load i64, i64* %cache_buffer417, align 8, !dbg !5809
  %296 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5809
  %cache_avail418 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %296, i32 0, i32 1, !dbg !5809
  %297 = load i32, i32* %cache_avail418, align 8, !dbg !5809
  %sub419 = sub nsw i32 %297, 3, !dbg !5809
  %sh_prom420 = zext i32 %sub419 to i64, !dbg !5809
  %shr421 = lshr i64 %295, %sh_prom420, !dbg !5809
  %conv422 = trunc i64 %shr421 to i32, !dbg !5809
  %298 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 3), align 4, !dbg !5809
  %and423 = and i32 %conv422, %298, !dbg !5809
  %conv424 = trunc i32 %and423 to i8, !dbg !5809
  %299 = load i32, i32* %i, align 4, !dbg !5811
  %idxprom425 = sext i32 %299 to i64, !dbg !5812
  %300 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5812
  %at426 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %300, i32 0, i32 22, !dbg !5813
  %bitlen = getelementptr inbounds %struct.huffman, %struct.huffman* %at426, i32 0, i32 2, !dbg !5814
  %301 = load i8*, i8** %bitlen, align 8, !dbg !5814
  %arrayidx427 = getelementptr inbounds i8, i8* %301, i64 %idxprom425, !dbg !5812
  store i8 %conv424, i8* %arrayidx427, align 1, !dbg !5815
  %302 = load i32, i32* %i, align 4, !dbg !5816
  %idxprom428 = sext i32 %302 to i64, !dbg !5817
  %303 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5817
  %at429 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %303, i32 0, i32 22, !dbg !5818
  %bitlen430 = getelementptr inbounds %struct.huffman, %struct.huffman* %at429, i32 0, i32 2, !dbg !5819
  %304 = load i8*, i8** %bitlen430, align 8, !dbg !5819
  %arrayidx431 = getelementptr inbounds i8, i8* %304, i64 %idxprom428, !dbg !5817
  %305 = load i8, i8* %arrayidx431, align 1, !dbg !5817
  %idxprom432 = zext i8 %305 to i64, !dbg !5820
  %306 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5820
  %at433 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %306, i32 0, i32 22, !dbg !5821
  %freq434 = getelementptr inbounds %struct.huffman, %struct.huffman* %at433, i32 0, i32 1, !dbg !5822
  %arrayidx435 = getelementptr inbounds [17 x i32], [17 x i32]* %freq434, i64 0, i64 %idxprom432, !dbg !5820
  %307 = load i32, i32* %arrayidx435, align 4, !dbg !5823
  %inc436 = add nsw i32 %307, 1, !dbg !5823
  store i32 %inc436, i32* %arrayidx435, align 4, !dbg !5823
  %308 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !5824
  %cache_avail437 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %308, i32 0, i32 1, !dbg !5824
  %309 = load i32, i32* %cache_avail437, align 8, !dbg !5824
  %sub438 = sub nsw i32 %309, 3, !dbg !5824
  store i32 %sub438, i32* %cache_avail437, align 8, !dbg !5824
  br label %for.inc, !dbg !5825

for.inc:                                          ; preds = %for.body
  %310 = load i32, i32* %i, align 4, !dbg !5826
  %inc439 = add nsw i32 %310, 1, !dbg !5826
  store i32 %inc439, i32* %i, align 4, !dbg !5826
  br label %for.cond412, !dbg !5828

for.end:                                          ; preds = %for.cond412
  %311 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5829
  %at440 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %311, i32 0, i32 22, !dbg !5831
  %call441 = call i32 @lzx_make_huffman_table(%struct.huffman* %at440), !dbg !5832
  %tobool442 = icmp ne i32 %call441, 0, !dbg !5832
  br i1 %tobool442, label %if.end444, label %if.then443, !dbg !5833

if.then443:                                       ; preds = %for.end
  br label %failed, !dbg !5834

if.end444:                                        ; preds = %for.end
  br label %sw.bb445, !dbg !5835

sw.bb445:                                         ; preds = %for.cond, %if.end444
  %312 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5837
  %loop = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %312, i32 0, i32 26, !dbg !5838
  store i32 0, i32* %loop, align 8, !dbg !5839
  br label %sw.bb446, !dbg !5837

sw.bb446:                                         ; preds = %for.cond, %sw.bb445
  %313 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5840
  %call447 = call i32 @lzx_read_pre_tree(%struct.lzx_stream* %313), !dbg !5842
  %tobool448 = icmp ne i32 %call447, 0, !dbg !5842
  br i1 %tobool448, label %if.end454, label %if.then449, !dbg !5843

if.then449:                                       ; preds = %sw.bb446
  %314 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5844
  %state450 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %314, i32 0, i32 0, !dbg !5846
  store i32 12, i32* %state450, align 8, !dbg !5847
  %315 = load i32, i32* %last.addr, align 4, !dbg !5848
  %tobool451 = icmp ne i32 %315, 0, !dbg !5848
  br i1 %tobool451, label %if.then452, label %if.end453, !dbg !5850

if.then452:                                       ; preds = %if.then449
  br label %failed, !dbg !5851

if.end453:                                        ; preds = %if.then449
  store i32 0, i32* %retval, align 4, !dbg !5852
  br label %return, !dbg !5852

if.end454:                                        ; preds = %sw.bb446
  %316 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5853
  %pt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %316, i32 0, i32 25, !dbg !5855
  %call455 = call i32 @lzx_make_huffman_table(%struct.huffman* %pt), !dbg !5856
  %tobool456 = icmp ne i32 %call455, 0, !dbg !5856
  br i1 %tobool456, label %if.end458, label %if.then457, !dbg !5857

if.then457:                                       ; preds = %if.end454
  br label %failed, !dbg !5858

if.end458:                                        ; preds = %if.end454
  %317 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5859
  %loop459 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %317, i32 0, i32 26, !dbg !5860
  store i32 0, i32* %loop459, align 8, !dbg !5861
  br label %sw.bb460, !dbg !5859

sw.bb460:                                         ; preds = %for.cond, %if.end458
  %318 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5862
  %319 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5863
  %mt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %319, i32 0, i32 24, !dbg !5864
  %call461 = call i32 @lzx_read_bitlen(%struct.lzx_stream* %318, %struct.huffman* %mt, i32 256), !dbg !5865
  store i32 %call461, i32* %r, align 4, !dbg !5866
  %320 = load i32, i32* %r, align 4, !dbg !5867
  %cmp462 = icmp slt i32 %320, 0, !dbg !5869
  br i1 %cmp462, label %if.then464, label %if.else465, !dbg !5870

if.then464:                                       ; preds = %sw.bb460
  br label %failed, !dbg !5871

if.else465:                                       ; preds = %sw.bb460
  %321 = load i32, i32* %r, align 4, !dbg !5872
  %tobool466 = icmp ne i32 %321, 0, !dbg !5872
  br i1 %tobool466, label %if.end472, label %if.then467, !dbg !5874

if.then467:                                       ; preds = %if.else465
  %322 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5875
  %state468 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %322, i32 0, i32 0, !dbg !5877
  store i32 13, i32* %state468, align 8, !dbg !5878
  %323 = load i32, i32* %last.addr, align 4, !dbg !5879
  %tobool469 = icmp ne i32 %323, 0, !dbg !5879
  br i1 %tobool469, label %if.then470, label %if.end471, !dbg !5881

if.then470:                                       ; preds = %if.then467
  br label %failed, !dbg !5882

if.end471:                                        ; preds = %if.then467
  store i32 0, i32* %retval, align 4, !dbg !5883
  br label %return, !dbg !5883

if.end472:                                        ; preds = %if.else465
  br label %if.end473

if.end473:                                        ; preds = %if.end472
  %324 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5884
  %loop474 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %324, i32 0, i32 26, !dbg !5885
  store i32 0, i32* %loop474, align 8, !dbg !5886
  br label %sw.bb475, !dbg !5884

sw.bb475:                                         ; preds = %for.cond, %if.end473
  %325 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5887
  %call476 = call i32 @lzx_read_pre_tree(%struct.lzx_stream* %325), !dbg !5889
  %tobool477 = icmp ne i32 %call476, 0, !dbg !5889
  br i1 %tobool477, label %if.end483, label %if.then478, !dbg !5890

if.then478:                                       ; preds = %sw.bb475
  %326 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5891
  %state479 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %326, i32 0, i32 0, !dbg !5893
  store i32 14, i32* %state479, align 8, !dbg !5894
  %327 = load i32, i32* %last.addr, align 4, !dbg !5895
  %tobool480 = icmp ne i32 %327, 0, !dbg !5895
  br i1 %tobool480, label %if.then481, label %if.end482, !dbg !5897

if.then481:                                       ; preds = %if.then478
  br label %failed, !dbg !5898

if.end482:                                        ; preds = %if.then478
  store i32 0, i32* %retval, align 4, !dbg !5899
  br label %return, !dbg !5899

if.end483:                                        ; preds = %sw.bb475
  %328 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5900
  %pt484 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %328, i32 0, i32 25, !dbg !5902
  %call485 = call i32 @lzx_make_huffman_table(%struct.huffman* %pt484), !dbg !5903
  %tobool486 = icmp ne i32 %call485, 0, !dbg !5903
  br i1 %tobool486, label %if.end488, label %if.then487, !dbg !5904

if.then487:                                       ; preds = %if.end483
  br label %failed, !dbg !5905

if.end488:                                        ; preds = %if.end483
  %329 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5906
  %loop489 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %329, i32 0, i32 26, !dbg !5907
  store i32 256, i32* %loop489, align 8, !dbg !5908
  br label %sw.bb490, !dbg !5906

sw.bb490:                                         ; preds = %for.cond, %if.end488
  %330 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5909
  %331 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5910
  %mt491 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %331, i32 0, i32 24, !dbg !5911
  %call492 = call i32 @lzx_read_bitlen(%struct.lzx_stream* %330, %struct.huffman* %mt491, i32 -1), !dbg !5912
  store i32 %call492, i32* %r, align 4, !dbg !5913
  %332 = load i32, i32* %r, align 4, !dbg !5914
  %cmp493 = icmp slt i32 %332, 0, !dbg !5916
  br i1 %cmp493, label %if.then495, label %if.else496, !dbg !5917

if.then495:                                       ; preds = %sw.bb490
  br label %failed, !dbg !5918

if.else496:                                       ; preds = %sw.bb490
  %333 = load i32, i32* %r, align 4, !dbg !5919
  %tobool497 = icmp ne i32 %333, 0, !dbg !5919
  br i1 %tobool497, label %if.end503, label %if.then498, !dbg !5921

if.then498:                                       ; preds = %if.else496
  %334 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5922
  %state499 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %334, i32 0, i32 0, !dbg !5924
  store i32 15, i32* %state499, align 8, !dbg !5925
  %335 = load i32, i32* %last.addr, align 4, !dbg !5926
  %tobool500 = icmp ne i32 %335, 0, !dbg !5926
  br i1 %tobool500, label %if.then501, label %if.end502, !dbg !5928

if.then501:                                       ; preds = %if.then498
  br label %failed, !dbg !5929

if.end502:                                        ; preds = %if.then498
  store i32 0, i32* %retval, align 4, !dbg !5930
  br label %return, !dbg !5930

if.end503:                                        ; preds = %if.else496
  br label %if.end504

if.end504:                                        ; preds = %if.end503
  %336 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5931
  %mt505 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %336, i32 0, i32 24, !dbg !5933
  %call506 = call i32 @lzx_make_huffman_table(%struct.huffman* %mt505), !dbg !5934
  %tobool507 = icmp ne i32 %call506, 0, !dbg !5934
  br i1 %tobool507, label %if.end509, label %if.then508, !dbg !5935

if.then508:                                       ; preds = %if.end504
  br label %failed, !dbg !5936

if.end509:                                        ; preds = %if.end504
  %337 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5937
  %loop510 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %337, i32 0, i32 26, !dbg !5938
  store i32 0, i32* %loop510, align 8, !dbg !5939
  br label %sw.bb511, !dbg !5937

sw.bb511:                                         ; preds = %for.cond, %if.end509
  %338 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5940
  %call512 = call i32 @lzx_read_pre_tree(%struct.lzx_stream* %338), !dbg !5942
  %tobool513 = icmp ne i32 %call512, 0, !dbg !5942
  br i1 %tobool513, label %if.end519, label %if.then514, !dbg !5943

if.then514:                                       ; preds = %sw.bb511
  %339 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5944
  %state515 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %339, i32 0, i32 0, !dbg !5946
  store i32 16, i32* %state515, align 8, !dbg !5947
  %340 = load i32, i32* %last.addr, align 4, !dbg !5948
  %tobool516 = icmp ne i32 %340, 0, !dbg !5948
  br i1 %tobool516, label %if.then517, label %if.end518, !dbg !5950

if.then517:                                       ; preds = %if.then514
  br label %failed, !dbg !5951

if.end518:                                        ; preds = %if.then514
  store i32 0, i32* %retval, align 4, !dbg !5952
  br label %return, !dbg !5952

if.end519:                                        ; preds = %sw.bb511
  %341 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5953
  %pt520 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %341, i32 0, i32 25, !dbg !5955
  %call521 = call i32 @lzx_make_huffman_table(%struct.huffman* %pt520), !dbg !5956
  %tobool522 = icmp ne i32 %call521, 0, !dbg !5956
  br i1 %tobool522, label %if.end524, label %if.then523, !dbg !5957

if.then523:                                       ; preds = %if.end519
  br label %failed, !dbg !5958

if.end524:                                        ; preds = %if.end519
  %342 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5959
  %loop525 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %342, i32 0, i32 26, !dbg !5960
  store i32 0, i32* %loop525, align 8, !dbg !5961
  br label %sw.bb526, !dbg !5959

sw.bb526:                                         ; preds = %for.cond, %if.end524
  %343 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !5962
  %344 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5963
  %lt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %344, i32 0, i32 23, !dbg !5964
  %call527 = call i32 @lzx_read_bitlen(%struct.lzx_stream* %343, %struct.huffman* %lt, i32 -1), !dbg !5965
  store i32 %call527, i32* %r, align 4, !dbg !5966
  %345 = load i32, i32* %r, align 4, !dbg !5967
  %cmp528 = icmp slt i32 %345, 0, !dbg !5969
  br i1 %cmp528, label %if.then530, label %if.else531, !dbg !5970

if.then530:                                       ; preds = %sw.bb526
  br label %failed, !dbg !5971

if.else531:                                       ; preds = %sw.bb526
  %346 = load i32, i32* %r, align 4, !dbg !5972
  %tobool532 = icmp ne i32 %346, 0, !dbg !5972
  br i1 %tobool532, label %if.end538, label %if.then533, !dbg !5974

if.then533:                                       ; preds = %if.else531
  %347 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5975
  %state534 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %347, i32 0, i32 0, !dbg !5977
  store i32 17, i32* %state534, align 8, !dbg !5978
  %348 = load i32, i32* %last.addr, align 4, !dbg !5979
  %tobool535 = icmp ne i32 %348, 0, !dbg !5979
  br i1 %tobool535, label %if.then536, label %if.end537, !dbg !5981

if.then536:                                       ; preds = %if.then533
  br label %failed, !dbg !5982

if.end537:                                        ; preds = %if.then533
  store i32 0, i32* %retval, align 4, !dbg !5983
  br label %return, !dbg !5983

if.end538:                                        ; preds = %if.else531
  br label %if.end539

if.end539:                                        ; preds = %if.end538
  %349 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5984
  %lt540 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %349, i32 0, i32 23, !dbg !5986
  %call541 = call i32 @lzx_make_huffman_table(%struct.huffman* %lt540), !dbg !5987
  %tobool542 = icmp ne i32 %call541, 0, !dbg !5987
  br i1 %tobool542, label %if.end544, label %if.then543, !dbg !5988

if.then543:                                       ; preds = %if.end539
  br label %failed, !dbg !5989

if.end544:                                        ; preds = %if.end539
  %350 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5990
  %state545 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %350, i32 0, i32 0, !dbg !5991
  store i32 18, i32* %state545, align 8, !dbg !5992
  store i32 100, i32* %retval, align 4, !dbg !5993
  br label %return, !dbg !5993

sw.epilog546:                                     ; preds = %for.cond, %if.end144
  br label %for.cond, !dbg !5994

failed:                                           ; preds = %if.then543, %if.then536, %if.then530, %if.then523, %if.then517, %if.then508, %if.then501, %if.then495, %if.then487, %if.then481, %if.then470, %if.then464, %if.then457, %if.then452, %if.then443, %if.then407, %if.then381, %if.then314, %if.then291, %if.then277, %if.then263, %if.then243, %if.then170, %if.then129, %if.then99, %sw.default, %if.then69, %if.then31, %if.then8
  %351 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !5996
  %error = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %351, i32 0, i32 27, !dbg !5997
  store i32 -25, i32* %error, align 4, !dbg !5998
  store i32 -25, i32* %retval, align 4, !dbg !5999
  br label %return, !dbg !5999

return:                                           ; preds = %failed, %if.end544, %if.end537, %if.end518, %if.end502, %if.end482, %if.end471, %if.end453, %if.end408, %if.end388, %if.end382, %if.end315, %if.then307, %if.end244, %if.end171, %if.end100, %if.end70, %if.end32, %if.end
  %352 = load i32, i32* %retval, align 4, !dbg !6000
  ret i32 %352, !dbg !6000
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_decode_blocks(%struct.lzx_stream* %strm, i32 %last) #0 !dbg !610 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %last.addr = alloca i32, align 4
  %ds = alloca %struct.lzx_dec*, align 8
  %bre = alloca %struct.lzx_br, align 8
  %at = alloca %struct.huffman*, align 8
  %lt = alloca %struct.huffman*, align 8
  %mt = alloca %struct.huffman*, align 8
  %pos_tbl = alloca %struct.lzx_pos_tbl*, align 8
  %noutp = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %w_buff = alloca i8*, align 8
  %at_bitlen = alloca i8*, align 8
  %lt_bitlen = alloca i8*, align 8
  %mt_bitlen = alloca i8*, align 8
  %block_bytes_avail = alloca i64, align 8
  %at_max_bits = alloca i32, align 4
  %lt_max_bits = alloca i32, align 4
  %mt_max_bits = alloca i32, align 4
  %c = alloca i32, align 4
  %copy_len = alloca i32, align 4
  %copy_pos = alloca i32, align 4
  %w_pos = alloca i32, align 4
  %w_mask = alloca i32, align 4
  %w_size = alloca i32, align 4
  %length_header = alloca i32, align 4
  %offset_bits = alloca i32, align 4
  %position_slot = alloca i32, align 4
  %r0 = alloca i32, align 4
  %r1 = alloca i32, align 4
  %r2 = alloca i32, align 4
  %state = alloca i32, align 4
  %block_type = alloca i8, align 1
  %offbits = alloca i32, align 4
  %s = alloca i8*, align 8
  %l = alloca i32, align 4
  %d = alloca i8*, align 8
  %li = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !6001, metadata !638), !dbg !6002
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !6003, metadata !638), !dbg !6004
  call void @llvm.dbg.declare(metadata %struct.lzx_dec** %ds, metadata !6005, metadata !638), !dbg !6006
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6007
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !6008
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !6008
  store %struct.lzx_dec* %1, %struct.lzx_dec** %ds, align 8, !dbg !6006
  call void @llvm.dbg.declare(metadata %struct.lzx_br* %bre, metadata !6009, metadata !638), !dbg !6010
  %2 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6011
  %br = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %2, i32 0, i32 21, !dbg !6012
  %3 = bitcast %struct.lzx_br* %bre to i8*, !dbg !6012
  %4 = bitcast %struct.lzx_br* %br to i8*, !dbg !6012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 16, i32 8, i1 false), !dbg !6012
  call void @llvm.dbg.declare(metadata %struct.huffman** %at, metadata !6013, metadata !638), !dbg !6014
  %5 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6015
  %at2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %5, i32 0, i32 22, !dbg !6016
  store %struct.huffman* %at2, %struct.huffman** %at, align 8, !dbg !6014
  call void @llvm.dbg.declare(metadata %struct.huffman** %lt, metadata !6017, metadata !638), !dbg !6018
  %6 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6019
  %lt3 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %6, i32 0, i32 23, !dbg !6020
  store %struct.huffman* %lt3, %struct.huffman** %lt, align 8, !dbg !6018
  call void @llvm.dbg.declare(metadata %struct.huffman** %mt, metadata !6021, metadata !638), !dbg !6022
  %7 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6023
  %mt4 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %7, i32 0, i32 24, !dbg !6024
  store %struct.huffman* %mt4, %struct.huffman** %mt, align 8, !dbg !6022
  call void @llvm.dbg.declare(metadata %struct.lzx_pos_tbl** %pos_tbl, metadata !6025, metadata !638), !dbg !6028
  %8 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6029
  %pos_tbl5 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %8, i32 0, i32 20, !dbg !6030
  %9 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl5, align 8, !dbg !6030
  store %struct.lzx_pos_tbl* %9, %struct.lzx_pos_tbl** %pos_tbl, align 8, !dbg !6028
  call void @llvm.dbg.declare(metadata i8** %noutp, metadata !6031, metadata !638), !dbg !6032
  %10 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6033
  %next_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %10, i32 0, i32 3, !dbg !6034
  %11 = load i8*, i8** %next_out, align 8, !dbg !6034
  store i8* %11, i8** %noutp, align 8, !dbg !6032
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !6035, metadata !638), !dbg !6036
  %12 = load i8*, i8** %noutp, align 8, !dbg !6037
  %13 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6038
  %avail_out = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %13, i32 0, i32 4, !dbg !6039
  %14 = load i64, i64* %avail_out, align 8, !dbg !6039
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %14, !dbg !6040
  store i8* %add.ptr, i8** %endp, align 8, !dbg !6036
  call void @llvm.dbg.declare(metadata i8** %w_buff, metadata !6041, metadata !638), !dbg !6042
  %15 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6043
  %w_buff6 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %15, i32 0, i32 3, !dbg !6044
  %16 = load i8*, i8** %w_buff6, align 8, !dbg !6044
  store i8* %16, i8** %w_buff, align 8, !dbg !6042
  call void @llvm.dbg.declare(metadata i8** %at_bitlen, metadata !6045, metadata !638), !dbg !6046
  %17 = load %struct.huffman*, %struct.huffman** %at, align 8, !dbg !6047
  %bitlen = getelementptr inbounds %struct.huffman, %struct.huffman* %17, i32 0, i32 2, !dbg !6048
  %18 = load i8*, i8** %bitlen, align 8, !dbg !6048
  store i8* %18, i8** %at_bitlen, align 8, !dbg !6046
  call void @llvm.dbg.declare(metadata i8** %lt_bitlen, metadata !6049, metadata !638), !dbg !6050
  %19 = load %struct.huffman*, %struct.huffman** %lt, align 8, !dbg !6051
  %bitlen7 = getelementptr inbounds %struct.huffman, %struct.huffman* %19, i32 0, i32 2, !dbg !6052
  %20 = load i8*, i8** %bitlen7, align 8, !dbg !6052
  store i8* %20, i8** %lt_bitlen, align 8, !dbg !6050
  call void @llvm.dbg.declare(metadata i8** %mt_bitlen, metadata !6053, metadata !638), !dbg !6054
  %21 = load %struct.huffman*, %struct.huffman** %mt, align 8, !dbg !6055
  %bitlen8 = getelementptr inbounds %struct.huffman, %struct.huffman* %21, i32 0, i32 2, !dbg !6056
  %22 = load i8*, i8** %bitlen8, align 8, !dbg !6056
  store i8* %22, i8** %mt_bitlen, align 8, !dbg !6054
  call void @llvm.dbg.declare(metadata i64* %block_bytes_avail, metadata !6057, metadata !638), !dbg !6058
  %23 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6059
  %block_bytes_avail9 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %23, i32 0, i32 11, !dbg !6060
  %24 = load i64, i64* %block_bytes_avail9, align 8, !dbg !6060
  store i64 %24, i64* %block_bytes_avail, align 8, !dbg !6058
  call void @llvm.dbg.declare(metadata i32* %at_max_bits, metadata !6061, metadata !638), !dbg !6062
  %25 = load %struct.huffman*, %struct.huffman** %at, align 8, !dbg !6063
  %max_bits = getelementptr inbounds %struct.huffman, %struct.huffman* %25, i32 0, i32 3, !dbg !6064
  %26 = load i32, i32* %max_bits, align 8, !dbg !6064
  store i32 %26, i32* %at_max_bits, align 4, !dbg !6062
  call void @llvm.dbg.declare(metadata i32* %lt_max_bits, metadata !6065, metadata !638), !dbg !6066
  %27 = load %struct.huffman*, %struct.huffman** %lt, align 8, !dbg !6067
  %max_bits10 = getelementptr inbounds %struct.huffman, %struct.huffman* %27, i32 0, i32 3, !dbg !6068
  %28 = load i32, i32* %max_bits10, align 8, !dbg !6068
  store i32 %28, i32* %lt_max_bits, align 4, !dbg !6066
  call void @llvm.dbg.declare(metadata i32* %mt_max_bits, metadata !6069, metadata !638), !dbg !6070
  %29 = load %struct.huffman*, %struct.huffman** %mt, align 8, !dbg !6071
  %max_bits11 = getelementptr inbounds %struct.huffman, %struct.huffman* %29, i32 0, i32 3, !dbg !6072
  %30 = load i32, i32* %max_bits11, align 8, !dbg !6072
  store i32 %30, i32* %mt_max_bits, align 4, !dbg !6070
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6073, metadata !638), !dbg !6074
  call void @llvm.dbg.declare(metadata i32* %copy_len, metadata !6075, metadata !638), !dbg !6076
  %31 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6077
  %copy_len12 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %31, i32 0, i32 6, !dbg !6078
  %32 = load i32, i32* %copy_len12, align 8, !dbg !6078
  store i32 %32, i32* %copy_len, align 4, !dbg !6076
  call void @llvm.dbg.declare(metadata i32* %copy_pos, metadata !6079, metadata !638), !dbg !6080
  %33 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6081
  %copy_pos13 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %33, i32 0, i32 5, !dbg !6082
  %34 = load i32, i32* %copy_pos13, align 4, !dbg !6082
  store i32 %34, i32* %copy_pos, align 4, !dbg !6080
  call void @llvm.dbg.declare(metadata i32* %w_pos, metadata !6083, metadata !638), !dbg !6084
  %35 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6085
  %w_pos14 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %35, i32 0, i32 4, !dbg !6086
  %36 = load i32, i32* %w_pos14, align 8, !dbg !6086
  store i32 %36, i32* %w_pos, align 4, !dbg !6084
  call void @llvm.dbg.declare(metadata i32* %w_mask, metadata !6087, metadata !638), !dbg !6088
  %37 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6089
  %w_mask15 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %37, i32 0, i32 2, !dbg !6090
  %38 = load i32, i32* %w_mask15, align 8, !dbg !6090
  store i32 %38, i32* %w_mask, align 4, !dbg !6088
  call void @llvm.dbg.declare(metadata i32* %w_size, metadata !6091, metadata !638), !dbg !6092
  %39 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6093
  %w_size16 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %39, i32 0, i32 1, !dbg !6094
  %40 = load i32, i32* %w_size16, align 4, !dbg !6094
  store i32 %40, i32* %w_size, align 4, !dbg !6092
  call void @llvm.dbg.declare(metadata i32* %length_header, metadata !6095, metadata !638), !dbg !6096
  %41 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6097
  %length_header17 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %41, i32 0, i32 17, !dbg !6098
  %42 = load i32, i32* %length_header17, align 4, !dbg !6098
  store i32 %42, i32* %length_header, align 4, !dbg !6096
  call void @llvm.dbg.declare(metadata i32* %offset_bits, metadata !6099, metadata !638), !dbg !6100
  %43 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6101
  %offset_bits18 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %43, i32 0, i32 19, !dbg !6102
  %44 = load i32, i32* %offset_bits18, align 4, !dbg !6102
  store i32 %44, i32* %offset_bits, align 4, !dbg !6100
  call void @llvm.dbg.declare(metadata i32* %position_slot, metadata !6103, metadata !638), !dbg !6104
  %45 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6105
  %position_slot19 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %45, i32 0, i32 18, !dbg !6106
  %46 = load i32, i32* %position_slot19, align 8, !dbg !6106
  store i32 %46, i32* %position_slot, align 4, !dbg !6104
  call void @llvm.dbg.declare(metadata i32* %r0, metadata !6107, metadata !638), !dbg !6108
  %47 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6109
  %r020 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %47, i32 0, i32 12, !dbg !6110
  %48 = load i32, i32* %r020, align 8, !dbg !6110
  store i32 %48, i32* %r0, align 4, !dbg !6108
  call void @llvm.dbg.declare(metadata i32* %r1, metadata !6111, metadata !638), !dbg !6112
  %49 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6113
  %r121 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %49, i32 0, i32 13, !dbg !6114
  %50 = load i32, i32* %r121, align 4, !dbg !6114
  store i32 %50, i32* %r1, align 4, !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %r2, metadata !6115, metadata !638), !dbg !6116
  %51 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6117
  %r222 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %51, i32 0, i32 14, !dbg !6118
  %52 = load i32, i32* %r222, align 8, !dbg !6118
  store i32 %52, i32* %r2, align 4, !dbg !6116
  call void @llvm.dbg.declare(metadata i32* %state, metadata !6119, metadata !638), !dbg !6120
  %53 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6121
  %state23 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %53, i32 0, i32 0, !dbg !6122
  %54 = load i32, i32* %state23, align 8, !dbg !6122
  store i32 %54, i32* %state, align 4, !dbg !6120
  call void @llvm.dbg.declare(metadata i8* %block_type, metadata !6123, metadata !638), !dbg !6124
  %55 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6125
  %block_type24 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %55, i32 0, i32 9, !dbg !6126
  %56 = load i8, i8* %block_type24, align 1, !dbg !6126
  store i8 %56, i8* %block_type, align 1, !dbg !6124
  br label %for.cond, !dbg !6127

for.cond:                                         ; preds = %sw.epilog361, %sw.bb155, %sw.bb154, %sw.bb153, %entry
  %57 = load i32, i32* %state, align 4, !dbg !6128
  switch i32 %57, label %sw.epilog361 [
    i32 18, label %sw.bb
    i32 19, label %sw.bb88
    i32 20, label %sw.bb158
    i32 21, label %sw.bb281
    i32 22, label %sw.bb284
  ], !dbg !6132

sw.bb:                                            ; preds = %for.cond
  br label %for.cond25, !dbg !6133

for.cond25:                                       ; preds = %if.end79, %sw.bb
  %58 = load i64, i64* %block_bytes_avail, align 8, !dbg !6135
  %cmp = icmp eq i64 %58, 0, !dbg !6140
  br i1 %cmp, label %if.then, label %if.end, !dbg !6141

if.then:                                          ; preds = %for.cond25
  %59 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6142
  %state26 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %59, i32 0, i32 0, !dbg !6144
  store i32 2, i32* %state26, align 8, !dbg !6145
  %60 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6146
  %br27 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %60, i32 0, i32 21, !dbg !6147
  %61 = bitcast %struct.lzx_br* %br27 to i8*, !dbg !6148
  %62 = bitcast %struct.lzx_br* %bre to i8*, !dbg !6148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 16, i32 8, i1 false), !dbg !6148
  %63 = load i64, i64* %block_bytes_avail, align 8, !dbg !6149
  %64 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6150
  %block_bytes_avail28 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %64, i32 0, i32 11, !dbg !6151
  store i64 %63, i64* %block_bytes_avail28, align 8, !dbg !6152
  %65 = load i32, i32* %copy_len, align 4, !dbg !6153
  %66 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6154
  %copy_len29 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %66, i32 0, i32 6, !dbg !6155
  store i32 %65, i32* %copy_len29, align 8, !dbg !6156
  %67 = load i32, i32* %copy_pos, align 4, !dbg !6157
  %68 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6158
  %copy_pos30 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %68, i32 0, i32 5, !dbg !6159
  store i32 %67, i32* %copy_pos30, align 4, !dbg !6160
  %69 = load i32, i32* %length_header, align 4, !dbg !6161
  %70 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6162
  %length_header31 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %70, i32 0, i32 17, !dbg !6163
  store i32 %69, i32* %length_header31, align 4, !dbg !6164
  %71 = load i32, i32* %position_slot, align 4, !dbg !6165
  %72 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6166
  %position_slot32 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %72, i32 0, i32 18, !dbg !6167
  store i32 %71, i32* %position_slot32, align 8, !dbg !6168
  %73 = load i32, i32* %r0, align 4, !dbg !6169
  %74 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6170
  %r033 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %74, i32 0, i32 12, !dbg !6171
  store i32 %73, i32* %r033, align 8, !dbg !6172
  %75 = load i32, i32* %r1, align 4, !dbg !6173
  %76 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6174
  %r134 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %76, i32 0, i32 13, !dbg !6175
  store i32 %75, i32* %r134, align 4, !dbg !6176
  %77 = load i32, i32* %r2, align 4, !dbg !6177
  %78 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6178
  %r235 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %78, i32 0, i32 14, !dbg !6179
  store i32 %77, i32* %r235, align 8, !dbg !6180
  %79 = load i32, i32* %w_pos, align 4, !dbg !6181
  %80 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6182
  %w_pos36 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %80, i32 0, i32 4, !dbg !6183
  store i32 %79, i32* %w_pos36, align 8, !dbg !6184
  %81 = load i8*, i8** %endp, align 8, !dbg !6185
  %82 = load i8*, i8** %noutp, align 8, !dbg !6186
  %sub.ptr.lhs.cast = ptrtoint i8* %81 to i64, !dbg !6187
  %sub.ptr.rhs.cast = ptrtoint i8* %82 to i64, !dbg !6187
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6187
  %83 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6188
  %avail_out37 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %83, i32 0, i32 4, !dbg !6189
  store i64 %sub.ptr.sub, i64* %avail_out37, align 8, !dbg !6190
  store i32 1, i32* %retval, align 4, !dbg !6191
  br label %return, !dbg !6191

if.end:                                           ; preds = %for.cond25
  %84 = load i8*, i8** %noutp, align 8, !dbg !6192
  %85 = load i8*, i8** %endp, align 8, !dbg !6194
  %cmp38 = icmp uge i8* %84, %85, !dbg !6195
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !6196

if.then39:                                        ; preds = %if.end
  br label %next_data, !dbg !6197

if.end40:                                         ; preds = %if.end
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6198
  %86 = load i32, i32* %cache_avail, align 8, !dbg !6198
  %87 = load i32, i32* %mt_max_bits, align 4, !dbg !6198
  %cmp41 = icmp sge i32 %86, %87, !dbg !6198
  br i1 %cmp41, label %if.else, label %lor.lhs.false, !dbg !6198

lor.lhs.false:                                    ; preds = %if.end40
  %88 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6200
  %call = call i32 @lzx_br_fillup(%struct.lzx_stream* %88, %struct.lzx_br* %bre), !dbg !6200
  %tobool = icmp ne i32 %call, 0, !dbg !6200
  br i1 %tobool, label %if.else, label %lor.lhs.false42, !dbg !6200

lor.lhs.false42:                                  ; preds = %lor.lhs.false
  %cache_avail43 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6202
  %89 = load i32, i32* %cache_avail43, align 8, !dbg !6202
  %90 = load i32, i32* %mt_max_bits, align 4, !dbg !6202
  %cmp44 = icmp sge i32 %89, %90, !dbg !6202
  br i1 %cmp44, label %if.else, label %if.then45, !dbg !6204

if.then45:                                        ; preds = %lor.lhs.false42
  %91 = load i32, i32* %last.addr, align 4, !dbg !6205
  %tobool46 = icmp ne i32 %91, 0, !dbg !6205
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !6208

if.then47:                                        ; preds = %if.then45
  br label %next_data, !dbg !6209

if.end48:                                         ; preds = %if.then45
  %92 = load %struct.huffman*, %struct.huffman** %mt, align 8, !dbg !6210
  %cache_buffer = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6211
  %93 = load i64, i64* %cache_buffer, align 8, !dbg !6211
  %94 = load i32, i32* %mt_max_bits, align 4, !dbg !6211
  %cache_avail49 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6211
  %95 = load i32, i32* %cache_avail49, align 8, !dbg !6211
  %sub = sub nsw i32 %94, %95, !dbg !6211
  %sh_prom = zext i32 %sub to i64, !dbg !6211
  %shl = shl i64 %93, %sh_prom, !dbg !6211
  %conv = trunc i64 %shl to i32, !dbg !6211
  %96 = load i32, i32* %mt_max_bits, align 4, !dbg !6211
  %idxprom = sext i32 %96 to i64, !dbg !6211
  %arrayidx = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom, !dbg !6211
  %97 = load i32, i32* %arrayidx, align 4, !dbg !6211
  %and = and i32 %conv, %97, !dbg !6211
  %call50 = call i32 @lzx_decode_huffman(%struct.huffman* %92, i32 %and), !dbg !6212
  store i32 %call50, i32* %c, align 4, !dbg !6213
  %98 = load i32, i32* %c, align 4, !dbg !6214
  %idxprom51 = sext i32 %98 to i64, !dbg !6214
  %99 = load i8*, i8** %mt_bitlen, align 8, !dbg !6214
  %arrayidx52 = getelementptr inbounds i8, i8* %99, i64 %idxprom51, !dbg !6214
  %100 = load i8, i8* %arrayidx52, align 1, !dbg !6214
  %conv53 = zext i8 %100 to i32, !dbg !6214
  %cache_avail54 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6214
  %101 = load i32, i32* %cache_avail54, align 8, !dbg !6214
  %sub55 = sub nsw i32 %101, %conv53, !dbg !6214
  store i32 %sub55, i32* %cache_avail54, align 8, !dbg !6214
  %cache_avail56 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6215
  %102 = load i32, i32* %cache_avail56, align 8, !dbg !6215
  %cmp57 = icmp sge i32 %102, 0, !dbg !6215
  br i1 %cmp57, label %if.end60, label %if.then59, !dbg !6217

if.then59:                                        ; preds = %if.end48
  br label %failed, !dbg !6218

if.end60:                                         ; preds = %if.end48
  br label %if.end75, !dbg !6219

if.else:                                          ; preds = %lor.lhs.false42, %lor.lhs.false, %if.end40
  %103 = load %struct.huffman*, %struct.huffman** %mt, align 8, !dbg !6220
  %cache_buffer61 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6222
  %104 = load i64, i64* %cache_buffer61, align 8, !dbg !6222
  %cache_avail62 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6222
  %105 = load i32, i32* %cache_avail62, align 8, !dbg !6222
  %106 = load i32, i32* %mt_max_bits, align 4, !dbg !6222
  %sub63 = sub nsw i32 %105, %106, !dbg !6222
  %sh_prom64 = zext i32 %sub63 to i64, !dbg !6222
  %shr = lshr i64 %104, %sh_prom64, !dbg !6222
  %conv65 = trunc i64 %shr to i32, !dbg !6222
  %107 = load i32, i32* %mt_max_bits, align 4, !dbg !6222
  %idxprom66 = sext i32 %107 to i64, !dbg !6222
  %arrayidx67 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom66, !dbg !6222
  %108 = load i32, i32* %arrayidx67, align 4, !dbg !6222
  %and68 = and i32 %conv65, %108, !dbg !6222
  %call69 = call i32 @lzx_decode_huffman(%struct.huffman* %103, i32 %and68), !dbg !6223
  store i32 %call69, i32* %c, align 4, !dbg !6224
  %109 = load i32, i32* %c, align 4, !dbg !6225
  %idxprom70 = sext i32 %109 to i64, !dbg !6225
  %110 = load i8*, i8** %mt_bitlen, align 8, !dbg !6225
  %arrayidx71 = getelementptr inbounds i8, i8* %110, i64 %idxprom70, !dbg !6225
  %111 = load i8, i8* %arrayidx71, align 1, !dbg !6225
  %conv72 = zext i8 %111 to i32, !dbg !6225
  %cache_avail73 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6225
  %112 = load i32, i32* %cache_avail73, align 8, !dbg !6225
  %sub74 = sub nsw i32 %112, %conv72, !dbg !6225
  store i32 %sub74, i32* %cache_avail73, align 8, !dbg !6225
  br label %if.end75

if.end75:                                         ; preds = %if.else, %if.end60
  %113 = load i32, i32* %c, align 4, !dbg !6226
  %cmp76 = icmp sgt i32 %113, 255, !dbg !6228
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !6229

if.then78:                                        ; preds = %if.end75
  br label %for.end, !dbg !6230

if.end79:                                         ; preds = %if.end75
  %114 = load i32, i32* %c, align 4, !dbg !6231
  %conv80 = trunc i32 %114 to i8, !dbg !6231
  %115 = load i32, i32* %w_pos, align 4, !dbg !6232
  %idxprom81 = sext i32 %115 to i64, !dbg !6233
  %116 = load i8*, i8** %w_buff, align 8, !dbg !6233
  %arrayidx82 = getelementptr inbounds i8, i8* %116, i64 %idxprom81, !dbg !6233
  store i8 %conv80, i8* %arrayidx82, align 1, !dbg !6234
  %117 = load i32, i32* %w_pos, align 4, !dbg !6235
  %add = add nsw i32 %117, 1, !dbg !6236
  %118 = load i32, i32* %w_mask, align 4, !dbg !6237
  %and83 = and i32 %add, %118, !dbg !6238
  store i32 %and83, i32* %w_pos, align 4, !dbg !6239
  %119 = load i32, i32* %c, align 4, !dbg !6240
  %conv84 = trunc i32 %119 to i8, !dbg !6240
  %120 = load i8*, i8** %noutp, align 8, !dbg !6241
  %incdec.ptr = getelementptr inbounds i8, i8* %120, i32 1, !dbg !6241
  store i8* %incdec.ptr, i8** %noutp, align 8, !dbg !6241
  store i8 %conv84, i8* %120, align 1, !dbg !6242
  %121 = load i64, i64* %block_bytes_avail, align 8, !dbg !6243
  %dec = add i64 %121, -1, !dbg !6243
  store i64 %dec, i64* %block_bytes_avail, align 8, !dbg !6243
  br label %for.cond25, !dbg !6244

for.end:                                          ; preds = %if.then78
  %122 = load i32, i32* %c, align 4, !dbg !6246
  %sub85 = sub nsw i32 %122, 256, !dbg !6246
  store i32 %sub85, i32* %c, align 4, !dbg !6246
  %123 = load i32, i32* %c, align 4, !dbg !6247
  %and86 = and i32 %123, 7, !dbg !6248
  store i32 %and86, i32* %length_header, align 4, !dbg !6249
  %124 = load i32, i32* %c, align 4, !dbg !6250
  %shr87 = ashr i32 %124, 3, !dbg !6251
  store i32 %shr87, i32* %position_slot, align 4, !dbg !6252
  br label %sw.bb88, !dbg !6253

sw.bb88:                                          ; preds = %for.cond, %for.end
  %125 = load i32, i32* %length_header, align 4, !dbg !6254
  %cmp89 = icmp eq i32 %125, 7, !dbg !6256
  br i1 %cmp89, label %if.then91, label %if.else145, !dbg !6257

if.then91:                                        ; preds = %sw.bb88
  %cache_avail92 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6258
  %126 = load i32, i32* %cache_avail92, align 8, !dbg !6258
  %127 = load i32, i32* %lt_max_bits, align 4, !dbg !6258
  %cmp93 = icmp sge i32 %126, %127, !dbg !6258
  br i1 %cmp93, label %if.else126, label %lor.lhs.false95, !dbg !6258

lor.lhs.false95:                                  ; preds = %if.then91
  %128 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6261
  %call96 = call i32 @lzx_br_fillup(%struct.lzx_stream* %128, %struct.lzx_br* %bre), !dbg !6261
  %tobool97 = icmp ne i32 %call96, 0, !dbg !6261
  br i1 %tobool97, label %if.else126, label %lor.lhs.false98, !dbg !6261

lor.lhs.false98:                                  ; preds = %lor.lhs.false95
  %cache_avail99 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6263
  %129 = load i32, i32* %cache_avail99, align 8, !dbg !6263
  %130 = load i32, i32* %lt_max_bits, align 4, !dbg !6263
  %cmp100 = icmp sge i32 %129, %130, !dbg !6263
  br i1 %cmp100, label %if.else126, label %if.then102, !dbg !6265

if.then102:                                       ; preds = %lor.lhs.false98
  %131 = load i32, i32* %last.addr, align 4, !dbg !6266
  %tobool103 = icmp ne i32 %131, 0, !dbg !6266
  br i1 %tobool103, label %if.end105, label %if.then104, !dbg !6269

if.then104:                                       ; preds = %if.then102
  store i32 19, i32* %state, align 4, !dbg !6270
  br label %next_data, !dbg !6272

if.end105:                                        ; preds = %if.then102
  %132 = load %struct.huffman*, %struct.huffman** %lt, align 8, !dbg !6273
  %cache_buffer106 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6274
  %133 = load i64, i64* %cache_buffer106, align 8, !dbg !6274
  %134 = load i32, i32* %lt_max_bits, align 4, !dbg !6274
  %cache_avail107 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6274
  %135 = load i32, i32* %cache_avail107, align 8, !dbg !6274
  %sub108 = sub nsw i32 %134, %135, !dbg !6274
  %sh_prom109 = zext i32 %sub108 to i64, !dbg !6274
  %shl110 = shl i64 %133, %sh_prom109, !dbg !6274
  %conv111 = trunc i64 %shl110 to i32, !dbg !6274
  %136 = load i32, i32* %lt_max_bits, align 4, !dbg !6274
  %idxprom112 = sext i32 %136 to i64, !dbg !6274
  %arrayidx113 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom112, !dbg !6274
  %137 = load i32, i32* %arrayidx113, align 4, !dbg !6274
  %and114 = and i32 %conv111, %137, !dbg !6274
  %call115 = call i32 @lzx_decode_huffman(%struct.huffman* %132, i32 %and114), !dbg !6275
  store i32 %call115, i32* %c, align 4, !dbg !6276
  %138 = load i32, i32* %c, align 4, !dbg !6277
  %idxprom116 = sext i32 %138 to i64, !dbg !6277
  %139 = load i8*, i8** %lt_bitlen, align 8, !dbg !6277
  %arrayidx117 = getelementptr inbounds i8, i8* %139, i64 %idxprom116, !dbg !6277
  %140 = load i8, i8* %arrayidx117, align 1, !dbg !6277
  %conv118 = zext i8 %140 to i32, !dbg !6277
  %cache_avail119 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6277
  %141 = load i32, i32* %cache_avail119, align 8, !dbg !6277
  %sub120 = sub nsw i32 %141, %conv118, !dbg !6277
  store i32 %sub120, i32* %cache_avail119, align 8, !dbg !6277
  %cache_avail121 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6278
  %142 = load i32, i32* %cache_avail121, align 8, !dbg !6278
  %cmp122 = icmp sge i32 %142, 0, !dbg !6278
  br i1 %cmp122, label %if.end125, label %if.then124, !dbg !6280

if.then124:                                       ; preds = %if.end105
  br label %failed, !dbg !6281

if.end125:                                        ; preds = %if.end105
  br label %if.end142, !dbg !6282

if.else126:                                       ; preds = %lor.lhs.false98, %lor.lhs.false95, %if.then91
  %143 = load %struct.huffman*, %struct.huffman** %lt, align 8, !dbg !6283
  %cache_buffer127 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6285
  %144 = load i64, i64* %cache_buffer127, align 8, !dbg !6285
  %cache_avail128 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6285
  %145 = load i32, i32* %cache_avail128, align 8, !dbg !6285
  %146 = load i32, i32* %lt_max_bits, align 4, !dbg !6285
  %sub129 = sub nsw i32 %145, %146, !dbg !6285
  %sh_prom130 = zext i32 %sub129 to i64, !dbg !6285
  %shr131 = lshr i64 %144, %sh_prom130, !dbg !6285
  %conv132 = trunc i64 %shr131 to i32, !dbg !6285
  %147 = load i32, i32* %lt_max_bits, align 4, !dbg !6285
  %idxprom133 = sext i32 %147 to i64, !dbg !6285
  %arrayidx134 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom133, !dbg !6285
  %148 = load i32, i32* %arrayidx134, align 4, !dbg !6285
  %and135 = and i32 %conv132, %148, !dbg !6285
  %call136 = call i32 @lzx_decode_huffman(%struct.huffman* %143, i32 %and135), !dbg !6286
  store i32 %call136, i32* %c, align 4, !dbg !6287
  %149 = load i32, i32* %c, align 4, !dbg !6288
  %idxprom137 = sext i32 %149 to i64, !dbg !6288
  %150 = load i8*, i8** %lt_bitlen, align 8, !dbg !6288
  %arrayidx138 = getelementptr inbounds i8, i8* %150, i64 %idxprom137, !dbg !6288
  %151 = load i8, i8* %arrayidx138, align 1, !dbg !6288
  %conv139 = zext i8 %151 to i32, !dbg !6288
  %cache_avail140 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6288
  %152 = load i32, i32* %cache_avail140, align 8, !dbg !6288
  %sub141 = sub nsw i32 %152, %conv139, !dbg !6288
  store i32 %sub141, i32* %cache_avail140, align 8, !dbg !6288
  br label %if.end142

if.end142:                                        ; preds = %if.else126, %if.end125
  %153 = load i32, i32* %c, align 4, !dbg !6289
  %add143 = add nsw i32 %153, 7, !dbg !6290
  %add144 = add nsw i32 %add143, 2, !dbg !6291
  store i32 %add144, i32* %copy_len, align 4, !dbg !6292
  br label %if.end147, !dbg !6293

if.else145:                                       ; preds = %sw.bb88
  %154 = load i32, i32* %length_header, align 4, !dbg !6294
  %add146 = add nsw i32 %154, 2, !dbg !6295
  store i32 %add146, i32* %copy_len, align 4, !dbg !6296
  br label %if.end147

if.end147:                                        ; preds = %if.else145, %if.end142
  %155 = load i32, i32* %copy_len, align 4, !dbg !6297
  %conv148 = sext i32 %155 to i64, !dbg !6299
  %156 = load i64, i64* %block_bytes_avail, align 8, !dbg !6300
  %cmp149 = icmp ugt i64 %conv148, %156, !dbg !6301
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !6302

if.then151:                                       ; preds = %if.end147
  br label %failed, !dbg !6303

if.end152:                                        ; preds = %if.end147
  %157 = load i32, i32* %position_slot, align 4, !dbg !6304
  switch i32 %157, label %sw.default [
    i32 0, label %sw.bb153
    i32 1, label %sw.bb154
    i32 2, label %sw.bb155
  ], !dbg !6305

sw.bb153:                                         ; preds = %if.end152
  %158 = load i32, i32* %r0, align 4, !dbg !6306
  store i32 %158, i32* %copy_pos, align 4, !dbg !6308
  store i32 21, i32* %state, align 4, !dbg !6309
  br label %for.cond, !dbg !6310

sw.bb154:                                         ; preds = %if.end152
  %159 = load i32, i32* %r1, align 4, !dbg !6311
  store i32 %159, i32* %copy_pos, align 4, !dbg !6312
  %160 = load i32, i32* %r0, align 4, !dbg !6313
  store i32 %160, i32* %r1, align 4, !dbg !6314
  %161 = load i32, i32* %copy_pos, align 4, !dbg !6315
  store i32 %161, i32* %r0, align 4, !dbg !6316
  store i32 21, i32* %state, align 4, !dbg !6317
  br label %for.cond, !dbg !6318

sw.bb155:                                         ; preds = %if.end152
  %162 = load i32, i32* %r2, align 4, !dbg !6319
  store i32 %162, i32* %copy_pos, align 4, !dbg !6320
  %163 = load i32, i32* %r0, align 4, !dbg !6321
  store i32 %163, i32* %r2, align 4, !dbg !6322
  %164 = load i32, i32* %copy_pos, align 4, !dbg !6323
  store i32 %164, i32* %r0, align 4, !dbg !6324
  store i32 21, i32* %state, align 4, !dbg !6325
  br label %for.cond, !dbg !6326

sw.default:                                       ; preds = %if.end152
  %165 = load i32, i32* %position_slot, align 4, !dbg !6327
  %idxprom156 = sext i32 %165 to i64, !dbg !6328
  %166 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl, align 8, !dbg !6328
  %arrayidx157 = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %166, i64 %idxprom156, !dbg !6328
  %footer_bits = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %arrayidx157, i32 0, i32 1, !dbg !6329
  %167 = load i32, i32* %footer_bits, align 4, !dbg !6329
  store i32 %167, i32* %offset_bits, align 4, !dbg !6330
  br label %sw.epilog, !dbg !6331

sw.epilog:                                        ; preds = %sw.default
  br label %sw.bb158, !dbg !6332

sw.bb158:                                         ; preds = %for.cond, %sw.epilog
  %168 = load i8, i8* %block_type, align 1, !dbg !6333
  %conv159 = sext i8 %168 to i32, !dbg !6333
  %cmp160 = icmp eq i32 %conv159, 2, !dbg !6335
  br i1 %cmp160, label %land.lhs.true, label %if.else249, !dbg !6336

land.lhs.true:                                    ; preds = %sw.bb158
  %169 = load i32, i32* %offset_bits, align 4, !dbg !6337
  %cmp162 = icmp sge i32 %169, 3, !dbg !6338
  br i1 %cmp162, label %if.then164, label %if.else249, !dbg !6339

if.then164:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %offbits, metadata !6341, metadata !638), !dbg !6343
  %170 = load i32, i32* %offset_bits, align 4, !dbg !6344
  %sub165 = sub nsw i32 %170, 3, !dbg !6345
  store i32 %sub165, i32* %offbits, align 4, !dbg !6343
  %cache_avail166 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6346
  %171 = load i32, i32* %cache_avail166, align 8, !dbg !6346
  %172 = load i32, i32* %offbits, align 4, !dbg !6346
  %cmp167 = icmp sge i32 %171, %172, !dbg !6346
  br i1 %cmp167, label %if.end180, label %lor.lhs.false169, !dbg !6346

lor.lhs.false169:                                 ; preds = %if.then164
  %173 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6348
  %call170 = call i32 @lzx_br_fillup(%struct.lzx_stream* %173, %struct.lzx_br* %bre), !dbg !6348
  %tobool171 = icmp ne i32 %call170, 0, !dbg !6348
  br i1 %tobool171, label %if.end180, label %lor.lhs.false172, !dbg !6348

lor.lhs.false172:                                 ; preds = %lor.lhs.false169
  %cache_avail173 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6350
  %174 = load i32, i32* %cache_avail173, align 8, !dbg !6350
  %175 = load i32, i32* %offbits, align 4, !dbg !6350
  %cmp174 = icmp sge i32 %174, %175, !dbg !6350
  br i1 %cmp174, label %if.end180, label %if.then176, !dbg !6352

if.then176:                                       ; preds = %lor.lhs.false172
  store i32 20, i32* %state, align 4, !dbg !6353
  %176 = load i32, i32* %last.addr, align 4, !dbg !6355
  %tobool177 = icmp ne i32 %176, 0, !dbg !6355
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !6357

if.then178:                                       ; preds = %if.then176
  br label %failed, !dbg !6358

if.end179:                                        ; preds = %if.then176
  br label %next_data, !dbg !6359

if.end180:                                        ; preds = %lor.lhs.false172, %lor.lhs.false169, %if.then164
  %cache_buffer181 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6360
  %177 = load i64, i64* %cache_buffer181, align 8, !dbg !6360
  %cache_avail182 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6360
  %178 = load i32, i32* %cache_avail182, align 8, !dbg !6360
  %179 = load i32, i32* %offbits, align 4, !dbg !6360
  %sub183 = sub nsw i32 %178, %179, !dbg !6360
  %sh_prom184 = zext i32 %sub183 to i64, !dbg !6360
  %shr185 = lshr i64 %177, %sh_prom184, !dbg !6360
  %conv186 = trunc i64 %shr185 to i32, !dbg !6360
  %180 = load i32, i32* %offbits, align 4, !dbg !6360
  %idxprom187 = sext i32 %180 to i64, !dbg !6360
  %arrayidx188 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom187, !dbg !6360
  %181 = load i32, i32* %arrayidx188, align 4, !dbg !6360
  %and189 = and i32 %conv186, %181, !dbg !6360
  %shl190 = shl i32 %and189, 3, !dbg !6361
  store i32 %shl190, i32* %copy_pos, align 4, !dbg !6362
  %cache_avail191 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6363
  %182 = load i32, i32* %cache_avail191, align 8, !dbg !6363
  %183 = load i32, i32* %offbits, align 4, !dbg !6363
  %184 = load i32, i32* %at_max_bits, align 4, !dbg !6363
  %add192 = add nsw i32 %183, %184, !dbg !6363
  %cmp193 = icmp sge i32 %182, %add192, !dbg !6363
  br i1 %cmp193, label %if.else229, label %lor.lhs.false195, !dbg !6363

lor.lhs.false195:                                 ; preds = %if.end180
  %185 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6365
  %call196 = call i32 @lzx_br_fillup(%struct.lzx_stream* %185, %struct.lzx_br* %bre), !dbg !6365
  %tobool197 = icmp ne i32 %call196, 0, !dbg !6365
  br i1 %tobool197, label %if.else229, label %lor.lhs.false198, !dbg !6365

lor.lhs.false198:                                 ; preds = %lor.lhs.false195
  %cache_avail199 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6367
  %186 = load i32, i32* %cache_avail199, align 8, !dbg !6367
  %187 = load i32, i32* %offbits, align 4, !dbg !6367
  %188 = load i32, i32* %at_max_bits, align 4, !dbg !6367
  %add200 = add nsw i32 %187, %188, !dbg !6367
  %cmp201 = icmp sge i32 %186, %add200, !dbg !6367
  br i1 %cmp201, label %if.else229, label %if.then203, !dbg !6369

if.then203:                                       ; preds = %lor.lhs.false198
  %189 = load i32, i32* %last.addr, align 4, !dbg !6370
  %tobool204 = icmp ne i32 %189, 0, !dbg !6370
  br i1 %tobool204, label %if.end206, label %if.then205, !dbg !6373

if.then205:                                       ; preds = %if.then203
  store i32 20, i32* %state, align 4, !dbg !6374
  br label %next_data, !dbg !6376

if.end206:                                        ; preds = %if.then203
  %190 = load i32, i32* %offbits, align 4, !dbg !6377
  %cache_avail207 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6377
  %191 = load i32, i32* %cache_avail207, align 8, !dbg !6377
  %sub208 = sub nsw i32 %191, %190, !dbg !6377
  store i32 %sub208, i32* %cache_avail207, align 8, !dbg !6377
  %192 = load %struct.huffman*, %struct.huffman** %at, align 8, !dbg !6378
  %cache_buffer209 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6379
  %193 = load i64, i64* %cache_buffer209, align 8, !dbg !6379
  %194 = load i32, i32* %at_max_bits, align 4, !dbg !6379
  %cache_avail210 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6379
  %195 = load i32, i32* %cache_avail210, align 8, !dbg !6379
  %sub211 = sub nsw i32 %194, %195, !dbg !6379
  %sh_prom212 = zext i32 %sub211 to i64, !dbg !6379
  %shl213 = shl i64 %193, %sh_prom212, !dbg !6379
  %conv214 = trunc i64 %shl213 to i32, !dbg !6379
  %196 = load i32, i32* %at_max_bits, align 4, !dbg !6379
  %idxprom215 = sext i32 %196 to i64, !dbg !6379
  %arrayidx216 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom215, !dbg !6379
  %197 = load i32, i32* %arrayidx216, align 4, !dbg !6379
  %and217 = and i32 %conv214, %197, !dbg !6379
  %call218 = call i32 @lzx_decode_huffman(%struct.huffman* %192, i32 %and217), !dbg !6380
  store i32 %call218, i32* %c, align 4, !dbg !6381
  %198 = load i32, i32* %c, align 4, !dbg !6382
  %idxprom219 = sext i32 %198 to i64, !dbg !6382
  %199 = load i8*, i8** %at_bitlen, align 8, !dbg !6382
  %arrayidx220 = getelementptr inbounds i8, i8* %199, i64 %idxprom219, !dbg !6382
  %200 = load i8, i8* %arrayidx220, align 1, !dbg !6382
  %conv221 = zext i8 %200 to i32, !dbg !6382
  %cache_avail222 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6382
  %201 = load i32, i32* %cache_avail222, align 8, !dbg !6382
  %sub223 = sub nsw i32 %201, %conv221, !dbg !6382
  store i32 %sub223, i32* %cache_avail222, align 8, !dbg !6382
  %cache_avail224 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6383
  %202 = load i32, i32* %cache_avail224, align 8, !dbg !6383
  %cmp225 = icmp sge i32 %202, 0, !dbg !6383
  br i1 %cmp225, label %if.end228, label %if.then227, !dbg !6385

if.then227:                                       ; preds = %if.end206
  br label %failed, !dbg !6386

if.end228:                                        ; preds = %if.end206
  br label %if.end247, !dbg !6387

if.else229:                                       ; preds = %lor.lhs.false198, %lor.lhs.false195, %if.end180
  %203 = load i32, i32* %offbits, align 4, !dbg !6388
  %cache_avail230 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6388
  %204 = load i32, i32* %cache_avail230, align 8, !dbg !6388
  %sub231 = sub nsw i32 %204, %203, !dbg !6388
  store i32 %sub231, i32* %cache_avail230, align 8, !dbg !6388
  %205 = load %struct.huffman*, %struct.huffman** %at, align 8, !dbg !6390
  %cache_buffer232 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6391
  %206 = load i64, i64* %cache_buffer232, align 8, !dbg !6391
  %cache_avail233 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6391
  %207 = load i32, i32* %cache_avail233, align 8, !dbg !6391
  %208 = load i32, i32* %at_max_bits, align 4, !dbg !6391
  %sub234 = sub nsw i32 %207, %208, !dbg !6391
  %sh_prom235 = zext i32 %sub234 to i64, !dbg !6391
  %shr236 = lshr i64 %206, %sh_prom235, !dbg !6391
  %conv237 = trunc i64 %shr236 to i32, !dbg !6391
  %209 = load i32, i32* %at_max_bits, align 4, !dbg !6391
  %idxprom238 = sext i32 %209 to i64, !dbg !6391
  %arrayidx239 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom238, !dbg !6391
  %210 = load i32, i32* %arrayidx239, align 4, !dbg !6391
  %and240 = and i32 %conv237, %210, !dbg !6391
  %call241 = call i32 @lzx_decode_huffman(%struct.huffman* %205, i32 %and240), !dbg !6392
  store i32 %call241, i32* %c, align 4, !dbg !6393
  %211 = load i32, i32* %c, align 4, !dbg !6394
  %idxprom242 = sext i32 %211 to i64, !dbg !6394
  %212 = load i8*, i8** %at_bitlen, align 8, !dbg !6394
  %arrayidx243 = getelementptr inbounds i8, i8* %212, i64 %idxprom242, !dbg !6394
  %213 = load i8, i8* %arrayidx243, align 1, !dbg !6394
  %conv244 = zext i8 %213 to i32, !dbg !6394
  %cache_avail245 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6394
  %214 = load i32, i32* %cache_avail245, align 8, !dbg !6394
  %sub246 = sub nsw i32 %214, %conv244, !dbg !6394
  store i32 %sub246, i32* %cache_avail245, align 8, !dbg !6394
  br label %if.end247

if.end247:                                        ; preds = %if.else229, %if.end228
  %215 = load i32, i32* %c, align 4, !dbg !6395
  %216 = load i32, i32* %copy_pos, align 4, !dbg !6396
  %add248 = add nsw i32 %216, %215, !dbg !6396
  store i32 %add248, i32* %copy_pos, align 4, !dbg !6396
  br label %if.end276, !dbg !6397

if.else249:                                       ; preds = %land.lhs.true, %sw.bb158
  %cache_avail250 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6398
  %217 = load i32, i32* %cache_avail250, align 8, !dbg !6398
  %218 = load i32, i32* %offset_bits, align 4, !dbg !6398
  %cmp251 = icmp sge i32 %217, %218, !dbg !6398
  br i1 %cmp251, label %if.end264, label %lor.lhs.false253, !dbg !6398

lor.lhs.false253:                                 ; preds = %if.else249
  %219 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6401
  %call254 = call i32 @lzx_br_fillup(%struct.lzx_stream* %219, %struct.lzx_br* %bre), !dbg !6401
  %tobool255 = icmp ne i32 %call254, 0, !dbg !6401
  br i1 %tobool255, label %if.end264, label %lor.lhs.false256, !dbg !6401

lor.lhs.false256:                                 ; preds = %lor.lhs.false253
  %cache_avail257 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6403
  %220 = load i32, i32* %cache_avail257, align 8, !dbg !6403
  %221 = load i32, i32* %offset_bits, align 4, !dbg !6403
  %cmp258 = icmp sge i32 %220, %221, !dbg !6403
  br i1 %cmp258, label %if.end264, label %if.then260, !dbg !6405

if.then260:                                       ; preds = %lor.lhs.false256
  store i32 20, i32* %state, align 4, !dbg !6406
  %222 = load i32, i32* %last.addr, align 4, !dbg !6408
  %tobool261 = icmp ne i32 %222, 0, !dbg !6408
  br i1 %tobool261, label %if.then262, label %if.end263, !dbg !6410

if.then262:                                       ; preds = %if.then260
  br label %failed, !dbg !6411

if.end263:                                        ; preds = %if.then260
  br label %next_data, !dbg !6412

if.end264:                                        ; preds = %lor.lhs.false256, %lor.lhs.false253, %if.else249
  %cache_buffer265 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 0, !dbg !6413
  %223 = load i64, i64* %cache_buffer265, align 8, !dbg !6413
  %cache_avail266 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6413
  %224 = load i32, i32* %cache_avail266, align 8, !dbg !6413
  %225 = load i32, i32* %offset_bits, align 4, !dbg !6413
  %sub267 = sub nsw i32 %224, %225, !dbg !6413
  %sh_prom268 = zext i32 %sub267 to i64, !dbg !6413
  %shr269 = lshr i64 %223, %sh_prom268, !dbg !6413
  %conv270 = trunc i64 %shr269 to i32, !dbg !6413
  %226 = load i32, i32* %offset_bits, align 4, !dbg !6413
  %idxprom271 = sext i32 %226 to i64, !dbg !6413
  %arrayidx272 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom271, !dbg !6413
  %227 = load i32, i32* %arrayidx272, align 4, !dbg !6413
  %and273 = and i32 %conv270, %227, !dbg !6413
  store i32 %and273, i32* %copy_pos, align 4, !dbg !6414
  %228 = load i32, i32* %offset_bits, align 4, !dbg !6415
  %cache_avail274 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %bre, i32 0, i32 1, !dbg !6415
  %229 = load i32, i32* %cache_avail274, align 8, !dbg !6415
  %sub275 = sub nsw i32 %229, %228, !dbg !6415
  store i32 %sub275, i32* %cache_avail274, align 8, !dbg !6415
  br label %if.end276

if.end276:                                        ; preds = %if.end264, %if.end247
  %230 = load i32, i32* %position_slot, align 4, !dbg !6416
  %idxprom277 = sext i32 %230 to i64, !dbg !6417
  %231 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl, align 8, !dbg !6417
  %arrayidx278 = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %231, i64 %idxprom277, !dbg !6417
  %base = getelementptr inbounds %struct.lzx_pos_tbl, %struct.lzx_pos_tbl* %arrayidx278, i32 0, i32 0, !dbg !6418
  %232 = load i32, i32* %base, align 4, !dbg !6418
  %sub279 = sub nsw i32 %232, 2, !dbg !6419
  %233 = load i32, i32* %copy_pos, align 4, !dbg !6420
  %add280 = add nsw i32 %233, %sub279, !dbg !6420
  store i32 %add280, i32* %copy_pos, align 4, !dbg !6420
  %234 = load i32, i32* %r1, align 4, !dbg !6421
  store i32 %234, i32* %r2, align 4, !dbg !6422
  %235 = load i32, i32* %r0, align 4, !dbg !6423
  store i32 %235, i32* %r1, align 4, !dbg !6424
  %236 = load i32, i32* %copy_pos, align 4, !dbg !6425
  store i32 %236, i32* %r0, align 4, !dbg !6426
  br label %sw.bb281, !dbg !6427

sw.bb281:                                         ; preds = %for.cond, %if.end276
  %237 = load i32, i32* %w_pos, align 4, !dbg !6428
  %238 = load i32, i32* %copy_pos, align 4, !dbg !6429
  %sub282 = sub nsw i32 %237, %238, !dbg !6430
  %239 = load i32, i32* %w_mask, align 4, !dbg !6431
  %and283 = and i32 %sub282, %239, !dbg !6432
  store i32 %and283, i32* %copy_pos, align 4, !dbg !6433
  br label %sw.bb284, !dbg !6434

sw.bb284:                                         ; preds = %for.cond, %sw.bb281
  br label %for.cond285, !dbg !6435

for.cond285:                                      ; preds = %if.end359, %sw.bb284
  call void @llvm.dbg.declare(metadata i8** %s, metadata !6436, metadata !638), !dbg !6440
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6441, metadata !638), !dbg !6442
  %240 = load i32, i32* %copy_len, align 4, !dbg !6443
  store i32 %240, i32* %l, align 4, !dbg !6444
  %241 = load i32, i32* %copy_pos, align 4, !dbg !6445
  %242 = load i32, i32* %w_pos, align 4, !dbg !6447
  %cmp286 = icmp sgt i32 %241, %242, !dbg !6448
  br i1 %cmp286, label %if.then288, label %if.else295, !dbg !6449

if.then288:                                       ; preds = %for.cond285
  %243 = load i32, i32* %l, align 4, !dbg !6450
  %244 = load i32, i32* %w_size, align 4, !dbg !6453
  %245 = load i32, i32* %copy_pos, align 4, !dbg !6454
  %sub289 = sub nsw i32 %244, %245, !dbg !6455
  %cmp290 = icmp sgt i32 %243, %sub289, !dbg !6456
  br i1 %cmp290, label %if.then292, label %if.end294, !dbg !6457

if.then292:                                       ; preds = %if.then288
  %246 = load i32, i32* %w_size, align 4, !dbg !6458
  %247 = load i32, i32* %copy_pos, align 4, !dbg !6459
  %sub293 = sub nsw i32 %246, %247, !dbg !6460
  store i32 %sub293, i32* %l, align 4, !dbg !6461
  br label %if.end294, !dbg !6462

if.end294:                                        ; preds = %if.then292, %if.then288
  br label %if.end302, !dbg !6463

if.else295:                                       ; preds = %for.cond285
  %248 = load i32, i32* %l, align 4, !dbg !6464
  %249 = load i32, i32* %w_size, align 4, !dbg !6467
  %250 = load i32, i32* %w_pos, align 4, !dbg !6468
  %sub296 = sub nsw i32 %249, %250, !dbg !6469
  %cmp297 = icmp sgt i32 %248, %sub296, !dbg !6470
  br i1 %cmp297, label %if.then299, label %if.end301, !dbg !6471

if.then299:                                       ; preds = %if.else295
  %251 = load i32, i32* %w_size, align 4, !dbg !6472
  %252 = load i32, i32* %w_pos, align 4, !dbg !6473
  %sub300 = sub nsw i32 %251, %252, !dbg !6474
  store i32 %sub300, i32* %l, align 4, !dbg !6475
  br label %if.end301, !dbg !6476

if.end301:                                        ; preds = %if.then299, %if.else295
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %if.end294
  %253 = load i8*, i8** %noutp, align 8, !dbg !6477
  %254 = load i32, i32* %l, align 4, !dbg !6479
  %idx.ext = sext i32 %254 to i64, !dbg !6480
  %add.ptr303 = getelementptr inbounds i8, i8* %253, i64 %idx.ext, !dbg !6480
  %255 = load i8*, i8** %endp, align 8, !dbg !6481
  %cmp304 = icmp uge i8* %add.ptr303, %255, !dbg !6482
  br i1 %cmp304, label %if.then306, label %if.end311, !dbg !6483

if.then306:                                       ; preds = %if.end302
  %256 = load i8*, i8** %endp, align 8, !dbg !6484
  %257 = load i8*, i8** %noutp, align 8, !dbg !6485
  %sub.ptr.lhs.cast307 = ptrtoint i8* %256 to i64, !dbg !6486
  %sub.ptr.rhs.cast308 = ptrtoint i8* %257 to i64, !dbg !6486
  %sub.ptr.sub309 = sub i64 %sub.ptr.lhs.cast307, %sub.ptr.rhs.cast308, !dbg !6486
  %conv310 = trunc i64 %sub.ptr.sub309 to i32, !dbg !6487
  store i32 %conv310, i32* %l, align 4, !dbg !6488
  br label %if.end311, !dbg !6489

if.end311:                                        ; preds = %if.then306, %if.end302
  %258 = load i8*, i8** %w_buff, align 8, !dbg !6490
  %259 = load i32, i32* %copy_pos, align 4, !dbg !6491
  %idx.ext312 = sext i32 %259 to i64, !dbg !6492
  %add.ptr313 = getelementptr inbounds i8, i8* %258, i64 %idx.ext312, !dbg !6492
  store i8* %add.ptr313, i8** %s, align 8, !dbg !6493
  %260 = load i32, i32* %l, align 4, !dbg !6494
  %cmp314 = icmp sge i32 %260, 8, !dbg !6496
  br i1 %cmp314, label %land.lhs.true316, label %if.else329, !dbg !6497

land.lhs.true316:                                 ; preds = %if.end311
  %261 = load i32, i32* %copy_pos, align 4, !dbg !6498
  %262 = load i32, i32* %l, align 4, !dbg !6500
  %add317 = add nsw i32 %261, %262, !dbg !6501
  %263 = load i32, i32* %w_pos, align 4, !dbg !6502
  %cmp318 = icmp slt i32 %add317, %263, !dbg !6503
  br i1 %cmp318, label %if.then324, label %lor.lhs.false320, !dbg !6504

lor.lhs.false320:                                 ; preds = %land.lhs.true316
  %264 = load i32, i32* %w_pos, align 4, !dbg !6505
  %265 = load i32, i32* %l, align 4, !dbg !6506
  %add321 = add nsw i32 %264, %265, !dbg !6507
  %266 = load i32, i32* %copy_pos, align 4, !dbg !6508
  %cmp322 = icmp slt i32 %add321, %266, !dbg !6509
  br i1 %cmp322, label %if.then324, label %if.else329, !dbg !6510

if.then324:                                       ; preds = %lor.lhs.false320, %land.lhs.true316
  %267 = load i8*, i8** %w_buff, align 8, !dbg !6512
  %268 = load i32, i32* %w_pos, align 4, !dbg !6514
  %idx.ext325 = sext i32 %268 to i64, !dbg !6515
  %add.ptr326 = getelementptr inbounds i8, i8* %267, i64 %idx.ext325, !dbg !6515
  %269 = load i8*, i8** %s, align 8, !dbg !6516
  %270 = load i32, i32* %l, align 4, !dbg !6517
  %conv327 = sext i32 %270 to i64, !dbg !6517
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr326, i8* %269, i64 %conv327, i32 1, i1 false), !dbg !6518
  %271 = load i8*, i8** %noutp, align 8, !dbg !6519
  %272 = load i8*, i8** %s, align 8, !dbg !6520
  %273 = load i32, i32* %l, align 4, !dbg !6521
  %conv328 = sext i32 %273 to i64, !dbg !6521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %271, i8* %272, i64 %conv328, i32 1, i1 false), !dbg !6522
  br label %if.end342, !dbg !6523

if.else329:                                       ; preds = %lor.lhs.false320, %if.end311
  call void @llvm.dbg.declare(metadata i8** %d, metadata !6524, metadata !638), !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %li, metadata !6527, metadata !638), !dbg !6528
  %274 = load i8*, i8** %w_buff, align 8, !dbg !6529
  %275 = load i32, i32* %w_pos, align 4, !dbg !6530
  %idx.ext330 = sext i32 %275 to i64, !dbg !6531
  %add.ptr331 = getelementptr inbounds i8, i8* %274, i64 %idx.ext330, !dbg !6531
  store i8* %add.ptr331, i8** %d, align 8, !dbg !6532
  store i32 0, i32* %li, align 4, !dbg !6533
  br label %for.cond332, !dbg !6535

for.cond332:                                      ; preds = %for.inc, %if.else329
  %276 = load i32, i32* %li, align 4, !dbg !6536
  %277 = load i32, i32* %l, align 4, !dbg !6539
  %cmp333 = icmp slt i32 %276, %277, !dbg !6540
  br i1 %cmp333, label %for.body, label %for.end341, !dbg !6541

for.body:                                         ; preds = %for.cond332
  %278 = load i32, i32* %li, align 4, !dbg !6542
  %idxprom335 = sext i32 %278 to i64, !dbg !6543
  %279 = load i8*, i8** %s, align 8, !dbg !6543
  %arrayidx336 = getelementptr inbounds i8, i8* %279, i64 %idxprom335, !dbg !6543
  %280 = load i8, i8* %arrayidx336, align 1, !dbg !6543
  %281 = load i32, i32* %li, align 4, !dbg !6544
  %idxprom337 = sext i32 %281 to i64, !dbg !6545
  %282 = load i8*, i8** %d, align 8, !dbg !6545
  %arrayidx338 = getelementptr inbounds i8, i8* %282, i64 %idxprom337, !dbg !6545
  store i8 %280, i8* %arrayidx338, align 1, !dbg !6546
  %283 = load i32, i32* %li, align 4, !dbg !6547
  %idxprom339 = sext i32 %283 to i64, !dbg !6548
  %284 = load i8*, i8** %noutp, align 8, !dbg !6548
  %arrayidx340 = getelementptr inbounds i8, i8* %284, i64 %idxprom339, !dbg !6548
  store i8 %280, i8* %arrayidx340, align 1, !dbg !6549
  br label %for.inc, !dbg !6548

for.inc:                                          ; preds = %for.body
  %285 = load i32, i32* %li, align 4, !dbg !6550
  %inc = add nsw i32 %285, 1, !dbg !6550
  store i32 %inc, i32* %li, align 4, !dbg !6550
  br label %for.cond332, !dbg !6552

for.end341:                                       ; preds = %for.cond332
  br label %if.end342

if.end342:                                        ; preds = %for.end341, %if.then324
  %286 = load i32, i32* %l, align 4, !dbg !6553
  %287 = load i8*, i8** %noutp, align 8, !dbg !6554
  %idx.ext343 = sext i32 %286 to i64, !dbg !6554
  %add.ptr344 = getelementptr inbounds i8, i8* %287, i64 %idx.ext343, !dbg !6554
  store i8* %add.ptr344, i8** %noutp, align 8, !dbg !6554
  %288 = load i32, i32* %copy_pos, align 4, !dbg !6555
  %289 = load i32, i32* %l, align 4, !dbg !6556
  %add345 = add nsw i32 %288, %289, !dbg !6557
  %290 = load i32, i32* %w_mask, align 4, !dbg !6558
  %and346 = and i32 %add345, %290, !dbg !6559
  store i32 %and346, i32* %copy_pos, align 4, !dbg !6560
  %291 = load i32, i32* %w_pos, align 4, !dbg !6561
  %292 = load i32, i32* %l, align 4, !dbg !6562
  %add347 = add nsw i32 %291, %292, !dbg !6563
  %293 = load i32, i32* %w_mask, align 4, !dbg !6564
  %and348 = and i32 %add347, %293, !dbg !6565
  store i32 %and348, i32* %w_pos, align 4, !dbg !6566
  %294 = load i32, i32* %l, align 4, !dbg !6567
  %conv349 = sext i32 %294 to i64, !dbg !6567
  %295 = load i64, i64* %block_bytes_avail, align 8, !dbg !6568
  %sub350 = sub i64 %295, %conv349, !dbg !6568
  store i64 %sub350, i64* %block_bytes_avail, align 8, !dbg !6568
  %296 = load i32, i32* %copy_len, align 4, !dbg !6569
  %297 = load i32, i32* %l, align 4, !dbg !6571
  %cmp351 = icmp sle i32 %296, %297, !dbg !6572
  br i1 %cmp351, label %if.then353, label %if.end354, !dbg !6573

if.then353:                                       ; preds = %if.end342
  br label %for.end360, !dbg !6574

if.end354:                                        ; preds = %if.end342
  %298 = load i32, i32* %l, align 4, !dbg !6575
  %299 = load i32, i32* %copy_len, align 4, !dbg !6576
  %sub355 = sub nsw i32 %299, %298, !dbg !6576
  store i32 %sub355, i32* %copy_len, align 4, !dbg !6576
  %300 = load i8*, i8** %noutp, align 8, !dbg !6577
  %301 = load i8*, i8** %endp, align 8, !dbg !6579
  %cmp356 = icmp uge i8* %300, %301, !dbg !6580
  br i1 %cmp356, label %if.then358, label %if.end359, !dbg !6581

if.then358:                                       ; preds = %if.end354
  store i32 22, i32* %state, align 4, !dbg !6582
  br label %next_data, !dbg !6584

if.end359:                                        ; preds = %if.end354
  br label %for.cond285, !dbg !6585

for.end360:                                       ; preds = %if.then353
  store i32 18, i32* %state, align 4, !dbg !6587
  br label %sw.epilog361, !dbg !6588

sw.epilog361:                                     ; preds = %for.cond, %for.end360
  br label %for.cond, !dbg !6589

failed:                                           ; preds = %if.then262, %if.then227, %if.then178, %if.then151, %if.then124, %if.then59
  %302 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6591
  %error = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %302, i32 0, i32 27, !dbg !6592
  store i32 -25, i32* %error, align 4, !dbg !6593
  store i32 -25, i32* %retval, align 4, !dbg !6594
  br label %return, !dbg !6594

next_data:                                        ; preds = %if.then358, %if.end263, %if.then205, %if.end179, %if.then104, %if.then47, %if.then39
  %303 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6595
  %br362 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %303, i32 0, i32 21, !dbg !6596
  %304 = bitcast %struct.lzx_br* %br362 to i8*, !dbg !6597
  %305 = bitcast %struct.lzx_br* %bre to i8*, !dbg !6597
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %304, i8* %305, i64 16, i32 8, i1 false), !dbg !6597
  %306 = load i64, i64* %block_bytes_avail, align 8, !dbg !6598
  %307 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6599
  %block_bytes_avail363 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %307, i32 0, i32 11, !dbg !6600
  store i64 %306, i64* %block_bytes_avail363, align 8, !dbg !6601
  %308 = load i32, i32* %copy_len, align 4, !dbg !6602
  %309 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6603
  %copy_len364 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %309, i32 0, i32 6, !dbg !6604
  store i32 %308, i32* %copy_len364, align 8, !dbg !6605
  %310 = load i32, i32* %copy_pos, align 4, !dbg !6606
  %311 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6607
  %copy_pos365 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %311, i32 0, i32 5, !dbg !6608
  store i32 %310, i32* %copy_pos365, align 4, !dbg !6609
  %312 = load i32, i32* %length_header, align 4, !dbg !6610
  %313 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6611
  %length_header366 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %313, i32 0, i32 17, !dbg !6612
  store i32 %312, i32* %length_header366, align 4, !dbg !6613
  %314 = load i32, i32* %offset_bits, align 4, !dbg !6614
  %315 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6615
  %offset_bits367 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %315, i32 0, i32 19, !dbg !6616
  store i32 %314, i32* %offset_bits367, align 4, !dbg !6617
  %316 = load i32, i32* %position_slot, align 4, !dbg !6618
  %317 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6619
  %position_slot368 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %317, i32 0, i32 18, !dbg !6620
  store i32 %316, i32* %position_slot368, align 8, !dbg !6621
  %318 = load i32, i32* %r0, align 4, !dbg !6622
  %319 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6623
  %r0369 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %319, i32 0, i32 12, !dbg !6624
  store i32 %318, i32* %r0369, align 8, !dbg !6625
  %320 = load i32, i32* %r1, align 4, !dbg !6626
  %321 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6627
  %r1370 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %321, i32 0, i32 13, !dbg !6628
  store i32 %320, i32* %r1370, align 4, !dbg !6629
  %322 = load i32, i32* %r2, align 4, !dbg !6630
  %323 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6631
  %r2371 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %323, i32 0, i32 14, !dbg !6632
  store i32 %322, i32* %r2371, align 8, !dbg !6633
  %324 = load i32, i32* %state, align 4, !dbg !6634
  %325 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6635
  %state372 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %325, i32 0, i32 0, !dbg !6636
  store i32 %324, i32* %state372, align 8, !dbg !6637
  %326 = load i32, i32* %w_pos, align 4, !dbg !6638
  %327 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !6639
  %w_pos373 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %327, i32 0, i32 4, !dbg !6640
  store i32 %326, i32* %w_pos373, align 8, !dbg !6641
  %328 = load i8*, i8** %endp, align 8, !dbg !6642
  %329 = load i8*, i8** %noutp, align 8, !dbg !6643
  %sub.ptr.lhs.cast374 = ptrtoint i8* %328 to i64, !dbg !6644
  %sub.ptr.rhs.cast375 = ptrtoint i8* %329 to i64, !dbg !6644
  %sub.ptr.sub376 = sub i64 %sub.ptr.lhs.cast374, %sub.ptr.rhs.cast375, !dbg !6644
  %330 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6645
  %avail_out377 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %330, i32 0, i32 4, !dbg !6646
  store i64 %sub.ptr.sub376, i64* %avail_out377, align 8, !dbg !6647
  store i32 0, i32* %retval, align 4, !dbg !6648
  br label %return, !dbg !6648

return:                                           ; preds = %next_data, %failed, %if.then
  %331 = load i32, i32* %retval, align 4, !dbg !6649
  ret i32 %331, !dbg !6649
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_br_fillup(%struct.lzx_stream* %strm, %struct.lzx_br* %br) #0 !dbg !589 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %br.addr = alloca %struct.lzx_br*, align 8
  %n = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !6650, metadata !638), !dbg !6651
  store %struct.lzx_br* %br, %struct.lzx_br** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_br** %br.addr, metadata !6652, metadata !638), !dbg !6653
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6654, metadata !638), !dbg !6655
  %0 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6656
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %0, i32 0, i32 1, !dbg !6657
  %1 = load i32, i32* %cache_avail, align 8, !dbg !6657
  %conv = sext i32 %1 to i64, !dbg !6656
  %sub = sub i64 64, %conv, !dbg !6658
  %conv1 = trunc i64 %sub to i32, !dbg !6659
  store i32 %conv1, i32* %n, align 4, !dbg !6655
  br label %for.cond, !dbg !6660

for.cond:                                         ; preds = %if.end105, %entry
  %2 = load i32, i32* %n, align 4, !dbg !6661
  %shr = ashr i32 %2, 4, !dbg !6665
  switch i32 %shr, label %sw.default [
    i32 4, label %sw.bb
    i32 3, label %sw.bb45
    i32 0, label %sw.bb93
  ], !dbg !6666

sw.bb:                                            ; preds = %for.cond
  %3 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6667
  %avail_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %3, i32 0, i32 1, !dbg !6670
  %4 = load i64, i64* %avail_in, align 8, !dbg !6670
  %cmp = icmp sge i64 %4, 8, !dbg !6671
  br i1 %cmp, label %if.then, label %if.end, !dbg !6672

if.then:                                          ; preds = %sw.bb
  %5 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6673
  %next_in = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %5, i32 0, i32 0, !dbg !6675
  %6 = load i8*, i8** %next_in, align 8, !dbg !6675
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 1, !dbg !6673
  %7 = load i8, i8* %arrayidx, align 1, !dbg !6673
  %conv3 = zext i8 %7 to i64, !dbg !6676
  %shl = shl i64 %conv3, 56, !dbg !6677
  %8 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6678
  %next_in4 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %8, i32 0, i32 0, !dbg !6679
  %9 = load i8*, i8** %next_in4, align 8, !dbg !6679
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !6678
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !6678
  %conv6 = zext i8 %10 to i64, !dbg !6680
  %shl7 = shl i64 %conv6, 48, !dbg !6681
  %or = or i64 %shl, %shl7, !dbg !6682
  %11 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6683
  %next_in8 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %11, i32 0, i32 0, !dbg !6684
  %12 = load i8*, i8** %next_in8, align 8, !dbg !6684
  %arrayidx9 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !6683
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !6683
  %conv10 = zext i8 %13 to i64, !dbg !6685
  %shl11 = shl i64 %conv10, 40, !dbg !6686
  %or12 = or i64 %or, %shl11, !dbg !6687
  %14 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6688
  %next_in13 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %14, i32 0, i32 0, !dbg !6689
  %15 = load i8*, i8** %next_in13, align 8, !dbg !6689
  %arrayidx14 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !6688
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !6688
  %conv15 = zext i8 %16 to i64, !dbg !6690
  %shl16 = shl i64 %conv15, 32, !dbg !6691
  %or17 = or i64 %or12, %shl16, !dbg !6692
  %17 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6693
  %next_in18 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %17, i32 0, i32 0, !dbg !6694
  %18 = load i8*, i8** %next_in18, align 8, !dbg !6694
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 5, !dbg !6693
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !6693
  %conv20 = zext i8 %19 to i32, !dbg !6695
  %shl21 = shl i32 %conv20, 24, !dbg !6696
  %conv22 = zext i32 %shl21 to i64, !dbg !6697
  %or23 = or i64 %or17, %conv22, !dbg !6698
  %20 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6699
  %next_in24 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %20, i32 0, i32 0, !dbg !6700
  %21 = load i8*, i8** %next_in24, align 8, !dbg !6700
  %arrayidx25 = getelementptr inbounds i8, i8* %21, i64 4, !dbg !6699
  %22 = load i8, i8* %arrayidx25, align 1, !dbg !6699
  %conv26 = zext i8 %22 to i32, !dbg !6701
  %shl27 = shl i32 %conv26, 16, !dbg !6702
  %conv28 = zext i32 %shl27 to i64, !dbg !6703
  %or29 = or i64 %or23, %conv28, !dbg !6704
  %23 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6705
  %next_in30 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %23, i32 0, i32 0, !dbg !6706
  %24 = load i8*, i8** %next_in30, align 8, !dbg !6706
  %arrayidx31 = getelementptr inbounds i8, i8* %24, i64 7, !dbg !6705
  %25 = load i8, i8* %arrayidx31, align 1, !dbg !6705
  %conv32 = zext i8 %25 to i32, !dbg !6707
  %shl33 = shl i32 %conv32, 8, !dbg !6708
  %conv34 = zext i32 %shl33 to i64, !dbg !6709
  %or35 = or i64 %or29, %conv34, !dbg !6710
  %26 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6711
  %next_in36 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %26, i32 0, i32 0, !dbg !6712
  %27 = load i8*, i8** %next_in36, align 8, !dbg !6712
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 6, !dbg !6711
  %28 = load i8, i8* %arrayidx37, align 1, !dbg !6711
  %conv38 = zext i8 %28 to i32, !dbg !6713
  %conv39 = zext i32 %conv38 to i64, !dbg !6713
  %or40 = or i64 %or35, %conv39, !dbg !6714
  %29 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6715
  %cache_buffer = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %29, i32 0, i32 0, !dbg !6716
  store i64 %or40, i64* %cache_buffer, align 8, !dbg !6717
  %30 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6718
  %next_in41 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %30, i32 0, i32 0, !dbg !6719
  %31 = load i8*, i8** %next_in41, align 8, !dbg !6720
  %add.ptr = getelementptr inbounds i8, i8* %31, i64 8, !dbg !6720
  store i8* %add.ptr, i8** %next_in41, align 8, !dbg !6720
  %32 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6721
  %avail_in42 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %32, i32 0, i32 1, !dbg !6722
  %33 = load i64, i64* %avail_in42, align 8, !dbg !6723
  %sub43 = sub nsw i64 %33, 8, !dbg !6723
  store i64 %sub43, i64* %avail_in42, align 8, !dbg !6723
  %34 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6724
  %cache_avail44 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %34, i32 0, i32 1, !dbg !6725
  %35 = load i32, i32* %cache_avail44, align 8, !dbg !6726
  %add = add nsw i32 %35, 64, !dbg !6726
  store i32 %add, i32* %cache_avail44, align 8, !dbg !6726
  store i32 1, i32* %retval, align 4, !dbg !6727
  br label %return, !dbg !6727

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !6728

sw.bb45:                                          ; preds = %for.cond
  %36 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6729
  %avail_in46 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %36, i32 0, i32 1, !dbg !6731
  %37 = load i64, i64* %avail_in46, align 8, !dbg !6731
  %cmp47 = icmp sge i64 %37, 6, !dbg !6732
  br i1 %cmp47, label %if.then49, label %if.end92, !dbg !6733

if.then49:                                        ; preds = %sw.bb45
  %38 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6734
  %cache_buffer50 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %38, i32 0, i32 0, !dbg !6736
  %39 = load i64, i64* %cache_buffer50, align 8, !dbg !6736
  %shl51 = shl i64 %39, 48, !dbg !6737
  %40 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6738
  %next_in52 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %40, i32 0, i32 0, !dbg !6739
  %41 = load i8*, i8** %next_in52, align 8, !dbg !6739
  %arrayidx53 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !6738
  %42 = load i8, i8* %arrayidx53, align 1, !dbg !6738
  %conv54 = zext i8 %42 to i64, !dbg !6740
  %shl55 = shl i64 %conv54, 40, !dbg !6741
  %or56 = or i64 %shl51, %shl55, !dbg !6742
  %43 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6743
  %next_in57 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %43, i32 0, i32 0, !dbg !6744
  %44 = load i8*, i8** %next_in57, align 8, !dbg !6744
  %arrayidx58 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !6743
  %45 = load i8, i8* %arrayidx58, align 1, !dbg !6743
  %conv59 = zext i8 %45 to i64, !dbg !6745
  %shl60 = shl i64 %conv59, 32, !dbg !6746
  %or61 = or i64 %or56, %shl60, !dbg !6747
  %46 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6748
  %next_in62 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %46, i32 0, i32 0, !dbg !6749
  %47 = load i8*, i8** %next_in62, align 8, !dbg !6749
  %arrayidx63 = getelementptr inbounds i8, i8* %47, i64 3, !dbg !6748
  %48 = load i8, i8* %arrayidx63, align 1, !dbg !6748
  %conv64 = zext i8 %48 to i32, !dbg !6750
  %shl65 = shl i32 %conv64, 24, !dbg !6751
  %conv66 = zext i32 %shl65 to i64, !dbg !6752
  %or67 = or i64 %or61, %conv66, !dbg !6753
  %49 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6754
  %next_in68 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %49, i32 0, i32 0, !dbg !6755
  %50 = load i8*, i8** %next_in68, align 8, !dbg !6755
  %arrayidx69 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !6754
  %51 = load i8, i8* %arrayidx69, align 1, !dbg !6754
  %conv70 = zext i8 %51 to i32, !dbg !6756
  %shl71 = shl i32 %conv70, 16, !dbg !6757
  %conv72 = zext i32 %shl71 to i64, !dbg !6758
  %or73 = or i64 %or67, %conv72, !dbg !6759
  %52 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6760
  %next_in74 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %52, i32 0, i32 0, !dbg !6761
  %53 = load i8*, i8** %next_in74, align 8, !dbg !6761
  %arrayidx75 = getelementptr inbounds i8, i8* %53, i64 5, !dbg !6760
  %54 = load i8, i8* %arrayidx75, align 1, !dbg !6760
  %conv76 = zext i8 %54 to i32, !dbg !6762
  %shl77 = shl i32 %conv76, 8, !dbg !6763
  %conv78 = zext i32 %shl77 to i64, !dbg !6764
  %or79 = or i64 %or73, %conv78, !dbg !6765
  %55 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6766
  %next_in80 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %55, i32 0, i32 0, !dbg !6767
  %56 = load i8*, i8** %next_in80, align 8, !dbg !6767
  %arrayidx81 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !6766
  %57 = load i8, i8* %arrayidx81, align 1, !dbg !6766
  %conv82 = zext i8 %57 to i32, !dbg !6768
  %conv83 = zext i32 %conv82 to i64, !dbg !6768
  %or84 = or i64 %or79, %conv83, !dbg !6769
  %58 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6770
  %cache_buffer85 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %58, i32 0, i32 0, !dbg !6771
  store i64 %or84, i64* %cache_buffer85, align 8, !dbg !6772
  %59 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6773
  %next_in86 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %59, i32 0, i32 0, !dbg !6774
  %60 = load i8*, i8** %next_in86, align 8, !dbg !6775
  %add.ptr87 = getelementptr inbounds i8, i8* %60, i64 6, !dbg !6775
  store i8* %add.ptr87, i8** %next_in86, align 8, !dbg !6775
  %61 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6776
  %avail_in88 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %61, i32 0, i32 1, !dbg !6777
  %62 = load i64, i64* %avail_in88, align 8, !dbg !6778
  %sub89 = sub nsw i64 %62, 6, !dbg !6778
  store i64 %sub89, i64* %avail_in88, align 8, !dbg !6778
  %63 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6779
  %cache_avail90 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %63, i32 0, i32 1, !dbg !6780
  %64 = load i32, i32* %cache_avail90, align 8, !dbg !6781
  %add91 = add nsw i32 %64, 48, !dbg !6781
  store i32 %add91, i32* %cache_avail90, align 8, !dbg !6781
  store i32 1, i32* %retval, align 4, !dbg !6782
  br label %return, !dbg !6782

if.end92:                                         ; preds = %sw.bb45
  br label %sw.epilog, !dbg !6783

sw.bb93:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !6784
  br label %return, !dbg !6784

sw.default:                                       ; preds = %for.cond
  br label %sw.epilog, !dbg !6785

sw.epilog:                                        ; preds = %sw.default, %if.end92, %if.end
  %65 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6786
  %avail_in94 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %65, i32 0, i32 1, !dbg !6788
  %66 = load i64, i64* %avail_in94, align 8, !dbg !6788
  %cmp95 = icmp slt i64 %66, 2, !dbg !6789
  br i1 %cmp95, label %if.then97, label %if.end105, !dbg !6790

if.then97:                                        ; preds = %sw.epilog
  %67 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6791
  %avail_in98 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %67, i32 0, i32 1, !dbg !6794
  %68 = load i64, i64* %avail_in98, align 8, !dbg !6794
  %cmp99 = icmp eq i64 %68, 1, !dbg !6795
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !6796

if.then101:                                       ; preds = %if.then97
  %69 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6797
  %next_in102 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %69, i32 0, i32 0, !dbg !6799
  %70 = load i8*, i8** %next_in102, align 8, !dbg !6800
  %incdec.ptr = getelementptr inbounds i8, i8* %70, i32 1, !dbg !6800
  store i8* %incdec.ptr, i8** %next_in102, align 8, !dbg !6800
  %71 = load i8, i8* %70, align 1, !dbg !6801
  %72 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6802
  %odd = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %72, i32 0, i32 2, !dbg !6803
  store i8 %71, i8* %odd, align 4, !dbg !6804
  %73 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6805
  %avail_in103 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %73, i32 0, i32 1, !dbg !6806
  %74 = load i64, i64* %avail_in103, align 8, !dbg !6807
  %dec = add nsw i64 %74, -1, !dbg !6807
  store i64 %dec, i64* %avail_in103, align 8, !dbg !6807
  %75 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6808
  %have_odd = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %75, i32 0, i32 3, !dbg !6809
  store i8 1, i8* %have_odd, align 1, !dbg !6810
  br label %if.end104, !dbg !6811

if.end104:                                        ; preds = %if.then101, %if.then97
  store i32 0, i32* %retval, align 4, !dbg !6812
  br label %return, !dbg !6812

if.end105:                                        ; preds = %sw.epilog
  %76 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6813
  %cache_buffer106 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %76, i32 0, i32 0, !dbg !6814
  %77 = load i64, i64* %cache_buffer106, align 8, !dbg !6814
  %shl107 = shl i64 %77, 16, !dbg !6815
  %78 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6816
  %next_in108 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %78, i32 0, i32 0, !dbg !6817
  %79 = load i8*, i8** %next_in108, align 8, !dbg !6817
  %call = call zeroext i16 @archive_le16dec(i8* %79), !dbg !6818
  %conv109 = zext i16 %call to i64, !dbg !6818
  %or110 = or i64 %shl107, %conv109, !dbg !6819
  %80 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6820
  %cache_buffer111 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %80, i32 0, i32 0, !dbg !6821
  store i64 %or110, i64* %cache_buffer111, align 8, !dbg !6822
  %81 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6823
  %next_in112 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %81, i32 0, i32 0, !dbg !6824
  %82 = load i8*, i8** %next_in112, align 8, !dbg !6825
  %add.ptr113 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !6825
  store i8* %add.ptr113, i8** %next_in112, align 8, !dbg !6825
  %83 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !6826
  %avail_in114 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %83, i32 0, i32 1, !dbg !6827
  %84 = load i64, i64* %avail_in114, align 8, !dbg !6828
  %sub115 = sub nsw i64 %84, 2, !dbg !6828
  store i64 %sub115, i64* %avail_in114, align 8, !dbg !6828
  %85 = load %struct.lzx_br*, %struct.lzx_br** %br.addr, align 8, !dbg !6829
  %cache_avail116 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %85, i32 0, i32 1, !dbg !6830
  %86 = load i32, i32* %cache_avail116, align 8, !dbg !6831
  %add117 = add nsw i32 %86, 16, !dbg !6831
  store i32 %add117, i32* %cache_avail116, align 8, !dbg !6831
  %87 = load i32, i32* %n, align 4, !dbg !6832
  %sub118 = sub nsw i32 %87, 16, !dbg !6832
  store i32 %sub118, i32* %n, align 4, !dbg !6832
  br label %for.cond, !dbg !6833

return:                                           ; preds = %if.end104, %sw.bb93, %if.then49, %if.then
  %88 = load i32, i32* %retval, align 4, !dbg !6835
  ret i32 %88, !dbg !6835
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @archive_le16enc(i8* %pp, i16 zeroext %u) #6 !dbg !592 {
entry:
  %pp.addr = alloca i8*, align 8
  %u.addr = alloca i16, align 2
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !6836, metadata !638), !dbg !6837
  store i16 %u, i16* %u.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %u.addr, metadata !6838, metadata !638), !dbg !6839
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6840, metadata !638), !dbg !6841
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !6842
  store i8* %0, i8** %p, align 8, !dbg !6841
  %1 = load i16, i16* %u.addr, align 2, !dbg !6843
  %conv = zext i16 %1 to i32, !dbg !6843
  %and = and i32 %conv, 255, !dbg !6844
  %conv1 = trunc i32 %and to i8, !dbg !6843
  %2 = load i8*, i8** %p, align 8, !dbg !6845
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !6845
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !6846
  %3 = load i16, i16* %u.addr, align 2, !dbg !6847
  %conv2 = zext i16 %3 to i32, !dbg !6847
  %shr = ashr i32 %conv2, 8, !dbg !6848
  %and3 = and i32 %shr, 255, !dbg !6849
  %conv4 = trunc i32 %and3 to i8, !dbg !6850
  %4 = load i8*, i8** %p, align 8, !dbg !6851
  %arrayidx5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !6851
  store i8 %conv4, i8* %arrayidx5, align 1, !dbg !6852
  ret void, !dbg !6853
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_make_huffman_table(%struct.huffman* %hf) #0 !dbg !595 {
entry:
  %retval = alloca i32, align 4
  %hf.addr = alloca %struct.huffman*, align 8
  %tbl = alloca i16*, align 8
  %bitlen = alloca i8*, align 8
  %bitptn = alloca [17 x i32], align 16
  %weight = alloca [17 x i32], align 16
  %i = alloca i32, align 4
  %maxbits = alloca i32, align 4
  %ptn = alloca i32, align 4
  %tbl_size = alloca i32, align 4
  %w = alloca i32, align 4
  %diffbits = alloca i32, align 4
  %len_avail = alloca i32, align 4
  %ebits = alloca i32, align 4
  %htbl_max = alloca i32, align 4
  %p = alloca i16*, align 8
  %p60 = alloca i16*, align 8
  %len = alloca i32, align 4
  %cnt = alloca i32, align 4
  %bit = alloca i16, align 2
  %extlen = alloca i32, align 4
  %ht = alloca %struct.htree_t*, align 8
  store %struct.huffman* %hf, %struct.huffman** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman** %hf.addr, metadata !6854, metadata !638), !dbg !6855
  call void @llvm.dbg.declare(metadata i16** %tbl, metadata !6856, metadata !638), !dbg !6857
  call void @llvm.dbg.declare(metadata i8** %bitlen, metadata !6858, metadata !638), !dbg !6859
  call void @llvm.dbg.declare(metadata [17 x i32]* %bitptn, metadata !6860, metadata !638), !dbg !6861
  call void @llvm.dbg.declare(metadata [17 x i32]* %weight, metadata !6862, metadata !638), !dbg !6863
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6864, metadata !638), !dbg !6865
  call void @llvm.dbg.declare(metadata i32* %maxbits, metadata !6866, metadata !638), !dbg !6867
  store i32 0, i32* %maxbits, align 4, !dbg !6867
  call void @llvm.dbg.declare(metadata i32* %ptn, metadata !6868, metadata !638), !dbg !6869
  call void @llvm.dbg.declare(metadata i32* %tbl_size, metadata !6870, metadata !638), !dbg !6871
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6872, metadata !638), !dbg !6873
  call void @llvm.dbg.declare(metadata i32* %diffbits, metadata !6874, metadata !638), !dbg !6875
  call void @llvm.dbg.declare(metadata i32* %len_avail, metadata !6876, metadata !638), !dbg !6877
  store i32 0, i32* %ptn, align 4, !dbg !6878
  store i32 1, i32* %i, align 4, !dbg !6879
  store i32 32768, i32* %w, align 4, !dbg !6881
  br label %for.cond, !dbg !6882

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6883
  %cmp = icmp sle i32 %0, 16, !dbg !6886
  br i1 %cmp, label %for.body, label %for.end, !dbg !6887

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %ptn, align 4, !dbg !6888
  %2 = load i32, i32* %i, align 4, !dbg !6890
  %idxprom = sext i32 %2 to i64, !dbg !6891
  %arrayidx = getelementptr inbounds [17 x i32], [17 x i32]* %bitptn, i64 0, i64 %idxprom, !dbg !6891
  store i32 %1, i32* %arrayidx, align 4, !dbg !6892
  %3 = load i32, i32* %w, align 4, !dbg !6893
  %4 = load i32, i32* %i, align 4, !dbg !6894
  %idxprom1 = sext i32 %4 to i64, !dbg !6895
  %arrayidx2 = getelementptr inbounds [17 x i32], [17 x i32]* %weight, i64 0, i64 %idxprom1, !dbg !6895
  store i32 %3, i32* %arrayidx2, align 4, !dbg !6896
  %5 = load i32, i32* %i, align 4, !dbg !6897
  %idxprom3 = sext i32 %5 to i64, !dbg !6899
  %6 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !6899
  %freq = getelementptr inbounds %struct.huffman, %struct.huffman* %6, i32 0, i32 1, !dbg !6900
  %arrayidx4 = getelementptr inbounds [17 x i32], [17 x i32]* %freq, i64 0, i64 %idxprom3, !dbg !6899
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !6899
  %tobool = icmp ne i32 %7, 0, !dbg !6899
  br i1 %tobool, label %if.then, label %if.end, !dbg !6901

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6902
  %idxprom5 = sext i32 %8 to i64, !dbg !6904
  %9 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !6904
  %freq6 = getelementptr inbounds %struct.huffman, %struct.huffman* %9, i32 0, i32 1, !dbg !6905
  %arrayidx7 = getelementptr inbounds [17 x i32], [17 x i32]* %freq6, i64 0, i64 %idxprom5, !dbg !6904
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !6904
  %11 = load i32, i32* %w, align 4, !dbg !6906
  %mul = mul nsw i32 %10, %11, !dbg !6907
  %12 = load i32, i32* %ptn, align 4, !dbg !6908
  %add = add nsw i32 %12, %mul, !dbg !6908
  store i32 %add, i32* %ptn, align 4, !dbg !6908
  %13 = load i32, i32* %i, align 4, !dbg !6909
  store i32 %13, i32* %maxbits, align 4, !dbg !6910
  br label %if.end, !dbg !6911

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6912

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !6913
  %inc = add nsw i32 %14, 1, !dbg !6913
  store i32 %inc, i32* %i, align 4, !dbg !6913
  %15 = load i32, i32* %w, align 4, !dbg !6915
  %shr = ashr i32 %15, 1, !dbg !6915
  store i32 %shr, i32* %w, align 4, !dbg !6915
  br label %for.cond, !dbg !6916

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %ptn, align 4, !dbg !6917
  %and = and i32 %16, 65535, !dbg !6919
  %cmp8 = icmp ne i32 %and, 0, !dbg !6920
  br i1 %cmp8, label %if.then10, label %lor.lhs.false, !dbg !6921

lor.lhs.false:                                    ; preds = %for.end
  %17 = load i32, i32* %maxbits, align 4, !dbg !6922
  %18 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !6924
  %tbl_bits = getelementptr inbounds %struct.huffman, %struct.huffman* %18, i32 0, i32 5, !dbg !6925
  %19 = load i32, i32* %tbl_bits, align 8, !dbg !6925
  %cmp9 = icmp sgt i32 %17, %19, !dbg !6926
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6927

if.then10:                                        ; preds = %lor.lhs.false, %for.end
  store i32 0, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

if.end11:                                         ; preds = %lor.lhs.false
  %20 = load i32, i32* %maxbits, align 4, !dbg !6929
  %21 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !6930
  %max_bits = getelementptr inbounds %struct.huffman, %struct.huffman* %21, i32 0, i32 3, !dbg !6931
  store i32 %20, i32* %max_bits, align 8, !dbg !6932
  %22 = load i32, i32* %maxbits, align 4, !dbg !6933
  %cmp12 = icmp slt i32 %22, 16, !dbg !6935
  br i1 %cmp12, label %if.then13, label %if.end26, !dbg !6936

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %ebits, metadata !6937, metadata !638), !dbg !6939
  %23 = load i32, i32* %maxbits, align 4, !dbg !6940
  %sub = sub nsw i32 16, %23, !dbg !6941
  store i32 %sub, i32* %ebits, align 4, !dbg !6939
  store i32 1, i32* %i, align 4, !dbg !6942
  br label %for.cond14, !dbg !6944

for.cond14:                                       ; preds = %for.inc23, %if.then13
  %24 = load i32, i32* %i, align 4, !dbg !6945
  %25 = load i32, i32* %maxbits, align 4, !dbg !6948
  %cmp15 = icmp sle i32 %24, %25, !dbg !6949
  br i1 %cmp15, label %for.body16, label %for.end25, !dbg !6950

for.body16:                                       ; preds = %for.cond14
  %26 = load i32, i32* %ebits, align 4, !dbg !6951
  %27 = load i32, i32* %i, align 4, !dbg !6953
  %idxprom17 = sext i32 %27 to i64, !dbg !6954
  %arrayidx18 = getelementptr inbounds [17 x i32], [17 x i32]* %bitptn, i64 0, i64 %idxprom17, !dbg !6954
  %28 = load i32, i32* %arrayidx18, align 4, !dbg !6955
  %shr19 = ashr i32 %28, %26, !dbg !6955
  store i32 %shr19, i32* %arrayidx18, align 4, !dbg !6955
  %29 = load i32, i32* %ebits, align 4, !dbg !6956
  %30 = load i32, i32* %i, align 4, !dbg !6957
  %idxprom20 = sext i32 %30 to i64, !dbg !6958
  %arrayidx21 = getelementptr inbounds [17 x i32], [17 x i32]* %weight, i64 0, i64 %idxprom20, !dbg !6958
  %31 = load i32, i32* %arrayidx21, align 4, !dbg !6959
  %shr22 = ashr i32 %31, %29, !dbg !6959
  store i32 %shr22, i32* %arrayidx21, align 4, !dbg !6959
  br label %for.inc23, !dbg !6960

for.inc23:                                        ; preds = %for.body16
  %32 = load i32, i32* %i, align 4, !dbg !6961
  %inc24 = add nsw i32 %32, 1, !dbg !6961
  store i32 %inc24, i32* %i, align 4, !dbg !6961
  br label %for.cond14, !dbg !6963

for.end25:                                        ; preds = %for.cond14
  br label %if.end26, !dbg !6964

if.end26:                                         ; preds = %for.end25, %if.end11
  %33 = load i32, i32* %maxbits, align 4, !dbg !6965
  %cmp27 = icmp sgt i32 %33, 10, !dbg !6967
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !6968

if.then28:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata i32* %htbl_max, metadata !6969, metadata !638), !dbg !6971
  call void @llvm.dbg.declare(metadata i16** %p, metadata !6972, metadata !638), !dbg !6973
  %34 = load i32, i32* %maxbits, align 4, !dbg !6974
  %sub29 = sub nsw i32 %34, 10, !dbg !6975
  store i32 %sub29, i32* %diffbits, align 4, !dbg !6976
  store i32 1, i32* %i, align 4, !dbg !6977
  br label %for.cond30, !dbg !6979

for.cond30:                                       ; preds = %for.inc39, %if.then28
  %35 = load i32, i32* %i, align 4, !dbg !6980
  %cmp31 = icmp sle i32 %35, 10, !dbg !6983
  br i1 %cmp31, label %for.body32, label %for.end41, !dbg !6984

for.body32:                                       ; preds = %for.cond30
  %36 = load i32, i32* %diffbits, align 4, !dbg !6985
  %37 = load i32, i32* %i, align 4, !dbg !6987
  %idxprom33 = sext i32 %37 to i64, !dbg !6988
  %arrayidx34 = getelementptr inbounds [17 x i32], [17 x i32]* %bitptn, i64 0, i64 %idxprom33, !dbg !6988
  %38 = load i32, i32* %arrayidx34, align 4, !dbg !6989
  %shr35 = ashr i32 %38, %36, !dbg !6989
  store i32 %shr35, i32* %arrayidx34, align 4, !dbg !6989
  %39 = load i32, i32* %diffbits, align 4, !dbg !6990
  %40 = load i32, i32* %i, align 4, !dbg !6991
  %idxprom36 = sext i32 %40 to i64, !dbg !6992
  %arrayidx37 = getelementptr inbounds [17 x i32], [17 x i32]* %weight, i64 0, i64 %idxprom36, !dbg !6992
  %41 = load i32, i32* %arrayidx37, align 4, !dbg !6993
  %shr38 = ashr i32 %41, %39, !dbg !6993
  store i32 %shr38, i32* %arrayidx37, align 4, !dbg !6993
  br label %for.inc39, !dbg !6994

for.inc39:                                        ; preds = %for.body32
  %42 = load i32, i32* %i, align 4, !dbg !6995
  %inc40 = add nsw i32 %42, 1, !dbg !6995
  store i32 %inc40, i32* %i, align 4, !dbg !6995
  br label %for.cond30, !dbg !6997

for.end41:                                        ; preds = %for.cond30
  %arrayidx42 = getelementptr inbounds [17 x i32], [17 x i32]* %bitptn, i64 0, i64 10, !dbg !6998
  %43 = load i32, i32* %arrayidx42, align 8, !dbg !6998
  %arrayidx43 = getelementptr inbounds [17 x i32], [17 x i32]* %weight, i64 0, i64 10, !dbg !6999
  %44 = load i32, i32* %arrayidx43, align 8, !dbg !6999
  %45 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7000
  %freq44 = getelementptr inbounds %struct.huffman, %struct.huffman* %45, i32 0, i32 1, !dbg !7001
  %arrayidx45 = getelementptr inbounds [17 x i32], [17 x i32]* %freq44, i64 0, i64 10, !dbg !7000
  %46 = load i32, i32* %arrayidx45, align 4, !dbg !7000
  %mul46 = mul nsw i32 %44, %46, !dbg !7002
  %add47 = add nsw i32 %43, %mul46, !dbg !7003
  store i32 %add47, i32* %htbl_max, align 4, !dbg !7004
  %47 = load i32, i32* %htbl_max, align 4, !dbg !7005
  %idxprom48 = sext i32 %47 to i64, !dbg !7006
  %48 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7006
  %tbl49 = getelementptr inbounds %struct.huffman, %struct.huffman* %48, i32 0, i32 8, !dbg !7007
  %49 = load i16*, i16** %tbl49, align 8, !dbg !7007
  %arrayidx50 = getelementptr inbounds i16, i16* %49, i64 %idxprom48, !dbg !7006
  store i16* %arrayidx50, i16** %p, align 8, !dbg !7008
  br label %while.cond, !dbg !7009

while.cond:                                       ; preds = %while.body, %for.end41
  %50 = load i16*, i16** %p, align 8, !dbg !7010
  %51 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7012
  %tbl51 = getelementptr inbounds %struct.huffman, %struct.huffman* %51, i32 0, i32 8, !dbg !7013
  %52 = load i16*, i16** %tbl51, align 8, !dbg !7013
  %arrayidx52 = getelementptr inbounds i16, i16* %52, i64 1024, !dbg !7012
  %cmp53 = icmp ult i16* %50, %arrayidx52, !dbg !7014
  br i1 %cmp53, label %while.body, label %while.end, !dbg !7015

while.body:                                       ; preds = %while.cond
  %53 = load i16*, i16** %p, align 8, !dbg !7016
  %incdec.ptr = getelementptr inbounds i16, i16* %53, i32 1, !dbg !7016
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !7016
  store i16 0, i16* %53, align 2, !dbg !7017
  br label %while.cond, !dbg !7018

while.end:                                        ; preds = %while.cond
  br label %if.end54, !dbg !7020

if.else:                                          ; preds = %if.end26
  store i32 0, i32* %diffbits, align 4, !dbg !7021
  br label %if.end54

if.end54:                                         ; preds = %if.else, %while.end
  %54 = load i32, i32* %diffbits, align 4, !dbg !7022
  %55 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7023
  %shift_bits = getelementptr inbounds %struct.huffman, %struct.huffman* %55, i32 0, i32 4, !dbg !7024
  store i32 %54, i32* %shift_bits, align 4, !dbg !7025
  store i32 1024, i32* %tbl_size, align 4, !dbg !7026
  %56 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7027
  %tbl55 = getelementptr inbounds %struct.huffman, %struct.huffman* %56, i32 0, i32 8, !dbg !7028
  %57 = load i16*, i16** %tbl55, align 8, !dbg !7028
  store i16* %57, i16** %tbl, align 8, !dbg !7029
  %58 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7030
  %bitlen56 = getelementptr inbounds %struct.huffman, %struct.huffman* %58, i32 0, i32 2, !dbg !7031
  %59 = load i8*, i8** %bitlen56, align 8, !dbg !7031
  store i8* %59, i8** %bitlen, align 8, !dbg !7032
  %60 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7033
  %len_size = getelementptr inbounds %struct.huffman, %struct.huffman* %60, i32 0, i32 0, !dbg !7034
  %61 = load i32, i32* %len_size, align 8, !dbg !7034
  store i32 %61, i32* %len_avail, align 4, !dbg !7035
  %62 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7036
  %tree_used = getelementptr inbounds %struct.huffman, %struct.huffman* %62, i32 0, i32 6, !dbg !7037
  store i32 0, i32* %tree_used, align 4, !dbg !7038
  store i32 0, i32* %i, align 4, !dbg !7039
  br label %for.cond57, !dbg !7041

for.cond57:                                       ; preds = %for.inc235, %if.end54
  %63 = load i32, i32* %i, align 4, !dbg !7042
  %64 = load i32, i32* %len_avail, align 4, !dbg !7045
  %cmp58 = icmp slt i32 %63, %64, !dbg !7046
  br i1 %cmp58, label %for.body59, label %for.end237, !dbg !7047

for.body59:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata i16** %p60, metadata !7048, metadata !638), !dbg !7050
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7051, metadata !638), !dbg !7052
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !7053, metadata !638), !dbg !7054
  call void @llvm.dbg.declare(metadata i16* %bit, metadata !7055, metadata !638), !dbg !7056
  call void @llvm.dbg.declare(metadata i32* %extlen, metadata !7057, metadata !638), !dbg !7058
  call void @llvm.dbg.declare(metadata %struct.htree_t** %ht, metadata !7059, metadata !638), !dbg !7060
  %65 = load i32, i32* %i, align 4, !dbg !7061
  %idxprom61 = sext i32 %65 to i64, !dbg !7063
  %66 = load i8*, i8** %bitlen, align 8, !dbg !7063
  %arrayidx62 = getelementptr inbounds i8, i8* %66, i64 %idxprom61, !dbg !7063
  %67 = load i8, i8* %arrayidx62, align 1, !dbg !7063
  %conv = zext i8 %67 to i32, !dbg !7063
  %cmp63 = icmp eq i32 %conv, 0, !dbg !7064
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !7065

if.then65:                                        ; preds = %for.body59
  br label %for.inc235, !dbg !7066

if.end66:                                         ; preds = %for.body59
  %68 = load i32, i32* %i, align 4, !dbg !7067
  %idxprom67 = sext i32 %68 to i64, !dbg !7068
  %69 = load i8*, i8** %bitlen, align 8, !dbg !7068
  %arrayidx68 = getelementptr inbounds i8, i8* %69, i64 %idxprom67, !dbg !7068
  %70 = load i8, i8* %arrayidx68, align 1, !dbg !7068
  %conv69 = zext i8 %70 to i32, !dbg !7068
  store i32 %conv69, i32* %len, align 4, !dbg !7069
  %71 = load i32, i32* %len, align 4, !dbg !7070
  %idxprom70 = sext i32 %71 to i64, !dbg !7071
  %arrayidx71 = getelementptr inbounds [17 x i32], [17 x i32]* %bitptn, i64 0, i64 %idxprom70, !dbg !7071
  %72 = load i32, i32* %arrayidx71, align 4, !dbg !7071
  store i32 %72, i32* %ptn, align 4, !dbg !7072
  %73 = load i32, i32* %len, align 4, !dbg !7073
  %idxprom72 = sext i32 %73 to i64, !dbg !7074
  %arrayidx73 = getelementptr inbounds [17 x i32], [17 x i32]* %weight, i64 0, i64 %idxprom72, !dbg !7074
  %74 = load i32, i32* %arrayidx73, align 4, !dbg !7074
  store i32 %74, i32* %cnt, align 4, !dbg !7075
  %75 = load i32, i32* %len, align 4, !dbg !7076
  %cmp74 = icmp sle i32 %75, 10, !dbg !7078
  br i1 %cmp74, label %if.then76, label %if.end94, !dbg !7079

if.then76:                                        ; preds = %if.end66
  %76 = load i32, i32* %ptn, align 4, !dbg !7080
  %77 = load i32, i32* %cnt, align 4, !dbg !7083
  %add77 = add nsw i32 %76, %77, !dbg !7084
  %78 = load i32, i32* %len, align 4, !dbg !7085
  %idxprom78 = sext i32 %78 to i64, !dbg !7086
  %arrayidx79 = getelementptr inbounds [17 x i32], [17 x i32]* %bitptn, i64 0, i64 %idxprom78, !dbg !7086
  store i32 %add77, i32* %arrayidx79, align 4, !dbg !7087
  %79 = load i32, i32* %tbl_size, align 4, !dbg !7088
  %cmp80 = icmp sgt i32 %add77, %79, !dbg !7089
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !7090

if.then82:                                        ; preds = %if.then76
  store i32 0, i32* %retval, align 4, !dbg !7091
  br label %return, !dbg !7091

if.end83:                                         ; preds = %if.then76
  %80 = load i32, i32* %ptn, align 4, !dbg !7092
  %idxprom84 = sext i32 %80 to i64, !dbg !7093
  %81 = load i16*, i16** %tbl, align 8, !dbg !7093
  %arrayidx85 = getelementptr inbounds i16, i16* %81, i64 %idxprom84, !dbg !7093
  store i16* %arrayidx85, i16** %p60, align 8, !dbg !7094
  br label %while.cond86, !dbg !7095

while.cond86:                                     ; preds = %while.body89, %if.end83
  %82 = load i32, i32* %cnt, align 4, !dbg !7096
  %dec = add nsw i32 %82, -1, !dbg !7096
  store i32 %dec, i32* %cnt, align 4, !dbg !7096
  %cmp87 = icmp sge i32 %dec, 0, !dbg !7098
  br i1 %cmp87, label %while.body89, label %while.end93, !dbg !7099

while.body89:                                     ; preds = %while.cond86
  %83 = load i32, i32* %i, align 4, !dbg !7100
  %conv90 = trunc i32 %83 to i16, !dbg !7101
  %84 = load i32, i32* %cnt, align 4, !dbg !7102
  %idxprom91 = sext i32 %84 to i64, !dbg !7103
  %85 = load i16*, i16** %p60, align 8, !dbg !7103
  %arrayidx92 = getelementptr inbounds i16, i16* %85, i64 %idxprom91, !dbg !7103
  store i16 %conv90, i16* %arrayidx92, align 2, !dbg !7104
  br label %while.cond86, !dbg !7105

while.end93:                                      ; preds = %while.cond86
  br label %for.inc235, !dbg !7107

if.end94:                                         ; preds = %if.end66
  %86 = load i32, i32* %ptn, align 4, !dbg !7108
  %87 = load i32, i32* %cnt, align 4, !dbg !7109
  %add95 = add nsw i32 %86, %87, !dbg !7110
  %88 = load i32, i32* %len, align 4, !dbg !7111
  %idxprom96 = sext i32 %88 to i64, !dbg !7112
  %arrayidx97 = getelementptr inbounds [17 x i32], [17 x i32]* %bitptn, i64 0, i64 %idxprom96, !dbg !7112
  store i32 %add95, i32* %arrayidx97, align 4, !dbg !7113
  %89 = load i32, i32* %diffbits, align 4, !dbg !7114
  %sub98 = sub nsw i32 %89, 1, !dbg !7115
  %shl = shl i32 1, %sub98, !dbg !7116
  %conv99 = trunc i32 %shl to i16, !dbg !7117
  store i16 %conv99, i16* %bit, align 2, !dbg !7118
  %90 = load i32, i32* %len, align 4, !dbg !7119
  %sub100 = sub nsw i32 %90, 10, !dbg !7120
  store i32 %sub100, i32* %extlen, align 4, !dbg !7121
  %91 = load i32, i32* %ptn, align 4, !dbg !7122
  %92 = load i32, i32* %diffbits, align 4, !dbg !7123
  %shr101 = ashr i32 %91, %92, !dbg !7124
  %idxprom102 = sext i32 %shr101 to i64, !dbg !7125
  %93 = load i16*, i16** %tbl, align 8, !dbg !7125
  %arrayidx103 = getelementptr inbounds i16, i16* %93, i64 %idxprom102, !dbg !7125
  store i16* %arrayidx103, i16** %p60, align 8, !dbg !7126
  %94 = load i16*, i16** %p60, align 8, !dbg !7127
  %95 = load i16, i16* %94, align 2, !dbg !7129
  %conv104 = zext i16 %95 to i32, !dbg !7129
  %cmp105 = icmp eq i32 %conv104, 0, !dbg !7130
  br i1 %cmp105, label %if.then107, label %if.else120, !dbg !7131

if.then107:                                       ; preds = %if.end94
  %96 = load i32, i32* %len_avail, align 4, !dbg !7132
  %97 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7134
  %tree_used108 = getelementptr inbounds %struct.huffman, %struct.huffman* %97, i32 0, i32 6, !dbg !7135
  %98 = load i32, i32* %tree_used108, align 4, !dbg !7135
  %add109 = add nsw i32 %96, %98, !dbg !7136
  %conv110 = trunc i32 %add109 to i16, !dbg !7132
  %99 = load i16*, i16** %p60, align 8, !dbg !7137
  store i16 %conv110, i16* %99, align 2, !dbg !7138
  %100 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7139
  %tree_used111 = getelementptr inbounds %struct.huffman, %struct.huffman* %100, i32 0, i32 6, !dbg !7140
  %101 = load i32, i32* %tree_used111, align 4, !dbg !7141
  %inc112 = add nsw i32 %101, 1, !dbg !7141
  store i32 %inc112, i32* %tree_used111, align 4, !dbg !7141
  %idxprom113 = sext i32 %101 to i64, !dbg !7142
  %102 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7142
  %tree = getelementptr inbounds %struct.huffman, %struct.huffman* %102, i32 0, i32 9, !dbg !7143
  %103 = load %struct.htree_t*, %struct.htree_t** %tree, align 8, !dbg !7143
  %arrayidx114 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %103, i64 %idxprom113, !dbg !7142
  store %struct.htree_t* %arrayidx114, %struct.htree_t** %ht, align 8, !dbg !7144
  %104 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7145
  %tree_used115 = getelementptr inbounds %struct.huffman, %struct.huffman* %104, i32 0, i32 6, !dbg !7147
  %105 = load i32, i32* %tree_used115, align 4, !dbg !7147
  %106 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7148
  %tree_avail = getelementptr inbounds %struct.huffman, %struct.huffman* %106, i32 0, i32 7, !dbg !7149
  %107 = load i32, i32* %tree_avail, align 8, !dbg !7149
  %cmp116 = icmp sgt i32 %105, %107, !dbg !7150
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !7151

if.then118:                                       ; preds = %if.then107
  store i32 0, i32* %retval, align 4, !dbg !7152
  br label %return, !dbg !7152

if.end119:                                        ; preds = %if.then107
  %108 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7153
  %left = getelementptr inbounds %struct.htree_t, %struct.htree_t* %108, i32 0, i32 0, !dbg !7154
  store i16 0, i16* %left, align 2, !dbg !7155
  %109 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7156
  %right = getelementptr inbounds %struct.htree_t, %struct.htree_t* %109, i32 0, i32 1, !dbg !7157
  store i16 0, i16* %right, align 2, !dbg !7158
  br label %if.end137, !dbg !7159

if.else120:                                       ; preds = %if.end94
  %110 = load i16*, i16** %p60, align 8, !dbg !7160
  %111 = load i16, i16* %110, align 2, !dbg !7163
  %conv121 = zext i16 %111 to i32, !dbg !7163
  %112 = load i32, i32* %len_avail, align 4, !dbg !7164
  %cmp122 = icmp slt i32 %conv121, %112, !dbg !7165
  br i1 %cmp122, label %if.then130, label %lor.lhs.false124, !dbg !7166

lor.lhs.false124:                                 ; preds = %if.else120
  %113 = load i16*, i16** %p60, align 8, !dbg !7167
  %114 = load i16, i16* %113, align 2, !dbg !7168
  %conv125 = zext i16 %114 to i32, !dbg !7168
  %115 = load i32, i32* %len_avail, align 4, !dbg !7169
  %116 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7170
  %tree_used126 = getelementptr inbounds %struct.huffman, %struct.huffman* %116, i32 0, i32 6, !dbg !7171
  %117 = load i32, i32* %tree_used126, align 4, !dbg !7171
  %add127 = add nsw i32 %115, %117, !dbg !7172
  %cmp128 = icmp sge i32 %conv125, %add127, !dbg !7173
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !7174

if.then130:                                       ; preds = %lor.lhs.false124, %if.else120
  store i32 0, i32* %retval, align 4, !dbg !7176
  br label %return, !dbg !7176

if.end131:                                        ; preds = %lor.lhs.false124
  %118 = load i16*, i16** %p60, align 8, !dbg !7177
  %119 = load i16, i16* %118, align 2, !dbg !7178
  %conv132 = zext i16 %119 to i32, !dbg !7178
  %120 = load i32, i32* %len_avail, align 4, !dbg !7179
  %sub133 = sub nsw i32 %conv132, %120, !dbg !7180
  %idxprom134 = sext i32 %sub133 to i64, !dbg !7181
  %121 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7181
  %tree135 = getelementptr inbounds %struct.huffman, %struct.huffman* %121, i32 0, i32 9, !dbg !7182
  %122 = load %struct.htree_t*, %struct.htree_t** %tree135, align 8, !dbg !7182
  %arrayidx136 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %122, i64 %idxprom134, !dbg !7181
  store %struct.htree_t* %arrayidx136, %struct.htree_t** %ht, align 8, !dbg !7183
  br label %if.end137

if.end137:                                        ; preds = %if.end131, %if.end119
  br label %while.cond138, !dbg !7184

while.cond138:                                    ; preds = %if.end208, %if.end137
  %123 = load i32, i32* %extlen, align 4, !dbg !7185
  %dec139 = add nsw i32 %123, -1, !dbg !7185
  store i32 %dec139, i32* %extlen, align 4, !dbg !7185
  %cmp140 = icmp sgt i32 %dec139, 0, !dbg !7187
  br i1 %cmp140, label %while.body142, label %while.end212, !dbg !7188

while.body142:                                    ; preds = %while.cond138
  %124 = load i32, i32* %ptn, align 4, !dbg !7189
  %125 = load i16, i16* %bit, align 2, !dbg !7192
  %conv143 = zext i16 %125 to i32, !dbg !7192
  %and144 = and i32 %124, %conv143, !dbg !7193
  %tobool145 = icmp ne i32 %and144, 0, !dbg !7193
  br i1 %tobool145, label %if.then146, label %if.else177, !dbg !7194

if.then146:                                       ; preds = %while.body142
  %126 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7195
  %left147 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %126, i32 0, i32 0, !dbg !7198
  %127 = load i16, i16* %left147, align 2, !dbg !7198
  %conv148 = zext i16 %127 to i32, !dbg !7195
  %128 = load i32, i32* %len_avail, align 4, !dbg !7199
  %cmp149 = icmp slt i32 %conv148, %128, !dbg !7200
  br i1 %cmp149, label %if.then151, label %if.else169, !dbg !7201

if.then151:                                       ; preds = %if.then146
  %129 = load i32, i32* %len_avail, align 4, !dbg !7202
  %130 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7204
  %tree_used152 = getelementptr inbounds %struct.huffman, %struct.huffman* %130, i32 0, i32 6, !dbg !7205
  %131 = load i32, i32* %tree_used152, align 4, !dbg !7205
  %add153 = add nsw i32 %129, %131, !dbg !7206
  %conv154 = trunc i32 %add153 to i16, !dbg !7202
  %132 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7207
  %left155 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %132, i32 0, i32 0, !dbg !7208
  store i16 %conv154, i16* %left155, align 2, !dbg !7209
  %133 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7210
  %tree_used156 = getelementptr inbounds %struct.huffman, %struct.huffman* %133, i32 0, i32 6, !dbg !7211
  %134 = load i32, i32* %tree_used156, align 4, !dbg !7212
  %inc157 = add nsw i32 %134, 1, !dbg !7212
  store i32 %inc157, i32* %tree_used156, align 4, !dbg !7212
  %idxprom158 = sext i32 %134 to i64, !dbg !7213
  %135 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7213
  %tree159 = getelementptr inbounds %struct.huffman, %struct.huffman* %135, i32 0, i32 9, !dbg !7214
  %136 = load %struct.htree_t*, %struct.htree_t** %tree159, align 8, !dbg !7214
  %arrayidx160 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %136, i64 %idxprom158, !dbg !7213
  store %struct.htree_t* %arrayidx160, %struct.htree_t** %ht, align 8, !dbg !7215
  %137 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7216
  %tree_used161 = getelementptr inbounds %struct.huffman, %struct.huffman* %137, i32 0, i32 6, !dbg !7218
  %138 = load i32, i32* %tree_used161, align 4, !dbg !7218
  %139 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7219
  %tree_avail162 = getelementptr inbounds %struct.huffman, %struct.huffman* %139, i32 0, i32 7, !dbg !7220
  %140 = load i32, i32* %tree_avail162, align 8, !dbg !7220
  %cmp163 = icmp sgt i32 %138, %140, !dbg !7221
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !7222

if.then165:                                       ; preds = %if.then151
  store i32 0, i32* %retval, align 4, !dbg !7223
  br label %return, !dbg !7223

if.end166:                                        ; preds = %if.then151
  %141 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7224
  %left167 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %141, i32 0, i32 0, !dbg !7225
  store i16 0, i16* %left167, align 2, !dbg !7226
  %142 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7227
  %right168 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %142, i32 0, i32 1, !dbg !7228
  store i16 0, i16* %right168, align 2, !dbg !7229
  br label %if.end176, !dbg !7230

if.else169:                                       ; preds = %if.then146
  %143 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7231
  %left170 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %143, i32 0, i32 0, !dbg !7233
  %144 = load i16, i16* %left170, align 2, !dbg !7233
  %conv171 = zext i16 %144 to i32, !dbg !7231
  %145 = load i32, i32* %len_avail, align 4, !dbg !7234
  %sub172 = sub nsw i32 %conv171, %145, !dbg !7235
  %idxprom173 = sext i32 %sub172 to i64, !dbg !7236
  %146 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7236
  %tree174 = getelementptr inbounds %struct.huffman, %struct.huffman* %146, i32 0, i32 9, !dbg !7237
  %147 = load %struct.htree_t*, %struct.htree_t** %tree174, align 8, !dbg !7237
  %arrayidx175 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %147, i64 %idxprom173, !dbg !7236
  store %struct.htree_t* %arrayidx175, %struct.htree_t** %ht, align 8, !dbg !7238
  br label %if.end176

if.end176:                                        ; preds = %if.else169, %if.end166
  br label %if.end208, !dbg !7239

if.else177:                                       ; preds = %while.body142
  %148 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7240
  %right178 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %148, i32 0, i32 1, !dbg !7243
  %149 = load i16, i16* %right178, align 2, !dbg !7243
  %conv179 = zext i16 %149 to i32, !dbg !7240
  %150 = load i32, i32* %len_avail, align 4, !dbg !7244
  %cmp180 = icmp slt i32 %conv179, %150, !dbg !7245
  br i1 %cmp180, label %if.then182, label %if.else200, !dbg !7246

if.then182:                                       ; preds = %if.else177
  %151 = load i32, i32* %len_avail, align 4, !dbg !7247
  %152 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7249
  %tree_used183 = getelementptr inbounds %struct.huffman, %struct.huffman* %152, i32 0, i32 6, !dbg !7250
  %153 = load i32, i32* %tree_used183, align 4, !dbg !7250
  %add184 = add nsw i32 %151, %153, !dbg !7251
  %conv185 = trunc i32 %add184 to i16, !dbg !7247
  %154 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7252
  %right186 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %154, i32 0, i32 1, !dbg !7253
  store i16 %conv185, i16* %right186, align 2, !dbg !7254
  %155 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7255
  %tree_used187 = getelementptr inbounds %struct.huffman, %struct.huffman* %155, i32 0, i32 6, !dbg !7256
  %156 = load i32, i32* %tree_used187, align 4, !dbg !7257
  %inc188 = add nsw i32 %156, 1, !dbg !7257
  store i32 %inc188, i32* %tree_used187, align 4, !dbg !7257
  %idxprom189 = sext i32 %156 to i64, !dbg !7258
  %157 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7258
  %tree190 = getelementptr inbounds %struct.huffman, %struct.huffman* %157, i32 0, i32 9, !dbg !7259
  %158 = load %struct.htree_t*, %struct.htree_t** %tree190, align 8, !dbg !7259
  %arrayidx191 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %158, i64 %idxprom189, !dbg !7258
  store %struct.htree_t* %arrayidx191, %struct.htree_t** %ht, align 8, !dbg !7260
  %159 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7261
  %tree_used192 = getelementptr inbounds %struct.huffman, %struct.huffman* %159, i32 0, i32 6, !dbg !7263
  %160 = load i32, i32* %tree_used192, align 4, !dbg !7263
  %161 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7264
  %tree_avail193 = getelementptr inbounds %struct.huffman, %struct.huffman* %161, i32 0, i32 7, !dbg !7265
  %162 = load i32, i32* %tree_avail193, align 8, !dbg !7265
  %cmp194 = icmp sgt i32 %160, %162, !dbg !7266
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !7267

if.then196:                                       ; preds = %if.then182
  store i32 0, i32* %retval, align 4, !dbg !7268
  br label %return, !dbg !7268

if.end197:                                        ; preds = %if.then182
  %163 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7269
  %left198 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %163, i32 0, i32 0, !dbg !7270
  store i16 0, i16* %left198, align 2, !dbg !7271
  %164 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7272
  %right199 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %164, i32 0, i32 1, !dbg !7273
  store i16 0, i16* %right199, align 2, !dbg !7274
  br label %if.end207, !dbg !7275

if.else200:                                       ; preds = %if.else177
  %165 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7276
  %right201 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %165, i32 0, i32 1, !dbg !7278
  %166 = load i16, i16* %right201, align 2, !dbg !7278
  %conv202 = zext i16 %166 to i32, !dbg !7276
  %167 = load i32, i32* %len_avail, align 4, !dbg !7279
  %sub203 = sub nsw i32 %conv202, %167, !dbg !7280
  %idxprom204 = sext i32 %sub203 to i64, !dbg !7281
  %168 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7281
  %tree205 = getelementptr inbounds %struct.huffman, %struct.huffman* %168, i32 0, i32 9, !dbg !7282
  %169 = load %struct.htree_t*, %struct.htree_t** %tree205, align 8, !dbg !7282
  %arrayidx206 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %169, i64 %idxprom204, !dbg !7281
  store %struct.htree_t* %arrayidx206, %struct.htree_t** %ht, align 8, !dbg !7283
  br label %if.end207

if.end207:                                        ; preds = %if.else200, %if.end197
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.end176
  %170 = load i16, i16* %bit, align 2, !dbg !7284
  %conv209 = zext i16 %170 to i32, !dbg !7284
  %shr210 = ashr i32 %conv209, 1, !dbg !7284
  %conv211 = trunc i32 %shr210 to i16, !dbg !7284
  store i16 %conv211, i16* %bit, align 2, !dbg !7284
  br label %while.cond138, !dbg !7285

while.end212:                                     ; preds = %while.cond138
  %171 = load i32, i32* %ptn, align 4, !dbg !7287
  %172 = load i16, i16* %bit, align 2, !dbg !7289
  %conv213 = zext i16 %172 to i32, !dbg !7289
  %and214 = and i32 %171, %conv213, !dbg !7290
  %tobool215 = icmp ne i32 %and214, 0, !dbg !7290
  br i1 %tobool215, label %if.then216, label %if.else225, !dbg !7291

if.then216:                                       ; preds = %while.end212
  %173 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7292
  %left217 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %173, i32 0, i32 0, !dbg !7295
  %174 = load i16, i16* %left217, align 2, !dbg !7295
  %conv218 = zext i16 %174 to i32, !dbg !7292
  %cmp219 = icmp ne i32 %conv218, 0, !dbg !7296
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !7297

if.then221:                                       ; preds = %if.then216
  store i32 0, i32* %retval, align 4, !dbg !7298
  br label %return, !dbg !7298

if.end222:                                        ; preds = %if.then216
  %175 = load i32, i32* %i, align 4, !dbg !7299
  %conv223 = trunc i32 %175 to i16, !dbg !7300
  %176 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7301
  %left224 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %176, i32 0, i32 0, !dbg !7302
  store i16 %conv223, i16* %left224, align 2, !dbg !7303
  br label %if.end234, !dbg !7304

if.else225:                                       ; preds = %while.end212
  %177 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7305
  %right226 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %177, i32 0, i32 1, !dbg !7308
  %178 = load i16, i16* %right226, align 2, !dbg !7308
  %conv227 = zext i16 %178 to i32, !dbg !7305
  %cmp228 = icmp ne i32 %conv227, 0, !dbg !7309
  br i1 %cmp228, label %if.then230, label %if.end231, !dbg !7310

if.then230:                                       ; preds = %if.else225
  store i32 0, i32* %retval, align 4, !dbg !7311
  br label %return, !dbg !7311

if.end231:                                        ; preds = %if.else225
  %179 = load i32, i32* %i, align 4, !dbg !7312
  %conv232 = trunc i32 %179 to i16, !dbg !7313
  %180 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7314
  %right233 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %180, i32 0, i32 1, !dbg !7315
  store i16 %conv232, i16* %right233, align 2, !dbg !7316
  br label %if.end234

if.end234:                                        ; preds = %if.end231, %if.end222
  br label %for.inc235, !dbg !7317

for.inc235:                                       ; preds = %if.end234, %while.end93, %if.then65
  %181 = load i32, i32* %i, align 4, !dbg !7318
  %inc236 = add nsw i32 %181, 1, !dbg !7318
  store i32 %inc236, i32* %i, align 4, !dbg !7318
  br label %for.cond57, !dbg !7320

for.end237:                                       ; preds = %for.cond57
  store i32 1, i32* %retval, align 4, !dbg !7321
  br label %return, !dbg !7321

return:                                           ; preds = %for.end237, %if.then230, %if.then221, %if.then196, %if.then165, %if.then130, %if.then118, %if.then82, %if.then10
  %182 = load i32, i32* %retval, align 4, !dbg !7322
  ret i32 %182, !dbg !7322
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_read_pre_tree(%struct.lzx_stream* %strm) #0 !dbg !598 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %ds = alloca %struct.lzx_dec*, align 8
  %br = alloca %struct.lzx_br*, align 8
  %i = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !7323, metadata !638), !dbg !7324
  call void @llvm.dbg.declare(metadata %struct.lzx_dec** %ds, metadata !7325, metadata !638), !dbg !7326
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7327
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !7328
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !7328
  store %struct.lzx_dec* %1, %struct.lzx_dec** %ds, align 8, !dbg !7326
  call void @llvm.dbg.declare(metadata %struct.lzx_br** %br, metadata !7329, metadata !638), !dbg !7330
  %2 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7331
  %br2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %2, i32 0, i32 21, !dbg !7332
  store %struct.lzx_br* %br2, %struct.lzx_br** %br, align 8, !dbg !7330
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7333, metadata !638), !dbg !7334
  %3 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7335
  %loop = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %3, i32 0, i32 26, !dbg !7337
  %4 = load i32, i32* %loop, align 8, !dbg !7337
  %cmp = icmp eq i32 %4, 0, !dbg !7338
  br i1 %cmp, label %if.then, label %if.end, !dbg !7339

if.then:                                          ; preds = %entry
  %5 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7340
  %pt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %5, i32 0, i32 25, !dbg !7341
  %freq = getelementptr inbounds %struct.huffman, %struct.huffman* %pt, i32 0, i32 1, !dbg !7342
  %arraydecay = getelementptr inbounds [17 x i32], [17 x i32]* %freq, i32 0, i32 0, !dbg !7343
  %6 = bitcast i32* %arraydecay to i8*, !dbg !7343
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 68, i32 4, i1 false), !dbg !7343
  br label %if.end, !dbg !7343

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7344
  %loop3 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %7, i32 0, i32 26, !dbg !7346
  %8 = load i32, i32* %loop3, align 8, !dbg !7346
  store i32 %8, i32* %i, align 4, !dbg !7347
  br label %for.cond, !dbg !7348

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !7349
  %10 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7352
  %pt4 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %10, i32 0, i32 25, !dbg !7353
  %len_size = getelementptr inbounds %struct.huffman, %struct.huffman* %pt4, i32 0, i32 0, !dbg !7354
  %11 = load i32, i32* %len_size, align 8, !dbg !7354
  %cmp5 = icmp slt i32 %9, %11, !dbg !7355
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7356

for.body:                                         ; preds = %for.cond
  %12 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7357
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %12, i32 0, i32 1, !dbg !7357
  %13 = load i32, i32* %cache_avail, align 8, !dbg !7357
  %cmp6 = icmp sge i32 %13, 4, !dbg !7357
  br i1 %cmp6, label %if.end12, label %lor.lhs.false, !dbg !7357

lor.lhs.false:                                    ; preds = %for.body
  %14 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7360
  %15 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7360
  %call = call i32 @lzx_br_fillup(%struct.lzx_stream* %14, %struct.lzx_br* %15), !dbg !7360
  %tobool = icmp ne i32 %call, 0, !dbg !7360
  br i1 %tobool, label %if.end12, label %lor.lhs.false7, !dbg !7360

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %16 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7362
  %cache_avail8 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %16, i32 0, i32 1, !dbg !7362
  %17 = load i32, i32* %cache_avail8, align 8, !dbg !7362
  %cmp9 = icmp sge i32 %17, 4, !dbg !7362
  br i1 %cmp9, label %if.end12, label %if.then10, !dbg !7364

if.then10:                                        ; preds = %lor.lhs.false7
  %18 = load i32, i32* %i, align 4, !dbg !7365
  %19 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7367
  %loop11 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %19, i32 0, i32 26, !dbg !7368
  store i32 %18, i32* %loop11, align 8, !dbg !7369
  store i32 0, i32* %retval, align 4, !dbg !7370
  br label %return, !dbg !7370

if.end12:                                         ; preds = %lor.lhs.false7, %lor.lhs.false, %for.body
  %20 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7371
  %cache_buffer = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %20, i32 0, i32 0, !dbg !7371
  %21 = load i64, i64* %cache_buffer, align 8, !dbg !7371
  %22 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7371
  %cache_avail13 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %22, i32 0, i32 1, !dbg !7371
  %23 = load i32, i32* %cache_avail13, align 8, !dbg !7371
  %sub = sub nsw i32 %23, 4, !dbg !7371
  %sh_prom = zext i32 %sub to i64, !dbg !7371
  %shr = lshr i64 %21, %sh_prom, !dbg !7371
  %conv = trunc i64 %shr to i32, !dbg !7371
  %24 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 4), align 16, !dbg !7371
  %and = and i32 %conv, %24, !dbg !7371
  %conv14 = trunc i32 %and to i8, !dbg !7371
  %25 = load i32, i32* %i, align 4, !dbg !7372
  %idxprom = sext i32 %25 to i64, !dbg !7373
  %26 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7373
  %pt15 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %26, i32 0, i32 25, !dbg !7374
  %bitlen = getelementptr inbounds %struct.huffman, %struct.huffman* %pt15, i32 0, i32 2, !dbg !7375
  %27 = load i8*, i8** %bitlen, align 8, !dbg !7375
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %idxprom, !dbg !7373
  store i8 %conv14, i8* %arrayidx, align 1, !dbg !7376
  %28 = load i32, i32* %i, align 4, !dbg !7377
  %idxprom16 = sext i32 %28 to i64, !dbg !7378
  %29 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7378
  %pt17 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %29, i32 0, i32 25, !dbg !7379
  %bitlen18 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt17, i32 0, i32 2, !dbg !7380
  %30 = load i8*, i8** %bitlen18, align 8, !dbg !7380
  %arrayidx19 = getelementptr inbounds i8, i8* %30, i64 %idxprom16, !dbg !7378
  %31 = load i8, i8* %arrayidx19, align 1, !dbg !7378
  %idxprom20 = zext i8 %31 to i64, !dbg !7381
  %32 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7381
  %pt21 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %32, i32 0, i32 25, !dbg !7382
  %freq22 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt21, i32 0, i32 1, !dbg !7383
  %arrayidx23 = getelementptr inbounds [17 x i32], [17 x i32]* %freq22, i64 0, i64 %idxprom20, !dbg !7381
  %33 = load i32, i32* %arrayidx23, align 4, !dbg !7384
  %inc = add nsw i32 %33, 1, !dbg !7384
  store i32 %inc, i32* %arrayidx23, align 4, !dbg !7384
  %34 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7385
  %cache_avail24 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %34, i32 0, i32 1, !dbg !7385
  %35 = load i32, i32* %cache_avail24, align 8, !dbg !7385
  %sub25 = sub nsw i32 %35, 4, !dbg !7385
  store i32 %sub25, i32* %cache_avail24, align 8, !dbg !7385
  br label %for.inc, !dbg !7386

for.inc:                                          ; preds = %if.end12
  %36 = load i32, i32* %i, align 4, !dbg !7387
  %inc26 = add nsw i32 %36, 1, !dbg !7387
  store i32 %inc26, i32* %i, align 4, !dbg !7387
  br label %for.cond, !dbg !7389

for.end:                                          ; preds = %for.cond
  %37 = load i32, i32* %i, align 4, !dbg !7390
  %38 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7391
  %loop27 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %38, i32 0, i32 26, !dbg !7392
  store i32 %37, i32* %loop27, align 8, !dbg !7393
  store i32 1, i32* %retval, align 4, !dbg !7394
  br label %return, !dbg !7394

return:                                           ; preds = %for.end, %if.then10
  %39 = load i32, i32* %retval, align 4, !dbg !7395
  ret i32 %39, !dbg !7395
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_read_bitlen(%struct.lzx_stream* %strm, %struct.huffman* %d, i32 %end) #0 !dbg !601 {
entry:
  %retval = alloca i32, align 4
  %strm.addr = alloca %struct.lzx_stream*, align 8
  %d.addr = alloca %struct.huffman*, align 8
  %end.addr = alloca i32, align 4
  %ds = alloca %struct.lzx_dec*, align 8
  %br = alloca %struct.lzx_br*, align 8
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ret = alloca i32, align 4
  %same = alloca i32, align 4
  %rbits = alloca i32, align 4
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !7396, metadata !638), !dbg !7397
  store %struct.huffman* %d, %struct.huffman** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman** %d.addr, metadata !7398, metadata !638), !dbg !7399
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !7400, metadata !638), !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.lzx_dec** %ds, metadata !7402, metadata !638), !dbg !7403
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7404
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !7405
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !7405
  store %struct.lzx_dec* %1, %struct.lzx_dec** %ds, align 8, !dbg !7403
  call void @llvm.dbg.declare(metadata %struct.lzx_br** %br, metadata !7406, metadata !638), !dbg !7407
  %2 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7408
  %br2 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %2, i32 0, i32 21, !dbg !7409
  store %struct.lzx_br* %br2, %struct.lzx_br** %br, align 8, !dbg !7407
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7410, metadata !638), !dbg !7411
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7412, metadata !638), !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7414, metadata !638), !dbg !7415
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7416, metadata !638), !dbg !7417
  call void @llvm.dbg.declare(metadata i32* %same, metadata !7418, metadata !638), !dbg !7419
  call void @llvm.dbg.declare(metadata i32* %rbits, metadata !7420, metadata !638), !dbg !7421
  %3 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7422
  %loop = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %3, i32 0, i32 26, !dbg !7423
  %4 = load i32, i32* %loop, align 8, !dbg !7423
  store i32 %4, i32* %i, align 4, !dbg !7424
  %5 = load i32, i32* %i, align 4, !dbg !7425
  %cmp = icmp eq i32 %5, 0, !dbg !7427
  br i1 %cmp, label %if.then, label %if.end, !dbg !7428

if.then:                                          ; preds = %entry
  %6 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7429
  %freq = getelementptr inbounds %struct.huffman, %struct.huffman* %6, i32 0, i32 1, !dbg !7430
  %arraydecay = getelementptr inbounds [17 x i32], [17 x i32]* %freq, i32 0, i32 0, !dbg !7431
  %7 = bitcast i32* %arraydecay to i8*, !dbg !7431
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 68, i32 4, i1 false), !dbg !7431
  br label %if.end, !dbg !7431

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %ret, align 4, !dbg !7432
  %8 = load i32, i32* %end.addr, align 4, !dbg !7433
  %cmp3 = icmp slt i32 %8, 0, !dbg !7435
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7436

if.then4:                                         ; preds = %if.end
  %9 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7437
  %len_size = getelementptr inbounds %struct.huffman, %struct.huffman* %9, i32 0, i32 0, !dbg !7438
  %10 = load i32, i32* %len_size, align 8, !dbg !7438
  store i32 %10, i32* %end.addr, align 4, !dbg !7439
  br label %if.end5, !dbg !7440

if.end5:                                          ; preds = %if.then4, %if.end
  br label %while.cond, !dbg !7441

while.cond:                                       ; preds = %sw.epilog, %if.end5
  %11 = load i32, i32* %i, align 4, !dbg !7442
  %12 = load i32, i32* %end.addr, align 4, !dbg !7444
  %cmp6 = icmp slt i32 %11, %12, !dbg !7445
  br i1 %cmp6, label %while.body, label %while.end, !dbg !7446

while.body:                                       ; preds = %while.cond
  %13 = load i32, i32* %i, align 4, !dbg !7447
  %14 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7449
  %loop7 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %14, i32 0, i32 26, !dbg !7450
  store i32 %13, i32* %loop7, align 8, !dbg !7451
  %15 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7452
  %cache_avail = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %15, i32 0, i32 1, !dbg !7452
  %16 = load i32, i32* %cache_avail, align 8, !dbg !7452
  %17 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7452
  %pt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %17, i32 0, i32 25, !dbg !7452
  %max_bits = getelementptr inbounds %struct.huffman, %struct.huffman* %pt, i32 0, i32 3, !dbg !7452
  %18 = load i32, i32* %max_bits, align 8, !dbg !7452
  %cmp8 = icmp sge i32 %16, %18, !dbg !7452
  br i1 %cmp8, label %if.end15, label %lor.lhs.false, !dbg !7452

lor.lhs.false:                                    ; preds = %while.body
  %19 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7454
  %20 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7454
  %call = call i32 @lzx_br_fillup(%struct.lzx_stream* %19, %struct.lzx_br* %20), !dbg !7454
  %tobool = icmp ne i32 %call, 0, !dbg !7454
  br i1 %tobool, label %if.end15, label %lor.lhs.false9, !dbg !7454

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %21 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7456
  %cache_avail10 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %21, i32 0, i32 1, !dbg !7456
  %22 = load i32, i32* %cache_avail10, align 8, !dbg !7456
  %23 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7456
  %pt11 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %23, i32 0, i32 25, !dbg !7456
  %max_bits12 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt11, i32 0, i32 3, !dbg !7456
  %24 = load i32, i32* %max_bits12, align 8, !dbg !7456
  %cmp13 = icmp sge i32 %22, %24, !dbg !7456
  br i1 %cmp13, label %if.end15, label %if.then14, !dbg !7458

if.then14:                                        ; preds = %lor.lhs.false9
  br label %getdata, !dbg !7459

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false, %while.body
  %25 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7460
  %cache_buffer = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %25, i32 0, i32 0, !dbg !7460
  %26 = load i64, i64* %cache_buffer, align 8, !dbg !7460
  %27 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7460
  %cache_avail16 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %27, i32 0, i32 1, !dbg !7460
  %28 = load i32, i32* %cache_avail16, align 8, !dbg !7460
  %29 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7460
  %pt17 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %29, i32 0, i32 25, !dbg !7460
  %max_bits18 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt17, i32 0, i32 3, !dbg !7460
  %30 = load i32, i32* %max_bits18, align 8, !dbg !7460
  %sub = sub nsw i32 %28, %30, !dbg !7460
  %sh_prom = zext i32 %sub to i64, !dbg !7460
  %shr = lshr i64 %26, %sh_prom, !dbg !7460
  %conv = trunc i64 %shr to i32, !dbg !7460
  %31 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7460
  %pt19 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %31, i32 0, i32 25, !dbg !7460
  %max_bits20 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt19, i32 0, i32 3, !dbg !7460
  %32 = load i32, i32* %max_bits20, align 8, !dbg !7460
  %idxprom = sext i32 %32 to i64, !dbg !7460
  %arrayidx = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom, !dbg !7460
  %33 = load i32, i32* %arrayidx, align 4, !dbg !7460
  %and = and i32 %conv, %33, !dbg !7460
  store i32 %and, i32* %rbits, align 4, !dbg !7461
  %34 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7462
  %pt21 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %34, i32 0, i32 25, !dbg !7463
  %35 = load i32, i32* %rbits, align 4, !dbg !7464
  %call22 = call i32 @lzx_decode_huffman(%struct.huffman* %pt21, i32 %35), !dbg !7465
  store i32 %call22, i32* %c, align 4, !dbg !7466
  %36 = load i32, i32* %c, align 4, !dbg !7467
  switch i32 %36, label %sw.default [
    i32 17, label %sw.bb
    i32 18, label %sw.bb73
    i32 19, label %sw.bb123
  ], !dbg !7468

sw.bb:                                            ; preds = %if.end15
  %37 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7469
  %cache_avail23 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %37, i32 0, i32 1, !dbg !7469
  %38 = load i32, i32* %cache_avail23, align 8, !dbg !7469
  %39 = load i32, i32* %c, align 4, !dbg !7469
  %idxprom24 = sext i32 %39 to i64, !dbg !7469
  %40 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7469
  %pt25 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %40, i32 0, i32 25, !dbg !7469
  %bitlen = getelementptr inbounds %struct.huffman, %struct.huffman* %pt25, i32 0, i32 2, !dbg !7469
  %41 = load i8*, i8** %bitlen, align 8, !dbg !7469
  %arrayidx26 = getelementptr inbounds i8, i8* %41, i64 %idxprom24, !dbg !7469
  %42 = load i8, i8* %arrayidx26, align 1, !dbg !7469
  %conv27 = zext i8 %42 to i32, !dbg !7469
  %add = add nsw i32 %conv27, 4, !dbg !7469
  %cmp28 = icmp sge i32 %38, %add, !dbg !7469
  br i1 %cmp28, label %if.end44, label %lor.lhs.false30, !dbg !7469

lor.lhs.false30:                                  ; preds = %sw.bb
  %43 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7472
  %44 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7472
  %call31 = call i32 @lzx_br_fillup(%struct.lzx_stream* %43, %struct.lzx_br* %44), !dbg !7472
  %tobool32 = icmp ne i32 %call31, 0, !dbg !7472
  br i1 %tobool32, label %if.end44, label %lor.lhs.false33, !dbg !7472

lor.lhs.false33:                                  ; preds = %lor.lhs.false30
  %45 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7474
  %cache_avail34 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %45, i32 0, i32 1, !dbg !7474
  %46 = load i32, i32* %cache_avail34, align 8, !dbg !7474
  %47 = load i32, i32* %c, align 4, !dbg !7474
  %idxprom35 = sext i32 %47 to i64, !dbg !7474
  %48 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7474
  %pt36 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %48, i32 0, i32 25, !dbg !7474
  %bitlen37 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt36, i32 0, i32 2, !dbg !7474
  %49 = load i8*, i8** %bitlen37, align 8, !dbg !7474
  %arrayidx38 = getelementptr inbounds i8, i8* %49, i64 %idxprom35, !dbg !7474
  %50 = load i8, i8* %arrayidx38, align 1, !dbg !7474
  %conv39 = zext i8 %50 to i32, !dbg !7474
  %add40 = add nsw i32 %conv39, 4, !dbg !7474
  %cmp41 = icmp sge i32 %46, %add40, !dbg !7474
  br i1 %cmp41, label %if.end44, label %if.then43, !dbg !7476

if.then43:                                        ; preds = %lor.lhs.false33
  br label %getdata, !dbg !7477

if.end44:                                         ; preds = %lor.lhs.false33, %lor.lhs.false30, %sw.bb
  %51 = load i32, i32* %c, align 4, !dbg !7478
  %idxprom45 = sext i32 %51 to i64, !dbg !7478
  %52 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7478
  %pt46 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %52, i32 0, i32 25, !dbg !7478
  %bitlen47 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt46, i32 0, i32 2, !dbg !7478
  %53 = load i8*, i8** %bitlen47, align 8, !dbg !7478
  %arrayidx48 = getelementptr inbounds i8, i8* %53, i64 %idxprom45, !dbg !7478
  %54 = load i8, i8* %arrayidx48, align 1, !dbg !7478
  %conv49 = zext i8 %54 to i32, !dbg !7478
  %55 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7478
  %cache_avail50 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %55, i32 0, i32 1, !dbg !7478
  %56 = load i32, i32* %cache_avail50, align 8, !dbg !7478
  %sub51 = sub nsw i32 %56, %conv49, !dbg !7478
  store i32 %sub51, i32* %cache_avail50, align 8, !dbg !7478
  %57 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7479
  %cache_buffer52 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %57, i32 0, i32 0, !dbg !7479
  %58 = load i64, i64* %cache_buffer52, align 8, !dbg !7479
  %59 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7479
  %cache_avail53 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %59, i32 0, i32 1, !dbg !7479
  %60 = load i32, i32* %cache_avail53, align 8, !dbg !7479
  %sub54 = sub nsw i32 %60, 4, !dbg !7479
  %sh_prom55 = zext i32 %sub54 to i64, !dbg !7479
  %shr56 = lshr i64 %58, %sh_prom55, !dbg !7479
  %conv57 = trunc i64 %shr56 to i32, !dbg !7479
  %61 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 4), align 16, !dbg !7479
  %and58 = and i32 %conv57, %61, !dbg !7479
  %add59 = add i32 %and58, 4, !dbg !7480
  store i32 %add59, i32* %same, align 4, !dbg !7481
  %62 = load i32, i32* %i, align 4, !dbg !7482
  %63 = load i32, i32* %same, align 4, !dbg !7484
  %add60 = add nsw i32 %62, %63, !dbg !7485
  %64 = load i32, i32* %end.addr, align 4, !dbg !7486
  %cmp61 = icmp sgt i32 %add60, %64, !dbg !7487
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !7488

if.then63:                                        ; preds = %if.end44
  store i32 -1, i32* %retval, align 4, !dbg !7489
  br label %return, !dbg !7489

if.end64:                                         ; preds = %if.end44
  %65 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7490
  %cache_avail65 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %65, i32 0, i32 1, !dbg !7490
  %66 = load i32, i32* %cache_avail65, align 8, !dbg !7490
  %sub66 = sub nsw i32 %66, 4, !dbg !7490
  store i32 %sub66, i32* %cache_avail65, align 8, !dbg !7490
  store i32 0, i32* %j, align 4, !dbg !7491
  br label %for.cond, !dbg !7493

for.cond:                                         ; preds = %for.inc, %if.end64
  %67 = load i32, i32* %j, align 4, !dbg !7494
  %68 = load i32, i32* %same, align 4, !dbg !7497
  %cmp67 = icmp slt i32 %67, %68, !dbg !7498
  br i1 %cmp67, label %for.body, label %for.end, !dbg !7499

for.body:                                         ; preds = %for.cond
  %69 = load i32, i32* %i, align 4, !dbg !7500
  %inc = add nsw i32 %69, 1, !dbg !7500
  store i32 %inc, i32* %i, align 4, !dbg !7500
  %idxprom69 = sext i32 %69 to i64, !dbg !7501
  %70 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7501
  %bitlen70 = getelementptr inbounds %struct.huffman, %struct.huffman* %70, i32 0, i32 2, !dbg !7502
  %71 = load i8*, i8** %bitlen70, align 8, !dbg !7502
  %arrayidx71 = getelementptr inbounds i8, i8* %71, i64 %idxprom69, !dbg !7501
  store i8 0, i8* %arrayidx71, align 1, !dbg !7503
  br label %for.inc, !dbg !7501

for.inc:                                          ; preds = %for.body
  %72 = load i32, i32* %j, align 4, !dbg !7504
  %inc72 = add nsw i32 %72, 1, !dbg !7504
  store i32 %inc72, i32* %j, align 4, !dbg !7504
  br label %for.cond, !dbg !7506

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !7507

sw.bb73:                                          ; preds = %if.end15
  %73 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7508
  %cache_avail74 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %73, i32 0, i32 1, !dbg !7508
  %74 = load i32, i32* %cache_avail74, align 8, !dbg !7508
  %75 = load i32, i32* %c, align 4, !dbg !7508
  %idxprom75 = sext i32 %75 to i64, !dbg !7508
  %76 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7508
  %pt76 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %76, i32 0, i32 25, !dbg !7508
  %bitlen77 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt76, i32 0, i32 2, !dbg !7508
  %77 = load i8*, i8** %bitlen77, align 8, !dbg !7508
  %arrayidx78 = getelementptr inbounds i8, i8* %77, i64 %idxprom75, !dbg !7508
  %78 = load i8, i8* %arrayidx78, align 1, !dbg !7508
  %conv79 = zext i8 %78 to i32, !dbg !7508
  %add80 = add nsw i32 %conv79, 5, !dbg !7508
  %cmp81 = icmp sge i32 %74, %add80, !dbg !7508
  br i1 %cmp81, label %if.end97, label %lor.lhs.false83, !dbg !7508

lor.lhs.false83:                                  ; preds = %sw.bb73
  %79 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7510
  %80 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7510
  %call84 = call i32 @lzx_br_fillup(%struct.lzx_stream* %79, %struct.lzx_br* %80), !dbg !7510
  %tobool85 = icmp ne i32 %call84, 0, !dbg !7510
  br i1 %tobool85, label %if.end97, label %lor.lhs.false86, !dbg !7510

lor.lhs.false86:                                  ; preds = %lor.lhs.false83
  %81 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7512
  %cache_avail87 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %81, i32 0, i32 1, !dbg !7512
  %82 = load i32, i32* %cache_avail87, align 8, !dbg !7512
  %83 = load i32, i32* %c, align 4, !dbg !7512
  %idxprom88 = sext i32 %83 to i64, !dbg !7512
  %84 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7512
  %pt89 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %84, i32 0, i32 25, !dbg !7512
  %bitlen90 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt89, i32 0, i32 2, !dbg !7512
  %85 = load i8*, i8** %bitlen90, align 8, !dbg !7512
  %arrayidx91 = getelementptr inbounds i8, i8* %85, i64 %idxprom88, !dbg !7512
  %86 = load i8, i8* %arrayidx91, align 1, !dbg !7512
  %conv92 = zext i8 %86 to i32, !dbg !7512
  %add93 = add nsw i32 %conv92, 5, !dbg !7512
  %cmp94 = icmp sge i32 %82, %add93, !dbg !7512
  br i1 %cmp94, label %if.end97, label %if.then96, !dbg !7514

if.then96:                                        ; preds = %lor.lhs.false86
  br label %getdata, !dbg !7515

if.end97:                                         ; preds = %lor.lhs.false86, %lor.lhs.false83, %sw.bb73
  %87 = load i32, i32* %c, align 4, !dbg !7516
  %idxprom98 = sext i32 %87 to i64, !dbg !7516
  %88 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7516
  %pt99 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %88, i32 0, i32 25, !dbg !7516
  %bitlen100 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt99, i32 0, i32 2, !dbg !7516
  %89 = load i8*, i8** %bitlen100, align 8, !dbg !7516
  %arrayidx101 = getelementptr inbounds i8, i8* %89, i64 %idxprom98, !dbg !7516
  %90 = load i8, i8* %arrayidx101, align 1, !dbg !7516
  %conv102 = zext i8 %90 to i32, !dbg !7516
  %91 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7516
  %cache_avail103 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %91, i32 0, i32 1, !dbg !7516
  %92 = load i32, i32* %cache_avail103, align 8, !dbg !7516
  %sub104 = sub nsw i32 %92, %conv102, !dbg !7516
  store i32 %sub104, i32* %cache_avail103, align 8, !dbg !7516
  %93 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7517
  %cache_buffer105 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %93, i32 0, i32 0, !dbg !7517
  %94 = load i64, i64* %cache_buffer105, align 8, !dbg !7517
  %95 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7517
  %cache_avail106 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %95, i32 0, i32 1, !dbg !7517
  %96 = load i32, i32* %cache_avail106, align 8, !dbg !7517
  %sub107 = sub nsw i32 %96, 5, !dbg !7517
  %sh_prom108 = zext i32 %sub107 to i64, !dbg !7517
  %shr109 = lshr i64 %94, %sh_prom108, !dbg !7517
  %conv110 = trunc i64 %shr109 to i32, !dbg !7517
  %97 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 5), align 4, !dbg !7517
  %and111 = and i32 %conv110, %97, !dbg !7517
  %add112 = add i32 %and111, 20, !dbg !7518
  store i32 %add112, i32* %same, align 4, !dbg !7519
  %98 = load i32, i32* %i, align 4, !dbg !7520
  %99 = load i32, i32* %same, align 4, !dbg !7522
  %add113 = add nsw i32 %98, %99, !dbg !7523
  %100 = load i32, i32* %end.addr, align 4, !dbg !7524
  %cmp114 = icmp sgt i32 %add113, %100, !dbg !7525
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !7526

if.then116:                                       ; preds = %if.end97
  store i32 -1, i32* %retval, align 4, !dbg !7527
  br label %return, !dbg !7527

if.end117:                                        ; preds = %if.end97
  %101 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7528
  %cache_avail118 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %101, i32 0, i32 1, !dbg !7528
  %102 = load i32, i32* %cache_avail118, align 8, !dbg !7528
  %sub119 = sub nsw i32 %102, 5, !dbg !7528
  store i32 %sub119, i32* %cache_avail118, align 8, !dbg !7528
  %103 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7529
  %bitlen120 = getelementptr inbounds %struct.huffman, %struct.huffman* %103, i32 0, i32 2, !dbg !7530
  %104 = load i8*, i8** %bitlen120, align 8, !dbg !7530
  %105 = load i32, i32* %i, align 4, !dbg !7531
  %idx.ext = sext i32 %105 to i64, !dbg !7532
  %add.ptr = getelementptr inbounds i8, i8* %104, i64 %idx.ext, !dbg !7532
  %106 = load i32, i32* %same, align 4, !dbg !7533
  %conv121 = sext i32 %106 to i64, !dbg !7533
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 %conv121, i32 1, i1 false), !dbg !7534
  %107 = load i32, i32* %same, align 4, !dbg !7535
  %108 = load i32, i32* %i, align 4, !dbg !7536
  %add122 = add nsw i32 %108, %107, !dbg !7536
  store i32 %add122, i32* %i, align 4, !dbg !7536
  br label %sw.epilog, !dbg !7537

sw.bb123:                                         ; preds = %if.end15
  %109 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7538
  %cache_avail124 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %109, i32 0, i32 1, !dbg !7538
  %110 = load i32, i32* %cache_avail124, align 8, !dbg !7538
  %111 = load i32, i32* %c, align 4, !dbg !7538
  %idxprom125 = sext i32 %111 to i64, !dbg !7538
  %112 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7538
  %pt126 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %112, i32 0, i32 25, !dbg !7538
  %bitlen127 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt126, i32 0, i32 2, !dbg !7538
  %113 = load i8*, i8** %bitlen127, align 8, !dbg !7538
  %arrayidx128 = getelementptr inbounds i8, i8* %113, i64 %idxprom125, !dbg !7538
  %114 = load i8, i8* %arrayidx128, align 1, !dbg !7538
  %conv129 = zext i8 %114 to i32, !dbg !7538
  %add130 = add nsw i32 %conv129, 1, !dbg !7538
  %115 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7538
  %pt131 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %115, i32 0, i32 25, !dbg !7538
  %max_bits132 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt131, i32 0, i32 3, !dbg !7538
  %116 = load i32, i32* %max_bits132, align 8, !dbg !7538
  %add133 = add nsw i32 %add130, %116, !dbg !7538
  %cmp134 = icmp sge i32 %110, %add133, !dbg !7538
  br i1 %cmp134, label %if.end153, label %lor.lhs.false136, !dbg !7538

lor.lhs.false136:                                 ; preds = %sw.bb123
  %117 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7540
  %118 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7540
  %call137 = call i32 @lzx_br_fillup(%struct.lzx_stream* %117, %struct.lzx_br* %118), !dbg !7540
  %tobool138 = icmp ne i32 %call137, 0, !dbg !7540
  br i1 %tobool138, label %if.end153, label %lor.lhs.false139, !dbg !7540

lor.lhs.false139:                                 ; preds = %lor.lhs.false136
  %119 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7542
  %cache_avail140 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %119, i32 0, i32 1, !dbg !7542
  %120 = load i32, i32* %cache_avail140, align 8, !dbg !7542
  %121 = load i32, i32* %c, align 4, !dbg !7542
  %idxprom141 = sext i32 %121 to i64, !dbg !7542
  %122 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7542
  %pt142 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %122, i32 0, i32 25, !dbg !7542
  %bitlen143 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt142, i32 0, i32 2, !dbg !7542
  %123 = load i8*, i8** %bitlen143, align 8, !dbg !7542
  %arrayidx144 = getelementptr inbounds i8, i8* %123, i64 %idxprom141, !dbg !7542
  %124 = load i8, i8* %arrayidx144, align 1, !dbg !7542
  %conv145 = zext i8 %124 to i32, !dbg !7542
  %add146 = add nsw i32 %conv145, 1, !dbg !7542
  %125 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7542
  %pt147 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %125, i32 0, i32 25, !dbg !7542
  %max_bits148 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt147, i32 0, i32 3, !dbg !7542
  %126 = load i32, i32* %max_bits148, align 8, !dbg !7542
  %add149 = add nsw i32 %add146, %126, !dbg !7542
  %cmp150 = icmp sge i32 %120, %add149, !dbg !7542
  br i1 %cmp150, label %if.end153, label %if.then152, !dbg !7544

if.then152:                                       ; preds = %lor.lhs.false139
  br label %getdata, !dbg !7545

if.end153:                                        ; preds = %lor.lhs.false139, %lor.lhs.false136, %sw.bb123
  %127 = load i32, i32* %c, align 4, !dbg !7546
  %idxprom154 = sext i32 %127 to i64, !dbg !7546
  %128 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7546
  %pt155 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %128, i32 0, i32 25, !dbg !7546
  %bitlen156 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt155, i32 0, i32 2, !dbg !7546
  %129 = load i8*, i8** %bitlen156, align 8, !dbg !7546
  %arrayidx157 = getelementptr inbounds i8, i8* %129, i64 %idxprom154, !dbg !7546
  %130 = load i8, i8* %arrayidx157, align 1, !dbg !7546
  %conv158 = zext i8 %130 to i32, !dbg !7546
  %131 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7546
  %cache_avail159 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %131, i32 0, i32 1, !dbg !7546
  %132 = load i32, i32* %cache_avail159, align 8, !dbg !7546
  %sub160 = sub nsw i32 %132, %conv158, !dbg !7546
  store i32 %sub160, i32* %cache_avail159, align 8, !dbg !7546
  %133 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7547
  %cache_buffer161 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %133, i32 0, i32 0, !dbg !7547
  %134 = load i64, i64* %cache_buffer161, align 8, !dbg !7547
  %135 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7547
  %cache_avail162 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %135, i32 0, i32 1, !dbg !7547
  %136 = load i32, i32* %cache_avail162, align 8, !dbg !7547
  %sub163 = sub nsw i32 %136, 1, !dbg !7547
  %sh_prom164 = zext i32 %sub163 to i64, !dbg !7547
  %shr165 = lshr i64 %134, %sh_prom164, !dbg !7547
  %conv166 = trunc i64 %shr165 to i32, !dbg !7547
  %137 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 1), align 4, !dbg !7547
  %and167 = and i32 %conv166, %137, !dbg !7547
  %add168 = add i32 %and167, 4, !dbg !7548
  store i32 %add168, i32* %same, align 4, !dbg !7549
  %138 = load i32, i32* %i, align 4, !dbg !7550
  %139 = load i32, i32* %same, align 4, !dbg !7552
  %add169 = add nsw i32 %138, %139, !dbg !7553
  %140 = load i32, i32* %end.addr, align 4, !dbg !7554
  %cmp170 = icmp sgt i32 %add169, %140, !dbg !7555
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !7556

if.then172:                                       ; preds = %if.end153
  store i32 -1, i32* %retval, align 4, !dbg !7557
  br label %return, !dbg !7557

if.end173:                                        ; preds = %if.end153
  %141 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7558
  %cache_avail174 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %141, i32 0, i32 1, !dbg !7558
  %142 = load i32, i32* %cache_avail174, align 8, !dbg !7558
  %sub175 = sub nsw i32 %142, 1, !dbg !7558
  store i32 %sub175, i32* %cache_avail174, align 8, !dbg !7558
  %143 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7559
  %cache_buffer176 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %143, i32 0, i32 0, !dbg !7559
  %144 = load i64, i64* %cache_buffer176, align 8, !dbg !7559
  %145 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7559
  %cache_avail177 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %145, i32 0, i32 1, !dbg !7559
  %146 = load i32, i32* %cache_avail177, align 8, !dbg !7559
  %147 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7559
  %pt178 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %147, i32 0, i32 25, !dbg !7559
  %max_bits179 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt178, i32 0, i32 3, !dbg !7559
  %148 = load i32, i32* %max_bits179, align 8, !dbg !7559
  %sub180 = sub nsw i32 %146, %148, !dbg !7559
  %sh_prom181 = zext i32 %sub180 to i64, !dbg !7559
  %shr182 = lshr i64 %144, %sh_prom181, !dbg !7559
  %conv183 = trunc i64 %shr182 to i32, !dbg !7559
  %149 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7559
  %pt184 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %149, i32 0, i32 25, !dbg !7559
  %max_bits185 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt184, i32 0, i32 3, !dbg !7559
  %150 = load i32, i32* %max_bits185, align 8, !dbg !7559
  %idxprom186 = sext i32 %150 to i64, !dbg !7559
  %arrayidx187 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom186, !dbg !7559
  %151 = load i32, i32* %arrayidx187, align 4, !dbg !7559
  %and188 = and i32 %conv183, %151, !dbg !7559
  store i32 %and188, i32* %rbits, align 4, !dbg !7560
  %152 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7561
  %pt189 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %152, i32 0, i32 25, !dbg !7562
  %153 = load i32, i32* %rbits, align 4, !dbg !7563
  %call190 = call i32 @lzx_decode_huffman(%struct.huffman* %pt189, i32 %153), !dbg !7564
  store i32 %call190, i32* %c, align 4, !dbg !7565
  %154 = load i32, i32* %c, align 4, !dbg !7566
  %idxprom191 = sext i32 %154 to i64, !dbg !7566
  %155 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7566
  %pt192 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %155, i32 0, i32 25, !dbg !7566
  %bitlen193 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt192, i32 0, i32 2, !dbg !7566
  %156 = load i8*, i8** %bitlen193, align 8, !dbg !7566
  %arrayidx194 = getelementptr inbounds i8, i8* %156, i64 %idxprom191, !dbg !7566
  %157 = load i8, i8* %arrayidx194, align 1, !dbg !7566
  %conv195 = zext i8 %157 to i32, !dbg !7566
  %158 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7566
  %cache_avail196 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %158, i32 0, i32 1, !dbg !7566
  %159 = load i32, i32* %cache_avail196, align 8, !dbg !7566
  %sub197 = sub nsw i32 %159, %conv195, !dbg !7566
  store i32 %sub197, i32* %cache_avail196, align 8, !dbg !7566
  %160 = load i32, i32* %i, align 4, !dbg !7567
  %idxprom198 = sext i32 %160 to i64, !dbg !7568
  %161 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7568
  %bitlen199 = getelementptr inbounds %struct.huffman, %struct.huffman* %161, i32 0, i32 2, !dbg !7569
  %162 = load i8*, i8** %bitlen199, align 8, !dbg !7569
  %arrayidx200 = getelementptr inbounds i8, i8* %162, i64 %idxprom198, !dbg !7568
  %163 = load i8, i8* %arrayidx200, align 1, !dbg !7568
  %conv201 = zext i8 %163 to i32, !dbg !7568
  %164 = load i32, i32* %c, align 4, !dbg !7570
  %sub202 = sub nsw i32 %conv201, %164, !dbg !7571
  %add203 = add nsw i32 %sub202, 17, !dbg !7572
  %rem = srem i32 %add203, 17, !dbg !7573
  store i32 %rem, i32* %c, align 4, !dbg !7574
  %165 = load i32, i32* %c, align 4, !dbg !7575
  %cmp204 = icmp slt i32 %165, 0, !dbg !7577
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !7578

if.then206:                                       ; preds = %if.end173
  store i32 -1, i32* %retval, align 4, !dbg !7579
  br label %return, !dbg !7579

if.end207:                                        ; preds = %if.end173
  store i32 0, i32* %j, align 4, !dbg !7580
  br label %for.cond208, !dbg !7582

for.cond208:                                      ; preds = %for.inc217, %if.end207
  %166 = load i32, i32* %j, align 4, !dbg !7583
  %167 = load i32, i32* %same, align 4, !dbg !7586
  %cmp209 = icmp slt i32 %166, %167, !dbg !7587
  br i1 %cmp209, label %for.body211, label %for.end219, !dbg !7588

for.body211:                                      ; preds = %for.cond208
  %168 = load i32, i32* %c, align 4, !dbg !7589
  %conv212 = trunc i32 %168 to i8, !dbg !7589
  %169 = load i32, i32* %i, align 4, !dbg !7590
  %inc213 = add nsw i32 %169, 1, !dbg !7590
  store i32 %inc213, i32* %i, align 4, !dbg !7590
  %idxprom214 = sext i32 %169 to i64, !dbg !7591
  %170 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7591
  %bitlen215 = getelementptr inbounds %struct.huffman, %struct.huffman* %170, i32 0, i32 2, !dbg !7592
  %171 = load i8*, i8** %bitlen215, align 8, !dbg !7592
  %arrayidx216 = getelementptr inbounds i8, i8* %171, i64 %idxprom214, !dbg !7591
  store i8 %conv212, i8* %arrayidx216, align 1, !dbg !7593
  br label %for.inc217, !dbg !7591

for.inc217:                                       ; preds = %for.body211
  %172 = load i32, i32* %j, align 4, !dbg !7594
  %inc218 = add nsw i32 %172, 1, !dbg !7594
  store i32 %inc218, i32* %j, align 4, !dbg !7594
  br label %for.cond208, !dbg !7596

for.end219:                                       ; preds = %for.cond208
  %173 = load i32, i32* %same, align 4, !dbg !7597
  %174 = load i32, i32* %c, align 4, !dbg !7598
  %idxprom220 = sext i32 %174 to i64, !dbg !7599
  %175 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7599
  %freq221 = getelementptr inbounds %struct.huffman, %struct.huffman* %175, i32 0, i32 1, !dbg !7600
  %arrayidx222 = getelementptr inbounds [17 x i32], [17 x i32]* %freq221, i64 0, i64 %idxprom220, !dbg !7599
  %176 = load i32, i32* %arrayidx222, align 4, !dbg !7601
  %add223 = add nsw i32 %176, %173, !dbg !7601
  store i32 %add223, i32* %arrayidx222, align 4, !dbg !7601
  br label %sw.epilog, !dbg !7602

sw.default:                                       ; preds = %if.end15
  %177 = load i32, i32* %c, align 4, !dbg !7603
  %idxprom224 = sext i32 %177 to i64, !dbg !7603
  %178 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7603
  %pt225 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %178, i32 0, i32 25, !dbg !7603
  %bitlen226 = getelementptr inbounds %struct.huffman, %struct.huffman* %pt225, i32 0, i32 2, !dbg !7603
  %179 = load i8*, i8** %bitlen226, align 8, !dbg !7603
  %arrayidx227 = getelementptr inbounds i8, i8* %179, i64 %idxprom224, !dbg !7603
  %180 = load i8, i8* %arrayidx227, align 1, !dbg !7603
  %conv228 = zext i8 %180 to i32, !dbg !7603
  %181 = load %struct.lzx_br*, %struct.lzx_br** %br, align 8, !dbg !7603
  %cache_avail229 = getelementptr inbounds %struct.lzx_br, %struct.lzx_br* %181, i32 0, i32 1, !dbg !7603
  %182 = load i32, i32* %cache_avail229, align 8, !dbg !7603
  %sub230 = sub nsw i32 %182, %conv228, !dbg !7603
  store i32 %sub230, i32* %cache_avail229, align 8, !dbg !7603
  %183 = load i32, i32* %i, align 4, !dbg !7604
  %idxprom231 = sext i32 %183 to i64, !dbg !7605
  %184 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7605
  %bitlen232 = getelementptr inbounds %struct.huffman, %struct.huffman* %184, i32 0, i32 2, !dbg !7606
  %185 = load i8*, i8** %bitlen232, align 8, !dbg !7606
  %arrayidx233 = getelementptr inbounds i8, i8* %185, i64 %idxprom231, !dbg !7605
  %186 = load i8, i8* %arrayidx233, align 1, !dbg !7605
  %conv234 = zext i8 %186 to i32, !dbg !7605
  %187 = load i32, i32* %c, align 4, !dbg !7607
  %sub235 = sub nsw i32 %conv234, %187, !dbg !7608
  %add236 = add nsw i32 %sub235, 17, !dbg !7609
  %rem237 = srem i32 %add236, 17, !dbg !7610
  store i32 %rem237, i32* %c, align 4, !dbg !7611
  %188 = load i32, i32* %c, align 4, !dbg !7612
  %cmp238 = icmp slt i32 %188, 0, !dbg !7614
  br i1 %cmp238, label %if.then240, label %if.end241, !dbg !7615

if.then240:                                       ; preds = %sw.default
  store i32 -1, i32* %retval, align 4, !dbg !7616
  br label %return, !dbg !7616

if.end241:                                        ; preds = %sw.default
  %189 = load i32, i32* %c, align 4, !dbg !7617
  %idxprom242 = sext i32 %189 to i64, !dbg !7618
  %190 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7618
  %freq243 = getelementptr inbounds %struct.huffman, %struct.huffman* %190, i32 0, i32 1, !dbg !7619
  %arrayidx244 = getelementptr inbounds [17 x i32], [17 x i32]* %freq243, i64 0, i64 %idxprom242, !dbg !7618
  %191 = load i32, i32* %arrayidx244, align 4, !dbg !7620
  %inc245 = add nsw i32 %191, 1, !dbg !7620
  store i32 %inc245, i32* %arrayidx244, align 4, !dbg !7620
  %192 = load i32, i32* %c, align 4, !dbg !7621
  %conv246 = trunc i32 %192 to i8, !dbg !7621
  %193 = load i32, i32* %i, align 4, !dbg !7622
  %inc247 = add nsw i32 %193, 1, !dbg !7622
  store i32 %inc247, i32* %i, align 4, !dbg !7622
  %idxprom248 = sext i32 %193 to i64, !dbg !7623
  %194 = load %struct.huffman*, %struct.huffman** %d.addr, align 8, !dbg !7623
  %bitlen249 = getelementptr inbounds %struct.huffman, %struct.huffman* %194, i32 0, i32 2, !dbg !7624
  %195 = load i8*, i8** %bitlen249, align 8, !dbg !7624
  %arrayidx250 = getelementptr inbounds i8, i8* %195, i64 %idxprom248, !dbg !7623
  store i8 %conv246, i8* %arrayidx250, align 1, !dbg !7625
  br label %sw.epilog, !dbg !7626

sw.epilog:                                        ; preds = %if.end241, %for.end219, %if.end117, %for.end
  br label %while.cond, !dbg !7627

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %ret, align 4, !dbg !7629
  br label %getdata, !dbg !7630

getdata:                                          ; preds = %while.end, %if.then152, %if.then96, %if.then43, %if.then14
  %196 = load i32, i32* %i, align 4, !dbg !7631
  %197 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7632
  %loop251 = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %197, i32 0, i32 26, !dbg !7633
  store i32 %196, i32* %loop251, align 8, !dbg !7634
  %198 = load i32, i32* %ret, align 4, !dbg !7635
  store i32 %198, i32* %retval, align 4, !dbg !7636
  br label %return, !dbg !7636

return:                                           ; preds = %getdata, %if.then240, %if.then206, %if.then172, %if.then116, %if.then63
  %199 = load i32, i32* %retval, align 4, !dbg !7637
  ret i32 %199, !dbg !7637
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lzx_decode_huffman(%struct.huffman* %hf, i32 %rbits) #6 !dbg !604 {
entry:
  %retval = alloca i32, align 4
  %hf.addr = alloca %struct.huffman*, align 8
  %rbits.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.huffman* %hf, %struct.huffman** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman** %hf.addr, metadata !7638, metadata !638), !dbg !7639
  store i32 %rbits, i32* %rbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rbits.addr, metadata !7640, metadata !638), !dbg !7641
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7642, metadata !638), !dbg !7643
  %0 = load i32, i32* %rbits.addr, align 4, !dbg !7644
  %1 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7645
  %shift_bits = getelementptr inbounds %struct.huffman, %struct.huffman* %1, i32 0, i32 4, !dbg !7646
  %2 = load i32, i32* %shift_bits, align 4, !dbg !7646
  %shr = lshr i32 %0, %2, !dbg !7647
  %idxprom = zext i32 %shr to i64, !dbg !7648
  %3 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7648
  %tbl = getelementptr inbounds %struct.huffman, %struct.huffman* %3, i32 0, i32 8, !dbg !7649
  %4 = load i16*, i16** %tbl, align 8, !dbg !7649
  %arrayidx = getelementptr inbounds i16, i16* %4, i64 %idxprom, !dbg !7648
  %5 = load i16, i16* %arrayidx, align 2, !dbg !7648
  %conv = zext i16 %5 to i32, !dbg !7648
  store i32 %conv, i32* %c, align 4, !dbg !7650
  %6 = load i32, i32* %c, align 4, !dbg !7651
  %7 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7653
  %len_size = getelementptr inbounds %struct.huffman, %struct.huffman* %7, i32 0, i32 0, !dbg !7654
  %8 = load i32, i32* %len_size, align 8, !dbg !7654
  %cmp = icmp slt i32 %6, %8, !dbg !7655
  br i1 %cmp, label %if.then, label %if.end, !dbg !7656

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %c, align 4, !dbg !7657
  store i32 %9, i32* %retval, align 4, !dbg !7658
  br label %return, !dbg !7658

if.end:                                           ; preds = %entry
  %10 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7659
  %11 = load i32, i32* %rbits.addr, align 4, !dbg !7660
  %12 = load i32, i32* %c, align 4, !dbg !7661
  %call = call i32 @lzx_decode_huffman_tree(%struct.huffman* %10, i32 %11, i32 %12), !dbg !7662
  store i32 %call, i32* %retval, align 4, !dbg !7663
  br label %return, !dbg !7663

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7664
  ret i32 %13, !dbg !7664
}

; Function Attrs: nounwind uwtable
define internal i32 @lzx_decode_huffman_tree(%struct.huffman* %hf, i32 %rbits, i32 %c) #0 !dbg !607 {
entry:
  %retval = alloca i32, align 4
  %hf.addr = alloca %struct.huffman*, align 8
  %rbits.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %ht = alloca %struct.htree_t*, align 8
  %extlen = alloca i32, align 4
  store %struct.huffman* %hf, %struct.huffman** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman** %hf.addr, metadata !7665, metadata !638), !dbg !7666
  store i32 %rbits, i32* %rbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rbits.addr, metadata !7667, metadata !638), !dbg !7668
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !7669, metadata !638), !dbg !7670
  call void @llvm.dbg.declare(metadata %struct.htree_t** %ht, metadata !7671, metadata !638), !dbg !7672
  call void @llvm.dbg.declare(metadata i32* %extlen, metadata !7673, metadata !638), !dbg !7674
  %0 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7675
  %tree = getelementptr inbounds %struct.huffman, %struct.huffman* %0, i32 0, i32 9, !dbg !7676
  %1 = load %struct.htree_t*, %struct.htree_t** %tree, align 8, !dbg !7676
  store %struct.htree_t* %1, %struct.htree_t** %ht, align 8, !dbg !7677
  %2 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7678
  %shift_bits = getelementptr inbounds %struct.huffman, %struct.huffman* %2, i32 0, i32 4, !dbg !7679
  %3 = load i32, i32* %shift_bits, align 4, !dbg !7679
  store i32 %3, i32* %extlen, align 4, !dbg !7680
  br label %while.cond, !dbg !7681

while.cond:                                       ; preds = %if.end8, %entry
  %4 = load i32, i32* %c.addr, align 4, !dbg !7682
  %5 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7684
  %len_size = getelementptr inbounds %struct.huffman, %struct.huffman* %5, i32 0, i32 0, !dbg !7685
  %6 = load i32, i32* %len_size, align 8, !dbg !7685
  %cmp = icmp sge i32 %4, %6, !dbg !7686
  br i1 %cmp, label %while.body, label %while.end, !dbg !7687

while.body:                                       ; preds = %while.cond
  %7 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7688
  %len_size1 = getelementptr inbounds %struct.huffman, %struct.huffman* %7, i32 0, i32 0, !dbg !7690
  %8 = load i32, i32* %len_size1, align 8, !dbg !7690
  %9 = load i32, i32* %c.addr, align 4, !dbg !7691
  %sub = sub nsw i32 %9, %8, !dbg !7691
  store i32 %sub, i32* %c.addr, align 4, !dbg !7691
  %10 = load i32, i32* %extlen, align 4, !dbg !7692
  %dec = add nsw i32 %10, -1, !dbg !7692
  store i32 %dec, i32* %extlen, align 4, !dbg !7692
  %cmp2 = icmp sle i32 %10, 0, !dbg !7694
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !7695

lor.lhs.false:                                    ; preds = %while.body
  %11 = load i32, i32* %c.addr, align 4, !dbg !7696
  %12 = load %struct.huffman*, %struct.huffman** %hf.addr, align 8, !dbg !7698
  %tree_used = getelementptr inbounds %struct.huffman, %struct.huffman* %12, i32 0, i32 6, !dbg !7699
  %13 = load i32, i32* %tree_used, align 4, !dbg !7699
  %cmp3 = icmp sge i32 %11, %13, !dbg !7700
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7701

if.then:                                          ; preds = %lor.lhs.false, %while.body
  store i32 0, i32* %retval, align 4, !dbg !7702
  br label %return, !dbg !7702

if.end:                                           ; preds = %lor.lhs.false
  %14 = load i32, i32* %rbits.addr, align 4, !dbg !7703
  %15 = load i32, i32* %extlen, align 4, !dbg !7705
  %shl = shl i32 1, %15, !dbg !7706
  %and = and i32 %14, %shl, !dbg !7707
  %tobool = icmp ne i32 %and, 0, !dbg !7707
  br i1 %tobool, label %if.then4, label %if.else, !dbg !7708

if.then4:                                         ; preds = %if.end
  %16 = load i32, i32* %c.addr, align 4, !dbg !7709
  %idxprom = sext i32 %16 to i64, !dbg !7710
  %17 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7710
  %arrayidx = getelementptr inbounds %struct.htree_t, %struct.htree_t* %17, i64 %idxprom, !dbg !7710
  %left = getelementptr inbounds %struct.htree_t, %struct.htree_t* %arrayidx, i32 0, i32 0, !dbg !7711
  %18 = load i16, i16* %left, align 2, !dbg !7711
  %conv = zext i16 %18 to i32, !dbg !7710
  store i32 %conv, i32* %c.addr, align 4, !dbg !7712
  br label %if.end8, !dbg !7713

if.else:                                          ; preds = %if.end
  %19 = load i32, i32* %c.addr, align 4, !dbg !7714
  %idxprom5 = sext i32 %19 to i64, !dbg !7715
  %20 = load %struct.htree_t*, %struct.htree_t** %ht, align 8, !dbg !7715
  %arrayidx6 = getelementptr inbounds %struct.htree_t, %struct.htree_t* %20, i64 %idxprom5, !dbg !7715
  %right = getelementptr inbounds %struct.htree_t, %struct.htree_t* %arrayidx6, i32 0, i32 1, !dbg !7716
  %21 = load i16, i16* %right, align 2, !dbg !7716
  %conv7 = zext i16 %21 to i32, !dbg !7715
  store i32 %conv7, i32* %c.addr, align 4, !dbg !7717
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then4
  br label %while.cond, !dbg !7718

while.end:                                        ; preds = %while.cond
  %22 = load i32, i32* %c.addr, align 4, !dbg !7720
  store i32 %22, i32* %retval, align 4, !dbg !7721
  br label %return, !dbg !7721

return:                                           ; preds = %while.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !7722
  ret i32 %23, !dbg !7722
}

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @archive_le32enc(i8* %pp, i32 %u) #6 !dbg !614 {
entry:
  %pp.addr = alloca i8*, align 8
  %u.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !7723, metadata !638), !dbg !7724
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !7725, metadata !638), !dbg !7726
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7727, metadata !638), !dbg !7728
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !7729
  store i8* %0, i8** %p, align 8, !dbg !7728
  %1 = load i32, i32* %u.addr, align 4, !dbg !7730
  %and = and i32 %1, 255, !dbg !7731
  %conv = trunc i32 %and to i8, !dbg !7730
  %2 = load i8*, i8** %p, align 8, !dbg !7732
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !7732
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7733
  %3 = load i32, i32* %u.addr, align 4, !dbg !7734
  %shr = lshr i32 %3, 8, !dbg !7735
  %and1 = and i32 %shr, 255, !dbg !7736
  %conv2 = trunc i32 %and1 to i8, !dbg !7737
  %4 = load i8*, i8** %p, align 8, !dbg !7738
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !7738
  store i8 %conv2, i8* %arrayidx3, align 1, !dbg !7739
  %5 = load i32, i32* %u.addr, align 4, !dbg !7740
  %shr4 = lshr i32 %5, 16, !dbg !7741
  %and5 = and i32 %shr4, 255, !dbg !7742
  %conv6 = trunc i32 %and5 to i8, !dbg !7743
  %6 = load i8*, i8** %p, align 8, !dbg !7744
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !7744
  store i8 %conv6, i8* %arrayidx7, align 1, !dbg !7745
  %7 = load i32, i32* %u.addr, align 4, !dbg !7746
  %shr8 = lshr i32 %7, 24, !dbg !7747
  %and9 = and i32 %shr8, 255, !dbg !7748
  %conv10 = trunc i32 %and9 to i8, !dbg !7749
  %8 = load i8*, i8** %p, align 8, !dbg !7750
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 3, !dbg !7750
  store i8 %conv10, i8* %arrayidx11, align 1, !dbg !7751
  ret void, !dbg !7752
}

declare void @archive_string_free(%struct.archive_string*) #2

declare i32 @cm_zlib_inflateEnd(%struct.z_stream_s*) #2

; Function Attrs: nounwind uwtable
define internal void @lzx_decode_free(%struct.lzx_stream* %strm) #0 !dbg !620 {
entry:
  %strm.addr = alloca %struct.lzx_stream*, align 8
  store %struct.lzx_stream* %strm, %struct.lzx_stream** %strm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzx_stream** %strm.addr, metadata !7753, metadata !638), !dbg !7754
  %0 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7755
  %ds = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %0, i32 0, i32 6, !dbg !7757
  %1 = load %struct.lzx_dec*, %struct.lzx_dec** %ds, align 8, !dbg !7757
  %cmp = icmp eq %struct.lzx_dec* %1, null, !dbg !7758
  br i1 %cmp, label %if.then, label %if.end, !dbg !7759

if.then:                                          ; preds = %entry
  br label %return, !dbg !7760

if.end:                                           ; preds = %entry
  %2 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7761
  %ds1 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %2, i32 0, i32 6, !dbg !7762
  %3 = load %struct.lzx_dec*, %struct.lzx_dec** %ds1, align 8, !dbg !7762
  %w_buff = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %3, i32 0, i32 3, !dbg !7763
  %4 = load i8*, i8** %w_buff, align 8, !dbg !7763
  call void @free(i8* %4) #8, !dbg !7764
  %5 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7765
  %ds2 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %5, i32 0, i32 6, !dbg !7766
  %6 = load %struct.lzx_dec*, %struct.lzx_dec** %ds2, align 8, !dbg !7766
  %pos_tbl = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %6, i32 0, i32 20, !dbg !7767
  %7 = load %struct.lzx_pos_tbl*, %struct.lzx_pos_tbl** %pos_tbl, align 8, !dbg !7767
  %8 = bitcast %struct.lzx_pos_tbl* %7 to i8*, !dbg !7765
  call void @free(i8* %8) #8, !dbg !7768
  %9 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7769
  %ds3 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %9, i32 0, i32 6, !dbg !7770
  %10 = load %struct.lzx_dec*, %struct.lzx_dec** %ds3, align 8, !dbg !7770
  %at = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %10, i32 0, i32 22, !dbg !7771
  call void @lzx_huffman_free(%struct.huffman* %at), !dbg !7772
  %11 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7773
  %ds4 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %11, i32 0, i32 6, !dbg !7774
  %12 = load %struct.lzx_dec*, %struct.lzx_dec** %ds4, align 8, !dbg !7774
  %pt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %12, i32 0, i32 25, !dbg !7775
  call void @lzx_huffman_free(%struct.huffman* %pt), !dbg !7776
  %13 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7777
  %ds5 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %13, i32 0, i32 6, !dbg !7778
  %14 = load %struct.lzx_dec*, %struct.lzx_dec** %ds5, align 8, !dbg !7778
  %mt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %14, i32 0, i32 24, !dbg !7779
  call void @lzx_huffman_free(%struct.huffman* %mt), !dbg !7780
  %15 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7781
  %ds6 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %15, i32 0, i32 6, !dbg !7782
  %16 = load %struct.lzx_dec*, %struct.lzx_dec** %ds6, align 8, !dbg !7782
  %lt = getelementptr inbounds %struct.lzx_dec, %struct.lzx_dec* %16, i32 0, i32 23, !dbg !7783
  call void @lzx_huffman_free(%struct.huffman* %lt), !dbg !7784
  %17 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7785
  %ds7 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %17, i32 0, i32 6, !dbg !7786
  %18 = load %struct.lzx_dec*, %struct.lzx_dec** %ds7, align 8, !dbg !7786
  %19 = bitcast %struct.lzx_dec* %18 to i8*, !dbg !7785
  call void @free(i8* %19) #8, !dbg !7787
  %20 = load %struct.lzx_stream*, %struct.lzx_stream** %strm.addr, align 8, !dbg !7788
  %ds8 = getelementptr inbounds %struct.lzx_stream, %struct.lzx_stream* %20, i32 0, i32 6, !dbg !7789
  store %struct.lzx_dec* null, %struct.lzx_dec** %ds8, align 8, !dbg !7790
  br label %return, !dbg !7791

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7792
}

declare void @archive_wstring_free(%struct.archive_wstring*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!634, !635}
!llvm.ident = !{!636}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !514, globals: !621)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!2 = !{}
!3 = !{!4, !292, !123, !508, !301, !52, !510, !337, !511, !436, !38, !23, !45, !307, !13, !305, !325, !399, !512, !404, !477, !513}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read", file: !6, line: 159, size: 20288, align: 64, elements: !7)
!6 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!7 = !{!8, !111, !112, !113, !114, !115, !159, !223, !224, !225, !226, !227, !228, !261, !263, !273, !274}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !5, file: !6, line: 160, baseType: !9, size: 1280, align: 64)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive", file: !10, line: 89, size: 1280, align: 64, elements: !11)
!10 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!11 = !{!12, !14, !15, !83, !84, !85, !86, !87, !88, !89, !90, !98, !99, !100, !101, !105, !106, !107, !108, !109, !110}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !9, file: !10, line: 96, baseType: !13, size: 32, align: 32)
!13 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9, file: !10, line: 97, baseType: !13, size: 32, align: 32, offset: 32)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !9, file: !10, line: 103, baseType: !16, size: 64, align: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_vtable", file: !10, line: 63, size: 832, align: 64, elements: !18)
!18 = !{!19, !25, !26, !33, !34, !48, !54, !59, !60, !67, !68, !72, !76}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "archive_close", scope: !17, file: !10, line: 64, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DISubroutineType(types: !22)
!22 = !{!23, !24}
!23 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "archive_free", scope: !17, file: !10, line: 65, baseType: !20, size: 64, align: 64, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_header", scope: !17, file: !10, line: 66, baseType: !27, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DISubroutineType(types: !29)
!29 = !{!23, !24, !30}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_entry", file: !32, line: 180, flags: DIFlagFwdDecl)
!32 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!33 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_finish_entry", scope: !17, file: !10, line: 68, baseType: !20, size: 64, align: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data", scope: !17, file: !10, line: 69, baseType: !35, size: 64, align: 64, offset: 256)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DISubroutineType(types: !37)
!37 = !{!38, !24, !43, !45}
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !39, line: 109, baseType: !40)
!39 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !41, line: 172, baseType: !42)
!41 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!42 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !46, line: 62, baseType: !47)
!46 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!47 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data_block", scope: !17, file: !10, line: 71, baseType: !49, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DISubroutineType(types: !51)
!51 = !{!38, !24, !43, !45, !52}
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !53, line: 40, baseType: !42)
!53 = !DIFile(filename: "/usr/include/stdint.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!54 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header", scope: !17, file: !10, line: 74, baseType: !55, size: 64, align: 64, offset: 384)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64, align: 64)
!56 = !DISubroutineType(types: !57)
!57 = !{!23, !24, !58}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header2", scope: !17, file: !10, line: 76, baseType: !27, size: 64, align: 64, offset: 448)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_data_block", scope: !17, file: !10, line: 78, baseType: !61, size: 64, align: 64, offset: 512)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{!23, !24, !64, !65, !66}
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_count", scope: !17, file: !10, line: 81, baseType: !20, size: 64, align: 64, offset: 576)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_bytes", scope: !17, file: !10, line: 82, baseType: !69, size: 64, align: 64, offset: 640)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64, align: 64)
!70 = !DISubroutineType(types: !71)
!71 = !{!52, !24, !23}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_code", scope: !17, file: !10, line: 83, baseType: !73, size: 64, align: 64, offset: 704)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DISubroutineType(types: !75)
!75 = !{!23, !24, !23}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_name", scope: !17, file: !10, line: 84, baseType: !77, size: 64, align: 64, offset: 768)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64, align: 64)
!78 = !DISubroutineType(types: !79)
!79 = !{!80, !24, !23}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!82 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format", scope: !9, file: !10, line: 105, baseType: !23, size: 32, align: 32, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format_name", scope: !9, file: !10, line: 106, baseType: !80, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "compression_code", scope: !9, file: !10, line: 108, baseType: !23, size: 32, align: 32, offset: 256)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "compression_name", scope: !9, file: !10, line: 109, baseType: !80, size: 64, align: 64, offset: 320)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "file_count", scope: !9, file: !10, line: 112, baseType: !23, size: 32, align: 32, offset: 384)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "archive_error_number", scope: !9, file: !10, line: 114, baseType: !23, size: 32, align: 32, offset: 416)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !9, file: !10, line: 115, baseType: !80, size: 64, align: 64, offset: 448)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "error_string", scope: !9, file: !10, line: 116, baseType: !91, size: 192, align: 64, offset: 512)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string", file: !92, line: 58, size: 192, align: 64, elements: !93)
!92 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_string.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!93 = !{!94, !96, !97}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !91, file: !92, line: 59, baseType: !95, size: 64, align: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !91, file: !92, line: 60, baseType: !45, size: 64, align: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !91, file: !92, line: 61, baseType: !45, size: 64, align: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "current_code", scope: !9, file: !10, line: 118, baseType: !95, size: 64, align: 64, offset: 704)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "current_codepage", scope: !9, file: !10, line: 119, baseType: !13, size: 32, align: 32, offset: 768)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "current_oemcp", scope: !9, file: !10, line: 120, baseType: !13, size: 32, align: 32, offset: 800)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "sconv", scope: !9, file: !10, line: 121, baseType: !102, size: 64, align: 64, offset: 832)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64, align: 64)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string_conv", file: !104, line: 36, flags: DIFlagFwdDecl)
!104 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_entry_locale.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!105 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_block", scope: !9, file: !10, line: 127, baseType: !80, size: 64, align: 64, offset: 896)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_offset", scope: !9, file: !10, line: 128, baseType: !52, size: 64, align: 64, offset: 960)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_output_offset", scope: !9, file: !10, line: 129, baseType: !52, size: 64, align: 64, offset: 1024)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_remaining", scope: !9, file: !10, line: 130, baseType: !45, size: 64, align: 64, offset: 1088)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_is_posix_read", scope: !9, file: !10, line: 137, baseType: !82, size: 8, align: 8, offset: 1152)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_requested", scope: !9, file: !10, line: 138, baseType: !45, size: 64, align: 64, offset: 1216)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5, file: !6, line: 162, baseType: !30, size: 64, align: 64, offset: 1280)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_set", scope: !5, file: !6, line: 165, baseType: !23, size: 32, align: 32, offset: 1344)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_dev", scope: !5, file: !6, line: 166, baseType: !52, size: 64, align: 64, offset: 1408)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_ino", scope: !5, file: !6, line: 167, baseType: !52, size: 64, align: 64, offset: 1472)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !5, file: !6, line: 170, baseType: !116, size: 576, align: 64, offset: 1536)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_client", file: !6, line: 134, size: 576, align: 64, elements: !117)
!117 = !{!118, !124, !130, !136, !141, !144, !149, !150, !151, !152}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "opener", scope: !116, file: !6, line: 135, baseType: !119, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_open_callback", file: !32, line: 241, baseType: !121)
!121 = !DISubroutineType(types: !122)
!122 = !{!23, !24, !123}
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "reader", scope: !116, file: !6, line: 136, baseType: !125, size: 64, align: 64, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_read_callback", file: !32, line: 218, baseType: !127)
!127 = !DISubroutineType(types: !128)
!128 = !{!129, !24, !123, !64}
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_ssize_t", file: !32, line: 95, baseType: !38)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "skipper", scope: !116, file: !6, line: 137, baseType: !131, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_skip_callback", file: !32, line: 226, baseType: !133)
!133 = !DISubroutineType(types: !134)
!134 = !{!135, !24, !123, !135}
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_int64_t", file: !32, line: 73, baseType: !52)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "seeker", scope: !116, file: !6, line: 138, baseType: !137, size: 64, align: 64, offset: 192)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64, align: 64)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_seek_callback", file: !32, line: 233, baseType: !139)
!139 = !DISubroutineType(types: !140)
!140 = !{!135, !24, !123, !135, !23}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "closer", scope: !116, file: !6, line: 139, baseType: !142, size: 64, align: 64, offset: 256)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64, align: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_close_callback", file: !32, line: 243, baseType: !121)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "switcher", scope: !116, file: !6, line: 140, baseType: !145, size: 64, align: 64, offset: 320)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_switch_callback", file: !32, line: 249, baseType: !147)
!147 = !DISubroutineType(types: !148)
!148 = !{!23, !24, !123, !123}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !116, file: !6, line: 141, baseType: !13, size: 32, align: 32, offset: 384)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !116, file: !6, line: 142, baseType: !13, size: 32, align: 32, offset: 416)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !116, file: !6, line: 143, baseType: !52, size: 64, align: 64, offset: 448)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !116, file: !6, line: 144, baseType: !153, size: 64, align: 64, offset: 512)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!154 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_data_node", file: !6, line: 129, size: 192, align: 64, elements: !155)
!155 = !{!156, !157, !158}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "begin_position", scope: !154, file: !6, line: 130, baseType: !52, size: 64, align: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !154, file: !6, line: 131, baseType: !52, size: 64, align: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !154, file: !6, line: 132, baseType: !123, size: 64, align: 64, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "bidders", scope: !5, file: !6, line: 173, baseType: !160, size: 6144, align: 64, offset: 2112)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 6144, align: 64, elements: !221)
!161 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter_bidder", file: !6, line: 60, size: 384, align: 64, elements: !162)
!162 = !{!163, !164, !165, !212, !213, !217}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !161, file: !6, line: 62, baseType: !123, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !161, file: !6, line: 64, baseType: !80, size: 64, align: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !161, file: !6, line: 66, baseType: !166, size: 64, align: 64, offset: 128)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{!23, !169, !170}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64, align: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64, align: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter", file: !6, line: 82, size: 1408, align: 64, elements: !172)
!172 = !{!173, !174, !175, !176, !177, !181, !185, !189, !193, !194, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !171, file: !6, line: 83, baseType: !52, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "bidder", scope: !171, file: !6, line: 86, baseType: !169, size: 64, align: 64, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "upstream", scope: !171, file: !6, line: 87, baseType: !170, size: 64, align: 64, offset: 128)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !171, file: !6, line: 88, baseType: !4, size: 64, align: 64, offset: 192)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !171, file: !6, line: 90, baseType: !178, size: 64, align: 64, offset: 256)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{!23, !170}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !171, file: !6, line: 92, baseType: !182, size: 64, align: 64, offset: 320)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64, align: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!38, !170, !64}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !171, file: !6, line: 94, baseType: !186, size: 64, align: 64, offset: 384)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64, align: 64)
!187 = !DISubroutineType(types: !188)
!188 = !{!52, !170, !52}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !171, file: !6, line: 96, baseType: !190, size: 64, align: 64, offset: 448)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!52, !170, !52, !23}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !171, file: !6, line: 98, baseType: !178, size: 64, align: 64, offset: 512)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sswitch", scope: !171, file: !6, line: 100, baseType: !195, size: 64, align: 64, offset: 576)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64, align: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!23, !170, !13}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !171, file: !6, line: 102, baseType: !123, size: 64, align: 64, offset: 640)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !171, file: !6, line: 104, baseType: !80, size: 64, align: 64, offset: 704)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !171, file: !6, line: 105, baseType: !23, size: 32, align: 32, offset: 768)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !171, file: !6, line: 108, baseType: !95, size: 64, align: 64, offset: 832)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !171, file: !6, line: 109, baseType: !45, size: 64, align: 64, offset: 896)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !171, file: !6, line: 110, baseType: !95, size: 64, align: 64, offset: 960)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !171, file: !6, line: 111, baseType: !45, size: 64, align: 64, offset: 1024)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "client_buff", scope: !171, file: !6, line: 112, baseType: !43, size: 64, align: 64, offset: 1088)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "client_total", scope: !171, file: !6, line: 113, baseType: !45, size: 64, align: 64, offset: 1152)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "client_next", scope: !171, file: !6, line: 114, baseType: !80, size: 64, align: 64, offset: 1216)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "client_avail", scope: !171, file: !6, line: 115, baseType: !45, size: 64, align: 64, offset: 1280)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_file", scope: !171, file: !6, line: 116, baseType: !82, size: 8, align: 8, offset: 1344)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "closed", scope: !171, file: !6, line: 117, baseType: !82, size: 8, align: 8, offset: 1352)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "fatal", scope: !171, file: !6, line: 118, baseType: !82, size: 8, align: 8, offset: 1360)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !161, file: !6, line: 69, baseType: !178, size: 64, align: 64, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !161, file: !6, line: 71, baseType: !214, size: 64, align: 64, offset: 256)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64, align: 64)
!215 = !DISubroutineType(types: !216)
!216 = !{!23, !169, !80, !80}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !161, file: !6, line: 74, baseType: !218, size: 64, align: 64, offset: 320)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!23, !169}
!221 = !{!222}
!222 = !DISubrange(count: 16)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5, file: !6, line: 176, baseType: !170, size: 64, align: 64, offset: 8256)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_filter_bidding", scope: !5, file: !6, line: 179, baseType: !23, size: 32, align: 32, offset: 8320)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "header_position", scope: !5, file: !6, line: 182, baseType: !52, size: 64, align: 64, offset: 8384)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "data_start_node", scope: !5, file: !6, line: 185, baseType: !13, size: 32, align: 32, offset: 8448)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "data_end_node", scope: !5, file: !6, line: 186, baseType: !13, size: 32, align: 32, offset: 8480)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !5, file: !6, line: 209, baseType: !229, size: 11264, align: 64, offset: 8512)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 11264, align: 64, elements: !221)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_format_descriptor", file: !6, line: 196, size: 704, align: 64, elements: !231)
!231 = !{!232, !233, !234, !238, !242, !246, !250, !254, !258, !259, !260}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !6, line: 197, baseType: !123, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !230, file: !6, line: 198, baseType: !80, size: 64, align: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !230, file: !6, line: 199, baseType: !235, size: 64, align: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DISubroutineType(types: !237)
!237 = !{!23, !4, !23}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !230, file: !6, line: 200, baseType: !239, size: 64, align: 64, offset: 192)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!23, !4, !80, !80}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !230, file: !6, line: 202, baseType: !243, size: 64, align: 64, offset: 256)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!23, !4, !30}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "read_data", scope: !230, file: !6, line: 203, baseType: !247, size: 64, align: 64, offset: 320)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = !DISubroutineType(types: !249)
!249 = !{!23, !4, !64, !65, !66}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_skip", scope: !230, file: !6, line: 204, baseType: !251, size: 64, align: 64, offset: 384)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{!23, !4}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "seek_data", scope: !230, file: !6, line: 205, baseType: !255, size: 64, align: 64, offset: 448)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!52, !4, !52, !23}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !230, file: !6, line: 206, baseType: !251, size: 64, align: 64, offset: 512)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "format_capabilties", scope: !230, file: !6, line: 207, baseType: !251, size: 64, align: 64, offset: 576)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "has_encrypted_entries", scope: !230, file: !6, line: 208, baseType: !251, size: 64, align: 64, offset: 640)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !5, file: !6, line: 210, baseType: !262, size: 64, align: 64, offset: 19776)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !5, file: !6, line: 215, baseType: !264, size: 64, align: 64, offset: 19840)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_extract", file: !6, line: 151, size: 192, align: 64, elements: !266)
!266 = !{!267, !268, !272}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !265, file: !6, line: 152, baseType: !24, size: 64, align: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress", scope: !265, file: !6, line: 155, baseType: !269, size: 64, align: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !123}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress_user_data", scope: !265, file: !6, line: 156, baseType: !123, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_archive_extract", scope: !5, file: !6, line: 216, baseType: !251, size: 64, align: 64, offset: 19904)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "passphrases", scope: !5, file: !6, line: 227, baseType: !275, size: 320, align: 64, offset: 19968)
!275 = !DICompositeType(tag: DW_TAG_structure_type, scope: !5, file: !6, line: 221, size: 320, align: 64, elements: !276)
!276 = !{!277, !283, !285, !286, !291}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !275, file: !6, line: 222, baseType: !278, size: 64, align: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64, align: 64)
!279 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_passphrase", file: !6, line: 146, size: 128, align: 64, elements: !280)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "passphrase", scope: !279, file: !6, line: 147, baseType: !95, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !279, file: !6, line: 148, baseType: !278, size: 64, align: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !275, file: !6, line: 223, baseType: !284, size: 64, align: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "candidate", scope: !275, file: !6, line: 224, baseType: !23, size: 32, align: 32, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !275, file: !6, line: 225, baseType: !287, size: 64, align: 64, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64, align: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_passphrase_callback", file: !32, line: 256, baseType: !289)
!289 = !DISubroutineType(types: !290)
!290 = !{!80, !24, !123}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !275, file: !6, line: 226, baseType: !123, size: 64, align: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "cab", file: !1, line: 274, size: 3584, align: 64, elements: !294)
!294 = !{!295, !296, !297, !298, !299, !300, !336, !349, !351, !352, !369, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !393, !431, !432}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "entry_offset", scope: !293, file: !1, line: 276, baseType: !52, size: 64, align: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "entry_bytes_remaining", scope: !293, file: !1, line: 277, baseType: !52, size: 64, align: 64, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "entry_unconsumed", scope: !293, file: !1, line: 278, baseType: !52, size: 64, align: 64, offset: 128)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "entry_compressed_bytes_read", scope: !293, file: !1, line: 279, baseType: !52, size: 64, align: 64, offset: 192)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "entry_uncompressed_bytes_read", scope: !293, file: !1, line: 280, baseType: !52, size: 64, align: 64, offset: 256)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "entry_cffolder", scope: !293, file: !1, line: 281, baseType: !301, size: 64, align: 64, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64, align: 64)
!302 = !DICompositeType(tag: DW_TAG_structure_type, name: "cffolder", file: !1, line: 219, size: 768, align: 64, elements: !303)
!303 = !{!304, !306, !309, !310, !311, !312, !334, !335}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "cfdata_offset_in_cab", scope: !302, file: !1, line: 220, baseType: !305, size: 32, align: 32)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !53, line: 51, baseType: !13)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "cfdata_count", scope: !302, file: !1, line: 221, baseType: !307, size: 16, align: 16, offset: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !53, line: 49, baseType: !308)
!308 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "comptype", scope: !302, file: !1, line: 222, baseType: !307, size: 16, align: 16, offset: 48)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "compdata", scope: !302, file: !1, line: 227, baseType: !307, size: 16, align: 16, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "compname", scope: !302, file: !1, line: 228, baseType: !80, size: 64, align: 64, offset: 128)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "cfdata", scope: !302, file: !1, line: 230, baseType: !313, size: 512, align: 64, offset: 192)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "cfdata", file: !1, line: 197, size: 512, align: 64, elements: !314)
!314 = !{!315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !327, !328, !332, !333}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sum", scope: !313, file: !1, line: 199, baseType: !305, size: 32, align: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_size", scope: !313, file: !1, line: 200, baseType: !307, size: 16, align: 16, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_bytes_remaining", scope: !313, file: !1, line: 201, baseType: !307, size: 16, align: 16, offset: 48)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_size", scope: !313, file: !1, line: 202, baseType: !307, size: 16, align: 16, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_bytes_remaining", scope: !313, file: !1, line: 203, baseType: !307, size: 16, align: 16, offset: 80)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_avail", scope: !313, file: !1, line: 205, baseType: !307, size: 16, align: 16, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "read_offset", scope: !313, file: !1, line: 207, baseType: !307, size: 16, align: 16, offset: 112)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "unconsumed", scope: !313, file: !1, line: 208, baseType: !52, size: 64, align: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "memimage_size", scope: !313, file: !1, line: 210, baseType: !45, size: 64, align: 64, offset: 192)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "memimage", scope: !313, file: !1, line: 211, baseType: !325, size: 64, align: 64, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64, align: 64)
!326 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "sum_calculated", scope: !313, file: !1, line: 213, baseType: !305, size: 32, align: 32, offset: 320)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "sum_extra", scope: !313, file: !1, line: 214, baseType: !329, size: 32, align: 8, offset: 352)
!329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 32, align: 8, elements: !330)
!330 = !{!331}
!331 = !DISubrange(count: 4)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "sum_extra_avail", scope: !313, file: !1, line: 215, baseType: !23, size: 32, align: 32, offset: 384)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "sum_ptr", scope: !313, file: !1, line: 216, baseType: !43, size: 64, align: 64, offset: 448)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cfdata_index", scope: !302, file: !1, line: 231, baseType: !23, size: 32, align: 32, offset: 704)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "decompress_init", scope: !302, file: !1, line: 233, baseType: !82, size: 8, align: 8, offset: 736)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "entry_cffile", scope: !293, file: !1, line: 282, baseType: !337, size: 64, align: 64, offset: 384)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64, align: 64)
!338 = !DICompositeType(tag: DW_TAG_structure_type, name: "cffile", file: !1, line: 236, size: 384, align: 64, elements: !339)
!339 = !{!340, !341, !342, !346, !347, !348}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_size", scope: !338, file: !1, line: 237, baseType: !305, size: 32, align: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !338, file: !1, line: 238, baseType: !305, size: 32, align: 32, offset: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !338, file: !1, line: 239, baseType: !343, size: 64, align: 64, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !344, line: 75, baseType: !345)
!344 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !41, line: 139, baseType: !42)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "folder", scope: !338, file: !1, line: 240, baseType: !307, size: 16, align: 16, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !338, file: !1, line: 244, baseType: !326, size: 8, align: 8, offset: 144)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !338, file: !1, line: 247, baseType: !91, size: 192, align: 64, offset: 192)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "entry_cfdata", scope: !293, file: !1, line: 283, baseType: !350, size: 64, align: 64, offset: 448)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "cab_offset", scope: !293, file: !1, line: 286, baseType: !52, size: 64, align: 64, offset: 512)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "cfheader", scope: !293, file: !1, line: 287, baseType: !353, size: 384, align: 64, offset: 576)
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "cfheader", file: !1, line: 250, size: 384, align: 64, elements: !354)
!354 = !{!355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !353, file: !1, line: 252, baseType: !305, size: 32, align: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "files_offset", scope: !353, file: !1, line: 253, baseType: !305, size: 32, align: 32, offset: 32)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "folder_count", scope: !353, file: !1, line: 254, baseType: !307, size: 16, align: 16, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "file_count", scope: !353, file: !1, line: 255, baseType: !307, size: 16, align: 16, offset: 80)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !353, file: !1, line: 256, baseType: !307, size: 16, align: 16, offset: 96)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "setid", scope: !353, file: !1, line: 260, baseType: !307, size: 16, align: 16, offset: 112)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "cabinet", scope: !353, file: !1, line: 261, baseType: !307, size: 16, align: 16, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !353, file: !1, line: 263, baseType: !326, size: 8, align: 8, offset: 144)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !353, file: !1, line: 264, baseType: !326, size: 8, align: 8, offset: 152)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "cffolder", scope: !353, file: !1, line: 265, baseType: !326, size: 8, align: 8, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "cfdata", scope: !353, file: !1, line: 266, baseType: !326, size: 8, align: 8, offset: 168)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "folder_array", scope: !353, file: !1, line: 268, baseType: !301, size: 64, align: 64, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "file_array", scope: !353, file: !1, line: 270, baseType: !337, size: 64, align: 64, offset: 256)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "file_index", scope: !353, file: !1, line: 271, baseType: !23, size: 32, align: 32, offset: 320)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !293, file: !1, line: 288, baseType: !370, size: 192, align: 64, offset: 960)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_wstring", file: !92, line: 64, size: 192, align: 64, elements: !371)
!371 = !{!372, !375, !376}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !370, file: !92, line: 65, baseType: !373, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64, align: 64)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !46, line: 90, baseType: !23)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !370, file: !92, line: 66, baseType: !45, size: 64, align: 64, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !370, file: !92, line: 67, baseType: !45, size: 64, align: 64, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "found_header", scope: !293, file: !1, line: 291, baseType: !82, size: 8, align: 8, offset: 1152)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_archive", scope: !293, file: !1, line: 292, baseType: !82, size: 8, align: 8, offset: 1160)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_entry", scope: !293, file: !1, line: 293, baseType: !82, size: 8, align: 8, offset: 1168)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_entry_cleanup", scope: !293, file: !1, line: 294, baseType: !82, size: 8, align: 8, offset: 1176)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_invoked", scope: !293, file: !1, line: 295, baseType: !82, size: 8, align: 8, offset: 1184)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_skipped", scope: !293, file: !1, line: 296, baseType: !52, size: 64, align: 64, offset: 1216)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_buffer", scope: !293, file: !1, line: 298, baseType: !325, size: 64, align: 64, offset: 1280)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_buffer_size", scope: !293, file: !1, line: 299, baseType: !45, size: 64, align: 64, offset: 1344)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "init_default_conversion", scope: !293, file: !1, line: 301, baseType: !23, size: 32, align: 32, offset: 1408)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "sconv", scope: !293, file: !1, line: 302, baseType: !102, size: 64, align: 64, offset: 1472)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_default", scope: !293, file: !1, line: 303, baseType: !102, size: 64, align: 64, offset: 1536)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_utf8", scope: !293, file: !1, line: 304, baseType: !102, size: 64, align: 64, offset: 1600)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "format_name", scope: !293, file: !1, line: 305, baseType: !390, size: 512, align: 8, offset: 1664)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 512, align: 8, elements: !391)
!391 = !{!392}
!392 = !DISubrange(count: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !293, file: !1, line: 308, baseType: !394, size: 896, align: 64, offset: 2176)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !395, line: 101, baseType: !396)
!395 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zlib.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !395, line: 82, size: 896, align: 64, elements: !397)
!397 = !{!398, !403, !405, !407, !408, !409, !410, !411, !416, !422, !427, !428, !429, !430}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !396, file: !395, line: 83, baseType: !399, size: 64, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64, align: 64)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !401, line: 276, baseType: !402)
!401 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zconf.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !401, line: 267, baseType: !326)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !396, file: !395, line: 84, baseType: !404, size: 32, align: 32, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !401, line: 269, baseType: !13)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !396, file: !395, line: 85, baseType: !406, size: 64, align: 64, offset: 128)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !401, line: 270, baseType: !47)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !396, file: !395, line: 87, baseType: !399, size: 64, align: 64, offset: 192)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !396, file: !395, line: 88, baseType: !404, size: 32, align: 32, offset: 256)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !396, file: !395, line: 89, baseType: !406, size: 64, align: 64, offset: 320)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !396, file: !395, line: 91, baseType: !95, size: 64, align: 64, offset: 384)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !396, file: !395, line: 92, baseType: !412, size: 64, align: 64, offset: 448)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64, align: 64)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !395, line: 1346, size: 32, align: 32, elements: !414)
!414 = !{!415}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !413, file: !395, line: 1346, baseType: !23, size: 32, align: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !396, file: !395, line: 94, baseType: !417, size: 64, align: 64, offset: 512)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !395, line: 77, baseType: !418)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{!421, !421, !404, !404}
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !401, line: 285, baseType: !123)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !396, file: !395, line: 95, baseType: !423, size: 64, align: 64, offset: 576)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !395, line: 78, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!425 = !DISubroutineType(types: !426)
!426 = !{null, !421, !421}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !396, file: !395, line: 96, baseType: !421, size: 64, align: 64, offset: 640)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !396, file: !395, line: 98, baseType: !23, size: 32, align: 32, offset: 704)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !396, file: !395, line: 99, baseType: !406, size: 64, align: 64, offset: 768)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !396, file: !395, line: 100, baseType: !406, size: 64, align: 64, offset: 832)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "stream_valid", scope: !293, file: !1, line: 309, baseType: !82, size: 8, align: 8, offset: 3072)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "xstrm", scope: !293, file: !1, line: 311, baseType: !433, size: 448, align: 64, offset: 3136)
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "lzx_stream", file: !1, line: 144, size: 448, align: 64, elements: !434)
!434 = !{!435, !438, !439, !440, !441, !442, !443}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !433, file: !1, line: 145, baseType: !436, size: 64, align: 64)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64, align: 64)
!437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !433, file: !1, line: 146, baseType: !52, size: 64, align: 64, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !433, file: !1, line: 147, baseType: !52, size: 64, align: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !433, file: !1, line: 148, baseType: !325, size: 64, align: 64, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !433, file: !1, line: 149, baseType: !52, size: 64, align: 64, offset: 256)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !433, file: !1, line: 150, baseType: !52, size: 64, align: 64, offset: 320)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !433, file: !1, line: 151, baseType: !444, size: 64, align: 64, offset: 384)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64, align: 64)
!445 = !DICompositeType(tag: DW_TAG_structure_type, name: "lzx_dec", file: !1, line: 52, size: 4864, align: 64, elements: !446)
!446 = !{!447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !473, !481, !503, !504, !505, !506, !507}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !445, file: !1, line: 54, baseType: !23, size: 32, align: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "w_size", scope: !445, file: !1, line: 59, baseType: !23, size: 32, align: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "w_mask", scope: !445, file: !1, line: 60, baseType: !23, size: 32, align: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "w_buff", scope: !445, file: !1, line: 62, baseType: !325, size: 64, align: 64, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "w_pos", scope: !445, file: !1, line: 64, baseType: !23, size: 32, align: 32, offset: 192)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "copy_pos", scope: !445, file: !1, line: 66, baseType: !23, size: 32, align: 32, offset: 224)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "copy_len", scope: !445, file: !1, line: 69, baseType: !23, size: 32, align: 32, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "translation_size", scope: !445, file: !1, line: 72, baseType: !305, size: 32, align: 32, offset: 288)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !445, file: !1, line: 73, baseType: !82, size: 8, align: 8, offset: 320)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "block_type", scope: !445, file: !1, line: 74, baseType: !82, size: 8, align: 8, offset: 328)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !445, file: !1, line: 78, baseType: !45, size: 64, align: 64, offset: 384)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "block_bytes_avail", scope: !445, file: !1, line: 79, baseType: !45, size: 64, align: 64, offset: 448)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !445, file: !1, line: 81, baseType: !23, size: 32, align: 32, offset: 512)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !445, file: !1, line: 81, baseType: !23, size: 32, align: 32, offset: 544)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !445, file: !1, line: 81, baseType: !23, size: 32, align: 32, offset: 576)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "rbytes", scope: !445, file: !1, line: 82, baseType: !329, size: 32, align: 8, offset: 608)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "rbytes_avail", scope: !445, file: !1, line: 83, baseType: !23, size: 32, align: 32, offset: 640)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "length_header", scope: !445, file: !1, line: 84, baseType: !23, size: 32, align: 32, offset: 672)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "position_slot", scope: !445, file: !1, line: 85, baseType: !23, size: 32, align: 32, offset: 704)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "offset_bits", scope: !445, file: !1, line: 86, baseType: !23, size: 32, align: 32, offset: 736)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "pos_tbl", scope: !445, file: !1, line: 91, baseType: !468, size: 64, align: 64, offset: 768)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64, align: 64)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "lzx_pos_tbl", file: !1, line: 88, size: 64, align: 32, elements: !470)
!470 = !{!471, !472}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !469, file: !1, line: 89, baseType: !23, size: 32, align: 32)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "footer_bits", scope: !469, file: !1, line: 90, baseType: !23, size: 32, align: 32, offset: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "br", scope: !445, file: !1, line: 104, baseType: !474, size: 128, align: 64, offset: 832)
!474 = !DICompositeType(tag: DW_TAG_structure_type, name: "lzx_br", file: !1, line: 95, size: 128, align: 64, elements: !475)
!475 = !{!476, !478, !479, !480}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "cache_buffer", scope: !474, file: !1, line: 99, baseType: !477, size: 64, align: 64)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !53, line: 55, baseType: !47)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "cache_avail", scope: !474, file: !1, line: 101, baseType: !23, size: 32, align: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "odd", scope: !474, file: !1, line: 102, baseType: !326, size: 8, align: 8, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "have_odd", scope: !474, file: !1, line: 103, baseType: !82, size: 8, align: 8, offset: 104)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !445, file: !1, line: 132, baseType: !482, size: 960, align: 64, offset: 960)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "huffman", file: !1, line: 109, size: 960, align: 64, elements: !483)
!483 = !{!484, !485, !489, !490, !491, !492, !493, !494, !495, !497}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "len_size", scope: !482, file: !1, line: 110, baseType: !23, size: 32, align: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !482, file: !1, line: 111, baseType: !486, size: 544, align: 32, offset: 32)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 544, align: 32, elements: !487)
!487 = !{!488}
!488 = !DISubrange(count: 17)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "bitlen", scope: !482, file: !1, line: 112, baseType: !325, size: 64, align: 64, offset: 576)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "max_bits", scope: !482, file: !1, line: 120, baseType: !23, size: 32, align: 32, offset: 640)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "shift_bits", scope: !482, file: !1, line: 121, baseType: !23, size: 32, align: 32, offset: 672)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "tbl_bits", scope: !482, file: !1, line: 122, baseType: !23, size: 32, align: 32, offset: 704)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "tree_used", scope: !482, file: !1, line: 123, baseType: !23, size: 32, align: 32, offset: 736)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "tree_avail", scope: !482, file: !1, line: 124, baseType: !23, size: 32, align: 32, offset: 768)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !482, file: !1, line: 126, baseType: !496, size: 64, align: 64, offset: 832)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !482, file: !1, line: 131, baseType: !498, size: 64, align: 64, offset: 896)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64, align: 64)
!499 = !DICompositeType(tag: DW_TAG_structure_type, name: "htree_t", file: !1, line: 128, size: 32, align: 16, elements: !500)
!500 = !{!501, !502}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !499, file: !1, line: 129, baseType: !307, size: 16, align: 16)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !499, file: !1, line: 130, baseType: !307, size: 16, align: 16, offset: 16)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "lt", scope: !445, file: !1, line: 132, baseType: !482, size: 960, align: 64, offset: 1920)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !445, file: !1, line: 132, baseType: !482, size: 960, align: 64, offset: 2880)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !445, file: !1, line: 132, baseType: !482, size: 960, align: 64, offset: 3840)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !445, file: !1, line: 134, baseType: !23, size: 32, align: 32, offset: 4800)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !445, file: !1, line: 135, baseType: !23, size: 32, align: 32, offset: 4832)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !39, line: 70, baseType: !509)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !41, line: 129, baseType: !13)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !53, line: 134, baseType: !42)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !53, line: 48, baseType: !326)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !53, line: 122, baseType: !47)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !53, line: 38, baseType: !23)
!514 = !{!515, !516, !517, !520, !521, !522, !523, !524, !525, !529, !532, !535, !538, !542, !546, !549, !550, !551, !554, !555, !558, !561, !562, !563, !566, !567, !568, !569, !573, !577, !580, !583, !584, !588, !589, !592, !595, !598, !601, !604, !607, !610, !611, !614, !617, !618, !619, !620}
!515 = distinct !DISubprogram(name: "archive_read_support_format_cab", scope: !1, file: !1, line: 359, type: !21, isLocal: false, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!516 = distinct !DISubprogram(name: "archive_read_format_cab_bid", scope: !1, file: !1, line: 419, type: !236, isLocal: true, isDefinition: true, scopeLine: 420, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!517 = distinct !DISubprogram(name: "find_cab_magic", scope: !1, file: !1, line: 396, type: !518, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!518 = !DISubroutineType(types: !519)
!519 = !{!23, !80}
!520 = distinct !DISubprogram(name: "archive_read_format_cab_options", scope: !1, file: !1, line: 467, type: !240, isLocal: true, isDefinition: true, scopeLine: 469, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!521 = distinct !DISubprogram(name: "archive_read_format_cab_read_header", scope: !1, file: !1, line: 892, type: !244, isLocal: true, isDefinition: true, scopeLine: 894, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!522 = distinct !DISubprogram(name: "cab_read_header", scope: !1, file: !1, line: 626, type: !252, isLocal: true, isDefinition: true, scopeLine: 627, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!523 = distinct !DISubprogram(name: "truncated_error", scope: !1, file: !1, line: 538, type: !252, isLocal: true, isDefinition: true, scopeLine: 539, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!524 = distinct !DISubprogram(name: "cab_skip_sfx", scope: !1, file: !1, line: 496, type: !252, isLocal: true, isDefinition: true, scopeLine: 497, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!525 = distinct !DISubprogram(name: "archive_le32dec", scope: !526, file: !526, line: 115, type: !527, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!526 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_endian.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!527 = !DISubroutineType(types: !528)
!528 = !{!305, !43}
!529 = distinct !DISubprogram(name: "archive_le16dec", scope: !526, file: !526, line: 101, type: !530, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!530 = !DISubroutineType(types: !531)
!531 = !{!307, !43}
!532 = distinct !DISubprogram(name: "cab_strnlen", scope: !1, file: !1, line: 546, type: !533, isLocal: true, isDefinition: true, scopeLine: 547, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!533 = !DISubroutineType(types: !534)
!534 = !{!38, !436, !45}
!535 = distinct !DISubprogram(name: "cab_dos_time", scope: !1, file: !1, line: 2051, type: !536, isLocal: true, isDefinition: true, scopeLine: 2052, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!536 = !DISubroutineType(types: !537)
!537 = !{!343, !436}
!538 = distinct !DISubprogram(name: "cab_read_ahead_remaining", scope: !1, file: !1, line: 561, type: !539, isLocal: true, isDefinition: true, scopeLine: 562, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!539 = !DISubroutineType(types: !540)
!540 = !{!43, !4, !45, !541}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!542 = distinct !DISubprogram(name: "cab_convert_path_separator_1", scope: !1, file: !1, line: 576, type: !543, isLocal: true, isDefinition: true, scopeLine: 577, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!543 = !DISubroutineType(types: !544)
!544 = !{!23, !545, !326}
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64, align: 64)
!546 = distinct !DISubprogram(name: "cab_convert_path_separator_2", scope: !1, file: !1, line: 606, type: !547, isLocal: true, isDefinition: true, scopeLine: 607, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!547 = !DISubroutineType(types: !548)
!548 = !{null, !292, !30}
!549 = distinct !DISubprogram(name: "archive_read_format_cab_read_data", scope: !1, file: !1, line: 1016, type: !248, isLocal: true, isDefinition: true, scopeLine: 1018, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!550 = distinct !DISubprogram(name: "cab_next_cfdata", scope: !1, file: !1, line: 1197, type: !252, isLocal: true, isDefinition: true, scopeLine: 1198, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!551 = distinct !DISubprogram(name: "cab_consume_cfdata", scope: !1, file: !1, line: 1770, type: !552, isLocal: true, isDefinition: true, scopeLine: 1771, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!552 = !DISubroutineType(types: !553)
!553 = !{!52, !4, !52}
!554 = distinct !DISubprogram(name: "cab_minimum_consume_cfdata", scope: !1, file: !1, line: 1863, type: !552, isLocal: true, isDefinition: true, scopeLine: 1864, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!555 = distinct !DISubprogram(name: "cab_checksum_update", scope: !1, file: !1, line: 1117, type: !556, isLocal: true, isDefinition: true, scopeLine: 1118, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !4, !45}
!558 = distinct !DISubprogram(name: "cab_checksum_cfdata_4", scope: !1, file: !1, line: 1071, type: !559, isLocal: true, isDefinition: true, scopeLine: 1072, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!559 = !DISubroutineType(types: !560)
!560 = !{!305, !43, !45, !305}
!561 = distinct !DISubprogram(name: "cab_checksum_finish", scope: !1, file: !1, line: 1157, type: !252, isLocal: true, isDefinition: true, scopeLine: 1158, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!562 = distinct !DISubprogram(name: "cab_checksum_cfdata", scope: !1, file: !1, line: 1088, type: !559, isLocal: true, isDefinition: true, scopeLine: 1089, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!563 = distinct !DISubprogram(name: "cab_read_ahead_cfdata", scope: !1, file: !1, line: 1345, type: !564, isLocal: true, isDefinition: true, scopeLine: 1346, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!564 = !DISubroutineType(types: !565)
!565 = !{!43, !4, !541}
!566 = distinct !DISubprogram(name: "cab_read_ahead_cfdata_none", scope: !1, file: !1, line: 1376, type: !564, isLocal: true, isDefinition: true, scopeLine: 1377, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!567 = distinct !DISubprogram(name: "cab_read_ahead_cfdata_deflate", scope: !1, file: !1, line: 1408, type: !564, isLocal: true, isDefinition: true, scopeLine: 1409, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!568 = distinct !DISubprogram(name: "cab_read_ahead_cfdata_lzx", scope: !1, file: !1, line: 1638, type: !564, isLocal: true, isDefinition: true, scopeLine: 1639, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!569 = distinct !DISubprogram(name: "lzx_decode_init", scope: !1, file: !1, line: 2085, type: !570, isLocal: true, isDefinition: true, scopeLine: 2086, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!570 = !DISubroutineType(types: !571)
!571 = !{!23, !572, !23}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64, align: 64)
!573 = distinct !DISubprogram(name: "lzx_huffman_free", scope: !1, file: !1, line: 3160, type: !574, isLocal: true, isDefinition: true, scopeLine: 3161, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!574 = !DISubroutineType(types: !575)
!575 = !{null, !576}
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64, align: 64)
!577 = distinct !DISubprogram(name: "lzx_huffman_init", scope: !1, file: !1, line: 3128, type: !578, isLocal: true, isDefinition: true, scopeLine: 3129, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!578 = !DISubroutineType(types: !579)
!579 = !{!23, !576, !45, !23}
!580 = distinct !DISubprogram(name: "lzx_cleanup_bitstream", scope: !1, file: !1, line: 2359, type: !581, isLocal: true, isDefinition: true, scopeLine: 2360, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!581 = !DISubroutineType(types: !582)
!582 = !{null, !572}
!583 = distinct !DISubprogram(name: "lzx_decode", scope: !1, file: !1, line: 2399, type: !570, isLocal: true, isDefinition: true, scopeLine: 2400, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!584 = distinct !DISubprogram(name: "lzx_br_fixup", scope: !1, file: !1, line: 2343, type: !585, isLocal: true, isDefinition: true, scopeLine: 2344, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!585 = !DISubroutineType(types: !586)
!586 = !{null, !572, !587}
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64, align: 64)
!588 = distinct !DISubprogram(name: "lzx_read_blocks", scope: !1, file: !1, line: 2426, type: !570, isLocal: true, isDefinition: true, scopeLine: 2427, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!589 = distinct !DISubprogram(name: "lzx_br_fillup", scope: !1, file: !1, line: 2273, type: !590, isLocal: true, isDefinition: true, scopeLine: 2274, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!590 = !DISubroutineType(types: !591)
!591 = !{!23, !572, !587}
!592 = distinct !DISubprogram(name: "archive_le16enc", scope: !526, file: !526, line: 168, type: !593, isLocal: true, isDefinition: true, scopeLine: 169, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!593 = !DISubroutineType(types: !594)
!594 = !{null, !123, !307}
!595 = distinct !DISubprogram(name: "lzx_make_huffman_table", scope: !1, file: !1, line: 3171, type: !596, isLocal: true, isDefinition: true, scopeLine: 3172, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!596 = !DISubroutineType(types: !597)
!597 = !{!23, !576}
!598 = distinct !DISubprogram(name: "lzx_read_pre_tree", scope: !1, file: !1, line: 3025, type: !599, isLocal: true, isDefinition: true, scopeLine: 3026, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!599 = !DISubroutineType(types: !600)
!600 = !{!23, !572}
!601 = distinct !DISubprogram(name: "lzx_read_bitlen", scope: !1, file: !1, line: 3050, type: !602, isLocal: true, isDefinition: true, scopeLine: 3051, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!602 = !DISubroutineType(types: !603)
!603 = !{!23, !572, !576, !23}
!604 = distinct !DISubprogram(name: "lzx_decode_huffman", scope: !1, file: !1, line: 3340, type: !605, isLocal: true, isDefinition: true, scopeLine: 3341, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!605 = !DISubroutineType(types: !606)
!606 = !{!23, !576, !13}
!607 = distinct !DISubprogram(name: "lzx_decode_huffman_tree", scope: !1, file: !1, line: 3320, type: !608, isLocal: true, isDefinition: true, scopeLine: 3321, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!608 = !DISubroutineType(types: !609)
!609 = !{!23, !576, !13, !23}
!610 = distinct !DISubprogram(name: "lzx_decode_blocks", scope: !1, file: !1, line: 2751, type: !570, isLocal: true, isDefinition: true, scopeLine: 2752, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!611 = distinct !DISubprogram(name: "lzx_translation", scope: !1, file: !1, line: 2196, type: !612, isLocal: true, isDefinition: true, scopeLine: 2197, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!612 = !DISubroutineType(types: !613)
!613 = !{null, !572, !123, !45, !305}
!614 = distinct !DISubprogram(name: "archive_le32enc", scope: !526, file: !526, line: 177, type: !615, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!615 = !DISubroutineType(types: !616)
!616 = !{null, !123, !305}
!617 = distinct !DISubprogram(name: "cab_read_data", scope: !1, file: !1, line: 1919, type: !248, isLocal: true, isDefinition: true, scopeLine: 1921, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!618 = distinct !DISubprogram(name: "archive_read_format_cab_read_data_skip", scope: !1, file: !1, line: 1966, type: !252, isLocal: true, isDefinition: true, scopeLine: 1967, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!619 = distinct !DISubprogram(name: "archive_read_format_cab_cleanup", scope: !1, file: !1, line: 2021, type: !252, isLocal: true, isDefinition: true, scopeLine: 2022, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!620 = distinct !DISubprogram(name: "lzx_decode_free", scope: !1, file: !1, line: 2177, type: !581, isLocal: true, isDefinition: true, scopeLine: 2178, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!621 = !{!622, !624, !629}
!622 = !DIGlobalVariable(name: "compression_name", scope: !0, file: !1, line: 190, type: !623, isLocal: true, isDefinition: true, variable: [4 x i8*]* @compression_name)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 256, align: 64, elements: !330)
!624 = !DIGlobalVariable(name: "slots", scope: !0, file: !1, line: 138, type: !625, isLocal: true, isDefinition: true, variable: [11 x i32]* @slots)
!625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 352, align: 32, elements: !627)
!626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!627 = !{!628}
!628 = !DISubrange(count: 11)
!629 = !DIGlobalVariable(name: "cache_masks", scope: !0, file: !1, line: 2253, type: !630, isLocal: true, isDefinition: true, variable: [36 x i32]* @cache_masks)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 1152, align: 32, elements: !632)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !305)
!632 = !{!633}
!633 = !DISubrange(count: 36)
!634 = !{i32 2, !"Dwarf Version", i32 4}
!635 = !{i32 2, !"Debug Info Version", i32 3}
!636 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!637 = !DILocalVariable(name: "_a", arg: 1, scope: !515, file: !1, line: 359, type: !24)
!638 = !DIExpression()
!639 = !DILocation(line: 359, column: 49, scope: !515)
!640 = !DILocalVariable(name: "a", scope: !515, file: !1, line: 361, type: !4)
!641 = !DILocation(line: 361, column: 23, scope: !515)
!642 = !DILocation(line: 361, column: 50, scope: !515)
!643 = !DILocation(line: 361, column: 27, scope: !515)
!644 = !DILocalVariable(name: "cab", scope: !515, file: !1, line: 362, type: !292)
!645 = !DILocation(line: 362, column: 14, scope: !515)
!646 = !DILocalVariable(name: "r", scope: !515, file: !1, line: 363, type: !23)
!647 = !DILocation(line: 363, column: 6, scope: !515)
!648 = !DILocation(line: 365, column: 2, scope: !515)
!649 = !DILocalVariable(name: "magic_test", scope: !650, file: !1, line: 365, type: !23)
!650 = distinct !DILexicalBlock(scope: !515, file: !1, line: 365, column: 2)
!651 = !DILocation(line: 365, column: 2, scope: !650)
!652 = !DILocation(line: 365, column: 2, scope: !653)
!653 = !DILexicalBlockFile(scope: !650, file: !1, discriminator: 1)
!654 = !DILocation(line: 365, column: 2, scope: !655)
!655 = !DILexicalBlockFile(scope: !656, file: !1, discriminator: 2)
!656 = distinct !DILexicalBlock(scope: !650, file: !1, line: 365, column: 2)
!657 = !DILocation(line: 365, column: 2, scope: !658)
!658 = !DILexicalBlockFile(scope: !650, file: !1, discriminator: 3)
!659 = !DILocation(line: 368, column: 22, scope: !515)
!660 = !DILocation(line: 368, column: 8, scope: !515)
!661 = !DILocation(line: 368, column: 6, scope: !515)
!662 = !DILocation(line: 369, column: 6, scope: !663)
!663 = distinct !DILexicalBlock(scope: !515, file: !1, line: 369, column: 6)
!664 = !DILocation(line: 369, column: 10, scope: !663)
!665 = !DILocation(line: 369, column: 6, scope: !515)
!666 = !DILocation(line: 370, column: 22, scope: !667)
!667 = distinct !DILexicalBlock(scope: !663, file: !1, line: 369, column: 19)
!668 = !DILocation(line: 370, column: 25, scope: !667)
!669 = !DILocation(line: 370, column: 3, scope: !667)
!670 = !DILocation(line: 372, column: 3, scope: !667)
!671 = !DILocation(line: 374, column: 2, scope: !515)
!672 = !DILocation(line: 374, column: 2, scope: !673)
!673 = !DILexicalBlockFile(scope: !674, file: !1, discriminator: 1)
!674 = distinct !DILexicalBlock(scope: !515, file: !1, line: 374, column: 2)
!675 = !DILocation(line: 375, column: 26, scope: !515)
!676 = !DILocation(line: 375, column: 31, scope: !515)
!677 = !DILocation(line: 375, column: 2, scope: !515)
!678 = !DILocation(line: 377, column: 37, scope: !515)
!679 = !DILocation(line: 378, column: 6, scope: !515)
!680 = !DILocation(line: 377, column: 6, scope: !515)
!681 = !DILocation(line: 377, column: 4, scope: !515)
!682 = !DILocation(line: 390, column: 6, scope: !683)
!683 = distinct !DILexicalBlock(scope: !515, file: !1, line: 390, column: 6)
!684 = !DILocation(line: 390, column: 8, scope: !683)
!685 = !DILocation(line: 390, column: 6, scope: !515)
!686 = !DILocation(line: 391, column: 8, scope: !683)
!687 = !DILocation(line: 391, column: 3, scope: !683)
!688 = !DILocation(line: 392, column: 2, scope: !515)
!689 = !DILocation(line: 393, column: 1, scope: !515)
!690 = !DILocalVariable(name: "a", arg: 1, scope: !516, file: !1, line: 419, type: !4)
!691 = !DILocation(line: 419, column: 50, scope: !516)
!692 = !DILocalVariable(name: "best_bid", arg: 2, scope: !516, file: !1, line: 419, type: !23)
!693 = !DILocation(line: 419, column: 57, scope: !516)
!694 = !DILocalVariable(name: "p", scope: !516, file: !1, line: 421, type: !80)
!695 = !DILocation(line: 421, column: 14, scope: !516)
!696 = !DILocalVariable(name: "bytes_avail", scope: !516, file: !1, line: 422, type: !38)
!697 = !DILocation(line: 422, column: 10, scope: !516)
!698 = !DILocalVariable(name: "offset", scope: !516, file: !1, line: 422, type: !38)
!699 = !DILocation(line: 422, column: 23, scope: !516)
!700 = !DILocalVariable(name: "window", scope: !516, file: !1, line: 422, type: !38)
!701 = !DILocation(line: 422, column: 31, scope: !516)
!702 = !DILocation(line: 426, column: 6, scope: !703)
!703 = distinct !DILexicalBlock(scope: !516, file: !1, line: 426, column: 6)
!704 = !DILocation(line: 426, column: 15, scope: !703)
!705 = !DILocation(line: 426, column: 6, scope: !516)
!706 = !DILocation(line: 427, column: 3, scope: !703)
!707 = !DILocation(line: 429, column: 32, scope: !708)
!708 = distinct !DILexicalBlock(scope: !516, file: !1, line: 429, column: 6)
!709 = !DILocation(line: 429, column: 11, scope: !708)
!710 = !DILocation(line: 429, column: 9, scope: !708)
!711 = !DILocation(line: 429, column: 45, scope: !708)
!712 = !DILocation(line: 429, column: 6, scope: !516)
!713 = !DILocation(line: 430, column: 3, scope: !708)
!714 = !DILocation(line: 432, column: 13, scope: !715)
!715 = distinct !DILexicalBlock(scope: !516, file: !1, line: 432, column: 6)
!716 = !DILocation(line: 432, column: 6, scope: !715)
!717 = !DILocation(line: 432, column: 35, scope: !715)
!718 = !DILocation(line: 432, column: 6, scope: !516)
!719 = !DILocation(line: 433, column: 3, scope: !715)
!720 = !DILocation(line: 440, column: 6, scope: !721)
!721 = distinct !DILexicalBlock(scope: !516, file: !1, line: 440, column: 6)
!722 = !DILocation(line: 440, column: 11, scope: !721)
!723 = !DILocation(line: 440, column: 18, scope: !721)
!724 = !DILocation(line: 440, column: 21, scope: !725)
!725 = !DILexicalBlockFile(scope: !721, file: !1, discriminator: 1)
!726 = !DILocation(line: 440, column: 26, scope: !725)
!727 = !DILocation(line: 440, column: 6, scope: !725)
!728 = !DILocation(line: 441, column: 10, scope: !729)
!729 = distinct !DILexicalBlock(scope: !721, file: !1, line: 440, column: 34)
!730 = !DILocation(line: 442, column: 10, scope: !729)
!731 = !DILocation(line: 443, column: 3, scope: !729)
!732 = !DILocation(line: 443, column: 10, scope: !733)
!733 = !DILexicalBlockFile(scope: !729, file: !1, discriminator: 1)
!734 = !DILocation(line: 443, column: 17, scope: !733)
!735 = !DILocation(line: 443, column: 3, scope: !733)
!736 = !DILocalVariable(name: "h", scope: !737, file: !1, line: 444, type: !80)
!737 = distinct !DILexicalBlock(scope: !729, file: !1, line: 443, column: 33)
!738 = !DILocation(line: 444, column: 16, scope: !737)
!739 = !DILocation(line: 444, column: 41, scope: !737)
!740 = !DILocation(line: 444, column: 44, scope: !737)
!741 = !DILocation(line: 444, column: 53, scope: !737)
!742 = !DILocation(line: 444, column: 51, scope: !737)
!743 = !DILocation(line: 444, column: 20, scope: !737)
!744 = !DILocation(line: 446, column: 8, scope: !745)
!745 = distinct !DILexicalBlock(scope: !737, file: !1, line: 446, column: 8)
!746 = !DILocation(line: 446, column: 10, scope: !745)
!747 = !DILocation(line: 446, column: 8, scope: !737)
!748 = !DILocation(line: 448, column: 12, scope: !749)
!749 = distinct !DILexicalBlock(scope: !745, file: !1, line: 446, column: 19)
!750 = !DILocation(line: 449, column: 9, scope: !751)
!751 = distinct !DILexicalBlock(scope: !749, file: !1, line: 449, column: 9)
!752 = !DILocation(line: 449, column: 16, scope: !751)
!753 = !DILocation(line: 449, column: 9, scope: !749)
!754 = !DILocation(line: 450, column: 6, scope: !751)
!755 = !DILocation(line: 451, column: 5, scope: !749)
!756 = !DILocation(line: 453, column: 8, scope: !737)
!757 = !DILocation(line: 453, column: 12, scope: !737)
!758 = !DILocation(line: 453, column: 10, scope: !737)
!759 = !DILocation(line: 453, column: 6, scope: !737)
!760 = !DILocation(line: 454, column: 4, scope: !737)
!761 = !DILocation(line: 454, column: 11, scope: !762)
!762 = !DILexicalBlockFile(scope: !737, file: !1, discriminator: 1)
!763 = !DILocation(line: 454, column: 13, scope: !762)
!764 = !DILocation(line: 454, column: 19, scope: !762)
!765 = !DILocation(line: 454, column: 23, scope: !762)
!766 = !DILocation(line: 454, column: 21, scope: !762)
!767 = !DILocation(line: 454, column: 17, scope: !762)
!768 = !DILocation(line: 454, column: 4, scope: !762)
!769 = !DILocalVariable(name: "next", scope: !770, file: !1, line: 455, type: !23)
!770 = distinct !DILexicalBlock(scope: !737, file: !1, line: 454, column: 36)
!771 = !DILocation(line: 455, column: 9, scope: !770)
!772 = !DILocation(line: 456, column: 32, scope: !773)
!773 = distinct !DILexicalBlock(scope: !770, file: !1, line: 456, column: 9)
!774 = !DILocation(line: 456, column: 17, scope: !773)
!775 = !DILocation(line: 456, column: 15, scope: !773)
!776 = !DILocation(line: 456, column: 36, scope: !773)
!777 = !DILocation(line: 456, column: 9, scope: !770)
!778 = !DILocation(line: 457, column: 6, scope: !773)
!779 = !DILocation(line: 458, column: 10, scope: !770)
!780 = !DILocation(line: 458, column: 7, scope: !770)
!781 = !DILocation(line: 454, column: 4, scope: !782)
!782 = !DILexicalBlockFile(scope: !737, file: !1, discriminator: 2)
!783 = !DILocation(line: 460, column: 13, scope: !737)
!784 = !DILocation(line: 460, column: 17, scope: !737)
!785 = !DILocation(line: 460, column: 15, scope: !737)
!786 = !DILocation(line: 460, column: 11, scope: !737)
!787 = !DILocation(line: 443, column: 3, scope: !788)
!788 = !DILexicalBlockFile(scope: !729, file: !1, discriminator: 2)
!789 = !DILocation(line: 462, column: 2, scope: !729)
!790 = !DILocation(line: 463, column: 2, scope: !516)
!791 = !DILocation(line: 464, column: 1, scope: !516)
!792 = !DILocalVariable(name: "a", arg: 1, scope: !520, file: !1, line: 467, type: !4)
!793 = !DILocation(line: 467, column: 54, scope: !520)
!794 = !DILocalVariable(name: "key", arg: 2, scope: !520, file: !1, line: 468, type: !80)
!795 = !DILocation(line: 468, column: 17, scope: !520)
!796 = !DILocalVariable(name: "val", arg: 3, scope: !520, file: !1, line: 468, type: !80)
!797 = !DILocation(line: 468, column: 34, scope: !520)
!798 = !DILocalVariable(name: "cab", scope: !520, file: !1, line: 470, type: !292)
!799 = !DILocation(line: 470, column: 14, scope: !520)
!800 = !DILocalVariable(name: "ret", scope: !520, file: !1, line: 471, type: !23)
!801 = !DILocation(line: 471, column: 6, scope: !520)
!802 = !DILocation(line: 473, column: 23, scope: !520)
!803 = !DILocation(line: 473, column: 26, scope: !520)
!804 = !DILocation(line: 473, column: 34, scope: !520)
!805 = !DILocation(line: 473, column: 8, scope: !520)
!806 = !DILocation(line: 473, column: 6, scope: !520)
!807 = !DILocation(line: 474, column: 13, scope: !808)
!808 = distinct !DILexicalBlock(scope: !520, file: !1, line: 474, column: 6)
!809 = !DILocation(line: 474, column: 6, scope: !808)
!810 = !DILocation(line: 474, column: 33, scope: !808)
!811 = !DILocation(line: 474, column: 6, scope: !520)
!812 = !DILocation(line: 475, column: 7, scope: !813)
!813 = distinct !DILexicalBlock(scope: !814, file: !1, line: 475, column: 7)
!814 = distinct !DILexicalBlock(scope: !808, file: !1, line: 474, column: 39)
!815 = !DILocation(line: 475, column: 11, scope: !813)
!816 = !DILocation(line: 475, column: 19, scope: !813)
!817 = !DILocation(line: 475, column: 22, scope: !818)
!818 = !DILexicalBlockFile(scope: !813, file: !1, discriminator: 1)
!819 = !DILocation(line: 475, column: 29, scope: !818)
!820 = !DILocation(line: 475, column: 7, scope: !818)
!821 = !DILocation(line: 476, column: 23, scope: !813)
!822 = !DILocation(line: 476, column: 26, scope: !813)
!823 = !DILocation(line: 476, column: 4, scope: !813)
!824 = !DILocation(line: 480, column: 9, scope: !825)
!825 = distinct !DILexicalBlock(scope: !813, file: !1, line: 478, column: 8)
!826 = !DILocation(line: 480, column: 12, scope: !825)
!827 = !DILocation(line: 480, column: 21, scope: !825)
!828 = !DILocation(line: 479, column: 17, scope: !825)
!829 = !DILocation(line: 479, column: 4, scope: !825)
!830 = !DILocation(line: 479, column: 9, scope: !825)
!831 = !DILocation(line: 479, column: 15, scope: !825)
!832 = !DILocation(line: 481, column: 8, scope: !833)
!833 = distinct !DILexicalBlock(scope: !825, file: !1, line: 481, column: 8)
!834 = !DILocation(line: 481, column: 13, scope: !833)
!835 = !DILocation(line: 481, column: 19, scope: !833)
!836 = !DILocation(line: 481, column: 8, scope: !825)
!837 = !DILocation(line: 482, column: 9, scope: !833)
!838 = !DILocation(line: 482, column: 5, scope: !833)
!839 = !DILocation(line: 484, column: 9, scope: !833)
!840 = !DILocation(line: 486, column: 11, scope: !814)
!841 = !DILocation(line: 486, column: 3, scope: !814)
!842 = !DILocation(line: 492, column: 2, scope: !520)
!843 = !DILocation(line: 493, column: 1, scope: !520)
!844 = !DILocalVariable(name: "a", arg: 1, scope: !521, file: !1, line: 892, type: !4)
!845 = !DILocation(line: 892, column: 58, scope: !521)
!846 = !DILocalVariable(name: "entry", arg: 2, scope: !521, file: !1, line: 893, type: !30)
!847 = !DILocation(line: 893, column: 27, scope: !521)
!848 = !DILocalVariable(name: "cab", scope: !521, file: !1, line: 895, type: !292)
!849 = !DILocation(line: 895, column: 14, scope: !521)
!850 = !DILocalVariable(name: "hd", scope: !521, file: !1, line: 896, type: !851)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!852 = !DILocation(line: 896, column: 19, scope: !521)
!853 = !DILocalVariable(name: "prev_folder", scope: !521, file: !1, line: 897, type: !301)
!854 = !DILocation(line: 897, column: 19, scope: !521)
!855 = !DILocalVariable(name: "file", scope: !521, file: !1, line: 898, type: !337)
!856 = !DILocation(line: 898, column: 17, scope: !521)
!857 = !DILocalVariable(name: "sconv", scope: !521, file: !1, line: 899, type: !102)
!858 = !DILocation(line: 899, column: 30, scope: !521)
!859 = !DILocalVariable(name: "err", scope: !521, file: !1, line: 900, type: !23)
!860 = !DILocation(line: 900, column: 6, scope: !521)
!861 = !DILocalVariable(name: "r", scope: !521, file: !1, line: 900, type: !23)
!862 = !DILocation(line: 900, column: 24, scope: !521)
!863 = !DILocation(line: 902, column: 23, scope: !521)
!864 = !DILocation(line: 902, column: 26, scope: !521)
!865 = !DILocation(line: 902, column: 34, scope: !521)
!866 = !DILocation(line: 902, column: 8, scope: !521)
!867 = !DILocation(line: 902, column: 6, scope: !521)
!868 = !DILocation(line: 903, column: 6, scope: !869)
!869 = distinct !DILexicalBlock(scope: !521, file: !1, line: 903, column: 6)
!870 = !DILocation(line: 903, column: 11, scope: !869)
!871 = !DILocation(line: 903, column: 24, scope: !869)
!872 = !DILocation(line: 903, column: 6, scope: !521)
!873 = !DILocation(line: 904, column: 25, scope: !874)
!874 = distinct !DILexicalBlock(scope: !869, file: !1, line: 903, column: 30)
!875 = !DILocation(line: 904, column: 9, scope: !874)
!876 = !DILocation(line: 904, column: 7, scope: !874)
!877 = !DILocation(line: 905, column: 7, scope: !878)
!878 = distinct !DILexicalBlock(scope: !874, file: !1, line: 905, column: 7)
!879 = !DILocation(line: 905, column: 11, scope: !878)
!880 = !DILocation(line: 905, column: 7, scope: !874)
!881 = !DILocation(line: 906, column: 12, scope: !878)
!882 = !DILocation(line: 906, column: 4, scope: !878)
!883 = !DILocation(line: 908, column: 3, scope: !874)
!884 = !DILocation(line: 908, column: 8, scope: !874)
!885 = !DILocation(line: 908, column: 21, scope: !874)
!886 = !DILocation(line: 909, column: 2, scope: !874)
!887 = !DILocation(line: 910, column: 8, scope: !521)
!888 = !DILocation(line: 910, column: 13, scope: !521)
!889 = !DILocation(line: 910, column: 5, scope: !521)
!890 = !DILocation(line: 912, column: 6, scope: !891)
!891 = distinct !DILexicalBlock(scope: !521, file: !1, line: 912, column: 6)
!892 = !DILocation(line: 912, column: 10, scope: !891)
!893 = !DILocation(line: 912, column: 24, scope: !891)
!894 = !DILocation(line: 912, column: 28, scope: !891)
!895 = !DILocation(line: 912, column: 21, scope: !891)
!896 = !DILocation(line: 912, column: 6, scope: !521)
!897 = !DILocation(line: 913, column: 3, scope: !898)
!898 = distinct !DILexicalBlock(scope: !891, file: !1, line: 912, column: 40)
!899 = !DILocation(line: 913, column: 8, scope: !898)
!900 = !DILocation(line: 913, column: 23, scope: !898)
!901 = !DILocation(line: 914, column: 3, scope: !898)
!902 = !DILocation(line: 916, column: 25, scope: !521)
!903 = !DILocation(line: 916, column: 29, scope: !521)
!904 = !DILocation(line: 916, column: 39, scope: !521)
!905 = !DILocation(line: 916, column: 10, scope: !521)
!906 = !DILocation(line: 916, column: 14, scope: !521)
!907 = !DILocation(line: 916, column: 7, scope: !521)
!908 = !DILocation(line: 918, column: 2, scope: !521)
!909 = !DILocation(line: 918, column: 7, scope: !521)
!910 = !DILocation(line: 918, column: 20, scope: !521)
!911 = !DILocation(line: 919, column: 2, scope: !521)
!912 = !DILocation(line: 919, column: 7, scope: !521)
!913 = !DILocation(line: 919, column: 28, scope: !521)
!914 = !DILocation(line: 920, column: 2, scope: !521)
!915 = !DILocation(line: 920, column: 7, scope: !521)
!916 = !DILocation(line: 920, column: 35, scope: !521)
!917 = !DILocation(line: 921, column: 2, scope: !521)
!918 = !DILocation(line: 921, column: 7, scope: !521)
!919 = !DILocation(line: 921, column: 37, scope: !521)
!920 = !DILocation(line: 922, column: 2, scope: !521)
!921 = !DILocation(line: 922, column: 7, scope: !521)
!922 = !DILocation(line: 922, column: 24, scope: !521)
!923 = !DILocation(line: 923, column: 22, scope: !521)
!924 = !DILocation(line: 923, column: 2, scope: !521)
!925 = !DILocation(line: 923, column: 7, scope: !521)
!926 = !DILocation(line: 923, column: 20, scope: !521)
!927 = !DILocation(line: 928, column: 16, scope: !521)
!928 = !DILocation(line: 928, column: 21, scope: !521)
!929 = !DILocation(line: 928, column: 14, scope: !521)
!930 = !DILocation(line: 929, column: 10, scope: !521)
!931 = !DILocation(line: 929, column: 16, scope: !521)
!932 = !DILocation(line: 929, column: 2, scope: !521)
!933 = !DILocation(line: 932, column: 26, scope: !934)
!934 = distinct !DILexicalBlock(scope: !521, file: !1, line: 929, column: 24)
!935 = !DILocation(line: 932, column: 30, scope: !934)
!936 = !DILocation(line: 932, column: 3, scope: !934)
!937 = !DILocation(line: 932, column: 8, scope: !934)
!938 = !DILocation(line: 932, column: 23, scope: !934)
!939 = !DILocation(line: 933, column: 3, scope: !934)
!940 = !DILocation(line: 935, column: 43, scope: !934)
!941 = !DILocation(line: 935, column: 47, scope: !934)
!942 = !DILocation(line: 935, column: 59, scope: !934)
!943 = !DILocation(line: 935, column: 26, scope: !934)
!944 = !DILocation(line: 935, column: 30, scope: !934)
!945 = !DILocation(line: 935, column: 3, scope: !934)
!946 = !DILocation(line: 935, column: 8, scope: !934)
!947 = !DILocation(line: 935, column: 23, scope: !934)
!948 = !DILocation(line: 936, column: 3, scope: !934)
!949 = !DILocation(line: 938, column: 43, scope: !934)
!950 = !DILocation(line: 938, column: 49, scope: !934)
!951 = !DILocation(line: 938, column: 26, scope: !934)
!952 = !DILocation(line: 938, column: 30, scope: !934)
!953 = !DILocation(line: 938, column: 3, scope: !934)
!954 = !DILocation(line: 938, column: 8, scope: !934)
!955 = !DILocation(line: 938, column: 23, scope: !934)
!956 = !DILocation(line: 939, column: 3, scope: !934)
!957 = !DILocation(line: 943, column: 6, scope: !958)
!958 = distinct !DILexicalBlock(scope: !521, file: !1, line: 943, column: 6)
!959 = !DILocation(line: 943, column: 21, scope: !958)
!960 = !DILocation(line: 943, column: 26, scope: !958)
!961 = !DILocation(line: 943, column: 18, scope: !958)
!962 = !DILocation(line: 943, column: 6, scope: !521)
!963 = !DILocation(line: 944, column: 3, scope: !958)
!964 = !DILocation(line: 944, column: 8, scope: !958)
!965 = !DILocation(line: 944, column: 21, scope: !958)
!966 = !DILocation(line: 948, column: 6, scope: !967)
!967 = distinct !DILexicalBlock(scope: !521, file: !1, line: 948, column: 6)
!968 = !DILocation(line: 948, column: 12, scope: !967)
!969 = !DILocation(line: 948, column: 17, scope: !967)
!970 = !DILocation(line: 948, column: 6, scope: !521)
!971 = !DILocation(line: 949, column: 7, scope: !972)
!972 = distinct !DILexicalBlock(scope: !973, file: !1, line: 949, column: 7)
!973 = distinct !DILexicalBlock(scope: !967, file: !1, line: 948, column: 37)
!974 = !DILocation(line: 949, column: 12, scope: !972)
!975 = !DILocation(line: 949, column: 23, scope: !972)
!976 = !DILocation(line: 949, column: 7, scope: !973)
!977 = !DILocation(line: 952, column: 7, scope: !978)
!978 = distinct !DILexicalBlock(scope: !972, file: !1, line: 949, column: 32)
!979 = !DILocation(line: 952, column: 10, scope: !978)
!980 = !DILocation(line: 951, column: 8, scope: !978)
!981 = !DILocation(line: 950, column: 4, scope: !978)
!982 = !DILocation(line: 950, column: 9, scope: !978)
!983 = !DILocation(line: 950, column: 20, scope: !978)
!984 = !DILocation(line: 953, column: 8, scope: !985)
!985 = distinct !DILexicalBlock(scope: !978, file: !1, line: 953, column: 8)
!986 = !DILocation(line: 953, column: 13, scope: !985)
!987 = !DILocation(line: 953, column: 24, scope: !985)
!988 = !DILocation(line: 953, column: 8, scope: !978)
!989 = !DILocation(line: 954, column: 5, scope: !985)
!990 = !DILocation(line: 955, column: 3, scope: !978)
!991 = !DILocation(line: 956, column: 11, scope: !973)
!992 = !DILocation(line: 956, column: 16, scope: !973)
!993 = !DILocation(line: 956, column: 9, scope: !973)
!994 = !DILocation(line: 957, column: 2, scope: !973)
!995 = !DILocation(line: 957, column: 13, scope: !996)
!996 = !DILexicalBlockFile(scope: !997, file: !1, discriminator: 1)
!997 = distinct !DILexicalBlock(scope: !967, file: !1, line: 957, column: 13)
!998 = !DILocation(line: 957, column: 18, scope: !996)
!999 = !DILocation(line: 957, column: 24, scope: !996)
!1000 = !DILocation(line: 959, column: 11, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !997, file: !1, line: 957, column: 33)
!1002 = !DILocation(line: 959, column: 16, scope: !1001)
!1003 = !DILocation(line: 959, column: 9, scope: !1001)
!1004 = !DILocation(line: 960, column: 2, scope: !1001)
!1005 = !DILocation(line: 962, column: 8, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !1007, file: !1, line: 962, column: 7)
!1007 = distinct !DILexicalBlock(scope: !997, file: !1, line: 960, column: 9)
!1008 = !DILocation(line: 962, column: 13, scope: !1006)
!1009 = !DILocation(line: 962, column: 7, scope: !1007)
!1010 = !DILocation(line: 965, column: 12, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1006, file: !1, line: 962, column: 38)
!1012 = !DILocation(line: 965, column: 15, scope: !1011)
!1013 = !DILocation(line: 964, column: 8, scope: !1011)
!1014 = !DILocation(line: 963, column: 4, scope: !1011)
!1015 = !DILocation(line: 963, column: 9, scope: !1011)
!1016 = !DILocation(line: 963, column: 23, scope: !1011)
!1017 = !DILocation(line: 966, column: 4, scope: !1011)
!1018 = !DILocation(line: 966, column: 9, scope: !1011)
!1019 = !DILocation(line: 966, column: 33, scope: !1011)
!1020 = !DILocation(line: 967, column: 3, scope: !1011)
!1021 = !DILocation(line: 968, column: 11, scope: !1007)
!1022 = !DILocation(line: 968, column: 16, scope: !1007)
!1023 = !DILocation(line: 968, column: 9, scope: !1007)
!1024 = !DILocation(line: 974, column: 37, scope: !521)
!1025 = !DILocation(line: 974, column: 43, scope: !521)
!1026 = !DILocation(line: 974, column: 54, scope: !521)
!1027 = !DILocation(line: 974, column: 60, scope: !521)
!1028 = !DILocation(line: 974, column: 6, scope: !521)
!1029 = !DILocation(line: 974, column: 4, scope: !521)
!1030 = !DILocation(line: 975, column: 36, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !521, file: !1, line: 975, column: 6)
!1032 = !DILocation(line: 975, column: 43, scope: !1031)
!1033 = !DILocation(line: 975, column: 49, scope: !1031)
!1034 = !DILocation(line: 975, column: 58, scope: !1031)
!1035 = !DILocation(line: 976, column: 6, scope: !1031)
!1036 = !DILocation(line: 976, column: 41, scope: !1031)
!1037 = !DILocation(line: 975, column: 6, scope: !1031)
!1038 = !DILocation(line: 976, column: 48, scope: !1031)
!1039 = !DILocation(line: 975, column: 6, scope: !521)
!1040 = !DILocation(line: 977, column: 7, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !1042, file: !1, line: 977, column: 7)
!1042 = distinct !DILexicalBlock(scope: !1031, file: !1, line: 976, column: 54)
!1043 = !DILocation(line: 977, column: 13, scope: !1041)
!1044 = !DILocation(line: 977, column: 7, scope: !1042)
!1045 = !DILocation(line: 978, column: 23, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1041, file: !1, line: 977, column: 24)
!1047 = !DILocation(line: 978, column: 26, scope: !1046)
!1048 = !DILocation(line: 978, column: 4, scope: !1046)
!1049 = !DILocation(line: 980, column: 4, scope: !1046)
!1050 = !DILocation(line: 982, column: 22, scope: !1042)
!1051 = !DILocation(line: 982, column: 25, scope: !1042)
!1052 = !DILocation(line: 986, column: 46, scope: !1042)
!1053 = !DILocation(line: 986, column: 7, scope: !1042)
!1054 = !DILocation(line: 982, column: 3, scope: !1042)
!1055 = !DILocation(line: 987, column: 7, scope: !1042)
!1056 = !DILocation(line: 988, column: 2, scope: !1042)
!1057 = !DILocation(line: 989, column: 6, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !521, file: !1, line: 989, column: 6)
!1059 = !DILocation(line: 989, column: 8, scope: !1058)
!1060 = !DILocation(line: 989, column: 6, scope: !521)
!1061 = !DILocation(line: 991, column: 32, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1058, file: !1, line: 989, column: 13)
!1063 = !DILocation(line: 991, column: 37, scope: !1062)
!1064 = !DILocation(line: 991, column: 3, scope: !1062)
!1065 = !DILocation(line: 992, column: 2, scope: !1062)
!1066 = !DILocation(line: 994, column: 25, scope: !521)
!1067 = !DILocation(line: 994, column: 32, scope: !521)
!1068 = !DILocation(line: 994, column: 38, scope: !521)
!1069 = !DILocation(line: 994, column: 2, scope: !521)
!1070 = !DILocation(line: 995, column: 6, scope: !1071)
!1071 = distinct !DILexicalBlock(scope: !521, file: !1, line: 995, column: 6)
!1072 = !DILocation(line: 995, column: 12, scope: !1071)
!1073 = !DILocation(line: 995, column: 17, scope: !1071)
!1074 = !DILocation(line: 995, column: 6, scope: !521)
!1075 = !DILocation(line: 996, column: 26, scope: !1071)
!1076 = !DILocation(line: 996, column: 3, scope: !1071)
!1077 = !DILocation(line: 998, column: 26, scope: !1071)
!1078 = !DILocation(line: 998, column: 3, scope: !1071)
!1079 = !DILocation(line: 999, column: 26, scope: !521)
!1080 = !DILocation(line: 999, column: 33, scope: !521)
!1081 = !DILocation(line: 999, column: 39, scope: !521)
!1082 = !DILocation(line: 999, column: 2, scope: !521)
!1083 = !DILocation(line: 1001, column: 31, scope: !521)
!1084 = !DILocation(line: 1001, column: 37, scope: !521)
!1085 = !DILocation(line: 1001, column: 2, scope: !521)
!1086 = !DILocation(line: 1001, column: 7, scope: !521)
!1087 = !DILocation(line: 1001, column: 29, scope: !521)
!1088 = !DILocation(line: 1002, column: 2, scope: !521)
!1089 = !DILocation(line: 1002, column: 7, scope: !521)
!1090 = !DILocation(line: 1002, column: 20, scope: !521)
!1091 = !DILocation(line: 1004, column: 6, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !521, file: !1, line: 1004, column: 6)
!1093 = !DILocation(line: 1004, column: 12, scope: !1092)
!1094 = !DILocation(line: 1004, column: 30, scope: !1092)
!1095 = !DILocation(line: 1004, column: 6, scope: !521)
!1096 = !DILocation(line: 1005, column: 31, scope: !1092)
!1097 = !DILocation(line: 1005, column: 36, scope: !1092)
!1098 = !DILocation(line: 1005, column: 49, scope: !1092)
!1099 = !DILocation(line: 1005, column: 3, scope: !1092)
!1100 = !DILocation(line: 1005, column: 8, scope: !1092)
!1101 = !DILocation(line: 1005, column: 29, scope: !1092)
!1102 = !DILocation(line: 1008, column: 10, scope: !521)
!1103 = !DILocation(line: 1008, column: 15, scope: !521)
!1104 = !DILocation(line: 1009, column: 6, scope: !521)
!1105 = !DILocation(line: 1009, column: 10, scope: !521)
!1106 = !DILocation(line: 1009, column: 17, scope: !521)
!1107 = !DILocation(line: 1009, column: 21, scope: !521)
!1108 = !DILocation(line: 1009, column: 28, scope: !521)
!1109 = !DILocation(line: 1009, column: 33, scope: !521)
!1110 = !DILocation(line: 1009, column: 49, scope: !521)
!1111 = !DILocation(line: 1008, column: 2, scope: !521)
!1112 = !DILocation(line: 1010, column: 35, scope: !521)
!1113 = !DILocation(line: 1010, column: 40, scope: !521)
!1114 = !DILocation(line: 1010, column: 2, scope: !521)
!1115 = !DILocation(line: 1010, column: 5, scope: !521)
!1116 = !DILocation(line: 1010, column: 13, scope: !521)
!1117 = !DILocation(line: 1010, column: 33, scope: !521)
!1118 = !DILocation(line: 1012, column: 10, scope: !521)
!1119 = !DILocation(line: 1012, column: 2, scope: !521)
!1120 = !DILocation(line: 1013, column: 1, scope: !521)
!1121 = !DILocalVariable(name: "a", arg: 1, scope: !549, file: !1, line: 1016, type: !4)
!1122 = !DILocation(line: 1016, column: 56, scope: !549)
!1123 = !DILocalVariable(name: "buff", arg: 2, scope: !549, file: !1, line: 1017, type: !64)
!1124 = !DILocation(line: 1017, column: 18, scope: !549)
!1125 = !DILocalVariable(name: "size", arg: 3, scope: !549, file: !1, line: 1017, type: !65)
!1126 = !DILocation(line: 1017, column: 32, scope: !549)
!1127 = !DILocalVariable(name: "offset", arg: 4, scope: !549, file: !1, line: 1017, type: !66)
!1128 = !DILocation(line: 1017, column: 47, scope: !549)
!1129 = !DILocalVariable(name: "cab", scope: !549, file: !1, line: 1019, type: !292)
!1130 = !DILocation(line: 1019, column: 14, scope: !549)
!1131 = !DILocation(line: 1019, column: 35, scope: !549)
!1132 = !DILocation(line: 1019, column: 38, scope: !549)
!1133 = !DILocation(line: 1019, column: 46, scope: !549)
!1134 = !DILocation(line: 1019, column: 20, scope: !549)
!1135 = !DILocalVariable(name: "r", scope: !549, file: !1, line: 1020, type: !23)
!1136 = !DILocation(line: 1020, column: 6, scope: !549)
!1137 = !DILocation(line: 1022, column: 10, scope: !549)
!1138 = !DILocation(line: 1022, column: 15, scope: !549)
!1139 = !DILocation(line: 1022, column: 29, scope: !549)
!1140 = !DILocation(line: 1022, column: 2, scope: !549)
!1141 = !DILocation(line: 1026, column: 4, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !549, file: !1, line: 1022, column: 37)
!1143 = !DILocation(line: 1026, column: 9, scope: !1142)
!1144 = !DILocation(line: 1027, column: 4, scope: !1142)
!1145 = !DILocation(line: 1027, column: 9, scope: !1142)
!1146 = !DILocation(line: 1028, column: 4, scope: !1142)
!1147 = !DILocation(line: 1028, column: 11, scope: !1142)
!1148 = !DILocation(line: 1029, column: 24, scope: !1142)
!1149 = !DILocation(line: 1029, column: 27, scope: !1142)
!1150 = !DILocation(line: 1029, column: 3, scope: !1142)
!1151 = !DILocation(line: 1030, column: 22, scope: !1142)
!1152 = !DILocation(line: 1030, column: 25, scope: !1142)
!1153 = !DILocation(line: 1030, column: 3, scope: !1142)
!1154 = !DILocation(line: 1032, column: 3, scope: !1142)
!1155 = !DILocation(line: 1034, column: 3, scope: !1142)
!1156 = !DILocation(line: 1036, column: 6, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !549, file: !1, line: 1036, column: 6)
!1158 = !DILocation(line: 1036, column: 11, scope: !1157)
!1159 = !DILocation(line: 1036, column: 29, scope: !1157)
!1160 = !DILocation(line: 1036, column: 6, scope: !549)
!1161 = !DILocation(line: 1037, column: 7, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1163, file: !1, line: 1037, column: 7)
!1163 = distinct !DILexicalBlock(scope: !1157, file: !1, line: 1036, column: 35)
!1164 = !DILocation(line: 1037, column: 12, scope: !1162)
!1165 = !DILocation(line: 1037, column: 7, scope: !1163)
!1166 = !DILocation(line: 1038, column: 8, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1168, file: !1, line: 1038, column: 8)
!1168 = distinct !DILexicalBlock(scope: !1162, file: !1, line: 1037, column: 27)
!1169 = !DILocation(line: 1038, column: 13, scope: !1167)
!1170 = !DILocation(line: 1038, column: 26, scope: !1167)
!1171 = !DILocation(line: 1038, column: 8, scope: !1168)
!1172 = !DILocation(line: 1039, column: 25, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1167, file: !1, line: 1038, column: 35)
!1174 = !DILocation(line: 1039, column: 9, scope: !1173)
!1175 = !DILocation(line: 1039, column: 7, scope: !1173)
!1176 = !DILocation(line: 1040, column: 9, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1173, file: !1, line: 1040, column: 9)
!1178 = !DILocation(line: 1040, column: 11, scope: !1177)
!1179 = !DILocation(line: 1040, column: 9, scope: !1173)
!1180 = !DILocation(line: 1041, column: 14, scope: !1177)
!1181 = !DILocation(line: 1041, column: 6, scope: !1177)
!1182 = !DILocation(line: 1042, column: 4, scope: !1173)
!1183 = !DILocation(line: 1043, column: 27, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1168, file: !1, line: 1043, column: 8)
!1185 = !DILocation(line: 1043, column: 30, scope: !1184)
!1186 = !DILocation(line: 1043, column: 35, scope: !1184)
!1187 = !DILocation(line: 1043, column: 8, scope: !1184)
!1188 = !DILocation(line: 1043, column: 50, scope: !1184)
!1189 = !DILocation(line: 1043, column: 8, scope: !1168)
!1190 = !DILocation(line: 1044, column: 5, scope: !1184)
!1191 = !DILocation(line: 1045, column: 4, scope: !1168)
!1192 = !DILocation(line: 1045, column: 9, scope: !1168)
!1193 = !DILocation(line: 1045, column: 23, scope: !1168)
!1194 = !DILocation(line: 1046, column: 3, scope: !1168)
!1195 = !DILocation(line: 1047, column: 3, scope: !1163)
!1196 = !DILocation(line: 1047, column: 8, scope: !1163)
!1197 = !DILocation(line: 1047, column: 26, scope: !1163)
!1198 = !DILocation(line: 1048, column: 2, scope: !1163)
!1199 = !DILocation(line: 1049, column: 6, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !549, file: !1, line: 1049, column: 6)
!1201 = !DILocation(line: 1049, column: 11, scope: !1200)
!1202 = !DILocation(line: 1049, column: 6, scope: !549)
!1203 = !DILocation(line: 1051, column: 31, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 1049, column: 29)
!1205 = !DILocation(line: 1051, column: 34, scope: !1204)
!1206 = !DILocation(line: 1051, column: 39, scope: !1204)
!1207 = !DILocation(line: 1051, column: 12, scope: !1204)
!1208 = !DILocation(line: 1051, column: 7, scope: !1204)
!1209 = !DILocation(line: 1051, column: 5, scope: !1204)
!1210 = !DILocation(line: 1052, column: 3, scope: !1204)
!1211 = !DILocation(line: 1052, column: 8, scope: !1204)
!1212 = !DILocation(line: 1052, column: 25, scope: !1204)
!1213 = !DILocation(line: 1053, column: 7, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !1204, file: !1, line: 1053, column: 7)
!1215 = !DILocation(line: 1053, column: 9, scope: !1214)
!1216 = !DILocation(line: 1053, column: 7, scope: !1204)
!1217 = !DILocation(line: 1054, column: 12, scope: !1214)
!1218 = !DILocation(line: 1054, column: 4, scope: !1214)
!1219 = !DILocation(line: 1055, column: 2, scope: !1204)
!1220 = !DILocation(line: 1056, column: 6, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !549, file: !1, line: 1056, column: 6)
!1222 = !DILocation(line: 1056, column: 11, scope: !1221)
!1223 = !DILocation(line: 1056, column: 26, scope: !1221)
!1224 = !DILocation(line: 1056, column: 29, scope: !1225)
!1225 = !DILexicalBlockFile(scope: !1221, file: !1, discriminator: 1)
!1226 = !DILocation(line: 1056, column: 34, scope: !1225)
!1227 = !DILocation(line: 1056, column: 6, scope: !1225)
!1228 = !DILocation(line: 1057, column: 8, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1230, file: !1, line: 1057, column: 7)
!1230 = distinct !DILexicalBlock(scope: !1221, file: !1, line: 1056, column: 48)
!1231 = !DILocation(line: 1057, column: 13, scope: !1229)
!1232 = !DILocation(line: 1057, column: 7, scope: !1230)
!1233 = !DILocation(line: 1059, column: 4, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !1229, file: !1, line: 1057, column: 35)
!1235 = !DILocation(line: 1059, column: 9, scope: !1234)
!1236 = !DILocation(line: 1059, column: 30, scope: !1234)
!1237 = !DILocation(line: 1060, column: 3, scope: !1234)
!1238 = !DILocation(line: 1061, column: 13, scope: !1230)
!1239 = !DILocation(line: 1061, column: 18, scope: !1230)
!1240 = !DILocation(line: 1061, column: 4, scope: !1230)
!1241 = !DILocation(line: 1061, column: 11, scope: !1230)
!1242 = !DILocation(line: 1062, column: 4, scope: !1230)
!1243 = !DILocation(line: 1062, column: 9, scope: !1230)
!1244 = !DILocation(line: 1063, column: 4, scope: !1230)
!1245 = !DILocation(line: 1063, column: 9, scope: !1230)
!1246 = !DILocation(line: 1064, column: 3, scope: !1230)
!1247 = !DILocation(line: 1067, column: 24, scope: !549)
!1248 = !DILocation(line: 1067, column: 27, scope: !549)
!1249 = !DILocation(line: 1067, column: 33, scope: !549)
!1250 = !DILocation(line: 1067, column: 39, scope: !549)
!1251 = !DILocation(line: 1067, column: 10, scope: !549)
!1252 = !DILocation(line: 1067, column: 2, scope: !549)
!1253 = !DILocation(line: 1068, column: 1, scope: !549)
!1254 = !DILocalVariable(name: "a", arg: 1, scope: !618, file: !1, line: 1966, type: !4)
!1255 = !DILocation(line: 1966, column: 61, scope: !618)
!1256 = !DILocalVariable(name: "cab", scope: !618, file: !1, line: 1968, type: !292)
!1257 = !DILocation(line: 1968, column: 14, scope: !618)
!1258 = !DILocalVariable(name: "bytes_skipped", scope: !618, file: !1, line: 1969, type: !52)
!1259 = !DILocation(line: 1969, column: 10, scope: !618)
!1260 = !DILocalVariable(name: "r", scope: !618, file: !1, line: 1970, type: !23)
!1261 = !DILocation(line: 1970, column: 6, scope: !618)
!1262 = !DILocation(line: 1972, column: 23, scope: !618)
!1263 = !DILocation(line: 1972, column: 26, scope: !618)
!1264 = !DILocation(line: 1972, column: 34, scope: !618)
!1265 = !DILocation(line: 1972, column: 8, scope: !618)
!1266 = !DILocation(line: 1972, column: 6, scope: !618)
!1267 = !DILocation(line: 1974, column: 6, scope: !1268)
!1268 = distinct !DILexicalBlock(scope: !618, file: !1, line: 1974, column: 6)
!1269 = !DILocation(line: 1974, column: 11, scope: !1268)
!1270 = !DILocation(line: 1974, column: 6, scope: !618)
!1271 = !DILocation(line: 1975, column: 3, scope: !1268)
!1272 = !DILocation(line: 1977, column: 7, scope: !1273)
!1273 = distinct !DILexicalBlock(scope: !618, file: !1, line: 1977, column: 6)
!1274 = !DILocation(line: 1977, column: 12, scope: !1273)
!1275 = !DILocation(line: 1977, column: 6, scope: !618)
!1276 = !DILocation(line: 1978, column: 25, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1273, file: !1, line: 1977, column: 31)
!1278 = !DILocation(line: 1978, column: 30, scope: !1277)
!1279 = !DILocation(line: 1978, column: 3, scope: !1277)
!1280 = !DILocation(line: 1978, column: 8, scope: !1277)
!1281 = !DILocation(line: 1978, column: 22, scope: !1277)
!1282 = !DILocation(line: 1979, column: 3, scope: !1277)
!1283 = !DILocation(line: 1979, column: 8, scope: !1277)
!1284 = !DILocation(line: 1979, column: 30, scope: !1277)
!1285 = !DILocation(line: 1981, column: 31, scope: !1277)
!1286 = !DILocation(line: 1981, column: 36, scope: !1277)
!1287 = !DILocation(line: 1981, column: 49, scope: !1277)
!1288 = !DILocation(line: 1981, column: 3, scope: !1277)
!1289 = !DILocation(line: 1981, column: 8, scope: !1277)
!1290 = !DILocation(line: 1981, column: 29, scope: !1277)
!1291 = !DILocation(line: 1982, column: 3, scope: !1277)
!1292 = !DILocation(line: 1985, column: 6, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !618, file: !1, line: 1985, column: 6)
!1294 = !DILocation(line: 1985, column: 11, scope: !1293)
!1295 = !DILocation(line: 1985, column: 6, scope: !618)
!1296 = !DILocation(line: 1987, column: 31, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1293, file: !1, line: 1985, column: 29)
!1298 = !DILocation(line: 1987, column: 34, scope: !1297)
!1299 = !DILocation(line: 1987, column: 39, scope: !1297)
!1300 = !DILocation(line: 1987, column: 12, scope: !1297)
!1301 = !DILocation(line: 1987, column: 7, scope: !1297)
!1302 = !DILocation(line: 1987, column: 5, scope: !1297)
!1303 = !DILocation(line: 1988, column: 3, scope: !1297)
!1304 = !DILocation(line: 1988, column: 8, scope: !1297)
!1305 = !DILocation(line: 1988, column: 25, scope: !1297)
!1306 = !DILocation(line: 1989, column: 7, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1297, file: !1, line: 1989, column: 7)
!1308 = !DILocation(line: 1989, column: 9, scope: !1307)
!1309 = !DILocation(line: 1989, column: 7, scope: !1297)
!1310 = !DILocation(line: 1990, column: 12, scope: !1307)
!1311 = !DILocation(line: 1990, column: 4, scope: !1307)
!1312 = !DILocation(line: 1991, column: 2, scope: !1297)
!1313 = !DILocation(line: 1991, column: 13, scope: !1314)
!1314 = !DILexicalBlockFile(scope: !1315, file: !1, discriminator: 1)
!1315 = distinct !DILexicalBlock(scope: !1293, file: !1, line: 1991, column: 13)
!1316 = !DILocation(line: 1991, column: 18, scope: !1314)
!1317 = !DILocation(line: 1991, column: 31, scope: !1314)
!1318 = !DILocation(line: 1992, column: 23, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !1315, file: !1, line: 1991, column: 40)
!1320 = !DILocation(line: 1992, column: 7, scope: !1319)
!1321 = !DILocation(line: 1992, column: 5, scope: !1319)
!1322 = !DILocation(line: 1993, column: 7, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1319, file: !1, line: 1993, column: 7)
!1324 = !DILocation(line: 1993, column: 9, scope: !1323)
!1325 = !DILocation(line: 1993, column: 7, scope: !1319)
!1326 = !DILocation(line: 1994, column: 12, scope: !1323)
!1327 = !DILocation(line: 1994, column: 4, scope: !1323)
!1328 = !DILocation(line: 1995, column: 2, scope: !1319)
!1329 = !DILocation(line: 1998, column: 6, scope: !1330)
!1330 = distinct !DILexicalBlock(scope: !618, file: !1, line: 1998, column: 6)
!1331 = !DILocation(line: 1998, column: 11, scope: !1330)
!1332 = !DILocation(line: 1998, column: 6, scope: !618)
!1333 = !DILocation(line: 1999, column: 3, scope: !1330)
!1334 = !DILocation(line: 2005, column: 37, scope: !618)
!1335 = !DILocation(line: 2005, column: 40, scope: !618)
!1336 = !DILocation(line: 2005, column: 45, scope: !618)
!1337 = !DILocation(line: 2005, column: 18, scope: !618)
!1338 = !DILocation(line: 2005, column: 16, scope: !618)
!1339 = !DILocation(line: 2006, column: 6, scope: !1340)
!1340 = distinct !DILexicalBlock(scope: !618, file: !1, line: 2006, column: 6)
!1341 = !DILocation(line: 2006, column: 20, scope: !1340)
!1342 = !DILocation(line: 2006, column: 6, scope: !618)
!1343 = !DILocation(line: 2007, column: 3, scope: !1340)
!1344 = !DILocation(line: 2011, column: 6, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !618, file: !1, line: 2011, column: 6)
!1346 = !DILocation(line: 2011, column: 11, scope: !1345)
!1347 = !DILocation(line: 2011, column: 27, scope: !1345)
!1348 = !DILocation(line: 2011, column: 36, scope: !1345)
!1349 = !DILocation(line: 2011, column: 53, scope: !1345)
!1350 = !DILocation(line: 2012, column: 6, scope: !1345)
!1351 = !DILocation(line: 2012, column: 11, scope: !1345)
!1352 = !DILocation(line: 2012, column: 24, scope: !1345)
!1353 = !DILocation(line: 2011, column: 6, scope: !1354)
!1354 = !DILexicalBlockFile(scope: !618, file: !1, discriminator: 1)
!1355 = !DILocation(line: 2013, column: 3, scope: !1345)
!1356 = !DILocation(line: 2013, column: 8, scope: !1345)
!1357 = !DILocation(line: 2013, column: 22, scope: !1345)
!1358 = !DILocation(line: 2013, column: 33, scope: !1345)
!1359 = !DILocation(line: 2016, column: 30, scope: !618)
!1360 = !DILocation(line: 2016, column: 35, scope: !618)
!1361 = !DILocation(line: 2016, column: 48, scope: !618)
!1362 = !DILocation(line: 2016, column: 2, scope: !618)
!1363 = !DILocation(line: 2016, column: 7, scope: !618)
!1364 = !DILocation(line: 2016, column: 28, scope: !618)
!1365 = !DILocation(line: 2017, column: 2, scope: !618)
!1366 = !DILocation(line: 2018, column: 1, scope: !618)
!1367 = !DILocalVariable(name: "a", arg: 1, scope: !619, file: !1, line: 2021, type: !4)
!1368 = !DILocation(line: 2021, column: 54, scope: !619)
!1369 = !DILocalVariable(name: "cab", scope: !619, file: !1, line: 2023, type: !292)
!1370 = !DILocation(line: 2023, column: 14, scope: !619)
!1371 = !DILocation(line: 2023, column: 35, scope: !619)
!1372 = !DILocation(line: 2023, column: 38, scope: !619)
!1373 = !DILocation(line: 2023, column: 46, scope: !619)
!1374 = !DILocation(line: 2023, column: 20, scope: !619)
!1375 = !DILocalVariable(name: "hd", scope: !619, file: !1, line: 2024, type: !851)
!1376 = !DILocation(line: 2024, column: 19, scope: !619)
!1377 = !DILocation(line: 2024, column: 25, scope: !619)
!1378 = !DILocation(line: 2024, column: 30, scope: !619)
!1379 = !DILocalVariable(name: "i", scope: !619, file: !1, line: 2025, type: !23)
!1380 = !DILocation(line: 2025, column: 6, scope: !619)
!1381 = !DILocation(line: 2027, column: 6, scope: !1382)
!1382 = distinct !DILexicalBlock(scope: !619, file: !1, line: 2027, column: 6)
!1383 = !DILocation(line: 2027, column: 10, scope: !1382)
!1384 = !DILocation(line: 2027, column: 23, scope: !1382)
!1385 = !DILocation(line: 2027, column: 6, scope: !619)
!1386 = !DILocation(line: 2028, column: 10, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1388, file: !1, line: 2028, column: 3)
!1388 = distinct !DILexicalBlock(scope: !1382, file: !1, line: 2027, column: 32)
!1389 = !DILocation(line: 2028, column: 8, scope: !1387)
!1390 = !DILocation(line: 2028, column: 15, scope: !1391)
!1391 = !DILexicalBlockFile(scope: !1392, file: !1, discriminator: 1)
!1392 = distinct !DILexicalBlock(scope: !1387, file: !1, line: 2028, column: 3)
!1393 = !DILocation(line: 2028, column: 19, scope: !1391)
!1394 = !DILocation(line: 2028, column: 23, scope: !1391)
!1395 = !DILocation(line: 2028, column: 17, scope: !1391)
!1396 = !DILocation(line: 2028, column: 3, scope: !1391)
!1397 = !DILocation(line: 2029, column: 26, scope: !1392)
!1398 = !DILocation(line: 2029, column: 9, scope: !1392)
!1399 = !DILocation(line: 2029, column: 13, scope: !1392)
!1400 = !DILocation(line: 2029, column: 29, scope: !1392)
!1401 = !DILocation(line: 2029, column: 36, scope: !1392)
!1402 = !DILocation(line: 2029, column: 4, scope: !1392)
!1403 = !DILocation(line: 2028, column: 38, scope: !1404)
!1404 = !DILexicalBlockFile(scope: !1392, file: !1, discriminator: 2)
!1405 = !DILocation(line: 2028, column: 3, scope: !1404)
!1406 = !DILocation(line: 2030, column: 8, scope: !1388)
!1407 = !DILocation(line: 2030, column: 12, scope: !1388)
!1408 = !DILocation(line: 2030, column: 3, scope: !1388)
!1409 = !DILocation(line: 2031, column: 2, scope: !1388)
!1410 = !DILocation(line: 2032, column: 6, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !619, file: !1, line: 2032, column: 6)
!1412 = !DILocation(line: 2032, column: 10, scope: !1411)
!1413 = !DILocation(line: 2032, column: 21, scope: !1411)
!1414 = !DILocation(line: 2032, column: 6, scope: !619)
!1415 = !DILocation(line: 2033, column: 10, scope: !1416)
!1416 = distinct !DILexicalBlock(scope: !1417, file: !1, line: 2033, column: 3)
!1417 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 2032, column: 30)
!1418 = !DILocation(line: 2033, column: 8, scope: !1416)
!1419 = !DILocation(line: 2033, column: 15, scope: !1420)
!1420 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 1)
!1421 = distinct !DILexicalBlock(scope: !1416, file: !1, line: 2033, column: 3)
!1422 = !DILocation(line: 2033, column: 19, scope: !1420)
!1423 = !DILocation(line: 2033, column: 24, scope: !1420)
!1424 = !DILocation(line: 2033, column: 33, scope: !1420)
!1425 = !DILocation(line: 2033, column: 17, scope: !1420)
!1426 = !DILocation(line: 2033, column: 3, scope: !1420)
!1427 = !DILocation(line: 2034, column: 41, scope: !1421)
!1428 = !DILocation(line: 2034, column: 26, scope: !1421)
!1429 = !DILocation(line: 2034, column: 30, scope: !1421)
!1430 = !DILocation(line: 2034, column: 44, scope: !1421)
!1431 = !DILocation(line: 2034, column: 4, scope: !1421)
!1432 = !DILocation(line: 2033, column: 46, scope: !1433)
!1433 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 2)
!1434 = !DILocation(line: 2033, column: 3, scope: !1433)
!1435 = !DILocation(line: 2035, column: 8, scope: !1417)
!1436 = !DILocation(line: 2035, column: 12, scope: !1417)
!1437 = !DILocation(line: 2035, column: 3, scope: !1417)
!1438 = !DILocation(line: 2036, column: 2, scope: !1417)
!1439 = !DILocation(line: 2038, column: 6, scope: !1440)
!1440 = distinct !DILexicalBlock(scope: !619, file: !1, line: 2038, column: 6)
!1441 = !DILocation(line: 2038, column: 11, scope: !1440)
!1442 = !DILocation(line: 2038, column: 6, scope: !619)
!1443 = !DILocation(line: 2039, column: 15, scope: !1440)
!1444 = !DILocation(line: 2039, column: 20, scope: !1440)
!1445 = !DILocation(line: 2039, column: 3, scope: !1440)
!1446 = !DILocation(line: 2041, column: 19, scope: !619)
!1447 = !DILocation(line: 2041, column: 24, scope: !619)
!1448 = !DILocation(line: 2041, column: 2, scope: !619)
!1449 = !DILocation(line: 2042, column: 24, scope: !619)
!1450 = !DILocation(line: 2042, column: 29, scope: !619)
!1451 = !DILocation(line: 2042, column: 2, scope: !619)
!1452 = !DILocation(line: 2043, column: 7, scope: !619)
!1453 = !DILocation(line: 2043, column: 12, scope: !619)
!1454 = !DILocation(line: 2043, column: 2, scope: !619)
!1455 = !DILocation(line: 2044, column: 7, scope: !619)
!1456 = !DILocation(line: 2044, column: 2, scope: !619)
!1457 = !DILocation(line: 2045, column: 3, scope: !619)
!1458 = !DILocation(line: 2045, column: 6, scope: !619)
!1459 = !DILocation(line: 2045, column: 14, scope: !619)
!1460 = !DILocation(line: 2045, column: 20, scope: !619)
!1461 = !DILocation(line: 2046, column: 2, scope: !619)
!1462 = !DILocalVariable(name: "p", arg: 1, scope: !517, file: !1, line: 396, type: !80)
!1463 = !DILocation(line: 396, column: 28, scope: !517)
!1464 = !DILocation(line: 398, column: 10, scope: !517)
!1465 = !DILocation(line: 398, column: 2, scope: !517)
!1466 = !DILocation(line: 407, column: 14, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1468, file: !1, line: 407, column: 7)
!1468 = distinct !DILexicalBlock(scope: !517, file: !1, line: 398, column: 16)
!1469 = !DILocation(line: 407, column: 7, scope: !1467)
!1470 = !DILocation(line: 407, column: 36, scope: !1467)
!1471 = !DILocation(line: 407, column: 7, scope: !1468)
!1472 = !DILocation(line: 408, column: 4, scope: !1467)
!1473 = !DILocation(line: 409, column: 3, scope: !1468)
!1474 = !DILocation(line: 410, column: 12, scope: !1468)
!1475 = !DILocation(line: 411, column: 12, scope: !1468)
!1476 = !DILocation(line: 412, column: 12, scope: !1468)
!1477 = !DILocation(line: 413, column: 12, scope: !1468)
!1478 = !DILocation(line: 414, column: 12, scope: !1468)
!1479 = !DILocation(line: 416, column: 1, scope: !517)
!1480 = !DILocalVariable(name: "a", arg: 1, scope: !522, file: !1, line: 626, type: !4)
!1481 = !DILocation(line: 626, column: 38, scope: !522)
!1482 = !DILocalVariable(name: "p", scope: !522, file: !1, line: 628, type: !436)
!1483 = !DILocation(line: 628, column: 23, scope: !522)
!1484 = !DILocalVariable(name: "cab", scope: !522, file: !1, line: 629, type: !292)
!1485 = !DILocation(line: 629, column: 14, scope: !522)
!1486 = !DILocalVariable(name: "hd", scope: !522, file: !1, line: 630, type: !851)
!1487 = !DILocation(line: 630, column: 19, scope: !522)
!1488 = !DILocalVariable(name: "bytes", scope: !522, file: !1, line: 631, type: !45)
!1489 = !DILocation(line: 631, column: 9, scope: !522)
!1490 = !DILocalVariable(name: "used", scope: !522, file: !1, line: 631, type: !45)
!1491 = !DILocation(line: 631, column: 16, scope: !522)
!1492 = !DILocalVariable(name: "len", scope: !522, file: !1, line: 632, type: !38)
!1493 = !DILocation(line: 632, column: 10, scope: !522)
!1494 = !DILocalVariable(name: "skip", scope: !522, file: !1, line: 633, type: !52)
!1495 = !DILocation(line: 633, column: 10, scope: !522)
!1496 = !DILocalVariable(name: "err", scope: !522, file: !1, line: 634, type: !23)
!1497 = !DILocation(line: 634, column: 6, scope: !522)
!1498 = !DILocalVariable(name: "i", scope: !522, file: !1, line: 634, type: !23)
!1499 = !DILocation(line: 634, column: 11, scope: !522)
!1500 = !DILocalVariable(name: "cur_folder", scope: !522, file: !1, line: 635, type: !23)
!1501 = !DILocation(line: 635, column: 6, scope: !522)
!1502 = !DILocalVariable(name: "prev_folder", scope: !522, file: !1, line: 635, type: !23)
!1503 = !DILocation(line: 635, column: 18, scope: !522)
!1504 = !DILocalVariable(name: "offset32", scope: !522, file: !1, line: 636, type: !305)
!1505 = !DILocation(line: 636, column: 11, scope: !522)
!1506 = !DILocation(line: 638, column: 2, scope: !522)
!1507 = !DILocation(line: 638, column: 5, scope: !522)
!1508 = !DILocation(line: 638, column: 13, scope: !522)
!1509 = !DILocation(line: 638, column: 28, scope: !522)
!1510 = !DILocation(line: 639, column: 6, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !522, file: !1, line: 639, column: 6)
!1512 = !DILocation(line: 639, column: 9, scope: !1511)
!1513 = !DILocation(line: 639, column: 17, scope: !1511)
!1514 = !DILocation(line: 639, column: 37, scope: !1511)
!1515 = !DILocation(line: 639, column: 6, scope: !522)
!1516 = !DILocation(line: 640, column: 3, scope: !1511)
!1517 = !DILocation(line: 640, column: 6, scope: !1511)
!1518 = !DILocation(line: 640, column: 14, scope: !1511)
!1519 = !DILocation(line: 640, column: 34, scope: !1511)
!1520 = !DILocation(line: 642, column: 32, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !522, file: !1, line: 642, column: 6)
!1522 = !DILocation(line: 642, column: 11, scope: !1521)
!1523 = !DILocation(line: 642, column: 9, scope: !1521)
!1524 = !DILocation(line: 642, column: 46, scope: !1521)
!1525 = !DILocation(line: 642, column: 6, scope: !522)
!1526 = !DILocation(line: 643, column: 27, scope: !1521)
!1527 = !DILocation(line: 643, column: 11, scope: !1521)
!1528 = !DILocation(line: 643, column: 3, scope: !1521)
!1529 = !DILocation(line: 645, column: 23, scope: !522)
!1530 = !DILocation(line: 645, column: 26, scope: !522)
!1531 = !DILocation(line: 645, column: 34, scope: !522)
!1532 = !DILocation(line: 645, column: 8, scope: !522)
!1533 = !DILocation(line: 645, column: 6, scope: !522)
!1534 = !DILocation(line: 646, column: 6, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !522, file: !1, line: 646, column: 6)
!1536 = !DILocation(line: 646, column: 11, scope: !1535)
!1537 = !DILocation(line: 646, column: 24, scope: !1535)
!1538 = !DILocation(line: 646, column: 29, scope: !1535)
!1539 = !DILocation(line: 647, column: 6, scope: !1535)
!1540 = !DILocation(line: 647, column: 11, scope: !1535)
!1541 = !DILocation(line: 647, column: 18, scope: !1535)
!1542 = !DILocation(line: 647, column: 21, scope: !1543)
!1543 = !DILexicalBlockFile(scope: !1535, file: !1, discriminator: 1)
!1544 = !DILocation(line: 647, column: 26, scope: !1543)
!1545 = !DILocation(line: 646, column: 6, scope: !1546)
!1546 = !DILexicalBlockFile(scope: !522, file: !1, discriminator: 1)
!1547 = !DILocation(line: 649, column: 22, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 647, column: 34)
!1549 = !DILocation(line: 649, column: 9, scope: !1548)
!1550 = !DILocation(line: 649, column: 7, scope: !1548)
!1551 = !DILocation(line: 650, column: 7, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1548, file: !1, line: 650, column: 7)
!1553 = !DILocation(line: 650, column: 11, scope: !1552)
!1554 = !DILocation(line: 650, column: 7, scope: !1548)
!1555 = !DILocation(line: 651, column: 12, scope: !1552)
!1556 = !DILocation(line: 651, column: 4, scope: !1552)
!1557 = !DILocation(line: 654, column: 33, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1548, file: !1, line: 654, column: 7)
!1559 = !DILocation(line: 654, column: 12, scope: !1558)
!1560 = !DILocation(line: 654, column: 10, scope: !1558)
!1561 = !DILocation(line: 654, column: 47, scope: !1558)
!1562 = !DILocation(line: 654, column: 7, scope: !1548)
!1563 = !DILocation(line: 655, column: 28, scope: !1558)
!1564 = !DILocation(line: 655, column: 12, scope: !1558)
!1565 = !DILocation(line: 655, column: 4, scope: !1558)
!1566 = !DILocation(line: 656, column: 2, scope: !1548)
!1567 = !DILocation(line: 658, column: 2, scope: !522)
!1568 = !DILocation(line: 658, column: 7, scope: !522)
!1569 = !DILocation(line: 658, column: 18, scope: !522)
!1570 = !DILocation(line: 662, column: 8, scope: !522)
!1571 = !DILocation(line: 662, column: 13, scope: !522)
!1572 = !DILocation(line: 662, column: 5, scope: !522)
!1573 = !DILocation(line: 663, column: 6, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !522, file: !1, line: 663, column: 6)
!1575 = !DILocation(line: 663, column: 30, scope: !1574)
!1576 = !DILocation(line: 663, column: 37, scope: !1574)
!1577 = !DILocation(line: 663, column: 40, scope: !1578)
!1578 = !DILexicalBlockFile(scope: !1574, file: !1, discriminator: 1)
!1579 = !DILocation(line: 663, column: 64, scope: !1578)
!1580 = !DILocation(line: 663, column: 71, scope: !1578)
!1581 = !DILocation(line: 664, column: 6, scope: !1574)
!1582 = !DILocation(line: 664, column: 30, scope: !1574)
!1583 = !DILocation(line: 664, column: 37, scope: !1574)
!1584 = !DILocation(line: 664, column: 40, scope: !1578)
!1585 = !DILocation(line: 664, column: 64, scope: !1578)
!1586 = !DILocation(line: 663, column: 6, scope: !1587)
!1587 = !DILexicalBlockFile(scope: !522, file: !1, discriminator: 2)
!1588 = !DILocation(line: 665, column: 22, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1574, file: !1, line: 664, column: 72)
!1590 = !DILocation(line: 665, column: 25, scope: !1589)
!1591 = !DILocation(line: 665, column: 3, scope: !1589)
!1592 = !DILocation(line: 667, column: 3, scope: !1589)
!1593 = !DILocation(line: 669, column: 36, scope: !522)
!1594 = !DILocation(line: 669, column: 38, scope: !522)
!1595 = !DILocation(line: 669, column: 20, scope: !522)
!1596 = !DILocation(line: 669, column: 2, scope: !522)
!1597 = !DILocation(line: 669, column: 6, scope: !522)
!1598 = !DILocation(line: 669, column: 18, scope: !522)
!1599 = !DILocation(line: 670, column: 37, scope: !522)
!1600 = !DILocation(line: 670, column: 39, scope: !522)
!1601 = !DILocation(line: 670, column: 21, scope: !522)
!1602 = !DILocation(line: 670, column: 2, scope: !522)
!1603 = !DILocation(line: 670, column: 6, scope: !522)
!1604 = !DILocation(line: 670, column: 19, scope: !522)
!1605 = !DILocation(line: 671, column: 14, scope: !522)
!1606 = !DILocation(line: 671, column: 2, scope: !522)
!1607 = !DILocation(line: 671, column: 6, scope: !522)
!1608 = !DILocation(line: 671, column: 12, scope: !522)
!1609 = !DILocation(line: 672, column: 14, scope: !522)
!1610 = !DILocation(line: 672, column: 2, scope: !522)
!1611 = !DILocation(line: 672, column: 6, scope: !522)
!1612 = !DILocation(line: 672, column: 12, scope: !522)
!1613 = !DILocation(line: 673, column: 37, scope: !522)
!1614 = !DILocation(line: 673, column: 39, scope: !522)
!1615 = !DILocation(line: 673, column: 21, scope: !522)
!1616 = !DILocation(line: 673, column: 2, scope: !522)
!1617 = !DILocation(line: 673, column: 6, scope: !522)
!1618 = !DILocation(line: 673, column: 19, scope: !522)
!1619 = !DILocation(line: 674, column: 6, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !522, file: !1, line: 674, column: 6)
!1621 = !DILocation(line: 674, column: 10, scope: !1620)
!1622 = !DILocation(line: 674, column: 23, scope: !1620)
!1623 = !DILocation(line: 674, column: 6, scope: !522)
!1624 = !DILocation(line: 675, column: 3, scope: !1620)
!1625 = !DILocation(line: 676, column: 35, scope: !522)
!1626 = !DILocation(line: 676, column: 37, scope: !522)
!1627 = !DILocation(line: 676, column: 19, scope: !522)
!1628 = !DILocation(line: 676, column: 2, scope: !522)
!1629 = !DILocation(line: 676, column: 6, scope: !522)
!1630 = !DILocation(line: 676, column: 17, scope: !522)
!1631 = !DILocation(line: 677, column: 6, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !522, file: !1, line: 677, column: 6)
!1633 = !DILocation(line: 677, column: 10, scope: !1632)
!1634 = !DILocation(line: 677, column: 21, scope: !1632)
!1635 = !DILocation(line: 677, column: 6, scope: !522)
!1636 = !DILocation(line: 678, column: 3, scope: !1632)
!1637 = !DILocation(line: 679, column: 30, scope: !522)
!1638 = !DILocation(line: 679, column: 32, scope: !522)
!1639 = !DILocation(line: 679, column: 14, scope: !522)
!1640 = !DILocation(line: 679, column: 2, scope: !522)
!1641 = !DILocation(line: 679, column: 6, scope: !522)
!1642 = !DILocation(line: 679, column: 12, scope: !522)
!1643 = !DILocation(line: 680, column: 30, scope: !522)
!1644 = !DILocation(line: 680, column: 32, scope: !522)
!1645 = !DILocation(line: 680, column: 14, scope: !522)
!1646 = !DILocation(line: 680, column: 2, scope: !522)
!1647 = !DILocation(line: 680, column: 6, scope: !522)
!1648 = !DILocation(line: 680, column: 12, scope: !522)
!1649 = !DILocation(line: 681, column: 32, scope: !522)
!1650 = !DILocation(line: 681, column: 34, scope: !522)
!1651 = !DILocation(line: 681, column: 16, scope: !522)
!1652 = !DILocation(line: 681, column: 2, scope: !522)
!1653 = !DILocation(line: 681, column: 6, scope: !522)
!1654 = !DILocation(line: 681, column: 14, scope: !522)
!1655 = !DILocation(line: 682, column: 7, scope: !522)
!1656 = !DILocation(line: 683, column: 6, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !522, file: !1, line: 683, column: 6)
!1658 = !DILocation(line: 683, column: 10, scope: !1657)
!1659 = !DILocation(line: 683, column: 16, scope: !1657)
!1660 = !DILocation(line: 683, column: 6, scope: !522)
!1661 = !DILocalVariable(name: "cfheader", scope: !1662, file: !1, line: 684, type: !307)
!1662 = distinct !DILexicalBlock(scope: !1657, file: !1, line: 683, column: 35)
!1663 = !DILocation(line: 684, column: 12, scope: !1662)
!1664 = !DILocation(line: 685, column: 30, scope: !1662)
!1665 = !DILocation(line: 685, column: 32, scope: !1662)
!1666 = !DILocation(line: 685, column: 14, scope: !1662)
!1667 = !DILocation(line: 685, column: 12, scope: !1662)
!1668 = !DILocation(line: 686, column: 7, scope: !1669)
!1669 = distinct !DILexicalBlock(scope: !1662, file: !1, line: 686, column: 7)
!1670 = !DILocation(line: 686, column: 16, scope: !1669)
!1671 = !DILocation(line: 686, column: 7, scope: !1662)
!1672 = !DILocation(line: 687, column: 4, scope: !1669)
!1673 = !DILocation(line: 688, column: 18, scope: !1662)
!1674 = !DILocation(line: 688, column: 3, scope: !1662)
!1675 = !DILocation(line: 688, column: 7, scope: !1662)
!1676 = !DILocation(line: 688, column: 16, scope: !1662)
!1677 = !DILocation(line: 689, column: 16, scope: !1662)
!1678 = !DILocation(line: 689, column: 3, scope: !1662)
!1679 = !DILocation(line: 689, column: 7, scope: !1662)
!1680 = !DILocation(line: 689, column: 14, scope: !1662)
!1681 = !DILocation(line: 690, column: 8, scope: !1662)
!1682 = !DILocation(line: 691, column: 11, scope: !1662)
!1683 = !DILocation(line: 691, column: 8, scope: !1662)
!1684 = !DILocation(line: 692, column: 2, scope: !1662)
!1685 = !DILocation(line: 693, column: 3, scope: !1657)
!1686 = !DILocation(line: 693, column: 7, scope: !1657)
!1687 = !DILocation(line: 693, column: 16, scope: !1657)
!1688 = !DILocation(line: 694, column: 6, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !522, file: !1, line: 694, column: 6)
!1690 = !DILocation(line: 694, column: 10, scope: !1689)
!1691 = !DILocation(line: 694, column: 16, scope: !1689)
!1692 = !DILocation(line: 694, column: 6, scope: !522)
!1693 = !DILocation(line: 696, column: 33, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 696, column: 7)
!1695 = distinct !DILexicalBlock(scope: !1689, file: !1, line: 694, column: 32)
!1696 = !DILocation(line: 696, column: 36, scope: !1694)
!1697 = !DILocation(line: 696, column: 40, scope: !1694)
!1698 = !DILocation(line: 696, column: 12, scope: !1694)
!1699 = !DILocation(line: 696, column: 10, scope: !1694)
!1700 = !DILocation(line: 696, column: 53, scope: !1694)
!1701 = !DILocation(line: 696, column: 7, scope: !1695)
!1702 = !DILocation(line: 697, column: 28, scope: !1694)
!1703 = !DILocation(line: 697, column: 12, scope: !1694)
!1704 = !DILocation(line: 697, column: 4, scope: !1694)
!1705 = !DILocation(line: 698, column: 26, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 698, column: 7)
!1707 = !DILocation(line: 698, column: 30, scope: !1706)
!1708 = !DILocation(line: 698, column: 28, scope: !1706)
!1709 = !DILocation(line: 698, column: 14, scope: !1706)
!1710 = !DILocation(line: 698, column: 12, scope: !1706)
!1711 = !DILocation(line: 698, column: 42, scope: !1706)
!1712 = !DILocation(line: 698, column: 7, scope: !1695)
!1713 = !DILocation(line: 699, column: 4, scope: !1706)
!1714 = !DILocation(line: 700, column: 11, scope: !1695)
!1715 = !DILocation(line: 700, column: 15, scope: !1695)
!1716 = !DILocation(line: 700, column: 8, scope: !1695)
!1717 = !DILocation(line: 702, column: 33, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 702, column: 7)
!1719 = !DILocation(line: 702, column: 36, scope: !1718)
!1720 = !DILocation(line: 702, column: 40, scope: !1718)
!1721 = !DILocation(line: 702, column: 12, scope: !1718)
!1722 = !DILocation(line: 702, column: 10, scope: !1718)
!1723 = !DILocation(line: 702, column: 53, scope: !1718)
!1724 = !DILocation(line: 702, column: 7, scope: !1695)
!1725 = !DILocation(line: 703, column: 28, scope: !1718)
!1726 = !DILocation(line: 703, column: 12, scope: !1718)
!1727 = !DILocation(line: 703, column: 4, scope: !1718)
!1728 = !DILocation(line: 704, column: 26, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 704, column: 7)
!1730 = !DILocation(line: 704, column: 30, scope: !1729)
!1731 = !DILocation(line: 704, column: 28, scope: !1729)
!1732 = !DILocation(line: 704, column: 14, scope: !1729)
!1733 = !DILocation(line: 704, column: 12, scope: !1729)
!1734 = !DILocation(line: 704, column: 42, scope: !1729)
!1735 = !DILocation(line: 704, column: 7, scope: !1695)
!1736 = !DILocation(line: 705, column: 4, scope: !1729)
!1737 = !DILocation(line: 706, column: 11, scope: !1695)
!1738 = !DILocation(line: 706, column: 15, scope: !1695)
!1739 = !DILocation(line: 706, column: 8, scope: !1695)
!1740 = !DILocation(line: 707, column: 2, scope: !1695)
!1741 = !DILocation(line: 708, column: 6, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !522, file: !1, line: 708, column: 6)
!1743 = !DILocation(line: 708, column: 10, scope: !1742)
!1744 = !DILocation(line: 708, column: 16, scope: !1742)
!1745 = !DILocation(line: 708, column: 6, scope: !522)
!1746 = !DILocation(line: 710, column: 33, scope: !1747)
!1747 = distinct !DILexicalBlock(scope: !1748, file: !1, line: 710, column: 7)
!1748 = distinct !DILexicalBlock(scope: !1742, file: !1, line: 708, column: 32)
!1749 = !DILocation(line: 710, column: 36, scope: !1747)
!1750 = !DILocation(line: 710, column: 40, scope: !1747)
!1751 = !DILocation(line: 710, column: 12, scope: !1747)
!1752 = !DILocation(line: 710, column: 10, scope: !1747)
!1753 = !DILocation(line: 710, column: 53, scope: !1747)
!1754 = !DILocation(line: 710, column: 7, scope: !1748)
!1755 = !DILocation(line: 711, column: 28, scope: !1747)
!1756 = !DILocation(line: 711, column: 12, scope: !1747)
!1757 = !DILocation(line: 711, column: 4, scope: !1747)
!1758 = !DILocation(line: 712, column: 26, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1748, file: !1, line: 712, column: 7)
!1760 = !DILocation(line: 712, column: 30, scope: !1759)
!1761 = !DILocation(line: 712, column: 28, scope: !1759)
!1762 = !DILocation(line: 712, column: 14, scope: !1759)
!1763 = !DILocation(line: 712, column: 12, scope: !1759)
!1764 = !DILocation(line: 712, column: 42, scope: !1759)
!1765 = !DILocation(line: 712, column: 7, scope: !1748)
!1766 = !DILocation(line: 713, column: 4, scope: !1759)
!1767 = !DILocation(line: 714, column: 11, scope: !1748)
!1768 = !DILocation(line: 714, column: 15, scope: !1748)
!1769 = !DILocation(line: 714, column: 8, scope: !1748)
!1770 = !DILocation(line: 716, column: 33, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1748, file: !1, line: 716, column: 7)
!1772 = !DILocation(line: 716, column: 36, scope: !1771)
!1773 = !DILocation(line: 716, column: 40, scope: !1771)
!1774 = !DILocation(line: 716, column: 12, scope: !1771)
!1775 = !DILocation(line: 716, column: 10, scope: !1771)
!1776 = !DILocation(line: 716, column: 53, scope: !1771)
!1777 = !DILocation(line: 716, column: 7, scope: !1748)
!1778 = !DILocation(line: 717, column: 28, scope: !1771)
!1779 = !DILocation(line: 717, column: 12, scope: !1771)
!1780 = !DILocation(line: 717, column: 4, scope: !1771)
!1781 = !DILocation(line: 718, column: 26, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1748, file: !1, line: 718, column: 7)
!1783 = !DILocation(line: 718, column: 30, scope: !1782)
!1784 = !DILocation(line: 718, column: 28, scope: !1782)
!1785 = !DILocation(line: 718, column: 14, scope: !1782)
!1786 = !DILocation(line: 718, column: 12, scope: !1782)
!1787 = !DILocation(line: 718, column: 42, scope: !1782)
!1788 = !DILocation(line: 718, column: 7, scope: !1748)
!1789 = !DILocation(line: 719, column: 4, scope: !1782)
!1790 = !DILocation(line: 720, column: 11, scope: !1748)
!1791 = !DILocation(line: 720, column: 15, scope: !1748)
!1792 = !DILocation(line: 720, column: 8, scope: !1748)
!1793 = !DILocation(line: 721, column: 2, scope: !1748)
!1794 = !DILocation(line: 722, column: 25, scope: !522)
!1795 = !DILocation(line: 722, column: 28, scope: !522)
!1796 = !DILocation(line: 722, column: 2, scope: !522)
!1797 = !DILocation(line: 723, column: 21, scope: !522)
!1798 = !DILocation(line: 723, column: 2, scope: !522)
!1799 = !DILocation(line: 723, column: 7, scope: !522)
!1800 = !DILocation(line: 723, column: 18, scope: !522)
!1801 = !DILocation(line: 724, column: 7, scope: !522)
!1802 = !DILocation(line: 730, column: 6, scope: !522)
!1803 = !DILocation(line: 730, column: 10, scope: !522)
!1804 = !DILocation(line: 729, column: 40, scope: !522)
!1805 = !DILocation(line: 729, column: 21, scope: !522)
!1806 = !DILocation(line: 729, column: 2, scope: !522)
!1807 = !DILocation(line: 729, column: 6, scope: !522)
!1808 = !DILocation(line: 729, column: 19, scope: !522)
!1809 = !DILocation(line: 731, column: 6, scope: !1810)
!1810 = distinct !DILexicalBlock(scope: !522, file: !1, line: 731, column: 6)
!1811 = !DILocation(line: 731, column: 10, scope: !1810)
!1812 = !DILocation(line: 731, column: 23, scope: !1810)
!1813 = !DILocation(line: 731, column: 6, scope: !522)
!1814 = !DILocation(line: 732, column: 3, scope: !1810)
!1815 = !DILocation(line: 734, column: 8, scope: !522)
!1816 = !DILocation(line: 735, column: 6, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !522, file: !1, line: 735, column: 6)
!1818 = !DILocation(line: 735, column: 10, scope: !1817)
!1819 = !DILocation(line: 735, column: 16, scope: !1817)
!1820 = !DILocation(line: 735, column: 6, scope: !522)
!1821 = !DILocation(line: 736, column: 12, scope: !1817)
!1822 = !DILocation(line: 736, column: 16, scope: !1817)
!1823 = !DILocation(line: 736, column: 9, scope: !1817)
!1824 = !DILocation(line: 736, column: 3, scope: !1817)
!1825 = !DILocation(line: 737, column: 11, scope: !522)
!1826 = !DILocation(line: 737, column: 15, scope: !522)
!1827 = !DILocation(line: 737, column: 8, scope: !522)
!1828 = !DILocation(line: 738, column: 32, scope: !1829)
!1829 = distinct !DILexicalBlock(scope: !522, file: !1, line: 738, column: 6)
!1830 = !DILocation(line: 738, column: 35, scope: !1829)
!1831 = !DILocation(line: 738, column: 11, scope: !1829)
!1832 = !DILocation(line: 738, column: 9, scope: !1829)
!1833 = !DILocation(line: 738, column: 49, scope: !1829)
!1834 = !DILocation(line: 738, column: 6, scope: !522)
!1835 = !DILocation(line: 739, column: 27, scope: !1829)
!1836 = !DILocation(line: 739, column: 11, scope: !1829)
!1837 = !DILocation(line: 739, column: 3, scope: !1829)
!1838 = !DILocation(line: 740, column: 11, scope: !522)
!1839 = !DILocation(line: 741, column: 9, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !522, file: !1, line: 741, column: 2)
!1841 = !DILocation(line: 741, column: 7, scope: !1840)
!1842 = !DILocation(line: 741, column: 14, scope: !1843)
!1843 = !DILexicalBlockFile(scope: !1844, file: !1, discriminator: 1)
!1844 = distinct !DILexicalBlock(scope: !1840, file: !1, line: 741, column: 2)
!1845 = !DILocation(line: 741, column: 18, scope: !1843)
!1846 = !DILocation(line: 741, column: 22, scope: !1843)
!1847 = !DILocation(line: 741, column: 16, scope: !1843)
!1848 = !DILocation(line: 741, column: 2, scope: !1843)
!1849 = !DILocalVariable(name: "folder", scope: !1850, file: !1, line: 742, type: !301)
!1850 = distinct !DILexicalBlock(scope: !1844, file: !1, line: 741, column: 41)
!1851 = !DILocation(line: 742, column: 20, scope: !1850)
!1852 = !DILocation(line: 742, column: 48, scope: !1850)
!1853 = !DILocation(line: 742, column: 31, scope: !1850)
!1854 = !DILocation(line: 742, column: 35, scope: !1850)
!1855 = !DILocation(line: 744, column: 23, scope: !1850)
!1856 = !DILocation(line: 744, column: 25, scope: !1850)
!1857 = !DILocation(line: 744, column: 7, scope: !1850)
!1858 = !DILocation(line: 743, column: 3, scope: !1850)
!1859 = !DILocation(line: 743, column: 11, scope: !1850)
!1860 = !DILocation(line: 743, column: 32, scope: !1850)
!1861 = !DILocation(line: 745, column: 42, scope: !1850)
!1862 = !DILocation(line: 745, column: 43, scope: !1850)
!1863 = !DILocation(line: 745, column: 26, scope: !1850)
!1864 = !DILocation(line: 745, column: 3, scope: !1850)
!1865 = !DILocation(line: 745, column: 11, scope: !1850)
!1866 = !DILocation(line: 745, column: 24, scope: !1850)
!1867 = !DILocation(line: 747, column: 23, scope: !1850)
!1868 = !DILocation(line: 747, column: 24, scope: !1850)
!1869 = !DILocation(line: 747, column: 7, scope: !1850)
!1870 = !DILocation(line: 747, column: 48, scope: !1850)
!1871 = !DILocation(line: 746, column: 3, scope: !1850)
!1872 = !DILocation(line: 746, column: 11, scope: !1850)
!1873 = !DILocation(line: 746, column: 20, scope: !1850)
!1874 = !DILocation(line: 749, column: 23, scope: !1850)
!1875 = !DILocation(line: 749, column: 24, scope: !1850)
!1876 = !DILocation(line: 749, column: 7, scope: !1850)
!1877 = !DILocation(line: 749, column: 48, scope: !1850)
!1878 = !DILocation(line: 748, column: 3, scope: !1850)
!1879 = !DILocation(line: 748, column: 11, scope: !1850)
!1880 = !DILocation(line: 748, column: 20, scope: !1850)
!1881 = !DILocation(line: 751, column: 7, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 751, column: 7)
!1883 = !DILocation(line: 751, column: 15, scope: !1882)
!1884 = !DILocation(line: 751, column: 24, scope: !1882)
!1885 = !DILocation(line: 751, column: 7, scope: !1850)
!1886 = !DILocation(line: 753, column: 40, scope: !1882)
!1887 = !DILocation(line: 753, column: 48, scope: !1882)
!1888 = !DILocation(line: 753, column: 23, scope: !1882)
!1889 = !DILocation(line: 753, column: 4, scope: !1882)
!1890 = !DILocation(line: 753, column: 12, scope: !1882)
!1891 = !DILocation(line: 753, column: 21, scope: !1882)
!1892 = !DILocation(line: 755, column: 4, scope: !1882)
!1893 = !DILocation(line: 755, column: 12, scope: !1882)
!1894 = !DILocation(line: 755, column: 21, scope: !1882)
!1895 = !DILocation(line: 756, column: 5, scope: !1850)
!1896 = !DILocation(line: 757, column: 8, scope: !1850)
!1897 = !DILocation(line: 758, column: 7, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 758, column: 7)
!1899 = !DILocation(line: 758, column: 11, scope: !1898)
!1900 = !DILocation(line: 758, column: 17, scope: !1898)
!1901 = !DILocation(line: 758, column: 7, scope: !1850)
!1902 = !DILocation(line: 759, column: 9, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 758, column: 36)
!1904 = !DILocation(line: 759, column: 13, scope: !1903)
!1905 = !DILocation(line: 759, column: 6, scope: !1903)
!1906 = !DILocation(line: 760, column: 12, scope: !1903)
!1907 = !DILocation(line: 760, column: 16, scope: !1903)
!1908 = !DILocation(line: 760, column: 9, scope: !1903)
!1909 = !DILocation(line: 761, column: 3, scope: !1903)
!1910 = !DILocation(line: 765, column: 7, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1850, file: !1, line: 765, column: 7)
!1912 = !DILocation(line: 765, column: 19, scope: !1911)
!1913 = !DILocation(line: 765, column: 27, scope: !1911)
!1914 = !DILocation(line: 765, column: 16, scope: !1911)
!1915 = !DILocation(line: 765, column: 7, scope: !1850)
!1916 = !DILocation(line: 766, column: 4, scope: !1911)
!1917 = !DILocation(line: 767, column: 14, scope: !1850)
!1918 = !DILocation(line: 767, column: 22, scope: !1850)
!1919 = !DILocation(line: 767, column: 12, scope: !1850)
!1920 = !DILocation(line: 771, column: 3, scope: !1850)
!1921 = !DILocation(line: 771, column: 11, scope: !1850)
!1922 = !DILocation(line: 771, column: 27, scope: !1850)
!1923 = !DILocation(line: 772, column: 2, scope: !1850)
!1924 = !DILocation(line: 741, column: 37, scope: !1925)
!1925 = !DILexicalBlockFile(scope: !1844, file: !1, discriminator: 2)
!1926 = !DILocation(line: 741, column: 2, scope: !1925)
!1927 = !DILocation(line: 773, column: 25, scope: !522)
!1928 = !DILocation(line: 773, column: 28, scope: !522)
!1929 = !DILocation(line: 773, column: 2, scope: !522)
!1930 = !DILocation(line: 774, column: 21, scope: !522)
!1931 = !DILocation(line: 774, column: 2, scope: !522)
!1932 = !DILocation(line: 774, column: 7, scope: !522)
!1933 = !DILocation(line: 774, column: 18, scope: !522)
!1934 = !DILocation(line: 780, column: 18, scope: !522)
!1935 = !DILocation(line: 780, column: 22, scope: !522)
!1936 = !DILocation(line: 780, column: 9, scope: !522)
!1937 = !DILocation(line: 780, column: 37, scope: !522)
!1938 = !DILocation(line: 780, column: 42, scope: !522)
!1939 = !DILocation(line: 780, column: 35, scope: !522)
!1940 = !DILocation(line: 780, column: 7, scope: !522)
!1941 = !DILocation(line: 781, column: 6, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !522, file: !1, line: 781, column: 6)
!1943 = !DILocation(line: 781, column: 11, scope: !1942)
!1944 = !DILocation(line: 781, column: 6, scope: !522)
!1945 = !DILocation(line: 782, column: 22, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1942, file: !1, line: 781, column: 17)
!1947 = !DILocation(line: 782, column: 25, scope: !1946)
!1948 = !DILocation(line: 784, column: 17, scope: !1946)
!1949 = !DILocation(line: 784, column: 21, scope: !1946)
!1950 = !DILocation(line: 784, column: 7, scope: !1946)
!1951 = !DILocation(line: 784, column: 45, scope: !1946)
!1952 = !DILocation(line: 784, column: 50, scope: !1946)
!1953 = !DILocation(line: 782, column: 3, scope: !1946)
!1954 = !DILocation(line: 785, column: 3, scope: !1946)
!1955 = !DILocation(line: 787, column: 6, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !522, file: !1, line: 787, column: 6)
!1957 = !DILocation(line: 787, column: 6, scope: !522)
!1958 = !DILocation(line: 788, column: 26, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1956, file: !1, line: 787, column: 12)
!1960 = !DILocation(line: 788, column: 29, scope: !1959)
!1961 = !DILocation(line: 788, column: 3, scope: !1959)
!1962 = !DILocation(line: 789, column: 22, scope: !1959)
!1963 = !DILocation(line: 789, column: 3, scope: !1959)
!1964 = !DILocation(line: 789, column: 8, scope: !1959)
!1965 = !DILocation(line: 789, column: 19, scope: !1959)
!1966 = !DILocation(line: 790, column: 2, scope: !1959)
!1967 = !DILocation(line: 793, column: 6, scope: !522)
!1968 = !DILocation(line: 793, column: 10, scope: !522)
!1969 = !DILocation(line: 792, column: 36, scope: !522)
!1970 = !DILocation(line: 792, column: 19, scope: !522)
!1971 = !DILocation(line: 792, column: 2, scope: !522)
!1972 = !DILocation(line: 792, column: 6, scope: !522)
!1973 = !DILocation(line: 792, column: 17, scope: !522)
!1974 = !DILocation(line: 794, column: 6, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !522, file: !1, line: 794, column: 6)
!1976 = !DILocation(line: 794, column: 10, scope: !1975)
!1977 = !DILocation(line: 794, column: 21, scope: !1975)
!1978 = !DILocation(line: 794, column: 6, scope: !522)
!1979 = !DILocation(line: 795, column: 3, scope: !1975)
!1980 = !DILocation(line: 797, column: 14, scope: !522)
!1981 = !DILocation(line: 798, column: 9, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !522, file: !1, line: 798, column: 2)
!1983 = !DILocation(line: 798, column: 7, scope: !1982)
!1984 = !DILocation(line: 798, column: 14, scope: !1985)
!1985 = !DILexicalBlockFile(scope: !1986, file: !1, discriminator: 1)
!1986 = distinct !DILexicalBlock(scope: !1982, file: !1, line: 798, column: 2)
!1987 = !DILocation(line: 798, column: 18, scope: !1985)
!1988 = !DILocation(line: 798, column: 22, scope: !1985)
!1989 = !DILocation(line: 798, column: 16, scope: !1985)
!1990 = !DILocation(line: 798, column: 2, scope: !1985)
!1991 = !DILocalVariable(name: "file", scope: !1992, file: !1, line: 799, type: !337)
!1992 = distinct !DILexicalBlock(scope: !1986, file: !1, line: 798, column: 39)
!1993 = !DILocation(line: 799, column: 18, scope: !1992)
!1994 = !DILocation(line: 799, column: 42, scope: !1992)
!1995 = !DILocation(line: 799, column: 27, scope: !1992)
!1996 = !DILocation(line: 799, column: 31, scope: !1992)
!1997 = !DILocalVariable(name: "avail", scope: !1992, file: !1, line: 800, type: !38)
!1998 = !DILocation(line: 800, column: 11, scope: !1992)
!1999 = !DILocation(line: 802, column: 33, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 802, column: 7)
!2001 = !DILocation(line: 802, column: 12, scope: !2000)
!2002 = !DILocation(line: 802, column: 10, scope: !2000)
!2003 = !DILocation(line: 802, column: 47, scope: !2000)
!2004 = !DILocation(line: 802, column: 7, scope: !1992)
!2005 = !DILocation(line: 803, column: 28, scope: !2000)
!2006 = !DILocation(line: 803, column: 12, scope: !2000)
!2007 = !DILocation(line: 803, column: 4, scope: !2000)
!2008 = !DILocation(line: 804, column: 45, scope: !1992)
!2009 = !DILocation(line: 804, column: 47, scope: !1992)
!2010 = !DILocation(line: 804, column: 29, scope: !1992)
!2011 = !DILocation(line: 804, column: 3, scope: !1992)
!2012 = !DILocation(line: 804, column: 9, scope: !1992)
!2013 = !DILocation(line: 804, column: 27, scope: !1992)
!2014 = !DILocation(line: 805, column: 34, scope: !1992)
!2015 = !DILocation(line: 805, column: 36, scope: !1992)
!2016 = !DILocation(line: 805, column: 18, scope: !1992)
!2017 = !DILocation(line: 805, column: 3, scope: !1992)
!2018 = !DILocation(line: 805, column: 9, scope: !1992)
!2019 = !DILocation(line: 805, column: 16, scope: !1992)
!2020 = !DILocation(line: 806, column: 34, scope: !1992)
!2021 = !DILocation(line: 806, column: 36, scope: !1992)
!2022 = !DILocation(line: 806, column: 18, scope: !1992)
!2023 = !DILocation(line: 806, column: 3, scope: !1992)
!2024 = !DILocation(line: 806, column: 9, scope: !1992)
!2025 = !DILocation(line: 806, column: 16, scope: !1992)
!2026 = !DILocation(line: 807, column: 30, scope: !1992)
!2027 = !DILocation(line: 807, column: 32, scope: !1992)
!2028 = !DILocation(line: 807, column: 17, scope: !1992)
!2029 = !DILocation(line: 807, column: 3, scope: !1992)
!2030 = !DILocation(line: 807, column: 9, scope: !1992)
!2031 = !DILocation(line: 807, column: 15, scope: !1992)
!2032 = !DILocation(line: 808, column: 41, scope: !1992)
!2033 = !DILocation(line: 808, column: 43, scope: !1992)
!2034 = !DILocation(line: 808, column: 25, scope: !1992)
!2035 = !DILocation(line: 808, column: 16, scope: !1992)
!2036 = !DILocation(line: 808, column: 3, scope: !1992)
!2037 = !DILocation(line: 808, column: 9, scope: !1992)
!2038 = !DILocation(line: 808, column: 14, scope: !1992)
!2039 = !DILocation(line: 809, column: 26, scope: !1992)
!2040 = !DILocation(line: 809, column: 3, scope: !1992)
!2041 = !DILocation(line: 811, column: 3, scope: !1992)
!2042 = !DILocation(line: 811, column: 8, scope: !1992)
!2043 = !DILocation(line: 811, column: 19, scope: !1992)
!2044 = !DILocation(line: 812, column: 37, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 812, column: 7)
!2046 = !DILocation(line: 812, column: 12, scope: !2045)
!2047 = !DILocation(line: 812, column: 10, scope: !2045)
!2048 = !DILocation(line: 812, column: 54, scope: !2045)
!2049 = !DILocation(line: 812, column: 7, scope: !1992)
!2050 = !DILocation(line: 813, column: 28, scope: !2045)
!2051 = !DILocation(line: 813, column: 12, scope: !2045)
!2052 = !DILocation(line: 813, column: 4, scope: !2045)
!2053 = !DILocation(line: 814, column: 26, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 814, column: 7)
!2055 = !DILocation(line: 814, column: 29, scope: !2054)
!2056 = !DILocation(line: 814, column: 34, scope: !2054)
!2057 = !DILocation(line: 814, column: 14, scope: !2054)
!2058 = !DILocation(line: 814, column: 12, scope: !2054)
!2059 = !DILocation(line: 814, column: 39, scope: !2054)
!2060 = !DILocation(line: 814, column: 7, scope: !1992)
!2061 = !DILocation(line: 815, column: 4, scope: !2054)
!2062 = !DILocation(line: 818, column: 3, scope: !1992)
!2063 = !DILocation(line: 818, column: 3, scope: !2064)
!2064 = !DILexicalBlockFile(scope: !2065, file: !1, discriminator: 1)
!2065 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 818, column: 3)
!2066 = !DILocation(line: 819, column: 3, scope: !1992)
!2067 = !DILocation(line: 820, column: 26, scope: !1992)
!2068 = !DILocation(line: 820, column: 29, scope: !1992)
!2069 = !DILocation(line: 820, column: 33, scope: !1992)
!2070 = !DILocation(line: 820, column: 3, scope: !1992)
!2071 = !DILocation(line: 821, column: 22, scope: !1992)
!2072 = !DILocation(line: 821, column: 26, scope: !1992)
!2073 = !DILocation(line: 821, column: 3, scope: !1992)
!2074 = !DILocation(line: 821, column: 8, scope: !1992)
!2075 = !DILocation(line: 821, column: 19, scope: !1992)
!2076 = !DILocation(line: 826, column: 7, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 826, column: 7)
!2078 = !DILocation(line: 826, column: 13, scope: !2077)
!2079 = !DILocation(line: 826, column: 31, scope: !2077)
!2080 = !DILocation(line: 826, column: 7, scope: !1992)
!2081 = !DILocation(line: 827, column: 4, scope: !2077)
!2082 = !DILocation(line: 828, column: 16, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 828, column: 7)
!2084 = !DILocation(line: 828, column: 22, scope: !2083)
!2085 = !DILocation(line: 828, column: 7, scope: !2083)
!2086 = !DILocation(line: 828, column: 40, scope: !2083)
!2087 = !DILocation(line: 828, column: 46, scope: !2083)
!2088 = !DILocation(line: 828, column: 31, scope: !2083)
!2089 = !DILocation(line: 828, column: 29, scope: !2083)
!2090 = !DILocation(line: 829, column: 7, scope: !2083)
!2091 = !DILocation(line: 828, column: 7, scope: !1992)
!2092 = !DILocation(line: 830, column: 4, scope: !2083)
!2093 = !DILocation(line: 831, column: 11, scope: !1992)
!2094 = !DILocation(line: 831, column: 17, scope: !1992)
!2095 = !DILocation(line: 831, column: 3, scope: !1992)
!2096 = !DILocation(line: 834, column: 8, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 834, column: 8)
!2098 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 831, column: 25)
!2099 = !DILocation(line: 834, column: 13, scope: !2097)
!2100 = !DILocation(line: 834, column: 17, scope: !2097)
!2101 = !DILocation(line: 834, column: 28, scope: !2097)
!2102 = !DILocation(line: 834, column: 10, scope: !2097)
!2103 = !DILocation(line: 834, column: 8, scope: !2098)
!2104 = !DILocation(line: 835, column: 5, scope: !2097)
!2105 = !DILocation(line: 836, column: 17, scope: !2098)
!2106 = !DILocation(line: 836, column: 21, scope: !2098)
!2107 = !DILocation(line: 836, column: 34, scope: !2098)
!2108 = !DILocation(line: 836, column: 15, scope: !2098)
!2109 = !DILocation(line: 837, column: 4, scope: !2098)
!2110 = !DILocation(line: 840, column: 8, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 840, column: 8)
!2112 = !DILocation(line: 840, column: 12, scope: !2111)
!2113 = !DILocation(line: 840, column: 23, scope: !2111)
!2114 = !DILocation(line: 840, column: 8, scope: !2098)
!2115 = !DILocation(line: 841, column: 5, scope: !2111)
!2116 = !DILocation(line: 840, column: 26, scope: !2117)
!2117 = !DILexicalBlockFile(scope: !2111, file: !1, discriminator: 1)
!2118 = !DILocation(line: 845, column: 8, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 845, column: 8)
!2120 = !DILocation(line: 845, column: 10, scope: !2119)
!2121 = !DILocation(line: 845, column: 8, scope: !2098)
!2122 = !DILocation(line: 846, column: 5, scope: !2119)
!2123 = !DILocation(line: 847, column: 29, scope: !2098)
!2124 = !DILocation(line: 847, column: 16, scope: !2098)
!2125 = !DILocation(line: 848, column: 15, scope: !2098)
!2126 = !DILocation(line: 848, column: 21, scope: !2098)
!2127 = !DILocation(line: 848, column: 13, scope: !2098)
!2128 = !DILocation(line: 849, column: 4, scope: !2098)
!2129 = !DILocation(line: 851, column: 8, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 851, column: 8)
!2131 = !DILocation(line: 851, column: 14, scope: !2130)
!2132 = !DILocation(line: 851, column: 24, scope: !2130)
!2133 = !DILocation(line: 851, column: 28, scope: !2130)
!2134 = !DILocation(line: 851, column: 21, scope: !2130)
!2135 = !DILocation(line: 851, column: 8, scope: !2098)
!2136 = !DILocation(line: 852, column: 5, scope: !2130)
!2137 = !DILocation(line: 853, column: 17, scope: !2098)
!2138 = !DILocation(line: 853, column: 23, scope: !2098)
!2139 = !DILocation(line: 853, column: 15, scope: !2098)
!2140 = !DILocation(line: 854, column: 4, scope: !2098)
!2141 = !DILocation(line: 857, column: 7, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 857, column: 7)
!2143 = !DILocation(line: 857, column: 20, scope: !2142)
!2144 = !DILocation(line: 857, column: 18, scope: !2142)
!2145 = !DILocation(line: 857, column: 7, scope: !1992)
!2146 = !DILocation(line: 858, column: 4, scope: !2142)
!2147 = !DILocation(line: 859, column: 7, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 859, column: 7)
!2149 = !DILocation(line: 859, column: 21, scope: !2148)
!2150 = !DILocation(line: 859, column: 18, scope: !2148)
!2151 = !DILocation(line: 859, column: 7, scope: !1992)
!2152 = !DILocation(line: 860, column: 13, scope: !2148)
!2153 = !DILocation(line: 860, column: 4, scope: !2148)
!2154 = !DILocation(line: 861, column: 17, scope: !1992)
!2155 = !DILocation(line: 861, column: 15, scope: !1992)
!2156 = !DILocation(line: 865, column: 7, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 865, column: 7)
!2158 = !DILocation(line: 865, column: 19, scope: !2157)
!2159 = !DILocation(line: 865, column: 25, scope: !2157)
!2160 = !DILocation(line: 865, column: 16, scope: !2157)
!2161 = !DILocation(line: 865, column: 7, scope: !1992)
!2162 = !DILocation(line: 866, column: 4, scope: !2157)
!2163 = !DILocation(line: 867, column: 15, scope: !1992)
!2164 = !DILocation(line: 867, column: 21, scope: !1992)
!2165 = !DILocation(line: 867, column: 12, scope: !1992)
!2166 = !DILocation(line: 870, column: 7, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !1992, file: !1, line: 870, column: 7)
!2168 = !DILocation(line: 870, column: 13, scope: !2167)
!2169 = !DILocation(line: 870, column: 31, scope: !2167)
!2170 = !DILocation(line: 870, column: 35, scope: !2167)
!2171 = !DILocation(line: 871, column: 24, scope: !2167)
!2172 = !DILocation(line: 871, column: 7, scope: !2167)
!2173 = !DILocation(line: 871, column: 11, scope: !2167)
!2174 = !DILocation(line: 871, column: 36, scope: !2167)
!2175 = !DILocation(line: 871, column: 49, scope: !2167)
!2176 = !DILocation(line: 870, column: 7, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !1992, file: !1, discriminator: 1)
!2178 = !DILocation(line: 872, column: 4, scope: !2167)
!2179 = !DILocation(line: 873, column: 2, scope: !1992)
!2180 = !DILocation(line: 798, column: 35, scope: !2181)
!2181 = !DILexicalBlockFile(scope: !1986, file: !1, discriminator: 2)
!2182 = !DILocation(line: 798, column: 2, scope: !2181)
!2183 = !DILocation(line: 875, column: 6, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !522, file: !1, line: 875, column: 6)
!2185 = !DILocation(line: 875, column: 10, scope: !2184)
!2186 = !DILocation(line: 875, column: 18, scope: !2184)
!2187 = !DILocation(line: 875, column: 23, scope: !2184)
!2188 = !DILocation(line: 875, column: 26, scope: !2189)
!2189 = !DILexicalBlockFile(scope: !2184, file: !1, discriminator: 1)
!2190 = !DILocation(line: 875, column: 30, scope: !2189)
!2191 = !DILocation(line: 875, column: 36, scope: !2189)
!2192 = !DILocation(line: 875, column: 6, scope: !2189)
!2193 = !DILocation(line: 876, column: 22, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 875, column: 69)
!2195 = !DILocation(line: 876, column: 25, scope: !2194)
!2196 = !DILocation(line: 876, column: 3, scope: !2194)
!2197 = !DILocation(line: 878, column: 3, scope: !2194)
!2198 = !DILocation(line: 880, column: 2, scope: !522)
!2199 = !DILocation(line: 882, column: 21, scope: !522)
!2200 = !DILocation(line: 882, column: 24, scope: !522)
!2201 = !DILocation(line: 882, column: 2, scope: !522)
!2202 = !DILocation(line: 884, column: 2, scope: !522)
!2203 = !DILocation(line: 886, column: 21, scope: !522)
!2204 = !DILocation(line: 886, column: 24, scope: !522)
!2205 = !DILocation(line: 886, column: 2, scope: !522)
!2206 = !DILocation(line: 888, column: 2, scope: !522)
!2207 = !DILocation(line: 889, column: 1, scope: !522)
!2208 = !DILocalVariable(name: "fn", arg: 1, scope: !542, file: !1, line: 576, type: !545)
!2209 = !DILocation(line: 576, column: 53, scope: !542)
!2210 = !DILocalVariable(name: "attr", arg: 2, scope: !542, file: !1, line: 576, type: !326)
!2211 = !DILocation(line: 576, column: 71, scope: !542)
!2212 = !DILocalVariable(name: "i", scope: !542, file: !1, line: 578, type: !45)
!2213 = !DILocation(line: 578, column: 9, scope: !542)
!2214 = !DILocalVariable(name: "mb", scope: !542, file: !1, line: 579, type: !23)
!2215 = !DILocation(line: 579, column: 6, scope: !542)
!2216 = !DILocation(line: 582, column: 5, scope: !542)
!2217 = !DILocation(line: 583, column: 9, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !542, file: !1, line: 583, column: 2)
!2219 = !DILocation(line: 583, column: 7, scope: !2218)
!2220 = !DILocation(line: 583, column: 14, scope: !2221)
!2221 = !DILexicalBlockFile(scope: !2222, file: !1, discriminator: 1)
!2222 = distinct !DILexicalBlock(scope: !2218, file: !1, line: 583, column: 2)
!2223 = !DILocation(line: 583, column: 18, scope: !2221)
!2224 = !DILocation(line: 583, column: 16, scope: !2221)
!2225 = !DILocation(line: 583, column: 2, scope: !2221)
!2226 = !DILocation(line: 584, column: 13, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 584, column: 7)
!2228 = distinct !DILexicalBlock(scope: !2222, file: !1, line: 583, column: 43)
!2229 = !DILocation(line: 584, column: 7, scope: !2227)
!2230 = !DILocation(line: 584, column: 11, scope: !2227)
!2231 = !DILocation(line: 584, column: 16, scope: !2227)
!2232 = !DILocation(line: 584, column: 7, scope: !2228)
!2233 = !DILocation(line: 585, column: 8, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !1, line: 585, column: 8)
!2235 = distinct !DILexicalBlock(scope: !2227, file: !1, line: 584, column: 25)
!2236 = !DILocation(line: 585, column: 8, scope: !2235)
!2237 = !DILocation(line: 588, column: 5, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2234, file: !1, line: 585, column: 12)
!2239 = !DILocation(line: 590, column: 10, scope: !2235)
!2240 = !DILocation(line: 590, column: 4, scope: !2235)
!2241 = !DILocation(line: 590, column: 8, scope: !2235)
!2242 = !DILocation(line: 590, column: 13, scope: !2235)
!2243 = !DILocation(line: 591, column: 7, scope: !2235)
!2244 = !DILocation(line: 592, column: 3, scope: !2235)
!2245 = !DILocation(line: 592, column: 21, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !2247, file: !1, discriminator: 1)
!2247 = distinct !DILexicalBlock(scope: !2227, file: !1, line: 592, column: 14)
!2248 = !DILocation(line: 592, column: 15, scope: !2246)
!2249 = !DILocation(line: 592, column: 19, scope: !2246)
!2250 = !DILocation(line: 592, column: 24, scope: !2246)
!2251 = !DILocation(line: 592, column: 32, scope: !2246)
!2252 = !DILocation(line: 592, column: 37, scope: !2253)
!2253 = !DILexicalBlockFile(scope: !2247, file: !1, discriminator: 2)
!2254 = !DILocation(line: 592, column: 42, scope: !2253)
!2255 = !DILocation(line: 592, column: 14, scope: !2253)
!2256 = !DILocation(line: 593, column: 7, scope: !2247)
!2257 = !DILocation(line: 593, column: 4, scope: !2247)
!2258 = !DILocation(line: 595, column: 7, scope: !2247)
!2259 = !DILocation(line: 596, column: 2, scope: !2228)
!2260 = !DILocation(line: 583, column: 39, scope: !2261)
!2261 = !DILexicalBlockFile(scope: !2222, file: !1, discriminator: 2)
!2262 = !DILocation(line: 583, column: 2, scope: !2261)
!2263 = !DILocation(line: 597, column: 6, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !542, file: !1, line: 597, column: 6)
!2265 = !DILocation(line: 597, column: 11, scope: !2264)
!2266 = !DILocation(line: 597, column: 8, scope: !2264)
!2267 = !DILocation(line: 597, column: 6, scope: !542)
!2268 = !DILocation(line: 598, column: 3, scope: !2264)
!2269 = !DILocation(line: 599, column: 2, scope: !542)
!2270 = !DILocation(line: 600, column: 1, scope: !542)
!2271 = !DILocalVariable(name: "cab", arg: 1, scope: !546, file: !1, line: 606, type: !292)
!2272 = !DILocation(line: 606, column: 42, scope: !546)
!2273 = !DILocalVariable(name: "entry", arg: 2, scope: !546, file: !1, line: 606, type: !30)
!2274 = !DILocation(line: 606, column: 69, scope: !546)
!2275 = !DILocalVariable(name: "wp", scope: !546, file: !1, line: 608, type: !2276)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64, align: 64)
!2277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!2278 = !DILocation(line: 608, column: 17, scope: !546)
!2279 = !DILocalVariable(name: "i", scope: !546, file: !1, line: 609, type: !45)
!2280 = !DILocation(line: 609, column: 9, scope: !546)
!2281 = !DILocation(line: 612, column: 37, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !546, file: !1, line: 612, column: 6)
!2283 = !DILocation(line: 612, column: 12, scope: !2282)
!2284 = !DILocation(line: 612, column: 10, scope: !2282)
!2285 = !DILocation(line: 612, column: 45, scope: !2282)
!2286 = !DILocation(line: 612, column: 6, scope: !546)
!2287 = !DILocation(line: 613, column: 3, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2282, file: !1, line: 612, column: 54)
!2289 = !DILocation(line: 613, column: 3, scope: !2290)
!2290 = !DILexicalBlockFile(scope: !2288, file: !1, discriminator: 1)
!2291 = !DILocation(line: 613, column: 3, scope: !2292)
!2292 = !DILexicalBlockFile(scope: !2288, file: !1, discriminator: 2)
!2293 = !DILocation(line: 613, column: 3, scope: !2294)
!2294 = !DILexicalBlockFile(scope: !2288, file: !1, discriminator: 3)
!2295 = !DILocation(line: 614, column: 10, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2288, file: !1, line: 614, column: 3)
!2297 = !DILocation(line: 614, column: 8, scope: !2296)
!2298 = !DILocation(line: 614, column: 15, scope: !2299)
!2299 = !DILexicalBlockFile(scope: !2300, file: !1, discriminator: 1)
!2300 = distinct !DILexicalBlock(scope: !2296, file: !1, line: 614, column: 3)
!2301 = !DILocation(line: 614, column: 19, scope: !2299)
!2302 = !DILocation(line: 614, column: 17, scope: !2299)
!2303 = !DILocation(line: 614, column: 3, scope: !2299)
!2304 = !DILocation(line: 615, column: 18, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2306, file: !1, line: 615, column: 8)
!2306 = distinct !DILexicalBlock(scope: !2300, file: !1, line: 614, column: 52)
!2307 = !DILocation(line: 615, column: 8, scope: !2305)
!2308 = !DILocation(line: 615, column: 13, scope: !2305)
!2309 = !DILocation(line: 615, column: 16, scope: !2305)
!2310 = !DILocation(line: 615, column: 21, scope: !2305)
!2311 = !DILocation(line: 615, column: 8, scope: !2306)
!2312 = !DILocation(line: 616, column: 15, scope: !2305)
!2313 = !DILocation(line: 616, column: 5, scope: !2305)
!2314 = !DILocation(line: 616, column: 10, scope: !2305)
!2315 = !DILocation(line: 616, column: 13, scope: !2305)
!2316 = !DILocation(line: 616, column: 18, scope: !2305)
!2317 = !DILocation(line: 617, column: 3, scope: !2306)
!2318 = !DILocation(line: 614, column: 48, scope: !2319)
!2319 = !DILexicalBlockFile(scope: !2300, file: !1, discriminator: 2)
!2320 = !DILocation(line: 614, column: 3, scope: !2319)
!2321 = !DILocation(line: 618, column: 33, scope: !2288)
!2322 = !DILocation(line: 618, column: 40, scope: !2288)
!2323 = !DILocation(line: 618, column: 45, scope: !2288)
!2324 = !DILocation(line: 618, column: 48, scope: !2288)
!2325 = !DILocation(line: 618, column: 3, scope: !2288)
!2326 = !DILocation(line: 619, column: 2, scope: !2288)
!2327 = !DILocation(line: 620, column: 1, scope: !546)
!2328 = !DILocalVariable(name: "a", arg: 1, scope: !523, file: !1, line: 538, type: !4)
!2329 = !DILocation(line: 538, column: 38, scope: !523)
!2330 = !DILocation(line: 540, column: 21, scope: !523)
!2331 = !DILocation(line: 540, column: 24, scope: !523)
!2332 = !DILocation(line: 540, column: 2, scope: !523)
!2333 = !DILocation(line: 542, column: 2, scope: !523)
!2334 = !DILocalVariable(name: "a", arg: 1, scope: !524, file: !1, line: 496, type: !4)
!2335 = !DILocation(line: 496, column: 35, scope: !524)
!2336 = !DILocalVariable(name: "p", scope: !524, file: !1, line: 498, type: !80)
!2337 = !DILocation(line: 498, column: 14, scope: !524)
!2338 = !DILocalVariable(name: "q", scope: !524, file: !1, line: 498, type: !80)
!2339 = !DILocation(line: 498, column: 18, scope: !524)
!2340 = !DILocalVariable(name: "skip", scope: !524, file: !1, line: 499, type: !45)
!2341 = !DILocation(line: 499, column: 9, scope: !524)
!2342 = !DILocalVariable(name: "bytes", scope: !524, file: !1, line: 500, type: !38)
!2343 = !DILocation(line: 500, column: 10, scope: !524)
!2344 = !DILocalVariable(name: "window", scope: !524, file: !1, line: 500, type: !38)
!2345 = !DILocation(line: 500, column: 17, scope: !524)
!2346 = !DILocation(line: 502, column: 9, scope: !524)
!2347 = !DILocation(line: 503, column: 2, scope: !524)
!2348 = !DILocalVariable(name: "h", scope: !2349, file: !1, line: 504, type: !80)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !1, line: 503, column: 11)
!2350 = distinct !DILexicalBlock(scope: !2351, file: !1, line: 503, column: 2)
!2351 = distinct !DILexicalBlock(scope: !524, file: !1, line: 503, column: 2)
!2352 = !DILocation(line: 504, column: 15, scope: !2349)
!2353 = !DILocation(line: 504, column: 40, scope: !2349)
!2354 = !DILocation(line: 504, column: 43, scope: !2349)
!2355 = !DILocation(line: 504, column: 19, scope: !2349)
!2356 = !DILocation(line: 505, column: 7, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2349, file: !1, line: 505, column: 7)
!2358 = !DILocation(line: 505, column: 9, scope: !2357)
!2359 = !DILocation(line: 505, column: 7, scope: !2349)
!2360 = !DILocation(line: 507, column: 11, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2357, file: !1, line: 505, column: 18)
!2362 = !DILocation(line: 508, column: 8, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 508, column: 8)
!2364 = !DILocation(line: 508, column: 15, scope: !2363)
!2365 = !DILocation(line: 508, column: 8, scope: !2361)
!2366 = !DILocation(line: 509, column: 24, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2363, file: !1, line: 508, column: 22)
!2368 = !DILocation(line: 509, column: 27, scope: !2367)
!2369 = !DILocation(line: 509, column: 5, scope: !2367)
!2370 = !DILocation(line: 512, column: 5, scope: !2367)
!2371 = !DILocation(line: 514, column: 4, scope: !2361)
!2372 = !DILocation(line: 516, column: 7, scope: !2349)
!2373 = !DILocation(line: 516, column: 5, scope: !2349)
!2374 = !DILocation(line: 517, column: 7, scope: !2349)
!2375 = !DILocation(line: 517, column: 11, scope: !2349)
!2376 = !DILocation(line: 517, column: 9, scope: !2349)
!2377 = !DILocation(line: 517, column: 5, scope: !2349)
!2378 = !DILocation(line: 523, column: 3, scope: !2349)
!2379 = !DILocation(line: 523, column: 10, scope: !2380)
!2380 = !DILexicalBlockFile(scope: !2349, file: !1, discriminator: 1)
!2381 = !DILocation(line: 523, column: 12, scope: !2380)
!2382 = !DILocation(line: 523, column: 18, scope: !2380)
!2383 = !DILocation(line: 523, column: 16, scope: !2380)
!2384 = !DILocation(line: 523, column: 3, scope: !2380)
!2385 = !DILocalVariable(name: "next", scope: !2386, file: !1, line: 524, type: !23)
!2386 = distinct !DILexicalBlock(scope: !2349, file: !1, line: 523, column: 21)
!2387 = !DILocation(line: 524, column: 8, scope: !2386)
!2388 = !DILocation(line: 525, column: 31, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 525, column: 8)
!2390 = !DILocation(line: 525, column: 16, scope: !2389)
!2391 = !DILocation(line: 525, column: 14, scope: !2389)
!2392 = !DILocation(line: 525, column: 35, scope: !2389)
!2393 = !DILocation(line: 525, column: 8, scope: !2386)
!2394 = !DILocation(line: 526, column: 12, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2389, file: !1, line: 525, column: 41)
!2396 = !DILocation(line: 526, column: 16, scope: !2395)
!2397 = !DILocation(line: 526, column: 14, scope: !2395)
!2398 = !DILocation(line: 526, column: 10, scope: !2395)
!2399 = !DILocation(line: 527, column: 28, scope: !2395)
!2400 = !DILocation(line: 527, column: 31, scope: !2395)
!2401 = !DILocation(line: 527, column: 5, scope: !2395)
!2402 = !DILocation(line: 528, column: 5, scope: !2395)
!2403 = !DILocation(line: 530, column: 9, scope: !2386)
!2404 = !DILocation(line: 530, column: 6, scope: !2386)
!2405 = !DILocation(line: 523, column: 3, scope: !2406)
!2406 = !DILexicalBlockFile(scope: !2349, file: !1, discriminator: 2)
!2407 = !DILocation(line: 532, column: 10, scope: !2349)
!2408 = !DILocation(line: 532, column: 14, scope: !2349)
!2409 = !DILocation(line: 532, column: 12, scope: !2349)
!2410 = !DILocation(line: 532, column: 8, scope: !2349)
!2411 = !DILocation(line: 533, column: 26, scope: !2349)
!2412 = !DILocation(line: 533, column: 29, scope: !2349)
!2413 = !DILocation(line: 533, column: 3, scope: !2349)
!2414 = !DILocation(line: 503, column: 2, scope: !2415)
!2415 = !DILexicalBlockFile(scope: !2350, file: !1, discriminator: 1)
!2416 = !DILocation(line: 535, column: 1, scope: !524)
!2417 = !DILocalVariable(name: "pp", arg: 1, scope: !525, file: !526, line: 115, type: !43)
!2418 = !DILocation(line: 115, column: 29, scope: !525)
!2419 = !DILocalVariable(name: "p", scope: !525, file: !526, line: 117, type: !436)
!2420 = !DILocation(line: 117, column: 23, scope: !525)
!2421 = !DILocation(line: 117, column: 50, scope: !525)
!2422 = !DILocalVariable(name: "p3", scope: !525, file: !526, line: 122, type: !13)
!2423 = !DILocation(line: 122, column: 15, scope: !525)
!2424 = !DILocation(line: 122, column: 20, scope: !525)
!2425 = !DILocalVariable(name: "p2", scope: !525, file: !526, line: 123, type: !13)
!2426 = !DILocation(line: 123, column: 15, scope: !525)
!2427 = !DILocation(line: 123, column: 20, scope: !525)
!2428 = !DILocalVariable(name: "p1", scope: !525, file: !526, line: 124, type: !13)
!2429 = !DILocation(line: 124, column: 15, scope: !525)
!2430 = !DILocation(line: 124, column: 20, scope: !525)
!2431 = !DILocalVariable(name: "p0", scope: !525, file: !526, line: 125, type: !13)
!2432 = !DILocation(line: 125, column: 15, scope: !525)
!2433 = !DILocation(line: 125, column: 20, scope: !525)
!2434 = !DILocation(line: 127, column: 11, scope: !525)
!2435 = !DILocation(line: 127, column: 14, scope: !525)
!2436 = !DILocation(line: 127, column: 24, scope: !525)
!2437 = !DILocation(line: 127, column: 27, scope: !525)
!2438 = !DILocation(line: 127, column: 21, scope: !525)
!2439 = !DILocation(line: 127, column: 37, scope: !525)
!2440 = !DILocation(line: 127, column: 40, scope: !525)
!2441 = !DILocation(line: 127, column: 34, scope: !525)
!2442 = !DILocation(line: 127, column: 48, scope: !525)
!2443 = !DILocation(line: 127, column: 46, scope: !525)
!2444 = !DILocation(line: 127, column: 2, scope: !525)
!2445 = !DILocalVariable(name: "pp", arg: 1, scope: !529, file: !526, line: 101, type: !43)
!2446 = !DILocation(line: 101, column: 29, scope: !529)
!2447 = !DILocalVariable(name: "p", scope: !529, file: !526, line: 103, type: !436)
!2448 = !DILocation(line: 103, column: 23, scope: !529)
!2449 = !DILocation(line: 103, column: 50, scope: !529)
!2450 = !DILocalVariable(name: "p1", scope: !529, file: !526, line: 108, type: !13)
!2451 = !DILocation(line: 108, column: 15, scope: !529)
!2452 = !DILocation(line: 108, column: 20, scope: !529)
!2453 = !DILocalVariable(name: "p0", scope: !529, file: !526, line: 109, type: !13)
!2454 = !DILocation(line: 109, column: 15, scope: !529)
!2455 = !DILocation(line: 109, column: 20, scope: !529)
!2456 = !DILocation(line: 111, column: 11, scope: !529)
!2457 = !DILocation(line: 111, column: 14, scope: !529)
!2458 = !DILocation(line: 111, column: 22, scope: !529)
!2459 = !DILocation(line: 111, column: 20, scope: !529)
!2460 = !DILocation(line: 111, column: 9, scope: !529)
!2461 = !DILocation(line: 111, column: 2, scope: !529)
!2462 = !DILocalVariable(name: "p", arg: 1, scope: !532, file: !1, line: 546, type: !436)
!2463 = !DILocation(line: 546, column: 34, scope: !532)
!2464 = !DILocalVariable(name: "maxlen", arg: 2, scope: !532, file: !1, line: 546, type: !45)
!2465 = !DILocation(line: 546, column: 44, scope: !532)
!2466 = !DILocalVariable(name: "i", scope: !532, file: !1, line: 548, type: !45)
!2467 = !DILocation(line: 548, column: 9, scope: !532)
!2468 = !DILocation(line: 550, column: 9, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !532, file: !1, line: 550, column: 2)
!2470 = !DILocation(line: 550, column: 7, scope: !2469)
!2471 = !DILocation(line: 550, column: 14, scope: !2472)
!2472 = !DILexicalBlockFile(scope: !2473, file: !1, discriminator: 1)
!2473 = distinct !DILexicalBlock(scope: !2469, file: !1, line: 550, column: 2)
!2474 = !DILocation(line: 550, column: 19, scope: !2472)
!2475 = !DILocation(line: 550, column: 16, scope: !2472)
!2476 = !DILocation(line: 550, column: 2, scope: !2472)
!2477 = !DILocation(line: 551, column: 9, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2479, file: !1, line: 551, column: 7)
!2479 = distinct !DILexicalBlock(scope: !2473, file: !1, line: 550, column: 32)
!2480 = !DILocation(line: 551, column: 7, scope: !2478)
!2481 = !DILocation(line: 551, column: 12, scope: !2478)
!2482 = !DILocation(line: 551, column: 7, scope: !2479)
!2483 = !DILocation(line: 552, column: 4, scope: !2478)
!2484 = !DILocation(line: 553, column: 2, scope: !2479)
!2485 = !DILocation(line: 550, column: 28, scope: !2486)
!2486 = !DILexicalBlockFile(scope: !2473, file: !1, discriminator: 2)
!2487 = !DILocation(line: 550, column: 2, scope: !2486)
!2488 = !DILocation(line: 554, column: 6, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !532, file: !1, line: 554, column: 6)
!2490 = !DILocation(line: 554, column: 10, scope: !2489)
!2491 = !DILocation(line: 554, column: 8, scope: !2489)
!2492 = !DILocation(line: 554, column: 6, scope: !532)
!2493 = !DILocation(line: 555, column: 3, scope: !2489)
!2494 = !DILocation(line: 556, column: 19, scope: !532)
!2495 = !DILocation(line: 556, column: 2, scope: !532)
!2496 = !DILocation(line: 557, column: 1, scope: !532)
!2497 = !DILocalVariable(name: "p", arg: 1, scope: !535, file: !1, line: 2051, type: !436)
!2498 = !DILocation(line: 2051, column: 35, scope: !535)
!2499 = !DILocalVariable(name: "msTime", scope: !535, file: !1, line: 2053, type: !23)
!2500 = !DILocation(line: 2053, column: 6, scope: !535)
!2501 = !DILocalVariable(name: "msDate", scope: !535, file: !1, line: 2053, type: !23)
!2502 = !DILocation(line: 2053, column: 14, scope: !535)
!2503 = !DILocalVariable(name: "ts", scope: !535, file: !1, line: 2054, type: !2504)
!2504 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !344, line: 133, size: 448, align: 64, elements: !2505)
!2505 = !{!2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2504, file: !344, line: 135, baseType: !23, size: 32, align: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2504, file: !344, line: 136, baseType: !23, size: 32, align: 32, offset: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2504, file: !344, line: 137, baseType: !23, size: 32, align: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2504, file: !344, line: 138, baseType: !23, size: 32, align: 32, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2504, file: !344, line: 139, baseType: !23, size: 32, align: 32, offset: 128)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2504, file: !344, line: 140, baseType: !23, size: 32, align: 32, offset: 160)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2504, file: !344, line: 141, baseType: !23, size: 32, align: 32, offset: 192)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2504, file: !344, line: 142, baseType: !23, size: 32, align: 32, offset: 224)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2504, file: !344, line: 143, baseType: !23, size: 32, align: 32, offset: 256)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2504, file: !344, line: 146, baseType: !42, size: 64, align: 64, offset: 320)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2504, file: !344, line: 147, baseType: !80, size: 64, align: 64, offset: 384)
!2517 = !DILocation(line: 2054, column: 12, scope: !535)
!2518 = !DILocation(line: 2056, column: 27, scope: !535)
!2519 = !DILocation(line: 2056, column: 11, scope: !535)
!2520 = !DILocation(line: 2056, column: 9, scope: !535)
!2521 = !DILocation(line: 2057, column: 27, scope: !535)
!2522 = !DILocation(line: 2057, column: 28, scope: !535)
!2523 = !DILocation(line: 2057, column: 11, scope: !535)
!2524 = !DILocation(line: 2057, column: 9, scope: !535)
!2525 = !DILocation(line: 2059, column: 2, scope: !535)
!2526 = !DILocation(line: 2060, column: 17, scope: !535)
!2527 = !DILocation(line: 2060, column: 24, scope: !535)
!2528 = !DILocation(line: 2060, column: 30, scope: !535)
!2529 = !DILocation(line: 2060, column: 38, scope: !535)
!2530 = !DILocation(line: 2060, column: 5, scope: !535)
!2531 = !DILocation(line: 2060, column: 13, scope: !535)
!2532 = !DILocation(line: 2061, column: 16, scope: !535)
!2533 = !DILocation(line: 2061, column: 23, scope: !535)
!2534 = !DILocation(line: 2061, column: 29, scope: !535)
!2535 = !DILocation(line: 2061, column: 37, scope: !535)
!2536 = !DILocation(line: 2061, column: 5, scope: !535)
!2537 = !DILocation(line: 2061, column: 12, scope: !535)
!2538 = !DILocation(line: 2062, column: 15, scope: !535)
!2539 = !DILocation(line: 2062, column: 22, scope: !535)
!2540 = !DILocation(line: 2062, column: 5, scope: !535)
!2541 = !DILocation(line: 2062, column: 13, scope: !535)
!2542 = !DILocation(line: 2063, column: 16, scope: !535)
!2543 = !DILocation(line: 2063, column: 23, scope: !535)
!2544 = !DILocation(line: 2063, column: 30, scope: !535)
!2545 = !DILocation(line: 2063, column: 5, scope: !535)
!2546 = !DILocation(line: 2063, column: 13, scope: !535)
!2547 = !DILocation(line: 2064, column: 15, scope: !535)
!2548 = !DILocation(line: 2064, column: 22, scope: !535)
!2549 = !DILocation(line: 2064, column: 28, scope: !535)
!2550 = !DILocation(line: 2064, column: 5, scope: !535)
!2551 = !DILocation(line: 2064, column: 12, scope: !535)
!2552 = !DILocation(line: 2065, column: 15, scope: !535)
!2553 = !DILocation(line: 2065, column: 22, scope: !535)
!2554 = !DILocation(line: 2065, column: 28, scope: !535)
!2555 = !DILocation(line: 2065, column: 5, scope: !535)
!2556 = !DILocation(line: 2065, column: 12, scope: !535)
!2557 = !DILocation(line: 2066, column: 5, scope: !535)
!2558 = !DILocation(line: 2066, column: 14, scope: !535)
!2559 = !DILocation(line: 2067, column: 10, scope: !535)
!2560 = !DILocation(line: 2067, column: 2, scope: !535)
!2561 = !DILocalVariable(name: "a", arg: 1, scope: !538, file: !1, line: 561, type: !4)
!2562 = !DILocation(line: 561, column: 47, scope: !538)
!2563 = !DILocalVariable(name: "min", arg: 2, scope: !538, file: !1, line: 561, type: !45)
!2564 = !DILocation(line: 561, column: 57, scope: !538)
!2565 = !DILocalVariable(name: "avail", arg: 3, scope: !538, file: !1, line: 561, type: !541)
!2566 = !DILocation(line: 561, column: 71, scope: !538)
!2567 = !DILocalVariable(name: "p", scope: !538, file: !1, line: 563, type: !43)
!2568 = !DILocation(line: 563, column: 14, scope: !538)
!2569 = !DILocation(line: 565, column: 2, scope: !538)
!2570 = !DILocation(line: 565, column: 9, scope: !2571)
!2571 = !DILexicalBlockFile(scope: !538, file: !1, discriminator: 1)
!2572 = !DILocation(line: 565, column: 13, scope: !2571)
!2573 = !DILocation(line: 565, column: 2, scope: !2571)
!2574 = !DILocation(line: 566, column: 28, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !538, file: !1, line: 565, column: 18)
!2576 = !DILocation(line: 566, column: 31, scope: !2575)
!2577 = !DILocation(line: 566, column: 36, scope: !2575)
!2578 = !DILocation(line: 566, column: 7, scope: !2575)
!2579 = !DILocation(line: 566, column: 5, scope: !2575)
!2580 = !DILocation(line: 567, column: 7, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 567, column: 7)
!2582 = !DILocation(line: 567, column: 9, scope: !2581)
!2583 = !DILocation(line: 567, column: 7, scope: !2575)
!2584 = !DILocation(line: 568, column: 12, scope: !2581)
!2585 = !DILocation(line: 568, column: 4, scope: !2581)
!2586 = !DILocation(line: 569, column: 6, scope: !2575)
!2587 = !DILocation(line: 565, column: 2, scope: !2588)
!2588 = !DILexicalBlockFile(scope: !538, file: !1, discriminator: 2)
!2589 = !DILocation(line: 571, column: 2, scope: !538)
!2590 = !DILocation(line: 572, column: 1, scope: !538)
!2591 = !DILocalVariable(name: "a", arg: 1, scope: !550, file: !1, line: 1197, type: !4)
!2592 = !DILocation(line: 1197, column: 38, scope: !550)
!2593 = !DILocalVariable(name: "cab", scope: !550, file: !1, line: 1199, type: !292)
!2594 = !DILocation(line: 1199, column: 14, scope: !550)
!2595 = !DILocation(line: 1199, column: 35, scope: !550)
!2596 = !DILocation(line: 1199, column: 38, scope: !550)
!2597 = !DILocation(line: 1199, column: 46, scope: !550)
!2598 = !DILocation(line: 1199, column: 20, scope: !550)
!2599 = !DILocalVariable(name: "cfdata", scope: !550, file: !1, line: 1200, type: !350)
!2600 = !DILocation(line: 1200, column: 17, scope: !550)
!2601 = !DILocation(line: 1200, column: 26, scope: !550)
!2602 = !DILocation(line: 1200, column: 31, scope: !550)
!2603 = !DILocation(line: 1203, column: 6, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !550, file: !1, line: 1203, column: 6)
!2605 = !DILocation(line: 1203, column: 13, scope: !2604)
!2606 = !DILocation(line: 1203, column: 21, scope: !2604)
!2607 = !DILocation(line: 1203, column: 24, scope: !2608)
!2608 = !DILexicalBlockFile(scope: !2604, file: !1, discriminator: 1)
!2609 = !DILocation(line: 1203, column: 32, scope: !2608)
!2610 = !DILocation(line: 1203, column: 61, scope: !2608)
!2611 = !DILocation(line: 1203, column: 6, scope: !2608)
!2612 = !DILocation(line: 1204, column: 3, scope: !2604)
!2613 = !DILocation(line: 1206, column: 6, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !550, file: !1, line: 1206, column: 6)
!2615 = !DILocation(line: 1206, column: 13, scope: !2614)
!2616 = !DILocation(line: 1206, column: 6, scope: !550)
!2617 = !DILocalVariable(name: "skip", scope: !2618, file: !1, line: 1207, type: !52)
!2618 = distinct !DILexicalBlock(scope: !2614, file: !1, line: 1206, column: 22)
!2619 = !DILocation(line: 1207, column: 11, scope: !2618)
!2620 = !DILocation(line: 1209, column: 3, scope: !2618)
!2621 = !DILocation(line: 1209, column: 8, scope: !2618)
!2622 = !DILocation(line: 1209, column: 24, scope: !2618)
!2623 = !DILocation(line: 1209, column: 37, scope: !2618)
!2624 = !DILocation(line: 1212, column: 10, scope: !2618)
!2625 = !DILocation(line: 1212, column: 15, scope: !2618)
!2626 = !DILocation(line: 1212, column: 31, scope: !2618)
!2627 = !DILocation(line: 1213, column: 6, scope: !2618)
!2628 = !DILocation(line: 1213, column: 11, scope: !2618)
!2629 = !DILocation(line: 1213, column: 4, scope: !2618)
!2630 = !DILocation(line: 1212, column: 8, scope: !2618)
!2631 = !DILocation(line: 1214, column: 7, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2618, file: !1, line: 1214, column: 7)
!2633 = !DILocation(line: 1214, column: 12, scope: !2632)
!2634 = !DILocation(line: 1214, column: 7, scope: !2618)
!2635 = !DILocalVariable(name: "folder_index", scope: !2636, file: !1, line: 1215, type: !23)
!2636 = distinct !DILexicalBlock(scope: !2632, file: !1, line: 1214, column: 17)
!2637 = !DILocation(line: 1215, column: 8, scope: !2636)
!2638 = !DILocation(line: 1216, column: 12, scope: !2636)
!2639 = !DILocation(line: 1216, column: 17, scope: !2636)
!2640 = !DILocation(line: 1216, column: 31, scope: !2636)
!2641 = !DILocation(line: 1216, column: 4, scope: !2636)
!2642 = !DILocation(line: 1219, column: 18, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2636, file: !1, line: 1216, column: 39)
!2644 = !DILocation(line: 1220, column: 5, scope: !2643)
!2645 = !DILocation(line: 1222, column: 20, scope: !2643)
!2646 = !DILocation(line: 1222, column: 25, scope: !2643)
!2647 = !DILocation(line: 1222, column: 34, scope: !2643)
!2648 = !DILocation(line: 1222, column: 46, scope: !2643)
!2649 = !DILocation(line: 1222, column: 18, scope: !2643)
!2650 = !DILocation(line: 1223, column: 5, scope: !2643)
!2651 = !DILocation(line: 1225, column: 20, scope: !2643)
!2652 = !DILocation(line: 1225, column: 25, scope: !2643)
!2653 = !DILocation(line: 1225, column: 39, scope: !2643)
!2654 = !DILocation(line: 1225, column: 18, scope: !2643)
!2655 = !DILocation(line: 1226, column: 5, scope: !2643)
!2656 = !DILocation(line: 1228, column: 23, scope: !2636)
!2657 = !DILocation(line: 1228, column: 26, scope: !2636)
!2658 = !DILocation(line: 1230, column: 8, scope: !2636)
!2659 = !DILocation(line: 1231, column: 18, scope: !2636)
!2660 = !DILocation(line: 1231, column: 23, scope: !2636)
!2661 = !DILocation(line: 1231, column: 39, scope: !2636)
!2662 = !DILocation(line: 1231, column: 8, scope: !2636)
!2663 = !DILocation(line: 1232, column: 18, scope: !2636)
!2664 = !DILocation(line: 1232, column: 23, scope: !2636)
!2665 = !DILocation(line: 1228, column: 4, scope: !2636)
!2666 = !DILocation(line: 1233, column: 4, scope: !2636)
!2667 = !DILocation(line: 1235, column: 7, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2618, file: !1, line: 1235, column: 7)
!2669 = !DILocation(line: 1235, column: 12, scope: !2668)
!2670 = !DILocation(line: 1235, column: 7, scope: !2618)
!2671 = !DILocation(line: 1236, column: 31, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 1236, column: 8)
!2673 = distinct !DILexicalBlock(scope: !2668, file: !1, line: 1235, column: 17)
!2674 = !DILocation(line: 1236, column: 34, scope: !2672)
!2675 = !DILocation(line: 1236, column: 8, scope: !2672)
!2676 = !DILocation(line: 1236, column: 40, scope: !2672)
!2677 = !DILocation(line: 1236, column: 8, scope: !2673)
!2678 = !DILocation(line: 1237, column: 5, scope: !2672)
!2679 = !DILocation(line: 1239, column: 8, scope: !2673)
!2680 = !DILocation(line: 1239, column: 13, scope: !2673)
!2681 = !DILocation(line: 1239, column: 29, scope: !2673)
!2682 = !DILocation(line: 1238, column: 4, scope: !2673)
!2683 = !DILocation(line: 1238, column: 9, scope: !2673)
!2684 = !DILocation(line: 1238, column: 20, scope: !2673)
!2685 = !DILocation(line: 1240, column: 3, scope: !2673)
!2686 = !DILocation(line: 1241, column: 2, scope: !2618)
!2687 = !DILocation(line: 1246, column: 6, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !550, file: !1, line: 1246, column: 6)
!2689 = !DILocation(line: 1246, column: 11, scope: !2688)
!2690 = !DILocation(line: 1246, column: 27, scope: !2688)
!2691 = !DILocation(line: 1247, column: 6, scope: !2688)
!2692 = !DILocation(line: 1247, column: 11, scope: !2688)
!2693 = !DILocation(line: 1247, column: 27, scope: !2688)
!2694 = !DILocation(line: 1246, column: 40, scope: !2688)
!2695 = !DILocation(line: 1246, column: 6, scope: !550)
!2696 = !DILocalVariable(name: "p", scope: !2697, file: !1, line: 1248, type: !436)
!2697 = distinct !DILexicalBlock(scope: !2688, file: !1, line: 1247, column: 41)
!2698 = !DILocation(line: 1248, column: 24, scope: !2697)
!2699 = !DILocalVariable(name: "l", scope: !2697, file: !1, line: 1249, type: !23)
!2700 = !DILocation(line: 1249, column: 7, scope: !2697)
!2701 = !DILocation(line: 1251, column: 14, scope: !2697)
!2702 = !DILocation(line: 1251, column: 19, scope: !2697)
!2703 = !DILocation(line: 1251, column: 35, scope: !2697)
!2704 = !DILocation(line: 1251, column: 10, scope: !2697)
!2705 = !DILocation(line: 1252, column: 3, scope: !2697)
!2706 = !DILocation(line: 1252, column: 8, scope: !2697)
!2707 = !DILocation(line: 1252, column: 24, scope: !2697)
!2708 = !DILocation(line: 1252, column: 36, scope: !2697)
!2709 = !DILocation(line: 1253, column: 23, scope: !2697)
!2710 = !DILocation(line: 1253, column: 3, scope: !2697)
!2711 = !DILocation(line: 1253, column: 8, scope: !2697)
!2712 = !DILocation(line: 1253, column: 21, scope: !2697)
!2713 = !DILocation(line: 1254, column: 3, scope: !2697)
!2714 = !DILocation(line: 1254, column: 11, scope: !2697)
!2715 = !DILocation(line: 1254, column: 26, scope: !2697)
!2716 = !DILocation(line: 1255, column: 3, scope: !2697)
!2717 = !DILocation(line: 1255, column: 11, scope: !2697)
!2718 = !DILocation(line: 1255, column: 27, scope: !2697)
!2719 = !DILocation(line: 1256, column: 3, scope: !2697)
!2720 = !DILocation(line: 1256, column: 11, scope: !2697)
!2721 = !DILocation(line: 1256, column: 19, scope: !2697)
!2722 = !DILocation(line: 1257, column: 5, scope: !2697)
!2723 = !DILocation(line: 1258, column: 7, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1258, column: 7)
!2725 = !DILocation(line: 1258, column: 12, scope: !2724)
!2726 = !DILocation(line: 1258, column: 21, scope: !2724)
!2727 = !DILocation(line: 1258, column: 27, scope: !2724)
!2728 = !DILocation(line: 1258, column: 7, scope: !2697)
!2729 = !DILocation(line: 1259, column: 9, scope: !2724)
!2730 = !DILocation(line: 1259, column: 14, scope: !2724)
!2731 = !DILocation(line: 1259, column: 23, scope: !2724)
!2732 = !DILocation(line: 1259, column: 6, scope: !2724)
!2733 = !DILocation(line: 1259, column: 4, scope: !2724)
!2734 = !DILocation(line: 1260, column: 33, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1260, column: 7)
!2736 = !DILocation(line: 1260, column: 36, scope: !2735)
!2737 = !DILocation(line: 1260, column: 12, scope: !2735)
!2738 = !DILocation(line: 1260, column: 10, scope: !2735)
!2739 = !DILocation(line: 1260, column: 46, scope: !2735)
!2740 = !DILocation(line: 1260, column: 7, scope: !2697)
!2741 = !DILocation(line: 1261, column: 28, scope: !2735)
!2742 = !DILocation(line: 1261, column: 12, scope: !2735)
!2743 = !DILocation(line: 1261, column: 4, scope: !2735)
!2744 = !DILocation(line: 1262, column: 33, scope: !2697)
!2745 = !DILocation(line: 1262, column: 35, scope: !2697)
!2746 = !DILocation(line: 1262, column: 17, scope: !2697)
!2747 = !DILocation(line: 1262, column: 3, scope: !2697)
!2748 = !DILocation(line: 1262, column: 11, scope: !2697)
!2749 = !DILocation(line: 1262, column: 15, scope: !2697)
!2750 = !DILocation(line: 1263, column: 45, scope: !2697)
!2751 = !DILocation(line: 1263, column: 47, scope: !2697)
!2752 = !DILocation(line: 1263, column: 29, scope: !2697)
!2753 = !DILocation(line: 1263, column: 3, scope: !2697)
!2754 = !DILocation(line: 1263, column: 11, scope: !2697)
!2755 = !DILocation(line: 1263, column: 27, scope: !2697)
!2756 = !DILocation(line: 1264, column: 40, scope: !2697)
!2757 = !DILocation(line: 1264, column: 48, scope: !2697)
!2758 = !DILocation(line: 1264, column: 3, scope: !2697)
!2759 = !DILocation(line: 1264, column: 11, scope: !2697)
!2760 = !DILocation(line: 1264, column: 38, scope: !2697)
!2761 = !DILocation(line: 1266, column: 23, scope: !2697)
!2762 = !DILocation(line: 1266, column: 25, scope: !2697)
!2763 = !DILocation(line: 1266, column: 7, scope: !2697)
!2764 = !DILocation(line: 1265, column: 3, scope: !2697)
!2765 = !DILocation(line: 1265, column: 11, scope: !2697)
!2766 = !DILocation(line: 1265, column: 29, scope: !2697)
!2767 = !DILocation(line: 1268, column: 7, scope: !2697)
!2768 = !DILocation(line: 1268, column: 15, scope: !2697)
!2769 = !DILocation(line: 1267, column: 3, scope: !2697)
!2770 = !DILocation(line: 1267, column: 11, scope: !2697)
!2771 = !DILocation(line: 1267, column: 40, scope: !2697)
!2772 = !DILocation(line: 1269, column: 3, scope: !2697)
!2773 = !DILocation(line: 1269, column: 11, scope: !2697)
!2774 = !DILocation(line: 1269, column: 30, scope: !2697)
!2775 = !DILocation(line: 1270, column: 3, scope: !2697)
!2776 = !DILocation(line: 1270, column: 11, scope: !2697)
!2777 = !DILocation(line: 1270, column: 23, scope: !2697)
!2778 = !DILocation(line: 1271, column: 3, scope: !2697)
!2779 = !DILocation(line: 1271, column: 11, scope: !2697)
!2780 = !DILocation(line: 1271, column: 22, scope: !2697)
!2781 = !DILocation(line: 1276, column: 7, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1276, column: 7)
!2783 = !DILocation(line: 1276, column: 15, scope: !2782)
!2784 = !DILocation(line: 1276, column: 31, scope: !2782)
!2785 = !DILocation(line: 1276, column: 36, scope: !2782)
!2786 = !DILocation(line: 1277, column: 7, scope: !2782)
!2787 = !DILocation(line: 1277, column: 15, scope: !2782)
!2788 = !DILocation(line: 1277, column: 31, scope: !2782)
!2789 = !DILocation(line: 1276, column: 7, scope: !2790)
!2790 = !DILexicalBlockFile(scope: !2697, file: !1, discriminator: 1)
!2791 = !DILocation(line: 1278, column: 4, scope: !2782)
!2792 = !DILocation(line: 1279, column: 7, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1279, column: 7)
!2794 = !DILocation(line: 1279, column: 15, scope: !2793)
!2795 = !DILocation(line: 1279, column: 33, scope: !2793)
!2796 = !DILocation(line: 1279, column: 7, scope: !2697)
!2797 = !DILocation(line: 1280, column: 4, scope: !2793)
!2798 = !DILocation(line: 1281, column: 7, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1281, column: 7)
!2800 = !DILocation(line: 1281, column: 15, scope: !2799)
!2801 = !DILocation(line: 1281, column: 33, scope: !2799)
!2802 = !DILocation(line: 1281, column: 7, scope: !2697)
!2803 = !DILocation(line: 1282, column: 12, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2799, file: !1, line: 1281, column: 39)
!2805 = !DILocation(line: 1282, column: 17, scope: !2804)
!2806 = !DILocation(line: 1282, column: 31, scope: !2804)
!2807 = !DILocation(line: 1282, column: 4, scope: !2804)
!2808 = !DILocation(line: 1285, column: 5, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2804, file: !1, line: 1282, column: 39)
!2810 = !DILocation(line: 1285, column: 5, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !2809, file: !1, discriminator: 1)
!2812 = !DILocation(line: 1288, column: 5, scope: !2809)
!2813 = !DILocation(line: 1290, column: 3, scope: !2804)
!2814 = !DILocation(line: 1293, column: 8, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1293, column: 7)
!2816 = !DILocation(line: 1293, column: 13, scope: !2815)
!2817 = !DILocation(line: 1293, column: 29, scope: !2815)
!2818 = !DILocation(line: 1294, column: 8, scope: !2815)
!2819 = !DILocation(line: 1294, column: 13, scope: !2815)
!2820 = !DILocation(line: 1294, column: 29, scope: !2815)
!2821 = !DILocation(line: 1293, column: 42, scope: !2815)
!2822 = !DILocation(line: 1294, column: 43, scope: !2815)
!2823 = !DILocation(line: 1295, column: 10, scope: !2815)
!2824 = !DILocation(line: 1295, column: 18, scope: !2815)
!2825 = !DILocation(line: 1295, column: 36, scope: !2815)
!2826 = !DILocation(line: 1293, column: 7, scope: !2790)
!2827 = !DILocation(line: 1296, column: 4, scope: !2815)
!2828 = !DILocation(line: 1300, column: 7, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1300, column: 7)
!2830 = !DILocation(line: 1300, column: 12, scope: !2829)
!2831 = !DILocation(line: 1300, column: 28, scope: !2829)
!2832 = !DILocation(line: 1300, column: 37, scope: !2829)
!2833 = !DILocation(line: 1300, column: 54, scope: !2829)
!2834 = !DILocation(line: 1301, column: 7, scope: !2829)
!2835 = !DILocation(line: 1301, column: 15, scope: !2829)
!2836 = !DILocation(line: 1301, column: 34, scope: !2829)
!2837 = !DILocation(line: 1301, column: 42, scope: !2829)
!2838 = !DILocation(line: 1301, column: 31, scope: !2829)
!2839 = !DILocation(line: 1300, column: 7, scope: !2790)
!2840 = !DILocation(line: 1302, column: 4, scope: !2829)
!2841 = !DILocation(line: 1307, column: 7, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 1307, column: 7)
!2843 = !DILocation(line: 1307, column: 15, scope: !2842)
!2844 = !DILocation(line: 1307, column: 39, scope: !2842)
!2845 = !DILocation(line: 1307, column: 31, scope: !2842)
!2846 = !DILocation(line: 1307, column: 29, scope: !2842)
!2847 = !DILocation(line: 1307, column: 7, scope: !2697)
!2848 = !DILocation(line: 1308, column: 9, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2842, file: !1, line: 1307, column: 42)
!2850 = !DILocation(line: 1308, column: 17, scope: !2849)
!2851 = !DILocation(line: 1308, column: 4, scope: !2849)
!2852 = !DILocation(line: 1309, column: 30, scope: !2849)
!2853 = !DILocation(line: 1309, column: 23, scope: !2849)
!2854 = !DILocation(line: 1309, column: 4, scope: !2849)
!2855 = !DILocation(line: 1309, column: 12, scope: !2849)
!2856 = !DILocation(line: 1309, column: 21, scope: !2849)
!2857 = !DILocation(line: 1310, column: 8, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2849, file: !1, line: 1310, column: 8)
!2859 = !DILocation(line: 1310, column: 16, scope: !2858)
!2860 = !DILocation(line: 1310, column: 25, scope: !2858)
!2861 = !DILocation(line: 1310, column: 8, scope: !2849)
!2862 = !DILocation(line: 1311, column: 24, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2858, file: !1, line: 1310, column: 34)
!2864 = !DILocation(line: 1311, column: 27, scope: !2863)
!2865 = !DILocation(line: 1311, column: 5, scope: !2863)
!2866 = !DILocation(line: 1313, column: 5, scope: !2863)
!2867 = !DILocation(line: 1315, column: 28, scope: !2849)
!2868 = !DILocation(line: 1315, column: 4, scope: !2849)
!2869 = !DILocation(line: 1315, column: 12, scope: !2849)
!2870 = !DILocation(line: 1315, column: 26, scope: !2849)
!2871 = !DILocation(line: 1316, column: 3, scope: !2849)
!2872 = !DILocation(line: 1317, column: 10, scope: !2697)
!2873 = !DILocation(line: 1317, column: 18, scope: !2697)
!2874 = !DILocation(line: 1317, column: 28, scope: !2697)
!2875 = !DILocation(line: 1317, column: 31, scope: !2697)
!2876 = !DILocation(line: 1317, column: 3, scope: !2697)
!2877 = !DILocation(line: 1320, column: 26, scope: !2697)
!2878 = !DILocation(line: 1320, column: 29, scope: !2697)
!2879 = !DILocation(line: 1320, column: 3, scope: !2697)
!2880 = !DILocation(line: 1321, column: 22, scope: !2697)
!2881 = !DILocation(line: 1321, column: 3, scope: !2697)
!2882 = !DILocation(line: 1321, column: 8, scope: !2697)
!2883 = !DILocation(line: 1321, column: 19, scope: !2697)
!2884 = !DILocation(line: 1322, column: 2, scope: !2697)
!2885 = !DILocation(line: 1322, column: 13, scope: !2886)
!2886 = !DILexicalBlockFile(scope: !2887, file: !1, discriminator: 1)
!2887 = distinct !DILexicalBlock(scope: !2688, file: !1, line: 1322, column: 13)
!2888 = !DILocation(line: 1322, column: 18, scope: !2886)
!2889 = !DILocation(line: 1322, column: 34, scope: !2886)
!2890 = !DILocation(line: 1322, column: 47, scope: !2886)
!2891 = !DILocation(line: 1324, column: 3, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2887, file: !1, line: 1322, column: 52)
!2893 = !DILocation(line: 1324, column: 11, scope: !2892)
!2894 = !DILocation(line: 1324, column: 27, scope: !2892)
!2895 = !DILocation(line: 1325, column: 3, scope: !2892)
!2896 = !DILocation(line: 1325, column: 11, scope: !2892)
!2897 = !DILocation(line: 1325, column: 29, scope: !2892)
!2898 = !DILocation(line: 1326, column: 3, scope: !2892)
!2899 = !DILocation(line: 1326, column: 11, scope: !2892)
!2900 = !DILocation(line: 1326, column: 38, scope: !2892)
!2901 = !DILocation(line: 1327, column: 3, scope: !2892)
!2902 = !DILocation(line: 1327, column: 11, scope: !2892)
!2903 = !DILocation(line: 1327, column: 40, scope: !2892)
!2904 = !DILocation(line: 1328, column: 2, scope: !2892)
!2905 = !DILocation(line: 1330, column: 14, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2887, file: !1, line: 1328, column: 9)
!2907 = !DILocation(line: 1330, column: 19, scope: !2906)
!2908 = !DILocation(line: 1330, column: 35, scope: !2906)
!2909 = !DILocation(line: 1330, column: 10, scope: !2906)
!2910 = !DILocation(line: 1331, column: 23, scope: !2906)
!2911 = !DILocation(line: 1331, column: 3, scope: !2906)
!2912 = !DILocation(line: 1331, column: 8, scope: !2906)
!2913 = !DILocation(line: 1331, column: 21, scope: !2906)
!2914 = !DILocation(line: 1332, column: 10, scope: !2906)
!2915 = !DILocation(line: 1332, column: 3, scope: !2906)
!2916 = !DILocation(line: 1334, column: 2, scope: !550)
!2917 = !DILocation(line: 1336, column: 21, scope: !550)
!2918 = !DILocation(line: 1336, column: 24, scope: !550)
!2919 = !DILocation(line: 1336, column: 2, scope: !550)
!2920 = !DILocation(line: 1338, column: 2, scope: !550)
!2921 = !DILocation(line: 1339, column: 1, scope: !550)
!2922 = !DILocalVariable(name: "a", arg: 1, scope: !551, file: !1, line: 1770, type: !4)
!2923 = !DILocation(line: 1770, column: 41, scope: !551)
!2924 = !DILocalVariable(name: "consumed_bytes", arg: 2, scope: !551, file: !1, line: 1770, type: !52)
!2925 = !DILocation(line: 1770, column: 52, scope: !551)
!2926 = !DILocalVariable(name: "cab", scope: !551, file: !1, line: 1772, type: !292)
!2927 = !DILocation(line: 1772, column: 14, scope: !551)
!2928 = !DILocation(line: 1772, column: 35, scope: !551)
!2929 = !DILocation(line: 1772, column: 38, scope: !551)
!2930 = !DILocation(line: 1772, column: 46, scope: !551)
!2931 = !DILocation(line: 1772, column: 20, scope: !551)
!2932 = !DILocalVariable(name: "cfdata", scope: !551, file: !1, line: 1773, type: !350)
!2933 = !DILocation(line: 1773, column: 17, scope: !551)
!2934 = !DILocalVariable(name: "cbytes", scope: !551, file: !1, line: 1774, type: !52)
!2935 = !DILocation(line: 1774, column: 10, scope: !551)
!2936 = !DILocalVariable(name: "rbytes", scope: !551, file: !1, line: 1774, type: !52)
!2937 = !DILocation(line: 1774, column: 18, scope: !551)
!2938 = !DILocalVariable(name: "err", scope: !551, file: !1, line: 1775, type: !23)
!2939 = !DILocation(line: 1775, column: 6, scope: !551)
!2940 = !DILocation(line: 1777, column: 38, scope: !551)
!2941 = !DILocation(line: 1777, column: 41, scope: !551)
!2942 = !DILocation(line: 1777, column: 11, scope: !551)
!2943 = !DILocation(line: 1777, column: 9, scope: !551)
!2944 = !DILocation(line: 1778, column: 6, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !551, file: !1, line: 1778, column: 6)
!2946 = !DILocation(line: 1778, column: 13, scope: !2945)
!2947 = !DILocation(line: 1778, column: 6, scope: !551)
!2948 = !DILocation(line: 1779, column: 3, scope: !2945)
!2949 = !DILocation(line: 1781, column: 11, scope: !551)
!2950 = !DILocation(line: 1781, column: 16, scope: !551)
!2951 = !DILocation(line: 1781, column: 9, scope: !551)
!2952 = !DILocation(line: 1782, column: 2, scope: !551)
!2953 = !DILocation(line: 1782, column: 9, scope: !2954)
!2954 = !DILexicalBlockFile(scope: !551, file: !1, discriminator: 1)
!2955 = !DILocation(line: 1782, column: 16, scope: !2954)
!2956 = !DILocation(line: 1782, column: 2, scope: !2954)
!2957 = !DILocalVariable(name: "avail", scope: !2958, file: !1, line: 1783, type: !38)
!2958 = distinct !DILexicalBlock(scope: !551, file: !1, line: 1782, column: 21)
!2959 = !DILocation(line: 1783, column: 11, scope: !2958)
!2960 = !DILocation(line: 1785, column: 7, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 1785, column: 7)
!2962 = !DILocation(line: 1785, column: 15, scope: !2961)
!2963 = !DILocation(line: 1785, column: 31, scope: !2961)
!2964 = !DILocation(line: 1785, column: 7, scope: !2958)
!2965 = !DILocation(line: 1786, column: 23, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2961, file: !1, line: 1785, column: 37)
!2967 = !DILocation(line: 1786, column: 26, scope: !2966)
!2968 = !DILocation(line: 1786, column: 4, scope: !2966)
!2969 = !DILocation(line: 1789, column: 4, scope: !2966)
!2970 = !DILocation(line: 1791, column: 12, scope: !2958)
!2971 = !DILocation(line: 1791, column: 20, scope: !2958)
!2972 = !DILocation(line: 1791, column: 10, scope: !2958)
!2973 = !DILocation(line: 1792, column: 7, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 1792, column: 7)
!2975 = !DILocation(line: 1792, column: 16, scope: !2974)
!2976 = !DILocation(line: 1792, column: 14, scope: !2974)
!2977 = !DILocation(line: 1792, column: 7, scope: !2958)
!2978 = !DILocation(line: 1793, column: 13, scope: !2974)
!2979 = !DILocation(line: 1793, column: 11, scope: !2974)
!2980 = !DILocation(line: 1793, column: 4, scope: !2974)
!2981 = !DILocation(line: 1794, column: 13, scope: !2958)
!2982 = !DILocation(line: 1794, column: 10, scope: !2958)
!2983 = !DILocation(line: 1796, column: 7, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 1796, column: 7)
!2985 = !DILocation(line: 1796, column: 15, scope: !2984)
!2986 = !DILocation(line: 1796, column: 34, scope: !2984)
!2987 = !DILocation(line: 1796, column: 39, scope: !2984)
!2988 = !DILocation(line: 1797, column: 7, scope: !2984)
!2989 = !DILocation(line: 1797, column: 12, scope: !2984)
!2990 = !DILocation(line: 1797, column: 26, scope: !2984)
!2991 = !DILocation(line: 1797, column: 33, scope: !2984)
!2992 = !DILocation(line: 1797, column: 65, scope: !2984)
!2993 = !DILocation(line: 1798, column: 7, scope: !2984)
!2994 = !DILocation(line: 1798, column: 12, scope: !2984)
!2995 = !DILocation(line: 1798, column: 26, scope: !2984)
!2996 = !DILocation(line: 1798, column: 33, scope: !2984)
!2997 = !DILocation(line: 1796, column: 7, scope: !2998)
!2998 = !DILexicalBlockFile(scope: !2958, file: !1, discriminator: 1)
!2999 = !DILocation(line: 1800, column: 8, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !3001, file: !1, line: 1800, column: 8)
!3001 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 1798, column: 63)
!3002 = !DILocation(line: 1800, column: 18, scope: !3000)
!3003 = !DILocation(line: 1800, column: 26, scope: !3000)
!3004 = !DILocation(line: 1800, column: 15, scope: !3000)
!3005 = !DILocation(line: 1800, column: 8, scope: !3001)
!3006 = !DILocation(line: 1802, column: 28, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3000, file: !1, line: 1800, column: 56)
!3008 = !DILocation(line: 1803, column: 9, scope: !3007)
!3009 = !DILocation(line: 1803, column: 17, scope: !3007)
!3010 = !DILocation(line: 1802, column: 5, scope: !3007)
!3011 = !DILocation(line: 1804, column: 24, scope: !3007)
!3012 = !DILocation(line: 1804, column: 32, scope: !3007)
!3013 = !DILocation(line: 1804, column: 5, scope: !3007)
!3014 = !DILocation(line: 1804, column: 10, scope: !3007)
!3015 = !DILocation(line: 1804, column: 21, scope: !3007)
!3016 = !DILocation(line: 1805, column: 5, scope: !3007)
!3017 = !DILocation(line: 1805, column: 13, scope: !3007)
!3018 = !DILocation(line: 1805, column: 40, scope: !3007)
!3019 = !DILocation(line: 1806, column: 5, scope: !3007)
!3020 = !DILocation(line: 1806, column: 13, scope: !3007)
!3021 = !DILocation(line: 1806, column: 42, scope: !3007)
!3022 = !DILocation(line: 1807, column: 27, scope: !3007)
!3023 = !DILocation(line: 1807, column: 11, scope: !3007)
!3024 = !DILocation(line: 1807, column: 9, scope: !3007)
!3025 = !DILocation(line: 1808, column: 9, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3007, file: !1, line: 1808, column: 9)
!3027 = !DILocation(line: 1808, column: 13, scope: !3026)
!3028 = !DILocation(line: 1808, column: 9, scope: !3007)
!3029 = !DILocation(line: 1809, column: 14, scope: !3026)
!3030 = !DILocation(line: 1809, column: 13, scope: !3026)
!3031 = !DILocation(line: 1809, column: 6, scope: !3026)
!3032 = !DILocation(line: 1810, column: 14, scope: !3007)
!3033 = !DILocation(line: 1810, column: 19, scope: !3007)
!3034 = !DILocation(line: 1810, column: 12, scope: !3007)
!3035 = !DILocation(line: 1811, column: 9, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3007, file: !1, line: 1811, column: 9)
!3037 = !DILocation(line: 1811, column: 17, scope: !3036)
!3038 = !DILocation(line: 1811, column: 35, scope: !3036)
!3039 = !DILocation(line: 1811, column: 9, scope: !3007)
!3040 = !DILocation(line: 1812, column: 14, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3036, file: !1, line: 1811, column: 41)
!3042 = !DILocation(line: 1812, column: 19, scope: !3041)
!3043 = !DILocation(line: 1812, column: 33, scope: !3041)
!3044 = !DILocation(line: 1812, column: 6, scope: !3041)
!3045 = !DILocation(line: 1816, column: 14, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3041, file: !1, line: 1812, column: 41)
!3047 = !DILocation(line: 1817, column: 7, scope: !3046)
!3048 = !DILocation(line: 1819, column: 7, scope: !3046)
!3049 = !DILocation(line: 1821, column: 5, scope: !3041)
!3050 = !DILocation(line: 1822, column: 5, scope: !3007)
!3051 = !DILocation(line: 1824, column: 37, scope: !3001)
!3052 = !DILocation(line: 1824, column: 27, scope: !3001)
!3053 = !DILocation(line: 1824, column: 4, scope: !3001)
!3054 = !DILocation(line: 1824, column: 12, scope: !3001)
!3055 = !DILocation(line: 1824, column: 24, scope: !3001)
!3056 = !DILocation(line: 1825, column: 54, scope: !3001)
!3057 = !DILocation(line: 1825, column: 44, scope: !3001)
!3058 = !DILocation(line: 1825, column: 4, scope: !3001)
!3059 = !DILocation(line: 1825, column: 12, scope: !3001)
!3060 = !DILocation(line: 1825, column: 41, scope: !3001)
!3061 = !DILocation(line: 1826, column: 4, scope: !3001)
!3062 = !DILocation(line: 1827, column: 14, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 1827, column: 14)
!3064 = !DILocation(line: 1827, column: 21, scope: !3063)
!3065 = !DILocation(line: 1827, column: 14, scope: !2984)
!3066 = !DILocation(line: 1828, column: 26, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3063, file: !1, line: 1827, column: 27)
!3068 = !DILocation(line: 1828, column: 10, scope: !3067)
!3069 = !DILocation(line: 1828, column: 8, scope: !3067)
!3070 = !DILocation(line: 1829, column: 8, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3067, file: !1, line: 1829, column: 8)
!3072 = !DILocation(line: 1829, column: 12, scope: !3071)
!3073 = !DILocation(line: 1829, column: 8, scope: !3067)
!3074 = !DILocation(line: 1830, column: 13, scope: !3071)
!3075 = !DILocation(line: 1830, column: 12, scope: !3071)
!3076 = !DILocation(line: 1830, column: 5, scope: !3071)
!3077 = !DILocation(line: 1831, column: 13, scope: !3067)
!3078 = !DILocation(line: 1831, column: 18, scope: !3067)
!3079 = !DILocation(line: 1831, column: 11, scope: !3067)
!3080 = !DILocation(line: 1832, column: 8, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3067, file: !1, line: 1832, column: 8)
!3082 = !DILocation(line: 1832, column: 16, scope: !3081)
!3083 = !DILocation(line: 1832, column: 34, scope: !3081)
!3084 = !DILocation(line: 1832, column: 8, scope: !3067)
!3085 = !DILocation(line: 1833, column: 13, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3081, file: !1, line: 1832, column: 40)
!3087 = !DILocation(line: 1833, column: 18, scope: !3086)
!3088 = !DILocation(line: 1833, column: 32, scope: !3086)
!3089 = !DILocation(line: 1833, column: 5, scope: !3086)
!3090 = !DILocation(line: 1837, column: 6, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3086, file: !1, line: 1833, column: 40)
!3092 = !DILocation(line: 1839, column: 6, scope: !3091)
!3093 = !DILocation(line: 1841, column: 4, scope: !3086)
!3094 = !DILocation(line: 1842, column: 4, scope: !3067)
!3095 = !DILocation(line: 1844, column: 3, scope: !2958)
!3096 = !DILocation(line: 1844, column: 10, scope: !2998)
!3097 = !DILocation(line: 1844, column: 17, scope: !2998)
!3098 = !DILocation(line: 1844, column: 3, scope: !2998)
!3099 = !DILocation(line: 1845, column: 32, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 1844, column: 22)
!3101 = !DILocation(line: 1845, column: 10, scope: !3100)
!3102 = !DILocation(line: 1846, column: 8, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 1846, column: 8)
!3104 = !DILocation(line: 1846, column: 14, scope: !3103)
!3105 = !DILocation(line: 1846, column: 8, scope: !3100)
!3106 = !DILocation(line: 1847, column: 5, scope: !3103)
!3107 = !DILocation(line: 1848, column: 8, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 1848, column: 8)
!3109 = !DILocation(line: 1848, column: 16, scope: !3108)
!3110 = !DILocation(line: 1848, column: 14, scope: !3108)
!3111 = !DILocation(line: 1848, column: 8, scope: !3100)
!3112 = !DILocation(line: 1849, column: 22, scope: !3108)
!3113 = !DILocation(line: 1849, column: 11, scope: !3108)
!3114 = !DILocation(line: 1849, column: 5, scope: !3108)
!3115 = !DILocation(line: 1850, column: 35, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 1850, column: 8)
!3117 = !DILocation(line: 1850, column: 38, scope: !3116)
!3118 = !DILocation(line: 1850, column: 8, scope: !3116)
!3119 = !DILocation(line: 1850, column: 45, scope: !3116)
!3120 = !DILocation(line: 1850, column: 8, scope: !3100)
!3121 = !DILocation(line: 1851, column: 5, scope: !3116)
!3122 = !DILocation(line: 1852, column: 14, scope: !3100)
!3123 = !DILocation(line: 1852, column: 11, scope: !3100)
!3124 = !DILocation(line: 1844, column: 3, scope: !3125)
!3125 = !DILexicalBlockFile(scope: !2958, file: !1, discriminator: 2)
!3126 = !DILocation(line: 1782, column: 2, scope: !3127)
!3127 = !DILexicalBlockFile(scope: !551, file: !1, discriminator: 2)
!3128 = !DILocation(line: 1855, column: 10, scope: !551)
!3129 = !DILocation(line: 1855, column: 2, scope: !551)
!3130 = !DILocation(line: 1856, column: 1, scope: !551)
!3131 = !DILocalVariable(name: "a", arg: 1, scope: !617, file: !1, line: 1919, type: !4)
!3132 = !DILocation(line: 1919, column: 36, scope: !617)
!3133 = !DILocalVariable(name: "buff", arg: 2, scope: !617, file: !1, line: 1919, type: !64)
!3134 = !DILocation(line: 1919, column: 52, scope: !617)
!3135 = !DILocalVariable(name: "size", arg: 3, scope: !617, file: !1, line: 1920, type: !65)
!3136 = !DILocation(line: 1920, column: 13, scope: !617)
!3137 = !DILocalVariable(name: "offset", arg: 4, scope: !617, file: !1, line: 1920, type: !66)
!3138 = !DILocation(line: 1920, column: 28, scope: !617)
!3139 = !DILocalVariable(name: "cab", scope: !617, file: !1, line: 1922, type: !292)
!3140 = !DILocation(line: 1922, column: 14, scope: !617)
!3141 = !DILocation(line: 1922, column: 35, scope: !617)
!3142 = !DILocation(line: 1922, column: 38, scope: !617)
!3143 = !DILocation(line: 1922, column: 46, scope: !617)
!3144 = !DILocation(line: 1922, column: 20, scope: !617)
!3145 = !DILocalVariable(name: "bytes_avail", scope: !617, file: !1, line: 1923, type: !38)
!3146 = !DILocation(line: 1923, column: 10, scope: !617)
!3147 = !DILocation(line: 1925, column: 6, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !617, file: !1, line: 1925, column: 6)
!3149 = !DILocation(line: 1925, column: 11, scope: !3148)
!3150 = !DILocation(line: 1925, column: 33, scope: !3148)
!3151 = !DILocation(line: 1925, column: 6, scope: !617)
!3152 = !DILocation(line: 1926, column: 4, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3148, file: !1, line: 1925, column: 39)
!3154 = !DILocation(line: 1926, column: 9, scope: !3153)
!3155 = !DILocation(line: 1927, column: 4, scope: !3153)
!3156 = !DILocation(line: 1927, column: 9, scope: !3153)
!3157 = !DILocation(line: 1928, column: 13, scope: !3153)
!3158 = !DILocation(line: 1928, column: 18, scope: !3153)
!3159 = !DILocation(line: 1928, column: 4, scope: !3153)
!3160 = !DILocation(line: 1928, column: 11, scope: !3153)
!3161 = !DILocation(line: 1929, column: 3, scope: !3153)
!3162 = !DILocation(line: 1929, column: 8, scope: !3153)
!3163 = !DILocation(line: 1929, column: 21, scope: !3153)
!3164 = !DILocation(line: 1930, column: 3, scope: !3153)
!3165 = !DILocation(line: 1933, column: 32, scope: !617)
!3166 = !DILocation(line: 1933, column: 10, scope: !617)
!3167 = !DILocation(line: 1933, column: 3, scope: !617)
!3168 = !DILocation(line: 1933, column: 8, scope: !617)
!3169 = !DILocation(line: 1934, column: 6, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !617, file: !1, line: 1934, column: 6)
!3171 = !DILocation(line: 1934, column: 18, scope: !3170)
!3172 = !DILocation(line: 1934, column: 6, scope: !617)
!3173 = !DILocation(line: 1935, column: 4, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3170, file: !1, line: 1934, column: 24)
!3175 = !DILocation(line: 1935, column: 9, scope: !3174)
!3176 = !DILocation(line: 1936, column: 4, scope: !3174)
!3177 = !DILocation(line: 1936, column: 9, scope: !3174)
!3178 = !DILocation(line: 1937, column: 4, scope: !3174)
!3179 = !DILocation(line: 1937, column: 11, scope: !3174)
!3180 = !DILocation(line: 1938, column: 7, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3174, file: !1, line: 1938, column: 7)
!3182 = !DILocation(line: 1938, column: 19, scope: !3181)
!3183 = !DILocation(line: 1938, column: 24, scope: !3181)
!3184 = !DILocation(line: 1939, column: 7, scope: !3181)
!3185 = !DILocation(line: 1939, column: 12, scope: !3181)
!3186 = !DILocation(line: 1939, column: 26, scope: !3181)
!3187 = !DILocation(line: 1939, column: 44, scope: !3181)
!3188 = !DILocation(line: 1938, column: 7, scope: !3189)
!3189 = !DILexicalBlockFile(scope: !3174, file: !1, discriminator: 1)
!3190 = !DILocation(line: 1941, column: 23, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3181, file: !1, line: 1939, column: 50)
!3192 = !DILocation(line: 1941, column: 26, scope: !3191)
!3193 = !DILocation(line: 1941, column: 4, scope: !3191)
!3194 = !DILocation(line: 1943, column: 4, scope: !3191)
!3195 = !DILocation(line: 1945, column: 17, scope: !3181)
!3196 = !DILocation(line: 1945, column: 12, scope: !3181)
!3197 = !DILocation(line: 1945, column: 4, scope: !3181)
!3198 = !DILocation(line: 1947, column: 6, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !617, file: !1, line: 1947, column: 6)
!3200 = !DILocation(line: 1947, column: 20, scope: !3199)
!3201 = !DILocation(line: 1947, column: 25, scope: !3199)
!3202 = !DILocation(line: 1947, column: 18, scope: !3199)
!3203 = !DILocation(line: 1947, column: 6, scope: !617)
!3204 = !DILocation(line: 1948, column: 26, scope: !3199)
!3205 = !DILocation(line: 1948, column: 31, scope: !3199)
!3206 = !DILocation(line: 1948, column: 15, scope: !3199)
!3207 = !DILocation(line: 1948, column: 3, scope: !3199)
!3208 = !DILocation(line: 1950, column: 10, scope: !617)
!3209 = !DILocation(line: 1950, column: 3, scope: !617)
!3210 = !DILocation(line: 1950, column: 8, scope: !617)
!3211 = !DILocation(line: 1951, column: 12, scope: !617)
!3212 = !DILocation(line: 1951, column: 17, scope: !617)
!3213 = !DILocation(line: 1951, column: 3, scope: !617)
!3214 = !DILocation(line: 1951, column: 10, scope: !617)
!3215 = !DILocation(line: 1952, column: 23, scope: !617)
!3216 = !DILocation(line: 1952, column: 2, scope: !617)
!3217 = !DILocation(line: 1952, column: 7, scope: !617)
!3218 = !DILocation(line: 1952, column: 20, scope: !617)
!3219 = !DILocation(line: 1953, column: 32, scope: !617)
!3220 = !DILocation(line: 1953, column: 2, scope: !617)
!3221 = !DILocation(line: 1953, column: 7, scope: !617)
!3222 = !DILocation(line: 1953, column: 29, scope: !617)
!3223 = !DILocation(line: 1954, column: 6, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !617, file: !1, line: 1954, column: 6)
!3225 = !DILocation(line: 1954, column: 11, scope: !3224)
!3226 = !DILocation(line: 1954, column: 33, scope: !3224)
!3227 = !DILocation(line: 1954, column: 6, scope: !617)
!3228 = !DILocation(line: 1955, column: 3, scope: !3224)
!3229 = !DILocation(line: 1955, column: 8, scope: !3224)
!3230 = !DILocation(line: 1955, column: 21, scope: !3224)
!3231 = !DILocation(line: 1956, column: 26, scope: !617)
!3232 = !DILocation(line: 1956, column: 2, scope: !617)
!3233 = !DILocation(line: 1956, column: 7, scope: !617)
!3234 = !DILocation(line: 1956, column: 24, scope: !617)
!3235 = !DILocation(line: 1957, column: 6, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !617, file: !1, line: 1957, column: 6)
!3237 = !DILocation(line: 1957, column: 11, scope: !3236)
!3238 = !DILocation(line: 1957, column: 27, scope: !3236)
!3239 = !DILocation(line: 1957, column: 36, scope: !3236)
!3240 = !DILocation(line: 1957, column: 6, scope: !617)
!3241 = !DILocation(line: 1959, column: 7, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !1, line: 1959, column: 7)
!3243 = distinct !DILexicalBlock(scope: !3236, file: !1, line: 1957, column: 54)
!3244 = !DILocation(line: 1959, column: 12, scope: !3242)
!3245 = !DILocation(line: 1959, column: 26, scope: !3242)
!3246 = !DILocation(line: 1959, column: 39, scope: !3242)
!3247 = !DILocation(line: 1959, column: 44, scope: !3242)
!3248 = !DILocation(line: 1959, column: 37, scope: !3242)
!3249 = !DILocation(line: 1959, column: 7, scope: !3243)
!3250 = !DILocation(line: 1960, column: 36, scope: !3242)
!3251 = !DILocation(line: 1960, column: 41, scope: !3242)
!3252 = !DILocation(line: 1960, column: 4, scope: !3242)
!3253 = !DILocation(line: 1960, column: 9, scope: !3242)
!3254 = !DILocation(line: 1960, column: 23, scope: !3242)
!3255 = !DILocation(line: 1960, column: 34, scope: !3242)
!3256 = !DILocation(line: 1961, column: 2, scope: !3243)
!3257 = !DILocation(line: 1962, column: 2, scope: !617)
!3258 = !DILocation(line: 1963, column: 1, scope: !617)
!3259 = !DILocalVariable(name: "a", arg: 1, scope: !554, file: !1, line: 1863, type: !4)
!3260 = !DILocation(line: 1863, column: 49, scope: !554)
!3261 = !DILocalVariable(name: "consumed_bytes", arg: 2, scope: !554, file: !1, line: 1863, type: !52)
!3262 = !DILocation(line: 1863, column: 60, scope: !554)
!3263 = !DILocalVariable(name: "cab", scope: !554, file: !1, line: 1865, type: !292)
!3264 = !DILocation(line: 1865, column: 14, scope: !554)
!3265 = !DILocation(line: 1865, column: 35, scope: !554)
!3266 = !DILocation(line: 1865, column: 38, scope: !554)
!3267 = !DILocation(line: 1865, column: 46, scope: !554)
!3268 = !DILocation(line: 1865, column: 20, scope: !554)
!3269 = !DILocalVariable(name: "cfdata", scope: !554, file: !1, line: 1866, type: !350)
!3270 = !DILocation(line: 1866, column: 17, scope: !554)
!3271 = !DILocalVariable(name: "cbytes", scope: !554, file: !1, line: 1867, type: !52)
!3272 = !DILocation(line: 1867, column: 10, scope: !554)
!3273 = !DILocalVariable(name: "rbytes", scope: !554, file: !1, line: 1867, type: !52)
!3274 = !DILocation(line: 1867, column: 18, scope: !554)
!3275 = !DILocalVariable(name: "err", scope: !554, file: !1, line: 1868, type: !23)
!3276 = !DILocation(line: 1868, column: 6, scope: !554)
!3277 = !DILocation(line: 1870, column: 11, scope: !554)
!3278 = !DILocation(line: 1870, column: 16, scope: !554)
!3279 = !DILocation(line: 1870, column: 9, scope: !554)
!3280 = !DILocation(line: 1871, column: 11, scope: !554)
!3281 = !DILocation(line: 1871, column: 9, scope: !554)
!3282 = !DILocation(line: 1872, column: 6, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !554, file: !1, line: 1872, column: 6)
!3284 = !DILocation(line: 1872, column: 11, scope: !3283)
!3285 = !DILocation(line: 1872, column: 27, scope: !3283)
!3286 = !DILocation(line: 1872, column: 36, scope: !3283)
!3287 = !DILocation(line: 1872, column: 6, scope: !554)
!3288 = !DILocation(line: 1873, column: 7, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !1, line: 1873, column: 7)
!3290 = distinct !DILexicalBlock(scope: !3283, file: !1, line: 1872, column: 54)
!3291 = !DILocation(line: 1873, column: 24, scope: !3289)
!3292 = !DILocation(line: 1873, column: 32, scope: !3289)
!3293 = !DILocation(line: 1873, column: 22, scope: !3289)
!3294 = !DILocation(line: 1873, column: 7, scope: !3290)
!3295 = !DILocation(line: 1874, column: 13, scope: !3289)
!3296 = !DILocation(line: 1874, column: 11, scope: !3289)
!3297 = !DILocation(line: 1874, column: 4, scope: !3289)
!3298 = !DILocation(line: 1876, column: 13, scope: !3289)
!3299 = !DILocation(line: 1876, column: 21, scope: !3289)
!3300 = !DILocation(line: 1876, column: 11, scope: !3289)
!3301 = !DILocation(line: 1877, column: 13, scope: !3290)
!3302 = !DILocation(line: 1877, column: 10, scope: !3290)
!3303 = !DILocation(line: 1878, column: 36, scope: !3290)
!3304 = !DILocation(line: 1878, column: 26, scope: !3290)
!3305 = !DILocation(line: 1878, column: 3, scope: !3290)
!3306 = !DILocation(line: 1878, column: 11, scope: !3290)
!3307 = !DILocation(line: 1878, column: 23, scope: !3290)
!3308 = !DILocation(line: 1879, column: 53, scope: !3290)
!3309 = !DILocation(line: 1879, column: 43, scope: !3290)
!3310 = !DILocation(line: 1879, column: 3, scope: !3290)
!3311 = !DILocation(line: 1879, column: 11, scope: !3290)
!3312 = !DILocation(line: 1879, column: 40, scope: !3290)
!3313 = !DILocation(line: 1880, column: 25, scope: !3290)
!3314 = !DILocation(line: 1880, column: 3, scope: !3290)
!3315 = !DILocation(line: 1880, column: 11, scope: !3290)
!3316 = !DILocation(line: 1880, column: 22, scope: !3290)
!3317 = !DILocation(line: 1881, column: 2, scope: !3290)
!3318 = !DILocation(line: 1882, column: 12, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3283, file: !1, line: 1881, column: 9)
!3320 = !DILocation(line: 1882, column: 20, scope: !3319)
!3321 = !DILocation(line: 1882, column: 41, scope: !3319)
!3322 = !DILocation(line: 1882, column: 49, scope: !3319)
!3323 = !DILocation(line: 1882, column: 39, scope: !3319)
!3324 = !DILocation(line: 1882, column: 10, scope: !3319)
!3325 = !DILocation(line: 1883, column: 7, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 1883, column: 7)
!3327 = !DILocation(line: 1883, column: 14, scope: !3326)
!3328 = !DILocation(line: 1883, column: 7, scope: !3319)
!3329 = !DILocation(line: 1884, column: 8, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !1, line: 1884, column: 8)
!3331 = distinct !DILexicalBlock(scope: !3326, file: !1, line: 1883, column: 19)
!3332 = !DILocation(line: 1884, column: 25, scope: !3330)
!3333 = !DILocation(line: 1884, column: 23, scope: !3330)
!3334 = !DILocation(line: 1884, column: 8, scope: !3331)
!3335 = !DILocation(line: 1885, column: 14, scope: !3330)
!3336 = !DILocation(line: 1885, column: 12, scope: !3330)
!3337 = !DILocation(line: 1885, column: 5, scope: !3330)
!3338 = !DILocation(line: 1886, column: 14, scope: !3331)
!3339 = !DILocation(line: 1886, column: 11, scope: !3331)
!3340 = !DILocation(line: 1887, column: 37, scope: !3331)
!3341 = !DILocation(line: 1887, column: 27, scope: !3331)
!3342 = !DILocation(line: 1887, column: 4, scope: !3331)
!3343 = !DILocation(line: 1887, column: 12, scope: !3331)
!3344 = !DILocation(line: 1887, column: 24, scope: !3331)
!3345 = !DILocation(line: 1888, column: 54, scope: !3331)
!3346 = !DILocation(line: 1888, column: 44, scope: !3331)
!3347 = !DILocation(line: 1888, column: 4, scope: !3331)
!3348 = !DILocation(line: 1888, column: 12, scope: !3331)
!3349 = !DILocation(line: 1888, column: 41, scope: !3331)
!3350 = !DILocation(line: 1889, column: 3, scope: !3331)
!3351 = !DILocation(line: 1891, column: 7, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 1891, column: 7)
!3353 = !DILocation(line: 1891, column: 15, scope: !3352)
!3354 = !DILocation(line: 1891, column: 7, scope: !3319)
!3355 = !DILocation(line: 1892, column: 13, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3352, file: !1, line: 1891, column: 27)
!3357 = !DILocation(line: 1892, column: 21, scope: !3356)
!3358 = !DILocation(line: 1892, column: 11, scope: !3356)
!3359 = !DILocation(line: 1893, column: 4, scope: !3356)
!3360 = !DILocation(line: 1893, column: 12, scope: !3356)
!3361 = !DILocation(line: 1893, column: 23, scope: !3356)
!3362 = !DILocation(line: 1894, column: 3, scope: !3356)
!3363 = !DILocation(line: 1895, column: 11, scope: !3352)
!3364 = !DILocation(line: 1897, column: 6, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !554, file: !1, line: 1897, column: 6)
!3366 = !DILocation(line: 1897, column: 6, scope: !554)
!3367 = !DILocation(line: 1899, column: 23, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3365, file: !1, line: 1897, column: 14)
!3369 = !DILocation(line: 1899, column: 34, scope: !3368)
!3370 = !DILocation(line: 1899, column: 3, scope: !3368)
!3371 = !DILocation(line: 1902, column: 26, scope: !3368)
!3372 = !DILocation(line: 1902, column: 29, scope: !3368)
!3373 = !DILocation(line: 1902, column: 3, scope: !3368)
!3374 = !DILocation(line: 1903, column: 22, scope: !3368)
!3375 = !DILocation(line: 1903, column: 3, scope: !3368)
!3376 = !DILocation(line: 1903, column: 8, scope: !3368)
!3377 = !DILocation(line: 1903, column: 19, scope: !3368)
!3378 = !DILocation(line: 1904, column: 51, scope: !3368)
!3379 = !DILocation(line: 1904, column: 41, scope: !3368)
!3380 = !DILocation(line: 1904, column: 3, scope: !3368)
!3381 = !DILocation(line: 1904, column: 11, scope: !3368)
!3382 = !DILocation(line: 1904, column: 38, scope: !3368)
!3383 = !DILocation(line: 1905, column: 7, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3368, file: !1, line: 1905, column: 7)
!3385 = !DILocation(line: 1905, column: 15, scope: !3384)
!3386 = !DILocation(line: 1905, column: 42, scope: !3384)
!3387 = !DILocation(line: 1905, column: 7, scope: !3368)
!3388 = !DILocation(line: 1906, column: 30, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3384, file: !1, line: 1905, column: 48)
!3390 = !DILocation(line: 1906, column: 10, scope: !3389)
!3391 = !DILocation(line: 1906, column: 8, scope: !3389)
!3392 = !DILocation(line: 1907, column: 8, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 1907, column: 8)
!3394 = !DILocation(line: 1907, column: 12, scope: !3393)
!3395 = !DILocation(line: 1907, column: 8, scope: !3389)
!3396 = !DILocation(line: 1908, column: 13, scope: !3393)
!3397 = !DILocation(line: 1908, column: 12, scope: !3393)
!3398 = !DILocation(line: 1908, column: 5, scope: !3393)
!3399 = !DILocation(line: 1909, column: 3, scope: !3389)
!3400 = !DILocation(line: 1910, column: 2, scope: !3368)
!3401 = !DILocation(line: 1911, column: 10, scope: !554)
!3402 = !DILocation(line: 1911, column: 2, scope: !554)
!3403 = !DILocation(line: 1912, column: 1, scope: !554)
!3404 = !DILocalVariable(name: "a", arg: 1, scope: !563, file: !1, line: 1345, type: !4)
!3405 = !DILocation(line: 1345, column: 44, scope: !563)
!3406 = !DILocalVariable(name: "avail", arg: 2, scope: !563, file: !1, line: 1345, type: !541)
!3407 = !DILocation(line: 1345, column: 56, scope: !563)
!3408 = !DILocalVariable(name: "cab", scope: !563, file: !1, line: 1347, type: !292)
!3409 = !DILocation(line: 1347, column: 14, scope: !563)
!3410 = !DILocation(line: 1347, column: 35, scope: !563)
!3411 = !DILocation(line: 1347, column: 38, scope: !563)
!3412 = !DILocation(line: 1347, column: 46, scope: !563)
!3413 = !DILocation(line: 1347, column: 20, scope: !563)
!3414 = !DILocalVariable(name: "err", scope: !563, file: !1, line: 1348, type: !23)
!3415 = !DILocation(line: 1348, column: 6, scope: !563)
!3416 = !DILocation(line: 1350, column: 24, scope: !563)
!3417 = !DILocation(line: 1350, column: 8, scope: !563)
!3418 = !DILocation(line: 1350, column: 6, scope: !563)
!3419 = !DILocation(line: 1351, column: 6, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !563, file: !1, line: 1351, column: 6)
!3421 = !DILocation(line: 1351, column: 10, scope: !3420)
!3422 = !DILocation(line: 1351, column: 6, scope: !563)
!3423 = !DILocation(line: 1352, column: 12, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3420, file: !1, line: 1351, column: 24)
!3425 = !DILocation(line: 1352, column: 4, scope: !3424)
!3426 = !DILocation(line: 1352, column: 10, scope: !3424)
!3427 = !DILocation(line: 1353, column: 3, scope: !3424)
!3428 = !DILocation(line: 1356, column: 10, scope: !563)
!3429 = !DILocation(line: 1356, column: 15, scope: !563)
!3430 = !DILocation(line: 1356, column: 31, scope: !563)
!3431 = !DILocation(line: 1356, column: 2, scope: !563)
!3432 = !DILocation(line: 1358, column: 38, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !563, file: !1, line: 1356, column: 41)
!3434 = !DILocation(line: 1358, column: 41, scope: !3433)
!3435 = !DILocation(line: 1358, column: 11, scope: !3433)
!3436 = !DILocation(line: 1358, column: 3, scope: !3433)
!3437 = !DILocation(line: 1360, column: 41, scope: !3433)
!3438 = !DILocation(line: 1360, column: 44, scope: !3433)
!3439 = !DILocation(line: 1360, column: 11, scope: !3433)
!3440 = !DILocation(line: 1360, column: 3, scope: !3433)
!3441 = !DILocation(line: 1362, column: 37, scope: !3433)
!3442 = !DILocation(line: 1362, column: 40, scope: !3433)
!3443 = !DILocation(line: 1362, column: 11, scope: !3433)
!3444 = !DILocation(line: 1362, column: 3, scope: !3433)
!3445 = !DILocation(line: 1364, column: 22, scope: !3433)
!3446 = !DILocation(line: 1364, column: 25, scope: !3433)
!3447 = !DILocation(line: 1366, column: 7, scope: !3433)
!3448 = !DILocation(line: 1366, column: 12, scope: !3433)
!3449 = !DILocation(line: 1366, column: 28, scope: !3433)
!3450 = !DILocation(line: 1364, column: 3, scope: !3433)
!3451 = !DILocation(line: 1367, column: 4, scope: !3433)
!3452 = !DILocation(line: 1367, column: 10, scope: !3433)
!3453 = !DILocation(line: 1368, column: 3, scope: !3433)
!3454 = !DILocation(line: 1370, column: 1, scope: !563)
!3455 = !DILocalVariable(name: "a", arg: 1, scope: !555, file: !1, line: 1117, type: !4)
!3456 = !DILocation(line: 1117, column: 42, scope: !555)
!3457 = !DILocalVariable(name: "bytes", arg: 2, scope: !555, file: !1, line: 1117, type: !45)
!3458 = !DILocation(line: 1117, column: 52, scope: !555)
!3459 = !DILocalVariable(name: "cab", scope: !555, file: !1, line: 1119, type: !292)
!3460 = !DILocation(line: 1119, column: 14, scope: !555)
!3461 = !DILocation(line: 1119, column: 35, scope: !555)
!3462 = !DILocation(line: 1119, column: 38, scope: !555)
!3463 = !DILocation(line: 1119, column: 46, scope: !555)
!3464 = !DILocation(line: 1119, column: 20, scope: !555)
!3465 = !DILocalVariable(name: "cfdata", scope: !555, file: !1, line: 1120, type: !350)
!3466 = !DILocation(line: 1120, column: 17, scope: !555)
!3467 = !DILocation(line: 1120, column: 26, scope: !555)
!3468 = !DILocation(line: 1120, column: 31, scope: !555)
!3469 = !DILocalVariable(name: "p", scope: !555, file: !1, line: 1121, type: !436)
!3470 = !DILocation(line: 1121, column: 23, scope: !555)
!3471 = !DILocalVariable(name: "sumbytes", scope: !555, file: !1, line: 1122, type: !45)
!3472 = !DILocation(line: 1122, column: 9, scope: !555)
!3473 = !DILocation(line: 1124, column: 6, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !555, file: !1, line: 1124, column: 6)
!3475 = !DILocation(line: 1124, column: 14, scope: !3474)
!3476 = !DILocation(line: 1124, column: 18, scope: !3474)
!3477 = !DILocation(line: 1124, column: 23, scope: !3474)
!3478 = !DILocation(line: 1124, column: 26, scope: !3479)
!3479 = !DILexicalBlockFile(scope: !3474, file: !1, discriminator: 1)
!3480 = !DILocation(line: 1124, column: 34, scope: !3479)
!3481 = !DILocation(line: 1124, column: 42, scope: !3479)
!3482 = !DILocation(line: 1124, column: 6, scope: !3479)
!3483 = !DILocation(line: 1125, column: 3, scope: !3474)
!3484 = !DILocation(line: 1130, column: 6, scope: !555)
!3485 = !DILocation(line: 1130, column: 14, scope: !555)
!3486 = !DILocation(line: 1130, column: 4, scope: !555)
!3487 = !DILocation(line: 1131, column: 13, scope: !555)
!3488 = !DILocation(line: 1131, column: 11, scope: !555)
!3489 = !DILocation(line: 1132, column: 6, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !555, file: !1, line: 1132, column: 6)
!3491 = !DILocation(line: 1132, column: 14, scope: !3490)
!3492 = !DILocation(line: 1132, column: 6, scope: !555)
!3493 = !DILocation(line: 1133, column: 3, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3490, file: !1, line: 1132, column: 31)
!3495 = !DILocation(line: 1133, column: 10, scope: !3496)
!3496 = !DILexicalBlockFile(scope: !3494, file: !1, discriminator: 1)
!3497 = !DILocation(line: 1133, column: 18, scope: !3496)
!3498 = !DILocation(line: 1133, column: 34, scope: !3496)
!3499 = !DILocation(line: 1133, column: 38, scope: !3496)
!3500 = !DILocation(line: 1133, column: 41, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !3494, file: !1, discriminator: 2)
!3502 = !DILocation(line: 1133, column: 50, scope: !3501)
!3503 = !DILocation(line: 1133, column: 3, scope: !3504)
!3504 = !DILexicalBlockFile(scope: !3494, file: !1, discriminator: 3)
!3505 = !DILocation(line: 1135, column: 39, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3494, file: !1, line: 1133, column: 55)
!3507 = !DILocation(line: 1135, column: 37, scope: !3506)
!3508 = !DILocation(line: 1135, column: 8, scope: !3506)
!3509 = !DILocation(line: 1135, column: 16, scope: !3506)
!3510 = !DILocation(line: 1135, column: 31, scope: !3506)
!3511 = !DILocation(line: 1134, column: 4, scope: !3506)
!3512 = !DILocation(line: 1134, column: 12, scope: !3506)
!3513 = !DILocation(line: 1135, column: 35, scope: !3506)
!3514 = !DILocation(line: 1136, column: 12, scope: !3506)
!3515 = !DILocation(line: 1133, column: 3, scope: !3516)
!3516 = !DILexicalBlockFile(scope: !3494, file: !1, discriminator: 4)
!3517 = !DILocation(line: 1138, column: 7, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3494, file: !1, line: 1138, column: 7)
!3519 = !DILocation(line: 1138, column: 15, scope: !3518)
!3520 = !DILocation(line: 1138, column: 31, scope: !3518)
!3521 = !DILocation(line: 1138, column: 7, scope: !3494)
!3522 = !DILocation(line: 1140, column: 8, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3518, file: !1, line: 1138, column: 37)
!3524 = !DILocation(line: 1140, column: 16, scope: !3523)
!3525 = !DILocation(line: 1140, column: 30, scope: !3523)
!3526 = !DILocation(line: 1140, column: 38, scope: !3523)
!3527 = !DILocation(line: 1139, column: 29, scope: !3523)
!3528 = !DILocation(line: 1139, column: 4, scope: !3523)
!3529 = !DILocation(line: 1139, column: 12, scope: !3523)
!3530 = !DILocation(line: 1139, column: 27, scope: !3523)
!3531 = !DILocation(line: 1141, column: 4, scope: !3523)
!3532 = !DILocation(line: 1141, column: 12, scope: !3523)
!3533 = !DILocation(line: 1141, column: 28, scope: !3523)
!3534 = !DILocation(line: 1142, column: 3, scope: !3523)
!3535 = !DILocation(line: 1143, column: 2, scope: !3494)
!3536 = !DILocation(line: 1144, column: 6, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !555, file: !1, line: 1144, column: 6)
!3538 = !DILocation(line: 1144, column: 6, scope: !555)
!3539 = !DILocalVariable(name: "odd", scope: !3540, file: !1, line: 1145, type: !23)
!3540 = distinct !DILexicalBlock(scope: !3537, file: !1, line: 1144, column: 16)
!3541 = !DILocation(line: 1145, column: 7, scope: !3540)
!3542 = !DILocation(line: 1145, column: 13, scope: !3540)
!3543 = !DILocation(line: 1145, column: 22, scope: !3540)
!3544 = !DILocation(line: 1146, column: 7, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3540, file: !1, line: 1146, column: 7)
!3546 = !DILocation(line: 1146, column: 18, scope: !3545)
!3547 = !DILocation(line: 1146, column: 16, scope: !3545)
!3548 = !DILocation(line: 1146, column: 22, scope: !3545)
!3549 = !DILocation(line: 1146, column: 7, scope: !3540)
!3550 = !DILocation(line: 1148, column: 8, scope: !3545)
!3551 = !DILocation(line: 1148, column: 11, scope: !3545)
!3552 = !DILocation(line: 1148, column: 22, scope: !3545)
!3553 = !DILocation(line: 1148, column: 20, scope: !3545)
!3554 = !DILocation(line: 1148, column: 27, scope: !3545)
!3555 = !DILocation(line: 1148, column: 35, scope: !3545)
!3556 = !DILocation(line: 1147, column: 29, scope: !3545)
!3557 = !DILocation(line: 1147, column: 4, scope: !3545)
!3558 = !DILocation(line: 1147, column: 12, scope: !3545)
!3559 = !DILocation(line: 1147, column: 27, scope: !3545)
!3560 = !DILocation(line: 1149, column: 7, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3540, file: !1, line: 1149, column: 7)
!3562 = !DILocation(line: 1149, column: 7, scope: !3540)
!3563 = !DILocation(line: 1150, column: 11, scope: !3561)
!3564 = !DILocation(line: 1150, column: 19, scope: !3561)
!3565 = !DILocation(line: 1150, column: 4, scope: !3561)
!3566 = !DILocation(line: 1150, column: 30, scope: !3561)
!3567 = !DILocation(line: 1150, column: 34, scope: !3561)
!3568 = !DILocation(line: 1150, column: 32, scope: !3561)
!3569 = !DILocation(line: 1150, column: 45, scope: !3561)
!3570 = !DILocation(line: 1150, column: 43, scope: !3561)
!3571 = !DILocation(line: 1150, column: 50, scope: !3561)
!3572 = !DILocation(line: 1151, column: 29, scope: !3540)
!3573 = !DILocation(line: 1151, column: 3, scope: !3540)
!3574 = !DILocation(line: 1151, column: 11, scope: !3540)
!3575 = !DILocation(line: 1151, column: 27, scope: !3540)
!3576 = !DILocation(line: 1152, column: 2, scope: !3540)
!3577 = !DILocation(line: 1153, column: 2, scope: !555)
!3578 = !DILocation(line: 1153, column: 10, scope: !555)
!3579 = !DILocation(line: 1153, column: 18, scope: !555)
!3580 = !DILocation(line: 1154, column: 1, scope: !555)
!3581 = !DILocation(line: 1154, column: 1, scope: !3582)
!3582 = !DILexicalBlockFile(scope: !555, file: !1, discriminator: 1)
!3583 = !DILocalVariable(name: "a", arg: 1, scope: !561, file: !1, line: 1157, type: !4)
!3584 = !DILocation(line: 1157, column: 42, scope: !561)
!3585 = !DILocalVariable(name: "cab", scope: !561, file: !1, line: 1159, type: !292)
!3586 = !DILocation(line: 1159, column: 14, scope: !561)
!3587 = !DILocation(line: 1159, column: 35, scope: !561)
!3588 = !DILocation(line: 1159, column: 38, scope: !561)
!3589 = !DILocation(line: 1159, column: 46, scope: !561)
!3590 = !DILocation(line: 1159, column: 20, scope: !561)
!3591 = !DILocalVariable(name: "cfdata", scope: !561, file: !1, line: 1160, type: !350)
!3592 = !DILocation(line: 1160, column: 17, scope: !561)
!3593 = !DILocation(line: 1160, column: 26, scope: !561)
!3594 = !DILocation(line: 1160, column: 31, scope: !561)
!3595 = !DILocalVariable(name: "l", scope: !561, file: !1, line: 1161, type: !23)
!3596 = !DILocation(line: 1161, column: 6, scope: !561)
!3597 = !DILocation(line: 1164, column: 6, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !561, file: !1, line: 1164, column: 6)
!3599 = !DILocation(line: 1164, column: 14, scope: !3598)
!3600 = !DILocation(line: 1164, column: 18, scope: !3598)
!3601 = !DILocation(line: 1164, column: 6, scope: !561)
!3602 = !DILocation(line: 1165, column: 3, scope: !3598)
!3603 = !DILocation(line: 1170, column: 6, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !561, file: !1, line: 1170, column: 6)
!3605 = !DILocation(line: 1170, column: 14, scope: !3604)
!3606 = !DILocation(line: 1170, column: 6, scope: !561)
!3607 = !DILocation(line: 1172, column: 27, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3604, file: !1, line: 1170, column: 31)
!3609 = !DILocation(line: 1172, column: 35, scope: !3608)
!3610 = !DILocation(line: 1173, column: 10, scope: !3608)
!3611 = !DILocation(line: 1173, column: 18, scope: !3608)
!3612 = !DILocation(line: 1173, column: 35, scope: !3608)
!3613 = !DILocation(line: 1173, column: 43, scope: !3608)
!3614 = !DILocation(line: 1172, column: 7, scope: !3608)
!3615 = !DILocation(line: 1171, column: 3, scope: !3608)
!3616 = !DILocation(line: 1171, column: 11, scope: !3608)
!3617 = !DILocation(line: 1171, column: 26, scope: !3608)
!3618 = !DILocation(line: 1174, column: 3, scope: !3608)
!3619 = !DILocation(line: 1174, column: 11, scope: !3608)
!3620 = !DILocation(line: 1174, column: 27, scope: !3608)
!3621 = !DILocation(line: 1175, column: 2, scope: !3608)
!3622 = !DILocation(line: 1177, column: 4, scope: !561)
!3623 = !DILocation(line: 1178, column: 6, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !561, file: !1, line: 1178, column: 6)
!3625 = !DILocation(line: 1178, column: 11, scope: !3624)
!3626 = !DILocation(line: 1178, column: 20, scope: !3624)
!3627 = !DILocation(line: 1178, column: 26, scope: !3624)
!3628 = !DILocation(line: 1178, column: 6, scope: !561)
!3629 = !DILocation(line: 1179, column: 8, scope: !3624)
!3630 = !DILocation(line: 1179, column: 13, scope: !3624)
!3631 = !DILocation(line: 1179, column: 22, scope: !3624)
!3632 = !DILocation(line: 1179, column: 5, scope: !3624)
!3633 = !DILocation(line: 1179, column: 3, scope: !3624)
!3634 = !DILocation(line: 1181, column: 6, scope: !561)
!3635 = !DILocation(line: 1181, column: 14, scope: !561)
!3636 = !DILocation(line: 1181, column: 23, scope: !561)
!3637 = !DILocation(line: 1181, column: 40, scope: !561)
!3638 = !DILocation(line: 1181, column: 43, scope: !561)
!3639 = !DILocation(line: 1181, column: 51, scope: !561)
!3640 = !DILocation(line: 1180, column: 27, scope: !561)
!3641 = !DILocation(line: 1180, column: 2, scope: !561)
!3642 = !DILocation(line: 1180, column: 10, scope: !561)
!3643 = !DILocation(line: 1180, column: 25, scope: !561)
!3644 = !DILocation(line: 1182, column: 6, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !561, file: !1, line: 1182, column: 6)
!3646 = !DILocation(line: 1182, column: 14, scope: !3645)
!3647 = !DILocation(line: 1182, column: 32, scope: !3645)
!3648 = !DILocation(line: 1182, column: 40, scope: !3645)
!3649 = !DILocation(line: 1182, column: 29, scope: !3645)
!3650 = !DILocation(line: 1182, column: 6, scope: !561)
!3651 = !DILocation(line: 1183, column: 22, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3645, file: !1, line: 1182, column: 45)
!3653 = !DILocation(line: 1183, column: 25, scope: !3652)
!3654 = !DILocation(line: 1185, column: 7, scope: !3652)
!3655 = !DILocation(line: 1185, column: 12, scope: !3652)
!3656 = !DILocation(line: 1185, column: 28, scope: !3652)
!3657 = !DILocation(line: 1185, column: 41, scope: !3652)
!3658 = !DILocation(line: 1186, column: 7, scope: !3652)
!3659 = !DILocation(line: 1186, column: 15, scope: !3652)
!3660 = !DILocation(line: 1186, column: 20, scope: !3652)
!3661 = !DILocation(line: 1186, column: 28, scope: !3652)
!3662 = !DILocation(line: 1187, column: 7, scope: !3652)
!3663 = !DILocation(line: 1187, column: 15, scope: !3652)
!3664 = !DILocation(line: 1183, column: 3, scope: !3652)
!3665 = !DILocation(line: 1188, column: 3, scope: !3652)
!3666 = !DILocation(line: 1190, column: 2, scope: !561)
!3667 = !DILocation(line: 1191, column: 1, scope: !561)
!3668 = !DILocalVariable(name: "p", arg: 1, scope: !558, file: !1, line: 1071, type: !43)
!3669 = !DILocation(line: 1071, column: 35, scope: !558)
!3670 = !DILocalVariable(name: "bytes", arg: 2, scope: !558, file: !1, line: 1071, type: !45)
!3671 = !DILocation(line: 1071, column: 45, scope: !558)
!3672 = !DILocalVariable(name: "seed", arg: 3, scope: !558, file: !1, line: 1071, type: !305)
!3673 = !DILocation(line: 1071, column: 61, scope: !558)
!3674 = !DILocalVariable(name: "b", scope: !558, file: !1, line: 1073, type: !436)
!3675 = !DILocation(line: 1073, column: 23, scope: !558)
!3676 = !DILocalVariable(name: "u32num", scope: !558, file: !1, line: 1074, type: !13)
!3677 = !DILocation(line: 1074, column: 11, scope: !558)
!3678 = !DILocalVariable(name: "sum", scope: !558, file: !1, line: 1075, type: !305)
!3679 = !DILocation(line: 1075, column: 11, scope: !558)
!3680 = !DILocation(line: 1077, column: 21, scope: !558)
!3681 = !DILocation(line: 1077, column: 11, scope: !558)
!3682 = !DILocation(line: 1077, column: 27, scope: !558)
!3683 = !DILocation(line: 1077, column: 9, scope: !558)
!3684 = !DILocation(line: 1078, column: 8, scope: !558)
!3685 = !DILocation(line: 1078, column: 6, scope: !558)
!3686 = !DILocation(line: 1079, column: 6, scope: !558)
!3687 = !DILocation(line: 1079, column: 4, scope: !558)
!3688 = !DILocation(line: 1080, column: 2, scope: !558)
!3689 = !DILocation(line: 1080, column: 8, scope: !3690)
!3690 = !DILexicalBlockFile(scope: !3691, file: !1, discriminator: 1)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !1, line: 1080, column: 2)
!3692 = distinct !DILexicalBlock(scope: !558, file: !1, line: 1080, column: 2)
!3693 = !DILocation(line: 1080, column: 15, scope: !3690)
!3694 = !DILocation(line: 1080, column: 2, scope: !3690)
!3695 = !DILocation(line: 1081, column: 26, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3691, file: !1, line: 1080, column: 30)
!3697 = !DILocation(line: 1081, column: 10, scope: !3696)
!3698 = !DILocation(line: 1081, column: 7, scope: !3696)
!3699 = !DILocation(line: 1082, column: 5, scope: !3696)
!3700 = !DILocation(line: 1083, column: 2, scope: !3696)
!3701 = !DILocation(line: 1080, column: 20, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !3691, file: !1, discriminator: 2)
!3703 = !DILocation(line: 1080, column: 2, scope: !3702)
!3704 = !DILocation(line: 1084, column: 10, scope: !558)
!3705 = !DILocation(line: 1084, column: 2, scope: !558)
!3706 = !DILocalVariable(name: "p", arg: 1, scope: !562, file: !1, line: 1088, type: !43)
!3707 = !DILocation(line: 1088, column: 33, scope: !562)
!3708 = !DILocalVariable(name: "bytes", arg: 2, scope: !562, file: !1, line: 1088, type: !45)
!3709 = !DILocation(line: 1088, column: 43, scope: !562)
!3710 = !DILocalVariable(name: "seed", arg: 3, scope: !562, file: !1, line: 1088, type: !305)
!3711 = !DILocation(line: 1088, column: 59, scope: !562)
!3712 = !DILocalVariable(name: "b", scope: !562, file: !1, line: 1090, type: !436)
!3713 = !DILocation(line: 1090, column: 23, scope: !562)
!3714 = !DILocalVariable(name: "sum", scope: !562, file: !1, line: 1091, type: !305)
!3715 = !DILocation(line: 1091, column: 11, scope: !562)
!3716 = !DILocalVariable(name: "t", scope: !562, file: !1, line: 1092, type: !305)
!3717 = !DILocation(line: 1092, column: 11, scope: !562)
!3718 = !DILocation(line: 1094, column: 30, scope: !562)
!3719 = !DILocation(line: 1094, column: 33, scope: !562)
!3720 = !DILocation(line: 1094, column: 40, scope: !562)
!3721 = !DILocation(line: 1094, column: 8, scope: !562)
!3722 = !DILocation(line: 1094, column: 6, scope: !562)
!3723 = !DILocation(line: 1095, column: 6, scope: !562)
!3724 = !DILocation(line: 1095, column: 4, scope: !562)
!3725 = !DILocation(line: 1096, column: 7, scope: !562)
!3726 = !DILocation(line: 1096, column: 13, scope: !562)
!3727 = !DILocation(line: 1096, column: 4, scope: !562)
!3728 = !DILocation(line: 1097, column: 4, scope: !562)
!3729 = !DILocation(line: 1098, column: 10, scope: !562)
!3730 = !DILocation(line: 1098, column: 16, scope: !562)
!3731 = !DILocation(line: 1098, column: 2, scope: !562)
!3732 = !DILocation(line: 1100, column: 22, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !562, file: !1, line: 1098, column: 21)
!3734 = !DILocation(line: 1100, column: 20, scope: !3733)
!3735 = !DILocation(line: 1100, column: 9, scope: !3733)
!3736 = !DILocation(line: 1100, column: 27, scope: !3733)
!3737 = !DILocation(line: 1100, column: 5, scope: !3733)
!3738 = !DILocation(line: 1100, column: 3, scope: !3733)
!3739 = !DILocation(line: 1103, column: 22, scope: !3733)
!3740 = !DILocation(line: 1103, column: 20, scope: !3733)
!3741 = !DILocation(line: 1103, column: 9, scope: !3733)
!3742 = !DILocation(line: 1103, column: 27, scope: !3733)
!3743 = !DILocation(line: 1103, column: 5, scope: !3733)
!3744 = !DILocation(line: 1103, column: 3, scope: !3733)
!3745 = !DILocation(line: 1106, column: 9, scope: !3733)
!3746 = !DILocation(line: 1106, column: 8, scope: !3733)
!3747 = !DILocation(line: 1106, column: 5, scope: !3733)
!3748 = !DILocation(line: 1106, column: 3, scope: !3733)
!3749 = !DILocation(line: 1109, column: 3, scope: !3733)
!3750 = !DILocation(line: 1111, column: 9, scope: !562)
!3751 = !DILocation(line: 1111, column: 6, scope: !562)
!3752 = !DILocation(line: 1113, column: 10, scope: !562)
!3753 = !DILocation(line: 1113, column: 2, scope: !562)
!3754 = !DILocalVariable(name: "a", arg: 1, scope: !566, file: !1, line: 1376, type: !4)
!3755 = !DILocation(line: 1376, column: 49, scope: !566)
!3756 = !DILocalVariable(name: "avail", arg: 2, scope: !566, file: !1, line: 1376, type: !541)
!3757 = !DILocation(line: 1376, column: 61, scope: !566)
!3758 = !DILocalVariable(name: "cab", scope: !566, file: !1, line: 1378, type: !292)
!3759 = !DILocation(line: 1378, column: 14, scope: !566)
!3760 = !DILocation(line: 1378, column: 35, scope: !566)
!3761 = !DILocation(line: 1378, column: 38, scope: !566)
!3762 = !DILocation(line: 1378, column: 46, scope: !566)
!3763 = !DILocation(line: 1378, column: 20, scope: !566)
!3764 = !DILocalVariable(name: "cfdata", scope: !566, file: !1, line: 1379, type: !350)
!3765 = !DILocation(line: 1379, column: 17, scope: !566)
!3766 = !DILocalVariable(name: "d", scope: !566, file: !1, line: 1380, type: !43)
!3767 = !DILocation(line: 1380, column: 14, scope: !566)
!3768 = !DILocation(line: 1382, column: 11, scope: !566)
!3769 = !DILocation(line: 1382, column: 16, scope: !566)
!3770 = !DILocation(line: 1382, column: 9, scope: !566)
!3771 = !DILocation(line: 1390, column: 27, scope: !566)
!3772 = !DILocation(line: 1390, column: 33, scope: !566)
!3773 = !DILocation(line: 1390, column: 6, scope: !566)
!3774 = !DILocation(line: 1390, column: 4, scope: !566)
!3775 = !DILocation(line: 1391, column: 7, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !566, file: !1, line: 1391, column: 6)
!3777 = !DILocation(line: 1391, column: 6, scope: !3776)
!3778 = !DILocation(line: 1391, column: 13, scope: !3776)
!3779 = !DILocation(line: 1391, column: 6, scope: !566)
!3780 = !DILocation(line: 1392, column: 28, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3776, file: !1, line: 1391, column: 19)
!3782 = !DILocation(line: 1392, column: 12, scope: !3781)
!3783 = !DILocation(line: 1392, column: 4, scope: !3781)
!3784 = !DILocation(line: 1392, column: 10, scope: !3781)
!3785 = !DILocation(line: 1393, column: 3, scope: !3781)
!3786 = !DILocation(line: 1395, column: 7, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !566, file: !1, line: 1395, column: 6)
!3788 = !DILocation(line: 1395, column: 6, scope: !3787)
!3789 = !DILocation(line: 1395, column: 15, scope: !3787)
!3790 = !DILocation(line: 1395, column: 23, scope: !3787)
!3791 = !DILocation(line: 1395, column: 13, scope: !3787)
!3792 = !DILocation(line: 1395, column: 6, scope: !566)
!3793 = !DILocation(line: 1396, column: 12, scope: !3787)
!3794 = !DILocation(line: 1396, column: 20, scope: !3787)
!3795 = !DILocation(line: 1396, column: 4, scope: !3787)
!3796 = !DILocation(line: 1396, column: 10, scope: !3787)
!3797 = !DILocation(line: 1396, column: 3, scope: !3787)
!3798 = !DILocation(line: 1397, column: 31, scope: !566)
!3799 = !DILocation(line: 1397, column: 39, scope: !566)
!3800 = !DILocation(line: 1397, column: 2, scope: !566)
!3801 = !DILocation(line: 1397, column: 10, scope: !566)
!3802 = !DILocation(line: 1397, column: 29, scope: !566)
!3803 = !DILocation(line: 1398, column: 24, scope: !566)
!3804 = !DILocation(line: 1398, column: 23, scope: !566)
!3805 = !DILocation(line: 1398, column: 2, scope: !566)
!3806 = !DILocation(line: 1398, column: 10, scope: !566)
!3807 = !DILocation(line: 1398, column: 21, scope: !566)
!3808 = !DILocation(line: 1399, column: 20, scope: !566)
!3809 = !DILocation(line: 1399, column: 2, scope: !566)
!3810 = !DILocation(line: 1399, column: 10, scope: !566)
!3811 = !DILocation(line: 1399, column: 18, scope: !566)
!3812 = !DILocation(line: 1400, column: 10, scope: !566)
!3813 = !DILocation(line: 1400, column: 2, scope: !566)
!3814 = !DILocation(line: 1401, column: 1, scope: !566)
!3815 = !DILocalVariable(name: "a", arg: 1, scope: !567, file: !1, line: 1408, type: !4)
!3816 = !DILocation(line: 1408, column: 52, scope: !567)
!3817 = !DILocalVariable(name: "avail", arg: 2, scope: !567, file: !1, line: 1408, type: !541)
!3818 = !DILocation(line: 1408, column: 64, scope: !567)
!3819 = !DILocalVariable(name: "cab", scope: !567, file: !1, line: 1410, type: !292)
!3820 = !DILocation(line: 1410, column: 14, scope: !567)
!3821 = !DILocation(line: 1410, column: 35, scope: !567)
!3822 = !DILocation(line: 1410, column: 38, scope: !567)
!3823 = !DILocation(line: 1410, column: 46, scope: !567)
!3824 = !DILocation(line: 1410, column: 20, scope: !567)
!3825 = !DILocalVariable(name: "cfdata", scope: !567, file: !1, line: 1411, type: !350)
!3826 = !DILocation(line: 1411, column: 17, scope: !567)
!3827 = !DILocalVariable(name: "d", scope: !567, file: !1, line: 1412, type: !43)
!3828 = !DILocation(line: 1412, column: 14, scope: !567)
!3829 = !DILocalVariable(name: "r", scope: !567, file: !1, line: 1413, type: !23)
!3830 = !DILocation(line: 1413, column: 6, scope: !567)
!3831 = !DILocalVariable(name: "mszip", scope: !567, file: !1, line: 1413, type: !23)
!3832 = !DILocation(line: 1413, column: 9, scope: !567)
!3833 = !DILocalVariable(name: "uavail", scope: !567, file: !1, line: 1414, type: !307)
!3834 = !DILocation(line: 1414, column: 11, scope: !567)
!3835 = !DILocalVariable(name: "eod", scope: !567, file: !1, line: 1415, type: !82)
!3836 = !DILocation(line: 1415, column: 7, scope: !567)
!3837 = !DILocation(line: 1417, column: 11, scope: !567)
!3838 = !DILocation(line: 1417, column: 16, scope: !567)
!3839 = !DILocation(line: 1417, column: 9, scope: !567)
!3840 = !DILocation(line: 1419, column: 6, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1419, column: 6)
!3842 = !DILocation(line: 1419, column: 11, scope: !3841)
!3843 = !DILocation(line: 1419, column: 31, scope: !3841)
!3844 = !DILocation(line: 1419, column: 6, scope: !567)
!3845 = !DILocation(line: 1420, column: 3, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3841, file: !1, line: 1419, column: 40)
!3847 = !DILocation(line: 1420, column: 8, scope: !3846)
!3848 = !DILocation(line: 1420, column: 33, scope: !3846)
!3849 = !DILocation(line: 1422, column: 33, scope: !3846)
!3850 = !DILocation(line: 1422, column: 38, scope: !3846)
!3851 = !DILocation(line: 1422, column: 26, scope: !3846)
!3852 = !DILocation(line: 1421, column: 3, scope: !3846)
!3853 = !DILocation(line: 1421, column: 8, scope: !3846)
!3854 = !DILocation(line: 1422, column: 7, scope: !3846)
!3855 = !DILocation(line: 1423, column: 7, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3846, file: !1, line: 1423, column: 7)
!3857 = !DILocation(line: 1423, column: 12, scope: !3856)
!3858 = !DILocation(line: 1423, column: 32, scope: !3856)
!3859 = !DILocation(line: 1423, column: 7, scope: !3846)
!3860 = !DILocation(line: 1424, column: 23, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3856, file: !1, line: 1423, column: 41)
!3862 = !DILocation(line: 1424, column: 26, scope: !3861)
!3863 = !DILocation(line: 1424, column: 4, scope: !3861)
!3864 = !DILocation(line: 1426, column: 5, scope: !3861)
!3865 = !DILocation(line: 1426, column: 11, scope: !3861)
!3866 = !DILocation(line: 1427, column: 4, scope: !3861)
!3867 = !DILocation(line: 1429, column: 2, scope: !3846)
!3868 = !DILocation(line: 1431, column: 11, scope: !567)
!3869 = !DILocation(line: 1431, column: 19, scope: !567)
!3870 = !DILocation(line: 1431, column: 9, scope: !567)
!3871 = !DILocation(line: 1432, column: 6, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1432, column: 6)
!3873 = !DILocation(line: 1432, column: 16, scope: !3872)
!3874 = !DILocation(line: 1432, column: 24, scope: !3872)
!3875 = !DILocation(line: 1432, column: 13, scope: !3872)
!3876 = !DILocation(line: 1432, column: 6, scope: !567)
!3877 = !DILocation(line: 1433, column: 7, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3872, file: !1, line: 1432, column: 43)
!3879 = !DILocation(line: 1433, column: 12, scope: !3878)
!3880 = !DILocation(line: 1433, column: 34, scope: !3878)
!3881 = !DILocation(line: 1433, column: 42, scope: !3878)
!3882 = !DILocation(line: 1433, column: 32, scope: !3878)
!3883 = !DILocation(line: 1433, column: 5, scope: !3878)
!3884 = !DILocation(line: 1434, column: 12, scope: !3878)
!3885 = !DILocation(line: 1434, column: 21, scope: !3878)
!3886 = !DILocation(line: 1434, column: 29, scope: !3878)
!3887 = !DILocation(line: 1434, column: 19, scope: !3878)
!3888 = !DILocation(line: 1434, column: 4, scope: !3878)
!3889 = !DILocation(line: 1434, column: 10, scope: !3878)
!3890 = !DILocation(line: 1435, column: 11, scope: !3878)
!3891 = !DILocation(line: 1435, column: 3, scope: !3878)
!3892 = !DILocation(line: 1438, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1438, column: 6)
!3894 = !DILocation(line: 1438, column: 12, scope: !3893)
!3895 = !DILocation(line: 1438, column: 28, scope: !3893)
!3896 = !DILocation(line: 1438, column: 6, scope: !567)
!3897 = !DILocation(line: 1439, column: 3, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3893, file: !1, line: 1438, column: 45)
!3899 = !DILocation(line: 1439, column: 8, scope: !3898)
!3900 = !DILocation(line: 1439, column: 15, scope: !3898)
!3901 = !DILocation(line: 1439, column: 23, scope: !3898)
!3902 = !DILocation(line: 1440, column: 3, scope: !3898)
!3903 = !DILocation(line: 1440, column: 8, scope: !3898)
!3904 = !DILocation(line: 1440, column: 15, scope: !3898)
!3905 = !DILocation(line: 1440, column: 24, scope: !3898)
!3906 = !DILocation(line: 1441, column: 3, scope: !3898)
!3907 = !DILocation(line: 1441, column: 8, scope: !3898)
!3908 = !DILocation(line: 1441, column: 15, scope: !3898)
!3909 = !DILocation(line: 1441, column: 24, scope: !3898)
!3910 = !DILocation(line: 1442, column: 3, scope: !3898)
!3911 = !DILocation(line: 1442, column: 8, scope: !3898)
!3912 = !DILocation(line: 1442, column: 15, scope: !3898)
!3913 = !DILocation(line: 1442, column: 24, scope: !3898)
!3914 = !DILocation(line: 1443, column: 3, scope: !3898)
!3915 = !DILocation(line: 1443, column: 8, scope: !3898)
!3916 = !DILocation(line: 1443, column: 15, scope: !3898)
!3917 = !DILocation(line: 1443, column: 25, scope: !3898)
!3918 = !DILocation(line: 1444, column: 3, scope: !3898)
!3919 = !DILocation(line: 1444, column: 8, scope: !3898)
!3920 = !DILocation(line: 1444, column: 15, scope: !3898)
!3921 = !DILocation(line: 1444, column: 25, scope: !3898)
!3922 = !DILocation(line: 1445, column: 7, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3898, file: !1, line: 1445, column: 7)
!3924 = !DILocation(line: 1445, column: 12, scope: !3923)
!3925 = !DILocation(line: 1445, column: 7, scope: !3898)
!3926 = !DILocation(line: 1446, column: 22, scope: !3923)
!3927 = !DILocation(line: 1446, column: 27, scope: !3923)
!3928 = !DILocation(line: 1446, column: 8, scope: !3923)
!3929 = !DILocation(line: 1446, column: 6, scope: !3923)
!3930 = !DILocation(line: 1446, column: 4, scope: !3923)
!3931 = !DILocation(line: 1448, column: 8, scope: !3923)
!3932 = !DILocation(line: 1448, column: 6, scope: !3923)
!3933 = !DILocation(line: 1450, column: 7, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3898, file: !1, line: 1450, column: 7)
!3935 = !DILocation(line: 1450, column: 9, scope: !3934)
!3936 = !DILocation(line: 1450, column: 7, scope: !3898)
!3937 = !DILocation(line: 1451, column: 23, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3934, file: !1, line: 1450, column: 18)
!3939 = !DILocation(line: 1451, column: 26, scope: !3938)
!3940 = !DILocation(line: 1451, column: 4, scope: !3938)
!3941 = !DILocation(line: 1453, column: 5, scope: !3938)
!3942 = !DILocation(line: 1453, column: 11, scope: !3938)
!3943 = !DILocation(line: 1454, column: 4, scope: !3938)
!3944 = !DILocation(line: 1457, column: 3, scope: !3898)
!3945 = !DILocation(line: 1457, column: 8, scope: !3898)
!3946 = !DILocation(line: 1457, column: 21, scope: !3898)
!3947 = !DILocation(line: 1459, column: 3, scope: !3898)
!3948 = !DILocation(line: 1459, column: 8, scope: !3898)
!3949 = !DILocation(line: 1459, column: 24, scope: !3898)
!3950 = !DILocation(line: 1459, column: 40, scope: !3898)
!3951 = !DILocation(line: 1460, column: 2, scope: !3898)
!3952 = !DILocation(line: 1462, column: 6, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1462, column: 6)
!3954 = !DILocation(line: 1462, column: 14, scope: !3953)
!3955 = !DILocation(line: 1462, column: 44, scope: !3953)
!3956 = !DILocation(line: 1462, column: 52, scope: !3953)
!3957 = !DILocation(line: 1462, column: 41, scope: !3953)
!3958 = !DILocation(line: 1462, column: 6, scope: !567)
!3959 = !DILocation(line: 1463, column: 9, scope: !3953)
!3960 = !DILocation(line: 1463, column: 3, scope: !3953)
!3961 = !DILocation(line: 1465, column: 9, scope: !3953)
!3962 = !DILocation(line: 1466, column: 6, scope: !567)
!3963 = !DILocation(line: 1467, column: 26, scope: !567)
!3964 = !DILocation(line: 1467, column: 2, scope: !567)
!3965 = !DILocation(line: 1467, column: 7, scope: !567)
!3966 = !DILocation(line: 1467, column: 14, scope: !567)
!3967 = !DILocation(line: 1467, column: 24, scope: !567)
!3968 = !DILocation(line: 1471, column: 2, scope: !567)
!3969 = !DILocation(line: 1471, column: 10, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !567, file: !1, discriminator: 1)
!3971 = !DILocation(line: 1471, column: 14, scope: !3970)
!3972 = !DILocation(line: 1471, column: 17, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !567, file: !1, discriminator: 2)
!3974 = !DILocation(line: 1471, column: 22, scope: !3973)
!3975 = !DILocation(line: 1471, column: 29, scope: !3973)
!3976 = !DILocation(line: 1471, column: 41, scope: !3973)
!3977 = !DILocation(line: 1471, column: 49, scope: !3973)
!3978 = !DILocation(line: 1471, column: 39, scope: !3973)
!3979 = !DILocation(line: 1471, column: 2, scope: !3980)
!3980 = !DILexicalBlockFile(scope: !567, file: !1, discriminator: 3)
!3981 = !DILocalVariable(name: "bytes_avail", scope: !3982, file: !1, line: 1472, type: !38)
!3982 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1471, column: 68)
!3983 = !DILocation(line: 1472, column: 11, scope: !3982)
!3984 = !DILocation(line: 1475, column: 7, scope: !3982)
!3985 = !DILocation(line: 1475, column: 12, scope: !3982)
!3986 = !DILocation(line: 1475, column: 34, scope: !3982)
!3987 = !DILocation(line: 1475, column: 39, scope: !3982)
!3988 = !DILocation(line: 1475, column: 46, scope: !3982)
!3989 = !DILocation(line: 1475, column: 32, scope: !3982)
!3990 = !DILocation(line: 1474, column: 3, scope: !3982)
!3991 = !DILocation(line: 1474, column: 8, scope: !3982)
!3992 = !DILocation(line: 1474, column: 15, scope: !3982)
!3993 = !DILocation(line: 1474, column: 24, scope: !3982)
!3994 = !DILocation(line: 1477, column: 7, scope: !3982)
!3995 = !DILocation(line: 1477, column: 15, scope: !3982)
!3996 = !DILocation(line: 1477, column: 35, scope: !3982)
!3997 = !DILocation(line: 1477, column: 40, scope: !3982)
!3998 = !DILocation(line: 1477, column: 47, scope: !3982)
!3999 = !DILocation(line: 1477, column: 33, scope: !3982)
!4000 = !DILocation(line: 1476, column: 3, scope: !3982)
!4001 = !DILocation(line: 1476, column: 8, scope: !3982)
!4002 = !DILocation(line: 1476, column: 15, scope: !3982)
!4003 = !DILocation(line: 1476, column: 25, scope: !3982)
!4004 = !DILocation(line: 1479, column: 28, scope: !3982)
!4005 = !DILocation(line: 1479, column: 7, scope: !3982)
!4006 = !DILocation(line: 1479, column: 5, scope: !3982)
!4007 = !DILocation(line: 1480, column: 7, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3982, file: !1, line: 1480, column: 7)
!4009 = !DILocation(line: 1480, column: 19, scope: !4008)
!4010 = !DILocation(line: 1480, column: 7, scope: !3982)
!4011 = !DILocation(line: 1481, column: 29, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !1, line: 1480, column: 25)
!4013 = !DILocation(line: 1481, column: 13, scope: !4012)
!4014 = !DILocation(line: 1481, column: 5, scope: !4012)
!4015 = !DILocation(line: 1481, column: 11, scope: !4012)
!4016 = !DILocation(line: 1482, column: 4, scope: !4012)
!4017 = !DILocation(line: 1484, column: 7, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3982, file: !1, line: 1484, column: 7)
!4019 = !DILocation(line: 1484, column: 21, scope: !4018)
!4020 = !DILocation(line: 1484, column: 29, scope: !4018)
!4021 = !DILocation(line: 1484, column: 19, scope: !4018)
!4022 = !DILocation(line: 1484, column: 7, scope: !3982)
!4023 = !DILocation(line: 1485, column: 18, scope: !4018)
!4024 = !DILocation(line: 1485, column: 26, scope: !4018)
!4025 = !DILocation(line: 1485, column: 16, scope: !4018)
!4026 = !DILocation(line: 1485, column: 4, scope: !4018)
!4027 = !DILocation(line: 1492, column: 45, scope: !3982)
!4028 = !DILocation(line: 1492, column: 34, scope: !3982)
!4029 = !DILocation(line: 1492, column: 25, scope: !3982)
!4030 = !DILocation(line: 1492, column: 3, scope: !3982)
!4031 = !DILocation(line: 1492, column: 8, scope: !3982)
!4032 = !DILocation(line: 1492, column: 15, scope: !3982)
!4033 = !DILocation(line: 1492, column: 23, scope: !3982)
!4034 = !DILocation(line: 1493, column: 32, scope: !3982)
!4035 = !DILocation(line: 1493, column: 26, scope: !3982)
!4036 = !DILocation(line: 1493, column: 3, scope: !3982)
!4037 = !DILocation(line: 1493, column: 8, scope: !3982)
!4038 = !DILocation(line: 1493, column: 15, scope: !3982)
!4039 = !DILocation(line: 1493, column: 24, scope: !3982)
!4040 = !DILocation(line: 1494, column: 3, scope: !3982)
!4041 = !DILocation(line: 1494, column: 8, scope: !3982)
!4042 = !DILocation(line: 1494, column: 15, scope: !3982)
!4043 = !DILocation(line: 1494, column: 24, scope: !3982)
!4044 = !DILocation(line: 1497, column: 7, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !3982, file: !1, line: 1497, column: 7)
!4046 = !DILocation(line: 1497, column: 13, scope: !4045)
!4047 = !DILocation(line: 1497, column: 7, scope: !3982)
!4048 = !DILocation(line: 1498, column: 8, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !1, line: 1498, column: 8)
!4050 = distinct !DILexicalBlock(scope: !4045, file: !1, line: 1497, column: 18)
!4051 = !DILocation(line: 1498, column: 20, scope: !4049)
!4052 = !DILocation(line: 1498, column: 8, scope: !4050)
!4053 = !DILocation(line: 1499, column: 5, scope: !4049)
!4054 = !DILocation(line: 1500, column: 8, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4050, file: !1, line: 1500, column: 8)
!4056 = !DILocation(line: 1500, column: 23, scope: !4055)
!4057 = !DILocation(line: 1500, column: 20, scope: !4055)
!4058 = !DILocation(line: 1500, column: 8, scope: !4050)
!4059 = !DILocation(line: 1501, column: 9, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !1, line: 1501, column: 9)
!4061 = distinct !DILexicalBlock(scope: !4055, file: !1, line: 1500, column: 30)
!4062 = !DILocation(line: 1501, column: 15, scope: !4060)
!4063 = !DILocation(line: 1501, column: 9, scope: !4061)
!4064 = !DILocation(line: 1502, column: 10, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 1502, column: 10)
!4066 = distinct !DILexicalBlock(scope: !4060, file: !1, line: 1501, column: 21)
!4067 = !DILocation(line: 1502, column: 15, scope: !4065)
!4068 = !DILocation(line: 1502, column: 22, scope: !4065)
!4069 = !DILocation(line: 1502, column: 33, scope: !4065)
!4070 = !DILocation(line: 1502, column: 10, scope: !4066)
!4071 = !DILocation(line: 1503, column: 7, scope: !4065)
!4072 = !DILocation(line: 1504, column: 10, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 1504, column: 10)
!4074 = !DILocation(line: 1504, column: 22, scope: !4073)
!4075 = !DILocation(line: 1504, column: 26, scope: !4073)
!4076 = !DILocation(line: 1505, column: 10, scope: !4073)
!4077 = !DILocation(line: 1505, column: 15, scope: !4073)
!4078 = !DILocation(line: 1505, column: 22, scope: !4073)
!4079 = !DILocation(line: 1505, column: 33, scope: !4073)
!4080 = !DILocation(line: 1504, column: 10, scope: !4081)
!4081 = !DILexicalBlockFile(scope: !4066, file: !1, discriminator: 1)
!4082 = !DILocation(line: 1506, column: 7, scope: !4073)
!4083 = !DILocation(line: 1507, column: 5, scope: !4066)
!4084 = !DILocation(line: 1507, column: 16, scope: !4085)
!4085 = !DILexicalBlockFile(scope: !4086, file: !1, discriminator: 1)
!4086 = distinct !DILexicalBlock(scope: !4060, file: !1, line: 1507, column: 16)
!4087 = !DILocation(line: 1507, column: 21, scope: !4085)
!4088 = !DILocation(line: 1507, column: 28, scope: !4085)
!4089 = !DILocation(line: 1507, column: 39, scope: !4085)
!4090 = !DILocation(line: 1508, column: 6, scope: !4086)
!4091 = !DILocation(line: 1509, column: 26, scope: !4061)
!4092 = !DILocation(line: 1509, column: 5, scope: !4061)
!4093 = !DILocation(line: 1509, column: 13, scope: !4061)
!4094 = !DILocation(line: 1509, column: 24, scope: !4061)
!4095 = !DILocation(line: 1510, column: 23, scope: !4061)
!4096 = !DILocation(line: 1510, column: 5, scope: !4061)
!4097 = !DILocation(line: 1510, column: 13, scope: !4061)
!4098 = !DILocation(line: 1510, column: 21, scope: !4061)
!4099 = !DILocation(line: 1512, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4061, file: !1, line: 1511, column: 9)
!4101 = !DILocation(line: 1512, column: 12, scope: !4100)
!4102 = !DILocation(line: 1512, column: 20, scope: !4100)
!4103 = !DILocation(line: 1511, column: 9, scope: !4100)
!4104 = !DILocation(line: 1512, column: 32, scope: !4100)
!4105 = !DILocation(line: 1511, column: 9, scope: !4061)
!4106 = !DILocation(line: 1513, column: 7, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4100, file: !1, line: 1512, column: 37)
!4108 = !DILocation(line: 1513, column: 13, scope: !4107)
!4109 = !DILocation(line: 1514, column: 6, scope: !4107)
!4110 = !DILocation(line: 1516, column: 19, scope: !4061)
!4111 = !DILocation(line: 1516, column: 14, scope: !4061)
!4112 = !DILocation(line: 1516, column: 11, scope: !4061)
!4113 = !DILocation(line: 1517, column: 5, scope: !4061)
!4114 = !DILocation(line: 1519, column: 8, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4050, file: !1, line: 1519, column: 8)
!4116 = !DILocation(line: 1519, column: 14, scope: !4115)
!4117 = !DILocation(line: 1519, column: 19, scope: !4115)
!4118 = !DILocation(line: 1519, column: 22, scope: !4119)
!4119 = !DILexicalBlockFile(scope: !4115, file: !1, discriminator: 1)
!4120 = !DILocation(line: 1519, column: 27, scope: !4119)
!4121 = !DILocation(line: 1519, column: 34, scope: !4119)
!4122 = !DILocation(line: 1519, column: 45, scope: !4119)
!4123 = !DILocation(line: 1519, column: 8, scope: !4119)
!4124 = !DILocation(line: 1520, column: 5, scope: !4115)
!4125 = !DILocation(line: 1521, column: 13, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4115, file: !1, line: 1521, column: 13)
!4127 = !DILocation(line: 1521, column: 18, scope: !4126)
!4128 = !DILocation(line: 1521, column: 25, scope: !4126)
!4129 = !DILocation(line: 1521, column: 36, scope: !4126)
!4130 = !DILocation(line: 1521, column: 44, scope: !4126)
!4131 = !DILocation(line: 1522, column: 8, scope: !4126)
!4132 = !DILocation(line: 1522, column: 13, scope: !4126)
!4133 = !DILocation(line: 1522, column: 20, scope: !4126)
!4134 = !DILocation(line: 1522, column: 31, scope: !4126)
!4135 = !DILocation(line: 1521, column: 13, scope: !4119)
!4136 = !DILocation(line: 1523, column: 5, scope: !4126)
!4137 = !DILocation(line: 1524, column: 27, scope: !4050)
!4138 = !DILocation(line: 1524, column: 4, scope: !4050)
!4139 = !DILocation(line: 1524, column: 9, scope: !4050)
!4140 = !DILocation(line: 1524, column: 16, scope: !4050)
!4141 = !DILocation(line: 1524, column: 24, scope: !4050)
!4142 = !DILocation(line: 1525, column: 28, scope: !4050)
!4143 = !DILocation(line: 1525, column: 4, scope: !4050)
!4144 = !DILocation(line: 1525, column: 9, scope: !4050)
!4145 = !DILocation(line: 1525, column: 16, scope: !4050)
!4146 = !DILocation(line: 1525, column: 25, scope: !4050)
!4147 = !DILocation(line: 1526, column: 28, scope: !4050)
!4148 = !DILocation(line: 1526, column: 4, scope: !4050)
!4149 = !DILocation(line: 1526, column: 9, scope: !4050)
!4150 = !DILocation(line: 1526, column: 16, scope: !4050)
!4151 = !DILocation(line: 1526, column: 25, scope: !4050)
!4152 = !DILocation(line: 1527, column: 10, scope: !4050)
!4153 = !DILocation(line: 1528, column: 3, scope: !4050)
!4154 = !DILocation(line: 1530, column: 16, scope: !3982)
!4155 = !DILocation(line: 1530, column: 21, scope: !3982)
!4156 = !DILocation(line: 1530, column: 7, scope: !3982)
!4157 = !DILocation(line: 1530, column: 5, scope: !3982)
!4158 = !DILocation(line: 1531, column: 11, scope: !3982)
!4159 = !DILocation(line: 1531, column: 3, scope: !3982)
!4160 = !DILocation(line: 1533, column: 4, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !3982, file: !1, line: 1531, column: 14)
!4162 = !DILocation(line: 1535, column: 8, scope: !4161)
!4163 = !DILocation(line: 1536, column: 4, scope: !4161)
!4164 = !DILocation(line: 1538, column: 4, scope: !4161)
!4165 = !DILocation(line: 1540, column: 24, scope: !3982)
!4166 = !DILocation(line: 1540, column: 29, scope: !3982)
!4167 = !DILocation(line: 1540, column: 36, scope: !3982)
!4168 = !DILocation(line: 1540, column: 3, scope: !3982)
!4169 = !DILocation(line: 1540, column: 11, scope: !3982)
!4170 = !DILocation(line: 1540, column: 22, scope: !3982)
!4171 = !DILocation(line: 1541, column: 21, scope: !3982)
!4172 = !DILocation(line: 1541, column: 3, scope: !3982)
!4173 = !DILocation(line: 1541, column: 11, scope: !3982)
!4174 = !DILocation(line: 1541, column: 19, scope: !3982)
!4175 = !DILocation(line: 1542, column: 34, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !3982, file: !1, line: 1542, column: 7)
!4177 = !DILocation(line: 1542, column: 37, scope: !4176)
!4178 = !DILocation(line: 1542, column: 45, scope: !4176)
!4179 = !DILocation(line: 1542, column: 7, scope: !4176)
!4180 = !DILocation(line: 1542, column: 57, scope: !4176)
!4181 = !DILocation(line: 1542, column: 7, scope: !3982)
!4182 = !DILocation(line: 1543, column: 5, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4176, file: !1, line: 1542, column: 62)
!4184 = !DILocation(line: 1543, column: 11, scope: !4183)
!4185 = !DILocation(line: 1544, column: 4, scope: !4183)
!4186 = !DILocation(line: 1471, column: 2, scope: !4187)
!4187 = !DILexicalBlockFile(scope: !567, file: !1, discriminator: 4)
!4188 = !DILocation(line: 1547, column: 21, scope: !567)
!4189 = !DILocation(line: 1547, column: 26, scope: !567)
!4190 = !DILocation(line: 1547, column: 33, scope: !567)
!4191 = !DILocation(line: 1547, column: 11, scope: !567)
!4192 = !DILocation(line: 1547, column: 9, scope: !567)
!4193 = !DILocation(line: 1549, column: 6, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1549, column: 6)
!4195 = !DILocation(line: 1549, column: 15, scope: !4194)
!4196 = !DILocation(line: 1549, column: 23, scope: !4194)
!4197 = !DILocation(line: 1549, column: 13, scope: !4194)
!4198 = !DILocation(line: 1549, column: 6, scope: !567)
!4199 = !DILocation(line: 1550, column: 22, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4194, file: !1, line: 1549, column: 42)
!4201 = !DILocation(line: 1550, column: 25, scope: !4200)
!4202 = !DILocation(line: 1552, column: 7, scope: !4200)
!4203 = !DILocation(line: 1552, column: 15, scope: !4200)
!4204 = !DILocation(line: 1552, column: 23, scope: !4200)
!4205 = !DILocation(line: 1550, column: 3, scope: !4200)
!4206 = !DILocation(line: 1553, column: 4, scope: !4200)
!4207 = !DILocation(line: 1553, column: 10, scope: !4200)
!4208 = !DILocation(line: 1554, column: 3, scope: !4200)
!4209 = !DILocation(line: 1564, column: 6, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1564, column: 6)
!4211 = !DILocation(line: 1564, column: 14, scope: !4210)
!4212 = !DILocation(line: 1564, column: 41, scope: !4210)
!4213 = !DILocation(line: 1564, column: 6, scope: !567)
!4214 = !DILocalVariable(name: "bytes_avail", scope: !4215, file: !1, line: 1565, type: !38)
!4215 = distinct !DILexicalBlock(scope: !4210, file: !1, line: 1564, column: 46)
!4216 = !DILocation(line: 1565, column: 11, scope: !4215)
!4217 = !DILocation(line: 1567, column: 28, scope: !4215)
!4218 = !DILocation(line: 1567, column: 31, scope: !4215)
!4219 = !DILocation(line: 1567, column: 39, scope: !4215)
!4220 = !DILocation(line: 1567, column: 7, scope: !4215)
!4221 = !DILocation(line: 1567, column: 5, scope: !4215)
!4222 = !DILocation(line: 1569, column: 7, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4215, file: !1, line: 1569, column: 7)
!4224 = !DILocation(line: 1569, column: 19, scope: !4223)
!4225 = !DILocation(line: 1569, column: 7, scope: !4215)
!4226 = !DILocation(line: 1570, column: 29, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 1569, column: 25)
!4228 = !DILocation(line: 1570, column: 13, scope: !4227)
!4229 = !DILocation(line: 1570, column: 5, scope: !4227)
!4230 = !DILocation(line: 1570, column: 11, scope: !4227)
!4231 = !DILocation(line: 1571, column: 4, scope: !4227)
!4232 = !DILocation(line: 1573, column: 24, scope: !4215)
!4233 = !DILocation(line: 1573, column: 32, scope: !4215)
!4234 = !DILocation(line: 1573, column: 3, scope: !4215)
!4235 = !DILocation(line: 1573, column: 11, scope: !4215)
!4236 = !DILocation(line: 1573, column: 22, scope: !4215)
!4237 = !DILocation(line: 1574, column: 21, scope: !4215)
!4238 = !DILocation(line: 1574, column: 3, scope: !4215)
!4239 = !DILocation(line: 1574, column: 11, scope: !4215)
!4240 = !DILocation(line: 1574, column: 19, scope: !4215)
!4241 = !DILocation(line: 1575, column: 34, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4215, file: !1, line: 1575, column: 7)
!4243 = !DILocation(line: 1575, column: 37, scope: !4242)
!4244 = !DILocation(line: 1575, column: 45, scope: !4242)
!4245 = !DILocation(line: 1575, column: 7, scope: !4242)
!4246 = !DILocation(line: 1575, column: 57, scope: !4242)
!4247 = !DILocation(line: 1575, column: 7, scope: !4215)
!4248 = !DILocation(line: 1576, column: 5, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4242, file: !1, line: 1575, column: 62)
!4250 = !DILocation(line: 1576, column: 11, scope: !4249)
!4251 = !DILocation(line: 1577, column: 4, scope: !4249)
!4252 = !DILocation(line: 1579, column: 2, scope: !4215)
!4253 = !DILocation(line: 1587, column: 6, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1587, column: 6)
!4255 = !DILocation(line: 1587, column: 11, scope: !4254)
!4256 = !DILocation(line: 1587, column: 27, scope: !4254)
!4257 = !DILocation(line: 1588, column: 6, scope: !4254)
!4258 = !DILocation(line: 1588, column: 11, scope: !4254)
!4259 = !DILocation(line: 1588, column: 27, scope: !4254)
!4260 = !DILocation(line: 1587, column: 40, scope: !4254)
!4261 = !DILocation(line: 1587, column: 6, scope: !567)
!4262 = !DILocation(line: 1589, column: 21, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 1588, column: 41)
!4264 = !DILocation(line: 1589, column: 26, scope: !4263)
!4265 = !DILocation(line: 1589, column: 7, scope: !4263)
!4266 = !DILocation(line: 1589, column: 5, scope: !4263)
!4267 = !DILocation(line: 1590, column: 7, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 1590, column: 7)
!4269 = !DILocation(line: 1590, column: 9, scope: !4268)
!4270 = !DILocation(line: 1590, column: 7, scope: !4263)
!4271 = !DILocation(line: 1591, column: 4, scope: !4268)
!4272 = !DILocation(line: 1592, column: 29, scope: !4263)
!4273 = !DILocation(line: 1592, column: 34, scope: !4263)
!4274 = !DILocation(line: 1593, column: 7, scope: !4263)
!4275 = !DILocation(line: 1593, column: 12, scope: !4263)
!4276 = !DILocation(line: 1593, column: 33, scope: !4263)
!4277 = !DILocation(line: 1593, column: 41, scope: !4263)
!4278 = !DILocation(line: 1592, column: 7, scope: !4263)
!4279 = !DILocation(line: 1592, column: 5, scope: !4263)
!4280 = !DILocation(line: 1594, column: 7, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 1594, column: 7)
!4282 = !DILocation(line: 1594, column: 9, scope: !4281)
!4283 = !DILocation(line: 1594, column: 7, scope: !4263)
!4284 = !DILocation(line: 1595, column: 4, scope: !4281)
!4285 = !DILocation(line: 1596, column: 2, scope: !4263)
!4286 = !DILocation(line: 1598, column: 6, scope: !567)
!4287 = !DILocation(line: 1598, column: 11, scope: !567)
!4288 = !DILocation(line: 1598, column: 33, scope: !567)
!4289 = !DILocation(line: 1598, column: 41, scope: !567)
!4290 = !DILocation(line: 1598, column: 31, scope: !567)
!4291 = !DILocation(line: 1598, column: 4, scope: !567)
!4292 = !DILocation(line: 1599, column: 11, scope: !567)
!4293 = !DILocation(line: 1599, column: 20, scope: !567)
!4294 = !DILocation(line: 1599, column: 28, scope: !567)
!4295 = !DILocation(line: 1599, column: 18, scope: !567)
!4296 = !DILocation(line: 1599, column: 3, scope: !567)
!4297 = !DILocation(line: 1599, column: 9, scope: !567)
!4298 = !DILocation(line: 1600, column: 31, scope: !567)
!4299 = !DILocation(line: 1600, column: 2, scope: !567)
!4300 = !DILocation(line: 1600, column: 10, scope: !567)
!4301 = !DILocation(line: 1600, column: 29, scope: !567)
!4302 = !DILocation(line: 1602, column: 10, scope: !567)
!4303 = !DILocation(line: 1602, column: 2, scope: !567)
!4304 = !DILocation(line: 1605, column: 10, scope: !567)
!4305 = !DILocation(line: 1605, column: 2, scope: !567)
!4306 = !DILocation(line: 1607, column: 22, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !567, file: !1, line: 1605, column: 13)
!4308 = !DILocation(line: 1607, column: 25, scope: !4307)
!4309 = !DILocation(line: 1607, column: 3, scope: !4307)
!4310 = !DILocation(line: 1609, column: 3, scope: !4307)
!4311 = !DILocation(line: 1611, column: 22, scope: !4307)
!4312 = !DILocation(line: 1611, column: 25, scope: !4307)
!4313 = !DILocation(line: 1612, column: 44, scope: !4307)
!4314 = !DILocation(line: 1611, column: 3, scope: !4307)
!4315 = !DILocation(line: 1613, column: 3, scope: !4307)
!4316 = !DILocation(line: 1615, column: 3, scope: !567)
!4317 = !DILocation(line: 1615, column: 9, scope: !567)
!4318 = !DILocation(line: 1616, column: 2, scope: !567)
!4319 = !DILocation(line: 1618, column: 21, scope: !567)
!4320 = !DILocation(line: 1618, column: 24, scope: !567)
!4321 = !DILocation(line: 1618, column: 2, scope: !567)
!4322 = !DILocation(line: 1620, column: 3, scope: !567)
!4323 = !DILocation(line: 1620, column: 9, scope: !567)
!4324 = !DILocation(line: 1621, column: 2, scope: !567)
!4325 = !DILocation(line: 1622, column: 1, scope: !567)
!4326 = !DILocalVariable(name: "a", arg: 1, scope: !568, file: !1, line: 1638, type: !4)
!4327 = !DILocation(line: 1638, column: 48, scope: !568)
!4328 = !DILocalVariable(name: "avail", arg: 2, scope: !568, file: !1, line: 1638, type: !541)
!4329 = !DILocation(line: 1638, column: 60, scope: !568)
!4330 = !DILocalVariable(name: "cab", scope: !568, file: !1, line: 1640, type: !292)
!4331 = !DILocation(line: 1640, column: 14, scope: !568)
!4332 = !DILocation(line: 1640, column: 35, scope: !568)
!4333 = !DILocation(line: 1640, column: 38, scope: !568)
!4334 = !DILocation(line: 1640, column: 46, scope: !568)
!4335 = !DILocation(line: 1640, column: 20, scope: !568)
!4336 = !DILocalVariable(name: "cfdata", scope: !568, file: !1, line: 1641, type: !350)
!4337 = !DILocation(line: 1641, column: 17, scope: !568)
!4338 = !DILocalVariable(name: "d", scope: !568, file: !1, line: 1642, type: !43)
!4339 = !DILocation(line: 1642, column: 14, scope: !568)
!4340 = !DILocalVariable(name: "r", scope: !568, file: !1, line: 1643, type: !23)
!4341 = !DILocation(line: 1643, column: 6, scope: !568)
!4342 = !DILocalVariable(name: "uavail", scope: !568, file: !1, line: 1644, type: !307)
!4343 = !DILocation(line: 1644, column: 11, scope: !568)
!4344 = !DILocation(line: 1646, column: 11, scope: !568)
!4345 = !DILocation(line: 1646, column: 16, scope: !568)
!4346 = !DILocation(line: 1646, column: 9, scope: !568)
!4347 = !DILocation(line: 1648, column: 6, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !568, file: !1, line: 1648, column: 6)
!4349 = !DILocation(line: 1648, column: 11, scope: !4348)
!4350 = !DILocation(line: 1648, column: 31, scope: !4348)
!4351 = !DILocation(line: 1648, column: 6, scope: !568)
!4352 = !DILocation(line: 1649, column: 3, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4348, file: !1, line: 1648, column: 40)
!4354 = !DILocation(line: 1649, column: 8, scope: !4353)
!4355 = !DILocation(line: 1649, column: 33, scope: !4353)
!4356 = !DILocation(line: 1651, column: 33, scope: !4353)
!4357 = !DILocation(line: 1651, column: 38, scope: !4353)
!4358 = !DILocation(line: 1651, column: 26, scope: !4353)
!4359 = !DILocation(line: 1650, column: 3, scope: !4353)
!4360 = !DILocation(line: 1650, column: 8, scope: !4353)
!4361 = !DILocation(line: 1651, column: 7, scope: !4353)
!4362 = !DILocation(line: 1652, column: 7, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4353, file: !1, line: 1652, column: 7)
!4364 = !DILocation(line: 1652, column: 12, scope: !4363)
!4365 = !DILocation(line: 1652, column: 32, scope: !4363)
!4366 = !DILocation(line: 1652, column: 7, scope: !4353)
!4367 = !DILocation(line: 1653, column: 23, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 1652, column: 41)
!4369 = !DILocation(line: 1653, column: 26, scope: !4368)
!4370 = !DILocation(line: 1653, column: 4, scope: !4368)
!4371 = !DILocation(line: 1655, column: 5, scope: !4368)
!4372 = !DILocation(line: 1655, column: 11, scope: !4368)
!4373 = !DILocation(line: 1656, column: 4, scope: !4368)
!4374 = !DILocation(line: 1658, column: 2, scope: !4353)
!4375 = !DILocation(line: 1660, column: 11, scope: !568)
!4376 = !DILocation(line: 1660, column: 19, scope: !568)
!4377 = !DILocation(line: 1660, column: 9, scope: !568)
!4378 = !DILocation(line: 1661, column: 6, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !568, file: !1, line: 1661, column: 6)
!4380 = !DILocation(line: 1661, column: 16, scope: !4379)
!4381 = !DILocation(line: 1661, column: 24, scope: !4379)
!4382 = !DILocation(line: 1661, column: 13, scope: !4379)
!4383 = !DILocation(line: 1661, column: 6, scope: !568)
!4384 = !DILocation(line: 1662, column: 7, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4379, file: !1, line: 1661, column: 43)
!4386 = !DILocation(line: 1662, column: 12, scope: !4385)
!4387 = !DILocation(line: 1662, column: 34, scope: !4385)
!4388 = !DILocation(line: 1662, column: 42, scope: !4385)
!4389 = !DILocation(line: 1662, column: 32, scope: !4385)
!4390 = !DILocation(line: 1662, column: 5, scope: !4385)
!4391 = !DILocation(line: 1663, column: 12, scope: !4385)
!4392 = !DILocation(line: 1663, column: 21, scope: !4385)
!4393 = !DILocation(line: 1663, column: 29, scope: !4385)
!4394 = !DILocation(line: 1663, column: 19, scope: !4385)
!4395 = !DILocation(line: 1663, column: 4, scope: !4385)
!4396 = !DILocation(line: 1663, column: 10, scope: !4385)
!4397 = !DILocation(line: 1664, column: 11, scope: !4385)
!4398 = !DILocation(line: 1664, column: 3, scope: !4385)
!4399 = !DILocation(line: 1667, column: 7, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !568, file: !1, line: 1667, column: 6)
!4401 = !DILocation(line: 1667, column: 12, scope: !4400)
!4402 = !DILocation(line: 1667, column: 28, scope: !4400)
!4403 = !DILocation(line: 1667, column: 6, scope: !568)
!4404 = !DILocation(line: 1668, column: 24, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 1667, column: 45)
!4406 = !DILocation(line: 1668, column: 29, scope: !4405)
!4407 = !DILocation(line: 1669, column: 7, scope: !4405)
!4408 = !DILocation(line: 1669, column: 12, scope: !4405)
!4409 = !DILocation(line: 1669, column: 28, scope: !4405)
!4410 = !DILocation(line: 1668, column: 7, scope: !4405)
!4411 = !DILocation(line: 1668, column: 5, scope: !4405)
!4412 = !DILocation(line: 1670, column: 7, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4405, file: !1, line: 1670, column: 7)
!4414 = !DILocation(line: 1670, column: 9, scope: !4413)
!4415 = !DILocation(line: 1670, column: 7, scope: !4405)
!4416 = !DILocation(line: 1671, column: 23, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4413, file: !1, line: 1670, column: 24)
!4418 = !DILocation(line: 1671, column: 26, scope: !4417)
!4419 = !DILocation(line: 1671, column: 4, scope: !4417)
!4420 = !DILocation(line: 1673, column: 5, scope: !4417)
!4421 = !DILocation(line: 1673, column: 11, scope: !4417)
!4422 = !DILocation(line: 1674, column: 4, scope: !4417)
!4423 = !DILocation(line: 1677, column: 3, scope: !4405)
!4424 = !DILocation(line: 1677, column: 8, scope: !4405)
!4425 = !DILocation(line: 1677, column: 24, scope: !4405)
!4426 = !DILocation(line: 1677, column: 40, scope: !4405)
!4427 = !DILocation(line: 1678, column: 2, scope: !4405)
!4428 = !DILocation(line: 1681, column: 25, scope: !568)
!4429 = !DILocation(line: 1681, column: 30, scope: !568)
!4430 = !DILocation(line: 1681, column: 2, scope: !568)
!4431 = !DILocation(line: 1682, column: 25, scope: !568)
!4432 = !DILocation(line: 1682, column: 2, scope: !568)
!4433 = !DILocation(line: 1682, column: 7, scope: !568)
!4434 = !DILocation(line: 1682, column: 13, scope: !568)
!4435 = !DILocation(line: 1682, column: 23, scope: !568)
!4436 = !DILocation(line: 1683, column: 2, scope: !568)
!4437 = !DILocation(line: 1683, column: 9, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !568, file: !1, discriminator: 1)
!4439 = !DILocation(line: 1683, column: 14, scope: !4438)
!4440 = !DILocation(line: 1683, column: 20, scope: !4438)
!4441 = !DILocation(line: 1683, column: 32, scope: !4438)
!4442 = !DILocation(line: 1683, column: 40, scope: !4438)
!4443 = !DILocation(line: 1683, column: 30, scope: !4438)
!4444 = !DILocation(line: 1683, column: 2, scope: !4438)
!4445 = !DILocalVariable(name: "bytes_avail", scope: !4446, file: !1, line: 1684, type: !38)
!4446 = distinct !DILexicalBlock(scope: !568, file: !1, line: 1683, column: 59)
!4447 = !DILocation(line: 1684, column: 11, scope: !4446)
!4448 = !DILocation(line: 1687, column: 7, scope: !4446)
!4449 = !DILocation(line: 1687, column: 12, scope: !4446)
!4450 = !DILocation(line: 1687, column: 34, scope: !4446)
!4451 = !DILocation(line: 1687, column: 39, scope: !4446)
!4452 = !DILocation(line: 1687, column: 45, scope: !4446)
!4453 = !DILocation(line: 1687, column: 32, scope: !4446)
!4454 = !DILocation(line: 1686, column: 3, scope: !4446)
!4455 = !DILocation(line: 1686, column: 8, scope: !4446)
!4456 = !DILocation(line: 1686, column: 14, scope: !4446)
!4457 = !DILocation(line: 1686, column: 23, scope: !4446)
!4458 = !DILocation(line: 1689, column: 7, scope: !4446)
!4459 = !DILocation(line: 1689, column: 15, scope: !4446)
!4460 = !DILocation(line: 1689, column: 35, scope: !4446)
!4461 = !DILocation(line: 1689, column: 40, scope: !4446)
!4462 = !DILocation(line: 1689, column: 46, scope: !4446)
!4463 = !DILocation(line: 1689, column: 33, scope: !4446)
!4464 = !DILocation(line: 1688, column: 3, scope: !4446)
!4465 = !DILocation(line: 1688, column: 8, scope: !4446)
!4466 = !DILocation(line: 1688, column: 14, scope: !4446)
!4467 = !DILocation(line: 1688, column: 24, scope: !4446)
!4468 = !DILocation(line: 1691, column: 28, scope: !4446)
!4469 = !DILocation(line: 1691, column: 7, scope: !4446)
!4470 = !DILocation(line: 1691, column: 5, scope: !4446)
!4471 = !DILocation(line: 1692, column: 7, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1692, column: 7)
!4473 = !DILocation(line: 1692, column: 19, scope: !4472)
!4474 = !DILocation(line: 1692, column: 7, scope: !4446)
!4475 = !DILocation(line: 1693, column: 23, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !1, line: 1692, column: 25)
!4477 = !DILocation(line: 1693, column: 26, scope: !4476)
!4478 = !DILocation(line: 1693, column: 4, scope: !4476)
!4479 = !DILocation(line: 1696, column: 5, scope: !4476)
!4480 = !DILocation(line: 1696, column: 11, scope: !4476)
!4481 = !DILocation(line: 1697, column: 4, scope: !4476)
!4482 = !DILocation(line: 1699, column: 7, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1699, column: 7)
!4484 = !DILocation(line: 1699, column: 21, scope: !4483)
!4485 = !DILocation(line: 1699, column: 29, scope: !4483)
!4486 = !DILocation(line: 1699, column: 19, scope: !4483)
!4487 = !DILocation(line: 1699, column: 7, scope: !4446)
!4488 = !DILocation(line: 1700, column: 18, scope: !4483)
!4489 = !DILocation(line: 1700, column: 26, scope: !4483)
!4490 = !DILocation(line: 1700, column: 16, scope: !4483)
!4491 = !DILocation(line: 1700, column: 4, scope: !4483)
!4492 = !DILocation(line: 1702, column: 24, scope: !4446)
!4493 = !DILocation(line: 1702, column: 3, scope: !4446)
!4494 = !DILocation(line: 1702, column: 8, scope: !4446)
!4495 = !DILocation(line: 1702, column: 14, scope: !4446)
!4496 = !DILocation(line: 1702, column: 22, scope: !4446)
!4497 = !DILocation(line: 1703, column: 25, scope: !4446)
!4498 = !DILocation(line: 1703, column: 3, scope: !4446)
!4499 = !DILocation(line: 1703, column: 8, scope: !4446)
!4500 = !DILocation(line: 1703, column: 14, scope: !4446)
!4501 = !DILocation(line: 1703, column: 23, scope: !4446)
!4502 = !DILocation(line: 1704, column: 3, scope: !4446)
!4503 = !DILocation(line: 1704, column: 8, scope: !4446)
!4504 = !DILocation(line: 1704, column: 14, scope: !4446)
!4505 = !DILocation(line: 1704, column: 23, scope: !4446)
!4506 = !DILocation(line: 1705, column: 19, scope: !4446)
!4507 = !DILocation(line: 1705, column: 24, scope: !4446)
!4508 = !DILocation(line: 1706, column: 7, scope: !4446)
!4509 = !DILocation(line: 1706, column: 15, scope: !4446)
!4510 = !DILocation(line: 1706, column: 45, scope: !4446)
!4511 = !DILocation(line: 1706, column: 42, scope: !4446)
!4512 = !DILocation(line: 1705, column: 7, scope: !4446)
!4513 = !DILocation(line: 1705, column: 5, scope: !4446)
!4514 = !DILocation(line: 1707, column: 11, scope: !4446)
!4515 = !DILocation(line: 1707, column: 3, scope: !4446)
!4516 = !DILocation(line: 1710, column: 4, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1707, column: 14)
!4518 = !DILocation(line: 1712, column: 23, scope: !4517)
!4519 = !DILocation(line: 1712, column: 26, scope: !4517)
!4520 = !DILocation(line: 1713, column: 41, scope: !4517)
!4521 = !DILocation(line: 1712, column: 4, scope: !4517)
!4522 = !DILocation(line: 1714, column: 5, scope: !4517)
!4523 = !DILocation(line: 1714, column: 11, scope: !4517)
!4524 = !DILocation(line: 1715, column: 4, scope: !4517)
!4525 = !DILocation(line: 1717, column: 24, scope: !4446)
!4526 = !DILocation(line: 1717, column: 29, scope: !4446)
!4527 = !DILocation(line: 1717, column: 35, scope: !4446)
!4528 = !DILocation(line: 1717, column: 3, scope: !4446)
!4529 = !DILocation(line: 1717, column: 11, scope: !4446)
!4530 = !DILocation(line: 1717, column: 22, scope: !4446)
!4531 = !DILocation(line: 1718, column: 21, scope: !4446)
!4532 = !DILocation(line: 1718, column: 3, scope: !4446)
!4533 = !DILocation(line: 1718, column: 11, scope: !4446)
!4534 = !DILocation(line: 1718, column: 19, scope: !4446)
!4535 = !DILocation(line: 1719, column: 34, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1719, column: 7)
!4537 = !DILocation(line: 1719, column: 37, scope: !4536)
!4538 = !DILocation(line: 1719, column: 45, scope: !4536)
!4539 = !DILocation(line: 1719, column: 7, scope: !4536)
!4540 = !DILocation(line: 1719, column: 57, scope: !4536)
!4541 = !DILocation(line: 1719, column: 7, scope: !4446)
!4542 = !DILocation(line: 1720, column: 5, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4536, file: !1, line: 1719, column: 62)
!4544 = !DILocation(line: 1720, column: 11, scope: !4543)
!4545 = !DILocation(line: 1721, column: 4, scope: !4543)
!4546 = !DILocation(line: 1683, column: 2, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !568, file: !1, discriminator: 2)
!4548 = !DILocation(line: 1725, column: 21, scope: !568)
!4549 = !DILocation(line: 1725, column: 26, scope: !568)
!4550 = !DILocation(line: 1725, column: 32, scope: !568)
!4551 = !DILocation(line: 1725, column: 11, scope: !568)
!4552 = !DILocation(line: 1725, column: 9, scope: !568)
!4553 = !DILocation(line: 1729, column: 6, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !568, file: !1, line: 1729, column: 6)
!4555 = !DILocation(line: 1729, column: 14, scope: !4554)
!4556 = !DILocation(line: 1729, column: 41, scope: !4554)
!4557 = !DILocation(line: 1729, column: 6, scope: !568)
!4558 = !DILocalVariable(name: "bytes_avail", scope: !4559, file: !1, line: 1730, type: !38)
!4559 = distinct !DILexicalBlock(scope: !4554, file: !1, line: 1729, column: 46)
!4560 = !DILocation(line: 1730, column: 11, scope: !4559)
!4561 = !DILocation(line: 1732, column: 28, scope: !4559)
!4562 = !DILocation(line: 1732, column: 31, scope: !4559)
!4563 = !DILocation(line: 1732, column: 39, scope: !4559)
!4564 = !DILocation(line: 1732, column: 7, scope: !4559)
!4565 = !DILocation(line: 1732, column: 5, scope: !4559)
!4566 = !DILocation(line: 1734, column: 7, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4559, file: !1, line: 1734, column: 7)
!4568 = !DILocation(line: 1734, column: 19, scope: !4567)
!4569 = !DILocation(line: 1734, column: 7, scope: !4559)
!4570 = !DILocation(line: 1735, column: 29, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4567, file: !1, line: 1734, column: 25)
!4572 = !DILocation(line: 1735, column: 13, scope: !4571)
!4573 = !DILocation(line: 1735, column: 5, scope: !4571)
!4574 = !DILocation(line: 1735, column: 11, scope: !4571)
!4575 = !DILocation(line: 1736, column: 4, scope: !4571)
!4576 = !DILocation(line: 1738, column: 24, scope: !4559)
!4577 = !DILocation(line: 1738, column: 32, scope: !4559)
!4578 = !DILocation(line: 1738, column: 3, scope: !4559)
!4579 = !DILocation(line: 1738, column: 11, scope: !4559)
!4580 = !DILocation(line: 1738, column: 22, scope: !4559)
!4581 = !DILocation(line: 1739, column: 21, scope: !4559)
!4582 = !DILocation(line: 1739, column: 3, scope: !4559)
!4583 = !DILocation(line: 1739, column: 11, scope: !4559)
!4584 = !DILocation(line: 1739, column: 19, scope: !4559)
!4585 = !DILocation(line: 1740, column: 34, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4559, file: !1, line: 1740, column: 7)
!4587 = !DILocation(line: 1740, column: 37, scope: !4586)
!4588 = !DILocation(line: 1740, column: 45, scope: !4586)
!4589 = !DILocation(line: 1740, column: 7, scope: !4586)
!4590 = !DILocation(line: 1740, column: 57, scope: !4586)
!4591 = !DILocation(line: 1740, column: 7, scope: !4559)
!4592 = !DILocation(line: 1741, column: 5, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4586, file: !1, line: 1740, column: 62)
!4594 = !DILocation(line: 1741, column: 11, scope: !4593)
!4595 = !DILocation(line: 1742, column: 4, scope: !4593)
!4596 = !DILocation(line: 1744, column: 2, scope: !4559)
!4597 = !DILocation(line: 1749, column: 19, scope: !568)
!4598 = !DILocation(line: 1749, column: 24, scope: !568)
!4599 = !DILocation(line: 1749, column: 31, scope: !568)
!4600 = !DILocation(line: 1749, column: 36, scope: !568)
!4601 = !DILocation(line: 1750, column: 6, scope: !568)
!4602 = !DILocation(line: 1750, column: 14, scope: !568)
!4603 = !DILocation(line: 1751, column: 7, scope: !568)
!4604 = !DILocation(line: 1751, column: 12, scope: !568)
!4605 = !DILocation(line: 1751, column: 28, scope: !568)
!4606 = !DILocation(line: 1751, column: 40, scope: !568)
!4607 = !DILocation(line: 1751, column: 44, scope: !568)
!4608 = !DILocation(line: 1749, column: 2, scope: !568)
!4609 = !DILocation(line: 1753, column: 6, scope: !568)
!4610 = !DILocation(line: 1753, column: 11, scope: !568)
!4611 = !DILocation(line: 1753, column: 33, scope: !568)
!4612 = !DILocation(line: 1753, column: 41, scope: !568)
!4613 = !DILocation(line: 1753, column: 31, scope: !568)
!4614 = !DILocation(line: 1753, column: 4, scope: !568)
!4615 = !DILocation(line: 1754, column: 11, scope: !568)
!4616 = !DILocation(line: 1754, column: 20, scope: !568)
!4617 = !DILocation(line: 1754, column: 28, scope: !568)
!4618 = !DILocation(line: 1754, column: 18, scope: !568)
!4619 = !DILocation(line: 1754, column: 3, scope: !568)
!4620 = !DILocation(line: 1754, column: 9, scope: !568)
!4621 = !DILocation(line: 1755, column: 31, scope: !568)
!4622 = !DILocation(line: 1755, column: 2, scope: !568)
!4623 = !DILocation(line: 1755, column: 10, scope: !568)
!4624 = !DILocation(line: 1755, column: 29, scope: !568)
!4625 = !DILocation(line: 1757, column: 10, scope: !568)
!4626 = !DILocation(line: 1757, column: 2, scope: !568)
!4627 = !DILocation(line: 1758, column: 1, scope: !568)
!4628 = !DILocalVariable(name: "strm", arg: 1, scope: !569, file: !1, line: 2085, type: !572)
!4629 = !DILocation(line: 2085, column: 36, scope: !569)
!4630 = !DILocalVariable(name: "w_bits", arg: 2, scope: !569, file: !1, line: 2085, type: !23)
!4631 = !DILocation(line: 2085, column: 46, scope: !569)
!4632 = !DILocalVariable(name: "ds", scope: !569, file: !1, line: 2087, type: !444)
!4633 = !DILocation(line: 2087, column: 18, scope: !569)
!4634 = !DILocalVariable(name: "slot", scope: !569, file: !1, line: 2088, type: !23)
!4635 = !DILocation(line: 2088, column: 6, scope: !569)
!4636 = !DILocalVariable(name: "w_size", scope: !569, file: !1, line: 2088, type: !23)
!4637 = !DILocation(line: 2088, column: 12, scope: !569)
!4638 = !DILocalVariable(name: "w_slot", scope: !569, file: !1, line: 2088, type: !23)
!4639 = !DILocation(line: 2088, column: 20, scope: !569)
!4640 = !DILocalVariable(name: "base", scope: !569, file: !1, line: 2089, type: !23)
!4641 = !DILocation(line: 2089, column: 6, scope: !569)
!4642 = !DILocalVariable(name: "footer", scope: !569, file: !1, line: 2089, type: !23)
!4643 = !DILocation(line: 2089, column: 12, scope: !569)
!4644 = !DILocalVariable(name: "base_inc", scope: !569, file: !1, line: 2090, type: !4645)
!4645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 576, align: 32, elements: !4646)
!4646 = !{!4647}
!4647 = !DISubrange(count: 18)
!4648 = !DILocation(line: 2090, column: 6, scope: !569)
!4649 = !DILocation(line: 2092, column: 6, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2092, column: 6)
!4651 = !DILocation(line: 2092, column: 12, scope: !4650)
!4652 = !DILocation(line: 2092, column: 15, scope: !4650)
!4653 = !DILocation(line: 2092, column: 6, scope: !569)
!4654 = !DILocation(line: 2093, column: 14, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4650, file: !1, line: 2092, column: 24)
!4656 = !DILocation(line: 2093, column: 3, scope: !4655)
!4657 = !DILocation(line: 2093, column: 9, scope: !4655)
!4658 = !DILocation(line: 2093, column: 12, scope: !4655)
!4659 = !DILocation(line: 2094, column: 7, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 2094, column: 7)
!4661 = !DILocation(line: 2094, column: 13, scope: !4660)
!4662 = !DILocation(line: 2094, column: 16, scope: !4660)
!4663 = !DILocation(line: 2094, column: 7, scope: !4655)
!4664 = !DILocation(line: 2095, column: 4, scope: !4660)
!4665 = !DILocation(line: 2096, column: 2, scope: !4655)
!4666 = !DILocation(line: 2097, column: 7, scope: !569)
!4667 = !DILocation(line: 2097, column: 13, scope: !569)
!4668 = !DILocation(line: 2097, column: 5, scope: !569)
!4669 = !DILocation(line: 2098, column: 2, scope: !569)
!4670 = !DILocation(line: 2098, column: 6, scope: !569)
!4671 = !DILocation(line: 2098, column: 12, scope: !569)
!4672 = !DILocation(line: 2101, column: 6, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2101, column: 6)
!4674 = !DILocation(line: 2101, column: 13, scope: !4673)
!4675 = !DILocation(line: 2101, column: 25, scope: !4673)
!4676 = !DILocation(line: 2101, column: 28, scope: !4677)
!4677 = !DILexicalBlockFile(scope: !4673, file: !1, discriminator: 1)
!4678 = !DILocation(line: 2101, column: 35, scope: !4677)
!4679 = !DILocation(line: 2101, column: 6, scope: !4677)
!4680 = !DILocation(line: 2102, column: 3, scope: !4673)
!4681 = !DILocation(line: 2104, column: 2, scope: !569)
!4682 = !DILocation(line: 2104, column: 6, scope: !569)
!4683 = !DILocation(line: 2104, column: 12, scope: !569)
!4684 = !DILocation(line: 2109, column: 11, scope: !569)
!4685 = !DILocation(line: 2109, column: 15, scope: !569)
!4686 = !DILocation(line: 2109, column: 9, scope: !569)
!4687 = !DILocation(line: 2110, column: 17, scope: !569)
!4688 = !DILocation(line: 2110, column: 24, scope: !569)
!4689 = !DILocation(line: 2110, column: 11, scope: !569)
!4690 = !DILocation(line: 2110, column: 9, scope: !569)
!4691 = !DILocation(line: 2111, column: 21, scope: !569)
!4692 = !DILocation(line: 2111, column: 18, scope: !569)
!4693 = !DILocation(line: 2111, column: 2, scope: !569)
!4694 = !DILocation(line: 2111, column: 6, scope: !569)
!4695 = !DILocation(line: 2111, column: 13, scope: !569)
!4696 = !DILocation(line: 2112, column: 15, scope: !569)
!4697 = !DILocation(line: 2112, column: 19, scope: !569)
!4698 = !DILocation(line: 2112, column: 26, scope: !569)
!4699 = !DILocation(line: 2112, column: 2, scope: !569)
!4700 = !DILocation(line: 2112, column: 6, scope: !569)
!4701 = !DILocation(line: 2112, column: 13, scope: !569)
!4702 = !DILocation(line: 2113, column: 6, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2113, column: 6)
!4704 = !DILocation(line: 2113, column: 10, scope: !4703)
!4705 = !DILocation(line: 2113, column: 17, scope: !4703)
!4706 = !DILocation(line: 2113, column: 25, scope: !4703)
!4707 = !DILocation(line: 2113, column: 28, scope: !4708)
!4708 = !DILexicalBlockFile(scope: !4703, file: !1, discriminator: 1)
!4709 = !DILocation(line: 2113, column: 38, scope: !4708)
!4710 = !DILocation(line: 2113, column: 42, scope: !4708)
!4711 = !DILocation(line: 2113, column: 35, scope: !4708)
!4712 = !DILocation(line: 2113, column: 6, scope: !4708)
!4713 = !DILocation(line: 2114, column: 8, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 2113, column: 50)
!4715 = !DILocation(line: 2114, column: 12, scope: !4714)
!4716 = !DILocation(line: 2114, column: 3, scope: !4714)
!4717 = !DILocation(line: 2115, column: 23, scope: !4714)
!4718 = !DILocation(line: 2115, column: 27, scope: !4714)
!4719 = !DILocation(line: 2115, column: 16, scope: !4714)
!4720 = !DILocation(line: 2115, column: 3, scope: !4714)
!4721 = !DILocation(line: 2115, column: 7, scope: !4714)
!4722 = !DILocation(line: 2115, column: 14, scope: !4714)
!4723 = !DILocation(line: 2116, column: 7, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4714, file: !1, line: 2116, column: 7)
!4725 = !DILocation(line: 2116, column: 11, scope: !4724)
!4726 = !DILocation(line: 2116, column: 18, scope: !4724)
!4727 = !DILocation(line: 2116, column: 7, scope: !4714)
!4728 = !DILocation(line: 2117, column: 4, scope: !4724)
!4729 = !DILocation(line: 2118, column: 8, scope: !4714)
!4730 = !DILocation(line: 2118, column: 12, scope: !4714)
!4731 = !DILocation(line: 2118, column: 3, scope: !4714)
!4732 = !DILocation(line: 2119, column: 49, scope: !4714)
!4733 = !DILocation(line: 2119, column: 47, scope: !4714)
!4734 = !DILocation(line: 2119, column: 17, scope: !4714)
!4735 = !DILocation(line: 2119, column: 3, scope: !4714)
!4736 = !DILocation(line: 2119, column: 7, scope: !4714)
!4737 = !DILocation(line: 2119, column: 15, scope: !4714)
!4738 = !DILocation(line: 2120, column: 7, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4714, file: !1, line: 2120, column: 7)
!4740 = !DILocation(line: 2120, column: 11, scope: !4739)
!4741 = !DILocation(line: 2120, column: 19, scope: !4739)
!4742 = !DILocation(line: 2120, column: 7, scope: !4714)
!4743 = !DILocation(line: 2121, column: 4, scope: !4739)
!4744 = !DILocation(line: 2122, column: 22, scope: !4714)
!4745 = !DILocation(line: 2122, column: 26, scope: !4714)
!4746 = !DILocation(line: 2122, column: 3, scope: !4714)
!4747 = !DILocation(line: 2123, column: 2, scope: !4714)
!4748 = !DILocation(line: 2125, column: 14, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2125, column: 2)
!4750 = !DILocation(line: 2125, column: 7, scope: !4749)
!4751 = !DILocation(line: 2125, column: 19, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !4753, file: !1, discriminator: 1)
!4753 = distinct !DILexicalBlock(scope: !4749, file: !1, line: 2125, column: 2)
!4754 = !DILocation(line: 2125, column: 26, scope: !4752)
!4755 = !DILocation(line: 2125, column: 2, scope: !4752)
!4756 = !DILocation(line: 2126, column: 27, scope: !4753)
!4757 = !DILocation(line: 2126, column: 24, scope: !4753)
!4758 = !DILocation(line: 2126, column: 12, scope: !4753)
!4759 = !DILocation(line: 2126, column: 3, scope: !4753)
!4760 = !DILocation(line: 2126, column: 20, scope: !4753)
!4761 = !DILocation(line: 2125, column: 38, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4753, file: !1, discriminator: 2)
!4763 = !DILocation(line: 2125, column: 2, scope: !4762)
!4764 = !DILocation(line: 2127, column: 16, scope: !569)
!4765 = !DILocation(line: 2127, column: 7, scope: !569)
!4766 = !DILocation(line: 2128, column: 12, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2128, column: 2)
!4768 = !DILocation(line: 2128, column: 7, scope: !4767)
!4769 = !DILocation(line: 2128, column: 17, scope: !4770)
!4770 = !DILexicalBlockFile(scope: !4771, file: !1, discriminator: 1)
!4771 = distinct !DILexicalBlock(scope: !4767, file: !1, line: 2128, column: 2)
!4772 = !DILocation(line: 2128, column: 24, scope: !4770)
!4773 = !DILocation(line: 2128, column: 22, scope: !4770)
!4774 = !DILocation(line: 2128, column: 2, scope: !4770)
!4775 = !DILocalVariable(name: "n", scope: !4776, file: !1, line: 2129, type: !23)
!4776 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 2128, column: 40)
!4777 = !DILocation(line: 2129, column: 7, scope: !4776)
!4778 = !DILocation(line: 2130, column: 7, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 2130, column: 7)
!4780 = !DILocation(line: 2130, column: 14, scope: !4779)
!4781 = !DILocation(line: 2130, column: 7, scope: !4776)
!4782 = !DILocation(line: 2131, column: 11, scope: !4779)
!4783 = !DILocation(line: 2131, column: 9, scope: !4779)
!4784 = !DILocation(line: 2131, column: 4, scope: !4779)
!4785 = !DILocation(line: 2133, column: 21, scope: !4779)
!4786 = !DILocation(line: 2133, column: 12, scope: !4779)
!4787 = !DILocation(line: 2133, column: 9, scope: !4779)
!4788 = !DILocation(line: 2134, column: 7, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 2134, column: 7)
!4790 = !DILocation(line: 2134, column: 14, scope: !4789)
!4791 = !DILocation(line: 2134, column: 7, scope: !4776)
!4792 = !DILocation(line: 2135, column: 11, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4789, file: !1, line: 2134, column: 20)
!4794 = !DILocation(line: 2136, column: 13, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4793, file: !1, line: 2136, column: 4)
!4796 = !DILocation(line: 2136, column: 11, scope: !4795)
!4797 = !DILocation(line: 2136, column: 9, scope: !4795)
!4798 = !DILocation(line: 2136, column: 19, scope: !4799)
!4799 = !DILexicalBlockFile(scope: !4800, file: !1, discriminator: 1)
!4800 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 2136, column: 4)
!4801 = !DILocation(line: 2136, column: 4, scope: !4799)
!4802 = !DILocation(line: 2137, column: 11, scope: !4800)
!4803 = !DILocation(line: 2137, column: 5, scope: !4800)
!4804 = !DILocation(line: 2136, column: 24, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4800, file: !1, discriminator: 2)
!4806 = !DILocation(line: 2136, column: 4, scope: !4805)
!4807 = !DILocation(line: 2138, column: 8, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4793, file: !1, line: 2138, column: 8)
!4809 = !DILocation(line: 2138, column: 15, scope: !4808)
!4810 = !DILocation(line: 2138, column: 8, scope: !4793)
!4811 = !DILocation(line: 2139, column: 12, scope: !4808)
!4812 = !DILocation(line: 2139, column: 5, scope: !4808)
!4813 = !DILocation(line: 2140, column: 3, scope: !4793)
!4814 = !DILocation(line: 2141, column: 28, scope: !4776)
!4815 = !DILocation(line: 2141, column: 15, scope: !4776)
!4816 = !DILocation(line: 2141, column: 3, scope: !4776)
!4817 = !DILocation(line: 2141, column: 7, scope: !4776)
!4818 = !DILocation(line: 2141, column: 21, scope: !4776)
!4819 = !DILocation(line: 2141, column: 26, scope: !4776)
!4820 = !DILocation(line: 2142, column: 35, scope: !4776)
!4821 = !DILocation(line: 2142, column: 15, scope: !4776)
!4822 = !DILocation(line: 2142, column: 3, scope: !4776)
!4823 = !DILocation(line: 2142, column: 7, scope: !4776)
!4824 = !DILocation(line: 2142, column: 21, scope: !4776)
!4825 = !DILocation(line: 2142, column: 33, scope: !4776)
!4826 = !DILocation(line: 2143, column: 2, scope: !4776)
!4827 = !DILocation(line: 2128, column: 36, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4771, file: !1, discriminator: 2)
!4829 = !DILocation(line: 2128, column: 2, scope: !4828)
!4830 = !DILocation(line: 2145, column: 2, scope: !569)
!4831 = !DILocation(line: 2145, column: 6, scope: !569)
!4832 = !DILocation(line: 2145, column: 12, scope: !569)
!4833 = !DILocation(line: 2146, column: 2, scope: !569)
!4834 = !DILocation(line: 2146, column: 6, scope: !569)
!4835 = !DILocation(line: 2146, column: 12, scope: !569)
!4836 = !DILocation(line: 2147, column: 2, scope: !569)
!4837 = !DILocation(line: 2147, column: 6, scope: !569)
!4838 = !DILocation(line: 2147, column: 9, scope: !569)
!4839 = !DILocation(line: 2147, column: 22, scope: !569)
!4840 = !DILocation(line: 2148, column: 2, scope: !569)
!4841 = !DILocation(line: 2148, column: 6, scope: !569)
!4842 = !DILocation(line: 2148, column: 9, scope: !569)
!4843 = !DILocation(line: 2148, column: 21, scope: !569)
!4844 = !DILocation(line: 2149, column: 20, scope: !569)
!4845 = !DILocation(line: 2149, column: 24, scope: !569)
!4846 = !DILocation(line: 2149, column: 27, scope: !569)
!4847 = !DILocation(line: 2149, column: 11, scope: !569)
!4848 = !DILocation(line: 2149, column: 15, scope: !569)
!4849 = !DILocation(line: 2149, column: 18, scope: !569)
!4850 = !DILocation(line: 2149, column: 2, scope: !569)
!4851 = !DILocation(line: 2149, column: 6, scope: !569)
!4852 = !DILocation(line: 2149, column: 9, scope: !569)
!4853 = !DILocation(line: 2152, column: 25, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2152, column: 6)
!4855 = !DILocation(line: 2152, column: 29, scope: !4854)
!4856 = !DILocation(line: 2152, column: 6, scope: !4854)
!4857 = !DILocation(line: 2152, column: 40, scope: !4854)
!4858 = !DILocation(line: 2152, column: 6, scope: !569)
!4859 = !DILocation(line: 2153, column: 3, scope: !4854)
!4860 = !DILocation(line: 2156, column: 25, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2156, column: 6)
!4862 = !DILocation(line: 2156, column: 29, scope: !4861)
!4863 = !DILocation(line: 2156, column: 6, scope: !4861)
!4864 = !DILocation(line: 2156, column: 42, scope: !4861)
!4865 = !DILocation(line: 2156, column: 6, scope: !569)
!4866 = !DILocation(line: 2157, column: 3, scope: !4861)
!4867 = !DILocation(line: 2160, column: 25, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2160, column: 6)
!4869 = !DILocation(line: 2160, column: 29, scope: !4868)
!4870 = !DILocation(line: 2160, column: 39, scope: !4868)
!4871 = !DILocation(line: 2160, column: 45, scope: !4868)
!4872 = !DILocation(line: 2160, column: 37, scope: !4868)
!4873 = !DILocation(line: 2160, column: 34, scope: !4868)
!4874 = !DILocation(line: 2160, column: 6, scope: !4868)
!4875 = !DILocation(line: 2161, column: 6, scope: !4868)
!4876 = !DILocation(line: 2160, column: 6, scope: !569)
!4877 = !DILocation(line: 2162, column: 3, scope: !4868)
!4878 = !DILocation(line: 2165, column: 25, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2165, column: 6)
!4880 = !DILocation(line: 2165, column: 29, scope: !4879)
!4881 = !DILocation(line: 2165, column: 6, scope: !4879)
!4882 = !DILocation(line: 2165, column: 43, scope: !4879)
!4883 = !DILocation(line: 2165, column: 6, scope: !569)
!4884 = !DILocation(line: 2166, column: 3, scope: !4879)
!4885 = !DILocation(line: 2168, column: 2, scope: !569)
!4886 = !DILocation(line: 2168, column: 6, scope: !569)
!4887 = !DILocation(line: 2168, column: 12, scope: !569)
!4888 = !DILocation(line: 2170, column: 2, scope: !569)
!4889 = !DILocation(line: 2171, column: 1, scope: !569)
!4890 = !DILocalVariable(name: "strm", arg: 1, scope: !580, file: !1, line: 2359, type: !572)
!4891 = !DILocation(line: 2359, column: 42, scope: !580)
!4892 = !DILocation(line: 2361, column: 2, scope: !580)
!4893 = !DILocation(line: 2361, column: 8, scope: !580)
!4894 = !DILocation(line: 2361, column: 12, scope: !580)
!4895 = !DILocation(line: 2361, column: 15, scope: !580)
!4896 = !DILocation(line: 2361, column: 27, scope: !580)
!4897 = !DILocation(line: 2362, column: 2, scope: !580)
!4898 = !DILocation(line: 2362, column: 8, scope: !580)
!4899 = !DILocation(line: 2362, column: 12, scope: !580)
!4900 = !DILocation(line: 2362, column: 15, scope: !580)
!4901 = !DILocation(line: 2362, column: 24, scope: !580)
!4902 = !DILocation(line: 2363, column: 1, scope: !580)
!4903 = !DILocalVariable(name: "strm", arg: 1, scope: !583, file: !1, line: 2399, type: !572)
!4904 = !DILocation(line: 2399, column: 31, scope: !583)
!4905 = !DILocalVariable(name: "last", arg: 2, scope: !583, file: !1, line: 2399, type: !23)
!4906 = !DILocation(line: 2399, column: 41, scope: !583)
!4907 = !DILocalVariable(name: "ds", scope: !583, file: !1, line: 2401, type: !444)
!4908 = !DILocation(line: 2401, column: 18, scope: !583)
!4909 = !DILocation(line: 2401, column: 23, scope: !583)
!4910 = !DILocation(line: 2401, column: 29, scope: !583)
!4911 = !DILocalVariable(name: "avail_in", scope: !583, file: !1, line: 2402, type: !52)
!4912 = !DILocation(line: 2402, column: 10, scope: !583)
!4913 = !DILocalVariable(name: "r", scope: !583, file: !1, line: 2403, type: !23)
!4914 = !DILocation(line: 2403, column: 6, scope: !583)
!4915 = !DILocation(line: 2405, column: 6, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !583, file: !1, line: 2405, column: 6)
!4917 = !DILocation(line: 2405, column: 10, scope: !4916)
!4918 = !DILocation(line: 2405, column: 6, scope: !583)
!4919 = !DILocation(line: 2406, column: 11, scope: !4916)
!4920 = !DILocation(line: 2406, column: 15, scope: !4916)
!4921 = !DILocation(line: 2406, column: 3, scope: !4916)
!4922 = !DILocation(line: 2408, column: 13, scope: !583)
!4923 = !DILocation(line: 2408, column: 19, scope: !583)
!4924 = !DILocation(line: 2408, column: 11, scope: !583)
!4925 = !DILocation(line: 2409, column: 15, scope: !583)
!4926 = !DILocation(line: 2409, column: 23, scope: !583)
!4927 = !DILocation(line: 2409, column: 27, scope: !583)
!4928 = !DILocation(line: 2409, column: 2, scope: !583)
!4929 = !DILocation(line: 2410, column: 2, scope: !583)
!4930 = !DILocation(line: 2411, column: 7, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !1, line: 2411, column: 7)
!4932 = distinct !DILexicalBlock(scope: !583, file: !1, line: 2410, column: 5)
!4933 = !DILocation(line: 2411, column: 11, scope: !4931)
!4934 = !DILocation(line: 2411, column: 17, scope: !4931)
!4935 = !DILocation(line: 2411, column: 7, scope: !4932)
!4936 = !DILocation(line: 2412, column: 24, scope: !4931)
!4937 = !DILocation(line: 2412, column: 30, scope: !4931)
!4938 = !DILocation(line: 2412, column: 8, scope: !4931)
!4939 = !DILocation(line: 2412, column: 6, scope: !4931)
!4940 = !DILocation(line: 2412, column: 4, scope: !4931)
!4941 = !DILocalVariable(name: "bytes_written", scope: !4942, file: !1, line: 2414, type: !52)
!4942 = distinct !DILexicalBlock(scope: !4931, file: !1, line: 2413, column: 8)
!4943 = !DILocation(line: 2414, column: 12, scope: !4942)
!4944 = !DILocation(line: 2414, column: 28, scope: !4942)
!4945 = !DILocation(line: 2414, column: 34, scope: !4942)
!4946 = !DILocation(line: 2415, column: 26, scope: !4942)
!4947 = !DILocation(line: 2415, column: 32, scope: !4942)
!4948 = !DILocation(line: 2415, column: 8, scope: !4942)
!4949 = !DILocation(line: 2415, column: 6, scope: !4942)
!4950 = !DILocation(line: 2416, column: 21, scope: !4942)
!4951 = !DILocation(line: 2416, column: 27, scope: !4942)
!4952 = !DILocation(line: 2416, column: 18, scope: !4942)
!4953 = !DILocation(line: 2417, column: 22, scope: !4942)
!4954 = !DILocation(line: 2417, column: 4, scope: !4942)
!4955 = !DILocation(line: 2417, column: 10, scope: !4942)
!4956 = !DILocation(line: 2417, column: 19, scope: !4942)
!4957 = !DILocation(line: 2418, column: 23, scope: !4942)
!4958 = !DILocation(line: 2418, column: 4, scope: !4942)
!4959 = !DILocation(line: 2418, column: 10, scope: !4942)
!4960 = !DILocation(line: 2418, column: 20, scope: !4942)
!4961 = !DILocation(line: 2420, column: 2, scope: !4932)
!4962 = !DILocation(line: 2420, column: 11, scope: !4963)
!4963 = !DILexicalBlockFile(scope: !583, file: !1, discriminator: 1)
!4964 = !DILocation(line: 2420, column: 13, scope: !4963)
!4965 = !DILocation(line: 2420, column: 2, scope: !4963)
!4966 = !DILocation(line: 2421, column: 20, scope: !583)
!4967 = !DILocation(line: 2421, column: 31, scope: !583)
!4968 = !DILocation(line: 2421, column: 37, scope: !583)
!4969 = !DILocation(line: 2421, column: 29, scope: !583)
!4970 = !DILocation(line: 2421, column: 2, scope: !583)
!4971 = !DILocation(line: 2421, column: 8, scope: !583)
!4972 = !DILocation(line: 2421, column: 17, scope: !583)
!4973 = !DILocation(line: 2422, column: 10, scope: !583)
!4974 = !DILocation(line: 2422, column: 2, scope: !583)
!4975 = !DILocation(line: 2423, column: 1, scope: !583)
!4976 = !DILocalVariable(name: "strm", arg: 1, scope: !611, file: !1, line: 2196, type: !572)
!4977 = !DILocation(line: 2196, column: 36, scope: !611)
!4978 = !DILocalVariable(name: "p", arg: 2, scope: !611, file: !1, line: 2196, type: !123)
!4979 = !DILocation(line: 2196, column: 48, scope: !611)
!4980 = !DILocalVariable(name: "size", arg: 3, scope: !611, file: !1, line: 2196, type: !45)
!4981 = !DILocation(line: 2196, column: 58, scope: !611)
!4982 = !DILocalVariable(name: "offset", arg: 4, scope: !611, file: !1, line: 2196, type: !305)
!4983 = !DILocation(line: 2196, column: 73, scope: !611)
!4984 = !DILocalVariable(name: "ds", scope: !611, file: !1, line: 2198, type: !444)
!4985 = !DILocation(line: 2198, column: 18, scope: !611)
!4986 = !DILocation(line: 2198, column: 23, scope: !611)
!4987 = !DILocation(line: 2198, column: 29, scope: !611)
!4988 = !DILocalVariable(name: "b", scope: !611, file: !1, line: 2199, type: !325)
!4989 = !DILocation(line: 2199, column: 17, scope: !611)
!4990 = !DILocalVariable(name: "end", scope: !611, file: !1, line: 2199, type: !325)
!4991 = !DILocation(line: 2199, column: 21, scope: !611)
!4992 = !DILocation(line: 2201, column: 7, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !611, file: !1, line: 2201, column: 6)
!4994 = !DILocation(line: 2201, column: 11, scope: !4993)
!4995 = !DILocation(line: 2201, column: 23, scope: !4993)
!4996 = !DILocation(line: 2201, column: 26, scope: !4997)
!4997 = !DILexicalBlockFile(scope: !4993, file: !1, discriminator: 1)
!4998 = !DILocation(line: 2201, column: 31, scope: !4997)
!4999 = !DILocation(line: 2201, column: 6, scope: !4997)
!5000 = !DILocation(line: 2202, column: 3, scope: !4993)
!5001 = !DILocation(line: 2203, column: 6, scope: !611)
!5002 = !DILocation(line: 2203, column: 4, scope: !611)
!5003 = !DILocation(line: 2204, column: 8, scope: !611)
!5004 = !DILocation(line: 2204, column: 12, scope: !611)
!5005 = !DILocation(line: 2204, column: 10, scope: !611)
!5006 = !DILocation(line: 2204, column: 17, scope: !611)
!5007 = !DILocation(line: 2204, column: 6, scope: !611)
!5008 = !DILocation(line: 2205, column: 2, scope: !611)
!5009 = !DILocation(line: 2205, column: 9, scope: !5010)
!5010 = !DILexicalBlockFile(scope: !611, file: !1, discriminator: 1)
!5011 = !DILocation(line: 2205, column: 13, scope: !5010)
!5012 = !DILocation(line: 2205, column: 11, scope: !5010)
!5013 = !DILocation(line: 2205, column: 17, scope: !5010)
!5014 = !DILocation(line: 2205, column: 32, scope: !5015)
!5015 = !DILexicalBlockFile(scope: !611, file: !1, discriminator: 2)
!5016 = !DILocation(line: 2205, column: 41, scope: !5015)
!5017 = !DILocation(line: 2205, column: 47, scope: !5015)
!5018 = !DILocation(line: 2205, column: 45, scope: !5015)
!5019 = !DILocation(line: 2205, column: 25, scope: !5015)
!5020 = !DILocation(line: 2205, column: 23, scope: !5015)
!5021 = !DILocation(line: 2205, column: 51, scope: !5015)
!5022 = !DILocation(line: 2205, column: 2, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !611, file: !1, discriminator: 3)
!5024 = !DILocalVariable(name: "i", scope: !5025, file: !1, line: 2206, type: !45)
!5025 = distinct !DILexicalBlock(scope: !611, file: !1, line: 2205, column: 60)
!5026 = !DILocation(line: 2206, column: 10, scope: !5025)
!5027 = !DILocation(line: 2206, column: 14, scope: !5025)
!5028 = !DILocation(line: 2206, column: 35, scope: !5025)
!5029 = !DILocation(line: 2206, column: 16, scope: !5025)
!5030 = !DILocalVariable(name: "cp", scope: !5025, file: !1, line: 2207, type: !513)
!5031 = !DILocation(line: 2207, column: 11, scope: !5025)
!5032 = !DILocalVariable(name: "displacement", scope: !5025, file: !1, line: 2207, type: !513)
!5033 = !DILocation(line: 2207, column: 15, scope: !5025)
!5034 = !DILocalVariable(name: "value", scope: !5025, file: !1, line: 2207, type: !513)
!5035 = !DILocation(line: 2207, column: 29, scope: !5025)
!5036 = !DILocation(line: 2209, column: 18, scope: !5025)
!5037 = !DILocation(line: 2209, column: 37, scope: !5025)
!5038 = !DILocation(line: 2209, column: 27, scope: !5025)
!5039 = !DILocation(line: 2209, column: 25, scope: !5025)
!5040 = !DILocation(line: 2209, column: 6, scope: !5025)
!5041 = !DILocation(line: 2210, column: 28, scope: !5025)
!5042 = !DILocation(line: 2210, column: 11, scope: !5025)
!5043 = !DILocation(line: 2210, column: 9, scope: !5025)
!5044 = !DILocation(line: 2211, column: 7, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 2211, column: 7)
!5046 = !DILocation(line: 2211, column: 17, scope: !5045)
!5047 = !DILocation(line: 2211, column: 16, scope: !5045)
!5048 = !DILocation(line: 2211, column: 13, scope: !5045)
!5049 = !DILocation(line: 2211, column: 20, scope: !5045)
!5050 = !DILocation(line: 2211, column: 23, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5045, file: !1, discriminator: 1)
!5052 = !DILocation(line: 2211, column: 40, scope: !5051)
!5053 = !DILocation(line: 2211, column: 44, scope: !5051)
!5054 = !DILocation(line: 2211, column: 29, scope: !5051)
!5055 = !DILocation(line: 2211, column: 7, scope: !5051)
!5056 = !DILocation(line: 2212, column: 8, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5058, file: !1, line: 2212, column: 8)
!5058 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2211, column: 62)
!5059 = !DILocation(line: 2212, column: 14, scope: !5057)
!5060 = !DILocation(line: 2212, column: 8, scope: !5058)
!5061 = !DILocation(line: 2213, column: 20, scope: !5057)
!5062 = !DILocation(line: 2213, column: 28, scope: !5057)
!5063 = !DILocation(line: 2213, column: 26, scope: !5057)
!5064 = !DILocation(line: 2213, column: 18, scope: !5057)
!5065 = !DILocation(line: 2213, column: 5, scope: !5057)
!5066 = !DILocation(line: 2215, column: 20, scope: !5057)
!5067 = !DILocation(line: 2215, column: 28, scope: !5057)
!5068 = !DILocation(line: 2215, column: 32, scope: !5057)
!5069 = !DILocation(line: 2215, column: 26, scope: !5057)
!5070 = !DILocation(line: 2215, column: 18, scope: !5057)
!5071 = !DILocation(line: 2216, column: 21, scope: !5058)
!5072 = !DILocation(line: 2216, column: 37, scope: !5058)
!5073 = !DILocation(line: 2216, column: 4, scope: !5058)
!5074 = !DILocation(line: 2217, column: 3, scope: !5058)
!5075 = !DILocation(line: 2218, column: 5, scope: !5025)
!5076 = !DILocation(line: 2205, column: 2, scope: !5077)
!5077 = !DILexicalBlockFile(scope: !611, file: !1, discriminator: 4)
!5078 = !DILocation(line: 2220, column: 1, scope: !611)
!5079 = !DILocalVariable(name: "hf", arg: 1, scope: !573, file: !1, line: 3160, type: !576)
!5080 = !DILocation(line: 3160, column: 34, scope: !573)
!5081 = !DILocation(line: 3162, column: 7, scope: !573)
!5082 = !DILocation(line: 3162, column: 11, scope: !573)
!5083 = !DILocation(line: 3162, column: 2, scope: !573)
!5084 = !DILocation(line: 3163, column: 7, scope: !573)
!5085 = !DILocation(line: 3163, column: 11, scope: !573)
!5086 = !DILocation(line: 3163, column: 2, scope: !573)
!5087 = !DILocation(line: 3164, column: 7, scope: !573)
!5088 = !DILocation(line: 3164, column: 11, scope: !573)
!5089 = !DILocation(line: 3164, column: 2, scope: !573)
!5090 = !DILocation(line: 3165, column: 1, scope: !573)
!5091 = !DILocalVariable(name: "hf", arg: 1, scope: !577, file: !1, line: 3128, type: !576)
!5092 = !DILocation(line: 3128, column: 34, scope: !577)
!5093 = !DILocalVariable(name: "len_size", arg: 2, scope: !577, file: !1, line: 3128, type: !45)
!5094 = !DILocation(line: 3128, column: 45, scope: !577)
!5095 = !DILocalVariable(name: "tbl_bits", arg: 3, scope: !577, file: !1, line: 3128, type: !23)
!5096 = !DILocation(line: 3128, column: 59, scope: !577)
!5097 = !DILocalVariable(name: "bits", scope: !577, file: !1, line: 3130, type: !23)
!5098 = !DILocation(line: 3130, column: 6, scope: !577)
!5099 = !DILocation(line: 3132, column: 6, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !577, file: !1, line: 3132, column: 6)
!5101 = !DILocation(line: 3132, column: 10, scope: !5100)
!5102 = !DILocation(line: 3132, column: 17, scope: !5100)
!5103 = !DILocation(line: 3132, column: 25, scope: !5100)
!5104 = !DILocation(line: 3132, column: 28, scope: !5105)
!5105 = !DILexicalBlockFile(scope: !5100, file: !1, discriminator: 1)
!5106 = !DILocation(line: 3132, column: 32, scope: !5105)
!5107 = !DILocation(line: 3132, column: 49, scope: !5105)
!5108 = !DILocation(line: 3132, column: 44, scope: !5105)
!5109 = !DILocation(line: 3132, column: 41, scope: !5105)
!5110 = !DILocation(line: 3132, column: 6, scope: !5105)
!5111 = !DILocation(line: 3133, column: 8, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5100, file: !1, line: 3132, column: 59)
!5113 = !DILocation(line: 3133, column: 12, scope: !5112)
!5114 = !DILocation(line: 3133, column: 3, scope: !5112)
!5115 = !DILocation(line: 3134, column: 23, scope: !5112)
!5116 = !DILocation(line: 3134, column: 16, scope: !5112)
!5117 = !DILocation(line: 3134, column: 3, scope: !5112)
!5118 = !DILocation(line: 3134, column: 7, scope: !5112)
!5119 = !DILocation(line: 3134, column: 14, scope: !5112)
!5120 = !DILocation(line: 3135, column: 7, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5112, file: !1, line: 3135, column: 7)
!5122 = !DILocation(line: 3135, column: 11, scope: !5121)
!5123 = !DILocation(line: 3135, column: 18, scope: !5121)
!5124 = !DILocation(line: 3135, column: 7, scope: !5112)
!5125 = !DILocation(line: 3136, column: 4, scope: !5121)
!5126 = !DILocation(line: 3137, column: 23, scope: !5112)
!5127 = !DILocation(line: 3137, column: 18, scope: !5112)
!5128 = !DILocation(line: 3137, column: 3, scope: !5112)
!5129 = !DILocation(line: 3137, column: 7, scope: !5112)
!5130 = !DILocation(line: 3137, column: 16, scope: !5112)
!5131 = !DILocation(line: 3138, column: 2, scope: !5112)
!5132 = !DILocation(line: 3139, column: 10, scope: !5100)
!5133 = !DILocation(line: 3139, column: 14, scope: !5100)
!5134 = !DILocation(line: 3139, column: 25, scope: !5100)
!5135 = !DILocation(line: 3139, column: 34, scope: !5100)
!5136 = !DILocation(line: 3139, column: 3, scope: !5100)
!5137 = !DILocation(line: 3140, column: 6, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !577, file: !1, line: 3140, column: 6)
!5139 = !DILocation(line: 3140, column: 10, scope: !5138)
!5140 = !DILocation(line: 3140, column: 14, scope: !5138)
!5141 = !DILocation(line: 3140, column: 6, scope: !577)
!5142 = !DILocation(line: 3141, column: 7, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !1, line: 3141, column: 7)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !1, line: 3140, column: 23)
!5145 = !DILocation(line: 3141, column: 16, scope: !5143)
!5146 = !DILocation(line: 3141, column: 7, scope: !5144)
!5147 = !DILocation(line: 3142, column: 11, scope: !5143)
!5148 = !DILocation(line: 3142, column: 9, scope: !5143)
!5149 = !DILocation(line: 3142, column: 4, scope: !5143)
!5150 = !DILocation(line: 3144, column: 9, scope: !5143)
!5151 = !DILocation(line: 3145, column: 34, scope: !5144)
!5152 = !DILocation(line: 3145, column: 31, scope: !5144)
!5153 = !DILocation(line: 3145, column: 40, scope: !5144)
!5154 = !DILocation(line: 3145, column: 13, scope: !5144)
!5155 = !DILocation(line: 3145, column: 3, scope: !5144)
!5156 = !DILocation(line: 3145, column: 7, scope: !5144)
!5157 = !DILocation(line: 3145, column: 11, scope: !5144)
!5158 = !DILocation(line: 3146, column: 7, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5144, file: !1, line: 3146, column: 7)
!5160 = !DILocation(line: 3146, column: 11, scope: !5159)
!5161 = !DILocation(line: 3146, column: 15, scope: !5159)
!5162 = !DILocation(line: 3146, column: 7, scope: !5144)
!5163 = !DILocation(line: 3147, column: 4, scope: !5159)
!5164 = !DILocation(line: 3148, column: 18, scope: !5144)
!5165 = !DILocation(line: 3148, column: 3, scope: !5144)
!5166 = !DILocation(line: 3148, column: 7, scope: !5144)
!5167 = !DILocation(line: 3148, column: 16, scope: !5144)
!5168 = !DILocation(line: 3149, column: 2, scope: !5144)
!5169 = !DILocation(line: 3150, column: 6, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !577, file: !1, line: 3150, column: 6)
!5171 = !DILocation(line: 3150, column: 10, scope: !5170)
!5172 = !DILocation(line: 3150, column: 15, scope: !5170)
!5173 = !DILocation(line: 3150, column: 23, scope: !5170)
!5174 = !DILocation(line: 3150, column: 26, scope: !5175)
!5175 = !DILexicalBlockFile(scope: !5170, file: !1, discriminator: 1)
!5176 = !DILocation(line: 3150, column: 35, scope: !5175)
!5177 = !DILocation(line: 3150, column: 6, scope: !5175)
!5178 = !DILocation(line: 3151, column: 26, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5170, file: !1, line: 3150, column: 48)
!5180 = !DILocation(line: 3151, column: 35, scope: !5179)
!5181 = !DILocation(line: 3151, column: 47, scope: !5179)
!5182 = !DILocation(line: 3151, column: 22, scope: !5179)
!5183 = !DILocation(line: 3151, column: 3, scope: !5179)
!5184 = !DILocation(line: 3151, column: 7, scope: !5179)
!5185 = !DILocation(line: 3151, column: 18, scope: !5179)
!5186 = !DILocation(line: 3152, column: 21, scope: !5179)
!5187 = !DILocation(line: 3152, column: 25, scope: !5179)
!5188 = !DILocation(line: 3152, column: 36, scope: !5179)
!5189 = !DILocation(line: 3152, column: 14, scope: !5179)
!5190 = !DILocation(line: 3152, column: 3, scope: !5179)
!5191 = !DILocation(line: 3152, column: 7, scope: !5179)
!5192 = !DILocation(line: 3152, column: 12, scope: !5179)
!5193 = !DILocation(line: 3153, column: 7, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5179, file: !1, line: 3153, column: 7)
!5195 = !DILocation(line: 3153, column: 11, scope: !5194)
!5196 = !DILocation(line: 3153, column: 16, scope: !5194)
!5197 = !DILocation(line: 3153, column: 7, scope: !5179)
!5198 = !DILocation(line: 3154, column: 4, scope: !5194)
!5199 = !DILocation(line: 3155, column: 2, scope: !5179)
!5200 = !DILocation(line: 3156, column: 2, scope: !577)
!5201 = !DILocation(line: 3157, column: 1, scope: !577)
!5202 = !DILocalVariable(name: "strm", arg: 1, scope: !584, file: !1, line: 2343, type: !572)
!5203 = !DILocation(line: 2343, column: 33, scope: !584)
!5204 = !DILocalVariable(name: "br", arg: 2, scope: !584, file: !1, line: 2343, type: !587)
!5205 = !DILocation(line: 2343, column: 54, scope: !584)
!5206 = !DILocalVariable(name: "n", scope: !584, file: !1, line: 2345, type: !23)
!5207 = !DILocation(line: 2345, column: 6, scope: !584)
!5208 = !DILocation(line: 2345, column: 23, scope: !584)
!5209 = !DILocation(line: 2345, column: 27, scope: !584)
!5210 = !DILocation(line: 2345, column: 21, scope: !584)
!5211 = !DILocation(line: 2345, column: 10, scope: !584)
!5212 = !DILocation(line: 2347, column: 6, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !584, file: !1, line: 2347, column: 6)
!5214 = !DILocation(line: 2347, column: 10, scope: !5213)
!5215 = !DILocation(line: 2347, column: 19, scope: !5213)
!5216 = !DILocation(line: 2347, column: 22, scope: !5217)
!5217 = !DILexicalBlockFile(scope: !5213, file: !1, discriminator: 1)
!5218 = !DILocation(line: 2347, column: 24, scope: !5217)
!5219 = !DILocation(line: 2347, column: 30, scope: !5217)
!5220 = !DILocation(line: 2347, column: 33, scope: !5221)
!5221 = !DILexicalBlockFile(scope: !5213, file: !1, discriminator: 2)
!5222 = !DILocation(line: 2347, column: 39, scope: !5221)
!5223 = !DILocation(line: 2347, column: 48, scope: !5221)
!5224 = !DILocation(line: 2347, column: 6, scope: !5221)
!5225 = !DILocation(line: 2349, column: 7, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5213, file: !1, line: 2347, column: 53)
!5227 = !DILocation(line: 2349, column: 11, scope: !5226)
!5228 = !DILocation(line: 2349, column: 24, scope: !5226)
!5229 = !DILocation(line: 2350, column: 19, scope: !5226)
!5230 = !DILocation(line: 2350, column: 25, scope: !5226)
!5231 = !DILocation(line: 2350, column: 18, scope: !5226)
!5232 = !DILocation(line: 2350, column: 7, scope: !5226)
!5233 = !DILocation(line: 2350, column: 6, scope: !5226)
!5234 = !DILocation(line: 2350, column: 35, scope: !5226)
!5235 = !DILocation(line: 2349, column: 31, scope: !5226)
!5236 = !DILocation(line: 2350, column: 42, scope: !5226)
!5237 = !DILocation(line: 2350, column: 46, scope: !5226)
!5238 = !DILocation(line: 2350, column: 40, scope: !5226)
!5239 = !DILocation(line: 2348, column: 3, scope: !5226)
!5240 = !DILocation(line: 2348, column: 7, scope: !5226)
!5241 = !DILocation(line: 2348, column: 20, scope: !5226)
!5242 = !DILocation(line: 2351, column: 3, scope: !5226)
!5243 = !DILocation(line: 2351, column: 9, scope: !5226)
!5244 = !DILocation(line: 2351, column: 16, scope: !5226)
!5245 = !DILocation(line: 2352, column: 3, scope: !5226)
!5246 = !DILocation(line: 2352, column: 9, scope: !5226)
!5247 = !DILocation(line: 2352, column: 17, scope: !5226)
!5248 = !DILocation(line: 2353, column: 3, scope: !5226)
!5249 = !DILocation(line: 2353, column: 7, scope: !5226)
!5250 = !DILocation(line: 2353, column: 19, scope: !5226)
!5251 = !DILocation(line: 2354, column: 3, scope: !5226)
!5252 = !DILocation(line: 2354, column: 7, scope: !5226)
!5253 = !DILocation(line: 2354, column: 16, scope: !5226)
!5254 = !DILocation(line: 2355, column: 2, scope: !5226)
!5255 = !DILocation(line: 2356, column: 1, scope: !584)
!5256 = !DILocalVariable(name: "strm", arg: 1, scope: !588, file: !1, line: 2426, type: !572)
!5257 = !DILocation(line: 2426, column: 36, scope: !588)
!5258 = !DILocalVariable(name: "last", arg: 2, scope: !588, file: !1, line: 2426, type: !23)
!5259 = !DILocation(line: 2426, column: 46, scope: !588)
!5260 = !DILocalVariable(name: "ds", scope: !588, file: !1, line: 2428, type: !444)
!5261 = !DILocation(line: 2428, column: 18, scope: !588)
!5262 = !DILocation(line: 2428, column: 23, scope: !588)
!5263 = !DILocation(line: 2428, column: 29, scope: !588)
!5264 = !DILocalVariable(name: "br", scope: !588, file: !1, line: 2429, type: !587)
!5265 = !DILocation(line: 2429, column: 17, scope: !588)
!5266 = !DILocation(line: 2429, column: 24, scope: !588)
!5267 = !DILocation(line: 2429, column: 28, scope: !588)
!5268 = !DILocalVariable(name: "i", scope: !588, file: !1, line: 2430, type: !23)
!5269 = !DILocation(line: 2430, column: 6, scope: !588)
!5270 = !DILocalVariable(name: "r", scope: !588, file: !1, line: 2430, type: !23)
!5271 = !DILocation(line: 2430, column: 9, scope: !588)
!5272 = !DILocation(line: 2432, column: 2, scope: !588)
!5273 = !DILocation(line: 2433, column: 11, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !1, line: 2432, column: 11)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !1, line: 2432, column: 2)
!5276 = distinct !DILexicalBlock(scope: !588, file: !1, line: 2432, column: 2)
!5277 = !DILocation(line: 2433, column: 15, scope: !5274)
!5278 = !DILocation(line: 2433, column: 3, scope: !5274)
!5279 = !DILocation(line: 2435, column: 9, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2435, column: 8)
!5281 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 2433, column: 22)
!5282 = !DILocation(line: 2435, column: 9, scope: !5283)
!5283 = !DILexicalBlockFile(scope: !5280, file: !1, discriminator: 1)
!5284 = !DILocation(line: 2435, column: 9, scope: !5285)
!5285 = !DILexicalBlockFile(scope: !5280, file: !1, discriminator: 2)
!5286 = !DILocation(line: 2435, column: 8, scope: !5285)
!5287 = !DILocation(line: 2436, column: 5, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5280, file: !1, line: 2435, column: 41)
!5289 = !DILocation(line: 2436, column: 9, scope: !5288)
!5290 = !DILocation(line: 2436, column: 15, scope: !5288)
!5291 = !DILocation(line: 2437, column: 9, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !1, line: 2437, column: 9)
!5293 = !DILocation(line: 2437, column: 9, scope: !5288)
!5294 = !DILocation(line: 2438, column: 6, scope: !5292)
!5295 = !DILocation(line: 2439, column: 5, scope: !5288)
!5296 = !DILocation(line: 2441, column: 22, scope: !5281)
!5297 = !DILocation(line: 2441, column: 4, scope: !5281)
!5298 = !DILocation(line: 2441, column: 8, scope: !5281)
!5299 = !DILocation(line: 2441, column: 20, scope: !5281)
!5300 = !DILocation(line: 2442, column: 4, scope: !5281)
!5301 = !DILocation(line: 2445, column: 8, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2445, column: 8)
!5303 = !DILocation(line: 2445, column: 12, scope: !5302)
!5304 = !DILocation(line: 2445, column: 8, scope: !5281)
!5305 = !DILocation(line: 2446, column: 10, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5307, file: !1, line: 2446, column: 9)
!5307 = distinct !DILexicalBlock(scope: !5302, file: !1, line: 2445, column: 25)
!5308 = !DILocation(line: 2446, column: 10, scope: !5309)
!5309 = !DILexicalBlockFile(scope: !5306, file: !1, discriminator: 1)
!5310 = !DILocation(line: 2446, column: 10, scope: !5311)
!5311 = !DILexicalBlockFile(scope: !5306, file: !1, discriminator: 2)
!5312 = !DILocation(line: 2446, column: 9, scope: !5311)
!5313 = !DILocation(line: 2447, column: 6, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5306, file: !1, line: 2446, column: 43)
!5315 = !DILocation(line: 2447, column: 10, scope: !5314)
!5316 = !DILocation(line: 2447, column: 16, scope: !5314)
!5317 = !DILocation(line: 2448, column: 10, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5314, file: !1, line: 2448, column: 10)
!5319 = !DILocation(line: 2448, column: 10, scope: !5314)
!5320 = !DILocation(line: 2449, column: 7, scope: !5318)
!5321 = !DILocation(line: 2450, column: 6, scope: !5314)
!5322 = !DILocation(line: 2452, column: 28, scope: !5307)
!5323 = !DILocation(line: 2452, column: 5, scope: !5307)
!5324 = !DILocation(line: 2452, column: 9, scope: !5307)
!5325 = !DILocation(line: 2452, column: 26, scope: !5307)
!5326 = !DILocation(line: 2453, column: 5, scope: !5307)
!5327 = !DILocation(line: 2454, column: 5, scope: !5307)
!5328 = !DILocation(line: 2454, column: 9, scope: !5307)
!5329 = !DILocation(line: 2454, column: 26, scope: !5307)
!5330 = !DILocation(line: 2455, column: 29, scope: !5307)
!5331 = !DILocation(line: 2455, column: 5, scope: !5307)
!5332 = !DILocation(line: 2455, column: 9, scope: !5307)
!5333 = !DILocation(line: 2455, column: 26, scope: !5307)
!5334 = !DILocation(line: 2456, column: 5, scope: !5307)
!5335 = !DILocation(line: 2457, column: 4, scope: !5307)
!5336 = !DILocation(line: 2445, column: 12, scope: !5337)
!5337 = !DILexicalBlockFile(scope: !5302, file: !1, discriminator: 1)
!5338 = !DILocation(line: 2460, column: 9, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2460, column: 8)
!5340 = !DILocation(line: 2460, column: 9, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5339, file: !1, discriminator: 1)
!5342 = !DILocation(line: 2460, column: 9, scope: !5343)
!5343 = !DILexicalBlockFile(scope: !5339, file: !1, discriminator: 2)
!5344 = !DILocation(line: 2460, column: 8, scope: !5343)
!5345 = !DILocation(line: 2461, column: 5, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5339, file: !1, line: 2460, column: 41)
!5347 = !DILocation(line: 2461, column: 9, scope: !5346)
!5348 = !DILocation(line: 2461, column: 15, scope: !5346)
!5349 = !DILocation(line: 2462, column: 9, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 2462, column: 9)
!5351 = !DILocation(line: 2462, column: 9, scope: !5346)
!5352 = !DILocation(line: 2463, column: 6, scope: !5350)
!5353 = !DILocation(line: 2464, column: 5, scope: !5346)
!5354 = !DILocation(line: 2466, column: 21, scope: !5281)
!5355 = !DILocation(line: 2466, column: 4, scope: !5281)
!5356 = !DILocation(line: 2466, column: 8, scope: !5281)
!5357 = !DILocation(line: 2466, column: 19, scope: !5281)
!5358 = !DILocation(line: 2467, column: 4, scope: !5281)
!5359 = !DILocation(line: 2469, column: 12, scope: !5281)
!5360 = !DILocation(line: 2469, column: 16, scope: !5281)
!5361 = !DILocation(line: 2469, column: 4, scope: !5281)
!5362 = !DILocation(line: 2473, column: 5, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2469, column: 28)
!5364 = !DILocation(line: 2475, column: 5, scope: !5363)
!5365 = !DILocation(line: 2476, column: 4, scope: !5363)
!5366 = !DILocation(line: 2479, column: 9, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2479, column: 8)
!5368 = !DILocation(line: 2479, column: 9, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !5367, file: !1, discriminator: 1)
!5370 = !DILocation(line: 2479, column: 9, scope: !5371)
!5371 = !DILexicalBlockFile(scope: !5367, file: !1, discriminator: 2)
!5372 = !DILocation(line: 2479, column: 8, scope: !5371)
!5373 = !DILocation(line: 2480, column: 5, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5367, file: !1, line: 2479, column: 42)
!5375 = !DILocation(line: 2480, column: 9, scope: !5374)
!5376 = !DILocation(line: 2480, column: 15, scope: !5374)
!5377 = !DILocation(line: 2481, column: 9, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !1, line: 2481, column: 9)
!5379 = !DILocation(line: 2481, column: 9, scope: !5374)
!5380 = !DILocation(line: 2482, column: 6, scope: !5378)
!5381 = !DILocation(line: 2483, column: 5, scope: !5374)
!5382 = !DILocation(line: 2485, column: 21, scope: !5281)
!5383 = !DILocation(line: 2485, column: 4, scope: !5281)
!5384 = !DILocation(line: 2485, column: 8, scope: !5281)
!5385 = !DILocation(line: 2485, column: 19, scope: !5281)
!5386 = !DILocation(line: 2486, column: 4, scope: !5281)
!5387 = !DILocation(line: 2487, column: 4, scope: !5281)
!5388 = !DILocation(line: 2487, column: 8, scope: !5281)
!5389 = !DILocation(line: 2487, column: 19, scope: !5281)
!5390 = !DILocation(line: 2488, column: 22, scope: !5281)
!5391 = !DILocation(line: 2488, column: 4, scope: !5281)
!5392 = !DILocation(line: 2488, column: 8, scope: !5281)
!5393 = !DILocation(line: 2488, column: 19, scope: !5281)
!5394 = !DILocation(line: 2489, column: 4, scope: !5281)
!5395 = !DILocation(line: 2490, column: 8, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2490, column: 8)
!5397 = !DILocation(line: 2490, column: 12, scope: !5396)
!5398 = !DILocation(line: 2490, column: 23, scope: !5396)
!5399 = !DILocation(line: 2490, column: 8, scope: !5281)
!5400 = !DILocation(line: 2491, column: 5, scope: !5396)
!5401 = !DILocation(line: 2492, column: 28, scope: !5281)
!5402 = !DILocation(line: 2492, column: 32, scope: !5281)
!5403 = !DILocation(line: 2492, column: 4, scope: !5281)
!5404 = !DILocation(line: 2492, column: 8, scope: !5281)
!5405 = !DILocation(line: 2492, column: 26, scope: !5281)
!5406 = !DILocation(line: 2493, column: 8, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2493, column: 8)
!5408 = !DILocation(line: 2493, column: 12, scope: !5407)
!5409 = !DILocation(line: 2493, column: 23, scope: !5407)
!5410 = !DILocation(line: 2493, column: 8, scope: !5281)
!5411 = !DILocation(line: 2494, column: 9, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 2494, column: 9)
!5413 = distinct !DILexicalBlock(scope: !5407, file: !1, line: 2493, column: 46)
!5414 = !DILocation(line: 2494, column: 13, scope: !5412)
!5415 = !DILocation(line: 2494, column: 24, scope: !5412)
!5416 = !DILocation(line: 2494, column: 9, scope: !5413)
!5417 = !DILocation(line: 2495, column: 6, scope: !5412)
!5418 = !DILocation(line: 2495, column: 10, scope: !5412)
!5419 = !DILocation(line: 2495, column: 16, scope: !5412)
!5420 = !DILocation(line: 2497, column: 6, scope: !5412)
!5421 = !DILocation(line: 2497, column: 10, scope: !5412)
!5422 = !DILocation(line: 2497, column: 16, scope: !5412)
!5423 = !DILocation(line: 2498, column: 5, scope: !5413)
!5424 = !DILocation(line: 2493, column: 26, scope: !5425)
!5425 = !DILexicalBlockFile(scope: !5407, file: !1, discriminator: 1)
!5426 = !DILocation(line: 2507, column: 8, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2507, column: 8)
!5428 = !DILocation(line: 2507, column: 8, scope: !5281)
!5429 = !DILocation(line: 2508, column: 5, scope: !5427)
!5430 = !DILocation(line: 2510, column: 9, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !1, line: 2510, column: 9)
!5432 = distinct !DILexicalBlock(scope: !5427, file: !1, line: 2509, column: 9)
!5433 = !DILocation(line: 2510, column: 9, scope: !5434)
!5434 = !DILexicalBlockFile(scope: !5431, file: !1, discriminator: 1)
!5435 = !DILocation(line: 2510, column: 9, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !5431, file: !1, discriminator: 2)
!5437 = !DILocation(line: 2511, column: 6, scope: !5431)
!5438 = !DILocation(line: 2513, column: 6, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5431, file: !1, line: 2512, column: 10)
!5440 = !DILocation(line: 2513, column: 10, scope: !5439)
!5441 = !DILocation(line: 2513, column: 16, scope: !5439)
!5442 = !DILocation(line: 2514, column: 10, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5439, file: !1, line: 2514, column: 10)
!5444 = !DILocation(line: 2514, column: 10, scope: !5439)
!5445 = !DILocation(line: 2515, column: 7, scope: !5443)
!5446 = !DILocation(line: 2516, column: 6, scope: !5439)
!5447 = !DILocation(line: 2520, column: 4, scope: !5281)
!5448 = !DILocation(line: 2520, column: 8, scope: !5281)
!5449 = !DILocation(line: 2520, column: 21, scope: !5281)
!5450 = !DILocation(line: 2521, column: 4, scope: !5281)
!5451 = !DILocation(line: 2521, column: 8, scope: !5281)
!5452 = !DILocation(line: 2521, column: 14, scope: !5281)
!5453 = !DILocation(line: 2526, column: 4, scope: !5281)
!5454 = !DILocalVariable(name: "u16", scope: !5455, file: !1, line: 2527, type: !307)
!5455 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2526, column: 7)
!5456 = !DILocation(line: 2527, column: 14, scope: !5455)
!5457 = !DILocation(line: 2530, column: 9, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 2530, column: 9)
!5459 = !DILocation(line: 2530, column: 9, scope: !5455)
!5460 = !DILocation(line: 2531, column: 12, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5458, file: !1, line: 2530, column: 29)
!5462 = !DILocation(line: 2531, column: 10, scope: !5461)
!5463 = !DILocation(line: 2532, column: 6, scope: !5461)
!5464 = !DILocation(line: 2533, column: 22, scope: !5461)
!5465 = !DILocation(line: 2533, column: 26, scope: !5461)
!5466 = !DILocation(line: 2533, column: 34, scope: !5461)
!5467 = !DILocation(line: 2533, column: 6, scope: !5461)
!5468 = !DILocation(line: 2534, column: 12, scope: !5461)
!5469 = !DILocation(line: 2534, column: 10, scope: !5461)
!5470 = !DILocation(line: 2535, column: 6, scope: !5461)
!5471 = !DILocation(line: 2536, column: 22, scope: !5461)
!5472 = !DILocation(line: 2536, column: 26, scope: !5461)
!5473 = !DILocation(line: 2536, column: 32, scope: !5461)
!5474 = !DILocation(line: 2536, column: 36, scope: !5461)
!5475 = !DILocation(line: 2536, column: 6, scope: !5461)
!5476 = !DILocation(line: 2537, column: 6, scope: !5461)
!5477 = !DILocation(line: 2537, column: 10, scope: !5461)
!5478 = !DILocation(line: 2537, column: 23, scope: !5461)
!5479 = !DILocation(line: 2538, column: 5, scope: !5461)
!5480 = !DILocation(line: 2538, column: 16, scope: !5481)
!5481 = !DILexicalBlockFile(scope: !5482, file: !1, discriminator: 1)
!5482 = distinct !DILexicalBlock(scope: !5458, file: !1, line: 2538, column: 16)
!5483 = !DILocation(line: 2539, column: 12, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5482, file: !1, line: 2538, column: 36)
!5485 = !DILocation(line: 2539, column: 10, scope: !5484)
!5486 = !DILocation(line: 2540, column: 6, scope: !5484)
!5487 = !DILocation(line: 2541, column: 22, scope: !5484)
!5488 = !DILocation(line: 2541, column: 26, scope: !5484)
!5489 = !DILocation(line: 2541, column: 34, scope: !5484)
!5490 = !DILocation(line: 2541, column: 6, scope: !5484)
!5491 = !DILocation(line: 2542, column: 6, scope: !5484)
!5492 = !DILocation(line: 2542, column: 10, scope: !5484)
!5493 = !DILocation(line: 2542, column: 23, scope: !5484)
!5494 = !DILocation(line: 2543, column: 5, scope: !5484)
!5495 = !DILocation(line: 2544, column: 9, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 2544, column: 9)
!5497 = !DILocation(line: 2544, column: 13, scope: !5496)
!5498 = !DILocation(line: 2544, column: 26, scope: !5496)
!5499 = !DILocation(line: 2544, column: 30, scope: !5496)
!5500 = !DILocation(line: 2544, column: 33, scope: !5501)
!5501 = !DILexicalBlockFile(scope: !5496, file: !1, discriminator: 1)
!5502 = !DILocation(line: 2544, column: 37, scope: !5501)
!5503 = !DILocation(line: 2544, column: 40, scope: !5501)
!5504 = !DILocation(line: 2544, column: 9, scope: !5501)
!5505 = !DILocation(line: 2546, column: 10, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5496, file: !1, line: 2544, column: 50)
!5507 = !DILocation(line: 2546, column: 14, scope: !5506)
!5508 = !DILocation(line: 2546, column: 17, scope: !5506)
!5509 = !DILocation(line: 2545, column: 17, scope: !5506)
!5510 = !DILocation(line: 2545, column: 21, scope: !5506)
!5511 = !DILocation(line: 2545, column: 33, scope: !5506)
!5512 = !DILocation(line: 2545, column: 6, scope: !5506)
!5513 = !DILocation(line: 2545, column: 10, scope: !5506)
!5514 = !DILocation(line: 2545, column: 37, scope: !5506)
!5515 = !DILocation(line: 2547, column: 6, scope: !5506)
!5516 = !DILocation(line: 2547, column: 10, scope: !5506)
!5517 = !DILocation(line: 2547, column: 13, scope: !5506)
!5518 = !DILocation(line: 2547, column: 22, scope: !5506)
!5519 = !DILocation(line: 2548, column: 5, scope: !5506)
!5520 = !DILocation(line: 2549, column: 5, scope: !5455)
!5521 = !DILocation(line: 2549, column: 12, scope: !5522)
!5522 = !DILexicalBlockFile(scope: !5455, file: !1, discriminator: 1)
!5523 = !DILocation(line: 2549, column: 16, scope: !5522)
!5524 = !DILocation(line: 2549, column: 29, scope: !5522)
!5525 = !DILocation(line: 2549, column: 5, scope: !5522)
!5526 = !DILocation(line: 2550, column: 10, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5528, file: !1, line: 2550, column: 10)
!5528 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 2549, column: 34)
!5529 = !DILocation(line: 2550, column: 16, scope: !5527)
!5530 = !DILocation(line: 2550, column: 25, scope: !5527)
!5531 = !DILocation(line: 2550, column: 10, scope: !5528)
!5532 = !DILocation(line: 2551, column: 11, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !1, line: 2551, column: 11)
!5534 = distinct !DILexicalBlock(scope: !5527, file: !1, line: 2550, column: 31)
!5535 = !DILocation(line: 2551, column: 11, scope: !5534)
!5536 = !DILocation(line: 2552, column: 8, scope: !5533)
!5537 = !DILocation(line: 2553, column: 7, scope: !5534)
!5538 = !DILocation(line: 2556, column: 11, scope: !5528)
!5539 = !DILocation(line: 2556, column: 17, scope: !5528)
!5540 = !DILocation(line: 2556, column: 24, scope: !5528)
!5541 = !DILocation(line: 2556, column: 10, scope: !5528)
!5542 = !DILocation(line: 2555, column: 17, scope: !5528)
!5543 = !DILocation(line: 2555, column: 21, scope: !5528)
!5544 = !DILocation(line: 2555, column: 33, scope: !5528)
!5545 = !DILocation(line: 2555, column: 6, scope: !5528)
!5546 = !DILocation(line: 2555, column: 10, scope: !5528)
!5547 = !DILocation(line: 2555, column: 37, scope: !5528)
!5548 = !DILocation(line: 2557, column: 6, scope: !5528)
!5549 = !DILocation(line: 2557, column: 12, scope: !5528)
!5550 = !DILocation(line: 2557, column: 20, scope: !5528)
!5551 = !DILocation(line: 2549, column: 5, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !5455, file: !1, discriminator: 2)
!5553 = !DILocation(line: 2559, column: 5, scope: !5455)
!5554 = !DILocation(line: 2559, column: 9, scope: !5455)
!5555 = !DILocation(line: 2559, column: 22, scope: !5455)
!5556 = !DILocation(line: 2560, column: 9, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5455, file: !1, line: 2560, column: 9)
!5558 = !DILocation(line: 2560, column: 13, scope: !5557)
!5559 = !DILocation(line: 2560, column: 19, scope: !5557)
!5560 = !DILocation(line: 2560, column: 9, scope: !5455)
!5561 = !DILocation(line: 2561, column: 31, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5557, file: !1, line: 2560, column: 32)
!5563 = !DILocation(line: 2561, column: 35, scope: !5562)
!5564 = !DILocation(line: 2561, column: 15, scope: !5562)
!5565 = !DILocation(line: 2561, column: 6, scope: !5562)
!5566 = !DILocation(line: 2561, column: 10, scope: !5562)
!5567 = !DILocation(line: 2561, column: 13, scope: !5562)
!5568 = !DILocation(line: 2562, column: 10, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5562, file: !1, line: 2562, column: 10)
!5570 = !DILocation(line: 2562, column: 14, scope: !5569)
!5571 = !DILocation(line: 2562, column: 17, scope: !5569)
!5572 = !DILocation(line: 2562, column: 10, scope: !5562)
!5573 = !DILocation(line: 2563, column: 7, scope: !5569)
!5574 = !DILocation(line: 2564, column: 6, scope: !5562)
!5575 = !DILocation(line: 2564, column: 10, scope: !5562)
!5576 = !DILocation(line: 2564, column: 16, scope: !5562)
!5577 = !DILocation(line: 2565, column: 5, scope: !5562)
!5578 = !DILocation(line: 2565, column: 16, scope: !5579)
!5579 = !DILexicalBlockFile(scope: !5580, file: !1, discriminator: 1)
!5580 = distinct !DILexicalBlock(scope: !5557, file: !1, line: 2565, column: 16)
!5581 = !DILocation(line: 2565, column: 20, scope: !5579)
!5582 = !DILocation(line: 2565, column: 26, scope: !5579)
!5583 = !DILocation(line: 2566, column: 31, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5580, file: !1, line: 2565, column: 39)
!5585 = !DILocation(line: 2566, column: 35, scope: !5584)
!5586 = !DILocation(line: 2566, column: 15, scope: !5584)
!5587 = !DILocation(line: 2566, column: 6, scope: !5584)
!5588 = !DILocation(line: 2566, column: 10, scope: !5584)
!5589 = !DILocation(line: 2566, column: 13, scope: !5584)
!5590 = !DILocation(line: 2567, column: 10, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5584, file: !1, line: 2567, column: 10)
!5592 = !DILocation(line: 2567, column: 14, scope: !5591)
!5593 = !DILocation(line: 2567, column: 17, scope: !5591)
!5594 = !DILocation(line: 2567, column: 10, scope: !5584)
!5595 = !DILocation(line: 2568, column: 7, scope: !5591)
!5596 = !DILocation(line: 2569, column: 6, scope: !5584)
!5597 = !DILocation(line: 2569, column: 10, scope: !5584)
!5598 = !DILocation(line: 2569, column: 16, scope: !5584)
!5599 = !DILocation(line: 2570, column: 5, scope: !5584)
!5600 = !DILocation(line: 2570, column: 16, scope: !5601)
!5601 = !DILexicalBlockFile(scope: !5602, file: !1, discriminator: 1)
!5602 = distinct !DILexicalBlock(scope: !5580, file: !1, line: 2570, column: 16)
!5603 = !DILocation(line: 2570, column: 20, scope: !5601)
!5604 = !DILocation(line: 2570, column: 26, scope: !5601)
!5605 = !DILocation(line: 2571, column: 31, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5602, file: !1, line: 2570, column: 39)
!5607 = !DILocation(line: 2571, column: 35, scope: !5606)
!5608 = !DILocation(line: 2571, column: 15, scope: !5606)
!5609 = !DILocation(line: 2571, column: 6, scope: !5606)
!5610 = !DILocation(line: 2571, column: 10, scope: !5606)
!5611 = !DILocation(line: 2571, column: 13, scope: !5606)
!5612 = !DILocation(line: 2572, column: 10, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5606, file: !1, line: 2572, column: 10)
!5614 = !DILocation(line: 2572, column: 14, scope: !5613)
!5615 = !DILocation(line: 2572, column: 17, scope: !5613)
!5616 = !DILocation(line: 2572, column: 10, scope: !5606)
!5617 = !DILocation(line: 2573, column: 7, scope: !5613)
!5618 = !DILocation(line: 2575, column: 6, scope: !5606)
!5619 = !DILocation(line: 2575, column: 10, scope: !5606)
!5620 = !DILocation(line: 2575, column: 16, scope: !5606)
!5621 = !DILocation(line: 2576, column: 5, scope: !5606)
!5622 = !DILocation(line: 2577, column: 4, scope: !5455)
!5623 = !DILocation(line: 2577, column: 13, scope: !5624)
!5624 = !DILexicalBlockFile(scope: !5281, file: !1, discriminator: 1)
!5625 = !DILocation(line: 2577, column: 17, scope: !5624)
!5626 = !DILocation(line: 2577, column: 23, scope: !5624)
!5627 = !DILocation(line: 2577, column: 4, scope: !5624)
!5628 = !DILocation(line: 2577, column: 4, scope: !5552)
!5629 = !DILocation(line: 2583, column: 4, scope: !5281)
!5630 = !DILocation(line: 2583, column: 11, scope: !5624)
!5631 = !DILocation(line: 2583, column: 15, scope: !5624)
!5632 = !DILocation(line: 2583, column: 4, scope: !5624)
!5633 = !DILocalVariable(name: "l", scope: !5634, file: !1, line: 2584, type: !23)
!5634 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2583, column: 34)
!5635 = !DILocation(line: 2584, column: 9, scope: !5634)
!5636 = !DILocation(line: 2586, column: 9, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2586, column: 9)
!5638 = !DILocation(line: 2586, column: 15, scope: !5637)
!5639 = !DILocation(line: 2586, column: 25, scope: !5637)
!5640 = !DILocation(line: 2586, column: 9, scope: !5634)
!5641 = !DILocation(line: 2588, column: 6, scope: !5637)
!5642 = !DILocation(line: 2589, column: 9, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2589, column: 9)
!5644 = !DILocation(line: 2589, column: 15, scope: !5643)
!5645 = !DILocation(line: 2589, column: 24, scope: !5643)
!5646 = !DILocation(line: 2589, column: 9, scope: !5634)
!5647 = !DILocation(line: 2591, column: 10, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !1, line: 2591, column: 10)
!5649 = distinct !DILexicalBlock(scope: !5643, file: !1, line: 2589, column: 30)
!5650 = !DILocation(line: 2591, column: 10, scope: !5649)
!5651 = !DILocation(line: 2592, column: 7, scope: !5648)
!5652 = !DILocation(line: 2593, column: 6, scope: !5649)
!5653 = !DILocation(line: 2595, column: 14, scope: !5634)
!5654 = !DILocation(line: 2595, column: 18, scope: !5634)
!5655 = !DILocation(line: 2595, column: 9, scope: !5634)
!5656 = !DILocation(line: 2595, column: 7, scope: !5634)
!5657 = !DILocation(line: 2596, column: 9, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2596, column: 9)
!5659 = !DILocation(line: 2596, column: 13, scope: !5658)
!5660 = !DILocation(line: 2596, column: 17, scope: !5658)
!5661 = !DILocation(line: 2596, column: 26, scope: !5658)
!5662 = !DILocation(line: 2596, column: 30, scope: !5658)
!5663 = !DILocation(line: 2596, column: 24, scope: !5658)
!5664 = !DILocation(line: 2596, column: 11, scope: !5658)
!5665 = !DILocation(line: 2596, column: 9, scope: !5634)
!5666 = !DILocation(line: 2597, column: 10, scope: !5658)
!5667 = !DILocation(line: 2597, column: 14, scope: !5658)
!5668 = !DILocation(line: 2597, column: 23, scope: !5658)
!5669 = !DILocation(line: 2597, column: 27, scope: !5658)
!5670 = !DILocation(line: 2597, column: 21, scope: !5658)
!5671 = !DILocation(line: 2597, column: 8, scope: !5658)
!5672 = !DILocation(line: 2597, column: 6, scope: !5658)
!5673 = !DILocation(line: 2598, column: 9, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2598, column: 9)
!5675 = !DILocation(line: 2598, column: 13, scope: !5674)
!5676 = !DILocation(line: 2598, column: 19, scope: !5674)
!5677 = !DILocation(line: 2598, column: 11, scope: !5674)
!5678 = !DILocation(line: 2598, column: 9, scope: !5634)
!5679 = !DILocation(line: 2599, column: 15, scope: !5674)
!5680 = !DILocation(line: 2599, column: 21, scope: !5674)
!5681 = !DILocation(line: 2599, column: 10, scope: !5674)
!5682 = !DILocation(line: 2599, column: 8, scope: !5674)
!5683 = !DILocation(line: 2599, column: 6, scope: !5674)
!5684 = !DILocation(line: 2600, column: 9, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2600, column: 9)
!5686 = !DILocation(line: 2600, column: 13, scope: !5685)
!5687 = !DILocation(line: 2600, column: 19, scope: !5685)
!5688 = !DILocation(line: 2600, column: 11, scope: !5685)
!5689 = !DILocation(line: 2600, column: 9, scope: !5634)
!5690 = !DILocation(line: 2601, column: 15, scope: !5685)
!5691 = !DILocation(line: 2601, column: 21, scope: !5685)
!5692 = !DILocation(line: 2601, column: 10, scope: !5685)
!5693 = !DILocation(line: 2601, column: 8, scope: !5685)
!5694 = !DILocation(line: 2601, column: 6, scope: !5685)
!5695 = !DILocation(line: 2602, column: 12, scope: !5634)
!5696 = !DILocation(line: 2602, column: 18, scope: !5634)
!5697 = !DILocation(line: 2602, column: 28, scope: !5634)
!5698 = !DILocation(line: 2602, column: 34, scope: !5634)
!5699 = !DILocation(line: 2602, column: 43, scope: !5634)
!5700 = !DILocation(line: 2602, column: 5, scope: !5634)
!5701 = !DILocation(line: 2603, column: 25, scope: !5634)
!5702 = !DILocation(line: 2603, column: 29, scope: !5634)
!5703 = !DILocation(line: 2603, column: 14, scope: !5634)
!5704 = !DILocation(line: 2603, column: 18, scope: !5634)
!5705 = !DILocation(line: 2604, column: 9, scope: !5634)
!5706 = !DILocation(line: 2604, column: 15, scope: !5634)
!5707 = !DILocation(line: 2604, column: 24, scope: !5634)
!5708 = !DILocation(line: 2603, column: 5, scope: !5634)
!5709 = !DILocation(line: 2605, column: 22, scope: !5634)
!5710 = !DILocation(line: 2605, column: 5, scope: !5634)
!5711 = !DILocation(line: 2605, column: 11, scope: !5634)
!5712 = !DILocation(line: 2605, column: 19, scope: !5634)
!5713 = !DILocation(line: 2606, column: 23, scope: !5634)
!5714 = !DILocation(line: 2606, column: 5, scope: !5634)
!5715 = !DILocation(line: 2606, column: 11, scope: !5634)
!5716 = !DILocation(line: 2606, column: 20, scope: !5634)
!5717 = !DILocation(line: 2607, column: 23, scope: !5634)
!5718 = !DILocation(line: 2607, column: 5, scope: !5634)
!5719 = !DILocation(line: 2607, column: 11, scope: !5634)
!5720 = !DILocation(line: 2607, column: 20, scope: !5634)
!5721 = !DILocation(line: 2608, column: 24, scope: !5634)
!5722 = !DILocation(line: 2608, column: 5, scope: !5634)
!5723 = !DILocation(line: 2608, column: 11, scope: !5634)
!5724 = !DILocation(line: 2608, column: 21, scope: !5634)
!5725 = !DILocation(line: 2609, column: 24, scope: !5634)
!5726 = !DILocation(line: 2609, column: 5, scope: !5634)
!5727 = !DILocation(line: 2609, column: 11, scope: !5634)
!5728 = !DILocation(line: 2609, column: 21, scope: !5634)
!5729 = !DILocation(line: 2610, column: 18, scope: !5634)
!5730 = !DILocation(line: 2610, column: 22, scope: !5634)
!5731 = !DILocation(line: 2610, column: 30, scope: !5634)
!5732 = !DILocation(line: 2610, column: 28, scope: !5634)
!5733 = !DILocation(line: 2610, column: 35, scope: !5634)
!5734 = !DILocation(line: 2610, column: 39, scope: !5634)
!5735 = !DILocation(line: 2610, column: 33, scope: !5634)
!5736 = !DILocation(line: 2610, column: 5, scope: !5634)
!5737 = !DILocation(line: 2610, column: 9, scope: !5634)
!5738 = !DILocation(line: 2610, column: 15, scope: !5634)
!5739 = !DILocation(line: 2611, column: 30, scope: !5634)
!5740 = !DILocation(line: 2611, column: 5, scope: !5634)
!5741 = !DILocation(line: 2611, column: 9, scope: !5634)
!5742 = !DILocation(line: 2611, column: 27, scope: !5634)
!5743 = !DILocation(line: 2583, column: 4, scope: !5744)
!5744 = !DILexicalBlockFile(scope: !5281, file: !1, discriminator: 2)
!5745 = !DILocation(line: 2583, column: 4, scope: !5746)
!5746 = !DILexicalBlockFile(scope: !5281, file: !1, discriminator: 3)
!5747 = !DILocation(line: 2616, column: 8, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2616, column: 8)
!5749 = !DILocation(line: 2616, column: 12, scope: !5748)
!5750 = !DILocation(line: 2616, column: 23, scope: !5748)
!5751 = !DILocation(line: 2616, column: 8, scope: !5281)
!5752 = !DILocation(line: 2617, column: 9, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !1, line: 2617, column: 9)
!5754 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 2616, column: 28)
!5755 = !DILocation(line: 2617, column: 15, scope: !5753)
!5756 = !DILocation(line: 2617, column: 24, scope: !5753)
!5757 = !DILocation(line: 2617, column: 9, scope: !5754)
!5758 = !DILocation(line: 2619, column: 6, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5753, file: !1, line: 2617, column: 30)
!5760 = !DILocation(line: 2619, column: 10, scope: !5759)
!5761 = !DILocation(line: 2619, column: 16, scope: !5759)
!5762 = !DILocation(line: 2620, column: 10, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5759, file: !1, line: 2620, column: 10)
!5764 = !DILocation(line: 2620, column: 10, scope: !5759)
!5765 = !DILocation(line: 2621, column: 7, scope: !5763)
!5766 = !DILocation(line: 2622, column: 6, scope: !5759)
!5767 = !DILocation(line: 2624, column: 5, scope: !5754)
!5768 = !DILocation(line: 2624, column: 11, scope: !5754)
!5769 = !DILocation(line: 2624, column: 18, scope: !5754)
!5770 = !DILocation(line: 2625, column: 5, scope: !5754)
!5771 = !DILocation(line: 2625, column: 11, scope: !5754)
!5772 = !DILocation(line: 2625, column: 20, scope: !5754)
!5773 = !DILocation(line: 2626, column: 4, scope: !5754)
!5774 = !DILocation(line: 2628, column: 4, scope: !5281)
!5775 = !DILocation(line: 2628, column: 8, scope: !5281)
!5776 = !DILocation(line: 2628, column: 14, scope: !5281)
!5777 = !DILocation(line: 2629, column: 4, scope: !5281)
!5778 = !DILocation(line: 2635, column: 9, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2635, column: 8)
!5780 = !DILocation(line: 2635, column: 9, scope: !5781)
!5781 = !DILexicalBlockFile(scope: !5779, file: !1, discriminator: 1)
!5782 = !DILocation(line: 2635, column: 9, scope: !5783)
!5783 = !DILexicalBlockFile(scope: !5779, file: !1, discriminator: 2)
!5784 = !DILocation(line: 2635, column: 8, scope: !5783)
!5785 = !DILocation(line: 2636, column: 5, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5779, file: !1, line: 2635, column: 59)
!5787 = !DILocation(line: 2636, column: 9, scope: !5786)
!5788 = !DILocation(line: 2636, column: 15, scope: !5786)
!5789 = !DILocation(line: 2637, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5786, file: !1, line: 2637, column: 9)
!5791 = !DILocation(line: 2637, column: 9, scope: !5786)
!5792 = !DILocation(line: 2638, column: 6, scope: !5790)
!5793 = !DILocation(line: 2639, column: 5, scope: !5786)
!5794 = !DILocation(line: 2641, column: 11, scope: !5281)
!5795 = !DILocation(line: 2641, column: 15, scope: !5281)
!5796 = !DILocation(line: 2641, column: 18, scope: !5281)
!5797 = !DILocation(line: 2641, column: 4, scope: !5281)
!5798 = !DILocation(line: 2642, column: 11, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2642, column: 4)
!5800 = !DILocation(line: 2642, column: 9, scope: !5799)
!5801 = !DILocation(line: 2642, column: 16, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !5803, file: !1, discriminator: 1)
!5803 = distinct !DILexicalBlock(scope: !5799, file: !1, line: 2642, column: 4)
!5804 = !DILocation(line: 2642, column: 20, scope: !5802)
!5805 = !DILocation(line: 2642, column: 24, scope: !5802)
!5806 = !DILocation(line: 2642, column: 27, scope: !5802)
!5807 = !DILocation(line: 2642, column: 18, scope: !5802)
!5808 = !DILocation(line: 2642, column: 4, scope: !5802)
!5809 = !DILocation(line: 2643, column: 24, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5803, file: !1, line: 2642, column: 42)
!5811 = !DILocation(line: 2643, column: 19, scope: !5810)
!5812 = !DILocation(line: 2643, column: 5, scope: !5810)
!5813 = !DILocation(line: 2643, column: 9, scope: !5810)
!5814 = !DILocation(line: 2643, column: 12, scope: !5810)
!5815 = !DILocation(line: 2643, column: 22, scope: !5810)
!5816 = !DILocation(line: 2644, column: 31, scope: !5810)
!5817 = !DILocation(line: 2644, column: 17, scope: !5810)
!5818 = !DILocation(line: 2644, column: 21, scope: !5810)
!5819 = !DILocation(line: 2644, column: 24, scope: !5810)
!5820 = !DILocation(line: 2644, column: 5, scope: !5810)
!5821 = !DILocation(line: 2644, column: 9, scope: !5810)
!5822 = !DILocation(line: 2644, column: 12, scope: !5810)
!5823 = !DILocation(line: 2644, column: 34, scope: !5810)
!5824 = !DILocation(line: 2645, column: 5, scope: !5810)
!5825 = !DILocation(line: 2646, column: 4, scope: !5810)
!5826 = !DILocation(line: 2642, column: 38, scope: !5827)
!5827 = !DILexicalBlockFile(scope: !5803, file: !1, discriminator: 2)
!5828 = !DILocation(line: 2642, column: 4, scope: !5827)
!5829 = !DILocation(line: 2647, column: 33, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2647, column: 8)
!5831 = !DILocation(line: 2647, column: 37, scope: !5830)
!5832 = !DILocation(line: 2647, column: 9, scope: !5830)
!5833 = !DILocation(line: 2647, column: 8, scope: !5281)
!5834 = !DILocation(line: 2648, column: 5, scope: !5830)
!5835 = !DILocation(line: 2647, column: 39, scope: !5836)
!5836 = !DILexicalBlockFile(scope: !5830, file: !1, discriminator: 1)
!5837 = !DILocation(line: 2651, column: 4, scope: !5281)
!5838 = !DILocation(line: 2651, column: 8, scope: !5281)
!5839 = !DILocation(line: 2651, column: 13, scope: !5281)
!5840 = !DILocation(line: 2657, column: 27, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2657, column: 8)
!5842 = !DILocation(line: 2657, column: 9, scope: !5841)
!5843 = !DILocation(line: 2657, column: 8, scope: !5281)
!5844 = !DILocation(line: 2658, column: 5, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5841, file: !1, line: 2657, column: 34)
!5846 = !DILocation(line: 2658, column: 9, scope: !5845)
!5847 = !DILocation(line: 2658, column: 15, scope: !5845)
!5848 = !DILocation(line: 2659, column: 9, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5845, file: !1, line: 2659, column: 9)
!5850 = !DILocation(line: 2659, column: 9, scope: !5845)
!5851 = !DILocation(line: 2660, column: 6, scope: !5849)
!5852 = !DILocation(line: 2661, column: 5, scope: !5845)
!5853 = !DILocation(line: 2663, column: 33, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2663, column: 8)
!5855 = !DILocation(line: 2663, column: 37, scope: !5854)
!5856 = !DILocation(line: 2663, column: 9, scope: !5854)
!5857 = !DILocation(line: 2663, column: 8, scope: !5281)
!5858 = !DILocation(line: 2664, column: 5, scope: !5854)
!5859 = !DILocation(line: 2665, column: 4, scope: !5281)
!5860 = !DILocation(line: 2665, column: 8, scope: !5281)
!5861 = !DILocation(line: 2665, column: 13, scope: !5281)
!5862 = !DILocation(line: 2671, column: 24, scope: !5281)
!5863 = !DILocation(line: 2671, column: 31, scope: !5281)
!5864 = !DILocation(line: 2671, column: 35, scope: !5281)
!5865 = !DILocation(line: 2671, column: 8, scope: !5281)
!5866 = !DILocation(line: 2671, column: 6, scope: !5281)
!5867 = !DILocation(line: 2672, column: 8, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2672, column: 8)
!5869 = !DILocation(line: 2672, column: 10, scope: !5868)
!5870 = !DILocation(line: 2672, column: 8, scope: !5281)
!5871 = !DILocation(line: 2673, column: 5, scope: !5868)
!5872 = !DILocation(line: 2674, column: 14, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5868, file: !1, line: 2674, column: 13)
!5874 = !DILocation(line: 2674, column: 13, scope: !5868)
!5875 = !DILocation(line: 2675, column: 5, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !1, line: 2674, column: 17)
!5877 = !DILocation(line: 2675, column: 9, scope: !5876)
!5878 = !DILocation(line: 2675, column: 15, scope: !5876)
!5879 = !DILocation(line: 2676, column: 9, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5876, file: !1, line: 2676, column: 9)
!5881 = !DILocation(line: 2676, column: 9, scope: !5876)
!5882 = !DILocation(line: 2677, column: 6, scope: !5880)
!5883 = !DILocation(line: 2678, column: 5, scope: !5876)
!5884 = !DILocation(line: 2680, column: 4, scope: !5281)
!5885 = !DILocation(line: 2680, column: 8, scope: !5281)
!5886 = !DILocation(line: 2680, column: 13, scope: !5281)
!5887 = !DILocation(line: 2686, column: 27, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2686, column: 8)
!5889 = !DILocation(line: 2686, column: 9, scope: !5888)
!5890 = !DILocation(line: 2686, column: 8, scope: !5281)
!5891 = !DILocation(line: 2687, column: 5, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5888, file: !1, line: 2686, column: 34)
!5893 = !DILocation(line: 2687, column: 9, scope: !5892)
!5894 = !DILocation(line: 2687, column: 15, scope: !5892)
!5895 = !DILocation(line: 2688, column: 9, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5892, file: !1, line: 2688, column: 9)
!5897 = !DILocation(line: 2688, column: 9, scope: !5892)
!5898 = !DILocation(line: 2689, column: 6, scope: !5896)
!5899 = !DILocation(line: 2690, column: 5, scope: !5892)
!5900 = !DILocation(line: 2692, column: 33, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2692, column: 8)
!5902 = !DILocation(line: 2692, column: 37, scope: !5901)
!5903 = !DILocation(line: 2692, column: 9, scope: !5901)
!5904 = !DILocation(line: 2692, column: 8, scope: !5281)
!5905 = !DILocation(line: 2693, column: 5, scope: !5901)
!5906 = !DILocation(line: 2694, column: 4, scope: !5281)
!5907 = !DILocation(line: 2694, column: 8, scope: !5281)
!5908 = !DILocation(line: 2694, column: 13, scope: !5281)
!5909 = !DILocation(line: 2700, column: 24, scope: !5281)
!5910 = !DILocation(line: 2700, column: 31, scope: !5281)
!5911 = !DILocation(line: 2700, column: 35, scope: !5281)
!5912 = !DILocation(line: 2700, column: 8, scope: !5281)
!5913 = !DILocation(line: 2700, column: 6, scope: !5281)
!5914 = !DILocation(line: 2701, column: 8, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2701, column: 8)
!5916 = !DILocation(line: 2701, column: 10, scope: !5915)
!5917 = !DILocation(line: 2701, column: 8, scope: !5281)
!5918 = !DILocation(line: 2702, column: 5, scope: !5915)
!5919 = !DILocation(line: 2703, column: 14, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5915, file: !1, line: 2703, column: 13)
!5921 = !DILocation(line: 2703, column: 13, scope: !5915)
!5922 = !DILocation(line: 2704, column: 5, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5920, file: !1, line: 2703, column: 17)
!5924 = !DILocation(line: 2704, column: 9, scope: !5923)
!5925 = !DILocation(line: 2704, column: 15, scope: !5923)
!5926 = !DILocation(line: 2705, column: 9, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5923, file: !1, line: 2705, column: 9)
!5928 = !DILocation(line: 2705, column: 9, scope: !5923)
!5929 = !DILocation(line: 2706, column: 6, scope: !5927)
!5930 = !DILocation(line: 2707, column: 5, scope: !5923)
!5931 = !DILocation(line: 2709, column: 33, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2709, column: 8)
!5933 = !DILocation(line: 2709, column: 37, scope: !5932)
!5934 = !DILocation(line: 2709, column: 9, scope: !5932)
!5935 = !DILocation(line: 2709, column: 8, scope: !5281)
!5936 = !DILocation(line: 2710, column: 5, scope: !5932)
!5937 = !DILocation(line: 2711, column: 4, scope: !5281)
!5938 = !DILocation(line: 2711, column: 8, scope: !5281)
!5939 = !DILocation(line: 2711, column: 13, scope: !5281)
!5940 = !DILocation(line: 2717, column: 27, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2717, column: 8)
!5942 = !DILocation(line: 2717, column: 9, scope: !5941)
!5943 = !DILocation(line: 2717, column: 8, scope: !5281)
!5944 = !DILocation(line: 2718, column: 5, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5941, file: !1, line: 2717, column: 34)
!5946 = !DILocation(line: 2718, column: 9, scope: !5945)
!5947 = !DILocation(line: 2718, column: 15, scope: !5945)
!5948 = !DILocation(line: 2719, column: 9, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5945, file: !1, line: 2719, column: 9)
!5950 = !DILocation(line: 2719, column: 9, scope: !5945)
!5951 = !DILocation(line: 2720, column: 6, scope: !5949)
!5952 = !DILocation(line: 2721, column: 5, scope: !5945)
!5953 = !DILocation(line: 2723, column: 33, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2723, column: 8)
!5955 = !DILocation(line: 2723, column: 37, scope: !5954)
!5956 = !DILocation(line: 2723, column: 9, scope: !5954)
!5957 = !DILocation(line: 2723, column: 8, scope: !5281)
!5958 = !DILocation(line: 2724, column: 5, scope: !5954)
!5959 = !DILocation(line: 2725, column: 4, scope: !5281)
!5960 = !DILocation(line: 2725, column: 8, scope: !5281)
!5961 = !DILocation(line: 2725, column: 13, scope: !5281)
!5962 = !DILocation(line: 2731, column: 24, scope: !5281)
!5963 = !DILocation(line: 2731, column: 31, scope: !5281)
!5964 = !DILocation(line: 2731, column: 35, scope: !5281)
!5965 = !DILocation(line: 2731, column: 8, scope: !5281)
!5966 = !DILocation(line: 2731, column: 6, scope: !5281)
!5967 = !DILocation(line: 2732, column: 8, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2732, column: 8)
!5969 = !DILocation(line: 2732, column: 10, scope: !5968)
!5970 = !DILocation(line: 2732, column: 8, scope: !5281)
!5971 = !DILocation(line: 2733, column: 5, scope: !5968)
!5972 = !DILocation(line: 2734, column: 14, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5968, file: !1, line: 2734, column: 13)
!5974 = !DILocation(line: 2734, column: 13, scope: !5968)
!5975 = !DILocation(line: 2735, column: 5, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5973, file: !1, line: 2734, column: 17)
!5977 = !DILocation(line: 2735, column: 9, scope: !5976)
!5978 = !DILocation(line: 2735, column: 15, scope: !5976)
!5979 = !DILocation(line: 2736, column: 9, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5976, file: !1, line: 2736, column: 9)
!5981 = !DILocation(line: 2736, column: 9, scope: !5976)
!5982 = !DILocation(line: 2737, column: 6, scope: !5980)
!5983 = !DILocation(line: 2738, column: 5, scope: !5976)
!5984 = !DILocation(line: 2740, column: 33, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5281, file: !1, line: 2740, column: 8)
!5986 = !DILocation(line: 2740, column: 37, scope: !5985)
!5987 = !DILocation(line: 2740, column: 9, scope: !5985)
!5988 = !DILocation(line: 2740, column: 8, scope: !5281)
!5989 = !DILocation(line: 2741, column: 5, scope: !5985)
!5990 = !DILocation(line: 2742, column: 4, scope: !5281)
!5991 = !DILocation(line: 2742, column: 8, scope: !5281)
!5992 = !DILocation(line: 2742, column: 14, scope: !5281)
!5993 = !DILocation(line: 2743, column: 4, scope: !5281)
!5994 = !DILocation(line: 2432, column: 2, scope: !5995)
!5995 = !DILexicalBlockFile(scope: !5275, file: !1, discriminator: 1)
!5996 = !DILocation(line: 2747, column: 10, scope: !588)
!5997 = !DILocation(line: 2747, column: 14, scope: !588)
!5998 = !DILocation(line: 2747, column: 20, scope: !588)
!5999 = !DILocation(line: 2747, column: 2, scope: !588)
!6000 = !DILocation(line: 2748, column: 1, scope: !588)
!6001 = !DILocalVariable(name: "strm", arg: 1, scope: !610, file: !1, line: 2751, type: !572)
!6002 = !DILocation(line: 2751, column: 38, scope: !610)
!6003 = !DILocalVariable(name: "last", arg: 2, scope: !610, file: !1, line: 2751, type: !23)
!6004 = !DILocation(line: 2751, column: 48, scope: !610)
!6005 = !DILocalVariable(name: "ds", scope: !610, file: !1, line: 2753, type: !444)
!6006 = !DILocation(line: 2753, column: 18, scope: !610)
!6007 = !DILocation(line: 2753, column: 23, scope: !610)
!6008 = !DILocation(line: 2753, column: 29, scope: !610)
!6009 = !DILocalVariable(name: "bre", scope: !610, file: !1, line: 2754, type: !474)
!6010 = !DILocation(line: 2754, column: 16, scope: !610)
!6011 = !DILocation(line: 2754, column: 22, scope: !610)
!6012 = !DILocation(line: 2754, column: 26, scope: !610)
!6013 = !DILocalVariable(name: "at", scope: !610, file: !1, line: 2755, type: !576)
!6014 = !DILocation(line: 2755, column: 18, scope: !610)
!6015 = !DILocation(line: 2755, column: 25, scope: !610)
!6016 = !DILocation(line: 2755, column: 29, scope: !610)
!6017 = !DILocalVariable(name: "lt", scope: !610, file: !1, line: 2755, type: !576)
!6018 = !DILocation(line: 2755, column: 35, scope: !610)
!6019 = !DILocation(line: 2755, column: 42, scope: !610)
!6020 = !DILocation(line: 2755, column: 46, scope: !610)
!6021 = !DILocalVariable(name: "mt", scope: !610, file: !1, line: 2755, type: !576)
!6022 = !DILocation(line: 2755, column: 52, scope: !610)
!6023 = !DILocation(line: 2755, column: 59, scope: !610)
!6024 = !DILocation(line: 2755, column: 63, scope: !610)
!6025 = !DILocalVariable(name: "pos_tbl", scope: !610, file: !1, line: 2756, type: !6026)
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64, align: 64)
!6027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!6028 = !DILocation(line: 2756, column: 28, scope: !610)
!6029 = !DILocation(line: 2756, column: 38, scope: !610)
!6030 = !DILocation(line: 2756, column: 42, scope: !610)
!6031 = !DILocalVariable(name: "noutp", scope: !610, file: !1, line: 2757, type: !325)
!6032 = !DILocation(line: 2757, column: 17, scope: !610)
!6033 = !DILocation(line: 2757, column: 25, scope: !610)
!6034 = !DILocation(line: 2757, column: 31, scope: !610)
!6035 = !DILocalVariable(name: "endp", scope: !610, file: !1, line: 2758, type: !325)
!6036 = !DILocation(line: 2758, column: 17, scope: !610)
!6037 = !DILocation(line: 2758, column: 24, scope: !610)
!6038 = !DILocation(line: 2758, column: 32, scope: !610)
!6039 = !DILocation(line: 2758, column: 38, scope: !610)
!6040 = !DILocation(line: 2758, column: 30, scope: !610)
!6041 = !DILocalVariable(name: "w_buff", scope: !610, file: !1, line: 2759, type: !325)
!6042 = !DILocation(line: 2759, column: 17, scope: !610)
!6043 = !DILocation(line: 2759, column: 26, scope: !610)
!6044 = !DILocation(line: 2759, column: 30, scope: !610)
!6045 = !DILocalVariable(name: "at_bitlen", scope: !610, file: !1, line: 2760, type: !325)
!6046 = !DILocation(line: 2760, column: 17, scope: !610)
!6047 = !DILocation(line: 2760, column: 29, scope: !610)
!6048 = !DILocation(line: 2760, column: 33, scope: !610)
!6049 = !DILocalVariable(name: "lt_bitlen", scope: !610, file: !1, line: 2761, type: !325)
!6050 = !DILocation(line: 2761, column: 17, scope: !610)
!6051 = !DILocation(line: 2761, column: 29, scope: !610)
!6052 = !DILocation(line: 2761, column: 33, scope: !610)
!6053 = !DILocalVariable(name: "mt_bitlen", scope: !610, file: !1, line: 2762, type: !325)
!6054 = !DILocation(line: 2762, column: 17, scope: !610)
!6055 = !DILocation(line: 2762, column: 29, scope: !610)
!6056 = !DILocation(line: 2762, column: 33, scope: !610)
!6057 = !DILocalVariable(name: "block_bytes_avail", scope: !610, file: !1, line: 2763, type: !45)
!6058 = !DILocation(line: 2763, column: 9, scope: !610)
!6059 = !DILocation(line: 2763, column: 29, scope: !610)
!6060 = !DILocation(line: 2763, column: 33, scope: !610)
!6061 = !DILocalVariable(name: "at_max_bits", scope: !610, file: !1, line: 2764, type: !23)
!6062 = !DILocation(line: 2764, column: 6, scope: !610)
!6063 = !DILocation(line: 2764, column: 20, scope: !610)
!6064 = !DILocation(line: 2764, column: 24, scope: !610)
!6065 = !DILocalVariable(name: "lt_max_bits", scope: !610, file: !1, line: 2765, type: !23)
!6066 = !DILocation(line: 2765, column: 6, scope: !610)
!6067 = !DILocation(line: 2765, column: 20, scope: !610)
!6068 = !DILocation(line: 2765, column: 24, scope: !610)
!6069 = !DILocalVariable(name: "mt_max_bits", scope: !610, file: !1, line: 2766, type: !23)
!6070 = !DILocation(line: 2766, column: 6, scope: !610)
!6071 = !DILocation(line: 2766, column: 20, scope: !610)
!6072 = !DILocation(line: 2766, column: 24, scope: !610)
!6073 = !DILocalVariable(name: "c", scope: !610, file: !1, line: 2767, type: !23)
!6074 = !DILocation(line: 2767, column: 6, scope: !610)
!6075 = !DILocalVariable(name: "copy_len", scope: !610, file: !1, line: 2767, type: !23)
!6076 = !DILocation(line: 2767, column: 9, scope: !610)
!6077 = !DILocation(line: 2767, column: 20, scope: !610)
!6078 = !DILocation(line: 2767, column: 24, scope: !610)
!6079 = !DILocalVariable(name: "copy_pos", scope: !610, file: !1, line: 2767, type: !23)
!6080 = !DILocation(line: 2767, column: 34, scope: !610)
!6081 = !DILocation(line: 2767, column: 45, scope: !610)
!6082 = !DILocation(line: 2767, column: 49, scope: !610)
!6083 = !DILocalVariable(name: "w_pos", scope: !610, file: !1, line: 2768, type: !23)
!6084 = !DILocation(line: 2768, column: 6, scope: !610)
!6085 = !DILocation(line: 2768, column: 14, scope: !610)
!6086 = !DILocation(line: 2768, column: 18, scope: !610)
!6087 = !DILocalVariable(name: "w_mask", scope: !610, file: !1, line: 2768, type: !23)
!6088 = !DILocation(line: 2768, column: 25, scope: !610)
!6089 = !DILocation(line: 2768, column: 34, scope: !610)
!6090 = !DILocation(line: 2768, column: 38, scope: !610)
!6091 = !DILocalVariable(name: "w_size", scope: !610, file: !1, line: 2768, type: !23)
!6092 = !DILocation(line: 2768, column: 46, scope: !610)
!6093 = !DILocation(line: 2768, column: 55, scope: !610)
!6094 = !DILocation(line: 2768, column: 59, scope: !610)
!6095 = !DILocalVariable(name: "length_header", scope: !610, file: !1, line: 2769, type: !23)
!6096 = !DILocation(line: 2769, column: 6, scope: !610)
!6097 = !DILocation(line: 2769, column: 22, scope: !610)
!6098 = !DILocation(line: 2769, column: 26, scope: !610)
!6099 = !DILocalVariable(name: "offset_bits", scope: !610, file: !1, line: 2770, type: !23)
!6100 = !DILocation(line: 2770, column: 6, scope: !610)
!6101 = !DILocation(line: 2770, column: 20, scope: !610)
!6102 = !DILocation(line: 2770, column: 24, scope: !610)
!6103 = !DILocalVariable(name: "position_slot", scope: !610, file: !1, line: 2771, type: !23)
!6104 = !DILocation(line: 2771, column: 6, scope: !610)
!6105 = !DILocation(line: 2771, column: 22, scope: !610)
!6106 = !DILocation(line: 2771, column: 26, scope: !610)
!6107 = !DILocalVariable(name: "r0", scope: !610, file: !1, line: 2772, type: !23)
!6108 = !DILocation(line: 2772, column: 6, scope: !610)
!6109 = !DILocation(line: 2772, column: 11, scope: !610)
!6110 = !DILocation(line: 2772, column: 15, scope: !610)
!6111 = !DILocalVariable(name: "r1", scope: !610, file: !1, line: 2772, type: !23)
!6112 = !DILocation(line: 2772, column: 19, scope: !610)
!6113 = !DILocation(line: 2772, column: 24, scope: !610)
!6114 = !DILocation(line: 2772, column: 28, scope: !610)
!6115 = !DILocalVariable(name: "r2", scope: !610, file: !1, line: 2772, type: !23)
!6116 = !DILocation(line: 2772, column: 32, scope: !610)
!6117 = !DILocation(line: 2772, column: 37, scope: !610)
!6118 = !DILocation(line: 2772, column: 41, scope: !610)
!6119 = !DILocalVariable(name: "state", scope: !610, file: !1, line: 2773, type: !23)
!6120 = !DILocation(line: 2773, column: 6, scope: !610)
!6121 = !DILocation(line: 2773, column: 14, scope: !610)
!6122 = !DILocation(line: 2773, column: 18, scope: !610)
!6123 = !DILocalVariable(name: "block_type", scope: !610, file: !1, line: 2774, type: !82)
!6124 = !DILocation(line: 2774, column: 7, scope: !610)
!6125 = !DILocation(line: 2774, column: 20, scope: !610)
!6126 = !DILocation(line: 2774, column: 24, scope: !610)
!6127 = !DILocation(line: 2776, column: 2, scope: !610)
!6128 = !DILocation(line: 2777, column: 11, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !1, line: 2776, column: 11)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !1, line: 2776, column: 2)
!6131 = distinct !DILexicalBlock(scope: !610, file: !1, line: 2776, column: 2)
!6132 = !DILocation(line: 2777, column: 3, scope: !6129)
!6133 = !DILocation(line: 2779, column: 4, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6129, file: !1, line: 2777, column: 18)
!6135 = !DILocation(line: 2780, column: 9, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6137, file: !1, line: 2780, column: 9)
!6137 = distinct !DILexicalBlock(scope: !6138, file: !1, line: 2779, column: 13)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !1, line: 2779, column: 4)
!6139 = distinct !DILexicalBlock(scope: !6134, file: !1, line: 2779, column: 4)
!6140 = !DILocation(line: 2780, column: 27, scope: !6136)
!6141 = !DILocation(line: 2780, column: 9, scope: !6137)
!6142 = !DILocation(line: 2782, column: 6, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6136, file: !1, line: 2780, column: 33)
!6144 = !DILocation(line: 2782, column: 10, scope: !6143)
!6145 = !DILocation(line: 2782, column: 16, scope: !6143)
!6146 = !DILocation(line: 2783, column: 6, scope: !6143)
!6147 = !DILocation(line: 2783, column: 10, scope: !6143)
!6148 = !DILocation(line: 2783, column: 15, scope: !6143)
!6149 = !DILocation(line: 2785, column: 10, scope: !6143)
!6150 = !DILocation(line: 2784, column: 6, scope: !6143)
!6151 = !DILocation(line: 2784, column: 10, scope: !6143)
!6152 = !DILocation(line: 2784, column: 28, scope: !6143)
!6153 = !DILocation(line: 2786, column: 21, scope: !6143)
!6154 = !DILocation(line: 2786, column: 6, scope: !6143)
!6155 = !DILocation(line: 2786, column: 10, scope: !6143)
!6156 = !DILocation(line: 2786, column: 19, scope: !6143)
!6157 = !DILocation(line: 2787, column: 21, scope: !6143)
!6158 = !DILocation(line: 2787, column: 6, scope: !6143)
!6159 = !DILocation(line: 2787, column: 10, scope: !6143)
!6160 = !DILocation(line: 2787, column: 19, scope: !6143)
!6161 = !DILocation(line: 2788, column: 26, scope: !6143)
!6162 = !DILocation(line: 2788, column: 6, scope: !6143)
!6163 = !DILocation(line: 2788, column: 10, scope: !6143)
!6164 = !DILocation(line: 2788, column: 24, scope: !6143)
!6165 = !DILocation(line: 2789, column: 26, scope: !6143)
!6166 = !DILocation(line: 2789, column: 6, scope: !6143)
!6167 = !DILocation(line: 2789, column: 10, scope: !6143)
!6168 = !DILocation(line: 2789, column: 24, scope: !6143)
!6169 = !DILocation(line: 2790, column: 15, scope: !6143)
!6170 = !DILocation(line: 2790, column: 6, scope: !6143)
!6171 = !DILocation(line: 2790, column: 10, scope: !6143)
!6172 = !DILocation(line: 2790, column: 13, scope: !6143)
!6173 = !DILocation(line: 2790, column: 28, scope: !6143)
!6174 = !DILocation(line: 2790, column: 19, scope: !6143)
!6175 = !DILocation(line: 2790, column: 23, scope: !6143)
!6176 = !DILocation(line: 2790, column: 26, scope: !6143)
!6177 = !DILocation(line: 2790, column: 41, scope: !6143)
!6178 = !DILocation(line: 2790, column: 32, scope: !6143)
!6179 = !DILocation(line: 2790, column: 36, scope: !6143)
!6180 = !DILocation(line: 2790, column: 39, scope: !6143)
!6181 = !DILocation(line: 2791, column: 18, scope: !6143)
!6182 = !DILocation(line: 2791, column: 6, scope: !6143)
!6183 = !DILocation(line: 2791, column: 10, scope: !6143)
!6184 = !DILocation(line: 2791, column: 16, scope: !6143)
!6185 = !DILocation(line: 2792, column: 24, scope: !6143)
!6186 = !DILocation(line: 2792, column: 31, scope: !6143)
!6187 = !DILocation(line: 2792, column: 29, scope: !6143)
!6188 = !DILocation(line: 2792, column: 6, scope: !6143)
!6189 = !DILocation(line: 2792, column: 12, scope: !6143)
!6190 = !DILocation(line: 2792, column: 22, scope: !6143)
!6191 = !DILocation(line: 2793, column: 6, scope: !6143)
!6192 = !DILocation(line: 2795, column: 9, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6137, file: !1, line: 2795, column: 9)
!6194 = !DILocation(line: 2795, column: 18, scope: !6193)
!6195 = !DILocation(line: 2795, column: 15, scope: !6193)
!6196 = !DILocation(line: 2795, column: 9, scope: !6137)
!6197 = !DILocation(line: 2797, column: 6, scope: !6193)
!6198 = !DILocation(line: 2799, column: 10, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6137, file: !1, line: 2799, column: 9)
!6200 = !DILocation(line: 2799, column: 10, scope: !6201)
!6201 = !DILexicalBlockFile(scope: !6199, file: !1, discriminator: 1)
!6202 = !DILocation(line: 2799, column: 10, scope: !6203)
!6203 = !DILexicalBlockFile(scope: !6199, file: !1, discriminator: 2)
!6204 = !DILocation(line: 2799, column: 9, scope: !6203)
!6205 = !DILocation(line: 2801, column: 11, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !1, line: 2801, column: 10)
!6207 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2800, column: 23)
!6208 = !DILocation(line: 2801, column: 10, scope: !6207)
!6209 = !DILocation(line: 2802, column: 7, scope: !6206)
!6210 = !DILocation(line: 2808, column: 29, scope: !6207)
!6211 = !DILocation(line: 2809, column: 12, scope: !6207)
!6212 = !DILocation(line: 2808, column: 10, scope: !6207)
!6213 = !DILocation(line: 2808, column: 8, scope: !6207)
!6214 = !DILocation(line: 2811, column: 6, scope: !6207)
!6215 = !DILocation(line: 2812, column: 11, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6207, file: !1, line: 2812, column: 10)
!6217 = !DILocation(line: 2812, column: 10, scope: !6207)
!6218 = !DILocation(line: 2813, column: 7, scope: !6216)
!6219 = !DILocation(line: 2814, column: 5, scope: !6207)
!6220 = !DILocation(line: 2815, column: 29, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2814, column: 12)
!6222 = !DILocation(line: 2816, column: 12, scope: !6221)
!6223 = !DILocation(line: 2815, column: 10, scope: !6221)
!6224 = !DILocation(line: 2815, column: 8, scope: !6221)
!6225 = !DILocation(line: 2817, column: 6, scope: !6221)
!6226 = !DILocation(line: 2819, column: 9, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6137, file: !1, line: 2819, column: 9)
!6228 = !DILocation(line: 2819, column: 11, scope: !6227)
!6229 = !DILocation(line: 2819, column: 9, scope: !6137)
!6230 = !DILocation(line: 2820, column: 6, scope: !6227)
!6231 = !DILocation(line: 2826, column: 21, scope: !6137)
!6232 = !DILocation(line: 2826, column: 12, scope: !6137)
!6233 = !DILocation(line: 2826, column: 5, scope: !6137)
!6234 = !DILocation(line: 2826, column: 19, scope: !6137)
!6235 = !DILocation(line: 2827, column: 14, scope: !6137)
!6236 = !DILocation(line: 2827, column: 20, scope: !6137)
!6237 = !DILocation(line: 2827, column: 27, scope: !6137)
!6238 = !DILocation(line: 2827, column: 25, scope: !6137)
!6239 = !DILocation(line: 2827, column: 11, scope: !6137)
!6240 = !DILocation(line: 2829, column: 16, scope: !6137)
!6241 = !DILocation(line: 2829, column: 11, scope: !6137)
!6242 = !DILocation(line: 2829, column: 14, scope: !6137)
!6243 = !DILocation(line: 2830, column: 22, scope: !6137)
!6244 = !DILocation(line: 2779, column: 4, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6138, file: !1, discriminator: 1)
!6246 = !DILocation(line: 2835, column: 6, scope: !6134)
!6247 = !DILocation(line: 2836, column: 20, scope: !6134)
!6248 = !DILocation(line: 2836, column: 22, scope: !6134)
!6249 = !DILocation(line: 2836, column: 18, scope: !6134)
!6250 = !DILocation(line: 2837, column: 20, scope: !6134)
!6251 = !DILocation(line: 2837, column: 22, scope: !6134)
!6252 = !DILocation(line: 2837, column: 18, scope: !6134)
!6253 = !DILocation(line: 2837, column: 4, scope: !6134)
!6254 = !DILocation(line: 2843, column: 8, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6134, file: !1, line: 2843, column: 8)
!6256 = !DILocation(line: 2843, column: 22, scope: !6255)
!6257 = !DILocation(line: 2843, column: 8, scope: !6134)
!6258 = !DILocation(line: 2844, column: 10, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !1, line: 2844, column: 9)
!6260 = distinct !DILexicalBlock(scope: !6255, file: !1, line: 2843, column: 28)
!6261 = !DILocation(line: 2844, column: 10, scope: !6262)
!6262 = !DILexicalBlockFile(scope: !6259, file: !1, discriminator: 1)
!6263 = !DILocation(line: 2844, column: 10, scope: !6264)
!6264 = !DILexicalBlockFile(scope: !6259, file: !1, discriminator: 2)
!6265 = !DILocation(line: 2844, column: 9, scope: !6264)
!6266 = !DILocation(line: 2846, column: 11, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 2846, column: 10)
!6268 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2845, column: 23)
!6269 = !DILocation(line: 2846, column: 10, scope: !6268)
!6270 = !DILocation(line: 2847, column: 13, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !1, line: 2846, column: 17)
!6272 = !DILocation(line: 2848, column: 7, scope: !6271)
!6273 = !DILocation(line: 2850, column: 29, scope: !6268)
!6274 = !DILocation(line: 2851, column: 12, scope: !6268)
!6275 = !DILocation(line: 2850, column: 10, scope: !6268)
!6276 = !DILocation(line: 2850, column: 8, scope: !6268)
!6277 = !DILocation(line: 2853, column: 6, scope: !6268)
!6278 = !DILocation(line: 2854, column: 11, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 2854, column: 10)
!6280 = !DILocation(line: 2854, column: 10, scope: !6268)
!6281 = !DILocation(line: 2855, column: 7, scope: !6279)
!6282 = !DILocation(line: 2856, column: 5, scope: !6268)
!6283 = !DILocation(line: 2857, column: 29, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2856, column: 12)
!6285 = !DILocation(line: 2858, column: 10, scope: !6284)
!6286 = !DILocation(line: 2857, column: 10, scope: !6284)
!6287 = !DILocation(line: 2857, column: 8, scope: !6284)
!6288 = !DILocation(line: 2859, column: 6, scope: !6284)
!6289 = !DILocation(line: 2861, column: 16, scope: !6260)
!6290 = !DILocation(line: 2861, column: 18, scope: !6260)
!6291 = !DILocation(line: 2861, column: 22, scope: !6260)
!6292 = !DILocation(line: 2861, column: 14, scope: !6260)
!6293 = !DILocation(line: 2862, column: 4, scope: !6260)
!6294 = !DILocation(line: 2863, column: 16, scope: !6255)
!6295 = !DILocation(line: 2863, column: 30, scope: !6255)
!6296 = !DILocation(line: 2863, column: 14, scope: !6255)
!6297 = !DILocation(line: 2864, column: 16, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6134, file: !1, line: 2864, column: 8)
!6299 = !DILocation(line: 2864, column: 8, scope: !6298)
!6300 = !DILocation(line: 2864, column: 27, scope: !6298)
!6301 = !DILocation(line: 2864, column: 25, scope: !6298)
!6302 = !DILocation(line: 2864, column: 8, scope: !6134)
!6303 = !DILocation(line: 2865, column: 5, scope: !6298)
!6304 = !DILocation(line: 2869, column: 12, scope: !6134)
!6305 = !DILocation(line: 2869, column: 4, scope: !6134)
!6306 = !DILocation(line: 2871, column: 16, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6134, file: !1, line: 2869, column: 27)
!6308 = !DILocation(line: 2871, column: 14, scope: !6307)
!6309 = !DILocation(line: 2872, column: 11, scope: !6307)
!6310 = !DILocation(line: 2873, column: 5, scope: !6307)
!6311 = !DILocation(line: 2875, column: 16, scope: !6307)
!6312 = !DILocation(line: 2875, column: 14, scope: !6307)
!6313 = !DILocation(line: 2877, column: 10, scope: !6307)
!6314 = !DILocation(line: 2877, column: 8, scope: !6307)
!6315 = !DILocation(line: 2878, column: 10, scope: !6307)
!6316 = !DILocation(line: 2878, column: 8, scope: !6307)
!6317 = !DILocation(line: 2879, column: 11, scope: !6307)
!6318 = !DILocation(line: 2880, column: 5, scope: !6307)
!6319 = !DILocation(line: 2882, column: 16, scope: !6307)
!6320 = !DILocation(line: 2882, column: 14, scope: !6307)
!6321 = !DILocation(line: 2884, column: 10, scope: !6307)
!6322 = !DILocation(line: 2884, column: 8, scope: !6307)
!6323 = !DILocation(line: 2885, column: 10, scope: !6307)
!6324 = !DILocation(line: 2885, column: 8, scope: !6307)
!6325 = !DILocation(line: 2886, column: 11, scope: !6307)
!6326 = !DILocation(line: 2887, column: 5, scope: !6307)
!6327 = !DILocation(line: 2890, column: 17, scope: !6307)
!6328 = !DILocation(line: 2890, column: 9, scope: !6307)
!6329 = !DILocation(line: 2890, column: 32, scope: !6307)
!6330 = !DILocation(line: 2889, column: 17, scope: !6307)
!6331 = !DILocation(line: 2891, column: 5, scope: !6307)
!6332 = !DILocation(line: 2892, column: 4, scope: !6307)
!6333 = !DILocation(line: 2899, column: 8, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6134, file: !1, line: 2899, column: 8)
!6335 = !DILocation(line: 2899, column: 19, scope: !6334)
!6336 = !DILocation(line: 2899, column: 43, scope: !6334)
!6337 = !DILocation(line: 2900, column: 8, scope: !6334)
!6338 = !DILocation(line: 2900, column: 20, scope: !6334)
!6339 = !DILocation(line: 2899, column: 8, scope: !6340)
!6340 = !DILexicalBlockFile(scope: !6134, file: !1, discriminator: 1)
!6341 = !DILocalVariable(name: "offbits", scope: !6342, file: !1, line: 2901, type: !23)
!6342 = distinct !DILexicalBlock(scope: !6334, file: !1, line: 2900, column: 26)
!6343 = !DILocation(line: 2901, column: 9, scope: !6342)
!6344 = !DILocation(line: 2901, column: 19, scope: !6342)
!6345 = !DILocation(line: 2901, column: 31, scope: !6342)
!6346 = !DILocation(line: 2903, column: 10, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 2903, column: 9)
!6348 = !DILocation(line: 2903, column: 10, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !6347, file: !1, discriminator: 1)
!6350 = !DILocation(line: 2903, column: 10, scope: !6351)
!6351 = !DILexicalBlockFile(scope: !6347, file: !1, discriminator: 2)
!6352 = !DILocation(line: 2903, column: 9, scope: !6351)
!6353 = !DILocation(line: 2904, column: 12, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6347, file: !1, line: 2903, column: 50)
!6355 = !DILocation(line: 2905, column: 10, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6354, file: !1, line: 2905, column: 10)
!6357 = !DILocation(line: 2905, column: 10, scope: !6354)
!6358 = !DILocation(line: 2906, column: 7, scope: !6356)
!6359 = !DILocation(line: 2907, column: 6, scope: !6354)
!6360 = !DILocation(line: 2909, column: 16, scope: !6342)
!6361 = !DILocation(line: 2909, column: 43, scope: !6342)
!6362 = !DILocation(line: 2909, column: 14, scope: !6342)
!6363 = !DILocation(line: 2912, column: 10, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 2912, column: 9)
!6365 = !DILocation(line: 2912, column: 10, scope: !6366)
!6366 = !DILexicalBlockFile(scope: !6364, file: !1, discriminator: 1)
!6367 = !DILocation(line: 2912, column: 10, scope: !6368)
!6368 = !DILexicalBlockFile(scope: !6364, file: !1, discriminator: 2)
!6369 = !DILocation(line: 2912, column: 9, scope: !6368)
!6370 = !DILocation(line: 2914, column: 11, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !1, line: 2914, column: 10)
!6372 = distinct !DILexicalBlock(scope: !6364, file: !1, line: 2913, column: 33)
!6373 = !DILocation(line: 2914, column: 10, scope: !6372)
!6374 = !DILocation(line: 2915, column: 13, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6371, file: !1, line: 2914, column: 17)
!6376 = !DILocation(line: 2916, column: 7, scope: !6375)
!6377 = !DILocation(line: 2918, column: 6, scope: !6372)
!6378 = !DILocation(line: 2919, column: 29, scope: !6372)
!6379 = !DILocation(line: 2920, column: 12, scope: !6372)
!6380 = !DILocation(line: 2919, column: 10, scope: !6372)
!6381 = !DILocation(line: 2919, column: 8, scope: !6372)
!6382 = !DILocation(line: 2922, column: 6, scope: !6372)
!6383 = !DILocation(line: 2923, column: 11, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6372, file: !1, line: 2923, column: 10)
!6385 = !DILocation(line: 2923, column: 10, scope: !6372)
!6386 = !DILocation(line: 2924, column: 7, scope: !6384)
!6387 = !DILocation(line: 2925, column: 5, scope: !6372)
!6388 = !DILocation(line: 2926, column: 6, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6364, file: !1, line: 2925, column: 12)
!6390 = !DILocation(line: 2927, column: 29, scope: !6389)
!6391 = !DILocation(line: 2928, column: 12, scope: !6389)
!6392 = !DILocation(line: 2927, column: 10, scope: !6389)
!6393 = !DILocation(line: 2927, column: 8, scope: !6389)
!6394 = !DILocation(line: 2929, column: 6, scope: !6389)
!6395 = !DILocation(line: 2932, column: 17, scope: !6342)
!6396 = !DILocation(line: 2932, column: 14, scope: !6342)
!6397 = !DILocation(line: 2933, column: 4, scope: !6342)
!6398 = !DILocation(line: 2934, column: 10, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 2934, column: 9)
!6400 = distinct !DILexicalBlock(scope: !6334, file: !1, line: 2933, column: 11)
!6401 = !DILocation(line: 2934, column: 10, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6399, file: !1, discriminator: 1)
!6403 = !DILocation(line: 2934, column: 10, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !6399, file: !1, discriminator: 2)
!6405 = !DILocation(line: 2934, column: 9, scope: !6404)
!6406 = !DILocation(line: 2936, column: 12, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6399, file: !1, line: 2935, column: 23)
!6408 = !DILocation(line: 2937, column: 10, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6407, file: !1, line: 2937, column: 10)
!6410 = !DILocation(line: 2937, column: 10, scope: !6407)
!6411 = !DILocation(line: 2938, column: 7, scope: !6409)
!6412 = !DILocation(line: 2939, column: 6, scope: !6407)
!6413 = !DILocation(line: 2941, column: 16, scope: !6400)
!6414 = !DILocation(line: 2941, column: 14, scope: !6400)
!6415 = !DILocation(line: 2942, column: 5, scope: !6400)
!6416 = !DILocation(line: 2944, column: 24, scope: !6134)
!6417 = !DILocation(line: 2944, column: 16, scope: !6134)
!6418 = !DILocation(line: 2944, column: 39, scope: !6134)
!6419 = !DILocation(line: 2944, column: 44, scope: !6134)
!6420 = !DILocation(line: 2944, column: 13, scope: !6134)
!6421 = !DILocation(line: 2947, column: 9, scope: !6134)
!6422 = !DILocation(line: 2947, column: 7, scope: !6134)
!6423 = !DILocation(line: 2948, column: 9, scope: !6134)
!6424 = !DILocation(line: 2948, column: 7, scope: !6134)
!6425 = !DILocation(line: 2949, column: 9, scope: !6134)
!6426 = !DILocation(line: 2949, column: 7, scope: !6134)
!6427 = !DILocation(line: 2949, column: 4, scope: !6134)
!6428 = !DILocation(line: 2955, column: 16, scope: !6134)
!6429 = !DILocation(line: 2955, column: 24, scope: !6134)
!6430 = !DILocation(line: 2955, column: 22, scope: !6134)
!6431 = !DILocation(line: 2955, column: 36, scope: !6134)
!6432 = !DILocation(line: 2955, column: 34, scope: !6134)
!6433 = !DILocation(line: 2955, column: 13, scope: !6134)
!6434 = !DILocation(line: 2955, column: 4, scope: !6134)
!6435 = !DILocation(line: 2962, column: 4, scope: !6134)
!6436 = !DILocalVariable(name: "s", scope: !6437, file: !1, line: 2963, type: !436)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !1, line: 2962, column: 13)
!6438 = distinct !DILexicalBlock(scope: !6439, file: !1, line: 2962, column: 4)
!6439 = distinct !DILexicalBlock(scope: !6134, file: !1, line: 2962, column: 4)
!6440 = !DILocation(line: 2963, column: 26, scope: !6437)
!6441 = !DILocalVariable(name: "l", scope: !6437, file: !1, line: 2964, type: !23)
!6442 = !DILocation(line: 2964, column: 9, scope: !6437)
!6443 = !DILocation(line: 2966, column: 9, scope: !6437)
!6444 = !DILocation(line: 2966, column: 7, scope: !6437)
!6445 = !DILocation(line: 2967, column: 9, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 2967, column: 9)
!6447 = !DILocation(line: 2967, column: 20, scope: !6446)
!6448 = !DILocation(line: 2967, column: 18, scope: !6446)
!6449 = !DILocation(line: 2967, column: 9, scope: !6437)
!6450 = !DILocation(line: 2968, column: 10, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !1, line: 2968, column: 10)
!6452 = distinct !DILexicalBlock(scope: !6446, file: !1, line: 2967, column: 27)
!6453 = !DILocation(line: 2968, column: 14, scope: !6451)
!6454 = !DILocation(line: 2968, column: 23, scope: !6451)
!6455 = !DILocation(line: 2968, column: 21, scope: !6451)
!6456 = !DILocation(line: 2968, column: 12, scope: !6451)
!6457 = !DILocation(line: 2968, column: 10, scope: !6452)
!6458 = !DILocation(line: 2969, column: 11, scope: !6451)
!6459 = !DILocation(line: 2969, column: 20, scope: !6451)
!6460 = !DILocation(line: 2969, column: 18, scope: !6451)
!6461 = !DILocation(line: 2969, column: 9, scope: !6451)
!6462 = !DILocation(line: 2969, column: 7, scope: !6451)
!6463 = !DILocation(line: 2970, column: 5, scope: !6452)
!6464 = !DILocation(line: 2971, column: 10, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6466, file: !1, line: 2971, column: 10)
!6466 = distinct !DILexicalBlock(scope: !6446, file: !1, line: 2970, column: 12)
!6467 = !DILocation(line: 2971, column: 14, scope: !6465)
!6468 = !DILocation(line: 2971, column: 23, scope: !6465)
!6469 = !DILocation(line: 2971, column: 21, scope: !6465)
!6470 = !DILocation(line: 2971, column: 12, scope: !6465)
!6471 = !DILocation(line: 2971, column: 10, scope: !6466)
!6472 = !DILocation(line: 2972, column: 11, scope: !6465)
!6473 = !DILocation(line: 2972, column: 20, scope: !6465)
!6474 = !DILocation(line: 2972, column: 18, scope: !6465)
!6475 = !DILocation(line: 2972, column: 9, scope: !6465)
!6476 = !DILocation(line: 2972, column: 7, scope: !6465)
!6477 = !DILocation(line: 2974, column: 9, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 2974, column: 9)
!6479 = !DILocation(line: 2974, column: 17, scope: !6478)
!6480 = !DILocation(line: 2974, column: 15, scope: !6478)
!6481 = !DILocation(line: 2974, column: 22, scope: !6478)
!6482 = !DILocation(line: 2974, column: 19, scope: !6478)
!6483 = !DILocation(line: 2974, column: 9, scope: !6437)
!6484 = !DILocation(line: 2975, column: 16, scope: !6478)
!6485 = !DILocation(line: 2975, column: 23, scope: !6478)
!6486 = !DILocation(line: 2975, column: 21, scope: !6478)
!6487 = !DILocation(line: 2975, column: 10, scope: !6478)
!6488 = !DILocation(line: 2975, column: 8, scope: !6478)
!6489 = !DILocation(line: 2975, column: 6, scope: !6478)
!6490 = !DILocation(line: 2976, column: 9, scope: !6437)
!6491 = !DILocation(line: 2976, column: 18, scope: !6437)
!6492 = !DILocation(line: 2976, column: 16, scope: !6437)
!6493 = !DILocation(line: 2976, column: 7, scope: !6437)
!6494 = !DILocation(line: 2977, column: 9, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 2977, column: 9)
!6496 = !DILocation(line: 2977, column: 11, scope: !6495)
!6497 = !DILocation(line: 2977, column: 16, scope: !6495)
!6498 = !DILocation(line: 2977, column: 21, scope: !6499)
!6499 = !DILexicalBlockFile(scope: !6495, file: !1, discriminator: 1)
!6500 = !DILocation(line: 2977, column: 32, scope: !6499)
!6501 = !DILocation(line: 2977, column: 30, scope: !6499)
!6502 = !DILocation(line: 2977, column: 36, scope: !6499)
!6503 = !DILocation(line: 2977, column: 34, scope: !6499)
!6504 = !DILocation(line: 2978, column: 7, scope: !6495)
!6505 = !DILocation(line: 2978, column: 11, scope: !6499)
!6506 = !DILocation(line: 2978, column: 19, scope: !6499)
!6507 = !DILocation(line: 2978, column: 17, scope: !6499)
!6508 = !DILocation(line: 2978, column: 23, scope: !6499)
!6509 = !DILocation(line: 2978, column: 21, scope: !6499)
!6510 = !DILocation(line: 2977, column: 9, scope: !6511)
!6511 = !DILexicalBlockFile(scope: !6437, file: !1, discriminator: 2)
!6512 = !DILocation(line: 2979, column: 13, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6495, file: !1, line: 2978, column: 35)
!6514 = !DILocation(line: 2979, column: 22, scope: !6513)
!6515 = !DILocation(line: 2979, column: 20, scope: !6513)
!6516 = !DILocation(line: 2979, column: 29, scope: !6513)
!6517 = !DILocation(line: 2979, column: 32, scope: !6513)
!6518 = !DILocation(line: 2979, column: 6, scope: !6513)
!6519 = !DILocation(line: 2980, column: 13, scope: !6513)
!6520 = !DILocation(line: 2980, column: 20, scope: !6513)
!6521 = !DILocation(line: 2980, column: 23, scope: !6513)
!6522 = !DILocation(line: 2980, column: 6, scope: !6513)
!6523 = !DILocation(line: 2981, column: 5, scope: !6513)
!6524 = !DILocalVariable(name: "d", scope: !6525, file: !1, line: 2982, type: !325)
!6525 = distinct !DILexicalBlock(scope: !6495, file: !1, line: 2981, column: 12)
!6526 = !DILocation(line: 2982, column: 21, scope: !6525)
!6527 = !DILocalVariable(name: "li", scope: !6525, file: !1, line: 2983, type: !23)
!6528 = !DILocation(line: 2983, column: 10, scope: !6525)
!6529 = !DILocation(line: 2985, column: 10, scope: !6525)
!6530 = !DILocation(line: 2985, column: 19, scope: !6525)
!6531 = !DILocation(line: 2985, column: 17, scope: !6525)
!6532 = !DILocation(line: 2985, column: 8, scope: !6525)
!6533 = !DILocation(line: 2986, column: 14, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6525, file: !1, line: 2986, column: 6)
!6535 = !DILocation(line: 2986, column: 11, scope: !6534)
!6536 = !DILocation(line: 2986, column: 19, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6538, file: !1, discriminator: 1)
!6538 = distinct !DILexicalBlock(scope: !6534, file: !1, line: 2986, column: 6)
!6539 = !DILocation(line: 2986, column: 24, scope: !6537)
!6540 = !DILocation(line: 2986, column: 22, scope: !6537)
!6541 = !DILocation(line: 2986, column: 6, scope: !6537)
!6542 = !DILocation(line: 2987, column: 29, scope: !6538)
!6543 = !DILocation(line: 2987, column: 27, scope: !6538)
!6544 = !DILocation(line: 2987, column: 21, scope: !6538)
!6545 = !DILocation(line: 2987, column: 19, scope: !6538)
!6546 = !DILocation(line: 2987, column: 25, scope: !6538)
!6547 = !DILocation(line: 2987, column: 13, scope: !6538)
!6548 = !DILocation(line: 2987, column: 7, scope: !6538)
!6549 = !DILocation(line: 2987, column: 17, scope: !6538)
!6550 = !DILocation(line: 2986, column: 29, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6538, file: !1, discriminator: 2)
!6552 = !DILocation(line: 2986, column: 6, scope: !6551)
!6553 = !DILocation(line: 2989, column: 14, scope: !6437)
!6554 = !DILocation(line: 2989, column: 11, scope: !6437)
!6555 = !DILocation(line: 2990, column: 17, scope: !6437)
!6556 = !DILocation(line: 2990, column: 28, scope: !6437)
!6557 = !DILocation(line: 2990, column: 26, scope: !6437)
!6558 = !DILocation(line: 2990, column: 33, scope: !6437)
!6559 = !DILocation(line: 2990, column: 31, scope: !6437)
!6560 = !DILocation(line: 2990, column: 14, scope: !6437)
!6561 = !DILocation(line: 2991, column: 14, scope: !6437)
!6562 = !DILocation(line: 2991, column: 22, scope: !6437)
!6563 = !DILocation(line: 2991, column: 20, scope: !6437)
!6564 = !DILocation(line: 2991, column: 27, scope: !6437)
!6565 = !DILocation(line: 2991, column: 25, scope: !6437)
!6566 = !DILocation(line: 2991, column: 11, scope: !6437)
!6567 = !DILocation(line: 2992, column: 26, scope: !6437)
!6568 = !DILocation(line: 2992, column: 23, scope: !6437)
!6569 = !DILocation(line: 2993, column: 9, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 2993, column: 9)
!6571 = !DILocation(line: 2993, column: 21, scope: !6570)
!6572 = !DILocation(line: 2993, column: 18, scope: !6570)
!6573 = !DILocation(line: 2993, column: 9, scope: !6437)
!6574 = !DILocation(line: 2995, column: 6, scope: !6570)
!6575 = !DILocation(line: 2996, column: 17, scope: !6437)
!6576 = !DILocation(line: 2996, column: 14, scope: !6437)
!6577 = !DILocation(line: 2997, column: 9, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6437, file: !1, line: 2997, column: 9)
!6579 = !DILocation(line: 2997, column: 18, scope: !6578)
!6580 = !DILocation(line: 2997, column: 15, scope: !6578)
!6581 = !DILocation(line: 2997, column: 9, scope: !6437)
!6582 = !DILocation(line: 2999, column: 12, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6578, file: !1, line: 2997, column: 24)
!6584 = !DILocation(line: 3000, column: 6, scope: !6583)
!6585 = !DILocation(line: 2962, column: 4, scope: !6586)
!6586 = !DILexicalBlockFile(scope: !6438, file: !1, discriminator: 1)
!6587 = !DILocation(line: 3003, column: 10, scope: !6134)
!6588 = !DILocation(line: 3004, column: 4, scope: !6134)
!6589 = !DILocation(line: 2776, column: 2, scope: !6590)
!6590 = !DILexicalBlockFile(scope: !6130, file: !1, discriminator: 1)
!6591 = !DILocation(line: 3008, column: 10, scope: !610)
!6592 = !DILocation(line: 3008, column: 14, scope: !610)
!6593 = !DILocation(line: 3008, column: 20, scope: !610)
!6594 = !DILocation(line: 3008, column: 2, scope: !610)
!6595 = !DILocation(line: 3010, column: 2, scope: !610)
!6596 = !DILocation(line: 3010, column: 6, scope: !610)
!6597 = !DILocation(line: 3010, column: 11, scope: !610)
!6598 = !DILocation(line: 3011, column: 26, scope: !610)
!6599 = !DILocation(line: 3011, column: 2, scope: !610)
!6600 = !DILocation(line: 3011, column: 6, scope: !610)
!6601 = !DILocation(line: 3011, column: 24, scope: !610)
!6602 = !DILocation(line: 3012, column: 17, scope: !610)
!6603 = !DILocation(line: 3012, column: 2, scope: !610)
!6604 = !DILocation(line: 3012, column: 6, scope: !610)
!6605 = !DILocation(line: 3012, column: 15, scope: !610)
!6606 = !DILocation(line: 3013, column: 17, scope: !610)
!6607 = !DILocation(line: 3013, column: 2, scope: !610)
!6608 = !DILocation(line: 3013, column: 6, scope: !610)
!6609 = !DILocation(line: 3013, column: 15, scope: !610)
!6610 = !DILocation(line: 3014, column: 22, scope: !610)
!6611 = !DILocation(line: 3014, column: 2, scope: !610)
!6612 = !DILocation(line: 3014, column: 6, scope: !610)
!6613 = !DILocation(line: 3014, column: 20, scope: !610)
!6614 = !DILocation(line: 3015, column: 20, scope: !610)
!6615 = !DILocation(line: 3015, column: 2, scope: !610)
!6616 = !DILocation(line: 3015, column: 6, scope: !610)
!6617 = !DILocation(line: 3015, column: 18, scope: !610)
!6618 = !DILocation(line: 3016, column: 22, scope: !610)
!6619 = !DILocation(line: 3016, column: 2, scope: !610)
!6620 = !DILocation(line: 3016, column: 6, scope: !610)
!6621 = !DILocation(line: 3016, column: 20, scope: !610)
!6622 = !DILocation(line: 3017, column: 11, scope: !610)
!6623 = !DILocation(line: 3017, column: 2, scope: !610)
!6624 = !DILocation(line: 3017, column: 6, scope: !610)
!6625 = !DILocation(line: 3017, column: 9, scope: !610)
!6626 = !DILocation(line: 3017, column: 24, scope: !610)
!6627 = !DILocation(line: 3017, column: 15, scope: !610)
!6628 = !DILocation(line: 3017, column: 19, scope: !610)
!6629 = !DILocation(line: 3017, column: 22, scope: !610)
!6630 = !DILocation(line: 3017, column: 37, scope: !610)
!6631 = !DILocation(line: 3017, column: 28, scope: !610)
!6632 = !DILocation(line: 3017, column: 32, scope: !610)
!6633 = !DILocation(line: 3017, column: 35, scope: !610)
!6634 = !DILocation(line: 3018, column: 14, scope: !610)
!6635 = !DILocation(line: 3018, column: 2, scope: !610)
!6636 = !DILocation(line: 3018, column: 6, scope: !610)
!6637 = !DILocation(line: 3018, column: 12, scope: !610)
!6638 = !DILocation(line: 3019, column: 14, scope: !610)
!6639 = !DILocation(line: 3019, column: 2, scope: !610)
!6640 = !DILocation(line: 3019, column: 6, scope: !610)
!6641 = !DILocation(line: 3019, column: 12, scope: !610)
!6642 = !DILocation(line: 3020, column: 20, scope: !610)
!6643 = !DILocation(line: 3020, column: 27, scope: !610)
!6644 = !DILocation(line: 3020, column: 25, scope: !610)
!6645 = !DILocation(line: 3020, column: 2, scope: !610)
!6646 = !DILocation(line: 3020, column: 8, scope: !610)
!6647 = !DILocation(line: 3020, column: 18, scope: !610)
!6648 = !DILocation(line: 3021, column: 2, scope: !610)
!6649 = !DILocation(line: 3022, column: 1, scope: !610)
!6650 = !DILocalVariable(name: "strm", arg: 1, scope: !589, file: !1, line: 2273, type: !572)
!6651 = !DILocation(line: 2273, column: 34, scope: !589)
!6652 = !DILocalVariable(name: "br", arg: 2, scope: !589, file: !1, line: 2273, type: !587)
!6653 = !DILocation(line: 2273, column: 55, scope: !589)
!6654 = !DILocalVariable(name: "n", scope: !589, file: !1, line: 2278, type: !23)
!6655 = !DILocation(line: 2278, column: 6, scope: !589)
!6656 = !DILocation(line: 2278, column: 23, scope: !589)
!6657 = !DILocation(line: 2278, column: 27, scope: !589)
!6658 = !DILocation(line: 2278, column: 21, scope: !589)
!6659 = !DILocation(line: 2278, column: 10, scope: !589)
!6660 = !DILocation(line: 2280, column: 2, scope: !589)
!6661 = !DILocation(line: 2281, column: 11, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 2280, column: 11)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !1, line: 2280, column: 2)
!6664 = distinct !DILexicalBlock(scope: !589, file: !1, line: 2280, column: 2)
!6665 = !DILocation(line: 2281, column: 13, scope: !6662)
!6666 = !DILocation(line: 2281, column: 3, scope: !6662)
!6667 = !DILocation(line: 2283, column: 8, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !1, line: 2283, column: 8)
!6669 = distinct !DILexicalBlock(scope: !6662, file: !1, line: 2281, column: 19)
!6670 = !DILocation(line: 2283, column: 14, scope: !6668)
!6671 = !DILocation(line: 2283, column: 23, scope: !6668)
!6672 = !DILocation(line: 2283, column: 8, scope: !6669)
!6673 = !DILocation(line: 2285, column: 20, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6668, file: !1, line: 2283, column: 29)
!6675 = !DILocation(line: 2285, column: 26, scope: !6674)
!6676 = !DILocation(line: 2285, column: 10, scope: !6674)
!6677 = !DILocation(line: 2285, column: 38, scope: !6674)
!6678 = !DILocation(line: 2286, column: 20, scope: !6674)
!6679 = !DILocation(line: 2286, column: 26, scope: !6674)
!6680 = !DILocation(line: 2286, column: 10, scope: !6674)
!6681 = !DILocation(line: 2286, column: 38, scope: !6674)
!6682 = !DILocation(line: 2285, column: 44, scope: !6674)
!6683 = !DILocation(line: 2287, column: 20, scope: !6674)
!6684 = !DILocation(line: 2287, column: 26, scope: !6674)
!6685 = !DILocation(line: 2287, column: 10, scope: !6674)
!6686 = !DILocation(line: 2287, column: 38, scope: !6674)
!6687 = !DILocation(line: 2286, column: 44, scope: !6674)
!6688 = !DILocation(line: 2288, column: 20, scope: !6674)
!6689 = !DILocation(line: 2288, column: 26, scope: !6674)
!6690 = !DILocation(line: 2288, column: 10, scope: !6674)
!6691 = !DILocation(line: 2288, column: 38, scope: !6674)
!6692 = !DILocation(line: 2287, column: 44, scope: !6674)
!6693 = !DILocation(line: 2289, column: 20, scope: !6674)
!6694 = !DILocation(line: 2289, column: 26, scope: !6674)
!6695 = !DILocation(line: 2289, column: 10, scope: !6674)
!6696 = !DILocation(line: 2289, column: 38, scope: !6674)
!6697 = !DILocation(line: 2289, column: 9, scope: !6674)
!6698 = !DILocation(line: 2288, column: 44, scope: !6674)
!6699 = !DILocation(line: 2290, column: 20, scope: !6674)
!6700 = !DILocation(line: 2290, column: 26, scope: !6674)
!6701 = !DILocation(line: 2290, column: 10, scope: !6674)
!6702 = !DILocation(line: 2290, column: 38, scope: !6674)
!6703 = !DILocation(line: 2290, column: 9, scope: !6674)
!6704 = !DILocation(line: 2289, column: 44, scope: !6674)
!6705 = !DILocation(line: 2291, column: 20, scope: !6674)
!6706 = !DILocation(line: 2291, column: 26, scope: !6674)
!6707 = !DILocation(line: 2291, column: 10, scope: !6674)
!6708 = !DILocation(line: 2291, column: 38, scope: !6674)
!6709 = !DILocation(line: 2291, column: 9, scope: !6674)
!6710 = !DILocation(line: 2290, column: 44, scope: !6674)
!6711 = !DILocation(line: 2292, column: 20, scope: !6674)
!6712 = !DILocation(line: 2292, column: 26, scope: !6674)
!6713 = !DILocation(line: 2292, column: 10, scope: !6674)
!6714 = !DILocation(line: 2291, column: 43, scope: !6674)
!6715 = !DILocation(line: 2284, column: 5, scope: !6674)
!6716 = !DILocation(line: 2284, column: 9, scope: !6674)
!6717 = !DILocation(line: 2284, column: 22, scope: !6674)
!6718 = !DILocation(line: 2293, column: 5, scope: !6674)
!6719 = !DILocation(line: 2293, column: 11, scope: !6674)
!6720 = !DILocation(line: 2293, column: 19, scope: !6674)
!6721 = !DILocation(line: 2294, column: 5, scope: !6674)
!6722 = !DILocation(line: 2294, column: 11, scope: !6674)
!6723 = !DILocation(line: 2294, column: 20, scope: !6674)
!6724 = !DILocation(line: 2295, column: 5, scope: !6674)
!6725 = !DILocation(line: 2295, column: 9, scope: !6674)
!6726 = !DILocation(line: 2295, column: 21, scope: !6674)
!6727 = !DILocation(line: 2296, column: 5, scope: !6674)
!6728 = !DILocation(line: 2298, column: 4, scope: !6669)
!6729 = !DILocation(line: 2300, column: 8, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6669, file: !1, line: 2300, column: 8)
!6731 = !DILocation(line: 2300, column: 14, scope: !6730)
!6732 = !DILocation(line: 2300, column: 23, scope: !6730)
!6733 = !DILocation(line: 2300, column: 8, scope: !6669)
!6734 = !DILocation(line: 2302, column: 10, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6730, file: !1, line: 2300, column: 29)
!6736 = !DILocation(line: 2302, column: 14, scope: !6735)
!6737 = !DILocation(line: 2302, column: 27, scope: !6735)
!6738 = !DILocation(line: 2303, column: 20, scope: !6735)
!6739 = !DILocation(line: 2303, column: 26, scope: !6735)
!6740 = !DILocation(line: 2303, column: 10, scope: !6735)
!6741 = !DILocation(line: 2303, column: 38, scope: !6735)
!6742 = !DILocation(line: 2302, column: 34, scope: !6735)
!6743 = !DILocation(line: 2304, column: 20, scope: !6735)
!6744 = !DILocation(line: 2304, column: 26, scope: !6735)
!6745 = !DILocation(line: 2304, column: 10, scope: !6735)
!6746 = !DILocation(line: 2304, column: 38, scope: !6735)
!6747 = !DILocation(line: 2303, column: 44, scope: !6735)
!6748 = !DILocation(line: 2305, column: 20, scope: !6735)
!6749 = !DILocation(line: 2305, column: 26, scope: !6735)
!6750 = !DILocation(line: 2305, column: 10, scope: !6735)
!6751 = !DILocation(line: 2305, column: 38, scope: !6735)
!6752 = !DILocation(line: 2305, column: 9, scope: !6735)
!6753 = !DILocation(line: 2304, column: 44, scope: !6735)
!6754 = !DILocation(line: 2306, column: 20, scope: !6735)
!6755 = !DILocation(line: 2306, column: 26, scope: !6735)
!6756 = !DILocation(line: 2306, column: 10, scope: !6735)
!6757 = !DILocation(line: 2306, column: 38, scope: !6735)
!6758 = !DILocation(line: 2306, column: 9, scope: !6735)
!6759 = !DILocation(line: 2305, column: 44, scope: !6735)
!6760 = !DILocation(line: 2307, column: 20, scope: !6735)
!6761 = !DILocation(line: 2307, column: 26, scope: !6735)
!6762 = !DILocation(line: 2307, column: 10, scope: !6735)
!6763 = !DILocation(line: 2307, column: 38, scope: !6735)
!6764 = !DILocation(line: 2307, column: 9, scope: !6735)
!6765 = !DILocation(line: 2306, column: 44, scope: !6735)
!6766 = !DILocation(line: 2308, column: 20, scope: !6735)
!6767 = !DILocation(line: 2308, column: 26, scope: !6735)
!6768 = !DILocation(line: 2308, column: 10, scope: !6735)
!6769 = !DILocation(line: 2307, column: 43, scope: !6735)
!6770 = !DILocation(line: 2301, column: 5, scope: !6735)
!6771 = !DILocation(line: 2301, column: 9, scope: !6735)
!6772 = !DILocation(line: 2301, column: 22, scope: !6735)
!6773 = !DILocation(line: 2309, column: 5, scope: !6735)
!6774 = !DILocation(line: 2309, column: 11, scope: !6735)
!6775 = !DILocation(line: 2309, column: 19, scope: !6735)
!6776 = !DILocation(line: 2310, column: 5, scope: !6735)
!6777 = !DILocation(line: 2310, column: 11, scope: !6735)
!6778 = !DILocation(line: 2310, column: 20, scope: !6735)
!6779 = !DILocation(line: 2311, column: 5, scope: !6735)
!6780 = !DILocation(line: 2311, column: 9, scope: !6735)
!6781 = !DILocation(line: 2311, column: 21, scope: !6735)
!6782 = !DILocation(line: 2312, column: 5, scope: !6735)
!6783 = !DILocation(line: 2314, column: 4, scope: !6669)
!6784 = !DILocation(line: 2318, column: 4, scope: !6669)
!6785 = !DILocation(line: 2320, column: 4, scope: !6669)
!6786 = !DILocation(line: 2322, column: 7, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6662, file: !1, line: 2322, column: 7)
!6788 = !DILocation(line: 2322, column: 13, scope: !6787)
!6789 = !DILocation(line: 2322, column: 22, scope: !6787)
!6790 = !DILocation(line: 2322, column: 7, scope: !6662)
!6791 = !DILocation(line: 2325, column: 8, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !1, line: 2325, column: 8)
!6793 = distinct !DILexicalBlock(scope: !6787, file: !1, line: 2322, column: 27)
!6794 = !DILocation(line: 2325, column: 14, scope: !6792)
!6795 = !DILocation(line: 2325, column: 23, scope: !6792)
!6796 = !DILocation(line: 2325, column: 8, scope: !6793)
!6797 = !DILocation(line: 2326, column: 16, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6792, file: !1, line: 2325, column: 29)
!6799 = !DILocation(line: 2326, column: 22, scope: !6798)
!6800 = !DILocation(line: 2326, column: 29, scope: !6798)
!6801 = !DILocation(line: 2326, column: 15, scope: !6798)
!6802 = !DILocation(line: 2326, column: 5, scope: !6798)
!6803 = !DILocation(line: 2326, column: 9, scope: !6798)
!6804 = !DILocation(line: 2326, column: 13, scope: !6798)
!6805 = !DILocation(line: 2327, column: 5, scope: !6798)
!6806 = !DILocation(line: 2327, column: 11, scope: !6798)
!6807 = !DILocation(line: 2327, column: 19, scope: !6798)
!6808 = !DILocation(line: 2328, column: 5, scope: !6798)
!6809 = !DILocation(line: 2328, column: 9, scope: !6798)
!6810 = !DILocation(line: 2328, column: 18, scope: !6798)
!6811 = !DILocation(line: 2329, column: 4, scope: !6798)
!6812 = !DILocation(line: 2330, column: 4, scope: !6793)
!6813 = !DILocation(line: 2333, column: 7, scope: !6662)
!6814 = !DILocation(line: 2333, column: 11, scope: !6662)
!6815 = !DILocation(line: 2333, column: 24, scope: !6662)
!6816 = !DILocation(line: 2334, column: 23, scope: !6662)
!6817 = !DILocation(line: 2334, column: 29, scope: !6662)
!6818 = !DILocation(line: 2334, column: 7, scope: !6662)
!6819 = !DILocation(line: 2333, column: 31, scope: !6662)
!6820 = !DILocation(line: 2332, column: 3, scope: !6662)
!6821 = !DILocation(line: 2332, column: 7, scope: !6662)
!6822 = !DILocation(line: 2332, column: 20, scope: !6662)
!6823 = !DILocation(line: 2335, column: 3, scope: !6662)
!6824 = !DILocation(line: 2335, column: 9, scope: !6662)
!6825 = !DILocation(line: 2335, column: 17, scope: !6662)
!6826 = !DILocation(line: 2336, column: 3, scope: !6662)
!6827 = !DILocation(line: 2336, column: 9, scope: !6662)
!6828 = !DILocation(line: 2336, column: 18, scope: !6662)
!6829 = !DILocation(line: 2337, column: 3, scope: !6662)
!6830 = !DILocation(line: 2337, column: 7, scope: !6662)
!6831 = !DILocation(line: 2337, column: 19, scope: !6662)
!6832 = !DILocation(line: 2338, column: 5, scope: !6662)
!6833 = !DILocation(line: 2280, column: 2, scope: !6834)
!6834 = !DILexicalBlockFile(scope: !6663, file: !1, discriminator: 1)
!6835 = !DILocation(line: 2340, column: 1, scope: !589)
!6836 = !DILocalVariable(name: "pp", arg: 1, scope: !592, file: !526, line: 168, type: !123)
!6837 = !DILocation(line: 168, column: 23, scope: !592)
!6838 = !DILocalVariable(name: "u", arg: 2, scope: !592, file: !526, line: 168, type: !307)
!6839 = !DILocation(line: 168, column: 36, scope: !592)
!6840 = !DILocalVariable(name: "p", scope: !592, file: !526, line: 170, type: !325)
!6841 = !DILocation(line: 170, column: 17, scope: !592)
!6842 = !DILocation(line: 170, column: 38, scope: !592)
!6843 = !DILocation(line: 172, column: 9, scope: !592)
!6844 = !DILocation(line: 172, column: 11, scope: !592)
!6845 = !DILocation(line: 172, column: 2, scope: !592)
!6846 = !DILocation(line: 172, column: 7, scope: !592)
!6847 = !DILocation(line: 173, column: 10, scope: !592)
!6848 = !DILocation(line: 173, column: 12, scope: !592)
!6849 = !DILocation(line: 173, column: 18, scope: !592)
!6850 = !DILocation(line: 173, column: 9, scope: !592)
!6851 = !DILocation(line: 173, column: 2, scope: !592)
!6852 = !DILocation(line: 173, column: 7, scope: !592)
!6853 = !DILocation(line: 174, column: 1, scope: !592)
!6854 = !DILocalVariable(name: "hf", arg: 1, scope: !595, file: !1, line: 3171, type: !576)
!6855 = !DILocation(line: 3171, column: 40, scope: !595)
!6856 = !DILocalVariable(name: "tbl", scope: !595, file: !1, line: 3173, type: !496)
!6857 = !DILocation(line: 3173, column: 12, scope: !595)
!6858 = !DILocalVariable(name: "bitlen", scope: !595, file: !1, line: 3174, type: !436)
!6859 = !DILocation(line: 3174, column: 23, scope: !595)
!6860 = !DILocalVariable(name: "bitptn", scope: !595, file: !1, line: 3175, type: !486)
!6861 = !DILocation(line: 3175, column: 6, scope: !595)
!6862 = !DILocalVariable(name: "weight", scope: !595, file: !1, line: 3175, type: !486)
!6863 = !DILocation(line: 3175, column: 18, scope: !595)
!6864 = !DILocalVariable(name: "i", scope: !595, file: !1, line: 3176, type: !23)
!6865 = !DILocation(line: 3176, column: 6, scope: !595)
!6866 = !DILocalVariable(name: "maxbits", scope: !595, file: !1, line: 3176, type: !23)
!6867 = !DILocation(line: 3176, column: 9, scope: !595)
!6868 = !DILocalVariable(name: "ptn", scope: !595, file: !1, line: 3176, type: !23)
!6869 = !DILocation(line: 3176, column: 22, scope: !595)
!6870 = !DILocalVariable(name: "tbl_size", scope: !595, file: !1, line: 3176, type: !23)
!6871 = !DILocation(line: 3176, column: 27, scope: !595)
!6872 = !DILocalVariable(name: "w", scope: !595, file: !1, line: 3176, type: !23)
!6873 = !DILocation(line: 3176, column: 37, scope: !595)
!6874 = !DILocalVariable(name: "diffbits", scope: !595, file: !1, line: 3177, type: !23)
!6875 = !DILocation(line: 3177, column: 6, scope: !595)
!6876 = !DILocalVariable(name: "len_avail", scope: !595, file: !1, line: 3177, type: !23)
!6877 = !DILocation(line: 3177, column: 16, scope: !595)
!6878 = !DILocation(line: 3182, column: 6, scope: !595)
!6879 = !DILocation(line: 3183, column: 9, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !595, file: !1, line: 3183, column: 2)
!6881 = !DILocation(line: 3183, column: 16, scope: !6880)
!6882 = !DILocation(line: 3183, column: 7, scope: !6880)
!6883 = !DILocation(line: 3183, column: 27, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !6885, file: !1, discriminator: 1)
!6885 = distinct !DILexicalBlock(scope: !6880, file: !1, line: 3183, column: 2)
!6886 = !DILocation(line: 3183, column: 29, scope: !6884)
!6887 = !DILocation(line: 3183, column: 2, scope: !6884)
!6888 = !DILocation(line: 3184, column: 15, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 3183, column: 50)
!6890 = !DILocation(line: 3184, column: 10, scope: !6889)
!6891 = !DILocation(line: 3184, column: 3, scope: !6889)
!6892 = !DILocation(line: 3184, column: 13, scope: !6889)
!6893 = !DILocation(line: 3185, column: 15, scope: !6889)
!6894 = !DILocation(line: 3185, column: 10, scope: !6889)
!6895 = !DILocation(line: 3185, column: 3, scope: !6889)
!6896 = !DILocation(line: 3185, column: 13, scope: !6889)
!6897 = !DILocation(line: 3186, column: 16, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6889, file: !1, line: 3186, column: 7)
!6899 = !DILocation(line: 3186, column: 7, scope: !6898)
!6900 = !DILocation(line: 3186, column: 11, scope: !6898)
!6901 = !DILocation(line: 3186, column: 7, scope: !6889)
!6902 = !DILocation(line: 3187, column: 20, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6898, file: !1, line: 3186, column: 20)
!6904 = !DILocation(line: 3187, column: 11, scope: !6903)
!6905 = !DILocation(line: 3187, column: 15, scope: !6903)
!6906 = !DILocation(line: 3187, column: 25, scope: !6903)
!6907 = !DILocation(line: 3187, column: 23, scope: !6903)
!6908 = !DILocation(line: 3187, column: 8, scope: !6903)
!6909 = !DILocation(line: 3188, column: 14, scope: !6903)
!6910 = !DILocation(line: 3188, column: 12, scope: !6903)
!6911 = !DILocation(line: 3189, column: 3, scope: !6903)
!6912 = !DILocation(line: 3190, column: 2, scope: !6889)
!6913 = !DILocation(line: 3183, column: 37, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !6885, file: !1, discriminator: 2)
!6915 = !DILocation(line: 3183, column: 43, scope: !6914)
!6916 = !DILocation(line: 3183, column: 2, scope: !6914)
!6917 = !DILocation(line: 3191, column: 7, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !595, file: !1, line: 3191, column: 6)
!6919 = !DILocation(line: 3191, column: 11, scope: !6918)
!6920 = !DILocation(line: 3191, column: 21, scope: !6918)
!6921 = !DILocation(line: 3191, column: 26, scope: !6918)
!6922 = !DILocation(line: 3191, column: 29, scope: !6923)
!6923 = !DILexicalBlockFile(scope: !6918, file: !1, discriminator: 1)
!6924 = !DILocation(line: 3191, column: 39, scope: !6923)
!6925 = !DILocation(line: 3191, column: 43, scope: !6923)
!6926 = !DILocation(line: 3191, column: 37, scope: !6923)
!6927 = !DILocation(line: 3191, column: 6, scope: !6923)
!6928 = !DILocation(line: 3192, column: 3, scope: !6918)
!6929 = !DILocation(line: 3194, column: 17, scope: !595)
!6930 = !DILocation(line: 3194, column: 2, scope: !595)
!6931 = !DILocation(line: 3194, column: 6, scope: !595)
!6932 = !DILocation(line: 3194, column: 15, scope: !595)
!6933 = !DILocation(line: 3201, column: 6, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !595, file: !1, line: 3201, column: 6)
!6935 = !DILocation(line: 3201, column: 14, scope: !6934)
!6936 = !DILocation(line: 3201, column: 6, scope: !595)
!6937 = !DILocalVariable(name: "ebits", scope: !6938, file: !1, line: 3202, type: !23)
!6938 = distinct !DILexicalBlock(scope: !6934, file: !1, line: 3201, column: 20)
!6939 = !DILocation(line: 3202, column: 7, scope: !6938)
!6940 = !DILocation(line: 3202, column: 20, scope: !6938)
!6941 = !DILocation(line: 3202, column: 18, scope: !6938)
!6942 = !DILocation(line: 3203, column: 10, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6938, file: !1, line: 3203, column: 3)
!6944 = !DILocation(line: 3203, column: 8, scope: !6943)
!6945 = !DILocation(line: 3203, column: 15, scope: !6946)
!6946 = !DILexicalBlockFile(scope: !6947, file: !1, discriminator: 1)
!6947 = distinct !DILexicalBlock(scope: !6943, file: !1, line: 3203, column: 3)
!6948 = !DILocation(line: 3203, column: 20, scope: !6946)
!6949 = !DILocation(line: 3203, column: 17, scope: !6946)
!6950 = !DILocation(line: 3203, column: 3, scope: !6946)
!6951 = !DILocation(line: 3204, column: 18, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6947, file: !1, line: 3203, column: 34)
!6953 = !DILocation(line: 3204, column: 11, scope: !6952)
!6954 = !DILocation(line: 3204, column: 4, scope: !6952)
!6955 = !DILocation(line: 3204, column: 14, scope: !6952)
!6956 = !DILocation(line: 3205, column: 18, scope: !6952)
!6957 = !DILocation(line: 3205, column: 11, scope: !6952)
!6958 = !DILocation(line: 3205, column: 4, scope: !6952)
!6959 = !DILocation(line: 3205, column: 14, scope: !6952)
!6960 = !DILocation(line: 3206, column: 3, scope: !6952)
!6961 = !DILocation(line: 3203, column: 30, scope: !6962)
!6962 = !DILexicalBlockFile(scope: !6947, file: !1, discriminator: 2)
!6963 = !DILocation(line: 3203, column: 3, scope: !6962)
!6964 = !DILocation(line: 3207, column: 2, scope: !6938)
!6965 = !DILocation(line: 3208, column: 6, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !595, file: !1, line: 3208, column: 6)
!6967 = !DILocation(line: 3208, column: 14, scope: !6966)
!6968 = !DILocation(line: 3208, column: 6, scope: !595)
!6969 = !DILocalVariable(name: "htbl_max", scope: !6970, file: !1, line: 3209, type: !23)
!6970 = distinct !DILexicalBlock(scope: !6966, file: !1, line: 3208, column: 27)
!6971 = !DILocation(line: 3209, column: 7, scope: !6970)
!6972 = !DILocalVariable(name: "p", scope: !6970, file: !1, line: 3210, type: !496)
!6973 = !DILocation(line: 3210, column: 13, scope: !6970)
!6974 = !DILocation(line: 3212, column: 14, scope: !6970)
!6975 = !DILocation(line: 3212, column: 22, scope: !6970)
!6976 = !DILocation(line: 3212, column: 12, scope: !6970)
!6977 = !DILocation(line: 3213, column: 10, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6970, file: !1, line: 3213, column: 3)
!6979 = !DILocation(line: 3213, column: 8, scope: !6978)
!6980 = !DILocation(line: 3213, column: 15, scope: !6981)
!6981 = !DILexicalBlockFile(scope: !6982, file: !1, discriminator: 1)
!6982 = distinct !DILexicalBlock(scope: !6978, file: !1, line: 3213, column: 3)
!6983 = !DILocation(line: 3213, column: 17, scope: !6981)
!6984 = !DILocation(line: 3213, column: 3, scope: !6981)
!6985 = !DILocation(line: 3214, column: 18, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6982, file: !1, line: 3213, column: 36)
!6987 = !DILocation(line: 3214, column: 11, scope: !6986)
!6988 = !DILocation(line: 3214, column: 4, scope: !6986)
!6989 = !DILocation(line: 3214, column: 14, scope: !6986)
!6990 = !DILocation(line: 3215, column: 18, scope: !6986)
!6991 = !DILocation(line: 3215, column: 11, scope: !6986)
!6992 = !DILocation(line: 3215, column: 4, scope: !6986)
!6993 = !DILocation(line: 3215, column: 14, scope: !6986)
!6994 = !DILocation(line: 3216, column: 3, scope: !6986)
!6995 = !DILocation(line: 3213, column: 32, scope: !6996)
!6996 = !DILexicalBlockFile(scope: !6982, file: !1, discriminator: 2)
!6997 = !DILocation(line: 3213, column: 3, scope: !6996)
!6998 = !DILocation(line: 3217, column: 14, scope: !6970)
!6999 = !DILocation(line: 3218, column: 7, scope: !6970)
!7000 = !DILocation(line: 3218, column: 27, scope: !6970)
!7001 = !DILocation(line: 3218, column: 31, scope: !6970)
!7002 = !DILocation(line: 3218, column: 25, scope: !6970)
!7003 = !DILocation(line: 3217, column: 32, scope: !6970)
!7004 = !DILocation(line: 3217, column: 12, scope: !6970)
!7005 = !DILocation(line: 3219, column: 17, scope: !6970)
!7006 = !DILocation(line: 3219, column: 9, scope: !6970)
!7007 = !DILocation(line: 3219, column: 13, scope: !6970)
!7008 = !DILocation(line: 3219, column: 5, scope: !6970)
!7009 = !DILocation(line: 3220, column: 3, scope: !6970)
!7010 = !DILocation(line: 3220, column: 10, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !6970, file: !1, discriminator: 1)
!7012 = !DILocation(line: 3220, column: 15, scope: !7011)
!7013 = !DILocation(line: 3220, column: 19, scope: !7011)
!7014 = !DILocation(line: 3220, column: 12, scope: !7011)
!7015 = !DILocation(line: 3220, column: 3, scope: !7011)
!7016 = !DILocation(line: 3221, column: 6, scope: !6970)
!7017 = !DILocation(line: 3221, column: 9, scope: !6970)
!7018 = !DILocation(line: 3220, column: 3, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !6970, file: !1, discriminator: 2)
!7020 = !DILocation(line: 3222, column: 2, scope: !6970)
!7021 = !DILocation(line: 3223, column: 12, scope: !6966)
!7022 = !DILocation(line: 3224, column: 19, scope: !595)
!7023 = !DILocation(line: 3224, column: 2, scope: !595)
!7024 = !DILocation(line: 3224, column: 6, scope: !595)
!7025 = !DILocation(line: 3224, column: 17, scope: !595)
!7026 = !DILocation(line: 3229, column: 11, scope: !595)
!7027 = !DILocation(line: 3230, column: 8, scope: !595)
!7028 = !DILocation(line: 3230, column: 12, scope: !595)
!7029 = !DILocation(line: 3230, column: 6, scope: !595)
!7030 = !DILocation(line: 3231, column: 11, scope: !595)
!7031 = !DILocation(line: 3231, column: 15, scope: !595)
!7032 = !DILocation(line: 3231, column: 9, scope: !595)
!7033 = !DILocation(line: 3232, column: 14, scope: !595)
!7034 = !DILocation(line: 3232, column: 18, scope: !595)
!7035 = !DILocation(line: 3232, column: 12, scope: !595)
!7036 = !DILocation(line: 3233, column: 2, scope: !595)
!7037 = !DILocation(line: 3233, column: 6, scope: !595)
!7038 = !DILocation(line: 3233, column: 16, scope: !595)
!7039 = !DILocation(line: 3234, column: 9, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !595, file: !1, line: 3234, column: 2)
!7041 = !DILocation(line: 3234, column: 7, scope: !7040)
!7042 = !DILocation(line: 3234, column: 14, scope: !7043)
!7043 = !DILexicalBlockFile(scope: !7044, file: !1, discriminator: 1)
!7044 = distinct !DILexicalBlock(scope: !7040, file: !1, line: 3234, column: 2)
!7045 = !DILocation(line: 3234, column: 18, scope: !7043)
!7046 = !DILocation(line: 3234, column: 16, scope: !7043)
!7047 = !DILocation(line: 3234, column: 2, scope: !7043)
!7048 = !DILocalVariable(name: "p", scope: !7049, file: !1, line: 3235, type: !496)
!7049 = distinct !DILexicalBlock(scope: !7044, file: !1, line: 3234, column: 34)
!7050 = !DILocation(line: 3235, column: 13, scope: !7049)
!7051 = !DILocalVariable(name: "len", scope: !7049, file: !1, line: 3236, type: !23)
!7052 = !DILocation(line: 3236, column: 7, scope: !7049)
!7053 = !DILocalVariable(name: "cnt", scope: !7049, file: !1, line: 3236, type: !23)
!7054 = !DILocation(line: 3236, column: 12, scope: !7049)
!7055 = !DILocalVariable(name: "bit", scope: !7049, file: !1, line: 3237, type: !307)
!7056 = !DILocation(line: 3237, column: 12, scope: !7049)
!7057 = !DILocalVariable(name: "extlen", scope: !7049, file: !1, line: 3238, type: !23)
!7058 = !DILocation(line: 3238, column: 7, scope: !7049)
!7059 = !DILocalVariable(name: "ht", scope: !7049, file: !1, line: 3239, type: !498)
!7060 = !DILocation(line: 3239, column: 19, scope: !7049)
!7061 = !DILocation(line: 3241, column: 14, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7049, file: !1, line: 3241, column: 7)
!7063 = !DILocation(line: 3241, column: 7, scope: !7062)
!7064 = !DILocation(line: 3241, column: 17, scope: !7062)
!7065 = !DILocation(line: 3241, column: 7, scope: !7049)
!7066 = !DILocation(line: 3242, column: 4, scope: !7062)
!7067 = !DILocation(line: 3244, column: 16, scope: !7049)
!7068 = !DILocation(line: 3244, column: 9, scope: !7049)
!7069 = !DILocation(line: 3244, column: 7, scope: !7049)
!7070 = !DILocation(line: 3245, column: 16, scope: !7049)
!7071 = !DILocation(line: 3245, column: 9, scope: !7049)
!7072 = !DILocation(line: 3245, column: 7, scope: !7049)
!7073 = !DILocation(line: 3246, column: 16, scope: !7049)
!7074 = !DILocation(line: 3246, column: 9, scope: !7049)
!7075 = !DILocation(line: 3246, column: 7, scope: !7049)
!7076 = !DILocation(line: 3247, column: 7, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7049, file: !1, line: 3247, column: 7)
!7078 = !DILocation(line: 3247, column: 11, scope: !7077)
!7079 = !DILocation(line: 3247, column: 7, scope: !7049)
!7080 = !DILocation(line: 3249, column: 23, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !1, line: 3249, column: 8)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !1, line: 3247, column: 25)
!7083 = !DILocation(line: 3249, column: 29, scope: !7081)
!7084 = !DILocation(line: 3249, column: 27, scope: !7081)
!7085 = !DILocation(line: 3249, column: 16, scope: !7081)
!7086 = !DILocation(line: 3249, column: 9, scope: !7081)
!7087 = !DILocation(line: 3249, column: 21, scope: !7081)
!7088 = !DILocation(line: 3249, column: 36, scope: !7081)
!7089 = !DILocation(line: 3249, column: 34, scope: !7081)
!7090 = !DILocation(line: 3249, column: 8, scope: !7082)
!7091 = !DILocation(line: 3250, column: 5, scope: !7081)
!7092 = !DILocation(line: 3252, column: 14, scope: !7082)
!7093 = !DILocation(line: 3252, column: 10, scope: !7082)
!7094 = !DILocation(line: 3252, column: 6, scope: !7082)
!7095 = !DILocation(line: 3253, column: 4, scope: !7082)
!7096 = !DILocation(line: 3253, column: 11, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !7082, file: !1, discriminator: 1)
!7098 = !DILocation(line: 3253, column: 17, scope: !7097)
!7099 = !DILocation(line: 3253, column: 4, scope: !7097)
!7100 = !DILocation(line: 3254, column: 24, scope: !7082)
!7101 = !DILocation(line: 3254, column: 14, scope: !7082)
!7102 = !DILocation(line: 3254, column: 7, scope: !7082)
!7103 = !DILocation(line: 3254, column: 5, scope: !7082)
!7104 = !DILocation(line: 3254, column: 12, scope: !7082)
!7105 = !DILocation(line: 3253, column: 4, scope: !7106)
!7106 = !DILexicalBlockFile(scope: !7082, file: !1, discriminator: 2)
!7107 = !DILocation(line: 3255, column: 4, scope: !7082)
!7108 = !DILocation(line: 3262, column: 17, scope: !7049)
!7109 = !DILocation(line: 3262, column: 23, scope: !7049)
!7110 = !DILocation(line: 3262, column: 21, scope: !7049)
!7111 = !DILocation(line: 3262, column: 10, scope: !7049)
!7112 = !DILocation(line: 3262, column: 3, scope: !7049)
!7113 = !DILocation(line: 3262, column: 15, scope: !7049)
!7114 = !DILocation(line: 3263, column: 16, scope: !7049)
!7115 = !DILocation(line: 3263, column: 25, scope: !7049)
!7116 = !DILocation(line: 3263, column: 12, scope: !7049)
!7117 = !DILocation(line: 3263, column: 9, scope: !7049)
!7118 = !DILocation(line: 3263, column: 7, scope: !7049)
!7119 = !DILocation(line: 3264, column: 12, scope: !7049)
!7120 = !DILocation(line: 3264, column: 16, scope: !7049)
!7121 = !DILocation(line: 3264, column: 10, scope: !7049)
!7122 = !DILocation(line: 3266, column: 13, scope: !7049)
!7123 = !DILocation(line: 3266, column: 20, scope: !7049)
!7124 = !DILocation(line: 3266, column: 17, scope: !7049)
!7125 = !DILocation(line: 3266, column: 9, scope: !7049)
!7126 = !DILocation(line: 3266, column: 5, scope: !7049)
!7127 = !DILocation(line: 3267, column: 8, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7049, file: !1, line: 3267, column: 7)
!7129 = !DILocation(line: 3267, column: 7, scope: !7128)
!7130 = !DILocation(line: 3267, column: 10, scope: !7128)
!7131 = !DILocation(line: 3267, column: 7, scope: !7049)
!7132 = !DILocation(line: 3268, column: 9, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7128, file: !1, line: 3267, column: 16)
!7134 = !DILocation(line: 3268, column: 21, scope: !7133)
!7135 = !DILocation(line: 3268, column: 25, scope: !7133)
!7136 = !DILocation(line: 3268, column: 19, scope: !7133)
!7137 = !DILocation(line: 3268, column: 5, scope: !7133)
!7138 = !DILocation(line: 3268, column: 7, scope: !7133)
!7139 = !DILocation(line: 3269, column: 20, scope: !7133)
!7140 = !DILocation(line: 3269, column: 24, scope: !7133)
!7141 = !DILocation(line: 3269, column: 33, scope: !7133)
!7142 = !DILocation(line: 3269, column: 11, scope: !7133)
!7143 = !DILocation(line: 3269, column: 15, scope: !7133)
!7144 = !DILocation(line: 3269, column: 7, scope: !7133)
!7145 = !DILocation(line: 3270, column: 8, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7133, file: !1, line: 3270, column: 8)
!7147 = !DILocation(line: 3270, column: 12, scope: !7146)
!7148 = !DILocation(line: 3270, column: 24, scope: !7146)
!7149 = !DILocation(line: 3270, column: 28, scope: !7146)
!7150 = !DILocation(line: 3270, column: 22, scope: !7146)
!7151 = !DILocation(line: 3270, column: 8, scope: !7133)
!7152 = !DILocation(line: 3271, column: 5, scope: !7146)
!7153 = !DILocation(line: 3272, column: 4, scope: !7133)
!7154 = !DILocation(line: 3272, column: 8, scope: !7133)
!7155 = !DILocation(line: 3272, column: 13, scope: !7133)
!7156 = !DILocation(line: 3273, column: 4, scope: !7133)
!7157 = !DILocation(line: 3273, column: 8, scope: !7133)
!7158 = !DILocation(line: 3273, column: 14, scope: !7133)
!7159 = !DILocation(line: 3274, column: 3, scope: !7133)
!7160 = !DILocation(line: 3275, column: 9, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !1, line: 3275, column: 8)
!7162 = distinct !DILexicalBlock(scope: !7128, file: !1, line: 3274, column: 10)
!7163 = !DILocation(line: 3275, column: 8, scope: !7161)
!7164 = !DILocation(line: 3275, column: 13, scope: !7161)
!7165 = !DILocation(line: 3275, column: 11, scope: !7161)
!7166 = !DILocation(line: 3275, column: 23, scope: !7161)
!7167 = !DILocation(line: 3276, column: 9, scope: !7161)
!7168 = !DILocation(line: 3276, column: 8, scope: !7161)
!7169 = !DILocation(line: 3276, column: 15, scope: !7161)
!7170 = !DILocation(line: 3276, column: 27, scope: !7161)
!7171 = !DILocation(line: 3276, column: 31, scope: !7161)
!7172 = !DILocation(line: 3276, column: 25, scope: !7161)
!7173 = !DILocation(line: 3276, column: 11, scope: !7161)
!7174 = !DILocation(line: 3275, column: 8, scope: !7175)
!7175 = !DILexicalBlockFile(scope: !7162, file: !1, discriminator: 1)
!7176 = !DILocation(line: 3277, column: 5, scope: !7161)
!7177 = !DILocation(line: 3278, column: 21, scope: !7162)
!7178 = !DILocation(line: 3278, column: 20, scope: !7162)
!7179 = !DILocation(line: 3278, column: 25, scope: !7162)
!7180 = !DILocation(line: 3278, column: 23, scope: !7162)
!7181 = !DILocation(line: 3278, column: 11, scope: !7162)
!7182 = !DILocation(line: 3278, column: 15, scope: !7162)
!7183 = !DILocation(line: 3278, column: 7, scope: !7162)
!7184 = !DILocation(line: 3280, column: 3, scope: !7049)
!7185 = !DILocation(line: 3280, column: 10, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !7049, file: !1, discriminator: 1)
!7187 = !DILocation(line: 3280, column: 19, scope: !7186)
!7188 = !DILocation(line: 3280, column: 3, scope: !7186)
!7189 = !DILocation(line: 3281, column: 8, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !1, line: 3281, column: 8)
!7191 = distinct !DILexicalBlock(scope: !7049, file: !1, line: 3280, column: 24)
!7192 = !DILocation(line: 3281, column: 14, scope: !7190)
!7193 = !DILocation(line: 3281, column: 12, scope: !7190)
!7194 = !DILocation(line: 3281, column: 8, scope: !7191)
!7195 = !DILocation(line: 3282, column: 9, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !1, line: 3282, column: 9)
!7197 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 3281, column: 19)
!7198 = !DILocation(line: 3282, column: 13, scope: !7196)
!7199 = !DILocation(line: 3282, column: 20, scope: !7196)
!7200 = !DILocation(line: 3282, column: 18, scope: !7196)
!7201 = !DILocation(line: 3282, column: 9, scope: !7197)
!7202 = !DILocation(line: 3283, column: 17, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7196, file: !1, line: 3282, column: 31)
!7204 = !DILocation(line: 3283, column: 29, scope: !7203)
!7205 = !DILocation(line: 3283, column: 33, scope: !7203)
!7206 = !DILocation(line: 3283, column: 27, scope: !7203)
!7207 = !DILocation(line: 3283, column: 6, scope: !7203)
!7208 = !DILocation(line: 3283, column: 10, scope: !7203)
!7209 = !DILocation(line: 3283, column: 15, scope: !7203)
!7210 = !DILocation(line: 3284, column: 22, scope: !7203)
!7211 = !DILocation(line: 3284, column: 26, scope: !7203)
!7212 = !DILocation(line: 3284, column: 35, scope: !7203)
!7213 = !DILocation(line: 3284, column: 13, scope: !7203)
!7214 = !DILocation(line: 3284, column: 17, scope: !7203)
!7215 = !DILocation(line: 3284, column: 9, scope: !7203)
!7216 = !DILocation(line: 3285, column: 10, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7203, file: !1, line: 3285, column: 10)
!7218 = !DILocation(line: 3285, column: 14, scope: !7217)
!7219 = !DILocation(line: 3285, column: 26, scope: !7217)
!7220 = !DILocation(line: 3285, column: 30, scope: !7217)
!7221 = !DILocation(line: 3285, column: 24, scope: !7217)
!7222 = !DILocation(line: 3285, column: 10, scope: !7203)
!7223 = !DILocation(line: 3286, column: 7, scope: !7217)
!7224 = !DILocation(line: 3287, column: 6, scope: !7203)
!7225 = !DILocation(line: 3287, column: 10, scope: !7203)
!7226 = !DILocation(line: 3287, column: 15, scope: !7203)
!7227 = !DILocation(line: 3288, column: 6, scope: !7203)
!7228 = !DILocation(line: 3288, column: 10, scope: !7203)
!7229 = !DILocation(line: 3288, column: 16, scope: !7203)
!7230 = !DILocation(line: 3289, column: 5, scope: !7203)
!7231 = !DILocation(line: 3290, column: 22, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7196, file: !1, line: 3289, column: 12)
!7233 = !DILocation(line: 3290, column: 26, scope: !7232)
!7234 = !DILocation(line: 3290, column: 33, scope: !7232)
!7235 = !DILocation(line: 3290, column: 31, scope: !7232)
!7236 = !DILocation(line: 3290, column: 13, scope: !7232)
!7237 = !DILocation(line: 3290, column: 17, scope: !7232)
!7238 = !DILocation(line: 3290, column: 9, scope: !7232)
!7239 = !DILocation(line: 3292, column: 4, scope: !7197)
!7240 = !DILocation(line: 3293, column: 9, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !1, line: 3293, column: 9)
!7242 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 3292, column: 11)
!7243 = !DILocation(line: 3293, column: 13, scope: !7241)
!7244 = !DILocation(line: 3293, column: 21, scope: !7241)
!7245 = !DILocation(line: 3293, column: 19, scope: !7241)
!7246 = !DILocation(line: 3293, column: 9, scope: !7242)
!7247 = !DILocation(line: 3294, column: 18, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7241, file: !1, line: 3293, column: 32)
!7249 = !DILocation(line: 3294, column: 30, scope: !7248)
!7250 = !DILocation(line: 3294, column: 34, scope: !7248)
!7251 = !DILocation(line: 3294, column: 28, scope: !7248)
!7252 = !DILocation(line: 3294, column: 6, scope: !7248)
!7253 = !DILocation(line: 3294, column: 10, scope: !7248)
!7254 = !DILocation(line: 3294, column: 16, scope: !7248)
!7255 = !DILocation(line: 3295, column: 22, scope: !7248)
!7256 = !DILocation(line: 3295, column: 26, scope: !7248)
!7257 = !DILocation(line: 3295, column: 35, scope: !7248)
!7258 = !DILocation(line: 3295, column: 13, scope: !7248)
!7259 = !DILocation(line: 3295, column: 17, scope: !7248)
!7260 = !DILocation(line: 3295, column: 9, scope: !7248)
!7261 = !DILocation(line: 3296, column: 10, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7248, file: !1, line: 3296, column: 10)
!7263 = !DILocation(line: 3296, column: 14, scope: !7262)
!7264 = !DILocation(line: 3296, column: 26, scope: !7262)
!7265 = !DILocation(line: 3296, column: 30, scope: !7262)
!7266 = !DILocation(line: 3296, column: 24, scope: !7262)
!7267 = !DILocation(line: 3296, column: 10, scope: !7248)
!7268 = !DILocation(line: 3297, column: 7, scope: !7262)
!7269 = !DILocation(line: 3298, column: 6, scope: !7248)
!7270 = !DILocation(line: 3298, column: 10, scope: !7248)
!7271 = !DILocation(line: 3298, column: 15, scope: !7248)
!7272 = !DILocation(line: 3299, column: 6, scope: !7248)
!7273 = !DILocation(line: 3299, column: 10, scope: !7248)
!7274 = !DILocation(line: 3299, column: 16, scope: !7248)
!7275 = !DILocation(line: 3300, column: 5, scope: !7248)
!7276 = !DILocation(line: 3301, column: 22, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7241, file: !1, line: 3300, column: 12)
!7278 = !DILocation(line: 3301, column: 26, scope: !7277)
!7279 = !DILocation(line: 3301, column: 34, scope: !7277)
!7280 = !DILocation(line: 3301, column: 32, scope: !7277)
!7281 = !DILocation(line: 3301, column: 13, scope: !7277)
!7282 = !DILocation(line: 3301, column: 17, scope: !7277)
!7283 = !DILocation(line: 3301, column: 9, scope: !7277)
!7284 = !DILocation(line: 3304, column: 8, scope: !7191)
!7285 = !DILocation(line: 3280, column: 3, scope: !7286)
!7286 = !DILexicalBlockFile(scope: !7049, file: !1, discriminator: 2)
!7287 = !DILocation(line: 3306, column: 7, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7049, file: !1, line: 3306, column: 7)
!7289 = !DILocation(line: 3306, column: 13, scope: !7288)
!7290 = !DILocation(line: 3306, column: 11, scope: !7288)
!7291 = !DILocation(line: 3306, column: 7, scope: !7049)
!7292 = !DILocation(line: 3307, column: 8, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !1, line: 3307, column: 8)
!7294 = distinct !DILexicalBlock(scope: !7288, file: !1, line: 3306, column: 18)
!7295 = !DILocation(line: 3307, column: 12, scope: !7293)
!7296 = !DILocation(line: 3307, column: 17, scope: !7293)
!7297 = !DILocation(line: 3307, column: 8, scope: !7294)
!7298 = !DILocation(line: 3308, column: 5, scope: !7293)
!7299 = !DILocation(line: 3309, column: 25, scope: !7294)
!7300 = !DILocation(line: 3309, column: 15, scope: !7294)
!7301 = !DILocation(line: 3309, column: 4, scope: !7294)
!7302 = !DILocation(line: 3309, column: 8, scope: !7294)
!7303 = !DILocation(line: 3309, column: 13, scope: !7294)
!7304 = !DILocation(line: 3310, column: 3, scope: !7294)
!7305 = !DILocation(line: 3311, column: 8, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !1, line: 3311, column: 8)
!7307 = distinct !DILexicalBlock(scope: !7288, file: !1, line: 3310, column: 10)
!7308 = !DILocation(line: 3311, column: 12, scope: !7306)
!7309 = !DILocation(line: 3311, column: 18, scope: !7306)
!7310 = !DILocation(line: 3311, column: 8, scope: !7307)
!7311 = !DILocation(line: 3312, column: 5, scope: !7306)
!7312 = !DILocation(line: 3313, column: 26, scope: !7307)
!7313 = !DILocation(line: 3313, column: 16, scope: !7307)
!7314 = !DILocation(line: 3313, column: 4, scope: !7307)
!7315 = !DILocation(line: 3313, column: 8, scope: !7307)
!7316 = !DILocation(line: 3313, column: 14, scope: !7307)
!7317 = !DILocation(line: 3315, column: 2, scope: !7049)
!7318 = !DILocation(line: 3234, column: 30, scope: !7319)
!7319 = !DILexicalBlockFile(scope: !7044, file: !1, discriminator: 2)
!7320 = !DILocation(line: 3234, column: 2, scope: !7319)
!7321 = !DILocation(line: 3316, column: 2, scope: !595)
!7322 = !DILocation(line: 3317, column: 1, scope: !595)
!7323 = !DILocalVariable(name: "strm", arg: 1, scope: !598, file: !1, line: 3025, type: !572)
!7324 = !DILocation(line: 3025, column: 38, scope: !598)
!7325 = !DILocalVariable(name: "ds", scope: !598, file: !1, line: 3027, type: !444)
!7326 = !DILocation(line: 3027, column: 18, scope: !598)
!7327 = !DILocation(line: 3027, column: 23, scope: !598)
!7328 = !DILocation(line: 3027, column: 29, scope: !598)
!7329 = !DILocalVariable(name: "br", scope: !598, file: !1, line: 3028, type: !587)
!7330 = !DILocation(line: 3028, column: 17, scope: !598)
!7331 = !DILocation(line: 3028, column: 24, scope: !598)
!7332 = !DILocation(line: 3028, column: 28, scope: !598)
!7333 = !DILocalVariable(name: "i", scope: !598, file: !1, line: 3029, type: !23)
!7334 = !DILocation(line: 3029, column: 6, scope: !598)
!7335 = !DILocation(line: 3031, column: 6, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !598, file: !1, line: 3031, column: 6)
!7337 = !DILocation(line: 3031, column: 10, scope: !7336)
!7338 = !DILocation(line: 3031, column: 15, scope: !7336)
!7339 = !DILocation(line: 3031, column: 6, scope: !598)
!7340 = !DILocation(line: 3032, column: 10, scope: !7336)
!7341 = !DILocation(line: 3032, column: 14, scope: !7336)
!7342 = !DILocation(line: 3032, column: 17, scope: !7336)
!7343 = !DILocation(line: 3032, column: 3, scope: !7336)
!7344 = !DILocation(line: 3033, column: 11, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !598, file: !1, line: 3033, column: 2)
!7346 = !DILocation(line: 3033, column: 15, scope: !7345)
!7347 = !DILocation(line: 3033, column: 9, scope: !7345)
!7348 = !DILocation(line: 3033, column: 7, scope: !7345)
!7349 = !DILocation(line: 3033, column: 21, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !7351, file: !1, discriminator: 1)
!7351 = distinct !DILexicalBlock(scope: !7345, file: !1, line: 3033, column: 2)
!7352 = !DILocation(line: 3033, column: 25, scope: !7350)
!7353 = !DILocation(line: 3033, column: 29, scope: !7350)
!7354 = !DILocation(line: 3033, column: 32, scope: !7350)
!7355 = !DILocation(line: 3033, column: 23, scope: !7350)
!7356 = !DILocation(line: 3033, column: 2, scope: !7350)
!7357 = !DILocation(line: 3034, column: 8, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7359, file: !1, line: 3034, column: 7)
!7359 = distinct !DILexicalBlock(scope: !7351, file: !1, line: 3033, column: 47)
!7360 = !DILocation(line: 3034, column: 8, scope: !7361)
!7361 = !DILexicalBlockFile(scope: !7358, file: !1, discriminator: 1)
!7362 = !DILocation(line: 3034, column: 8, scope: !7363)
!7363 = !DILexicalBlockFile(scope: !7358, file: !1, discriminator: 2)
!7364 = !DILocation(line: 3034, column: 7, scope: !7363)
!7365 = !DILocation(line: 3035, column: 15, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7358, file: !1, line: 3034, column: 40)
!7367 = !DILocation(line: 3035, column: 4, scope: !7366)
!7368 = !DILocation(line: 3035, column: 8, scope: !7366)
!7369 = !DILocation(line: 3035, column: 13, scope: !7366)
!7370 = !DILocation(line: 3036, column: 4, scope: !7366)
!7371 = !DILocation(line: 3038, column: 22, scope: !7359)
!7372 = !DILocation(line: 3038, column: 17, scope: !7359)
!7373 = !DILocation(line: 3038, column: 3, scope: !7359)
!7374 = !DILocation(line: 3038, column: 7, scope: !7359)
!7375 = !DILocation(line: 3038, column: 10, scope: !7359)
!7376 = !DILocation(line: 3038, column: 20, scope: !7359)
!7377 = !DILocation(line: 3039, column: 29, scope: !7359)
!7378 = !DILocation(line: 3039, column: 15, scope: !7359)
!7379 = !DILocation(line: 3039, column: 19, scope: !7359)
!7380 = !DILocation(line: 3039, column: 22, scope: !7359)
!7381 = !DILocation(line: 3039, column: 3, scope: !7359)
!7382 = !DILocation(line: 3039, column: 7, scope: !7359)
!7383 = !DILocation(line: 3039, column: 10, scope: !7359)
!7384 = !DILocation(line: 3039, column: 32, scope: !7359)
!7385 = !DILocation(line: 3040, column: 3, scope: !7359)
!7386 = !DILocation(line: 3041, column: 2, scope: !7359)
!7387 = !DILocation(line: 3033, column: 43, scope: !7388)
!7388 = !DILexicalBlockFile(scope: !7351, file: !1, discriminator: 2)
!7389 = !DILocation(line: 3033, column: 2, scope: !7388)
!7390 = !DILocation(line: 3042, column: 13, scope: !598)
!7391 = !DILocation(line: 3042, column: 2, scope: !598)
!7392 = !DILocation(line: 3042, column: 6, scope: !598)
!7393 = !DILocation(line: 3042, column: 11, scope: !598)
!7394 = !DILocation(line: 3043, column: 2, scope: !598)
!7395 = !DILocation(line: 3044, column: 1, scope: !598)
!7396 = !DILocalVariable(name: "strm", arg: 1, scope: !601, file: !1, line: 3050, type: !572)
!7397 = !DILocation(line: 3050, column: 36, scope: !601)
!7398 = !DILocalVariable(name: "d", arg: 2, scope: !601, file: !1, line: 3050, type: !576)
!7399 = !DILocation(line: 3050, column: 58, scope: !601)
!7400 = !DILocalVariable(name: "end", arg: 3, scope: !601, file: !1, line: 3050, type: !23)
!7401 = !DILocation(line: 3050, column: 65, scope: !601)
!7402 = !DILocalVariable(name: "ds", scope: !601, file: !1, line: 3052, type: !444)
!7403 = !DILocation(line: 3052, column: 18, scope: !601)
!7404 = !DILocation(line: 3052, column: 23, scope: !601)
!7405 = !DILocation(line: 3052, column: 29, scope: !601)
!7406 = !DILocalVariable(name: "br", scope: !601, file: !1, line: 3053, type: !587)
!7407 = !DILocation(line: 3053, column: 17, scope: !601)
!7408 = !DILocation(line: 3053, column: 24, scope: !601)
!7409 = !DILocation(line: 3053, column: 28, scope: !601)
!7410 = !DILocalVariable(name: "c", scope: !601, file: !1, line: 3054, type: !23)
!7411 = !DILocation(line: 3054, column: 6, scope: !601)
!7412 = !DILocalVariable(name: "i", scope: !601, file: !1, line: 3054, type: !23)
!7413 = !DILocation(line: 3054, column: 9, scope: !601)
!7414 = !DILocalVariable(name: "j", scope: !601, file: !1, line: 3054, type: !23)
!7415 = !DILocation(line: 3054, column: 12, scope: !601)
!7416 = !DILocalVariable(name: "ret", scope: !601, file: !1, line: 3054, type: !23)
!7417 = !DILocation(line: 3054, column: 15, scope: !601)
!7418 = !DILocalVariable(name: "same", scope: !601, file: !1, line: 3054, type: !23)
!7419 = !DILocation(line: 3054, column: 20, scope: !601)
!7420 = !DILocalVariable(name: "rbits", scope: !601, file: !1, line: 3055, type: !13)
!7421 = !DILocation(line: 3055, column: 11, scope: !601)
!7422 = !DILocation(line: 3057, column: 6, scope: !601)
!7423 = !DILocation(line: 3057, column: 10, scope: !601)
!7424 = !DILocation(line: 3057, column: 4, scope: !601)
!7425 = !DILocation(line: 3058, column: 6, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !601, file: !1, line: 3058, column: 6)
!7427 = !DILocation(line: 3058, column: 8, scope: !7426)
!7428 = !DILocation(line: 3058, column: 6, scope: !601)
!7429 = !DILocation(line: 3059, column: 10, scope: !7426)
!7430 = !DILocation(line: 3059, column: 13, scope: !7426)
!7431 = !DILocation(line: 3059, column: 3, scope: !7426)
!7432 = !DILocation(line: 3060, column: 6, scope: !601)
!7433 = !DILocation(line: 3061, column: 6, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !601, file: !1, line: 3061, column: 6)
!7435 = !DILocation(line: 3061, column: 10, scope: !7434)
!7436 = !DILocation(line: 3061, column: 6, scope: !601)
!7437 = !DILocation(line: 3062, column: 9, scope: !7434)
!7438 = !DILocation(line: 3062, column: 12, scope: !7434)
!7439 = !DILocation(line: 3062, column: 7, scope: !7434)
!7440 = !DILocation(line: 3062, column: 3, scope: !7434)
!7441 = !DILocation(line: 3063, column: 2, scope: !601)
!7442 = !DILocation(line: 3063, column: 9, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !601, file: !1, discriminator: 1)
!7444 = !DILocation(line: 3063, column: 13, scope: !7443)
!7445 = !DILocation(line: 3063, column: 11, scope: !7443)
!7446 = !DILocation(line: 3063, column: 2, scope: !7443)
!7447 = !DILocation(line: 3064, column: 14, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !601, file: !1, line: 3063, column: 18)
!7449 = !DILocation(line: 3064, column: 3, scope: !7448)
!7450 = !DILocation(line: 3064, column: 7, scope: !7448)
!7451 = !DILocation(line: 3064, column: 12, scope: !7448)
!7452 = !DILocation(line: 3065, column: 8, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 3065, column: 7)
!7454 = !DILocation(line: 3065, column: 8, scope: !7455)
!7455 = !DILexicalBlockFile(scope: !7453, file: !1, discriminator: 1)
!7456 = !DILocation(line: 3065, column: 8, scope: !7457)
!7457 = !DILexicalBlockFile(scope: !7453, file: !1, discriminator: 2)
!7458 = !DILocation(line: 3065, column: 7, scope: !7457)
!7459 = !DILocation(line: 3066, column: 4, scope: !7453)
!7460 = !DILocation(line: 3067, column: 11, scope: !7448)
!7461 = !DILocation(line: 3067, column: 9, scope: !7448)
!7462 = !DILocation(line: 3068, column: 28, scope: !7448)
!7463 = !DILocation(line: 3068, column: 32, scope: !7448)
!7464 = !DILocation(line: 3068, column: 37, scope: !7448)
!7465 = !DILocation(line: 3068, column: 7, scope: !7448)
!7466 = !DILocation(line: 3068, column: 5, scope: !7448)
!7467 = !DILocation(line: 3069, column: 11, scope: !7448)
!7468 = !DILocation(line: 3069, column: 3, scope: !7448)
!7469 = !DILocation(line: 3071, column: 9, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3071, column: 8)
!7471 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 3069, column: 14)
!7472 = !DILocation(line: 3071, column: 9, scope: !7473)
!7473 = !DILexicalBlockFile(scope: !7470, file: !1, discriminator: 1)
!7474 = !DILocation(line: 3071, column: 9, scope: !7475)
!7475 = !DILexicalBlockFile(scope: !7470, file: !1, discriminator: 2)
!7476 = !DILocation(line: 3071, column: 8, scope: !7475)
!7477 = !DILocation(line: 3072, column: 5, scope: !7470)
!7478 = !DILocation(line: 3073, column: 4, scope: !7471)
!7479 = !DILocation(line: 3074, column: 11, scope: !7471)
!7480 = !DILocation(line: 3074, column: 30, scope: !7471)
!7481 = !DILocation(line: 3074, column: 9, scope: !7471)
!7482 = !DILocation(line: 3075, column: 8, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3075, column: 8)
!7484 = !DILocation(line: 3075, column: 12, scope: !7483)
!7485 = !DILocation(line: 3075, column: 10, scope: !7483)
!7486 = !DILocation(line: 3075, column: 19, scope: !7483)
!7487 = !DILocation(line: 3075, column: 17, scope: !7483)
!7488 = !DILocation(line: 3075, column: 8, scope: !7471)
!7489 = !DILocation(line: 3076, column: 5, scope: !7483)
!7490 = !DILocation(line: 3077, column: 4, scope: !7471)
!7491 = !DILocation(line: 3078, column: 11, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3078, column: 4)
!7493 = !DILocation(line: 3078, column: 9, scope: !7492)
!7494 = !DILocation(line: 3078, column: 16, scope: !7495)
!7495 = !DILexicalBlockFile(scope: !7496, file: !1, discriminator: 1)
!7496 = distinct !DILexicalBlock(scope: !7492, file: !1, line: 3078, column: 4)
!7497 = !DILocation(line: 3078, column: 20, scope: !7495)
!7498 = !DILocation(line: 3078, column: 18, scope: !7495)
!7499 = !DILocation(line: 3078, column: 4, scope: !7495)
!7500 = !DILocation(line: 3079, column: 16, scope: !7496)
!7501 = !DILocation(line: 3079, column: 5, scope: !7496)
!7502 = !DILocation(line: 3079, column: 8, scope: !7496)
!7503 = !DILocation(line: 3079, column: 20, scope: !7496)
!7504 = !DILocation(line: 3078, column: 27, scope: !7505)
!7505 = !DILexicalBlockFile(scope: !7496, file: !1, discriminator: 2)
!7506 = !DILocation(line: 3078, column: 4, scope: !7505)
!7507 = !DILocation(line: 3080, column: 4, scope: !7471)
!7508 = !DILocation(line: 3082, column: 9, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3082, column: 8)
!7510 = !DILocation(line: 3082, column: 9, scope: !7511)
!7511 = !DILexicalBlockFile(scope: !7509, file: !1, discriminator: 1)
!7512 = !DILocation(line: 3082, column: 9, scope: !7513)
!7513 = !DILexicalBlockFile(scope: !7509, file: !1, discriminator: 2)
!7514 = !DILocation(line: 3082, column: 8, scope: !7513)
!7515 = !DILocation(line: 3083, column: 5, scope: !7509)
!7516 = !DILocation(line: 3084, column: 4, scope: !7471)
!7517 = !DILocation(line: 3085, column: 11, scope: !7471)
!7518 = !DILocation(line: 3085, column: 30, scope: !7471)
!7519 = !DILocation(line: 3085, column: 9, scope: !7471)
!7520 = !DILocation(line: 3086, column: 8, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3086, column: 8)
!7522 = !DILocation(line: 3086, column: 12, scope: !7521)
!7523 = !DILocation(line: 3086, column: 10, scope: !7521)
!7524 = !DILocation(line: 3086, column: 19, scope: !7521)
!7525 = !DILocation(line: 3086, column: 17, scope: !7521)
!7526 = !DILocation(line: 3086, column: 8, scope: !7471)
!7527 = !DILocation(line: 3087, column: 5, scope: !7521)
!7528 = !DILocation(line: 3088, column: 4, scope: !7471)
!7529 = !DILocation(line: 3089, column: 11, scope: !7471)
!7530 = !DILocation(line: 3089, column: 14, scope: !7471)
!7531 = !DILocation(line: 3089, column: 23, scope: !7471)
!7532 = !DILocation(line: 3089, column: 21, scope: !7471)
!7533 = !DILocation(line: 3089, column: 29, scope: !7471)
!7534 = !DILocation(line: 3089, column: 4, scope: !7471)
!7535 = !DILocation(line: 3090, column: 9, scope: !7471)
!7536 = !DILocation(line: 3090, column: 6, scope: !7471)
!7537 = !DILocation(line: 3091, column: 4, scope: !7471)
!7538 = !DILocation(line: 3093, column: 9, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3093, column: 8)
!7540 = !DILocation(line: 3093, column: 9, scope: !7541)
!7541 = !DILexicalBlockFile(scope: !7539, file: !1, discriminator: 1)
!7542 = !DILocation(line: 3093, column: 9, scope: !7543)
!7543 = !DILexicalBlockFile(scope: !7539, file: !1, discriminator: 2)
!7544 = !DILocation(line: 3093, column: 8, scope: !7543)
!7545 = !DILocation(line: 3095, column: 5, scope: !7539)
!7546 = !DILocation(line: 3096, column: 4, scope: !7471)
!7547 = !DILocation(line: 3097, column: 11, scope: !7471)
!7548 = !DILocation(line: 3097, column: 30, scope: !7471)
!7549 = !DILocation(line: 3097, column: 9, scope: !7471)
!7550 = !DILocation(line: 3098, column: 8, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3098, column: 8)
!7552 = !DILocation(line: 3098, column: 12, scope: !7551)
!7553 = !DILocation(line: 3098, column: 10, scope: !7551)
!7554 = !DILocation(line: 3098, column: 19, scope: !7551)
!7555 = !DILocation(line: 3098, column: 17, scope: !7551)
!7556 = !DILocation(line: 3098, column: 8, scope: !7471)
!7557 = !DILocation(line: 3099, column: 5, scope: !7551)
!7558 = !DILocation(line: 3100, column: 4, scope: !7471)
!7559 = !DILocation(line: 3101, column: 12, scope: !7471)
!7560 = !DILocation(line: 3101, column: 10, scope: !7471)
!7561 = !DILocation(line: 3102, column: 29, scope: !7471)
!7562 = !DILocation(line: 3102, column: 33, scope: !7471)
!7563 = !DILocation(line: 3102, column: 38, scope: !7471)
!7564 = !DILocation(line: 3102, column: 8, scope: !7471)
!7565 = !DILocation(line: 3102, column: 6, scope: !7471)
!7566 = !DILocation(line: 3103, column: 4, scope: !7471)
!7567 = !DILocation(line: 3104, column: 19, scope: !7471)
!7568 = !DILocation(line: 3104, column: 9, scope: !7471)
!7569 = !DILocation(line: 3104, column: 12, scope: !7471)
!7570 = !DILocation(line: 3104, column: 24, scope: !7471)
!7571 = !DILocation(line: 3104, column: 22, scope: !7471)
!7572 = !DILocation(line: 3104, column: 26, scope: !7471)
!7573 = !DILocation(line: 3104, column: 32, scope: !7471)
!7574 = !DILocation(line: 3104, column: 6, scope: !7471)
!7575 = !DILocation(line: 3105, column: 8, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3105, column: 8)
!7577 = !DILocation(line: 3105, column: 10, scope: !7576)
!7578 = !DILocation(line: 3105, column: 8, scope: !7471)
!7579 = !DILocation(line: 3106, column: 5, scope: !7576)
!7580 = !DILocation(line: 3107, column: 11, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3107, column: 4)
!7582 = !DILocation(line: 3107, column: 9, scope: !7581)
!7583 = !DILocation(line: 3107, column: 16, scope: !7584)
!7584 = !DILexicalBlockFile(scope: !7585, file: !1, discriminator: 1)
!7585 = distinct !DILexicalBlock(scope: !7581, file: !1, line: 3107, column: 4)
!7586 = !DILocation(line: 3107, column: 20, scope: !7584)
!7587 = !DILocation(line: 3107, column: 18, scope: !7584)
!7588 = !DILocation(line: 3107, column: 4, scope: !7584)
!7589 = !DILocation(line: 3108, column: 22, scope: !7585)
!7590 = !DILocation(line: 3108, column: 16, scope: !7585)
!7591 = !DILocation(line: 3108, column: 5, scope: !7585)
!7592 = !DILocation(line: 3108, column: 8, scope: !7585)
!7593 = !DILocation(line: 3108, column: 20, scope: !7585)
!7594 = !DILocation(line: 3107, column: 27, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !7585, file: !1, discriminator: 2)
!7596 = !DILocation(line: 3107, column: 4, scope: !7595)
!7597 = !DILocation(line: 3109, column: 18, scope: !7471)
!7598 = !DILocation(line: 3109, column: 12, scope: !7471)
!7599 = !DILocation(line: 3109, column: 4, scope: !7471)
!7600 = !DILocation(line: 3109, column: 7, scope: !7471)
!7601 = !DILocation(line: 3109, column: 15, scope: !7471)
!7602 = !DILocation(line: 3110, column: 4, scope: !7471)
!7603 = !DILocation(line: 3112, column: 4, scope: !7471)
!7604 = !DILocation(line: 3113, column: 19, scope: !7471)
!7605 = !DILocation(line: 3113, column: 9, scope: !7471)
!7606 = !DILocation(line: 3113, column: 12, scope: !7471)
!7607 = !DILocation(line: 3113, column: 24, scope: !7471)
!7608 = !DILocation(line: 3113, column: 22, scope: !7471)
!7609 = !DILocation(line: 3113, column: 26, scope: !7471)
!7610 = !DILocation(line: 3113, column: 32, scope: !7471)
!7611 = !DILocation(line: 3113, column: 6, scope: !7471)
!7612 = !DILocation(line: 3114, column: 8, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 3114, column: 8)
!7614 = !DILocation(line: 3114, column: 10, scope: !7613)
!7615 = !DILocation(line: 3114, column: 8, scope: !7471)
!7616 = !DILocation(line: 3115, column: 5, scope: !7613)
!7617 = !DILocation(line: 3116, column: 12, scope: !7471)
!7618 = !DILocation(line: 3116, column: 4, scope: !7471)
!7619 = !DILocation(line: 3116, column: 7, scope: !7471)
!7620 = !DILocation(line: 3116, column: 14, scope: !7471)
!7621 = !DILocation(line: 3117, column: 21, scope: !7471)
!7622 = !DILocation(line: 3117, column: 15, scope: !7471)
!7623 = !DILocation(line: 3117, column: 4, scope: !7471)
!7624 = !DILocation(line: 3117, column: 7, scope: !7471)
!7625 = !DILocation(line: 3117, column: 19, scope: !7471)
!7626 = !DILocation(line: 3118, column: 4, scope: !7471)
!7627 = !DILocation(line: 3063, column: 2, scope: !7628)
!7628 = !DILexicalBlockFile(scope: !601, file: !1, discriminator: 2)
!7629 = !DILocation(line: 3121, column: 6, scope: !601)
!7630 = !DILocation(line: 3121, column: 2, scope: !601)
!7631 = !DILocation(line: 3123, column: 13, scope: !601)
!7632 = !DILocation(line: 3123, column: 2, scope: !601)
!7633 = !DILocation(line: 3123, column: 6, scope: !601)
!7634 = !DILocation(line: 3123, column: 11, scope: !601)
!7635 = !DILocation(line: 3124, column: 10, scope: !601)
!7636 = !DILocation(line: 3124, column: 2, scope: !601)
!7637 = !DILocation(line: 3125, column: 1, scope: !601)
!7638 = !DILocalVariable(name: "hf", arg: 1, scope: !604, file: !1, line: 3340, type: !576)
!7639 = !DILocation(line: 3340, column: 36, scope: !604)
!7640 = !DILocalVariable(name: "rbits", arg: 2, scope: !604, file: !1, line: 3340, type: !13)
!7641 = !DILocation(line: 3340, column: 49, scope: !604)
!7642 = !DILocalVariable(name: "c", scope: !604, file: !1, line: 3342, type: !23)
!7643 = !DILocation(line: 3342, column: 6, scope: !604)
!7644 = !DILocation(line: 3347, column: 14, scope: !604)
!7645 = !DILocation(line: 3347, column: 23, scope: !604)
!7646 = !DILocation(line: 3347, column: 27, scope: !604)
!7647 = !DILocation(line: 3347, column: 20, scope: !604)
!7648 = !DILocation(line: 3347, column: 6, scope: !604)
!7649 = !DILocation(line: 3347, column: 10, scope: !604)
!7650 = !DILocation(line: 3347, column: 4, scope: !604)
!7651 = !DILocation(line: 3348, column: 6, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !604, file: !1, line: 3348, column: 6)
!7653 = !DILocation(line: 3348, column: 10, scope: !7652)
!7654 = !DILocation(line: 3348, column: 14, scope: !7652)
!7655 = !DILocation(line: 3348, column: 8, scope: !7652)
!7656 = !DILocation(line: 3348, column: 6, scope: !604)
!7657 = !DILocation(line: 3349, column: 11, scope: !7652)
!7658 = !DILocation(line: 3349, column: 3, scope: !7652)
!7659 = !DILocation(line: 3351, column: 34, scope: !604)
!7660 = !DILocation(line: 3351, column: 38, scope: !604)
!7661 = !DILocation(line: 3351, column: 45, scope: !604)
!7662 = !DILocation(line: 3351, column: 10, scope: !604)
!7663 = !DILocation(line: 3351, column: 2, scope: !604)
!7664 = !DILocation(line: 3352, column: 1, scope: !604)
!7665 = !DILocalVariable(name: "hf", arg: 1, scope: !607, file: !1, line: 3320, type: !576)
!7666 = !DILocation(line: 3320, column: 41, scope: !607)
!7667 = !DILocalVariable(name: "rbits", arg: 2, scope: !607, file: !1, line: 3320, type: !13)
!7668 = !DILocation(line: 3320, column: 54, scope: !607)
!7669 = !DILocalVariable(name: "c", arg: 3, scope: !607, file: !1, line: 3320, type: !23)
!7670 = !DILocation(line: 3320, column: 65, scope: !607)
!7671 = !DILocalVariable(name: "ht", scope: !607, file: !1, line: 3322, type: !498)
!7672 = !DILocation(line: 3322, column: 18, scope: !607)
!7673 = !DILocalVariable(name: "extlen", scope: !607, file: !1, line: 3323, type: !23)
!7674 = !DILocation(line: 3323, column: 6, scope: !607)
!7675 = !DILocation(line: 3325, column: 7, scope: !607)
!7676 = !DILocation(line: 3325, column: 11, scope: !607)
!7677 = !DILocation(line: 3325, column: 5, scope: !607)
!7678 = !DILocation(line: 3326, column: 11, scope: !607)
!7679 = !DILocation(line: 3326, column: 15, scope: !607)
!7680 = !DILocation(line: 3326, column: 9, scope: !607)
!7681 = !DILocation(line: 3327, column: 2, scope: !607)
!7682 = !DILocation(line: 3327, column: 9, scope: !7683)
!7683 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 1)
!7684 = !DILocation(line: 3327, column: 14, scope: !7683)
!7685 = !DILocation(line: 3327, column: 18, scope: !7683)
!7686 = !DILocation(line: 3327, column: 11, scope: !7683)
!7687 = !DILocation(line: 3327, column: 2, scope: !7683)
!7688 = !DILocation(line: 3328, column: 8, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !607, file: !1, line: 3327, column: 28)
!7690 = !DILocation(line: 3328, column: 12, scope: !7689)
!7691 = !DILocation(line: 3328, column: 5, scope: !7689)
!7692 = !DILocation(line: 3329, column: 13, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7689, file: !1, line: 3329, column: 7)
!7694 = !DILocation(line: 3329, column: 16, scope: !7693)
!7695 = !DILocation(line: 3329, column: 21, scope: !7693)
!7696 = !DILocation(line: 3329, column: 24, scope: !7697)
!7697 = !DILexicalBlockFile(scope: !7693, file: !1, discriminator: 1)
!7698 = !DILocation(line: 3329, column: 29, scope: !7697)
!7699 = !DILocation(line: 3329, column: 33, scope: !7697)
!7700 = !DILocation(line: 3329, column: 26, scope: !7697)
!7701 = !DILocation(line: 3329, column: 7, scope: !7697)
!7702 = !DILocation(line: 3330, column: 4, scope: !7693)
!7703 = !DILocation(line: 3331, column: 7, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7689, file: !1, line: 3331, column: 7)
!7705 = !DILocation(line: 3331, column: 22, scope: !7704)
!7706 = !DILocation(line: 3331, column: 19, scope: !7704)
!7707 = !DILocation(line: 3331, column: 13, scope: !7704)
!7708 = !DILocation(line: 3331, column: 7, scope: !7689)
!7709 = !DILocation(line: 3332, column: 11, scope: !7704)
!7710 = !DILocation(line: 3332, column: 8, scope: !7704)
!7711 = !DILocation(line: 3332, column: 14, scope: !7704)
!7712 = !DILocation(line: 3332, column: 6, scope: !7704)
!7713 = !DILocation(line: 3332, column: 4, scope: !7704)
!7714 = !DILocation(line: 3334, column: 11, scope: !7704)
!7715 = !DILocation(line: 3334, column: 8, scope: !7704)
!7716 = !DILocation(line: 3334, column: 14, scope: !7704)
!7717 = !DILocation(line: 3334, column: 6, scope: !7704)
!7718 = !DILocation(line: 3327, column: 2, scope: !7719)
!7719 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 2)
!7720 = !DILocation(line: 3336, column: 10, scope: !607)
!7721 = !DILocation(line: 3336, column: 2, scope: !607)
!7722 = !DILocation(line: 3337, column: 1, scope: !607)
!7723 = !DILocalVariable(name: "pp", arg: 1, scope: !614, file: !526, line: 177, type: !123)
!7724 = !DILocation(line: 177, column: 23, scope: !614)
!7725 = !DILocalVariable(name: "u", arg: 2, scope: !614, file: !526, line: 177, type: !305)
!7726 = !DILocation(line: 177, column: 36, scope: !614)
!7727 = !DILocalVariable(name: "p", scope: !614, file: !526, line: 179, type: !325)
!7728 = !DILocation(line: 179, column: 17, scope: !614)
!7729 = !DILocation(line: 179, column: 38, scope: !614)
!7730 = !DILocation(line: 181, column: 9, scope: !614)
!7731 = !DILocation(line: 181, column: 11, scope: !614)
!7732 = !DILocation(line: 181, column: 2, scope: !614)
!7733 = !DILocation(line: 181, column: 7, scope: !614)
!7734 = !DILocation(line: 182, column: 10, scope: !614)
!7735 = !DILocation(line: 182, column: 12, scope: !614)
!7736 = !DILocation(line: 182, column: 18, scope: !614)
!7737 = !DILocation(line: 182, column: 9, scope: !614)
!7738 = !DILocation(line: 182, column: 2, scope: !614)
!7739 = !DILocation(line: 182, column: 7, scope: !614)
!7740 = !DILocation(line: 183, column: 10, scope: !614)
!7741 = !DILocation(line: 183, column: 12, scope: !614)
!7742 = !DILocation(line: 183, column: 19, scope: !614)
!7743 = !DILocation(line: 183, column: 9, scope: !614)
!7744 = !DILocation(line: 183, column: 2, scope: !614)
!7745 = !DILocation(line: 183, column: 7, scope: !614)
!7746 = !DILocation(line: 184, column: 10, scope: !614)
!7747 = !DILocation(line: 184, column: 12, scope: !614)
!7748 = !DILocation(line: 184, column: 19, scope: !614)
!7749 = !DILocation(line: 184, column: 9, scope: !614)
!7750 = !DILocation(line: 184, column: 2, scope: !614)
!7751 = !DILocation(line: 184, column: 7, scope: !614)
!7752 = !DILocation(line: 185, column: 1, scope: !614)
!7753 = !DILocalVariable(name: "strm", arg: 1, scope: !620, file: !1, line: 2177, type: !572)
!7754 = !DILocation(line: 2177, column: 36, scope: !620)
!7755 = !DILocation(line: 2180, column: 6, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !620, file: !1, line: 2180, column: 6)
!7757 = !DILocation(line: 2180, column: 12, scope: !7756)
!7758 = !DILocation(line: 2180, column: 15, scope: !7756)
!7759 = !DILocation(line: 2180, column: 6, scope: !620)
!7760 = !DILocation(line: 2181, column: 3, scope: !7756)
!7761 = !DILocation(line: 2182, column: 7, scope: !620)
!7762 = !DILocation(line: 2182, column: 13, scope: !620)
!7763 = !DILocation(line: 2182, column: 17, scope: !620)
!7764 = !DILocation(line: 2182, column: 2, scope: !620)
!7765 = !DILocation(line: 2183, column: 7, scope: !620)
!7766 = !DILocation(line: 2183, column: 13, scope: !620)
!7767 = !DILocation(line: 2183, column: 17, scope: !620)
!7768 = !DILocation(line: 2183, column: 2, scope: !620)
!7769 = !DILocation(line: 2184, column: 21, scope: !620)
!7770 = !DILocation(line: 2184, column: 27, scope: !620)
!7771 = !DILocation(line: 2184, column: 31, scope: !620)
!7772 = !DILocation(line: 2184, column: 2, scope: !620)
!7773 = !DILocation(line: 2185, column: 21, scope: !620)
!7774 = !DILocation(line: 2185, column: 27, scope: !620)
!7775 = !DILocation(line: 2185, column: 31, scope: !620)
!7776 = !DILocation(line: 2185, column: 2, scope: !620)
!7777 = !DILocation(line: 2186, column: 21, scope: !620)
!7778 = !DILocation(line: 2186, column: 27, scope: !620)
!7779 = !DILocation(line: 2186, column: 31, scope: !620)
!7780 = !DILocation(line: 2186, column: 2, scope: !620)
!7781 = !DILocation(line: 2187, column: 21, scope: !620)
!7782 = !DILocation(line: 2187, column: 27, scope: !620)
!7783 = !DILocation(line: 2187, column: 31, scope: !620)
!7784 = !DILocation(line: 2187, column: 2, scope: !620)
!7785 = !DILocation(line: 2188, column: 7, scope: !620)
!7786 = !DILocation(line: 2188, column: 13, scope: !620)
!7787 = !DILocation(line: 2188, column: 2, scope: !620)
!7788 = !DILocation(line: 2189, column: 2, scope: !620)
!7789 = !DILocation(line: 2189, column: 8, scope: !620)
!7790 = !DILocation(line: 2189, column: 11, scope: !620)
!7791 = !DILocation(line: 2190, column: 1, scope: !620)
!7792 = !DILocation(line: 2190, column: 1, scope: !7793)
!7793 = !DILexicalBlockFile(scope: !620, file: !1, discriminator: 1)

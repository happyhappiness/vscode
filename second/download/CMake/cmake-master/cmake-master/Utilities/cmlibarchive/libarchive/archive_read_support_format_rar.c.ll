; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.IPpmd7 = type { void (%struct.CPpmd7*)*, i32 (%struct.CPpmd7*, i32, %struct.ISzAlloc*)*, void (%struct.CPpmd7*, %struct.ISzAlloc*)*, void (%struct.CPpmd7*, i32)*, void (%struct.CPpmd7z_RangeDec*)*, void (%struct.CPpmd7z_RangeDec*)*, i32 (%struct.CPpmd7z_RangeDec*)*, i32 (%struct.CPpmd7z_RangeDec*)*, i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)*, void (%struct.CPpmd7z_RangeEnc*)*, void (%struct.CPpmd7z_RangeEnc*)*, void (%struct.CPpmd7*, %struct.CPpmd7z_RangeEnc*, i32)* }
%struct.CPpmd7 = type { %struct.CPpmd7_Context_*, %struct.CPpmd7_Context_*, %struct.CPpmd_State*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i32, [38 x i8], [128 x i8], [38 x i32], [256 x i8], [256 x i8], [256 x i8], %struct.CPpmd_See, [25 x [16 x %struct.CPpmd_See]], [128 x [64 x i16]] }
%struct.CPpmd7_Context_ = type { i16, i16, i32, i32 }
%struct.CPpmd_State = type { i8, i8, i16, i16 }
%struct.CPpmd_See = type { i16, i8, i8 }
%struct.ISzAlloc = type { i8* (i8*, i64)*, void (i8*, i8*)* }
%struct.CPpmd7z_RangeDec = type { %struct.IPpmd7_RangeDec, i32, i32, i32, i32, %struct.IByteIn* }
%struct.IPpmd7_RangeDec = type { i32 (i8*, i32)*, void (i8*, i32, i32)*, i32 (i8*, i32)* }
%struct.IByteIn = type { %struct.archive_read*, i8 (i8*)* }
%struct.archive_read = type { %struct.archive, %struct.archive_entry*, i32, i64, i64, %struct.archive_read_client, [16 x %struct.archive_read_filter_bidder], %struct.archive_read_filter*, i32, i64, i32, i32, [16 x %struct.archive_format_descriptor], %struct.archive_format_descriptor*, %struct.archive_read_extract*, i32 (%struct.archive_read*)*, %struct.anon }
%struct.archive = type { i32, i32, %struct.archive_vtable*, i32, i8*, i32, i8*, i32, i32, i8*, %struct.archive_string, i8*, i32, i32, %struct.archive_string_conv*, i8*, i64, i64, i64, i8, i64 }
%struct.archive_vtable = type { {}*, {}*, i32 (%struct.archive*, %struct.archive_entry*)*, {}*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i64)*, i32 (%struct.archive*, %struct.archive_entry**)*, i32 (%struct.archive*, %struct.archive_entry*)*, i32 (%struct.archive*, i8**, i64*, i64*)*, {}*, i64 (%struct.archive*, i32)*, i32 (%struct.archive*, i32)*, i8* (%struct.archive*, i32)* }
%struct.archive_string = type { i8*, i64, i64 }
%struct.archive_string_conv = type opaque
%struct.archive_entry = type opaque
%struct.archive_read_client = type { i32 (%struct.archive*, i8*)*, i64 (%struct.archive*, i8*, i8**)*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i32)*, i32 (%struct.archive*, i8*)*, i32 (%struct.archive*, i8*, i8*)*, i32, i32, i64, %struct.archive_read_data_node* }
%struct.archive_read_data_node = type { i64, i64, i8* }
%struct.archive_read_filter_bidder = type { i8*, i8*, i32 (%struct.archive_read_filter_bidder*, %struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter_bidder*, i8*, i8*)*, i32 (%struct.archive_read_filter_bidder*)* }
%struct.archive_read_filter = type { i64, %struct.archive_read_filter_bidder*, %struct.archive_read_filter*, %struct.archive_read*, i32 (%struct.archive_read_filter*)*, i64 (%struct.archive_read_filter*, i8**)*, i64 (%struct.archive_read_filter*, i64)*, i64 (%struct.archive_read_filter*, i64, i32)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*, i32)*, i8*, i8*, i32, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8, i8, i8 }
%struct.archive_format_descriptor = type { i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)* }
%struct.archive_read_extract = type { %struct.archive*, void (i8*)*, i8* }
%struct.anon = type { %struct.archive_read_passphrase*, %struct.archive_read_passphrase**, i32, i8* (%struct.archive*, i8*)*, i8* }
%struct.archive_read_passphrase = type { i8*, %struct.archive_read_passphrase* }
%struct.CPpmd7z_RangeEnc = type { i64, i32, i8, i64, %struct.IByteOut* }
%struct.IByteOut = type { %struct.archive_write*, void (i8*, i8)* }
%struct.archive_write = type opaque
%struct.rar = type { i32, i64, [2 x i8], [4 x i8], i8, i8, i32, i64, i64, i64, i64, i32, i8*, i8*, i64, i64, [8 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i32, i32, i8*, i32, i8, i8, i64, i32, i8, %struct.data_block_offsets*, i32, i32, %struct.huffman_code, %struct.huffman_code, %struct.huffman_code, %struct.huffman_code, [404 x i8], %struct.lzss, i8, i32, i32, [4 x i32], i32, i32, i64, i8, i8, i8, i8, i32, %struct.CPpmd7, %struct.CPpmd7z_RangeDec, %struct.IByteIn, i32, %struct.archive_string_conv*, %struct.archive_string_conv*, %struct.archive_string_conv*, %struct.archive_string_conv*, %struct.rar_br, i32 }
%struct.data_block_offsets = type { i64, i64, i64 }
%struct.huffman_code = type { %struct.huffman_tree_node*, i32, i32, i32, i32, i32, %struct.huffman_table_entry* }
%struct.huffman_tree_node = type { [2 x i32] }
%struct.huffman_table_entry = type { i32, i32 }
%struct.lzss = type { i8*, i32, i64 }
%struct.rar_br = type { i64, i32, i64, i8* }
%struct.rar_header = type { [2 x i8], i8, [2 x i8], [2 x i8] }
%struct.rar_file_header = type { [4 x i8], [4 x i8], i8, [4 x i8], [4 x i8], i8, i8, [2 x i8], [4 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [32 x i8] c"archive_read_support_format_rar\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Can't allocate rar data\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"rar\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Rar!\1A\07\00\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"\7FELF\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"hdrcharset\00", align 1
@.str.6 = private unnamed_addr constant [50 x i8] c"rar: hdrcharset option needs a character-set name\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"RAR\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"Invalid marker header\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"Invalid header size\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"RAR encryption support unavailable.\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"Header CRC error\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"Invalid header size too small\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"Bad RAR file\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"Couldn't find out RAR header\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"RAR solid archive support unavailable.\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"Invalid sizes specified.\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Invalid filename size\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"Couldn't allocate memory.\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"Invalid filename\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"UTF-16BE\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"\00\5C\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.24 = private unnamed_addr constant [48 x i8] c"Unknown file attributes from RAR file's host OS\00", align 1
@__archive_ppmd7_functions = external constant %struct.IPpmd7, align 8
@g_szalloc = internal global %struct.ISzAlloc { i8* (i8*, i64)* @ppmd_alloc, void (i8*, i8*)* @ppmd_free }, align 8
@.str.25 = private unnamed_addr constant [35 x i8] c"Can't allocate memory for Pathname\00", align 1
@.str.26 = private unnamed_addr constant [56 x i8] c"Pathname cannot be converted from %s to current locale.\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"Can't allocate memory for link\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"link cannot be converted from %s to current locale.\00", align 1
@.str.29 = private unnamed_addr constant [45 x i8] c"Unsupported compression method for RAR file.\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"File CRC error\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"Truncated RAR file data\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"Invalid symbol\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"Parsing filters is unsupported.\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"Internal error extracting RAR file\00", align 1
@.str.35 = private unnamed_addr constant [49 x i8] c"Unable to allocate memory for uncompressed data.\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"Bad RAR file data\00", align 1
@cache_masks = internal constant [36 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255, i32 511, i32 1023, i32 2047, i32 4095, i32 8191, i32 16383, i32 32767, i32 65535, i32 131071, i32 262143, i32 524287, i32 1048575, i32 2097151, i32 4194303, i32 8388607, i32 16777215, i32 33554431, i32 67108863, i32 134217727, i32 268435455, i32 536870911, i32 1073741823, i32 2147483647, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@.str.37 = private unnamed_addr constant [29 x i8] c"Invalid zero dictionary size\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@.str.39 = private unnamed_addr constant [40 x i8] c"Unable to initialize PPMd range decoder\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Invalid PPMd sequence\00", align 1
@.str.41 = private unnamed_addr constant [36 x i8] c"Internal error extracting RAR file.\00", align 1
@.str.42 = private unnamed_addr constant [41 x i8] c"Unable to allocate memory for node data.\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"Invalid repeat position\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"Prefix found\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"Invalid repeating code\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"Invalid prefix code in bitstream\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"Huffman tree was not created.\00", align 1
@.str.48 = private unnamed_addr constant [44 x i8] c"Invalid location to Huffman tree specified.\00", align 1
@expand.lengthbases = internal constant [28 x i8] c"\00\01\02\03\04\05\06\07\08\0A\0C\0E\10\14\18\1C (08@P`p\80\A0\C0\E0", align 16
@expand.lengthbits = internal constant [28 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\05\05\05\05", align 16
@expand.offsetbases = internal constant [60 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 12, i32 16, i32 24, i32 32, i32 48, i32 64, i32 96, i32 128, i32 192, i32 256, i32 384, i32 512, i32 768, i32 1024, i32 1536, i32 2048, i32 3072, i32 4096, i32 6144, i32 8192, i32 12288, i32 16384, i32 24576, i32 32768, i32 49152, i32 65536, i32 98304, i32 131072, i32 196608, i32 262144, i32 327680, i32 393216, i32 458752, i32 524288, i32 589824, i32 655360, i32 720896, i32 786432, i32 851968, i32 917504, i32 983040, i32 1048576, i32 1310720, i32 1572864, i32 1835008, i32 2097152, i32 2359296, i32 2621440, i32 2883584, i32 3145728, i32 3407872, i32 3670016, i32 3932160], align 16
@expand.offsetbits = internal constant [60 x i8] c"\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\10\10\10\10\10\10\10\10\10\10\10\10\12\12\12\12\12\12\12\12\12\12\12\12", align 16
@expand.shortbases = internal constant [8 x i8] c"\00\04\08\10 @\80\C0", align 1
@expand.shortbits = internal constant [8 x i8] c"\02\02\03\04\05\06\06\06", align 1
@.str.49 = private unnamed_addr constant [49 x i8] c"Attempt to seek past beginning of RAR data block\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"Error during seek of RAR file\00", align 1
@.str.51 = private unnamed_addr constant [47 x i8] c"Seeking of compressed RAR files is unsupported\00", align 1

; Function Attrs: nounwind uwtable
define i32 @archive_read_support_format_rar(%struct.archive* %_a) #0 !dbg !536 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive*, align 8
  %a = alloca %struct.archive_read*, align 8
  %rar = alloca %struct.rar*, align 8
  %r = alloca i32, align 4
  %magic_test = alloca i32, align 4
  store %struct.archive* %_a, %struct.archive** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive** %_a.addr, metadata !676, metadata !677), !dbg !678
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a, metadata !679, metadata !677), !dbg !680
  %0 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !681
  %1 = bitcast %struct.archive* %0 to %struct.archive_read*, !dbg !682
  store %struct.archive_read* %1, %struct.archive_read** %a, align 8, !dbg !680
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !683, metadata !677), !dbg !684
  call void @llvm.dbg.declare(metadata i32* %r, metadata !685, metadata !677), !dbg !686
  br label %do.body, !dbg !687

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %magic_test, metadata !688, metadata !677), !dbg !690
  %2 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !691
  %call = call i32 @__archive_check_magic(%struct.archive* %2, i32 14594245, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0)), !dbg !691
  store i32 %call, i32* %magic_test, align 4, !dbg !691
  %3 = load i32, i32* %magic_test, align 4, !dbg !691
  %cmp = icmp eq i32 %3, -30, !dbg !691
  br i1 %cmp, label %if.then, label %if.end, !dbg !691

if.then:                                          ; preds = %do.body
  store i32 -30, i32* %retval, align 4, !dbg !693
  br label %return, !dbg !693

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !696

do.end:                                           ; preds = %if.end
  %call1 = call noalias i8* @calloc(i64 20248, i64 1) #8, !dbg !698
  %4 = bitcast i8* %call1 to %struct.rar*, !dbg !699
  store %struct.rar* %4, %struct.rar** %rar, align 8, !dbg !700
  %5 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !701
  %cmp2 = icmp eq %struct.rar* %5, null, !dbg !703
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !704

if.then3:                                         ; preds = %do.end
  %6 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !705
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 0, !dbg !707
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !708
  store i32 -30, i32* %retval, align 4, !dbg !709
  br label %return, !dbg !709

if.end4:                                          ; preds = %do.end
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !710
  %has_encrypted_entries = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 69, !dbg !711
  store i32 -1, i32* %has_encrypted_entries, align 8, !dbg !712
  %8 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !713
  %9 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !714
  %10 = bitcast %struct.rar* %9 to i8*, !dbg !714
  %call5 = call i32 @__archive_read_register_format(%struct.archive_read* %8, i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.archive_read*, i32)* @archive_read_format_rar_bid, i32 (%struct.archive_read*, i8*, i8*)* @archive_read_format_rar_options, i32 (%struct.archive_read*, %struct.archive_entry*)* @archive_read_format_rar_read_header, i32 (%struct.archive_read*, i8**, i64*, i64*)* @archive_read_format_rar_read_data, i32 (%struct.archive_read*)* @archive_read_format_rar_read_data_skip, i64 (%struct.archive_read*, i64, i32)* @archive_read_format_rar_seek_data, i32 (%struct.archive_read*)* @archive_read_format_rar_cleanup, i32 (%struct.archive_read*)* @archive_read_support_format_rar_capabilities, i32 (%struct.archive_read*)* @archive_read_format_rar_has_encrypted_entries), !dbg !715
  store i32 %call5, i32* %r, align 4, !dbg !716
  %11 = load i32, i32* %r, align 4, !dbg !717
  %cmp6 = icmp ne i32 %11, 0, !dbg !719
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !720

if.then7:                                         ; preds = %if.end4
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !721
  %13 = bitcast %struct.rar* %12 to i8*, !dbg !721
  call void @free(i8* %13) #8, !dbg !722
  br label %if.end8, !dbg !722

if.end8:                                          ; preds = %if.then7, %if.end4
  %14 = load i32, i32* %r, align 4, !dbg !723
  store i32 %14, i32* %retval, align 4, !dbg !724
  br label %return, !dbg !724

return:                                           ; preds = %if.end8, %if.then3, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !725
  ret i32 %15, !dbg !725
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @__archive_check_magic(%struct.archive*, i32, i32, i8*) #2

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

declare void @archive_set_error(%struct.archive*, i32, i8*, ...) #2

declare i32 @__archive_read_register_format(%struct.archive_read*, i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_rar_bid(%struct.archive_read* %a, i32 %best_bid) #0 !dbg !539 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %best_bid.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %offset = alloca i64, align 8
  %window = alloca i64, align 8
  %bytes_avail = alloca i64, align 8
  %buff = alloca i8*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !726, metadata !677), !dbg !727
  store i32 %best_bid, i32* %best_bid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %best_bid.addr, metadata !728, metadata !677), !dbg !729
  call void @llvm.dbg.declare(metadata i8** %p, metadata !730, metadata !677), !dbg !731
  %0 = load i32, i32* %best_bid.addr, align 4, !dbg !732
  %cmp = icmp sgt i32 %0, 30, !dbg !734
  br i1 %cmp, label %if.then, label %if.end, !dbg !735

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !736
  br label %return, !dbg !736

if.end:                                           ; preds = %entry
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !737
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %1, i64 7, i64* null), !dbg !739
  store i8* %call, i8** %p, align 8, !dbg !740
  %cmp1 = icmp eq i8* %call, null, !dbg !741
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !742

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !743
  br label %return, !dbg !743

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %p, align 8, !dbg !744
  %call4 = call i32 @memcmp(i8* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i64 7) #9, !dbg !746
  %cmp5 = icmp eq i32 %call4, 0, !dbg !747
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !748

if.then6:                                         ; preds = %if.end3
  store i32 30, i32* %retval, align 4, !dbg !749
  br label %return, !dbg !749

if.end7:                                          ; preds = %if.end3
  %3 = load i8*, i8** %p, align 8, !dbg !750
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !750
  %4 = load i8, i8* %arrayidx, align 1, !dbg !750
  %conv = sext i8 %4 to i32, !dbg !750
  %cmp8 = icmp eq i32 %conv, 77, !dbg !752
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false, !dbg !753

land.lhs.true:                                    ; preds = %if.end7
  %5 = load i8*, i8** %p, align 8, !dbg !754
  %arrayidx10 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !754
  %6 = load i8, i8* %arrayidx10, align 1, !dbg !754
  %conv11 = sext i8 %6 to i32, !dbg !754
  %cmp12 = icmp eq i32 %conv11, 90, !dbg !756
  br i1 %cmp12, label %if.then17, label %lor.lhs.false, !dbg !757

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end7
  %7 = load i8*, i8** %p, align 8, !dbg !758
  %call14 = call i32 @memcmp(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i64 4) #9, !dbg !760
  %cmp15 = icmp eq i32 %call14, 0, !dbg !761
  br i1 %cmp15, label %if.then17, label %if.end43, !dbg !762

if.then17:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !763, metadata !677), !dbg !765
  store i64 65536, i64* %offset, align 8, !dbg !765
  call void @llvm.dbg.declare(metadata i64* %window, metadata !766, metadata !677), !dbg !767
  store i64 4096, i64* %window, align 8, !dbg !767
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !768, metadata !677), !dbg !769
  br label %while.cond, !dbg !770

while.cond:                                       ; preds = %while.end, %if.end28, %if.then17
  %8 = load i64, i64* %offset, align 8, !dbg !771
  %9 = load i64, i64* %window, align 8, !dbg !773
  %add = add nsw i64 %8, %9, !dbg !774
  %cmp18 = icmp sle i64 %add, 131072, !dbg !775
  br i1 %cmp18, label %while.body, label %while.end42, !dbg !776

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %buff, metadata !777, metadata !677), !dbg !779
  %10 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !780
  %11 = load i64, i64* %offset, align 8, !dbg !781
  %12 = load i64, i64* %window, align 8, !dbg !782
  %add20 = add nsw i64 %11, %12, !dbg !783
  %call21 = call i8* @__archive_read_ahead(%struct.archive_read* %10, i64 %add20, i64* %bytes_avail), !dbg !784
  store i8* %call21, i8** %buff, align 8, !dbg !779
  %13 = load i8*, i8** %buff, align 8, !dbg !785
  %cmp22 = icmp eq i8* %13, null, !dbg !787
  br i1 %cmp22, label %if.then24, label %if.end29, !dbg !788

if.then24:                                        ; preds = %while.body
  %14 = load i64, i64* %window, align 8, !dbg !789
  %shr = ashr i64 %14, 1, !dbg !789
  store i64 %shr, i64* %window, align 8, !dbg !789
  %15 = load i64, i64* %window, align 8, !dbg !791
  %cmp25 = icmp slt i64 %15, 64, !dbg !793
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !794

if.then27:                                        ; preds = %if.then24
  store i32 0, i32* %retval, align 4, !dbg !795
  br label %return, !dbg !795

if.end28:                                         ; preds = %if.then24
  br label %while.cond, !dbg !796

if.end29:                                         ; preds = %while.body
  %16 = load i8*, i8** %buff, align 8, !dbg !797
  %17 = load i64, i64* %offset, align 8, !dbg !798
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !799
  store i8* %add.ptr, i8** %p, align 8, !dbg !800
  br label %while.cond30, !dbg !801

while.cond30:                                     ; preds = %if.end40, %if.end29
  %18 = load i8*, i8** %p, align 8, !dbg !802
  %add.ptr31 = getelementptr inbounds i8, i8* %18, i64 7, !dbg !804
  %19 = load i8*, i8** %buff, align 8, !dbg !805
  %20 = load i64, i64* %bytes_avail, align 8, !dbg !806
  %add.ptr32 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !807
  %cmp33 = icmp ult i8* %add.ptr31, %add.ptr32, !dbg !808
  br i1 %cmp33, label %while.body35, label %while.end, !dbg !809

while.body35:                                     ; preds = %while.cond30
  %21 = load i8*, i8** %p, align 8, !dbg !810
  %call36 = call i32 @memcmp(i8* %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i64 7) #9, !dbg !813
  %cmp37 = icmp eq i32 %call36, 0, !dbg !814
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !815

if.then39:                                        ; preds = %while.body35
  store i32 30, i32* %retval, align 4, !dbg !816
  br label %return, !dbg !816

if.end40:                                         ; preds = %while.body35
  %22 = load i8*, i8** %p, align 8, !dbg !817
  %add.ptr41 = getelementptr inbounds i8, i8* %22, i64 16, !dbg !817
  store i8* %add.ptr41, i8** %p, align 8, !dbg !817
  br label %while.cond30, !dbg !818

while.end:                                        ; preds = %while.cond30
  %23 = load i8*, i8** %p, align 8, !dbg !820
  %24 = load i8*, i8** %buff, align 8, !dbg !821
  %sub.ptr.lhs.cast = ptrtoint i8* %23 to i64, !dbg !822
  %sub.ptr.rhs.cast = ptrtoint i8* %24 to i64, !dbg !822
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !822
  store i64 %sub.ptr.sub, i64* %offset, align 8, !dbg !823
  br label %while.cond, !dbg !824

while.end42:                                      ; preds = %while.cond
  br label %if.end43, !dbg !826

if.end43:                                         ; preds = %while.end42, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !827
  br label %return, !dbg !827

return:                                           ; preds = %if.end43, %if.then39, %if.then27, %if.then6, %if.then2, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !828
  ret i32 %25, !dbg !828
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_rar_options(%struct.archive_read* %a, i8* %key, i8* %val) #0 !dbg !540 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %key.addr = alloca i8*, align 8
  %val.addr = alloca i8*, align 8
  %rar = alloca %struct.rar*, align 8
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !829, metadata !677), !dbg !830
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !831, metadata !677), !dbg !832
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !833, metadata !677), !dbg !834
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !835, metadata !677), !dbg !836
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !837, metadata !677), !dbg !838
  store i32 -25, i32* %ret, align 4, !dbg !838
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !839
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !840
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !840
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !841
  %2 = load i8*, i8** %data, align 8, !dbg !841
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !842
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !843
  %4 = load i8*, i8** %key.addr, align 8, !dbg !844
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0)) #9, !dbg !846
  %cmp = icmp eq i32 %call, 0, !dbg !847
  br i1 %cmp, label %if.then, label %if.end13, !dbg !848

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %val.addr, align 8, !dbg !849
  %cmp1 = icmp eq i8* %5, null, !dbg !852
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !853

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i8*, i8** %val.addr, align 8, !dbg !854
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !854
  %7 = load i8, i8* %arrayidx, align 1, !dbg !854
  %conv = sext i8 %7 to i32, !dbg !854
  %cmp2 = icmp eq i32 %conv, 0, !dbg !856
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !857

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  %8 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !858
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %8, i32 0, i32 0, !dbg !859
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i32 0, i32 0)), !dbg !860
  br label %if.end12, !dbg !860

if.else:                                          ; preds = %lor.lhs.false
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !861
  %archive5 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %9, i32 0, i32 0, !dbg !863
  %10 = load i8*, i8** %val.addr, align 8, !dbg !864
  %call6 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive5, i8* %10, i32 0), !dbg !865
  %11 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !866
  %opt_sconv = getelementptr inbounds %struct.rar, %struct.rar* %11, i32 0, i32 65, !dbg !867
  store %struct.archive_string_conv* %call6, %struct.archive_string_conv** %opt_sconv, align 8, !dbg !868
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !869
  %opt_sconv7 = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 65, !dbg !871
  %13 = load %struct.archive_string_conv*, %struct.archive_string_conv** %opt_sconv7, align 8, !dbg !871
  %cmp8 = icmp ne %struct.archive_string_conv* %13, null, !dbg !872
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !873

if.then10:                                        ; preds = %if.else
  store i32 0, i32* %ret, align 4, !dbg !874
  br label %if.end, !dbg !875

if.else11:                                        ; preds = %if.else
  store i32 -30, i32* %ret, align 4, !dbg !876
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then4
  %14 = load i32, i32* %ret, align 4, !dbg !877
  store i32 %14, i32* %retval, align 4, !dbg !878
  br label %return, !dbg !878

if.end13:                                         ; preds = %entry
  store i32 -20, i32* %retval, align 4, !dbg !879
  br label %return, !dbg !879

return:                                           ; preds = %if.end13, %if.end12
  %15 = load i32, i32* %retval, align 4, !dbg !880
  ret i32 %15, !dbg !880
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_rar_read_header(%struct.archive_read* %a, %struct.archive_entry* %entry1) #0 !dbg !541 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %h = alloca i8*, align 8
  %p = alloca i8*, align 8
  %rar = alloca %struct.rar*, align 8
  %skip = alloca i64, align 8
  %head_type = alloca i8, align 1
  %ret = alloca i32, align 4
  %flags = alloca i32, align 4
  %crc32_expected = alloca i64, align 8
  %crc32_val = alloca i64, align 8
  %to_read = alloca i64, align 8
  %did_read = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !881, metadata !677), !dbg !882
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !883, metadata !677), !dbg !884
  call void @llvm.dbg.declare(metadata i8** %h, metadata !885, metadata !677), !dbg !886
  call void @llvm.dbg.declare(metadata i8** %p, metadata !887, metadata !677), !dbg !888
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !889, metadata !677), !dbg !890
  call void @llvm.dbg.declare(metadata i64* %skip, metadata !891, metadata !677), !dbg !892
  call void @llvm.dbg.declare(metadata i8* %head_type, metadata !893, metadata !677), !dbg !894
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !895, metadata !677), !dbg !896
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !897, metadata !677), !dbg !898
  call void @llvm.dbg.declare(metadata i64* %crc32_expected, metadata !899, metadata !677), !dbg !900
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !901
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 0, !dbg !902
  %archive_format = getelementptr inbounds %struct.archive, %struct.archive* %archive, i32 0, i32 3, !dbg !903
  store i32 851968, i32* %archive_format, align 8, !dbg !904
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !905
  %archive2 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 0, !dbg !907
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive2, i32 0, i32 4, !dbg !908
  %2 = load i8*, i8** %archive_format_name, align 8, !dbg !908
  %cmp = icmp eq i8* %2, null, !dbg !909
  br i1 %cmp, label %if.then, label %if.end, !dbg !910

if.then:                                          ; preds = %entry
  %3 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !911
  %archive3 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %3, i32 0, i32 0, !dbg !912
  %archive_format_name4 = getelementptr inbounds %struct.archive, %struct.archive* %archive3, i32 0, i32 4, !dbg !913
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8** %archive_format_name4, align 8, !dbg !914
  br label %if.end, !dbg !911

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !915
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %4, i32 0, i32 13, !dbg !916
  %5 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !916
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %5, i32 0, i32 0, !dbg !917
  %6 = load i8*, i8** %data, align 8, !dbg !917
  %7 = bitcast i8* %6 to %struct.rar*, !dbg !918
  store %struct.rar* %7, %struct.rar** %rar, align 8, !dbg !919
  %8 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !920
  %has_encrypted_entries = getelementptr inbounds %struct.rar, %struct.rar* %8, i32 0, i32 69, !dbg !922
  %9 = load i32, i32* %has_encrypted_entries, align 8, !dbg !922
  %cmp5 = icmp eq i32 %9, -1, !dbg !923
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !924

if.then6:                                         ; preds = %if.end
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !925
  %has_encrypted_entries7 = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 69, !dbg !927
  store i32 0, i32* %has_encrypted_entries7, align 8, !dbg !928
  br label %if.end8, !dbg !929

if.end8:                                          ; preds = %if.then6, %if.end
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !930
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %11, i64 7, i64* null), !dbg !932
  store i8* %call, i8** %h, align 8, !dbg !933
  %cmp9 = icmp eq i8* %call, null, !dbg !934
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !935

if.then10:                                        ; preds = %if.end8
  store i32 1, i32* %retval, align 4, !dbg !936
  br label %return, !dbg !936

if.end11:                                         ; preds = %if.end8
  %12 = load i8*, i8** %h, align 8, !dbg !937
  store i8* %12, i8** %p, align 8, !dbg !938
  %13 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !939
  %found_first_header = getelementptr inbounds %struct.rar, %struct.rar* %13, i32 0, i32 37, !dbg !941
  %14 = load i32, i32* %found_first_header, align 8, !dbg !941
  %cmp12 = icmp eq i32 %14, 0, !dbg !942
  br i1 %cmp12, label %land.lhs.true, label %if.end29, !dbg !943

land.lhs.true:                                    ; preds = %if.end11
  %15 = load i8*, i8** %p, align 8, !dbg !944
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 0, !dbg !944
  %16 = load i8, i8* %arrayidx, align 1, !dbg !944
  %conv = sext i8 %16 to i32, !dbg !944
  %cmp13 = icmp eq i32 %conv, 77, !dbg !945
  br i1 %cmp13, label %land.lhs.true15, label %lor.lhs.false, !dbg !946

land.lhs.true15:                                  ; preds = %land.lhs.true
  %17 = load i8*, i8** %p, align 8, !dbg !947
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !947
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !947
  %conv17 = sext i8 %18 to i32, !dbg !947
  %cmp18 = icmp eq i32 %conv17, 90, !dbg !949
  br i1 %cmp18, label %if.then23, label %lor.lhs.false, !dbg !950

lor.lhs.false:                                    ; preds = %land.lhs.true15, %land.lhs.true
  %19 = load i8*, i8** %p, align 8, !dbg !951
  %call20 = call i32 @memcmp(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i64 4) #9, !dbg !953
  %cmp21 = icmp eq i32 %call20, 0, !dbg !954
  br i1 %cmp21, label %if.then23, label %if.end29, !dbg !955

if.then23:                                        ; preds = %lor.lhs.false, %land.lhs.true15
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !957
  %call24 = call i32 @skip_sfx(%struct.archive_read* %20), !dbg !959
  store i32 %call24, i32* %ret, align 4, !dbg !960
  %21 = load i32, i32* %ret, align 4, !dbg !961
  %cmp25 = icmp slt i32 %21, -20, !dbg !963
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !964

if.then27:                                        ; preds = %if.then23
  %22 = load i32, i32* %ret, align 4, !dbg !965
  store i32 %22, i32* %retval, align 4, !dbg !966
  br label %return, !dbg !966

if.end28:                                         ; preds = %if.then23
  br label %if.end29, !dbg !967

if.end29:                                         ; preds = %if.end28, %lor.lhs.false, %if.end11
  %23 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !968
  %found_first_header30 = getelementptr inbounds %struct.rar, %struct.rar* %23, i32 0, i32 37, !dbg !969
  store i32 1, i32* %found_first_header30, align 8, !dbg !970
  br label %while.body, !dbg !971

while.body:                                       ; preds = %if.end29, %sw.epilog
  call void @llvm.dbg.declare(metadata i64* %crc32_val, metadata !972, metadata !677), !dbg !974
  %24 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !975
  %call31 = call i8* @__archive_read_ahead(%struct.archive_read* %24, i64 7, i64* null), !dbg !977
  store i8* %call31, i8** %h, align 8, !dbg !978
  %cmp32 = icmp eq i8* %call31, null, !dbg !979
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !980

if.then34:                                        ; preds = %while.body
  store i32 -30, i32* %retval, align 4, !dbg !981
  br label %return, !dbg !981

if.end35:                                         ; preds = %while.body
  %25 = load i8*, i8** %h, align 8, !dbg !982
  store i8* %25, i8** %p, align 8, !dbg !983
  %26 = load i8*, i8** %p, align 8, !dbg !984
  %arrayidx36 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !984
  %27 = load i8, i8* %arrayidx36, align 1, !dbg !984
  store i8 %27, i8* %head_type, align 1, !dbg !985
  %28 = load i8, i8* %head_type, align 1, !dbg !986
  %conv37 = sext i8 %28 to i32, !dbg !986
  switch i32 %conv37, label %sw.default [
    i32 114, label %sw.bb
    i32 115, label %sw.bb45
    i32 116, label %sw.bb95
    i32 117, label %sw.bb97
    i32 118, label %sw.bb97
    i32 119, label %sw.bb97
    i32 120, label %sw.bb97
    i32 121, label %sw.bb97
    i32 123, label %sw.bb97
    i32 122, label %sw.bb158
  ], !dbg !987

sw.bb:                                            ; preds = %if.end35
  %29 = load i8*, i8** %p, align 8, !dbg !988
  %call38 = call i32 @memcmp(i8* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i64 7) #9, !dbg !991
  %cmp39 = icmp ne i32 %call38, 0, !dbg !992
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !993

if.then41:                                        ; preds = %sw.bb
  %30 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !994
  %archive42 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %30, i32 0, i32 0, !dbg !996
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive42, i32 84, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i32 0, i32 0)), !dbg !997
  store i32 -30, i32* %retval, align 4, !dbg !998
  br label %return, !dbg !998

if.end43:                                         ; preds = %sw.bb
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !999
  %call44 = call i64 @__archive_read_consume(%struct.archive_read* %31, i64 7), !dbg !1000
  br label %sw.epilog, !dbg !1001

sw.bb45:                                          ; preds = %if.end35
  %32 = load i8*, i8** %p, align 8, !dbg !1002
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 3, !dbg !1003
  %call46 = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !1004
  %conv47 = zext i16 %call46 to i32, !dbg !1004
  %33 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1005
  %main_flags = getelementptr inbounds %struct.rar, %struct.rar* %33, i32 0, i32 0, !dbg !1006
  store i32 %conv47, i32* %main_flags, align 8, !dbg !1007
  %34 = load i8*, i8** %p, align 8, !dbg !1008
  %add.ptr48 = getelementptr inbounds i8, i8* %34, i64 5, !dbg !1009
  %call49 = call zeroext i16 @archive_le16dec(i8* %add.ptr48), !dbg !1010
  %conv50 = zext i16 %call49 to i64, !dbg !1010
  store i64 %conv50, i64* %skip, align 8, !dbg !1011
  %35 = load i64, i64* %skip, align 8, !dbg !1012
  %cmp51 = icmp ult i64 %35, 13, !dbg !1014
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !1015

if.then53:                                        ; preds = %sw.bb45
  %36 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1016
  %archive54 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %36, i32 0, i32 0, !dbg !1018
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive54, i32 84, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0)), !dbg !1019
  store i32 -30, i32* %retval, align 4, !dbg !1020
  br label %return, !dbg !1020

if.end55:                                         ; preds = %sw.bb45
  %37 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1021
  %38 = load i64, i64* %skip, align 8, !dbg !1023
  %call56 = call i8* @__archive_read_ahead(%struct.archive_read* %37, i64 %38, i64* null), !dbg !1024
  store i8* %call56, i8** %h, align 8, !dbg !1025
  %cmp57 = icmp eq i8* %call56, null, !dbg !1026
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !1027

if.then59:                                        ; preds = %if.end55
  store i32 -30, i32* %retval, align 4, !dbg !1028
  br label %return, !dbg !1028

if.end60:                                         ; preds = %if.end55
  %39 = load i8*, i8** %h, align 8, !dbg !1029
  store i8* %39, i8** %p, align 8, !dbg !1030
  %40 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1031
  %reserved1 = getelementptr inbounds %struct.rar, %struct.rar* %40, i32 0, i32 2, !dbg !1032
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %reserved1, i32 0, i32 0, !dbg !1033
  %41 = load i8*, i8** %p, align 8, !dbg !1034
  %add.ptr61 = getelementptr inbounds i8, i8* %41, i64 7, !dbg !1035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %add.ptr61, i64 2, i32 1, i1 false), !dbg !1033
  %42 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1036
  %reserved2 = getelementptr inbounds %struct.rar, %struct.rar* %42, i32 0, i32 3, !dbg !1037
  %arraydecay62 = getelementptr inbounds [4 x i8], [4 x i8]* %reserved2, i32 0, i32 0, !dbg !1038
  %43 = load i8*, i8** %p, align 8, !dbg !1039
  %add.ptr63 = getelementptr inbounds i8, i8* %43, i64 7, !dbg !1040
  %add.ptr64 = getelementptr inbounds i8, i8* %add.ptr63, i64 2, !dbg !1041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay62, i8* %add.ptr64, i64 4, i32 1, i1 false), !dbg !1038
  %44 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1042
  %main_flags65 = getelementptr inbounds %struct.rar, %struct.rar* %44, i32 0, i32 0, !dbg !1044
  %45 = load i32, i32* %main_flags65, align 8, !dbg !1044
  %and = and i32 %45, 512, !dbg !1045
  %tobool = icmp ne i32 %and, 0, !dbg !1045
  br i1 %tobool, label %if.then66, label %if.end75, !dbg !1046

if.then66:                                        ; preds = %if.end60
  %46 = load i64, i64* %skip, align 8, !dbg !1047
  %cmp67 = icmp ult i64 %46, 14, !dbg !1050
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !1051

if.then69:                                        ; preds = %if.then66
  %47 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1052
  %archive70 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %47, i32 0, i32 0, !dbg !1054
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive70, i32 84, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0)), !dbg !1055
  store i32 -30, i32* %retval, align 4, !dbg !1056
  br label %return, !dbg !1056

if.end71:                                         ; preds = %if.then66
  %48 = load i8*, i8** %p, align 8, !dbg !1057
  %add.ptr72 = getelementptr inbounds i8, i8* %48, i64 7, !dbg !1058
  %add.ptr73 = getelementptr inbounds i8, i8* %add.ptr72, i64 2, !dbg !1059
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr73, i64 4, !dbg !1060
  %49 = load i8, i8* %add.ptr74, align 1, !dbg !1061
  %50 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1062
  %encryptver = getelementptr inbounds %struct.rar, %struct.rar* %50, i32 0, i32 4, !dbg !1063
  store i8 %49, i8* %encryptver, align 2, !dbg !1064
  br label %if.end75, !dbg !1065

if.end75:                                         ; preds = %if.end71, %if.end60
  %51 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1066
  %main_flags76 = getelementptr inbounds %struct.rar, %struct.rar* %51, i32 0, i32 0, !dbg !1068
  %52 = load i32, i32* %main_flags76, align 8, !dbg !1068
  %and77 = and i32 %52, 128, !dbg !1069
  %tobool78 = icmp ne i32 %and77, 0, !dbg !1069
  br i1 %tobool78, label %if.then79, label %if.end82, !dbg !1070

if.then79:                                        ; preds = %if.end75
  %53 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1071
  call void @archive_entry_set_is_metadata_encrypted(%struct.archive_entry* %53, i8 signext 1), !dbg !1073
  %54 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1074
  call void @archive_entry_set_is_data_encrypted(%struct.archive_entry* %54, i8 signext 1), !dbg !1075
  %55 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1076
  %has_encrypted_entries80 = getelementptr inbounds %struct.rar, %struct.rar* %55, i32 0, i32 69, !dbg !1077
  store i32 1, i32* %has_encrypted_entries80, align 8, !dbg !1078
  %56 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1079
  %archive81 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %56, i32 0, i32 0, !dbg !1080
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive81, i32 84, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i32 0, i32 0)), !dbg !1081
  store i32 -30, i32* %retval, align 4, !dbg !1082
  br label %return, !dbg !1082

if.end82:                                         ; preds = %if.end75
  %57 = load i8*, i8** %p, align 8, !dbg !1083
  %add.ptr83 = getelementptr inbounds i8, i8* %57, i64 2, !dbg !1084
  %58 = load i64, i64* %skip, align 8, !dbg !1085
  %conv84 = trunc i64 %58 to i32, !dbg !1086
  %sub = sub i32 %conv84, 2, !dbg !1087
  %call85 = call i64 @cm_zlib_crc32(i64 0, i8* %add.ptr83, i32 %sub), !dbg !1088
  store i64 %call85, i64* %crc32_val, align 8, !dbg !1089
  %59 = load i64, i64* %crc32_val, align 8, !dbg !1090
  %and86 = and i64 %59, 65535, !dbg !1092
  %60 = load i8*, i8** %p, align 8, !dbg !1093
  %call87 = call zeroext i16 @archive_le16dec(i8* %60), !dbg !1094
  %conv88 = zext i16 %call87 to i64, !dbg !1094
  %cmp89 = icmp ne i64 %and86, %conv88, !dbg !1095
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !1096

if.then91:                                        ; preds = %if.end82
  %61 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1097
  %archive92 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %61, i32 0, i32 0, !dbg !1099
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive92, i32 84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0)), !dbg !1100
  store i32 -30, i32* %retval, align 4, !dbg !1101
  br label %return, !dbg !1101

if.end93:                                         ; preds = %if.end82
  %62 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1102
  %63 = load i64, i64* %skip, align 8, !dbg !1103
  %call94 = call i64 @__archive_read_consume(%struct.archive_read* %62, i64 %63), !dbg !1104
  br label %sw.epilog, !dbg !1105

sw.bb95:                                          ; preds = %if.end35
  %64 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1106
  %65 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1107
  %66 = load i8, i8* %head_type, align 1, !dbg !1108
  %call96 = call i32 @read_header(%struct.archive_read* %64, %struct.archive_entry* %65, i8 signext %66), !dbg !1109
  store i32 %call96, i32* %retval, align 4, !dbg !1110
  br label %return, !dbg !1110

sw.bb97:                                          ; preds = %if.end35, %if.end35, %if.end35, %if.end35, %if.end35, %if.end35
  %67 = load i8*, i8** %p, align 8, !dbg !1111
  %add.ptr98 = getelementptr inbounds i8, i8* %67, i64 3, !dbg !1112
  %call99 = call zeroext i16 @archive_le16dec(i8* %add.ptr98), !dbg !1113
  %conv100 = zext i16 %call99 to i32, !dbg !1113
  store i32 %conv100, i32* %flags, align 4, !dbg !1114
  %68 = load i8*, i8** %p, align 8, !dbg !1115
  %add.ptr101 = getelementptr inbounds i8, i8* %68, i64 5, !dbg !1116
  %call102 = call zeroext i16 @archive_le16dec(i8* %add.ptr101), !dbg !1117
  %conv103 = zext i16 %call102 to i64, !dbg !1117
  store i64 %conv103, i64* %skip, align 8, !dbg !1118
  %69 = load i64, i64* %skip, align 8, !dbg !1119
  %cmp104 = icmp ult i64 %69, 7, !dbg !1121
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !1122

if.then106:                                       ; preds = %sw.bb97
  %70 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1123
  %archive107 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %70, i32 0, i32 0, !dbg !1125
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive107, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0)), !dbg !1126
  store i32 -30, i32* %retval, align 4, !dbg !1127
  br label %return, !dbg !1127

if.end108:                                        ; preds = %sw.bb97
  %71 = load i32, i32* %flags, align 4, !dbg !1128
  %and109 = and i32 %71, 32768, !dbg !1130
  %tobool110 = icmp ne i32 %and109, 0, !dbg !1130
  br i1 %tobool110, label %if.then111, label %if.end125, !dbg !1131

if.then111:                                       ; preds = %if.end108
  %72 = load i64, i64* %skip, align 8, !dbg !1132
  %cmp112 = icmp ult i64 %72, 11, !dbg !1135
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !1136

if.then114:                                       ; preds = %if.then111
  %73 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1137
  %archive115 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %73, i32 0, i32 0, !dbg !1139
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive115, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0)), !dbg !1140
  store i32 -30, i32* %retval, align 4, !dbg !1141
  br label %return, !dbg !1141

if.end116:                                        ; preds = %if.then111
  %74 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1142
  %75 = load i64, i64* %skip, align 8, !dbg !1144
  %call117 = call i8* @__archive_read_ahead(%struct.archive_read* %74, i64 %75, i64* null), !dbg !1145
  store i8* %call117, i8** %h, align 8, !dbg !1146
  %cmp118 = icmp eq i8* %call117, null, !dbg !1147
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !1148

if.then120:                                       ; preds = %if.end116
  store i32 -30, i32* %retval, align 4, !dbg !1149
  br label %return, !dbg !1149

if.end121:                                        ; preds = %if.end116
  %76 = load i8*, i8** %h, align 8, !dbg !1150
  store i8* %76, i8** %p, align 8, !dbg !1151
  %77 = load i8*, i8** %p, align 8, !dbg !1152
  %add.ptr122 = getelementptr inbounds i8, i8* %77, i64 7, !dbg !1153
  %call123 = call i32 @archive_le32dec(i8* %add.ptr122), !dbg !1154
  %conv124 = zext i32 %call123 to i64, !dbg !1154
  %78 = load i64, i64* %skip, align 8, !dbg !1155
  %add = add i64 %78, %conv124, !dbg !1155
  store i64 %add, i64* %skip, align 8, !dbg !1155
  br label %if.end125, !dbg !1156

if.end125:                                        ; preds = %if.end121, %if.end108
  %79 = load i8*, i8** %p, align 8, !dbg !1157
  %call126 = call zeroext i16 @archive_le16dec(i8* %79), !dbg !1158
  %conv127 = zext i16 %call126 to i64, !dbg !1158
  store i64 %conv127, i64* %crc32_expected, align 8, !dbg !1159
  %80 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1160
  %call128 = call i64 @__archive_read_consume(%struct.archive_read* %80, i64 2), !dbg !1161
  %81 = load i64, i64* %skip, align 8, !dbg !1162
  %sub129 = sub i64 %81, 2, !dbg !1162
  store i64 %sub129, i64* %skip, align 8, !dbg !1162
  store i64 0, i64* %crc32_val, align 8, !dbg !1163
  br label %while.cond130, !dbg !1164

while.cond130:                                    ; preds = %if.end142, %if.end125
  %82 = load i64, i64* %skip, align 8, !dbg !1165
  %cmp131 = icmp ugt i64 %82, 0, !dbg !1167
  br i1 %cmp131, label %while.body133, label %while.end, !dbg !1168

while.body133:                                    ; preds = %while.cond130
  call void @llvm.dbg.declare(metadata i64* %to_read, metadata !1169, metadata !677), !dbg !1171
  %83 = load i64, i64* %skip, align 8, !dbg !1172
  store i64 %83, i64* %to_read, align 8, !dbg !1171
  call void @llvm.dbg.declare(metadata i64* %did_read, metadata !1173, metadata !677), !dbg !1174
  %84 = load i64, i64* %to_read, align 8, !dbg !1175
  %cmp134 = icmp ugt i64 %84, 32768, !dbg !1177
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !1178

if.then136:                                       ; preds = %while.body133
  store i64 32768, i64* %to_read, align 8, !dbg !1179
  br label %if.end137, !dbg !1181

if.end137:                                        ; preds = %if.then136, %while.body133
  %85 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1182
  %86 = load i64, i64* %to_read, align 8, !dbg !1184
  %call138 = call i8* @__archive_read_ahead(%struct.archive_read* %85, i64 %86, i64* %did_read), !dbg !1185
  store i8* %call138, i8** %h, align 8, !dbg !1186
  %cmp139 = icmp eq i8* %call138, null, !dbg !1187
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !1188

if.then141:                                       ; preds = %if.end137
  store i32 -30, i32* %retval, align 4, !dbg !1189
  br label %return, !dbg !1189

if.end142:                                        ; preds = %if.end137
  %87 = load i8*, i8** %h, align 8, !dbg !1191
  store i8* %87, i8** %p, align 8, !dbg !1192
  %88 = load i64, i64* %crc32_val, align 8, !dbg !1193
  %89 = load i8*, i8** %p, align 8, !dbg !1194
  %90 = load i64, i64* %did_read, align 8, !dbg !1195
  %conv143 = trunc i64 %90 to i32, !dbg !1196
  %call144 = call i64 @cm_zlib_crc32(i64 %88, i8* %89, i32 %conv143), !dbg !1197
  store i64 %call144, i64* %crc32_val, align 8, !dbg !1198
  %91 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1199
  %92 = load i64, i64* %did_read, align 8, !dbg !1200
  %call145 = call i64 @__archive_read_consume(%struct.archive_read* %91, i64 %92), !dbg !1201
  %93 = load i64, i64* %did_read, align 8, !dbg !1202
  %94 = load i64, i64* %skip, align 8, !dbg !1203
  %sub146 = sub i64 %94, %93, !dbg !1203
  store i64 %sub146, i64* %skip, align 8, !dbg !1203
  br label %while.cond130, !dbg !1204

while.end:                                        ; preds = %while.cond130
  %95 = load i64, i64* %crc32_val, align 8, !dbg !1206
  %and147 = and i64 %95, 65535, !dbg !1208
  %96 = load i64, i64* %crc32_expected, align 8, !dbg !1209
  %cmp148 = icmp ne i64 %and147, %96, !dbg !1210
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !1211

if.then150:                                       ; preds = %while.end
  %97 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1212
  %archive151 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %97, i32 0, i32 0, !dbg !1214
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive151, i32 84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0)), !dbg !1215
  store i32 -30, i32* %retval, align 4, !dbg !1216
  br label %return, !dbg !1216

if.end152:                                        ; preds = %while.end
  %98 = load i8, i8* %head_type, align 1, !dbg !1217
  %conv153 = sext i8 %98 to i32, !dbg !1217
  %cmp154 = icmp eq i32 %conv153, 123, !dbg !1219
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !1220

if.then156:                                       ; preds = %if.end152
  store i32 1, i32* %retval, align 4, !dbg !1221
  br label %return, !dbg !1221

if.end157:                                        ; preds = %if.end152
  br label %sw.epilog, !dbg !1222

sw.bb158:                                         ; preds = %if.end35
  %99 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1223
  %100 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1225
  %101 = load i8, i8* %head_type, align 1, !dbg !1226
  %call159 = call i32 @read_header(%struct.archive_read* %99, %struct.archive_entry* %100, i8 signext %101), !dbg !1227
  store i32 %call159, i32* %ret, align 4, !dbg !1228
  %cmp160 = icmp slt i32 %call159, -20, !dbg !1229
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !1230

if.then162:                                       ; preds = %sw.bb158
  %102 = load i32, i32* %ret, align 4, !dbg !1231
  store i32 %102, i32* %retval, align 4, !dbg !1232
  br label %return, !dbg !1232

if.end163:                                        ; preds = %sw.bb158
  br label %sw.epilog, !dbg !1233

sw.default:                                       ; preds = %if.end35
  %103 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1234
  %archive164 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %103, i32 0, i32 0, !dbg !1235
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive164, i32 84, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0)), !dbg !1236
  store i32 -30, i32* %retval, align 4, !dbg !1237
  br label %return, !dbg !1237

sw.epilog:                                        ; preds = %if.end163, %if.end157, %if.end93, %if.end43
  br label %while.body, !dbg !1238

return:                                           ; preds = %sw.default, %if.then162, %if.then156, %if.then150, %if.then141, %if.then120, %if.then114, %if.then106, %sw.bb95, %if.then91, %if.then79, %if.then69, %if.then59, %if.then53, %if.then41, %if.then34, %if.then27, %if.then10
  %104 = load i32, i32* %retval, align 4, !dbg !1239
  ret i32 %104, !dbg !1239
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_rar_read_data(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !576 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %rar = alloca %struct.rar*, align 8
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1240, metadata !677), !dbg !1241
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !1242, metadata !677), !dbg !1243
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !1244, metadata !677), !dbg !1245
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !1246, metadata !677), !dbg !1247
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !1248, metadata !677), !dbg !1249
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1250
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1251
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1251
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1252
  %2 = load i8*, i8** %data, align 8, !dbg !1252
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !1253
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !1249
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1254, metadata !677), !dbg !1255
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1256
  %has_encrypted_entries = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 69, !dbg !1258
  %5 = load i32, i32* %has_encrypted_entries, align 8, !dbg !1258
  %cmp = icmp eq i32 %5, -1, !dbg !1259
  br i1 %cmp, label %if.then, label %if.end, !dbg !1260

if.then:                                          ; preds = %entry
  %6 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1261
  %has_encrypted_entries1 = getelementptr inbounds %struct.rar, %struct.rar* %6, i32 0, i32 69, !dbg !1263
  store i32 0, i32* %has_encrypted_entries1, align 8, !dbg !1264
  br label %if.end, !dbg !1265

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1266
  %bytes_unconsumed = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 23, !dbg !1268
  %8 = load i64, i64* %bytes_unconsumed, align 8, !dbg !1268
  %cmp2 = icmp sgt i64 %8, 0, !dbg !1269
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !1270

if.then3:                                         ; preds = %if.end
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1271
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1273
  %bytes_unconsumed4 = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 23, !dbg !1274
  %11 = load i64, i64* %bytes_unconsumed4, align 8, !dbg !1274
  %call = call i64 @__archive_read_consume(%struct.archive_read* %9, i64 %11), !dbg !1275
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1276
  %bytes_unconsumed5 = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 23, !dbg !1277
  store i64 0, i64* %bytes_unconsumed5, align 8, !dbg !1278
  br label %if.end6, !dbg !1279

if.end6:                                          ; preds = %if.then3, %if.end
  %13 = load i8**, i8*** %buff.addr, align 8, !dbg !1280
  store i8* null, i8** %13, align 8, !dbg !1281
  %14 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1282
  %entry_eof = getelementptr inbounds %struct.rar, %struct.rar* %14, i32 0, i32 35, !dbg !1284
  %15 = load i8, i8* %entry_eof, align 1, !dbg !1284
  %conv = sext i8 %15 to i32, !dbg !1282
  %tobool = icmp ne i32 %conv, 0, !dbg !1282
  br i1 %tobool, label %if.then9, label %lor.lhs.false, !dbg !1285

lor.lhs.false:                                    ; preds = %if.end6
  %16 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1286
  %offset_seek = getelementptr inbounds %struct.rar, %struct.rar* %16, i32 0, i32 28, !dbg !1288
  %17 = load i64, i64* %offset_seek, align 8, !dbg !1288
  %18 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1289
  %unp_size = getelementptr inbounds %struct.rar, %struct.rar* %18, i32 0, i32 8, !dbg !1290
  %19 = load i64, i64* %unp_size, align 8, !dbg !1290
  %cmp7 = icmp sge i64 %17, %19, !dbg !1291
  br i1 %cmp7, label %if.then9, label %if.end17, !dbg !1292

if.then9:                                         ; preds = %lor.lhs.false, %if.end6
  %20 = load i64*, i64** %size.addr, align 8, !dbg !1293
  store i64 0, i64* %20, align 8, !dbg !1295
  %21 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1296
  %offset10 = getelementptr inbounds %struct.rar, %struct.rar* %21, i32 0, i32 26, !dbg !1297
  %22 = load i64, i64* %offset10, align 8, !dbg !1297
  %23 = load i64*, i64** %offset.addr, align 8, !dbg !1298
  store i64 %22, i64* %23, align 8, !dbg !1299
  %24 = load i64*, i64** %offset.addr, align 8, !dbg !1300
  %25 = load i64, i64* %24, align 8, !dbg !1302
  %26 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1303
  %unp_size11 = getelementptr inbounds %struct.rar, %struct.rar* %26, i32 0, i32 8, !dbg !1304
  %27 = load i64, i64* %unp_size11, align 8, !dbg !1304
  %cmp12 = icmp slt i64 %25, %27, !dbg !1305
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !1306

if.then14:                                        ; preds = %if.then9
  %28 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1307
  %unp_size15 = getelementptr inbounds %struct.rar, %struct.rar* %28, i32 0, i32 8, !dbg !1308
  %29 = load i64, i64* %unp_size15, align 8, !dbg !1308
  %30 = load i64*, i64** %offset.addr, align 8, !dbg !1309
  store i64 %29, i64* %30, align 8, !dbg !1310
  br label %if.end16, !dbg !1311

if.end16:                                         ; preds = %if.then14, %if.then9
  store i32 1, i32* %retval, align 4, !dbg !1312
  br label %return, !dbg !1312

if.end17:                                         ; preds = %lor.lhs.false
  %31 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1313
  %compression_method = getelementptr inbounds %struct.rar, %struct.rar* %31, i32 0, i32 5, !dbg !1314
  %32 = load i8, i8* %compression_method, align 1, !dbg !1314
  %conv18 = sext i8 %32 to i32, !dbg !1313
  switch i32 %conv18, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb20
    i32 50, label %sw.bb20
    i32 51, label %sw.bb20
    i32 52, label %sw.bb20
    i32 53, label %sw.bb20
  ], !dbg !1315

sw.bb:                                            ; preds = %if.end17
  %33 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1316
  %34 = load i8**, i8*** %buff.addr, align 8, !dbg !1318
  %35 = load i64*, i64** %size.addr, align 8, !dbg !1319
  %36 = load i64*, i64** %offset.addr, align 8, !dbg !1320
  %call19 = call i32 @read_data_stored(%struct.archive_read* %33, i8** %34, i64* %35, i64* %36), !dbg !1321
  store i32 %call19, i32* %ret, align 4, !dbg !1322
  br label %sw.epilog, !dbg !1323

sw.bb20:                                          ; preds = %if.end17, %if.end17, %if.end17, %if.end17, %if.end17
  %37 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1324
  %38 = load i8**, i8*** %buff.addr, align 8, !dbg !1325
  %39 = load i64*, i64** %size.addr, align 8, !dbg !1326
  %40 = load i64*, i64** %offset.addr, align 8, !dbg !1327
  %call21 = call i32 @read_data_compressed(%struct.archive_read* %37, i8** %38, i64* %39, i64* %40), !dbg !1328
  store i32 %call21, i32* %ret, align 4, !dbg !1329
  %41 = load i32, i32* %ret, align 4, !dbg !1330
  %cmp22 = icmp ne i32 %41, 0, !dbg !1332
  br i1 %cmp22, label %land.lhs.true, label %if.end27, !dbg !1333

land.lhs.true:                                    ; preds = %sw.bb20
  %42 = load i32, i32* %ret, align 4, !dbg !1334
  %cmp24 = icmp ne i32 %42, -20, !dbg !1336
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !1337

if.then26:                                        ; preds = %land.lhs.true
  %43 = load void (%struct.CPpmd7*, %struct.ISzAlloc*)*, void (%struct.CPpmd7*, %struct.ISzAlloc*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 2), align 8, !dbg !1338
  %44 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1339
  %ppmd7_context = getelementptr inbounds %struct.rar, %struct.rar* %44, i32 0, i32 60, !dbg !1340
  call void %43(%struct.CPpmd7* %ppmd7_context, %struct.ISzAlloc* @g_szalloc), !dbg !1341
  br label %if.end27, !dbg !1341

if.end27:                                         ; preds = %if.then26, %land.lhs.true, %sw.bb20
  br label %sw.epilog, !dbg !1342

sw.default:                                       ; preds = %if.end17
  %45 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1343
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %45, i32 0, i32 0, !dbg !1344
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29, i32 0, i32 0)), !dbg !1345
  store i32 -30, i32* %ret, align 4, !dbg !1346
  br label %sw.epilog, !dbg !1347

sw.epilog:                                        ; preds = %sw.default, %if.end27, %sw.bb
  %46 = load i32, i32* %ret, align 4, !dbg !1348
  store i32 %46, i32* %retval, align 4, !dbg !1349
  br label %return, !dbg !1349

return:                                           ; preds = %sw.epilog, %if.end16
  %47 = load i32, i32* %retval, align 4, !dbg !1350
  ret i32 %47, !dbg !1350
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_rar_read_data_skip(%struct.archive_read* %a) #0 !dbg !641 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %rar = alloca %struct.rar*, align 8
  %bytes_skipped = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1351, metadata !677), !dbg !1352
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !1353, metadata !677), !dbg !1354
  call void @llvm.dbg.declare(metadata i64* %bytes_skipped, metadata !1355, metadata !677), !dbg !1356
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1357, metadata !677), !dbg !1358
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1359
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1360
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1360
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1361
  %2 = load i8*, i8** %data, align 8, !dbg !1361
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !1362
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !1363
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1364
  %bytes_unconsumed = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 23, !dbg !1366
  %5 = load i64, i64* %bytes_unconsumed, align 8, !dbg !1366
  %cmp = icmp sgt i64 %5, 0, !dbg !1367
  br i1 %cmp, label %if.then, label %if.end, !dbg !1368

if.then:                                          ; preds = %entry
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1369
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1371
  %bytes_unconsumed1 = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 23, !dbg !1372
  %8 = load i64, i64* %bytes_unconsumed1, align 8, !dbg !1372
  %call = call i64 @__archive_read_consume(%struct.archive_read* %6, i64 %8), !dbg !1373
  %9 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1374
  %bytes_unconsumed2 = getelementptr inbounds %struct.rar, %struct.rar* %9, i32 0, i32 23, !dbg !1375
  store i64 0, i64* %bytes_unconsumed2, align 8, !dbg !1376
  br label %if.end, !dbg !1377

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1378
  %bytes_remaining = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 24, !dbg !1380
  %11 = load i64, i64* %bytes_remaining, align 8, !dbg !1380
  %cmp3 = icmp sgt i64 %11, 0, !dbg !1381
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !1382

if.then4:                                         ; preds = %if.end
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1383
  %13 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1385
  %bytes_remaining5 = getelementptr inbounds %struct.rar, %struct.rar* %13, i32 0, i32 24, !dbg !1386
  %14 = load i64, i64* %bytes_remaining5, align 8, !dbg !1386
  %call6 = call i64 @__archive_read_consume(%struct.archive_read* %12, i64 %14), !dbg !1387
  store i64 %call6, i64* %bytes_skipped, align 8, !dbg !1388
  %15 = load i64, i64* %bytes_skipped, align 8, !dbg !1389
  %cmp7 = icmp slt i64 %15, 0, !dbg !1391
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !1392

if.then8:                                         ; preds = %if.then4
  store i32 -30, i32* %retval, align 4, !dbg !1393
  br label %return, !dbg !1393

if.end9:                                          ; preds = %if.then4
  br label %if.end10, !dbg !1394

if.end10:                                         ; preds = %if.end9, %if.end
  %16 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1395
  %main_flags = getelementptr inbounds %struct.rar, %struct.rar* %16, i32 0, i32 0, !dbg !1397
  %17 = load i32, i32* %main_flags, align 8, !dbg !1397
  %and = and i32 %17, 1, !dbg !1398
  %tobool = icmp ne i32 %and, 0, !dbg !1398
  br i1 %tobool, label %land.lhs.true, label %if.end25, !dbg !1399

land.lhs.true:                                    ; preds = %if.end10
  %18 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1400
  %file_flags = getelementptr inbounds %struct.rar, %struct.rar* %18, i32 0, i32 6, !dbg !1402
  %19 = load i32, i32* %file_flags, align 8, !dbg !1402
  %and11 = and i32 %19, 2, !dbg !1403
  %tobool12 = icmp ne i32 %and11, 0, !dbg !1403
  br i1 %tobool12, label %if.then13, label %if.end25, !dbg !1404

if.then13:                                        ; preds = %land.lhs.true
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1405
  %21 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1407
  %entry14 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %21, i32 0, i32 1, !dbg !1408
  %22 = load %struct.archive_entry*, %struct.archive_entry** %entry14, align 8, !dbg !1408
  %call15 = call i32 @archive_read_format_rar_read_header(%struct.archive_read* %20, %struct.archive_entry* %22), !dbg !1409
  store i32 %call15, i32* %ret, align 4, !dbg !1410
  %23 = load i32, i32* %ret, align 4, !dbg !1411
  %cmp16 = icmp eq i32 %23, 1, !dbg !1413
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !1414

if.then17:                                        ; preds = %if.then13
  %24 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1415
  %25 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1416
  %entry18 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %25, i32 0, i32 1, !dbg !1417
  %26 = load %struct.archive_entry*, %struct.archive_entry** %entry18, align 8, !dbg !1417
  %call19 = call i32 @archive_read_format_rar_read_header(%struct.archive_read* %24, %struct.archive_entry* %26), !dbg !1418
  store i32 %call19, i32* %ret, align 4, !dbg !1419
  br label %if.end20, !dbg !1420

if.end20:                                         ; preds = %if.then17, %if.then13
  %27 = load i32, i32* %ret, align 4, !dbg !1421
  %cmp21 = icmp ne i32 %27, 0, !dbg !1423
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !1424

if.then22:                                        ; preds = %if.end20
  %28 = load i32, i32* %ret, align 4, !dbg !1425
  store i32 %28, i32* %retval, align 4, !dbg !1426
  br label %return, !dbg !1426

if.end23:                                         ; preds = %if.end20
  %29 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1427
  %call24 = call i32 @archive_read_format_rar_read_data_skip(%struct.archive_read* %29), !dbg !1428
  store i32 %call24, i32* %retval, align 4, !dbg !1429
  br label %return, !dbg !1429

if.end25:                                         ; preds = %land.lhs.true, %if.end10
  store i32 0, i32* %retval, align 4, !dbg !1430
  br label %return, !dbg !1430

return:                                           ; preds = %if.end25, %if.end23, %if.then22, %if.then8
  %30 = load i32, i32* %retval, align 4, !dbg !1431
  ret i32 %30, !dbg !1431
}

; Function Attrs: nounwind uwtable
define internal i64 @archive_read_format_rar_seek_data(%struct.archive_read* %a, i64 %offset, i32 %whence) #0 !dbg !642 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %client_offset = alloca i64, align 8
  %ret = alloca i64, align 8
  %i = alloca i32, align 4
  %rar = alloca %struct.rar*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1432, metadata !677), !dbg !1433
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !1434, metadata !677), !dbg !1435
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !1436, metadata !677), !dbg !1437
  call void @llvm.dbg.declare(metadata i64* %client_offset, metadata !1438, metadata !677), !dbg !1439
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !1440, metadata !677), !dbg !1441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1442, metadata !677), !dbg !1443
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !1444, metadata !677), !dbg !1445
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1446
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1447
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1447
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1448
  %2 = load i8*, i8** %data, align 8, !dbg !1448
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !1449
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !1445
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1450
  %compression_method = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 5, !dbg !1452
  %5 = load i8, i8* %compression_method, align 1, !dbg !1452
  %conv = sext i8 %5 to i32, !dbg !1450
  %cmp = icmp eq i32 %conv, 48, !dbg !1453
  br i1 %cmp, label %if.then, label %if.else223, !dbg !1454

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %whence.addr, align 4, !dbg !1455
  switch i32 %6, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 0, label %sw.bb3
  ], !dbg !1457

sw.bb:                                            ; preds = %if.then
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1458
  %offset_seek = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 28, !dbg !1460
  %8 = load i64, i64* %offset_seek, align 8, !dbg !1460
  store i64 %8, i64* %client_offset, align 8, !dbg !1461
  br label %sw.epilog, !dbg !1462

sw.bb2:                                           ; preds = %if.then
  %9 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1463
  %unp_size = getelementptr inbounds %struct.rar, %struct.rar* %9, i32 0, i32 8, !dbg !1464
  %10 = load i64, i64* %unp_size, align 8, !dbg !1464
  store i64 %10, i64* %client_offset, align 8, !dbg !1465
  br label %sw.epilog, !dbg !1466

sw.bb3:                                           ; preds = %if.then
  br label %sw.default, !dbg !1467

sw.default:                                       ; preds = %if.then, %sw.bb3
  store i64 0, i64* %client_offset, align 8, !dbg !1469
  br label %sw.epilog, !dbg !1470

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %11 = load i64, i64* %offset.addr, align 8, !dbg !1471
  %12 = load i64, i64* %client_offset, align 8, !dbg !1472
  %add = add nsw i64 %12, %11, !dbg !1472
  store i64 %add, i64* %client_offset, align 8, !dbg !1472
  %13 = load i64, i64* %client_offset, align 8, !dbg !1473
  %cmp4 = icmp slt i64 %13, 0, !dbg !1475
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !1476

if.then6:                                         ; preds = %sw.epilog
  store i64 -1, i64* %retval, align 8, !dbg !1477
  br label %return, !dbg !1477

if.else:                                          ; preds = %sw.epilog
  %14 = load i64, i64* %client_offset, align 8, !dbg !1479
  %15 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1481
  %unp_size7 = getelementptr inbounds %struct.rar, %struct.rar* %15, i32 0, i32 8, !dbg !1482
  %16 = load i64, i64* %unp_size7, align 8, !dbg !1482
  %cmp8 = icmp sgt i64 %14, %16, !dbg !1483
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !1484

if.then10:                                        ; preds = %if.else
  %17 = load i64, i64* %client_offset, align 8, !dbg !1485
  %18 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1487
  %offset_seek11 = getelementptr inbounds %struct.rar, %struct.rar* %18, i32 0, i32 28, !dbg !1488
  store i64 %17, i64* %offset_seek11, align 8, !dbg !1489
  %19 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1490
  %unp_size12 = getelementptr inbounds %struct.rar, %struct.rar* %19, i32 0, i32 8, !dbg !1491
  %20 = load i64, i64* %unp_size12, align 8, !dbg !1491
  store i64 %20, i64* %client_offset, align 8, !dbg !1492
  br label %if.end, !dbg !1493

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end
  %21 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1494
  %dbo = getelementptr inbounds %struct.rar, %struct.rar* %21, i32 0, i32 39, !dbg !1495
  %22 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo, align 8, !dbg !1495
  %arrayidx = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %22, i64 0, !dbg !1494
  %start_offset = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx, i32 0, i32 1, !dbg !1496
  %23 = load i64, i64* %start_offset, align 8, !dbg !1496
  %24 = load i64, i64* %client_offset, align 8, !dbg !1497
  %add14 = add nsw i64 %24, %23, !dbg !1497
  store i64 %add14, i64* %client_offset, align 8, !dbg !1497
  store i32 0, i32* %i, align 4, !dbg !1498
  br label %while.cond, !dbg !1499

while.cond:                                       ; preds = %while.body, %if.end13
  %25 = load i32, i32* %i, align 4, !dbg !1500
  %26 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1502
  %cursor = getelementptr inbounds %struct.rar, %struct.rar* %26, i32 0, i32 40, !dbg !1503
  %27 = load i32, i32* %cursor, align 8, !dbg !1503
  %cmp15 = icmp ult i32 %25, %27, !dbg !1504
  br i1 %cmp15, label %while.body, label %while.end, !dbg !1505

while.body:                                       ; preds = %while.cond
  %28 = load i32, i32* %i, align 4, !dbg !1506
  %inc = add i32 %28, 1, !dbg !1506
  store i32 %inc, i32* %i, align 4, !dbg !1506
  %29 = load i32, i32* %i, align 4, !dbg !1508
  %idxprom = zext i32 %29 to i64, !dbg !1509
  %30 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1509
  %dbo17 = getelementptr inbounds %struct.rar, %struct.rar* %30, i32 0, i32 39, !dbg !1510
  %31 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo17, align 8, !dbg !1510
  %arrayidx18 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %31, i64 %idxprom, !dbg !1509
  %start_offset19 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx18, i32 0, i32 1, !dbg !1511
  %32 = load i64, i64* %start_offset19, align 8, !dbg !1511
  %33 = load i32, i32* %i, align 4, !dbg !1512
  %sub = sub i32 %33, 1, !dbg !1513
  %idxprom20 = zext i32 %sub to i64, !dbg !1514
  %34 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1514
  %dbo21 = getelementptr inbounds %struct.rar, %struct.rar* %34, i32 0, i32 39, !dbg !1515
  %35 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo21, align 8, !dbg !1515
  %arrayidx22 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %35, i64 %idxprom20, !dbg !1514
  %end_offset = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx22, i32 0, i32 2, !dbg !1516
  %36 = load i64, i64* %end_offset, align 8, !dbg !1516
  %sub23 = sub nsw i64 %32, %36, !dbg !1517
  %37 = load i64, i64* %client_offset, align 8, !dbg !1518
  %add24 = add nsw i64 %37, %sub23, !dbg !1518
  store i64 %add24, i64* %client_offset, align 8, !dbg !1518
  br label %while.cond, !dbg !1519

while.end:                                        ; preds = %while.cond
  %38 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1521
  %main_flags = getelementptr inbounds %struct.rar, %struct.rar* %38, i32 0, i32 0, !dbg !1523
  %39 = load i32, i32* %main_flags, align 8, !dbg !1523
  %and = and i32 %39, 1, !dbg !1524
  %tobool = icmp ne i32 %and, 0, !dbg !1524
  br i1 %tobool, label %if.then25, label %if.end174, !dbg !1525

if.then25:                                        ; preds = %while.end
  br label %while.body27, !dbg !1526

while.body27:                                     ; preds = %if.then25, %if.then64, %if.then116, %if.end157
  %40 = load i64, i64* %client_offset, align 8, !dbg !1528
  %41 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1531
  %cursor28 = getelementptr inbounds %struct.rar, %struct.rar* %41, i32 0, i32 40, !dbg !1532
  %42 = load i32, i32* %cursor28, align 8, !dbg !1532
  %idxprom29 = zext i32 %42 to i64, !dbg !1533
  %43 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1533
  %dbo30 = getelementptr inbounds %struct.rar, %struct.rar* %43, i32 0, i32 39, !dbg !1534
  %44 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo30, align 8, !dbg !1534
  %arrayidx31 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %44, i64 %idxprom29, !dbg !1533
  %start_offset32 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx31, i32 0, i32 1, !dbg !1535
  %45 = load i64, i64* %start_offset32, align 8, !dbg !1535
  %cmp33 = icmp slt i64 %40, %45, !dbg !1536
  br i1 %cmp33, label %land.lhs.true, label %if.else90, !dbg !1537

land.lhs.true:                                    ; preds = %while.body27
  %46 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1538
  %file_flags = getelementptr inbounds %struct.rar, %struct.rar* %46, i32 0, i32 6, !dbg !1539
  %47 = load i32, i32* %file_flags, align 8, !dbg !1539
  %and35 = and i32 %47, 1, !dbg !1540
  %tobool36 = icmp ne i32 %and35, 0, !dbg !1540
  br i1 %tobool36, label %if.then37, label %if.else90, !dbg !1541

if.then37:                                        ; preds = %land.lhs.true
  %48 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1543
  %cursor38 = getelementptr inbounds %struct.rar, %struct.rar* %48, i32 0, i32 40, !dbg !1546
  %49 = load i32, i32* %cursor38, align 8, !dbg !1546
  %cmp39 = icmp eq i32 %49, 0, !dbg !1547
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !1548

if.then41:                                        ; preds = %if.then37
  %50 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1549
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %50, i32 0, i32 0, !dbg !1551
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0)), !dbg !1552
  store i64 -25, i64* %retval, align 8, !dbg !1553
  br label %return, !dbg !1553

if.end42:                                         ; preds = %if.then37
  %51 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1554
  %cursor43 = getelementptr inbounds %struct.rar, %struct.rar* %51, i32 0, i32 40, !dbg !1555
  %52 = load i32, i32* %cursor43, align 8, !dbg !1556
  %dec = add i32 %52, -1, !dbg !1556
  store i32 %dec, i32* %cursor43, align 8, !dbg !1556
  %53 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1557
  %cursor44 = getelementptr inbounds %struct.rar, %struct.rar* %53, i32 0, i32 40, !dbg !1558
  %54 = load i32, i32* %cursor44, align 8, !dbg !1558
  %add45 = add i32 %54, 1, !dbg !1559
  %idxprom46 = zext i32 %add45 to i64, !dbg !1560
  %55 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1560
  %dbo47 = getelementptr inbounds %struct.rar, %struct.rar* %55, i32 0, i32 39, !dbg !1561
  %56 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo47, align 8, !dbg !1561
  %arrayidx48 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %56, i64 %idxprom46, !dbg !1560
  %start_offset49 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx48, i32 0, i32 1, !dbg !1562
  %57 = load i64, i64* %start_offset49, align 8, !dbg !1562
  %58 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1563
  %cursor50 = getelementptr inbounds %struct.rar, %struct.rar* %58, i32 0, i32 40, !dbg !1564
  %59 = load i32, i32* %cursor50, align 8, !dbg !1564
  %idxprom51 = zext i32 %59 to i64, !dbg !1565
  %60 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1565
  %dbo52 = getelementptr inbounds %struct.rar, %struct.rar* %60, i32 0, i32 39, !dbg !1566
  %61 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo52, align 8, !dbg !1566
  %arrayidx53 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %61, i64 %idxprom51, !dbg !1565
  %end_offset54 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx53, i32 0, i32 2, !dbg !1567
  %62 = load i64, i64* %end_offset54, align 8, !dbg !1567
  %sub55 = sub nsw i64 %57, %62, !dbg !1568
  %63 = load i64, i64* %client_offset, align 8, !dbg !1569
  %sub56 = sub nsw i64 %63, %sub55, !dbg !1569
  store i64 %sub56, i64* %client_offset, align 8, !dbg !1569
  %64 = load i64, i64* %client_offset, align 8, !dbg !1570
  %65 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1572
  %cursor57 = getelementptr inbounds %struct.rar, %struct.rar* %65, i32 0, i32 40, !dbg !1573
  %66 = load i32, i32* %cursor57, align 8, !dbg !1573
  %idxprom58 = zext i32 %66 to i64, !dbg !1574
  %67 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1574
  %dbo59 = getelementptr inbounds %struct.rar, %struct.rar* %67, i32 0, i32 39, !dbg !1575
  %68 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo59, align 8, !dbg !1575
  %arrayidx60 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %68, i64 %idxprom58, !dbg !1574
  %start_offset61 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx60, i32 0, i32 1, !dbg !1576
  %69 = load i64, i64* %start_offset61, align 8, !dbg !1576
  %cmp62 = icmp slt i64 %64, %69, !dbg !1577
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !1578

if.then64:                                        ; preds = %if.end42
  br label %while.body27, !dbg !1579

if.end65:                                         ; preds = %if.end42
  %70 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1580
  %71 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1581
  %cursor66 = getelementptr inbounds %struct.rar, %struct.rar* %71, i32 0, i32 40, !dbg !1582
  %72 = load i32, i32* %cursor66, align 8, !dbg !1582
  %idxprom67 = zext i32 %72 to i64, !dbg !1583
  %73 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1583
  %dbo68 = getelementptr inbounds %struct.rar, %struct.rar* %73, i32 0, i32 39, !dbg !1584
  %74 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo68, align 8, !dbg !1584
  %arrayidx69 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %74, i64 %idxprom67, !dbg !1583
  %start_offset70 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx69, i32 0, i32 1, !dbg !1585
  %75 = load i64, i64* %start_offset70, align 8, !dbg !1585
  %76 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1586
  %cursor71 = getelementptr inbounds %struct.rar, %struct.rar* %76, i32 0, i32 40, !dbg !1587
  %77 = load i32, i32* %cursor71, align 8, !dbg !1587
  %idxprom72 = zext i32 %77 to i64, !dbg !1588
  %78 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1588
  %dbo73 = getelementptr inbounds %struct.rar, %struct.rar* %78, i32 0, i32 39, !dbg !1589
  %79 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo73, align 8, !dbg !1589
  %arrayidx74 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %79, i64 %idxprom72, !dbg !1588
  %header_size = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx74, i32 0, i32 0, !dbg !1590
  %80 = load i64, i64* %header_size, align 8, !dbg !1590
  %sub75 = sub nsw i64 %75, %80, !dbg !1591
  %call = call i64 @__archive_read_seek(%struct.archive_read* %70, i64 %sub75, i32 0), !dbg !1592
  store i64 %call, i64* %ret, align 8, !dbg !1593
  %81 = load i64, i64* %ret, align 8, !dbg !1594
  %cmp76 = icmp slt i64 %81, 0, !dbg !1596
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !1597

if.then78:                                        ; preds = %if.end65
  %82 = load i64, i64* %ret, align 8, !dbg !1598
  store i64 %82, i64* %retval, align 8, !dbg !1599
  br label %return, !dbg !1599

if.end79:                                         ; preds = %if.end65
  %83 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1600
  %84 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1601
  %entry80 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %84, i32 0, i32 1, !dbg !1602
  %85 = load %struct.archive_entry*, %struct.archive_entry** %entry80, align 8, !dbg !1602
  %call81 = call i32 @archive_read_format_rar_read_header(%struct.archive_read* %83, %struct.archive_entry* %85), !dbg !1603
  %conv82 = sext i32 %call81 to i64, !dbg !1603
  store i64 %conv82, i64* %ret, align 8, !dbg !1604
  %86 = load i64, i64* %ret, align 8, !dbg !1605
  %cmp83 = icmp ne i64 %86, 0, !dbg !1607
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !1608

if.then85:                                        ; preds = %if.end79
  %87 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1609
  %archive86 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %87, i32 0, i32 0, !dbg !1611
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive86, i32 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0)), !dbg !1612
  store i64 -25, i64* %retval, align 8, !dbg !1613
  br label %return, !dbg !1613

if.end87:                                         ; preds = %if.end79
  %88 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1614
  %cursor88 = getelementptr inbounds %struct.rar, %struct.rar* %88, i32 0, i32 40, !dbg !1615
  %89 = load i32, i32* %cursor88, align 8, !dbg !1616
  %dec89 = add i32 %89, -1, !dbg !1616
  store i32 %dec89, i32* %cursor88, align 8, !dbg !1616
  br label %while.end173, !dbg !1617

if.else90:                                        ; preds = %land.lhs.true, %while.body27
  %90 = load i64, i64* %client_offset, align 8, !dbg !1618
  %91 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1620
  %cursor91 = getelementptr inbounds %struct.rar, %struct.rar* %91, i32 0, i32 40, !dbg !1621
  %92 = load i32, i32* %cursor91, align 8, !dbg !1621
  %idxprom92 = zext i32 %92 to i64, !dbg !1622
  %93 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1622
  %dbo93 = getelementptr inbounds %struct.rar, %struct.rar* %93, i32 0, i32 39, !dbg !1623
  %94 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo93, align 8, !dbg !1623
  %arrayidx94 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %94, i64 %idxprom92, !dbg !1622
  %end_offset95 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx94, i32 0, i32 2, !dbg !1624
  %95 = load i64, i64* %end_offset95, align 8, !dbg !1624
  %cmp96 = icmp sgt i64 %90, %95, !dbg !1625
  br i1 %cmp96, label %land.lhs.true98, label %if.end171, !dbg !1626

land.lhs.true98:                                  ; preds = %if.else90
  %96 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1627
  %file_flags99 = getelementptr inbounds %struct.rar, %struct.rar* %96, i32 0, i32 6, !dbg !1628
  %97 = load i32, i32* %file_flags99, align 8, !dbg !1628
  %and100 = and i32 %97, 2, !dbg !1629
  %tobool101 = icmp ne i32 %and100, 0, !dbg !1629
  br i1 %tobool101, label %if.then102, label %if.end171, !dbg !1630

if.then102:                                       ; preds = %land.lhs.true98
  %98 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1632
  %cursor103 = getelementptr inbounds %struct.rar, %struct.rar* %98, i32 0, i32 40, !dbg !1634
  %99 = load i32, i32* %cursor103, align 8, !dbg !1635
  %inc104 = add i32 %99, 1, !dbg !1635
  store i32 %inc104, i32* %cursor103, align 8, !dbg !1635
  %100 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1636
  %cursor105 = getelementptr inbounds %struct.rar, %struct.rar* %100, i32 0, i32 40, !dbg !1638
  %101 = load i32, i32* %cursor105, align 8, !dbg !1638
  %102 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1639
  %nodes = getelementptr inbounds %struct.rar, %struct.rar* %102, i32 0, i32 41, !dbg !1640
  %103 = load i32, i32* %nodes, align 4, !dbg !1640
  %cmp106 = icmp ult i32 %101, %103, !dbg !1641
  br i1 %cmp106, label %land.lhs.true108, label %if.end130, !dbg !1642

land.lhs.true108:                                 ; preds = %if.then102
  %104 = load i64, i64* %client_offset, align 8, !dbg !1643
  %105 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1644
  %cursor109 = getelementptr inbounds %struct.rar, %struct.rar* %105, i32 0, i32 40, !dbg !1645
  %106 = load i32, i32* %cursor109, align 8, !dbg !1645
  %idxprom110 = zext i32 %106 to i64, !dbg !1646
  %107 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1646
  %dbo111 = getelementptr inbounds %struct.rar, %struct.rar* %107, i32 0, i32 39, !dbg !1647
  %108 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo111, align 8, !dbg !1647
  %arrayidx112 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %108, i64 %idxprom110, !dbg !1646
  %end_offset113 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx112, i32 0, i32 2, !dbg !1648
  %109 = load i64, i64* %end_offset113, align 8, !dbg !1648
  %cmp114 = icmp sgt i64 %104, %109, !dbg !1649
  br i1 %cmp114, label %if.then116, label %if.end130, !dbg !1650

if.then116:                                       ; preds = %land.lhs.true108
  %110 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1652
  %cursor117 = getelementptr inbounds %struct.rar, %struct.rar* %110, i32 0, i32 40, !dbg !1654
  %111 = load i32, i32* %cursor117, align 8, !dbg !1654
  %idxprom118 = zext i32 %111 to i64, !dbg !1655
  %112 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1655
  %dbo119 = getelementptr inbounds %struct.rar, %struct.rar* %112, i32 0, i32 39, !dbg !1656
  %113 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo119, align 8, !dbg !1656
  %arrayidx120 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %113, i64 %idxprom118, !dbg !1655
  %start_offset121 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx120, i32 0, i32 1, !dbg !1657
  %114 = load i64, i64* %start_offset121, align 8, !dbg !1657
  %115 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1658
  %cursor122 = getelementptr inbounds %struct.rar, %struct.rar* %115, i32 0, i32 40, !dbg !1659
  %116 = load i32, i32* %cursor122, align 8, !dbg !1659
  %sub123 = sub i32 %116, 1, !dbg !1660
  %idxprom124 = zext i32 %sub123 to i64, !dbg !1661
  %117 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1661
  %dbo125 = getelementptr inbounds %struct.rar, %struct.rar* %117, i32 0, i32 39, !dbg !1662
  %118 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo125, align 8, !dbg !1662
  %arrayidx126 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %118, i64 %idxprom124, !dbg !1661
  %end_offset127 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx126, i32 0, i32 2, !dbg !1663
  %119 = load i64, i64* %end_offset127, align 8, !dbg !1663
  %sub128 = sub nsw i64 %114, %119, !dbg !1664
  %120 = load i64, i64* %client_offset, align 8, !dbg !1665
  %add129 = add nsw i64 %120, %sub128, !dbg !1665
  store i64 %add129, i64* %client_offset, align 8, !dbg !1665
  br label %while.body27, !dbg !1666

if.end130:                                        ; preds = %land.lhs.true108, %if.then102
  %121 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1667
  %cursor131 = getelementptr inbounds %struct.rar, %struct.rar* %121, i32 0, i32 40, !dbg !1668
  %122 = load i32, i32* %cursor131, align 8, !dbg !1669
  %dec132 = add i32 %122, -1, !dbg !1669
  store i32 %dec132, i32* %cursor131, align 8, !dbg !1669
  %123 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1670
  %124 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1671
  %cursor133 = getelementptr inbounds %struct.rar, %struct.rar* %124, i32 0, i32 40, !dbg !1672
  %125 = load i32, i32* %cursor133, align 8, !dbg !1672
  %idxprom134 = zext i32 %125 to i64, !dbg !1673
  %126 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1673
  %dbo135 = getelementptr inbounds %struct.rar, %struct.rar* %126, i32 0, i32 39, !dbg !1674
  %127 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo135, align 8, !dbg !1674
  %arrayidx136 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %127, i64 %idxprom134, !dbg !1673
  %end_offset137 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx136, i32 0, i32 2, !dbg !1675
  %128 = load i64, i64* %end_offset137, align 8, !dbg !1675
  %call138 = call i64 @__archive_read_seek(%struct.archive_read* %123, i64 %128, i32 0), !dbg !1676
  store i64 %call138, i64* %ret, align 8, !dbg !1677
  %129 = load i64, i64* %ret, align 8, !dbg !1678
  %cmp139 = icmp slt i64 %129, 0, !dbg !1680
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !1681

if.then141:                                       ; preds = %if.end130
  %130 = load i64, i64* %ret, align 8, !dbg !1682
  store i64 %130, i64* %retval, align 8, !dbg !1683
  br label %return, !dbg !1683

if.end142:                                        ; preds = %if.end130
  %131 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1684
  %132 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1685
  %entry143 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %132, i32 0, i32 1, !dbg !1686
  %133 = load %struct.archive_entry*, %struct.archive_entry** %entry143, align 8, !dbg !1686
  %call144 = call i32 @archive_read_format_rar_read_header(%struct.archive_read* %131, %struct.archive_entry* %133), !dbg !1687
  %conv145 = sext i32 %call144 to i64, !dbg !1687
  store i64 %conv145, i64* %ret, align 8, !dbg !1688
  %134 = load i64, i64* %ret, align 8, !dbg !1689
  %cmp146 = icmp eq i64 %134, 1, !dbg !1691
  br i1 %cmp146, label %if.then148, label %if.end152, !dbg !1692

if.then148:                                       ; preds = %if.end142
  %135 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1693
  %has_endarc_header = getelementptr inbounds %struct.rar, %struct.rar* %135, i32 0, i32 38, !dbg !1695
  store i8 1, i8* %has_endarc_header, align 4, !dbg !1696
  %136 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1697
  %137 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1698
  %entry149 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %137, i32 0, i32 1, !dbg !1699
  %138 = load %struct.archive_entry*, %struct.archive_entry** %entry149, align 8, !dbg !1699
  %call150 = call i32 @archive_read_format_rar_read_header(%struct.archive_read* %136, %struct.archive_entry* %138), !dbg !1700
  %conv151 = sext i32 %call150 to i64, !dbg !1700
  store i64 %conv151, i64* %ret, align 8, !dbg !1701
  br label %if.end152, !dbg !1702

if.end152:                                        ; preds = %if.then148, %if.end142
  %139 = load i64, i64* %ret, align 8, !dbg !1703
  %cmp153 = icmp ne i64 %139, 0, !dbg !1705
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !1706

if.then155:                                       ; preds = %if.end152
  %140 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1707
  %archive156 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %140, i32 0, i32 0, !dbg !1709
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive156, i32 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0)), !dbg !1710
  store i64 -25, i64* %retval, align 8, !dbg !1711
  br label %return, !dbg !1711

if.end157:                                        ; preds = %if.end152
  %141 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1712
  %cursor158 = getelementptr inbounds %struct.rar, %struct.rar* %141, i32 0, i32 40, !dbg !1713
  %142 = load i32, i32* %cursor158, align 8, !dbg !1713
  %idxprom159 = zext i32 %142 to i64, !dbg !1714
  %143 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1714
  %dbo160 = getelementptr inbounds %struct.rar, %struct.rar* %143, i32 0, i32 39, !dbg !1715
  %144 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo160, align 8, !dbg !1715
  %arrayidx161 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %144, i64 %idxprom159, !dbg !1714
  %start_offset162 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx161, i32 0, i32 1, !dbg !1716
  %145 = load i64, i64* %start_offset162, align 8, !dbg !1716
  %146 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1717
  %cursor163 = getelementptr inbounds %struct.rar, %struct.rar* %146, i32 0, i32 40, !dbg !1718
  %147 = load i32, i32* %cursor163, align 8, !dbg !1718
  %sub164 = sub i32 %147, 1, !dbg !1719
  %idxprom165 = zext i32 %sub164 to i64, !dbg !1720
  %148 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1720
  %dbo166 = getelementptr inbounds %struct.rar, %struct.rar* %148, i32 0, i32 39, !dbg !1721
  %149 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo166, align 8, !dbg !1721
  %arrayidx167 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %149, i64 %idxprom165, !dbg !1720
  %end_offset168 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx167, i32 0, i32 2, !dbg !1722
  %150 = load i64, i64* %end_offset168, align 8, !dbg !1722
  %sub169 = sub nsw i64 %145, %150, !dbg !1723
  %151 = load i64, i64* %client_offset, align 8, !dbg !1724
  %add170 = add nsw i64 %151, %sub169, !dbg !1724
  store i64 %add170, i64* %client_offset, align 8, !dbg !1724
  br label %while.body27, !dbg !1725

if.end171:                                        ; preds = %land.lhs.true98, %if.else90
  br label %if.end172

if.end172:                                        ; preds = %if.end171
  br label %while.end173, !dbg !1726

while.end173:                                     ; preds = %if.end172, %if.end87
  br label %if.end174, !dbg !1727

if.end174:                                        ; preds = %while.end173, %while.end
  %152 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1728
  %153 = load i64, i64* %client_offset, align 8, !dbg !1729
  %call175 = call i64 @__archive_read_seek(%struct.archive_read* %152, i64 %153, i32 0), !dbg !1730
  store i64 %call175, i64* %ret, align 8, !dbg !1731
  %154 = load i64, i64* %ret, align 8, !dbg !1732
  %cmp176 = icmp slt i64 %154, 0, !dbg !1734
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !1735

if.then178:                                       ; preds = %if.end174
  %155 = load i64, i64* %ret, align 8, !dbg !1736
  store i64 %155, i64* %retval, align 8, !dbg !1737
  br label %return, !dbg !1737

if.end179:                                        ; preds = %if.end174
  %156 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1738
  %cursor180 = getelementptr inbounds %struct.rar, %struct.rar* %156, i32 0, i32 40, !dbg !1739
  %157 = load i32, i32* %cursor180, align 8, !dbg !1739
  %idxprom181 = zext i32 %157 to i64, !dbg !1740
  %158 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1740
  %dbo182 = getelementptr inbounds %struct.rar, %struct.rar* %158, i32 0, i32 39, !dbg !1741
  %159 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo182, align 8, !dbg !1741
  %arrayidx183 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %159, i64 %idxprom181, !dbg !1740
  %end_offset184 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx183, i32 0, i32 2, !dbg !1742
  %160 = load i64, i64* %end_offset184, align 8, !dbg !1742
  %161 = load i64, i64* %ret, align 8, !dbg !1743
  %sub185 = sub nsw i64 %160, %161, !dbg !1744
  %162 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1745
  %bytes_remaining = getelementptr inbounds %struct.rar, %struct.rar* %162, i32 0, i32 24, !dbg !1746
  store i64 %sub185, i64* %bytes_remaining, align 8, !dbg !1747
  %163 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1748
  %cursor186 = getelementptr inbounds %struct.rar, %struct.rar* %163, i32 0, i32 40, !dbg !1749
  %164 = load i32, i32* %cursor186, align 8, !dbg !1749
  store i32 %164, i32* %i, align 4, !dbg !1750
  br label %while.cond187, !dbg !1751

while.cond187:                                    ; preds = %while.body190, %if.end179
  %165 = load i32, i32* %i, align 4, !dbg !1752
  %cmp188 = icmp ugt i32 %165, 0, !dbg !1753
  br i1 %cmp188, label %while.body190, label %while.end203, !dbg !1754

while.body190:                                    ; preds = %while.cond187
  %166 = load i32, i32* %i, align 4, !dbg !1755
  %dec191 = add i32 %166, -1, !dbg !1755
  store i32 %dec191, i32* %i, align 4, !dbg !1755
  %167 = load i32, i32* %i, align 4, !dbg !1757
  %add192 = add i32 %167, 1, !dbg !1758
  %idxprom193 = zext i32 %add192 to i64, !dbg !1759
  %168 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1759
  %dbo194 = getelementptr inbounds %struct.rar, %struct.rar* %168, i32 0, i32 39, !dbg !1760
  %169 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo194, align 8, !dbg !1760
  %arrayidx195 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %169, i64 %idxprom193, !dbg !1759
  %start_offset196 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx195, i32 0, i32 1, !dbg !1761
  %170 = load i64, i64* %start_offset196, align 8, !dbg !1761
  %171 = load i32, i32* %i, align 4, !dbg !1762
  %idxprom197 = zext i32 %171 to i64, !dbg !1763
  %172 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1763
  %dbo198 = getelementptr inbounds %struct.rar, %struct.rar* %172, i32 0, i32 39, !dbg !1764
  %173 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo198, align 8, !dbg !1764
  %arrayidx199 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %173, i64 %idxprom197, !dbg !1763
  %end_offset200 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx199, i32 0, i32 2, !dbg !1765
  %174 = load i64, i64* %end_offset200, align 8, !dbg !1765
  %sub201 = sub nsw i64 %170, %174, !dbg !1766
  %175 = load i64, i64* %ret, align 8, !dbg !1767
  %sub202 = sub nsw i64 %175, %sub201, !dbg !1767
  store i64 %sub202, i64* %ret, align 8, !dbg !1767
  br label %while.cond187, !dbg !1768

while.end203:                                     ; preds = %while.cond187
  %176 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1769
  %dbo204 = getelementptr inbounds %struct.rar, %struct.rar* %176, i32 0, i32 39, !dbg !1770
  %177 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo204, align 8, !dbg !1770
  %arrayidx205 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %177, i64 0, !dbg !1769
  %start_offset206 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx205, i32 0, i32 1, !dbg !1771
  %178 = load i64, i64* %start_offset206, align 8, !dbg !1771
  %179 = load i64, i64* %ret, align 8, !dbg !1772
  %sub207 = sub nsw i64 %179, %178, !dbg !1772
  store i64 %sub207, i64* %ret, align 8, !dbg !1772
  %180 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1773
  %archive208 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %180, i32 0, i32 0, !dbg !1774
  call void @__archive_reset_read_data(%struct.archive* %archive208), !dbg !1775
  %181 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1776
  %bytes_unconsumed = getelementptr inbounds %struct.rar, %struct.rar* %181, i32 0, i32 23, !dbg !1777
  store i64 0, i64* %bytes_unconsumed, align 8, !dbg !1778
  %182 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1779
  %offset209 = getelementptr inbounds %struct.rar, %struct.rar* %182, i32 0, i32 26, !dbg !1780
  store i64 0, i64* %offset209, align 8, !dbg !1781
  %183 = load i64, i64* %ret, align 8, !dbg !1782
  %184 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1784
  %unp_size210 = getelementptr inbounds %struct.rar, %struct.rar* %184, i32 0, i32 8, !dbg !1785
  %185 = load i64, i64* %unp_size210, align 8, !dbg !1785
  %cmp211 = icmp eq i64 %183, %185, !dbg !1786
  br i1 %cmp211, label %land.lhs.true213, label %if.end220, !dbg !1787

land.lhs.true213:                                 ; preds = %while.end203
  %186 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1788
  %offset_seek214 = getelementptr inbounds %struct.rar, %struct.rar* %186, i32 0, i32 28, !dbg !1790
  %187 = load i64, i64* %offset_seek214, align 8, !dbg !1790
  %188 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1791
  %unp_size215 = getelementptr inbounds %struct.rar, %struct.rar* %188, i32 0, i32 8, !dbg !1792
  %189 = load i64, i64* %unp_size215, align 8, !dbg !1792
  %cmp216 = icmp sgt i64 %187, %189, !dbg !1793
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !1794

if.then218:                                       ; preds = %land.lhs.true213
  %190 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1795
  %offset_seek219 = getelementptr inbounds %struct.rar, %struct.rar* %190, i32 0, i32 28, !dbg !1796
  %191 = load i64, i64* %offset_seek219, align 8, !dbg !1796
  store i64 %191, i64* %retval, align 8, !dbg !1797
  br label %return, !dbg !1797

if.end220:                                        ; preds = %land.lhs.true213, %while.end203
  %192 = load i64, i64* %ret, align 8, !dbg !1798
  %193 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1799
  %offset_seek221 = getelementptr inbounds %struct.rar, %struct.rar* %193, i32 0, i32 28, !dbg !1800
  store i64 %192, i64* %offset_seek221, align 8, !dbg !1801
  %194 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1802
  %offset_seek222 = getelementptr inbounds %struct.rar, %struct.rar* %194, i32 0, i32 28, !dbg !1803
  %195 = load i64, i64* %offset_seek222, align 8, !dbg !1803
  store i64 %195, i64* %retval, align 8, !dbg !1804
  br label %return, !dbg !1804

if.else223:                                       ; preds = %entry
  %196 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1805
  %archive224 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %196, i32 0, i32 0, !dbg !1807
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive224, i32 -1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.51, i32 0, i32 0)), !dbg !1808
  br label %if.end225

if.end225:                                        ; preds = %if.else223
  store i64 -25, i64* %retval, align 8, !dbg !1809
  br label %return, !dbg !1809

return:                                           ; preds = %if.end225, %if.end220, %if.then218, %if.then178, %if.then155, %if.then141, %if.then85, %if.then78, %if.then41, %if.then6
  %197 = load i64, i64* %retval, align 8, !dbg !1810
  ret i64 %197, !dbg !1810
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_rar_cleanup(%struct.archive_read* %a) #0 !dbg !643 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %rar = alloca %struct.rar*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1811, metadata !677), !dbg !1812
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !1813, metadata !677), !dbg !1814
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1815
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1816
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1816
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1817
  %2 = load i8*, i8** %data, align 8, !dbg !1817
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !1818
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !1819
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1820
  call void @free_codes(%struct.archive_read* %4), !dbg !1821
  %5 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1822
  %filename = getelementptr inbounds %struct.rar, %struct.rar* %5, i32 0, i32 12, !dbg !1823
  %6 = load i8*, i8** %filename, align 8, !dbg !1823
  call void @free(i8* %6) #8, !dbg !1824
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1825
  %filename_save = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 13, !dbg !1826
  %8 = load i8*, i8** %filename_save, align 8, !dbg !1826
  call void @free(i8* %8) #8, !dbg !1827
  %9 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1828
  %dbo = getelementptr inbounds %struct.rar, %struct.rar* %9, i32 0, i32 39, !dbg !1829
  %10 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo, align 8, !dbg !1829
  %11 = bitcast %struct.data_block_offsets* %10 to i8*, !dbg !1828
  call void @free(i8* %11) #8, !dbg !1830
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1831
  %unp_buffer = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 32, !dbg !1832
  %13 = load i8*, i8** %unp_buffer, align 8, !dbg !1832
  call void @free(i8* %13) #8, !dbg !1833
  %14 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1834
  %lzss = getelementptr inbounds %struct.rar, %struct.rar* %14, i32 0, i32 47, !dbg !1835
  %window = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss, i32 0, i32 0, !dbg !1836
  %15 = load i8*, i8** %window, align 8, !dbg !1836
  call void @free(i8* %15) #8, !dbg !1837
  %16 = load void (%struct.CPpmd7*, %struct.ISzAlloc*)*, void (%struct.CPpmd7*, %struct.ISzAlloc*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 2), align 8, !dbg !1838
  %17 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1839
  %ppmd7_context = getelementptr inbounds %struct.rar, %struct.rar* %17, i32 0, i32 60, !dbg !1840
  call void %16(%struct.CPpmd7* %ppmd7_context, %struct.ISzAlloc* @g_szalloc), !dbg !1841
  %18 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1842
  %19 = bitcast %struct.rar* %18 to i8*, !dbg !1842
  call void @free(i8* %19) #8, !dbg !1843
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1844
  %format1 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %20, i32 0, i32 13, !dbg !1845
  %21 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format1, align 8, !dbg !1845
  %data2 = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %21, i32 0, i32 0, !dbg !1846
  store i8* null, i8** %data2, align 8, !dbg !1847
  ret i32 0, !dbg !1848
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_support_format_rar_capabilities(%struct.archive_read* %a) #0 !dbg !537 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1849, metadata !677), !dbg !1850
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1851
  ret i32 3, !dbg !1852
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_rar_has_encrypted_entries(%struct.archive_read* %_a) #0 !dbg !538 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive_read*, align 8
  %rar = alloca %struct.rar*, align 8
  store %struct.archive_read* %_a, %struct.archive_read** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %_a.addr, metadata !1853, metadata !677), !dbg !1854
  %0 = load %struct.archive_read*, %struct.archive_read** %_a.addr, align 8, !dbg !1855
  %tobool = icmp ne %struct.archive_read* %0, null, !dbg !1855
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !1857

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.archive_read*, %struct.archive_read** %_a.addr, align 8, !dbg !1858
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 13, !dbg !1860
  %2 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1860
  %tobool1 = icmp ne %struct.archive_format_descriptor* %2, null, !dbg !1858
  br i1 %tobool1, label %if.then, label %if.end5, !dbg !1861

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !1862, metadata !677), !dbg !1864
  %3 = load %struct.archive_read*, %struct.archive_read** %_a.addr, align 8, !dbg !1865
  %format2 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %3, i32 0, i32 13, !dbg !1866
  %4 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format2, align 8, !dbg !1866
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %4, i32 0, i32 0, !dbg !1867
  %5 = load i8*, i8** %data, align 8, !dbg !1867
  %6 = bitcast i8* %5 to %struct.rar*, !dbg !1868
  store %struct.rar* %6, %struct.rar** %rar, align 8, !dbg !1864
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1869
  %tobool3 = icmp ne %struct.rar* %7, null, !dbg !1869
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !1871

if.then4:                                         ; preds = %if.then
  %8 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !1872
  %has_encrypted_entries = getelementptr inbounds %struct.rar, %struct.rar* %8, i32 0, i32 69, !dbg !1874
  %9 = load i32, i32* %has_encrypted_entries, align 8, !dbg !1874
  store i32 %9, i32* %retval, align 4, !dbg !1875
  br label %return, !dbg !1875

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !1876

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  store i32 -1, i32* %retval, align 4, !dbg !1877
  br label %return, !dbg !1877

return:                                           ; preds = %if.end5, %if.then4
  %10 = load i32, i32* %retval, align 4, !dbg !1878
  ret i32 %10, !dbg !1878
}

; Function Attrs: nounwind
declare void @free(i8*) #3

declare i8* @__archive_read_ahead(%struct.archive_read*, i64, i64*) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

declare %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @skip_sfx(%struct.archive_read* %a) #0 !dbg !542 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %h = alloca i8*, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %skip = alloca i64, align 8
  %total = alloca i64, align 8
  %bytes = alloca i64, align 8
  %window = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1879, metadata !677), !dbg !1880
  call void @llvm.dbg.declare(metadata i8** %h, metadata !1881, metadata !677), !dbg !1882
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1883, metadata !677), !dbg !1884
  call void @llvm.dbg.declare(metadata i8** %q, metadata !1885, metadata !677), !dbg !1886
  call void @llvm.dbg.declare(metadata i64* %skip, metadata !1887, metadata !677), !dbg !1888
  call void @llvm.dbg.declare(metadata i64* %total, metadata !1889, metadata !677), !dbg !1890
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !1891, metadata !677), !dbg !1892
  call void @llvm.dbg.declare(metadata i64* %window, metadata !1893, metadata !677), !dbg !1894
  store i64 0, i64* %total, align 8, !dbg !1895
  store i64 4096, i64* %window, align 8, !dbg !1896
  br label %while.cond, !dbg !1897

while.cond:                                       ; preds = %while.end, %if.end, %entry
  %0 = load i64, i64* %total, align 8, !dbg !1898
  %1 = load i64, i64* %window, align 8, !dbg !1900
  %add = add i64 %0, %1, !dbg !1901
  %cmp = icmp ule i64 %add, 131072, !dbg !1902
  br i1 %cmp, label %while.body, label %while.end23, !dbg !1903

while.body:                                       ; preds = %while.cond
  %2 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1904
  %3 = load i64, i64* %window, align 8, !dbg !1906
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %2, i64 %3, i64* %bytes), !dbg !1907
  store i8* %call, i8** %h, align 8, !dbg !1908
  %4 = load i8*, i8** %h, align 8, !dbg !1909
  %cmp1 = icmp eq i8* %4, null, !dbg !1911
  br i1 %cmp1, label %if.then, label %if.end4, !dbg !1912

if.then:                                          ; preds = %while.body
  %5 = load i64, i64* %window, align 8, !dbg !1913
  %shr = ashr i64 %5, 1, !dbg !1913
  store i64 %shr, i64* %window, align 8, !dbg !1913
  %6 = load i64, i64* %window, align 8, !dbg !1915
  %cmp2 = icmp slt i64 %6, 64, !dbg !1917
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !1918

if.then3:                                         ; preds = %if.then
  br label %fatal, !dbg !1919

if.end:                                           ; preds = %if.then
  br label %while.cond, !dbg !1920

if.end4:                                          ; preds = %while.body
  %7 = load i64, i64* %bytes, align 8, !dbg !1921
  %cmp5 = icmp slt i64 %7, 64, !dbg !1923
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !1924

if.then6:                                         ; preds = %if.end4
  br label %fatal, !dbg !1925

if.end7:                                          ; preds = %if.end4
  %8 = load i8*, i8** %h, align 8, !dbg !1926
  store i8* %8, i8** %p, align 8, !dbg !1927
  %9 = load i8*, i8** %p, align 8, !dbg !1928
  %10 = load i64, i64* %bytes, align 8, !dbg !1929
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %10, !dbg !1930
  store i8* %add.ptr, i8** %q, align 8, !dbg !1931
  br label %while.cond8, !dbg !1932

while.cond8:                                      ; preds = %if.end16, %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !1933
  %add.ptr9 = getelementptr inbounds i8, i8* %11, i64 7, !dbg !1935
  %12 = load i8*, i8** %q, align 8, !dbg !1936
  %cmp10 = icmp ult i8* %add.ptr9, %12, !dbg !1937
  br i1 %cmp10, label %while.body11, label %while.end, !dbg !1938

while.body11:                                     ; preds = %while.cond8
  %13 = load i8*, i8** %p, align 8, !dbg !1939
  %call12 = call i32 @memcmp(i8* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i64 7) #9, !dbg !1942
  %cmp13 = icmp eq i32 %call12, 0, !dbg !1943
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !1944

if.then14:                                        ; preds = %while.body11
  %14 = load i8*, i8** %p, align 8, !dbg !1945
  %15 = load i8*, i8** %h, align 8, !dbg !1947
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64, !dbg !1948
  %sub.ptr.rhs.cast = ptrtoint i8* %15 to i64, !dbg !1948
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1948
  store i64 %sub.ptr.sub, i64* %skip, align 8, !dbg !1949
  %16 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1950
  %17 = load i64, i64* %skip, align 8, !dbg !1951
  %call15 = call i64 @__archive_read_consume(%struct.archive_read* %16, i64 %17), !dbg !1952
  store i32 0, i32* %retval, align 4, !dbg !1953
  br label %return, !dbg !1953

if.end16:                                         ; preds = %while.body11
  %18 = load i8*, i8** %p, align 8, !dbg !1954
  %add.ptr17 = getelementptr inbounds i8, i8* %18, i64 16, !dbg !1954
  store i8* %add.ptr17, i8** %p, align 8, !dbg !1954
  br label %while.cond8, !dbg !1955

while.end:                                        ; preds = %while.cond8
  %19 = load i8*, i8** %p, align 8, !dbg !1957
  %20 = load i8*, i8** %h, align 8, !dbg !1958
  %sub.ptr.lhs.cast18 = ptrtoint i8* %19 to i64, !dbg !1959
  %sub.ptr.rhs.cast19 = ptrtoint i8* %20 to i64, !dbg !1959
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !1959
  store i64 %sub.ptr.sub20, i64* %skip, align 8, !dbg !1960
  %21 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1961
  %22 = load i64, i64* %skip, align 8, !dbg !1962
  %call21 = call i64 @__archive_read_consume(%struct.archive_read* %21, i64 %22), !dbg !1963
  %23 = load i64, i64* %skip, align 8, !dbg !1964
  %24 = load i64, i64* %total, align 8, !dbg !1965
  %add22 = add i64 %24, %23, !dbg !1965
  store i64 %add22, i64* %total, align 8, !dbg !1965
  br label %while.cond, !dbg !1966

while.end23:                                      ; preds = %while.cond
  br label %fatal, !dbg !1968

fatal:                                            ; preds = %while.end23, %if.then6, %if.then3
  %25 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1970
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %25, i32 0, i32 0, !dbg !1971
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0)), !dbg !1972
  store i32 -30, i32* %retval, align 4, !dbg !1973
  br label %return, !dbg !1973

return:                                           ; preds = %fatal, %if.then14
  %26 = load i32, i32* %retval, align 4, !dbg !1974
  ret i32 %26, !dbg !1974
}

declare i64 @__archive_read_consume(%struct.archive_read*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @archive_le16dec(i8* %pp) #5 !dbg !543 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !1975, metadata !677), !dbg !1976
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1977, metadata !677), !dbg !1978
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !1979
  store i8* %0, i8** %p, align 8, !dbg !1978
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !1980, metadata !677), !dbg !1981
  %1 = load i8*, i8** %p, align 8, !dbg !1982
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1982
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1982
  %conv = zext i8 %2 to i32, !dbg !1982
  store i32 %conv, i32* %p1, align 4, !dbg !1981
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !1983, metadata !677), !dbg !1984
  %3 = load i8*, i8** %p, align 8, !dbg !1985
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !1985
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !1985
  %conv2 = zext i8 %4 to i32, !dbg !1985
  store i32 %conv2, i32* %p0, align 4, !dbg !1984
  %5 = load i32, i32* %p1, align 4, !dbg !1986
  %shl = shl i32 %5, 8, !dbg !1987
  %6 = load i32, i32* %p0, align 4, !dbg !1988
  %or = or i32 %shl, %6, !dbg !1989
  %conv3 = trunc i32 %or to i16, !dbg !1990
  ret i16 %conv3, !dbg !1991
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

declare void @archive_entry_set_is_metadata_encrypted(%struct.archive_entry*, i8 signext) #2

declare void @archive_entry_set_is_data_encrypted(%struct.archive_entry*, i8 signext) #2

declare i64 @cm_zlib_crc32(i64, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_header(%struct.archive_read* %a, %struct.archive_entry* %entry1, i8 signext %head_type) #0 !dbg !548 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %head_type.addr = alloca i8, align 1
  %h = alloca i8*, align 8
  %p = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %rar = alloca %struct.rar*, align 8
  %rar_header = alloca %struct.rar_header, align 1
  %file_header = alloca %struct.rar_file_header, align 1
  %header_size = alloca i64, align 8
  %filename_size = alloca i32, align 4
  %end = alloca i32, align 4
  %filename = alloca i8*, align 8
  %strp = alloca i8*, align 8
  %packed_size = alloca [8 x i8], align 1
  %unp_size = alloca [8 x i8], align 1
  %ttime = alloca i32, align 4
  %sconv = alloca %struct.archive_string_conv*, align 8
  %fn_sconv = alloca %struct.archive_string_conv*, align 8
  %crc32_val = alloca i64, align 8
  %ret = alloca i32, align 4
  %ret2 = alloca i32, align 4
  %distance = alloca i64, align 8
  %newptr = alloca i8*, align 8
  %newsize = alloca i64, align 8
  %highbyte = alloca i8, align 1
  %flagbits = alloca i8, align 1
  %flagbyte = alloca i8, align 1
  %fn_end = alloca i32, align 4
  %offset = alloca i32, align 4
  %extra = alloca i8, align 1
  %high = alloca i8, align 1
  %length = alloca i8, align 1
  %cp = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1992, metadata !677), !dbg !1993
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !1994, metadata !677), !dbg !1995
  store i8 %head_type, i8* %head_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %head_type.addr, metadata !1996, metadata !677), !dbg !1997
  call void @llvm.dbg.declare(metadata i8** %h, metadata !1998, metadata !677), !dbg !1999
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2000, metadata !677), !dbg !2001
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !2002, metadata !677), !dbg !2003
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !2004, metadata !677), !dbg !2005
  call void @llvm.dbg.declare(metadata %struct.rar_header* %rar_header, metadata !2006, metadata !677), !dbg !2013
  call void @llvm.dbg.declare(metadata %struct.rar_file_header* %file_header, metadata !2014, metadata !677), !dbg !2026
  call void @llvm.dbg.declare(metadata i64* %header_size, metadata !2027, metadata !677), !dbg !2028
  call void @llvm.dbg.declare(metadata i32* %filename_size, metadata !2029, metadata !677), !dbg !2030
  call void @llvm.dbg.declare(metadata i32* %end, metadata !2031, metadata !677), !dbg !2032
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !2033, metadata !677), !dbg !2034
  call void @llvm.dbg.declare(metadata i8** %strp, metadata !2035, metadata !677), !dbg !2036
  call void @llvm.dbg.declare(metadata [8 x i8]* %packed_size, metadata !2037, metadata !677), !dbg !2038
  call void @llvm.dbg.declare(metadata [8 x i8]* %unp_size, metadata !2039, metadata !677), !dbg !2040
  call void @llvm.dbg.declare(metadata i32* %ttime, metadata !2041, metadata !677), !dbg !2042
  call void @llvm.dbg.declare(metadata %struct.archive_string_conv** %sconv, metadata !2043, metadata !677), !dbg !2044
  call void @llvm.dbg.declare(metadata %struct.archive_string_conv** %fn_sconv, metadata !2045, metadata !677), !dbg !2046
  call void @llvm.dbg.declare(metadata i64* %crc32_val, metadata !2047, metadata !677), !dbg !2048
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2049, metadata !677), !dbg !2050
  store i32 0, i32* %ret, align 4, !dbg !2050
  call void @llvm.dbg.declare(metadata i32* %ret2, metadata !2051, metadata !677), !dbg !2052
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2053
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !2054
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !2054
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !2055
  %2 = load i8*, i8** %data, align 8, !dbg !2055
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !2056
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !2057
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2058
  %opt_sconv = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 65, !dbg !2059
  %5 = load %struct.archive_string_conv*, %struct.archive_string_conv** %opt_sconv, align 8, !dbg !2059
  store %struct.archive_string_conv* %5, %struct.archive_string_conv** %sconv, align 8, !dbg !2060
  %6 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2061
  %cmp = icmp eq %struct.archive_string_conv* %6, null, !dbg !2063
  br i1 %cmp, label %if.then, label %if.end5, !dbg !2064

if.then:                                          ; preds = %entry
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2065
  %init_default_conversion = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 63, !dbg !2068
  %8 = load i32, i32* %init_default_conversion, align 8, !dbg !2068
  %tobool = icmp ne i32 %8, 0, !dbg !2065
  br i1 %tobool, label %if.end, label %if.then2, !dbg !2069

if.then2:                                         ; preds = %if.then
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2070
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %9, i32 0, i32 0, !dbg !2072
  %call = call %struct.archive_string_conv* @archive_string_default_conversion_for_read(%struct.archive* %archive), !dbg !2073
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2074
  %sconv_default = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 64, !dbg !2075
  store %struct.archive_string_conv* %call, %struct.archive_string_conv** %sconv_default, align 8, !dbg !2076
  %11 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2077
  %init_default_conversion3 = getelementptr inbounds %struct.rar, %struct.rar* %11, i32 0, i32 63, !dbg !2078
  store i32 1, i32* %init_default_conversion3, align 8, !dbg !2079
  br label %if.end, !dbg !2080

if.end:                                           ; preds = %if.then2, %if.then
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2081
  %sconv_default4 = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 64, !dbg !2082
  %13 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_default4, align 8, !dbg !2082
  store %struct.archive_string_conv* %13, %struct.archive_string_conv** %sconv, align 8, !dbg !2083
  br label %if.end5, !dbg !2084

if.end5:                                          ; preds = %if.end, %entry
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2085
  %call6 = call i8* @__archive_read_ahead(%struct.archive_read* %14, i64 7, i64* null), !dbg !2087
  store i8* %call6, i8** %h, align 8, !dbg !2088
  %cmp7 = icmp eq i8* %call6, null, !dbg !2089
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2090

if.then8:                                         ; preds = %if.end5
  store i32 -30, i32* %retval, align 4, !dbg !2091
  br label %return, !dbg !2091

if.end9:                                          ; preds = %if.end5
  %15 = load i8*, i8** %h, align 8, !dbg !2092
  store i8* %15, i8** %p, align 8, !dbg !2093
  %16 = bitcast %struct.rar_header* %rar_header to i8*, !dbg !2094
  %17 = load i8*, i8** %p, align 8, !dbg !2095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 7, i32 1, i1 false), !dbg !2094
  %flags = getelementptr inbounds %struct.rar_header, %struct.rar_header* %rar_header, i32 0, i32 2, !dbg !2096
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %flags, i32 0, i32 0, !dbg !2097
  %call10 = call zeroext i16 @archive_le16dec(i8* %arraydecay), !dbg !2098
  %conv = zext i16 %call10 to i32, !dbg !2098
  %18 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2099
  %file_flags = getelementptr inbounds %struct.rar, %struct.rar* %18, i32 0, i32 6, !dbg !2100
  store i32 %conv, i32* %file_flags, align 8, !dbg !2101
  %size = getelementptr inbounds %struct.rar_header, %struct.rar_header* %rar_header, i32 0, i32 3, !dbg !2102
  %arraydecay11 = getelementptr inbounds [2 x i8], [2 x i8]* %size, i32 0, i32 0, !dbg !2103
  %call12 = call zeroext i16 @archive_le16dec(i8* %arraydecay11), !dbg !2104
  %conv13 = zext i16 %call12 to i64, !dbg !2104
  store i64 %conv13, i64* %header_size, align 8, !dbg !2105
  %19 = load i64, i64* %header_size, align 8, !dbg !2106
  %cmp14 = icmp slt i64 %19, 32, !dbg !2108
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !2109

if.then16:                                        ; preds = %if.end9
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2110
  %archive17 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %20, i32 0, i32 0, !dbg !2112
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive17, i32 84, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0)), !dbg !2113
  store i32 -30, i32* %retval, align 4, !dbg !2114
  br label %return, !dbg !2114

if.end18:                                         ; preds = %if.end9
  %21 = load i8*, i8** %p, align 8, !dbg !2115
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 2, !dbg !2116
  %call19 = call i64 @cm_zlib_crc32(i64 0, i8* %add.ptr, i32 5), !dbg !2117
  store i64 %call19, i64* %crc32_val, align 8, !dbg !2118
  %22 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2119
  %call20 = call i64 @__archive_read_consume(%struct.archive_read* %22, i64 7), !dbg !2120
  %23 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2121
  %file_flags21 = getelementptr inbounds %struct.rar, %struct.rar* %23, i32 0, i32 6, !dbg !2123
  %24 = load i32, i32* %file_flags21, align 8, !dbg !2123
  %and = and i32 %24, 16, !dbg !2124
  %tobool22 = icmp ne i32 %and, 0, !dbg !2124
  br i1 %tobool22, label %if.else, label %if.then23, !dbg !2125

if.then23:                                        ; preds = %if.end18
  %25 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2126
  %compression_method = getelementptr inbounds %struct.rar, %struct.rar* %25, i32 0, i32 5, !dbg !2128
  store i8 0, i8* %compression_method, align 1, !dbg !2129
  %26 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2130
  %packed_size24 = getelementptr inbounds %struct.rar, %struct.rar* %26, i32 0, i32 7, !dbg !2131
  store i64 0, i64* %packed_size24, align 8, !dbg !2132
  %27 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2133
  %unp_size25 = getelementptr inbounds %struct.rar, %struct.rar* %27, i32 0, i32 8, !dbg !2134
  store i64 0, i64* %unp_size25, align 8, !dbg !2135
  %28 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2136
  %mtime = getelementptr inbounds %struct.rar, %struct.rar* %28, i32 0, i32 9, !dbg !2137
  store i64 0, i64* %mtime, align 8, !dbg !2138
  %29 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2139
  %ctime = getelementptr inbounds %struct.rar, %struct.rar* %29, i32 0, i32 19, !dbg !2140
  store i64 0, i64* %ctime, align 8, !dbg !2141
  %30 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2142
  %atime = getelementptr inbounds %struct.rar, %struct.rar* %30, i32 0, i32 17, !dbg !2143
  store i64 0, i64* %atime, align 8, !dbg !2144
  %31 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2145
  %arctime = getelementptr inbounds %struct.rar, %struct.rar* %31, i32 0, i32 21, !dbg !2146
  store i64 0, i64* %arctime, align 8, !dbg !2147
  %32 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2148
  %mode = getelementptr inbounds %struct.rar, %struct.rar* %32, i32 0, i32 11, !dbg !2149
  store i32 0, i32* %mode, align 8, !dbg !2150
  %33 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2151
  %salt = getelementptr inbounds %struct.rar, %struct.rar* %33, i32 0, i32 16, !dbg !2152
  %34 = bitcast [8 x i8]* %salt to i8*, !dbg !2153
  call void @llvm.memset.p0i8.i64(i8* %34, i8 0, i64 8, i32 8, i1 false), !dbg !2153
  %35 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2154
  %atime26 = getelementptr inbounds %struct.rar, %struct.rar* %35, i32 0, i32 17, !dbg !2155
  store i64 0, i64* %atime26, align 8, !dbg !2156
  %36 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2157
  %ansec = getelementptr inbounds %struct.rar, %struct.rar* %36, i32 0, i32 18, !dbg !2158
  store i64 0, i64* %ansec, align 8, !dbg !2159
  %37 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2160
  %ctime27 = getelementptr inbounds %struct.rar, %struct.rar* %37, i32 0, i32 19, !dbg !2161
  store i64 0, i64* %ctime27, align 8, !dbg !2162
  %38 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2163
  %cnsec = getelementptr inbounds %struct.rar, %struct.rar* %38, i32 0, i32 20, !dbg !2164
  store i64 0, i64* %cnsec, align 8, !dbg !2165
  %39 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2166
  %mtime28 = getelementptr inbounds %struct.rar, %struct.rar* %39, i32 0, i32 9, !dbg !2167
  store i64 0, i64* %mtime28, align 8, !dbg !2168
  %40 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2169
  %mnsec = getelementptr inbounds %struct.rar, %struct.rar* %40, i32 0, i32 10, !dbg !2170
  store i64 0, i64* %mnsec, align 8, !dbg !2171
  %41 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2172
  %arctime29 = getelementptr inbounds %struct.rar, %struct.rar* %41, i32 0, i32 21, !dbg !2173
  store i64 0, i64* %arctime29, align 8, !dbg !2174
  %42 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2175
  %arcnsec = getelementptr inbounds %struct.rar, %struct.rar* %42, i32 0, i32 22, !dbg !2176
  store i64 0, i64* %arcnsec, align 8, !dbg !2177
  br label %if.end31, !dbg !2178

if.else:                                          ; preds = %if.end18
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2179
  %archive30 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %43, i32 0, i32 0, !dbg !2181
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive30, i32 84, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i32 0, i32 0)), !dbg !2182
  store i32 -30, i32* %retval, align 4, !dbg !2183
  br label %return, !dbg !2183

if.end31:                                         ; preds = %if.then23
  %44 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2184
  %45 = load i64, i64* %header_size, align 8, !dbg !2186
  %sub = sub i64 %45, 7, !dbg !2187
  %call32 = call i8* @__archive_read_ahead(%struct.archive_read* %44, i64 %sub, i64* null), !dbg !2188
  store i8* %call32, i8** %h, align 8, !dbg !2189
  %cmp33 = icmp eq i8* %call32, null, !dbg !2190
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !2191

if.then35:                                        ; preds = %if.end31
  store i32 -30, i32* %retval, align 4, !dbg !2192
  br label %return, !dbg !2192

if.end36:                                         ; preds = %if.end31
  %46 = load i64, i64* %crc32_val, align 8, !dbg !2193
  %47 = load i8*, i8** %h, align 8, !dbg !2194
  %48 = load i64, i64* %header_size, align 8, !dbg !2195
  %sub37 = sub nsw i64 %48, 7, !dbg !2196
  %conv38 = trunc i64 %sub37 to i32, !dbg !2197
  %call39 = call i64 @cm_zlib_crc32(i64 %46, i8* %47, i32 %conv38), !dbg !2198
  store i64 %call39, i64* %crc32_val, align 8, !dbg !2199
  %49 = load i64, i64* %crc32_val, align 8, !dbg !2200
  %and40 = and i64 %49, 65535, !dbg !2202
  %crc = getelementptr inbounds %struct.rar_header, %struct.rar_header* %rar_header, i32 0, i32 0, !dbg !2203
  %arraydecay41 = getelementptr inbounds [2 x i8], [2 x i8]* %crc, i32 0, i32 0, !dbg !2204
  %call42 = call zeroext i16 @archive_le16dec(i8* %arraydecay41), !dbg !2205
  %conv43 = zext i16 %call42 to i64, !dbg !2205
  %cmp44 = icmp ne i64 %and40, %conv43, !dbg !2206
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !2207

if.then46:                                        ; preds = %if.end36
  %50 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2208
  %archive47 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %50, i32 0, i32 0, !dbg !2210
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive47, i32 84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0)), !dbg !2211
  store i32 -30, i32* %retval, align 4, !dbg !2212
  br label %return, !dbg !2212

if.end48:                                         ; preds = %if.end36
  %51 = load i8*, i8** %h, align 8, !dbg !2213
  store i8* %51, i8** %p, align 8, !dbg !2214
  %52 = load i8*, i8** %p, align 8, !dbg !2215
  %53 = load i64, i64* %header_size, align 8, !dbg !2216
  %add.ptr49 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !2217
  %add.ptr50 = getelementptr inbounds i8, i8* %add.ptr49, i64 -7, !dbg !2218
  store i8* %add.ptr50, i8** %endp, align 8, !dbg !2219
  %54 = bitcast %struct.rar_file_header* %file_header to i8*, !dbg !2220
  %55 = load i8*, i8** %p, align 8, !dbg !2221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 25, i32 1, i1 false), !dbg !2220
  %56 = load i8*, i8** %p, align 8, !dbg !2222
  %add.ptr51 = getelementptr inbounds i8, i8* %56, i64 25, !dbg !2222
  store i8* %add.ptr51, i8** %p, align 8, !dbg !2222
  %method = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 6, !dbg !2223
  %57 = load i8, i8* %method, align 1, !dbg !2223
  %58 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2224
  %compression_method52 = getelementptr inbounds %struct.rar, %struct.rar* %58, i32 0, i32 5, !dbg !2225
  store i8 %57, i8* %compression_method52, align 1, !dbg !2226
  %file_time = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 4, !dbg !2227
  %arraydecay53 = getelementptr inbounds [4 x i8], [4 x i8]* %file_time, i32 0, i32 0, !dbg !2228
  %call54 = call i32 @archive_le32dec(i8* %arraydecay53), !dbg !2229
  store i32 %call54, i32* %ttime, align 4, !dbg !2230
  %59 = load i32, i32* %ttime, align 4, !dbg !2231
  %call55 = call i64 @get_time(i32 %59), !dbg !2232
  %60 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2233
  %mtime56 = getelementptr inbounds %struct.rar, %struct.rar* %60, i32 0, i32 9, !dbg !2234
  store i64 %call55, i64* %mtime56, align 8, !dbg !2235
  %file_crc = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 3, !dbg !2236
  %arraydecay57 = getelementptr inbounds [4 x i8], [4 x i8]* %file_crc, i32 0, i32 0, !dbg !2237
  %call58 = call i32 @archive_le32dec(i8* %arraydecay57), !dbg !2238
  %conv59 = zext i32 %call58 to i64, !dbg !2238
  %61 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2239
  %file_crc60 = getelementptr inbounds %struct.rar, %struct.rar* %61, i32 0, i32 1, !dbg !2240
  store i64 %conv59, i64* %file_crc60, align 8, !dbg !2241
  %62 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2242
  %file_flags61 = getelementptr inbounds %struct.rar, %struct.rar* %62, i32 0, i32 6, !dbg !2244
  %63 = load i32, i32* %file_flags61, align 8, !dbg !2244
  %and62 = and i32 %63, 4, !dbg !2245
  %tobool63 = icmp ne i32 %and62, 0, !dbg !2245
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !2246

if.then64:                                        ; preds = %if.end48
  %64 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2247
  call void @archive_entry_set_is_data_encrypted(%struct.archive_entry* %64, i8 signext 1), !dbg !2249
  %65 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2250
  %has_encrypted_entries = getelementptr inbounds %struct.rar, %struct.rar* %65, i32 0, i32 69, !dbg !2251
  store i32 1, i32* %has_encrypted_entries, align 8, !dbg !2252
  %66 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2253
  %archive65 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %66, i32 0, i32 0, !dbg !2254
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive65, i32 84, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i32 0, i32 0)), !dbg !2255
  br label %if.end66, !dbg !2256

if.end66:                                         ; preds = %if.then64, %if.end48
  %67 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2257
  %file_flags67 = getelementptr inbounds %struct.rar, %struct.rar* %67, i32 0, i32 6, !dbg !2259
  %68 = load i32, i32* %file_flags67, align 8, !dbg !2259
  %and68 = and i32 %68, 256, !dbg !2260
  %tobool69 = icmp ne i32 %and68, 0, !dbg !2260
  br i1 %tobool69, label %if.then70, label %if.else86, !dbg !2261

if.then70:                                        ; preds = %if.end66
  %arraydecay71 = getelementptr inbounds [8 x i8], [8 x i8]* %packed_size, i32 0, i32 0, !dbg !2262
  %pack_size = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 0, !dbg !2264
  %arraydecay72 = getelementptr inbounds [4 x i8], [4 x i8]* %pack_size, i32 0, i32 0, !dbg !2262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay71, i8* %arraydecay72, i64 4, i32 1, i1 false), !dbg !2262
  %arraydecay73 = getelementptr inbounds [8 x i8], [8 x i8]* %packed_size, i32 0, i32 0, !dbg !2265
  %add.ptr74 = getelementptr inbounds i8, i8* %arraydecay73, i64 4, !dbg !2266
  %69 = load i8*, i8** %p, align 8, !dbg !2267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr74, i8* %69, i64 4, i32 1, i1 false), !dbg !2268
  %70 = load i8*, i8** %p, align 8, !dbg !2269
  %add.ptr75 = getelementptr inbounds i8, i8* %70, i64 4, !dbg !2269
  store i8* %add.ptr75, i8** %p, align 8, !dbg !2269
  %arraydecay76 = getelementptr inbounds [8 x i8], [8 x i8]* %unp_size, i32 0, i32 0, !dbg !2270
  %unp_size77 = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 1, !dbg !2271
  %arraydecay78 = getelementptr inbounds [4 x i8], [4 x i8]* %unp_size77, i32 0, i32 0, !dbg !2270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay76, i8* %arraydecay78, i64 4, i32 1, i1 false), !dbg !2270
  %arraydecay79 = getelementptr inbounds [8 x i8], [8 x i8]* %unp_size, i32 0, i32 0, !dbg !2272
  %add.ptr80 = getelementptr inbounds i8, i8* %arraydecay79, i64 4, !dbg !2273
  %71 = load i8*, i8** %p, align 8, !dbg !2274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr80, i8* %71, i64 4, i32 1, i1 false), !dbg !2275
  %72 = load i8*, i8** %p, align 8, !dbg !2276
  %add.ptr81 = getelementptr inbounds i8, i8* %72, i64 4, !dbg !2276
  store i8* %add.ptr81, i8** %p, align 8, !dbg !2276
  %73 = bitcast [8 x i8]* %packed_size to i8*, !dbg !2277
  %call82 = call i64 @archive_le64dec(i8* %73), !dbg !2278
  %74 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2279
  %packed_size83 = getelementptr inbounds %struct.rar, %struct.rar* %74, i32 0, i32 7, !dbg !2280
  store i64 %call82, i64* %packed_size83, align 8, !dbg !2281
  %75 = bitcast [8 x i8]* %unp_size to i8*, !dbg !2282
  %call84 = call i64 @archive_le64dec(i8* %75), !dbg !2283
  %76 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2284
  %unp_size85 = getelementptr inbounds %struct.rar, %struct.rar* %76, i32 0, i32 8, !dbg !2285
  store i64 %call84, i64* %unp_size85, align 8, !dbg !2286
  br label %if.end97, !dbg !2287

if.else86:                                        ; preds = %if.end66
  %pack_size87 = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 0, !dbg !2288
  %arraydecay88 = getelementptr inbounds [4 x i8], [4 x i8]* %pack_size87, i32 0, i32 0, !dbg !2290
  %call89 = call i32 @archive_le32dec(i8* %arraydecay88), !dbg !2291
  %conv90 = zext i32 %call89 to i64, !dbg !2291
  %77 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2292
  %packed_size91 = getelementptr inbounds %struct.rar, %struct.rar* %77, i32 0, i32 7, !dbg !2293
  store i64 %conv90, i64* %packed_size91, align 8, !dbg !2294
  %unp_size92 = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 1, !dbg !2295
  %arraydecay93 = getelementptr inbounds [4 x i8], [4 x i8]* %unp_size92, i32 0, i32 0, !dbg !2296
  %call94 = call i32 @archive_le32dec(i8* %arraydecay93), !dbg !2297
  %conv95 = zext i32 %call94 to i64, !dbg !2297
  %78 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2298
  %unp_size96 = getelementptr inbounds %struct.rar, %struct.rar* %78, i32 0, i32 8, !dbg !2299
  store i64 %conv95, i64* %unp_size96, align 8, !dbg !2300
  br label %if.end97

if.end97:                                         ; preds = %if.else86, %if.then70
  %79 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2301
  %packed_size98 = getelementptr inbounds %struct.rar, %struct.rar* %79, i32 0, i32 7, !dbg !2303
  %80 = load i64, i64* %packed_size98, align 8, !dbg !2303
  %cmp99 = icmp slt i64 %80, 0, !dbg !2304
  br i1 %cmp99, label %if.then104, label %lor.lhs.false, !dbg !2305

lor.lhs.false:                                    ; preds = %if.end97
  %81 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2306
  %unp_size101 = getelementptr inbounds %struct.rar, %struct.rar* %81, i32 0, i32 8, !dbg !2308
  %82 = load i64, i64* %unp_size101, align 8, !dbg !2308
  %cmp102 = icmp slt i64 %82, 0, !dbg !2309
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !2310

if.then104:                                       ; preds = %lor.lhs.false, %if.end97
  %83 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2311
  %archive105 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %83, i32 0, i32 0, !dbg !2313
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive105, i32 84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i32 0, i32 0)), !dbg !2314
  store i32 -30, i32* %retval, align 4, !dbg !2315
  br label %return, !dbg !2315

if.end106:                                        ; preds = %lor.lhs.false
  %84 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2316
  %packed_size107 = getelementptr inbounds %struct.rar, %struct.rar* %84, i32 0, i32 7, !dbg !2317
  %85 = load i64, i64* %packed_size107, align 8, !dbg !2317
  %86 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2318
  %bytes_remaining = getelementptr inbounds %struct.rar, %struct.rar* %86, i32 0, i32 24, !dbg !2319
  store i64 %85, i64* %bytes_remaining, align 8, !dbg !2320
  %87 = load i8, i8* %head_type.addr, align 1, !dbg !2321
  %conv108 = sext i8 %87 to i32, !dbg !2321
  %cmp109 = icmp eq i32 %conv108, 122, !dbg !2323
  br i1 %cmp109, label %if.then111, label %if.end122, !dbg !2324

if.then111:                                       ; preds = %if.end106
  call void @llvm.dbg.declare(metadata i64* %distance, metadata !2325, metadata !677), !dbg !2327
  %88 = load i8*, i8** %p, align 8, !dbg !2328
  %89 = load i8*, i8** %h, align 8, !dbg !2329
  %sub.ptr.lhs.cast = ptrtoint i8* %88 to i64, !dbg !2330
  %sub.ptr.rhs.cast = ptrtoint i8* %89 to i64, !dbg !2330
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2330
  store i64 %sub.ptr.sub, i64* %distance, align 8, !dbg !2327
  %90 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2331
  %packed_size112 = getelementptr inbounds %struct.rar, %struct.rar* %90, i32 0, i32 7, !dbg !2332
  %91 = load i64, i64* %packed_size112, align 8, !dbg !2332
  %92 = load i64, i64* %header_size, align 8, !dbg !2333
  %add = add nsw i64 %92, %91, !dbg !2333
  store i64 %add, i64* %header_size, align 8, !dbg !2333
  %93 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2334
  %94 = load i64, i64* %header_size, align 8, !dbg !2336
  %sub113 = sub i64 %94, 7, !dbg !2337
  %call114 = call i8* @__archive_read_ahead(%struct.archive_read* %93, i64 %sub113, i64* null), !dbg !2338
  store i8* %call114, i8** %h, align 8, !dbg !2339
  %cmp115 = icmp eq i8* %call114, null, !dbg !2340
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !2341

if.then117:                                       ; preds = %if.then111
  store i32 -30, i32* %retval, align 4, !dbg !2342
  br label %return, !dbg !2342

if.end118:                                        ; preds = %if.then111
  %95 = load i8*, i8** %h, align 8, !dbg !2343
  store i8* %95, i8** %p, align 8, !dbg !2344
  %96 = load i8*, i8** %p, align 8, !dbg !2345
  %97 = load i64, i64* %header_size, align 8, !dbg !2346
  %add.ptr119 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !2347
  %add.ptr120 = getelementptr inbounds i8, i8* %add.ptr119, i64 -7, !dbg !2348
  store i8* %add.ptr120, i8** %endp, align 8, !dbg !2349
  %98 = load i64, i64* %distance, align 8, !dbg !2350
  %99 = load i8*, i8** %p, align 8, !dbg !2351
  %add.ptr121 = getelementptr inbounds i8, i8* %99, i64 %98, !dbg !2351
  store i8* %add.ptr121, i8** %p, align 8, !dbg !2351
  br label %if.end122, !dbg !2352

if.end122:                                        ; preds = %if.end118, %if.end106
  %name_size = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 7, !dbg !2353
  %arraydecay123 = getelementptr inbounds [2 x i8], [2 x i8]* %name_size, i32 0, i32 0, !dbg !2354
  %call124 = call zeroext i16 @archive_le16dec(i8* %arraydecay123), !dbg !2355
  %conv125 = zext i16 %call124 to i32, !dbg !2355
  store i32 %conv125, i32* %filename_size, align 4, !dbg !2356
  %100 = load i8*, i8** %p, align 8, !dbg !2357
  %101 = load i32, i32* %filename_size, align 4, !dbg !2359
  %idx.ext = zext i32 %101 to i64, !dbg !2360
  %add.ptr126 = getelementptr inbounds i8, i8* %100, i64 %idx.ext, !dbg !2360
  %102 = load i8*, i8** %endp, align 8, !dbg !2361
  %cmp127 = icmp ugt i8* %add.ptr126, %102, !dbg !2362
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !2363

if.then129:                                       ; preds = %if.end122
  %103 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2364
  %archive130 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %103, i32 0, i32 0, !dbg !2366
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive130, i32 84, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i32 0, i32 0)), !dbg !2367
  store i32 -30, i32* %retval, align 4, !dbg !2368
  br label %return, !dbg !2368

if.end131:                                        ; preds = %if.end122
  %104 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2369
  %filename_allocated = getelementptr inbounds %struct.rar, %struct.rar* %104, i32 0, i32 15, !dbg !2371
  %105 = load i64, i64* %filename_allocated, align 8, !dbg !2371
  %106 = load i32, i32* %filename_size, align 4, !dbg !2372
  %mul = mul i32 %106, 2, !dbg !2373
  %add132 = add i32 %mul, 2, !dbg !2374
  %conv133 = zext i32 %add132 to i64, !dbg !2372
  %cmp134 = icmp ult i64 %105, %conv133, !dbg !2375
  br i1 %cmp134, label %if.then136, label %if.end149, !dbg !2376

if.then136:                                       ; preds = %if.end131
  call void @llvm.dbg.declare(metadata i8** %newptr, metadata !2377, metadata !677), !dbg !2379
  call void @llvm.dbg.declare(metadata i64* %newsize, metadata !2380, metadata !677), !dbg !2381
  %107 = load i32, i32* %filename_size, align 4, !dbg !2382
  %mul137 = mul i32 %107, 2, !dbg !2383
  %add138 = add i32 %mul137, 2, !dbg !2384
  %conv139 = zext i32 %add138 to i64, !dbg !2382
  store i64 %conv139, i64* %newsize, align 8, !dbg !2381
  %108 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2385
  %filename140 = getelementptr inbounds %struct.rar, %struct.rar* %108, i32 0, i32 12, !dbg !2386
  %109 = load i8*, i8** %filename140, align 8, !dbg !2386
  %110 = load i64, i64* %newsize, align 8, !dbg !2387
  %call141 = call i8* @realloc(i8* %109, i64 %110) #8, !dbg !2388
  store i8* %call141, i8** %newptr, align 8, !dbg !2389
  %111 = load i8*, i8** %newptr, align 8, !dbg !2390
  %cmp142 = icmp eq i8* %111, null, !dbg !2392
  br i1 %cmp142, label %if.then144, label %if.end146, !dbg !2393

if.then144:                                       ; preds = %if.then136
  %112 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2394
  %archive145 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %112, i32 0, i32 0, !dbg !2396
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive145, i32 12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0)), !dbg !2397
  store i32 -30, i32* %retval, align 4, !dbg !2398
  br label %return, !dbg !2398

if.end146:                                        ; preds = %if.then136
  %113 = load i8*, i8** %newptr, align 8, !dbg !2399
  %114 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2400
  %filename147 = getelementptr inbounds %struct.rar, %struct.rar* %114, i32 0, i32 12, !dbg !2401
  store i8* %113, i8** %filename147, align 8, !dbg !2402
  %115 = load i64, i64* %newsize, align 8, !dbg !2403
  %116 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2404
  %filename_allocated148 = getelementptr inbounds %struct.rar, %struct.rar* %116, i32 0, i32 15, !dbg !2405
  store i64 %115, i64* %filename_allocated148, align 8, !dbg !2406
  br label %if.end149, !dbg !2407

if.end149:                                        ; preds = %if.end146, %if.end131
  %117 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2408
  %filename150 = getelementptr inbounds %struct.rar, %struct.rar* %117, i32 0, i32 12, !dbg !2409
  %118 = load i8*, i8** %filename150, align 8, !dbg !2409
  store i8* %118, i8** %filename, align 8, !dbg !2410
  %119 = load i8*, i8** %filename, align 8, !dbg !2411
  %120 = load i8*, i8** %p, align 8, !dbg !2412
  %121 = load i32, i32* %filename_size, align 4, !dbg !2413
  %conv151 = zext i32 %121 to i64, !dbg !2413
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 %conv151, i32 1, i1 false), !dbg !2414
  %122 = load i32, i32* %filename_size, align 4, !dbg !2415
  %idxprom = zext i32 %122 to i64, !dbg !2416
  %123 = load i8*, i8** %filename, align 8, !dbg !2416
  %arrayidx = getelementptr inbounds i8, i8* %123, i64 %idxprom, !dbg !2416
  store i8 0, i8* %arrayidx, align 1, !dbg !2417
  %124 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2418
  %file_flags152 = getelementptr inbounds %struct.rar, %struct.rar* %124, i32 0, i32 6, !dbg !2420
  %125 = load i32, i32* %file_flags152, align 8, !dbg !2420
  %and153 = and i32 %125, 512, !dbg !2421
  %tobool154 = icmp ne i32 %and153, 0, !dbg !2421
  br i1 %tobool154, label %if.then155, label %if.else314, !dbg !2422

if.then155:                                       ; preds = %if.end149
  %126 = load i32, i32* %filename_size, align 4, !dbg !2423
  %conv156 = zext i32 %126 to i64, !dbg !2423
  %127 = load i8*, i8** %filename, align 8, !dbg !2426
  %call157 = call i64 @strlen(i8* %127) #9, !dbg !2427
  %cmp158 = icmp ne i64 %conv156, %call157, !dbg !2428
  br i1 %cmp158, label %if.then160, label %if.else291, !dbg !2429

if.then160:                                       ; preds = %if.then155
  call void @llvm.dbg.declare(metadata i8* %highbyte, metadata !2430, metadata !677), !dbg !2432
  call void @llvm.dbg.declare(metadata i8* %flagbits, metadata !2433, metadata !677), !dbg !2434
  call void @llvm.dbg.declare(metadata i8* %flagbyte, metadata !2435, metadata !677), !dbg !2436
  call void @llvm.dbg.declare(metadata i32* %fn_end, metadata !2437, metadata !677), !dbg !2438
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2439, metadata !677), !dbg !2440
  %128 = load i32, i32* %filename_size, align 4, !dbg !2441
  store i32 %128, i32* %end, align 4, !dbg !2442
  %129 = load i32, i32* %filename_size, align 4, !dbg !2443
  %mul161 = mul i32 %129, 2, !dbg !2444
  store i32 %mul161, i32* %fn_end, align 4, !dbg !2445
  store i32 0, i32* %filename_size, align 4, !dbg !2446
  %130 = load i8*, i8** %filename, align 8, !dbg !2447
  %call162 = call i64 @strlen(i8* %130) #9, !dbg !2448
  %conv163 = trunc i64 %call162 to i32, !dbg !2449
  %add164 = add i32 %conv163, 1, !dbg !2450
  store i32 %add164, i32* %offset, align 4, !dbg !2451
  %131 = load i8*, i8** %p, align 8, !dbg !2452
  %132 = load i32, i32* %offset, align 4, !dbg !2453
  %inc = add i32 %132, 1, !dbg !2453
  store i32 %inc, i32* %offset, align 4, !dbg !2453
  %idx.ext165 = zext i32 %132 to i64, !dbg !2454
  %add.ptr166 = getelementptr inbounds i8, i8* %131, i64 %idx.ext165, !dbg !2454
  %133 = load i8, i8* %add.ptr166, align 1, !dbg !2455
  store i8 %133, i8* %highbyte, align 1, !dbg !2456
  store i8 0, i8* %flagbits, align 1, !dbg !2457
  store i8 0, i8* %flagbyte, align 1, !dbg !2458
  br label %while.cond, !dbg !2459

while.cond:                                       ; preds = %sw.epilog, %if.then160
  %134 = load i32, i32* %offset, align 4, !dbg !2460
  %135 = load i32, i32* %end, align 4, !dbg !2462
  %cmp167 = icmp ult i32 %134, %135, !dbg !2463
  br i1 %cmp167, label %land.rhs, label %land.end, !dbg !2464

land.rhs:                                         ; preds = %while.cond
  %136 = load i32, i32* %filename_size, align 4, !dbg !2465
  %137 = load i32, i32* %fn_end, align 4, !dbg !2467
  %cmp169 = icmp ult i32 %136, %137, !dbg !2468
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %138 = phi i1 [ false, %while.cond ], [ %cmp169, %land.rhs ]
  br i1 %138, label %while.body, label %while.end253, !dbg !2469

while.body:                                       ; preds = %land.end
  %139 = load i8, i8* %flagbits, align 1, !dbg !2471
  %tobool171 = icmp ne i8 %139, 0, !dbg !2471
  br i1 %tobool171, label %if.end176, label %if.then172, !dbg !2474

if.then172:                                       ; preds = %while.body
  %140 = load i8*, i8** %p, align 8, !dbg !2475
  %141 = load i32, i32* %offset, align 4, !dbg !2477
  %inc173 = add i32 %141, 1, !dbg !2477
  store i32 %inc173, i32* %offset, align 4, !dbg !2477
  %idx.ext174 = zext i32 %141 to i64, !dbg !2478
  %add.ptr175 = getelementptr inbounds i8, i8* %140, i64 %idx.ext174, !dbg !2478
  %142 = load i8, i8* %add.ptr175, align 1, !dbg !2479
  store i8 %142, i8* %flagbyte, align 1, !dbg !2480
  store i8 8, i8* %flagbits, align 1, !dbg !2481
  br label %if.end176, !dbg !2482

if.end176:                                        ; preds = %if.then172, %while.body
  %143 = load i8, i8* %flagbits, align 1, !dbg !2483
  %conv177 = zext i8 %143 to i32, !dbg !2483
  %sub178 = sub nsw i32 %conv177, 2, !dbg !2483
  %conv179 = trunc i32 %sub178 to i8, !dbg !2483
  store i8 %conv179, i8* %flagbits, align 1, !dbg !2483
  %144 = load i8, i8* %flagbyte, align 1, !dbg !2484
  %conv180 = zext i8 %144 to i32, !dbg !2484
  %145 = load i8, i8* %flagbits, align 1, !dbg !2485
  %conv181 = zext i8 %145 to i32, !dbg !2485
  %shr = ashr i32 %conv180, %conv181, !dbg !2486
  %and182 = and i32 %shr, 3, !dbg !2487
  switch i32 %and182, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb192
    i32 2, label %sw.bb202
    i32 3, label %sw.bb215
  ], !dbg !2488

sw.bb:                                            ; preds = %if.end176
  %146 = load i32, i32* %filename_size, align 4, !dbg !2489
  %inc183 = add i32 %146, 1, !dbg !2489
  store i32 %inc183, i32* %filename_size, align 4, !dbg !2489
  %idxprom184 = zext i32 %146 to i64, !dbg !2491
  %147 = load i8*, i8** %filename, align 8, !dbg !2491
  %arrayidx185 = getelementptr inbounds i8, i8* %147, i64 %idxprom184, !dbg !2491
  store i8 0, i8* %arrayidx185, align 1, !dbg !2492
  %148 = load i8*, i8** %p, align 8, !dbg !2493
  %149 = load i32, i32* %offset, align 4, !dbg !2494
  %inc186 = add i32 %149, 1, !dbg !2494
  store i32 %inc186, i32* %offset, align 4, !dbg !2494
  %idx.ext187 = zext i32 %149 to i64, !dbg !2495
  %add.ptr188 = getelementptr inbounds i8, i8* %148, i64 %idx.ext187, !dbg !2495
  %150 = load i8, i8* %add.ptr188, align 1, !dbg !2496
  %151 = load i32, i32* %filename_size, align 4, !dbg !2497
  %inc189 = add i32 %151, 1, !dbg !2497
  store i32 %inc189, i32* %filename_size, align 4, !dbg !2497
  %idxprom190 = zext i32 %151 to i64, !dbg !2498
  %152 = load i8*, i8** %filename, align 8, !dbg !2498
  %arrayidx191 = getelementptr inbounds i8, i8* %152, i64 %idxprom190, !dbg !2498
  store i8 %150, i8* %arrayidx191, align 1, !dbg !2499
  br label %sw.epilog, !dbg !2500

sw.bb192:                                         ; preds = %if.end176
  %153 = load i8, i8* %highbyte, align 1, !dbg !2501
  %154 = load i32, i32* %filename_size, align 4, !dbg !2502
  %inc193 = add i32 %154, 1, !dbg !2502
  store i32 %inc193, i32* %filename_size, align 4, !dbg !2502
  %idxprom194 = zext i32 %154 to i64, !dbg !2503
  %155 = load i8*, i8** %filename, align 8, !dbg !2503
  %arrayidx195 = getelementptr inbounds i8, i8* %155, i64 %idxprom194, !dbg !2503
  store i8 %153, i8* %arrayidx195, align 1, !dbg !2504
  %156 = load i8*, i8** %p, align 8, !dbg !2505
  %157 = load i32, i32* %offset, align 4, !dbg !2506
  %inc196 = add i32 %157, 1, !dbg !2506
  store i32 %inc196, i32* %offset, align 4, !dbg !2506
  %idx.ext197 = zext i32 %157 to i64, !dbg !2507
  %add.ptr198 = getelementptr inbounds i8, i8* %156, i64 %idx.ext197, !dbg !2507
  %158 = load i8, i8* %add.ptr198, align 1, !dbg !2508
  %159 = load i32, i32* %filename_size, align 4, !dbg !2509
  %inc199 = add i32 %159, 1, !dbg !2509
  store i32 %inc199, i32* %filename_size, align 4, !dbg !2509
  %idxprom200 = zext i32 %159 to i64, !dbg !2510
  %160 = load i8*, i8** %filename, align 8, !dbg !2510
  %arrayidx201 = getelementptr inbounds i8, i8* %160, i64 %idxprom200, !dbg !2510
  store i8 %158, i8* %arrayidx201, align 1, !dbg !2511
  br label %sw.epilog, !dbg !2512

sw.bb202:                                         ; preds = %if.end176
  %161 = load i8*, i8** %p, align 8, !dbg !2513
  %162 = load i32, i32* %offset, align 4, !dbg !2514
  %idx.ext203 = zext i32 %162 to i64, !dbg !2515
  %add.ptr204 = getelementptr inbounds i8, i8* %161, i64 %idx.ext203, !dbg !2515
  %add.ptr205 = getelementptr inbounds i8, i8* %add.ptr204, i64 1, !dbg !2516
  %163 = load i8, i8* %add.ptr205, align 1, !dbg !2517
  %164 = load i32, i32* %filename_size, align 4, !dbg !2518
  %inc206 = add i32 %164, 1, !dbg !2518
  store i32 %inc206, i32* %filename_size, align 4, !dbg !2518
  %idxprom207 = zext i32 %164 to i64, !dbg !2519
  %165 = load i8*, i8** %filename, align 8, !dbg !2519
  %arrayidx208 = getelementptr inbounds i8, i8* %165, i64 %idxprom207, !dbg !2519
  store i8 %163, i8* %arrayidx208, align 1, !dbg !2520
  %166 = load i8*, i8** %p, align 8, !dbg !2521
  %167 = load i32, i32* %offset, align 4, !dbg !2522
  %idx.ext209 = zext i32 %167 to i64, !dbg !2523
  %add.ptr210 = getelementptr inbounds i8, i8* %166, i64 %idx.ext209, !dbg !2523
  %168 = load i8, i8* %add.ptr210, align 1, !dbg !2524
  %169 = load i32, i32* %filename_size, align 4, !dbg !2525
  %inc211 = add i32 %169, 1, !dbg !2525
  store i32 %inc211, i32* %filename_size, align 4, !dbg !2525
  %idxprom212 = zext i32 %169 to i64, !dbg !2526
  %170 = load i8*, i8** %filename, align 8, !dbg !2526
  %arrayidx213 = getelementptr inbounds i8, i8* %170, i64 %idxprom212, !dbg !2526
  store i8 %168, i8* %arrayidx213, align 1, !dbg !2527
  %171 = load i32, i32* %offset, align 4, !dbg !2528
  %add214 = add i32 %171, 2, !dbg !2528
  store i32 %add214, i32* %offset, align 4, !dbg !2528
  br label %sw.epilog, !dbg !2529

sw.bb215:                                         ; preds = %if.end176
  call void @llvm.dbg.declare(metadata i8* %extra, metadata !2530, metadata !677), !dbg !2532
  call void @llvm.dbg.declare(metadata i8* %high, metadata !2533, metadata !677), !dbg !2534
  call void @llvm.dbg.declare(metadata i8* %length, metadata !2535, metadata !677), !dbg !2536
  %172 = load i8*, i8** %p, align 8, !dbg !2537
  %173 = load i32, i32* %offset, align 4, !dbg !2538
  %inc216 = add i32 %173, 1, !dbg !2538
  store i32 %inc216, i32* %offset, align 4, !dbg !2538
  %idx.ext217 = zext i32 %173 to i64, !dbg !2539
  %add.ptr218 = getelementptr inbounds i8, i8* %172, i64 %idx.ext217, !dbg !2539
  %174 = load i8, i8* %add.ptr218, align 1, !dbg !2540
  store i8 %174, i8* %length, align 1, !dbg !2536
  %175 = load i8, i8* %length, align 1, !dbg !2541
  %conv219 = zext i8 %175 to i32, !dbg !2541
  %and220 = and i32 %conv219, 128, !dbg !2543
  %tobool221 = icmp ne i32 %and220, 0, !dbg !2543
  br i1 %tobool221, label %if.then222, label %if.else226, !dbg !2544

if.then222:                                       ; preds = %sw.bb215
  %176 = load i8*, i8** %p, align 8, !dbg !2545
  %177 = load i32, i32* %offset, align 4, !dbg !2547
  %inc223 = add i32 %177, 1, !dbg !2547
  store i32 %inc223, i32* %offset, align 4, !dbg !2547
  %idx.ext224 = zext i32 %177 to i64, !dbg !2548
  %add.ptr225 = getelementptr inbounds i8, i8* %176, i64 %idx.ext224, !dbg !2548
  %178 = load i8, i8* %add.ptr225, align 1, !dbg !2549
  store i8 %178, i8* %extra, align 1, !dbg !2550
  %179 = load i8, i8* %highbyte, align 1, !dbg !2551
  store i8 %179, i8* %high, align 1, !dbg !2552
  br label %if.end227, !dbg !2553

if.else226:                                       ; preds = %sw.bb215
  store i8 0, i8* %high, align 1, !dbg !2554
  store i8 0, i8* %extra, align 1, !dbg !2555
  br label %if.end227

if.end227:                                        ; preds = %if.else226, %if.then222
  %180 = load i8, i8* %length, align 1, !dbg !2556
  %conv228 = zext i8 %180 to i32, !dbg !2556
  %and229 = and i32 %conv228, 127, !dbg !2557
  %add230 = add nsw i32 %and229, 2, !dbg !2558
  %conv231 = trunc i32 %add230 to i8, !dbg !2559
  store i8 %conv231, i8* %length, align 1, !dbg !2560
  br label %while.cond232, !dbg !2561

while.cond232:                                    ; preds = %while.body239, %if.end227
  %181 = load i8, i8* %length, align 1, !dbg !2562
  %conv233 = zext i8 %181 to i32, !dbg !2562
  %tobool234 = icmp ne i32 %conv233, 0, !dbg !2562
  br i1 %tobool234, label %land.rhs235, label %land.end238, !dbg !2564

land.rhs235:                                      ; preds = %while.cond232
  %182 = load i32, i32* %filename_size, align 4, !dbg !2565
  %183 = load i32, i32* %fn_end, align 4, !dbg !2567
  %cmp236 = icmp ult i32 %182, %183, !dbg !2568
  br label %land.end238

land.end238:                                      ; preds = %land.rhs235, %while.cond232
  %184 = phi i1 [ false, %while.cond232 ], [ %cmp236, %land.rhs235 ]
  br i1 %184, label %while.body239, label %while.end, !dbg !2569

while.body239:                                    ; preds = %land.end238
  call void @llvm.dbg.declare(metadata i32* %cp, metadata !2571, metadata !677), !dbg !2573
  %185 = load i32, i32* %filename_size, align 4, !dbg !2574
  %shr240 = lshr i32 %185, 1, !dbg !2575
  store i32 %shr240, i32* %cp, align 4, !dbg !2573
  %186 = load i8, i8* %high, align 1, !dbg !2576
  %187 = load i32, i32* %filename_size, align 4, !dbg !2577
  %inc241 = add i32 %187, 1, !dbg !2577
  store i32 %inc241, i32* %filename_size, align 4, !dbg !2577
  %idxprom242 = zext i32 %187 to i64, !dbg !2578
  %188 = load i8*, i8** %filename, align 8, !dbg !2578
  %arrayidx243 = getelementptr inbounds i8, i8* %188, i64 %idxprom242, !dbg !2578
  store i8 %186, i8* %arrayidx243, align 1, !dbg !2579
  %189 = load i32, i32* %cp, align 4, !dbg !2580
  %idxprom244 = zext i32 %189 to i64, !dbg !2581
  %190 = load i8*, i8** %p, align 8, !dbg !2581
  %arrayidx245 = getelementptr inbounds i8, i8* %190, i64 %idxprom244, !dbg !2581
  %191 = load i8, i8* %arrayidx245, align 1, !dbg !2581
  %conv246 = sext i8 %191 to i32, !dbg !2581
  %192 = load i8, i8* %extra, align 1, !dbg !2582
  %conv247 = sext i8 %192 to i32, !dbg !2582
  %add248 = add nsw i32 %conv246, %conv247, !dbg !2583
  %conv249 = trunc i32 %add248 to i8, !dbg !2581
  %193 = load i32, i32* %filename_size, align 4, !dbg !2584
  %inc250 = add i32 %193, 1, !dbg !2584
  store i32 %inc250, i32* %filename_size, align 4, !dbg !2584
  %idxprom251 = zext i32 %193 to i64, !dbg !2585
  %194 = load i8*, i8** %filename, align 8, !dbg !2585
  %arrayidx252 = getelementptr inbounds i8, i8* %194, i64 %idxprom251, !dbg !2585
  store i8 %conv249, i8* %arrayidx252, align 1, !dbg !2586
  %195 = load i8, i8* %length, align 1, !dbg !2587
  %dec = add i8 %195, -1, !dbg !2587
  store i8 %dec, i8* %length, align 1, !dbg !2587
  br label %while.cond232, !dbg !2588

while.end:                                        ; preds = %land.end238
  br label %sw.epilog, !dbg !2590

sw.epilog:                                        ; preds = %if.end176, %while.end, %sw.bb202, %sw.bb192, %sw.bb
  br label %while.cond, !dbg !2591

while.end253:                                     ; preds = %land.end
  %196 = load i32, i32* %filename_size, align 4, !dbg !2593
  %197 = load i32, i32* %fn_end, align 4, !dbg !2595
  %cmp254 = icmp ugt i32 %196, %197, !dbg !2596
  br i1 %cmp254, label %if.then256, label %if.end258, !dbg !2597

if.then256:                                       ; preds = %while.end253
  %198 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2598
  %archive257 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %198, i32 0, i32 0, !dbg !2600
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive257, i32 84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0)), !dbg !2601
  store i32 -30, i32* %retval, align 4, !dbg !2602
  br label %return, !dbg !2602

if.end258:                                        ; preds = %while.end253
  %199 = load i32, i32* %filename_size, align 4, !dbg !2603
  %inc259 = add i32 %199, 1, !dbg !2603
  store i32 %inc259, i32* %filename_size, align 4, !dbg !2603
  %idxprom260 = zext i32 %199 to i64, !dbg !2604
  %200 = load i8*, i8** %filename, align 8, !dbg !2604
  %arrayidx261 = getelementptr inbounds i8, i8* %200, i64 %idxprom260, !dbg !2604
  store i8 0, i8* %arrayidx261, align 1, !dbg !2605
  %201 = load i32, i32* %filename_size, align 4, !dbg !2606
  %inc262 = add i32 %201, 1, !dbg !2606
  store i32 %inc262, i32* %filename_size, align 4, !dbg !2606
  %idxprom263 = zext i32 %201 to i64, !dbg !2607
  %202 = load i8*, i8** %filename, align 8, !dbg !2607
  %arrayidx264 = getelementptr inbounds i8, i8* %202, i64 %idxprom263, !dbg !2607
  store i8 0, i8* %arrayidx264, align 1, !dbg !2608
  %203 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2609
  %sconv_utf16be = getelementptr inbounds %struct.rar, %struct.rar* %203, i32 0, i32 67, !dbg !2611
  %204 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be, align 8, !dbg !2611
  %cmp265 = icmp eq %struct.archive_string_conv* %204, null, !dbg !2612
  br i1 %cmp265, label %if.then267, label %if.end276, !dbg !2613

if.then267:                                       ; preds = %if.end258
  %205 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2614
  %archive268 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %205, i32 0, i32 0, !dbg !2616
  %call269 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive268, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i32 1), !dbg !2617
  %206 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2618
  %sconv_utf16be270 = getelementptr inbounds %struct.rar, %struct.rar* %206, i32 0, i32 67, !dbg !2619
  store %struct.archive_string_conv* %call269, %struct.archive_string_conv** %sconv_utf16be270, align 8, !dbg !2620
  %207 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2621
  %sconv_utf16be271 = getelementptr inbounds %struct.rar, %struct.rar* %207, i32 0, i32 67, !dbg !2623
  %208 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be271, align 8, !dbg !2623
  %cmp272 = icmp eq %struct.archive_string_conv* %208, null, !dbg !2624
  br i1 %cmp272, label %if.then274, label %if.end275, !dbg !2625

if.then274:                                       ; preds = %if.then267
  store i32 -30, i32* %retval, align 4, !dbg !2626
  br label %return, !dbg !2626

if.end275:                                        ; preds = %if.then267
  br label %if.end276, !dbg !2627

if.end276:                                        ; preds = %if.end275, %if.end258
  %209 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2628
  %sconv_utf16be277 = getelementptr inbounds %struct.rar, %struct.rar* %209, i32 0, i32 67, !dbg !2629
  %210 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be277, align 8, !dbg !2629
  store %struct.archive_string_conv* %210, %struct.archive_string_conv** %fn_sconv, align 8, !dbg !2630
  %211 = load i8*, i8** %filename, align 8, !dbg !2631
  store i8* %211, i8** %strp, align 8, !dbg !2632
  br label %while.cond278, !dbg !2633

while.cond278:                                    ; preds = %if.end286, %if.end276
  %212 = load i8*, i8** %strp, align 8, !dbg !2634
  %call279 = call i32 @memcmp(i8* %212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i64 2) #9, !dbg !2635
  %tobool280 = icmp ne i32 %call279, 0, !dbg !2636
  br i1 %tobool280, label %while.body281, label %while.end288, !dbg !2636

while.body281:                                    ; preds = %while.cond278
  %213 = load i8*, i8** %strp, align 8, !dbg !2637
  %call282 = call i32 @memcmp(i8* %213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0), i64 2) #9, !dbg !2640
  %tobool283 = icmp ne i32 %call282, 0, !dbg !2640
  br i1 %tobool283, label %if.end286, label %if.then284, !dbg !2641

if.then284:                                       ; preds = %while.body281
  %214 = load i8*, i8** %strp, align 8, !dbg !2642
  %add.ptr285 = getelementptr inbounds i8, i8* %214, i64 1, !dbg !2643
  store i8 47, i8* %add.ptr285, align 1, !dbg !2644
  br label %if.end286, !dbg !2645

if.end286:                                        ; preds = %if.then284, %while.body281
  %215 = load i8*, i8** %strp, align 8, !dbg !2646
  %add.ptr287 = getelementptr inbounds i8, i8* %215, i64 2, !dbg !2646
  store i8* %add.ptr287, i8** %strp, align 8, !dbg !2646
  br label %while.cond278, !dbg !2647

while.end288:                                     ; preds = %while.cond278
  %216 = load i32, i32* %offset, align 4, !dbg !2648
  %217 = load i8*, i8** %p, align 8, !dbg !2649
  %idx.ext289 = zext i32 %216 to i64, !dbg !2649
  %add.ptr290 = getelementptr inbounds i8, i8* %217, i64 %idx.ext289, !dbg !2649
  store i8* %add.ptr290, i8** %p, align 8, !dbg !2649
  br label %if.end313, !dbg !2650

if.else291:                                       ; preds = %if.then155
  %218 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2651
  %sconv_utf8 = getelementptr inbounds %struct.rar, %struct.rar* %218, i32 0, i32 66, !dbg !2654
  %219 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8, align 8, !dbg !2654
  %cmp292 = icmp eq %struct.archive_string_conv* %219, null, !dbg !2655
  br i1 %cmp292, label %if.then294, label %if.end303, !dbg !2656

if.then294:                                       ; preds = %if.else291
  %220 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2657
  %archive295 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %220, i32 0, i32 0, !dbg !2659
  %call296 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive295, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i32 1), !dbg !2660
  %221 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2661
  %sconv_utf8297 = getelementptr inbounds %struct.rar, %struct.rar* %221, i32 0, i32 66, !dbg !2662
  store %struct.archive_string_conv* %call296, %struct.archive_string_conv** %sconv_utf8297, align 8, !dbg !2663
  %222 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2664
  %sconv_utf8298 = getelementptr inbounds %struct.rar, %struct.rar* %222, i32 0, i32 66, !dbg !2666
  %223 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8298, align 8, !dbg !2666
  %cmp299 = icmp eq %struct.archive_string_conv* %223, null, !dbg !2667
  br i1 %cmp299, label %if.then301, label %if.end302, !dbg !2668

if.then301:                                       ; preds = %if.then294
  store i32 -30, i32* %retval, align 4, !dbg !2669
  br label %return, !dbg !2669

if.end302:                                        ; preds = %if.then294
  br label %if.end303, !dbg !2670

if.end303:                                        ; preds = %if.end302, %if.else291
  %224 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2671
  %sconv_utf8304 = getelementptr inbounds %struct.rar, %struct.rar* %224, i32 0, i32 66, !dbg !2672
  %225 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf8304, align 8, !dbg !2672
  store %struct.archive_string_conv* %225, %struct.archive_string_conv** %fn_sconv, align 8, !dbg !2673
  br label %while.cond305, !dbg !2674

while.cond305:                                    ; preds = %while.body309, %if.end303
  %226 = load i8*, i8** %filename, align 8, !dbg !2675
  %call306 = call i8* @strchr(i8* %226, i32 92) #9, !dbg !2677
  store i8* %call306, i8** %strp, align 8, !dbg !2678
  %cmp307 = icmp ne i8* %call306, null, !dbg !2679
  br i1 %cmp307, label %while.body309, label %while.end310, !dbg !2680

while.body309:                                    ; preds = %while.cond305
  %227 = load i8*, i8** %strp, align 8, !dbg !2681
  store i8 47, i8* %227, align 1, !dbg !2682
  br label %while.cond305, !dbg !2683

while.end310:                                     ; preds = %while.cond305
  %228 = load i32, i32* %filename_size, align 4, !dbg !2685
  %229 = load i8*, i8** %p, align 8, !dbg !2686
  %idx.ext311 = zext i32 %228 to i64, !dbg !2686
  %add.ptr312 = getelementptr inbounds i8, i8* %229, i64 %idx.ext311, !dbg !2686
  store i8* %add.ptr312, i8** %p, align 8, !dbg !2686
  br label %if.end313

if.end313:                                        ; preds = %while.end310, %while.end288
  br label %if.end323, !dbg !2687

if.else314:                                       ; preds = %if.end149
  %230 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !2688
  store %struct.archive_string_conv* %230, %struct.archive_string_conv** %fn_sconv, align 8, !dbg !2690
  br label %while.cond315, !dbg !2691

while.cond315:                                    ; preds = %while.body319, %if.else314
  %231 = load i8*, i8** %filename, align 8, !dbg !2692
  %call316 = call i8* @strchr(i8* %231, i32 92) #9, !dbg !2694
  store i8* %call316, i8** %strp, align 8, !dbg !2695
  %cmp317 = icmp ne i8* %call316, null, !dbg !2696
  br i1 %cmp317, label %while.body319, label %while.end320, !dbg !2697

while.body319:                                    ; preds = %while.cond315
  %232 = load i8*, i8** %strp, align 8, !dbg !2698
  store i8 47, i8* %232, align 1, !dbg !2699
  br label %while.cond315, !dbg !2700

while.end320:                                     ; preds = %while.cond315
  %233 = load i32, i32* %filename_size, align 4, !dbg !2702
  %234 = load i8*, i8** %p, align 8, !dbg !2703
  %idx.ext321 = zext i32 %233 to i64, !dbg !2703
  %add.ptr322 = getelementptr inbounds i8, i8* %234, i64 %idx.ext321, !dbg !2703
  store i8* %add.ptr322, i8** %p, align 8, !dbg !2703
  br label %if.end323

if.end323:                                        ; preds = %while.end320, %if.end313
  %235 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2704
  %filename_save = getelementptr inbounds %struct.rar, %struct.rar* %235, i32 0, i32 13, !dbg !2706
  %236 = load i8*, i8** %filename_save, align 8, !dbg !2706
  %tobool324 = icmp ne i8* %236, null, !dbg !2704
  br i1 %tobool324, label %land.lhs.true, label %if.end395, !dbg !2707

land.lhs.true:                                    ; preds = %if.end323
  %237 = load i32, i32* %filename_size, align 4, !dbg !2708
  %conv325 = zext i32 %237 to i64, !dbg !2708
  %238 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2709
  %filename_save_size = getelementptr inbounds %struct.rar, %struct.rar* %238, i32 0, i32 14, !dbg !2710
  %239 = load i64, i64* %filename_save_size, align 8, !dbg !2710
  %cmp326 = icmp eq i64 %conv325, %239, !dbg !2711
  br i1 %cmp326, label %land.lhs.true328, label %if.end395, !dbg !2712

land.lhs.true328:                                 ; preds = %land.lhs.true
  %240 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2713
  %filename329 = getelementptr inbounds %struct.rar, %struct.rar* %240, i32 0, i32 12, !dbg !2714
  %241 = load i8*, i8** %filename329, align 8, !dbg !2714
  %242 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2715
  %filename_save330 = getelementptr inbounds %struct.rar, %struct.rar* %242, i32 0, i32 13, !dbg !2716
  %243 = load i8*, i8** %filename_save330, align 8, !dbg !2716
  %244 = load i32, i32* %filename_size, align 4, !dbg !2717
  %add331 = add i32 %244, 1, !dbg !2718
  %conv332 = zext i32 %add331 to i64, !dbg !2717
  %call333 = call i32 @memcmp(i8* %241, i8* %243, i64 %conv332) #9, !dbg !2719
  %tobool334 = icmp ne i32 %call333, 0, !dbg !2719
  br i1 %tobool334, label %if.end395, label %if.then335, !dbg !2720

if.then335:                                       ; preds = %land.lhs.true328
  %245 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2722
  %246 = load i64, i64* %header_size, align 8, !dbg !2724
  %sub336 = sub nsw i64 %246, 7, !dbg !2725
  %call337 = call i64 @__archive_read_consume(%struct.archive_read* %245, i64 %sub336), !dbg !2726
  %247 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2727
  %cursor = getelementptr inbounds %struct.rar, %struct.rar* %247, i32 0, i32 40, !dbg !2728
  %248 = load i32, i32* %cursor, align 8, !dbg !2729
  %inc338 = add i32 %248, 1, !dbg !2729
  store i32 %inc338, i32* %cursor, align 8, !dbg !2729
  %249 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2730
  %cursor339 = getelementptr inbounds %struct.rar, %struct.rar* %249, i32 0, i32 40, !dbg !2732
  %250 = load i32, i32* %cursor339, align 8, !dbg !2732
  %251 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2733
  %nodes = getelementptr inbounds %struct.rar, %struct.rar* %251, i32 0, i32 41, !dbg !2734
  %252 = load i32, i32* %nodes, align 4, !dbg !2734
  %cmp340 = icmp uge i32 %250, %252, !dbg !2735
  br i1 %cmp340, label %if.then342, label %if.end368, !dbg !2736

if.then342:                                       ; preds = %if.then335
  %253 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2737
  %nodes343 = getelementptr inbounds %struct.rar, %struct.rar* %253, i32 0, i32 41, !dbg !2739
  %254 = load i32, i32* %nodes343, align 4, !dbg !2740
  %inc344 = add i32 %254, 1, !dbg !2740
  store i32 %inc344, i32* %nodes343, align 4, !dbg !2740
  %255 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2741
  %dbo = getelementptr inbounds %struct.rar, %struct.rar* %255, i32 0, i32 39, !dbg !2743
  %256 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo, align 8, !dbg !2743
  %257 = bitcast %struct.data_block_offsets* %256 to i8*, !dbg !2741
  %258 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2744
  %nodes345 = getelementptr inbounds %struct.rar, %struct.rar* %258, i32 0, i32 41, !dbg !2745
  %259 = load i32, i32* %nodes345, align 4, !dbg !2745
  %conv346 = zext i32 %259 to i64, !dbg !2744
  %mul347 = mul i64 24, %conv346, !dbg !2746
  %call348 = call i8* @realloc(i8* %257, i64 %mul347) #8, !dbg !2747
  %260 = bitcast i8* %call348 to %struct.data_block_offsets*, !dbg !2747
  %261 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2748
  %dbo349 = getelementptr inbounds %struct.rar, %struct.rar* %261, i32 0, i32 39, !dbg !2749
  store %struct.data_block_offsets* %260, %struct.data_block_offsets** %dbo349, align 8, !dbg !2750
  %cmp350 = icmp eq %struct.data_block_offsets* %260, null, !dbg !2751
  br i1 %cmp350, label %if.then352, label %if.end354, !dbg !2752

if.then352:                                       ; preds = %if.then342
  %262 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2753
  %archive353 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %262, i32 0, i32 0, !dbg !2755
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive353, i32 12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0)), !dbg !2756
  store i32 -30, i32* %retval, align 4, !dbg !2757
  br label %return, !dbg !2757

if.end354:                                        ; preds = %if.then342
  %263 = load i64, i64* %header_size, align 8, !dbg !2758
  %264 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2759
  %cursor355 = getelementptr inbounds %struct.rar, %struct.rar* %264, i32 0, i32 40, !dbg !2760
  %265 = load i32, i32* %cursor355, align 8, !dbg !2760
  %idxprom356 = zext i32 %265 to i64, !dbg !2761
  %266 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2761
  %dbo357 = getelementptr inbounds %struct.rar, %struct.rar* %266, i32 0, i32 39, !dbg !2762
  %267 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo357, align 8, !dbg !2762
  %arrayidx358 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %267, i64 %idxprom356, !dbg !2761
  %header_size359 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx358, i32 0, i32 0, !dbg !2763
  store i64 %263, i64* %header_size359, align 8, !dbg !2764
  %268 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2765
  %cursor360 = getelementptr inbounds %struct.rar, %struct.rar* %268, i32 0, i32 40, !dbg !2766
  %269 = load i32, i32* %cursor360, align 8, !dbg !2766
  %idxprom361 = zext i32 %269 to i64, !dbg !2767
  %270 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2767
  %dbo362 = getelementptr inbounds %struct.rar, %struct.rar* %270, i32 0, i32 39, !dbg !2768
  %271 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo362, align 8, !dbg !2768
  %arrayidx363 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %271, i64 %idxprom361, !dbg !2767
  %start_offset = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx363, i32 0, i32 1, !dbg !2769
  store i64 -1, i64* %start_offset, align 8, !dbg !2770
  %272 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2771
  %cursor364 = getelementptr inbounds %struct.rar, %struct.rar* %272, i32 0, i32 40, !dbg !2772
  %273 = load i32, i32* %cursor364, align 8, !dbg !2772
  %idxprom365 = zext i32 %273 to i64, !dbg !2773
  %274 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2773
  %dbo366 = getelementptr inbounds %struct.rar, %struct.rar* %274, i32 0, i32 39, !dbg !2774
  %275 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo366, align 8, !dbg !2774
  %arrayidx367 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %275, i64 %idxprom365, !dbg !2773
  %end_offset = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx367, i32 0, i32 2, !dbg !2775
  store i64 -1, i64* %end_offset, align 8, !dbg !2776
  br label %if.end368, !dbg !2777

if.end368:                                        ; preds = %if.end354, %if.then335
  %276 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2778
  %cursor369 = getelementptr inbounds %struct.rar, %struct.rar* %276, i32 0, i32 40, !dbg !2780
  %277 = load i32, i32* %cursor369, align 8, !dbg !2780
  %idxprom370 = zext i32 %277 to i64, !dbg !2781
  %278 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2781
  %dbo371 = getelementptr inbounds %struct.rar, %struct.rar* %278, i32 0, i32 39, !dbg !2782
  %279 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo371, align 8, !dbg !2782
  %arrayidx372 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %279, i64 %idxprom370, !dbg !2781
  %start_offset373 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx372, i32 0, i32 1, !dbg !2783
  %280 = load i64, i64* %start_offset373, align 8, !dbg !2783
  %cmp374 = icmp slt i64 %280, 0, !dbg !2784
  br i1 %cmp374, label %if.then376, label %if.end394, !dbg !2785

if.then376:                                       ; preds = %if.end368
  %281 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2786
  %filter = getelementptr inbounds %struct.archive_read, %struct.archive_read* %281, i32 0, i32 7, !dbg !2788
  %282 = load %struct.archive_read_filter*, %struct.archive_read_filter** %filter, align 8, !dbg !2788
  %position = getelementptr inbounds %struct.archive_read_filter, %struct.archive_read_filter* %282, i32 0, i32 0, !dbg !2789
  %283 = load i64, i64* %position, align 8, !dbg !2789
  %284 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2790
  %cursor377 = getelementptr inbounds %struct.rar, %struct.rar* %284, i32 0, i32 40, !dbg !2791
  %285 = load i32, i32* %cursor377, align 8, !dbg !2791
  %idxprom378 = zext i32 %285 to i64, !dbg !2792
  %286 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2792
  %dbo379 = getelementptr inbounds %struct.rar, %struct.rar* %286, i32 0, i32 39, !dbg !2793
  %287 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo379, align 8, !dbg !2793
  %arrayidx380 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %287, i64 %idxprom378, !dbg !2792
  %start_offset381 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx380, i32 0, i32 1, !dbg !2794
  store i64 %283, i64* %start_offset381, align 8, !dbg !2795
  %288 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2796
  %cursor382 = getelementptr inbounds %struct.rar, %struct.rar* %288, i32 0, i32 40, !dbg !2797
  %289 = load i32, i32* %cursor382, align 8, !dbg !2797
  %idxprom383 = zext i32 %289 to i64, !dbg !2798
  %290 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2798
  %dbo384 = getelementptr inbounds %struct.rar, %struct.rar* %290, i32 0, i32 39, !dbg !2799
  %291 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo384, align 8, !dbg !2799
  %arrayidx385 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %291, i64 %idxprom383, !dbg !2798
  %start_offset386 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx385, i32 0, i32 1, !dbg !2800
  %292 = load i64, i64* %start_offset386, align 8, !dbg !2800
  %293 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2801
  %packed_size387 = getelementptr inbounds %struct.rar, %struct.rar* %293, i32 0, i32 7, !dbg !2802
  %294 = load i64, i64* %packed_size387, align 8, !dbg !2802
  %add388 = add nsw i64 %292, %294, !dbg !2803
  %295 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2804
  %cursor389 = getelementptr inbounds %struct.rar, %struct.rar* %295, i32 0, i32 40, !dbg !2805
  %296 = load i32, i32* %cursor389, align 8, !dbg !2805
  %idxprom390 = zext i32 %296 to i64, !dbg !2806
  %297 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2806
  %dbo391 = getelementptr inbounds %struct.rar, %struct.rar* %297, i32 0, i32 39, !dbg !2807
  %298 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo391, align 8, !dbg !2807
  %arrayidx392 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %298, i64 %idxprom390, !dbg !2806
  %end_offset393 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx392, i32 0, i32 2, !dbg !2808
  store i64 %add388, i64* %end_offset393, align 8, !dbg !2809
  br label %if.end394, !dbg !2810

if.end394:                                        ; preds = %if.then376, %if.end368
  %299 = load i32, i32* %ret, align 4, !dbg !2811
  store i32 %299, i32* %retval, align 4, !dbg !2812
  br label %return, !dbg !2812

if.end395:                                        ; preds = %land.lhs.true328, %land.lhs.true, %if.end323
  %300 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2813
  %filename_save396 = getelementptr inbounds %struct.rar, %struct.rar* %300, i32 0, i32 13, !dbg !2814
  %301 = load i8*, i8** %filename_save396, align 8, !dbg !2814
  %302 = load i32, i32* %filename_size, align 4, !dbg !2815
  %add397 = add i32 %302, 1, !dbg !2816
  %conv398 = zext i32 %add397 to i64, !dbg !2815
  %call399 = call i8* @realloc(i8* %301, i64 %conv398) #8, !dbg !2817
  %303 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2818
  %filename_save400 = getelementptr inbounds %struct.rar, %struct.rar* %303, i32 0, i32 13, !dbg !2819
  store i8* %call399, i8** %filename_save400, align 8, !dbg !2820
  %304 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2821
  %filename_save401 = getelementptr inbounds %struct.rar, %struct.rar* %304, i32 0, i32 13, !dbg !2822
  %305 = load i8*, i8** %filename_save401, align 8, !dbg !2822
  %306 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2823
  %filename402 = getelementptr inbounds %struct.rar, %struct.rar* %306, i32 0, i32 12, !dbg !2824
  %307 = load i8*, i8** %filename402, align 8, !dbg !2824
  %308 = load i32, i32* %filename_size, align 4, !dbg !2825
  %add403 = add i32 %308, 1, !dbg !2826
  %conv404 = zext i32 %add403 to i64, !dbg !2825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %305, i8* %307, i64 %conv404, i32 1, i1 false), !dbg !2827
  %309 = load i32, i32* %filename_size, align 4, !dbg !2828
  %conv405 = zext i32 %309 to i64, !dbg !2828
  %310 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2829
  %filename_save_size406 = getelementptr inbounds %struct.rar, %struct.rar* %310, i32 0, i32 14, !dbg !2830
  store i64 %conv405, i64* %filename_save_size406, align 8, !dbg !2831
  %311 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2832
  %dbo407 = getelementptr inbounds %struct.rar, %struct.rar* %311, i32 0, i32 39, !dbg !2833
  %312 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo407, align 8, !dbg !2833
  %313 = bitcast %struct.data_block_offsets* %312 to i8*, !dbg !2832
  call void @free(i8* %313) #8, !dbg !2834
  %call408 = call noalias i8* @calloc(i64 1, i64 24) #8, !dbg !2835
  %314 = bitcast i8* %call408 to %struct.data_block_offsets*, !dbg !2835
  %315 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2837
  %dbo409 = getelementptr inbounds %struct.rar, %struct.rar* %315, i32 0, i32 39, !dbg !2838
  store %struct.data_block_offsets* %314, %struct.data_block_offsets** %dbo409, align 8, !dbg !2839
  %cmp410 = icmp eq %struct.data_block_offsets* %314, null, !dbg !2840
  br i1 %cmp410, label %if.then412, label %if.end414, !dbg !2841

if.then412:                                       ; preds = %if.end395
  %316 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2842
  %archive413 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %316, i32 0, i32 0, !dbg !2844
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive413, i32 12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0)), !dbg !2845
  store i32 -30, i32* %retval, align 4, !dbg !2846
  br label %return, !dbg !2846

if.end414:                                        ; preds = %if.end395
  %317 = load i64, i64* %header_size, align 8, !dbg !2847
  %318 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2848
  %dbo415 = getelementptr inbounds %struct.rar, %struct.rar* %318, i32 0, i32 39, !dbg !2849
  %319 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo415, align 8, !dbg !2849
  %arrayidx416 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %319, i64 0, !dbg !2848
  %header_size417 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx416, i32 0, i32 0, !dbg !2850
  store i64 %317, i64* %header_size417, align 8, !dbg !2851
  %320 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2852
  %dbo418 = getelementptr inbounds %struct.rar, %struct.rar* %320, i32 0, i32 39, !dbg !2853
  %321 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo418, align 8, !dbg !2853
  %arrayidx419 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %321, i64 0, !dbg !2852
  %start_offset420 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx419, i32 0, i32 1, !dbg !2854
  store i64 -1, i64* %start_offset420, align 8, !dbg !2855
  %322 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2856
  %dbo421 = getelementptr inbounds %struct.rar, %struct.rar* %322, i32 0, i32 39, !dbg !2857
  %323 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo421, align 8, !dbg !2857
  %arrayidx422 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %323, i64 0, !dbg !2856
  %end_offset423 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx422, i32 0, i32 2, !dbg !2858
  store i64 -1, i64* %end_offset423, align 8, !dbg !2859
  %324 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2860
  %cursor424 = getelementptr inbounds %struct.rar, %struct.rar* %324, i32 0, i32 40, !dbg !2861
  store i32 0, i32* %cursor424, align 8, !dbg !2862
  %325 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2863
  %nodes425 = getelementptr inbounds %struct.rar, %struct.rar* %325, i32 0, i32 41, !dbg !2864
  store i32 1, i32* %nodes425, align 4, !dbg !2865
  %326 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2866
  %file_flags426 = getelementptr inbounds %struct.rar, %struct.rar* %326, i32 0, i32 6, !dbg !2868
  %327 = load i32, i32* %file_flags426, align 8, !dbg !2868
  %and427 = and i32 %327, 1024, !dbg !2869
  %tobool428 = icmp ne i32 %and427, 0, !dbg !2869
  br i1 %tobool428, label %if.then429, label %if.end439, !dbg !2870

if.then429:                                       ; preds = %if.end414
  %328 = load i8*, i8** %p, align 8, !dbg !2871
  %add.ptr430 = getelementptr inbounds i8, i8* %328, i64 8, !dbg !2874
  %329 = load i8*, i8** %endp, align 8, !dbg !2875
  %cmp431 = icmp ugt i8* %add.ptr430, %329, !dbg !2876
  br i1 %cmp431, label %if.then433, label %if.end435, !dbg !2877

if.then433:                                       ; preds = %if.then429
  %330 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2878
  %archive434 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %330, i32 0, i32 0, !dbg !2880
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive434, i32 84, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0)), !dbg !2881
  store i32 -30, i32* %retval, align 4, !dbg !2882
  br label %return, !dbg !2882

if.end435:                                        ; preds = %if.then429
  %331 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2883
  %salt436 = getelementptr inbounds %struct.rar, %struct.rar* %331, i32 0, i32 16, !dbg !2884
  %arraydecay437 = getelementptr inbounds [8 x i8], [8 x i8]* %salt436, i32 0, i32 0, !dbg !2885
  %332 = load i8*, i8** %p, align 8, !dbg !2886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay437, i8* %332, i64 8, i32 1, i1 false), !dbg !2885
  %333 = load i8*, i8** %p, align 8, !dbg !2887
  %add.ptr438 = getelementptr inbounds i8, i8* %333, i64 8, !dbg !2887
  store i8* %add.ptr438, i8** %p, align 8, !dbg !2887
  br label %if.end439, !dbg !2888

if.end439:                                        ; preds = %if.end435, %if.end414
  %334 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2889
  %file_flags440 = getelementptr inbounds %struct.rar, %struct.rar* %334, i32 0, i32 6, !dbg !2891
  %335 = load i32, i32* %file_flags440, align 8, !dbg !2891
  %and441 = and i32 %335, 4096, !dbg !2892
  %tobool442 = icmp ne i32 %and441, 0, !dbg !2892
  br i1 %tobool442, label %if.then443, label %if.end450, !dbg !2893

if.then443:                                       ; preds = %if.end439
  %336 = load i8*, i8** %p, align 8, !dbg !2894
  %337 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2897
  %338 = load i8*, i8** %endp, align 8, !dbg !2898
  %call444 = call i32 @read_exttime(i8* %336, %struct.rar* %337, i8* %338), !dbg !2899
  %cmp445 = icmp slt i32 %call444, 0, !dbg !2900
  br i1 %cmp445, label %if.then447, label %if.end449, !dbg !2901

if.then447:                                       ; preds = %if.then443
  %339 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2902
  %archive448 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %339, i32 0, i32 0, !dbg !2904
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive448, i32 84, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0)), !dbg !2905
  store i32 -30, i32* %retval, align 4, !dbg !2906
  br label %return, !dbg !2906

if.end449:                                        ; preds = %if.then443
  br label %if.end450, !dbg !2907

if.end450:                                        ; preds = %if.end449, %if.end439
  %340 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2908
  %341 = load i64, i64* %header_size, align 8, !dbg !2909
  %sub451 = sub nsw i64 %341, 7, !dbg !2910
  %call452 = call i64 @__archive_read_consume(%struct.archive_read* %340, i64 %sub451), !dbg !2911
  %342 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2912
  %filter453 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %342, i32 0, i32 7, !dbg !2913
  %343 = load %struct.archive_read_filter*, %struct.archive_read_filter** %filter453, align 8, !dbg !2913
  %position454 = getelementptr inbounds %struct.archive_read_filter, %struct.archive_read_filter* %343, i32 0, i32 0, !dbg !2914
  %344 = load i64, i64* %position454, align 8, !dbg !2914
  %345 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2915
  %dbo455 = getelementptr inbounds %struct.rar, %struct.rar* %345, i32 0, i32 39, !dbg !2916
  %346 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo455, align 8, !dbg !2916
  %arrayidx456 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %346, i64 0, !dbg !2915
  %start_offset457 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx456, i32 0, i32 1, !dbg !2917
  store i64 %344, i64* %start_offset457, align 8, !dbg !2918
  %347 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2919
  %dbo458 = getelementptr inbounds %struct.rar, %struct.rar* %347, i32 0, i32 39, !dbg !2920
  %348 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo458, align 8, !dbg !2920
  %arrayidx459 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %348, i64 0, !dbg !2919
  %start_offset460 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx459, i32 0, i32 1, !dbg !2921
  %349 = load i64, i64* %start_offset460, align 8, !dbg !2921
  %350 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2922
  %packed_size461 = getelementptr inbounds %struct.rar, %struct.rar* %350, i32 0, i32 7, !dbg !2923
  %351 = load i64, i64* %packed_size461, align 8, !dbg !2923
  %add462 = add nsw i64 %349, %351, !dbg !2924
  %352 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2925
  %dbo463 = getelementptr inbounds %struct.rar, %struct.rar* %352, i32 0, i32 39, !dbg !2926
  %353 = load %struct.data_block_offsets*, %struct.data_block_offsets** %dbo463, align 8, !dbg !2926
  %arrayidx464 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %353, i64 0, !dbg !2925
  %end_offset465 = getelementptr inbounds %struct.data_block_offsets, %struct.data_block_offsets* %arrayidx464, i32 0, i32 2, !dbg !2927
  store i64 %add462, i64* %end_offset465, align 8, !dbg !2928
  %host_os = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 2, !dbg !2929
  %354 = load i8, i8* %host_os, align 1, !dbg !2929
  %conv466 = sext i8 %354 to i32, !dbg !2930
  switch i32 %conv466, label %sw.default [
    i32 0, label %sw.bb467
    i32 1, label %sw.bb467
    i32 2, label %sw.bb467
    i32 3, label %sw.bb480
    i32 4, label %sw.bb480
    i32 5, label %sw.bb480
  ], !dbg !2931

sw.bb467:                                         ; preds = %if.end450, %if.end450, %if.end450
  %file_attr = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 8, !dbg !2932
  %arraydecay468 = getelementptr inbounds [4 x i8], [4 x i8]* %file_attr, i32 0, i32 0, !dbg !2934
  %call469 = call i32 @archive_le32dec(i8* %arraydecay468), !dbg !2935
  %355 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2936
  %mode470 = getelementptr inbounds %struct.rar, %struct.rar* %355, i32 0, i32 11, !dbg !2937
  store i32 %call469, i32* %mode470, align 8, !dbg !2938
  %356 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2939
  %mode471 = getelementptr inbounds %struct.rar, %struct.rar* %356, i32 0, i32 11, !dbg !2941
  %357 = load i32, i32* %mode471, align 8, !dbg !2941
  %and472 = and i32 %357, 16, !dbg !2942
  %tobool473 = icmp ne i32 %and472, 0, !dbg !2942
  br i1 %tobool473, label %if.then474, label %if.else476, !dbg !2943

if.then474:                                       ; preds = %sw.bb467
  %358 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2944
  %mode475 = getelementptr inbounds %struct.rar, %struct.rar* %358, i32 0, i32 11, !dbg !2945
  store i32 16457, i32* %mode475, align 8, !dbg !2946
  br label %if.end478, !dbg !2944

if.else476:                                       ; preds = %sw.bb467
  %359 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2947
  %mode477 = getelementptr inbounds %struct.rar, %struct.rar* %359, i32 0, i32 11, !dbg !2948
  store i32 32768, i32* %mode477, align 8, !dbg !2949
  br label %if.end478

if.end478:                                        ; preds = %if.else476, %if.then474
  %360 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2950
  %mode479 = getelementptr inbounds %struct.rar, %struct.rar* %360, i32 0, i32 11, !dbg !2951
  %361 = load i32, i32* %mode479, align 8, !dbg !2952
  %or = or i32 %361, 420, !dbg !2952
  store i32 %or, i32* %mode479, align 8, !dbg !2952
  br label %sw.epilog486, !dbg !2953

sw.bb480:                                         ; preds = %if.end450, %if.end450, %if.end450
  %file_attr481 = getelementptr inbounds %struct.rar_file_header, %struct.rar_file_header* %file_header, i32 0, i32 8, !dbg !2954
  %arraydecay482 = getelementptr inbounds [4 x i8], [4 x i8]* %file_attr481, i32 0, i32 0, !dbg !2955
  %call483 = call i32 @archive_le32dec(i8* %arraydecay482), !dbg !2956
  %362 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2957
  %mode484 = getelementptr inbounds %struct.rar, %struct.rar* %362, i32 0, i32 11, !dbg !2958
  store i32 %call483, i32* %mode484, align 8, !dbg !2959
  br label %sw.epilog486, !dbg !2960

sw.default:                                       ; preds = %if.end450
  %363 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2961
  %archive485 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %363, i32 0, i32 0, !dbg !2962
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive485, i32 84, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24, i32 0, i32 0)), !dbg !2963
  store i32 -30, i32* %retval, align 4, !dbg !2964
  br label %return, !dbg !2964

sw.epilog486:                                     ; preds = %sw.bb480, %if.end478
  %364 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2965
  %bytes_unconsumed = getelementptr inbounds %struct.rar, %struct.rar* %364, i32 0, i32 23, !dbg !2966
  store i64 0, i64* %bytes_unconsumed, align 8, !dbg !2967
  %365 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2968
  %bytes_uncopied = getelementptr inbounds %struct.rar, %struct.rar* %365, i32 0, i32 25, !dbg !2969
  store i64 0, i64* %bytes_uncopied, align 8, !dbg !2970
  %366 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2971
  %offset487 = getelementptr inbounds %struct.rar, %struct.rar* %366, i32 0, i32 26, !dbg !2972
  store i64 0, i64* %offset487, align 8, !dbg !2973
  %367 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2974
  %lzss = getelementptr inbounds %struct.rar, %struct.rar* %367, i32 0, i32 47, !dbg !2975
  %position488 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss, i32 0, i32 2, !dbg !2976
  store i64 0, i64* %position488, align 8, !dbg !2977
  %368 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2978
  %offset_seek = getelementptr inbounds %struct.rar, %struct.rar* %368, i32 0, i32 28, !dbg !2979
  store i64 0, i64* %offset_seek, align 8, !dbg !2980
  %369 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2981
  %dictionary_size = getelementptr inbounds %struct.rar, %struct.rar* %369, i32 0, i32 33, !dbg !2982
  store i32 0, i32* %dictionary_size, align 8, !dbg !2983
  %370 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2984
  %offset_outgoing = getelementptr inbounds %struct.rar, %struct.rar* %370, i32 0, i32 27, !dbg !2985
  store i64 0, i64* %offset_outgoing, align 8, !dbg !2986
  %371 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2987
  %br = getelementptr inbounds %struct.rar, %struct.rar* %371, i32 0, i32 68, !dbg !2988
  %cache_avail = getelementptr inbounds %struct.rar_br, %struct.rar_br* %br, i32 0, i32 1, !dbg !2989
  store i32 0, i32* %cache_avail, align 8, !dbg !2990
  %372 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2991
  %br489 = getelementptr inbounds %struct.rar, %struct.rar* %372, i32 0, i32 68, !dbg !2992
  %avail_in = getelementptr inbounds %struct.rar_br, %struct.rar_br* %br489, i32 0, i32 2, !dbg !2993
  store i64 0, i64* %avail_in, align 8, !dbg !2994
  %373 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2995
  %crc_calculated = getelementptr inbounds %struct.rar, %struct.rar* %373, i32 0, i32 36, !dbg !2996
  store i64 0, i64* %crc_calculated, align 8, !dbg !2997
  %374 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !2998
  %entry_eof = getelementptr inbounds %struct.rar, %struct.rar* %374, i32 0, i32 35, !dbg !2999
  store i8 0, i8* %entry_eof, align 1, !dbg !3000
  %375 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3001
  %valid = getelementptr inbounds %struct.rar, %struct.rar* %375, i32 0, i32 29, !dbg !3002
  store i8 1, i8* %valid, align 8, !dbg !3003
  %376 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3004
  %is_ppmd_block = getelementptr inbounds %struct.rar, %struct.rar* %376, i32 0, i32 58, !dbg !3005
  store i8 0, i8* %is_ppmd_block, align 1, !dbg !3006
  %377 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3007
  %start_new_table = getelementptr inbounds %struct.rar, %struct.rar* %377, i32 0, i32 55, !dbg !3008
  store i8 1, i8* %start_new_table, align 8, !dbg !3009
  %378 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3010
  %unp_buffer = getelementptr inbounds %struct.rar, %struct.rar* %378, i32 0, i32 32, !dbg !3011
  %379 = load i8*, i8** %unp_buffer, align 8, !dbg !3011
  call void @free(i8* %379) #8, !dbg !3012
  %380 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3013
  %unp_buffer490 = getelementptr inbounds %struct.rar, %struct.rar* %380, i32 0, i32 32, !dbg !3014
  store i8* null, i8** %unp_buffer490, align 8, !dbg !3015
  %381 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3016
  %unp_offset = getelementptr inbounds %struct.rar, %struct.rar* %381, i32 0, i32 30, !dbg !3017
  store i32 0, i32* %unp_offset, align 4, !dbg !3018
  %382 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3019
  %unp_buffer_size = getelementptr inbounds %struct.rar, %struct.rar* %382, i32 0, i32 31, !dbg !3020
  store i32 131072, i32* %unp_buffer_size, align 8, !dbg !3021
  %383 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3022
  %lengthtable = getelementptr inbounds %struct.rar, %struct.rar* %383, i32 0, i32 46, !dbg !3023
  %arraydecay491 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable, i32 0, i32 0, !dbg !3024
  call void @llvm.memset.p0i8.i64(i8* %arraydecay491, i8 0, i64 404, i32 8, i1 false), !dbg !3024
  %384 = load void (%struct.CPpmd7*, %struct.ISzAlloc*)*, void (%struct.CPpmd7*, %struct.ISzAlloc*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 2), align 8, !dbg !3025
  %385 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3026
  %ppmd7_context = getelementptr inbounds %struct.rar, %struct.rar* %385, i32 0, i32 60, !dbg !3027
  call void %384(%struct.CPpmd7* %ppmd7_context, %struct.ISzAlloc* @g_szalloc), !dbg !3028
  %386 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3029
  %ppmd_eod = getelementptr inbounds %struct.rar, %struct.rar* %386, i32 0, i32 57, !dbg !3030
  store i8 0, i8* %ppmd_eod, align 2, !dbg !3031
  %387 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3032
  %ppmd_valid = getelementptr inbounds %struct.rar, %struct.rar* %387, i32 0, i32 56, !dbg !3033
  store i8 0, i8* %ppmd_valid, align 1, !dbg !3034
  %388 = load i8, i8* %head_type.addr, align 1, !dbg !3035
  %conv492 = sext i8 %388 to i32, !dbg !3035
  %cmp493 = icmp eq i32 %conv492, 122, !dbg !3037
  br i1 %cmp493, label %if.then495, label %if.end496, !dbg !3038

if.then495:                                       ; preds = %sw.epilog486
  %389 = load i32, i32* %ret, align 4, !dbg !3039
  store i32 %389, i32* %retval, align 4, !dbg !3040
  br label %return, !dbg !3040

if.end496:                                        ; preds = %sw.epilog486
  %390 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3041
  %391 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3042
  %mtime497 = getelementptr inbounds %struct.rar, %struct.rar* %391, i32 0, i32 9, !dbg !3043
  %392 = load i64, i64* %mtime497, align 8, !dbg !3043
  %393 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3044
  %mnsec498 = getelementptr inbounds %struct.rar, %struct.rar* %393, i32 0, i32 10, !dbg !3045
  %394 = load i64, i64* %mnsec498, align 8, !dbg !3045
  call void @archive_entry_set_mtime(%struct.archive_entry* %390, i64 %392, i64 %394), !dbg !3046
  %395 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3047
  %396 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3048
  %ctime499 = getelementptr inbounds %struct.rar, %struct.rar* %396, i32 0, i32 19, !dbg !3049
  %397 = load i64, i64* %ctime499, align 8, !dbg !3049
  %398 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3050
  %cnsec500 = getelementptr inbounds %struct.rar, %struct.rar* %398, i32 0, i32 20, !dbg !3051
  %399 = load i64, i64* %cnsec500, align 8, !dbg !3051
  call void @archive_entry_set_ctime(%struct.archive_entry* %395, i64 %397, i64 %399), !dbg !3052
  %400 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3053
  %401 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3054
  %atime501 = getelementptr inbounds %struct.rar, %struct.rar* %401, i32 0, i32 17, !dbg !3055
  %402 = load i64, i64* %atime501, align 8, !dbg !3055
  %403 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3056
  %ansec502 = getelementptr inbounds %struct.rar, %struct.rar* %403, i32 0, i32 18, !dbg !3057
  %404 = load i64, i64* %ansec502, align 8, !dbg !3057
  call void @archive_entry_set_atime(%struct.archive_entry* %400, i64 %402, i64 %404), !dbg !3058
  %405 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3059
  %406 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3060
  %unp_size503 = getelementptr inbounds %struct.rar, %struct.rar* %406, i32 0, i32 8, !dbg !3061
  %407 = load i64, i64* %unp_size503, align 8, !dbg !3061
  call void @archive_entry_set_size(%struct.archive_entry* %405, i64 %407), !dbg !3062
  %408 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3063
  %409 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3064
  %mode504 = getelementptr inbounds %struct.rar, %struct.rar* %409, i32 0, i32 11, !dbg !3065
  %410 = load i32, i32* %mode504, align 8, !dbg !3065
  call void @archive_entry_set_mode(%struct.archive_entry* %408, i32 %410), !dbg !3066
  %411 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3067
  %412 = load i8*, i8** %filename, align 8, !dbg !3069
  %413 = load i32, i32* %filename_size, align 4, !dbg !3070
  %conv505 = zext i32 %413 to i64, !dbg !3070
  %414 = load %struct.archive_string_conv*, %struct.archive_string_conv** %fn_sconv, align 8, !dbg !3071
  %call506 = call i32 @_archive_entry_copy_pathname_l(%struct.archive_entry* %411, i8* %412, i64 %conv505, %struct.archive_string_conv* %414), !dbg !3072
  %tobool507 = icmp ne i32 %call506, 0, !dbg !3072
  br i1 %tobool507, label %if.then508, label %if.end517, !dbg !3073

if.then508:                                       ; preds = %if.end496
  %call509 = call i32* @__errno_location() #1, !dbg !3074
  %415 = load i32, i32* %call509, align 4, !dbg !3074
  %cmp510 = icmp eq i32 %415, 12, !dbg !3077
  br i1 %cmp510, label %if.then512, label %if.end514, !dbg !3078

if.then512:                                       ; preds = %if.then508
  %416 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3079
  %archive513 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %416, i32 0, i32 0, !dbg !3081
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive513, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i32 0, i32 0)), !dbg !3082
  store i32 -30, i32* %retval, align 4, !dbg !3083
  br label %return, !dbg !3083

if.end514:                                        ; preds = %if.then508
  %417 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3084
  %archive515 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %417, i32 0, i32 0, !dbg !3085
  %418 = load %struct.archive_string_conv*, %struct.archive_string_conv** %fn_sconv, align 8, !dbg !3086
  %call516 = call i8* @archive_string_conversion_charset_name(%struct.archive_string_conv* %418), !dbg !3087
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive515, i32 84, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.26, i32 0, i32 0), i8* %call516), !dbg !3088
  store i32 -20, i32* %ret, align 4, !dbg !3089
  br label %if.end517, !dbg !3090

if.end517:                                        ; preds = %if.end514, %if.end496
  %419 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3091
  %mode518 = getelementptr inbounds %struct.rar, %struct.rar* %419, i32 0, i32 11, !dbg !3093
  %420 = load i32, i32* %mode518, align 8, !dbg !3093
  %and519 = and i32 %420, 61440, !dbg !3094
  %cmp520 = icmp eq i32 %and519, 40960, !dbg !3095
  br i1 %cmp520, label %if.then522, label %if.end533, !dbg !3096

if.then522:                                       ; preds = %if.end517
  %421 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3097
  %bytes_remaining523 = getelementptr inbounds %struct.rar, %struct.rar* %421, i32 0, i32 24, !dbg !3099
  store i64 0, i64* %bytes_remaining523, align 8, !dbg !3100
  %422 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3101
  call void @archive_entry_set_size(%struct.archive_entry* %422, i64 0), !dbg !3102
  %423 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3103
  %424 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3105
  %425 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv, align 8, !dbg !3106
  %call524 = call i32 @read_symlink_stored(%struct.archive_read* %423, %struct.archive_entry* %424, %struct.archive_string_conv* %425), !dbg !3107
  store i32 %call524, i32* %ret2, align 4, !dbg !3108
  %cmp525 = icmp slt i32 %call524, -20, !dbg !3109
  br i1 %cmp525, label %if.then527, label %if.end528, !dbg !3110

if.then527:                                       ; preds = %if.then522
  %426 = load i32, i32* %ret2, align 4, !dbg !3111
  store i32 %426, i32* %retval, align 4, !dbg !3112
  br label %return, !dbg !3112

if.end528:                                        ; preds = %if.then522
  %427 = load i32, i32* %ret, align 4, !dbg !3113
  %428 = load i32, i32* %ret2, align 4, !dbg !3115
  %cmp529 = icmp sgt i32 %427, %428, !dbg !3116
  br i1 %cmp529, label %if.then531, label %if.end532, !dbg !3117

if.then531:                                       ; preds = %if.end528
  %429 = load i32, i32* %ret2, align 4, !dbg !3118
  store i32 %429, i32* %ret, align 4, !dbg !3119
  br label %if.end532, !dbg !3120

if.end532:                                        ; preds = %if.then531, %if.end528
  br label %if.end533, !dbg !3121

if.end533:                                        ; preds = %if.end532, %if.end517
  %430 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3122
  %bytes_remaining534 = getelementptr inbounds %struct.rar, %struct.rar* %430, i32 0, i32 24, !dbg !3124
  %431 = load i64, i64* %bytes_remaining534, align 8, !dbg !3124
  %cmp535 = icmp eq i64 %431, 0, !dbg !3125
  br i1 %cmp535, label %if.then537, label %if.end539, !dbg !3126

if.then537:                                       ; preds = %if.end533
  %432 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3127
  %entry_eof538 = getelementptr inbounds %struct.rar, %struct.rar* %432, i32 0, i32 35, !dbg !3128
  store i8 1, i8* %entry_eof538, align 1, !dbg !3129
  br label %if.end539, !dbg !3127

if.end539:                                        ; preds = %if.then537, %if.end533
  %433 = load i32, i32* %ret, align 4, !dbg !3130
  store i32 %433, i32* %retval, align 4, !dbg !3131
  br label %return, !dbg !3131

return:                                           ; preds = %if.end539, %if.then527, %if.then512, %if.then495, %sw.default, %if.then447, %if.then433, %if.then412, %if.end394, %if.then352, %if.then301, %if.then274, %if.then256, %if.then144, %if.then129, %if.then117, %if.then104, %if.then46, %if.then35, %if.else, %if.then16, %if.then8
  %434 = load i32, i32* %retval, align 4, !dbg !3132
  ret i32 %434, !dbg !3132
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @archive_le32dec(i8* %pp) #5 !dbg !573 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p3 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !3133, metadata !677), !dbg !3134
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3135, metadata !677), !dbg !3136
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !3137
  store i8* %0, i8** %p, align 8, !dbg !3136
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !3138, metadata !677), !dbg !3139
  %1 = load i8*, i8** %p, align 8, !dbg !3140
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 3, !dbg !3140
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3140
  %conv = zext i8 %2 to i32, !dbg !3140
  store i32 %conv, i32* %p3, align 4, !dbg !3139
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !3141, metadata !677), !dbg !3142
  %3 = load i8*, i8** %p, align 8, !dbg !3143
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !3143
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !3143
  %conv2 = zext i8 %4 to i32, !dbg !3143
  store i32 %conv2, i32* %p2, align 4, !dbg !3142
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !3144, metadata !677), !dbg !3145
  %5 = load i8*, i8** %p, align 8, !dbg !3146
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3146
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !3146
  %conv4 = zext i8 %6 to i32, !dbg !3146
  store i32 %conv4, i32* %p1, align 4, !dbg !3145
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !3147, metadata !677), !dbg !3148
  %7 = load i8*, i8** %p, align 8, !dbg !3149
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !3149
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !3149
  %conv6 = zext i8 %8 to i32, !dbg !3149
  store i32 %conv6, i32* %p0, align 4, !dbg !3148
  %9 = load i32, i32* %p3, align 4, !dbg !3150
  %shl = shl i32 %9, 24, !dbg !3151
  %10 = load i32, i32* %p2, align 4, !dbg !3152
  %shl7 = shl i32 %10, 16, !dbg !3153
  %or = or i32 %shl, %shl7, !dbg !3154
  %11 = load i32, i32* %p1, align 4, !dbg !3155
  %shl8 = shl i32 %11, 8, !dbg !3156
  %or9 = or i32 %or, %shl8, !dbg !3157
  %12 = load i32, i32* %p0, align 4, !dbg !3158
  %or10 = or i32 %or9, %12, !dbg !3159
  ret i32 %or10, !dbg !3160
}

declare %struct.archive_string_conv* @archive_string_default_conversion_for_read(%struct.archive*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal i64 @get_time(i32 %ttime) #0 !dbg !551 {
entry:
  %ttime.addr = alloca i32, align 4
  %tm = alloca %struct.tm, align 8
  store i32 %ttime, i32* %ttime.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ttime.addr, metadata !3161, metadata !677), !dbg !3162
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !3163, metadata !677), !dbg !3177
  %0 = load i32, i32* %ttime.addr, align 4, !dbg !3178
  %and = and i32 %0, 31, !dbg !3179
  %mul = mul nsw i32 2, %and, !dbg !3180
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0, !dbg !3181
  store i32 %mul, i32* %tm_sec, align 8, !dbg !3182
  %1 = load i32, i32* %ttime.addr, align 4, !dbg !3183
  %shr = ashr i32 %1, 5, !dbg !3184
  %and1 = and i32 %shr, 63, !dbg !3185
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !3186
  store i32 %and1, i32* %tm_min, align 4, !dbg !3187
  %2 = load i32, i32* %ttime.addr, align 4, !dbg !3188
  %shr2 = ashr i32 %2, 11, !dbg !3189
  %and3 = and i32 %shr2, 31, !dbg !3190
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !3191
  store i32 %and3, i32* %tm_hour, align 8, !dbg !3192
  %3 = load i32, i32* %ttime.addr, align 4, !dbg !3193
  %shr4 = ashr i32 %3, 16, !dbg !3194
  %and5 = and i32 %shr4, 31, !dbg !3195
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3, !dbg !3196
  store i32 %and5, i32* %tm_mday, align 4, !dbg !3197
  %4 = load i32, i32* %ttime.addr, align 4, !dbg !3198
  %shr6 = ashr i32 %4, 21, !dbg !3199
  %and7 = and i32 %shr6, 15, !dbg !3200
  %sub = sub nsw i32 %and7, 1, !dbg !3201
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !3202
  store i32 %sub, i32* %tm_mon, align 8, !dbg !3203
  %5 = load i32, i32* %ttime.addr, align 4, !dbg !3204
  %shr8 = ashr i32 %5, 25, !dbg !3205
  %and9 = and i32 %shr8, 127, !dbg !3206
  %add = add nsw i32 %and9, 80, !dbg !3207
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !3208
  store i32 %add, i32* %tm_year, align 4, !dbg !3209
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 8, !dbg !3210
  store i32 -1, i32* %tm_isdst, align 8, !dbg !3211
  %call = call i64 @mktime(%struct.tm* %tm) #8, !dbg !3212
  ret i64 %call, !dbg !3213
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @archive_le64dec(i8* %pp) #5 !dbg !554 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !3214, metadata !677), !dbg !3215
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3216, metadata !677), !dbg !3217
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !3218
  store i8* %0, i8** %p, align 8, !dbg !3217
  %1 = load i8*, i8** %p, align 8, !dbg !3219
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 4, !dbg !3220
  %call = call i32 @archive_le32dec(i8* %add.ptr), !dbg !3221
  %conv = zext i32 %call to i64, !dbg !3222
  %shl = shl i64 %conv, 32, !dbg !3223
  %2 = load i8*, i8** %p, align 8, !dbg !3224
  %call1 = call i32 @archive_le32dec(i8* %2), !dbg !3225
  %conv2 = zext i32 %call1 to i64, !dbg !3227
  %or = or i64 %shl, %conv2, !dbg !3228
  ret i64 %or, !dbg !3229
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @read_exttime(i8* %p, %struct.rar* %rar, i8* %endp) #0 !dbg !557 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %rar.addr = alloca %struct.rar*, align 8
  %endp.addr = alloca i8*, align 8
  %rmode = alloca i32, align 4
  %flags = alloca i32, align 4
  %rem = alloca i32, align 4
  %j = alloca i32, align 4
  %count = alloca i32, align 4
  %ttime = alloca i32, align 4
  %i = alloca i32, align 4
  %tm = alloca %struct.tm*, align 8
  %t = alloca i64, align 8
  %nsec = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3230, metadata !677), !dbg !3231
  store %struct.rar* %rar, %struct.rar** %rar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rar** %rar.addr, metadata !3232, metadata !677), !dbg !3233
  store i8* %endp, i8** %endp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %endp.addr, metadata !3234, metadata !677), !dbg !3235
  call void @llvm.dbg.declare(metadata i32* %rmode, metadata !3236, metadata !677), !dbg !3237
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !3238, metadata !677), !dbg !3239
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !3240, metadata !677), !dbg !3241
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3242, metadata !677), !dbg !3243
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3244, metadata !677), !dbg !3245
  call void @llvm.dbg.declare(metadata i32* %ttime, metadata !3246, metadata !677), !dbg !3247
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3248, metadata !677), !dbg !3249
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !3250, metadata !677), !dbg !3252
  call void @llvm.dbg.declare(metadata i64* %t, metadata !3253, metadata !677), !dbg !3254
  call void @llvm.dbg.declare(metadata i64* %nsec, metadata !3255, metadata !677), !dbg !3256
  %0 = load i8*, i8** %p.addr, align 8, !dbg !3257
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 2, !dbg !3259
  %1 = load i8*, i8** %endp.addr, align 8, !dbg !3260
  %cmp = icmp ugt i8* %add.ptr, %1, !dbg !3261
  br i1 %cmp, label %if.then, label %if.end, !dbg !3262

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3263
  br label %return, !dbg !3263

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !3264
  %call = call zeroext i16 @archive_le16dec(i8* %2), !dbg !3265
  %conv = zext i16 %call to i32, !dbg !3265
  store i32 %conv, i32* %flags, align 4, !dbg !3266
  %3 = load i8*, i8** %p.addr, align 8, !dbg !3267
  %add.ptr1 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !3267
  store i8* %add.ptr1, i8** %p.addr, align 8, !dbg !3267
  store i32 3, i32* %i, align 4, !dbg !3268
  br label %for.cond, !dbg !3270

for.cond:                                         ; preds = %for.inc57, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !3271
  %cmp2 = icmp sge i32 %4, 0, !dbg !3274
  br i1 %cmp2, label %for.body, label %for.end58, !dbg !3275

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %t, align 8, !dbg !3276
  %5 = load i32, i32* %i, align 4, !dbg !3278
  %cmp4 = icmp eq i32 %5, 3, !dbg !3280
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !3281

if.then6:                                         ; preds = %for.body
  %6 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3282
  %mtime = getelementptr inbounds %struct.rar, %struct.rar* %6, i32 0, i32 9, !dbg !3283
  %7 = load i64, i64* %mtime, align 8, !dbg !3283
  store i64 %7, i64* %t, align 8, !dbg !3284
  br label %if.end7, !dbg !3285

if.end7:                                          ; preds = %if.then6, %for.body
  %8 = load i32, i32* %flags, align 4, !dbg !3286
  %9 = load i32, i32* %i, align 4, !dbg !3287
  %mul = mul nsw i32 %9, 4, !dbg !3288
  %shr = lshr i32 %8, %mul, !dbg !3289
  store i32 %shr, i32* %rmode, align 4, !dbg !3290
  %10 = load i32, i32* %rmode, align 4, !dbg !3291
  %and = and i32 %10, 8, !dbg !3293
  %tobool = icmp ne i32 %and, 0, !dbg !3293
  br i1 %tobool, label %if.then8, label %if.end56, !dbg !3294

if.then8:                                         ; preds = %if.end7
  %11 = load i64, i64* %t, align 8, !dbg !3295
  %tobool9 = icmp ne i64 %11, 0, !dbg !3295
  br i1 %tobool9, label %if.end19, label %if.then10, !dbg !3298

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %p.addr, align 8, !dbg !3299
  %add.ptr11 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !3302
  %13 = load i8*, i8** %endp.addr, align 8, !dbg !3303
  %cmp12 = icmp ugt i8* %add.ptr11, %13, !dbg !3304
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3305

if.then14:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !3306
  br label %return, !dbg !3306

if.end15:                                         ; preds = %if.then10
  %14 = load i8*, i8** %p.addr, align 8, !dbg !3307
  %call16 = call i32 @archive_le32dec(i8* %14), !dbg !3308
  store i32 %call16, i32* %ttime, align 4, !dbg !3309
  %15 = load i32, i32* %ttime, align 4, !dbg !3310
  %call17 = call i64 @get_time(i32 %15), !dbg !3311
  store i64 %call17, i64* %t, align 8, !dbg !3312
  %16 = load i8*, i8** %p.addr, align 8, !dbg !3313
  %add.ptr18 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !3313
  store i8* %add.ptr18, i8** %p.addr, align 8, !dbg !3313
  br label %if.end19, !dbg !3314

if.end19:                                         ; preds = %if.end15, %if.then8
  store i32 0, i32* %rem, align 4, !dbg !3315
  %17 = load i32, i32* %rmode, align 4, !dbg !3316
  %and20 = and i32 %17, 3, !dbg !3317
  store i32 %and20, i32* %count, align 4, !dbg !3318
  %18 = load i8*, i8** %p.addr, align 8, !dbg !3319
  %19 = load i32, i32* %count, align 4, !dbg !3321
  %idx.ext = zext i32 %19 to i64, !dbg !3322
  %add.ptr21 = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !3322
  %20 = load i8*, i8** %endp.addr, align 8, !dbg !3323
  %cmp22 = icmp ugt i8* %add.ptr21, %20, !dbg !3324
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !3325

if.then24:                                        ; preds = %if.end19
  store i32 -1, i32* %retval, align 4, !dbg !3326
  br label %return, !dbg !3326

if.end25:                                         ; preds = %if.end19
  store i32 0, i32* %j, align 4, !dbg !3327
  br label %for.cond26, !dbg !3329

for.cond26:                                       ; preds = %for.inc, %if.end25
  %21 = load i32, i32* %j, align 4, !dbg !3330
  %22 = load i32, i32* %count, align 4, !dbg !3333
  %cmp27 = icmp ult i32 %21, %22, !dbg !3334
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !3335

for.body29:                                       ; preds = %for.cond26
  %23 = load i8*, i8** %p.addr, align 8, !dbg !3336
  %24 = load i8, i8* %23, align 1, !dbg !3338
  %conv30 = sext i8 %24 to i32, !dbg !3339
  %shl = shl i32 %conv30, 16, !dbg !3340
  %25 = load i32, i32* %rem, align 4, !dbg !3341
  %shr31 = lshr i32 %25, 8, !dbg !3342
  %or = or i32 %shl, %shr31, !dbg !3343
  store i32 %or, i32* %rem, align 4, !dbg !3344
  %26 = load i8*, i8** %p.addr, align 8, !dbg !3345
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3345
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !3345
  br label %for.inc, !dbg !3346

for.inc:                                          ; preds = %for.body29
  %27 = load i32, i32* %j, align 4, !dbg !3347
  %inc = add i32 %27, 1, !dbg !3347
  store i32 %inc, i32* %j, align 4, !dbg !3347
  br label %for.cond26, !dbg !3349

for.end:                                          ; preds = %for.cond26
  %call32 = call %struct.tm* @localtime(i64* %t) #8, !dbg !3350
  store %struct.tm* %call32, %struct.tm** %tm, align 8, !dbg !3351
  %28 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !3352
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %28, i32 0, i32 0, !dbg !3353
  %29 = load i32, i32* %tm_sec, align 8, !dbg !3353
  %30 = load i32, i32* %rem, align 4, !dbg !3354
  %div = udiv i32 %30, 10000000, !dbg !3355
  %add = add i32 %29, %div, !dbg !3356
  %conv33 = zext i32 %add to i64, !dbg !3352
  store i64 %conv33, i64* %nsec, align 8, !dbg !3357
  %31 = load i32, i32* %rmode, align 4, !dbg !3358
  %and34 = and i32 %31, 4, !dbg !3360
  %tobool35 = icmp ne i32 %and34, 0, !dbg !3360
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !3361

if.then36:                                        ; preds = %for.end
  %32 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !3362
  %tm_sec37 = getelementptr inbounds %struct.tm, %struct.tm* %32, i32 0, i32 0, !dbg !3364
  %33 = load i32, i32* %tm_sec37, align 8, !dbg !3365
  %inc38 = add nsw i32 %33, 1, !dbg !3365
  store i32 %inc38, i32* %tm_sec37, align 8, !dbg !3365
  %34 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !3366
  %call39 = call i64 @mktime(%struct.tm* %34) #8, !dbg !3367
  store i64 %call39, i64* %t, align 8, !dbg !3368
  br label %if.end40, !dbg !3369

if.end40:                                         ; preds = %if.then36, %for.end
  %35 = load i32, i32* %i, align 4, !dbg !3370
  %cmp41 = icmp eq i32 %35, 3, !dbg !3372
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !3373

if.then43:                                        ; preds = %if.end40
  %36 = load i64, i64* %t, align 8, !dbg !3374
  %37 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3376
  %mtime44 = getelementptr inbounds %struct.rar, %struct.rar* %37, i32 0, i32 9, !dbg !3377
  store i64 %36, i64* %mtime44, align 8, !dbg !3378
  %38 = load i64, i64* %nsec, align 8, !dbg !3379
  %39 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3380
  %mnsec = getelementptr inbounds %struct.rar, %struct.rar* %39, i32 0, i32 10, !dbg !3381
  store i64 %38, i64* %mnsec, align 8, !dbg !3382
  br label %if.end55, !dbg !3383

if.else:                                          ; preds = %if.end40
  %40 = load i32, i32* %i, align 4, !dbg !3384
  %cmp45 = icmp eq i32 %40, 2, !dbg !3386
  br i1 %cmp45, label %if.then47, label %if.else48, !dbg !3387

if.then47:                                        ; preds = %if.else
  %41 = load i64, i64* %t, align 8, !dbg !3388
  %42 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3390
  %ctime = getelementptr inbounds %struct.rar, %struct.rar* %42, i32 0, i32 19, !dbg !3391
  store i64 %41, i64* %ctime, align 8, !dbg !3392
  %43 = load i64, i64* %nsec, align 8, !dbg !3393
  %44 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3394
  %cnsec = getelementptr inbounds %struct.rar, %struct.rar* %44, i32 0, i32 20, !dbg !3395
  store i64 %43, i64* %cnsec, align 8, !dbg !3396
  br label %if.end54, !dbg !3397

if.else48:                                        ; preds = %if.else
  %45 = load i32, i32* %i, align 4, !dbg !3398
  %cmp49 = icmp eq i32 %45, 1, !dbg !3400
  br i1 %cmp49, label %if.then51, label %if.else52, !dbg !3401

if.then51:                                        ; preds = %if.else48
  %46 = load i64, i64* %t, align 8, !dbg !3402
  %47 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3404
  %atime = getelementptr inbounds %struct.rar, %struct.rar* %47, i32 0, i32 17, !dbg !3405
  store i64 %46, i64* %atime, align 8, !dbg !3406
  %48 = load i64, i64* %nsec, align 8, !dbg !3407
  %49 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3408
  %ansec = getelementptr inbounds %struct.rar, %struct.rar* %49, i32 0, i32 18, !dbg !3409
  store i64 %48, i64* %ansec, align 8, !dbg !3410
  br label %if.end53, !dbg !3411

if.else52:                                        ; preds = %if.else48
  %50 = load i64, i64* %t, align 8, !dbg !3412
  %51 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3414
  %arctime = getelementptr inbounds %struct.rar, %struct.rar* %51, i32 0, i32 21, !dbg !3415
  store i64 %50, i64* %arctime, align 8, !dbg !3416
  %52 = load i64, i64* %nsec, align 8, !dbg !3417
  %53 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !3418
  %arcnsec = getelementptr inbounds %struct.rar, %struct.rar* %53, i32 0, i32 22, !dbg !3419
  store i64 %52, i64* %arcnsec, align 8, !dbg !3420
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.then51
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then43
  br label %if.end56, !dbg !3421

if.end56:                                         ; preds = %if.end55, %if.end7
  br label %for.inc57, !dbg !3422

for.inc57:                                        ; preds = %if.end56
  %54 = load i32, i32* %i, align 4, !dbg !3423
  %dec = add nsw i32 %54, -1, !dbg !3423
  store i32 %dec, i32* %i, align 4, !dbg !3423
  br label %for.cond, !dbg !3425

for.end58:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3426
  br label %return, !dbg !3426

return:                                           ; preds = %for.end58, %if.then24, %if.then14, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !3427
  ret i32 %55, !dbg !3427
}

declare void @archive_entry_set_mtime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_ctime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_atime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_size(%struct.archive_entry*, i64) #2

declare void @archive_entry_set_mode(%struct.archive_entry*, i32) #2

declare i32 @_archive_entry_copy_pathname_l(%struct.archive_entry*, i8*, i64, %struct.archive_string_conv*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

declare i8* @archive_string_conversion_charset_name(%struct.archive_string_conv*) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_symlink_stored(%struct.archive_read* %a, %struct.archive_entry* %entry1, %struct.archive_string_conv* %sconv) #0 !dbg !566 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %sconv.addr = alloca %struct.archive_string_conv*, align 8
  %h = alloca i8*, align 8
  %p = alloca i8*, align 8
  %rar = alloca %struct.rar*, align 8
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3428, metadata !677), !dbg !3429
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !3430, metadata !677), !dbg !3431
  store %struct.archive_string_conv* %sconv, %struct.archive_string_conv** %sconv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_string_conv** %sconv.addr, metadata !3432, metadata !677), !dbg !3433
  call void @llvm.dbg.declare(metadata i8** %h, metadata !3434, metadata !677), !dbg !3435
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3436, metadata !677), !dbg !3437
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !3438, metadata !677), !dbg !3439
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3440, metadata !677), !dbg !3441
  store i32 0, i32* %ret, align 4, !dbg !3441
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3442
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3443
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3443
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3444
  %2 = load i8*, i8** %data, align 8, !dbg !3444
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !3445
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !3446
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3447
  %5 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3449
  %packed_size = getelementptr inbounds %struct.rar, %struct.rar* %5, i32 0, i32 7, !dbg !3450
  %6 = load i64, i64* %packed_size, align 8, !dbg !3450
  %call = call i8* @rar_read_ahead(%struct.archive_read* %4, i64 %6, i64* null), !dbg !3451
  store i8* %call, i8** %h, align 8, !dbg !3452
  %cmp = icmp eq i8* %call, null, !dbg !3453
  br i1 %cmp, label %if.then, label %if.end, !dbg !3454

if.then:                                          ; preds = %entry
  store i32 -30, i32* %retval, align 4, !dbg !3455
  br label %return, !dbg !3455

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %h, align 8, !dbg !3456
  store i8* %7, i8** %p, align 8, !dbg !3457
  %8 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3458
  %9 = load i8*, i8** %p, align 8, !dbg !3460
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3461
  %packed_size2 = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 7, !dbg !3462
  %11 = load i64, i64* %packed_size2, align 8, !dbg !3462
  %12 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv.addr, align 8, !dbg !3463
  %call3 = call i32 @_archive_entry_copy_symlink_l(%struct.archive_entry* %8, i8* %9, i64 %11, %struct.archive_string_conv* %12), !dbg !3464
  %tobool = icmp ne i32 %call3, 0, !dbg !3464
  br i1 %tobool, label %if.then4, label %if.end11, !dbg !3465

if.then4:                                         ; preds = %if.end
  %call5 = call i32* @__errno_location() #1, !dbg !3466
  %13 = load i32, i32* %call5, align 4, !dbg !3466
  %cmp6 = icmp eq i32 %13, 12, !dbg !3469
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3470

if.then7:                                         ; preds = %if.then4
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3471
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !3473
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0)), !dbg !3474
  store i32 -30, i32* %retval, align 4, !dbg !3475
  br label %return, !dbg !3475

if.end8:                                          ; preds = %if.then4
  %15 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3476
  %archive9 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %15, i32 0, i32 0, !dbg !3477
  %16 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv.addr, align 8, !dbg !3478
  %call10 = call i8* @archive_string_conversion_charset_name(%struct.archive_string_conv* %16), !dbg !3479
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive9, i32 84, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i8* %call10), !dbg !3480
  store i32 -20, i32* %ret, align 4, !dbg !3481
  br label %if.end11, !dbg !3482

if.end11:                                         ; preds = %if.end8, %if.end
  %17 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3483
  %18 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3484
  %packed_size12 = getelementptr inbounds %struct.rar, %struct.rar* %18, i32 0, i32 7, !dbg !3485
  %19 = load i64, i64* %packed_size12, align 8, !dbg !3485
  %call13 = call i64 @__archive_read_consume(%struct.archive_read* %17, i64 %19), !dbg !3486
  %20 = load i32, i32* %ret, align 4, !dbg !3487
  store i32 %20, i32* %retval, align 4, !dbg !3488
  br label %return, !dbg !3488

return:                                           ; preds = %if.end11, %if.then7, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !3489
  ret i32 %21, !dbg !3489
}

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm*) #3

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #3

; Function Attrs: nounwind uwtable
define internal i8* @ppmd_alloc(i8* %p, i64 %size) #0 !dbg !560 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3490, metadata !677), !dbg !3491
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !3492, metadata !677), !dbg !3493
  %0 = load i8*, i8** %p.addr, align 8, !dbg !3494
  %1 = load i64, i64* %size.addr, align 8, !dbg !3495
  %call = call noalias i8* @malloc(i64 %1) #8, !dbg !3496
  ret i8* %call, !dbg !3497
}

; Function Attrs: nounwind uwtable
define internal void @ppmd_free(i8* %p, i8* %address) #0 !dbg !563 {
entry:
  %p.addr = alloca i8*, align 8
  %address.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3498, metadata !677), !dbg !3499
  store i8* %address, i8** %address.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %address.addr, metadata !3500, metadata !677), !dbg !3501
  %0 = load i8*, i8** %p.addr, align 8, !dbg !3502
  %1 = load i8*, i8** %address.addr, align 8, !dbg !3503
  call void @free(i8* %1) #8, !dbg !3504
  ret void, !dbg !3505
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal i8* @rar_read_ahead(%struct.archive_read* %a, i64 %min, i64* %avail) #0 !dbg !569 {
entry:
  %retval = alloca i8*, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %min.addr = alloca i64, align 8
  %avail.addr = alloca i64*, align 8
  %rar = alloca %struct.rar*, align 8
  %h = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3506, metadata !677), !dbg !3507
  store i64 %min, i64* %min.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !3508, metadata !677), !dbg !3509
  store i64* %avail, i64** %avail.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %avail.addr, metadata !3510, metadata !677), !dbg !3511
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !3512, metadata !677), !dbg !3513
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3514
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3515
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3515
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3516
  %2 = load i8*, i8** %data, align 8, !dbg !3516
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !3517
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !3513
  call void @llvm.dbg.declare(metadata i8** %h, metadata !3518, metadata !677), !dbg !3519
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3520
  %5 = load i64, i64* %min.addr, align 8, !dbg !3521
  %6 = load i64*, i64** %avail.addr, align 8, !dbg !3522
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %4, i64 %5, i64* %6), !dbg !3523
  store i8* %call, i8** %h, align 8, !dbg !3519
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3524, metadata !677), !dbg !3525
  %7 = load i64*, i64** %avail.addr, align 8, !dbg !3526
  %tobool = icmp ne i64* %7, null, !dbg !3526
  br i1 %tobool, label %if.then, label %if.end38, !dbg !3528

if.then:                                          ; preds = %entry
  %8 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3529
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %8, i32 0, i32 0, !dbg !3532
  %read_data_is_posix_read = getelementptr inbounds %struct.archive, %struct.archive* %archive, i32 0, i32 19, !dbg !3533
  %9 = load i8, i8* %read_data_is_posix_read, align 8, !dbg !3533
  %conv = sext i8 %9 to i32, !dbg !3529
  %tobool1 = icmp ne i32 %conv, 0, !dbg !3529
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !3534

land.lhs.true:                                    ; preds = %if.then
  %10 = load i64*, i64** %avail.addr, align 8, !dbg !3535
  %11 = load i64, i64* %10, align 8, !dbg !3537
  %12 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3538
  %archive2 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %12, i32 0, i32 0, !dbg !3539
  %read_data_requested = getelementptr inbounds %struct.archive, %struct.archive* %archive2, i32 0, i32 20, !dbg !3540
  %13 = load i64, i64* %read_data_requested, align 8, !dbg !3540
  %cmp = icmp sgt i64 %11, %13, !dbg !3541
  br i1 %cmp, label %if.then4, label %if.end, !dbg !3542

if.then4:                                         ; preds = %land.lhs.true
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3543
  %archive5 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !3544
  %read_data_requested6 = getelementptr inbounds %struct.archive, %struct.archive* %archive5, i32 0, i32 20, !dbg !3545
  %15 = load i64, i64* %read_data_requested6, align 8, !dbg !3545
  %16 = load i64*, i64** %avail.addr, align 8, !dbg !3546
  store i64 %15, i64* %16, align 8, !dbg !3547
  br label %if.end, !dbg !3548

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  %17 = load i64*, i64** %avail.addr, align 8, !dbg !3549
  %18 = load i64, i64* %17, align 8, !dbg !3551
  %19 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3552
  %bytes_remaining = getelementptr inbounds %struct.rar, %struct.rar* %19, i32 0, i32 24, !dbg !3553
  %20 = load i64, i64* %bytes_remaining, align 8, !dbg !3553
  %cmp7 = icmp sgt i64 %18, %20, !dbg !3554
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !3555

if.then9:                                         ; preds = %if.end
  %21 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3556
  %bytes_remaining10 = getelementptr inbounds %struct.rar, %struct.rar* %21, i32 0, i32 24, !dbg !3557
  %22 = load i64, i64* %bytes_remaining10, align 8, !dbg !3557
  %23 = load i64*, i64** %avail.addr, align 8, !dbg !3558
  store i64 %22, i64* %23, align 8, !dbg !3559
  br label %if.end11, !dbg !3560

if.end11:                                         ; preds = %if.then9, %if.end
  %24 = load i64*, i64** %avail.addr, align 8, !dbg !3561
  %25 = load i64, i64* %24, align 8, !dbg !3563
  %cmp12 = icmp slt i64 %25, 0, !dbg !3564
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !3565

if.then14:                                        ; preds = %if.end11
  store i8* null, i8** %retval, align 8, !dbg !3566
  br label %return, !dbg !3566

if.else:                                          ; preds = %if.end11
  %26 = load i64*, i64** %avail.addr, align 8, !dbg !3567
  %27 = load i64, i64* %26, align 8, !dbg !3569
  %cmp15 = icmp eq i64 %27, 0, !dbg !3570
  br i1 %cmp15, label %land.lhs.true17, label %if.end36, !dbg !3571

land.lhs.true17:                                  ; preds = %if.else
  %28 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3572
  %main_flags = getelementptr inbounds %struct.rar, %struct.rar* %28, i32 0, i32 0, !dbg !3574
  %29 = load i32, i32* %main_flags, align 8, !dbg !3574
  %and = and i32 %29, 1, !dbg !3575
  %tobool18 = icmp ne i32 %and, 0, !dbg !3575
  br i1 %tobool18, label %land.lhs.true19, label %if.end36, !dbg !3576

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %30 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3577
  %file_flags = getelementptr inbounds %struct.rar, %struct.rar* %30, i32 0, i32 6, !dbg !3578
  %31 = load i32, i32* %file_flags, align 8, !dbg !3578
  %and20 = and i32 %31, 2, !dbg !3579
  %tobool21 = icmp ne i32 %and20, 0, !dbg !3579
  br i1 %tobool21, label %if.then22, label %if.end36, !dbg !3580

if.then22:                                        ; preds = %land.lhs.true19
  %32 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3582
  %33 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3584
  %entry23 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %33, i32 0, i32 1, !dbg !3585
  %34 = load %struct.archive_entry*, %struct.archive_entry** %entry23, align 8, !dbg !3585
  %call24 = call i32 @archive_read_format_rar_read_header(%struct.archive_read* %32, %struct.archive_entry* %34), !dbg !3586
  store i32 %call24, i32* %ret, align 4, !dbg !3587
  %35 = load i32, i32* %ret, align 4, !dbg !3588
  %cmp25 = icmp eq i32 %35, 1, !dbg !3590
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !3591

if.then27:                                        ; preds = %if.then22
  %36 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3592
  %has_endarc_header = getelementptr inbounds %struct.rar, %struct.rar* %36, i32 0, i32 38, !dbg !3594
  store i8 1, i8* %has_endarc_header, align 4, !dbg !3595
  %37 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3596
  %38 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3597
  %entry28 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %38, i32 0, i32 1, !dbg !3598
  %39 = load %struct.archive_entry*, %struct.archive_entry** %entry28, align 8, !dbg !3598
  %call29 = call i32 @archive_read_format_rar_read_header(%struct.archive_read* %37, %struct.archive_entry* %39), !dbg !3599
  store i32 %call29, i32* %ret, align 4, !dbg !3600
  br label %if.end30, !dbg !3601

if.end30:                                         ; preds = %if.then27, %if.then22
  %40 = load i32, i32* %ret, align 4, !dbg !3602
  %cmp31 = icmp ne i32 %40, 0, !dbg !3604
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !3605

if.then33:                                        ; preds = %if.end30
  store i8* null, i8** %retval, align 8, !dbg !3606
  br label %return, !dbg !3606

if.end34:                                         ; preds = %if.end30
  %41 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3607
  %42 = load i64, i64* %min.addr, align 8, !dbg !3608
  %43 = load i64*, i64** %avail.addr, align 8, !dbg !3609
  %call35 = call i8* @rar_read_ahead(%struct.archive_read* %41, i64 %42, i64* %43), !dbg !3610
  store i8* %call35, i8** %retval, align 8, !dbg !3611
  br label %return, !dbg !3611

if.end36:                                         ; preds = %land.lhs.true19, %land.lhs.true17, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36
  br label %if.end38, !dbg !3612

if.end38:                                         ; preds = %if.end37, %entry
  %44 = load i8*, i8** %h, align 8, !dbg !3613
  store i8* %44, i8** %retval, align 8, !dbg !3614
  br label %return, !dbg !3614

return:                                           ; preds = %if.end38, %if.end34, %if.then33, %if.then14
  %45 = load i8*, i8** %retval, align 8, !dbg !3615
  ret i8* %45, !dbg !3615
}

declare i32 @_archive_entry_copy_symlink_l(%struct.archive_entry*, i8*, i64, %struct.archive_string_conv*) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_data_stored(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !577 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %rar = alloca %struct.rar*, align 8
  %bytes_avail = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3616, metadata !677), !dbg !3617
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !3618, metadata !677), !dbg !3619
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !3620, metadata !677), !dbg !3621
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !3622, metadata !677), !dbg !3623
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !3624, metadata !677), !dbg !3625
  call void @llvm.dbg.declare(metadata i64* %bytes_avail, metadata !3626, metadata !677), !dbg !3627
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3628
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3629
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3629
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3630
  %2 = load i8*, i8** %data, align 8, !dbg !3630
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !3631
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !3632
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3633
  %bytes_remaining = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 24, !dbg !3635
  %5 = load i64, i64* %bytes_remaining, align 8, !dbg !3635
  %cmp = icmp eq i64 %5, 0, !dbg !3636
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !3637

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3638
  %main_flags = getelementptr inbounds %struct.rar, %struct.rar* %6, i32 0, i32 0, !dbg !3639
  %7 = load i32, i32* %main_flags, align 8, !dbg !3639
  %and = and i32 %7, 1, !dbg !3640
  %tobool = icmp ne i32 %and, 0, !dbg !3640
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !3641

land.lhs.true1:                                   ; preds = %land.lhs.true
  %8 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3642
  %file_flags = getelementptr inbounds %struct.rar, %struct.rar* %8, i32 0, i32 6, !dbg !3644
  %9 = load i32, i32* %file_flags, align 8, !dbg !3644
  %and2 = and i32 %9, 2, !dbg !3645
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3645
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !3646

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  %10 = load i8**, i8*** %buff.addr, align 8, !dbg !3648
  store i8* null, i8** %10, align 8, !dbg !3650
  %11 = load i64*, i64** %size.addr, align 8, !dbg !3651
  store i64 0, i64* %11, align 8, !dbg !3652
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3653
  %offset4 = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 26, !dbg !3654
  %13 = load i64, i64* %offset4, align 8, !dbg !3654
  %14 = load i64*, i64** %offset.addr, align 8, !dbg !3655
  store i64 %13, i64* %14, align 8, !dbg !3656
  %15 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3657
  %file_crc = getelementptr inbounds %struct.rar, %struct.rar* %15, i32 0, i32 1, !dbg !3659
  %16 = load i64, i64* %file_crc, align 8, !dbg !3659
  %17 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3660
  %crc_calculated = getelementptr inbounds %struct.rar, %struct.rar* %17, i32 0, i32 36, !dbg !3661
  %18 = load i64, i64* %crc_calculated, align 8, !dbg !3661
  %cmp5 = icmp ne i64 %16, %18, !dbg !3662
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !3663

if.then6:                                         ; preds = %if.then
  %19 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3664
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %19, i32 0, i32 0, !dbg !3666
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0)), !dbg !3667
  store i32 -30, i32* %retval, align 4, !dbg !3668
  br label %return, !dbg !3668

if.end:                                           ; preds = %if.then
  %20 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3669
  %entry_eof = getelementptr inbounds %struct.rar, %struct.rar* %20, i32 0, i32 35, !dbg !3670
  store i8 1, i8* %entry_eof, align 1, !dbg !3671
  store i32 1, i32* %retval, align 4, !dbg !3672
  br label %return, !dbg !3672

if.end7:                                          ; preds = %land.lhs.true1, %entry
  %21 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3673
  %call = call i8* @rar_read_ahead(%struct.archive_read* %21, i64 1, i64* %bytes_avail), !dbg !3674
  %22 = load i8**, i8*** %buff.addr, align 8, !dbg !3675
  store i8* %call, i8** %22, align 8, !dbg !3676
  %23 = load i64, i64* %bytes_avail, align 8, !dbg !3677
  %cmp8 = icmp sle i64 %23, 0, !dbg !3679
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !3680

if.then9:                                         ; preds = %if.end7
  %24 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3681
  %archive10 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %24, i32 0, i32 0, !dbg !3683
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive10, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !3684
  store i32 -30, i32* %retval, align 4, !dbg !3685
  br label %return, !dbg !3685

if.end11:                                         ; preds = %if.end7
  %25 = load i64, i64* %bytes_avail, align 8, !dbg !3686
  %26 = load i64*, i64** %size.addr, align 8, !dbg !3687
  store i64 %25, i64* %26, align 8, !dbg !3688
  %27 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3689
  %offset12 = getelementptr inbounds %struct.rar, %struct.rar* %27, i32 0, i32 26, !dbg !3690
  %28 = load i64, i64* %offset12, align 8, !dbg !3690
  %29 = load i64*, i64** %offset.addr, align 8, !dbg !3691
  store i64 %28, i64* %29, align 8, !dbg !3692
  %30 = load i64, i64* %bytes_avail, align 8, !dbg !3693
  %31 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3694
  %offset13 = getelementptr inbounds %struct.rar, %struct.rar* %31, i32 0, i32 26, !dbg !3695
  %32 = load i64, i64* %offset13, align 8, !dbg !3696
  %add = add nsw i64 %32, %30, !dbg !3696
  store i64 %add, i64* %offset13, align 8, !dbg !3696
  %33 = load i64, i64* %bytes_avail, align 8, !dbg !3697
  %34 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3698
  %offset_seek = getelementptr inbounds %struct.rar, %struct.rar* %34, i32 0, i32 28, !dbg !3699
  %35 = load i64, i64* %offset_seek, align 8, !dbg !3700
  %add14 = add nsw i64 %35, %33, !dbg !3700
  store i64 %add14, i64* %offset_seek, align 8, !dbg !3700
  %36 = load i64, i64* %bytes_avail, align 8, !dbg !3701
  %37 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3702
  %bytes_remaining15 = getelementptr inbounds %struct.rar, %struct.rar* %37, i32 0, i32 24, !dbg !3703
  %38 = load i64, i64* %bytes_remaining15, align 8, !dbg !3704
  %sub = sub nsw i64 %38, %36, !dbg !3704
  store i64 %sub, i64* %bytes_remaining15, align 8, !dbg !3704
  %39 = load i64, i64* %bytes_avail, align 8, !dbg !3705
  %40 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3706
  %bytes_unconsumed = getelementptr inbounds %struct.rar, %struct.rar* %40, i32 0, i32 23, !dbg !3707
  store i64 %39, i64* %bytes_unconsumed, align 8, !dbg !3708
  %41 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3709
  %crc_calculated16 = getelementptr inbounds %struct.rar, %struct.rar* %41, i32 0, i32 36, !dbg !3710
  %42 = load i64, i64* %crc_calculated16, align 8, !dbg !3710
  %43 = load i8**, i8*** %buff.addr, align 8, !dbg !3711
  %44 = load i8*, i8** %43, align 8, !dbg !3712
  %45 = load i64, i64* %bytes_avail, align 8, !dbg !3713
  %conv = trunc i64 %45 to i32, !dbg !3714
  %call17 = call i64 @cm_zlib_crc32(i64 %42, i8* %44, i32 %conv), !dbg !3715
  %46 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3716
  %crc_calculated18 = getelementptr inbounds %struct.rar, %struct.rar* %46, i32 0, i32 36, !dbg !3717
  store i64 %call17, i64* %crc_calculated18, align 8, !dbg !3718
  store i32 0, i32* %retval, align 4, !dbg !3719
  br label %return, !dbg !3719

return:                                           ; preds = %if.end11, %if.then9, %if.end, %if.then6
  %47 = load i32, i32* %retval, align 4, !dbg !3720
  ret i32 %47, !dbg !3720
}

; Function Attrs: nounwind uwtable
define internal i32 @read_data_compressed(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !578 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %rar = alloca %struct.rar*, align 8
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  %actualend = alloca i64, align 8
  %bs = alloca i64, align 8
  %ret = alloca i32, align 4
  %sym = alloca i32, align 4
  %code = alloca i32, align 4
  %lzss_offset = alloca i32, align 4
  %length = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3721, metadata !677), !dbg !3722
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !3723, metadata !677), !dbg !3724
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !3725, metadata !677), !dbg !3726
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !3727, metadata !677), !dbg !3728
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !3729, metadata !677), !dbg !3730
  call void @llvm.dbg.declare(metadata i64* %start, metadata !3731, metadata !677), !dbg !3732
  call void @llvm.dbg.declare(metadata i64* %end, metadata !3733, metadata !677), !dbg !3734
  call void @llvm.dbg.declare(metadata i64* %actualend, metadata !3735, metadata !677), !dbg !3736
  call void @llvm.dbg.declare(metadata i64* %bs, metadata !3737, metadata !677), !dbg !3738
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3739, metadata !677), !dbg !3740
  store i32 0, i32* %ret, align 4, !dbg !3740
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !3741, metadata !677), !dbg !3742
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3743, metadata !677), !dbg !3744
  call void @llvm.dbg.declare(metadata i32* %lzss_offset, metadata !3745, metadata !677), !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %length, metadata !3747, metadata !677), !dbg !3748
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3749, metadata !677), !dbg !3750
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3751
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3752
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3752
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3753
  %2 = load i8*, i8** %data, align 8, !dbg !3753
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !3754
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !3755
  br label %do.body, !dbg !3756

do.body:                                          ; preds = %do.cond, %entry
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3757
  %valid = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 29, !dbg !3760
  %5 = load i8, i8* %valid, align 8, !dbg !3760
  %tobool = icmp ne i8 %5, 0, !dbg !3757
  br i1 %tobool, label %if.end, label %if.then, !dbg !3761

if.then:                                          ; preds = %do.body
  store i32 -30, i32* %retval, align 4, !dbg !3762
  br label %return, !dbg !3762

if.end:                                           ; preds = %do.body
  %6 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3763
  %ppmd_eod = getelementptr inbounds %struct.rar, %struct.rar* %6, i32 0, i32 57, !dbg !3765
  %7 = load i8, i8* %ppmd_eod, align 2, !dbg !3765
  %conv = sext i8 %7 to i32, !dbg !3763
  %tobool1 = icmp ne i32 %conv, 0, !dbg !3763
  br i1 %tobool1, label %if.then5, label %lor.lhs.false, !dbg !3766

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3767
  %dictionary_size = getelementptr inbounds %struct.rar, %struct.rar* %8, i32 0, i32 33, !dbg !3768
  %9 = load i32, i32* %dictionary_size, align 8, !dbg !3768
  %tobool2 = icmp ne i32 %9, 0, !dbg !3767
  br i1 %tobool2, label %land.lhs.true, label %if.end22, !dbg !3769

land.lhs.true:                                    ; preds = %lor.lhs.false
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3770
  %offset3 = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 26, !dbg !3772
  %11 = load i64, i64* %offset3, align 8, !dbg !3772
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3773
  %unp_size = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 8, !dbg !3774
  %13 = load i64, i64* %unp_size, align 8, !dbg !3774
  %cmp = icmp sge i64 %11, %13, !dbg !3775
  br i1 %cmp, label %if.then5, label %if.end22, !dbg !3776

if.then5:                                         ; preds = %land.lhs.true, %if.end
  %14 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3778
  %unp_offset = getelementptr inbounds %struct.rar, %struct.rar* %14, i32 0, i32 30, !dbg !3781
  %15 = load i32, i32* %unp_offset, align 4, !dbg !3781
  %cmp6 = icmp ugt i32 %15, 0, !dbg !3782
  br i1 %cmp6, label %if.then8, label %if.end15, !dbg !3783

if.then8:                                         ; preds = %if.then5
  %16 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3784
  %unp_buffer = getelementptr inbounds %struct.rar, %struct.rar* %16, i32 0, i32 32, !dbg !3786
  %17 = load i8*, i8** %unp_buffer, align 8, !dbg !3786
  %18 = load i8**, i8*** %buff.addr, align 8, !dbg !3787
  store i8* %17, i8** %18, align 8, !dbg !3788
  %19 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3789
  %unp_offset9 = getelementptr inbounds %struct.rar, %struct.rar* %19, i32 0, i32 30, !dbg !3790
  %20 = load i32, i32* %unp_offset9, align 4, !dbg !3790
  %conv10 = zext i32 %20 to i64, !dbg !3789
  %21 = load i64*, i64** %size.addr, align 8, !dbg !3791
  store i64 %conv10, i64* %21, align 8, !dbg !3792
  %22 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3793
  %offset_outgoing = getelementptr inbounds %struct.rar, %struct.rar* %22, i32 0, i32 27, !dbg !3794
  %23 = load i64, i64* %offset_outgoing, align 8, !dbg !3794
  %24 = load i64*, i64** %offset.addr, align 8, !dbg !3795
  store i64 %23, i64* %24, align 8, !dbg !3796
  %25 = load i64*, i64** %size.addr, align 8, !dbg !3797
  %26 = load i64, i64* %25, align 8, !dbg !3798
  %27 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3799
  %offset_outgoing11 = getelementptr inbounds %struct.rar, %struct.rar* %27, i32 0, i32 27, !dbg !3800
  %28 = load i64, i64* %offset_outgoing11, align 8, !dbg !3801
  %add = add i64 %28, %26, !dbg !3801
  store i64 %add, i64* %offset_outgoing11, align 8, !dbg !3801
  %29 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3802
  %crc_calculated = getelementptr inbounds %struct.rar, %struct.rar* %29, i32 0, i32 36, !dbg !3803
  %30 = load i64, i64* %crc_calculated, align 8, !dbg !3803
  %31 = load i8**, i8*** %buff.addr, align 8, !dbg !3804
  %32 = load i8*, i8** %31, align 8, !dbg !3805
  %33 = load i64*, i64** %size.addr, align 8, !dbg !3806
  %34 = load i64, i64* %33, align 8, !dbg !3807
  %conv12 = trunc i64 %34 to i32, !dbg !3808
  %call = call i64 @cm_zlib_crc32(i64 %30, i8* %32, i32 %conv12), !dbg !3809
  %35 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3810
  %crc_calculated13 = getelementptr inbounds %struct.rar, %struct.rar* %35, i32 0, i32 36, !dbg !3811
  store i64 %call, i64* %crc_calculated13, align 8, !dbg !3812
  %36 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3813
  %unp_offset14 = getelementptr inbounds %struct.rar, %struct.rar* %36, i32 0, i32 30, !dbg !3814
  store i32 0, i32* %unp_offset14, align 4, !dbg !3815
  store i32 0, i32* %retval, align 4, !dbg !3816
  br label %return, !dbg !3816

if.end15:                                         ; preds = %if.then5
  %37 = load i8**, i8*** %buff.addr, align 8, !dbg !3817
  store i8* null, i8** %37, align 8, !dbg !3818
  %38 = load i64*, i64** %size.addr, align 8, !dbg !3819
  store i64 0, i64* %38, align 8, !dbg !3820
  %39 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3821
  %offset16 = getelementptr inbounds %struct.rar, %struct.rar* %39, i32 0, i32 26, !dbg !3822
  %40 = load i64, i64* %offset16, align 8, !dbg !3822
  %41 = load i64*, i64** %offset.addr, align 8, !dbg !3823
  store i64 %40, i64* %41, align 8, !dbg !3824
  %42 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3825
  %file_crc = getelementptr inbounds %struct.rar, %struct.rar* %42, i32 0, i32 1, !dbg !3827
  %43 = load i64, i64* %file_crc, align 8, !dbg !3827
  %44 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3828
  %crc_calculated17 = getelementptr inbounds %struct.rar, %struct.rar* %44, i32 0, i32 36, !dbg !3829
  %45 = load i64, i64* %crc_calculated17, align 8, !dbg !3829
  %cmp18 = icmp ne i64 %43, %45, !dbg !3830
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3831

if.then20:                                        ; preds = %if.end15
  %46 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3832
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %46, i32 0, i32 0, !dbg !3834
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0)), !dbg !3835
  store i32 -30, i32* %retval, align 4, !dbg !3836
  br label %return, !dbg !3836

if.end21:                                         ; preds = %if.end15
  %47 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3837
  %entry_eof = getelementptr inbounds %struct.rar, %struct.rar* %47, i32 0, i32 35, !dbg !3838
  store i8 1, i8* %entry_eof, align 1, !dbg !3839
  store i32 1, i32* %retval, align 4, !dbg !3840
  br label %return, !dbg !3840

if.end22:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %48 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3841
  %is_ppmd_block = getelementptr inbounds %struct.rar, %struct.rar* %48, i32 0, i32 58, !dbg !3843
  %49 = load i8, i8* %is_ppmd_block, align 1, !dbg !3843
  %tobool23 = icmp ne i8 %49, 0, !dbg !3841
  br i1 %tobool23, label %if.end68, label %land.lhs.true24, !dbg !3844

land.lhs.true24:                                  ; preds = %if.end22
  %50 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3845
  %dictionary_size25 = getelementptr inbounds %struct.rar, %struct.rar* %50, i32 0, i32 33, !dbg !3847
  %51 = load i32, i32* %dictionary_size25, align 8, !dbg !3847
  %tobool26 = icmp ne i32 %51, 0, !dbg !3845
  br i1 %tobool26, label %land.lhs.true27, label %if.end68, !dbg !3848

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %52 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3849
  %bytes_uncopied = getelementptr inbounds %struct.rar, %struct.rar* %52, i32 0, i32 25, !dbg !3851
  %53 = load i64, i64* %bytes_uncopied, align 8, !dbg !3851
  %cmp28 = icmp sgt i64 %53, 0, !dbg !3852
  br i1 %cmp28, label %if.then30, label %if.end68, !dbg !3853

if.then30:                                        ; preds = %land.lhs.true27
  %54 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3854
  %bytes_uncopied31 = getelementptr inbounds %struct.rar, %struct.rar* %54, i32 0, i32 25, !dbg !3857
  %55 = load i64, i64* %bytes_uncopied31, align 8, !dbg !3857
  %56 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3858
  %unp_buffer_size = getelementptr inbounds %struct.rar, %struct.rar* %56, i32 0, i32 31, !dbg !3859
  %57 = load i32, i32* %unp_buffer_size, align 8, !dbg !3859
  %58 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3860
  %unp_offset32 = getelementptr inbounds %struct.rar, %struct.rar* %58, i32 0, i32 30, !dbg !3861
  %59 = load i32, i32* %unp_offset32, align 4, !dbg !3861
  %sub = sub i32 %57, %59, !dbg !3862
  %conv33 = zext i32 %sub to i64, !dbg !3863
  %cmp34 = icmp sgt i64 %55, %conv33, !dbg !3864
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !3865

if.then36:                                        ; preds = %if.then30
  %60 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3866
  %unp_buffer_size37 = getelementptr inbounds %struct.rar, %struct.rar* %60, i32 0, i32 31, !dbg !3867
  %61 = load i32, i32* %unp_buffer_size37, align 8, !dbg !3867
  %62 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3868
  %unp_offset38 = getelementptr inbounds %struct.rar, %struct.rar* %62, i32 0, i32 30, !dbg !3869
  %63 = load i32, i32* %unp_offset38, align 4, !dbg !3869
  %sub39 = sub i32 %61, %63, !dbg !3870
  %conv40 = zext i32 %sub39 to i64, !dbg !3866
  store i64 %conv40, i64* %bs, align 8, !dbg !3871
  br label %if.end42, !dbg !3872

if.else:                                          ; preds = %if.then30
  %64 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3873
  %bytes_uncopied41 = getelementptr inbounds %struct.rar, %struct.rar* %64, i32 0, i32 25, !dbg !3874
  %65 = load i64, i64* %bytes_uncopied41, align 8, !dbg !3874
  store i64 %65, i64* %bs, align 8, !dbg !3875
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then36
  %66 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3876
  %67 = load i8**, i8*** %buff.addr, align 8, !dbg !3877
  %68 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3878
  %offset43 = getelementptr inbounds %struct.rar, %struct.rar* %68, i32 0, i32 26, !dbg !3879
  %69 = load i64, i64* %offset43, align 8, !dbg !3879
  %70 = load i64, i64* %bs, align 8, !dbg !3880
  %conv44 = trunc i64 %70 to i32, !dbg !3881
  %call45 = call i32 @copy_from_lzss_window(%struct.archive_read* %66, i8** %67, i64 %69, i32 %conv44), !dbg !3882
  store i32 %call45, i32* %ret, align 4, !dbg !3883
  %71 = load i32, i32* %ret, align 4, !dbg !3884
  %cmp46 = icmp ne i32 %71, 0, !dbg !3886
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !3887

if.then48:                                        ; preds = %if.end42
  %72 = load i32, i32* %ret, align 4, !dbg !3888
  store i32 %72, i32* %retval, align 4, !dbg !3889
  br label %return, !dbg !3889

if.end49:                                         ; preds = %if.end42
  %73 = load i64, i64* %bs, align 8, !dbg !3890
  %74 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3891
  %offset50 = getelementptr inbounds %struct.rar, %struct.rar* %74, i32 0, i32 26, !dbg !3892
  %75 = load i64, i64* %offset50, align 8, !dbg !3893
  %add51 = add i64 %75, %73, !dbg !3893
  store i64 %add51, i64* %offset50, align 8, !dbg !3893
  %76 = load i64, i64* %bs, align 8, !dbg !3894
  %77 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3895
  %bytes_uncopied52 = getelementptr inbounds %struct.rar, %struct.rar* %77, i32 0, i32 25, !dbg !3896
  %78 = load i64, i64* %bytes_uncopied52, align 8, !dbg !3897
  %sub53 = sub i64 %78, %76, !dbg !3897
  store i64 %sub53, i64* %bytes_uncopied52, align 8, !dbg !3897
  %79 = load i8**, i8*** %buff.addr, align 8, !dbg !3898
  %80 = load i8*, i8** %79, align 8, !dbg !3900
  %cmp54 = icmp ne i8* %80, null, !dbg !3901
  br i1 %cmp54, label %if.then56, label %if.end67, !dbg !3902

if.then56:                                        ; preds = %if.end49
  %81 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3903
  %unp_offset57 = getelementptr inbounds %struct.rar, %struct.rar* %81, i32 0, i32 30, !dbg !3905
  store i32 0, i32* %unp_offset57, align 4, !dbg !3906
  %82 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3907
  %unp_buffer_size58 = getelementptr inbounds %struct.rar, %struct.rar* %82, i32 0, i32 31, !dbg !3908
  %83 = load i32, i32* %unp_buffer_size58, align 8, !dbg !3908
  %conv59 = zext i32 %83 to i64, !dbg !3907
  %84 = load i64*, i64** %size.addr, align 8, !dbg !3909
  store i64 %conv59, i64* %84, align 8, !dbg !3910
  %85 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3911
  %offset_outgoing60 = getelementptr inbounds %struct.rar, %struct.rar* %85, i32 0, i32 27, !dbg !3912
  %86 = load i64, i64* %offset_outgoing60, align 8, !dbg !3912
  %87 = load i64*, i64** %offset.addr, align 8, !dbg !3913
  store i64 %86, i64* %87, align 8, !dbg !3914
  %88 = load i64*, i64** %size.addr, align 8, !dbg !3915
  %89 = load i64, i64* %88, align 8, !dbg !3916
  %90 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3917
  %offset_outgoing61 = getelementptr inbounds %struct.rar, %struct.rar* %90, i32 0, i32 27, !dbg !3918
  %91 = load i64, i64* %offset_outgoing61, align 8, !dbg !3919
  %add62 = add i64 %91, %89, !dbg !3919
  store i64 %add62, i64* %offset_outgoing61, align 8, !dbg !3919
  %92 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3920
  %crc_calculated63 = getelementptr inbounds %struct.rar, %struct.rar* %92, i32 0, i32 36, !dbg !3921
  %93 = load i64, i64* %crc_calculated63, align 8, !dbg !3921
  %94 = load i8**, i8*** %buff.addr, align 8, !dbg !3922
  %95 = load i8*, i8** %94, align 8, !dbg !3923
  %96 = load i64*, i64** %size.addr, align 8, !dbg !3924
  %97 = load i64, i64* %96, align 8, !dbg !3925
  %conv64 = trunc i64 %97 to i32, !dbg !3926
  %call65 = call i64 @cm_zlib_crc32(i64 %93, i8* %95, i32 %conv64), !dbg !3927
  %98 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3928
  %crc_calculated66 = getelementptr inbounds %struct.rar, %struct.rar* %98, i32 0, i32 36, !dbg !3929
  store i64 %call65, i64* %crc_calculated66, align 8, !dbg !3930
  %99 = load i32, i32* %ret, align 4, !dbg !3931
  store i32 %99, i32* %retval, align 4, !dbg !3932
  br label %return, !dbg !3932

if.end67:                                         ; preds = %if.end49
  br label %do.cond, !dbg !3933

if.end68:                                         ; preds = %land.lhs.true27, %land.lhs.true24, %if.end22
  %100 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3934
  %br = getelementptr inbounds %struct.rar, %struct.rar* %100, i32 0, i32 68, !dbg !3936
  %next_in = getelementptr inbounds %struct.rar_br, %struct.rar_br* %br, i32 0, i32 3, !dbg !3937
  %101 = load i8*, i8** %next_in, align 8, !dbg !3937
  %tobool69 = icmp ne i8* %101, null, !dbg !3934
  br i1 %tobool69, label %if.end76, label %land.lhs.true70, !dbg !3938

land.lhs.true70:                                  ; preds = %if.end68
  %102 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3939
  %103 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3940
  %br71 = getelementptr inbounds %struct.rar, %struct.rar* %103, i32 0, i32 68, !dbg !3941
  %call72 = call i32 @rar_br_preparation(%struct.archive_read* %102, %struct.rar_br* %br71), !dbg !3942
  store i32 %call72, i32* %ret, align 4, !dbg !3943
  %cmp73 = icmp slt i32 %call72, -20, !dbg !3944
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !3945

if.then75:                                        ; preds = %land.lhs.true70
  %104 = load i32, i32* %ret, align 4, !dbg !3946
  store i32 %104, i32* %retval, align 4, !dbg !3947
  br label %return, !dbg !3947

if.end76:                                         ; preds = %land.lhs.true70, %if.end68
  %105 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3948
  %start_new_table = getelementptr inbounds %struct.rar, %struct.rar* %105, i32 0, i32 55, !dbg !3950
  %106 = load i8, i8* %start_new_table, align 8, !dbg !3950
  %conv77 = sext i8 %106 to i32, !dbg !3948
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !3948
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !3951

land.lhs.true79:                                  ; preds = %if.end76
  %107 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3952
  %call80 = call i32 @parse_codes(%struct.archive_read* %107), !dbg !3954
  store i32 %call80, i32* %ret, align 4, !dbg !3955
  %cmp81 = icmp slt i32 %call80, -20, !dbg !3956
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !3957

if.then83:                                        ; preds = %land.lhs.true79
  %108 = load i32, i32* %ret, align 4, !dbg !3958
  store i32 %108, i32* %retval, align 4, !dbg !3959
  br label %return, !dbg !3959

if.end84:                                         ; preds = %land.lhs.true79, %if.end76
  %109 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3960
  %is_ppmd_block85 = getelementptr inbounds %struct.rar, %struct.rar* %109, i32 0, i32 58, !dbg !3962
  %110 = load i8, i8* %is_ppmd_block85, align 1, !dbg !3962
  %tobool86 = icmp ne i8 %110, 0, !dbg !3960
  br i1 %tobool86, label %if.then87, label %if.else161, !dbg !3963

if.then87:                                        ; preds = %if.end84
  %111 = load i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)*, i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 8), align 8, !dbg !3964
  %112 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3967
  %ppmd7_context = getelementptr inbounds %struct.rar, %struct.rar* %112, i32 0, i32 60, !dbg !3968
  %113 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3969
  %range_dec = getelementptr inbounds %struct.rar, %struct.rar* %113, i32 0, i32 61, !dbg !3970
  %p = getelementptr inbounds %struct.CPpmd7z_RangeDec, %struct.CPpmd7z_RangeDec* %range_dec, i32 0, i32 0, !dbg !3971
  %call88 = call i32 %111(%struct.CPpmd7* %ppmd7_context, %struct.IPpmd7_RangeDec* %p), !dbg !3972
  store i32 %call88, i32* %sym, align 4, !dbg !3973
  %cmp89 = icmp slt i32 %call88, 0, !dbg !3974
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !3975

if.then91:                                        ; preds = %if.then87
  %114 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3976
  %archive92 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %114, i32 0, i32 0, !dbg !3978
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive92, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0)), !dbg !3979
  store i32 -30, i32* %retval, align 4, !dbg !3980
  br label %return, !dbg !3980

if.end93:                                         ; preds = %if.then87
  %115 = load i32, i32* %sym, align 4, !dbg !3981
  %116 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3983
  %ppmd_escape = getelementptr inbounds %struct.rar, %struct.rar* %116, i32 0, i32 59, !dbg !3984
  %117 = load i32, i32* %ppmd_escape, align 4, !dbg !3984
  %cmp94 = icmp ne i32 %115, %117, !dbg !3985
  br i1 %cmp94, label %if.then96, label %if.else99, !dbg !3986

if.then96:                                        ; preds = %if.end93
  %118 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3987
  %119 = load i32, i32* %sym, align 4, !dbg !3989
  %conv97 = trunc i32 %119 to i8, !dbg !3989
  call void @lzss_emit_literal(%struct.rar* %118, i8 zeroext %conv97), !dbg !3990
  %120 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3991
  %bytes_uncopied98 = getelementptr inbounds %struct.rar, %struct.rar* %120, i32 0, i32 25, !dbg !3992
  %121 = load i64, i64* %bytes_uncopied98, align 8, !dbg !3993
  %inc = add nsw i64 %121, 1, !dbg !3993
  store i64 %inc, i64* %bytes_uncopied98, align 8, !dbg !3993
  br label %if.end160, !dbg !3994

if.else99:                                        ; preds = %if.end93
  %122 = load i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)*, i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 8), align 8, !dbg !3995
  %123 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !3998
  %ppmd7_context100 = getelementptr inbounds %struct.rar, %struct.rar* %123, i32 0, i32 60, !dbg !3999
  %124 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4000
  %range_dec101 = getelementptr inbounds %struct.rar, %struct.rar* %124, i32 0, i32 61, !dbg !4001
  %p102 = getelementptr inbounds %struct.CPpmd7z_RangeDec, %struct.CPpmd7z_RangeDec* %range_dec101, i32 0, i32 0, !dbg !4002
  %call103 = call i32 %122(%struct.CPpmd7* %ppmd7_context100, %struct.IPpmd7_RangeDec* %p102), !dbg !4003
  store i32 %call103, i32* %code, align 4, !dbg !4004
  %cmp104 = icmp slt i32 %call103, 0, !dbg !4005
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !4006

if.then106:                                       ; preds = %if.else99
  %125 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4007
  %archive107 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %125, i32 0, i32 0, !dbg !4009
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive107, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0)), !dbg !4010
  store i32 -30, i32* %retval, align 4, !dbg !4011
  br label %return, !dbg !4011

if.end108:                                        ; preds = %if.else99
  %126 = load i32, i32* %code, align 4, !dbg !4012
  switch i32 %126, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb111
    i32 3, label %sw.bb113
    i32 4, label %sw.bb115
    i32 5, label %sw.bb142
  ], !dbg !4013

sw.bb:                                            ; preds = %if.end108
  %127 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4014
  %start_new_table109 = getelementptr inbounds %struct.rar, %struct.rar* %127, i32 0, i32 55, !dbg !4016
  store i8 1, i8* %start_new_table109, align 8, !dbg !4017
  %128 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4018
  %129 = load i8**, i8*** %buff.addr, align 8, !dbg !4019
  %130 = load i64*, i64** %size.addr, align 8, !dbg !4020
  %131 = load i64*, i64** %offset.addr, align 8, !dbg !4021
  %call110 = call i32 @read_data_compressed(%struct.archive_read* %128, i8** %129, i64* %130, i64* %131), !dbg !4022
  store i32 %call110, i32* %retval, align 4, !dbg !4023
  br label %return, !dbg !4023

sw.bb111:                                         ; preds = %if.end108
  %132 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4024
  %ppmd_eod112 = getelementptr inbounds %struct.rar, %struct.rar* %132, i32 0, i32 57, !dbg !4025
  store i8 1, i8* %ppmd_eod112, align 2, !dbg !4026
  br label %do.cond, !dbg !4027

sw.bb113:                                         ; preds = %if.end108
  %133 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4028
  %archive114 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %133, i32 0, i32 0, !dbg !4029
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive114, i32 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i32 0, i32 0)), !dbg !4030
  store i32 -25, i32* %retval, align 4, !dbg !4031
  br label %return, !dbg !4031

sw.bb115:                                         ; preds = %if.end108
  store i32 0, i32* %lzss_offset, align 4, !dbg !4032
  store i32 2, i32* %i, align 4, !dbg !4033
  br label %for.cond, !dbg !4035

for.cond:                                         ; preds = %for.inc, %sw.bb115
  %134 = load i32, i32* %i, align 4, !dbg !4036
  %cmp116 = icmp sge i32 %134, 0, !dbg !4039
  br i1 %cmp116, label %for.body, label %for.end, !dbg !4040

for.body:                                         ; preds = %for.cond
  %135 = load i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)*, i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 8), align 8, !dbg !4041
  %136 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4044
  %ppmd7_context118 = getelementptr inbounds %struct.rar, %struct.rar* %136, i32 0, i32 60, !dbg !4045
  %137 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4046
  %range_dec119 = getelementptr inbounds %struct.rar, %struct.rar* %137, i32 0, i32 61, !dbg !4047
  %p120 = getelementptr inbounds %struct.CPpmd7z_RangeDec, %struct.CPpmd7z_RangeDec* %range_dec119, i32 0, i32 0, !dbg !4048
  %call121 = call i32 %135(%struct.CPpmd7* %ppmd7_context118, %struct.IPpmd7_RangeDec* %p120), !dbg !4049
  store i32 %call121, i32* %code, align 4, !dbg !4050
  %cmp122 = icmp slt i32 %call121, 0, !dbg !4051
  br i1 %cmp122, label %if.then124, label %if.end126, !dbg !4052

if.then124:                                       ; preds = %for.body
  %138 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4053
  %archive125 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %138, i32 0, i32 0, !dbg !4055
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive125, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0)), !dbg !4056
  store i32 -30, i32* %retval, align 4, !dbg !4057
  br label %return, !dbg !4057

if.end126:                                        ; preds = %for.body
  %139 = load i32, i32* %code, align 4, !dbg !4058
  %140 = load i32, i32* %i, align 4, !dbg !4059
  %mul = mul nsw i32 %140, 8, !dbg !4060
  %shl = shl i32 %139, %mul, !dbg !4061
  %141 = load i32, i32* %lzss_offset, align 4, !dbg !4062
  %or = or i32 %141, %shl, !dbg !4062
  store i32 %or, i32* %lzss_offset, align 4, !dbg !4062
  br label %for.inc, !dbg !4063

for.inc:                                          ; preds = %if.end126
  %142 = load i32, i32* %i, align 4, !dbg !4064
  %dec = add nsw i32 %142, -1, !dbg !4064
  store i32 %dec, i32* %i, align 4, !dbg !4064
  br label %for.cond, !dbg !4066

for.end:                                          ; preds = %for.cond
  %143 = load i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)*, i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 8), align 8, !dbg !4067
  %144 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4069
  %ppmd7_context127 = getelementptr inbounds %struct.rar, %struct.rar* %144, i32 0, i32 60, !dbg !4070
  %145 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4071
  %range_dec128 = getelementptr inbounds %struct.rar, %struct.rar* %145, i32 0, i32 61, !dbg !4072
  %p129 = getelementptr inbounds %struct.CPpmd7z_RangeDec, %struct.CPpmd7z_RangeDec* %range_dec128, i32 0, i32 0, !dbg !4073
  %call130 = call i32 %143(%struct.CPpmd7* %ppmd7_context127, %struct.IPpmd7_RangeDec* %p129), !dbg !4074
  store i32 %call130, i32* %length, align 4, !dbg !4075
  %cmp131 = icmp slt i32 %call130, 0, !dbg !4076
  br i1 %cmp131, label %if.then133, label %if.end135, !dbg !4077

if.then133:                                       ; preds = %for.end
  %146 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4078
  %archive134 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %146, i32 0, i32 0, !dbg !4080
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive134, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0)), !dbg !4081
  store i32 -30, i32* %retval, align 4, !dbg !4082
  br label %return, !dbg !4082

if.end135:                                        ; preds = %for.end
  %147 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4083
  %148 = load i32, i32* %lzss_offset, align 4, !dbg !4084
  %add136 = add nsw i32 %148, 2, !dbg !4085
  %149 = load i32, i32* %length, align 4, !dbg !4086
  %add137 = add nsw i32 %149, 32, !dbg !4087
  call void @lzss_emit_match(%struct.rar* %147, i32 %add136, i32 %add137), !dbg !4088
  %150 = load i32, i32* %length, align 4, !dbg !4089
  %add138 = add nsw i32 %150, 32, !dbg !4090
  %conv139 = sext i32 %add138 to i64, !dbg !4089
  %151 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4091
  %bytes_uncopied140 = getelementptr inbounds %struct.rar, %struct.rar* %151, i32 0, i32 25, !dbg !4092
  %152 = load i64, i64* %bytes_uncopied140, align 8, !dbg !4093
  %add141 = add nsw i64 %152, %conv139, !dbg !4093
  store i64 %add141, i64* %bytes_uncopied140, align 8, !dbg !4093
  br label %sw.epilog, !dbg !4094

sw.bb142:                                         ; preds = %if.end108
  %153 = load i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)*, i32 (%struct.CPpmd7*, %struct.IPpmd7_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 8), align 8, !dbg !4095
  %154 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4097
  %ppmd7_context143 = getelementptr inbounds %struct.rar, %struct.rar* %154, i32 0, i32 60, !dbg !4098
  %155 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4099
  %range_dec144 = getelementptr inbounds %struct.rar, %struct.rar* %155, i32 0, i32 61, !dbg !4100
  %p145 = getelementptr inbounds %struct.CPpmd7z_RangeDec, %struct.CPpmd7z_RangeDec* %range_dec144, i32 0, i32 0, !dbg !4101
  %call146 = call i32 %153(%struct.CPpmd7* %ppmd7_context143, %struct.IPpmd7_RangeDec* %p145), !dbg !4102
  store i32 %call146, i32* %length, align 4, !dbg !4103
  %cmp147 = icmp slt i32 %call146, 0, !dbg !4104
  br i1 %cmp147, label %if.then149, label %if.end151, !dbg !4105

if.then149:                                       ; preds = %sw.bb142
  %156 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4106
  %archive150 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %156, i32 0, i32 0, !dbg !4108
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive150, i32 84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0)), !dbg !4109
  store i32 -30, i32* %retval, align 4, !dbg !4110
  br label %return, !dbg !4110

if.end151:                                        ; preds = %sw.bb142
  %157 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4111
  %158 = load i32, i32* %length, align 4, !dbg !4112
  %add152 = add nsw i32 %158, 4, !dbg !4113
  call void @lzss_emit_match(%struct.rar* %157, i32 1, i32 %add152), !dbg !4114
  %159 = load i32, i32* %length, align 4, !dbg !4115
  %add153 = add nsw i32 %159, 4, !dbg !4116
  %conv154 = sext i32 %add153 to i64, !dbg !4115
  %160 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4117
  %bytes_uncopied155 = getelementptr inbounds %struct.rar, %struct.rar* %160, i32 0, i32 25, !dbg !4118
  %161 = load i64, i64* %bytes_uncopied155, align 8, !dbg !4119
  %add156 = add nsw i64 %161, %conv154, !dbg !4119
  store i64 %add156, i64* %bytes_uncopied155, align 8, !dbg !4119
  br label %sw.epilog, !dbg !4120

sw.default:                                       ; preds = %if.end108
  %162 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4121
  %163 = load i32, i32* %sym, align 4, !dbg !4122
  %conv157 = trunc i32 %163 to i8, !dbg !4122
  call void @lzss_emit_literal(%struct.rar* %162, i8 zeroext %conv157), !dbg !4123
  %164 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4124
  %bytes_uncopied158 = getelementptr inbounds %struct.rar, %struct.rar* %164, i32 0, i32 25, !dbg !4125
  %165 = load i64, i64* %bytes_uncopied158, align 8, !dbg !4126
  %inc159 = add nsw i64 %165, 1, !dbg !4126
  store i64 %inc159, i64* %bytes_uncopied158, align 8, !dbg !4126
  br label %sw.epilog, !dbg !4127

sw.epilog:                                        ; preds = %sw.default, %if.end151, %if.end135
  br label %if.end160

if.end160:                                        ; preds = %sw.epilog, %if.then96
  br label %if.end180, !dbg !4128

if.else161:                                       ; preds = %if.end84
  %166 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4129
  %offset162 = getelementptr inbounds %struct.rar, %struct.rar* %166, i32 0, i32 26, !dbg !4131
  %167 = load i64, i64* %offset162, align 8, !dbg !4131
  store i64 %167, i64* %start, align 8, !dbg !4132
  %168 = load i64, i64* %start, align 8, !dbg !4133
  %169 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4134
  %dictionary_size163 = getelementptr inbounds %struct.rar, %struct.rar* %169, i32 0, i32 33, !dbg !4135
  %170 = load i32, i32* %dictionary_size163, align 8, !dbg !4135
  %conv164 = zext i32 %170 to i64, !dbg !4134
  %add165 = add nsw i64 %168, %conv164, !dbg !4136
  store i64 %add165, i64* %end, align 8, !dbg !4137
  %171 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4138
  %filterstart = getelementptr inbounds %struct.rar, %struct.rar* %171, i32 0, i32 54, !dbg !4139
  store i64 9223372036854775807, i64* %filterstart, align 8, !dbg !4140
  %172 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4141
  %173 = load i64, i64* %end, align 8, !dbg !4143
  %call166 = call i64 @expand(%struct.archive_read* %172, i64 %173), !dbg !4144
  store i64 %call166, i64* %actualend, align 8, !dbg !4145
  %cmp167 = icmp slt i64 %call166, 0, !dbg !4146
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !4147

if.then169:                                       ; preds = %if.else161
  %174 = load i64, i64* %actualend, align 8, !dbg !4148
  %conv170 = trunc i64 %174 to i32, !dbg !4149
  store i32 %conv170, i32* %retval, align 4, !dbg !4150
  br label %return, !dbg !4150

if.end171:                                        ; preds = %if.else161
  %175 = load i64, i64* %actualend, align 8, !dbg !4151
  %176 = load i64, i64* %start, align 8, !dbg !4152
  %sub172 = sub nsw i64 %175, %176, !dbg !4153
  %177 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4154
  %bytes_uncopied173 = getelementptr inbounds %struct.rar, %struct.rar* %177, i32 0, i32 25, !dbg !4155
  store i64 %sub172, i64* %bytes_uncopied173, align 8, !dbg !4156
  %178 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4157
  %bytes_uncopied174 = getelementptr inbounds %struct.rar, %struct.rar* %178, i32 0, i32 25, !dbg !4159
  %179 = load i64, i64* %bytes_uncopied174, align 8, !dbg !4159
  %cmp175 = icmp eq i64 %179, 0, !dbg !4160
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !4161

if.then177:                                       ; preds = %if.end171
  %180 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4162
  %archive178 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %180, i32 0, i32 0, !dbg !4164
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive178, i32 84, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i32 0, i32 0)), !dbg !4165
  store i32 -30, i32* %retval, align 4, !dbg !4166
  br label %return, !dbg !4166

if.end179:                                        ; preds = %if.end171
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end160
  %181 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4167
  %bytes_uncopied181 = getelementptr inbounds %struct.rar, %struct.rar* %181, i32 0, i32 25, !dbg !4169
  %182 = load i64, i64* %bytes_uncopied181, align 8, !dbg !4169
  %183 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4170
  %unp_buffer_size182 = getelementptr inbounds %struct.rar, %struct.rar* %183, i32 0, i32 31, !dbg !4171
  %184 = load i32, i32* %unp_buffer_size182, align 8, !dbg !4171
  %185 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4172
  %unp_offset183 = getelementptr inbounds %struct.rar, %struct.rar* %185, i32 0, i32 30, !dbg !4173
  %186 = load i32, i32* %unp_offset183, align 4, !dbg !4173
  %sub184 = sub i32 %184, %186, !dbg !4174
  %conv185 = zext i32 %sub184 to i64, !dbg !4175
  %cmp186 = icmp sgt i64 %182, %conv185, !dbg !4176
  br i1 %cmp186, label %if.then188, label %if.else193, !dbg !4177

if.then188:                                       ; preds = %if.end180
  %187 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4178
  %unp_buffer_size189 = getelementptr inbounds %struct.rar, %struct.rar* %187, i32 0, i32 31, !dbg !4179
  %188 = load i32, i32* %unp_buffer_size189, align 8, !dbg !4179
  %189 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4180
  %unp_offset190 = getelementptr inbounds %struct.rar, %struct.rar* %189, i32 0, i32 30, !dbg !4181
  %190 = load i32, i32* %unp_offset190, align 4, !dbg !4181
  %sub191 = sub i32 %188, %190, !dbg !4182
  %conv192 = zext i32 %sub191 to i64, !dbg !4178
  store i64 %conv192, i64* %bs, align 8, !dbg !4183
  br label %if.end195, !dbg !4184

if.else193:                                       ; preds = %if.end180
  %191 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4185
  %bytes_uncopied194 = getelementptr inbounds %struct.rar, %struct.rar* %191, i32 0, i32 25, !dbg !4186
  %192 = load i64, i64* %bytes_uncopied194, align 8, !dbg !4186
  store i64 %192, i64* %bs, align 8, !dbg !4187
  br label %if.end195

if.end195:                                        ; preds = %if.else193, %if.then188
  %193 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4188
  %194 = load i8**, i8*** %buff.addr, align 8, !dbg !4189
  %195 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4190
  %offset196 = getelementptr inbounds %struct.rar, %struct.rar* %195, i32 0, i32 26, !dbg !4191
  %196 = load i64, i64* %offset196, align 8, !dbg !4191
  %197 = load i64, i64* %bs, align 8, !dbg !4192
  %conv197 = trunc i64 %197 to i32, !dbg !4193
  %call198 = call i32 @copy_from_lzss_window(%struct.archive_read* %193, i8** %194, i64 %196, i32 %conv197), !dbg !4194
  store i32 %call198, i32* %ret, align 4, !dbg !4195
  %198 = load i32, i32* %ret, align 4, !dbg !4196
  %cmp199 = icmp ne i32 %198, 0, !dbg !4198
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !4199

if.then201:                                       ; preds = %if.end195
  %199 = load i32, i32* %ret, align 4, !dbg !4200
  store i32 %199, i32* %retval, align 4, !dbg !4201
  br label %return, !dbg !4201

if.end202:                                        ; preds = %if.end195
  %200 = load i64, i64* %bs, align 8, !dbg !4202
  %201 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4203
  %offset203 = getelementptr inbounds %struct.rar, %struct.rar* %201, i32 0, i32 26, !dbg !4204
  %202 = load i64, i64* %offset203, align 8, !dbg !4205
  %add204 = add i64 %202, %200, !dbg !4205
  store i64 %add204, i64* %offset203, align 8, !dbg !4205
  %203 = load i64, i64* %bs, align 8, !dbg !4206
  %204 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4207
  %bytes_uncopied205 = getelementptr inbounds %struct.rar, %struct.rar* %204, i32 0, i32 25, !dbg !4208
  %205 = load i64, i64* %bytes_uncopied205, align 8, !dbg !4209
  %sub206 = sub i64 %205, %203, !dbg !4209
  store i64 %sub206, i64* %bytes_uncopied205, align 8, !dbg !4209
  br label %do.cond, !dbg !4210

do.cond:                                          ; preds = %if.end202, %sw.bb111, %if.end67
  %206 = load i8**, i8*** %buff.addr, align 8, !dbg !4211
  %207 = load i8*, i8** %206, align 8, !dbg !4213
  %cmp207 = icmp eq i8* %207, null, !dbg !4214
  br i1 %cmp207, label %do.body, label %do.end, !dbg !4215

do.end:                                           ; preds = %do.cond
  %208 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4216
  %unp_offset209 = getelementptr inbounds %struct.rar, %struct.rar* %208, i32 0, i32 30, !dbg !4217
  store i32 0, i32* %unp_offset209, align 4, !dbg !4218
  %209 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4219
  %unp_buffer_size210 = getelementptr inbounds %struct.rar, %struct.rar* %209, i32 0, i32 31, !dbg !4220
  %210 = load i32, i32* %unp_buffer_size210, align 8, !dbg !4220
  %conv211 = zext i32 %210 to i64, !dbg !4219
  %211 = load i64*, i64** %size.addr, align 8, !dbg !4221
  store i64 %conv211, i64* %211, align 8, !dbg !4222
  %212 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4223
  %offset_outgoing212 = getelementptr inbounds %struct.rar, %struct.rar* %212, i32 0, i32 27, !dbg !4224
  %213 = load i64, i64* %offset_outgoing212, align 8, !dbg !4224
  %214 = load i64*, i64** %offset.addr, align 8, !dbg !4225
  store i64 %213, i64* %214, align 8, !dbg !4226
  %215 = load i64*, i64** %size.addr, align 8, !dbg !4227
  %216 = load i64, i64* %215, align 8, !dbg !4228
  %217 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4229
  %offset_outgoing213 = getelementptr inbounds %struct.rar, %struct.rar* %217, i32 0, i32 27, !dbg !4230
  %218 = load i64, i64* %offset_outgoing213, align 8, !dbg !4231
  %add214 = add i64 %218, %216, !dbg !4231
  store i64 %add214, i64* %offset_outgoing213, align 8, !dbg !4231
  %219 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4232
  %crc_calculated215 = getelementptr inbounds %struct.rar, %struct.rar* %219, i32 0, i32 36, !dbg !4233
  %220 = load i64, i64* %crc_calculated215, align 8, !dbg !4233
  %221 = load i8**, i8*** %buff.addr, align 8, !dbg !4234
  %222 = load i8*, i8** %221, align 8, !dbg !4235
  %223 = load i64*, i64** %size.addr, align 8, !dbg !4236
  %224 = load i64, i64* %223, align 8, !dbg !4237
  %conv216 = trunc i64 %224 to i32, !dbg !4238
  %call217 = call i64 @cm_zlib_crc32(i64 %220, i8* %222, i32 %conv216), !dbg !4239
  %225 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4240
  %crc_calculated218 = getelementptr inbounds %struct.rar, %struct.rar* %225, i32 0, i32 36, !dbg !4241
  store i64 %call217, i64* %crc_calculated218, align 8, !dbg !4242
  %226 = load i32, i32* %ret, align 4, !dbg !4243
  store i32 %226, i32* %retval, align 4, !dbg !4244
  br label %return, !dbg !4244

return:                                           ; preds = %do.end, %if.then201, %if.then177, %if.then169, %if.then149, %if.then133, %if.then124, %sw.bb113, %sw.bb, %if.then106, %if.then91, %if.then83, %if.then75, %if.then56, %if.then48, %if.end21, %if.then20, %if.then8, %if.then
  %227 = load i32, i32* %retval, align 4, !dbg !4245
  ret i32 %227, !dbg !4245
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_from_lzss_window(%struct.archive_read* %a, i8** %buffer, i64 %startpos, i32 %length) #0 !dbg !579 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buffer.addr = alloca i8**, align 8
  %startpos.addr = alloca i64, align 8
  %length.addr = alloca i32, align 4
  %windowoffs = alloca i32, align 4
  %firstpart = alloca i32, align 4
  %rar = alloca %struct.rar*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4246, metadata !677), !dbg !4247
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !4248, metadata !677), !dbg !4249
  store i64 %startpos, i64* %startpos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %startpos.addr, metadata !4250, metadata !677), !dbg !4251
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !4252, metadata !677), !dbg !4253
  call void @llvm.dbg.declare(metadata i32* %windowoffs, metadata !4254, metadata !677), !dbg !4255
  call void @llvm.dbg.declare(metadata i32* %firstpart, metadata !4256, metadata !677), !dbg !4257
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !4258, metadata !677), !dbg !4259
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4260
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !4261
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4261
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !4262
  %2 = load i8*, i8** %data, align 8, !dbg !4262
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !4263
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !4259
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4264
  %unp_buffer = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 32, !dbg !4266
  %5 = load i8*, i8** %unp_buffer, align 8, !dbg !4266
  %tobool = icmp ne i8* %5, null, !dbg !4264
  br i1 %tobool, label %if.end4, label %if.then, !dbg !4267

if.then:                                          ; preds = %entry
  %6 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4268
  %unp_buffer_size = getelementptr inbounds %struct.rar, %struct.rar* %6, i32 0, i32 31, !dbg !4271
  %7 = load i32, i32* %unp_buffer_size, align 8, !dbg !4271
  %conv = zext i32 %7 to i64, !dbg !4268
  %call = call noalias i8* @malloc(i64 %conv) #8, !dbg !4272
  %8 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4273
  %unp_buffer1 = getelementptr inbounds %struct.rar, %struct.rar* %8, i32 0, i32 32, !dbg !4274
  store i8* %call, i8** %unp_buffer1, align 8, !dbg !4275
  %cmp = icmp eq i8* %call, null, !dbg !4276
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4277

if.then3:                                         ; preds = %if.then
  %9 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4278
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %9, i32 0, i32 0, !dbg !4280
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0)), !dbg !4281
  store i32 -30, i32* %retval, align 4, !dbg !4282
  br label %return, !dbg !4282

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !4283

if.end4:                                          ; preds = %if.end, %entry
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4284
  %lzss = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 47, !dbg !4285
  %11 = load i64, i64* %startpos.addr, align 8, !dbg !4286
  %call5 = call i32 @lzss_offset_for_position(%struct.lzss* %lzss, i64 %11), !dbg !4287
  store i32 %call5, i32* %windowoffs, align 4, !dbg !4288
  %12 = load i32, i32* %windowoffs, align 4, !dbg !4289
  %13 = load i32, i32* %length.addr, align 4, !dbg !4291
  %add = add nsw i32 %12, %13, !dbg !4292
  %14 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4293
  %lzss6 = getelementptr inbounds %struct.rar, %struct.rar* %14, i32 0, i32 47, !dbg !4294
  %call7 = call i32 @lzss_size(%struct.lzss* %lzss6), !dbg !4295
  %cmp8 = icmp sle i32 %add, %call7, !dbg !4296
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !4297

if.then10:                                        ; preds = %if.end4
  %15 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4298
  %unp_offset = getelementptr inbounds %struct.rar, %struct.rar* %15, i32 0, i32 30, !dbg !4300
  %16 = load i32, i32* %unp_offset, align 4, !dbg !4300
  %idxprom = zext i32 %16 to i64, !dbg !4301
  %17 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4301
  %unp_buffer11 = getelementptr inbounds %struct.rar, %struct.rar* %17, i32 0, i32 32, !dbg !4302
  %18 = load i8*, i8** %unp_buffer11, align 8, !dbg !4302
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 %idxprom, !dbg !4301
  %19 = load i32, i32* %windowoffs, align 4, !dbg !4303
  %idxprom12 = sext i32 %19 to i64, !dbg !4304
  %20 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4304
  %lzss13 = getelementptr inbounds %struct.rar, %struct.rar* %20, i32 0, i32 47, !dbg !4305
  %window = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss13, i32 0, i32 0, !dbg !4306
  %21 = load i8*, i8** %window, align 8, !dbg !4306
  %arrayidx14 = getelementptr inbounds i8, i8* %21, i64 %idxprom12, !dbg !4304
  %22 = load i32, i32* %length.addr, align 4, !dbg !4307
  %conv15 = sext i32 %22 to i64, !dbg !4307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx, i8* %arrayidx14, i64 %conv15, i32 1, i1 false), !dbg !4308
  br label %if.end64, !dbg !4309

if.else:                                          ; preds = %if.end4
  %23 = load i32, i32* %length.addr, align 4, !dbg !4310
  %24 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4313
  %lzss16 = getelementptr inbounds %struct.rar, %struct.rar* %24, i32 0, i32 47, !dbg !4314
  %call17 = call i32 @lzss_size(%struct.lzss* %lzss16), !dbg !4315
  %cmp18 = icmp sle i32 %23, %call17, !dbg !4316
  br i1 %cmp18, label %if.then20, label %if.else61, !dbg !4310

if.then20:                                        ; preds = %if.else
  %25 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4317
  %lzss21 = getelementptr inbounds %struct.rar, %struct.rar* %25, i32 0, i32 47, !dbg !4319
  %call22 = call i32 @lzss_size(%struct.lzss* %lzss21), !dbg !4320
  %26 = load i32, i32* %windowoffs, align 4, !dbg !4321
  %sub = sub nsw i32 %call22, %26, !dbg !4322
  store i32 %sub, i32* %firstpart, align 4, !dbg !4323
  %27 = load i32, i32* %firstpart, align 4, !dbg !4324
  %cmp23 = icmp slt i32 %27, 0, !dbg !4326
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !4327

if.then25:                                        ; preds = %if.then20
  %28 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4328
  %archive26 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %28, i32 0, i32 0, !dbg !4330
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive26, i32 84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0)), !dbg !4331
  store i32 -30, i32* %retval, align 4, !dbg !4332
  br label %return, !dbg !4332

if.end27:                                         ; preds = %if.then20
  %29 = load i32, i32* %firstpart, align 4, !dbg !4333
  %30 = load i32, i32* %length.addr, align 4, !dbg !4335
  %cmp28 = icmp slt i32 %29, %30, !dbg !4336
  br i1 %cmp28, label %if.then30, label %if.else50, !dbg !4337

if.then30:                                        ; preds = %if.end27
  %31 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4338
  %unp_offset31 = getelementptr inbounds %struct.rar, %struct.rar* %31, i32 0, i32 30, !dbg !4340
  %32 = load i32, i32* %unp_offset31, align 4, !dbg !4340
  %idxprom32 = zext i32 %32 to i64, !dbg !4341
  %33 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4341
  %unp_buffer33 = getelementptr inbounds %struct.rar, %struct.rar* %33, i32 0, i32 32, !dbg !4342
  %34 = load i8*, i8** %unp_buffer33, align 8, !dbg !4342
  %arrayidx34 = getelementptr inbounds i8, i8* %34, i64 %idxprom32, !dbg !4341
  %35 = load i32, i32* %windowoffs, align 4, !dbg !4343
  %idxprom35 = sext i32 %35 to i64, !dbg !4344
  %36 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4344
  %lzss36 = getelementptr inbounds %struct.rar, %struct.rar* %36, i32 0, i32 47, !dbg !4345
  %window37 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss36, i32 0, i32 0, !dbg !4346
  %37 = load i8*, i8** %window37, align 8, !dbg !4346
  %arrayidx38 = getelementptr inbounds i8, i8* %37, i64 %idxprom35, !dbg !4344
  %38 = load i32, i32* %firstpart, align 4, !dbg !4347
  %conv39 = sext i32 %38 to i64, !dbg !4347
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx34, i8* %arrayidx38, i64 %conv39, i32 1, i1 false), !dbg !4348
  %39 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4349
  %unp_offset40 = getelementptr inbounds %struct.rar, %struct.rar* %39, i32 0, i32 30, !dbg !4350
  %40 = load i32, i32* %unp_offset40, align 4, !dbg !4350
  %41 = load i32, i32* %firstpart, align 4, !dbg !4351
  %add41 = add i32 %40, %41, !dbg !4352
  %idxprom42 = zext i32 %add41 to i64, !dbg !4353
  %42 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4353
  %unp_buffer43 = getelementptr inbounds %struct.rar, %struct.rar* %42, i32 0, i32 32, !dbg !4354
  %43 = load i8*, i8** %unp_buffer43, align 8, !dbg !4354
  %arrayidx44 = getelementptr inbounds i8, i8* %43, i64 %idxprom42, !dbg !4353
  %44 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4355
  %lzss45 = getelementptr inbounds %struct.rar, %struct.rar* %44, i32 0, i32 47, !dbg !4356
  %window46 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss45, i32 0, i32 0, !dbg !4357
  %45 = load i8*, i8** %window46, align 8, !dbg !4357
  %arrayidx47 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !4355
  %46 = load i32, i32* %length.addr, align 4, !dbg !4358
  %47 = load i32, i32* %firstpart, align 4, !dbg !4359
  %sub48 = sub nsw i32 %46, %47, !dbg !4360
  %conv49 = sext i32 %sub48 to i64, !dbg !4358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx44, i8* %arrayidx47, i64 %conv49, i32 1, i1 false), !dbg !4361
  br label %if.end60, !dbg !4362

if.else50:                                        ; preds = %if.end27
  %48 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4363
  %unp_offset51 = getelementptr inbounds %struct.rar, %struct.rar* %48, i32 0, i32 30, !dbg !4365
  %49 = load i32, i32* %unp_offset51, align 4, !dbg !4365
  %idxprom52 = zext i32 %49 to i64, !dbg !4366
  %50 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4366
  %unp_buffer53 = getelementptr inbounds %struct.rar, %struct.rar* %50, i32 0, i32 32, !dbg !4367
  %51 = load i8*, i8** %unp_buffer53, align 8, !dbg !4367
  %arrayidx54 = getelementptr inbounds i8, i8* %51, i64 %idxprom52, !dbg !4366
  %52 = load i32, i32* %windowoffs, align 4, !dbg !4368
  %idxprom55 = sext i32 %52 to i64, !dbg !4369
  %53 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4369
  %lzss56 = getelementptr inbounds %struct.rar, %struct.rar* %53, i32 0, i32 47, !dbg !4370
  %window57 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss56, i32 0, i32 0, !dbg !4371
  %54 = load i8*, i8** %window57, align 8, !dbg !4371
  %arrayidx58 = getelementptr inbounds i8, i8* %54, i64 %idxprom55, !dbg !4369
  %55 = load i32, i32* %length.addr, align 4, !dbg !4372
  %conv59 = sext i32 %55 to i64, !dbg !4372
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx54, i8* %arrayidx58, i64 %conv59, i32 1, i1 false), !dbg !4373
  br label %if.end60

if.end60:                                         ; preds = %if.else50, %if.then30
  br label %if.end63, !dbg !4374

if.else61:                                        ; preds = %if.else
  %56 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4375
  %archive62 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %56, i32 0, i32 0, !dbg !4377
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive62, i32 84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0)), !dbg !4378
  store i32 -30, i32* %retval, align 4, !dbg !4379
  br label %return, !dbg !4379

if.end63:                                         ; preds = %if.end60
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then10
  %57 = load i32, i32* %length.addr, align 4, !dbg !4380
  %58 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4381
  %unp_offset65 = getelementptr inbounds %struct.rar, %struct.rar* %58, i32 0, i32 30, !dbg !4382
  %59 = load i32, i32* %unp_offset65, align 4, !dbg !4383
  %add66 = add i32 %59, %57, !dbg !4383
  store i32 %add66, i32* %unp_offset65, align 4, !dbg !4383
  %60 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4384
  %unp_offset67 = getelementptr inbounds %struct.rar, %struct.rar* %60, i32 0, i32 30, !dbg !4386
  %61 = load i32, i32* %unp_offset67, align 4, !dbg !4386
  %62 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4387
  %unp_buffer_size68 = getelementptr inbounds %struct.rar, %struct.rar* %62, i32 0, i32 31, !dbg !4388
  %63 = load i32, i32* %unp_buffer_size68, align 8, !dbg !4388
  %cmp69 = icmp uge i32 %61, %63, !dbg !4389
  br i1 %cmp69, label %if.then71, label %if.else73, !dbg !4390

if.then71:                                        ; preds = %if.end64
  %64 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4391
  %unp_buffer72 = getelementptr inbounds %struct.rar, %struct.rar* %64, i32 0, i32 32, !dbg !4392
  %65 = load i8*, i8** %unp_buffer72, align 8, !dbg !4392
  %66 = load i8**, i8*** %buffer.addr, align 8, !dbg !4393
  store i8* %65, i8** %66, align 8, !dbg !4394
  br label %if.end74, !dbg !4395

if.else73:                                        ; preds = %if.end64
  %67 = load i8**, i8*** %buffer.addr, align 8, !dbg !4396
  store i8* null, i8** %67, align 8, !dbg !4397
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.then71
  store i32 0, i32* %retval, align 4, !dbg !4398
  br label %return, !dbg !4398

return:                                           ; preds = %if.end74, %if.else61, %if.then25, %if.then3
  %68 = load i32, i32* %retval, align 4, !dbg !4399
  ret i32 %68, !dbg !4399
}

; Function Attrs: nounwind uwtable
define internal i32 @rar_br_preparation(%struct.archive_read* %a, %struct.rar_br* %br) #0 !dbg !589 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %br.addr = alloca %struct.rar_br*, align 8
  %rar = alloca %struct.rar*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4400, metadata !677), !dbg !4401
  store %struct.rar_br* %br, %struct.rar_br** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rar_br** %br.addr, metadata !4402, metadata !677), !dbg !4403
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !4404, metadata !677), !dbg !4405
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4406
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !4407
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4407
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !4408
  %2 = load i8*, i8** %data, align 8, !dbg !4408
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !4409
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !4405
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4410
  %bytes_remaining = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 24, !dbg !4412
  %5 = load i64, i64* %bytes_remaining, align 8, !dbg !4412
  %cmp = icmp sgt i64 %5, 0, !dbg !4413
  br i1 %cmp, label %if.then, label %if.end8, !dbg !4414

if.then:                                          ; preds = %entry
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4415
  %7 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !4417
  %avail_in = getelementptr inbounds %struct.rar_br, %struct.rar_br* %7, i32 0, i32 2, !dbg !4418
  %call = call i8* @rar_read_ahead(%struct.archive_read* %6, i64 1, i64* %avail_in), !dbg !4419
  %8 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !4420
  %next_in = getelementptr inbounds %struct.rar_br, %struct.rar_br* %8, i32 0, i32 3, !dbg !4421
  store i8* %call, i8** %next_in, align 8, !dbg !4422
  %9 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !4423
  %next_in1 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %9, i32 0, i32 3, !dbg !4425
  %10 = load i8*, i8** %next_in1, align 8, !dbg !4425
  %cmp2 = icmp eq i8* %10, null, !dbg !4426
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4427

if.then3:                                         ; preds = %if.then
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4428
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !4430
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !4431
  store i32 -30, i32* %retval, align 4, !dbg !4432
  br label %return, !dbg !4432

if.end:                                           ; preds = %if.then
  %12 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !4433
  %cache_avail = getelementptr inbounds %struct.rar_br, %struct.rar_br* %12, i32 0, i32 1, !dbg !4435
  %13 = load i32, i32* %cache_avail, align 8, !dbg !4435
  %cmp4 = icmp eq i32 %13, 0, !dbg !4436
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !4437

if.then5:                                         ; preds = %if.end
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4438
  %15 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !4439
  %call6 = call i32 @rar_br_fillup(%struct.archive_read* %14, %struct.rar_br* %15), !dbg !4440
  br label %if.end7, !dbg !4441

if.end7:                                          ; preds = %if.then5, %if.end
  br label %if.end8, !dbg !4442

if.end8:                                          ; preds = %if.end7, %entry
  store i32 0, i32* %retval, align 4, !dbg !4443
  br label %return, !dbg !4443

return:                                           ; preds = %if.end8, %if.then3
  %16 = load i32, i32* %retval, align 4, !dbg !4444
  ret i32 %16, !dbg !4444
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_codes(%struct.archive_read* %a) #0 !dbg !594 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %val = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca i32, align 4
  %bitlengths = alloca [20 x i8], align 16
  %zerocount = alloca i8, align 1
  %ppmd_flags = alloca i8, align 1
  %maxorder = alloca i32, align 4
  %precode = alloca %struct.huffman_code, align 8
  %rar = alloca %struct.rar*, align 8
  %br = alloca %struct.rar_br*, align 8
  %new_window = alloca i8*, align 8
  %new_size = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4445, metadata !677), !dbg !4446
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4447, metadata !677), !dbg !4448
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4449, metadata !677), !dbg !4450
  call void @llvm.dbg.declare(metadata i32* %val, metadata !4451, metadata !677), !dbg !4452
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4453, metadata !677), !dbg !4454
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4455, metadata !677), !dbg !4456
  call void @llvm.dbg.declare(metadata [20 x i8]* %bitlengths, metadata !4457, metadata !677), !dbg !4461
  call void @llvm.dbg.declare(metadata i8* %zerocount, metadata !4462, metadata !677), !dbg !4463
  call void @llvm.dbg.declare(metadata i8* %ppmd_flags, metadata !4464, metadata !677), !dbg !4465
  call void @llvm.dbg.declare(metadata i32* %maxorder, metadata !4466, metadata !677), !dbg !4467
  call void @llvm.dbg.declare(metadata %struct.huffman_code* %precode, metadata !4468, metadata !677), !dbg !4469
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !4470, metadata !677), !dbg !4471
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4472
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !4473
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4473
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !4474
  %2 = load i8*, i8** %data, align 8, !dbg !4474
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !4475
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !4471
  call void @llvm.dbg.declare(metadata %struct.rar_br** %br, metadata !4476, metadata !677), !dbg !4477
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4478
  %br1 = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 68, !dbg !4479
  store %struct.rar_br* %br1, %struct.rar_br** %br, align 8, !dbg !4477
  %5 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4480
  call void @free_codes(%struct.archive_read* %5), !dbg !4481
  %6 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4482
  %cache_avail = getelementptr inbounds %struct.rar_br, %struct.rar_br* %6, i32 0, i32 1, !dbg !4482
  %7 = load i32, i32* %cache_avail, align 8, !dbg !4482
  %and = and i32 %7, -8, !dbg !4482
  store i32 %and, i32* %cache_avail, align 8, !dbg !4482
  %8 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4483
  %cache_avail2 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %8, i32 0, i32 1, !dbg !4483
  %9 = load i32, i32* %cache_avail2, align 8, !dbg !4483
  %cmp = icmp sge i32 %9, 1, !dbg !4483
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4483

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4485
  %11 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4485
  %call = call i32 @rar_br_fillup(%struct.archive_read* %10, %struct.rar_br* %11), !dbg !4485
  %tobool = icmp ne i32 %call, 0, !dbg !4485
  br i1 %tobool, label %if.end, label %lor.lhs.false3, !dbg !4485

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %12 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4487
  %cache_avail4 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %12, i32 0, i32 1, !dbg !4487
  %13 = load i32, i32* %cache_avail4, align 8, !dbg !4487
  %cmp5 = icmp sge i32 %13, 1, !dbg !4487
  br i1 %cmp5, label %if.end, label %if.then, !dbg !4489

if.then:                                          ; preds = %lor.lhs.false3
  br label %truncated_data, !dbg !4490

if.end:                                           ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %14 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4491
  %cache_buffer = getelementptr inbounds %struct.rar_br, %struct.rar_br* %14, i32 0, i32 0, !dbg !4491
  %15 = load i64, i64* %cache_buffer, align 8, !dbg !4491
  %16 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4491
  %cache_avail6 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %16, i32 0, i32 1, !dbg !4491
  %17 = load i32, i32* %cache_avail6, align 8, !dbg !4491
  %sub = sub nsw i32 %17, 1, !dbg !4491
  %sh_prom = zext i32 %sub to i64, !dbg !4491
  %shr = lshr i64 %15, %sh_prom, !dbg !4491
  %conv = trunc i64 %shr to i32, !dbg !4491
  %18 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 1), align 4, !dbg !4491
  %and7 = and i32 %conv, %18, !dbg !4491
  %conv8 = trunc i32 %and7 to i8, !dbg !4491
  %19 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4493
  %is_ppmd_block = getelementptr inbounds %struct.rar, %struct.rar* %19, i32 0, i32 58, !dbg !4494
  store i8 %conv8, i8* %is_ppmd_block, align 1, !dbg !4495
  %conv9 = sext i8 %conv8 to i32, !dbg !4496
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !4497
  br i1 %cmp10, label %if.then12, label %if.else146, !dbg !4498

if.then12:                                        ; preds = %if.end
  %20 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4499
  %cache_avail13 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %20, i32 0, i32 1, !dbg !4499
  %21 = load i32, i32* %cache_avail13, align 8, !dbg !4499
  %sub14 = sub nsw i32 %21, 1, !dbg !4499
  store i32 %sub14, i32* %cache_avail13, align 8, !dbg !4499
  %22 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4501
  %cache_avail15 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %22, i32 0, i32 1, !dbg !4501
  %23 = load i32, i32* %cache_avail15, align 8, !dbg !4501
  %cmp16 = icmp sge i32 %23, 7, !dbg !4501
  br i1 %cmp16, label %if.end26, label %lor.lhs.false18, !dbg !4501

lor.lhs.false18:                                  ; preds = %if.then12
  %24 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4503
  %25 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4503
  %call19 = call i32 @rar_br_fillup(%struct.archive_read* %24, %struct.rar_br* %25), !dbg !4503
  %tobool20 = icmp ne i32 %call19, 0, !dbg !4503
  br i1 %tobool20, label %if.end26, label %lor.lhs.false21, !dbg !4503

lor.lhs.false21:                                  ; preds = %lor.lhs.false18
  %26 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4505
  %cache_avail22 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %26, i32 0, i32 1, !dbg !4505
  %27 = load i32, i32* %cache_avail22, align 8, !dbg !4505
  %cmp23 = icmp sge i32 %27, 7, !dbg !4505
  br i1 %cmp23, label %if.end26, label %if.then25, !dbg !4507

if.then25:                                        ; preds = %lor.lhs.false21
  br label %truncated_data, !dbg !4508

if.end26:                                         ; preds = %lor.lhs.false21, %lor.lhs.false18, %if.then12
  %28 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4509
  %cache_buffer27 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %28, i32 0, i32 0, !dbg !4509
  %29 = load i64, i64* %cache_buffer27, align 8, !dbg !4509
  %30 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4509
  %cache_avail28 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %30, i32 0, i32 1, !dbg !4509
  %31 = load i32, i32* %cache_avail28, align 8, !dbg !4509
  %sub29 = sub nsw i32 %31, 7, !dbg !4509
  %sh_prom30 = zext i32 %sub29 to i64, !dbg !4509
  %shr31 = lshr i64 %29, %sh_prom30, !dbg !4509
  %conv32 = trunc i64 %shr31 to i32, !dbg !4509
  %32 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 7), align 4, !dbg !4509
  %and33 = and i32 %conv32, %32, !dbg !4509
  %conv34 = trunc i32 %and33 to i8, !dbg !4509
  store i8 %conv34, i8* %ppmd_flags, align 1, !dbg !4510
  %33 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4511
  %cache_avail35 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %33, i32 0, i32 1, !dbg !4511
  %34 = load i32, i32* %cache_avail35, align 8, !dbg !4511
  %sub36 = sub nsw i32 %34, 7, !dbg !4511
  store i32 %sub36, i32* %cache_avail35, align 8, !dbg !4511
  %35 = load i8, i8* %ppmd_flags, align 1, !dbg !4512
  %conv37 = zext i8 %35 to i32, !dbg !4512
  %and38 = and i32 %conv37, 32, !dbg !4514
  %tobool39 = icmp ne i32 %and38, 0, !dbg !4514
  br i1 %tobool39, label %if.then40, label %if.end62, !dbg !4515

if.then40:                                        ; preds = %if.end26
  %36 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4516
  %cache_avail41 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %36, i32 0, i32 1, !dbg !4516
  %37 = load i32, i32* %cache_avail41, align 8, !dbg !4516
  %cmp42 = icmp sge i32 %37, 8, !dbg !4516
  br i1 %cmp42, label %if.end52, label %lor.lhs.false44, !dbg !4516

lor.lhs.false44:                                  ; preds = %if.then40
  %38 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4519
  %39 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4519
  %call45 = call i32 @rar_br_fillup(%struct.archive_read* %38, %struct.rar_br* %39), !dbg !4519
  %tobool46 = icmp ne i32 %call45, 0, !dbg !4519
  br i1 %tobool46, label %if.end52, label %lor.lhs.false47, !dbg !4519

lor.lhs.false47:                                  ; preds = %lor.lhs.false44
  %40 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4521
  %cache_avail48 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %40, i32 0, i32 1, !dbg !4521
  %41 = load i32, i32* %cache_avail48, align 8, !dbg !4521
  %cmp49 = icmp sge i32 %41, 8, !dbg !4521
  br i1 %cmp49, label %if.end52, label %if.then51, !dbg !4523

if.then51:                                        ; preds = %lor.lhs.false47
  br label %truncated_data, !dbg !4524

if.end52:                                         ; preds = %lor.lhs.false47, %lor.lhs.false44, %if.then40
  %42 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4525
  %cache_buffer53 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %42, i32 0, i32 0, !dbg !4525
  %43 = load i64, i64* %cache_buffer53, align 8, !dbg !4525
  %44 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4525
  %cache_avail54 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %44, i32 0, i32 1, !dbg !4525
  %45 = load i32, i32* %cache_avail54, align 8, !dbg !4525
  %sub55 = sub nsw i32 %45, 8, !dbg !4525
  %sh_prom56 = zext i32 %sub55 to i64, !dbg !4525
  %shr57 = lshr i64 %43, %sh_prom56, !dbg !4525
  %conv58 = trunc i64 %shr57 to i32, !dbg !4525
  %46 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 8), align 16, !dbg !4525
  %and59 = and i32 %conv58, %46, !dbg !4525
  %add = add i32 %and59, 1, !dbg !4526
  %shl = shl i32 %add, 20, !dbg !4527
  %47 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4528
  %dictionary_size = getelementptr inbounds %struct.rar, %struct.rar* %47, i32 0, i32 33, !dbg !4529
  store i32 %shl, i32* %dictionary_size, align 8, !dbg !4530
  %48 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4531
  %cache_avail60 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %48, i32 0, i32 1, !dbg !4531
  %49 = load i32, i32* %cache_avail60, align 8, !dbg !4531
  %sub61 = sub nsw i32 %49, 8, !dbg !4531
  store i32 %sub61, i32* %cache_avail60, align 8, !dbg !4531
  br label %if.end62, !dbg !4532

if.end62:                                         ; preds = %if.end52, %if.end26
  %50 = load i8, i8* %ppmd_flags, align 1, !dbg !4533
  %conv63 = zext i8 %50 to i32, !dbg !4533
  %and64 = and i32 %conv63, 64, !dbg !4535
  %tobool65 = icmp ne i32 %and64, 0, !dbg !4535
  br i1 %tobool65, label %if.then66, label %if.else, !dbg !4536

if.then66:                                        ; preds = %if.end62
  %51 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4537
  %cache_avail67 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %51, i32 0, i32 1, !dbg !4537
  %52 = load i32, i32* %cache_avail67, align 8, !dbg !4537
  %cmp68 = icmp sge i32 %52, 8, !dbg !4537
  br i1 %cmp68, label %if.end78, label %lor.lhs.false70, !dbg !4537

lor.lhs.false70:                                  ; preds = %if.then66
  %53 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4540
  %54 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4540
  %call71 = call i32 @rar_br_fillup(%struct.archive_read* %53, %struct.rar_br* %54), !dbg !4540
  %tobool72 = icmp ne i32 %call71, 0, !dbg !4540
  br i1 %tobool72, label %if.end78, label %lor.lhs.false73, !dbg !4540

lor.lhs.false73:                                  ; preds = %lor.lhs.false70
  %55 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4542
  %cache_avail74 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %55, i32 0, i32 1, !dbg !4542
  %56 = load i32, i32* %cache_avail74, align 8, !dbg !4542
  %cmp75 = icmp sge i32 %56, 8, !dbg !4542
  br i1 %cmp75, label %if.end78, label %if.then77, !dbg !4544

if.then77:                                        ; preds = %lor.lhs.false73
  br label %truncated_data, !dbg !4545

if.end78:                                         ; preds = %lor.lhs.false73, %lor.lhs.false70, %if.then66
  %57 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4546
  %cache_buffer79 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %57, i32 0, i32 0, !dbg !4546
  %58 = load i64, i64* %cache_buffer79, align 8, !dbg !4546
  %59 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4546
  %cache_avail80 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %59, i32 0, i32 1, !dbg !4546
  %60 = load i32, i32* %cache_avail80, align 8, !dbg !4546
  %sub81 = sub nsw i32 %60, 8, !dbg !4546
  %sh_prom82 = zext i32 %sub81 to i64, !dbg !4546
  %shr83 = lshr i64 %58, %sh_prom82, !dbg !4546
  %conv84 = trunc i64 %shr83 to i32, !dbg !4546
  %61 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 8), align 16, !dbg !4546
  %and85 = and i32 %conv84, %61, !dbg !4546
  %62 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4547
  %ppmd7_context = getelementptr inbounds %struct.rar, %struct.rar* %62, i32 0, i32 60, !dbg !4548
  %InitEsc = getelementptr inbounds %struct.CPpmd7, %struct.CPpmd7* %ppmd7_context, i32 0, i32 4, !dbg !4549
  store i32 %and85, i32* %InitEsc, align 4, !dbg !4550
  %63 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4551
  %ppmd_escape = getelementptr inbounds %struct.rar, %struct.rar* %63, i32 0, i32 59, !dbg !4552
  store i32 %and85, i32* %ppmd_escape, align 4, !dbg !4553
  %64 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4554
  %cache_avail86 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %64, i32 0, i32 1, !dbg !4554
  %65 = load i32, i32* %cache_avail86, align 8, !dbg !4554
  %sub87 = sub nsw i32 %65, 8, !dbg !4554
  store i32 %sub87, i32* %cache_avail86, align 8, !dbg !4554
  br label %if.end89, !dbg !4555

if.else:                                          ; preds = %if.end62
  %66 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4556
  %ppmd_escape88 = getelementptr inbounds %struct.rar, %struct.rar* %66, i32 0, i32 59, !dbg !4557
  store i32 2, i32* %ppmd_escape88, align 4, !dbg !4558
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.end78
  %67 = load i8, i8* %ppmd_flags, align 1, !dbg !4559
  %conv90 = zext i8 %67 to i32, !dbg !4559
  %and91 = and i32 %conv90, 32, !dbg !4561
  %tobool92 = icmp ne i32 %and91, 0, !dbg !4561
  br i1 %tobool92, label %if.then93, label %if.else133, !dbg !4562

if.then93:                                        ; preds = %if.end89
  %68 = load i8, i8* %ppmd_flags, align 1, !dbg !4563
  %conv94 = zext i8 %68 to i32, !dbg !4563
  %and95 = and i32 %conv94, 31, !dbg !4565
  %add96 = add nsw i32 %and95, 1, !dbg !4566
  store i32 %add96, i32* %maxorder, align 4, !dbg !4567
  %69 = load i32, i32* %maxorder, align 4, !dbg !4568
  %cmp97 = icmp ugt i32 %69, 16, !dbg !4570
  br i1 %cmp97, label %if.then99, label %if.end102, !dbg !4571

if.then99:                                        ; preds = %if.then93
  %70 = load i32, i32* %maxorder, align 4, !dbg !4572
  %sub100 = sub i32 %70, 16, !dbg !4573
  %mul = mul i32 %sub100, 3, !dbg !4574
  %add101 = add i32 16, %mul, !dbg !4575
  store i32 %add101, i32* %maxorder, align 4, !dbg !4576
  br label %if.end102, !dbg !4577

if.end102:                                        ; preds = %if.then99, %if.then93
  %71 = load i32, i32* %maxorder, align 4, !dbg !4578
  %cmp103 = icmp eq i32 %71, 1, !dbg !4580
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !4581

if.then105:                                       ; preds = %if.end102
  %72 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4582
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %72, i32 0, i32 0, !dbg !4584
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !4585
  store i32 -30, i32* %retval, align 4, !dbg !4586
  br label %return, !dbg !4586

if.end106:                                        ; preds = %if.end102
  %73 = load void (%struct.CPpmd7*, %struct.ISzAlloc*)*, void (%struct.CPpmd7*, %struct.ISzAlloc*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 2), align 8, !dbg !4587
  %74 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4588
  %ppmd7_context107 = getelementptr inbounds %struct.rar, %struct.rar* %74, i32 0, i32 60, !dbg !4589
  call void %73(%struct.CPpmd7* %ppmd7_context107, %struct.ISzAlloc* @g_szalloc), !dbg !4590
  %75 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4591
  %76 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4592
  %bytein = getelementptr inbounds %struct.rar, %struct.rar* %76, i32 0, i32 62, !dbg !4593
  %a108 = getelementptr inbounds %struct.IByteIn, %struct.IByteIn* %bytein, i32 0, i32 0, !dbg !4594
  store %struct.archive_read* %75, %struct.archive_read** %a108, align 8, !dbg !4595
  %77 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4596
  %bytein109 = getelementptr inbounds %struct.rar, %struct.rar* %77, i32 0, i32 62, !dbg !4597
  %Read = getelementptr inbounds %struct.IByteIn, %struct.IByteIn* %bytein109, i32 0, i32 1, !dbg !4598
  store i8 (i8*)* @ppmd_read, i8 (i8*)** %Read, align 8, !dbg !4599
  %78 = load void (%struct.CPpmd7z_RangeDec*)*, void (%struct.CPpmd7z_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 5), align 8, !dbg !4600
  %79 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4601
  %range_dec = getelementptr inbounds %struct.rar, %struct.rar* %79, i32 0, i32 61, !dbg !4602
  call void %78(%struct.CPpmd7z_RangeDec* %range_dec), !dbg !4603
  %80 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4604
  %bytein110 = getelementptr inbounds %struct.rar, %struct.rar* %80, i32 0, i32 62, !dbg !4605
  %81 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4606
  %range_dec111 = getelementptr inbounds %struct.rar, %struct.rar* %81, i32 0, i32 61, !dbg !4607
  %Stream = getelementptr inbounds %struct.CPpmd7z_RangeDec, %struct.CPpmd7z_RangeDec* %range_dec111, i32 0, i32 5, !dbg !4608
  store %struct.IByteIn* %bytein110, %struct.IByteIn** %Stream, align 8, !dbg !4609
  %82 = load void (%struct.CPpmd7*)*, void (%struct.CPpmd7*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 0), align 8, !dbg !4610
  %83 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4611
  %ppmd7_context112 = getelementptr inbounds %struct.rar, %struct.rar* %83, i32 0, i32 60, !dbg !4612
  call void %82(%struct.CPpmd7* %ppmd7_context112), !dbg !4613
  %84 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4614
  %dictionary_size113 = getelementptr inbounds %struct.rar, %struct.rar* %84, i32 0, i32 33, !dbg !4616
  %85 = load i32, i32* %dictionary_size113, align 8, !dbg !4616
  %cmp114 = icmp eq i32 %85, 0, !dbg !4617
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !4618

if.then116:                                       ; preds = %if.end106
  %86 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4619
  %archive117 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %86, i32 0, i32 0, !dbg !4621
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive117, i32 84, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0)), !dbg !4622
  store i32 -30, i32* %retval, align 4, !dbg !4623
  br label %return, !dbg !4623

if.end118:                                        ; preds = %if.end106
  %87 = load i32 (%struct.CPpmd7*, i32, %struct.ISzAlloc*)*, i32 (%struct.CPpmd7*, i32, %struct.ISzAlloc*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 1), align 8, !dbg !4624
  %88 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4626
  %ppmd7_context119 = getelementptr inbounds %struct.rar, %struct.rar* %88, i32 0, i32 60, !dbg !4627
  %89 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4628
  %dictionary_size120 = getelementptr inbounds %struct.rar, %struct.rar* %89, i32 0, i32 33, !dbg !4629
  %90 = load i32, i32* %dictionary_size120, align 8, !dbg !4629
  %call121 = call i32 %87(%struct.CPpmd7* %ppmd7_context119, i32 %90, %struct.ISzAlloc* @g_szalloc), !dbg !4630
  %tobool122 = icmp ne i32 %call121, 0, !dbg !4630
  br i1 %tobool122, label %if.end125, label %if.then123, !dbg !4631

if.then123:                                       ; preds = %if.end118
  %91 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4632
  %archive124 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %91, i32 0, i32 0, !dbg !4634
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive124, i32 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0)), !dbg !4635
  store i32 -30, i32* %retval, align 4, !dbg !4636
  br label %return, !dbg !4636

if.end125:                                        ; preds = %if.end118
  %92 = load i32 (%struct.CPpmd7z_RangeDec*)*, i32 (%struct.CPpmd7z_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 7), align 8, !dbg !4637
  %93 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4639
  %range_dec126 = getelementptr inbounds %struct.rar, %struct.rar* %93, i32 0, i32 61, !dbg !4640
  %call127 = call i32 %92(%struct.CPpmd7z_RangeDec* %range_dec126), !dbg !4641
  %tobool128 = icmp ne i32 %call127, 0, !dbg !4641
  br i1 %tobool128, label %if.end131, label %if.then129, !dbg !4642

if.then129:                                       ; preds = %if.end125
  %94 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4643
  %archive130 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %94, i32 0, i32 0, !dbg !4645
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive130, i32 84, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.39, i32 0, i32 0)), !dbg !4646
  store i32 -30, i32* %retval, align 4, !dbg !4647
  br label %return, !dbg !4647

if.end131:                                        ; preds = %if.end125
  %95 = load void (%struct.CPpmd7*, i32)*, void (%struct.CPpmd7*, i32)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 3), align 8, !dbg !4648
  %96 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4649
  %ppmd7_context132 = getelementptr inbounds %struct.rar, %struct.rar* %96, i32 0, i32 60, !dbg !4650
  %97 = load i32, i32* %maxorder, align 4, !dbg !4651
  call void %95(%struct.CPpmd7* %ppmd7_context132, i32 %97), !dbg !4652
  %98 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4653
  %ppmd_valid = getelementptr inbounds %struct.rar, %struct.rar* %98, i32 0, i32 56, !dbg !4654
  store i8 1, i8* %ppmd_valid, align 1, !dbg !4655
  br label %if.end145, !dbg !4656

if.else133:                                       ; preds = %if.end89
  %99 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4657
  %ppmd_valid134 = getelementptr inbounds %struct.rar, %struct.rar* %99, i32 0, i32 56, !dbg !4660
  %100 = load i8, i8* %ppmd_valid134, align 1, !dbg !4660
  %tobool135 = icmp ne i8 %100, 0, !dbg !4657
  br i1 %tobool135, label %if.end138, label %if.then136, !dbg !4661

if.then136:                                       ; preds = %if.else133
  %101 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4662
  %archive137 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %101, i32 0, i32 0, !dbg !4664
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive137, i32 84, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0)), !dbg !4665
  store i32 -30, i32* %retval, align 4, !dbg !4666
  br label %return, !dbg !4666

if.end138:                                        ; preds = %if.else133
  %102 = load i32 (%struct.CPpmd7z_RangeDec*)*, i32 (%struct.CPpmd7z_RangeDec*)** getelementptr inbounds (%struct.IPpmd7, %struct.IPpmd7* @__archive_ppmd7_functions, i32 0, i32 7), align 8, !dbg !4667
  %103 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4669
  %range_dec139 = getelementptr inbounds %struct.rar, %struct.rar* %103, i32 0, i32 61, !dbg !4670
  %call140 = call i32 %102(%struct.CPpmd7z_RangeDec* %range_dec139), !dbg !4671
  %tobool141 = icmp ne i32 %call140, 0, !dbg !4671
  br i1 %tobool141, label %if.end144, label %if.then142, !dbg !4672

if.then142:                                       ; preds = %if.end138
  %104 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4673
  %archive143 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %104, i32 0, i32 0, !dbg !4675
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive143, i32 84, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.39, i32 0, i32 0)), !dbg !4676
  store i32 -30, i32* %retval, align 4, !dbg !4677
  br label %return, !dbg !4677

if.end144:                                        ; preds = %if.end138
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.end131
  br label %if.end459, !dbg !4678

if.else146:                                       ; preds = %if.end
  %105 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4679
  %cache_avail147 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %105, i32 0, i32 1, !dbg !4679
  %106 = load i32, i32* %cache_avail147, align 8, !dbg !4679
  %sub148 = sub nsw i32 %106, 1, !dbg !4679
  store i32 %sub148, i32* %cache_avail147, align 8, !dbg !4679
  %107 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4681
  %cache_avail149 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %107, i32 0, i32 1, !dbg !4681
  %108 = load i32, i32* %cache_avail149, align 8, !dbg !4681
  %cmp150 = icmp sge i32 %108, 1, !dbg !4681
  br i1 %cmp150, label %if.end160, label %lor.lhs.false152, !dbg !4681

lor.lhs.false152:                                 ; preds = %if.else146
  %109 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4683
  %110 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4683
  %call153 = call i32 @rar_br_fillup(%struct.archive_read* %109, %struct.rar_br* %110), !dbg !4683
  %tobool154 = icmp ne i32 %call153, 0, !dbg !4683
  br i1 %tobool154, label %if.end160, label %lor.lhs.false155, !dbg !4683

lor.lhs.false155:                                 ; preds = %lor.lhs.false152
  %111 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4685
  %cache_avail156 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %111, i32 0, i32 1, !dbg !4685
  %112 = load i32, i32* %cache_avail156, align 8, !dbg !4685
  %cmp157 = icmp sge i32 %112, 1, !dbg !4685
  br i1 %cmp157, label %if.end160, label %if.then159, !dbg !4687

if.then159:                                       ; preds = %lor.lhs.false155
  br label %truncated_data, !dbg !4688

if.end160:                                        ; preds = %lor.lhs.false155, %lor.lhs.false152, %if.else146
  %113 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4689
  %cache_buffer161 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %113, i32 0, i32 0, !dbg !4689
  %114 = load i64, i64* %cache_buffer161, align 8, !dbg !4689
  %115 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4689
  %cache_avail162 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %115, i32 0, i32 1, !dbg !4689
  %116 = load i32, i32* %cache_avail162, align 8, !dbg !4689
  %sub163 = sub nsw i32 %116, 1, !dbg !4689
  %sh_prom164 = zext i32 %sub163 to i64, !dbg !4689
  %shr165 = lshr i64 %114, %sh_prom164, !dbg !4689
  %conv166 = trunc i64 %shr165 to i32, !dbg !4689
  %117 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 1), align 4, !dbg !4689
  %and167 = and i32 %conv166, %117, !dbg !4689
  %tobool168 = icmp ne i32 %and167, 0, !dbg !4689
  br i1 %tobool168, label %if.end170, label %if.then169, !dbg !4691

if.then169:                                       ; preds = %if.end160
  %118 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4692
  %lengthtable = getelementptr inbounds %struct.rar, %struct.rar* %118, i32 0, i32 46, !dbg !4693
  %arraydecay = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable, i32 0, i32 0, !dbg !4694
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 404, i32 8, i1 false), !dbg !4694
  br label %if.end170, !dbg !4694

if.end170:                                        ; preds = %if.then169, %if.end160
  %119 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4695
  %cache_avail171 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %119, i32 0, i32 1, !dbg !4695
  %120 = load i32, i32* %cache_avail171, align 8, !dbg !4695
  %sub172 = sub nsw i32 %120, 1, !dbg !4695
  store i32 %sub172, i32* %cache_avail171, align 8, !dbg !4695
  %121 = bitcast [20 x i8]* %bitlengths to i8*, !dbg !4696
  call void @llvm.memset.p0i8.i64(i8* %121, i8 0, i64 20, i32 16, i1 false), !dbg !4696
  store i32 0, i32* %i, align 4, !dbg !4697
  br label %for.cond, !dbg !4699

for.cond:                                         ; preds = %if.end241, %if.end170
  %122 = load i32, i32* %i, align 4, !dbg !4700
  %cmp173 = icmp slt i32 %122, 20, !dbg !4703
  br i1 %cmp173, label %for.body, label %for.end242, !dbg !4704

for.body:                                         ; preds = %for.cond
  %123 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4705
  %cache_avail175 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %123, i32 0, i32 1, !dbg !4705
  %124 = load i32, i32* %cache_avail175, align 8, !dbg !4705
  %cmp176 = icmp sge i32 %124, 4, !dbg !4705
  br i1 %cmp176, label %if.end186, label %lor.lhs.false178, !dbg !4705

lor.lhs.false178:                                 ; preds = %for.body
  %125 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4708
  %126 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4708
  %call179 = call i32 @rar_br_fillup(%struct.archive_read* %125, %struct.rar_br* %126), !dbg !4708
  %tobool180 = icmp ne i32 %call179, 0, !dbg !4708
  br i1 %tobool180, label %if.end186, label %lor.lhs.false181, !dbg !4708

lor.lhs.false181:                                 ; preds = %lor.lhs.false178
  %127 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4710
  %cache_avail182 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %127, i32 0, i32 1, !dbg !4710
  %128 = load i32, i32* %cache_avail182, align 8, !dbg !4710
  %cmp183 = icmp sge i32 %128, 4, !dbg !4710
  br i1 %cmp183, label %if.end186, label %if.then185, !dbg !4712

if.then185:                                       ; preds = %lor.lhs.false181
  br label %truncated_data, !dbg !4713

if.end186:                                        ; preds = %lor.lhs.false181, %lor.lhs.false178, %for.body
  %129 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4714
  %cache_buffer187 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %129, i32 0, i32 0, !dbg !4714
  %130 = load i64, i64* %cache_buffer187, align 8, !dbg !4714
  %131 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4714
  %cache_avail188 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %131, i32 0, i32 1, !dbg !4714
  %132 = load i32, i32* %cache_avail188, align 8, !dbg !4714
  %sub189 = sub nsw i32 %132, 4, !dbg !4714
  %sh_prom190 = zext i32 %sub189 to i64, !dbg !4714
  %shr191 = lshr i64 %130, %sh_prom190, !dbg !4714
  %conv192 = trunc i64 %shr191 to i32, !dbg !4714
  %133 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 4), align 16, !dbg !4714
  %and193 = and i32 %conv192, %133, !dbg !4714
  %conv194 = trunc i32 %and193 to i8, !dbg !4714
  %134 = load i32, i32* %i, align 4, !dbg !4715
  %inc = add nsw i32 %134, 1, !dbg !4715
  store i32 %inc, i32* %i, align 4, !dbg !4715
  %idxprom = sext i32 %134 to i64, !dbg !4716
  %arrayidx = getelementptr inbounds [20 x i8], [20 x i8]* %bitlengths, i64 0, i64 %idxprom, !dbg !4716
  store i8 %conv194, i8* %arrayidx, align 1, !dbg !4717
  %135 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4718
  %cache_avail195 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %135, i32 0, i32 1, !dbg !4718
  %136 = load i32, i32* %cache_avail195, align 8, !dbg !4718
  %sub196 = sub nsw i32 %136, 4, !dbg !4718
  store i32 %sub196, i32* %cache_avail195, align 8, !dbg !4718
  %137 = load i32, i32* %i, align 4, !dbg !4719
  %sub197 = sub nsw i32 %137, 1, !dbg !4721
  %idxprom198 = sext i32 %sub197 to i64, !dbg !4722
  %arrayidx199 = getelementptr inbounds [20 x i8], [20 x i8]* %bitlengths, i64 0, i64 %idxprom198, !dbg !4722
  %138 = load i8, i8* %arrayidx199, align 1, !dbg !4722
  %conv200 = zext i8 %138 to i32, !dbg !4722
  %cmp201 = icmp eq i32 %conv200, 15, !dbg !4723
  br i1 %cmp201, label %if.then203, label %if.end241, !dbg !4724

if.then203:                                       ; preds = %if.end186
  %139 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4725
  %cache_avail204 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %139, i32 0, i32 1, !dbg !4725
  %140 = load i32, i32* %cache_avail204, align 8, !dbg !4725
  %cmp205 = icmp sge i32 %140, 4, !dbg !4725
  br i1 %cmp205, label %if.end215, label %lor.lhs.false207, !dbg !4725

lor.lhs.false207:                                 ; preds = %if.then203
  %141 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4728
  %142 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4728
  %call208 = call i32 @rar_br_fillup(%struct.archive_read* %141, %struct.rar_br* %142), !dbg !4728
  %tobool209 = icmp ne i32 %call208, 0, !dbg !4728
  br i1 %tobool209, label %if.end215, label %lor.lhs.false210, !dbg !4728

lor.lhs.false210:                                 ; preds = %lor.lhs.false207
  %143 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4730
  %cache_avail211 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %143, i32 0, i32 1, !dbg !4730
  %144 = load i32, i32* %cache_avail211, align 8, !dbg !4730
  %cmp212 = icmp sge i32 %144, 4, !dbg !4730
  br i1 %cmp212, label %if.end215, label %if.then214, !dbg !4732

if.then214:                                       ; preds = %lor.lhs.false210
  br label %truncated_data, !dbg !4733

if.end215:                                        ; preds = %lor.lhs.false210, %lor.lhs.false207, %if.then203
  %145 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4734
  %cache_buffer216 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %145, i32 0, i32 0, !dbg !4734
  %146 = load i64, i64* %cache_buffer216, align 8, !dbg !4734
  %147 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4734
  %cache_avail217 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %147, i32 0, i32 1, !dbg !4734
  %148 = load i32, i32* %cache_avail217, align 8, !dbg !4734
  %sub218 = sub nsw i32 %148, 4, !dbg !4734
  %sh_prom219 = zext i32 %sub218 to i64, !dbg !4734
  %shr220 = lshr i64 %146, %sh_prom219, !dbg !4734
  %conv221 = trunc i64 %shr220 to i32, !dbg !4734
  %149 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 4), align 16, !dbg !4734
  %and222 = and i32 %conv221, %149, !dbg !4734
  %conv223 = trunc i32 %and222 to i8, !dbg !4734
  store i8 %conv223, i8* %zerocount, align 1, !dbg !4735
  %150 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4736
  %cache_avail224 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %150, i32 0, i32 1, !dbg !4736
  %151 = load i32, i32* %cache_avail224, align 8, !dbg !4736
  %sub225 = sub nsw i32 %151, 4, !dbg !4736
  store i32 %sub225, i32* %cache_avail224, align 8, !dbg !4736
  %152 = load i8, i8* %zerocount, align 1, !dbg !4737
  %tobool226 = icmp ne i8 %152, 0, !dbg !4737
  br i1 %tobool226, label %if.then227, label %if.end240, !dbg !4739

if.then227:                                       ; preds = %if.end215
  %153 = load i32, i32* %i, align 4, !dbg !4740
  %dec = add nsw i32 %153, -1, !dbg !4740
  store i32 %dec, i32* %i, align 4, !dbg !4740
  store i32 0, i32* %j, align 4, !dbg !4742
  br label %for.cond228, !dbg !4744

for.cond228:                                      ; preds = %for.inc, %if.then227
  %154 = load i32, i32* %j, align 4, !dbg !4745
  %155 = load i8, i8* %zerocount, align 1, !dbg !4748
  %conv229 = zext i8 %155 to i32, !dbg !4748
  %add230 = add nsw i32 %conv229, 2, !dbg !4749
  %cmp231 = icmp slt i32 %154, %add230, !dbg !4750
  br i1 %cmp231, label %land.rhs, label %land.end, !dbg !4751

land.rhs:                                         ; preds = %for.cond228
  %156 = load i32, i32* %i, align 4, !dbg !4752
  %cmp233 = icmp slt i32 %156, 20, !dbg !4754
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond228
  %157 = phi i1 [ false, %for.cond228 ], [ %cmp233, %land.rhs ]
  br i1 %157, label %for.body235, label %for.end, !dbg !4755

for.body235:                                      ; preds = %land.end
  %158 = load i32, i32* %i, align 4, !dbg !4757
  %inc236 = add nsw i32 %158, 1, !dbg !4757
  store i32 %inc236, i32* %i, align 4, !dbg !4757
  %idxprom237 = sext i32 %158 to i64, !dbg !4758
  %arrayidx238 = getelementptr inbounds [20 x i8], [20 x i8]* %bitlengths, i64 0, i64 %idxprom237, !dbg !4758
  store i8 0, i8* %arrayidx238, align 1, !dbg !4759
  br label %for.inc, !dbg !4758

for.inc:                                          ; preds = %for.body235
  %159 = load i32, i32* %j, align 4, !dbg !4760
  %inc239 = add nsw i32 %159, 1, !dbg !4760
  store i32 %inc239, i32* %j, align 4, !dbg !4760
  br label %for.cond228, !dbg !4762

for.end:                                          ; preds = %land.end
  br label %if.end240, !dbg !4763

if.end240:                                        ; preds = %for.end, %if.end215
  br label %if.end241, !dbg !4764

if.end241:                                        ; preds = %if.end240, %if.end186
  br label %for.cond, !dbg !4765

for.end242:                                       ; preds = %for.cond
  %160 = bitcast %struct.huffman_code* %precode to i8*, !dbg !4767
  call void @llvm.memset.p0i8.i64(i8* %160, i8 0, i64 40, i32 8, i1 false), !dbg !4767
  %161 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4768
  %arraydecay243 = getelementptr inbounds [20 x i8], [20 x i8]* %bitlengths, i32 0, i32 0, !dbg !4769
  %call244 = call i32 @create_code(%struct.archive_read* %161, %struct.huffman_code* %precode, i8* %arraydecay243, i32 20, i8 signext 15), !dbg !4770
  store i32 %call244, i32* %r, align 4, !dbg !4771
  %162 = load i32, i32* %r, align 4, !dbg !4772
  %cmp245 = icmp ne i32 %162, 0, !dbg !4774
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !4775

if.then247:                                       ; preds = %for.end242
  %tree = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4776
  %163 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree, align 8, !dbg !4776
  %164 = bitcast %struct.huffman_tree_node* %163 to i8*, !dbg !4778
  call void @free(i8* %164) #8, !dbg !4779
  %table = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4780
  %165 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table, align 8, !dbg !4780
  %166 = bitcast %struct.huffman_table_entry* %165 to i8*, !dbg !4781
  call void @free(i8* %166) #8, !dbg !4782
  %167 = load i32, i32* %r, align 4, !dbg !4783
  store i32 %167, i32* %retval, align 4, !dbg !4784
  br label %return, !dbg !4784

if.end248:                                        ; preds = %for.end242
  store i32 0, i32* %i, align 4, !dbg !4785
  br label %for.cond249, !dbg !4787

for.cond249:                                      ; preds = %if.end427, %if.end248
  %168 = load i32, i32* %i, align 4, !dbg !4788
  %cmp250 = icmp slt i32 %168, 404, !dbg !4791
  br i1 %cmp250, label %for.body252, label %for.end428, !dbg !4792

for.body252:                                      ; preds = %for.cond249
  %169 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4793
  %call253 = call i32 @read_next_symbol(%struct.archive_read* %169, %struct.huffman_code* %precode), !dbg !4796
  store i32 %call253, i32* %val, align 4, !dbg !4797
  %cmp254 = icmp slt i32 %call253, 0, !dbg !4798
  br i1 %cmp254, label %if.then256, label %if.end259, !dbg !4799

if.then256:                                       ; preds = %for.body252
  %tree257 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4800
  %170 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree257, align 8, !dbg !4800
  %171 = bitcast %struct.huffman_tree_node* %170 to i8*, !dbg !4802
  call void @free(i8* %171) #8, !dbg !4803
  %table258 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4804
  %172 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table258, align 8, !dbg !4804
  %173 = bitcast %struct.huffman_table_entry* %172 to i8*, !dbg !4805
  call void @free(i8* %173) #8, !dbg !4806
  store i32 -30, i32* %retval, align 4, !dbg !4807
  br label %return, !dbg !4807

if.end259:                                        ; preds = %for.body252
  %174 = load i32, i32* %val, align 4, !dbg !4808
  %cmp260 = icmp slt i32 %174, 16, !dbg !4810
  br i1 %cmp260, label %if.then262, label %if.else274, !dbg !4811

if.then262:                                       ; preds = %if.end259
  %175 = load i32, i32* %i, align 4, !dbg !4812
  %idxprom263 = sext i32 %175 to i64, !dbg !4814
  %176 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4814
  %lengthtable264 = getelementptr inbounds %struct.rar, %struct.rar* %176, i32 0, i32 46, !dbg !4815
  %arrayidx265 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable264, i64 0, i64 %idxprom263, !dbg !4814
  %177 = load i8, i8* %arrayidx265, align 1, !dbg !4814
  %conv266 = zext i8 %177 to i32, !dbg !4814
  %178 = load i32, i32* %val, align 4, !dbg !4816
  %add267 = add nsw i32 %conv266, %178, !dbg !4817
  %and268 = and i32 %add267, 15, !dbg !4818
  %conv269 = trunc i32 %and268 to i8, !dbg !4819
  %179 = load i32, i32* %i, align 4, !dbg !4820
  %idxprom270 = sext i32 %179 to i64, !dbg !4821
  %180 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4821
  %lengthtable271 = getelementptr inbounds %struct.rar, %struct.rar* %180, i32 0, i32 46, !dbg !4822
  %arrayidx272 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable271, i64 0, i64 %idxprom270, !dbg !4821
  store i8 %conv269, i8* %arrayidx272, align 1, !dbg !4823
  %181 = load i32, i32* %i, align 4, !dbg !4824
  %inc273 = add nsw i32 %181, 1, !dbg !4824
  store i32 %inc273, i32* %i, align 4, !dbg !4824
  br label %if.end427, !dbg !4825

if.else274:                                       ; preds = %if.end259
  %182 = load i32, i32* %val, align 4, !dbg !4826
  %cmp275 = icmp slt i32 %182, 18, !dbg !4828
  br i1 %cmp275, label %if.then277, label %if.else357, !dbg !4829

if.then277:                                       ; preds = %if.else274
  %183 = load i32, i32* %i, align 4, !dbg !4830
  %cmp278 = icmp eq i32 %183, 0, !dbg !4833
  br i1 %cmp278, label %if.then280, label %if.end284, !dbg !4834

if.then280:                                       ; preds = %if.then277
  %tree281 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4835
  %184 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree281, align 8, !dbg !4835
  %185 = bitcast %struct.huffman_tree_node* %184 to i8*, !dbg !4837
  call void @free(i8* %185) #8, !dbg !4838
  %table282 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4839
  %186 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table282, align 8, !dbg !4839
  %187 = bitcast %struct.huffman_table_entry* %186 to i8*, !dbg !4840
  call void @free(i8* %187) #8, !dbg !4841
  %188 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4842
  %archive283 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %188, i32 0, i32 0, !dbg !4843
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive283, i32 84, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.41, i32 0, i32 0)), !dbg !4844
  store i32 -30, i32* %retval, align 4, !dbg !4845
  br label %return, !dbg !4845

if.end284:                                        ; preds = %if.then277
  %189 = load i32, i32* %val, align 4, !dbg !4846
  %cmp285 = icmp eq i32 %189, 16, !dbg !4848
  br i1 %cmp285, label %if.then287, label %if.else312, !dbg !4849

if.then287:                                       ; preds = %if.end284
  %190 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4850
  %cache_avail288 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %190, i32 0, i32 1, !dbg !4850
  %191 = load i32, i32* %cache_avail288, align 8, !dbg !4850
  %cmp289 = icmp sge i32 %191, 3, !dbg !4850
  br i1 %cmp289, label %if.end301, label %lor.lhs.false291, !dbg !4850

lor.lhs.false291:                                 ; preds = %if.then287
  %192 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4853
  %193 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4853
  %call292 = call i32 @rar_br_fillup(%struct.archive_read* %192, %struct.rar_br* %193), !dbg !4853
  %tobool293 = icmp ne i32 %call292, 0, !dbg !4853
  br i1 %tobool293, label %if.end301, label %lor.lhs.false294, !dbg !4853

lor.lhs.false294:                                 ; preds = %lor.lhs.false291
  %194 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4855
  %cache_avail295 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %194, i32 0, i32 1, !dbg !4855
  %195 = load i32, i32* %cache_avail295, align 8, !dbg !4855
  %cmp296 = icmp sge i32 %195, 3, !dbg !4855
  br i1 %cmp296, label %if.end301, label %if.then298, !dbg !4857

if.then298:                                       ; preds = %lor.lhs.false294
  %tree299 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4858
  %196 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree299, align 8, !dbg !4858
  %197 = bitcast %struct.huffman_tree_node* %196 to i8*, !dbg !4860
  call void @free(i8* %197) #8, !dbg !4861
  %table300 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4862
  %198 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table300, align 8, !dbg !4862
  %199 = bitcast %struct.huffman_table_entry* %198 to i8*, !dbg !4863
  call void @free(i8* %199) #8, !dbg !4864
  br label %truncated_data, !dbg !4865

if.end301:                                        ; preds = %lor.lhs.false294, %lor.lhs.false291, %if.then287
  %200 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4866
  %cache_buffer302 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %200, i32 0, i32 0, !dbg !4866
  %201 = load i64, i64* %cache_buffer302, align 8, !dbg !4866
  %202 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4866
  %cache_avail303 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %202, i32 0, i32 1, !dbg !4866
  %203 = load i32, i32* %cache_avail303, align 8, !dbg !4866
  %sub304 = sub nsw i32 %203, 3, !dbg !4866
  %sh_prom305 = zext i32 %sub304 to i64, !dbg !4866
  %shr306 = lshr i64 %201, %sh_prom305, !dbg !4866
  %conv307 = trunc i64 %shr306 to i32, !dbg !4866
  %204 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 3), align 4, !dbg !4866
  %and308 = and i32 %conv307, %204, !dbg !4866
  %add309 = add i32 %and308, 3, !dbg !4867
  store i32 %add309, i32* %n, align 4, !dbg !4868
  %205 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4869
  %cache_avail310 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %205, i32 0, i32 1, !dbg !4869
  %206 = load i32, i32* %cache_avail310, align 8, !dbg !4869
  %sub311 = sub nsw i32 %206, 3, !dbg !4869
  store i32 %sub311, i32* %cache_avail310, align 8, !dbg !4869
  br label %if.end337, !dbg !4870

if.else312:                                       ; preds = %if.end284
  %207 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4871
  %cache_avail313 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %207, i32 0, i32 1, !dbg !4871
  %208 = load i32, i32* %cache_avail313, align 8, !dbg !4871
  %cmp314 = icmp sge i32 %208, 7, !dbg !4871
  br i1 %cmp314, label %if.end326, label %lor.lhs.false316, !dbg !4871

lor.lhs.false316:                                 ; preds = %if.else312
  %209 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4874
  %210 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4874
  %call317 = call i32 @rar_br_fillup(%struct.archive_read* %209, %struct.rar_br* %210), !dbg !4874
  %tobool318 = icmp ne i32 %call317, 0, !dbg !4874
  br i1 %tobool318, label %if.end326, label %lor.lhs.false319, !dbg !4874

lor.lhs.false319:                                 ; preds = %lor.lhs.false316
  %211 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4876
  %cache_avail320 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %211, i32 0, i32 1, !dbg !4876
  %212 = load i32, i32* %cache_avail320, align 8, !dbg !4876
  %cmp321 = icmp sge i32 %212, 7, !dbg !4876
  br i1 %cmp321, label %if.end326, label %if.then323, !dbg !4878

if.then323:                                       ; preds = %lor.lhs.false319
  %tree324 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4879
  %213 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree324, align 8, !dbg !4879
  %214 = bitcast %struct.huffman_tree_node* %213 to i8*, !dbg !4881
  call void @free(i8* %214) #8, !dbg !4882
  %table325 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4883
  %215 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table325, align 8, !dbg !4883
  %216 = bitcast %struct.huffman_table_entry* %215 to i8*, !dbg !4884
  call void @free(i8* %216) #8, !dbg !4885
  br label %truncated_data, !dbg !4886

if.end326:                                        ; preds = %lor.lhs.false319, %lor.lhs.false316, %if.else312
  %217 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4887
  %cache_buffer327 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %217, i32 0, i32 0, !dbg !4887
  %218 = load i64, i64* %cache_buffer327, align 8, !dbg !4887
  %219 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4887
  %cache_avail328 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %219, i32 0, i32 1, !dbg !4887
  %220 = load i32, i32* %cache_avail328, align 8, !dbg !4887
  %sub329 = sub nsw i32 %220, 7, !dbg !4887
  %sh_prom330 = zext i32 %sub329 to i64, !dbg !4887
  %shr331 = lshr i64 %218, %sh_prom330, !dbg !4887
  %conv332 = trunc i64 %shr331 to i32, !dbg !4887
  %221 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 7), align 4, !dbg !4887
  %and333 = and i32 %conv332, %221, !dbg !4887
  %add334 = add i32 %and333, 11, !dbg !4888
  store i32 %add334, i32* %n, align 4, !dbg !4889
  %222 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4890
  %cache_avail335 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %222, i32 0, i32 1, !dbg !4890
  %223 = load i32, i32* %cache_avail335, align 8, !dbg !4890
  %sub336 = sub nsw i32 %223, 7, !dbg !4890
  store i32 %sub336, i32* %cache_avail335, align 8, !dbg !4890
  br label %if.end337

if.end337:                                        ; preds = %if.end326, %if.end301
  store i32 0, i32* %j, align 4, !dbg !4891
  br label %for.cond338, !dbg !4893

for.cond338:                                      ; preds = %for.inc354, %if.end337
  %224 = load i32, i32* %j, align 4, !dbg !4894
  %225 = load i32, i32* %n, align 4, !dbg !4897
  %cmp339 = icmp slt i32 %224, %225, !dbg !4898
  br i1 %cmp339, label %land.rhs341, label %land.end344, !dbg !4899

land.rhs341:                                      ; preds = %for.cond338
  %226 = load i32, i32* %i, align 4, !dbg !4900
  %cmp342 = icmp slt i32 %226, 404, !dbg !4902
  br label %land.end344

land.end344:                                      ; preds = %land.rhs341, %for.cond338
  %227 = phi i1 [ false, %for.cond338 ], [ %cmp342, %land.rhs341 ]
  br i1 %227, label %for.body345, label %for.end356, !dbg !4903

for.body345:                                      ; preds = %land.end344
  %228 = load i32, i32* %i, align 4, !dbg !4905
  %sub346 = sub nsw i32 %228, 1, !dbg !4907
  %idxprom347 = sext i32 %sub346 to i64, !dbg !4908
  %229 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4908
  %lengthtable348 = getelementptr inbounds %struct.rar, %struct.rar* %229, i32 0, i32 46, !dbg !4909
  %arrayidx349 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable348, i64 0, i64 %idxprom347, !dbg !4908
  %230 = load i8, i8* %arrayidx349, align 1, !dbg !4908
  %231 = load i32, i32* %i, align 4, !dbg !4910
  %idxprom350 = sext i32 %231 to i64, !dbg !4911
  %232 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4911
  %lengthtable351 = getelementptr inbounds %struct.rar, %struct.rar* %232, i32 0, i32 46, !dbg !4912
  %arrayidx352 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable351, i64 0, i64 %idxprom350, !dbg !4911
  store i8 %230, i8* %arrayidx352, align 1, !dbg !4913
  %233 = load i32, i32* %i, align 4, !dbg !4914
  %inc353 = add nsw i32 %233, 1, !dbg !4914
  store i32 %inc353, i32* %i, align 4, !dbg !4914
  br label %for.inc354, !dbg !4915

for.inc354:                                       ; preds = %for.body345
  %234 = load i32, i32* %j, align 4, !dbg !4916
  %inc355 = add nsw i32 %234, 1, !dbg !4916
  store i32 %inc355, i32* %j, align 4, !dbg !4916
  br label %for.cond338, !dbg !4918

for.end356:                                       ; preds = %land.end344
  br label %if.end426, !dbg !4919

if.else357:                                       ; preds = %if.else274
  %235 = load i32, i32* %val, align 4, !dbg !4920
  %cmp358 = icmp eq i32 %235, 18, !dbg !4923
  br i1 %cmp358, label %if.then360, label %if.else385, !dbg !4924

if.then360:                                       ; preds = %if.else357
  %236 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4925
  %cache_avail361 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %236, i32 0, i32 1, !dbg !4925
  %237 = load i32, i32* %cache_avail361, align 8, !dbg !4925
  %cmp362 = icmp sge i32 %237, 3, !dbg !4925
  br i1 %cmp362, label %if.end374, label %lor.lhs.false364, !dbg !4925

lor.lhs.false364:                                 ; preds = %if.then360
  %238 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4928
  %239 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4928
  %call365 = call i32 @rar_br_fillup(%struct.archive_read* %238, %struct.rar_br* %239), !dbg !4928
  %tobool366 = icmp ne i32 %call365, 0, !dbg !4928
  br i1 %tobool366, label %if.end374, label %lor.lhs.false367, !dbg !4928

lor.lhs.false367:                                 ; preds = %lor.lhs.false364
  %240 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4930
  %cache_avail368 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %240, i32 0, i32 1, !dbg !4930
  %241 = load i32, i32* %cache_avail368, align 8, !dbg !4930
  %cmp369 = icmp sge i32 %241, 3, !dbg !4930
  br i1 %cmp369, label %if.end374, label %if.then371, !dbg !4932

if.then371:                                       ; preds = %lor.lhs.false367
  %tree372 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4933
  %242 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree372, align 8, !dbg !4933
  %243 = bitcast %struct.huffman_tree_node* %242 to i8*, !dbg !4935
  call void @free(i8* %243) #8, !dbg !4936
  %table373 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4937
  %244 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table373, align 8, !dbg !4937
  %245 = bitcast %struct.huffman_table_entry* %244 to i8*, !dbg !4938
  call void @free(i8* %245) #8, !dbg !4939
  br label %truncated_data, !dbg !4940

if.end374:                                        ; preds = %lor.lhs.false367, %lor.lhs.false364, %if.then360
  %246 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4941
  %cache_buffer375 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %246, i32 0, i32 0, !dbg !4941
  %247 = load i64, i64* %cache_buffer375, align 8, !dbg !4941
  %248 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4941
  %cache_avail376 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %248, i32 0, i32 1, !dbg !4941
  %249 = load i32, i32* %cache_avail376, align 8, !dbg !4941
  %sub377 = sub nsw i32 %249, 3, !dbg !4941
  %sh_prom378 = zext i32 %sub377 to i64, !dbg !4941
  %shr379 = lshr i64 %247, %sh_prom378, !dbg !4941
  %conv380 = trunc i64 %shr379 to i32, !dbg !4941
  %250 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 3), align 4, !dbg !4941
  %and381 = and i32 %conv380, %250, !dbg !4941
  %add382 = add i32 %and381, 3, !dbg !4942
  store i32 %add382, i32* %n, align 4, !dbg !4943
  %251 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4944
  %cache_avail383 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %251, i32 0, i32 1, !dbg !4944
  %252 = load i32, i32* %cache_avail383, align 8, !dbg !4944
  %sub384 = sub nsw i32 %252, 3, !dbg !4944
  store i32 %sub384, i32* %cache_avail383, align 8, !dbg !4944
  br label %if.end410, !dbg !4945

if.else385:                                       ; preds = %if.else357
  %253 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4946
  %cache_avail386 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %253, i32 0, i32 1, !dbg !4946
  %254 = load i32, i32* %cache_avail386, align 8, !dbg !4946
  %cmp387 = icmp sge i32 %254, 7, !dbg !4946
  br i1 %cmp387, label %if.end399, label %lor.lhs.false389, !dbg !4946

lor.lhs.false389:                                 ; preds = %if.else385
  %255 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4949
  %256 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4949
  %call390 = call i32 @rar_br_fillup(%struct.archive_read* %255, %struct.rar_br* %256), !dbg !4949
  %tobool391 = icmp ne i32 %call390, 0, !dbg !4949
  br i1 %tobool391, label %if.end399, label %lor.lhs.false392, !dbg !4949

lor.lhs.false392:                                 ; preds = %lor.lhs.false389
  %257 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4951
  %cache_avail393 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %257, i32 0, i32 1, !dbg !4951
  %258 = load i32, i32* %cache_avail393, align 8, !dbg !4951
  %cmp394 = icmp sge i32 %258, 7, !dbg !4951
  br i1 %cmp394, label %if.end399, label %if.then396, !dbg !4953

if.then396:                                       ; preds = %lor.lhs.false392
  %tree397 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4954
  %259 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree397, align 8, !dbg !4954
  %260 = bitcast %struct.huffman_tree_node* %259 to i8*, !dbg !4956
  call void @free(i8* %260) #8, !dbg !4957
  %table398 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4958
  %261 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table398, align 8, !dbg !4958
  %262 = bitcast %struct.huffman_table_entry* %261 to i8*, !dbg !4959
  call void @free(i8* %262) #8, !dbg !4960
  br label %truncated_data, !dbg !4961

if.end399:                                        ; preds = %lor.lhs.false392, %lor.lhs.false389, %if.else385
  %263 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4962
  %cache_buffer400 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %263, i32 0, i32 0, !dbg !4962
  %264 = load i64, i64* %cache_buffer400, align 8, !dbg !4962
  %265 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4962
  %cache_avail401 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %265, i32 0, i32 1, !dbg !4962
  %266 = load i32, i32* %cache_avail401, align 8, !dbg !4962
  %sub402 = sub nsw i32 %266, 7, !dbg !4962
  %sh_prom403 = zext i32 %sub402 to i64, !dbg !4962
  %shr404 = lshr i64 %264, %sh_prom403, !dbg !4962
  %conv405 = trunc i64 %shr404 to i32, !dbg !4962
  %267 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 7), align 4, !dbg !4962
  %and406 = and i32 %conv405, %267, !dbg !4962
  %add407 = add i32 %and406, 11, !dbg !4963
  store i32 %add407, i32* %n, align 4, !dbg !4964
  %268 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !4965
  %cache_avail408 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %268, i32 0, i32 1, !dbg !4965
  %269 = load i32, i32* %cache_avail408, align 8, !dbg !4965
  %sub409 = sub nsw i32 %269, 7, !dbg !4965
  store i32 %sub409, i32* %cache_avail408, align 8, !dbg !4965
  br label %if.end410

if.end410:                                        ; preds = %if.end399, %if.end374
  store i32 0, i32* %j, align 4, !dbg !4966
  br label %for.cond411, !dbg !4968

for.cond411:                                      ; preds = %for.inc423, %if.end410
  %270 = load i32, i32* %j, align 4, !dbg !4969
  %271 = load i32, i32* %n, align 4, !dbg !4972
  %cmp412 = icmp slt i32 %270, %271, !dbg !4973
  br i1 %cmp412, label %land.rhs414, label %land.end417, !dbg !4974

land.rhs414:                                      ; preds = %for.cond411
  %272 = load i32, i32* %i, align 4, !dbg !4975
  %cmp415 = icmp slt i32 %272, 404, !dbg !4977
  br label %land.end417

land.end417:                                      ; preds = %land.rhs414, %for.cond411
  %273 = phi i1 [ false, %for.cond411 ], [ %cmp415, %land.rhs414 ]
  br i1 %273, label %for.body418, label %for.end425, !dbg !4978

for.body418:                                      ; preds = %land.end417
  %274 = load i32, i32* %i, align 4, !dbg !4980
  %inc419 = add nsw i32 %274, 1, !dbg !4980
  store i32 %inc419, i32* %i, align 4, !dbg !4980
  %idxprom420 = sext i32 %274 to i64, !dbg !4981
  %275 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4981
  %lengthtable421 = getelementptr inbounds %struct.rar, %struct.rar* %275, i32 0, i32 46, !dbg !4982
  %arrayidx422 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable421, i64 0, i64 %idxprom420, !dbg !4981
  store i8 0, i8* %arrayidx422, align 1, !dbg !4983
  br label %for.inc423, !dbg !4981

for.inc423:                                       ; preds = %for.body418
  %276 = load i32, i32* %j, align 4, !dbg !4984
  %inc424 = add nsw i32 %276, 1, !dbg !4984
  store i32 %inc424, i32* %j, align 4, !dbg !4984
  br label %for.cond411, !dbg !4986

for.end425:                                       ; preds = %land.end417
  br label %if.end426

if.end426:                                        ; preds = %for.end425, %for.end356
  br label %if.end427

if.end427:                                        ; preds = %if.end426, %if.then262
  br label %for.cond249, !dbg !4987

for.end428:                                       ; preds = %for.cond249
  %tree429 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 0, !dbg !4989
  %277 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree429, align 8, !dbg !4989
  %278 = bitcast %struct.huffman_tree_node* %277 to i8*, !dbg !4990
  call void @free(i8* %278) #8, !dbg !4991
  %table430 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %precode, i32 0, i32 6, !dbg !4992
  %279 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table430, align 8, !dbg !4992
  %280 = bitcast %struct.huffman_table_entry* %279 to i8*, !dbg !4993
  call void @free(i8* %280) #8, !dbg !4994
  %281 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4995
  %282 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4996
  %maincode = getelementptr inbounds %struct.rar, %struct.rar* %282, i32 0, i32 42, !dbg !4997
  %283 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !4998
  %lengthtable431 = getelementptr inbounds %struct.rar, %struct.rar* %283, i32 0, i32 46, !dbg !4999
  %arrayidx432 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable431, i64 0, i64 0, !dbg !4998
  %call433 = call i32 @create_code(%struct.archive_read* %281, %struct.huffman_code* %maincode, i8* %arrayidx432, i32 299, i8 signext 15), !dbg !5000
  store i32 %call433, i32* %r, align 4, !dbg !5001
  %284 = load i32, i32* %r, align 4, !dbg !5002
  %cmp434 = icmp ne i32 %284, 0, !dbg !5004
  br i1 %cmp434, label %if.then436, label %if.end437, !dbg !5005

if.then436:                                       ; preds = %for.end428
  %285 = load i32, i32* %r, align 4, !dbg !5006
  store i32 %285, i32* %retval, align 4, !dbg !5007
  br label %return, !dbg !5007

if.end437:                                        ; preds = %for.end428
  %286 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5008
  %287 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5009
  %offsetcode = getelementptr inbounds %struct.rar, %struct.rar* %287, i32 0, i32 43, !dbg !5010
  %288 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5011
  %lengthtable438 = getelementptr inbounds %struct.rar, %struct.rar* %288, i32 0, i32 46, !dbg !5012
  %arrayidx439 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable438, i64 0, i64 299, !dbg !5011
  %call440 = call i32 @create_code(%struct.archive_read* %286, %struct.huffman_code* %offsetcode, i8* %arrayidx439, i32 60, i8 signext 15), !dbg !5013
  store i32 %call440, i32* %r, align 4, !dbg !5014
  %289 = load i32, i32* %r, align 4, !dbg !5015
  %cmp441 = icmp ne i32 %289, 0, !dbg !5017
  br i1 %cmp441, label %if.then443, label %if.end444, !dbg !5018

if.then443:                                       ; preds = %if.end437
  %290 = load i32, i32* %r, align 4, !dbg !5019
  store i32 %290, i32* %retval, align 4, !dbg !5020
  br label %return, !dbg !5020

if.end444:                                        ; preds = %if.end437
  %291 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5021
  %292 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5022
  %lowoffsetcode = getelementptr inbounds %struct.rar, %struct.rar* %292, i32 0, i32 44, !dbg !5023
  %293 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5024
  %lengthtable445 = getelementptr inbounds %struct.rar, %struct.rar* %293, i32 0, i32 46, !dbg !5025
  %arrayidx446 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable445, i64 0, i64 359, !dbg !5024
  %call447 = call i32 @create_code(%struct.archive_read* %291, %struct.huffman_code* %lowoffsetcode, i8* %arrayidx446, i32 17, i8 signext 15), !dbg !5026
  store i32 %call447, i32* %r, align 4, !dbg !5027
  %294 = load i32, i32* %r, align 4, !dbg !5028
  %cmp448 = icmp ne i32 %294, 0, !dbg !5030
  br i1 %cmp448, label %if.then450, label %if.end451, !dbg !5031

if.then450:                                       ; preds = %if.end444
  %295 = load i32, i32* %r, align 4, !dbg !5032
  store i32 %295, i32* %retval, align 4, !dbg !5033
  br label %return, !dbg !5033

if.end451:                                        ; preds = %if.end444
  %296 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5034
  %297 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5035
  %lengthcode = getelementptr inbounds %struct.rar, %struct.rar* %297, i32 0, i32 45, !dbg !5036
  %298 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5037
  %lengthtable452 = getelementptr inbounds %struct.rar, %struct.rar* %298, i32 0, i32 46, !dbg !5038
  %arrayidx453 = getelementptr inbounds [404 x i8], [404 x i8]* %lengthtable452, i64 0, i64 376, !dbg !5037
  %call454 = call i32 @create_code(%struct.archive_read* %296, %struct.huffman_code* %lengthcode, i8* %arrayidx453, i32 28, i8 signext 15), !dbg !5039
  store i32 %call454, i32* %r, align 4, !dbg !5040
  %299 = load i32, i32* %r, align 4, !dbg !5041
  %cmp455 = icmp ne i32 %299, 0, !dbg !5043
  br i1 %cmp455, label %if.then457, label %if.end458, !dbg !5044

if.then457:                                       ; preds = %if.end451
  %300 = load i32, i32* %r, align 4, !dbg !5045
  store i32 %300, i32* %retval, align 4, !dbg !5046
  br label %return, !dbg !5046

if.end458:                                        ; preds = %if.end451
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.end145
  %301 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5047
  %dictionary_size460 = getelementptr inbounds %struct.rar, %struct.rar* %301, i32 0, i32 33, !dbg !5049
  %302 = load i32, i32* %dictionary_size460, align 8, !dbg !5049
  %tobool461 = icmp ne i32 %302, 0, !dbg !5047
  br i1 %tobool461, label %lor.lhs.false462, label %if.then464, !dbg !5050

lor.lhs.false462:                                 ; preds = %if.end459
  %303 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5051
  %lzss = getelementptr inbounds %struct.rar, %struct.rar* %303, i32 0, i32 47, !dbg !5053
  %window = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss, i32 0, i32 0, !dbg !5054
  %304 = load i8*, i8** %window, align 8, !dbg !5054
  %tobool463 = icmp ne i8* %304, null, !dbg !5051
  br i1 %tobool463, label %if.end493, label %if.then464, !dbg !5055

if.then464:                                       ; preds = %lor.lhs.false462, %if.end459
  call void @llvm.dbg.declare(metadata i8** %new_window, metadata !5056, metadata !677), !dbg !5058
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !5059, metadata !677), !dbg !5060
  %305 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5061
  %unp_size = getelementptr inbounds %struct.rar, %struct.rar* %305, i32 0, i32 8, !dbg !5063
  %306 = load i64, i64* %unp_size, align 8, !dbg !5063
  %cmp465 = icmp sge i64 %306, 4194304, !dbg !5064
  br i1 %cmp465, label %if.then467, label %if.else468, !dbg !5065

if.then467:                                       ; preds = %if.then464
  store i32 4194304, i32* %new_size, align 4, !dbg !5066
  br label %if.end473, !dbg !5067

if.else468:                                       ; preds = %if.then464
  %307 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5068
  %unp_size469 = getelementptr inbounds %struct.rar, %struct.rar* %307, i32 0, i32 8, !dbg !5069
  %308 = load i64, i64* %unp_size469, align 8, !dbg !5069
  %conv470 = trunc i64 %308 to i32, !dbg !5070
  %call471 = call i32 @rar_fls(i32 %conv470), !dbg !5071
  %shl472 = shl i32 %call471, 1, !dbg !5072
  store i32 %shl472, i32* %new_size, align 4, !dbg !5073
  br label %if.end473

if.end473:                                        ; preds = %if.else468, %if.then467
  %309 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5074
  %lzss474 = getelementptr inbounds %struct.rar, %struct.rar* %309, i32 0, i32 47, !dbg !5075
  %window475 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss474, i32 0, i32 0, !dbg !5076
  %310 = load i8*, i8** %window475, align 8, !dbg !5076
  %311 = load i32, i32* %new_size, align 4, !dbg !5077
  %conv476 = zext i32 %311 to i64, !dbg !5077
  %call477 = call i8* @realloc(i8* %310, i64 %conv476) #8, !dbg !5078
  store i8* %call477, i8** %new_window, align 8, !dbg !5079
  %312 = load i8*, i8** %new_window, align 8, !dbg !5080
  %cmp478 = icmp eq i8* %312, null, !dbg !5082
  br i1 %cmp478, label %if.then480, label %if.end482, !dbg !5083

if.then480:                                       ; preds = %if.end473
  %313 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5084
  %archive481 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %313, i32 0, i32 0, !dbg !5086
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive481, i32 12, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0)), !dbg !5087
  store i32 -30, i32* %retval, align 4, !dbg !5088
  br label %return, !dbg !5088

if.end482:                                        ; preds = %if.end473
  %314 = load i8*, i8** %new_window, align 8, !dbg !5089
  %315 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5090
  %lzss483 = getelementptr inbounds %struct.rar, %struct.rar* %315, i32 0, i32 47, !dbg !5091
  %window484 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss483, i32 0, i32 0, !dbg !5092
  store i8* %314, i8** %window484, align 8, !dbg !5093
  %316 = load i32, i32* %new_size, align 4, !dbg !5094
  %317 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5095
  %dictionary_size485 = getelementptr inbounds %struct.rar, %struct.rar* %317, i32 0, i32 33, !dbg !5096
  store i32 %316, i32* %dictionary_size485, align 8, !dbg !5097
  %318 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5098
  %lzss486 = getelementptr inbounds %struct.rar, %struct.rar* %318, i32 0, i32 47, !dbg !5099
  %window487 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss486, i32 0, i32 0, !dbg !5100
  %319 = load i8*, i8** %window487, align 8, !dbg !5100
  %320 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5101
  %dictionary_size488 = getelementptr inbounds %struct.rar, %struct.rar* %320, i32 0, i32 33, !dbg !5102
  %321 = load i32, i32* %dictionary_size488, align 8, !dbg !5102
  %conv489 = zext i32 %321 to i64, !dbg !5101
  call void @llvm.memset.p0i8.i64(i8* %319, i8 0, i64 %conv489, i32 1, i1 false), !dbg !5103
  %322 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5104
  %dictionary_size490 = getelementptr inbounds %struct.rar, %struct.rar* %322, i32 0, i32 33, !dbg !5105
  %323 = load i32, i32* %dictionary_size490, align 8, !dbg !5105
  %sub491 = sub i32 %323, 1, !dbg !5106
  %324 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5107
  %lzss492 = getelementptr inbounds %struct.rar, %struct.rar* %324, i32 0, i32 47, !dbg !5108
  %mask = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss492, i32 0, i32 1, !dbg !5109
  store i32 %sub491, i32* %mask, align 8, !dbg !5110
  br label %if.end493, !dbg !5111

if.end493:                                        ; preds = %if.end482, %lor.lhs.false462
  %325 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5112
  %start_new_table = getelementptr inbounds %struct.rar, %struct.rar* %325, i32 0, i32 55, !dbg !5113
  store i8 0, i8* %start_new_table, align 8, !dbg !5114
  store i32 0, i32* %retval, align 4, !dbg !5115
  br label %return, !dbg !5115

truncated_data:                                   ; preds = %if.then396, %if.then371, %if.then323, %if.then298, %if.then214, %if.then185, %if.then159, %if.then77, %if.then51, %if.then25, %if.then
  %326 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5116
  %archive494 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %326, i32 0, i32 0, !dbg !5117
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive494, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !5118
  %327 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5119
  %valid = getelementptr inbounds %struct.rar, %struct.rar* %327, i32 0, i32 29, !dbg !5120
  store i8 0, i8* %valid, align 8, !dbg !5121
  store i32 -30, i32* %retval, align 4, !dbg !5122
  br label %return, !dbg !5122

return:                                           ; preds = %truncated_data, %if.end493, %if.then480, %if.then457, %if.then450, %if.then443, %if.then436, %if.then280, %if.then256, %if.then247, %if.then142, %if.then136, %if.then129, %if.then123, %if.then116, %if.then105
  %328 = load i32, i32* %retval, align 4, !dbg !5123
  ret i32 %328, !dbg !5123
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @lzss_emit_literal(%struct.rar* %rar, i8 zeroext %literal) #5 !dbg !619 {
entry:
  %rar.addr = alloca %struct.rar*, align 8
  %literal.addr = alloca i8, align 1
  store %struct.rar* %rar, %struct.rar** %rar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rar** %rar.addr, metadata !5124, metadata !677), !dbg !5125
  store i8 %literal, i8* %literal.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %literal.addr, metadata !5126, metadata !677), !dbg !5127
  %0 = load i8, i8* %literal.addr, align 1, !dbg !5128
  %1 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5129
  %lzss = getelementptr inbounds %struct.rar, %struct.rar* %1, i32 0, i32 47, !dbg !5130
  %call = call i8* @lzss_current_pointer(%struct.lzss* %lzss), !dbg !5131
  store i8 %0, i8* %call, align 1, !dbg !5132
  %2 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5133
  %lzss1 = getelementptr inbounds %struct.rar, %struct.rar* %2, i32 0, i32 47, !dbg !5134
  %position = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss1, i32 0, i32 2, !dbg !5135
  %3 = load i64, i64* %position, align 8, !dbg !5136
  %inc = add nsw i64 %3, 1, !dbg !5136
  store i64 %inc, i64* %position, align 8, !dbg !5136
  ret void, !dbg !5137
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @lzss_emit_match(%struct.rar* %rar, i32 %offset, i32 %length) #5 !dbg !630 {
entry:
  %rar.addr = alloca %struct.rar*, align 8
  %offset.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %dstoffs = alloca i32, align 4
  %srcoffs = alloca i32, align 4
  %l = alloca i32, align 4
  %li = alloca i32, align 4
  %remaining = alloca i32, align 4
  %d = alloca i8*, align 8
  %s = alloca i8*, align 8
  store %struct.rar* %rar, %struct.rar** %rar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rar** %rar.addr, metadata !5138, metadata !677), !dbg !5139
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5140, metadata !677), !dbg !5141
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !5142, metadata !677), !dbg !5143
  call void @llvm.dbg.declare(metadata i32* %dstoffs, metadata !5144, metadata !677), !dbg !5145
  %0 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5146
  %lzss = getelementptr inbounds %struct.rar, %struct.rar* %0, i32 0, i32 47, !dbg !5147
  %call = call i32 @lzss_current_offset(%struct.lzss* %lzss), !dbg !5148
  store i32 %call, i32* %dstoffs, align 4, !dbg !5145
  call void @llvm.dbg.declare(metadata i32* %srcoffs, metadata !5149, metadata !677), !dbg !5150
  %1 = load i32, i32* %dstoffs, align 4, !dbg !5151
  %2 = load i32, i32* %offset.addr, align 4, !dbg !5152
  %sub = sub nsw i32 %1, %2, !dbg !5153
  %3 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5154
  %lzss1 = getelementptr inbounds %struct.rar, %struct.rar* %3, i32 0, i32 47, !dbg !5155
  %call2 = call i32 @lzss_mask(%struct.lzss* %lzss1), !dbg !5156
  %and = and i32 %sub, %call2, !dbg !5157
  store i32 %and, i32* %srcoffs, align 4, !dbg !5150
  call void @llvm.dbg.declare(metadata i32* %l, metadata !5158, metadata !677), !dbg !5159
  call void @llvm.dbg.declare(metadata i32* %li, metadata !5160, metadata !677), !dbg !5161
  call void @llvm.dbg.declare(metadata i32* %remaining, metadata !5162, metadata !677), !dbg !5163
  call void @llvm.dbg.declare(metadata i8** %d, metadata !5164, metadata !677), !dbg !5165
  call void @llvm.dbg.declare(metadata i8** %s, metadata !5166, metadata !677), !dbg !5167
  %4 = load i32, i32* %length.addr, align 4, !dbg !5168
  store i32 %4, i32* %remaining, align 4, !dbg !5169
  br label %while.cond, !dbg !5170

while.cond:                                       ; preds = %if.end38, %entry
  %5 = load i32, i32* %remaining, align 4, !dbg !5171
  %cmp = icmp sgt i32 %5, 0, !dbg !5173
  br i1 %cmp, label %while.body, label %while.end, !dbg !5174

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %remaining, align 4, !dbg !5175
  store i32 %6, i32* %l, align 4, !dbg !5177
  %7 = load i32, i32* %dstoffs, align 4, !dbg !5178
  %8 = load i32, i32* %srcoffs, align 4, !dbg !5180
  %cmp3 = icmp sgt i32 %7, %8, !dbg !5181
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5182

if.then:                                          ; preds = %while.body
  %9 = load i32, i32* %l, align 4, !dbg !5183
  %10 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5186
  %lzss4 = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 47, !dbg !5187
  %call5 = call i32 @lzss_size(%struct.lzss* %lzss4), !dbg !5188
  %11 = load i32, i32* %dstoffs, align 4, !dbg !5189
  %sub6 = sub nsw i32 %call5, %11, !dbg !5190
  %cmp7 = icmp sgt i32 %9, %sub6, !dbg !5191
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !5192

if.then8:                                         ; preds = %if.then
  %12 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5193
  %lzss9 = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 47, !dbg !5194
  %call10 = call i32 @lzss_size(%struct.lzss* %lzss9), !dbg !5195
  %13 = load i32, i32* %dstoffs, align 4, !dbg !5196
  %sub11 = sub nsw i32 %call10, %13, !dbg !5197
  store i32 %sub11, i32* %l, align 4, !dbg !5198
  br label %if.end, !dbg !5199

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end21, !dbg !5200

if.else:                                          ; preds = %while.body
  %14 = load i32, i32* %l, align 4, !dbg !5201
  %15 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5204
  %lzss12 = getelementptr inbounds %struct.rar, %struct.rar* %15, i32 0, i32 47, !dbg !5205
  %call13 = call i32 @lzss_size(%struct.lzss* %lzss12), !dbg !5206
  %16 = load i32, i32* %srcoffs, align 4, !dbg !5207
  %sub14 = sub nsw i32 %call13, %16, !dbg !5208
  %cmp15 = icmp sgt i32 %14, %sub14, !dbg !5209
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !5210

if.then16:                                        ; preds = %if.else
  %17 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5211
  %lzss17 = getelementptr inbounds %struct.rar, %struct.rar* %17, i32 0, i32 47, !dbg !5212
  %call18 = call i32 @lzss_size(%struct.lzss* %lzss17), !dbg !5213
  %18 = load i32, i32* %srcoffs, align 4, !dbg !5214
  %sub19 = sub nsw i32 %call18, %18, !dbg !5215
  store i32 %sub19, i32* %l, align 4, !dbg !5216
  br label %if.end20, !dbg !5217

if.end20:                                         ; preds = %if.then16, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  %19 = load i32, i32* %dstoffs, align 4, !dbg !5218
  %idxprom = sext i32 %19 to i64, !dbg !5219
  %20 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5219
  %lzss22 = getelementptr inbounds %struct.rar, %struct.rar* %20, i32 0, i32 47, !dbg !5220
  %window = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss22, i32 0, i32 0, !dbg !5221
  %21 = load i8*, i8** %window, align 8, !dbg !5221
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %idxprom, !dbg !5219
  store i8* %arrayidx, i8** %d, align 8, !dbg !5222
  %22 = load i32, i32* %srcoffs, align 4, !dbg !5223
  %idxprom23 = sext i32 %22 to i64, !dbg !5224
  %23 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5224
  %lzss24 = getelementptr inbounds %struct.rar, %struct.rar* %23, i32 0, i32 47, !dbg !5225
  %window25 = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss24, i32 0, i32 0, !dbg !5226
  %24 = load i8*, i8** %window25, align 8, !dbg !5226
  %arrayidx26 = getelementptr inbounds i8, i8* %24, i64 %idxprom23, !dbg !5224
  store i8* %arrayidx26, i8** %s, align 8, !dbg !5227
  %25 = load i32, i32* %dstoffs, align 4, !dbg !5228
  %26 = load i32, i32* %l, align 4, !dbg !5230
  %add = add nsw i32 %25, %26, !dbg !5231
  %27 = load i32, i32* %srcoffs, align 4, !dbg !5232
  %cmp27 = icmp slt i32 %add, %27, !dbg !5233
  br i1 %cmp27, label %if.then30, label %lor.lhs.false, !dbg !5234

lor.lhs.false:                                    ; preds = %if.end21
  %28 = load i32, i32* %srcoffs, align 4, !dbg !5235
  %29 = load i32, i32* %l, align 4, !dbg !5237
  %add28 = add nsw i32 %28, %29, !dbg !5238
  %30 = load i32, i32* %dstoffs, align 4, !dbg !5239
  %cmp29 = icmp slt i32 %add28, %30, !dbg !5240
  br i1 %cmp29, label %if.then30, label %if.else31, !dbg !5241

if.then30:                                        ; preds = %lor.lhs.false, %if.end21
  %31 = load i8*, i8** %d, align 8, !dbg !5242
  %32 = load i8*, i8** %s, align 8, !dbg !5243
  %33 = load i32, i32* %l, align 4, !dbg !5244
  %conv = sext i32 %33 to i64, !dbg !5244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 %conv, i32 1, i1 false), !dbg !5245
  br label %if.end38, !dbg !5245

if.else31:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %li, align 4, !dbg !5246
  br label %for.cond, !dbg !5249

for.cond:                                         ; preds = %for.inc, %if.else31
  %34 = load i32, i32* %li, align 4, !dbg !5250
  %35 = load i32, i32* %l, align 4, !dbg !5253
  %cmp32 = icmp slt i32 %34, %35, !dbg !5254
  br i1 %cmp32, label %for.body, label %for.end, !dbg !5255

for.body:                                         ; preds = %for.cond
  %36 = load i32, i32* %li, align 4, !dbg !5256
  %idxprom34 = sext i32 %36 to i64, !dbg !5257
  %37 = load i8*, i8** %s, align 8, !dbg !5257
  %arrayidx35 = getelementptr inbounds i8, i8* %37, i64 %idxprom34, !dbg !5257
  %38 = load i8, i8* %arrayidx35, align 1, !dbg !5257
  %39 = load i32, i32* %li, align 4, !dbg !5258
  %idxprom36 = sext i32 %39 to i64, !dbg !5259
  %40 = load i8*, i8** %d, align 8, !dbg !5259
  %arrayidx37 = getelementptr inbounds i8, i8* %40, i64 %idxprom36, !dbg !5259
  store i8 %38, i8* %arrayidx37, align 1, !dbg !5260
  br label %for.inc, !dbg !5259

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %li, align 4, !dbg !5261
  %inc = add nsw i32 %41, 1, !dbg !5261
  store i32 %inc, i32* %li, align 4, !dbg !5261
  br label %for.cond, !dbg !5263

for.end:                                          ; preds = %for.cond
  br label %if.end38

if.end38:                                         ; preds = %for.end, %if.then30
  %42 = load i32, i32* %l, align 4, !dbg !5264
  %43 = load i32, i32* %remaining, align 4, !dbg !5265
  %sub39 = sub nsw i32 %43, %42, !dbg !5265
  store i32 %sub39, i32* %remaining, align 4, !dbg !5265
  %44 = load i32, i32* %dstoffs, align 4, !dbg !5266
  %45 = load i32, i32* %l, align 4, !dbg !5267
  %add40 = add nsw i32 %44, %45, !dbg !5268
  %46 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5269
  %lzss41 = getelementptr inbounds %struct.rar, %struct.rar* %46, i32 0, i32 47, !dbg !5270
  %call42 = call i32 @lzss_mask(%struct.lzss* %lzss41), !dbg !5271
  %and43 = and i32 %add40, %call42, !dbg !5272
  store i32 %and43, i32* %dstoffs, align 4, !dbg !5273
  %47 = load i32, i32* %srcoffs, align 4, !dbg !5274
  %48 = load i32, i32* %l, align 4, !dbg !5275
  %add44 = add nsw i32 %47, %48, !dbg !5276
  %49 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5277
  %lzss45 = getelementptr inbounds %struct.rar, %struct.rar* %49, i32 0, i32 47, !dbg !5278
  %call46 = call i32 @lzss_mask(%struct.lzss* %lzss45), !dbg !5279
  %and47 = and i32 %add44, %call46, !dbg !5280
  store i32 %and47, i32* %srcoffs, align 4, !dbg !5281
  br label %while.cond, !dbg !5282

while.end:                                        ; preds = %while.cond
  %50 = load i32, i32* %length.addr, align 4, !dbg !5284
  %conv48 = sext i32 %50 to i64, !dbg !5284
  %51 = load %struct.rar*, %struct.rar** %rar.addr, align 8, !dbg !5285
  %lzss49 = getelementptr inbounds %struct.rar, %struct.rar* %51, i32 0, i32 47, !dbg !5286
  %position = getelementptr inbounds %struct.lzss, %struct.lzss* %lzss49, i32 0, i32 2, !dbg !5287
  %52 = load i64, i64* %position, align 8, !dbg !5288
  %add50 = add nsw i64 %52, %conv48, !dbg !5288
  store i64 %add50, i64* %position, align 8, !dbg !5288
  ret void, !dbg !5289
}

; Function Attrs: nounwind uwtable
define internal i64 @expand(%struct.archive_read* %a, i64 %end) #0 !dbg !635 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %end.addr = alloca i64, align 8
  %symbol = alloca i32, align 4
  %offs = alloca i32, align 4
  %len = alloca i32, align 4
  %offsindex = alloca i32, align 4
  %lensymbol = alloca i32, align 4
  %i = alloca i32, align 4
  %offssymbol = alloca i32, align 4
  %lowoffsetsymbol = alloca i32, align 4
  %newfile = alloca i8, align 1
  %rar = alloca %struct.rar*, align 8
  %br = alloca %struct.rar_br*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5290, metadata !677), !dbg !5291
  store i64 %end, i64* %end.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !5292, metadata !677), !dbg !5293
  call void @llvm.dbg.declare(metadata i32* %symbol, metadata !5294, metadata !677), !dbg !5295
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !5296, metadata !677), !dbg !5297
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5298, metadata !677), !dbg !5299
  call void @llvm.dbg.declare(metadata i32* %offsindex, metadata !5300, metadata !677), !dbg !5301
  call void @llvm.dbg.declare(metadata i32* %lensymbol, metadata !5302, metadata !677), !dbg !5303
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5304, metadata !677), !dbg !5305
  call void @llvm.dbg.declare(metadata i32* %offssymbol, metadata !5306, metadata !677), !dbg !5307
  call void @llvm.dbg.declare(metadata i32* %lowoffsetsymbol, metadata !5308, metadata !677), !dbg !5309
  call void @llvm.dbg.declare(metadata i8* %newfile, metadata !5310, metadata !677), !dbg !5311
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !5312, metadata !677), !dbg !5313
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5314
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !5315
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !5315
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !5316
  %2 = load i8*, i8** %data, align 8, !dbg !5316
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !5317
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !5313
  call void @llvm.dbg.declare(metadata %struct.rar_br** %br, metadata !5318, metadata !677), !dbg !5319
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5320
  %br1 = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 68, !dbg !5321
  store %struct.rar_br* %br1, %struct.rar_br** %br, align 8, !dbg !5319
  %5 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5322
  %filterstart = getelementptr inbounds %struct.rar, %struct.rar* %5, i32 0, i32 54, !dbg !5324
  %6 = load i64, i64* %filterstart, align 8, !dbg !5324
  %7 = load i64, i64* %end.addr, align 8, !dbg !5325
  %cmp = icmp slt i64 %6, %7, !dbg !5326
  br i1 %cmp, label %if.then, label %if.end, !dbg !5327

if.then:                                          ; preds = %entry
  %8 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5328
  %filterstart2 = getelementptr inbounds %struct.rar, %struct.rar* %8, i32 0, i32 54, !dbg !5329
  %9 = load i64, i64* %filterstart2, align 8, !dbg !5329
  store i64 %9, i64* %end.addr, align 8, !dbg !5330
  br label %if.end, !dbg !5331

if.end:                                           ; preds = %if.then, %entry
  br label %while.body, !dbg !5332

while.body:                                       ; preds = %if.end, %if.then32, %if.end85, %if.then97, %if.end492
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5333
  %output_last_match = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 48, !dbg !5336
  %11 = load i8, i8* %output_last_match, align 8, !dbg !5336
  %conv = sext i8 %11 to i32, !dbg !5333
  %tobool = icmp ne i32 %conv, 0, !dbg !5333
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !5337

land.lhs.true:                                    ; preds = %while.body
  %12 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5338
  %lzss = getelementptr inbounds %struct.rar, %struct.rar* %12, i32 0, i32 47, !dbg !5339
  %call = call i64 @lzss_position(%struct.lzss* %lzss), !dbg !5340
  %13 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5341
  %lastlength = getelementptr inbounds %struct.rar, %struct.rar* %13, i32 0, i32 49, !dbg !5342
  %14 = load i32, i32* %lastlength, align 4, !dbg !5342
  %conv3 = zext i32 %14 to i64, !dbg !5341
  %add = add nsw i64 %call, %conv3, !dbg !5343
  %15 = load i64, i64* %end.addr, align 8, !dbg !5344
  %cmp4 = icmp sle i64 %add, %15, !dbg !5345
  br i1 %cmp4, label %if.then6, label %if.end9, !dbg !5346

if.then6:                                         ; preds = %land.lhs.true
  %16 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5348
  %17 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5350
  %lastoffset = getelementptr inbounds %struct.rar, %struct.rar* %17, i32 0, i32 50, !dbg !5351
  %18 = load i32, i32* %lastoffset, align 8, !dbg !5351
  %19 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5352
  %lastlength7 = getelementptr inbounds %struct.rar, %struct.rar* %19, i32 0, i32 49, !dbg !5353
  %20 = load i32, i32* %lastlength7, align 4, !dbg !5353
  call void @lzss_emit_match(%struct.rar* %16, i32 %18, i32 %20), !dbg !5354
  %21 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5355
  %output_last_match8 = getelementptr inbounds %struct.rar, %struct.rar* %21, i32 0, i32 48, !dbg !5356
  store i8 0, i8* %output_last_match8, align 8, !dbg !5357
  br label %if.end9, !dbg !5358

if.end9:                                          ; preds = %if.then6, %land.lhs.true, %while.body
  %22 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5359
  %is_ppmd_block = getelementptr inbounds %struct.rar, %struct.rar* %22, i32 0, i32 58, !dbg !5361
  %23 = load i8, i8* %is_ppmd_block, align 1, !dbg !5361
  %conv10 = sext i8 %23 to i32, !dbg !5359
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !5359
  br i1 %tobool11, label %if.then20, label %lor.lhs.false, !dbg !5362

lor.lhs.false:                                    ; preds = %if.end9
  %24 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5363
  %output_last_match12 = getelementptr inbounds %struct.rar, %struct.rar* %24, i32 0, i32 48, !dbg !5365
  %25 = load i8, i8* %output_last_match12, align 8, !dbg !5365
  %conv13 = sext i8 %25 to i32, !dbg !5363
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !5363
  br i1 %tobool14, label %if.then20, label %lor.lhs.false15, !dbg !5366

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %26 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5367
  %lzss16 = getelementptr inbounds %struct.rar, %struct.rar* %26, i32 0, i32 47, !dbg !5368
  %call17 = call i64 @lzss_position(%struct.lzss* %lzss16), !dbg !5369
  %27 = load i64, i64* %end.addr, align 8, !dbg !5370
  %cmp18 = icmp sge i64 %call17, %27, !dbg !5371
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !5372

if.then20:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.end9
  %28 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5374
  %lzss21 = getelementptr inbounds %struct.rar, %struct.rar* %28, i32 0, i32 47, !dbg !5375
  %call22 = call i64 @lzss_position(%struct.lzss* %lzss21), !dbg !5376
  store i64 %call22, i64* %retval, align 8, !dbg !5377
  br label %return, !dbg !5377

if.end23:                                         ; preds = %lor.lhs.false15
  %29 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5378
  %30 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5380
  %maincode = getelementptr inbounds %struct.rar, %struct.rar* %30, i32 0, i32 42, !dbg !5381
  %call24 = call i32 @read_next_symbol(%struct.archive_read* %29, %struct.huffman_code* %maincode), !dbg !5382
  store i32 %call24, i32* %symbol, align 4, !dbg !5383
  %cmp25 = icmp slt i32 %call24, 0, !dbg !5384
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !5385

if.then27:                                        ; preds = %if.end23
  store i64 -30, i64* %retval, align 8, !dbg !5386
  br label %return, !dbg !5386

if.end28:                                         ; preds = %if.end23
  %31 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5387
  %output_last_match29 = getelementptr inbounds %struct.rar, %struct.rar* %31, i32 0, i32 48, !dbg !5388
  store i8 0, i8* %output_last_match29, align 8, !dbg !5389
  %32 = load i32, i32* %symbol, align 4, !dbg !5390
  %cmp30 = icmp slt i32 %32, 256, !dbg !5392
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !5393

if.then32:                                        ; preds = %if.end28
  %33 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5394
  %34 = load i32, i32* %symbol, align 4, !dbg !5396
  %conv33 = trunc i32 %34 to i8, !dbg !5396
  call void @lzss_emit_literal(%struct.rar* %33, i8 zeroext %conv33), !dbg !5397
  br label %while.body, !dbg !5398

if.else:                                          ; preds = %if.end28
  %35 = load i32, i32* %symbol, align 4, !dbg !5399
  %cmp34 = icmp eq i32 %35, 256, !dbg !5401
  br i1 %cmp34, label %if.then36, label %if.else86, !dbg !5402

if.then36:                                        ; preds = %if.else
  %36 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5403
  %cache_avail = getelementptr inbounds %struct.rar_br, %struct.rar_br* %36, i32 0, i32 1, !dbg !5403
  %37 = load i32, i32* %cache_avail, align 8, !dbg !5403
  %cmp37 = icmp sge i32 %37, 1, !dbg !5403
  br i1 %cmp37, label %if.end47, label %lor.lhs.false39, !dbg !5403

lor.lhs.false39:                                  ; preds = %if.then36
  %38 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5406
  %39 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5406
  %call40 = call i32 @rar_br_fillup(%struct.archive_read* %38, %struct.rar_br* %39), !dbg !5406
  %tobool41 = icmp ne i32 %call40, 0, !dbg !5406
  br i1 %tobool41, label %if.end47, label %lor.lhs.false42, !dbg !5406

lor.lhs.false42:                                  ; preds = %lor.lhs.false39
  %40 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5408
  %cache_avail43 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %40, i32 0, i32 1, !dbg !5408
  %41 = load i32, i32* %cache_avail43, align 8, !dbg !5408
  %cmp44 = icmp sge i32 %41, 1, !dbg !5408
  br i1 %cmp44, label %if.end47, label %if.then46, !dbg !5410

if.then46:                                        ; preds = %lor.lhs.false42
  br label %truncated_data, !dbg !5411

if.end47:                                         ; preds = %lor.lhs.false42, %lor.lhs.false39, %if.then36
  %42 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5412
  %cache_buffer = getelementptr inbounds %struct.rar_br, %struct.rar_br* %42, i32 0, i32 0, !dbg !5412
  %43 = load i64, i64* %cache_buffer, align 8, !dbg !5412
  %44 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5412
  %cache_avail48 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %44, i32 0, i32 1, !dbg !5412
  %45 = load i32, i32* %cache_avail48, align 8, !dbg !5412
  %sub = sub nsw i32 %45, 1, !dbg !5412
  %sh_prom = zext i32 %sub to i64, !dbg !5412
  %shr = lshr i64 %43, %sh_prom, !dbg !5412
  %conv49 = trunc i64 %shr to i32, !dbg !5412
  %46 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 1), align 4, !dbg !5412
  %and = and i32 %conv49, %46, !dbg !5412
  %tobool50 = icmp ne i32 %and, 0, !dbg !5413
  %lnot = xor i1 %tobool50, true, !dbg !5413
  %lnot.ext = zext i1 %lnot to i32, !dbg !5413
  %conv51 = trunc i32 %lnot.ext to i8, !dbg !5413
  store i8 %conv51, i8* %newfile, align 1, !dbg !5414
  %47 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5415
  %cache_avail52 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %47, i32 0, i32 1, !dbg !5415
  %48 = load i32, i32* %cache_avail52, align 8, !dbg !5415
  %sub53 = sub nsw i32 %48, 1, !dbg !5415
  store i32 %sub53, i32* %cache_avail52, align 8, !dbg !5415
  %49 = load i8, i8* %newfile, align 1, !dbg !5416
  %tobool54 = icmp ne i8 %49, 0, !dbg !5416
  br i1 %tobool54, label %if.then55, label %if.else80, !dbg !5418

if.then55:                                        ; preds = %if.end47
  %50 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5419
  %start_new_block = getelementptr inbounds %struct.rar, %struct.rar* %50, i32 0, i32 34, !dbg !5421
  store i8 1, i8* %start_new_block, align 4, !dbg !5422
  %51 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5423
  %cache_avail56 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %51, i32 0, i32 1, !dbg !5423
  %52 = load i32, i32* %cache_avail56, align 8, !dbg !5423
  %cmp57 = icmp sge i32 %52, 1, !dbg !5423
  br i1 %cmp57, label %if.end67, label %lor.lhs.false59, !dbg !5423

lor.lhs.false59:                                  ; preds = %if.then55
  %53 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5425
  %54 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5425
  %call60 = call i32 @rar_br_fillup(%struct.archive_read* %53, %struct.rar_br* %54), !dbg !5425
  %tobool61 = icmp ne i32 %call60, 0, !dbg !5425
  br i1 %tobool61, label %if.end67, label %lor.lhs.false62, !dbg !5425

lor.lhs.false62:                                  ; preds = %lor.lhs.false59
  %55 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5427
  %cache_avail63 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %55, i32 0, i32 1, !dbg !5427
  %56 = load i32, i32* %cache_avail63, align 8, !dbg !5427
  %cmp64 = icmp sge i32 %56, 1, !dbg !5427
  br i1 %cmp64, label %if.end67, label %if.then66, !dbg !5429

if.then66:                                        ; preds = %lor.lhs.false62
  br label %truncated_data, !dbg !5430

if.end67:                                         ; preds = %lor.lhs.false62, %lor.lhs.false59, %if.then55
  %57 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5431
  %cache_buffer68 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %57, i32 0, i32 0, !dbg !5431
  %58 = load i64, i64* %cache_buffer68, align 8, !dbg !5431
  %59 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5431
  %cache_avail69 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %59, i32 0, i32 1, !dbg !5431
  %60 = load i32, i32* %cache_avail69, align 8, !dbg !5431
  %sub70 = sub nsw i32 %60, 1, !dbg !5431
  %sh_prom71 = zext i32 %sub70 to i64, !dbg !5431
  %shr72 = lshr i64 %58, %sh_prom71, !dbg !5431
  %conv73 = trunc i64 %shr72 to i32, !dbg !5431
  %61 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 1), align 4, !dbg !5431
  %and74 = and i32 %conv73, %61, !dbg !5431
  %conv75 = trunc i32 %and74 to i8, !dbg !5431
  %62 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5432
  %start_new_table = getelementptr inbounds %struct.rar, %struct.rar* %62, i32 0, i32 55, !dbg !5433
  store i8 %conv75, i8* %start_new_table, align 8, !dbg !5434
  %63 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5435
  %cache_avail76 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %63, i32 0, i32 1, !dbg !5435
  %64 = load i32, i32* %cache_avail76, align 8, !dbg !5435
  %sub77 = sub nsw i32 %64, 1, !dbg !5435
  store i32 %sub77, i32* %cache_avail76, align 8, !dbg !5435
  %65 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5436
  %lzss78 = getelementptr inbounds %struct.rar, %struct.rar* %65, i32 0, i32 47, !dbg !5437
  %call79 = call i64 @lzss_position(%struct.lzss* %lzss78), !dbg !5438
  store i64 %call79, i64* %retval, align 8, !dbg !5439
  br label %return, !dbg !5439

if.else80:                                        ; preds = %if.end47
  %66 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5440
  %call81 = call i32 @parse_codes(%struct.archive_read* %66), !dbg !5443
  %cmp82 = icmp ne i32 %call81, 0, !dbg !5444
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !5445

if.then84:                                        ; preds = %if.else80
  store i64 -30, i64* %retval, align 8, !dbg !5446
  br label %return, !dbg !5446

if.end85:                                         ; preds = %if.else80
  br label %while.body, !dbg !5447

if.else86:                                        ; preds = %if.else
  %67 = load i32, i32* %symbol, align 4, !dbg !5448
  %cmp87 = icmp eq i32 %67, 257, !dbg !5450
  br i1 %cmp87, label %if.then89, label %if.else90, !dbg !5451

if.then89:                                        ; preds = %if.else86
  %68 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5452
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %68, i32 0, i32 0, !dbg !5454
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i32 0, i32 0)), !dbg !5455
  store i64 -25, i64* %retval, align 8, !dbg !5456
  br label %return, !dbg !5456

if.else90:                                        ; preds = %if.else86
  %69 = load i32, i32* %symbol, align 4, !dbg !5457
  %cmp91 = icmp eq i32 %69, 258, !dbg !5459
  br i1 %cmp91, label %if.then93, label %if.else101, !dbg !5460

if.then93:                                        ; preds = %if.else90
  %70 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5461
  %lastlength94 = getelementptr inbounds %struct.rar, %struct.rar* %70, i32 0, i32 49, !dbg !5464
  %71 = load i32, i32* %lastlength94, align 4, !dbg !5464
  %cmp95 = icmp eq i32 %71, 0, !dbg !5465
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !5466

if.then97:                                        ; preds = %if.then93
  br label %while.body, !dbg !5467

if.end98:                                         ; preds = %if.then93
  %72 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5468
  %lastoffset99 = getelementptr inbounds %struct.rar, %struct.rar* %72, i32 0, i32 50, !dbg !5469
  %73 = load i32, i32* %lastoffset99, align 8, !dbg !5469
  store i32 %73, i32* %offs, align 4, !dbg !5470
  %74 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5471
  %lastlength100 = getelementptr inbounds %struct.rar, %struct.rar* %74, i32 0, i32 49, !dbg !5472
  %75 = load i32, i32* %lastlength100, align 4, !dbg !5472
  store i32 %75, i32* %len, align 4, !dbg !5473
  br label %if.end489, !dbg !5474

if.else101:                                       ; preds = %if.else90
  %76 = load i32, i32* %symbol, align 4, !dbg !5475
  %cmp102 = icmp sle i32 %76, 262, !dbg !5477
  br i1 %cmp102, label %if.then104, label %if.else179, !dbg !5478

if.then104:                                       ; preds = %if.else101
  %77 = load i32, i32* %symbol, align 4, !dbg !5479
  %sub105 = sub nsw i32 %77, 259, !dbg !5481
  store i32 %sub105, i32* %offsindex, align 4, !dbg !5482
  %78 = load i32, i32* %offsindex, align 4, !dbg !5483
  %idxprom = sext i32 %78 to i64, !dbg !5484
  %79 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5484
  %oldoffset = getelementptr inbounds %struct.rar, %struct.rar* %79, i32 0, i32 51, !dbg !5485
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset, i64 0, i64 %idxprom, !dbg !5484
  %80 = load i32, i32* %arrayidx, align 4, !dbg !5484
  store i32 %80, i32* %offs, align 4, !dbg !5486
  %81 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5487
  %82 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5489
  %lengthcode = getelementptr inbounds %struct.rar, %struct.rar* %82, i32 0, i32 45, !dbg !5490
  %call106 = call i32 @read_next_symbol(%struct.archive_read* %81, %struct.huffman_code* %lengthcode), !dbg !5491
  store i32 %call106, i32* %lensymbol, align 4, !dbg !5492
  %cmp107 = icmp slt i32 %call106, 0, !dbg !5493
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !5494

if.then109:                                       ; preds = %if.then104
  br label %bad_data, !dbg !5495

if.end110:                                        ; preds = %if.then104
  %83 = load i32, i32* %lensymbol, align 4, !dbg !5496
  %cmp111 = icmp sgt i32 %83, 28, !dbg !5498
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !5499

if.then113:                                       ; preds = %if.end110
  br label %bad_data, !dbg !5500

if.end114:                                        ; preds = %if.end110
  %84 = load i32, i32* %lensymbol, align 4, !dbg !5501
  %cmp115 = icmp sgt i32 %84, 28, !dbg !5503
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !5504

if.then117:                                       ; preds = %if.end114
  br label %bad_data, !dbg !5505

if.end118:                                        ; preds = %if.end114
  %85 = load i32, i32* %lensymbol, align 4, !dbg !5506
  %idxprom119 = sext i32 %85 to i64, !dbg !5507
  %arrayidx120 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbases, i64 0, i64 %idxprom119, !dbg !5507
  %86 = load i8, i8* %arrayidx120, align 1, !dbg !5507
  %conv121 = zext i8 %86 to i32, !dbg !5507
  %add122 = add nsw i32 %conv121, 2, !dbg !5508
  store i32 %add122, i32* %len, align 4, !dbg !5509
  %87 = load i32, i32* %lensymbol, align 4, !dbg !5510
  %idxprom123 = sext i32 %87 to i64, !dbg !5512
  %arrayidx124 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom123, !dbg !5512
  %88 = load i8, i8* %arrayidx124, align 1, !dbg !5512
  %conv125 = zext i8 %88 to i32, !dbg !5512
  %cmp126 = icmp sgt i32 %conv125, 0, !dbg !5513
  br i1 %cmp126, label %if.then128, label %if.end167, !dbg !5514

if.then128:                                       ; preds = %if.end118
  %89 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5515
  %cache_avail129 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %89, i32 0, i32 1, !dbg !5515
  %90 = load i32, i32* %cache_avail129, align 8, !dbg !5515
  %91 = load i32, i32* %lensymbol, align 4, !dbg !5515
  %idxprom130 = sext i32 %91 to i64, !dbg !5515
  %arrayidx131 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom130, !dbg !5515
  %92 = load i8, i8* %arrayidx131, align 1, !dbg !5515
  %conv132 = zext i8 %92 to i32, !dbg !5515
  %cmp133 = icmp sge i32 %90, %conv132, !dbg !5515
  br i1 %cmp133, label %if.end146, label %lor.lhs.false135, !dbg !5515

lor.lhs.false135:                                 ; preds = %if.then128
  %93 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5518
  %94 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5518
  %call136 = call i32 @rar_br_fillup(%struct.archive_read* %93, %struct.rar_br* %94), !dbg !5518
  %tobool137 = icmp ne i32 %call136, 0, !dbg !5518
  br i1 %tobool137, label %if.end146, label %lor.lhs.false138, !dbg !5518

lor.lhs.false138:                                 ; preds = %lor.lhs.false135
  %95 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5520
  %cache_avail139 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %95, i32 0, i32 1, !dbg !5520
  %96 = load i32, i32* %cache_avail139, align 8, !dbg !5520
  %97 = load i32, i32* %lensymbol, align 4, !dbg !5520
  %idxprom140 = sext i32 %97 to i64, !dbg !5520
  %arrayidx141 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom140, !dbg !5520
  %98 = load i8, i8* %arrayidx141, align 1, !dbg !5520
  %conv142 = zext i8 %98 to i32, !dbg !5520
  %cmp143 = icmp sge i32 %96, %conv142, !dbg !5520
  br i1 %cmp143, label %if.end146, label %if.then145, !dbg !5522

if.then145:                                       ; preds = %lor.lhs.false138
  br label %truncated_data, !dbg !5523

if.end146:                                        ; preds = %lor.lhs.false138, %lor.lhs.false135, %if.then128
  %99 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5524
  %cache_buffer147 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %99, i32 0, i32 0, !dbg !5524
  %100 = load i64, i64* %cache_buffer147, align 8, !dbg !5524
  %101 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5524
  %cache_avail148 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %101, i32 0, i32 1, !dbg !5524
  %102 = load i32, i32* %cache_avail148, align 8, !dbg !5524
  %103 = load i32, i32* %lensymbol, align 4, !dbg !5524
  %idxprom149 = sext i32 %103 to i64, !dbg !5524
  %arrayidx150 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom149, !dbg !5524
  %104 = load i8, i8* %arrayidx150, align 1, !dbg !5524
  %conv151 = zext i8 %104 to i32, !dbg !5524
  %sub152 = sub nsw i32 %102, %conv151, !dbg !5524
  %sh_prom153 = zext i32 %sub152 to i64, !dbg !5524
  %shr154 = lshr i64 %100, %sh_prom153, !dbg !5524
  %conv155 = trunc i64 %shr154 to i32, !dbg !5524
  %105 = load i32, i32* %lensymbol, align 4, !dbg !5524
  %idxprom156 = sext i32 %105 to i64, !dbg !5524
  %arrayidx157 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom156, !dbg !5524
  %106 = load i8, i8* %arrayidx157, align 1, !dbg !5524
  %idxprom158 = zext i8 %106 to i64, !dbg !5524
  %arrayidx159 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom158, !dbg !5524
  %107 = load i32, i32* %arrayidx159, align 4, !dbg !5524
  %and160 = and i32 %conv155, %107, !dbg !5524
  %108 = load i32, i32* %len, align 4, !dbg !5525
  %add161 = add i32 %108, %and160, !dbg !5525
  store i32 %add161, i32* %len, align 4, !dbg !5525
  %109 = load i32, i32* %lensymbol, align 4, !dbg !5526
  %idxprom162 = sext i32 %109 to i64, !dbg !5526
  %arrayidx163 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom162, !dbg !5526
  %110 = load i8, i8* %arrayidx163, align 1, !dbg !5526
  %conv164 = zext i8 %110 to i32, !dbg !5526
  %111 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5526
  %cache_avail165 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %111, i32 0, i32 1, !dbg !5526
  %112 = load i32, i32* %cache_avail165, align 8, !dbg !5526
  %sub166 = sub nsw i32 %112, %conv164, !dbg !5526
  store i32 %sub166, i32* %cache_avail165, align 8, !dbg !5526
  br label %if.end167, !dbg !5527

if.end167:                                        ; preds = %if.end146, %if.end118
  %113 = load i32, i32* %offsindex, align 4, !dbg !5528
  store i32 %113, i32* %i, align 4, !dbg !5530
  br label %for.cond, !dbg !5531

for.cond:                                         ; preds = %for.inc, %if.end167
  %114 = load i32, i32* %i, align 4, !dbg !5532
  %cmp168 = icmp sgt i32 %114, 0, !dbg !5535
  br i1 %cmp168, label %for.body, label %for.end, !dbg !5536

for.body:                                         ; preds = %for.cond
  %115 = load i32, i32* %i, align 4, !dbg !5537
  %sub170 = sub nsw i32 %115, 1, !dbg !5538
  %idxprom171 = sext i32 %sub170 to i64, !dbg !5539
  %116 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5539
  %oldoffset172 = getelementptr inbounds %struct.rar, %struct.rar* %116, i32 0, i32 51, !dbg !5540
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset172, i64 0, i64 %idxprom171, !dbg !5539
  %117 = load i32, i32* %arrayidx173, align 4, !dbg !5539
  %118 = load i32, i32* %i, align 4, !dbg !5541
  %idxprom174 = sext i32 %118 to i64, !dbg !5542
  %119 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5542
  %oldoffset175 = getelementptr inbounds %struct.rar, %struct.rar* %119, i32 0, i32 51, !dbg !5543
  %arrayidx176 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset175, i64 0, i64 %idxprom174, !dbg !5542
  store i32 %117, i32* %arrayidx176, align 4, !dbg !5544
  br label %for.inc, !dbg !5542

for.inc:                                          ; preds = %for.body
  %120 = load i32, i32* %i, align 4, !dbg !5545
  %dec = add nsw i32 %120, -1, !dbg !5545
  store i32 %dec, i32* %i, align 4, !dbg !5545
  br label %for.cond, !dbg !5547

for.end:                                          ; preds = %for.cond
  %121 = load i32, i32* %offs, align 4, !dbg !5548
  %122 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5549
  %oldoffset177 = getelementptr inbounds %struct.rar, %struct.rar* %122, i32 0, i32 51, !dbg !5550
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset177, i64 0, i64 0, !dbg !5549
  store i32 %121, i32* %arrayidx178, align 4, !dbg !5551
  br label %if.end488, !dbg !5552

if.else179:                                       ; preds = %if.else101
  %123 = load i32, i32* %symbol, align 4, !dbg !5553
  %cmp180 = icmp sle i32 %123, 270, !dbg !5555
  br i1 %cmp180, label %if.then182, label %if.else255, !dbg !5556

if.then182:                                       ; preds = %if.else179
  %124 = load i32, i32* %symbol, align 4, !dbg !5557
  %sub183 = sub nsw i32 %124, 263, !dbg !5559
  %idxprom184 = sext i32 %sub183 to i64, !dbg !5560
  %arrayidx185 = getelementptr inbounds [8 x i8], [8 x i8]* @expand.shortbases, i64 0, i64 %idxprom184, !dbg !5560
  %125 = load i8, i8* %arrayidx185, align 1, !dbg !5560
  %conv186 = zext i8 %125 to i32, !dbg !5560
  %add187 = add nsw i32 %conv186, 1, !dbg !5561
  store i32 %add187, i32* %offs, align 4, !dbg !5562
  %126 = load i32, i32* %symbol, align 4, !dbg !5563
  %sub188 = sub nsw i32 %126, 263, !dbg !5565
  %idxprom189 = sext i32 %sub188 to i64, !dbg !5566
  %arrayidx190 = getelementptr inbounds [8 x i8], [8 x i8]* @expand.shortbits, i64 0, i64 %idxprom189, !dbg !5566
  %127 = load i8, i8* %arrayidx190, align 1, !dbg !5566
  %conv191 = zext i8 %127 to i32, !dbg !5566
  %cmp192 = icmp sgt i32 %conv191, 0, !dbg !5567
  br i1 %cmp192, label %if.then194, label %if.end238, !dbg !5568

if.then194:                                       ; preds = %if.then182
  %128 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5569
  %cache_avail195 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %128, i32 0, i32 1, !dbg !5569
  %129 = load i32, i32* %cache_avail195, align 8, !dbg !5569
  %130 = load i32, i32* %symbol, align 4, !dbg !5569
  %sub196 = sub nsw i32 %130, 263, !dbg !5569
  %idxprom197 = sext i32 %sub196 to i64, !dbg !5569
  %arrayidx198 = getelementptr inbounds [8 x i8], [8 x i8]* @expand.shortbits, i64 0, i64 %idxprom197, !dbg !5569
  %131 = load i8, i8* %arrayidx198, align 1, !dbg !5569
  %conv199 = zext i8 %131 to i32, !dbg !5569
  %cmp200 = icmp sge i32 %129, %conv199, !dbg !5569
  br i1 %cmp200, label %if.end214, label %lor.lhs.false202, !dbg !5569

lor.lhs.false202:                                 ; preds = %if.then194
  %132 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5572
  %133 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5572
  %call203 = call i32 @rar_br_fillup(%struct.archive_read* %132, %struct.rar_br* %133), !dbg !5572
  %tobool204 = icmp ne i32 %call203, 0, !dbg !5572
  br i1 %tobool204, label %if.end214, label %lor.lhs.false205, !dbg !5572

lor.lhs.false205:                                 ; preds = %lor.lhs.false202
  %134 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5574
  %cache_avail206 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %134, i32 0, i32 1, !dbg !5574
  %135 = load i32, i32* %cache_avail206, align 8, !dbg !5574
  %136 = load i32, i32* %symbol, align 4, !dbg !5574
  %sub207 = sub nsw i32 %136, 263, !dbg !5574
  %idxprom208 = sext i32 %sub207 to i64, !dbg !5574
  %arrayidx209 = getelementptr inbounds [8 x i8], [8 x i8]* @expand.shortbits, i64 0, i64 %idxprom208, !dbg !5574
  %137 = load i8, i8* %arrayidx209, align 1, !dbg !5574
  %conv210 = zext i8 %137 to i32, !dbg !5574
  %cmp211 = icmp sge i32 %135, %conv210, !dbg !5574
  br i1 %cmp211, label %if.end214, label %if.then213, !dbg !5576

if.then213:                                       ; preds = %lor.lhs.false205
  br label %truncated_data, !dbg !5577

if.end214:                                        ; preds = %lor.lhs.false205, %lor.lhs.false202, %if.then194
  %138 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5578
  %cache_buffer215 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %138, i32 0, i32 0, !dbg !5578
  %139 = load i64, i64* %cache_buffer215, align 8, !dbg !5578
  %140 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5578
  %cache_avail216 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %140, i32 0, i32 1, !dbg !5578
  %141 = load i32, i32* %cache_avail216, align 8, !dbg !5578
  %142 = load i32, i32* %symbol, align 4, !dbg !5578
  %sub217 = sub nsw i32 %142, 263, !dbg !5578
  %idxprom218 = sext i32 %sub217 to i64, !dbg !5578
  %arrayidx219 = getelementptr inbounds [8 x i8], [8 x i8]* @expand.shortbits, i64 0, i64 %idxprom218, !dbg !5578
  %143 = load i8, i8* %arrayidx219, align 1, !dbg !5578
  %conv220 = zext i8 %143 to i32, !dbg !5578
  %sub221 = sub nsw i32 %141, %conv220, !dbg !5578
  %sh_prom222 = zext i32 %sub221 to i64, !dbg !5578
  %shr223 = lshr i64 %139, %sh_prom222, !dbg !5578
  %conv224 = trunc i64 %shr223 to i32, !dbg !5578
  %144 = load i32, i32* %symbol, align 4, !dbg !5578
  %sub225 = sub nsw i32 %144, 263, !dbg !5578
  %idxprom226 = sext i32 %sub225 to i64, !dbg !5578
  %arrayidx227 = getelementptr inbounds [8 x i8], [8 x i8]* @expand.shortbits, i64 0, i64 %idxprom226, !dbg !5578
  %145 = load i8, i8* %arrayidx227, align 1, !dbg !5578
  %idxprom228 = zext i8 %145 to i64, !dbg !5578
  %arrayidx229 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom228, !dbg !5578
  %146 = load i32, i32* %arrayidx229, align 4, !dbg !5578
  %and230 = and i32 %conv224, %146, !dbg !5578
  %147 = load i32, i32* %offs, align 4, !dbg !5579
  %add231 = add i32 %147, %and230, !dbg !5579
  store i32 %add231, i32* %offs, align 4, !dbg !5579
  %148 = load i32, i32* %symbol, align 4, !dbg !5580
  %sub232 = sub nsw i32 %148, 263, !dbg !5580
  %idxprom233 = sext i32 %sub232 to i64, !dbg !5580
  %arrayidx234 = getelementptr inbounds [8 x i8], [8 x i8]* @expand.shortbits, i64 0, i64 %idxprom233, !dbg !5580
  %149 = load i8, i8* %arrayidx234, align 1, !dbg !5580
  %conv235 = zext i8 %149 to i32, !dbg !5580
  %150 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5580
  %cache_avail236 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %150, i32 0, i32 1, !dbg !5580
  %151 = load i32, i32* %cache_avail236, align 8, !dbg !5580
  %sub237 = sub nsw i32 %151, %conv235, !dbg !5580
  store i32 %sub237, i32* %cache_avail236, align 8, !dbg !5580
  br label %if.end238, !dbg !5581

if.end238:                                        ; preds = %if.end214, %if.then182
  store i32 2, i32* %len, align 4, !dbg !5582
  store i32 3, i32* %i, align 4, !dbg !5583
  br label %for.cond239, !dbg !5585

for.cond239:                                      ; preds = %for.inc250, %if.end238
  %152 = load i32, i32* %i, align 4, !dbg !5586
  %cmp240 = icmp sgt i32 %152, 0, !dbg !5589
  br i1 %cmp240, label %for.body242, label %for.end252, !dbg !5590

for.body242:                                      ; preds = %for.cond239
  %153 = load i32, i32* %i, align 4, !dbg !5591
  %sub243 = sub nsw i32 %153, 1, !dbg !5592
  %idxprom244 = sext i32 %sub243 to i64, !dbg !5593
  %154 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5593
  %oldoffset245 = getelementptr inbounds %struct.rar, %struct.rar* %154, i32 0, i32 51, !dbg !5594
  %arrayidx246 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset245, i64 0, i64 %idxprom244, !dbg !5593
  %155 = load i32, i32* %arrayidx246, align 4, !dbg !5593
  %156 = load i32, i32* %i, align 4, !dbg !5595
  %idxprom247 = sext i32 %156 to i64, !dbg !5596
  %157 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5596
  %oldoffset248 = getelementptr inbounds %struct.rar, %struct.rar* %157, i32 0, i32 51, !dbg !5597
  %arrayidx249 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset248, i64 0, i64 %idxprom247, !dbg !5596
  store i32 %155, i32* %arrayidx249, align 4, !dbg !5598
  br label %for.inc250, !dbg !5596

for.inc250:                                       ; preds = %for.body242
  %158 = load i32, i32* %i, align 4, !dbg !5599
  %dec251 = add nsw i32 %158, -1, !dbg !5599
  store i32 %dec251, i32* %i, align 4, !dbg !5599
  br label %for.cond239, !dbg !5601

for.end252:                                       ; preds = %for.cond239
  %159 = load i32, i32* %offs, align 4, !dbg !5602
  %160 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5603
  %oldoffset253 = getelementptr inbounds %struct.rar, %struct.rar* %160, i32 0, i32 51, !dbg !5604
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset253, i64 0, i64 0, !dbg !5603
  store i32 %159, i32* %arrayidx254, align 4, !dbg !5605
  br label %if.end487, !dbg !5606

if.else255:                                       ; preds = %if.else179
  %161 = load i32, i32* %symbol, align 4, !dbg !5607
  %sub256 = sub nsw i32 %161, 271, !dbg !5610
  %cmp257 = icmp sgt i32 %sub256, 28, !dbg !5611
  br i1 %cmp257, label %if.then259, label %if.end260, !dbg !5612

if.then259:                                       ; preds = %if.else255
  br label %bad_data, !dbg !5613

if.end260:                                        ; preds = %if.else255
  %162 = load i32, i32* %symbol, align 4, !dbg !5614
  %sub261 = sub nsw i32 %162, 271, !dbg !5616
  %cmp262 = icmp sgt i32 %sub261, 28, !dbg !5617
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !5618

if.then264:                                       ; preds = %if.end260
  br label %bad_data, !dbg !5619

if.end265:                                        ; preds = %if.end260
  %163 = load i32, i32* %symbol, align 4, !dbg !5620
  %sub266 = sub nsw i32 %163, 271, !dbg !5621
  %idxprom267 = sext i32 %sub266 to i64, !dbg !5622
  %arrayidx268 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbases, i64 0, i64 %idxprom267, !dbg !5622
  %164 = load i8, i8* %arrayidx268, align 1, !dbg !5622
  %conv269 = zext i8 %164 to i32, !dbg !5622
  %add270 = add nsw i32 %conv269, 3, !dbg !5623
  store i32 %add270, i32* %len, align 4, !dbg !5624
  %165 = load i32, i32* %symbol, align 4, !dbg !5625
  %sub271 = sub nsw i32 %165, 271, !dbg !5627
  %idxprom272 = sext i32 %sub271 to i64, !dbg !5628
  %arrayidx273 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom272, !dbg !5628
  %166 = load i8, i8* %arrayidx273, align 1, !dbg !5628
  %conv274 = zext i8 %166 to i32, !dbg !5628
  %cmp275 = icmp sgt i32 %conv274, 0, !dbg !5629
  br i1 %cmp275, label %if.then277, label %if.end321, !dbg !5630

if.then277:                                       ; preds = %if.end265
  %167 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5631
  %cache_avail278 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %167, i32 0, i32 1, !dbg !5631
  %168 = load i32, i32* %cache_avail278, align 8, !dbg !5631
  %169 = load i32, i32* %symbol, align 4, !dbg !5631
  %sub279 = sub nsw i32 %169, 271, !dbg !5631
  %idxprom280 = sext i32 %sub279 to i64, !dbg !5631
  %arrayidx281 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom280, !dbg !5631
  %170 = load i8, i8* %arrayidx281, align 1, !dbg !5631
  %conv282 = zext i8 %170 to i32, !dbg !5631
  %cmp283 = icmp sge i32 %168, %conv282, !dbg !5631
  br i1 %cmp283, label %if.end297, label %lor.lhs.false285, !dbg !5631

lor.lhs.false285:                                 ; preds = %if.then277
  %171 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5634
  %172 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5634
  %call286 = call i32 @rar_br_fillup(%struct.archive_read* %171, %struct.rar_br* %172), !dbg !5634
  %tobool287 = icmp ne i32 %call286, 0, !dbg !5634
  br i1 %tobool287, label %if.end297, label %lor.lhs.false288, !dbg !5634

lor.lhs.false288:                                 ; preds = %lor.lhs.false285
  %173 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5636
  %cache_avail289 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %173, i32 0, i32 1, !dbg !5636
  %174 = load i32, i32* %cache_avail289, align 8, !dbg !5636
  %175 = load i32, i32* %symbol, align 4, !dbg !5636
  %sub290 = sub nsw i32 %175, 271, !dbg !5636
  %idxprom291 = sext i32 %sub290 to i64, !dbg !5636
  %arrayidx292 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom291, !dbg !5636
  %176 = load i8, i8* %arrayidx292, align 1, !dbg !5636
  %conv293 = zext i8 %176 to i32, !dbg !5636
  %cmp294 = icmp sge i32 %174, %conv293, !dbg !5636
  br i1 %cmp294, label %if.end297, label %if.then296, !dbg !5638

if.then296:                                       ; preds = %lor.lhs.false288
  br label %truncated_data, !dbg !5639

if.end297:                                        ; preds = %lor.lhs.false288, %lor.lhs.false285, %if.then277
  %177 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5640
  %cache_buffer298 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %177, i32 0, i32 0, !dbg !5640
  %178 = load i64, i64* %cache_buffer298, align 8, !dbg !5640
  %179 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5640
  %cache_avail299 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %179, i32 0, i32 1, !dbg !5640
  %180 = load i32, i32* %cache_avail299, align 8, !dbg !5640
  %181 = load i32, i32* %symbol, align 4, !dbg !5640
  %sub300 = sub nsw i32 %181, 271, !dbg !5640
  %idxprom301 = sext i32 %sub300 to i64, !dbg !5640
  %arrayidx302 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom301, !dbg !5640
  %182 = load i8, i8* %arrayidx302, align 1, !dbg !5640
  %conv303 = zext i8 %182 to i32, !dbg !5640
  %sub304 = sub nsw i32 %180, %conv303, !dbg !5640
  %sh_prom305 = zext i32 %sub304 to i64, !dbg !5640
  %shr306 = lshr i64 %178, %sh_prom305, !dbg !5640
  %conv307 = trunc i64 %shr306 to i32, !dbg !5640
  %183 = load i32, i32* %symbol, align 4, !dbg !5640
  %sub308 = sub nsw i32 %183, 271, !dbg !5640
  %idxprom309 = sext i32 %sub308 to i64, !dbg !5640
  %arrayidx310 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom309, !dbg !5640
  %184 = load i8, i8* %arrayidx310, align 1, !dbg !5640
  %idxprom311 = zext i8 %184 to i64, !dbg !5640
  %arrayidx312 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom311, !dbg !5640
  %185 = load i32, i32* %arrayidx312, align 4, !dbg !5640
  %and313 = and i32 %conv307, %185, !dbg !5640
  %186 = load i32, i32* %len, align 4, !dbg !5641
  %add314 = add i32 %186, %and313, !dbg !5641
  store i32 %add314, i32* %len, align 4, !dbg !5641
  %187 = load i32, i32* %symbol, align 4, !dbg !5642
  %sub315 = sub nsw i32 %187, 271, !dbg !5642
  %idxprom316 = sext i32 %sub315 to i64, !dbg !5642
  %arrayidx317 = getelementptr inbounds [28 x i8], [28 x i8]* @expand.lengthbits, i64 0, i64 %idxprom316, !dbg !5642
  %188 = load i8, i8* %arrayidx317, align 1, !dbg !5642
  %conv318 = zext i8 %188 to i32, !dbg !5642
  %189 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5642
  %cache_avail319 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %189, i32 0, i32 1, !dbg !5642
  %190 = load i32, i32* %cache_avail319, align 8, !dbg !5642
  %sub320 = sub nsw i32 %190, %conv318, !dbg !5642
  store i32 %sub320, i32* %cache_avail319, align 8, !dbg !5642
  br label %if.end321, !dbg !5643

if.end321:                                        ; preds = %if.end297, %if.end265
  %191 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5644
  %192 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5646
  %offsetcode = getelementptr inbounds %struct.rar, %struct.rar* %192, i32 0, i32 43, !dbg !5647
  %call322 = call i32 @read_next_symbol(%struct.archive_read* %191, %struct.huffman_code* %offsetcode), !dbg !5648
  store i32 %call322, i32* %offssymbol, align 4, !dbg !5649
  %cmp323 = icmp slt i32 %call322, 0, !dbg !5650
  br i1 %cmp323, label %if.then325, label %if.end326, !dbg !5651

if.then325:                                       ; preds = %if.end321
  br label %bad_data, !dbg !5652

if.end326:                                        ; preds = %if.end321
  %193 = load i32, i32* %offssymbol, align 4, !dbg !5653
  %cmp327 = icmp sgt i32 %193, 60, !dbg !5655
  br i1 %cmp327, label %if.then329, label %if.end330, !dbg !5656

if.then329:                                       ; preds = %if.end326
  br label %bad_data, !dbg !5657

if.end330:                                        ; preds = %if.end326
  %194 = load i32, i32* %offssymbol, align 4, !dbg !5658
  %cmp331 = icmp sgt i32 %194, 60, !dbg !5660
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !5661

if.then333:                                       ; preds = %if.end330
  br label %bad_data, !dbg !5662

if.end334:                                        ; preds = %if.end330
  %195 = load i32, i32* %offssymbol, align 4, !dbg !5663
  %idxprom335 = sext i32 %195 to i64, !dbg !5664
  %arrayidx336 = getelementptr inbounds [60 x i32], [60 x i32]* @expand.offsetbases, i64 0, i64 %idxprom335, !dbg !5664
  %196 = load i32, i32* %arrayidx336, align 4, !dbg !5664
  %add337 = add i32 %196, 1, !dbg !5665
  store i32 %add337, i32* %offs, align 4, !dbg !5666
  %197 = load i32, i32* %offssymbol, align 4, !dbg !5667
  %idxprom338 = sext i32 %197 to i64, !dbg !5669
  %arrayidx339 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom338, !dbg !5669
  %198 = load i8, i8* %arrayidx339, align 1, !dbg !5669
  %conv340 = zext i8 %198 to i32, !dbg !5669
  %cmp341 = icmp sgt i32 %conv340, 0, !dbg !5670
  br i1 %cmp341, label %if.then343, label %if.end461, !dbg !5671

if.then343:                                       ; preds = %if.end334
  %199 = load i32, i32* %offssymbol, align 4, !dbg !5672
  %cmp344 = icmp sgt i32 %199, 9, !dbg !5675
  br i1 %cmp344, label %if.then346, label %if.else421, !dbg !5676

if.then346:                                       ; preds = %if.then343
  %200 = load i32, i32* %offssymbol, align 4, !dbg !5677
  %idxprom347 = sext i32 %200 to i64, !dbg !5680
  %arrayidx348 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom347, !dbg !5680
  %201 = load i8, i8* %arrayidx348, align 1, !dbg !5680
  %conv349 = zext i8 %201 to i32, !dbg !5680
  %cmp350 = icmp sgt i32 %conv349, 4, !dbg !5681
  br i1 %cmp350, label %if.then352, label %if.end397, !dbg !5682

if.then352:                                       ; preds = %if.then346
  %202 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5683
  %cache_avail353 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %202, i32 0, i32 1, !dbg !5683
  %203 = load i32, i32* %cache_avail353, align 8, !dbg !5683
  %204 = load i32, i32* %offssymbol, align 4, !dbg !5683
  %idxprom354 = sext i32 %204 to i64, !dbg !5683
  %arrayidx355 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom354, !dbg !5683
  %205 = load i8, i8* %arrayidx355, align 1, !dbg !5683
  %conv356 = zext i8 %205 to i32, !dbg !5683
  %sub357 = sub nsw i32 %conv356, 4, !dbg !5683
  %cmp358 = icmp sge i32 %203, %sub357, !dbg !5683
  br i1 %cmp358, label %if.end372, label %lor.lhs.false360, !dbg !5683

lor.lhs.false360:                                 ; preds = %if.then352
  %206 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5686
  %207 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5686
  %call361 = call i32 @rar_br_fillup(%struct.archive_read* %206, %struct.rar_br* %207), !dbg !5686
  %tobool362 = icmp ne i32 %call361, 0, !dbg !5686
  br i1 %tobool362, label %if.end372, label %lor.lhs.false363, !dbg !5686

lor.lhs.false363:                                 ; preds = %lor.lhs.false360
  %208 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5688
  %cache_avail364 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %208, i32 0, i32 1, !dbg !5688
  %209 = load i32, i32* %cache_avail364, align 8, !dbg !5688
  %210 = load i32, i32* %offssymbol, align 4, !dbg !5688
  %idxprom365 = sext i32 %210 to i64, !dbg !5688
  %arrayidx366 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom365, !dbg !5688
  %211 = load i8, i8* %arrayidx366, align 1, !dbg !5688
  %conv367 = zext i8 %211 to i32, !dbg !5688
  %sub368 = sub nsw i32 %conv367, 4, !dbg !5688
  %cmp369 = icmp sge i32 %209, %sub368, !dbg !5688
  br i1 %cmp369, label %if.end372, label %if.then371, !dbg !5690

if.then371:                                       ; preds = %lor.lhs.false363
  br label %truncated_data, !dbg !5691

if.end372:                                        ; preds = %lor.lhs.false363, %lor.lhs.false360, %if.then352
  %212 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5692
  %cache_buffer373 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %212, i32 0, i32 0, !dbg !5692
  %213 = load i64, i64* %cache_buffer373, align 8, !dbg !5692
  %214 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5692
  %cache_avail374 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %214, i32 0, i32 1, !dbg !5692
  %215 = load i32, i32* %cache_avail374, align 8, !dbg !5692
  %216 = load i32, i32* %offssymbol, align 4, !dbg !5692
  %idxprom375 = sext i32 %216 to i64, !dbg !5692
  %arrayidx376 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom375, !dbg !5692
  %217 = load i8, i8* %arrayidx376, align 1, !dbg !5692
  %conv377 = zext i8 %217 to i32, !dbg !5692
  %sub378 = sub nsw i32 %conv377, 4, !dbg !5692
  %sub379 = sub nsw i32 %215, %sub378, !dbg !5692
  %sh_prom380 = zext i32 %sub379 to i64, !dbg !5692
  %shr381 = lshr i64 %213, %sh_prom380, !dbg !5692
  %conv382 = trunc i64 %shr381 to i32, !dbg !5692
  %218 = load i32, i32* %offssymbol, align 4, !dbg !5692
  %idxprom383 = sext i32 %218 to i64, !dbg !5692
  %arrayidx384 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom383, !dbg !5692
  %219 = load i8, i8* %arrayidx384, align 1, !dbg !5692
  %conv385 = zext i8 %219 to i32, !dbg !5692
  %sub386 = sub nsw i32 %conv385, 4, !dbg !5692
  %idxprom387 = sext i32 %sub386 to i64, !dbg !5692
  %arrayidx388 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom387, !dbg !5692
  %220 = load i32, i32* %arrayidx388, align 4, !dbg !5692
  %and389 = and i32 %conv382, %220, !dbg !5692
  %shl = shl i32 %and389, 4, !dbg !5693
  %221 = load i32, i32* %offs, align 4, !dbg !5694
  %add390 = add i32 %221, %shl, !dbg !5694
  store i32 %add390, i32* %offs, align 4, !dbg !5694
  %222 = load i32, i32* %offssymbol, align 4, !dbg !5695
  %idxprom391 = sext i32 %222 to i64, !dbg !5695
  %arrayidx392 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom391, !dbg !5695
  %223 = load i8, i8* %arrayidx392, align 1, !dbg !5695
  %conv393 = zext i8 %223 to i32, !dbg !5695
  %sub394 = sub nsw i32 %conv393, 4, !dbg !5695
  %224 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5695
  %cache_avail395 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %224, i32 0, i32 1, !dbg !5695
  %225 = load i32, i32* %cache_avail395, align 8, !dbg !5695
  %sub396 = sub nsw i32 %225, %sub394, !dbg !5695
  store i32 %sub396, i32* %cache_avail395, align 8, !dbg !5695
  br label %if.end397, !dbg !5696

if.end397:                                        ; preds = %if.end372, %if.then346
  %226 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5697
  %numlowoffsetrepeats = getelementptr inbounds %struct.rar, %struct.rar* %226, i32 0, i32 53, !dbg !5699
  %227 = load i32, i32* %numlowoffsetrepeats, align 8, !dbg !5699
  %cmp398 = icmp ugt i32 %227, 0, !dbg !5700
  br i1 %cmp398, label %if.then400, label %if.else404, !dbg !5701

if.then400:                                       ; preds = %if.end397
  %228 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5702
  %numlowoffsetrepeats401 = getelementptr inbounds %struct.rar, %struct.rar* %228, i32 0, i32 53, !dbg !5704
  %229 = load i32, i32* %numlowoffsetrepeats401, align 8, !dbg !5705
  %dec402 = add i32 %229, -1, !dbg !5705
  store i32 %dec402, i32* %numlowoffsetrepeats401, align 8, !dbg !5705
  %230 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5706
  %lastlowoffset = getelementptr inbounds %struct.rar, %struct.rar* %230, i32 0, i32 52, !dbg !5707
  %231 = load i32, i32* %lastlowoffset, align 4, !dbg !5707
  %232 = load i32, i32* %offs, align 4, !dbg !5708
  %add403 = add i32 %232, %231, !dbg !5708
  store i32 %add403, i32* %offs, align 4, !dbg !5708
  br label %if.end420, !dbg !5709

if.else404:                                       ; preds = %if.end397
  %233 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5710
  %234 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5713
  %lowoffsetcode = getelementptr inbounds %struct.rar, %struct.rar* %234, i32 0, i32 44, !dbg !5714
  %call405 = call i32 @read_next_symbol(%struct.archive_read* %233, %struct.huffman_code* %lowoffsetcode), !dbg !5715
  store i32 %call405, i32* %lowoffsetsymbol, align 4, !dbg !5716
  %cmp406 = icmp slt i32 %call405, 0, !dbg !5717
  br i1 %cmp406, label %if.then408, label %if.end409, !dbg !5718

if.then408:                                       ; preds = %if.else404
  store i64 -30, i64* %retval, align 8, !dbg !5719
  br label %return, !dbg !5719

if.end409:                                        ; preds = %if.else404
  %235 = load i32, i32* %lowoffsetsymbol, align 4, !dbg !5720
  %cmp410 = icmp eq i32 %235, 16, !dbg !5722
  br i1 %cmp410, label %if.then412, label %if.else416, !dbg !5723

if.then412:                                       ; preds = %if.end409
  %236 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5724
  %numlowoffsetrepeats413 = getelementptr inbounds %struct.rar, %struct.rar* %236, i32 0, i32 53, !dbg !5726
  store i32 15, i32* %numlowoffsetrepeats413, align 8, !dbg !5727
  %237 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5728
  %lastlowoffset414 = getelementptr inbounds %struct.rar, %struct.rar* %237, i32 0, i32 52, !dbg !5729
  %238 = load i32, i32* %lastlowoffset414, align 4, !dbg !5729
  %239 = load i32, i32* %offs, align 4, !dbg !5730
  %add415 = add i32 %239, %238, !dbg !5730
  store i32 %add415, i32* %offs, align 4, !dbg !5730
  br label %if.end419, !dbg !5731

if.else416:                                       ; preds = %if.end409
  %240 = load i32, i32* %lowoffsetsymbol, align 4, !dbg !5732
  %241 = load i32, i32* %offs, align 4, !dbg !5734
  %add417 = add nsw i32 %241, %240, !dbg !5734
  store i32 %add417, i32* %offs, align 4, !dbg !5734
  %242 = load i32, i32* %lowoffsetsymbol, align 4, !dbg !5735
  %243 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5736
  %lastlowoffset418 = getelementptr inbounds %struct.rar, %struct.rar* %243, i32 0, i32 52, !dbg !5737
  store i32 %242, i32* %lastlowoffset418, align 4, !dbg !5738
  br label %if.end419

if.end419:                                        ; preds = %if.else416, %if.then412
  br label %if.end420

if.end420:                                        ; preds = %if.end419, %if.then400
  br label %if.end460, !dbg !5739

if.else421:                                       ; preds = %if.then343
  %244 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5740
  %cache_avail422 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %244, i32 0, i32 1, !dbg !5740
  %245 = load i32, i32* %cache_avail422, align 8, !dbg !5740
  %246 = load i32, i32* %offssymbol, align 4, !dbg !5740
  %idxprom423 = sext i32 %246 to i64, !dbg !5740
  %arrayidx424 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom423, !dbg !5740
  %247 = load i8, i8* %arrayidx424, align 1, !dbg !5740
  %conv425 = zext i8 %247 to i32, !dbg !5740
  %cmp426 = icmp sge i32 %245, %conv425, !dbg !5740
  br i1 %cmp426, label %if.end439, label %lor.lhs.false428, !dbg !5740

lor.lhs.false428:                                 ; preds = %if.else421
  %248 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5743
  %249 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5743
  %call429 = call i32 @rar_br_fillup(%struct.archive_read* %248, %struct.rar_br* %249), !dbg !5743
  %tobool430 = icmp ne i32 %call429, 0, !dbg !5743
  br i1 %tobool430, label %if.end439, label %lor.lhs.false431, !dbg !5743

lor.lhs.false431:                                 ; preds = %lor.lhs.false428
  %250 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5745
  %cache_avail432 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %250, i32 0, i32 1, !dbg !5745
  %251 = load i32, i32* %cache_avail432, align 8, !dbg !5745
  %252 = load i32, i32* %offssymbol, align 4, !dbg !5745
  %idxprom433 = sext i32 %252 to i64, !dbg !5745
  %arrayidx434 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom433, !dbg !5745
  %253 = load i8, i8* %arrayidx434, align 1, !dbg !5745
  %conv435 = zext i8 %253 to i32, !dbg !5745
  %cmp436 = icmp sge i32 %251, %conv435, !dbg !5745
  br i1 %cmp436, label %if.end439, label %if.then438, !dbg !5747

if.then438:                                       ; preds = %lor.lhs.false431
  br label %truncated_data, !dbg !5748

if.end439:                                        ; preds = %lor.lhs.false431, %lor.lhs.false428, %if.else421
  %254 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5749
  %cache_buffer440 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %254, i32 0, i32 0, !dbg !5749
  %255 = load i64, i64* %cache_buffer440, align 8, !dbg !5749
  %256 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5749
  %cache_avail441 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %256, i32 0, i32 1, !dbg !5749
  %257 = load i32, i32* %cache_avail441, align 8, !dbg !5749
  %258 = load i32, i32* %offssymbol, align 4, !dbg !5749
  %idxprom442 = sext i32 %258 to i64, !dbg !5749
  %arrayidx443 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom442, !dbg !5749
  %259 = load i8, i8* %arrayidx443, align 1, !dbg !5749
  %conv444 = zext i8 %259 to i32, !dbg !5749
  %sub445 = sub nsw i32 %257, %conv444, !dbg !5749
  %sh_prom446 = zext i32 %sub445 to i64, !dbg !5749
  %shr447 = lshr i64 %255, %sh_prom446, !dbg !5749
  %conv448 = trunc i64 %shr447 to i32, !dbg !5749
  %260 = load i32, i32* %offssymbol, align 4, !dbg !5749
  %idxprom449 = sext i32 %260 to i64, !dbg !5749
  %arrayidx450 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom449, !dbg !5749
  %261 = load i8, i8* %arrayidx450, align 1, !dbg !5749
  %idxprom451 = zext i8 %261 to i64, !dbg !5749
  %arrayidx452 = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom451, !dbg !5749
  %262 = load i32, i32* %arrayidx452, align 4, !dbg !5749
  %and453 = and i32 %conv448, %262, !dbg !5749
  %263 = load i32, i32* %offs, align 4, !dbg !5750
  %add454 = add i32 %263, %and453, !dbg !5750
  store i32 %add454, i32* %offs, align 4, !dbg !5750
  %264 = load i32, i32* %offssymbol, align 4, !dbg !5751
  %idxprom455 = sext i32 %264 to i64, !dbg !5751
  %arrayidx456 = getelementptr inbounds [60 x i8], [60 x i8]* @expand.offsetbits, i64 0, i64 %idxprom455, !dbg !5751
  %265 = load i8, i8* %arrayidx456, align 1, !dbg !5751
  %conv457 = zext i8 %265 to i32, !dbg !5751
  %266 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !5751
  %cache_avail458 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %266, i32 0, i32 1, !dbg !5751
  %267 = load i32, i32* %cache_avail458, align 8, !dbg !5751
  %sub459 = sub nsw i32 %267, %conv457, !dbg !5751
  store i32 %sub459, i32* %cache_avail458, align 8, !dbg !5751
  br label %if.end460

if.end460:                                        ; preds = %if.end439, %if.end420
  br label %if.end461, !dbg !5752

if.end461:                                        ; preds = %if.end460, %if.end334
  %268 = load i32, i32* %offs, align 4, !dbg !5753
  %cmp462 = icmp sge i32 %268, 262144, !dbg !5755
  br i1 %cmp462, label %if.then464, label %if.end465, !dbg !5756

if.then464:                                       ; preds = %if.end461
  %269 = load i32, i32* %len, align 4, !dbg !5757
  %inc = add nsw i32 %269, 1, !dbg !5757
  store i32 %inc, i32* %len, align 4, !dbg !5757
  br label %if.end465, !dbg !5758

if.end465:                                        ; preds = %if.then464, %if.end461
  %270 = load i32, i32* %offs, align 4, !dbg !5759
  %cmp466 = icmp sge i32 %270, 8192, !dbg !5761
  br i1 %cmp466, label %if.then468, label %if.end470, !dbg !5762

if.then468:                                       ; preds = %if.end465
  %271 = load i32, i32* %len, align 4, !dbg !5763
  %inc469 = add nsw i32 %271, 1, !dbg !5763
  store i32 %inc469, i32* %len, align 4, !dbg !5763
  br label %if.end470, !dbg !5764

if.end470:                                        ; preds = %if.then468, %if.end465
  store i32 3, i32* %i, align 4, !dbg !5765
  br label %for.cond471, !dbg !5767

for.cond471:                                      ; preds = %for.inc482, %if.end470
  %272 = load i32, i32* %i, align 4, !dbg !5768
  %cmp472 = icmp sgt i32 %272, 0, !dbg !5771
  br i1 %cmp472, label %for.body474, label %for.end484, !dbg !5772

for.body474:                                      ; preds = %for.cond471
  %273 = load i32, i32* %i, align 4, !dbg !5773
  %sub475 = sub nsw i32 %273, 1, !dbg !5774
  %idxprom476 = sext i32 %sub475 to i64, !dbg !5775
  %274 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5775
  %oldoffset477 = getelementptr inbounds %struct.rar, %struct.rar* %274, i32 0, i32 51, !dbg !5776
  %arrayidx478 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset477, i64 0, i64 %idxprom476, !dbg !5775
  %275 = load i32, i32* %arrayidx478, align 4, !dbg !5775
  %276 = load i32, i32* %i, align 4, !dbg !5777
  %idxprom479 = sext i32 %276 to i64, !dbg !5778
  %277 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5778
  %oldoffset480 = getelementptr inbounds %struct.rar, %struct.rar* %277, i32 0, i32 51, !dbg !5779
  %arrayidx481 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset480, i64 0, i64 %idxprom479, !dbg !5778
  store i32 %275, i32* %arrayidx481, align 4, !dbg !5780
  br label %for.inc482, !dbg !5778

for.inc482:                                       ; preds = %for.body474
  %278 = load i32, i32* %i, align 4, !dbg !5781
  %dec483 = add nsw i32 %278, -1, !dbg !5781
  store i32 %dec483, i32* %i, align 4, !dbg !5781
  br label %for.cond471, !dbg !5783

for.end484:                                       ; preds = %for.cond471
  %279 = load i32, i32* %offs, align 4, !dbg !5784
  %280 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5785
  %oldoffset485 = getelementptr inbounds %struct.rar, %struct.rar* %280, i32 0, i32 51, !dbg !5786
  %arrayidx486 = getelementptr inbounds [4 x i32], [4 x i32]* %oldoffset485, i64 0, i64 0, !dbg !5785
  store i32 %279, i32* %arrayidx486, align 4, !dbg !5787
  br label %if.end487

if.end487:                                        ; preds = %for.end484, %for.end252
  br label %if.end488

if.end488:                                        ; preds = %if.end487, %for.end
  br label %if.end489

if.end489:                                        ; preds = %if.end488, %if.end98
  br label %if.end490

if.end490:                                        ; preds = %if.end489
  br label %if.end491

if.end491:                                        ; preds = %if.end490
  br label %if.end492

if.end492:                                        ; preds = %if.end491
  %281 = load i32, i32* %offs, align 4, !dbg !5788
  %282 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5789
  %lastoffset493 = getelementptr inbounds %struct.rar, %struct.rar* %282, i32 0, i32 50, !dbg !5790
  store i32 %281, i32* %lastoffset493, align 8, !dbg !5791
  %283 = load i32, i32* %len, align 4, !dbg !5792
  %284 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5793
  %lastlength494 = getelementptr inbounds %struct.rar, %struct.rar* %284, i32 0, i32 49, !dbg !5794
  store i32 %283, i32* %lastlength494, align 4, !dbg !5795
  %285 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5796
  %output_last_match495 = getelementptr inbounds %struct.rar, %struct.rar* %285, i32 0, i32 48, !dbg !5797
  store i8 1, i8* %output_last_match495, align 8, !dbg !5798
  br label %while.body, !dbg !5799

truncated_data:                                   ; preds = %if.then438, %if.then371, %if.then296, %if.then213, %if.then145, %if.then66, %if.then46
  %286 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5801
  %archive496 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %286, i32 0, i32 0, !dbg !5802
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive496, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !5803
  %287 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5804
  %valid = getelementptr inbounds %struct.rar, %struct.rar* %287, i32 0, i32 29, !dbg !5805
  store i8 0, i8* %valid, align 8, !dbg !5806
  store i64 -30, i64* %retval, align 8, !dbg !5807
  br label %return, !dbg !5807

bad_data:                                         ; preds = %if.then333, %if.then329, %if.then325, %if.then264, %if.then259, %if.then117, %if.then113, %if.then109
  %288 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5808
  %archive497 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %288, i32 0, i32 0, !dbg !5809
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive497, i32 84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0)), !dbg !5810
  store i64 -30, i64* %retval, align 8, !dbg !5811
  br label %return, !dbg !5811

return:                                           ; preds = %bad_data, %truncated_data, %if.then408, %if.then89, %if.then84, %if.end67, %if.then27, %if.then20
  %289 = load i64, i64* %retval, align 8, !dbg !5812
  ret i64 %289, !dbg !5812
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lzss_offset_for_position(%struct.lzss* %lzss, i64 %pos) #5 !dbg !582 {
entry:
  %lzss.addr = alloca %struct.lzss*, align 8
  %pos.addr = alloca i64, align 8
  store %struct.lzss* %lzss, %struct.lzss** %lzss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzss** %lzss.addr, metadata !5813, metadata !677), !dbg !5814
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !5815, metadata !677), !dbg !5816
  %0 = load i64, i64* %pos.addr, align 8, !dbg !5817
  %1 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !5818
  %mask = getelementptr inbounds %struct.lzss, %struct.lzss* %1, i32 0, i32 1, !dbg !5819
  %2 = load i32, i32* %mask, align 8, !dbg !5819
  %conv = sext i32 %2 to i64, !dbg !5818
  %and = and i64 %0, %conv, !dbg !5820
  %conv1 = trunc i64 %and to i32, !dbg !5821
  ret i32 %conv1, !dbg !5822
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lzss_size(%struct.lzss* %lzss) #5 !dbg !586 {
entry:
  %lzss.addr = alloca %struct.lzss*, align 8
  store %struct.lzss* %lzss, %struct.lzss** %lzss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzss** %lzss.addr, metadata !5823, metadata !677), !dbg !5824
  %0 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !5825
  %mask = getelementptr inbounds %struct.lzss, %struct.lzss* %0, i32 0, i32 1, !dbg !5826
  %1 = load i32, i32* %mask, align 8, !dbg !5826
  %add = add nsw i32 %1, 1, !dbg !5827
  ret i32 %add, !dbg !5828
}

; Function Attrs: nounwind uwtable
define internal i32 @rar_br_fillup(%struct.archive_read* %a, %struct.rar_br* %br) #0 !dbg !593 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %br.addr = alloca %struct.rar_br*, align 8
  %rar = alloca %struct.rar*, align 8
  %n = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5829, metadata !677), !dbg !5830
  store %struct.rar_br* %br, %struct.rar_br** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rar_br** %br.addr, metadata !5831, metadata !677), !dbg !5832
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !5833, metadata !677), !dbg !5834
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5835
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !5836
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !5836
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !5837
  %2 = load i8*, i8** %data, align 8, !dbg !5837
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !5838
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !5834
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5839, metadata !677), !dbg !5840
  %4 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5841
  %cache_avail = getelementptr inbounds %struct.rar_br, %struct.rar_br* %4, i32 0, i32 1, !dbg !5842
  %5 = load i32, i32* %cache_avail, align 8, !dbg !5842
  %conv = sext i32 %5 to i64, !dbg !5841
  %sub = sub i64 64, %conv, !dbg !5843
  %conv1 = trunc i64 %sub to i32, !dbg !5844
  store i32 %conv1, i32* %n, align 4, !dbg !5840
  br label %for.cond, !dbg !5845

for.cond:                                         ; preds = %if.end181, %entry
  %6 = load i32, i32* %n, align 4, !dbg !5846
  %shr = ashr i32 %6, 3, !dbg !5850
  switch i32 %shr, label %sw.default [
    i32 8, label %sw.bb
    i32 7, label %sw.bb47
    i32 6, label %sw.bb104
    i32 0, label %sw.bb156
  ], !dbg !5851

sw.bb:                                            ; preds = %for.cond
  %7 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5852
  %avail_in = getelementptr inbounds %struct.rar_br, %struct.rar_br* %7, i32 0, i32 2, !dbg !5855
  %8 = load i64, i64* %avail_in, align 8, !dbg !5855
  %cmp = icmp sge i64 %8, 8, !dbg !5856
  br i1 %cmp, label %if.then, label %if.end, !dbg !5857

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5858
  %next_in = getelementptr inbounds %struct.rar_br, %struct.rar_br* %9, i32 0, i32 3, !dbg !5860
  %10 = load i8*, i8** %next_in, align 8, !dbg !5860
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0, !dbg !5858
  %11 = load i8, i8* %arrayidx, align 1, !dbg !5858
  %conv3 = zext i8 %11 to i64, !dbg !5861
  %shl = shl i64 %conv3, 56, !dbg !5862
  %12 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5863
  %next_in4 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %12, i32 0, i32 3, !dbg !5864
  %13 = load i8*, i8** %next_in4, align 8, !dbg !5864
  %arrayidx5 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !5863
  %14 = load i8, i8* %arrayidx5, align 1, !dbg !5863
  %conv6 = zext i8 %14 to i64, !dbg !5865
  %shl7 = shl i64 %conv6, 48, !dbg !5866
  %or = or i64 %shl, %shl7, !dbg !5867
  %15 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5868
  %next_in8 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %15, i32 0, i32 3, !dbg !5869
  %16 = load i8*, i8** %next_in8, align 8, !dbg !5869
  %arrayidx9 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !5868
  %17 = load i8, i8* %arrayidx9, align 1, !dbg !5868
  %conv10 = zext i8 %17 to i64, !dbg !5870
  %shl11 = shl i64 %conv10, 40, !dbg !5871
  %or12 = or i64 %or, %shl11, !dbg !5872
  %18 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5873
  %next_in13 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %18, i32 0, i32 3, !dbg !5874
  %19 = load i8*, i8** %next_in13, align 8, !dbg !5874
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !5873
  %20 = load i8, i8* %arrayidx14, align 1, !dbg !5873
  %conv15 = zext i8 %20 to i64, !dbg !5875
  %shl16 = shl i64 %conv15, 32, !dbg !5876
  %or17 = or i64 %or12, %shl16, !dbg !5877
  %21 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5878
  %next_in18 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %21, i32 0, i32 3, !dbg !5879
  %22 = load i8*, i8** %next_in18, align 8, !dbg !5879
  %arrayidx19 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !5878
  %23 = load i8, i8* %arrayidx19, align 1, !dbg !5878
  %conv20 = zext i8 %23 to i32, !dbg !5880
  %shl21 = shl i32 %conv20, 24, !dbg !5881
  %conv22 = zext i32 %shl21 to i64, !dbg !5882
  %or23 = or i64 %or17, %conv22, !dbg !5883
  %24 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5884
  %next_in24 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %24, i32 0, i32 3, !dbg !5885
  %25 = load i8*, i8** %next_in24, align 8, !dbg !5885
  %arrayidx25 = getelementptr inbounds i8, i8* %25, i64 5, !dbg !5884
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !5884
  %conv26 = zext i8 %26 to i32, !dbg !5886
  %shl27 = shl i32 %conv26, 16, !dbg !5887
  %conv28 = zext i32 %shl27 to i64, !dbg !5888
  %or29 = or i64 %or23, %conv28, !dbg !5889
  %27 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5890
  %next_in30 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %27, i32 0, i32 3, !dbg !5891
  %28 = load i8*, i8** %next_in30, align 8, !dbg !5891
  %arrayidx31 = getelementptr inbounds i8, i8* %28, i64 6, !dbg !5890
  %29 = load i8, i8* %arrayidx31, align 1, !dbg !5890
  %conv32 = zext i8 %29 to i32, !dbg !5892
  %shl33 = shl i32 %conv32, 8, !dbg !5893
  %conv34 = zext i32 %shl33 to i64, !dbg !5894
  %or35 = or i64 %or29, %conv34, !dbg !5895
  %30 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5896
  %next_in36 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %30, i32 0, i32 3, !dbg !5897
  %31 = load i8*, i8** %next_in36, align 8, !dbg !5897
  %arrayidx37 = getelementptr inbounds i8, i8* %31, i64 7, !dbg !5896
  %32 = load i8, i8* %arrayidx37, align 1, !dbg !5896
  %conv38 = zext i8 %32 to i32, !dbg !5898
  %conv39 = zext i32 %conv38 to i64, !dbg !5898
  %or40 = or i64 %or35, %conv39, !dbg !5899
  %33 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5900
  %cache_buffer = getelementptr inbounds %struct.rar_br, %struct.rar_br* %33, i32 0, i32 0, !dbg !5901
  store i64 %or40, i64* %cache_buffer, align 8, !dbg !5902
  %34 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5903
  %next_in41 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %34, i32 0, i32 3, !dbg !5904
  %35 = load i8*, i8** %next_in41, align 8, !dbg !5905
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 8, !dbg !5905
  store i8* %add.ptr, i8** %next_in41, align 8, !dbg !5905
  %36 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5906
  %avail_in42 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %36, i32 0, i32 2, !dbg !5907
  %37 = load i64, i64* %avail_in42, align 8, !dbg !5908
  %sub43 = sub nsw i64 %37, 8, !dbg !5908
  store i64 %sub43, i64* %avail_in42, align 8, !dbg !5908
  %38 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5909
  %cache_avail44 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %38, i32 0, i32 1, !dbg !5910
  %39 = load i32, i32* %cache_avail44, align 8, !dbg !5911
  %add = add nsw i32 %39, 64, !dbg !5911
  store i32 %add, i32* %cache_avail44, align 8, !dbg !5911
  %40 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5912
  %bytes_unconsumed = getelementptr inbounds %struct.rar, %struct.rar* %40, i32 0, i32 23, !dbg !5913
  %41 = load i64, i64* %bytes_unconsumed, align 8, !dbg !5914
  %add45 = add nsw i64 %41, 8, !dbg !5914
  store i64 %add45, i64* %bytes_unconsumed, align 8, !dbg !5914
  %42 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5915
  %bytes_remaining = getelementptr inbounds %struct.rar, %struct.rar* %42, i32 0, i32 24, !dbg !5916
  %43 = load i64, i64* %bytes_remaining, align 8, !dbg !5917
  %sub46 = sub nsw i64 %43, 8, !dbg !5917
  store i64 %sub46, i64* %bytes_remaining, align 8, !dbg !5917
  store i32 1, i32* %retval, align 4, !dbg !5918
  br label %return, !dbg !5918

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !5919

sw.bb47:                                          ; preds = %for.cond
  %44 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5920
  %avail_in48 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %44, i32 0, i32 2, !dbg !5922
  %45 = load i64, i64* %avail_in48, align 8, !dbg !5922
  %cmp49 = icmp sge i64 %45, 7, !dbg !5923
  br i1 %cmp49, label %if.then51, label %if.end103, !dbg !5924

if.then51:                                        ; preds = %sw.bb47
  %46 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5925
  %cache_buffer52 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %46, i32 0, i32 0, !dbg !5927
  %47 = load i64, i64* %cache_buffer52, align 8, !dbg !5927
  %shl53 = shl i64 %47, 56, !dbg !5928
  %48 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5929
  %next_in54 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %48, i32 0, i32 3, !dbg !5930
  %49 = load i8*, i8** %next_in54, align 8, !dbg !5930
  %arrayidx55 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !5929
  %50 = load i8, i8* %arrayidx55, align 1, !dbg !5929
  %conv56 = zext i8 %50 to i64, !dbg !5931
  %shl57 = shl i64 %conv56, 48, !dbg !5932
  %or58 = or i64 %shl53, %shl57, !dbg !5933
  %51 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5934
  %next_in59 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %51, i32 0, i32 3, !dbg !5935
  %52 = load i8*, i8** %next_in59, align 8, !dbg !5935
  %arrayidx60 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !5934
  %53 = load i8, i8* %arrayidx60, align 1, !dbg !5934
  %conv61 = zext i8 %53 to i64, !dbg !5936
  %shl62 = shl i64 %conv61, 40, !dbg !5937
  %or63 = or i64 %or58, %shl62, !dbg !5938
  %54 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5939
  %next_in64 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %54, i32 0, i32 3, !dbg !5940
  %55 = load i8*, i8** %next_in64, align 8, !dbg !5940
  %arrayidx65 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !5939
  %56 = load i8, i8* %arrayidx65, align 1, !dbg !5939
  %conv66 = zext i8 %56 to i64, !dbg !5941
  %shl67 = shl i64 %conv66, 32, !dbg !5942
  %or68 = or i64 %or63, %shl67, !dbg !5943
  %57 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5944
  %next_in69 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %57, i32 0, i32 3, !dbg !5945
  %58 = load i8*, i8** %next_in69, align 8, !dbg !5945
  %arrayidx70 = getelementptr inbounds i8, i8* %58, i64 3, !dbg !5944
  %59 = load i8, i8* %arrayidx70, align 1, !dbg !5944
  %conv71 = zext i8 %59 to i32, !dbg !5946
  %shl72 = shl i32 %conv71, 24, !dbg !5947
  %conv73 = zext i32 %shl72 to i64, !dbg !5948
  %or74 = or i64 %or68, %conv73, !dbg !5949
  %60 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5950
  %next_in75 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %60, i32 0, i32 3, !dbg !5951
  %61 = load i8*, i8** %next_in75, align 8, !dbg !5951
  %arrayidx76 = getelementptr inbounds i8, i8* %61, i64 4, !dbg !5950
  %62 = load i8, i8* %arrayidx76, align 1, !dbg !5950
  %conv77 = zext i8 %62 to i32, !dbg !5952
  %shl78 = shl i32 %conv77, 16, !dbg !5953
  %conv79 = zext i32 %shl78 to i64, !dbg !5954
  %or80 = or i64 %or74, %conv79, !dbg !5955
  %63 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5956
  %next_in81 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %63, i32 0, i32 3, !dbg !5957
  %64 = load i8*, i8** %next_in81, align 8, !dbg !5957
  %arrayidx82 = getelementptr inbounds i8, i8* %64, i64 5, !dbg !5956
  %65 = load i8, i8* %arrayidx82, align 1, !dbg !5956
  %conv83 = zext i8 %65 to i32, !dbg !5958
  %shl84 = shl i32 %conv83, 8, !dbg !5959
  %conv85 = zext i32 %shl84 to i64, !dbg !5960
  %or86 = or i64 %or80, %conv85, !dbg !5961
  %66 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5962
  %next_in87 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %66, i32 0, i32 3, !dbg !5963
  %67 = load i8*, i8** %next_in87, align 8, !dbg !5963
  %arrayidx88 = getelementptr inbounds i8, i8* %67, i64 6, !dbg !5962
  %68 = load i8, i8* %arrayidx88, align 1, !dbg !5962
  %conv89 = zext i8 %68 to i32, !dbg !5964
  %conv90 = zext i32 %conv89 to i64, !dbg !5964
  %or91 = or i64 %or86, %conv90, !dbg !5965
  %69 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5966
  %cache_buffer92 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %69, i32 0, i32 0, !dbg !5967
  store i64 %or91, i64* %cache_buffer92, align 8, !dbg !5968
  %70 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5969
  %next_in93 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %70, i32 0, i32 3, !dbg !5970
  %71 = load i8*, i8** %next_in93, align 8, !dbg !5971
  %add.ptr94 = getelementptr inbounds i8, i8* %71, i64 7, !dbg !5971
  store i8* %add.ptr94, i8** %next_in93, align 8, !dbg !5971
  %72 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5972
  %avail_in95 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %72, i32 0, i32 2, !dbg !5973
  %73 = load i64, i64* %avail_in95, align 8, !dbg !5974
  %sub96 = sub nsw i64 %73, 7, !dbg !5974
  store i64 %sub96, i64* %avail_in95, align 8, !dbg !5974
  %74 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5975
  %cache_avail97 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %74, i32 0, i32 1, !dbg !5976
  %75 = load i32, i32* %cache_avail97, align 8, !dbg !5977
  %add98 = add nsw i32 %75, 56, !dbg !5977
  store i32 %add98, i32* %cache_avail97, align 8, !dbg !5977
  %76 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5978
  %bytes_unconsumed99 = getelementptr inbounds %struct.rar, %struct.rar* %76, i32 0, i32 23, !dbg !5979
  %77 = load i64, i64* %bytes_unconsumed99, align 8, !dbg !5980
  %add100 = add nsw i64 %77, 7, !dbg !5980
  store i64 %add100, i64* %bytes_unconsumed99, align 8, !dbg !5980
  %78 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !5981
  %bytes_remaining101 = getelementptr inbounds %struct.rar, %struct.rar* %78, i32 0, i32 24, !dbg !5982
  %79 = load i64, i64* %bytes_remaining101, align 8, !dbg !5983
  %sub102 = sub nsw i64 %79, 7, !dbg !5983
  store i64 %sub102, i64* %bytes_remaining101, align 8, !dbg !5983
  store i32 1, i32* %retval, align 4, !dbg !5984
  br label %return, !dbg !5984

if.end103:                                        ; preds = %sw.bb47
  br label %sw.epilog, !dbg !5985

sw.bb104:                                         ; preds = %for.cond
  %80 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5986
  %avail_in105 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %80, i32 0, i32 2, !dbg !5988
  %81 = load i64, i64* %avail_in105, align 8, !dbg !5988
  %cmp106 = icmp sge i64 %81, 6, !dbg !5989
  br i1 %cmp106, label %if.then108, label %if.end155, !dbg !5990

if.then108:                                       ; preds = %sw.bb104
  %82 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5991
  %cache_buffer109 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %82, i32 0, i32 0, !dbg !5993
  %83 = load i64, i64* %cache_buffer109, align 8, !dbg !5993
  %shl110 = shl i64 %83, 48, !dbg !5994
  %84 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !5995
  %next_in111 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %84, i32 0, i32 3, !dbg !5996
  %85 = load i8*, i8** %next_in111, align 8, !dbg !5996
  %arrayidx112 = getelementptr inbounds i8, i8* %85, i64 0, !dbg !5995
  %86 = load i8, i8* %arrayidx112, align 1, !dbg !5995
  %conv113 = zext i8 %86 to i64, !dbg !5997
  %shl114 = shl i64 %conv113, 40, !dbg !5998
  %or115 = or i64 %shl110, %shl114, !dbg !5999
  %87 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6000
  %next_in116 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %87, i32 0, i32 3, !dbg !6001
  %88 = load i8*, i8** %next_in116, align 8, !dbg !6001
  %arrayidx117 = getelementptr inbounds i8, i8* %88, i64 1, !dbg !6000
  %89 = load i8, i8* %arrayidx117, align 1, !dbg !6000
  %conv118 = zext i8 %89 to i64, !dbg !6002
  %shl119 = shl i64 %conv118, 32, !dbg !6003
  %or120 = or i64 %or115, %shl119, !dbg !6004
  %90 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6005
  %next_in121 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %90, i32 0, i32 3, !dbg !6006
  %91 = load i8*, i8** %next_in121, align 8, !dbg !6006
  %arrayidx122 = getelementptr inbounds i8, i8* %91, i64 2, !dbg !6005
  %92 = load i8, i8* %arrayidx122, align 1, !dbg !6005
  %conv123 = zext i8 %92 to i32, !dbg !6007
  %shl124 = shl i32 %conv123, 24, !dbg !6008
  %conv125 = zext i32 %shl124 to i64, !dbg !6009
  %or126 = or i64 %or120, %conv125, !dbg !6010
  %93 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6011
  %next_in127 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %93, i32 0, i32 3, !dbg !6012
  %94 = load i8*, i8** %next_in127, align 8, !dbg !6012
  %arrayidx128 = getelementptr inbounds i8, i8* %94, i64 3, !dbg !6011
  %95 = load i8, i8* %arrayidx128, align 1, !dbg !6011
  %conv129 = zext i8 %95 to i32, !dbg !6013
  %shl130 = shl i32 %conv129, 16, !dbg !6014
  %conv131 = zext i32 %shl130 to i64, !dbg !6015
  %or132 = or i64 %or126, %conv131, !dbg !6016
  %96 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6017
  %next_in133 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %96, i32 0, i32 3, !dbg !6018
  %97 = load i8*, i8** %next_in133, align 8, !dbg !6018
  %arrayidx134 = getelementptr inbounds i8, i8* %97, i64 4, !dbg !6017
  %98 = load i8, i8* %arrayidx134, align 1, !dbg !6017
  %conv135 = zext i8 %98 to i32, !dbg !6019
  %shl136 = shl i32 %conv135, 8, !dbg !6020
  %conv137 = zext i32 %shl136 to i64, !dbg !6021
  %or138 = or i64 %or132, %conv137, !dbg !6022
  %99 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6023
  %next_in139 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %99, i32 0, i32 3, !dbg !6024
  %100 = load i8*, i8** %next_in139, align 8, !dbg !6024
  %arrayidx140 = getelementptr inbounds i8, i8* %100, i64 5, !dbg !6023
  %101 = load i8, i8* %arrayidx140, align 1, !dbg !6023
  %conv141 = zext i8 %101 to i32, !dbg !6025
  %conv142 = zext i32 %conv141 to i64, !dbg !6025
  %or143 = or i64 %or138, %conv142, !dbg !6026
  %102 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6027
  %cache_buffer144 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %102, i32 0, i32 0, !dbg !6028
  store i64 %or143, i64* %cache_buffer144, align 8, !dbg !6029
  %103 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6030
  %next_in145 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %103, i32 0, i32 3, !dbg !6031
  %104 = load i8*, i8** %next_in145, align 8, !dbg !6032
  %add.ptr146 = getelementptr inbounds i8, i8* %104, i64 6, !dbg !6032
  store i8* %add.ptr146, i8** %next_in145, align 8, !dbg !6032
  %105 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6033
  %avail_in147 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %105, i32 0, i32 2, !dbg !6034
  %106 = load i64, i64* %avail_in147, align 8, !dbg !6035
  %sub148 = sub nsw i64 %106, 6, !dbg !6035
  store i64 %sub148, i64* %avail_in147, align 8, !dbg !6035
  %107 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6036
  %cache_avail149 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %107, i32 0, i32 1, !dbg !6037
  %108 = load i32, i32* %cache_avail149, align 8, !dbg !6038
  %add150 = add nsw i32 %108, 48, !dbg !6038
  store i32 %add150, i32* %cache_avail149, align 8, !dbg !6038
  %109 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6039
  %bytes_unconsumed151 = getelementptr inbounds %struct.rar, %struct.rar* %109, i32 0, i32 23, !dbg !6040
  %110 = load i64, i64* %bytes_unconsumed151, align 8, !dbg !6041
  %add152 = add nsw i64 %110, 6, !dbg !6041
  store i64 %add152, i64* %bytes_unconsumed151, align 8, !dbg !6041
  %111 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6042
  %bytes_remaining153 = getelementptr inbounds %struct.rar, %struct.rar* %111, i32 0, i32 24, !dbg !6043
  %112 = load i64, i64* %bytes_remaining153, align 8, !dbg !6044
  %sub154 = sub nsw i64 %112, 6, !dbg !6044
  store i64 %sub154, i64* %bytes_remaining153, align 8, !dbg !6044
  store i32 1, i32* %retval, align 4, !dbg !6045
  br label %return, !dbg !6045

if.end155:                                        ; preds = %sw.bb104
  br label %sw.epilog, !dbg !6046

sw.bb156:                                         ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !6047
  br label %return, !dbg !6047

sw.default:                                       ; preds = %for.cond
  br label %sw.epilog, !dbg !6048

sw.epilog:                                        ; preds = %sw.default, %if.end155, %if.end103, %if.end
  %113 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6049
  %avail_in157 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %113, i32 0, i32 2, !dbg !6051
  %114 = load i64, i64* %avail_in157, align 8, !dbg !6051
  %cmp158 = icmp sle i64 %114, 0, !dbg !6052
  br i1 %cmp158, label %if.then160, label %if.end181, !dbg !6053

if.then160:                                       ; preds = %sw.epilog
  %115 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6054
  %bytes_unconsumed161 = getelementptr inbounds %struct.rar, %struct.rar* %115, i32 0, i32 23, !dbg !6057
  %116 = load i64, i64* %bytes_unconsumed161, align 8, !dbg !6057
  %cmp162 = icmp sgt i64 %116, 0, !dbg !6058
  br i1 %cmp162, label %if.then164, label %if.end167, !dbg !6059

if.then164:                                       ; preds = %if.then160
  %117 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6060
  %118 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6062
  %bytes_unconsumed165 = getelementptr inbounds %struct.rar, %struct.rar* %118, i32 0, i32 23, !dbg !6063
  %119 = load i64, i64* %bytes_unconsumed165, align 8, !dbg !6063
  %call = call i64 @__archive_read_consume(%struct.archive_read* %117, i64 %119), !dbg !6064
  %120 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6065
  %bytes_unconsumed166 = getelementptr inbounds %struct.rar, %struct.rar* %120, i32 0, i32 23, !dbg !6066
  store i64 0, i64* %bytes_unconsumed166, align 8, !dbg !6067
  br label %if.end167, !dbg !6068

if.end167:                                        ; preds = %if.then164, %if.then160
  %121 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6069
  %122 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6070
  %avail_in168 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %122, i32 0, i32 2, !dbg !6071
  %call169 = call i8* @rar_read_ahead(%struct.archive_read* %121, i64 1, i64* %avail_in168), !dbg !6072
  %123 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6073
  %next_in170 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %123, i32 0, i32 3, !dbg !6074
  store i8* %call169, i8** %next_in170, align 8, !dbg !6075
  %124 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6076
  %next_in171 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %124, i32 0, i32 3, !dbg !6078
  %125 = load i8*, i8** %next_in171, align 8, !dbg !6078
  %cmp172 = icmp eq i8* %125, null, !dbg !6079
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !6080

if.then174:                                       ; preds = %if.end167
  store i32 0, i32* %retval, align 4, !dbg !6081
  br label %return, !dbg !6081

if.end175:                                        ; preds = %if.end167
  %126 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6082
  %avail_in176 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %126, i32 0, i32 2, !dbg !6084
  %127 = load i64, i64* %avail_in176, align 8, !dbg !6084
  %cmp177 = icmp eq i64 %127, 0, !dbg !6085
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !6086

if.then179:                                       ; preds = %if.end175
  store i32 0, i32* %retval, align 4, !dbg !6087
  br label %return, !dbg !6087

if.end180:                                        ; preds = %if.end175
  br label %if.end181, !dbg !6088

if.end181:                                        ; preds = %if.end180, %sw.epilog
  %128 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6089
  %cache_buffer182 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %128, i32 0, i32 0, !dbg !6090
  %129 = load i64, i64* %cache_buffer182, align 8, !dbg !6090
  %shl183 = shl i64 %129, 8, !dbg !6091
  %130 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6092
  %next_in184 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %130, i32 0, i32 3, !dbg !6093
  %131 = load i8*, i8** %next_in184, align 8, !dbg !6094
  %incdec.ptr = getelementptr inbounds i8, i8* %131, i32 1, !dbg !6094
  store i8* %incdec.ptr, i8** %next_in184, align 8, !dbg !6094
  %132 = load i8, i8* %131, align 1, !dbg !6095
  %conv185 = zext i8 %132 to i64, !dbg !6095
  %or186 = or i64 %shl183, %conv185, !dbg !6096
  %133 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6097
  %cache_buffer187 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %133, i32 0, i32 0, !dbg !6098
  store i64 %or186, i64* %cache_buffer187, align 8, !dbg !6099
  %134 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6100
  %avail_in188 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %134, i32 0, i32 2, !dbg !6101
  %135 = load i64, i64* %avail_in188, align 8, !dbg !6102
  %dec = add nsw i64 %135, -1, !dbg !6102
  store i64 %dec, i64* %avail_in188, align 8, !dbg !6102
  %136 = load %struct.rar_br*, %struct.rar_br** %br.addr, align 8, !dbg !6103
  %cache_avail189 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %136, i32 0, i32 1, !dbg !6104
  %137 = load i32, i32* %cache_avail189, align 8, !dbg !6105
  %add190 = add nsw i32 %137, 8, !dbg !6105
  store i32 %add190, i32* %cache_avail189, align 8, !dbg !6105
  %138 = load i32, i32* %n, align 4, !dbg !6106
  %sub191 = sub nsw i32 %138, 8, !dbg !6106
  store i32 %sub191, i32* %n, align 4, !dbg !6106
  %139 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6107
  %bytes_unconsumed192 = getelementptr inbounds %struct.rar, %struct.rar* %139, i32 0, i32 23, !dbg !6108
  %140 = load i64, i64* %bytes_unconsumed192, align 8, !dbg !6109
  %inc = add nsw i64 %140, 1, !dbg !6109
  store i64 %inc, i64* %bytes_unconsumed192, align 8, !dbg !6109
  %141 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6110
  %bytes_remaining193 = getelementptr inbounds %struct.rar, %struct.rar* %141, i32 0, i32 24, !dbg !6111
  %142 = load i64, i64* %bytes_remaining193, align 8, !dbg !6112
  %dec194 = add nsw i64 %142, -1, !dbg !6112
  store i64 %dec194, i64* %bytes_remaining193, align 8, !dbg !6112
  br label %for.cond, !dbg !6113

return:                                           ; preds = %if.then179, %if.then174, %sw.bb156, %if.then108, %if.then51, %if.then
  %143 = load i32, i32* %retval, align 4, !dbg !6115
  ret i32 %143, !dbg !6115
}

; Function Attrs: nounwind uwtable
define internal void @free_codes(%struct.archive_read* %a) #0 !dbg !595 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %rar = alloca %struct.rar*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6116, metadata !677), !dbg !6117
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !6118, metadata !677), !dbg !6119
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6120
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !6121
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !6121
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !6122
  %2 = load i8*, i8** %data, align 8, !dbg !6122
  %3 = bitcast i8* %2 to %struct.rar*, !dbg !6123
  store %struct.rar* %3, %struct.rar** %rar, align 8, !dbg !6119
  %4 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6124
  %maincode = getelementptr inbounds %struct.rar, %struct.rar* %4, i32 0, i32 42, !dbg !6125
  %tree = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %maincode, i32 0, i32 0, !dbg !6126
  %5 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree, align 8, !dbg !6126
  %6 = bitcast %struct.huffman_tree_node* %5 to i8*, !dbg !6124
  call void @free(i8* %6) #8, !dbg !6127
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6128
  %offsetcode = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 43, !dbg !6129
  %tree1 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %offsetcode, i32 0, i32 0, !dbg !6130
  %8 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree1, align 8, !dbg !6130
  %9 = bitcast %struct.huffman_tree_node* %8 to i8*, !dbg !6128
  call void @free(i8* %9) #8, !dbg !6131
  %10 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6132
  %lowoffsetcode = getelementptr inbounds %struct.rar, %struct.rar* %10, i32 0, i32 44, !dbg !6133
  %tree2 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %lowoffsetcode, i32 0, i32 0, !dbg !6134
  %11 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree2, align 8, !dbg !6134
  %12 = bitcast %struct.huffman_tree_node* %11 to i8*, !dbg !6132
  call void @free(i8* %12) #8, !dbg !6135
  %13 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6136
  %lengthcode = getelementptr inbounds %struct.rar, %struct.rar* %13, i32 0, i32 45, !dbg !6137
  %tree3 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %lengthcode, i32 0, i32 0, !dbg !6138
  %14 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree3, align 8, !dbg !6138
  %15 = bitcast %struct.huffman_tree_node* %14 to i8*, !dbg !6136
  call void @free(i8* %15) #8, !dbg !6139
  %16 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6140
  %maincode4 = getelementptr inbounds %struct.rar, %struct.rar* %16, i32 0, i32 42, !dbg !6141
  %table = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %maincode4, i32 0, i32 6, !dbg !6142
  %17 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table, align 8, !dbg !6142
  %18 = bitcast %struct.huffman_table_entry* %17 to i8*, !dbg !6140
  call void @free(i8* %18) #8, !dbg !6143
  %19 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6144
  %offsetcode5 = getelementptr inbounds %struct.rar, %struct.rar* %19, i32 0, i32 43, !dbg !6145
  %table6 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %offsetcode5, i32 0, i32 6, !dbg !6146
  %20 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table6, align 8, !dbg !6146
  %21 = bitcast %struct.huffman_table_entry* %20 to i8*, !dbg !6144
  call void @free(i8* %21) #8, !dbg !6147
  %22 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6148
  %lowoffsetcode7 = getelementptr inbounds %struct.rar, %struct.rar* %22, i32 0, i32 44, !dbg !6149
  %table8 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %lowoffsetcode7, i32 0, i32 6, !dbg !6150
  %23 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table8, align 8, !dbg !6150
  %24 = bitcast %struct.huffman_table_entry* %23 to i8*, !dbg !6148
  call void @free(i8* %24) #8, !dbg !6151
  %25 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6152
  %lengthcode9 = getelementptr inbounds %struct.rar, %struct.rar* %25, i32 0, i32 45, !dbg !6153
  %table10 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %lengthcode9, i32 0, i32 6, !dbg !6154
  %26 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table10, align 8, !dbg !6154
  %27 = bitcast %struct.huffman_table_entry* %26 to i8*, !dbg !6152
  call void @free(i8* %27) #8, !dbg !6155
  %28 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6156
  %maincode11 = getelementptr inbounds %struct.rar, %struct.rar* %28, i32 0, i32 42, !dbg !6157
  %29 = bitcast %struct.huffman_code* %maincode11 to i8*, !dbg !6158
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 40, i32 8, i1 false), !dbg !6158
  %30 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6159
  %offsetcode12 = getelementptr inbounds %struct.rar, %struct.rar* %30, i32 0, i32 43, !dbg !6160
  %31 = bitcast %struct.huffman_code* %offsetcode12 to i8*, !dbg !6161
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 40, i32 8, i1 false), !dbg !6161
  %32 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6162
  %lowoffsetcode13 = getelementptr inbounds %struct.rar, %struct.rar* %32, i32 0, i32 44, !dbg !6163
  %33 = bitcast %struct.huffman_code* %lowoffsetcode13 to i8*, !dbg !6164
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 40, i32 8, i1 false), !dbg !6164
  %34 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6165
  %lengthcode14 = getelementptr inbounds %struct.rar, %struct.rar* %34, i32 0, i32 45, !dbg !6166
  %35 = bitcast %struct.huffman_code* %lengthcode14 to i8*, !dbg !6167
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 40, i32 8, i1 false), !dbg !6167
  ret void, !dbg !6168
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @ppmd_read(i8* %p) #0 !dbg !598 {
entry:
  %retval = alloca i8, align 1
  %p.addr = alloca i8*, align 8
  %a = alloca %struct.archive_read*, align 8
  %rar = alloca %struct.rar*, align 8
  %br = alloca %struct.rar_br*, align 8
  %b = alloca i8, align 1
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6169, metadata !677), !dbg !6170
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a, metadata !6171, metadata !677), !dbg !6172
  %0 = load i8*, i8** %p.addr, align 8, !dbg !6173
  %1 = bitcast i8* %0 to %struct.IByteIn*, !dbg !6174
  %a1 = getelementptr inbounds %struct.IByteIn, %struct.IByteIn* %1, i32 0, i32 0, !dbg !6175
  %2 = load %struct.archive_read*, %struct.archive_read** %a1, align 8, !dbg !6175
  store %struct.archive_read* %2, %struct.archive_read** %a, align 8, !dbg !6172
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !6176, metadata !677), !dbg !6177
  %3 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !6178
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %3, i32 0, i32 13, !dbg !6179
  %4 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !6179
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %4, i32 0, i32 0, !dbg !6180
  %5 = load i8*, i8** %data, align 8, !dbg !6180
  %6 = bitcast i8* %5 to %struct.rar*, !dbg !6181
  store %struct.rar* %6, %struct.rar** %rar, align 8, !dbg !6177
  call void @llvm.dbg.declare(metadata %struct.rar_br** %br, metadata !6182, metadata !677), !dbg !6183
  %7 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6184
  %br2 = getelementptr inbounds %struct.rar, %struct.rar* %7, i32 0, i32 68, !dbg !6185
  store %struct.rar_br* %br2, %struct.rar_br** %br, align 8, !dbg !6183
  call void @llvm.dbg.declare(metadata i8* %b, metadata !6186, metadata !677), !dbg !6187
  %8 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6188
  %cache_avail = getelementptr inbounds %struct.rar_br, %struct.rar_br* %8, i32 0, i32 1, !dbg !6188
  %9 = load i32, i32* %cache_avail, align 8, !dbg !6188
  %cmp = icmp sge i32 %9, 8, !dbg !6188
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !6188

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !6190
  %11 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6190
  %call = call i32 @rar_br_fillup(%struct.archive_read* %10, %struct.rar_br* %11), !dbg !6190
  %tobool = icmp ne i32 %call, 0, !dbg !6190
  br i1 %tobool, label %if.end, label %lor.lhs.false3, !dbg !6190

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %12 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6192
  %cache_avail4 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %12, i32 0, i32 1, !dbg !6192
  %13 = load i32, i32* %cache_avail4, align 8, !dbg !6192
  %cmp5 = icmp sge i32 %13, 8, !dbg !6192
  br i1 %cmp5, label %if.end, label %if.then, !dbg !6194

if.then:                                          ; preds = %lor.lhs.false3
  %14 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !6195
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !6197
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !6198
  %15 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6199
  %valid = getelementptr inbounds %struct.rar, %struct.rar* %15, i32 0, i32 29, !dbg !6200
  store i8 0, i8* %valid, align 8, !dbg !6201
  store i8 0, i8* %retval, align 1, !dbg !6202
  br label %return, !dbg !6202

if.end:                                           ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %16 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6203
  %cache_buffer = getelementptr inbounds %struct.rar_br, %struct.rar_br* %16, i32 0, i32 0, !dbg !6203
  %17 = load i64, i64* %cache_buffer, align 8, !dbg !6203
  %18 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6203
  %cache_avail6 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %18, i32 0, i32 1, !dbg !6203
  %19 = load i32, i32* %cache_avail6, align 8, !dbg !6203
  %sub = sub nsw i32 %19, 8, !dbg !6203
  %sh_prom = zext i32 %sub to i64, !dbg !6203
  %shr = lshr i64 %17, %sh_prom, !dbg !6203
  %conv = trunc i64 %shr to i32, !dbg !6203
  %20 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 8), align 16, !dbg !6203
  %and = and i32 %conv, %20, !dbg !6203
  %conv7 = trunc i32 %and to i8, !dbg !6203
  store i8 %conv7, i8* %b, align 1, !dbg !6204
  %21 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6205
  %cache_avail8 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %21, i32 0, i32 1, !dbg !6205
  %22 = load i32, i32* %cache_avail8, align 8, !dbg !6205
  %sub9 = sub nsw i32 %22, 8, !dbg !6205
  store i32 %sub9, i32* %cache_avail8, align 8, !dbg !6205
  %23 = load i8, i8* %b, align 1, !dbg !6206
  store i8 %23, i8* %retval, align 1, !dbg !6207
  br label %return, !dbg !6207

return:                                           ; preds = %if.end, %if.then
  %24 = load i8, i8* %retval, align 1, !dbg !6208
  ret i8 %24, !dbg !6208
}

; Function Attrs: nounwind uwtable
define internal i32 @create_code(%struct.archive_read* %a, %struct.huffman_code* %code, i8* %lengths, i32 %numsymbols, i8 signext %maxlength) #0 !dbg !599 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %code.addr = alloca %struct.huffman_code*, align 8
  %lengths.addr = alloca i8*, align 8
  %numsymbols.addr = alloca i32, align 4
  %maxlength.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %codebits = alloca i32, align 4
  %symbolsleft = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6209, metadata !677), !dbg !6210
  store %struct.huffman_code* %code, %struct.huffman_code** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman_code** %code.addr, metadata !6211, metadata !677), !dbg !6212
  store i8* %lengths, i8** %lengths.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %lengths.addr, metadata !6213, metadata !677), !dbg !6214
  store i32 %numsymbols, i32* %numsymbols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsymbols.addr, metadata !6215, metadata !677), !dbg !6216
  store i8 %maxlength, i8* %maxlength.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %maxlength.addr, metadata !6217, metadata !677), !dbg !6218
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6219, metadata !677), !dbg !6220
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6221, metadata !677), !dbg !6222
  call void @llvm.dbg.declare(metadata i32* %codebits, metadata !6223, metadata !677), !dbg !6224
  store i32 0, i32* %codebits, align 4, !dbg !6224
  call void @llvm.dbg.declare(metadata i32* %symbolsleft, metadata !6225, metadata !677), !dbg !6226
  %0 = load i32, i32* %numsymbols.addr, align 4, !dbg !6227
  store i32 %0, i32* %symbolsleft, align 4, !dbg !6226
  %1 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6228
  %numentries = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %1, i32 0, i32 1, !dbg !6229
  store i32 0, i32* %numentries, align 8, !dbg !6230
  %2 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6231
  %numallocatedentries = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %2, i32 0, i32 2, !dbg !6232
  store i32 0, i32* %numallocatedentries, align 4, !dbg !6233
  %3 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6234
  %call = call i32 @new_node(%struct.huffman_code* %3), !dbg !6236
  %cmp = icmp slt i32 %call, 0, !dbg !6237
  br i1 %cmp, label %if.then, label %if.end, !dbg !6238

if.then:                                          ; preds = %entry
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6239
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %4, i32 0, i32 0, !dbg !6241
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i32 0, i32 0)), !dbg !6242
  store i32 -30, i32* %retval, align 4, !dbg !6243
  br label %return, !dbg !6243

if.end:                                           ; preds = %entry
  %5 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6244
  %numentries1 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %5, i32 0, i32 1, !dbg !6245
  store i32 1, i32* %numentries1, align 8, !dbg !6246
  %6 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6247
  %minlength = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %6, i32 0, i32 3, !dbg !6248
  store i32 2147483647, i32* %minlength, align 8, !dbg !6249
  %7 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6250
  %maxlength2 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %7, i32 0, i32 4, !dbg !6251
  store i32 -2147483648, i32* %maxlength2, align 4, !dbg !6252
  store i32 0, i32* %codebits, align 4, !dbg !6253
  store i32 1, i32* %i, align 4, !dbg !6254
  br label %for.cond, !dbg !6256

for.cond:                                         ; preds = %for.inc24, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !6257
  %9 = load i8, i8* %maxlength.addr, align 1, !dbg !6260
  %conv = sext i8 %9 to i32, !dbg !6260
  %cmp3 = icmp sle i32 %8, %conv, !dbg !6261
  br i1 %cmp3, label %for.body, label %for.end26, !dbg !6262

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6263
  br label %for.cond5, !dbg !6266

for.cond5:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %j, align 4, !dbg !6267
  %11 = load i32, i32* %numsymbols.addr, align 4, !dbg !6270
  %cmp6 = icmp slt i32 %10, %11, !dbg !6271
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !6272

for.body8:                                        ; preds = %for.cond5
  %12 = load i32, i32* %j, align 4, !dbg !6273
  %idxprom = sext i32 %12 to i64, !dbg !6276
  %13 = load i8*, i8** %lengths.addr, align 8, !dbg !6276
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 %idxprom, !dbg !6276
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6276
  %conv9 = zext i8 %14 to i32, !dbg !6276
  %15 = load i32, i32* %i, align 4, !dbg !6277
  %cmp10 = icmp ne i32 %conv9, %15, !dbg !6278
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6279

if.then12:                                        ; preds = %for.body8
  br label %for.inc, !dbg !6280

if.end13:                                         ; preds = %for.body8
  %16 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6282
  %17 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6284
  %18 = load i32, i32* %j, align 4, !dbg !6285
  %19 = load i32, i32* %codebits, align 4, !dbg !6286
  %20 = load i32, i32* %i, align 4, !dbg !6287
  %call14 = call i32 @add_value(%struct.archive_read* %16, %struct.huffman_code* %17, i32 %18, i32 %19, i32 %20), !dbg !6288
  %cmp15 = icmp ne i32 %call14, 0, !dbg !6289
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !6290

if.then17:                                        ; preds = %if.end13
  store i32 -30, i32* %retval, align 4, !dbg !6291
  br label %return, !dbg !6291

if.end18:                                         ; preds = %if.end13
  %21 = load i32, i32* %codebits, align 4, !dbg !6292
  %inc = add nsw i32 %21, 1, !dbg !6292
  store i32 %inc, i32* %codebits, align 4, !dbg !6292
  %22 = load i32, i32* %symbolsleft, align 4, !dbg !6293
  %dec = add nsw i32 %22, -1, !dbg !6293
  store i32 %dec, i32* %symbolsleft, align 4, !dbg !6293
  %cmp19 = icmp sle i32 %dec, 0, !dbg !6295
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !6296

if.then21:                                        ; preds = %if.end18
  br label %for.end, !dbg !6297

if.end22:                                         ; preds = %if.end18
  br label %for.inc, !dbg !6300

for.inc:                                          ; preds = %if.end22, %if.then12
  %23 = load i32, i32* %j, align 4, !dbg !6301
  %inc23 = add nsw i32 %23, 1, !dbg !6301
  store i32 %inc23, i32* %j, align 4, !dbg !6301
  br label %for.cond5, !dbg !6303

for.end:                                          ; preds = %if.then21, %for.cond5
  %24 = load i32, i32* %codebits, align 4, !dbg !6304
  %shl = shl i32 %24, 1, !dbg !6304
  store i32 %shl, i32* %codebits, align 4, !dbg !6304
  br label %for.inc24, !dbg !6305

for.inc24:                                        ; preds = %for.end
  %25 = load i32, i32* %i, align 4, !dbg !6306
  %inc25 = add nsw i32 %25, 1, !dbg !6306
  store i32 %inc25, i32* %i, align 4, !dbg !6306
  br label %for.cond, !dbg !6308

for.end26:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6309
  br label %return, !dbg !6309

return:                                           ; preds = %for.end26, %if.then17, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !6310
  ret i32 %26, !dbg !6310
}

; Function Attrs: nounwind uwtable
define internal i32 @read_next_symbol(%struct.archive_read* %a, %struct.huffman_code* %code) #0 !dbg !609 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %code.addr = alloca %struct.huffman_code*, align 8
  %bit = alloca i8, align 1
  %bits = alloca i32, align 4
  %length = alloca i32, align 4
  %value = alloca i32, align 4
  %node = alloca i32, align 4
  %rar = alloca %struct.rar*, align 8
  %br = alloca %struct.rar_br*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6311, metadata !677), !dbg !6312
  store %struct.huffman_code* %code, %struct.huffman_code** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman_code** %code.addr, metadata !6313, metadata !677), !dbg !6314
  call void @llvm.dbg.declare(metadata i8* %bit, metadata !6315, metadata !677), !dbg !6316
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !6317, metadata !677), !dbg !6318
  call void @llvm.dbg.declare(metadata i32* %length, metadata !6319, metadata !677), !dbg !6320
  call void @llvm.dbg.declare(metadata i32* %value, metadata !6321, metadata !677), !dbg !6322
  call void @llvm.dbg.declare(metadata i32* %node, metadata !6323, metadata !677), !dbg !6324
  call void @llvm.dbg.declare(metadata %struct.rar** %rar, metadata !6325, metadata !677), !dbg !6326
  call void @llvm.dbg.declare(metadata %struct.rar_br** %br, metadata !6327, metadata !677), !dbg !6328
  %0 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6329
  %table = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %0, i32 0, i32 6, !dbg !6331
  %1 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table, align 8, !dbg !6331
  %tobool = icmp ne %struct.huffman_table_entry* %1, null, !dbg !6329
  br i1 %tobool, label %if.end2, label %if.then, !dbg !6332

if.then:                                          ; preds = %entry
  %2 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6333
  %3 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6336
  %call = call i32 @make_table(%struct.archive_read* %2, %struct.huffman_code* %3), !dbg !6337
  %cmp = icmp ne i32 %call, 0, !dbg !6338
  br i1 %cmp, label %if.then1, label %if.end, !dbg !6339

if.then1:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !6340
  br label %return, !dbg !6340

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !6341

if.end2:                                          ; preds = %if.end, %entry
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6342
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %4, i32 0, i32 13, !dbg !6343
  %5 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !6343
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %5, i32 0, i32 0, !dbg !6344
  %6 = load i8*, i8** %data, align 8, !dbg !6344
  %7 = bitcast i8* %6 to %struct.rar*, !dbg !6345
  store %struct.rar* %7, %struct.rar** %rar, align 8, !dbg !6346
  %8 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6347
  %br3 = getelementptr inbounds %struct.rar, %struct.rar* %8, i32 0, i32 68, !dbg !6348
  store %struct.rar_br* %br3, %struct.rar_br** %br, align 8, !dbg !6349
  %9 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6350
  %cache_avail = getelementptr inbounds %struct.rar_br, %struct.rar_br* %9, i32 0, i32 1, !dbg !6350
  %10 = load i32, i32* %cache_avail, align 8, !dbg !6350
  %11 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6350
  %tablesize = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %11, i32 0, i32 5, !dbg !6350
  %12 = load i32, i32* %tablesize, align 8, !dbg !6350
  %cmp4 = icmp sge i32 %10, %12, !dbg !6350
  br i1 %cmp4, label %if.end12, label %lor.lhs.false, !dbg !6350

lor.lhs.false:                                    ; preds = %if.end2
  %13 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6352
  %14 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6352
  %call5 = call i32 @rar_br_fillup(%struct.archive_read* %13, %struct.rar_br* %14), !dbg !6352
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6352
  br i1 %tobool6, label %if.end12, label %lor.lhs.false7, !dbg !6352

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %15 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6354
  %cache_avail8 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %15, i32 0, i32 1, !dbg !6354
  %16 = load i32, i32* %cache_avail8, align 8, !dbg !6354
  %17 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6354
  %tablesize9 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %17, i32 0, i32 5, !dbg !6354
  %18 = load i32, i32* %tablesize9, align 8, !dbg !6354
  %cmp10 = icmp sge i32 %16, %18, !dbg !6354
  br i1 %cmp10, label %if.end12, label %if.then11, !dbg !6356

if.then11:                                        ; preds = %lor.lhs.false7
  %19 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6357
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %19, i32 0, i32 0, !dbg !6359
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !6360
  %20 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6361
  %valid = getelementptr inbounds %struct.rar, %struct.rar* %20, i32 0, i32 29, !dbg !6362
  store i8 0, i8* %valid, align 8, !dbg !6363
  store i32 -1, i32* %retval, align 4, !dbg !6364
  br label %return, !dbg !6364

if.end12:                                         ; preds = %lor.lhs.false7, %lor.lhs.false, %if.end2
  %21 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6365
  %cache_buffer = getelementptr inbounds %struct.rar_br, %struct.rar_br* %21, i32 0, i32 0, !dbg !6365
  %22 = load i64, i64* %cache_buffer, align 8, !dbg !6365
  %23 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6365
  %cache_avail13 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %23, i32 0, i32 1, !dbg !6365
  %24 = load i32, i32* %cache_avail13, align 8, !dbg !6365
  %25 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6365
  %tablesize14 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %25, i32 0, i32 5, !dbg !6365
  %26 = load i32, i32* %tablesize14, align 8, !dbg !6365
  %sub = sub nsw i32 %24, %26, !dbg !6365
  %sh_prom = zext i32 %sub to i64, !dbg !6365
  %shr = lshr i64 %22, %sh_prom, !dbg !6365
  %conv = trunc i64 %shr to i32, !dbg !6365
  %27 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6365
  %tablesize15 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %27, i32 0, i32 5, !dbg !6365
  %28 = load i32, i32* %tablesize15, align 8, !dbg !6365
  %idxprom = sext i32 %28 to i64, !dbg !6365
  %arrayidx = getelementptr inbounds [36 x i32], [36 x i32]* @cache_masks, i64 0, i64 %idxprom, !dbg !6365
  %29 = load i32, i32* %arrayidx, align 4, !dbg !6365
  %and = and i32 %conv, %29, !dbg !6365
  store i32 %and, i32* %bits, align 4, !dbg !6366
  %30 = load i32, i32* %bits, align 4, !dbg !6367
  %idxprom16 = zext i32 %30 to i64, !dbg !6368
  %31 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6368
  %table17 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %31, i32 0, i32 6, !dbg !6369
  %32 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table17, align 8, !dbg !6369
  %arrayidx18 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %32, i64 %idxprom16, !dbg !6368
  %length19 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %arrayidx18, i32 0, i32 0, !dbg !6370
  %33 = load i32, i32* %length19, align 4, !dbg !6370
  store i32 %33, i32* %length, align 4, !dbg !6371
  %34 = load i32, i32* %bits, align 4, !dbg !6372
  %idxprom20 = zext i32 %34 to i64, !dbg !6373
  %35 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6373
  %table21 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %35, i32 0, i32 6, !dbg !6374
  %36 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table21, align 8, !dbg !6374
  %arrayidx22 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %36, i64 %idxprom20, !dbg !6373
  %value23 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %arrayidx22, i32 0, i32 1, !dbg !6375
  %37 = load i32, i32* %value23, align 4, !dbg !6375
  store i32 %37, i32* %value, align 4, !dbg !6376
  %38 = load i32, i32* %length, align 4, !dbg !6377
  %cmp24 = icmp slt i32 %38, 0, !dbg !6379
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !6380

if.then26:                                        ; preds = %if.end12
  %39 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6381
  %archive27 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %39, i32 0, i32 0, !dbg !6383
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive27, i32 84, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i32 0, i32 0)), !dbg !6384
  store i32 -1, i32* %retval, align 4, !dbg !6385
  br label %return, !dbg !6385

if.end28:                                         ; preds = %if.end12
  %40 = load i32, i32* %length, align 4, !dbg !6386
  %41 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6388
  %tablesize29 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %41, i32 0, i32 5, !dbg !6389
  %42 = load i32, i32* %tablesize29, align 8, !dbg !6389
  %cmp30 = icmp sle i32 %40, %42, !dbg !6390
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !6391

if.then32:                                        ; preds = %if.end28
  %43 = load i32, i32* %length, align 4, !dbg !6392
  %44 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6392
  %cache_avail33 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %44, i32 0, i32 1, !dbg !6392
  %45 = load i32, i32* %cache_avail33, align 8, !dbg !6392
  %sub34 = sub nsw i32 %45, %43, !dbg !6392
  store i32 %sub34, i32* %cache_avail33, align 8, !dbg !6392
  %46 = load i32, i32* %value, align 4, !dbg !6394
  store i32 %46, i32* %retval, align 4, !dbg !6395
  br label %return, !dbg !6395

if.end35:                                         ; preds = %if.end28
  %47 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6396
  %tablesize36 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %47, i32 0, i32 5, !dbg !6396
  %48 = load i32, i32* %tablesize36, align 8, !dbg !6396
  %49 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6396
  %cache_avail37 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %49, i32 0, i32 1, !dbg !6396
  %50 = load i32, i32* %cache_avail37, align 8, !dbg !6396
  %sub38 = sub nsw i32 %50, %48, !dbg !6396
  store i32 %sub38, i32* %cache_avail37, align 8, !dbg !6396
  %51 = load i32, i32* %value, align 4, !dbg !6397
  store i32 %51, i32* %node, align 4, !dbg !6398
  br label %while.cond, !dbg !6399

while.cond:                                       ; preds = %if.end83, %if.end35
  %52 = load i32, i32* %node, align 4, !dbg !6400
  %idxprom39 = sext i32 %52 to i64, !dbg !6402
  %53 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6402
  %tree = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %53, i32 0, i32 0, !dbg !6403
  %54 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree, align 8, !dbg !6403
  %arrayidx40 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %54, i64 %idxprom39, !dbg !6402
  %branches = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx40, i32 0, i32 0, !dbg !6404
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %branches, i64 0, i64 0, !dbg !6402
  %55 = load i32, i32* %arrayidx41, align 4, !dbg !6402
  %56 = load i32, i32* %node, align 4, !dbg !6405
  %idxprom42 = sext i32 %56 to i64, !dbg !6406
  %57 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6406
  %tree43 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %57, i32 0, i32 0, !dbg !6407
  %58 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree43, align 8, !dbg !6407
  %arrayidx44 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %58, i64 %idxprom42, !dbg !6406
  %branches45 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx44, i32 0, i32 0, !dbg !6408
  %arrayidx46 = getelementptr inbounds [2 x i32], [2 x i32]* %branches45, i64 0, i64 1, !dbg !6406
  %59 = load i32, i32* %arrayidx46, align 4, !dbg !6406
  %cmp47 = icmp eq i32 %55, %59, !dbg !6409
  %lnot = xor i1 %cmp47, true, !dbg !6410
  br i1 %lnot, label %while.body, label %while.end, !dbg !6411

while.body:                                       ; preds = %while.cond
  %60 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6412
  %cache_avail49 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %60, i32 0, i32 1, !dbg !6412
  %61 = load i32, i32* %cache_avail49, align 8, !dbg !6412
  %cmp50 = icmp sge i32 %61, 1, !dbg !6412
  br i1 %cmp50, label %if.end62, label %lor.lhs.false52, !dbg !6412

lor.lhs.false52:                                  ; preds = %while.body
  %62 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6415
  %63 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6415
  %call53 = call i32 @rar_br_fillup(%struct.archive_read* %62, %struct.rar_br* %63), !dbg !6415
  %tobool54 = icmp ne i32 %call53, 0, !dbg !6415
  br i1 %tobool54, label %if.end62, label %lor.lhs.false55, !dbg !6415

lor.lhs.false55:                                  ; preds = %lor.lhs.false52
  %64 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6417
  %cache_avail56 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %64, i32 0, i32 1, !dbg !6417
  %65 = load i32, i32* %cache_avail56, align 8, !dbg !6417
  %cmp57 = icmp sge i32 %65, 1, !dbg !6417
  br i1 %cmp57, label %if.end62, label %if.then59, !dbg !6419

if.then59:                                        ; preds = %lor.lhs.false55
  %66 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6420
  %archive60 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %66, i32 0, i32 0, !dbg !6422
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive60, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0)), !dbg !6423
  %67 = load %struct.rar*, %struct.rar** %rar, align 8, !dbg !6424
  %valid61 = getelementptr inbounds %struct.rar, %struct.rar* %67, i32 0, i32 29, !dbg !6425
  store i8 0, i8* %valid61, align 8, !dbg !6426
  store i32 -1, i32* %retval, align 4, !dbg !6427
  br label %return, !dbg !6427

if.end62:                                         ; preds = %lor.lhs.false55, %lor.lhs.false52, %while.body
  %68 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6428
  %cache_buffer63 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %68, i32 0, i32 0, !dbg !6428
  %69 = load i64, i64* %cache_buffer63, align 8, !dbg !6428
  %70 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6428
  %cache_avail64 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %70, i32 0, i32 1, !dbg !6428
  %71 = load i32, i32* %cache_avail64, align 8, !dbg !6428
  %sub65 = sub nsw i32 %71, 1, !dbg !6428
  %sh_prom66 = zext i32 %sub65 to i64, !dbg !6428
  %shr67 = lshr i64 %69, %sh_prom66, !dbg !6428
  %conv68 = trunc i64 %shr67 to i32, !dbg !6428
  %72 = load i32, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @cache_masks, i64 0, i64 1), align 4, !dbg !6428
  %and69 = and i32 %conv68, %72, !dbg !6428
  %conv70 = trunc i32 %and69 to i8, !dbg !6428
  store i8 %conv70, i8* %bit, align 1, !dbg !6429
  %73 = load %struct.rar_br*, %struct.rar_br** %br, align 8, !dbg !6430
  %cache_avail71 = getelementptr inbounds %struct.rar_br, %struct.rar_br* %73, i32 0, i32 1, !dbg !6430
  %74 = load i32, i32* %cache_avail71, align 8, !dbg !6430
  %sub72 = sub nsw i32 %74, 1, !dbg !6430
  store i32 %sub72, i32* %cache_avail71, align 8, !dbg !6430
  %75 = load i8, i8* %bit, align 1, !dbg !6431
  %idxprom73 = zext i8 %75 to i64, !dbg !6433
  %76 = load i32, i32* %node, align 4, !dbg !6434
  %idxprom74 = sext i32 %76 to i64, !dbg !6433
  %77 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6433
  %tree75 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %77, i32 0, i32 0, !dbg !6435
  %78 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree75, align 8, !dbg !6435
  %arrayidx76 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %78, i64 %idxprom74, !dbg !6433
  %branches77 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx76, i32 0, i32 0, !dbg !6436
  %arrayidx78 = getelementptr inbounds [2 x i32], [2 x i32]* %branches77, i64 0, i64 %idxprom73, !dbg !6433
  %79 = load i32, i32* %arrayidx78, align 4, !dbg !6433
  %cmp79 = icmp slt i32 %79, 0, !dbg !6437
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !6438

if.then81:                                        ; preds = %if.end62
  %80 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6439
  %archive82 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %80, i32 0, i32 0, !dbg !6441
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive82, i32 84, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i32 0, i32 0)), !dbg !6442
  store i32 -1, i32* %retval, align 4, !dbg !6443
  br label %return, !dbg !6443

if.end83:                                         ; preds = %if.end62
  %81 = load i8, i8* %bit, align 1, !dbg !6444
  %idxprom84 = zext i8 %81 to i64, !dbg !6445
  %82 = load i32, i32* %node, align 4, !dbg !6446
  %idxprom85 = sext i32 %82 to i64, !dbg !6445
  %83 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6445
  %tree86 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %83, i32 0, i32 0, !dbg !6447
  %84 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree86, align 8, !dbg !6447
  %arrayidx87 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %84, i64 %idxprom85, !dbg !6445
  %branches88 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx87, i32 0, i32 0, !dbg !6448
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %branches88, i64 0, i64 %idxprom84, !dbg !6445
  %85 = load i32, i32* %arrayidx89, align 4, !dbg !6445
  store i32 %85, i32* %node, align 4, !dbg !6449
  br label %while.cond, !dbg !6450

while.end:                                        ; preds = %while.cond
  %86 = load i32, i32* %node, align 4, !dbg !6452
  %idxprom90 = sext i32 %86 to i64, !dbg !6453
  %87 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6453
  %tree91 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %87, i32 0, i32 0, !dbg !6454
  %88 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree91, align 8, !dbg !6454
  %arrayidx92 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %88, i64 %idxprom90, !dbg !6453
  %branches93 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx92, i32 0, i32 0, !dbg !6455
  %arrayidx94 = getelementptr inbounds [2 x i32], [2 x i32]* %branches93, i64 0, i64 0, !dbg !6453
  %89 = load i32, i32* %arrayidx94, align 4, !dbg !6453
  store i32 %89, i32* %retval, align 4, !dbg !6456
  br label %return, !dbg !6456

return:                                           ; preds = %while.end, %if.then81, %if.then59, %if.then32, %if.then26, %if.then11, %if.then1
  %90 = load i32, i32* %retval, align 4, !dbg !6457
  ret i32 %90, !dbg !6457
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rar_fls(i32 %word) #5 !dbg !616 {
entry:
  %word.addr = alloca i32, align 4
  store i32 %word, i32* %word.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %word.addr, metadata !6458, metadata !677), !dbg !6459
  %0 = load i32, i32* %word.addr, align 4, !dbg !6460
  %shr = lshr i32 %0, 1, !dbg !6461
  %1 = load i32, i32* %word.addr, align 4, !dbg !6462
  %or = or i32 %1, %shr, !dbg !6462
  store i32 %or, i32* %word.addr, align 4, !dbg !6462
  %2 = load i32, i32* %word.addr, align 4, !dbg !6463
  %shr1 = lshr i32 %2, 2, !dbg !6464
  %3 = load i32, i32* %word.addr, align 4, !dbg !6465
  %or2 = or i32 %3, %shr1, !dbg !6465
  store i32 %or2, i32* %word.addr, align 4, !dbg !6465
  %4 = load i32, i32* %word.addr, align 4, !dbg !6466
  %shr3 = lshr i32 %4, 4, !dbg !6467
  %5 = load i32, i32* %word.addr, align 4, !dbg !6468
  %or4 = or i32 %5, %shr3, !dbg !6468
  store i32 %or4, i32* %word.addr, align 4, !dbg !6468
  %6 = load i32, i32* %word.addr, align 4, !dbg !6469
  %shr5 = lshr i32 %6, 8, !dbg !6470
  %7 = load i32, i32* %word.addr, align 4, !dbg !6471
  %or6 = or i32 %7, %shr5, !dbg !6471
  store i32 %or6, i32* %word.addr, align 4, !dbg !6471
  %8 = load i32, i32* %word.addr, align 4, !dbg !6472
  %shr7 = lshr i32 %8, 16, !dbg !6473
  %9 = load i32, i32* %word.addr, align 4, !dbg !6474
  %or8 = or i32 %9, %shr7, !dbg !6474
  store i32 %or8, i32* %word.addr, align 4, !dbg !6474
  %10 = load i32, i32* %word.addr, align 4, !dbg !6475
  %11 = load i32, i32* %word.addr, align 4, !dbg !6476
  %shr9 = lshr i32 %11, 1, !dbg !6477
  %sub = sub i32 %10, %shr9, !dbg !6478
  ret i32 %sub, !dbg !6479
}

; Function Attrs: nounwind uwtable
define internal i32 @new_node(%struct.huffman_code* %code) #0 !dbg !603 {
entry:
  %retval = alloca i32, align 4
  %code.addr = alloca %struct.huffman_code*, align 8
  %new_tree = alloca i8*, align 8
  %new_num_entries = alloca i32, align 4
  store %struct.huffman_code* %code, %struct.huffman_code** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman_code** %code.addr, metadata !6480, metadata !677), !dbg !6481
  call void @llvm.dbg.declare(metadata i8** %new_tree, metadata !6482, metadata !677), !dbg !6483
  %0 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6484
  %numallocatedentries = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %0, i32 0, i32 2, !dbg !6486
  %1 = load i32, i32* %numallocatedentries, align 4, !dbg !6486
  %2 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6487
  %numentries = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %2, i32 0, i32 1, !dbg !6488
  %3 = load i32, i32* %numentries, align 8, !dbg !6488
  %cmp = icmp eq i32 %1, %3, !dbg !6489
  br i1 %cmp, label %if.then, label %if.end12, !dbg !6490

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %new_num_entries, metadata !6491, metadata !677), !dbg !6493
  store i32 256, i32* %new_num_entries, align 4, !dbg !6493
  %4 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6494
  %numentries1 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %4, i32 0, i32 1, !dbg !6496
  %5 = load i32, i32* %numentries1, align 8, !dbg !6496
  %cmp2 = icmp sgt i32 %5, 0, !dbg !6497
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !6498

if.then3:                                         ; preds = %if.then
  %6 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6499
  %numentries4 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %6, i32 0, i32 1, !dbg !6501
  %7 = load i32, i32* %numentries4, align 8, !dbg !6501
  %mul = mul nsw i32 %7, 2, !dbg !6502
  store i32 %mul, i32* %new_num_entries, align 4, !dbg !6503
  br label %if.end, !dbg !6504

if.end:                                           ; preds = %if.then3, %if.then
  %8 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6505
  %tree = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %8, i32 0, i32 0, !dbg !6506
  %9 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree, align 8, !dbg !6506
  %10 = bitcast %struct.huffman_tree_node* %9 to i8*, !dbg !6505
  %11 = load i32, i32* %new_num_entries, align 4, !dbg !6507
  %conv = sext i32 %11 to i64, !dbg !6507
  %mul5 = mul i64 %conv, 8, !dbg !6508
  %call = call i8* @realloc(i8* %10, i64 %mul5) #8, !dbg !6509
  store i8* %call, i8** %new_tree, align 8, !dbg !6510
  %12 = load i8*, i8** %new_tree, align 8, !dbg !6511
  %cmp6 = icmp eq i8* %12, null, !dbg !6513
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !6514

if.then8:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !6515
  br label %return, !dbg !6515

if.end9:                                          ; preds = %if.end
  %13 = load i8*, i8** %new_tree, align 8, !dbg !6516
  %14 = bitcast i8* %13 to %struct.huffman_tree_node*, !dbg !6517
  %15 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6518
  %tree10 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %15, i32 0, i32 0, !dbg !6519
  store %struct.huffman_tree_node* %14, %struct.huffman_tree_node** %tree10, align 8, !dbg !6520
  %16 = load i32, i32* %new_num_entries, align 4, !dbg !6521
  %17 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6522
  %numallocatedentries11 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %17, i32 0, i32 2, !dbg !6523
  store i32 %16, i32* %numallocatedentries11, align 4, !dbg !6524
  br label %if.end12, !dbg !6525

if.end12:                                         ; preds = %if.end9, %entry
  %18 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6526
  %numentries13 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %18, i32 0, i32 1, !dbg !6527
  %19 = load i32, i32* %numentries13, align 8, !dbg !6527
  %idxprom = sext i32 %19 to i64, !dbg !6528
  %20 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6528
  %tree14 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %20, i32 0, i32 0, !dbg !6529
  %21 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree14, align 8, !dbg !6529
  %arrayidx = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %21, i64 %idxprom, !dbg !6528
  %branches = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx, i32 0, i32 0, !dbg !6530
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %branches, i64 0, i64 0, !dbg !6528
  store i32 -1, i32* %arrayidx15, align 4, !dbg !6531
  %22 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6532
  %numentries16 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %22, i32 0, i32 1, !dbg !6533
  %23 = load i32, i32* %numentries16, align 8, !dbg !6533
  %idxprom17 = sext i32 %23 to i64, !dbg !6534
  %24 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6534
  %tree18 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %24, i32 0, i32 0, !dbg !6535
  %25 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree18, align 8, !dbg !6535
  %arrayidx19 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %25, i64 %idxprom17, !dbg !6534
  %branches20 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx19, i32 0, i32 0, !dbg !6536
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %branches20, i64 0, i64 1, !dbg !6534
  store i32 -2, i32* %arrayidx21, align 4, !dbg !6537
  store i32 1, i32* %retval, align 4, !dbg !6538
  br label %return, !dbg !6538

return:                                           ; preds = %if.end12, %if.then8
  %26 = load i32, i32* %retval, align 4, !dbg !6539
  ret i32 %26, !dbg !6539
}

; Function Attrs: nounwind uwtable
define internal i32 @add_value(%struct.archive_read* %a, %struct.huffman_code* %code, i32 %value, i32 %codebits, i32 %length) #0 !dbg !606 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %code.addr = alloca %struct.huffman_code*, align 8
  %value.addr = alloca i32, align 4
  %codebits.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %repeatpos = alloca i32, align 4
  %lastnode = alloca i32, align 4
  %bitpos = alloca i32, align 4
  %bit = alloca i32, align 4
  %repeatnode = alloca i32, align 4
  %nextnode = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6540, metadata !677), !dbg !6541
  store %struct.huffman_code* %code, %struct.huffman_code** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman_code** %code.addr, metadata !6542, metadata !677), !dbg !6543
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6544, metadata !677), !dbg !6545
  store i32 %codebits, i32* %codebits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codebits.addr, metadata !6546, metadata !677), !dbg !6547
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !6548, metadata !677), !dbg !6549
  call void @llvm.dbg.declare(metadata i32* %repeatpos, metadata !6550, metadata !677), !dbg !6551
  call void @llvm.dbg.declare(metadata i32* %lastnode, metadata !6552, metadata !677), !dbg !6553
  call void @llvm.dbg.declare(metadata i32* %bitpos, metadata !6554, metadata !677), !dbg !6555
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !6556, metadata !677), !dbg !6557
  call void @llvm.dbg.declare(metadata i32* %repeatnode, metadata !6558, metadata !677), !dbg !6559
  call void @llvm.dbg.declare(metadata i32* %nextnode, metadata !6560, metadata !677), !dbg !6561
  %0 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6562
  %table = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %0, i32 0, i32 6, !dbg !6563
  %1 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table, align 8, !dbg !6563
  %2 = bitcast %struct.huffman_table_entry* %1 to i8*, !dbg !6562
  call void @free(i8* %2) #8, !dbg !6564
  %3 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6565
  %table1 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %3, i32 0, i32 6, !dbg !6566
  store %struct.huffman_table_entry* null, %struct.huffman_table_entry** %table1, align 8, !dbg !6567
  %4 = load i32, i32* %length.addr, align 4, !dbg !6568
  %5 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6570
  %maxlength = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %5, i32 0, i32 4, !dbg !6571
  %6 = load i32, i32* %maxlength, align 4, !dbg !6571
  %cmp = icmp sgt i32 %4, %6, !dbg !6572
  br i1 %cmp, label %if.then, label %if.end, !dbg !6573

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %length.addr, align 4, !dbg !6574
  %8 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6575
  %maxlength2 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %8, i32 0, i32 4, !dbg !6576
  store i32 %7, i32* %maxlength2, align 4, !dbg !6577
  br label %if.end, !dbg !6575

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %length.addr, align 4, !dbg !6578
  %10 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6580
  %minlength = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %10, i32 0, i32 3, !dbg !6581
  %11 = load i32, i32* %minlength, align 8, !dbg !6581
  %cmp3 = icmp slt i32 %9, %11, !dbg !6582
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !6583

if.then4:                                         ; preds = %if.end
  %12 = load i32, i32* %length.addr, align 4, !dbg !6584
  %13 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6585
  %minlength5 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %13, i32 0, i32 3, !dbg !6586
  store i32 %12, i32* %minlength5, align 8, !dbg !6587
  br label %if.end6, !dbg !6585

if.end6:                                          ; preds = %if.then4, %if.end
  store i32 -1, i32* %repeatpos, align 4, !dbg !6588
  %14 = load i32, i32* %repeatpos, align 4, !dbg !6589
  %cmp7 = icmp eq i32 %14, 0, !dbg !6591
  br i1 %cmp7, label %if.then15, label %lor.lhs.false, !dbg !6592

lor.lhs.false:                                    ; preds = %if.end6
  %15 = load i32, i32* %repeatpos, align 4, !dbg !6593
  %cmp8 = icmp sge i32 %15, 0, !dbg !6595
  br i1 %cmp8, label %land.lhs.true, label %if.end16, !dbg !6596

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load i32, i32* %codebits.addr, align 4, !dbg !6597
  %17 = load i32, i32* %repeatpos, align 4, !dbg !6598
  %sub = sub nsw i32 %17, 1, !dbg !6599
  %shr = ashr i32 %16, %sub, !dbg !6600
  %and = and i32 %shr, 3, !dbg !6601
  %cmp9 = icmp eq i32 %and, 0, !dbg !6602
  br i1 %cmp9, label %if.then15, label %lor.lhs.false10, !dbg !6603

lor.lhs.false10:                                  ; preds = %land.lhs.true
  %18 = load i32, i32* %codebits.addr, align 4, !dbg !6604
  %19 = load i32, i32* %repeatpos, align 4, !dbg !6605
  %sub11 = sub nsw i32 %19, 1, !dbg !6606
  %shr12 = ashr i32 %18, %sub11, !dbg !6607
  %and13 = and i32 %shr12, 3, !dbg !6608
  %cmp14 = icmp eq i32 %and13, 3, !dbg !6609
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !6610

if.then15:                                        ; preds = %lor.lhs.false10, %land.lhs.true, %if.end6
  %20 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6612
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %20, i32 0, i32 0, !dbg !6614
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i32 0, i32 0)), !dbg !6615
  store i32 -30, i32* %retval, align 4, !dbg !6616
  br label %return, !dbg !6616

if.end16:                                         ; preds = %lor.lhs.false10, %lor.lhs.false
  store i32 0, i32* %lastnode, align 4, !dbg !6617
  %21 = load i32, i32* %length.addr, align 4, !dbg !6618
  %sub17 = sub nsw i32 %21, 1, !dbg !6620
  store i32 %sub17, i32* %bitpos, align 4, !dbg !6621
  br label %for.cond, !dbg !6622

for.cond:                                         ; preds = %for.inc, %if.end16
  %22 = load i32, i32* %bitpos, align 4, !dbg !6623
  %cmp18 = icmp sge i32 %22, 0, !dbg !6626
  br i1 %cmp18, label %for.body, label %for.end, !dbg !6627

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %codebits.addr, align 4, !dbg !6628
  %24 = load i32, i32* %bitpos, align 4, !dbg !6630
  %shr19 = ashr i32 %23, %24, !dbg !6631
  %and20 = and i32 %shr19, 1, !dbg !6632
  store i32 %and20, i32* %bit, align 4, !dbg !6633
  %25 = load i32, i32* %lastnode, align 4, !dbg !6634
  %idxprom = sext i32 %25 to i64, !dbg !6636
  %26 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6636
  %tree = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %26, i32 0, i32 0, !dbg !6637
  %27 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree, align 8, !dbg !6637
  %arrayidx = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %27, i64 %idxprom, !dbg !6636
  %branches = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx, i32 0, i32 0, !dbg !6638
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %branches, i64 0, i64 0, !dbg !6636
  %28 = load i32, i32* %arrayidx21, align 4, !dbg !6636
  %29 = load i32, i32* %lastnode, align 4, !dbg !6639
  %idxprom22 = sext i32 %29 to i64, !dbg !6640
  %30 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6640
  %tree23 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %30, i32 0, i32 0, !dbg !6641
  %31 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree23, align 8, !dbg !6641
  %arrayidx24 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %31, i64 %idxprom22, !dbg !6640
  %branches25 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx24, i32 0, i32 0, !dbg !6642
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %branches25, i64 0, i64 1, !dbg !6640
  %32 = load i32, i32* %arrayidx26, align 4, !dbg !6640
  %cmp27 = icmp eq i32 %28, %32, !dbg !6643
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !6644

if.then28:                                        ; preds = %for.body
  %33 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6645
  %archive29 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %33, i32 0, i32 0, !dbg !6647
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive29, i32 84, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0)), !dbg !6648
  store i32 -30, i32* %retval, align 4, !dbg !6649
  br label %return, !dbg !6649

if.end30:                                         ; preds = %for.body
  %34 = load i32, i32* %bitpos, align 4, !dbg !6650
  %35 = load i32, i32* %repeatpos, align 4, !dbg !6652
  %cmp31 = icmp eq i32 %34, %35, !dbg !6653
  br i1 %cmp31, label %if.then32, label %if.else, !dbg !6654

if.then32:                                        ; preds = %if.end30
  %36 = load i32, i32* %bit, align 4, !dbg !6655
  %idxprom33 = sext i32 %36 to i64, !dbg !6658
  %37 = load i32, i32* %lastnode, align 4, !dbg !6659
  %idxprom34 = sext i32 %37 to i64, !dbg !6658
  %38 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6658
  %tree35 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %38, i32 0, i32 0, !dbg !6660
  %39 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree35, align 8, !dbg !6660
  %arrayidx36 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %39, i64 %idxprom34, !dbg !6658
  %branches37 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx36, i32 0, i32 0, !dbg !6661
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %branches37, i64 0, i64 %idxprom33, !dbg !6658
  %40 = load i32, i32* %arrayidx38, align 4, !dbg !6658
  %cmp39 = icmp slt i32 %40, 0, !dbg !6662
  br i1 %cmp39, label %if.end42, label %if.then40, !dbg !6663

if.then40:                                        ; preds = %if.then32
  %41 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6664
  %archive41 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %41, i32 0, i32 0, !dbg !6666
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive41, i32 84, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i32 0, i32 0)), !dbg !6667
  store i32 -30, i32* %retval, align 4, !dbg !6668
  br label %return, !dbg !6668

if.end42:                                         ; preds = %if.then32
  %42 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6669
  %call = call i32 @new_node(%struct.huffman_code* %42), !dbg !6671
  store i32 %call, i32* %repeatnode, align 4, !dbg !6672
  %cmp43 = icmp slt i32 %call, 0, !dbg !6673
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !6674

if.then44:                                        ; preds = %if.end42
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6675
  %archive45 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %43, i32 0, i32 0, !dbg !6677
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive45, i32 12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i32 0, i32 0)), !dbg !6678
  store i32 -30, i32* %retval, align 4, !dbg !6679
  br label %return, !dbg !6679

if.end46:                                         ; preds = %if.end42
  %44 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6680
  %call47 = call i32 @new_node(%struct.huffman_code* %44), !dbg !6682
  store i32 %call47, i32* %nextnode, align 4, !dbg !6683
  %cmp48 = icmp slt i32 %call47, 0, !dbg !6684
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !6685

if.then49:                                        ; preds = %if.end46
  %45 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6686
  %archive50 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %45, i32 0, i32 0, !dbg !6688
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive50, i32 12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i32 0, i32 0)), !dbg !6689
  store i32 -30, i32* %retval, align 4, !dbg !6690
  br label %return, !dbg !6690

if.end51:                                         ; preds = %if.end46
  %46 = load i32, i32* %repeatnode, align 4, !dbg !6691
  %47 = load i32, i32* %bit, align 4, !dbg !6692
  %idxprom52 = sext i32 %47 to i64, !dbg !6693
  %48 = load i32, i32* %lastnode, align 4, !dbg !6694
  %idxprom53 = sext i32 %48 to i64, !dbg !6693
  %49 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6693
  %tree54 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %49, i32 0, i32 0, !dbg !6695
  %50 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree54, align 8, !dbg !6695
  %arrayidx55 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %50, i64 %idxprom53, !dbg !6693
  %branches56 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx55, i32 0, i32 0, !dbg !6696
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %branches56, i64 0, i64 %idxprom52, !dbg !6693
  store i32 %46, i32* %arrayidx57, align 4, !dbg !6697
  %51 = load i32, i32* %repeatnode, align 4, !dbg !6698
  %52 = load i32, i32* %bit, align 4, !dbg !6699
  %idxprom58 = sext i32 %52 to i64, !dbg !6700
  %53 = load i32, i32* %repeatnode, align 4, !dbg !6701
  %idxprom59 = sext i32 %53 to i64, !dbg !6700
  %54 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6700
  %tree60 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %54, i32 0, i32 0, !dbg !6702
  %55 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree60, align 8, !dbg !6702
  %arrayidx61 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %55, i64 %idxprom59, !dbg !6700
  %branches62 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx61, i32 0, i32 0, !dbg !6703
  %arrayidx63 = getelementptr inbounds [2 x i32], [2 x i32]* %branches62, i64 0, i64 %idxprom58, !dbg !6700
  store i32 %51, i32* %arrayidx63, align 4, !dbg !6704
  %56 = load i32, i32* %nextnode, align 4, !dbg !6705
  %57 = load i32, i32* %bit, align 4, !dbg !6706
  %xor = xor i32 %57, 1, !dbg !6707
  %idxprom64 = sext i32 %xor to i64, !dbg !6708
  %58 = load i32, i32* %repeatnode, align 4, !dbg !6709
  %idxprom65 = sext i32 %58 to i64, !dbg !6708
  %59 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6708
  %tree66 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %59, i32 0, i32 0, !dbg !6710
  %60 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree66, align 8, !dbg !6710
  %arrayidx67 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %60, i64 %idxprom65, !dbg !6708
  %branches68 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx67, i32 0, i32 0, !dbg !6711
  %arrayidx69 = getelementptr inbounds [2 x i32], [2 x i32]* %branches68, i64 0, i64 %idxprom64, !dbg !6708
  store i32 %56, i32* %arrayidx69, align 4, !dbg !6712
  %61 = load i32, i32* %nextnode, align 4, !dbg !6713
  store i32 %61, i32* %lastnode, align 4, !dbg !6714
  %62 = load i32, i32* %bitpos, align 4, !dbg !6715
  %inc = add nsw i32 %62, 1, !dbg !6715
  store i32 %inc, i32* %bitpos, align 4, !dbg !6715
  br label %if.end97, !dbg !6716

if.else:                                          ; preds = %if.end30
  %63 = load i32, i32* %bit, align 4, !dbg !6717
  %idxprom70 = sext i32 %63 to i64, !dbg !6720
  %64 = load i32, i32* %lastnode, align 4, !dbg !6721
  %idxprom71 = sext i32 %64 to i64, !dbg !6720
  %65 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6720
  %tree72 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %65, i32 0, i32 0, !dbg !6722
  %66 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree72, align 8, !dbg !6722
  %arrayidx73 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %66, i64 %idxprom71, !dbg !6720
  %branches74 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx73, i32 0, i32 0, !dbg !6723
  %arrayidx75 = getelementptr inbounds [2 x i32], [2 x i32]* %branches74, i64 0, i64 %idxprom70, !dbg !6720
  %67 = load i32, i32* %arrayidx75, align 4, !dbg !6720
  %cmp76 = icmp slt i32 %67, 0, !dbg !6724
  br i1 %cmp76, label %if.then77, label %if.end90, !dbg !6725

if.then77:                                        ; preds = %if.else
  %68 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6726
  %call78 = call i32 @new_node(%struct.huffman_code* %68), !dbg !6729
  %cmp79 = icmp slt i32 %call78, 0, !dbg !6730
  br i1 %cmp79, label %if.then80, label %if.end82, !dbg !6731

if.then80:                                        ; preds = %if.then77
  %69 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6732
  %archive81 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %69, i32 0, i32 0, !dbg !6734
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive81, i32 12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i32 0, i32 0)), !dbg !6735
  store i32 -30, i32* %retval, align 4, !dbg !6736
  br label %return, !dbg !6736

if.end82:                                         ; preds = %if.then77
  %70 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6737
  %numentries = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %70, i32 0, i32 1, !dbg !6738
  %71 = load i32, i32* %numentries, align 8, !dbg !6739
  %inc83 = add nsw i32 %71, 1, !dbg !6739
  store i32 %inc83, i32* %numentries, align 8, !dbg !6739
  %72 = load i32, i32* %bit, align 4, !dbg !6740
  %idxprom84 = sext i32 %72 to i64, !dbg !6741
  %73 = load i32, i32* %lastnode, align 4, !dbg !6742
  %idxprom85 = sext i32 %73 to i64, !dbg !6741
  %74 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6741
  %tree86 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %74, i32 0, i32 0, !dbg !6743
  %75 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree86, align 8, !dbg !6743
  %arrayidx87 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %75, i64 %idxprom85, !dbg !6741
  %branches88 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx87, i32 0, i32 0, !dbg !6744
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %branches88, i64 0, i64 %idxprom84, !dbg !6741
  store i32 %71, i32* %arrayidx89, align 4, !dbg !6745
  br label %if.end90, !dbg !6746

if.end90:                                         ; preds = %if.end82, %if.else
  %76 = load i32, i32* %bit, align 4, !dbg !6747
  %idxprom91 = sext i32 %76 to i64, !dbg !6748
  %77 = load i32, i32* %lastnode, align 4, !dbg !6749
  %idxprom92 = sext i32 %77 to i64, !dbg !6748
  %78 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6748
  %tree93 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %78, i32 0, i32 0, !dbg !6750
  %79 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree93, align 8, !dbg !6750
  %arrayidx94 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %79, i64 %idxprom92, !dbg !6748
  %branches95 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx94, i32 0, i32 0, !dbg !6751
  %arrayidx96 = getelementptr inbounds [2 x i32], [2 x i32]* %branches95, i64 0, i64 %idxprom91, !dbg !6748
  %80 = load i32, i32* %arrayidx96, align 4, !dbg !6748
  store i32 %80, i32* %lastnode, align 4, !dbg !6752
  br label %if.end97

if.end97:                                         ; preds = %if.end90, %if.end51
  br label %for.inc, !dbg !6753

for.inc:                                          ; preds = %if.end97
  %81 = load i32, i32* %bitpos, align 4, !dbg !6754
  %dec = add nsw i32 %81, -1, !dbg !6754
  store i32 %dec, i32* %bitpos, align 4, !dbg !6754
  br label %for.cond, !dbg !6756

for.end:                                          ; preds = %for.cond
  %82 = load i32, i32* %lastnode, align 4, !dbg !6757
  %idxprom98 = sext i32 %82 to i64, !dbg !6759
  %83 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6759
  %tree99 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %83, i32 0, i32 0, !dbg !6760
  %84 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree99, align 8, !dbg !6760
  %arrayidx100 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %84, i64 %idxprom98, !dbg !6759
  %branches101 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx100, i32 0, i32 0, !dbg !6761
  %arrayidx102 = getelementptr inbounds [2 x i32], [2 x i32]* %branches101, i64 0, i64 0, !dbg !6759
  %85 = load i32, i32* %arrayidx102, align 4, !dbg !6759
  %cmp103 = icmp eq i32 %85, -1, !dbg !6762
  br i1 %cmp103, label %land.lhs.true104, label %if.then111, !dbg !6763

land.lhs.true104:                                 ; preds = %for.end
  %86 = load i32, i32* %lastnode, align 4, !dbg !6764
  %idxprom105 = sext i32 %86 to i64, !dbg !6766
  %87 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6766
  %tree106 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %87, i32 0, i32 0, !dbg !6767
  %88 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree106, align 8, !dbg !6767
  %arrayidx107 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %88, i64 %idxprom105, !dbg !6766
  %branches108 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx107, i32 0, i32 0, !dbg !6768
  %arrayidx109 = getelementptr inbounds [2 x i32], [2 x i32]* %branches108, i64 0, i64 1, !dbg !6766
  %89 = load i32, i32* %arrayidx109, align 4, !dbg !6766
  %cmp110 = icmp eq i32 %89, -2, !dbg !6769
  br i1 %cmp110, label %if.end113, label %if.then111, !dbg !6770

if.then111:                                       ; preds = %land.lhs.true104, %for.end
  %90 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6772
  %archive112 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %90, i32 0, i32 0, !dbg !6774
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive112, i32 84, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0)), !dbg !6775
  store i32 -30, i32* %retval, align 4, !dbg !6776
  br label %return, !dbg !6776

if.end113:                                        ; preds = %land.lhs.true104
  %91 = load i32, i32* %value.addr, align 4, !dbg !6777
  %92 = load i32, i32* %lastnode, align 4, !dbg !6778
  %idxprom114 = sext i32 %92 to i64, !dbg !6779
  %93 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6779
  %tree115 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %93, i32 0, i32 0, !dbg !6780
  %94 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree115, align 8, !dbg !6780
  %arrayidx116 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %94, i64 %idxprom114, !dbg !6779
  %branches117 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx116, i32 0, i32 0, !dbg !6781
  %arrayidx118 = getelementptr inbounds [2 x i32], [2 x i32]* %branches117, i64 0, i64 0, !dbg !6779
  store i32 %91, i32* %arrayidx118, align 4, !dbg !6782
  %95 = load i32, i32* %value.addr, align 4, !dbg !6783
  %96 = load i32, i32* %lastnode, align 4, !dbg !6784
  %idxprom119 = sext i32 %96 to i64, !dbg !6785
  %97 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6785
  %tree120 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %97, i32 0, i32 0, !dbg !6786
  %98 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree120, align 8, !dbg !6786
  %arrayidx121 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %98, i64 %idxprom119, !dbg !6785
  %branches122 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx121, i32 0, i32 0, !dbg !6787
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %branches122, i64 0, i64 1, !dbg !6785
  store i32 %95, i32* %arrayidx123, align 4, !dbg !6788
  store i32 0, i32* %retval, align 4, !dbg !6789
  br label %return, !dbg !6789

return:                                           ; preds = %if.end113, %if.then111, %if.then80, %if.then49, %if.then44, %if.then40, %if.then28, %if.then15
  %99 = load i32, i32* %retval, align 4, !dbg !6790
  ret i32 %99, !dbg !6790
}

; Function Attrs: nounwind uwtable
define internal i32 @make_table(%struct.archive_read* %a, %struct.huffman_code* %code) #0 !dbg !612 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %code.addr = alloca %struct.huffman_code*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6791, metadata !677), !dbg !6792
  store %struct.huffman_code* %code, %struct.huffman_code** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman_code** %code.addr, metadata !6793, metadata !677), !dbg !6794
  %0 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6795
  %maxlength = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %0, i32 0, i32 4, !dbg !6797
  %1 = load i32, i32* %maxlength, align 4, !dbg !6797
  %2 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6798
  %minlength = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %2, i32 0, i32 3, !dbg !6799
  %3 = load i32, i32* %minlength, align 8, !dbg !6799
  %cmp = icmp slt i32 %1, %3, !dbg !6800
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6801

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6802
  %maxlength1 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %4, i32 0, i32 4, !dbg !6804
  %5 = load i32, i32* %maxlength1, align 4, !dbg !6804
  %cmp2 = icmp sgt i32 %5, 10, !dbg !6805
  br i1 %cmp2, label %if.then, label %if.else, !dbg !6806

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6807
  %tablesize = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %6, i32 0, i32 5, !dbg !6808
  store i32 10, i32* %tablesize, align 8, !dbg !6809
  br label %if.end, !dbg !6807

if.else:                                          ; preds = %lor.lhs.false
  %7 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6810
  %maxlength3 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %7, i32 0, i32 4, !dbg !6811
  %8 = load i32, i32* %maxlength3, align 4, !dbg !6811
  %9 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6812
  %tablesize4 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %9, i32 0, i32 5, !dbg !6813
  store i32 %8, i32* %tablesize4, align 8, !dbg !6814
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6815
  %tablesize5 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %10, i32 0, i32 5, !dbg !6816
  %11 = load i32, i32* %tablesize5, align 8, !dbg !6816
  %sh_prom = zext i32 %11 to i64, !dbg !6817
  %shl = shl i64 1, %sh_prom, !dbg !6817
  %mul = mul i64 8, %shl, !dbg !6818
  %call = call noalias i8* @calloc(i64 1, i64 %mul) #8, !dbg !6819
  %12 = bitcast i8* %call to %struct.huffman_table_entry*, !dbg !6820
  %13 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6821
  %table = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %13, i32 0, i32 6, !dbg !6822
  store %struct.huffman_table_entry* %12, %struct.huffman_table_entry** %table, align 8, !dbg !6823
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6824
  %15 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6825
  %16 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6826
  %table6 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %16, i32 0, i32 6, !dbg !6827
  %17 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table6, align 8, !dbg !6827
  %18 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6828
  %tablesize7 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %18, i32 0, i32 5, !dbg !6829
  %19 = load i32, i32* %tablesize7, align 8, !dbg !6829
  %call8 = call i32 @make_table_recurse(%struct.archive_read* %14, %struct.huffman_code* %15, i32 0, %struct.huffman_table_entry* %17, i32 0, i32 %19), !dbg !6830
  ret i32 %call8, !dbg !6831
}

; Function Attrs: nounwind uwtable
define internal i32 @make_table_recurse(%struct.archive_read* %a, %struct.huffman_code* %code, i32 %node, %struct.huffman_table_entry* %table, i32 %depth, i32 %maxdepth) #0 !dbg !613 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %code.addr = alloca %struct.huffman_code*, align 8
  %node.addr = alloca i32, align 4
  %table.addr = alloca %struct.huffman_table_entry*, align 8
  %depth.addr = alloca i32, align 4
  %maxdepth.addr = alloca i32, align 4
  %currtablesize = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6832, metadata !677), !dbg !6833
  store %struct.huffman_code* %code, %struct.huffman_code** %code.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman_code** %code.addr, metadata !6834, metadata !677), !dbg !6835
  store i32 %node, i32* %node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr, metadata !6836, metadata !677), !dbg !6837
  store %struct.huffman_table_entry* %table, %struct.huffman_table_entry** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.huffman_table_entry** %table.addr, metadata !6838, metadata !677), !dbg !6839
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !6840, metadata !677), !dbg !6841
  store i32 %maxdepth, i32* %maxdepth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxdepth.addr, metadata !6842, metadata !677), !dbg !6843
  call void @llvm.dbg.declare(metadata i32* %currtablesize, metadata !6844, metadata !677), !dbg !6845
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6846, metadata !677), !dbg !6847
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6848, metadata !677), !dbg !6849
  store i32 0, i32* %ret, align 4, !dbg !6849
  %0 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6850
  %tree = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %0, i32 0, i32 0, !dbg !6852
  %1 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree, align 8, !dbg !6852
  %tobool = icmp ne %struct.huffman_tree_node* %1, null, !dbg !6850
  br i1 %tobool, label %if.end, label %if.then, !dbg !6853

if.then:                                          ; preds = %entry
  %2 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6854
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %2, i32 0, i32 0, !dbg !6856
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i32 0, i32 0)), !dbg !6857
  store i32 -30, i32* %retval, align 4, !dbg !6858
  br label %return, !dbg !6858

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %node.addr, align 4, !dbg !6859
  %cmp = icmp slt i32 %3, 0, !dbg !6861
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !6862

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %node.addr, align 4, !dbg !6863
  %5 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6865
  %numentries = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %5, i32 0, i32 1, !dbg !6866
  %6 = load i32, i32* %numentries, align 8, !dbg !6866
  %cmp1 = icmp sge i32 %4, %6, !dbg !6867
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !6868

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6869
  %archive3 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %7, i32 0, i32 0, !dbg !6871
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive3, i32 84, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.48, i32 0, i32 0)), !dbg !6872
  store i32 -30, i32* %retval, align 4, !dbg !6873
  br label %return, !dbg !6873

if.end4:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* %maxdepth.addr, align 4, !dbg !6874
  %9 = load i32, i32* %depth.addr, align 4, !dbg !6875
  %sub = sub nsw i32 %8, %9, !dbg !6876
  %shl = shl i32 1, %sub, !dbg !6877
  store i32 %shl, i32* %currtablesize, align 4, !dbg !6878
  %10 = load i32, i32* %node.addr, align 4, !dbg !6879
  %idxprom = sext i32 %10 to i64, !dbg !6881
  %11 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6881
  %tree5 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %11, i32 0, i32 0, !dbg !6882
  %12 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree5, align 8, !dbg !6882
  %arrayidx = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %12, i64 %idxprom, !dbg !6881
  %branches = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx, i32 0, i32 0, !dbg !6883
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %branches, i64 0, i64 0, !dbg !6881
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !6881
  %14 = load i32, i32* %node.addr, align 4, !dbg !6884
  %idxprom7 = sext i32 %14 to i64, !dbg !6885
  %15 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6885
  %tree8 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %15, i32 0, i32 0, !dbg !6886
  %16 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree8, align 8, !dbg !6886
  %arrayidx9 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %16, i64 %idxprom7, !dbg !6885
  %branches10 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx9, i32 0, i32 0, !dbg !6887
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %branches10, i64 0, i64 1, !dbg !6885
  %17 = load i32, i32* %arrayidx11, align 4, !dbg !6885
  %cmp12 = icmp eq i32 %13, %17, !dbg !6888
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !6889

if.then13:                                        ; preds = %if.end4
  store i32 0, i32* %i, align 4, !dbg !6890
  br label %for.cond, !dbg !6893

for.cond:                                         ; preds = %for.inc, %if.then13
  %18 = load i32, i32* %i, align 4, !dbg !6894
  %19 = load i32, i32* %currtablesize, align 4, !dbg !6897
  %cmp14 = icmp slt i32 %18, %19, !dbg !6898
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6899

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %depth.addr, align 4, !dbg !6900
  %21 = load i32, i32* %i, align 4, !dbg !6902
  %idxprom15 = sext i32 %21 to i64, !dbg !6903
  %22 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table.addr, align 8, !dbg !6903
  %arrayidx16 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %22, i64 %idxprom15, !dbg !6903
  %length = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %arrayidx16, i32 0, i32 0, !dbg !6904
  store i32 %20, i32* %length, align 4, !dbg !6905
  %23 = load i32, i32* %node.addr, align 4, !dbg !6906
  %idxprom17 = sext i32 %23 to i64, !dbg !6907
  %24 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6907
  %tree18 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %24, i32 0, i32 0, !dbg !6908
  %25 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree18, align 8, !dbg !6908
  %arrayidx19 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %25, i64 %idxprom17, !dbg !6907
  %branches20 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx19, i32 0, i32 0, !dbg !6909
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %branches20, i64 0, i64 0, !dbg !6907
  %26 = load i32, i32* %arrayidx21, align 4, !dbg !6907
  %27 = load i32, i32* %i, align 4, !dbg !6910
  %idxprom22 = sext i32 %27 to i64, !dbg !6911
  %28 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table.addr, align 8, !dbg !6911
  %arrayidx23 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %28, i64 %idxprom22, !dbg !6911
  %value = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %arrayidx23, i32 0, i32 1, !dbg !6912
  store i32 %26, i32* %value, align 4, !dbg !6913
  br label %for.inc, !dbg !6914

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !6915
  %inc = add nsw i32 %29, 1, !dbg !6915
  store i32 %inc, i32* %i, align 4, !dbg !6915
  br label %for.cond, !dbg !6917

for.end:                                          ; preds = %for.cond
  br label %if.end59, !dbg !6918

if.else:                                          ; preds = %if.end4
  %30 = load i32, i32* %node.addr, align 4, !dbg !6919
  %cmp24 = icmp slt i32 %30, 0, !dbg !6921
  br i1 %cmp24, label %if.then25, label %if.else35, !dbg !6922

if.then25:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !6923
  br label %for.cond26, !dbg !6926

for.cond26:                                       ; preds = %for.inc32, %if.then25
  %31 = load i32, i32* %i, align 4, !dbg !6927
  %32 = load i32, i32* %currtablesize, align 4, !dbg !6930
  %cmp27 = icmp slt i32 %31, %32, !dbg !6931
  br i1 %cmp27, label %for.body28, label %for.end34, !dbg !6932

for.body28:                                       ; preds = %for.cond26
  %33 = load i32, i32* %i, align 4, !dbg !6933
  %idxprom29 = sext i32 %33 to i64, !dbg !6934
  %34 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table.addr, align 8, !dbg !6934
  %arrayidx30 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %34, i64 %idxprom29, !dbg !6934
  %length31 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %arrayidx30, i32 0, i32 0, !dbg !6935
  store i32 -1, i32* %length31, align 4, !dbg !6936
  br label %for.inc32, !dbg !6934

for.inc32:                                        ; preds = %for.body28
  %35 = load i32, i32* %i, align 4, !dbg !6937
  %inc33 = add nsw i32 %35, 1, !dbg !6937
  store i32 %inc33, i32* %i, align 4, !dbg !6937
  br label %for.cond26, !dbg !6939

for.end34:                                        ; preds = %for.cond26
  br label %if.end58, !dbg !6940

if.else35:                                        ; preds = %if.else
  %36 = load i32, i32* %depth.addr, align 4, !dbg !6941
  %37 = load i32, i32* %maxdepth.addr, align 4, !dbg !6944
  %cmp36 = icmp eq i32 %36, %37, !dbg !6945
  br i1 %cmp36, label %if.then37, label %if.else42, !dbg !6946

if.then37:                                        ; preds = %if.else35
  %38 = load i32, i32* %maxdepth.addr, align 4, !dbg !6947
  %add = add nsw i32 %38, 1, !dbg !6949
  %39 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table.addr, align 8, !dbg !6950
  %arrayidx38 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %39, i64 0, !dbg !6950
  %length39 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %arrayidx38, i32 0, i32 0, !dbg !6951
  store i32 %add, i32* %length39, align 4, !dbg !6952
  %40 = load i32, i32* %node.addr, align 4, !dbg !6953
  %41 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table.addr, align 8, !dbg !6954
  %arrayidx40 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %41, i64 0, !dbg !6954
  %value41 = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %arrayidx40, i32 0, i32 1, !dbg !6955
  store i32 %40, i32* %value41, align 4, !dbg !6956
  br label %if.end57, !dbg !6957

if.else42:                                        ; preds = %if.else35
  %42 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6958
  %43 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6960
  %44 = load i32, i32* %node.addr, align 4, !dbg !6961
  %idxprom43 = sext i32 %44 to i64, !dbg !6962
  %45 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6962
  %tree44 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %45, i32 0, i32 0, !dbg !6963
  %46 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree44, align 8, !dbg !6963
  %arrayidx45 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %46, i64 %idxprom43, !dbg !6962
  %branches46 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx45, i32 0, i32 0, !dbg !6964
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %branches46, i64 0, i64 0, !dbg !6962
  %47 = load i32, i32* %arrayidx47, align 4, !dbg !6962
  %48 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table.addr, align 8, !dbg !6965
  %49 = load i32, i32* %depth.addr, align 4, !dbg !6966
  %add48 = add nsw i32 %49, 1, !dbg !6967
  %50 = load i32, i32* %maxdepth.addr, align 4, !dbg !6968
  %call = call i32 @make_table_recurse(%struct.archive_read* %42, %struct.huffman_code* %43, i32 %47, %struct.huffman_table_entry* %48, i32 %add48, i32 %50), !dbg !6969
  %51 = load i32, i32* %ret, align 4, !dbg !6970
  %or = or i32 %51, %call, !dbg !6970
  store i32 %or, i32* %ret, align 4, !dbg !6970
  %52 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6971
  %53 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6972
  %54 = load i32, i32* %node.addr, align 4, !dbg !6973
  %idxprom49 = sext i32 %54 to i64, !dbg !6974
  %55 = load %struct.huffman_code*, %struct.huffman_code** %code.addr, align 8, !dbg !6974
  %tree50 = getelementptr inbounds %struct.huffman_code, %struct.huffman_code* %55, i32 0, i32 0, !dbg !6975
  %56 = load %struct.huffman_tree_node*, %struct.huffman_tree_node** %tree50, align 8, !dbg !6975
  %arrayidx51 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %56, i64 %idxprom49, !dbg !6974
  %branches52 = getelementptr inbounds %struct.huffman_tree_node, %struct.huffman_tree_node* %arrayidx51, i32 0, i32 0, !dbg !6976
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %branches52, i64 0, i64 1, !dbg !6974
  %57 = load i32, i32* %arrayidx53, align 4, !dbg !6974
  %58 = load %struct.huffman_table_entry*, %struct.huffman_table_entry** %table.addr, align 8, !dbg !6977
  %59 = load i32, i32* %currtablesize, align 4, !dbg !6978
  %div = sdiv i32 %59, 2, !dbg !6979
  %idx.ext = sext i32 %div to i64, !dbg !6980
  %add.ptr = getelementptr inbounds %struct.huffman_table_entry, %struct.huffman_table_entry* %58, i64 %idx.ext, !dbg !6980
  %60 = load i32, i32* %depth.addr, align 4, !dbg !6981
  %add54 = add nsw i32 %60, 1, !dbg !6982
  %61 = load i32, i32* %maxdepth.addr, align 4, !dbg !6983
  %call55 = call i32 @make_table_recurse(%struct.archive_read* %52, %struct.huffman_code* %53, i32 %57, %struct.huffman_table_entry* %add.ptr, i32 %add54, i32 %61), !dbg !6984
  %62 = load i32, i32* %ret, align 4, !dbg !6985
  %or56 = or i32 %62, %call55, !dbg !6985
  store i32 %or56, i32* %ret, align 4, !dbg !6985
  br label %if.end57

if.end57:                                         ; preds = %if.else42, %if.then37
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %for.end34
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %for.end
  %63 = load i32, i32* %ret, align 4, !dbg !6986
  store i32 %63, i32* %retval, align 4, !dbg !6987
  br label %return, !dbg !6987

return:                                           ; preds = %if.end59, %if.then2, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !6988
  ret i32 %64, !dbg !6988
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @lzss_current_pointer(%struct.lzss* %lzss) #5 !dbg !623 {
entry:
  %lzss.addr = alloca %struct.lzss*, align 8
  store %struct.lzss* %lzss, %struct.lzss** %lzss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzss** %lzss.addr, metadata !6989, metadata !677), !dbg !6990
  %0 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !6991
  %1 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !6992
  %position = getelementptr inbounds %struct.lzss, %struct.lzss* %1, i32 0, i32 2, !dbg !6993
  %2 = load i64, i64* %position, align 8, !dbg !6993
  %call = call i8* @lzss_pointer_for_position(%struct.lzss* %0, i64 %2), !dbg !6994
  ret i8* %call, !dbg !6995
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @lzss_pointer_for_position(%struct.lzss* %lzss, i64 %pos) #5 !dbg !627 {
entry:
  %lzss.addr = alloca %struct.lzss*, align 8
  %pos.addr = alloca i64, align 8
  store %struct.lzss* %lzss, %struct.lzss** %lzss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzss** %lzss.addr, metadata !6996, metadata !677), !dbg !6997
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !6998, metadata !677), !dbg !6999
  %0 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !7000
  %1 = load i64, i64* %pos.addr, align 8, !dbg !7001
  %call = call i32 @lzss_offset_for_position(%struct.lzss* %0, i64 %1), !dbg !7002
  %idxprom = sext i32 %call to i64, !dbg !7003
  %2 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !7003
  %window = getelementptr inbounds %struct.lzss, %struct.lzss* %2, i32 0, i32 0, !dbg !7004
  %3 = load i8*, i8** %window, align 8, !dbg !7004
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !7003
  ret i8* %arrayidx, !dbg !7005
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lzss_current_offset(%struct.lzss* %lzss) #5 !dbg !633 {
entry:
  %lzss.addr = alloca %struct.lzss*, align 8
  store %struct.lzss* %lzss, %struct.lzss** %lzss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzss** %lzss.addr, metadata !7006, metadata !677), !dbg !7007
  %0 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !7008
  %1 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !7009
  %position = getelementptr inbounds %struct.lzss, %struct.lzss* %1, i32 0, i32 2, !dbg !7010
  %2 = load i64, i64* %position, align 8, !dbg !7010
  %call = call i32 @lzss_offset_for_position(%struct.lzss* %0, i64 %2), !dbg !7011
  ret i32 %call, !dbg !7012
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lzss_mask(%struct.lzss* %lzss) #5 !dbg !634 {
entry:
  %lzss.addr = alloca %struct.lzss*, align 8
  store %struct.lzss* %lzss, %struct.lzss** %lzss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzss** %lzss.addr, metadata !7013, metadata !677), !dbg !7014
  %0 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !7015
  %mask = getelementptr inbounds %struct.lzss, %struct.lzss* %0, i32 0, i32 1, !dbg !7016
  %1 = load i32, i32* %mask, align 8, !dbg !7016
  ret i32 %1, !dbg !7017
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @lzss_position(%struct.lzss* %lzss) #5 !dbg !638 {
entry:
  %lzss.addr = alloca %struct.lzss*, align 8
  store %struct.lzss* %lzss, %struct.lzss** %lzss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lzss** %lzss.addr, metadata !7018, metadata !677), !dbg !7019
  %0 = load %struct.lzss*, %struct.lzss** %lzss.addr, align 8, !dbg !7020
  %position = getelementptr inbounds %struct.lzss, %struct.lzss* %0, i32 0, i32 2, !dbg !7021
  %1 = load i64, i64* %position, align 8, !dbg !7021
  ret i64 %1, !dbg !7022
}

declare i64 @__archive_read_seek(%struct.archive_read*, i64, i32) #2

declare void @__archive_reset_read_data(%struct.archive*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!673, !674}
!llvm.ident = !{!675}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !535, globals: !644)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!2 = !{}
!3 = !{!4, !292, !123, !531, !13, !80, !52, !45, !82, !95, !316, !527, !38, !23, !534, !342, !508, !363, !374}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read", file: !6, line: 159, size: 20288, align: 64, elements: !7)
!6 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!7 = !{!8, !111, !112, !113, !114, !115, !159, !223, !224, !225, !226, !227, !228, !261, !263, !273, !274}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !5, file: !6, line: 160, baseType: !9, size: 1280, align: 64)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive", file: !10, line: 89, size: 1280, align: 64, elements: !11)
!10 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!11 = !{!12, !14, !15, !83, !84, !85, !86, !87, !88, !89, !90, !98, !99, !100, !101, !105, !106, !107, !108, !109, !110}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !9, file: !10, line: 96, baseType: !13, size: 32, align: 32)
!13 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9, file: !10, line: 97, baseType: !13, size: 32, align: 32, offset: 32)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !9, file: !10, line: 103, baseType: !16, size: 64, align: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_vtable", file: !10, line: 63, size: 832, align: 64, elements: !18)
!18 = !{!19, !25, !26, !33, !34, !48, !54, !59, !60, !67, !68, !72, !76}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "archive_close", scope: !17, file: !10, line: 64, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DISubroutineType(types: !22)
!22 = !{!23, !24}
!23 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "archive_free", scope: !17, file: !10, line: 65, baseType: !20, size: 64, align: 64, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_header", scope: !17, file: !10, line: 66, baseType: !27, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DISubroutineType(types: !29)
!29 = !{!23, !24, !30}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_entry", file: !32, line: 180, flags: DIFlagFwdDecl)
!32 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!33 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_finish_entry", scope: !17, file: !10, line: 68, baseType: !20, size: 64, align: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data", scope: !17, file: !10, line: 69, baseType: !35, size: 64, align: 64, offset: 256)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DISubroutineType(types: !37)
!37 = !{!38, !24, !43, !45}
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !39, line: 109, baseType: !40)
!39 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !41, line: 172, baseType: !42)
!41 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!42 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !46, line: 62, baseType: !47)
!46 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!47 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data_block", scope: !17, file: !10, line: 71, baseType: !49, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DISubroutineType(types: !51)
!51 = !{!38, !24, !43, !45, !52}
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !53, line: 40, baseType: !42)
!53 = !DIFile(filename: "/usr/include/stdint.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!54 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header", scope: !17, file: !10, line: 74, baseType: !55, size: 64, align: 64, offset: 384)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64, align: 64)
!56 = !DISubroutineType(types: !57)
!57 = !{!23, !24, !58}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header2", scope: !17, file: !10, line: 76, baseType: !27, size: 64, align: 64, offset: 448)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_data_block", scope: !17, file: !10, line: 78, baseType: !61, size: 64, align: 64, offset: 512)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{!23, !24, !64, !65, !66}
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_count", scope: !17, file: !10, line: 81, baseType: !20, size: 64, align: 64, offset: 576)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_bytes", scope: !17, file: !10, line: 82, baseType: !69, size: 64, align: 64, offset: 640)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64, align: 64)
!70 = !DISubroutineType(types: !71)
!71 = !{!52, !24, !23}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_code", scope: !17, file: !10, line: 83, baseType: !73, size: 64, align: 64, offset: 704)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DISubroutineType(types: !75)
!75 = !{!23, !24, !23}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_name", scope: !17, file: !10, line: 84, baseType: !77, size: 64, align: 64, offset: 768)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64, align: 64)
!78 = !DISubroutineType(types: !79)
!79 = !{!80, !24, !23}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!82 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format", scope: !9, file: !10, line: 105, baseType: !23, size: 32, align: 32, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format_name", scope: !9, file: !10, line: 106, baseType: !80, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "compression_code", scope: !9, file: !10, line: 108, baseType: !23, size: 32, align: 32, offset: 256)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "compression_name", scope: !9, file: !10, line: 109, baseType: !80, size: 64, align: 64, offset: 320)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "file_count", scope: !9, file: !10, line: 112, baseType: !23, size: 32, align: 32, offset: 384)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "archive_error_number", scope: !9, file: !10, line: 114, baseType: !23, size: 32, align: 32, offset: 416)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !9, file: !10, line: 115, baseType: !80, size: 64, align: 64, offset: 448)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "error_string", scope: !9, file: !10, line: 116, baseType: !91, size: 192, align: 64, offset: 512)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string", file: !92, line: 58, size: 192, align: 64, elements: !93)
!92 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_string.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!93 = !{!94, !96, !97}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !91, file: !92, line: 59, baseType: !95, size: 64, align: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !91, file: !92, line: 60, baseType: !45, size: 64, align: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !91, file: !92, line: 61, baseType: !45, size: 64, align: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "current_code", scope: !9, file: !10, line: 118, baseType: !95, size: 64, align: 64, offset: 704)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "current_codepage", scope: !9, file: !10, line: 119, baseType: !13, size: 32, align: 32, offset: 768)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "current_oemcp", scope: !9, file: !10, line: 120, baseType: !13, size: 32, align: 32, offset: 800)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "sconv", scope: !9, file: !10, line: 121, baseType: !102, size: 64, align: 64, offset: 832)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64, align: 64)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string_conv", file: !104, line: 36, flags: DIFlagFwdDecl)
!104 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_entry_locale.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!105 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_block", scope: !9, file: !10, line: 127, baseType: !80, size: 64, align: 64, offset: 896)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_offset", scope: !9, file: !10, line: 128, baseType: !52, size: 64, align: 64, offset: 960)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_output_offset", scope: !9, file: !10, line: 129, baseType: !52, size: 64, align: 64, offset: 1024)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_remaining", scope: !9, file: !10, line: 130, baseType: !45, size: 64, align: 64, offset: 1088)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_is_posix_read", scope: !9, file: !10, line: 137, baseType: !82, size: 8, align: 8, offset: 1152)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_requested", scope: !9, file: !10, line: 138, baseType: !45, size: 64, align: 64, offset: 1216)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5, file: !6, line: 162, baseType: !30, size: 64, align: 64, offset: 1280)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_set", scope: !5, file: !6, line: 165, baseType: !23, size: 32, align: 32, offset: 1344)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_dev", scope: !5, file: !6, line: 166, baseType: !52, size: 64, align: 64, offset: 1408)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_ino", scope: !5, file: !6, line: 167, baseType: !52, size: 64, align: 64, offset: 1472)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !5, file: !6, line: 170, baseType: !116, size: 576, align: 64, offset: 1536)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_client", file: !6, line: 134, size: 576, align: 64, elements: !117)
!117 = !{!118, !124, !130, !136, !141, !144, !149, !150, !151, !152}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "opener", scope: !116, file: !6, line: 135, baseType: !119, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_open_callback", file: !32, line: 241, baseType: !121)
!121 = !DISubroutineType(types: !122)
!122 = !{!23, !24, !123}
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "reader", scope: !116, file: !6, line: 136, baseType: !125, size: 64, align: 64, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_read_callback", file: !32, line: 218, baseType: !127)
!127 = !DISubroutineType(types: !128)
!128 = !{!129, !24, !123, !64}
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_ssize_t", file: !32, line: 95, baseType: !38)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "skipper", scope: !116, file: !6, line: 137, baseType: !131, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_skip_callback", file: !32, line: 226, baseType: !133)
!133 = !DISubroutineType(types: !134)
!134 = !{!135, !24, !123, !135}
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_int64_t", file: !32, line: 73, baseType: !52)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "seeker", scope: !116, file: !6, line: 138, baseType: !137, size: 64, align: 64, offset: 192)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64, align: 64)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_seek_callback", file: !32, line: 233, baseType: !139)
!139 = !DISubroutineType(types: !140)
!140 = !{!135, !24, !123, !135, !23}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "closer", scope: !116, file: !6, line: 139, baseType: !142, size: 64, align: 64, offset: 256)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64, align: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_close_callback", file: !32, line: 243, baseType: !121)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "switcher", scope: !116, file: !6, line: 140, baseType: !145, size: 64, align: 64, offset: 320)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_switch_callback", file: !32, line: 249, baseType: !147)
!147 = !DISubroutineType(types: !148)
!148 = !{!23, !24, !123, !123}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !116, file: !6, line: 141, baseType: !13, size: 32, align: 32, offset: 384)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !116, file: !6, line: 142, baseType: !13, size: 32, align: 32, offset: 416)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !116, file: !6, line: 143, baseType: !52, size: 64, align: 64, offset: 448)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !116, file: !6, line: 144, baseType: !153, size: 64, align: 64, offset: 512)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!154 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_data_node", file: !6, line: 129, size: 192, align: 64, elements: !155)
!155 = !{!156, !157, !158}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "begin_position", scope: !154, file: !6, line: 130, baseType: !52, size: 64, align: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !154, file: !6, line: 131, baseType: !52, size: 64, align: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !154, file: !6, line: 132, baseType: !123, size: 64, align: 64, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "bidders", scope: !5, file: !6, line: 173, baseType: !160, size: 6144, align: 64, offset: 2112)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 6144, align: 64, elements: !221)
!161 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter_bidder", file: !6, line: 60, size: 384, align: 64, elements: !162)
!162 = !{!163, !164, !165, !212, !213, !217}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !161, file: !6, line: 62, baseType: !123, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !161, file: !6, line: 64, baseType: !80, size: 64, align: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !161, file: !6, line: 66, baseType: !166, size: 64, align: 64, offset: 128)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{!23, !169, !170}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64, align: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64, align: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter", file: !6, line: 82, size: 1408, align: 64, elements: !172)
!172 = !{!173, !174, !175, !176, !177, !181, !185, !189, !193, !194, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !171, file: !6, line: 83, baseType: !52, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "bidder", scope: !171, file: !6, line: 86, baseType: !169, size: 64, align: 64, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "upstream", scope: !171, file: !6, line: 87, baseType: !170, size: 64, align: 64, offset: 128)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !171, file: !6, line: 88, baseType: !4, size: 64, align: 64, offset: 192)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !171, file: !6, line: 90, baseType: !178, size: 64, align: 64, offset: 256)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{!23, !170}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !171, file: !6, line: 92, baseType: !182, size: 64, align: 64, offset: 320)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64, align: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!38, !170, !64}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !171, file: !6, line: 94, baseType: !186, size: 64, align: 64, offset: 384)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64, align: 64)
!187 = !DISubroutineType(types: !188)
!188 = !{!52, !170, !52}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !171, file: !6, line: 96, baseType: !190, size: 64, align: 64, offset: 448)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!52, !170, !52, !23}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !171, file: !6, line: 98, baseType: !178, size: 64, align: 64, offset: 512)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sswitch", scope: !171, file: !6, line: 100, baseType: !195, size: 64, align: 64, offset: 576)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64, align: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!23, !170, !13}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !171, file: !6, line: 102, baseType: !123, size: 64, align: 64, offset: 640)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !171, file: !6, line: 104, baseType: !80, size: 64, align: 64, offset: 704)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !171, file: !6, line: 105, baseType: !23, size: 32, align: 32, offset: 768)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !171, file: !6, line: 108, baseType: !95, size: 64, align: 64, offset: 832)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !171, file: !6, line: 109, baseType: !45, size: 64, align: 64, offset: 896)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !171, file: !6, line: 110, baseType: !95, size: 64, align: 64, offset: 960)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !171, file: !6, line: 111, baseType: !45, size: 64, align: 64, offset: 1024)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "client_buff", scope: !171, file: !6, line: 112, baseType: !43, size: 64, align: 64, offset: 1088)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "client_total", scope: !171, file: !6, line: 113, baseType: !45, size: 64, align: 64, offset: 1152)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "client_next", scope: !171, file: !6, line: 114, baseType: !80, size: 64, align: 64, offset: 1216)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "client_avail", scope: !171, file: !6, line: 115, baseType: !45, size: 64, align: 64, offset: 1280)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_file", scope: !171, file: !6, line: 116, baseType: !82, size: 8, align: 8, offset: 1344)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "closed", scope: !171, file: !6, line: 117, baseType: !82, size: 8, align: 8, offset: 1352)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "fatal", scope: !171, file: !6, line: 118, baseType: !82, size: 8, align: 8, offset: 1360)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !161, file: !6, line: 69, baseType: !178, size: 64, align: 64, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !161, file: !6, line: 71, baseType: !214, size: 64, align: 64, offset: 256)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64, align: 64)
!215 = !DISubroutineType(types: !216)
!216 = !{!23, !169, !80, !80}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !161, file: !6, line: 74, baseType: !218, size: 64, align: 64, offset: 320)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!23, !169}
!221 = !{!222}
!222 = !DISubrange(count: 16)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5, file: !6, line: 176, baseType: !170, size: 64, align: 64, offset: 8256)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_filter_bidding", scope: !5, file: !6, line: 179, baseType: !23, size: 32, align: 32, offset: 8320)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "header_position", scope: !5, file: !6, line: 182, baseType: !52, size: 64, align: 64, offset: 8384)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "data_start_node", scope: !5, file: !6, line: 185, baseType: !13, size: 32, align: 32, offset: 8448)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "data_end_node", scope: !5, file: !6, line: 186, baseType: !13, size: 32, align: 32, offset: 8480)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !5, file: !6, line: 209, baseType: !229, size: 11264, align: 64, offset: 8512)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 11264, align: 64, elements: !221)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_format_descriptor", file: !6, line: 196, size: 704, align: 64, elements: !231)
!231 = !{!232, !233, !234, !238, !242, !246, !250, !254, !258, !259, !260}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !6, line: 197, baseType: !123, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !230, file: !6, line: 198, baseType: !80, size: 64, align: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !230, file: !6, line: 199, baseType: !235, size: 64, align: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DISubroutineType(types: !237)
!237 = !{!23, !4, !23}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !230, file: !6, line: 200, baseType: !239, size: 64, align: 64, offset: 192)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!23, !4, !80, !80}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !230, file: !6, line: 202, baseType: !243, size: 64, align: 64, offset: 256)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!23, !4, !30}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "read_data", scope: !230, file: !6, line: 203, baseType: !247, size: 64, align: 64, offset: 320)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = !DISubroutineType(types: !249)
!249 = !{!23, !4, !64, !65, !66}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_skip", scope: !230, file: !6, line: 204, baseType: !251, size: 64, align: 64, offset: 384)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{!23, !4}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "seek_data", scope: !230, file: !6, line: 205, baseType: !255, size: 64, align: 64, offset: 448)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!52, !4, !52, !23}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !230, file: !6, line: 206, baseType: !251, size: 64, align: 64, offset: 512)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "format_capabilties", scope: !230, file: !6, line: 207, baseType: !251, size: 64, align: 64, offset: 576)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "has_encrypted_entries", scope: !230, file: !6, line: 208, baseType: !251, size: 64, align: 64, offset: 640)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !5, file: !6, line: 210, baseType: !262, size: 64, align: 64, offset: 19776)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !5, file: !6, line: 215, baseType: !264, size: 64, align: 64, offset: 19840)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_extract", file: !6, line: 151, size: 192, align: 64, elements: !266)
!266 = !{!267, !268, !272}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !265, file: !6, line: 152, baseType: !24, size: 64, align: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress", scope: !265, file: !6, line: 155, baseType: !269, size: 64, align: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !123}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress_user_data", scope: !265, file: !6, line: 156, baseType: !123, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_archive_extract", scope: !5, file: !6, line: 216, baseType: !251, size: 64, align: 64, offset: 19904)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "passphrases", scope: !5, file: !6, line: 227, baseType: !275, size: 320, align: 64, offset: 19968)
!275 = !DICompositeType(tag: DW_TAG_structure_type, scope: !5, file: !6, line: 221, size: 320, align: 64, elements: !276)
!276 = !{!277, !283, !285, !286, !291}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !275, file: !6, line: 222, baseType: !278, size: 64, align: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64, align: 64)
!279 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_passphrase", file: !6, line: 146, size: 128, align: 64, elements: !280)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "passphrase", scope: !279, file: !6, line: 147, baseType: !95, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !279, file: !6, line: 148, baseType: !278, size: 64, align: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !275, file: !6, line: 223, baseType: !284, size: 64, align: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "candidate", scope: !275, file: !6, line: 224, baseType: !23, size: 32, align: 32, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !275, file: !6, line: 225, baseType: !287, size: 64, align: 64, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64, align: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_passphrase_callback", file: !32, line: 256, baseType: !289)
!289 = !DISubroutineType(types: !290)
!290 = !{!80, !24, !123}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !275, file: !6, line: 226, baseType: !123, size: 64, align: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "rar", file: !1, line: 210, size: 161984, align: 64, elements: !294)
!294 = !{!295, !296, !297, !301, !305, !306, !307, !308, !309, !310, !314, !315, !318, !319, !320, !321, !322, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !344, !345, !346, !347, !348, !349, !350, !357, !358, !359, !379, !380, !381, !382, !386, !392, !393, !394, !395, !397, !398, !399, !400, !401, !402, !403, !404, !405, !486, !517, !518, !519, !520, !521, !522, !523, !533}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "main_flags", scope: !293, file: !1, line: 213, baseType: !13, size: 32, align: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "file_crc", scope: !293, file: !1, line: 214, baseType: !47, size: 64, align: 64, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !293, file: !1, line: 215, baseType: !298, size: 16, align: 8, offset: 128)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 16, align: 8, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 2)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !293, file: !1, line: 216, baseType: !302, size: 32, align: 8, offset: 144)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 32, align: 8, elements: !303)
!303 = !{!304}
!304 = !DISubrange(count: 4)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "encryptver", scope: !293, file: !1, line: 217, baseType: !82, size: 8, align: 8, offset: 176)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "compression_method", scope: !293, file: !1, line: 220, baseType: !82, size: 8, align: 8, offset: 184)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !293, file: !1, line: 221, baseType: !13, size: 32, align: 32, offset: 192)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "packed_size", scope: !293, file: !1, line: 222, baseType: !52, size: 64, align: 64, offset: 256)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "unp_size", scope: !293, file: !1, line: 223, baseType: !52, size: 64, align: 64, offset: 320)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !293, file: !1, line: 224, baseType: !311, size: 64, align: 64, offset: 384)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !312, line: 75, baseType: !313)
!312 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !41, line: 139, baseType: !42)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "mnsec", scope: !293, file: !1, line: 225, baseType: !42, size: 64, align: 64, offset: 448)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !293, file: !1, line: 226, baseType: !316, size: 32, align: 32, offset: 512)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !39, line: 70, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !41, line: 129, baseType: !13)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !293, file: !1, line: 227, baseType: !95, size: 64, align: 64, offset: 576)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "filename_save", scope: !293, file: !1, line: 228, baseType: !95, size: 64, align: 64, offset: 640)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "filename_save_size", scope: !293, file: !1, line: 229, baseType: !45, size: 64, align: 64, offset: 704)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "filename_allocated", scope: !293, file: !1, line: 230, baseType: !45, size: 64, align: 64, offset: 768)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "salt", scope: !293, file: !1, line: 233, baseType: !323, size: 64, align: 8, offset: 832)
!323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 64, align: 8, elements: !324)
!324 = !{!325}
!325 = !DISubrange(count: 8)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !293, file: !1, line: 234, baseType: !311, size: 64, align: 64, offset: 896)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ansec", scope: !293, file: !1, line: 235, baseType: !42, size: 64, align: 64, offset: 960)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !293, file: !1, line: 236, baseType: !311, size: 64, align: 64, offset: 1024)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "cnsec", scope: !293, file: !1, line: 237, baseType: !42, size: 64, align: 64, offset: 1088)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "arctime", scope: !293, file: !1, line: 238, baseType: !311, size: 64, align: 64, offset: 1152)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "arcnsec", scope: !293, file: !1, line: 239, baseType: !42, size: 64, align: 64, offset: 1216)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_unconsumed", scope: !293, file: !1, line: 242, baseType: !52, size: 64, align: 64, offset: 1280)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_remaining", scope: !293, file: !1, line: 243, baseType: !52, size: 64, align: 64, offset: 1344)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_uncopied", scope: !293, file: !1, line: 244, baseType: !52, size: 64, align: 64, offset: 1408)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !293, file: !1, line: 245, baseType: !52, size: 64, align: 64, offset: 1472)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "offset_outgoing", scope: !293, file: !1, line: 246, baseType: !52, size: 64, align: 64, offset: 1536)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "offset_seek", scope: !293, file: !1, line: 247, baseType: !52, size: 64, align: 64, offset: 1600)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !293, file: !1, line: 248, baseType: !82, size: 8, align: 8, offset: 1664)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "unp_offset", scope: !293, file: !1, line: 249, baseType: !13, size: 32, align: 32, offset: 1696)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "unp_buffer_size", scope: !293, file: !1, line: 250, baseType: !13, size: 32, align: 32, offset: 1728)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "unp_buffer", scope: !293, file: !1, line: 251, baseType: !342, size: 64, align: 64, offset: 1792)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64, align: 64)
!343 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dictionary_size", scope: !293, file: !1, line: 252, baseType: !13, size: 32, align: 32, offset: 1856)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "start_new_block", scope: !293, file: !1, line: 253, baseType: !82, size: 8, align: 8, offset: 1888)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eof", scope: !293, file: !1, line: 254, baseType: !82, size: 8, align: 8, offset: 1896)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "crc_calculated", scope: !293, file: !1, line: 255, baseType: !47, size: 64, align: 64, offset: 1920)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "found_first_header", scope: !293, file: !1, line: 256, baseType: !23, size: 32, align: 32, offset: 1984)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "has_endarc_header", scope: !293, file: !1, line: 257, baseType: !82, size: 8, align: 8, offset: 2016)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "dbo", scope: !293, file: !1, line: 258, baseType: !351, size: 64, align: 64, offset: 2048)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64, align: 64)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "data_block_offsets", file: !1, line: 203, size: 192, align: 64, elements: !353)
!353 = !{!354, !355, !356}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !352, file: !1, line: 205, baseType: !52, size: 64, align: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "start_offset", scope: !352, file: !1, line: 206, baseType: !52, size: 64, align: 64, offset: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "end_offset", scope: !352, file: !1, line: 207, baseType: !52, size: 64, align: 64, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !293, file: !1, line: 259, baseType: !13, size: 32, align: 32, offset: 2112)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !293, file: !1, line: 260, baseType: !13, size: 32, align: 32, offset: 2144)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "maincode", scope: !293, file: !1, line: 263, baseType: !360, size: 320, align: 64, offset: 2176)
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "huffman_code", file: !1, line: 185, size: 320, align: 64, elements: !361)
!361 = !{!362, !368, !369, !370, !371, !372, !373}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !360, file: !1, line: 187, baseType: !363, size: 64, align: 64)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64, align: 64)
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "huffman_tree_node", file: !1, line: 174, size: 64, align: 32, elements: !365)
!365 = !{!366}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "branches", scope: !364, file: !1, line: 176, baseType: !367, size: 64, align: 32)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 64, align: 32, elements: !299)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "numentries", scope: !360, file: !1, line: 188, baseType: !23, size: 32, align: 32, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "numallocatedentries", scope: !360, file: !1, line: 189, baseType: !23, size: 32, align: 32, offset: 96)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "minlength", scope: !360, file: !1, line: 190, baseType: !23, size: 32, align: 32, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "maxlength", scope: !360, file: !1, line: 191, baseType: !23, size: 32, align: 32, offset: 160)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tablesize", scope: !360, file: !1, line: 192, baseType: !23, size: 32, align: 32, offset: 192)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !360, file: !1, line: 193, baseType: !374, size: 64, align: 64, offset: 256)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, align: 64)
!375 = !DICompositeType(tag: DW_TAG_structure_type, name: "huffman_table_entry", file: !1, line: 179, size: 64, align: 32, elements: !376)
!376 = !{!377, !378}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !375, file: !1, line: 181, baseType: !13, size: 32, align: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !375, file: !1, line: 182, baseType: !23, size: 32, align: 32, offset: 32)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "offsetcode", scope: !293, file: !1, line: 264, baseType: !360, size: 320, align: 64, offset: 2496)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "lowoffsetcode", scope: !293, file: !1, line: 265, baseType: !360, size: 320, align: 64, offset: 2816)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "lengthcode", scope: !293, file: !1, line: 266, baseType: !360, size: 320, align: 64, offset: 3136)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "lengthtable", scope: !293, file: !1, line: 267, baseType: !383, size: 3232, align: 8, offset: 3456)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 3232, align: 8, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 404)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "lzss", scope: !293, file: !1, line: 268, baseType: !387, size: 192, align: 64, offset: 6720)
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "lzss", file: !1, line: 196, size: 192, align: 64, elements: !388)
!388 = !{!389, !390, !391}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !387, file: !1, line: 198, baseType: !342, size: 64, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !387, file: !1, line: 199, baseType: !23, size: 32, align: 32, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !387, file: !1, line: 200, baseType: !52, size: 64, align: 64, offset: 128)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "output_last_match", scope: !293, file: !1, line: 269, baseType: !82, size: 8, align: 8, offset: 6912)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "lastlength", scope: !293, file: !1, line: 270, baseType: !13, size: 32, align: 32, offset: 6944)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "lastoffset", scope: !293, file: !1, line: 271, baseType: !13, size: 32, align: 32, offset: 6976)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "oldoffset", scope: !293, file: !1, line: 272, baseType: !396, size: 128, align: 32, offset: 7008)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 128, align: 32, elements: !303)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "lastlowoffset", scope: !293, file: !1, line: 273, baseType: !13, size: 32, align: 32, offset: 7136)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "numlowoffsetrepeats", scope: !293, file: !1, line: 274, baseType: !13, size: 32, align: 32, offset: 7168)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "filterstart", scope: !293, file: !1, line: 275, baseType: !52, size: 64, align: 64, offset: 7232)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start_new_table", scope: !293, file: !1, line: 276, baseType: !82, size: 8, align: 8, offset: 7296)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ppmd_valid", scope: !293, file: !1, line: 279, baseType: !82, size: 8, align: 8, offset: 7304)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "ppmd_eod", scope: !293, file: !1, line: 280, baseType: !82, size: 8, align: 8, offset: 7312)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "is_ppmd_block", scope: !293, file: !1, line: 281, baseType: !82, size: 8, align: 8, offset: 7320)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ppmd_escape", scope: !293, file: !1, line: 282, baseType: !23, size: 32, align: 32, offset: 7328)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ppmd7_context", scope: !293, file: !1, line: 283, baseType: !406, size: 153472, align: 64, offset: 7360)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd7", file: !407, line: 62, baseType: !408)
!407 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_ppmd7_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!408 = !DICompositeType(tag: DW_TAG_structure_type, file: !407, line: 44, size: 153472, align: 64, elements: !409)
!409 = !{!410, !425, !426, !437, !438, !439, !440, !441, !442, !444, !445, !446, !447, !449, !450, !451, !452, !453, !454, !458, !462, !465, !469, !470, !471, !478, !482}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "MinContext", scope: !408, file: !407, line: 46, baseType: !411, size: 64, align: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd7_Context", file: !407, line: 40, baseType: !413)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "CPpmd7_Context_", file: !407, line: 34, size: 96, align: 32, elements: !414)
!414 = !{!415, !419, !420, !423}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "NumStats", scope: !413, file: !407, line: 36, baseType: !416, size: 16, align: 16)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "UInt16", file: !417, line: 22, baseType: !418)
!417 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_ppmd_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!418 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "SummFreq", scope: !413, file: !407, line: 37, baseType: !416, size: 16, align: 16, offset: 16)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "Stats", scope: !413, file: !407, line: 38, baseType: !421, size: 32, align: 32, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd_State_Ref", file: !417, line: 136, baseType: !422)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "UInt32", file: !417, line: 29, baseType: !13)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "Suffix", scope: !413, file: !407, line: 39, baseType: !424, size: 32, align: 32, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd7_Context_Ref", file: !407, line: 32, baseType: !422)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "MaxContext", scope: !408, file: !407, line: 46, baseType: !411, size: 64, align: 64, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "FoundState", scope: !408, file: !407, line: 47, baseType: !427, size: 64, align: 64, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64, align: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd_State", file: !417, line: 128, baseType: !429)
!429 = !DICompositeType(tag: DW_TAG_structure_type, file: !417, line: 122, size: 48, align: 16, elements: !430)
!430 = !{!431, !434, !435, !436}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "Symbol", scope: !429, file: !417, line: 124, baseType: !432, size: 8, align: 8)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !433, line: 267, baseType: !343)
!433 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zconf.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!434 = !DIDerivedType(tag: DW_TAG_member, name: "Freq", scope: !429, file: !417, line: 125, baseType: !432, size: 8, align: 8, offset: 8)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "SuccessorLow", scope: !429, file: !417, line: 126, baseType: !416, size: 16, align: 16, offset: 16)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "SuccessorHigh", scope: !429, file: !417, line: 127, baseType: !416, size: 16, align: 16, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "OrderFall", scope: !408, file: !407, line: 48, baseType: !13, size: 32, align: 32, offset: 192)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "InitEsc", scope: !408, file: !407, line: 48, baseType: !13, size: 32, align: 32, offset: 224)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "PrevSuccess", scope: !408, file: !407, line: 48, baseType: !13, size: 32, align: 32, offset: 256)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "MaxOrder", scope: !408, file: !407, line: 48, baseType: !13, size: 32, align: 32, offset: 288)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "HiBitsFlag", scope: !408, file: !407, line: 48, baseType: !13, size: 32, align: 32, offset: 320)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "RunLength", scope: !408, file: !407, line: 49, baseType: !443, size: 32, align: 32, offset: 352)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "Int32", file: !417, line: 28, baseType: !23)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "InitRL", scope: !408, file: !407, line: 49, baseType: !443, size: 32, align: 32, offset: 384)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !408, file: !407, line: 51, baseType: !422, size: 32, align: 32, offset: 416)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "GlueCount", scope: !408, file: !407, line: 52, baseType: !422, size: 32, align: 32, offset: 448)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "Base", scope: !408, file: !407, line: 53, baseType: !448, size: 64, align: 64, offset: 512)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64, align: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "LoUnit", scope: !408, file: !407, line: 53, baseType: !448, size: 64, align: 64, offset: 576)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "HiUnit", scope: !408, file: !407, line: 53, baseType: !448, size: 64, align: 64, offset: 640)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "Text", scope: !408, file: !407, line: 53, baseType: !448, size: 64, align: 64, offset: 704)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "UnitsStart", scope: !408, file: !407, line: 53, baseType: !448, size: 64, align: 64, offset: 768)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "AlignOffset", scope: !408, file: !407, line: 54, baseType: !422, size: 32, align: 32, offset: 832)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "Indx2Units", scope: !408, file: !407, line: 56, baseType: !455, size: 304, align: 8, offset: 864)
!455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 304, align: 8, elements: !456)
!456 = !{!457}
!457 = !DISubrange(count: 38)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "Units2Indx", scope: !408, file: !407, line: 57, baseType: !459, size: 1024, align: 8, offset: 1168)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 1024, align: 8, elements: !460)
!460 = !{!461}
!461 = !DISubrange(count: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "FreeList", scope: !408, file: !407, line: 58, baseType: !463, size: 1216, align: 32, offset: 2208)
!463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 1216, align: 32, elements: !456)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd_Void_Ref", file: !417, line: 144, baseType: !422)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "NS2Indx", scope: !408, file: !407, line: 59, baseType: !466, size: 2048, align: 8, offset: 3424)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 2048, align: 8, elements: !467)
!467 = !{!468}
!468 = !DISubrange(count: 256)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "NS2BSIndx", scope: !408, file: !407, line: 59, baseType: !466, size: 2048, align: 8, offset: 5472)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "HB2Flag", scope: !408, file: !407, line: 59, baseType: !466, size: 2048, align: 8, offset: 7520)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "DummySee", scope: !408, file: !407, line: 60, baseType: !472, size: 32, align: 16, offset: 9568)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd_See", file: !417, line: 117, baseType: !473)
!473 = !DICompositeType(tag: DW_TAG_structure_type, file: !417, line: 112, size: 32, align: 16, elements: !474)
!474 = !{!475, !476, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "Summ", scope: !473, file: !417, line: 114, baseType: !416, size: 16, align: 16)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "Shift", scope: !473, file: !417, line: 115, baseType: !432, size: 8, align: 8, offset: 16)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !473, file: !417, line: 116, baseType: !432, size: 8, align: 8, offset: 24)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "See", scope: !408, file: !407, line: 60, baseType: !479, size: 12800, align: 16, offset: 9600)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 12800, align: 16, elements: !480)
!480 = !{!481, !222}
!481 = !DISubrange(count: 25)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "BinSumm", scope: !408, file: !407, line: 61, baseType: !483, size: 131072, align: 16, offset: 22400)
!483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !416, size: 131072, align: 16, elements: !484)
!484 = !{!461, !485}
!485 = !DISubrange(count: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "range_dec", scope: !293, file: !1, line: 284, baseType: !487, size: 384, align: 64, offset: 160832)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "CPpmd7z_RangeDec", file: !407, line: 81, baseType: !488)
!488 = !DICompositeType(tag: DW_TAG_structure_type, file: !407, line: 73, size: 384, align: 64, elements: !489)
!489 = !{!490, !503, !504, !505, !506, !507}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !488, file: !407, line: 75, baseType: !491, size: 192, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPpmd7_RangeDec", file: !407, line: 71, baseType: !492)
!492 = !DICompositeType(tag: DW_TAG_structure_type, file: !407, line: 66, size: 192, align: 64, elements: !493)
!493 = !{!494, !498, !502}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "GetThreshold", scope: !492, file: !407, line: 68, baseType: !495, size: 64, align: 64)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64, align: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!422, !123, !422}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "Decode", scope: !492, file: !407, line: 69, baseType: !499, size: 64, align: 64, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64, align: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{null, !123, !422, !422}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "DecodeBit", scope: !492, file: !407, line: 70, baseType: !495, size: 64, align: 64, offset: 128)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "Range", scope: !488, file: !407, line: 76, baseType: !422, size: 32, align: 32, offset: 192)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "Code", scope: !488, file: !407, line: 77, baseType: !422, size: 32, align: 32, offset: 224)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "Low", scope: !488, file: !407, line: 78, baseType: !422, size: 32, align: 32, offset: 256)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "Bottom", scope: !488, file: !407, line: 79, baseType: !422, size: 32, align: 32, offset: 288)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "Stream", scope: !488, file: !407, line: 80, baseType: !508, size: 64, align: 64, offset: 320)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64, align: 64)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "IByteIn", file: !417, line: 64, baseType: !510)
!510 = !DICompositeType(tag: DW_TAG_structure_type, file: !417, line: 60, size: 128, align: 64, elements: !511)
!511 = !{!512, !513}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !510, file: !417, line: 62, baseType: !4, size: 64, align: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !510, file: !417, line: 63, baseType: !514, size: 64, align: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64, align: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!432, !123}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "bytein", scope: !293, file: !1, line: 285, baseType: !509, size: 128, align: 64, offset: 161216)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "init_default_conversion", scope: !293, file: !1, line: 290, baseType: !23, size: 32, align: 32, offset: 161344)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_default", scope: !293, file: !1, line: 291, baseType: !102, size: 64, align: 64, offset: 161408)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "opt_sconv", scope: !293, file: !1, line: 292, baseType: !102, size: 64, align: 64, offset: 161472)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_utf8", scope: !293, file: !1, line: 293, baseType: !102, size: 64, align: 64, offset: 161536)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_utf16be", scope: !293, file: !1, line: 294, baseType: !102, size: 64, align: 64, offset: 161600)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "br", scope: !293, file: !1, line: 308, baseType: !524, size: 256, align: 64, offset: 161664)
!524 = !DICompositeType(tag: DW_TAG_structure_type, name: "rar_br", file: !1, line: 299, size: 256, align: 64, elements: !525)
!525 = !{!526, !528, !529, !530}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "cache_buffer", scope: !524, file: !1, line: 303, baseType: !527, size: 64, align: 64)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !53, line: 55, baseType: !47)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "cache_avail", scope: !524, file: !1, line: 305, baseType: !23, size: 32, align: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !524, file: !1, line: 306, baseType: !38, size: 64, align: 64, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !524, file: !1, line: 307, baseType: !531, size: 64, align: 64, offset: 192)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64, align: 64)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !343)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "has_encrypted_entries", scope: !293, file: !1, line: 313, baseType: !23, size: 32, align: 32, offset: 161920)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !53, line: 51, baseType: !13)
!535 = !{!536, !537, !538, !539, !540, !541, !542, !543, !548, !551, !554, !557, !560, !563, !566, !569, !573, !576, !577, !578, !579, !582, !586, !589, !593, !594, !595, !598, !599, !603, !606, !609, !612, !613, !616, !619, !623, !627, !630, !633, !634, !635, !638, !641, !642, !643}
!536 = distinct !DISubprogram(name: "archive_read_support_format_rar", scope: !1, file: !1, line: 641, type: !21, isLocal: false, isDefinition: true, scopeLine: 642, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!537 = distinct !DISubprogram(name: "archive_read_support_format_rar_capabilities", scope: !1, file: !1, line: 682, type: !252, isLocal: true, isDefinition: true, scopeLine: 683, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!538 = distinct !DISubprogram(name: "archive_read_format_rar_has_encrypted_entries", scope: !1, file: !1, line: 690, type: !252, isLocal: true, isDefinition: true, scopeLine: 691, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!539 = distinct !DISubprogram(name: "archive_read_format_rar_bid", scope: !1, file: !1, line: 703, type: !236, isLocal: true, isDefinition: true, scopeLine: 704, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!540 = distinct !DISubprogram(name: "archive_read_format_rar_options", scope: !1, file: !1, line: 790, type: !240, isLocal: true, isDefinition: true, scopeLine: 792, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!541 = distinct !DISubprogram(name: "archive_read_format_rar_read_header", scope: !1, file: !1, line: 820, type: !244, isLocal: true, isDefinition: true, scopeLine: 822, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!542 = distinct !DISubprogram(name: "skip_sfx", scope: !1, file: !1, line: 744, type: !252, isLocal: true, isDefinition: true, scopeLine: 745, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!543 = distinct !DISubprogram(name: "archive_le16dec", scope: !544, file: !544, line: 101, type: !545, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!544 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_endian.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!545 = !DISubroutineType(types: !546)
!546 = !{!547, !43}
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !53, line: 49, baseType: !418)
!548 = distinct !DISubprogram(name: "read_header", scope: !1, file: !1, line: 1263, type: !549, isLocal: true, isDefinition: true, scopeLine: 1265, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!549 = !DISubroutineType(types: !550)
!550 = !{!23, !4, !30, !82}
!551 = distinct !DISubprogram(name: "get_time", scope: !1, file: !1, line: 1704, type: !552, isLocal: true, isDefinition: true, scopeLine: 1705, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!552 = !DISubroutineType(types: !553)
!553 = !{!311, !23}
!554 = distinct !DISubprogram(name: "archive_le64dec", scope: !544, file: !544, line: 131, type: !555, isLocal: true, isDefinition: true, scopeLine: 132, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!555 = !DISubroutineType(types: !556)
!556 = !{!527, !43}
!557 = distinct !DISubprogram(name: "read_exttime", scope: !1, file: !1, line: 1718, type: !558, isLocal: true, isDefinition: true, scopeLine: 1719, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!558 = !DISubroutineType(types: !559)
!559 = !{!23, !80, !292, !80}
!560 = distinct !DISubprogram(name: "ppmd_alloc", scope: !1, file: !1, line: 608, type: !561, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!561 = !DISubroutineType(types: !562)
!562 = !{!123, !123, !45}
!563 = distinct !DISubprogram(name: "ppmd_free", scope: !1, file: !1, line: 614, type: !564, isLocal: true, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!564 = !DISubroutineType(types: !565)
!565 = !{null, !123, !123}
!566 = distinct !DISubprogram(name: "read_symlink_stored", scope: !1, file: !1, line: 1789, type: !567, isLocal: true, isDefinition: true, scopeLine: 1791, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!567 = !DISubroutineType(types: !568)
!568 = !{!23, !4, !30, !102}
!569 = distinct !DISubprogram(name: "rar_read_ahead", scope: !1, file: !1, line: 2925, type: !570, isLocal: true, isDefinition: true, scopeLine: 2926, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!570 = !DISubroutineType(types: !571)
!571 = !{!43, !4, !45, !572}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!573 = distinct !DISubprogram(name: "archive_le32dec", scope: !544, file: !544, line: 115, type: !574, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!574 = !DISubroutineType(types: !575)
!575 = !{!534, !43}
!576 = distinct !DISubprogram(name: "archive_read_format_rar_read_data", scope: !1, file: !1, line: 1003, type: !248, isLocal: true, isDefinition: true, scopeLine: 1005, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!577 = distinct !DISubprogram(name: "read_data_stored", scope: !1, file: !1, line: 1821, type: !248, isLocal: true, isDefinition: true, scopeLine: 1823, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!578 = distinct !DISubprogram(name: "read_data_compressed", scope: !1, file: !1, line: 1864, type: !248, isLocal: true, isDefinition: true, scopeLine: 1866, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!579 = distinct !DISubprogram(name: "copy_from_lzss_window", scope: !1, file: !1, line: 2875, type: !580, isLocal: true, isDefinition: true, scopeLine: 2877, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!580 = !DISubroutineType(types: !581)
!581 = !{!23, !4, !64, !52, !23}
!582 = distinct !DISubprogram(name: "lzss_offset_for_position", scope: !1, file: !1, line: 544, type: !583, isLocal: true, isDefinition: true, scopeLine: 545, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!583 = !DISubroutineType(types: !584)
!584 = !{!23, !585, !52}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!586 = distinct !DISubprogram(name: "lzss_size", scope: !1, file: !1, line: 538, type: !587, isLocal: true, isDefinition: true, scopeLine: 539, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!587 = !DISubroutineType(types: !588)
!588 = !{!23, !585}
!589 = distinct !DISubprogram(name: "rar_br_preparation", scope: !1, file: !1, line: 494, type: !590, isLocal: true, isDefinition: true, scopeLine: 495, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!590 = !DISubroutineType(types: !591)
!591 = !{!23, !4, !592}
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64, align: 64)
!593 = distinct !DISubprogram(name: "rar_br_fillup", scope: !1, file: !1, line: 399, type: !590, isLocal: true, isDefinition: true, scopeLine: 400, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!594 = distinct !DISubprogram(name: "parse_codes", scope: !1, file: !1, line: 2062, type: !252, isLocal: true, isDefinition: true, scopeLine: 2063, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!595 = distinct !DISubprogram(name: "free_codes", scope: !1, file: !1, line: 2335, type: !596, isLocal: true, isDefinition: true, scopeLine: 2336, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!596 = !DISubroutineType(types: !597)
!597 = !{null, !4}
!598 = distinct !DISubprogram(name: "ppmd_read", scope: !1, file: !1, line: 622, type: !515, isLocal: true, isDefinition: true, scopeLine: 623, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!599 = distinct !DISubprogram(name: "create_code", scope: !1, file: !1, line: 2426, type: !600, isLocal: true, isDefinition: true, scopeLine: 2428, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!600 = !DISubroutineType(types: !601)
!601 = !{!23, !4, !602, !342, !23, !82}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64, align: 64)
!603 = distinct !DISubprogram(name: "new_node", scope: !1, file: !1, line: 2558, type: !604, isLocal: true, isDefinition: true, scopeLine: 2559, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!604 = !DISubroutineType(types: !605)
!605 = !{!23, !602}
!606 = distinct !DISubprogram(name: "add_value", scope: !1, file: !1, line: 2458, type: !607, isLocal: true, isDefinition: true, scopeLine: 2460, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!607 = !DISubroutineType(types: !608)
!608 = !{!23, !4, !602, !23, !23, !23}
!609 = distinct !DISubprogram(name: "read_next_symbol", scope: !1, file: !1, line: 2354, type: !610, isLocal: true, isDefinition: true, scopeLine: 2355, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!610 = !DISubroutineType(types: !611)
!611 = !{!23, !4, !602}
!612 = distinct !DISubprogram(name: "make_table", scope: !1, file: !1, line: 2578, type: !610, isLocal: true, isDefinition: true, scopeLine: 2579, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!613 = distinct !DISubprogram(name: "make_table_recurse", scope: !1, file: !1, line: 2593, type: !614, isLocal: true, isDefinition: true, scopeLine: 2596, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!614 = !DISubroutineType(types: !615)
!615 = !{!23, !4, !602, !23, !374, !23, !23}
!616 = distinct !DISubprogram(name: "rar_fls", scope: !1, file: !1, line: 514, type: !617, isLocal: true, isDefinition: true, scopeLine: 515, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!617 = !DISubroutineType(types: !618)
!618 = !{!23, !13}
!619 = distinct !DISubprogram(name: "lzss_emit_literal", scope: !1, file: !1, line: 568, type: !620, isLocal: true, isDefinition: true, scopeLine: 569, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!620 = !DISubroutineType(types: !621)
!621 = !{null, !292, !622}
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !53, line: 48, baseType: !343)
!623 = distinct !DISubprogram(name: "lzss_current_pointer", scope: !1, file: !1, line: 562, type: !624, isLocal: true, isDefinition: true, scopeLine: 563, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!624 = !DISubroutineType(types: !625)
!625 = !{!626, !585}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64, align: 64)
!627 = distinct !DISubprogram(name: "lzss_pointer_for_position", scope: !1, file: !1, line: 550, type: !628, isLocal: true, isDefinition: true, scopeLine: 551, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!628 = !DISubroutineType(types: !629)
!629 = !{!342, !585, !52}
!630 = distinct !DISubprogram(name: "lzss_emit_match", scope: !1, file: !1, line: 575, type: !631, isLocal: true, isDefinition: true, scopeLine: 576, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!631 = !DISubroutineType(types: !632)
!632 = !{null, !292, !23, !23}
!633 = distinct !DISubprogram(name: "lzss_current_offset", scope: !1, file: !1, line: 556, type: !587, isLocal: true, isDefinition: true, scopeLine: 557, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!634 = distinct !DISubprogram(name: "lzss_mask", scope: !1, file: !1, line: 532, type: !587, isLocal: true, isDefinition: true, scopeLine: 533, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!635 = distinct !DISubprogram(name: "expand", scope: !1, file: !1, line: 2647, type: !636, isLocal: true, isDefinition: true, scopeLine: 2648, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!636 = !DISubroutineType(types: !637)
!637 = !{!52, !4, !52}
!638 = distinct !DISubprogram(name: "lzss_position", scope: !1, file: !1, line: 526, type: !639, isLocal: true, isDefinition: true, scopeLine: 527, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!639 = !DISubroutineType(types: !640)
!640 = !{!52, !585}
!641 = distinct !DISubprogram(name: "archive_read_format_rar_read_data_skip", scope: !1, file: !1, line: 1054, type: !252, isLocal: true, isDefinition: true, scopeLine: 1055, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!642 = distinct !DISubprogram(name: "archive_read_format_rar_seek_data", scope: !1, file: !1, line: 1091, type: !256, isLocal: true, isDefinition: true, scopeLine: 1093, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!643 = distinct !DISubprogram(name: "archive_read_format_rar_cleanup", scope: !1, file: !1, line: 1245, type: !252, isLocal: true, isDefinition: true, scopeLine: 1246, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!644 = !{!645, !653, !658, !662, !663, !668, !670, !672}
!645 = !DIGlobalVariable(name: "g_szalloc", scope: !0, file: !1, line: 619, type: !646, isLocal: true, isDefinition: true, variable: %struct.ISzAlloc* @g_szalloc)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISzAlloc", file: !417, line: 77, baseType: !647)
!647 = !DICompositeType(tag: DW_TAG_structure_type, file: !417, line: 73, size: 128, align: 64, elements: !648)
!648 = !{!649, !651}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "Alloc", scope: !647, file: !417, line: 75, baseType: !650, size: 64, align: 64)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64, align: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "Free", scope: !647, file: !417, line: 76, baseType: !652, size: 64, align: 64, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64, align: 64)
!653 = !DIGlobalVariable(name: "cache_masks", scope: !0, file: !1, line: 379, type: !654, isLocal: true, isDefinition: true, variable: [36 x i32]* @cache_masks)
!654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !655, size: 1152, align: 32, elements: !656)
!655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !534)
!656 = !{!657}
!657 = !DISubrange(count: 36)
!658 = !DIGlobalVariable(name: "lengthbases", scope: !635, file: !1, line: 2649, type: !659, isLocal: true, isDefinition: true, variable: [28 x i8]* @expand.lengthbases)
!659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 224, align: 8, elements: !660)
!660 = !{!661}
!661 = !DISubrange(count: 28)
!662 = !DIGlobalVariable(name: "lengthbits", scope: !635, file: !1, line: 2654, type: !659, isLocal: true, isDefinition: true, variable: [28 x i8]* @expand.lengthbits)
!663 = !DIGlobalVariable(name: "offsetbases", scope: !635, file: !1, line: 2659, type: !664, isLocal: true, isDefinition: true, variable: [60 x i32]* @expand.offsetbases)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 1920, align: 32, elements: !666)
!665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!666 = !{!667}
!667 = !DISubrange(count: 60)
!668 = !DIGlobalVariable(name: "offsetbits", scope: !635, file: !1, line: 2670, type: !669, isLocal: true, isDefinition: true, variable: [60 x i8]* @expand.offsetbits)
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 480, align: 8, elements: !666)
!670 = !DIGlobalVariable(name: "shortbases", scope: !635, file: !1, line: 2676, type: !671, isLocal: true, isDefinition: true, variable: [8 x i8]* @expand.shortbases)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 64, align: 8, elements: !324)
!672 = !DIGlobalVariable(name: "shortbits", scope: !635, file: !1, line: 2678, type: !671, isLocal: true, isDefinition: true, variable: [8 x i8]* @expand.shortbits)
!673 = !{i32 2, !"Dwarf Version", i32 4}
!674 = !{i32 2, !"Debug Info Version", i32 3}
!675 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!676 = !DILocalVariable(name: "_a", arg: 1, scope: !536, file: !1, line: 641, type: !24)
!677 = !DIExpression()
!678 = !DILocation(line: 641, column: 49, scope: !536)
!679 = !DILocalVariable(name: "a", scope: !536, file: !1, line: 643, type: !4)
!680 = !DILocation(line: 643, column: 24, scope: !536)
!681 = !DILocation(line: 643, column: 51, scope: !536)
!682 = !DILocation(line: 643, column: 28, scope: !536)
!683 = !DILocalVariable(name: "rar", scope: !536, file: !1, line: 644, type: !292)
!684 = !DILocation(line: 644, column: 15, scope: !536)
!685 = !DILocalVariable(name: "r", scope: !536, file: !1, line: 645, type: !23)
!686 = !DILocation(line: 645, column: 7, scope: !536)
!687 = !DILocation(line: 647, column: 3, scope: !536)
!688 = !DILocalVariable(name: "magic_test", scope: !689, file: !1, line: 647, type: !23)
!689 = distinct !DILexicalBlock(scope: !536, file: !1, line: 647, column: 3)
!690 = !DILocation(line: 647, column: 3, scope: !689)
!691 = !DILocation(line: 647, column: 3, scope: !692)
!692 = !DILexicalBlockFile(scope: !689, file: !1, discriminator: 1)
!693 = !DILocation(line: 647, column: 3, scope: !694)
!694 = !DILexicalBlockFile(scope: !695, file: !1, discriminator: 2)
!695 = distinct !DILexicalBlock(scope: !689, file: !1, line: 647, column: 3)
!696 = !DILocation(line: 647, column: 3, scope: !697)
!697 = !DILexicalBlockFile(scope: !689, file: !1, discriminator: 3)
!698 = !DILocation(line: 650, column: 23, scope: !536)
!699 = !DILocation(line: 650, column: 9, scope: !536)
!700 = !DILocation(line: 650, column: 7, scope: !536)
!701 = !DILocation(line: 651, column: 7, scope: !702)
!702 = distinct !DILexicalBlock(scope: !536, file: !1, line: 651, column: 7)
!703 = !DILocation(line: 651, column: 11, scope: !702)
!704 = !DILocation(line: 651, column: 7, scope: !536)
!705 = !DILocation(line: 653, column: 24, scope: !706)
!706 = distinct !DILexicalBlock(scope: !702, file: !1, line: 652, column: 3)
!707 = !DILocation(line: 653, column: 27, scope: !706)
!708 = !DILocation(line: 653, column: 5, scope: !706)
!709 = !DILocation(line: 654, column: 5, scope: !706)
!710 = !DILocation(line: 661, column: 2, scope: !536)
!711 = !DILocation(line: 661, column: 7, scope: !536)
!712 = !DILocation(line: 661, column: 29, scope: !536)
!713 = !DILocation(line: 663, column: 38, scope: !536)
!714 = !DILocation(line: 664, column: 38, scope: !536)
!715 = !DILocation(line: 663, column: 7, scope: !536)
!716 = !DILocation(line: 663, column: 5, scope: !536)
!717 = !DILocation(line: 676, column: 7, scope: !718)
!718 = distinct !DILexicalBlock(scope: !536, file: !1, line: 676, column: 7)
!719 = !DILocation(line: 676, column: 9, scope: !718)
!720 = !DILocation(line: 676, column: 7, scope: !536)
!721 = !DILocation(line: 677, column: 10, scope: !718)
!722 = !DILocation(line: 677, column: 5, scope: !718)
!723 = !DILocation(line: 678, column: 11, scope: !536)
!724 = !DILocation(line: 678, column: 3, scope: !536)
!725 = !DILocation(line: 679, column: 1, scope: !536)
!726 = !DILocalVariable(name: "a", arg: 1, scope: !539, file: !1, line: 703, type: !4)
!727 = !DILocation(line: 703, column: 50, scope: !539)
!728 = !DILocalVariable(name: "best_bid", arg: 2, scope: !539, file: !1, line: 703, type: !23)
!729 = !DILocation(line: 703, column: 57, scope: !539)
!730 = !DILocalVariable(name: "p", scope: !539, file: !1, line: 705, type: !80)
!731 = !DILocation(line: 705, column: 15, scope: !539)
!732 = !DILocation(line: 708, column: 7, scope: !733)
!733 = distinct !DILexicalBlock(scope: !539, file: !1, line: 708, column: 7)
!734 = !DILocation(line: 708, column: 16, scope: !733)
!735 = !DILocation(line: 708, column: 7, scope: !539)
!736 = !DILocation(line: 709, column: 4, scope: !733)
!737 = !DILocation(line: 711, column: 33, scope: !738)
!738 = distinct !DILexicalBlock(scope: !539, file: !1, line: 711, column: 7)
!739 = !DILocation(line: 711, column: 12, scope: !738)
!740 = !DILocation(line: 711, column: 10, scope: !738)
!741 = !DILocation(line: 711, column: 46, scope: !738)
!742 = !DILocation(line: 711, column: 7, scope: !539)
!743 = !DILocation(line: 712, column: 5, scope: !738)
!744 = !DILocation(line: 714, column: 14, scope: !745)
!745 = distinct !DILexicalBlock(scope: !539, file: !1, line: 714, column: 7)
!746 = !DILocation(line: 714, column: 7, scope: !745)
!747 = !DILocation(line: 714, column: 35, scope: !745)
!748 = !DILocation(line: 714, column: 7, scope: !539)
!749 = !DILocation(line: 715, column: 5, scope: !745)
!750 = !DILocation(line: 717, column: 8, scope: !751)
!751 = distinct !DILexicalBlock(scope: !539, file: !1, line: 717, column: 7)
!752 = !DILocation(line: 717, column: 13, scope: !751)
!753 = !DILocation(line: 717, column: 20, scope: !751)
!754 = !DILocation(line: 717, column: 23, scope: !755)
!755 = !DILexicalBlockFile(scope: !751, file: !1, discriminator: 1)
!756 = !DILocation(line: 717, column: 28, scope: !755)
!757 = !DILocation(line: 717, column: 36, scope: !755)
!758 = !DILocation(line: 717, column: 46, scope: !759)
!759 = !DILexicalBlockFile(scope: !751, file: !1, discriminator: 2)
!760 = !DILocation(line: 717, column: 39, scope: !759)
!761 = !DILocation(line: 717, column: 66, scope: !759)
!762 = !DILocation(line: 717, column: 7, scope: !759)
!763 = !DILocalVariable(name: "offset", scope: !764, file: !1, line: 719, type: !38)
!764 = distinct !DILexicalBlock(scope: !751, file: !1, line: 717, column: 72)
!765 = !DILocation(line: 719, column: 13, scope: !764)
!766 = !DILocalVariable(name: "window", scope: !764, file: !1, line: 720, type: !38)
!767 = !DILocation(line: 720, column: 13, scope: !764)
!768 = !DILocalVariable(name: "bytes_avail", scope: !764, file: !1, line: 721, type: !38)
!769 = !DILocation(line: 721, column: 13, scope: !764)
!770 = !DILocation(line: 722, column: 5, scope: !764)
!771 = !DILocation(line: 722, column: 12, scope: !772)
!772 = !DILexicalBlockFile(scope: !764, file: !1, discriminator: 1)
!773 = !DILocation(line: 722, column: 21, scope: !772)
!774 = !DILocation(line: 722, column: 19, scope: !772)
!775 = !DILocation(line: 722, column: 28, scope: !772)
!776 = !DILocation(line: 722, column: 5, scope: !772)
!777 = !DILocalVariable(name: "buff", scope: !778, file: !1, line: 723, type: !80)
!778 = distinct !DILexicalBlock(scope: !764, file: !1, line: 722, column: 45)
!779 = !DILocation(line: 723, column: 19, scope: !778)
!780 = !DILocation(line: 723, column: 47, scope: !778)
!781 = !DILocation(line: 723, column: 50, scope: !778)
!782 = !DILocation(line: 723, column: 59, scope: !778)
!783 = !DILocation(line: 723, column: 57, scope: !778)
!784 = !DILocation(line: 723, column: 26, scope: !778)
!785 = !DILocation(line: 724, column: 11, scope: !786)
!786 = distinct !DILexicalBlock(scope: !778, file: !1, line: 724, column: 11)
!787 = !DILocation(line: 724, column: 16, scope: !786)
!788 = !DILocation(line: 724, column: 11, scope: !778)
!789 = !DILocation(line: 726, column: 16, scope: !790)
!790 = distinct !DILexicalBlock(scope: !786, file: !1, line: 724, column: 25)
!791 = !DILocation(line: 727, column: 13, scope: !792)
!792 = distinct !DILexicalBlock(scope: !790, file: !1, line: 727, column: 13)
!793 = !DILocation(line: 727, column: 20, scope: !792)
!794 = !DILocation(line: 727, column: 13, scope: !790)
!795 = !DILocation(line: 728, column: 11, scope: !792)
!796 = !DILocation(line: 729, column: 9, scope: !790)
!797 = !DILocation(line: 731, column: 11, scope: !778)
!798 = !DILocation(line: 731, column: 18, scope: !778)
!799 = !DILocation(line: 731, column: 16, scope: !778)
!800 = !DILocation(line: 731, column: 9, scope: !778)
!801 = !DILocation(line: 732, column: 7, scope: !778)
!802 = !DILocation(line: 732, column: 14, scope: !803)
!803 = !DILexicalBlockFile(scope: !778, file: !1, discriminator: 1)
!804 = !DILocation(line: 732, column: 16, scope: !803)
!805 = !DILocation(line: 732, column: 22, scope: !803)
!806 = !DILocation(line: 732, column: 29, scope: !803)
!807 = !DILocation(line: 732, column: 27, scope: !803)
!808 = !DILocation(line: 732, column: 20, scope: !803)
!809 = !DILocation(line: 732, column: 7, scope: !803)
!810 = !DILocation(line: 733, column: 20, scope: !811)
!811 = distinct !DILexicalBlock(scope: !812, file: !1, line: 733, column: 13)
!812 = distinct !DILexicalBlock(scope: !778, file: !1, line: 732, column: 42)
!813 = !DILocation(line: 733, column: 13, scope: !811)
!814 = !DILocation(line: 733, column: 41, scope: !811)
!815 = !DILocation(line: 733, column: 13, scope: !812)
!816 = !DILocation(line: 734, column: 11, scope: !811)
!817 = !DILocation(line: 735, column: 11, scope: !812)
!818 = !DILocation(line: 732, column: 7, scope: !819)
!819 = !DILexicalBlockFile(scope: !778, file: !1, discriminator: 2)
!820 = !DILocation(line: 737, column: 16, scope: !778)
!821 = !DILocation(line: 737, column: 20, scope: !778)
!822 = !DILocation(line: 737, column: 18, scope: !778)
!823 = !DILocation(line: 737, column: 14, scope: !778)
!824 = !DILocation(line: 722, column: 5, scope: !825)
!825 = !DILexicalBlockFile(scope: !764, file: !1, discriminator: 2)
!826 = !DILocation(line: 739, column: 3, scope: !764)
!827 = !DILocation(line: 740, column: 3, scope: !539)
!828 = !DILocation(line: 741, column: 1, scope: !539)
!829 = !DILocalVariable(name: "a", arg: 1, scope: !540, file: !1, line: 790, type: !4)
!830 = !DILocation(line: 790, column: 54, scope: !540)
!831 = !DILocalVariable(name: "key", arg: 2, scope: !540, file: !1, line: 791, type: !80)
!832 = !DILocation(line: 791, column: 17, scope: !540)
!833 = !DILocalVariable(name: "val", arg: 3, scope: !540, file: !1, line: 791, type: !80)
!834 = !DILocation(line: 791, column: 34, scope: !540)
!835 = !DILocalVariable(name: "rar", scope: !540, file: !1, line: 793, type: !292)
!836 = !DILocation(line: 793, column: 15, scope: !540)
!837 = !DILocalVariable(name: "ret", scope: !540, file: !1, line: 794, type: !23)
!838 = !DILocation(line: 794, column: 7, scope: !540)
!839 = !DILocation(line: 796, column: 24, scope: !540)
!840 = !DILocation(line: 796, column: 27, scope: !540)
!841 = !DILocation(line: 796, column: 35, scope: !540)
!842 = !DILocation(line: 796, column: 9, scope: !540)
!843 = !DILocation(line: 796, column: 7, scope: !540)
!844 = !DILocation(line: 797, column: 14, scope: !845)
!845 = distinct !DILexicalBlock(scope: !540, file: !1, line: 797, column: 7)
!846 = !DILocation(line: 797, column: 7, scope: !845)
!847 = !DILocation(line: 797, column: 34, scope: !845)
!848 = !DILocation(line: 797, column: 7, scope: !540)
!849 = !DILocation(line: 798, column: 9, scope: !850)
!850 = distinct !DILexicalBlock(scope: !851, file: !1, line: 798, column: 9)
!851 = distinct !DILexicalBlock(scope: !845, file: !1, line: 797, column: 40)
!852 = !DILocation(line: 798, column: 13, scope: !850)
!853 = !DILocation(line: 798, column: 21, scope: !850)
!854 = !DILocation(line: 798, column: 24, scope: !855)
!855 = !DILexicalBlockFile(scope: !850, file: !1, discriminator: 1)
!856 = !DILocation(line: 798, column: 31, scope: !855)
!857 = !DILocation(line: 798, column: 9, scope: !855)
!858 = !DILocation(line: 799, column: 26, scope: !850)
!859 = !DILocation(line: 799, column: 29, scope: !850)
!860 = !DILocation(line: 799, column: 7, scope: !850)
!861 = !DILocation(line: 804, column: 16, scope: !862)
!862 = distinct !DILexicalBlock(scope: !850, file: !1, line: 801, column: 10)
!863 = !DILocation(line: 804, column: 19, scope: !862)
!864 = !DILocation(line: 804, column: 28, scope: !862)
!865 = !DILocation(line: 803, column: 11, scope: !862)
!866 = !DILocation(line: 802, column: 7, scope: !862)
!867 = !DILocation(line: 802, column: 12, scope: !862)
!868 = !DILocation(line: 802, column: 22, scope: !862)
!869 = !DILocation(line: 805, column: 11, scope: !870)
!870 = distinct !DILexicalBlock(scope: !862, file: !1, line: 805, column: 11)
!871 = !DILocation(line: 805, column: 16, scope: !870)
!872 = !DILocation(line: 805, column: 26, scope: !870)
!873 = !DILocation(line: 805, column: 11, scope: !862)
!874 = !DILocation(line: 806, column: 13, scope: !870)
!875 = !DILocation(line: 806, column: 9, scope: !870)
!876 = !DILocation(line: 808, column: 13, scope: !870)
!877 = !DILocation(line: 810, column: 13, scope: !851)
!878 = !DILocation(line: 810, column: 5, scope: !851)
!879 = !DILocation(line: 816, column: 3, scope: !540)
!880 = !DILocation(line: 817, column: 1, scope: !540)
!881 = !DILocalVariable(name: "a", arg: 1, scope: !541, file: !1, line: 820, type: !4)
!882 = !DILocation(line: 820, column: 58, scope: !541)
!883 = !DILocalVariable(name: "entry", arg: 2, scope: !541, file: !1, line: 821, type: !30)
!884 = !DILocation(line: 821, column: 59, scope: !541)
!885 = !DILocalVariable(name: "h", scope: !541, file: !1, line: 823, type: !43)
!886 = !DILocation(line: 823, column: 15, scope: !541)
!887 = !DILocalVariable(name: "p", scope: !541, file: !1, line: 824, type: !80)
!888 = !DILocation(line: 824, column: 15, scope: !541)
!889 = !DILocalVariable(name: "rar", scope: !541, file: !1, line: 825, type: !292)
!890 = !DILocation(line: 825, column: 15, scope: !541)
!891 = !DILocalVariable(name: "skip", scope: !541, file: !1, line: 826, type: !45)
!892 = !DILocation(line: 826, column: 10, scope: !541)
!893 = !DILocalVariable(name: "head_type", scope: !541, file: !1, line: 827, type: !82)
!894 = !DILocation(line: 827, column: 8, scope: !541)
!895 = !DILocalVariable(name: "ret", scope: !541, file: !1, line: 828, type: !23)
!896 = !DILocation(line: 828, column: 7, scope: !541)
!897 = !DILocalVariable(name: "flags", scope: !541, file: !1, line: 829, type: !13)
!898 = !DILocation(line: 829, column: 12, scope: !541)
!899 = !DILocalVariable(name: "crc32_expected", scope: !541, file: !1, line: 830, type: !47)
!900 = !DILocation(line: 830, column: 17, scope: !541)
!901 = !DILocation(line: 832, column: 3, scope: !541)
!902 = !DILocation(line: 832, column: 6, scope: !541)
!903 = !DILocation(line: 832, column: 14, scope: !541)
!904 = !DILocation(line: 832, column: 29, scope: !541)
!905 = !DILocation(line: 833, column: 7, scope: !906)
!906 = distinct !DILexicalBlock(scope: !541, file: !1, line: 833, column: 7)
!907 = !DILocation(line: 833, column: 10, scope: !906)
!908 = !DILocation(line: 833, column: 18, scope: !906)
!909 = !DILocation(line: 833, column: 38, scope: !906)
!910 = !DILocation(line: 833, column: 7, scope: !541)
!911 = !DILocation(line: 834, column: 5, scope: !906)
!912 = !DILocation(line: 834, column: 8, scope: !906)
!913 = !DILocation(line: 834, column: 16, scope: !906)
!914 = !DILocation(line: 834, column: 36, scope: !906)
!915 = !DILocation(line: 836, column: 24, scope: !541)
!916 = !DILocation(line: 836, column: 27, scope: !541)
!917 = !DILocation(line: 836, column: 35, scope: !541)
!918 = !DILocation(line: 836, column: 9, scope: !541)
!919 = !DILocation(line: 836, column: 7, scope: !541)
!920 = !DILocation(line: 845, column: 7, scope: !921)
!921 = distinct !DILexicalBlock(scope: !541, file: !1, line: 845, column: 7)
!922 = !DILocation(line: 845, column: 12, scope: !921)
!923 = !DILocation(line: 845, column: 34, scope: !921)
!924 = !DILocation(line: 845, column: 7, scope: !541)
!925 = !DILocation(line: 846, column: 4, scope: !926)
!926 = distinct !DILexicalBlock(scope: !921, file: !1, line: 845, column: 79)
!927 = !DILocation(line: 846, column: 9, scope: !926)
!928 = !DILocation(line: 846, column: 31, scope: !926)
!929 = !DILocation(line: 847, column: 3, scope: !926)
!930 = !DILocation(line: 852, column: 33, scope: !931)
!931 = distinct !DILexicalBlock(scope: !541, file: !1, line: 852, column: 7)
!932 = !DILocation(line: 852, column: 12, scope: !931)
!933 = !DILocation(line: 852, column: 10, scope: !931)
!934 = !DILocation(line: 852, column: 46, scope: !931)
!935 = !DILocation(line: 852, column: 7, scope: !541)
!936 = !DILocation(line: 853, column: 5, scope: !931)
!937 = !DILocation(line: 855, column: 7, scope: !541)
!938 = !DILocation(line: 855, column: 5, scope: !541)
!939 = !DILocation(line: 856, column: 7, scope: !940)
!940 = distinct !DILexicalBlock(scope: !541, file: !1, line: 856, column: 7)
!941 = !DILocation(line: 856, column: 12, scope: !940)
!942 = !DILocation(line: 856, column: 31, scope: !940)
!943 = !DILocation(line: 856, column: 36, scope: !940)
!944 = !DILocation(line: 857, column: 8, scope: !940)
!945 = !DILocation(line: 857, column: 13, scope: !940)
!946 = !DILocation(line: 857, column: 20, scope: !940)
!947 = !DILocation(line: 857, column: 23, scope: !948)
!948 = !DILexicalBlockFile(scope: !940, file: !1, discriminator: 1)
!949 = !DILocation(line: 857, column: 28, scope: !948)
!950 = !DILocation(line: 857, column: 36, scope: !948)
!951 = !DILocation(line: 857, column: 46, scope: !952)
!952 = !DILexicalBlockFile(scope: !940, file: !1, discriminator: 2)
!953 = !DILocation(line: 857, column: 39, scope: !952)
!954 = !DILocation(line: 857, column: 66, scope: !952)
!955 = !DILocation(line: 856, column: 7, scope: !956)
!956 = !DILexicalBlockFile(scope: !541, file: !1, discriminator: 1)
!957 = !DILocation(line: 859, column: 20, scope: !958)
!958 = distinct !DILexicalBlock(scope: !940, file: !1, line: 857, column: 73)
!959 = !DILocation(line: 859, column: 11, scope: !958)
!960 = !DILocation(line: 859, column: 9, scope: !958)
!961 = !DILocation(line: 860, column: 9, scope: !962)
!962 = distinct !DILexicalBlock(scope: !958, file: !1, line: 860, column: 9)
!963 = !DILocation(line: 860, column: 13, scope: !962)
!964 = !DILocation(line: 860, column: 9, scope: !958)
!965 = !DILocation(line: 861, column: 15, scope: !962)
!966 = !DILocation(line: 861, column: 7, scope: !962)
!967 = !DILocation(line: 862, column: 3, scope: !958)
!968 = !DILocation(line: 863, column: 3, scope: !541)
!969 = !DILocation(line: 863, column: 8, scope: !541)
!970 = !DILocation(line: 863, column: 27, scope: !541)
!971 = !DILocation(line: 865, column: 3, scope: !541)
!972 = !DILocalVariable(name: "crc32_val", scope: !973, file: !1, line: 867, type: !47)
!973 = distinct !DILexicalBlock(scope: !541, file: !1, line: 866, column: 3)
!974 = !DILocation(line: 867, column: 19, scope: !973)
!975 = !DILocation(line: 869, column: 35, scope: !976)
!976 = distinct !DILexicalBlock(scope: !973, file: !1, line: 869, column: 9)
!977 = !DILocation(line: 869, column: 14, scope: !976)
!978 = !DILocation(line: 869, column: 12, scope: !976)
!979 = !DILocation(line: 869, column: 48, scope: !976)
!980 = !DILocation(line: 869, column: 9, scope: !973)
!981 = !DILocation(line: 870, column: 7, scope: !976)
!982 = !DILocation(line: 871, column: 9, scope: !973)
!983 = !DILocation(line: 871, column: 7, scope: !973)
!984 = !DILocation(line: 873, column: 17, scope: !973)
!985 = !DILocation(line: 873, column: 15, scope: !973)
!986 = !DILocation(line: 874, column: 12, scope: !973)
!987 = !DILocation(line: 874, column: 5, scope: !973)
!988 = !DILocation(line: 877, column: 18, scope: !989)
!989 = distinct !DILexicalBlock(scope: !990, file: !1, line: 877, column: 11)
!990 = distinct !DILexicalBlock(scope: !973, file: !1, line: 875, column: 5)
!991 = !DILocation(line: 877, column: 11, scope: !989)
!992 = !DILocation(line: 877, column: 39, scope: !989)
!993 = !DILocation(line: 877, column: 11, scope: !990)
!994 = !DILocation(line: 878, column: 28, scope: !995)
!995 = distinct !DILexicalBlock(scope: !989, file: !1, line: 877, column: 45)
!996 = !DILocation(line: 878, column: 31, scope: !995)
!997 = !DILocation(line: 878, column: 9, scope: !995)
!998 = !DILocation(line: 880, column: 9, scope: !995)
!999 = !DILocation(line: 882, column: 30, scope: !990)
!1000 = !DILocation(line: 882, column: 7, scope: !990)
!1001 = !DILocation(line: 883, column: 7, scope: !990)
!1002 = !DILocation(line: 886, column: 41, scope: !990)
!1003 = !DILocation(line: 886, column: 43, scope: !990)
!1004 = !DILocation(line: 886, column: 25, scope: !990)
!1005 = !DILocation(line: 886, column: 7, scope: !990)
!1006 = !DILocation(line: 886, column: 12, scope: !990)
!1007 = !DILocation(line: 886, column: 23, scope: !990)
!1008 = !DILocation(line: 887, column: 30, scope: !990)
!1009 = !DILocation(line: 887, column: 32, scope: !990)
!1010 = !DILocation(line: 887, column: 14, scope: !990)
!1011 = !DILocation(line: 887, column: 12, scope: !990)
!1012 = !DILocation(line: 888, column: 11, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !990, file: !1, line: 888, column: 11)
!1014 = !DILocation(line: 888, column: 16, scope: !1013)
!1015 = !DILocation(line: 888, column: 11, scope: !990)
!1016 = !DILocation(line: 889, column: 28, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !1013, file: !1, line: 888, column: 71)
!1018 = !DILocation(line: 889, column: 31, scope: !1017)
!1019 = !DILocation(line: 889, column: 9, scope: !1017)
!1020 = !DILocation(line: 891, column: 9, scope: !1017)
!1021 = !DILocation(line: 893, column: 37, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !990, file: !1, line: 893, column: 11)
!1023 = !DILocation(line: 893, column: 40, scope: !1022)
!1024 = !DILocation(line: 893, column: 16, scope: !1022)
!1025 = !DILocation(line: 893, column: 14, scope: !1022)
!1026 = !DILocation(line: 893, column: 53, scope: !1022)
!1027 = !DILocation(line: 893, column: 11, scope: !990)
!1028 = !DILocation(line: 894, column: 9, scope: !1022)
!1029 = !DILocation(line: 895, column: 11, scope: !990)
!1030 = !DILocation(line: 895, column: 9, scope: !990)
!1031 = !DILocation(line: 896, column: 14, scope: !990)
!1032 = !DILocation(line: 896, column: 19, scope: !990)
!1033 = !DILocation(line: 896, column: 7, scope: !990)
!1034 = !DILocation(line: 896, column: 30, scope: !990)
!1035 = !DILocation(line: 896, column: 32, scope: !990)
!1036 = !DILocation(line: 897, column: 14, scope: !990)
!1037 = !DILocation(line: 897, column: 19, scope: !990)
!1038 = !DILocation(line: 897, column: 7, scope: !990)
!1039 = !DILocation(line: 897, column: 30, scope: !990)
!1040 = !DILocation(line: 897, column: 32, scope: !990)
!1041 = !DILocation(line: 897, column: 36, scope: !990)
!1042 = !DILocation(line: 899, column: 11, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !990, file: !1, line: 899, column: 11)
!1044 = !DILocation(line: 899, column: 16, scope: !1043)
!1045 = !DILocation(line: 899, column: 27, scope: !1043)
!1046 = !DILocation(line: 899, column: 11, scope: !990)
!1047 = !DILocation(line: 900, column: 13, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1049, file: !1, line: 900, column: 13)
!1049 = distinct !DILexicalBlock(scope: !1043, file: !1, line: 899, column: 45)
!1050 = !DILocation(line: 900, column: 18, scope: !1048)
!1051 = !DILocation(line: 900, column: 13, scope: !1049)
!1052 = !DILocation(line: 901, column: 30, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !1048, file: !1, line: 900, column: 75)
!1054 = !DILocation(line: 901, column: 33, scope: !1053)
!1055 = !DILocation(line: 901, column: 11, scope: !1053)
!1056 = !DILocation(line: 903, column: 11, scope: !1053)
!1057 = !DILocation(line: 905, column: 29, scope: !1049)
!1058 = !DILocation(line: 905, column: 31, scope: !1049)
!1059 = !DILocation(line: 905, column: 35, scope: !1049)
!1060 = !DILocation(line: 905, column: 60, scope: !1049)
!1061 = !DILocation(line: 905, column: 27, scope: !1049)
!1062 = !DILocation(line: 905, column: 9, scope: !1049)
!1063 = !DILocation(line: 905, column: 14, scope: !1049)
!1064 = !DILocation(line: 905, column: 25, scope: !1049)
!1065 = !DILocation(line: 907, column: 7, scope: !1049)
!1066 = !DILocation(line: 911, column: 11, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !990, file: !1, line: 911, column: 11)
!1068 = !DILocation(line: 911, column: 16, scope: !1067)
!1069 = !DILocation(line: 911, column: 27, scope: !1067)
!1070 = !DILocation(line: 911, column: 11, scope: !990)
!1071 = !DILocation(line: 913, column: 49, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1067, file: !1, line: 912, column: 7)
!1073 = !DILocation(line: 913, column: 9, scope: !1072)
!1074 = !DILocation(line: 914, column: 45, scope: !1072)
!1075 = !DILocation(line: 914, column: 9, scope: !1072)
!1076 = !DILocation(line: 915, column: 9, scope: !1072)
!1077 = !DILocation(line: 915, column: 14, scope: !1072)
!1078 = !DILocation(line: 915, column: 36, scope: !1072)
!1079 = !DILocation(line: 916, column: 29, scope: !1072)
!1080 = !DILocation(line: 916, column: 32, scope: !1072)
!1081 = !DILocation(line: 916, column: 10, scope: !1072)
!1082 = !DILocation(line: 918, column: 9, scope: !1072)
!1083 = !DILocation(line: 921, column: 51, scope: !990)
!1084 = !DILocation(line: 921, column: 53, scope: !990)
!1085 = !DILocation(line: 921, column: 68, scope: !990)
!1086 = !DILocation(line: 921, column: 58, scope: !990)
!1087 = !DILocation(line: 921, column: 73, scope: !990)
!1088 = !DILocation(line: 921, column: 19, scope: !990)
!1089 = !DILocation(line: 921, column: 17, scope: !990)
!1090 = !DILocation(line: 922, column: 12, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !990, file: !1, line: 922, column: 11)
!1092 = !DILocation(line: 922, column: 22, scope: !1091)
!1093 = !DILocation(line: 922, column: 51, scope: !1091)
!1094 = !DILocation(line: 922, column: 35, scope: !1091)
!1095 = !DILocation(line: 922, column: 32, scope: !1091)
!1096 = !DILocation(line: 922, column: 11, scope: !990)
!1097 = !DILocation(line: 923, column: 28, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1091, file: !1, line: 922, column: 55)
!1099 = !DILocation(line: 923, column: 31, scope: !1098)
!1100 = !DILocation(line: 923, column: 9, scope: !1098)
!1101 = !DILocation(line: 925, column: 9, scope: !1098)
!1102 = !DILocation(line: 927, column: 30, scope: !990)
!1103 = !DILocation(line: 927, column: 33, scope: !990)
!1104 = !DILocation(line: 927, column: 7, scope: !990)
!1105 = !DILocation(line: 928, column: 7, scope: !990)
!1106 = !DILocation(line: 931, column: 26, scope: !990)
!1107 = !DILocation(line: 931, column: 29, scope: !990)
!1108 = !DILocation(line: 931, column: 36, scope: !990)
!1109 = !DILocation(line: 931, column: 14, scope: !990)
!1110 = !DILocation(line: 931, column: 7, scope: !990)
!1111 = !DILocation(line: 939, column: 31, scope: !990)
!1112 = !DILocation(line: 939, column: 33, scope: !990)
!1113 = !DILocation(line: 939, column: 15, scope: !990)
!1114 = !DILocation(line: 939, column: 13, scope: !990)
!1115 = !DILocation(line: 940, column: 30, scope: !990)
!1116 = !DILocation(line: 940, column: 32, scope: !990)
!1117 = !DILocation(line: 940, column: 14, scope: !990)
!1118 = !DILocation(line: 940, column: 12, scope: !990)
!1119 = !DILocation(line: 941, column: 11, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !990, file: !1, line: 941, column: 11)
!1121 = !DILocation(line: 941, column: 16, scope: !1120)
!1122 = !DILocation(line: 941, column: 11, scope: !990)
!1123 = !DILocation(line: 942, column: 28, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1120, file: !1, line: 941, column: 21)
!1125 = !DILocation(line: 942, column: 31, scope: !1124)
!1126 = !DILocation(line: 942, column: 9, scope: !1124)
!1127 = !DILocation(line: 944, column: 9, scope: !1124)
!1128 = !DILocation(line: 946, column: 11, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !990, file: !1, line: 946, column: 11)
!1130 = !DILocation(line: 946, column: 17, scope: !1129)
!1131 = !DILocation(line: 946, column: 11, scope: !990)
!1132 = !DILocation(line: 948, column: 13, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !1, line: 948, column: 13)
!1134 = distinct !DILexicalBlock(scope: !1129, file: !1, line: 947, column: 7)
!1135 = !DILocation(line: 948, column: 18, scope: !1133)
!1136 = !DILocation(line: 948, column: 13, scope: !1134)
!1137 = !DILocation(line: 949, column: 30, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1133, file: !1, line: 948, column: 27)
!1139 = !DILocation(line: 949, column: 33, scope: !1138)
!1140 = !DILocation(line: 949, column: 11, scope: !1138)
!1141 = !DILocation(line: 951, column: 11, scope: !1138)
!1142 = !DILocation(line: 953, column: 39, scope: !1143)
!1143 = distinct !DILexicalBlock(scope: !1134, file: !1, line: 953, column: 13)
!1144 = !DILocation(line: 953, column: 42, scope: !1143)
!1145 = !DILocation(line: 953, column: 18, scope: !1143)
!1146 = !DILocation(line: 953, column: 16, scope: !1143)
!1147 = !DILocation(line: 953, column: 55, scope: !1143)
!1148 = !DILocation(line: 953, column: 13, scope: !1134)
!1149 = !DILocation(line: 954, column: 11, scope: !1143)
!1150 = !DILocation(line: 955, column: 13, scope: !1134)
!1151 = !DILocation(line: 955, column: 11, scope: !1134)
!1152 = !DILocation(line: 956, column: 33, scope: !1134)
!1153 = !DILocation(line: 956, column: 35, scope: !1134)
!1154 = !DILocation(line: 956, column: 17, scope: !1134)
!1155 = !DILocation(line: 956, column: 14, scope: !1134)
!1156 = !DILocation(line: 957, column: 7, scope: !1134)
!1157 = !DILocation(line: 960, column: 40, scope: !990)
!1158 = !DILocation(line: 960, column: 24, scope: !990)
!1159 = !DILocation(line: 960, column: 22, scope: !990)
!1160 = !DILocation(line: 961, column: 30, scope: !990)
!1161 = !DILocation(line: 961, column: 7, scope: !990)
!1162 = !DILocation(line: 962, column: 12, scope: !990)
!1163 = !DILocation(line: 965, column: 17, scope: !990)
!1164 = !DILocation(line: 966, column: 7, scope: !990)
!1165 = !DILocation(line: 966, column: 14, scope: !1166)
!1166 = !DILexicalBlockFile(scope: !990, file: !1, discriminator: 1)
!1167 = !DILocation(line: 966, column: 19, scope: !1166)
!1168 = !DILocation(line: 966, column: 7, scope: !1166)
!1169 = !DILocalVariable(name: "to_read", scope: !1170, file: !1, line: 967, type: !45)
!1170 = distinct !DILexicalBlock(scope: !990, file: !1, line: 966, column: 24)
!1171 = !DILocation(line: 967, column: 15, scope: !1170)
!1172 = !DILocation(line: 967, column: 25, scope: !1170)
!1173 = !DILocalVariable(name: "did_read", scope: !1170, file: !1, line: 968, type: !38)
!1174 = !DILocation(line: 968, column: 16, scope: !1170)
!1175 = !DILocation(line: 969, column: 12, scope: !1176)
!1176 = distinct !DILexicalBlock(scope: !1170, file: !1, line: 969, column: 12)
!1177 = !DILocation(line: 969, column: 20, scope: !1176)
!1178 = !DILocation(line: 969, column: 12, scope: !1170)
!1179 = !DILocation(line: 970, column: 17, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1176, file: !1, line: 969, column: 33)
!1181 = !DILocation(line: 971, column: 8, scope: !1180)
!1182 = !DILocation(line: 972, column: 38, scope: !1183)
!1183 = distinct !DILexicalBlock(scope: !1170, file: !1, line: 972, column: 12)
!1184 = !DILocation(line: 972, column: 41, scope: !1183)
!1185 = !DILocation(line: 972, column: 17, scope: !1183)
!1186 = !DILocation(line: 972, column: 15, scope: !1183)
!1187 = !DILocation(line: 972, column: 62, scope: !1183)
!1188 = !DILocation(line: 972, column: 12, scope: !1170)
!1189 = !DILocation(line: 973, column: 9, scope: !1190)
!1190 = distinct !DILexicalBlock(scope: !1183, file: !1, line: 972, column: 71)
!1191 = !DILocation(line: 975, column: 12, scope: !1170)
!1192 = !DILocation(line: 975, column: 10, scope: !1170)
!1193 = !DILocation(line: 976, column: 26, scope: !1170)
!1194 = !DILocation(line: 976, column: 60, scope: !1170)
!1195 = !DILocation(line: 976, column: 73, scope: !1170)
!1196 = !DILocation(line: 976, column: 63, scope: !1170)
!1197 = !DILocation(line: 976, column: 20, scope: !1170)
!1198 = !DILocation(line: 976, column: 18, scope: !1170)
!1199 = !DILocation(line: 977, column: 31, scope: !1170)
!1200 = !DILocation(line: 977, column: 34, scope: !1170)
!1201 = !DILocation(line: 977, column: 8, scope: !1170)
!1202 = !DILocation(line: 978, column: 16, scope: !1170)
!1203 = !DILocation(line: 978, column: 13, scope: !1170)
!1204 = !DILocation(line: 966, column: 7, scope: !1205)
!1205 = !DILexicalBlockFile(scope: !990, file: !1, discriminator: 2)
!1206 = !DILocation(line: 980, column: 12, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !990, file: !1, line: 980, column: 11)
!1208 = !DILocation(line: 980, column: 22, scope: !1207)
!1209 = !DILocation(line: 980, column: 35, scope: !1207)
!1210 = !DILocation(line: 980, column: 32, scope: !1207)
!1211 = !DILocation(line: 980, column: 11, scope: !990)
!1212 = !DILocation(line: 981, column: 27, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !1207, file: !1, line: 980, column: 51)
!1214 = !DILocation(line: 981, column: 30, scope: !1213)
!1215 = !DILocation(line: 981, column: 8, scope: !1213)
!1216 = !DILocation(line: 983, column: 8, scope: !1213)
!1217 = !DILocation(line: 985, column: 11, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !990, file: !1, line: 985, column: 11)
!1219 = !DILocation(line: 985, column: 21, scope: !1218)
!1220 = !DILocation(line: 985, column: 11, scope: !990)
!1221 = !DILocation(line: 986, column: 8, scope: !1218)
!1222 = !DILocation(line: 987, column: 7, scope: !990)
!1223 = !DILocation(line: 990, column: 30, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !990, file: !1, line: 990, column: 11)
!1225 = !DILocation(line: 990, column: 33, scope: !1224)
!1226 = !DILocation(line: 990, column: 40, scope: !1224)
!1227 = !DILocation(line: 990, column: 18, scope: !1224)
!1228 = !DILocation(line: 990, column: 16, scope: !1224)
!1229 = !DILocation(line: 990, column: 52, scope: !1224)
!1230 = !DILocation(line: 990, column: 11, scope: !990)
!1231 = !DILocation(line: 991, column: 16, scope: !1224)
!1232 = !DILocation(line: 991, column: 9, scope: !1224)
!1233 = !DILocation(line: 992, column: 7, scope: !990)
!1234 = !DILocation(line: 995, column: 26, scope: !990)
!1235 = !DILocation(line: 995, column: 29, scope: !990)
!1236 = !DILocation(line: 995, column: 7, scope: !990)
!1237 = !DILocation(line: 997, column: 7, scope: !990)
!1238 = !DILocation(line: 865, column: 3, scope: !956)
!1239 = !DILocation(line: 1000, column: 1, scope: !541)
!1240 = !DILocalVariable(name: "a", arg: 1, scope: !576, file: !1, line: 1003, type: !4)
!1241 = !DILocation(line: 1003, column: 56, scope: !576)
!1242 = !DILocalVariable(name: "buff", arg: 2, scope: !576, file: !1, line: 1003, type: !64)
!1243 = !DILocation(line: 1003, column: 72, scope: !576)
!1244 = !DILocalVariable(name: "size", arg: 3, scope: !576, file: !1, line: 1004, type: !65)
!1245 = !DILocation(line: 1004, column: 43, scope: !576)
!1246 = !DILocalVariable(name: "offset", arg: 4, scope: !576, file: !1, line: 1004, type: !66)
!1247 = !DILocation(line: 1004, column: 58, scope: !576)
!1248 = !DILocalVariable(name: "rar", scope: !576, file: !1, line: 1006, type: !292)
!1249 = !DILocation(line: 1006, column: 15, scope: !576)
!1250 = !DILocation(line: 1006, column: 36, scope: !576)
!1251 = !DILocation(line: 1006, column: 39, scope: !576)
!1252 = !DILocation(line: 1006, column: 47, scope: !576)
!1253 = !DILocation(line: 1006, column: 21, scope: !576)
!1254 = !DILocalVariable(name: "ret", scope: !576, file: !1, line: 1007, type: !23)
!1255 = !DILocation(line: 1007, column: 7, scope: !576)
!1256 = !DILocation(line: 1009, column: 7, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1009, column: 7)
!1258 = !DILocation(line: 1009, column: 12, scope: !1257)
!1259 = !DILocation(line: 1009, column: 34, scope: !1257)
!1260 = !DILocation(line: 1009, column: 7, scope: !576)
!1261 = !DILocation(line: 1010, column: 4, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1257, file: !1, line: 1009, column: 79)
!1263 = !DILocation(line: 1010, column: 9, scope: !1262)
!1264 = !DILocation(line: 1010, column: 31, scope: !1262)
!1265 = !DILocation(line: 1011, column: 3, scope: !1262)
!1266 = !DILocation(line: 1013, column: 7, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1013, column: 7)
!1268 = !DILocation(line: 1013, column: 12, scope: !1267)
!1269 = !DILocation(line: 1013, column: 29, scope: !1267)
!1270 = !DILocation(line: 1013, column: 7, scope: !576)
!1271 = !DILocation(line: 1015, column: 30, scope: !1272)
!1272 = distinct !DILexicalBlock(scope: !1267, file: !1, line: 1013, column: 34)
!1273 = !DILocation(line: 1015, column: 33, scope: !1272)
!1274 = !DILocation(line: 1015, column: 38, scope: !1272)
!1275 = !DILocation(line: 1015, column: 7, scope: !1272)
!1276 = !DILocation(line: 1016, column: 7, scope: !1272)
!1277 = !DILocation(line: 1016, column: 12, scope: !1272)
!1278 = !DILocation(line: 1016, column: 29, scope: !1272)
!1279 = !DILocation(line: 1017, column: 3, scope: !1272)
!1280 = !DILocation(line: 1019, column: 4, scope: !576)
!1281 = !DILocation(line: 1019, column: 9, scope: !576)
!1282 = !DILocation(line: 1020, column: 7, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1020, column: 7)
!1284 = !DILocation(line: 1020, column: 12, scope: !1283)
!1285 = !DILocation(line: 1020, column: 22, scope: !1283)
!1286 = !DILocation(line: 1020, column: 25, scope: !1287)
!1287 = !DILexicalBlockFile(scope: !1283, file: !1, discriminator: 1)
!1288 = !DILocation(line: 1020, column: 30, scope: !1287)
!1289 = !DILocation(line: 1020, column: 45, scope: !1287)
!1290 = !DILocation(line: 1020, column: 50, scope: !1287)
!1291 = !DILocation(line: 1020, column: 42, scope: !1287)
!1292 = !DILocation(line: 1020, column: 7, scope: !1287)
!1293 = !DILocation(line: 1021, column: 6, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !1283, file: !1, line: 1020, column: 60)
!1295 = !DILocation(line: 1021, column: 11, scope: !1294)
!1296 = !DILocation(line: 1022, column: 15, scope: !1294)
!1297 = !DILocation(line: 1022, column: 20, scope: !1294)
!1298 = !DILocation(line: 1022, column: 6, scope: !1294)
!1299 = !DILocation(line: 1022, column: 13, scope: !1294)
!1300 = !DILocation(line: 1023, column: 10, scope: !1301)
!1301 = distinct !DILexicalBlock(scope: !1294, file: !1, line: 1023, column: 9)
!1302 = !DILocation(line: 1023, column: 9, scope: !1301)
!1303 = !DILocation(line: 1023, column: 19, scope: !1301)
!1304 = !DILocation(line: 1023, column: 24, scope: !1301)
!1305 = !DILocation(line: 1023, column: 17, scope: !1301)
!1306 = !DILocation(line: 1023, column: 9, scope: !1294)
!1307 = !DILocation(line: 1024, column: 17, scope: !1301)
!1308 = !DILocation(line: 1024, column: 22, scope: !1301)
!1309 = !DILocation(line: 1024, column: 8, scope: !1301)
!1310 = !DILocation(line: 1024, column: 15, scope: !1301)
!1311 = !DILocation(line: 1024, column: 7, scope: !1301)
!1312 = !DILocation(line: 1025, column: 5, scope: !1294)
!1313 = !DILocation(line: 1028, column: 11, scope: !576)
!1314 = !DILocation(line: 1028, column: 16, scope: !576)
!1315 = !DILocation(line: 1028, column: 3, scope: !576)
!1316 = !DILocation(line: 1031, column: 28, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1029, column: 3)
!1318 = !DILocation(line: 1031, column: 31, scope: !1317)
!1319 = !DILocation(line: 1031, column: 37, scope: !1317)
!1320 = !DILocation(line: 1031, column: 43, scope: !1317)
!1321 = !DILocation(line: 1031, column: 11, scope: !1317)
!1322 = !DILocation(line: 1031, column: 9, scope: !1317)
!1323 = !DILocation(line: 1032, column: 5, scope: !1317)
!1324 = !DILocation(line: 1039, column: 32, scope: !1317)
!1325 = !DILocation(line: 1039, column: 35, scope: !1317)
!1326 = !DILocation(line: 1039, column: 41, scope: !1317)
!1327 = !DILocation(line: 1039, column: 47, scope: !1317)
!1328 = !DILocation(line: 1039, column: 11, scope: !1317)
!1329 = !DILocation(line: 1039, column: 9, scope: !1317)
!1330 = !DILocation(line: 1040, column: 9, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !1317, file: !1, line: 1040, column: 9)
!1332 = !DILocation(line: 1040, column: 13, scope: !1331)
!1333 = !DILocation(line: 1040, column: 27, scope: !1331)
!1334 = !DILocation(line: 1040, column: 30, scope: !1335)
!1335 = !DILexicalBlockFile(scope: !1331, file: !1, discriminator: 1)
!1336 = !DILocation(line: 1040, column: 34, scope: !1335)
!1337 = !DILocation(line: 1040, column: 9, scope: !1335)
!1338 = !DILocation(line: 1041, column: 33, scope: !1331)
!1339 = !DILocation(line: 1041, column: 45, scope: !1331)
!1340 = !DILocation(line: 1041, column: 50, scope: !1331)
!1341 = !DILocation(line: 1041, column: 7, scope: !1331)
!1342 = !DILocation(line: 1042, column: 5, scope: !1317)
!1343 = !DILocation(line: 1045, column: 24, scope: !1317)
!1344 = !DILocation(line: 1045, column: 27, scope: !1317)
!1345 = !DILocation(line: 1045, column: 5, scope: !1317)
!1346 = !DILocation(line: 1047, column: 9, scope: !1317)
!1347 = !DILocation(line: 1048, column: 5, scope: !1317)
!1348 = !DILocation(line: 1050, column: 11, scope: !576)
!1349 = !DILocation(line: 1050, column: 3, scope: !576)
!1350 = !DILocation(line: 1051, column: 1, scope: !576)
!1351 = !DILocalVariable(name: "a", arg: 1, scope: !641, file: !1, line: 1054, type: !4)
!1352 = !DILocation(line: 1054, column: 61, scope: !641)
!1353 = !DILocalVariable(name: "rar", scope: !641, file: !1, line: 1056, type: !292)
!1354 = !DILocation(line: 1056, column: 15, scope: !641)
!1355 = !DILocalVariable(name: "bytes_skipped", scope: !641, file: !1, line: 1057, type: !52)
!1356 = !DILocation(line: 1057, column: 11, scope: !641)
!1357 = !DILocalVariable(name: "ret", scope: !641, file: !1, line: 1058, type: !23)
!1358 = !DILocation(line: 1058, column: 7, scope: !641)
!1359 = !DILocation(line: 1060, column: 24, scope: !641)
!1360 = !DILocation(line: 1060, column: 27, scope: !641)
!1361 = !DILocation(line: 1060, column: 35, scope: !641)
!1362 = !DILocation(line: 1060, column: 9, scope: !641)
!1363 = !DILocation(line: 1060, column: 7, scope: !641)
!1364 = !DILocation(line: 1062, column: 7, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !641, file: !1, line: 1062, column: 7)
!1366 = !DILocation(line: 1062, column: 12, scope: !1365)
!1367 = !DILocation(line: 1062, column: 29, scope: !1365)
!1368 = !DILocation(line: 1062, column: 7, scope: !641)
!1369 = !DILocation(line: 1064, column: 30, scope: !1370)
!1370 = distinct !DILexicalBlock(scope: !1365, file: !1, line: 1062, column: 34)
!1371 = !DILocation(line: 1064, column: 33, scope: !1370)
!1372 = !DILocation(line: 1064, column: 38, scope: !1370)
!1373 = !DILocation(line: 1064, column: 7, scope: !1370)
!1374 = !DILocation(line: 1065, column: 7, scope: !1370)
!1375 = !DILocation(line: 1065, column: 12, scope: !1370)
!1376 = !DILocation(line: 1065, column: 29, scope: !1370)
!1377 = !DILocation(line: 1066, column: 3, scope: !1370)
!1378 = !DILocation(line: 1068, column: 7, scope: !1379)
!1379 = distinct !DILexicalBlock(scope: !641, file: !1, line: 1068, column: 7)
!1380 = !DILocation(line: 1068, column: 12, scope: !1379)
!1381 = !DILocation(line: 1068, column: 28, scope: !1379)
!1382 = !DILocation(line: 1068, column: 7, scope: !641)
!1383 = !DILocation(line: 1069, column: 44, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 1068, column: 33)
!1385 = !DILocation(line: 1069, column: 47, scope: !1384)
!1386 = !DILocation(line: 1069, column: 52, scope: !1384)
!1387 = !DILocation(line: 1069, column: 21, scope: !1384)
!1388 = !DILocation(line: 1069, column: 19, scope: !1384)
!1389 = !DILocation(line: 1070, column: 9, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1384, file: !1, line: 1070, column: 9)
!1391 = !DILocation(line: 1070, column: 23, scope: !1390)
!1392 = !DILocation(line: 1070, column: 9, scope: !1384)
!1393 = !DILocation(line: 1071, column: 7, scope: !1390)
!1394 = !DILocation(line: 1072, column: 3, scope: !1384)
!1395 = !DILocation(line: 1077, column: 7, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !641, file: !1, line: 1077, column: 7)
!1397 = !DILocation(line: 1077, column: 12, scope: !1396)
!1398 = !DILocation(line: 1077, column: 23, scope: !1396)
!1399 = !DILocation(line: 1077, column: 36, scope: !1396)
!1400 = !DILocation(line: 1077, column: 39, scope: !1401)
!1401 = !DILexicalBlockFile(scope: !1396, file: !1, discriminator: 1)
!1402 = !DILocation(line: 1077, column: 44, scope: !1401)
!1403 = !DILocation(line: 1077, column: 55, scope: !1401)
!1404 = !DILocation(line: 1077, column: 7, scope: !1401)
!1405 = !DILocation(line: 1079, column: 47, scope: !1406)
!1406 = distinct !DILexicalBlock(scope: !1396, file: !1, line: 1078, column: 3)
!1407 = !DILocation(line: 1079, column: 50, scope: !1406)
!1408 = !DILocation(line: 1079, column: 53, scope: !1406)
!1409 = !DILocation(line: 1079, column: 11, scope: !1406)
!1410 = !DILocation(line: 1079, column: 9, scope: !1406)
!1411 = !DILocation(line: 1080, column: 9, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !1406, file: !1, line: 1080, column: 9)
!1413 = !DILocation(line: 1080, column: 13, scope: !1412)
!1414 = !DILocation(line: 1080, column: 9, scope: !1406)
!1415 = !DILocation(line: 1081, column: 49, scope: !1412)
!1416 = !DILocation(line: 1081, column: 52, scope: !1412)
!1417 = !DILocation(line: 1081, column: 55, scope: !1412)
!1418 = !DILocation(line: 1081, column: 13, scope: !1412)
!1419 = !DILocation(line: 1081, column: 11, scope: !1412)
!1420 = !DILocation(line: 1081, column: 7, scope: !1412)
!1421 = !DILocation(line: 1082, column: 9, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1406, file: !1, line: 1082, column: 9)
!1423 = !DILocation(line: 1082, column: 13, scope: !1422)
!1424 = !DILocation(line: 1082, column: 9, scope: !1406)
!1425 = !DILocation(line: 1083, column: 14, scope: !1422)
!1426 = !DILocation(line: 1083, column: 7, scope: !1422)
!1427 = !DILocation(line: 1084, column: 51, scope: !1406)
!1428 = !DILocation(line: 1084, column: 12, scope: !1406)
!1429 = !DILocation(line: 1084, column: 5, scope: !1406)
!1430 = !DILocation(line: 1087, column: 3, scope: !641)
!1431 = !DILocation(line: 1088, column: 1, scope: !641)
!1432 = !DILocalVariable(name: "a", arg: 1, scope: !642, file: !1, line: 1091, type: !4)
!1433 = !DILocation(line: 1091, column: 56, scope: !642)
!1434 = !DILocalVariable(name: "offset", arg: 2, scope: !642, file: !1, line: 1091, type: !52)
!1435 = !DILocation(line: 1091, column: 67, scope: !642)
!1436 = !DILocalVariable(name: "whence", arg: 3, scope: !642, file: !1, line: 1092, type: !23)
!1437 = !DILocation(line: 1092, column: 9, scope: !642)
!1438 = !DILocalVariable(name: "client_offset", scope: !642, file: !1, line: 1094, type: !52)
!1439 = !DILocation(line: 1094, column: 11, scope: !642)
!1440 = !DILocalVariable(name: "ret", scope: !642, file: !1, line: 1094, type: !52)
!1441 = !DILocation(line: 1094, column: 26, scope: !642)
!1442 = !DILocalVariable(name: "i", scope: !642, file: !1, line: 1095, type: !13)
!1443 = !DILocation(line: 1095, column: 16, scope: !642)
!1444 = !DILocalVariable(name: "rar", scope: !642, file: !1, line: 1096, type: !292)
!1445 = !DILocation(line: 1096, column: 15, scope: !642)
!1446 = !DILocation(line: 1096, column: 36, scope: !642)
!1447 = !DILocation(line: 1096, column: 39, scope: !642)
!1448 = !DILocation(line: 1096, column: 47, scope: !642)
!1449 = !DILocation(line: 1096, column: 21, scope: !642)
!1450 = !DILocation(line: 1098, column: 7, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !642, file: !1, line: 1098, column: 7)
!1452 = !DILocation(line: 1098, column: 12, scope: !1451)
!1453 = !DILocation(line: 1098, column: 31, scope: !1451)
!1454 = !DILocation(line: 1098, column: 7, scope: !642)
!1455 = !DILocation(line: 1101, column: 13, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1451, file: !1, line: 1099, column: 3)
!1457 = !DILocation(line: 1101, column: 5, scope: !1456)
!1458 = !DILocation(line: 1104, column: 25, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 1102, column: 5)
!1460 = !DILocation(line: 1104, column: 30, scope: !1459)
!1461 = !DILocation(line: 1104, column: 23, scope: !1459)
!1462 = !DILocation(line: 1105, column: 9, scope: !1459)
!1463 = !DILocation(line: 1107, column: 25, scope: !1459)
!1464 = !DILocation(line: 1107, column: 30, scope: !1459)
!1465 = !DILocation(line: 1107, column: 23, scope: !1459)
!1466 = !DILocation(line: 1108, column: 9, scope: !1459)
!1467 = !DILocation(line: 1108, column: 9, scope: !1468)
!1468 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 1)
!1469 = !DILocation(line: 1111, column: 23, scope: !1459)
!1470 = !DILocation(line: 1112, column: 5, scope: !1459)
!1471 = !DILocation(line: 1113, column: 22, scope: !1456)
!1472 = !DILocation(line: 1113, column: 19, scope: !1456)
!1473 = !DILocation(line: 1114, column: 9, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 1114, column: 9)
!1475 = !DILocation(line: 1114, column: 23, scope: !1474)
!1476 = !DILocation(line: 1114, column: 9, scope: !1456)
!1477 = !DILocation(line: 1117, column: 7, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1474, file: !1, line: 1115, column: 5)
!1479 = !DILocation(line: 1119, column: 14, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1474, file: !1, line: 1119, column: 14)
!1481 = !DILocation(line: 1119, column: 30, scope: !1480)
!1482 = !DILocation(line: 1119, column: 35, scope: !1480)
!1483 = !DILocation(line: 1119, column: 28, scope: !1480)
!1484 = !DILocation(line: 1119, column: 14, scope: !1474)
!1485 = !DILocation(line: 1125, column: 26, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 1120, column: 5)
!1487 = !DILocation(line: 1125, column: 7, scope: !1486)
!1488 = !DILocation(line: 1125, column: 12, scope: !1486)
!1489 = !DILocation(line: 1125, column: 24, scope: !1486)
!1490 = !DILocation(line: 1126, column: 23, scope: !1486)
!1491 = !DILocation(line: 1126, column: 28, scope: !1486)
!1492 = !DILocation(line: 1126, column: 21, scope: !1486)
!1493 = !DILocation(line: 1127, column: 5, scope: !1486)
!1494 = !DILocation(line: 1129, column: 22, scope: !1456)
!1495 = !DILocation(line: 1129, column: 27, scope: !1456)
!1496 = !DILocation(line: 1129, column: 34, scope: !1456)
!1497 = !DILocation(line: 1129, column: 19, scope: !1456)
!1498 = !DILocation(line: 1130, column: 7, scope: !1456)
!1499 = !DILocation(line: 1131, column: 5, scope: !1456)
!1500 = !DILocation(line: 1131, column: 12, scope: !1501)
!1501 = !DILexicalBlockFile(scope: !1456, file: !1, discriminator: 1)
!1502 = !DILocation(line: 1131, column: 16, scope: !1501)
!1503 = !DILocation(line: 1131, column: 21, scope: !1501)
!1504 = !DILocation(line: 1131, column: 14, scope: !1501)
!1505 = !DILocation(line: 1131, column: 5, scope: !1501)
!1506 = !DILocation(line: 1133, column: 8, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 1132, column: 5)
!1508 = !DILocation(line: 1134, column: 33, scope: !1507)
!1509 = !DILocation(line: 1134, column: 24, scope: !1507)
!1510 = !DILocation(line: 1134, column: 29, scope: !1507)
!1511 = !DILocation(line: 1134, column: 36, scope: !1507)
!1512 = !DILocation(line: 1134, column: 60, scope: !1507)
!1513 = !DILocation(line: 1134, column: 61, scope: !1507)
!1514 = !DILocation(line: 1134, column: 51, scope: !1507)
!1515 = !DILocation(line: 1134, column: 56, scope: !1507)
!1516 = !DILocation(line: 1134, column: 65, scope: !1507)
!1517 = !DILocation(line: 1134, column: 49, scope: !1507)
!1518 = !DILocation(line: 1134, column: 21, scope: !1507)
!1519 = !DILocation(line: 1131, column: 5, scope: !1520)
!1520 = !DILexicalBlockFile(scope: !1456, file: !1, discriminator: 2)
!1521 = !DILocation(line: 1136, column: 9, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 1136, column: 9)
!1523 = !DILocation(line: 1136, column: 14, scope: !1522)
!1524 = !DILocation(line: 1136, column: 25, scope: !1522)
!1525 = !DILocation(line: 1136, column: 9, scope: !1456)
!1526 = !DILocation(line: 1139, column: 7, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 1137, column: 5)
!1528 = !DILocation(line: 1141, column: 13, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1530, file: !1, line: 1141, column: 13)
!1530 = distinct !DILexicalBlock(scope: !1527, file: !1, line: 1140, column: 7)
!1531 = !DILocation(line: 1141, column: 38, scope: !1529)
!1532 = !DILocation(line: 1141, column: 43, scope: !1529)
!1533 = !DILocation(line: 1141, column: 29, scope: !1529)
!1534 = !DILocation(line: 1141, column: 34, scope: !1529)
!1535 = !DILocation(line: 1141, column: 51, scope: !1529)
!1536 = !DILocation(line: 1141, column: 27, scope: !1529)
!1537 = !DILocation(line: 1141, column: 64, scope: !1529)
!1538 = !DILocation(line: 1142, column: 11, scope: !1529)
!1539 = !DILocation(line: 1142, column: 16, scope: !1529)
!1540 = !DILocation(line: 1142, column: 27, scope: !1529)
!1541 = !DILocation(line: 1141, column: 13, scope: !1542)
!1542 = !DILexicalBlockFile(scope: !1530, file: !1, discriminator: 1)
!1543 = !DILocation(line: 1145, column: 15, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1545, file: !1, line: 1145, column: 15)
!1545 = distinct !DILexicalBlock(scope: !1529, file: !1, line: 1143, column: 9)
!1546 = !DILocation(line: 1145, column: 20, scope: !1544)
!1547 = !DILocation(line: 1145, column: 27, scope: !1544)
!1548 = !DILocation(line: 1145, column: 15, scope: !1545)
!1549 = !DILocation(line: 1147, column: 32, scope: !1550)
!1550 = distinct !DILexicalBlock(scope: !1544, file: !1, line: 1146, column: 11)
!1551 = !DILocation(line: 1147, column: 35, scope: !1550)
!1552 = !DILocation(line: 1147, column: 13, scope: !1550)
!1553 = !DILocation(line: 1149, column: 13, scope: !1550)
!1554 = !DILocation(line: 1151, column: 11, scope: !1545)
!1555 = !DILocation(line: 1151, column: 16, scope: !1545)
!1556 = !DILocation(line: 1151, column: 22, scope: !1545)
!1557 = !DILocation(line: 1152, column: 37, scope: !1545)
!1558 = !DILocation(line: 1152, column: 42, scope: !1545)
!1559 = !DILocation(line: 1152, column: 48, scope: !1545)
!1560 = !DILocation(line: 1152, column: 28, scope: !1545)
!1561 = !DILocation(line: 1152, column: 33, scope: !1545)
!1562 = !DILocation(line: 1152, column: 52, scope: !1545)
!1563 = !DILocation(line: 1153, column: 22, scope: !1545)
!1564 = !DILocation(line: 1153, column: 27, scope: !1545)
!1565 = !DILocation(line: 1153, column: 13, scope: !1545)
!1566 = !DILocation(line: 1153, column: 18, scope: !1545)
!1567 = !DILocation(line: 1153, column: 35, scope: !1545)
!1568 = !DILocation(line: 1152, column: 65, scope: !1545)
!1569 = !DILocation(line: 1152, column: 25, scope: !1545)
!1570 = !DILocation(line: 1154, column: 15, scope: !1571)
!1571 = distinct !DILexicalBlock(scope: !1545, file: !1, line: 1154, column: 15)
!1572 = !DILocation(line: 1154, column: 40, scope: !1571)
!1573 = !DILocation(line: 1154, column: 45, scope: !1571)
!1574 = !DILocation(line: 1154, column: 31, scope: !1571)
!1575 = !DILocation(line: 1154, column: 36, scope: !1571)
!1576 = !DILocation(line: 1154, column: 53, scope: !1571)
!1577 = !DILocation(line: 1154, column: 29, scope: !1571)
!1578 = !DILocation(line: 1154, column: 15, scope: !1545)
!1579 = !DILocation(line: 1155, column: 13, scope: !1571)
!1580 = !DILocation(line: 1156, column: 37, scope: !1545)
!1581 = !DILocation(line: 1156, column: 49, scope: !1545)
!1582 = !DILocation(line: 1156, column: 54, scope: !1545)
!1583 = !DILocation(line: 1156, column: 40, scope: !1545)
!1584 = !DILocation(line: 1156, column: 45, scope: !1545)
!1585 = !DILocation(line: 1156, column: 62, scope: !1545)
!1586 = !DILocation(line: 1157, column: 22, scope: !1545)
!1587 = !DILocation(line: 1157, column: 27, scope: !1545)
!1588 = !DILocation(line: 1157, column: 13, scope: !1545)
!1589 = !DILocation(line: 1157, column: 18, scope: !1545)
!1590 = !DILocation(line: 1157, column: 35, scope: !1545)
!1591 = !DILocation(line: 1156, column: 75, scope: !1545)
!1592 = !DILocation(line: 1156, column: 17, scope: !1545)
!1593 = !DILocation(line: 1156, column: 15, scope: !1545)
!1594 = !DILocation(line: 1158, column: 15, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1545, file: !1, line: 1158, column: 15)
!1596 = !DILocation(line: 1158, column: 19, scope: !1595)
!1597 = !DILocation(line: 1158, column: 15, scope: !1545)
!1598 = !DILocation(line: 1159, column: 20, scope: !1595)
!1599 = !DILocation(line: 1159, column: 13, scope: !1595)
!1600 = !DILocation(line: 1160, column: 53, scope: !1545)
!1601 = !DILocation(line: 1160, column: 56, scope: !1545)
!1602 = !DILocation(line: 1160, column: 59, scope: !1545)
!1603 = !DILocation(line: 1160, column: 17, scope: !1545)
!1604 = !DILocation(line: 1160, column: 15, scope: !1545)
!1605 = !DILocation(line: 1161, column: 15, scope: !1606)
!1606 = distinct !DILexicalBlock(scope: !1545, file: !1, line: 1161, column: 15)
!1607 = !DILocation(line: 1161, column: 19, scope: !1606)
!1608 = !DILocation(line: 1161, column: 15, scope: !1545)
!1609 = !DILocation(line: 1163, column: 32, scope: !1610)
!1610 = distinct !DILexicalBlock(scope: !1606, file: !1, line: 1162, column: 11)
!1611 = !DILocation(line: 1163, column: 35, scope: !1610)
!1612 = !DILocation(line: 1163, column: 13, scope: !1610)
!1613 = !DILocation(line: 1165, column: 13, scope: !1610)
!1614 = !DILocation(line: 1167, column: 11, scope: !1545)
!1615 = !DILocation(line: 1167, column: 16, scope: !1545)
!1616 = !DILocation(line: 1167, column: 22, scope: !1545)
!1617 = !DILocation(line: 1168, column: 11, scope: !1545)
!1618 = !DILocation(line: 1170, column: 18, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1529, file: !1, line: 1170, column: 18)
!1620 = !DILocation(line: 1170, column: 43, scope: !1619)
!1621 = !DILocation(line: 1170, column: 48, scope: !1619)
!1622 = !DILocation(line: 1170, column: 34, scope: !1619)
!1623 = !DILocation(line: 1170, column: 39, scope: !1619)
!1624 = !DILocation(line: 1170, column: 56, scope: !1619)
!1625 = !DILocation(line: 1170, column: 32, scope: !1619)
!1626 = !DILocation(line: 1170, column: 67, scope: !1619)
!1627 = !DILocation(line: 1171, column: 11, scope: !1619)
!1628 = !DILocation(line: 1171, column: 16, scope: !1619)
!1629 = !DILocation(line: 1171, column: 27, scope: !1619)
!1630 = !DILocation(line: 1170, column: 18, scope: !1631)
!1631 = !DILexicalBlockFile(scope: !1529, file: !1, discriminator: 1)
!1632 = !DILocation(line: 1174, column: 11, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1619, file: !1, line: 1172, column: 9)
!1634 = !DILocation(line: 1174, column: 16, scope: !1633)
!1635 = !DILocation(line: 1174, column: 22, scope: !1633)
!1636 = !DILocation(line: 1175, column: 15, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1175, column: 15)
!1638 = !DILocation(line: 1175, column: 20, scope: !1637)
!1639 = !DILocation(line: 1175, column: 29, scope: !1637)
!1640 = !DILocation(line: 1175, column: 34, scope: !1637)
!1641 = !DILocation(line: 1175, column: 27, scope: !1637)
!1642 = !DILocation(line: 1175, column: 40, scope: !1637)
!1643 = !DILocation(line: 1176, column: 13, scope: !1637)
!1644 = !DILocation(line: 1176, column: 38, scope: !1637)
!1645 = !DILocation(line: 1176, column: 43, scope: !1637)
!1646 = !DILocation(line: 1176, column: 29, scope: !1637)
!1647 = !DILocation(line: 1176, column: 34, scope: !1637)
!1648 = !DILocation(line: 1176, column: 51, scope: !1637)
!1649 = !DILocation(line: 1176, column: 27, scope: !1637)
!1650 = !DILocation(line: 1175, column: 15, scope: !1651)
!1651 = !DILexicalBlockFile(scope: !1633, file: !1, discriminator: 1)
!1652 = !DILocation(line: 1178, column: 39, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 1177, column: 11)
!1654 = !DILocation(line: 1178, column: 44, scope: !1653)
!1655 = !DILocation(line: 1178, column: 30, scope: !1653)
!1656 = !DILocation(line: 1178, column: 35, scope: !1653)
!1657 = !DILocation(line: 1178, column: 52, scope: !1653)
!1658 = !DILocation(line: 1179, column: 24, scope: !1653)
!1659 = !DILocation(line: 1179, column: 29, scope: !1653)
!1660 = !DILocation(line: 1179, column: 35, scope: !1653)
!1661 = !DILocation(line: 1179, column: 15, scope: !1653)
!1662 = !DILocation(line: 1179, column: 20, scope: !1653)
!1663 = !DILocation(line: 1179, column: 39, scope: !1653)
!1664 = !DILocation(line: 1178, column: 65, scope: !1653)
!1665 = !DILocation(line: 1178, column: 27, scope: !1653)
!1666 = !DILocation(line: 1180, column: 13, scope: !1653)
!1667 = !DILocation(line: 1182, column: 11, scope: !1633)
!1668 = !DILocation(line: 1182, column: 16, scope: !1633)
!1669 = !DILocation(line: 1182, column: 22, scope: !1633)
!1670 = !DILocation(line: 1183, column: 37, scope: !1633)
!1671 = !DILocation(line: 1183, column: 49, scope: !1633)
!1672 = !DILocation(line: 1183, column: 54, scope: !1633)
!1673 = !DILocation(line: 1183, column: 40, scope: !1633)
!1674 = !DILocation(line: 1183, column: 45, scope: !1633)
!1675 = !DILocation(line: 1183, column: 62, scope: !1633)
!1676 = !DILocation(line: 1183, column: 17, scope: !1633)
!1677 = !DILocation(line: 1183, column: 15, scope: !1633)
!1678 = !DILocation(line: 1185, column: 15, scope: !1679)
!1679 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1185, column: 15)
!1680 = !DILocation(line: 1185, column: 19, scope: !1679)
!1681 = !DILocation(line: 1185, column: 15, scope: !1633)
!1682 = !DILocation(line: 1186, column: 20, scope: !1679)
!1683 = !DILocation(line: 1186, column: 13, scope: !1679)
!1684 = !DILocation(line: 1187, column: 53, scope: !1633)
!1685 = !DILocation(line: 1187, column: 56, scope: !1633)
!1686 = !DILocation(line: 1187, column: 59, scope: !1633)
!1687 = !DILocation(line: 1187, column: 17, scope: !1633)
!1688 = !DILocation(line: 1187, column: 15, scope: !1633)
!1689 = !DILocation(line: 1188, column: 15, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1188, column: 15)
!1691 = !DILocation(line: 1188, column: 19, scope: !1690)
!1692 = !DILocation(line: 1188, column: 15, scope: !1633)
!1693 = !DILocation(line: 1190, column: 13, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 1189, column: 11)
!1695 = !DILocation(line: 1190, column: 18, scope: !1694)
!1696 = !DILocation(line: 1190, column: 36, scope: !1694)
!1697 = !DILocation(line: 1191, column: 55, scope: !1694)
!1698 = !DILocation(line: 1191, column: 58, scope: !1694)
!1699 = !DILocation(line: 1191, column: 61, scope: !1694)
!1700 = !DILocation(line: 1191, column: 19, scope: !1694)
!1701 = !DILocation(line: 1191, column: 17, scope: !1694)
!1702 = !DILocation(line: 1192, column: 11, scope: !1694)
!1703 = !DILocation(line: 1193, column: 15, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1193, column: 15)
!1705 = !DILocation(line: 1193, column: 19, scope: !1704)
!1706 = !DILocation(line: 1193, column: 15, scope: !1633)
!1707 = !DILocation(line: 1195, column: 32, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1704, file: !1, line: 1194, column: 11)
!1709 = !DILocation(line: 1195, column: 35, scope: !1708)
!1710 = !DILocation(line: 1195, column: 13, scope: !1708)
!1711 = !DILocation(line: 1197, column: 13, scope: !1708)
!1712 = !DILocation(line: 1199, column: 37, scope: !1633)
!1713 = !DILocation(line: 1199, column: 42, scope: !1633)
!1714 = !DILocation(line: 1199, column: 28, scope: !1633)
!1715 = !DILocation(line: 1199, column: 33, scope: !1633)
!1716 = !DILocation(line: 1199, column: 50, scope: !1633)
!1717 = !DILocation(line: 1200, column: 22, scope: !1633)
!1718 = !DILocation(line: 1200, column: 27, scope: !1633)
!1719 = !DILocation(line: 1200, column: 33, scope: !1633)
!1720 = !DILocation(line: 1200, column: 13, scope: !1633)
!1721 = !DILocation(line: 1200, column: 18, scope: !1633)
!1722 = !DILocation(line: 1200, column: 37, scope: !1633)
!1723 = !DILocation(line: 1199, column: 63, scope: !1633)
!1724 = !DILocation(line: 1199, column: 25, scope: !1633)
!1725 = !DILocation(line: 1201, column: 11, scope: !1633)
!1726 = !DILocation(line: 1203, column: 9, scope: !1530)
!1727 = !DILocation(line: 1205, column: 5, scope: !1527)
!1728 = !DILocation(line: 1207, column: 31, scope: !1456)
!1729 = !DILocation(line: 1207, column: 34, scope: !1456)
!1730 = !DILocation(line: 1207, column: 11, scope: !1456)
!1731 = !DILocation(line: 1207, column: 9, scope: !1456)
!1732 = !DILocation(line: 1208, column: 9, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 1208, column: 9)
!1734 = !DILocation(line: 1208, column: 13, scope: !1733)
!1735 = !DILocation(line: 1208, column: 9, scope: !1456)
!1736 = !DILocation(line: 1209, column: 14, scope: !1733)
!1737 = !DILocation(line: 1209, column: 7, scope: !1733)
!1738 = !DILocation(line: 1210, column: 37, scope: !1456)
!1739 = !DILocation(line: 1210, column: 42, scope: !1456)
!1740 = !DILocation(line: 1210, column: 28, scope: !1456)
!1741 = !DILocation(line: 1210, column: 33, scope: !1456)
!1742 = !DILocation(line: 1210, column: 50, scope: !1456)
!1743 = !DILocation(line: 1210, column: 63, scope: !1456)
!1744 = !DILocation(line: 1210, column: 61, scope: !1456)
!1745 = !DILocation(line: 1210, column: 5, scope: !1456)
!1746 = !DILocation(line: 1210, column: 10, scope: !1456)
!1747 = !DILocation(line: 1210, column: 26, scope: !1456)
!1748 = !DILocation(line: 1211, column: 9, scope: !1456)
!1749 = !DILocation(line: 1211, column: 14, scope: !1456)
!1750 = !DILocation(line: 1211, column: 7, scope: !1456)
!1751 = !DILocation(line: 1212, column: 5, scope: !1456)
!1752 = !DILocation(line: 1212, column: 12, scope: !1501)
!1753 = !DILocation(line: 1212, column: 14, scope: !1501)
!1754 = !DILocation(line: 1212, column: 5, scope: !1501)
!1755 = !DILocation(line: 1214, column: 8, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 1213, column: 5)
!1757 = !DILocation(line: 1215, column: 23, scope: !1756)
!1758 = !DILocation(line: 1215, column: 24, scope: !1756)
!1759 = !DILocation(line: 1215, column: 14, scope: !1756)
!1760 = !DILocation(line: 1215, column: 19, scope: !1756)
!1761 = !DILocation(line: 1215, column: 28, scope: !1756)
!1762 = !DILocation(line: 1215, column: 52, scope: !1756)
!1763 = !DILocation(line: 1215, column: 43, scope: !1756)
!1764 = !DILocation(line: 1215, column: 48, scope: !1756)
!1765 = !DILocation(line: 1215, column: 55, scope: !1756)
!1766 = !DILocation(line: 1215, column: 41, scope: !1756)
!1767 = !DILocation(line: 1215, column: 11, scope: !1756)
!1768 = !DILocation(line: 1212, column: 5, scope: !1520)
!1769 = !DILocation(line: 1217, column: 12, scope: !1456)
!1770 = !DILocation(line: 1217, column: 17, scope: !1456)
!1771 = !DILocation(line: 1217, column: 24, scope: !1456)
!1772 = !DILocation(line: 1217, column: 9, scope: !1456)
!1773 = !DILocation(line: 1220, column: 32, scope: !1456)
!1774 = !DILocation(line: 1220, column: 35, scope: !1456)
!1775 = !DILocation(line: 1220, column: 5, scope: !1456)
!1776 = !DILocation(line: 1222, column: 5, scope: !1456)
!1777 = !DILocation(line: 1222, column: 10, scope: !1456)
!1778 = !DILocation(line: 1222, column: 27, scope: !1456)
!1779 = !DILocation(line: 1223, column: 5, scope: !1456)
!1780 = !DILocation(line: 1223, column: 10, scope: !1456)
!1781 = !DILocation(line: 1223, column: 17, scope: !1456)
!1782 = !DILocation(line: 1229, column: 9, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1456, file: !1, line: 1229, column: 9)
!1784 = !DILocation(line: 1229, column: 16, scope: !1783)
!1785 = !DILocation(line: 1229, column: 21, scope: !1783)
!1786 = !DILocation(line: 1229, column: 13, scope: !1783)
!1787 = !DILocation(line: 1229, column: 30, scope: !1783)
!1788 = !DILocation(line: 1229, column: 33, scope: !1789)
!1789 = !DILexicalBlockFile(scope: !1783, file: !1, discriminator: 1)
!1790 = !DILocation(line: 1229, column: 38, scope: !1789)
!1791 = !DILocation(line: 1229, column: 52, scope: !1789)
!1792 = !DILocation(line: 1229, column: 57, scope: !1789)
!1793 = !DILocation(line: 1229, column: 50, scope: !1789)
!1794 = !DILocation(line: 1229, column: 9, scope: !1789)
!1795 = !DILocation(line: 1230, column: 14, scope: !1783)
!1796 = !DILocation(line: 1230, column: 19, scope: !1783)
!1797 = !DILocation(line: 1230, column: 7, scope: !1783)
!1798 = !DILocation(line: 1233, column: 24, scope: !1456)
!1799 = !DILocation(line: 1233, column: 5, scope: !1456)
!1800 = !DILocation(line: 1233, column: 10, scope: !1456)
!1801 = !DILocation(line: 1233, column: 22, scope: !1456)
!1802 = !DILocation(line: 1234, column: 12, scope: !1456)
!1803 = !DILocation(line: 1234, column: 17, scope: !1456)
!1804 = !DILocation(line: 1234, column: 5, scope: !1456)
!1805 = !DILocation(line: 1238, column: 24, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1451, file: !1, line: 1237, column: 3)
!1807 = !DILocation(line: 1238, column: 27, scope: !1806)
!1808 = !DILocation(line: 1238, column: 5, scope: !1806)
!1809 = !DILocation(line: 1241, column: 3, scope: !642)
!1810 = !DILocation(line: 1242, column: 1, scope: !642)
!1811 = !DILocalVariable(name: "a", arg: 1, scope: !643, file: !1, line: 1245, type: !4)
!1812 = !DILocation(line: 1245, column: 54, scope: !643)
!1813 = !DILocalVariable(name: "rar", scope: !643, file: !1, line: 1247, type: !292)
!1814 = !DILocation(line: 1247, column: 15, scope: !643)
!1815 = !DILocation(line: 1249, column: 24, scope: !643)
!1816 = !DILocation(line: 1249, column: 27, scope: !643)
!1817 = !DILocation(line: 1249, column: 35, scope: !643)
!1818 = !DILocation(line: 1249, column: 9, scope: !643)
!1819 = !DILocation(line: 1249, column: 7, scope: !643)
!1820 = !DILocation(line: 1250, column: 14, scope: !643)
!1821 = !DILocation(line: 1250, column: 3, scope: !643)
!1822 = !DILocation(line: 1251, column: 8, scope: !643)
!1823 = !DILocation(line: 1251, column: 13, scope: !643)
!1824 = !DILocation(line: 1251, column: 3, scope: !643)
!1825 = !DILocation(line: 1252, column: 8, scope: !643)
!1826 = !DILocation(line: 1252, column: 13, scope: !643)
!1827 = !DILocation(line: 1252, column: 3, scope: !643)
!1828 = !DILocation(line: 1253, column: 8, scope: !643)
!1829 = !DILocation(line: 1253, column: 13, scope: !643)
!1830 = !DILocation(line: 1253, column: 3, scope: !643)
!1831 = !DILocation(line: 1254, column: 8, scope: !643)
!1832 = !DILocation(line: 1254, column: 13, scope: !643)
!1833 = !DILocation(line: 1254, column: 3, scope: !643)
!1834 = !DILocation(line: 1255, column: 8, scope: !643)
!1835 = !DILocation(line: 1255, column: 13, scope: !643)
!1836 = !DILocation(line: 1255, column: 18, scope: !643)
!1837 = !DILocation(line: 1255, column: 3, scope: !643)
!1838 = !DILocation(line: 1256, column: 29, scope: !643)
!1839 = !DILocation(line: 1256, column: 41, scope: !643)
!1840 = !DILocation(line: 1256, column: 46, scope: !643)
!1841 = !DILocation(line: 1256, column: 3, scope: !643)
!1842 = !DILocation(line: 1257, column: 8, scope: !643)
!1843 = !DILocation(line: 1257, column: 3, scope: !643)
!1844 = !DILocation(line: 1258, column: 4, scope: !643)
!1845 = !DILocation(line: 1258, column: 7, scope: !643)
!1846 = !DILocation(line: 1258, column: 15, scope: !643)
!1847 = !DILocation(line: 1258, column: 21, scope: !643)
!1848 = !DILocation(line: 1259, column: 3, scope: !643)
!1849 = !DILocalVariable(name: "a", arg: 1, scope: !537, file: !1, line: 682, type: !4)
!1850 = !DILocation(line: 682, column: 68, scope: !537)
!1851 = !DILocation(line: 684, column: 8, scope: !537)
!1852 = !DILocation(line: 685, column: 2, scope: !537)
!1853 = !DILocalVariable(name: "_a", arg: 1, scope: !538, file: !1, line: 690, type: !4)
!1854 = !DILocation(line: 690, column: 68, scope: !538)
!1855 = !DILocation(line: 692, column: 6, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !538, file: !1, line: 692, column: 6)
!1857 = !DILocation(line: 692, column: 9, scope: !1856)
!1858 = !DILocation(line: 692, column: 12, scope: !1859)
!1859 = !DILexicalBlockFile(scope: !1856, file: !1, discriminator: 1)
!1860 = !DILocation(line: 692, column: 16, scope: !1859)
!1861 = !DILocation(line: 692, column: 6, scope: !1859)
!1862 = !DILocalVariable(name: "rar", scope: !1863, file: !1, line: 693, type: !292)
!1863 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 692, column: 24)
!1864 = !DILocation(line: 693, column: 16, scope: !1863)
!1865 = !DILocation(line: 693, column: 36, scope: !1863)
!1866 = !DILocation(line: 693, column: 40, scope: !1863)
!1867 = !DILocation(line: 693, column: 48, scope: !1863)
!1868 = !DILocation(line: 693, column: 22, scope: !1863)
!1869 = !DILocation(line: 694, column: 7, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1863, file: !1, line: 694, column: 7)
!1871 = !DILocation(line: 694, column: 7, scope: !1863)
!1872 = !DILocation(line: 695, column: 11, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1870, file: !1, line: 694, column: 12)
!1874 = !DILocation(line: 695, column: 16, scope: !1873)
!1875 = !DILocation(line: 695, column: 4, scope: !1873)
!1876 = !DILocation(line: 697, column: 2, scope: !1863)
!1877 = !DILocation(line: 698, column: 2, scope: !538)
!1878 = !DILocation(line: 699, column: 1, scope: !538)
!1879 = !DILocalVariable(name: "a", arg: 1, scope: !542, file: !1, line: 744, type: !4)
!1880 = !DILocation(line: 744, column: 31, scope: !542)
!1881 = !DILocalVariable(name: "h", scope: !542, file: !1, line: 746, type: !43)
!1882 = !DILocation(line: 746, column: 15, scope: !542)
!1883 = !DILocalVariable(name: "p", scope: !542, file: !1, line: 747, type: !80)
!1884 = !DILocation(line: 747, column: 15, scope: !542)
!1885 = !DILocalVariable(name: "q", scope: !542, file: !1, line: 747, type: !80)
!1886 = !DILocation(line: 747, column: 19, scope: !542)
!1887 = !DILocalVariable(name: "skip", scope: !542, file: !1, line: 748, type: !45)
!1888 = !DILocation(line: 748, column: 10, scope: !542)
!1889 = !DILocalVariable(name: "total", scope: !542, file: !1, line: 748, type: !45)
!1890 = !DILocation(line: 748, column: 16, scope: !542)
!1891 = !DILocalVariable(name: "bytes", scope: !542, file: !1, line: 749, type: !38)
!1892 = !DILocation(line: 749, column: 11, scope: !542)
!1893 = !DILocalVariable(name: "window", scope: !542, file: !1, line: 749, type: !38)
!1894 = !DILocation(line: 749, column: 18, scope: !542)
!1895 = !DILocation(line: 751, column: 9, scope: !542)
!1896 = !DILocation(line: 752, column: 10, scope: !542)
!1897 = !DILocation(line: 753, column: 3, scope: !542)
!1898 = !DILocation(line: 753, column: 10, scope: !1899)
!1899 = !DILexicalBlockFile(scope: !542, file: !1, discriminator: 1)
!1900 = !DILocation(line: 753, column: 18, scope: !1899)
!1901 = !DILocation(line: 753, column: 16, scope: !1899)
!1902 = !DILocation(line: 753, column: 25, scope: !1899)
!1903 = !DILocation(line: 753, column: 3, scope: !1899)
!1904 = !DILocation(line: 754, column: 30, scope: !1905)
!1905 = distinct !DILexicalBlock(scope: !542, file: !1, line: 753, column: 42)
!1906 = !DILocation(line: 754, column: 33, scope: !1905)
!1907 = !DILocation(line: 754, column: 9, scope: !1905)
!1908 = !DILocation(line: 754, column: 7, scope: !1905)
!1909 = !DILocation(line: 755, column: 9, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1905, file: !1, line: 755, column: 9)
!1911 = !DILocation(line: 755, column: 11, scope: !1910)
!1912 = !DILocation(line: 755, column: 9, scope: !1905)
!1913 = !DILocation(line: 757, column: 14, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 755, column: 20)
!1915 = !DILocation(line: 758, column: 11, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 758, column: 11)
!1917 = !DILocation(line: 758, column: 18, scope: !1916)
!1918 = !DILocation(line: 758, column: 11, scope: !1914)
!1919 = !DILocation(line: 759, column: 8, scope: !1916)
!1920 = !DILocation(line: 760, column: 7, scope: !1914)
!1921 = !DILocation(line: 762, column: 9, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1905, file: !1, line: 762, column: 9)
!1923 = !DILocation(line: 762, column: 15, scope: !1922)
!1924 = !DILocation(line: 762, column: 9, scope: !1905)
!1925 = !DILocation(line: 763, column: 7, scope: !1922)
!1926 = !DILocation(line: 764, column: 9, scope: !1905)
!1927 = !DILocation(line: 764, column: 7, scope: !1905)
!1928 = !DILocation(line: 765, column: 9, scope: !1905)
!1929 = !DILocation(line: 765, column: 13, scope: !1905)
!1930 = !DILocation(line: 765, column: 11, scope: !1905)
!1931 = !DILocation(line: 765, column: 7, scope: !1905)
!1932 = !DILocation(line: 771, column: 5, scope: !1905)
!1933 = !DILocation(line: 771, column: 12, scope: !1934)
!1934 = !DILexicalBlockFile(scope: !1905, file: !1, discriminator: 1)
!1935 = !DILocation(line: 771, column: 14, scope: !1934)
!1936 = !DILocation(line: 771, column: 20, scope: !1934)
!1937 = !DILocation(line: 771, column: 18, scope: !1934)
!1938 = !DILocation(line: 771, column: 5, scope: !1934)
!1939 = !DILocation(line: 772, column: 18, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 772, column: 11)
!1941 = distinct !DILexicalBlock(scope: !1905, file: !1, line: 771, column: 23)
!1942 = !DILocation(line: 772, column: 11, scope: !1940)
!1943 = !DILocation(line: 772, column: 39, scope: !1940)
!1944 = !DILocation(line: 772, column: 11, scope: !1941)
!1945 = !DILocation(line: 773, column: 15, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1940, file: !1, line: 772, column: 45)
!1947 = !DILocation(line: 773, column: 33, scope: !1946)
!1948 = !DILocation(line: 773, column: 17, scope: !1946)
!1949 = !DILocation(line: 773, column: 13, scope: !1946)
!1950 = !DILocation(line: 774, column: 31, scope: !1946)
!1951 = !DILocation(line: 774, column: 34, scope: !1946)
!1952 = !DILocation(line: 774, column: 8, scope: !1946)
!1953 = !DILocation(line: 775, column: 8, scope: !1946)
!1954 = !DILocation(line: 777, column: 9, scope: !1941)
!1955 = !DILocation(line: 771, column: 5, scope: !1956)
!1956 = !DILexicalBlockFile(scope: !1905, file: !1, discriminator: 2)
!1957 = !DILocation(line: 779, column: 12, scope: !1905)
!1958 = !DILocation(line: 779, column: 30, scope: !1905)
!1959 = !DILocation(line: 779, column: 14, scope: !1905)
!1960 = !DILocation(line: 779, column: 10, scope: !1905)
!1961 = !DILocation(line: 780, column: 28, scope: !1905)
!1962 = !DILocation(line: 780, column: 31, scope: !1905)
!1963 = !DILocation(line: 780, column: 5, scope: !1905)
!1964 = !DILocation(line: 781, column: 11, scope: !1905)
!1965 = !DILocation(line: 781, column: 8, scope: !1905)
!1966 = !DILocation(line: 753, column: 3, scope: !1967)
!1967 = !DILexicalBlockFile(scope: !542, file: !1, discriminator: 2)
!1968 = !DILocation(line: 753, column: 3, scope: !1969)
!1969 = !DILexicalBlockFile(scope: !542, file: !1, discriminator: 3)
!1970 = !DILocation(line: 784, column: 22, scope: !542)
!1971 = !DILocation(line: 784, column: 25, scope: !542)
!1972 = !DILocation(line: 784, column: 3, scope: !542)
!1973 = !DILocation(line: 786, column: 3, scope: !542)
!1974 = !DILocation(line: 787, column: 1, scope: !542)
!1975 = !DILocalVariable(name: "pp", arg: 1, scope: !543, file: !544, line: 101, type: !43)
!1976 = !DILocation(line: 101, column: 29, scope: !543)
!1977 = !DILocalVariable(name: "p", scope: !543, file: !544, line: 103, type: !531)
!1978 = !DILocation(line: 103, column: 23, scope: !543)
!1979 = !DILocation(line: 103, column: 50, scope: !543)
!1980 = !DILocalVariable(name: "p1", scope: !543, file: !544, line: 108, type: !13)
!1981 = !DILocation(line: 108, column: 15, scope: !543)
!1982 = !DILocation(line: 108, column: 20, scope: !543)
!1983 = !DILocalVariable(name: "p0", scope: !543, file: !544, line: 109, type: !13)
!1984 = !DILocation(line: 109, column: 15, scope: !543)
!1985 = !DILocation(line: 109, column: 20, scope: !543)
!1986 = !DILocation(line: 111, column: 11, scope: !543)
!1987 = !DILocation(line: 111, column: 14, scope: !543)
!1988 = !DILocation(line: 111, column: 22, scope: !543)
!1989 = !DILocation(line: 111, column: 20, scope: !543)
!1990 = !DILocation(line: 111, column: 9, scope: !543)
!1991 = !DILocation(line: 111, column: 2, scope: !543)
!1992 = !DILocalVariable(name: "a", arg: 1, scope: !548, file: !1, line: 1263, type: !4)
!1993 = !DILocation(line: 1263, column: 34, scope: !548)
!1994 = !DILocalVariable(name: "entry", arg: 2, scope: !548, file: !1, line: 1263, type: !30)
!1995 = !DILocation(line: 1263, column: 59, scope: !548)
!1996 = !DILocalVariable(name: "head_type", arg: 3, scope: !548, file: !1, line: 1264, type: !82)
!1997 = !DILocation(line: 1264, column: 18, scope: !548)
!1998 = !DILocalVariable(name: "h", scope: !548, file: !1, line: 1266, type: !43)
!1999 = !DILocation(line: 1266, column: 15, scope: !548)
!2000 = !DILocalVariable(name: "p", scope: !548, file: !1, line: 1267, type: !80)
!2001 = !DILocation(line: 1267, column: 15, scope: !548)
!2002 = !DILocalVariable(name: "endp", scope: !548, file: !1, line: 1267, type: !80)
!2003 = !DILocation(line: 1267, column: 19, scope: !548)
!2004 = !DILocalVariable(name: "rar", scope: !548, file: !1, line: 1268, type: !292)
!2005 = !DILocation(line: 1268, column: 15, scope: !548)
!2006 = !DILocalVariable(name: "rar_header", scope: !548, file: !1, line: 1269, type: !2007)
!2007 = !DICompositeType(tag: DW_TAG_structure_type, name: "rar_header", file: !1, line: 152, size: 56, align: 8, elements: !2008)
!2008 = !{!2009, !2010, !2011, !2012}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !2007, file: !1, line: 154, baseType: !298, size: 16, align: 8)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2007, file: !1, line: 155, baseType: !82, size: 8, align: 8, offset: 16)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2007, file: !1, line: 156, baseType: !298, size: 16, align: 8, offset: 24)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2007, file: !1, line: 157, baseType: !298, size: 16, align: 8, offset: 40)
!2013 = !DILocation(line: 1269, column: 21, scope: !548)
!2014 = !DILocalVariable(name: "file_header", scope: !548, file: !1, line: 1270, type: !2015)
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "rar_file_header", file: !1, line: 161, size: 200, align: 8, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pack_size", scope: !2015, file: !1, line: 163, baseType: !302, size: 32, align: 8)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "unp_size", scope: !2015, file: !1, line: 164, baseType: !302, size: 32, align: 8, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "host_os", scope: !2015, file: !1, line: 165, baseType: !82, size: 8, align: 8, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "file_crc", scope: !2015, file: !1, line: 166, baseType: !302, size: 32, align: 8, offset: 72)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "file_time", scope: !2015, file: !1, line: 167, baseType: !302, size: 32, align: 8, offset: 104)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "unp_ver", scope: !2015, file: !1, line: 168, baseType: !82, size: 8, align: 8, offset: 136)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !2015, file: !1, line: 169, baseType: !82, size: 8, align: 8, offset: 144)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "name_size", scope: !2015, file: !1, line: 170, baseType: !298, size: 16, align: 8, offset: 152)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "file_attr", scope: !2015, file: !1, line: 171, baseType: !302, size: 32, align: 8, offset: 168)
!2026 = !DILocation(line: 1270, column: 26, scope: !548)
!2027 = !DILocalVariable(name: "header_size", scope: !548, file: !1, line: 1271, type: !52)
!2028 = !DILocation(line: 1271, column: 11, scope: !548)
!2029 = !DILocalVariable(name: "filename_size", scope: !548, file: !1, line: 1272, type: !13)
!2030 = !DILocation(line: 1272, column: 12, scope: !548)
!2031 = !DILocalVariable(name: "end", scope: !548, file: !1, line: 1272, type: !13)
!2032 = !DILocation(line: 1272, column: 27, scope: !548)
!2033 = !DILocalVariable(name: "filename", scope: !548, file: !1, line: 1273, type: !95)
!2034 = !DILocation(line: 1273, column: 9, scope: !548)
!2035 = !DILocalVariable(name: "strp", scope: !548, file: !1, line: 1274, type: !95)
!2036 = !DILocation(line: 1274, column: 9, scope: !548)
!2037 = !DILocalVariable(name: "packed_size", scope: !548, file: !1, line: 1275, type: !323)
!2038 = !DILocation(line: 1275, column: 8, scope: !548)
!2039 = !DILocalVariable(name: "unp_size", scope: !548, file: !1, line: 1276, type: !323)
!2040 = !DILocation(line: 1276, column: 8, scope: !548)
!2041 = !DILocalVariable(name: "ttime", scope: !548, file: !1, line: 1277, type: !23)
!2042 = !DILocation(line: 1277, column: 7, scope: !548)
!2043 = !DILocalVariable(name: "sconv", scope: !548, file: !1, line: 1278, type: !102)
!2044 = !DILocation(line: 1278, column: 31, scope: !548)
!2045 = !DILocalVariable(name: "fn_sconv", scope: !548, file: !1, line: 1278, type: !102)
!2046 = !DILocation(line: 1278, column: 39, scope: !548)
!2047 = !DILocalVariable(name: "crc32_val", scope: !548, file: !1, line: 1279, type: !47)
!2048 = !DILocation(line: 1279, column: 17, scope: !548)
!2049 = !DILocalVariable(name: "ret", scope: !548, file: !1, line: 1280, type: !23)
!2050 = !DILocation(line: 1280, column: 7, scope: !548)
!2051 = !DILocalVariable(name: "ret2", scope: !548, file: !1, line: 1280, type: !23)
!2052 = !DILocation(line: 1280, column: 27, scope: !548)
!2053 = !DILocation(line: 1282, column: 24, scope: !548)
!2054 = !DILocation(line: 1282, column: 27, scope: !548)
!2055 = !DILocation(line: 1282, column: 35, scope: !548)
!2056 = !DILocation(line: 1282, column: 9, scope: !548)
!2057 = !DILocation(line: 1282, column: 7, scope: !548)
!2058 = !DILocation(line: 1285, column: 11, scope: !548)
!2059 = !DILocation(line: 1285, column: 16, scope: !548)
!2060 = !DILocation(line: 1285, column: 9, scope: !548)
!2061 = !DILocation(line: 1286, column: 7, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1286, column: 7)
!2063 = !DILocation(line: 1286, column: 13, scope: !2062)
!2064 = !DILocation(line: 1286, column: 7, scope: !548)
!2065 = !DILocation(line: 1287, column: 10, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2067, file: !1, line: 1287, column: 9)
!2067 = distinct !DILexicalBlock(scope: !2062, file: !1, line: 1286, column: 22)
!2068 = !DILocation(line: 1287, column: 15, scope: !2066)
!2069 = !DILocation(line: 1287, column: 9, scope: !2067)
!2070 = !DILocation(line: 1290, column: 15, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2066, file: !1, line: 1287, column: 40)
!2072 = !DILocation(line: 1290, column: 18, scope: !2071)
!2073 = !DILocation(line: 1289, column: 11, scope: !2071)
!2074 = !DILocation(line: 1288, column: 7, scope: !2071)
!2075 = !DILocation(line: 1288, column: 12, scope: !2071)
!2076 = !DILocation(line: 1288, column: 26, scope: !2071)
!2077 = !DILocation(line: 1291, column: 7, scope: !2071)
!2078 = !DILocation(line: 1291, column: 12, scope: !2071)
!2079 = !DILocation(line: 1291, column: 36, scope: !2071)
!2080 = !DILocation(line: 1292, column: 5, scope: !2071)
!2081 = !DILocation(line: 1293, column: 13, scope: !2067)
!2082 = !DILocation(line: 1293, column: 18, scope: !2067)
!2083 = !DILocation(line: 1293, column: 11, scope: !2067)
!2084 = !DILocation(line: 1294, column: 3, scope: !2067)
!2085 = !DILocation(line: 1297, column: 33, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1297, column: 7)
!2087 = !DILocation(line: 1297, column: 12, scope: !2086)
!2088 = !DILocation(line: 1297, column: 10, scope: !2086)
!2089 = !DILocation(line: 1297, column: 46, scope: !2086)
!2090 = !DILocation(line: 1297, column: 7, scope: !548)
!2091 = !DILocation(line: 1298, column: 5, scope: !2086)
!2092 = !DILocation(line: 1299, column: 7, scope: !548)
!2093 = !DILocation(line: 1299, column: 5, scope: !548)
!2094 = !DILocation(line: 1300, column: 3, scope: !548)
!2095 = !DILocation(line: 1300, column: 23, scope: !548)
!2096 = !DILocation(line: 1301, column: 48, scope: !548)
!2097 = !DILocation(line: 1301, column: 37, scope: !548)
!2098 = !DILocation(line: 1301, column: 21, scope: !548)
!2099 = !DILocation(line: 1301, column: 3, scope: !548)
!2100 = !DILocation(line: 1301, column: 8, scope: !548)
!2101 = !DILocation(line: 1301, column: 19, scope: !548)
!2102 = !DILocation(line: 1302, column: 44, scope: !548)
!2103 = !DILocation(line: 1302, column: 33, scope: !548)
!2104 = !DILocation(line: 1302, column: 17, scope: !548)
!2105 = !DILocation(line: 1302, column: 15, scope: !548)
!2106 = !DILocation(line: 1303, column: 7, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1303, column: 7)
!2108 = !DILocation(line: 1303, column: 19, scope: !2107)
!2109 = !DILocation(line: 1303, column: 7, scope: !548)
!2110 = !DILocation(line: 1304, column: 24, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2107, file: !1, line: 1303, column: 55)
!2112 = !DILocation(line: 1304, column: 27, scope: !2111)
!2113 = !DILocation(line: 1304, column: 5, scope: !2111)
!2114 = !DILocation(line: 1306, column: 5, scope: !2111)
!2115 = !DILocation(line: 1308, column: 47, scope: !548)
!2116 = !DILocation(line: 1308, column: 49, scope: !548)
!2117 = !DILocation(line: 1308, column: 15, scope: !548)
!2118 = !DILocation(line: 1308, column: 13, scope: !548)
!2119 = !DILocation(line: 1309, column: 26, scope: !548)
!2120 = !DILocation(line: 1309, column: 3, scope: !548)
!2121 = !DILocation(line: 1311, column: 9, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1311, column: 7)
!2123 = !DILocation(line: 1311, column: 14, scope: !2122)
!2124 = !DILocation(line: 1311, column: 25, scope: !2122)
!2125 = !DILocation(line: 1311, column: 7, scope: !548)
!2126 = !DILocation(line: 1313, column: 5, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2122, file: !1, line: 1312, column: 3)
!2128 = !DILocation(line: 1313, column: 10, scope: !2127)
!2129 = !DILocation(line: 1313, column: 29, scope: !2127)
!2130 = !DILocation(line: 1314, column: 5, scope: !2127)
!2131 = !DILocation(line: 1314, column: 10, scope: !2127)
!2132 = !DILocation(line: 1314, column: 22, scope: !2127)
!2133 = !DILocation(line: 1315, column: 5, scope: !2127)
!2134 = !DILocation(line: 1315, column: 10, scope: !2127)
!2135 = !DILocation(line: 1315, column: 19, scope: !2127)
!2136 = !DILocation(line: 1316, column: 5, scope: !2127)
!2137 = !DILocation(line: 1316, column: 10, scope: !2127)
!2138 = !DILocation(line: 1316, column: 16, scope: !2127)
!2139 = !DILocation(line: 1317, column: 5, scope: !2127)
!2140 = !DILocation(line: 1317, column: 10, scope: !2127)
!2141 = !DILocation(line: 1317, column: 16, scope: !2127)
!2142 = !DILocation(line: 1318, column: 5, scope: !2127)
!2143 = !DILocation(line: 1318, column: 10, scope: !2127)
!2144 = !DILocation(line: 1318, column: 16, scope: !2127)
!2145 = !DILocation(line: 1319, column: 5, scope: !2127)
!2146 = !DILocation(line: 1319, column: 10, scope: !2127)
!2147 = !DILocation(line: 1319, column: 18, scope: !2127)
!2148 = !DILocation(line: 1320, column: 5, scope: !2127)
!2149 = !DILocation(line: 1320, column: 10, scope: !2127)
!2150 = !DILocation(line: 1320, column: 15, scope: !2127)
!2151 = !DILocation(line: 1321, column: 13, scope: !2127)
!2152 = !DILocation(line: 1321, column: 18, scope: !2127)
!2153 = !DILocation(line: 1321, column: 5, scope: !2127)
!2154 = !DILocation(line: 1322, column: 5, scope: !2127)
!2155 = !DILocation(line: 1322, column: 10, scope: !2127)
!2156 = !DILocation(line: 1322, column: 16, scope: !2127)
!2157 = !DILocation(line: 1323, column: 5, scope: !2127)
!2158 = !DILocation(line: 1323, column: 10, scope: !2127)
!2159 = !DILocation(line: 1323, column: 16, scope: !2127)
!2160 = !DILocation(line: 1324, column: 5, scope: !2127)
!2161 = !DILocation(line: 1324, column: 10, scope: !2127)
!2162 = !DILocation(line: 1324, column: 16, scope: !2127)
!2163 = !DILocation(line: 1325, column: 5, scope: !2127)
!2164 = !DILocation(line: 1325, column: 10, scope: !2127)
!2165 = !DILocation(line: 1325, column: 16, scope: !2127)
!2166 = !DILocation(line: 1326, column: 5, scope: !2127)
!2167 = !DILocation(line: 1326, column: 10, scope: !2127)
!2168 = !DILocation(line: 1326, column: 16, scope: !2127)
!2169 = !DILocation(line: 1327, column: 5, scope: !2127)
!2170 = !DILocation(line: 1327, column: 10, scope: !2127)
!2171 = !DILocation(line: 1327, column: 16, scope: !2127)
!2172 = !DILocation(line: 1328, column: 5, scope: !2127)
!2173 = !DILocation(line: 1328, column: 10, scope: !2127)
!2174 = !DILocation(line: 1328, column: 18, scope: !2127)
!2175 = !DILocation(line: 1329, column: 5, scope: !2127)
!2176 = !DILocation(line: 1329, column: 10, scope: !2127)
!2177 = !DILocation(line: 1329, column: 18, scope: !2127)
!2178 = !DILocation(line: 1330, column: 3, scope: !2127)
!2179 = !DILocation(line: 1333, column: 24, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2122, file: !1, line: 1332, column: 3)
!2181 = !DILocation(line: 1333, column: 27, scope: !2180)
!2182 = !DILocation(line: 1333, column: 5, scope: !2180)
!2183 = !DILocation(line: 1335, column: 5, scope: !2180)
!2184 = !DILocation(line: 1338, column: 33, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1338, column: 7)
!2186 = !DILocation(line: 1338, column: 44, scope: !2185)
!2187 = !DILocation(line: 1338, column: 56, scope: !2185)
!2188 = !DILocation(line: 1338, column: 12, scope: !2185)
!2189 = !DILocation(line: 1338, column: 10, scope: !2185)
!2190 = !DILocation(line: 1338, column: 68, scope: !2185)
!2191 = !DILocation(line: 1338, column: 7, scope: !548)
!2192 = !DILocation(line: 1339, column: 5, scope: !2185)
!2193 = !DILocation(line: 1342, column: 21, scope: !548)
!2194 = !DILocation(line: 1342, column: 32, scope: !548)
!2195 = !DILocation(line: 1342, column: 46, scope: !548)
!2196 = !DILocation(line: 1342, column: 58, scope: !548)
!2197 = !DILocation(line: 1342, column: 35, scope: !548)
!2198 = !DILocation(line: 1342, column: 15, scope: !548)
!2199 = !DILocation(line: 1342, column: 13, scope: !548)
!2200 = !DILocation(line: 1343, column: 8, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1343, column: 7)
!2202 = !DILocation(line: 1343, column: 18, scope: !2201)
!2203 = !DILocation(line: 1343, column: 58, scope: !2201)
!2204 = !DILocation(line: 1343, column: 47, scope: !2201)
!2205 = !DILocation(line: 1343, column: 31, scope: !2201)
!2206 = !DILocation(line: 1343, column: 28, scope: !2201)
!2207 = !DILocation(line: 1343, column: 7, scope: !548)
!2208 = !DILocation(line: 1344, column: 24, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2201, file: !1, line: 1343, column: 64)
!2210 = !DILocation(line: 1344, column: 27, scope: !2209)
!2211 = !DILocation(line: 1344, column: 5, scope: !2209)
!2212 = !DILocation(line: 1346, column: 5, scope: !2209)
!2213 = !DILocation(line: 1349, column: 7, scope: !548)
!2214 = !DILocation(line: 1349, column: 5, scope: !548)
!2215 = !DILocation(line: 1350, column: 10, scope: !548)
!2216 = !DILocation(line: 1350, column: 14, scope: !548)
!2217 = !DILocation(line: 1350, column: 12, scope: !548)
!2218 = !DILocation(line: 1350, column: 26, scope: !548)
!2219 = !DILocation(line: 1350, column: 8, scope: !548)
!2220 = !DILocation(line: 1351, column: 3, scope: !548)
!2221 = !DILocation(line: 1351, column: 24, scope: !548)
!2222 = !DILocation(line: 1352, column: 5, scope: !548)
!2223 = !DILocation(line: 1354, column: 41, scope: !548)
!2224 = !DILocation(line: 1354, column: 3, scope: !548)
!2225 = !DILocation(line: 1354, column: 8, scope: !548)
!2226 = !DILocation(line: 1354, column: 27, scope: !548)
!2227 = !DILocation(line: 1356, column: 39, scope: !548)
!2228 = !DILocation(line: 1356, column: 27, scope: !548)
!2229 = !DILocation(line: 1356, column: 11, scope: !548)
!2230 = !DILocation(line: 1356, column: 9, scope: !548)
!2231 = !DILocation(line: 1357, column: 25, scope: !548)
!2232 = !DILocation(line: 1357, column: 16, scope: !548)
!2233 = !DILocation(line: 1357, column: 3, scope: !548)
!2234 = !DILocation(line: 1357, column: 8, scope: !548)
!2235 = !DILocation(line: 1357, column: 14, scope: !548)
!2236 = !DILocation(line: 1359, column: 47, scope: !548)
!2237 = !DILocation(line: 1359, column: 35, scope: !548)
!2238 = !DILocation(line: 1359, column: 19, scope: !548)
!2239 = !DILocation(line: 1359, column: 3, scope: !548)
!2240 = !DILocation(line: 1359, column: 8, scope: !548)
!2241 = !DILocation(line: 1359, column: 17, scope: !548)
!2242 = !DILocation(line: 1361, column: 7, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1361, column: 7)
!2244 = !DILocation(line: 1361, column: 12, scope: !2243)
!2245 = !DILocation(line: 1361, column: 23, scope: !2243)
!2246 = !DILocation(line: 1361, column: 7, scope: !548)
!2247 = !DILocation(line: 1363, column: 38, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2243, file: !1, line: 1362, column: 3)
!2249 = !DILocation(line: 1363, column: 2, scope: !2248)
!2250 = !DILocation(line: 1364, column: 2, scope: !2248)
!2251 = !DILocation(line: 1364, column: 7, scope: !2248)
!2252 = !DILocation(line: 1364, column: 29, scope: !2248)
!2253 = !DILocation(line: 1365, column: 24, scope: !2248)
!2254 = !DILocation(line: 1365, column: 27, scope: !2248)
!2255 = !DILocation(line: 1365, column: 5, scope: !2248)
!2256 = !DILocation(line: 1371, column: 3, scope: !2248)
!2257 = !DILocation(line: 1373, column: 7, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1373, column: 7)
!2259 = !DILocation(line: 1373, column: 12, scope: !2258)
!2260 = !DILocation(line: 1373, column: 23, scope: !2258)
!2261 = !DILocation(line: 1373, column: 7, scope: !548)
!2262 = !DILocation(line: 1375, column: 5, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2258, file: !1, line: 1374, column: 3)
!2264 = !DILocation(line: 1375, column: 37, scope: !2263)
!2265 = !DILocation(line: 1376, column: 12, scope: !2263)
!2266 = !DILocation(line: 1376, column: 24, scope: !2263)
!2267 = !DILocation(line: 1376, column: 29, scope: !2263)
!2268 = !DILocation(line: 1376, column: 5, scope: !2263)
!2269 = !DILocation(line: 1377, column: 7, scope: !2263)
!2270 = !DILocation(line: 1378, column: 5, scope: !2263)
!2271 = !DILocation(line: 1378, column: 34, scope: !2263)
!2272 = !DILocation(line: 1379, column: 12, scope: !2263)
!2273 = !DILocation(line: 1379, column: 21, scope: !2263)
!2274 = !DILocation(line: 1379, column: 26, scope: !2263)
!2275 = !DILocation(line: 1379, column: 5, scope: !2263)
!2276 = !DILocation(line: 1380, column: 7, scope: !2263)
!2277 = !DILocation(line: 1381, column: 40, scope: !2263)
!2278 = !DILocation(line: 1381, column: 24, scope: !2263)
!2279 = !DILocation(line: 1381, column: 5, scope: !2263)
!2280 = !DILocation(line: 1381, column: 10, scope: !2263)
!2281 = !DILocation(line: 1381, column: 22, scope: !2263)
!2282 = !DILocation(line: 1382, column: 37, scope: !2263)
!2283 = !DILocation(line: 1382, column: 21, scope: !2263)
!2284 = !DILocation(line: 1382, column: 5, scope: !2263)
!2285 = !DILocation(line: 1382, column: 10, scope: !2263)
!2286 = !DILocation(line: 1382, column: 19, scope: !2263)
!2287 = !DILocation(line: 1383, column: 3, scope: !2263)
!2288 = !DILocation(line: 1386, column: 52, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2258, file: !1, line: 1385, column: 3)
!2290 = !DILocation(line: 1386, column: 40, scope: !2289)
!2291 = !DILocation(line: 1386, column: 24, scope: !2289)
!2292 = !DILocation(line: 1386, column: 5, scope: !2289)
!2293 = !DILocation(line: 1386, column: 10, scope: !2289)
!2294 = !DILocation(line: 1386, column: 22, scope: !2289)
!2295 = !DILocation(line: 1387, column: 49, scope: !2289)
!2296 = !DILocation(line: 1387, column: 37, scope: !2289)
!2297 = !DILocation(line: 1387, column: 21, scope: !2289)
!2298 = !DILocation(line: 1387, column: 5, scope: !2289)
!2299 = !DILocation(line: 1387, column: 10, scope: !2289)
!2300 = !DILocation(line: 1387, column: 19, scope: !2289)
!2301 = !DILocation(line: 1390, column: 7, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1390, column: 7)
!2303 = !DILocation(line: 1390, column: 12, scope: !2302)
!2304 = !DILocation(line: 1390, column: 24, scope: !2302)
!2305 = !DILocation(line: 1390, column: 28, scope: !2302)
!2306 = !DILocation(line: 1390, column: 31, scope: !2307)
!2307 = !DILexicalBlockFile(scope: !2302, file: !1, discriminator: 1)
!2308 = !DILocation(line: 1390, column: 36, scope: !2307)
!2309 = !DILocation(line: 1390, column: 45, scope: !2307)
!2310 = !DILocation(line: 1390, column: 7, scope: !2307)
!2311 = !DILocation(line: 1392, column: 24, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2302, file: !1, line: 1391, column: 3)
!2313 = !DILocation(line: 1392, column: 27, scope: !2312)
!2314 = !DILocation(line: 1392, column: 5, scope: !2312)
!2315 = !DILocation(line: 1394, column: 5, scope: !2312)
!2316 = !DILocation(line: 1397, column: 26, scope: !548)
!2317 = !DILocation(line: 1397, column: 31, scope: !548)
!2318 = !DILocation(line: 1397, column: 3, scope: !548)
!2319 = !DILocation(line: 1397, column: 8, scope: !548)
!2320 = !DILocation(line: 1397, column: 24, scope: !548)
!2321 = !DILocation(line: 1402, column: 7, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1402, column: 7)
!2323 = !DILocation(line: 1402, column: 17, scope: !2322)
!2324 = !DILocation(line: 1402, column: 7, scope: !548)
!2325 = !DILocalVariable(name: "distance", scope: !2326, file: !1, line: 1403, type: !45)
!2326 = distinct !DILexicalBlock(scope: !2322, file: !1, line: 1402, column: 33)
!2327 = !DILocation(line: 1403, column: 12, scope: !2326)
!2328 = !DILocation(line: 1403, column: 23, scope: !2326)
!2329 = !DILocation(line: 1403, column: 41, scope: !2326)
!2330 = !DILocation(line: 1403, column: 25, scope: !2326)
!2331 = !DILocation(line: 1404, column: 20, scope: !2326)
!2332 = !DILocation(line: 1404, column: 25, scope: !2326)
!2333 = !DILocation(line: 1404, column: 17, scope: !2326)
!2334 = !DILocation(line: 1406, column: 35, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 1406, column: 9)
!2336 = !DILocation(line: 1406, column: 46, scope: !2335)
!2337 = !DILocation(line: 1406, column: 58, scope: !2335)
!2338 = !DILocation(line: 1406, column: 14, scope: !2335)
!2339 = !DILocation(line: 1406, column: 12, scope: !2335)
!2340 = !DILocation(line: 1406, column: 70, scope: !2335)
!2341 = !DILocation(line: 1406, column: 9, scope: !2326)
!2342 = !DILocation(line: 1407, column: 9, scope: !2335)
!2343 = !DILocation(line: 1408, column: 9, scope: !2326)
!2344 = !DILocation(line: 1408, column: 7, scope: !2326)
!2345 = !DILocation(line: 1409, column: 12, scope: !2326)
!2346 = !DILocation(line: 1409, column: 16, scope: !2326)
!2347 = !DILocation(line: 1409, column: 14, scope: !2326)
!2348 = !DILocation(line: 1409, column: 28, scope: !2326)
!2349 = !DILocation(line: 1409, column: 10, scope: !2326)
!2350 = !DILocation(line: 1410, column: 10, scope: !2326)
!2351 = !DILocation(line: 1410, column: 7, scope: !2326)
!2352 = !DILocation(line: 1411, column: 3, scope: !2326)
!2353 = !DILocation(line: 1413, column: 47, scope: !548)
!2354 = !DILocation(line: 1413, column: 35, scope: !548)
!2355 = !DILocation(line: 1413, column: 19, scope: !548)
!2356 = !DILocation(line: 1413, column: 17, scope: !548)
!2357 = !DILocation(line: 1414, column: 7, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1414, column: 7)
!2359 = !DILocation(line: 1414, column: 11, scope: !2358)
!2360 = !DILocation(line: 1414, column: 9, scope: !2358)
!2361 = !DILocation(line: 1414, column: 27, scope: !2358)
!2362 = !DILocation(line: 1414, column: 25, scope: !2358)
!2363 = !DILocation(line: 1414, column: 7, scope: !548)
!2364 = !DILocation(line: 1415, column: 24, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2358, file: !1, line: 1414, column: 33)
!2366 = !DILocation(line: 1415, column: 27, scope: !2365)
!2367 = !DILocation(line: 1415, column: 5, scope: !2365)
!2368 = !DILocation(line: 1417, column: 5, scope: !2365)
!2369 = !DILocation(line: 1419, column: 7, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1419, column: 7)
!2371 = !DILocation(line: 1419, column: 12, scope: !2370)
!2372 = !DILocation(line: 1419, column: 33, scope: !2370)
!2373 = !DILocation(line: 1419, column: 47, scope: !2370)
!2374 = !DILocation(line: 1419, column: 51, scope: !2370)
!2375 = !DILocation(line: 1419, column: 31, scope: !2370)
!2376 = !DILocation(line: 1419, column: 7, scope: !548)
!2377 = !DILocalVariable(name: "newptr", scope: !2378, file: !1, line: 1420, type: !95)
!2378 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 1419, column: 56)
!2379 = !DILocation(line: 1420, column: 11, scope: !2378)
!2380 = !DILocalVariable(name: "newsize", scope: !2378, file: !1, line: 1421, type: !45)
!2381 = !DILocation(line: 1421, column: 12, scope: !2378)
!2382 = !DILocation(line: 1421, column: 22, scope: !2378)
!2383 = !DILocation(line: 1421, column: 36, scope: !2378)
!2384 = !DILocation(line: 1421, column: 40, scope: !2378)
!2385 = !DILocation(line: 1422, column: 22, scope: !2378)
!2386 = !DILocation(line: 1422, column: 27, scope: !2378)
!2387 = !DILocation(line: 1422, column: 37, scope: !2378)
!2388 = !DILocation(line: 1422, column: 14, scope: !2378)
!2389 = !DILocation(line: 1422, column: 12, scope: !2378)
!2390 = !DILocation(line: 1423, column: 9, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2378, file: !1, line: 1423, column: 9)
!2392 = !DILocation(line: 1423, column: 16, scope: !2391)
!2393 = !DILocation(line: 1423, column: 9, scope: !2378)
!2394 = !DILocation(line: 1424, column: 26, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2391, file: !1, line: 1423, column: 25)
!2396 = !DILocation(line: 1424, column: 29, scope: !2395)
!2397 = !DILocation(line: 1424, column: 7, scope: !2395)
!2398 = !DILocation(line: 1426, column: 7, scope: !2395)
!2399 = !DILocation(line: 1428, column: 21, scope: !2378)
!2400 = !DILocation(line: 1428, column: 5, scope: !2378)
!2401 = !DILocation(line: 1428, column: 10, scope: !2378)
!2402 = !DILocation(line: 1428, column: 19, scope: !2378)
!2403 = !DILocation(line: 1429, column: 31, scope: !2378)
!2404 = !DILocation(line: 1429, column: 5, scope: !2378)
!2405 = !DILocation(line: 1429, column: 10, scope: !2378)
!2406 = !DILocation(line: 1429, column: 29, scope: !2378)
!2407 = !DILocation(line: 1430, column: 3, scope: !2378)
!2408 = !DILocation(line: 1431, column: 14, scope: !548)
!2409 = !DILocation(line: 1431, column: 19, scope: !548)
!2410 = !DILocation(line: 1431, column: 12, scope: !548)
!2411 = !DILocation(line: 1432, column: 10, scope: !548)
!2412 = !DILocation(line: 1432, column: 20, scope: !548)
!2413 = !DILocation(line: 1432, column: 23, scope: !548)
!2414 = !DILocation(line: 1432, column: 3, scope: !548)
!2415 = !DILocation(line: 1433, column: 12, scope: !548)
!2416 = !DILocation(line: 1433, column: 3, scope: !548)
!2417 = !DILocation(line: 1433, column: 27, scope: !548)
!2418 = !DILocation(line: 1434, column: 7, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1434, column: 7)
!2420 = !DILocation(line: 1434, column: 12, scope: !2419)
!2421 = !DILocation(line: 1434, column: 23, scope: !2419)
!2422 = !DILocation(line: 1434, column: 7, scope: !548)
!2423 = !DILocation(line: 1436, column: 9, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !1, line: 1436, column: 9)
!2425 = distinct !DILexicalBlock(scope: !2419, file: !1, line: 1435, column: 3)
!2426 = !DILocation(line: 1436, column: 33, scope: !2424)
!2427 = !DILocation(line: 1436, column: 26, scope: !2424)
!2428 = !DILocation(line: 1436, column: 23, scope: !2424)
!2429 = !DILocation(line: 1436, column: 9, scope: !2425)
!2430 = !DILocalVariable(name: "highbyte", scope: !2431, file: !1, line: 1438, type: !343)
!2431 = distinct !DILexicalBlock(scope: !2424, file: !1, line: 1437, column: 5)
!2432 = !DILocation(line: 1438, column: 21, scope: !2431)
!2433 = !DILocalVariable(name: "flagbits", scope: !2431, file: !1, line: 1438, type: !343)
!2434 = !DILocation(line: 1438, column: 31, scope: !2431)
!2435 = !DILocalVariable(name: "flagbyte", scope: !2431, file: !1, line: 1438, type: !343)
!2436 = !DILocation(line: 1438, column: 41, scope: !2431)
!2437 = !DILocalVariable(name: "fn_end", scope: !2431, file: !1, line: 1439, type: !13)
!2438 = !DILocation(line: 1439, column: 16, scope: !2431)
!2439 = !DILocalVariable(name: "offset", scope: !2431, file: !1, line: 1439, type: !13)
!2440 = !DILocation(line: 1439, column: 24, scope: !2431)
!2441 = !DILocation(line: 1441, column: 13, scope: !2431)
!2442 = !DILocation(line: 1441, column: 11, scope: !2431)
!2443 = !DILocation(line: 1442, column: 16, scope: !2431)
!2444 = !DILocation(line: 1442, column: 30, scope: !2431)
!2445 = !DILocation(line: 1442, column: 14, scope: !2431)
!2446 = !DILocation(line: 1443, column: 21, scope: !2431)
!2447 = !DILocation(line: 1444, column: 33, scope: !2431)
!2448 = !DILocation(line: 1444, column: 26, scope: !2431)
!2449 = !DILocation(line: 1444, column: 16, scope: !2431)
!2450 = !DILocation(line: 1444, column: 43, scope: !2431)
!2451 = !DILocation(line: 1444, column: 14, scope: !2431)
!2452 = !DILocation(line: 1445, column: 20, scope: !2431)
!2453 = !DILocation(line: 1445, column: 30, scope: !2431)
!2454 = !DILocation(line: 1445, column: 22, scope: !2431)
!2455 = !DILocation(line: 1445, column: 18, scope: !2431)
!2456 = !DILocation(line: 1445, column: 16, scope: !2431)
!2457 = !DILocation(line: 1446, column: 16, scope: !2431)
!2458 = !DILocation(line: 1447, column: 16, scope: !2431)
!2459 = !DILocation(line: 1448, column: 7, scope: !2431)
!2460 = !DILocation(line: 1448, column: 14, scope: !2461)
!2461 = !DILexicalBlockFile(scope: !2431, file: !1, discriminator: 1)
!2462 = !DILocation(line: 1448, column: 23, scope: !2461)
!2463 = !DILocation(line: 1448, column: 21, scope: !2461)
!2464 = !DILocation(line: 1448, column: 27, scope: !2461)
!2465 = !DILocation(line: 1448, column: 30, scope: !2466)
!2466 = !DILexicalBlockFile(scope: !2431, file: !1, discriminator: 2)
!2467 = !DILocation(line: 1448, column: 46, scope: !2466)
!2468 = !DILocation(line: 1448, column: 44, scope: !2466)
!2469 = !DILocation(line: 1448, column: 7, scope: !2470)
!2470 = !DILexicalBlockFile(scope: !2431, file: !1, discriminator: 3)
!2471 = !DILocation(line: 1450, column: 14, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2473, file: !1, line: 1450, column: 13)
!2473 = distinct !DILexicalBlock(scope: !2431, file: !1, line: 1449, column: 7)
!2474 = !DILocation(line: 1450, column: 13, scope: !2473)
!2475 = !DILocation(line: 1452, column: 24, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2472, file: !1, line: 1451, column: 9)
!2477 = !DILocation(line: 1452, column: 34, scope: !2476)
!2478 = !DILocation(line: 1452, column: 26, scope: !2476)
!2479 = !DILocation(line: 1452, column: 22, scope: !2476)
!2480 = !DILocation(line: 1452, column: 20, scope: !2476)
!2481 = !DILocation(line: 1453, column: 20, scope: !2476)
!2482 = !DILocation(line: 1454, column: 9, scope: !2476)
!2483 = !DILocation(line: 1456, column: 18, scope: !2473)
!2484 = !DILocation(line: 1457, column: 17, scope: !2473)
!2485 = !DILocation(line: 1457, column: 29, scope: !2473)
!2486 = !DILocation(line: 1457, column: 26, scope: !2473)
!2487 = !DILocation(line: 1457, column: 39, scope: !2473)
!2488 = !DILocation(line: 1457, column: 9, scope: !2473)
!2489 = !DILocation(line: 1460, column: 35, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2473, file: !1, line: 1458, column: 9)
!2491 = !DILocation(line: 1460, column: 13, scope: !2490)
!2492 = !DILocation(line: 1460, column: 39, scope: !2490)
!2493 = !DILocation(line: 1461, column: 43, scope: !2490)
!2494 = !DILocation(line: 1461, column: 53, scope: !2490)
!2495 = !DILocation(line: 1461, column: 45, scope: !2490)
!2496 = !DILocation(line: 1461, column: 41, scope: !2490)
!2497 = !DILocation(line: 1461, column: 35, scope: !2490)
!2498 = !DILocation(line: 1461, column: 13, scope: !2490)
!2499 = !DILocation(line: 1461, column: 39, scope: !2490)
!2500 = !DILocation(line: 1462, column: 13, scope: !2490)
!2501 = !DILocation(line: 1464, column: 41, scope: !2490)
!2502 = !DILocation(line: 1464, column: 35, scope: !2490)
!2503 = !DILocation(line: 1464, column: 13, scope: !2490)
!2504 = !DILocation(line: 1464, column: 39, scope: !2490)
!2505 = !DILocation(line: 1465, column: 43, scope: !2490)
!2506 = !DILocation(line: 1465, column: 53, scope: !2490)
!2507 = !DILocation(line: 1465, column: 45, scope: !2490)
!2508 = !DILocation(line: 1465, column: 41, scope: !2490)
!2509 = !DILocation(line: 1465, column: 35, scope: !2490)
!2510 = !DILocation(line: 1465, column: 13, scope: !2490)
!2511 = !DILocation(line: 1465, column: 39, scope: !2490)
!2512 = !DILocation(line: 1466, column: 13, scope: !2490)
!2513 = !DILocation(line: 1468, column: 43, scope: !2490)
!2514 = !DILocation(line: 1468, column: 47, scope: !2490)
!2515 = !DILocation(line: 1468, column: 45, scope: !2490)
!2516 = !DILocation(line: 1468, column: 54, scope: !2490)
!2517 = !DILocation(line: 1468, column: 41, scope: !2490)
!2518 = !DILocation(line: 1468, column: 35, scope: !2490)
!2519 = !DILocation(line: 1468, column: 13, scope: !2490)
!2520 = !DILocation(line: 1468, column: 39, scope: !2490)
!2521 = !DILocation(line: 1469, column: 43, scope: !2490)
!2522 = !DILocation(line: 1469, column: 47, scope: !2490)
!2523 = !DILocation(line: 1469, column: 45, scope: !2490)
!2524 = !DILocation(line: 1469, column: 41, scope: !2490)
!2525 = !DILocation(line: 1469, column: 35, scope: !2490)
!2526 = !DILocation(line: 1469, column: 13, scope: !2490)
!2527 = !DILocation(line: 1469, column: 39, scope: !2490)
!2528 = !DILocation(line: 1470, column: 20, scope: !2490)
!2529 = !DILocation(line: 1471, column: 13, scope: !2490)
!2530 = !DILocalVariable(name: "extra", scope: !2531, file: !1, line: 1474, type: !82)
!2531 = distinct !DILexicalBlock(scope: !2490, file: !1, line: 1473, column: 11)
!2532 = !DILocation(line: 1474, column: 18, scope: !2531)
!2533 = !DILocalVariable(name: "high", scope: !2531, file: !1, line: 1474, type: !82)
!2534 = !DILocation(line: 1474, column: 25, scope: !2531)
!2535 = !DILocalVariable(name: "length", scope: !2531, file: !1, line: 1475, type: !622)
!2536 = !DILocation(line: 1475, column: 21, scope: !2531)
!2537 = !DILocation(line: 1475, column: 32, scope: !2531)
!2538 = !DILocation(line: 1475, column: 42, scope: !2531)
!2539 = !DILocation(line: 1475, column: 34, scope: !2531)
!2540 = !DILocation(line: 1475, column: 30, scope: !2531)
!2541 = !DILocation(line: 1477, column: 17, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2531, file: !1, line: 1477, column: 17)
!2543 = !DILocation(line: 1477, column: 24, scope: !2542)
!2544 = !DILocation(line: 1477, column: 17, scope: !2531)
!2545 = !DILocation(line: 1478, column: 25, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2542, file: !1, line: 1477, column: 32)
!2547 = !DILocation(line: 1478, column: 35, scope: !2546)
!2548 = !DILocation(line: 1478, column: 27, scope: !2546)
!2549 = !DILocation(line: 1478, column: 23, scope: !2546)
!2550 = !DILocation(line: 1478, column: 21, scope: !2546)
!2551 = !DILocation(line: 1479, column: 28, scope: !2546)
!2552 = !DILocation(line: 1479, column: 20, scope: !2546)
!2553 = !DILocation(line: 1480, column: 13, scope: !2546)
!2554 = !DILocation(line: 1481, column: 28, scope: !2542)
!2555 = !DILocation(line: 1481, column: 21, scope: !2542)
!2556 = !DILocation(line: 1482, column: 23, scope: !2531)
!2557 = !DILocation(line: 1482, column: 30, scope: !2531)
!2558 = !DILocation(line: 1482, column: 38, scope: !2531)
!2559 = !DILocation(line: 1482, column: 22, scope: !2531)
!2560 = !DILocation(line: 1482, column: 20, scope: !2531)
!2561 = !DILocation(line: 1483, column: 13, scope: !2531)
!2562 = !DILocation(line: 1483, column: 20, scope: !2563)
!2563 = !DILexicalBlockFile(scope: !2531, file: !1, discriminator: 1)
!2564 = !DILocation(line: 1483, column: 27, scope: !2563)
!2565 = !DILocation(line: 1483, column: 30, scope: !2566)
!2566 = !DILexicalBlockFile(scope: !2531, file: !1, discriminator: 2)
!2567 = !DILocation(line: 1483, column: 46, scope: !2566)
!2568 = !DILocation(line: 1483, column: 44, scope: !2566)
!2569 = !DILocation(line: 1483, column: 13, scope: !2570)
!2570 = !DILexicalBlockFile(scope: !2531, file: !1, discriminator: 3)
!2571 = !DILocalVariable(name: "cp", scope: !2572, file: !1, line: 1484, type: !13)
!2572 = distinct !DILexicalBlock(scope: !2531, file: !1, line: 1483, column: 54)
!2573 = !DILocation(line: 1484, column: 24, scope: !2572)
!2574 = !DILocation(line: 1484, column: 29, scope: !2572)
!2575 = !DILocation(line: 1484, column: 43, scope: !2572)
!2576 = !DILocation(line: 1485, column: 43, scope: !2572)
!2577 = !DILocation(line: 1485, column: 37, scope: !2572)
!2578 = !DILocation(line: 1485, column: 15, scope: !2572)
!2579 = !DILocation(line: 1485, column: 41, scope: !2572)
!2580 = !DILocation(line: 1486, column: 45, scope: !2572)
!2581 = !DILocation(line: 1486, column: 43, scope: !2572)
!2582 = !DILocation(line: 1486, column: 51, scope: !2572)
!2583 = !DILocation(line: 1486, column: 49, scope: !2572)
!2584 = !DILocation(line: 1486, column: 37, scope: !2572)
!2585 = !DILocation(line: 1486, column: 15, scope: !2572)
!2586 = !DILocation(line: 1486, column: 41, scope: !2572)
!2587 = !DILocation(line: 1487, column: 21, scope: !2572)
!2588 = !DILocation(line: 1483, column: 13, scope: !2589)
!2589 = !DILexicalBlockFile(scope: !2531, file: !1, discriminator: 4)
!2590 = !DILocation(line: 1490, column: 11, scope: !2490)
!2591 = !DILocation(line: 1448, column: 7, scope: !2592)
!2592 = !DILexicalBlockFile(scope: !2431, file: !1, discriminator: 4)
!2593 = !DILocation(line: 1493, column: 11, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2431, file: !1, line: 1493, column: 11)
!2595 = !DILocation(line: 1493, column: 27, scope: !2594)
!2596 = !DILocation(line: 1493, column: 25, scope: !2594)
!2597 = !DILocation(line: 1493, column: 11, scope: !2431)
!2598 = !DILocation(line: 1494, column: 28, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2594, file: !1, line: 1493, column: 35)
!2600 = !DILocation(line: 1494, column: 31, scope: !2599)
!2601 = !DILocation(line: 1494, column: 9, scope: !2599)
!2602 = !DILocation(line: 1496, column: 9, scope: !2599)
!2603 = !DILocation(line: 1498, column: 29, scope: !2431)
!2604 = !DILocation(line: 1498, column: 7, scope: !2431)
!2605 = !DILocation(line: 1498, column: 33, scope: !2431)
!2606 = !DILocation(line: 1499, column: 29, scope: !2431)
!2607 = !DILocation(line: 1499, column: 7, scope: !2431)
!2608 = !DILocation(line: 1499, column: 33, scope: !2431)
!2609 = !DILocation(line: 1503, column: 11, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2431, file: !1, line: 1503, column: 11)
!2611 = !DILocation(line: 1503, column: 16, scope: !2610)
!2612 = !DILocation(line: 1503, column: 30, scope: !2610)
!2613 = !DILocation(line: 1503, column: 11, scope: !2431)
!2614 = !DILocation(line: 1505, column: 13, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2610, file: !1, line: 1503, column: 39)
!2616 = !DILocation(line: 1505, column: 16, scope: !2615)
!2617 = !DILocation(line: 1504, column: 30, scope: !2615)
!2618 = !DILocation(line: 1504, column: 9, scope: !2615)
!2619 = !DILocation(line: 1504, column: 14, scope: !2615)
!2620 = !DILocation(line: 1504, column: 28, scope: !2615)
!2621 = !DILocation(line: 1506, column: 13, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2615, file: !1, line: 1506, column: 13)
!2623 = !DILocation(line: 1506, column: 18, scope: !2622)
!2624 = !DILocation(line: 1506, column: 32, scope: !2622)
!2625 = !DILocation(line: 1506, column: 13, scope: !2615)
!2626 = !DILocation(line: 1507, column: 11, scope: !2622)
!2627 = !DILocation(line: 1508, column: 7, scope: !2615)
!2628 = !DILocation(line: 1509, column: 18, scope: !2431)
!2629 = !DILocation(line: 1509, column: 23, scope: !2431)
!2630 = !DILocation(line: 1509, column: 16, scope: !2431)
!2631 = !DILocation(line: 1511, column: 14, scope: !2431)
!2632 = !DILocation(line: 1511, column: 12, scope: !2431)
!2633 = !DILocation(line: 1512, column: 7, scope: !2431)
!2634 = !DILocation(line: 1512, column: 21, scope: !2461)
!2635 = !DILocation(line: 1512, column: 14, scope: !2461)
!2636 = !DILocation(line: 1512, column: 7, scope: !2461)
!2637 = !DILocation(line: 1514, column: 21, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2639, file: !1, line: 1514, column: 13)
!2639 = distinct !DILexicalBlock(scope: !2431, file: !1, line: 1513, column: 7)
!2640 = !DILocation(line: 1514, column: 14, scope: !2638)
!2641 = !DILocation(line: 1514, column: 13, scope: !2639)
!2642 = !DILocation(line: 1515, column: 13, scope: !2638)
!2643 = !DILocation(line: 1515, column: 18, scope: !2638)
!2644 = !DILocation(line: 1515, column: 23, scope: !2638)
!2645 = !DILocation(line: 1515, column: 11, scope: !2638)
!2646 = !DILocation(line: 1516, column: 14, scope: !2639)
!2647 = !DILocation(line: 1512, column: 7, scope: !2466)
!2648 = !DILocation(line: 1518, column: 12, scope: !2431)
!2649 = !DILocation(line: 1518, column: 9, scope: !2431)
!2650 = !DILocation(line: 1519, column: 5, scope: !2431)
!2651 = !DILocation(line: 1525, column: 11, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2653, file: !1, line: 1525, column: 11)
!2653 = distinct !DILexicalBlock(scope: !2424, file: !1, line: 1519, column: 12)
!2654 = !DILocation(line: 1525, column: 16, scope: !2652)
!2655 = !DILocation(line: 1525, column: 27, scope: !2652)
!2656 = !DILocation(line: 1525, column: 11, scope: !2653)
!2657 = !DILocation(line: 1527, column: 13, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 1525, column: 36)
!2659 = !DILocation(line: 1527, column: 16, scope: !2658)
!2660 = !DILocation(line: 1526, column: 27, scope: !2658)
!2661 = !DILocation(line: 1526, column: 9, scope: !2658)
!2662 = !DILocation(line: 1526, column: 14, scope: !2658)
!2663 = !DILocation(line: 1526, column: 25, scope: !2658)
!2664 = !DILocation(line: 1528, column: 13, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2658, file: !1, line: 1528, column: 13)
!2666 = !DILocation(line: 1528, column: 18, scope: !2665)
!2667 = !DILocation(line: 1528, column: 29, scope: !2665)
!2668 = !DILocation(line: 1528, column: 13, scope: !2658)
!2669 = !DILocation(line: 1529, column: 11, scope: !2665)
!2670 = !DILocation(line: 1530, column: 7, scope: !2658)
!2671 = !DILocation(line: 1531, column: 18, scope: !2653)
!2672 = !DILocation(line: 1531, column: 23, scope: !2653)
!2673 = !DILocation(line: 1531, column: 16, scope: !2653)
!2674 = !DILocation(line: 1532, column: 7, scope: !2653)
!2675 = !DILocation(line: 1532, column: 29, scope: !2676)
!2676 = !DILexicalBlockFile(scope: !2653, file: !1, discriminator: 1)
!2677 = !DILocation(line: 1532, column: 22, scope: !2676)
!2678 = !DILocation(line: 1532, column: 20, scope: !2676)
!2679 = !DILocation(line: 1532, column: 46, scope: !2676)
!2680 = !DILocation(line: 1532, column: 7, scope: !2676)
!2681 = !DILocation(line: 1533, column: 10, scope: !2653)
!2682 = !DILocation(line: 1533, column: 15, scope: !2653)
!2683 = !DILocation(line: 1532, column: 7, scope: !2684)
!2684 = !DILexicalBlockFile(scope: !2653, file: !1, discriminator: 2)
!2685 = !DILocation(line: 1534, column: 12, scope: !2653)
!2686 = !DILocation(line: 1534, column: 9, scope: !2653)
!2687 = !DILocation(line: 1536, column: 3, scope: !2425)
!2688 = !DILocation(line: 1539, column: 16, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2419, file: !1, line: 1538, column: 3)
!2690 = !DILocation(line: 1539, column: 14, scope: !2689)
!2691 = !DILocation(line: 1540, column: 5, scope: !2689)
!2692 = !DILocation(line: 1540, column: 27, scope: !2693)
!2693 = !DILexicalBlockFile(scope: !2689, file: !1, discriminator: 1)
!2694 = !DILocation(line: 1540, column: 20, scope: !2693)
!2695 = !DILocation(line: 1540, column: 18, scope: !2693)
!2696 = !DILocation(line: 1540, column: 44, scope: !2693)
!2697 = !DILocation(line: 1540, column: 5, scope: !2693)
!2698 = !DILocation(line: 1541, column: 8, scope: !2689)
!2699 = !DILocation(line: 1541, column: 13, scope: !2689)
!2700 = !DILocation(line: 1540, column: 5, scope: !2701)
!2701 = !DILexicalBlockFile(scope: !2689, file: !1, discriminator: 2)
!2702 = !DILocation(line: 1542, column: 10, scope: !2689)
!2703 = !DILocation(line: 1542, column: 7, scope: !2689)
!2704 = !DILocation(line: 1546, column: 7, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1546, column: 7)
!2706 = !DILocation(line: 1546, column: 12, scope: !2705)
!2707 = !DILocation(line: 1546, column: 26, scope: !2705)
!2708 = !DILocation(line: 1547, column: 5, scope: !2705)
!2709 = !DILocation(line: 1547, column: 22, scope: !2705)
!2710 = !DILocation(line: 1547, column: 27, scope: !2705)
!2711 = !DILocation(line: 1547, column: 19, scope: !2705)
!2712 = !DILocation(line: 1547, column: 46, scope: !2705)
!2713 = !DILocation(line: 1548, column: 13, scope: !2705)
!2714 = !DILocation(line: 1548, column: 18, scope: !2705)
!2715 = !DILocation(line: 1548, column: 28, scope: !2705)
!2716 = !DILocation(line: 1548, column: 33, scope: !2705)
!2717 = !DILocation(line: 1548, column: 48, scope: !2705)
!2718 = !DILocation(line: 1548, column: 62, scope: !2705)
!2719 = !DILocation(line: 1548, column: 6, scope: !2705)
!2720 = !DILocation(line: 1546, column: 7, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !548, file: !1, discriminator: 1)
!2722 = !DILocation(line: 1550, column: 28, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2705, file: !1, line: 1549, column: 3)
!2724 = !DILocation(line: 1550, column: 31, scope: !2723)
!2725 = !DILocation(line: 1550, column: 43, scope: !2723)
!2726 = !DILocation(line: 1550, column: 5, scope: !2723)
!2727 = !DILocation(line: 1551, column: 5, scope: !2723)
!2728 = !DILocation(line: 1551, column: 10, scope: !2723)
!2729 = !DILocation(line: 1551, column: 16, scope: !2723)
!2730 = !DILocation(line: 1552, column: 9, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2723, file: !1, line: 1552, column: 9)
!2732 = !DILocation(line: 1552, column: 14, scope: !2731)
!2733 = !DILocation(line: 1552, column: 24, scope: !2731)
!2734 = !DILocation(line: 1552, column: 29, scope: !2731)
!2735 = !DILocation(line: 1552, column: 21, scope: !2731)
!2736 = !DILocation(line: 1552, column: 9, scope: !2723)
!2737 = !DILocation(line: 1554, column: 7, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2731, file: !1, line: 1553, column: 5)
!2739 = !DILocation(line: 1554, column: 12, scope: !2738)
!2740 = !DILocation(line: 1554, column: 17, scope: !2738)
!2741 = !DILocation(line: 1556, column: 17, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2738, file: !1, line: 1555, column: 11)
!2743 = !DILocation(line: 1556, column: 22, scope: !2742)
!2744 = !DILocation(line: 1556, column: 47, scope: !2742)
!2745 = !DILocation(line: 1556, column: 52, scope: !2742)
!2746 = !DILocation(line: 1556, column: 45, scope: !2742)
!2747 = !DILocation(line: 1556, column: 9, scope: !2742)
!2748 = !DILocation(line: 1555, column: 12, scope: !2742)
!2749 = !DILocation(line: 1555, column: 17, scope: !2742)
!2750 = !DILocation(line: 1555, column: 21, scope: !2742)
!2751 = !DILocation(line: 1556, column: 60, scope: !2742)
!2752 = !DILocation(line: 1555, column: 11, scope: !2738)
!2753 = !DILocation(line: 1558, column: 28, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2742, file: !1, line: 1557, column: 7)
!2755 = !DILocation(line: 1558, column: 31, scope: !2754)
!2756 = !DILocation(line: 1558, column: 9, scope: !2754)
!2757 = !DILocation(line: 1559, column: 9, scope: !2754)
!2758 = !DILocation(line: 1561, column: 43, scope: !2738)
!2759 = !DILocation(line: 1561, column: 16, scope: !2738)
!2760 = !DILocation(line: 1561, column: 21, scope: !2738)
!2761 = !DILocation(line: 1561, column: 7, scope: !2738)
!2762 = !DILocation(line: 1561, column: 12, scope: !2738)
!2763 = !DILocation(line: 1561, column: 29, scope: !2738)
!2764 = !DILocation(line: 1561, column: 41, scope: !2738)
!2765 = !DILocation(line: 1562, column: 16, scope: !2738)
!2766 = !DILocation(line: 1562, column: 21, scope: !2738)
!2767 = !DILocation(line: 1562, column: 7, scope: !2738)
!2768 = !DILocation(line: 1562, column: 12, scope: !2738)
!2769 = !DILocation(line: 1562, column: 29, scope: !2738)
!2770 = !DILocation(line: 1562, column: 42, scope: !2738)
!2771 = !DILocation(line: 1563, column: 16, scope: !2738)
!2772 = !DILocation(line: 1563, column: 21, scope: !2738)
!2773 = !DILocation(line: 1563, column: 7, scope: !2738)
!2774 = !DILocation(line: 1563, column: 12, scope: !2738)
!2775 = !DILocation(line: 1563, column: 29, scope: !2738)
!2776 = !DILocation(line: 1563, column: 40, scope: !2738)
!2777 = !DILocation(line: 1564, column: 5, scope: !2738)
!2778 = !DILocation(line: 1565, column: 18, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2723, file: !1, line: 1565, column: 9)
!2780 = !DILocation(line: 1565, column: 23, scope: !2779)
!2781 = !DILocation(line: 1565, column: 9, scope: !2779)
!2782 = !DILocation(line: 1565, column: 14, scope: !2779)
!2783 = !DILocation(line: 1565, column: 31, scope: !2779)
!2784 = !DILocation(line: 1565, column: 44, scope: !2779)
!2785 = !DILocation(line: 1565, column: 9, scope: !2723)
!2786 = !DILocation(line: 1567, column: 44, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2779, file: !1, line: 1566, column: 5)
!2788 = !DILocation(line: 1567, column: 47, scope: !2787)
!2789 = !DILocation(line: 1567, column: 55, scope: !2787)
!2790 = !DILocation(line: 1567, column: 16, scope: !2787)
!2791 = !DILocation(line: 1567, column: 21, scope: !2787)
!2792 = !DILocation(line: 1567, column: 7, scope: !2787)
!2793 = !DILocation(line: 1567, column: 12, scope: !2787)
!2794 = !DILocation(line: 1567, column: 29, scope: !2787)
!2795 = !DILocation(line: 1567, column: 42, scope: !2787)
!2796 = !DILocation(line: 1568, column: 51, scope: !2787)
!2797 = !DILocation(line: 1568, column: 56, scope: !2787)
!2798 = !DILocation(line: 1568, column: 42, scope: !2787)
!2799 = !DILocation(line: 1568, column: 47, scope: !2787)
!2800 = !DILocation(line: 1568, column: 64, scope: !2787)
!2801 = !DILocation(line: 1569, column: 9, scope: !2787)
!2802 = !DILocation(line: 1569, column: 14, scope: !2787)
!2803 = !DILocation(line: 1568, column: 77, scope: !2787)
!2804 = !DILocation(line: 1568, column: 16, scope: !2787)
!2805 = !DILocation(line: 1568, column: 21, scope: !2787)
!2806 = !DILocation(line: 1568, column: 7, scope: !2787)
!2807 = !DILocation(line: 1568, column: 12, scope: !2787)
!2808 = !DILocation(line: 1568, column: 29, scope: !2787)
!2809 = !DILocation(line: 1568, column: 40, scope: !2787)
!2810 = !DILocation(line: 1570, column: 5, scope: !2787)
!2811 = !DILocation(line: 1571, column: 12, scope: !2723)
!2812 = !DILocation(line: 1571, column: 5, scope: !2723)
!2813 = !DILocation(line: 1574, column: 39, scope: !548)
!2814 = !DILocation(line: 1574, column: 44, scope: !548)
!2815 = !DILocation(line: 1575, column: 39, scope: !548)
!2816 = !DILocation(line: 1575, column: 53, scope: !548)
!2817 = !DILocation(line: 1574, column: 31, scope: !548)
!2818 = !DILocation(line: 1574, column: 3, scope: !548)
!2819 = !DILocation(line: 1574, column: 8, scope: !548)
!2820 = !DILocation(line: 1574, column: 22, scope: !548)
!2821 = !DILocation(line: 1576, column: 10, scope: !548)
!2822 = !DILocation(line: 1576, column: 15, scope: !548)
!2823 = !DILocation(line: 1576, column: 30, scope: !548)
!2824 = !DILocation(line: 1576, column: 35, scope: !548)
!2825 = !DILocation(line: 1576, column: 45, scope: !548)
!2826 = !DILocation(line: 1576, column: 59, scope: !548)
!2827 = !DILocation(line: 1576, column: 3, scope: !548)
!2828 = !DILocation(line: 1577, column: 29, scope: !548)
!2829 = !DILocation(line: 1577, column: 3, scope: !548)
!2830 = !DILocation(line: 1577, column: 8, scope: !548)
!2831 = !DILocation(line: 1577, column: 27, scope: !548)
!2832 = !DILocation(line: 1580, column: 8, scope: !548)
!2833 = !DILocation(line: 1580, column: 13, scope: !548)
!2834 = !DILocation(line: 1580, column: 3, scope: !548)
!2835 = !DILocation(line: 1581, column: 19, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1581, column: 7)
!2837 = !DILocation(line: 1581, column: 8, scope: !2836)
!2838 = !DILocation(line: 1581, column: 13, scope: !2836)
!2839 = !DILocation(line: 1581, column: 17, scope: !2836)
!2840 = !DILocation(line: 1581, column: 49, scope: !2836)
!2841 = !DILocation(line: 1581, column: 7, scope: !548)
!2842 = !DILocation(line: 1583, column: 24, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2836, file: !1, line: 1582, column: 3)
!2844 = !DILocation(line: 1583, column: 27, scope: !2843)
!2845 = !DILocation(line: 1583, column: 5, scope: !2843)
!2846 = !DILocation(line: 1584, column: 5, scope: !2843)
!2847 = !DILocation(line: 1586, column: 29, scope: !548)
!2848 = !DILocation(line: 1586, column: 3, scope: !548)
!2849 = !DILocation(line: 1586, column: 8, scope: !548)
!2850 = !DILocation(line: 1586, column: 15, scope: !548)
!2851 = !DILocation(line: 1586, column: 27, scope: !548)
!2852 = !DILocation(line: 1587, column: 3, scope: !548)
!2853 = !DILocation(line: 1587, column: 8, scope: !548)
!2854 = !DILocation(line: 1587, column: 15, scope: !548)
!2855 = !DILocation(line: 1587, column: 28, scope: !548)
!2856 = !DILocation(line: 1588, column: 3, scope: !548)
!2857 = !DILocation(line: 1588, column: 8, scope: !548)
!2858 = !DILocation(line: 1588, column: 15, scope: !548)
!2859 = !DILocation(line: 1588, column: 26, scope: !548)
!2860 = !DILocation(line: 1589, column: 3, scope: !548)
!2861 = !DILocation(line: 1589, column: 8, scope: !548)
!2862 = !DILocation(line: 1589, column: 15, scope: !548)
!2863 = !DILocation(line: 1590, column: 3, scope: !548)
!2864 = !DILocation(line: 1590, column: 8, scope: !548)
!2865 = !DILocation(line: 1590, column: 14, scope: !548)
!2866 = !DILocation(line: 1592, column: 7, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1592, column: 7)
!2868 = !DILocation(line: 1592, column: 12, scope: !2867)
!2869 = !DILocation(line: 1592, column: 23, scope: !2867)
!2870 = !DILocation(line: 1592, column: 7, scope: !548)
!2871 = !DILocation(line: 1594, column: 9, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2873, file: !1, line: 1594, column: 9)
!2873 = distinct !DILexicalBlock(scope: !2867, file: !1, line: 1593, column: 3)
!2874 = !DILocation(line: 1594, column: 11, scope: !2872)
!2875 = !DILocation(line: 1594, column: 17, scope: !2872)
!2876 = !DILocation(line: 1594, column: 15, scope: !2872)
!2877 = !DILocation(line: 1594, column: 9, scope: !2873)
!2878 = !DILocation(line: 1595, column: 26, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 1594, column: 23)
!2880 = !DILocation(line: 1595, column: 29, scope: !2879)
!2881 = !DILocation(line: 1595, column: 7, scope: !2879)
!2882 = !DILocation(line: 1597, column: 7, scope: !2879)
!2883 = !DILocation(line: 1599, column: 12, scope: !2873)
!2884 = !DILocation(line: 1599, column: 17, scope: !2873)
!2885 = !DILocation(line: 1599, column: 5, scope: !2873)
!2886 = !DILocation(line: 1599, column: 23, scope: !2873)
!2887 = !DILocation(line: 1600, column: 7, scope: !2873)
!2888 = !DILocation(line: 1601, column: 3, scope: !2873)
!2889 = !DILocation(line: 1603, column: 7, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1603, column: 7)
!2891 = !DILocation(line: 1603, column: 12, scope: !2890)
!2892 = !DILocation(line: 1603, column: 23, scope: !2890)
!2893 = !DILocation(line: 1603, column: 7, scope: !548)
!2894 = !DILocation(line: 1604, column: 22, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2896, file: !1, line: 1604, column: 9)
!2896 = distinct !DILexicalBlock(scope: !2890, file: !1, line: 1603, column: 38)
!2897 = !DILocation(line: 1604, column: 25, scope: !2895)
!2898 = !DILocation(line: 1604, column: 30, scope: !2895)
!2899 = !DILocation(line: 1604, column: 9, scope: !2895)
!2900 = !DILocation(line: 1604, column: 36, scope: !2895)
!2901 = !DILocation(line: 1604, column: 9, scope: !2896)
!2902 = !DILocation(line: 1605, column: 26, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2895, file: !1, line: 1604, column: 41)
!2904 = !DILocation(line: 1605, column: 29, scope: !2903)
!2905 = !DILocation(line: 1605, column: 7, scope: !2903)
!2906 = !DILocation(line: 1607, column: 7, scope: !2903)
!2907 = !DILocation(line: 1609, column: 3, scope: !2896)
!2908 = !DILocation(line: 1611, column: 26, scope: !548)
!2909 = !DILocation(line: 1611, column: 29, scope: !548)
!2910 = !DILocation(line: 1611, column: 41, scope: !548)
!2911 = !DILocation(line: 1611, column: 3, scope: !548)
!2912 = !DILocation(line: 1612, column: 30, scope: !548)
!2913 = !DILocation(line: 1612, column: 33, scope: !548)
!2914 = !DILocation(line: 1612, column: 41, scope: !548)
!2915 = !DILocation(line: 1612, column: 3, scope: !548)
!2916 = !DILocation(line: 1612, column: 8, scope: !548)
!2917 = !DILocation(line: 1612, column: 15, scope: !548)
!2918 = !DILocation(line: 1612, column: 28, scope: !548)
!2919 = !DILocation(line: 1613, column: 28, scope: !548)
!2920 = !DILocation(line: 1613, column: 33, scope: !548)
!2921 = !DILocation(line: 1613, column: 40, scope: !548)
!2922 = !DILocation(line: 1613, column: 55, scope: !548)
!2923 = !DILocation(line: 1613, column: 60, scope: !548)
!2924 = !DILocation(line: 1613, column: 53, scope: !548)
!2925 = !DILocation(line: 1613, column: 3, scope: !548)
!2926 = !DILocation(line: 1613, column: 8, scope: !548)
!2927 = !DILocation(line: 1613, column: 15, scope: !548)
!2928 = !DILocation(line: 1613, column: 26, scope: !548)
!2929 = !DILocation(line: 1615, column: 22, scope: !548)
!2930 = !DILocation(line: 1615, column: 10, scope: !548)
!2931 = !DILocation(line: 1615, column: 3, scope: !548)
!2932 = !DILocation(line: 1620, column: 45, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1616, column: 3)
!2934 = !DILocation(line: 1620, column: 33, scope: !2933)
!2935 = !DILocation(line: 1620, column: 17, scope: !2933)
!2936 = !DILocation(line: 1620, column: 5, scope: !2933)
!2937 = !DILocation(line: 1620, column: 10, scope: !2933)
!2938 = !DILocation(line: 1620, column: 15, scope: !2933)
!2939 = !DILocation(line: 1621, column: 9, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2933, file: !1, line: 1621, column: 9)
!2941 = !DILocation(line: 1621, column: 14, scope: !2940)
!2942 = !DILocation(line: 1621, column: 19, scope: !2940)
!2943 = !DILocation(line: 1621, column: 9, scope: !2933)
!2944 = !DILocation(line: 1622, column: 7, scope: !2940)
!2945 = !DILocation(line: 1622, column: 12, scope: !2940)
!2946 = !DILocation(line: 1622, column: 17, scope: !2940)
!2947 = !DILocation(line: 1624, column: 7, scope: !2940)
!2948 = !DILocation(line: 1624, column: 12, scope: !2940)
!2949 = !DILocation(line: 1624, column: 17, scope: !2940)
!2950 = !DILocation(line: 1625, column: 5, scope: !2933)
!2951 = !DILocation(line: 1625, column: 10, scope: !2933)
!2952 = !DILocation(line: 1625, column: 15, scope: !2933)
!2953 = !DILocation(line: 1626, column: 5, scope: !2933)
!2954 = !DILocation(line: 1631, column: 45, scope: !2933)
!2955 = !DILocation(line: 1631, column: 33, scope: !2933)
!2956 = !DILocation(line: 1631, column: 17, scope: !2933)
!2957 = !DILocation(line: 1631, column: 5, scope: !2933)
!2958 = !DILocation(line: 1631, column: 10, scope: !2933)
!2959 = !DILocation(line: 1631, column: 15, scope: !2933)
!2960 = !DILocation(line: 1632, column: 5, scope: !2933)
!2961 = !DILocation(line: 1635, column: 24, scope: !2933)
!2962 = !DILocation(line: 1635, column: 27, scope: !2933)
!2963 = !DILocation(line: 1635, column: 5, scope: !2933)
!2964 = !DILocation(line: 1637, column: 5, scope: !2933)
!2965 = !DILocation(line: 1640, column: 25, scope: !548)
!2966 = !DILocation(line: 1640, column: 30, scope: !548)
!2967 = !DILocation(line: 1640, column: 47, scope: !548)
!2968 = !DILocation(line: 1640, column: 3, scope: !548)
!2969 = !DILocation(line: 1640, column: 8, scope: !548)
!2970 = !DILocation(line: 1640, column: 23, scope: !548)
!2971 = !DILocation(line: 1641, column: 24, scope: !548)
!2972 = !DILocation(line: 1641, column: 29, scope: !548)
!2973 = !DILocation(line: 1641, column: 36, scope: !548)
!2974 = !DILocation(line: 1641, column: 3, scope: !548)
!2975 = !DILocation(line: 1641, column: 8, scope: !548)
!2976 = !DILocation(line: 1641, column: 13, scope: !548)
!2977 = !DILocation(line: 1641, column: 22, scope: !548)
!2978 = !DILocation(line: 1642, column: 3, scope: !548)
!2979 = !DILocation(line: 1642, column: 8, scope: !548)
!2980 = !DILocation(line: 1642, column: 20, scope: !548)
!2981 = !DILocation(line: 1643, column: 3, scope: !548)
!2982 = !DILocation(line: 1643, column: 8, scope: !548)
!2983 = !DILocation(line: 1643, column: 24, scope: !548)
!2984 = !DILocation(line: 1644, column: 3, scope: !548)
!2985 = !DILocation(line: 1644, column: 8, scope: !548)
!2986 = !DILocation(line: 1644, column: 24, scope: !548)
!2987 = !DILocation(line: 1645, column: 3, scope: !548)
!2988 = !DILocation(line: 1645, column: 8, scope: !548)
!2989 = !DILocation(line: 1645, column: 11, scope: !548)
!2990 = !DILocation(line: 1645, column: 23, scope: !548)
!2991 = !DILocation(line: 1646, column: 3, scope: !548)
!2992 = !DILocation(line: 1646, column: 8, scope: !548)
!2993 = !DILocation(line: 1646, column: 11, scope: !548)
!2994 = !DILocation(line: 1646, column: 20, scope: !548)
!2995 = !DILocation(line: 1647, column: 3, scope: !548)
!2996 = !DILocation(line: 1647, column: 8, scope: !548)
!2997 = !DILocation(line: 1647, column: 23, scope: !548)
!2998 = !DILocation(line: 1648, column: 3, scope: !548)
!2999 = !DILocation(line: 1648, column: 8, scope: !548)
!3000 = !DILocation(line: 1648, column: 18, scope: !548)
!3001 = !DILocation(line: 1649, column: 3, scope: !548)
!3002 = !DILocation(line: 1649, column: 8, scope: !548)
!3003 = !DILocation(line: 1649, column: 14, scope: !548)
!3004 = !DILocation(line: 1650, column: 3, scope: !548)
!3005 = !DILocation(line: 1650, column: 8, scope: !548)
!3006 = !DILocation(line: 1650, column: 22, scope: !548)
!3007 = !DILocation(line: 1651, column: 3, scope: !548)
!3008 = !DILocation(line: 1651, column: 8, scope: !548)
!3009 = !DILocation(line: 1651, column: 24, scope: !548)
!3010 = !DILocation(line: 1652, column: 8, scope: !548)
!3011 = !DILocation(line: 1652, column: 13, scope: !548)
!3012 = !DILocation(line: 1652, column: 3, scope: !548)
!3013 = !DILocation(line: 1653, column: 3, scope: !548)
!3014 = !DILocation(line: 1653, column: 8, scope: !548)
!3015 = !DILocation(line: 1653, column: 19, scope: !548)
!3016 = !DILocation(line: 1654, column: 3, scope: !548)
!3017 = !DILocation(line: 1654, column: 8, scope: !548)
!3018 = !DILocation(line: 1654, column: 19, scope: !548)
!3019 = !DILocation(line: 1655, column: 3, scope: !548)
!3020 = !DILocation(line: 1655, column: 8, scope: !548)
!3021 = !DILocation(line: 1655, column: 24, scope: !548)
!3022 = !DILocation(line: 1656, column: 10, scope: !548)
!3023 = !DILocation(line: 1656, column: 15, scope: !548)
!3024 = !DILocation(line: 1656, column: 3, scope: !548)
!3025 = !DILocation(line: 1657, column: 29, scope: !548)
!3026 = !DILocation(line: 1657, column: 41, scope: !548)
!3027 = !DILocation(line: 1657, column: 46, scope: !548)
!3028 = !DILocation(line: 1657, column: 3, scope: !548)
!3029 = !DILocation(line: 1658, column: 21, scope: !548)
!3030 = !DILocation(line: 1658, column: 26, scope: !548)
!3031 = !DILocation(line: 1658, column: 35, scope: !548)
!3032 = !DILocation(line: 1658, column: 3, scope: !548)
!3033 = !DILocation(line: 1658, column: 8, scope: !548)
!3034 = !DILocation(line: 1658, column: 19, scope: !548)
!3035 = !DILocation(line: 1661, column: 7, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1661, column: 7)
!3037 = !DILocation(line: 1661, column: 17, scope: !3036)
!3038 = !DILocation(line: 1661, column: 7, scope: !548)
!3039 = !DILocation(line: 1662, column: 12, scope: !3036)
!3040 = !DILocation(line: 1662, column: 5, scope: !3036)
!3041 = !DILocation(line: 1664, column: 27, scope: !548)
!3042 = !DILocation(line: 1664, column: 34, scope: !548)
!3043 = !DILocation(line: 1664, column: 39, scope: !548)
!3044 = !DILocation(line: 1664, column: 46, scope: !548)
!3045 = !DILocation(line: 1664, column: 51, scope: !548)
!3046 = !DILocation(line: 1664, column: 3, scope: !548)
!3047 = !DILocation(line: 1665, column: 27, scope: !548)
!3048 = !DILocation(line: 1665, column: 34, scope: !548)
!3049 = !DILocation(line: 1665, column: 39, scope: !548)
!3050 = !DILocation(line: 1665, column: 46, scope: !548)
!3051 = !DILocation(line: 1665, column: 51, scope: !548)
!3052 = !DILocation(line: 1665, column: 3, scope: !548)
!3053 = !DILocation(line: 1666, column: 27, scope: !548)
!3054 = !DILocation(line: 1666, column: 34, scope: !548)
!3055 = !DILocation(line: 1666, column: 39, scope: !548)
!3056 = !DILocation(line: 1666, column: 46, scope: !548)
!3057 = !DILocation(line: 1666, column: 51, scope: !548)
!3058 = !DILocation(line: 1666, column: 3, scope: !548)
!3059 = !DILocation(line: 1667, column: 26, scope: !548)
!3060 = !DILocation(line: 1667, column: 33, scope: !548)
!3061 = !DILocation(line: 1667, column: 38, scope: !548)
!3062 = !DILocation(line: 1667, column: 3, scope: !548)
!3063 = !DILocation(line: 1668, column: 26, scope: !548)
!3064 = !DILocation(line: 1668, column: 33, scope: !548)
!3065 = !DILocation(line: 1668, column: 38, scope: !548)
!3066 = !DILocation(line: 1668, column: 3, scope: !548)
!3067 = !DILocation(line: 1670, column: 37, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1670, column: 7)
!3069 = !DILocation(line: 1670, column: 44, scope: !3068)
!3070 = !DILocation(line: 1670, column: 54, scope: !3068)
!3071 = !DILocation(line: 1670, column: 69, scope: !3068)
!3072 = !DILocation(line: 1670, column: 7, scope: !3068)
!3073 = !DILocation(line: 1670, column: 7, scope: !548)
!3074 = !DILocation(line: 1672, column: 9, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !1, line: 1672, column: 9)
!3076 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 1671, column: 3)
!3077 = !DILocation(line: 1672, column: 15, scope: !3075)
!3078 = !DILocation(line: 1672, column: 9, scope: !3076)
!3079 = !DILocation(line: 1674, column: 26, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 1673, column: 5)
!3081 = !DILocation(line: 1674, column: 29, scope: !3080)
!3082 = !DILocation(line: 1674, column: 7, scope: !3080)
!3083 = !DILocation(line: 1676, column: 7, scope: !3080)
!3084 = !DILocation(line: 1678, column: 24, scope: !3076)
!3085 = !DILocation(line: 1678, column: 27, scope: !3076)
!3086 = !DILocation(line: 1680, column: 62, scope: !3076)
!3087 = !DILocation(line: 1680, column: 23, scope: !3076)
!3088 = !DILocation(line: 1678, column: 5, scope: !3076)
!3089 = !DILocation(line: 1681, column: 9, scope: !3076)
!3090 = !DILocation(line: 1682, column: 3, scope: !3076)
!3091 = !DILocation(line: 1684, column: 9, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1684, column: 7)
!3093 = !DILocation(line: 1684, column: 14, scope: !3092)
!3094 = !DILocation(line: 1684, column: 20, scope: !3092)
!3095 = !DILocation(line: 1684, column: 31, scope: !3092)
!3096 = !DILocation(line: 1684, column: 7, scope: !548)
!3097 = !DILocation(line: 1687, column: 5, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3092, file: !1, line: 1685, column: 3)
!3099 = !DILocation(line: 1687, column: 10, scope: !3098)
!3100 = !DILocation(line: 1687, column: 26, scope: !3098)
!3101 = !DILocation(line: 1688, column: 28, scope: !3098)
!3102 = !DILocation(line: 1688, column: 5, scope: !3098)
!3103 = !DILocation(line: 1691, column: 37, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 1691, column: 9)
!3105 = !DILocation(line: 1691, column: 40, scope: !3104)
!3106 = !DILocation(line: 1691, column: 47, scope: !3104)
!3107 = !DILocation(line: 1691, column: 17, scope: !3104)
!3108 = !DILocation(line: 1691, column: 15, scope: !3104)
!3109 = !DILocation(line: 1691, column: 55, scope: !3104)
!3110 = !DILocation(line: 1691, column: 9, scope: !3098)
!3111 = !DILocation(line: 1692, column: 14, scope: !3104)
!3112 = !DILocation(line: 1692, column: 7, scope: !3104)
!3113 = !DILocation(line: 1693, column: 9, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 1693, column: 9)
!3115 = !DILocation(line: 1693, column: 15, scope: !3114)
!3116 = !DILocation(line: 1693, column: 13, scope: !3114)
!3117 = !DILocation(line: 1693, column: 9, scope: !3098)
!3118 = !DILocation(line: 1694, column: 13, scope: !3114)
!3119 = !DILocation(line: 1694, column: 11, scope: !3114)
!3120 = !DILocation(line: 1694, column: 7, scope: !3114)
!3121 = !DILocation(line: 1695, column: 3, scope: !3098)
!3122 = !DILocation(line: 1697, column: 7, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1697, column: 7)
!3124 = !DILocation(line: 1697, column: 12, scope: !3123)
!3125 = !DILocation(line: 1697, column: 28, scope: !3123)
!3126 = !DILocation(line: 1697, column: 7, scope: !548)
!3127 = !DILocation(line: 1698, column: 5, scope: !3123)
!3128 = !DILocation(line: 1698, column: 10, scope: !3123)
!3129 = !DILocation(line: 1698, column: 20, scope: !3123)
!3130 = !DILocation(line: 1700, column: 10, scope: !548)
!3131 = !DILocation(line: 1700, column: 3, scope: !548)
!3132 = !DILocation(line: 1701, column: 1, scope: !548)
!3133 = !DILocalVariable(name: "pp", arg: 1, scope: !573, file: !544, line: 115, type: !43)
!3134 = !DILocation(line: 115, column: 29, scope: !573)
!3135 = !DILocalVariable(name: "p", scope: !573, file: !544, line: 117, type: !531)
!3136 = !DILocation(line: 117, column: 23, scope: !573)
!3137 = !DILocation(line: 117, column: 50, scope: !573)
!3138 = !DILocalVariable(name: "p3", scope: !573, file: !544, line: 122, type: !13)
!3139 = !DILocation(line: 122, column: 15, scope: !573)
!3140 = !DILocation(line: 122, column: 20, scope: !573)
!3141 = !DILocalVariable(name: "p2", scope: !573, file: !544, line: 123, type: !13)
!3142 = !DILocation(line: 123, column: 15, scope: !573)
!3143 = !DILocation(line: 123, column: 20, scope: !573)
!3144 = !DILocalVariable(name: "p1", scope: !573, file: !544, line: 124, type: !13)
!3145 = !DILocation(line: 124, column: 15, scope: !573)
!3146 = !DILocation(line: 124, column: 20, scope: !573)
!3147 = !DILocalVariable(name: "p0", scope: !573, file: !544, line: 125, type: !13)
!3148 = !DILocation(line: 125, column: 15, scope: !573)
!3149 = !DILocation(line: 125, column: 20, scope: !573)
!3150 = !DILocation(line: 127, column: 11, scope: !573)
!3151 = !DILocation(line: 127, column: 14, scope: !573)
!3152 = !DILocation(line: 127, column: 24, scope: !573)
!3153 = !DILocation(line: 127, column: 27, scope: !573)
!3154 = !DILocation(line: 127, column: 21, scope: !573)
!3155 = !DILocation(line: 127, column: 37, scope: !573)
!3156 = !DILocation(line: 127, column: 40, scope: !573)
!3157 = !DILocation(line: 127, column: 34, scope: !573)
!3158 = !DILocation(line: 127, column: 48, scope: !573)
!3159 = !DILocation(line: 127, column: 46, scope: !573)
!3160 = !DILocation(line: 127, column: 2, scope: !573)
!3161 = !DILocalVariable(name: "ttime", arg: 1, scope: !551, file: !1, line: 1704, type: !23)
!3162 = !DILocation(line: 1704, column: 14, scope: !551)
!3163 = !DILocalVariable(name: "tm", scope: !551, file: !1, line: 1706, type: !3164)
!3164 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !312, line: 133, size: 448, align: 64, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !3164, file: !312, line: 135, baseType: !23, size: 32, align: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !3164, file: !312, line: 136, baseType: !23, size: 32, align: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !3164, file: !312, line: 137, baseType: !23, size: 32, align: 32, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !3164, file: !312, line: 138, baseType: !23, size: 32, align: 32, offset: 96)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !3164, file: !312, line: 139, baseType: !23, size: 32, align: 32, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !3164, file: !312, line: 140, baseType: !23, size: 32, align: 32, offset: 160)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !3164, file: !312, line: 141, baseType: !23, size: 32, align: 32, offset: 192)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !3164, file: !312, line: 142, baseType: !23, size: 32, align: 32, offset: 224)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !3164, file: !312, line: 143, baseType: !23, size: 32, align: 32, offset: 256)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !3164, file: !312, line: 146, baseType: !42, size: 64, align: 64, offset: 320)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !3164, file: !312, line: 147, baseType: !80, size: 64, align: 64, offset: 384)
!3177 = !DILocation(line: 1706, column: 13, scope: !551)
!3178 = !DILocation(line: 1707, column: 20, scope: !551)
!3179 = !DILocation(line: 1707, column: 26, scope: !551)
!3180 = !DILocation(line: 1707, column: 17, scope: !551)
!3181 = !DILocation(line: 1707, column: 6, scope: !551)
!3182 = !DILocation(line: 1707, column: 13, scope: !551)
!3183 = !DILocation(line: 1708, column: 16, scope: !551)
!3184 = !DILocation(line: 1708, column: 22, scope: !551)
!3185 = !DILocation(line: 1708, column: 28, scope: !551)
!3186 = !DILocation(line: 1708, column: 6, scope: !551)
!3187 = !DILocation(line: 1708, column: 13, scope: !551)
!3188 = !DILocation(line: 1709, column: 17, scope: !551)
!3189 = !DILocation(line: 1709, column: 23, scope: !551)
!3190 = !DILocation(line: 1709, column: 30, scope: !551)
!3191 = !DILocation(line: 1709, column: 6, scope: !551)
!3192 = !DILocation(line: 1709, column: 14, scope: !551)
!3193 = !DILocation(line: 1710, column: 17, scope: !551)
!3194 = !DILocation(line: 1710, column: 23, scope: !551)
!3195 = !DILocation(line: 1710, column: 30, scope: !551)
!3196 = !DILocation(line: 1710, column: 6, scope: !551)
!3197 = !DILocation(line: 1710, column: 14, scope: !551)
!3198 = !DILocation(line: 1711, column: 17, scope: !551)
!3199 = !DILocation(line: 1711, column: 23, scope: !551)
!3200 = !DILocation(line: 1711, column: 30, scope: !551)
!3201 = !DILocation(line: 1711, column: 38, scope: !551)
!3202 = !DILocation(line: 1711, column: 6, scope: !551)
!3203 = !DILocation(line: 1711, column: 13, scope: !551)
!3204 = !DILocation(line: 1712, column: 18, scope: !551)
!3205 = !DILocation(line: 1712, column: 24, scope: !551)
!3206 = !DILocation(line: 1712, column: 31, scope: !551)
!3207 = !DILocation(line: 1712, column: 39, scope: !551)
!3208 = !DILocation(line: 1712, column: 6, scope: !551)
!3209 = !DILocation(line: 1712, column: 14, scope: !551)
!3210 = !DILocation(line: 1713, column: 6, scope: !551)
!3211 = !DILocation(line: 1713, column: 15, scope: !551)
!3212 = !DILocation(line: 1714, column: 10, scope: !551)
!3213 = !DILocation(line: 1714, column: 3, scope: !551)
!3214 = !DILocalVariable(name: "pp", arg: 1, scope: !554, file: !544, line: 131, type: !43)
!3215 = !DILocation(line: 131, column: 29, scope: !554)
!3216 = !DILocalVariable(name: "p", scope: !554, file: !544, line: 133, type: !531)
!3217 = !DILocation(line: 133, column: 23, scope: !554)
!3218 = !DILocation(line: 133, column: 50, scope: !554)
!3219 = !DILocation(line: 135, column: 37, scope: !554)
!3220 = !DILocation(line: 135, column: 39, scope: !554)
!3221 = !DILocation(line: 135, column: 21, scope: !554)
!3222 = !DILocation(line: 135, column: 11, scope: !554)
!3223 = !DILocation(line: 135, column: 44, scope: !554)
!3224 = !DILocation(line: 135, column: 69, scope: !554)
!3225 = !DILocation(line: 135, column: 53, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !554, file: !544, discriminator: 1)
!3227 = !DILocation(line: 135, column: 53, scope: !554)
!3228 = !DILocation(line: 135, column: 51, scope: !554)
!3229 = !DILocation(line: 135, column: 2, scope: !554)
!3230 = !DILocalVariable(name: "p", arg: 1, scope: !557, file: !1, line: 1718, type: !80)
!3231 = !DILocation(line: 1718, column: 26, scope: !557)
!3232 = !DILocalVariable(name: "rar", arg: 2, scope: !557, file: !1, line: 1718, type: !292)
!3233 = !DILocation(line: 1718, column: 41, scope: !557)
!3234 = !DILocalVariable(name: "endp", arg: 3, scope: !557, file: !1, line: 1718, type: !80)
!3235 = !DILocation(line: 1718, column: 58, scope: !557)
!3236 = !DILocalVariable(name: "rmode", scope: !557, file: !1, line: 1720, type: !13)
!3237 = !DILocation(line: 1720, column: 12, scope: !557)
!3238 = !DILocalVariable(name: "flags", scope: !557, file: !1, line: 1720, type: !13)
!3239 = !DILocation(line: 1720, column: 19, scope: !557)
!3240 = !DILocalVariable(name: "rem", scope: !557, file: !1, line: 1720, type: !13)
!3241 = !DILocation(line: 1720, column: 26, scope: !557)
!3242 = !DILocalVariable(name: "j", scope: !557, file: !1, line: 1720, type: !13)
!3243 = !DILocation(line: 1720, column: 31, scope: !557)
!3244 = !DILocalVariable(name: "count", scope: !557, file: !1, line: 1720, type: !13)
!3245 = !DILocation(line: 1720, column: 34, scope: !557)
!3246 = !DILocalVariable(name: "ttime", scope: !557, file: !1, line: 1721, type: !23)
!3247 = !DILocation(line: 1721, column: 7, scope: !557)
!3248 = !DILocalVariable(name: "i", scope: !557, file: !1, line: 1721, type: !23)
!3249 = !DILocation(line: 1721, column: 14, scope: !557)
!3250 = !DILocalVariable(name: "tm", scope: !557, file: !1, line: 1722, type: !3251)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64, align: 64)
!3252 = !DILocation(line: 1722, column: 14, scope: !557)
!3253 = !DILocalVariable(name: "t", scope: !557, file: !1, line: 1723, type: !311)
!3254 = !DILocation(line: 1723, column: 10, scope: !557)
!3255 = !DILocalVariable(name: "nsec", scope: !557, file: !1, line: 1724, type: !42)
!3256 = !DILocation(line: 1724, column: 8, scope: !557)
!3257 = !DILocation(line: 1726, column: 7, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !557, file: !1, line: 1726, column: 7)
!3259 = !DILocation(line: 1726, column: 9, scope: !3258)
!3260 = !DILocation(line: 1726, column: 15, scope: !3258)
!3261 = !DILocation(line: 1726, column: 13, scope: !3258)
!3262 = !DILocation(line: 1726, column: 7, scope: !557)
!3263 = !DILocation(line: 1727, column: 5, scope: !3258)
!3264 = !DILocation(line: 1728, column: 27, scope: !557)
!3265 = !DILocation(line: 1728, column: 11, scope: !557)
!3266 = !DILocation(line: 1728, column: 9, scope: !557)
!3267 = !DILocation(line: 1729, column: 5, scope: !557)
!3268 = !DILocation(line: 1731, column: 10, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !557, file: !1, line: 1731, column: 3)
!3270 = !DILocation(line: 1731, column: 8, scope: !3269)
!3271 = !DILocation(line: 1731, column: 15, scope: !3272)
!3272 = !DILexicalBlockFile(scope: !3273, file: !1, discriminator: 1)
!3273 = distinct !DILexicalBlock(scope: !3269, file: !1, line: 1731, column: 3)
!3274 = !DILocation(line: 1731, column: 17, scope: !3272)
!3275 = !DILocation(line: 1731, column: 3, scope: !3272)
!3276 = !DILocation(line: 1733, column: 7, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3273, file: !1, line: 1732, column: 3)
!3278 = !DILocation(line: 1734, column: 9, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3277, file: !1, line: 1734, column: 9)
!3280 = !DILocation(line: 1734, column: 11, scope: !3279)
!3281 = !DILocation(line: 1734, column: 9, scope: !3277)
!3282 = !DILocation(line: 1735, column: 11, scope: !3279)
!3283 = !DILocation(line: 1735, column: 16, scope: !3279)
!3284 = !DILocation(line: 1735, column: 9, scope: !3279)
!3285 = !DILocation(line: 1735, column: 7, scope: !3279)
!3286 = !DILocation(line: 1736, column: 13, scope: !3277)
!3287 = !DILocation(line: 1736, column: 22, scope: !3277)
!3288 = !DILocation(line: 1736, column: 24, scope: !3277)
!3289 = !DILocation(line: 1736, column: 19, scope: !3277)
!3290 = !DILocation(line: 1736, column: 11, scope: !3277)
!3291 = !DILocation(line: 1737, column: 9, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3277, file: !1, line: 1737, column: 9)
!3293 = !DILocation(line: 1737, column: 15, scope: !3292)
!3294 = !DILocation(line: 1737, column: 9, scope: !3277)
!3295 = !DILocation(line: 1739, column: 12, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 1739, column: 11)
!3297 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 1738, column: 5)
!3298 = !DILocation(line: 1739, column: 11, scope: !3297)
!3299 = !DILocation(line: 1741, column: 13, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 1741, column: 13)
!3301 = distinct !DILexicalBlock(scope: !3296, file: !1, line: 1740, column: 7)
!3302 = !DILocation(line: 1741, column: 15, scope: !3300)
!3303 = !DILocation(line: 1741, column: 21, scope: !3300)
!3304 = !DILocation(line: 1741, column: 19, scope: !3300)
!3305 = !DILocation(line: 1741, column: 13, scope: !3301)
!3306 = !DILocation(line: 1742, column: 11, scope: !3300)
!3307 = !DILocation(line: 1743, column: 33, scope: !3301)
!3308 = !DILocation(line: 1743, column: 17, scope: !3301)
!3309 = !DILocation(line: 1743, column: 15, scope: !3301)
!3310 = !DILocation(line: 1744, column: 22, scope: !3301)
!3311 = !DILocation(line: 1744, column: 13, scope: !3301)
!3312 = !DILocation(line: 1744, column: 11, scope: !3301)
!3313 = !DILocation(line: 1745, column: 11, scope: !3301)
!3314 = !DILocation(line: 1746, column: 7, scope: !3301)
!3315 = !DILocation(line: 1747, column: 11, scope: !3297)
!3316 = !DILocation(line: 1748, column: 15, scope: !3297)
!3317 = !DILocation(line: 1748, column: 21, scope: !3297)
!3318 = !DILocation(line: 1748, column: 13, scope: !3297)
!3319 = !DILocation(line: 1749, column: 11, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 1749, column: 11)
!3321 = !DILocation(line: 1749, column: 15, scope: !3320)
!3322 = !DILocation(line: 1749, column: 13, scope: !3320)
!3323 = !DILocation(line: 1749, column: 23, scope: !3320)
!3324 = !DILocation(line: 1749, column: 21, scope: !3320)
!3325 = !DILocation(line: 1749, column: 11, scope: !3297)
!3326 = !DILocation(line: 1750, column: 9, scope: !3320)
!3327 = !DILocation(line: 1751, column: 14, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 1751, column: 7)
!3329 = !DILocation(line: 1751, column: 12, scope: !3328)
!3330 = !DILocation(line: 1751, column: 19, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !3332, file: !1, discriminator: 1)
!3332 = distinct !DILexicalBlock(scope: !3328, file: !1, line: 1751, column: 7)
!3333 = !DILocation(line: 1751, column: 23, scope: !3331)
!3334 = !DILocation(line: 1751, column: 21, scope: !3331)
!3335 = !DILocation(line: 1751, column: 7, scope: !3331)
!3336 = !DILocation(line: 1753, column: 18, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3332, file: !1, line: 1752, column: 7)
!3338 = !DILocation(line: 1753, column: 17, scope: !3337)
!3339 = !DILocation(line: 1753, column: 16, scope: !3337)
!3340 = !DILocation(line: 1753, column: 21, scope: !3337)
!3341 = !DILocation(line: 1753, column: 31, scope: !3337)
!3342 = !DILocation(line: 1753, column: 35, scope: !3337)
!3343 = !DILocation(line: 1753, column: 28, scope: !3337)
!3344 = !DILocation(line: 1753, column: 13, scope: !3337)
!3345 = !DILocation(line: 1754, column: 10, scope: !3337)
!3346 = !DILocation(line: 1755, column: 7, scope: !3337)
!3347 = !DILocation(line: 1751, column: 31, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !3332, file: !1, discriminator: 2)
!3349 = !DILocation(line: 1751, column: 7, scope: !3348)
!3350 = !DILocation(line: 1756, column: 12, scope: !3297)
!3351 = !DILocation(line: 1756, column: 10, scope: !3297)
!3352 = !DILocation(line: 1757, column: 14, scope: !3297)
!3353 = !DILocation(line: 1757, column: 18, scope: !3297)
!3354 = !DILocation(line: 1757, column: 27, scope: !3297)
!3355 = !DILocation(line: 1757, column: 31, scope: !3297)
!3356 = !DILocation(line: 1757, column: 25, scope: !3297)
!3357 = !DILocation(line: 1757, column: 12, scope: !3297)
!3358 = !DILocation(line: 1758, column: 11, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 1758, column: 11)
!3360 = !DILocation(line: 1758, column: 17, scope: !3359)
!3361 = !DILocation(line: 1758, column: 11, scope: !3297)
!3362 = !DILocation(line: 1760, column: 9, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !1, line: 1759, column: 7)
!3364 = !DILocation(line: 1760, column: 13, scope: !3363)
!3365 = !DILocation(line: 1760, column: 19, scope: !3363)
!3366 = !DILocation(line: 1761, column: 20, scope: !3363)
!3367 = !DILocation(line: 1761, column: 13, scope: !3363)
!3368 = !DILocation(line: 1761, column: 11, scope: !3363)
!3369 = !DILocation(line: 1762, column: 7, scope: !3363)
!3370 = !DILocation(line: 1763, column: 11, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 1763, column: 11)
!3372 = !DILocation(line: 1763, column: 13, scope: !3371)
!3373 = !DILocation(line: 1763, column: 11, scope: !3297)
!3374 = !DILocation(line: 1765, column: 22, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 1764, column: 7)
!3376 = !DILocation(line: 1765, column: 9, scope: !3375)
!3377 = !DILocation(line: 1765, column: 14, scope: !3375)
!3378 = !DILocation(line: 1765, column: 20, scope: !3375)
!3379 = !DILocation(line: 1766, column: 22, scope: !3375)
!3380 = !DILocation(line: 1766, column: 9, scope: !3375)
!3381 = !DILocation(line: 1766, column: 14, scope: !3375)
!3382 = !DILocation(line: 1766, column: 20, scope: !3375)
!3383 = !DILocation(line: 1767, column: 7, scope: !3375)
!3384 = !DILocation(line: 1768, column: 16, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 1768, column: 16)
!3386 = !DILocation(line: 1768, column: 18, scope: !3385)
!3387 = !DILocation(line: 1768, column: 16, scope: !3371)
!3388 = !DILocation(line: 1770, column: 22, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3385, file: !1, line: 1769, column: 7)
!3390 = !DILocation(line: 1770, column: 9, scope: !3389)
!3391 = !DILocation(line: 1770, column: 14, scope: !3389)
!3392 = !DILocation(line: 1770, column: 20, scope: !3389)
!3393 = !DILocation(line: 1771, column: 22, scope: !3389)
!3394 = !DILocation(line: 1771, column: 9, scope: !3389)
!3395 = !DILocation(line: 1771, column: 14, scope: !3389)
!3396 = !DILocation(line: 1771, column: 20, scope: !3389)
!3397 = !DILocation(line: 1772, column: 7, scope: !3389)
!3398 = !DILocation(line: 1773, column: 16, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3385, file: !1, line: 1773, column: 16)
!3400 = !DILocation(line: 1773, column: 18, scope: !3399)
!3401 = !DILocation(line: 1773, column: 16, scope: !3385)
!3402 = !DILocation(line: 1775, column: 22, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 1774, column: 7)
!3404 = !DILocation(line: 1775, column: 9, scope: !3403)
!3405 = !DILocation(line: 1775, column: 14, scope: !3403)
!3406 = !DILocation(line: 1775, column: 20, scope: !3403)
!3407 = !DILocation(line: 1776, column: 22, scope: !3403)
!3408 = !DILocation(line: 1776, column: 9, scope: !3403)
!3409 = !DILocation(line: 1776, column: 14, scope: !3403)
!3410 = !DILocation(line: 1776, column: 20, scope: !3403)
!3411 = !DILocation(line: 1777, column: 7, scope: !3403)
!3412 = !DILocation(line: 1780, column: 24, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 1779, column: 7)
!3414 = !DILocation(line: 1780, column: 9, scope: !3413)
!3415 = !DILocation(line: 1780, column: 14, scope: !3413)
!3416 = !DILocation(line: 1780, column: 22, scope: !3413)
!3417 = !DILocation(line: 1781, column: 24, scope: !3413)
!3418 = !DILocation(line: 1781, column: 9, scope: !3413)
!3419 = !DILocation(line: 1781, column: 14, scope: !3413)
!3420 = !DILocation(line: 1781, column: 22, scope: !3413)
!3421 = !DILocation(line: 1783, column: 5, scope: !3297)
!3422 = !DILocation(line: 1784, column: 3, scope: !3277)
!3423 = !DILocation(line: 1731, column: 24, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3273, file: !1, discriminator: 2)
!3425 = !DILocation(line: 1731, column: 3, scope: !3424)
!3426 = !DILocation(line: 1785, column: 3, scope: !557)
!3427 = !DILocation(line: 1786, column: 1, scope: !557)
!3428 = !DILocalVariable(name: "a", arg: 1, scope: !566, file: !1, line: 1789, type: !4)
!3429 = !DILocation(line: 1789, column: 42, scope: !566)
!3430 = !DILocalVariable(name: "entry", arg: 2, scope: !566, file: !1, line: 1789, type: !30)
!3431 = !DILocation(line: 1789, column: 67, scope: !566)
!3432 = !DILocalVariable(name: "sconv", arg: 3, scope: !566, file: !1, line: 1790, type: !102)
!3433 = !DILocation(line: 1790, column: 49, scope: !566)
!3434 = !DILocalVariable(name: "h", scope: !566, file: !1, line: 1792, type: !43)
!3435 = !DILocation(line: 1792, column: 15, scope: !566)
!3436 = !DILocalVariable(name: "p", scope: !566, file: !1, line: 1793, type: !80)
!3437 = !DILocation(line: 1793, column: 15, scope: !566)
!3438 = !DILocalVariable(name: "rar", scope: !566, file: !1, line: 1794, type: !292)
!3439 = !DILocation(line: 1794, column: 15, scope: !566)
!3440 = !DILocalVariable(name: "ret", scope: !566, file: !1, line: 1795, type: !23)
!3441 = !DILocation(line: 1795, column: 7, scope: !566)
!3442 = !DILocation(line: 1797, column: 24, scope: !566)
!3443 = !DILocation(line: 1797, column: 27, scope: !566)
!3444 = !DILocation(line: 1797, column: 35, scope: !566)
!3445 = !DILocation(line: 1797, column: 9, scope: !566)
!3446 = !DILocation(line: 1797, column: 7, scope: !566)
!3447 = !DILocation(line: 1798, column: 27, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !566, file: !1, line: 1798, column: 7)
!3449 = !DILocation(line: 1798, column: 38, scope: !3448)
!3450 = !DILocation(line: 1798, column: 43, scope: !3448)
!3451 = !DILocation(line: 1798, column: 12, scope: !3448)
!3452 = !DILocation(line: 1798, column: 10, scope: !3448)
!3453 = !DILocation(line: 1798, column: 63, scope: !3448)
!3454 = !DILocation(line: 1798, column: 7, scope: !566)
!3455 = !DILocation(line: 1799, column: 5, scope: !3448)
!3456 = !DILocation(line: 1800, column: 7, scope: !566)
!3457 = !DILocation(line: 1800, column: 5, scope: !566)
!3458 = !DILocation(line: 1802, column: 36, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !566, file: !1, line: 1802, column: 7)
!3460 = !DILocation(line: 1803, column: 7, scope: !3459)
!3461 = !DILocation(line: 1803, column: 18, scope: !3459)
!3462 = !DILocation(line: 1803, column: 23, scope: !3459)
!3463 = !DILocation(line: 1803, column: 36, scope: !3459)
!3464 = !DILocation(line: 1802, column: 7, scope: !3459)
!3465 = !DILocation(line: 1802, column: 7, scope: !566)
!3466 = !DILocation(line: 1805, column: 9, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !1, line: 1805, column: 9)
!3468 = distinct !DILexicalBlock(scope: !3459, file: !1, line: 1804, column: 3)
!3469 = !DILocation(line: 1805, column: 15, scope: !3467)
!3470 = !DILocation(line: 1805, column: 9, scope: !3468)
!3471 = !DILocation(line: 1807, column: 26, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 1806, column: 5)
!3473 = !DILocation(line: 1807, column: 29, scope: !3472)
!3474 = !DILocation(line: 1807, column: 7, scope: !3472)
!3475 = !DILocation(line: 1809, column: 7, scope: !3472)
!3476 = !DILocation(line: 1811, column: 24, scope: !3468)
!3477 = !DILocation(line: 1811, column: 27, scope: !3468)
!3478 = !DILocation(line: 1813, column: 62, scope: !3468)
!3479 = !DILocation(line: 1813, column: 23, scope: !3468)
!3480 = !DILocation(line: 1811, column: 5, scope: !3468)
!3481 = !DILocation(line: 1814, column: 9, scope: !3468)
!3482 = !DILocation(line: 1815, column: 3, scope: !3468)
!3483 = !DILocation(line: 1816, column: 26, scope: !566)
!3484 = !DILocation(line: 1816, column: 29, scope: !566)
!3485 = !DILocation(line: 1816, column: 34, scope: !566)
!3486 = !DILocation(line: 1816, column: 3, scope: !566)
!3487 = !DILocation(line: 1817, column: 10, scope: !566)
!3488 = !DILocation(line: 1817, column: 3, scope: !566)
!3489 = !DILocation(line: 1818, column: 1, scope: !566)
!3490 = !DILocalVariable(name: "p", arg: 1, scope: !560, file: !1, line: 608, type: !123)
!3491 = !DILocation(line: 608, column: 18, scope: !560)
!3492 = !DILocalVariable(name: "size", arg: 2, scope: !560, file: !1, line: 608, type: !45)
!3493 = !DILocation(line: 608, column: 28, scope: !560)
!3494 = !DILocation(line: 610, column: 9, scope: !560)
!3495 = !DILocation(line: 611, column: 17, scope: !560)
!3496 = !DILocation(line: 611, column: 10, scope: !560)
!3497 = !DILocation(line: 611, column: 3, scope: !560)
!3498 = !DILocalVariable(name: "p", arg: 1, scope: !563, file: !1, line: 614, type: !123)
!3499 = !DILocation(line: 614, column: 17, scope: !563)
!3500 = !DILocalVariable(name: "address", arg: 2, scope: !563, file: !1, line: 614, type: !123)
!3501 = !DILocation(line: 614, column: 26, scope: !563)
!3502 = !DILocation(line: 616, column: 9, scope: !563)
!3503 = !DILocation(line: 617, column: 8, scope: !563)
!3504 = !DILocation(line: 617, column: 3, scope: !563)
!3505 = !DILocation(line: 618, column: 1, scope: !563)
!3506 = !DILocalVariable(name: "a", arg: 1, scope: !569, file: !1, line: 2925, type: !4)
!3507 = !DILocation(line: 2925, column: 37, scope: !569)
!3508 = !DILocalVariable(name: "min", arg: 2, scope: !569, file: !1, line: 2925, type: !45)
!3509 = !DILocation(line: 2925, column: 47, scope: !569)
!3510 = !DILocalVariable(name: "avail", arg: 3, scope: !569, file: !1, line: 2925, type: !572)
!3511 = !DILocation(line: 2925, column: 61, scope: !569)
!3512 = !DILocalVariable(name: "rar", scope: !569, file: !1, line: 2927, type: !292)
!3513 = !DILocation(line: 2927, column: 15, scope: !569)
!3514 = !DILocation(line: 2927, column: 36, scope: !569)
!3515 = !DILocation(line: 2927, column: 39, scope: !569)
!3516 = !DILocation(line: 2927, column: 47, scope: !569)
!3517 = !DILocation(line: 2927, column: 21, scope: !569)
!3518 = !DILocalVariable(name: "h", scope: !569, file: !1, line: 2928, type: !43)
!3519 = !DILocation(line: 2928, column: 15, scope: !569)
!3520 = !DILocation(line: 2928, column: 40, scope: !569)
!3521 = !DILocation(line: 2928, column: 43, scope: !569)
!3522 = !DILocation(line: 2928, column: 48, scope: !569)
!3523 = !DILocation(line: 2928, column: 19, scope: !569)
!3524 = !DILocalVariable(name: "ret", scope: !569, file: !1, line: 2929, type: !23)
!3525 = !DILocation(line: 2929, column: 7, scope: !569)
!3526 = !DILocation(line: 2930, column: 7, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !569, file: !1, line: 2930, column: 7)
!3528 = !DILocation(line: 2930, column: 7, scope: !569)
!3529 = !DILocation(line: 2932, column: 9, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 2932, column: 9)
!3531 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 2931, column: 3)
!3532 = !DILocation(line: 2932, column: 12, scope: !3530)
!3533 = !DILocation(line: 2932, column: 20, scope: !3530)
!3534 = !DILocation(line: 2932, column: 44, scope: !3530)
!3535 = !DILocation(line: 2932, column: 48, scope: !3536)
!3536 = !DILexicalBlockFile(scope: !3530, file: !1, discriminator: 1)
!3537 = !DILocation(line: 2932, column: 47, scope: !3536)
!3538 = !DILocation(line: 2932, column: 65, scope: !3536)
!3539 = !DILocation(line: 2932, column: 68, scope: !3536)
!3540 = !DILocation(line: 2932, column: 76, scope: !3536)
!3541 = !DILocation(line: 2932, column: 54, scope: !3536)
!3542 = !DILocation(line: 2932, column: 9, scope: !3536)
!3543 = !DILocation(line: 2933, column: 16, scope: !3530)
!3544 = !DILocation(line: 2933, column: 19, scope: !3530)
!3545 = !DILocation(line: 2933, column: 27, scope: !3530)
!3546 = !DILocation(line: 2933, column: 8, scope: !3530)
!3547 = !DILocation(line: 2933, column: 14, scope: !3530)
!3548 = !DILocation(line: 2933, column: 7, scope: !3530)
!3549 = !DILocation(line: 2934, column: 10, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 2934, column: 9)
!3551 = !DILocation(line: 2934, column: 9, scope: !3550)
!3552 = !DILocation(line: 2934, column: 18, scope: !3550)
!3553 = !DILocation(line: 2934, column: 23, scope: !3550)
!3554 = !DILocation(line: 2934, column: 16, scope: !3550)
!3555 = !DILocation(line: 2934, column: 9, scope: !3531)
!3556 = !DILocation(line: 2935, column: 25, scope: !3550)
!3557 = !DILocation(line: 2935, column: 30, scope: !3550)
!3558 = !DILocation(line: 2935, column: 8, scope: !3550)
!3559 = !DILocation(line: 2935, column: 14, scope: !3550)
!3560 = !DILocation(line: 2935, column: 7, scope: !3550)
!3561 = !DILocation(line: 2936, column: 10, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 2936, column: 9)
!3563 = !DILocation(line: 2936, column: 9, scope: !3562)
!3564 = !DILocation(line: 2936, column: 16, scope: !3562)
!3565 = !DILocation(line: 2936, column: 9, scope: !3531)
!3566 = !DILocation(line: 2937, column: 7, scope: !3562)
!3567 = !DILocation(line: 2938, column: 15, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3562, file: !1, line: 2938, column: 14)
!3569 = !DILocation(line: 2938, column: 14, scope: !3568)
!3570 = !DILocation(line: 2938, column: 21, scope: !3568)
!3571 = !DILocation(line: 2938, column: 26, scope: !3568)
!3572 = !DILocation(line: 2938, column: 29, scope: !3573)
!3573 = !DILexicalBlockFile(scope: !3568, file: !1, discriminator: 1)
!3574 = !DILocation(line: 2938, column: 34, scope: !3573)
!3575 = !DILocation(line: 2938, column: 45, scope: !3573)
!3576 = !DILocation(line: 2938, column: 58, scope: !3573)
!3577 = !DILocation(line: 2939, column: 7, scope: !3568)
!3578 = !DILocation(line: 2939, column: 12, scope: !3568)
!3579 = !DILocation(line: 2939, column: 23, scope: !3568)
!3580 = !DILocation(line: 2938, column: 14, scope: !3581)
!3581 = !DILexicalBlockFile(scope: !3562, file: !1, discriminator: 2)
!3582 = !DILocation(line: 2941, column: 49, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3568, file: !1, line: 2940, column: 5)
!3584 = !DILocation(line: 2941, column: 52, scope: !3583)
!3585 = !DILocation(line: 2941, column: 55, scope: !3583)
!3586 = !DILocation(line: 2941, column: 13, scope: !3583)
!3587 = !DILocation(line: 2941, column: 11, scope: !3583)
!3588 = !DILocation(line: 2942, column: 11, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3583, file: !1, line: 2942, column: 11)
!3590 = !DILocation(line: 2942, column: 15, scope: !3589)
!3591 = !DILocation(line: 2942, column: 11, scope: !3583)
!3592 = !DILocation(line: 2944, column: 9, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3589, file: !1, line: 2943, column: 7)
!3594 = !DILocation(line: 2944, column: 14, scope: !3593)
!3595 = !DILocation(line: 2944, column: 32, scope: !3593)
!3596 = !DILocation(line: 2945, column: 51, scope: !3593)
!3597 = !DILocation(line: 2945, column: 54, scope: !3593)
!3598 = !DILocation(line: 2945, column: 57, scope: !3593)
!3599 = !DILocation(line: 2945, column: 15, scope: !3593)
!3600 = !DILocation(line: 2945, column: 13, scope: !3593)
!3601 = !DILocation(line: 2946, column: 7, scope: !3593)
!3602 = !DILocation(line: 2947, column: 11, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3583, file: !1, line: 2947, column: 11)
!3604 = !DILocation(line: 2947, column: 15, scope: !3603)
!3605 = !DILocation(line: 2947, column: 11, scope: !3583)
!3606 = !DILocation(line: 2948, column: 9, scope: !3603)
!3607 = !DILocation(line: 2949, column: 29, scope: !3583)
!3608 = !DILocation(line: 2949, column: 32, scope: !3583)
!3609 = !DILocation(line: 2949, column: 37, scope: !3583)
!3610 = !DILocation(line: 2949, column: 14, scope: !3583)
!3611 = !DILocation(line: 2949, column: 7, scope: !3583)
!3612 = !DILocation(line: 2951, column: 3, scope: !3531)
!3613 = !DILocation(line: 2952, column: 10, scope: !569)
!3614 = !DILocation(line: 2952, column: 3, scope: !569)
!3615 = !DILocation(line: 2953, column: 1, scope: !569)
!3616 = !DILocalVariable(name: "a", arg: 1, scope: !577, file: !1, line: 1821, type: !4)
!3617 = !DILocation(line: 1821, column: 39, scope: !577)
!3618 = !DILocalVariable(name: "buff", arg: 2, scope: !577, file: !1, line: 1821, type: !64)
!3619 = !DILocation(line: 1821, column: 55, scope: !577)
!3620 = !DILocalVariable(name: "size", arg: 3, scope: !577, file: !1, line: 1821, type: !65)
!3621 = !DILocation(line: 1821, column: 69, scope: !577)
!3622 = !DILocalVariable(name: "offset", arg: 4, scope: !577, file: !1, line: 1822, type: !66)
!3623 = !DILocation(line: 1822, column: 27, scope: !577)
!3624 = !DILocalVariable(name: "rar", scope: !577, file: !1, line: 1824, type: !292)
!3625 = !DILocation(line: 1824, column: 15, scope: !577)
!3626 = !DILocalVariable(name: "bytes_avail", scope: !577, file: !1, line: 1825, type: !38)
!3627 = !DILocation(line: 1825, column: 11, scope: !577)
!3628 = !DILocation(line: 1827, column: 24, scope: !577)
!3629 = !DILocation(line: 1827, column: 27, scope: !577)
!3630 = !DILocation(line: 1827, column: 35, scope: !577)
!3631 = !DILocation(line: 1827, column: 9, scope: !577)
!3632 = !DILocation(line: 1827, column: 7, scope: !577)
!3633 = !DILocation(line: 1828, column: 7, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !577, file: !1, line: 1828, column: 7)
!3635 = !DILocation(line: 1828, column: 12, scope: !3634)
!3636 = !DILocation(line: 1828, column: 28, scope: !3634)
!3637 = !DILocation(line: 1828, column: 33, scope: !3634)
!3638 = !DILocation(line: 1829, column: 7, scope: !3634)
!3639 = !DILocation(line: 1829, column: 12, scope: !3634)
!3640 = !DILocation(line: 1829, column: 23, scope: !3634)
!3641 = !DILocation(line: 1829, column: 36, scope: !3634)
!3642 = !DILocation(line: 1829, column: 39, scope: !3643)
!3643 = !DILexicalBlockFile(scope: !3634, file: !1, discriminator: 1)
!3644 = !DILocation(line: 1829, column: 44, scope: !3643)
!3645 = !DILocation(line: 1829, column: 55, scope: !3643)
!3646 = !DILocation(line: 1828, column: 7, scope: !3647)
!3647 = !DILexicalBlockFile(scope: !577, file: !1, discriminator: 1)
!3648 = !DILocation(line: 1831, column: 6, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3634, file: !1, line: 1830, column: 3)
!3650 = !DILocation(line: 1831, column: 11, scope: !3649)
!3651 = !DILocation(line: 1832, column: 6, scope: !3649)
!3652 = !DILocation(line: 1832, column: 11, scope: !3649)
!3653 = !DILocation(line: 1833, column: 15, scope: !3649)
!3654 = !DILocation(line: 1833, column: 20, scope: !3649)
!3655 = !DILocation(line: 1833, column: 6, scope: !3649)
!3656 = !DILocation(line: 1833, column: 13, scope: !3649)
!3657 = !DILocation(line: 1834, column: 9, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 1834, column: 9)
!3659 = !DILocation(line: 1834, column: 14, scope: !3658)
!3660 = !DILocation(line: 1834, column: 26, scope: !3658)
!3661 = !DILocation(line: 1834, column: 31, scope: !3658)
!3662 = !DILocation(line: 1834, column: 23, scope: !3658)
!3663 = !DILocation(line: 1834, column: 9, scope: !3649)
!3664 = !DILocation(line: 1835, column: 26, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3658, file: !1, line: 1834, column: 47)
!3666 = !DILocation(line: 1835, column: 29, scope: !3665)
!3667 = !DILocation(line: 1835, column: 7, scope: !3665)
!3668 = !DILocation(line: 1837, column: 7, scope: !3665)
!3669 = !DILocation(line: 1839, column: 5, scope: !3649)
!3670 = !DILocation(line: 1839, column: 10, scope: !3649)
!3671 = !DILocation(line: 1839, column: 20, scope: !3649)
!3672 = !DILocation(line: 1840, column: 5, scope: !3649)
!3673 = !DILocation(line: 1843, column: 26, scope: !577)
!3674 = !DILocation(line: 1843, column: 11, scope: !577)
!3675 = !DILocation(line: 1843, column: 4, scope: !577)
!3676 = !DILocation(line: 1843, column: 9, scope: !577)
!3677 = !DILocation(line: 1844, column: 7, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !577, file: !1, line: 1844, column: 7)
!3679 = !DILocation(line: 1844, column: 19, scope: !3678)
!3680 = !DILocation(line: 1844, column: 7, scope: !577)
!3681 = !DILocation(line: 1846, column: 24, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3678, file: !1, line: 1845, column: 3)
!3683 = !DILocation(line: 1846, column: 27, scope: !3682)
!3684 = !DILocation(line: 1846, column: 5, scope: !3682)
!3685 = !DILocation(line: 1848, column: 5, scope: !3682)
!3686 = !DILocation(line: 1851, column: 11, scope: !577)
!3687 = !DILocation(line: 1851, column: 4, scope: !577)
!3688 = !DILocation(line: 1851, column: 9, scope: !577)
!3689 = !DILocation(line: 1852, column: 13, scope: !577)
!3690 = !DILocation(line: 1852, column: 18, scope: !577)
!3691 = !DILocation(line: 1852, column: 4, scope: !577)
!3692 = !DILocation(line: 1852, column: 11, scope: !577)
!3693 = !DILocation(line: 1853, column: 18, scope: !577)
!3694 = !DILocation(line: 1853, column: 3, scope: !577)
!3695 = !DILocation(line: 1853, column: 8, scope: !577)
!3696 = !DILocation(line: 1853, column: 15, scope: !577)
!3697 = !DILocation(line: 1854, column: 23, scope: !577)
!3698 = !DILocation(line: 1854, column: 3, scope: !577)
!3699 = !DILocation(line: 1854, column: 8, scope: !577)
!3700 = !DILocation(line: 1854, column: 20, scope: !577)
!3701 = !DILocation(line: 1855, column: 27, scope: !577)
!3702 = !DILocation(line: 1855, column: 3, scope: !577)
!3703 = !DILocation(line: 1855, column: 8, scope: !577)
!3704 = !DILocation(line: 1855, column: 24, scope: !577)
!3705 = !DILocation(line: 1856, column: 27, scope: !577)
!3706 = !DILocation(line: 1856, column: 3, scope: !577)
!3707 = !DILocation(line: 1856, column: 8, scope: !577)
!3708 = !DILocation(line: 1856, column: 25, scope: !577)
!3709 = !DILocation(line: 1858, column: 31, scope: !577)
!3710 = !DILocation(line: 1858, column: 36, scope: !577)
!3711 = !DILocation(line: 1858, column: 53, scope: !577)
!3712 = !DILocation(line: 1858, column: 52, scope: !577)
!3713 = !DILocation(line: 1859, column: 15, scope: !577)
!3714 = !DILocation(line: 1859, column: 5, scope: !577)
!3715 = !DILocation(line: 1858, column: 25, scope: !577)
!3716 = !DILocation(line: 1858, column: 3, scope: !577)
!3717 = !DILocation(line: 1858, column: 8, scope: !577)
!3718 = !DILocation(line: 1858, column: 23, scope: !577)
!3719 = !DILocation(line: 1860, column: 3, scope: !577)
!3720 = !DILocation(line: 1861, column: 1, scope: !577)
!3721 = !DILocalVariable(name: "a", arg: 1, scope: !578, file: !1, line: 1864, type: !4)
!3722 = !DILocation(line: 1864, column: 43, scope: !578)
!3723 = !DILocalVariable(name: "buff", arg: 2, scope: !578, file: !1, line: 1864, type: !64)
!3724 = !DILocation(line: 1864, column: 59, scope: !578)
!3725 = !DILocalVariable(name: "size", arg: 3, scope: !578, file: !1, line: 1864, type: !65)
!3726 = !DILocation(line: 1864, column: 73, scope: !578)
!3727 = !DILocalVariable(name: "offset", arg: 4, scope: !578, file: !1, line: 1865, type: !66)
!3728 = !DILocation(line: 1865, column: 25, scope: !578)
!3729 = !DILocalVariable(name: "rar", scope: !578, file: !1, line: 1867, type: !292)
!3730 = !DILocation(line: 1867, column: 15, scope: !578)
!3731 = !DILocalVariable(name: "start", scope: !578, file: !1, line: 1868, type: !52)
!3732 = !DILocation(line: 1868, column: 11, scope: !578)
!3733 = !DILocalVariable(name: "end", scope: !578, file: !1, line: 1868, type: !52)
!3734 = !DILocation(line: 1868, column: 18, scope: !578)
!3735 = !DILocalVariable(name: "actualend", scope: !578, file: !1, line: 1868, type: !52)
!3736 = !DILocation(line: 1868, column: 23, scope: !578)
!3737 = !DILocalVariable(name: "bs", scope: !578, file: !1, line: 1869, type: !45)
!3738 = !DILocation(line: 1869, column: 10, scope: !578)
!3739 = !DILocalVariable(name: "ret", scope: !578, file: !1, line: 1870, type: !23)
!3740 = !DILocation(line: 1870, column: 7, scope: !578)
!3741 = !DILocalVariable(name: "sym", scope: !578, file: !1, line: 1870, type: !23)
!3742 = !DILocation(line: 1870, column: 27, scope: !578)
!3743 = !DILocalVariable(name: "code", scope: !578, file: !1, line: 1870, type: !23)
!3744 = !DILocation(line: 1870, column: 32, scope: !578)
!3745 = !DILocalVariable(name: "lzss_offset", scope: !578, file: !1, line: 1870, type: !23)
!3746 = !DILocation(line: 1870, column: 38, scope: !578)
!3747 = !DILocalVariable(name: "length", scope: !578, file: !1, line: 1870, type: !23)
!3748 = !DILocation(line: 1870, column: 51, scope: !578)
!3749 = !DILocalVariable(name: "i", scope: !578, file: !1, line: 1870, type: !23)
!3750 = !DILocation(line: 1870, column: 59, scope: !578)
!3751 = !DILocation(line: 1872, column: 24, scope: !578)
!3752 = !DILocation(line: 1872, column: 27, scope: !578)
!3753 = !DILocation(line: 1872, column: 35, scope: !578)
!3754 = !DILocation(line: 1872, column: 9, scope: !578)
!3755 = !DILocation(line: 1872, column: 7, scope: !578)
!3756 = !DILocation(line: 1874, column: 3, scope: !578)
!3757 = !DILocation(line: 1875, column: 10, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1875, column: 9)
!3759 = distinct !DILexicalBlock(scope: !578, file: !1, line: 1874, column: 6)
!3760 = !DILocation(line: 1875, column: 15, scope: !3758)
!3761 = !DILocation(line: 1875, column: 9, scope: !3759)
!3762 = !DILocation(line: 1876, column: 7, scope: !3758)
!3763 = !DILocation(line: 1877, column: 9, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1877, column: 9)
!3765 = !DILocation(line: 1877, column: 14, scope: !3764)
!3766 = !DILocation(line: 1877, column: 23, scope: !3764)
!3767 = !DILocation(line: 1878, column: 9, scope: !3764)
!3768 = !DILocation(line: 1878, column: 14, scope: !3764)
!3769 = !DILocation(line: 1878, column: 30, scope: !3764)
!3770 = !DILocation(line: 1878, column: 33, scope: !3771)
!3771 = !DILexicalBlockFile(scope: !3764, file: !1, discriminator: 1)
!3772 = !DILocation(line: 1878, column: 38, scope: !3771)
!3773 = !DILocation(line: 1878, column: 48, scope: !3771)
!3774 = !DILocation(line: 1878, column: 53, scope: !3771)
!3775 = !DILocation(line: 1878, column: 45, scope: !3771)
!3776 = !DILocation(line: 1877, column: 9, scope: !3777)
!3777 = !DILexicalBlockFile(scope: !3759, file: !1, discriminator: 1)
!3778 = !DILocation(line: 1880, column: 11, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !1, line: 1880, column: 11)
!3780 = distinct !DILexicalBlock(scope: !3764, file: !1, line: 1879, column: 5)
!3781 = !DILocation(line: 1880, column: 16, scope: !3779)
!3782 = !DILocation(line: 1880, column: 27, scope: !3779)
!3783 = !DILocation(line: 1880, column: 11, scope: !3780)
!3784 = !DILocation(line: 1884, column: 17, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3779, file: !1, line: 1880, column: 32)
!3786 = !DILocation(line: 1884, column: 22, scope: !3785)
!3787 = !DILocation(line: 1884, column: 10, scope: !3785)
!3788 = !DILocation(line: 1884, column: 15, scope: !3785)
!3789 = !DILocation(line: 1885, column: 17, scope: !3785)
!3790 = !DILocation(line: 1885, column: 22, scope: !3785)
!3791 = !DILocation(line: 1885, column: 10, scope: !3785)
!3792 = !DILocation(line: 1885, column: 15, scope: !3785)
!3793 = !DILocation(line: 1886, column: 19, scope: !3785)
!3794 = !DILocation(line: 1886, column: 24, scope: !3785)
!3795 = !DILocation(line: 1886, column: 10, scope: !3785)
!3796 = !DILocation(line: 1886, column: 17, scope: !3785)
!3797 = !DILocation(line: 1887, column: 34, scope: !3785)
!3798 = !DILocation(line: 1887, column: 33, scope: !3785)
!3799 = !DILocation(line: 1887, column: 9, scope: !3785)
!3800 = !DILocation(line: 1887, column: 14, scope: !3785)
!3801 = !DILocation(line: 1887, column: 30, scope: !3785)
!3802 = !DILocation(line: 1889, column: 37, scope: !3785)
!3803 = !DILocation(line: 1889, column: 42, scope: !3785)
!3804 = !DILocation(line: 1889, column: 59, scope: !3785)
!3805 = !DILocation(line: 1889, column: 58, scope: !3785)
!3806 = !DILocation(line: 1890, column: 22, scope: !3785)
!3807 = !DILocation(line: 1890, column: 21, scope: !3785)
!3808 = !DILocation(line: 1890, column: 11, scope: !3785)
!3809 = !DILocation(line: 1889, column: 31, scope: !3785)
!3810 = !DILocation(line: 1889, column: 9, scope: !3785)
!3811 = !DILocation(line: 1889, column: 14, scope: !3785)
!3812 = !DILocation(line: 1889, column: 29, scope: !3785)
!3813 = !DILocation(line: 1891, column: 9, scope: !3785)
!3814 = !DILocation(line: 1891, column: 14, scope: !3785)
!3815 = !DILocation(line: 1891, column: 25, scope: !3785)
!3816 = !DILocation(line: 1892, column: 9, scope: !3785)
!3817 = !DILocation(line: 1894, column: 8, scope: !3780)
!3818 = !DILocation(line: 1894, column: 13, scope: !3780)
!3819 = !DILocation(line: 1895, column: 8, scope: !3780)
!3820 = !DILocation(line: 1895, column: 13, scope: !3780)
!3821 = !DILocation(line: 1896, column: 17, scope: !3780)
!3822 = !DILocation(line: 1896, column: 22, scope: !3780)
!3823 = !DILocation(line: 1896, column: 8, scope: !3780)
!3824 = !DILocation(line: 1896, column: 15, scope: !3780)
!3825 = !DILocation(line: 1897, column: 11, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3780, file: !1, line: 1897, column: 11)
!3827 = !DILocation(line: 1897, column: 16, scope: !3826)
!3828 = !DILocation(line: 1897, column: 28, scope: !3826)
!3829 = !DILocation(line: 1897, column: 33, scope: !3826)
!3830 = !DILocation(line: 1897, column: 25, scope: !3826)
!3831 = !DILocation(line: 1897, column: 11, scope: !3780)
!3832 = !DILocation(line: 1898, column: 28, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3826, file: !1, line: 1897, column: 49)
!3834 = !DILocation(line: 1898, column: 31, scope: !3833)
!3835 = !DILocation(line: 1898, column: 9, scope: !3833)
!3836 = !DILocation(line: 1900, column: 9, scope: !3833)
!3837 = !DILocation(line: 1902, column: 7, scope: !3780)
!3838 = !DILocation(line: 1902, column: 12, scope: !3780)
!3839 = !DILocation(line: 1902, column: 22, scope: !3780)
!3840 = !DILocation(line: 1903, column: 7, scope: !3780)
!3841 = !DILocation(line: 1906, column: 10, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1906, column: 9)
!3843 = !DILocation(line: 1906, column: 15, scope: !3842)
!3844 = !DILocation(line: 1906, column: 29, scope: !3842)
!3845 = !DILocation(line: 1906, column: 32, scope: !3846)
!3846 = !DILexicalBlockFile(scope: !3842, file: !1, discriminator: 1)
!3847 = !DILocation(line: 1906, column: 37, scope: !3846)
!3848 = !DILocation(line: 1906, column: 53, scope: !3846)
!3849 = !DILocation(line: 1906, column: 56, scope: !3850)
!3850 = !DILexicalBlockFile(scope: !3842, file: !1, discriminator: 2)
!3851 = !DILocation(line: 1906, column: 61, scope: !3850)
!3852 = !DILocation(line: 1906, column: 76, scope: !3850)
!3853 = !DILocation(line: 1906, column: 9, scope: !3850)
!3854 = !DILocation(line: 1908, column: 11, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !1, line: 1908, column: 11)
!3856 = distinct !DILexicalBlock(scope: !3842, file: !1, line: 1907, column: 5)
!3857 = !DILocation(line: 1908, column: 16, scope: !3855)
!3858 = !DILocation(line: 1908, column: 34, scope: !3855)
!3859 = !DILocation(line: 1908, column: 39, scope: !3855)
!3860 = !DILocation(line: 1908, column: 57, scope: !3855)
!3861 = !DILocation(line: 1908, column: 62, scope: !3855)
!3862 = !DILocation(line: 1908, column: 55, scope: !3855)
!3863 = !DILocation(line: 1908, column: 33, scope: !3855)
!3864 = !DILocation(line: 1908, column: 31, scope: !3855)
!3865 = !DILocation(line: 1908, column: 11, scope: !3856)
!3866 = !DILocation(line: 1909, column: 14, scope: !3855)
!3867 = !DILocation(line: 1909, column: 19, scope: !3855)
!3868 = !DILocation(line: 1909, column: 37, scope: !3855)
!3869 = !DILocation(line: 1909, column: 42, scope: !3855)
!3870 = !DILocation(line: 1909, column: 35, scope: !3855)
!3871 = !DILocation(line: 1909, column: 12, scope: !3855)
!3872 = !DILocation(line: 1909, column: 9, scope: !3855)
!3873 = !DILocation(line: 1911, column: 22, scope: !3855)
!3874 = !DILocation(line: 1911, column: 27, scope: !3855)
!3875 = !DILocation(line: 1911, column: 12, scope: !3855)
!3876 = !DILocation(line: 1912, column: 35, scope: !3856)
!3877 = !DILocation(line: 1912, column: 38, scope: !3856)
!3878 = !DILocation(line: 1912, column: 44, scope: !3856)
!3879 = !DILocation(line: 1912, column: 49, scope: !3856)
!3880 = !DILocation(line: 1912, column: 62, scope: !3856)
!3881 = !DILocation(line: 1912, column: 57, scope: !3856)
!3882 = !DILocation(line: 1912, column: 13, scope: !3856)
!3883 = !DILocation(line: 1912, column: 11, scope: !3856)
!3884 = !DILocation(line: 1913, column: 11, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3856, file: !1, line: 1913, column: 11)
!3886 = !DILocation(line: 1913, column: 15, scope: !3885)
!3887 = !DILocation(line: 1913, column: 11, scope: !3856)
!3888 = !DILocation(line: 1914, column: 17, scope: !3885)
!3889 = !DILocation(line: 1914, column: 9, scope: !3885)
!3890 = !DILocation(line: 1915, column: 22, scope: !3856)
!3891 = !DILocation(line: 1915, column: 7, scope: !3856)
!3892 = !DILocation(line: 1915, column: 12, scope: !3856)
!3893 = !DILocation(line: 1915, column: 19, scope: !3856)
!3894 = !DILocation(line: 1916, column: 30, scope: !3856)
!3895 = !DILocation(line: 1916, column: 7, scope: !3856)
!3896 = !DILocation(line: 1916, column: 12, scope: !3856)
!3897 = !DILocation(line: 1916, column: 27, scope: !3856)
!3898 = !DILocation(line: 1917, column: 12, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3856, file: !1, line: 1917, column: 11)
!3900 = !DILocation(line: 1917, column: 11, scope: !3899)
!3901 = !DILocation(line: 1917, column: 17, scope: !3899)
!3902 = !DILocation(line: 1917, column: 11, scope: !3856)
!3903 = !DILocation(line: 1918, column: 9, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3899, file: !1, line: 1917, column: 26)
!3905 = !DILocation(line: 1918, column: 14, scope: !3904)
!3906 = !DILocation(line: 1918, column: 25, scope: !3904)
!3907 = !DILocation(line: 1919, column: 17, scope: !3904)
!3908 = !DILocation(line: 1919, column: 22, scope: !3904)
!3909 = !DILocation(line: 1919, column: 10, scope: !3904)
!3910 = !DILocation(line: 1919, column: 15, scope: !3904)
!3911 = !DILocation(line: 1920, column: 19, scope: !3904)
!3912 = !DILocation(line: 1920, column: 24, scope: !3904)
!3913 = !DILocation(line: 1920, column: 10, scope: !3904)
!3914 = !DILocation(line: 1920, column: 17, scope: !3904)
!3915 = !DILocation(line: 1921, column: 34, scope: !3904)
!3916 = !DILocation(line: 1921, column: 33, scope: !3904)
!3917 = !DILocation(line: 1921, column: 9, scope: !3904)
!3918 = !DILocation(line: 1921, column: 14, scope: !3904)
!3919 = !DILocation(line: 1921, column: 30, scope: !3904)
!3920 = !DILocation(line: 1923, column: 37, scope: !3904)
!3921 = !DILocation(line: 1923, column: 42, scope: !3904)
!3922 = !DILocation(line: 1923, column: 59, scope: !3904)
!3923 = !DILocation(line: 1923, column: 58, scope: !3904)
!3924 = !DILocation(line: 1924, column: 22, scope: !3904)
!3925 = !DILocation(line: 1924, column: 21, scope: !3904)
!3926 = !DILocation(line: 1924, column: 11, scope: !3904)
!3927 = !DILocation(line: 1923, column: 31, scope: !3904)
!3928 = !DILocation(line: 1923, column: 9, scope: !3904)
!3929 = !DILocation(line: 1923, column: 14, scope: !3904)
!3930 = !DILocation(line: 1923, column: 29, scope: !3904)
!3931 = !DILocation(line: 1925, column: 17, scope: !3904)
!3932 = !DILocation(line: 1925, column: 9, scope: !3904)
!3933 = !DILocation(line: 1927, column: 7, scope: !3856)
!3934 = !DILocation(line: 1930, column: 10, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1930, column: 9)
!3936 = !DILocation(line: 1930, column: 15, scope: !3935)
!3937 = !DILocation(line: 1930, column: 18, scope: !3935)
!3938 = !DILocation(line: 1930, column: 26, scope: !3935)
!3939 = !DILocation(line: 1931, column: 33, scope: !3935)
!3940 = !DILocation(line: 1931, column: 38, scope: !3935)
!3941 = !DILocation(line: 1931, column: 43, scope: !3935)
!3942 = !DILocation(line: 1931, column: 14, scope: !3935)
!3943 = !DILocation(line: 1931, column: 12, scope: !3935)
!3944 = !DILocation(line: 1931, column: 49, scope: !3935)
!3945 = !DILocation(line: 1930, column: 9, scope: !3777)
!3946 = !DILocation(line: 1932, column: 15, scope: !3935)
!3947 = !DILocation(line: 1932, column: 7, scope: !3935)
!3948 = !DILocation(line: 1933, column: 9, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1933, column: 9)
!3950 = !DILocation(line: 1933, column: 14, scope: !3949)
!3951 = !DILocation(line: 1933, column: 30, scope: !3949)
!3952 = !DILocation(line: 1933, column: 53, scope: !3953)
!3953 = !DILexicalBlockFile(scope: !3949, file: !1, discriminator: 1)
!3954 = !DILocation(line: 1933, column: 41, scope: !3953)
!3955 = !DILocation(line: 1933, column: 39, scope: !3953)
!3956 = !DILocation(line: 1933, column: 57, scope: !3953)
!3957 = !DILocation(line: 1933, column: 9, scope: !3953)
!3958 = !DILocation(line: 1934, column: 15, scope: !3949)
!3959 = !DILocation(line: 1934, column: 7, scope: !3949)
!3960 = !DILocation(line: 1936, column: 9, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1936, column: 9)
!3962 = !DILocation(line: 1936, column: 14, scope: !3961)
!3963 = !DILocation(line: 1936, column: 9, scope: !3759)
!3964 = !DILocation(line: 1938, column: 44, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !1, line: 1938, column: 11)
!3966 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 1937, column: 5)
!3967 = !DILocation(line: 1939, column: 10, scope: !3965)
!3968 = !DILocation(line: 1939, column: 15, scope: !3965)
!3969 = !DILocation(line: 1939, column: 31, scope: !3965)
!3970 = !DILocation(line: 1939, column: 36, scope: !3965)
!3971 = !DILocation(line: 1939, column: 46, scope: !3965)
!3972 = !DILocation(line: 1938, column: 18, scope: !3965)
!3973 = !DILocation(line: 1938, column: 16, scope: !3965)
!3974 = !DILocation(line: 1939, column: 50, scope: !3965)
!3975 = !DILocation(line: 1938, column: 11, scope: !3966)
!3976 = !DILocation(line: 1941, column: 28, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3965, file: !1, line: 1940, column: 7)
!3978 = !DILocation(line: 1941, column: 31, scope: !3977)
!3979 = !DILocation(line: 1941, column: 9, scope: !3977)
!3980 = !DILocation(line: 1943, column: 9, scope: !3977)
!3981 = !DILocation(line: 1945, column: 10, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3966, file: !1, line: 1945, column: 10)
!3983 = !DILocation(line: 1945, column: 17, scope: !3982)
!3984 = !DILocation(line: 1945, column: 22, scope: !3982)
!3985 = !DILocation(line: 1945, column: 14, scope: !3982)
!3986 = !DILocation(line: 1945, column: 10, scope: !3966)
!3987 = !DILocation(line: 1947, column: 27, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3982, file: !1, line: 1946, column: 7)
!3989 = !DILocation(line: 1947, column: 32, scope: !3988)
!3990 = !DILocation(line: 1947, column: 9, scope: !3988)
!3991 = !DILocation(line: 1948, column: 9, scope: !3988)
!3992 = !DILocation(line: 1948, column: 14, scope: !3988)
!3993 = !DILocation(line: 1948, column: 28, scope: !3988)
!3994 = !DILocation(line: 1949, column: 7, scope: !3988)
!3995 = !DILocation(line: 1952, column: 47, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !1, line: 1952, column: 13)
!3997 = distinct !DILexicalBlock(scope: !3982, file: !1, line: 1951, column: 7)
!3998 = !DILocation(line: 1953, column: 12, scope: !3996)
!3999 = !DILocation(line: 1953, column: 17, scope: !3996)
!4000 = !DILocation(line: 1953, column: 33, scope: !3996)
!4001 = !DILocation(line: 1953, column: 38, scope: !3996)
!4002 = !DILocation(line: 1953, column: 48, scope: !3996)
!4003 = !DILocation(line: 1952, column: 21, scope: !3996)
!4004 = !DILocation(line: 1952, column: 19, scope: !3996)
!4005 = !DILocation(line: 1953, column: 52, scope: !3996)
!4006 = !DILocation(line: 1952, column: 13, scope: !3997)
!4007 = !DILocation(line: 1955, column: 30, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3996, file: !1, line: 1954, column: 9)
!4009 = !DILocation(line: 1955, column: 33, scope: !4008)
!4010 = !DILocation(line: 1955, column: 11, scope: !4008)
!4011 = !DILocation(line: 1957, column: 11, scope: !4008)
!4012 = !DILocation(line: 1960, column: 16, scope: !3997)
!4013 = !DILocation(line: 1960, column: 9, scope: !3997)
!4014 = !DILocation(line: 1963, column: 13, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3997, file: !1, line: 1961, column: 9)
!4016 = !DILocation(line: 1963, column: 18, scope: !4015)
!4017 = !DILocation(line: 1963, column: 34, scope: !4015)
!4018 = !DILocation(line: 1964, column: 41, scope: !4015)
!4019 = !DILocation(line: 1964, column: 44, scope: !4015)
!4020 = !DILocation(line: 1964, column: 50, scope: !4015)
!4021 = !DILocation(line: 1964, column: 56, scope: !4015)
!4022 = !DILocation(line: 1964, column: 20, scope: !4015)
!4023 = !DILocation(line: 1964, column: 13, scope: !4015)
!4024 = !DILocation(line: 1967, column: 13, scope: !4015)
!4025 = !DILocation(line: 1967, column: 18, scope: !4015)
!4026 = !DILocation(line: 1967, column: 27, scope: !4015)
!4027 = !DILocation(line: 1968, column: 13, scope: !4015)
!4028 = !DILocation(line: 1971, column: 32, scope: !4015)
!4029 = !DILocation(line: 1971, column: 35, scope: !4015)
!4030 = !DILocation(line: 1971, column: 13, scope: !4015)
!4031 = !DILocation(line: 1973, column: 13, scope: !4015)
!4032 = !DILocation(line: 1976, column: 25, scope: !4015)
!4033 = !DILocation(line: 1977, column: 20, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 1977, column: 13)
!4035 = !DILocation(line: 1977, column: 18, scope: !4034)
!4036 = !DILocation(line: 1977, column: 25, scope: !4037)
!4037 = !DILexicalBlockFile(scope: !4038, file: !1, discriminator: 1)
!4038 = distinct !DILexicalBlock(scope: !4034, file: !1, line: 1977, column: 13)
!4039 = !DILocation(line: 1977, column: 27, scope: !4037)
!4040 = !DILocation(line: 1977, column: 13, scope: !4037)
!4041 = !DILocation(line: 1979, column: 53, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !1, line: 1979, column: 19)
!4043 = distinct !DILexicalBlock(scope: !4038, file: !1, line: 1978, column: 13)
!4044 = !DILocation(line: 1980, column: 18, scope: !4042)
!4045 = !DILocation(line: 1980, column: 23, scope: !4042)
!4046 = !DILocation(line: 1980, column: 39, scope: !4042)
!4047 = !DILocation(line: 1980, column: 44, scope: !4042)
!4048 = !DILocation(line: 1980, column: 54, scope: !4042)
!4049 = !DILocation(line: 1979, column: 27, scope: !4042)
!4050 = !DILocation(line: 1979, column: 25, scope: !4042)
!4051 = !DILocation(line: 1980, column: 58, scope: !4042)
!4052 = !DILocation(line: 1979, column: 19, scope: !4043)
!4053 = !DILocation(line: 1982, column: 36, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4042, file: !1, line: 1981, column: 15)
!4055 = !DILocation(line: 1982, column: 39, scope: !4054)
!4056 = !DILocation(line: 1982, column: 17, scope: !4054)
!4057 = !DILocation(line: 1984, column: 17, scope: !4054)
!4058 = !DILocation(line: 1986, column: 30, scope: !4043)
!4059 = !DILocation(line: 1986, column: 39, scope: !4043)
!4060 = !DILocation(line: 1986, column: 41, scope: !4043)
!4061 = !DILocation(line: 1986, column: 35, scope: !4043)
!4062 = !DILocation(line: 1986, column: 27, scope: !4043)
!4063 = !DILocation(line: 1987, column: 13, scope: !4043)
!4064 = !DILocation(line: 1977, column: 34, scope: !4065)
!4065 = !DILexicalBlockFile(scope: !4038, file: !1, discriminator: 2)
!4066 = !DILocation(line: 1977, column: 13, scope: !4065)
!4067 = !DILocation(line: 1988, column: 53, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 1988, column: 17)
!4069 = !DILocation(line: 1989, column: 16, scope: !4068)
!4070 = !DILocation(line: 1989, column: 21, scope: !4068)
!4071 = !DILocation(line: 1989, column: 37, scope: !4068)
!4072 = !DILocation(line: 1989, column: 42, scope: !4068)
!4073 = !DILocation(line: 1989, column: 52, scope: !4068)
!4074 = !DILocation(line: 1988, column: 27, scope: !4068)
!4075 = !DILocation(line: 1988, column: 25, scope: !4068)
!4076 = !DILocation(line: 1989, column: 56, scope: !4068)
!4077 = !DILocation(line: 1988, column: 17, scope: !4015)
!4078 = !DILocation(line: 1991, column: 34, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4068, file: !1, line: 1990, column: 13)
!4080 = !DILocation(line: 1991, column: 37, scope: !4079)
!4081 = !DILocation(line: 1991, column: 15, scope: !4079)
!4082 = !DILocation(line: 1993, column: 15, scope: !4079)
!4083 = !DILocation(line: 1995, column: 29, scope: !4015)
!4084 = !DILocation(line: 1995, column: 34, scope: !4015)
!4085 = !DILocation(line: 1995, column: 46, scope: !4015)
!4086 = !DILocation(line: 1995, column: 51, scope: !4015)
!4087 = !DILocation(line: 1995, column: 58, scope: !4015)
!4088 = !DILocation(line: 1995, column: 13, scope: !4015)
!4089 = !DILocation(line: 1996, column: 36, scope: !4015)
!4090 = !DILocation(line: 1996, column: 43, scope: !4015)
!4091 = !DILocation(line: 1996, column: 13, scope: !4015)
!4092 = !DILocation(line: 1996, column: 18, scope: !4015)
!4093 = !DILocation(line: 1996, column: 33, scope: !4015)
!4094 = !DILocation(line: 1997, column: 13, scope: !4015)
!4095 = !DILocation(line: 2000, column: 53, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 2000, column: 17)
!4097 = !DILocation(line: 2001, column: 16, scope: !4096)
!4098 = !DILocation(line: 2001, column: 21, scope: !4096)
!4099 = !DILocation(line: 2001, column: 37, scope: !4096)
!4100 = !DILocation(line: 2001, column: 42, scope: !4096)
!4101 = !DILocation(line: 2001, column: 52, scope: !4096)
!4102 = !DILocation(line: 2000, column: 27, scope: !4096)
!4103 = !DILocation(line: 2000, column: 25, scope: !4096)
!4104 = !DILocation(line: 2001, column: 56, scope: !4096)
!4105 = !DILocation(line: 2000, column: 17, scope: !4015)
!4106 = !DILocation(line: 2003, column: 34, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4096, file: !1, line: 2002, column: 13)
!4108 = !DILocation(line: 2003, column: 37, scope: !4107)
!4109 = !DILocation(line: 2003, column: 15, scope: !4107)
!4110 = !DILocation(line: 2005, column: 15, scope: !4107)
!4111 = !DILocation(line: 2007, column: 29, scope: !4015)
!4112 = !DILocation(line: 2007, column: 37, scope: !4015)
!4113 = !DILocation(line: 2007, column: 44, scope: !4015)
!4114 = !DILocation(line: 2007, column: 13, scope: !4015)
!4115 = !DILocation(line: 2008, column: 36, scope: !4015)
!4116 = !DILocation(line: 2008, column: 43, scope: !4015)
!4117 = !DILocation(line: 2008, column: 13, scope: !4015)
!4118 = !DILocation(line: 2008, column: 18, scope: !4015)
!4119 = !DILocation(line: 2008, column: 33, scope: !4015)
!4120 = !DILocation(line: 2009, column: 13, scope: !4015)
!4121 = !DILocation(line: 2012, column: 30, scope: !4015)
!4122 = !DILocation(line: 2012, column: 35, scope: !4015)
!4123 = !DILocation(line: 2012, column: 12, scope: !4015)
!4124 = !DILocation(line: 2013, column: 12, scope: !4015)
!4125 = !DILocation(line: 2013, column: 17, scope: !4015)
!4126 = !DILocation(line: 2013, column: 31, scope: !4015)
!4127 = !DILocation(line: 2014, column: 9, scope: !4015)
!4128 = !DILocation(line: 2016, column: 5, scope: !3966)
!4129 = !DILocation(line: 2019, column: 15, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 2018, column: 5)
!4131 = !DILocation(line: 2019, column: 20, scope: !4130)
!4132 = !DILocation(line: 2019, column: 13, scope: !4130)
!4133 = !DILocation(line: 2020, column: 13, scope: !4130)
!4134 = !DILocation(line: 2020, column: 21, scope: !4130)
!4135 = !DILocation(line: 2020, column: 26, scope: !4130)
!4136 = !DILocation(line: 2020, column: 19, scope: !4130)
!4137 = !DILocation(line: 2020, column: 11, scope: !4130)
!4138 = !DILocation(line: 2021, column: 7, scope: !4130)
!4139 = !DILocation(line: 2021, column: 12, scope: !4130)
!4140 = !DILocation(line: 2021, column: 24, scope: !4130)
!4141 = !DILocation(line: 2023, column: 31, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4130, file: !1, line: 2023, column: 11)
!4143 = !DILocation(line: 2023, column: 34, scope: !4142)
!4144 = !DILocation(line: 2023, column: 24, scope: !4142)
!4145 = !DILocation(line: 2023, column: 22, scope: !4142)
!4146 = !DILocation(line: 2023, column: 40, scope: !4142)
!4147 = !DILocation(line: 2023, column: 11, scope: !4130)
!4148 = !DILocation(line: 2024, column: 22, scope: !4142)
!4149 = !DILocation(line: 2024, column: 17, scope: !4142)
!4150 = !DILocation(line: 2024, column: 9, scope: !4142)
!4151 = !DILocation(line: 2026, column: 29, scope: !4130)
!4152 = !DILocation(line: 2026, column: 41, scope: !4130)
!4153 = !DILocation(line: 2026, column: 39, scope: !4130)
!4154 = !DILocation(line: 2026, column: 7, scope: !4130)
!4155 = !DILocation(line: 2026, column: 12, scope: !4130)
!4156 = !DILocation(line: 2026, column: 27, scope: !4130)
!4157 = !DILocation(line: 2027, column: 11, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4130, file: !1, line: 2027, column: 11)
!4159 = !DILocation(line: 2027, column: 16, scope: !4158)
!4160 = !DILocation(line: 2027, column: 31, scope: !4158)
!4161 = !DILocation(line: 2027, column: 11, scope: !4130)
!4162 = !DILocation(line: 2032, column: 30, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4158, file: !1, line: 2027, column: 37)
!4164 = !DILocation(line: 2032, column: 33, scope: !4163)
!4165 = !DILocation(line: 2032, column: 11, scope: !4163)
!4166 = !DILocation(line: 2034, column: 11, scope: !4163)
!4167 = !DILocation(line: 2037, column: 9, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 2037, column: 9)
!4169 = !DILocation(line: 2037, column: 14, scope: !4168)
!4170 = !DILocation(line: 2037, column: 32, scope: !4168)
!4171 = !DILocation(line: 2037, column: 37, scope: !4168)
!4172 = !DILocation(line: 2037, column: 55, scope: !4168)
!4173 = !DILocation(line: 2037, column: 60, scope: !4168)
!4174 = !DILocation(line: 2037, column: 53, scope: !4168)
!4175 = !DILocation(line: 2037, column: 31, scope: !4168)
!4176 = !DILocation(line: 2037, column: 29, scope: !4168)
!4177 = !DILocation(line: 2037, column: 9, scope: !3759)
!4178 = !DILocation(line: 2038, column: 12, scope: !4168)
!4179 = !DILocation(line: 2038, column: 17, scope: !4168)
!4180 = !DILocation(line: 2038, column: 35, scope: !4168)
!4181 = !DILocation(line: 2038, column: 40, scope: !4168)
!4182 = !DILocation(line: 2038, column: 33, scope: !4168)
!4183 = !DILocation(line: 2038, column: 10, scope: !4168)
!4184 = !DILocation(line: 2038, column: 7, scope: !4168)
!4185 = !DILocation(line: 2040, column: 20, scope: !4168)
!4186 = !DILocation(line: 2040, column: 25, scope: !4168)
!4187 = !DILocation(line: 2040, column: 10, scope: !4168)
!4188 = !DILocation(line: 2041, column: 33, scope: !3759)
!4189 = !DILocation(line: 2041, column: 36, scope: !3759)
!4190 = !DILocation(line: 2041, column: 42, scope: !3759)
!4191 = !DILocation(line: 2041, column: 47, scope: !3759)
!4192 = !DILocation(line: 2041, column: 60, scope: !3759)
!4193 = !DILocation(line: 2041, column: 55, scope: !3759)
!4194 = !DILocation(line: 2041, column: 11, scope: !3759)
!4195 = !DILocation(line: 2041, column: 9, scope: !3759)
!4196 = !DILocation(line: 2042, column: 9, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 2042, column: 9)
!4198 = !DILocation(line: 2042, column: 13, scope: !4197)
!4199 = !DILocation(line: 2042, column: 9, scope: !3759)
!4200 = !DILocation(line: 2043, column: 15, scope: !4197)
!4201 = !DILocation(line: 2043, column: 7, scope: !4197)
!4202 = !DILocation(line: 2044, column: 20, scope: !3759)
!4203 = !DILocation(line: 2044, column: 5, scope: !3759)
!4204 = !DILocation(line: 2044, column: 10, scope: !3759)
!4205 = !DILocation(line: 2044, column: 17, scope: !3759)
!4206 = !DILocation(line: 2045, column: 28, scope: !3759)
!4207 = !DILocation(line: 2045, column: 5, scope: !3759)
!4208 = !DILocation(line: 2045, column: 10, scope: !3759)
!4209 = !DILocation(line: 2045, column: 25, scope: !3759)
!4210 = !DILocation(line: 2050, column: 3, scope: !3759)
!4211 = !DILocation(line: 2050, column: 13, scope: !4212)
!4212 = !DILexicalBlockFile(scope: !578, file: !1, discriminator: 1)
!4213 = !DILocation(line: 2050, column: 12, scope: !4212)
!4214 = !DILocation(line: 2050, column: 18, scope: !4212)
!4215 = !DILocation(line: 2050, column: 3, scope: !4212)
!4216 = !DILocation(line: 2052, column: 3, scope: !578)
!4217 = !DILocation(line: 2052, column: 8, scope: !578)
!4218 = !DILocation(line: 2052, column: 19, scope: !578)
!4219 = !DILocation(line: 2053, column: 11, scope: !578)
!4220 = !DILocation(line: 2053, column: 16, scope: !578)
!4221 = !DILocation(line: 2053, column: 4, scope: !578)
!4222 = !DILocation(line: 2053, column: 9, scope: !578)
!4223 = !DILocation(line: 2054, column: 13, scope: !578)
!4224 = !DILocation(line: 2054, column: 18, scope: !578)
!4225 = !DILocation(line: 2054, column: 4, scope: !578)
!4226 = !DILocation(line: 2054, column: 11, scope: !578)
!4227 = !DILocation(line: 2055, column: 28, scope: !578)
!4228 = !DILocation(line: 2055, column: 27, scope: !578)
!4229 = !DILocation(line: 2055, column: 3, scope: !578)
!4230 = !DILocation(line: 2055, column: 8, scope: !578)
!4231 = !DILocation(line: 2055, column: 24, scope: !578)
!4232 = !DILocation(line: 2057, column: 31, scope: !578)
!4233 = !DILocation(line: 2057, column: 36, scope: !578)
!4234 = !DILocation(line: 2057, column: 53, scope: !578)
!4235 = !DILocation(line: 2057, column: 52, scope: !578)
!4236 = !DILocation(line: 2057, column: 70, scope: !578)
!4237 = !DILocation(line: 2057, column: 69, scope: !578)
!4238 = !DILocation(line: 2057, column: 59, scope: !578)
!4239 = !DILocation(line: 2057, column: 25, scope: !578)
!4240 = !DILocation(line: 2057, column: 3, scope: !578)
!4241 = !DILocation(line: 2057, column: 8, scope: !578)
!4242 = !DILocation(line: 2057, column: 23, scope: !578)
!4243 = !DILocation(line: 2058, column: 10, scope: !578)
!4244 = !DILocation(line: 2058, column: 3, scope: !578)
!4245 = !DILocation(line: 2059, column: 1, scope: !578)
!4246 = !DILocalVariable(name: "a", arg: 1, scope: !579, file: !1, line: 2875, type: !4)
!4247 = !DILocation(line: 2875, column: 44, scope: !579)
!4248 = !DILocalVariable(name: "buffer", arg: 2, scope: !579, file: !1, line: 2875, type: !64)
!4249 = !DILocation(line: 2875, column: 60, scope: !579)
!4250 = !DILocalVariable(name: "startpos", arg: 3, scope: !579, file: !1, line: 2876, type: !52)
!4251 = !DILocation(line: 2876, column: 33, scope: !579)
!4252 = !DILocalVariable(name: "length", arg: 4, scope: !579, file: !1, line: 2876, type: !23)
!4253 = !DILocation(line: 2876, column: 47, scope: !579)
!4254 = !DILocalVariable(name: "windowoffs", scope: !579, file: !1, line: 2878, type: !23)
!4255 = !DILocation(line: 2878, column: 7, scope: !579)
!4256 = !DILocalVariable(name: "firstpart", scope: !579, file: !1, line: 2878, type: !23)
!4257 = !DILocation(line: 2878, column: 19, scope: !579)
!4258 = !DILocalVariable(name: "rar", scope: !579, file: !1, line: 2879, type: !292)
!4259 = !DILocation(line: 2879, column: 15, scope: !579)
!4260 = !DILocation(line: 2879, column: 36, scope: !579)
!4261 = !DILocation(line: 2879, column: 39, scope: !579)
!4262 = !DILocation(line: 2879, column: 47, scope: !579)
!4263 = !DILocation(line: 2879, column: 21, scope: !579)
!4264 = !DILocation(line: 2881, column: 8, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !579, file: !1, line: 2881, column: 7)
!4266 = !DILocation(line: 2881, column: 13, scope: !4265)
!4267 = !DILocation(line: 2881, column: 7, scope: !579)
!4268 = !DILocation(line: 2883, column: 35, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 2883, column: 9)
!4270 = distinct !DILexicalBlock(scope: !4265, file: !1, line: 2882, column: 3)
!4271 = !DILocation(line: 2883, column: 40, scope: !4269)
!4272 = !DILocation(line: 2883, column: 28, scope: !4269)
!4273 = !DILocation(line: 2883, column: 10, scope: !4269)
!4274 = !DILocation(line: 2883, column: 15, scope: !4269)
!4275 = !DILocation(line: 2883, column: 26, scope: !4269)
!4276 = !DILocation(line: 2883, column: 58, scope: !4269)
!4277 = !DILocation(line: 2883, column: 9, scope: !4270)
!4278 = !DILocation(line: 2885, column: 26, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4269, file: !1, line: 2884, column: 5)
!4280 = !DILocation(line: 2885, column: 29, scope: !4279)
!4281 = !DILocation(line: 2885, column: 7, scope: !4279)
!4282 = !DILocation(line: 2887, column: 7, scope: !4279)
!4283 = !DILocation(line: 2889, column: 3, scope: !4270)
!4284 = !DILocation(line: 2891, column: 42, scope: !579)
!4285 = !DILocation(line: 2891, column: 47, scope: !579)
!4286 = !DILocation(line: 2891, column: 53, scope: !579)
!4287 = !DILocation(line: 2891, column: 16, scope: !579)
!4288 = !DILocation(line: 2891, column: 14, scope: !579)
!4289 = !DILocation(line: 2892, column: 6, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !579, file: !1, line: 2892, column: 6)
!4291 = !DILocation(line: 2892, column: 19, scope: !4290)
!4292 = !DILocation(line: 2892, column: 17, scope: !4290)
!4293 = !DILocation(line: 2892, column: 40, scope: !4290)
!4294 = !DILocation(line: 2892, column: 45, scope: !4290)
!4295 = !DILocation(line: 2892, column: 29, scope: !4290)
!4296 = !DILocation(line: 2892, column: 26, scope: !4290)
!4297 = !DILocation(line: 2892, column: 6, scope: !579)
!4298 = !DILocation(line: 2893, column: 29, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4290, file: !1, line: 2892, column: 52)
!4300 = !DILocation(line: 2893, column: 34, scope: !4299)
!4301 = !DILocation(line: 2893, column: 13, scope: !4299)
!4302 = !DILocation(line: 2893, column: 18, scope: !4299)
!4303 = !DILocation(line: 2893, column: 65, scope: !4299)
!4304 = !DILocation(line: 2893, column: 48, scope: !4299)
!4305 = !DILocation(line: 2893, column: 53, scope: !4299)
!4306 = !DILocation(line: 2893, column: 58, scope: !4299)
!4307 = !DILocation(line: 2894, column: 12, scope: !4299)
!4308 = !DILocation(line: 2893, column: 5, scope: !4299)
!4309 = !DILocation(line: 2895, column: 3, scope: !4299)
!4310 = !DILocation(line: 2895, column: 14, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4312, file: !1, discriminator: 1)
!4312 = distinct !DILexicalBlock(scope: !4290, file: !1, line: 2895, column: 14)
!4313 = !DILocation(line: 2895, column: 35, scope: !4311)
!4314 = !DILocation(line: 2895, column: 40, scope: !4311)
!4315 = !DILocation(line: 2895, column: 24, scope: !4311)
!4316 = !DILocation(line: 2895, column: 21, scope: !4311)
!4317 = !DILocation(line: 2896, column: 28, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4312, file: !1, line: 2895, column: 47)
!4319 = !DILocation(line: 2896, column: 33, scope: !4318)
!4320 = !DILocation(line: 2896, column: 17, scope: !4318)
!4321 = !DILocation(line: 2896, column: 41, scope: !4318)
!4322 = !DILocation(line: 2896, column: 39, scope: !4318)
!4323 = !DILocation(line: 2896, column: 15, scope: !4318)
!4324 = !DILocation(line: 2897, column: 9, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4318, file: !1, line: 2897, column: 9)
!4326 = !DILocation(line: 2897, column: 19, scope: !4325)
!4327 = !DILocation(line: 2897, column: 9, scope: !4318)
!4328 = !DILocation(line: 2898, column: 26, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4325, file: !1, line: 2897, column: 24)
!4330 = !DILocation(line: 2898, column: 29, scope: !4329)
!4331 = !DILocation(line: 2898, column: 7, scope: !4329)
!4332 = !DILocation(line: 2900, column: 7, scope: !4329)
!4333 = !DILocation(line: 2902, column: 9, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4318, file: !1, line: 2902, column: 9)
!4335 = !DILocation(line: 2902, column: 21, scope: !4334)
!4336 = !DILocation(line: 2902, column: 19, scope: !4334)
!4337 = !DILocation(line: 2902, column: 9, scope: !4318)
!4338 = !DILocation(line: 2903, column: 31, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4334, file: !1, line: 2902, column: 29)
!4340 = !DILocation(line: 2903, column: 36, scope: !4339)
!4341 = !DILocation(line: 2903, column: 15, scope: !4339)
!4342 = !DILocation(line: 2903, column: 20, scope: !4339)
!4343 = !DILocation(line: 2904, column: 32, scope: !4339)
!4344 = !DILocation(line: 2904, column: 15, scope: !4339)
!4345 = !DILocation(line: 2904, column: 20, scope: !4339)
!4346 = !DILocation(line: 2904, column: 25, scope: !4339)
!4347 = !DILocation(line: 2904, column: 45, scope: !4339)
!4348 = !DILocation(line: 2903, column: 7, scope: !4339)
!4349 = !DILocation(line: 2905, column: 31, scope: !4339)
!4350 = !DILocation(line: 2905, column: 36, scope: !4339)
!4351 = !DILocation(line: 2905, column: 49, scope: !4339)
!4352 = !DILocation(line: 2905, column: 47, scope: !4339)
!4353 = !DILocation(line: 2905, column: 15, scope: !4339)
!4354 = !DILocation(line: 2905, column: 20, scope: !4339)
!4355 = !DILocation(line: 2906, column: 15, scope: !4339)
!4356 = !DILocation(line: 2906, column: 20, scope: !4339)
!4357 = !DILocation(line: 2906, column: 25, scope: !4339)
!4358 = !DILocation(line: 2906, column: 36, scope: !4339)
!4359 = !DILocation(line: 2906, column: 45, scope: !4339)
!4360 = !DILocation(line: 2906, column: 43, scope: !4339)
!4361 = !DILocation(line: 2905, column: 7, scope: !4339)
!4362 = !DILocation(line: 2907, column: 5, scope: !4339)
!4363 = !DILocation(line: 2908, column: 31, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4334, file: !1, line: 2907, column: 12)
!4365 = !DILocation(line: 2908, column: 36, scope: !4364)
!4366 = !DILocation(line: 2908, column: 15, scope: !4364)
!4367 = !DILocation(line: 2908, column: 20, scope: !4364)
!4368 = !DILocation(line: 2909, column: 32, scope: !4364)
!4369 = !DILocation(line: 2909, column: 15, scope: !4364)
!4370 = !DILocation(line: 2909, column: 20, scope: !4364)
!4371 = !DILocation(line: 2909, column: 25, scope: !4364)
!4372 = !DILocation(line: 2909, column: 45, scope: !4364)
!4373 = !DILocation(line: 2908, column: 7, scope: !4364)
!4374 = !DILocation(line: 2911, column: 3, scope: !4318)
!4375 = !DILocation(line: 2912, column: 26, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4312, file: !1, line: 2911, column: 10)
!4377 = !DILocation(line: 2912, column: 29, scope: !4376)
!4378 = !DILocation(line: 2912, column: 7, scope: !4376)
!4379 = !DILocation(line: 2914, column: 7, scope: !4376)
!4380 = !DILocation(line: 2916, column: 22, scope: !579)
!4381 = !DILocation(line: 2916, column: 3, scope: !579)
!4382 = !DILocation(line: 2916, column: 8, scope: !579)
!4383 = !DILocation(line: 2916, column: 19, scope: !579)
!4384 = !DILocation(line: 2917, column: 7, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !579, file: !1, line: 2917, column: 7)
!4386 = !DILocation(line: 2917, column: 12, scope: !4385)
!4387 = !DILocation(line: 2917, column: 26, scope: !4385)
!4388 = !DILocation(line: 2917, column: 31, scope: !4385)
!4389 = !DILocation(line: 2917, column: 23, scope: !4385)
!4390 = !DILocation(line: 2917, column: 7, scope: !579)
!4391 = !DILocation(line: 2918, column: 15, scope: !4385)
!4392 = !DILocation(line: 2918, column: 20, scope: !4385)
!4393 = !DILocation(line: 2918, column: 6, scope: !4385)
!4394 = !DILocation(line: 2918, column: 13, scope: !4385)
!4395 = !DILocation(line: 2918, column: 5, scope: !4385)
!4396 = !DILocation(line: 2920, column: 6, scope: !4385)
!4397 = !DILocation(line: 2920, column: 13, scope: !4385)
!4398 = !DILocation(line: 2921, column: 3, scope: !579)
!4399 = !DILocation(line: 2922, column: 1, scope: !579)
!4400 = !DILocalVariable(name: "a", arg: 1, scope: !589, file: !1, line: 494, type: !4)
!4401 = !DILocation(line: 494, column: 41, scope: !589)
!4402 = !DILocalVariable(name: "br", arg: 2, scope: !589, file: !1, line: 494, type: !592)
!4403 = !DILocation(line: 494, column: 59, scope: !589)
!4404 = !DILocalVariable(name: "rar", scope: !589, file: !1, line: 496, type: !292)
!4405 = !DILocation(line: 496, column: 15, scope: !589)
!4406 = !DILocation(line: 496, column: 36, scope: !589)
!4407 = !DILocation(line: 496, column: 39, scope: !589)
!4408 = !DILocation(line: 496, column: 47, scope: !589)
!4409 = !DILocation(line: 496, column: 21, scope: !589)
!4410 = !DILocation(line: 498, column: 7, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !589, file: !1, line: 498, column: 7)
!4412 = !DILocation(line: 498, column: 12, scope: !4411)
!4413 = !DILocation(line: 498, column: 28, scope: !4411)
!4414 = !DILocation(line: 498, column: 7, scope: !589)
!4415 = !DILocation(line: 499, column: 34, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 498, column: 33)
!4417 = !DILocation(line: 499, column: 42, scope: !4416)
!4418 = !DILocation(line: 499, column: 46, scope: !4416)
!4419 = !DILocation(line: 499, column: 19, scope: !4416)
!4420 = !DILocation(line: 499, column: 5, scope: !4416)
!4421 = !DILocation(line: 499, column: 9, scope: !4416)
!4422 = !DILocation(line: 499, column: 17, scope: !4416)
!4423 = !DILocation(line: 500, column: 9, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4416, file: !1, line: 500, column: 9)
!4425 = !DILocation(line: 500, column: 13, scope: !4424)
!4426 = !DILocation(line: 500, column: 21, scope: !4424)
!4427 = !DILocation(line: 500, column: 9, scope: !4416)
!4428 = !DILocation(line: 501, column: 26, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4424, file: !1, line: 500, column: 30)
!4430 = !DILocation(line: 501, column: 29, scope: !4429)
!4431 = !DILocation(line: 501, column: 7, scope: !4429)
!4432 = !DILocation(line: 504, column: 7, scope: !4429)
!4433 = !DILocation(line: 506, column: 9, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4416, file: !1, line: 506, column: 9)
!4435 = !DILocation(line: 506, column: 13, scope: !4434)
!4436 = !DILocation(line: 506, column: 25, scope: !4434)
!4437 = !DILocation(line: 506, column: 9, scope: !4416)
!4438 = !DILocation(line: 507, column: 27, scope: !4434)
!4439 = !DILocation(line: 507, column: 30, scope: !4434)
!4440 = !DILocation(line: 507, column: 13, scope: !4434)
!4441 = !DILocation(line: 507, column: 7, scope: !4434)
!4442 = !DILocation(line: 508, column: 3, scope: !4416)
!4443 = !DILocation(line: 509, column: 3, scope: !589)
!4444 = !DILocation(line: 510, column: 1, scope: !589)
!4445 = !DILocalVariable(name: "a", arg: 1, scope: !594, file: !1, line: 2062, type: !4)
!4446 = !DILocation(line: 2062, column: 34, scope: !594)
!4447 = !DILocalVariable(name: "i", scope: !594, file: !1, line: 2064, type: !23)
!4448 = !DILocation(line: 2064, column: 7, scope: !594)
!4449 = !DILocalVariable(name: "j", scope: !594, file: !1, line: 2064, type: !23)
!4450 = !DILocation(line: 2064, column: 10, scope: !594)
!4451 = !DILocalVariable(name: "val", scope: !594, file: !1, line: 2064, type: !23)
!4452 = !DILocation(line: 2064, column: 13, scope: !594)
!4453 = !DILocalVariable(name: "n", scope: !594, file: !1, line: 2064, type: !23)
!4454 = !DILocation(line: 2064, column: 18, scope: !594)
!4455 = !DILocalVariable(name: "r", scope: !594, file: !1, line: 2064, type: !23)
!4456 = !DILocation(line: 2064, column: 21, scope: !594)
!4457 = !DILocalVariable(name: "bitlengths", scope: !594, file: !1, line: 2065, type: !4458)
!4458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 160, align: 8, elements: !4459)
!4459 = !{!4460}
!4460 = !DISubrange(count: 20)
!4461 = !DILocation(line: 2065, column: 17, scope: !594)
!4462 = !DILocalVariable(name: "zerocount", scope: !594, file: !1, line: 2065, type: !343)
!4463 = !DILocation(line: 2065, column: 42, scope: !594)
!4464 = !DILocalVariable(name: "ppmd_flags", scope: !594, file: !1, line: 2065, type: !343)
!4465 = !DILocation(line: 2065, column: 53, scope: !594)
!4466 = !DILocalVariable(name: "maxorder", scope: !594, file: !1, line: 2066, type: !13)
!4467 = !DILocation(line: 2066, column: 16, scope: !594)
!4468 = !DILocalVariable(name: "precode", scope: !594, file: !1, line: 2067, type: !360)
!4469 = !DILocation(line: 2067, column: 23, scope: !594)
!4470 = !DILocalVariable(name: "rar", scope: !594, file: !1, line: 2068, type: !292)
!4471 = !DILocation(line: 2068, column: 15, scope: !594)
!4472 = !DILocation(line: 2068, column: 36, scope: !594)
!4473 = !DILocation(line: 2068, column: 39, scope: !594)
!4474 = !DILocation(line: 2068, column: 47, scope: !594)
!4475 = !DILocation(line: 2068, column: 21, scope: !594)
!4476 = !DILocalVariable(name: "br", scope: !594, file: !1, line: 2069, type: !592)
!4477 = !DILocation(line: 2069, column: 18, scope: !594)
!4478 = !DILocation(line: 2069, column: 25, scope: !594)
!4479 = !DILocation(line: 2069, column: 30, scope: !594)
!4480 = !DILocation(line: 2071, column: 14, scope: !594)
!4481 = !DILocation(line: 2071, column: 3, scope: !594)
!4482 = !DILocation(line: 2074, column: 3, scope: !594)
!4483 = !DILocation(line: 2077, column: 8, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !594, file: !1, line: 2077, column: 7)
!4485 = !DILocation(line: 2077, column: 8, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !4484, file: !1, discriminator: 1)
!4487 = !DILocation(line: 2077, column: 8, scope: !4488)
!4488 = !DILexicalBlockFile(scope: !4484, file: !1, discriminator: 2)
!4489 = !DILocation(line: 2077, column: 7, scope: !4488)
!4490 = !DILocation(line: 2078, column: 5, scope: !4484)
!4491 = !DILocation(line: 2079, column: 29, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !594, file: !1, line: 2079, column: 7)
!4493 = !DILocation(line: 2079, column: 8, scope: !4492)
!4494 = !DILocation(line: 2079, column: 13, scope: !4492)
!4495 = !DILocation(line: 2079, column: 27, scope: !4492)
!4496 = !DILocation(line: 2079, column: 7, scope: !4492)
!4497 = !DILocation(line: 2079, column: 49, scope: !4492)
!4498 = !DILocation(line: 2079, column: 7, scope: !594)
!4499 = !DILocation(line: 2081, column: 5, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4492, file: !1, line: 2080, column: 3)
!4501 = !DILocation(line: 2082, column: 10, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 2082, column: 9)
!4503 = !DILocation(line: 2082, column: 10, scope: !4504)
!4504 = !DILexicalBlockFile(scope: !4502, file: !1, discriminator: 1)
!4505 = !DILocation(line: 2082, column: 10, scope: !4506)
!4506 = !DILexicalBlockFile(scope: !4502, file: !1, discriminator: 2)
!4507 = !DILocation(line: 2082, column: 9, scope: !4506)
!4508 = !DILocation(line: 2083, column: 7, scope: !4502)
!4509 = !DILocation(line: 2084, column: 18, scope: !4500)
!4510 = !DILocation(line: 2084, column: 16, scope: !4500)
!4511 = !DILocation(line: 2085, column: 5, scope: !4500)
!4512 = !DILocation(line: 2088, column: 9, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 2088, column: 9)
!4514 = !DILocation(line: 2088, column: 20, scope: !4513)
!4515 = !DILocation(line: 2088, column: 9, scope: !4500)
!4516 = !DILocation(line: 2090, column: 12, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 2090, column: 11)
!4518 = distinct !DILexicalBlock(scope: !4513, file: !1, line: 2089, column: 5)
!4519 = !DILocation(line: 2090, column: 12, scope: !4520)
!4520 = !DILexicalBlockFile(scope: !4517, file: !1, discriminator: 1)
!4521 = !DILocation(line: 2090, column: 12, scope: !4522)
!4522 = !DILexicalBlockFile(scope: !4517, file: !1, discriminator: 2)
!4523 = !DILocation(line: 2090, column: 11, scope: !4522)
!4524 = !DILocation(line: 2091, column: 9, scope: !4517)
!4525 = !DILocation(line: 2092, column: 31, scope: !4518)
!4526 = !DILocation(line: 2092, column: 50, scope: !4518)
!4527 = !DILocation(line: 2092, column: 55, scope: !4518)
!4528 = !DILocation(line: 2092, column: 7, scope: !4518)
!4529 = !DILocation(line: 2092, column: 12, scope: !4518)
!4530 = !DILocation(line: 2092, column: 28, scope: !4518)
!4531 = !DILocation(line: 2093, column: 7, scope: !4518)
!4532 = !DILocation(line: 2094, column: 5, scope: !4518)
!4533 = !DILocation(line: 2096, column: 9, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 2096, column: 9)
!4535 = !DILocation(line: 2096, column: 20, scope: !4534)
!4536 = !DILocation(line: 2096, column: 9, scope: !4500)
!4537 = !DILocation(line: 2098, column: 12, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 2098, column: 11)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !1, line: 2097, column: 5)
!4540 = !DILocation(line: 2098, column: 12, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !4538, file: !1, discriminator: 1)
!4542 = !DILocation(line: 2098, column: 12, scope: !4543)
!4543 = !DILexicalBlockFile(scope: !4538, file: !1, discriminator: 2)
!4544 = !DILocation(line: 2098, column: 11, scope: !4543)
!4545 = !DILocation(line: 2099, column: 9, scope: !4538)
!4546 = !DILocation(line: 2100, column: 55, scope: !4539)
!4547 = !DILocation(line: 2100, column: 26, scope: !4539)
!4548 = !DILocation(line: 2100, column: 31, scope: !4539)
!4549 = !DILocation(line: 2100, column: 45, scope: !4539)
!4550 = !DILocation(line: 2100, column: 53, scope: !4539)
!4551 = !DILocation(line: 2100, column: 7, scope: !4539)
!4552 = !DILocation(line: 2100, column: 12, scope: !4539)
!4553 = !DILocation(line: 2100, column: 24, scope: !4539)
!4554 = !DILocation(line: 2101, column: 7, scope: !4539)
!4555 = !DILocation(line: 2102, column: 5, scope: !4539)
!4556 = !DILocation(line: 2104, column: 7, scope: !4534)
!4557 = !DILocation(line: 2104, column: 12, scope: !4534)
!4558 = !DILocation(line: 2104, column: 24, scope: !4534)
!4559 = !DILocation(line: 2106, column: 9, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 2106, column: 9)
!4561 = !DILocation(line: 2106, column: 20, scope: !4560)
!4562 = !DILocation(line: 2106, column: 9, scope: !4500)
!4563 = !DILocation(line: 2108, column: 19, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4560, file: !1, line: 2107, column: 5)
!4565 = !DILocation(line: 2108, column: 30, scope: !4564)
!4566 = !DILocation(line: 2108, column: 38, scope: !4564)
!4567 = !DILocation(line: 2108, column: 16, scope: !4564)
!4568 = !DILocation(line: 2109, column: 10, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 2109, column: 10)
!4570 = !DILocation(line: 2109, column: 19, scope: !4569)
!4571 = !DILocation(line: 2109, column: 10, scope: !4564)
!4572 = !DILocation(line: 2110, column: 26, scope: !4569)
!4573 = !DILocation(line: 2110, column: 35, scope: !4569)
!4574 = !DILocation(line: 2110, column: 41, scope: !4569)
!4575 = !DILocation(line: 2110, column: 23, scope: !4569)
!4576 = !DILocation(line: 2110, column: 18, scope: !4569)
!4577 = !DILocation(line: 2110, column: 9, scope: !4569)
!4578 = !DILocation(line: 2112, column: 11, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 2112, column: 11)
!4580 = !DILocation(line: 2112, column: 20, scope: !4579)
!4581 = !DILocation(line: 2112, column: 11, scope: !4564)
!4582 = !DILocation(line: 2114, column: 28, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4579, file: !1, line: 2113, column: 7)
!4584 = !DILocation(line: 2114, column: 31, scope: !4583)
!4585 = !DILocation(line: 2114, column: 9, scope: !4583)
!4586 = !DILocation(line: 2116, column: 9, scope: !4583)
!4587 = !DILocation(line: 2121, column: 33, scope: !4564)
!4588 = !DILocation(line: 2121, column: 45, scope: !4564)
!4589 = !DILocation(line: 2121, column: 50, scope: !4564)
!4590 = !DILocation(line: 2121, column: 7, scope: !4564)
!4591 = !DILocation(line: 2123, column: 23, scope: !4564)
!4592 = !DILocation(line: 2123, column: 7, scope: !4564)
!4593 = !DILocation(line: 2123, column: 12, scope: !4564)
!4594 = !DILocation(line: 2123, column: 19, scope: !4564)
!4595 = !DILocation(line: 2123, column: 21, scope: !4564)
!4596 = !DILocation(line: 2124, column: 7, scope: !4564)
!4597 = !DILocation(line: 2124, column: 12, scope: !4564)
!4598 = !DILocation(line: 2124, column: 19, scope: !4564)
!4599 = !DILocation(line: 2124, column: 24, scope: !4564)
!4600 = !DILocation(line: 2125, column: 33, scope: !4564)
!4601 = !DILocation(line: 2125, column: 64, scope: !4564)
!4602 = !DILocation(line: 2125, column: 69, scope: !4564)
!4603 = !DILocation(line: 2125, column: 7, scope: !4564)
!4604 = !DILocation(line: 2126, column: 32, scope: !4564)
!4605 = !DILocation(line: 2126, column: 37, scope: !4564)
!4606 = !DILocation(line: 2126, column: 7, scope: !4564)
!4607 = !DILocation(line: 2126, column: 12, scope: !4564)
!4608 = !DILocation(line: 2126, column: 22, scope: !4564)
!4609 = !DILocation(line: 2126, column: 29, scope: !4564)
!4610 = !DILocation(line: 2127, column: 33, scope: !4564)
!4611 = !DILocation(line: 2127, column: 50, scope: !4564)
!4612 = !DILocation(line: 2127, column: 55, scope: !4564)
!4613 = !DILocation(line: 2127, column: 7, scope: !4564)
!4614 = !DILocation(line: 2129, column: 11, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 2129, column: 11)
!4616 = !DILocation(line: 2129, column: 16, scope: !4615)
!4617 = !DILocation(line: 2129, column: 32, scope: !4615)
!4618 = !DILocation(line: 2129, column: 11, scope: !4564)
!4619 = !DILocation(line: 2130, column: 27, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 2129, column: 38)
!4621 = !DILocation(line: 2130, column: 30, scope: !4620)
!4622 = !DILocation(line: 2130, column: 8, scope: !4620)
!4623 = !DILocation(line: 2132, column: 8, scope: !4620)
!4624 = !DILocation(line: 2135, column: 38, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 2135, column: 11)
!4626 = !DILocation(line: 2135, column: 51, scope: !4625)
!4627 = !DILocation(line: 2135, column: 56, scope: !4625)
!4628 = !DILocation(line: 2136, column: 9, scope: !4625)
!4629 = !DILocation(line: 2136, column: 14, scope: !4625)
!4630 = !DILocation(line: 2135, column: 12, scope: !4625)
!4631 = !DILocation(line: 2135, column: 11, scope: !4564)
!4632 = !DILocation(line: 2138, column: 28, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4625, file: !1, line: 2137, column: 7)
!4634 = !DILocation(line: 2138, column: 31, scope: !4633)
!4635 = !DILocation(line: 2138, column: 9, scope: !4633)
!4636 = !DILocation(line: 2140, column: 9, scope: !4633)
!4637 = !DILocation(line: 2142, column: 38, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 2142, column: 11)
!4639 = !DILocation(line: 2142, column: 61, scope: !4638)
!4640 = !DILocation(line: 2142, column: 66, scope: !4638)
!4641 = !DILocation(line: 2142, column: 12, scope: !4638)
!4642 = !DILocation(line: 2142, column: 11, scope: !4564)
!4643 = !DILocation(line: 2144, column: 28, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4638, file: !1, line: 2143, column: 7)
!4645 = !DILocation(line: 2144, column: 31, scope: !4644)
!4646 = !DILocation(line: 2144, column: 9, scope: !4644)
!4647 = !DILocation(line: 2146, column: 9, scope: !4644)
!4648 = !DILocation(line: 2148, column: 33, scope: !4564)
!4649 = !DILocation(line: 2148, column: 45, scope: !4564)
!4650 = !DILocation(line: 2148, column: 50, scope: !4564)
!4651 = !DILocation(line: 2148, column: 65, scope: !4564)
!4652 = !DILocation(line: 2148, column: 7, scope: !4564)
!4653 = !DILocation(line: 2149, column: 7, scope: !4564)
!4654 = !DILocation(line: 2149, column: 12, scope: !4564)
!4655 = !DILocation(line: 2149, column: 23, scope: !4564)
!4656 = !DILocation(line: 2150, column: 5, scope: !4564)
!4657 = !DILocation(line: 2153, column: 12, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 2153, column: 11)
!4659 = distinct !DILexicalBlock(scope: !4560, file: !1, line: 2152, column: 5)
!4660 = !DILocation(line: 2153, column: 17, scope: !4658)
!4661 = !DILocation(line: 2153, column: 11, scope: !4659)
!4662 = !DILocation(line: 2154, column: 28, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4658, file: !1, line: 2153, column: 29)
!4664 = !DILocation(line: 2154, column: 31, scope: !4663)
!4665 = !DILocation(line: 2154, column: 9, scope: !4663)
!4666 = !DILocation(line: 2156, column: 9, scope: !4663)
!4667 = !DILocation(line: 2158, column: 38, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 2158, column: 11)
!4669 = !DILocation(line: 2158, column: 61, scope: !4668)
!4670 = !DILocation(line: 2158, column: 66, scope: !4668)
!4671 = !DILocation(line: 2158, column: 12, scope: !4668)
!4672 = !DILocation(line: 2158, column: 11, scope: !4659)
!4673 = !DILocation(line: 2160, column: 28, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 2159, column: 7)
!4675 = !DILocation(line: 2160, column: 31, scope: !4674)
!4676 = !DILocation(line: 2160, column: 9, scope: !4674)
!4677 = !DILocation(line: 2162, column: 9, scope: !4674)
!4678 = !DILocation(line: 2165, column: 3, scope: !4500)
!4679 = !DILocation(line: 2168, column: 5, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4492, file: !1, line: 2167, column: 3)
!4681 = !DILocation(line: 2171, column: 10, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2171, column: 9)
!4683 = !DILocation(line: 2171, column: 10, scope: !4684)
!4684 = !DILexicalBlockFile(scope: !4682, file: !1, discriminator: 1)
!4685 = !DILocation(line: 2171, column: 10, scope: !4686)
!4686 = !DILexicalBlockFile(scope: !4682, file: !1, discriminator: 2)
!4687 = !DILocation(line: 2171, column: 9, scope: !4686)
!4688 = !DILocation(line: 2172, column: 7, scope: !4682)
!4689 = !DILocation(line: 2173, column: 10, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2173, column: 9)
!4691 = !DILocation(line: 2173, column: 9, scope: !4680)
!4692 = !DILocation(line: 2174, column: 14, scope: !4690)
!4693 = !DILocation(line: 2174, column: 19, scope: !4690)
!4694 = !DILocation(line: 2174, column: 7, scope: !4690)
!4695 = !DILocation(line: 2175, column: 5, scope: !4680)
!4696 = !DILocation(line: 2177, column: 5, scope: !4680)
!4697 = !DILocation(line: 2178, column: 12, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2178, column: 5)
!4699 = !DILocation(line: 2178, column: 10, scope: !4698)
!4700 = !DILocation(line: 2178, column: 17, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4702, file: !1, discriminator: 1)
!4702 = distinct !DILexicalBlock(scope: !4698, file: !1, line: 2178, column: 5)
!4703 = !DILocation(line: 2178, column: 19, scope: !4701)
!4704 = !DILocation(line: 2178, column: 5, scope: !4701)
!4705 = !DILocation(line: 2180, column: 12, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !1, line: 2180, column: 11)
!4707 = distinct !DILexicalBlock(scope: !4702, file: !1, line: 2179, column: 5)
!4708 = !DILocation(line: 2180, column: 12, scope: !4709)
!4709 = !DILexicalBlockFile(scope: !4706, file: !1, discriminator: 1)
!4710 = !DILocation(line: 2180, column: 12, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !4706, file: !1, discriminator: 2)
!4712 = !DILocation(line: 2180, column: 11, scope: !4711)
!4713 = !DILocation(line: 2181, column: 9, scope: !4706)
!4714 = !DILocation(line: 2182, column: 25, scope: !4707)
!4715 = !DILocation(line: 2182, column: 19, scope: !4707)
!4716 = !DILocation(line: 2182, column: 7, scope: !4707)
!4717 = !DILocation(line: 2182, column: 23, scope: !4707)
!4718 = !DILocation(line: 2183, column: 7, scope: !4707)
!4719 = !DILocation(line: 2184, column: 22, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4707, file: !1, line: 2184, column: 11)
!4721 = !DILocation(line: 2184, column: 23, scope: !4720)
!4722 = !DILocation(line: 2184, column: 11, scope: !4720)
!4723 = !DILocation(line: 2184, column: 27, scope: !4720)
!4724 = !DILocation(line: 2184, column: 11, scope: !4707)
!4725 = !DILocation(line: 2186, column: 14, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !1, line: 2186, column: 13)
!4727 = distinct !DILexicalBlock(scope: !4720, file: !1, line: 2185, column: 7)
!4728 = !DILocation(line: 2186, column: 14, scope: !4729)
!4729 = !DILexicalBlockFile(scope: !4726, file: !1, discriminator: 1)
!4730 = !DILocation(line: 2186, column: 14, scope: !4731)
!4731 = !DILexicalBlockFile(scope: !4726, file: !1, discriminator: 2)
!4732 = !DILocation(line: 2186, column: 13, scope: !4731)
!4733 = !DILocation(line: 2187, column: 11, scope: !4726)
!4734 = !DILocation(line: 2188, column: 21, scope: !4727)
!4735 = !DILocation(line: 2188, column: 19, scope: !4727)
!4736 = !DILocation(line: 2189, column: 9, scope: !4727)
!4737 = !DILocation(line: 2190, column: 13, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4727, file: !1, line: 2190, column: 13)
!4739 = !DILocation(line: 2190, column: 13, scope: !4727)
!4740 = !DILocation(line: 2192, column: 12, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4738, file: !1, line: 2191, column: 9)
!4742 = !DILocation(line: 2193, column: 18, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4741, file: !1, line: 2193, column: 11)
!4744 = !DILocation(line: 2193, column: 16, scope: !4743)
!4745 = !DILocation(line: 2193, column: 23, scope: !4746)
!4746 = !DILexicalBlockFile(scope: !4747, file: !1, discriminator: 1)
!4747 = distinct !DILexicalBlock(scope: !4743, file: !1, line: 2193, column: 11)
!4748 = !DILocation(line: 2193, column: 27, scope: !4746)
!4749 = !DILocation(line: 2193, column: 37, scope: !4746)
!4750 = !DILocation(line: 2193, column: 25, scope: !4746)
!4751 = !DILocation(line: 2193, column: 41, scope: !4746)
!4752 = !DILocation(line: 2193, column: 44, scope: !4753)
!4753 = !DILexicalBlockFile(scope: !4747, file: !1, discriminator: 2)
!4754 = !DILocation(line: 2193, column: 46, scope: !4753)
!4755 = !DILocation(line: 2193, column: 11, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4743, file: !1, discriminator: 3)
!4757 = !DILocation(line: 2194, column: 25, scope: !4747)
!4758 = !DILocation(line: 2194, column: 13, scope: !4747)
!4759 = !DILocation(line: 2194, column: 29, scope: !4747)
!4760 = !DILocation(line: 2193, column: 62, scope: !4761)
!4761 = !DILexicalBlockFile(scope: !4747, file: !1, discriminator: 4)
!4762 = !DILocation(line: 2193, column: 11, scope: !4761)
!4763 = !DILocation(line: 2195, column: 9, scope: !4741)
!4764 = !DILocation(line: 2196, column: 7, scope: !4727)
!4765 = !DILocation(line: 2178, column: 5, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !4702, file: !1, discriminator: 2)
!4767 = !DILocation(line: 2199, column: 5, scope: !4680)
!4768 = !DILocation(line: 2200, column: 21, scope: !4680)
!4769 = !DILocation(line: 2200, column: 34, scope: !4680)
!4770 = !DILocation(line: 2200, column: 9, scope: !4680)
!4771 = !DILocation(line: 2200, column: 7, scope: !4680)
!4772 = !DILocation(line: 2201, column: 9, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2201, column: 9)
!4774 = !DILocation(line: 2201, column: 11, scope: !4773)
!4775 = !DILocation(line: 2201, column: 9, scope: !4680)
!4776 = !DILocation(line: 2202, column: 20, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2201, column: 26)
!4778 = !DILocation(line: 2202, column: 12, scope: !4777)
!4779 = !DILocation(line: 2202, column: 7, scope: !4777)
!4780 = !DILocation(line: 2203, column: 20, scope: !4777)
!4781 = !DILocation(line: 2203, column: 12, scope: !4777)
!4782 = !DILocation(line: 2203, column: 7, scope: !4777)
!4783 = !DILocation(line: 2204, column: 15, scope: !4777)
!4784 = !DILocation(line: 2204, column: 7, scope: !4777)
!4785 = !DILocation(line: 2207, column: 12, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2207, column: 5)
!4787 = !DILocation(line: 2207, column: 10, scope: !4786)
!4788 = !DILocation(line: 2207, column: 17, scope: !4789)
!4789 = !DILexicalBlockFile(scope: !4790, file: !1, discriminator: 1)
!4790 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 2207, column: 5)
!4791 = !DILocation(line: 2207, column: 19, scope: !4789)
!4792 = !DILocation(line: 2207, column: 5, scope: !4789)
!4793 = !DILocation(line: 2209, column: 35, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 2209, column: 11)
!4795 = distinct !DILexicalBlock(scope: !4790, file: !1, line: 2208, column: 5)
!4796 = !DILocation(line: 2209, column: 18, scope: !4794)
!4797 = !DILocation(line: 2209, column: 16, scope: !4794)
!4798 = !DILocation(line: 2209, column: 49, scope: !4794)
!4799 = !DILocation(line: 2209, column: 11, scope: !4795)
!4800 = !DILocation(line: 2210, column: 22, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4794, file: !1, line: 2209, column: 54)
!4802 = !DILocation(line: 2210, column: 14, scope: !4801)
!4803 = !DILocation(line: 2210, column: 9, scope: !4801)
!4804 = !DILocation(line: 2211, column: 22, scope: !4801)
!4805 = !DILocation(line: 2211, column: 14, scope: !4801)
!4806 = !DILocation(line: 2211, column: 9, scope: !4801)
!4807 = !DILocation(line: 2212, column: 9, scope: !4801)
!4808 = !DILocation(line: 2214, column: 11, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 2214, column: 11)
!4810 = !DILocation(line: 2214, column: 15, scope: !4809)
!4811 = !DILocation(line: 2214, column: 11, scope: !4795)
!4812 = !DILocation(line: 2216, column: 49, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 2215, column: 7)
!4814 = !DILocation(line: 2216, column: 32, scope: !4813)
!4815 = !DILocation(line: 2216, column: 37, scope: !4813)
!4816 = !DILocation(line: 2216, column: 54, scope: !4813)
!4817 = !DILocation(line: 2216, column: 52, scope: !4813)
!4818 = !DILocation(line: 2216, column: 59, scope: !4813)
!4819 = !DILocation(line: 2216, column: 31, scope: !4813)
!4820 = !DILocation(line: 2216, column: 26, scope: !4813)
!4821 = !DILocation(line: 2216, column: 9, scope: !4813)
!4822 = !DILocation(line: 2216, column: 14, scope: !4813)
!4823 = !DILocation(line: 2216, column: 29, scope: !4813)
!4824 = !DILocation(line: 2217, column: 10, scope: !4813)
!4825 = !DILocation(line: 2218, column: 7, scope: !4813)
!4826 = !DILocation(line: 2219, column: 16, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 2219, column: 16)
!4828 = !DILocation(line: 2219, column: 20, scope: !4827)
!4829 = !DILocation(line: 2219, column: 16, scope: !4809)
!4830 = !DILocation(line: 2221, column: 13, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !1, line: 2221, column: 13)
!4832 = distinct !DILexicalBlock(scope: !4827, file: !1, line: 2220, column: 7)
!4833 = !DILocation(line: 2221, column: 15, scope: !4831)
!4834 = !DILocation(line: 2221, column: 13, scope: !4832)
!4835 = !DILocation(line: 2223, column: 24, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4831, file: !1, line: 2222, column: 9)
!4837 = !DILocation(line: 2223, column: 16, scope: !4836)
!4838 = !DILocation(line: 2223, column: 11, scope: !4836)
!4839 = !DILocation(line: 2224, column: 24, scope: !4836)
!4840 = !DILocation(line: 2224, column: 16, scope: !4836)
!4841 = !DILocation(line: 2224, column: 11, scope: !4836)
!4842 = !DILocation(line: 2225, column: 30, scope: !4836)
!4843 = !DILocation(line: 2225, column: 33, scope: !4836)
!4844 = !DILocation(line: 2225, column: 11, scope: !4836)
!4845 = !DILocation(line: 2227, column: 11, scope: !4836)
!4846 = !DILocation(line: 2230, column: 12, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4832, file: !1, line: 2230, column: 12)
!4848 = !DILocation(line: 2230, column: 16, scope: !4847)
!4849 = !DILocation(line: 2230, column: 12, scope: !4832)
!4850 = !DILocation(line: 2231, column: 16, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 2231, column: 15)
!4852 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 2230, column: 23)
!4853 = !DILocation(line: 2231, column: 16, scope: !4854)
!4854 = !DILexicalBlockFile(scope: !4851, file: !1, discriminator: 1)
!4855 = !DILocation(line: 2231, column: 16, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !4851, file: !1, discriminator: 2)
!4857 = !DILocation(line: 2231, column: 15, scope: !4856)
!4858 = !DILocation(line: 2232, column: 26, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4851, file: !1, line: 2231, column: 45)
!4860 = !DILocation(line: 2232, column: 18, scope: !4859)
!4861 = !DILocation(line: 2232, column: 13, scope: !4859)
!4862 = !DILocation(line: 2233, column: 26, scope: !4859)
!4863 = !DILocation(line: 2233, column: 18, scope: !4859)
!4864 = !DILocation(line: 2233, column: 13, scope: !4859)
!4865 = !DILocation(line: 2234, column: 13, scope: !4859)
!4866 = !DILocation(line: 2236, column: 15, scope: !4852)
!4867 = !DILocation(line: 2236, column: 34, scope: !4852)
!4868 = !DILocation(line: 2236, column: 13, scope: !4852)
!4869 = !DILocation(line: 2237, column: 11, scope: !4852)
!4870 = !DILocation(line: 2238, column: 9, scope: !4852)
!4871 = !DILocation(line: 2239, column: 16, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !1, line: 2239, column: 15)
!4873 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 2238, column: 16)
!4874 = !DILocation(line: 2239, column: 16, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !4872, file: !1, discriminator: 1)
!4876 = !DILocation(line: 2239, column: 16, scope: !4877)
!4877 = !DILexicalBlockFile(scope: !4872, file: !1, discriminator: 2)
!4878 = !DILocation(line: 2239, column: 15, scope: !4877)
!4879 = !DILocation(line: 2240, column: 26, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4872, file: !1, line: 2239, column: 45)
!4881 = !DILocation(line: 2240, column: 18, scope: !4880)
!4882 = !DILocation(line: 2240, column: 13, scope: !4880)
!4883 = !DILocation(line: 2241, column: 26, scope: !4880)
!4884 = !DILocation(line: 2241, column: 18, scope: !4880)
!4885 = !DILocation(line: 2241, column: 13, scope: !4880)
!4886 = !DILocation(line: 2242, column: 13, scope: !4880)
!4887 = !DILocation(line: 2244, column: 15, scope: !4873)
!4888 = !DILocation(line: 2244, column: 34, scope: !4873)
!4889 = !DILocation(line: 2244, column: 13, scope: !4873)
!4890 = !DILocation(line: 2245, column: 11, scope: !4873)
!4891 = !DILocation(line: 2248, column: 16, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4832, file: !1, line: 2248, column: 9)
!4893 = !DILocation(line: 2248, column: 14, scope: !4892)
!4894 = !DILocation(line: 2248, column: 21, scope: !4895)
!4895 = !DILexicalBlockFile(scope: !4896, file: !1, discriminator: 1)
!4896 = distinct !DILexicalBlock(scope: !4892, file: !1, line: 2248, column: 9)
!4897 = !DILocation(line: 2248, column: 25, scope: !4895)
!4898 = !DILocation(line: 2248, column: 23, scope: !4895)
!4899 = !DILocation(line: 2248, column: 27, scope: !4895)
!4900 = !DILocation(line: 2248, column: 30, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4896, file: !1, discriminator: 2)
!4902 = !DILocation(line: 2248, column: 32, scope: !4901)
!4903 = !DILocation(line: 2248, column: 9, scope: !4904)
!4904 = !DILexicalBlockFile(scope: !4892, file: !1, discriminator: 3)
!4905 = !DILocation(line: 2250, column: 50, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 2249, column: 9)
!4907 = !DILocation(line: 2250, column: 51, scope: !4906)
!4908 = !DILocation(line: 2250, column: 33, scope: !4906)
!4909 = !DILocation(line: 2250, column: 38, scope: !4906)
!4910 = !DILocation(line: 2250, column: 28, scope: !4906)
!4911 = !DILocation(line: 2250, column: 11, scope: !4906)
!4912 = !DILocation(line: 2250, column: 16, scope: !4906)
!4913 = !DILocation(line: 2250, column: 31, scope: !4906)
!4914 = !DILocation(line: 2251, column: 12, scope: !4906)
!4915 = !DILocation(line: 2252, column: 9, scope: !4906)
!4916 = !DILocation(line: 2248, column: 55, scope: !4917)
!4917 = !DILexicalBlockFile(scope: !4896, file: !1, discriminator: 4)
!4918 = !DILocation(line: 2248, column: 9, scope: !4917)
!4919 = !DILocation(line: 2253, column: 7, scope: !4832)
!4920 = !DILocation(line: 2256, column: 12, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !1, line: 2256, column: 12)
!4922 = distinct !DILexicalBlock(scope: !4827, file: !1, line: 2255, column: 7)
!4923 = !DILocation(line: 2256, column: 16, scope: !4921)
!4924 = !DILocation(line: 2256, column: 12, scope: !4922)
!4925 = !DILocation(line: 2257, column: 16, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !1, line: 2257, column: 15)
!4927 = distinct !DILexicalBlock(scope: !4921, file: !1, line: 2256, column: 23)
!4928 = !DILocation(line: 2257, column: 16, scope: !4929)
!4929 = !DILexicalBlockFile(scope: !4926, file: !1, discriminator: 1)
!4930 = !DILocation(line: 2257, column: 16, scope: !4931)
!4931 = !DILexicalBlockFile(scope: !4926, file: !1, discriminator: 2)
!4932 = !DILocation(line: 2257, column: 15, scope: !4931)
!4933 = !DILocation(line: 2258, column: 26, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4926, file: !1, line: 2257, column: 45)
!4935 = !DILocation(line: 2258, column: 18, scope: !4934)
!4936 = !DILocation(line: 2258, column: 13, scope: !4934)
!4937 = !DILocation(line: 2259, column: 26, scope: !4934)
!4938 = !DILocation(line: 2259, column: 18, scope: !4934)
!4939 = !DILocation(line: 2259, column: 13, scope: !4934)
!4940 = !DILocation(line: 2260, column: 13, scope: !4934)
!4941 = !DILocation(line: 2262, column: 15, scope: !4927)
!4942 = !DILocation(line: 2262, column: 34, scope: !4927)
!4943 = !DILocation(line: 2262, column: 13, scope: !4927)
!4944 = !DILocation(line: 2263, column: 11, scope: !4927)
!4945 = !DILocation(line: 2264, column: 9, scope: !4927)
!4946 = !DILocation(line: 2265, column: 16, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !1, line: 2265, column: 15)
!4948 = distinct !DILexicalBlock(scope: !4921, file: !1, line: 2264, column: 16)
!4949 = !DILocation(line: 2265, column: 16, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !4947, file: !1, discriminator: 1)
!4951 = !DILocation(line: 2265, column: 16, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4947, file: !1, discriminator: 2)
!4953 = !DILocation(line: 2265, column: 15, scope: !4952)
!4954 = !DILocation(line: 2266, column: 26, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4947, file: !1, line: 2265, column: 45)
!4956 = !DILocation(line: 2266, column: 18, scope: !4955)
!4957 = !DILocation(line: 2266, column: 13, scope: !4955)
!4958 = !DILocation(line: 2267, column: 26, scope: !4955)
!4959 = !DILocation(line: 2267, column: 18, scope: !4955)
!4960 = !DILocation(line: 2267, column: 13, scope: !4955)
!4961 = !DILocation(line: 2268, column: 13, scope: !4955)
!4962 = !DILocation(line: 2270, column: 15, scope: !4948)
!4963 = !DILocation(line: 2270, column: 34, scope: !4948)
!4964 = !DILocation(line: 2270, column: 13, scope: !4948)
!4965 = !DILocation(line: 2271, column: 11, scope: !4948)
!4966 = !DILocation(line: 2274, column: 15, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4922, file: !1, line: 2274, column: 9)
!4968 = !DILocation(line: 2274, column: 13, scope: !4967)
!4969 = !DILocation(line: 2274, column: 20, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !4971, file: !1, discriminator: 1)
!4971 = distinct !DILexicalBlock(scope: !4967, file: !1, line: 2274, column: 9)
!4972 = !DILocation(line: 2274, column: 24, scope: !4970)
!4973 = !DILocation(line: 2274, column: 22, scope: !4970)
!4974 = !DILocation(line: 2274, column: 26, scope: !4970)
!4975 = !DILocation(line: 2274, column: 29, scope: !4976)
!4976 = !DILexicalBlockFile(scope: !4971, file: !1, discriminator: 2)
!4977 = !DILocation(line: 2274, column: 31, scope: !4976)
!4978 = !DILocation(line: 2274, column: 9, scope: !4979)
!4979 = !DILexicalBlockFile(scope: !4967, file: !1, discriminator: 3)
!4980 = !DILocation(line: 2275, column: 29, scope: !4971)
!4981 = !DILocation(line: 2275, column: 11, scope: !4971)
!4982 = !DILocation(line: 2275, column: 16, scope: !4971)
!4983 = !DILocation(line: 2275, column: 33, scope: !4971)
!4984 = !DILocation(line: 2274, column: 54, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4971, file: !1, discriminator: 4)
!4986 = !DILocation(line: 2274, column: 9, scope: !4985)
!4987 = !DILocation(line: 2207, column: 5, scope: !4988)
!4988 = !DILexicalBlockFile(scope: !4790, file: !1, discriminator: 2)
!4989 = !DILocation(line: 2278, column: 18, scope: !4680)
!4990 = !DILocation(line: 2278, column: 10, scope: !4680)
!4991 = !DILocation(line: 2278, column: 5, scope: !4680)
!4992 = !DILocation(line: 2279, column: 18, scope: !4680)
!4993 = !DILocation(line: 2279, column: 10, scope: !4680)
!4994 = !DILocation(line: 2279, column: 5, scope: !4680)
!4995 = !DILocation(line: 2281, column: 21, scope: !4680)
!4996 = !DILocation(line: 2281, column: 25, scope: !4680)
!4997 = !DILocation(line: 2281, column: 30, scope: !4680)
!4998 = !DILocation(line: 2281, column: 41, scope: !4680)
!4999 = !DILocation(line: 2281, column: 46, scope: !4680)
!5000 = !DILocation(line: 2281, column: 9, scope: !4680)
!5001 = !DILocation(line: 2281, column: 7, scope: !4680)
!5002 = !DILocation(line: 2283, column: 9, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2283, column: 9)
!5004 = !DILocation(line: 2283, column: 11, scope: !5003)
!5005 = !DILocation(line: 2283, column: 9, scope: !4680)
!5006 = !DILocation(line: 2284, column: 15, scope: !5003)
!5007 = !DILocation(line: 2284, column: 7, scope: !5003)
!5008 = !DILocation(line: 2285, column: 21, scope: !4680)
!5009 = !DILocation(line: 2285, column: 25, scope: !4680)
!5010 = !DILocation(line: 2285, column: 30, scope: !4680)
!5011 = !DILocation(line: 2285, column: 43, scope: !4680)
!5012 = !DILocation(line: 2285, column: 48, scope: !4680)
!5013 = !DILocation(line: 2285, column: 9, scope: !4680)
!5014 = !DILocation(line: 2285, column: 7, scope: !4680)
!5015 = !DILocation(line: 2287, column: 9, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2287, column: 9)
!5017 = !DILocation(line: 2287, column: 11, scope: !5016)
!5018 = !DILocation(line: 2287, column: 9, scope: !4680)
!5019 = !DILocation(line: 2288, column: 15, scope: !5016)
!5020 = !DILocation(line: 2288, column: 7, scope: !5016)
!5021 = !DILocation(line: 2289, column: 21, scope: !4680)
!5022 = !DILocation(line: 2289, column: 25, scope: !4680)
!5023 = !DILocation(line: 2289, column: 30, scope: !4680)
!5024 = !DILocation(line: 2290, column: 18, scope: !4680)
!5025 = !DILocation(line: 2290, column: 23, scope: !4680)
!5026 = !DILocation(line: 2289, column: 9, scope: !4680)
!5027 = !DILocation(line: 2289, column: 7, scope: !4680)
!5028 = !DILocation(line: 2292, column: 9, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2292, column: 9)
!5030 = !DILocation(line: 2292, column: 11, scope: !5029)
!5031 = !DILocation(line: 2292, column: 9, scope: !4680)
!5032 = !DILocation(line: 2293, column: 15, scope: !5029)
!5033 = !DILocation(line: 2293, column: 7, scope: !5029)
!5034 = !DILocation(line: 2294, column: 21, scope: !4680)
!5035 = !DILocation(line: 2294, column: 25, scope: !4680)
!5036 = !DILocation(line: 2294, column: 30, scope: !4680)
!5037 = !DILocation(line: 2295, column: 18, scope: !4680)
!5038 = !DILocation(line: 2295, column: 23, scope: !4680)
!5039 = !DILocation(line: 2294, column: 9, scope: !4680)
!5040 = !DILocation(line: 2294, column: 7, scope: !4680)
!5041 = !DILocation(line: 2297, column: 9, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4680, file: !1, line: 2297, column: 9)
!5043 = !DILocation(line: 2297, column: 11, scope: !5042)
!5044 = !DILocation(line: 2297, column: 9, scope: !4680)
!5045 = !DILocation(line: 2298, column: 15, scope: !5042)
!5046 = !DILocation(line: 2298, column: 7, scope: !5042)
!5047 = !DILocation(line: 2301, column: 8, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !594, file: !1, line: 2301, column: 7)
!5049 = !DILocation(line: 2301, column: 13, scope: !5048)
!5050 = !DILocation(line: 2301, column: 29, scope: !5048)
!5051 = !DILocation(line: 2301, column: 33, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !5048, file: !1, discriminator: 1)
!5053 = !DILocation(line: 2301, column: 38, scope: !5052)
!5054 = !DILocation(line: 2301, column: 43, scope: !5052)
!5055 = !DILocation(line: 2301, column: 7, scope: !5052)
!5056 = !DILocalVariable(name: "new_window", scope: !5057, file: !1, line: 2306, type: !123)
!5057 = distinct !DILexicalBlock(scope: !5048, file: !1, line: 2302, column: 3)
!5058 = !DILocation(line: 2306, column: 11, scope: !5057)
!5059 = !DILocalVariable(name: "new_size", scope: !5057, file: !1, line: 2307, type: !13)
!5060 = !DILocation(line: 2307, column: 18, scope: !5057)
!5061 = !DILocation(line: 2309, column: 9, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5057, file: !1, line: 2309, column: 9)
!5063 = !DILocation(line: 2309, column: 14, scope: !5062)
!5064 = !DILocation(line: 2309, column: 23, scope: !5062)
!5065 = !DILocation(line: 2309, column: 9, scope: !5057)
!5066 = !DILocation(line: 2310, column: 16, scope: !5062)
!5067 = !DILocation(line: 2310, column: 7, scope: !5062)
!5068 = !DILocation(line: 2312, column: 40, scope: !5062)
!5069 = !DILocation(line: 2312, column: 45, scope: !5062)
!5070 = !DILocation(line: 2312, column: 26, scope: !5062)
!5071 = !DILocation(line: 2312, column: 18, scope: !5062)
!5072 = !DILocation(line: 2312, column: 55, scope: !5062)
!5073 = !DILocation(line: 2312, column: 16, scope: !5062)
!5074 = !DILocation(line: 2313, column: 26, scope: !5057)
!5075 = !DILocation(line: 2313, column: 31, scope: !5057)
!5076 = !DILocation(line: 2313, column: 36, scope: !5057)
!5077 = !DILocation(line: 2313, column: 44, scope: !5057)
!5078 = !DILocation(line: 2313, column: 18, scope: !5057)
!5079 = !DILocation(line: 2313, column: 16, scope: !5057)
!5080 = !DILocation(line: 2314, column: 9, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5057, file: !1, line: 2314, column: 9)
!5082 = !DILocation(line: 2314, column: 20, scope: !5081)
!5083 = !DILocation(line: 2314, column: 9, scope: !5057)
!5084 = !DILocation(line: 2315, column: 26, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5081, file: !1, line: 2314, column: 29)
!5086 = !DILocation(line: 2315, column: 29, scope: !5085)
!5087 = !DILocation(line: 2315, column: 7, scope: !5085)
!5088 = !DILocation(line: 2317, column: 7, scope: !5085)
!5089 = !DILocation(line: 2319, column: 41, scope: !5057)
!5090 = !DILocation(line: 2319, column: 5, scope: !5057)
!5091 = !DILocation(line: 2319, column: 10, scope: !5057)
!5092 = !DILocation(line: 2319, column: 15, scope: !5057)
!5093 = !DILocation(line: 2319, column: 22, scope: !5057)
!5094 = !DILocation(line: 2320, column: 28, scope: !5057)
!5095 = !DILocation(line: 2320, column: 5, scope: !5057)
!5096 = !DILocation(line: 2320, column: 10, scope: !5057)
!5097 = !DILocation(line: 2320, column: 26, scope: !5057)
!5098 = !DILocation(line: 2321, column: 12, scope: !5057)
!5099 = !DILocation(line: 2321, column: 17, scope: !5057)
!5100 = !DILocation(line: 2321, column: 22, scope: !5057)
!5101 = !DILocation(line: 2321, column: 33, scope: !5057)
!5102 = !DILocation(line: 2321, column: 38, scope: !5057)
!5103 = !DILocation(line: 2321, column: 5, scope: !5057)
!5104 = !DILocation(line: 2322, column: 22, scope: !5057)
!5105 = !DILocation(line: 2322, column: 27, scope: !5057)
!5106 = !DILocation(line: 2322, column: 43, scope: !5057)
!5107 = !DILocation(line: 2322, column: 5, scope: !5057)
!5108 = !DILocation(line: 2322, column: 10, scope: !5057)
!5109 = !DILocation(line: 2322, column: 15, scope: !5057)
!5110 = !DILocation(line: 2322, column: 20, scope: !5057)
!5111 = !DILocation(line: 2323, column: 3, scope: !5057)
!5112 = !DILocation(line: 2325, column: 3, scope: !594)
!5113 = !DILocation(line: 2325, column: 8, scope: !594)
!5114 = !DILocation(line: 2325, column: 24, scope: !594)
!5115 = !DILocation(line: 2326, column: 3, scope: !594)
!5116 = !DILocation(line: 2328, column: 22, scope: !594)
!5117 = !DILocation(line: 2328, column: 25, scope: !594)
!5118 = !DILocation(line: 2328, column: 3, scope: !594)
!5119 = !DILocation(line: 2330, column: 3, scope: !594)
!5120 = !DILocation(line: 2330, column: 8, scope: !594)
!5121 = !DILocation(line: 2330, column: 14, scope: !594)
!5122 = !DILocation(line: 2331, column: 3, scope: !594)
!5123 = !DILocation(line: 2332, column: 1, scope: !594)
!5124 = !DILocalVariable(name: "rar", arg: 1, scope: !619, file: !1, line: 568, type: !292)
!5125 = !DILocation(line: 568, column: 31, scope: !619)
!5126 = !DILocalVariable(name: "literal", arg: 2, scope: !619, file: !1, line: 568, type: !622)
!5127 = !DILocation(line: 568, column: 44, scope: !619)
!5128 = !DILocation(line: 570, column: 39, scope: !619)
!5129 = !DILocation(line: 570, column: 26, scope: !619)
!5130 = !DILocation(line: 570, column: 31, scope: !619)
!5131 = !DILocation(line: 570, column: 4, scope: !619)
!5132 = !DILocation(line: 570, column: 37, scope: !619)
!5133 = !DILocation(line: 571, column: 3, scope: !619)
!5134 = !DILocation(line: 571, column: 8, scope: !619)
!5135 = !DILocation(line: 571, column: 13, scope: !619)
!5136 = !DILocation(line: 571, column: 21, scope: !619)
!5137 = !DILocation(line: 572, column: 1, scope: !619)
!5138 = !DILocalVariable(name: "rar", arg: 1, scope: !630, file: !1, line: 575, type: !292)
!5139 = !DILocation(line: 575, column: 29, scope: !630)
!5140 = !DILocalVariable(name: "offset", arg: 2, scope: !630, file: !1, line: 575, type: !23)
!5141 = !DILocation(line: 575, column: 38, scope: !630)
!5142 = !DILocalVariable(name: "length", arg: 3, scope: !630, file: !1, line: 575, type: !23)
!5143 = !DILocation(line: 575, column: 50, scope: !630)
!5144 = !DILocalVariable(name: "dstoffs", scope: !630, file: !1, line: 577, type: !23)
!5145 = !DILocation(line: 577, column: 7, scope: !630)
!5146 = !DILocation(line: 577, column: 38, scope: !630)
!5147 = !DILocation(line: 577, column: 43, scope: !630)
!5148 = !DILocation(line: 577, column: 17, scope: !630)
!5149 = !DILocalVariable(name: "srcoffs", scope: !630, file: !1, line: 578, type: !23)
!5150 = !DILocation(line: 578, column: 7, scope: !630)
!5151 = !DILocation(line: 578, column: 18, scope: !630)
!5152 = !DILocation(line: 578, column: 28, scope: !630)
!5153 = !DILocation(line: 578, column: 26, scope: !630)
!5154 = !DILocation(line: 578, column: 49, scope: !630)
!5155 = !DILocation(line: 578, column: 54, scope: !630)
!5156 = !DILocation(line: 578, column: 38, scope: !630)
!5157 = !DILocation(line: 578, column: 36, scope: !630)
!5158 = !DILocalVariable(name: "l", scope: !630, file: !1, line: 579, type: !23)
!5159 = !DILocation(line: 579, column: 7, scope: !630)
!5160 = !DILocalVariable(name: "li", scope: !630, file: !1, line: 579, type: !23)
!5161 = !DILocation(line: 579, column: 10, scope: !630)
!5162 = !DILocalVariable(name: "remaining", scope: !630, file: !1, line: 579, type: !23)
!5163 = !DILocation(line: 579, column: 14, scope: !630)
!5164 = !DILocalVariable(name: "d", scope: !630, file: !1, line: 580, type: !342)
!5165 = !DILocation(line: 580, column: 18, scope: !630)
!5166 = !DILocalVariable(name: "s", scope: !630, file: !1, line: 580, type: !342)
!5167 = !DILocation(line: 580, column: 22, scope: !630)
!5168 = !DILocation(line: 582, column: 15, scope: !630)
!5169 = !DILocation(line: 582, column: 13, scope: !630)
!5170 = !DILocation(line: 583, column: 3, scope: !630)
!5171 = !DILocation(line: 583, column: 10, scope: !5172)
!5172 = !DILexicalBlockFile(scope: !630, file: !1, discriminator: 1)
!5173 = !DILocation(line: 583, column: 20, scope: !5172)
!5174 = !DILocation(line: 583, column: 3, scope: !5172)
!5175 = !DILocation(line: 584, column: 9, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !630, file: !1, line: 583, column: 25)
!5177 = !DILocation(line: 584, column: 7, scope: !5176)
!5178 = !DILocation(line: 585, column: 9, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5176, file: !1, line: 585, column: 9)
!5180 = !DILocation(line: 585, column: 19, scope: !5179)
!5181 = !DILocation(line: 585, column: 17, scope: !5179)
!5182 = !DILocation(line: 585, column: 9, scope: !5176)
!5183 = !DILocation(line: 586, column: 11, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 586, column: 11)
!5185 = distinct !DILexicalBlock(scope: !5179, file: !1, line: 585, column: 28)
!5186 = !DILocation(line: 586, column: 26, scope: !5184)
!5187 = !DILocation(line: 586, column: 31, scope: !5184)
!5188 = !DILocation(line: 586, column: 15, scope: !5184)
!5189 = !DILocation(line: 586, column: 39, scope: !5184)
!5190 = !DILocation(line: 586, column: 37, scope: !5184)
!5191 = !DILocation(line: 586, column: 13, scope: !5184)
!5192 = !DILocation(line: 586, column: 11, scope: !5185)
!5193 = !DILocation(line: 587, column: 24, scope: !5184)
!5194 = !DILocation(line: 587, column: 29, scope: !5184)
!5195 = !DILocation(line: 587, column: 13, scope: !5184)
!5196 = !DILocation(line: 587, column: 37, scope: !5184)
!5197 = !DILocation(line: 587, column: 35, scope: !5184)
!5198 = !DILocation(line: 587, column: 11, scope: !5184)
!5199 = !DILocation(line: 587, column: 9, scope: !5184)
!5200 = !DILocation(line: 588, column: 5, scope: !5185)
!5201 = !DILocation(line: 589, column: 11, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !1, line: 589, column: 11)
!5203 = distinct !DILexicalBlock(scope: !5179, file: !1, line: 588, column: 12)
!5204 = !DILocation(line: 589, column: 26, scope: !5202)
!5205 = !DILocation(line: 589, column: 31, scope: !5202)
!5206 = !DILocation(line: 589, column: 15, scope: !5202)
!5207 = !DILocation(line: 589, column: 39, scope: !5202)
!5208 = !DILocation(line: 589, column: 37, scope: !5202)
!5209 = !DILocation(line: 589, column: 13, scope: !5202)
!5210 = !DILocation(line: 589, column: 11, scope: !5203)
!5211 = !DILocation(line: 590, column: 24, scope: !5202)
!5212 = !DILocation(line: 590, column: 29, scope: !5202)
!5213 = !DILocation(line: 590, column: 13, scope: !5202)
!5214 = !DILocation(line: 590, column: 37, scope: !5202)
!5215 = !DILocation(line: 590, column: 35, scope: !5202)
!5216 = !DILocation(line: 590, column: 11, scope: !5202)
!5217 = !DILocation(line: 590, column: 9, scope: !5202)
!5218 = !DILocation(line: 592, column: 28, scope: !5176)
!5219 = !DILocation(line: 592, column: 11, scope: !5176)
!5220 = !DILocation(line: 592, column: 16, scope: !5176)
!5221 = !DILocation(line: 592, column: 21, scope: !5176)
!5222 = !DILocation(line: 592, column: 7, scope: !5176)
!5223 = !DILocation(line: 593, column: 28, scope: !5176)
!5224 = !DILocation(line: 593, column: 11, scope: !5176)
!5225 = !DILocation(line: 593, column: 16, scope: !5176)
!5226 = !DILocation(line: 593, column: 21, scope: !5176)
!5227 = !DILocation(line: 593, column: 7, scope: !5176)
!5228 = !DILocation(line: 594, column: 10, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5176, file: !1, line: 594, column: 9)
!5230 = !DILocation(line: 594, column: 20, scope: !5229)
!5231 = !DILocation(line: 594, column: 18, scope: !5229)
!5232 = !DILocation(line: 594, column: 24, scope: !5229)
!5233 = !DILocation(line: 594, column: 22, scope: !5229)
!5234 = !DILocation(line: 594, column: 33, scope: !5229)
!5235 = !DILocation(line: 594, column: 37, scope: !5236)
!5236 = !DILexicalBlockFile(scope: !5229, file: !1, discriminator: 1)
!5237 = !DILocation(line: 594, column: 47, scope: !5236)
!5238 = !DILocation(line: 594, column: 45, scope: !5236)
!5239 = !DILocation(line: 594, column: 51, scope: !5236)
!5240 = !DILocation(line: 594, column: 49, scope: !5236)
!5241 = !DILocation(line: 594, column: 9, scope: !5236)
!5242 = !DILocation(line: 595, column: 14, scope: !5229)
!5243 = !DILocation(line: 595, column: 17, scope: !5229)
!5244 = !DILocation(line: 595, column: 20, scope: !5229)
!5245 = !DILocation(line: 595, column: 7, scope: !5229)
!5246 = !DILocation(line: 597, column: 15, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5248, file: !1, line: 597, column: 7)
!5248 = distinct !DILexicalBlock(scope: !5229, file: !1, line: 596, column: 10)
!5249 = !DILocation(line: 597, column: 12, scope: !5247)
!5250 = !DILocation(line: 597, column: 20, scope: !5251)
!5251 = !DILexicalBlockFile(scope: !5252, file: !1, discriminator: 1)
!5252 = distinct !DILexicalBlock(scope: !5247, file: !1, line: 597, column: 7)
!5253 = !DILocation(line: 597, column: 25, scope: !5251)
!5254 = !DILocation(line: 597, column: 23, scope: !5251)
!5255 = !DILocation(line: 597, column: 7, scope: !5251)
!5256 = !DILocation(line: 598, column: 19, scope: !5252)
!5257 = !DILocation(line: 598, column: 17, scope: !5252)
!5258 = !DILocation(line: 598, column: 11, scope: !5252)
!5259 = !DILocation(line: 598, column: 9, scope: !5252)
!5260 = !DILocation(line: 598, column: 15, scope: !5252)
!5261 = !DILocation(line: 597, column: 30, scope: !5262)
!5262 = !DILexicalBlockFile(scope: !5252, file: !1, discriminator: 2)
!5263 = !DILocation(line: 597, column: 7, scope: !5262)
!5264 = !DILocation(line: 600, column: 18, scope: !5176)
!5265 = !DILocation(line: 600, column: 15, scope: !5176)
!5266 = !DILocation(line: 601, column: 16, scope: !5176)
!5267 = !DILocation(line: 601, column: 26, scope: !5176)
!5268 = !DILocation(line: 601, column: 24, scope: !5176)
!5269 = !DILocation(line: 601, column: 43, scope: !5176)
!5270 = !DILocation(line: 601, column: 48, scope: !5176)
!5271 = !DILocation(line: 601, column: 31, scope: !5176)
!5272 = !DILocation(line: 601, column: 29, scope: !5176)
!5273 = !DILocation(line: 601, column: 13, scope: !5176)
!5274 = !DILocation(line: 602, column: 16, scope: !5176)
!5275 = !DILocation(line: 602, column: 26, scope: !5176)
!5276 = !DILocation(line: 602, column: 24, scope: !5176)
!5277 = !DILocation(line: 602, column: 43, scope: !5176)
!5278 = !DILocation(line: 602, column: 48, scope: !5176)
!5279 = !DILocation(line: 602, column: 31, scope: !5176)
!5280 = !DILocation(line: 602, column: 29, scope: !5176)
!5281 = !DILocation(line: 602, column: 13, scope: !5176)
!5282 = !DILocation(line: 583, column: 3, scope: !5283)
!5283 = !DILexicalBlockFile(scope: !630, file: !1, discriminator: 2)
!5284 = !DILocation(line: 604, column: 25, scope: !630)
!5285 = !DILocation(line: 604, column: 3, scope: !630)
!5286 = !DILocation(line: 604, column: 8, scope: !630)
!5287 = !DILocation(line: 604, column: 13, scope: !630)
!5288 = !DILocation(line: 604, column: 22, scope: !630)
!5289 = !DILocation(line: 605, column: 1, scope: !630)
!5290 = !DILocalVariable(name: "a", arg: 1, scope: !635, file: !1, line: 2647, type: !4)
!5291 = !DILocation(line: 2647, column: 29, scope: !635)
!5292 = !DILocalVariable(name: "end", arg: 2, scope: !635, file: !1, line: 2647, type: !52)
!5293 = !DILocation(line: 2647, column: 40, scope: !635)
!5294 = !DILocalVariable(name: "symbol", scope: !635, file: !1, line: 2681, type: !23)
!5295 = !DILocation(line: 2681, column: 7, scope: !635)
!5296 = !DILocalVariable(name: "offs", scope: !635, file: !1, line: 2681, type: !23)
!5297 = !DILocation(line: 2681, column: 15, scope: !635)
!5298 = !DILocalVariable(name: "len", scope: !635, file: !1, line: 2681, type: !23)
!5299 = !DILocation(line: 2681, column: 21, scope: !635)
!5300 = !DILocalVariable(name: "offsindex", scope: !635, file: !1, line: 2681, type: !23)
!5301 = !DILocation(line: 2681, column: 26, scope: !635)
!5302 = !DILocalVariable(name: "lensymbol", scope: !635, file: !1, line: 2681, type: !23)
!5303 = !DILocation(line: 2681, column: 37, scope: !635)
!5304 = !DILocalVariable(name: "i", scope: !635, file: !1, line: 2681, type: !23)
!5305 = !DILocation(line: 2681, column: 48, scope: !635)
!5306 = !DILocalVariable(name: "offssymbol", scope: !635, file: !1, line: 2681, type: !23)
!5307 = !DILocation(line: 2681, column: 51, scope: !635)
!5308 = !DILocalVariable(name: "lowoffsetsymbol", scope: !635, file: !1, line: 2681, type: !23)
!5309 = !DILocation(line: 2681, column: 63, scope: !635)
!5310 = !DILocalVariable(name: "newfile", scope: !635, file: !1, line: 2682, type: !343)
!5311 = !DILocation(line: 2682, column: 17, scope: !635)
!5312 = !DILocalVariable(name: "rar", scope: !635, file: !1, line: 2683, type: !292)
!5313 = !DILocation(line: 2683, column: 15, scope: !635)
!5314 = !DILocation(line: 2683, column: 36, scope: !635)
!5315 = !DILocation(line: 2683, column: 39, scope: !635)
!5316 = !DILocation(line: 2683, column: 47, scope: !635)
!5317 = !DILocation(line: 2683, column: 21, scope: !635)
!5318 = !DILocalVariable(name: "br", scope: !635, file: !1, line: 2684, type: !592)
!5319 = !DILocation(line: 2684, column: 18, scope: !635)
!5320 = !DILocation(line: 2684, column: 25, scope: !635)
!5321 = !DILocation(line: 2684, column: 30, scope: !635)
!5322 = !DILocation(line: 2686, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !635, file: !1, line: 2686, column: 7)
!5324 = !DILocation(line: 2686, column: 12, scope: !5323)
!5325 = !DILocation(line: 2686, column: 26, scope: !5323)
!5326 = !DILocation(line: 2686, column: 24, scope: !5323)
!5327 = !DILocation(line: 2686, column: 7, scope: !635)
!5328 = !DILocation(line: 2687, column: 11, scope: !5323)
!5329 = !DILocation(line: 2687, column: 16, scope: !5323)
!5330 = !DILocation(line: 2687, column: 9, scope: !5323)
!5331 = !DILocation(line: 2687, column: 5, scope: !5323)
!5332 = !DILocation(line: 2689, column: 3, scope: !635)
!5333 = !DILocation(line: 2691, column: 9, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !1, line: 2691, column: 9)
!5335 = distinct !DILexicalBlock(scope: !635, file: !1, line: 2690, column: 3)
!5336 = !DILocation(line: 2691, column: 14, scope: !5334)
!5337 = !DILocation(line: 2691, column: 32, scope: !5334)
!5338 = !DILocation(line: 2692, column: 22, scope: !5334)
!5339 = !DILocation(line: 2692, column: 27, scope: !5334)
!5340 = !DILocation(line: 2692, column: 7, scope: !5334)
!5341 = !DILocation(line: 2692, column: 35, scope: !5334)
!5342 = !DILocation(line: 2692, column: 40, scope: !5334)
!5343 = !DILocation(line: 2692, column: 33, scope: !5334)
!5344 = !DILocation(line: 2692, column: 54, scope: !5334)
!5345 = !DILocation(line: 2692, column: 51, scope: !5334)
!5346 = !DILocation(line: 2691, column: 9, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !5335, file: !1, discriminator: 1)
!5348 = !DILocation(line: 2694, column: 23, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5334, file: !1, line: 2693, column: 5)
!5350 = !DILocation(line: 2694, column: 28, scope: !5349)
!5351 = !DILocation(line: 2694, column: 33, scope: !5349)
!5352 = !DILocation(line: 2694, column: 45, scope: !5349)
!5353 = !DILocation(line: 2694, column: 50, scope: !5349)
!5354 = !DILocation(line: 2694, column: 7, scope: !5349)
!5355 = !DILocation(line: 2695, column: 7, scope: !5349)
!5356 = !DILocation(line: 2695, column: 12, scope: !5349)
!5357 = !DILocation(line: 2695, column: 30, scope: !5349)
!5358 = !DILocation(line: 2696, column: 5, scope: !5349)
!5359 = !DILocation(line: 2698, column: 8, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5335, file: !1, line: 2698, column: 8)
!5361 = !DILocation(line: 2698, column: 13, scope: !5360)
!5362 = !DILocation(line: 2698, column: 27, scope: !5360)
!5363 = !DILocation(line: 2698, column: 30, scope: !5364)
!5364 = !DILexicalBlockFile(scope: !5360, file: !1, discriminator: 1)
!5365 = !DILocation(line: 2698, column: 35, scope: !5364)
!5366 = !DILocation(line: 2698, column: 53, scope: !5364)
!5367 = !DILocation(line: 2699, column: 22, scope: !5360)
!5368 = !DILocation(line: 2699, column: 27, scope: !5360)
!5369 = !DILocation(line: 2699, column: 7, scope: !5360)
!5370 = !DILocation(line: 2699, column: 36, scope: !5360)
!5371 = !DILocation(line: 2699, column: 33, scope: !5360)
!5372 = !DILocation(line: 2698, column: 8, scope: !5373)
!5373 = !DILexicalBlockFile(scope: !5335, file: !1, discriminator: 2)
!5374 = !DILocation(line: 2700, column: 29, scope: !5360)
!5375 = !DILocation(line: 2700, column: 34, scope: !5360)
!5376 = !DILocation(line: 2700, column: 14, scope: !5360)
!5377 = !DILocation(line: 2700, column: 7, scope: !5360)
!5378 = !DILocation(line: 2702, column: 36, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5335, file: !1, line: 2702, column: 9)
!5380 = !DILocation(line: 2702, column: 40, scope: !5379)
!5381 = !DILocation(line: 2702, column: 45, scope: !5379)
!5382 = !DILocation(line: 2702, column: 19, scope: !5379)
!5383 = !DILocation(line: 2702, column: 17, scope: !5379)
!5384 = !DILocation(line: 2702, column: 56, scope: !5379)
!5385 = !DILocation(line: 2702, column: 9, scope: !5335)
!5386 = !DILocation(line: 2703, column: 7, scope: !5379)
!5387 = !DILocation(line: 2704, column: 5, scope: !5335)
!5388 = !DILocation(line: 2704, column: 10, scope: !5335)
!5389 = !DILocation(line: 2704, column: 28, scope: !5335)
!5390 = !DILocation(line: 2706, column: 9, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5335, file: !1, line: 2706, column: 9)
!5392 = !DILocation(line: 2706, column: 16, scope: !5391)
!5393 = !DILocation(line: 2706, column: 9, scope: !5335)
!5394 = !DILocation(line: 2708, column: 25, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5391, file: !1, line: 2707, column: 5)
!5396 = !DILocation(line: 2708, column: 30, scope: !5395)
!5397 = !DILocation(line: 2708, column: 7, scope: !5395)
!5398 = !DILocation(line: 2709, column: 7, scope: !5395)
!5399 = !DILocation(line: 2711, column: 14, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5391, file: !1, line: 2711, column: 14)
!5401 = !DILocation(line: 2711, column: 21, scope: !5400)
!5402 = !DILocation(line: 2711, column: 14, scope: !5391)
!5403 = !DILocation(line: 2713, column: 12, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 2713, column: 11)
!5405 = distinct !DILexicalBlock(scope: !5400, file: !1, line: 2712, column: 5)
!5406 = !DILocation(line: 2713, column: 12, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !5404, file: !1, discriminator: 1)
!5408 = !DILocation(line: 2713, column: 12, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !5404, file: !1, discriminator: 2)
!5410 = !DILocation(line: 2713, column: 11, scope: !5409)
!5411 = !DILocation(line: 2714, column: 9, scope: !5404)
!5412 = !DILocation(line: 2715, column: 18, scope: !5405)
!5413 = !DILocation(line: 2715, column: 17, scope: !5405)
!5414 = !DILocation(line: 2715, column: 15, scope: !5405)
!5415 = !DILocation(line: 2716, column: 7, scope: !5405)
!5416 = !DILocation(line: 2718, column: 10, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 2718, column: 10)
!5418 = !DILocation(line: 2718, column: 10, scope: !5405)
!5419 = !DILocation(line: 2720, column: 9, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5417, file: !1, line: 2719, column: 7)
!5421 = !DILocation(line: 2720, column: 14, scope: !5420)
!5422 = !DILocation(line: 2720, column: 30, scope: !5420)
!5423 = !DILocation(line: 2721, column: 14, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5420, file: !1, line: 2721, column: 13)
!5425 = !DILocation(line: 2721, column: 14, scope: !5426)
!5426 = !DILexicalBlockFile(scope: !5424, file: !1, discriminator: 1)
!5427 = !DILocation(line: 2721, column: 14, scope: !5428)
!5428 = !DILexicalBlockFile(scope: !5424, file: !1, discriminator: 2)
!5429 = !DILocation(line: 2721, column: 13, scope: !5428)
!5430 = !DILocation(line: 2722, column: 11, scope: !5424)
!5431 = !DILocation(line: 2723, column: 32, scope: !5420)
!5432 = !DILocation(line: 2723, column: 9, scope: !5420)
!5433 = !DILocation(line: 2723, column: 14, scope: !5420)
!5434 = !DILocation(line: 2723, column: 30, scope: !5420)
!5435 = !DILocation(line: 2724, column: 9, scope: !5420)
!5436 = !DILocation(line: 2725, column: 31, scope: !5420)
!5437 = !DILocation(line: 2725, column: 36, scope: !5420)
!5438 = !DILocation(line: 2725, column: 16, scope: !5420)
!5439 = !DILocation(line: 2725, column: 9, scope: !5420)
!5440 = !DILocation(line: 2729, column: 25, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !1, line: 2729, column: 13)
!5442 = distinct !DILexicalBlock(scope: !5417, file: !1, line: 2728, column: 7)
!5443 = !DILocation(line: 2729, column: 13, scope: !5441)
!5444 = !DILocation(line: 2729, column: 28, scope: !5441)
!5445 = !DILocation(line: 2729, column: 13, scope: !5442)
!5446 = !DILocation(line: 2730, column: 11, scope: !5441)
!5447 = !DILocation(line: 2731, column: 9, scope: !5442)
!5448 = !DILocation(line: 2734, column: 13, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5400, file: !1, line: 2734, column: 13)
!5450 = !DILocation(line: 2734, column: 19, scope: !5449)
!5451 = !DILocation(line: 2734, column: 13, scope: !5400)
!5452 = !DILocation(line: 2736, column: 26, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5449, file: !1, line: 2735, column: 5)
!5454 = !DILocation(line: 2736, column: 29, scope: !5453)
!5455 = !DILocation(line: 2736, column: 7, scope: !5453)
!5456 = !DILocation(line: 2738, column: 7, scope: !5453)
!5457 = !DILocation(line: 2740, column: 13, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5449, file: !1, line: 2740, column: 13)
!5459 = !DILocation(line: 2740, column: 19, scope: !5458)
!5460 = !DILocation(line: 2740, column: 13, scope: !5449)
!5461 = !DILocation(line: 2742, column: 10, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !1, line: 2742, column: 10)
!5463 = distinct !DILexicalBlock(scope: !5458, file: !1, line: 2741, column: 5)
!5464 = !DILocation(line: 2742, column: 15, scope: !5462)
!5465 = !DILocation(line: 2742, column: 26, scope: !5462)
!5466 = !DILocation(line: 2742, column: 10, scope: !5463)
!5467 = !DILocation(line: 2743, column: 9, scope: !5462)
!5468 = !DILocation(line: 2745, column: 14, scope: !5463)
!5469 = !DILocation(line: 2745, column: 19, scope: !5463)
!5470 = !DILocation(line: 2745, column: 12, scope: !5463)
!5471 = !DILocation(line: 2746, column: 13, scope: !5463)
!5472 = !DILocation(line: 2746, column: 18, scope: !5463)
!5473 = !DILocation(line: 2746, column: 11, scope: !5463)
!5474 = !DILocation(line: 2747, column: 5, scope: !5463)
!5475 = !DILocation(line: 2748, column: 14, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5458, file: !1, line: 2748, column: 14)
!5477 = !DILocation(line: 2748, column: 21, scope: !5476)
!5478 = !DILocation(line: 2748, column: 14, scope: !5458)
!5479 = !DILocation(line: 2750, column: 19, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5476, file: !1, line: 2749, column: 5)
!5481 = !DILocation(line: 2750, column: 26, scope: !5480)
!5482 = !DILocation(line: 2750, column: 17, scope: !5480)
!5483 = !DILocation(line: 2751, column: 29, scope: !5480)
!5484 = !DILocation(line: 2751, column: 14, scope: !5480)
!5485 = !DILocation(line: 2751, column: 19, scope: !5480)
!5486 = !DILocation(line: 2751, column: 12, scope: !5480)
!5487 = !DILocation(line: 2753, column: 41, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5480, file: !1, line: 2753, column: 11)
!5489 = !DILocation(line: 2753, column: 45, scope: !5488)
!5490 = !DILocation(line: 2753, column: 50, scope: !5488)
!5491 = !DILocation(line: 2753, column: 24, scope: !5488)
!5492 = !DILocation(line: 2753, column: 22, scope: !5488)
!5493 = !DILocation(line: 2753, column: 63, scope: !5488)
!5494 = !DILocation(line: 2753, column: 11, scope: !5480)
!5495 = !DILocation(line: 2754, column: 9, scope: !5488)
!5496 = !DILocation(line: 2755, column: 11, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5480, file: !1, line: 2755, column: 11)
!5498 = !DILocation(line: 2755, column: 21, scope: !5497)
!5499 = !DILocation(line: 2755, column: 11, scope: !5480)
!5500 = !DILocation(line: 2756, column: 9, scope: !5497)
!5501 = !DILocation(line: 2757, column: 11, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5480, file: !1, line: 2757, column: 11)
!5503 = !DILocation(line: 2757, column: 21, scope: !5502)
!5504 = !DILocation(line: 2757, column: 11, scope: !5480)
!5505 = !DILocation(line: 2758, column: 9, scope: !5502)
!5506 = !DILocation(line: 2759, column: 25, scope: !5480)
!5507 = !DILocation(line: 2759, column: 13, scope: !5480)
!5508 = !DILocation(line: 2759, column: 36, scope: !5480)
!5509 = !DILocation(line: 2759, column: 11, scope: !5480)
!5510 = !DILocation(line: 2760, column: 22, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5480, file: !1, line: 2760, column: 11)
!5512 = !DILocation(line: 2760, column: 11, scope: !5511)
!5513 = !DILocation(line: 2760, column: 33, scope: !5511)
!5514 = !DILocation(line: 2760, column: 11, scope: !5480)
!5515 = !DILocation(line: 2761, column: 14, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !1, line: 2761, column: 13)
!5517 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 2760, column: 38)
!5518 = !DILocation(line: 2761, column: 14, scope: !5519)
!5519 = !DILexicalBlockFile(scope: !5516, file: !1, discriminator: 1)
!5520 = !DILocation(line: 2761, column: 14, scope: !5521)
!5521 = !DILexicalBlockFile(scope: !5516, file: !1, discriminator: 2)
!5522 = !DILocation(line: 2761, column: 13, scope: !5521)
!5523 = !DILocation(line: 2762, column: 11, scope: !5516)
!5524 = !DILocation(line: 2763, column: 16, scope: !5517)
!5525 = !DILocation(line: 2763, column: 13, scope: !5517)
!5526 = !DILocation(line: 2764, column: 9, scope: !5517)
!5527 = !DILocation(line: 2765, column: 7, scope: !5517)
!5528 = !DILocation(line: 2767, column: 16, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5480, file: !1, line: 2767, column: 7)
!5530 = !DILocation(line: 2767, column: 14, scope: !5529)
!5531 = !DILocation(line: 2767, column: 12, scope: !5529)
!5532 = !DILocation(line: 2767, column: 27, scope: !5533)
!5533 = !DILexicalBlockFile(scope: !5534, file: !1, discriminator: 1)
!5534 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 2767, column: 7)
!5535 = !DILocation(line: 2767, column: 29, scope: !5533)
!5536 = !DILocation(line: 2767, column: 7, scope: !5533)
!5537 = !DILocation(line: 2768, column: 44, scope: !5534)
!5538 = !DILocation(line: 2768, column: 45, scope: !5534)
!5539 = !DILocation(line: 2768, column: 29, scope: !5534)
!5540 = !DILocation(line: 2768, column: 34, scope: !5534)
!5541 = !DILocation(line: 2768, column: 24, scope: !5534)
!5542 = !DILocation(line: 2768, column: 9, scope: !5534)
!5543 = !DILocation(line: 2768, column: 14, scope: !5534)
!5544 = !DILocation(line: 2768, column: 27, scope: !5534)
!5545 = !DILocation(line: 2767, column: 35, scope: !5546)
!5546 = !DILexicalBlockFile(scope: !5534, file: !1, discriminator: 2)
!5547 = !DILocation(line: 2767, column: 7, scope: !5546)
!5548 = !DILocation(line: 2769, column: 27, scope: !5480)
!5549 = !DILocation(line: 2769, column: 7, scope: !5480)
!5550 = !DILocation(line: 2769, column: 12, scope: !5480)
!5551 = !DILocation(line: 2769, column: 25, scope: !5480)
!5552 = !DILocation(line: 2770, column: 5, scope: !5480)
!5553 = !DILocation(line: 2771, column: 13, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5476, file: !1, line: 2771, column: 13)
!5555 = !DILocation(line: 2771, column: 19, scope: !5554)
!5556 = !DILocation(line: 2771, column: 13, scope: !5476)
!5557 = !DILocation(line: 2773, column: 25, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5554, file: !1, line: 2772, column: 5)
!5559 = !DILocation(line: 2773, column: 31, scope: !5558)
!5560 = !DILocation(line: 2773, column: 14, scope: !5558)
!5561 = !DILocation(line: 2773, column: 37, scope: !5558)
!5562 = !DILocation(line: 2773, column: 12, scope: !5558)
!5563 = !DILocation(line: 2774, column: 20, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5558, file: !1, line: 2774, column: 10)
!5565 = !DILocation(line: 2774, column: 26, scope: !5564)
!5566 = !DILocation(line: 2774, column: 10, scope: !5564)
!5567 = !DILocation(line: 2774, column: 32, scope: !5564)
!5568 = !DILocation(line: 2774, column: 10, scope: !5558)
!5569 = !DILocation(line: 2775, column: 14, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5571, file: !1, line: 2775, column: 13)
!5571 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 2774, column: 37)
!5572 = !DILocation(line: 2775, column: 14, scope: !5573)
!5573 = !DILexicalBlockFile(scope: !5570, file: !1, discriminator: 1)
!5574 = !DILocation(line: 2775, column: 14, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !5570, file: !1, discriminator: 2)
!5576 = !DILocation(line: 2775, column: 13, scope: !5575)
!5577 = !DILocation(line: 2776, column: 11, scope: !5570)
!5578 = !DILocation(line: 2777, column: 17, scope: !5571)
!5579 = !DILocation(line: 2777, column: 14, scope: !5571)
!5580 = !DILocation(line: 2778, column: 9, scope: !5571)
!5581 = !DILocation(line: 2779, column: 7, scope: !5571)
!5582 = !DILocation(line: 2781, column: 11, scope: !5558)
!5583 = !DILocation(line: 2783, column: 13, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5558, file: !1, line: 2783, column: 7)
!5585 = !DILocation(line: 2783, column: 11, scope: !5584)
!5586 = !DILocation(line: 2783, column: 18, scope: !5587)
!5587 = !DILexicalBlockFile(scope: !5588, file: !1, discriminator: 1)
!5588 = distinct !DILexicalBlock(scope: !5584, file: !1, line: 2783, column: 7)
!5589 = !DILocation(line: 2783, column: 20, scope: !5587)
!5590 = !DILocation(line: 2783, column: 7, scope: !5587)
!5591 = !DILocation(line: 2784, column: 44, scope: !5588)
!5592 = !DILocation(line: 2784, column: 45, scope: !5588)
!5593 = !DILocation(line: 2784, column: 29, scope: !5588)
!5594 = !DILocation(line: 2784, column: 34, scope: !5588)
!5595 = !DILocation(line: 2784, column: 24, scope: !5588)
!5596 = !DILocation(line: 2784, column: 9, scope: !5588)
!5597 = !DILocation(line: 2784, column: 14, scope: !5588)
!5598 = !DILocation(line: 2784, column: 27, scope: !5588)
!5599 = !DILocation(line: 2783, column: 26, scope: !5600)
!5600 = !DILexicalBlockFile(scope: !5588, file: !1, discriminator: 2)
!5601 = !DILocation(line: 2783, column: 7, scope: !5600)
!5602 = !DILocation(line: 2785, column: 27, scope: !5558)
!5603 = !DILocation(line: 2785, column: 7, scope: !5558)
!5604 = !DILocation(line: 2785, column: 12, scope: !5558)
!5605 = !DILocation(line: 2785, column: 25, scope: !5558)
!5606 = !DILocation(line: 2786, column: 5, scope: !5558)
!5607 = !DILocation(line: 2789, column: 11, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2789, column: 11)
!5609 = distinct !DILexicalBlock(scope: !5554, file: !1, line: 2788, column: 5)
!5610 = !DILocation(line: 2789, column: 17, scope: !5608)
!5611 = !DILocation(line: 2789, column: 22, scope: !5608)
!5612 = !DILocation(line: 2789, column: 11, scope: !5609)
!5613 = !DILocation(line: 2790, column: 9, scope: !5608)
!5614 = !DILocation(line: 2791, column: 11, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2791, column: 11)
!5616 = !DILocation(line: 2791, column: 17, scope: !5615)
!5617 = !DILocation(line: 2791, column: 22, scope: !5615)
!5618 = !DILocation(line: 2791, column: 11, scope: !5609)
!5619 = !DILocation(line: 2792, column: 9, scope: !5615)
!5620 = !DILocation(line: 2793, column: 25, scope: !5609)
!5621 = !DILocation(line: 2793, column: 31, scope: !5609)
!5622 = !DILocation(line: 2793, column: 13, scope: !5609)
!5623 = !DILocation(line: 2793, column: 36, scope: !5609)
!5624 = !DILocation(line: 2793, column: 11, scope: !5609)
!5625 = !DILocation(line: 2794, column: 21, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2794, column: 10)
!5627 = !DILocation(line: 2794, column: 27, scope: !5626)
!5628 = !DILocation(line: 2794, column: 10, scope: !5626)
!5629 = !DILocation(line: 2794, column: 33, scope: !5626)
!5630 = !DILocation(line: 2794, column: 10, scope: !5609)
!5631 = !DILocation(line: 2795, column: 14, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !1, line: 2795, column: 13)
!5633 = distinct !DILexicalBlock(scope: !5626, file: !1, line: 2794, column: 38)
!5634 = !DILocation(line: 2795, column: 14, scope: !5635)
!5635 = !DILexicalBlockFile(scope: !5632, file: !1, discriminator: 1)
!5636 = !DILocation(line: 2795, column: 14, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !5632, file: !1, discriminator: 2)
!5638 = !DILocation(line: 2795, column: 13, scope: !5637)
!5639 = !DILocation(line: 2796, column: 11, scope: !5632)
!5640 = !DILocation(line: 2797, column: 16, scope: !5633)
!5641 = !DILocation(line: 2797, column: 13, scope: !5633)
!5642 = !DILocation(line: 2798, column: 9, scope: !5633)
!5643 = !DILocation(line: 2799, column: 7, scope: !5633)
!5644 = !DILocation(line: 2801, column: 42, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2801, column: 11)
!5646 = !DILocation(line: 2801, column: 46, scope: !5645)
!5647 = !DILocation(line: 2801, column: 51, scope: !5645)
!5648 = !DILocation(line: 2801, column: 25, scope: !5645)
!5649 = !DILocation(line: 2801, column: 23, scope: !5645)
!5650 = !DILocation(line: 2801, column: 64, scope: !5645)
!5651 = !DILocation(line: 2801, column: 11, scope: !5609)
!5652 = !DILocation(line: 2802, column: 9, scope: !5645)
!5653 = !DILocation(line: 2803, column: 11, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2803, column: 11)
!5655 = !DILocation(line: 2803, column: 22, scope: !5654)
!5656 = !DILocation(line: 2803, column: 11, scope: !5609)
!5657 = !DILocation(line: 2804, column: 9, scope: !5654)
!5658 = !DILocation(line: 2805, column: 11, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2805, column: 11)
!5660 = !DILocation(line: 2805, column: 22, scope: !5659)
!5661 = !DILocation(line: 2805, column: 11, scope: !5609)
!5662 = !DILocation(line: 2806, column: 9, scope: !5659)
!5663 = !DILocation(line: 2807, column: 26, scope: !5609)
!5664 = !DILocation(line: 2807, column: 14, scope: !5609)
!5665 = !DILocation(line: 2807, column: 37, scope: !5609)
!5666 = !DILocation(line: 2807, column: 12, scope: !5609)
!5667 = !DILocation(line: 2808, column: 21, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2808, column: 10)
!5669 = !DILocation(line: 2808, column: 10, scope: !5668)
!5670 = !DILocation(line: 2808, column: 33, scope: !5668)
!5671 = !DILocation(line: 2808, column: 10, scope: !5609)
!5672 = !DILocation(line: 2810, column: 12, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !1, line: 2810, column: 12)
!5674 = distinct !DILexicalBlock(scope: !5668, file: !1, line: 2809, column: 7)
!5675 = !DILocation(line: 2810, column: 23, scope: !5673)
!5676 = !DILocation(line: 2810, column: 12, scope: !5674)
!5677 = !DILocation(line: 2812, column: 25, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !1, line: 2812, column: 14)
!5679 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 2811, column: 9)
!5680 = !DILocation(line: 2812, column: 14, scope: !5678)
!5681 = !DILocation(line: 2812, column: 37, scope: !5678)
!5682 = !DILocation(line: 2812, column: 14, scope: !5679)
!5683 = !DILocation(line: 2813, column: 18, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !1, line: 2813, column: 17)
!5685 = distinct !DILexicalBlock(scope: !5678, file: !1, line: 2812, column: 42)
!5686 = !DILocation(line: 2813, column: 18, scope: !5687)
!5687 = !DILexicalBlockFile(scope: !5684, file: !1, discriminator: 1)
!5688 = !DILocation(line: 2813, column: 18, scope: !5689)
!5689 = !DILexicalBlockFile(scope: !5684, file: !1, discriminator: 2)
!5690 = !DILocation(line: 2813, column: 17, scope: !5689)
!5691 = !DILocation(line: 2814, column: 15, scope: !5684)
!5692 = !DILocation(line: 2815, column: 21, scope: !5685)
!5693 = !DILocation(line: 2815, column: 65, scope: !5685)
!5694 = !DILocation(line: 2815, column: 18, scope: !5685)
!5695 = !DILocation(line: 2816, column: 13, scope: !5685)
!5696 = !DILocation(line: 2817, column: 4, scope: !5685)
!5697 = !DILocation(line: 2819, column: 14, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5679, file: !1, line: 2819, column: 14)
!5699 = !DILocation(line: 2819, column: 19, scope: !5698)
!5700 = !DILocation(line: 2819, column: 39, scope: !5698)
!5701 = !DILocation(line: 2819, column: 14, scope: !5679)
!5702 = !DILocation(line: 2821, column: 13, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5698, file: !1, line: 2820, column: 11)
!5704 = !DILocation(line: 2821, column: 18, scope: !5703)
!5705 = !DILocation(line: 2821, column: 37, scope: !5703)
!5706 = !DILocation(line: 2822, column: 21, scope: !5703)
!5707 = !DILocation(line: 2822, column: 26, scope: !5703)
!5708 = !DILocation(line: 2822, column: 18, scope: !5703)
!5709 = !DILocation(line: 2823, column: 11, scope: !5703)
!5710 = !DILocation(line: 2827, column: 32, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 2826, column: 17)
!5712 = distinct !DILexicalBlock(scope: !5698, file: !1, line: 2825, column: 11)
!5713 = !DILocation(line: 2827, column: 36, scope: !5711)
!5714 = !DILocation(line: 2827, column: 41, scope: !5711)
!5715 = !DILocation(line: 2827, column: 15, scope: !5711)
!5716 = !DILocation(line: 2826, column: 34, scope: !5711)
!5717 = !DILocation(line: 2827, column: 57, scope: !5711)
!5718 = !DILocation(line: 2826, column: 17, scope: !5712)
!5719 = !DILocation(line: 2828, column: 15, scope: !5711)
!5720 = !DILocation(line: 2829, column: 16, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 2829, column: 16)
!5722 = !DILocation(line: 2829, column: 32, scope: !5721)
!5723 = !DILocation(line: 2829, column: 16, scope: !5712)
!5724 = !DILocation(line: 2831, column: 15, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5721, file: !1, line: 2830, column: 13)
!5726 = !DILocation(line: 2831, column: 20, scope: !5725)
!5727 = !DILocation(line: 2831, column: 40, scope: !5725)
!5728 = !DILocation(line: 2832, column: 23, scope: !5725)
!5729 = !DILocation(line: 2832, column: 28, scope: !5725)
!5730 = !DILocation(line: 2832, column: 20, scope: !5725)
!5731 = !DILocation(line: 2833, column: 13, scope: !5725)
!5732 = !DILocation(line: 2836, column: 23, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5721, file: !1, line: 2835, column: 13)
!5734 = !DILocation(line: 2836, column: 20, scope: !5733)
!5735 = !DILocation(line: 2837, column: 36, scope: !5733)
!5736 = !DILocation(line: 2837, column: 15, scope: !5733)
!5737 = !DILocation(line: 2837, column: 20, scope: !5733)
!5738 = !DILocation(line: 2837, column: 34, scope: !5733)
!5739 = !DILocation(line: 2840, column: 9, scope: !5679)
!5740 = !DILocation(line: 2842, column: 16, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 2842, column: 15)
!5742 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 2841, column: 14)
!5743 = !DILocation(line: 2842, column: 16, scope: !5744)
!5744 = !DILexicalBlockFile(scope: !5741, file: !1, discriminator: 1)
!5745 = !DILocation(line: 2842, column: 16, scope: !5746)
!5746 = !DILexicalBlockFile(scope: !5741, file: !1, discriminator: 2)
!5747 = !DILocation(line: 2842, column: 15, scope: !5746)
!5748 = !DILocation(line: 2843, column: 13, scope: !5741)
!5749 = !DILocation(line: 2844, column: 19, scope: !5742)
!5750 = !DILocation(line: 2844, column: 16, scope: !5742)
!5751 = !DILocation(line: 2845, column: 11, scope: !5742)
!5752 = !DILocation(line: 2847, column: 7, scope: !5674)
!5753 = !DILocation(line: 2849, column: 11, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2849, column: 11)
!5755 = !DILocation(line: 2849, column: 16, scope: !5754)
!5756 = !DILocation(line: 2849, column: 11, scope: !5609)
!5757 = !DILocation(line: 2850, column: 12, scope: !5754)
!5758 = !DILocation(line: 2850, column: 9, scope: !5754)
!5759 = !DILocation(line: 2851, column: 11, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2851, column: 11)
!5761 = !DILocation(line: 2851, column: 16, scope: !5760)
!5762 = !DILocation(line: 2851, column: 11, scope: !5609)
!5763 = !DILocation(line: 2852, column: 12, scope: !5760)
!5764 = !DILocation(line: 2852, column: 9, scope: !5760)
!5765 = !DILocation(line: 2854, column: 13, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 2854, column: 7)
!5767 = !DILocation(line: 2854, column: 11, scope: !5766)
!5768 = !DILocation(line: 2854, column: 18, scope: !5769)
!5769 = !DILexicalBlockFile(scope: !5770, file: !1, discriminator: 1)
!5770 = distinct !DILexicalBlock(scope: !5766, file: !1, line: 2854, column: 7)
!5771 = !DILocation(line: 2854, column: 20, scope: !5769)
!5772 = !DILocation(line: 2854, column: 7, scope: !5769)
!5773 = !DILocation(line: 2855, column: 44, scope: !5770)
!5774 = !DILocation(line: 2855, column: 45, scope: !5770)
!5775 = !DILocation(line: 2855, column: 29, scope: !5770)
!5776 = !DILocation(line: 2855, column: 34, scope: !5770)
!5777 = !DILocation(line: 2855, column: 24, scope: !5770)
!5778 = !DILocation(line: 2855, column: 9, scope: !5770)
!5779 = !DILocation(line: 2855, column: 14, scope: !5770)
!5780 = !DILocation(line: 2855, column: 27, scope: !5770)
!5781 = !DILocation(line: 2854, column: 26, scope: !5782)
!5782 = !DILexicalBlockFile(scope: !5770, file: !1, discriminator: 2)
!5783 = !DILocation(line: 2854, column: 7, scope: !5782)
!5784 = !DILocation(line: 2856, column: 27, scope: !5609)
!5785 = !DILocation(line: 2856, column: 7, scope: !5609)
!5786 = !DILocation(line: 2856, column: 12, scope: !5609)
!5787 = !DILocation(line: 2856, column: 25, scope: !5609)
!5788 = !DILocation(line: 2859, column: 23, scope: !5335)
!5789 = !DILocation(line: 2859, column: 5, scope: !5335)
!5790 = !DILocation(line: 2859, column: 10, scope: !5335)
!5791 = !DILocation(line: 2859, column: 21, scope: !5335)
!5792 = !DILocation(line: 2860, column: 23, scope: !5335)
!5793 = !DILocation(line: 2860, column: 5, scope: !5335)
!5794 = !DILocation(line: 2860, column: 10, scope: !5335)
!5795 = !DILocation(line: 2860, column: 21, scope: !5335)
!5796 = !DILocation(line: 2861, column: 5, scope: !5335)
!5797 = !DILocation(line: 2861, column: 10, scope: !5335)
!5798 = !DILocation(line: 2861, column: 28, scope: !5335)
!5799 = !DILocation(line: 2689, column: 3, scope: !5800)
!5800 = !DILexicalBlockFile(scope: !635, file: !1, discriminator: 1)
!5801 = !DILocation(line: 2864, column: 22, scope: !635)
!5802 = !DILocation(line: 2864, column: 25, scope: !635)
!5803 = !DILocation(line: 2864, column: 3, scope: !635)
!5804 = !DILocation(line: 2866, column: 3, scope: !635)
!5805 = !DILocation(line: 2866, column: 8, scope: !635)
!5806 = !DILocation(line: 2866, column: 14, scope: !635)
!5807 = !DILocation(line: 2867, column: 3, scope: !635)
!5808 = !DILocation(line: 2869, column: 22, scope: !635)
!5809 = !DILocation(line: 2869, column: 25, scope: !635)
!5810 = !DILocation(line: 2869, column: 3, scope: !635)
!5811 = !DILocation(line: 2871, column: 3, scope: !635)
!5812 = !DILocation(line: 2872, column: 1, scope: !635)
!5813 = !DILocalVariable(name: "lzss", arg: 1, scope: !582, file: !1, line: 544, type: !585)
!5814 = !DILocation(line: 544, column: 39, scope: !582)
!5815 = !DILocalVariable(name: "pos", arg: 2, scope: !582, file: !1, line: 544, type: !52)
!5816 = !DILocation(line: 544, column: 53, scope: !582)
!5817 = !DILocation(line: 546, column: 16, scope: !582)
!5818 = !DILocation(line: 546, column: 22, scope: !582)
!5819 = !DILocation(line: 546, column: 28, scope: !582)
!5820 = !DILocation(line: 546, column: 20, scope: !582)
!5821 = !DILocation(line: 546, column: 10, scope: !582)
!5822 = !DILocation(line: 546, column: 3, scope: !582)
!5823 = !DILocalVariable(name: "lzss", arg: 1, scope: !586, file: !1, line: 538, type: !585)
!5824 = !DILocation(line: 538, column: 24, scope: !586)
!5825 = !DILocation(line: 540, column: 10, scope: !586)
!5826 = !DILocation(line: 540, column: 16, scope: !586)
!5827 = !DILocation(line: 540, column: 21, scope: !586)
!5828 = !DILocation(line: 540, column: 3, scope: !586)
!5829 = !DILocalVariable(name: "a", arg: 1, scope: !593, file: !1, line: 399, type: !4)
!5830 = !DILocation(line: 399, column: 36, scope: !593)
!5831 = !DILocalVariable(name: "br", arg: 2, scope: !593, file: !1, line: 399, type: !592)
!5832 = !DILocation(line: 399, column: 54, scope: !593)
!5833 = !DILocalVariable(name: "rar", scope: !593, file: !1, line: 401, type: !292)
!5834 = !DILocation(line: 401, column: 15, scope: !593)
!5835 = !DILocation(line: 401, column: 36, scope: !593)
!5836 = !DILocation(line: 401, column: 39, scope: !593)
!5837 = !DILocation(line: 401, column: 47, scope: !593)
!5838 = !DILocation(line: 401, column: 21, scope: !593)
!5839 = !DILocalVariable(name: "n", scope: !593, file: !1, line: 402, type: !23)
!5840 = !DILocation(line: 402, column: 7, scope: !593)
!5841 = !DILocation(line: 402, column: 24, scope: !593)
!5842 = !DILocation(line: 402, column: 28, scope: !593)
!5843 = !DILocation(line: 402, column: 22, scope: !593)
!5844 = !DILocation(line: 402, column: 11, scope: !593)
!5845 = !DILocation(line: 404, column: 3, scope: !593)
!5846 = !DILocation(line: 405, column: 13, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5848, file: !1, line: 404, column: 12)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !1, line: 404, column: 3)
!5849 = distinct !DILexicalBlock(scope: !593, file: !1, line: 404, column: 3)
!5850 = !DILocation(line: 405, column: 15, scope: !5847)
!5851 = !DILocation(line: 405, column: 5, scope: !5847)
!5852 = !DILocation(line: 407, column: 11, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5854, file: !1, line: 407, column: 11)
!5854 = distinct !DILexicalBlock(scope: !5847, file: !1, line: 405, column: 21)
!5855 = !DILocation(line: 407, column: 15, scope: !5853)
!5856 = !DILocation(line: 407, column: 24, scope: !5853)
!5857 = !DILocation(line: 407, column: 11, scope: !5854)
!5858 = !DILocation(line: 409, column: 24, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5853, file: !1, line: 407, column: 30)
!5860 = !DILocation(line: 409, column: 28, scope: !5859)
!5861 = !DILocation(line: 409, column: 14, scope: !5859)
!5862 = !DILocation(line: 409, column: 40, scope: !5859)
!5863 = !DILocation(line: 410, column: 24, scope: !5859)
!5864 = !DILocation(line: 410, column: 28, scope: !5859)
!5865 = !DILocation(line: 410, column: 14, scope: !5859)
!5866 = !DILocation(line: 410, column: 40, scope: !5859)
!5867 = !DILocation(line: 409, column: 46, scope: !5859)
!5868 = !DILocation(line: 411, column: 24, scope: !5859)
!5869 = !DILocation(line: 411, column: 28, scope: !5859)
!5870 = !DILocation(line: 411, column: 14, scope: !5859)
!5871 = !DILocation(line: 411, column: 40, scope: !5859)
!5872 = !DILocation(line: 410, column: 46, scope: !5859)
!5873 = !DILocation(line: 412, column: 24, scope: !5859)
!5874 = !DILocation(line: 412, column: 28, scope: !5859)
!5875 = !DILocation(line: 412, column: 14, scope: !5859)
!5876 = !DILocation(line: 412, column: 40, scope: !5859)
!5877 = !DILocation(line: 411, column: 46, scope: !5859)
!5878 = !DILocation(line: 413, column: 24, scope: !5859)
!5879 = !DILocation(line: 413, column: 28, scope: !5859)
!5880 = !DILocation(line: 413, column: 14, scope: !5859)
!5881 = !DILocation(line: 413, column: 40, scope: !5859)
!5882 = !DILocation(line: 413, column: 13, scope: !5859)
!5883 = !DILocation(line: 412, column: 46, scope: !5859)
!5884 = !DILocation(line: 414, column: 24, scope: !5859)
!5885 = !DILocation(line: 414, column: 28, scope: !5859)
!5886 = !DILocation(line: 414, column: 14, scope: !5859)
!5887 = !DILocation(line: 414, column: 40, scope: !5859)
!5888 = !DILocation(line: 414, column: 13, scope: !5859)
!5889 = !DILocation(line: 413, column: 46, scope: !5859)
!5890 = !DILocation(line: 415, column: 24, scope: !5859)
!5891 = !DILocation(line: 415, column: 28, scope: !5859)
!5892 = !DILocation(line: 415, column: 14, scope: !5859)
!5893 = !DILocation(line: 415, column: 40, scope: !5859)
!5894 = !DILocation(line: 415, column: 13, scope: !5859)
!5895 = !DILocation(line: 414, column: 46, scope: !5859)
!5896 = !DILocation(line: 416, column: 24, scope: !5859)
!5897 = !DILocation(line: 416, column: 28, scope: !5859)
!5898 = !DILocation(line: 416, column: 14, scope: !5859)
!5899 = !DILocation(line: 415, column: 45, scope: !5859)
!5900 = !DILocation(line: 408, column: 9, scope: !5859)
!5901 = !DILocation(line: 408, column: 13, scope: !5859)
!5902 = !DILocation(line: 408, column: 26, scope: !5859)
!5903 = !DILocation(line: 417, column: 9, scope: !5859)
!5904 = !DILocation(line: 417, column: 13, scope: !5859)
!5905 = !DILocation(line: 417, column: 21, scope: !5859)
!5906 = !DILocation(line: 418, column: 9, scope: !5859)
!5907 = !DILocation(line: 418, column: 13, scope: !5859)
!5908 = !DILocation(line: 418, column: 22, scope: !5859)
!5909 = !DILocation(line: 419, column: 9, scope: !5859)
!5910 = !DILocation(line: 419, column: 13, scope: !5859)
!5911 = !DILocation(line: 419, column: 25, scope: !5859)
!5912 = !DILocation(line: 420, column: 9, scope: !5859)
!5913 = !DILocation(line: 420, column: 14, scope: !5859)
!5914 = !DILocation(line: 420, column: 31, scope: !5859)
!5915 = !DILocation(line: 421, column: 9, scope: !5859)
!5916 = !DILocation(line: 421, column: 14, scope: !5859)
!5917 = !DILocation(line: 421, column: 30, scope: !5859)
!5918 = !DILocation(line: 422, column: 9, scope: !5859)
!5919 = !DILocation(line: 424, column: 7, scope: !5854)
!5920 = !DILocation(line: 426, column: 11, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5854, file: !1, line: 426, column: 11)
!5922 = !DILocation(line: 426, column: 15, scope: !5921)
!5923 = !DILocation(line: 426, column: 24, scope: !5921)
!5924 = !DILocation(line: 426, column: 11, scope: !5854)
!5925 = !DILocation(line: 428, column: 13, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5921, file: !1, line: 426, column: 30)
!5927 = !DILocation(line: 428, column: 17, scope: !5926)
!5928 = !DILocation(line: 428, column: 30, scope: !5926)
!5929 = !DILocation(line: 429, column: 24, scope: !5926)
!5930 = !DILocation(line: 429, column: 28, scope: !5926)
!5931 = !DILocation(line: 429, column: 14, scope: !5926)
!5932 = !DILocation(line: 429, column: 40, scope: !5926)
!5933 = !DILocation(line: 428, column: 37, scope: !5926)
!5934 = !DILocation(line: 430, column: 24, scope: !5926)
!5935 = !DILocation(line: 430, column: 28, scope: !5926)
!5936 = !DILocation(line: 430, column: 14, scope: !5926)
!5937 = !DILocation(line: 430, column: 40, scope: !5926)
!5938 = !DILocation(line: 429, column: 46, scope: !5926)
!5939 = !DILocation(line: 431, column: 24, scope: !5926)
!5940 = !DILocation(line: 431, column: 28, scope: !5926)
!5941 = !DILocation(line: 431, column: 14, scope: !5926)
!5942 = !DILocation(line: 431, column: 40, scope: !5926)
!5943 = !DILocation(line: 430, column: 46, scope: !5926)
!5944 = !DILocation(line: 432, column: 24, scope: !5926)
!5945 = !DILocation(line: 432, column: 28, scope: !5926)
!5946 = !DILocation(line: 432, column: 14, scope: !5926)
!5947 = !DILocation(line: 432, column: 40, scope: !5926)
!5948 = !DILocation(line: 432, column: 13, scope: !5926)
!5949 = !DILocation(line: 431, column: 46, scope: !5926)
!5950 = !DILocation(line: 433, column: 24, scope: !5926)
!5951 = !DILocation(line: 433, column: 28, scope: !5926)
!5952 = !DILocation(line: 433, column: 14, scope: !5926)
!5953 = !DILocation(line: 433, column: 40, scope: !5926)
!5954 = !DILocation(line: 433, column: 13, scope: !5926)
!5955 = !DILocation(line: 432, column: 46, scope: !5926)
!5956 = !DILocation(line: 434, column: 24, scope: !5926)
!5957 = !DILocation(line: 434, column: 28, scope: !5926)
!5958 = !DILocation(line: 434, column: 14, scope: !5926)
!5959 = !DILocation(line: 434, column: 40, scope: !5926)
!5960 = !DILocation(line: 434, column: 13, scope: !5926)
!5961 = !DILocation(line: 433, column: 46, scope: !5926)
!5962 = !DILocation(line: 435, column: 24, scope: !5926)
!5963 = !DILocation(line: 435, column: 28, scope: !5926)
!5964 = !DILocation(line: 435, column: 14, scope: !5926)
!5965 = !DILocation(line: 434, column: 45, scope: !5926)
!5966 = !DILocation(line: 427, column: 9, scope: !5926)
!5967 = !DILocation(line: 427, column: 13, scope: !5926)
!5968 = !DILocation(line: 427, column: 26, scope: !5926)
!5969 = !DILocation(line: 436, column: 9, scope: !5926)
!5970 = !DILocation(line: 436, column: 13, scope: !5926)
!5971 = !DILocation(line: 436, column: 21, scope: !5926)
!5972 = !DILocation(line: 437, column: 9, scope: !5926)
!5973 = !DILocation(line: 437, column: 13, scope: !5926)
!5974 = !DILocation(line: 437, column: 22, scope: !5926)
!5975 = !DILocation(line: 438, column: 9, scope: !5926)
!5976 = !DILocation(line: 438, column: 13, scope: !5926)
!5977 = !DILocation(line: 438, column: 25, scope: !5926)
!5978 = !DILocation(line: 439, column: 9, scope: !5926)
!5979 = !DILocation(line: 439, column: 14, scope: !5926)
!5980 = !DILocation(line: 439, column: 31, scope: !5926)
!5981 = !DILocation(line: 440, column: 9, scope: !5926)
!5982 = !DILocation(line: 440, column: 14, scope: !5926)
!5983 = !DILocation(line: 440, column: 30, scope: !5926)
!5984 = !DILocation(line: 441, column: 9, scope: !5926)
!5985 = !DILocation(line: 443, column: 7, scope: !5854)
!5986 = !DILocation(line: 445, column: 11, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5854, file: !1, line: 445, column: 11)
!5988 = !DILocation(line: 445, column: 15, scope: !5987)
!5989 = !DILocation(line: 445, column: 24, scope: !5987)
!5990 = !DILocation(line: 445, column: 11, scope: !5854)
!5991 = !DILocation(line: 447, column: 13, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5987, file: !1, line: 445, column: 30)
!5993 = !DILocation(line: 447, column: 17, scope: !5992)
!5994 = !DILocation(line: 447, column: 30, scope: !5992)
!5995 = !DILocation(line: 448, column: 24, scope: !5992)
!5996 = !DILocation(line: 448, column: 28, scope: !5992)
!5997 = !DILocation(line: 448, column: 14, scope: !5992)
!5998 = !DILocation(line: 448, column: 40, scope: !5992)
!5999 = !DILocation(line: 447, column: 37, scope: !5992)
!6000 = !DILocation(line: 449, column: 24, scope: !5992)
!6001 = !DILocation(line: 449, column: 28, scope: !5992)
!6002 = !DILocation(line: 449, column: 14, scope: !5992)
!6003 = !DILocation(line: 449, column: 40, scope: !5992)
!6004 = !DILocation(line: 448, column: 46, scope: !5992)
!6005 = !DILocation(line: 450, column: 24, scope: !5992)
!6006 = !DILocation(line: 450, column: 28, scope: !5992)
!6007 = !DILocation(line: 450, column: 14, scope: !5992)
!6008 = !DILocation(line: 450, column: 40, scope: !5992)
!6009 = !DILocation(line: 450, column: 13, scope: !5992)
!6010 = !DILocation(line: 449, column: 46, scope: !5992)
!6011 = !DILocation(line: 451, column: 24, scope: !5992)
!6012 = !DILocation(line: 451, column: 28, scope: !5992)
!6013 = !DILocation(line: 451, column: 14, scope: !5992)
!6014 = !DILocation(line: 451, column: 40, scope: !5992)
!6015 = !DILocation(line: 451, column: 13, scope: !5992)
!6016 = !DILocation(line: 450, column: 46, scope: !5992)
!6017 = !DILocation(line: 452, column: 24, scope: !5992)
!6018 = !DILocation(line: 452, column: 28, scope: !5992)
!6019 = !DILocation(line: 452, column: 14, scope: !5992)
!6020 = !DILocation(line: 452, column: 40, scope: !5992)
!6021 = !DILocation(line: 452, column: 13, scope: !5992)
!6022 = !DILocation(line: 451, column: 46, scope: !5992)
!6023 = !DILocation(line: 453, column: 24, scope: !5992)
!6024 = !DILocation(line: 453, column: 28, scope: !5992)
!6025 = !DILocation(line: 453, column: 14, scope: !5992)
!6026 = !DILocation(line: 452, column: 45, scope: !5992)
!6027 = !DILocation(line: 446, column: 9, scope: !5992)
!6028 = !DILocation(line: 446, column: 13, scope: !5992)
!6029 = !DILocation(line: 446, column: 26, scope: !5992)
!6030 = !DILocation(line: 454, column: 9, scope: !5992)
!6031 = !DILocation(line: 454, column: 13, scope: !5992)
!6032 = !DILocation(line: 454, column: 21, scope: !5992)
!6033 = !DILocation(line: 455, column: 9, scope: !5992)
!6034 = !DILocation(line: 455, column: 13, scope: !5992)
!6035 = !DILocation(line: 455, column: 22, scope: !5992)
!6036 = !DILocation(line: 456, column: 9, scope: !5992)
!6037 = !DILocation(line: 456, column: 13, scope: !5992)
!6038 = !DILocation(line: 456, column: 25, scope: !5992)
!6039 = !DILocation(line: 457, column: 9, scope: !5992)
!6040 = !DILocation(line: 457, column: 14, scope: !5992)
!6041 = !DILocation(line: 457, column: 31, scope: !5992)
!6042 = !DILocation(line: 458, column: 9, scope: !5992)
!6043 = !DILocation(line: 458, column: 14, scope: !5992)
!6044 = !DILocation(line: 458, column: 30, scope: !5992)
!6045 = !DILocation(line: 459, column: 9, scope: !5992)
!6046 = !DILocation(line: 461, column: 7, scope: !5854)
!6047 = !DILocation(line: 465, column: 7, scope: !5854)
!6048 = !DILocation(line: 467, column: 7, scope: !5854)
!6049 = !DILocation(line: 469, column: 9, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5847, file: !1, line: 469, column: 9)
!6051 = !DILocation(line: 469, column: 13, scope: !6050)
!6052 = !DILocation(line: 469, column: 22, scope: !6050)
!6053 = !DILocation(line: 469, column: 9, scope: !5847)
!6054 = !DILocation(line: 471, column: 11, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !1, line: 471, column: 11)
!6056 = distinct !DILexicalBlock(scope: !6050, file: !1, line: 469, column: 28)
!6057 = !DILocation(line: 471, column: 16, scope: !6055)
!6058 = !DILocation(line: 471, column: 33, scope: !6055)
!6059 = !DILocation(line: 471, column: 11, scope: !6056)
!6060 = !DILocation(line: 474, column: 32, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6055, file: !1, line: 471, column: 38)
!6062 = !DILocation(line: 474, column: 35, scope: !6061)
!6063 = !DILocation(line: 474, column: 40, scope: !6061)
!6064 = !DILocation(line: 474, column: 9, scope: !6061)
!6065 = !DILocation(line: 475, column: 9, scope: !6061)
!6066 = !DILocation(line: 475, column: 14, scope: !6061)
!6067 = !DILocation(line: 475, column: 31, scope: !6061)
!6068 = !DILocation(line: 476, column: 7, scope: !6061)
!6069 = !DILocation(line: 477, column: 36, scope: !6056)
!6070 = !DILocation(line: 477, column: 44, scope: !6056)
!6071 = !DILocation(line: 477, column: 48, scope: !6056)
!6072 = !DILocation(line: 477, column: 21, scope: !6056)
!6073 = !DILocation(line: 477, column: 7, scope: !6056)
!6074 = !DILocation(line: 477, column: 11, scope: !6056)
!6075 = !DILocation(line: 477, column: 19, scope: !6056)
!6076 = !DILocation(line: 478, column: 11, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6056, file: !1, line: 478, column: 11)
!6078 = !DILocation(line: 478, column: 15, scope: !6077)
!6079 = !DILocation(line: 478, column: 23, scope: !6077)
!6080 = !DILocation(line: 478, column: 11, scope: !6056)
!6081 = !DILocation(line: 479, column: 9, scope: !6077)
!6082 = !DILocation(line: 480, column: 11, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6056, file: !1, line: 480, column: 11)
!6084 = !DILocation(line: 480, column: 15, scope: !6083)
!6085 = !DILocation(line: 480, column: 24, scope: !6083)
!6086 = !DILocation(line: 480, column: 11, scope: !6056)
!6087 = !DILocation(line: 481, column: 9, scope: !6083)
!6088 = !DILocation(line: 482, column: 5, scope: !6056)
!6089 = !DILocation(line: 484, column: 9, scope: !5847)
!6090 = !DILocation(line: 484, column: 13, scope: !5847)
!6091 = !DILocation(line: 484, column: 26, scope: !5847)
!6092 = !DILocation(line: 484, column: 35, scope: !5847)
!6093 = !DILocation(line: 484, column: 39, scope: !5847)
!6094 = !DILocation(line: 484, column: 46, scope: !5847)
!6095 = !DILocation(line: 484, column: 34, scope: !5847)
!6096 = !DILocation(line: 484, column: 32, scope: !5847)
!6097 = !DILocation(line: 483, column: 5, scope: !5847)
!6098 = !DILocation(line: 483, column: 9, scope: !5847)
!6099 = !DILocation(line: 483, column: 22, scope: !5847)
!6100 = !DILocation(line: 485, column: 5, scope: !5847)
!6101 = !DILocation(line: 485, column: 9, scope: !5847)
!6102 = !DILocation(line: 485, column: 17, scope: !5847)
!6103 = !DILocation(line: 486, column: 5, scope: !5847)
!6104 = !DILocation(line: 486, column: 9, scope: !5847)
!6105 = !DILocation(line: 486, column: 21, scope: !5847)
!6106 = !DILocation(line: 487, column: 7, scope: !5847)
!6107 = !DILocation(line: 488, column: 5, scope: !5847)
!6108 = !DILocation(line: 488, column: 10, scope: !5847)
!6109 = !DILocation(line: 488, column: 26, scope: !5847)
!6110 = !DILocation(line: 489, column: 5, scope: !5847)
!6111 = !DILocation(line: 489, column: 10, scope: !5847)
!6112 = !DILocation(line: 489, column: 25, scope: !5847)
!6113 = !DILocation(line: 404, column: 3, scope: !6114)
!6114 = !DILexicalBlockFile(scope: !5848, file: !1, discriminator: 1)
!6115 = !DILocation(line: 491, column: 1, scope: !593)
!6116 = !DILocalVariable(name: "a", arg: 1, scope: !595, file: !1, line: 2335, type: !4)
!6117 = !DILocation(line: 2335, column: 33, scope: !595)
!6118 = !DILocalVariable(name: "rar", scope: !595, file: !1, line: 2337, type: !292)
!6119 = !DILocation(line: 2337, column: 15, scope: !595)
!6120 = !DILocation(line: 2337, column: 36, scope: !595)
!6121 = !DILocation(line: 2337, column: 39, scope: !595)
!6122 = !DILocation(line: 2337, column: 47, scope: !595)
!6123 = !DILocation(line: 2337, column: 21, scope: !595)
!6124 = !DILocation(line: 2338, column: 8, scope: !595)
!6125 = !DILocation(line: 2338, column: 13, scope: !595)
!6126 = !DILocation(line: 2338, column: 22, scope: !595)
!6127 = !DILocation(line: 2338, column: 3, scope: !595)
!6128 = !DILocation(line: 2339, column: 8, scope: !595)
!6129 = !DILocation(line: 2339, column: 13, scope: !595)
!6130 = !DILocation(line: 2339, column: 24, scope: !595)
!6131 = !DILocation(line: 2339, column: 3, scope: !595)
!6132 = !DILocation(line: 2340, column: 8, scope: !595)
!6133 = !DILocation(line: 2340, column: 13, scope: !595)
!6134 = !DILocation(line: 2340, column: 27, scope: !595)
!6135 = !DILocation(line: 2340, column: 3, scope: !595)
!6136 = !DILocation(line: 2341, column: 8, scope: !595)
!6137 = !DILocation(line: 2341, column: 13, scope: !595)
!6138 = !DILocation(line: 2341, column: 24, scope: !595)
!6139 = !DILocation(line: 2341, column: 3, scope: !595)
!6140 = !DILocation(line: 2342, column: 8, scope: !595)
!6141 = !DILocation(line: 2342, column: 13, scope: !595)
!6142 = !DILocation(line: 2342, column: 22, scope: !595)
!6143 = !DILocation(line: 2342, column: 3, scope: !595)
!6144 = !DILocation(line: 2343, column: 8, scope: !595)
!6145 = !DILocation(line: 2343, column: 13, scope: !595)
!6146 = !DILocation(line: 2343, column: 24, scope: !595)
!6147 = !DILocation(line: 2343, column: 3, scope: !595)
!6148 = !DILocation(line: 2344, column: 8, scope: !595)
!6149 = !DILocation(line: 2344, column: 13, scope: !595)
!6150 = !DILocation(line: 2344, column: 27, scope: !595)
!6151 = !DILocation(line: 2344, column: 3, scope: !595)
!6152 = !DILocation(line: 2345, column: 8, scope: !595)
!6153 = !DILocation(line: 2345, column: 13, scope: !595)
!6154 = !DILocation(line: 2345, column: 24, scope: !595)
!6155 = !DILocation(line: 2345, column: 3, scope: !595)
!6156 = !DILocation(line: 2346, column: 11, scope: !595)
!6157 = !DILocation(line: 2346, column: 16, scope: !595)
!6158 = !DILocation(line: 2346, column: 3, scope: !595)
!6159 = !DILocation(line: 2347, column: 11, scope: !595)
!6160 = !DILocation(line: 2347, column: 16, scope: !595)
!6161 = !DILocation(line: 2347, column: 3, scope: !595)
!6162 = !DILocation(line: 2348, column: 11, scope: !595)
!6163 = !DILocation(line: 2348, column: 16, scope: !595)
!6164 = !DILocation(line: 2348, column: 3, scope: !595)
!6165 = !DILocation(line: 2349, column: 11, scope: !595)
!6166 = !DILocation(line: 2349, column: 16, scope: !595)
!6167 = !DILocation(line: 2349, column: 3, scope: !595)
!6168 = !DILocation(line: 2350, column: 1, scope: !595)
!6169 = !DILocalVariable(name: "p", arg: 1, scope: !598, file: !1, line: 622, type: !123)
!6170 = !DILocation(line: 622, column: 17, scope: !598)
!6171 = !DILocalVariable(name: "a", scope: !598, file: !1, line: 624, type: !4)
!6172 = !DILocation(line: 624, column: 24, scope: !598)
!6173 = !DILocation(line: 624, column: 39, scope: !598)
!6174 = !DILocation(line: 624, column: 29, scope: !598)
!6175 = !DILocation(line: 624, column: 43, scope: !598)
!6176 = !DILocalVariable(name: "rar", scope: !598, file: !1, line: 625, type: !292)
!6177 = !DILocation(line: 625, column: 15, scope: !598)
!6178 = !DILocation(line: 625, column: 36, scope: !598)
!6179 = !DILocation(line: 625, column: 39, scope: !598)
!6180 = !DILocation(line: 625, column: 47, scope: !598)
!6181 = !DILocation(line: 625, column: 21, scope: !598)
!6182 = !DILocalVariable(name: "br", scope: !598, file: !1, line: 626, type: !592)
!6183 = !DILocation(line: 626, column: 18, scope: !598)
!6184 = !DILocation(line: 626, column: 25, scope: !598)
!6185 = !DILocation(line: 626, column: 30, scope: !598)
!6186 = !DILocalVariable(name: "b", scope: !598, file: !1, line: 627, type: !432)
!6187 = !DILocation(line: 627, column: 8, scope: !598)
!6188 = !DILocation(line: 628, column: 8, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !598, file: !1, line: 628, column: 7)
!6190 = !DILocation(line: 628, column: 8, scope: !6191)
!6191 = !DILexicalBlockFile(scope: !6189, file: !1, discriminator: 1)
!6192 = !DILocation(line: 628, column: 8, scope: !6193)
!6193 = !DILexicalBlockFile(scope: !6189, file: !1, discriminator: 2)
!6194 = !DILocation(line: 628, column: 7, scope: !6193)
!6195 = !DILocation(line: 630, column: 24, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6189, file: !1, line: 629, column: 3)
!6197 = !DILocation(line: 630, column: 27, scope: !6196)
!6198 = !DILocation(line: 630, column: 5, scope: !6196)
!6199 = !DILocation(line: 632, column: 5, scope: !6196)
!6200 = !DILocation(line: 632, column: 10, scope: !6196)
!6201 = !DILocation(line: 632, column: 16, scope: !6196)
!6202 = !DILocation(line: 633, column: 5, scope: !6196)
!6203 = !DILocation(line: 635, column: 7, scope: !598)
!6204 = !DILocation(line: 635, column: 5, scope: !598)
!6205 = !DILocation(line: 636, column: 3, scope: !598)
!6206 = !DILocation(line: 637, column: 10, scope: !598)
!6207 = !DILocation(line: 637, column: 3, scope: !598)
!6208 = !DILocation(line: 638, column: 1, scope: !598)
!6209 = !DILocalVariable(name: "a", arg: 1, scope: !599, file: !1, line: 2426, type: !4)
!6210 = !DILocation(line: 2426, column: 34, scope: !599)
!6211 = !DILocalVariable(name: "code", arg: 2, scope: !599, file: !1, line: 2426, type: !602)
!6212 = !DILocation(line: 2426, column: 58, scope: !599)
!6213 = !DILocalVariable(name: "lengths", arg: 3, scope: !599, file: !1, line: 2427, type: !342)
!6214 = !DILocation(line: 2427, column: 28, scope: !599)
!6215 = !DILocalVariable(name: "numsymbols", arg: 4, scope: !599, file: !1, line: 2427, type: !23)
!6216 = !DILocation(line: 2427, column: 41, scope: !599)
!6217 = !DILocalVariable(name: "maxlength", arg: 5, scope: !599, file: !1, line: 2427, type: !82)
!6218 = !DILocation(line: 2427, column: 58, scope: !599)
!6219 = !DILocalVariable(name: "i", scope: !599, file: !1, line: 2429, type: !23)
!6220 = !DILocation(line: 2429, column: 7, scope: !599)
!6221 = !DILocalVariable(name: "j", scope: !599, file: !1, line: 2429, type: !23)
!6222 = !DILocation(line: 2429, column: 10, scope: !599)
!6223 = !DILocalVariable(name: "codebits", scope: !599, file: !1, line: 2429, type: !23)
!6224 = !DILocation(line: 2429, column: 13, scope: !599)
!6225 = !DILocalVariable(name: "symbolsleft", scope: !599, file: !1, line: 2429, type: !23)
!6226 = !DILocation(line: 2429, column: 27, scope: !599)
!6227 = !DILocation(line: 2429, column: 41, scope: !599)
!6228 = !DILocation(line: 2431, column: 3, scope: !599)
!6229 = !DILocation(line: 2431, column: 9, scope: !599)
!6230 = !DILocation(line: 2431, column: 20, scope: !599)
!6231 = !DILocation(line: 2432, column: 3, scope: !599)
!6232 = !DILocation(line: 2432, column: 9, scope: !599)
!6233 = !DILocation(line: 2432, column: 29, scope: !599)
!6234 = !DILocation(line: 2433, column: 16, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !599, file: !1, line: 2433, column: 7)
!6236 = !DILocation(line: 2433, column: 7, scope: !6235)
!6237 = !DILocation(line: 2433, column: 22, scope: !6235)
!6238 = !DILocation(line: 2433, column: 7, scope: !599)
!6239 = !DILocation(line: 2434, column: 24, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6235, file: !1, line: 2433, column: 27)
!6241 = !DILocation(line: 2434, column: 27, scope: !6240)
!6242 = !DILocation(line: 2434, column: 5, scope: !6240)
!6243 = !DILocation(line: 2436, column: 5, scope: !6240)
!6244 = !DILocation(line: 2438, column: 3, scope: !599)
!6245 = !DILocation(line: 2438, column: 9, scope: !599)
!6246 = !DILocation(line: 2438, column: 20, scope: !599)
!6247 = !DILocation(line: 2439, column: 3, scope: !599)
!6248 = !DILocation(line: 2439, column: 9, scope: !599)
!6249 = !DILocation(line: 2439, column: 19, scope: !599)
!6250 = !DILocation(line: 2440, column: 3, scope: !599)
!6251 = !DILocation(line: 2440, column: 9, scope: !599)
!6252 = !DILocation(line: 2440, column: 19, scope: !599)
!6253 = !DILocation(line: 2441, column: 12, scope: !599)
!6254 = !DILocation(line: 2442, column: 9, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !599, file: !1, line: 2442, column: 3)
!6256 = !DILocation(line: 2442, column: 7, scope: !6255)
!6257 = !DILocation(line: 2442, column: 14, scope: !6258)
!6258 = !DILexicalBlockFile(scope: !6259, file: !1, discriminator: 1)
!6259 = distinct !DILexicalBlock(scope: !6255, file: !1, line: 2442, column: 3)
!6260 = !DILocation(line: 2442, column: 19, scope: !6258)
!6261 = !DILocation(line: 2442, column: 16, scope: !6258)
!6262 = !DILocation(line: 2442, column: 3, scope: !6258)
!6263 = !DILocation(line: 2444, column: 11, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !1, line: 2444, column: 5)
!6265 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2443, column: 3)
!6266 = !DILocation(line: 2444, column: 9, scope: !6264)
!6267 = !DILocation(line: 2444, column: 16, scope: !6268)
!6268 = !DILexicalBlockFile(scope: !6269, file: !1, discriminator: 1)
!6269 = distinct !DILexicalBlock(scope: !6264, file: !1, line: 2444, column: 5)
!6270 = !DILocation(line: 2444, column: 20, scope: !6268)
!6271 = !DILocation(line: 2444, column: 18, scope: !6268)
!6272 = !DILocation(line: 2444, column: 5, scope: !6268)
!6273 = !DILocation(line: 2446, column: 19, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6275, file: !1, line: 2446, column: 11)
!6275 = distinct !DILexicalBlock(scope: !6269, file: !1, line: 2445, column: 5)
!6276 = !DILocation(line: 2446, column: 11, scope: !6274)
!6277 = !DILocation(line: 2446, column: 25, scope: !6274)
!6278 = !DILocation(line: 2446, column: 22, scope: !6274)
!6279 = !DILocation(line: 2446, column: 11, scope: !6275)
!6280 = !DILocation(line: 2446, column: 28, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !6274, file: !1, discriminator: 1)
!6282 = !DILocation(line: 2447, column: 21, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6275, file: !1, line: 2447, column: 11)
!6284 = !DILocation(line: 2447, column: 24, scope: !6283)
!6285 = !DILocation(line: 2447, column: 30, scope: !6283)
!6286 = !DILocation(line: 2447, column: 33, scope: !6283)
!6287 = !DILocation(line: 2447, column: 43, scope: !6283)
!6288 = !DILocation(line: 2447, column: 11, scope: !6283)
!6289 = !DILocation(line: 2447, column: 46, scope: !6283)
!6290 = !DILocation(line: 2447, column: 11, scope: !6275)
!6291 = !DILocation(line: 2448, column: 9, scope: !6283)
!6292 = !DILocation(line: 2449, column: 15, scope: !6275)
!6293 = !DILocation(line: 2450, column: 11, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6275, file: !1, line: 2450, column: 11)
!6295 = !DILocation(line: 2450, column: 25, scope: !6294)
!6296 = !DILocation(line: 2450, column: 11, scope: !6275)
!6297 = !DILocation(line: 2450, column: 33, scope: !6298)
!6298 = !DILexicalBlockFile(scope: !6299, file: !1, discriminator: 1)
!6299 = distinct !DILexicalBlock(scope: !6294, file: !1, line: 2450, column: 31)
!6300 = !DILocation(line: 2451, column: 5, scope: !6275)
!6301 = !DILocation(line: 2444, column: 33, scope: !6302)
!6302 = !DILexicalBlockFile(scope: !6269, file: !1, discriminator: 2)
!6303 = !DILocation(line: 2444, column: 5, scope: !6302)
!6304 = !DILocation(line: 2452, column: 14, scope: !6265)
!6305 = !DILocation(line: 2453, column: 3, scope: !6265)
!6306 = !DILocation(line: 2442, column: 31, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6259, file: !1, discriminator: 2)
!6308 = !DILocation(line: 2442, column: 3, scope: !6307)
!6309 = !DILocation(line: 2454, column: 3, scope: !599)
!6310 = !DILocation(line: 2455, column: 1, scope: !599)
!6311 = !DILocalVariable(name: "a", arg: 1, scope: !609, file: !1, line: 2354, type: !4)
!6312 = !DILocation(line: 2354, column: 39, scope: !609)
!6313 = !DILocalVariable(name: "code", arg: 2, scope: !609, file: !1, line: 2354, type: !602)
!6314 = !DILocation(line: 2354, column: 63, scope: !609)
!6315 = !DILocalVariable(name: "bit", scope: !609, file: !1, line: 2356, type: !343)
!6316 = !DILocation(line: 2356, column: 17, scope: !609)
!6317 = !DILocalVariable(name: "bits", scope: !609, file: !1, line: 2357, type: !13)
!6318 = !DILocation(line: 2357, column: 16, scope: !609)
!6319 = !DILocalVariable(name: "length", scope: !609, file: !1, line: 2358, type: !23)
!6320 = !DILocation(line: 2358, column: 7, scope: !609)
!6321 = !DILocalVariable(name: "value", scope: !609, file: !1, line: 2358, type: !23)
!6322 = !DILocation(line: 2358, column: 15, scope: !609)
!6323 = !DILocalVariable(name: "node", scope: !609, file: !1, line: 2358, type: !23)
!6324 = !DILocation(line: 2358, column: 22, scope: !609)
!6325 = !DILocalVariable(name: "rar", scope: !609, file: !1, line: 2359, type: !292)
!6326 = !DILocation(line: 2359, column: 15, scope: !609)
!6327 = !DILocalVariable(name: "br", scope: !609, file: !1, line: 2360, type: !592)
!6328 = !DILocation(line: 2360, column: 18, scope: !609)
!6329 = !DILocation(line: 2362, column: 8, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !609, file: !1, line: 2362, column: 7)
!6331 = !DILocation(line: 2362, column: 14, scope: !6330)
!6332 = !DILocation(line: 2362, column: 7, scope: !609)
!6333 = !DILocation(line: 2364, column: 20, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !1, line: 2364, column: 9)
!6335 = distinct !DILexicalBlock(scope: !6330, file: !1, line: 2363, column: 3)
!6336 = !DILocation(line: 2364, column: 23, scope: !6334)
!6337 = !DILocation(line: 2364, column: 9, scope: !6334)
!6338 = !DILocation(line: 2364, column: 29, scope: !6334)
!6339 = !DILocation(line: 2364, column: 9, scope: !6335)
!6340 = !DILocation(line: 2365, column: 7, scope: !6334)
!6341 = !DILocation(line: 2366, column: 3, scope: !6335)
!6342 = !DILocation(line: 2368, column: 24, scope: !609)
!6343 = !DILocation(line: 2368, column: 27, scope: !609)
!6344 = !DILocation(line: 2368, column: 35, scope: !609)
!6345 = !DILocation(line: 2368, column: 9, scope: !609)
!6346 = !DILocation(line: 2368, column: 7, scope: !609)
!6347 = !DILocation(line: 2369, column: 10, scope: !609)
!6348 = !DILocation(line: 2369, column: 15, scope: !609)
!6349 = !DILocation(line: 2369, column: 6, scope: !609)
!6350 = !DILocation(line: 2372, column: 8, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !609, file: !1, line: 2372, column: 7)
!6352 = !DILocation(line: 2372, column: 8, scope: !6353)
!6353 = !DILexicalBlockFile(scope: !6351, file: !1, discriminator: 1)
!6354 = !DILocation(line: 2372, column: 8, scope: !6355)
!6355 = !DILexicalBlockFile(scope: !6351, file: !1, discriminator: 2)
!6356 = !DILocation(line: 2372, column: 7, scope: !6355)
!6357 = !DILocation(line: 2373, column: 24, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6351, file: !1, line: 2372, column: 51)
!6359 = !DILocation(line: 2373, column: 27, scope: !6358)
!6360 = !DILocation(line: 2373, column: 5, scope: !6358)
!6361 = !DILocation(line: 2375, column: 5, scope: !6358)
!6362 = !DILocation(line: 2375, column: 10, scope: !6358)
!6363 = !DILocation(line: 2375, column: 16, scope: !6358)
!6364 = !DILocation(line: 2376, column: 5, scope: !6358)
!6365 = !DILocation(line: 2378, column: 10, scope: !609)
!6366 = !DILocation(line: 2378, column: 8, scope: !609)
!6367 = !DILocation(line: 2380, column: 24, scope: !609)
!6368 = !DILocation(line: 2380, column: 12, scope: !609)
!6369 = !DILocation(line: 2380, column: 18, scope: !609)
!6370 = !DILocation(line: 2380, column: 30, scope: !609)
!6371 = !DILocation(line: 2380, column: 10, scope: !609)
!6372 = !DILocation(line: 2381, column: 23, scope: !609)
!6373 = !DILocation(line: 2381, column: 11, scope: !609)
!6374 = !DILocation(line: 2381, column: 17, scope: !609)
!6375 = !DILocation(line: 2381, column: 29, scope: !609)
!6376 = !DILocation(line: 2381, column: 9, scope: !609)
!6377 = !DILocation(line: 2383, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !609, file: !1, line: 2383, column: 7)
!6379 = !DILocation(line: 2383, column: 14, scope: !6378)
!6380 = !DILocation(line: 2383, column: 7, scope: !609)
!6381 = !DILocation(line: 2385, column: 24, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6378, file: !1, line: 2384, column: 3)
!6383 = !DILocation(line: 2385, column: 27, scope: !6382)
!6384 = !DILocation(line: 2385, column: 5, scope: !6382)
!6385 = !DILocation(line: 2387, column: 5, scope: !6382)
!6386 = !DILocation(line: 2390, column: 7, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !609, file: !1, line: 2390, column: 7)
!6388 = !DILocation(line: 2390, column: 17, scope: !6387)
!6389 = !DILocation(line: 2390, column: 23, scope: !6387)
!6390 = !DILocation(line: 2390, column: 14, scope: !6387)
!6391 = !DILocation(line: 2390, column: 7, scope: !609)
!6392 = !DILocation(line: 2393, column: 5, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6387, file: !1, line: 2391, column: 3)
!6394 = !DILocation(line: 2394, column: 12, scope: !6393)
!6395 = !DILocation(line: 2394, column: 5, scope: !6393)
!6396 = !DILocation(line: 2398, column: 3, scope: !609)
!6397 = !DILocation(line: 2400, column: 10, scope: !609)
!6398 = !DILocation(line: 2400, column: 8, scope: !609)
!6399 = !DILocation(line: 2401, column: 3, scope: !609)
!6400 = !DILocation(line: 2401, column: 23, scope: !6401)
!6401 = !DILexicalBlockFile(scope: !609, file: !1, discriminator: 1)
!6402 = !DILocation(line: 2401, column: 12, scope: !6401)
!6403 = !DILocation(line: 2401, column: 18, scope: !6401)
!6404 = !DILocation(line: 2401, column: 29, scope: !6401)
!6405 = !DILocation(line: 2402, column: 16, scope: !609)
!6406 = !DILocation(line: 2402, column: 5, scope: !609)
!6407 = !DILocation(line: 2402, column: 11, scope: !609)
!6408 = !DILocation(line: 2402, column: 22, scope: !609)
!6409 = !DILocation(line: 2401, column: 41, scope: !6401)
!6410 = !DILocation(line: 2401, column: 10, scope: !6401)
!6411 = !DILocation(line: 2401, column: 3, scope: !6401)
!6412 = !DILocation(line: 2404, column: 10, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2404, column: 9)
!6414 = distinct !DILexicalBlock(scope: !609, file: !1, line: 2403, column: 3)
!6415 = !DILocation(line: 2404, column: 10, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !6413, file: !1, discriminator: 1)
!6417 = !DILocation(line: 2404, column: 10, scope: !6418)
!6418 = !DILexicalBlockFile(scope: !6413, file: !1, discriminator: 2)
!6419 = !DILocation(line: 2404, column: 9, scope: !6418)
!6420 = !DILocation(line: 2405, column: 26, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6413, file: !1, line: 2404, column: 39)
!6422 = !DILocation(line: 2405, column: 29, scope: !6421)
!6423 = !DILocation(line: 2405, column: 7, scope: !6421)
!6424 = !DILocation(line: 2407, column: 7, scope: !6421)
!6425 = !DILocation(line: 2407, column: 12, scope: !6421)
!6426 = !DILocation(line: 2407, column: 18, scope: !6421)
!6427 = !DILocation(line: 2408, column: 7, scope: !6421)
!6428 = !DILocation(line: 2410, column: 11, scope: !6414)
!6429 = !DILocation(line: 2410, column: 9, scope: !6414)
!6430 = !DILocation(line: 2411, column: 5, scope: !6414)
!6431 = !DILocation(line: 2413, column: 35, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2413, column: 9)
!6433 = !DILocation(line: 2413, column: 9, scope: !6432)
!6434 = !DILocation(line: 2413, column: 20, scope: !6432)
!6435 = !DILocation(line: 2413, column: 15, scope: !6432)
!6436 = !DILocation(line: 2413, column: 26, scope: !6432)
!6437 = !DILocation(line: 2413, column: 40, scope: !6432)
!6438 = !DILocation(line: 2413, column: 9, scope: !6414)
!6439 = !DILocation(line: 2415, column: 26, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6432, file: !1, line: 2414, column: 5)
!6441 = !DILocation(line: 2415, column: 29, scope: !6440)
!6442 = !DILocation(line: 2415, column: 7, scope: !6440)
!6443 = !DILocation(line: 2417, column: 7, scope: !6440)
!6444 = !DILocation(line: 2419, column: 38, scope: !6414)
!6445 = !DILocation(line: 2419, column: 12, scope: !6414)
!6446 = !DILocation(line: 2419, column: 23, scope: !6414)
!6447 = !DILocation(line: 2419, column: 18, scope: !6414)
!6448 = !DILocation(line: 2419, column: 29, scope: !6414)
!6449 = !DILocation(line: 2419, column: 10, scope: !6414)
!6450 = !DILocation(line: 2401, column: 3, scope: !6451)
!6451 = !DILexicalBlockFile(scope: !609, file: !1, discriminator: 2)
!6452 = !DILocation(line: 2422, column: 21, scope: !609)
!6453 = !DILocation(line: 2422, column: 10, scope: !609)
!6454 = !DILocation(line: 2422, column: 16, scope: !609)
!6455 = !DILocation(line: 2422, column: 27, scope: !609)
!6456 = !DILocation(line: 2422, column: 3, scope: !609)
!6457 = !DILocation(line: 2423, column: 1, scope: !609)
!6458 = !DILocalVariable(name: "word", arg: 1, scope: !616, file: !1, line: 514, type: !13)
!6459 = !DILocation(line: 514, column: 22, scope: !616)
!6460 = !DILocation(line: 516, column: 12, scope: !616)
!6461 = !DILocation(line: 516, column: 17, scope: !616)
!6462 = !DILocation(line: 516, column: 8, scope: !616)
!6463 = !DILocation(line: 517, column: 12, scope: !616)
!6464 = !DILocation(line: 517, column: 17, scope: !616)
!6465 = !DILocation(line: 517, column: 8, scope: !616)
!6466 = !DILocation(line: 518, column: 12, scope: !616)
!6467 = !DILocation(line: 518, column: 17, scope: !616)
!6468 = !DILocation(line: 518, column: 8, scope: !616)
!6469 = !DILocation(line: 519, column: 12, scope: !616)
!6470 = !DILocation(line: 519, column: 17, scope: !616)
!6471 = !DILocation(line: 519, column: 8, scope: !616)
!6472 = !DILocation(line: 520, column: 12, scope: !616)
!6473 = !DILocation(line: 520, column: 17, scope: !616)
!6474 = !DILocation(line: 520, column: 8, scope: !616)
!6475 = !DILocation(line: 521, column: 10, scope: !616)
!6476 = !DILocation(line: 521, column: 18, scope: !616)
!6477 = !DILocation(line: 521, column: 23, scope: !616)
!6478 = !DILocation(line: 521, column: 15, scope: !616)
!6479 = !DILocation(line: 521, column: 3, scope: !616)
!6480 = !DILocalVariable(name: "code", arg: 1, scope: !603, file: !1, line: 2558, type: !602)
!6481 = !DILocation(line: 2558, column: 31, scope: !603)
!6482 = !DILocalVariable(name: "new_tree", scope: !603, file: !1, line: 2560, type: !123)
!6483 = !DILocation(line: 2560, column: 9, scope: !603)
!6484 = !DILocation(line: 2561, column: 7, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !603, file: !1, line: 2561, column: 7)
!6486 = !DILocation(line: 2561, column: 13, scope: !6485)
!6487 = !DILocation(line: 2561, column: 36, scope: !6485)
!6488 = !DILocation(line: 2561, column: 42, scope: !6485)
!6489 = !DILocation(line: 2561, column: 33, scope: !6485)
!6490 = !DILocation(line: 2561, column: 7, scope: !603)
!6491 = !DILocalVariable(name: "new_num_entries", scope: !6492, file: !1, line: 2562, type: !23)
!6492 = distinct !DILexicalBlock(scope: !6485, file: !1, line: 2561, column: 54)
!6493 = !DILocation(line: 2562, column: 9, scope: !6492)
!6494 = !DILocation(line: 2563, column: 9, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 2563, column: 9)
!6496 = !DILocation(line: 2563, column: 15, scope: !6495)
!6497 = !DILocation(line: 2563, column: 26, scope: !6495)
!6498 = !DILocation(line: 2563, column: 9, scope: !6492)
!6499 = !DILocation(line: 2564, column: 27, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !1, line: 2563, column: 31)
!6501 = !DILocation(line: 2564, column: 33, scope: !6500)
!6502 = !DILocation(line: 2564, column: 44, scope: !6500)
!6503 = !DILocation(line: 2564, column: 25, scope: !6500)
!6504 = !DILocation(line: 2565, column: 5, scope: !6500)
!6505 = !DILocation(line: 2566, column: 24, scope: !6492)
!6506 = !DILocation(line: 2566, column: 30, scope: !6492)
!6507 = !DILocation(line: 2566, column: 36, scope: !6492)
!6508 = !DILocation(line: 2566, column: 52, scope: !6492)
!6509 = !DILocation(line: 2566, column: 16, scope: !6492)
!6510 = !DILocation(line: 2566, column: 14, scope: !6492)
!6511 = !DILocation(line: 2567, column: 9, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 2567, column: 9)
!6513 = !DILocation(line: 2567, column: 18, scope: !6512)
!6514 = !DILocation(line: 2567, column: 9, scope: !6492)
!6515 = !DILocation(line: 2568, column: 9, scope: !6512)
!6516 = !DILocation(line: 2569, column: 46, scope: !6492)
!6517 = !DILocation(line: 2569, column: 18, scope: !6492)
!6518 = !DILocation(line: 2569, column: 5, scope: !6492)
!6519 = !DILocation(line: 2569, column: 11, scope: !6492)
!6520 = !DILocation(line: 2569, column: 16, scope: !6492)
!6521 = !DILocation(line: 2570, column: 33, scope: !6492)
!6522 = !DILocation(line: 2570, column: 5, scope: !6492)
!6523 = !DILocation(line: 2570, column: 11, scope: !6492)
!6524 = !DILocation(line: 2570, column: 31, scope: !6492)
!6525 = !DILocation(line: 2571, column: 3, scope: !6492)
!6526 = !DILocation(line: 2572, column: 14, scope: !603)
!6527 = !DILocation(line: 2572, column: 20, scope: !603)
!6528 = !DILocation(line: 2572, column: 3, scope: !603)
!6529 = !DILocation(line: 2572, column: 9, scope: !603)
!6530 = !DILocation(line: 2572, column: 32, scope: !603)
!6531 = !DILocation(line: 2572, column: 44, scope: !603)
!6532 = !DILocation(line: 2573, column: 14, scope: !603)
!6533 = !DILocation(line: 2573, column: 20, scope: !603)
!6534 = !DILocation(line: 2573, column: 3, scope: !603)
!6535 = !DILocation(line: 2573, column: 9, scope: !603)
!6536 = !DILocation(line: 2573, column: 32, scope: !603)
!6537 = !DILocation(line: 2573, column: 44, scope: !603)
!6538 = !DILocation(line: 2574, column: 3, scope: !603)
!6539 = !DILocation(line: 2575, column: 1, scope: !603)
!6540 = !DILocalVariable(name: "a", arg: 1, scope: !606, file: !1, line: 2458, type: !4)
!6541 = !DILocation(line: 2458, column: 32, scope: !606)
!6542 = !DILocalVariable(name: "code", arg: 2, scope: !606, file: !1, line: 2458, type: !602)
!6543 = !DILocation(line: 2458, column: 56, scope: !606)
!6544 = !DILocalVariable(name: "value", arg: 3, scope: !606, file: !1, line: 2458, type: !23)
!6545 = !DILocation(line: 2458, column: 66, scope: !606)
!6546 = !DILocalVariable(name: "codebits", arg: 4, scope: !606, file: !1, line: 2459, type: !23)
!6547 = !DILocation(line: 2459, column: 15, scope: !606)
!6548 = !DILocalVariable(name: "length", arg: 5, scope: !606, file: !1, line: 2459, type: !23)
!6549 = !DILocation(line: 2459, column: 29, scope: !606)
!6550 = !DILocalVariable(name: "repeatpos", scope: !606, file: !1, line: 2461, type: !23)
!6551 = !DILocation(line: 2461, column: 7, scope: !606)
!6552 = !DILocalVariable(name: "lastnode", scope: !606, file: !1, line: 2461, type: !23)
!6553 = !DILocation(line: 2461, column: 18, scope: !606)
!6554 = !DILocalVariable(name: "bitpos", scope: !606, file: !1, line: 2461, type: !23)
!6555 = !DILocation(line: 2461, column: 28, scope: !606)
!6556 = !DILocalVariable(name: "bit", scope: !606, file: !1, line: 2461, type: !23)
!6557 = !DILocation(line: 2461, column: 36, scope: !606)
!6558 = !DILocalVariable(name: "repeatnode", scope: !606, file: !1, line: 2461, type: !23)
!6559 = !DILocation(line: 2461, column: 41, scope: !606)
!6560 = !DILocalVariable(name: "nextnode", scope: !606, file: !1, line: 2461, type: !23)
!6561 = !DILocation(line: 2461, column: 53, scope: !606)
!6562 = !DILocation(line: 2463, column: 8, scope: !606)
!6563 = !DILocation(line: 2463, column: 14, scope: !606)
!6564 = !DILocation(line: 2463, column: 3, scope: !606)
!6565 = !DILocation(line: 2464, column: 3, scope: !606)
!6566 = !DILocation(line: 2464, column: 9, scope: !606)
!6567 = !DILocation(line: 2464, column: 15, scope: !606)
!6568 = !DILocation(line: 2466, column: 6, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !606, file: !1, line: 2466, column: 6)
!6570 = !DILocation(line: 2466, column: 15, scope: !6569)
!6571 = !DILocation(line: 2466, column: 21, scope: !6569)
!6572 = !DILocation(line: 2466, column: 13, scope: !6569)
!6573 = !DILocation(line: 2466, column: 6, scope: !606)
!6574 = !DILocation(line: 2467, column: 23, scope: !6569)
!6575 = !DILocation(line: 2467, column: 5, scope: !6569)
!6576 = !DILocation(line: 2467, column: 11, scope: !6569)
!6577 = !DILocation(line: 2467, column: 21, scope: !6569)
!6578 = !DILocation(line: 2468, column: 6, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !606, file: !1, line: 2468, column: 6)
!6580 = !DILocation(line: 2468, column: 15, scope: !6579)
!6581 = !DILocation(line: 2468, column: 21, scope: !6579)
!6582 = !DILocation(line: 2468, column: 13, scope: !6579)
!6583 = !DILocation(line: 2468, column: 6, scope: !606)
!6584 = !DILocation(line: 2469, column: 23, scope: !6579)
!6585 = !DILocation(line: 2469, column: 5, scope: !6579)
!6586 = !DILocation(line: 2469, column: 11, scope: !6579)
!6587 = !DILocation(line: 2469, column: 21, scope: !6579)
!6588 = !DILocation(line: 2471, column: 13, scope: !606)
!6589 = !DILocation(line: 2472, column: 7, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !606, file: !1, line: 2472, column: 7)
!6591 = !DILocation(line: 2472, column: 17, scope: !6590)
!6592 = !DILocation(line: 2472, column: 22, scope: !6590)
!6593 = !DILocation(line: 2472, column: 26, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !6590, file: !1, discriminator: 1)
!6595 = !DILocation(line: 2472, column: 36, scope: !6594)
!6596 = !DILocation(line: 2473, column: 5, scope: !6590)
!6597 = !DILocation(line: 2473, column: 11, scope: !6594)
!6598 = !DILocation(line: 2473, column: 24, scope: !6594)
!6599 = !DILocation(line: 2473, column: 34, scope: !6594)
!6600 = !DILocation(line: 2473, column: 20, scope: !6594)
!6601 = !DILocation(line: 2473, column: 40, scope: !6594)
!6602 = !DILocation(line: 2473, column: 45, scope: !6594)
!6603 = !DILocation(line: 2474, column: 5, scope: !6590)
!6604 = !DILocation(line: 2474, column: 10, scope: !6594)
!6605 = !DILocation(line: 2474, column: 23, scope: !6594)
!6606 = !DILocation(line: 2474, column: 33, scope: !6594)
!6607 = !DILocation(line: 2474, column: 19, scope: !6594)
!6608 = !DILocation(line: 2474, column: 39, scope: !6594)
!6609 = !DILocation(line: 2474, column: 44, scope: !6594)
!6610 = !DILocation(line: 2472, column: 7, scope: !6611)
!6611 = !DILexicalBlockFile(scope: !606, file: !1, discriminator: 2)
!6612 = !DILocation(line: 2476, column: 24, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 2475, column: 3)
!6614 = !DILocation(line: 2476, column: 27, scope: !6613)
!6615 = !DILocation(line: 2476, column: 5, scope: !6613)
!6616 = !DILocation(line: 2478, column: 5, scope: !6613)
!6617 = !DILocation(line: 2481, column: 12, scope: !606)
!6618 = !DILocation(line: 2482, column: 17, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !606, file: !1, line: 2482, column: 3)
!6620 = !DILocation(line: 2482, column: 24, scope: !6619)
!6621 = !DILocation(line: 2482, column: 15, scope: !6619)
!6622 = !DILocation(line: 2482, column: 8, scope: !6619)
!6623 = !DILocation(line: 2482, column: 29, scope: !6624)
!6624 = !DILexicalBlockFile(scope: !6625, file: !1, discriminator: 1)
!6625 = distinct !DILexicalBlock(scope: !6619, file: !1, line: 2482, column: 3)
!6626 = !DILocation(line: 2482, column: 36, scope: !6624)
!6627 = !DILocation(line: 2482, column: 3, scope: !6624)
!6628 = !DILocation(line: 2484, column: 12, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !1, line: 2483, column: 3)
!6630 = !DILocation(line: 2484, column: 24, scope: !6629)
!6631 = !DILocation(line: 2484, column: 21, scope: !6629)
!6632 = !DILocation(line: 2484, column: 32, scope: !6629)
!6633 = !DILocation(line: 2484, column: 9, scope: !6629)
!6634 = !DILocation(line: 2487, column: 20, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6629, file: !1, line: 2487, column: 9)
!6636 = !DILocation(line: 2487, column: 9, scope: !6635)
!6637 = !DILocation(line: 2487, column: 15, scope: !6635)
!6638 = !DILocation(line: 2487, column: 30, scope: !6635)
!6639 = !DILocation(line: 2488, column: 18, scope: !6635)
!6640 = !DILocation(line: 2488, column: 7, scope: !6635)
!6641 = !DILocation(line: 2488, column: 13, scope: !6635)
!6642 = !DILocation(line: 2488, column: 28, scope: !6635)
!6643 = !DILocation(line: 2487, column: 42, scope: !6635)
!6644 = !DILocation(line: 2487, column: 9, scope: !6629)
!6645 = !DILocation(line: 2490, column: 26, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6635, file: !1, line: 2489, column: 5)
!6647 = !DILocation(line: 2490, column: 29, scope: !6646)
!6648 = !DILocation(line: 2490, column: 7, scope: !6646)
!6649 = !DILocation(line: 2492, column: 7, scope: !6646)
!6650 = !DILocation(line: 2495, column: 9, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6629, file: !1, line: 2495, column: 9)
!6652 = !DILocation(line: 2495, column: 19, scope: !6651)
!6653 = !DILocation(line: 2495, column: 16, scope: !6651)
!6654 = !DILocation(line: 2495, column: 9, scope: !6629)
!6655 = !DILocation(line: 2498, column: 43, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !1, line: 2498, column: 11)
!6657 = distinct !DILexicalBlock(scope: !6651, file: !1, line: 2496, column: 5)
!6658 = !DILocation(line: 2498, column: 13, scope: !6656)
!6659 = !DILocation(line: 2498, column: 24, scope: !6656)
!6660 = !DILocation(line: 2498, column: 19, scope: !6656)
!6661 = !DILocation(line: 2498, column: 34, scope: !6656)
!6662 = !DILocation(line: 2498, column: 48, scope: !6656)
!6663 = !DILocation(line: 2498, column: 11, scope: !6657)
!6664 = !DILocation(line: 2500, column: 28, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 2499, column: 7)
!6666 = !DILocation(line: 2500, column: 31, scope: !6665)
!6667 = !DILocation(line: 2500, column: 9, scope: !6665)
!6668 = !DILocation(line: 2502, column: 9, scope: !6665)
!6669 = !DILocation(line: 2505, column: 34, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6657, file: !1, line: 2505, column: 11)
!6671 = !DILocation(line: 2505, column: 25, scope: !6670)
!6672 = !DILocation(line: 2505, column: 23, scope: !6670)
!6673 = !DILocation(line: 2505, column: 41, scope: !6670)
!6674 = !DILocation(line: 2505, column: 11, scope: !6657)
!6675 = !DILocation(line: 2506, column: 28, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6670, file: !1, line: 2505, column: 46)
!6677 = !DILocation(line: 2506, column: 31, scope: !6676)
!6678 = !DILocation(line: 2506, column: 9, scope: !6676)
!6679 = !DILocation(line: 2508, column: 9, scope: !6676)
!6680 = !DILocation(line: 2510, column: 32, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6657, file: !1, line: 2510, column: 11)
!6682 = !DILocation(line: 2510, column: 23, scope: !6681)
!6683 = !DILocation(line: 2510, column: 21, scope: !6681)
!6684 = !DILocation(line: 2510, column: 39, scope: !6681)
!6685 = !DILocation(line: 2510, column: 11, scope: !6657)
!6686 = !DILocation(line: 2511, column: 28, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6681, file: !1, line: 2510, column: 44)
!6688 = !DILocation(line: 2511, column: 31, scope: !6687)
!6689 = !DILocation(line: 2511, column: 9, scope: !6687)
!6690 = !DILocation(line: 2513, column: 9, scope: !6687)
!6691 = !DILocation(line: 2517, column: 44, scope: !6657)
!6692 = !DILocation(line: 2517, column: 37, scope: !6657)
!6693 = !DILocation(line: 2517, column: 7, scope: !6657)
!6694 = !DILocation(line: 2517, column: 18, scope: !6657)
!6695 = !DILocation(line: 2517, column: 13, scope: !6657)
!6696 = !DILocation(line: 2517, column: 28, scope: !6657)
!6697 = !DILocation(line: 2517, column: 42, scope: !6657)
!6698 = !DILocation(line: 2518, column: 46, scope: !6657)
!6699 = !DILocation(line: 2518, column: 39, scope: !6657)
!6700 = !DILocation(line: 2518, column: 7, scope: !6657)
!6701 = !DILocation(line: 2518, column: 18, scope: !6657)
!6702 = !DILocation(line: 2518, column: 13, scope: !6657)
!6703 = !DILocation(line: 2518, column: 30, scope: !6657)
!6704 = !DILocation(line: 2518, column: 44, scope: !6657)
!6705 = !DILocation(line: 2519, column: 48, scope: !6657)
!6706 = !DILocation(line: 2519, column: 39, scope: !6657)
!6707 = !DILocation(line: 2519, column: 42, scope: !6657)
!6708 = !DILocation(line: 2519, column: 7, scope: !6657)
!6709 = !DILocation(line: 2519, column: 18, scope: !6657)
!6710 = !DILocation(line: 2519, column: 13, scope: !6657)
!6711 = !DILocation(line: 2519, column: 30, scope: !6657)
!6712 = !DILocation(line: 2519, column: 46, scope: !6657)
!6713 = !DILocation(line: 2520, column: 18, scope: !6657)
!6714 = !DILocation(line: 2520, column: 16, scope: !6657)
!6715 = !DILocation(line: 2522, column: 13, scope: !6657)
!6716 = !DILocation(line: 2523, column: 5, scope: !6657)
!6717 = !DILocation(line: 2527, column: 41, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !1, line: 2527, column: 11)
!6719 = distinct !DILexicalBlock(scope: !6651, file: !1, line: 2525, column: 5)
!6720 = !DILocation(line: 2527, column: 11, scope: !6718)
!6721 = !DILocation(line: 2527, column: 22, scope: !6718)
!6722 = !DILocation(line: 2527, column: 17, scope: !6718)
!6723 = !DILocation(line: 2527, column: 32, scope: !6718)
!6724 = !DILocation(line: 2527, column: 46, scope: !6718)
!6725 = !DILocation(line: 2527, column: 11, scope: !6719)
!6726 = !DILocation(line: 2529, column: 22, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !1, line: 2529, column: 13)
!6728 = distinct !DILexicalBlock(scope: !6718, file: !1, line: 2528, column: 7)
!6729 = !DILocation(line: 2529, column: 13, scope: !6727)
!6730 = !DILocation(line: 2529, column: 28, scope: !6727)
!6731 = !DILocation(line: 2529, column: 13, scope: !6728)
!6732 = !DILocation(line: 2530, column: 30, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6727, file: !1, line: 2529, column: 33)
!6734 = !DILocation(line: 2530, column: 33, scope: !6733)
!6735 = !DILocation(line: 2530, column: 11, scope: !6733)
!6736 = !DILocation(line: 2532, column: 11, scope: !6733)
!6737 = !DILocation(line: 2534, column: 46, scope: !6728)
!6738 = !DILocation(line: 2534, column: 52, scope: !6728)
!6739 = !DILocation(line: 2534, column: 62, scope: !6728)
!6740 = !DILocation(line: 2534, column: 39, scope: !6728)
!6741 = !DILocation(line: 2534, column: 9, scope: !6728)
!6742 = !DILocation(line: 2534, column: 20, scope: !6728)
!6743 = !DILocation(line: 2534, column: 15, scope: !6728)
!6744 = !DILocation(line: 2534, column: 30, scope: !6728)
!6745 = !DILocation(line: 2534, column: 44, scope: !6728)
!6746 = !DILocation(line: 2535, column: 7, scope: !6728)
!6747 = !DILocation(line: 2538, column: 48, scope: !6719)
!6748 = !DILocation(line: 2538, column: 18, scope: !6719)
!6749 = !DILocation(line: 2538, column: 29, scope: !6719)
!6750 = !DILocation(line: 2538, column: 24, scope: !6719)
!6751 = !DILocation(line: 2538, column: 39, scope: !6719)
!6752 = !DILocation(line: 2538, column: 16, scope: !6719)
!6753 = !DILocation(line: 2540, column: 3, scope: !6629)
!6754 = !DILocation(line: 2482, column: 48, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !6625, file: !1, discriminator: 2)
!6756 = !DILocation(line: 2482, column: 3, scope: !6755)
!6757 = !DILocation(line: 2542, column: 20, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !606, file: !1, line: 2542, column: 7)
!6759 = !DILocation(line: 2542, column: 9, scope: !6758)
!6760 = !DILocation(line: 2542, column: 15, scope: !6758)
!6761 = !DILocation(line: 2542, column: 30, scope: !6758)
!6762 = !DILocation(line: 2542, column: 42, scope: !6758)
!6763 = !DILocation(line: 2543, column: 5, scope: !6758)
!6764 = !DILocation(line: 2543, column: 19, scope: !6765)
!6765 = !DILexicalBlockFile(scope: !6758, file: !1, discriminator: 1)
!6766 = !DILocation(line: 2543, column: 8, scope: !6765)
!6767 = !DILocation(line: 2543, column: 14, scope: !6765)
!6768 = !DILocation(line: 2543, column: 29, scope: !6765)
!6769 = !DILocation(line: 2543, column: 41, scope: !6765)
!6770 = !DILocation(line: 2542, column: 7, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !606, file: !1, discriminator: 1)
!6772 = !DILocation(line: 2545, column: 24, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6758, file: !1, line: 2544, column: 3)
!6774 = !DILocation(line: 2545, column: 27, scope: !6773)
!6775 = !DILocation(line: 2545, column: 5, scope: !6773)
!6776 = !DILocation(line: 2547, column: 5, scope: !6773)
!6777 = !DILocation(line: 2551, column: 38, scope: !606)
!6778 = !DILocation(line: 2551, column: 14, scope: !606)
!6779 = !DILocation(line: 2551, column: 3, scope: !606)
!6780 = !DILocation(line: 2551, column: 9, scope: !606)
!6781 = !DILocation(line: 2551, column: 24, scope: !606)
!6782 = !DILocation(line: 2551, column: 36, scope: !606)
!6783 = !DILocation(line: 2552, column: 38, scope: !606)
!6784 = !DILocation(line: 2552, column: 14, scope: !606)
!6785 = !DILocation(line: 2552, column: 3, scope: !606)
!6786 = !DILocation(line: 2552, column: 9, scope: !606)
!6787 = !DILocation(line: 2552, column: 24, scope: !606)
!6788 = !DILocation(line: 2552, column: 36, scope: !606)
!6789 = !DILocation(line: 2554, column: 3, scope: !606)
!6790 = !DILocation(line: 2555, column: 1, scope: !606)
!6791 = !DILocalVariable(name: "a", arg: 1, scope: !612, file: !1, line: 2578, type: !4)
!6792 = !DILocation(line: 2578, column: 33, scope: !612)
!6793 = !DILocalVariable(name: "code", arg: 2, scope: !612, file: !1, line: 2578, type: !602)
!6794 = !DILocation(line: 2578, column: 57, scope: !612)
!6795 = !DILocation(line: 2580, column: 7, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !612, file: !1, line: 2580, column: 7)
!6797 = !DILocation(line: 2580, column: 13, scope: !6796)
!6798 = !DILocation(line: 2580, column: 25, scope: !6796)
!6799 = !DILocation(line: 2580, column: 31, scope: !6796)
!6800 = !DILocation(line: 2580, column: 23, scope: !6796)
!6801 = !DILocation(line: 2580, column: 41, scope: !6796)
!6802 = !DILocation(line: 2580, column: 44, scope: !6803)
!6803 = !DILexicalBlockFile(scope: !6796, file: !1, discriminator: 1)
!6804 = !DILocation(line: 2580, column: 50, scope: !6803)
!6805 = !DILocation(line: 2580, column: 60, scope: !6803)
!6806 = !DILocation(line: 2580, column: 7, scope: !6803)
!6807 = !DILocation(line: 2581, column: 5, scope: !6796)
!6808 = !DILocation(line: 2581, column: 11, scope: !6796)
!6809 = !DILocation(line: 2581, column: 21, scope: !6796)
!6810 = !DILocation(line: 2583, column: 23, scope: !6796)
!6811 = !DILocation(line: 2583, column: 29, scope: !6796)
!6812 = !DILocation(line: 2583, column: 5, scope: !6796)
!6813 = !DILocation(line: 2583, column: 11, scope: !6796)
!6814 = !DILocation(line: 2583, column: 21, scope: !6796)
!6815 = !DILocation(line: 2587, column: 21, scope: !612)
!6816 = !DILocation(line: 2587, column: 27, scope: !612)
!6817 = !DILocation(line: 2587, column: 18, scope: !612)
!6818 = !DILocation(line: 2587, column: 5, scope: !612)
!6819 = !DILocation(line: 2586, column: 35, scope: !612)
!6820 = !DILocation(line: 2586, column: 5, scope: !612)
!6821 = !DILocation(line: 2585, column: 3, scope: !612)
!6822 = !DILocation(line: 2585, column: 9, scope: !612)
!6823 = !DILocation(line: 2585, column: 15, scope: !612)
!6824 = !DILocation(line: 2589, column: 29, scope: !612)
!6825 = !DILocation(line: 2589, column: 32, scope: !612)
!6826 = !DILocation(line: 2589, column: 41, scope: !612)
!6827 = !DILocation(line: 2589, column: 47, scope: !612)
!6828 = !DILocation(line: 2589, column: 57, scope: !612)
!6829 = !DILocation(line: 2589, column: 63, scope: !612)
!6830 = !DILocation(line: 2589, column: 10, scope: !612)
!6831 = !DILocation(line: 2589, column: 3, scope: !612)
!6832 = !DILocalVariable(name: "a", arg: 1, scope: !613, file: !1, line: 2593, type: !4)
!6833 = !DILocation(line: 2593, column: 41, scope: !613)
!6834 = !DILocalVariable(name: "code", arg: 2, scope: !613, file: !1, line: 2593, type: !602)
!6835 = !DILocation(line: 2593, column: 65, scope: !613)
!6836 = !DILocalVariable(name: "node", arg: 3, scope: !613, file: !1, line: 2593, type: !23)
!6837 = !DILocation(line: 2593, column: 75, scope: !613)
!6838 = !DILocalVariable(name: "table", arg: 4, scope: !613, file: !1, line: 2594, type: !374)
!6839 = !DILocation(line: 2594, column: 48, scope: !613)
!6840 = !DILocalVariable(name: "depth", arg: 5, scope: !613, file: !1, line: 2594, type: !23)
!6841 = !DILocation(line: 2594, column: 59, scope: !613)
!6842 = !DILocalVariable(name: "maxdepth", arg: 6, scope: !613, file: !1, line: 2595, type: !23)
!6843 = !DILocation(line: 2595, column: 24, scope: !613)
!6844 = !DILocalVariable(name: "currtablesize", scope: !613, file: !1, line: 2597, type: !23)
!6845 = !DILocation(line: 2597, column: 7, scope: !613)
!6846 = !DILocalVariable(name: "i", scope: !613, file: !1, line: 2597, type: !23)
!6847 = !DILocation(line: 2597, column: 22, scope: !613)
!6848 = !DILocalVariable(name: "ret", scope: !613, file: !1, line: 2597, type: !23)
!6849 = !DILocation(line: 2597, column: 25, scope: !613)
!6850 = !DILocation(line: 2599, column: 8, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !613, file: !1, line: 2599, column: 7)
!6852 = !DILocation(line: 2599, column: 14, scope: !6851)
!6853 = !DILocation(line: 2599, column: 7, scope: !613)
!6854 = !DILocation(line: 2601, column: 24, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6851, file: !1, line: 2600, column: 3)
!6856 = !DILocation(line: 2601, column: 27, scope: !6855)
!6857 = !DILocation(line: 2601, column: 5, scope: !6855)
!6858 = !DILocation(line: 2603, column: 5, scope: !6855)
!6859 = !DILocation(line: 2605, column: 7, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !613, file: !1, line: 2605, column: 7)
!6861 = !DILocation(line: 2605, column: 12, scope: !6860)
!6862 = !DILocation(line: 2605, column: 16, scope: !6860)
!6863 = !DILocation(line: 2605, column: 19, scope: !6864)
!6864 = !DILexicalBlockFile(scope: !6860, file: !1, discriminator: 1)
!6865 = !DILocation(line: 2605, column: 27, scope: !6864)
!6866 = !DILocation(line: 2605, column: 33, scope: !6864)
!6867 = !DILocation(line: 2605, column: 24, scope: !6864)
!6868 = !DILocation(line: 2605, column: 7, scope: !6864)
!6869 = !DILocation(line: 2607, column: 24, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6860, file: !1, line: 2606, column: 3)
!6871 = !DILocation(line: 2607, column: 27, scope: !6870)
!6872 = !DILocation(line: 2607, column: 5, scope: !6870)
!6873 = !DILocation(line: 2609, column: 5, scope: !6870)
!6874 = !DILocation(line: 2612, column: 25, scope: !613)
!6875 = !DILocation(line: 2612, column: 36, scope: !613)
!6876 = !DILocation(line: 2612, column: 34, scope: !613)
!6877 = !DILocation(line: 2612, column: 21, scope: !613)
!6878 = !DILocation(line: 2612, column: 17, scope: !613)
!6879 = !DILocation(line: 2614, column: 18, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !613, file: !1, line: 2614, column: 7)
!6881 = !DILocation(line: 2614, column: 7, scope: !6880)
!6882 = !DILocation(line: 2614, column: 13, scope: !6880)
!6883 = !DILocation(line: 2614, column: 24, scope: !6880)
!6884 = !DILocation(line: 2615, column: 16, scope: !6880)
!6885 = !DILocation(line: 2615, column: 5, scope: !6880)
!6886 = !DILocation(line: 2615, column: 11, scope: !6880)
!6887 = !DILocation(line: 2615, column: 22, scope: !6880)
!6888 = !DILocation(line: 2614, column: 36, scope: !6880)
!6889 = !DILocation(line: 2614, column: 7, scope: !613)
!6890 = !DILocation(line: 2617, column: 11, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !1, line: 2617, column: 5)
!6892 = distinct !DILexicalBlock(scope: !6880, file: !1, line: 2616, column: 3)
!6893 = !DILocation(line: 2617, column: 9, scope: !6891)
!6894 = !DILocation(line: 2617, column: 16, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !6896, file: !1, discriminator: 1)
!6896 = distinct !DILexicalBlock(scope: !6891, file: !1, line: 2617, column: 5)
!6897 = !DILocation(line: 2617, column: 20, scope: !6895)
!6898 = !DILocation(line: 2617, column: 18, scope: !6895)
!6899 = !DILocation(line: 2617, column: 5, scope: !6895)
!6900 = !DILocation(line: 2619, column: 25, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6896, file: !1, line: 2618, column: 5)
!6902 = !DILocation(line: 2619, column: 13, scope: !6901)
!6903 = !DILocation(line: 2619, column: 7, scope: !6901)
!6904 = !DILocation(line: 2619, column: 16, scope: !6901)
!6905 = !DILocation(line: 2619, column: 23, scope: !6901)
!6906 = !DILocation(line: 2620, column: 35, scope: !6901)
!6907 = !DILocation(line: 2620, column: 24, scope: !6901)
!6908 = !DILocation(line: 2620, column: 30, scope: !6901)
!6909 = !DILocation(line: 2620, column: 41, scope: !6901)
!6910 = !DILocation(line: 2620, column: 13, scope: !6901)
!6911 = !DILocation(line: 2620, column: 7, scope: !6901)
!6912 = !DILocation(line: 2620, column: 16, scope: !6901)
!6913 = !DILocation(line: 2620, column: 22, scope: !6901)
!6914 = !DILocation(line: 2621, column: 5, scope: !6901)
!6915 = !DILocation(line: 2617, column: 36, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6896, file: !1, discriminator: 2)
!6917 = !DILocation(line: 2617, column: 5, scope: !6916)
!6918 = !DILocation(line: 2622, column: 3, scope: !6892)
!6919 = !DILocation(line: 2623, column: 12, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6880, file: !1, line: 2623, column: 12)
!6921 = !DILocation(line: 2623, column: 17, scope: !6920)
!6922 = !DILocation(line: 2623, column: 12, scope: !6880)
!6923 = !DILocation(line: 2625, column: 11, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !1, line: 2625, column: 5)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !1, line: 2624, column: 3)
!6926 = !DILocation(line: 2625, column: 9, scope: !6924)
!6927 = !DILocation(line: 2625, column: 16, scope: !6928)
!6928 = !DILexicalBlockFile(scope: !6929, file: !1, discriminator: 1)
!6929 = distinct !DILexicalBlock(scope: !6924, file: !1, line: 2625, column: 5)
!6930 = !DILocation(line: 2625, column: 20, scope: !6928)
!6931 = !DILocation(line: 2625, column: 18, scope: !6928)
!6932 = !DILocation(line: 2625, column: 5, scope: !6928)
!6933 = !DILocation(line: 2626, column: 13, scope: !6929)
!6934 = !DILocation(line: 2626, column: 7, scope: !6929)
!6935 = !DILocation(line: 2626, column: 16, scope: !6929)
!6936 = !DILocation(line: 2626, column: 23, scope: !6929)
!6937 = !DILocation(line: 2625, column: 36, scope: !6938)
!6938 = !DILexicalBlockFile(scope: !6929, file: !1, discriminator: 2)
!6939 = !DILocation(line: 2625, column: 5, scope: !6938)
!6940 = !DILocation(line: 2627, column: 3, scope: !6925)
!6941 = !DILocation(line: 2630, column: 8, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !1, line: 2630, column: 8)
!6943 = distinct !DILexicalBlock(scope: !6920, file: !1, line: 2629, column: 3)
!6944 = !DILocation(line: 2630, column: 17, scope: !6942)
!6945 = !DILocation(line: 2630, column: 14, scope: !6942)
!6946 = !DILocation(line: 2630, column: 8, scope: !6943)
!6947 = !DILocation(line: 2632, column: 25, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6942, file: !1, line: 2631, column: 5)
!6949 = !DILocation(line: 2632, column: 34, scope: !6948)
!6950 = !DILocation(line: 2632, column: 7, scope: !6948)
!6951 = !DILocation(line: 2632, column: 16, scope: !6948)
!6952 = !DILocation(line: 2632, column: 23, scope: !6948)
!6953 = !DILocation(line: 2633, column: 24, scope: !6948)
!6954 = !DILocation(line: 2633, column: 7, scope: !6948)
!6955 = !DILocation(line: 2633, column: 16, scope: !6948)
!6956 = !DILocation(line: 2633, column: 22, scope: !6948)
!6957 = !DILocation(line: 2634, column: 5, scope: !6948)
!6958 = !DILocation(line: 2637, column: 33, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6942, file: !1, line: 2636, column: 5)
!6960 = !DILocation(line: 2637, column: 36, scope: !6959)
!6961 = !DILocation(line: 2637, column: 53, scope: !6959)
!6962 = !DILocation(line: 2637, column: 42, scope: !6959)
!6963 = !DILocation(line: 2637, column: 48, scope: !6959)
!6964 = !DILocation(line: 2637, column: 59, scope: !6959)
!6965 = !DILocation(line: 2637, column: 72, scope: !6959)
!6966 = !DILocation(line: 2638, column: 33, scope: !6959)
!6967 = !DILocation(line: 2638, column: 39, scope: !6959)
!6968 = !DILocation(line: 2638, column: 44, scope: !6959)
!6969 = !DILocation(line: 2637, column: 14, scope: !6959)
!6970 = !DILocation(line: 2637, column: 11, scope: !6959)
!6971 = !DILocation(line: 2639, column: 33, scope: !6959)
!6972 = !DILocation(line: 2639, column: 36, scope: !6959)
!6973 = !DILocation(line: 2639, column: 53, scope: !6959)
!6974 = !DILocation(line: 2639, column: 42, scope: !6959)
!6975 = !DILocation(line: 2639, column: 48, scope: !6959)
!6976 = !DILocation(line: 2639, column: 59, scope: !6959)
!6977 = !DILocation(line: 2640, column: 26, scope: !6959)
!6978 = !DILocation(line: 2640, column: 34, scope: !6959)
!6979 = !DILocation(line: 2640, column: 48, scope: !6959)
!6980 = !DILocation(line: 2640, column: 32, scope: !6959)
!6981 = !DILocation(line: 2640, column: 53, scope: !6959)
!6982 = !DILocation(line: 2640, column: 59, scope: !6959)
!6983 = !DILocation(line: 2640, column: 64, scope: !6959)
!6984 = !DILocation(line: 2639, column: 14, scope: !6959)
!6985 = !DILocation(line: 2639, column: 11, scope: !6959)
!6986 = !DILocation(line: 2643, column: 10, scope: !613)
!6987 = !DILocation(line: 2643, column: 3, scope: !613)
!6988 = !DILocation(line: 2644, column: 1, scope: !613)
!6989 = !DILocalVariable(name: "lzss", arg: 1, scope: !623, file: !1, line: 562, type: !585)
!6990 = !DILocation(line: 562, column: 35, scope: !623)
!6991 = !DILocation(line: 564, column: 36, scope: !623)
!6992 = !DILocation(line: 564, column: 42, scope: !623)
!6993 = !DILocation(line: 564, column: 48, scope: !623)
!6994 = !DILocation(line: 564, column: 10, scope: !623)
!6995 = !DILocation(line: 564, column: 3, scope: !623)
!6996 = !DILocalVariable(name: "lzss", arg: 1, scope: !627, file: !1, line: 550, type: !585)
!6997 = !DILocation(line: 550, column: 40, scope: !627)
!6998 = !DILocalVariable(name: "pos", arg: 2, scope: !627, file: !1, line: 550, type: !52)
!6999 = !DILocation(line: 550, column: 54, scope: !627)
!7000 = !DILocation(line: 552, column: 49, scope: !627)
!7001 = !DILocation(line: 552, column: 55, scope: !627)
!7002 = !DILocation(line: 552, column: 24, scope: !627)
!7003 = !DILocation(line: 552, column: 11, scope: !627)
!7004 = !DILocation(line: 552, column: 17, scope: !627)
!7005 = !DILocation(line: 552, column: 3, scope: !627)
!7006 = !DILocalVariable(name: "lzss", arg: 1, scope: !633, file: !1, line: 556, type: !585)
!7007 = !DILocation(line: 556, column: 34, scope: !633)
!7008 = !DILocation(line: 558, column: 35, scope: !633)
!7009 = !DILocation(line: 558, column: 41, scope: !633)
!7010 = !DILocation(line: 558, column: 47, scope: !633)
!7011 = !DILocation(line: 558, column: 10, scope: !633)
!7012 = !DILocation(line: 558, column: 3, scope: !633)
!7013 = !DILocalVariable(name: "lzss", arg: 1, scope: !634, file: !1, line: 532, type: !585)
!7014 = !DILocation(line: 532, column: 24, scope: !634)
!7015 = !DILocation(line: 534, column: 10, scope: !634)
!7016 = !DILocation(line: 534, column: 16, scope: !634)
!7017 = !DILocation(line: 534, column: 3, scope: !634)
!7018 = !DILocalVariable(name: "lzss", arg: 1, scope: !638, file: !1, line: 526, type: !585)
!7019 = !DILocation(line: 526, column: 28, scope: !638)
!7020 = !DILocation(line: 528, column: 10, scope: !638)
!7021 = !DILocation(line: 528, column: 16, scope: !638)
!7022 = !DILocation(line: 528, column: 3, scope: !638)

; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.archive = type { i32, i32, %struct.archive_vtable*, i32, i8*, i32, i8*, i32, i32, i8*, %struct.archive_string, i8*, i32, i32, %struct.archive_string_conv*, i8*, i64, i64, i64, i8, i64 }
%struct.archive_vtable = type { {}*, {}*, i32 (%struct.archive*, %struct.archive_entry*)*, {}*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i64)*, i32 (%struct.archive*, %struct.archive_entry**)*, i32 (%struct.archive*, %struct.archive_entry*)*, i32 (%struct.archive*, i8**, i64*, i64*)*, {}*, i64 (%struct.archive*, i32)*, i32 (%struct.archive*, i32)*, i8* (%struct.archive*, i32)* }
%struct.archive_entry = type opaque
%struct.archive_string = type { i8*, i64, i64 }
%struct.archive_string_conv = type opaque
%struct.archive_read = type { %struct.archive, %struct.archive_entry*, i32, i64, i64, %struct.archive_read_client, [16 x %struct.archive_read_filter_bidder], %struct.archive_read_filter*, i32, i64, i32, i32, [16 x %struct.archive_format_descriptor], %struct.archive_format_descriptor*, %struct.archive_read_extract*, i32 (%struct.archive_read*)*, %struct.anon }
%struct.archive_read_client = type { i32 (%struct.archive*, i8*)*, i64 (%struct.archive*, i8*, i8**)*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i32)*, i32 (%struct.archive*, i8*)*, i32 (%struct.archive*, i8*, i8*)*, i32, i32, i64, %struct.archive_read_data_node* }
%struct.archive_read_data_node = type { i64, i64, i8* }
%struct.archive_read_filter_bidder = type { i8*, i8*, i32 (%struct.archive_read_filter_bidder*, %struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter_bidder*, i8*, i8*)*, i32 (%struct.archive_read_filter_bidder*)* }
%struct.archive_read_filter = type { i64, %struct.archive_read_filter_bidder*, %struct.archive_read_filter*, %struct.archive_read*, i32 (%struct.archive_read_filter*)*, i64 (%struct.archive_read_filter*, i8**)*, i64 (%struct.archive_read_filter*, i64)*, i64 (%struct.archive_read_filter*, i64, i32)*, i32 (%struct.archive_read_filter*)*, i32 (%struct.archive_read_filter*, i32)*, i8*, i8*, i32, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8, i8, i8 }
%struct.archive_format_descriptor = type { i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)* }
%struct.archive_read_extract = type { %struct.archive*, void (i8*)*, i8* }
%struct.anon = type { %struct.archive_read_passphrase*, %struct.archive_read_passphrase**, i32, i8* (%struct.archive*, i8*)*, i8* }
%struct.archive_read_passphrase = type { i8*, %struct.archive_read_passphrase* }
%struct.iso9660 = type { i32, i32, i32, %struct.archive_string, i8, i8, i8, i8, %struct.file_info*, %struct.read_ce_queue, i64, %struct.archive_string, %struct.file_info*, %struct.heap_queue, %struct.anon.2, %struct.anon.3, i64, i64, i64, i32, %struct.vd, %struct.vd, i64, i64, i64, %struct.zisofs, %struct.content*, %struct.archive_string_conv*, i8*, i64, i8*, i64, [2048 x i8] }
%struct.read_ce_queue = type { %struct.read_ce_req*, i32, i32 }
%struct.read_ce_req = type { i64, %struct.file_info* }
%struct.file_info = type { %struct.file_info*, %struct.file_info*, %struct.file_info*, %struct.file_info*, i32, i64, i64, i64, i32, i32, i8, i8, i8, i8, i64, i32, i64, i64, i64, i64, i64, i32, i32, i32, i64, i32, %struct.archive_string, i8*, i64, i8, %struct.archive_string, i8, i32, i32, i64, i32, %struct.anon.0, %struct.anon.1 }
%struct.anon.0 = type { %struct.content*, %struct.content** }
%struct.anon.1 = type { %struct.file_info*, %struct.file_info** }
%struct.heap_queue = type { %struct.file_info**, i32, i32 }
%struct.anon.2 = type { %struct.file_info*, %struct.file_info** }
%struct.anon.3 = type { %struct.file_info*, %struct.file_info** }
%struct.vd = type { i32, i32 }
%struct.zisofs = type { i32, i32, i64, i32, i8*, i64, i32, [16 x i8], i64, i32, i8*, i64, i64, i64, i64, i32, %struct.z_stream_s, i32 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.content = type { i64, i64, %struct.content* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.anon.4 = type { %struct.file_info*, %struct.file_info** }

@.str = private unnamed_addr constant [36 x i8] c"archive_read_support_format_iso9660\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Can't allocate iso9660 data\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"iso9660\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"CD001\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"joliet\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"rockridge\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Rockridge\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"ISO9660\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"UTF-16BE\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"No memory\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"Pathname is too long\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"No memory for Pathname\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"Pathname cannot be converted from %s to current locale.\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"File is beyond end-of-media: %s\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"No memory for Linkname\00", align 1
@.str.19 = private unnamed_addr constant [56 x i8] c"Linkname cannot be converted from %s to current locale.\00", align 1
@.str.20 = private unnamed_addr constant [47 x i8] c"Ignoring out-of-order file @%jx (%s) %jd < %jd\00", align 1
@.str.21 = private unnamed_addr constant [63 x i8] c"Failed to read full block when scanning ISO9660 directory list\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"ISO9660 with Rockridge extensions\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"Invalid length of directory record\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"Invalid length of file identifier\00", align 1
@.str.25 = private unnamed_addr constant [35 x i8] c"Invalid location of extent of file\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"Directory structure contains loop\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"No memory for file entry\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"No memory for file name\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"SP\07\01\BE\EF\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"rr_moved\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c".rr_moved\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"Invalid Rockridge RE\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"Invalid Rockridge RE and CL\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"Invalid Rockridge CL\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"Invalid parameter in SUSP \22CE\22 extension\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.39 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"ROOT\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"hostname\00", align 1
@.str.43 = private unnamed_addr constant [121 x i8] c"Failed to connect 'CL' pointer to 'RE' rr_moved pointer of Rockridge extensions: current position = %jd, CL offset = %jd\00", align 1
@.str.44 = private unnamed_addr constant [47 x i8] c"Ignoring out-of-order directory (%s) %jd > %jd\00", align 1
@.str.45 = private unnamed_addr constant [37 x i8] c"Directory is beyond end-of-media: %s\00", align 1
@.str.46 = private unnamed_addr constant [27 x i8] c"No memory for multi extent\00", align 1
@.str.47 = private unnamed_addr constant [25 x i8] c"Malformed CE information\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"Ignoring out-of-order file (%s) %jd < %jd\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"Truncated input file\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"Truncated zisofs file body\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"No memory for zisofs decompression\00", align 1
@zisofs_magic = internal constant [8 x i8] c"7\E4S\96\C9\DB\D6\07", align 1
@.str.52 = private unnamed_addr constant [25 x i8] c"Illegal zisofs file body\00", align 1
@.str.53 = private unnamed_addr constant [30 x i8] c"Illegal zisofs block pointers\00", align 1
@.str.54 = private unnamed_addr constant [43 x i8] c"Illegal zisofs block pointers(cannot seek)\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"1.2.3\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"Can't initialize zisofs decompression.\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"zisofs decompression failed (%d)\00", align 1
@.str.58 = private unnamed_addr constant [37 x i8] c"Failed to clean up zlib decompressor\00", align 1

; Function Attrs: nounwind uwtable
define i32 @archive_read_support_format_iso9660(%struct.archive* %_a) #0 !dbg !498 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive*, align 8
  %a = alloca %struct.archive_read*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %r = alloca i32, align 4
  %magic_test = alloca i32, align 4
  store %struct.archive* %_a, %struct.archive** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive** %_a.addr, metadata !622, metadata !623), !dbg !624
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a, metadata !625, metadata !623), !dbg !626
  %0 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !627
  %1 = bitcast %struct.archive* %0 to %struct.archive_read*, !dbg !628
  store %struct.archive_read* %1, %struct.archive_read** %a, align 8, !dbg !626
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !629, metadata !623), !dbg !630
  call void @llvm.dbg.declare(metadata i32* %r, metadata !631, metadata !623), !dbg !632
  br label %do.body, !dbg !633

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %magic_test, metadata !634, metadata !623), !dbg !636
  %2 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !637
  %call = call i32 @__archive_check_magic(%struct.archive* %2, i32 14594245, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0)), !dbg !637
  store i32 %call, i32* %magic_test, align 4, !dbg !637
  %3 = load i32, i32* %magic_test, align 4, !dbg !637
  %cmp = icmp eq i32 %3, -30, !dbg !637
  br i1 %cmp, label %if.then, label %if.end, !dbg !637

if.then:                                          ; preds = %do.body
  store i32 -30, i32* %retval, align 4, !dbg !639
  br label %return, !dbg !639

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !642

do.end:                                           ; preds = %if.end
  %call1 = call noalias i8* @calloc(i64 1, i64 2576) #8, !dbg !644
  %4 = bitcast i8* %call1 to %struct.iso9660*, !dbg !645
  store %struct.iso9660* %4, %struct.iso9660** %iso9660, align 8, !dbg !646
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !647
  %cmp2 = icmp eq %struct.iso9660* %5, null, !dbg !649
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !650

if.then3:                                         ; preds = %do.end
  %6 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !651
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 0, !dbg !653
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)), !dbg !654
  store i32 -30, i32* %retval, align 4, !dbg !655
  br label %return, !dbg !655

if.end4:                                          ; preds = %do.end
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !656
  %magic = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 0, !dbg !657
  store i32 -1772054944, i32* %magic, align 8, !dbg !658
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !659
  %cache_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 14, !dbg !660
  %first = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files, i32 0, i32 0, !dbg !661
  store %struct.file_info* null, %struct.file_info** %first, align 8, !dbg !662
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !663
  %cache_files5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 14, !dbg !664
  %first6 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files5, i32 0, i32 0, !dbg !665
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !666
  %cache_files7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 14, !dbg !667
  %last = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files7, i32 0, i32 1, !dbg !668
  store %struct.file_info** %first6, %struct.file_info*** %last, align 8, !dbg !669
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !670
  %re_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 15, !dbg !671
  %first8 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files, i32 0, i32 0, !dbg !672
  store %struct.file_info* null, %struct.file_info** %first8, align 8, !dbg !673
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !674
  %re_files9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 15, !dbg !675
  %first10 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files9, i32 0, i32 0, !dbg !676
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !677
  %re_files11 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 15, !dbg !678
  %last12 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files11, i32 0, i32 1, !dbg !679
  store %struct.file_info** %first10, %struct.file_info*** %last12, align 8, !dbg !680
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !681
  %opt_support_joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 1, !dbg !682
  store i32 1, i32* %opt_support_joliet, align 4, !dbg !683
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !684
  %opt_support_rockridge = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 2, !dbg !685
  store i32 1, i32* %opt_support_rockridge, align 8, !dbg !686
  %16 = load %struct.archive_read*, %struct.archive_read** %a, align 8, !dbg !687
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !688
  %18 = bitcast %struct.iso9660* %17 to i8*, !dbg !688
  %call13 = call i32 @__archive_read_register_format(%struct.archive_read* %16, i8* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.archive_read*, i32)* @archive_read_format_iso9660_bid, i32 (%struct.archive_read*, i8*, i8*)* @archive_read_format_iso9660_options, i32 (%struct.archive_read*, %struct.archive_entry*)* @archive_read_format_iso9660_read_header, i32 (%struct.archive_read*, i8**, i64*, i64*)* @archive_read_format_iso9660_read_data, i32 (%struct.archive_read*)* @archive_read_format_iso9660_read_data_skip, i64 (%struct.archive_read*, i64, i32)* null, i32 (%struct.archive_read*)* @archive_read_format_iso9660_cleanup, i32 (%struct.archive_read*)* null, i32 (%struct.archive_read*)* null), !dbg !689
  store i32 %call13, i32* %r, align 4, !dbg !690
  %19 = load i32, i32* %r, align 4, !dbg !691
  %cmp14 = icmp ne i32 %19, 0, !dbg !693
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !694

if.then15:                                        ; preds = %if.end4
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !695
  %21 = bitcast %struct.iso9660* %20 to i8*, !dbg !695
  call void @free(i8* %21) #8, !dbg !697
  %22 = load i32, i32* %r, align 4, !dbg !698
  store i32 %22, i32* %retval, align 4, !dbg !699
  br label %return, !dbg !699

if.end16:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !700
  br label %return, !dbg !700

return:                                           ; preds = %if.end16, %if.then15, %if.then3, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !701
  ret i32 %23, !dbg !701
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @__archive_check_magic(%struct.archive*, i32, i32, i8*) #2

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

declare void @archive_set_error(%struct.archive*, i32, i8*, ...) #2

declare i32 @__archive_read_register_format(%struct.archive_read*, i8*, i8*, i32 (%struct.archive_read*, i32)*, i32 (%struct.archive_read*, i8*, i8*)*, i32 (%struct.archive_read*, %struct.archive_entry*)*, i32 (%struct.archive_read*, i8**, i64*, i64*)*, i32 (%struct.archive_read*)*, i64 (%struct.archive_read*, i64, i32)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*, i32 (%struct.archive_read*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_iso9660_bid(%struct.archive_read* %a, i32 %best_bid) #0 !dbg !499 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %best_bid.addr = alloca i32, align 4
  %iso9660 = alloca %struct.iso9660*, align 8
  %bytes_read = alloca i64, align 8
  %p = alloca i8*, align 8
  %seenTerminator = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !702, metadata !623), !dbg !703
  store i32 %best_bid, i32* %best_bid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %best_bid.addr, metadata !704, metadata !623), !dbg !705
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !706, metadata !623), !dbg !707
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !708, metadata !623), !dbg !709
  call void @llvm.dbg.declare(metadata i8** %p, metadata !710, metadata !623), !dbg !711
  call void @llvm.dbg.declare(metadata i32* %seenTerminator, metadata !712, metadata !623), !dbg !713
  %0 = load i32, i32* %best_bid.addr, align 4, !dbg !714
  %cmp = icmp sgt i32 %0, 48, !dbg !716
  br i1 %cmp, label %if.then, label %if.end, !dbg !717

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !718
  br label %return, !dbg !718

if.end:                                           ; preds = %entry
  %1 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !719
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %1, i32 0, i32 13, !dbg !720
  %2 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !720
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %2, i32 0, i32 0, !dbg !721
  %3 = load i8*, i8** %data, align 8, !dbg !721
  %4 = bitcast i8* %3 to %struct.iso9660*, !dbg !722
  store %struct.iso9660* %4, %struct.iso9660** %iso9660, align 8, !dbg !723
  %5 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !724
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %5, i64 49152, i64* %bytes_read), !dbg !725
  store i8* %call, i8** %p, align 8, !dbg !726
  %6 = load i8*, i8** %p, align 8, !dbg !727
  %cmp1 = icmp eq i8* %6, null, !dbg !729
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !730

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !731
  br label %return, !dbg !731

if.end3:                                          ; preds = %if.end
  %7 = load i64, i64* %bytes_read, align 8, !dbg !732
  %sub = sub nsw i64 %7, 32768, !dbg !732
  store i64 %sub, i64* %bytes_read, align 8, !dbg !732
  %8 = load i8*, i8** %p, align 8, !dbg !733
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 32768, !dbg !733
  store i8* %add.ptr, i8** %p, align 8, !dbg !733
  store i32 0, i32* %seenTerminator, align 4, !dbg !734
  br label %for.cond, !dbg !735

for.cond:                                         ; preds = %for.inc, %if.end3
  %9 = load i64, i64* %bytes_read, align 8, !dbg !736
  %cmp4 = icmp sgt i64 %9, 2048, !dbg !740
  br i1 %cmp4, label %for.body, label %for.end, !dbg !741

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !742
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0, !dbg !742
  %11 = load i8, i8* %arrayidx, align 1, !dbg !742
  %conv = zext i8 %11 to i32, !dbg !742
  %cmp5 = icmp sge i32 %conv, 4, !dbg !745
  br i1 %cmp5, label %land.lhs.true, label %if.end12, !dbg !746

land.lhs.true:                                    ; preds = %for.body
  %12 = load i8*, i8** %p, align 8, !dbg !747
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !747
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !747
  %conv8 = zext i8 %13 to i32, !dbg !747
  %cmp9 = icmp sle i32 %conv8, 254, !dbg !749
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !750

if.then11:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !751
  br label %return, !dbg !751

if.end12:                                         ; preds = %land.lhs.true, %for.body
  %14 = load i8*, i8** %p, align 8, !dbg !752
  %add.ptr13 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !754
  %call14 = call i32 @memcmp(i8* %add.ptr13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i64 5) #9, !dbg !755
  %cmp15 = icmp ne i32 %call14, 0, !dbg !756
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !757

if.then17:                                        ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !758
  br label %return, !dbg !758

if.end18:                                         ; preds = %if.end12
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !759
  %16 = load i8*, i8** %p, align 8, !dbg !761
  %call19 = call i32 @isPVD(%struct.iso9660* %15, i8* %16), !dbg !762
  %tobool = icmp ne i32 %call19, 0, !dbg !762
  br i1 %tobool, label %if.then20, label %if.end21, !dbg !763

if.then20:                                        ; preds = %if.end18
  br label %for.inc, !dbg !764

if.end21:                                         ; preds = %if.end18
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !765
  %joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 21, !dbg !767
  %location = getelementptr inbounds %struct.vd, %struct.vd* %joliet, i32 0, i32 0, !dbg !768
  %18 = load i32, i32* %location, align 4, !dbg !768
  %tobool22 = icmp ne i32 %18, 0, !dbg !765
  br i1 %tobool22, label %if.end28, label %if.then23, !dbg !769

if.then23:                                        ; preds = %if.end21
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !770
  %20 = load i8*, i8** %p, align 8, !dbg !773
  %call24 = call i32 @isJolietSVD(%struct.iso9660* %19, i8* %20), !dbg !774
  %tobool25 = icmp ne i32 %call24, 0, !dbg !774
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !775

if.then26:                                        ; preds = %if.then23
  br label %for.inc, !dbg !776

if.end27:                                         ; preds = %if.then23
  br label %if.end28, !dbg !777

if.end28:                                         ; preds = %if.end27, %if.end21
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !778
  %22 = load i8*, i8** %p, align 8, !dbg !780
  %call29 = call i32 @isBootRecord(%struct.iso9660* %21, i8* %22), !dbg !781
  %tobool30 = icmp ne i32 %call29, 0, !dbg !781
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !782

if.then31:                                        ; preds = %if.end28
  br label %for.inc, !dbg !783

if.end32:                                         ; preds = %if.end28
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !784
  %24 = load i8*, i8** %p, align 8, !dbg !786
  %call33 = call i32 @isEVD(%struct.iso9660* %23, i8* %24), !dbg !787
  %tobool34 = icmp ne i32 %call33, 0, !dbg !787
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !788

if.then35:                                        ; preds = %if.end32
  br label %for.inc, !dbg !789

if.end36:                                         ; preds = %if.end32
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !790
  %26 = load i8*, i8** %p, align 8, !dbg !792
  %call37 = call i32 @isSVD(%struct.iso9660* %25, i8* %26), !dbg !793
  %tobool38 = icmp ne i32 %call37, 0, !dbg !793
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !794

if.then39:                                        ; preds = %if.end36
  br label %for.inc, !dbg !795

if.end40:                                         ; preds = %if.end36
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !796
  %28 = load i8*, i8** %p, align 8, !dbg !798
  %call41 = call i32 @isVolumePartition(%struct.iso9660* %27, i8* %28), !dbg !799
  %tobool42 = icmp ne i32 %call41, 0, !dbg !799
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !800

if.then43:                                        ; preds = %if.end40
  br label %for.inc, !dbg !801

if.end44:                                         ; preds = %if.end40
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !802
  %30 = load i8*, i8** %p, align 8, !dbg !804
  %call45 = call i32 @isVDSetTerminator(%struct.iso9660* %29, i8* %30), !dbg !805
  %tobool46 = icmp ne i32 %call45, 0, !dbg !805
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !806

if.then47:                                        ; preds = %if.end44
  store i32 1, i32* %seenTerminator, align 4, !dbg !807
  br label %for.end, !dbg !809

if.end48:                                         ; preds = %if.end44
  store i32 0, i32* %retval, align 4, !dbg !810
  br label %return, !dbg !810

for.inc:                                          ; preds = %if.then43, %if.then39, %if.then35, %if.then31, %if.then26, %if.then20
  %31 = load i64, i64* %bytes_read, align 8, !dbg !811
  %sub49 = sub nsw i64 %31, 2048, !dbg !811
  store i64 %sub49, i64* %bytes_read, align 8, !dbg !811
  %32 = load i8*, i8** %p, align 8, !dbg !812
  %add.ptr50 = getelementptr inbounds i8, i8* %32, i64 2048, !dbg !812
  store i8* %add.ptr50, i8** %p, align 8, !dbg !812
  br label %for.cond, !dbg !813

for.end:                                          ; preds = %if.then47, %for.cond
  %33 = load i32, i32* %seenTerminator, align 4, !dbg !815
  %tobool51 = icmp ne i32 %33, 0, !dbg !815
  br i1 %tobool51, label %land.lhs.true52, label %if.end57, !dbg !817

land.lhs.true52:                                  ; preds = %for.end
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !818
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 20, !dbg !820
  %location53 = getelementptr inbounds %struct.vd, %struct.vd* %primary, i32 0, i32 0, !dbg !821
  %35 = load i32, i32* %location53, align 4, !dbg !821
  %cmp54 = icmp sgt i32 %35, 16, !dbg !822
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !823

if.then56:                                        ; preds = %land.lhs.true52
  store i32 48, i32* %retval, align 4, !dbg !824
  br label %return, !dbg !824

if.end57:                                         ; preds = %land.lhs.true52, %for.end
  store i32 0, i32* %retval, align 4, !dbg !825
  br label %return, !dbg !825

return:                                           ; preds = %if.end57, %if.then56, %if.end48, %if.then17, %if.then11, %if.then2, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !826
  ret i32 %36, !dbg !826
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_iso9660_options(%struct.archive_read* %a, i8* %key, i8* %val) #0 !dbg !522 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %key.addr = alloca i8*, align 8
  %val.addr = alloca i8*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !827, metadata !623), !dbg !828
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !829, metadata !623), !dbg !830
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !831, metadata !623), !dbg !832
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !833, metadata !623), !dbg !834
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !835
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !836
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !836
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !837
  %2 = load i8*, i8** %data, align 8, !dbg !837
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !838
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !839
  %4 = load i8*, i8** %key.addr, align 8, !dbg !840
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0)) #9, !dbg !842
  %cmp = icmp eq i32 %call, 0, !dbg !843
  br i1 %cmp, label %if.then, label %if.end15, !dbg !844

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %val.addr, align 8, !dbg !845
  %cmp1 = icmp eq i8* %5, null, !dbg !848
  br i1 %cmp1, label %if.then13, label %lor.lhs.false, !dbg !849

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i8*, i8** %val.addr, align 8, !dbg !850
  %call2 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0)) #9, !dbg !852
  %cmp3 = icmp eq i32 %call2, 0, !dbg !853
  br i1 %cmp3, label %if.then13, label %lor.lhs.false4, !dbg !854

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %7 = load i8*, i8** %val.addr, align 8, !dbg !855
  %call5 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0)) #9, !dbg !856
  %cmp6 = icmp eq i32 %call5, 0, !dbg !857
  br i1 %cmp6, label %if.then13, label %lor.lhs.false7, !dbg !858

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %8 = load i8*, i8** %val.addr, align 8, !dbg !859
  %call8 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0)) #9, !dbg !860
  %cmp9 = icmp eq i32 %call8, 0, !dbg !861
  br i1 %cmp9, label %if.then13, label %lor.lhs.false10, !dbg !862

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %9 = load i8*, i8** %val.addr, align 8, !dbg !863
  %call11 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0)) #9, !dbg !864
  %cmp12 = icmp eq i32 %call11, 0, !dbg !865
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !866

if.then13:                                        ; preds = %lor.lhs.false10, %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false, %if.then
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !868
  %opt_support_joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 1, !dbg !869
  store i32 0, i32* %opt_support_joliet, align 4, !dbg !870
  br label %if.end, !dbg !868

if.else:                                          ; preds = %lor.lhs.false10
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !871
  %opt_support_joliet14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 1, !dbg !872
  store i32 1, i32* %opt_support_joliet14, align 4, !dbg !873
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  store i32 0, i32* %retval, align 4, !dbg !874
  br label %return, !dbg !874

if.end15:                                         ; preds = %entry
  %12 = load i8*, i8** %key.addr, align 8, !dbg !875
  %call16 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0)) #9, !dbg !877
  %cmp17 = icmp eq i32 %call16, 0, !dbg !878
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !879

lor.lhs.false18:                                  ; preds = %if.end15
  %13 = load i8*, i8** %key.addr, align 8, !dbg !880
  %call19 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0)) #9, !dbg !881
  %cmp20 = icmp eq i32 %call19, 0, !dbg !882
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !883

if.then21:                                        ; preds = %lor.lhs.false18, %if.end15
  %14 = load i8*, i8** %val.addr, align 8, !dbg !885
  %cmp22 = icmp ne i8* %14, null, !dbg !887
  %conv = zext i1 %cmp22 to i32, !dbg !887
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !888
  %opt_support_rockridge = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 2, !dbg !889
  store i32 %conv, i32* %opt_support_rockridge, align 8, !dbg !890
  store i32 0, i32* %retval, align 4, !dbg !891
  br label %return, !dbg !891

if.end23:                                         ; preds = %lor.lhs.false18
  store i32 -20, i32* %retval, align 4, !dbg !892
  br label %return, !dbg !892

return:                                           ; preds = %if.end23, %if.then21, %if.end
  %16 = load i32, i32* %retval, align 4, !dbg !893
  ret i32 %16, !dbg !893
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_iso9660_read_header(%struct.archive_read* %a, %struct.archive_entry* %entry1) #0 !dbg !523 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.file_info*, align 8
  %r = alloca i32, align 4
  %rd_r = alloca i32, align 4
  %path = alloca i8*, align 8
  %r64 = alloca i64, align 8
  %zisofs = alloca %struct.zisofs*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !894, metadata !623), !dbg !895
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !896, metadata !623), !dbg !897
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !898, metadata !623), !dbg !899
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !900, metadata !623), !dbg !901
  call void @llvm.dbg.declare(metadata i32* %r, metadata !902, metadata !623), !dbg !903
  call void @llvm.dbg.declare(metadata i32* %rd_r, metadata !904, metadata !623), !dbg !905
  store i32 0, i32* %rd_r, align 4, !dbg !905
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !906
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !907
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !907
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !908
  %2 = load i8*, i8** %data, align 8, !dbg !908
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !909
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !910
  %4 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !911
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %4, i32 0, i32 0, !dbg !913
  %archive_format = getelementptr inbounds %struct.archive, %struct.archive* %archive, i32 0, i32 3, !dbg !914
  %5 = load i32, i32* %archive_format, align 8, !dbg !914
  %tobool = icmp ne i32 %5, 0, !dbg !911
  br i1 %tobool, label %if.end, label %if.then, !dbg !915

if.then:                                          ; preds = %entry
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !916
  %archive2 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %6, i32 0, i32 0, !dbg !918
  %archive_format3 = getelementptr inbounds %struct.archive, %struct.archive* %archive2, i32 0, i32 3, !dbg !919
  store i32 262144, i32* %archive_format3, align 8, !dbg !920
  %7 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !921
  %archive4 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %7, i32 0, i32 0, !dbg !922
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive4, i32 0, i32 4, !dbg !923
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8** %archive_format_name, align 8, !dbg !924
  br label %if.end, !dbg !925

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !926
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 16, !dbg !928
  %9 = load i64, i64* %current_position, align 8, !dbg !928
  %cmp = icmp eq i64 %9, 0, !dbg !929
  br i1 %cmp, label %if.then5, label %if.end9, !dbg !930

if.then5:                                         ; preds = %if.end
  %10 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !931
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !933
  %call = call i32 @choose_volume(%struct.archive_read* %10, %struct.iso9660* %11), !dbg !934
  store i32 %call, i32* %r, align 4, !dbg !935
  %12 = load i32, i32* %r, align 4, !dbg !936
  %cmp6 = icmp ne i32 %12, 0, !dbg !938
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !939

if.then7:                                         ; preds = %if.then5
  %13 = load i32, i32* %r, align 4, !dbg !940
  store i32 %13, i32* %retval, align 4, !dbg !941
  br label %return, !dbg !941

if.end8:                                          ; preds = %if.then5
  br label %if.end9, !dbg !942

if.end9:                                          ; preds = %if.end8, %if.end
  store %struct.file_info* null, %struct.file_info** %file, align 8, !dbg !943
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !944
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !945
  %call10 = call i32 @next_entry_seek(%struct.archive_read* %14, %struct.iso9660* %15, %struct.file_info** %file), !dbg !946
  store i32 %call10, i32* %r, align 4, !dbg !947
  %16 = load i32, i32* %r, align 4, !dbg !948
  %cmp11 = icmp ne i32 %16, 0, !dbg !950
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !951

if.then12:                                        ; preds = %if.end9
  %17 = load i32, i32* %r, align 4, !dbg !952
  store i32 %17, i32* %retval, align 4, !dbg !953
  br label %return, !dbg !953

if.end13:                                         ; preds = %if.end9
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !954
  %seenJoliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 6, !dbg !956
  %19 = load i8, i8* %seenJoliet, align 2, !dbg !956
  %tobool14 = icmp ne i8 %19, 0, !dbg !954
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !957

if.then15:                                        ; preds = %if.end13
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !958
  %sconv_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 27, !dbg !961
  %21 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be, align 8, !dbg !961
  %cmp16 = icmp eq %struct.archive_string_conv* %21, null, !dbg !962
  br i1 %cmp16, label %if.then17, label %if.end25, !dbg !963

if.then17:                                        ; preds = %if.then15
  %22 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !964
  %archive18 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %22, i32 0, i32 0, !dbg !966
  %call19 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i32 1), !dbg !967
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !968
  %sconv_utf16be20 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 27, !dbg !969
  store %struct.archive_string_conv* %call19, %struct.archive_string_conv** %sconv_utf16be20, align 8, !dbg !970
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !971
  %sconv_utf16be21 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 27, !dbg !973
  %25 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be21, align 8, !dbg !973
  %cmp22 = icmp eq %struct.archive_string_conv* %25, null, !dbg !974
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !975

if.then23:                                        ; preds = %if.then17
  store i32 -30, i32* %retval, align 4, !dbg !976
  br label %return, !dbg !976

if.end24:                                         ; preds = %if.then17
  br label %if.end25, !dbg !977

if.end25:                                         ; preds = %if.end24, %if.then15
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !978
  %utf16be_path = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 28, !dbg !980
  %27 = load i8*, i8** %utf16be_path, align 8, !dbg !980
  %cmp26 = icmp eq i8* %27, null, !dbg !981
  br i1 %cmp26, label %if.then27, label %if.end35, !dbg !982

if.then27:                                        ; preds = %if.end25
  %call28 = call noalias i8* @malloc(i64 1024) #8, !dbg !983
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !985
  %utf16be_path29 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 28, !dbg !986
  store i8* %call28, i8** %utf16be_path29, align 8, !dbg !987
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !988
  %utf16be_path30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 28, !dbg !990
  %30 = load i8*, i8** %utf16be_path30, align 8, !dbg !990
  %cmp31 = icmp eq i8* %30, null, !dbg !991
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !992

if.then32:                                        ; preds = %if.then27
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !993
  %archive33 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %31, i32 0, i32 0, !dbg !995
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive33, i32 12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0)), !dbg !996
  store i32 -30, i32* %retval, align 4, !dbg !997
  br label %return, !dbg !997

if.end34:                                         ; preds = %if.then27
  br label %if.end35, !dbg !998

if.end35:                                         ; preds = %if.end34, %if.end25
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !999
  %utf16be_previous_path = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 30, !dbg !1001
  %33 = load i8*, i8** %utf16be_previous_path, align 8, !dbg !1001
  %cmp36 = icmp eq i8* %33, null, !dbg !1002
  br i1 %cmp36, label %if.then37, label %if.end45, !dbg !1003

if.then37:                                        ; preds = %if.end35
  %call38 = call noalias i8* @malloc(i64 1024) #8, !dbg !1004
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1006
  %utf16be_previous_path39 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 30, !dbg !1007
  store i8* %call38, i8** %utf16be_previous_path39, align 8, !dbg !1008
  %35 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1009
  %utf16be_previous_path40 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %35, i32 0, i32 30, !dbg !1011
  %36 = load i8*, i8** %utf16be_previous_path40, align 8, !dbg !1011
  %cmp41 = icmp eq i8* %36, null, !dbg !1012
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !1013

if.then42:                                        ; preds = %if.then37
  %37 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1014
  %archive43 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %37, i32 0, i32 0, !dbg !1016
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive43, i32 12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0)), !dbg !1017
  store i32 -30, i32* %retval, align 4, !dbg !1018
  br label %return, !dbg !1018

if.end44:                                         ; preds = %if.then37
  br label %if.end45, !dbg !1019

if.end45:                                         ; preds = %if.end44, %if.end35
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1020
  %utf16be_path_len = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 29, !dbg !1021
  store i64 0, i64* %utf16be_path_len, align 8, !dbg !1022
  %39 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1023
  %utf16be_path46 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %39, i32 0, i32 28, !dbg !1025
  %40 = load i8*, i8** %utf16be_path46, align 8, !dbg !1025
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1026
  %utf16be_path_len47 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 29, !dbg !1027
  %42 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1028
  %call48 = call i32 @build_pathname_utf16be(i8* %40, i64 1024, i64* %utf16be_path_len47, %struct.file_info* %42), !dbg !1029
  %cmp49 = icmp ne i32 %call48, 0, !dbg !1030
  br i1 %cmp49, label %if.then50, label %if.end52, !dbg !1031

if.then50:                                        ; preds = %if.end45
  %43 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1032
  %archive51 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %43, i32 0, i32 0, !dbg !1034
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive51, i32 84, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i32 0, i32 0)), !dbg !1035
  store i32 -30, i32* %retval, align 4, !dbg !1036
  br label %return, !dbg !1036

if.end52:                                         ; preds = %if.end45
  %44 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1037
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1038
  %utf16be_path53 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 28, !dbg !1039
  %46 = load i8*, i8** %utf16be_path53, align 8, !dbg !1039
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1040
  %utf16be_path_len54 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 29, !dbg !1041
  %48 = load i64, i64* %utf16be_path_len54, align 8, !dbg !1041
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1042
  %sconv_utf16be55 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 27, !dbg !1043
  %50 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be55, align 8, !dbg !1043
  %call56 = call i32 @_archive_entry_copy_pathname_l(%struct.archive_entry* %44, i8* %46, i64 %48, %struct.archive_string_conv* %50), !dbg !1044
  store i32 %call56, i32* %r, align 4, !dbg !1045
  %51 = load i32, i32* %r, align 4, !dbg !1046
  %cmp57 = icmp ne i32 %51, 0, !dbg !1048
  br i1 %cmp57, label %if.then58, label %if.end67, !dbg !1049

if.then58:                                        ; preds = %if.end52
  %call59 = call i32* @__errno_location() #1, !dbg !1050
  %52 = load i32, i32* %call59, align 4, !dbg !1050
  %cmp60 = icmp eq i32 %52, 12, !dbg !1053
  br i1 %cmp60, label %if.then61, label %if.end63, !dbg !1054

if.then61:                                        ; preds = %if.then58
  %53 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1055
  %archive62 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %53, i32 0, i32 0, !dbg !1057
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive62, i32 12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0)), !dbg !1058
  store i32 -30, i32* %retval, align 4, !dbg !1059
  br label %return, !dbg !1059

if.end63:                                         ; preds = %if.then58
  %54 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1060
  %archive64 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %54, i32 0, i32 0, !dbg !1061
  %55 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1062
  %sconv_utf16be65 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %55, i32 0, i32 27, !dbg !1063
  %56 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be65, align 8, !dbg !1063
  %call66 = call i8* @archive_string_conversion_charset_name(%struct.archive_string_conv* %56), !dbg !1064
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive64, i32 84, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i32 0, i32 0), i8* %call66), !dbg !1065
  store i32 -20, i32* %rd_r, align 4, !dbg !1066
  br label %if.end67, !dbg !1067

if.end67:                                         ; preds = %if.end63, %if.end52
  br label %if.end75, !dbg !1068

if.else:                                          ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %path, metadata !1069, metadata !623), !dbg !1071
  %57 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1072
  %pathname = getelementptr inbounds %struct.iso9660, %struct.iso9660* %57, i32 0, i32 3, !dbg !1073
  %58 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1074
  %call68 = call i8* @build_pathname(%struct.archive_string* %pathname, %struct.file_info* %58, i32 0), !dbg !1075
  store i8* %call68, i8** %path, align 8, !dbg !1071
  %59 = load i8*, i8** %path, align 8, !dbg !1076
  %cmp69 = icmp eq i8* %59, null, !dbg !1078
  br i1 %cmp69, label %if.then70, label %if.else72, !dbg !1079

if.then70:                                        ; preds = %if.else
  %60 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1080
  %archive71 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %60, i32 0, i32 0, !dbg !1082
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive71, i32 84, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i32 0, i32 0)), !dbg !1083
  store i32 -30, i32* %retval, align 4, !dbg !1084
  br label %return, !dbg !1084

if.else72:                                        ; preds = %if.else
  %61 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1085
  %pathname73 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 3, !dbg !1085
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname73, i32 0, i32 1, !dbg !1085
  store i64 0, i64* %length, align 8, !dbg !1085
  %62 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1087
  %63 = load i8*, i8** %path, align 8, !dbg !1088
  call void @archive_entry_set_pathname(%struct.archive_entry* %62, i8* %63), !dbg !1089
  br label %if.end74

if.end74:                                         ; preds = %if.else72
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end67
  %64 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1090
  %size = getelementptr inbounds %struct.file_info, %struct.file_info* %64, i32 0, i32 7, !dbg !1091
  %65 = load i64, i64* %size, align 8, !dbg !1091
  %66 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1092
  %entry_bytes_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %66, i32 0, i32 23, !dbg !1093
  store i64 %65, i64* %entry_bytes_remaining, align 8, !dbg !1094
  %67 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1095
  %entry_sparse_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %67, i32 0, i32 22, !dbg !1096
  store i64 0, i64* %entry_sparse_offset, align 8, !dbg !1097
  %68 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1098
  %offset = getelementptr inbounds %struct.file_info, %struct.file_info* %68, i32 0, i32 6, !dbg !1100
  %69 = load i64, i64* %offset, align 8, !dbg !1100
  %70 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1101
  %size76 = getelementptr inbounds %struct.file_info, %struct.file_info* %70, i32 0, i32 7, !dbg !1102
  %71 = load i64, i64* %size76, align 8, !dbg !1102
  %add = add i64 %69, %71, !dbg !1103
  %72 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1104
  %volume_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %72, i32 0, i32 18, !dbg !1105
  %73 = load i64, i64* %volume_size, align 8, !dbg !1105
  %cmp77 = icmp ugt i64 %add, %73, !dbg !1106
  br i1 %cmp77, label %if.then78, label %if.end82, !dbg !1107

if.then78:                                        ; preds = %if.end75
  %74 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1108
  %archive79 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %74, i32 0, i32 0, !dbg !1110
  %75 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1111
  %call80 = call i8* @archive_entry_pathname(%struct.archive_entry* %75), !dbg !1112
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive79, i32 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i8* %call80), !dbg !1113
  %76 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1114
  %entry_bytes_remaining81 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %76, i32 0, i32 23, !dbg !1115
  store i64 0, i64* %entry_bytes_remaining81, align 8, !dbg !1116
  store i32 -20, i32* %retval, align 4, !dbg !1117
  br label %return, !dbg !1117

if.end82:                                         ; preds = %if.end75
  %77 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1118
  %78 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1119
  %mode = getelementptr inbounds %struct.file_info, %struct.file_info* %78, i32 0, i32 21, !dbg !1120
  %79 = load i32, i32* %mode, align 8, !dbg !1120
  call void @archive_entry_set_mode(%struct.archive_entry* %77, i32 %79), !dbg !1121
  %80 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1122
  %81 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1123
  %uid = getelementptr inbounds %struct.file_info, %struct.file_info* %81, i32 0, i32 22, !dbg !1124
  %82 = load i32, i32* %uid, align 4, !dbg !1124
  %conv = zext i32 %82 to i64, !dbg !1123
  call void @archive_entry_set_uid(%struct.archive_entry* %80, i64 %conv), !dbg !1125
  %83 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1126
  %84 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1127
  %gid = getelementptr inbounds %struct.file_info, %struct.file_info* %84, i32 0, i32 23, !dbg !1128
  %85 = load i32, i32* %gid, align 8, !dbg !1128
  %conv83 = zext i32 %85 to i64, !dbg !1127
  call void @archive_entry_set_gid(%struct.archive_entry* %83, i64 %conv83), !dbg !1129
  %86 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1130
  %87 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1131
  %nlinks = getelementptr inbounds %struct.file_info, %struct.file_info* %87, i32 0, i32 25, !dbg !1132
  %88 = load i32, i32* %nlinks, align 8, !dbg !1132
  call void @archive_entry_set_nlink(%struct.archive_entry* %86, i32 %88), !dbg !1133
  %89 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1134
  %birthtime_is_set = getelementptr inbounds %struct.file_info, %struct.file_info* %89, i32 0, i32 15, !dbg !1136
  %90 = load i32, i32* %birthtime_is_set, align 8, !dbg !1136
  %tobool84 = icmp ne i32 %90, 0, !dbg !1134
  br i1 %tobool84, label %if.then85, label %if.else86, !dbg !1137

if.then85:                                        ; preds = %if.end82
  %91 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1138
  %92 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1139
  %birthtime = getelementptr inbounds %struct.file_info, %struct.file_info* %92, i32 0, i32 16, !dbg !1140
  %93 = load i64, i64* %birthtime, align 8, !dbg !1140
  call void @archive_entry_set_birthtime(%struct.archive_entry* %91, i64 %93, i64 0), !dbg !1141
  br label %if.end87, !dbg !1141

if.else86:                                        ; preds = %if.end82
  %94 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1142
  call void @archive_entry_unset_birthtime(%struct.archive_entry* %94), !dbg !1143
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.then85
  %95 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1144
  %96 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1145
  %mtime = getelementptr inbounds %struct.file_info, %struct.file_info* %96, i32 0, i32 17, !dbg !1146
  %97 = load i64, i64* %mtime, align 8, !dbg !1146
  call void @archive_entry_set_mtime(%struct.archive_entry* %95, i64 %97, i64 0), !dbg !1147
  %98 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1148
  %99 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1149
  %ctime = getelementptr inbounds %struct.file_info, %struct.file_info* %99, i32 0, i32 19, !dbg !1150
  %100 = load i64, i64* %ctime, align 8, !dbg !1150
  call void @archive_entry_set_ctime(%struct.archive_entry* %98, i64 %100, i64 0), !dbg !1151
  %101 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1152
  %102 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1153
  %atime = getelementptr inbounds %struct.file_info, %struct.file_info* %102, i32 0, i32 18, !dbg !1154
  %103 = load i64, i64* %atime, align 8, !dbg !1154
  call void @archive_entry_set_atime(%struct.archive_entry* %101, i64 %103, i64 0), !dbg !1155
  %104 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1156
  %105 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1157
  %rdev = getelementptr inbounds %struct.file_info, %struct.file_info* %105, i32 0, i32 20, !dbg !1158
  %106 = load i64, i64* %rdev, align 8, !dbg !1158
  call void @archive_entry_set_rdev(%struct.archive_entry* %104, i64 %106), !dbg !1159
  %107 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1160
  %108 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1161
  %entry_bytes_remaining88 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %108, i32 0, i32 23, !dbg !1162
  %109 = load i64, i64* %entry_bytes_remaining88, align 8, !dbg !1162
  call void @archive_entry_set_size(%struct.archive_entry* %107, i64 %109), !dbg !1163
  %110 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1164
  %symlink = getelementptr inbounds %struct.file_info, %struct.file_info* %110, i32 0, i32 30, !dbg !1166
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink, i32 0, i32 0, !dbg !1167
  %111 = load i8*, i8** %s, align 8, !dbg !1167
  %cmp89 = icmp ne i8* %111, null, !dbg !1168
  br i1 %cmp89, label %if.then91, label %if.end94, !dbg !1169

if.then91:                                        ; preds = %if.end87
  %112 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1170
  %113 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1171
  %symlink92 = getelementptr inbounds %struct.file_info, %struct.file_info* %113, i32 0, i32 30, !dbg !1172
  %s93 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink92, i32 0, i32 0, !dbg !1173
  %114 = load i8*, i8** %s93, align 8, !dbg !1173
  call void @archive_entry_copy_symlink(%struct.archive_entry* %112, i8* %114), !dbg !1174
  br label %if.end94, !dbg !1174

if.end94:                                         ; preds = %if.then91, %if.end87
  %115 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1175
  %number = getelementptr inbounds %struct.file_info, %struct.file_info* %115, i32 0, i32 24, !dbg !1177
  %116 = load i64, i64* %number, align 8, !dbg !1177
  %cmp95 = icmp ne i64 %116, -1, !dbg !1178
  br i1 %cmp95, label %land.lhs.true, label %if.end124, !dbg !1179

land.lhs.true:                                    ; preds = %if.end94
  %117 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1180
  %number97 = getelementptr inbounds %struct.file_info, %struct.file_info* %117, i32 0, i32 24, !dbg !1181
  %118 = load i64, i64* %number97, align 8, !dbg !1181
  %119 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1182
  %previous_number = getelementptr inbounds %struct.iso9660, %struct.iso9660* %119, i32 0, i32 10, !dbg !1183
  %120 = load i64, i64* %previous_number, align 8, !dbg !1183
  %cmp98 = icmp eq i64 %118, %120, !dbg !1184
  br i1 %cmp98, label %if.then100, label %if.end124, !dbg !1185

if.then100:                                       ; preds = %land.lhs.true
  %121 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1187
  %seenJoliet101 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %121, i32 0, i32 6, !dbg !1190
  %122 = load i8, i8* %seenJoliet101, align 2, !dbg !1190
  %tobool102 = icmp ne i8 %122, 0, !dbg !1187
  br i1 %tobool102, label %if.then103, label %if.else120, !dbg !1191

if.then103:                                       ; preds = %if.then100
  %123 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1192
  %124 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1194
  %utf16be_previous_path104 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %124, i32 0, i32 30, !dbg !1195
  %125 = load i8*, i8** %utf16be_previous_path104, align 8, !dbg !1195
  %126 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1196
  %utf16be_previous_path_len = getelementptr inbounds %struct.iso9660, %struct.iso9660* %126, i32 0, i32 31, !dbg !1197
  %127 = load i64, i64* %utf16be_previous_path_len, align 8, !dbg !1197
  %128 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1198
  %sconv_utf16be105 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %128, i32 0, i32 27, !dbg !1199
  %129 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be105, align 8, !dbg !1199
  %call106 = call i32 @_archive_entry_copy_hardlink_l(%struct.archive_entry* %123, i8* %125, i64 %127, %struct.archive_string_conv* %129), !dbg !1200
  store i32 %call106, i32* %r, align 4, !dbg !1201
  %130 = load i32, i32* %r, align 4, !dbg !1202
  %cmp107 = icmp ne i32 %130, 0, !dbg !1204
  br i1 %cmp107, label %if.then109, label %if.end119, !dbg !1205

if.then109:                                       ; preds = %if.then103
  %call110 = call i32* @__errno_location() #1, !dbg !1206
  %131 = load i32, i32* %call110, align 4, !dbg !1206
  %cmp111 = icmp eq i32 %131, 12, !dbg !1209
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !1210

if.then113:                                       ; preds = %if.then109
  %132 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1211
  %archive114 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %132, i32 0, i32 0, !dbg !1213
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive114, i32 12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i32 0, i32 0)), !dbg !1214
  store i32 -30, i32* %retval, align 4, !dbg !1215
  br label %return, !dbg !1215

if.end115:                                        ; preds = %if.then109
  %133 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1216
  %archive116 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %133, i32 0, i32 0, !dbg !1217
  %134 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1218
  %sconv_utf16be117 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %134, i32 0, i32 27, !dbg !1219
  %135 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_utf16be117, align 8, !dbg !1219
  %call118 = call i8* @archive_string_conversion_charset_name(%struct.archive_string_conv* %135), !dbg !1220
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive116, i32 84, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.19, i32 0, i32 0), i8* %call118), !dbg !1221
  store i32 -20, i32* %rd_r, align 4, !dbg !1222
  br label %if.end119, !dbg !1223

if.end119:                                        ; preds = %if.end115, %if.then103
  br label %if.end122, !dbg !1224

if.else120:                                       ; preds = %if.then100
  %136 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1225
  %137 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1226
  %previous_pathname = getelementptr inbounds %struct.iso9660, %struct.iso9660* %137, i32 0, i32 11, !dbg !1227
  %s121 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %previous_pathname, i32 0, i32 0, !dbg !1228
  %138 = load i8*, i8** %s121, align 8, !dbg !1228
  call void @archive_entry_set_hardlink(%struct.archive_entry* %136, i8* %138), !dbg !1229
  br label %if.end122

if.end122:                                        ; preds = %if.else120, %if.end119
  %139 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1230
  call void @archive_entry_unset_size(%struct.archive_entry* %139), !dbg !1231
  %140 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1232
  %entry_bytes_remaining123 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %140, i32 0, i32 23, !dbg !1233
  store i64 0, i64* %entry_bytes_remaining123, align 8, !dbg !1234
  %141 = load i32, i32* %rd_r, align 4, !dbg !1235
  store i32 %141, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236

if.end124:                                        ; preds = %land.lhs.true, %if.end94
  %142 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1237
  %mode125 = getelementptr inbounds %struct.file_info, %struct.file_info* %142, i32 0, i32 21, !dbg !1239
  %143 = load i32, i32* %mode125, align 8, !dbg !1239
  %and = and i32 %143, 61440, !dbg !1240
  %cmp126 = icmp ne i32 %and, 16384, !dbg !1241
  br i1 %cmp126, label %land.lhs.true128, label %if.end149, !dbg !1242

land.lhs.true128:                                 ; preds = %if.end124
  %144 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1243
  %offset129 = getelementptr inbounds %struct.file_info, %struct.file_info* %144, i32 0, i32 6, !dbg !1244
  %145 = load i64, i64* %offset129, align 8, !dbg !1244
  %146 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1245
  %current_position130 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %146, i32 0, i32 16, !dbg !1246
  %147 = load i64, i64* %current_position130, align 8, !dbg !1246
  %cmp131 = icmp ult i64 %145, %147, !dbg !1247
  br i1 %cmp131, label %if.then133, label %if.end149, !dbg !1248

if.then133:                                       ; preds = %land.lhs.true128
  call void @llvm.dbg.declare(metadata i64* %r64, metadata !1249, metadata !623), !dbg !1251
  %148 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1252
  %149 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1253
  %offset134 = getelementptr inbounds %struct.file_info, %struct.file_info* %149, i32 0, i32 6, !dbg !1254
  %150 = load i64, i64* %offset134, align 8, !dbg !1254
  %call135 = call i64 @__archive_read_seek(%struct.archive_read* %148, i64 %150, i32 0), !dbg !1255
  store i64 %call135, i64* %r64, align 8, !dbg !1256
  %151 = load i64, i64* %r64, align 8, !dbg !1257
  %152 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1259
  %offset136 = getelementptr inbounds %struct.file_info, %struct.file_info* %152, i32 0, i32 6, !dbg !1260
  %153 = load i64, i64* %offset136, align 8, !dbg !1260
  %cmp137 = icmp ne i64 %151, %153, !dbg !1261
  br i1 %cmp137, label %if.then139, label %if.end147, !dbg !1262

if.then139:                                       ; preds = %if.then133
  %154 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1263
  %archive140 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %154, i32 0, i32 0, !dbg !1265
  %155 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1266
  %number141 = getelementptr inbounds %struct.file_info, %struct.file_info* %155, i32 0, i32 24, !dbg !1267
  %156 = load i64, i64* %number141, align 8, !dbg !1267
  %157 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1268
  %pathname142 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %157, i32 0, i32 3, !dbg !1269
  %s143 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname142, i32 0, i32 0, !dbg !1270
  %158 = load i8*, i8** %s143, align 8, !dbg !1270
  %159 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1271
  %offset144 = getelementptr inbounds %struct.file_info, %struct.file_info* %159, i32 0, i32 6, !dbg !1272
  %160 = load i64, i64* %offset144, align 8, !dbg !1272
  %161 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1273
  %current_position145 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %161, i32 0, i32 16, !dbg !1274
  %162 = load i64, i64* %current_position145, align 8, !dbg !1274
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive140, i32 -1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i32 0, i32 0), i64 %156, i8* %158, i64 %160, i64 %162), !dbg !1275
  %163 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1276
  %entry_bytes_remaining146 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %163, i32 0, i32 23, !dbg !1277
  store i64 0, i64* %entry_bytes_remaining146, align 8, !dbg !1278
  store i32 -20, i32* %retval, align 4, !dbg !1279
  br label %return, !dbg !1279

if.end147:                                        ; preds = %if.then133
  %164 = load i64, i64* %r64, align 8, !dbg !1280
  %165 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1281
  %current_position148 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %165, i32 0, i32 16, !dbg !1282
  store i64 %164, i64* %current_position148, align 8, !dbg !1283
  br label %if.end149, !dbg !1284

if.end149:                                        ; preds = %if.end147, %land.lhs.true128, %if.end124
  %166 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1285
  %pz = getelementptr inbounds %struct.file_info, %struct.file_info* %166, i32 0, i32 32, !dbg !1286
  %167 = load i32, i32* %pz, align 4, !dbg !1286
  %168 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1287
  %entry_zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %168, i32 0, i32 25, !dbg !1288
  %pz150 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %entry_zisofs, i32 0, i32 0, !dbg !1289
  store i32 %167, i32* %pz150, align 8, !dbg !1290
  %169 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1291
  %pz151 = getelementptr inbounds %struct.file_info, %struct.file_info* %169, i32 0, i32 32, !dbg !1293
  %170 = load i32, i32* %pz151, align 4, !dbg !1293
  %tobool152 = icmp ne i32 %170, 0, !dbg !1291
  br i1 %tobool152, label %if.then153, label %if.end158, !dbg !1294

if.then153:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata %struct.zisofs** %zisofs, metadata !1295, metadata !623), !dbg !1298
  %171 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1299
  %entry_zisofs154 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %171, i32 0, i32 25, !dbg !1300
  store %struct.zisofs* %entry_zisofs154, %struct.zisofs** %zisofs, align 8, !dbg !1301
  %172 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !1302
  %initialized = getelementptr inbounds %struct.zisofs, %struct.zisofs* %172, i32 0, i32 3, !dbg !1303
  store i32 0, i32* %initialized, align 8, !dbg !1304
  %173 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1305
  %pz_log2_bs = getelementptr inbounds %struct.file_info, %struct.file_info* %173, i32 0, i32 33, !dbg !1306
  %174 = load i32, i32* %pz_log2_bs, align 8, !dbg !1306
  %175 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !1307
  %pz_log2_bs155 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %175, i32 0, i32 1, !dbg !1308
  store i32 %174, i32* %pz_log2_bs155, align 4, !dbg !1309
  %176 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1310
  %pz_uncompressed_size = getelementptr inbounds %struct.file_info, %struct.file_info* %176, i32 0, i32 34, !dbg !1311
  %177 = load i64, i64* %pz_uncompressed_size, align 8, !dbg !1311
  %178 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !1312
  %pz_uncompressed_size156 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %178, i32 0, i32 2, !dbg !1313
  store i64 %177, i64* %pz_uncompressed_size156, align 8, !dbg !1314
  %179 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !1315
  %pz_offset = getelementptr inbounds %struct.zisofs, %struct.zisofs* %179, i32 0, i32 6, !dbg !1316
  store i32 0, i32* %pz_offset, align 8, !dbg !1317
  %180 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !1318
  %header_avail = getelementptr inbounds %struct.zisofs, %struct.zisofs* %180, i32 0, i32 8, !dbg !1319
  store i64 0, i64* %header_avail, align 8, !dbg !1320
  %181 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !1321
  %header_passed = getelementptr inbounds %struct.zisofs, %struct.zisofs* %181, i32 0, i32 9, !dbg !1322
  store i32 0, i32* %header_passed, align 8, !dbg !1323
  %182 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !1324
  %block_pointers_avail = getelementptr inbounds %struct.zisofs, %struct.zisofs* %182, i32 0, i32 13, !dbg !1325
  store i64 0, i64* %block_pointers_avail, align 8, !dbg !1326
  %183 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1327
  %184 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1328
  %pz_uncompressed_size157 = getelementptr inbounds %struct.file_info, %struct.file_info* %184, i32 0, i32 34, !dbg !1329
  %185 = load i64, i64* %pz_uncompressed_size157, align 8, !dbg !1329
  call void @archive_entry_set_size(%struct.archive_entry* %183, i64 %185), !dbg !1330
  br label %if.end158, !dbg !1331

if.end158:                                        ; preds = %if.then153, %if.end149
  %186 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1332
  %number159 = getelementptr inbounds %struct.file_info, %struct.file_info* %186, i32 0, i32 24, !dbg !1333
  %187 = load i64, i64* %number159, align 8, !dbg !1333
  %188 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1334
  %previous_number160 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %188, i32 0, i32 10, !dbg !1335
  store i64 %187, i64* %previous_number160, align 8, !dbg !1336
  %189 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1337
  %seenJoliet161 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %189, i32 0, i32 6, !dbg !1339
  %190 = load i8, i8* %seenJoliet161, align 2, !dbg !1339
  %tobool162 = icmp ne i8 %190, 0, !dbg !1337
  br i1 %tobool162, label %if.then163, label %if.else169, !dbg !1340

if.then163:                                       ; preds = %if.end158
  %191 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1341
  %utf16be_previous_path164 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %191, i32 0, i32 30, !dbg !1343
  %192 = load i8*, i8** %utf16be_previous_path164, align 8, !dbg !1343
  %193 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1344
  %utf16be_path165 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %193, i32 0, i32 28, !dbg !1345
  %194 = load i8*, i8** %utf16be_path165, align 8, !dbg !1345
  %195 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1346
  %utf16be_path_len166 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %195, i32 0, i32 29, !dbg !1347
  %196 = load i64, i64* %utf16be_path_len166, align 8, !dbg !1347
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* %194, i64 %196, i32 1, i1 false), !dbg !1348
  %197 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1349
  %utf16be_path_len167 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %197, i32 0, i32 29, !dbg !1350
  %198 = load i64, i64* %utf16be_path_len167, align 8, !dbg !1350
  %199 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1351
  %utf16be_previous_path_len168 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %199, i32 0, i32 31, !dbg !1352
  store i64 %198, i64* %utf16be_previous_path_len168, align 8, !dbg !1353
  br label %if.end183, !dbg !1354

if.else169:                                       ; preds = %if.end158
  %200 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1355
  %previous_pathname170 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %200, i32 0, i32 11, !dbg !1355
  %length171 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %previous_pathname170, i32 0, i32 1, !dbg !1355
  store i64 0, i64* %length171, align 8, !dbg !1355
  %201 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1355
  %previous_pathname172 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %201, i32 0, i32 11, !dbg !1355
  %202 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1355
  %pathname173 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %202, i32 0, i32 3, !dbg !1355
  %s174 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname173, i32 0, i32 0, !dbg !1355
  %203 = load i8*, i8** %s174, align 8, !dbg !1355
  %204 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1355
  %pathname175 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %204, i32 0, i32 3, !dbg !1355
  %s176 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname175, i32 0, i32 0, !dbg !1355
  %205 = load i8*, i8** %s176, align 8, !dbg !1355
  %cmp177 = icmp eq i8* %205, null, !dbg !1355
  br i1 %cmp177, label %cond.true, label %cond.false, !dbg !1355

cond.true:                                        ; preds = %if.else169
  br label %cond.end, !dbg !1356

cond.false:                                       ; preds = %if.else169
  %206 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1358
  %pathname179 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %206, i32 0, i32 3, !dbg !1358
  %s180 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname179, i32 0, i32 0, !dbg !1358
  %207 = load i8*, i8** %s180, align 8, !dbg !1358
  %call181 = call i64 @strlen(i8* %207) #9, !dbg !1358
  br label %cond.end, !dbg !1358

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %call181, %cond.false ], !dbg !1360
  %call182 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %previous_pathname172, i8* %203, i64 %cond), !dbg !1360
  br label %if.end183

if.end183:                                        ; preds = %cond.end, %if.then163
  %208 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1362
  %contents = getelementptr inbounds %struct.file_info, %struct.file_info* %208, i32 0, i32 36, !dbg !1363
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %contents, i32 0, i32 0, !dbg !1364
  %209 = load %struct.content*, %struct.content** %first, align 8, !dbg !1364
  %210 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1365
  %entry_content = getelementptr inbounds %struct.iso9660, %struct.iso9660* %210, i32 0, i32 26, !dbg !1366
  store %struct.content* %209, %struct.content** %entry_content, align 8, !dbg !1367
  %211 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1368
  %entry_content184 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %211, i32 0, i32 26, !dbg !1370
  %212 = load %struct.content*, %struct.content** %entry_content184, align 8, !dbg !1370
  %cmp185 = icmp ne %struct.content* %212, null, !dbg !1371
  br i1 %cmp185, label %if.then187, label %if.end191, !dbg !1372

if.then187:                                       ; preds = %if.end183
  %213 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1373
  %entry_content188 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %213, i32 0, i32 26, !dbg !1374
  %214 = load %struct.content*, %struct.content** %entry_content188, align 8, !dbg !1374
  %size189 = getelementptr inbounds %struct.content, %struct.content* %214, i32 0, i32 1, !dbg !1375
  %215 = load i64, i64* %size189, align 8, !dbg !1375
  %216 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1376
  %entry_bytes_remaining190 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %216, i32 0, i32 23, !dbg !1377
  store i64 %215, i64* %entry_bytes_remaining190, align 8, !dbg !1378
  br label %if.end191, !dbg !1376

if.end191:                                        ; preds = %if.then187, %if.end183
  %217 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1379
  %call192 = call i32 @archive_entry_filetype(%struct.archive_entry* %217), !dbg !1381
  %cmp193 = icmp eq i32 %call192, 16384, !dbg !1382
  br i1 %cmp193, label %if.then195, label %if.end198, !dbg !1383

if.then195:                                       ; preds = %if.end191
  %218 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !1384
  %219 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !1386
  %subdirs = getelementptr inbounds %struct.file_info, %struct.file_info* %219, i32 0, i32 4, !dbg !1387
  %220 = load i32, i32* %subdirs, align 8, !dbg !1387
  %add196 = add nsw i32 2, %220, !dbg !1388
  call void @archive_entry_set_nlink(%struct.archive_entry* %218, i32 %add196), !dbg !1389
  %221 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1390
  %entry_bytes_remaining197 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %221, i32 0, i32 23, !dbg !1391
  store i64 0, i64* %entry_bytes_remaining197, align 8, !dbg !1392
  br label %if.end198, !dbg !1393

if.end198:                                        ; preds = %if.then195, %if.end191
  %222 = load i32, i32* %rd_r, align 4, !dbg !1394
  %cmp199 = icmp ne i32 %222, 0, !dbg !1396
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !1397

if.then201:                                       ; preds = %if.end198
  %223 = load i32, i32* %rd_r, align 4, !dbg !1398
  store i32 %223, i32* %retval, align 4, !dbg !1399
  br label %return, !dbg !1399

if.end202:                                        ; preds = %if.end198
  store i32 0, i32* %retval, align 4, !dbg !1400
  br label %return, !dbg !1400

return:                                           ; preds = %if.end202, %if.then201, %if.then139, %if.end122, %if.then113, %if.then78, %if.then70, %if.then61, %if.then50, %if.then42, %if.then32, %if.then23, %if.then12, %if.then7
  %224 = load i32, i32* %retval, align 4, !dbg !1401
  ret i32 %224, !dbg !1401
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_iso9660_read_data(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !608 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %bytes_read = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %step = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1402, metadata !623), !dbg !1403
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !1404, metadata !623), !dbg !1405
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !1406, metadata !623), !dbg !1407
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !1408, metadata !623), !dbg !1409
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !1410, metadata !623), !dbg !1411
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !1412, metadata !623), !dbg !1413
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1414
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1415
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1415
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1416
  %2 = load i8*, i8** %data, align 8, !dbg !1416
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !1417
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !1418
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1419
  %entry_bytes_unconsumed = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 24, !dbg !1421
  %5 = load i64, i64* %entry_bytes_unconsumed, align 8, !dbg !1421
  %tobool = icmp ne i64 %5, 0, !dbg !1419
  br i1 %tobool, label %if.then, label %if.end, !dbg !1422

if.then:                                          ; preds = %entry
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1423
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1425
  %entry_bytes_unconsumed1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 24, !dbg !1426
  %8 = load i64, i64* %entry_bytes_unconsumed1, align 8, !dbg !1426
  %call = call i64 @__archive_read_consume(%struct.archive_read* %6, i64 %8), !dbg !1427
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1428
  %entry_bytes_unconsumed2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 24, !dbg !1429
  store i64 0, i64* %entry_bytes_unconsumed2, align 8, !dbg !1430
  br label %if.end, !dbg !1431

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1432
  %entry_bytes_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 23, !dbg !1434
  %11 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !1434
  %cmp = icmp sle i64 %11, 0, !dbg !1435
  br i1 %cmp, label %if.then3, label %if.end42, !dbg !1436

if.then3:                                         ; preds = %if.end
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1437
  %entry_content = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 26, !dbg !1440
  %13 = load %struct.content*, %struct.content** %entry_content, align 8, !dbg !1440
  %cmp4 = icmp ne %struct.content* %13, null, !dbg !1441
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !1442

if.then5:                                         ; preds = %if.then3
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1443
  %entry_content6 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 26, !dbg !1444
  %15 = load %struct.content*, %struct.content** %entry_content6, align 8, !dbg !1444
  %next = getelementptr inbounds %struct.content, %struct.content* %15, i32 0, i32 2, !dbg !1445
  %16 = load %struct.content*, %struct.content** %next, align 8, !dbg !1445
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1446
  %entry_content7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 26, !dbg !1447
  store %struct.content* %16, %struct.content** %entry_content7, align 8, !dbg !1448
  br label %if.end8, !dbg !1446

if.end8:                                          ; preds = %if.then5, %if.then3
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1449
  %entry_content9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 26, !dbg !1451
  %19 = load %struct.content*, %struct.content** %entry_content9, align 8, !dbg !1451
  %cmp10 = icmp eq %struct.content* %19, null, !dbg !1452
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1453

if.then11:                                        ; preds = %if.end8
  %20 = load i8**, i8*** %buff.addr, align 8, !dbg !1454
  store i8* null, i8** %20, align 8, !dbg !1456
  %21 = load i64*, i64** %size.addr, align 8, !dbg !1457
  store i64 0, i64* %21, align 8, !dbg !1458
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1459
  %entry_sparse_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %22, i32 0, i32 22, !dbg !1460
  %23 = load i64, i64* %entry_sparse_offset, align 8, !dbg !1460
  %24 = load i64*, i64** %offset.addr, align 8, !dbg !1461
  store i64 %23, i64* %24, align 8, !dbg !1462
  store i32 1, i32* %retval, align 4, !dbg !1463
  br label %return, !dbg !1463

if.end12:                                         ; preds = %if.end8
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1464
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %25, i32 0, i32 16, !dbg !1466
  %26 = load i64, i64* %current_position, align 8, !dbg !1466
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1467
  %entry_content13 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %27, i32 0, i32 26, !dbg !1468
  %28 = load %struct.content*, %struct.content** %entry_content13, align 8, !dbg !1468
  %offset14 = getelementptr inbounds %struct.content, %struct.content* %28, i32 0, i32 0, !dbg !1469
  %29 = load i64, i64* %offset14, align 8, !dbg !1469
  %cmp15 = icmp ult i64 %26, %29, !dbg !1470
  br i1 %cmp15, label %if.then16, label %if.end27, !dbg !1471

if.then16:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1472, metadata !623), !dbg !1474
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1475
  %entry_content17 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 26, !dbg !1476
  %31 = load %struct.content*, %struct.content** %entry_content17, align 8, !dbg !1476
  %offset18 = getelementptr inbounds %struct.content, %struct.content* %31, i32 0, i32 0, !dbg !1477
  %32 = load i64, i64* %offset18, align 8, !dbg !1477
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1478
  %current_position19 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %33, i32 0, i32 16, !dbg !1479
  %34 = load i64, i64* %current_position19, align 8, !dbg !1479
  %sub = sub i64 %32, %34, !dbg !1480
  store i64 %sub, i64* %step, align 8, !dbg !1481
  %35 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1482
  %36 = load i64, i64* %step, align 8, !dbg !1483
  %call20 = call i64 @__archive_read_consume(%struct.archive_read* %35, i64 %36), !dbg !1484
  store i64 %call20, i64* %step, align 8, !dbg !1485
  %37 = load i64, i64* %step, align 8, !dbg !1486
  %cmp21 = icmp slt i64 %37, 0, !dbg !1488
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !1489

if.then22:                                        ; preds = %if.then16
  %38 = load i64, i64* %step, align 8, !dbg !1490
  %conv = trunc i64 %38 to i32, !dbg !1491
  store i32 %conv, i32* %retval, align 4, !dbg !1492
  br label %return, !dbg !1492

if.end23:                                         ; preds = %if.then16
  %39 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1493
  %entry_content24 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %39, i32 0, i32 26, !dbg !1494
  %40 = load %struct.content*, %struct.content** %entry_content24, align 8, !dbg !1494
  %offset25 = getelementptr inbounds %struct.content, %struct.content* %40, i32 0, i32 0, !dbg !1495
  %41 = load i64, i64* %offset25, align 8, !dbg !1495
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1496
  %current_position26 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %42, i32 0, i32 16, !dbg !1497
  store i64 %41, i64* %current_position26, align 8, !dbg !1498
  br label %if.end27, !dbg !1499

if.end27:                                         ; preds = %if.end23, %if.end12
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1500
  %entry_content28 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 26, !dbg !1502
  %44 = load %struct.content*, %struct.content** %entry_content28, align 8, !dbg !1502
  %offset29 = getelementptr inbounds %struct.content, %struct.content* %44, i32 0, i32 0, !dbg !1503
  %45 = load i64, i64* %offset29, align 8, !dbg !1503
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1504
  %current_position30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 16, !dbg !1505
  %47 = load i64, i64* %current_position30, align 8, !dbg !1505
  %cmp31 = icmp ult i64 %45, %47, !dbg !1506
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !1507

if.then33:                                        ; preds = %if.end27
  %48 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1508
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %48, i32 0, i32 0, !dbg !1510
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1511
  %pathname = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 3, !dbg !1512
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %pathname, i32 0, i32 0, !dbg !1513
  %50 = load i8*, i8** %s, align 8, !dbg !1513
  %51 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1514
  %entry_content34 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %51, i32 0, i32 26, !dbg !1515
  %52 = load %struct.content*, %struct.content** %entry_content34, align 8, !dbg !1515
  %offset35 = getelementptr inbounds %struct.content, %struct.content* %52, i32 0, i32 0, !dbg !1516
  %53 = load i64, i64* %offset35, align 8, !dbg !1516
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1517
  %current_position36 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 16, !dbg !1518
  %55 = load i64, i64* %current_position36, align 8, !dbg !1518
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i32 0, i32 0), i8* %50, i64 %53, i64 %55), !dbg !1519
  %56 = load i8**, i8*** %buff.addr, align 8, !dbg !1520
  store i8* null, i8** %56, align 8, !dbg !1521
  %57 = load i64*, i64** %size.addr, align 8, !dbg !1522
  store i64 0, i64* %57, align 8, !dbg !1523
  %58 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1524
  %entry_sparse_offset37 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %58, i32 0, i32 22, !dbg !1525
  %59 = load i64, i64* %entry_sparse_offset37, align 8, !dbg !1525
  %60 = load i64*, i64** %offset.addr, align 8, !dbg !1526
  store i64 %59, i64* %60, align 8, !dbg !1527
  store i32 -20, i32* %retval, align 4, !dbg !1528
  br label %return, !dbg !1528

if.end38:                                         ; preds = %if.end27
  %61 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1529
  %entry_content39 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 26, !dbg !1530
  %62 = load %struct.content*, %struct.content** %entry_content39, align 8, !dbg !1530
  %size40 = getelementptr inbounds %struct.content, %struct.content* %62, i32 0, i32 1, !dbg !1531
  %63 = load i64, i64* %size40, align 8, !dbg !1531
  %64 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1532
  %entry_bytes_remaining41 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %64, i32 0, i32 23, !dbg !1533
  store i64 %63, i64* %entry_bytes_remaining41, align 8, !dbg !1534
  br label %if.end42, !dbg !1535

if.end42:                                         ; preds = %if.end38, %if.end
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1536
  %entry_zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 25, !dbg !1538
  %pz = getelementptr inbounds %struct.zisofs, %struct.zisofs* %entry_zisofs, i32 0, i32 0, !dbg !1539
  %66 = load i32, i32* %pz, align 8, !dbg !1539
  %tobool43 = icmp ne i32 %66, 0, !dbg !1536
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !1540

if.then44:                                        ; preds = %if.end42
  %67 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1541
  %68 = load i8**, i8*** %buff.addr, align 8, !dbg !1542
  %69 = load i64*, i64** %size.addr, align 8, !dbg !1543
  %70 = load i64*, i64** %offset.addr, align 8, !dbg !1544
  %call45 = call i32 @zisofs_read_data(%struct.archive_read* %67, i8** %68, i64* %69, i64* %70), !dbg !1545
  store i32 %call45, i32* %retval, align 4, !dbg !1546
  br label %return, !dbg !1546

if.end46:                                         ; preds = %if.end42
  %71 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1547
  %call47 = call i8* @__archive_read_ahead(%struct.archive_read* %71, i64 1, i64* %bytes_read), !dbg !1548
  %72 = load i8**, i8*** %buff.addr, align 8, !dbg !1549
  store i8* %call47, i8** %72, align 8, !dbg !1550
  %73 = load i64, i64* %bytes_read, align 8, !dbg !1551
  %cmp48 = icmp eq i64 %73, 0, !dbg !1553
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !1554

if.then50:                                        ; preds = %if.end46
  %74 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1555
  %archive51 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %74, i32 0, i32 0, !dbg !1556
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive51, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i32 0, i32 0)), !dbg !1557
  br label %if.end52, !dbg !1557

if.end52:                                         ; preds = %if.then50, %if.end46
  %75 = load i8**, i8*** %buff.addr, align 8, !dbg !1558
  %76 = load i8*, i8** %75, align 8, !dbg !1560
  %cmp53 = icmp eq i8* %76, null, !dbg !1561
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !1562

if.then55:                                        ; preds = %if.end52
  store i32 -30, i32* %retval, align 4, !dbg !1563
  br label %return, !dbg !1563

if.end56:                                         ; preds = %if.end52
  %77 = load i64, i64* %bytes_read, align 8, !dbg !1564
  %78 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1566
  %entry_bytes_remaining57 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %78, i32 0, i32 23, !dbg !1567
  %79 = load i64, i64* %entry_bytes_remaining57, align 8, !dbg !1567
  %cmp58 = icmp sgt i64 %77, %79, !dbg !1568
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !1569

if.then60:                                        ; preds = %if.end56
  %80 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1570
  %entry_bytes_remaining61 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %80, i32 0, i32 23, !dbg !1571
  %81 = load i64, i64* %entry_bytes_remaining61, align 8, !dbg !1571
  store i64 %81, i64* %bytes_read, align 8, !dbg !1572
  br label %if.end62, !dbg !1573

if.end62:                                         ; preds = %if.then60, %if.end56
  %82 = load i64, i64* %bytes_read, align 8, !dbg !1574
  %83 = load i64*, i64** %size.addr, align 8, !dbg !1575
  store i64 %82, i64* %83, align 8, !dbg !1576
  %84 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1577
  %entry_sparse_offset63 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %84, i32 0, i32 22, !dbg !1578
  %85 = load i64, i64* %entry_sparse_offset63, align 8, !dbg !1578
  %86 = load i64*, i64** %offset.addr, align 8, !dbg !1579
  store i64 %85, i64* %86, align 8, !dbg !1580
  %87 = load i64, i64* %bytes_read, align 8, !dbg !1581
  %88 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1582
  %entry_sparse_offset64 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %88, i32 0, i32 22, !dbg !1583
  %89 = load i64, i64* %entry_sparse_offset64, align 8, !dbg !1584
  %add = add nsw i64 %89, %87, !dbg !1584
  store i64 %add, i64* %entry_sparse_offset64, align 8, !dbg !1584
  %90 = load i64, i64* %bytes_read, align 8, !dbg !1585
  %91 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1586
  %entry_bytes_remaining65 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %91, i32 0, i32 23, !dbg !1587
  %92 = load i64, i64* %entry_bytes_remaining65, align 8, !dbg !1588
  %sub66 = sub nsw i64 %92, %90, !dbg !1588
  store i64 %sub66, i64* %entry_bytes_remaining65, align 8, !dbg !1588
  %93 = load i64, i64* %bytes_read, align 8, !dbg !1589
  %94 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1590
  %entry_bytes_unconsumed67 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %94, i32 0, i32 24, !dbg !1591
  store i64 %93, i64* %entry_bytes_unconsumed67, align 8, !dbg !1592
  %95 = load i64, i64* %bytes_read, align 8, !dbg !1593
  %96 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1594
  %current_position68 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %96, i32 0, i32 16, !dbg !1595
  %97 = load i64, i64* %current_position68, align 8, !dbg !1596
  %add69 = add i64 %97, %95, !dbg !1596
  store i64 %add69, i64* %current_position68, align 8, !dbg !1596
  store i32 0, i32* %retval, align 4, !dbg !1597
  br label %return, !dbg !1597

return:                                           ; preds = %if.end62, %if.then55, %if.then44, %if.then33, %if.then22, %if.then11
  %98 = load i32, i32* %retval, align 4, !dbg !1598
  ret i32 %98, !dbg !1598
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_iso9660_read_data_skip(%struct.archive_read* %a) #0 !dbg !607 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1599, metadata !623), !dbg !1600
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1601
  ret i32 0, !dbg !1602
}

; Function Attrs: nounwind uwtable
define internal i32 @archive_read_format_iso9660_cleanup(%struct.archive_read* %a) #0 !dbg !610 {
entry:
  %a.addr = alloca %struct.archive_read*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !1603, metadata !623), !dbg !1604
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !1605, metadata !623), !dbg !1606
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1607, metadata !623), !dbg !1608
  store i32 0, i32* %r, align 4, !dbg !1608
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1609
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !1610
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !1610
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !1611
  %2 = load i8*, i8** %data, align 8, !dbg !1611
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !1612
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !1613
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1614
  call void @release_files(%struct.iso9660* %4), !dbg !1615
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1616
  %read_ce_req = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 9, !dbg !1617
  %reqs = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %read_ce_req, i32 0, i32 0, !dbg !1618
  %6 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs, align 8, !dbg !1618
  %7 = bitcast %struct.read_ce_req* %6 to i8*, !dbg !1616
  call void @free(i8* %7) #8, !dbg !1619
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1620
  %pathname = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 3, !dbg !1621
  call void @archive_string_free(%struct.archive_string* %pathname), !dbg !1622
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1623
  %previous_pathname = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 11, !dbg !1624
  call void @archive_string_free(%struct.archive_string* %previous_pathname), !dbg !1625
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1626
  %pending_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 13, !dbg !1628
  %files = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %pending_files, i32 0, i32 0, !dbg !1629
  %11 = load %struct.file_info**, %struct.file_info*** %files, align 8, !dbg !1629
  %tobool = icmp ne %struct.file_info** %11, null, !dbg !1626
  br i1 %tobool, label %if.then, label %if.end, !dbg !1630

if.then:                                          ; preds = %entry
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1631
  %pending_files1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 13, !dbg !1632
  %files2 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %pending_files1, i32 0, i32 0, !dbg !1633
  %13 = load %struct.file_info**, %struct.file_info*** %files2, align 8, !dbg !1633
  %14 = bitcast %struct.file_info** %13 to i8*, !dbg !1631
  call void @free(i8* %14) #8, !dbg !1634
  br label %if.end, !dbg !1634

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1635
  %entry_zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 25, !dbg !1636
  %uncompressed_buffer = getelementptr inbounds %struct.zisofs, %struct.zisofs* %entry_zisofs, i32 0, i32 4, !dbg !1637
  %16 = load i8*, i8** %uncompressed_buffer, align 8, !dbg !1637
  call void @free(i8* %16) #8, !dbg !1638
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1639
  %entry_zisofs3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 25, !dbg !1640
  %block_pointers = getelementptr inbounds %struct.zisofs, %struct.zisofs* %entry_zisofs3, i32 0, i32 10, !dbg !1641
  %18 = load i8*, i8** %block_pointers, align 8, !dbg !1641
  call void @free(i8* %18) #8, !dbg !1642
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1643
  %entry_zisofs4 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 25, !dbg !1645
  %stream_valid = getelementptr inbounds %struct.zisofs, %struct.zisofs* %entry_zisofs4, i32 0, i32 17, !dbg !1646
  %20 = load i32, i32* %stream_valid, align 8, !dbg !1646
  %tobool5 = icmp ne i32 %20, 0, !dbg !1643
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !1647

if.then6:                                         ; preds = %if.end
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1648
  %entry_zisofs7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 25, !dbg !1651
  %stream = getelementptr inbounds %struct.zisofs, %struct.zisofs* %entry_zisofs7, i32 0, i32 16, !dbg !1652
  %call = call i32 @cm_zlib_inflateEnd(%struct.z_stream_s* %stream), !dbg !1653
  %cmp = icmp ne i32 %call, 0, !dbg !1654
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !1655

if.then8:                                         ; preds = %if.then6
  %22 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1656
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %22, i32 0, i32 0, !dbg !1658
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.58, i32 0, i32 0)), !dbg !1659
  store i32 -30, i32* %r, align 4, !dbg !1660
  br label %if.end9, !dbg !1661

if.end9:                                          ; preds = %if.then8, %if.then6
  br label %if.end10, !dbg !1662

if.end10:                                         ; preds = %if.end9, %if.end
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1663
  %utf16be_path = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 28, !dbg !1664
  %24 = load i8*, i8** %utf16be_path, align 8, !dbg !1664
  call void @free(i8* %24) #8, !dbg !1665
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1666
  %utf16be_previous_path = getelementptr inbounds %struct.iso9660, %struct.iso9660* %25, i32 0, i32 30, !dbg !1667
  %26 = load i8*, i8** %utf16be_previous_path, align 8, !dbg !1667
  call void @free(i8* %26) #8, !dbg !1668
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1669
  %28 = bitcast %struct.iso9660* %27 to i8*, !dbg !1669
  call void @free(i8* %28) #8, !dbg !1670
  %29 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !1671
  %format11 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %29, i32 0, i32 13, !dbg !1672
  %30 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format11, align 8, !dbg !1672
  %data12 = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %30, i32 0, i32 0, !dbg !1673
  store i8* null, i8** %data12, align 8, !dbg !1674
  %31 = load i32, i32* %r, align 4, !dbg !1675
  ret i32 %31, !dbg !1676
}

; Function Attrs: nounwind
declare void @free(i8*) #3

declare i8* @__archive_read_ahead(%struct.archive_read*, i64, i64*) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @isPVD(%struct.iso9660* %iso9660, i8* %h) #0 !dbg !500 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %logical_block_size = alloca i64, align 8
  %volume_block = alloca i32, align 4
  %location = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1677, metadata !623), !dbg !1678
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !1679, metadata !623), !dbg !1680
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1681, metadata !623), !dbg !1682
  call void @llvm.dbg.declare(metadata i64* %logical_block_size, metadata !1683, metadata !623), !dbg !1684
  call void @llvm.dbg.declare(metadata i32* %volume_block, metadata !1685, metadata !623), !dbg !1686
  call void @llvm.dbg.declare(metadata i32* %location, metadata !1687, metadata !623), !dbg !1688
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1689, metadata !623), !dbg !1690
  %0 = load i8*, i8** %h.addr, align 8, !dbg !1691
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !1691
  %1 = load i8, i8* %arrayidx, align 1, !dbg !1691
  %conv = zext i8 %1 to i32, !dbg !1691
  %cmp = icmp ne i32 %conv, 1, !dbg !1693
  br i1 %cmp, label %if.then, label %if.end, !dbg !1694

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1695
  br label %return, !dbg !1695

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %h.addr, align 8, !dbg !1696
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 6, !dbg !1696
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !1696
  %conv3 = zext i8 %3 to i32, !dbg !1696
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !1698
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !1699

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1700
  br label %return, !dbg !1700

if.end7:                                          ; preds = %if.end
  %4 = load i8*, i8** %h.addr, align 8, !dbg !1701
  %arrayidx8 = getelementptr inbounds i8, i8* %4, i64 7, !dbg !1701
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !1701
  %conv9 = zext i8 %5 to i32, !dbg !1701
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !1703
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !1704

if.then12:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !1705
  br label %return, !dbg !1705

if.end13:                                         ; preds = %if.end7
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1706
  %7 = load i8*, i8** %h.addr, align 8, !dbg !1708
  %call = call i32 @isNull(%struct.iso9660* %6, i8* %7, i32 72, i32 8), !dbg !1709
  %tobool = icmp ne i32 %call, 0, !dbg !1709
  br i1 %tobool, label %if.end15, label %if.then14, !dbg !1710

if.then14:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !1711
  br label %return, !dbg !1711

if.end15:                                         ; preds = %if.end13
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1712
  %9 = load i8*, i8** %h.addr, align 8, !dbg !1714
  %call16 = call i32 @isNull(%struct.iso9660* %8, i8* %9, i32 88, i32 32), !dbg !1715
  %tobool17 = icmp ne i32 %call16, 0, !dbg !1715
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !1716

if.then18:                                        ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !1717
  br label %return, !dbg !1717

if.end19:                                         ; preds = %if.end15
  %10 = load i8*, i8** %h.addr, align 8, !dbg !1718
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 128, !dbg !1719
  %call20 = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !1720
  %conv21 = zext i16 %call20 to i64, !dbg !1720
  store i64 %conv21, i64* %logical_block_size, align 8, !dbg !1721
  %11 = load i64, i64* %logical_block_size, align 8, !dbg !1722
  %cmp22 = icmp sle i64 %11, 0, !dbg !1724
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !1725

if.then24:                                        ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !1726
  br label %return, !dbg !1726

if.end25:                                         ; preds = %if.end19
  %12 = load i8*, i8** %h.addr, align 8, !dbg !1727
  %add.ptr26 = getelementptr inbounds i8, i8* %12, i64 80, !dbg !1728
  %call27 = call i32 @archive_le32dec(i8* %add.ptr26), !dbg !1729
  store i32 %call27, i32* %volume_block, align 4, !dbg !1730
  %13 = load i32, i32* %volume_block, align 4, !dbg !1731
  %cmp28 = icmp sle i32 %13, 20, !dbg !1733
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !1734

if.then30:                                        ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !1735
  br label %return, !dbg !1735

if.end31:                                         ; preds = %if.end25
  %14 = load i8*, i8** %h.addr, align 8, !dbg !1736
  %arrayidx32 = getelementptr inbounds i8, i8* %14, i64 881, !dbg !1736
  %15 = load i8, i8* %arrayidx32, align 1, !dbg !1736
  %conv33 = zext i8 %15 to i32, !dbg !1736
  %cmp34 = icmp ne i32 %conv33, 1, !dbg !1738
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !1739

if.then36:                                        ; preds = %if.end31
  store i32 0, i32* %retval, align 4, !dbg !1740
  br label %return, !dbg !1740

if.end37:                                         ; preds = %if.end31
  %16 = load i8*, i8** %h.addr, align 8, !dbg !1741
  %add.ptr38 = getelementptr inbounds i8, i8* %16, i64 140, !dbg !1742
  %call39 = call i32 @archive_le32dec(i8* %add.ptr38), !dbg !1743
  store i32 %call39, i32* %location, align 4, !dbg !1744
  %17 = load i32, i32* %location, align 4, !dbg !1745
  %cmp40 = icmp slt i32 %17, 18, !dbg !1747
  br i1 %cmp40, label %if.then44, label %lor.lhs.false, !dbg !1748

lor.lhs.false:                                    ; preds = %if.end37
  %18 = load i32, i32* %location, align 4, !dbg !1749
  %19 = load i32, i32* %volume_block, align 4, !dbg !1751
  %cmp42 = icmp sge i32 %18, %19, !dbg !1752
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !1753

if.then44:                                        ; preds = %lor.lhs.false, %if.end37
  store i32 0, i32* %retval, align 4, !dbg !1754
  br label %return, !dbg !1754

if.end45:                                         ; preds = %lor.lhs.false
  %20 = load i8*, i8** %h.addr, align 8, !dbg !1755
  %add.ptr46 = getelementptr inbounds i8, i8* %20, i64 148, !dbg !1756
  %call47 = call i32 @archive_be32dec(i8* %add.ptr46), !dbg !1757
  store i32 %call47, i32* %location, align 4, !dbg !1758
  %21 = load i32, i32* %location, align 4, !dbg !1759
  %cmp48 = icmp sgt i32 %21, 0, !dbg !1761
  br i1 %cmp48, label %land.lhs.true, label %lor.lhs.false52, !dbg !1762

land.lhs.true:                                    ; preds = %if.end45
  %22 = load i32, i32* %location, align 4, !dbg !1763
  %cmp50 = icmp slt i32 %22, 18, !dbg !1765
  br i1 %cmp50, label %if.then55, label %lor.lhs.false52, !dbg !1766

lor.lhs.false52:                                  ; preds = %land.lhs.true, %if.end45
  %23 = load i32, i32* %location, align 4, !dbg !1767
  %24 = load i32, i32* %volume_block, align 4, !dbg !1768
  %cmp53 = icmp sge i32 %23, %24, !dbg !1769
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !1770

if.then55:                                        ; preds = %lor.lhs.false52, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !1772
  br label %return, !dbg !1772

if.end56:                                         ; preds = %lor.lhs.false52
  store i32 0, i32* %i, align 4, !dbg !1773
  br label %for.cond, !dbg !1775

for.cond:                                         ; preds = %for.inc, %if.end56
  %25 = load i32, i32* %i, align 4, !dbg !1776
  %cmp57 = icmp slt i32 %25, 1, !dbg !1779
  br i1 %cmp57, label %for.body, label %for.end, !dbg !1780

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4, !dbg !1781
  %add = add nsw i32 882, %26, !dbg !1783
  %idxprom = sext i32 %add to i64, !dbg !1784
  %27 = load i8*, i8** %h.addr, align 8, !dbg !1784
  %arrayidx59 = getelementptr inbounds i8, i8* %27, i64 %idxprom, !dbg !1784
  %28 = load i8, i8* %arrayidx59, align 1, !dbg !1784
  %conv60 = zext i8 %28 to i32, !dbg !1784
  %cmp61 = icmp ne i32 %conv60, 0, !dbg !1785
  br i1 %cmp61, label %land.lhs.true63, label %if.end71, !dbg !1786

land.lhs.true63:                                  ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !1787
  %add64 = add nsw i32 882, %29, !dbg !1789
  %idxprom65 = sext i32 %add64 to i64, !dbg !1790
  %30 = load i8*, i8** %h.addr, align 8, !dbg !1790
  %arrayidx66 = getelementptr inbounds i8, i8* %30, i64 %idxprom65, !dbg !1790
  %31 = load i8, i8* %arrayidx66, align 1, !dbg !1790
  %conv67 = zext i8 %31 to i32, !dbg !1790
  %cmp68 = icmp ne i32 %conv67, 32, !dbg !1791
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !1792

if.then70:                                        ; preds = %land.lhs.true63
  store i32 0, i32* %retval, align 4, !dbg !1793
  br label %return, !dbg !1793

if.end71:                                         ; preds = %land.lhs.true63, %for.body
  br label %for.inc, !dbg !1794

for.inc:                                          ; preds = %if.end71
  %32 = load i32, i32* %i, align 4, !dbg !1796
  %inc = add nsw i32 %32, 1, !dbg !1796
  store i32 %inc, i32* %i, align 4, !dbg !1796
  br label %for.cond, !dbg !1798

for.end:                                          ; preds = %for.cond
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1799
  %34 = load i8*, i8** %h.addr, align 8, !dbg !1801
  %call72 = call i32 @isNull(%struct.iso9660* %33, i8* %34, i32 1395, i32 653), !dbg !1802
  %tobool73 = icmp ne i32 %call72, 0, !dbg !1802
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !1803

if.then74:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !1804
  br label %return, !dbg !1804

if.end75:                                         ; preds = %for.end
  %35 = load i8*, i8** %h.addr, align 8, !dbg !1805
  %add.ptr76 = getelementptr inbounds i8, i8* %35, i64 156, !dbg !1806
  store i8* %add.ptr76, i8** %p, align 8, !dbg !1807
  %36 = load i8*, i8** %p, align 8, !dbg !1808
  %arrayidx77 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !1808
  %37 = load i8, i8* %arrayidx77, align 1, !dbg !1808
  %conv78 = zext i8 %37 to i32, !dbg !1808
  %cmp79 = icmp ne i32 %conv78, 34, !dbg !1810
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !1811

if.then81:                                        ; preds = %if.end75
  store i32 0, i32* %retval, align 4, !dbg !1812
  br label %return, !dbg !1812

if.end82:                                         ; preds = %if.end75
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1813
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 20, !dbg !1815
  %location83 = getelementptr inbounds %struct.vd, %struct.vd* %primary, i32 0, i32 0, !dbg !1816
  %39 = load i32, i32* %location83, align 4, !dbg !1816
  %tobool84 = icmp ne i32 %39, 0, !dbg !1813
  br i1 %tobool84, label %if.end96, label %if.then85, !dbg !1817

if.then85:                                        ; preds = %if.end82
  %40 = load i64, i64* %logical_block_size, align 8, !dbg !1818
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1820
  %logical_block_size86 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 17, !dbg !1821
  store i64 %40, i64* %logical_block_size86, align 8, !dbg !1822
  %42 = load i32, i32* %volume_block, align 4, !dbg !1823
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1824
  %volume_block87 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 19, !dbg !1825
  store i32 %42, i32* %volume_block87, align 8, !dbg !1826
  %44 = load i64, i64* %logical_block_size, align 8, !dbg !1827
  %45 = load i32, i32* %volume_block, align 4, !dbg !1828
  %conv88 = sext i32 %45 to i64, !dbg !1829
  %mul = mul i64 %44, %conv88, !dbg !1830
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1831
  %volume_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 18, !dbg !1832
  store i64 %mul, i64* %volume_size, align 8, !dbg !1833
  %47 = load i8*, i8** %p, align 8, !dbg !1834
  %add.ptr89 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !1835
  %call90 = call i32 @archive_le32dec(i8* %add.ptr89), !dbg !1836
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1837
  %primary91 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 20, !dbg !1838
  %location92 = getelementptr inbounds %struct.vd, %struct.vd* %primary91, i32 0, i32 0, !dbg !1839
  store i32 %call90, i32* %location92, align 4, !dbg !1840
  %49 = load i8*, i8** %p, align 8, !dbg !1841
  %add.ptr93 = getelementptr inbounds i8, i8* %49, i64 10, !dbg !1842
  %call94 = call i32 @archive_le32dec(i8* %add.ptr93), !dbg !1843
  %50 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1844
  %primary95 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %50, i32 0, i32 20, !dbg !1845
  %size = getelementptr inbounds %struct.vd, %struct.vd* %primary95, i32 0, i32 1, !dbg !1846
  store i32 %call94, i32* %size, align 4, !dbg !1847
  br label %if.end96, !dbg !1848

if.end96:                                         ; preds = %if.then85, %if.end82
  store i32 48, i32* %retval, align 4, !dbg !1849
  br label %return, !dbg !1849

return:                                           ; preds = %if.end96, %if.then81, %if.then74, %if.then70, %if.then55, %if.then44, %if.then36, %if.then30, %if.then24, %if.then18, %if.then14, %if.then12, %if.then6, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !1850
  ret i32 %51, !dbg !1850
}

; Function Attrs: nounwind uwtable
define internal i32 @isJolietSVD(%struct.iso9660* %iso9660, i8* %h) #0 !dbg !516 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %logical_block_size = alloca i64, align 8
  %volume_block = alloca i32, align 4
  %level = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1851, metadata !623), !dbg !1852
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !1853, metadata !623), !dbg !1854
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1855, metadata !623), !dbg !1856
  call void @llvm.dbg.declare(metadata i64* %logical_block_size, metadata !1857, metadata !623), !dbg !1858
  call void @llvm.dbg.declare(metadata i32* %volume_block, metadata !1859, metadata !623), !dbg !1860
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1861
  %1 = load i8*, i8** %h.addr, align 8, !dbg !1863
  %call = call i32 @isSVD(%struct.iso9660* %0, i8* %1), !dbg !1864
  %tobool = icmp ne i32 %call, 0, !dbg !1864
  br i1 %tobool, label %if.end, label %if.then, !dbg !1865

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1866
  br label %return, !dbg !1866

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %h.addr, align 8, !dbg !1867
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 88, !dbg !1868
  store i8* %add.ptr, i8** %p, align 8, !dbg !1869
  %3 = load i8*, i8** %p, align 8, !dbg !1870
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !1870
  %4 = load i8, i8* %arrayidx, align 1, !dbg !1870
  %conv = zext i8 %4 to i32, !dbg !1870
  %cmp = icmp eq i32 %conv, 37, !dbg !1872
  br i1 %cmp, label %land.lhs.true, label %if.else28, !dbg !1873

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8*, i8** %p, align 8, !dbg !1874
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !1874
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !1874
  %conv3 = zext i8 %6 to i32, !dbg !1874
  %cmp4 = icmp eq i32 %conv3, 47, !dbg !1876
  br i1 %cmp4, label %if.then6, label %if.else28, !dbg !1877

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %level, metadata !1878, metadata !623), !dbg !1880
  store i32 0, i32* %level, align 4, !dbg !1880
  %7 = load i8*, i8** %p, align 8, !dbg !1881
  %arrayidx7 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !1881
  %8 = load i8, i8* %arrayidx7, align 1, !dbg !1881
  %conv8 = zext i8 %8 to i32, !dbg !1881
  %cmp9 = icmp eq i32 %conv8, 64, !dbg !1883
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !1884

if.then11:                                        ; preds = %if.then6
  store i32 1, i32* %level, align 4, !dbg !1885
  br label %if.end26, !dbg !1886

if.else:                                          ; preds = %if.then6
  %9 = load i8*, i8** %p, align 8, !dbg !1887
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 2, !dbg !1887
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !1887
  %conv13 = zext i8 %10 to i32, !dbg !1887
  %cmp14 = icmp eq i32 %conv13, 67, !dbg !1889
  br i1 %cmp14, label %if.then16, label %if.else17, !dbg !1890

if.then16:                                        ; preds = %if.else
  store i32 2, i32* %level, align 4, !dbg !1891
  br label %if.end25, !dbg !1892

if.else17:                                        ; preds = %if.else
  %11 = load i8*, i8** %p, align 8, !dbg !1893
  %arrayidx18 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !1893
  %12 = load i8, i8* %arrayidx18, align 1, !dbg !1893
  %conv19 = zext i8 %12 to i32, !dbg !1893
  %cmp20 = icmp eq i32 %conv19, 69, !dbg !1895
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !1896

if.then22:                                        ; preds = %if.else17
  store i32 3, i32* %level, align 4, !dbg !1897
  br label %if.end24, !dbg !1898

if.else23:                                        ; preds = %if.else17
  store i32 0, i32* %retval, align 4, !dbg !1899
  br label %return, !dbg !1899

if.end24:                                         ; preds = %if.then22
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then16
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then11
  %13 = load i32, i32* %level, align 4, !dbg !1900
  %conv27 = trunc i32 %13 to i8, !dbg !1900
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1901
  %seenJoliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 6, !dbg !1902
  store i8 %conv27, i8* %seenJoliet, align 2, !dbg !1903
  br label %if.end29, !dbg !1904

if.else28:                                        ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !1905
  br label %return, !dbg !1905

if.end29:                                         ; preds = %if.end26
  %15 = load i8*, i8** %h.addr, align 8, !dbg !1906
  %add.ptr30 = getelementptr inbounds i8, i8* %15, i64 128, !dbg !1907
  %call31 = call zeroext i16 @archive_le16dec(i8* %add.ptr30), !dbg !1908
  %conv32 = zext i16 %call31 to i64, !dbg !1908
  store i64 %conv32, i64* %logical_block_size, align 8, !dbg !1909
  %16 = load i8*, i8** %h.addr, align 8, !dbg !1910
  %add.ptr33 = getelementptr inbounds i8, i8* %16, i64 80, !dbg !1911
  %call34 = call i32 @archive_le32dec(i8* %add.ptr33), !dbg !1912
  store i32 %call34, i32* %volume_block, align 4, !dbg !1913
  %17 = load i64, i64* %logical_block_size, align 8, !dbg !1914
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1915
  %logical_block_size35 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 17, !dbg !1916
  store i64 %17, i64* %logical_block_size35, align 8, !dbg !1917
  %19 = load i32, i32* %volume_block, align 4, !dbg !1918
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1919
  %volume_block36 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 19, !dbg !1920
  store i32 %19, i32* %volume_block36, align 8, !dbg !1921
  %21 = load i64, i64* %logical_block_size, align 8, !dbg !1922
  %22 = load i32, i32* %volume_block, align 4, !dbg !1923
  %conv37 = sext i32 %22 to i64, !dbg !1924
  %mul = mul i64 %21, %conv37, !dbg !1925
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1926
  %volume_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 18, !dbg !1927
  store i64 %mul, i64* %volume_size, align 8, !dbg !1928
  %24 = load i8*, i8** %h.addr, align 8, !dbg !1929
  %add.ptr38 = getelementptr inbounds i8, i8* %24, i64 156, !dbg !1930
  store i8* %add.ptr38, i8** %p, align 8, !dbg !1931
  %25 = load i8*, i8** %p, align 8, !dbg !1932
  %add.ptr39 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !1933
  %call40 = call i32 @archive_le32dec(i8* %add.ptr39), !dbg !1934
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1935
  %joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 21, !dbg !1936
  %location = getelementptr inbounds %struct.vd, %struct.vd* %joliet, i32 0, i32 0, !dbg !1937
  store i32 %call40, i32* %location, align 4, !dbg !1938
  %27 = load i8*, i8** %p, align 8, !dbg !1939
  %add.ptr41 = getelementptr inbounds i8, i8* %27, i64 10, !dbg !1940
  %call42 = call i32 @archive_le32dec(i8* %add.ptr41), !dbg !1941
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1942
  %joliet43 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 21, !dbg !1943
  %size = getelementptr inbounds %struct.vd, %struct.vd* %joliet43, i32 0, i32 1, !dbg !1944
  store i32 %call42, i32* %size, align 4, !dbg !1945
  store i32 48, i32* %retval, align 4, !dbg !1946
  br label %return, !dbg !1946

return:                                           ; preds = %if.end29, %if.else28, %if.else23, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !1947
  ret i32 %29, !dbg !1947
}

; Function Attrs: nounwind uwtable
define internal i32 @isBootRecord(%struct.iso9660* %iso9660, i8* %h) #0 !dbg !517 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1948, metadata !623), !dbg !1949
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !1950, metadata !623), !dbg !1951
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1952
  %1 = load i8*, i8** %h.addr, align 8, !dbg !1953
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !1953
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1953
  %conv = zext i8 %2 to i32, !dbg !1953
  %cmp = icmp ne i32 %conv, 0, !dbg !1955
  br i1 %cmp, label %if.then, label %if.end, !dbg !1956

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1957
  br label %return, !dbg !1957

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %h.addr, align 8, !dbg !1958
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 6, !dbg !1958
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !1958
  %conv3 = zext i8 %4 to i32, !dbg !1958
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !1960
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !1961

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1962
  br label %return, !dbg !1962

if.end7:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !1963
  br label %return, !dbg !1963

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !1964
  ret i32 %5, !dbg !1964
}

; Function Attrs: nounwind uwtable
define internal i32 @isEVD(%struct.iso9660* %iso9660, i8* %h) #0 !dbg !518 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %logical_block_size = alloca i64, align 8
  %volume_block = alloca i32, align 4
  %location = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1965, metadata !623), !dbg !1966
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !1967, metadata !623), !dbg !1968
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1969, metadata !623), !dbg !1970
  call void @llvm.dbg.declare(metadata i64* %logical_block_size, metadata !1971, metadata !623), !dbg !1972
  call void @llvm.dbg.declare(metadata i32* %volume_block, metadata !1973, metadata !623), !dbg !1974
  call void @llvm.dbg.declare(metadata i32* %location, metadata !1975, metadata !623), !dbg !1976
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1977
  %1 = load i8*, i8** %h.addr, align 8, !dbg !1978
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !1978
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1978
  %conv = zext i8 %2 to i32, !dbg !1978
  %cmp = icmp ne i32 %conv, 2, !dbg !1980
  br i1 %cmp, label %if.then, label %if.end, !dbg !1981

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1982
  br label %return, !dbg !1982

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %h.addr, align 8, !dbg !1983
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 6, !dbg !1983
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !1983
  %conv3 = zext i8 %4 to i32, !dbg !1983
  %cmp4 = icmp ne i32 %conv3, 2, !dbg !1985
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !1986

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1987
  br label %return, !dbg !1987

if.end7:                                          ; preds = %if.end
  %5 = load i8*, i8** %h.addr, align 8, !dbg !1988
  %arrayidx8 = getelementptr inbounds i8, i8* %5, i64 7, !dbg !1988
  %6 = load i8, i8* %arrayidx8, align 1, !dbg !1988
  %conv9 = zext i8 %6 to i32, !dbg !1988
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !1990
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !1991

if.then12:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !1992
  br label %return, !dbg !1992

if.end13:                                         ; preds = %if.end7
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1993
  %8 = load i8*, i8** %h.addr, align 8, !dbg !1995
  %call = call i32 @isNull(%struct.iso9660* %7, i8* %8, i32 72, i32 8), !dbg !1996
  %tobool = icmp ne i32 %call, 0, !dbg !1996
  br i1 %tobool, label %if.end15, label %if.then14, !dbg !1997

if.then14:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !1998
  br label %return, !dbg !1998

if.end15:                                         ; preds = %if.end13
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1999
  %10 = load i8*, i8** %h.addr, align 8, !dbg !2001
  %call16 = call i32 @isNull(%struct.iso9660* %9, i8* %10, i32 88, i32 32), !dbg !2002
  %tobool17 = icmp ne i32 %call16, 0, !dbg !2002
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !2003

if.then18:                                        ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !2004
  br label %return, !dbg !2004

if.end19:                                         ; preds = %if.end15
  %11 = load i8*, i8** %h.addr, align 8, !dbg !2005
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 128, !dbg !2006
  %call20 = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !2007
  %conv21 = zext i16 %call20 to i64, !dbg !2007
  store i64 %conv21, i64* %logical_block_size, align 8, !dbg !2008
  %12 = load i64, i64* %logical_block_size, align 8, !dbg !2009
  %cmp22 = icmp sle i64 %12, 0, !dbg !2011
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2012

if.then24:                                        ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !2013
  br label %return, !dbg !2013

if.end25:                                         ; preds = %if.end19
  %13 = load i8*, i8** %h.addr, align 8, !dbg !2014
  %add.ptr26 = getelementptr inbounds i8, i8* %13, i64 80, !dbg !2015
  %call27 = call i32 @archive_le32dec(i8* %add.ptr26), !dbg !2016
  store i32 %call27, i32* %volume_block, align 4, !dbg !2017
  %14 = load i32, i32* %volume_block, align 4, !dbg !2018
  %cmp28 = icmp sle i32 %14, 20, !dbg !2020
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2021

if.then30:                                        ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !2022
  br label %return, !dbg !2022

if.end31:                                         ; preds = %if.end25
  %15 = load i8*, i8** %h.addr, align 8, !dbg !2023
  %arrayidx32 = getelementptr inbounds i8, i8* %15, i64 881, !dbg !2023
  %16 = load i8, i8* %arrayidx32, align 1, !dbg !2023
  %conv33 = zext i8 %16 to i32, !dbg !2023
  %cmp34 = icmp ne i32 %conv33, 2, !dbg !2025
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !2026

if.then36:                                        ; preds = %if.end31
  store i32 0, i32* %retval, align 4, !dbg !2027
  br label %return, !dbg !2027

if.end37:                                         ; preds = %if.end31
  %17 = load i8*, i8** %h.addr, align 8, !dbg !2028
  %add.ptr38 = getelementptr inbounds i8, i8* %17, i64 140, !dbg !2029
  %call39 = call i32 @archive_le32dec(i8* %add.ptr38), !dbg !2030
  store i32 %call39, i32* %location, align 4, !dbg !2031
  %18 = load i32, i32* %location, align 4, !dbg !2032
  %cmp40 = icmp slt i32 %18, 18, !dbg !2034
  br i1 %cmp40, label %if.then44, label %lor.lhs.false, !dbg !2035

lor.lhs.false:                                    ; preds = %if.end37
  %19 = load i32, i32* %location, align 4, !dbg !2036
  %20 = load i32, i32* %volume_block, align 4, !dbg !2038
  %cmp42 = icmp sge i32 %19, %20, !dbg !2039
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !2040

if.then44:                                        ; preds = %lor.lhs.false, %if.end37
  store i32 0, i32* %retval, align 4, !dbg !2041
  br label %return, !dbg !2041

if.end45:                                         ; preds = %lor.lhs.false
  %21 = load i8*, i8** %h.addr, align 8, !dbg !2042
  %add.ptr46 = getelementptr inbounds i8, i8* %21, i64 148, !dbg !2043
  %call47 = call i32 @archive_be32dec(i8* %add.ptr46), !dbg !2044
  store i32 %call47, i32* %location, align 4, !dbg !2045
  %22 = load i32, i32* %location, align 4, !dbg !2046
  %cmp48 = icmp sgt i32 %22, 0, !dbg !2048
  br i1 %cmp48, label %land.lhs.true, label %lor.lhs.false52, !dbg !2049

land.lhs.true:                                    ; preds = %if.end45
  %23 = load i32, i32* %location, align 4, !dbg !2050
  %cmp50 = icmp slt i32 %23, 18, !dbg !2052
  br i1 %cmp50, label %if.then55, label %lor.lhs.false52, !dbg !2053

lor.lhs.false52:                                  ; preds = %land.lhs.true, %if.end45
  %24 = load i32, i32* %location, align 4, !dbg !2054
  %25 = load i32, i32* %volume_block, align 4, !dbg !2055
  %cmp53 = icmp sge i32 %24, %25, !dbg !2056
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !2057

if.then55:                                        ; preds = %lor.lhs.false52, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !2059
  br label %return, !dbg !2059

if.end56:                                         ; preds = %lor.lhs.false52
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2060
  %27 = load i8*, i8** %h.addr, align 8, !dbg !2062
  %call57 = call i32 @isNull(%struct.iso9660* %26, i8* %27, i32 882, i32 1), !dbg !2063
  %tobool58 = icmp ne i32 %call57, 0, !dbg !2063
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !2064

if.then59:                                        ; preds = %if.end56
  store i32 0, i32* %retval, align 4, !dbg !2065
  br label %return, !dbg !2065

if.end60:                                         ; preds = %if.end56
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2066
  %29 = load i8*, i8** %h.addr, align 8, !dbg !2068
  %call61 = call i32 @isNull(%struct.iso9660* %28, i8* %29, i32 1395, i32 653), !dbg !2069
  %tobool62 = icmp ne i32 %call61, 0, !dbg !2069
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !2070

if.then63:                                        ; preds = %if.end60
  store i32 0, i32* %retval, align 4, !dbg !2071
  br label %return, !dbg !2071

if.end64:                                         ; preds = %if.end60
  %30 = load i8*, i8** %h.addr, align 8, !dbg !2072
  %add.ptr65 = getelementptr inbounds i8, i8* %30, i64 156, !dbg !2073
  store i8* %add.ptr65, i8** %p, align 8, !dbg !2074
  %31 = load i8*, i8** %p, align 8, !dbg !2075
  %arrayidx66 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !2075
  %32 = load i8, i8* %arrayidx66, align 1, !dbg !2075
  %conv67 = zext i8 %32 to i32, !dbg !2075
  %cmp68 = icmp ne i32 %conv67, 34, !dbg !2077
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !2078

if.then70:                                        ; preds = %if.end64
  store i32 0, i32* %retval, align 4, !dbg !2079
  br label %return, !dbg !2079

if.end71:                                         ; preds = %if.end64
  store i32 48, i32* %retval, align 4, !dbg !2080
  br label %return, !dbg !2080

return:                                           ; preds = %if.end71, %if.then70, %if.then63, %if.then59, %if.then55, %if.then44, %if.then36, %if.then30, %if.then24, %if.then18, %if.then14, %if.then12, %if.then6, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !2081
  ret i32 %33, !dbg !2081
}

; Function Attrs: nounwind uwtable
define internal i32 @isSVD(%struct.iso9660* %iso9660, i8* %h) #0 !dbg !519 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %logical_block_size = alloca i64, align 8
  %volume_block = alloca i32, align 4
  %location = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !2082, metadata !623), !dbg !2083
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !2084, metadata !623), !dbg !2085
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2086, metadata !623), !dbg !2087
  call void @llvm.dbg.declare(metadata i64* %logical_block_size, metadata !2088, metadata !623), !dbg !2089
  call void @llvm.dbg.declare(metadata i32* %volume_block, metadata !2090, metadata !623), !dbg !2091
  call void @llvm.dbg.declare(metadata i32* %location, metadata !2092, metadata !623), !dbg !2093
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2094
  %1 = load i8*, i8** %h.addr, align 8, !dbg !2095
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !2095
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2095
  %conv = zext i8 %2 to i32, !dbg !2095
  %cmp = icmp ne i32 %conv, 2, !dbg !2097
  br i1 %cmp, label %if.then, label %if.end, !dbg !2098

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2099
  br label %return, !dbg !2099

if.end:                                           ; preds = %entry
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2100
  %4 = load i8*, i8** %h.addr, align 8, !dbg !2102
  %call = call i32 @isNull(%struct.iso9660* %3, i8* %4, i32 72, i32 8), !dbg !2103
  %tobool = icmp ne i32 %call, 0, !dbg !2103
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !2104

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2105
  br label %return, !dbg !2105

if.end3:                                          ; preds = %if.end
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2106
  %6 = load i8*, i8** %h.addr, align 8, !dbg !2108
  %call4 = call i32 @isNull(%struct.iso9660* %5, i8* %6, i32 882, i32 1), !dbg !2109
  %tobool5 = icmp ne i32 %call4, 0, !dbg !2109
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !2110

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !2111
  br label %return, !dbg !2111

if.end7:                                          ; preds = %if.end3
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2112
  %8 = load i8*, i8** %h.addr, align 8, !dbg !2114
  %call8 = call i32 @isNull(%struct.iso9660* %7, i8* %8, i32 1395, i32 653), !dbg !2115
  %tobool9 = icmp ne i32 %call8, 0, !dbg !2115
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !2116

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !2117
  br label %return, !dbg !2117

if.end11:                                         ; preds = %if.end7
  %9 = load i8*, i8** %h.addr, align 8, !dbg !2118
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 881, !dbg !2118
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !2118
  %conv13 = zext i8 %10 to i32, !dbg !2118
  %cmp14 = icmp ne i32 %conv13, 1, !dbg !2120
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !2121

if.then16:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !2122
  br label %return, !dbg !2122

if.end17:                                         ; preds = %if.end11
  %11 = load i8*, i8** %h.addr, align 8, !dbg !2123
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 128, !dbg !2124
  %call18 = call zeroext i16 @archive_le16dec(i8* %add.ptr), !dbg !2125
  %conv19 = zext i16 %call18 to i64, !dbg !2125
  store i64 %conv19, i64* %logical_block_size, align 8, !dbg !2126
  %12 = load i64, i64* %logical_block_size, align 8, !dbg !2127
  %cmp20 = icmp sle i64 %12, 0, !dbg !2129
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !2130

if.then22:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !2131
  br label %return, !dbg !2131

if.end23:                                         ; preds = %if.end17
  %13 = load i8*, i8** %h.addr, align 8, !dbg !2132
  %add.ptr24 = getelementptr inbounds i8, i8* %13, i64 80, !dbg !2133
  %call25 = call i32 @archive_le32dec(i8* %add.ptr24), !dbg !2134
  store i32 %call25, i32* %volume_block, align 4, !dbg !2135
  %14 = load i32, i32* %volume_block, align 4, !dbg !2136
  %cmp26 = icmp sle i32 %14, 20, !dbg !2138
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2139

if.then28:                                        ; preds = %if.end23
  store i32 0, i32* %retval, align 4, !dbg !2140
  br label %return, !dbg !2140

if.end29:                                         ; preds = %if.end23
  %15 = load i8*, i8** %h.addr, align 8, !dbg !2141
  %add.ptr30 = getelementptr inbounds i8, i8* %15, i64 140, !dbg !2142
  %call31 = call i32 @archive_le32dec(i8* %add.ptr30), !dbg !2143
  store i32 %call31, i32* %location, align 4, !dbg !2144
  %16 = load i32, i32* %location, align 4, !dbg !2145
  %cmp32 = icmp slt i32 %16, 18, !dbg !2147
  br i1 %cmp32, label %if.then36, label %lor.lhs.false, !dbg !2148

lor.lhs.false:                                    ; preds = %if.end29
  %17 = load i32, i32* %location, align 4, !dbg !2149
  %18 = load i32, i32* %volume_block, align 4, !dbg !2151
  %cmp34 = icmp sge i32 %17, %18, !dbg !2152
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !2153

if.then36:                                        ; preds = %lor.lhs.false, %if.end29
  store i32 0, i32* %retval, align 4, !dbg !2154
  br label %return, !dbg !2154

if.end37:                                         ; preds = %lor.lhs.false
  %19 = load i8*, i8** %h.addr, align 8, !dbg !2155
  %add.ptr38 = getelementptr inbounds i8, i8* %19, i64 148, !dbg !2156
  %call39 = call i32 @archive_be32dec(i8* %add.ptr38), !dbg !2157
  store i32 %call39, i32* %location, align 4, !dbg !2158
  %20 = load i32, i32* %location, align 4, !dbg !2159
  %cmp40 = icmp sgt i32 %20, 0, !dbg !2161
  br i1 %cmp40, label %land.lhs.true, label %lor.lhs.false44, !dbg !2162

land.lhs.true:                                    ; preds = %if.end37
  %21 = load i32, i32* %location, align 4, !dbg !2163
  %cmp42 = icmp slt i32 %21, 18, !dbg !2165
  br i1 %cmp42, label %if.then47, label %lor.lhs.false44, !dbg !2166

lor.lhs.false44:                                  ; preds = %land.lhs.true, %if.end37
  %22 = load i32, i32* %location, align 4, !dbg !2167
  %23 = load i32, i32* %volume_block, align 4, !dbg !2168
  %cmp45 = icmp sge i32 %22, %23, !dbg !2169
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !2170

if.then47:                                        ; preds = %lor.lhs.false44, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !2172
  br label %return, !dbg !2172

if.end48:                                         ; preds = %lor.lhs.false44
  %24 = load i8*, i8** %h.addr, align 8, !dbg !2173
  %add.ptr49 = getelementptr inbounds i8, i8* %24, i64 156, !dbg !2174
  store i8* %add.ptr49, i8** %p, align 8, !dbg !2175
  %25 = load i8*, i8** %p, align 8, !dbg !2176
  %arrayidx50 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !2176
  %26 = load i8, i8* %arrayidx50, align 1, !dbg !2176
  %conv51 = zext i8 %26 to i32, !dbg !2176
  %cmp52 = icmp ne i32 %conv51, 34, !dbg !2178
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !2179

if.then54:                                        ; preds = %if.end48
  store i32 0, i32* %retval, align 4, !dbg !2180
  br label %return, !dbg !2180

if.end55:                                         ; preds = %if.end48
  store i32 48, i32* %retval, align 4, !dbg !2181
  br label %return, !dbg !2181

return:                                           ; preds = %if.end55, %if.then54, %if.then47, %if.then36, %if.then28, %if.then22, %if.then16, %if.then10, %if.then6, %if.then2, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !2182
  ret i32 %27, !dbg !2182
}

; Function Attrs: nounwind uwtable
define internal i32 @isVolumePartition(%struct.iso9660* %iso9660, i8* %h) #0 !dbg !520 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  %location = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !2183, metadata !623), !dbg !2184
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !2185, metadata !623), !dbg !2186
  call void @llvm.dbg.declare(metadata i32* %location, metadata !2187, metadata !623), !dbg !2188
  %0 = load i8*, i8** %h.addr, align 8, !dbg !2189
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !2189
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2189
  %conv = zext i8 %1 to i32, !dbg !2189
  %cmp = icmp ne i32 %conv, 3, !dbg !2191
  br i1 %cmp, label %if.then, label %if.end, !dbg !2192

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2193
  br label %return, !dbg !2193

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %h.addr, align 8, !dbg !2194
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 6, !dbg !2194
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !2194
  %conv3 = zext i8 %3 to i32, !dbg !2194
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !2196
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !2197

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2198
  br label %return, !dbg !2198

if.end7:                                          ; preds = %if.end
  %4 = load i8*, i8** %h.addr, align 8, !dbg !2199
  %arrayidx8 = getelementptr inbounds i8, i8* %4, i64 7, !dbg !2199
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !2199
  %conv9 = zext i8 %5 to i32, !dbg !2199
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !2201
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2202

if.then12:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !2203
  br label %return, !dbg !2203

if.end13:                                         ; preds = %if.end7
  %6 = load i8*, i8** %h.addr, align 8, !dbg !2204
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 72, !dbg !2205
  %call = call i32 @archive_le32dec(i8* %add.ptr), !dbg !2206
  store i32 %call, i32* %location, align 4, !dbg !2207
  %7 = load i32, i32* %location, align 4, !dbg !2208
  %cmp14 = icmp sle i32 %7, 16, !dbg !2210
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !2211

lor.lhs.false:                                    ; preds = %if.end13
  %8 = load i32, i32* %location, align 4, !dbg !2212
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2213
  %volume_block = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 19, !dbg !2214
  %10 = load i32, i32* %volume_block, align 8, !dbg !2214
  %cmp16 = icmp sge i32 %8, %10, !dbg !2215
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2216

if.then18:                                        ; preds = %lor.lhs.false, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !2218
  br label %return, !dbg !2218

if.end19:                                         ; preds = %lor.lhs.false
  %11 = load i32, i32* %location, align 4, !dbg !2219
  %12 = load i8*, i8** %h.addr, align 8, !dbg !2221
  %add.ptr20 = getelementptr inbounds i8, i8* %12, i64 76, !dbg !2222
  %call21 = call i32 @archive_be32dec(i8* %add.ptr20), !dbg !2223
  %cmp22 = icmp ne i32 %11, %call21, !dbg !2224
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2225

if.then24:                                        ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !2226
  br label %return, !dbg !2226

if.end25:                                         ; preds = %if.end19
  store i32 1, i32* %retval, align 4, !dbg !2227
  br label %return, !dbg !2227

return:                                           ; preds = %if.end25, %if.then24, %if.then18, %if.then12, %if.then6, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !2228
  ret i32 %13, !dbg !2228
}

; Function Attrs: nounwind uwtable
define internal i32 @isVDSetTerminator(%struct.iso9660* %iso9660, i8* %h) #0 !dbg !521 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !2229, metadata !623), !dbg !2230
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !2231, metadata !623), !dbg !2232
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2233
  %1 = load i8*, i8** %h.addr, align 8, !dbg !2234
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !2234
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2234
  %conv = zext i8 %2 to i32, !dbg !2234
  %cmp = icmp ne i32 %conv, 255, !dbg !2236
  br i1 %cmp, label %if.then, label %if.end, !dbg !2237

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2238
  br label %return, !dbg !2238

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %h.addr, align 8, !dbg !2239
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 6, !dbg !2239
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !2239
  %conv3 = zext i8 %4 to i32, !dbg !2239
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !2241
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !2242

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2243
  br label %return, !dbg !2243

if.end7:                                          ; preds = %if.end
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2244
  %6 = load i8*, i8** %h.addr, align 8, !dbg !2246
  %call = call i32 @isNull(%struct.iso9660* %5, i8* %6, i32 7, i32 2041), !dbg !2247
  %tobool = icmp ne i32 %call, 0, !dbg !2247
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !2248

if.then8:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !2249
  br label %return, !dbg !2249

if.end9:                                          ; preds = %if.end7
  store i32 1, i32* %retval, align 4, !dbg !2250
  br label %return, !dbg !2250

return:                                           ; preds = %if.end9, %if.then8, %if.then6, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !2251
  ret i32 %7, !dbg !2251
}

; Function Attrs: nounwind uwtable
define internal i32 @isNull(%struct.iso9660* %iso9660, i8* %h, i32 %offset, i32 %bytes) #0 !dbg !503 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %h.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !2252, metadata !623), !dbg !2253
  store i8* %h, i8** %h.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %h.addr, metadata !2254, metadata !623), !dbg !2255
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !2256, metadata !623), !dbg !2257
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !2258, metadata !623), !dbg !2259
  br label %while.cond, !dbg !2260

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %bytes.addr, align 4, !dbg !2261
  %conv = zext i32 %0 to i64, !dbg !2261
  %cmp = icmp uge i64 %conv, 2048, !dbg !2263
  br i1 %cmp, label %while.body, label %while.end, !dbg !2264

while.body:                                       ; preds = %while.cond
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2265
  %null = getelementptr inbounds %struct.iso9660, %struct.iso9660* %1, i32 0, i32 32, !dbg !2268
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %null, i32 0, i32 0, !dbg !2265
  %2 = load i8*, i8** %h.addr, align 8, !dbg !2269
  %3 = load i32, i32* %offset.addr, align 4, !dbg !2270
  %idx.ext = zext i32 %3 to i64, !dbg !2271
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !2271
  %call = call i32 @memcmp(i8* %arraydecay, i8* %add.ptr, i64 2048) #9, !dbg !2272
  %tobool = icmp ne i32 %call, 0, !dbg !2272
  br i1 %tobool, label %if.end, label %if.then, !dbg !2273

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !2274
  br label %return, !dbg !2274

if.end:                                           ; preds = %while.body
  %4 = load i32, i32* %offset.addr, align 4, !dbg !2275
  %conv2 = zext i32 %4 to i64, !dbg !2275
  %add = add i64 %conv2, 2048, !dbg !2275
  %conv3 = trunc i64 %add to i32, !dbg !2275
  store i32 %conv3, i32* %offset.addr, align 4, !dbg !2275
  %5 = load i32, i32* %bytes.addr, align 4, !dbg !2276
  %conv4 = zext i32 %5 to i64, !dbg !2276
  %sub = sub i64 %conv4, 2048, !dbg !2276
  %conv5 = trunc i64 %sub to i32, !dbg !2276
  store i32 %conv5, i32* %bytes.addr, align 4, !dbg !2276
  br label %while.cond, !dbg !2277

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %bytes.addr, align 4, !dbg !2279
  %tobool6 = icmp ne i32 %6, 0, !dbg !2279
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !2281

if.then7:                                         ; preds = %while.end
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2282
  %null8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 32, !dbg !2283
  %arraydecay9 = getelementptr inbounds [2048 x i8], [2048 x i8]* %null8, i32 0, i32 0, !dbg !2282
  %8 = load i8*, i8** %h.addr, align 8, !dbg !2284
  %9 = load i32, i32* %offset.addr, align 4, !dbg !2285
  %idx.ext10 = zext i32 %9 to i64, !dbg !2286
  %add.ptr11 = getelementptr inbounds i8, i8* %8, i64 %idx.ext10, !dbg !2286
  %10 = load i32, i32* %bytes.addr, align 4, !dbg !2287
  %conv12 = zext i32 %10 to i64, !dbg !2287
  %call13 = call i32 @memcmp(i8* %arraydecay9, i8* %add.ptr11, i64 %conv12) #9, !dbg !2288
  %cmp14 = icmp eq i32 %call13, 0, !dbg !2289
  %conv15 = zext i1 %cmp14 to i32, !dbg !2289
  store i32 %conv15, i32* %retval, align 4, !dbg !2290
  br label %return, !dbg !2290

if.else:                                          ; preds = %while.end
  store i32 1, i32* %retval, align 4, !dbg !2291
  br label %return, !dbg !2291

return:                                           ; preds = %if.else, %if.then7, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !2292
  ret i32 %11, !dbg !2292
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @archive_le16dec(i8* %pp) #5 !dbg !506 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !2293, metadata !623), !dbg !2294
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2295, metadata !623), !dbg !2296
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !2297
  store i8* %0, i8** %p, align 8, !dbg !2296
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !2298, metadata !623), !dbg !2299
  %1 = load i8*, i8** %p, align 8, !dbg !2300
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2300
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2300
  %conv = zext i8 %2 to i32, !dbg !2300
  store i32 %conv, i32* %p1, align 4, !dbg !2299
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !2301, metadata !623), !dbg !2302
  %3 = load i8*, i8** %p, align 8, !dbg !2303
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2303
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !2303
  %conv2 = zext i8 %4 to i32, !dbg !2303
  store i32 %conv2, i32* %p0, align 4, !dbg !2302
  %5 = load i32, i32* %p1, align 4, !dbg !2304
  %shl = shl i32 %5, 8, !dbg !2305
  %6 = load i32, i32* %p0, align 4, !dbg !2306
  %or = or i32 %shl, %6, !dbg !2307
  %conv3 = trunc i32 %or to i16, !dbg !2308
  ret i16 %conv3, !dbg !2309
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @archive_le32dec(i8* %pp) #5 !dbg !512 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p3 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !2310, metadata !623), !dbg !2311
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2312, metadata !623), !dbg !2313
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !2314
  store i8* %0, i8** %p, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !2315, metadata !623), !dbg !2316
  %1 = load i8*, i8** %p, align 8, !dbg !2317
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 3, !dbg !2317
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2317
  %conv = zext i8 %2 to i32, !dbg !2317
  store i32 %conv, i32* %p3, align 4, !dbg !2316
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !2318, metadata !623), !dbg !2319
  %3 = load i8*, i8** %p, align 8, !dbg !2320
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !2320
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !2320
  %conv2 = zext i8 %4 to i32, !dbg !2320
  store i32 %conv2, i32* %p2, align 4, !dbg !2319
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !2321, metadata !623), !dbg !2322
  %5 = load i8*, i8** %p, align 8, !dbg !2323
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !2323
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !2323
  %conv4 = zext i8 %6 to i32, !dbg !2323
  store i32 %conv4, i32* %p1, align 4, !dbg !2322
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !2324, metadata !623), !dbg !2325
  %7 = load i8*, i8** %p, align 8, !dbg !2326
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !2326
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !2326
  %conv6 = zext i8 %8 to i32, !dbg !2326
  store i32 %conv6, i32* %p0, align 4, !dbg !2325
  %9 = load i32, i32* %p3, align 4, !dbg !2327
  %shl = shl i32 %9, 24, !dbg !2328
  %10 = load i32, i32* %p2, align 4, !dbg !2329
  %shl7 = shl i32 %10, 16, !dbg !2330
  %or = or i32 %shl, %shl7, !dbg !2331
  %11 = load i32, i32* %p1, align 4, !dbg !2332
  %shl8 = shl i32 %11, 8, !dbg !2333
  %or9 = or i32 %or, %shl8, !dbg !2334
  %12 = load i32, i32* %p0, align 4, !dbg !2335
  %or10 = or i32 %or9, %12, !dbg !2336
  ret i32 %or10, !dbg !2337
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @archive_be32dec(i8* %pp) #5 !dbg !515 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p3 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !2338, metadata !623), !dbg !2339
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2340, metadata !623), !dbg !2341
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !2342
  store i8* %0, i8** %p, align 8, !dbg !2341
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !2343, metadata !623), !dbg !2344
  %1 = load i8*, i8** %p, align 8, !dbg !2345
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 3, !dbg !2345
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2345
  %conv = zext i8 %2 to i32, !dbg !2345
  store i32 %conv, i32* %p3, align 4, !dbg !2344
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !2346, metadata !623), !dbg !2347
  %3 = load i8*, i8** %p, align 8, !dbg !2348
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !2348
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !2348
  %conv2 = zext i8 %4 to i32, !dbg !2348
  store i32 %conv2, i32* %p2, align 4, !dbg !2347
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !2349, metadata !623), !dbg !2350
  %5 = load i8*, i8** %p, align 8, !dbg !2351
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !2351
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !2351
  %conv4 = zext i8 %6 to i32, !dbg !2351
  store i32 %conv4, i32* %p1, align 4, !dbg !2350
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !2352, metadata !623), !dbg !2353
  %7 = load i8*, i8** %p, align 8, !dbg !2354
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !2354
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !2354
  %conv6 = zext i8 %8 to i32, !dbg !2354
  store i32 %conv6, i32* %p0, align 4, !dbg !2353
  %9 = load i32, i32* %p0, align 4, !dbg !2355
  %shl = shl i32 %9, 24, !dbg !2356
  %10 = load i32, i32* %p1, align 4, !dbg !2357
  %shl7 = shl i32 %10, 16, !dbg !2358
  %or = or i32 %shl, %shl7, !dbg !2359
  %11 = load i32, i32* %p2, align 4, !dbg !2360
  %shl8 = shl i32 %11, 8, !dbg !2361
  %or9 = or i32 %or, %shl8, !dbg !2362
  %12 = load i32, i32* %p3, align 4, !dbg !2363
  %or10 = or i32 %or9, %12, !dbg !2364
  ret i32 %or10, !dbg !2365
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @choose_volume(%struct.archive_read* %a, %struct.iso9660* %iso9660) #0 !dbg !524 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file = alloca %struct.file_info*, align 8
  %skipsize = alloca i64, align 8
  %vd = alloca %struct.vd*, align 8
  %block = alloca i8*, align 8
  %seenJoliet = alloca i8, align 1
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2366, metadata !623), !dbg !2367
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !2368, metadata !623), !dbg !2369
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !2370, metadata !623), !dbg !2371
  call void @llvm.dbg.declare(metadata i64* %skipsize, metadata !2372, metadata !623), !dbg !2373
  call void @llvm.dbg.declare(metadata %struct.vd** %vd, metadata !2374, metadata !623), !dbg !2376
  call void @llvm.dbg.declare(metadata i8** %block, metadata !2377, metadata !623), !dbg !2378
  call void @llvm.dbg.declare(metadata i8* %seenJoliet, metadata !2379, metadata !623), !dbg !2380
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2381
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 20, !dbg !2382
  store %struct.vd* %primary, %struct.vd** %vd, align 8, !dbg !2383
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2384
  %opt_support_joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %1, i32 0, i32 1, !dbg !2386
  %2 = load i32, i32* %opt_support_joliet, align 4, !dbg !2386
  %tobool = icmp ne i32 %2, 0, !dbg !2384
  br i1 %tobool, label %if.end, label %if.then, !dbg !2387

if.then:                                          ; preds = %entry
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2388
  %seenJoliet1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 6, !dbg !2389
  store i8 0, i8* %seenJoliet1, align 2, !dbg !2390
  br label %if.end, !dbg !2388

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2391
  %seenJoliet2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 6, !dbg !2393
  %5 = load i8, i8* %seenJoliet2, align 2, !dbg !2393
  %conv = sext i8 %5 to i32, !dbg !2391
  %tobool3 = icmp ne i32 %conv, 0, !dbg !2391
  br i1 %tobool3, label %land.lhs.true, label %if.end8, !dbg !2394

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.vd*, %struct.vd** %vd, align 8, !dbg !2395
  %location = getelementptr inbounds %struct.vd, %struct.vd* %6, i32 0, i32 0, !dbg !2396
  %7 = load i32, i32* %location, align 4, !dbg !2396
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2397
  %joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 21, !dbg !2398
  %location4 = getelementptr inbounds %struct.vd, %struct.vd* %joliet, i32 0, i32 0, !dbg !2399
  %9 = load i32, i32* %location4, align 4, !dbg !2399
  %cmp = icmp sgt i32 %7, %9, !dbg !2400
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !2401

if.then6:                                         ; preds = %land.lhs.true
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2403
  %joliet7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 21, !dbg !2404
  store %struct.vd* %joliet7, %struct.vd** %vd, align 8, !dbg !2405
  br label %if.end8, !dbg !2406

if.end8:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %11 = load %struct.vd*, %struct.vd** %vd, align 8, !dbg !2407
  %location9 = getelementptr inbounds %struct.vd, %struct.vd* %11, i32 0, i32 0, !dbg !2408
  %12 = load i32, i32* %location9, align 4, !dbg !2408
  %conv10 = sext i32 %12 to i64, !dbg !2409
  %mul = mul nsw i64 2048, %conv10, !dbg !2410
  store i64 %mul, i64* %skipsize, align 8, !dbg !2411
  %13 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2412
  %14 = load i64, i64* %skipsize, align 8, !dbg !2413
  %call = call i64 @__archive_read_consume(%struct.archive_read* %13, i64 %14), !dbg !2414
  store i64 %call, i64* %skipsize, align 8, !dbg !2415
  %15 = load i64, i64* %skipsize, align 8, !dbg !2416
  %cmp11 = icmp slt i64 %15, 0, !dbg !2418
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !2419

if.then13:                                        ; preds = %if.end8
  %16 = load i64, i64* %skipsize, align 8, !dbg !2420
  %conv14 = trunc i64 %16 to i32, !dbg !2421
  store i32 %conv14, i32* %retval, align 4, !dbg !2422
  br label %return, !dbg !2422

if.end15:                                         ; preds = %if.end8
  %17 = load i64, i64* %skipsize, align 8, !dbg !2423
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2424
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 16, !dbg !2425
  store i64 %17, i64* %current_position, align 8, !dbg !2426
  %19 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2427
  %20 = load %struct.vd*, %struct.vd** %vd, align 8, !dbg !2428
  %size = getelementptr inbounds %struct.vd, %struct.vd* %20, i32 0, i32 1, !dbg !2429
  %21 = load i32, i32* %size, align 4, !dbg !2429
  %conv16 = zext i32 %21 to i64, !dbg !2428
  %call17 = call i8* @__archive_read_ahead(%struct.archive_read* %19, i64 %conv16, i64* null), !dbg !2430
  store i8* %call17, i8** %block, align 8, !dbg !2431
  %22 = load i8*, i8** %block, align 8, !dbg !2432
  %cmp18 = icmp eq i8* %22, null, !dbg !2434
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !2435

if.then20:                                        ; preds = %if.end15
  %23 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2436
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %23, i32 0, i32 0, !dbg !2438
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.21, i32 0, i32 0)), !dbg !2439
  store i32 -30, i32* %retval, align 4, !dbg !2440
  br label %return, !dbg !2440

if.end21:                                         ; preds = %if.end15
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2441
  %seenJoliet22 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 6, !dbg !2442
  %25 = load i8, i8* %seenJoliet22, align 2, !dbg !2442
  store i8 %25, i8* %seenJoliet, align 1, !dbg !2443
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2444
  %seenJoliet23 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 6, !dbg !2445
  store i8 0, i8* %seenJoliet23, align 2, !dbg !2446
  %27 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2447
  %28 = load i8*, i8** %block, align 8, !dbg !2448
  %call24 = call %struct.file_info* @parse_file_info(%struct.archive_read* %27, %struct.file_info* null, i8* %28), !dbg !2449
  store %struct.file_info* %call24, %struct.file_info** %file, align 8, !dbg !2450
  %29 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2451
  %cmp25 = icmp eq %struct.file_info* %29, null, !dbg !2453
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !2454

if.then27:                                        ; preds = %if.end21
  store i32 -30, i32* %retval, align 4, !dbg !2455
  br label %return, !dbg !2455

if.end28:                                         ; preds = %if.end21
  %30 = load i8, i8* %seenJoliet, align 1, !dbg !2456
  %31 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2457
  %seenJoliet29 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %31, i32 0, i32 6, !dbg !2458
  store i8 %30, i8* %seenJoliet29, align 2, !dbg !2459
  %32 = load %struct.vd*, %struct.vd** %vd, align 8, !dbg !2460
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2462
  %primary30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %33, i32 0, i32 20, !dbg !2463
  %cmp31 = icmp eq %struct.vd* %32, %primary30, !dbg !2464
  br i1 %cmp31, label %land.lhs.true33, label %if.end42, !dbg !2465

land.lhs.true33:                                  ; preds = %if.end28
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2466
  %seenRockridge = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 4, !dbg !2468
  %35 = load i8, i8* %seenRockridge, align 8, !dbg !2468
  %conv34 = sext i8 %35 to i32, !dbg !2466
  %tobool35 = icmp ne i32 %conv34, 0, !dbg !2466
  br i1 %tobool35, label %land.lhs.true36, label %if.end42, !dbg !2469

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2470
  %seenJoliet37 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 6, !dbg !2471
  %37 = load i8, i8* %seenJoliet37, align 2, !dbg !2471
  %conv38 = sext i8 %37 to i32, !dbg !2470
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !2470
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !2472

if.then40:                                        ; preds = %land.lhs.true36
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2474
  %seenJoliet41 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 6, !dbg !2475
  store i8 0, i8* %seenJoliet41, align 2, !dbg !2476
  br label %if.end42, !dbg !2474

if.end42:                                         ; preds = %if.then40, %land.lhs.true36, %land.lhs.true33, %if.end28
  %39 = load %struct.vd*, %struct.vd** %vd, align 8, !dbg !2477
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2479
  %primary43 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 20, !dbg !2480
  %cmp44 = icmp eq %struct.vd* %39, %primary43, !dbg !2481
  br i1 %cmp44, label %land.lhs.true46, label %if.end81, !dbg !2482

land.lhs.true46:                                  ; preds = %if.end42
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2483
  %seenRockridge47 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 4, !dbg !2485
  %42 = load i8, i8* %seenRockridge47, align 8, !dbg !2485
  %tobool48 = icmp ne i8 %42, 0, !dbg !2483
  br i1 %tobool48, label %if.end81, label %land.lhs.true49, !dbg !2486

land.lhs.true49:                                  ; preds = %land.lhs.true46
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2487
  %seenJoliet50 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 6, !dbg !2488
  %44 = load i8, i8* %seenJoliet50, align 2, !dbg !2488
  %conv51 = sext i8 %44 to i32, !dbg !2487
  %tobool52 = icmp ne i32 %conv51, 0, !dbg !2487
  br i1 %tobool52, label %if.then53, label %if.end81, !dbg !2489

if.then53:                                        ; preds = %land.lhs.true49
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2490
  %joliet54 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 21, !dbg !2492
  store %struct.vd* %joliet54, %struct.vd** %vd, align 8, !dbg !2493
  %46 = load %struct.vd*, %struct.vd** %vd, align 8, !dbg !2494
  %location55 = getelementptr inbounds %struct.vd, %struct.vd* %46, i32 0, i32 0, !dbg !2495
  %47 = load i32, i32* %location55, align 4, !dbg !2495
  %conv56 = sext i32 %47 to i64, !dbg !2496
  %mul57 = mul nsw i64 2048, %conv56, !dbg !2497
  store i64 %mul57, i64* %skipsize, align 8, !dbg !2498
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2499
  %current_position58 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 16, !dbg !2500
  %49 = load i64, i64* %current_position58, align 8, !dbg !2500
  %50 = load i64, i64* %skipsize, align 8, !dbg !2501
  %sub = sub i64 %50, %49, !dbg !2501
  store i64 %sub, i64* %skipsize, align 8, !dbg !2501
  %51 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2502
  %52 = load i64, i64* %skipsize, align 8, !dbg !2503
  %call59 = call i64 @__archive_read_consume(%struct.archive_read* %51, i64 %52), !dbg !2504
  store i64 %call59, i64* %skipsize, align 8, !dbg !2505
  %53 = load i64, i64* %skipsize, align 8, !dbg !2506
  %cmp60 = icmp slt i64 %53, 0, !dbg !2508
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !2509

if.then62:                                        ; preds = %if.then53
  %54 = load i64, i64* %skipsize, align 8, !dbg !2510
  %conv63 = trunc i64 %54 to i32, !dbg !2511
  store i32 %conv63, i32* %retval, align 4, !dbg !2512
  br label %return, !dbg !2512

if.end64:                                         ; preds = %if.then53
  %55 = load i64, i64* %skipsize, align 8, !dbg !2513
  %56 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2514
  %current_position65 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %56, i32 0, i32 16, !dbg !2515
  %57 = load i64, i64* %current_position65, align 8, !dbg !2516
  %add = add i64 %57, %55, !dbg !2516
  store i64 %add, i64* %current_position65, align 8, !dbg !2516
  %58 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2517
  %59 = load %struct.vd*, %struct.vd** %vd, align 8, !dbg !2518
  %size66 = getelementptr inbounds %struct.vd, %struct.vd* %59, i32 0, i32 1, !dbg !2519
  %60 = load i32, i32* %size66, align 4, !dbg !2519
  %conv67 = zext i32 %60 to i64, !dbg !2518
  %call68 = call i8* @__archive_read_ahead(%struct.archive_read* %58, i64 %conv67, i64* null), !dbg !2520
  store i8* %call68, i8** %block, align 8, !dbg !2521
  %61 = load i8*, i8** %block, align 8, !dbg !2522
  %cmp69 = icmp eq i8* %61, null, !dbg !2524
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !2525

if.then71:                                        ; preds = %if.end64
  %62 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2526
  %archive72 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %62, i32 0, i32 0, !dbg !2528
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive72, i32 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.21, i32 0, i32 0)), !dbg !2529
  store i32 -30, i32* %retval, align 4, !dbg !2530
  br label %return, !dbg !2530

if.end73:                                         ; preds = %if.end64
  %63 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2531
  %seenJoliet74 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %63, i32 0, i32 6, !dbg !2532
  store i8 0, i8* %seenJoliet74, align 2, !dbg !2533
  %64 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2534
  %65 = load i8*, i8** %block, align 8, !dbg !2535
  %call75 = call %struct.file_info* @parse_file_info(%struct.archive_read* %64, %struct.file_info* null, i8* %65), !dbg !2536
  store %struct.file_info* %call75, %struct.file_info** %file, align 8, !dbg !2537
  %66 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2538
  %cmp76 = icmp eq %struct.file_info* %66, null, !dbg !2540
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !2541

if.then78:                                        ; preds = %if.end73
  store i32 -30, i32* %retval, align 4, !dbg !2542
  br label %return, !dbg !2542

if.end79:                                         ; preds = %if.end73
  %67 = load i8, i8* %seenJoliet, align 1, !dbg !2543
  %68 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2544
  %seenJoliet80 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %68, i32 0, i32 6, !dbg !2545
  store i8 %67, i8* %seenJoliet80, align 2, !dbg !2546
  br label %if.end81, !dbg !2547

if.end81:                                         ; preds = %if.end79, %land.lhs.true49, %land.lhs.true46, %if.end42
  %69 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2548
  %70 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2548
  %pending_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %70, i32 0, i32 13, !dbg !2548
  %71 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2548
  %72 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2548
  %offset = getelementptr inbounds %struct.file_info, %struct.file_info* %72, i32 0, i32 6, !dbg !2548
  %73 = load i64, i64* %offset, align 8, !dbg !2548
  %call82 = call i32 @heap_add_entry(%struct.archive_read* %69, %struct.heap_queue* %pending_files, %struct.file_info* %71, i64 %73), !dbg !2548
  %cmp83 = icmp ne i32 %call82, 0, !dbg !2550
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !2551

if.then85:                                        ; preds = %if.end81
  store i32 -30, i32* %retval, align 4, !dbg !2552
  br label %return, !dbg !2552

if.end86:                                         ; preds = %if.end81
  %74 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2553
  %seenRockridge87 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %74, i32 0, i32 4, !dbg !2555
  %75 = load i8, i8* %seenRockridge87, align 8, !dbg !2555
  %tobool88 = icmp ne i8 %75, 0, !dbg !2553
  br i1 %tobool88, label %if.then89, label %if.end92, !dbg !2556

if.then89:                                        ; preds = %if.end86
  %76 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2557
  %archive90 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %76, i32 0, i32 0, !dbg !2559
  %archive_format = getelementptr inbounds %struct.archive, %struct.archive* %archive90, i32 0, i32 3, !dbg !2560
  store i32 262145, i32* %archive_format, align 8, !dbg !2561
  %77 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2562
  %archive91 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %77, i32 0, i32 0, !dbg !2563
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive91, i32 0, i32 4, !dbg !2564
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i32 0, i32 0), i8** %archive_format_name, align 8, !dbg !2565
  br label %if.end92, !dbg !2566

if.end92:                                         ; preds = %if.then89, %if.end86
  store i32 0, i32* %retval, align 4, !dbg !2567
  br label %return, !dbg !2567

return:                                           ; preds = %if.end92, %if.then85, %if.then78, %if.then71, %if.then62, %if.then27, %if.then20, %if.then13
  %78 = load i32, i32* %retval, align 4, !dbg !2568
  ret i32 %78, !dbg !2568
}

; Function Attrs: nounwind uwtable
define internal i32 @next_entry_seek(%struct.archive_read* %a, %struct.iso9660* %iso9660, %struct.file_info** %pfile) #0 !dbg !573 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %pfile.addr = alloca %struct.file_info**, align 8
  %file = alloca %struct.file_info*, align 8
  %r = alloca i32, align 4
  %step = alloca i64, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2569, metadata !623), !dbg !2570
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !2571, metadata !623), !dbg !2572
  store %struct.file_info** %pfile, %struct.file_info*** %pfile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info*** %pfile.addr, metadata !2573, metadata !623), !dbg !2574
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !2575, metadata !623), !dbg !2576
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2577, metadata !623), !dbg !2578
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2579
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2580
  %2 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !2581
  %call = call i32 @next_cache_entry(%struct.archive_read* %0, %struct.iso9660* %1, %struct.file_info** %2), !dbg !2582
  store i32 %call, i32* %r, align 4, !dbg !2583
  %3 = load i32, i32* %r, align 4, !dbg !2584
  %cmp = icmp ne i32 %3, 0, !dbg !2586
  br i1 %cmp, label %if.then, label %if.end, !dbg !2587

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %r, align 4, !dbg !2588
  store i32 %4, i32* %retval, align 4, !dbg !2589
  br label %return, !dbg !2589

if.end:                                           ; preds = %entry
  %5 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !2590
  %6 = load %struct.file_info*, %struct.file_info** %5, align 8, !dbg !2591
  store %struct.file_info* %6, %struct.file_info** %file, align 8, !dbg !2592
  %7 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2593
  %size = getelementptr inbounds %struct.file_info, %struct.file_info* %7, i32 0, i32 7, !dbg !2595
  %8 = load i64, i64* %size, align 8, !dbg !2595
  %cmp1 = icmp eq i64 %8, 0, !dbg !2596
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2597

if.then2:                                         ; preds = %if.end
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2598
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 16, !dbg !2599
  %10 = load i64, i64* %current_position, align 8, !dbg !2599
  %11 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2600
  %offset = getelementptr inbounds %struct.file_info, %struct.file_info* %11, i32 0, i32 6, !dbg !2601
  store i64 %10, i64* %offset, align 8, !dbg !2602
  br label %if.end3, !dbg !2600

if.end3:                                          ; preds = %if.then2, %if.end
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2603
  %entry_bytes_unconsumed = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 24, !dbg !2605
  %13 = load i64, i64* %entry_bytes_unconsumed, align 8, !dbg !2605
  %tobool = icmp ne i64 %13, 0, !dbg !2603
  br i1 %tobool, label %if.then4, label %if.end8, !dbg !2606

if.then4:                                         ; preds = %if.end3
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2607
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2609
  %entry_bytes_unconsumed5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 24, !dbg !2610
  %16 = load i64, i64* %entry_bytes_unconsumed5, align 8, !dbg !2610
  %call6 = call i64 @__archive_read_consume(%struct.archive_read* %14, i64 %16), !dbg !2611
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2612
  %entry_bytes_unconsumed7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 24, !dbg !2613
  store i64 0, i64* %entry_bytes_unconsumed7, align 8, !dbg !2614
  br label %if.end8, !dbg !2615

if.end8:                                          ; preds = %if.then4, %if.end3
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2616
  %current_position9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 16, !dbg !2618
  %19 = load i64, i64* %current_position9, align 8, !dbg !2618
  %20 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2619
  %offset10 = getelementptr inbounds %struct.file_info, %struct.file_info* %20, i32 0, i32 6, !dbg !2620
  %21 = load i64, i64* %offset10, align 8, !dbg !2620
  %cmp11 = icmp ult i64 %19, %21, !dbg !2621
  br i1 %cmp11, label %if.then12, label %if.end21, !dbg !2622

if.then12:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2623, metadata !623), !dbg !2625
  %22 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2626
  %offset13 = getelementptr inbounds %struct.file_info, %struct.file_info* %22, i32 0, i32 6, !dbg !2627
  %23 = load i64, i64* %offset13, align 8, !dbg !2627
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2628
  %current_position14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 16, !dbg !2629
  %25 = load i64, i64* %current_position14, align 8, !dbg !2629
  %sub = sub i64 %23, %25, !dbg !2630
  store i64 %sub, i64* %step, align 8, !dbg !2631
  %26 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2632
  %27 = load i64, i64* %step, align 8, !dbg !2633
  %call15 = call i64 @__archive_read_consume(%struct.archive_read* %26, i64 %27), !dbg !2634
  store i64 %call15, i64* %step, align 8, !dbg !2635
  %28 = load i64, i64* %step, align 8, !dbg !2636
  %cmp16 = icmp slt i64 %28, 0, !dbg !2638
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2639

if.then17:                                        ; preds = %if.then12
  %29 = load i64, i64* %step, align 8, !dbg !2640
  %conv = trunc i64 %29 to i32, !dbg !2641
  store i32 %conv, i32* %retval, align 4, !dbg !2642
  br label %return, !dbg !2642

if.end18:                                         ; preds = %if.then12
  %30 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2643
  %offset19 = getelementptr inbounds %struct.file_info, %struct.file_info* %30, i32 0, i32 6, !dbg !2644
  %31 = load i64, i64* %offset19, align 8, !dbg !2644
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !2645
  %current_position20 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 16, !dbg !2646
  store i64 %31, i64* %current_position20, align 8, !dbg !2647
  br label %if.end21, !dbg !2648

if.end21:                                         ; preds = %if.end18, %if.end8
  store i32 0, i32* %retval, align 4, !dbg !2649
  br label %return, !dbg !2649

return:                                           ; preds = %if.end21, %if.then17, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !2650
  ret i32 %33, !dbg !2650
}

declare %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive*, i8*, i32) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @build_pathname_utf16be(i8* %p, i64 %max, i64* %len, %struct.file_info* %file) #0 !dbg !600 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %max.addr = alloca i64, align 8
  %len.addr = alloca i64*, align 8
  %file.addr = alloca %struct.file_info*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2651, metadata !623), !dbg !2652
  store i64 %max, i64* %max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !2653, metadata !623), !dbg !2654
  store i64* %len, i64** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %len.addr, metadata !2655, metadata !623), !dbg !2656
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !2657, metadata !623), !dbg !2658
  %0 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2659
  %parent = getelementptr inbounds %struct.file_info, %struct.file_info* %0, i32 0, i32 1, !dbg !2661
  %1 = load %struct.file_info*, %struct.file_info** %parent, align 8, !dbg !2661
  %cmp = icmp ne %struct.file_info* %1, null, !dbg !2662
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !2663

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2664
  %parent1 = getelementptr inbounds %struct.file_info, %struct.file_info* %2, i32 0, i32 1, !dbg !2666
  %3 = load %struct.file_info*, %struct.file_info** %parent1, align 8, !dbg !2666
  %utf16be_bytes = getelementptr inbounds %struct.file_info, %struct.file_info* %3, i32 0, i32 28, !dbg !2667
  %4 = load i64, i64* %utf16be_bytes, align 8, !dbg !2667
  %cmp2 = icmp ugt i64 %4, 0, !dbg !2668
  br i1 %cmp2, label %if.then, label %if.end8, !dbg !2669

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8*, i8** %p.addr, align 8, !dbg !2670
  %6 = load i64, i64* %max.addr, align 8, !dbg !2673
  %7 = load i64*, i64** %len.addr, align 8, !dbg !2674
  %8 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2675
  %parent3 = getelementptr inbounds %struct.file_info, %struct.file_info* %8, i32 0, i32 1, !dbg !2676
  %9 = load %struct.file_info*, %struct.file_info** %parent3, align 8, !dbg !2676
  %call = call i32 @build_pathname_utf16be(i8* %5, i64 %6, i64* %7, %struct.file_info* %9), !dbg !2677
  %cmp4 = icmp ne i32 %call, 0, !dbg !2678
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !2679

if.then5:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !2680
  br label %return, !dbg !2680

if.end:                                           ; preds = %if.then
  %10 = load i64*, i64** %len.addr, align 8, !dbg !2681
  %11 = load i64, i64* %10, align 8, !dbg !2682
  %12 = load i8*, i8** %p.addr, align 8, !dbg !2683
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 %11, !dbg !2683
  store i8 0, i8* %arrayidx, align 1, !dbg !2684
  %13 = load i64*, i64** %len.addr, align 8, !dbg !2685
  %14 = load i64, i64* %13, align 8, !dbg !2686
  %add = add i64 %14, 1, !dbg !2687
  %15 = load i8*, i8** %p.addr, align 8, !dbg !2688
  %arrayidx6 = getelementptr inbounds i8, i8* %15, i64 %add, !dbg !2688
  store i8 47, i8* %arrayidx6, align 1, !dbg !2689
  %16 = load i64*, i64** %len.addr, align 8, !dbg !2690
  %17 = load i64, i64* %16, align 8, !dbg !2691
  %add7 = add i64 %17, 2, !dbg !2691
  store i64 %add7, i64* %16, align 8, !dbg !2691
  br label %if.end8, !dbg !2692

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  %18 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2693
  %utf16be_bytes9 = getelementptr inbounds %struct.file_info, %struct.file_info* %18, i32 0, i32 28, !dbg !2695
  %19 = load i64, i64* %utf16be_bytes9, align 8, !dbg !2695
  %cmp10 = icmp eq i64 %19, 0, !dbg !2696
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !2697

if.then11:                                        ; preds = %if.end8
  %20 = load i64*, i64** %len.addr, align 8, !dbg !2698
  %21 = load i64, i64* %20, align 8, !dbg !2701
  %add12 = add i64 %21, 2, !dbg !2702
  %22 = load i64, i64* %max.addr, align 8, !dbg !2703
  %cmp13 = icmp ugt i64 %add12, %22, !dbg !2704
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2705

if.then14:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !2706
  br label %return, !dbg !2706

if.end15:                                         ; preds = %if.then11
  %23 = load i64*, i64** %len.addr, align 8, !dbg !2707
  %24 = load i64, i64* %23, align 8, !dbg !2708
  %25 = load i8*, i8** %p.addr, align 8, !dbg !2709
  %arrayidx16 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !2709
  store i8 0, i8* %arrayidx16, align 1, !dbg !2710
  %26 = load i64*, i64** %len.addr, align 8, !dbg !2711
  %27 = load i64, i64* %26, align 8, !dbg !2712
  %add17 = add i64 %27, 1, !dbg !2713
  %28 = load i8*, i8** %p.addr, align 8, !dbg !2714
  %arrayidx18 = getelementptr inbounds i8, i8* %28, i64 %add17, !dbg !2714
  store i8 46, i8* %arrayidx18, align 1, !dbg !2715
  %29 = load i64*, i64** %len.addr, align 8, !dbg !2716
  %30 = load i64, i64* %29, align 8, !dbg !2717
  %add19 = add i64 %30, 2, !dbg !2717
  store i64 %add19, i64* %29, align 8, !dbg !2717
  br label %if.end28, !dbg !2718

if.else:                                          ; preds = %if.end8
  %31 = load i64*, i64** %len.addr, align 8, !dbg !2719
  %32 = load i64, i64* %31, align 8, !dbg !2722
  %33 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2723
  %utf16be_bytes20 = getelementptr inbounds %struct.file_info, %struct.file_info* %33, i32 0, i32 28, !dbg !2724
  %34 = load i64, i64* %utf16be_bytes20, align 8, !dbg !2724
  %add21 = add i64 %32, %34, !dbg !2725
  %35 = load i64, i64* %max.addr, align 8, !dbg !2726
  %cmp22 = icmp ugt i64 %add21, %35, !dbg !2727
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2728

if.then23:                                        ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !2729
  br label %return, !dbg !2729

if.end24:                                         ; preds = %if.else
  %36 = load i8*, i8** %p.addr, align 8, !dbg !2730
  %37 = load i64*, i64** %len.addr, align 8, !dbg !2731
  %38 = load i64, i64* %37, align 8, !dbg !2732
  %add.ptr = getelementptr inbounds i8, i8* %36, i64 %38, !dbg !2733
  %39 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2734
  %utf16be_name = getelementptr inbounds %struct.file_info, %struct.file_info* %39, i32 0, i32 27, !dbg !2735
  %40 = load i8*, i8** %utf16be_name, align 8, !dbg !2735
  %41 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2736
  %utf16be_bytes25 = getelementptr inbounds %struct.file_info, %struct.file_info* %41, i32 0, i32 28, !dbg !2737
  %42 = load i64, i64* %utf16be_bytes25, align 8, !dbg !2737
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %40, i64 %42, i32 1, i1 false), !dbg !2738
  %43 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2739
  %utf16be_bytes26 = getelementptr inbounds %struct.file_info, %struct.file_info* %43, i32 0, i32 28, !dbg !2740
  %44 = load i64, i64* %utf16be_bytes26, align 8, !dbg !2740
  %45 = load i64*, i64** %len.addr, align 8, !dbg !2741
  %46 = load i64, i64* %45, align 8, !dbg !2742
  %add27 = add i64 %46, %44, !dbg !2742
  store i64 %add27, i64* %45, align 8, !dbg !2742
  br label %if.end28

if.end28:                                         ; preds = %if.end24, %if.end15
  store i32 0, i32* %retval, align 4, !dbg !2743
  br label %return, !dbg !2743

return:                                           ; preds = %if.end28, %if.then23, %if.then14, %if.then5
  %47 = load i32, i32* %retval, align 4, !dbg !2744
  ret i32 %47, !dbg !2744
}

declare i32 @_archive_entry_copy_pathname_l(%struct.archive_entry*, i8*, i64, %struct.archive_string_conv*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #6

declare i8* @archive_string_conversion_charset_name(%struct.archive_string_conv*) #2

; Function Attrs: nounwind uwtable
define internal i8* @build_pathname(%struct.archive_string* %as, %struct.file_info* %file, i32 %depth) #0 !dbg !603 {
entry:
  %retval = alloca i8*, align 8
  %as.addr = alloca %struct.archive_string*, align 8
  %file.addr = alloca %struct.file_info*, align 8
  %depth.addr = alloca i32, align 4
  store %struct.archive_string* %as, %struct.archive_string** %as.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_string** %as.addr, metadata !2745, metadata !623), !dbg !2746
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !2747, metadata !623), !dbg !2748
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !2749, metadata !623), !dbg !2750
  %0 = load i32, i32* %depth.addr, align 4, !dbg !2751
  %cmp = icmp sgt i32 %0, 1000, !dbg !2753
  br i1 %cmp, label %if.then, label %if.end, !dbg !2754

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !2755
  br label %return, !dbg !2755

if.end:                                           ; preds = %entry
  %1 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2757
  %parent = getelementptr inbounds %struct.file_info, %struct.file_info* %1, i32 0, i32 1, !dbg !2759
  %2 = load %struct.file_info*, %struct.file_info** %parent, align 8, !dbg !2759
  %cmp1 = icmp ne %struct.file_info* %2, null, !dbg !2760
  br i1 %cmp1, label %land.lhs.true, label %if.end10, !dbg !2761

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2762
  %parent2 = getelementptr inbounds %struct.file_info, %struct.file_info* %3, i32 0, i32 1, !dbg !2762
  %4 = load %struct.file_info*, %struct.file_info** %parent2, align 8, !dbg !2762
  %name = getelementptr inbounds %struct.file_info, %struct.file_info* %4, i32 0, i32 26, !dbg !2762
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name, i32 0, i32 1, !dbg !2762
  %5 = load i64, i64* %length, align 8, !dbg !2762
  %cmp3 = icmp ugt i64 %5, 0, !dbg !2764
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !2765

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.archive_string*, %struct.archive_string** %as.addr, align 8, !dbg !2766
  %7 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2769
  %parent5 = getelementptr inbounds %struct.file_info, %struct.file_info* %7, i32 0, i32 1, !dbg !2770
  %8 = load %struct.file_info*, %struct.file_info** %parent5, align 8, !dbg !2770
  %9 = load i32, i32* %depth.addr, align 4, !dbg !2771
  %add = add nsw i32 %9, 1, !dbg !2772
  %call = call i8* @build_pathname(%struct.archive_string* %6, %struct.file_info* %8, i32 %add), !dbg !2773
  %cmp6 = icmp eq i8* %call, null, !dbg !2774
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2775

if.then7:                                         ; preds = %if.then4
  store i8* null, i8** %retval, align 8, !dbg !2776
  br label %return, !dbg !2776

if.end8:                                          ; preds = %if.then4
  %10 = load %struct.archive_string*, %struct.archive_string** %as.addr, align 8, !dbg !2778
  %call9 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0)), !dbg !2779
  br label %if.end10, !dbg !2780

if.end10:                                         ; preds = %if.end8, %land.lhs.true, %if.end
  %11 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2781
  %name11 = getelementptr inbounds %struct.file_info, %struct.file_info* %11, i32 0, i32 26, !dbg !2781
  %length12 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name11, i32 0, i32 1, !dbg !2781
  %12 = load i64, i64* %length12, align 8, !dbg !2781
  %cmp13 = icmp eq i64 %12, 0, !dbg !2783
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !2784

if.then14:                                        ; preds = %if.end10
  %13 = load %struct.archive_string*, %struct.archive_string** %as.addr, align 8, !dbg !2785
  %call15 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0)), !dbg !2786
  br label %if.end17, !dbg !2786

if.else:                                          ; preds = %if.end10
  %14 = load %struct.archive_string*, %struct.archive_string** %as.addr, align 8, !dbg !2787
  %15 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !2788
  %name16 = getelementptr inbounds %struct.file_info, %struct.file_info* %15, i32 0, i32 26, !dbg !2789
  call void @archive_string_concat(%struct.archive_string* %14, %struct.archive_string* %name16), !dbg !2790
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then14
  %16 = load %struct.archive_string*, %struct.archive_string** %as.addr, align 8, !dbg !2791
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %16, i32 0, i32 0, !dbg !2792
  %17 = load i8*, i8** %s, align 8, !dbg !2792
  store i8* %17, i8** %retval, align 8, !dbg !2793
  br label %return, !dbg !2793

return:                                           ; preds = %if.end17, %if.then7, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !2794
  ret i8* %18, !dbg !2794
}

declare void @archive_entry_set_pathname(%struct.archive_entry*, i8*) #2

declare i8* @archive_entry_pathname(%struct.archive_entry*) #2

declare void @archive_entry_set_mode(%struct.archive_entry*, i32) #2

declare void @archive_entry_set_uid(%struct.archive_entry*, i64) #2

declare void @archive_entry_set_gid(%struct.archive_entry*, i64) #2

declare void @archive_entry_set_nlink(%struct.archive_entry*, i32) #2

declare void @archive_entry_set_birthtime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_unset_birthtime(%struct.archive_entry*) #2

declare void @archive_entry_set_mtime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_ctime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_atime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_rdev(%struct.archive_entry*, i64) #2

declare void @archive_entry_set_size(%struct.archive_entry*, i64) #2

declare void @archive_entry_copy_symlink(%struct.archive_entry*, i8*) #2

declare i32 @_archive_entry_copy_hardlink_l(%struct.archive_entry*, i8*, i64, %struct.archive_string_conv*) #2

declare void @archive_entry_set_hardlink(%struct.archive_entry*, i8*) #2

declare void @archive_entry_unset_size(%struct.archive_entry*) #2

declare i64 @__archive_read_seek(%struct.archive_read*, i64, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

declare %struct.archive_string* @archive_strncat(%struct.archive_string*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

declare i32 @archive_entry_filetype(%struct.archive_entry*) #2

declare i64 @__archive_read_consume(%struct.archive_read*, i64) #2

; Function Attrs: nounwind uwtable
define internal %struct.file_info* @parse_file_info(%struct.archive_read* %a, %struct.file_info* %parent, i8* %isodirrec) #0 !dbg !527 {
entry:
  %retval = alloca %struct.file_info*, align 8
  %a.addr = alloca %struct.archive_read*, align 8
  %parent.addr = alloca %struct.file_info*, align 8
  %isodirrec.addr = alloca i8*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.file_info*, align 8
  %filep = alloca %struct.file_info*, align 8
  %name_len = alloca i64, align 8
  %rr_start = alloca i8*, align 8
  %rr_end = alloca i8*, align 8
  %p = alloca i8*, align 8
  %dr_len = alloca i64, align 8
  %fsize = alloca i64, align 8
  %offset = alloca i64, align 8
  %location = alloca i32, align 4
  %flags = alloca i32, align 4
  %r = alloca i32, align 4
  %r303 = alloca %struct.file_info*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !2795, metadata !623), !dbg !2796
  store %struct.file_info* %parent, %struct.file_info** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %parent.addr, metadata !2797, metadata !623), !dbg !2798
  store i8* %isodirrec, i8** %isodirrec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %isodirrec.addr, metadata !2799, metadata !623), !dbg !2800
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !2801, metadata !623), !dbg !2802
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !2803, metadata !623), !dbg !2804
  call void @llvm.dbg.declare(metadata %struct.file_info** %filep, metadata !2805, metadata !623), !dbg !2806
  call void @llvm.dbg.declare(metadata i64* %name_len, metadata !2807, metadata !623), !dbg !2808
  call void @llvm.dbg.declare(metadata i8** %rr_start, metadata !2809, metadata !623), !dbg !2810
  call void @llvm.dbg.declare(metadata i8** %rr_end, metadata !2811, metadata !623), !dbg !2812
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2813, metadata !623), !dbg !2814
  call void @llvm.dbg.declare(metadata i64* %dr_len, metadata !2815, metadata !623), !dbg !2816
  call void @llvm.dbg.declare(metadata i64* %fsize, metadata !2817, metadata !623), !dbg !2818
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !2819, metadata !623), !dbg !2820
  call void @llvm.dbg.declare(metadata i32* %location, metadata !2821, metadata !623), !dbg !2822
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !2823, metadata !623), !dbg !2824
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2825
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !2826
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !2826
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !2827
  %2 = load i8*, i8** %data, align 8, !dbg !2827
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !2828
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !2829
  %4 = load i8*, i8** %isodirrec.addr, align 8, !dbg !2830
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !2830
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2830
  %conv = zext i8 %5 to i64, !dbg !2831
  store i64 %conv, i64* %dr_len, align 8, !dbg !2832
  %6 = load i8*, i8** %isodirrec.addr, align 8, !dbg !2833
  %arrayidx1 = getelementptr inbounds i8, i8* %6, i64 32, !dbg !2833
  %7 = load i8, i8* %arrayidx1, align 1, !dbg !2833
  %conv2 = zext i8 %7 to i64, !dbg !2834
  store i64 %conv2, i64* %name_len, align 8, !dbg !2835
  %8 = load i8*, i8** %isodirrec.addr, align 8, !dbg !2836
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 2, !dbg !2837
  %call = call i32 @archive_le32dec(i8* %add.ptr), !dbg !2838
  store i32 %call, i32* %location, align 4, !dbg !2839
  %9 = load i8*, i8** %isodirrec.addr, align 8, !dbg !2840
  %add.ptr3 = getelementptr inbounds i8, i8* %9, i64 10, !dbg !2841
  %call4 = call i32 @toi(i8* %add.ptr3, i32 4), !dbg !2842
  %conv5 = zext i32 %call4 to i64, !dbg !2842
  store i64 %conv5, i64* %fsize, align 8, !dbg !2843
  %10 = load i64, i64* %dr_len, align 8, !dbg !2844
  %cmp = icmp ult i64 %10, 34, !dbg !2846
  br i1 %cmp, label %if.then, label %if.end, !dbg !2847

if.then:                                          ; preds = %entry
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2848
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !2850
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i32 0, i32 0)), !dbg !2851
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !2852
  br label %return, !dbg !2852

if.end:                                           ; preds = %entry
  %12 = load i64, i64* %dr_len, align 8, !dbg !2853
  %sub = sub i64 %12, 33, !dbg !2855
  %13 = load i64, i64* %name_len, align 8, !dbg !2856
  %cmp7 = icmp ult i64 %sub, %13, !dbg !2857
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !2858

lor.lhs.false:                                    ; preds = %if.end
  %14 = load i64, i64* %name_len, align 8, !dbg !2859
  %cmp9 = icmp eq i64 %14, 0, !dbg !2861
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !2862

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  %15 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2863
  %archive12 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %15, i32 0, i32 0, !dbg !2865
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive12, i32 -1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i32 0, i32 0)), !dbg !2866
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !2867
  br label %return, !dbg !2867

if.end13:                                         ; preds = %lor.lhs.false
  %16 = load i32, i32* %location, align 4, !dbg !2868
  %cmp14 = icmp sgt i32 %16, 0, !dbg !2870
  br i1 %cmp14, label %land.lhs.true, label %if.end25, !dbg !2871

land.lhs.true:                                    ; preds = %if.end13
  %17 = load i32, i32* %location, align 4, !dbg !2872
  %conv16 = sext i32 %17 to i64, !dbg !2872
  %18 = load i64, i64* %fsize, align 8, !dbg !2873
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2874
  %logical_block_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 17, !dbg !2875
  %20 = load i64, i64* %logical_block_size, align 8, !dbg !2875
  %add = add i64 %18, %20, !dbg !2876
  %sub17 = sub i64 %add, 1, !dbg !2877
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2878
  %logical_block_size18 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 17, !dbg !2879
  %22 = load i64, i64* %logical_block_size18, align 8, !dbg !2879
  %div = udiv i64 %sub17, %22, !dbg !2880
  %add19 = add i64 %conv16, %div, !dbg !2881
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2882
  %volume_block = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 19, !dbg !2883
  %24 = load i32, i32* %volume_block, align 8, !dbg !2883
  %conv20 = zext i32 %24 to i64, !dbg !2884
  %cmp21 = icmp ugt i64 %add19, %conv20, !dbg !2885
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !2886

if.then23:                                        ; preds = %land.lhs.true
  %25 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2888
  %archive24 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %25, i32 0, i32 0, !dbg !2890
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive24, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i32 0, i32 0)), !dbg !2891
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !2892
  br label %return, !dbg !2892

if.end25:                                         ; preds = %land.lhs.true, %if.end13
  %26 = load i64, i64* %fsize, align 8, !dbg !2893
  %cmp26 = icmp ne i64 %26, 0, !dbg !2895
  br i1 %cmp26, label %land.lhs.true28, label %if.end33, !dbg !2896

land.lhs.true28:                                  ; preds = %if.end25
  %27 = load i32, i32* %location, align 4, !dbg !2897
  %cmp29 = icmp slt i32 %27, 0, !dbg !2899
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !2900

if.then31:                                        ; preds = %land.lhs.true28
  %28 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2901
  %archive32 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %28, i32 0, i32 0, !dbg !2903
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive32, i32 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i32 0, i32 0)), !dbg !2904
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !2905
  br label %return, !dbg !2905

if.end33:                                         ; preds = %land.lhs.true28, %if.end25
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2906
  %logical_block_size34 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 17, !dbg !2907
  %30 = load i64, i64* %logical_block_size34, align 8, !dbg !2907
  %31 = load i32, i32* %location, align 4, !dbg !2908
  %conv35 = sext i32 %31 to i64, !dbg !2909
  %mul = mul i64 %30, %conv35, !dbg !2910
  store i64 %mul, i64* %offset, align 8, !dbg !2911
  %32 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !2912
  store %struct.file_info* %32, %struct.file_info** %filep, align 8, !dbg !2914
  br label %for.cond, !dbg !2915

for.cond:                                         ; preds = %for.inc, %if.end33
  %33 = load %struct.file_info*, %struct.file_info** %filep, align 8, !dbg !2916
  %cmp36 = icmp ne %struct.file_info* %33, null, !dbg !2919
  br i1 %cmp36, label %for.body, label %for.end, !dbg !2920

for.body:                                         ; preds = %for.cond
  %34 = load %struct.file_info*, %struct.file_info** %filep, align 8, !dbg !2921
  %offset38 = getelementptr inbounds %struct.file_info, %struct.file_info* %34, i32 0, i32 6, !dbg !2924
  %35 = load i64, i64* %offset38, align 8, !dbg !2924
  %36 = load i64, i64* %offset, align 8, !dbg !2925
  %cmp39 = icmp eq i64 %35, %36, !dbg !2926
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !2927

if.then41:                                        ; preds = %for.body
  %37 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2928
  %archive42 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %37, i32 0, i32 0, !dbg !2930
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive42, i32 84, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i32 0, i32 0)), !dbg !2931
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !2932
  br label %return, !dbg !2932

if.end43:                                         ; preds = %for.body
  br label %for.inc, !dbg !2933

for.inc:                                          ; preds = %if.end43
  %38 = load %struct.file_info*, %struct.file_info** %filep, align 8, !dbg !2934
  %parent44 = getelementptr inbounds %struct.file_info, %struct.file_info* %38, i32 0, i32 1, !dbg !2936
  %39 = load %struct.file_info*, %struct.file_info** %parent44, align 8, !dbg !2936
  store %struct.file_info* %39, %struct.file_info** %filep, align 8, !dbg !2937
  br label %for.cond, !dbg !2938

for.end:                                          ; preds = %for.cond
  %call45 = call noalias i8* @calloc(i64 1, i64 304) #8, !dbg !2939
  %40 = bitcast i8* %call45 to %struct.file_info*, !dbg !2940
  store %struct.file_info* %40, %struct.file_info** %file, align 8, !dbg !2941
  %41 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2942
  %cmp46 = icmp eq %struct.file_info* %41, null, !dbg !2944
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !2945

if.then48:                                        ; preds = %for.end
  %42 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !2946
  %archive49 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %42, i32 0, i32 0, !dbg !2948
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive49, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i32 0, i32 0)), !dbg !2949
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !2950
  br label %return, !dbg !2950

if.end50:                                         ; preds = %for.end
  %43 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !2951
  %44 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2952
  %parent51 = getelementptr inbounds %struct.file_info, %struct.file_info* %44, i32 0, i32 1, !dbg !2953
  store %struct.file_info* %43, %struct.file_info** %parent51, align 8, !dbg !2954
  %45 = load i64, i64* %offset, align 8, !dbg !2955
  %46 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2956
  %offset52 = getelementptr inbounds %struct.file_info, %struct.file_info* %46, i32 0, i32 6, !dbg !2957
  store i64 %45, i64* %offset52, align 8, !dbg !2958
  %47 = load i64, i64* %fsize, align 8, !dbg !2959
  %48 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2960
  %size = getelementptr inbounds %struct.file_info, %struct.file_info* %48, i32 0, i32 7, !dbg !2961
  store i64 %47, i64* %size, align 8, !dbg !2962
  %49 = load i8*, i8** %isodirrec.addr, align 8, !dbg !2963
  %add.ptr53 = getelementptr inbounds i8, i8* %49, i64 18, !dbg !2964
  %call54 = call i64 @isodate7(i8* %add.ptr53), !dbg !2965
  %50 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2966
  %mtime = getelementptr inbounds %struct.file_info, %struct.file_info* %50, i32 0, i32 17, !dbg !2967
  store i64 %call54, i64* %mtime, align 8, !dbg !2968
  %51 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2969
  %mtime55 = getelementptr inbounds %struct.file_info, %struct.file_info* %51, i32 0, i32 17, !dbg !2970
  %52 = load i64, i64* %mtime55, align 8, !dbg !2970
  %53 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2971
  %atime = getelementptr inbounds %struct.file_info, %struct.file_info* %53, i32 0, i32 18, !dbg !2972
  store i64 %52, i64* %atime, align 8, !dbg !2973
  %54 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2974
  %ctime = getelementptr inbounds %struct.file_info, %struct.file_info* %54, i32 0, i32 19, !dbg !2975
  store i64 %52, i64* %ctime, align 8, !dbg !2976
  %55 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2977
  %rede_files = getelementptr inbounds %struct.file_info, %struct.file_info* %55, i32 0, i32 37, !dbg !2978
  %first = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files, i32 0, i32 0, !dbg !2979
  store %struct.file_info* null, %struct.file_info** %first, align 8, !dbg !2980
  %56 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2981
  %rede_files56 = getelementptr inbounds %struct.file_info, %struct.file_info* %56, i32 0, i32 37, !dbg !2982
  %first57 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files56, i32 0, i32 0, !dbg !2983
  %57 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !2984
  %rede_files58 = getelementptr inbounds %struct.file_info, %struct.file_info* %57, i32 0, i32 37, !dbg !2985
  %last = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files58, i32 0, i32 1, !dbg !2986
  store %struct.file_info** %first57, %struct.file_info*** %last, align 8, !dbg !2987
  %58 = load i8*, i8** %isodirrec.addr, align 8, !dbg !2988
  %add.ptr59 = getelementptr inbounds i8, i8* %58, i64 33, !dbg !2989
  store i8* %add.ptr59, i8** %p, align 8, !dbg !2990
  %59 = load i8*, i8** %p, align 8, !dbg !2991
  %60 = load i64, i64* %name_len, align 8, !dbg !2992
  %add.ptr60 = getelementptr inbounds i8, i8* %59, i64 %60, !dbg !2993
  %61 = load i64, i64* %name_len, align 8, !dbg !2994
  %and = and i64 %61, 1, !dbg !2995
  %tobool = icmp ne i64 %and, 0, !dbg !2994
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !2994
  %idx.ext = sext i32 %cond to i64, !dbg !2996
  %add.ptr61 = getelementptr inbounds i8, i8* %add.ptr60, i64 %idx.ext, !dbg !2996
  store i8* %add.ptr61, i8** %rr_start, align 8, !dbg !2997
  %62 = load i8*, i8** %isodirrec.addr, align 8, !dbg !2998
  %63 = load i64, i64* %dr_len, align 8, !dbg !2999
  %add.ptr62 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !3000
  store i8* %add.ptr62, i8** %rr_end, align 8, !dbg !3001
  %64 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3002
  %seenJoliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %64, i32 0, i32 6, !dbg !3004
  %65 = load i8, i8* %seenJoliet, align 2, !dbg !3004
  %tobool63 = icmp ne i8 %65, 0, !dbg !3002
  br i1 %tobool63, label %if.then64, label %if.else, !dbg !3005

if.then64:                                        ; preds = %if.end50
  %66 = load i64, i64* %name_len, align 8, !dbg !3006
  %cmp65 = icmp ugt i64 %66, 206, !dbg !3009
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !3010

if.then67:                                        ; preds = %if.then64
  store i64 206, i64* %name_len, align 8, !dbg !3011
  br label %if.end68, !dbg !3012

if.end68:                                         ; preds = %if.then67, %if.then64
  %67 = load i64, i64* %name_len, align 8, !dbg !3013
  %and69 = and i64 %67, -2, !dbg !3013
  store i64 %and69, i64* %name_len, align 8, !dbg !3013
  %68 = load i64, i64* %name_len, align 8, !dbg !3014
  %cmp70 = icmp ugt i64 %68, 4, !dbg !3016
  br i1 %cmp70, label %land.lhs.true72, label %if.end98, !dbg !3017

land.lhs.true72:                                  ; preds = %if.end68
  %69 = load i64, i64* %name_len, align 8, !dbg !3018
  %sub73 = sub i64 %69, 4, !dbg !3020
  %70 = load i8*, i8** %p, align 8, !dbg !3021
  %arrayidx74 = getelementptr inbounds i8, i8* %70, i64 %sub73, !dbg !3021
  %71 = load i8, i8* %arrayidx74, align 1, !dbg !3021
  %conv75 = zext i8 %71 to i32, !dbg !3021
  %cmp76 = icmp eq i32 %conv75, 0, !dbg !3022
  br i1 %cmp76, label %land.lhs.true78, label %if.end98, !dbg !3023

land.lhs.true78:                                  ; preds = %land.lhs.true72
  %72 = load i64, i64* %name_len, align 8, !dbg !3024
  %sub79 = sub i64 %72, 3, !dbg !3026
  %73 = load i8*, i8** %p, align 8, !dbg !3027
  %arrayidx80 = getelementptr inbounds i8, i8* %73, i64 %sub79, !dbg !3027
  %74 = load i8, i8* %arrayidx80, align 1, !dbg !3027
  %conv81 = zext i8 %74 to i32, !dbg !3027
  %cmp82 = icmp eq i32 %conv81, 59, !dbg !3028
  br i1 %cmp82, label %land.lhs.true84, label %if.end98, !dbg !3029

land.lhs.true84:                                  ; preds = %land.lhs.true78
  %75 = load i64, i64* %name_len, align 8, !dbg !3030
  %sub85 = sub i64 %75, 2, !dbg !3031
  %76 = load i8*, i8** %p, align 8, !dbg !3032
  %arrayidx86 = getelementptr inbounds i8, i8* %76, i64 %sub85, !dbg !3032
  %77 = load i8, i8* %arrayidx86, align 1, !dbg !3032
  %conv87 = zext i8 %77 to i32, !dbg !3032
  %cmp88 = icmp eq i32 %conv87, 0, !dbg !3033
  br i1 %cmp88, label %land.lhs.true90, label %if.end98, !dbg !3034

land.lhs.true90:                                  ; preds = %land.lhs.true84
  %78 = load i64, i64* %name_len, align 8, !dbg !3035
  %sub91 = sub i64 %78, 1, !dbg !3036
  %79 = load i8*, i8** %p, align 8, !dbg !3037
  %arrayidx92 = getelementptr inbounds i8, i8* %79, i64 %sub91, !dbg !3037
  %80 = load i8, i8* %arrayidx92, align 1, !dbg !3037
  %conv93 = zext i8 %80 to i32, !dbg !3037
  %cmp94 = icmp eq i32 %conv93, 49, !dbg !3038
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !3039

if.then96:                                        ; preds = %land.lhs.true90
  %81 = load i64, i64* %name_len, align 8, !dbg !3041
  %sub97 = sub i64 %81, 4, !dbg !3041
  store i64 %sub97, i64* %name_len, align 8, !dbg !3041
  br label %if.end98, !dbg !3042

if.end98:                                         ; preds = %if.then96, %land.lhs.true90, %land.lhs.true84, %land.lhs.true78, %land.lhs.true72, %if.end68
  %82 = load i64, i64* %name_len, align 8, !dbg !3043
  %call99 = call noalias i8* @malloc(i64 %82) #8, !dbg !3045
  %83 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3046
  %utf16be_name = getelementptr inbounds %struct.file_info, %struct.file_info* %83, i32 0, i32 27, !dbg !3047
  store i8* %call99, i8** %utf16be_name, align 8, !dbg !3048
  %cmp100 = icmp eq i8* %call99, null, !dbg !3049
  br i1 %cmp100, label %if.then102, label %if.end104, !dbg !3050

if.then102:                                       ; preds = %if.end98
  %84 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3051
  %archive103 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %84, i32 0, i32 0, !dbg !3053
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive103, i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0)), !dbg !3054
  br label %fail, !dbg !3055

if.end104:                                        ; preds = %if.end98
  %85 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3056
  %utf16be_name105 = getelementptr inbounds %struct.file_info, %struct.file_info* %85, i32 0, i32 27, !dbg !3057
  %86 = load i8*, i8** %utf16be_name105, align 8, !dbg !3057
  %87 = load i8*, i8** %p, align 8, !dbg !3058
  %88 = load i64, i64* %name_len, align 8, !dbg !3059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 %88, i32 1, i1 false), !dbg !3060
  %89 = load i64, i64* %name_len, align 8, !dbg !3061
  %90 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3062
  %utf16be_bytes = getelementptr inbounds %struct.file_info, %struct.file_info* %90, i32 0, i32 28, !dbg !3063
  store i64 %89, i64* %utf16be_bytes, align 8, !dbg !3064
  br label %if.end135, !dbg !3065

if.else:                                          ; preds = %if.end50
  %91 = load i64, i64* %name_len, align 8, !dbg !3066
  %cmp106 = icmp ugt i64 %91, 2, !dbg !3069
  br i1 %cmp106, label %land.lhs.true108, label %if.end122, !dbg !3070

land.lhs.true108:                                 ; preds = %if.else
  %92 = load i64, i64* %name_len, align 8, !dbg !3071
  %sub109 = sub i64 %92, 2, !dbg !3073
  %93 = load i8*, i8** %p, align 8, !dbg !3074
  %arrayidx110 = getelementptr inbounds i8, i8* %93, i64 %sub109, !dbg !3074
  %94 = load i8, i8* %arrayidx110, align 1, !dbg !3074
  %conv111 = zext i8 %94 to i32, !dbg !3074
  %cmp112 = icmp eq i32 %conv111, 59, !dbg !3075
  br i1 %cmp112, label %land.lhs.true114, label %if.end122, !dbg !3076

land.lhs.true114:                                 ; preds = %land.lhs.true108
  %95 = load i64, i64* %name_len, align 8, !dbg !3077
  %sub115 = sub i64 %95, 1, !dbg !3078
  %96 = load i8*, i8** %p, align 8, !dbg !3079
  %arrayidx116 = getelementptr inbounds i8, i8* %96, i64 %sub115, !dbg !3079
  %97 = load i8, i8* %arrayidx116, align 1, !dbg !3079
  %conv117 = zext i8 %97 to i32, !dbg !3079
  %cmp118 = icmp eq i32 %conv117, 49, !dbg !3080
  br i1 %cmp118, label %if.then120, label %if.end122, !dbg !3081

if.then120:                                       ; preds = %land.lhs.true114
  %98 = load i64, i64* %name_len, align 8, !dbg !3083
  %sub121 = sub i64 %98, 2, !dbg !3083
  store i64 %sub121, i64* %name_len, align 8, !dbg !3083
  br label %if.end122, !dbg !3084

if.end122:                                        ; preds = %if.then120, %land.lhs.true114, %land.lhs.true108, %if.else
  %99 = load i64, i64* %name_len, align 8, !dbg !3085
  %cmp123 = icmp ugt i64 %99, 1, !dbg !3087
  br i1 %cmp123, label %land.lhs.true125, label %if.end132, !dbg !3088

land.lhs.true125:                                 ; preds = %if.end122
  %100 = load i64, i64* %name_len, align 8, !dbg !3089
  %sub126 = sub i64 %100, 1, !dbg !3091
  %101 = load i8*, i8** %p, align 8, !dbg !3092
  %arrayidx127 = getelementptr inbounds i8, i8* %101, i64 %sub126, !dbg !3092
  %102 = load i8, i8* %arrayidx127, align 1, !dbg !3092
  %conv128 = zext i8 %102 to i32, !dbg !3092
  %cmp129 = icmp eq i32 %conv128, 46, !dbg !3093
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !3094

if.then131:                                       ; preds = %land.lhs.true125
  %103 = load i64, i64* %name_len, align 8, !dbg !3095
  %dec = add i64 %103, -1, !dbg !3095
  store i64 %dec, i64* %name_len, align 8, !dbg !3095
  br label %if.end132, !dbg !3095

if.end132:                                        ; preds = %if.then131, %land.lhs.true125, %if.end122
  %104 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3096
  %name = getelementptr inbounds %struct.file_info, %struct.file_info* %104, i32 0, i32 26, !dbg !3096
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name, i32 0, i32 1, !dbg !3096
  store i64 0, i64* %length, align 8, !dbg !3096
  %105 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3096
  %name133 = getelementptr inbounds %struct.file_info, %struct.file_info* %105, i32 0, i32 26, !dbg !3096
  %106 = load i8*, i8** %p, align 8, !dbg !3096
  %107 = load i64, i64* %name_len, align 8, !dbg !3096
  %call134 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %name133, i8* %106, i64 %107), !dbg !3096
  br label %if.end135

if.end135:                                        ; preds = %if.end132, %if.end104
  %108 = load i8*, i8** %isodirrec.addr, align 8, !dbg !3097
  %arrayidx136 = getelementptr inbounds i8, i8* %108, i64 25, !dbg !3097
  %109 = load i8, i8* %arrayidx136, align 1, !dbg !3097
  %conv137 = zext i8 %109 to i32, !dbg !3097
  store i32 %conv137, i32* %flags, align 4, !dbg !3098
  %110 = load i32, i32* %flags, align 4, !dbg !3099
  %and138 = and i32 %110, 2, !dbg !3101
  %tobool139 = icmp ne i32 %and138, 0, !dbg !3101
  br i1 %tobool139, label %if.then140, label %if.else141, !dbg !3102

if.then140:                                       ; preds = %if.end135
  %111 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3103
  %mode = getelementptr inbounds %struct.file_info, %struct.file_info* %111, i32 0, i32 21, !dbg !3104
  store i32 16832, i32* %mode, align 8, !dbg !3105
  br label %if.end143, !dbg !3103

if.else141:                                       ; preds = %if.end135
  %112 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3106
  %mode142 = getelementptr inbounds %struct.file_info, %struct.file_info* %112, i32 0, i32 21, !dbg !3107
  store i32 33024, i32* %mode142, align 8, !dbg !3108
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.then140
  %113 = load i32, i32* %flags, align 4, !dbg !3109
  %and144 = and i32 %113, 128, !dbg !3111
  %tobool145 = icmp ne i32 %and144, 0, !dbg !3111
  br i1 %tobool145, label %if.then146, label %if.else147, !dbg !3112

if.then146:                                       ; preds = %if.end143
  %114 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3113
  %multi_extent = getelementptr inbounds %struct.file_info, %struct.file_info* %114, i32 0, i32 35, !dbg !3114
  store i32 1, i32* %multi_extent, align 8, !dbg !3115
  br label %if.end149, !dbg !3113

if.else147:                                       ; preds = %if.end143
  %115 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3116
  %multi_extent148 = getelementptr inbounds %struct.file_info, %struct.file_info* %115, i32 0, i32 35, !dbg !3117
  store i32 0, i32* %multi_extent148, align 8, !dbg !3118
  br label %if.end149

if.end149:                                        ; preds = %if.else147, %if.then146
  %116 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3119
  %size150 = getelementptr inbounds %struct.file_info, %struct.file_info* %116, i32 0, i32 7, !dbg !3121
  %117 = load i64, i64* %size150, align 8, !dbg !3121
  %cmp151 = icmp eq i64 %117, 0, !dbg !3122
  br i1 %cmp151, label %land.lhs.true153, label %if.else158, !dbg !3123

land.lhs.true153:                                 ; preds = %if.end149
  %118 = load i32, i32* %location, align 4, !dbg !3124
  %cmp154 = icmp sge i32 %118, 0, !dbg !3126
  br i1 %cmp154, label %if.then156, label %if.else158, !dbg !3127

if.then156:                                       ; preds = %land.lhs.true153
  %119 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3128
  %number = getelementptr inbounds %struct.file_info, %struct.file_info* %119, i32 0, i32 24, !dbg !3130
  store i64 -1, i64* %number, align 8, !dbg !3131
  %120 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3132
  %offset157 = getelementptr inbounds %struct.file_info, %struct.file_info* %120, i32 0, i32 6, !dbg !3133
  store i64 -1, i64* %offset157, align 8, !dbg !3134
  br label %if.end161, !dbg !3135

if.else158:                                       ; preds = %land.lhs.true153, %if.end149
  %121 = load i32, i32* %location, align 4, !dbg !3136
  %conv159 = zext i32 %121 to i64, !dbg !3137
  %122 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3138
  %number160 = getelementptr inbounds %struct.file_info, %struct.file_info* %122, i32 0, i32 24, !dbg !3139
  store i64 %conv159, i64* %number160, align 8, !dbg !3140
  br label %if.end161

if.end161:                                        ; preds = %if.else158, %if.then156
  %123 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3141
  %opt_support_rockridge = getelementptr inbounds %struct.iso9660, %struct.iso9660* %123, i32 0, i32 2, !dbg !3143
  %124 = load i32, i32* %opt_support_rockridge, align 8, !dbg !3143
  %tobool162 = icmp ne i32 %124, 0, !dbg !3141
  br i1 %tobool162, label %if.then163, label %if.end206, !dbg !3144

if.then163:                                       ; preds = %if.end161
  %125 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3145
  %cmp164 = icmp eq %struct.file_info* %125, null, !dbg !3148
  br i1 %cmp164, label %land.lhs.true166, label %if.end177, !dbg !3149

land.lhs.true166:                                 ; preds = %if.then163
  %126 = load i8*, i8** %rr_end, align 8, !dbg !3150
  %127 = load i8*, i8** %rr_start, align 8, !dbg !3152
  %sub.ptr.lhs.cast = ptrtoint i8* %126 to i64, !dbg !3153
  %sub.ptr.rhs.cast = ptrtoint i8* %127 to i64, !dbg !3153
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3153
  %cmp167 = icmp sge i64 %sub.ptr.sub, 7, !dbg !3154
  br i1 %cmp167, label %if.then169, label %if.end177, !dbg !3155

if.then169:                                       ; preds = %land.lhs.true166
  %128 = load i8*, i8** %rr_start, align 8, !dbg !3156
  store i8* %128, i8** %p, align 8, !dbg !3158
  %129 = load i8*, i8** %p, align 8, !dbg !3159
  %call170 = call i32 @memcmp(i8* %129, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i64 6) #9, !dbg !3161
  %cmp171 = icmp eq i32 %call170, 0, !dbg !3162
  br i1 %cmp171, label %if.then173, label %if.end176, !dbg !3163

if.then173:                                       ; preds = %if.then169
  %130 = load i8*, i8** %p, align 8, !dbg !3164
  %arrayidx174 = getelementptr inbounds i8, i8* %130, i64 6, !dbg !3164
  %131 = load i8, i8* %arrayidx174, align 1, !dbg !3164
  %132 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3166
  %suspOffset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %132, i32 0, i32 7, !dbg !3167
  store i8 %131, i8* %suspOffset, align 1, !dbg !3168
  %133 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3169
  %seenSUSP = getelementptr inbounds %struct.iso9660, %struct.iso9660* %133, i32 0, i32 5, !dbg !3170
  store i8 1, i8* %seenSUSP, align 1, !dbg !3171
  %134 = load i8*, i8** %rr_start, align 8, !dbg !3172
  %add.ptr175 = getelementptr inbounds i8, i8* %134, i64 7, !dbg !3172
  store i8* %add.ptr175, i8** %rr_start, align 8, !dbg !3172
  br label %if.end176, !dbg !3173

if.end176:                                        ; preds = %if.then173, %if.then169
  br label %if.end177, !dbg !3174

if.end177:                                        ; preds = %if.end176, %land.lhs.true166, %if.then163
  %135 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3175
  %seenSUSP178 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %135, i32 0, i32 5, !dbg !3177
  %136 = load i8, i8* %seenSUSP178, align 1, !dbg !3177
  %tobool179 = icmp ne i8 %136, 0, !dbg !3175
  br i1 %tobool179, label %if.then180, label %if.else203, !dbg !3178

if.then180:                                       ; preds = %if.end177
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3179, metadata !623), !dbg !3181
  %137 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3182
  %name_continues = getelementptr inbounds %struct.file_info, %struct.file_info* %137, i32 0, i32 29, !dbg !3183
  store i8 0, i8* %name_continues, align 8, !dbg !3184
  %138 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3185
  %symlink_continues = getelementptr inbounds %struct.file_info, %struct.file_info* %138, i32 0, i32 31, !dbg !3186
  store i8 0, i8* %symlink_continues, align 8, !dbg !3187
  %139 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3188
  %suspOffset181 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %139, i32 0, i32 7, !dbg !3189
  %140 = load i8, i8* %suspOffset181, align 1, !dbg !3189
  %conv182 = zext i8 %140 to i32, !dbg !3188
  %141 = load i8*, i8** %rr_start, align 8, !dbg !3190
  %idx.ext183 = sext i32 %conv182 to i64, !dbg !3190
  %add.ptr184 = getelementptr inbounds i8, i8* %141, i64 %idx.ext183, !dbg !3190
  store i8* %add.ptr184, i8** %rr_start, align 8, !dbg !3190
  %142 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3191
  %143 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3192
  %144 = load i8*, i8** %rr_start, align 8, !dbg !3193
  %145 = load i8*, i8** %rr_end, align 8, !dbg !3194
  %call185 = call i32 @parse_rockridge(%struct.archive_read* %142, %struct.file_info* %143, i8* %144, i8* %145), !dbg !3195
  store i32 %call185, i32* %r, align 4, !dbg !3196
  %146 = load i32, i32* %r, align 4, !dbg !3197
  %cmp186 = icmp ne i32 %146, 0, !dbg !3199
  br i1 %cmp186, label %if.then188, label %if.end189, !dbg !3200

if.then188:                                       ; preds = %if.then180
  br label %fail, !dbg !3201

if.end189:                                        ; preds = %if.then180
  %147 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3202
  %size190 = getelementptr inbounds %struct.file_info, %struct.file_info* %147, i32 0, i32 7, !dbg !3204
  %148 = load i64, i64* %size190, align 8, !dbg !3204
  %cmp191 = icmp ugt i64 %148, 0, !dbg !3205
  br i1 %cmp191, label %land.lhs.true193, label %if.end202, !dbg !3206

land.lhs.true193:                                 ; preds = %if.end189
  %149 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3207
  %mode194 = getelementptr inbounds %struct.file_info, %struct.file_info* %149, i32 0, i32 21, !dbg !3208
  %150 = load i32, i32* %mode194, align 8, !dbg !3208
  %and195 = and i32 %150, 61440, !dbg !3209
  %cmp196 = icmp eq i32 %and195, 40960, !dbg !3210
  br i1 %cmp196, label %if.then198, label %if.end202, !dbg !3211

if.then198:                                       ; preds = %land.lhs.true193
  %151 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3213
  %size199 = getelementptr inbounds %struct.file_info, %struct.file_info* %151, i32 0, i32 7, !dbg !3215
  store i64 0, i64* %size199, align 8, !dbg !3216
  %152 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3217
  %number200 = getelementptr inbounds %struct.file_info, %struct.file_info* %152, i32 0, i32 24, !dbg !3218
  store i64 -1, i64* %number200, align 8, !dbg !3219
  %153 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3220
  %offset201 = getelementptr inbounds %struct.file_info, %struct.file_info* %153, i32 0, i32 6, !dbg !3221
  store i64 -1, i64* %offset201, align 8, !dbg !3222
  br label %if.end202, !dbg !3223

if.end202:                                        ; preds = %if.then198, %land.lhs.true193, %if.end189
  br label %if.end205, !dbg !3224

if.else203:                                       ; preds = %if.end177
  %154 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3225
  %opt_support_rockridge204 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %154, i32 0, i32 2, !dbg !3226
  store i32 0, i32* %opt_support_rockridge204, align 8, !dbg !3227
  br label %if.end205

if.end205:                                        ; preds = %if.else203, %if.end202
  br label %if.end206, !dbg !3228

if.end206:                                        ; preds = %if.end205, %if.end161
  %155 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3229
  %nlinks = getelementptr inbounds %struct.file_info, %struct.file_info* %155, i32 0, i32 25, !dbg !3230
  store i32 1, i32* %nlinks, align 8, !dbg !3231
  %156 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3232
  %cmp207 = icmp ne %struct.file_info* %156, null, !dbg !3234
  br i1 %cmp207, label %land.lhs.true209, label %if.end213, !dbg !3235

land.lhs.true209:                                 ; preds = %if.end206
  %157 = load i32, i32* %flags, align 4, !dbg !3236
  %and210 = and i32 %157, 2, !dbg !3238
  %tobool211 = icmp ne i32 %and210, 0, !dbg !3238
  br i1 %tobool211, label %if.then212, label %if.end213, !dbg !3239

if.then212:                                       ; preds = %land.lhs.true209
  %158 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3240
  %subdirs = getelementptr inbounds %struct.file_info, %struct.file_info* %158, i32 0, i32 4, !dbg !3241
  %159 = load i32, i32* %subdirs, align 8, !dbg !3242
  %inc = add nsw i32 %159, 1, !dbg !3242
  store i32 %inc, i32* %subdirs, align 8, !dbg !3242
  br label %if.end213, !dbg !3240

if.end213:                                        ; preds = %if.then212, %land.lhs.true209, %if.end206
  %160 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3243
  %seenRockridge = getelementptr inbounds %struct.iso9660, %struct.iso9660* %160, i32 0, i32 4, !dbg !3245
  %161 = load i8, i8* %seenRockridge, align 8, !dbg !3245
  %tobool214 = icmp ne i8 %161, 0, !dbg !3243
  br i1 %tobool214, label %if.then215, label %if.end350, !dbg !3246

if.then215:                                       ; preds = %if.end213
  %162 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3247
  %cmp216 = icmp ne %struct.file_info* %162, null, !dbg !3250
  br i1 %cmp216, label %land.lhs.true218, label %if.else248, !dbg !3251

land.lhs.true218:                                 ; preds = %if.then215
  %163 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3252
  %parent219 = getelementptr inbounds %struct.file_info, %struct.file_info* %163, i32 0, i32 1, !dbg !3254
  %164 = load %struct.file_info*, %struct.file_info** %parent219, align 8, !dbg !3254
  %cmp220 = icmp eq %struct.file_info* %164, null, !dbg !3255
  br i1 %cmp220, label %land.lhs.true222, label %if.else248, !dbg !3256

land.lhs.true222:                                 ; preds = %land.lhs.true218
  %165 = load i32, i32* %flags, align 4, !dbg !3257
  %and223 = and i32 %165, 2, !dbg !3258
  %tobool224 = icmp ne i32 %and223, 0, !dbg !3258
  br i1 %tobool224, label %land.lhs.true225, label %if.else248, !dbg !3259

land.lhs.true225:                                 ; preds = %land.lhs.true222
  %166 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3260
  %rr_moved = getelementptr inbounds %struct.iso9660, %struct.iso9660* %166, i32 0, i32 8, !dbg !3261
  %167 = load %struct.file_info*, %struct.file_info** %rr_moved, align 8, !dbg !3261
  %cmp226 = icmp eq %struct.file_info* %167, null, !dbg !3262
  br i1 %cmp226, label %land.lhs.true228, label %if.else248, !dbg !3263

land.lhs.true228:                                 ; preds = %land.lhs.true225
  %168 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3264
  %name229 = getelementptr inbounds %struct.file_info, %struct.file_info* %168, i32 0, i32 26, !dbg !3265
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name229, i32 0, i32 0, !dbg !3266
  %169 = load i8*, i8** %s, align 8, !dbg !3266
  %tobool230 = icmp ne i8* %169, null, !dbg !3264
  br i1 %tobool230, label %land.lhs.true231, label %if.else248, !dbg !3267

land.lhs.true231:                                 ; preds = %land.lhs.true228
  %170 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3268
  %name232 = getelementptr inbounds %struct.file_info, %struct.file_info* %170, i32 0, i32 26, !dbg !3269
  %s233 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name232, i32 0, i32 0, !dbg !3270
  %171 = load i8*, i8** %s233, align 8, !dbg !3270
  %call234 = call i32 @strcmp(i8* %171, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0)) #9, !dbg !3271
  %cmp235 = icmp eq i32 %call234, 0, !dbg !3272
  br i1 %cmp235, label %if.then243, label %lor.lhs.false237, !dbg !3273

lor.lhs.false237:                                 ; preds = %land.lhs.true231
  %172 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3274
  %name238 = getelementptr inbounds %struct.file_info, %struct.file_info* %172, i32 0, i32 26, !dbg !3275
  %s239 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name238, i32 0, i32 0, !dbg !3276
  %173 = load i8*, i8** %s239, align 8, !dbg !3276
  %call240 = call i32 @strcmp(i8* %173, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0)) #9, !dbg !3277
  %cmp241 = icmp eq i32 %call240, 0, !dbg !3278
  br i1 %cmp241, label %if.then243, label %if.else248, !dbg !3279

if.then243:                                       ; preds = %lor.lhs.false237, %land.lhs.true231
  %174 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3281
  %175 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3283
  %rr_moved244 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %175, i32 0, i32 8, !dbg !3284
  store %struct.file_info* %174, %struct.file_info** %rr_moved244, align 8, !dbg !3285
  %176 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3286
  %rr_moved245 = getelementptr inbounds %struct.file_info, %struct.file_info* %176, i32 0, i32 10, !dbg !3287
  store i8 1, i8* %rr_moved245, align 8, !dbg !3288
  %177 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3289
  %rr_moved_has_re_only = getelementptr inbounds %struct.file_info, %struct.file_info* %177, i32 0, i32 11, !dbg !3290
  store i8 1, i8* %rr_moved_has_re_only, align 1, !dbg !3291
  %178 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3292
  %re = getelementptr inbounds %struct.file_info, %struct.file_info* %178, i32 0, i32 12, !dbg !3293
  store i8 0, i8* %re, align 2, !dbg !3294
  %179 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3295
  %subdirs246 = getelementptr inbounds %struct.file_info, %struct.file_info* %179, i32 0, i32 4, !dbg !3296
  %180 = load i32, i32* %subdirs246, align 8, !dbg !3297
  %dec247 = add nsw i32 %180, -1, !dbg !3297
  store i32 %dec247, i32* %subdirs246, align 8, !dbg !3297
  br label %if.end299, !dbg !3298

if.else248:                                       ; preds = %lor.lhs.false237, %land.lhs.true228, %land.lhs.true225, %land.lhs.true222, %land.lhs.true218, %if.then215
  %181 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3299
  %re249 = getelementptr inbounds %struct.file_info, %struct.file_info* %181, i32 0, i32 12, !dbg !3302
  %182 = load i8, i8* %re249, align 2, !dbg !3302
  %tobool250 = icmp ne i8 %182, 0, !dbg !3299
  br i1 %tobool250, label %if.then251, label %if.else272, !dbg !3299

if.then251:                                       ; preds = %if.else248
  %183 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3303
  %cmp252 = icmp eq %struct.file_info* %183, null, !dbg !3306
  br i1 %cmp252, label %if.then259, label %lor.lhs.false254, !dbg !3307

lor.lhs.false254:                                 ; preds = %if.then251
  %184 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3308
  %rr_moved255 = getelementptr inbounds %struct.file_info, %struct.file_info* %184, i32 0, i32 10, !dbg !3310
  %185 = load i8, i8* %rr_moved255, align 8, !dbg !3310
  %conv256 = sext i8 %185 to i32, !dbg !3308
  %cmp257 = icmp eq i32 %conv256, 0, !dbg !3311
  br i1 %cmp257, label %if.then259, label %if.end261, !dbg !3312

if.then259:                                       ; preds = %lor.lhs.false254, %if.then251
  %186 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3313
  %archive260 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %186, i32 0, i32 0, !dbg !3315
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive260, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0)), !dbg !3316
  br label %fail, !dbg !3317

if.end261:                                        ; preds = %lor.lhs.false254
  %187 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3318
  %cl_offset = getelementptr inbounds %struct.file_info, %struct.file_info* %187, i32 0, i32 14, !dbg !3320
  %188 = load i64, i64* %cl_offset, align 8, !dbg !3320
  %tobool262 = icmp ne i64 %188, 0, !dbg !3318
  br i1 %tobool262, label %if.then263, label %if.end265, !dbg !3321

if.then263:                                       ; preds = %if.end261
  %189 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3322
  %archive264 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %189, i32 0, i32 0, !dbg !3324
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive264, i32 -1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i32 0, i32 0)), !dbg !3325
  br label %fail, !dbg !3326

if.end265:                                        ; preds = %if.end261
  %190 = load i32, i32* %flags, align 4, !dbg !3327
  %and266 = and i32 %190, 2, !dbg !3329
  %cmp267 = icmp eq i32 %and266, 0, !dbg !3330
  br i1 %cmp267, label %if.then269, label %if.end271, !dbg !3331

if.then269:                                       ; preds = %if.end265
  %191 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3332
  %archive270 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %191, i32 0, i32 0, !dbg !3334
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive270, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0)), !dbg !3335
  br label %fail, !dbg !3336

if.end271:                                        ; preds = %if.end265
  br label %if.end298, !dbg !3337

if.else272:                                       ; preds = %if.else248
  %192 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3338
  %cmp273 = icmp ne %struct.file_info* %192, null, !dbg !3341
  br i1 %cmp273, label %land.lhs.true275, label %if.else281, !dbg !3342

land.lhs.true275:                                 ; preds = %if.else272
  %193 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3343
  %rr_moved276 = getelementptr inbounds %struct.file_info, %struct.file_info* %193, i32 0, i32 10, !dbg !3345
  %194 = load i8, i8* %rr_moved276, align 8, !dbg !3345
  %conv277 = sext i8 %194 to i32, !dbg !3343
  %tobool278 = icmp ne i32 %conv277, 0, !dbg !3343
  br i1 %tobool278, label %if.then279, label %if.else281, !dbg !3346

if.then279:                                       ; preds = %land.lhs.true275
  %195 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3347
  %rr_moved_has_re_only280 = getelementptr inbounds %struct.file_info, %struct.file_info* %195, i32 0, i32 11, !dbg !3348
  store i8 0, i8* %rr_moved_has_re_only280, align 1, !dbg !3349
  br label %if.end297, !dbg !3347

if.else281:                                       ; preds = %land.lhs.true275, %if.else272
  %196 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3350
  %cmp282 = icmp ne %struct.file_info* %196, null, !dbg !3352
  br i1 %cmp282, label %land.lhs.true284, label %if.end296, !dbg !3353

land.lhs.true284:                                 ; preds = %if.else281
  %197 = load i32, i32* %flags, align 4, !dbg !3354
  %and285 = and i32 %197, 2, !dbg !3356
  %tobool286 = icmp ne i32 %and285, 0, !dbg !3356
  br i1 %tobool286, label %land.lhs.true287, label %if.end296, !dbg !3357

land.lhs.true287:                                 ; preds = %land.lhs.true284
  %198 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3358
  %re288 = getelementptr inbounds %struct.file_info, %struct.file_info* %198, i32 0, i32 12, !dbg !3359
  %199 = load i8, i8* %re288, align 2, !dbg !3359
  %conv289 = sext i8 %199 to i32, !dbg !3358
  %tobool290 = icmp ne i32 %conv289, 0, !dbg !3358
  br i1 %tobool290, label %if.then294, label %lor.lhs.false291, !dbg !3360

lor.lhs.false291:                                 ; preds = %land.lhs.true287
  %200 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3361
  %re_descendant = getelementptr inbounds %struct.file_info, %struct.file_info* %200, i32 0, i32 13, !dbg !3362
  %201 = load i8, i8* %re_descendant, align 1, !dbg !3362
  %conv292 = sext i8 %201 to i32, !dbg !3361
  %tobool293 = icmp ne i32 %conv292, 0, !dbg !3361
  br i1 %tobool293, label %if.then294, label %if.end296, !dbg !3363

if.then294:                                       ; preds = %lor.lhs.false291, %land.lhs.true287
  %202 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3364
  %re_descendant295 = getelementptr inbounds %struct.file_info, %struct.file_info* %202, i32 0, i32 13, !dbg !3365
  store i8 1, i8* %re_descendant295, align 1, !dbg !3366
  br label %if.end296, !dbg !3364

if.end296:                                        ; preds = %if.then294, %lor.lhs.false291, %land.lhs.true284, %if.else281
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.then279
  br label %if.end298

if.end298:                                        ; preds = %if.end297, %if.end271
  br label %if.end299

if.end299:                                        ; preds = %if.end298, %if.then243
  %203 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3367
  %cl_offset300 = getelementptr inbounds %struct.file_info, %struct.file_info* %203, i32 0, i32 14, !dbg !3369
  %204 = load i64, i64* %cl_offset300, align 8, !dbg !3369
  %tobool301 = icmp ne i64 %204, 0, !dbg !3367
  br i1 %tobool301, label %if.then302, label %if.end349, !dbg !3370

if.then302:                                       ; preds = %if.end299
  call void @llvm.dbg.declare(metadata %struct.file_info** %r303, metadata !3371, metadata !623), !dbg !3373
  %205 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3374
  %cmp304 = icmp eq %struct.file_info* %205, null, !dbg !3376
  br i1 %cmp304, label %if.then310, label %lor.lhs.false306, !dbg !3377

lor.lhs.false306:                                 ; preds = %if.then302
  %206 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3378
  %parent307 = getelementptr inbounds %struct.file_info, %struct.file_info* %206, i32 0, i32 1, !dbg !3380
  %207 = load %struct.file_info*, %struct.file_info** %parent307, align 8, !dbg !3380
  %cmp308 = icmp eq %struct.file_info* %207, null, !dbg !3381
  br i1 %cmp308, label %if.then310, label %if.end312, !dbg !3382

if.then310:                                       ; preds = %lor.lhs.false306, %if.then302
  %208 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3383
  %archive311 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %208, i32 0, i32 0, !dbg !3385
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive311, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0)), !dbg !3386
  br label %fail, !dbg !3387

if.end312:                                        ; preds = %lor.lhs.false306
  %209 = load i32, i32* %flags, align 4, !dbg !3388
  %and313 = and i32 %209, 2, !dbg !3390
  %cmp314 = icmp ne i32 %and313, 0, !dbg !3391
  br i1 %cmp314, label %if.then316, label %if.end318, !dbg !3392

if.then316:                                       ; preds = %if.end312
  %210 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3393
  %archive317 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %210, i32 0, i32 0, !dbg !3395
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive317, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0)), !dbg !3396
  br label %fail, !dbg !3397

if.end318:                                        ; preds = %if.end312
  %211 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3398
  %subdirs319 = getelementptr inbounds %struct.file_info, %struct.file_info* %211, i32 0, i32 4, !dbg !3399
  %212 = load i32, i32* %subdirs319, align 8, !dbg !3400
  %inc320 = add nsw i32 %212, 1, !dbg !3400
  store i32 %inc320, i32* %subdirs319, align 8, !dbg !3400
  %213 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3401
  %cl_offset321 = getelementptr inbounds %struct.file_info, %struct.file_info* %213, i32 0, i32 14, !dbg !3402
  %214 = load i64, i64* %cl_offset321, align 8, !dbg !3402
  %add322 = add i64 %214, 1, !dbg !3403
  %215 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3404
  %number323 = getelementptr inbounds %struct.file_info, %struct.file_info* %215, i32 0, i32 24, !dbg !3405
  store i64 %add322, i64* %number323, align 8, !dbg !3406
  %216 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3407
  %offset324 = getelementptr inbounds %struct.file_info, %struct.file_info* %216, i32 0, i32 6, !dbg !3408
  store i64 %add322, i64* %offset324, align 8, !dbg !3409
  %217 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3410
  store %struct.file_info* %217, %struct.file_info** %r303, align 8, !dbg !3412
  br label %for.cond325, !dbg !3413

for.cond325:                                      ; preds = %for.inc335, %if.end318
  %218 = load %struct.file_info*, %struct.file_info** %r303, align 8, !dbg !3414
  %tobool326 = icmp ne %struct.file_info* %218, null, !dbg !3417
  br i1 %tobool326, label %for.body327, label %for.end337, !dbg !3417

for.body327:                                      ; preds = %for.cond325
  %219 = load %struct.file_info*, %struct.file_info** %r303, align 8, !dbg !3418
  %offset328 = getelementptr inbounds %struct.file_info, %struct.file_info* %219, i32 0, i32 6, !dbg !3421
  %220 = load i64, i64* %offset328, align 8, !dbg !3421
  %221 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3422
  %cl_offset329 = getelementptr inbounds %struct.file_info, %struct.file_info* %221, i32 0, i32 14, !dbg !3423
  %222 = load i64, i64* %cl_offset329, align 8, !dbg !3423
  %cmp330 = icmp eq i64 %220, %222, !dbg !3424
  br i1 %cmp330, label %if.then332, label %if.end334, !dbg !3425

if.then332:                                       ; preds = %for.body327
  %223 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3426
  %archive333 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %223, i32 0, i32 0, !dbg !3428
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive333, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0)), !dbg !3429
  br label %fail, !dbg !3430

if.end334:                                        ; preds = %for.body327
  br label %for.inc335, !dbg !3431

for.inc335:                                       ; preds = %if.end334
  %224 = load %struct.file_info*, %struct.file_info** %r303, align 8, !dbg !3432
  %parent336 = getelementptr inbounds %struct.file_info, %struct.file_info* %224, i32 0, i32 1, !dbg !3434
  %225 = load %struct.file_info*, %struct.file_info** %parent336, align 8, !dbg !3434
  store %struct.file_info* %225, %struct.file_info** %r303, align 8, !dbg !3435
  br label %for.cond325, !dbg !3436

for.end337:                                       ; preds = %for.cond325
  %226 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3437
  %cl_offset338 = getelementptr inbounds %struct.file_info, %struct.file_info* %226, i32 0, i32 14, !dbg !3439
  %227 = load i64, i64* %cl_offset338, align 8, !dbg !3439
  %228 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3440
  %offset339 = getelementptr inbounds %struct.file_info, %struct.file_info* %228, i32 0, i32 6, !dbg !3441
  %229 = load i64, i64* %offset339, align 8, !dbg !3441
  %cmp340 = icmp eq i64 %227, %229, !dbg !3442
  br i1 %cmp340, label %if.then346, label %lor.lhs.false342, !dbg !3443

lor.lhs.false342:                                 ; preds = %for.end337
  %230 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !3444
  %rr_moved343 = getelementptr inbounds %struct.file_info, %struct.file_info* %230, i32 0, i32 10, !dbg !3445
  %231 = load i8, i8* %rr_moved343, align 8, !dbg !3445
  %conv344 = sext i8 %231 to i32, !dbg !3444
  %tobool345 = icmp ne i32 %conv344, 0, !dbg !3444
  br i1 %tobool345, label %if.then346, label %if.end348, !dbg !3446

if.then346:                                       ; preds = %lor.lhs.false342, %for.end337
  %232 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3448
  %archive347 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %232, i32 0, i32 0, !dbg !3450
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive347, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0)), !dbg !3451
  br label %fail, !dbg !3452

if.end348:                                        ; preds = %lor.lhs.false342
  br label %if.end349, !dbg !3453

if.end349:                                        ; preds = %if.end348, %if.end299
  br label %if.end350, !dbg !3454

if.end350:                                        ; preds = %if.end349, %if.end213
  %233 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3455
  %234 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3456
  call void @register_file(%struct.iso9660* %233, %struct.file_info* %234), !dbg !3457
  %235 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3458
  store %struct.file_info* %235, %struct.file_info** %retval, align 8, !dbg !3459
  br label %return, !dbg !3459

fail:                                             ; preds = %if.then346, %if.then332, %if.then316, %if.then310, %if.then269, %if.then263, %if.then259, %if.then188, %if.then102
  %236 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3460
  %name351 = getelementptr inbounds %struct.file_info, %struct.file_info* %236, i32 0, i32 26, !dbg !3461
  call void @archive_string_free(%struct.archive_string* %name351), !dbg !3462
  %237 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !3463
  %238 = bitcast %struct.file_info* %237 to i8*, !dbg !3463
  call void @free(i8* %238) #8, !dbg !3464
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !3465
  br label %return, !dbg !3465

return:                                           ; preds = %fail, %if.end350, %if.then48, %if.then41, %if.then31, %if.then23, %if.then11, %if.then
  %239 = load %struct.file_info*, %struct.file_info** %retval, align 8, !dbg !3466
  ret %struct.file_info* %239, !dbg !3466
}

; Function Attrs: nounwind uwtable
define internal i32 @heap_add_entry(%struct.archive_read* %a, %struct.heap_queue* %heap, %struct.file_info* %file, i64 %key) #0 !dbg !569 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %heap.addr = alloca %struct.heap_queue*, align 8
  %file.addr = alloca %struct.file_info*, align 8
  %key.addr = alloca i64, align 8
  %file_key = alloca i64, align 8
  %parent_key = alloca i64, align 8
  %hole = alloca i32, align 4
  %parent = alloca i32, align 4
  %new_pending_files = alloca %struct.file_info**, align 8
  %new_size = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3467, metadata !623), !dbg !3468
  store %struct.heap_queue* %heap, %struct.heap_queue** %heap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.heap_queue** %heap.addr, metadata !3469, metadata !623), !dbg !3470
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !3471, metadata !623), !dbg !3472
  store i64 %key, i64* %key.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %key.addr, metadata !3473, metadata !623), !dbg !3474
  call void @llvm.dbg.declare(metadata i64* %file_key, metadata !3475, metadata !623), !dbg !3476
  call void @llvm.dbg.declare(metadata i64* %parent_key, metadata !3477, metadata !623), !dbg !3478
  call void @llvm.dbg.declare(metadata i32* %hole, metadata !3479, metadata !623), !dbg !3480
  call void @llvm.dbg.declare(metadata i32* %parent, metadata !3481, metadata !623), !dbg !3482
  %0 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3483
  %used = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %0, i32 0, i32 2, !dbg !3485
  %1 = load i32, i32* %used, align 4, !dbg !3485
  %2 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3486
  %allocated = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %2, i32 0, i32 1, !dbg !3487
  %3 = load i32, i32* %allocated, align 8, !dbg !3487
  %cmp = icmp sge i32 %1, %3, !dbg !3488
  br i1 %cmp, label %if.then, label %if.end26, !dbg !3489

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.file_info*** %new_pending_files, metadata !3490, metadata !623), !dbg !3492
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !3493, metadata !623), !dbg !3494
  %4 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3495
  %allocated1 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %4, i32 0, i32 1, !dbg !3496
  %5 = load i32, i32* %allocated1, align 8, !dbg !3496
  %mul = mul nsw i32 %5, 2, !dbg !3497
  store i32 %mul, i32* %new_size, align 4, !dbg !3494
  %6 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3498
  %allocated2 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %6, i32 0, i32 1, !dbg !3500
  %7 = load i32, i32* %allocated2, align 8, !dbg !3500
  %cmp3 = icmp slt i32 %7, 1024, !dbg !3501
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !3502

if.then4:                                         ; preds = %if.then
  store i32 1024, i32* %new_size, align 4, !dbg !3503
  br label %if.end, !dbg !3504

if.end:                                           ; preds = %if.then4, %if.then
  %8 = load i32, i32* %new_size, align 4, !dbg !3505
  %9 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3507
  %allocated5 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %9, i32 0, i32 1, !dbg !3508
  %10 = load i32, i32* %allocated5, align 8, !dbg !3508
  %cmp6 = icmp sle i32 %8, %10, !dbg !3509
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3510

if.then7:                                         ; preds = %if.end
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3511
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %11, i32 0, i32 0, !dbg !3513
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0)), !dbg !3514
  store i32 -30, i32* %retval, align 4, !dbg !3515
  br label %return, !dbg !3515

if.end8:                                          ; preds = %if.end
  %12 = load i32, i32* %new_size, align 4, !dbg !3516
  %conv = sext i32 %12 to i64, !dbg !3516
  %mul9 = mul i64 %conv, 8, !dbg !3517
  %call = call noalias i8* @malloc(i64 %mul9) #8, !dbg !3518
  %13 = bitcast i8* %call to %struct.file_info**, !dbg !3519
  store %struct.file_info** %13, %struct.file_info*** %new_pending_files, align 8, !dbg !3520
  %14 = load %struct.file_info**, %struct.file_info*** %new_pending_files, align 8, !dbg !3521
  %cmp10 = icmp eq %struct.file_info** %14, null, !dbg !3523
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !3524

if.then12:                                        ; preds = %if.end8
  %15 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3525
  %archive13 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %15, i32 0, i32 0, !dbg !3527
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive13, i32 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0)), !dbg !3528
  store i32 -30, i32* %retval, align 4, !dbg !3529
  br label %return, !dbg !3529

if.end14:                                         ; preds = %if.end8
  %16 = load %struct.file_info**, %struct.file_info*** %new_pending_files, align 8, !dbg !3530
  %17 = bitcast %struct.file_info** %16 to i8*, !dbg !3531
  %18 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3532
  %files = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %18, i32 0, i32 0, !dbg !3533
  %19 = load %struct.file_info**, %struct.file_info*** %files, align 8, !dbg !3533
  %20 = bitcast %struct.file_info** %19 to i8*, !dbg !3531
  %21 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3534
  %allocated15 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %21, i32 0, i32 1, !dbg !3535
  %22 = load i32, i32* %allocated15, align 8, !dbg !3535
  %conv16 = sext i32 %22 to i64, !dbg !3534
  %mul17 = mul i64 %conv16, 8, !dbg !3536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %20, i64 %mul17, i32 8, i1 false), !dbg !3531
  %23 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3537
  %files18 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %23, i32 0, i32 0, !dbg !3539
  %24 = load %struct.file_info**, %struct.file_info*** %files18, align 8, !dbg !3539
  %cmp19 = icmp ne %struct.file_info** %24, null, !dbg !3540
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !3541

if.then21:                                        ; preds = %if.end14
  %25 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3542
  %files22 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %25, i32 0, i32 0, !dbg !3543
  %26 = load %struct.file_info**, %struct.file_info*** %files22, align 8, !dbg !3543
  %27 = bitcast %struct.file_info** %26 to i8*, !dbg !3542
  call void @free(i8* %27) #8, !dbg !3544
  br label %if.end23, !dbg !3544

if.end23:                                         ; preds = %if.then21, %if.end14
  %28 = load %struct.file_info**, %struct.file_info*** %new_pending_files, align 8, !dbg !3545
  %29 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3546
  %files24 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %29, i32 0, i32 0, !dbg !3547
  store %struct.file_info** %28, %struct.file_info*** %files24, align 8, !dbg !3548
  %30 = load i32, i32* %new_size, align 4, !dbg !3549
  %31 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3550
  %allocated25 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %31, i32 0, i32 1, !dbg !3551
  store i32 %30, i32* %allocated25, align 8, !dbg !3552
  br label %if.end26, !dbg !3553

if.end26:                                         ; preds = %if.end23, %entry
  %32 = load i64, i64* %key.addr, align 8, !dbg !3554
  %33 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3555
  %key27 = getelementptr inbounds %struct.file_info, %struct.file_info* %33, i32 0, i32 5, !dbg !3556
  store i64 %32, i64* %key27, align 8, !dbg !3557
  store i64 %32, i64* %file_key, align 8, !dbg !3558
  %34 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3559
  %used28 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %34, i32 0, i32 2, !dbg !3560
  %35 = load i32, i32* %used28, align 4, !dbg !3561
  %inc = add nsw i32 %35, 1, !dbg !3561
  store i32 %inc, i32* %used28, align 4, !dbg !3561
  store i32 %35, i32* %hole, align 4, !dbg !3562
  br label %while.cond, !dbg !3563

while.cond:                                       ; preds = %if.end39, %if.end26
  %36 = load i32, i32* %hole, align 4, !dbg !3564
  %cmp29 = icmp sgt i32 %36, 0, !dbg !3566
  br i1 %cmp29, label %while.body, label %while.end, !dbg !3567

while.body:                                       ; preds = %while.cond
  %37 = load i32, i32* %hole, align 4, !dbg !3568
  %sub = sub nsw i32 %37, 1, !dbg !3570
  %div = sdiv i32 %sub, 2, !dbg !3571
  store i32 %div, i32* %parent, align 4, !dbg !3572
  %38 = load i32, i32* %parent, align 4, !dbg !3573
  %idxprom = sext i32 %38 to i64, !dbg !3574
  %39 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3574
  %files31 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %39, i32 0, i32 0, !dbg !3575
  %40 = load %struct.file_info**, %struct.file_info*** %files31, align 8, !dbg !3575
  %arrayidx = getelementptr inbounds %struct.file_info*, %struct.file_info** %40, i64 %idxprom, !dbg !3574
  %41 = load %struct.file_info*, %struct.file_info** %arrayidx, align 8, !dbg !3574
  %key32 = getelementptr inbounds %struct.file_info, %struct.file_info* %41, i32 0, i32 5, !dbg !3576
  %42 = load i64, i64* %key32, align 8, !dbg !3576
  store i64 %42, i64* %parent_key, align 8, !dbg !3577
  %43 = load i64, i64* %file_key, align 8, !dbg !3578
  %44 = load i64, i64* %parent_key, align 8, !dbg !3580
  %cmp33 = icmp uge i64 %43, %44, !dbg !3581
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !3582

if.then35:                                        ; preds = %while.body
  %45 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3583
  %46 = load i32, i32* %hole, align 4, !dbg !3585
  %idxprom36 = sext i32 %46 to i64, !dbg !3586
  %47 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3586
  %files37 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %47, i32 0, i32 0, !dbg !3587
  %48 = load %struct.file_info**, %struct.file_info*** %files37, align 8, !dbg !3587
  %arrayidx38 = getelementptr inbounds %struct.file_info*, %struct.file_info** %48, i64 %idxprom36, !dbg !3586
  store %struct.file_info* %45, %struct.file_info** %arrayidx38, align 8, !dbg !3588
  store i32 0, i32* %retval, align 4, !dbg !3589
  br label %return, !dbg !3589

if.end39:                                         ; preds = %while.body
  %49 = load i32, i32* %parent, align 4, !dbg !3590
  %idxprom40 = sext i32 %49 to i64, !dbg !3591
  %50 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3591
  %files41 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %50, i32 0, i32 0, !dbg !3592
  %51 = load %struct.file_info**, %struct.file_info*** %files41, align 8, !dbg !3592
  %arrayidx42 = getelementptr inbounds %struct.file_info*, %struct.file_info** %51, i64 %idxprom40, !dbg !3591
  %52 = load %struct.file_info*, %struct.file_info** %arrayidx42, align 8, !dbg !3591
  %53 = load i32, i32* %hole, align 4, !dbg !3593
  %idxprom43 = sext i32 %53 to i64, !dbg !3594
  %54 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3594
  %files44 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %54, i32 0, i32 0, !dbg !3595
  %55 = load %struct.file_info**, %struct.file_info*** %files44, align 8, !dbg !3595
  %arrayidx45 = getelementptr inbounds %struct.file_info*, %struct.file_info** %55, i64 %idxprom43, !dbg !3594
  store %struct.file_info* %52, %struct.file_info** %arrayidx45, align 8, !dbg !3596
  %56 = load i32, i32* %parent, align 4, !dbg !3597
  store i32 %56, i32* %hole, align 4, !dbg !3598
  br label %while.cond, !dbg !3599

while.end:                                        ; preds = %while.cond
  %57 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3601
  %58 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !3602
  %files46 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %58, i32 0, i32 0, !dbg !3603
  %59 = load %struct.file_info**, %struct.file_info*** %files46, align 8, !dbg !3603
  %arrayidx47 = getelementptr inbounds %struct.file_info*, %struct.file_info** %59, i64 0, !dbg !3602
  store %struct.file_info* %57, %struct.file_info** %arrayidx47, align 8, !dbg !3604
  store i32 0, i32* %retval, align 4, !dbg !3605
  br label %return, !dbg !3605

return:                                           ; preds = %while.end, %if.then35, %if.then12, %if.then7
  %60 = load i32, i32* %retval, align 4, !dbg !3606
  ret i32 %60, !dbg !3606
}

; Function Attrs: nounwind uwtable
define internal i32 @toi(i8* %p, i32 %n) #0 !dbg !530 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %v = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3607, metadata !623), !dbg !3608
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3609, metadata !623), !dbg !3610
  call void @llvm.dbg.declare(metadata i8** %v, metadata !3611, metadata !623), !dbg !3612
  %0 = load i8*, i8** %p.addr, align 8, !dbg !3613
  store i8* %0, i8** %v, align 8, !dbg !3612
  %1 = load i32, i32* %n.addr, align 4, !dbg !3614
  %cmp = icmp sgt i32 %1, 1, !dbg !3616
  br i1 %cmp, label %if.then, label %if.end, !dbg !3617

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %v, align 8, !dbg !3618
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !3618
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3618
  %conv = zext i8 %3 to i32, !dbg !3618
  %4 = load i8*, i8** %v, align 8, !dbg !3619
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !3620
  %5 = load i32, i32* %n.addr, align 4, !dbg !3621
  %sub = sub nsw i32 %5, 1, !dbg !3622
  %call = call i32 @toi(i8* %add.ptr, i32 %sub), !dbg !3623
  %mul = mul i32 256, %call, !dbg !3624
  %add = add i32 %conv, %mul, !dbg !3625
  store i32 %add, i32* %retval, align 4, !dbg !3626
  br label %return, !dbg !3626

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %n.addr, align 4, !dbg !3627
  %cmp1 = icmp eq i32 %6, 1, !dbg !3629
  br i1 %cmp1, label %if.then3, label %if.end6, !dbg !3630

if.then3:                                         ; preds = %if.end
  %7 = load i8*, i8** %v, align 8, !dbg !3631
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !3631
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !3631
  %conv5 = zext i8 %8 to i32, !dbg !3631
  store i32 %conv5, i32* %retval, align 4, !dbg !3632
  br label %return, !dbg !3632

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3633
  br label %return, !dbg !3633

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3634
  ret i32 %9, !dbg !3634
}

; Function Attrs: nounwind uwtable
define internal i64 @isodate7(i8* %v) #0 !dbg !533 {
entry:
  %retval = alloca i64, align 8
  %v.addr = alloca i8*, align 8
  %tm = alloca %struct.tm, align 8
  %offset = alloca i32, align 4
  %t = alloca i64, align 8
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !3635, metadata !623), !dbg !3636
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !3637, metadata !623), !dbg !3638
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3639, metadata !623), !dbg !3640
  call void @llvm.dbg.declare(metadata i64* %t, metadata !3641, metadata !623), !dbg !3642
  %0 = bitcast %struct.tm* %tm to i8*, !dbg !3643
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 56, i32 8, i1 false), !dbg !3643
  %1 = load i8*, i8** %v.addr, align 8, !dbg !3644
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3644
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3644
  %conv = zext i8 %2 to i32, !dbg !3644
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !3645
  store i32 %conv, i32* %tm_year, align 4, !dbg !3646
  %3 = load i8*, i8** %v.addr, align 8, !dbg !3647
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !3647
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !3647
  %conv2 = zext i8 %4 to i32, !dbg !3647
  %sub = sub nsw i32 %conv2, 1, !dbg !3648
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !3649
  store i32 %sub, i32* %tm_mon, align 8, !dbg !3650
  %5 = load i8*, i8** %v.addr, align 8, !dbg !3651
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 2, !dbg !3651
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !3651
  %conv4 = zext i8 %6 to i32, !dbg !3651
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3, !dbg !3652
  store i32 %conv4, i32* %tm_mday, align 4, !dbg !3653
  %7 = load i8*, i8** %v.addr, align 8, !dbg !3654
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 3, !dbg !3654
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !3654
  %conv6 = zext i8 %8 to i32, !dbg !3654
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !3655
  store i32 %conv6, i32* %tm_hour, align 8, !dbg !3656
  %9 = load i8*, i8** %v.addr, align 8, !dbg !3657
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !3657
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !3657
  %conv8 = zext i8 %10 to i32, !dbg !3657
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !3658
  store i32 %conv8, i32* %tm_min, align 4, !dbg !3659
  %11 = load i8*, i8** %v.addr, align 8, !dbg !3660
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 5, !dbg !3660
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !3660
  %conv10 = zext i8 %12 to i32, !dbg !3660
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0, !dbg !3661
  store i32 %conv10, i32* %tm_sec, align 8, !dbg !3662
  %13 = load i8*, i8** %v.addr, align 8, !dbg !3663
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 6, !dbg !3664
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !3664
  %conv12 = sext i8 %14 to i32, !dbg !3664
  store i32 %conv12, i32* %offset, align 4, !dbg !3665
  %15 = load i32, i32* %offset, align 4, !dbg !3666
  %cmp = icmp sgt i32 %15, -48, !dbg !3668
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3669

land.lhs.true:                                    ; preds = %entry
  %16 = load i32, i32* %offset, align 4, !dbg !3670
  %cmp14 = icmp slt i32 %16, 52, !dbg !3672
  br i1 %cmp14, label %if.then, label %if.end, !dbg !3673

if.then:                                          ; preds = %land.lhs.true
  %17 = load i32, i32* %offset, align 4, !dbg !3674
  %div = sdiv i32 %17, 4, !dbg !3676
  %tm_hour16 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !3677
  %18 = load i32, i32* %tm_hour16, align 8, !dbg !3678
  %sub17 = sub nsw i32 %18, %div, !dbg !3678
  store i32 %sub17, i32* %tm_hour16, align 8, !dbg !3678
  %19 = load i32, i32* %offset, align 4, !dbg !3679
  %rem = srem i32 %19, 4, !dbg !3680
  %mul = mul nsw i32 %rem, 15, !dbg !3681
  %tm_min18 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !3682
  %20 = load i32, i32* %tm_min18, align 4, !dbg !3683
  %sub19 = sub nsw i32 %20, %mul, !dbg !3683
  store i32 %sub19, i32* %tm_min18, align 4, !dbg !3683
  br label %if.end, !dbg !3684

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call = call i64 @time_from_tm(%struct.tm* %tm), !dbg !3685
  store i64 %call, i64* %t, align 8, !dbg !3686
  %21 = load i64, i64* %t, align 8, !dbg !3687
  %cmp20 = icmp eq i64 %21, -1, !dbg !3689
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !3690

if.then22:                                        ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !3691
  br label %return, !dbg !3691

if.end23:                                         ; preds = %if.end
  %22 = load i64, i64* %t, align 8, !dbg !3692
  store i64 %22, i64* %retval, align 8, !dbg !3693
  br label %return, !dbg !3693

return:                                           ; preds = %if.end23, %if.then22
  %23 = load i64, i64* %retval, align 8, !dbg !3694
  ret i64 %23, !dbg !3694
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_rockridge(%struct.archive_read* %a, %struct.file_info* %file, i8* %p, i8* %end) #0 !dbg !553 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %file.addr = alloca %struct.file_info*, align 8
  %p.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %data28 = alloca i8*, align 8
  %data_length = alloca i32, align 4
  %version = alloca i32, align 4
  %location = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !3695, metadata !623), !dbg !3696
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !3697, metadata !623), !dbg !3698
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3699, metadata !623), !dbg !3700
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3701, metadata !623), !dbg !3702
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !3703, metadata !623), !dbg !3704
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3705
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !3706
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !3706
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !3707
  %2 = load i8*, i8** %data, align 8, !dbg !3707
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !3708
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !3709
  br label %while.cond, !dbg !3710

while.cond:                                       ; preds = %sw.epilog, %entry
  %4 = load i8*, i8** %p.addr, align 8, !dbg !3711
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 4, !dbg !3713
  %5 = load i8*, i8** %end.addr, align 8, !dbg !3714
  %cmp = icmp ule i8* %add.ptr, %5, !dbg !3715
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !3716

land.lhs.true:                                    ; preds = %while.cond
  %6 = load i8*, i8** %p.addr, align 8, !dbg !3717
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !3717
  %7 = load i8, i8* %arrayidx, align 1, !dbg !3717
  %conv = zext i8 %7 to i32, !dbg !3717
  %cmp1 = icmp sge i32 %conv, 65, !dbg !3718
  br i1 %cmp1, label %land.lhs.true3, label %land.end, !dbg !3719

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load i8*, i8** %p.addr, align 8, !dbg !3720
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !3720
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !3720
  %conv5 = zext i8 %9 to i32, !dbg !3720
  %cmp6 = icmp sle i32 %conv5, 90, !dbg !3722
  br i1 %cmp6, label %land.lhs.true8, label %land.end, !dbg !3723

land.lhs.true8:                                   ; preds = %land.lhs.true3
  %10 = load i8*, i8** %p.addr, align 8, !dbg !3724
  %arrayidx9 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !3724
  %11 = load i8, i8* %arrayidx9, align 1, !dbg !3724
  %conv10 = zext i8 %11 to i32, !dbg !3724
  %cmp11 = icmp sge i32 %conv10, 65, !dbg !3725
  br i1 %cmp11, label %land.lhs.true13, label %land.end, !dbg !3726

land.lhs.true13:                                  ; preds = %land.lhs.true8
  %12 = load i8*, i8** %p.addr, align 8, !dbg !3727
  %arrayidx14 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !3727
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !3727
  %conv15 = zext i8 %13 to i32, !dbg !3727
  %cmp16 = icmp sle i32 %conv15, 90, !dbg !3728
  br i1 %cmp16, label %land.lhs.true18, label %land.end, !dbg !3729

land.lhs.true18:                                  ; preds = %land.lhs.true13
  %14 = load i8*, i8** %p.addr, align 8, !dbg !3730
  %arrayidx19 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !3730
  %15 = load i8, i8* %arrayidx19, align 1, !dbg !3730
  %conv20 = zext i8 %15 to i32, !dbg !3730
  %cmp21 = icmp sge i32 %conv20, 4, !dbg !3731
  br i1 %cmp21, label %land.rhs, label %land.end, !dbg !3732

land.rhs:                                         ; preds = %land.lhs.true18
  %16 = load i8*, i8** %p.addr, align 8, !dbg !3733
  %17 = load i8*, i8** %p.addr, align 8, !dbg !3734
  %arrayidx23 = getelementptr inbounds i8, i8* %17, i64 2, !dbg !3734
  %18 = load i8, i8* %arrayidx23, align 1, !dbg !3734
  %conv24 = zext i8 %18 to i32, !dbg !3734
  %idx.ext = sext i32 %conv24 to i64, !dbg !3735
  %add.ptr25 = getelementptr inbounds i8, i8* %16, i64 %idx.ext, !dbg !3735
  %19 = load i8*, i8** %end.addr, align 8, !dbg !3736
  %cmp26 = icmp ule i8* %add.ptr25, %19, !dbg !3737
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true18, %land.lhs.true13, %land.lhs.true8, %land.lhs.true3, %land.lhs.true, %while.cond
  %20 = phi i1 [ false, %land.lhs.true18 ], [ false, %land.lhs.true13 ], [ false, %land.lhs.true8 ], [ false, %land.lhs.true3 ], [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp26, %land.rhs ]
  br i1 %20, label %while.body, label %while.end, !dbg !3738

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %data28, metadata !3739, metadata !623), !dbg !3741
  %21 = load i8*, i8** %p.addr, align 8, !dbg !3742
  %add.ptr29 = getelementptr inbounds i8, i8* %21, i64 4, !dbg !3743
  store i8* %add.ptr29, i8** %data28, align 8, !dbg !3741
  call void @llvm.dbg.declare(metadata i32* %data_length, metadata !3744, metadata !623), !dbg !3745
  %22 = load i8*, i8** %p.addr, align 8, !dbg !3746
  %arrayidx30 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !3746
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !3746
  %conv31 = zext i8 %23 to i32, !dbg !3746
  %sub = sub nsw i32 %conv31, 4, !dbg !3747
  store i32 %sub, i32* %data_length, align 4, !dbg !3745
  call void @llvm.dbg.declare(metadata i32* %version, metadata !3748, metadata !623), !dbg !3749
  %24 = load i8*, i8** %p.addr, align 8, !dbg !3750
  %arrayidx32 = getelementptr inbounds i8, i8* %24, i64 3, !dbg !3750
  %25 = load i8, i8* %arrayidx32, align 1, !dbg !3750
  %conv33 = zext i8 %25 to i32, !dbg !3750
  store i32 %conv33, i32* %version, align 4, !dbg !3749
  %26 = load i8*, i8** %p.addr, align 8, !dbg !3751
  %arrayidx34 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !3751
  %27 = load i8, i8* %arrayidx34, align 1, !dbg !3751
  %conv35 = zext i8 %27 to i32, !dbg !3751
  switch i32 %conv35, label %sw.default [
    i32 67, label %sw.bb
    i32 78, label %sw.bb71
    i32 80, label %sw.bb83
    i32 82, label %sw.bb147
    i32 83, label %sw.bb168
    i32 84, label %sw.bb194
    i32 90, label %sw.bb206
  ], !dbg !3752

sw.bb:                                            ; preds = %while.body
  %28 = load i8*, i8** %p.addr, align 8, !dbg !3753
  %arrayidx36 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !3753
  %29 = load i8, i8* %arrayidx36, align 1, !dbg !3753
  %conv37 = zext i8 %29 to i32, !dbg !3753
  %cmp38 = icmp eq i32 %conv37, 69, !dbg !3756
  br i1 %cmp38, label %if.then, label %if.else, !dbg !3757

if.then:                                          ; preds = %sw.bb
  %30 = load i32, i32* %version, align 4, !dbg !3758
  %cmp40 = icmp eq i32 %30, 1, !dbg !3761
  br i1 %cmp40, label %land.lhs.true42, label %if.end54, !dbg !3762

land.lhs.true42:                                  ; preds = %if.then
  %31 = load i32, i32* %data_length, align 4, !dbg !3763
  %cmp43 = icmp eq i32 %31, 24, !dbg !3765
  br i1 %cmp43, label %if.then45, label %if.end54, !dbg !3766

if.then45:                                        ; preds = %land.lhs.true42
  call void @llvm.dbg.declare(metadata i32* %location, metadata !3767, metadata !623), !dbg !3769
  %32 = load i8*, i8** %data28, align 8, !dbg !3770
  %call = call i32 @archive_le32dec(i8* %32), !dbg !3771
  store i32 %call, i32* %location, align 4, !dbg !3769
  %33 = load i8*, i8** %data28, align 8, !dbg !3772
  %add.ptr46 = getelementptr inbounds i8, i8* %33, i64 8, !dbg !3773
  %call47 = call i32 @archive_le32dec(i8* %add.ptr46), !dbg !3774
  %34 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3775
  %ce_offset = getelementptr inbounds %struct.file_info, %struct.file_info* %34, i32 0, i32 8, !dbg !3776
  store i32 %call47, i32* %ce_offset, align 8, !dbg !3777
  %35 = load i8*, i8** %data28, align 8, !dbg !3778
  %add.ptr48 = getelementptr inbounds i8, i8* %35, i64 16, !dbg !3779
  %call49 = call i32 @archive_le32dec(i8* %add.ptr48), !dbg !3780
  %36 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3781
  %ce_size = getelementptr inbounds %struct.file_info, %struct.file_info* %36, i32 0, i32 9, !dbg !3782
  store i32 %call49, i32* %ce_size, align 4, !dbg !3783
  %37 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !3784
  %38 = load i32, i32* %location, align 4, !dbg !3786
  %39 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3787
  %call50 = call i32 @register_CE(%struct.archive_read* %37, i32 %38, %struct.file_info* %39), !dbg !3788
  %cmp51 = icmp ne i32 %call50, 0, !dbg !3789
  br i1 %cmp51, label %if.then53, label %if.end, !dbg !3790

if.then53:                                        ; preds = %if.then45
  store i32 -30, i32* %retval, align 4, !dbg !3791
  br label %return, !dbg !3791

if.end:                                           ; preds = %if.then45
  br label %if.end54, !dbg !3792

if.end54:                                         ; preds = %if.end, %land.lhs.true42, %if.then
  br label %if.end70, !dbg !3793

if.else:                                          ; preds = %sw.bb
  %40 = load i8*, i8** %p.addr, align 8, !dbg !3794
  %arrayidx55 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !3794
  %41 = load i8, i8* %arrayidx55, align 1, !dbg !3794
  %conv56 = zext i8 %41 to i32, !dbg !3794
  %cmp57 = icmp eq i32 %conv56, 76, !dbg !3796
  br i1 %cmp57, label %if.then59, label %if.end69, !dbg !3797

if.then59:                                        ; preds = %if.else
  %42 = load i32, i32* %version, align 4, !dbg !3798
  %cmp60 = icmp eq i32 %42, 1, !dbg !3801
  br i1 %cmp60, label %land.lhs.true62, label %if.end68, !dbg !3802

land.lhs.true62:                                  ; preds = %if.then59
  %43 = load i32, i32* %data_length, align 4, !dbg !3803
  %cmp63 = icmp eq i32 %43, 8, !dbg !3805
  br i1 %cmp63, label %if.then65, label %if.end68, !dbg !3806

if.then65:                                        ; preds = %land.lhs.true62
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3807
  %logical_block_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 17, !dbg !3809
  %45 = load i64, i64* %logical_block_size, align 8, !dbg !3809
  %46 = load i8*, i8** %data28, align 8, !dbg !3810
  %call66 = call i32 @archive_le32dec(i8* %46), !dbg !3811
  %conv67 = zext i32 %call66 to i64, !dbg !3812
  %mul = mul i64 %45, %conv67, !dbg !3813
  %47 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3814
  %cl_offset = getelementptr inbounds %struct.file_info, %struct.file_info* %47, i32 0, i32 14, !dbg !3815
  store i64 %mul, i64* %cl_offset, align 8, !dbg !3816
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3817
  %seenRockridge = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 4, !dbg !3818
  store i8 1, i8* %seenRockridge, align 8, !dbg !3819
  br label %if.end68, !dbg !3820

if.end68:                                         ; preds = %if.then65, %land.lhs.true62, %if.then59
  br label %if.end69, !dbg !3821

if.end69:                                         ; preds = %if.end68, %if.else
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end54
  br label %sw.epilog, !dbg !3822

sw.bb71:                                          ; preds = %while.body
  %49 = load i8*, i8** %p.addr, align 8, !dbg !3823
  %arrayidx72 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !3823
  %50 = load i8, i8* %arrayidx72, align 1, !dbg !3823
  %conv73 = zext i8 %50 to i32, !dbg !3823
  %cmp74 = icmp eq i32 %conv73, 77, !dbg !3825
  br i1 %cmp74, label %if.then76, label %if.end82, !dbg !3826

if.then76:                                        ; preds = %sw.bb71
  %51 = load i32, i32* %version, align 4, !dbg !3827
  %cmp77 = icmp eq i32 %51, 1, !dbg !3830
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !3831

if.then79:                                        ; preds = %if.then76
  %52 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3832
  %53 = load i8*, i8** %data28, align 8, !dbg !3834
  %54 = load i32, i32* %data_length, align 4, !dbg !3835
  call void @parse_rockridge_NM1(%struct.file_info* %52, i8* %53, i32 %54), !dbg !3836
  %55 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3837
  %seenRockridge80 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %55, i32 0, i32 4, !dbg !3838
  store i8 1, i8* %seenRockridge80, align 8, !dbg !3839
  br label %if.end81, !dbg !3840

if.end81:                                         ; preds = %if.then79, %if.then76
  br label %if.end82, !dbg !3841

if.end82:                                         ; preds = %if.end81, %sw.bb71
  br label %sw.epilog, !dbg !3842

sw.bb83:                                          ; preds = %while.body
  %56 = load i8*, i8** %p.addr, align 8, !dbg !3843
  %arrayidx84 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !3843
  %57 = load i8, i8* %arrayidx84, align 1, !dbg !3843
  %conv85 = zext i8 %57 to i32, !dbg !3843
  %cmp86 = icmp eq i32 %conv85, 78, !dbg !3845
  br i1 %cmp86, label %if.then88, label %if.else104, !dbg !3846

if.then88:                                        ; preds = %sw.bb83
  %58 = load i32, i32* %version, align 4, !dbg !3847
  %cmp89 = icmp eq i32 %58, 1, !dbg !3850
  br i1 %cmp89, label %land.lhs.true91, label %if.end103, !dbg !3851

land.lhs.true91:                                  ; preds = %if.then88
  %59 = load i32, i32* %data_length, align 4, !dbg !3852
  %cmp92 = icmp eq i32 %59, 16, !dbg !3854
  br i1 %cmp92, label %if.then94, label %if.end103, !dbg !3855

if.then94:                                        ; preds = %land.lhs.true91
  %60 = load i8*, i8** %data28, align 8, !dbg !3856
  %call95 = call i32 @toi(i8* %60, i32 4), !dbg !3858
  %conv96 = zext i32 %call95 to i64, !dbg !3858
  %61 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3859
  %rdev = getelementptr inbounds %struct.file_info, %struct.file_info* %61, i32 0, i32 20, !dbg !3860
  store i64 %conv96, i64* %rdev, align 8, !dbg !3861
  %62 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3862
  %rdev97 = getelementptr inbounds %struct.file_info, %struct.file_info* %62, i32 0, i32 20, !dbg !3863
  %63 = load i64, i64* %rdev97, align 8, !dbg !3864
  %shl = shl i64 %63, 32, !dbg !3864
  store i64 %shl, i64* %rdev97, align 8, !dbg !3864
  %64 = load i8*, i8** %data28, align 8, !dbg !3865
  %add.ptr98 = getelementptr inbounds i8, i8* %64, i64 8, !dbg !3866
  %call99 = call i32 @toi(i8* %add.ptr98, i32 4), !dbg !3867
  %conv100 = zext i32 %call99 to i64, !dbg !3867
  %65 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3868
  %rdev101 = getelementptr inbounds %struct.file_info, %struct.file_info* %65, i32 0, i32 20, !dbg !3869
  %66 = load i64, i64* %rdev101, align 8, !dbg !3870
  %or = or i64 %66, %conv100, !dbg !3870
  store i64 %or, i64* %rdev101, align 8, !dbg !3870
  %67 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3871
  %seenRockridge102 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %67, i32 0, i32 4, !dbg !3872
  store i8 1, i8* %seenRockridge102, align 8, !dbg !3873
  br label %if.end103, !dbg !3874

if.end103:                                        ; preds = %if.then94, %land.lhs.true91, %if.then88
  br label %if.end146, !dbg !3875

if.else104:                                       ; preds = %sw.bb83
  %68 = load i8*, i8** %p.addr, align 8, !dbg !3876
  %arrayidx105 = getelementptr inbounds i8, i8* %68, i64 1, !dbg !3876
  %69 = load i8, i8* %arrayidx105, align 1, !dbg !3876
  %conv106 = zext i8 %69 to i32, !dbg !3876
  %cmp107 = icmp eq i32 %conv106, 88, !dbg !3878
  br i1 %cmp107, label %if.then109, label %if.end145, !dbg !3879

if.then109:                                       ; preds = %if.else104
  %70 = load i32, i32* %version, align 4, !dbg !3880
  %cmp110 = icmp eq i32 %70, 1, !dbg !3883
  br i1 %cmp110, label %if.then112, label %if.end144, !dbg !3884

if.then112:                                       ; preds = %if.then109
  %71 = load i32, i32* %data_length, align 4, !dbg !3885
  %cmp113 = icmp sge i32 %71, 8, !dbg !3888
  br i1 %cmp113, label %if.then115, label %if.end117, !dbg !3889

if.then115:                                       ; preds = %if.then112
  %72 = load i8*, i8** %data28, align 8, !dbg !3890
  %call116 = call i32 @toi(i8* %72, i32 4), !dbg !3891
  %73 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3892
  %mode = getelementptr inbounds %struct.file_info, %struct.file_info* %73, i32 0, i32 21, !dbg !3893
  store i32 %call116, i32* %mode, align 8, !dbg !3894
  br label %if.end117, !dbg !3892

if.end117:                                        ; preds = %if.then115, %if.then112
  %74 = load i32, i32* %data_length, align 4, !dbg !3895
  %cmp118 = icmp sge i32 %74, 16, !dbg !3897
  br i1 %cmp118, label %if.then120, label %if.end123, !dbg !3898

if.then120:                                       ; preds = %if.end117
  %75 = load i8*, i8** %data28, align 8, !dbg !3899
  %add.ptr121 = getelementptr inbounds i8, i8* %75, i64 8, !dbg !3900
  %call122 = call i32 @toi(i8* %add.ptr121, i32 4), !dbg !3901
  %76 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3902
  %nlinks = getelementptr inbounds %struct.file_info, %struct.file_info* %76, i32 0, i32 25, !dbg !3903
  store i32 %call122, i32* %nlinks, align 8, !dbg !3904
  br label %if.end123, !dbg !3902

if.end123:                                        ; preds = %if.then120, %if.end117
  %77 = load i32, i32* %data_length, align 4, !dbg !3905
  %cmp124 = icmp sge i32 %77, 24, !dbg !3907
  br i1 %cmp124, label %if.then126, label %if.end129, !dbg !3908

if.then126:                                       ; preds = %if.end123
  %78 = load i8*, i8** %data28, align 8, !dbg !3909
  %add.ptr127 = getelementptr inbounds i8, i8* %78, i64 16, !dbg !3910
  %call128 = call i32 @toi(i8* %add.ptr127, i32 4), !dbg !3911
  %79 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3912
  %uid = getelementptr inbounds %struct.file_info, %struct.file_info* %79, i32 0, i32 22, !dbg !3913
  store i32 %call128, i32* %uid, align 4, !dbg !3914
  br label %if.end129, !dbg !3912

if.end129:                                        ; preds = %if.then126, %if.end123
  %80 = load i32, i32* %data_length, align 4, !dbg !3915
  %cmp130 = icmp sge i32 %80, 32, !dbg !3917
  br i1 %cmp130, label %if.then132, label %if.end135, !dbg !3918

if.then132:                                       ; preds = %if.end129
  %81 = load i8*, i8** %data28, align 8, !dbg !3919
  %add.ptr133 = getelementptr inbounds i8, i8* %81, i64 24, !dbg !3920
  %call134 = call i32 @toi(i8* %add.ptr133, i32 4), !dbg !3921
  %82 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3922
  %gid = getelementptr inbounds %struct.file_info, %struct.file_info* %82, i32 0, i32 23, !dbg !3923
  store i32 %call134, i32* %gid, align 8, !dbg !3924
  br label %if.end135, !dbg !3922

if.end135:                                        ; preds = %if.then132, %if.end129
  %83 = load i32, i32* %data_length, align 4, !dbg !3925
  %cmp136 = icmp sge i32 %83, 40, !dbg !3927
  br i1 %cmp136, label %if.then138, label %if.end142, !dbg !3928

if.then138:                                       ; preds = %if.end135
  %84 = load i8*, i8** %data28, align 8, !dbg !3929
  %add.ptr139 = getelementptr inbounds i8, i8* %84, i64 32, !dbg !3930
  %call140 = call i32 @toi(i8* %add.ptr139, i32 4), !dbg !3931
  %conv141 = zext i32 %call140 to i64, !dbg !3931
  %85 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3932
  %number = getelementptr inbounds %struct.file_info, %struct.file_info* %85, i32 0, i32 24, !dbg !3933
  store i64 %conv141, i64* %number, align 8, !dbg !3934
  br label %if.end142, !dbg !3932

if.end142:                                        ; preds = %if.then138, %if.end135
  %86 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3935
  %seenRockridge143 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %86, i32 0, i32 4, !dbg !3936
  store i8 1, i8* %seenRockridge143, align 8, !dbg !3937
  br label %if.end144, !dbg !3938

if.end144:                                        ; preds = %if.end142, %if.then109
  br label %if.end145, !dbg !3939

if.end145:                                        ; preds = %if.end144, %if.else104
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end103
  br label %sw.epilog, !dbg !3940

sw.bb147:                                         ; preds = %while.body
  %87 = load i8*, i8** %p.addr, align 8, !dbg !3941
  %arrayidx148 = getelementptr inbounds i8, i8* %87, i64 1, !dbg !3941
  %88 = load i8, i8* %arrayidx148, align 1, !dbg !3941
  %conv149 = zext i8 %88 to i32, !dbg !3941
  %cmp150 = icmp eq i32 %conv149, 69, !dbg !3943
  br i1 %cmp150, label %land.lhs.true152, label %if.else157, !dbg !3944

land.lhs.true152:                                 ; preds = %sw.bb147
  %89 = load i32, i32* %version, align 4, !dbg !3945
  %cmp153 = icmp eq i32 %89, 1, !dbg !3947
  br i1 %cmp153, label %if.then155, label %if.else157, !dbg !3948

if.then155:                                       ; preds = %land.lhs.true152
  %90 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3949
  %re = getelementptr inbounds %struct.file_info, %struct.file_info* %90, i32 0, i32 12, !dbg !3951
  store i8 1, i8* %re, align 2, !dbg !3952
  %91 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3953
  %seenRockridge156 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %91, i32 0, i32 4, !dbg !3954
  store i8 1, i8* %seenRockridge156, align 8, !dbg !3955
  br label %if.end167, !dbg !3956

if.else157:                                       ; preds = %land.lhs.true152, %sw.bb147
  %92 = load i8*, i8** %p.addr, align 8, !dbg !3957
  %arrayidx158 = getelementptr inbounds i8, i8* %92, i64 1, !dbg !3957
  %93 = load i8, i8* %arrayidx158, align 1, !dbg !3957
  %conv159 = zext i8 %93 to i32, !dbg !3957
  %cmp160 = icmp eq i32 %conv159, 82, !dbg !3959
  br i1 %cmp160, label %land.lhs.true162, label %if.end166, !dbg !3960

land.lhs.true162:                                 ; preds = %if.else157
  %94 = load i32, i32* %version, align 4, !dbg !3961
  %cmp163 = icmp eq i32 %94, 1, !dbg !3963
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !3964

if.then165:                                       ; preds = %land.lhs.true162
  br label %if.end166, !dbg !3965

if.end166:                                        ; preds = %if.then165, %land.lhs.true162, %if.else157
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then155
  br label %sw.epilog, !dbg !3967

sw.bb168:                                         ; preds = %while.body
  %95 = load i8*, i8** %p.addr, align 8, !dbg !3968
  %arrayidx169 = getelementptr inbounds i8, i8* %95, i64 1, !dbg !3968
  %96 = load i8, i8* %arrayidx169, align 1, !dbg !3968
  %conv170 = zext i8 %96 to i32, !dbg !3968
  %cmp171 = icmp eq i32 %conv170, 76, !dbg !3970
  br i1 %cmp171, label %if.then173, label %if.else179, !dbg !3971

if.then173:                                       ; preds = %sw.bb168
  %97 = load i32, i32* %version, align 4, !dbg !3972
  %cmp174 = icmp eq i32 %97, 1, !dbg !3975
  br i1 %cmp174, label %if.then176, label %if.end178, !dbg !3976

if.then176:                                       ; preds = %if.then173
  %98 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !3977
  %99 = load i8*, i8** %data28, align 8, !dbg !3979
  %100 = load i32, i32* %data_length, align 4, !dbg !3980
  call void @parse_rockridge_SL1(%struct.file_info* %98, i8* %99, i32 %100), !dbg !3981
  %101 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3982
  %seenRockridge177 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %101, i32 0, i32 4, !dbg !3983
  store i8 1, i8* %seenRockridge177, align 8, !dbg !3984
  br label %if.end178, !dbg !3985

if.end178:                                        ; preds = %if.then176, %if.then173
  br label %if.end193, !dbg !3986

if.else179:                                       ; preds = %sw.bb168
  %102 = load i8*, i8** %p.addr, align 8, !dbg !3987
  %arrayidx180 = getelementptr inbounds i8, i8* %102, i64 1, !dbg !3987
  %103 = load i8, i8* %arrayidx180, align 1, !dbg !3987
  %conv181 = zext i8 %103 to i32, !dbg !3987
  %cmp182 = icmp eq i32 %conv181, 84, !dbg !3989
  br i1 %cmp182, label %land.lhs.true184, label %if.end192, !dbg !3990

land.lhs.true184:                                 ; preds = %if.else179
  %104 = load i32, i32* %data_length, align 4, !dbg !3991
  %cmp185 = icmp eq i32 %104, 0, !dbg !3993
  br i1 %cmp185, label %land.lhs.true187, label %if.end192, !dbg !3994

land.lhs.true187:                                 ; preds = %land.lhs.true184
  %105 = load i32, i32* %version, align 4, !dbg !3995
  %cmp188 = icmp eq i32 %105, 1, !dbg !3997
  br i1 %cmp188, label %if.then190, label %if.end192, !dbg !3998

if.then190:                                       ; preds = %land.lhs.true187
  %106 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4000
  %seenSUSP = getelementptr inbounds %struct.iso9660, %struct.iso9660* %106, i32 0, i32 5, !dbg !4002
  store i8 0, i8* %seenSUSP, align 1, !dbg !4003
  %107 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4004
  %seenRockridge191 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %107, i32 0, i32 4, !dbg !4005
  store i8 0, i8* %seenRockridge191, align 8, !dbg !4006
  store i32 0, i32* %retval, align 4, !dbg !4007
  br label %return, !dbg !4007

if.end192:                                        ; preds = %land.lhs.true187, %land.lhs.true184, %if.else179
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.end178
  br label %sw.epilog, !dbg !4008

sw.bb194:                                         ; preds = %while.body
  %108 = load i8*, i8** %p.addr, align 8, !dbg !4009
  %arrayidx195 = getelementptr inbounds i8, i8* %108, i64 1, !dbg !4009
  %109 = load i8, i8* %arrayidx195, align 1, !dbg !4009
  %conv196 = zext i8 %109 to i32, !dbg !4009
  %cmp197 = icmp eq i32 %conv196, 70, !dbg !4011
  br i1 %cmp197, label %if.then199, label %if.end205, !dbg !4012

if.then199:                                       ; preds = %sw.bb194
  %110 = load i32, i32* %version, align 4, !dbg !4013
  %cmp200 = icmp eq i32 %110, 1, !dbg !4016
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !4017

if.then202:                                       ; preds = %if.then199
  %111 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4018
  %112 = load i8*, i8** %data28, align 8, !dbg !4020
  %113 = load i32, i32* %data_length, align 4, !dbg !4021
  call void @parse_rockridge_TF1(%struct.file_info* %111, i8* %112, i32 %113), !dbg !4022
  %114 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4023
  %seenRockridge203 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %114, i32 0, i32 4, !dbg !4024
  store i8 1, i8* %seenRockridge203, align 8, !dbg !4025
  br label %if.end204, !dbg !4026

if.end204:                                        ; preds = %if.then202, %if.then199
  br label %if.end205, !dbg !4027

if.end205:                                        ; preds = %if.end204, %sw.bb194
  br label %sw.epilog, !dbg !4028

sw.bb206:                                         ; preds = %while.body
  %115 = load i8*, i8** %p.addr, align 8, !dbg !4029
  %arrayidx207 = getelementptr inbounds i8, i8* %115, i64 1, !dbg !4029
  %116 = load i8, i8* %arrayidx207, align 1, !dbg !4029
  %conv208 = zext i8 %116 to i32, !dbg !4029
  %cmp209 = icmp eq i32 %conv208, 70, !dbg !4031
  br i1 %cmp209, label %if.then211, label %if.end216, !dbg !4032

if.then211:                                       ; preds = %sw.bb206
  %117 = load i32, i32* %version, align 4, !dbg !4033
  %cmp212 = icmp eq i32 %117, 1, !dbg !4036
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !4037

if.then214:                                       ; preds = %if.then211
  %118 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4038
  %119 = load i8*, i8** %data28, align 8, !dbg !4039
  %120 = load i32, i32* %data_length, align 4, !dbg !4040
  call void @parse_rockridge_ZF1(%struct.file_info* %118, i8* %119, i32 %120), !dbg !4041
  br label %if.end215, !dbg !4041

if.end215:                                        ; preds = %if.then214, %if.then211
  br label %if.end216, !dbg !4042

if.end216:                                        ; preds = %if.end215, %sw.bb206
  br label %sw.epilog, !dbg !4043

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !4044

sw.epilog:                                        ; preds = %sw.default, %if.end216, %if.end205, %if.end193, %if.end167, %if.end146, %if.end82, %if.end70
  %121 = load i8*, i8** %p.addr, align 8, !dbg !4045
  %arrayidx217 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !4045
  %122 = load i8, i8* %arrayidx217, align 1, !dbg !4045
  %conv218 = zext i8 %122 to i32, !dbg !4045
  %123 = load i8*, i8** %p.addr, align 8, !dbg !4046
  %idx.ext219 = sext i32 %conv218 to i64, !dbg !4046
  %add.ptr220 = getelementptr inbounds i8, i8* %123, i64 %idx.ext219, !dbg !4046
  store i8* %add.ptr220, i8** %p.addr, align 8, !dbg !4046
  br label %while.cond, !dbg !4047

while.end:                                        ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !4049
  br label %return, !dbg !4049

return:                                           ; preds = %while.end, %if.then190, %if.then53
  %124 = load i32, i32* %retval, align 4, !dbg !4050
  ret i32 %124, !dbg !4050
}

; Function Attrs: nounwind uwtable
define internal void @register_file(%struct.iso9660* %iso9660, %struct.file_info* %file) #0 !dbg !566 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file.addr = alloca %struct.file_info*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !4051, metadata !623), !dbg !4052
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !4053, metadata !623), !dbg !4054
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4055
  %use_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 12, !dbg !4056
  %1 = load %struct.file_info*, %struct.file_info** %use_files, align 8, !dbg !4056
  %2 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4057
  %use_next = getelementptr inbounds %struct.file_info, %struct.file_info* %2, i32 0, i32 0, !dbg !4058
  store %struct.file_info* %1, %struct.file_info** %use_next, align 8, !dbg !4059
  %3 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4060
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4061
  %use_files1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 12, !dbg !4062
  store %struct.file_info* %3, %struct.file_info** %use_files1, align 8, !dbg !4063
  ret void, !dbg !4064
}

declare void @archive_string_free(%struct.archive_string*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #7

; Function Attrs: nounwind uwtable
define internal i64 @time_from_tm(%struct.tm* %t) #0 !dbg !536 {
entry:
  %t.addr = alloca %struct.tm*, align 8
  store %struct.tm* %t, %struct.tm** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %t.addr, metadata !4065, metadata !623), !dbg !4066
  %0 = load %struct.tm*, %struct.tm** %t.addr, align 8, !dbg !4067
  %call = call i64 @timegm(%struct.tm* %0) #8, !dbg !4068
  ret i64 %call, !dbg !4069
}

; Function Attrs: nounwind
declare i64 @timegm(%struct.tm*) #3

; Function Attrs: nounwind uwtable
define internal i32 @register_CE(%struct.archive_read* %a, i32 %location, %struct.file_info* %file) #0 !dbg !556 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %location.addr = alloca i32, align 4
  %file.addr = alloca %struct.file_info*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %heap = alloca %struct.read_ce_queue*, align 8
  %p = alloca %struct.read_ce_req*, align 8
  %offset = alloca i64, align 8
  %parent_offset = alloca i64, align 8
  %hole = alloca i32, align 4
  %parent = alloca i32, align 4
  %new_size = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4070, metadata !623), !dbg !4071
  store i32 %location, i32* %location.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %location.addr, metadata !4072, metadata !623), !dbg !4073
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !4074, metadata !623), !dbg !4075
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !4076, metadata !623), !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.read_ce_queue** %heap, metadata !4078, metadata !623), !dbg !4079
  call void @llvm.dbg.declare(metadata %struct.read_ce_req** %p, metadata !4080, metadata !623), !dbg !4081
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !4082, metadata !623), !dbg !4083
  call void @llvm.dbg.declare(metadata i64* %parent_offset, metadata !4084, metadata !623), !dbg !4085
  call void @llvm.dbg.declare(metadata i32* %hole, metadata !4086, metadata !623), !dbg !4087
  call void @llvm.dbg.declare(metadata i32* %parent, metadata !4088, metadata !623), !dbg !4089
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4090
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !4091
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !4091
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !4092
  %2 = load i8*, i8** %data, align 8, !dbg !4092
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !4093
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !4094
  %4 = load i32, i32* %location.addr, align 4, !dbg !4095
  %conv = sext i32 %4 to i64, !dbg !4096
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4097
  %logical_block_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 17, !dbg !4098
  %6 = load i64, i64* %logical_block_size, align 8, !dbg !4098
  %mul = mul i64 %conv, %6, !dbg !4099
  store i64 %mul, i64* %offset, align 8, !dbg !4100
  %7 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4101
  %mode = getelementptr inbounds %struct.file_info, %struct.file_info* %7, i32 0, i32 21, !dbg !4103
  %8 = load i32, i32* %mode, align 8, !dbg !4103
  %and = and i32 %8, 61440, !dbg !4104
  %cmp = icmp eq i32 %and, 32768, !dbg !4105
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4106

land.lhs.true:                                    ; preds = %entry
  %9 = load i64, i64* %offset, align 8, !dbg !4107
  %10 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4108
  %offset2 = getelementptr inbounds %struct.file_info, %struct.file_info* %10, i32 0, i32 6, !dbg !4109
  %11 = load i64, i64* %offset2, align 8, !dbg !4109
  %cmp3 = icmp uge i64 %9, %11, !dbg !4110
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !4111

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %12 = load i64, i64* %offset, align 8, !dbg !4112
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4113
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 16, !dbg !4114
  %14 = load i64, i64* %current_position, align 8, !dbg !4114
  %cmp5 = icmp ult i64 %12, %14, !dbg !4115
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !4116

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %15 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4117
  %ce_offset = getelementptr inbounds %struct.file_info, %struct.file_info* %15, i32 0, i32 8, !dbg !4118
  %16 = load i32, i32* %ce_offset, align 8, !dbg !4118
  %conv8 = zext i32 %16 to i64, !dbg !4119
  %17 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4120
  %ce_size = getelementptr inbounds %struct.file_info, %struct.file_info* %17, i32 0, i32 9, !dbg !4121
  %18 = load i32, i32* %ce_size, align 4, !dbg !4121
  %conv9 = zext i32 %18 to i64, !dbg !4120
  %add = add i64 %conv8, %conv9, !dbg !4122
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4123
  %logical_block_size10 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 17, !dbg !4124
  %20 = load i64, i64* %logical_block_size10, align 8, !dbg !4124
  %cmp11 = icmp ugt i64 %add, %20, !dbg !4125
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !4126

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %21 = load i64, i64* %offset, align 8, !dbg !4127
  %22 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4128
  %ce_offset14 = getelementptr inbounds %struct.file_info, %struct.file_info* %22, i32 0, i32 8, !dbg !4129
  %23 = load i32, i32* %ce_offset14, align 8, !dbg !4129
  %conv15 = zext i32 %23 to i64, !dbg !4128
  %add16 = add i64 %21, %conv15, !dbg !4130
  %24 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4131
  %ce_size17 = getelementptr inbounds %struct.file_info, %struct.file_info* %24, i32 0, i32 9, !dbg !4132
  %25 = load i32, i32* %ce_size17, align 4, !dbg !4132
  %conv18 = zext i32 %25 to i64, !dbg !4131
  %add19 = add i64 %add16, %conv18, !dbg !4133
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4134
  %volume_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 18, !dbg !4135
  %27 = load i64, i64* %volume_size, align 8, !dbg !4135
  %cmp20 = icmp ugt i64 %add19, %27, !dbg !4136
  br i1 %cmp20, label %if.then, label %if.end, !dbg !4137

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %land.lhs.true
  %28 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4139
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %28, i32 0, i32 0, !dbg !4141
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0)), !dbg !4142
  store i32 -30, i32* %retval, align 4, !dbg !4143
  br label %return, !dbg !4143

if.end:                                           ; preds = %lor.lhs.false13
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4144
  %read_ce_req = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 9, !dbg !4145
  store %struct.read_ce_queue* %read_ce_req, %struct.read_ce_queue** %heap, align 8, !dbg !4146
  %30 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4147
  %cnt = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %30, i32 0, i32 1, !dbg !4149
  %31 = load i32, i32* %cnt, align 8, !dbg !4149
  %32 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4150
  %allocated = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %32, i32 0, i32 2, !dbg !4151
  %33 = load i32, i32* %allocated, align 4, !dbg !4151
  %cmp22 = icmp sge i32 %31, %33, !dbg !4152
  br i1 %cmp22, label %if.then24, label %if.end55, !dbg !4153

if.then24:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !4154, metadata !623), !dbg !4156
  %34 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4157
  %allocated25 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %34, i32 0, i32 2, !dbg !4159
  %35 = load i32, i32* %allocated25, align 4, !dbg !4159
  %cmp26 = icmp slt i32 %35, 16, !dbg !4160
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !4161

if.then28:                                        ; preds = %if.then24
  store i32 16, i32* %new_size, align 4, !dbg !4162
  br label %if.end31, !dbg !4163

if.else:                                          ; preds = %if.then24
  %36 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4164
  %allocated29 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %36, i32 0, i32 2, !dbg !4165
  %37 = load i32, i32* %allocated29, align 4, !dbg !4165
  %mul30 = mul nsw i32 %37, 2, !dbg !4166
  store i32 %mul30, i32* %new_size, align 4, !dbg !4167
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then28
  %38 = load i32, i32* %new_size, align 4, !dbg !4168
  %39 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4170
  %allocated32 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %39, i32 0, i32 2, !dbg !4171
  %40 = load i32, i32* %allocated32, align 4, !dbg !4171
  %cmp33 = icmp sle i32 %38, %40, !dbg !4172
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !4173

if.then35:                                        ; preds = %if.end31
  %41 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4174
  %archive36 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %41, i32 0, i32 0, !dbg !4176
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive36, i32 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0)), !dbg !4177
  store i32 -30, i32* %retval, align 4, !dbg !4178
  br label %return, !dbg !4178

if.end37:                                         ; preds = %if.end31
  %42 = load i32, i32* %new_size, align 4, !dbg !4179
  %conv38 = sext i32 %42 to i64, !dbg !4179
  %call = call noalias i8* @calloc(i64 %conv38, i64 16) #8, !dbg !4180
  %43 = bitcast i8* %call to %struct.read_ce_req*, !dbg !4180
  store %struct.read_ce_req* %43, %struct.read_ce_req** %p, align 8, !dbg !4181
  %44 = load %struct.read_ce_req*, %struct.read_ce_req** %p, align 8, !dbg !4182
  %cmp39 = icmp eq %struct.read_ce_req* %44, null, !dbg !4184
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !4185

if.then41:                                        ; preds = %if.end37
  %45 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4186
  %archive42 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %45, i32 0, i32 0, !dbg !4188
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive42, i32 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0)), !dbg !4189
  store i32 -30, i32* %retval, align 4, !dbg !4190
  br label %return, !dbg !4190

if.end43:                                         ; preds = %if.end37
  %46 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4191
  %reqs = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %46, i32 0, i32 0, !dbg !4193
  %47 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs, align 8, !dbg !4193
  %cmp44 = icmp ne %struct.read_ce_req* %47, null, !dbg !4194
  br i1 %cmp44, label %if.then46, label %if.end52, !dbg !4195

if.then46:                                        ; preds = %if.end43
  %48 = load %struct.read_ce_req*, %struct.read_ce_req** %p, align 8, !dbg !4196
  %49 = bitcast %struct.read_ce_req* %48 to i8*, !dbg !4198
  %50 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4199
  %reqs47 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %50, i32 0, i32 0, !dbg !4200
  %51 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs47, align 8, !dbg !4200
  %52 = bitcast %struct.read_ce_req* %51 to i8*, !dbg !4198
  %53 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4201
  %cnt48 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %53, i32 0, i32 1, !dbg !4202
  %54 = load i32, i32* %cnt48, align 8, !dbg !4202
  %conv49 = sext i32 %54 to i64, !dbg !4201
  %mul50 = mul i64 %conv49, 16, !dbg !4203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %52, i64 %mul50, i32 8, i1 false), !dbg !4198
  %55 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4204
  %reqs51 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %55, i32 0, i32 0, !dbg !4205
  %56 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs51, align 8, !dbg !4205
  %57 = bitcast %struct.read_ce_req* %56 to i8*, !dbg !4204
  call void @free(i8* %57) #8, !dbg !4206
  br label %if.end52, !dbg !4207

if.end52:                                         ; preds = %if.then46, %if.end43
  %58 = load %struct.read_ce_req*, %struct.read_ce_req** %p, align 8, !dbg !4208
  %59 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4209
  %reqs53 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %59, i32 0, i32 0, !dbg !4210
  store %struct.read_ce_req* %58, %struct.read_ce_req** %reqs53, align 8, !dbg !4211
  %60 = load i32, i32* %new_size, align 4, !dbg !4212
  %61 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4213
  %allocated54 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %61, i32 0, i32 2, !dbg !4214
  store i32 %60, i32* %allocated54, align 4, !dbg !4215
  br label %if.end55, !dbg !4216

if.end55:                                         ; preds = %if.end52, %if.end
  %62 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4217
  %cnt56 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %62, i32 0, i32 1, !dbg !4218
  %63 = load i32, i32* %cnt56, align 8, !dbg !4219
  %inc = add nsw i32 %63, 1, !dbg !4219
  store i32 %inc, i32* %cnt56, align 8, !dbg !4219
  store i32 %63, i32* %hole, align 4, !dbg !4220
  br label %while.cond, !dbg !4221

while.cond:                                       ; preds = %if.end72, %if.end55
  %64 = load i32, i32* %hole, align 4, !dbg !4222
  %cmp57 = icmp sgt i32 %64, 0, !dbg !4223
  br i1 %cmp57, label %while.body, label %while.end, !dbg !4224

while.body:                                       ; preds = %while.cond
  %65 = load i32, i32* %hole, align 4, !dbg !4225
  %sub = sub nsw i32 %65, 1, !dbg !4227
  %div = sdiv i32 %sub, 2, !dbg !4228
  store i32 %div, i32* %parent, align 4, !dbg !4229
  %66 = load i32, i32* %parent, align 4, !dbg !4230
  %idxprom = sext i32 %66 to i64, !dbg !4231
  %67 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4231
  %reqs59 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %67, i32 0, i32 0, !dbg !4232
  %68 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs59, align 8, !dbg !4232
  %arrayidx = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %68, i64 %idxprom, !dbg !4231
  %offset60 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx, i32 0, i32 0, !dbg !4233
  %69 = load i64, i64* %offset60, align 8, !dbg !4233
  store i64 %69, i64* %parent_offset, align 8, !dbg !4234
  %70 = load i64, i64* %offset, align 8, !dbg !4235
  %71 = load i64, i64* %parent_offset, align 8, !dbg !4237
  %cmp61 = icmp uge i64 %70, %71, !dbg !4238
  br i1 %cmp61, label %if.then63, label %if.end72, !dbg !4239

if.then63:                                        ; preds = %while.body
  %72 = load i64, i64* %offset, align 8, !dbg !4240
  %73 = load i32, i32* %hole, align 4, !dbg !4242
  %idxprom64 = sext i32 %73 to i64, !dbg !4243
  %74 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4243
  %reqs65 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %74, i32 0, i32 0, !dbg !4244
  %75 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs65, align 8, !dbg !4244
  %arrayidx66 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %75, i64 %idxprom64, !dbg !4243
  %offset67 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx66, i32 0, i32 0, !dbg !4245
  store i64 %72, i64* %offset67, align 8, !dbg !4246
  %76 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4247
  %77 = load i32, i32* %hole, align 4, !dbg !4248
  %idxprom68 = sext i32 %77 to i64, !dbg !4249
  %78 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4249
  %reqs69 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %78, i32 0, i32 0, !dbg !4250
  %79 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs69, align 8, !dbg !4250
  %arrayidx70 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %79, i64 %idxprom68, !dbg !4249
  %file71 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx70, i32 0, i32 1, !dbg !4251
  store %struct.file_info* %76, %struct.file_info** %file71, align 8, !dbg !4252
  store i32 0, i32* %retval, align 4, !dbg !4253
  br label %return, !dbg !4253

if.end72:                                         ; preds = %while.body
  %80 = load i32, i32* %hole, align 4, !dbg !4254
  %idxprom73 = sext i32 %80 to i64, !dbg !4255
  %81 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4255
  %reqs74 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %81, i32 0, i32 0, !dbg !4256
  %82 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs74, align 8, !dbg !4256
  %arrayidx75 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %82, i64 %idxprom73, !dbg !4255
  %83 = load i32, i32* %parent, align 4, !dbg !4257
  %idxprom76 = sext i32 %83 to i64, !dbg !4258
  %84 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4258
  %reqs77 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %84, i32 0, i32 0, !dbg !4259
  %85 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs77, align 8, !dbg !4259
  %arrayidx78 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %85, i64 %idxprom76, !dbg !4258
  %86 = bitcast %struct.read_ce_req* %arrayidx75 to i8*, !dbg !4258
  %87 = bitcast %struct.read_ce_req* %arrayidx78 to i8*, !dbg !4258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 16, i32 8, i1 false), !dbg !4258
  %88 = load i32, i32* %parent, align 4, !dbg !4260
  store i32 %88, i32* %hole, align 4, !dbg !4261
  br label %while.cond, !dbg !4262

while.end:                                        ; preds = %while.cond
  %89 = load i64, i64* %offset, align 8, !dbg !4264
  %90 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4265
  %reqs79 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %90, i32 0, i32 0, !dbg !4266
  %91 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs79, align 8, !dbg !4266
  %arrayidx80 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %91, i64 0, !dbg !4265
  %offset81 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx80, i32 0, i32 0, !dbg !4267
  store i64 %89, i64* %offset81, align 8, !dbg !4268
  %92 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4269
  %93 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !4270
  %reqs82 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %93, i32 0, i32 0, !dbg !4271
  %94 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs82, align 8, !dbg !4271
  %arrayidx83 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %94, i64 0, !dbg !4270
  %file84 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx83, i32 0, i32 1, !dbg !4272
  store %struct.file_info* %92, %struct.file_info** %file84, align 8, !dbg !4273
  store i32 0, i32* %retval, align 4, !dbg !4274
  br label %return, !dbg !4274

return:                                           ; preds = %while.end, %if.then63, %if.then41, %if.then35, %if.then
  %95 = load i32, i32* %retval, align 4, !dbg !4275
  ret i32 %95, !dbg !4275
}

; Function Attrs: nounwind uwtable
define internal void @parse_rockridge_NM1(%struct.file_info* %file, i8* %data, i32 %data_length) #0 !dbg !559 {
entry:
  %file.addr = alloca %struct.file_info*, align 8
  %data.addr = alloca i8*, align 8
  %data_length.addr = alloca i32, align 4
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !4276, metadata !623), !dbg !4277
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4278, metadata !623), !dbg !4279
  store i32 %data_length, i32* %data_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_length.addr, metadata !4280, metadata !623), !dbg !4281
  %0 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4282
  %name_continues = getelementptr inbounds %struct.file_info, %struct.file_info* %0, i32 0, i32 29, !dbg !4284
  %1 = load i8, i8* %name_continues, align 8, !dbg !4284
  %tobool = icmp ne i8 %1, 0, !dbg !4282
  br i1 %tobool, label %if.end, label %if.then, !dbg !4285

if.then:                                          ; preds = %entry
  %2 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4286
  %name = getelementptr inbounds %struct.file_info, %struct.file_info* %2, i32 0, i32 26, !dbg !4286
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name, i32 0, i32 1, !dbg !4286
  store i64 0, i64* %length, align 8, !dbg !4286
  br label %if.end, !dbg !4286

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4287
  %name_continues1 = getelementptr inbounds %struct.file_info, %struct.file_info* %3, i32 0, i32 29, !dbg !4288
  store i8 0, i8* %name_continues1, align 8, !dbg !4289
  %4 = load i32, i32* %data_length.addr, align 4, !dbg !4290
  %cmp = icmp slt i32 %4, 1, !dbg !4292
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4293

if.then2:                                         ; preds = %if.end
  br label %sw.epilog, !dbg !4294

if.end3:                                          ; preds = %if.end
  %5 = load i8*, i8** %data.addr, align 8, !dbg !4295
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !4295
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4295
  %conv = zext i8 %6 to i32, !dbg !4295
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
    i32 2, label %sw.bb21
    i32 4, label %sw.bb24
  ], !dbg !4296

sw.bb:                                            ; preds = %if.end3
  %7 = load i32, i32* %data_length.addr, align 4, !dbg !4297
  %cmp4 = icmp slt i32 %7, 2, !dbg !4300
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4301

if.then6:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !4302

if.end7:                                          ; preds = %sw.bb
  %8 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4303
  %name8 = getelementptr inbounds %struct.file_info, %struct.file_info* %8, i32 0, i32 26, !dbg !4304
  %9 = load i8*, i8** %data.addr, align 8, !dbg !4305
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4306
  %10 = load i32, i32* %data_length.addr, align 4, !dbg !4307
  %sub = sub nsw i32 %10, 1, !dbg !4308
  %conv9 = sext i32 %sub to i64, !dbg !4307
  %call = call %struct.archive_string* @archive_strncat(%struct.archive_string* %name8, i8* %add.ptr, i64 %conv9), !dbg !4309
  br label %sw.epilog, !dbg !4310

sw.bb10:                                          ; preds = %if.end3
  %11 = load i32, i32* %data_length.addr, align 4, !dbg !4311
  %cmp11 = icmp slt i32 %11, 2, !dbg !4313
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !4314

if.then13:                                        ; preds = %sw.bb10
  br label %sw.epilog, !dbg !4315

if.end14:                                         ; preds = %sw.bb10
  %12 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4316
  %name15 = getelementptr inbounds %struct.file_info, %struct.file_info* %12, i32 0, i32 26, !dbg !4317
  %13 = load i8*, i8** %data.addr, align 8, !dbg !4318
  %add.ptr16 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !4319
  %14 = load i32, i32* %data_length.addr, align 4, !dbg !4320
  %sub17 = sub nsw i32 %14, 1, !dbg !4321
  %conv18 = sext i32 %sub17 to i64, !dbg !4320
  %call19 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %name15, i8* %add.ptr16, i64 %conv18), !dbg !4322
  %15 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4323
  %name_continues20 = getelementptr inbounds %struct.file_info, %struct.file_info* %15, i32 0, i32 29, !dbg !4324
  store i8 1, i8* %name_continues20, align 8, !dbg !4325
  br label %sw.epilog, !dbg !4326

sw.bb21:                                          ; preds = %if.end3
  %16 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4327
  %name22 = getelementptr inbounds %struct.file_info, %struct.file_info* %16, i32 0, i32 26, !dbg !4328
  %call23 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %name22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0)), !dbg !4329
  br label %sw.epilog, !dbg !4330

sw.bb24:                                          ; preds = %if.end3
  %17 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4331
  %name25 = getelementptr inbounds %struct.file_info, %struct.file_info* %17, i32 0, i32 26, !dbg !4332
  %call26 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %name25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0)), !dbg !4333
  br label %sw.epilog, !dbg !4334

sw.default:                                       ; preds = %if.end3
  br label %sw.epilog, !dbg !4335

sw.epilog:                                        ; preds = %if.then2, %if.then6, %if.then13, %sw.default, %sw.bb24, %sw.bb21, %if.end14, %if.end7
  ret void, !dbg !4336
}

; Function Attrs: nounwind uwtable
define internal void @parse_rockridge_SL1(%struct.file_info* %file, i8* %data, i32 %data_length) #0 !dbg !562 {
entry:
  %file.addr = alloca %struct.file_info*, align 8
  %data.addr = alloca i8*, align 8
  %data_length.addr = alloca i32, align 4
  %separator = alloca i8*, align 8
  %flag = alloca i8, align 1
  %nlen = alloca i8, align 1
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !4337, metadata !623), !dbg !4338
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4339, metadata !623), !dbg !4340
  store i32 %data_length, i32* %data_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_length.addr, metadata !4341, metadata !623), !dbg !4342
  call void @llvm.dbg.declare(metadata i8** %separator, metadata !4343, metadata !623), !dbg !4344
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i32 0, i32 0), i8** %separator, align 8, !dbg !4344
  %0 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4345
  %symlink_continues = getelementptr inbounds %struct.file_info, %struct.file_info* %0, i32 0, i32 31, !dbg !4347
  %1 = load i8, i8* %symlink_continues, align 8, !dbg !4347
  %tobool = icmp ne i8 %1, 0, !dbg !4345
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4348

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4349
  %symlink = getelementptr inbounds %struct.file_info, %struct.file_info* %2, i32 0, i32 30, !dbg !4351
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink, i32 0, i32 1, !dbg !4352
  %3 = load i64, i64* %length, align 8, !dbg !4352
  %cmp = icmp ult i64 %3, 1, !dbg !4353
  br i1 %cmp, label %if.then, label %if.end, !dbg !4354

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4355
  %symlink1 = getelementptr inbounds %struct.file_info, %struct.file_info* %4, i32 0, i32 30, !dbg !4355
  %length2 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink1, i32 0, i32 1, !dbg !4355
  store i64 0, i64* %length2, align 8, !dbg !4355
  br label %if.end, !dbg !4355

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %5 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4356
  %symlink_continues3 = getelementptr inbounds %struct.file_info, %struct.file_info* %5, i32 0, i32 31, !dbg !4357
  store i8 0, i8* %symlink_continues3, align 8, !dbg !4358
  %6 = load i32, i32* %data_length.addr, align 4, !dbg !4359
  %cmp4 = icmp slt i32 %6, 1, !dbg !4361
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4362

if.then5:                                         ; preds = %if.end
  br label %while.end, !dbg !4363

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %data.addr, align 8, !dbg !4364
  %8 = load i8, i8* %7, align 1, !dbg !4365
  %conv = zext i8 %8 to i32, !dbg !4365
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ], !dbg !4366

sw.bb:                                            ; preds = %if.end6
  br label %sw.epilog, !dbg !4367

sw.bb7:                                           ; preds = %if.end6
  %9 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4369
  %symlink_continues8 = getelementptr inbounds %struct.file_info, %struct.file_info* %9, i32 0, i32 31, !dbg !4370
  store i8 1, i8* %symlink_continues8, align 8, !dbg !4371
  br label %sw.epilog, !dbg !4372

sw.default:                                       ; preds = %if.end6
  br label %while.end, !dbg !4373

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb
  %10 = load i8*, i8** %data.addr, align 8, !dbg !4374
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4374
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !4374
  %11 = load i32, i32* %data_length.addr, align 4, !dbg !4375
  %dec = add nsw i32 %11, -1, !dbg !4375
  store i32 %dec, i32* %data_length.addr, align 4, !dbg !4375
  br label %while.cond, !dbg !4376

while.cond:                                       ; preds = %sw.epilog51, %sw.epilog
  %12 = load i32, i32* %data_length.addr, align 4, !dbg !4377
  %cmp9 = icmp sge i32 %12, 2, !dbg !4379
  br i1 %cmp9, label %while.body, label %while.end, !dbg !4380

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !4381, metadata !623), !dbg !4383
  %13 = load i8*, i8** %data.addr, align 8, !dbg !4384
  %incdec.ptr11 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !4384
  store i8* %incdec.ptr11, i8** %data.addr, align 8, !dbg !4384
  %14 = load i8, i8* %13, align 1, !dbg !4385
  store i8 %14, i8* %flag, align 1, !dbg !4383
  call void @llvm.dbg.declare(metadata i8* %nlen, metadata !4386, metadata !623), !dbg !4387
  %15 = load i8*, i8** %data.addr, align 8, !dbg !4388
  %incdec.ptr12 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !4388
  store i8* %incdec.ptr12, i8** %data.addr, align 8, !dbg !4388
  %16 = load i8, i8* %15, align 1, !dbg !4389
  store i8 %16, i8* %nlen, align 1, !dbg !4387
  %17 = load i32, i32* %data_length.addr, align 4, !dbg !4390
  %sub = sub nsw i32 %17, 2, !dbg !4390
  store i32 %sub, i32* %data_length.addr, align 4, !dbg !4390
  %18 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4391
  %symlink13 = getelementptr inbounds %struct.file_info, %struct.file_info* %18, i32 0, i32 30, !dbg !4392
  %19 = load i8*, i8** %separator, align 8, !dbg !4393
  %call = call %struct.archive_string* @archive_strcat(%struct.archive_string* %symlink13, i8* %19), !dbg !4394
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i8** %separator, align 8, !dbg !4395
  %20 = load i8, i8* %flag, align 1, !dbg !4396
  %conv14 = zext i8 %20 to i32, !dbg !4396
  switch i32 %conv14, label %sw.default50 [
    i32 0, label %sw.bb15
    i32 1, label %sw.bb24
    i32 2, label %sw.bb33
    i32 4, label %sw.bb36
    i32 8, label %sw.bb39
    i32 16, label %sw.bb42
    i32 32, label %sw.bb47
  ], !dbg !4397

sw.bb15:                                          ; preds = %while.body
  %21 = load i32, i32* %data_length.addr, align 4, !dbg !4398
  %22 = load i8, i8* %nlen, align 1, !dbg !4401
  %conv16 = zext i8 %22 to i32, !dbg !4401
  %cmp17 = icmp slt i32 %21, %conv16, !dbg !4402
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4403

if.then19:                                        ; preds = %sw.bb15
  br label %while.end, !dbg !4404

if.end20:                                         ; preds = %sw.bb15
  %23 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4405
  %symlink21 = getelementptr inbounds %struct.file_info, %struct.file_info* %23, i32 0, i32 30, !dbg !4406
  %24 = load i8*, i8** %data.addr, align 8, !dbg !4407
  %25 = load i8, i8* %nlen, align 1, !dbg !4408
  %conv22 = zext i8 %25 to i64, !dbg !4408
  %call23 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %symlink21, i8* %24, i64 %conv22), !dbg !4409
  br label %sw.epilog51, !dbg !4410

sw.bb24:                                          ; preds = %while.body
  %26 = load i32, i32* %data_length.addr, align 4, !dbg !4411
  %27 = load i8, i8* %nlen, align 1, !dbg !4413
  %conv25 = zext i8 %27 to i32, !dbg !4413
  %cmp26 = icmp slt i32 %26, %conv25, !dbg !4414
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !4415

if.then28:                                        ; preds = %sw.bb24
  br label %while.end, !dbg !4416

if.end29:                                         ; preds = %sw.bb24
  %28 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4417
  %symlink30 = getelementptr inbounds %struct.file_info, %struct.file_info* %28, i32 0, i32 30, !dbg !4418
  %29 = load i8*, i8** %data.addr, align 8, !dbg !4419
  %30 = load i8, i8* %nlen, align 1, !dbg !4420
  %conv31 = zext i8 %30 to i64, !dbg !4420
  %call32 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %symlink30, i8* %29, i64 %conv31), !dbg !4421
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i32 0, i32 0), i8** %separator, align 8, !dbg !4422
  br label %sw.epilog51, !dbg !4423

sw.bb33:                                          ; preds = %while.body
  %31 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4424
  %symlink34 = getelementptr inbounds %struct.file_info, %struct.file_info* %31, i32 0, i32 30, !dbg !4425
  %call35 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %symlink34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0)), !dbg !4426
  br label %sw.epilog51, !dbg !4427

sw.bb36:                                          ; preds = %while.body
  %32 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4428
  %symlink37 = getelementptr inbounds %struct.file_info, %struct.file_info* %32, i32 0, i32 30, !dbg !4429
  %call38 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %symlink37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0)), !dbg !4430
  br label %sw.epilog51, !dbg !4431

sw.bb39:                                          ; preds = %while.body
  %33 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4432
  %symlink40 = getelementptr inbounds %struct.file_info, %struct.file_info* %33, i32 0, i32 30, !dbg !4433
  %call41 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %symlink40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0)), !dbg !4434
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i32 0, i32 0), i8** %separator, align 8, !dbg !4435
  br label %sw.epilog51, !dbg !4436

sw.bb42:                                          ; preds = %while.body
  %34 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4437
  %symlink43 = getelementptr inbounds %struct.file_info, %struct.file_info* %34, i32 0, i32 30, !dbg !4437
  %length44 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink43, i32 0, i32 1, !dbg !4437
  store i64 0, i64* %length44, align 8, !dbg !4437
  %35 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4438
  %symlink45 = getelementptr inbounds %struct.file_info, %struct.file_info* %35, i32 0, i32 30, !dbg !4439
  %call46 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %symlink45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0)), !dbg !4440
  br label %sw.epilog51, !dbg !4441

sw.bb47:                                          ; preds = %while.body
  %36 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4442
  %symlink48 = getelementptr inbounds %struct.file_info, %struct.file_info* %36, i32 0, i32 30, !dbg !4443
  %call49 = call %struct.archive_string* @archive_strcat(%struct.archive_string* %symlink48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0)), !dbg !4444
  br label %sw.epilog51, !dbg !4445

sw.default50:                                     ; preds = %while.body
  br label %while.end, !dbg !4446

sw.epilog51:                                      ; preds = %sw.bb47, %sw.bb42, %sw.bb39, %sw.bb36, %sw.bb33, %if.end29, %if.end20
  %37 = load i8, i8* %nlen, align 1, !dbg !4447
  %conv52 = zext i8 %37 to i32, !dbg !4447
  %38 = load i8*, i8** %data.addr, align 8, !dbg !4448
  %idx.ext = sext i32 %conv52 to i64, !dbg !4448
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %idx.ext, !dbg !4448
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !4448
  %39 = load i8, i8* %nlen, align 1, !dbg !4449
  %conv53 = zext i8 %39 to i32, !dbg !4449
  %40 = load i32, i32* %data_length.addr, align 4, !dbg !4450
  %sub54 = sub nsw i32 %40, %conv53, !dbg !4450
  store i32 %sub54, i32* %data_length.addr, align 4, !dbg !4450
  br label %while.cond, !dbg !4451

while.end:                                        ; preds = %if.then5, %sw.default, %if.then19, %if.then28, %sw.default50, %while.cond
  ret void, !dbg !4453
}

; Function Attrs: nounwind uwtable
define internal void @parse_rockridge_TF1(%struct.file_info* %file, i8* %data, i32 %data_length) #0 !dbg !563 {
entry:
  %file.addr = alloca %struct.file_info*, align 8
  %data.addr = alloca i8*, align 8
  %data_length.addr = alloca i32, align 4
  %flag = alloca i8, align 1
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !4454, metadata !623), !dbg !4455
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4456, metadata !623), !dbg !4457
  store i32 %data_length, i32* %data_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_length.addr, metadata !4458, metadata !623), !dbg !4459
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !4460, metadata !623), !dbg !4461
  %0 = load i32, i32* %data_length.addr, align 4, !dbg !4462
  %cmp = icmp slt i32 %0, 1, !dbg !4464
  br i1 %cmp, label %if.then, label %if.end, !dbg !4465

if.then:                                          ; preds = %entry
  br label %if.end87, !dbg !4466

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %data.addr, align 8, !dbg !4467
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !4467
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4467
  store i8 %2, i8* %flag, align 1, !dbg !4468
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4469
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4469
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !4469
  %4 = load i32, i32* %data_length.addr, align 4, !dbg !4470
  %dec = add nsw i32 %4, -1, !dbg !4470
  store i32 %dec, i32* %data_length.addr, align 4, !dbg !4470
  %5 = load i8, i8* %flag, align 1, !dbg !4471
  %conv = sext i8 %5 to i32, !dbg !4471
  %and = and i32 %conv, 128, !dbg !4473
  %tobool = icmp ne i32 %and, 0, !dbg !4473
  br i1 %tobool, label %if.then1, label %if.else, !dbg !4474

if.then1:                                         ; preds = %if.end
  %6 = load i8, i8* %flag, align 1, !dbg !4475
  %conv2 = sext i8 %6 to i32, !dbg !4475
  %and3 = and i32 %conv2, 1, !dbg !4478
  %tobool4 = icmp ne i32 %and3, 0, !dbg !4478
  br i1 %tobool4, label %land.lhs.true, label %if.end8, !dbg !4479

land.lhs.true:                                    ; preds = %if.then1
  %7 = load i32, i32* %data_length.addr, align 4, !dbg !4480
  %cmp5 = icmp sge i32 %7, 17, !dbg !4482
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4483

if.then7:                                         ; preds = %land.lhs.true
  %8 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4484
  %birthtime_is_set = getelementptr inbounds %struct.file_info, %struct.file_info* %8, i32 0, i32 15, !dbg !4486
  store i32 1, i32* %birthtime_is_set, align 8, !dbg !4487
  %9 = load i8*, i8** %data.addr, align 8, !dbg !4488
  %call = call i64 @isodate17(i8* %9), !dbg !4489
  %10 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4490
  %birthtime = getelementptr inbounds %struct.file_info, %struct.file_info* %10, i32 0, i32 16, !dbg !4491
  store i64 %call, i64* %birthtime, align 8, !dbg !4492
  %11 = load i8*, i8** %data.addr, align 8, !dbg !4493
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 17, !dbg !4493
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !4493
  %12 = load i32, i32* %data_length.addr, align 4, !dbg !4494
  %sub = sub nsw i32 %12, 17, !dbg !4494
  store i32 %sub, i32* %data_length.addr, align 4, !dbg !4494
  br label %if.end8, !dbg !4495

if.end8:                                          ; preds = %if.then7, %land.lhs.true, %if.then1
  %13 = load i8, i8* %flag, align 1, !dbg !4496
  %conv9 = sext i8 %13 to i32, !dbg !4496
  %and10 = and i32 %conv9, 2, !dbg !4498
  %tobool11 = icmp ne i32 %and10, 0, !dbg !4498
  br i1 %tobool11, label %land.lhs.true12, label %if.end19, !dbg !4499

land.lhs.true12:                                  ; preds = %if.end8
  %14 = load i32, i32* %data_length.addr, align 4, !dbg !4500
  %cmp13 = icmp sge i32 %14, 17, !dbg !4502
  br i1 %cmp13, label %if.then15, label %if.end19, !dbg !4503

if.then15:                                        ; preds = %land.lhs.true12
  %15 = load i8*, i8** %data.addr, align 8, !dbg !4504
  %call16 = call i64 @isodate17(i8* %15), !dbg !4506
  %16 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4507
  %mtime = getelementptr inbounds %struct.file_info, %struct.file_info* %16, i32 0, i32 17, !dbg !4508
  store i64 %call16, i64* %mtime, align 8, !dbg !4509
  %17 = load i8*, i8** %data.addr, align 8, !dbg !4510
  %add.ptr17 = getelementptr inbounds i8, i8* %17, i64 17, !dbg !4510
  store i8* %add.ptr17, i8** %data.addr, align 8, !dbg !4510
  %18 = load i32, i32* %data_length.addr, align 4, !dbg !4511
  %sub18 = sub nsw i32 %18, 17, !dbg !4511
  store i32 %sub18, i32* %data_length.addr, align 4, !dbg !4511
  br label %if.end19, !dbg !4512

if.end19:                                         ; preds = %if.then15, %land.lhs.true12, %if.end8
  %19 = load i8, i8* %flag, align 1, !dbg !4513
  %conv20 = sext i8 %19 to i32, !dbg !4513
  %and21 = and i32 %conv20, 4, !dbg !4515
  %tobool22 = icmp ne i32 %and21, 0, !dbg !4515
  br i1 %tobool22, label %land.lhs.true23, label %if.end30, !dbg !4516

land.lhs.true23:                                  ; preds = %if.end19
  %20 = load i32, i32* %data_length.addr, align 4, !dbg !4517
  %cmp24 = icmp sge i32 %20, 17, !dbg !4519
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !4520

if.then26:                                        ; preds = %land.lhs.true23
  %21 = load i8*, i8** %data.addr, align 8, !dbg !4521
  %call27 = call i64 @isodate17(i8* %21), !dbg !4523
  %22 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4524
  %atime = getelementptr inbounds %struct.file_info, %struct.file_info* %22, i32 0, i32 18, !dbg !4525
  store i64 %call27, i64* %atime, align 8, !dbg !4526
  %23 = load i8*, i8** %data.addr, align 8, !dbg !4527
  %add.ptr28 = getelementptr inbounds i8, i8* %23, i64 17, !dbg !4527
  store i8* %add.ptr28, i8** %data.addr, align 8, !dbg !4527
  %24 = load i32, i32* %data_length.addr, align 4, !dbg !4528
  %sub29 = sub nsw i32 %24, 17, !dbg !4528
  store i32 %sub29, i32* %data_length.addr, align 4, !dbg !4528
  br label %if.end30, !dbg !4529

if.end30:                                         ; preds = %if.then26, %land.lhs.true23, %if.end19
  %25 = load i8, i8* %flag, align 1, !dbg !4530
  %conv31 = sext i8 %25 to i32, !dbg !4530
  %and32 = and i32 %conv31, 8, !dbg !4532
  %tobool33 = icmp ne i32 %and32, 0, !dbg !4532
  br i1 %tobool33, label %land.lhs.true34, label %if.end39, !dbg !4533

land.lhs.true34:                                  ; preds = %if.end30
  %26 = load i32, i32* %data_length.addr, align 4, !dbg !4534
  %cmp35 = icmp sge i32 %26, 17, !dbg !4536
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !4537

if.then37:                                        ; preds = %land.lhs.true34
  %27 = load i8*, i8** %data.addr, align 8, !dbg !4538
  %call38 = call i64 @isodate17(i8* %27), !dbg !4540
  %28 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4541
  %ctime = getelementptr inbounds %struct.file_info, %struct.file_info* %28, i32 0, i32 19, !dbg !4542
  store i64 %call38, i64* %ctime, align 8, !dbg !4543
  br label %if.end39, !dbg !4544

if.end39:                                         ; preds = %if.then37, %land.lhs.true34, %if.end30
  br label %if.end87, !dbg !4545

if.else:                                          ; preds = %if.end
  %29 = load i8, i8* %flag, align 1, !dbg !4546
  %conv40 = sext i8 %29 to i32, !dbg !4546
  %and41 = and i32 %conv40, 1, !dbg !4549
  %tobool42 = icmp ne i32 %and41, 0, !dbg !4549
  br i1 %tobool42, label %land.lhs.true43, label %if.end52, !dbg !4550

land.lhs.true43:                                  ; preds = %if.else
  %30 = load i32, i32* %data_length.addr, align 4, !dbg !4551
  %cmp44 = icmp sge i32 %30, 7, !dbg !4553
  br i1 %cmp44, label %if.then46, label %if.end52, !dbg !4554

if.then46:                                        ; preds = %land.lhs.true43
  %31 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4555
  %birthtime_is_set47 = getelementptr inbounds %struct.file_info, %struct.file_info* %31, i32 0, i32 15, !dbg !4557
  store i32 1, i32* %birthtime_is_set47, align 8, !dbg !4558
  %32 = load i8*, i8** %data.addr, align 8, !dbg !4559
  %call48 = call i64 @isodate7(i8* %32), !dbg !4560
  %33 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4561
  %birthtime49 = getelementptr inbounds %struct.file_info, %struct.file_info* %33, i32 0, i32 16, !dbg !4562
  store i64 %call48, i64* %birthtime49, align 8, !dbg !4563
  %34 = load i8*, i8** %data.addr, align 8, !dbg !4564
  %add.ptr50 = getelementptr inbounds i8, i8* %34, i64 7, !dbg !4564
  store i8* %add.ptr50, i8** %data.addr, align 8, !dbg !4564
  %35 = load i32, i32* %data_length.addr, align 4, !dbg !4565
  %sub51 = sub nsw i32 %35, 7, !dbg !4565
  store i32 %sub51, i32* %data_length.addr, align 4, !dbg !4565
  br label %if.end52, !dbg !4566

if.end52:                                         ; preds = %if.then46, %land.lhs.true43, %if.else
  %36 = load i8, i8* %flag, align 1, !dbg !4567
  %conv53 = sext i8 %36 to i32, !dbg !4567
  %and54 = and i32 %conv53, 2, !dbg !4569
  %tobool55 = icmp ne i32 %and54, 0, !dbg !4569
  br i1 %tobool55, label %land.lhs.true56, label %if.end64, !dbg !4570

land.lhs.true56:                                  ; preds = %if.end52
  %37 = load i32, i32* %data_length.addr, align 4, !dbg !4571
  %cmp57 = icmp sge i32 %37, 7, !dbg !4573
  br i1 %cmp57, label %if.then59, label %if.end64, !dbg !4574

if.then59:                                        ; preds = %land.lhs.true56
  %38 = load i8*, i8** %data.addr, align 8, !dbg !4575
  %call60 = call i64 @isodate7(i8* %38), !dbg !4577
  %39 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4578
  %mtime61 = getelementptr inbounds %struct.file_info, %struct.file_info* %39, i32 0, i32 17, !dbg !4579
  store i64 %call60, i64* %mtime61, align 8, !dbg !4580
  %40 = load i8*, i8** %data.addr, align 8, !dbg !4581
  %add.ptr62 = getelementptr inbounds i8, i8* %40, i64 7, !dbg !4581
  store i8* %add.ptr62, i8** %data.addr, align 8, !dbg !4581
  %41 = load i32, i32* %data_length.addr, align 4, !dbg !4582
  %sub63 = sub nsw i32 %41, 7, !dbg !4582
  store i32 %sub63, i32* %data_length.addr, align 4, !dbg !4582
  br label %if.end64, !dbg !4583

if.end64:                                         ; preds = %if.then59, %land.lhs.true56, %if.end52
  %42 = load i8, i8* %flag, align 1, !dbg !4584
  %conv65 = sext i8 %42 to i32, !dbg !4584
  %and66 = and i32 %conv65, 4, !dbg !4586
  %tobool67 = icmp ne i32 %and66, 0, !dbg !4586
  br i1 %tobool67, label %land.lhs.true68, label %if.end76, !dbg !4587

land.lhs.true68:                                  ; preds = %if.end64
  %43 = load i32, i32* %data_length.addr, align 4, !dbg !4588
  %cmp69 = icmp sge i32 %43, 7, !dbg !4590
  br i1 %cmp69, label %if.then71, label %if.end76, !dbg !4591

if.then71:                                        ; preds = %land.lhs.true68
  %44 = load i8*, i8** %data.addr, align 8, !dbg !4592
  %call72 = call i64 @isodate7(i8* %44), !dbg !4594
  %45 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4595
  %atime73 = getelementptr inbounds %struct.file_info, %struct.file_info* %45, i32 0, i32 18, !dbg !4596
  store i64 %call72, i64* %atime73, align 8, !dbg !4597
  %46 = load i8*, i8** %data.addr, align 8, !dbg !4598
  %add.ptr74 = getelementptr inbounds i8, i8* %46, i64 7, !dbg !4598
  store i8* %add.ptr74, i8** %data.addr, align 8, !dbg !4598
  %47 = load i32, i32* %data_length.addr, align 4, !dbg !4599
  %sub75 = sub nsw i32 %47, 7, !dbg !4599
  store i32 %sub75, i32* %data_length.addr, align 4, !dbg !4599
  br label %if.end76, !dbg !4600

if.end76:                                         ; preds = %if.then71, %land.lhs.true68, %if.end64
  %48 = load i8, i8* %flag, align 1, !dbg !4601
  %conv77 = sext i8 %48 to i32, !dbg !4601
  %and78 = and i32 %conv77, 8, !dbg !4603
  %tobool79 = icmp ne i32 %and78, 0, !dbg !4603
  br i1 %tobool79, label %land.lhs.true80, label %if.end86, !dbg !4604

land.lhs.true80:                                  ; preds = %if.end76
  %49 = load i32, i32* %data_length.addr, align 4, !dbg !4605
  %cmp81 = icmp sge i32 %49, 7, !dbg !4607
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !4608

if.then83:                                        ; preds = %land.lhs.true80
  %50 = load i8*, i8** %data.addr, align 8, !dbg !4609
  %call84 = call i64 @isodate7(i8* %50), !dbg !4611
  %51 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4612
  %ctime85 = getelementptr inbounds %struct.file_info, %struct.file_info* %51, i32 0, i32 19, !dbg !4613
  store i64 %call84, i64* %ctime85, align 8, !dbg !4614
  br label %if.end86, !dbg !4615

if.end86:                                         ; preds = %if.then83, %land.lhs.true80, %if.end76
  br label %if.end87

if.end87:                                         ; preds = %if.then, %if.end86, %if.end39
  ret void, !dbg !4616
}

; Function Attrs: nounwind uwtable
define internal void @parse_rockridge_ZF1(%struct.file_info* %file, i8* %data, i32 %data_length) #0 !dbg !565 {
entry:
  %file.addr = alloca %struct.file_info*, align 8
  %data.addr = alloca i8*, align 8
  %data_length.addr = alloca i32, align 4
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !4617, metadata !623), !dbg !4618
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4619, metadata !623), !dbg !4620
  store i32 %data_length, i32* %data_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_length.addr, metadata !4621, metadata !623), !dbg !4622
  %0 = load i8*, i8** %data.addr, align 8, !dbg !4623
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !4623
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4623
  %conv = zext i8 %1 to i32, !dbg !4623
  %cmp = icmp eq i32 %conv, 112, !dbg !4625
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4626

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %data.addr, align 8, !dbg !4627
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !4627
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !4627
  %conv3 = zext i8 %3 to i32, !dbg !4627
  %cmp4 = icmp eq i32 %conv3, 122, !dbg !4629
  br i1 %cmp4, label %land.lhs.true6, label %if.end, !dbg !4630

land.lhs.true6:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %data_length.addr, align 4, !dbg !4631
  %cmp7 = icmp eq i32 %4, 12, !dbg !4633
  br i1 %cmp7, label %if.then, label %if.end, !dbg !4634

if.then:                                          ; preds = %land.lhs.true6
  %5 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4635
  %pz = getelementptr inbounds %struct.file_info, %struct.file_info* %5, i32 0, i32 32, !dbg !4637
  store i32 1, i32* %pz, align 4, !dbg !4638
  %6 = load i8*, i8** %data.addr, align 8, !dbg !4639
  %arrayidx9 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !4639
  %7 = load i8, i8* %arrayidx9, align 1, !dbg !4639
  %conv10 = zext i8 %7 to i32, !dbg !4639
  %8 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4640
  %pz_log2_bs = getelementptr inbounds %struct.file_info, %struct.file_info* %8, i32 0, i32 33, !dbg !4641
  store i32 %conv10, i32* %pz_log2_bs, align 8, !dbg !4642
  %9 = load i8*, i8** %data.addr, align 8, !dbg !4643
  %arrayidx11 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !4643
  %call = call i32 @archive_le32dec(i8* %arrayidx11), !dbg !4644
  %conv12 = zext i32 %call to i64, !dbg !4644
  %10 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !4645
  %pz_uncompressed_size = getelementptr inbounds %struct.file_info, %struct.file_info* %10, i32 0, i32 34, !dbg !4646
  store i64 %conv12, i64* %pz_uncompressed_size, align 8, !dbg !4647
  br label %if.end, !dbg !4648

if.end:                                           ; preds = %if.then, %land.lhs.true6, %land.lhs.true, %entry
  ret void, !dbg !4649
}

declare %struct.archive_string* @archive_strcat(%struct.archive_string*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i64 @isodate17(i8* %v) #0 !dbg !564 {
entry:
  %retval = alloca i64, align 8
  %v.addr = alloca i8*, align 8
  %tm = alloca %struct.tm, align 8
  %offset = alloca i32, align 4
  %t = alloca i64, align 8
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !4650, metadata !623), !dbg !4651
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !4652, metadata !623), !dbg !4653
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4654, metadata !623), !dbg !4655
  call void @llvm.dbg.declare(metadata i64* %t, metadata !4656, metadata !623), !dbg !4657
  %0 = bitcast %struct.tm* %tm to i8*, !dbg !4658
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 56, i32 8, i1 false), !dbg !4658
  %1 = load i8*, i8** %v.addr, align 8, !dbg !4659
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !4659
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4659
  %conv = zext i8 %2 to i32, !dbg !4659
  %sub = sub nsw i32 %conv, 48, !dbg !4660
  %mul = mul nsw i32 %sub, 1000, !dbg !4661
  %3 = load i8*, i8** %v.addr, align 8, !dbg !4662
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !4662
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !4662
  %conv2 = zext i8 %4 to i32, !dbg !4662
  %sub3 = sub nsw i32 %conv2, 48, !dbg !4663
  %mul4 = mul nsw i32 %sub3, 100, !dbg !4664
  %add = add nsw i32 %mul, %mul4, !dbg !4665
  %5 = load i8*, i8** %v.addr, align 8, !dbg !4666
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 2, !dbg !4666
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !4666
  %conv6 = zext i8 %6 to i32, !dbg !4666
  %sub7 = sub nsw i32 %conv6, 48, !dbg !4667
  %mul8 = mul nsw i32 %sub7, 10, !dbg !4668
  %add9 = add nsw i32 %add, %mul8, !dbg !4669
  %7 = load i8*, i8** %v.addr, align 8, !dbg !4670
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 3, !dbg !4670
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !4670
  %conv11 = zext i8 %8 to i32, !dbg !4670
  %sub12 = sub nsw i32 %conv11, 48, !dbg !4671
  %add13 = add nsw i32 %add9, %sub12, !dbg !4672
  %sub14 = sub nsw i32 %add13, 1900, !dbg !4673
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !4674
  store i32 %sub14, i32* %tm_year, align 4, !dbg !4675
  %9 = load i8*, i8** %v.addr, align 8, !dbg !4676
  %arrayidx15 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !4676
  %10 = load i8, i8* %arrayidx15, align 1, !dbg !4676
  %conv16 = zext i8 %10 to i32, !dbg !4676
  %sub17 = sub nsw i32 %conv16, 48, !dbg !4677
  %mul18 = mul nsw i32 %sub17, 10, !dbg !4678
  %11 = load i8*, i8** %v.addr, align 8, !dbg !4679
  %arrayidx19 = getelementptr inbounds i8, i8* %11, i64 5, !dbg !4679
  %12 = load i8, i8* %arrayidx19, align 1, !dbg !4679
  %conv20 = zext i8 %12 to i32, !dbg !4679
  %sub21 = sub nsw i32 %conv20, 48, !dbg !4680
  %add22 = add nsw i32 %mul18, %sub21, !dbg !4681
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !4682
  store i32 %add22, i32* %tm_mon, align 8, !dbg !4683
  %13 = load i8*, i8** %v.addr, align 8, !dbg !4684
  %arrayidx23 = getelementptr inbounds i8, i8* %13, i64 6, !dbg !4684
  %14 = load i8, i8* %arrayidx23, align 1, !dbg !4684
  %conv24 = zext i8 %14 to i32, !dbg !4684
  %sub25 = sub nsw i32 %conv24, 48, !dbg !4685
  %mul26 = mul nsw i32 %sub25, 10, !dbg !4686
  %15 = load i8*, i8** %v.addr, align 8, !dbg !4687
  %arrayidx27 = getelementptr inbounds i8, i8* %15, i64 7, !dbg !4687
  %16 = load i8, i8* %arrayidx27, align 1, !dbg !4687
  %conv28 = zext i8 %16 to i32, !dbg !4687
  %sub29 = sub nsw i32 %conv28, 48, !dbg !4688
  %add30 = add nsw i32 %mul26, %sub29, !dbg !4689
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3, !dbg !4690
  store i32 %add30, i32* %tm_mday, align 4, !dbg !4691
  %17 = load i8*, i8** %v.addr, align 8, !dbg !4692
  %arrayidx31 = getelementptr inbounds i8, i8* %17, i64 8, !dbg !4692
  %18 = load i8, i8* %arrayidx31, align 1, !dbg !4692
  %conv32 = zext i8 %18 to i32, !dbg !4692
  %sub33 = sub nsw i32 %conv32, 48, !dbg !4693
  %mul34 = mul nsw i32 %sub33, 10, !dbg !4694
  %19 = load i8*, i8** %v.addr, align 8, !dbg !4695
  %arrayidx35 = getelementptr inbounds i8, i8* %19, i64 9, !dbg !4695
  %20 = load i8, i8* %arrayidx35, align 1, !dbg !4695
  %conv36 = zext i8 %20 to i32, !dbg !4695
  %sub37 = sub nsw i32 %conv36, 48, !dbg !4696
  %add38 = add nsw i32 %mul34, %sub37, !dbg !4697
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !4698
  store i32 %add38, i32* %tm_hour, align 8, !dbg !4699
  %21 = load i8*, i8** %v.addr, align 8, !dbg !4700
  %arrayidx39 = getelementptr inbounds i8, i8* %21, i64 10, !dbg !4700
  %22 = load i8, i8* %arrayidx39, align 1, !dbg !4700
  %conv40 = zext i8 %22 to i32, !dbg !4700
  %sub41 = sub nsw i32 %conv40, 48, !dbg !4701
  %mul42 = mul nsw i32 %sub41, 10, !dbg !4702
  %23 = load i8*, i8** %v.addr, align 8, !dbg !4703
  %arrayidx43 = getelementptr inbounds i8, i8* %23, i64 11, !dbg !4703
  %24 = load i8, i8* %arrayidx43, align 1, !dbg !4703
  %conv44 = zext i8 %24 to i32, !dbg !4703
  %sub45 = sub nsw i32 %conv44, 48, !dbg !4704
  %add46 = add nsw i32 %mul42, %sub45, !dbg !4705
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !4706
  store i32 %add46, i32* %tm_min, align 4, !dbg !4707
  %25 = load i8*, i8** %v.addr, align 8, !dbg !4708
  %arrayidx47 = getelementptr inbounds i8, i8* %25, i64 12, !dbg !4708
  %26 = load i8, i8* %arrayidx47, align 1, !dbg !4708
  %conv48 = zext i8 %26 to i32, !dbg !4708
  %sub49 = sub nsw i32 %conv48, 48, !dbg !4709
  %mul50 = mul nsw i32 %sub49, 10, !dbg !4710
  %27 = load i8*, i8** %v.addr, align 8, !dbg !4711
  %arrayidx51 = getelementptr inbounds i8, i8* %27, i64 13, !dbg !4711
  %28 = load i8, i8* %arrayidx51, align 1, !dbg !4711
  %conv52 = zext i8 %28 to i32, !dbg !4711
  %sub53 = sub nsw i32 %conv52, 48, !dbg !4712
  %add54 = add nsw i32 %mul50, %sub53, !dbg !4713
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0, !dbg !4714
  store i32 %add54, i32* %tm_sec, align 8, !dbg !4715
  %29 = load i8*, i8** %v.addr, align 8, !dbg !4716
  %arrayidx55 = getelementptr inbounds i8, i8* %29, i64 16, !dbg !4717
  %30 = load i8, i8* %arrayidx55, align 1, !dbg !4717
  %conv56 = sext i8 %30 to i32, !dbg !4717
  store i32 %conv56, i32* %offset, align 4, !dbg !4718
  %31 = load i32, i32* %offset, align 4, !dbg !4719
  %cmp = icmp sgt i32 %31, -48, !dbg !4721
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4722

land.lhs.true:                                    ; preds = %entry
  %32 = load i32, i32* %offset, align 4, !dbg !4723
  %cmp58 = icmp slt i32 %32, 52, !dbg !4725
  br i1 %cmp58, label %if.then, label %if.end, !dbg !4726

if.then:                                          ; preds = %land.lhs.true
  %33 = load i32, i32* %offset, align 4, !dbg !4727
  %div = sdiv i32 %33, 4, !dbg !4729
  %tm_hour60 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !4730
  %34 = load i32, i32* %tm_hour60, align 8, !dbg !4731
  %sub61 = sub nsw i32 %34, %div, !dbg !4731
  store i32 %sub61, i32* %tm_hour60, align 8, !dbg !4731
  %35 = load i32, i32* %offset, align 4, !dbg !4732
  %rem = srem i32 %35, 4, !dbg !4733
  %mul62 = mul nsw i32 %rem, 15, !dbg !4734
  %tm_min63 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !4735
  %36 = load i32, i32* %tm_min63, align 4, !dbg !4736
  %sub64 = sub nsw i32 %36, %mul62, !dbg !4736
  store i32 %sub64, i32* %tm_min63, align 4, !dbg !4736
  br label %if.end, !dbg !4737

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call = call i64 @time_from_tm(%struct.tm* %tm), !dbg !4738
  store i64 %call, i64* %t, align 8, !dbg !4739
  %37 = load i64, i64* %t, align 8, !dbg !4740
  %cmp65 = icmp eq i64 %37, -1, !dbg !4742
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !4743

if.then67:                                        ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !4744
  br label %return, !dbg !4744

if.end68:                                         ; preds = %if.end
  %38 = load i64, i64* %t, align 8, !dbg !4745
  store i64 %38, i64* %retval, align 8, !dbg !4746
  br label %return, !dbg !4746

return:                                           ; preds = %if.end68, %if.then67
  %39 = load i64, i64* %retval, align 8, !dbg !4747
  ret i64 %39, !dbg !4747
}

; Function Attrs: nounwind uwtable
define internal i32 @next_cache_entry(%struct.archive_read* %a, %struct.iso9660* %iso9660, %struct.file_info** %pfile) #0 !dbg !576 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %pfile.addr = alloca %struct.file_info**, align 8
  %file = alloca %struct.file_info*, align 8
  %empty_files = alloca %struct.anon.4, align 8
  %number = alloca i64, align 8
  %count = alloca i32, align 4
  %re = alloca %struct.file_info*, align 8
  %d = alloca %struct.file_info*, align 8
  %first_re = alloca %struct.file_info*, align 8
  %nexted_re = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !4748, metadata !623), !dbg !4749
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !4750, metadata !623), !dbg !4751
  store %struct.file_info** %pfile, %struct.file_info*** %pfile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info*** %pfile.addr, metadata !4752, metadata !623), !dbg !4753
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !4754, metadata !623), !dbg !4755
  call void @llvm.dbg.declare(metadata %struct.anon.4* %empty_files, metadata !4756, metadata !623), !dbg !4761
  call void @llvm.dbg.declare(metadata i64* %number, metadata !4762, metadata !623), !dbg !4763
  call void @llvm.dbg.declare(metadata i32* %count, metadata !4764, metadata !623), !dbg !4765
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4766
  %call = call %struct.file_info* @cache_get_entry(%struct.iso9660* %0), !dbg !4767
  store %struct.file_info* %call, %struct.file_info** %file, align 8, !dbg !4768
  %1 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4769
  %cmp = icmp ne %struct.file_info* %1, null, !dbg !4771
  br i1 %cmp, label %if.then, label %if.end, !dbg !4772

if.then:                                          ; preds = %entry
  %2 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4773
  %3 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !4775
  store %struct.file_info* %2, %struct.file_info** %3, align 8, !dbg !4776
  store i32 0, i32* %retval, align 4, !dbg !4777
  br label %return, !dbg !4777

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !4778

for.cond:                                         ; preds = %if.then104, %if.then96, %if.then91, %if.then75, %if.end
  call void @llvm.dbg.declare(metadata %struct.file_info** %re, metadata !4779, metadata !623), !dbg !4783
  call void @llvm.dbg.declare(metadata %struct.file_info** %d, metadata !4784, metadata !623), !dbg !4785
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4786
  %pending_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 13, !dbg !4786
  %call1 = call %struct.file_info* @heap_get_entry(%struct.heap_queue* %pending_files), !dbg !4786
  store %struct.file_info* %call1, %struct.file_info** %file, align 8, !dbg !4787
  %5 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !4788
  store %struct.file_info* %call1, %struct.file_info** %5, align 8, !dbg !4789
  %6 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4790
  %cmp2 = icmp eq %struct.file_info* %6, null, !dbg !4792
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !4793

if.then3:                                         ; preds = %for.cond
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4794
  %re_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 15, !dbg !4797
  %first = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files, i32 0, i32 0, !dbg !4798
  %8 = load %struct.file_info*, %struct.file_info** %first, align 8, !dbg !4798
  %cmp4 = icmp ne %struct.file_info* %8, null, !dbg !4799
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !4800

land.lhs.true:                                    ; preds = %if.then3
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4801
  %rr_moved = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 8, !dbg !4802
  %10 = load %struct.file_info*, %struct.file_info** %rr_moved, align 8, !dbg !4802
  %cmp5 = icmp ne %struct.file_info* %10, null, !dbg !4803
  br i1 %cmp5, label %land.lhs.true6, label %if.end10, !dbg !4804

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4805
  %rr_moved7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 8, !dbg !4806
  %12 = load %struct.file_info*, %struct.file_info** %rr_moved7, align 8, !dbg !4806
  %rr_moved_has_re_only = getelementptr inbounds %struct.file_info, %struct.file_info* %12, i32 0, i32 11, !dbg !4807
  %13 = load i8, i8* %rr_moved_has_re_only, align 1, !dbg !4807
  %conv = sext i8 %13 to i32, !dbg !4805
  %tobool = icmp ne i32 %conv, 0, !dbg !4805
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !4808

if.then8:                                         ; preds = %land.lhs.true6
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4810
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4811
  %rr_moved9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 8, !dbg !4812
  %16 = load %struct.file_info*, %struct.file_info** %rr_moved9, align 8, !dbg !4812
  call void @cache_add_entry(%struct.iso9660* %14, %struct.file_info* %16), !dbg !4813
  br label %if.end10, !dbg !4813

if.end10:                                         ; preds = %if.then8, %land.lhs.true6, %land.lhs.true, %if.then3
  br label %while.cond, !dbg !4814

while.cond:                                       ; preds = %while.end, %if.end10
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4815
  %call11 = call %struct.file_info* @re_get_entry(%struct.iso9660* %17), !dbg !4816
  store %struct.file_info* %call11, %struct.file_info** %re, align 8, !dbg !4817
  %cmp12 = icmp ne %struct.file_info* %call11, null, !dbg !4818
  br i1 %cmp12, label %while.body, label %while.end19, !dbg !4819

while.body:                                       ; preds = %while.cond
  br label %while.cond14, !dbg !4820

while.cond14:                                     ; preds = %while.body18, %while.body
  %18 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4822
  %call15 = call %struct.file_info* @rede_get_entry(%struct.file_info* %18), !dbg !4824
  store %struct.file_info* %call15, %struct.file_info** %d, align 8, !dbg !4825
  %cmp16 = icmp ne %struct.file_info* %call15, null, !dbg !4826
  br i1 %cmp16, label %while.body18, label %while.end, !dbg !4827

while.body18:                                     ; preds = %while.cond14
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4828
  %20 = load %struct.file_info*, %struct.file_info** %d, align 8, !dbg !4829
  call void @cache_add_entry(%struct.iso9660* %19, %struct.file_info* %20), !dbg !4830
  br label %while.cond14, !dbg !4831

while.end:                                        ; preds = %while.cond14
  br label %while.cond, !dbg !4833

while.end19:                                      ; preds = %while.cond
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4835
  %cache_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 14, !dbg !4837
  %first20 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files, i32 0, i32 0, !dbg !4838
  %22 = load %struct.file_info*, %struct.file_info** %first20, align 8, !dbg !4838
  %cmp21 = icmp ne %struct.file_info* %22, null, !dbg !4839
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !4840

if.then23:                                        ; preds = %while.end19
  %23 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4841
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4842
  %25 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !4843
  %call24 = call i32 @next_cache_entry(%struct.archive_read* %23, %struct.iso9660* %24, %struct.file_info** %25), !dbg !4844
  store i32 %call24, i32* %retval, align 4, !dbg !4845
  br label %return, !dbg !4845

if.end25:                                         ; preds = %while.end19
  store i32 1, i32* %retval, align 4, !dbg !4846
  br label %return, !dbg !4846

if.end26:                                         ; preds = %for.cond
  %26 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4847
  %cl_offset = getelementptr inbounds %struct.file_info, %struct.file_info* %26, i32 0, i32 14, !dbg !4849
  %27 = load i64, i64* %cl_offset, align 8, !dbg !4849
  %tobool27 = icmp ne i64 %27, 0, !dbg !4847
  br i1 %tobool27, label %if.then28, label %if.else77, !dbg !4850

if.then28:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata %struct.file_info** %first_re, metadata !4851, metadata !623), !dbg !4853
  store %struct.file_info* null, %struct.file_info** %first_re, align 8, !dbg !4853
  call void @llvm.dbg.declare(metadata i32* %nexted_re, metadata !4854, metadata !623), !dbg !4855
  store i32 0, i32* %nexted_re, align 4, !dbg !4855
  br label %while.cond29, !dbg !4856

while.cond29:                                     ; preds = %if.end72, %if.then28
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4857
  %call30 = call %struct.file_info* @re_get_entry(%struct.iso9660* %28), !dbg !4859
  store %struct.file_info* %call30, %struct.file_info** %re, align 8, !dbg !4860
  %29 = load %struct.file_info*, %struct.file_info** %first_re, align 8, !dbg !4861
  %cmp31 = icmp ne %struct.file_info* %call30, %29, !dbg !4862
  br i1 %cmp31, label %while.body33, label %while.end73, !dbg !4863

while.body33:                                     ; preds = %while.cond29
  %30 = load %struct.file_info*, %struct.file_info** %first_re, align 8, !dbg !4864
  %cmp34 = icmp eq %struct.file_info* %30, null, !dbg !4867
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !4868

if.then36:                                        ; preds = %while.body33
  %31 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4869
  store %struct.file_info* %31, %struct.file_info** %first_re, align 8, !dbg !4870
  br label %if.end37, !dbg !4871

if.end37:                                         ; preds = %if.then36, %while.body33
  %32 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4872
  %offset = getelementptr inbounds %struct.file_info, %struct.file_info* %32, i32 0, i32 6, !dbg !4874
  %33 = load i64, i64* %offset, align 8, !dbg !4874
  %34 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4875
  %cl_offset38 = getelementptr inbounds %struct.file_info, %struct.file_info* %34, i32 0, i32 14, !dbg !4876
  %35 = load i64, i64* %cl_offset38, align 8, !dbg !4876
  %cmp39 = icmp eq i64 %33, %35, !dbg !4877
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !4878

if.then41:                                        ; preds = %if.end37
  %36 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4879
  %parent = getelementptr inbounds %struct.file_info, %struct.file_info* %36, i32 0, i32 1, !dbg !4881
  %37 = load %struct.file_info*, %struct.file_info** %parent, align 8, !dbg !4881
  %subdirs = getelementptr inbounds %struct.file_info, %struct.file_info* %37, i32 0, i32 4, !dbg !4882
  %38 = load i32, i32* %subdirs, align 8, !dbg !4883
  %dec = add nsw i32 %38, -1, !dbg !4883
  store i32 %dec, i32* %subdirs, align 8, !dbg !4883
  %39 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4884
  %parent42 = getelementptr inbounds %struct.file_info, %struct.file_info* %39, i32 0, i32 1, !dbg !4885
  %40 = load %struct.file_info*, %struct.file_info** %parent42, align 8, !dbg !4885
  %41 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4886
  %parent43 = getelementptr inbounds %struct.file_info, %struct.file_info* %41, i32 0, i32 1, !dbg !4887
  store %struct.file_info* %40, %struct.file_info** %parent43, align 8, !dbg !4888
  %42 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4889
  %re44 = getelementptr inbounds %struct.file_info, %struct.file_info* %42, i32 0, i32 12, !dbg !4890
  store i8 0, i8* %re44, align 2, !dbg !4891
  %43 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4892
  %parent45 = getelementptr inbounds %struct.file_info, %struct.file_info* %43, i32 0, i32 1, !dbg !4894
  %44 = load %struct.file_info*, %struct.file_info** %parent45, align 8, !dbg !4894
  %re_descendant = getelementptr inbounds %struct.file_info, %struct.file_info* %44, i32 0, i32 13, !dbg !4895
  %45 = load i8, i8* %re_descendant, align 1, !dbg !4895
  %tobool46 = icmp ne i8 %45, 0, !dbg !4892
  br i1 %tobool46, label %if.then47, label %if.end65, !dbg !4896

if.then47:                                        ; preds = %if.then41
  store i32 1, i32* %nexted_re, align 4, !dbg !4897
  %46 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4899
  %re_descendant48 = getelementptr inbounds %struct.file_info, %struct.file_info* %46, i32 0, i32 13, !dbg !4900
  store i8 1, i8* %re_descendant48, align 1, !dbg !4901
  %47 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4902
  %call49 = call i32 @rede_add_entry(%struct.file_info* %47), !dbg !4904
  %cmp50 = icmp slt i32 %call49, 0, !dbg !4905
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !4906

if.then52:                                        ; preds = %if.then47
  br label %fatal_rr, !dbg !4907

if.end53:                                         ; preds = %if.then47
  br label %while.cond54, !dbg !4908

while.cond54:                                     ; preds = %if.end63, %if.end53
  %48 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4909
  %call55 = call %struct.file_info* @rede_get_entry(%struct.file_info* %48), !dbg !4910
  store %struct.file_info* %call55, %struct.file_info** %d, align 8, !dbg !4912
  %cmp56 = icmp ne %struct.file_info* %call55, null, !dbg !4913
  br i1 %cmp56, label %while.body58, label %while.end64, !dbg !4914

while.body58:                                     ; preds = %while.cond54
  %49 = load %struct.file_info*, %struct.file_info** %d, align 8, !dbg !4915
  %call59 = call i32 @rede_add_entry(%struct.file_info* %49), !dbg !4917
  %cmp60 = icmp slt i32 %call59, 0, !dbg !4918
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !4919

if.then62:                                        ; preds = %while.body58
  br label %fatal_rr, !dbg !4920

if.end63:                                         ; preds = %while.body58
  br label %while.cond54, !dbg !4921

while.end64:                                      ; preds = %while.cond54
  br label %while.end73, !dbg !4923

if.end65:                                         ; preds = %if.then41
  %50 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4924
  store %struct.file_info* %50, %struct.file_info** %file, align 8, !dbg !4925
  %51 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !4926
  store %struct.file_info* %50, %struct.file_info** %51, align 8, !dbg !4927
  br label %while.cond66, !dbg !4928

while.cond66:                                     ; preds = %while.body70, %if.end65
  %52 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4929
  %call67 = call %struct.file_info* @rede_get_entry(%struct.file_info* %52), !dbg !4930
  store %struct.file_info* %call67, %struct.file_info** %d, align 8, !dbg !4932
  %cmp68 = icmp ne %struct.file_info* %call67, null, !dbg !4933
  br i1 %cmp68, label %while.body70, label %while.end71, !dbg !4934

while.body70:                                     ; preds = %while.cond66
  %53 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4935
  %54 = load %struct.file_info*, %struct.file_info** %d, align 8, !dbg !4936
  call void @cache_add_entry(%struct.iso9660* %53, %struct.file_info* %54), !dbg !4937
  br label %while.cond66, !dbg !4938

while.end71:                                      ; preds = %while.cond66
  br label %while.end73, !dbg !4940

if.else:                                          ; preds = %if.end37
  %55 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4941
  %56 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !4942
  call void @re_add_entry(%struct.iso9660* %55, %struct.file_info* %56), !dbg !4943
  br label %if.end72

if.end72:                                         ; preds = %if.else
  br label %while.cond29, !dbg !4944

while.end73:                                      ; preds = %while.end71, %while.end64, %while.cond29
  %57 = load i32, i32* %nexted_re, align 4, !dbg !4946
  %tobool74 = icmp ne i32 %57, 0, !dbg !4946
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !4948

if.then75:                                        ; preds = %while.end73
  br label %for.cond, !dbg !4949

if.end76:                                         ; preds = %while.end73
  br label %if.end110, !dbg !4951

if.else77:                                        ; preds = %if.end26
  %58 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4952
  %mode = getelementptr inbounds %struct.file_info, %struct.file_info* %58, i32 0, i32 21, !dbg !4955
  %59 = load i32, i32* %mode, align 8, !dbg !4955
  %and = and i32 %59, 61440, !dbg !4956
  %cmp78 = icmp eq i32 %and, 16384, !dbg !4957
  br i1 %cmp78, label %if.then80, label %if.end109, !dbg !4958

if.then80:                                        ; preds = %if.else77
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4959, metadata !623), !dbg !4961
  %60 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !4962
  %61 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4963
  %call81 = call i32 @read_children(%struct.archive_read* %60, %struct.file_info* %61), !dbg !4964
  store i32 %call81, i32* %r, align 4, !dbg !4965
  %62 = load i32, i32* %r, align 4, !dbg !4966
  %cmp82 = icmp ne i32 %62, 0, !dbg !4968
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !4969

if.then84:                                        ; preds = %if.then80
  %63 = load i32, i32* %r, align 4, !dbg !4970
  store i32 %63, i32* %retval, align 4, !dbg !4971
  br label %return, !dbg !4971

if.end85:                                         ; preds = %if.then80
  %64 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4972
  %rr_moved86 = getelementptr inbounds %struct.file_info, %struct.file_info* %64, i32 0, i32 10, !dbg !4974
  %65 = load i8, i8* %rr_moved86, align 8, !dbg !4974
  %tobool87 = icmp ne i8 %65, 0, !dbg !4972
  br i1 %tobool87, label %if.then88, label %if.else93, !dbg !4975

if.then88:                                        ; preds = %if.end85
  %66 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4976
  %rr_moved_has_re_only89 = getelementptr inbounds %struct.file_info, %struct.file_info* %66, i32 0, i32 11, !dbg !4979
  %67 = load i8, i8* %rr_moved_has_re_only89, align 1, !dbg !4979
  %tobool90 = icmp ne i8 %67, 0, !dbg !4976
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !4980

if.then91:                                        ; preds = %if.then88
  br label %for.cond, !dbg !4981

if.end92:                                         ; preds = %if.then88
  br label %if.end108, !dbg !4982

if.else93:                                        ; preds = %if.end85
  %68 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4983
  %re94 = getelementptr inbounds %struct.file_info, %struct.file_info* %68, i32 0, i32 12, !dbg !4986
  %69 = load i8, i8* %re94, align 2, !dbg !4986
  %tobool95 = icmp ne i8 %69, 0, !dbg !4983
  br i1 %tobool95, label %if.then96, label %if.else97, !dbg !4983

if.then96:                                        ; preds = %if.else93
  %70 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !4987
  %71 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4989
  call void @re_add_entry(%struct.iso9660* %70, %struct.file_info* %71), !dbg !4990
  br label %for.cond, !dbg !4991

if.else97:                                        ; preds = %if.else93
  %72 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4992
  %re_descendant98 = getelementptr inbounds %struct.file_info, %struct.file_info* %72, i32 0, i32 13, !dbg !4994
  %73 = load i8, i8* %re_descendant98, align 1, !dbg !4994
  %tobool99 = icmp ne i8 %73, 0, !dbg !4992
  br i1 %tobool99, label %if.then100, label %if.end106, !dbg !4995

if.then100:                                       ; preds = %if.else97
  %74 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !4996
  %call101 = call i32 @rede_add_entry(%struct.file_info* %74), !dbg !4999
  %cmp102 = icmp eq i32 %call101, 0, !dbg !5000
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !5001

if.then104:                                       ; preds = %if.then100
  br label %for.cond, !dbg !5002

if.end105:                                        ; preds = %if.then100
  br label %if.end106, !dbg !5003

if.end106:                                        ; preds = %if.end105, %if.else97
  br label %if.end107

if.end107:                                        ; preds = %if.end106
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end92
  br label %if.end109, !dbg !5004

if.end109:                                        ; preds = %if.end108, %if.else77
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.end76
  br label %for.end, !dbg !5005

for.end:                                          ; preds = %if.end110
  %75 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5006
  %mode111 = getelementptr inbounds %struct.file_info, %struct.file_info* %75, i32 0, i32 21, !dbg !5008
  %76 = load i32, i32* %mode111, align 8, !dbg !5008
  %and112 = and i32 %76, 61440, !dbg !5009
  %cmp113 = icmp ne i32 %and112, 32768, !dbg !5010
  br i1 %cmp113, label %if.then118, label %lor.lhs.false, !dbg !5011

lor.lhs.false:                                    ; preds = %for.end
  %77 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5012
  %number115 = getelementptr inbounds %struct.file_info, %struct.file_info* %77, i32 0, i32 24, !dbg !5014
  %78 = load i64, i64* %number115, align 8, !dbg !5014
  %cmp116 = icmp eq i64 %78, -1, !dbg !5015
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !5016

if.then118:                                       ; preds = %lor.lhs.false, %for.end
  store i32 0, i32* %retval, align 4, !dbg !5017
  br label %return, !dbg !5017

if.end119:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %count, align 4, !dbg !5018
  %79 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5019
  %number120 = getelementptr inbounds %struct.file_info, %struct.file_info* %79, i32 0, i32 24, !dbg !5020
  %80 = load i64, i64* %number120, align 8, !dbg !5020
  store i64 %80, i64* %number, align 8, !dbg !5021
  %81 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5022
  %cache_files121 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %81, i32 0, i32 14, !dbg !5023
  %first122 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files121, i32 0, i32 0, !dbg !5024
  store %struct.file_info* null, %struct.file_info** %first122, align 8, !dbg !5025
  %82 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5026
  %cache_files123 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %82, i32 0, i32 14, !dbg !5027
  %first124 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files123, i32 0, i32 0, !dbg !5028
  %83 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5029
  %cache_files125 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %83, i32 0, i32 14, !dbg !5030
  %last = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files125, i32 0, i32 1, !dbg !5031
  store %struct.file_info** %first124, %struct.file_info*** %last, align 8, !dbg !5032
  %first126 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 0, !dbg !5033
  store %struct.file_info* null, %struct.file_info** %first126, align 8, !dbg !5034
  %first127 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 0, !dbg !5035
  %last128 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 1, !dbg !5036
  store %struct.file_info** %first127, %struct.file_info*** %last128, align 8, !dbg !5037
  br label %while.cond129, !dbg !5038

while.cond129:                                    ; preds = %if.end152, %if.end119
  %84 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5039
  %pending_files130 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %84, i32 0, i32 13, !dbg !5041
  %used = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %pending_files130, i32 0, i32 2, !dbg !5042
  %85 = load i32, i32* %used, align 4, !dbg !5042
  %cmp131 = icmp sgt i32 %85, 0, !dbg !5043
  br i1 %cmp131, label %land.rhs, label %land.end, !dbg !5044

land.rhs:                                         ; preds = %while.cond129
  %86 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5045
  %pending_files133 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %86, i32 0, i32 13, !dbg !5046
  %files = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %pending_files133, i32 0, i32 0, !dbg !5047
  %87 = load %struct.file_info**, %struct.file_info*** %files, align 8, !dbg !5047
  %arrayidx = getelementptr inbounds %struct.file_info*, %struct.file_info** %87, i64 0, !dbg !5045
  %88 = load %struct.file_info*, %struct.file_info** %arrayidx, align 8, !dbg !5045
  %number134 = getelementptr inbounds %struct.file_info, %struct.file_info* %88, i32 0, i32 24, !dbg !5048
  %89 = load i64, i64* %number134, align 8, !dbg !5048
  %cmp135 = icmp eq i64 %89, -1, !dbg !5049
  br i1 %cmp135, label %lor.end, label %lor.rhs, !dbg !5050

lor.rhs:                                          ; preds = %land.rhs
  %90 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5051
  %pending_files137 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %90, i32 0, i32 13, !dbg !5052
  %files138 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %pending_files137, i32 0, i32 0, !dbg !5053
  %91 = load %struct.file_info**, %struct.file_info*** %files138, align 8, !dbg !5053
  %arrayidx139 = getelementptr inbounds %struct.file_info*, %struct.file_info** %91, i64 0, !dbg !5051
  %92 = load %struct.file_info*, %struct.file_info** %arrayidx139, align 8, !dbg !5051
  %number140 = getelementptr inbounds %struct.file_info, %struct.file_info* %92, i32 0, i32 24, !dbg !5054
  %93 = load i64, i64* %number140, align 8, !dbg !5054
  %94 = load i64, i64* %number, align 8, !dbg !5055
  %cmp141 = icmp eq i64 %93, %94, !dbg !5056
  br label %lor.end, !dbg !5057

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %95 = phi i1 [ true, %land.rhs ], [ %cmp141, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond129
  %96 = phi i1 [ false, %while.cond129 ], [ %95, %lor.end ]
  br i1 %96, label %while.body143, label %while.end155, !dbg !5058

while.body143:                                    ; preds = %land.end
  %97 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5060
  %number144 = getelementptr inbounds %struct.file_info, %struct.file_info* %97, i32 0, i32 24, !dbg !5063
  %98 = load i64, i64* %number144, align 8, !dbg !5063
  %cmp145 = icmp eq i64 %98, -1, !dbg !5064
  br i1 %cmp145, label %if.then147, label %if.else151, !dbg !5065

if.then147:                                       ; preds = %while.body143
  %99 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5066
  %next = getelementptr inbounds %struct.file_info, %struct.file_info* %99, i32 0, i32 2, !dbg !5068
  store %struct.file_info* null, %struct.file_info** %next, align 8, !dbg !5069
  %100 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5070
  %last148 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 1, !dbg !5071
  %101 = load %struct.file_info**, %struct.file_info*** %last148, align 8, !dbg !5071
  store %struct.file_info* %100, %struct.file_info** %101, align 8, !dbg !5072
  %102 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5073
  %next149 = getelementptr inbounds %struct.file_info, %struct.file_info* %102, i32 0, i32 2, !dbg !5074
  %last150 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 1, !dbg !5075
  store %struct.file_info** %next149, %struct.file_info*** %last150, align 8, !dbg !5076
  br label %if.end152, !dbg !5077

if.else151:                                       ; preds = %while.body143
  %103 = load i32, i32* %count, align 4, !dbg !5078
  %inc = add nsw i32 %103, 1, !dbg !5078
  store i32 %inc, i32* %count, align 4, !dbg !5078
  %104 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5080
  %105 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5081
  call void @cache_add_entry(%struct.iso9660* %104, %struct.file_info* %105), !dbg !5082
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then147
  %106 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5083
  %pending_files153 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %106, i32 0, i32 13, !dbg !5083
  %call154 = call %struct.file_info* @heap_get_entry(%struct.heap_queue* %pending_files153), !dbg !5083
  store %struct.file_info* %call154, %struct.file_info** %file, align 8, !dbg !5084
  br label %while.cond129, !dbg !5085

while.end155:                                     ; preds = %land.end
  %107 = load i32, i32* %count, align 4, !dbg !5087
  %cmp156 = icmp eq i32 %107, 0, !dbg !5089
  br i1 %cmp156, label %if.then158, label %if.end161, !dbg !5090

if.then158:                                       ; preds = %while.end155
  %108 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5091
  %109 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !5093
  store %struct.file_info* %108, %struct.file_info** %109, align 8, !dbg !5094
  %110 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5095
  %cmp159 = icmp eq %struct.file_info* %110, null, !dbg !5096
  %cond = select i1 %cmp159, i32 1, i32 0, !dbg !5097
  store i32 %cond, i32* %retval, align 4, !dbg !5098
  br label %return, !dbg !5098

if.end161:                                        ; preds = %while.end155
  %111 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5099
  %number162 = getelementptr inbounds %struct.file_info, %struct.file_info* %111, i32 0, i32 24, !dbg !5101
  %112 = load i64, i64* %number162, align 8, !dbg !5101
  %cmp163 = icmp eq i64 %112, -1, !dbg !5102
  br i1 %cmp163, label %if.then165, label %if.else170, !dbg !5103

if.then165:                                       ; preds = %if.end161
  %113 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5104
  %next166 = getelementptr inbounds %struct.file_info, %struct.file_info* %113, i32 0, i32 2, !dbg !5106
  store %struct.file_info* null, %struct.file_info** %next166, align 8, !dbg !5107
  %114 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5108
  %last167 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 1, !dbg !5109
  %115 = load %struct.file_info**, %struct.file_info*** %last167, align 8, !dbg !5109
  store %struct.file_info* %114, %struct.file_info** %115, align 8, !dbg !5110
  %116 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5111
  %next168 = getelementptr inbounds %struct.file_info, %struct.file_info* %116, i32 0, i32 2, !dbg !5112
  %last169 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 1, !dbg !5113
  store %struct.file_info** %next168, %struct.file_info*** %last169, align 8, !dbg !5114
  br label %if.end172, !dbg !5115

if.else170:                                       ; preds = %if.end161
  %117 = load i32, i32* %count, align 4, !dbg !5116
  %inc171 = add nsw i32 %117, 1, !dbg !5116
  store i32 %inc171, i32* %count, align 4, !dbg !5116
  %118 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5118
  %119 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5119
  call void @cache_add_entry(%struct.iso9660* %118, %struct.file_info* %119), !dbg !5120
  br label %if.end172

if.end172:                                        ; preds = %if.else170, %if.then165
  %120 = load i32, i32* %count, align 4, !dbg !5121
  %cmp173 = icmp sgt i32 %120, 1, !dbg !5123
  br i1 %cmp173, label %if.then175, label %if.end183, !dbg !5124

if.then175:                                       ; preds = %if.end172
  %121 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5125
  %cache_files176 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %121, i32 0, i32 14, !dbg !5128
  %first177 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files176, i32 0, i32 0, !dbg !5129
  %122 = load %struct.file_info*, %struct.file_info** %first177, align 8, !dbg !5129
  store %struct.file_info* %122, %struct.file_info** %file, align 8, !dbg !5130
  br label %for.cond178, !dbg !5131

for.cond178:                                      ; preds = %for.inc, %if.then175
  %123 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5132
  %cmp179 = icmp ne %struct.file_info* %123, null, !dbg !5134
  br i1 %cmp179, label %for.body, label %for.end182, !dbg !5135

for.body:                                         ; preds = %for.cond178
  %124 = load i32, i32* %count, align 4, !dbg !5137
  %125 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5138
  %nlinks = getelementptr inbounds %struct.file_info, %struct.file_info* %125, i32 0, i32 25, !dbg !5139
  store i32 %124, i32* %nlinks, align 8, !dbg !5140
  br label %for.inc, !dbg !5138

for.inc:                                          ; preds = %for.body
  %126 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5141
  %next181 = getelementptr inbounds %struct.file_info, %struct.file_info* %126, i32 0, i32 2, !dbg !5143
  %127 = load %struct.file_info*, %struct.file_info** %next181, align 8, !dbg !5143
  store %struct.file_info* %127, %struct.file_info** %file, align 8, !dbg !5144
  br label %for.cond178, !dbg !5145

for.end182:                                       ; preds = %for.cond178
  br label %if.end183, !dbg !5147

if.end183:                                        ; preds = %for.end182, %if.end172
  %first184 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 0, !dbg !5148
  %128 = load %struct.file_info*, %struct.file_info** %first184, align 8, !dbg !5148
  %cmp185 = icmp ne %struct.file_info* %128, null, !dbg !5150
  br i1 %cmp185, label %if.then187, label %if.end194, !dbg !5151

if.then187:                                       ; preds = %if.end183
  %first188 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 0, !dbg !5152
  %129 = load %struct.file_info*, %struct.file_info** %first188, align 8, !dbg !5152
  %130 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5154
  %cache_files189 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %130, i32 0, i32 14, !dbg !5155
  %last190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files189, i32 0, i32 1, !dbg !5156
  %131 = load %struct.file_info**, %struct.file_info*** %last190, align 8, !dbg !5156
  store %struct.file_info* %129, %struct.file_info** %131, align 8, !dbg !5157
  %last191 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %empty_files, i32 0, i32 1, !dbg !5158
  %132 = load %struct.file_info**, %struct.file_info*** %last191, align 8, !dbg !5158
  %133 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5159
  %cache_files192 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %133, i32 0, i32 14, !dbg !5160
  %last193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files192, i32 0, i32 1, !dbg !5161
  store %struct.file_info** %132, %struct.file_info*** %last193, align 8, !dbg !5162
  br label %if.end194, !dbg !5163

if.end194:                                        ; preds = %if.then187, %if.end183
  %134 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5164
  %call195 = call %struct.file_info* @cache_get_entry(%struct.iso9660* %134), !dbg !5165
  %135 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !5166
  store %struct.file_info* %call195, %struct.file_info** %135, align 8, !dbg !5167
  %136 = load %struct.file_info**, %struct.file_info*** %pfile.addr, align 8, !dbg !5168
  %137 = load %struct.file_info*, %struct.file_info** %136, align 8, !dbg !5169
  %cmp196 = icmp eq %struct.file_info* %137, null, !dbg !5170
  %cond198 = select i1 %cmp196, i32 1, i32 0, !dbg !5171
  store i32 %cond198, i32* %retval, align 4, !dbg !5172
  br label %return, !dbg !5172

fatal_rr:                                         ; preds = %if.then62, %if.then52
  %138 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5173
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %138, i32 0, i32 0, !dbg !5174
  %139 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5175
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %139, i32 0, i32 16, !dbg !5176
  %140 = load i64, i64* %current_position, align 8, !dbg !5176
  %141 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5177
  %cl_offset199 = getelementptr inbounds %struct.file_info, %struct.file_info* %141, i32 0, i32 14, !dbg !5178
  %142 = load i64, i64* %cl_offset199, align 8, !dbg !5178
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.43, i32 0, i32 0), i64 %140, i64 %142), !dbg !5179
  store i32 -30, i32* %retval, align 4, !dbg !5180
  br label %return, !dbg !5180

return:                                           ; preds = %fatal_rr, %if.end194, %if.then158, %if.then118, %if.then84, %if.end25, %if.then23, %if.then
  %143 = load i32, i32* %retval, align 4, !dbg !5181
  ret i32 %143, !dbg !5181
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.file_info* @cache_get_entry(%struct.iso9660* %iso9660) #5 !dbg !577 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file = alloca %struct.file_info*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !5182, metadata !623), !dbg !5183
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !5184, metadata !623), !dbg !5185
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5186
  %cache_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 14, !dbg !5188
  %first = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files, i32 0, i32 0, !dbg !5189
  %1 = load %struct.file_info*, %struct.file_info** %first, align 8, !dbg !5189
  store %struct.file_info* %1, %struct.file_info** %file, align 8, !dbg !5190
  %cmp = icmp ne %struct.file_info* %1, null, !dbg !5191
  br i1 %cmp, label %if.then, label %if.end10, !dbg !5192

if.then:                                          ; preds = %entry
  %2 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5193
  %next = getelementptr inbounds %struct.file_info, %struct.file_info* %2, i32 0, i32 2, !dbg !5195
  %3 = load %struct.file_info*, %struct.file_info** %next, align 8, !dbg !5195
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5196
  %cache_files1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 14, !dbg !5197
  %first2 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files1, i32 0, i32 0, !dbg !5198
  store %struct.file_info* %3, %struct.file_info** %first2, align 8, !dbg !5199
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5200
  %cache_files3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 14, !dbg !5202
  %first4 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files3, i32 0, i32 0, !dbg !5203
  %6 = load %struct.file_info*, %struct.file_info** %first4, align 8, !dbg !5203
  %cmp5 = icmp eq %struct.file_info* %6, null, !dbg !5204
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5205

if.then6:                                         ; preds = %if.then
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5206
  %cache_files7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 14, !dbg !5207
  %first8 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files7, i32 0, i32 0, !dbg !5208
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5209
  %cache_files9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 14, !dbg !5210
  %last = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files9, i32 0, i32 1, !dbg !5211
  store %struct.file_info** %first8, %struct.file_info*** %last, align 8, !dbg !5212
  br label %if.end, !dbg !5209

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end10, !dbg !5213

if.end10:                                         ; preds = %if.end, %entry
  %9 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5214
  ret %struct.file_info* %9, !dbg !5215
}

; Function Attrs: nounwind uwtable
define internal %struct.file_info* @heap_get_entry(%struct.heap_queue* %heap) #0 !dbg !580 {
entry:
  %retval = alloca %struct.file_info*, align 8
  %heap.addr = alloca %struct.heap_queue*, align 8
  %a_key = alloca i64, align 8
  %b_key = alloca i64, align 8
  %c_key = alloca i64, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %r = alloca %struct.file_info*, align 8
  %tmp = alloca %struct.file_info*, align 8
  store %struct.heap_queue* %heap, %struct.heap_queue** %heap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.heap_queue** %heap.addr, metadata !5216, metadata !623), !dbg !5217
  call void @llvm.dbg.declare(metadata i64* %a_key, metadata !5218, metadata !623), !dbg !5219
  call void @llvm.dbg.declare(metadata i64* %b_key, metadata !5220, metadata !623), !dbg !5221
  call void @llvm.dbg.declare(metadata i64* %c_key, metadata !5222, metadata !623), !dbg !5223
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5224, metadata !623), !dbg !5225
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5226, metadata !623), !dbg !5227
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5228, metadata !623), !dbg !5229
  call void @llvm.dbg.declare(metadata %struct.file_info** %r, metadata !5230, metadata !623), !dbg !5231
  call void @llvm.dbg.declare(metadata %struct.file_info** %tmp, metadata !5232, metadata !623), !dbg !5233
  %0 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5234
  %used = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %0, i32 0, i32 2, !dbg !5236
  %1 = load i32, i32* %used, align 4, !dbg !5236
  %cmp = icmp slt i32 %1, 1, !dbg !5237
  br i1 %cmp, label %if.then, label %if.end, !dbg !5238

if.then:                                          ; preds = %entry
  store %struct.file_info* null, %struct.file_info** %retval, align 8, !dbg !5239
  br label %return, !dbg !5239

if.end:                                           ; preds = %entry
  %2 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5240
  %files = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %2, i32 0, i32 0, !dbg !5241
  %3 = load %struct.file_info**, %struct.file_info*** %files, align 8, !dbg !5241
  %arrayidx = getelementptr inbounds %struct.file_info*, %struct.file_info** %3, i64 0, !dbg !5240
  %4 = load %struct.file_info*, %struct.file_info** %arrayidx, align 8, !dbg !5240
  store %struct.file_info* %4, %struct.file_info** %r, align 8, !dbg !5242
  %5 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5243
  %used1 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %5, i32 0, i32 2, !dbg !5244
  %6 = load i32, i32* %used1, align 4, !dbg !5245
  %dec = add nsw i32 %6, -1, !dbg !5245
  store i32 %dec, i32* %used1, align 4, !dbg !5245
  %idxprom = sext i32 %dec to i64, !dbg !5246
  %7 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5246
  %files2 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %7, i32 0, i32 0, !dbg !5247
  %8 = load %struct.file_info**, %struct.file_info*** %files2, align 8, !dbg !5247
  %arrayidx3 = getelementptr inbounds %struct.file_info*, %struct.file_info** %8, i64 %idxprom, !dbg !5246
  %9 = load %struct.file_info*, %struct.file_info** %arrayidx3, align 8, !dbg !5246
  %10 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5248
  %files4 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %10, i32 0, i32 0, !dbg !5249
  %11 = load %struct.file_info**, %struct.file_info*** %files4, align 8, !dbg !5249
  %arrayidx5 = getelementptr inbounds %struct.file_info*, %struct.file_info** %11, i64 0, !dbg !5248
  store %struct.file_info* %9, %struct.file_info** %arrayidx5, align 8, !dbg !5250
  store i32 0, i32* %a, align 4, !dbg !5251
  %12 = load i32, i32* %a, align 4, !dbg !5252
  %idxprom6 = sext i32 %12 to i64, !dbg !5253
  %13 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5253
  %files7 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %13, i32 0, i32 0, !dbg !5254
  %14 = load %struct.file_info**, %struct.file_info*** %files7, align 8, !dbg !5254
  %arrayidx8 = getelementptr inbounds %struct.file_info*, %struct.file_info** %14, i64 %idxprom6, !dbg !5253
  %15 = load %struct.file_info*, %struct.file_info** %arrayidx8, align 8, !dbg !5253
  %key = getelementptr inbounds %struct.file_info, %struct.file_info* %15, i32 0, i32 5, !dbg !5255
  %16 = load i64, i64* %key, align 8, !dbg !5255
  store i64 %16, i64* %a_key, align 8, !dbg !5256
  br label %for.cond, !dbg !5257

for.cond:                                         ; preds = %if.end32, %if.end
  %17 = load i32, i32* %a, align 4, !dbg !5258
  %18 = load i32, i32* %a, align 4, !dbg !5262
  %add = add nsw i32 %17, %18, !dbg !5263
  %add9 = add nsw i32 %add, 1, !dbg !5264
  store i32 %add9, i32* %b, align 4, !dbg !5265
  %19 = load i32, i32* %b, align 4, !dbg !5266
  %20 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5268
  %used10 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %20, i32 0, i32 2, !dbg !5269
  %21 = load i32, i32* %used10, align 4, !dbg !5269
  %cmp11 = icmp sge i32 %19, %21, !dbg !5270
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !5271

if.then12:                                        ; preds = %for.cond
  %22 = load %struct.file_info*, %struct.file_info** %r, align 8, !dbg !5272
  store %struct.file_info* %22, %struct.file_info** %retval, align 8, !dbg !5273
  br label %return, !dbg !5273

if.end13:                                         ; preds = %for.cond
  %23 = load i32, i32* %b, align 4, !dbg !5274
  %idxprom14 = sext i32 %23 to i64, !dbg !5275
  %24 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5275
  %files15 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %24, i32 0, i32 0, !dbg !5276
  %25 = load %struct.file_info**, %struct.file_info*** %files15, align 8, !dbg !5276
  %arrayidx16 = getelementptr inbounds %struct.file_info*, %struct.file_info** %25, i64 %idxprom14, !dbg !5275
  %26 = load %struct.file_info*, %struct.file_info** %arrayidx16, align 8, !dbg !5275
  %key17 = getelementptr inbounds %struct.file_info, %struct.file_info* %26, i32 0, i32 5, !dbg !5277
  %27 = load i64, i64* %key17, align 8, !dbg !5277
  store i64 %27, i64* %b_key, align 8, !dbg !5278
  %28 = load i32, i32* %b, align 4, !dbg !5279
  %add18 = add nsw i32 %28, 1, !dbg !5280
  store i32 %add18, i32* %c, align 4, !dbg !5281
  %29 = load i32, i32* %c, align 4, !dbg !5282
  %30 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5284
  %used19 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %30, i32 0, i32 2, !dbg !5285
  %31 = load i32, i32* %used19, align 4, !dbg !5285
  %cmp20 = icmp slt i32 %29, %31, !dbg !5286
  br i1 %cmp20, label %if.then21, label %if.end29, !dbg !5287

if.then21:                                        ; preds = %if.end13
  %32 = load i32, i32* %c, align 4, !dbg !5288
  %idxprom22 = sext i32 %32 to i64, !dbg !5290
  %33 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5290
  %files23 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %33, i32 0, i32 0, !dbg !5291
  %34 = load %struct.file_info**, %struct.file_info*** %files23, align 8, !dbg !5291
  %arrayidx24 = getelementptr inbounds %struct.file_info*, %struct.file_info** %34, i64 %idxprom22, !dbg !5290
  %35 = load %struct.file_info*, %struct.file_info** %arrayidx24, align 8, !dbg !5290
  %key25 = getelementptr inbounds %struct.file_info, %struct.file_info* %35, i32 0, i32 5, !dbg !5292
  %36 = load i64, i64* %key25, align 8, !dbg !5292
  store i64 %36, i64* %c_key, align 8, !dbg !5293
  %37 = load i64, i64* %c_key, align 8, !dbg !5294
  %38 = load i64, i64* %b_key, align 8, !dbg !5296
  %cmp26 = icmp ult i64 %37, %38, !dbg !5297
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !5298

if.then27:                                        ; preds = %if.then21
  %39 = load i32, i32* %c, align 4, !dbg !5299
  store i32 %39, i32* %b, align 4, !dbg !5301
  %40 = load i64, i64* %c_key, align 8, !dbg !5302
  store i64 %40, i64* %b_key, align 8, !dbg !5303
  br label %if.end28, !dbg !5304

if.end28:                                         ; preds = %if.then27, %if.then21
  br label %if.end29, !dbg !5305

if.end29:                                         ; preds = %if.end28, %if.end13
  %41 = load i64, i64* %a_key, align 8, !dbg !5306
  %42 = load i64, i64* %b_key, align 8, !dbg !5308
  %cmp30 = icmp ule i64 %41, %42, !dbg !5309
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !5310

if.then31:                                        ; preds = %if.end29
  %43 = load %struct.file_info*, %struct.file_info** %r, align 8, !dbg !5311
  store %struct.file_info* %43, %struct.file_info** %retval, align 8, !dbg !5312
  br label %return, !dbg !5312

if.end32:                                         ; preds = %if.end29
  %44 = load i32, i32* %a, align 4, !dbg !5313
  %idxprom33 = sext i32 %44 to i64, !dbg !5314
  %45 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5314
  %files34 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %45, i32 0, i32 0, !dbg !5315
  %46 = load %struct.file_info**, %struct.file_info*** %files34, align 8, !dbg !5315
  %arrayidx35 = getelementptr inbounds %struct.file_info*, %struct.file_info** %46, i64 %idxprom33, !dbg !5314
  %47 = load %struct.file_info*, %struct.file_info** %arrayidx35, align 8, !dbg !5314
  store %struct.file_info* %47, %struct.file_info** %tmp, align 8, !dbg !5316
  %48 = load i32, i32* %b, align 4, !dbg !5317
  %idxprom36 = sext i32 %48 to i64, !dbg !5318
  %49 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5318
  %files37 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %49, i32 0, i32 0, !dbg !5319
  %50 = load %struct.file_info**, %struct.file_info*** %files37, align 8, !dbg !5319
  %arrayidx38 = getelementptr inbounds %struct.file_info*, %struct.file_info** %50, i64 %idxprom36, !dbg !5318
  %51 = load %struct.file_info*, %struct.file_info** %arrayidx38, align 8, !dbg !5318
  %52 = load i32, i32* %a, align 4, !dbg !5320
  %idxprom39 = sext i32 %52 to i64, !dbg !5321
  %53 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5321
  %files40 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %53, i32 0, i32 0, !dbg !5322
  %54 = load %struct.file_info**, %struct.file_info*** %files40, align 8, !dbg !5322
  %arrayidx41 = getelementptr inbounds %struct.file_info*, %struct.file_info** %54, i64 %idxprom39, !dbg !5321
  store %struct.file_info* %51, %struct.file_info** %arrayidx41, align 8, !dbg !5323
  %55 = load %struct.file_info*, %struct.file_info** %tmp, align 8, !dbg !5324
  %56 = load i32, i32* %b, align 4, !dbg !5325
  %idxprom42 = sext i32 %56 to i64, !dbg !5326
  %57 = load %struct.heap_queue*, %struct.heap_queue** %heap.addr, align 8, !dbg !5326
  %files43 = getelementptr inbounds %struct.heap_queue, %struct.heap_queue* %57, i32 0, i32 0, !dbg !5327
  %58 = load %struct.file_info**, %struct.file_info*** %files43, align 8, !dbg !5327
  %arrayidx44 = getelementptr inbounds %struct.file_info*, %struct.file_info** %58, i64 %idxprom42, !dbg !5326
  store %struct.file_info* %55, %struct.file_info** %arrayidx44, align 8, !dbg !5328
  %59 = load i32, i32* %b, align 4, !dbg !5329
  store i32 %59, i32* %a, align 4, !dbg !5330
  br label %for.cond, !dbg !5331

return:                                           ; preds = %if.then31, %if.then12, %if.then
  %60 = load %struct.file_info*, %struct.file_info** %retval, align 8, !dbg !5333
  ret %struct.file_info* %60, !dbg !5333
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @cache_add_entry(%struct.iso9660* %iso9660, %struct.file_info* %file) #5 !dbg !583 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file.addr = alloca %struct.file_info*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !5334, metadata !623), !dbg !5335
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !5336, metadata !623), !dbg !5337
  %0 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5338
  %next = getelementptr inbounds %struct.file_info, %struct.file_info* %0, i32 0, i32 2, !dbg !5339
  store %struct.file_info* null, %struct.file_info** %next, align 8, !dbg !5340
  %1 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5341
  %2 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5342
  %cache_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 14, !dbg !5343
  %last = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files, i32 0, i32 1, !dbg !5344
  %3 = load %struct.file_info**, %struct.file_info*** %last, align 8, !dbg !5344
  store %struct.file_info* %1, %struct.file_info** %3, align 8, !dbg !5345
  %4 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5346
  %next1 = getelementptr inbounds %struct.file_info, %struct.file_info* %4, i32 0, i32 2, !dbg !5347
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5348
  %cache_files2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 14, !dbg !5349
  %last3 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %cache_files2, i32 0, i32 1, !dbg !5350
  store %struct.file_info** %next1, %struct.file_info*** %last3, align 8, !dbg !5351
  ret void, !dbg !5352
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.file_info* @re_get_entry(%struct.iso9660* %iso9660) #5 !dbg !584 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file = alloca %struct.file_info*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !5353, metadata !623), !dbg !5354
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !5355, metadata !623), !dbg !5356
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5357
  %re_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 15, !dbg !5359
  %first = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files, i32 0, i32 0, !dbg !5360
  %1 = load %struct.file_info*, %struct.file_info** %first, align 8, !dbg !5360
  store %struct.file_info* %1, %struct.file_info** %file, align 8, !dbg !5361
  %cmp = icmp ne %struct.file_info* %1, null, !dbg !5362
  br i1 %cmp, label %if.then, label %if.end10, !dbg !5363

if.then:                                          ; preds = %entry
  %2 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5364
  %re_next = getelementptr inbounds %struct.file_info, %struct.file_info* %2, i32 0, i32 3, !dbg !5366
  %3 = load %struct.file_info*, %struct.file_info** %re_next, align 8, !dbg !5366
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5367
  %re_files1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 15, !dbg !5368
  %first2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files1, i32 0, i32 0, !dbg !5369
  store %struct.file_info* %3, %struct.file_info** %first2, align 8, !dbg !5370
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5371
  %re_files3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 15, !dbg !5373
  %first4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files3, i32 0, i32 0, !dbg !5374
  %6 = load %struct.file_info*, %struct.file_info** %first4, align 8, !dbg !5374
  %cmp5 = icmp eq %struct.file_info* %6, null, !dbg !5375
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5376

if.then6:                                         ; preds = %if.then
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5377
  %re_files7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 15, !dbg !5378
  %first8 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files7, i32 0, i32 0, !dbg !5379
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5380
  %re_files9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 15, !dbg !5381
  %last = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files9, i32 0, i32 1, !dbg !5382
  store %struct.file_info** %first8, %struct.file_info*** %last, align 8, !dbg !5383
  br label %if.end, !dbg !5380

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end10, !dbg !5384

if.end10:                                         ; preds = %if.end, %entry
  %9 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5385
  ret %struct.file_info* %9, !dbg !5386
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.file_info* @rede_get_entry(%struct.file_info* %re) #5 !dbg !585 {
entry:
  %re.addr = alloca %struct.file_info*, align 8
  %file = alloca %struct.file_info*, align 8
  store %struct.file_info* %re, %struct.file_info** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %re.addr, metadata !5387, metadata !623), !dbg !5388
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !5389, metadata !623), !dbg !5390
  %0 = load %struct.file_info*, %struct.file_info** %re.addr, align 8, !dbg !5391
  %rede_files = getelementptr inbounds %struct.file_info, %struct.file_info* %0, i32 0, i32 37, !dbg !5393
  %first = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files, i32 0, i32 0, !dbg !5394
  %1 = load %struct.file_info*, %struct.file_info** %first, align 8, !dbg !5394
  store %struct.file_info* %1, %struct.file_info** %file, align 8, !dbg !5395
  %cmp = icmp ne %struct.file_info* %1, null, !dbg !5396
  br i1 %cmp, label %if.then, label %if.end10, !dbg !5397

if.then:                                          ; preds = %entry
  %2 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5398
  %re_next = getelementptr inbounds %struct.file_info, %struct.file_info* %2, i32 0, i32 3, !dbg !5400
  %3 = load %struct.file_info*, %struct.file_info** %re_next, align 8, !dbg !5400
  %4 = load %struct.file_info*, %struct.file_info** %re.addr, align 8, !dbg !5401
  %rede_files1 = getelementptr inbounds %struct.file_info, %struct.file_info* %4, i32 0, i32 37, !dbg !5402
  %first2 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files1, i32 0, i32 0, !dbg !5403
  store %struct.file_info* %3, %struct.file_info** %first2, align 8, !dbg !5404
  %5 = load %struct.file_info*, %struct.file_info** %re.addr, align 8, !dbg !5405
  %rede_files3 = getelementptr inbounds %struct.file_info, %struct.file_info* %5, i32 0, i32 37, !dbg !5407
  %first4 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files3, i32 0, i32 0, !dbg !5408
  %6 = load %struct.file_info*, %struct.file_info** %first4, align 8, !dbg !5408
  %cmp5 = icmp eq %struct.file_info* %6, null, !dbg !5409
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5410

if.then6:                                         ; preds = %if.then
  %7 = load %struct.file_info*, %struct.file_info** %re.addr, align 8, !dbg !5411
  %rede_files7 = getelementptr inbounds %struct.file_info, %struct.file_info* %7, i32 0, i32 37, !dbg !5412
  %first8 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files7, i32 0, i32 0, !dbg !5413
  %8 = load %struct.file_info*, %struct.file_info** %re.addr, align 8, !dbg !5414
  %rede_files9 = getelementptr inbounds %struct.file_info, %struct.file_info* %8, i32 0, i32 37, !dbg !5415
  %last = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files9, i32 0, i32 1, !dbg !5416
  store %struct.file_info** %first8, %struct.file_info*** %last, align 8, !dbg !5417
  br label %if.end, !dbg !5414

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end10, !dbg !5418

if.end10:                                         ; preds = %if.end, %entry
  %9 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5419
  ret %struct.file_info* %9, !dbg !5420
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @rede_add_entry(%struct.file_info* %file) #5 !dbg !588 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca %struct.file_info*, align 8
  %re = alloca %struct.file_info*, align 8
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !5421, metadata !623), !dbg !5422
  call void @llvm.dbg.declare(metadata %struct.file_info** %re, metadata !5423, metadata !623), !dbg !5424
  %0 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5425
  %parent = getelementptr inbounds %struct.file_info, %struct.file_info* %0, i32 0, i32 1, !dbg !5426
  %1 = load %struct.file_info*, %struct.file_info** %parent, align 8, !dbg !5426
  store %struct.file_info* %1, %struct.file_info** %re, align 8, !dbg !5427
  br label %while.cond, !dbg !5428

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !5429
  %cmp = icmp ne %struct.file_info* %2, null, !dbg !5431
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5432

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !5433
  %re1 = getelementptr inbounds %struct.file_info, %struct.file_info* %3, i32 0, i32 12, !dbg !5435
  %4 = load i8, i8* %re1, align 2, !dbg !5435
  %tobool = icmp ne i8 %4, 0, !dbg !5436
  %lnot = xor i1 %tobool, true, !dbg !5436
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %5, label %while.body, label %while.end, !dbg !5437

while.body:                                       ; preds = %land.end
  %6 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !5439
  %parent2 = getelementptr inbounds %struct.file_info, %struct.file_info* %6, i32 0, i32 1, !dbg !5440
  %7 = load %struct.file_info*, %struct.file_info** %parent2, align 8, !dbg !5440
  store %struct.file_info* %7, %struct.file_info** %re, align 8, !dbg !5441
  br label %while.cond, !dbg !5442

while.end:                                        ; preds = %land.end
  %8 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !5444
  %cmp3 = icmp eq %struct.file_info* %8, null, !dbg !5446
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5447

if.then:                                          ; preds = %while.end
  store i32 -1, i32* %retval, align 4, !dbg !5448
  br label %return, !dbg !5448

if.end:                                           ; preds = %while.end
  %9 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5449
  %re_next = getelementptr inbounds %struct.file_info, %struct.file_info* %9, i32 0, i32 3, !dbg !5450
  store %struct.file_info* null, %struct.file_info** %re_next, align 8, !dbg !5451
  %10 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5452
  %11 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !5453
  %rede_files = getelementptr inbounds %struct.file_info, %struct.file_info* %11, i32 0, i32 37, !dbg !5454
  %last = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files, i32 0, i32 1, !dbg !5455
  %12 = load %struct.file_info**, %struct.file_info*** %last, align 8, !dbg !5455
  store %struct.file_info* %10, %struct.file_info** %12, align 8, !dbg !5456
  %13 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5457
  %re_next4 = getelementptr inbounds %struct.file_info, %struct.file_info* %13, i32 0, i32 3, !dbg !5458
  %14 = load %struct.file_info*, %struct.file_info** %re, align 8, !dbg !5459
  %rede_files5 = getelementptr inbounds %struct.file_info, %struct.file_info* %14, i32 0, i32 37, !dbg !5460
  %last6 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %rede_files5, i32 0, i32 1, !dbg !5461
  store %struct.file_info** %re_next4, %struct.file_info*** %last6, align 8, !dbg !5462
  store i32 0, i32* %retval, align 4, !dbg !5463
  br label %return, !dbg !5463

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !5464
  ret i32 %15, !dbg !5464
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @re_add_entry(%struct.iso9660* %iso9660, %struct.file_info* %file) #5 !dbg !591 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file.addr = alloca %struct.file_info*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !5465, metadata !623), !dbg !5466
  store %struct.file_info* %file, %struct.file_info** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %file.addr, metadata !5467, metadata !623), !dbg !5468
  %0 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5469
  %re_next = getelementptr inbounds %struct.file_info, %struct.file_info* %0, i32 0, i32 3, !dbg !5470
  store %struct.file_info* null, %struct.file_info** %re_next, align 8, !dbg !5471
  %1 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5472
  %2 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5473
  %re_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 15, !dbg !5474
  %last = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files, i32 0, i32 1, !dbg !5475
  %3 = load %struct.file_info**, %struct.file_info*** %last, align 8, !dbg !5475
  store %struct.file_info* %1, %struct.file_info** %3, align 8, !dbg !5476
  %4 = load %struct.file_info*, %struct.file_info** %file.addr, align 8, !dbg !5477
  %re_next1 = getelementptr inbounds %struct.file_info, %struct.file_info* %4, i32 0, i32 3, !dbg !5478
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5479
  %re_files2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 15, !dbg !5480
  %last3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %re_files2, i32 0, i32 1, !dbg !5481
  store %struct.file_info** %re_next1, %struct.file_info*** %last3, align 8, !dbg !5482
  ret void, !dbg !5483
}

; Function Attrs: nounwind uwtable
define internal i32 @read_children(%struct.archive_read* %a, %struct.file_info* %parent) #0 !dbg !592 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %parent.addr = alloca %struct.file_info*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %b = alloca i8*, align 8
  %p = alloca i8*, align 8
  %multi = alloca %struct.file_info*, align 8
  %step = alloca i64, align 8
  %skip_size = alloca i64, align 8
  %skipsize = alloca i64, align 8
  %child = alloca %struct.file_info*, align 8
  %con = alloca %struct.content*, align 8
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5484, metadata !623), !dbg !5485
  store %struct.file_info* %parent, %struct.file_info** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_info** %parent.addr, metadata !5486, metadata !623), !dbg !5487
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5488, metadata !623), !dbg !5489
  call void @llvm.dbg.declare(metadata i8** %b, metadata !5490, metadata !623), !dbg !5491
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5492, metadata !623), !dbg !5493
  call void @llvm.dbg.declare(metadata %struct.file_info** %multi, metadata !5494, metadata !623), !dbg !5495
  call void @llvm.dbg.declare(metadata i64* %step, metadata !5496, metadata !623), !dbg !5497
  call void @llvm.dbg.declare(metadata i64* %skip_size, metadata !5498, metadata !623), !dbg !5499
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5500
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !5501
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !5501
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !5502
  %2 = load i8*, i8** %data, align 8, !dbg !5502
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !5503
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !5504
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5505
  %entry_bytes_unconsumed = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 24, !dbg !5507
  %5 = load i64, i64* %entry_bytes_unconsumed, align 8, !dbg !5507
  %tobool = icmp ne i64 %5, 0, !dbg !5505
  br i1 %tobool, label %if.then, label %if.end, !dbg !5508

if.then:                                          ; preds = %entry
  %6 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5509
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5511
  %entry_bytes_unconsumed1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 24, !dbg !5512
  %8 = load i64, i64* %entry_bytes_unconsumed1, align 8, !dbg !5512
  %call = call i64 @__archive_read_consume(%struct.archive_read* %6, i64 %8), !dbg !5513
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5514
  %entry_bytes_unconsumed2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 24, !dbg !5515
  store i64 0, i64* %entry_bytes_unconsumed2, align 8, !dbg !5516
  br label %if.end, !dbg !5517

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5518
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 16, !dbg !5520
  %11 = load i64, i64* %current_position, align 8, !dbg !5520
  %12 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5521
  %offset = getelementptr inbounds %struct.file_info, %struct.file_info* %12, i32 0, i32 6, !dbg !5522
  %13 = load i64, i64* %offset, align 8, !dbg !5522
  %cmp = icmp ugt i64 %11, %13, !dbg !5523
  br i1 %cmp, label %if.then3, label %if.end6, !dbg !5524

if.then3:                                         ; preds = %if.end
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5525
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !5527
  %15 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5528
  %name = getelementptr inbounds %struct.file_info, %struct.file_info* %15, i32 0, i32 26, !dbg !5529
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name, i32 0, i32 0, !dbg !5530
  %16 = load i8*, i8** %s, align 8, !dbg !5530
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5531
  %current_position4 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 16, !dbg !5532
  %18 = load i64, i64* %current_position4, align 8, !dbg !5532
  %19 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5533
  %offset5 = getelementptr inbounds %struct.file_info, %struct.file_info* %19, i32 0, i32 6, !dbg !5534
  %20 = load i64, i64* %offset5, align 8, !dbg !5534
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.44, i32 0, i32 0), i8* %16, i64 %18, i64 %20), !dbg !5535
  store i32 -20, i32* %retval, align 4, !dbg !5536
  br label %return, !dbg !5536

if.end6:                                          ; preds = %if.end
  %21 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5537
  %offset7 = getelementptr inbounds %struct.file_info, %struct.file_info* %21, i32 0, i32 6, !dbg !5539
  %22 = load i64, i64* %offset7, align 8, !dbg !5539
  %23 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5540
  %size = getelementptr inbounds %struct.file_info, %struct.file_info* %23, i32 0, i32 7, !dbg !5541
  %24 = load i64, i64* %size, align 8, !dbg !5541
  %add = add i64 %22, %24, !dbg !5542
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5543
  %volume_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %25, i32 0, i32 18, !dbg !5544
  %26 = load i64, i64* %volume_size, align 8, !dbg !5544
  %cmp8 = icmp ugt i64 %add, %26, !dbg !5545
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !5546

if.then9:                                         ; preds = %if.end6
  %27 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5547
  %archive10 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %27, i32 0, i32 0, !dbg !5549
  %28 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5550
  %name11 = getelementptr inbounds %struct.file_info, %struct.file_info* %28, i32 0, i32 26, !dbg !5551
  %s12 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %name11, i32 0, i32 0, !dbg !5552
  %29 = load i8*, i8** %s12, align 8, !dbg !5552
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive10, i32 -1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.45, i32 0, i32 0), i8* %29), !dbg !5553
  store i32 -20, i32* %retval, align 4, !dbg !5554
  br label %return, !dbg !5554

if.end13:                                         ; preds = %if.end6
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5555
  %current_position14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 16, !dbg !5557
  %31 = load i64, i64* %current_position14, align 8, !dbg !5557
  %32 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5558
  %offset15 = getelementptr inbounds %struct.file_info, %struct.file_info* %32, i32 0, i32 6, !dbg !5559
  %33 = load i64, i64* %offset15, align 8, !dbg !5559
  %cmp16 = icmp ult i64 %31, %33, !dbg !5560
  br i1 %cmp16, label %if.then17, label %if.end26, !dbg !5561

if.then17:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i64* %skipsize, metadata !5562, metadata !623), !dbg !5564
  %34 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5565
  %offset18 = getelementptr inbounds %struct.file_info, %struct.file_info* %34, i32 0, i32 6, !dbg !5566
  %35 = load i64, i64* %offset18, align 8, !dbg !5566
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5567
  %current_position19 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 16, !dbg !5568
  %37 = load i64, i64* %current_position19, align 8, !dbg !5568
  %sub = sub i64 %35, %37, !dbg !5569
  store i64 %sub, i64* %skipsize, align 8, !dbg !5570
  %38 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5571
  %39 = load i64, i64* %skipsize, align 8, !dbg !5572
  %call20 = call i64 @__archive_read_consume(%struct.archive_read* %38, i64 %39), !dbg !5573
  store i64 %call20, i64* %skipsize, align 8, !dbg !5574
  %40 = load i64, i64* %skipsize, align 8, !dbg !5575
  %cmp21 = icmp slt i64 %40, 0, !dbg !5577
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5578

if.then22:                                        ; preds = %if.then17
  %41 = load i64, i64* %skipsize, align 8, !dbg !5579
  %conv = trunc i64 %41 to i32, !dbg !5580
  store i32 %conv, i32* %retval, align 4, !dbg !5581
  br label %return, !dbg !5581

if.end23:                                         ; preds = %if.then17
  %42 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5582
  %offset24 = getelementptr inbounds %struct.file_info, %struct.file_info* %42, i32 0, i32 6, !dbg !5583
  %43 = load i64, i64* %offset24, align 8, !dbg !5583
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5584
  %current_position25 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 16, !dbg !5585
  store i64 %43, i64* %current_position25, align 8, !dbg !5586
  br label %if.end26, !dbg !5587

if.end26:                                         ; preds = %if.end23, %if.end13
  %45 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5588
  %size27 = getelementptr inbounds %struct.file_info, %struct.file_info* %45, i32 0, i32 7, !dbg !5589
  %46 = load i64, i64* %size27, align 8, !dbg !5589
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5590
  %logical_block_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 17, !dbg !5591
  %48 = load i64, i64* %logical_block_size, align 8, !dbg !5591
  %add28 = add i64 %46, %48, !dbg !5592
  %sub29 = sub i64 %add28, 1, !dbg !5593
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5594
  %logical_block_size30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 17, !dbg !5595
  %50 = load i64, i64* %logical_block_size30, align 8, !dbg !5595
  %div = udiv i64 %sub29, %50, !dbg !5596
  %51 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5597
  %logical_block_size31 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %51, i32 0, i32 17, !dbg !5598
  %52 = load i64, i64* %logical_block_size31, align 8, !dbg !5598
  %mul = mul i64 %div, %52, !dbg !5599
  store i64 %mul, i64* %step, align 8, !dbg !5600
  %53 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5601
  %54 = load i64, i64* %step, align 8, !dbg !5602
  %call32 = call i8* @__archive_read_ahead(%struct.archive_read* %53, i64 %54, i64* null), !dbg !5603
  store i8* %call32, i8** %b, align 8, !dbg !5604
  %55 = load i8*, i8** %b, align 8, !dbg !5605
  %cmp33 = icmp eq i8* %55, null, !dbg !5607
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !5608

if.then35:                                        ; preds = %if.end26
  %56 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5609
  %archive36 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %56, i32 0, i32 0, !dbg !5611
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive36, i32 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.21, i32 0, i32 0)), !dbg !5612
  store i32 -30, i32* %retval, align 4, !dbg !5613
  br label %return, !dbg !5613

if.end37:                                         ; preds = %if.end26
  %57 = load i64, i64* %step, align 8, !dbg !5614
  %58 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5615
  %current_position38 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %58, i32 0, i32 16, !dbg !5616
  %59 = load i64, i64* %current_position38, align 8, !dbg !5617
  %add39 = add i64 %59, %57, !dbg !5617
  store i64 %add39, i64* %current_position38, align 8, !dbg !5617
  store %struct.file_info* null, %struct.file_info** %multi, align 8, !dbg !5618
  %60 = load i64, i64* %step, align 8, !dbg !5619
  store i64 %60, i64* %skip_size, align 8, !dbg !5620
  br label %while.cond, !dbg !5621

while.cond:                                       ; preds = %for.end, %if.end37
  %61 = load i64, i64* %step, align 8, !dbg !5622
  %tobool40 = icmp ne i64 %61, 0, !dbg !5624
  br i1 %tobool40, label %while.body, label %while.end, !dbg !5624

while.body:                                       ; preds = %while.cond
  %62 = load i8*, i8** %b, align 8, !dbg !5625
  store i8* %62, i8** %p, align 8, !dbg !5627
  %63 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5628
  %logical_block_size41 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %63, i32 0, i32 17, !dbg !5629
  %64 = load i64, i64* %logical_block_size41, align 8, !dbg !5629
  %65 = load i8*, i8** %b, align 8, !dbg !5630
  %add.ptr = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !5630
  store i8* %add.ptr, i8** %b, align 8, !dbg !5630
  %66 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5631
  %logical_block_size42 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %66, i32 0, i32 17, !dbg !5632
  %67 = load i64, i64* %logical_block_size42, align 8, !dbg !5632
  %68 = load i64, i64* %step, align 8, !dbg !5633
  %sub43 = sub i64 %68, %67, !dbg !5633
  store i64 %sub43, i64* %step, align 8, !dbg !5633
  br label %for.cond, !dbg !5634

for.cond:                                         ; preds = %for.inc, %while.body
  %69 = load i8*, i8** %p, align 8, !dbg !5635
  %70 = load i8, i8* %69, align 1, !dbg !5639
  %conv44 = zext i8 %70 to i32, !dbg !5639
  %cmp45 = icmp ne i32 %conv44, 0, !dbg !5640
  br i1 %cmp45, label %land.lhs.true, label %land.end, !dbg !5641

land.lhs.true:                                    ; preds = %for.cond
  %71 = load i8*, i8** %p, align 8, !dbg !5642
  %72 = load i8*, i8** %b, align 8, !dbg !5644
  %cmp47 = icmp ult i8* %71, %72, !dbg !5645
  br i1 %cmp47, label %land.rhs, label %land.end, !dbg !5646

land.rhs:                                         ; preds = %land.lhs.true
  %73 = load i8*, i8** %p, align 8, !dbg !5647
  %74 = load i8*, i8** %p, align 8, !dbg !5649
  %75 = load i8, i8* %74, align 1, !dbg !5650
  %conv49 = zext i8 %75 to i32, !dbg !5650
  %idx.ext = sext i32 %conv49 to i64, !dbg !5651
  %add.ptr50 = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !5651
  %76 = load i8*, i8** %b, align 8, !dbg !5652
  %cmp51 = icmp ule i8* %add.ptr50, %76, !dbg !5653
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond
  %77 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %cmp51, %land.rhs ]
  br i1 %77, label %for.body, label %for.end, !dbg !5654

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.file_info** %child, metadata !5656, metadata !623), !dbg !5658
  %78 = load i8*, i8** %p, align 8, !dbg !5659
  %add.ptr53 = getelementptr inbounds i8, i8* %78, i64 32, !dbg !5661
  %79 = load i8, i8* %add.ptr53, align 1, !dbg !5662
  %conv54 = zext i8 %79 to i32, !dbg !5662
  %cmp55 = icmp eq i32 %conv54, 1, !dbg !5663
  br i1 %cmp55, label %land.lhs.true57, label %if.end63, !dbg !5664

land.lhs.true57:                                  ; preds = %for.body
  %80 = load i8*, i8** %p, align 8, !dbg !5665
  %add.ptr58 = getelementptr inbounds i8, i8* %80, i64 33, !dbg !5667
  %81 = load i8, i8* %add.ptr58, align 1, !dbg !5668
  %conv59 = zext i8 %81 to i32, !dbg !5668
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !5669
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !5670

if.then62:                                        ; preds = %land.lhs.true57
  br label %for.inc, !dbg !5672

if.end63:                                         ; preds = %land.lhs.true57, %for.body
  %82 = load i8*, i8** %p, align 8, !dbg !5673
  %add.ptr64 = getelementptr inbounds i8, i8* %82, i64 32, !dbg !5675
  %83 = load i8, i8* %add.ptr64, align 1, !dbg !5676
  %conv65 = zext i8 %83 to i32, !dbg !5676
  %cmp66 = icmp eq i32 %conv65, 1, !dbg !5677
  br i1 %cmp66, label %land.lhs.true68, label %if.end74, !dbg !5678

land.lhs.true68:                                  ; preds = %if.end63
  %84 = load i8*, i8** %p, align 8, !dbg !5679
  %add.ptr69 = getelementptr inbounds i8, i8* %84, i64 33, !dbg !5681
  %85 = load i8, i8* %add.ptr69, align 1, !dbg !5682
  %conv70 = zext i8 %85 to i32, !dbg !5682
  %cmp71 = icmp eq i32 %conv70, 1, !dbg !5683
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !5684

if.then73:                                        ; preds = %land.lhs.true68
  br label %for.inc, !dbg !5685

if.end74:                                         ; preds = %land.lhs.true68, %if.end63
  %86 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5686
  %87 = load %struct.file_info*, %struct.file_info** %parent.addr, align 8, !dbg !5687
  %88 = load i8*, i8** %p, align 8, !dbg !5688
  %call75 = call %struct.file_info* @parse_file_info(%struct.archive_read* %86, %struct.file_info* %87, i8* %88), !dbg !5689
  store %struct.file_info* %call75, %struct.file_info** %child, align 8, !dbg !5690
  %89 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5691
  %cmp76 = icmp eq %struct.file_info* %89, null, !dbg !5693
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !5694

if.then78:                                        ; preds = %if.end74
  %90 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5695
  %91 = load i64, i64* %skip_size, align 8, !dbg !5697
  %call79 = call i64 @__archive_read_consume(%struct.archive_read* %90, i64 %91), !dbg !5698
  store i32 -30, i32* %retval, align 4, !dbg !5699
  br label %return, !dbg !5699

if.end80:                                         ; preds = %if.end74
  %92 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5700
  %cl_offset = getelementptr inbounds %struct.file_info, %struct.file_info* %92, i32 0, i32 14, !dbg !5702
  %93 = load i64, i64* %cl_offset, align 8, !dbg !5702
  %cmp81 = icmp eq i64 %93, 0, !dbg !5703
  br i1 %cmp81, label %land.lhs.true83, label %if.else128, !dbg !5704

land.lhs.true83:                                  ; preds = %if.end80
  %94 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5705
  %multi_extent = getelementptr inbounds %struct.file_info, %struct.file_info* %94, i32 0, i32 35, !dbg !5706
  %95 = load i32, i32* %multi_extent, align 8, !dbg !5706
  %tobool84 = icmp ne i32 %95, 0, !dbg !5705
  br i1 %tobool84, label %if.then87, label %lor.lhs.false, !dbg !5707

lor.lhs.false:                                    ; preds = %land.lhs.true83
  %96 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5708
  %cmp85 = icmp ne %struct.file_info* %96, null, !dbg !5710
  br i1 %cmp85, label %if.then87, label %if.else128, !dbg !5711

if.then87:                                        ; preds = %lor.lhs.false, %land.lhs.true83
  call void @llvm.dbg.declare(metadata %struct.content** %con, metadata !5712, metadata !623), !dbg !5714
  %97 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5715
  %cmp88 = icmp eq %struct.file_info* %97, null, !dbg !5717
  br i1 %cmp88, label %if.then90, label %if.end94, !dbg !5718

if.then90:                                        ; preds = %if.then87
  %98 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5719
  store %struct.file_info* %98, %struct.file_info** %multi, align 8, !dbg !5721
  %99 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5722
  %contents = getelementptr inbounds %struct.file_info, %struct.file_info* %99, i32 0, i32 36, !dbg !5723
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %contents, i32 0, i32 0, !dbg !5724
  store %struct.content* null, %struct.content** %first, align 8, !dbg !5725
  %100 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5726
  %contents91 = getelementptr inbounds %struct.file_info, %struct.file_info* %100, i32 0, i32 36, !dbg !5727
  %first92 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %contents91, i32 0, i32 0, !dbg !5728
  %101 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5729
  %contents93 = getelementptr inbounds %struct.file_info, %struct.file_info* %101, i32 0, i32 36, !dbg !5730
  %last = getelementptr inbounds %struct.anon.0, %struct.anon.0* %contents93, i32 0, i32 1, !dbg !5731
  store %struct.content** %first92, %struct.content*** %last, align 8, !dbg !5732
  br label %if.end94, !dbg !5733

if.end94:                                         ; preds = %if.then90, %if.then87
  %call95 = call noalias i8* @malloc(i64 24) #8, !dbg !5734
  %102 = bitcast i8* %call95 to %struct.content*, !dbg !5734
  store %struct.content* %102, %struct.content** %con, align 8, !dbg !5735
  %103 = load %struct.content*, %struct.content** %con, align 8, !dbg !5736
  %cmp96 = icmp eq %struct.content* %103, null, !dbg !5738
  br i1 %cmp96, label %if.then98, label %if.end101, !dbg !5739

if.then98:                                        ; preds = %if.end94
  %104 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5740
  %archive99 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %104, i32 0, i32 0, !dbg !5742
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive99, i32 12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i32 0, i32 0)), !dbg !5743
  %105 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5744
  %106 = load i64, i64* %skip_size, align 8, !dbg !5745
  %call100 = call i64 @__archive_read_consume(%struct.archive_read* %105, i64 %106), !dbg !5746
  store i32 -30, i32* %retval, align 4, !dbg !5747
  br label %return, !dbg !5747

if.end101:                                        ; preds = %if.end94
  %107 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5748
  %offset102 = getelementptr inbounds %struct.file_info, %struct.file_info* %107, i32 0, i32 6, !dbg !5749
  %108 = load i64, i64* %offset102, align 8, !dbg !5749
  %109 = load %struct.content*, %struct.content** %con, align 8, !dbg !5750
  %offset103 = getelementptr inbounds %struct.content, %struct.content* %109, i32 0, i32 0, !dbg !5751
  store i64 %108, i64* %offset103, align 8, !dbg !5752
  %110 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5753
  %size104 = getelementptr inbounds %struct.file_info, %struct.file_info* %110, i32 0, i32 7, !dbg !5754
  %111 = load i64, i64* %size104, align 8, !dbg !5754
  %112 = load %struct.content*, %struct.content** %con, align 8, !dbg !5755
  %size105 = getelementptr inbounds %struct.content, %struct.content* %112, i32 0, i32 1, !dbg !5756
  store i64 %111, i64* %size105, align 8, !dbg !5757
  %113 = load %struct.content*, %struct.content** %con, align 8, !dbg !5758
  %next = getelementptr inbounds %struct.content, %struct.content* %113, i32 0, i32 2, !dbg !5759
  store %struct.content* null, %struct.content** %next, align 8, !dbg !5760
  %114 = load %struct.content*, %struct.content** %con, align 8, !dbg !5761
  %115 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5762
  %contents106 = getelementptr inbounds %struct.file_info, %struct.file_info* %115, i32 0, i32 36, !dbg !5763
  %last107 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %contents106, i32 0, i32 1, !dbg !5764
  %116 = load %struct.content**, %struct.content*** %last107, align 8, !dbg !5764
  store %struct.content* %114, %struct.content** %116, align 8, !dbg !5765
  %117 = load %struct.content*, %struct.content** %con, align 8, !dbg !5766
  %next108 = getelementptr inbounds %struct.content, %struct.content* %117, i32 0, i32 2, !dbg !5767
  %118 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5768
  %contents109 = getelementptr inbounds %struct.file_info, %struct.file_info* %118, i32 0, i32 36, !dbg !5769
  %last110 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %contents109, i32 0, i32 1, !dbg !5770
  store %struct.content** %next108, %struct.content*** %last110, align 8, !dbg !5771
  %119 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5772
  %120 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5774
  %cmp111 = icmp eq %struct.file_info* %119, %120, !dbg !5775
  br i1 %cmp111, label %if.then113, label %if.else, !dbg !5776

if.then113:                                       ; preds = %if.end101
  %121 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5777
  %122 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5777
  %pending_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %122, i32 0, i32 13, !dbg !5777
  %123 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5777
  %124 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5777
  %offset114 = getelementptr inbounds %struct.file_info, %struct.file_info* %124, i32 0, i32 6, !dbg !5777
  %125 = load i64, i64* %offset114, align 8, !dbg !5777
  %call115 = call i32 @heap_add_entry(%struct.archive_read* %121, %struct.heap_queue* %pending_files, %struct.file_info* %123, i64 %125), !dbg !5777
  %cmp116 = icmp ne i32 %call115, 0, !dbg !5780
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !5781

if.then118:                                       ; preds = %if.then113
  store i32 -30, i32* %retval, align 4, !dbg !5782
  br label %return, !dbg !5782

if.end119:                                        ; preds = %if.then113
  br label %if.end127, !dbg !5783

if.else:                                          ; preds = %if.end101
  %126 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5784
  %size120 = getelementptr inbounds %struct.file_info, %struct.file_info* %126, i32 0, i32 7, !dbg !5786
  %127 = load i64, i64* %size120, align 8, !dbg !5786
  %128 = load %struct.file_info*, %struct.file_info** %multi, align 8, !dbg !5787
  %size121 = getelementptr inbounds %struct.file_info, %struct.file_info* %128, i32 0, i32 7, !dbg !5788
  %129 = load i64, i64* %size121, align 8, !dbg !5789
  %add122 = add i64 %129, %127, !dbg !5789
  store i64 %add122, i64* %size121, align 8, !dbg !5789
  %130 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5790
  %multi_extent123 = getelementptr inbounds %struct.file_info, %struct.file_info* %130, i32 0, i32 35, !dbg !5792
  %131 = load i32, i32* %multi_extent123, align 8, !dbg !5792
  %tobool124 = icmp ne i32 %131, 0, !dbg !5790
  br i1 %tobool124, label %if.end126, label %if.then125, !dbg !5793

if.then125:                                       ; preds = %if.else
  store %struct.file_info* null, %struct.file_info** %multi, align 8, !dbg !5794
  br label %if.end126, !dbg !5795

if.end126:                                        ; preds = %if.then125, %if.else
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end119
  br label %if.end136, !dbg !5796

if.else128:                                       ; preds = %lor.lhs.false, %if.end80
  %132 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5797
  %133 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5797
  %pending_files129 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %133, i32 0, i32 13, !dbg !5797
  %134 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5797
  %135 = load %struct.file_info*, %struct.file_info** %child, align 8, !dbg !5797
  %offset130 = getelementptr inbounds %struct.file_info, %struct.file_info* %135, i32 0, i32 6, !dbg !5797
  %136 = load i64, i64* %offset130, align 8, !dbg !5797
  %call131 = call i32 @heap_add_entry(%struct.archive_read* %132, %struct.heap_queue* %pending_files129, %struct.file_info* %134, i64 %136), !dbg !5797
  %cmp132 = icmp ne i32 %call131, 0, !dbg !5799
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !5800

if.then134:                                       ; preds = %if.else128
  store i32 -30, i32* %retval, align 4, !dbg !5801
  br label %return, !dbg !5801

if.end135:                                        ; preds = %if.else128
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end127
  br label %for.inc, !dbg !5802

for.inc:                                          ; preds = %if.end136, %if.then73, %if.then62
  %137 = load i8*, i8** %p, align 8, !dbg !5803
  %138 = load i8, i8* %137, align 1, !dbg !5805
  %conv137 = zext i8 %138 to i32, !dbg !5805
  %139 = load i8*, i8** %p, align 8, !dbg !5806
  %idx.ext138 = sext i32 %conv137 to i64, !dbg !5806
  %add.ptr139 = getelementptr inbounds i8, i8* %139, i64 %idx.ext138, !dbg !5806
  store i8* %add.ptr139, i8** %p, align 8, !dbg !5806
  br label %for.cond, !dbg !5807

for.end:                                          ; preds = %land.end
  br label %while.cond, !dbg !5808

while.end:                                        ; preds = %while.cond
  %140 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5810
  %141 = load i64, i64* %skip_size, align 8, !dbg !5811
  %call140 = call i64 @__archive_read_consume(%struct.archive_read* %140, i64 %141), !dbg !5812
  %142 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5813
  %143 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5815
  %call141 = call i32 @read_CE(%struct.archive_read* %142, %struct.iso9660* %143), !dbg !5816
  %cmp142 = icmp ne i32 %call141, 0, !dbg !5817
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !5818

if.then144:                                       ; preds = %while.end
  store i32 -30, i32* %retval, align 4, !dbg !5819
  br label %return, !dbg !5819

if.end145:                                        ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !5820
  br label %return, !dbg !5820

return:                                           ; preds = %if.end145, %if.then144, %if.then134, %if.then118, %if.then98, %if.then78, %if.then35, %if.then22, %if.then9, %if.then3
  %144 = load i32, i32* %retval, align 4, !dbg !5821
  ret i32 %144, !dbg !5821
}

; Function Attrs: nounwind uwtable
define internal i32 @read_CE(%struct.archive_read* %a, %struct.iso9660* %iso9660) #0 !dbg !595 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %heap = alloca %struct.read_ce_queue*, align 8
  %b = alloca i8*, align 8
  %p = alloca i8*, align 8
  %end = alloca i8*, align 8
  %file = alloca %struct.file_info*, align 8
  %step = alloca i64, align 8
  %r = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !5822, metadata !623), !dbg !5823
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !5824, metadata !623), !dbg !5825
  call void @llvm.dbg.declare(metadata %struct.read_ce_queue** %heap, metadata !5826, metadata !623), !dbg !5827
  call void @llvm.dbg.declare(metadata i8** %b, metadata !5828, metadata !623), !dbg !5829
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5830, metadata !623), !dbg !5831
  call void @llvm.dbg.declare(metadata i8** %end, metadata !5832, metadata !623), !dbg !5833
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !5834, metadata !623), !dbg !5835
  call void @llvm.dbg.declare(metadata i64* %step, metadata !5836, metadata !623), !dbg !5837
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5838, metadata !623), !dbg !5839
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5840
  %read_ce_req = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 9, !dbg !5841
  store %struct.read_ce_queue* %read_ce_req, %struct.read_ce_queue** %heap, align 8, !dbg !5842
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5843
  %logical_block_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %1, i32 0, i32 17, !dbg !5844
  %2 = load i64, i64* %logical_block_size, align 8, !dbg !5844
  store i64 %2, i64* %step, align 8, !dbg !5845
  br label %while.cond, !dbg !5846

while.cond:                                       ; preds = %do.end, %entry
  %3 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !5847
  %cnt = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %3, i32 0, i32 1, !dbg !5849
  %4 = load i32, i32* %cnt, align 8, !dbg !5849
  %tobool = icmp ne i32 %4, 0, !dbg !5847
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5850

land.rhs:                                         ; preds = %while.cond
  %5 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !5851
  %reqs = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %5, i32 0, i32 0, !dbg !5852
  %6 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs, align 8, !dbg !5852
  %arrayidx = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %6, i64 0, !dbg !5851
  %offset = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx, i32 0, i32 0, !dbg !5853
  %7 = load i64, i64* %offset, align 8, !dbg !5853
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5854
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 16, !dbg !5855
  %9 = load i64, i64* %current_position, align 8, !dbg !5855
  %cmp = icmp eq i64 %7, %9, !dbg !5856
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %10, label %while.body, label %while.end, !dbg !5857

while.body:                                       ; preds = %land.end
  %11 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5859
  %12 = load i64, i64* %step, align 8, !dbg !5861
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %11, i64 %12, i64* null), !dbg !5862
  store i8* %call, i8** %b, align 8, !dbg !5863
  %13 = load i8*, i8** %b, align 8, !dbg !5864
  %cmp1 = icmp eq i8* %13, null, !dbg !5866
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5867

if.then:                                          ; preds = %while.body
  %14 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5868
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %14, i32 0, i32 0, !dbg !5870
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.21, i32 0, i32 0)), !dbg !5871
  store i32 -30, i32* %retval, align 4, !dbg !5872
  br label %return, !dbg !5872

if.end:                                           ; preds = %while.body
  br label %do.body, !dbg !5873

do.body:                                          ; preds = %land.end28, %if.end
  %15 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !5874
  %reqs2 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %15, i32 0, i32 0, !dbg !5876
  %16 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs2, align 8, !dbg !5876
  %arrayidx3 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %16, i64 0, !dbg !5874
  %file4 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx3, i32 0, i32 1, !dbg !5877
  %17 = load %struct.file_info*, %struct.file_info** %file4, align 8, !dbg !5877
  store %struct.file_info* %17, %struct.file_info** %file, align 8, !dbg !5878
  %18 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5879
  %ce_offset = getelementptr inbounds %struct.file_info, %struct.file_info* %18, i32 0, i32 8, !dbg !5881
  %19 = load i32, i32* %ce_offset, align 8, !dbg !5881
  %20 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5882
  %ce_size = getelementptr inbounds %struct.file_info, %struct.file_info* %20, i32 0, i32 9, !dbg !5883
  %21 = load i32, i32* %ce_size, align 4, !dbg !5883
  %add = add i32 %19, %21, !dbg !5884
  %conv = zext i32 %add to i64, !dbg !5879
  %22 = load i64, i64* %step, align 8, !dbg !5885
  %cmp5 = icmp ugt i64 %conv, %22, !dbg !5886
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !5887

if.then7:                                         ; preds = %do.body
  %23 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5888
  %archive8 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %23, i32 0, i32 0, !dbg !5890
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive8, i32 84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47, i32 0, i32 0)), !dbg !5891
  store i32 -30, i32* %retval, align 4, !dbg !5892
  br label %return, !dbg !5892

if.end9:                                          ; preds = %do.body
  %24 = load i8*, i8** %b, align 8, !dbg !5893
  %25 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5894
  %ce_offset10 = getelementptr inbounds %struct.file_info, %struct.file_info* %25, i32 0, i32 8, !dbg !5895
  %26 = load i32, i32* %ce_offset10, align 8, !dbg !5895
  %idx.ext = zext i32 %26 to i64, !dbg !5896
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !5896
  store i8* %add.ptr, i8** %p, align 8, !dbg !5897
  %27 = load i8*, i8** %p, align 8, !dbg !5898
  %28 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5899
  %ce_size11 = getelementptr inbounds %struct.file_info, %struct.file_info* %28, i32 0, i32 9, !dbg !5900
  %29 = load i32, i32* %ce_size11, align 4, !dbg !5900
  %idx.ext12 = zext i32 %29 to i64, !dbg !5901
  %add.ptr13 = getelementptr inbounds i8, i8* %27, i64 %idx.ext12, !dbg !5901
  store i8* %add.ptr13, i8** %end, align 8, !dbg !5902
  %30 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !5903
  call void @next_CE(%struct.read_ce_queue* %30), !dbg !5904
  %31 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5905
  %32 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !5906
  %33 = load i8*, i8** %p, align 8, !dbg !5907
  %34 = load i8*, i8** %end, align 8, !dbg !5908
  %call14 = call i32 @parse_rockridge(%struct.archive_read* %31, %struct.file_info* %32, i8* %33, i8* %34), !dbg !5909
  store i32 %call14, i32* %r, align 4, !dbg !5910
  %35 = load i32, i32* %r, align 4, !dbg !5911
  %cmp15 = icmp ne i32 %35, 0, !dbg !5913
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5914

if.then17:                                        ; preds = %if.end9
  store i32 -30, i32* %retval, align 4, !dbg !5915
  br label %return, !dbg !5915

if.end18:                                         ; preds = %if.end9
  br label %do.cond, !dbg !5916

do.cond:                                          ; preds = %if.end18
  %36 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !5917
  %cnt19 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %36, i32 0, i32 1, !dbg !5919
  %37 = load i32, i32* %cnt19, align 8, !dbg !5919
  %tobool20 = icmp ne i32 %37, 0, !dbg !5917
  br i1 %tobool20, label %land.rhs21, label %land.end28, !dbg !5920

land.rhs21:                                       ; preds = %do.cond
  %38 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap, align 8, !dbg !5921
  %reqs22 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %38, i32 0, i32 0, !dbg !5922
  %39 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs22, align 8, !dbg !5922
  %arrayidx23 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %39, i64 0, !dbg !5921
  %offset24 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx23, i32 0, i32 0, !dbg !5923
  %40 = load i64, i64* %offset24, align 8, !dbg !5923
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5924
  %current_position25 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 16, !dbg !5925
  %42 = load i64, i64* %current_position25, align 8, !dbg !5925
  %cmp26 = icmp eq i64 %40, %42, !dbg !5926
  br label %land.end28

land.end28:                                       ; preds = %land.rhs21, %do.cond
  %43 = phi i1 [ false, %do.cond ], [ %cmp26, %land.rhs21 ]
  br i1 %43, label %do.body, label %do.end, !dbg !5927

do.end:                                           ; preds = %land.end28
  %44 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !5929
  %45 = load i64, i64* %step, align 8, !dbg !5930
  %call29 = call i64 @__archive_read_consume(%struct.archive_read* %44, i64 %45), !dbg !5931
  %46 = load i64, i64* %step, align 8, !dbg !5932
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !5933
  %current_position30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 16, !dbg !5934
  %48 = load i64, i64* %current_position30, align 8, !dbg !5935
  %add31 = add i64 %48, %46, !dbg !5935
  store i64 %add31, i64* %current_position30, align 8, !dbg !5935
  br label %while.cond, !dbg !5936

while.end:                                        ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !5938
  br label %return, !dbg !5938

return:                                           ; preds = %while.end, %if.then17, %if.then7, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !5939
  ret i32 %49, !dbg !5939
}

; Function Attrs: nounwind uwtable
define internal void @next_CE(%struct.read_ce_queue* %heap) #0 !dbg !596 {
entry:
  %heap.addr = alloca %struct.read_ce_queue*, align 8
  %a_offset = alloca i64, align 8
  %b_offset = alloca i64, align 8
  %c_offset = alloca i64, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %tmp = alloca %struct.read_ce_req, align 8
  store %struct.read_ce_queue* %heap, %struct.read_ce_queue** %heap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.read_ce_queue** %heap.addr, metadata !5940, metadata !623), !dbg !5941
  call void @llvm.dbg.declare(metadata i64* %a_offset, metadata !5942, metadata !623), !dbg !5943
  call void @llvm.dbg.declare(metadata i64* %b_offset, metadata !5944, metadata !623), !dbg !5945
  call void @llvm.dbg.declare(metadata i64* %c_offset, metadata !5946, metadata !623), !dbg !5947
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5948, metadata !623), !dbg !5949
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5950, metadata !623), !dbg !5951
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5952, metadata !623), !dbg !5953
  call void @llvm.dbg.declare(metadata %struct.read_ce_req* %tmp, metadata !5954, metadata !623), !dbg !5955
  %0 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !5956
  %cnt = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %0, i32 0, i32 1, !dbg !5958
  %1 = load i32, i32* %cnt, align 8, !dbg !5958
  %cmp = icmp slt i32 %1, 1, !dbg !5959
  br i1 %cmp, label %if.then, label %if.end, !dbg !5960

if.then:                                          ; preds = %entry
  br label %return, !dbg !5961

if.end:                                           ; preds = %entry
  %2 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !5962
  %reqs = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %2, i32 0, i32 0, !dbg !5963
  %3 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs, align 8, !dbg !5963
  %arrayidx = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %3, i64 0, !dbg !5962
  %4 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !5964
  %cnt1 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %4, i32 0, i32 1, !dbg !5965
  %5 = load i32, i32* %cnt1, align 8, !dbg !5966
  %dec = add nsw i32 %5, -1, !dbg !5966
  store i32 %dec, i32* %cnt1, align 8, !dbg !5966
  %idxprom = sext i32 %dec to i64, !dbg !5967
  %6 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !5967
  %reqs2 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %6, i32 0, i32 0, !dbg !5968
  %7 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs2, align 8, !dbg !5968
  %arrayidx3 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %7, i64 %idxprom, !dbg !5967
  %8 = bitcast %struct.read_ce_req* %arrayidx to i8*, !dbg !5967
  %9 = bitcast %struct.read_ce_req* %arrayidx3 to i8*, !dbg !5967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false), !dbg !5967
  store i32 0, i32* %a, align 4, !dbg !5969
  %10 = load i32, i32* %a, align 4, !dbg !5970
  %idxprom4 = sext i32 %10 to i64, !dbg !5971
  %11 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !5971
  %reqs5 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %11, i32 0, i32 0, !dbg !5972
  %12 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs5, align 8, !dbg !5972
  %arrayidx6 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %12, i64 %idxprom4, !dbg !5971
  %offset = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx6, i32 0, i32 0, !dbg !5973
  %13 = load i64, i64* %offset, align 8, !dbg !5973
  store i64 %13, i64* %a_offset, align 8, !dbg !5974
  br label %for.cond, !dbg !5975

for.cond:                                         ; preds = %if.end30, %if.end
  %14 = load i32, i32* %a, align 4, !dbg !5976
  %15 = load i32, i32* %a, align 4, !dbg !5980
  %add = add nsw i32 %14, %15, !dbg !5981
  %add7 = add nsw i32 %add, 1, !dbg !5982
  store i32 %add7, i32* %b, align 4, !dbg !5983
  %16 = load i32, i32* %b, align 4, !dbg !5984
  %17 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !5986
  %cnt8 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %17, i32 0, i32 1, !dbg !5987
  %18 = load i32, i32* %cnt8, align 8, !dbg !5987
  %cmp9 = icmp sge i32 %16, %18, !dbg !5988
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5989

if.then10:                                        ; preds = %for.cond
  br label %return, !dbg !5990

if.end11:                                         ; preds = %for.cond
  %19 = load i32, i32* %b, align 4, !dbg !5991
  %idxprom12 = sext i32 %19 to i64, !dbg !5992
  %20 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !5992
  %reqs13 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %20, i32 0, i32 0, !dbg !5993
  %21 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs13, align 8, !dbg !5993
  %arrayidx14 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %21, i64 %idxprom12, !dbg !5992
  %offset15 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx14, i32 0, i32 0, !dbg !5994
  %22 = load i64, i64* %offset15, align 8, !dbg !5994
  store i64 %22, i64* %b_offset, align 8, !dbg !5995
  %23 = load i32, i32* %b, align 4, !dbg !5996
  %add16 = add nsw i32 %23, 1, !dbg !5997
  store i32 %add16, i32* %c, align 4, !dbg !5998
  %24 = load i32, i32* %c, align 4, !dbg !5999
  %25 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !6001
  %cnt17 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %25, i32 0, i32 1, !dbg !6002
  %26 = load i32, i32* %cnt17, align 8, !dbg !6002
  %cmp18 = icmp slt i32 %24, %26, !dbg !6003
  br i1 %cmp18, label %if.then19, label %if.end27, !dbg !6004

if.then19:                                        ; preds = %if.end11
  %27 = load i32, i32* %c, align 4, !dbg !6005
  %idxprom20 = sext i32 %27 to i64, !dbg !6007
  %28 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !6007
  %reqs21 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %28, i32 0, i32 0, !dbg !6008
  %29 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs21, align 8, !dbg !6008
  %arrayidx22 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %29, i64 %idxprom20, !dbg !6007
  %offset23 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %arrayidx22, i32 0, i32 0, !dbg !6009
  %30 = load i64, i64* %offset23, align 8, !dbg !6009
  store i64 %30, i64* %c_offset, align 8, !dbg !6010
  %31 = load i64, i64* %c_offset, align 8, !dbg !6011
  %32 = load i64, i64* %b_offset, align 8, !dbg !6013
  %cmp24 = icmp ult i64 %31, %32, !dbg !6014
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !6015

if.then25:                                        ; preds = %if.then19
  %33 = load i32, i32* %c, align 4, !dbg !6016
  store i32 %33, i32* %b, align 4, !dbg !6018
  %34 = load i64, i64* %c_offset, align 8, !dbg !6019
  store i64 %34, i64* %b_offset, align 8, !dbg !6020
  br label %if.end26, !dbg !6021

if.end26:                                         ; preds = %if.then25, %if.then19
  br label %if.end27, !dbg !6022

if.end27:                                         ; preds = %if.end26, %if.end11
  %35 = load i64, i64* %a_offset, align 8, !dbg !6023
  %36 = load i64, i64* %b_offset, align 8, !dbg !6025
  %cmp28 = icmp ule i64 %35, %36, !dbg !6026
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !6027

if.then29:                                        ; preds = %if.end27
  br label %return, !dbg !6028

if.end30:                                         ; preds = %if.end27
  %37 = load i32, i32* %a, align 4, !dbg !6029
  %idxprom31 = sext i32 %37 to i64, !dbg !6030
  %38 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !6030
  %reqs32 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %38, i32 0, i32 0, !dbg !6031
  %39 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs32, align 8, !dbg !6031
  %arrayidx33 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %39, i64 %idxprom31, !dbg !6030
  %40 = bitcast %struct.read_ce_req* %tmp to i8*, !dbg !6030
  %41 = bitcast %struct.read_ce_req* %arrayidx33 to i8*, !dbg !6030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 16, i32 8, i1 false), !dbg !6030
  %42 = load i32, i32* %a, align 4, !dbg !6032
  %idxprom34 = sext i32 %42 to i64, !dbg !6033
  %43 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !6033
  %reqs35 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %43, i32 0, i32 0, !dbg !6034
  %44 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs35, align 8, !dbg !6034
  %arrayidx36 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %44, i64 %idxprom34, !dbg !6033
  %45 = load i32, i32* %b, align 4, !dbg !6035
  %idxprom37 = sext i32 %45 to i64, !dbg !6036
  %46 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !6036
  %reqs38 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %46, i32 0, i32 0, !dbg !6037
  %47 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs38, align 8, !dbg !6037
  %arrayidx39 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %47, i64 %idxprom37, !dbg !6036
  %48 = bitcast %struct.read_ce_req* %arrayidx36 to i8*, !dbg !6036
  %49 = bitcast %struct.read_ce_req* %arrayidx39 to i8*, !dbg !6036
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 16, i32 8, i1 false), !dbg !6036
  %50 = load i32, i32* %b, align 4, !dbg !6038
  %idxprom40 = sext i32 %50 to i64, !dbg !6039
  %51 = load %struct.read_ce_queue*, %struct.read_ce_queue** %heap.addr, align 8, !dbg !6039
  %reqs41 = getelementptr inbounds %struct.read_ce_queue, %struct.read_ce_queue* %51, i32 0, i32 0, !dbg !6040
  %52 = load %struct.read_ce_req*, %struct.read_ce_req** %reqs41, align 8, !dbg !6040
  %arrayidx42 = getelementptr inbounds %struct.read_ce_req, %struct.read_ce_req* %52, i64 %idxprom40, !dbg !6039
  %53 = bitcast %struct.read_ce_req* %arrayidx42 to i8*, !dbg !6041
  %54 = bitcast %struct.read_ce_req* %tmp to i8*, !dbg !6041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false), !dbg !6041
  %55 = load i32, i32* %b, align 4, !dbg !6042
  store i32 %55, i32* %a, align 4, !dbg !6043
  br label %for.cond, !dbg !6044

return:                                           ; preds = %if.then29, %if.then10, %if.then
  ret void, !dbg !6046
}

declare void @archive_string_concat(%struct.archive_string*, %struct.archive_string*) #2

; Function Attrs: nounwind uwtable
define internal i32 @zisofs_read_data(%struct.archive_read* %a, i8** %buff, i64* %size, i64* %offset) #0 !dbg !609 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_read*, align 8
  %buff.addr = alloca i8**, align 8
  %size.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %zisofs = alloca %struct.zisofs*, align 8
  %p = alloca i8*, align 8
  %avail = alloca i64, align 8
  %bytes_read = alloca i64, align 8
  %uncompressed_size = alloca i64, align 8
  %r = alloca i32, align 4
  %ceil = alloca i64, align 8
  %xsize = alloca i64, align 8
  %alloc = alloca i64, align 8
  %err = alloca i32, align 4
  %bst = alloca i32, align 4
  %bed = alloca i32, align 4
  store %struct.archive_read* %a, %struct.archive_read** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_read** %a.addr, metadata !6047, metadata !623), !dbg !6048
  store i8** %buff, i8*** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buff.addr, metadata !6049, metadata !623), !dbg !6050
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !6051, metadata !623), !dbg !6052
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !6053, metadata !623), !dbg !6054
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !6055, metadata !623), !dbg !6056
  call void @llvm.dbg.declare(metadata %struct.zisofs** %zisofs, metadata !6057, metadata !623), !dbg !6058
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6059, metadata !623), !dbg !6060
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !6061, metadata !623), !dbg !6062
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !6063, metadata !623), !dbg !6064
  call void @llvm.dbg.declare(metadata i64* %uncompressed_size, metadata !6065, metadata !623), !dbg !6066
  call void @llvm.dbg.declare(metadata i32* %r, metadata !6067, metadata !623), !dbg !6068
  %0 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6069
  %format = getelementptr inbounds %struct.archive_read, %struct.archive_read* %0, i32 0, i32 13, !dbg !6070
  %1 = load %struct.archive_format_descriptor*, %struct.archive_format_descriptor** %format, align 8, !dbg !6070
  %data = getelementptr inbounds %struct.archive_format_descriptor, %struct.archive_format_descriptor* %1, i32 0, i32 0, !dbg !6071
  %2 = load i8*, i8** %data, align 8, !dbg !6071
  %3 = bitcast i8* %2 to %struct.iso9660*, !dbg !6072
  store %struct.iso9660* %3, %struct.iso9660** %iso9660, align 8, !dbg !6073
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6074
  %entry_zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 25, !dbg !6075
  store %struct.zisofs* %entry_zisofs, %struct.zisofs** %zisofs, align 8, !dbg !6076
  %5 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6077
  %call = call i8* @__archive_read_ahead(%struct.archive_read* %5, i64 1, i64* %bytes_read), !dbg !6078
  store i8* %call, i8** %p, align 8, !dbg !6079
  %6 = load i64, i64* %bytes_read, align 8, !dbg !6080
  %cmp = icmp sle i64 %6, 0, !dbg !6082
  br i1 %cmp, label %if.then, label %if.end, !dbg !6083

if.then:                                          ; preds = %entry
  %7 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6084
  %archive = getelementptr inbounds %struct.archive_read, %struct.archive_read* %7, i32 0, i32 0, !dbg !6086
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i32 0, i32 0)), !dbg !6087
  store i32 -30, i32* %retval, align 4, !dbg !6088
  br label %return, !dbg !6088

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %bytes_read, align 8, !dbg !6089
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6091
  %entry_bytes_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 23, !dbg !6092
  %10 = load i64, i64* %entry_bytes_remaining, align 8, !dbg !6092
  %cmp1 = icmp sgt i64 %8, %10, !dbg !6093
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !6094

if.then2:                                         ; preds = %if.end
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6095
  %entry_bytes_remaining3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 23, !dbg !6096
  %12 = load i64, i64* %entry_bytes_remaining3, align 8, !dbg !6096
  store i64 %12, i64* %bytes_read, align 8, !dbg !6097
  br label %if.end4, !dbg !6098

if.end4:                                          ; preds = %if.then2, %if.end
  %13 = load i64, i64* %bytes_read, align 8, !dbg !6099
  store i64 %13, i64* %avail, align 8, !dbg !6100
  store i64 0, i64* %uncompressed_size, align 8, !dbg !6101
  %14 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6102
  %initialized = getelementptr inbounds %struct.zisofs, %struct.zisofs* %14, i32 0, i32 3, !dbg !6104
  %15 = load i32, i32* %initialized, align 8, !dbg !6104
  %tobool = icmp ne i32 %15, 0, !dbg !6102
  br i1 %tobool, label %if.end130, label %if.then5, !dbg !6105

if.then5:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i64* %ceil, metadata !6106, metadata !623), !dbg !6108
  call void @llvm.dbg.declare(metadata i64* %xsize, metadata !6109, metadata !623), !dbg !6110
  %16 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6111
  %pz_uncompressed_size = getelementptr inbounds %struct.zisofs, %struct.zisofs* %16, i32 0, i32 2, !dbg !6112
  %17 = load i64, i64* %pz_uncompressed_size, align 8, !dbg !6112
  %18 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6113
  %pz_log2_bs = getelementptr inbounds %struct.zisofs, %struct.zisofs* %18, i32 0, i32 1, !dbg !6114
  %19 = load i32, i32* %pz_log2_bs, align 4, !dbg !6114
  %sh_prom = zext i32 %19 to i64, !dbg !6115
  %shl = shl i64 1, %sh_prom, !dbg !6115
  %add = add i64 %17, %shl, !dbg !6116
  %sub = sub i64 %add, 1, !dbg !6117
  %20 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6118
  %pz_log2_bs6 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %20, i32 0, i32 1, !dbg !6119
  %21 = load i32, i32* %pz_log2_bs6, align 4, !dbg !6119
  %sh_prom7 = zext i32 %21 to i64, !dbg !6120
  %shr = lshr i64 %sub, %sh_prom7, !dbg !6120
  store i64 %shr, i64* %ceil, align 8, !dbg !6121
  %22 = load i64, i64* %ceil, align 8, !dbg !6122
  %add8 = add i64 %22, 1, !dbg !6123
  %mul = mul i64 %add8, 4, !dbg !6124
  store i64 %mul, i64* %xsize, align 8, !dbg !6125
  %23 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6126
  %block_pointers_alloc = getelementptr inbounds %struct.zisofs, %struct.zisofs* %23, i32 0, i32 11, !dbg !6128
  %24 = load i64, i64* %block_pointers_alloc, align 8, !dbg !6128
  %25 = load i64, i64* %xsize, align 8, !dbg !6129
  %cmp9 = icmp ult i64 %24, %25, !dbg !6130
  br i1 %cmp9, label %if.then10, label %if.end26, !dbg !6131

if.then10:                                        ; preds = %if.then5
  call void @llvm.dbg.declare(metadata i64* %alloc, metadata !6132, metadata !623), !dbg !6134
  %26 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6135
  %block_pointers = getelementptr inbounds %struct.zisofs, %struct.zisofs* %26, i32 0, i32 10, !dbg !6137
  %27 = load i8*, i8** %block_pointers, align 8, !dbg !6137
  %cmp11 = icmp ne i8* %27, null, !dbg !6138
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !6139

if.then12:                                        ; preds = %if.then10
  %28 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6140
  %block_pointers13 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %28, i32 0, i32 10, !dbg !6141
  %29 = load i8*, i8** %block_pointers13, align 8, !dbg !6141
  call void @free(i8* %29) #8, !dbg !6142
  br label %if.end14, !dbg !6142

if.end14:                                         ; preds = %if.then12, %if.then10
  %30 = load i64, i64* %xsize, align 8, !dbg !6143
  %shr15 = lshr i64 %30, 10, !dbg !6144
  %add16 = add i64 %shr15, 1, !dbg !6145
  %shl17 = shl i64 %add16, 10, !dbg !6146
  store i64 %shl17, i64* %alloc, align 8, !dbg !6147
  %31 = load i64, i64* %alloc, align 8, !dbg !6148
  %call18 = call noalias i8* @malloc(i64 %31) #8, !dbg !6149
  %32 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6150
  %block_pointers19 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %32, i32 0, i32 10, !dbg !6151
  store i8* %call18, i8** %block_pointers19, align 8, !dbg !6152
  %33 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6153
  %block_pointers20 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %33, i32 0, i32 10, !dbg !6155
  %34 = load i8*, i8** %block_pointers20, align 8, !dbg !6155
  %cmp21 = icmp eq i8* %34, null, !dbg !6156
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !6157

if.then22:                                        ; preds = %if.end14
  %35 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6158
  %archive23 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %35, i32 0, i32 0, !dbg !6160
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive23, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i32 0, i32 0)), !dbg !6161
  store i32 -30, i32* %retval, align 4, !dbg !6162
  br label %return, !dbg !6162

if.end24:                                         ; preds = %if.end14
  %36 = load i64, i64* %alloc, align 8, !dbg !6163
  %37 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6164
  %block_pointers_alloc25 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %37, i32 0, i32 11, !dbg !6165
  store i64 %36, i64* %block_pointers_alloc25, align 8, !dbg !6166
  br label %if.end26, !dbg !6167

if.end26:                                         ; preds = %if.end24, %if.then5
  %38 = load i64, i64* %xsize, align 8, !dbg !6168
  %39 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6169
  %block_pointers_size = getelementptr inbounds %struct.zisofs, %struct.zisofs* %39, i32 0, i32 12, !dbg !6170
  store i64 %38, i64* %block_pointers_size, align 8, !dbg !6171
  %40 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6172
  %pz_log2_bs27 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %40, i32 0, i32 1, !dbg !6173
  %41 = load i32, i32* %pz_log2_bs27, align 4, !dbg !6173
  %sh_prom28 = zext i32 %41 to i64, !dbg !6174
  %shl29 = shl i64 1, %sh_prom28, !dbg !6174
  store i64 %shl29, i64* %xsize, align 8, !dbg !6175
  %42 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6176
  %uncompressed_buffer_size = getelementptr inbounds %struct.zisofs, %struct.zisofs* %42, i32 0, i32 5, !dbg !6178
  %43 = load i64, i64* %uncompressed_buffer_size, align 8, !dbg !6178
  %44 = load i64, i64* %xsize, align 8, !dbg !6179
  %cmp30 = icmp ult i64 %43, %44, !dbg !6180
  br i1 %cmp30, label %if.then31, label %if.end43, !dbg !6181

if.then31:                                        ; preds = %if.end26
  %45 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6182
  %uncompressed_buffer = getelementptr inbounds %struct.zisofs, %struct.zisofs* %45, i32 0, i32 4, !dbg !6185
  %46 = load i8*, i8** %uncompressed_buffer, align 8, !dbg !6185
  %cmp32 = icmp ne i8* %46, null, !dbg !6186
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !6187

if.then33:                                        ; preds = %if.then31
  %47 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6188
  %uncompressed_buffer34 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %47, i32 0, i32 4, !dbg !6189
  %48 = load i8*, i8** %uncompressed_buffer34, align 8, !dbg !6189
  call void @free(i8* %48) #8, !dbg !6190
  br label %if.end35, !dbg !6190

if.end35:                                         ; preds = %if.then33, %if.then31
  %49 = load i64, i64* %xsize, align 8, !dbg !6191
  %call36 = call noalias i8* @malloc(i64 %49) #8, !dbg !6192
  %50 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6193
  %uncompressed_buffer37 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %50, i32 0, i32 4, !dbg !6194
  store i8* %call36, i8** %uncompressed_buffer37, align 8, !dbg !6195
  %51 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6196
  %uncompressed_buffer38 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %51, i32 0, i32 4, !dbg !6198
  %52 = load i8*, i8** %uncompressed_buffer38, align 8, !dbg !6198
  %cmp39 = icmp eq i8* %52, null, !dbg !6199
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !6200

if.then40:                                        ; preds = %if.end35
  %53 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6201
  %archive41 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %53, i32 0, i32 0, !dbg !6203
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive41, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i32 0, i32 0)), !dbg !6204
  store i32 -30, i32* %retval, align 4, !dbg !6205
  br label %return, !dbg !6205

if.end42:                                         ; preds = %if.end35
  br label %if.end43, !dbg !6206

if.end43:                                         ; preds = %if.end42, %if.end26
  %54 = load i64, i64* %xsize, align 8, !dbg !6207
  %55 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6208
  %uncompressed_buffer_size44 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %55, i32 0, i32 5, !dbg !6209
  store i64 %54, i64* %uncompressed_buffer_size44, align 8, !dbg !6210
  %56 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6211
  %header_avail = getelementptr inbounds %struct.zisofs, %struct.zisofs* %56, i32 0, i32 8, !dbg !6213
  %57 = load i64, i64* %header_avail, align 8, !dbg !6213
  %cmp45 = icmp ult i64 %57, 16, !dbg !6214
  br i1 %cmp45, label %if.then46, label %if.end57, !dbg !6215

if.then46:                                        ; preds = %if.end43
  %58 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6216
  %header_avail47 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %58, i32 0, i32 8, !dbg !6218
  %59 = load i64, i64* %header_avail47, align 8, !dbg !6218
  %sub48 = sub i64 16, %59, !dbg !6219
  store i64 %sub48, i64* %xsize, align 8, !dbg !6220
  %60 = load i64, i64* %avail, align 8, !dbg !6221
  %61 = load i64, i64* %xsize, align 8, !dbg !6223
  %cmp49 = icmp ult i64 %60, %61, !dbg !6224
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !6225

if.then50:                                        ; preds = %if.then46
  %62 = load i64, i64* %avail, align 8, !dbg !6226
  store i64 %62, i64* %xsize, align 8, !dbg !6227
  br label %if.end51, !dbg !6228

if.end51:                                         ; preds = %if.then50, %if.then46
  %63 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6229
  %header = getelementptr inbounds %struct.zisofs, %struct.zisofs* %63, i32 0, i32 7, !dbg !6230
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %header, i32 0, i32 0, !dbg !6229
  %64 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6231
  %header_avail52 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %64, i32 0, i32 8, !dbg !6232
  %65 = load i64, i64* %header_avail52, align 8, !dbg !6232
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %65, !dbg !6233
  %66 = load i8*, i8** %p, align 8, !dbg !6234
  %67 = load i64, i64* %xsize, align 8, !dbg !6235
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %66, i64 %67, i32 1, i1 false), !dbg !6236
  %68 = load i64, i64* %xsize, align 8, !dbg !6237
  %69 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6238
  %header_avail53 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %69, i32 0, i32 8, !dbg !6239
  %70 = load i64, i64* %header_avail53, align 8, !dbg !6240
  %add54 = add i64 %70, %68, !dbg !6240
  store i64 %add54, i64* %header_avail53, align 8, !dbg !6240
  %71 = load i64, i64* %xsize, align 8, !dbg !6241
  %72 = load i64, i64* %avail, align 8, !dbg !6242
  %sub55 = sub i64 %72, %71, !dbg !6242
  store i64 %sub55, i64* %avail, align 8, !dbg !6242
  %73 = load i64, i64* %xsize, align 8, !dbg !6243
  %74 = load i8*, i8** %p, align 8, !dbg !6244
  %add.ptr56 = getelementptr inbounds i8, i8* %74, i64 %73, !dbg !6244
  store i8* %add.ptr56, i8** %p, align 8, !dbg !6244
  br label %if.end57, !dbg !6245

if.end57:                                         ; preds = %if.end51, %if.end43
  %75 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6246
  %header_passed = getelementptr inbounds %struct.zisofs, %struct.zisofs* %75, i32 0, i32 9, !dbg !6248
  %76 = load i32, i32* %header_passed, align 8, !dbg !6248
  %tobool58 = icmp ne i32 %76, 0, !dbg !6246
  br i1 %tobool58, label %if.end96, label %land.lhs.true, !dbg !6249

land.lhs.true:                                    ; preds = %if.end57
  %77 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6250
  %header_avail59 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %77, i32 0, i32 8, !dbg !6251
  %78 = load i64, i64* %header_avail59, align 8, !dbg !6251
  %cmp60 = icmp eq i64 %78, 16, !dbg !6252
  br i1 %cmp60, label %if.then61, label %if.end96, !dbg !6253

if.then61:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6255, metadata !623), !dbg !6257
  store i32 0, i32* %err, align 4, !dbg !6257
  %79 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6258
  %header62 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %79, i32 0, i32 7, !dbg !6260
  %arraydecay63 = getelementptr inbounds [16 x i8], [16 x i8]* %header62, i32 0, i32 0, !dbg !6258
  %call64 = call i32 @memcmp(i8* %arraydecay63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @zisofs_magic, i32 0, i32 0), i64 8) #9, !dbg !6261
  %cmp65 = icmp ne i32 %call64, 0, !dbg !6262
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !6263

if.then66:                                        ; preds = %if.then61
  store i32 1, i32* %err, align 4, !dbg !6264
  br label %if.end67, !dbg !6265

if.end67:                                         ; preds = %if.then66, %if.then61
  %80 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6266
  %header68 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %80, i32 0, i32 7, !dbg !6268
  %arraydecay69 = getelementptr inbounds [16 x i8], [16 x i8]* %header68, i32 0, i32 0, !dbg !6266
  %add.ptr70 = getelementptr inbounds i8, i8* %arraydecay69, i64 8, !dbg !6269
  %call71 = call i32 @archive_le32dec(i8* %add.ptr70), !dbg !6270
  %conv = zext i32 %call71 to i64, !dbg !6270
  %81 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6271
  %pz_uncompressed_size72 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %81, i32 0, i32 2, !dbg !6272
  %82 = load i64, i64* %pz_uncompressed_size72, align 8, !dbg !6272
  %cmp73 = icmp ne i64 %conv, %82, !dbg !6273
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !6274

if.then75:                                        ; preds = %if.end67
  store i32 1, i32* %err, align 4, !dbg !6275
  br label %if.end76, !dbg !6276

if.end76:                                         ; preds = %if.then75, %if.end67
  %83 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6277
  %header77 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %83, i32 0, i32 7, !dbg !6279
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %header77, i64 0, i64 12, !dbg !6277
  %84 = load i8, i8* %arrayidx, align 4, !dbg !6277
  %conv78 = zext i8 %84 to i32, !dbg !6277
  %cmp79 = icmp ne i32 %conv78, 4, !dbg !6280
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !6281

if.then81:                                        ; preds = %if.end76
  store i32 1, i32* %err, align 4, !dbg !6282
  br label %if.end82, !dbg !6283

if.end82:                                         ; preds = %if.then81, %if.end76
  %85 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6284
  %header83 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %85, i32 0, i32 7, !dbg !6286
  %arrayidx84 = getelementptr inbounds [16 x i8], [16 x i8]* %header83, i64 0, i64 13, !dbg !6284
  %86 = load i8, i8* %arrayidx84, align 1, !dbg !6284
  %conv85 = zext i8 %86 to i32, !dbg !6284
  %87 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6287
  %pz_log2_bs86 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %87, i32 0, i32 1, !dbg !6288
  %88 = load i32, i32* %pz_log2_bs86, align 4, !dbg !6288
  %cmp87 = icmp ne i32 %conv85, %88, !dbg !6289
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !6290

if.then89:                                        ; preds = %if.end82
  store i32 1, i32* %err, align 4, !dbg !6291
  br label %if.end90, !dbg !6292

if.end90:                                         ; preds = %if.then89, %if.end82
  %89 = load i32, i32* %err, align 4, !dbg !6293
  %tobool91 = icmp ne i32 %89, 0, !dbg !6293
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !6295

if.then92:                                        ; preds = %if.end90
  %90 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6296
  %archive93 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %90, i32 0, i32 0, !dbg !6298
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive93, i32 84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52, i32 0, i32 0)), !dbg !6299
  store i32 -30, i32* %retval, align 4, !dbg !6300
  br label %return, !dbg !6300

if.end94:                                         ; preds = %if.end90
  %91 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6301
  %header_passed95 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %91, i32 0, i32 9, !dbg !6302
  store i32 1, i32* %header_passed95, align 8, !dbg !6303
  br label %if.end96, !dbg !6304

if.end96:                                         ; preds = %if.end94, %land.lhs.true, %if.end57
  %92 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6305
  %header_passed97 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %92, i32 0, i32 9, !dbg !6307
  %93 = load i32, i32* %header_passed97, align 8, !dbg !6307
  %tobool98 = icmp ne i32 %93, 0, !dbg !6305
  br i1 %tobool98, label %land.lhs.true99, label %if.end125, !dbg !6308

land.lhs.true99:                                  ; preds = %if.end96
  %94 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6309
  %block_pointers_avail = getelementptr inbounds %struct.zisofs, %struct.zisofs* %94, i32 0, i32 13, !dbg !6310
  %95 = load i64, i64* %block_pointers_avail, align 8, !dbg !6310
  %96 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6311
  %block_pointers_size100 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %96, i32 0, i32 12, !dbg !6312
  %97 = load i64, i64* %block_pointers_size100, align 8, !dbg !6312
  %cmp101 = icmp ult i64 %95, %97, !dbg !6313
  br i1 %cmp101, label %if.then103, label %if.end125, !dbg !6314

if.then103:                                       ; preds = %land.lhs.true99
  %98 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6315
  %block_pointers_size104 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %98, i32 0, i32 12, !dbg !6317
  %99 = load i64, i64* %block_pointers_size104, align 8, !dbg !6317
  %100 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6318
  %block_pointers_avail105 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %100, i32 0, i32 13, !dbg !6319
  %101 = load i64, i64* %block_pointers_avail105, align 8, !dbg !6319
  %sub106 = sub i64 %99, %101, !dbg !6320
  store i64 %sub106, i64* %xsize, align 8, !dbg !6321
  %102 = load i64, i64* %avail, align 8, !dbg !6322
  %103 = load i64, i64* %xsize, align 8, !dbg !6324
  %cmp107 = icmp ult i64 %102, %103, !dbg !6325
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !6326

if.then109:                                       ; preds = %if.then103
  %104 = load i64, i64* %avail, align 8, !dbg !6327
  store i64 %104, i64* %xsize, align 8, !dbg !6328
  br label %if.end110, !dbg !6329

if.end110:                                        ; preds = %if.then109, %if.then103
  %105 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6330
  %block_pointers111 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %105, i32 0, i32 10, !dbg !6331
  %106 = load i8*, i8** %block_pointers111, align 8, !dbg !6331
  %107 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6332
  %block_pointers_avail112 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %107, i32 0, i32 13, !dbg !6333
  %108 = load i64, i64* %block_pointers_avail112, align 8, !dbg !6333
  %add.ptr113 = getelementptr inbounds i8, i8* %106, i64 %108, !dbg !6334
  %109 = load i8*, i8** %p, align 8, !dbg !6335
  %110 = load i64, i64* %xsize, align 8, !dbg !6336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr113, i8* %109, i64 %110, i32 1, i1 false), !dbg !6337
  %111 = load i64, i64* %xsize, align 8, !dbg !6338
  %112 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6339
  %block_pointers_avail114 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %112, i32 0, i32 13, !dbg !6340
  %113 = load i64, i64* %block_pointers_avail114, align 8, !dbg !6341
  %add115 = add i64 %113, %111, !dbg !6341
  store i64 %add115, i64* %block_pointers_avail114, align 8, !dbg !6341
  %114 = load i64, i64* %xsize, align 8, !dbg !6342
  %115 = load i64, i64* %avail, align 8, !dbg !6343
  %sub116 = sub i64 %115, %114, !dbg !6343
  store i64 %sub116, i64* %avail, align 8, !dbg !6343
  %116 = load i64, i64* %xsize, align 8, !dbg !6344
  %117 = load i8*, i8** %p, align 8, !dbg !6345
  %add.ptr117 = getelementptr inbounds i8, i8* %117, i64 %116, !dbg !6345
  store i8* %add.ptr117, i8** %p, align 8, !dbg !6345
  %118 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6346
  %block_pointers_avail118 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %118, i32 0, i32 13, !dbg !6348
  %119 = load i64, i64* %block_pointers_avail118, align 8, !dbg !6348
  %120 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6349
  %block_pointers_size119 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %120, i32 0, i32 12, !dbg !6350
  %121 = load i64, i64* %block_pointers_size119, align 8, !dbg !6350
  %cmp120 = icmp eq i64 %119, %121, !dbg !6351
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !6352

if.then122:                                       ; preds = %if.end110
  %122 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6353
  %block_off = getelementptr inbounds %struct.zisofs, %struct.zisofs* %122, i32 0, i32 14, !dbg !6355
  store i64 0, i64* %block_off, align 8, !dbg !6356
  %123 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6357
  %block_avail = getelementptr inbounds %struct.zisofs, %struct.zisofs* %123, i32 0, i32 15, !dbg !6358
  store i32 0, i32* %block_avail, align 8, !dbg !6359
  %124 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6360
  %initialized123 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %124, i32 0, i32 3, !dbg !6361
  store i32 1, i32* %initialized123, align 8, !dbg !6362
  br label %if.end124, !dbg !6363

if.end124:                                        ; preds = %if.then122, %if.end110
  br label %if.end125, !dbg !6364

if.end125:                                        ; preds = %if.end124, %land.lhs.true99, %if.end96
  %125 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6365
  %initialized126 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %125, i32 0, i32 3, !dbg !6367
  %126 = load i32, i32* %initialized126, align 8, !dbg !6367
  %tobool127 = icmp ne i32 %126, 0, !dbg !6365
  br i1 %tobool127, label %if.end129, label %if.then128, !dbg !6368

if.then128:                                       ; preds = %if.end125
  br label %next_data, !dbg !6369

if.end129:                                        ; preds = %if.end125
  br label %if.end130, !dbg !6370

if.end130:                                        ; preds = %if.end129, %if.end4
  %127 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6371
  %block_avail131 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %127, i32 0, i32 15, !dbg !6373
  %128 = load i32, i32* %block_avail131, align 8, !dbg !6373
  %cmp132 = icmp eq i32 %128, 0, !dbg !6374
  br i1 %cmp132, label %if.then134, label %if.end184, !dbg !6375

if.then134:                                       ; preds = %if.end130
  call void @llvm.dbg.declare(metadata i32* %bst, metadata !6376, metadata !623), !dbg !6378
  call void @llvm.dbg.declare(metadata i32* %bed, metadata !6379, metadata !623), !dbg !6380
  %129 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6381
  %block_off135 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %129, i32 0, i32 14, !dbg !6383
  %130 = load i64, i64* %block_off135, align 8, !dbg !6383
  %add136 = add i64 %130, 4, !dbg !6384
  %131 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6385
  %block_pointers_size137 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %131, i32 0, i32 12, !dbg !6386
  %132 = load i64, i64* %block_pointers_size137, align 8, !dbg !6386
  %cmp138 = icmp uge i64 %add136, %132, !dbg !6387
  br i1 %cmp138, label %if.then140, label %if.end142, !dbg !6388

if.then140:                                       ; preds = %if.then134
  %133 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6389
  %archive141 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %133, i32 0, i32 0, !dbg !6391
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive141, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0)), !dbg !6392
  store i32 -30, i32* %retval, align 4, !dbg !6393
  br label %return, !dbg !6393

if.end142:                                        ; preds = %if.then134
  %134 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6394
  %block_pointers143 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %134, i32 0, i32 10, !dbg !6395
  %135 = load i8*, i8** %block_pointers143, align 8, !dbg !6395
  %136 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6396
  %block_off144 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %136, i32 0, i32 14, !dbg !6397
  %137 = load i64, i64* %block_off144, align 8, !dbg !6397
  %add.ptr145 = getelementptr inbounds i8, i8* %135, i64 %137, !dbg !6398
  %call146 = call i32 @archive_le32dec(i8* %add.ptr145), !dbg !6399
  store i32 %call146, i32* %bst, align 4, !dbg !6400
  %138 = load i32, i32* %bst, align 4, !dbg !6401
  %conv147 = zext i32 %138 to i64, !dbg !6401
  %139 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6403
  %pz_offset = getelementptr inbounds %struct.zisofs, %struct.zisofs* %139, i32 0, i32 6, !dbg !6404
  %140 = load i32, i32* %pz_offset, align 8, !dbg !6404
  %conv148 = zext i32 %140 to i64, !dbg !6403
  %141 = load i64, i64* %bytes_read, align 8, !dbg !6405
  %142 = load i64, i64* %avail, align 8, !dbg !6406
  %sub149 = sub i64 %141, %142, !dbg !6407
  %add150 = add i64 %conv148, %sub149, !dbg !6408
  %cmp151 = icmp ne i64 %conv147, %add150, !dbg !6409
  br i1 %cmp151, label %if.then153, label %if.end155, !dbg !6410

if.then153:                                       ; preds = %if.end142
  %143 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6411
  %archive154 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %143, i32 0, i32 0, !dbg !6413
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive154, i32 84, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.54, i32 0, i32 0)), !dbg !6414
  store i32 -30, i32* %retval, align 4, !dbg !6415
  br label %return, !dbg !6415

if.end155:                                        ; preds = %if.end142
  %144 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6416
  %block_pointers156 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %144, i32 0, i32 10, !dbg !6417
  %145 = load i8*, i8** %block_pointers156, align 8, !dbg !6417
  %146 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6418
  %block_off157 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %146, i32 0, i32 14, !dbg !6419
  %147 = load i64, i64* %block_off157, align 8, !dbg !6419
  %add.ptr158 = getelementptr inbounds i8, i8* %145, i64 %147, !dbg !6420
  %add.ptr159 = getelementptr inbounds i8, i8* %add.ptr158, i64 4, !dbg !6421
  %call160 = call i32 @archive_le32dec(i8* %add.ptr159), !dbg !6422
  store i32 %call160, i32* %bed, align 4, !dbg !6423
  %148 = load i32, i32* %bed, align 4, !dbg !6424
  %149 = load i32, i32* %bst, align 4, !dbg !6426
  %cmp161 = icmp ult i32 %148, %149, !dbg !6427
  br i1 %cmp161, label %if.then163, label %if.end165, !dbg !6428

if.then163:                                       ; preds = %if.end155
  %150 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6429
  %archive164 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %150, i32 0, i32 0, !dbg !6431
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive164, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0)), !dbg !6432
  store i32 -30, i32* %retval, align 4, !dbg !6433
  br label %return, !dbg !6433

if.end165:                                        ; preds = %if.end155
  %151 = load i32, i32* %bed, align 4, !dbg !6434
  %152 = load i32, i32* %bst, align 4, !dbg !6435
  %sub166 = sub i32 %151, %152, !dbg !6436
  %153 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6437
  %block_avail167 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %153, i32 0, i32 15, !dbg !6438
  store i32 %sub166, i32* %block_avail167, align 8, !dbg !6439
  %154 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6440
  %block_off168 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %154, i32 0, i32 14, !dbg !6441
  %155 = load i64, i64* %block_off168, align 8, !dbg !6442
  %add169 = add i64 %155, 4, !dbg !6442
  store i64 %add169, i64* %block_off168, align 8, !dbg !6442
  %156 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6443
  %stream_valid = getelementptr inbounds %struct.zisofs, %struct.zisofs* %156, i32 0, i32 17, !dbg !6445
  %157 = load i32, i32* %stream_valid, align 8, !dbg !6445
  %tobool170 = icmp ne i32 %157, 0, !dbg !6443
  br i1 %tobool170, label %if.then171, label %if.else, !dbg !6446

if.then171:                                       ; preds = %if.end165
  %158 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6447
  %stream = getelementptr inbounds %struct.zisofs, %struct.zisofs* %158, i32 0, i32 16, !dbg !6448
  %call172 = call i32 @cm_zlib_inflateReset(%struct.z_stream_s* %stream), !dbg !6449
  store i32 %call172, i32* %r, align 4, !dbg !6450
  br label %if.end175, !dbg !6451

if.else:                                          ; preds = %if.end165
  %159 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6452
  %stream173 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %159, i32 0, i32 16, !dbg !6452
  %call174 = call i32 @cm_zlib_inflateInit_(%struct.z_stream_s* %stream173, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i32 112), !dbg !6452
  store i32 %call174, i32* %r, align 4, !dbg !6453
  br label %if.end175

if.end175:                                        ; preds = %if.else, %if.then171
  %160 = load i32, i32* %r, align 4, !dbg !6454
  %cmp176 = icmp ne i32 %160, 0, !dbg !6456
  br i1 %cmp176, label %if.then178, label %if.end180, !dbg !6457

if.then178:                                       ; preds = %if.end175
  %161 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6458
  %archive179 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %161, i32 0, i32 0, !dbg !6460
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive179, i32 -1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i32 0, i32 0)), !dbg !6461
  store i32 -30, i32* %retval, align 4, !dbg !6462
  br label %return, !dbg !6462

if.end180:                                        ; preds = %if.end175
  %162 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6463
  %stream_valid181 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %162, i32 0, i32 17, !dbg !6464
  store i32 1, i32* %stream_valid181, align 8, !dbg !6465
  %163 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6466
  %stream182 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %163, i32 0, i32 16, !dbg !6467
  %total_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream182, i32 0, i32 2, !dbg !6468
  store i64 0, i64* %total_in, align 8, !dbg !6469
  %164 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6470
  %stream183 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %164, i32 0, i32 16, !dbg !6471
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream183, i32 0, i32 5, !dbg !6472
  store i64 0, i64* %total_out, align 8, !dbg !6473
  br label %if.end184, !dbg !6474

if.end184:                                        ; preds = %if.end180, %if.end130
  %165 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6475
  %block_avail185 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %165, i32 0, i32 15, !dbg !6477
  %166 = load i32, i32* %block_avail185, align 8, !dbg !6477
  %cmp186 = icmp eq i32 %166, 0, !dbg !6478
  br i1 %cmp186, label %if.then188, label %if.else192, !dbg !6479

if.then188:                                       ; preds = %if.end184
  %167 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6480
  %uncompressed_buffer189 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %167, i32 0, i32 4, !dbg !6482
  %168 = load i8*, i8** %uncompressed_buffer189, align 8, !dbg !6482
  %169 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6483
  %uncompressed_buffer_size190 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %169, i32 0, i32 5, !dbg !6484
  %170 = load i64, i64* %uncompressed_buffer_size190, align 8, !dbg !6484
  call void @llvm.memset.p0i8.i64(i8* %168, i8 0, i64 %170, i32 1, i1 false), !dbg !6485
  %171 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6486
  %uncompressed_buffer_size191 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %171, i32 0, i32 5, !dbg !6487
  %172 = load i64, i64* %uncompressed_buffer_size191, align 8, !dbg !6487
  store i64 %172, i64* %uncompressed_size, align 8, !dbg !6488
  br label %if.end230, !dbg !6489

if.else192:                                       ; preds = %if.end184
  %173 = load i8*, i8** %p, align 8, !dbg !6490
  %174 = ptrtoint i8* %173 to i64, !dbg !6492
  %175 = inttoptr i64 %174 to i8*, !dbg !6493
  %176 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6494
  %stream193 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %176, i32 0, i32 16, !dbg !6495
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream193, i32 0, i32 0, !dbg !6496
  store i8* %175, i8** %next_in, align 8, !dbg !6497
  %177 = load i64, i64* %avail, align 8, !dbg !6498
  %178 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6500
  %block_avail194 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %178, i32 0, i32 15, !dbg !6501
  %179 = load i32, i32* %block_avail194, align 8, !dbg !6501
  %conv195 = zext i32 %179 to i64, !dbg !6500
  %cmp196 = icmp ugt i64 %177, %conv195, !dbg !6502
  br i1 %cmp196, label %if.then198, label %if.else201, !dbg !6503

if.then198:                                       ; preds = %if.else192
  %180 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6504
  %block_avail199 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %180, i32 0, i32 15, !dbg !6505
  %181 = load i32, i32* %block_avail199, align 8, !dbg !6505
  %182 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6506
  %stream200 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %182, i32 0, i32 16, !dbg !6507
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream200, i32 0, i32 1, !dbg !6508
  store i32 %181, i32* %avail_in, align 8, !dbg !6509
  br label %if.end205, !dbg !6506

if.else201:                                       ; preds = %if.else192
  %183 = load i64, i64* %avail, align 8, !dbg !6510
  %conv202 = trunc i64 %183 to i32, !dbg !6511
  %184 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6512
  %stream203 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %184, i32 0, i32 16, !dbg !6513
  %avail_in204 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream203, i32 0, i32 1, !dbg !6514
  store i32 %conv202, i32* %avail_in204, align 8, !dbg !6515
  br label %if.end205

if.end205:                                        ; preds = %if.else201, %if.then198
  %185 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6516
  %uncompressed_buffer206 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %185, i32 0, i32 4, !dbg !6517
  %186 = load i8*, i8** %uncompressed_buffer206, align 8, !dbg !6517
  %187 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6518
  %stream207 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %187, i32 0, i32 16, !dbg !6519
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream207, i32 0, i32 3, !dbg !6520
  store i8* %186, i8** %next_out, align 8, !dbg !6521
  %188 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6522
  %uncompressed_buffer_size208 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %188, i32 0, i32 5, !dbg !6523
  %189 = load i64, i64* %uncompressed_buffer_size208, align 8, !dbg !6523
  %conv209 = trunc i64 %189 to i32, !dbg !6524
  %190 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6525
  %stream210 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %190, i32 0, i32 16, !dbg !6526
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream210, i32 0, i32 4, !dbg !6527
  store i32 %conv209, i32* %avail_out, align 8, !dbg !6528
  %191 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6529
  %stream211 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %191, i32 0, i32 16, !dbg !6530
  %call212 = call i32 @cm_zlib_inflate(%struct.z_stream_s* %stream211, i32 0), !dbg !6531
  store i32 %call212, i32* %r, align 4, !dbg !6532
  %192 = load i32, i32* %r, align 4, !dbg !6533
  switch i32 %192, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
  ], !dbg !6534

sw.bb:                                            ; preds = %if.end205, %if.end205
  br label %sw.epilog, !dbg !6535

sw.default:                                       ; preds = %if.end205
  %193 = load %struct.archive_read*, %struct.archive_read** %a.addr, align 8, !dbg !6537
  %archive213 = getelementptr inbounds %struct.archive_read, %struct.archive_read* %193, i32 0, i32 0, !dbg !6538
  %194 = load i32, i32* %r, align 4, !dbg !6539
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive213, i32 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i32 0, i32 0), i32 %194), !dbg !6540
  store i32 -30, i32* %retval, align 4, !dbg !6541
  br label %return, !dbg !6541

sw.epilog:                                        ; preds = %sw.bb
  %195 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6542
  %uncompressed_buffer_size214 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %195, i32 0, i32 5, !dbg !6543
  %196 = load i64, i64* %uncompressed_buffer_size214, align 8, !dbg !6543
  %197 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6544
  %stream215 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %197, i32 0, i32 16, !dbg !6545
  %avail_out216 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream215, i32 0, i32 4, !dbg !6546
  %198 = load i32, i32* %avail_out216, align 8, !dbg !6546
  %conv217 = zext i32 %198 to i64, !dbg !6544
  %sub218 = sub i64 %196, %conv217, !dbg !6547
  store i64 %sub218, i64* %uncompressed_size, align 8, !dbg !6548
  %199 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6549
  %stream219 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %199, i32 0, i32 16, !dbg !6550
  %next_in220 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream219, i32 0, i32 0, !dbg !6551
  %200 = load i8*, i8** %next_in220, align 8, !dbg !6551
  %201 = load i8*, i8** %p, align 8, !dbg !6552
  %sub.ptr.lhs.cast = ptrtoint i8* %200 to i64, !dbg !6553
  %sub.ptr.rhs.cast = ptrtoint i8* %201 to i64, !dbg !6553
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6553
  %202 = load i64, i64* %avail, align 8, !dbg !6554
  %sub221 = sub i64 %202, %sub.ptr.sub, !dbg !6554
  store i64 %sub221, i64* %avail, align 8, !dbg !6554
  %203 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6555
  %stream222 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %203, i32 0, i32 16, !dbg !6556
  %next_in223 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream222, i32 0, i32 0, !dbg !6557
  %204 = load i8*, i8** %next_in223, align 8, !dbg !6557
  %205 = load i8*, i8** %p, align 8, !dbg !6558
  %sub.ptr.lhs.cast224 = ptrtoint i8* %204 to i64, !dbg !6559
  %sub.ptr.rhs.cast225 = ptrtoint i8* %205 to i64, !dbg !6559
  %sub.ptr.sub226 = sub i64 %sub.ptr.lhs.cast224, %sub.ptr.rhs.cast225, !dbg !6559
  %conv227 = trunc i64 %sub.ptr.sub226 to i32, !dbg !6560
  %206 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6561
  %block_avail228 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %206, i32 0, i32 15, !dbg !6562
  %207 = load i32, i32* %block_avail228, align 8, !dbg !6563
  %sub229 = sub i32 %207, %conv227, !dbg !6563
  store i32 %sub229, i32* %block_avail228, align 8, !dbg !6563
  br label %if.end230

if.end230:                                        ; preds = %sw.epilog, %if.then188
  br label %next_data, !dbg !6564

next_data:                                        ; preds = %if.end230, %if.then128
  %208 = load i64, i64* %avail, align 8, !dbg !6566
  %209 = load i64, i64* %bytes_read, align 8, !dbg !6567
  %sub231 = sub i64 %209, %208, !dbg !6567
  store i64 %sub231, i64* %bytes_read, align 8, !dbg !6567
  %210 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6568
  %uncompressed_buffer232 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %210, i32 0, i32 4, !dbg !6569
  %211 = load i8*, i8** %uncompressed_buffer232, align 8, !dbg !6569
  %212 = load i8**, i8*** %buff.addr, align 8, !dbg !6570
  store i8* %211, i8** %212, align 8, !dbg !6571
  %213 = load i64, i64* %uncompressed_size, align 8, !dbg !6572
  %214 = load i64*, i64** %size.addr, align 8, !dbg !6573
  store i64 %213, i64* %214, align 8, !dbg !6574
  %215 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6575
  %entry_sparse_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %215, i32 0, i32 22, !dbg !6576
  %216 = load i64, i64* %entry_sparse_offset, align 8, !dbg !6576
  %217 = load i64*, i64** %offset.addr, align 8, !dbg !6577
  store i64 %216, i64* %217, align 8, !dbg !6578
  %218 = load i64, i64* %uncompressed_size, align 8, !dbg !6579
  %219 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6580
  %entry_sparse_offset233 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %219, i32 0, i32 22, !dbg !6581
  %220 = load i64, i64* %entry_sparse_offset233, align 8, !dbg !6582
  %add234 = add i64 %220, %218, !dbg !6582
  store i64 %add234, i64* %entry_sparse_offset233, align 8, !dbg !6582
  %221 = load i64, i64* %bytes_read, align 8, !dbg !6583
  %222 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6584
  %entry_bytes_remaining235 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %222, i32 0, i32 23, !dbg !6585
  %223 = load i64, i64* %entry_bytes_remaining235, align 8, !dbg !6586
  %sub236 = sub nsw i64 %223, %221, !dbg !6586
  store i64 %sub236, i64* %entry_bytes_remaining235, align 8, !dbg !6586
  %224 = load i64, i64* %bytes_read, align 8, !dbg !6587
  %225 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6588
  %current_position = getelementptr inbounds %struct.iso9660, %struct.iso9660* %225, i32 0, i32 16, !dbg !6589
  %226 = load i64, i64* %current_position, align 8, !dbg !6590
  %add237 = add i64 %226, %224, !dbg !6590
  store i64 %add237, i64* %current_position, align 8, !dbg !6590
  %227 = load i64, i64* %bytes_read, align 8, !dbg !6591
  %conv238 = trunc i64 %227 to i32, !dbg !6592
  %228 = load %struct.zisofs*, %struct.zisofs** %zisofs, align 8, !dbg !6593
  %pz_offset239 = getelementptr inbounds %struct.zisofs, %struct.zisofs* %228, i32 0, i32 6, !dbg !6594
  %229 = load i32, i32* %pz_offset239, align 8, !dbg !6595
  %add240 = add i32 %229, %conv238, !dbg !6595
  store i32 %add240, i32* %pz_offset239, align 8, !dbg !6595
  %230 = load i64, i64* %bytes_read, align 8, !dbg !6596
  %231 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6597
  %entry_bytes_unconsumed = getelementptr inbounds %struct.iso9660, %struct.iso9660* %231, i32 0, i32 24, !dbg !6598
  %232 = load i64, i64* %entry_bytes_unconsumed, align 8, !dbg !6599
  %add241 = add i64 %232, %230, !dbg !6599
  store i64 %add241, i64* %entry_bytes_unconsumed, align 8, !dbg !6599
  store i32 0, i32* %retval, align 4, !dbg !6600
  br label %return, !dbg !6600

return:                                           ; preds = %next_data, %sw.default, %if.then178, %if.then163, %if.then153, %if.then140, %if.then92, %if.then40, %if.then22, %if.then
  %233 = load i32, i32* %retval, align 4, !dbg !6601
  ret i32 %233, !dbg !6601
}

declare i32 @cm_zlib_inflateReset(%struct.z_stream_s*) #2

declare i32 @cm_zlib_inflateInit_(%struct.z_stream_s*, i8*, i32) #2

declare i32 @cm_zlib_inflate(%struct.z_stream_s*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @release_files(%struct.iso9660* %iso9660) #0 !dbg !611 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %con = alloca %struct.content*, align 8
  %connext = alloca %struct.content*, align 8
  %file = alloca %struct.file_info*, align 8
  %next = alloca %struct.file_info*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !6602, metadata !623), !dbg !6603
  call void @llvm.dbg.declare(metadata %struct.content** %con, metadata !6604, metadata !623), !dbg !6605
  call void @llvm.dbg.declare(metadata %struct.content** %connext, metadata !6606, metadata !623), !dbg !6607
  call void @llvm.dbg.declare(metadata %struct.file_info** %file, metadata !6608, metadata !623), !dbg !6609
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !6610
  %use_files = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 12, !dbg !6611
  %1 = load %struct.file_info*, %struct.file_info** %use_files, align 8, !dbg !6611
  store %struct.file_info* %1, %struct.file_info** %file, align 8, !dbg !6612
  br label %while.cond, !dbg !6613

while.cond:                                       ; preds = %while.end, %entry
  %2 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !6614
  %cmp = icmp ne %struct.file_info* %2, null, !dbg !6616
  br i1 %cmp, label %while.body, label %while.end5, !dbg !6617

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.file_info** %next, metadata !6618, metadata !623), !dbg !6620
  %3 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !6621
  %use_next = getelementptr inbounds %struct.file_info, %struct.file_info* %3, i32 0, i32 0, !dbg !6622
  %4 = load %struct.file_info*, %struct.file_info** %use_next, align 8, !dbg !6622
  store %struct.file_info* %4, %struct.file_info** %next, align 8, !dbg !6620
  %5 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !6623
  %name = getelementptr inbounds %struct.file_info, %struct.file_info* %5, i32 0, i32 26, !dbg !6624
  call void @archive_string_free(%struct.archive_string* %name), !dbg !6625
  %6 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !6626
  %symlink = getelementptr inbounds %struct.file_info, %struct.file_info* %6, i32 0, i32 30, !dbg !6627
  call void @archive_string_free(%struct.archive_string* %symlink), !dbg !6628
  %7 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !6629
  %utf16be_name = getelementptr inbounds %struct.file_info, %struct.file_info* %7, i32 0, i32 27, !dbg !6630
  %8 = load i8*, i8** %utf16be_name, align 8, !dbg !6630
  call void @free(i8* %8) #8, !dbg !6631
  %9 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !6632
  %contents = getelementptr inbounds %struct.file_info, %struct.file_info* %9, i32 0, i32 36, !dbg !6633
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %contents, i32 0, i32 0, !dbg !6634
  %10 = load %struct.content*, %struct.content** %first, align 8, !dbg !6634
  store %struct.content* %10, %struct.content** %con, align 8, !dbg !6635
  br label %while.cond1, !dbg !6636

while.cond1:                                      ; preds = %while.body3, %while.body
  %11 = load %struct.content*, %struct.content** %con, align 8, !dbg !6637
  %cmp2 = icmp ne %struct.content* %11, null, !dbg !6639
  br i1 %cmp2, label %while.body3, label %while.end, !dbg !6640

while.body3:                                      ; preds = %while.cond1
  %12 = load %struct.content*, %struct.content** %con, align 8, !dbg !6641
  %next4 = getelementptr inbounds %struct.content, %struct.content* %12, i32 0, i32 2, !dbg !6643
  %13 = load %struct.content*, %struct.content** %next4, align 8, !dbg !6643
  store %struct.content* %13, %struct.content** %connext, align 8, !dbg !6644
  %14 = load %struct.content*, %struct.content** %con, align 8, !dbg !6645
  %15 = bitcast %struct.content* %14 to i8*, !dbg !6645
  call void @free(i8* %15) #8, !dbg !6646
  %16 = load %struct.content*, %struct.content** %connext, align 8, !dbg !6647
  store %struct.content* %16, %struct.content** %con, align 8, !dbg !6648
  br label %while.cond1, !dbg !6649

while.end:                                        ; preds = %while.cond1
  %17 = load %struct.file_info*, %struct.file_info** %file, align 8, !dbg !6651
  %18 = bitcast %struct.file_info* %17 to i8*, !dbg !6651
  call void @free(i8* %18) #8, !dbg !6652
  %19 = load %struct.file_info*, %struct.file_info** %next, align 8, !dbg !6653
  store %struct.file_info* %19, %struct.file_info** %file, align 8, !dbg !6654
  br label %while.cond, !dbg !6655

while.end5:                                       ; preds = %while.cond
  ret void, !dbg !6657
}

declare i32 @cm_zlib_inflateEnd(%struct.z_stream_s*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!619, !620}
!llvm.ident = !{!621}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !497, globals: !614)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!2 = !{}
!3 = !{!4, !292, !123, !314, !488, !318, !80, !490, !335, !52, !492, !23, !45, !305, !493, !327, !374, !38, !445, !496, !43, !450}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read", file: !6, line: 159, size: 20288, align: 64, elements: !7)
!6 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_read_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!7 = !{!8, !111, !112, !113, !114, !115, !159, !223, !224, !225, !226, !227, !228, !261, !263, !273, !274}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !5, file: !6, line: 160, baseType: !9, size: 1280, align: 64)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive", file: !10, line: 89, size: 1280, align: 64, elements: !11)
!10 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!11 = !{!12, !14, !15, !83, !84, !85, !86, !87, !88, !89, !90, !98, !99, !100, !101, !105, !106, !107, !108, !109, !110}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !9, file: !10, line: 96, baseType: !13, size: 32, align: 32)
!13 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9, file: !10, line: 97, baseType: !13, size: 32, align: 32, offset: 32)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !9, file: !10, line: 103, baseType: !16, size: 64, align: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_vtable", file: !10, line: 63, size: 832, align: 64, elements: !18)
!18 = !{!19, !25, !26, !33, !34, !48, !54, !59, !60, !67, !68, !72, !76}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "archive_close", scope: !17, file: !10, line: 64, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DISubroutineType(types: !22)
!22 = !{!23, !24}
!23 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "archive_free", scope: !17, file: !10, line: 65, baseType: !20, size: 64, align: 64, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_header", scope: !17, file: !10, line: 66, baseType: !27, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DISubroutineType(types: !29)
!29 = !{!23, !24, !30}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_entry", file: !32, line: 180, flags: DIFlagFwdDecl)
!32 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!33 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_finish_entry", scope: !17, file: !10, line: 68, baseType: !20, size: 64, align: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data", scope: !17, file: !10, line: 69, baseType: !35, size: 64, align: 64, offset: 256)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DISubroutineType(types: !37)
!37 = !{!38, !24, !43, !45}
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !39, line: 102, baseType: !40)
!39 = !DIFile(filename: "/usr/include/stdio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !41, line: 172, baseType: !42)
!41 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!42 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !46, line: 62, baseType: !47)
!46 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!47 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data_block", scope: !17, file: !10, line: 71, baseType: !49, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DISubroutineType(types: !51)
!51 = !{!38, !24, !43, !45, !52}
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !53, line: 40, baseType: !42)
!53 = !DIFile(filename: "/usr/include/stdint.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!54 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header", scope: !17, file: !10, line: 74, baseType: !55, size: 64, align: 64, offset: 384)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64, align: 64)
!56 = !DISubroutineType(types: !57)
!57 = !{!23, !24, !58}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header2", scope: !17, file: !10, line: 76, baseType: !27, size: 64, align: 64, offset: 448)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_data_block", scope: !17, file: !10, line: 78, baseType: !61, size: 64, align: 64, offset: 512)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{!23, !24, !64, !65, !66}
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_count", scope: !17, file: !10, line: 81, baseType: !20, size: 64, align: 64, offset: 576)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_bytes", scope: !17, file: !10, line: 82, baseType: !69, size: 64, align: 64, offset: 640)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64, align: 64)
!70 = !DISubroutineType(types: !71)
!71 = !{!52, !24, !23}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_code", scope: !17, file: !10, line: 83, baseType: !73, size: 64, align: 64, offset: 704)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DISubroutineType(types: !75)
!75 = !{!23, !24, !23}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_name", scope: !17, file: !10, line: 84, baseType: !77, size: 64, align: 64, offset: 768)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64, align: 64)
!78 = !DISubroutineType(types: !79)
!79 = !{!80, !24, !23}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!82 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format", scope: !9, file: !10, line: 105, baseType: !23, size: 32, align: 32, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format_name", scope: !9, file: !10, line: 106, baseType: !80, size: 64, align: 64, offset: 192)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "compression_code", scope: !9, file: !10, line: 108, baseType: !23, size: 32, align: 32, offset: 256)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "compression_name", scope: !9, file: !10, line: 109, baseType: !80, size: 64, align: 64, offset: 320)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "file_count", scope: !9, file: !10, line: 112, baseType: !23, size: 32, align: 32, offset: 384)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "archive_error_number", scope: !9, file: !10, line: 114, baseType: !23, size: 32, align: 32, offset: 416)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !9, file: !10, line: 115, baseType: !80, size: 64, align: 64, offset: 448)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "error_string", scope: !9, file: !10, line: 116, baseType: !91, size: 192, align: 64, offset: 512)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string", file: !92, line: 58, size: 192, align: 64, elements: !93)
!92 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_string.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!93 = !{!94, !96, !97}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !91, file: !92, line: 59, baseType: !95, size: 64, align: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !91, file: !92, line: 60, baseType: !45, size: 64, align: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !91, file: !92, line: 61, baseType: !45, size: 64, align: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "current_code", scope: !9, file: !10, line: 118, baseType: !95, size: 64, align: 64, offset: 704)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "current_codepage", scope: !9, file: !10, line: 119, baseType: !13, size: 32, align: 32, offset: 768)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "current_oemcp", scope: !9, file: !10, line: 120, baseType: !13, size: 32, align: 32, offset: 800)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "sconv", scope: !9, file: !10, line: 121, baseType: !102, size: 64, align: 64, offset: 832)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64, align: 64)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string_conv", file: !104, line: 36, flags: DIFlagFwdDecl)
!104 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_entry_locale.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!105 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_block", scope: !9, file: !10, line: 127, baseType: !80, size: 64, align: 64, offset: 896)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_offset", scope: !9, file: !10, line: 128, baseType: !52, size: 64, align: 64, offset: 960)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_output_offset", scope: !9, file: !10, line: 129, baseType: !52, size: 64, align: 64, offset: 1024)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_remaining", scope: !9, file: !10, line: 130, baseType: !45, size: 64, align: 64, offset: 1088)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_is_posix_read", scope: !9, file: !10, line: 137, baseType: !82, size: 8, align: 8, offset: 1152)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_requested", scope: !9, file: !10, line: 138, baseType: !45, size: 64, align: 64, offset: 1216)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5, file: !6, line: 162, baseType: !30, size: 64, align: 64, offset: 1280)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_set", scope: !5, file: !6, line: 165, baseType: !23, size: 32, align: 32, offset: 1344)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_dev", scope: !5, file: !6, line: 166, baseType: !52, size: 64, align: 64, offset: 1408)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_ino", scope: !5, file: !6, line: 167, baseType: !52, size: 64, align: 64, offset: 1472)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !5, file: !6, line: 170, baseType: !116, size: 576, align: 64, offset: 1536)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_client", file: !6, line: 134, size: 576, align: 64, elements: !117)
!117 = !{!118, !124, !130, !136, !141, !144, !149, !150, !151, !152}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "opener", scope: !116, file: !6, line: 135, baseType: !119, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_open_callback", file: !32, line: 241, baseType: !121)
!121 = !DISubroutineType(types: !122)
!122 = !{!23, !24, !123}
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "reader", scope: !116, file: !6, line: 136, baseType: !125, size: 64, align: 64, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_read_callback", file: !32, line: 218, baseType: !127)
!127 = !DISubroutineType(types: !128)
!128 = !{!129, !24, !123, !64}
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_ssize_t", file: !32, line: 95, baseType: !38)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "skipper", scope: !116, file: !6, line: 137, baseType: !131, size: 64, align: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_skip_callback", file: !32, line: 226, baseType: !133)
!133 = !DISubroutineType(types: !134)
!134 = !{!135, !24, !123, !135}
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_int64_t", file: !32, line: 73, baseType: !52)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "seeker", scope: !116, file: !6, line: 138, baseType: !137, size: 64, align: 64, offset: 192)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64, align: 64)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_seek_callback", file: !32, line: 233, baseType: !139)
!139 = !DISubroutineType(types: !140)
!140 = !{!135, !24, !123, !135, !23}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "closer", scope: !116, file: !6, line: 139, baseType: !142, size: 64, align: 64, offset: 256)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64, align: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_close_callback", file: !32, line: 243, baseType: !121)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "switcher", scope: !116, file: !6, line: 140, baseType: !145, size: 64, align: 64, offset: 320)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_switch_callback", file: !32, line: 249, baseType: !147)
!147 = !DISubroutineType(types: !148)
!148 = !{!23, !24, !123, !123}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !116, file: !6, line: 141, baseType: !13, size: 32, align: 32, offset: 384)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !116, file: !6, line: 142, baseType: !13, size: 32, align: 32, offset: 416)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !116, file: !6, line: 143, baseType: !52, size: 64, align: 64, offset: 448)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !116, file: !6, line: 144, baseType: !153, size: 64, align: 64, offset: 512)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!154 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_data_node", file: !6, line: 129, size: 192, align: 64, elements: !155)
!155 = !{!156, !157, !158}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "begin_position", scope: !154, file: !6, line: 130, baseType: !52, size: 64, align: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !154, file: !6, line: 131, baseType: !52, size: 64, align: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !154, file: !6, line: 132, baseType: !123, size: 64, align: 64, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "bidders", scope: !5, file: !6, line: 173, baseType: !160, size: 6144, align: 64, offset: 2112)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 6144, align: 64, elements: !221)
!161 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter_bidder", file: !6, line: 60, size: 384, align: 64, elements: !162)
!162 = !{!163, !164, !165, !212, !213, !217}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !161, file: !6, line: 62, baseType: !123, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !161, file: !6, line: 64, baseType: !80, size: 64, align: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !161, file: !6, line: 66, baseType: !166, size: 64, align: 64, offset: 128)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{!23, !169, !170}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64, align: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64, align: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_filter", file: !6, line: 82, size: 1408, align: 64, elements: !172)
!172 = !{!173, !174, !175, !176, !177, !181, !185, !189, !193, !194, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !171, file: !6, line: 83, baseType: !52, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "bidder", scope: !171, file: !6, line: 86, baseType: !169, size: 64, align: 64, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "upstream", scope: !171, file: !6, line: 87, baseType: !170, size: 64, align: 64, offset: 128)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !171, file: !6, line: 88, baseType: !4, size: 64, align: 64, offset: 192)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !171, file: !6, line: 90, baseType: !178, size: 64, align: 64, offset: 256)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{!23, !170}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !171, file: !6, line: 92, baseType: !182, size: 64, align: 64, offset: 320)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64, align: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!38, !170, !64}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !171, file: !6, line: 94, baseType: !186, size: 64, align: 64, offset: 384)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64, align: 64)
!187 = !DISubroutineType(types: !188)
!188 = !{!52, !170, !52}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !171, file: !6, line: 96, baseType: !190, size: 64, align: 64, offset: 448)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!52, !170, !52, !23}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !171, file: !6, line: 98, baseType: !178, size: 64, align: 64, offset: 512)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sswitch", scope: !171, file: !6, line: 100, baseType: !195, size: 64, align: 64, offset: 576)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64, align: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!23, !170, !13}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !171, file: !6, line: 102, baseType: !123, size: 64, align: 64, offset: 640)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !171, file: !6, line: 104, baseType: !80, size: 64, align: 64, offset: 704)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !171, file: !6, line: 105, baseType: !23, size: 32, align: 32, offset: 768)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !171, file: !6, line: 108, baseType: !95, size: 64, align: 64, offset: 832)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !171, file: !6, line: 109, baseType: !45, size: 64, align: 64, offset: 896)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !171, file: !6, line: 110, baseType: !95, size: 64, align: 64, offset: 960)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !171, file: !6, line: 111, baseType: !45, size: 64, align: 64, offset: 1024)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "client_buff", scope: !171, file: !6, line: 112, baseType: !43, size: 64, align: 64, offset: 1088)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "client_total", scope: !171, file: !6, line: 113, baseType: !45, size: 64, align: 64, offset: 1152)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "client_next", scope: !171, file: !6, line: 114, baseType: !80, size: 64, align: 64, offset: 1216)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "client_avail", scope: !171, file: !6, line: 115, baseType: !45, size: 64, align: 64, offset: 1280)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_file", scope: !171, file: !6, line: 116, baseType: !82, size: 8, align: 8, offset: 1344)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "closed", scope: !171, file: !6, line: 117, baseType: !82, size: 8, align: 8, offset: 1352)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "fatal", scope: !171, file: !6, line: 118, baseType: !82, size: 8, align: 8, offset: 1360)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !161, file: !6, line: 69, baseType: !178, size: 64, align: 64, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !161, file: !6, line: 71, baseType: !214, size: 64, align: 64, offset: 256)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64, align: 64)
!215 = !DISubroutineType(types: !216)
!216 = !{!23, !169, !80, !80}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !161, file: !6, line: 74, baseType: !218, size: 64, align: 64, offset: 320)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!23, !169}
!221 = !{!222}
!222 = !DISubrange(count: 16)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5, file: !6, line: 176, baseType: !170, size: 64, align: 64, offset: 8256)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_filter_bidding", scope: !5, file: !6, line: 179, baseType: !23, size: 32, align: 32, offset: 8320)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "header_position", scope: !5, file: !6, line: 182, baseType: !52, size: 64, align: 64, offset: 8384)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "data_start_node", scope: !5, file: !6, line: 185, baseType: !13, size: 32, align: 32, offset: 8448)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "data_end_node", scope: !5, file: !6, line: 186, baseType: !13, size: 32, align: 32, offset: 8480)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !5, file: !6, line: 209, baseType: !229, size: 11264, align: 64, offset: 8512)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 11264, align: 64, elements: !221)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_format_descriptor", file: !6, line: 196, size: 704, align: 64, elements: !231)
!231 = !{!232, !233, !234, !238, !242, !246, !250, !254, !258, !259, !260}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !6, line: 197, baseType: !123, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !230, file: !6, line: 198, baseType: !80, size: 64, align: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "bid", scope: !230, file: !6, line: 199, baseType: !235, size: 64, align: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DISubroutineType(types: !237)
!237 = !{!23, !4, !23}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !230, file: !6, line: 200, baseType: !239, size: 64, align: 64, offset: 192)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!23, !4, !80, !80}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !230, file: !6, line: 202, baseType: !243, size: 64, align: 64, offset: 256)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!23, !4, !30}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "read_data", scope: !230, file: !6, line: 203, baseType: !247, size: 64, align: 64, offset: 320)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = !DISubroutineType(types: !249)
!249 = !{!23, !4, !64, !65, !66}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_skip", scope: !230, file: !6, line: 204, baseType: !251, size: 64, align: 64, offset: 384)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{!23, !4}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "seek_data", scope: !230, file: !6, line: 205, baseType: !255, size: 64, align: 64, offset: 448)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!52, !4, !52, !23}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !230, file: !6, line: 206, baseType: !251, size: 64, align: 64, offset: 512)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "format_capabilties", scope: !230, file: !6, line: 207, baseType: !251, size: 64, align: 64, offset: 576)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "has_encrypted_entries", scope: !230, file: !6, line: 208, baseType: !251, size: 64, align: 64, offset: 640)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !5, file: !6, line: 210, baseType: !262, size: 64, align: 64, offset: 19776)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !5, file: !6, line: 215, baseType: !264, size: 64, align: 64, offset: 19840)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_extract", file: !6, line: 151, size: 192, align: 64, elements: !266)
!266 = !{!267, !268, !272}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !265, file: !6, line: 152, baseType: !24, size: 64, align: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress", scope: !265, file: !6, line: 155, baseType: !269, size: 64, align: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !123}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "extract_progress_user_data", scope: !265, file: !6, line: 156, baseType: !123, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_archive_extract", scope: !5, file: !6, line: 216, baseType: !251, size: 64, align: 64, offset: 19904)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "passphrases", scope: !5, file: !6, line: 227, baseType: !275, size: 320, align: 64, offset: 19968)
!275 = !DICompositeType(tag: DW_TAG_structure_type, scope: !5, file: !6, line: 221, size: 320, align: 64, elements: !276)
!276 = !{!277, !283, !285, !286, !291}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !275, file: !6, line: 222, baseType: !278, size: 64, align: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64, align: 64)
!279 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_read_passphrase", file: !6, line: 146, size: 128, align: 64, elements: !280)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "passphrase", scope: !279, file: !6, line: 147, baseType: !95, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !279, file: !6, line: 148, baseType: !278, size: 64, align: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !275, file: !6, line: 223, baseType: !284, size: 64, align: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "candidate", scope: !275, file: !6, line: 224, baseType: !23, size: 32, align: 32, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !275, file: !6, line: 225, baseType: !287, size: 64, align: 64, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64, align: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_passphrase_callback", file: !32, line: 256, baseType: !289)
!289 = !DISubroutineType(types: !290)
!290 = !{!80, !24, !123}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !275, file: !6, line: 226, baseType: !123, size: 64, align: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "iso9660", file: !1, line: 316, size: 20608, align: 64, elements: !294)
!294 = !{!295, !296, !297, !298, !299, !300, !301, !302, !304, !375, !386, !387, !388, !389, !395, !400, !405, !406, !407, !408, !410, !415, !416, !417, !418, !419, !478, !479, !480, !481, !482, !483, !484}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !293, file: !1, line: 317, baseType: !23, size: 32, align: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "opt_support_joliet", scope: !293, file: !1, line: 320, baseType: !23, size: 32, align: 32, offset: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "opt_support_rockridge", scope: !293, file: !1, line: 321, baseType: !23, size: 32, align: 32, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !293, file: !1, line: 323, baseType: !91, size: 192, align: 64, offset: 128)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "seenRockridge", scope: !293, file: !1, line: 324, baseType: !82, size: 8, align: 8, offset: 320)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "seenSUSP", scope: !293, file: !1, line: 325, baseType: !82, size: 8, align: 8, offset: 328)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "seenJoliet", scope: !293, file: !1, line: 326, baseType: !82, size: 8, align: 8, offset: 336)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "suspOffset", scope: !293, file: !1, line: 328, baseType: !303, size: 8, align: 8, offset: 344)
!303 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "rr_moved", scope: !293, file: !1, line: 329, baseType: !305, size: 64, align: 64, offset: 384)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "file_info", file: !1, line: 261, size: 2432, align: 64, elements: !307)
!307 = !{!308, !309, !310, !311, !312, !313, !315, !316, !317, !319, !320, !321, !322, !323, !324, !325, !326, !330, !331, !332, !333, !334, !338, !341, !344, !345, !346, !347, !349, !350, !351, !352, !353, !354, !355, !356, !357, !369}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "use_next", scope: !306, file: !1, line: 262, baseType: !305, size: 64, align: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !306, file: !1, line: 263, baseType: !305, size: 64, align: 64, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !306, file: !1, line: 264, baseType: !305, size: 64, align: 64, offset: 128)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "re_next", scope: !306, file: !1, line: 265, baseType: !305, size: 64, align: 64, offset: 192)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !306, file: !1, line: 266, baseType: !23, size: 32, align: 32, offset: 256)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !306, file: !1, line: 267, baseType: !314, size: 64, align: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !53, line: 55, baseType: !47)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !306, file: !1, line: 268, baseType: !314, size: 64, align: 64, offset: 384)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !306, file: !1, line: 269, baseType: !314, size: 64, align: 64, offset: 448)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "ce_offset", scope: !306, file: !1, line: 270, baseType: !318, size: 32, align: 32, offset: 512)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !53, line: 51, baseType: !13)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "ce_size", scope: !306, file: !1, line: 271, baseType: !318, size: 32, align: 32, offset: 544)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "rr_moved", scope: !306, file: !1, line: 272, baseType: !82, size: 8, align: 8, offset: 576)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "rr_moved_has_re_only", scope: !306, file: !1, line: 273, baseType: !82, size: 8, align: 8, offset: 584)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !306, file: !1, line: 274, baseType: !82, size: 8, align: 8, offset: 592)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "re_descendant", scope: !306, file: !1, line: 275, baseType: !82, size: 8, align: 8, offset: 600)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "cl_offset", scope: !306, file: !1, line: 276, baseType: !314, size: 64, align: 64, offset: 640)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "birthtime_is_set", scope: !306, file: !1, line: 277, baseType: !23, size: 32, align: 32, offset: 704)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "birthtime", scope: !306, file: !1, line: 278, baseType: !327, size: 64, align: 64, offset: 768)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !328, line: 75, baseType: !329)
!328 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !41, line: 139, baseType: !42)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !306, file: !1, line: 279, baseType: !327, size: 64, align: 64, offset: 832)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !306, file: !1, line: 280, baseType: !327, size: 64, align: 64, offset: 896)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !306, file: !1, line: 281, baseType: !327, size: 64, align: 64, offset: 960)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !306, file: !1, line: 282, baseType: !314, size: 64, align: 64, offset: 1024)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !306, file: !1, line: 283, baseType: !335, size: 32, align: 32, offset: 1088)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !336, line: 70, baseType: !337)
!336 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !41, line: 129, baseType: !13)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !306, file: !1, line: 284, baseType: !339, size: 32, align: 32, offset: 1120)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !336, line: 80, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !41, line: 125, baseType: !13)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !306, file: !1, line: 285, baseType: !342, size: 32, align: 32, offset: 1152)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !336, line: 65, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !41, line: 126, baseType: !13)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !306, file: !1, line: 286, baseType: !52, size: 64, align: 64, offset: 1216)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "nlinks", scope: !306, file: !1, line: 287, baseType: !23, size: 32, align: 32, offset: 1280)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !306, file: !1, line: 288, baseType: !91, size: 192, align: 64, offset: 1344)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "utf16be_name", scope: !306, file: !1, line: 289, baseType: !348, size: 64, align: 64, offset: 1536)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64, align: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "utf16be_bytes", scope: !306, file: !1, line: 290, baseType: !45, size: 64, align: 64, offset: 1600)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name_continues", scope: !306, file: !1, line: 291, baseType: !82, size: 8, align: 8, offset: 1664)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !306, file: !1, line: 292, baseType: !91, size: 192, align: 64, offset: 1728)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "symlink_continues", scope: !306, file: !1, line: 293, baseType: !82, size: 8, align: 8, offset: 1920)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "pz", scope: !306, file: !1, line: 295, baseType: !23, size: 32, align: 32, offset: 1952)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "pz_log2_bs", scope: !306, file: !1, line: 296, baseType: !23, size: 32, align: 32, offset: 1984)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "pz_uncompressed_size", scope: !306, file: !1, line: 297, baseType: !314, size: 64, align: 64, offset: 2048)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "multi_extent", scope: !306, file: !1, line: 299, baseType: !23, size: 32, align: 32, offset: 2112)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !306, file: !1, line: 303, baseType: !358, size: 128, align: 64, offset: 2176)
!358 = !DICompositeType(tag: DW_TAG_structure_type, scope: !306, file: !1, line: 300, size: 128, align: 64, elements: !359)
!359 = !{!360, !367}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !358, file: !1, line: 301, baseType: !361, size: 64, align: 64)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64, align: 64)
!362 = !DICompositeType(tag: DW_TAG_structure_type, name: "content", file: !1, line: 254, size: 192, align: 64, elements: !363)
!363 = !{!364, !365, !366}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !362, file: !1, line: 255, baseType: !314, size: 64, align: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !362, file: !1, line: 256, baseType: !314, size: 64, align: 64, offset: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !362, file: !1, line: 257, baseType: !361, size: 64, align: 64, offset: 128)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !358, file: !1, line: 302, baseType: !368, size: 64, align: 64, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "rede_files", scope: !306, file: !1, line: 307, baseType: !370, size: 128, align: 64, offset: 2304)
!370 = !DICompositeType(tag: DW_TAG_structure_type, scope: !306, file: !1, line: 304, size: 128, align: 64, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !370, file: !1, line: 305, baseType: !305, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !370, file: !1, line: 306, baseType: !374, size: 64, align: 64, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "read_ce_req", scope: !293, file: !1, line: 337, baseType: !376, size: 128, align: 64, offset: 448)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "read_ce_queue", file: !1, line: 330, size: 128, align: 64, elements: !377)
!377 = !{!378, !384, !385}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "reqs", scope: !376, file: !1, line: 334, baseType: !379, size: 64, align: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64, align: 64)
!380 = !DICompositeType(tag: DW_TAG_structure_type, name: "read_ce_req", file: !1, line: 331, size: 128, align: 64, elements: !381)
!381 = !{!382, !383}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !380, file: !1, line: 332, baseType: !314, size: 64, align: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !380, file: !1, line: 333, baseType: !305, size: 64, align: 64, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !376, file: !1, line: 335, baseType: !23, size: 32, align: 32, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !376, file: !1, line: 336, baseType: !23, size: 32, align: 32, offset: 96)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "previous_number", scope: !293, file: !1, line: 339, baseType: !52, size: 64, align: 64, offset: 576)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "previous_pathname", scope: !293, file: !1, line: 340, baseType: !91, size: 192, align: 64, offset: 640)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "use_files", scope: !293, file: !1, line: 342, baseType: !305, size: 64, align: 64, offset: 832)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "pending_files", scope: !293, file: !1, line: 343, baseType: !390, size: 128, align: 64, offset: 896)
!390 = !DICompositeType(tag: DW_TAG_structure_type, name: "heap_queue", file: !1, line: 310, size: 128, align: 64, elements: !391)
!391 = !{!392, !393, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !390, file: !1, line: 311, baseType: !374, size: 64, align: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !390, file: !1, line: 312, baseType: !23, size: 32, align: 32, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !390, file: !1, line: 313, baseType: !23, size: 32, align: 32, offset: 96)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "cache_files", scope: !293, file: !1, line: 347, baseType: !396, size: 128, align: 64, offset: 1024)
!396 = !DICompositeType(tag: DW_TAG_structure_type, scope: !293, file: !1, line: 344, size: 128, align: 64, elements: !397)
!397 = !{!398, !399}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !396, file: !1, line: 345, baseType: !305, size: 64, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !396, file: !1, line: 346, baseType: !374, size: 64, align: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "re_files", scope: !293, file: !1, line: 351, baseType: !401, size: 128, align: 64, offset: 1152)
!401 = !DICompositeType(tag: DW_TAG_structure_type, scope: !293, file: !1, line: 348, size: 128, align: 64, elements: !402)
!402 = !{!403, !404}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !401, file: !1, line: 349, baseType: !305, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !401, file: !1, line: 350, baseType: !374, size: 64, align: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "current_position", scope: !293, file: !1, line: 353, baseType: !314, size: 64, align: 64, offset: 1280)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !293, file: !1, line: 354, baseType: !38, size: 64, align: 64, offset: 1344)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "volume_size", scope: !293, file: !1, line: 355, baseType: !314, size: 64, align: 64, offset: 1408)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "volume_block", scope: !293, file: !1, line: 356, baseType: !409, size: 32, align: 32, offset: 1472)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !53, line: 38, baseType: !23)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !293, file: !1, line: 361, baseType: !411, size: 64, align: 32, offset: 1504)
!411 = !DICompositeType(tag: DW_TAG_structure_type, name: "vd", file: !1, line: 358, size: 64, align: 32, elements: !412)
!412 = !{!413, !414}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !411, file: !1, line: 359, baseType: !23, size: 32, align: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !411, file: !1, line: 360, baseType: !318, size: 32, align: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "joliet", scope: !293, file: !1, line: 361, baseType: !411, size: 64, align: 32, offset: 1568)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "entry_sparse_offset", scope: !293, file: !1, line: 363, baseType: !52, size: 64, align: 64, offset: 1664)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "entry_bytes_remaining", scope: !293, file: !1, line: 364, baseType: !52, size: 64, align: 64, offset: 1728)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "entry_bytes_unconsumed", scope: !293, file: !1, line: 365, baseType: !45, size: 64, align: 64, offset: 1792)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "entry_zisofs", scope: !293, file: !1, line: 366, baseType: !420, size: 1984, align: 64, offset: 1856)
!420 = !DICompositeType(tag: DW_TAG_structure_type, name: "zisofs", file: !1, line: 223, size: 1984, align: 64, elements: !421)
!421 = !{!422, !423, !424, !425, !426, !427, !428, !429, !431, !432, !433, !434, !435, !436, !437, !438, !439, !477}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "pz", scope: !420, file: !1, line: 225, baseType: !23, size: 32, align: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "pz_log2_bs", scope: !420, file: !1, line: 226, baseType: !23, size: 32, align: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "pz_uncompressed_size", scope: !420, file: !1, line: 227, baseType: !314, size: 64, align: 64, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !420, file: !1, line: 229, baseType: !23, size: 32, align: 32, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_buffer", scope: !420, file: !1, line: 230, baseType: !348, size: 64, align: 64, offset: 192)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_buffer_size", scope: !420, file: !1, line: 231, baseType: !45, size: 64, align: 64, offset: 256)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "pz_offset", scope: !420, file: !1, line: 233, baseType: !318, size: 32, align: 32, offset: 320)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !420, file: !1, line: 234, baseType: !430, size: 128, align: 8, offset: 352)
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 128, align: 8, elements: !221)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "header_avail", scope: !420, file: !1, line: 235, baseType: !45, size: 64, align: 64, offset: 512)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "header_passed", scope: !420, file: !1, line: 236, baseType: !23, size: 32, align: 32, offset: 576)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers", scope: !420, file: !1, line: 237, baseType: !348, size: 64, align: 64, offset: 640)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_alloc", scope: !420, file: !1, line: 238, baseType: !45, size: 64, align: 64, offset: 704)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_size", scope: !420, file: !1, line: 239, baseType: !45, size: 64, align: 64, offset: 768)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_avail", scope: !420, file: !1, line: 240, baseType: !45, size: 64, align: 64, offset: 832)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "block_off", scope: !420, file: !1, line: 241, baseType: !45, size: 64, align: 64, offset: 896)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "block_avail", scope: !420, file: !1, line: 242, baseType: !318, size: 32, align: 32, offset: 960)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !420, file: !1, line: 244, baseType: !440, size: 896, align: 64, offset: 1024)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !441, line: 101, baseType: !442)
!441 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zlib.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!442 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !441, line: 82, size: 896, align: 64, elements: !443)
!443 = !{!444, !449, !451, !453, !454, !455, !456, !457, !462, !468, !473, !474, !475, !476}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !442, file: !441, line: 83, baseType: !445, size: 64, align: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64, align: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !447, line: 276, baseType: !448)
!447 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zconf.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !447, line: 267, baseType: !303)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !442, file: !441, line: 84, baseType: !450, size: 32, align: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !447, line: 269, baseType: !13)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !442, file: !441, line: 85, baseType: !452, size: 64, align: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !447, line: 270, baseType: !47)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !442, file: !441, line: 87, baseType: !445, size: 64, align: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !442, file: !441, line: 88, baseType: !450, size: 32, align: 32, offset: 256)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !442, file: !441, line: 89, baseType: !452, size: 64, align: 64, offset: 320)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !442, file: !441, line: 91, baseType: !95, size: 64, align: 64, offset: 384)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !441, line: 92, baseType: !458, size: 64, align: 64, offset: 448)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64, align: 64)
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !441, line: 1346, size: 32, align: 32, elements: !460)
!460 = !{!461}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !459, file: !441, line: 1346, baseType: !23, size: 32, align: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !442, file: !441, line: 94, baseType: !463, size: 64, align: 64, offset: 512)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !441, line: 77, baseType: !464)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64, align: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{!467, !467, !450, !450}
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !447, line: 285, baseType: !123)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !442, file: !441, line: 95, baseType: !469, size: 64, align: 64, offset: 576)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !441, line: 78, baseType: !470)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64, align: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{null, !467, !467}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !442, file: !441, line: 96, baseType: !467, size: 64, align: 64, offset: 640)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !442, file: !441, line: 98, baseType: !23, size: 32, align: 32, offset: 704)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !442, file: !441, line: 99, baseType: !452, size: 64, align: 64, offset: 768)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !442, file: !441, line: 100, baseType: !452, size: 64, align: 64, offset: 832)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "stream_valid", scope: !420, file: !1, line: 245, baseType: !23, size: 32, align: 32, offset: 1920)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "entry_content", scope: !293, file: !1, line: 367, baseType: !361, size: 64, align: 64, offset: 3840)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_utf16be", scope: !293, file: !1, line: 368, baseType: !102, size: 64, align: 64, offset: 3904)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "utf16be_path", scope: !293, file: !1, line: 373, baseType: !348, size: 64, align: 64, offset: 3968)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "utf16be_path_len", scope: !293, file: !1, line: 374, baseType: !45, size: 64, align: 64, offset: 4032)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "utf16be_previous_path", scope: !293, file: !1, line: 375, baseType: !348, size: 64, align: 64, offset: 4096)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "utf16be_previous_path_len", scope: !293, file: !1, line: 376, baseType: !45, size: 64, align: 64, offset: 4160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !293, file: !1, line: 378, baseType: !485, size: 16384, align: 8, offset: 4224)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 16384, align: 8, elements: !486)
!486 = !{!487}
!487 = !DISubrange(count: 2048)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64, align: 64)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !336, line: 60, baseType: !491)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !41, line: 124, baseType: !47)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !53, line: 134, baseType: !42)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64, align: 64)
!494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !495)
!495 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !53, line: 122, baseType: !47)
!497 = !{!498, !499, !500, !503, !506, !512, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !527, !530, !533, !536, !553, !556, !559, !562, !563, !564, !565, !566, !569, !573, !576, !577, !580, !583, !584, !585, !588, !591, !592, !595, !596, !600, !603, !607, !608, !609, !610, !611}
!498 = distinct !DISubprogram(name: "archive_read_support_format_iso9660", scope: !1, file: !1, line: 447, type: !21, isLocal: false, isDefinition: true, scopeLine: 448, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!499 = distinct !DISubprogram(name: "archive_read_format_iso9660_bid", scope: !1, file: !1, line: 494, type: !236, isLocal: true, isDefinition: true, scopeLine: 495, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!500 = distinct !DISubprogram(name: "isPVD", scope: !1, file: !1, line: 861, type: !501, isLocal: true, isDefinition: true, scopeLine: 862, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!501 = !DISubroutineType(types: !502)
!502 = !{!23, !292, !488}
!503 = distinct !DISubprogram(name: "isNull", scope: !1, file: !1, line: 596, type: !504, isLocal: true, isDefinition: true, scopeLine: 598, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!504 = !DISubroutineType(types: !505)
!505 = !{!23, !292, !488, !13, !13}
!506 = distinct !DISubprogram(name: "archive_le16dec", scope: !507, file: !507, line: 101, type: !508, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!507 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_endian.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!508 = !DISubroutineType(types: !509)
!509 = !{!510, !43}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !53, line: 49, baseType: !511)
!511 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!512 = distinct !DISubprogram(name: "archive_le32dec", scope: !507, file: !507, line: 115, type: !513, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!513 = !DISubroutineType(types: !514)
!514 = !{!318, !43}
!515 = distinct !DISubprogram(name: "archive_be32dec", scope: !507, file: !507, line: 77, type: !513, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!516 = distinct !DISubprogram(name: "isJolietSVD", scope: !1, file: !1, line: 675, type: !501, isLocal: true, isDefinition: true, scopeLine: 676, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!517 = distinct !DISubprogram(name: "isBootRecord", scope: !1, file: !1, line: 613, type: !501, isLocal: true, isDefinition: true, scopeLine: 614, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!518 = distinct !DISubprogram(name: "isEVD", scope: !1, file: !1, line: 783, type: !501, isLocal: true, isDefinition: true, scopeLine: 784, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!519 = distinct !DISubprogram(name: "isSVD", scope: !1, file: !1, line: 724, type: !501, isLocal: true, isDefinition: true, scopeLine: 725, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!520 = distinct !DISubprogram(name: "isVolumePartition", scope: !1, file: !1, line: 629, type: !501, isLocal: true, isDefinition: true, scopeLine: 630, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!521 = distinct !DISubprogram(name: "isVDSetTerminator", scope: !1, file: !1, line: 655, type: !501, isLocal: true, isDefinition: true, scopeLine: 656, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!522 = distinct !DISubprogram(name: "archive_read_format_iso9660_options", scope: !1, file: !1, line: 566, type: !240, isLocal: true, isDefinition: true, scopeLine: 568, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!523 = distinct !DISubprogram(name: "archive_read_format_iso9660_read_header", scope: !1, file: !1, line: 1166, type: !244, isLocal: true, isDefinition: true, scopeLine: 1168, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!524 = distinct !DISubprogram(name: "choose_volume", scope: !1, file: !1, line: 1078, type: !525, isLocal: true, isDefinition: true, scopeLine: 1079, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!525 = !DISubroutineType(types: !526)
!526 = !{!23, !4, !292}
!527 = distinct !DISubprogram(name: "parse_file_info", scope: !1, file: !1, line: 1751, type: !528, isLocal: true, isDefinition: true, scopeLine: 1753, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!528 = !DISubroutineType(types: !529)
!529 = !{!305, !4, !305, !488}
!530 = distinct !DISubprogram(name: "toi", scope: !1, file: !1, line: 3102, type: !531, isLocal: true, isDefinition: true, scopeLine: 3103, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!531 = !DISubroutineType(types: !532)
!532 = !{!13, !43, !23}
!533 = distinct !DISubprogram(name: "isodate7", scope: !1, file: !1, line: 3113, type: !534, isLocal: true, isDefinition: true, scopeLine: 3114, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!534 = !DISubroutineType(types: !535)
!535 = !{!327, !488}
!536 = distinct !DISubprogram(name: "time_from_tm", scope: !1, file: !1, line: 3167, type: !537, isLocal: true, isDefinition: true, scopeLine: 3168, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!537 = !DISubroutineType(types: !538)
!538 = !{!327, !539}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64, align: 64)
!540 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !328, line: 133, size: 448, align: 64, elements: !541)
!541 = !{!542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !540, file: !328, line: 135, baseType: !23, size: 32, align: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !540, file: !328, line: 136, baseType: !23, size: 32, align: 32, offset: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !540, file: !328, line: 137, baseType: !23, size: 32, align: 32, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !540, file: !328, line: 138, baseType: !23, size: 32, align: 32, offset: 96)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !540, file: !328, line: 139, baseType: !23, size: 32, align: 32, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !540, file: !328, line: 140, baseType: !23, size: 32, align: 32, offset: 160)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !540, file: !328, line: 141, baseType: !23, size: 32, align: 32, offset: 192)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !540, file: !328, line: 142, baseType: !23, size: 32, align: 32, offset: 224)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !540, file: !328, line: 143, baseType: !23, size: 32, align: 32, offset: 256)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !540, file: !328, line: 146, baseType: !42, size: 64, align: 64, offset: 320)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !540, file: !328, line: 147, baseType: !80, size: 64, align: 64, offset: 384)
!553 = distinct !DISubprogram(name: "parse_rockridge", scope: !1, file: !1, line: 2096, type: !554, isLocal: true, isDefinition: true, scopeLine: 2098, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!554 = !DISubroutineType(types: !555)
!555 = !{!23, !4, !305, !488, !488}
!556 = distinct !DISubprogram(name: "register_CE", scope: !1, file: !1, line: 2260, type: !557, isLocal: true, isDefinition: true, scopeLine: 2262, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!557 = !DISubroutineType(types: !558)
!558 = !{!23, !4, !409, !305}
!559 = distinct !DISubprogram(name: "parse_rockridge_NM1", scope: !1, file: !1, line: 2422, type: !560, isLocal: true, isDefinition: true, scopeLine: 2424, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!560 = !DISubroutineType(types: !561)
!561 = !{null, !305, !488, !23}
!562 = distinct !DISubprogram(name: "parse_rockridge_SL1", scope: !1, file: !1, line: 2540, type: !560, isLocal: true, isDefinition: true, scopeLine: 2542, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!563 = distinct !DISubprogram(name: "parse_rockridge_TF1", scope: !1, file: !1, line: 2467, type: !560, isLocal: true, isDefinition: true, scopeLine: 2469, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!564 = distinct !DISubprogram(name: "isodate17", scope: !1, file: !1, line: 3139, type: !534, isLocal: true, isDefinition: true, scopeLine: 3140, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!565 = distinct !DISubprogram(name: "parse_rockridge_ZF1", scope: !1, file: !1, line: 2627, type: !560, isLocal: true, isDefinition: true, scopeLine: 2629, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!566 = distinct !DISubprogram(name: "register_file", scope: !1, file: !1, line: 2640, type: !567, isLocal: true, isDefinition: true, scopeLine: 2641, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!567 = !DISubroutineType(types: !568)
!568 = !{null, !292, !305}
!569 = distinct !DISubprogram(name: "heap_add_entry", scope: !1, file: !1, line: 2998, type: !570, isLocal: true, isDefinition: true, scopeLine: 3000, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!570 = !DISubroutineType(types: !571)
!571 = !{!23, !4, !572, !305, !314}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!573 = distinct !DISubprogram(name: "next_entry_seek", scope: !1, file: !1, line: 2672, type: !574, isLocal: true, isDefinition: true, scopeLine: 2674, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!574 = !DISubroutineType(types: !575)
!575 = !{!23, !4, !292, !374}
!576 = distinct !DISubprogram(name: "next_cache_entry", scope: !1, file: !1, line: 2710, type: !574, isLocal: true, isDefinition: true, scopeLine: 2712, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!577 = distinct !DISubprogram(name: "cache_get_entry", scope: !1, file: !1, line: 2984, type: !578, isLocal: true, isDefinition: true, scopeLine: 2985, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!578 = !DISubroutineType(types: !579)
!579 = !{!305, !292}
!580 = distinct !DISubprogram(name: "heap_get_entry", scope: !1, file: !1, line: 3055, type: !581, isLocal: true, isDefinition: true, scopeLine: 3056, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!581 = !DISubroutineType(types: !582)
!582 = !{!305, !572}
!583 = distinct !DISubprogram(name: "cache_add_entry", scope: !1, file: !1, line: 2976, type: !567, isLocal: true, isDefinition: true, scopeLine: 2977, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!584 = distinct !DISubprogram(name: "re_get_entry", scope: !1, file: !1, line: 2928, type: !578, isLocal: true, isDefinition: true, scopeLine: 2929, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!585 = distinct !DISubprogram(name: "rede_get_entry", scope: !1, file: !1, line: 2962, type: !586, isLocal: true, isDefinition: true, scopeLine: 2963, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!586 = !DISubroutineType(types: !587)
!587 = !{!305, !305}
!588 = distinct !DISubprogram(name: "rede_add_entry", scope: !1, file: !1, line: 2942, type: !589, isLocal: true, isDefinition: true, scopeLine: 2943, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!589 = !DISubroutineType(types: !590)
!590 = !{!23, !305}
!591 = distinct !DISubprogram(name: "re_add_entry", scope: !1, file: !1, line: 2920, type: !567, isLocal: true, isDefinition: true, scopeLine: 2921, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!592 = distinct !DISubprogram(name: "read_children", scope: !1, file: !1, line: 955, type: !593, isLocal: true, isDefinition: true, scopeLine: 956, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!593 = !DISubroutineType(types: !594)
!594 = !{!23, !4, !305}
!595 = distinct !DISubprogram(name: "read_CE", scope: !1, file: !1, line: 2375, type: !525, isLocal: true, isDefinition: true, scopeLine: 2376, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!596 = distinct !DISubprogram(name: "next_CE", scope: !1, file: !1, line: 2332, type: !597, isLocal: true, isDefinition: true, scopeLine: 2333, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!597 = !DISubroutineType(types: !598)
!598 = !{null, !599}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64, align: 64)
!600 = distinct !DISubprogram(name: "build_pathname_utf16be", scope: !1, file: !1, line: 3213, type: !601, isLocal: true, isDefinition: true, scopeLine: 3215, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!601 = !DISubroutineType(types: !602)
!602 = !{!23, !348, !45, !65, !305}
!603 = distinct !DISubprogram(name: "build_pathname", scope: !1, file: !1, line: 3192, type: !604, isLocal: true, isDefinition: true, scopeLine: 3193, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!604 = !DISubroutineType(types: !605)
!605 = !{!80, !606, !305, !23}
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64, align: 64)
!607 = distinct !DISubprogram(name: "archive_read_format_iso9660_read_data_skip", scope: !1, file: !1, line: 1398, type: !252, isLocal: true, isDefinition: true, scopeLine: 1399, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!608 = distinct !DISubprogram(name: "archive_read_format_iso9660_read_data", scope: !1, file: !1, line: 1648, type: !248, isLocal: true, isDefinition: true, scopeLine: 1650, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!609 = distinct !DISubprogram(name: "zisofs_read_data", scope: !1, file: !1, line: 1409, type: !248, isLocal: true, isDefinition: true, scopeLine: 1411, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!610 = distinct !DISubprogram(name: "archive_read_format_iso9660_cleanup", scope: !1, file: !1, line: 1716, type: !252, isLocal: true, isDefinition: true, scopeLine: 1717, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!611 = distinct !DISubprogram(name: "release_files", scope: !1, file: !1, line: 2648, type: !612, isLocal: true, isDefinition: true, scopeLine: 2649, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!612 = !DISubroutineType(types: !613)
!613 = !{null, !292}
!614 = !{!615}
!615 = !DIGlobalVariable(name: "zisofs_magic", scope: !0, file: !1, line: 219, type: !616, isLocal: true, isDefinition: true, variable: [8 x i8]* @zisofs_magic)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 64, align: 8, elements: !617)
!617 = !{!618}
!618 = !DISubrange(count: 8)
!619 = !{i32 2, !"Dwarf Version", i32 4}
!620 = !{i32 2, !"Debug Info Version", i32 3}
!621 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!622 = !DILocalVariable(name: "_a", arg: 1, scope: !498, file: !1, line: 447, type: !24)
!623 = !DIExpression()
!624 = !DILocation(line: 447, column: 53, scope: !498)
!625 = !DILocalVariable(name: "a", scope: !498, file: !1, line: 449, type: !4)
!626 = !DILocation(line: 449, column: 23, scope: !498)
!627 = !DILocation(line: 449, column: 50, scope: !498)
!628 = !DILocation(line: 449, column: 27, scope: !498)
!629 = !DILocalVariable(name: "iso9660", scope: !498, file: !1, line: 450, type: !292)
!630 = !DILocation(line: 450, column: 18, scope: !498)
!631 = !DILocalVariable(name: "r", scope: !498, file: !1, line: 451, type: !23)
!632 = !DILocation(line: 451, column: 6, scope: !498)
!633 = !DILocation(line: 453, column: 2, scope: !498)
!634 = !DILocalVariable(name: "magic_test", scope: !635, file: !1, line: 453, type: !23)
!635 = distinct !DILexicalBlock(scope: !498, file: !1, line: 453, column: 2)
!636 = !DILocation(line: 453, column: 2, scope: !635)
!637 = !DILocation(line: 453, column: 2, scope: !638)
!638 = !DILexicalBlockFile(scope: !635, file: !1, discriminator: 1)
!639 = !DILocation(line: 453, column: 2, scope: !640)
!640 = !DILexicalBlockFile(scope: !641, file: !1, discriminator: 2)
!641 = distinct !DILexicalBlock(scope: !635, file: !1, line: 453, column: 2)
!642 = !DILocation(line: 453, column: 2, scope: !643)
!643 = !DILexicalBlockFile(scope: !635, file: !1, discriminator: 3)
!644 = !DILocation(line: 456, column: 30, scope: !498)
!645 = !DILocation(line: 456, column: 12, scope: !498)
!646 = !DILocation(line: 456, column: 10, scope: !498)
!647 = !DILocation(line: 457, column: 6, scope: !648)
!648 = distinct !DILexicalBlock(scope: !498, file: !1, line: 457, column: 6)
!649 = !DILocation(line: 457, column: 14, scope: !648)
!650 = !DILocation(line: 457, column: 6, scope: !498)
!651 = !DILocation(line: 458, column: 22, scope: !652)
!652 = distinct !DILexicalBlock(scope: !648, file: !1, line: 457, column: 23)
!653 = !DILocation(line: 458, column: 25, scope: !652)
!654 = !DILocation(line: 458, column: 3, scope: !652)
!655 = !DILocation(line: 460, column: 3, scope: !652)
!656 = !DILocation(line: 462, column: 2, scope: !498)
!657 = !DILocation(line: 462, column: 11, scope: !498)
!658 = !DILocation(line: 462, column: 17, scope: !498)
!659 = !DILocation(line: 463, column: 2, scope: !498)
!660 = !DILocation(line: 463, column: 11, scope: !498)
!661 = !DILocation(line: 463, column: 23, scope: !498)
!662 = !DILocation(line: 463, column: 29, scope: !498)
!663 = !DILocation(line: 464, column: 32, scope: !498)
!664 = !DILocation(line: 464, column: 41, scope: !498)
!665 = !DILocation(line: 464, column: 53, scope: !498)
!666 = !DILocation(line: 464, column: 2, scope: !498)
!667 = !DILocation(line: 464, column: 11, scope: !498)
!668 = !DILocation(line: 464, column: 23, scope: !498)
!669 = !DILocation(line: 464, column: 28, scope: !498)
!670 = !DILocation(line: 465, column: 2, scope: !498)
!671 = !DILocation(line: 465, column: 11, scope: !498)
!672 = !DILocation(line: 465, column: 20, scope: !498)
!673 = !DILocation(line: 465, column: 26, scope: !498)
!674 = !DILocation(line: 466, column: 29, scope: !498)
!675 = !DILocation(line: 466, column: 38, scope: !498)
!676 = !DILocation(line: 466, column: 47, scope: !498)
!677 = !DILocation(line: 466, column: 2, scope: !498)
!678 = !DILocation(line: 466, column: 11, scope: !498)
!679 = !DILocation(line: 466, column: 20, scope: !498)
!680 = !DILocation(line: 466, column: 25, scope: !498)
!681 = !DILocation(line: 468, column: 2, scope: !498)
!682 = !DILocation(line: 468, column: 11, scope: !498)
!683 = !DILocation(line: 468, column: 30, scope: !498)
!684 = !DILocation(line: 470, column: 2, scope: !498)
!685 = !DILocation(line: 470, column: 11, scope: !498)
!686 = !DILocation(line: 470, column: 33, scope: !498)
!687 = !DILocation(line: 472, column: 37, scope: !498)
!688 = !DILocation(line: 473, column: 6, scope: !498)
!689 = !DILocation(line: 472, column: 6, scope: !498)
!690 = !DILocation(line: 472, column: 4, scope: !498)
!691 = !DILocation(line: 485, column: 6, scope: !692)
!692 = distinct !DILexicalBlock(scope: !498, file: !1, line: 485, column: 6)
!693 = !DILocation(line: 485, column: 8, scope: !692)
!694 = !DILocation(line: 485, column: 6, scope: !498)
!695 = !DILocation(line: 486, column: 8, scope: !696)
!696 = distinct !DILexicalBlock(scope: !692, file: !1, line: 485, column: 23)
!697 = !DILocation(line: 486, column: 3, scope: !696)
!698 = !DILocation(line: 487, column: 11, scope: !696)
!699 = !DILocation(line: 487, column: 3, scope: !696)
!700 = !DILocation(line: 489, column: 2, scope: !498)
!701 = !DILocation(line: 490, column: 1, scope: !498)
!702 = !DILocalVariable(name: "a", arg: 1, scope: !499, file: !1, line: 494, type: !4)
!703 = !DILocation(line: 494, column: 54, scope: !499)
!704 = !DILocalVariable(name: "best_bid", arg: 2, scope: !499, file: !1, line: 494, type: !23)
!705 = !DILocation(line: 494, column: 61, scope: !499)
!706 = !DILocalVariable(name: "iso9660", scope: !499, file: !1, line: 496, type: !292)
!707 = !DILocation(line: 496, column: 18, scope: !499)
!708 = !DILocalVariable(name: "bytes_read", scope: !499, file: !1, line: 497, type: !38)
!709 = !DILocation(line: 497, column: 10, scope: !499)
!710 = !DILocalVariable(name: "p", scope: !499, file: !1, line: 498, type: !488)
!711 = !DILocation(line: 498, column: 23, scope: !499)
!712 = !DILocalVariable(name: "seenTerminator", scope: !499, file: !1, line: 499, type: !23)
!713 = !DILocation(line: 499, column: 6, scope: !499)
!714 = !DILocation(line: 503, column: 6, scope: !715)
!715 = distinct !DILexicalBlock(scope: !499, file: !1, line: 503, column: 6)
!716 = !DILocation(line: 503, column: 15, scope: !715)
!717 = !DILocation(line: 503, column: 6, scope: !499)
!718 = !DILocation(line: 504, column: 3, scope: !715)
!719 = !DILocation(line: 506, column: 31, scope: !499)
!720 = !DILocation(line: 506, column: 34, scope: !499)
!721 = !DILocation(line: 506, column: 42, scope: !499)
!722 = !DILocation(line: 506, column: 12, scope: !499)
!723 = !DILocation(line: 506, column: 10, scope: !499)
!724 = !DILocation(line: 514, column: 27, scope: !499)
!725 = !DILocation(line: 514, column: 6, scope: !499)
!726 = !DILocation(line: 514, column: 4, scope: !499)
!727 = !DILocation(line: 517, column: 6, scope: !728)
!728 = distinct !DILexicalBlock(scope: !499, file: !1, line: 517, column: 6)
!729 = !DILocation(line: 517, column: 8, scope: !728)
!730 = !DILocation(line: 517, column: 6, scope: !499)
!731 = !DILocation(line: 518, column: 6, scope: !728)
!732 = !DILocation(line: 521, column: 13, scope: !499)
!733 = !DILocation(line: 522, column: 4, scope: !499)
!734 = !DILocation(line: 525, column: 17, scope: !499)
!735 = !DILocation(line: 526, column: 2, scope: !499)
!736 = !DILocation(line: 526, column: 9, scope: !737)
!737 = !DILexicalBlockFile(scope: !738, file: !1, discriminator: 1)
!738 = distinct !DILexicalBlock(scope: !739, file: !1, line: 526, column: 2)
!739 = distinct !DILexicalBlock(scope: !499, file: !1, line: 526, column: 2)
!740 = !DILocation(line: 526, column: 20, scope: !737)
!741 = !DILocation(line: 526, column: 2, scope: !737)
!742 = !DILocation(line: 529, column: 7, scope: !743)
!743 = distinct !DILexicalBlock(scope: !744, file: !1, line: 529, column: 7)
!744 = distinct !DILexicalBlock(scope: !738, file: !1, line: 527, column: 65)
!745 = !DILocation(line: 529, column: 12, scope: !743)
!746 = !DILocation(line: 529, column: 17, scope: !743)
!747 = !DILocation(line: 529, column: 20, scope: !748)
!748 = !DILexicalBlockFile(scope: !743, file: !1, discriminator: 1)
!749 = !DILocation(line: 529, column: 25, scope: !748)
!750 = !DILocation(line: 529, column: 7, scope: !748)
!751 = !DILocation(line: 530, column: 4, scope: !743)
!752 = !DILocation(line: 532, column: 14, scope: !753)
!753 = distinct !DILexicalBlock(scope: !744, file: !1, line: 532, column: 7)
!754 = !DILocation(line: 532, column: 16, scope: !753)
!755 = !DILocation(line: 532, column: 7, scope: !753)
!756 = !DILocation(line: 532, column: 33, scope: !753)
!757 = !DILocation(line: 532, column: 7, scope: !744)
!758 = !DILocation(line: 533, column: 4, scope: !753)
!759 = !DILocation(line: 534, column: 13, scope: !760)
!760 = distinct !DILexicalBlock(scope: !744, file: !1, line: 534, column: 7)
!761 = !DILocation(line: 534, column: 22, scope: !760)
!762 = !DILocation(line: 534, column: 7, scope: !760)
!763 = !DILocation(line: 534, column: 7, scope: !744)
!764 = !DILocation(line: 535, column: 4, scope: !760)
!765 = !DILocation(line: 536, column: 8, scope: !766)
!766 = distinct !DILexicalBlock(scope: !744, file: !1, line: 536, column: 7)
!767 = !DILocation(line: 536, column: 17, scope: !766)
!768 = !DILocation(line: 536, column: 24, scope: !766)
!769 = !DILocation(line: 536, column: 7, scope: !744)
!770 = !DILocation(line: 537, column: 20, scope: !771)
!771 = distinct !DILexicalBlock(scope: !772, file: !1, line: 537, column: 8)
!772 = distinct !DILexicalBlock(scope: !766, file: !1, line: 536, column: 34)
!773 = !DILocation(line: 537, column: 29, scope: !771)
!774 = !DILocation(line: 537, column: 8, scope: !771)
!775 = !DILocation(line: 537, column: 8, scope: !772)
!776 = !DILocation(line: 538, column: 5, scope: !771)
!777 = !DILocation(line: 539, column: 3, scope: !772)
!778 = !DILocation(line: 540, column: 20, scope: !779)
!779 = distinct !DILexicalBlock(scope: !744, file: !1, line: 540, column: 7)
!780 = !DILocation(line: 540, column: 29, scope: !779)
!781 = !DILocation(line: 540, column: 7, scope: !779)
!782 = !DILocation(line: 540, column: 7, scope: !744)
!783 = !DILocation(line: 541, column: 4, scope: !779)
!784 = !DILocation(line: 542, column: 13, scope: !785)
!785 = distinct !DILexicalBlock(scope: !744, file: !1, line: 542, column: 7)
!786 = !DILocation(line: 542, column: 22, scope: !785)
!787 = !DILocation(line: 542, column: 7, scope: !785)
!788 = !DILocation(line: 542, column: 7, scope: !744)
!789 = !DILocation(line: 543, column: 4, scope: !785)
!790 = !DILocation(line: 544, column: 13, scope: !791)
!791 = distinct !DILexicalBlock(scope: !744, file: !1, line: 544, column: 7)
!792 = !DILocation(line: 544, column: 22, scope: !791)
!793 = !DILocation(line: 544, column: 7, scope: !791)
!794 = !DILocation(line: 544, column: 7, scope: !744)
!795 = !DILocation(line: 545, column: 4, scope: !791)
!796 = !DILocation(line: 546, column: 25, scope: !797)
!797 = distinct !DILexicalBlock(scope: !744, file: !1, line: 546, column: 7)
!798 = !DILocation(line: 546, column: 34, scope: !797)
!799 = !DILocation(line: 546, column: 7, scope: !797)
!800 = !DILocation(line: 546, column: 7, scope: !744)
!801 = !DILocation(line: 547, column: 4, scope: !797)
!802 = !DILocation(line: 548, column: 25, scope: !803)
!803 = distinct !DILexicalBlock(scope: !744, file: !1, line: 548, column: 7)
!804 = !DILocation(line: 548, column: 34, scope: !803)
!805 = !DILocation(line: 548, column: 7, scope: !803)
!806 = !DILocation(line: 548, column: 7, scope: !744)
!807 = !DILocation(line: 549, column: 19, scope: !808)
!808 = distinct !DILexicalBlock(scope: !803, file: !1, line: 548, column: 38)
!809 = !DILocation(line: 550, column: 4, scope: !808)
!810 = !DILocation(line: 552, column: 3, scope: !744)
!811 = !DILocation(line: 527, column: 17, scope: !738)
!812 = !DILocation(line: 527, column: 42, scope: !738)
!813 = !DILocation(line: 526, column: 2, scope: !814)
!814 = !DILexicalBlockFile(scope: !738, file: !1, discriminator: 2)
!815 = !DILocation(line: 558, column: 6, scope: !816)
!816 = distinct !DILexicalBlock(scope: !499, file: !1, line: 558, column: 6)
!817 = !DILocation(line: 558, column: 21, scope: !816)
!818 = !DILocation(line: 558, column: 24, scope: !819)
!819 = !DILexicalBlockFile(scope: !816, file: !1, discriminator: 1)
!820 = !DILocation(line: 558, column: 33, scope: !819)
!821 = !DILocation(line: 558, column: 41, scope: !819)
!822 = !DILocation(line: 558, column: 50, scope: !819)
!823 = !DILocation(line: 558, column: 6, scope: !819)
!824 = !DILocation(line: 559, column: 3, scope: !816)
!825 = !DILocation(line: 562, column: 2, scope: !499)
!826 = !DILocation(line: 563, column: 1, scope: !499)
!827 = !DILocalVariable(name: "a", arg: 1, scope: !522, file: !1, line: 566, type: !4)
!828 = !DILocation(line: 566, column: 58, scope: !522)
!829 = !DILocalVariable(name: "key", arg: 2, scope: !522, file: !1, line: 567, type: !80)
!830 = !DILocation(line: 567, column: 15, scope: !522)
!831 = !DILocalVariable(name: "val", arg: 3, scope: !522, file: !1, line: 567, type: !80)
!832 = !DILocation(line: 567, column: 32, scope: !522)
!833 = !DILocalVariable(name: "iso9660", scope: !522, file: !1, line: 569, type: !292)
!834 = !DILocation(line: 569, column: 18, scope: !522)
!835 = !DILocation(line: 571, column: 31, scope: !522)
!836 = !DILocation(line: 571, column: 34, scope: !522)
!837 = !DILocation(line: 571, column: 42, scope: !522)
!838 = !DILocation(line: 571, column: 12, scope: !522)
!839 = !DILocation(line: 571, column: 10, scope: !522)
!840 = !DILocation(line: 573, column: 13, scope: !841)
!841 = distinct !DILexicalBlock(scope: !522, file: !1, line: 573, column: 6)
!842 = !DILocation(line: 573, column: 6, scope: !841)
!843 = !DILocation(line: 573, column: 28, scope: !841)
!844 = !DILocation(line: 573, column: 6, scope: !522)
!845 = !DILocation(line: 574, column: 7, scope: !846)
!846 = distinct !DILexicalBlock(scope: !847, file: !1, line: 574, column: 7)
!847 = distinct !DILexicalBlock(scope: !841, file: !1, line: 573, column: 34)
!848 = !DILocation(line: 574, column: 11, scope: !846)
!849 = !DILocation(line: 574, column: 19, scope: !846)
!850 = !DILocation(line: 574, column: 29, scope: !851)
!851 = !DILexicalBlockFile(scope: !846, file: !1, discriminator: 1)
!852 = !DILocation(line: 574, column: 22, scope: !851)
!853 = !DILocation(line: 574, column: 41, scope: !851)
!854 = !DILocation(line: 574, column: 46, scope: !851)
!855 = !DILocation(line: 575, column: 12, scope: !846)
!856 = !DILocation(line: 575, column: 5, scope: !846)
!857 = !DILocation(line: 575, column: 27, scope: !846)
!858 = !DILocation(line: 575, column: 32, scope: !846)
!859 = !DILocation(line: 576, column: 12, scope: !846)
!860 = !DILocation(line: 576, column: 5, scope: !846)
!861 = !DILocation(line: 576, column: 28, scope: !846)
!862 = !DILocation(line: 576, column: 33, scope: !846)
!863 = !DILocation(line: 577, column: 12, scope: !846)
!864 = !DILocation(line: 577, column: 5, scope: !846)
!865 = !DILocation(line: 577, column: 22, scope: !846)
!866 = !DILocation(line: 574, column: 7, scope: !867)
!867 = !DILexicalBlockFile(scope: !847, file: !1, discriminator: 2)
!868 = !DILocation(line: 578, column: 4, scope: !846)
!869 = !DILocation(line: 578, column: 13, scope: !846)
!870 = !DILocation(line: 578, column: 32, scope: !846)
!871 = !DILocation(line: 580, column: 4, scope: !846)
!872 = !DILocation(line: 580, column: 13, scope: !846)
!873 = !DILocation(line: 580, column: 32, scope: !846)
!874 = !DILocation(line: 581, column: 3, scope: !847)
!875 = !DILocation(line: 583, column: 13, scope: !876)
!876 = distinct !DILexicalBlock(scope: !522, file: !1, line: 583, column: 6)
!877 = !DILocation(line: 583, column: 6, scope: !876)
!878 = !DILocation(line: 583, column: 31, scope: !876)
!879 = !DILocation(line: 583, column: 36, scope: !876)
!880 = !DILocation(line: 584, column: 13, scope: !876)
!881 = !DILocation(line: 584, column: 6, scope: !876)
!882 = !DILocation(line: 584, column: 31, scope: !876)
!883 = !DILocation(line: 583, column: 6, scope: !884)
!884 = !DILexicalBlockFile(scope: !522, file: !1, discriminator: 1)
!885 = !DILocation(line: 585, column: 36, scope: !886)
!886 = distinct !DILexicalBlock(scope: !876, file: !1, line: 584, column: 37)
!887 = !DILocation(line: 585, column: 40, scope: !886)
!888 = !DILocation(line: 585, column: 3, scope: !886)
!889 = !DILocation(line: 585, column: 12, scope: !886)
!890 = !DILocation(line: 585, column: 34, scope: !886)
!891 = !DILocation(line: 586, column: 3, scope: !886)
!892 = !DILocation(line: 592, column: 2, scope: !522)
!893 = !DILocation(line: 593, column: 1, scope: !522)
!894 = !DILocalVariable(name: "a", arg: 1, scope: !523, file: !1, line: 1166, type: !4)
!895 = !DILocation(line: 1166, column: 62, scope: !523)
!896 = !DILocalVariable(name: "entry", arg: 2, scope: !523, file: !1, line: 1167, type: !30)
!897 = !DILocation(line: 1167, column: 27, scope: !523)
!898 = !DILocalVariable(name: "iso9660", scope: !523, file: !1, line: 1169, type: !292)
!899 = !DILocation(line: 1169, column: 18, scope: !523)
!900 = !DILocalVariable(name: "file", scope: !523, file: !1, line: 1170, type: !305)
!901 = !DILocation(line: 1170, column: 20, scope: !523)
!902 = !DILocalVariable(name: "r", scope: !523, file: !1, line: 1171, type: !23)
!903 = !DILocation(line: 1171, column: 6, scope: !523)
!904 = !DILocalVariable(name: "rd_r", scope: !523, file: !1, line: 1171, type: !23)
!905 = !DILocation(line: 1171, column: 9, scope: !523)
!906 = !DILocation(line: 1173, column: 31, scope: !523)
!907 = !DILocation(line: 1173, column: 34, scope: !523)
!908 = !DILocation(line: 1173, column: 42, scope: !523)
!909 = !DILocation(line: 1173, column: 12, scope: !523)
!910 = !DILocation(line: 1173, column: 10, scope: !523)
!911 = !DILocation(line: 1175, column: 7, scope: !912)
!912 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1175, column: 6)
!913 = !DILocation(line: 1175, column: 10, scope: !912)
!914 = !DILocation(line: 1175, column: 18, scope: !912)
!915 = !DILocation(line: 1175, column: 6, scope: !523)
!916 = !DILocation(line: 1176, column: 3, scope: !917)
!917 = distinct !DILexicalBlock(scope: !912, file: !1, line: 1175, column: 34)
!918 = !DILocation(line: 1176, column: 6, scope: !917)
!919 = !DILocation(line: 1176, column: 14, scope: !917)
!920 = !DILocation(line: 1176, column: 29, scope: !917)
!921 = !DILocation(line: 1177, column: 3, scope: !917)
!922 = !DILocation(line: 1177, column: 6, scope: !917)
!923 = !DILocation(line: 1177, column: 14, scope: !917)
!924 = !DILocation(line: 1177, column: 34, scope: !917)
!925 = !DILocation(line: 1178, column: 2, scope: !917)
!926 = !DILocation(line: 1180, column: 6, scope: !927)
!927 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1180, column: 6)
!928 = !DILocation(line: 1180, column: 15, scope: !927)
!929 = !DILocation(line: 1180, column: 32, scope: !927)
!930 = !DILocation(line: 1180, column: 6, scope: !523)
!931 = !DILocation(line: 1181, column: 21, scope: !932)
!932 = distinct !DILexicalBlock(scope: !927, file: !1, line: 1180, column: 38)
!933 = !DILocation(line: 1181, column: 24, scope: !932)
!934 = !DILocation(line: 1181, column: 7, scope: !932)
!935 = !DILocation(line: 1181, column: 5, scope: !932)
!936 = !DILocation(line: 1182, column: 7, scope: !937)
!937 = distinct !DILexicalBlock(scope: !932, file: !1, line: 1182, column: 7)
!938 = !DILocation(line: 1182, column: 9, scope: !937)
!939 = !DILocation(line: 1182, column: 7, scope: !932)
!940 = !DILocation(line: 1183, column: 12, scope: !937)
!941 = !DILocation(line: 1183, column: 4, scope: !937)
!942 = !DILocation(line: 1184, column: 2, scope: !932)
!943 = !DILocation(line: 1186, column: 7, scope: !523)
!944 = !DILocation(line: 1188, column: 22, scope: !523)
!945 = !DILocation(line: 1188, column: 25, scope: !523)
!946 = !DILocation(line: 1188, column: 6, scope: !523)
!947 = !DILocation(line: 1188, column: 4, scope: !523)
!948 = !DILocation(line: 1189, column: 6, scope: !949)
!949 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1189, column: 6)
!950 = !DILocation(line: 1189, column: 8, scope: !949)
!951 = !DILocation(line: 1189, column: 6, scope: !523)
!952 = !DILocation(line: 1190, column: 11, scope: !949)
!953 = !DILocation(line: 1190, column: 3, scope: !949)
!954 = !DILocation(line: 1192, column: 6, scope: !955)
!955 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1192, column: 6)
!956 = !DILocation(line: 1192, column: 15, scope: !955)
!957 = !DILocation(line: 1192, column: 6, scope: !523)
!958 = !DILocation(line: 1197, column: 7, scope: !959)
!959 = distinct !DILexicalBlock(scope: !960, file: !1, line: 1197, column: 7)
!960 = distinct !DILexicalBlock(scope: !955, file: !1, line: 1192, column: 27)
!961 = !DILocation(line: 1197, column: 16, scope: !959)
!962 = !DILocation(line: 1197, column: 30, scope: !959)
!963 = !DILocation(line: 1197, column: 7, scope: !960)
!964 = !DILocation(line: 1200, column: 7, scope: !965)
!965 = distinct !DILexicalBlock(scope: !959, file: !1, line: 1197, column: 39)
!966 = !DILocation(line: 1200, column: 10, scope: !965)
!967 = !DILocation(line: 1199, column: 8, scope: !965)
!968 = !DILocation(line: 1198, column: 4, scope: !965)
!969 = !DILocation(line: 1198, column: 13, scope: !965)
!970 = !DILocation(line: 1198, column: 27, scope: !965)
!971 = !DILocation(line: 1201, column: 8, scope: !972)
!972 = distinct !DILexicalBlock(scope: !965, file: !1, line: 1201, column: 8)
!973 = !DILocation(line: 1201, column: 17, scope: !972)
!974 = !DILocation(line: 1201, column: 31, scope: !972)
!975 = !DILocation(line: 1201, column: 8, scope: !965)
!976 = !DILocation(line: 1203, column: 5, scope: !972)
!977 = !DILocation(line: 1204, column: 3, scope: !965)
!978 = !DILocation(line: 1205, column: 7, scope: !979)
!979 = distinct !DILexicalBlock(scope: !960, file: !1, line: 1205, column: 7)
!980 = !DILocation(line: 1205, column: 16, scope: !979)
!981 = !DILocation(line: 1205, column: 29, scope: !979)
!982 = !DILocation(line: 1205, column: 7, scope: !960)
!983 = !DILocation(line: 1206, column: 28, scope: !984)
!984 = distinct !DILexicalBlock(scope: !979, file: !1, line: 1205, column: 38)
!985 = !DILocation(line: 1206, column: 4, scope: !984)
!986 = !DILocation(line: 1206, column: 13, scope: !984)
!987 = !DILocation(line: 1206, column: 26, scope: !984)
!988 = !DILocation(line: 1207, column: 8, scope: !989)
!989 = distinct !DILexicalBlock(scope: !984, file: !1, line: 1207, column: 8)
!990 = !DILocation(line: 1207, column: 17, scope: !989)
!991 = !DILocation(line: 1207, column: 30, scope: !989)
!992 = !DILocation(line: 1207, column: 8, scope: !984)
!993 = !DILocation(line: 1208, column: 24, scope: !994)
!994 = distinct !DILexicalBlock(scope: !989, file: !1, line: 1207, column: 39)
!995 = !DILocation(line: 1208, column: 27, scope: !994)
!996 = !DILocation(line: 1208, column: 5, scope: !994)
!997 = !DILocation(line: 1210, column: 5, scope: !994)
!998 = !DILocation(line: 1212, column: 3, scope: !984)
!999 = !DILocation(line: 1213, column: 7, scope: !1000)
!1000 = distinct !DILexicalBlock(scope: !960, file: !1, line: 1213, column: 7)
!1001 = !DILocation(line: 1213, column: 16, scope: !1000)
!1002 = !DILocation(line: 1213, column: 38, scope: !1000)
!1003 = !DILocation(line: 1213, column: 7, scope: !960)
!1004 = !DILocation(line: 1214, column: 37, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !1000, file: !1, line: 1213, column: 47)
!1006 = !DILocation(line: 1214, column: 4, scope: !1005)
!1007 = !DILocation(line: 1214, column: 13, scope: !1005)
!1008 = !DILocation(line: 1214, column: 35, scope: !1005)
!1009 = !DILocation(line: 1215, column: 8, scope: !1010)
!1010 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 1215, column: 8)
!1011 = !DILocation(line: 1215, column: 17, scope: !1010)
!1012 = !DILocation(line: 1215, column: 39, scope: !1010)
!1013 = !DILocation(line: 1215, column: 8, scope: !1005)
!1014 = !DILocation(line: 1216, column: 24, scope: !1015)
!1015 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 1215, column: 48)
!1016 = !DILocation(line: 1216, column: 27, scope: !1015)
!1017 = !DILocation(line: 1216, column: 5, scope: !1015)
!1018 = !DILocation(line: 1218, column: 5, scope: !1015)
!1019 = !DILocation(line: 1220, column: 3, scope: !1005)
!1020 = !DILocation(line: 1222, column: 3, scope: !960)
!1021 = !DILocation(line: 1222, column: 12, scope: !960)
!1022 = !DILocation(line: 1222, column: 29, scope: !960)
!1023 = !DILocation(line: 1223, column: 30, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !960, file: !1, line: 1223, column: 7)
!1025 = !DILocation(line: 1223, column: 39, scope: !1024)
!1026 = !DILocation(line: 1224, column: 25, scope: !1024)
!1027 = !DILocation(line: 1224, column: 34, scope: !1024)
!1028 = !DILocation(line: 1224, column: 53, scope: !1024)
!1029 = !DILocation(line: 1223, column: 7, scope: !1024)
!1030 = !DILocation(line: 1224, column: 59, scope: !1024)
!1031 = !DILocation(line: 1223, column: 7, scope: !960)
!1032 = !DILocation(line: 1225, column: 23, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !1024, file: !1, line: 1224, column: 65)
!1034 = !DILocation(line: 1225, column: 26, scope: !1033)
!1035 = !DILocation(line: 1225, column: 4, scope: !1033)
!1036 = !DILocation(line: 1228, column: 4, scope: !1033)
!1037 = !DILocation(line: 1231, column: 37, scope: !960)
!1038 = !DILocation(line: 1232, column: 21, scope: !960)
!1039 = !DILocation(line: 1232, column: 30, scope: !960)
!1040 = !DILocation(line: 1233, column: 7, scope: !960)
!1041 = !DILocation(line: 1233, column: 16, scope: !960)
!1042 = !DILocation(line: 1234, column: 7, scope: !960)
!1043 = !DILocation(line: 1234, column: 16, scope: !960)
!1044 = !DILocation(line: 1231, column: 7, scope: !960)
!1045 = !DILocation(line: 1231, column: 5, scope: !960)
!1046 = !DILocation(line: 1235, column: 7, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !960, file: !1, line: 1235, column: 7)
!1048 = !DILocation(line: 1235, column: 9, scope: !1047)
!1049 = !DILocation(line: 1235, column: 7, scope: !960)
!1050 = !DILocation(line: 1236, column: 8, scope: !1051)
!1051 = distinct !DILexicalBlock(scope: !1052, file: !1, line: 1236, column: 8)
!1052 = distinct !DILexicalBlock(scope: !1047, file: !1, line: 1235, column: 15)
!1053 = !DILocation(line: 1236, column: 14, scope: !1051)
!1054 = !DILocation(line: 1236, column: 8, scope: !1052)
!1055 = !DILocation(line: 1237, column: 24, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1051, file: !1, line: 1236, column: 25)
!1057 = !DILocation(line: 1237, column: 27, scope: !1056)
!1058 = !DILocation(line: 1237, column: 5, scope: !1056)
!1059 = !DILocation(line: 1239, column: 5, scope: !1056)
!1060 = !DILocation(line: 1241, column: 23, scope: !1052)
!1061 = !DILocation(line: 1241, column: 26, scope: !1052)
!1062 = !DILocation(line: 1246, column: 10, scope: !1052)
!1063 = !DILocation(line: 1246, column: 19, scope: !1052)
!1064 = !DILocation(line: 1245, column: 8, scope: !1052)
!1065 = !DILocation(line: 1241, column: 4, scope: !1052)
!1066 = !DILocation(line: 1248, column: 9, scope: !1052)
!1067 = !DILocation(line: 1249, column: 3, scope: !1052)
!1068 = !DILocation(line: 1250, column: 2, scope: !960)
!1069 = !DILocalVariable(name: "path", scope: !1070, file: !1, line: 1251, type: !80)
!1070 = distinct !DILexicalBlock(scope: !955, file: !1, line: 1250, column: 9)
!1071 = !DILocation(line: 1251, column: 15, scope: !1070)
!1072 = !DILocation(line: 1251, column: 38, scope: !1070)
!1073 = !DILocation(line: 1251, column: 47, scope: !1070)
!1074 = !DILocation(line: 1251, column: 57, scope: !1070)
!1075 = !DILocation(line: 1251, column: 22, scope: !1070)
!1076 = !DILocation(line: 1252, column: 7, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 1252, column: 7)
!1078 = !DILocation(line: 1252, column: 12, scope: !1077)
!1079 = !DILocation(line: 1252, column: 7, scope: !1070)
!1080 = !DILocation(line: 1253, column: 23, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1077, file: !1, line: 1252, column: 21)
!1082 = !DILocation(line: 1253, column: 26, scope: !1081)
!1083 = !DILocation(line: 1253, column: 4, scope: !1081)
!1084 = !DILocation(line: 1256, column: 4, scope: !1081)
!1085 = !DILocation(line: 1258, column: 4, scope: !1086)
!1086 = distinct !DILexicalBlock(scope: !1077, file: !1, line: 1257, column: 10)
!1087 = !DILocation(line: 1259, column: 31, scope: !1086)
!1088 = !DILocation(line: 1259, column: 38, scope: !1086)
!1089 = !DILocation(line: 1259, column: 4, scope: !1086)
!1090 = !DILocation(line: 1263, column: 35, scope: !523)
!1091 = !DILocation(line: 1263, column: 41, scope: !523)
!1092 = !DILocation(line: 1263, column: 2, scope: !523)
!1093 = !DILocation(line: 1263, column: 11, scope: !523)
!1094 = !DILocation(line: 1263, column: 33, scope: !523)
!1095 = !DILocation(line: 1265, column: 2, scope: !523)
!1096 = !DILocation(line: 1265, column: 11, scope: !523)
!1097 = !DILocation(line: 1265, column: 31, scope: !523)
!1098 = !DILocation(line: 1267, column: 6, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1267, column: 6)
!1100 = !DILocation(line: 1267, column: 12, scope: !1099)
!1101 = !DILocation(line: 1267, column: 21, scope: !1099)
!1102 = !DILocation(line: 1267, column: 27, scope: !1099)
!1103 = !DILocation(line: 1267, column: 19, scope: !1099)
!1104 = !DILocation(line: 1267, column: 34, scope: !1099)
!1105 = !DILocation(line: 1267, column: 43, scope: !1099)
!1106 = !DILocation(line: 1267, column: 32, scope: !1099)
!1107 = !DILocation(line: 1267, column: 6, scope: !523)
!1108 = !DILocation(line: 1268, column: 22, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1099, file: !1, line: 1267, column: 56)
!1110 = !DILocation(line: 1268, column: 25, scope: !1109)
!1111 = !DILocation(line: 1270, column: 30, scope: !1109)
!1112 = !DILocation(line: 1270, column: 7, scope: !1109)
!1113 = !DILocation(line: 1268, column: 3, scope: !1109)
!1114 = !DILocation(line: 1271, column: 3, scope: !1109)
!1115 = !DILocation(line: 1271, column: 12, scope: !1109)
!1116 = !DILocation(line: 1271, column: 34, scope: !1109)
!1117 = !DILocation(line: 1272, column: 3, scope: !1109)
!1118 = !DILocation(line: 1276, column: 25, scope: !523)
!1119 = !DILocation(line: 1276, column: 32, scope: !523)
!1120 = !DILocation(line: 1276, column: 38, scope: !523)
!1121 = !DILocation(line: 1276, column: 2, scope: !523)
!1122 = !DILocation(line: 1277, column: 24, scope: !523)
!1123 = !DILocation(line: 1277, column: 31, scope: !523)
!1124 = !DILocation(line: 1277, column: 37, scope: !523)
!1125 = !DILocation(line: 1277, column: 2, scope: !523)
!1126 = !DILocation(line: 1278, column: 24, scope: !523)
!1127 = !DILocation(line: 1278, column: 31, scope: !523)
!1128 = !DILocation(line: 1278, column: 37, scope: !523)
!1129 = !DILocation(line: 1278, column: 2, scope: !523)
!1130 = !DILocation(line: 1279, column: 26, scope: !523)
!1131 = !DILocation(line: 1279, column: 33, scope: !523)
!1132 = !DILocation(line: 1279, column: 39, scope: !523)
!1133 = !DILocation(line: 1279, column: 2, scope: !523)
!1134 = !DILocation(line: 1280, column: 6, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1280, column: 6)
!1136 = !DILocation(line: 1280, column: 12, scope: !1135)
!1137 = !DILocation(line: 1280, column: 6, scope: !523)
!1138 = !DILocation(line: 1281, column: 31, scope: !1135)
!1139 = !DILocation(line: 1281, column: 38, scope: !1135)
!1140 = !DILocation(line: 1281, column: 44, scope: !1135)
!1141 = !DILocation(line: 1281, column: 3, scope: !1135)
!1142 = !DILocation(line: 1283, column: 33, scope: !1135)
!1143 = !DILocation(line: 1283, column: 3, scope: !1135)
!1144 = !DILocation(line: 1284, column: 26, scope: !523)
!1145 = !DILocation(line: 1284, column: 33, scope: !523)
!1146 = !DILocation(line: 1284, column: 39, scope: !523)
!1147 = !DILocation(line: 1284, column: 2, scope: !523)
!1148 = !DILocation(line: 1285, column: 26, scope: !523)
!1149 = !DILocation(line: 1285, column: 33, scope: !523)
!1150 = !DILocation(line: 1285, column: 39, scope: !523)
!1151 = !DILocation(line: 1285, column: 2, scope: !523)
!1152 = !DILocation(line: 1286, column: 26, scope: !523)
!1153 = !DILocation(line: 1286, column: 33, scope: !523)
!1154 = !DILocation(line: 1286, column: 39, scope: !523)
!1155 = !DILocation(line: 1286, column: 2, scope: !523)
!1156 = !DILocation(line: 1288, column: 25, scope: !523)
!1157 = !DILocation(line: 1288, column: 39, scope: !523)
!1158 = !DILocation(line: 1288, column: 45, scope: !523)
!1159 = !DILocation(line: 1288, column: 2, scope: !523)
!1160 = !DILocation(line: 1289, column: 25, scope: !523)
!1161 = !DILocation(line: 1289, column: 32, scope: !523)
!1162 = !DILocation(line: 1289, column: 41, scope: !523)
!1163 = !DILocation(line: 1289, column: 2, scope: !523)
!1164 = !DILocation(line: 1290, column: 6, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1290, column: 6)
!1166 = !DILocation(line: 1290, column: 12, scope: !1165)
!1167 = !DILocation(line: 1290, column: 20, scope: !1165)
!1168 = !DILocation(line: 1290, column: 22, scope: !1165)
!1169 = !DILocation(line: 1290, column: 6, scope: !523)
!1170 = !DILocation(line: 1291, column: 30, scope: !1165)
!1171 = !DILocation(line: 1291, column: 37, scope: !1165)
!1172 = !DILocation(line: 1291, column: 43, scope: !1165)
!1173 = !DILocation(line: 1291, column: 51, scope: !1165)
!1174 = !DILocation(line: 1291, column: 3, scope: !1165)
!1175 = !DILocation(line: 1297, column: 6, scope: !1176)
!1176 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1297, column: 6)
!1177 = !DILocation(line: 1297, column: 12, scope: !1176)
!1178 = !DILocation(line: 1297, column: 19, scope: !1176)
!1179 = !DILocation(line: 1297, column: 25, scope: !1176)
!1180 = !DILocation(line: 1298, column: 6, scope: !1176)
!1181 = !DILocation(line: 1298, column: 12, scope: !1176)
!1182 = !DILocation(line: 1298, column: 22, scope: !1176)
!1183 = !DILocation(line: 1298, column: 31, scope: !1176)
!1184 = !DILocation(line: 1298, column: 19, scope: !1176)
!1185 = !DILocation(line: 1297, column: 6, scope: !1186)
!1186 = !DILexicalBlockFile(scope: !523, file: !1, discriminator: 1)
!1187 = !DILocation(line: 1299, column: 7, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !1, line: 1299, column: 7)
!1189 = distinct !DILexicalBlock(scope: !1176, file: !1, line: 1298, column: 48)
!1190 = !DILocation(line: 1299, column: 16, scope: !1188)
!1191 = !DILocation(line: 1299, column: 7, scope: !1189)
!1192 = !DILocation(line: 1300, column: 38, scope: !1193)
!1193 = distinct !DILexicalBlock(scope: !1188, file: !1, line: 1299, column: 28)
!1194 = !DILocation(line: 1301, column: 22, scope: !1193)
!1195 = !DILocation(line: 1301, column: 31, scope: !1193)
!1196 = !DILocation(line: 1302, column: 8, scope: !1193)
!1197 = !DILocation(line: 1302, column: 17, scope: !1193)
!1198 = !DILocation(line: 1303, column: 8, scope: !1193)
!1199 = !DILocation(line: 1303, column: 17, scope: !1193)
!1200 = !DILocation(line: 1300, column: 8, scope: !1193)
!1201 = !DILocation(line: 1300, column: 6, scope: !1193)
!1202 = !DILocation(line: 1304, column: 8, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1193, file: !1, line: 1304, column: 8)
!1204 = !DILocation(line: 1304, column: 10, scope: !1203)
!1205 = !DILocation(line: 1304, column: 8, scope: !1193)
!1206 = !DILocation(line: 1305, column: 9, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1208, file: !1, line: 1305, column: 9)
!1208 = distinct !DILexicalBlock(scope: !1203, file: !1, line: 1304, column: 16)
!1209 = !DILocation(line: 1305, column: 15, scope: !1207)
!1210 = !DILocation(line: 1305, column: 9, scope: !1208)
!1211 = !DILocation(line: 1306, column: 25, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1207, file: !1, line: 1305, column: 26)
!1213 = !DILocation(line: 1306, column: 28, scope: !1212)
!1214 = !DILocation(line: 1306, column: 6, scope: !1212)
!1215 = !DILocation(line: 1308, column: 6, scope: !1212)
!1216 = !DILocation(line: 1310, column: 24, scope: !1208)
!1217 = !DILocation(line: 1310, column: 27, scope: !1208)
!1218 = !DILocation(line: 1315, column: 11, scope: !1208)
!1219 = !DILocation(line: 1315, column: 20, scope: !1208)
!1220 = !DILocation(line: 1314, column: 9, scope: !1208)
!1221 = !DILocation(line: 1310, column: 5, scope: !1208)
!1222 = !DILocation(line: 1316, column: 10, scope: !1208)
!1223 = !DILocation(line: 1317, column: 4, scope: !1208)
!1224 = !DILocation(line: 1318, column: 3, scope: !1193)
!1225 = !DILocation(line: 1319, column: 31, scope: !1188)
!1226 = !DILocation(line: 1320, column: 8, scope: !1188)
!1227 = !DILocation(line: 1320, column: 17, scope: !1188)
!1228 = !DILocation(line: 1320, column: 35, scope: !1188)
!1229 = !DILocation(line: 1319, column: 4, scope: !1188)
!1230 = !DILocation(line: 1321, column: 28, scope: !1189)
!1231 = !DILocation(line: 1321, column: 3, scope: !1189)
!1232 = !DILocation(line: 1322, column: 3, scope: !1189)
!1233 = !DILocation(line: 1322, column: 12, scope: !1189)
!1234 = !DILocation(line: 1322, column: 34, scope: !1189)
!1235 = !DILocation(line: 1323, column: 11, scope: !1189)
!1236 = !DILocation(line: 1323, column: 3, scope: !1189)
!1237 = !DILocation(line: 1326, column: 7, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1326, column: 6)
!1239 = !DILocation(line: 1326, column: 13, scope: !1238)
!1240 = !DILocation(line: 1326, column: 18, scope: !1238)
!1241 = !DILocation(line: 1326, column: 29, scope: !1238)
!1242 = !DILocation(line: 1326, column: 41, scope: !1238)
!1243 = !DILocation(line: 1327, column: 6, scope: !1238)
!1244 = !DILocation(line: 1327, column: 12, scope: !1238)
!1245 = !DILocation(line: 1327, column: 21, scope: !1238)
!1246 = !DILocation(line: 1327, column: 30, scope: !1238)
!1247 = !DILocation(line: 1327, column: 19, scope: !1238)
!1248 = !DILocation(line: 1326, column: 6, scope: !1186)
!1249 = !DILocalVariable(name: "r64", scope: !1250, file: !1, line: 1328, type: !52)
!1250 = distinct !DILexicalBlock(scope: !1238, file: !1, line: 1327, column: 48)
!1251 = !DILocation(line: 1328, column: 11, scope: !1250)
!1252 = !DILocation(line: 1330, column: 29, scope: !1250)
!1253 = !DILocation(line: 1330, column: 32, scope: !1250)
!1254 = !DILocation(line: 1330, column: 38, scope: !1250)
!1255 = !DILocation(line: 1330, column: 9, scope: !1250)
!1256 = !DILocation(line: 1330, column: 7, scope: !1250)
!1257 = !DILocation(line: 1331, column: 7, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1250, file: !1, line: 1331, column: 7)
!1259 = !DILocation(line: 1331, column: 23, scope: !1258)
!1260 = !DILocation(line: 1331, column: 29, scope: !1258)
!1261 = !DILocation(line: 1331, column: 11, scope: !1258)
!1262 = !DILocation(line: 1331, column: 7, scope: !1250)
!1263 = !DILocation(line: 1340, column: 23, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1258, file: !1, line: 1331, column: 37)
!1265 = !DILocation(line: 1340, column: 26, scope: !1264)
!1266 = !DILocation(line: 1342, column: 18, scope: !1264)
!1267 = !DILocation(line: 1342, column: 24, scope: !1264)
!1268 = !DILocation(line: 1343, column: 8, scope: !1264)
!1269 = !DILocation(line: 1343, column: 17, scope: !1264)
!1270 = !DILocation(line: 1343, column: 26, scope: !1264)
!1271 = !DILocation(line: 1344, column: 18, scope: !1264)
!1272 = !DILocation(line: 1344, column: 24, scope: !1264)
!1273 = !DILocation(line: 1345, column: 18, scope: !1264)
!1274 = !DILocation(line: 1345, column: 27, scope: !1264)
!1275 = !DILocation(line: 1340, column: 4, scope: !1264)
!1276 = !DILocation(line: 1346, column: 4, scope: !1264)
!1277 = !DILocation(line: 1346, column: 13, scope: !1264)
!1278 = !DILocation(line: 1346, column: 35, scope: !1264)
!1279 = !DILocation(line: 1347, column: 4, scope: !1264)
!1280 = !DILocation(line: 1349, column: 41, scope: !1250)
!1281 = !DILocation(line: 1349, column: 3, scope: !1250)
!1282 = !DILocation(line: 1349, column: 12, scope: !1250)
!1283 = !DILocation(line: 1349, column: 29, scope: !1250)
!1284 = !DILocation(line: 1350, column: 2, scope: !1250)
!1285 = !DILocation(line: 1353, column: 29, scope: !523)
!1286 = !DILocation(line: 1353, column: 35, scope: !523)
!1287 = !DILocation(line: 1353, column: 2, scope: !523)
!1288 = !DILocation(line: 1353, column: 11, scope: !523)
!1289 = !DILocation(line: 1353, column: 24, scope: !523)
!1290 = !DILocation(line: 1353, column: 27, scope: !523)
!1291 = !DILocation(line: 1354, column: 6, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1354, column: 6)
!1293 = !DILocation(line: 1354, column: 12, scope: !1292)
!1294 = !DILocation(line: 1354, column: 6, scope: !523)
!1295 = !DILocalVariable(name: "zisofs", scope: !1296, file: !1, line: 1356, type: !1297)
!1296 = distinct !DILexicalBlock(scope: !1292, file: !1, line: 1354, column: 16)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!1298 = !DILocation(line: 1356, column: 19, scope: !1296)
!1299 = !DILocation(line: 1358, column: 13, scope: !1296)
!1300 = !DILocation(line: 1358, column: 22, scope: !1296)
!1301 = !DILocation(line: 1358, column: 10, scope: !1296)
!1302 = !DILocation(line: 1359, column: 3, scope: !1296)
!1303 = !DILocation(line: 1359, column: 11, scope: !1296)
!1304 = !DILocation(line: 1359, column: 23, scope: !1296)
!1305 = !DILocation(line: 1360, column: 24, scope: !1296)
!1306 = !DILocation(line: 1360, column: 30, scope: !1296)
!1307 = !DILocation(line: 1360, column: 3, scope: !1296)
!1308 = !DILocation(line: 1360, column: 11, scope: !1296)
!1309 = !DILocation(line: 1360, column: 22, scope: !1296)
!1310 = !DILocation(line: 1361, column: 34, scope: !1296)
!1311 = !DILocation(line: 1361, column: 40, scope: !1296)
!1312 = !DILocation(line: 1361, column: 3, scope: !1296)
!1313 = !DILocation(line: 1361, column: 11, scope: !1296)
!1314 = !DILocation(line: 1361, column: 32, scope: !1296)
!1315 = !DILocation(line: 1362, column: 3, scope: !1296)
!1316 = !DILocation(line: 1362, column: 11, scope: !1296)
!1317 = !DILocation(line: 1362, column: 21, scope: !1296)
!1318 = !DILocation(line: 1363, column: 3, scope: !1296)
!1319 = !DILocation(line: 1363, column: 11, scope: !1296)
!1320 = !DILocation(line: 1363, column: 24, scope: !1296)
!1321 = !DILocation(line: 1364, column: 3, scope: !1296)
!1322 = !DILocation(line: 1364, column: 11, scope: !1296)
!1323 = !DILocation(line: 1364, column: 25, scope: !1296)
!1324 = !DILocation(line: 1365, column: 3, scope: !1296)
!1325 = !DILocation(line: 1365, column: 11, scope: !1296)
!1326 = !DILocation(line: 1365, column: 32, scope: !1296)
!1327 = !DILocation(line: 1367, column: 26, scope: !1296)
!1328 = !DILocation(line: 1367, column: 33, scope: !1296)
!1329 = !DILocation(line: 1367, column: 39, scope: !1296)
!1330 = !DILocation(line: 1367, column: 3, scope: !1296)
!1331 = !DILocation(line: 1368, column: 2, scope: !1296)
!1332 = !DILocation(line: 1370, column: 29, scope: !523)
!1333 = !DILocation(line: 1370, column: 35, scope: !523)
!1334 = !DILocation(line: 1370, column: 2, scope: !523)
!1335 = !DILocation(line: 1370, column: 11, scope: !523)
!1336 = !DILocation(line: 1370, column: 27, scope: !523)
!1337 = !DILocation(line: 1371, column: 6, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1371, column: 6)
!1339 = !DILocation(line: 1371, column: 15, scope: !1338)
!1340 = !DILocation(line: 1371, column: 6, scope: !523)
!1341 = !DILocation(line: 1372, column: 10, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1338, file: !1, line: 1371, column: 27)
!1343 = !DILocation(line: 1372, column: 19, scope: !1342)
!1344 = !DILocation(line: 1372, column: 42, scope: !1342)
!1345 = !DILocation(line: 1372, column: 51, scope: !1342)
!1346 = !DILocation(line: 1373, column: 7, scope: !1342)
!1347 = !DILocation(line: 1373, column: 16, scope: !1342)
!1348 = !DILocation(line: 1372, column: 3, scope: !1342)
!1349 = !DILocation(line: 1374, column: 40, scope: !1342)
!1350 = !DILocation(line: 1374, column: 49, scope: !1342)
!1351 = !DILocation(line: 1374, column: 3, scope: !1342)
!1352 = !DILocation(line: 1374, column: 12, scope: !1342)
!1353 = !DILocation(line: 1374, column: 38, scope: !1342)
!1354 = !DILocation(line: 1375, column: 2, scope: !1342)
!1355 = !DILocation(line: 1376, column: 3, scope: !1338)
!1356 = !DILocation(line: 1376, column: 3, scope: !1357)
!1357 = !DILexicalBlockFile(scope: !1338, file: !1, discriminator: 1)
!1358 = !DILocation(line: 1376, column: 3, scope: !1359)
!1359 = !DILexicalBlockFile(scope: !1338, file: !1, discriminator: 2)
!1360 = !DILocation(line: 1376, column: 3, scope: !1361)
!1361 = !DILexicalBlockFile(scope: !1338, file: !1, discriminator: 3)
!1362 = !DILocation(line: 1380, column: 27, scope: !523)
!1363 = !DILocation(line: 1380, column: 33, scope: !523)
!1364 = !DILocation(line: 1380, column: 42, scope: !523)
!1365 = !DILocation(line: 1380, column: 2, scope: !523)
!1366 = !DILocation(line: 1380, column: 11, scope: !523)
!1367 = !DILocation(line: 1380, column: 25, scope: !523)
!1368 = !DILocation(line: 1381, column: 6, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1381, column: 6)
!1370 = !DILocation(line: 1381, column: 15, scope: !1369)
!1371 = !DILocation(line: 1381, column: 29, scope: !1369)
!1372 = !DILocation(line: 1381, column: 6, scope: !523)
!1373 = !DILocation(line: 1382, column: 36, scope: !1369)
!1374 = !DILocation(line: 1382, column: 45, scope: !1369)
!1375 = !DILocation(line: 1382, column: 60, scope: !1369)
!1376 = !DILocation(line: 1382, column: 3, scope: !1369)
!1377 = !DILocation(line: 1382, column: 12, scope: !1369)
!1378 = !DILocation(line: 1382, column: 34, scope: !1369)
!1379 = !DILocation(line: 1384, column: 29, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1384, column: 6)
!1381 = !DILocation(line: 1384, column: 6, scope: !1380)
!1382 = !DILocation(line: 1384, column: 36, scope: !1380)
!1383 = !DILocation(line: 1384, column: 6, scope: !523)
!1384 = !DILocation(line: 1387, column: 27, scope: !1385)
!1385 = distinct !DILexicalBlock(scope: !1380, file: !1, line: 1384, column: 49)
!1386 = !DILocation(line: 1387, column: 38, scope: !1385)
!1387 = !DILocation(line: 1387, column: 44, scope: !1385)
!1388 = !DILocation(line: 1387, column: 36, scope: !1385)
!1389 = !DILocation(line: 1387, column: 3, scope: !1385)
!1390 = !DILocation(line: 1389, column: 3, scope: !1385)
!1391 = !DILocation(line: 1389, column: 12, scope: !1385)
!1392 = !DILocation(line: 1389, column: 34, scope: !1385)
!1393 = !DILocation(line: 1390, column: 2, scope: !1385)
!1394 = !DILocation(line: 1392, column: 6, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !523, file: !1, line: 1392, column: 6)
!1396 = !DILocation(line: 1392, column: 11, scope: !1395)
!1397 = !DILocation(line: 1392, column: 6, scope: !523)
!1398 = !DILocation(line: 1393, column: 11, scope: !1395)
!1399 = !DILocation(line: 1393, column: 3, scope: !1395)
!1400 = !DILocation(line: 1394, column: 2, scope: !523)
!1401 = !DILocation(line: 1395, column: 1, scope: !523)
!1402 = !DILocalVariable(name: "a", arg: 1, scope: !608, file: !1, line: 1648, type: !4)
!1403 = !DILocation(line: 1648, column: 60, scope: !608)
!1404 = !DILocalVariable(name: "buff", arg: 2, scope: !608, file: !1, line: 1649, type: !64)
!1405 = !DILocation(line: 1649, column: 18, scope: !608)
!1406 = !DILocalVariable(name: "size", arg: 3, scope: !608, file: !1, line: 1649, type: !65)
!1407 = !DILocation(line: 1649, column: 32, scope: !608)
!1408 = !DILocalVariable(name: "offset", arg: 4, scope: !608, file: !1, line: 1649, type: !66)
!1409 = !DILocation(line: 1649, column: 47, scope: !608)
!1410 = !DILocalVariable(name: "bytes_read", scope: !608, file: !1, line: 1651, type: !38)
!1411 = !DILocation(line: 1651, column: 10, scope: !608)
!1412 = !DILocalVariable(name: "iso9660", scope: !608, file: !1, line: 1652, type: !292)
!1413 = !DILocation(line: 1652, column: 18, scope: !608)
!1414 = !DILocation(line: 1654, column: 31, scope: !608)
!1415 = !DILocation(line: 1654, column: 34, scope: !608)
!1416 = !DILocation(line: 1654, column: 42, scope: !608)
!1417 = !DILocation(line: 1654, column: 12, scope: !608)
!1418 = !DILocation(line: 1654, column: 10, scope: !608)
!1419 = !DILocation(line: 1656, column: 6, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !608, file: !1, line: 1656, column: 6)
!1421 = !DILocation(line: 1656, column: 15, scope: !1420)
!1422 = !DILocation(line: 1656, column: 6, scope: !608)
!1423 = !DILocation(line: 1657, column: 26, scope: !1424)
!1424 = distinct !DILexicalBlock(scope: !1420, file: !1, line: 1656, column: 39)
!1425 = !DILocation(line: 1657, column: 29, scope: !1424)
!1426 = !DILocation(line: 1657, column: 38, scope: !1424)
!1427 = !DILocation(line: 1657, column: 3, scope: !1424)
!1428 = !DILocation(line: 1658, column: 3, scope: !1424)
!1429 = !DILocation(line: 1658, column: 12, scope: !1424)
!1430 = !DILocation(line: 1658, column: 35, scope: !1424)
!1431 = !DILocation(line: 1659, column: 2, scope: !1424)
!1432 = !DILocation(line: 1661, column: 6, scope: !1433)
!1433 = distinct !DILexicalBlock(scope: !608, file: !1, line: 1661, column: 6)
!1434 = !DILocation(line: 1661, column: 15, scope: !1433)
!1435 = !DILocation(line: 1661, column: 37, scope: !1433)
!1436 = !DILocation(line: 1661, column: 6, scope: !608)
!1437 = !DILocation(line: 1662, column: 7, scope: !1438)
!1438 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1662, column: 7)
!1439 = distinct !DILexicalBlock(scope: !1433, file: !1, line: 1661, column: 43)
!1440 = !DILocation(line: 1662, column: 16, scope: !1438)
!1441 = !DILocation(line: 1662, column: 30, scope: !1438)
!1442 = !DILocation(line: 1662, column: 7, scope: !1439)
!1443 = !DILocation(line: 1663, column: 29, scope: !1438)
!1444 = !DILocation(line: 1663, column: 38, scope: !1438)
!1445 = !DILocation(line: 1663, column: 53, scope: !1438)
!1446 = !DILocation(line: 1663, column: 4, scope: !1438)
!1447 = !DILocation(line: 1663, column: 13, scope: !1438)
!1448 = !DILocation(line: 1663, column: 27, scope: !1438)
!1449 = !DILocation(line: 1664, column: 7, scope: !1450)
!1450 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1664, column: 7)
!1451 = !DILocation(line: 1664, column: 16, scope: !1450)
!1452 = !DILocation(line: 1664, column: 30, scope: !1450)
!1453 = !DILocation(line: 1664, column: 7, scope: !1439)
!1454 = !DILocation(line: 1665, column: 5, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1450, file: !1, line: 1664, column: 39)
!1456 = !DILocation(line: 1665, column: 10, scope: !1455)
!1457 = !DILocation(line: 1666, column: 5, scope: !1455)
!1458 = !DILocation(line: 1666, column: 10, scope: !1455)
!1459 = !DILocation(line: 1667, column: 14, scope: !1455)
!1460 = !DILocation(line: 1667, column: 23, scope: !1455)
!1461 = !DILocation(line: 1667, column: 5, scope: !1455)
!1462 = !DILocation(line: 1667, column: 12, scope: !1455)
!1463 = !DILocation(line: 1668, column: 4, scope: !1455)
!1464 = !DILocation(line: 1671, column: 7, scope: !1465)
!1465 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1671, column: 7)
!1466 = !DILocation(line: 1671, column: 16, scope: !1465)
!1467 = !DILocation(line: 1671, column: 35, scope: !1465)
!1468 = !DILocation(line: 1671, column: 44, scope: !1465)
!1469 = !DILocation(line: 1671, column: 59, scope: !1465)
!1470 = !DILocation(line: 1671, column: 33, scope: !1465)
!1471 = !DILocation(line: 1671, column: 7, scope: !1439)
!1472 = !DILocalVariable(name: "step", scope: !1473, file: !1, line: 1672, type: !52)
!1473 = distinct !DILexicalBlock(scope: !1465, file: !1, line: 1671, column: 67)
!1474 = !DILocation(line: 1672, column: 12, scope: !1473)
!1475 = !DILocation(line: 1674, column: 11, scope: !1473)
!1476 = !DILocation(line: 1674, column: 20, scope: !1473)
!1477 = !DILocation(line: 1674, column: 35, scope: !1473)
!1478 = !DILocation(line: 1675, column: 8, scope: !1473)
!1479 = !DILocation(line: 1675, column: 17, scope: !1473)
!1480 = !DILocation(line: 1674, column: 42, scope: !1473)
!1481 = !DILocation(line: 1674, column: 9, scope: !1473)
!1482 = !DILocation(line: 1676, column: 34, scope: !1473)
!1483 = !DILocation(line: 1676, column: 37, scope: !1473)
!1484 = !DILocation(line: 1676, column: 11, scope: !1473)
!1485 = !DILocation(line: 1676, column: 9, scope: !1473)
!1486 = !DILocation(line: 1677, column: 8, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 1677, column: 8)
!1488 = !DILocation(line: 1677, column: 13, scope: !1487)
!1489 = !DILocation(line: 1677, column: 8, scope: !1473)
!1490 = !DILocation(line: 1678, column: 18, scope: !1487)
!1491 = !DILocation(line: 1678, column: 13, scope: !1487)
!1492 = !DILocation(line: 1678, column: 5, scope: !1487)
!1493 = !DILocation(line: 1680, column: 8, scope: !1473)
!1494 = !DILocation(line: 1680, column: 17, scope: !1473)
!1495 = !DILocation(line: 1680, column: 32, scope: !1473)
!1496 = !DILocation(line: 1679, column: 4, scope: !1473)
!1497 = !DILocation(line: 1679, column: 13, scope: !1473)
!1498 = !DILocation(line: 1679, column: 30, scope: !1473)
!1499 = !DILocation(line: 1681, column: 3, scope: !1473)
!1500 = !DILocation(line: 1682, column: 7, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1682, column: 7)
!1502 = !DILocation(line: 1682, column: 16, scope: !1501)
!1503 = !DILocation(line: 1682, column: 31, scope: !1501)
!1504 = !DILocation(line: 1682, column: 40, scope: !1501)
!1505 = !DILocation(line: 1682, column: 49, scope: !1501)
!1506 = !DILocation(line: 1682, column: 38, scope: !1501)
!1507 = !DILocation(line: 1682, column: 7, scope: !1439)
!1508 = !DILocation(line: 1683, column: 23, scope: !1509)
!1509 = distinct !DILexicalBlock(scope: !1501, file: !1, line: 1682, column: 67)
!1510 = !DILocation(line: 1683, column: 26, scope: !1509)
!1511 = !DILocation(line: 1685, column: 8, scope: !1509)
!1512 = !DILocation(line: 1685, column: 17, scope: !1509)
!1513 = !DILocation(line: 1685, column: 26, scope: !1509)
!1514 = !DILocation(line: 1686, column: 18, scope: !1509)
!1515 = !DILocation(line: 1686, column: 27, scope: !1509)
!1516 = !DILocation(line: 1686, column: 42, scope: !1509)
!1517 = !DILocation(line: 1687, column: 18, scope: !1509)
!1518 = !DILocation(line: 1687, column: 27, scope: !1509)
!1519 = !DILocation(line: 1683, column: 4, scope: !1509)
!1520 = !DILocation(line: 1688, column: 5, scope: !1509)
!1521 = !DILocation(line: 1688, column: 10, scope: !1509)
!1522 = !DILocation(line: 1689, column: 5, scope: !1509)
!1523 = !DILocation(line: 1689, column: 10, scope: !1509)
!1524 = !DILocation(line: 1690, column: 14, scope: !1509)
!1525 = !DILocation(line: 1690, column: 23, scope: !1509)
!1526 = !DILocation(line: 1690, column: 5, scope: !1509)
!1527 = !DILocation(line: 1690, column: 12, scope: !1509)
!1528 = !DILocation(line: 1691, column: 4, scope: !1509)
!1529 = !DILocation(line: 1693, column: 36, scope: !1439)
!1530 = !DILocation(line: 1693, column: 45, scope: !1439)
!1531 = !DILocation(line: 1693, column: 60, scope: !1439)
!1532 = !DILocation(line: 1693, column: 3, scope: !1439)
!1533 = !DILocation(line: 1693, column: 12, scope: !1439)
!1534 = !DILocation(line: 1693, column: 34, scope: !1439)
!1535 = !DILocation(line: 1694, column: 2, scope: !1439)
!1536 = !DILocation(line: 1695, column: 6, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !608, file: !1, line: 1695, column: 6)
!1538 = !DILocation(line: 1695, column: 15, scope: !1537)
!1539 = !DILocation(line: 1695, column: 28, scope: !1537)
!1540 = !DILocation(line: 1695, column: 6, scope: !608)
!1541 = !DILocation(line: 1696, column: 28, scope: !1537)
!1542 = !DILocation(line: 1696, column: 31, scope: !1537)
!1543 = !DILocation(line: 1696, column: 37, scope: !1537)
!1544 = !DILocation(line: 1696, column: 43, scope: !1537)
!1545 = !DILocation(line: 1696, column: 11, scope: !1537)
!1546 = !DILocation(line: 1696, column: 3, scope: !1537)
!1547 = !DILocation(line: 1698, column: 31, scope: !608)
!1548 = !DILocation(line: 1698, column: 10, scope: !608)
!1549 = !DILocation(line: 1698, column: 3, scope: !608)
!1550 = !DILocation(line: 1698, column: 8, scope: !608)
!1551 = !DILocation(line: 1699, column: 6, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !608, file: !1, line: 1699, column: 6)
!1553 = !DILocation(line: 1699, column: 17, scope: !1552)
!1554 = !DILocation(line: 1699, column: 6, scope: !608)
!1555 = !DILocation(line: 1700, column: 22, scope: !1552)
!1556 = !DILocation(line: 1700, column: 25, scope: !1552)
!1557 = !DILocation(line: 1700, column: 3, scope: !1552)
!1558 = !DILocation(line: 1702, column: 7, scope: !1559)
!1559 = distinct !DILexicalBlock(scope: !608, file: !1, line: 1702, column: 6)
!1560 = !DILocation(line: 1702, column: 6, scope: !1559)
!1561 = !DILocation(line: 1702, column: 12, scope: !1559)
!1562 = !DILocation(line: 1702, column: 6, scope: !608)
!1563 = !DILocation(line: 1703, column: 3, scope: !1559)
!1564 = !DILocation(line: 1704, column: 6, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !608, file: !1, line: 1704, column: 6)
!1566 = !DILocation(line: 1704, column: 19, scope: !1565)
!1567 = !DILocation(line: 1704, column: 28, scope: !1565)
!1568 = !DILocation(line: 1704, column: 17, scope: !1565)
!1569 = !DILocation(line: 1704, column: 6, scope: !608)
!1570 = !DILocation(line: 1705, column: 25, scope: !1565)
!1571 = !DILocation(line: 1705, column: 34, scope: !1565)
!1572 = !DILocation(line: 1705, column: 14, scope: !1565)
!1573 = !DILocation(line: 1705, column: 3, scope: !1565)
!1574 = !DILocation(line: 1706, column: 10, scope: !608)
!1575 = !DILocation(line: 1706, column: 3, scope: !608)
!1576 = !DILocation(line: 1706, column: 8, scope: !608)
!1577 = !DILocation(line: 1707, column: 12, scope: !608)
!1578 = !DILocation(line: 1707, column: 21, scope: !608)
!1579 = !DILocation(line: 1707, column: 3, scope: !608)
!1580 = !DILocation(line: 1707, column: 10, scope: !608)
!1581 = !DILocation(line: 1708, column: 34, scope: !608)
!1582 = !DILocation(line: 1708, column: 2, scope: !608)
!1583 = !DILocation(line: 1708, column: 11, scope: !608)
!1584 = !DILocation(line: 1708, column: 31, scope: !608)
!1585 = !DILocation(line: 1709, column: 36, scope: !608)
!1586 = !DILocation(line: 1709, column: 2, scope: !608)
!1587 = !DILocation(line: 1709, column: 11, scope: !608)
!1588 = !DILocation(line: 1709, column: 33, scope: !608)
!1589 = !DILocation(line: 1710, column: 36, scope: !608)
!1590 = !DILocation(line: 1710, column: 2, scope: !608)
!1591 = !DILocation(line: 1710, column: 11, scope: !608)
!1592 = !DILocation(line: 1710, column: 34, scope: !608)
!1593 = !DILocation(line: 1711, column: 31, scope: !608)
!1594 = !DILocation(line: 1711, column: 2, scope: !608)
!1595 = !DILocation(line: 1711, column: 11, scope: !608)
!1596 = !DILocation(line: 1711, column: 28, scope: !608)
!1597 = !DILocation(line: 1712, column: 2, scope: !608)
!1598 = !DILocation(line: 1713, column: 1, scope: !608)
!1599 = !DILocalVariable(name: "a", arg: 1, scope: !607, file: !1, line: 1398, type: !4)
!1600 = !DILocation(line: 1398, column: 65, scope: !607)
!1601 = !DILocation(line: 1402, column: 8, scope: !607)
!1602 = !DILocation(line: 1403, column: 2, scope: !607)
!1603 = !DILocalVariable(name: "a", arg: 1, scope: !610, file: !1, line: 1716, type: !4)
!1604 = !DILocation(line: 1716, column: 58, scope: !610)
!1605 = !DILocalVariable(name: "iso9660", scope: !610, file: !1, line: 1718, type: !292)
!1606 = !DILocation(line: 1718, column: 18, scope: !610)
!1607 = !DILocalVariable(name: "r", scope: !610, file: !1, line: 1719, type: !23)
!1608 = !DILocation(line: 1719, column: 6, scope: !610)
!1609 = !DILocation(line: 1721, column: 31, scope: !610)
!1610 = !DILocation(line: 1721, column: 34, scope: !610)
!1611 = !DILocation(line: 1721, column: 42, scope: !610)
!1612 = !DILocation(line: 1721, column: 12, scope: !610)
!1613 = !DILocation(line: 1721, column: 10, scope: !610)
!1614 = !DILocation(line: 1722, column: 16, scope: !610)
!1615 = !DILocation(line: 1722, column: 2, scope: !610)
!1616 = !DILocation(line: 1723, column: 7, scope: !610)
!1617 = !DILocation(line: 1723, column: 16, scope: !610)
!1618 = !DILocation(line: 1723, column: 28, scope: !610)
!1619 = !DILocation(line: 1723, column: 2, scope: !610)
!1620 = !DILocation(line: 1724, column: 23, scope: !610)
!1621 = !DILocation(line: 1724, column: 32, scope: !610)
!1622 = !DILocation(line: 1724, column: 2, scope: !610)
!1623 = !DILocation(line: 1725, column: 23, scope: !610)
!1624 = !DILocation(line: 1725, column: 32, scope: !610)
!1625 = !DILocation(line: 1725, column: 2, scope: !610)
!1626 = !DILocation(line: 1726, column: 6, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !610, file: !1, line: 1726, column: 6)
!1628 = !DILocation(line: 1726, column: 15, scope: !1627)
!1629 = !DILocation(line: 1726, column: 29, scope: !1627)
!1630 = !DILocation(line: 1726, column: 6, scope: !610)
!1631 = !DILocation(line: 1727, column: 8, scope: !1627)
!1632 = !DILocation(line: 1727, column: 17, scope: !1627)
!1633 = !DILocation(line: 1727, column: 31, scope: !1627)
!1634 = !DILocation(line: 1727, column: 3, scope: !1627)
!1635 = !DILocation(line: 1729, column: 7, scope: !610)
!1636 = !DILocation(line: 1729, column: 16, scope: !610)
!1637 = !DILocation(line: 1729, column: 29, scope: !610)
!1638 = !DILocation(line: 1729, column: 2, scope: !610)
!1639 = !DILocation(line: 1730, column: 7, scope: !610)
!1640 = !DILocation(line: 1730, column: 16, scope: !610)
!1641 = !DILocation(line: 1730, column: 29, scope: !610)
!1642 = !DILocation(line: 1730, column: 2, scope: !610)
!1643 = !DILocation(line: 1731, column: 6, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !610, file: !1, line: 1731, column: 6)
!1645 = !DILocation(line: 1731, column: 15, scope: !1644)
!1646 = !DILocation(line: 1731, column: 28, scope: !1644)
!1647 = !DILocation(line: 1731, column: 6, scope: !610)
!1648 = !DILocation(line: 1732, column: 19, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1650, file: !1, line: 1732, column: 7)
!1650 = distinct !DILexicalBlock(scope: !1644, file: !1, line: 1731, column: 42)
!1651 = !DILocation(line: 1732, column: 28, scope: !1649)
!1652 = !DILocation(line: 1732, column: 41, scope: !1649)
!1653 = !DILocation(line: 1732, column: 7, scope: !1649)
!1654 = !DILocation(line: 1732, column: 49, scope: !1649)
!1655 = !DILocation(line: 1732, column: 7, scope: !1650)
!1656 = !DILocation(line: 1733, column: 23, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1649, file: !1, line: 1732, column: 58)
!1658 = !DILocation(line: 1733, column: 26, scope: !1657)
!1659 = !DILocation(line: 1733, column: 4, scope: !1657)
!1660 = !DILocation(line: 1735, column: 6, scope: !1657)
!1661 = !DILocation(line: 1736, column: 3, scope: !1657)
!1662 = !DILocation(line: 1737, column: 2, scope: !1650)
!1663 = !DILocation(line: 1739, column: 7, scope: !610)
!1664 = !DILocation(line: 1739, column: 16, scope: !610)
!1665 = !DILocation(line: 1739, column: 2, scope: !610)
!1666 = !DILocation(line: 1740, column: 7, scope: !610)
!1667 = !DILocation(line: 1740, column: 16, scope: !610)
!1668 = !DILocation(line: 1740, column: 2, scope: !610)
!1669 = !DILocation(line: 1741, column: 7, scope: !610)
!1670 = !DILocation(line: 1741, column: 2, scope: !610)
!1671 = !DILocation(line: 1742, column: 3, scope: !610)
!1672 = !DILocation(line: 1742, column: 6, scope: !610)
!1673 = !DILocation(line: 1742, column: 14, scope: !610)
!1674 = !DILocation(line: 1742, column: 20, scope: !610)
!1675 = !DILocation(line: 1743, column: 10, scope: !610)
!1676 = !DILocation(line: 1743, column: 2, scope: !610)
!1677 = !DILocalVariable(name: "iso9660", arg: 1, scope: !500, file: !1, line: 861, type: !292)
!1678 = !DILocation(line: 861, column: 23, scope: !500)
!1679 = !DILocalVariable(name: "h", arg: 2, scope: !500, file: !1, line: 861, type: !488)
!1680 = !DILocation(line: 861, column: 53, scope: !500)
!1681 = !DILocalVariable(name: "p", scope: !500, file: !1, line: 863, type: !488)
!1682 = !DILocation(line: 863, column: 23, scope: !500)
!1683 = !DILocalVariable(name: "logical_block_size", scope: !500, file: !1, line: 864, type: !38)
!1684 = !DILocation(line: 864, column: 10, scope: !500)
!1685 = !DILocalVariable(name: "volume_block", scope: !500, file: !1, line: 865, type: !409)
!1686 = !DILocation(line: 865, column: 10, scope: !500)
!1687 = !DILocalVariable(name: "location", scope: !500, file: !1, line: 866, type: !409)
!1688 = !DILocation(line: 866, column: 10, scope: !500)
!1689 = !DILocalVariable(name: "i", scope: !500, file: !1, line: 867, type: !23)
!1690 = !DILocation(line: 867, column: 6, scope: !500)
!1691 = !DILocation(line: 870, column: 6, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !500, file: !1, line: 870, column: 6)
!1693 = !DILocation(line: 870, column: 25, scope: !1692)
!1694 = !DILocation(line: 870, column: 6, scope: !500)
!1695 = !DILocation(line: 871, column: 3, scope: !1692)
!1696 = !DILocation(line: 874, column: 6, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !500, file: !1, line: 874, column: 6)
!1698 = !DILocation(line: 874, column: 28, scope: !1697)
!1699 = !DILocation(line: 874, column: 6, scope: !500)
!1700 = !DILocation(line: 875, column: 3, scope: !1697)
!1701 = !DILocation(line: 878, column: 6, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !500, file: !1, line: 878, column: 6)
!1703 = !DILocation(line: 878, column: 30, scope: !1702)
!1704 = !DILocation(line: 878, column: 6, scope: !500)
!1705 = !DILocation(line: 879, column: 3, scope: !1702)
!1706 = !DILocation(line: 882, column: 14, scope: !1707)
!1707 = distinct !DILexicalBlock(scope: !500, file: !1, line: 882, column: 6)
!1708 = !DILocation(line: 882, column: 23, scope: !1707)
!1709 = !DILocation(line: 882, column: 7, scope: !1707)
!1710 = !DILocation(line: 882, column: 6, scope: !500)
!1711 = !DILocation(line: 883, column: 3, scope: !1707)
!1712 = !DILocation(line: 886, column: 14, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !500, file: !1, line: 886, column: 6)
!1714 = !DILocation(line: 886, column: 23, scope: !1713)
!1715 = !DILocation(line: 886, column: 7, scope: !1713)
!1716 = !DILocation(line: 886, column: 6, scope: !500)
!1717 = !DILocation(line: 887, column: 3, scope: !1713)
!1718 = !DILocation(line: 893, column: 22, scope: !500)
!1719 = !DILocation(line: 893, column: 24, scope: !500)
!1720 = !DILocation(line: 893, column: 6, scope: !500)
!1721 = !DILocation(line: 892, column: 21, scope: !500)
!1722 = !DILocation(line: 894, column: 6, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !500, file: !1, line: 894, column: 6)
!1724 = !DILocation(line: 894, column: 25, scope: !1723)
!1725 = !DILocation(line: 894, column: 6, scope: !500)
!1726 = !DILocation(line: 895, column: 3, scope: !1723)
!1727 = !DILocation(line: 897, column: 33, scope: !500)
!1728 = !DILocation(line: 897, column: 35, scope: !500)
!1729 = !DILocation(line: 897, column: 17, scope: !500)
!1730 = !DILocation(line: 897, column: 15, scope: !500)
!1731 = !DILocation(line: 898, column: 6, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !500, file: !1, line: 898, column: 6)
!1733 = !DILocation(line: 898, column: 19, scope: !1732)
!1734 = !DILocation(line: 898, column: 6, scope: !500)
!1735 = !DILocation(line: 899, column: 3, scope: !1732)
!1736 = !DILocation(line: 902, column: 6, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !500, file: !1, line: 902, column: 6)
!1738 = !DILocation(line: 902, column: 43, scope: !1737)
!1739 = !DILocation(line: 902, column: 6, scope: !500)
!1740 = !DILocation(line: 903, column: 3, scope: !1737)
!1741 = !DILocation(line: 908, column: 29, scope: !500)
!1742 = !DILocation(line: 908, column: 30, scope: !500)
!1743 = !DILocation(line: 908, column: 13, scope: !500)
!1744 = !DILocation(line: 908, column: 11, scope: !500)
!1745 = !DILocation(line: 909, column: 6, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !500, file: !1, line: 909, column: 6)
!1747 = !DILocation(line: 909, column: 15, scope: !1746)
!1748 = !DILocation(line: 909, column: 37, scope: !1746)
!1749 = !DILocation(line: 909, column: 40, scope: !1750)
!1750 = !DILexicalBlockFile(scope: !1746, file: !1, discriminator: 1)
!1751 = !DILocation(line: 909, column: 52, scope: !1750)
!1752 = !DILocation(line: 909, column: 49, scope: !1750)
!1753 = !DILocation(line: 909, column: 6, scope: !1750)
!1754 = !DILocation(line: 910, column: 3, scope: !1746)
!1755 = !DILocation(line: 917, column: 29, scope: !500)
!1756 = !DILocation(line: 917, column: 30, scope: !500)
!1757 = !DILocation(line: 917, column: 13, scope: !500)
!1758 = !DILocation(line: 917, column: 11, scope: !500)
!1759 = !DILocation(line: 918, column: 7, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !500, file: !1, line: 918, column: 6)
!1761 = !DILocation(line: 918, column: 16, scope: !1760)
!1762 = !DILocation(line: 918, column: 20, scope: !1760)
!1763 = !DILocation(line: 918, column: 23, scope: !1764)
!1764 = !DILexicalBlockFile(scope: !1760, file: !1, discriminator: 1)
!1765 = !DILocation(line: 918, column: 32, scope: !1764)
!1766 = !DILocation(line: 919, column: 6, scope: !1760)
!1767 = !DILocation(line: 919, column: 9, scope: !1764)
!1768 = !DILocation(line: 919, column: 21, scope: !1764)
!1769 = !DILocation(line: 919, column: 18, scope: !1764)
!1770 = !DILocation(line: 918, column: 6, scope: !1771)
!1771 = !DILexicalBlockFile(scope: !500, file: !1, discriminator: 2)
!1772 = !DILocation(line: 920, column: 3, scope: !1760)
!1773 = !DILocation(line: 924, column: 9, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !500, file: !1, line: 924, column: 2)
!1775 = !DILocation(line: 924, column: 7, scope: !1774)
!1776 = !DILocation(line: 924, column: 14, scope: !1777)
!1777 = !DILexicalBlockFile(scope: !1778, file: !1, discriminator: 1)
!1778 = distinct !DILexicalBlock(scope: !1774, file: !1, line: 924, column: 2)
!1779 = !DILocation(line: 924, column: 16, scope: !1777)
!1780 = !DILocation(line: 924, column: 2, scope: !1777)
!1781 = !DILocation(line: 925, column: 32, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1778, file: !1, line: 925, column: 7)
!1783 = !DILocation(line: 925, column: 30, scope: !1782)
!1784 = !DILocation(line: 925, column: 7, scope: !1782)
!1785 = !DILocation(line: 925, column: 35, scope: !1782)
!1786 = !DILocation(line: 926, column: 7, scope: !1782)
!1787 = !DILocation(line: 926, column: 35, scope: !1788)
!1788 = !DILexicalBlockFile(scope: !1782, file: !1, discriminator: 1)
!1789 = !DILocation(line: 926, column: 33, scope: !1788)
!1790 = !DILocation(line: 926, column: 10, scope: !1788)
!1791 = !DILocation(line: 926, column: 38, scope: !1788)
!1792 = !DILocation(line: 925, column: 7, scope: !1777)
!1793 = !DILocation(line: 927, column: 4, scope: !1782)
!1794 = !DILocation(line: 926, column: 41, scope: !1795)
!1795 = !DILexicalBlockFile(scope: !1782, file: !1, discriminator: 2)
!1796 = !DILocation(line: 924, column: 38, scope: !1797)
!1797 = !DILexicalBlockFile(scope: !1778, file: !1, discriminator: 2)
!1798 = !DILocation(line: 924, column: 2, scope: !1797)
!1799 = !DILocation(line: 930, column: 14, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !500, file: !1, line: 930, column: 6)
!1801 = !DILocation(line: 930, column: 23, scope: !1800)
!1802 = !DILocation(line: 930, column: 7, scope: !1800)
!1803 = !DILocation(line: 930, column: 6, scope: !500)
!1804 = !DILocation(line: 931, column: 3, scope: !1800)
!1805 = !DILocation(line: 937, column: 6, scope: !500)
!1806 = !DILocation(line: 937, column: 8, scope: !500)
!1807 = !DILocation(line: 937, column: 4, scope: !500)
!1808 = !DILocation(line: 938, column: 6, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !500, file: !1, line: 938, column: 6)
!1810 = !DILocation(line: 938, column: 26, scope: !1809)
!1811 = !DILocation(line: 938, column: 6, scope: !500)
!1812 = !DILocation(line: 939, column: 3, scope: !1809)
!1813 = !DILocation(line: 941, column: 7, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !500, file: !1, line: 941, column: 6)
!1815 = !DILocation(line: 941, column: 16, scope: !1814)
!1816 = !DILocation(line: 941, column: 24, scope: !1814)
!1817 = !DILocation(line: 941, column: 6, scope: !500)
!1818 = !DILocation(line: 942, column: 33, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1814, file: !1, line: 941, column: 34)
!1820 = !DILocation(line: 942, column: 3, scope: !1819)
!1821 = !DILocation(line: 942, column: 12, scope: !1819)
!1822 = !DILocation(line: 942, column: 31, scope: !1819)
!1823 = !DILocation(line: 943, column: 27, scope: !1819)
!1824 = !DILocation(line: 943, column: 3, scope: !1819)
!1825 = !DILocation(line: 943, column: 12, scope: !1819)
!1826 = !DILocation(line: 943, column: 25, scope: !1819)
!1827 = !DILocation(line: 945, column: 7, scope: !1819)
!1828 = !DILocation(line: 945, column: 38, scope: !1819)
!1829 = !DILocation(line: 945, column: 28, scope: !1819)
!1830 = !DILocation(line: 945, column: 26, scope: !1819)
!1831 = !DILocation(line: 944, column: 3, scope: !1819)
!1832 = !DILocation(line: 944, column: 12, scope: !1819)
!1833 = !DILocation(line: 944, column: 24, scope: !1819)
!1834 = !DILocation(line: 947, column: 23, scope: !1819)
!1835 = !DILocation(line: 947, column: 25, scope: !1819)
!1836 = !DILocation(line: 947, column: 7, scope: !1819)
!1837 = !DILocation(line: 946, column: 3, scope: !1819)
!1838 = !DILocation(line: 946, column: 12, scope: !1819)
!1839 = !DILocation(line: 946, column: 20, scope: !1819)
!1840 = !DILocation(line: 946, column: 29, scope: !1819)
!1841 = !DILocation(line: 948, column: 43, scope: !1819)
!1842 = !DILocation(line: 948, column: 45, scope: !1819)
!1843 = !DILocation(line: 948, column: 27, scope: !1819)
!1844 = !DILocation(line: 948, column: 3, scope: !1819)
!1845 = !DILocation(line: 948, column: 12, scope: !1819)
!1846 = !DILocation(line: 948, column: 20, scope: !1819)
!1847 = !DILocation(line: 948, column: 25, scope: !1819)
!1848 = !DILocation(line: 949, column: 2, scope: !1819)
!1849 = !DILocation(line: 951, column: 2, scope: !500)
!1850 = !DILocation(line: 952, column: 1, scope: !500)
!1851 = !DILocalVariable(name: "iso9660", arg: 1, scope: !516, file: !1, line: 675, type: !292)
!1852 = !DILocation(line: 675, column: 29, scope: !516)
!1853 = !DILocalVariable(name: "h", arg: 2, scope: !516, file: !1, line: 675, type: !488)
!1854 = !DILocation(line: 675, column: 59, scope: !516)
!1855 = !DILocalVariable(name: "p", scope: !516, file: !1, line: 677, type: !488)
!1856 = !DILocation(line: 677, column: 23, scope: !516)
!1857 = !DILocalVariable(name: "logical_block_size", scope: !516, file: !1, line: 678, type: !38)
!1858 = !DILocation(line: 678, column: 10, scope: !516)
!1859 = !DILocalVariable(name: "volume_block", scope: !516, file: !1, line: 679, type: !409)
!1860 = !DILocation(line: 679, column: 10, scope: !516)
!1861 = !DILocation(line: 683, column: 13, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !516, file: !1, line: 683, column: 6)
!1863 = !DILocation(line: 683, column: 22, scope: !1862)
!1864 = !DILocation(line: 683, column: 7, scope: !1862)
!1865 = !DILocation(line: 683, column: 6, scope: !516)
!1866 = !DILocation(line: 684, column: 3, scope: !1862)
!1867 = !DILocation(line: 689, column: 6, scope: !516)
!1868 = !DILocation(line: 689, column: 8, scope: !516)
!1869 = !DILocation(line: 689, column: 4, scope: !516)
!1870 = !DILocation(line: 691, column: 6, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !516, file: !1, line: 691, column: 6)
!1872 = !DILocation(line: 691, column: 11, scope: !1871)
!1873 = !DILocation(line: 691, column: 18, scope: !1871)
!1874 = !DILocation(line: 691, column: 21, scope: !1875)
!1875 = !DILexicalBlockFile(scope: !1871, file: !1, discriminator: 1)
!1876 = !DILocation(line: 691, column: 26, scope: !1875)
!1877 = !DILocation(line: 691, column: 6, scope: !1875)
!1878 = !DILocalVariable(name: "level", scope: !1879, file: !1, line: 692, type: !23)
!1879 = distinct !DILexicalBlock(scope: !1871, file: !1, line: 691, column: 34)
!1880 = !DILocation(line: 692, column: 7, scope: !1879)
!1881 = !DILocation(line: 694, column: 7, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1879, file: !1, line: 694, column: 7)
!1883 = !DILocation(line: 694, column: 12, scope: !1882)
!1884 = !DILocation(line: 694, column: 7, scope: !1879)
!1885 = !DILocation(line: 695, column: 10, scope: !1882)
!1886 = !DILocation(line: 695, column: 4, scope: !1882)
!1887 = !DILocation(line: 696, column: 12, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1882, file: !1, line: 696, column: 12)
!1889 = !DILocation(line: 696, column: 17, scope: !1888)
!1890 = !DILocation(line: 696, column: 12, scope: !1882)
!1891 = !DILocation(line: 697, column: 10, scope: !1888)
!1892 = !DILocation(line: 697, column: 4, scope: !1888)
!1893 = !DILocation(line: 698, column: 12, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 698, column: 12)
!1895 = !DILocation(line: 698, column: 17, scope: !1894)
!1896 = !DILocation(line: 698, column: 12, scope: !1888)
!1897 = !DILocation(line: 699, column: 10, scope: !1894)
!1898 = !DILocation(line: 699, column: 4, scope: !1894)
!1899 = !DILocation(line: 701, column: 4, scope: !1894)
!1900 = !DILocation(line: 703, column: 25, scope: !1879)
!1901 = !DILocation(line: 703, column: 3, scope: !1879)
!1902 = !DILocation(line: 703, column: 12, scope: !1879)
!1903 = !DILocation(line: 703, column: 23, scope: !1879)
!1904 = !DILocation(line: 705, column: 2, scope: !1879)
!1905 = !DILocation(line: 706, column: 3, scope: !1871)
!1906 = !DILocation(line: 709, column: 22, scope: !516)
!1907 = !DILocation(line: 709, column: 24, scope: !516)
!1908 = !DILocation(line: 709, column: 6, scope: !516)
!1909 = !DILocation(line: 708, column: 21, scope: !516)
!1910 = !DILocation(line: 710, column: 33, scope: !516)
!1911 = !DILocation(line: 710, column: 35, scope: !516)
!1912 = !DILocation(line: 710, column: 17, scope: !516)
!1913 = !DILocation(line: 710, column: 15, scope: !516)
!1914 = !DILocation(line: 712, column: 32, scope: !516)
!1915 = !DILocation(line: 712, column: 2, scope: !516)
!1916 = !DILocation(line: 712, column: 11, scope: !516)
!1917 = !DILocation(line: 712, column: 30, scope: !516)
!1918 = !DILocation(line: 713, column: 26, scope: !516)
!1919 = !DILocation(line: 713, column: 2, scope: !516)
!1920 = !DILocation(line: 713, column: 11, scope: !516)
!1921 = !DILocation(line: 713, column: 24, scope: !516)
!1922 = !DILocation(line: 714, column: 25, scope: !516)
!1923 = !DILocation(line: 714, column: 56, scope: !516)
!1924 = !DILocation(line: 714, column: 46, scope: !516)
!1925 = !DILocation(line: 714, column: 44, scope: !516)
!1926 = !DILocation(line: 714, column: 2, scope: !516)
!1927 = !DILocation(line: 714, column: 11, scope: !516)
!1928 = !DILocation(line: 714, column: 23, scope: !516)
!1929 = !DILocation(line: 716, column: 6, scope: !516)
!1930 = !DILocation(line: 716, column: 8, scope: !516)
!1931 = !DILocation(line: 716, column: 4, scope: !516)
!1932 = !DILocation(line: 717, column: 45, scope: !516)
!1933 = !DILocation(line: 717, column: 47, scope: !516)
!1934 = !DILocation(line: 717, column: 29, scope: !516)
!1935 = !DILocation(line: 717, column: 2, scope: !516)
!1936 = !DILocation(line: 717, column: 11, scope: !516)
!1937 = !DILocation(line: 717, column: 18, scope: !516)
!1938 = !DILocation(line: 717, column: 27, scope: !516)
!1939 = !DILocation(line: 718, column: 41, scope: !516)
!1940 = !DILocation(line: 718, column: 43, scope: !516)
!1941 = !DILocation(line: 718, column: 25, scope: !516)
!1942 = !DILocation(line: 718, column: 2, scope: !516)
!1943 = !DILocation(line: 718, column: 11, scope: !516)
!1944 = !DILocation(line: 718, column: 18, scope: !516)
!1945 = !DILocation(line: 718, column: 23, scope: !516)
!1946 = !DILocation(line: 720, column: 2, scope: !516)
!1947 = !DILocation(line: 721, column: 1, scope: !516)
!1948 = !DILocalVariable(name: "iso9660", arg: 1, scope: !517, file: !1, line: 613, type: !292)
!1949 = !DILocation(line: 613, column: 30, scope: !517)
!1950 = !DILocalVariable(name: "h", arg: 2, scope: !517, file: !1, line: 613, type: !488)
!1951 = !DILocation(line: 613, column: 60, scope: !517)
!1952 = !DILocation(line: 615, column: 8, scope: !517)
!1953 = !DILocation(line: 618, column: 6, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !517, file: !1, line: 618, column: 6)
!1955 = !DILocation(line: 618, column: 11, scope: !1954)
!1956 = !DILocation(line: 618, column: 6, scope: !517)
!1957 = !DILocation(line: 619, column: 3, scope: !1954)
!1958 = !DILocation(line: 622, column: 6, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !517, file: !1, line: 622, column: 6)
!1960 = !DILocation(line: 622, column: 11, scope: !1959)
!1961 = !DILocation(line: 622, column: 6, scope: !517)
!1962 = !DILocation(line: 623, column: 3, scope: !1959)
!1963 = !DILocation(line: 625, column: 2, scope: !517)
!1964 = !DILocation(line: 626, column: 1, scope: !517)
!1965 = !DILocalVariable(name: "iso9660", arg: 1, scope: !518, file: !1, line: 783, type: !292)
!1966 = !DILocation(line: 783, column: 23, scope: !518)
!1967 = !DILocalVariable(name: "h", arg: 2, scope: !518, file: !1, line: 783, type: !488)
!1968 = !DILocation(line: 783, column: 53, scope: !518)
!1969 = !DILocalVariable(name: "p", scope: !518, file: !1, line: 785, type: !488)
!1970 = !DILocation(line: 785, column: 23, scope: !518)
!1971 = !DILocalVariable(name: "logical_block_size", scope: !518, file: !1, line: 786, type: !38)
!1972 = !DILocation(line: 786, column: 10, scope: !518)
!1973 = !DILocalVariable(name: "volume_block", scope: !518, file: !1, line: 787, type: !409)
!1974 = !DILocation(line: 787, column: 10, scope: !518)
!1975 = !DILocalVariable(name: "location", scope: !518, file: !1, line: 788, type: !409)
!1976 = !DILocation(line: 788, column: 10, scope: !518)
!1977 = !DILocation(line: 790, column: 8, scope: !518)
!1978 = !DILocation(line: 793, column: 6, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !518, file: !1, line: 793, column: 6)
!1980 = !DILocation(line: 793, column: 25, scope: !1979)
!1981 = !DILocation(line: 793, column: 6, scope: !518)
!1982 = !DILocation(line: 794, column: 3, scope: !1979)
!1983 = !DILocation(line: 797, column: 6, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !518, file: !1, line: 797, column: 6)
!1985 = !DILocation(line: 797, column: 28, scope: !1984)
!1986 = !DILocation(line: 797, column: 6, scope: !518)
!1987 = !DILocation(line: 798, column: 3, scope: !1984)
!1988 = !DILocation(line: 801, column: 6, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !518, file: !1, line: 801, column: 6)
!1990 = !DILocation(line: 801, column: 30, scope: !1989)
!1991 = !DILocation(line: 801, column: 6, scope: !518)
!1992 = !DILocation(line: 802, column: 3, scope: !1989)
!1993 = !DILocation(line: 805, column: 14, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !518, file: !1, line: 805, column: 6)
!1995 = !DILocation(line: 805, column: 23, scope: !1994)
!1996 = !DILocation(line: 805, column: 7, scope: !1994)
!1997 = !DILocation(line: 805, column: 6, scope: !518)
!1998 = !DILocation(line: 806, column: 3, scope: !1994)
!1999 = !DILocation(line: 809, column: 14, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !518, file: !1, line: 809, column: 6)
!2001 = !DILocation(line: 809, column: 23, scope: !2000)
!2002 = !DILocation(line: 809, column: 7, scope: !2000)
!2003 = !DILocation(line: 809, column: 6, scope: !518)
!2004 = !DILocation(line: 810, column: 3, scope: !2000)
!2005 = !DILocation(line: 816, column: 22, scope: !518)
!2006 = !DILocation(line: 816, column: 24, scope: !518)
!2007 = !DILocation(line: 816, column: 6, scope: !518)
!2008 = !DILocation(line: 815, column: 21, scope: !518)
!2009 = !DILocation(line: 817, column: 6, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !518, file: !1, line: 817, column: 6)
!2011 = !DILocation(line: 817, column: 25, scope: !2010)
!2012 = !DILocation(line: 817, column: 6, scope: !518)
!2013 = !DILocation(line: 818, column: 3, scope: !2010)
!2014 = !DILocation(line: 821, column: 22, scope: !518)
!2015 = !DILocation(line: 821, column: 24, scope: !518)
!2016 = !DILocation(line: 821, column: 6, scope: !518)
!2017 = !DILocation(line: 820, column: 15, scope: !518)
!2018 = !DILocation(line: 822, column: 6, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !518, file: !1, line: 822, column: 6)
!2020 = !DILocation(line: 822, column: 19, scope: !2019)
!2021 = !DILocation(line: 822, column: 6, scope: !518)
!2022 = !DILocation(line: 823, column: 3, scope: !2019)
!2023 = !DILocation(line: 826, column: 6, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !518, file: !1, line: 826, column: 6)
!2025 = !DILocation(line: 826, column: 43, scope: !2024)
!2026 = !DILocation(line: 826, column: 6, scope: !518)
!2027 = !DILocation(line: 827, column: 3, scope: !2024)
!2028 = !DILocation(line: 832, column: 29, scope: !518)
!2029 = !DILocation(line: 832, column: 30, scope: !518)
!2030 = !DILocation(line: 832, column: 13, scope: !518)
!2031 = !DILocation(line: 832, column: 11, scope: !518)
!2032 = !DILocation(line: 833, column: 6, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !518, file: !1, line: 833, column: 6)
!2034 = !DILocation(line: 833, column: 15, scope: !2033)
!2035 = !DILocation(line: 833, column: 37, scope: !2033)
!2036 = !DILocation(line: 833, column: 40, scope: !2037)
!2037 = !DILexicalBlockFile(scope: !2033, file: !1, discriminator: 1)
!2038 = !DILocation(line: 833, column: 52, scope: !2037)
!2039 = !DILocation(line: 833, column: 49, scope: !2037)
!2040 = !DILocation(line: 833, column: 6, scope: !2037)
!2041 = !DILocation(line: 834, column: 3, scope: !2033)
!2042 = !DILocation(line: 839, column: 29, scope: !518)
!2043 = !DILocation(line: 839, column: 30, scope: !518)
!2044 = !DILocation(line: 839, column: 13, scope: !518)
!2045 = !DILocation(line: 839, column: 11, scope: !518)
!2046 = !DILocation(line: 840, column: 7, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !518, file: !1, line: 840, column: 6)
!2048 = !DILocation(line: 840, column: 16, scope: !2047)
!2049 = !DILocation(line: 840, column: 20, scope: !2047)
!2050 = !DILocation(line: 840, column: 23, scope: !2051)
!2051 = !DILexicalBlockFile(scope: !2047, file: !1, discriminator: 1)
!2052 = !DILocation(line: 840, column: 32, scope: !2051)
!2053 = !DILocation(line: 841, column: 6, scope: !2047)
!2054 = !DILocation(line: 841, column: 9, scope: !2051)
!2055 = !DILocation(line: 841, column: 21, scope: !2051)
!2056 = !DILocation(line: 841, column: 18, scope: !2051)
!2057 = !DILocation(line: 840, column: 6, scope: !2058)
!2058 = !DILexicalBlockFile(scope: !518, file: !1, discriminator: 2)
!2059 = !DILocation(line: 842, column: 3, scope: !2047)
!2060 = !DILocation(line: 845, column: 14, scope: !2061)
!2061 = distinct !DILexicalBlock(scope: !518, file: !1, line: 845, column: 6)
!2062 = !DILocation(line: 845, column: 23, scope: !2061)
!2063 = !DILocation(line: 845, column: 7, scope: !2061)
!2064 = !DILocation(line: 845, column: 6, scope: !518)
!2065 = !DILocation(line: 846, column: 3, scope: !2061)
!2066 = !DILocation(line: 849, column: 14, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !518, file: !1, line: 849, column: 6)
!2068 = !DILocation(line: 849, column: 23, scope: !2067)
!2069 = !DILocation(line: 849, column: 7, scope: !2067)
!2070 = !DILocation(line: 849, column: 6, scope: !518)
!2071 = !DILocation(line: 850, column: 3, scope: !2067)
!2072 = !DILocation(line: 853, column: 6, scope: !518)
!2073 = !DILocation(line: 853, column: 8, scope: !518)
!2074 = !DILocation(line: 853, column: 4, scope: !518)
!2075 = !DILocation(line: 854, column: 6, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !518, file: !1, line: 854, column: 6)
!2077 = !DILocation(line: 854, column: 26, scope: !2076)
!2078 = !DILocation(line: 854, column: 6, scope: !518)
!2079 = !DILocation(line: 855, column: 3, scope: !2076)
!2080 = !DILocation(line: 857, column: 2, scope: !518)
!2081 = !DILocation(line: 858, column: 1, scope: !518)
!2082 = !DILocalVariable(name: "iso9660", arg: 1, scope: !519, file: !1, line: 724, type: !292)
!2083 = !DILocation(line: 724, column: 23, scope: !519)
!2084 = !DILocalVariable(name: "h", arg: 2, scope: !519, file: !1, line: 724, type: !488)
!2085 = !DILocation(line: 724, column: 53, scope: !519)
!2086 = !DILocalVariable(name: "p", scope: !519, file: !1, line: 726, type: !488)
!2087 = !DILocation(line: 726, column: 23, scope: !519)
!2088 = !DILocalVariable(name: "logical_block_size", scope: !519, file: !1, line: 727, type: !38)
!2089 = !DILocation(line: 727, column: 10, scope: !519)
!2090 = !DILocalVariable(name: "volume_block", scope: !519, file: !1, line: 728, type: !409)
!2091 = !DILocation(line: 728, column: 10, scope: !519)
!2092 = !DILocalVariable(name: "location", scope: !519, file: !1, line: 729, type: !409)
!2093 = !DILocation(line: 729, column: 10, scope: !519)
!2094 = !DILocation(line: 731, column: 8, scope: !519)
!2095 = !DILocation(line: 734, column: 6, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !519, file: !1, line: 734, column: 6)
!2097 = !DILocation(line: 734, column: 25, scope: !2096)
!2098 = !DILocation(line: 734, column: 6, scope: !519)
!2099 = !DILocation(line: 735, column: 3, scope: !2096)
!2100 = !DILocation(line: 738, column: 14, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !519, file: !1, line: 738, column: 6)
!2102 = !DILocation(line: 738, column: 23, scope: !2101)
!2103 = !DILocation(line: 738, column: 7, scope: !2101)
!2104 = !DILocation(line: 738, column: 6, scope: !519)
!2105 = !DILocation(line: 739, column: 3, scope: !2101)
!2106 = !DILocation(line: 740, column: 14, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !519, file: !1, line: 740, column: 6)
!2108 = !DILocation(line: 740, column: 23, scope: !2107)
!2109 = !DILocation(line: 740, column: 7, scope: !2107)
!2110 = !DILocation(line: 740, column: 6, scope: !519)
!2111 = !DILocation(line: 741, column: 3, scope: !2107)
!2112 = !DILocation(line: 742, column: 14, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !519, file: !1, line: 742, column: 6)
!2114 = !DILocation(line: 742, column: 23, scope: !2113)
!2115 = !DILocation(line: 742, column: 7, scope: !2113)
!2116 = !DILocation(line: 742, column: 6, scope: !519)
!2117 = !DILocation(line: 743, column: 3, scope: !2113)
!2118 = !DILocation(line: 746, column: 6, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !519, file: !1, line: 746, column: 6)
!2120 = !DILocation(line: 746, column: 43, scope: !2119)
!2121 = !DILocation(line: 746, column: 6, scope: !519)
!2122 = !DILocation(line: 747, column: 3, scope: !2119)
!2123 = !DILocation(line: 750, column: 22, scope: !519)
!2124 = !DILocation(line: 750, column: 24, scope: !519)
!2125 = !DILocation(line: 750, column: 6, scope: !519)
!2126 = !DILocation(line: 749, column: 21, scope: !519)
!2127 = !DILocation(line: 751, column: 6, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !519, file: !1, line: 751, column: 6)
!2129 = !DILocation(line: 751, column: 25, scope: !2128)
!2130 = !DILocation(line: 751, column: 6, scope: !519)
!2131 = !DILocation(line: 752, column: 3, scope: !2128)
!2132 = !DILocation(line: 754, column: 33, scope: !519)
!2133 = !DILocation(line: 754, column: 35, scope: !519)
!2134 = !DILocation(line: 754, column: 17, scope: !519)
!2135 = !DILocation(line: 754, column: 15, scope: !519)
!2136 = !DILocation(line: 755, column: 6, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !519, file: !1, line: 755, column: 6)
!2138 = !DILocation(line: 755, column: 19, scope: !2137)
!2139 = !DILocation(line: 755, column: 6, scope: !519)
!2140 = !DILocation(line: 756, column: 3, scope: !2137)
!2141 = !DILocation(line: 761, column: 29, scope: !519)
!2142 = !DILocation(line: 761, column: 30, scope: !519)
!2143 = !DILocation(line: 761, column: 13, scope: !519)
!2144 = !DILocation(line: 761, column: 11, scope: !519)
!2145 = !DILocation(line: 762, column: 6, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !519, file: !1, line: 762, column: 6)
!2147 = !DILocation(line: 762, column: 15, scope: !2146)
!2148 = !DILocation(line: 762, column: 37, scope: !2146)
!2149 = !DILocation(line: 762, column: 40, scope: !2150)
!2150 = !DILexicalBlockFile(scope: !2146, file: !1, discriminator: 1)
!2151 = !DILocation(line: 762, column: 52, scope: !2150)
!2152 = !DILocation(line: 762, column: 49, scope: !2150)
!2153 = !DILocation(line: 762, column: 6, scope: !2150)
!2154 = !DILocation(line: 763, column: 3, scope: !2146)
!2155 = !DILocation(line: 769, column: 29, scope: !519)
!2156 = !DILocation(line: 769, column: 30, scope: !519)
!2157 = !DILocation(line: 769, column: 13, scope: !519)
!2158 = !DILocation(line: 769, column: 11, scope: !519)
!2159 = !DILocation(line: 770, column: 7, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !519, file: !1, line: 770, column: 6)
!2161 = !DILocation(line: 770, column: 16, scope: !2160)
!2162 = !DILocation(line: 770, column: 20, scope: !2160)
!2163 = !DILocation(line: 770, column: 23, scope: !2164)
!2164 = !DILexicalBlockFile(scope: !2160, file: !1, discriminator: 1)
!2165 = !DILocation(line: 770, column: 32, scope: !2164)
!2166 = !DILocation(line: 771, column: 6, scope: !2160)
!2167 = !DILocation(line: 771, column: 9, scope: !2164)
!2168 = !DILocation(line: 771, column: 21, scope: !2164)
!2169 = !DILocation(line: 771, column: 18, scope: !2164)
!2170 = !DILocation(line: 770, column: 6, scope: !2171)
!2171 = !DILexicalBlockFile(scope: !519, file: !1, discriminator: 2)
!2172 = !DILocation(line: 772, column: 3, scope: !2160)
!2173 = !DILocation(line: 775, column: 6, scope: !519)
!2174 = !DILocation(line: 775, column: 8, scope: !519)
!2175 = !DILocation(line: 775, column: 4, scope: !519)
!2176 = !DILocation(line: 776, column: 6, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !519, file: !1, line: 776, column: 6)
!2178 = !DILocation(line: 776, column: 26, scope: !2177)
!2179 = !DILocation(line: 776, column: 6, scope: !519)
!2180 = !DILocation(line: 777, column: 3, scope: !2177)
!2181 = !DILocation(line: 779, column: 2, scope: !519)
!2182 = !DILocation(line: 780, column: 1, scope: !519)
!2183 = !DILocalVariable(name: "iso9660", arg: 1, scope: !520, file: !1, line: 629, type: !292)
!2184 = !DILocation(line: 629, column: 35, scope: !520)
!2185 = !DILocalVariable(name: "h", arg: 2, scope: !520, file: !1, line: 629, type: !488)
!2186 = !DILocation(line: 629, column: 65, scope: !520)
!2187 = !DILocalVariable(name: "location", scope: !520, file: !1, line: 631, type: !409)
!2188 = !DILocation(line: 631, column: 10, scope: !520)
!2189 = !DILocation(line: 634, column: 6, scope: !2190)
!2190 = distinct !DILexicalBlock(scope: !520, file: !1, line: 634, column: 6)
!2191 = !DILocation(line: 634, column: 11, scope: !2190)
!2192 = !DILocation(line: 634, column: 6, scope: !520)
!2193 = !DILocation(line: 635, column: 3, scope: !2190)
!2194 = !DILocation(line: 638, column: 6, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !520, file: !1, line: 638, column: 6)
!2196 = !DILocation(line: 638, column: 11, scope: !2195)
!2197 = !DILocation(line: 638, column: 6, scope: !520)
!2198 = !DILocation(line: 639, column: 3, scope: !2195)
!2199 = !DILocation(line: 641, column: 6, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !520, file: !1, line: 641, column: 6)
!2201 = !DILocation(line: 641, column: 11, scope: !2200)
!2202 = !DILocation(line: 641, column: 6, scope: !520)
!2203 = !DILocation(line: 642, column: 3, scope: !2200)
!2204 = !DILocation(line: 644, column: 29, scope: !520)
!2205 = !DILocation(line: 644, column: 31, scope: !520)
!2206 = !DILocation(line: 644, column: 13, scope: !520)
!2207 = !DILocation(line: 644, column: 11, scope: !520)
!2208 = !DILocation(line: 645, column: 6, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !520, file: !1, line: 645, column: 6)
!2210 = !DILocation(line: 645, column: 15, scope: !2209)
!2211 = !DILocation(line: 645, column: 36, scope: !2209)
!2212 = !DILocation(line: 646, column: 6, scope: !2209)
!2213 = !DILocation(line: 646, column: 18, scope: !2209)
!2214 = !DILocation(line: 646, column: 27, scope: !2209)
!2215 = !DILocation(line: 646, column: 15, scope: !2209)
!2216 = !DILocation(line: 645, column: 6, scope: !2217)
!2217 = !DILexicalBlockFile(scope: !520, file: !1, discriminator: 1)
!2218 = !DILocation(line: 647, column: 3, scope: !2209)
!2219 = !DILocation(line: 648, column: 16, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !520, file: !1, line: 648, column: 6)
!2221 = !DILocation(line: 648, column: 44, scope: !2220)
!2222 = !DILocation(line: 648, column: 46, scope: !2220)
!2223 = !DILocation(line: 648, column: 28, scope: !2220)
!2224 = !DILocation(line: 648, column: 25, scope: !2220)
!2225 = !DILocation(line: 648, column: 6, scope: !520)
!2226 = !DILocation(line: 649, column: 3, scope: !2220)
!2227 = !DILocation(line: 651, column: 2, scope: !520)
!2228 = !DILocation(line: 652, column: 1, scope: !520)
!2229 = !DILocalVariable(name: "iso9660", arg: 1, scope: !521, file: !1, line: 655, type: !292)
!2230 = !DILocation(line: 655, column: 35, scope: !521)
!2231 = !DILocalVariable(name: "h", arg: 2, scope: !521, file: !1, line: 655, type: !488)
!2232 = !DILocation(line: 655, column: 65, scope: !521)
!2233 = !DILocation(line: 657, column: 8, scope: !521)
!2234 = !DILocation(line: 660, column: 6, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !521, file: !1, line: 660, column: 6)
!2236 = !DILocation(line: 660, column: 11, scope: !2235)
!2237 = !DILocation(line: 660, column: 6, scope: !521)
!2238 = !DILocation(line: 661, column: 3, scope: !2235)
!2239 = !DILocation(line: 664, column: 6, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !521, file: !1, line: 664, column: 6)
!2241 = !DILocation(line: 664, column: 11, scope: !2240)
!2242 = !DILocation(line: 664, column: 6, scope: !521)
!2243 = !DILocation(line: 665, column: 3, scope: !2240)
!2244 = !DILocation(line: 668, column: 14, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !521, file: !1, line: 668, column: 6)
!2246 = !DILocation(line: 668, column: 23, scope: !2245)
!2247 = !DILocation(line: 668, column: 7, scope: !2245)
!2248 = !DILocation(line: 668, column: 6, scope: !521)
!2249 = !DILocation(line: 669, column: 3, scope: !2245)
!2250 = !DILocation(line: 671, column: 2, scope: !521)
!2251 = !DILocation(line: 672, column: 1, scope: !521)
!2252 = !DILocalVariable(name: "iso9660", arg: 1, scope: !503, file: !1, line: 596, type: !292)
!2253 = !DILocation(line: 596, column: 24, scope: !503)
!2254 = !DILocalVariable(name: "h", arg: 2, scope: !503, file: !1, line: 596, type: !488)
!2255 = !DILocation(line: 596, column: 54, scope: !503)
!2256 = !DILocalVariable(name: "offset", arg: 3, scope: !503, file: !1, line: 596, type: !13)
!2257 = !DILocation(line: 596, column: 66, scope: !503)
!2258 = !DILocalVariable(name: "bytes", arg: 4, scope: !503, file: !1, line: 597, type: !13)
!2259 = !DILocation(line: 597, column: 10, scope: !503)
!2260 = !DILocation(line: 600, column: 2, scope: !503)
!2261 = !DILocation(line: 600, column: 9, scope: !2262)
!2262 = !DILexicalBlockFile(scope: !503, file: !1, discriminator: 1)
!2263 = !DILocation(line: 600, column: 15, scope: !2262)
!2264 = !DILocation(line: 600, column: 2, scope: !2262)
!2265 = !DILocation(line: 601, column: 15, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !1, line: 601, column: 7)
!2267 = distinct !DILexicalBlock(scope: !503, file: !1, line: 600, column: 41)
!2268 = !DILocation(line: 601, column: 24, scope: !2266)
!2269 = !DILocation(line: 601, column: 30, scope: !2266)
!2270 = !DILocation(line: 601, column: 34, scope: !2266)
!2271 = !DILocation(line: 601, column: 32, scope: !2266)
!2272 = !DILocation(line: 601, column: 8, scope: !2266)
!2273 = !DILocation(line: 601, column: 7, scope: !2267)
!2274 = !DILocation(line: 602, column: 4, scope: !2266)
!2275 = !DILocation(line: 603, column: 10, scope: !2267)
!2276 = !DILocation(line: 604, column: 9, scope: !2267)
!2277 = !DILocation(line: 600, column: 2, scope: !2278)
!2278 = !DILexicalBlockFile(scope: !503, file: !1, discriminator: 2)
!2279 = !DILocation(line: 606, column: 6, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !503, file: !1, line: 606, column: 6)
!2281 = !DILocation(line: 606, column: 6, scope: !503)
!2282 = !DILocation(line: 607, column: 17, scope: !2280)
!2283 = !DILocation(line: 607, column: 26, scope: !2280)
!2284 = !DILocation(line: 607, column: 32, scope: !2280)
!2285 = !DILocation(line: 607, column: 36, scope: !2280)
!2286 = !DILocation(line: 607, column: 34, scope: !2280)
!2287 = !DILocation(line: 607, column: 44, scope: !2280)
!2288 = !DILocation(line: 607, column: 10, scope: !2280)
!2289 = !DILocation(line: 607, column: 51, scope: !2280)
!2290 = !DILocation(line: 607, column: 3, scope: !2280)
!2291 = !DILocation(line: 609, column: 3, scope: !2280)
!2292 = !DILocation(line: 610, column: 1, scope: !503)
!2293 = !DILocalVariable(name: "pp", arg: 1, scope: !506, file: !507, line: 101, type: !43)
!2294 = !DILocation(line: 101, column: 29, scope: !506)
!2295 = !DILocalVariable(name: "p", scope: !506, file: !507, line: 103, type: !488)
!2296 = !DILocation(line: 103, column: 23, scope: !506)
!2297 = !DILocation(line: 103, column: 50, scope: !506)
!2298 = !DILocalVariable(name: "p1", scope: !506, file: !507, line: 108, type: !13)
!2299 = !DILocation(line: 108, column: 15, scope: !506)
!2300 = !DILocation(line: 108, column: 20, scope: !506)
!2301 = !DILocalVariable(name: "p0", scope: !506, file: !507, line: 109, type: !13)
!2302 = !DILocation(line: 109, column: 15, scope: !506)
!2303 = !DILocation(line: 109, column: 20, scope: !506)
!2304 = !DILocation(line: 111, column: 11, scope: !506)
!2305 = !DILocation(line: 111, column: 14, scope: !506)
!2306 = !DILocation(line: 111, column: 22, scope: !506)
!2307 = !DILocation(line: 111, column: 20, scope: !506)
!2308 = !DILocation(line: 111, column: 9, scope: !506)
!2309 = !DILocation(line: 111, column: 2, scope: !506)
!2310 = !DILocalVariable(name: "pp", arg: 1, scope: !512, file: !507, line: 115, type: !43)
!2311 = !DILocation(line: 115, column: 29, scope: !512)
!2312 = !DILocalVariable(name: "p", scope: !512, file: !507, line: 117, type: !488)
!2313 = !DILocation(line: 117, column: 23, scope: !512)
!2314 = !DILocation(line: 117, column: 50, scope: !512)
!2315 = !DILocalVariable(name: "p3", scope: !512, file: !507, line: 122, type: !13)
!2316 = !DILocation(line: 122, column: 15, scope: !512)
!2317 = !DILocation(line: 122, column: 20, scope: !512)
!2318 = !DILocalVariable(name: "p2", scope: !512, file: !507, line: 123, type: !13)
!2319 = !DILocation(line: 123, column: 15, scope: !512)
!2320 = !DILocation(line: 123, column: 20, scope: !512)
!2321 = !DILocalVariable(name: "p1", scope: !512, file: !507, line: 124, type: !13)
!2322 = !DILocation(line: 124, column: 15, scope: !512)
!2323 = !DILocation(line: 124, column: 20, scope: !512)
!2324 = !DILocalVariable(name: "p0", scope: !512, file: !507, line: 125, type: !13)
!2325 = !DILocation(line: 125, column: 15, scope: !512)
!2326 = !DILocation(line: 125, column: 20, scope: !512)
!2327 = !DILocation(line: 127, column: 11, scope: !512)
!2328 = !DILocation(line: 127, column: 14, scope: !512)
!2329 = !DILocation(line: 127, column: 24, scope: !512)
!2330 = !DILocation(line: 127, column: 27, scope: !512)
!2331 = !DILocation(line: 127, column: 21, scope: !512)
!2332 = !DILocation(line: 127, column: 37, scope: !512)
!2333 = !DILocation(line: 127, column: 40, scope: !512)
!2334 = !DILocation(line: 127, column: 34, scope: !512)
!2335 = !DILocation(line: 127, column: 48, scope: !512)
!2336 = !DILocation(line: 127, column: 46, scope: !512)
!2337 = !DILocation(line: 127, column: 2, scope: !512)
!2338 = !DILocalVariable(name: "pp", arg: 1, scope: !515, file: !507, line: 77, type: !43)
!2339 = !DILocation(line: 77, column: 29, scope: !515)
!2340 = !DILocalVariable(name: "p", scope: !515, file: !507, line: 79, type: !488)
!2341 = !DILocation(line: 79, column: 23, scope: !515)
!2342 = !DILocation(line: 79, column: 50, scope: !515)
!2343 = !DILocalVariable(name: "p3", scope: !515, file: !507, line: 84, type: !13)
!2344 = !DILocation(line: 84, column: 15, scope: !515)
!2345 = !DILocation(line: 84, column: 20, scope: !515)
!2346 = !DILocalVariable(name: "p2", scope: !515, file: !507, line: 85, type: !13)
!2347 = !DILocation(line: 85, column: 15, scope: !515)
!2348 = !DILocation(line: 85, column: 20, scope: !515)
!2349 = !DILocalVariable(name: "p1", scope: !515, file: !507, line: 86, type: !13)
!2350 = !DILocation(line: 86, column: 15, scope: !515)
!2351 = !DILocation(line: 86, column: 20, scope: !515)
!2352 = !DILocalVariable(name: "p0", scope: !515, file: !507, line: 87, type: !13)
!2353 = !DILocation(line: 87, column: 15, scope: !515)
!2354 = !DILocation(line: 87, column: 20, scope: !515)
!2355 = !DILocation(line: 89, column: 11, scope: !515)
!2356 = !DILocation(line: 89, column: 14, scope: !515)
!2357 = !DILocation(line: 89, column: 24, scope: !515)
!2358 = !DILocation(line: 89, column: 27, scope: !515)
!2359 = !DILocation(line: 89, column: 21, scope: !515)
!2360 = !DILocation(line: 89, column: 37, scope: !515)
!2361 = !DILocation(line: 89, column: 40, scope: !515)
!2362 = !DILocation(line: 89, column: 34, scope: !515)
!2363 = !DILocation(line: 89, column: 48, scope: !515)
!2364 = !DILocation(line: 89, column: 46, scope: !515)
!2365 = !DILocation(line: 89, column: 2, scope: !515)
!2366 = !DILocalVariable(name: "a", arg: 1, scope: !524, file: !1, line: 1078, type: !4)
!2367 = !DILocation(line: 1078, column: 36, scope: !524)
!2368 = !DILocalVariable(name: "iso9660", arg: 2, scope: !524, file: !1, line: 1078, type: !292)
!2369 = !DILocation(line: 1078, column: 55, scope: !524)
!2370 = !DILocalVariable(name: "file", scope: !524, file: !1, line: 1080, type: !305)
!2371 = !DILocation(line: 1080, column: 20, scope: !524)
!2372 = !DILocalVariable(name: "skipsize", scope: !524, file: !1, line: 1081, type: !52)
!2373 = !DILocation(line: 1081, column: 10, scope: !524)
!2374 = !DILocalVariable(name: "vd", scope: !524, file: !1, line: 1082, type: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64, align: 64)
!2376 = !DILocation(line: 1082, column: 13, scope: !524)
!2377 = !DILocalVariable(name: "block", scope: !524, file: !1, line: 1083, type: !43)
!2378 = !DILocation(line: 1083, column: 14, scope: !524)
!2379 = !DILocalVariable(name: "seenJoliet", scope: !524, file: !1, line: 1084, type: !82)
!2380 = !DILocation(line: 1084, column: 7, scope: !524)
!2381 = !DILocation(line: 1086, column: 9, scope: !524)
!2382 = !DILocation(line: 1086, column: 18, scope: !524)
!2383 = !DILocation(line: 1086, column: 5, scope: !524)
!2384 = !DILocation(line: 1087, column: 7, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1087, column: 6)
!2386 = !DILocation(line: 1087, column: 16, scope: !2385)
!2387 = !DILocation(line: 1087, column: 6, scope: !524)
!2388 = !DILocation(line: 1088, column: 3, scope: !2385)
!2389 = !DILocation(line: 1088, column: 12, scope: !2385)
!2390 = !DILocation(line: 1088, column: 23, scope: !2385)
!2391 = !DILocation(line: 1089, column: 6, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1089, column: 6)
!2393 = !DILocation(line: 1089, column: 15, scope: !2392)
!2394 = !DILocation(line: 1089, column: 26, scope: !2392)
!2395 = !DILocation(line: 1090, column: 3, scope: !2392)
!2396 = !DILocation(line: 1090, column: 7, scope: !2392)
!2397 = !DILocation(line: 1090, column: 18, scope: !2392)
!2398 = !DILocation(line: 1090, column: 27, scope: !2392)
!2399 = !DILocation(line: 1090, column: 34, scope: !2392)
!2400 = !DILocation(line: 1090, column: 16, scope: !2392)
!2401 = !DILocation(line: 1089, column: 6, scope: !2402)
!2402 = !DILexicalBlockFile(scope: !524, file: !1, discriminator: 1)
!2403 = !DILocation(line: 1092, column: 10, scope: !2392)
!2404 = !DILocation(line: 1092, column: 19, scope: !2392)
!2405 = !DILocation(line: 1092, column: 6, scope: !2392)
!2406 = !DILocation(line: 1092, column: 3, scope: !2392)
!2407 = !DILocation(line: 1094, column: 43, scope: !524)
!2408 = !DILocation(line: 1094, column: 47, scope: !524)
!2409 = !DILocation(line: 1094, column: 34, scope: !524)
!2410 = !DILocation(line: 1094, column: 32, scope: !524)
!2411 = !DILocation(line: 1094, column: 11, scope: !524)
!2412 = !DILocation(line: 1095, column: 36, scope: !524)
!2413 = !DILocation(line: 1095, column: 39, scope: !524)
!2414 = !DILocation(line: 1095, column: 13, scope: !524)
!2415 = !DILocation(line: 1095, column: 11, scope: !524)
!2416 = !DILocation(line: 1096, column: 6, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1096, column: 6)
!2418 = !DILocation(line: 1096, column: 15, scope: !2417)
!2419 = !DILocation(line: 1096, column: 6, scope: !524)
!2420 = !DILocation(line: 1097, column: 16, scope: !2417)
!2421 = !DILocation(line: 1097, column: 11, scope: !2417)
!2422 = !DILocation(line: 1097, column: 3, scope: !2417)
!2423 = !DILocation(line: 1098, column: 30, scope: !524)
!2424 = !DILocation(line: 1098, column: 2, scope: !524)
!2425 = !DILocation(line: 1098, column: 11, scope: !524)
!2426 = !DILocation(line: 1098, column: 28, scope: !524)
!2427 = !DILocation(line: 1100, column: 31, scope: !524)
!2428 = !DILocation(line: 1100, column: 34, scope: !524)
!2429 = !DILocation(line: 1100, column: 38, scope: !524)
!2430 = !DILocation(line: 1100, column: 10, scope: !524)
!2431 = !DILocation(line: 1100, column: 8, scope: !524)
!2432 = !DILocation(line: 1101, column: 6, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1101, column: 6)
!2434 = !DILocation(line: 1101, column: 12, scope: !2433)
!2435 = !DILocation(line: 1101, column: 6, scope: !524)
!2436 = !DILocation(line: 1102, column: 22, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2433, file: !1, line: 1101, column: 21)
!2438 = !DILocation(line: 1102, column: 25, scope: !2437)
!2439 = !DILocation(line: 1102, column: 3, scope: !2437)
!2440 = !DILocation(line: 1105, column: 3, scope: !2437)
!2441 = !DILocation(line: 1113, column: 15, scope: !524)
!2442 = !DILocation(line: 1113, column: 24, scope: !524)
!2443 = !DILocation(line: 1113, column: 13, scope: !524)
!2444 = !DILocation(line: 1114, column: 2, scope: !524)
!2445 = !DILocation(line: 1114, column: 11, scope: !524)
!2446 = !DILocation(line: 1114, column: 22, scope: !524)
!2447 = !DILocation(line: 1115, column: 25, scope: !524)
!2448 = !DILocation(line: 1115, column: 34, scope: !524)
!2449 = !DILocation(line: 1115, column: 9, scope: !524)
!2450 = !DILocation(line: 1115, column: 7, scope: !524)
!2451 = !DILocation(line: 1116, column: 6, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1116, column: 6)
!2453 = !DILocation(line: 1116, column: 11, scope: !2452)
!2454 = !DILocation(line: 1116, column: 6, scope: !524)
!2455 = !DILocation(line: 1117, column: 3, scope: !2452)
!2456 = !DILocation(line: 1118, column: 24, scope: !524)
!2457 = !DILocation(line: 1118, column: 2, scope: !524)
!2458 = !DILocation(line: 1118, column: 11, scope: !524)
!2459 = !DILocation(line: 1118, column: 22, scope: !524)
!2460 = !DILocation(line: 1124, column: 6, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1124, column: 6)
!2462 = !DILocation(line: 1124, column: 14, scope: !2461)
!2463 = !DILocation(line: 1124, column: 23, scope: !2461)
!2464 = !DILocation(line: 1124, column: 9, scope: !2461)
!2465 = !DILocation(line: 1124, column: 32, scope: !2461)
!2466 = !DILocation(line: 1124, column: 35, scope: !2467)
!2467 = !DILexicalBlockFile(scope: !2461, file: !1, discriminator: 1)
!2468 = !DILocation(line: 1124, column: 44, scope: !2467)
!2469 = !DILocation(line: 1125, column: 6, scope: !2461)
!2470 = !DILocation(line: 1125, column: 9, scope: !2467)
!2471 = !DILocation(line: 1125, column: 18, scope: !2467)
!2472 = !DILocation(line: 1124, column: 6, scope: !2473)
!2473 = !DILexicalBlockFile(scope: !524, file: !1, discriminator: 2)
!2474 = !DILocation(line: 1126, column: 3, scope: !2461)
!2475 = !DILocation(line: 1126, column: 12, scope: !2461)
!2476 = !DILocation(line: 1126, column: 23, scope: !2461)
!2477 = !DILocation(line: 1128, column: 6, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1128, column: 6)
!2479 = !DILocation(line: 1128, column: 14, scope: !2478)
!2480 = !DILocation(line: 1128, column: 23, scope: !2478)
!2481 = !DILocation(line: 1128, column: 9, scope: !2478)
!2482 = !DILocation(line: 1128, column: 32, scope: !2478)
!2483 = !DILocation(line: 1128, column: 36, scope: !2484)
!2484 = !DILexicalBlockFile(scope: !2478, file: !1, discriminator: 1)
!2485 = !DILocation(line: 1128, column: 45, scope: !2484)
!2486 = !DILocation(line: 1129, column: 6, scope: !2478)
!2487 = !DILocation(line: 1129, column: 9, scope: !2484)
!2488 = !DILocation(line: 1129, column: 18, scope: !2484)
!2489 = !DILocation(line: 1128, column: 6, scope: !2473)
!2490 = !DILocation(line: 1131, column: 10, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2478, file: !1, line: 1129, column: 30)
!2492 = !DILocation(line: 1131, column: 19, scope: !2491)
!2493 = !DILocation(line: 1131, column: 6, scope: !2491)
!2494 = !DILocation(line: 1132, column: 44, scope: !2491)
!2495 = !DILocation(line: 1132, column: 48, scope: !2491)
!2496 = !DILocation(line: 1132, column: 35, scope: !2491)
!2497 = !DILocation(line: 1132, column: 33, scope: !2491)
!2498 = !DILocation(line: 1132, column: 12, scope: !2491)
!2499 = !DILocation(line: 1133, column: 15, scope: !2491)
!2500 = !DILocation(line: 1133, column: 24, scope: !2491)
!2501 = !DILocation(line: 1133, column: 12, scope: !2491)
!2502 = !DILocation(line: 1134, column: 37, scope: !2491)
!2503 = !DILocation(line: 1134, column: 40, scope: !2491)
!2504 = !DILocation(line: 1134, column: 14, scope: !2491)
!2505 = !DILocation(line: 1134, column: 12, scope: !2491)
!2506 = !DILocation(line: 1135, column: 7, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2491, file: !1, line: 1135, column: 7)
!2508 = !DILocation(line: 1135, column: 16, scope: !2507)
!2509 = !DILocation(line: 1135, column: 7, scope: !2491)
!2510 = !DILocation(line: 1136, column: 17, scope: !2507)
!2511 = !DILocation(line: 1136, column: 12, scope: !2507)
!2512 = !DILocation(line: 1136, column: 4, scope: !2507)
!2513 = !DILocation(line: 1137, column: 32, scope: !2491)
!2514 = !DILocation(line: 1137, column: 3, scope: !2491)
!2515 = !DILocation(line: 1137, column: 12, scope: !2491)
!2516 = !DILocation(line: 1137, column: 29, scope: !2491)
!2517 = !DILocation(line: 1139, column: 32, scope: !2491)
!2518 = !DILocation(line: 1139, column: 35, scope: !2491)
!2519 = !DILocation(line: 1139, column: 39, scope: !2491)
!2520 = !DILocation(line: 1139, column: 11, scope: !2491)
!2521 = !DILocation(line: 1139, column: 9, scope: !2491)
!2522 = !DILocation(line: 1140, column: 7, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2491, file: !1, line: 1140, column: 7)
!2524 = !DILocation(line: 1140, column: 13, scope: !2523)
!2525 = !DILocation(line: 1140, column: 7, scope: !2491)
!2526 = !DILocation(line: 1141, column: 23, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 1140, column: 22)
!2528 = !DILocation(line: 1141, column: 26, scope: !2527)
!2529 = !DILocation(line: 1141, column: 4, scope: !2527)
!2530 = !DILocation(line: 1144, column: 4, scope: !2527)
!2531 = !DILocation(line: 1146, column: 3, scope: !2491)
!2532 = !DILocation(line: 1146, column: 12, scope: !2491)
!2533 = !DILocation(line: 1146, column: 23, scope: !2491)
!2534 = !DILocation(line: 1147, column: 26, scope: !2491)
!2535 = !DILocation(line: 1147, column: 35, scope: !2491)
!2536 = !DILocation(line: 1147, column: 10, scope: !2491)
!2537 = !DILocation(line: 1147, column: 8, scope: !2491)
!2538 = !DILocation(line: 1148, column: 7, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2491, file: !1, line: 1148, column: 7)
!2540 = !DILocation(line: 1148, column: 12, scope: !2539)
!2541 = !DILocation(line: 1148, column: 7, scope: !2491)
!2542 = !DILocation(line: 1149, column: 4, scope: !2539)
!2543 = !DILocation(line: 1150, column: 25, scope: !2491)
!2544 = !DILocation(line: 1150, column: 3, scope: !2491)
!2545 = !DILocation(line: 1150, column: 12, scope: !2491)
!2546 = !DILocation(line: 1150, column: 23, scope: !2491)
!2547 = !DILocation(line: 1151, column: 2, scope: !2491)
!2548 = !DILocation(line: 1154, column: 6, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1154, column: 6)
!2550 = !DILocation(line: 1154, column: 34, scope: !2549)
!2551 = !DILocation(line: 1154, column: 6, scope: !524)
!2552 = !DILocation(line: 1155, column: 3, scope: !2549)
!2553 = !DILocation(line: 1156, column: 6, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !524, file: !1, line: 1156, column: 6)
!2555 = !DILocation(line: 1156, column: 15, scope: !2554)
!2556 = !DILocation(line: 1156, column: 6, scope: !524)
!2557 = !DILocation(line: 1157, column: 3, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2554, file: !1, line: 1156, column: 30)
!2559 = !DILocation(line: 1157, column: 6, scope: !2558)
!2560 = !DILocation(line: 1157, column: 14, scope: !2558)
!2561 = !DILocation(line: 1157, column: 29, scope: !2558)
!2562 = !DILocation(line: 1158, column: 3, scope: !2558)
!2563 = !DILocation(line: 1158, column: 6, scope: !2558)
!2564 = !DILocation(line: 1158, column: 14, scope: !2558)
!2565 = !DILocation(line: 1158, column: 34, scope: !2558)
!2566 = !DILocation(line: 1160, column: 2, scope: !2558)
!2567 = !DILocation(line: 1162, column: 2, scope: !524)
!2568 = !DILocation(line: 1163, column: 1, scope: !524)
!2569 = !DILocalVariable(name: "a", arg: 1, scope: !573, file: !1, line: 2672, type: !4)
!2570 = !DILocation(line: 2672, column: 38, scope: !573)
!2571 = !DILocalVariable(name: "iso9660", arg: 2, scope: !573, file: !1, line: 2672, type: !292)
!2572 = !DILocation(line: 2672, column: 57, scope: !573)
!2573 = !DILocalVariable(name: "pfile", arg: 3, scope: !573, file: !1, line: 2673, type: !374)
!2574 = !DILocation(line: 2673, column: 24, scope: !573)
!2575 = !DILocalVariable(name: "file", scope: !573, file: !1, line: 2675, type: !305)
!2576 = !DILocation(line: 2675, column: 20, scope: !573)
!2577 = !DILocalVariable(name: "r", scope: !573, file: !1, line: 2676, type: !23)
!2578 = !DILocation(line: 2676, column: 6, scope: !573)
!2579 = !DILocation(line: 2678, column: 23, scope: !573)
!2580 = !DILocation(line: 2678, column: 26, scope: !573)
!2581 = !DILocation(line: 2678, column: 35, scope: !573)
!2582 = !DILocation(line: 2678, column: 6, scope: !573)
!2583 = !DILocation(line: 2678, column: 4, scope: !573)
!2584 = !DILocation(line: 2679, column: 6, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !573, file: !1, line: 2679, column: 6)
!2586 = !DILocation(line: 2679, column: 8, scope: !2585)
!2587 = !DILocation(line: 2679, column: 6, scope: !573)
!2588 = !DILocation(line: 2680, column: 11, scope: !2585)
!2589 = !DILocation(line: 2680, column: 3, scope: !2585)
!2590 = !DILocation(line: 2681, column: 10, scope: !573)
!2591 = !DILocation(line: 2681, column: 9, scope: !573)
!2592 = !DILocation(line: 2681, column: 7, scope: !573)
!2593 = !DILocation(line: 2684, column: 6, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !573, file: !1, line: 2684, column: 6)
!2595 = !DILocation(line: 2684, column: 12, scope: !2594)
!2596 = !DILocation(line: 2684, column: 17, scope: !2594)
!2597 = !DILocation(line: 2684, column: 6, scope: !573)
!2598 = !DILocation(line: 2685, column: 18, scope: !2594)
!2599 = !DILocation(line: 2685, column: 27, scope: !2594)
!2600 = !DILocation(line: 2685, column: 3, scope: !2594)
!2601 = !DILocation(line: 2685, column: 9, scope: !2594)
!2602 = !DILocation(line: 2685, column: 16, scope: !2594)
!2603 = !DILocation(line: 2689, column: 6, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !573, file: !1, line: 2689, column: 6)
!2605 = !DILocation(line: 2689, column: 15, scope: !2604)
!2606 = !DILocation(line: 2689, column: 6, scope: !573)
!2607 = !DILocation(line: 2690, column: 26, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2604, file: !1, line: 2689, column: 39)
!2609 = !DILocation(line: 2690, column: 29, scope: !2608)
!2610 = !DILocation(line: 2690, column: 38, scope: !2608)
!2611 = !DILocation(line: 2690, column: 3, scope: !2608)
!2612 = !DILocation(line: 2691, column: 3, scope: !2608)
!2613 = !DILocation(line: 2691, column: 12, scope: !2608)
!2614 = !DILocation(line: 2691, column: 35, scope: !2608)
!2615 = !DILocation(line: 2692, column: 2, scope: !2608)
!2616 = !DILocation(line: 2695, column: 6, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !573, file: !1, line: 2695, column: 6)
!2618 = !DILocation(line: 2695, column: 15, scope: !2617)
!2619 = !DILocation(line: 2695, column: 34, scope: !2617)
!2620 = !DILocation(line: 2695, column: 40, scope: !2617)
!2621 = !DILocation(line: 2695, column: 32, scope: !2617)
!2622 = !DILocation(line: 2695, column: 6, scope: !573)
!2623 = !DILocalVariable(name: "step", scope: !2624, file: !1, line: 2696, type: !52)
!2624 = distinct !DILexicalBlock(scope: !2617, file: !1, line: 2695, column: 48)
!2625 = !DILocation(line: 2696, column: 11, scope: !2624)
!2626 = !DILocation(line: 2698, column: 10, scope: !2624)
!2627 = !DILocation(line: 2698, column: 16, scope: !2624)
!2628 = !DILocation(line: 2698, column: 25, scope: !2624)
!2629 = !DILocation(line: 2698, column: 34, scope: !2624)
!2630 = !DILocation(line: 2698, column: 23, scope: !2624)
!2631 = !DILocation(line: 2698, column: 8, scope: !2624)
!2632 = !DILocation(line: 2699, column: 33, scope: !2624)
!2633 = !DILocation(line: 2699, column: 36, scope: !2624)
!2634 = !DILocation(line: 2699, column: 10, scope: !2624)
!2635 = !DILocation(line: 2699, column: 8, scope: !2624)
!2636 = !DILocation(line: 2700, column: 7, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2624, file: !1, line: 2700, column: 7)
!2638 = !DILocation(line: 2700, column: 12, scope: !2637)
!2639 = !DILocation(line: 2700, column: 7, scope: !2624)
!2640 = !DILocation(line: 2701, column: 17, scope: !2637)
!2641 = !DILocation(line: 2701, column: 12, scope: !2637)
!2642 = !DILocation(line: 2701, column: 4, scope: !2637)
!2643 = !DILocation(line: 2702, column: 31, scope: !2624)
!2644 = !DILocation(line: 2702, column: 37, scope: !2624)
!2645 = !DILocation(line: 2702, column: 3, scope: !2624)
!2646 = !DILocation(line: 2702, column: 12, scope: !2624)
!2647 = !DILocation(line: 2702, column: 29, scope: !2624)
!2648 = !DILocation(line: 2703, column: 2, scope: !2624)
!2649 = !DILocation(line: 2706, column: 2, scope: !573)
!2650 = !DILocation(line: 2707, column: 1, scope: !573)
!2651 = !DILocalVariable(name: "p", arg: 1, scope: !600, file: !1, line: 3213, type: !348)
!2652 = !DILocation(line: 3213, column: 39, scope: !600)
!2653 = !DILocalVariable(name: "max", arg: 2, scope: !600, file: !1, line: 3213, type: !45)
!2654 = !DILocation(line: 3213, column: 49, scope: !600)
!2655 = !DILocalVariable(name: "len", arg: 3, scope: !600, file: !1, line: 3213, type: !65)
!2656 = !DILocation(line: 3213, column: 62, scope: !600)
!2657 = !DILocalVariable(name: "file", arg: 4, scope: !600, file: !1, line: 3214, type: !305)
!2658 = !DILocation(line: 3214, column: 23, scope: !600)
!2659 = !DILocation(line: 3216, column: 6, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !600, file: !1, line: 3216, column: 6)
!2661 = !DILocation(line: 3216, column: 12, scope: !2660)
!2662 = !DILocation(line: 3216, column: 19, scope: !2660)
!2663 = !DILocation(line: 3216, column: 27, scope: !2660)
!2664 = !DILocation(line: 3216, column: 30, scope: !2665)
!2665 = !DILexicalBlockFile(scope: !2660, file: !1, discriminator: 1)
!2666 = !DILocation(line: 3216, column: 36, scope: !2665)
!2667 = !DILocation(line: 3216, column: 44, scope: !2665)
!2668 = !DILocation(line: 3216, column: 58, scope: !2665)
!2669 = !DILocation(line: 3216, column: 6, scope: !2665)
!2670 = !DILocation(line: 3217, column: 30, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2672, file: !1, line: 3217, column: 7)
!2672 = distinct !DILexicalBlock(scope: !2660, file: !1, line: 3216, column: 63)
!2673 = !DILocation(line: 3217, column: 33, scope: !2671)
!2674 = !DILocation(line: 3217, column: 38, scope: !2671)
!2675 = !DILocation(line: 3217, column: 43, scope: !2671)
!2676 = !DILocation(line: 3217, column: 49, scope: !2671)
!2677 = !DILocation(line: 3217, column: 7, scope: !2671)
!2678 = !DILocation(line: 3217, column: 57, scope: !2671)
!2679 = !DILocation(line: 3217, column: 7, scope: !2672)
!2680 = !DILocation(line: 3218, column: 4, scope: !2671)
!2681 = !DILocation(line: 3219, column: 6, scope: !2672)
!2682 = !DILocation(line: 3219, column: 5, scope: !2672)
!2683 = !DILocation(line: 3219, column: 3, scope: !2672)
!2684 = !DILocation(line: 3219, column: 11, scope: !2672)
!2685 = !DILocation(line: 3220, column: 6, scope: !2672)
!2686 = !DILocation(line: 3220, column: 5, scope: !2672)
!2687 = !DILocation(line: 3220, column: 10, scope: !2672)
!2688 = !DILocation(line: 3220, column: 3, scope: !2672)
!2689 = !DILocation(line: 3220, column: 15, scope: !2672)
!2690 = !DILocation(line: 3221, column: 4, scope: !2672)
!2691 = !DILocation(line: 3221, column: 8, scope: !2672)
!2692 = !DILocation(line: 3222, column: 2, scope: !2672)
!2693 = !DILocation(line: 3223, column: 6, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !600, file: !1, line: 3223, column: 6)
!2695 = !DILocation(line: 3223, column: 12, scope: !2694)
!2696 = !DILocation(line: 3223, column: 26, scope: !2694)
!2697 = !DILocation(line: 3223, column: 6, scope: !600)
!2698 = !DILocation(line: 3224, column: 8, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 3224, column: 7)
!2700 = distinct !DILexicalBlock(scope: !2694, file: !1, line: 3223, column: 32)
!2701 = !DILocation(line: 3224, column: 7, scope: !2699)
!2702 = !DILocation(line: 3224, column: 12, scope: !2699)
!2703 = !DILocation(line: 3224, column: 18, scope: !2699)
!2704 = !DILocation(line: 3224, column: 16, scope: !2699)
!2705 = !DILocation(line: 3224, column: 7, scope: !2700)
!2706 = !DILocation(line: 3225, column: 4, scope: !2699)
!2707 = !DILocation(line: 3226, column: 6, scope: !2700)
!2708 = !DILocation(line: 3226, column: 5, scope: !2700)
!2709 = !DILocation(line: 3226, column: 3, scope: !2700)
!2710 = !DILocation(line: 3226, column: 11, scope: !2700)
!2711 = !DILocation(line: 3227, column: 6, scope: !2700)
!2712 = !DILocation(line: 3227, column: 5, scope: !2700)
!2713 = !DILocation(line: 3227, column: 10, scope: !2700)
!2714 = !DILocation(line: 3227, column: 3, scope: !2700)
!2715 = !DILocation(line: 3227, column: 15, scope: !2700)
!2716 = !DILocation(line: 3228, column: 4, scope: !2700)
!2717 = !DILocation(line: 3228, column: 8, scope: !2700)
!2718 = !DILocation(line: 3229, column: 2, scope: !2700)
!2719 = !DILocation(line: 3230, column: 8, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 3230, column: 7)
!2721 = distinct !DILexicalBlock(scope: !2694, file: !1, line: 3229, column: 9)
!2722 = !DILocation(line: 3230, column: 7, scope: !2720)
!2723 = !DILocation(line: 3230, column: 14, scope: !2720)
!2724 = !DILocation(line: 3230, column: 20, scope: !2720)
!2725 = !DILocation(line: 3230, column: 12, scope: !2720)
!2726 = !DILocation(line: 3230, column: 36, scope: !2720)
!2727 = !DILocation(line: 3230, column: 34, scope: !2720)
!2728 = !DILocation(line: 3230, column: 7, scope: !2721)
!2729 = !DILocation(line: 3231, column: 4, scope: !2720)
!2730 = !DILocation(line: 3232, column: 10, scope: !2721)
!2731 = !DILocation(line: 3232, column: 15, scope: !2721)
!2732 = !DILocation(line: 3232, column: 14, scope: !2721)
!2733 = !DILocation(line: 3232, column: 12, scope: !2721)
!2734 = !DILocation(line: 3232, column: 20, scope: !2721)
!2735 = !DILocation(line: 3232, column: 26, scope: !2721)
!2736 = !DILocation(line: 3232, column: 40, scope: !2721)
!2737 = !DILocation(line: 3232, column: 46, scope: !2721)
!2738 = !DILocation(line: 3232, column: 3, scope: !2721)
!2739 = !DILocation(line: 3233, column: 11, scope: !2721)
!2740 = !DILocation(line: 3233, column: 17, scope: !2721)
!2741 = !DILocation(line: 3233, column: 4, scope: !2721)
!2742 = !DILocation(line: 3233, column: 8, scope: !2721)
!2743 = !DILocation(line: 3235, column: 2, scope: !600)
!2744 = !DILocation(line: 3236, column: 1, scope: !600)
!2745 = !DILocalVariable(name: "as", arg: 1, scope: !603, file: !1, line: 3192, type: !606)
!2746 = !DILocation(line: 3192, column: 39, scope: !603)
!2747 = !DILocalVariable(name: "file", arg: 2, scope: !603, file: !1, line: 3192, type: !305)
!2748 = !DILocation(line: 3192, column: 61, scope: !603)
!2749 = !DILocalVariable(name: "depth", arg: 3, scope: !603, file: !1, line: 3192, type: !23)
!2750 = !DILocation(line: 3192, column: 71, scope: !603)
!2751 = !DILocation(line: 3196, column: 6, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !603, file: !1, line: 3196, column: 6)
!2753 = !DILocation(line: 3196, column: 12, scope: !2752)
!2754 = !DILocation(line: 3196, column: 6, scope: !603)
!2755 = !DILocation(line: 3197, column: 3, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2752, file: !1, line: 3196, column: 20)
!2757 = !DILocation(line: 3199, column: 6, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !603, file: !1, line: 3199, column: 6)
!2759 = !DILocation(line: 3199, column: 12, scope: !2758)
!2760 = !DILocation(line: 3199, column: 19, scope: !2758)
!2761 = !DILocation(line: 3199, column: 27, scope: !2758)
!2762 = !DILocation(line: 3199, column: 30, scope: !2763)
!2763 = !DILexicalBlockFile(scope: !2758, file: !1, discriminator: 1)
!2764 = !DILocation(line: 3199, column: 66, scope: !2763)
!2765 = !DILocation(line: 3199, column: 6, scope: !2763)
!2766 = !DILocation(line: 3200, column: 22, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2768, file: !1, line: 3200, column: 7)
!2768 = distinct !DILexicalBlock(scope: !2758, file: !1, line: 3199, column: 71)
!2769 = !DILocation(line: 3200, column: 26, scope: !2767)
!2770 = !DILocation(line: 3200, column: 32, scope: !2767)
!2771 = !DILocation(line: 3200, column: 40, scope: !2767)
!2772 = !DILocation(line: 3200, column: 46, scope: !2767)
!2773 = !DILocation(line: 3200, column: 7, scope: !2767)
!2774 = !DILocation(line: 3200, column: 51, scope: !2767)
!2775 = !DILocation(line: 3200, column: 7, scope: !2768)
!2776 = !DILocation(line: 3201, column: 4, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2767, file: !1, line: 3200, column: 60)
!2778 = !DILocation(line: 3203, column: 18, scope: !2768)
!2779 = !DILocation(line: 3203, column: 3, scope: !2768)
!2780 = !DILocation(line: 3204, column: 2, scope: !2768)
!2781 = !DILocation(line: 3205, column: 6, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !603, file: !1, line: 3205, column: 6)
!2783 = !DILocation(line: 3205, column: 34, scope: !2782)
!2784 = !DILocation(line: 3205, column: 6, scope: !603)
!2785 = !DILocation(line: 3206, column: 18, scope: !2782)
!2786 = !DILocation(line: 3206, column: 3, scope: !2782)
!2787 = !DILocation(line: 3208, column: 25, scope: !2782)
!2788 = !DILocation(line: 3208, column: 30, scope: !2782)
!2789 = !DILocation(line: 3208, column: 36, scope: !2782)
!2790 = !DILocation(line: 3208, column: 3, scope: !2782)
!2791 = !DILocation(line: 3209, column: 10, scope: !603)
!2792 = !DILocation(line: 3209, column: 14, scope: !603)
!2793 = !DILocation(line: 3209, column: 2, scope: !603)
!2794 = !DILocation(line: 3210, column: 1, scope: !603)
!2795 = !DILocalVariable(name: "a", arg: 1, scope: !527, file: !1, line: 1751, type: !4)
!2796 = !DILocation(line: 1751, column: 38, scope: !527)
!2797 = !DILocalVariable(name: "parent", arg: 2, scope: !527, file: !1, line: 1751, type: !305)
!2798 = !DILocation(line: 1751, column: 59, scope: !527)
!2799 = !DILocalVariable(name: "isodirrec", arg: 3, scope: !527, file: !1, line: 1752, type: !488)
!2800 = !DILocation(line: 1752, column: 26, scope: !527)
!2801 = !DILocalVariable(name: "iso9660", scope: !527, file: !1, line: 1754, type: !292)
!2802 = !DILocation(line: 1754, column: 18, scope: !527)
!2803 = !DILocalVariable(name: "file", scope: !527, file: !1, line: 1755, type: !305)
!2804 = !DILocation(line: 1755, column: 20, scope: !527)
!2805 = !DILocalVariable(name: "filep", scope: !527, file: !1, line: 1755, type: !305)
!2806 = !DILocation(line: 1755, column: 27, scope: !527)
!2807 = !DILocalVariable(name: "name_len", scope: !527, file: !1, line: 1756, type: !45)
!2808 = !DILocation(line: 1756, column: 9, scope: !527)
!2809 = !DILocalVariable(name: "rr_start", scope: !527, file: !1, line: 1757, type: !488)
!2810 = !DILocation(line: 1757, column: 23, scope: !527)
!2811 = !DILocalVariable(name: "rr_end", scope: !527, file: !1, line: 1757, type: !488)
!2812 = !DILocation(line: 1757, column: 34, scope: !527)
!2813 = !DILocalVariable(name: "p", scope: !527, file: !1, line: 1758, type: !488)
!2814 = !DILocation(line: 1758, column: 23, scope: !527)
!2815 = !DILocalVariable(name: "dr_len", scope: !527, file: !1, line: 1759, type: !45)
!2816 = !DILocation(line: 1759, column: 9, scope: !527)
!2817 = !DILocalVariable(name: "fsize", scope: !527, file: !1, line: 1760, type: !314)
!2818 = !DILocation(line: 1760, column: 11, scope: !527)
!2819 = !DILocalVariable(name: "offset", scope: !527, file: !1, line: 1760, type: !314)
!2820 = !DILocation(line: 1760, column: 18, scope: !527)
!2821 = !DILocalVariable(name: "location", scope: !527, file: !1, line: 1761, type: !409)
!2822 = !DILocation(line: 1761, column: 10, scope: !527)
!2823 = !DILocalVariable(name: "flags", scope: !527, file: !1, line: 1762, type: !23)
!2824 = !DILocation(line: 1762, column: 6, scope: !527)
!2825 = !DILocation(line: 1764, column: 31, scope: !527)
!2826 = !DILocation(line: 1764, column: 34, scope: !527)
!2827 = !DILocation(line: 1764, column: 42, scope: !527)
!2828 = !DILocation(line: 1764, column: 12, scope: !527)
!2829 = !DILocation(line: 1764, column: 10, scope: !527)
!2830 = !DILocation(line: 1766, column: 19, scope: !527)
!2831 = !DILocation(line: 1766, column: 11, scope: !527)
!2832 = !DILocation(line: 1766, column: 9, scope: !527)
!2833 = !DILocation(line: 1767, column: 21, scope: !527)
!2834 = !DILocation(line: 1767, column: 13, scope: !527)
!2835 = !DILocation(line: 1767, column: 11, scope: !527)
!2836 = !DILocation(line: 1768, column: 29, scope: !527)
!2837 = !DILocation(line: 1768, column: 39, scope: !527)
!2838 = !DILocation(line: 1768, column: 13, scope: !527)
!2839 = !DILocation(line: 1768, column: 11, scope: !527)
!2840 = !DILocation(line: 1769, column: 14, scope: !527)
!2841 = !DILocation(line: 1769, column: 24, scope: !527)
!2842 = !DILocation(line: 1769, column: 10, scope: !527)
!2843 = !DILocation(line: 1769, column: 8, scope: !527)
!2844 = !DILocation(line: 1771, column: 6, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1771, column: 6)
!2846 = !DILocation(line: 1771, column: 13, scope: !2845)
!2847 = !DILocation(line: 1771, column: 6, scope: !527)
!2848 = !DILocation(line: 1772, column: 22, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2845, file: !1, line: 1771, column: 19)
!2850 = !DILocation(line: 1772, column: 25, scope: !2849)
!2851 = !DILocation(line: 1772, column: 3, scope: !2849)
!2852 = !DILocation(line: 1774, column: 3, scope: !2849)
!2853 = !DILocation(line: 1777, column: 6, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1777, column: 6)
!2855 = !DILocation(line: 1777, column: 13, scope: !2854)
!2856 = !DILocation(line: 1777, column: 20, scope: !2854)
!2857 = !DILocation(line: 1777, column: 18, scope: !2854)
!2858 = !DILocation(line: 1777, column: 29, scope: !2854)
!2859 = !DILocation(line: 1777, column: 32, scope: !2860)
!2860 = !DILexicalBlockFile(scope: !2854, file: !1, discriminator: 1)
!2861 = !DILocation(line: 1777, column: 41, scope: !2860)
!2862 = !DILocation(line: 1777, column: 6, scope: !2860)
!2863 = !DILocation(line: 1778, column: 22, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2854, file: !1, line: 1777, column: 47)
!2865 = !DILocation(line: 1778, column: 25, scope: !2864)
!2866 = !DILocation(line: 1778, column: 3, scope: !2864)
!2867 = !DILocation(line: 1780, column: 3, scope: !2864)
!2868 = !DILocation(line: 1788, column: 6, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1788, column: 6)
!2870 = !DILocation(line: 1788, column: 15, scope: !2869)
!2871 = !DILocation(line: 1788, column: 19, scope: !2869)
!2872 = !DILocation(line: 1789, column: 7, scope: !2869)
!2873 = !DILocation(line: 1789, column: 20, scope: !2869)
!2874 = !DILocation(line: 1789, column: 28, scope: !2869)
!2875 = !DILocation(line: 1789, column: 37, scope: !2869)
!2876 = !DILocation(line: 1789, column: 26, scope: !2869)
!2877 = !DILocation(line: 1789, column: 56, scope: !2869)
!2878 = !DILocation(line: 1790, column: 11, scope: !2869)
!2879 = !DILocation(line: 1790, column: 20, scope: !2869)
!2880 = !DILocation(line: 1790, column: 9, scope: !2869)
!2881 = !DILocation(line: 1789, column: 16, scope: !2869)
!2882 = !DILocation(line: 1791, column: 16, scope: !2869)
!2883 = !DILocation(line: 1791, column: 25, scope: !2869)
!2884 = !DILocation(line: 1791, column: 6, scope: !2869)
!2885 = !DILocation(line: 1791, column: 4, scope: !2869)
!2886 = !DILocation(line: 1788, column: 6, scope: !2887)
!2887 = !DILexicalBlockFile(scope: !527, file: !1, discriminator: 1)
!2888 = !DILocation(line: 1792, column: 22, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2869, file: !1, line: 1791, column: 39)
!2890 = !DILocation(line: 1792, column: 25, scope: !2889)
!2891 = !DILocation(line: 1792, column: 3, scope: !2889)
!2892 = !DILocation(line: 1794, column: 3, scope: !2889)
!2893 = !DILocation(line: 1798, column: 6, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1798, column: 6)
!2895 = !DILocation(line: 1798, column: 12, scope: !2894)
!2896 = !DILocation(line: 1798, column: 17, scope: !2894)
!2897 = !DILocation(line: 1798, column: 20, scope: !2898)
!2898 = !DILexicalBlockFile(scope: !2894, file: !1, discriminator: 1)
!2899 = !DILocation(line: 1798, column: 29, scope: !2898)
!2900 = !DILocation(line: 1798, column: 6, scope: !2898)
!2901 = !DILocation(line: 1799, column: 22, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2894, file: !1, line: 1798, column: 34)
!2903 = !DILocation(line: 1799, column: 25, scope: !2902)
!2904 = !DILocation(line: 1799, column: 3, scope: !2902)
!2905 = !DILocation(line: 1801, column: 3, scope: !2902)
!2906 = !DILocation(line: 1805, column: 11, scope: !527)
!2907 = !DILocation(line: 1805, column: 20, scope: !527)
!2908 = !DILocation(line: 1805, column: 51, scope: !527)
!2909 = !DILocation(line: 1805, column: 41, scope: !527)
!2910 = !DILocation(line: 1805, column: 39, scope: !527)
!2911 = !DILocation(line: 1805, column: 9, scope: !527)
!2912 = !DILocation(line: 1806, column: 15, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1806, column: 2)
!2914 = !DILocation(line: 1806, column: 13, scope: !2913)
!2915 = !DILocation(line: 1806, column: 7, scope: !2913)
!2916 = !DILocation(line: 1806, column: 23, scope: !2917)
!2917 = !DILexicalBlockFile(scope: !2918, file: !1, discriminator: 1)
!2918 = distinct !DILexicalBlock(scope: !2913, file: !1, line: 1806, column: 2)
!2919 = !DILocation(line: 1806, column: 29, scope: !2917)
!2920 = !DILocation(line: 1806, column: 2, scope: !2917)
!2921 = !DILocation(line: 1807, column: 7, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2923, file: !1, line: 1807, column: 7)
!2923 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 1806, column: 61)
!2924 = !DILocation(line: 1807, column: 14, scope: !2922)
!2925 = !DILocation(line: 1807, column: 24, scope: !2922)
!2926 = !DILocation(line: 1807, column: 21, scope: !2922)
!2927 = !DILocation(line: 1807, column: 7, scope: !2923)
!2928 = !DILocation(line: 1808, column: 23, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2922, file: !1, line: 1807, column: 32)
!2930 = !DILocation(line: 1808, column: 26, scope: !2929)
!2931 = !DILocation(line: 1808, column: 4, scope: !2929)
!2932 = !DILocation(line: 1810, column: 4, scope: !2929)
!2933 = !DILocation(line: 1812, column: 2, scope: !2923)
!2934 = !DILocation(line: 1806, column: 46, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2918, file: !1, discriminator: 2)
!2936 = !DILocation(line: 1806, column: 53, scope: !2935)
!2937 = !DILocation(line: 1806, column: 44, scope: !2935)
!2938 = !DILocation(line: 1806, column: 2, scope: !2935)
!2939 = !DILocation(line: 1815, column: 29, scope: !527)
!2940 = !DILocation(line: 1815, column: 9, scope: !527)
!2941 = !DILocation(line: 1815, column: 7, scope: !527)
!2942 = !DILocation(line: 1816, column: 6, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1816, column: 6)
!2944 = !DILocation(line: 1816, column: 11, scope: !2943)
!2945 = !DILocation(line: 1816, column: 6, scope: !527)
!2946 = !DILocation(line: 1817, column: 22, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2943, file: !1, line: 1816, column: 20)
!2948 = !DILocation(line: 1817, column: 25, scope: !2947)
!2949 = !DILocation(line: 1817, column: 3, scope: !2947)
!2950 = !DILocation(line: 1819, column: 3, scope: !2947)
!2951 = !DILocation(line: 1821, column: 17, scope: !527)
!2952 = !DILocation(line: 1821, column: 2, scope: !527)
!2953 = !DILocation(line: 1821, column: 8, scope: !527)
!2954 = !DILocation(line: 1821, column: 15, scope: !527)
!2955 = !DILocation(line: 1822, column: 17, scope: !527)
!2956 = !DILocation(line: 1822, column: 2, scope: !527)
!2957 = !DILocation(line: 1822, column: 8, scope: !527)
!2958 = !DILocation(line: 1822, column: 15, scope: !527)
!2959 = !DILocation(line: 1823, column: 15, scope: !527)
!2960 = !DILocation(line: 1823, column: 2, scope: !527)
!2961 = !DILocation(line: 1823, column: 8, scope: !527)
!2962 = !DILocation(line: 1823, column: 13, scope: !527)
!2963 = !DILocation(line: 1824, column: 25, scope: !527)
!2964 = !DILocation(line: 1824, column: 35, scope: !527)
!2965 = !DILocation(line: 1824, column: 16, scope: !527)
!2966 = !DILocation(line: 1824, column: 2, scope: !527)
!2967 = !DILocation(line: 1824, column: 8, scope: !527)
!2968 = !DILocation(line: 1824, column: 14, scope: !527)
!2969 = !DILocation(line: 1825, column: 30, scope: !527)
!2970 = !DILocation(line: 1825, column: 36, scope: !527)
!2971 = !DILocation(line: 1825, column: 16, scope: !527)
!2972 = !DILocation(line: 1825, column: 22, scope: !527)
!2973 = !DILocation(line: 1825, column: 28, scope: !527)
!2974 = !DILocation(line: 1825, column: 2, scope: !527)
!2975 = !DILocation(line: 1825, column: 8, scope: !527)
!2976 = !DILocation(line: 1825, column: 14, scope: !527)
!2977 = !DILocation(line: 1826, column: 2, scope: !527)
!2978 = !DILocation(line: 1826, column: 8, scope: !527)
!2979 = !DILocation(line: 1826, column: 19, scope: !527)
!2980 = !DILocation(line: 1826, column: 25, scope: !527)
!2981 = !DILocation(line: 1827, column: 28, scope: !527)
!2982 = !DILocation(line: 1827, column: 34, scope: !527)
!2983 = !DILocation(line: 1827, column: 45, scope: !527)
!2984 = !DILocation(line: 1827, column: 2, scope: !527)
!2985 = !DILocation(line: 1827, column: 8, scope: !527)
!2986 = !DILocation(line: 1827, column: 19, scope: !527)
!2987 = !DILocation(line: 1827, column: 24, scope: !527)
!2988 = !DILocation(line: 1829, column: 6, scope: !527)
!2989 = !DILocation(line: 1829, column: 16, scope: !527)
!2990 = !DILocation(line: 1829, column: 4, scope: !527)
!2991 = !DILocation(line: 1832, column: 13, scope: !527)
!2992 = !DILocation(line: 1832, column: 17, scope: !527)
!2993 = !DILocation(line: 1832, column: 15, scope: !527)
!2994 = !DILocation(line: 1832, column: 29, scope: !527)
!2995 = !DILocation(line: 1832, column: 38, scope: !527)
!2996 = !DILocation(line: 1832, column: 26, scope: !527)
!2997 = !DILocation(line: 1832, column: 11, scope: !527)
!2998 = !DILocation(line: 1833, column: 11, scope: !527)
!2999 = !DILocation(line: 1833, column: 23, scope: !527)
!3000 = !DILocation(line: 1833, column: 21, scope: !527)
!3001 = !DILocation(line: 1833, column: 9, scope: !527)
!3002 = !DILocation(line: 1835, column: 6, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1835, column: 6)
!3004 = !DILocation(line: 1835, column: 15, scope: !3003)
!3005 = !DILocation(line: 1835, column: 6, scope: !527)
!3006 = !DILocation(line: 1841, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 1841, column: 7)
!3008 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 1835, column: 27)
!3009 = !DILocation(line: 1841, column: 16, scope: !3007)
!3010 = !DILocation(line: 1841, column: 7, scope: !3008)
!3011 = !DILocation(line: 1842, column: 13, scope: !3007)
!3012 = !DILocation(line: 1842, column: 4, scope: !3007)
!3013 = !DILocation(line: 1843, column: 12, scope: !3008)
!3014 = !DILocation(line: 1856, column: 7, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 1856, column: 7)
!3016 = !DILocation(line: 1856, column: 16, scope: !3015)
!3017 = !DILocation(line: 1856, column: 20, scope: !3015)
!3018 = !DILocation(line: 1856, column: 25, scope: !3019)
!3019 = !DILexicalBlockFile(scope: !3015, file: !1, discriminator: 1)
!3020 = !DILocation(line: 1856, column: 33, scope: !3019)
!3021 = !DILocation(line: 1856, column: 23, scope: !3019)
!3022 = !DILocation(line: 1856, column: 37, scope: !3019)
!3023 = !DILocation(line: 1856, column: 42, scope: !3019)
!3024 = !DILocation(line: 1856, column: 47, scope: !3025)
!3025 = !DILexicalBlockFile(scope: !3015, file: !1, discriminator: 2)
!3026 = !DILocation(line: 1856, column: 55, scope: !3025)
!3027 = !DILocation(line: 1856, column: 45, scope: !3025)
!3028 = !DILocation(line: 1856, column: 59, scope: !3025)
!3029 = !DILocation(line: 1857, column: 7, scope: !3015)
!3030 = !DILocation(line: 1857, column: 12, scope: !3019)
!3031 = !DILocation(line: 1857, column: 20, scope: !3019)
!3032 = !DILocation(line: 1857, column: 10, scope: !3019)
!3033 = !DILocation(line: 1857, column: 24, scope: !3019)
!3034 = !DILocation(line: 1857, column: 29, scope: !3019)
!3035 = !DILocation(line: 1857, column: 34, scope: !3025)
!3036 = !DILocation(line: 1857, column: 42, scope: !3025)
!3037 = !DILocation(line: 1857, column: 32, scope: !3025)
!3038 = !DILocation(line: 1857, column: 46, scope: !3025)
!3039 = !DILocation(line: 1856, column: 7, scope: !3040)
!3040 = !DILexicalBlockFile(scope: !3008, file: !1, discriminator: 3)
!3041 = !DILocation(line: 1858, column: 13, scope: !3015)
!3042 = !DILocation(line: 1858, column: 4, scope: !3015)
!3043 = !DILocation(line: 1864, column: 36, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 1864, column: 7)
!3045 = !DILocation(line: 1864, column: 29, scope: !3044)
!3046 = !DILocation(line: 1864, column: 8, scope: !3044)
!3047 = !DILocation(line: 1864, column: 14, scope: !3044)
!3048 = !DILocation(line: 1864, column: 27, scope: !3044)
!3049 = !DILocation(line: 1864, column: 47, scope: !3044)
!3050 = !DILocation(line: 1864, column: 7, scope: !3008)
!3051 = !DILocation(line: 1865, column: 23, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3044, file: !1, line: 1864, column: 56)
!3053 = !DILocation(line: 1865, column: 26, scope: !3052)
!3054 = !DILocation(line: 1865, column: 4, scope: !3052)
!3055 = !DILocation(line: 1867, column: 4, scope: !3052)
!3056 = !DILocation(line: 1869, column: 10, scope: !3008)
!3057 = !DILocation(line: 1869, column: 16, scope: !3008)
!3058 = !DILocation(line: 1869, column: 30, scope: !3008)
!3059 = !DILocation(line: 1869, column: 33, scope: !3008)
!3060 = !DILocation(line: 1869, column: 3, scope: !3008)
!3061 = !DILocation(line: 1870, column: 25, scope: !3008)
!3062 = !DILocation(line: 1870, column: 3, scope: !3008)
!3063 = !DILocation(line: 1870, column: 9, scope: !3008)
!3064 = !DILocation(line: 1870, column: 23, scope: !3008)
!3065 = !DILocation(line: 1871, column: 2, scope: !3008)
!3066 = !DILocation(line: 1873, column: 7, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 1873, column: 7)
!3068 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 1871, column: 9)
!3069 = !DILocation(line: 1873, column: 16, scope: !3067)
!3070 = !DILocation(line: 1873, column: 20, scope: !3067)
!3071 = !DILocation(line: 1873, column: 25, scope: !3072)
!3072 = !DILexicalBlockFile(scope: !3067, file: !1, discriminator: 1)
!3073 = !DILocation(line: 1873, column: 34, scope: !3072)
!3074 = !DILocation(line: 1873, column: 23, scope: !3072)
!3075 = !DILocation(line: 1873, column: 39, scope: !3072)
!3076 = !DILocation(line: 1873, column: 46, scope: !3072)
!3077 = !DILocation(line: 1874, column: 7, scope: !3067)
!3078 = !DILocation(line: 1874, column: 16, scope: !3067)
!3079 = !DILocation(line: 1874, column: 5, scope: !3067)
!3080 = !DILocation(line: 1874, column: 21, scope: !3067)
!3081 = !DILocation(line: 1873, column: 7, scope: !3082)
!3082 = !DILexicalBlockFile(scope: !3068, file: !1, discriminator: 2)
!3083 = !DILocation(line: 1875, column: 13, scope: !3067)
!3084 = !DILocation(line: 1875, column: 4, scope: !3067)
!3085 = !DILocation(line: 1877, column: 7, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 1877, column: 7)
!3087 = !DILocation(line: 1877, column: 16, scope: !3086)
!3088 = !DILocation(line: 1877, column: 20, scope: !3086)
!3089 = !DILocation(line: 1877, column: 25, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !3086, file: !1, discriminator: 1)
!3091 = !DILocation(line: 1877, column: 34, scope: !3090)
!3092 = !DILocation(line: 1877, column: 23, scope: !3090)
!3093 = !DILocation(line: 1877, column: 39, scope: !3090)
!3094 = !DILocation(line: 1877, column: 7, scope: !3090)
!3095 = !DILocation(line: 1878, column: 4, scope: !3086)
!3096 = !DILocation(line: 1880, column: 3, scope: !3068)
!3097 = !DILocation(line: 1883, column: 10, scope: !527)
!3098 = !DILocation(line: 1883, column: 8, scope: !527)
!3099 = !DILocation(line: 1884, column: 6, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1884, column: 6)
!3101 = !DILocation(line: 1884, column: 12, scope: !3100)
!3102 = !DILocation(line: 1884, column: 6, scope: !527)
!3103 = !DILocation(line: 1885, column: 3, scope: !3100)
!3104 = !DILocation(line: 1885, column: 9, scope: !3100)
!3105 = !DILocation(line: 1885, column: 14, scope: !3100)
!3106 = !DILocation(line: 1887, column: 3, scope: !3100)
!3107 = !DILocation(line: 1887, column: 9, scope: !3100)
!3108 = !DILocation(line: 1887, column: 14, scope: !3100)
!3109 = !DILocation(line: 1888, column: 6, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1888, column: 6)
!3111 = !DILocation(line: 1888, column: 12, scope: !3110)
!3112 = !DILocation(line: 1888, column: 6, scope: !527)
!3113 = !DILocation(line: 1889, column: 3, scope: !3110)
!3114 = !DILocation(line: 1889, column: 9, scope: !3110)
!3115 = !DILocation(line: 1889, column: 22, scope: !3110)
!3116 = !DILocation(line: 1891, column: 3, scope: !3110)
!3117 = !DILocation(line: 1891, column: 9, scope: !3110)
!3118 = !DILocation(line: 1891, column: 22, scope: !3110)
!3119 = !DILocation(line: 1901, column: 6, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1901, column: 6)
!3121 = !DILocation(line: 1901, column: 12, scope: !3120)
!3122 = !DILocation(line: 1901, column: 17, scope: !3120)
!3123 = !DILocation(line: 1901, column: 22, scope: !3120)
!3124 = !DILocation(line: 1901, column: 25, scope: !3125)
!3125 = !DILexicalBlockFile(scope: !3120, file: !1, discriminator: 1)
!3126 = !DILocation(line: 1901, column: 34, scope: !3125)
!3127 = !DILocation(line: 1901, column: 6, scope: !3125)
!3128 = !DILocation(line: 1907, column: 3, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3120, file: !1, line: 1901, column: 40)
!3130 = !DILocation(line: 1907, column: 9, scope: !3129)
!3131 = !DILocation(line: 1907, column: 16, scope: !3129)
!3132 = !DILocation(line: 1909, column: 3, scope: !3129)
!3133 = !DILocation(line: 1909, column: 9, scope: !3129)
!3134 = !DILocation(line: 1909, column: 16, scope: !3129)
!3135 = !DILocation(line: 1910, column: 2, scope: !3129)
!3136 = !DILocation(line: 1911, column: 37, scope: !3120)
!3137 = !DILocation(line: 1911, column: 18, scope: !3120)
!3138 = !DILocation(line: 1911, column: 3, scope: !3120)
!3139 = !DILocation(line: 1911, column: 9, scope: !3120)
!3140 = !DILocation(line: 1911, column: 16, scope: !3120)
!3141 = !DILocation(line: 1914, column: 6, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1914, column: 6)
!3143 = !DILocation(line: 1914, column: 15, scope: !3142)
!3144 = !DILocation(line: 1914, column: 6, scope: !527)
!3145 = !DILocation(line: 1915, column: 7, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3147, file: !1, line: 1915, column: 7)
!3147 = distinct !DILexicalBlock(scope: !3142, file: !1, line: 1914, column: 38)
!3148 = !DILocation(line: 1915, column: 14, scope: !3146)
!3149 = !DILocation(line: 1915, column: 22, scope: !3146)
!3150 = !DILocation(line: 1915, column: 25, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !3146, file: !1, discriminator: 1)
!3152 = !DILocation(line: 1915, column: 34, scope: !3151)
!3153 = !DILocation(line: 1915, column: 32, scope: !3151)
!3154 = !DILocation(line: 1915, column: 43, scope: !3151)
!3155 = !DILocation(line: 1915, column: 7, scope: !3151)
!3156 = !DILocation(line: 1916, column: 8, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3146, file: !1, line: 1915, column: 49)
!3158 = !DILocation(line: 1916, column: 6, scope: !3157)
!3159 = !DILocation(line: 1917, column: 15, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3157, file: !1, line: 1917, column: 8)
!3161 = !DILocation(line: 1917, column: 8, scope: !3160)
!3162 = !DILocation(line: 1917, column: 43, scope: !3160)
!3163 = !DILocation(line: 1917, column: 8, scope: !3157)
!3164 = !DILocation(line: 1934, column: 27, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3160, file: !1, line: 1917, column: 49)
!3166 = !DILocation(line: 1934, column: 5, scope: !3165)
!3167 = !DILocation(line: 1934, column: 14, scope: !3165)
!3168 = !DILocation(line: 1934, column: 25, scope: !3165)
!3169 = !DILocation(line: 1935, column: 5, scope: !3165)
!3170 = !DILocation(line: 1935, column: 14, scope: !3165)
!3171 = !DILocation(line: 1935, column: 23, scope: !3165)
!3172 = !DILocation(line: 1936, column: 14, scope: !3165)
!3173 = !DILocation(line: 1937, column: 4, scope: !3165)
!3174 = !DILocation(line: 1938, column: 3, scope: !3157)
!3175 = !DILocation(line: 1939, column: 7, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3147, file: !1, line: 1939, column: 7)
!3177 = !DILocation(line: 1939, column: 16, scope: !3176)
!3178 = !DILocation(line: 1939, column: 7, scope: !3147)
!3179 = !DILocalVariable(name: "r", scope: !3180, file: !1, line: 1940, type: !23)
!3180 = distinct !DILexicalBlock(scope: !3176, file: !1, line: 1939, column: 26)
!3181 = !DILocation(line: 1940, column: 8, scope: !3180)
!3182 = !DILocation(line: 1942, column: 4, scope: !3180)
!3183 = !DILocation(line: 1942, column: 10, scope: !3180)
!3184 = !DILocation(line: 1942, column: 25, scope: !3180)
!3185 = !DILocation(line: 1943, column: 4, scope: !3180)
!3186 = !DILocation(line: 1943, column: 10, scope: !3180)
!3187 = !DILocation(line: 1943, column: 28, scope: !3180)
!3188 = !DILocation(line: 1944, column: 16, scope: !3180)
!3189 = !DILocation(line: 1944, column: 25, scope: !3180)
!3190 = !DILocation(line: 1944, column: 13, scope: !3180)
!3191 = !DILocation(line: 1945, column: 24, scope: !3180)
!3192 = !DILocation(line: 1945, column: 27, scope: !3180)
!3193 = !DILocation(line: 1945, column: 33, scope: !3180)
!3194 = !DILocation(line: 1945, column: 43, scope: !3180)
!3195 = !DILocation(line: 1945, column: 8, scope: !3180)
!3196 = !DILocation(line: 1945, column: 6, scope: !3180)
!3197 = !DILocation(line: 1946, column: 8, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 1946, column: 8)
!3199 = !DILocation(line: 1946, column: 10, scope: !3198)
!3200 = !DILocation(line: 1946, column: 8, scope: !3180)
!3201 = !DILocation(line: 1947, column: 5, scope: !3198)
!3202 = !DILocation(line: 1955, column: 8, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 1955, column: 8)
!3204 = !DILocation(line: 1955, column: 14, scope: !3203)
!3205 = !DILocation(line: 1955, column: 19, scope: !3203)
!3206 = !DILocation(line: 1955, column: 23, scope: !3203)
!3207 = !DILocation(line: 1956, column: 9, scope: !3203)
!3208 = !DILocation(line: 1956, column: 15, scope: !3203)
!3209 = !DILocation(line: 1956, column: 20, scope: !3203)
!3210 = !DILocation(line: 1956, column: 31, scope: !3203)
!3211 = !DILocation(line: 1955, column: 8, scope: !3212)
!3212 = !DILexicalBlockFile(scope: !3180, file: !1, discriminator: 1)
!3213 = !DILocation(line: 1957, column: 5, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3203, file: !1, line: 1956, column: 44)
!3215 = !DILocation(line: 1957, column: 11, scope: !3214)
!3216 = !DILocation(line: 1957, column: 16, scope: !3214)
!3217 = !DILocation(line: 1958, column: 5, scope: !3214)
!3218 = !DILocation(line: 1958, column: 11, scope: !3214)
!3219 = !DILocation(line: 1958, column: 18, scope: !3214)
!3220 = !DILocation(line: 1959, column: 5, scope: !3214)
!3221 = !DILocation(line: 1959, column: 11, scope: !3214)
!3222 = !DILocation(line: 1959, column: 18, scope: !3214)
!3223 = !DILocation(line: 1960, column: 4, scope: !3214)
!3224 = !DILocation(line: 1961, column: 3, scope: !3180)
!3225 = !DILocation(line: 1964, column: 4, scope: !3176)
!3226 = !DILocation(line: 1964, column: 13, scope: !3176)
!3227 = !DILocation(line: 1964, column: 35, scope: !3176)
!3228 = !DILocation(line: 1965, column: 2, scope: !3147)
!3229 = !DILocation(line: 1967, column: 2, scope: !527)
!3230 = !DILocation(line: 1967, column: 8, scope: !527)
!3231 = !DILocation(line: 1967, column: 15, scope: !527)
!3232 = !DILocation(line: 1969, column: 6, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1969, column: 6)
!3234 = !DILocation(line: 1969, column: 13, scope: !3233)
!3235 = !DILocation(line: 1969, column: 21, scope: !3233)
!3236 = !DILocation(line: 1969, column: 25, scope: !3237)
!3237 = !DILexicalBlockFile(scope: !3233, file: !1, discriminator: 1)
!3238 = !DILocation(line: 1969, column: 31, scope: !3237)
!3239 = !DILocation(line: 1969, column: 6, scope: !3237)
!3240 = !DILocation(line: 1970, column: 3, scope: !3233)
!3241 = !DILocation(line: 1970, column: 11, scope: !3233)
!3242 = !DILocation(line: 1970, column: 18, scope: !3233)
!3243 = !DILocation(line: 1972, column: 6, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !527, file: !1, line: 1972, column: 6)
!3245 = !DILocation(line: 1972, column: 15, scope: !3244)
!3246 = !DILocation(line: 1972, column: 6, scope: !527)
!3247 = !DILocation(line: 1973, column: 7, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1973, column: 7)
!3249 = distinct !DILexicalBlock(scope: !3244, file: !1, line: 1972, column: 30)
!3250 = !DILocation(line: 1973, column: 14, scope: !3248)
!3251 = !DILocation(line: 1973, column: 22, scope: !3248)
!3252 = !DILocation(line: 1973, column: 25, scope: !3253)
!3253 = !DILexicalBlockFile(scope: !3248, file: !1, discriminator: 1)
!3254 = !DILocation(line: 1973, column: 33, scope: !3253)
!3255 = !DILocation(line: 1973, column: 40, scope: !3253)
!3256 = !DILocation(line: 1973, column: 48, scope: !3253)
!3257 = !DILocation(line: 1974, column: 8, scope: !3248)
!3258 = !DILocation(line: 1974, column: 14, scope: !3248)
!3259 = !DILocation(line: 1974, column: 22, scope: !3248)
!3260 = !DILocation(line: 1974, column: 25, scope: !3253)
!3261 = !DILocation(line: 1974, column: 34, scope: !3253)
!3262 = !DILocation(line: 1974, column: 43, scope: !3253)
!3263 = !DILocation(line: 1974, column: 51, scope: !3253)
!3264 = !DILocation(line: 1975, column: 7, scope: !3248)
!3265 = !DILocation(line: 1975, column: 13, scope: !3248)
!3266 = !DILocation(line: 1975, column: 18, scope: !3248)
!3267 = !DILocation(line: 1975, column: 20, scope: !3248)
!3268 = !DILocation(line: 1976, column: 15, scope: !3248)
!3269 = !DILocation(line: 1976, column: 21, scope: !3248)
!3270 = !DILocation(line: 1976, column: 26, scope: !3248)
!3271 = !DILocation(line: 1976, column: 8, scope: !3248)
!3272 = !DILocation(line: 1976, column: 41, scope: !3248)
!3273 = !DILocation(line: 1976, column: 46, scope: !3248)
!3274 = !DILocation(line: 1977, column: 15, scope: !3248)
!3275 = !DILocation(line: 1977, column: 21, scope: !3248)
!3276 = !DILocation(line: 1977, column: 26, scope: !3248)
!3277 = !DILocation(line: 1977, column: 8, scope: !3248)
!3278 = !DILocation(line: 1977, column: 42, scope: !3248)
!3279 = !DILocation(line: 1973, column: 7, scope: !3280)
!3280 = !DILexicalBlockFile(scope: !3249, file: !1, discriminator: 2)
!3281 = !DILocation(line: 1978, column: 24, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3248, file: !1, line: 1977, column: 49)
!3283 = !DILocation(line: 1978, column: 4, scope: !3282)
!3284 = !DILocation(line: 1978, column: 13, scope: !3282)
!3285 = !DILocation(line: 1978, column: 22, scope: !3282)
!3286 = !DILocation(line: 1979, column: 4, scope: !3282)
!3287 = !DILocation(line: 1979, column: 10, scope: !3282)
!3288 = !DILocation(line: 1979, column: 19, scope: !3282)
!3289 = !DILocation(line: 1980, column: 4, scope: !3282)
!3290 = !DILocation(line: 1980, column: 10, scope: !3282)
!3291 = !DILocation(line: 1980, column: 31, scope: !3282)
!3292 = !DILocation(line: 1981, column: 4, scope: !3282)
!3293 = !DILocation(line: 1981, column: 10, scope: !3282)
!3294 = !DILocation(line: 1981, column: 13, scope: !3282)
!3295 = !DILocation(line: 1982, column: 4, scope: !3282)
!3296 = !DILocation(line: 1982, column: 12, scope: !3282)
!3297 = !DILocation(line: 1982, column: 19, scope: !3282)
!3298 = !DILocation(line: 1983, column: 3, scope: !3282)
!3299 = !DILocation(line: 1983, column: 14, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3301, file: !1, discriminator: 1)
!3301 = distinct !DILexicalBlock(scope: !3248, file: !1, line: 1983, column: 14)
!3302 = !DILocation(line: 1983, column: 20, scope: !3300)
!3303 = !DILocation(line: 1987, column: 8, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 1987, column: 8)
!3305 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 1983, column: 24)
!3306 = !DILocation(line: 1987, column: 15, scope: !3304)
!3307 = !DILocation(line: 1987, column: 23, scope: !3304)
!3308 = !DILocation(line: 1987, column: 26, scope: !3309)
!3309 = !DILexicalBlockFile(scope: !3304, file: !1, discriminator: 1)
!3310 = !DILocation(line: 1987, column: 34, scope: !3309)
!3311 = !DILocation(line: 1987, column: 43, scope: !3309)
!3312 = !DILocation(line: 1987, column: 8, scope: !3309)
!3313 = !DILocation(line: 1988, column: 24, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3304, file: !1, line: 1987, column: 49)
!3315 = !DILocation(line: 1988, column: 27, scope: !3314)
!3316 = !DILocation(line: 1988, column: 5, scope: !3314)
!3317 = !DILocation(line: 1991, column: 5, scope: !3314)
!3318 = !DILocation(line: 1996, column: 8, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 1996, column: 8)
!3320 = !DILocation(line: 1996, column: 14, scope: !3319)
!3321 = !DILocation(line: 1996, column: 8, scope: !3305)
!3322 = !DILocation(line: 1997, column: 24, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 1996, column: 25)
!3324 = !DILocation(line: 1997, column: 27, scope: !3323)
!3325 = !DILocation(line: 1997, column: 5, scope: !3323)
!3326 = !DILocation(line: 2000, column: 5, scope: !3323)
!3327 = !DILocation(line: 2005, column: 9, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 2005, column: 8)
!3329 = !DILocation(line: 2005, column: 15, scope: !3328)
!3330 = !DILocation(line: 2005, column: 23, scope: !3328)
!3331 = !DILocation(line: 2005, column: 8, scope: !3305)
!3332 = !DILocation(line: 2006, column: 24, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3328, file: !1, line: 2005, column: 29)
!3334 = !DILocation(line: 2006, column: 27, scope: !3333)
!3335 = !DILocation(line: 2006, column: 5, scope: !3333)
!3336 = !DILocation(line: 2009, column: 5, scope: !3333)
!3337 = !DILocation(line: 2011, column: 3, scope: !3305)
!3338 = !DILocation(line: 2011, column: 14, scope: !3339)
!3339 = !DILexicalBlockFile(scope: !3340, file: !1, discriminator: 1)
!3340 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 2011, column: 14)
!3341 = !DILocation(line: 2011, column: 21, scope: !3339)
!3342 = !DILocation(line: 2011, column: 29, scope: !3339)
!3343 = !DILocation(line: 2011, column: 32, scope: !3344)
!3344 = !DILexicalBlockFile(scope: !3340, file: !1, discriminator: 2)
!3345 = !DILocation(line: 2011, column: 40, scope: !3344)
!3346 = !DILocation(line: 2011, column: 14, scope: !3344)
!3347 = !DILocation(line: 2012, column: 4, scope: !3340)
!3348 = !DILocation(line: 2012, column: 10, scope: !3340)
!3349 = !DILocation(line: 2012, column: 31, scope: !3340)
!3350 = !DILocation(line: 2013, column: 12, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3340, file: !1, line: 2013, column: 12)
!3352 = !DILocation(line: 2013, column: 19, scope: !3351)
!3353 = !DILocation(line: 2013, column: 27, scope: !3351)
!3354 = !DILocation(line: 2013, column: 31, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !3351, file: !1, discriminator: 1)
!3356 = !DILocation(line: 2013, column: 37, scope: !3355)
!3357 = !DILocation(line: 2013, column: 45, scope: !3355)
!3358 = !DILocation(line: 2014, column: 8, scope: !3351)
!3359 = !DILocation(line: 2014, column: 16, scope: !3351)
!3360 = !DILocation(line: 2014, column: 19, scope: !3351)
!3361 = !DILocation(line: 2014, column: 22, scope: !3355)
!3362 = !DILocation(line: 2014, column: 30, scope: !3355)
!3363 = !DILocation(line: 2013, column: 12, scope: !3344)
!3364 = !DILocation(line: 2015, column: 4, scope: !3351)
!3365 = !DILocation(line: 2015, column: 10, scope: !3351)
!3366 = !DILocation(line: 2015, column: 24, scope: !3351)
!3367 = !DILocation(line: 2016, column: 7, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 2016, column: 7)
!3369 = !DILocation(line: 2016, column: 13, scope: !3368)
!3370 = !DILocation(line: 2016, column: 7, scope: !3249)
!3371 = !DILocalVariable(name: "r", scope: !3372, file: !1, line: 2017, type: !305)
!3372 = distinct !DILexicalBlock(scope: !3368, file: !1, line: 2016, column: 24)
!3373 = !DILocation(line: 2017, column: 22, scope: !3372)
!3374 = !DILocation(line: 2019, column: 8, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3372, file: !1, line: 2019, column: 8)
!3376 = !DILocation(line: 2019, column: 15, scope: !3375)
!3377 = !DILocation(line: 2019, column: 23, scope: !3375)
!3378 = !DILocation(line: 2019, column: 26, scope: !3379)
!3379 = !DILexicalBlockFile(scope: !3375, file: !1, discriminator: 1)
!3380 = !DILocation(line: 2019, column: 34, scope: !3379)
!3381 = !DILocation(line: 2019, column: 41, scope: !3379)
!3382 = !DILocation(line: 2019, column: 8, scope: !3379)
!3383 = !DILocation(line: 2020, column: 24, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3375, file: !1, line: 2019, column: 50)
!3385 = !DILocation(line: 2020, column: 27, scope: !3384)
!3386 = !DILocation(line: 2020, column: 5, scope: !3384)
!3387 = !DILocation(line: 2023, column: 5, scope: !3384)
!3388 = !DILocation(line: 2028, column: 9, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3372, file: !1, line: 2028, column: 8)
!3390 = !DILocation(line: 2028, column: 15, scope: !3389)
!3391 = !DILocation(line: 2028, column: 23, scope: !3389)
!3392 = !DILocation(line: 2028, column: 8, scope: !3372)
!3393 = !DILocation(line: 2029, column: 24, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 2028, column: 29)
!3395 = !DILocation(line: 2029, column: 27, scope: !3394)
!3396 = !DILocation(line: 2029, column: 5, scope: !3394)
!3397 = !DILocation(line: 2032, column: 5, scope: !3394)
!3398 = !DILocation(line: 2034, column: 4, scope: !3372)
!3399 = !DILocation(line: 2034, column: 12, scope: !3372)
!3400 = !DILocation(line: 2034, column: 19, scope: !3372)
!3401 = !DILocation(line: 2039, column: 34, scope: !3372)
!3402 = !DILocation(line: 2039, column: 40, scope: !3372)
!3403 = !DILocation(line: 2039, column: 50, scope: !3372)
!3404 = !DILocation(line: 2039, column: 19, scope: !3372)
!3405 = !DILocation(line: 2039, column: 25, scope: !3372)
!3406 = !DILocation(line: 2039, column: 32, scope: !3372)
!3407 = !DILocation(line: 2039, column: 4, scope: !3372)
!3408 = !DILocation(line: 2039, column: 10, scope: !3372)
!3409 = !DILocation(line: 2039, column: 17, scope: !3372)
!3410 = !DILocation(line: 2045, column: 13, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3372, file: !1, line: 2045, column: 4)
!3412 = !DILocation(line: 2045, column: 11, scope: !3411)
!3413 = !DILocation(line: 2045, column: 9, scope: !3411)
!3414 = !DILocation(line: 2045, column: 21, scope: !3415)
!3415 = !DILexicalBlockFile(scope: !3416, file: !1, discriminator: 1)
!3416 = distinct !DILexicalBlock(scope: !3411, file: !1, line: 2045, column: 4)
!3417 = !DILocation(line: 2045, column: 4, scope: !3415)
!3418 = !DILocation(line: 2046, column: 9, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !1, line: 2046, column: 9)
!3420 = distinct !DILexicalBlock(scope: !3416, file: !1, line: 2045, column: 39)
!3421 = !DILocation(line: 2046, column: 12, scope: !3419)
!3422 = !DILocation(line: 2046, column: 22, scope: !3419)
!3423 = !DILocation(line: 2046, column: 28, scope: !3419)
!3424 = !DILocation(line: 2046, column: 19, scope: !3419)
!3425 = !DILocation(line: 2046, column: 9, scope: !3420)
!3426 = !DILocation(line: 2047, column: 25, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3419, file: !1, line: 2046, column: 39)
!3428 = !DILocation(line: 2047, column: 28, scope: !3427)
!3429 = !DILocation(line: 2047, column: 6, scope: !3427)
!3430 = !DILocation(line: 2050, column: 6, scope: !3427)
!3431 = !DILocation(line: 2052, column: 4, scope: !3420)
!3432 = !DILocation(line: 2045, column: 28, scope: !3433)
!3433 = !DILexicalBlockFile(scope: !3416, file: !1, discriminator: 2)
!3434 = !DILocation(line: 2045, column: 31, scope: !3433)
!3435 = !DILocation(line: 2045, column: 26, scope: !3433)
!3436 = !DILocation(line: 2045, column: 4, scope: !3433)
!3437 = !DILocation(line: 2053, column: 8, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3372, file: !1, line: 2053, column: 8)
!3439 = !DILocation(line: 2053, column: 14, scope: !3438)
!3440 = !DILocation(line: 2053, column: 27, scope: !3438)
!3441 = !DILocation(line: 2053, column: 33, scope: !3438)
!3442 = !DILocation(line: 2053, column: 24, scope: !3438)
!3443 = !DILocation(line: 2053, column: 40, scope: !3438)
!3444 = !DILocation(line: 2054, column: 8, scope: !3438)
!3445 = !DILocation(line: 2054, column: 16, scope: !3438)
!3446 = !DILocation(line: 2053, column: 8, scope: !3447)
!3447 = !DILexicalBlockFile(scope: !3372, file: !1, discriminator: 1)
!3448 = !DILocation(line: 2055, column: 24, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3438, file: !1, line: 2054, column: 26)
!3450 = !DILocation(line: 2055, column: 27, scope: !3449)
!3451 = !DILocation(line: 2055, column: 5, scope: !3449)
!3452 = !DILocation(line: 2058, column: 5, scope: !3449)
!3453 = !DILocation(line: 2060, column: 3, scope: !3372)
!3454 = !DILocation(line: 2061, column: 2, scope: !3249)
!3455 = !DILocation(line: 2087, column: 16, scope: !527)
!3456 = !DILocation(line: 2087, column: 25, scope: !527)
!3457 = !DILocation(line: 2087, column: 2, scope: !527)
!3458 = !DILocation(line: 2088, column: 10, scope: !527)
!3459 = !DILocation(line: 2088, column: 2, scope: !527)
!3460 = !DILocation(line: 2090, column: 23, scope: !527)
!3461 = !DILocation(line: 2090, column: 29, scope: !527)
!3462 = !DILocation(line: 2090, column: 2, scope: !527)
!3463 = !DILocation(line: 2091, column: 7, scope: !527)
!3464 = !DILocation(line: 2091, column: 2, scope: !527)
!3465 = !DILocation(line: 2092, column: 2, scope: !527)
!3466 = !DILocation(line: 2093, column: 1, scope: !527)
!3467 = !DILocalVariable(name: "a", arg: 1, scope: !569, file: !1, line: 2998, type: !4)
!3468 = !DILocation(line: 2998, column: 37, scope: !569)
!3469 = !DILocalVariable(name: "heap", arg: 2, scope: !569, file: !1, line: 2998, type: !572)
!3470 = !DILocation(line: 2998, column: 59, scope: !569)
!3471 = !DILocalVariable(name: "file", arg: 3, scope: !569, file: !1, line: 2999, type: !305)
!3472 = !DILocation(line: 2999, column: 23, scope: !569)
!3473 = !DILocalVariable(name: "key", arg: 4, scope: !569, file: !1, line: 2999, type: !314)
!3474 = !DILocation(line: 2999, column: 38, scope: !569)
!3475 = !DILocalVariable(name: "file_key", scope: !569, file: !1, line: 3001, type: !314)
!3476 = !DILocation(line: 3001, column: 11, scope: !569)
!3477 = !DILocalVariable(name: "parent_key", scope: !569, file: !1, line: 3001, type: !314)
!3478 = !DILocation(line: 3001, column: 21, scope: !569)
!3479 = !DILocalVariable(name: "hole", scope: !569, file: !1, line: 3002, type: !23)
!3480 = !DILocation(line: 3002, column: 6, scope: !569)
!3481 = !DILocalVariable(name: "parent", scope: !569, file: !1, line: 3002, type: !23)
!3482 = !DILocation(line: 3002, column: 12, scope: !569)
!3483 = !DILocation(line: 3005, column: 6, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !569, file: !1, line: 3005, column: 6)
!3485 = !DILocation(line: 3005, column: 12, scope: !3484)
!3486 = !DILocation(line: 3005, column: 20, scope: !3484)
!3487 = !DILocation(line: 3005, column: 26, scope: !3484)
!3488 = !DILocation(line: 3005, column: 17, scope: !3484)
!3489 = !DILocation(line: 3005, column: 6, scope: !569)
!3490 = !DILocalVariable(name: "new_pending_files", scope: !3491, file: !1, line: 3006, type: !374)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !1, line: 3005, column: 37)
!3492 = !DILocation(line: 3006, column: 22, scope: !3491)
!3493 = !DILocalVariable(name: "new_size", scope: !3491, file: !1, line: 3007, type: !23)
!3494 = !DILocation(line: 3007, column: 7, scope: !3491)
!3495 = !DILocation(line: 3007, column: 18, scope: !3491)
!3496 = !DILocation(line: 3007, column: 24, scope: !3491)
!3497 = !DILocation(line: 3007, column: 34, scope: !3491)
!3498 = !DILocation(line: 3009, column: 7, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3491, file: !1, line: 3009, column: 7)
!3500 = !DILocation(line: 3009, column: 13, scope: !3499)
!3501 = !DILocation(line: 3009, column: 23, scope: !3499)
!3502 = !DILocation(line: 3009, column: 7, scope: !3491)
!3503 = !DILocation(line: 3010, column: 13, scope: !3499)
!3504 = !DILocation(line: 3010, column: 4, scope: !3499)
!3505 = !DILocation(line: 3012, column: 7, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3491, file: !1, line: 3012, column: 7)
!3507 = !DILocation(line: 3012, column: 19, scope: !3506)
!3508 = !DILocation(line: 3012, column: 25, scope: !3506)
!3509 = !DILocation(line: 3012, column: 16, scope: !3506)
!3510 = !DILocation(line: 3012, column: 7, scope: !3491)
!3511 = !DILocation(line: 3013, column: 23, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3506, file: !1, line: 3012, column: 36)
!3513 = !DILocation(line: 3013, column: 26, scope: !3512)
!3514 = !DILocation(line: 3013, column: 4, scope: !3512)
!3515 = !DILocation(line: 3015, column: 4, scope: !3512)
!3516 = !DILocation(line: 3018, column: 14, scope: !3491)
!3517 = !DILocation(line: 3018, column: 23, scope: !3491)
!3518 = !DILocation(line: 3018, column: 7, scope: !3491)
!3519 = !DILocation(line: 3017, column: 23, scope: !3491)
!3520 = !DILocation(line: 3017, column: 21, scope: !3491)
!3521 = !DILocation(line: 3019, column: 7, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3491, file: !1, line: 3019, column: 7)
!3523 = !DILocation(line: 3019, column: 25, scope: !3522)
!3524 = !DILocation(line: 3019, column: 7, scope: !3491)
!3525 = !DILocation(line: 3020, column: 23, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3522, file: !1, line: 3019, column: 34)
!3527 = !DILocation(line: 3020, column: 26, scope: !3526)
!3528 = !DILocation(line: 3020, column: 4, scope: !3526)
!3529 = !DILocation(line: 3022, column: 4, scope: !3526)
!3530 = !DILocation(line: 3024, column: 10, scope: !3491)
!3531 = !DILocation(line: 3024, column: 3, scope: !3491)
!3532 = !DILocation(line: 3024, column: 29, scope: !3491)
!3533 = !DILocation(line: 3024, column: 35, scope: !3491)
!3534 = !DILocation(line: 3025, column: 7, scope: !3491)
!3535 = !DILocation(line: 3025, column: 13, scope: !3491)
!3536 = !DILocation(line: 3025, column: 23, scope: !3491)
!3537 = !DILocation(line: 3026, column: 7, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3491, file: !1, line: 3026, column: 7)
!3539 = !DILocation(line: 3026, column: 13, scope: !3538)
!3540 = !DILocation(line: 3026, column: 19, scope: !3538)
!3541 = !DILocation(line: 3026, column: 7, scope: !3491)
!3542 = !DILocation(line: 3027, column: 9, scope: !3538)
!3543 = !DILocation(line: 3027, column: 15, scope: !3538)
!3544 = !DILocation(line: 3027, column: 4, scope: !3538)
!3545 = !DILocation(line: 3028, column: 17, scope: !3491)
!3546 = !DILocation(line: 3028, column: 3, scope: !3491)
!3547 = !DILocation(line: 3028, column: 9, scope: !3491)
!3548 = !DILocation(line: 3028, column: 15, scope: !3491)
!3549 = !DILocation(line: 3029, column: 21, scope: !3491)
!3550 = !DILocation(line: 3029, column: 3, scope: !3491)
!3551 = !DILocation(line: 3029, column: 9, scope: !3491)
!3552 = !DILocation(line: 3029, column: 19, scope: !3491)
!3553 = !DILocation(line: 3030, column: 2, scope: !3491)
!3554 = !DILocation(line: 3032, column: 25, scope: !569)
!3555 = !DILocation(line: 3032, column: 13, scope: !569)
!3556 = !DILocation(line: 3032, column: 19, scope: !569)
!3557 = !DILocation(line: 3032, column: 23, scope: !569)
!3558 = !DILocation(line: 3032, column: 11, scope: !569)
!3559 = !DILocation(line: 3037, column: 9, scope: !569)
!3560 = !DILocation(line: 3037, column: 15, scope: !569)
!3561 = !DILocation(line: 3037, column: 19, scope: !569)
!3562 = !DILocation(line: 3037, column: 7, scope: !569)
!3563 = !DILocation(line: 3038, column: 2, scope: !569)
!3564 = !DILocation(line: 3038, column: 9, scope: !3565)
!3565 = !DILexicalBlockFile(scope: !569, file: !1, discriminator: 1)
!3566 = !DILocation(line: 3038, column: 14, scope: !3565)
!3567 = !DILocation(line: 3038, column: 2, scope: !3565)
!3568 = !DILocation(line: 3039, column: 13, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !569, file: !1, line: 3038, column: 19)
!3570 = !DILocation(line: 3039, column: 18, scope: !3569)
!3571 = !DILocation(line: 3039, column: 22, scope: !3569)
!3572 = !DILocation(line: 3039, column: 10, scope: !3569)
!3573 = !DILocation(line: 3040, column: 28, scope: !3569)
!3574 = !DILocation(line: 3040, column: 16, scope: !3569)
!3575 = !DILocation(line: 3040, column: 22, scope: !3569)
!3576 = !DILocation(line: 3040, column: 37, scope: !3569)
!3577 = !DILocation(line: 3040, column: 14, scope: !3569)
!3578 = !DILocation(line: 3041, column: 7, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3569, file: !1, line: 3041, column: 7)
!3580 = !DILocation(line: 3041, column: 19, scope: !3579)
!3581 = !DILocation(line: 3041, column: 16, scope: !3579)
!3582 = !DILocation(line: 3041, column: 7, scope: !3569)
!3583 = !DILocation(line: 3042, column: 24, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3579, file: !1, line: 3041, column: 31)
!3585 = !DILocation(line: 3042, column: 16, scope: !3584)
!3586 = !DILocation(line: 3042, column: 4, scope: !3584)
!3587 = !DILocation(line: 3042, column: 10, scope: !3584)
!3588 = !DILocation(line: 3042, column: 22, scope: !3584)
!3589 = !DILocation(line: 3043, column: 4, scope: !3584)
!3590 = !DILocation(line: 3046, column: 35, scope: !3569)
!3591 = !DILocation(line: 3046, column: 23, scope: !3569)
!3592 = !DILocation(line: 3046, column: 29, scope: !3569)
!3593 = !DILocation(line: 3046, column: 15, scope: !3569)
!3594 = !DILocation(line: 3046, column: 3, scope: !3569)
!3595 = !DILocation(line: 3046, column: 9, scope: !3569)
!3596 = !DILocation(line: 3046, column: 21, scope: !3569)
!3597 = !DILocation(line: 3047, column: 10, scope: !3569)
!3598 = !DILocation(line: 3047, column: 8, scope: !3569)
!3599 = !DILocation(line: 3038, column: 2, scope: !3600)
!3600 = !DILexicalBlockFile(scope: !569, file: !1, discriminator: 2)
!3601 = !DILocation(line: 3049, column: 19, scope: !569)
!3602 = !DILocation(line: 3049, column: 2, scope: !569)
!3603 = !DILocation(line: 3049, column: 8, scope: !569)
!3604 = !DILocation(line: 3049, column: 17, scope: !569)
!3605 = !DILocation(line: 3051, column: 2, scope: !569)
!3606 = !DILocation(line: 3052, column: 1, scope: !569)
!3607 = !DILocalVariable(name: "p", arg: 1, scope: !530, file: !1, line: 3102, type: !43)
!3608 = !DILocation(line: 3102, column: 17, scope: !530)
!3609 = !DILocalVariable(name: "n", arg: 2, scope: !530, file: !1, line: 3102, type: !23)
!3610 = !DILocation(line: 3102, column: 24, scope: !530)
!3611 = !DILocalVariable(name: "v", scope: !530, file: !1, line: 3104, type: !488)
!3612 = !DILocation(line: 3104, column: 23, scope: !530)
!3613 = !DILocation(line: 3104, column: 50, scope: !530)
!3614 = !DILocation(line: 3105, column: 6, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !530, file: !1, line: 3105, column: 6)
!3616 = !DILocation(line: 3105, column: 8, scope: !3615)
!3617 = !DILocation(line: 3105, column: 6, scope: !530)
!3618 = !DILocation(line: 3106, column: 10, scope: !3615)
!3619 = !DILocation(line: 3106, column: 27, scope: !3615)
!3620 = !DILocation(line: 3106, column: 29, scope: !3615)
!3621 = !DILocation(line: 3106, column: 34, scope: !3615)
!3622 = !DILocation(line: 3106, column: 36, scope: !3615)
!3623 = !DILocation(line: 3106, column: 23, scope: !3615)
!3624 = !DILocation(line: 3106, column: 21, scope: !3615)
!3625 = !DILocation(line: 3106, column: 15, scope: !3615)
!3626 = !DILocation(line: 3106, column: 3, scope: !3615)
!3627 = !DILocation(line: 3107, column: 6, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !530, file: !1, line: 3107, column: 6)
!3629 = !DILocation(line: 3107, column: 8, scope: !3628)
!3630 = !DILocation(line: 3107, column: 6, scope: !530)
!3631 = !DILocation(line: 3108, column: 10, scope: !3628)
!3632 = !DILocation(line: 3108, column: 3, scope: !3628)
!3633 = !DILocation(line: 3109, column: 2, scope: !530)
!3634 = !DILocation(line: 3110, column: 1, scope: !530)
!3635 = !DILocalVariable(name: "v", arg: 1, scope: !533, file: !1, line: 3113, type: !488)
!3636 = !DILocation(line: 3113, column: 31, scope: !533)
!3637 = !DILocalVariable(name: "tm", scope: !533, file: !1, line: 3115, type: !540)
!3638 = !DILocation(line: 3115, column: 12, scope: !533)
!3639 = !DILocalVariable(name: "offset", scope: !533, file: !1, line: 3116, type: !23)
!3640 = !DILocation(line: 3116, column: 6, scope: !533)
!3641 = !DILocalVariable(name: "t", scope: !533, file: !1, line: 3117, type: !327)
!3642 = !DILocation(line: 3117, column: 9, scope: !533)
!3643 = !DILocation(line: 3119, column: 2, scope: !533)
!3644 = !DILocation(line: 3120, column: 15, scope: !533)
!3645 = !DILocation(line: 3120, column: 5, scope: !533)
!3646 = !DILocation(line: 3120, column: 13, scope: !533)
!3647 = !DILocation(line: 3121, column: 14, scope: !533)
!3648 = !DILocation(line: 3121, column: 19, scope: !533)
!3649 = !DILocation(line: 3121, column: 5, scope: !533)
!3650 = !DILocation(line: 3121, column: 12, scope: !533)
!3651 = !DILocation(line: 3122, column: 15, scope: !533)
!3652 = !DILocation(line: 3122, column: 5, scope: !533)
!3653 = !DILocation(line: 3122, column: 13, scope: !533)
!3654 = !DILocation(line: 3123, column: 15, scope: !533)
!3655 = !DILocation(line: 3123, column: 5, scope: !533)
!3656 = !DILocation(line: 3123, column: 13, scope: !533)
!3657 = !DILocation(line: 3124, column: 14, scope: !533)
!3658 = !DILocation(line: 3124, column: 5, scope: !533)
!3659 = !DILocation(line: 3124, column: 12, scope: !533)
!3660 = !DILocation(line: 3125, column: 14, scope: !533)
!3661 = !DILocation(line: 3125, column: 5, scope: !533)
!3662 = !DILocation(line: 3125, column: 12, scope: !533)
!3663 = !DILocation(line: 3127, column: 33, scope: !533)
!3664 = !DILocation(line: 3127, column: 11, scope: !533)
!3665 = !DILocation(line: 3127, column: 9, scope: !533)
!3666 = !DILocation(line: 3128, column: 6, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !533, file: !1, line: 3128, column: 6)
!3668 = !DILocation(line: 3128, column: 13, scope: !3667)
!3669 = !DILocation(line: 3128, column: 19, scope: !3667)
!3670 = !DILocation(line: 3128, column: 22, scope: !3671)
!3671 = !DILexicalBlockFile(scope: !3667, file: !1, discriminator: 1)
!3672 = !DILocation(line: 3128, column: 29, scope: !3671)
!3673 = !DILocation(line: 3128, column: 6, scope: !3671)
!3674 = !DILocation(line: 3129, column: 17, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3667, file: !1, line: 3128, column: 35)
!3676 = !DILocation(line: 3129, column: 24, scope: !3675)
!3677 = !DILocation(line: 3129, column: 6, scope: !3675)
!3678 = !DILocation(line: 3129, column: 14, scope: !3675)
!3679 = !DILocation(line: 3130, column: 17, scope: !3675)
!3680 = !DILocation(line: 3130, column: 24, scope: !3675)
!3681 = !DILocation(line: 3130, column: 29, scope: !3675)
!3682 = !DILocation(line: 3130, column: 6, scope: !3675)
!3683 = !DILocation(line: 3130, column: 13, scope: !3675)
!3684 = !DILocation(line: 3131, column: 2, scope: !3675)
!3685 = !DILocation(line: 3132, column: 6, scope: !533)
!3686 = !DILocation(line: 3132, column: 4, scope: !533)
!3687 = !DILocation(line: 3133, column: 6, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !533, file: !1, line: 3133, column: 6)
!3689 = !DILocation(line: 3133, column: 8, scope: !3688)
!3690 = !DILocation(line: 3133, column: 6, scope: !533)
!3691 = !DILocation(line: 3134, column: 3, scope: !3688)
!3692 = !DILocation(line: 3135, column: 10, scope: !533)
!3693 = !DILocation(line: 3135, column: 2, scope: !533)
!3694 = !DILocation(line: 3136, column: 1, scope: !533)
!3695 = !DILocalVariable(name: "a", arg: 1, scope: !553, file: !1, line: 2096, type: !4)
!3696 = !DILocation(line: 2096, column: 38, scope: !553)
!3697 = !DILocalVariable(name: "file", arg: 2, scope: !553, file: !1, line: 2096, type: !305)
!3698 = !DILocation(line: 2096, column: 59, scope: !553)
!3699 = !DILocalVariable(name: "p", arg: 3, scope: !553, file: !1, line: 2097, type: !488)
!3700 = !DILocation(line: 2097, column: 26, scope: !553)
!3701 = !DILocalVariable(name: "end", arg: 4, scope: !553, file: !1, line: 2097, type: !488)
!3702 = !DILocation(line: 2097, column: 50, scope: !553)
!3703 = !DILocalVariable(name: "iso9660", scope: !553, file: !1, line: 2099, type: !292)
!3704 = !DILocation(line: 2099, column: 18, scope: !553)
!3705 = !DILocation(line: 2101, column: 31, scope: !553)
!3706 = !DILocation(line: 2101, column: 34, scope: !553)
!3707 = !DILocation(line: 2101, column: 42, scope: !553)
!3708 = !DILocation(line: 2101, column: 12, scope: !553)
!3709 = !DILocation(line: 2101, column: 10, scope: !553)
!3710 = !DILocation(line: 2103, column: 2, scope: !553)
!3711 = !DILocation(line: 2103, column: 9, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !553, file: !1, discriminator: 1)
!3713 = !DILocation(line: 2103, column: 11, scope: !3712)
!3714 = !DILocation(line: 2103, column: 18, scope: !3712)
!3715 = !DILocation(line: 2103, column: 15, scope: !3712)
!3716 = !DILocation(line: 2104, column: 6, scope: !553)
!3717 = !DILocation(line: 2104, column: 9, scope: !3712)
!3718 = !DILocation(line: 2104, column: 14, scope: !3712)
!3719 = !DILocation(line: 2104, column: 21, scope: !3712)
!3720 = !DILocation(line: 2104, column: 24, scope: !3721)
!3721 = !DILexicalBlockFile(scope: !553, file: !1, discriminator: 2)
!3722 = !DILocation(line: 2104, column: 29, scope: !3721)
!3723 = !DILocation(line: 2105, column: 6, scope: !553)
!3724 = !DILocation(line: 2105, column: 9, scope: !3712)
!3725 = !DILocation(line: 2105, column: 14, scope: !3712)
!3726 = !DILocation(line: 2105, column: 21, scope: !3712)
!3727 = !DILocation(line: 2105, column: 24, scope: !3721)
!3728 = !DILocation(line: 2105, column: 29, scope: !3721)
!3729 = !DILocation(line: 2106, column: 6, scope: !553)
!3730 = !DILocation(line: 2106, column: 9, scope: !3712)
!3731 = !DILocation(line: 2106, column: 14, scope: !3712)
!3732 = !DILocation(line: 2107, column: 6, scope: !553)
!3733 = !DILocation(line: 2107, column: 9, scope: !3712)
!3734 = !DILocation(line: 2107, column: 13, scope: !3712)
!3735 = !DILocation(line: 2107, column: 11, scope: !3712)
!3736 = !DILocation(line: 2107, column: 21, scope: !3712)
!3737 = !DILocation(line: 2107, column: 18, scope: !3712)
!3738 = !DILocation(line: 2103, column: 2, scope: !3721)
!3739 = !DILocalVariable(name: "data", scope: !3740, file: !1, line: 2108, type: !488)
!3740 = distinct !DILexicalBlock(scope: !553, file: !1, line: 2107, column: 26)
!3741 = !DILocation(line: 2108, column: 24, scope: !3740)
!3742 = !DILocation(line: 2108, column: 31, scope: !3740)
!3743 = !DILocation(line: 2108, column: 33, scope: !3740)
!3744 = !DILocalVariable(name: "data_length", scope: !3740, file: !1, line: 2109, type: !23)
!3745 = !DILocation(line: 2109, column: 7, scope: !3740)
!3746 = !DILocation(line: 2109, column: 21, scope: !3740)
!3747 = !DILocation(line: 2109, column: 26, scope: !3740)
!3748 = !DILocalVariable(name: "version", scope: !3740, file: !1, line: 2110, type: !23)
!3749 = !DILocation(line: 2110, column: 7, scope: !3740)
!3750 = !DILocation(line: 2110, column: 17, scope: !3740)
!3751 = !DILocation(line: 2112, column: 10, scope: !3740)
!3752 = !DILocation(line: 2112, column: 3, scope: !3740)
!3753 = !DILocation(line: 2114, column: 8, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2114, column: 8)
!3755 = distinct !DILexicalBlock(scope: !3740, file: !1, line: 2112, column: 16)
!3756 = !DILocation(line: 2114, column: 13, scope: !3754)
!3757 = !DILocation(line: 2114, column: 8, scope: !3755)
!3758 = !DILocation(line: 2115, column: 9, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !1, line: 2115, column: 9)
!3760 = distinct !DILexicalBlock(scope: !3754, file: !1, line: 2114, column: 21)
!3761 = !DILocation(line: 2115, column: 17, scope: !3759)
!3762 = !DILocation(line: 2115, column: 22, scope: !3759)
!3763 = !DILocation(line: 2115, column: 25, scope: !3764)
!3764 = !DILexicalBlockFile(scope: !3759, file: !1, discriminator: 1)
!3765 = !DILocation(line: 2115, column: 37, scope: !3764)
!3766 = !DILocation(line: 2115, column: 9, scope: !3764)
!3767 = !DILocalVariable(name: "location", scope: !3768, file: !1, line: 2122, type: !409)
!3768 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 2115, column: 44)
!3769 = !DILocation(line: 2122, column: 14, scope: !3768)
!3770 = !DILocation(line: 2123, column: 26, scope: !3768)
!3771 = !DILocation(line: 2123, column: 10, scope: !3768)
!3772 = !DILocation(line: 2125, column: 26, scope: !3768)
!3773 = !DILocation(line: 2125, column: 30, scope: !3768)
!3774 = !DILocation(line: 2125, column: 10, scope: !3768)
!3775 = !DILocation(line: 2124, column: 6, scope: !3768)
!3776 = !DILocation(line: 2124, column: 12, scope: !3768)
!3777 = !DILocation(line: 2124, column: 22, scope: !3768)
!3778 = !DILocation(line: 2127, column: 26, scope: !3768)
!3779 = !DILocation(line: 2127, column: 30, scope: !3768)
!3780 = !DILocation(line: 2127, column: 10, scope: !3768)
!3781 = !DILocation(line: 2126, column: 6, scope: !3768)
!3782 = !DILocation(line: 2126, column: 12, scope: !3768)
!3783 = !DILocation(line: 2126, column: 20, scope: !3768)
!3784 = !DILocation(line: 2128, column: 22, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3768, file: !1, line: 2128, column: 10)
!3786 = !DILocation(line: 2128, column: 25, scope: !3785)
!3787 = !DILocation(line: 2128, column: 35, scope: !3785)
!3788 = !DILocation(line: 2128, column: 10, scope: !3785)
!3789 = !DILocation(line: 2129, column: 10, scope: !3785)
!3790 = !DILocation(line: 2128, column: 10, scope: !3768)
!3791 = !DILocation(line: 2130, column: 7, scope: !3785)
!3792 = !DILocation(line: 2131, column: 5, scope: !3768)
!3793 = !DILocation(line: 2132, column: 4, scope: !3760)
!3794 = !DILocation(line: 2133, column: 13, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3754, file: !1, line: 2133, column: 13)
!3796 = !DILocation(line: 2133, column: 18, scope: !3795)
!3797 = !DILocation(line: 2133, column: 13, scope: !3754)
!3798 = !DILocation(line: 2134, column: 9, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !1, line: 2134, column: 9)
!3800 = distinct !DILexicalBlock(scope: !3795, file: !1, line: 2133, column: 26)
!3801 = !DILocation(line: 2134, column: 17, scope: !3799)
!3802 = !DILocation(line: 2134, column: 22, scope: !3799)
!3803 = !DILocation(line: 2134, column: 25, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3799, file: !1, discriminator: 1)
!3805 = !DILocation(line: 2134, column: 37, scope: !3804)
!3806 = !DILocation(line: 2134, column: 9, scope: !3804)
!3807 = !DILocation(line: 2136, column: 10, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3799, file: !1, line: 2134, column: 43)
!3809 = !DILocation(line: 2136, column: 19, scope: !3808)
!3810 = !DILocation(line: 2137, column: 36, scope: !3808)
!3811 = !DILocation(line: 2137, column: 20, scope: !3808)
!3812 = !DILocation(line: 2137, column: 10, scope: !3808)
!3813 = !DILocation(line: 2136, column: 38, scope: !3808)
!3814 = !DILocation(line: 2135, column: 6, scope: !3808)
!3815 = !DILocation(line: 2135, column: 12, scope: !3808)
!3816 = !DILocation(line: 2135, column: 22, scope: !3808)
!3817 = !DILocation(line: 2138, column: 6, scope: !3808)
!3818 = !DILocation(line: 2138, column: 15, scope: !3808)
!3819 = !DILocation(line: 2138, column: 29, scope: !3808)
!3820 = !DILocation(line: 2139, column: 5, scope: !3808)
!3821 = !DILocation(line: 2140, column: 4, scope: !3800)
!3822 = !DILocation(line: 2141, column: 4, scope: !3755)
!3823 = !DILocation(line: 2143, column: 8, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2143, column: 8)
!3825 = !DILocation(line: 2143, column: 13, scope: !3824)
!3826 = !DILocation(line: 2143, column: 8, scope: !3755)
!3827 = !DILocation(line: 2144, column: 9, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !1, line: 2144, column: 9)
!3829 = distinct !DILexicalBlock(scope: !3824, file: !1, line: 2143, column: 21)
!3830 = !DILocation(line: 2144, column: 17, scope: !3828)
!3831 = !DILocation(line: 2144, column: 9, scope: !3829)
!3832 = !DILocation(line: 2145, column: 26, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3828, file: !1, line: 2144, column: 23)
!3834 = !DILocation(line: 2146, column: 10, scope: !3833)
!3835 = !DILocation(line: 2146, column: 16, scope: !3833)
!3836 = !DILocation(line: 2145, column: 6, scope: !3833)
!3837 = !DILocation(line: 2147, column: 6, scope: !3833)
!3838 = !DILocation(line: 2147, column: 15, scope: !3833)
!3839 = !DILocation(line: 2147, column: 29, scope: !3833)
!3840 = !DILocation(line: 2148, column: 5, scope: !3833)
!3841 = !DILocation(line: 2149, column: 4, scope: !3829)
!3842 = !DILocation(line: 2150, column: 4, scope: !3755)
!3843 = !DILocation(line: 2159, column: 8, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2159, column: 8)
!3845 = !DILocation(line: 2159, column: 13, scope: !3844)
!3846 = !DILocation(line: 2159, column: 8, scope: !3755)
!3847 = !DILocation(line: 2160, column: 9, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 2160, column: 9)
!3849 = distinct !DILexicalBlock(scope: !3844, file: !1, line: 2159, column: 21)
!3850 = !DILocation(line: 2160, column: 17, scope: !3848)
!3851 = !DILocation(line: 2160, column: 22, scope: !3848)
!3852 = !DILocation(line: 2160, column: 25, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !3848, file: !1, discriminator: 1)
!3854 = !DILocation(line: 2160, column: 37, scope: !3853)
!3855 = !DILocation(line: 2160, column: 9, scope: !3853)
!3856 = !DILocation(line: 2161, column: 23, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3848, file: !1, line: 2160, column: 44)
!3858 = !DILocation(line: 2161, column: 19, scope: !3857)
!3859 = !DILocation(line: 2161, column: 6, scope: !3857)
!3860 = !DILocation(line: 2161, column: 12, scope: !3857)
!3861 = !DILocation(line: 2161, column: 17, scope: !3857)
!3862 = !DILocation(line: 2162, column: 6, scope: !3857)
!3863 = !DILocation(line: 2162, column: 12, scope: !3857)
!3864 = !DILocation(line: 2162, column: 17, scope: !3857)
!3865 = !DILocation(line: 2163, column: 24, scope: !3857)
!3866 = !DILocation(line: 2163, column: 29, scope: !3857)
!3867 = !DILocation(line: 2163, column: 20, scope: !3857)
!3868 = !DILocation(line: 2163, column: 6, scope: !3857)
!3869 = !DILocation(line: 2163, column: 12, scope: !3857)
!3870 = !DILocation(line: 2163, column: 17, scope: !3857)
!3871 = !DILocation(line: 2164, column: 6, scope: !3857)
!3872 = !DILocation(line: 2164, column: 15, scope: !3857)
!3873 = !DILocation(line: 2164, column: 29, scope: !3857)
!3874 = !DILocation(line: 2165, column: 5, scope: !3857)
!3875 = !DILocation(line: 2166, column: 4, scope: !3849)
!3876 = !DILocation(line: 2167, column: 13, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3844, file: !1, line: 2167, column: 13)
!3878 = !DILocation(line: 2167, column: 18, scope: !3877)
!3879 = !DILocation(line: 2167, column: 13, scope: !3844)
!3880 = !DILocation(line: 2176, column: 9, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !1, line: 2176, column: 9)
!3882 = distinct !DILexicalBlock(scope: !3877, file: !1, line: 2167, column: 26)
!3883 = !DILocation(line: 2176, column: 17, scope: !3881)
!3884 = !DILocation(line: 2176, column: 9, scope: !3882)
!3885 = !DILocation(line: 2177, column: 10, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !1, line: 2177, column: 10)
!3887 = distinct !DILexicalBlock(scope: !3881, file: !1, line: 2176, column: 23)
!3888 = !DILocation(line: 2177, column: 22, scope: !3886)
!3889 = !DILocation(line: 2177, column: 10, scope: !3887)
!3890 = !DILocation(line: 2179, column: 17, scope: !3886)
!3891 = !DILocation(line: 2179, column: 13, scope: !3886)
!3892 = !DILocation(line: 2178, column: 7, scope: !3886)
!3893 = !DILocation(line: 2178, column: 13, scope: !3886)
!3894 = !DILocation(line: 2179, column: 11, scope: !3886)
!3895 = !DILocation(line: 2180, column: 10, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3887, file: !1, line: 2180, column: 10)
!3897 = !DILocation(line: 2180, column: 22, scope: !3896)
!3898 = !DILocation(line: 2180, column: 10, scope: !3887)
!3899 = !DILocation(line: 2182, column: 17, scope: !3896)
!3900 = !DILocation(line: 2182, column: 22, scope: !3896)
!3901 = !DILocation(line: 2182, column: 13, scope: !3896)
!3902 = !DILocation(line: 2181, column: 7, scope: !3896)
!3903 = !DILocation(line: 2181, column: 13, scope: !3896)
!3904 = !DILocation(line: 2182, column: 11, scope: !3896)
!3905 = !DILocation(line: 2183, column: 10, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3887, file: !1, line: 2183, column: 10)
!3907 = !DILocation(line: 2183, column: 22, scope: !3906)
!3908 = !DILocation(line: 2183, column: 10, scope: !3887)
!3909 = !DILocation(line: 2185, column: 17, scope: !3906)
!3910 = !DILocation(line: 2185, column: 22, scope: !3906)
!3911 = !DILocation(line: 2185, column: 13, scope: !3906)
!3912 = !DILocation(line: 2184, column: 7, scope: !3906)
!3913 = !DILocation(line: 2184, column: 13, scope: !3906)
!3914 = !DILocation(line: 2185, column: 11, scope: !3906)
!3915 = !DILocation(line: 2186, column: 10, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3887, file: !1, line: 2186, column: 10)
!3917 = !DILocation(line: 2186, column: 22, scope: !3916)
!3918 = !DILocation(line: 2186, column: 10, scope: !3887)
!3919 = !DILocation(line: 2188, column: 17, scope: !3916)
!3920 = !DILocation(line: 2188, column: 22, scope: !3916)
!3921 = !DILocation(line: 2188, column: 13, scope: !3916)
!3922 = !DILocation(line: 2187, column: 7, scope: !3916)
!3923 = !DILocation(line: 2187, column: 13, scope: !3916)
!3924 = !DILocation(line: 2188, column: 11, scope: !3916)
!3925 = !DILocation(line: 2189, column: 10, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3887, file: !1, line: 2189, column: 10)
!3927 = !DILocation(line: 2189, column: 22, scope: !3926)
!3928 = !DILocation(line: 2189, column: 10, scope: !3887)
!3929 = !DILocation(line: 2191, column: 17, scope: !3926)
!3930 = !DILocation(line: 2191, column: 22, scope: !3926)
!3931 = !DILocation(line: 2191, column: 13, scope: !3926)
!3932 = !DILocation(line: 2190, column: 7, scope: !3926)
!3933 = !DILocation(line: 2190, column: 13, scope: !3926)
!3934 = !DILocation(line: 2191, column: 11, scope: !3926)
!3935 = !DILocation(line: 2192, column: 6, scope: !3887)
!3936 = !DILocation(line: 2192, column: 15, scope: !3887)
!3937 = !DILocation(line: 2192, column: 29, scope: !3887)
!3938 = !DILocation(line: 2193, column: 5, scope: !3887)
!3939 = !DILocation(line: 2194, column: 4, scope: !3882)
!3940 = !DILocation(line: 2195, column: 4, scope: !3755)
!3941 = !DILocation(line: 2197, column: 8, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2197, column: 8)
!3943 = !DILocation(line: 2197, column: 13, scope: !3942)
!3944 = !DILocation(line: 2197, column: 20, scope: !3942)
!3945 = !DILocation(line: 2197, column: 23, scope: !3946)
!3946 = !DILexicalBlockFile(scope: !3942, file: !1, discriminator: 1)
!3947 = !DILocation(line: 2197, column: 31, scope: !3946)
!3948 = !DILocation(line: 2197, column: 8, scope: !3946)
!3949 = !DILocation(line: 2198, column: 5, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3942, file: !1, line: 2197, column: 37)
!3951 = !DILocation(line: 2198, column: 11, scope: !3950)
!3952 = !DILocation(line: 2198, column: 14, scope: !3950)
!3953 = !DILocation(line: 2199, column: 5, scope: !3950)
!3954 = !DILocation(line: 2199, column: 14, scope: !3950)
!3955 = !DILocation(line: 2199, column: 28, scope: !3950)
!3956 = !DILocation(line: 2200, column: 4, scope: !3950)
!3957 = !DILocation(line: 2201, column: 13, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3942, file: !1, line: 2201, column: 13)
!3959 = !DILocation(line: 2201, column: 18, scope: !3958)
!3960 = !DILocation(line: 2201, column: 25, scope: !3958)
!3961 = !DILocation(line: 2201, column: 28, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3958, file: !1, discriminator: 1)
!3963 = !DILocation(line: 2201, column: 36, scope: !3962)
!3964 = !DILocation(line: 2201, column: 13, scope: !3962)
!3965 = !DILocation(line: 2208, column: 4, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3958, file: !1, line: 2201, column: 42)
!3967 = !DILocation(line: 2209, column: 4, scope: !3755)
!3968 = !DILocation(line: 2211, column: 8, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2211, column: 8)
!3970 = !DILocation(line: 2211, column: 13, scope: !3969)
!3971 = !DILocation(line: 2211, column: 8, scope: !3755)
!3972 = !DILocation(line: 2212, column: 9, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !1, line: 2212, column: 9)
!3974 = distinct !DILexicalBlock(scope: !3969, file: !1, line: 2211, column: 21)
!3975 = !DILocation(line: 2212, column: 17, scope: !3973)
!3976 = !DILocation(line: 2212, column: 9, scope: !3974)
!3977 = !DILocation(line: 2213, column: 26, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3973, file: !1, line: 2212, column: 23)
!3979 = !DILocation(line: 2214, column: 10, scope: !3978)
!3980 = !DILocation(line: 2214, column: 16, scope: !3978)
!3981 = !DILocation(line: 2213, column: 6, scope: !3978)
!3982 = !DILocation(line: 2215, column: 6, scope: !3978)
!3983 = !DILocation(line: 2215, column: 15, scope: !3978)
!3984 = !DILocation(line: 2215, column: 29, scope: !3978)
!3985 = !DILocation(line: 2216, column: 5, scope: !3978)
!3986 = !DILocation(line: 2217, column: 4, scope: !3974)
!3987 = !DILocation(line: 2218, column: 13, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3969, file: !1, line: 2218, column: 13)
!3989 = !DILocation(line: 2218, column: 18, scope: !3988)
!3990 = !DILocation(line: 2219, column: 8, scope: !3988)
!3991 = !DILocation(line: 2219, column: 11, scope: !3992)
!3992 = !DILexicalBlockFile(scope: !3988, file: !1, discriminator: 1)
!3993 = !DILocation(line: 2219, column: 23, scope: !3992)
!3994 = !DILocation(line: 2219, column: 28, scope: !3992)
!3995 = !DILocation(line: 2219, column: 31, scope: !3996)
!3996 = !DILexicalBlockFile(scope: !3988, file: !1, discriminator: 2)
!3997 = !DILocation(line: 2219, column: 39, scope: !3996)
!3998 = !DILocation(line: 2218, column: 13, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !3969, file: !1, discriminator: 1)
!4000 = !DILocation(line: 2229, column: 5, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3988, file: !1, line: 2219, column: 45)
!4002 = !DILocation(line: 2229, column: 14, scope: !4001)
!4003 = !DILocation(line: 2229, column: 23, scope: !4001)
!4004 = !DILocation(line: 2230, column: 5, scope: !4001)
!4005 = !DILocation(line: 2230, column: 14, scope: !4001)
!4006 = !DILocation(line: 2230, column: 28, scope: !4001)
!4007 = !DILocation(line: 2231, column: 5, scope: !4001)
!4008 = !DILocation(line: 2233, column: 4, scope: !3755)
!4009 = !DILocation(line: 2235, column: 8, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2235, column: 8)
!4011 = !DILocation(line: 2235, column: 13, scope: !4010)
!4012 = !DILocation(line: 2235, column: 8, scope: !3755)
!4013 = !DILocation(line: 2236, column: 9, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 2236, column: 9)
!4015 = distinct !DILexicalBlock(scope: !4010, file: !1, line: 2235, column: 21)
!4016 = !DILocation(line: 2236, column: 17, scope: !4014)
!4017 = !DILocation(line: 2236, column: 9, scope: !4015)
!4018 = !DILocation(line: 2237, column: 26, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4014, file: !1, line: 2236, column: 23)
!4020 = !DILocation(line: 2238, column: 10, scope: !4019)
!4021 = !DILocation(line: 2238, column: 16, scope: !4019)
!4022 = !DILocation(line: 2237, column: 6, scope: !4019)
!4023 = !DILocation(line: 2239, column: 6, scope: !4019)
!4024 = !DILocation(line: 2239, column: 15, scope: !4019)
!4025 = !DILocation(line: 2239, column: 29, scope: !4019)
!4026 = !DILocation(line: 2240, column: 5, scope: !4019)
!4027 = !DILocation(line: 2241, column: 4, scope: !4015)
!4028 = !DILocation(line: 2242, column: 4, scope: !3755)
!4029 = !DILocation(line: 2244, column: 8, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2244, column: 8)
!4031 = !DILocation(line: 2244, column: 13, scope: !4030)
!4032 = !DILocation(line: 2244, column: 8, scope: !3755)
!4033 = !DILocation(line: 2245, column: 9, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !1, line: 2245, column: 9)
!4035 = distinct !DILexicalBlock(scope: !4030, file: !1, line: 2244, column: 21)
!4036 = !DILocation(line: 2245, column: 17, scope: !4034)
!4037 = !DILocation(line: 2245, column: 9, scope: !4035)
!4038 = !DILocation(line: 2246, column: 26, scope: !4034)
!4039 = !DILocation(line: 2247, column: 10, scope: !4034)
!4040 = !DILocation(line: 2247, column: 16, scope: !4034)
!4041 = !DILocation(line: 2246, column: 6, scope: !4034)
!4042 = !DILocation(line: 2248, column: 4, scope: !4035)
!4043 = !DILocation(line: 2249, column: 4, scope: !3755)
!4044 = !DILocation(line: 2251, column: 4, scope: !3755)
!4045 = !DILocation(line: 2254, column: 8, scope: !3740)
!4046 = !DILocation(line: 2254, column: 5, scope: !3740)
!4047 = !DILocation(line: 2103, column: 2, scope: !4048)
!4048 = !DILexicalBlockFile(scope: !553, file: !1, discriminator: 3)
!4049 = !DILocation(line: 2256, column: 2, scope: !553)
!4050 = !DILocation(line: 2257, column: 1, scope: !553)
!4051 = !DILocalVariable(name: "iso9660", arg: 1, scope: !566, file: !1, line: 2640, type: !292)
!4052 = !DILocation(line: 2640, column: 31, scope: !566)
!4053 = !DILocalVariable(name: "file", arg: 2, scope: !566, file: !1, line: 2640, type: !305)
!4054 = !DILocation(line: 2640, column: 58, scope: !566)
!4055 = !DILocation(line: 2643, column: 19, scope: !566)
!4056 = !DILocation(line: 2643, column: 28, scope: !566)
!4057 = !DILocation(line: 2643, column: 2, scope: !566)
!4058 = !DILocation(line: 2643, column: 8, scope: !566)
!4059 = !DILocation(line: 2643, column: 17, scope: !566)
!4060 = !DILocation(line: 2644, column: 23, scope: !566)
!4061 = !DILocation(line: 2644, column: 2, scope: !566)
!4062 = !DILocation(line: 2644, column: 11, scope: !566)
!4063 = !DILocation(line: 2644, column: 21, scope: !566)
!4064 = !DILocation(line: 2645, column: 1, scope: !566)
!4065 = !DILocalVariable(name: "t", arg: 1, scope: !536, file: !1, line: 3167, type: !539)
!4066 = !DILocation(line: 3167, column: 25, scope: !536)
!4067 = !DILocation(line: 3171, column: 24, scope: !536)
!4068 = !DILocation(line: 3171, column: 17, scope: !536)
!4069 = !DILocation(line: 3171, column: 9, scope: !536)
!4070 = !DILocalVariable(name: "a", arg: 1, scope: !556, file: !1, line: 2260, type: !4)
!4071 = !DILocation(line: 2260, column: 34, scope: !556)
!4072 = !DILocalVariable(name: "location", arg: 2, scope: !556, file: !1, line: 2260, type: !409)
!4073 = !DILocation(line: 2260, column: 45, scope: !556)
!4074 = !DILocalVariable(name: "file", arg: 3, scope: !556, file: !1, line: 2261, type: !305)
!4075 = !DILocation(line: 2261, column: 23, scope: !556)
!4076 = !DILocalVariable(name: "iso9660", scope: !556, file: !1, line: 2263, type: !292)
!4077 = !DILocation(line: 2263, column: 18, scope: !556)
!4078 = !DILocalVariable(name: "heap", scope: !556, file: !1, line: 2264, type: !599)
!4079 = !DILocation(line: 2264, column: 24, scope: !556)
!4080 = !DILocalVariable(name: "p", scope: !556, file: !1, line: 2265, type: !379)
!4081 = !DILocation(line: 2265, column: 22, scope: !556)
!4082 = !DILocalVariable(name: "offset", scope: !556, file: !1, line: 2266, type: !314)
!4083 = !DILocation(line: 2266, column: 11, scope: !556)
!4084 = !DILocalVariable(name: "parent_offset", scope: !556, file: !1, line: 2266, type: !314)
!4085 = !DILocation(line: 2266, column: 19, scope: !556)
!4086 = !DILocalVariable(name: "hole", scope: !556, file: !1, line: 2267, type: !23)
!4087 = !DILocation(line: 2267, column: 6, scope: !556)
!4088 = !DILocalVariable(name: "parent", scope: !556, file: !1, line: 2267, type: !23)
!4089 = !DILocation(line: 2267, column: 12, scope: !556)
!4090 = !DILocation(line: 2269, column: 31, scope: !556)
!4091 = !DILocation(line: 2269, column: 34, scope: !556)
!4092 = !DILocation(line: 2269, column: 42, scope: !556)
!4093 = !DILocation(line: 2269, column: 12, scope: !556)
!4094 = !DILocation(line: 2269, column: 10, scope: !556)
!4095 = !DILocation(line: 2270, column: 22, scope: !556)
!4096 = !DILocation(line: 2270, column: 12, scope: !556)
!4097 = !DILocation(line: 2270, column: 44, scope: !556)
!4098 = !DILocation(line: 2270, column: 53, scope: !556)
!4099 = !DILocation(line: 2270, column: 32, scope: !556)
!4100 = !DILocation(line: 2270, column: 9, scope: !556)
!4101 = !DILocation(line: 2271, column: 8, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !556, file: !1, line: 2271, column: 6)
!4103 = !DILocation(line: 2271, column: 14, scope: !4102)
!4104 = !DILocation(line: 2271, column: 19, scope: !4102)
!4105 = !DILocation(line: 2271, column: 30, scope: !4102)
!4106 = !DILocation(line: 2271, column: 42, scope: !4102)
!4107 = !DILocation(line: 2272, column: 6, scope: !4102)
!4108 = !DILocation(line: 2272, column: 16, scope: !4102)
!4109 = !DILocation(line: 2272, column: 22, scope: !4102)
!4110 = !DILocation(line: 2272, column: 13, scope: !4102)
!4111 = !DILocation(line: 2272, column: 30, scope: !4102)
!4112 = !DILocation(line: 2273, column: 6, scope: !4102)
!4113 = !DILocation(line: 2273, column: 15, scope: !4102)
!4114 = !DILocation(line: 2273, column: 24, scope: !4102)
!4115 = !DILocation(line: 2273, column: 13, scope: !4102)
!4116 = !DILocation(line: 2273, column: 41, scope: !4102)
!4117 = !DILocation(line: 2274, column: 18, scope: !4102)
!4118 = !DILocation(line: 2274, column: 24, scope: !4102)
!4119 = !DILocation(line: 2274, column: 8, scope: !4102)
!4120 = !DILocation(line: 2274, column: 37, scope: !4102)
!4121 = !DILocation(line: 2274, column: 43, scope: !4102)
!4122 = !DILocation(line: 2274, column: 35, scope: !4102)
!4123 = !DILocation(line: 2275, column: 20, scope: !4102)
!4124 = !DILocation(line: 2275, column: 29, scope: !4102)
!4125 = !DILocation(line: 2275, column: 8, scope: !4102)
!4126 = !DILocation(line: 2275, column: 48, scope: !4102)
!4127 = !DILocation(line: 2276, column: 6, scope: !4102)
!4128 = !DILocation(line: 2276, column: 15, scope: !4102)
!4129 = !DILocation(line: 2276, column: 21, scope: !4102)
!4130 = !DILocation(line: 2276, column: 13, scope: !4102)
!4131 = !DILocation(line: 2276, column: 33, scope: !4102)
!4132 = !DILocation(line: 2276, column: 39, scope: !4102)
!4133 = !DILocation(line: 2276, column: 31, scope: !4102)
!4134 = !DILocation(line: 2277, column: 7, scope: !4102)
!4135 = !DILocation(line: 2277, column: 16, scope: !4102)
!4136 = !DILocation(line: 2277, column: 5, scope: !4102)
!4137 = !DILocation(line: 2271, column: 6, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !556, file: !1, discriminator: 1)
!4139 = !DILocation(line: 2278, column: 22, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4102, file: !1, line: 2277, column: 29)
!4141 = !DILocation(line: 2278, column: 25, scope: !4140)
!4142 = !DILocation(line: 2278, column: 3, scope: !4140)
!4143 = !DILocation(line: 2280, column: 3, scope: !4140)
!4144 = !DILocation(line: 2284, column: 11, scope: !556)
!4145 = !DILocation(line: 2284, column: 20, scope: !556)
!4146 = !DILocation(line: 2284, column: 7, scope: !556)
!4147 = !DILocation(line: 2285, column: 6, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !556, file: !1, line: 2285, column: 6)
!4149 = !DILocation(line: 2285, column: 12, scope: !4148)
!4150 = !DILocation(line: 2285, column: 19, scope: !4148)
!4151 = !DILocation(line: 2285, column: 25, scope: !4148)
!4152 = !DILocation(line: 2285, column: 16, scope: !4148)
!4153 = !DILocation(line: 2285, column: 6, scope: !556)
!4154 = !DILocalVariable(name: "new_size", scope: !4155, file: !1, line: 2286, type: !23)
!4155 = distinct !DILexicalBlock(scope: !4148, file: !1, line: 2285, column: 36)
!4156 = !DILocation(line: 2286, column: 7, scope: !4155)
!4157 = !DILocation(line: 2288, column: 7, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 2288, column: 7)
!4159 = !DILocation(line: 2288, column: 13, scope: !4158)
!4160 = !DILocation(line: 2288, column: 23, scope: !4158)
!4161 = !DILocation(line: 2288, column: 7, scope: !4155)
!4162 = !DILocation(line: 2289, column: 13, scope: !4158)
!4163 = !DILocation(line: 2289, column: 4, scope: !4158)
!4164 = !DILocation(line: 2291, column: 15, scope: !4158)
!4165 = !DILocation(line: 2291, column: 21, scope: !4158)
!4166 = !DILocation(line: 2291, column: 31, scope: !4158)
!4167 = !DILocation(line: 2291, column: 13, scope: !4158)
!4168 = !DILocation(line: 2293, column: 7, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 2293, column: 7)
!4170 = !DILocation(line: 2293, column: 19, scope: !4169)
!4171 = !DILocation(line: 2293, column: 25, scope: !4169)
!4172 = !DILocation(line: 2293, column: 16, scope: !4169)
!4173 = !DILocation(line: 2293, column: 7, scope: !4155)
!4174 = !DILocation(line: 2294, column: 23, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !1, line: 2293, column: 36)
!4176 = !DILocation(line: 2294, column: 26, scope: !4175)
!4177 = !DILocation(line: 2294, column: 4, scope: !4175)
!4178 = !DILocation(line: 2295, column: 4, scope: !4175)
!4179 = !DILocation(line: 2297, column: 14, scope: !4155)
!4180 = !DILocation(line: 2297, column: 7, scope: !4155)
!4181 = !DILocation(line: 2297, column: 5, scope: !4155)
!4182 = !DILocation(line: 2298, column: 7, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 2298, column: 7)
!4184 = !DILocation(line: 2298, column: 9, scope: !4183)
!4185 = !DILocation(line: 2298, column: 7, scope: !4155)
!4186 = !DILocation(line: 2299, column: 23, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !1, line: 2298, column: 18)
!4188 = !DILocation(line: 2299, column: 26, scope: !4187)
!4189 = !DILocation(line: 2299, column: 4, scope: !4187)
!4190 = !DILocation(line: 2300, column: 4, scope: !4187)
!4191 = !DILocation(line: 2302, column: 7, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 2302, column: 7)
!4193 = !DILocation(line: 2302, column: 13, scope: !4192)
!4194 = !DILocation(line: 2302, column: 18, scope: !4192)
!4195 = !DILocation(line: 2302, column: 7, scope: !4155)
!4196 = !DILocation(line: 2303, column: 11, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4192, file: !1, line: 2302, column: 27)
!4198 = !DILocation(line: 2303, column: 4, scope: !4197)
!4199 = !DILocation(line: 2303, column: 14, scope: !4197)
!4200 = !DILocation(line: 2303, column: 20, scope: !4197)
!4201 = !DILocation(line: 2303, column: 26, scope: !4197)
!4202 = !DILocation(line: 2303, column: 32, scope: !4197)
!4203 = !DILocation(line: 2303, column: 36, scope: !4197)
!4204 = !DILocation(line: 2304, column: 9, scope: !4197)
!4205 = !DILocation(line: 2304, column: 15, scope: !4197)
!4206 = !DILocation(line: 2304, column: 4, scope: !4197)
!4207 = !DILocation(line: 2305, column: 3, scope: !4197)
!4208 = !DILocation(line: 2306, column: 16, scope: !4155)
!4209 = !DILocation(line: 2306, column: 3, scope: !4155)
!4210 = !DILocation(line: 2306, column: 9, scope: !4155)
!4211 = !DILocation(line: 2306, column: 14, scope: !4155)
!4212 = !DILocation(line: 2307, column: 21, scope: !4155)
!4213 = !DILocation(line: 2307, column: 3, scope: !4155)
!4214 = !DILocation(line: 2307, column: 9, scope: !4155)
!4215 = !DILocation(line: 2307, column: 19, scope: !4155)
!4216 = !DILocation(line: 2308, column: 2, scope: !4155)
!4217 = !DILocation(line: 2313, column: 9, scope: !556)
!4218 = !DILocation(line: 2313, column: 15, scope: !556)
!4219 = !DILocation(line: 2313, column: 18, scope: !556)
!4220 = !DILocation(line: 2313, column: 7, scope: !556)
!4221 = !DILocation(line: 2314, column: 2, scope: !556)
!4222 = !DILocation(line: 2314, column: 9, scope: !4138)
!4223 = !DILocation(line: 2314, column: 14, scope: !4138)
!4224 = !DILocation(line: 2314, column: 2, scope: !4138)
!4225 = !DILocation(line: 2315, column: 13, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !556, file: !1, line: 2314, column: 19)
!4227 = !DILocation(line: 2315, column: 18, scope: !4226)
!4228 = !DILocation(line: 2315, column: 22, scope: !4226)
!4229 = !DILocation(line: 2315, column: 10, scope: !4226)
!4230 = !DILocation(line: 2316, column: 30, scope: !4226)
!4231 = !DILocation(line: 2316, column: 19, scope: !4226)
!4232 = !DILocation(line: 2316, column: 25, scope: !4226)
!4233 = !DILocation(line: 2316, column: 38, scope: !4226)
!4234 = !DILocation(line: 2316, column: 17, scope: !4226)
!4235 = !DILocation(line: 2317, column: 7, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4226, file: !1, line: 2317, column: 7)
!4237 = !DILocation(line: 2317, column: 17, scope: !4236)
!4238 = !DILocation(line: 2317, column: 14, scope: !4236)
!4239 = !DILocation(line: 2317, column: 7, scope: !4226)
!4240 = !DILocation(line: 2318, column: 30, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4236, file: !1, line: 2317, column: 32)
!4242 = !DILocation(line: 2318, column: 15, scope: !4241)
!4243 = !DILocation(line: 2318, column: 4, scope: !4241)
!4244 = !DILocation(line: 2318, column: 10, scope: !4241)
!4245 = !DILocation(line: 2318, column: 21, scope: !4241)
!4246 = !DILocation(line: 2318, column: 28, scope: !4241)
!4247 = !DILocation(line: 2319, column: 28, scope: !4241)
!4248 = !DILocation(line: 2319, column: 15, scope: !4241)
!4249 = !DILocation(line: 2319, column: 4, scope: !4241)
!4250 = !DILocation(line: 2319, column: 10, scope: !4241)
!4251 = !DILocation(line: 2319, column: 21, scope: !4241)
!4252 = !DILocation(line: 2319, column: 26, scope: !4241)
!4253 = !DILocation(line: 2320, column: 4, scope: !4241)
!4254 = !DILocation(line: 2323, column: 14, scope: !4226)
!4255 = !DILocation(line: 2323, column: 3, scope: !4226)
!4256 = !DILocation(line: 2323, column: 9, scope: !4226)
!4257 = !DILocation(line: 2323, column: 33, scope: !4226)
!4258 = !DILocation(line: 2323, column: 22, scope: !4226)
!4259 = !DILocation(line: 2323, column: 28, scope: !4226)
!4260 = !DILocation(line: 2324, column: 10, scope: !4226)
!4261 = !DILocation(line: 2324, column: 8, scope: !4226)
!4262 = !DILocation(line: 2314, column: 2, scope: !4263)
!4263 = !DILexicalBlockFile(scope: !556, file: !1, discriminator: 2)
!4264 = !DILocation(line: 2326, column: 25, scope: !556)
!4265 = !DILocation(line: 2326, column: 2, scope: !556)
!4266 = !DILocation(line: 2326, column: 8, scope: !556)
!4267 = !DILocation(line: 2326, column: 16, scope: !556)
!4268 = !DILocation(line: 2326, column: 23, scope: !556)
!4269 = !DILocation(line: 2327, column: 23, scope: !556)
!4270 = !DILocation(line: 2327, column: 2, scope: !556)
!4271 = !DILocation(line: 2327, column: 8, scope: !556)
!4272 = !DILocation(line: 2327, column: 16, scope: !556)
!4273 = !DILocation(line: 2327, column: 21, scope: !556)
!4274 = !DILocation(line: 2328, column: 2, scope: !556)
!4275 = !DILocation(line: 2329, column: 1, scope: !556)
!4276 = !DILocalVariable(name: "file", arg: 1, scope: !559, file: !1, line: 2422, type: !305)
!4277 = !DILocation(line: 2422, column: 39, scope: !559)
!4278 = !DILocalVariable(name: "data", arg: 2, scope: !559, file: !1, line: 2423, type: !488)
!4279 = !DILocation(line: 2423, column: 28, scope: !559)
!4280 = !DILocalVariable(name: "data_length", arg: 3, scope: !559, file: !1, line: 2423, type: !23)
!4281 = !DILocation(line: 2423, column: 38, scope: !559)
!4282 = !DILocation(line: 2425, column: 7, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !559, file: !1, line: 2425, column: 6)
!4284 = !DILocation(line: 2425, column: 13, scope: !4283)
!4285 = !DILocation(line: 2425, column: 6, scope: !559)
!4286 = !DILocation(line: 2426, column: 3, scope: !4283)
!4287 = !DILocation(line: 2427, column: 2, scope: !559)
!4288 = !DILocation(line: 2427, column: 8, scope: !559)
!4289 = !DILocation(line: 2427, column: 23, scope: !559)
!4290 = !DILocation(line: 2428, column: 6, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !559, file: !1, line: 2428, column: 6)
!4292 = !DILocation(line: 2428, column: 18, scope: !4291)
!4293 = !DILocation(line: 2428, column: 6, scope: !559)
!4294 = !DILocation(line: 2429, column: 3, scope: !4291)
!4295 = !DILocation(line: 2440, column: 9, scope: !559)
!4296 = !DILocation(line: 2440, column: 2, scope: !559)
!4297 = !DILocation(line: 2442, column: 7, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !1, line: 2442, column: 7)
!4299 = distinct !DILexicalBlock(scope: !559, file: !1, line: 2440, column: 18)
!4300 = !DILocation(line: 2442, column: 19, scope: !4298)
!4301 = !DILocation(line: 2442, column: 7, scope: !4299)
!4302 = !DILocation(line: 2443, column: 4, scope: !4298)
!4303 = !DILocation(line: 2444, column: 20, scope: !4299)
!4304 = !DILocation(line: 2444, column: 26, scope: !4299)
!4305 = !DILocation(line: 2445, column: 21, scope: !4299)
!4306 = !DILocation(line: 2445, column: 26, scope: !4299)
!4307 = !DILocation(line: 2445, column: 31, scope: !4299)
!4308 = !DILocation(line: 2445, column: 43, scope: !4299)
!4309 = !DILocation(line: 2444, column: 3, scope: !4299)
!4310 = !DILocation(line: 2446, column: 3, scope: !4299)
!4311 = !DILocation(line: 2448, column: 7, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4299, file: !1, line: 2448, column: 7)
!4313 = !DILocation(line: 2448, column: 19, scope: !4312)
!4314 = !DILocation(line: 2448, column: 7, scope: !4299)
!4315 = !DILocation(line: 2449, column: 4, scope: !4312)
!4316 = !DILocation(line: 2450, column: 20, scope: !4299)
!4317 = !DILocation(line: 2450, column: 26, scope: !4299)
!4318 = !DILocation(line: 2451, column: 21, scope: !4299)
!4319 = !DILocation(line: 2451, column: 26, scope: !4299)
!4320 = !DILocation(line: 2451, column: 31, scope: !4299)
!4321 = !DILocation(line: 2451, column: 43, scope: !4299)
!4322 = !DILocation(line: 2450, column: 3, scope: !4299)
!4323 = !DILocation(line: 2452, column: 3, scope: !4299)
!4324 = !DILocation(line: 2452, column: 9, scope: !4299)
!4325 = !DILocation(line: 2452, column: 24, scope: !4299)
!4326 = !DILocation(line: 2453, column: 3, scope: !4299)
!4327 = !DILocation(line: 2455, column: 19, scope: !4299)
!4328 = !DILocation(line: 2455, column: 25, scope: !4299)
!4329 = !DILocation(line: 2455, column: 3, scope: !4299)
!4330 = !DILocation(line: 2456, column: 3, scope: !4299)
!4331 = !DILocation(line: 2458, column: 19, scope: !4299)
!4332 = !DILocation(line: 2458, column: 25, scope: !4299)
!4333 = !DILocation(line: 2458, column: 3, scope: !4299)
!4334 = !DILocation(line: 2459, column: 3, scope: !4299)
!4335 = !DILocation(line: 2461, column: 3, scope: !4299)
!4336 = !DILocation(line: 2464, column: 1, scope: !559)
!4337 = !DILocalVariable(name: "file", arg: 1, scope: !562, file: !1, line: 2540, type: !305)
!4338 = !DILocation(line: 2540, column: 39, scope: !562)
!4339 = !DILocalVariable(name: "data", arg: 2, scope: !562, file: !1, line: 2540, type: !488)
!4340 = !DILocation(line: 2540, column: 66, scope: !562)
!4341 = !DILocalVariable(name: "data_length", arg: 3, scope: !562, file: !1, line: 2541, type: !23)
!4342 = !DILocation(line: 2541, column: 9, scope: !562)
!4343 = !DILocalVariable(name: "separator", scope: !562, file: !1, line: 2543, type: !80)
!4344 = !DILocation(line: 2543, column: 14, scope: !562)
!4345 = !DILocation(line: 2545, column: 7, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !562, file: !1, line: 2545, column: 6)
!4347 = !DILocation(line: 2545, column: 13, scope: !4346)
!4348 = !DILocation(line: 2545, column: 31, scope: !4346)
!4349 = !DILocation(line: 2545, column: 34, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4346, file: !1, discriminator: 1)
!4351 = !DILocation(line: 2545, column: 40, scope: !4350)
!4352 = !DILocation(line: 2545, column: 48, scope: !4350)
!4353 = !DILocation(line: 2545, column: 55, scope: !4350)
!4354 = !DILocation(line: 2545, column: 6, scope: !4350)
!4355 = !DILocation(line: 2546, column: 3, scope: !4346)
!4356 = !DILocation(line: 2547, column: 2, scope: !562)
!4357 = !DILocation(line: 2547, column: 8, scope: !562)
!4358 = !DILocation(line: 2547, column: 26, scope: !562)
!4359 = !DILocation(line: 2555, column: 6, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !562, file: !1, line: 2555, column: 6)
!4361 = !DILocation(line: 2555, column: 18, scope: !4360)
!4362 = !DILocation(line: 2555, column: 6, scope: !562)
!4363 = !DILocation(line: 2556, column: 3, scope: !4360)
!4364 = !DILocation(line: 2557, column: 10, scope: !562)
!4365 = !DILocation(line: 2557, column: 9, scope: !562)
!4366 = !DILocation(line: 2557, column: 2, scope: !562)
!4367 = !DILocation(line: 2559, column: 3, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !562, file: !1, line: 2557, column: 16)
!4369 = !DILocation(line: 2561, column: 3, scope: !4368)
!4370 = !DILocation(line: 2561, column: 9, scope: !4368)
!4371 = !DILocation(line: 2561, column: 27, scope: !4368)
!4372 = !DILocation(line: 2562, column: 3, scope: !4368)
!4373 = !DILocation(line: 2564, column: 3, scope: !4368)
!4374 = !DILocation(line: 2566, column: 2, scope: !562)
!4375 = !DILocation(line: 2567, column: 2, scope: !562)
!4376 = !DILocation(line: 2578, column: 2, scope: !562)
!4377 = !DILocation(line: 2578, column: 9, scope: !4378)
!4378 = !DILexicalBlockFile(scope: !562, file: !1, discriminator: 1)
!4379 = !DILocation(line: 2578, column: 21, scope: !4378)
!4380 = !DILocation(line: 2578, column: 2, scope: !4378)
!4381 = !DILocalVariable(name: "flag", scope: !4382, file: !1, line: 2579, type: !303)
!4382 = distinct !DILexicalBlock(scope: !562, file: !1, line: 2578, column: 27)
!4383 = !DILocation(line: 2579, column: 17, scope: !4382)
!4384 = !DILocation(line: 2579, column: 29, scope: !4382)
!4385 = !DILocation(line: 2579, column: 24, scope: !4382)
!4386 = !DILocalVariable(name: "nlen", scope: !4382, file: !1, line: 2580, type: !303)
!4387 = !DILocation(line: 2580, column: 17, scope: !4382)
!4388 = !DILocation(line: 2580, column: 29, scope: !4382)
!4389 = !DILocation(line: 2580, column: 24, scope: !4382)
!4390 = !DILocation(line: 2581, column: 15, scope: !4382)
!4391 = !DILocation(line: 2583, column: 19, scope: !4382)
!4392 = !DILocation(line: 2583, column: 25, scope: !4382)
!4393 = !DILocation(line: 2583, column: 34, scope: !4382)
!4394 = !DILocation(line: 2583, column: 3, scope: !4382)
!4395 = !DILocation(line: 2584, column: 13, scope: !4382)
!4396 = !DILocation(line: 2586, column: 10, scope: !4382)
!4397 = !DILocation(line: 2586, column: 3, scope: !4382)
!4398 = !DILocation(line: 2588, column: 8, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 2588, column: 8)
!4400 = distinct !DILexicalBlock(scope: !4382, file: !1, line: 2586, column: 16)
!4401 = !DILocation(line: 2588, column: 22, scope: !4399)
!4402 = !DILocation(line: 2588, column: 20, scope: !4399)
!4403 = !DILocation(line: 2588, column: 8, scope: !4400)
!4404 = !DILocation(line: 2589, column: 5, scope: !4399)
!4405 = !DILocation(line: 2590, column: 21, scope: !4400)
!4406 = !DILocation(line: 2590, column: 27, scope: !4400)
!4407 = !DILocation(line: 2591, column: 22, scope: !4400)
!4408 = !DILocation(line: 2591, column: 28, scope: !4400)
!4409 = !DILocation(line: 2590, column: 4, scope: !4400)
!4410 = !DILocation(line: 2592, column: 4, scope: !4400)
!4411 = !DILocation(line: 2594, column: 8, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 2594, column: 8)
!4413 = !DILocation(line: 2594, column: 22, scope: !4412)
!4414 = !DILocation(line: 2594, column: 20, scope: !4412)
!4415 = !DILocation(line: 2594, column: 8, scope: !4400)
!4416 = !DILocation(line: 2595, column: 5, scope: !4412)
!4417 = !DILocation(line: 2596, column: 21, scope: !4400)
!4418 = !DILocation(line: 2596, column: 27, scope: !4400)
!4419 = !DILocation(line: 2597, column: 22, scope: !4400)
!4420 = !DILocation(line: 2597, column: 28, scope: !4400)
!4421 = !DILocation(line: 2596, column: 4, scope: !4400)
!4422 = !DILocation(line: 2598, column: 14, scope: !4400)
!4423 = !DILocation(line: 2599, column: 4, scope: !4400)
!4424 = !DILocation(line: 2601, column: 20, scope: !4400)
!4425 = !DILocation(line: 2601, column: 26, scope: !4400)
!4426 = !DILocation(line: 2601, column: 4, scope: !4400)
!4427 = !DILocation(line: 2602, column: 4, scope: !4400)
!4428 = !DILocation(line: 2604, column: 20, scope: !4400)
!4429 = !DILocation(line: 2604, column: 26, scope: !4400)
!4430 = !DILocation(line: 2604, column: 4, scope: !4400)
!4431 = !DILocation(line: 2605, column: 4, scope: !4400)
!4432 = !DILocation(line: 2607, column: 20, scope: !4400)
!4433 = !DILocation(line: 2607, column: 26, scope: !4400)
!4434 = !DILocation(line: 2607, column: 4, scope: !4400)
!4435 = !DILocation(line: 2608, column: 14, scope: !4400)
!4436 = !DILocation(line: 2609, column: 4, scope: !4400)
!4437 = !DILocation(line: 2611, column: 4, scope: !4400)
!4438 = !DILocation(line: 2612, column: 20, scope: !4400)
!4439 = !DILocation(line: 2612, column: 26, scope: !4400)
!4440 = !DILocation(line: 2612, column: 4, scope: !4400)
!4441 = !DILocation(line: 2613, column: 4, scope: !4400)
!4442 = !DILocation(line: 2615, column: 20, scope: !4400)
!4443 = !DILocation(line: 2615, column: 26, scope: !4400)
!4444 = !DILocation(line: 2615, column: 4, scope: !4400)
!4445 = !DILocation(line: 2616, column: 4, scope: !4400)
!4446 = !DILocation(line: 2619, column: 4, scope: !4400)
!4447 = !DILocation(line: 2621, column: 11, scope: !4382)
!4448 = !DILocation(line: 2621, column: 8, scope: !4382)
!4449 = !DILocation(line: 2622, column: 18, scope: !4382)
!4450 = !DILocation(line: 2622, column: 15, scope: !4382)
!4451 = !DILocation(line: 2578, column: 2, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !562, file: !1, discriminator: 2)
!4453 = !DILocation(line: 2624, column: 1, scope: !562)
!4454 = !DILocalVariable(name: "file", arg: 1, scope: !563, file: !1, line: 2467, type: !305)
!4455 = !DILocation(line: 2467, column: 39, scope: !563)
!4456 = !DILocalVariable(name: "data", arg: 2, scope: !563, file: !1, line: 2467, type: !488)
!4457 = !DILocation(line: 2467, column: 66, scope: !563)
!4458 = !DILocalVariable(name: "data_length", arg: 3, scope: !563, file: !1, line: 2468, type: !23)
!4459 = !DILocation(line: 2468, column: 9, scope: !563)
!4460 = !DILocalVariable(name: "flag", scope: !563, file: !1, line: 2470, type: !82)
!4461 = !DILocation(line: 2470, column: 7, scope: !563)
!4462 = !DILocation(line: 2481, column: 6, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !563, file: !1, line: 2481, column: 6)
!4464 = !DILocation(line: 2481, column: 18, scope: !4463)
!4465 = !DILocation(line: 2481, column: 6, scope: !563)
!4466 = !DILocation(line: 2482, column: 3, scope: !4463)
!4467 = !DILocation(line: 2483, column: 9, scope: !563)
!4468 = !DILocation(line: 2483, column: 7, scope: !563)
!4469 = !DILocation(line: 2484, column: 2, scope: !563)
!4470 = !DILocation(line: 2485, column: 2, scope: !563)
!4471 = !DILocation(line: 2486, column: 6, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !563, file: !1, line: 2486, column: 6)
!4473 = !DILocation(line: 2486, column: 11, scope: !4472)
!4474 = !DILocation(line: 2486, column: 6, scope: !563)
!4475 = !DILocation(line: 2488, column: 8, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 2488, column: 7)
!4477 = distinct !DILexicalBlock(scope: !4472, file: !1, line: 2486, column: 19)
!4478 = !DILocation(line: 2488, column: 13, scope: !4476)
!4479 = !DILocation(line: 2488, column: 18, scope: !4476)
!4480 = !DILocation(line: 2488, column: 21, scope: !4481)
!4481 = !DILexicalBlockFile(scope: !4476, file: !1, discriminator: 1)
!4482 = !DILocation(line: 2488, column: 33, scope: !4481)
!4483 = !DILocation(line: 2488, column: 7, scope: !4481)
!4484 = !DILocation(line: 2490, column: 4, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4476, file: !1, line: 2488, column: 40)
!4486 = !DILocation(line: 2490, column: 10, scope: !4485)
!4487 = !DILocation(line: 2490, column: 27, scope: !4485)
!4488 = !DILocation(line: 2491, column: 32, scope: !4485)
!4489 = !DILocation(line: 2491, column: 22, scope: !4485)
!4490 = !DILocation(line: 2491, column: 4, scope: !4485)
!4491 = !DILocation(line: 2491, column: 10, scope: !4485)
!4492 = !DILocation(line: 2491, column: 20, scope: !4485)
!4493 = !DILocation(line: 2492, column: 9, scope: !4485)
!4494 = !DILocation(line: 2493, column: 16, scope: !4485)
!4495 = !DILocation(line: 2494, column: 3, scope: !4485)
!4496 = !DILocation(line: 2495, column: 8, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 2495, column: 7)
!4498 = !DILocation(line: 2495, column: 13, scope: !4497)
!4499 = !DILocation(line: 2495, column: 18, scope: !4497)
!4500 = !DILocation(line: 2495, column: 21, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !4497, file: !1, discriminator: 1)
!4502 = !DILocation(line: 2495, column: 33, scope: !4501)
!4503 = !DILocation(line: 2495, column: 7, scope: !4501)
!4504 = !DILocation(line: 2497, column: 28, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4497, file: !1, line: 2495, column: 40)
!4506 = !DILocation(line: 2497, column: 18, scope: !4505)
!4507 = !DILocation(line: 2497, column: 4, scope: !4505)
!4508 = !DILocation(line: 2497, column: 10, scope: !4505)
!4509 = !DILocation(line: 2497, column: 16, scope: !4505)
!4510 = !DILocation(line: 2498, column: 9, scope: !4505)
!4511 = !DILocation(line: 2499, column: 16, scope: !4505)
!4512 = !DILocation(line: 2500, column: 3, scope: !4505)
!4513 = !DILocation(line: 2501, column: 8, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 2501, column: 7)
!4515 = !DILocation(line: 2501, column: 13, scope: !4514)
!4516 = !DILocation(line: 2501, column: 18, scope: !4514)
!4517 = !DILocation(line: 2501, column: 21, scope: !4518)
!4518 = !DILexicalBlockFile(scope: !4514, file: !1, discriminator: 1)
!4519 = !DILocation(line: 2501, column: 33, scope: !4518)
!4520 = !DILocation(line: 2501, column: 7, scope: !4518)
!4521 = !DILocation(line: 2503, column: 28, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4514, file: !1, line: 2501, column: 40)
!4523 = !DILocation(line: 2503, column: 18, scope: !4522)
!4524 = !DILocation(line: 2503, column: 4, scope: !4522)
!4525 = !DILocation(line: 2503, column: 10, scope: !4522)
!4526 = !DILocation(line: 2503, column: 16, scope: !4522)
!4527 = !DILocation(line: 2504, column: 9, scope: !4522)
!4528 = !DILocation(line: 2505, column: 16, scope: !4522)
!4529 = !DILocation(line: 2506, column: 3, scope: !4522)
!4530 = !DILocation(line: 2507, column: 8, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 2507, column: 7)
!4532 = !DILocation(line: 2507, column: 13, scope: !4531)
!4533 = !DILocation(line: 2507, column: 18, scope: !4531)
!4534 = !DILocation(line: 2507, column: 21, scope: !4535)
!4535 = !DILexicalBlockFile(scope: !4531, file: !1, discriminator: 1)
!4536 = !DILocation(line: 2507, column: 33, scope: !4535)
!4537 = !DILocation(line: 2507, column: 7, scope: !4535)
!4538 = !DILocation(line: 2509, column: 28, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4531, file: !1, line: 2507, column: 40)
!4540 = !DILocation(line: 2509, column: 18, scope: !4539)
!4541 = !DILocation(line: 2509, column: 4, scope: !4539)
!4542 = !DILocation(line: 2509, column: 10, scope: !4539)
!4543 = !DILocation(line: 2509, column: 16, scope: !4539)
!4544 = !DILocation(line: 2510, column: 3, scope: !4539)
!4545 = !DILocation(line: 2511, column: 2, scope: !4477)
!4546 = !DILocation(line: 2513, column: 8, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !1, line: 2513, column: 7)
!4548 = distinct !DILexicalBlock(scope: !4472, file: !1, line: 2511, column: 9)
!4549 = !DILocation(line: 2513, column: 13, scope: !4547)
!4550 = !DILocation(line: 2513, column: 18, scope: !4547)
!4551 = !DILocation(line: 2513, column: 21, scope: !4552)
!4552 = !DILexicalBlockFile(scope: !4547, file: !1, discriminator: 1)
!4553 = !DILocation(line: 2513, column: 33, scope: !4552)
!4554 = !DILocation(line: 2513, column: 7, scope: !4552)
!4555 = !DILocation(line: 2515, column: 4, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4547, file: !1, line: 2513, column: 39)
!4557 = !DILocation(line: 2515, column: 10, scope: !4556)
!4558 = !DILocation(line: 2515, column: 27, scope: !4556)
!4559 = !DILocation(line: 2516, column: 31, scope: !4556)
!4560 = !DILocation(line: 2516, column: 22, scope: !4556)
!4561 = !DILocation(line: 2516, column: 4, scope: !4556)
!4562 = !DILocation(line: 2516, column: 10, scope: !4556)
!4563 = !DILocation(line: 2516, column: 20, scope: !4556)
!4564 = !DILocation(line: 2517, column: 9, scope: !4556)
!4565 = !DILocation(line: 2518, column: 16, scope: !4556)
!4566 = !DILocation(line: 2519, column: 3, scope: !4556)
!4567 = !DILocation(line: 2520, column: 8, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4548, file: !1, line: 2520, column: 7)
!4569 = !DILocation(line: 2520, column: 13, scope: !4568)
!4570 = !DILocation(line: 2520, column: 18, scope: !4568)
!4571 = !DILocation(line: 2520, column: 21, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !4568, file: !1, discriminator: 1)
!4573 = !DILocation(line: 2520, column: 33, scope: !4572)
!4574 = !DILocation(line: 2520, column: 7, scope: !4572)
!4575 = !DILocation(line: 2522, column: 27, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4568, file: !1, line: 2520, column: 39)
!4577 = !DILocation(line: 2522, column: 18, scope: !4576)
!4578 = !DILocation(line: 2522, column: 4, scope: !4576)
!4579 = !DILocation(line: 2522, column: 10, scope: !4576)
!4580 = !DILocation(line: 2522, column: 16, scope: !4576)
!4581 = !DILocation(line: 2523, column: 9, scope: !4576)
!4582 = !DILocation(line: 2524, column: 16, scope: !4576)
!4583 = !DILocation(line: 2525, column: 3, scope: !4576)
!4584 = !DILocation(line: 2526, column: 8, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4548, file: !1, line: 2526, column: 7)
!4586 = !DILocation(line: 2526, column: 13, scope: !4585)
!4587 = !DILocation(line: 2526, column: 18, scope: !4585)
!4588 = !DILocation(line: 2526, column: 21, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4585, file: !1, discriminator: 1)
!4590 = !DILocation(line: 2526, column: 33, scope: !4589)
!4591 = !DILocation(line: 2526, column: 7, scope: !4589)
!4592 = !DILocation(line: 2528, column: 27, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4585, file: !1, line: 2526, column: 39)
!4594 = !DILocation(line: 2528, column: 18, scope: !4593)
!4595 = !DILocation(line: 2528, column: 4, scope: !4593)
!4596 = !DILocation(line: 2528, column: 10, scope: !4593)
!4597 = !DILocation(line: 2528, column: 16, scope: !4593)
!4598 = !DILocation(line: 2529, column: 9, scope: !4593)
!4599 = !DILocation(line: 2530, column: 16, scope: !4593)
!4600 = !DILocation(line: 2531, column: 3, scope: !4593)
!4601 = !DILocation(line: 2532, column: 8, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4548, file: !1, line: 2532, column: 7)
!4603 = !DILocation(line: 2532, column: 13, scope: !4602)
!4604 = !DILocation(line: 2532, column: 18, scope: !4602)
!4605 = !DILocation(line: 2532, column: 21, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4602, file: !1, discriminator: 1)
!4607 = !DILocation(line: 2532, column: 33, scope: !4606)
!4608 = !DILocation(line: 2532, column: 7, scope: !4606)
!4609 = !DILocation(line: 2534, column: 27, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4602, file: !1, line: 2532, column: 39)
!4611 = !DILocation(line: 2534, column: 18, scope: !4610)
!4612 = !DILocation(line: 2534, column: 4, scope: !4610)
!4613 = !DILocation(line: 2534, column: 10, scope: !4610)
!4614 = !DILocation(line: 2534, column: 16, scope: !4610)
!4615 = !DILocation(line: 2535, column: 3, scope: !4610)
!4616 = !DILocation(line: 2537, column: 1, scope: !563)
!4617 = !DILocalVariable(name: "file", arg: 1, scope: !565, file: !1, line: 2627, type: !305)
!4618 = !DILocation(line: 2627, column: 39, scope: !565)
!4619 = !DILocalVariable(name: "data", arg: 2, scope: !565, file: !1, line: 2627, type: !488)
!4620 = !DILocation(line: 2627, column: 66, scope: !565)
!4621 = !DILocalVariable(name: "data_length", arg: 3, scope: !565, file: !1, line: 2628, type: !23)
!4622 = !DILocation(line: 2628, column: 9, scope: !565)
!4623 = !DILocation(line: 2631, column: 6, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !565, file: !1, line: 2631, column: 6)
!4625 = !DILocation(line: 2631, column: 14, scope: !4624)
!4626 = !DILocation(line: 2631, column: 22, scope: !4624)
!4627 = !DILocation(line: 2631, column: 25, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4624, file: !1, discriminator: 1)
!4629 = !DILocation(line: 2631, column: 33, scope: !4628)
!4630 = !DILocation(line: 2631, column: 41, scope: !4628)
!4631 = !DILocation(line: 2631, column: 44, scope: !4632)
!4632 = !DILexicalBlockFile(scope: !4624, file: !1, discriminator: 2)
!4633 = !DILocation(line: 2631, column: 56, scope: !4632)
!4634 = !DILocation(line: 2631, column: 6, scope: !4632)
!4635 = !DILocation(line: 2633, column: 3, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4624, file: !1, line: 2631, column: 63)
!4637 = !DILocation(line: 2633, column: 9, scope: !4636)
!4638 = !DILocation(line: 2633, column: 12, scope: !4636)
!4639 = !DILocation(line: 2634, column: 22, scope: !4636)
!4640 = !DILocation(line: 2634, column: 3, scope: !4636)
!4641 = !DILocation(line: 2634, column: 9, scope: !4636)
!4642 = !DILocation(line: 2634, column: 20, scope: !4636)
!4643 = !DILocation(line: 2635, column: 49, scope: !4636)
!4644 = !DILocation(line: 2635, column: 32, scope: !4636)
!4645 = !DILocation(line: 2635, column: 3, scope: !4636)
!4646 = !DILocation(line: 2635, column: 9, scope: !4636)
!4647 = !DILocation(line: 2635, column: 30, scope: !4636)
!4648 = !DILocation(line: 2636, column: 2, scope: !4636)
!4649 = !DILocation(line: 2637, column: 1, scope: !565)
!4650 = !DILocalVariable(name: "v", arg: 1, scope: !564, file: !1, line: 3139, type: !488)
!4651 = !DILocation(line: 3139, column: 32, scope: !564)
!4652 = !DILocalVariable(name: "tm", scope: !564, file: !1, line: 3141, type: !540)
!4653 = !DILocation(line: 3141, column: 12, scope: !564)
!4654 = !DILocalVariable(name: "offset", scope: !564, file: !1, line: 3142, type: !23)
!4655 = !DILocation(line: 3142, column: 6, scope: !564)
!4656 = !DILocalVariable(name: "t", scope: !564, file: !1, line: 3143, type: !327)
!4657 = !DILocation(line: 3143, column: 9, scope: !564)
!4658 = !DILocation(line: 3145, column: 2, scope: !564)
!4659 = !DILocation(line: 3146, column: 16, scope: !564)
!4660 = !DILocation(line: 3146, column: 21, scope: !564)
!4661 = !DILocation(line: 3146, column: 28, scope: !564)
!4662 = !DILocation(line: 3146, column: 38, scope: !564)
!4663 = !DILocation(line: 3146, column: 43, scope: !564)
!4664 = !DILocation(line: 3146, column: 50, scope: !564)
!4665 = !DILocation(line: 3146, column: 35, scope: !564)
!4666 = !DILocation(line: 3147, column: 9, scope: !564)
!4667 = !DILocation(line: 3147, column: 14, scope: !564)
!4668 = !DILocation(line: 3147, column: 21, scope: !564)
!4669 = !DILocation(line: 3147, column: 6, scope: !564)
!4670 = !DILocation(line: 3147, column: 29, scope: !564)
!4671 = !DILocation(line: 3147, column: 34, scope: !564)
!4672 = !DILocation(line: 3147, column: 26, scope: !564)
!4673 = !DILocation(line: 3148, column: 6, scope: !564)
!4674 = !DILocation(line: 3146, column: 5, scope: !564)
!4675 = !DILocation(line: 3146, column: 13, scope: !564)
!4676 = !DILocation(line: 3149, column: 15, scope: !564)
!4677 = !DILocation(line: 3149, column: 20, scope: !564)
!4678 = !DILocation(line: 3149, column: 27, scope: !564)
!4679 = !DILocation(line: 3149, column: 35, scope: !564)
!4680 = !DILocation(line: 3149, column: 40, scope: !564)
!4681 = !DILocation(line: 3149, column: 32, scope: !564)
!4682 = !DILocation(line: 3149, column: 5, scope: !564)
!4683 = !DILocation(line: 3149, column: 12, scope: !564)
!4684 = !DILocation(line: 3150, column: 16, scope: !564)
!4685 = !DILocation(line: 3150, column: 21, scope: !564)
!4686 = !DILocation(line: 3150, column: 28, scope: !564)
!4687 = !DILocation(line: 3150, column: 36, scope: !564)
!4688 = !DILocation(line: 3150, column: 41, scope: !564)
!4689 = !DILocation(line: 3150, column: 33, scope: !564)
!4690 = !DILocation(line: 3150, column: 5, scope: !564)
!4691 = !DILocation(line: 3150, column: 13, scope: !564)
!4692 = !DILocation(line: 3151, column: 16, scope: !564)
!4693 = !DILocation(line: 3151, column: 21, scope: !564)
!4694 = !DILocation(line: 3151, column: 28, scope: !564)
!4695 = !DILocation(line: 3151, column: 36, scope: !564)
!4696 = !DILocation(line: 3151, column: 41, scope: !564)
!4697 = !DILocation(line: 3151, column: 33, scope: !564)
!4698 = !DILocation(line: 3151, column: 5, scope: !564)
!4699 = !DILocation(line: 3151, column: 13, scope: !564)
!4700 = !DILocation(line: 3152, column: 15, scope: !564)
!4701 = !DILocation(line: 3152, column: 21, scope: !564)
!4702 = !DILocation(line: 3152, column: 28, scope: !564)
!4703 = !DILocation(line: 3152, column: 36, scope: !564)
!4704 = !DILocation(line: 3152, column: 42, scope: !564)
!4705 = !DILocation(line: 3152, column: 33, scope: !564)
!4706 = !DILocation(line: 3152, column: 5, scope: !564)
!4707 = !DILocation(line: 3152, column: 12, scope: !564)
!4708 = !DILocation(line: 3153, column: 15, scope: !564)
!4709 = !DILocation(line: 3153, column: 21, scope: !564)
!4710 = !DILocation(line: 3153, column: 28, scope: !564)
!4711 = !DILocation(line: 3153, column: 36, scope: !564)
!4712 = !DILocation(line: 3153, column: 42, scope: !564)
!4713 = !DILocation(line: 3153, column: 33, scope: !564)
!4714 = !DILocation(line: 3153, column: 5, scope: !564)
!4715 = !DILocation(line: 3153, column: 12, scope: !564)
!4716 = !DILocation(line: 3155, column: 33, scope: !564)
!4717 = !DILocation(line: 3155, column: 11, scope: !564)
!4718 = !DILocation(line: 3155, column: 9, scope: !564)
!4719 = !DILocation(line: 3156, column: 6, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !564, file: !1, line: 3156, column: 6)
!4721 = !DILocation(line: 3156, column: 13, scope: !4720)
!4722 = !DILocation(line: 3156, column: 19, scope: !4720)
!4723 = !DILocation(line: 3156, column: 22, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4720, file: !1, discriminator: 1)
!4725 = !DILocation(line: 3156, column: 29, scope: !4724)
!4726 = !DILocation(line: 3156, column: 6, scope: !4724)
!4727 = !DILocation(line: 3157, column: 17, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4720, file: !1, line: 3156, column: 35)
!4729 = !DILocation(line: 3157, column: 24, scope: !4728)
!4730 = !DILocation(line: 3157, column: 6, scope: !4728)
!4731 = !DILocation(line: 3157, column: 14, scope: !4728)
!4732 = !DILocation(line: 3158, column: 17, scope: !4728)
!4733 = !DILocation(line: 3158, column: 24, scope: !4728)
!4734 = !DILocation(line: 3158, column: 29, scope: !4728)
!4735 = !DILocation(line: 3158, column: 6, scope: !4728)
!4736 = !DILocation(line: 3158, column: 13, scope: !4728)
!4737 = !DILocation(line: 3159, column: 2, scope: !4728)
!4738 = !DILocation(line: 3160, column: 6, scope: !564)
!4739 = !DILocation(line: 3160, column: 4, scope: !564)
!4740 = !DILocation(line: 3161, column: 6, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !564, file: !1, line: 3161, column: 6)
!4742 = !DILocation(line: 3161, column: 8, scope: !4741)
!4743 = !DILocation(line: 3161, column: 6, scope: !564)
!4744 = !DILocation(line: 3162, column: 3, scope: !4741)
!4745 = !DILocation(line: 3163, column: 10, scope: !564)
!4746 = !DILocation(line: 3163, column: 2, scope: !564)
!4747 = !DILocation(line: 3164, column: 1, scope: !564)
!4748 = !DILocalVariable(name: "a", arg: 1, scope: !576, file: !1, line: 2710, type: !4)
!4749 = !DILocation(line: 2710, column: 39, scope: !576)
!4750 = !DILocalVariable(name: "iso9660", arg: 2, scope: !576, file: !1, line: 2710, type: !292)
!4751 = !DILocation(line: 2710, column: 58, scope: !576)
!4752 = !DILocalVariable(name: "pfile", arg: 3, scope: !576, file: !1, line: 2711, type: !374)
!4753 = !DILocation(line: 2711, column: 24, scope: !576)
!4754 = !DILocalVariable(name: "file", scope: !576, file: !1, line: 2713, type: !305)
!4755 = !DILocation(line: 2713, column: 20, scope: !576)
!4756 = !DILocalVariable(name: "empty_files", scope: !576, file: !1, line: 2717, type: !4757)
!4757 = !DICompositeType(tag: DW_TAG_structure_type, scope: !576, file: !1, line: 2714, size: 128, align: 64, elements: !4758)
!4758 = !{!4759, !4760}
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4757, file: !1, line: 2715, baseType: !305, size: 64, align: 64)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4757, file: !1, line: 2716, baseType: !374, size: 64, align: 64, offset: 64)
!4761 = !DILocation(line: 2717, column: 4, scope: !576)
!4762 = !DILocalVariable(name: "number", scope: !576, file: !1, line: 2718, type: !52)
!4763 = !DILocation(line: 2718, column: 10, scope: !576)
!4764 = !DILocalVariable(name: "count", scope: !576, file: !1, line: 2719, type: !23)
!4765 = !DILocation(line: 2719, column: 6, scope: !576)
!4766 = !DILocation(line: 2721, column: 25, scope: !576)
!4767 = !DILocation(line: 2721, column: 9, scope: !576)
!4768 = !DILocation(line: 2721, column: 7, scope: !576)
!4769 = !DILocation(line: 2722, column: 6, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2722, column: 6)
!4771 = !DILocation(line: 2722, column: 11, scope: !4770)
!4772 = !DILocation(line: 2722, column: 6, scope: !576)
!4773 = !DILocation(line: 2723, column: 12, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4770, file: !1, line: 2722, column: 20)
!4775 = !DILocation(line: 2723, column: 4, scope: !4774)
!4776 = !DILocation(line: 2723, column: 10, scope: !4774)
!4777 = !DILocation(line: 2724, column: 3, scope: !4774)
!4778 = !DILocation(line: 2727, column: 2, scope: !576)
!4779 = !DILocalVariable(name: "re", scope: !4780, file: !1, line: 2728, type: !305)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 2727, column: 11)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !1, line: 2727, column: 2)
!4782 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2727, column: 2)
!4783 = !DILocation(line: 2728, column: 21, scope: !4780)
!4784 = !DILocalVariable(name: "d", scope: !4780, file: !1, line: 2728, type: !305)
!4785 = !DILocation(line: 2728, column: 26, scope: !4780)
!4786 = !DILocation(line: 2730, column: 19, scope: !4780)
!4787 = !DILocation(line: 2730, column: 17, scope: !4780)
!4788 = !DILocation(line: 2730, column: 4, scope: !4780)
!4789 = !DILocation(line: 2730, column: 10, scope: !4780)
!4790 = !DILocation(line: 2731, column: 7, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4780, file: !1, line: 2731, column: 7)
!4792 = !DILocation(line: 2731, column: 12, scope: !4791)
!4793 = !DILocation(line: 2731, column: 7, scope: !4780)
!4794 = !DILocation(line: 2736, column: 8, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 2736, column: 8)
!4796 = distinct !DILexicalBlock(scope: !4791, file: !1, line: 2731, column: 21)
!4797 = !DILocation(line: 2736, column: 17, scope: !4795)
!4798 = !DILocation(line: 2736, column: 26, scope: !4795)
!4799 = !DILocation(line: 2736, column: 32, scope: !4795)
!4800 = !DILocation(line: 2736, column: 40, scope: !4795)
!4801 = !DILocation(line: 2737, column: 8, scope: !4795)
!4802 = !DILocation(line: 2737, column: 17, scope: !4795)
!4803 = !DILocation(line: 2737, column: 26, scope: !4795)
!4804 = !DILocation(line: 2737, column: 34, scope: !4795)
!4805 = !DILocation(line: 2738, column: 8, scope: !4795)
!4806 = !DILocation(line: 2738, column: 17, scope: !4795)
!4807 = !DILocation(line: 2738, column: 27, scope: !4795)
!4808 = !DILocation(line: 2736, column: 8, scope: !4809)
!4809 = !DILexicalBlockFile(scope: !4796, file: !1, discriminator: 1)
!4810 = !DILocation(line: 2740, column: 21, scope: !4795)
!4811 = !DILocation(line: 2740, column: 30, scope: !4795)
!4812 = !DILocation(line: 2740, column: 39, scope: !4795)
!4813 = !DILocation(line: 2740, column: 5, scope: !4795)
!4814 = !DILocation(line: 2741, column: 4, scope: !4796)
!4815 = !DILocation(line: 2741, column: 30, scope: !4809)
!4816 = !DILocation(line: 2741, column: 17, scope: !4809)
!4817 = !DILocation(line: 2741, column: 15, scope: !4809)
!4818 = !DILocation(line: 2741, column: 40, scope: !4809)
!4819 = !DILocation(line: 2741, column: 4, scope: !4809)
!4820 = !DILocation(line: 2743, column: 5, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 2741, column: 49)
!4822 = !DILocation(line: 2743, column: 32, scope: !4823)
!4823 = !DILexicalBlockFile(scope: !4821, file: !1, discriminator: 1)
!4824 = !DILocation(line: 2743, column: 17, scope: !4823)
!4825 = !DILocation(line: 2743, column: 15, scope: !4823)
!4826 = !DILocation(line: 2743, column: 37, scope: !4823)
!4827 = !DILocation(line: 2743, column: 5, scope: !4823)
!4828 = !DILocation(line: 2744, column: 22, scope: !4821)
!4829 = !DILocation(line: 2744, column: 31, scope: !4821)
!4830 = !DILocation(line: 2744, column: 6, scope: !4821)
!4831 = !DILocation(line: 2743, column: 5, scope: !4832)
!4832 = !DILexicalBlockFile(scope: !4821, file: !1, discriminator: 2)
!4833 = !DILocation(line: 2741, column: 4, scope: !4834)
!4834 = !DILexicalBlockFile(scope: !4796, file: !1, discriminator: 2)
!4835 = !DILocation(line: 2746, column: 8, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 2746, column: 8)
!4837 = !DILocation(line: 2746, column: 17, scope: !4836)
!4838 = !DILocation(line: 2746, column: 29, scope: !4836)
!4839 = !DILocation(line: 2746, column: 35, scope: !4836)
!4840 = !DILocation(line: 2746, column: 8, scope: !4796)
!4841 = !DILocation(line: 2747, column: 30, scope: !4836)
!4842 = !DILocation(line: 2747, column: 33, scope: !4836)
!4843 = !DILocation(line: 2747, column: 42, scope: !4836)
!4844 = !DILocation(line: 2747, column: 13, scope: !4836)
!4845 = !DILocation(line: 2747, column: 5, scope: !4836)
!4846 = !DILocation(line: 2748, column: 4, scope: !4796)
!4847 = !DILocation(line: 2751, column: 7, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4780, file: !1, line: 2751, column: 7)
!4849 = !DILocation(line: 2751, column: 13, scope: !4848)
!4850 = !DILocation(line: 2751, column: 7, scope: !4780)
!4851 = !DILocalVariable(name: "first_re", scope: !4852, file: !1, line: 2752, type: !305)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !1, line: 2751, column: 24)
!4853 = !DILocation(line: 2752, column: 22, scope: !4852)
!4854 = !DILocalVariable(name: "nexted_re", scope: !4852, file: !1, line: 2753, type: !23)
!4855 = !DILocation(line: 2753, column: 8, scope: !4852)
!4856 = !DILocation(line: 2759, column: 4, scope: !4852)
!4857 = !DILocation(line: 2759, column: 30, scope: !4858)
!4858 = !DILexicalBlockFile(scope: !4852, file: !1, discriminator: 1)
!4859 = !DILocation(line: 2759, column: 17, scope: !4858)
!4860 = !DILocation(line: 2759, column: 15, scope: !4858)
!4861 = !DILocation(line: 2760, column: 11, scope: !4852)
!4862 = !DILocation(line: 2760, column: 8, scope: !4852)
!4863 = !DILocation(line: 2759, column: 4, scope: !4858)
!4864 = !DILocation(line: 2761, column: 9, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !1, line: 2761, column: 9)
!4866 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 2760, column: 21)
!4867 = !DILocation(line: 2761, column: 18, scope: !4865)
!4868 = !DILocation(line: 2761, column: 9, scope: !4866)
!4869 = !DILocation(line: 2762, column: 17, scope: !4865)
!4870 = !DILocation(line: 2762, column: 15, scope: !4865)
!4871 = !DILocation(line: 2762, column: 6, scope: !4865)
!4872 = !DILocation(line: 2763, column: 9, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4866, file: !1, line: 2763, column: 9)
!4874 = !DILocation(line: 2763, column: 13, scope: !4873)
!4875 = !DILocation(line: 2763, column: 23, scope: !4873)
!4876 = !DILocation(line: 2763, column: 29, scope: !4873)
!4877 = !DILocation(line: 2763, column: 20, scope: !4873)
!4878 = !DILocation(line: 2763, column: 9, scope: !4866)
!4879 = !DILocation(line: 2764, column: 6, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4873, file: !1, line: 2763, column: 40)
!4881 = !DILocation(line: 2764, column: 10, scope: !4880)
!4882 = !DILocation(line: 2764, column: 18, scope: !4880)
!4883 = !DILocation(line: 2764, column: 25, scope: !4880)
!4884 = !DILocation(line: 2765, column: 19, scope: !4880)
!4885 = !DILocation(line: 2765, column: 25, scope: !4880)
!4886 = !DILocation(line: 2765, column: 6, scope: !4880)
!4887 = !DILocation(line: 2765, column: 10, scope: !4880)
!4888 = !DILocation(line: 2765, column: 17, scope: !4880)
!4889 = !DILocation(line: 2766, column: 6, scope: !4880)
!4890 = !DILocation(line: 2766, column: 10, scope: !4880)
!4891 = !DILocation(line: 2766, column: 13, scope: !4880)
!4892 = !DILocation(line: 2767, column: 10, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4880, file: !1, line: 2767, column: 10)
!4894 = !DILocation(line: 2767, column: 14, scope: !4893)
!4895 = !DILocation(line: 2767, column: 22, scope: !4893)
!4896 = !DILocation(line: 2767, column: 10, scope: !4880)
!4897 = !DILocation(line: 2768, column: 17, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4893, file: !1, line: 2767, column: 37)
!4899 = !DILocation(line: 2769, column: 7, scope: !4898)
!4900 = !DILocation(line: 2769, column: 11, scope: !4898)
!4901 = !DILocation(line: 2769, column: 25, scope: !4898)
!4902 = !DILocation(line: 2770, column: 26, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4898, file: !1, line: 2770, column: 11)
!4904 = !DILocation(line: 2770, column: 11, scope: !4903)
!4905 = !DILocation(line: 2770, column: 30, scope: !4903)
!4906 = !DILocation(line: 2770, column: 11, scope: !4898)
!4907 = !DILocation(line: 2771, column: 8, scope: !4903)
!4908 = !DILocation(line: 2774, column: 7, scope: !4898)
!4909 = !DILocation(line: 2775, column: 11, scope: !4898)
!4910 = !DILocation(line: 2774, column: 19, scope: !4911)
!4911 = !DILexicalBlockFile(scope: !4898, file: !1, discriminator: 1)
!4912 = !DILocation(line: 2774, column: 17, scope: !4911)
!4913 = !DILocation(line: 2775, column: 16, scope: !4898)
!4914 = !DILocation(line: 2774, column: 7, scope: !4911)
!4915 = !DILocation(line: 2776, column: 27, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4898, file: !1, line: 2776, column: 12)
!4917 = !DILocation(line: 2776, column: 12, scope: !4916)
!4918 = !DILocation(line: 2777, column: 12, scope: !4916)
!4919 = !DILocation(line: 2776, column: 12, scope: !4898)
!4920 = !DILocation(line: 2778, column: 9, scope: !4916)
!4921 = !DILocation(line: 2774, column: 7, scope: !4922)
!4922 = !DILexicalBlockFile(scope: !4898, file: !1, discriminator: 2)
!4923 = !DILocation(line: 2779, column: 7, scope: !4898)
!4924 = !DILocation(line: 2783, column: 22, scope: !4880)
!4925 = !DILocation(line: 2783, column: 20, scope: !4880)
!4926 = !DILocation(line: 2783, column: 7, scope: !4880)
!4927 = !DILocation(line: 2783, column: 13, scope: !4880)
!4928 = !DILocation(line: 2785, column: 6, scope: !4880)
!4929 = !DILocation(line: 2786, column: 10, scope: !4880)
!4930 = !DILocation(line: 2785, column: 18, scope: !4931)
!4931 = !DILexicalBlockFile(scope: !4880, file: !1, discriminator: 1)
!4932 = !DILocation(line: 2785, column: 16, scope: !4931)
!4933 = !DILocation(line: 2786, column: 17, scope: !4880)
!4934 = !DILocation(line: 2785, column: 6, scope: !4931)
!4935 = !DILocation(line: 2788, column: 11, scope: !4880)
!4936 = !DILocation(line: 2788, column: 20, scope: !4880)
!4937 = !DILocation(line: 2787, column: 7, scope: !4880)
!4938 = !DILocation(line: 2785, column: 6, scope: !4939)
!4939 = !DILexicalBlockFile(scope: !4880, file: !1, discriminator: 2)
!4940 = !DILocation(line: 2789, column: 6, scope: !4880)
!4941 = !DILocation(line: 2791, column: 19, scope: !4873)
!4942 = !DILocation(line: 2791, column: 28, scope: !4873)
!4943 = !DILocation(line: 2791, column: 6, scope: !4873)
!4944 = !DILocation(line: 2759, column: 4, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4852, file: !1, discriminator: 2)
!4946 = !DILocation(line: 2793, column: 8, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 2793, column: 8)
!4948 = !DILocation(line: 2793, column: 8, scope: !4852)
!4949 = !DILocation(line: 2799, column: 5, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !1, line: 2793, column: 19)
!4951 = !DILocation(line: 2801, column: 3, scope: !4852)
!4952 = !DILocation(line: 2801, column: 15, scope: !4953)
!4953 = !DILexicalBlockFile(scope: !4954, file: !1, discriminator: 1)
!4954 = distinct !DILexicalBlock(scope: !4848, file: !1, line: 2801, column: 14)
!4955 = !DILocation(line: 2801, column: 21, scope: !4953)
!4956 = !DILocation(line: 2801, column: 26, scope: !4953)
!4957 = !DILocation(line: 2801, column: 37, scope: !4953)
!4958 = !DILocation(line: 2801, column: 14, scope: !4953)
!4959 = !DILocalVariable(name: "r", scope: !4960, file: !1, line: 2802, type: !23)
!4960 = distinct !DILexicalBlock(scope: !4954, file: !1, line: 2801, column: 50)
!4961 = !DILocation(line: 2802, column: 8, scope: !4960)
!4962 = !DILocation(line: 2805, column: 22, scope: !4960)
!4963 = !DILocation(line: 2805, column: 25, scope: !4960)
!4964 = !DILocation(line: 2805, column: 8, scope: !4960)
!4965 = !DILocation(line: 2805, column: 6, scope: !4960)
!4966 = !DILocation(line: 2806, column: 8, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4960, file: !1, line: 2806, column: 8)
!4968 = !DILocation(line: 2806, column: 10, scope: !4967)
!4969 = !DILocation(line: 2806, column: 8, scope: !4960)
!4970 = !DILocation(line: 2807, column: 13, scope: !4967)
!4971 = !DILocation(line: 2807, column: 5, scope: !4967)
!4972 = !DILocation(line: 2813, column: 8, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4960, file: !1, line: 2813, column: 8)
!4974 = !DILocation(line: 2813, column: 14, scope: !4973)
!4975 = !DILocation(line: 2813, column: 8, scope: !4960)
!4976 = !DILocation(line: 2818, column: 9, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !1, line: 2818, column: 9)
!4978 = distinct !DILexicalBlock(scope: !4973, file: !1, line: 2813, column: 24)
!4979 = !DILocation(line: 2818, column: 15, scope: !4977)
!4980 = !DILocation(line: 2818, column: 9, scope: !4978)
!4981 = !DILocation(line: 2819, column: 6, scope: !4977)
!4982 = !DILocation(line: 2821, column: 4, scope: !4978)
!4983 = !DILocation(line: 2821, column: 15, scope: !4984)
!4984 = !DILexicalBlockFile(scope: !4985, file: !1, discriminator: 1)
!4985 = distinct !DILexicalBlock(scope: !4973, file: !1, line: 2821, column: 15)
!4986 = !DILocation(line: 2821, column: 21, scope: !4984)
!4987 = !DILocation(line: 2827, column: 18, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4985, file: !1, line: 2821, column: 25)
!4989 = !DILocation(line: 2827, column: 27, scope: !4988)
!4990 = !DILocation(line: 2827, column: 5, scope: !4988)
!4991 = !DILocation(line: 2828, column: 5, scope: !4988)
!4992 = !DILocation(line: 2829, column: 15, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4985, file: !1, line: 2829, column: 15)
!4994 = !DILocation(line: 2829, column: 21, scope: !4993)
!4995 = !DILocation(line: 2829, column: 15, scope: !4985)
!4996 = !DILocation(line: 2836, column: 24, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !1, line: 2836, column: 9)
!4998 = distinct !DILexicalBlock(scope: !4993, file: !1, line: 2829, column: 36)
!4999 = !DILocation(line: 2836, column: 9, scope: !4997)
!5000 = !DILocation(line: 2836, column: 30, scope: !4997)
!5001 = !DILocation(line: 2836, column: 9, scope: !4998)
!5002 = !DILocation(line: 2837, column: 6, scope: !4997)
!5003 = !DILocation(line: 2841, column: 4, scope: !4998)
!5004 = !DILocation(line: 2842, column: 3, scope: !4960)
!5005 = !DILocation(line: 2843, column: 3, scope: !4780)
!5006 = !DILocation(line: 2846, column: 7, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2846, column: 6)
!5008 = !DILocation(line: 2846, column: 13, scope: !5007)
!5009 = !DILocation(line: 2846, column: 18, scope: !5007)
!5010 = !DILocation(line: 2846, column: 29, scope: !5007)
!5011 = !DILocation(line: 2846, column: 41, scope: !5007)
!5012 = !DILocation(line: 2846, column: 44, scope: !5013)
!5013 = !DILexicalBlockFile(scope: !5007, file: !1, discriminator: 1)
!5014 = !DILocation(line: 2846, column: 50, scope: !5013)
!5015 = !DILocation(line: 2846, column: 57, scope: !5013)
!5016 = !DILocation(line: 2846, column: 6, scope: !5013)
!5017 = !DILocation(line: 2847, column: 3, scope: !5007)
!5018 = !DILocation(line: 2849, column: 8, scope: !576)
!5019 = !DILocation(line: 2850, column: 11, scope: !576)
!5020 = !DILocation(line: 2850, column: 17, scope: !576)
!5021 = !DILocation(line: 2850, column: 9, scope: !576)
!5022 = !DILocation(line: 2851, column: 2, scope: !576)
!5023 = !DILocation(line: 2851, column: 11, scope: !576)
!5024 = !DILocation(line: 2851, column: 23, scope: !576)
!5025 = !DILocation(line: 2851, column: 29, scope: !576)
!5026 = !DILocation(line: 2852, column: 32, scope: !576)
!5027 = !DILocation(line: 2852, column: 41, scope: !576)
!5028 = !DILocation(line: 2852, column: 53, scope: !576)
!5029 = !DILocation(line: 2852, column: 2, scope: !576)
!5030 = !DILocation(line: 2852, column: 11, scope: !576)
!5031 = !DILocation(line: 2852, column: 23, scope: !576)
!5032 = !DILocation(line: 2852, column: 28, scope: !576)
!5033 = !DILocation(line: 2853, column: 14, scope: !576)
!5034 = !DILocation(line: 2853, column: 20, scope: !576)
!5035 = !DILocation(line: 2854, column: 34, scope: !576)
!5036 = !DILocation(line: 2854, column: 14, scope: !576)
!5037 = !DILocation(line: 2854, column: 19, scope: !576)
!5038 = !DILocation(line: 2858, column: 2, scope: !576)
!5039 = !DILocation(line: 2858, column: 9, scope: !5040)
!5040 = !DILexicalBlockFile(scope: !576, file: !1, discriminator: 1)
!5041 = !DILocation(line: 2858, column: 18, scope: !5040)
!5042 = !DILocation(line: 2858, column: 32, scope: !5040)
!5043 = !DILocation(line: 2858, column: 37, scope: !5040)
!5044 = !DILocation(line: 2858, column: 41, scope: !5040)
!5045 = !DILocation(line: 2859, column: 7, scope: !576)
!5046 = !DILocation(line: 2859, column: 16, scope: !576)
!5047 = !DILocation(line: 2859, column: 30, scope: !576)
!5048 = !DILocation(line: 2859, column: 40, scope: !576)
!5049 = !DILocation(line: 2859, column: 47, scope: !576)
!5050 = !DILocation(line: 2859, column: 53, scope: !576)
!5051 = !DILocation(line: 2860, column: 7, scope: !576)
!5052 = !DILocation(line: 2860, column: 16, scope: !576)
!5053 = !DILocation(line: 2860, column: 30, scope: !576)
!5054 = !DILocation(line: 2860, column: 40, scope: !576)
!5055 = !DILocation(line: 2860, column: 50, scope: !576)
!5056 = !DILocation(line: 2860, column: 47, scope: !576)
!5057 = !DILocation(line: 2859, column: 53, scope: !5040)
!5058 = !DILocation(line: 2858, column: 2, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !576, file: !1, discriminator: 2)
!5060 = !DILocation(line: 2861, column: 7, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !1, line: 2861, column: 7)
!5062 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2860, column: 59)
!5063 = !DILocation(line: 2861, column: 13, scope: !5061)
!5064 = !DILocation(line: 2861, column: 20, scope: !5061)
!5065 = !DILocation(line: 2861, column: 7, scope: !5062)
!5066 = !DILocation(line: 2870, column: 4, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 2861, column: 27)
!5068 = !DILocation(line: 2870, column: 10, scope: !5067)
!5069 = !DILocation(line: 2870, column: 15, scope: !5067)
!5070 = !DILocation(line: 2871, column: 24, scope: !5067)
!5071 = !DILocation(line: 2871, column: 17, scope: !5067)
!5072 = !DILocation(line: 2871, column: 22, scope: !5067)
!5073 = !DILocation(line: 2872, column: 25, scope: !5067)
!5074 = !DILocation(line: 2872, column: 31, scope: !5067)
!5075 = !DILocation(line: 2872, column: 16, scope: !5067)
!5076 = !DILocation(line: 2872, column: 21, scope: !5067)
!5077 = !DILocation(line: 2873, column: 3, scope: !5067)
!5078 = !DILocation(line: 2874, column: 9, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 2873, column: 10)
!5080 = !DILocation(line: 2875, column: 20, scope: !5079)
!5081 = !DILocation(line: 2875, column: 29, scope: !5079)
!5082 = !DILocation(line: 2875, column: 4, scope: !5079)
!5083 = !DILocation(line: 2877, column: 10, scope: !5062)
!5084 = !DILocation(line: 2877, column: 8, scope: !5062)
!5085 = !DILocation(line: 2858, column: 2, scope: !5086)
!5086 = !DILexicalBlockFile(scope: !576, file: !1, discriminator: 3)
!5087 = !DILocation(line: 2880, column: 6, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2880, column: 6)
!5089 = !DILocation(line: 2880, column: 12, scope: !5088)
!5090 = !DILocation(line: 2880, column: 6, scope: !576)
!5091 = !DILocation(line: 2881, column: 12, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5088, file: !1, line: 2880, column: 18)
!5093 = !DILocation(line: 2881, column: 4, scope: !5092)
!5094 = !DILocation(line: 2881, column: 10, scope: !5092)
!5095 = !DILocation(line: 2882, column: 12, scope: !5092)
!5096 = !DILocation(line: 2882, column: 17, scope: !5092)
!5097 = !DILocation(line: 2882, column: 11, scope: !5092)
!5098 = !DILocation(line: 2882, column: 3, scope: !5092)
!5099 = !DILocation(line: 2884, column: 6, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2884, column: 6)
!5101 = !DILocation(line: 2884, column: 12, scope: !5100)
!5102 = !DILocation(line: 2884, column: 19, scope: !5100)
!5103 = !DILocation(line: 2884, column: 6, scope: !576)
!5104 = !DILocation(line: 2885, column: 3, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5100, file: !1, line: 2884, column: 26)
!5106 = !DILocation(line: 2885, column: 9, scope: !5105)
!5107 = !DILocation(line: 2885, column: 14, scope: !5105)
!5108 = !DILocation(line: 2886, column: 23, scope: !5105)
!5109 = !DILocation(line: 2886, column: 16, scope: !5105)
!5110 = !DILocation(line: 2886, column: 21, scope: !5105)
!5111 = !DILocation(line: 2887, column: 24, scope: !5105)
!5112 = !DILocation(line: 2887, column: 30, scope: !5105)
!5113 = !DILocation(line: 2887, column: 15, scope: !5105)
!5114 = !DILocation(line: 2887, column: 20, scope: !5105)
!5115 = !DILocation(line: 2888, column: 2, scope: !5105)
!5116 = !DILocation(line: 2889, column: 8, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5100, file: !1, line: 2888, column: 9)
!5118 = !DILocation(line: 2890, column: 19, scope: !5117)
!5119 = !DILocation(line: 2890, column: 28, scope: !5117)
!5120 = !DILocation(line: 2890, column: 3, scope: !5117)
!5121 = !DILocation(line: 2893, column: 6, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2893, column: 6)
!5123 = !DILocation(line: 2893, column: 12, scope: !5122)
!5124 = !DILocation(line: 2893, column: 6, scope: !576)
!5125 = !DILocation(line: 2898, column: 15, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !1, line: 2898, column: 3)
!5127 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 2893, column: 17)
!5128 = !DILocation(line: 2898, column: 24, scope: !5126)
!5129 = !DILocation(line: 2898, column: 36, scope: !5126)
!5130 = !DILocation(line: 2898, column: 13, scope: !5126)
!5131 = !DILocation(line: 2898, column: 8, scope: !5126)
!5132 = !DILocation(line: 2899, column: 7, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5126, file: !1, line: 2898, column: 3)
!5134 = !DILocation(line: 2899, column: 12, scope: !5133)
!5135 = !DILocation(line: 2898, column: 3, scope: !5136)
!5136 = !DILexicalBlockFile(scope: !5126, file: !1, discriminator: 1)
!5137 = !DILocation(line: 2900, column: 19, scope: !5133)
!5138 = !DILocation(line: 2900, column: 4, scope: !5133)
!5139 = !DILocation(line: 2900, column: 10, scope: !5133)
!5140 = !DILocation(line: 2900, column: 17, scope: !5133)
!5141 = !DILocation(line: 2899, column: 28, scope: !5142)
!5142 = !DILexicalBlockFile(scope: !5133, file: !1, discriminator: 1)
!5143 = !DILocation(line: 2899, column: 34, scope: !5142)
!5144 = !DILocation(line: 2899, column: 26, scope: !5142)
!5145 = !DILocation(line: 2898, column: 3, scope: !5146)
!5146 = !DILexicalBlockFile(scope: !5133, file: !1, discriminator: 2)
!5147 = !DILocation(line: 2901, column: 2, scope: !5127)
!5148 = !DILocation(line: 2904, column: 18, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !576, file: !1, line: 2904, column: 6)
!5150 = !DILocation(line: 2904, column: 24, scope: !5149)
!5151 = !DILocation(line: 2904, column: 6, scope: !576)
!5152 = !DILocation(line: 2905, column: 44, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5149, file: !1, line: 2904, column: 33)
!5154 = !DILocation(line: 2905, column: 4, scope: !5153)
!5155 = !DILocation(line: 2905, column: 13, scope: !5153)
!5156 = !DILocation(line: 2905, column: 25, scope: !5153)
!5157 = !DILocation(line: 2905, column: 30, scope: !5153)
!5158 = !DILocation(line: 2906, column: 43, scope: !5153)
!5159 = !DILocation(line: 2906, column: 3, scope: !5153)
!5160 = !DILocation(line: 2906, column: 12, scope: !5153)
!5161 = !DILocation(line: 2906, column: 24, scope: !5153)
!5162 = !DILocation(line: 2906, column: 29, scope: !5153)
!5163 = !DILocation(line: 2907, column: 2, scope: !5153)
!5164 = !DILocation(line: 2908, column: 27, scope: !576)
!5165 = !DILocation(line: 2908, column: 11, scope: !576)
!5166 = !DILocation(line: 2908, column: 3, scope: !576)
!5167 = !DILocation(line: 2908, column: 9, scope: !576)
!5168 = !DILocation(line: 2909, column: 12, scope: !576)
!5169 = !DILocation(line: 2909, column: 11, scope: !576)
!5170 = !DILocation(line: 2909, column: 18, scope: !576)
!5171 = !DILocation(line: 2909, column: 10, scope: !576)
!5172 = !DILocation(line: 2909, column: 2, scope: !576)
!5173 = !DILocation(line: 2912, column: 21, scope: !576)
!5174 = !DILocation(line: 2912, column: 24, scope: !576)
!5175 = !DILocation(line: 2915, column: 16, scope: !576)
!5176 = !DILocation(line: 2915, column: 25, scope: !576)
!5177 = !DILocation(line: 2915, column: 53, scope: !576)
!5178 = !DILocation(line: 2915, column: 59, scope: !576)
!5179 = !DILocation(line: 2912, column: 2, scope: !576)
!5180 = !DILocation(line: 2916, column: 2, scope: !576)
!5181 = !DILocation(line: 2917, column: 1, scope: !576)
!5182 = !DILocalVariable(name: "iso9660", arg: 1, scope: !577, file: !1, line: 2984, type: !292)
!5183 = !DILocation(line: 2984, column: 33, scope: !577)
!5184 = !DILocalVariable(name: "file", scope: !577, file: !1, line: 2986, type: !305)
!5185 = !DILocation(line: 2986, column: 20, scope: !577)
!5186 = !DILocation(line: 2988, column: 14, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !577, file: !1, line: 2988, column: 6)
!5188 = !DILocation(line: 2988, column: 23, scope: !5187)
!5189 = !DILocation(line: 2988, column: 35, scope: !5187)
!5190 = !DILocation(line: 2988, column: 12, scope: !5187)
!5191 = !DILocation(line: 2988, column: 42, scope: !5187)
!5192 = !DILocation(line: 2988, column: 6, scope: !577)
!5193 = !DILocation(line: 2989, column: 32, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5187, file: !1, line: 2988, column: 51)
!5195 = !DILocation(line: 2989, column: 38, scope: !5194)
!5196 = !DILocation(line: 2989, column: 3, scope: !5194)
!5197 = !DILocation(line: 2989, column: 12, scope: !5194)
!5198 = !DILocation(line: 2989, column: 24, scope: !5194)
!5199 = !DILocation(line: 2989, column: 30, scope: !5194)
!5200 = !DILocation(line: 2990, column: 7, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5194, file: !1, line: 2990, column: 7)
!5202 = !DILocation(line: 2990, column: 16, scope: !5201)
!5203 = !DILocation(line: 2990, column: 28, scope: !5201)
!5204 = !DILocation(line: 2990, column: 34, scope: !5201)
!5205 = !DILocation(line: 2990, column: 7, scope: !5194)
!5206 = !DILocation(line: 2992, column: 10, scope: !5201)
!5207 = !DILocation(line: 2992, column: 19, scope: !5201)
!5208 = !DILocation(line: 2992, column: 31, scope: !5201)
!5209 = !DILocation(line: 2991, column: 4, scope: !5201)
!5210 = !DILocation(line: 2991, column: 13, scope: !5201)
!5211 = !DILocation(line: 2991, column: 25, scope: !5201)
!5212 = !DILocation(line: 2991, column: 30, scope: !5201)
!5213 = !DILocation(line: 2993, column: 2, scope: !5194)
!5214 = !DILocation(line: 2994, column: 10, scope: !577)
!5215 = !DILocation(line: 2994, column: 2, scope: !577)
!5216 = !DILocalVariable(name: "heap", arg: 1, scope: !580, file: !1, line: 3055, type: !572)
!5217 = !DILocation(line: 3055, column: 35, scope: !580)
!5218 = !DILocalVariable(name: "a_key", scope: !580, file: !1, line: 3057, type: !314)
!5219 = !DILocation(line: 3057, column: 11, scope: !580)
!5220 = !DILocalVariable(name: "b_key", scope: !580, file: !1, line: 3057, type: !314)
!5221 = !DILocation(line: 3057, column: 18, scope: !580)
!5222 = !DILocalVariable(name: "c_key", scope: !580, file: !1, line: 3057, type: !314)
!5223 = !DILocation(line: 3057, column: 25, scope: !580)
!5224 = !DILocalVariable(name: "a", scope: !580, file: !1, line: 3058, type: !23)
!5225 = !DILocation(line: 3058, column: 6, scope: !580)
!5226 = !DILocalVariable(name: "b", scope: !580, file: !1, line: 3058, type: !23)
!5227 = !DILocation(line: 3058, column: 9, scope: !580)
!5228 = !DILocalVariable(name: "c", scope: !580, file: !1, line: 3058, type: !23)
!5229 = !DILocation(line: 3058, column: 12, scope: !580)
!5230 = !DILocalVariable(name: "r", scope: !580, file: !1, line: 3059, type: !305)
!5231 = !DILocation(line: 3059, column: 20, scope: !580)
!5232 = !DILocalVariable(name: "tmp", scope: !580, file: !1, line: 3059, type: !305)
!5233 = !DILocation(line: 3059, column: 24, scope: !580)
!5234 = !DILocation(line: 3061, column: 6, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !580, file: !1, line: 3061, column: 6)
!5236 = !DILocation(line: 3061, column: 12, scope: !5235)
!5237 = !DILocation(line: 3061, column: 17, scope: !5235)
!5238 = !DILocation(line: 3061, column: 6, scope: !580)
!5239 = !DILocation(line: 3062, column: 3, scope: !5235)
!5240 = !DILocation(line: 3067, column: 6, scope: !580)
!5241 = !DILocation(line: 3067, column: 12, scope: !580)
!5242 = !DILocation(line: 3067, column: 4, scope: !580)
!5243 = !DILocation(line: 3072, column: 34, scope: !580)
!5244 = !DILocation(line: 3072, column: 40, scope: !580)
!5245 = !DILocation(line: 3072, column: 31, scope: !580)
!5246 = !DILocation(line: 3072, column: 19, scope: !580)
!5247 = !DILocation(line: 3072, column: 25, scope: !580)
!5248 = !DILocation(line: 3072, column: 2, scope: !580)
!5249 = !DILocation(line: 3072, column: 8, scope: !580)
!5250 = !DILocation(line: 3072, column: 17, scope: !580)
!5251 = !DILocation(line: 3077, column: 4, scope: !580)
!5252 = !DILocation(line: 3078, column: 22, scope: !580)
!5253 = !DILocation(line: 3078, column: 10, scope: !580)
!5254 = !DILocation(line: 3078, column: 16, scope: !580)
!5255 = !DILocation(line: 3078, column: 26, scope: !580)
!5256 = !DILocation(line: 3078, column: 8, scope: !580)
!5257 = !DILocation(line: 3079, column: 2, scope: !580)
!5258 = !DILocation(line: 3080, column: 7, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !1, line: 3079, column: 11)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 3079, column: 2)
!5261 = distinct !DILexicalBlock(scope: !580, file: !1, line: 3079, column: 2)
!5262 = !DILocation(line: 3080, column: 11, scope: !5259)
!5263 = !DILocation(line: 3080, column: 9, scope: !5259)
!5264 = !DILocation(line: 3080, column: 13, scope: !5259)
!5265 = !DILocation(line: 3080, column: 5, scope: !5259)
!5266 = !DILocation(line: 3081, column: 7, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 3081, column: 7)
!5268 = !DILocation(line: 3081, column: 12, scope: !5267)
!5269 = !DILocation(line: 3081, column: 18, scope: !5267)
!5270 = !DILocation(line: 3081, column: 9, scope: !5267)
!5271 = !DILocation(line: 3081, column: 7, scope: !5259)
!5272 = !DILocation(line: 3082, column: 12, scope: !5267)
!5273 = !DILocation(line: 3082, column: 4, scope: !5267)
!5274 = !DILocation(line: 3083, column: 23, scope: !5259)
!5275 = !DILocation(line: 3083, column: 11, scope: !5259)
!5276 = !DILocation(line: 3083, column: 17, scope: !5259)
!5277 = !DILocation(line: 3083, column: 27, scope: !5259)
!5278 = !DILocation(line: 3083, column: 9, scope: !5259)
!5279 = !DILocation(line: 3084, column: 7, scope: !5259)
!5280 = !DILocation(line: 3084, column: 9, scope: !5259)
!5281 = !DILocation(line: 3084, column: 5, scope: !5259)
!5282 = !DILocation(line: 3085, column: 7, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 3085, column: 7)
!5284 = !DILocation(line: 3085, column: 11, scope: !5283)
!5285 = !DILocation(line: 3085, column: 17, scope: !5283)
!5286 = !DILocation(line: 3085, column: 9, scope: !5283)
!5287 = !DILocation(line: 3085, column: 7, scope: !5259)
!5288 = !DILocation(line: 3086, column: 24, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5283, file: !1, line: 3085, column: 23)
!5290 = !DILocation(line: 3086, column: 12, scope: !5289)
!5291 = !DILocation(line: 3086, column: 18, scope: !5289)
!5292 = !DILocation(line: 3086, column: 28, scope: !5289)
!5293 = !DILocation(line: 3086, column: 10, scope: !5289)
!5294 = !DILocation(line: 3087, column: 8, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5289, file: !1, line: 3087, column: 8)
!5296 = !DILocation(line: 3087, column: 16, scope: !5295)
!5297 = !DILocation(line: 3087, column: 14, scope: !5295)
!5298 = !DILocation(line: 3087, column: 8, scope: !5289)
!5299 = !DILocation(line: 3088, column: 9, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5295, file: !1, line: 3087, column: 23)
!5301 = !DILocation(line: 3088, column: 7, scope: !5300)
!5302 = !DILocation(line: 3089, column: 13, scope: !5300)
!5303 = !DILocation(line: 3089, column: 11, scope: !5300)
!5304 = !DILocation(line: 3090, column: 4, scope: !5300)
!5305 = !DILocation(line: 3091, column: 3, scope: !5289)
!5306 = !DILocation(line: 3092, column: 7, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 3092, column: 7)
!5308 = !DILocation(line: 3092, column: 16, scope: !5307)
!5309 = !DILocation(line: 3092, column: 13, scope: !5307)
!5310 = !DILocation(line: 3092, column: 7, scope: !5259)
!5311 = !DILocation(line: 3093, column: 12, scope: !5307)
!5312 = !DILocation(line: 3093, column: 4, scope: !5307)
!5313 = !DILocation(line: 3094, column: 21, scope: !5259)
!5314 = !DILocation(line: 3094, column: 9, scope: !5259)
!5315 = !DILocation(line: 3094, column: 15, scope: !5259)
!5316 = !DILocation(line: 3094, column: 7, scope: !5259)
!5317 = !DILocation(line: 3095, column: 32, scope: !5259)
!5318 = !DILocation(line: 3095, column: 20, scope: !5259)
!5319 = !DILocation(line: 3095, column: 26, scope: !5259)
!5320 = !DILocation(line: 3095, column: 15, scope: !5259)
!5321 = !DILocation(line: 3095, column: 3, scope: !5259)
!5322 = !DILocation(line: 3095, column: 9, scope: !5259)
!5323 = !DILocation(line: 3095, column: 18, scope: !5259)
!5324 = !DILocation(line: 3096, column: 20, scope: !5259)
!5325 = !DILocation(line: 3096, column: 15, scope: !5259)
!5326 = !DILocation(line: 3096, column: 3, scope: !5259)
!5327 = !DILocation(line: 3096, column: 9, scope: !5259)
!5328 = !DILocation(line: 3096, column: 18, scope: !5259)
!5329 = !DILocation(line: 3097, column: 7, scope: !5259)
!5330 = !DILocation(line: 3097, column: 5, scope: !5259)
!5331 = !DILocation(line: 3079, column: 2, scope: !5332)
!5332 = !DILexicalBlockFile(scope: !5260, file: !1, discriminator: 1)
!5333 = !DILocation(line: 3099, column: 1, scope: !580)
!5334 = !DILocalVariable(name: "iso9660", arg: 1, scope: !583, file: !1, line: 2976, type: !292)
!5335 = !DILocation(line: 2976, column: 33, scope: !583)
!5336 = !DILocalVariable(name: "file", arg: 2, scope: !583, file: !1, line: 2976, type: !305)
!5337 = !DILocation(line: 2976, column: 60, scope: !583)
!5338 = !DILocation(line: 2978, column: 2, scope: !583)
!5339 = !DILocation(line: 2978, column: 8, scope: !583)
!5340 = !DILocation(line: 2978, column: 13, scope: !583)
!5341 = !DILocation(line: 2979, column: 31, scope: !583)
!5342 = !DILocation(line: 2979, column: 3, scope: !583)
!5343 = !DILocation(line: 2979, column: 12, scope: !583)
!5344 = !DILocation(line: 2979, column: 24, scope: !583)
!5345 = !DILocation(line: 2979, column: 29, scope: !583)
!5346 = !DILocation(line: 2980, column: 32, scope: !583)
!5347 = !DILocation(line: 2980, column: 38, scope: !583)
!5348 = !DILocation(line: 2980, column: 2, scope: !583)
!5349 = !DILocation(line: 2980, column: 11, scope: !583)
!5350 = !DILocation(line: 2980, column: 23, scope: !583)
!5351 = !DILocation(line: 2980, column: 28, scope: !583)
!5352 = !DILocation(line: 2981, column: 1, scope: !583)
!5353 = !DILocalVariable(name: "iso9660", arg: 1, scope: !584, file: !1, line: 2928, type: !292)
!5354 = !DILocation(line: 2928, column: 30, scope: !584)
!5355 = !DILocalVariable(name: "file", scope: !584, file: !1, line: 2930, type: !305)
!5356 = !DILocation(line: 2930, column: 20, scope: !584)
!5357 = !DILocation(line: 2932, column: 14, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !584, file: !1, line: 2932, column: 6)
!5359 = !DILocation(line: 2932, column: 23, scope: !5358)
!5360 = !DILocation(line: 2932, column: 32, scope: !5358)
!5361 = !DILocation(line: 2932, column: 12, scope: !5358)
!5362 = !DILocation(line: 2932, column: 39, scope: !5358)
!5363 = !DILocation(line: 2932, column: 6, scope: !584)
!5364 = !DILocation(line: 2933, column: 29, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5358, file: !1, line: 2932, column: 48)
!5366 = !DILocation(line: 2933, column: 35, scope: !5365)
!5367 = !DILocation(line: 2933, column: 3, scope: !5365)
!5368 = !DILocation(line: 2933, column: 12, scope: !5365)
!5369 = !DILocation(line: 2933, column: 21, scope: !5365)
!5370 = !DILocation(line: 2933, column: 27, scope: !5365)
!5371 = !DILocation(line: 2934, column: 7, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5365, file: !1, line: 2934, column: 7)
!5373 = !DILocation(line: 2934, column: 16, scope: !5372)
!5374 = !DILocation(line: 2934, column: 25, scope: !5372)
!5375 = !DILocation(line: 2934, column: 31, scope: !5372)
!5376 = !DILocation(line: 2934, column: 7, scope: !5365)
!5377 = !DILocation(line: 2936, column: 10, scope: !5372)
!5378 = !DILocation(line: 2936, column: 19, scope: !5372)
!5379 = !DILocation(line: 2936, column: 28, scope: !5372)
!5380 = !DILocation(line: 2935, column: 4, scope: !5372)
!5381 = !DILocation(line: 2935, column: 13, scope: !5372)
!5382 = !DILocation(line: 2935, column: 22, scope: !5372)
!5383 = !DILocation(line: 2935, column: 27, scope: !5372)
!5384 = !DILocation(line: 2937, column: 2, scope: !5365)
!5385 = !DILocation(line: 2938, column: 10, scope: !584)
!5386 = !DILocation(line: 2938, column: 2, scope: !584)
!5387 = !DILocalVariable(name: "re", arg: 1, scope: !585, file: !1, line: 2962, type: !305)
!5388 = !DILocation(line: 2962, column: 34, scope: !585)
!5389 = !DILocalVariable(name: "file", scope: !585, file: !1, line: 2964, type: !305)
!5390 = !DILocation(line: 2964, column: 20, scope: !585)
!5391 = !DILocation(line: 2966, column: 14, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !585, file: !1, line: 2966, column: 6)
!5393 = !DILocation(line: 2966, column: 18, scope: !5392)
!5394 = !DILocation(line: 2966, column: 29, scope: !5392)
!5395 = !DILocation(line: 2966, column: 12, scope: !5392)
!5396 = !DILocation(line: 2966, column: 36, scope: !5392)
!5397 = !DILocation(line: 2966, column: 6, scope: !585)
!5398 = !DILocation(line: 2967, column: 26, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5392, file: !1, line: 2966, column: 45)
!5400 = !DILocation(line: 2967, column: 32, scope: !5399)
!5401 = !DILocation(line: 2967, column: 3, scope: !5399)
!5402 = !DILocation(line: 2967, column: 7, scope: !5399)
!5403 = !DILocation(line: 2967, column: 18, scope: !5399)
!5404 = !DILocation(line: 2967, column: 24, scope: !5399)
!5405 = !DILocation(line: 2968, column: 7, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5399, file: !1, line: 2968, column: 7)
!5407 = !DILocation(line: 2968, column: 11, scope: !5406)
!5408 = !DILocation(line: 2968, column: 22, scope: !5406)
!5409 = !DILocation(line: 2968, column: 28, scope: !5406)
!5410 = !DILocation(line: 2968, column: 7, scope: !5399)
!5411 = !DILocation(line: 2970, column: 10, scope: !5406)
!5412 = !DILocation(line: 2970, column: 14, scope: !5406)
!5413 = !DILocation(line: 2970, column: 25, scope: !5406)
!5414 = !DILocation(line: 2969, column: 4, scope: !5406)
!5415 = !DILocation(line: 2969, column: 8, scope: !5406)
!5416 = !DILocation(line: 2969, column: 19, scope: !5406)
!5417 = !DILocation(line: 2969, column: 24, scope: !5406)
!5418 = !DILocation(line: 2971, column: 2, scope: !5399)
!5419 = !DILocation(line: 2972, column: 10, scope: !585)
!5420 = !DILocation(line: 2972, column: 2, scope: !585)
!5421 = !DILocalVariable(name: "file", arg: 1, scope: !588, file: !1, line: 2942, type: !305)
!5422 = !DILocation(line: 2942, column: 34, scope: !588)
!5423 = !DILocalVariable(name: "re", scope: !588, file: !1, line: 2944, type: !305)
!5424 = !DILocation(line: 2944, column: 20, scope: !588)
!5425 = !DILocation(line: 2949, column: 7, scope: !588)
!5426 = !DILocation(line: 2949, column: 13, scope: !588)
!5427 = !DILocation(line: 2949, column: 5, scope: !588)
!5428 = !DILocation(line: 2950, column: 2, scope: !588)
!5429 = !DILocation(line: 2950, column: 9, scope: !5430)
!5430 = !DILexicalBlockFile(scope: !588, file: !1, discriminator: 1)
!5431 = !DILocation(line: 2950, column: 12, scope: !5430)
!5432 = !DILocation(line: 2950, column: 20, scope: !5430)
!5433 = !DILocation(line: 2950, column: 24, scope: !5434)
!5434 = !DILexicalBlockFile(scope: !588, file: !1, discriminator: 2)
!5435 = !DILocation(line: 2950, column: 28, scope: !5434)
!5436 = !DILocation(line: 2950, column: 23, scope: !5434)
!5437 = !DILocation(line: 2950, column: 2, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !588, file: !1, discriminator: 3)
!5439 = !DILocation(line: 2951, column: 8, scope: !588)
!5440 = !DILocation(line: 2951, column: 12, scope: !588)
!5441 = !DILocation(line: 2951, column: 6, scope: !588)
!5442 = !DILocation(line: 2950, column: 2, scope: !5443)
!5443 = !DILexicalBlockFile(scope: !588, file: !1, discriminator: 4)
!5444 = !DILocation(line: 2952, column: 6, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !588, file: !1, line: 2952, column: 6)
!5446 = !DILocation(line: 2952, column: 9, scope: !5445)
!5447 = !DILocation(line: 2952, column: 6, scope: !588)
!5448 = !DILocation(line: 2953, column: 3, scope: !5445)
!5449 = !DILocation(line: 2955, column: 2, scope: !588)
!5450 = !DILocation(line: 2955, column: 8, scope: !588)
!5451 = !DILocation(line: 2955, column: 16, scope: !588)
!5452 = !DILocation(line: 2956, column: 25, scope: !588)
!5453 = !DILocation(line: 2956, column: 3, scope: !588)
!5454 = !DILocation(line: 2956, column: 7, scope: !588)
!5455 = !DILocation(line: 2956, column: 18, scope: !588)
!5456 = !DILocation(line: 2956, column: 23, scope: !588)
!5457 = !DILocation(line: 2957, column: 26, scope: !588)
!5458 = !DILocation(line: 2957, column: 32, scope: !588)
!5459 = !DILocation(line: 2957, column: 2, scope: !588)
!5460 = !DILocation(line: 2957, column: 6, scope: !588)
!5461 = !DILocation(line: 2957, column: 17, scope: !588)
!5462 = !DILocation(line: 2957, column: 22, scope: !588)
!5463 = !DILocation(line: 2958, column: 2, scope: !588)
!5464 = !DILocation(line: 2959, column: 1, scope: !588)
!5465 = !DILocalVariable(name: "iso9660", arg: 1, scope: !591, file: !1, line: 2920, type: !292)
!5466 = !DILocation(line: 2920, column: 30, scope: !591)
!5467 = !DILocalVariable(name: "file", arg: 2, scope: !591, file: !1, line: 2920, type: !305)
!5468 = !DILocation(line: 2920, column: 57, scope: !591)
!5469 = !DILocation(line: 2922, column: 2, scope: !591)
!5470 = !DILocation(line: 2922, column: 8, scope: !591)
!5471 = !DILocation(line: 2922, column: 16, scope: !591)
!5472 = !DILocation(line: 2923, column: 28, scope: !591)
!5473 = !DILocation(line: 2923, column: 3, scope: !591)
!5474 = !DILocation(line: 2923, column: 12, scope: !591)
!5475 = !DILocation(line: 2923, column: 21, scope: !591)
!5476 = !DILocation(line: 2923, column: 26, scope: !591)
!5477 = !DILocation(line: 2924, column: 29, scope: !591)
!5478 = !DILocation(line: 2924, column: 35, scope: !591)
!5479 = !DILocation(line: 2924, column: 2, scope: !591)
!5480 = !DILocation(line: 2924, column: 11, scope: !591)
!5481 = !DILocation(line: 2924, column: 20, scope: !591)
!5482 = !DILocation(line: 2924, column: 25, scope: !591)
!5483 = !DILocation(line: 2925, column: 1, scope: !591)
!5484 = !DILocalVariable(name: "a", arg: 1, scope: !592, file: !1, line: 955, type: !4)
!5485 = !DILocation(line: 955, column: 36, scope: !592)
!5486 = !DILocalVariable(name: "parent", arg: 2, scope: !592, file: !1, line: 955, type: !305)
!5487 = !DILocation(line: 955, column: 57, scope: !592)
!5488 = !DILocalVariable(name: "iso9660", scope: !592, file: !1, line: 957, type: !292)
!5489 = !DILocation(line: 957, column: 18, scope: !592)
!5490 = !DILocalVariable(name: "b", scope: !592, file: !1, line: 958, type: !488)
!5491 = !DILocation(line: 958, column: 23, scope: !592)
!5492 = !DILocalVariable(name: "p", scope: !592, file: !1, line: 958, type: !488)
!5493 = !DILocation(line: 958, column: 27, scope: !592)
!5494 = !DILocalVariable(name: "multi", scope: !592, file: !1, line: 959, type: !305)
!5495 = !DILocation(line: 959, column: 20, scope: !592)
!5496 = !DILocalVariable(name: "step", scope: !592, file: !1, line: 960, type: !45)
!5497 = !DILocation(line: 960, column: 9, scope: !592)
!5498 = !DILocalVariable(name: "skip_size", scope: !592, file: !1, line: 960, type: !45)
!5499 = !DILocation(line: 960, column: 15, scope: !592)
!5500 = !DILocation(line: 962, column: 31, scope: !592)
!5501 = !DILocation(line: 962, column: 34, scope: !592)
!5502 = !DILocation(line: 962, column: 42, scope: !592)
!5503 = !DILocation(line: 962, column: 12, scope: !592)
!5504 = !DILocation(line: 962, column: 10, scope: !592)
!5505 = !DILocation(line: 965, column: 6, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !592, file: !1, line: 965, column: 6)
!5507 = !DILocation(line: 965, column: 15, scope: !5506)
!5508 = !DILocation(line: 965, column: 6, scope: !592)
!5509 = !DILocation(line: 966, column: 26, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5506, file: !1, line: 965, column: 39)
!5511 = !DILocation(line: 966, column: 29, scope: !5510)
!5512 = !DILocation(line: 966, column: 38, scope: !5510)
!5513 = !DILocation(line: 966, column: 3, scope: !5510)
!5514 = !DILocation(line: 967, column: 3, scope: !5510)
!5515 = !DILocation(line: 967, column: 12, scope: !5510)
!5516 = !DILocation(line: 967, column: 35, scope: !5510)
!5517 = !DILocation(line: 968, column: 2, scope: !5510)
!5518 = !DILocation(line: 969, column: 6, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !592, file: !1, line: 969, column: 6)
!5520 = !DILocation(line: 969, column: 15, scope: !5519)
!5521 = !DILocation(line: 969, column: 34, scope: !5519)
!5522 = !DILocation(line: 969, column: 42, scope: !5519)
!5523 = !DILocation(line: 969, column: 32, scope: !5519)
!5524 = !DILocation(line: 969, column: 6, scope: !592)
!5525 = !DILocation(line: 970, column: 22, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 969, column: 50)
!5527 = !DILocation(line: 970, column: 25, scope: !5526)
!5528 = !DILocation(line: 972, column: 7, scope: !5526)
!5529 = !DILocation(line: 972, column: 15, scope: !5526)
!5530 = !DILocation(line: 972, column: 20, scope: !5526)
!5531 = !DILocation(line: 973, column: 17, scope: !5526)
!5532 = !DILocation(line: 973, column: 26, scope: !5526)
!5533 = !DILocation(line: 974, column: 17, scope: !5526)
!5534 = !DILocation(line: 974, column: 25, scope: !5526)
!5535 = !DILocation(line: 970, column: 3, scope: !5526)
!5536 = !DILocation(line: 975, column: 3, scope: !5526)
!5537 = !DILocation(line: 977, column: 6, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !592, file: !1, line: 977, column: 6)
!5539 = !DILocation(line: 977, column: 14, scope: !5538)
!5540 = !DILocation(line: 977, column: 23, scope: !5538)
!5541 = !DILocation(line: 977, column: 31, scope: !5538)
!5542 = !DILocation(line: 977, column: 21, scope: !5538)
!5543 = !DILocation(line: 977, column: 38, scope: !5538)
!5544 = !DILocation(line: 977, column: 47, scope: !5538)
!5545 = !DILocation(line: 977, column: 36, scope: !5538)
!5546 = !DILocation(line: 977, column: 6, scope: !592)
!5547 = !DILocation(line: 978, column: 22, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5538, file: !1, line: 977, column: 60)
!5549 = !DILocation(line: 978, column: 25, scope: !5548)
!5550 = !DILocation(line: 980, column: 7, scope: !5548)
!5551 = !DILocation(line: 980, column: 15, scope: !5548)
!5552 = !DILocation(line: 980, column: 20, scope: !5548)
!5553 = !DILocation(line: 978, column: 3, scope: !5548)
!5554 = !DILocation(line: 981, column: 3, scope: !5548)
!5555 = !DILocation(line: 983, column: 6, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !592, file: !1, line: 983, column: 6)
!5557 = !DILocation(line: 983, column: 15, scope: !5556)
!5558 = !DILocation(line: 983, column: 34, scope: !5556)
!5559 = !DILocation(line: 983, column: 42, scope: !5556)
!5560 = !DILocation(line: 983, column: 32, scope: !5556)
!5561 = !DILocation(line: 983, column: 6, scope: !592)
!5562 = !DILocalVariable(name: "skipsize", scope: !5563, file: !1, line: 984, type: !52)
!5563 = distinct !DILexicalBlock(scope: !5556, file: !1, line: 983, column: 50)
!5564 = !DILocation(line: 984, column: 11, scope: !5563)
!5565 = !DILocation(line: 986, column: 14, scope: !5563)
!5566 = !DILocation(line: 986, column: 22, scope: !5563)
!5567 = !DILocation(line: 986, column: 31, scope: !5563)
!5568 = !DILocation(line: 986, column: 40, scope: !5563)
!5569 = !DILocation(line: 986, column: 29, scope: !5563)
!5570 = !DILocation(line: 986, column: 12, scope: !5563)
!5571 = !DILocation(line: 987, column: 37, scope: !5563)
!5572 = !DILocation(line: 987, column: 40, scope: !5563)
!5573 = !DILocation(line: 987, column: 14, scope: !5563)
!5574 = !DILocation(line: 987, column: 12, scope: !5563)
!5575 = !DILocation(line: 988, column: 7, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5563, file: !1, line: 988, column: 7)
!5577 = !DILocation(line: 988, column: 16, scope: !5576)
!5578 = !DILocation(line: 988, column: 7, scope: !5563)
!5579 = !DILocation(line: 989, column: 17, scope: !5576)
!5580 = !DILocation(line: 989, column: 12, scope: !5576)
!5581 = !DILocation(line: 989, column: 4, scope: !5576)
!5582 = !DILocation(line: 990, column: 31, scope: !5563)
!5583 = !DILocation(line: 990, column: 39, scope: !5563)
!5584 = !DILocation(line: 990, column: 3, scope: !5563)
!5585 = !DILocation(line: 990, column: 12, scope: !5563)
!5586 = !DILocation(line: 990, column: 29, scope: !5563)
!5587 = !DILocation(line: 991, column: 2, scope: !5563)
!5588 = !DILocation(line: 993, column: 20, scope: !592)
!5589 = !DILocation(line: 993, column: 28, scope: !592)
!5590 = !DILocation(line: 993, column: 35, scope: !592)
!5591 = !DILocation(line: 993, column: 44, scope: !592)
!5592 = !DILocation(line: 993, column: 33, scope: !592)
!5593 = !DILocation(line: 993, column: 63, scope: !592)
!5594 = !DILocation(line: 994, column: 6, scope: !592)
!5595 = !DILocation(line: 994, column: 15, scope: !592)
!5596 = !DILocation(line: 993, column: 67, scope: !592)
!5597 = !DILocation(line: 994, column: 37, scope: !592)
!5598 = !DILocation(line: 994, column: 46, scope: !592)
!5599 = !DILocation(line: 994, column: 35, scope: !592)
!5600 = !DILocation(line: 993, column: 7, scope: !592)
!5601 = !DILocation(line: 995, column: 27, scope: !592)
!5602 = !DILocation(line: 995, column: 30, scope: !592)
!5603 = !DILocation(line: 995, column: 6, scope: !592)
!5604 = !DILocation(line: 995, column: 4, scope: !592)
!5605 = !DILocation(line: 996, column: 6, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !592, file: !1, line: 996, column: 6)
!5607 = !DILocation(line: 996, column: 8, scope: !5606)
!5608 = !DILocation(line: 996, column: 6, scope: !592)
!5609 = !DILocation(line: 997, column: 22, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5606, file: !1, line: 996, column: 17)
!5611 = !DILocation(line: 997, column: 25, scope: !5610)
!5612 = !DILocation(line: 997, column: 3, scope: !5610)
!5613 = !DILocation(line: 1000, column: 3, scope: !5610)
!5614 = !DILocation(line: 1002, column: 31, scope: !592)
!5615 = !DILocation(line: 1002, column: 2, scope: !592)
!5616 = !DILocation(line: 1002, column: 11, scope: !592)
!5617 = !DILocation(line: 1002, column: 28, scope: !592)
!5618 = !DILocation(line: 1003, column: 8, scope: !592)
!5619 = !DILocation(line: 1004, column: 14, scope: !592)
!5620 = !DILocation(line: 1004, column: 12, scope: !592)
!5621 = !DILocation(line: 1005, column: 2, scope: !592)
!5622 = !DILocation(line: 1005, column: 9, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !592, file: !1, discriminator: 1)
!5624 = !DILocation(line: 1005, column: 2, scope: !5623)
!5625 = !DILocation(line: 1006, column: 7, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !592, file: !1, line: 1005, column: 15)
!5627 = !DILocation(line: 1006, column: 5, scope: !5626)
!5628 = !DILocation(line: 1007, column: 8, scope: !5626)
!5629 = !DILocation(line: 1007, column: 17, scope: !5626)
!5630 = !DILocation(line: 1007, column: 5, scope: !5626)
!5631 = !DILocation(line: 1008, column: 11, scope: !5626)
!5632 = !DILocation(line: 1008, column: 20, scope: !5626)
!5633 = !DILocation(line: 1008, column: 8, scope: !5626)
!5634 = !DILocation(line: 1009, column: 3, scope: !5626)
!5635 = !DILocation(line: 1009, column: 11, scope: !5636)
!5636 = !DILexicalBlockFile(scope: !5637, file: !1, discriminator: 1)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !1, line: 1009, column: 3)
!5638 = distinct !DILexicalBlock(scope: !5626, file: !1, line: 1009, column: 3)
!5639 = !DILocation(line: 1009, column: 10, scope: !5636)
!5640 = !DILocation(line: 1009, column: 13, scope: !5636)
!5641 = !DILocation(line: 1009, column: 18, scope: !5636)
!5642 = !DILocation(line: 1009, column: 21, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5637, file: !1, discriminator: 2)
!5644 = !DILocation(line: 1009, column: 25, scope: !5643)
!5645 = !DILocation(line: 1009, column: 23, scope: !5643)
!5646 = !DILocation(line: 1009, column: 27, scope: !5643)
!5647 = !DILocation(line: 1009, column: 30, scope: !5648)
!5648 = !DILexicalBlockFile(scope: !5637, file: !1, discriminator: 3)
!5649 = !DILocation(line: 1009, column: 35, scope: !5648)
!5650 = !DILocation(line: 1009, column: 34, scope: !5648)
!5651 = !DILocation(line: 1009, column: 32, scope: !5648)
!5652 = !DILocation(line: 1009, column: 40, scope: !5648)
!5653 = !DILocation(line: 1009, column: 37, scope: !5648)
!5654 = !DILocation(line: 1009, column: 3, scope: !5655)
!5655 = !DILexicalBlockFile(scope: !5638, file: !1, discriminator: 4)
!5656 = !DILocalVariable(name: "child", scope: !5657, file: !1, line: 1010, type: !305)
!5657 = distinct !DILexicalBlock(scope: !5637, file: !1, line: 1009, column: 52)
!5658 = !DILocation(line: 1010, column: 22, scope: !5657)
!5659 = !DILocation(line: 1018, column: 10, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5657, file: !1, line: 1018, column: 8)
!5661 = !DILocation(line: 1018, column: 12, scope: !5660)
!5662 = !DILocation(line: 1018, column: 8, scope: !5660)
!5663 = !DILocation(line: 1018, column: 34, scope: !5660)
!5664 = !DILocation(line: 1019, column: 8, scope: !5660)
!5665 = !DILocation(line: 1019, column: 13, scope: !5666)
!5666 = !DILexicalBlockFile(scope: !5660, file: !1, discriminator: 1)
!5667 = !DILocation(line: 1019, column: 15, scope: !5666)
!5668 = !DILocation(line: 1019, column: 11, scope: !5666)
!5669 = !DILocation(line: 1019, column: 33, scope: !5666)
!5670 = !DILocation(line: 1018, column: 8, scope: !5671)
!5671 = !DILexicalBlockFile(scope: !5657, file: !1, discriminator: 1)
!5672 = !DILocation(line: 1020, column: 5, scope: !5660)
!5673 = !DILocation(line: 1022, column: 10, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5657, file: !1, line: 1022, column: 8)
!5675 = !DILocation(line: 1022, column: 12, scope: !5674)
!5676 = !DILocation(line: 1022, column: 8, scope: !5674)
!5677 = !DILocation(line: 1022, column: 34, scope: !5674)
!5678 = !DILocation(line: 1023, column: 8, scope: !5674)
!5679 = !DILocation(line: 1023, column: 13, scope: !5680)
!5680 = !DILexicalBlockFile(scope: !5674, file: !1, discriminator: 1)
!5681 = !DILocation(line: 1023, column: 15, scope: !5680)
!5682 = !DILocation(line: 1023, column: 11, scope: !5680)
!5683 = !DILocation(line: 1023, column: 33, scope: !5680)
!5684 = !DILocation(line: 1022, column: 8, scope: !5671)
!5685 = !DILocation(line: 1024, column: 5, scope: !5674)
!5686 = !DILocation(line: 1025, column: 28, scope: !5657)
!5687 = !DILocation(line: 1025, column: 31, scope: !5657)
!5688 = !DILocation(line: 1025, column: 39, scope: !5657)
!5689 = !DILocation(line: 1025, column: 12, scope: !5657)
!5690 = !DILocation(line: 1025, column: 10, scope: !5657)
!5691 = !DILocation(line: 1026, column: 8, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5657, file: !1, line: 1026, column: 8)
!5693 = !DILocation(line: 1026, column: 14, scope: !5692)
!5694 = !DILocation(line: 1026, column: 8, scope: !5657)
!5695 = !DILocation(line: 1027, column: 28, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5692, file: !1, line: 1026, column: 23)
!5697 = !DILocation(line: 1027, column: 31, scope: !5696)
!5698 = !DILocation(line: 1027, column: 5, scope: !5696)
!5699 = !DILocation(line: 1028, column: 5, scope: !5696)
!5700 = !DILocation(line: 1030, column: 8, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5657, file: !1, line: 1030, column: 8)
!5702 = !DILocation(line: 1030, column: 15, scope: !5701)
!5703 = !DILocation(line: 1030, column: 25, scope: !5701)
!5704 = !DILocation(line: 1030, column: 30, scope: !5701)
!5705 = !DILocation(line: 1031, column: 9, scope: !5701)
!5706 = !DILocation(line: 1031, column: 16, scope: !5701)
!5707 = !DILocation(line: 1031, column: 29, scope: !5701)
!5708 = !DILocation(line: 1031, column: 32, scope: !5709)
!5709 = !DILexicalBlockFile(scope: !5701, file: !1, discriminator: 1)
!5710 = !DILocation(line: 1031, column: 38, scope: !5709)
!5711 = !DILocation(line: 1030, column: 8, scope: !5671)
!5712 = !DILocalVariable(name: "con", scope: !5713, file: !1, line: 1032, type: !361)
!5713 = distinct !DILexicalBlock(scope: !5701, file: !1, line: 1031, column: 48)
!5714 = !DILocation(line: 1032, column: 21, scope: !5713)
!5715 = !DILocation(line: 1034, column: 9, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5713, file: !1, line: 1034, column: 9)
!5717 = !DILocation(line: 1034, column: 15, scope: !5716)
!5718 = !DILocation(line: 1034, column: 9, scope: !5713)
!5719 = !DILocation(line: 1035, column: 14, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !1, line: 1034, column: 24)
!5721 = !DILocation(line: 1035, column: 12, scope: !5720)
!5722 = !DILocation(line: 1036, column: 6, scope: !5720)
!5723 = !DILocation(line: 1036, column: 13, scope: !5720)
!5724 = !DILocation(line: 1036, column: 22, scope: !5720)
!5725 = !DILocation(line: 1036, column: 28, scope: !5720)
!5726 = !DILocation(line: 1038, column: 12, scope: !5720)
!5727 = !DILocation(line: 1038, column: 19, scope: !5720)
!5728 = !DILocation(line: 1038, column: 28, scope: !5720)
!5729 = !DILocation(line: 1037, column: 6, scope: !5720)
!5730 = !DILocation(line: 1037, column: 13, scope: !5720)
!5731 = !DILocation(line: 1037, column: 22, scope: !5720)
!5732 = !DILocation(line: 1037, column: 27, scope: !5720)
!5733 = !DILocation(line: 1039, column: 5, scope: !5720)
!5734 = !DILocation(line: 1040, column: 11, scope: !5713)
!5735 = !DILocation(line: 1040, column: 9, scope: !5713)
!5736 = !DILocation(line: 1041, column: 9, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5713, file: !1, line: 1041, column: 9)
!5738 = !DILocation(line: 1041, column: 13, scope: !5737)
!5739 = !DILocation(line: 1041, column: 9, scope: !5713)
!5740 = !DILocation(line: 1043, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5737, file: !1, line: 1041, column: 22)
!5742 = !DILocation(line: 1043, column: 14, scope: !5741)
!5743 = !DILocation(line: 1042, column: 6, scope: !5741)
!5744 = !DILocation(line: 1045, column: 29, scope: !5741)
!5745 = !DILocation(line: 1045, column: 32, scope: !5741)
!5746 = !DILocation(line: 1045, column: 6, scope: !5741)
!5747 = !DILocation(line: 1046, column: 6, scope: !5741)
!5748 = !DILocation(line: 1048, column: 19, scope: !5713)
!5749 = !DILocation(line: 1048, column: 26, scope: !5713)
!5750 = !DILocation(line: 1048, column: 5, scope: !5713)
!5751 = !DILocation(line: 1048, column: 10, scope: !5713)
!5752 = !DILocation(line: 1048, column: 17, scope: !5713)
!5753 = !DILocation(line: 1049, column: 17, scope: !5713)
!5754 = !DILocation(line: 1049, column: 24, scope: !5713)
!5755 = !DILocation(line: 1049, column: 5, scope: !5713)
!5756 = !DILocation(line: 1049, column: 10, scope: !5713)
!5757 = !DILocation(line: 1049, column: 15, scope: !5713)
!5758 = !DILocation(line: 1050, column: 5, scope: !5713)
!5759 = !DILocation(line: 1050, column: 10, scope: !5713)
!5760 = !DILocation(line: 1050, column: 15, scope: !5713)
!5761 = !DILocation(line: 1051, column: 29, scope: !5713)
!5762 = !DILocation(line: 1051, column: 6, scope: !5713)
!5763 = !DILocation(line: 1051, column: 13, scope: !5713)
!5764 = !DILocation(line: 1051, column: 22, scope: !5713)
!5765 = !DILocation(line: 1051, column: 27, scope: !5713)
!5766 = !DILocation(line: 1052, column: 30, scope: !5713)
!5767 = !DILocation(line: 1052, column: 35, scope: !5713)
!5768 = !DILocation(line: 1052, column: 5, scope: !5713)
!5769 = !DILocation(line: 1052, column: 12, scope: !5713)
!5770 = !DILocation(line: 1052, column: 21, scope: !5713)
!5771 = !DILocation(line: 1052, column: 26, scope: !5713)
!5772 = !DILocation(line: 1053, column: 9, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5713, file: !1, line: 1053, column: 9)
!5774 = !DILocation(line: 1053, column: 18, scope: !5773)
!5775 = !DILocation(line: 1053, column: 15, scope: !5773)
!5776 = !DILocation(line: 1053, column: 9, scope: !5713)
!5777 = !DILocation(line: 1054, column: 10, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !1, line: 1054, column: 10)
!5779 = distinct !DILexicalBlock(scope: !5773, file: !1, line: 1053, column: 25)
!5780 = !DILocation(line: 1055, column: 10, scope: !5778)
!5781 = !DILocation(line: 1054, column: 10, scope: !5779)
!5782 = !DILocation(line: 1056, column: 7, scope: !5778)
!5783 = !DILocation(line: 1057, column: 5, scope: !5779)
!5784 = !DILocation(line: 1058, column: 21, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5773, file: !1, line: 1057, column: 12)
!5786 = !DILocation(line: 1058, column: 28, scope: !5785)
!5787 = !DILocation(line: 1058, column: 6, scope: !5785)
!5788 = !DILocation(line: 1058, column: 13, scope: !5785)
!5789 = !DILocation(line: 1058, column: 18, scope: !5785)
!5790 = !DILocation(line: 1059, column: 11, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5785, file: !1, line: 1059, column: 10)
!5792 = !DILocation(line: 1059, column: 18, scope: !5791)
!5793 = !DILocation(line: 1059, column: 10, scope: !5785)
!5794 = !DILocation(line: 1060, column: 13, scope: !5791)
!5795 = !DILocation(line: 1060, column: 7, scope: !5791)
!5796 = !DILocation(line: 1062, column: 4, scope: !5713)
!5797 = !DILocation(line: 1063, column: 9, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5701, file: !1, line: 1063, column: 9)
!5799 = !DILocation(line: 1063, column: 38, scope: !5798)
!5800 = !DILocation(line: 1063, column: 9, scope: !5701)
!5801 = !DILocation(line: 1064, column: 6, scope: !5798)
!5802 = !DILocation(line: 1065, column: 3, scope: !5657)
!5803 = !DILocation(line: 1009, column: 49, scope: !5804)
!5804 = !DILexicalBlockFile(scope: !5637, file: !1, discriminator: 5)
!5805 = !DILocation(line: 1009, column: 48, scope: !5804)
!5806 = !DILocation(line: 1009, column: 45, scope: !5804)
!5807 = !DILocation(line: 1009, column: 3, scope: !5804)
!5808 = !DILocation(line: 1005, column: 2, scope: !5809)
!5809 = !DILexicalBlockFile(scope: !592, file: !1, discriminator: 2)
!5810 = !DILocation(line: 1068, column: 25, scope: !592)
!5811 = !DILocation(line: 1068, column: 28, scope: !592)
!5812 = !DILocation(line: 1068, column: 2, scope: !592)
!5813 = !DILocation(line: 1071, column: 14, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !592, file: !1, line: 1071, column: 6)
!5815 = !DILocation(line: 1071, column: 17, scope: !5814)
!5816 = !DILocation(line: 1071, column: 6, scope: !5814)
!5817 = !DILocation(line: 1071, column: 26, scope: !5814)
!5818 = !DILocation(line: 1071, column: 6, scope: !592)
!5819 = !DILocation(line: 1072, column: 3, scope: !5814)
!5820 = !DILocation(line: 1074, column: 2, scope: !592)
!5821 = !DILocation(line: 1075, column: 1, scope: !592)
!5822 = !DILocalVariable(name: "a", arg: 1, scope: !595, file: !1, line: 2375, type: !4)
!5823 = !DILocation(line: 2375, column: 30, scope: !595)
!5824 = !DILocalVariable(name: "iso9660", arg: 2, scope: !595, file: !1, line: 2375, type: !292)
!5825 = !DILocation(line: 2375, column: 49, scope: !595)
!5826 = !DILocalVariable(name: "heap", scope: !595, file: !1, line: 2377, type: !599)
!5827 = !DILocation(line: 2377, column: 24, scope: !595)
!5828 = !DILocalVariable(name: "b", scope: !595, file: !1, line: 2378, type: !488)
!5829 = !DILocation(line: 2378, column: 23, scope: !595)
!5830 = !DILocalVariable(name: "p", scope: !595, file: !1, line: 2378, type: !488)
!5831 = !DILocation(line: 2378, column: 27, scope: !595)
!5832 = !DILocalVariable(name: "end", scope: !595, file: !1, line: 2378, type: !488)
!5833 = !DILocation(line: 2378, column: 31, scope: !595)
!5834 = !DILocalVariable(name: "file", scope: !595, file: !1, line: 2379, type: !305)
!5835 = !DILocation(line: 2379, column: 20, scope: !595)
!5836 = !DILocalVariable(name: "step", scope: !595, file: !1, line: 2380, type: !45)
!5837 = !DILocation(line: 2380, column: 9, scope: !595)
!5838 = !DILocalVariable(name: "r", scope: !595, file: !1, line: 2381, type: !23)
!5839 = !DILocation(line: 2381, column: 6, scope: !595)
!5840 = !DILocation(line: 2384, column: 11, scope: !595)
!5841 = !DILocation(line: 2384, column: 20, scope: !595)
!5842 = !DILocation(line: 2384, column: 7, scope: !595)
!5843 = !DILocation(line: 2385, column: 9, scope: !595)
!5844 = !DILocation(line: 2385, column: 18, scope: !595)
!5845 = !DILocation(line: 2385, column: 7, scope: !595)
!5846 = !DILocation(line: 2386, column: 2, scope: !595)
!5847 = !DILocation(line: 2386, column: 9, scope: !5848)
!5848 = !DILexicalBlockFile(scope: !595, file: !1, discriminator: 1)
!5849 = !DILocation(line: 2386, column: 15, scope: !5848)
!5850 = !DILocation(line: 2386, column: 19, scope: !5848)
!5851 = !DILocation(line: 2387, column: 6, scope: !595)
!5852 = !DILocation(line: 2387, column: 12, scope: !595)
!5853 = !DILocation(line: 2387, column: 20, scope: !595)
!5854 = !DILocation(line: 2387, column: 30, scope: !595)
!5855 = !DILocation(line: 2387, column: 39, scope: !595)
!5856 = !DILocation(line: 2387, column: 27, scope: !595)
!5857 = !DILocation(line: 2386, column: 2, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !595, file: !1, discriminator: 2)
!5859 = !DILocation(line: 2388, column: 28, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !595, file: !1, line: 2387, column: 57)
!5861 = !DILocation(line: 2388, column: 31, scope: !5860)
!5862 = !DILocation(line: 2388, column: 7, scope: !5860)
!5863 = !DILocation(line: 2388, column: 5, scope: !5860)
!5864 = !DILocation(line: 2389, column: 7, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5860, file: !1, line: 2389, column: 7)
!5866 = !DILocation(line: 2389, column: 9, scope: !5865)
!5867 = !DILocation(line: 2389, column: 7, scope: !5860)
!5868 = !DILocation(line: 2390, column: 23, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !1, line: 2389, column: 18)
!5870 = !DILocation(line: 2390, column: 26, scope: !5869)
!5871 = !DILocation(line: 2390, column: 4, scope: !5869)
!5872 = !DILocation(line: 2394, column: 4, scope: !5869)
!5873 = !DILocation(line: 2396, column: 3, scope: !5860)
!5874 = !DILocation(line: 2397, column: 11, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5860, file: !1, line: 2396, column: 6)
!5876 = !DILocation(line: 2397, column: 17, scope: !5875)
!5877 = !DILocation(line: 2397, column: 25, scope: !5875)
!5878 = !DILocation(line: 2397, column: 9, scope: !5875)
!5879 = !DILocation(line: 2398, column: 8, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5875, file: !1, line: 2398, column: 8)
!5881 = !DILocation(line: 2398, column: 14, scope: !5880)
!5882 = !DILocation(line: 2398, column: 26, scope: !5880)
!5883 = !DILocation(line: 2398, column: 32, scope: !5880)
!5884 = !DILocation(line: 2398, column: 24, scope: !5880)
!5885 = !DILocation(line: 2398, column: 42, scope: !5880)
!5886 = !DILocation(line: 2398, column: 40, scope: !5880)
!5887 = !DILocation(line: 2398, column: 8, scope: !5875)
!5888 = !DILocation(line: 2399, column: 24, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5880, file: !1, line: 2398, column: 48)
!5890 = !DILocation(line: 2399, column: 27, scope: !5889)
!5891 = !DILocation(line: 2399, column: 5, scope: !5889)
!5892 = !DILocation(line: 2402, column: 5, scope: !5889)
!5893 = !DILocation(line: 2404, column: 8, scope: !5875)
!5894 = !DILocation(line: 2404, column: 12, scope: !5875)
!5895 = !DILocation(line: 2404, column: 18, scope: !5875)
!5896 = !DILocation(line: 2404, column: 10, scope: !5875)
!5897 = !DILocation(line: 2404, column: 6, scope: !5875)
!5898 = !DILocation(line: 2405, column: 10, scope: !5875)
!5899 = !DILocation(line: 2405, column: 14, scope: !5875)
!5900 = !DILocation(line: 2405, column: 20, scope: !5875)
!5901 = !DILocation(line: 2405, column: 12, scope: !5875)
!5902 = !DILocation(line: 2405, column: 8, scope: !5875)
!5903 = !DILocation(line: 2406, column: 12, scope: !5875)
!5904 = !DILocation(line: 2406, column: 4, scope: !5875)
!5905 = !DILocation(line: 2407, column: 24, scope: !5875)
!5906 = !DILocation(line: 2407, column: 27, scope: !5875)
!5907 = !DILocation(line: 2407, column: 33, scope: !5875)
!5908 = !DILocation(line: 2407, column: 36, scope: !5875)
!5909 = !DILocation(line: 2407, column: 8, scope: !5875)
!5910 = !DILocation(line: 2407, column: 6, scope: !5875)
!5911 = !DILocation(line: 2408, column: 8, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5875, file: !1, line: 2408, column: 8)
!5913 = !DILocation(line: 2408, column: 10, scope: !5912)
!5914 = !DILocation(line: 2408, column: 8, scope: !5875)
!5915 = !DILocation(line: 2409, column: 5, scope: !5912)
!5916 = !DILocation(line: 2410, column: 3, scope: !5875)
!5917 = !DILocation(line: 2410, column: 12, scope: !5918)
!5918 = !DILexicalBlockFile(scope: !5860, file: !1, discriminator: 1)
!5919 = !DILocation(line: 2410, column: 18, scope: !5918)
!5920 = !DILocation(line: 2410, column: 22, scope: !5918)
!5921 = !DILocation(line: 2411, column: 7, scope: !5860)
!5922 = !DILocation(line: 2411, column: 13, scope: !5860)
!5923 = !DILocation(line: 2411, column: 21, scope: !5860)
!5924 = !DILocation(line: 2411, column: 31, scope: !5860)
!5925 = !DILocation(line: 2411, column: 40, scope: !5860)
!5926 = !DILocation(line: 2411, column: 28, scope: !5860)
!5927 = !DILocation(line: 2410, column: 3, scope: !5928)
!5928 = !DILexicalBlockFile(scope: !5875, file: !1, discriminator: 2)
!5929 = !DILocation(line: 2415, column: 26, scope: !5860)
!5930 = !DILocation(line: 2415, column: 29, scope: !5860)
!5931 = !DILocation(line: 2415, column: 3, scope: !5860)
!5932 = !DILocation(line: 2416, column: 32, scope: !5860)
!5933 = !DILocation(line: 2416, column: 3, scope: !5860)
!5934 = !DILocation(line: 2416, column: 12, scope: !5860)
!5935 = !DILocation(line: 2416, column: 29, scope: !5860)
!5936 = !DILocation(line: 2386, column: 2, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !595, file: !1, discriminator: 3)
!5938 = !DILocation(line: 2418, column: 2, scope: !595)
!5939 = !DILocation(line: 2419, column: 1, scope: !595)
!5940 = !DILocalVariable(name: "heap", arg: 1, scope: !596, file: !1, line: 2332, type: !599)
!5941 = !DILocation(line: 2332, column: 31, scope: !596)
!5942 = !DILocalVariable(name: "a_offset", scope: !596, file: !1, line: 2334, type: !314)
!5943 = !DILocation(line: 2334, column: 11, scope: !596)
!5944 = !DILocalVariable(name: "b_offset", scope: !596, file: !1, line: 2334, type: !314)
!5945 = !DILocation(line: 2334, column: 21, scope: !596)
!5946 = !DILocalVariable(name: "c_offset", scope: !596, file: !1, line: 2334, type: !314)
!5947 = !DILocation(line: 2334, column: 31, scope: !596)
!5948 = !DILocalVariable(name: "a", scope: !596, file: !1, line: 2335, type: !23)
!5949 = !DILocation(line: 2335, column: 6, scope: !596)
!5950 = !DILocalVariable(name: "b", scope: !596, file: !1, line: 2335, type: !23)
!5951 = !DILocation(line: 2335, column: 9, scope: !596)
!5952 = !DILocalVariable(name: "c", scope: !596, file: !1, line: 2335, type: !23)
!5953 = !DILocation(line: 2335, column: 12, scope: !596)
!5954 = !DILocalVariable(name: "tmp", scope: !596, file: !1, line: 2336, type: !380)
!5955 = !DILocation(line: 2336, column: 21, scope: !596)
!5956 = !DILocation(line: 2338, column: 6, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !596, file: !1, line: 2338, column: 6)
!5958 = !DILocation(line: 2338, column: 12, scope: !5957)
!5959 = !DILocation(line: 2338, column: 16, scope: !5957)
!5960 = !DILocation(line: 2338, column: 6, scope: !596)
!5961 = !DILocation(line: 2339, column: 3, scope: !5957)
!5962 = !DILocation(line: 2344, column: 2, scope: !596)
!5963 = !DILocation(line: 2344, column: 8, scope: !596)
!5964 = !DILocation(line: 2344, column: 32, scope: !596)
!5965 = !DILocation(line: 2344, column: 38, scope: !596)
!5966 = !DILocation(line: 2344, column: 29, scope: !596)
!5967 = !DILocation(line: 2344, column: 18, scope: !596)
!5968 = !DILocation(line: 2344, column: 24, scope: !596)
!5969 = !DILocation(line: 2349, column: 4, scope: !596)
!5970 = !DILocation(line: 2350, column: 24, scope: !596)
!5971 = !DILocation(line: 2350, column: 13, scope: !596)
!5972 = !DILocation(line: 2350, column: 19, scope: !596)
!5973 = !DILocation(line: 2350, column: 27, scope: !596)
!5974 = !DILocation(line: 2350, column: 11, scope: !596)
!5975 = !DILocation(line: 2351, column: 2, scope: !596)
!5976 = !DILocation(line: 2352, column: 7, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !1, line: 2351, column: 11)
!5978 = distinct !DILexicalBlock(scope: !5979, file: !1, line: 2351, column: 2)
!5979 = distinct !DILexicalBlock(scope: !596, file: !1, line: 2351, column: 2)
!5980 = !DILocation(line: 2352, column: 11, scope: !5977)
!5981 = !DILocation(line: 2352, column: 9, scope: !5977)
!5982 = !DILocation(line: 2352, column: 13, scope: !5977)
!5983 = !DILocation(line: 2352, column: 5, scope: !5977)
!5984 = !DILocation(line: 2353, column: 7, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 2353, column: 7)
!5986 = !DILocation(line: 2353, column: 12, scope: !5985)
!5987 = !DILocation(line: 2353, column: 18, scope: !5985)
!5988 = !DILocation(line: 2353, column: 9, scope: !5985)
!5989 = !DILocation(line: 2353, column: 7, scope: !5977)
!5990 = !DILocation(line: 2354, column: 4, scope: !5985)
!5991 = !DILocation(line: 2355, column: 25, scope: !5977)
!5992 = !DILocation(line: 2355, column: 14, scope: !5977)
!5993 = !DILocation(line: 2355, column: 20, scope: !5977)
!5994 = !DILocation(line: 2355, column: 28, scope: !5977)
!5995 = !DILocation(line: 2355, column: 12, scope: !5977)
!5996 = !DILocation(line: 2356, column: 7, scope: !5977)
!5997 = !DILocation(line: 2356, column: 9, scope: !5977)
!5998 = !DILocation(line: 2356, column: 5, scope: !5977)
!5999 = !DILocation(line: 2357, column: 7, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 2357, column: 7)
!6001 = !DILocation(line: 2357, column: 11, scope: !6000)
!6002 = !DILocation(line: 2357, column: 17, scope: !6000)
!6003 = !DILocation(line: 2357, column: 9, scope: !6000)
!6004 = !DILocation(line: 2357, column: 7, scope: !5977)
!6005 = !DILocation(line: 2358, column: 26, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6000, file: !1, line: 2357, column: 22)
!6007 = !DILocation(line: 2358, column: 15, scope: !6006)
!6008 = !DILocation(line: 2358, column: 21, scope: !6006)
!6009 = !DILocation(line: 2358, column: 29, scope: !6006)
!6010 = !DILocation(line: 2358, column: 13, scope: !6006)
!6011 = !DILocation(line: 2359, column: 8, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6006, file: !1, line: 2359, column: 8)
!6013 = !DILocation(line: 2359, column: 19, scope: !6012)
!6014 = !DILocation(line: 2359, column: 17, scope: !6012)
!6015 = !DILocation(line: 2359, column: 8, scope: !6006)
!6016 = !DILocation(line: 2360, column: 9, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6012, file: !1, line: 2359, column: 29)
!6018 = !DILocation(line: 2360, column: 7, scope: !6017)
!6019 = !DILocation(line: 2361, column: 16, scope: !6017)
!6020 = !DILocation(line: 2361, column: 14, scope: !6017)
!6021 = !DILocation(line: 2362, column: 4, scope: !6017)
!6022 = !DILocation(line: 2363, column: 3, scope: !6006)
!6023 = !DILocation(line: 2364, column: 7, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 2364, column: 7)
!6025 = !DILocation(line: 2364, column: 19, scope: !6024)
!6026 = !DILocation(line: 2364, column: 16, scope: !6024)
!6027 = !DILocation(line: 2364, column: 7, scope: !5977)
!6028 = !DILocation(line: 2365, column: 4, scope: !6024)
!6029 = !DILocation(line: 2366, column: 20, scope: !5977)
!6030 = !DILocation(line: 2366, column: 9, scope: !5977)
!6031 = !DILocation(line: 2366, column: 15, scope: !5977)
!6032 = !DILocation(line: 2367, column: 14, scope: !5977)
!6033 = !DILocation(line: 2367, column: 3, scope: !5977)
!6034 = !DILocation(line: 2367, column: 9, scope: !5977)
!6035 = !DILocation(line: 2367, column: 30, scope: !5977)
!6036 = !DILocation(line: 2367, column: 19, scope: !5977)
!6037 = !DILocation(line: 2367, column: 25, scope: !5977)
!6038 = !DILocation(line: 2368, column: 14, scope: !5977)
!6039 = !DILocation(line: 2368, column: 3, scope: !5977)
!6040 = !DILocation(line: 2368, column: 9, scope: !5977)
!6041 = !DILocation(line: 2368, column: 19, scope: !5977)
!6042 = !DILocation(line: 2369, column: 7, scope: !5977)
!6043 = !DILocation(line: 2369, column: 5, scope: !5977)
!6044 = !DILocation(line: 2351, column: 2, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !5978, file: !1, discriminator: 1)
!6046 = !DILocation(line: 2371, column: 1, scope: !596)
!6047 = !DILocalVariable(name: "a", arg: 1, scope: !609, file: !1, line: 1409, type: !4)
!6048 = !DILocation(line: 1409, column: 39, scope: !609)
!6049 = !DILocalVariable(name: "buff", arg: 2, scope: !609, file: !1, line: 1410, type: !64)
!6050 = !DILocation(line: 1410, column: 18, scope: !609)
!6051 = !DILocalVariable(name: "size", arg: 3, scope: !609, file: !1, line: 1410, type: !65)
!6052 = !DILocation(line: 1410, column: 32, scope: !609)
!6053 = !DILocalVariable(name: "offset", arg: 4, scope: !609, file: !1, line: 1410, type: !66)
!6054 = !DILocation(line: 1410, column: 47, scope: !609)
!6055 = !DILocalVariable(name: "iso9660", scope: !609, file: !1, line: 1412, type: !292)
!6056 = !DILocation(line: 1412, column: 18, scope: !609)
!6057 = !DILocalVariable(name: "zisofs", scope: !609, file: !1, line: 1413, type: !1297)
!6058 = !DILocation(line: 1413, column: 18, scope: !609)
!6059 = !DILocalVariable(name: "p", scope: !609, file: !1, line: 1414, type: !488)
!6060 = !DILocation(line: 1414, column: 23, scope: !609)
!6061 = !DILocalVariable(name: "avail", scope: !609, file: !1, line: 1415, type: !45)
!6062 = !DILocation(line: 1415, column: 9, scope: !609)
!6063 = !DILocalVariable(name: "bytes_read", scope: !609, file: !1, line: 1416, type: !38)
!6064 = !DILocation(line: 1416, column: 10, scope: !609)
!6065 = !DILocalVariable(name: "uncompressed_size", scope: !609, file: !1, line: 1417, type: !45)
!6066 = !DILocation(line: 1417, column: 9, scope: !609)
!6067 = !DILocalVariable(name: "r", scope: !609, file: !1, line: 1418, type: !23)
!6068 = !DILocation(line: 1418, column: 6, scope: !609)
!6069 = !DILocation(line: 1420, column: 31, scope: !609)
!6070 = !DILocation(line: 1420, column: 34, scope: !609)
!6071 = !DILocation(line: 1420, column: 42, scope: !609)
!6072 = !DILocation(line: 1420, column: 12, scope: !609)
!6073 = !DILocation(line: 1420, column: 10, scope: !609)
!6074 = !DILocation(line: 1421, column: 12, scope: !609)
!6075 = !DILocation(line: 1421, column: 21, scope: !609)
!6076 = !DILocation(line: 1421, column: 9, scope: !609)
!6077 = !DILocation(line: 1423, column: 27, scope: !609)
!6078 = !DILocation(line: 1423, column: 6, scope: !609)
!6079 = !DILocation(line: 1423, column: 4, scope: !609)
!6080 = !DILocation(line: 1424, column: 6, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !609, file: !1, line: 1424, column: 6)
!6082 = !DILocation(line: 1424, column: 17, scope: !6081)
!6083 = !DILocation(line: 1424, column: 6, scope: !609)
!6084 = !DILocation(line: 1425, column: 22, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6081, file: !1, line: 1424, column: 23)
!6086 = !DILocation(line: 1425, column: 25, scope: !6085)
!6087 = !DILocation(line: 1425, column: 3, scope: !6085)
!6088 = !DILocation(line: 1427, column: 3, scope: !6085)
!6089 = !DILocation(line: 1429, column: 6, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !609, file: !1, line: 1429, column: 6)
!6091 = !DILocation(line: 1429, column: 19, scope: !6090)
!6092 = !DILocation(line: 1429, column: 28, scope: !6090)
!6093 = !DILocation(line: 1429, column: 17, scope: !6090)
!6094 = !DILocation(line: 1429, column: 6, scope: !609)
!6095 = !DILocation(line: 1430, column: 25, scope: !6090)
!6096 = !DILocation(line: 1430, column: 34, scope: !6090)
!6097 = !DILocation(line: 1430, column: 14, scope: !6090)
!6098 = !DILocation(line: 1430, column: 3, scope: !6090)
!6099 = !DILocation(line: 1431, column: 10, scope: !609)
!6100 = !DILocation(line: 1431, column: 8, scope: !609)
!6101 = !DILocation(line: 1432, column: 20, scope: !609)
!6102 = !DILocation(line: 1434, column: 7, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !609, file: !1, line: 1434, column: 6)
!6104 = !DILocation(line: 1434, column: 15, scope: !6103)
!6105 = !DILocation(line: 1434, column: 6, scope: !609)
!6106 = !DILocalVariable(name: "ceil", scope: !6107, file: !1, line: 1435, type: !45)
!6107 = distinct !DILexicalBlock(scope: !6103, file: !1, line: 1434, column: 28)
!6108 = !DILocation(line: 1435, column: 10, scope: !6107)
!6109 = !DILocalVariable(name: "xsize", scope: !6107, file: !1, line: 1435, type: !45)
!6110 = !DILocation(line: 1435, column: 16, scope: !6107)
!6111 = !DILocation(line: 1438, column: 20, scope: !6107)
!6112 = !DILocation(line: 1438, column: 28, scope: !6107)
!6113 = !DILocation(line: 1439, column: 21, scope: !6107)
!6114 = !DILocation(line: 1439, column: 29, scope: !6107)
!6115 = !DILocation(line: 1439, column: 18, scope: !6107)
!6116 = !DILocation(line: 1438, column: 49, scope: !6107)
!6117 = !DILocation(line: 1439, column: 41, scope: !6107)
!6118 = !DILocation(line: 1440, column: 7, scope: !6107)
!6119 = !DILocation(line: 1440, column: 15, scope: !6107)
!6120 = !DILocation(line: 1440, column: 4, scope: !6107)
!6121 = !DILocation(line: 1438, column: 8, scope: !6107)
!6122 = !DILocation(line: 1441, column: 12, scope: !6107)
!6123 = !DILocation(line: 1441, column: 17, scope: !6107)
!6124 = !DILocation(line: 1441, column: 22, scope: !6107)
!6125 = !DILocation(line: 1441, column: 9, scope: !6107)
!6126 = !DILocation(line: 1442, column: 7, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 1442, column: 7)
!6128 = !DILocation(line: 1442, column: 15, scope: !6127)
!6129 = !DILocation(line: 1442, column: 38, scope: !6127)
!6130 = !DILocation(line: 1442, column: 36, scope: !6127)
!6131 = !DILocation(line: 1442, column: 7, scope: !6107)
!6132 = !DILocalVariable(name: "alloc", scope: !6133, file: !1, line: 1443, type: !45)
!6133 = distinct !DILexicalBlock(scope: !6127, file: !1, line: 1442, column: 45)
!6134 = !DILocation(line: 1443, column: 11, scope: !6133)
!6135 = !DILocation(line: 1445, column: 8, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6133, file: !1, line: 1445, column: 8)
!6137 = !DILocation(line: 1445, column: 16, scope: !6136)
!6138 = !DILocation(line: 1445, column: 31, scope: !6136)
!6139 = !DILocation(line: 1445, column: 8, scope: !6133)
!6140 = !DILocation(line: 1446, column: 10, scope: !6136)
!6141 = !DILocation(line: 1446, column: 18, scope: !6136)
!6142 = !DILocation(line: 1446, column: 5, scope: !6136)
!6143 = !DILocation(line: 1447, column: 14, scope: !6133)
!6144 = !DILocation(line: 1447, column: 20, scope: !6133)
!6145 = !DILocation(line: 1447, column: 27, scope: !6133)
!6146 = !DILocation(line: 1447, column: 32, scope: !6133)
!6147 = !DILocation(line: 1447, column: 10, scope: !6133)
!6148 = !DILocation(line: 1448, column: 36, scope: !6133)
!6149 = !DILocation(line: 1448, column: 29, scope: !6133)
!6150 = !DILocation(line: 1448, column: 4, scope: !6133)
!6151 = !DILocation(line: 1448, column: 12, scope: !6133)
!6152 = !DILocation(line: 1448, column: 27, scope: !6133)
!6153 = !DILocation(line: 1449, column: 8, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6133, file: !1, line: 1449, column: 8)
!6155 = !DILocation(line: 1449, column: 16, scope: !6154)
!6156 = !DILocation(line: 1449, column: 31, scope: !6154)
!6157 = !DILocation(line: 1449, column: 8, scope: !6133)
!6158 = !DILocation(line: 1450, column: 24, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 1449, column: 40)
!6160 = !DILocation(line: 1450, column: 27, scope: !6159)
!6161 = !DILocation(line: 1450, column: 5, scope: !6159)
!6162 = !DILocation(line: 1452, column: 5, scope: !6159)
!6163 = !DILocation(line: 1454, column: 35, scope: !6133)
!6164 = !DILocation(line: 1454, column: 4, scope: !6133)
!6165 = !DILocation(line: 1454, column: 12, scope: !6133)
!6166 = !DILocation(line: 1454, column: 33, scope: !6133)
!6167 = !DILocation(line: 1455, column: 3, scope: !6133)
!6168 = !DILocation(line: 1456, column: 33, scope: !6107)
!6169 = !DILocation(line: 1456, column: 3, scope: !6107)
!6170 = !DILocation(line: 1456, column: 11, scope: !6107)
!6171 = !DILocation(line: 1456, column: 31, scope: !6107)
!6172 = !DILocation(line: 1459, column: 26, scope: !6107)
!6173 = !DILocation(line: 1459, column: 34, scope: !6107)
!6174 = !DILocation(line: 1459, column: 23, scope: !6107)
!6175 = !DILocation(line: 1459, column: 9, scope: !6107)
!6176 = !DILocation(line: 1460, column: 7, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 1460, column: 7)
!6178 = !DILocation(line: 1460, column: 15, scope: !6177)
!6179 = !DILocation(line: 1460, column: 42, scope: !6177)
!6180 = !DILocation(line: 1460, column: 40, scope: !6177)
!6181 = !DILocation(line: 1460, column: 7, scope: !6107)
!6182 = !DILocation(line: 1461, column: 8, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !1, line: 1461, column: 8)
!6184 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1460, column: 49)
!6185 = !DILocation(line: 1461, column: 16, scope: !6183)
!6186 = !DILocation(line: 1461, column: 36, scope: !6183)
!6187 = !DILocation(line: 1461, column: 8, scope: !6184)
!6188 = !DILocation(line: 1462, column: 10, scope: !6183)
!6189 = !DILocation(line: 1462, column: 18, scope: !6183)
!6190 = !DILocation(line: 1462, column: 5, scope: !6183)
!6191 = !DILocation(line: 1463, column: 41, scope: !6184)
!6192 = !DILocation(line: 1463, column: 34, scope: !6184)
!6193 = !DILocation(line: 1463, column: 4, scope: !6184)
!6194 = !DILocation(line: 1463, column: 12, scope: !6184)
!6195 = !DILocation(line: 1463, column: 32, scope: !6184)
!6196 = !DILocation(line: 1464, column: 8, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6184, file: !1, line: 1464, column: 8)
!6198 = !DILocation(line: 1464, column: 16, scope: !6197)
!6199 = !DILocation(line: 1464, column: 36, scope: !6197)
!6200 = !DILocation(line: 1464, column: 8, scope: !6184)
!6201 = !DILocation(line: 1465, column: 24, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6197, file: !1, line: 1464, column: 45)
!6203 = !DILocation(line: 1465, column: 27, scope: !6202)
!6204 = !DILocation(line: 1465, column: 5, scope: !6202)
!6205 = !DILocation(line: 1467, column: 5, scope: !6202)
!6206 = !DILocation(line: 1469, column: 3, scope: !6184)
!6207 = !DILocation(line: 1470, column: 38, scope: !6107)
!6208 = !DILocation(line: 1470, column: 3, scope: !6107)
!6209 = !DILocation(line: 1470, column: 11, scope: !6107)
!6210 = !DILocation(line: 1470, column: 36, scope: !6107)
!6211 = !DILocation(line: 1475, column: 7, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 1475, column: 7)
!6213 = !DILocation(line: 1475, column: 15, scope: !6212)
!6214 = !DILocation(line: 1475, column: 28, scope: !6212)
!6215 = !DILocation(line: 1475, column: 7, scope: !6107)
!6216 = !DILocation(line: 1476, column: 37, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6212, file: !1, line: 1475, column: 54)
!6218 = !DILocation(line: 1476, column: 45, scope: !6217)
!6219 = !DILocation(line: 1476, column: 35, scope: !6217)
!6220 = !DILocation(line: 1476, column: 10, scope: !6217)
!6221 = !DILocation(line: 1477, column: 8, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6217, file: !1, line: 1477, column: 8)
!6223 = !DILocation(line: 1477, column: 16, scope: !6222)
!6224 = !DILocation(line: 1477, column: 14, scope: !6222)
!6225 = !DILocation(line: 1477, column: 8, scope: !6217)
!6226 = !DILocation(line: 1478, column: 13, scope: !6222)
!6227 = !DILocation(line: 1478, column: 11, scope: !6222)
!6228 = !DILocation(line: 1478, column: 5, scope: !6222)
!6229 = !DILocation(line: 1479, column: 11, scope: !6217)
!6230 = !DILocation(line: 1479, column: 19, scope: !6217)
!6231 = !DILocation(line: 1479, column: 28, scope: !6217)
!6232 = !DILocation(line: 1479, column: 36, scope: !6217)
!6233 = !DILocation(line: 1479, column: 26, scope: !6217)
!6234 = !DILocation(line: 1479, column: 50, scope: !6217)
!6235 = !DILocation(line: 1479, column: 53, scope: !6217)
!6236 = !DILocation(line: 1479, column: 4, scope: !6217)
!6237 = !DILocation(line: 1480, column: 28, scope: !6217)
!6238 = !DILocation(line: 1480, column: 4, scope: !6217)
!6239 = !DILocation(line: 1480, column: 12, scope: !6217)
!6240 = !DILocation(line: 1480, column: 25, scope: !6217)
!6241 = !DILocation(line: 1481, column: 13, scope: !6217)
!6242 = !DILocation(line: 1481, column: 10, scope: !6217)
!6243 = !DILocation(line: 1482, column: 9, scope: !6217)
!6244 = !DILocation(line: 1482, column: 6, scope: !6217)
!6245 = !DILocation(line: 1483, column: 3, scope: !6217)
!6246 = !DILocation(line: 1484, column: 8, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 1484, column: 7)
!6248 = !DILocation(line: 1484, column: 16, scope: !6247)
!6249 = !DILocation(line: 1484, column: 30, scope: !6247)
!6250 = !DILocation(line: 1485, column: 7, scope: !6247)
!6251 = !DILocation(line: 1485, column: 15, scope: !6247)
!6252 = !DILocation(line: 1485, column: 28, scope: !6247)
!6253 = !DILocation(line: 1484, column: 7, scope: !6254)
!6254 = !DILexicalBlockFile(scope: !6107, file: !1, discriminator: 1)
!6255 = !DILocalVariable(name: "err", scope: !6256, file: !1, line: 1486, type: !23)
!6256 = distinct !DILexicalBlock(scope: !6247, file: !1, line: 1485, column: 55)
!6257 = !DILocation(line: 1486, column: 8, scope: !6256)
!6258 = !DILocation(line: 1488, column: 15, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !1, line: 1488, column: 8)
!6260 = !DILocation(line: 1488, column: 23, scope: !6259)
!6261 = !DILocation(line: 1488, column: 8, scope: !6259)
!6262 = !DILocation(line: 1489, column: 30, scope: !6259)
!6263 = !DILocation(line: 1488, column: 8, scope: !6256)
!6264 = !DILocation(line: 1490, column: 9, scope: !6259)
!6265 = !DILocation(line: 1490, column: 5, scope: !6259)
!6266 = !DILocation(line: 1491, column: 24, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6256, file: !1, line: 1491, column: 8)
!6268 = !DILocation(line: 1491, column: 32, scope: !6267)
!6269 = !DILocation(line: 1491, column: 39, scope: !6267)
!6270 = !DILocation(line: 1491, column: 8, scope: !6267)
!6271 = !DILocation(line: 1492, column: 11, scope: !6267)
!6272 = !DILocation(line: 1492, column: 19, scope: !6267)
!6273 = !DILocation(line: 1492, column: 8, scope: !6267)
!6274 = !DILocation(line: 1491, column: 8, scope: !6256)
!6275 = !DILocation(line: 1493, column: 9, scope: !6267)
!6276 = !DILocation(line: 1493, column: 5, scope: !6267)
!6277 = !DILocation(line: 1494, column: 8, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6256, file: !1, line: 1494, column: 8)
!6279 = !DILocation(line: 1494, column: 16, scope: !6278)
!6280 = !DILocation(line: 1494, column: 27, scope: !6278)
!6281 = !DILocation(line: 1494, column: 8, scope: !6256)
!6282 = !DILocation(line: 1495, column: 9, scope: !6278)
!6283 = !DILocation(line: 1495, column: 5, scope: !6278)
!6284 = !DILocation(line: 1496, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6256, file: !1, line: 1496, column: 8)
!6286 = !DILocation(line: 1496, column: 16, scope: !6285)
!6287 = !DILocation(line: 1496, column: 30, scope: !6285)
!6288 = !DILocation(line: 1496, column: 38, scope: !6285)
!6289 = !DILocation(line: 1496, column: 27, scope: !6285)
!6290 = !DILocation(line: 1496, column: 8, scope: !6256)
!6291 = !DILocation(line: 1497, column: 9, scope: !6285)
!6292 = !DILocation(line: 1497, column: 5, scope: !6285)
!6293 = !DILocation(line: 1498, column: 8, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6256, file: !1, line: 1498, column: 8)
!6295 = !DILocation(line: 1498, column: 8, scope: !6256)
!6296 = !DILocation(line: 1499, column: 24, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6294, file: !1, line: 1498, column: 13)
!6298 = !DILocation(line: 1499, column: 27, scope: !6297)
!6299 = !DILocation(line: 1499, column: 5, scope: !6297)
!6300 = !DILocation(line: 1502, column: 5, scope: !6297)
!6301 = !DILocation(line: 1504, column: 4, scope: !6256)
!6302 = !DILocation(line: 1504, column: 12, scope: !6256)
!6303 = !DILocation(line: 1504, column: 26, scope: !6256)
!6304 = !DILocation(line: 1505, column: 3, scope: !6256)
!6305 = !DILocation(line: 1509, column: 7, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 1509, column: 7)
!6307 = !DILocation(line: 1509, column: 15, scope: !6306)
!6308 = !DILocation(line: 1509, column: 29, scope: !6306)
!6309 = !DILocation(line: 1510, column: 7, scope: !6306)
!6310 = !DILocation(line: 1510, column: 15, scope: !6306)
!6311 = !DILocation(line: 1510, column: 38, scope: !6306)
!6312 = !DILocation(line: 1510, column: 46, scope: !6306)
!6313 = !DILocation(line: 1510, column: 36, scope: !6306)
!6314 = !DILocation(line: 1509, column: 7, scope: !6254)
!6315 = !DILocation(line: 1511, column: 12, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6306, file: !1, line: 1510, column: 67)
!6317 = !DILocation(line: 1511, column: 20, scope: !6316)
!6318 = !DILocation(line: 1512, column: 10, scope: !6316)
!6319 = !DILocation(line: 1512, column: 18, scope: !6316)
!6320 = !DILocation(line: 1512, column: 8, scope: !6316)
!6321 = !DILocation(line: 1511, column: 10, scope: !6316)
!6322 = !DILocation(line: 1513, column: 8, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6316, file: !1, line: 1513, column: 8)
!6324 = !DILocation(line: 1513, column: 16, scope: !6323)
!6325 = !DILocation(line: 1513, column: 14, scope: !6323)
!6326 = !DILocation(line: 1513, column: 8, scope: !6316)
!6327 = !DILocation(line: 1514, column: 13, scope: !6323)
!6328 = !DILocation(line: 1514, column: 11, scope: !6323)
!6329 = !DILocation(line: 1514, column: 5, scope: !6323)
!6330 = !DILocation(line: 1515, column: 11, scope: !6316)
!6331 = !DILocation(line: 1515, column: 19, scope: !6316)
!6332 = !DILocation(line: 1516, column: 10, scope: !6316)
!6333 = !DILocation(line: 1516, column: 18, scope: !6316)
!6334 = !DILocation(line: 1516, column: 8, scope: !6316)
!6335 = !DILocation(line: 1516, column: 40, scope: !6316)
!6336 = !DILocation(line: 1516, column: 43, scope: !6316)
!6337 = !DILocation(line: 1515, column: 4, scope: !6316)
!6338 = !DILocation(line: 1517, column: 36, scope: !6316)
!6339 = !DILocation(line: 1517, column: 4, scope: !6316)
!6340 = !DILocation(line: 1517, column: 12, scope: !6316)
!6341 = !DILocation(line: 1517, column: 33, scope: !6316)
!6342 = !DILocation(line: 1518, column: 13, scope: !6316)
!6343 = !DILocation(line: 1518, column: 10, scope: !6316)
!6344 = !DILocation(line: 1519, column: 9, scope: !6316)
!6345 = !DILocation(line: 1519, column: 6, scope: !6316)
!6346 = !DILocation(line: 1520, column: 12, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6316, file: !1, line: 1520, column: 12)
!6348 = !DILocation(line: 1520, column: 20, scope: !6347)
!6349 = !DILocation(line: 1521, column: 11, scope: !6347)
!6350 = !DILocation(line: 1521, column: 19, scope: !6347)
!6351 = !DILocation(line: 1521, column: 8, scope: !6347)
!6352 = !DILocation(line: 1520, column: 12, scope: !6316)
!6353 = !DILocation(line: 1524, column: 5, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6347, file: !1, line: 1521, column: 40)
!6355 = !DILocation(line: 1524, column: 13, scope: !6354)
!6356 = !DILocation(line: 1524, column: 23, scope: !6354)
!6357 = !DILocation(line: 1525, column: 5, scope: !6354)
!6358 = !DILocation(line: 1525, column: 13, scope: !6354)
!6359 = !DILocation(line: 1525, column: 25, scope: !6354)
!6360 = !DILocation(line: 1527, column: 5, scope: !6354)
!6361 = !DILocation(line: 1527, column: 13, scope: !6354)
!6362 = !DILocation(line: 1527, column: 25, scope: !6354)
!6363 = !DILocation(line: 1528, column: 4, scope: !6354)
!6364 = !DILocation(line: 1529, column: 3, scope: !6316)
!6365 = !DILocation(line: 1531, column: 8, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 1531, column: 7)
!6367 = !DILocation(line: 1531, column: 16, scope: !6366)
!6368 = !DILocation(line: 1531, column: 7, scope: !6107)
!6369 = !DILocation(line: 1532, column: 4, scope: !6366)
!6370 = !DILocation(line: 1533, column: 2, scope: !6107)
!6371 = !DILocation(line: 1538, column: 6, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !609, file: !1, line: 1538, column: 6)
!6373 = !DILocation(line: 1538, column: 14, scope: !6372)
!6374 = !DILocation(line: 1538, column: 26, scope: !6372)
!6375 = !DILocation(line: 1538, column: 6, scope: !609)
!6376 = !DILocalVariable(name: "bst", scope: !6377, file: !1, line: 1539, type: !318)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !1, line: 1538, column: 32)
!6378 = !DILocation(line: 1539, column: 12, scope: !6377)
!6379 = !DILocalVariable(name: "bed", scope: !6377, file: !1, line: 1539, type: !318)
!6380 = !DILocation(line: 1539, column: 17, scope: !6377)
!6381 = !DILocation(line: 1541, column: 7, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !1, line: 1541, column: 7)
!6383 = !DILocation(line: 1541, column: 15, scope: !6382)
!6384 = !DILocation(line: 1541, column: 25, scope: !6382)
!6385 = !DILocation(line: 1541, column: 32, scope: !6382)
!6386 = !DILocation(line: 1541, column: 40, scope: !6382)
!6387 = !DILocation(line: 1541, column: 29, scope: !6382)
!6388 = !DILocation(line: 1541, column: 7, scope: !6377)
!6389 = !DILocation(line: 1543, column: 23, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6382, file: !1, line: 1541, column: 61)
!6391 = !DILocation(line: 1543, column: 26, scope: !6390)
!6392 = !DILocation(line: 1543, column: 4, scope: !6390)
!6393 = !DILocation(line: 1546, column: 4, scope: !6390)
!6394 = !DILocation(line: 1549, column: 7, scope: !6377)
!6395 = !DILocation(line: 1549, column: 15, scope: !6377)
!6396 = !DILocation(line: 1549, column: 32, scope: !6377)
!6397 = !DILocation(line: 1549, column: 40, scope: !6377)
!6398 = !DILocation(line: 1549, column: 30, scope: !6377)
!6399 = !DILocation(line: 1548, column: 9, scope: !6377)
!6400 = !DILocation(line: 1548, column: 7, scope: !6377)
!6401 = !DILocation(line: 1550, column: 7, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6377, file: !1, line: 1550, column: 7)
!6403 = !DILocation(line: 1550, column: 14, scope: !6402)
!6404 = !DILocation(line: 1550, column: 22, scope: !6402)
!6405 = !DILocation(line: 1550, column: 35, scope: !6402)
!6406 = !DILocation(line: 1550, column: 48, scope: !6402)
!6407 = !DILocation(line: 1550, column: 46, scope: !6402)
!6408 = !DILocation(line: 1550, column: 32, scope: !6402)
!6409 = !DILocation(line: 1550, column: 11, scope: !6402)
!6410 = !DILocation(line: 1550, column: 7, scope: !6377)
!6411 = !DILocation(line: 1553, column: 23, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6402, file: !1, line: 1550, column: 56)
!6413 = !DILocation(line: 1553, column: 26, scope: !6412)
!6414 = !DILocation(line: 1553, column: 4, scope: !6412)
!6415 = !DILocation(line: 1556, column: 4, scope: !6412)
!6416 = !DILocation(line: 1559, column: 7, scope: !6377)
!6417 = !DILocation(line: 1559, column: 15, scope: !6377)
!6418 = !DILocation(line: 1559, column: 32, scope: !6377)
!6419 = !DILocation(line: 1559, column: 40, scope: !6377)
!6420 = !DILocation(line: 1559, column: 30, scope: !6377)
!6421 = !DILocation(line: 1559, column: 50, scope: !6377)
!6422 = !DILocation(line: 1558, column: 9, scope: !6377)
!6423 = !DILocation(line: 1558, column: 7, scope: !6377)
!6424 = !DILocation(line: 1560, column: 7, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6377, file: !1, line: 1560, column: 7)
!6426 = !DILocation(line: 1560, column: 13, scope: !6425)
!6427 = !DILocation(line: 1560, column: 11, scope: !6425)
!6428 = !DILocation(line: 1560, column: 7, scope: !6377)
!6429 = !DILocation(line: 1561, column: 23, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6425, file: !1, line: 1560, column: 18)
!6431 = !DILocation(line: 1561, column: 26, scope: !6430)
!6432 = !DILocation(line: 1561, column: 4, scope: !6430)
!6433 = !DILocation(line: 1564, column: 4, scope: !6430)
!6434 = !DILocation(line: 1566, column: 25, scope: !6377)
!6435 = !DILocation(line: 1566, column: 31, scope: !6377)
!6436 = !DILocation(line: 1566, column: 29, scope: !6377)
!6437 = !DILocation(line: 1566, column: 3, scope: !6377)
!6438 = !DILocation(line: 1566, column: 11, scope: !6377)
!6439 = !DILocation(line: 1566, column: 23, scope: !6377)
!6440 = !DILocation(line: 1567, column: 3, scope: !6377)
!6441 = !DILocation(line: 1567, column: 11, scope: !6377)
!6442 = !DILocation(line: 1567, column: 21, scope: !6377)
!6443 = !DILocation(line: 1570, column: 7, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6377, file: !1, line: 1570, column: 7)
!6445 = !DILocation(line: 1570, column: 15, scope: !6444)
!6446 = !DILocation(line: 1570, column: 7, scope: !6377)
!6447 = !DILocation(line: 1571, column: 22, scope: !6444)
!6448 = !DILocation(line: 1571, column: 30, scope: !6444)
!6449 = !DILocation(line: 1571, column: 8, scope: !6444)
!6450 = !DILocation(line: 1571, column: 6, scope: !6444)
!6451 = !DILocation(line: 1571, column: 4, scope: !6444)
!6452 = !DILocation(line: 1573, column: 8, scope: !6444)
!6453 = !DILocation(line: 1573, column: 6, scope: !6444)
!6454 = !DILocation(line: 1574, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6377, file: !1, line: 1574, column: 7)
!6456 = !DILocation(line: 1574, column: 9, scope: !6455)
!6457 = !DILocation(line: 1574, column: 7, scope: !6377)
!6458 = !DILocation(line: 1575, column: 23, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6455, file: !1, line: 1574, column: 18)
!6460 = !DILocation(line: 1575, column: 26, scope: !6459)
!6461 = !DILocation(line: 1575, column: 4, scope: !6459)
!6462 = !DILocation(line: 1577, column: 4, scope: !6459)
!6463 = !DILocation(line: 1579, column: 3, scope: !6377)
!6464 = !DILocation(line: 1579, column: 11, scope: !6377)
!6465 = !DILocation(line: 1579, column: 24, scope: !6377)
!6466 = !DILocation(line: 1580, column: 3, scope: !6377)
!6467 = !DILocation(line: 1580, column: 11, scope: !6377)
!6468 = !DILocation(line: 1580, column: 18, scope: !6377)
!6469 = !DILocation(line: 1580, column: 27, scope: !6377)
!6470 = !DILocation(line: 1581, column: 3, scope: !6377)
!6471 = !DILocation(line: 1581, column: 11, scope: !6377)
!6472 = !DILocation(line: 1581, column: 18, scope: !6377)
!6473 = !DILocation(line: 1581, column: 28, scope: !6377)
!6474 = !DILocation(line: 1582, column: 2, scope: !6377)
!6475 = !DILocation(line: 1587, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !609, file: !1, line: 1587, column: 6)
!6477 = !DILocation(line: 1587, column: 14, scope: !6476)
!6478 = !DILocation(line: 1587, column: 26, scope: !6476)
!6479 = !DILocation(line: 1587, column: 6, scope: !609)
!6480 = !DILocation(line: 1588, column: 10, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 1587, column: 32)
!6482 = !DILocation(line: 1588, column: 18, scope: !6481)
!6483 = !DILocation(line: 1589, column: 7, scope: !6481)
!6484 = !DILocation(line: 1589, column: 15, scope: !6481)
!6485 = !DILocation(line: 1588, column: 3, scope: !6481)
!6486 = !DILocation(line: 1590, column: 23, scope: !6481)
!6487 = !DILocation(line: 1590, column: 31, scope: !6481)
!6488 = !DILocation(line: 1590, column: 21, scope: !6481)
!6489 = !DILocation(line: 1591, column: 2, scope: !6481)
!6490 = !DILocation(line: 1592, column: 62, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 1591, column: 9)
!6492 = !DILocation(line: 1592, column: 37, scope: !6491)
!6493 = !DILocation(line: 1592, column: 28, scope: !6491)
!6494 = !DILocation(line: 1592, column: 3, scope: !6491)
!6495 = !DILocation(line: 1592, column: 11, scope: !6491)
!6496 = !DILocation(line: 1592, column: 18, scope: !6491)
!6497 = !DILocation(line: 1592, column: 26, scope: !6491)
!6498 = !DILocation(line: 1593, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6491, file: !1, line: 1593, column: 7)
!6500 = !DILocation(line: 1593, column: 15, scope: !6499)
!6501 = !DILocation(line: 1593, column: 23, scope: !6499)
!6502 = !DILocation(line: 1593, column: 13, scope: !6499)
!6503 = !DILocation(line: 1593, column: 7, scope: !6491)
!6504 = !DILocation(line: 1594, column: 30, scope: !6499)
!6505 = !DILocation(line: 1594, column: 38, scope: !6499)
!6506 = !DILocation(line: 1594, column: 4, scope: !6499)
!6507 = !DILocation(line: 1594, column: 12, scope: !6499)
!6508 = !DILocation(line: 1594, column: 19, scope: !6499)
!6509 = !DILocation(line: 1594, column: 28, scope: !6499)
!6510 = !DILocation(line: 1596, column: 36, scope: !6499)
!6511 = !DILocation(line: 1596, column: 30, scope: !6499)
!6512 = !DILocation(line: 1596, column: 4, scope: !6499)
!6513 = !DILocation(line: 1596, column: 12, scope: !6499)
!6514 = !DILocation(line: 1596, column: 19, scope: !6499)
!6515 = !DILocation(line: 1596, column: 28, scope: !6499)
!6516 = !DILocation(line: 1597, column: 29, scope: !6491)
!6517 = !DILocation(line: 1597, column: 37, scope: !6491)
!6518 = !DILocation(line: 1597, column: 3, scope: !6491)
!6519 = !DILocation(line: 1597, column: 11, scope: !6491)
!6520 = !DILocation(line: 1597, column: 18, scope: !6491)
!6521 = !DILocation(line: 1597, column: 27, scope: !6491)
!6522 = !DILocation(line: 1599, column: 13, scope: !6491)
!6523 = !DILocation(line: 1599, column: 21, scope: !6491)
!6524 = !DILocation(line: 1599, column: 7, scope: !6491)
!6525 = !DILocation(line: 1598, column: 3, scope: !6491)
!6526 = !DILocation(line: 1598, column: 11, scope: !6491)
!6527 = !DILocation(line: 1598, column: 18, scope: !6491)
!6528 = !DILocation(line: 1598, column: 28, scope: !6491)
!6529 = !DILocation(line: 1601, column: 16, scope: !6491)
!6530 = !DILocation(line: 1601, column: 24, scope: !6491)
!6531 = !DILocation(line: 1601, column: 7, scope: !6491)
!6532 = !DILocation(line: 1601, column: 5, scope: !6491)
!6533 = !DILocation(line: 1602, column: 11, scope: !6491)
!6534 = !DILocation(line: 1602, column: 3, scope: !6491)
!6535 = !DILocation(line: 1605, column: 4, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6491, file: !1, line: 1602, column: 14)
!6537 = !DILocation(line: 1607, column: 23, scope: !6536)
!6538 = !DILocation(line: 1607, column: 26, scope: !6536)
!6539 = !DILocation(line: 1608, column: 44, scope: !6536)
!6540 = !DILocation(line: 1607, column: 4, scope: !6536)
!6541 = !DILocation(line: 1609, column: 4, scope: !6536)
!6542 = !DILocation(line: 1612, column: 7, scope: !6491)
!6543 = !DILocation(line: 1612, column: 15, scope: !6491)
!6544 = !DILocation(line: 1612, column: 42, scope: !6491)
!6545 = !DILocation(line: 1612, column: 50, scope: !6491)
!6546 = !DILocation(line: 1612, column: 57, scope: !6491)
!6547 = !DILocation(line: 1612, column: 40, scope: !6491)
!6548 = !DILocation(line: 1611, column: 21, scope: !6491)
!6549 = !DILocation(line: 1613, column: 12, scope: !6491)
!6550 = !DILocation(line: 1613, column: 20, scope: !6491)
!6551 = !DILocation(line: 1613, column: 27, scope: !6491)
!6552 = !DILocation(line: 1613, column: 37, scope: !6491)
!6553 = !DILocation(line: 1613, column: 35, scope: !6491)
!6554 = !DILocation(line: 1613, column: 9, scope: !6491)
!6555 = !DILocation(line: 1614, column: 37, scope: !6491)
!6556 = !DILocation(line: 1614, column: 45, scope: !6491)
!6557 = !DILocation(line: 1614, column: 52, scope: !6491)
!6558 = !DILocation(line: 1614, column: 62, scope: !6491)
!6559 = !DILocation(line: 1614, column: 60, scope: !6491)
!6560 = !DILocation(line: 1614, column: 26, scope: !6491)
!6561 = !DILocation(line: 1614, column: 3, scope: !6491)
!6562 = !DILocation(line: 1614, column: 11, scope: !6491)
!6563 = !DILocation(line: 1614, column: 23, scope: !6491)
!6564 = !DILocation(line: 1587, column: 29, scope: !6565)
!6565 = !DILexicalBlockFile(scope: !6476, file: !1, discriminator: 1)
!6566 = !DILocation(line: 1617, column: 16, scope: !609)
!6567 = !DILocation(line: 1617, column: 13, scope: !609)
!6568 = !DILocation(line: 1618, column: 10, scope: !609)
!6569 = !DILocation(line: 1618, column: 18, scope: !609)
!6570 = !DILocation(line: 1618, column: 3, scope: !609)
!6571 = !DILocation(line: 1618, column: 8, scope: !609)
!6572 = !DILocation(line: 1619, column: 10, scope: !609)
!6573 = !DILocation(line: 1619, column: 3, scope: !609)
!6574 = !DILocation(line: 1619, column: 8, scope: !609)
!6575 = !DILocation(line: 1620, column: 12, scope: !609)
!6576 = !DILocation(line: 1620, column: 21, scope: !609)
!6577 = !DILocation(line: 1620, column: 3, scope: !609)
!6578 = !DILocation(line: 1620, column: 10, scope: !609)
!6579 = !DILocation(line: 1621, column: 34, scope: !609)
!6580 = !DILocation(line: 1621, column: 2, scope: !609)
!6581 = !DILocation(line: 1621, column: 11, scope: !609)
!6582 = !DILocation(line: 1621, column: 31, scope: !609)
!6583 = !DILocation(line: 1622, column: 36, scope: !609)
!6584 = !DILocation(line: 1622, column: 2, scope: !609)
!6585 = !DILocation(line: 1622, column: 11, scope: !609)
!6586 = !DILocation(line: 1622, column: 33, scope: !609)
!6587 = !DILocation(line: 1623, column: 31, scope: !609)
!6588 = !DILocation(line: 1623, column: 2, scope: !609)
!6589 = !DILocation(line: 1623, column: 11, scope: !609)
!6590 = !DILocation(line: 1623, column: 28, scope: !609)
!6591 = !DILocation(line: 1624, column: 33, scope: !609)
!6592 = !DILocation(line: 1624, column: 23, scope: !609)
!6593 = !DILocation(line: 1624, column: 2, scope: !609)
!6594 = !DILocation(line: 1624, column: 10, scope: !609)
!6595 = !DILocation(line: 1624, column: 20, scope: !609)
!6596 = !DILocation(line: 1625, column: 37, scope: !609)
!6597 = !DILocation(line: 1625, column: 2, scope: !609)
!6598 = !DILocation(line: 1625, column: 11, scope: !609)
!6599 = !DILocation(line: 1625, column: 34, scope: !609)
!6600 = !DILocation(line: 1627, column: 2, scope: !609)
!6601 = !DILocation(line: 1628, column: 1, scope: !609)
!6602 = !DILocalVariable(name: "iso9660", arg: 1, scope: !611, file: !1, line: 2648, type: !292)
!6603 = !DILocation(line: 2648, column: 31, scope: !611)
!6604 = !DILocalVariable(name: "con", scope: !611, file: !1, line: 2650, type: !361)
!6605 = !DILocation(line: 2650, column: 18, scope: !611)
!6606 = !DILocalVariable(name: "connext", scope: !611, file: !1, line: 2650, type: !361)
!6607 = !DILocation(line: 2650, column: 24, scope: !611)
!6608 = !DILocalVariable(name: "file", scope: !611, file: !1, line: 2651, type: !305)
!6609 = !DILocation(line: 2651, column: 20, scope: !611)
!6610 = !DILocation(line: 2653, column: 9, scope: !611)
!6611 = !DILocation(line: 2653, column: 18, scope: !611)
!6612 = !DILocation(line: 2653, column: 7, scope: !611)
!6613 = !DILocation(line: 2654, column: 2, scope: !611)
!6614 = !DILocation(line: 2654, column: 9, scope: !6615)
!6615 = !DILexicalBlockFile(scope: !611, file: !1, discriminator: 1)
!6616 = !DILocation(line: 2654, column: 14, scope: !6615)
!6617 = !DILocation(line: 2654, column: 2, scope: !6615)
!6618 = !DILocalVariable(name: "next", scope: !6619, file: !1, line: 2655, type: !305)
!6619 = distinct !DILexicalBlock(scope: !611, file: !1, line: 2654, column: 23)
!6620 = !DILocation(line: 2655, column: 21, scope: !6619)
!6621 = !DILocation(line: 2655, column: 28, scope: !6619)
!6622 = !DILocation(line: 2655, column: 34, scope: !6619)
!6623 = !DILocation(line: 2657, column: 24, scope: !6619)
!6624 = !DILocation(line: 2657, column: 30, scope: !6619)
!6625 = !DILocation(line: 2657, column: 3, scope: !6619)
!6626 = !DILocation(line: 2658, column: 24, scope: !6619)
!6627 = !DILocation(line: 2658, column: 30, scope: !6619)
!6628 = !DILocation(line: 2658, column: 3, scope: !6619)
!6629 = !DILocation(line: 2659, column: 8, scope: !6619)
!6630 = !DILocation(line: 2659, column: 14, scope: !6619)
!6631 = !DILocation(line: 2659, column: 3, scope: !6619)
!6632 = !DILocation(line: 2660, column: 9, scope: !6619)
!6633 = !DILocation(line: 2660, column: 15, scope: !6619)
!6634 = !DILocation(line: 2660, column: 24, scope: !6619)
!6635 = !DILocation(line: 2660, column: 7, scope: !6619)
!6636 = !DILocation(line: 2661, column: 3, scope: !6619)
!6637 = !DILocation(line: 2661, column: 10, scope: !6638)
!6638 = !DILexicalBlockFile(scope: !6619, file: !1, discriminator: 1)
!6639 = !DILocation(line: 2661, column: 14, scope: !6638)
!6640 = !DILocation(line: 2661, column: 3, scope: !6638)
!6641 = !DILocation(line: 2662, column: 14, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6619, file: !1, line: 2661, column: 23)
!6643 = !DILocation(line: 2662, column: 19, scope: !6642)
!6644 = !DILocation(line: 2662, column: 12, scope: !6642)
!6645 = !DILocation(line: 2663, column: 9, scope: !6642)
!6646 = !DILocation(line: 2663, column: 4, scope: !6642)
!6647 = !DILocation(line: 2664, column: 10, scope: !6642)
!6648 = !DILocation(line: 2664, column: 8, scope: !6642)
!6649 = !DILocation(line: 2661, column: 3, scope: !6650)
!6650 = !DILexicalBlockFile(scope: !6619, file: !1, discriminator: 2)
!6651 = !DILocation(line: 2666, column: 8, scope: !6619)
!6652 = !DILocation(line: 2666, column: 3, scope: !6619)
!6653 = !DILocation(line: 2667, column: 10, scope: !6619)
!6654 = !DILocation(line: 2667, column: 8, scope: !6619)
!6655 = !DILocation(line: 2654, column: 2, scope: !6656)
!6656 = !DILexicalBlockFile(scope: !611, file: !1, discriminator: 2)
!6657 = !DILocation(line: 2669, column: 1, scope: !611)

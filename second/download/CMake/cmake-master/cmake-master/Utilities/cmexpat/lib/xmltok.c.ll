; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmltok.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.normal_encoding = type { %struct.encoding, [256 x i8], i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)* }
%struct.encoding = type { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*)*, i8* (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i8*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)*, i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)*, i32, i8, i8 }
%struct.ATTRIBUTE = type { i8*, i8*, i8*, i8 }
%struct.position = type { i64, i64 }
%struct.unknown_encoding = type { %struct.normal_encoding, i32 (i8*, i8*)*, i8*, [256 x i16], [256 x [4 x i8]] }
%struct.INIT_ENCODING = type { %struct.encoding, %struct.encoding** }

@latin1_encoding = internal constant %struct.normal_encoding { %struct.encoding { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_prologTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_contentTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_cdataSectionTok], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_attributeValueTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_entityValueTok], i32 (%struct.encoding*, i8*, i8*)* @normal_sameName, i32 (%struct.encoding*, i8*, i8*, i8*)* @normal_nameMatchesAscii, i32 (%struct.encoding*, i8*)* @normal_nameLength, i8* (%struct.encoding*, i8*)* @normal_skipS, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)* @normal_getAtts, i32 (%struct.encoding*, i8*)* @normal_charRefNumber, i32 (%struct.encoding*, i8*, i8*)* @normal_predefinedEntityName, void (%struct.encoding*, i8*, i8*, %struct.position*)* @normal_updatePosition, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_isPublicId, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @latin1_toUtf8, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @latin1_toUtf16, i32 1, i8 0, i8 0 }, [256 x i8] c"\00\00\00\00\00\00\00\00\00\15\0A\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\15\10\0C\13\1C\1E\03\0D\1F !\22#\1B\1A\11\19\19\19\19\19\19\19\19\19\19\16\12\02\0E\0B\0F\1C\18\18\18\18\18\18\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\14\1C\04\1C\16\1C\18\18\18\18\18\18\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\1C$\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\16\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\16\1C\1A\1C\1C\16\1C\1C\1C\1C\1C\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\1C\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\1C\16\16\16\16\16\16\16\16", i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null }, align 8
@nmstrtPages = internal constant [256 x i8] calign 16
@namingBitmap = internal constant [320 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 0, i32 67108864, i32 -2013265922, i32 134217726, i32 0, i32 0, i32 -8388609, i32 -8388609, i32 -1, i32 2146697215, i32 -514, i32 2147483647, i32 -1, i32 -1, i32 -8177, i32 -63832065, i32 16777215, i32 0, i32 -65536, i32 -1, i32 -1, i32 -134217217, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -10432, i32 -5, i32 1417641983, i32 1048573, i32 -8194, i32 -1, i32 -536936449, i32 -1, i32 -65533, i32 -1, i32 -58977, i32 54513663, i32 0, i32 -131072, i32 41943039, i32 -2, i32 127, i32 0, i32 -65536, i32 460799, i32 0, i32 134217726, i32 2046, i32 -131072, i32 -1, i32 2097151999, i32 3112959, i32 96, i32 -32, i32 603979775, i32 -16777216, i32 3, i32 -417824, i32 63307263, i32 -1342177280, i32 196611, i32 -423968, i32 57540095, i32 1577058304, i32 1835008, i32 -282656, i32 602799615, i32 0, i32 1, i32 -417824, i32 600702463, i32 -1342177280, i32 3, i32 -700594208, i32 62899992, i32 0, i32 0, i32 -139296, i32 66059775, i32 0, i32 3, i32 -139296, i32 66059775, i32 1073741824, i32 3, i32 -139296, i32 67108351, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 884735, i32 63, i32 0, i32 -17816170, i32 537750702, i32 31, i32 0, i32 0, i32 0, i32 -257, i32 1023, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -65473, i32 8388607, i32 514797, i32 1342177280, i32 -2110697471, i32 2908843, i32 1073741824, i32 -176109312, i32 7, i32 33622016, i32 -1, i32 -1, i32 -1, i32 -1, i32 268435455, i32 -1, i32 -1, i32 67108863, i32 1061158911, i32 -1, i32 -1426112705, i32 1073741823, i32 -1, i32 1608515583, i32 265232348, i32 534519807, i32 0, i32 19520, i32 0, i32 0, i32 7, i32 0, i32 0, i32 0, i32 128, i32 1022, i32 -2, i32 -1, i32 2097151, i32 -2, i32 -1, i32 134217727, i32 -32, i32 8191, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 63, i32 0, i32 0, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 15, i32 0, i32 0, i32 0, i32 134176768, i32 -2013265922, i32 134217726, i32 0, i32 8388608, i32 -8388609, i32 -8388609, i32 16777215, i32 0, i32 -65536, i32 -1, i32 -1, i32 -134217217, i32 196611, i32 0, i32 -1, i32 -1, i32 63, i32 3, i32 -10304, i32 -5, i32 1417641983, i32 1048573, i32 -8194, i32 -1, i32 -536936449, i32 -1, i32 -65413, i32 -1, i32 -58977, i32 54513663, i32 0, i32 -131072, i32 41943039, i32 -2, i32 -130945, i32 -1140850693, i32 -65514, i32 460799, i32 0, i32 134217726, i32 524287, i32 -64513, i32 -1, i32 2097151999, i32 -1081345, i32 67059199, i32 -18, i32 -201326593, i32 -14794753, i32 65487, i32 -417810, i32 -741999105, i32 -1333773921, i32 262095, i32 -423964, i32 -747766273, i32 1577073031, i32 2097088, i32 -282642, i32 -202506753, i32 15295, i32 65473, i32 -417810, i32 -204603905, i32 -1329579633, i32 65475, i32 -700594196, i32 -1010841832, i32 8404423, i32 65408, i32 -139282, i32 -1007682049, i32 6307295, i32 65475, i32 -139284, i32 -1007682049, i32 1080049119, i32 65475, i32 -139284, i32 -1006633473, i32 8404431, i32 65475, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 134184959, i32 67076095, i32 0, i32 -17816170, i32 1006595246, i32 67059551, i32 0, i32 50331648, i32 -1029700609, i32 -257, i32 -130049, i32 -21032993, i32 50216959, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 536805376, i32 2, i32 160, i32 4128766, i32 -2, i32 -1, i32 1713373183, i32 -2, i32 -1, i32 2013265919], align 16
@namePages = internal constant [256 x i8] calign 16
@internal_utf8_encoding = internal constant %struct.normal_encoding { %struct.encoding { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_prologTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_contentTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_cdataSectionTok], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_attributeValueTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_entityValueTok], i32 (%struct.encoding*, i8*, i8*)* @normal_sameName, i32 (%struct.encoding*, i8*, i8*, i8*)* @normal_nameMatchesAscii, i32 (%struct.encoding*, i8*)* @normal_nameLength, i8* (%struct.encoding*, i8*)* @normal_skipS, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)* @normal_getAtts, i32 (%struct.encoding*, i8*)* @normal_charRefNumber, i32 (%struct.encoding*, i8*, i8*)* @normal_predefinedEntityName, void (%struct.encoding*, i8*, i8*, %struct.position*)* @normal_updatePosition, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_isPublicId, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @utf8_toUtf8, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @utf8_toUtf16, i32 1, i8 1, i8 0 }, [256 x i8] ci32 (%struct.encoding*, i8*)* @utf8_isName2, i32 (%struct.encoding*, i8*)* @utf8_isName3, i32 (%struct.encoding*, i8*)* @isNever, i32 (%struct.encoding*, i8*)* @utf8_isNmstrt2, i32 (%struct.encoding*, i8*)* @utf8_isNmstrt3, i32 (%struct.encoding*, i8*)* @isNever, i32 (%struct.encoding*, i8*)* @utf8_isInvalid2, i32 (%struct.encoding*, i8*)* @utf8_isInvalid3, i32 (%struct.encoding*, i8*)* @utf8_isInvalid4 }, align 8
@internal_little2_encoding = internal constant %struct.normal_encoding { %struct.encoding { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_prologTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_contentTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_cdataSectionTok], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_attributeValueTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_entityValueTok], i32 (%struct.encoding*, i8*, i8*)* @little2_sameName, i32 (%struct.encoding*, i8*, i8*, i8*)* @little2_nameMatchesAscii, i32 (%struct.encoding*, i8*)* @little2_nameLength, i8* (%struct.encoding*, i8*)* @little2_skipS, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)* @little2_getAtts, i32 (%struct.encoding*, i8*)* @little2_charRefNumber, i32 (%struct.encoding*, i8*, i8*)* @little2_predefinedEntityName, void (%struct.encoding*, i8*, i8*, %struct.position*)* @little2_updatePosition, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_isPublicId, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @little2_toUtf8, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @little2_toUtf16, i32 2, i8 0, i8 1 }, [256 x i8] ci32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null }, align 8
@normal_scanCdataSection.CDATA_LSQB = internal constant [6 x i8] c"CDATA[", align 1
@little2_scanCdataSection.CDATA_LSQB = internal constant [6 x i8] c"CDATA[", align 1
@getEncodingIndex.encodingNames = internal constant [6 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @KW_ISO_8859_1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @KW_US_ASCII, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @KW_UTF_8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @KW_UTF_16, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @KW_UTF_16BE, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @KW_UTF_16LE, i32 0, i32 0)], align 16
@KW_ISO_8859_1 = internal constant [11 x i8] c"ISO-8859-1\00", align 1
@KW_US_ASCII = internal constant [9 x i8] c"US-ASCII\00", align 1
@KW_UTF_8 = internal constant [6 x i8] c"UTF-8\00", align 1
@KW_UTF_16 = internal constant [7 x i8] c"UTF-16\00", align 1
@KW_UTF_16BE = internal constant [9 x i8] c"UTF-16BE\00", align 1
@KW_UTF_16LE = internal constant [9 x i8] c"UTF-16LE\00", align 1
@encodings = internal constant [7 x %struct.encoding*] [%struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @latin1_encoding, i32 0, i32 0), %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @ascii_encoding, i32 0, i32 0), %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @utf8_encoding, i32 0, i32 0), %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @big2_encoding, i32 0, i32 0), %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @big2_encoding, i32 0, i32 0), %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @little2_encoding, i32 0, i32 0), %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @utf8_encoding, i32 0, i32 0)], align 16
@ascii_encoding = internal constant %struct.normal_encoding { %struct.encoding { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_prologTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_contentTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_cdataSectionTok], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_attributeValueTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_entityValueTok], i32 (%struct.encoding*, i8*, i8*)* @normal_sameName, i32 (%struct.encoding*, i8*, i8*, i8*)* @normal_nameMatchesAscii, i32 (%struct.encoding*, i8*)* @normal_nameLength, i8* (%struct.encoding*, i8*)* @normal_skipS, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)* @normal_getAtts, i32 (%struct.encoding*, i8*)* @normal_charRefNumber, i32 (%struct.encoding*, i8*, i8*)* @normal_predefinedEntityName, void (%struct.encoding*, i8*, i8*, %struct.position*)* @normal_updatePosition, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_isPublicId, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @ascii_toUtf8, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @latin1_toUtf16, i32 1, i8 1, i8 0 }, [256 x i8] ci32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null }, align 8
@utf8_encoding = internal constant %struct.normal_encoding { %struct.encoding { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_prologTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_contentTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_cdataSectionTok], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_attributeValueTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_entityValueTok], i32 (%struct.encoding*, i8*, i8*)* @normal_sameName, i32 (%struct.encoding*, i8*, i8*, i8*)* @normal_nameMatchesAscii, i32 (%struct.encoding*, i8*)* @normal_nameLength, i8* (%struct.encoding*, i8*)* @normal_skipS, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)* @normal_getAtts, i32 (%struct.encoding*, i8*)* @normal_charRefNumber, i32 (%struct.encoding*, i8*, i8*)* @normal_predefinedEntityName, void (%struct.encoding*, i8*, i8*, %struct.position*)* @normal_updatePosition, i32 (%struct.encoding*, i8*, i8*, i8**)* @normal_isPublicId, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @utf8_toUtf8, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @utf8_toUtf16, i32 1, i8 1, i8 0 }, [256 x i8] c"\00\00\00\00\00\00\00\00\00\15\0A\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\15\10\0C\13\1C\1E\03\0D\1F !\22#\1B\1A\11\19\19\19\19\19\19\19\19\19\19\16\12\02\0E\0B\0F\1C\18\18\18\18\18\18\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\14\1C\04\1C\16\1C\18\18\18\18\18\18\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\16\1C$\1C\1C\1C\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\07\00\00\00\00\00\00\00\00\00\01\01", i32 (%struct.encoding*, i8*)* @utf8_isName2, i32 (%struct.encoding*, i8*)* @utf8_isName3, i32 (%struct.encoding*, i8*)* @isNever, i32 (%struct.encoding*, i8*)* @utf8_isNmstrt2, i32 (%struct.encoding*, i8*)* @utf8_isNmstrt3, i32 (%struct.encoding*, i8*)* @isNever, i32 (%struct.encoding*, i8*)* @utf8_isInvalid2, i32 (%struct.encoding*, i8*)* @utf8_isInvalid3, i32 (%struct.encoding*, i8*)* @utf8_isInvalid4 }, align 8
@big2_encoding = internal constant %struct.normal_encoding { %struct.encoding { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @big2_prologTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @big2_contentTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @big2_cdataSectionTok], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @big2_attributeValueTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @big2_entityValueTok], i32 (%struct.encoding*, i8*, i8*)* @big2_sameName, i32 (%struct.encoding*, i8*, i8*, i8*)* @big2_nameMatchesAscii, i32 (%struct.encoding*, i8*)* @big2_nameLength, i8* (%struct.encoding*, i8*)* @big2_skipS, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)* @big2_getAtts, i32 (%struct.encoding*, i8*)* @big2_charRefNumber, i32 (%struct.encoding*, i8*, i8*)* @big2_predefinedEntityName, void (%struct.encoding*, i8*, i8*, %struct.position*)* @big2_updatePosition, i32 (%struct.encoding*, i8*, i8*, i8**)* @big2_isPublicId, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @big2_toUtf8, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @big2_toUtf16, i32 2, i8 0, i8 0 }, [256 x i8] ci32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null }, align 8
@little2_encoding = internal constant %struct.normal_encoding { %struct.encoding { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_prologTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_contentTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_cdataSectionTok], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*] [i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_attributeValueTok, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_entityValueTok], i32 (%struct.encoding*, i8*, i8*)* @little2_sameName, i32 (%struct.encoding*, i8*, i8*, i8*)* @little2_nameMatchesAscii, i32 (%struct.encoding*, i8*)* @little2_nameLength, i8* (%struct.encoding*, i8*)* @little2_skipS, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)* @little2_getAtts, i32 (%struct.encoding*, i8*)* @little2_charRefNumber, i32 (%struct.encoding*, i8*, i8*)* @little2_predefinedEntityName, void (%struct.encoding*, i8*, i8*, %struct.position*)* @little2_updatePosition, i32 (%struct.encoding*, i8*, i8*, i8**)* @little2_isPublicId, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @little2_toUtf8, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @little2_toUtf16, i32 2, i8 0, i8 1 }, [256 x i8] ci32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null, i32 (%struct.encoding*, i8*)* null }, align 8
@big2_scanCdataSection.CDATA_LSQB = internal constant [6 x i8] c"CDATA[", align 1
@KW_version = internal constant [8 x i8] c"version\00", align 1
@KW_encoding = internal constant [9 x i8] c"encoding\00", align 1
@KW_standalone = internal constant [11 x i8] c"standalone\00", align 1
@KW_yes = internal constant [4 x i8] c"yes\00", align 1
@KW_no = internal constant [3 x i8] c"no\00", align 1

; Function Attrs: nounwind uwtable
define void @align_limit_to_full_utf8_characters(i8* %from, i8** %fromLimRef) #0 !dbg !220 {
entry:
  %from.addr = alloca i8*, align 8
  %fromLimRef.addr = alloca i8**, align 8
  %fromLim = alloca i8*, align 8
  %walked = alloca i64, align 8
  %prev = alloca i8, align 1
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !443, metadata !444), !dbg !445
  store i8** %fromLimRef, i8*** %fromLimRef.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromLimRef.addr, metadata !446, metadata !444), !dbg !447
  call void @llvm.dbg.declare(metadata i8** %fromLim, metadata !448, metadata !444), !dbg !449
  %0 = load i8**, i8*** %fromLimRef.addr, align 8, !dbg !450
  %1 = load i8*, i8** %0, align 8, !dbg !451
  store i8* %1, i8** %fromLim, align 8, !dbg !449
  call void @llvm.dbg.declare(metadata i64* %walked, metadata !452, metadata !444), !dbg !455
  store i64 0, i64* %walked, align 8, !dbg !455
  br label %for.cond, !dbg !456

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %fromLim, align 8, !dbg !457
  %3 = load i8*, i8** %from.addr, align 8, !dbg !461
  %cmp = icmp ugt i8* %2, %3, !dbg !462
  br i1 %cmp, label %for.body, label %for.end, !dbg !463

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %prev, metadata !464, metadata !444), !dbg !466
  %4 = load i8*, i8** %fromLim, align 8, !dbg !467
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !467
  %5 = load i8, i8* %arrayidx, align 1, !dbg !467
  store i8 %5, i8* %prev, align 1, !dbg !466
  %6 = load i8, i8* %prev, align 1, !dbg !468
  %conv = zext i8 %6 to i32, !dbg !468
  %and = and i32 %conv, 248, !dbg !470
  %cmp1 = icmp eq i32 %and, 240, !dbg !471
  br i1 %cmp1, label %if.then, label %if.else6, !dbg !472

if.then:                                          ; preds = %for.body
  %7 = load i64, i64* %walked, align 8, !dbg !473
  %add = add i64 %7, 1, !dbg !476
  %cmp3 = icmp uge i64 %add, 4, !dbg !477
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !478

if.then5:                                         ; preds = %if.then
  %8 = load i8*, i8** %fromLim, align 8, !dbg !479
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 3, !dbg !479
  store i8* %add.ptr, i8** %fromLim, align 8, !dbg !479
  br label %for.end, !dbg !481

if.else:                                          ; preds = %if.then
  store i64 0, i64* %walked, align 8, !dbg !482
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end41, !dbg !484

if.else6:                                         ; preds = %for.body
  %9 = load i8, i8* %prev, align 1, !dbg !485
  %conv7 = zext i8 %9 to i32, !dbg !485
  %and8 = and i32 %conv7, 240, !dbg !488
  %cmp9 = icmp eq i32 %and8, 224, !dbg !489
  br i1 %cmp9, label %if.then11, label %if.else19, !dbg !490

if.then11:                                        ; preds = %if.else6
  %10 = load i64, i64* %walked, align 8, !dbg !491
  %add12 = add i64 %10, 1, !dbg !494
  %cmp13 = icmp uge i64 %add12, 3, !dbg !495
  br i1 %cmp13, label %if.then15, label %if.else17, !dbg !496

if.then15:                                        ; preds = %if.then11
  %11 = load i8*, i8** %fromLim, align 8, !dbg !497
  %add.ptr16 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !497
  store i8* %add.ptr16, i8** %fromLim, align 8, !dbg !497
  br label %for.end, !dbg !499

if.else17:                                        ; preds = %if.then11
  store i64 0, i64* %walked, align 8, !dbg !500
  br label %if.end18

if.end18:                                         ; preds = %if.else17
  br label %if.end40, !dbg !502

if.else19:                                        ; preds = %if.else6
  %12 = load i8, i8* %prev, align 1, !dbg !503
  %conv20 = zext i8 %12 to i32, !dbg !503
  %and21 = and i32 %conv20, 224, !dbg !506
  %cmp22 = icmp eq i32 %and21, 192, !dbg !507
  br i1 %cmp22, label %if.then24, label %if.else32, !dbg !508

if.then24:                                        ; preds = %if.else19
  %13 = load i64, i64* %walked, align 8, !dbg !509
  %add25 = add i64 %13, 1, !dbg !512
  %cmp26 = icmp uge i64 %add25, 2, !dbg !513
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !514

if.then28:                                        ; preds = %if.then24
  %14 = load i8*, i8** %fromLim, align 8, !dbg !515
  %add.ptr29 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !515
  store i8* %add.ptr29, i8** %fromLim, align 8, !dbg !515
  br label %for.end, !dbg !517

if.else30:                                        ; preds = %if.then24
  store i64 0, i64* %walked, align 8, !dbg !518
  br label %if.end31

if.end31:                                         ; preds = %if.else30
  br label %if.end39, !dbg !520

if.else32:                                        ; preds = %if.else19
  %15 = load i8, i8* %prev, align 1, !dbg !521
  %conv33 = zext i8 %15 to i32, !dbg !521
  %and34 = and i32 %conv33, 128, !dbg !524
  %cmp35 = icmp eq i32 %and34, 0, !dbg !525
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !526

if.then37:                                        ; preds = %if.else32
  br label %for.end, !dbg !527

if.end38:                                         ; preds = %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end31
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end18
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end
  br label %for.inc, !dbg !529

for.inc:                                          ; preds = %if.end41
  %16 = load i8*, i8** %fromLim, align 8, !dbg !530
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 -1, !dbg !530
  store i8* %incdec.ptr, i8** %fromLim, align 8, !dbg !530
  %17 = load i64, i64* %walked, align 8, !dbg !532
  %inc = add i64 %17, 1, !dbg !532
  store i64 %inc, i64* %walked, align 8, !dbg !532
  br label %for.cond, !dbg !533

for.end:                                          ; preds = %if.then37, %if.then28, %if.then15, %if.then5, %for.cond
  %18 = load i8*, i8** %fromLim, align 8, !dbg !534
  %19 = load i8**, i8*** %fromLimRef.addr, align 8, !dbg !535
  store i8* %18, i8** %19, align 8, !dbg !536
  ret void, !dbg !537
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @XmlUtf8Encode(i32 %c, i8* %buf) #0 !dbg !4 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !538, metadata !444), !dbg !539
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !540, metadata !444), !dbg !541
  %0 = load i32, i32* %c.addr, align 4, !dbg !542
  %cmp = icmp slt i32 %0, 0, !dbg !544
  br i1 %cmp, label %if.then, label %if.end, !dbg !545

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !546
  br label %return, !dbg !546

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !547
  %cmp1 = icmp slt i32 %1, 128, !dbg !549
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !550

if.then2:                                         ; preds = %if.end
  %2 = load i32, i32* %c.addr, align 4, !dbg !551
  %conv = trunc i32 %2 to i8, !dbg !553
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !554
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !554
  store i8 %conv, i8* %arrayidx, align 1, !dbg !555
  store i32 1, i32* %retval, align 4, !dbg !556
  br label %return, !dbg !556

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %c.addr, align 4, !dbg !557
  %cmp4 = icmp slt i32 %4, 2048, !dbg !559
  br i1 %cmp4, label %if.then6, label %if.end12, !dbg !560

if.then6:                                         ; preds = %if.end3
  %5 = load i32, i32* %c.addr, align 4, !dbg !561
  %shr = ashr i32 %5, 6, !dbg !563
  %or = or i32 %shr, 192, !dbg !564
  %conv7 = trunc i32 %or to i8, !dbg !565
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !566
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !566
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !567
  %7 = load i32, i32* %c.addr, align 4, !dbg !568
  %and = and i32 %7, 63, !dbg !569
  %or9 = or i32 %and, 128, !dbg !570
  %conv10 = trunc i32 %or9 to i8, !dbg !571
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !572
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !572
  store i8 %conv10, i8* %arrayidx11, align 1, !dbg !573
  store i32 2, i32* %retval, align 4, !dbg !574
  br label %return, !dbg !574

if.end12:                                         ; preds = %if.end3
  %9 = load i32, i32* %c.addr, align 4, !dbg !575
  %cmp13 = icmp slt i32 %9, 65536, !dbg !577
  br i1 %cmp13, label %if.then15, label %if.end29, !dbg !578

if.then15:                                        ; preds = %if.end12
  %10 = load i32, i32* %c.addr, align 4, !dbg !579
  %shr16 = ashr i32 %10, 12, !dbg !581
  %or17 = or i32 %shr16, 224, !dbg !582
  %conv18 = trunc i32 %or17 to i8, !dbg !583
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !584
  %arrayidx19 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !584
  store i8 %conv18, i8* %arrayidx19, align 1, !dbg !585
  %12 = load i32, i32* %c.addr, align 4, !dbg !586
  %shr20 = ashr i32 %12, 6, !dbg !587
  %and21 = and i32 %shr20, 63, !dbg !588
  %or22 = or i32 %and21, 128, !dbg !589
  %conv23 = trunc i32 %or22 to i8, !dbg !590
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !591
  %arrayidx24 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !591
  store i8 %conv23, i8* %arrayidx24, align 1, !dbg !592
  %14 = load i32, i32* %c.addr, align 4, !dbg !593
  %and25 = and i32 %14, 63, !dbg !594
  %or26 = or i32 %and25, 128, !dbg !595
  %conv27 = trunc i32 %or26 to i8, !dbg !596
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !597
  %arrayidx28 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !597
  store i8 %conv27, i8* %arrayidx28, align 1, !dbg !598
  store i32 3, i32* %retval, align 4, !dbg !599
  br label %return, !dbg !599

if.end29:                                         ; preds = %if.end12
  %16 = load i32, i32* %c.addr, align 4, !dbg !600
  %cmp30 = icmp slt i32 %16, 1114112, !dbg !602
  br i1 %cmp30, label %if.then32, label %if.end51, !dbg !603

if.then32:                                        ; preds = %if.end29
  %17 = load i32, i32* %c.addr, align 4, !dbg !604
  %shr33 = ashr i32 %17, 18, !dbg !606
  %or34 = or i32 %shr33, 240, !dbg !607
  %conv35 = trunc i32 %or34 to i8, !dbg !608
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !609
  %arrayidx36 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !609
  store i8 %conv35, i8* %arrayidx36, align 1, !dbg !610
  %19 = load i32, i32* %c.addr, align 4, !dbg !611
  %shr37 = ashr i32 %19, 12, !dbg !612
  %and38 = and i32 %shr37, 63, !dbg !613
  %or39 = or i32 %and38, 128, !dbg !614
  %conv40 = trunc i32 %or39 to i8, !dbg !615
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !616
  %arrayidx41 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !616
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !617
  %21 = load i32, i32* %c.addr, align 4, !dbg !618
  %shr42 = ashr i32 %21, 6, !dbg !619
  %and43 = and i32 %shr42, 63, !dbg !620
  %or44 = or i32 %and43, 128, !dbg !621
  %conv45 = trunc i32 %or44 to i8, !dbg !622
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !623
  %arrayidx46 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !623
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !624
  %23 = load i32, i32* %c.addr, align 4, !dbg !625
  %and47 = and i32 %23, 63, !dbg !626
  %or48 = or i32 %and47, 128, !dbg !627
  %conv49 = trunc i32 %or48 to i8, !dbg !628
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !629
  %arrayidx50 = getelementptr inbounds i8, i8* %24, i64 3, !dbg !629
  store i8 %conv49, i8* %arrayidx50, align 1, !dbg !630
  store i32 4, i32* %retval, align 4, !dbg !631
  br label %return, !dbg !631

if.end51:                                         ; preds = %if.end29
  store i32 0, i32* %retval, align 4, !dbg !632
  br label %return, !dbg !632

return:                                           ; preds = %if.end51, %if.then32, %if.then15, %if.then6, %if.then2, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !633
  ret i32 %25, !dbg !633
}

; Function Attrs: nounwind uwtable
define i32 @XmlUtf16Encode(i32 %charNum, i16* %buf) #0 !dbg !223 {
entry:
  %retval = alloca i32, align 4
  %charNum.addr = alloca i32, align 4
  %buf.addr = alloca i16*, align 8
  store i32 %charNum, i32* %charNum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %charNum.addr, metadata !634, metadata !444), !dbg !635
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !636, metadata !444), !dbg !637
  %0 = load i32, i32* %charNum.addr, align 4, !dbg !638
  %cmp = icmp slt i32 %0, 0, !dbg !640
  br i1 %cmp, label %if.then, label %if.end, !dbg !641

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !642
  br label %return, !dbg !642

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %charNum.addr, align 4, !dbg !643
  %cmp1 = icmp slt i32 %1, 65536, !dbg !645
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !646

if.then2:                                         ; preds = %if.end
  %2 = load i32, i32* %charNum.addr, align 4, !dbg !647
  %conv = trunc i32 %2 to i16, !dbg !649
  %3 = load i16*, i16** %buf.addr, align 8, !dbg !650
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 0, !dbg !650
  store i16 %conv, i16* %arrayidx, align 2, !dbg !651
  store i32 1, i32* %retval, align 4, !dbg !652
  br label %return, !dbg !652

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %charNum.addr, align 4, !dbg !653
  %cmp4 = icmp slt i32 %4, 1114112, !dbg !655
  br i1 %cmp4, label %if.then6, label %if.end12, !dbg !656

if.then6:                                         ; preds = %if.end3
  %5 = load i32, i32* %charNum.addr, align 4, !dbg !657
  %sub = sub nsw i32 %5, 65536, !dbg !657
  store i32 %sub, i32* %charNum.addr, align 4, !dbg !657
  %6 = load i32, i32* %charNum.addr, align 4, !dbg !659
  %shr = ashr i32 %6, 10, !dbg !660
  %add = add nsw i32 %shr, 55296, !dbg !661
  %conv7 = trunc i32 %add to i16, !dbg !662
  %7 = load i16*, i16** %buf.addr, align 8, !dbg !663
  %arrayidx8 = getelementptr inbounds i16, i16* %7, i64 0, !dbg !663
  store i16 %conv7, i16* %arrayidx8, align 2, !dbg !664
  %8 = load i32, i32* %charNum.addr, align 4, !dbg !665
  %and = and i32 %8, 1023, !dbg !666
  %add9 = add nsw i32 %and, 56320, !dbg !667
  %conv10 = trunc i32 %add9 to i16, !dbg !668
  %9 = load i16*, i16** %buf.addr, align 8, !dbg !669
  %arrayidx11 = getelementptr inbounds i16, i16* %9, i64 1, !dbg !669
  store i16 %conv10, i16* %arrayidx11, align 2, !dbg !670
  store i32 2, i32* %retval, align 4, !dbg !671
  br label %return, !dbg !671

if.end12:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !672
  br label %return, !dbg !672

return:                                           ; preds = %if.end12, %if.then6, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !673
  ret i32 %10, !dbg !673
}

; Function Attrs: nounwind uwtable
define i32 @XmlSizeOfUnknownEncoding() #0 !dbg !226 {
entry:
  ret i32 2016, !dbg !674
}

; Function Attrs: nounwind uwtable
define %struct.encoding* @XmlInitUnknownEncoding(i8* %mem, i32* %table, i32 (i8*, i8*)* %convert, i8* %userData) #0 !dbg !229 {
entry:
  %retval = alloca %struct.encoding*, align 8
  %mem.addr = alloca i8*, align 8
  %table.addr = alloca i32*, align 8
  %convert.addr = alloca i32 (i8*, i8*)*, align 8
  %userData.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.unknown_encoding*, align 8
  %c = alloca i32, align 4
  store i8* %mem, i8** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !675, metadata !444), !dbg !676
  store i32* %table, i32** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %table.addr, metadata !677, metadata !444), !dbg !678
  store i32 (i8*, i8*)* %convert, i32 (i8*, i8*)** %convert.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %convert.addr, metadata !679, metadata !444), !dbg !680
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !681, metadata !444), !dbg !682
  call void @llvm.dbg.declare(metadata i32* %i, metadata !683, metadata !444), !dbg !684
  call void @llvm.dbg.declare(metadata %struct.unknown_encoding** %e, metadata !685, metadata !444), !dbg !686
  %0 = load i8*, i8** %mem.addr, align 8, !dbg !687
  %1 = bitcast i8* %0 to %struct.unknown_encoding*, !dbg !688
  store %struct.unknown_encoding* %1, %struct.unknown_encoding** %e, align 8, !dbg !686
  store i32 0, i32* %i, align 4, !dbg !689
  br label %for.cond, !dbg !691

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !692
  %cmp = icmp slt i32 %2, 464, !dbg !695
  br i1 %cmp, label %for.body, label %for.end, !dbg !696

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !697
  %idxprom = sext i32 %3 to i64, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* bitcast (%struct.normal_encoding* @latin1_encoding to i8*), i64 %idxprom, !dbg !698
  %4 = load i8, i8* %arrayidx, align 1, !dbg !698
  %5 = load i32, i32* %i, align 4, !dbg !699
  %idxprom1 = sext i32 %5 to i64, !dbg !700
  %6 = load i8*, i8** %mem.addr, align 8, !dbg !701
  %arrayidx2 = getelementptr inbounds i8, i8* %6, i64 %idxprom1, !dbg !700
  store i8 %4, i8* %arrayidx2, align 1, !dbg !702
  br label %for.inc, !dbg !700

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !703
  %inc = add nsw i32 %7, 1, !dbg !703
  store i32 %inc, i32* %i, align 4, !dbg !703
  br label %for.cond, !dbg !705

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !706
  br label %for.cond3, !dbg !708

for.cond3:                                        ; preds = %for.inc20, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !709
  %cmp4 = icmp slt i32 %8, 128, !dbg !712
  br i1 %cmp4, label %for.body5, label %for.end22, !dbg !713

for.body5:                                        ; preds = %for.cond3
  %9 = load i32, i32* %i, align 4, !dbg !714
  %idxprom6 = sext i32 %9 to i64, !dbg !716
  %arrayidx7 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @latin1_encoding, i32 0, i32 1), i64 0, i64 %idxprom6, !dbg !716
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !716
  %conv = zext i8 %10 to i32, !dbg !716
  %cmp8 = icmp ne i32 %conv, 28, !dbg !717
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !718

land.lhs.true:                                    ; preds = %for.body5
  %11 = load i32, i32* %i, align 4, !dbg !719
  %idxprom10 = sext i32 %11 to i64, !dbg !721
  %arrayidx11 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @latin1_encoding, i32 0, i32 1), i64 0, i64 %idxprom10, !dbg !721
  %12 = load i8, i8* %arrayidx11, align 1, !dbg !721
  %conv12 = zext i8 %12 to i32, !dbg !721
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !722
  br i1 %cmp13, label %land.lhs.true15, label %if.end, !dbg !723

land.lhs.true15:                                  ; preds = %land.lhs.true
  %13 = load i32, i32* %i, align 4, !dbg !724
  %idxprom16 = sext i32 %13 to i64, !dbg !725
  %14 = load i32*, i32** %table.addr, align 8, !dbg !725
  %arrayidx17 = getelementptr inbounds i32, i32* %14, i64 %idxprom16, !dbg !725
  %15 = load i32, i32* %arrayidx17, align 4, !dbg !725
  %16 = load i32, i32* %i, align 4, !dbg !726
  %cmp18 = icmp ne i32 %15, %16, !dbg !727
  br i1 %cmp18, label %if.then, label %if.end, !dbg !728

if.then:                                          ; preds = %land.lhs.true15
  store %struct.encoding* null, %struct.encoding** %retval, align 8, !dbg !729
  br label %return, !dbg !729

if.end:                                           ; preds = %land.lhs.true15, %land.lhs.true, %for.body5
  br label %for.inc20, !dbg !730

for.inc20:                                        ; preds = %if.end
  %17 = load i32, i32* %i, align 4, !dbg !732
  %inc21 = add nsw i32 %17, 1, !dbg !732
  store i32 %inc21, i32* %i, align 4, !dbg !732
  br label %for.cond3, !dbg !734

for.end22:                                        ; preds = %for.cond3
  store i32 0, i32* %i, align 4, !dbg !735
  br label %for.cond23, !dbg !737

for.cond23:                                       ; preds = %for.inc188, %for.end22
  %18 = load i32, i32* %i, align 4, !dbg !738
  %cmp24 = icmp slt i32 %18, 256, !dbg !741
  br i1 %cmp24, label %for.body26, label %for.end190, !dbg !742

for.body26:                                       ; preds = %for.cond23
  call void @llvm.dbg.declare(metadata i32* %c, metadata !743, metadata !444), !dbg !745
  %19 = load i32, i32* %i, align 4, !dbg !746
  %idxprom27 = sext i32 %19 to i64, !dbg !747
  %20 = load i32*, i32** %table.addr, align 8, !dbg !747
  %arrayidx28 = getelementptr inbounds i32, i32* %20, i64 %idxprom27, !dbg !747
  %21 = load i32, i32* %arrayidx28, align 4, !dbg !747
  store i32 %21, i32* %c, align 4, !dbg !745
  %22 = load i32, i32* %c, align 4, !dbg !748
  %cmp29 = icmp eq i32 %22, -1, !dbg !750
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !751

if.then31:                                        ; preds = %for.body26
  %23 = load i32, i32* %i, align 4, !dbg !752
  %idxprom32 = sext i32 %23 to i64, !dbg !754
  %24 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !754
  %normal = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %24, i32 0, i32 0, !dbg !755
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal, i32 0, i32 1, !dbg !756
  %arrayidx33 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom32, !dbg !754
  store i8 1, i8* %arrayidx33, align 1, !dbg !757
  %25 = load i32, i32* %i, align 4, !dbg !758
  %idxprom34 = sext i32 %25 to i64, !dbg !759
  %26 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !759
  %utf16 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %26, i32 0, i32 3, !dbg !760
  %arrayidx35 = getelementptr inbounds [256 x i16], [256 x i16]* %utf16, i64 0, i64 %idxprom34, !dbg !759
  store i16 -1, i16* %arrayidx35, align 2, !dbg !761
  %27 = load i32, i32* %i, align 4, !dbg !762
  %idxprom36 = sext i32 %27 to i64, !dbg !763
  %28 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !763
  %utf8 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %28, i32 0, i32 4, !dbg !764
  %arrayidx37 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf8, i64 0, i64 %idxprom36, !dbg !763
  %arrayidx38 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx37, i64 0, i64 0, !dbg !763
  store i8 1, i8* %arrayidx38, align 4, !dbg !765
  %29 = load i32, i32* %i, align 4, !dbg !766
  %idxprom39 = sext i32 %29 to i64, !dbg !767
  %30 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !767
  %utf840 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %30, i32 0, i32 4, !dbg !768
  %arrayidx41 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf840, i64 0, i64 %idxprom39, !dbg !767
  %arrayidx42 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx41, i64 0, i64 1, !dbg !767
  store i8 0, i8* %arrayidx42, align 1, !dbg !769
  br label %if.end187, !dbg !770

if.else:                                          ; preds = %for.body26
  %31 = load i32, i32* %c, align 4, !dbg !771
  %cmp43 = icmp slt i32 %31, 0, !dbg !773
  br i1 %cmp43, label %if.then45, label %if.else62, !dbg !774

if.then45:                                        ; preds = %if.else
  %32 = load i32, i32* %c, align 4, !dbg !775
  %cmp46 = icmp slt i32 %32, -4, !dbg !778
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !779

if.then48:                                        ; preds = %if.then45
  store %struct.encoding* null, %struct.encoding** %retval, align 8, !dbg !780
  br label %return, !dbg !780

if.end49:                                         ; preds = %if.then45
  %33 = load i32, i32* %c, align 4, !dbg !781
  %add = add nsw i32 %33, 2, !dbg !782
  %sub = sub nsw i32 5, %add, !dbg !783
  %conv50 = trunc i32 %sub to i8, !dbg !784
  %34 = load i32, i32* %i, align 4, !dbg !785
  %idxprom51 = sext i32 %34 to i64, !dbg !786
  %35 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !786
  %normal52 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %35, i32 0, i32 0, !dbg !787
  %type53 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal52, i32 0, i32 1, !dbg !788
  %arrayidx54 = getelementptr inbounds [256 x i8], [256 x i8]* %type53, i64 0, i64 %idxprom51, !dbg !786
  store i8 %conv50, i8* %arrayidx54, align 1, !dbg !789
  %36 = load i32, i32* %i, align 4, !dbg !790
  %idxprom55 = sext i32 %36 to i64, !dbg !791
  %37 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !791
  %utf856 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %37, i32 0, i32 4, !dbg !792
  %arrayidx57 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf856, i64 0, i64 %idxprom55, !dbg !791
  %arrayidx58 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx57, i64 0, i64 0, !dbg !791
  store i8 0, i8* %arrayidx58, align 4, !dbg !793
  %38 = load i32, i32* %i, align 4, !dbg !794
  %idxprom59 = sext i32 %38 to i64, !dbg !795
  %39 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !795
  %utf1660 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %39, i32 0, i32 3, !dbg !796
  %arrayidx61 = getelementptr inbounds [256 x i16], [256 x i16]* %utf1660, i64 0, i64 %idxprom59, !dbg !795
  store i16 0, i16* %arrayidx61, align 2, !dbg !797
  br label %if.end186, !dbg !798

if.else62:                                        ; preds = %if.else
  %40 = load i32, i32* %c, align 4, !dbg !799
  %cmp63 = icmp slt i32 %40, 128, !dbg !801
  br i1 %cmp63, label %if.then65, label %if.else103, !dbg !802

if.then65:                                        ; preds = %if.else62
  %41 = load i32, i32* %c, align 4, !dbg !803
  %idxprom66 = sext i32 %41 to i64, !dbg !806
  %arrayidx67 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @latin1_encoding, i32 0, i32 1), i64 0, i64 %idxprom66, !dbg !806
  %42 = load i8, i8* %arrayidx67, align 1, !dbg !806
  %conv68 = zext i8 %42 to i32, !dbg !806
  %cmp69 = icmp ne i32 %conv68, 28, !dbg !807
  br i1 %cmp69, label %land.lhs.true71, label %if.end81, !dbg !808

land.lhs.true71:                                  ; preds = %if.then65
  %43 = load i32, i32* %c, align 4, !dbg !809
  %idxprom72 = sext i32 %43 to i64, !dbg !811
  %arrayidx73 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @latin1_encoding, i32 0, i32 1), i64 0, i64 %idxprom72, !dbg !811
  %44 = load i8, i8* %arrayidx73, align 1, !dbg !811
  %conv74 = zext i8 %44 to i32, !dbg !811
  %cmp75 = icmp ne i32 %conv74, 0, !dbg !812
  br i1 %cmp75, label %land.lhs.true77, label %if.end81, !dbg !813

land.lhs.true77:                                  ; preds = %land.lhs.true71
  %45 = load i32, i32* %c, align 4, !dbg !814
  %46 = load i32, i32* %i, align 4, !dbg !815
  %cmp78 = icmp ne i32 %45, %46, !dbg !816
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !817

if.then80:                                        ; preds = %land.lhs.true77
  store %struct.encoding* null, %struct.encoding** %retval, align 8, !dbg !819
  br label %return, !dbg !819

if.end81:                                         ; preds = %land.lhs.true77, %land.lhs.true71, %if.then65
  %47 = load i32, i32* %c, align 4, !dbg !820
  %idxprom82 = sext i32 %47 to i64, !dbg !821
  %arrayidx83 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @latin1_encoding, i32 0, i32 1), i64 0, i64 %idxprom82, !dbg !821
  %48 = load i8, i8* %arrayidx83, align 1, !dbg !821
  %49 = load i32, i32* %i, align 4, !dbg !822
  %idxprom84 = sext i32 %49 to i64, !dbg !823
  %50 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !823
  %normal85 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %50, i32 0, i32 0, !dbg !824
  %type86 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal85, i32 0, i32 1, !dbg !825
  %arrayidx87 = getelementptr inbounds [256 x i8], [256 x i8]* %type86, i64 0, i64 %idxprom84, !dbg !823
  store i8 %48, i8* %arrayidx87, align 1, !dbg !826
  %51 = load i32, i32* %i, align 4, !dbg !827
  %idxprom88 = sext i32 %51 to i64, !dbg !828
  %52 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !828
  %utf889 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %52, i32 0, i32 4, !dbg !829
  %arrayidx90 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf889, i64 0, i64 %idxprom88, !dbg !828
  %arrayidx91 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx90, i64 0, i64 0, !dbg !828
  store i8 1, i8* %arrayidx91, align 4, !dbg !830
  %53 = load i32, i32* %c, align 4, !dbg !831
  %conv92 = trunc i32 %53 to i8, !dbg !832
  %54 = load i32, i32* %i, align 4, !dbg !833
  %idxprom93 = sext i32 %54 to i64, !dbg !834
  %55 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !834
  %utf894 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %55, i32 0, i32 4, !dbg !835
  %arrayidx95 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf894, i64 0, i64 %idxprom93, !dbg !834
  %arrayidx96 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx95, i64 0, i64 1, !dbg !834
  store i8 %conv92, i8* %arrayidx96, align 1, !dbg !836
  %56 = load i32, i32* %c, align 4, !dbg !837
  %cmp97 = icmp eq i32 %56, 0, !dbg !838
  br i1 %cmp97, label %cond.true, label %cond.false, !dbg !837

cond.true:                                        ; preds = %if.end81
  br label %cond.end, !dbg !839

cond.false:                                       ; preds = %if.end81
  %57 = load i32, i32* %c, align 4, !dbg !840
  br label %cond.end, !dbg !842

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 65535, %cond.true ], [ %57, %cond.false ], !dbg !843
  %conv99 = trunc i32 %cond to i16, !dbg !845
  %58 = load i32, i32* %i, align 4, !dbg !846
  %idxprom100 = sext i32 %58 to i64, !dbg !847
  %59 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !847
  %utf16101 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %59, i32 0, i32 3, !dbg !848
  %arrayidx102 = getelementptr inbounds [256 x i16], [256 x i16]* %utf16101, i64 0, i64 %idxprom100, !dbg !847
  store i16 %conv99, i16* %arrayidx102, align 2, !dbg !849
  br label %if.end185, !dbg !850

if.else103:                                       ; preds = %if.else62
  %60 = load i32, i32* %c, align 4, !dbg !851
  %call = call i32 @checkCharRefNumber(i32 %60), !dbg !853
  %cmp104 = icmp slt i32 %call, 0, !dbg !854
  br i1 %cmp104, label %if.then106, label %if.else122, !dbg !855

if.then106:                                       ; preds = %if.else103
  %61 = load i32, i32* %i, align 4, !dbg !856
  %idxprom107 = sext i32 %61 to i64, !dbg !858
  %62 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !858
  %normal108 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %62, i32 0, i32 0, !dbg !859
  %type109 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal108, i32 0, i32 1, !dbg !860
  %arrayidx110 = getelementptr inbounds [256 x i8], [256 x i8]* %type109, i64 0, i64 %idxprom107, !dbg !858
  store i8 0, i8* %arrayidx110, align 1, !dbg !861
  %63 = load i32, i32* %i, align 4, !dbg !862
  %idxprom111 = sext i32 %63 to i64, !dbg !863
  %64 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !863
  %utf16112 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %64, i32 0, i32 3, !dbg !864
  %arrayidx113 = getelementptr inbounds [256 x i16], [256 x i16]* %utf16112, i64 0, i64 %idxprom111, !dbg !863
  store i16 -1, i16* %arrayidx113, align 2, !dbg !865
  %65 = load i32, i32* %i, align 4, !dbg !866
  %idxprom114 = sext i32 %65 to i64, !dbg !867
  %66 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !867
  %utf8115 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %66, i32 0, i32 4, !dbg !868
  %arrayidx116 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf8115, i64 0, i64 %idxprom114, !dbg !867
  %arrayidx117 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx116, i64 0, i64 0, !dbg !867
  store i8 1, i8* %arrayidx117, align 4, !dbg !869
  %67 = load i32, i32* %i, align 4, !dbg !870
  %idxprom118 = sext i32 %67 to i64, !dbg !871
  %68 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !871
  %utf8119 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %68, i32 0, i32 4, !dbg !872
  %arrayidx120 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf8119, i64 0, i64 %idxprom118, !dbg !871
  %arrayidx121 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx120, i64 0, i64 1, !dbg !871
  store i8 0, i8* %arrayidx121, align 1, !dbg !873
  br label %if.end184, !dbg !874

if.else122:                                       ; preds = %if.else103
  %69 = load i32, i32* %c, align 4, !dbg !875
  %cmp123 = icmp sgt i32 %69, 65535, !dbg !878
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !879

if.then125:                                       ; preds = %if.else122
  store %struct.encoding* null, %struct.encoding** %retval, align 8, !dbg !880
  br label %return, !dbg !880

if.end126:                                        ; preds = %if.else122
  %70 = load i32, i32* %c, align 4, !dbg !881
  %shr = ashr i32 %70, 8, !dbg !881
  %idxprom127 = sext i32 %shr to i64, !dbg !881
  %arrayidx128 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom127, !dbg !881
  %71 = load i8, i8* %arrayidx128, align 1, !dbg !881
  %conv129 = zext i8 %71 to i32, !dbg !881
  %shl = shl i32 %conv129, 3, !dbg !881
  %72 = load i32, i32* %c, align 4, !dbg !881
  %and = and i32 %72, 255, !dbg !881
  %shr130 = ashr i32 %and, 5, !dbg !881
  %add131 = add nsw i32 %shl, %shr130, !dbg !881
  %idxprom132 = sext i32 %add131 to i64, !dbg !881
  %arrayidx133 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom132, !dbg !881
  %73 = load i32, i32* %arrayidx133, align 4, !dbg !881
  %74 = load i32, i32* %c, align 4, !dbg !881
  %and134 = and i32 %74, 255, !dbg !881
  %and135 = and i32 %and134, 31, !dbg !881
  %shl136 = shl i32 1, %and135, !dbg !881
  %and137 = and i32 %73, %shl136, !dbg !881
  %tobool = icmp ne i32 %and137, 0, !dbg !881
  br i1 %tobool, label %if.then138, label %if.else143, !dbg !883

if.then138:                                       ; preds = %if.end126
  %75 = load i32, i32* %i, align 4, !dbg !884
  %idxprom139 = sext i32 %75 to i64, !dbg !885
  %76 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !885
  %normal140 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %76, i32 0, i32 0, !dbg !886
  %type141 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal140, i32 0, i32 1, !dbg !887
  %arrayidx142 = getelementptr inbounds [256 x i8], [256 x i8]* %type141, i64 0, i64 %idxprom139, !dbg !885
  store i8 22, i8* %arrayidx142, align 1, !dbg !888
  br label %if.end170, !dbg !885

if.else143:                                       ; preds = %if.end126
  %77 = load i32, i32* %c, align 4, !dbg !889
  %shr144 = ashr i32 %77, 8, !dbg !889
  %idxprom145 = sext i32 %shr144 to i64, !dbg !889
  %arrayidx146 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom145, !dbg !889
  %78 = load i8, i8* %arrayidx146, align 1, !dbg !889
  %conv147 = zext i8 %78 to i32, !dbg !889
  %shl148 = shl i32 %conv147, 3, !dbg !889
  %79 = load i32, i32* %c, align 4, !dbg !889
  %and149 = and i32 %79, 255, !dbg !889
  %shr150 = ashr i32 %and149, 5, !dbg !889
  %add151 = add nsw i32 %shl148, %shr150, !dbg !889
  %idxprom152 = sext i32 %add151 to i64, !dbg !889
  %arrayidx153 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom152, !dbg !889
  %80 = load i32, i32* %arrayidx153, align 4, !dbg !889
  %81 = load i32, i32* %c, align 4, !dbg !889
  %and154 = and i32 %81, 255, !dbg !889
  %and155 = and i32 %and154, 31, !dbg !889
  %shl156 = shl i32 1, %and155, !dbg !889
  %and157 = and i32 %80, %shl156, !dbg !889
  %tobool158 = icmp ne i32 %and157, 0, !dbg !889
  br i1 %tobool158, label %if.then159, label %if.else164, !dbg !891

if.then159:                                       ; preds = %if.else143
  %82 = load i32, i32* %i, align 4, !dbg !892
  %idxprom160 = sext i32 %82 to i64, !dbg !893
  %83 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !893
  %normal161 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %83, i32 0, i32 0, !dbg !894
  %type162 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal161, i32 0, i32 1, !dbg !895
  %arrayidx163 = getelementptr inbounds [256 x i8], [256 x i8]* %type162, i64 0, i64 %idxprom160, !dbg !893
  store i8 26, i8* %arrayidx163, align 1, !dbg !896
  br label %if.end169, !dbg !893

if.else164:                                       ; preds = %if.else143
  %84 = load i32, i32* %i, align 4, !dbg !897
  %idxprom165 = sext i32 %84 to i64, !dbg !898
  %85 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !898
  %normal166 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %85, i32 0, i32 0, !dbg !899
  %type167 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal166, i32 0, i32 1, !dbg !900
  %arrayidx168 = getelementptr inbounds [256 x i8], [256 x i8]* %type167, i64 0, i64 %idxprom165, !dbg !898
  store i8 28, i8* %arrayidx168, align 1, !dbg !901
  br label %if.end169

if.end169:                                        ; preds = %if.else164, %if.then159
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.then138
  %86 = load i32, i32* %c, align 4, !dbg !902
  %87 = load i32, i32* %i, align 4, !dbg !903
  %idxprom171 = sext i32 %87 to i64, !dbg !904
  %88 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !904
  %utf8172 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %88, i32 0, i32 4, !dbg !905
  %arrayidx173 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf8172, i64 0, i64 %idxprom171, !dbg !904
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx173, i32 0, i32 0, !dbg !904
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !906
  %call174 = call i32 @XmlUtf8Encode(i32 %86, i8* %add.ptr), !dbg !907
  %conv175 = trunc i32 %call174 to i8, !dbg !908
  %89 = load i32, i32* %i, align 4, !dbg !909
  %idxprom176 = sext i32 %89 to i64, !dbg !910
  %90 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !910
  %utf8177 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %90, i32 0, i32 4, !dbg !911
  %arrayidx178 = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf8177, i64 0, i64 %idxprom176, !dbg !910
  %arrayidx179 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx178, i64 0, i64 0, !dbg !910
  store i8 %conv175, i8* %arrayidx179, align 4, !dbg !912
  %91 = load i32, i32* %c, align 4, !dbg !913
  %conv180 = trunc i32 %91 to i16, !dbg !914
  %92 = load i32, i32* %i, align 4, !dbg !915
  %idxprom181 = sext i32 %92 to i64, !dbg !916
  %93 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !916
  %utf16182 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %93, i32 0, i32 3, !dbg !917
  %arrayidx183 = getelementptr inbounds [256 x i16], [256 x i16]* %utf16182, i64 0, i64 %idxprom181, !dbg !916
  store i16 %conv180, i16* %arrayidx183, align 2, !dbg !918
  br label %if.end184

if.end184:                                        ; preds = %if.end170, %if.then106
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %cond.end
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.end49
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then31
  br label %for.inc188, !dbg !919

for.inc188:                                       ; preds = %if.end187
  %94 = load i32, i32* %i, align 4, !dbg !920
  %inc189 = add nsw i32 %94, 1, !dbg !920
  store i32 %inc189, i32* %i, align 4, !dbg !920
  br label %for.cond23, !dbg !922

for.end190:                                       ; preds = %for.cond23
  %95 = load i8*, i8** %userData.addr, align 8, !dbg !923
  %96 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !924
  %userData191 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %96, i32 0, i32 2, !dbg !925
  store i8* %95, i8** %userData191, align 8, !dbg !926
  %97 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert.addr, align 8, !dbg !927
  %98 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !928
  %convert192 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %98, i32 0, i32 1, !dbg !929
  store i32 (i8*, i8*)* %97, i32 (i8*, i8*)** %convert192, align 8, !dbg !930
  %99 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert.addr, align 8, !dbg !931
  %tobool193 = icmp ne i32 (i8*, i8*)* %99, null, !dbg !931
  br i1 %tobool193, label %if.then194, label %if.end204, !dbg !933

if.then194:                                       ; preds = %for.end190
  %100 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !934
  %normal195 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %100, i32 0, i32 0, !dbg !936
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal195, i32 0, i32 2, !dbg !937
  store i32 (%struct.encoding*, i8*)* @unknown_isName, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !938
  %101 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !939
  %normal196 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %101, i32 0, i32 0, !dbg !940
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal196, i32 0, i32 3, !dbg !941
  store i32 (%struct.encoding*, i8*)* @unknown_isName, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !942
  %102 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !943
  %normal197 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %102, i32 0, i32 0, !dbg !944
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal197, i32 0, i32 4, !dbg !945
  store i32 (%struct.encoding*, i8*)* @unknown_isName, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !946
  %103 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !947
  %normal198 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %103, i32 0, i32 0, !dbg !948
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal198, i32 0, i32 5, !dbg !949
  store i32 (%struct.encoding*, i8*)* @unknown_isNmstrt, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !950
  %104 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !951
  %normal199 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %104, i32 0, i32 0, !dbg !952
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal199, i32 0, i32 6, !dbg !953
  store i32 (%struct.encoding*, i8*)* @unknown_isNmstrt, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !954
  %105 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !955
  %normal200 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %105, i32 0, i32 0, !dbg !956
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal200, i32 0, i32 7, !dbg !957
  store i32 (%struct.encoding*, i8*)* @unknown_isNmstrt, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !958
  %106 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !959
  %normal201 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %106, i32 0, i32 0, !dbg !960
  %isInvalid2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal201, i32 0, i32 8, !dbg !961
  store i32 (%struct.encoding*, i8*)* @unknown_isInvalid, i32 (%struct.encoding*, i8*)** %isInvalid2, align 8, !dbg !962
  %107 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !963
  %normal202 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %107, i32 0, i32 0, !dbg !964
  %isInvalid3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal202, i32 0, i32 9, !dbg !965
  store i32 (%struct.encoding*, i8*)* @unknown_isInvalid, i32 (%struct.encoding*, i8*)** %isInvalid3, align 8, !dbg !966
  %108 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !967
  %normal203 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %108, i32 0, i32 0, !dbg !968
  %isInvalid4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal203, i32 0, i32 10, !dbg !969
  store i32 (%struct.encoding*, i8*)* @unknown_isInvalid, i32 (%struct.encoding*, i8*)** %isInvalid4, align 8, !dbg !970
  br label %if.end204, !dbg !971

if.end204:                                        ; preds = %if.then194, %for.end190
  %109 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !972
  %normal205 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %109, i32 0, i32 0, !dbg !973
  %enc = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal205, i32 0, i32 0, !dbg !974
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %enc, i32 0, i32 11, !dbg !975
  store i32 (%struct.encoding*, i8**, i8*, i8**, i8*)* @unknown_toUtf8, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !976
  %110 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !977
  %normal206 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %110, i32 0, i32 0, !dbg !978
  %enc207 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal206, i32 0, i32 0, !dbg !979
  %utf16Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %enc207, i32 0, i32 12, !dbg !980
  store i32 (%struct.encoding*, i8**, i8*, i16**, i16*)* @unknown_toUtf16, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)** %utf16Convert, align 8, !dbg !981
  %111 = load %struct.unknown_encoding*, %struct.unknown_encoding** %e, align 8, !dbg !982
  %normal208 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %111, i32 0, i32 0, !dbg !983
  %enc209 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %normal208, i32 0, i32 0, !dbg !984
  store %struct.encoding* %enc209, %struct.encoding** %retval, align 8, !dbg !985
  br label %return, !dbg !985

return:                                           ; preds = %if.end204, %if.then125, %if.then80, %if.then48, %if.then
  %112 = load %struct.encoding*, %struct.encoding** %retval, align 8, !dbg !986
  ret %struct.encoding* %112, !dbg !986
}

; Function Attrs: nounwind uwtable
define internal i32 @checkCharRefNumber(i32 %result) #0 !dbg !279 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca i32, align 4
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !987, metadata !444), !dbg !988
  %0 = load i32, i32* %result.addr, align 4, !dbg !989
  %shr = ashr i32 %0, 8, !dbg !990
  switch i32 %shr, label %sw.epilog [
    i32 216, label %sw.bb
    i32 217, label %sw.bb
    i32 218, label %sw.bb
    i32 219, label %sw.bb
    i32 220, label %sw.bb
    i32 221, label %sw.bb
    i32 222, label %sw.bb
    i32 223, label %sw.bb
    i32 0, label %sw.bb1
    i32 255, label %sw.bb3
  ], !dbg !991

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 -1, i32* %retval, align 4, !dbg !992
  br label %return, !dbg !992

sw.bb1:                                           ; preds = %entry
  %1 = load i32, i32* %result.addr, align 4, !dbg !994
  %idxprom = sext i32 %1 to i64, !dbg !996
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @latin1_encoding, i32 0, i32 1), i64 0, i64 %idxprom, !dbg !996
  %2 = load i8, i8* %arrayidx, align 1, !dbg !996
  %conv = zext i8 %2 to i32, !dbg !996
  %cmp = icmp eq i32 %conv, 0, !dbg !997
  br i1 %cmp, label %if.then, label %if.end, !dbg !998

if.then:                                          ; preds = %sw.bb1
  store i32 -1, i32* %retval, align 4, !dbg !999
  br label %return, !dbg !999

if.end:                                           ; preds = %sw.bb1
  br label %sw.epilog, !dbg !1000

sw.bb3:                                           ; preds = %entry
  %3 = load i32, i32* %result.addr, align 4, !dbg !1001
  %cmp4 = icmp eq i32 %3, 65534, !dbg !1003
  br i1 %cmp4, label %if.then8, label %lor.lhs.false, !dbg !1004

lor.lhs.false:                                    ; preds = %sw.bb3
  %4 = load i32, i32* %result.addr, align 4, !dbg !1005
  %cmp6 = icmp eq i32 %4, 65535, !dbg !1007
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !1008

if.then8:                                         ; preds = %lor.lhs.false, %sw.bb3
  store i32 -1, i32* %retval, align 4, !dbg !1009
  br label %return, !dbg !1009

if.end9:                                          ; preds = %lor.lhs.false
  br label %sw.epilog, !dbg !1010

sw.epilog:                                        ; preds = %entry, %if.end9, %if.end
  %5 = load i32, i32* %result.addr, align 4, !dbg !1011
  store i32 %5, i32* %retval, align 4, !dbg !1012
  br label %return, !dbg !1012

return:                                           ; preds = %sw.epilog, %if.then8, %if.then, %sw.bb
  %6 = load i32, i32* %retval, align 4, !dbg !1013
  ret i32 %6, !dbg !1013
}

; Function Attrs: nounwind uwtable
define internal i32 @unknown_isName(%struct.encoding* %enc, i8* %p) #0 !dbg !282 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  %uenc = alloca %struct.unknown_encoding*, align 8
  %c = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1014, metadata !444), !dbg !1015
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1016, metadata !444), !dbg !1017
  call void @llvm.dbg.declare(metadata %struct.unknown_encoding** %uenc, metadata !1018, metadata !444), !dbg !1019
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1020
  %1 = bitcast %struct.encoding* %0 to %struct.unknown_encoding*, !dbg !1020
  store %struct.unknown_encoding* %1, %struct.unknown_encoding** %uenc, align 8, !dbg !1019
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1021, metadata !444), !dbg !1022
  %2 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1023
  %convert = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %2, i32 0, i32 1, !dbg !1024
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert, align 8, !dbg !1024
  %4 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1025
  %userData = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %4, i32 0, i32 2, !dbg !1026
  %5 = load i8*, i8** %userData, align 8, !dbg !1026
  %6 = load i8*, i8** %p.addr, align 8, !dbg !1027
  %call = call i32 %3(i8* %5, i8* %6), !dbg !1023
  store i32 %call, i32* %c, align 4, !dbg !1022
  %7 = load i32, i32* %c, align 4, !dbg !1028
  %and = and i32 %7, -65536, !dbg !1030
  %tobool = icmp ne i32 %and, 0, !dbg !1030
  br i1 %tobool, label %if.then, label %if.end, !dbg !1031

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1032
  br label %return, !dbg !1032

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %c, align 4, !dbg !1033
  %shr = ashr i32 %8, 8, !dbg !1033
  %idxprom = sext i32 %shr to i64, !dbg !1033
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom, !dbg !1033
  %9 = load i8, i8* %arrayidx, align 1, !dbg !1033
  %conv = zext i8 %9 to i32, !dbg !1033
  %shl = shl i32 %conv, 3, !dbg !1033
  %10 = load i32, i32* %c, align 4, !dbg !1033
  %and1 = and i32 %10, 255, !dbg !1033
  %shr2 = ashr i32 %and1, 5, !dbg !1033
  %add = add nsw i32 %shl, %shr2, !dbg !1033
  %idxprom3 = sext i32 %add to i64, !dbg !1033
  %arrayidx4 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom3, !dbg !1033
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !1033
  %12 = load i32, i32* %c, align 4, !dbg !1033
  %and5 = and i32 %12, 255, !dbg !1033
  %and6 = and i32 %and5, 31, !dbg !1033
  %shl7 = shl i32 1, %and6, !dbg !1033
  %and8 = and i32 %11, %shl7, !dbg !1033
  store i32 %and8, i32* %retval, align 4, !dbg !1034
  br label %return, !dbg !1034

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !1035
  ret i32 %13, !dbg !1035
}

; Function Attrs: nounwind uwtable
define internal i32 @unknown_isNmstrt(%struct.encoding* %enc, i8* %p) #0 !dbg !283 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  %uenc = alloca %struct.unknown_encoding*, align 8
  %c = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1036, metadata !444), !dbg !1037
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1038, metadata !444), !dbg !1039
  call void @llvm.dbg.declare(metadata %struct.unknown_encoding** %uenc, metadata !1040, metadata !444), !dbg !1041
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1042
  %1 = bitcast %struct.encoding* %0 to %struct.unknown_encoding*, !dbg !1042
  store %struct.unknown_encoding* %1, %struct.unknown_encoding** %uenc, align 8, !dbg !1041
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1043, metadata !444), !dbg !1044
  %2 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1045
  %convert = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %2, i32 0, i32 1, !dbg !1046
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert, align 8, !dbg !1046
  %4 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1047
  %userData = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %4, i32 0, i32 2, !dbg !1048
  %5 = load i8*, i8** %userData, align 8, !dbg !1048
  %6 = load i8*, i8** %p.addr, align 8, !dbg !1049
  %call = call i32 %3(i8* %5, i8* %6), !dbg !1045
  store i32 %call, i32* %c, align 4, !dbg !1044
  %7 = load i32, i32* %c, align 4, !dbg !1050
  %and = and i32 %7, -65536, !dbg !1052
  %tobool = icmp ne i32 %and, 0, !dbg !1052
  br i1 %tobool, label %if.then, label %if.end, !dbg !1053

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1054
  br label %return, !dbg !1054

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %c, align 4, !dbg !1055
  %shr = ashr i32 %8, 8, !dbg !1055
  %idxprom = sext i32 %shr to i64, !dbg !1055
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom, !dbg !1055
  %9 = load i8, i8* %arrayidx, align 1, !dbg !1055
  %conv = zext i8 %9 to i32, !dbg !1055
  %shl = shl i32 %conv, 3, !dbg !1055
  %10 = load i32, i32* %c, align 4, !dbg !1055
  %and1 = and i32 %10, 255, !dbg !1055
  %shr2 = ashr i32 %and1, 5, !dbg !1055
  %add = add nsw i32 %shl, %shr2, !dbg !1055
  %idxprom3 = sext i32 %add to i64, !dbg !1055
  %arrayidx4 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom3, !dbg !1055
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !1055
  %12 = load i32, i32* %c, align 4, !dbg !1055
  %and5 = and i32 %12, 255, !dbg !1055
  %and6 = and i32 %and5, 31, !dbg !1055
  %shl7 = shl i32 1, %and6, !dbg !1055
  %and8 = and i32 %11, %shl7, !dbg !1055
  store i32 %and8, i32* %retval, align 4, !dbg !1056
  br label %return, !dbg !1056

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !1057
  ret i32 %13, !dbg !1057
}

; Function Attrs: nounwind uwtable
define internal i32 @unknown_isInvalid(%struct.encoding* %enc, i8* %p) #0 !dbg !284 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  %uenc = alloca %struct.unknown_encoding*, align 8
  %c = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1058, metadata !444), !dbg !1059
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !444), !dbg !1061
  call void @llvm.dbg.declare(metadata %struct.unknown_encoding** %uenc, metadata !1062, metadata !444), !dbg !1063
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1064
  %1 = bitcast %struct.encoding* %0 to %struct.unknown_encoding*, !dbg !1064
  store %struct.unknown_encoding* %1, %struct.unknown_encoding** %uenc, align 8, !dbg !1063
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1065, metadata !444), !dbg !1066
  %2 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1067
  %convert = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %2, i32 0, i32 1, !dbg !1068
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert, align 8, !dbg !1068
  %4 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1069
  %userData = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %4, i32 0, i32 2, !dbg !1070
  %5 = load i8*, i8** %userData, align 8, !dbg !1070
  %6 = load i8*, i8** %p.addr, align 8, !dbg !1071
  %call = call i32 %3(i8* %5, i8* %6), !dbg !1067
  store i32 %call, i32* %c, align 4, !dbg !1066
  %7 = load i32, i32* %c, align 4, !dbg !1072
  %and = and i32 %7, -65536, !dbg !1073
  %tobool = icmp ne i32 %and, 0, !dbg !1073
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !1074

lor.rhs:                                          ; preds = %entry
  %8 = load i32, i32* %c, align 4, !dbg !1075
  %call1 = call i32 @checkCharRefNumber(i32 %8), !dbg !1077
  %cmp = icmp slt i32 %call1, 0, !dbg !1078
  br label %lor.end, !dbg !1079

lor.end:                                          ; preds = %lor.rhs, %entry
  %9 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32, !dbg !1080
  ret i32 %lor.ext, !dbg !1082
}

; Function Attrs: nounwind uwtable
define internal i32 @unknown_toUtf8(%struct.encoding* %enc, i8** %fromP, i8* %fromLim, i8** %toP, i8* %toLim) #0 !dbg !285 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i8**, align 8
  %toLim.addr = alloca i8*, align 8
  %uenc = alloca %struct.unknown_encoding*, align 8
  %buf = alloca [4 x i8], align 1
  %utf8 = alloca i8*, align 8
  %n = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1083, metadata !444), !dbg !1084
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !1085, metadata !444), !dbg !1086
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !1087, metadata !444), !dbg !1088
  store i8** %toP, i8*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %toP.addr, metadata !1089, metadata !444), !dbg !1090
  store i8* %toLim, i8** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toLim.addr, metadata !1091, metadata !444), !dbg !1092
  call void @llvm.dbg.declare(metadata %struct.unknown_encoding** %uenc, metadata !1093, metadata !444), !dbg !1094
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1095
  %1 = bitcast %struct.encoding* %0 to %struct.unknown_encoding*, !dbg !1095
  store %struct.unknown_encoding* %1, %struct.unknown_encoding** %uenc, align 8, !dbg !1094
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !1096, metadata !444), !dbg !1098
  br label %for.cond, !dbg !1099

for.cond:                                         ; preds = %do.end, %entry
  call void @llvm.dbg.declare(metadata i8** %utf8, metadata !1100, metadata !444), !dbg !1104
  call void @llvm.dbg.declare(metadata i32* %n, metadata !1105, metadata !444), !dbg !1106
  %2 = load i8**, i8*** %fromP.addr, align 8, !dbg !1107
  %3 = load i8*, i8** %2, align 8, !dbg !1109
  %4 = load i8*, i8** %fromLim.addr, align 8, !dbg !1110
  %cmp = icmp eq i8* %3, %4, !dbg !1111
  br i1 %cmp, label %if.then, label %if.end, !dbg !1112

if.then:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !1113
  br label %return, !dbg !1113

if.end:                                           ; preds = %for.cond
  %5 = load i8**, i8*** %fromP.addr, align 8, !dbg !1114
  %6 = load i8*, i8** %5, align 8, !dbg !1115
  %7 = load i8, i8* %6, align 1, !dbg !1116
  %idxprom = zext i8 %7 to i64, !dbg !1117
  %8 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1117
  %utf81 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %8, i32 0, i32 4, !dbg !1118
  %arrayidx = getelementptr inbounds [256 x [4 x i8]], [256 x [4 x i8]]* %utf81, i64 0, i64 %idxprom, !dbg !1117
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i32 0, i32 0, !dbg !1117
  store i8* %arraydecay, i8** %utf8, align 8, !dbg !1119
  %9 = load i8*, i8** %utf8, align 8, !dbg !1120
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !1120
  store i8* %incdec.ptr, i8** %utf8, align 8, !dbg !1120
  %10 = load i8, i8* %9, align 1, !dbg !1121
  %conv = sext i8 %10 to i32, !dbg !1121
  store i32 %conv, i32* %n, align 4, !dbg !1122
  %11 = load i32, i32* %n, align 4, !dbg !1123
  %cmp2 = icmp eq i32 %11, 0, !dbg !1125
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !1126

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1127, metadata !444), !dbg !1129
  %12 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1130
  %convert = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %12, i32 0, i32 1, !dbg !1131
  %13 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert, align 8, !dbg !1131
  %14 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1132
  %userData = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %14, i32 0, i32 2, !dbg !1133
  %15 = load i8*, i8** %userData, align 8, !dbg !1133
  %16 = load i8**, i8*** %fromP.addr, align 8, !dbg !1134
  %17 = load i8*, i8** %16, align 8, !dbg !1135
  %call = call i32 %13(i8* %15, i8* %17), !dbg !1130
  store i32 %call, i32* %c, align 4, !dbg !1129
  %18 = load i32, i32* %c, align 4, !dbg !1136
  %arraydecay5 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !1137
  %call6 = call i32 @XmlUtf8Encode(i32 %18, i8* %arraydecay5), !dbg !1138
  store i32 %call6, i32* %n, align 4, !dbg !1139
  %19 = load i32, i32* %n, align 4, !dbg !1140
  %conv7 = sext i32 %19 to i64, !dbg !1140
  %20 = load i8*, i8** %toLim.addr, align 8, !dbg !1142
  %21 = load i8**, i8*** %toP.addr, align 8, !dbg !1143
  %22 = load i8*, i8** %21, align 8, !dbg !1144
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64, !dbg !1145
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64, !dbg !1145
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1145
  %cmp8 = icmp sgt i64 %conv7, %sub.ptr.sub, !dbg !1146
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !1147

if.then10:                                        ; preds = %if.then4
  store i32 2, i32* %retval, align 4, !dbg !1148
  br label %return, !dbg !1148

if.end11:                                         ; preds = %if.then4
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !1149
  store i8* %arraydecay12, i8** %utf8, align 8, !dbg !1150
  %23 = load i8**, i8*** %fromP.addr, align 8, !dbg !1151
  %24 = load i8*, i8** %23, align 8, !dbg !1152
  %25 = load i8, i8* %24, align 1, !dbg !1153
  %idxprom13 = zext i8 %25 to i64, !dbg !1154
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1154
  %27 = bitcast %struct.encoding* %26 to %struct.normal_encoding*, !dbg !1155
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %27, i32 0, i32 1, !dbg !1155
  %arrayidx14 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom13, !dbg !1154
  %28 = load i8, i8* %arrayidx14, align 1, !dbg !1154
  %conv15 = zext i8 %28 to i32, !dbg !1154
  %sub = sub nsw i32 %conv15, 3, !dbg !1156
  %29 = load i8**, i8*** %fromP.addr, align 8, !dbg !1157
  %30 = load i8*, i8** %29, align 8, !dbg !1158
  %idx.ext = sext i32 %sub to i64, !dbg !1158
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !1158
  store i8* %add.ptr, i8** %29, align 8, !dbg !1158
  br label %if.end25, !dbg !1159

if.else:                                          ; preds = %if.end
  %31 = load i32, i32* %n, align 4, !dbg !1160
  %conv16 = sext i32 %31 to i64, !dbg !1160
  %32 = load i8*, i8** %toLim.addr, align 8, !dbg !1163
  %33 = load i8**, i8*** %toP.addr, align 8, !dbg !1164
  %34 = load i8*, i8** %33, align 8, !dbg !1165
  %sub.ptr.lhs.cast17 = ptrtoint i8* %32 to i64, !dbg !1166
  %sub.ptr.rhs.cast18 = ptrtoint i8* %34 to i64, !dbg !1166
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !1166
  %cmp20 = icmp sgt i64 %conv16, %sub.ptr.sub19, !dbg !1167
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !1168

if.then22:                                        ; preds = %if.else
  store i32 2, i32* %retval, align 4, !dbg !1169
  br label %return, !dbg !1169

if.end23:                                         ; preds = %if.else
  %35 = load i8**, i8*** %fromP.addr, align 8, !dbg !1170
  %36 = load i8*, i8** %35, align 8, !dbg !1171
  %incdec.ptr24 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !1171
  store i8* %incdec.ptr24, i8** %35, align 8, !dbg !1171
  br label %if.end25

if.end25:                                         ; preds = %if.end23, %if.end11
  br label %do.body, !dbg !1172

do.body:                                          ; preds = %do.cond, %if.end25
  %37 = load i8*, i8** %utf8, align 8, !dbg !1173
  %incdec.ptr26 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !1173
  store i8* %incdec.ptr26, i8** %utf8, align 8, !dbg !1173
  %38 = load i8, i8* %37, align 1, !dbg !1175
  %39 = load i8**, i8*** %toP.addr, align 8, !dbg !1176
  %40 = load i8*, i8** %39, align 8, !dbg !1177
  %incdec.ptr27 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !1177
  store i8* %incdec.ptr27, i8** %39, align 8, !dbg !1177
  store i8 %38, i8* %40, align 1, !dbg !1178
  br label %do.cond, !dbg !1179

do.cond:                                          ; preds = %do.body
  %41 = load i32, i32* %n, align 4, !dbg !1180
  %dec = add nsw i32 %41, -1, !dbg !1180
  store i32 %dec, i32* %n, align 4, !dbg !1180
  %cmp28 = icmp ne i32 %dec, 0, !dbg !1182
  br i1 %cmp28, label %do.body, label %do.end, !dbg !1183

do.end:                                           ; preds = %do.cond
  br label %for.cond, !dbg !1184

return:                                           ; preds = %if.then22, %if.then10, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !1186
  ret i32 %42, !dbg !1186
}

; Function Attrs: nounwind uwtable
define internal i32 @unknown_toUtf16(%struct.encoding* %enc, i8** %fromP, i8* %fromLim, i16** %toP, i16* %toLim) #0 !dbg !286 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i16**, align 8
  %toLim.addr = alloca i16*, align 8
  %uenc = alloca %struct.unknown_encoding*, align 8
  %c = alloca i16, align 2
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1187, metadata !444), !dbg !1188
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !1189, metadata !444), !dbg !1190
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !1191, metadata !444), !dbg !1192
  store i16** %toP, i16*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %toP.addr, metadata !1193, metadata !444), !dbg !1194
  store i16* %toLim, i16** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toLim.addr, metadata !1195, metadata !444), !dbg !1196
  call void @llvm.dbg.declare(metadata %struct.unknown_encoding** %uenc, metadata !1197, metadata !444), !dbg !1198
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1199
  %1 = bitcast %struct.encoding* %0 to %struct.unknown_encoding*, !dbg !1199
  store %struct.unknown_encoding* %1, %struct.unknown_encoding** %uenc, align 8, !dbg !1198
  br label %while.cond, !dbg !1200

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i8**, i8*** %fromP.addr, align 8, !dbg !1201
  %3 = load i8*, i8** %2, align 8, !dbg !1203
  %4 = load i8*, i8** %fromLim.addr, align 8, !dbg !1204
  %cmp = icmp ult i8* %3, %4, !dbg !1205
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1206

land.rhs:                                         ; preds = %while.cond
  %5 = load i16**, i16*** %toP.addr, align 8, !dbg !1207
  %6 = load i16*, i16** %5, align 8, !dbg !1209
  %7 = load i16*, i16** %toLim.addr, align 8, !dbg !1210
  %cmp1 = icmp ult i16* %6, %7, !dbg !1211
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %8, label %while.body, label %while.end, !dbg !1212

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i16* %c, metadata !1214, metadata !444), !dbg !1216
  %9 = load i8**, i8*** %fromP.addr, align 8, !dbg !1217
  %10 = load i8*, i8** %9, align 8, !dbg !1218
  %11 = load i8, i8* %10, align 1, !dbg !1219
  %idxprom = zext i8 %11 to i64, !dbg !1220
  %12 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1220
  %utf16 = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %12, i32 0, i32 3, !dbg !1221
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* %utf16, i64 0, i64 %idxprom, !dbg !1220
  %13 = load i16, i16* %arrayidx, align 2, !dbg !1220
  store i16 %13, i16* %c, align 2, !dbg !1216
  %14 = load i16, i16* %c, align 2, !dbg !1222
  %conv = zext i16 %14 to i32, !dbg !1222
  %cmp2 = icmp eq i32 %conv, 0, !dbg !1224
  br i1 %cmp2, label %if.then, label %if.else, !dbg !1225

if.then:                                          ; preds = %while.body
  %15 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1226
  %convert = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %15, i32 0, i32 1, !dbg !1228
  %16 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert, align 8, !dbg !1228
  %17 = load %struct.unknown_encoding*, %struct.unknown_encoding** %uenc, align 8, !dbg !1229
  %userData = getelementptr inbounds %struct.unknown_encoding, %struct.unknown_encoding* %17, i32 0, i32 2, !dbg !1230
  %18 = load i8*, i8** %userData, align 8, !dbg !1230
  %19 = load i8**, i8*** %fromP.addr, align 8, !dbg !1231
  %20 = load i8*, i8** %19, align 8, !dbg !1232
  %call = call i32 %16(i8* %18, i8* %20), !dbg !1226
  %conv4 = trunc i32 %call to i16, !dbg !1233
  store i16 %conv4, i16* %c, align 2, !dbg !1234
  %21 = load i8**, i8*** %fromP.addr, align 8, !dbg !1235
  %22 = load i8*, i8** %21, align 8, !dbg !1236
  %23 = load i8, i8* %22, align 1, !dbg !1237
  %idxprom5 = zext i8 %23 to i64, !dbg !1238
  %24 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1238
  %25 = bitcast %struct.encoding* %24 to %struct.normal_encoding*, !dbg !1239
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %25, i32 0, i32 1, !dbg !1239
  %arrayidx6 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom5, !dbg !1238
  %26 = load i8, i8* %arrayidx6, align 1, !dbg !1238
  %conv7 = zext i8 %26 to i32, !dbg !1238
  %sub = sub nsw i32 %conv7, 3, !dbg !1240
  %27 = load i8**, i8*** %fromP.addr, align 8, !dbg !1241
  %28 = load i8*, i8** %27, align 8, !dbg !1242
  %idx.ext = sext i32 %sub to i64, !dbg !1242
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %idx.ext, !dbg !1242
  store i8* %add.ptr, i8** %27, align 8, !dbg !1242
  br label %if.end, !dbg !1243

if.else:                                          ; preds = %while.body
  %29 = load i8**, i8*** %fromP.addr, align 8, !dbg !1244
  %30 = load i8*, i8** %29, align 8, !dbg !1245
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1, !dbg !1245
  store i8* %incdec.ptr, i8** %29, align 8, !dbg !1245
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %31 = load i16, i16* %c, align 2, !dbg !1246
  %32 = load i16**, i16*** %toP.addr, align 8, !dbg !1247
  %33 = load i16*, i16** %32, align 8, !dbg !1248
  %incdec.ptr8 = getelementptr inbounds i16, i16* %33, i32 1, !dbg !1248
  store i16* %incdec.ptr8, i16** %32, align 8, !dbg !1248
  store i16 %31, i16* %33, align 2, !dbg !1249
  br label %while.cond, !dbg !1250

while.end:                                        ; preds = %land.end
  %34 = load i16**, i16*** %toP.addr, align 8, !dbg !1252
  %35 = load i16*, i16** %34, align 8, !dbg !1254
  %36 = load i16*, i16** %toLim.addr, align 8, !dbg !1255
  %cmp9 = icmp eq i16* %35, %36, !dbg !1256
  br i1 %cmp9, label %land.lhs.true, label %if.else14, !dbg !1257

land.lhs.true:                                    ; preds = %while.end
  %37 = load i8**, i8*** %fromP.addr, align 8, !dbg !1258
  %38 = load i8*, i8** %37, align 8, !dbg !1260
  %39 = load i8*, i8** %fromLim.addr, align 8, !dbg !1261
  %cmp11 = icmp ult i8* %38, %39, !dbg !1262
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !1263

if.then13:                                        ; preds = %land.lhs.true
  store i32 2, i32* %retval, align 4, !dbg !1264
  br label %return, !dbg !1264

if.else14:                                        ; preds = %land.lhs.true, %while.end
  store i32 0, i32* %retval, align 4, !dbg !1265
  br label %return, !dbg !1265

return:                                           ; preds = %if.else14, %if.then13
  %40 = load i32, i32* %retval, align 4, !dbg !1266
  ret i32 %40, !dbg !1266
}

; Function Attrs: nounwind uwtable
define %struct.encoding* @XmlGetUtf8InternalEncoding() #0 !dbg !234 {
entry:
  ret %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @internal_utf8_encoding, i32 0, i32 0), !dbg !1267
}

; Function Attrs: nounwind uwtable
define %struct.encoding* @XmlGetUtf16InternalEncoding() #0 !dbg !238 {
entry:
  ret %struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @internal_little2_encoding, i32 0, i32 0), !dbg !1268
}

; Function Attrs: nounwind uwtable
define i32 @XmlInitEncoding(%struct.INIT_ENCODING* %p, %struct.encoding** %encPtr, i8* %name) #0 !dbg !239 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.INIT_ENCODING*, align 8
  %encPtr.addr = alloca %struct.encoding**, align 8
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.INIT_ENCODING* %p, %struct.INIT_ENCODING** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.INIT_ENCODING** %p.addr, metadata !1269, metadata !444), !dbg !1270
  store %struct.encoding** %encPtr, %struct.encoding*** %encPtr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding*** %encPtr.addr, metadata !1271, metadata !444), !dbg !1272
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1273, metadata !444), !dbg !1274
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1275, metadata !444), !dbg !1276
  %0 = load i8*, i8** %name.addr, align 8, !dbg !1277
  %call = call i32 @getEncodingIndex(i8* %0), !dbg !1278
  store i32 %call, i32* %i, align 4, !dbg !1276
  %1 = load i32, i32* %i, align 4, !dbg !1279
  %cmp = icmp eq i32 %1, -1, !dbg !1281
  br i1 %cmp, label %if.then, label %if.end, !dbg !1282

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1283
  br label %return, !dbg !1283

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %i, align 4, !dbg !1284
  %conv = trunc i32 %2 to i8, !dbg !1284
  %3 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %p.addr, align 8, !dbg !1284
  %initEnc = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %3, i32 0, i32 0, !dbg !1284
  %isUtf16 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc, i32 0, i32 15, !dbg !1284
  store i8 %conv, i8* %isUtf16, align 1, !dbg !1284
  %4 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %p.addr, align 8, !dbg !1285
  %initEnc1 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %4, i32 0, i32 0, !dbg !1286
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc1, i32 0, i32 0, !dbg !1287
  %arrayidx = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 0, !dbg !1285
  store i32 (%struct.encoding*, i8*, i8*, i8**)* @initScanProlog, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !1288
  %5 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %p.addr, align 8, !dbg !1289
  %initEnc2 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %5, i32 0, i32 0, !dbg !1290
  %scanners3 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc2, i32 0, i32 0, !dbg !1291
  %arrayidx4 = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners3, i64 0, i64 1, !dbg !1289
  store i32 (%struct.encoding*, i8*, i8*, i8**)* @initScanContent, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx4, align 8, !dbg !1292
  %6 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %p.addr, align 8, !dbg !1293
  %initEnc5 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %6, i32 0, i32 0, !dbg !1294
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc5, i32 0, i32 9, !dbg !1295
  store void (%struct.encoding*, i8*, i8*, %struct.position*)* @initUpdatePosition, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !1296
  %7 = load %struct.encoding**, %struct.encoding*** %encPtr.addr, align 8, !dbg !1297
  %8 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %p.addr, align 8, !dbg !1298
  %encPtr6 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %8, i32 0, i32 1, !dbg !1299
  store %struct.encoding** %7, %struct.encoding*** %encPtr6, align 8, !dbg !1300
  %9 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %p.addr, align 8, !dbg !1301
  %initEnc7 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %9, i32 0, i32 0, !dbg !1302
  %10 = load %struct.encoding**, %struct.encoding*** %encPtr.addr, align 8, !dbg !1303
  store %struct.encoding* %initEnc7, %struct.encoding** %10, align 8, !dbg !1304
  store i32 1, i32* %retval, align 4, !dbg !1305
  br label %return, !dbg !1305

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !1306
  ret i32 %11, !dbg !1306
}

; Function Attrs: nounwind uwtable
define internal i32 @getEncodingIndex(i8* %name) #0 !dbg !329 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1307, metadata !444), !dbg !1308
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1309, metadata !444), !dbg !1310
  %0 = load i8*, i8** %name.addr, align 8, !dbg !1311
  %cmp = icmp eq i8* %0, null, !dbg !1313
  br i1 %cmp, label %if.then, label %if.end, !dbg !1314

if.then:                                          ; preds = %entry
  store i32 6, i32* %retval, align 4, !dbg !1315
  br label %return, !dbg !1315

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1316
  br label %for.cond, !dbg !1318

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !1319
  %cmp1 = icmp slt i32 %1, 6, !dbg !1322
  br i1 %cmp1, label %for.body, label %for.end, !dbg !1323

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !1324
  %3 = load i32, i32* %i, align 4, !dbg !1326
  %idxprom = sext i32 %3 to i64, !dbg !1327
  %arrayidx = getelementptr inbounds [6 x i8*], [6 x i8*]* @getEncodingIndex.encodingNames, i64 0, i64 %idxprom, !dbg !1327
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !1327
  %call = call i32 @streqci(i8* %2, i8* %4), !dbg !1328
  %tobool = icmp ne i32 %call, 0, !dbg !1328
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !1329

if.then2:                                         ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !1330
  store i32 %5, i32* %retval, align 4, !dbg !1331
  br label %return, !dbg !1331

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !1332

for.inc:                                          ; preds = %if.end3
  %6 = load i32, i32* %i, align 4, !dbg !1334
  %inc = add nsw i32 %6, 1, !dbg !1334
  store i32 %inc, i32* %i, align 4, !dbg !1334
  br label %for.cond, !dbg !1336

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !1337
  br label %return, !dbg !1337

return:                                           ; preds = %for.end, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !1338
  ret i32 %7, !dbg !1338
}

; Function Attrs: nounwind uwtable
define internal i32 @initScanProlog(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !335 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1339, metadata !444), !dbg !1340
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1341, metadata !444), !dbg !1342
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1343, metadata !444), !dbg !1344
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !1345, metadata !444), !dbg !1346
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1347
  %1 = bitcast %struct.encoding* %0 to %struct.INIT_ENCODING*, !dbg !1348
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !1349
  %3 = load i8*, i8** %end.addr, align 8, !dbg !1350
  %4 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1351
  %call = call i32 @initScan(%struct.encoding** getelementptr inbounds ([7 x %struct.encoding*], [7 x %struct.encoding*]* @encodings, i32 0, i32 0), %struct.INIT_ENCODING* %1, i32 0, i8* %2, i8* %3, i8** %4), !dbg !1352
  ret i32 %call, !dbg !1353
}

; Function Attrs: nounwind uwtable
define internal i32 @initScanContent(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !371 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1354, metadata !444), !dbg !1355
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1356, metadata !444), !dbg !1357
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1358, metadata !444), !dbg !1359
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !1360, metadata !444), !dbg !1361
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1362
  %1 = bitcast %struct.encoding* %0 to %struct.INIT_ENCODING*, !dbg !1363
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !1364
  %3 = load i8*, i8** %end.addr, align 8, !dbg !1365
  %4 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1366
  %call = call i32 @initScan(%struct.encoding** getelementptr inbounds ([7 x %struct.encoding*], [7 x %struct.encoding*]* @encodings, i32 0, i32 0), %struct.INIT_ENCODING* %1, i32 1, i8* %2, i8* %3, i8** %4), !dbg !1367
  ret i32 %call, !dbg !1368
}

; Function Attrs: nounwind uwtable
define internal void @initUpdatePosition(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end, %struct.position* %pos) #0 !dbg !372 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pos.addr = alloca %struct.position*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !1369, metadata !444), !dbg !1370
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1371, metadata !444), !dbg !1372
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1373, metadata !444), !dbg !1374
  store %struct.position* %pos, %struct.position** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.position** %pos.addr, metadata !1375, metadata !444), !dbg !1376
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !1377
  %1 = load i8*, i8** %end.addr, align 8, !dbg !1378
  %2 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !1379
  call void @normal_updatePosition(%struct.encoding* getelementptr inbounds (%struct.normal_encoding, %struct.normal_encoding* @utf8_encoding, i32 0, i32 0), i8* %0, i8* %1, %struct.position* %2), !dbg !1380
  ret void, !dbg !1381
}

; Function Attrs: nounwind uwtable
define i32 @XmlParseXmlDecl(i32 %isGeneralTextEntity, %struct.encoding* %enc, i8* %ptr, i8* %end, i8** %badPtr, i8** %versionPtr, i8** %versionEndPtr, i8** %encodingName, %struct.encoding** %encoding, i32* %standalone) #0 !dbg !243 {
entry:
  %isGeneralTextEntity.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %badPtr.addr = alloca i8**, align 8
  %versionPtr.addr = alloca i8**, align 8
  %versionEndPtr.addr = alloca i8**, align 8
  %encodingName.addr = alloca i8**, align 8
  %encoding.addr = alloca %struct.encoding**, align 8
  %standalone.addr = alloca i32*, align 8
  store i32 %isGeneralTextEntity, i32* %isGeneralTextEntity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %isGeneralTextEntity.addr, metadata !1382, metadata !444), !dbg !1383
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1384, metadata !444), !dbg !1385
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1386, metadata !444), !dbg !1387
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1388, metadata !444), !dbg !1389
  store i8** %badPtr, i8*** %badPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %badPtr.addr, metadata !1390, metadata !444), !dbg !1391
  store i8** %versionPtr, i8*** %versionPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %versionPtr.addr, metadata !1392, metadata !444), !dbg !1393
  store i8** %versionEndPtr, i8*** %versionEndPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %versionEndPtr.addr, metadata !1394, metadata !444), !dbg !1395
  store i8** %encodingName, i8*** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %encodingName.addr, metadata !1396, metadata !444), !dbg !1397
  store %struct.encoding** %encoding, %struct.encoding*** %encoding.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding*** %encoding.addr, metadata !1398, metadata !444), !dbg !1399
  store i32* %standalone, i32** %standalone.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %standalone.addr, metadata !1400, metadata !444), !dbg !1401
  %0 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !1402
  %1 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1403
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !1404
  %3 = load i8*, i8** %end.addr, align 8, !dbg !1405
  %4 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1406
  %5 = load i8**, i8*** %versionPtr.addr, align 8, !dbg !1407
  %6 = load i8**, i8*** %versionEndPtr.addr, align 8, !dbg !1408
  %7 = load i8**, i8*** %encodingName.addr, align 8, !dbg !1409
  %8 = load %struct.encoding**, %struct.encoding*** %encoding.addr, align 8, !dbg !1410
  %9 = load i32*, i32** %standalone.addr, align 8, !dbg !1411
  %call = call i32 @doParseXmlDecl(%struct.encoding* (%struct.encoding*, i8*, i8*)* @findEncoding, i32 %0, %struct.encoding* %1, i8* %2, i8* %3, i8** %4, i8** %5, i8** %6, i8** %7, %struct.encoding** %8, i32* %9), !dbg !1412
  ret i32 %call, !dbg !1413
}

; Function Attrs: nounwind uwtable
define internal i32 @doParseXmlDecl(%struct.encoding* (%struct.encoding*, i8*, i8*)* %encodingFinder, i32 %isGeneralTextEntity, %struct.encoding* %enc, i8* %ptr, i8* %end, i8** %badPtr, i8** %versionPtr, i8** %versionEndPtr, i8** %encodingName, %struct.encoding** %encoding, i32* %standalone) #0 !dbg !373 {
entry:
  %retval = alloca i32, align 4
  %encodingFinder.addr = alloca %struct.encoding* (%struct.encoding*, i8*, i8*)*, align 8
  %isGeneralTextEntity.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %badPtr.addr = alloca i8**, align 8
  %versionPtr.addr = alloca i8**, align 8
  %versionEndPtr.addr = alloca i8**, align 8
  %encodingName.addr = alloca i8**, align 8
  %encoding.addr = alloca %struct.encoding**, align 8
  %standalone.addr = alloca i32*, align 8
  %val = alloca i8*, align 8
  %name = alloca i8*, align 8
  %nameEnd = alloca i8*, align 8
  %c = alloca i32, align 4
  store %struct.encoding* (%struct.encoding*, i8*, i8*)* %encodingFinder, %struct.encoding* (%struct.encoding*, i8*, i8*)** %encodingFinder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding* (%struct.encoding*, i8*, i8*)** %encodingFinder.addr, metadata !1414, metadata !444), !dbg !1415
  store i32 %isGeneralTextEntity, i32* %isGeneralTextEntity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %isGeneralTextEntity.addr, metadata !1416, metadata !444), !dbg !1417
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1418, metadata !444), !dbg !1419
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1420, metadata !444), !dbg !1421
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1422, metadata !444), !dbg !1423
  store i8** %badPtr, i8*** %badPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %badPtr.addr, metadata !1424, metadata !444), !dbg !1425
  store i8** %versionPtr, i8*** %versionPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %versionPtr.addr, metadata !1426, metadata !444), !dbg !1427
  store i8** %versionEndPtr, i8*** %versionEndPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %versionEndPtr.addr, metadata !1428, metadata !444), !dbg !1429
  store i8** %encodingName, i8*** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %encodingName.addr, metadata !1430, metadata !444), !dbg !1431
  store %struct.encoding** %encoding, %struct.encoding*** %encoding.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding*** %encoding.addr, metadata !1432, metadata !444), !dbg !1433
  store i32* %standalone, i32** %standalone.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %standalone.addr, metadata !1434, metadata !444), !dbg !1435
  call void @llvm.dbg.declare(metadata i8** %val, metadata !1436, metadata !444), !dbg !1437
  store i8* null, i8** %val, align 8, !dbg !1437
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1438, metadata !444), !dbg !1439
  store i8* null, i8** %name, align 8, !dbg !1439
  call void @llvm.dbg.declare(metadata i8** %nameEnd, metadata !1440, metadata !444), !dbg !1441
  store i8* null, i8** %nameEnd, align 8, !dbg !1441
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1442
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %0, i32 0, i32 13, !dbg !1443
  %1 = load i32, i32* %minBytesPerChar, align 8, !dbg !1443
  %mul = mul nsw i32 5, %1, !dbg !1444
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !1445
  %idx.ext = sext i32 %mul to i64, !dbg !1445
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !1445
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !1445
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1446
  %minBytesPerChar1 = getelementptr inbounds %struct.encoding, %struct.encoding* %3, i32 0, i32 13, !dbg !1447
  %4 = load i32, i32* %minBytesPerChar1, align 8, !dbg !1447
  %mul2 = mul nsw i32 2, %4, !dbg !1448
  %5 = load i8*, i8** %end.addr, align 8, !dbg !1449
  %idx.ext3 = sext i32 %mul2 to i64, !dbg !1449
  %idx.neg = sub i64 0, %idx.ext3, !dbg !1449
  %add.ptr4 = getelementptr inbounds i8, i8* %5, i64 %idx.neg, !dbg !1449
  store i8* %add.ptr4, i8** %end.addr, align 8, !dbg !1449
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1450
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !1452
  %8 = load i8*, i8** %end.addr, align 8, !dbg !1453
  %call = call i32 @parsePseudoAttribute(%struct.encoding* %6, i8* %7, i8* %8, i8** %name, i8** %nameEnd, i8** %val, i8** %ptr.addr), !dbg !1454
  %tobool = icmp ne i32 %call, 0, !dbg !1454
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !1455

lor.lhs.false:                                    ; preds = %entry
  %9 = load i8*, i8** %name, align 8, !dbg !1456
  %tobool5 = icmp ne i8* %9, null, !dbg !1456
  br i1 %tobool5, label %if.end, label %if.then, !dbg !1458

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !1460
  %11 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1462
  store i8* %10, i8** %11, align 8, !dbg !1463
  store i32 0, i32* %retval, align 4, !dbg !1464
  br label %return, !dbg !1464

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1465
  %nameMatchesAscii = getelementptr inbounds %struct.encoding, %struct.encoding* %12, i32 0, i32 3, !dbg !1465
  %13 = load i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)** %nameMatchesAscii, align 8, !dbg !1465
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1465
  %15 = load i8*, i8** %name, align 8, !dbg !1465
  %16 = load i8*, i8** %nameEnd, align 8, !dbg !1465
  %call6 = call i32 %13(%struct.encoding* %14, i8* %15, i8* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @KW_version, i32 0, i32 0)), !dbg !1465
  %tobool7 = icmp ne i32 %call6, 0, !dbg !1465
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !1467

if.then8:                                         ; preds = %if.end
  %17 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !1468
  %tobool9 = icmp ne i32 %17, 0, !dbg !1468
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !1471

if.then10:                                        ; preds = %if.then8
  %18 = load i8*, i8** %name, align 8, !dbg !1472
  %19 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1474
  store i8* %18, i8** %19, align 8, !dbg !1475
  store i32 0, i32* %retval, align 4, !dbg !1476
  br label %return, !dbg !1476

if.end11:                                         ; preds = %if.then8
  br label %if.end28, !dbg !1477

if.else:                                          ; preds = %if.end
  %20 = load i8**, i8*** %versionPtr.addr, align 8, !dbg !1478
  %tobool12 = icmp ne i8** %20, null, !dbg !1478
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !1481

if.then13:                                        ; preds = %if.else
  %21 = load i8*, i8** %val, align 8, !dbg !1482
  %22 = load i8**, i8*** %versionPtr.addr, align 8, !dbg !1483
  store i8* %21, i8** %22, align 8, !dbg !1484
  br label %if.end14, !dbg !1485

if.end14:                                         ; preds = %if.then13, %if.else
  %23 = load i8**, i8*** %versionEndPtr.addr, align 8, !dbg !1486
  %tobool15 = icmp ne i8** %23, null, !dbg !1486
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !1488

if.then16:                                        ; preds = %if.end14
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !1489
  %25 = load i8**, i8*** %versionEndPtr.addr, align 8, !dbg !1490
  store i8* %24, i8** %25, align 8, !dbg !1491
  br label %if.end17, !dbg !1492

if.end17:                                         ; preds = %if.then16, %if.end14
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1493
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !1495
  %28 = load i8*, i8** %end.addr, align 8, !dbg !1496
  %call18 = call i32 @parsePseudoAttribute(%struct.encoding* %26, i8* %27, i8* %28, i8** %name, i8** %nameEnd, i8** %val, i8** %ptr.addr), !dbg !1497
  %tobool19 = icmp ne i32 %call18, 0, !dbg !1497
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !1498

if.then20:                                        ; preds = %if.end17
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !1499
  %30 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1501
  store i8* %29, i8** %30, align 8, !dbg !1502
  store i32 0, i32* %retval, align 4, !dbg !1503
  br label %return, !dbg !1503

if.end21:                                         ; preds = %if.end17
  %31 = load i8*, i8** %name, align 8, !dbg !1504
  %tobool22 = icmp ne i8* %31, null, !dbg !1504
  br i1 %tobool22, label %if.end27, label %if.then23, !dbg !1506

if.then23:                                        ; preds = %if.end21
  %32 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !1507
  %tobool24 = icmp ne i32 %32, 0, !dbg !1507
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !1510

if.then25:                                        ; preds = %if.then23
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !1511
  %34 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1513
  store i8* %33, i8** %34, align 8, !dbg !1514
  store i32 0, i32* %retval, align 4, !dbg !1515
  br label %return, !dbg !1515

if.end26:                                         ; preds = %if.then23
  store i32 1, i32* %retval, align 4, !dbg !1516
  br label %return, !dbg !1516

if.end27:                                         ; preds = %if.end21
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end11
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1517
  %nameMatchesAscii29 = getelementptr inbounds %struct.encoding, %struct.encoding* %35, i32 0, i32 3, !dbg !1517
  %36 = load i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)** %nameMatchesAscii29, align 8, !dbg !1517
  %37 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1517
  %38 = load i8*, i8** %name, align 8, !dbg !1517
  %39 = load i8*, i8** %nameEnd, align 8, !dbg !1517
  %call30 = call i32 %36(%struct.encoding* %37, i8* %38, i8* %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @KW_encoding, i32 0, i32 0)), !dbg !1517
  %tobool31 = icmp ne i32 %call30, 0, !dbg !1517
  br i1 %tobool31, label %if.then32, label %if.end59, !dbg !1519

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1520, metadata !444), !dbg !1522
  %40 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1523
  %41 = load i8*, i8** %val, align 8, !dbg !1524
  %42 = load i8*, i8** %end.addr, align 8, !dbg !1525
  %call33 = call i32 @toAscii(%struct.encoding* %40, i8* %41, i8* %42), !dbg !1526
  store i32 %call33, i32* %c, align 4, !dbg !1522
  %43 = load i32, i32* %c, align 4, !dbg !1527
  %cmp = icmp sle i32 97, %43, !dbg !1529
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true35, !dbg !1530

land.lhs.true:                                    ; preds = %if.then32
  %44 = load i32, i32* %c, align 4, !dbg !1531
  %cmp34 = icmp sle i32 %44, 122, !dbg !1533
  br i1 %cmp34, label %if.end40, label %land.lhs.true35, !dbg !1534

land.lhs.true35:                                  ; preds = %land.lhs.true, %if.then32
  %45 = load i32, i32* %c, align 4, !dbg !1535
  %cmp36 = icmp sle i32 65, %45, !dbg !1537
  br i1 %cmp36, label %land.lhs.true37, label %if.then39, !dbg !1538

land.lhs.true37:                                  ; preds = %land.lhs.true35
  %46 = load i32, i32* %c, align 4, !dbg !1539
  %cmp38 = icmp sle i32 %46, 90, !dbg !1541
  br i1 %cmp38, label %if.end40, label %if.then39, !dbg !1542

if.then39:                                        ; preds = %land.lhs.true37, %land.lhs.true35
  %47 = load i8*, i8** %val, align 8, !dbg !1543
  %48 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1545
  store i8* %47, i8** %48, align 8, !dbg !1546
  store i32 0, i32* %retval, align 4, !dbg !1547
  br label %return, !dbg !1547

if.end40:                                         ; preds = %land.lhs.true37, %land.lhs.true
  %49 = load i8**, i8*** %encodingName.addr, align 8, !dbg !1548
  %tobool41 = icmp ne i8** %49, null, !dbg !1548
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !1550

if.then42:                                        ; preds = %if.end40
  %50 = load i8*, i8** %val, align 8, !dbg !1551
  %51 = load i8**, i8*** %encodingName.addr, align 8, !dbg !1552
  store i8* %50, i8** %51, align 8, !dbg !1553
  br label %if.end43, !dbg !1554

if.end43:                                         ; preds = %if.then42, %if.end40
  %52 = load %struct.encoding**, %struct.encoding*** %encoding.addr, align 8, !dbg !1555
  %tobool44 = icmp ne %struct.encoding** %52, null, !dbg !1555
  br i1 %tobool44, label %if.then45, label %if.end51, !dbg !1557

if.then45:                                        ; preds = %if.end43
  %53 = load %struct.encoding* (%struct.encoding*, i8*, i8*)*, %struct.encoding* (%struct.encoding*, i8*, i8*)** %encodingFinder.addr, align 8, !dbg !1558
  %54 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1559
  %55 = load i8*, i8** %val, align 8, !dbg !1560
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !1561
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1562
  %minBytesPerChar46 = getelementptr inbounds %struct.encoding, %struct.encoding* %57, i32 0, i32 13, !dbg !1563
  %58 = load i32, i32* %minBytesPerChar46, align 8, !dbg !1563
  %idx.ext47 = sext i32 %58 to i64, !dbg !1564
  %idx.neg48 = sub i64 0, %idx.ext47, !dbg !1564
  %add.ptr49 = getelementptr inbounds i8, i8* %56, i64 %idx.neg48, !dbg !1564
  %call50 = call %struct.encoding* %53(%struct.encoding* %54, i8* %55, i8* %add.ptr49), !dbg !1558
  %59 = load %struct.encoding**, %struct.encoding*** %encoding.addr, align 8, !dbg !1565
  store %struct.encoding* %call50, %struct.encoding** %59, align 8, !dbg !1566
  br label %if.end51, !dbg !1567

if.end51:                                         ; preds = %if.then45, %if.end43
  %60 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1568
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !1570
  %62 = load i8*, i8** %end.addr, align 8, !dbg !1571
  %call52 = call i32 @parsePseudoAttribute(%struct.encoding* %60, i8* %61, i8* %62, i8** %name, i8** %nameEnd, i8** %val, i8** %ptr.addr), !dbg !1572
  %tobool53 = icmp ne i32 %call52, 0, !dbg !1572
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !1573

if.then54:                                        ; preds = %if.end51
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !1574
  %64 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1576
  store i8* %63, i8** %64, align 8, !dbg !1577
  store i32 0, i32* %retval, align 4, !dbg !1578
  br label %return, !dbg !1578

if.end55:                                         ; preds = %if.end51
  %65 = load i8*, i8** %name, align 8, !dbg !1579
  %tobool56 = icmp ne i8* %65, null, !dbg !1579
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !1581

if.then57:                                        ; preds = %if.end55
  store i32 1, i32* %retval, align 4, !dbg !1582
  br label %return, !dbg !1582

if.end58:                                         ; preds = %if.end55
  br label %if.end59, !dbg !1583

if.end59:                                         ; preds = %if.end58, %if.end28
  %66 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1584
  %nameMatchesAscii60 = getelementptr inbounds %struct.encoding, %struct.encoding* %66, i32 0, i32 3, !dbg !1584
  %67 = load i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)** %nameMatchesAscii60, align 8, !dbg !1584
  %68 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1584
  %69 = load i8*, i8** %name, align 8, !dbg !1584
  %70 = load i8*, i8** %nameEnd, align 8, !dbg !1584
  %call61 = call i32 %67(%struct.encoding* %68, i8* %69, i8* %70, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @KW_standalone, i32 0, i32 0)), !dbg !1584
  %tobool62 = icmp ne i32 %call61, 0, !dbg !1584
  br i1 %tobool62, label %lor.lhs.false63, label %if.then65, !dbg !1586

lor.lhs.false63:                                  ; preds = %if.end59
  %71 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !1587
  %tobool64 = icmp ne i32 %71, 0, !dbg !1587
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !1589

if.then65:                                        ; preds = %lor.lhs.false63, %if.end59
  %72 = load i8*, i8** %name, align 8, !dbg !1590
  %73 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1592
  store i8* %72, i8** %73, align 8, !dbg !1593
  store i32 0, i32* %retval, align 4, !dbg !1594
  br label %return, !dbg !1594

if.end66:                                         ; preds = %lor.lhs.false63
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1595
  %nameMatchesAscii67 = getelementptr inbounds %struct.encoding, %struct.encoding* %74, i32 0, i32 3, !dbg !1595
  %75 = load i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)** %nameMatchesAscii67, align 8, !dbg !1595
  %76 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1595
  %77 = load i8*, i8** %val, align 8, !dbg !1595
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !1595
  %79 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1595
  %minBytesPerChar68 = getelementptr inbounds %struct.encoding, %struct.encoding* %79, i32 0, i32 13, !dbg !1595
  %80 = load i32, i32* %minBytesPerChar68, align 8, !dbg !1595
  %idx.ext69 = sext i32 %80 to i64, !dbg !1595
  %idx.neg70 = sub i64 0, %idx.ext69, !dbg !1595
  %add.ptr71 = getelementptr inbounds i8, i8* %78, i64 %idx.neg70, !dbg !1595
  %call72 = call i32 %75(%struct.encoding* %76, i8* %77, i8* %add.ptr71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @KW_yes, i32 0, i32 0)), !dbg !1595
  %tobool73 = icmp ne i32 %call72, 0, !dbg !1595
  br i1 %tobool73, label %if.then74, label %if.else78, !dbg !1597

if.then74:                                        ; preds = %if.end66
  %81 = load i32*, i32** %standalone.addr, align 8, !dbg !1598
  %tobool75 = icmp ne i32* %81, null, !dbg !1598
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !1601

if.then76:                                        ; preds = %if.then74
  %82 = load i32*, i32** %standalone.addr, align 8, !dbg !1602
  store i32 1, i32* %82, align 4, !dbg !1603
  br label %if.end77, !dbg !1604

if.end77:                                         ; preds = %if.then76, %if.then74
  br label %if.end92, !dbg !1605

if.else78:                                        ; preds = %if.end66
  %83 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1606
  %nameMatchesAscii79 = getelementptr inbounds %struct.encoding, %struct.encoding* %83, i32 0, i32 3, !dbg !1606
  %84 = load i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)** %nameMatchesAscii79, align 8, !dbg !1606
  %85 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1606
  %86 = load i8*, i8** %val, align 8, !dbg !1606
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !1606
  %88 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1606
  %minBytesPerChar80 = getelementptr inbounds %struct.encoding, %struct.encoding* %88, i32 0, i32 13, !dbg !1606
  %89 = load i32, i32* %minBytesPerChar80, align 8, !dbg !1606
  %idx.ext81 = sext i32 %89 to i64, !dbg !1606
  %idx.neg82 = sub i64 0, %idx.ext81, !dbg !1606
  %add.ptr83 = getelementptr inbounds i8, i8* %87, i64 %idx.neg82, !dbg !1606
  %call84 = call i32 %84(%struct.encoding* %85, i8* %86, i8* %add.ptr83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @KW_no, i32 0, i32 0)), !dbg !1606
  %tobool85 = icmp ne i32 %call84, 0, !dbg !1606
  br i1 %tobool85, label %if.then86, label %if.else90, !dbg !1608

if.then86:                                        ; preds = %if.else78
  %90 = load i32*, i32** %standalone.addr, align 8, !dbg !1609
  %tobool87 = icmp ne i32* %90, null, !dbg !1609
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !1612

if.then88:                                        ; preds = %if.then86
  %91 = load i32*, i32** %standalone.addr, align 8, !dbg !1613
  store i32 0, i32* %91, align 4, !dbg !1614
  br label %if.end89, !dbg !1615

if.end89:                                         ; preds = %if.then88, %if.then86
  br label %if.end91, !dbg !1616

if.else90:                                        ; preds = %if.else78
  %92 = load i8*, i8** %val, align 8, !dbg !1617
  %93 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1619
  store i8* %92, i8** %93, align 8, !dbg !1620
  store i32 0, i32* %retval, align 4, !dbg !1621
  br label %return, !dbg !1621

if.end91:                                         ; preds = %if.end89
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end77
  br label %while.cond, !dbg !1622

while.cond:                                       ; preds = %while.body, %if.end92
  %94 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1623
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !1624
  %96 = load i8*, i8** %end.addr, align 8, !dbg !1625
  %call93 = call i32 @toAscii(%struct.encoding* %94, i8* %95, i8* %96), !dbg !1626
  %call94 = call i32 @isSpace(i32 %call93), !dbg !1627
  %tobool95 = icmp ne i32 %call94, 0, !dbg !1629
  br i1 %tobool95, label %while.body, label %while.end, !dbg !1629

while.body:                                       ; preds = %while.cond
  %97 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1630
  %minBytesPerChar96 = getelementptr inbounds %struct.encoding, %struct.encoding* %97, i32 0, i32 13, !dbg !1631
  %98 = load i32, i32* %minBytesPerChar96, align 8, !dbg !1631
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !1632
  %idx.ext97 = sext i32 %98 to i64, !dbg !1632
  %add.ptr98 = getelementptr inbounds i8, i8* %99, i64 %idx.ext97, !dbg !1632
  store i8* %add.ptr98, i8** %ptr.addr, align 8, !dbg !1632
  br label %while.cond, !dbg !1633

while.end:                                        ; preds = %while.cond
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !1635
  %101 = load i8*, i8** %end.addr, align 8, !dbg !1637
  %cmp99 = icmp ne i8* %100, %101, !dbg !1638
  br i1 %cmp99, label %if.then100, label %if.end101, !dbg !1639

if.then100:                                       ; preds = %while.end
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !1640
  %103 = load i8**, i8*** %badPtr.addr, align 8, !dbg !1642
  store i8* %102, i8** %103, align 8, !dbg !1643
  store i32 0, i32* %retval, align 4, !dbg !1644
  br label %return, !dbg !1644

if.end101:                                        ; preds = %while.end
  store i32 1, i32* %retval, align 4, !dbg !1645
  br label %return, !dbg !1645

return:                                           ; preds = %if.end101, %if.then100, %if.else90, %if.then65, %if.then57, %if.then54, %if.then39, %if.end26, %if.then25, %if.then20, %if.then10, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !1646
  ret i32 %104, !dbg !1646
}

; Function Attrs: nounwind uwtable
define internal %struct.encoding* @findEncoding(%struct.encoding* %enc, i8* %ptr, i8* %end) #0 !dbg !384 {
entry:
  %retval = alloca %struct.encoding*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %buf = alloca [128 x i8], align 16
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1647, metadata !444), !dbg !1648
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1649, metadata !444), !dbg !1650
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1651, metadata !444), !dbg !1652
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !1653, metadata !444), !dbg !1657
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1658, metadata !444), !dbg !1659
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !1660
  store i8* %arraydecay, i8** %p, align 8, !dbg !1659
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1661, metadata !444), !dbg !1662
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1663
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %0, i32 0, i32 11, !dbg !1663
  %1 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !1663
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1663
  %3 = load i8*, i8** %end.addr, align 8, !dbg !1663
  %4 = load i8*, i8** %p, align 8, !dbg !1663
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 128, !dbg !1663
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !1663
  %call = call i32 %1(%struct.encoding* %2, i8** %ptr.addr, i8* %3, i8** %p, i8* %add.ptr1), !dbg !1663
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !1664
  %6 = load i8*, i8** %end.addr, align 8, !dbg !1666
  %cmp = icmp ne i8* %5, %6, !dbg !1667
  br i1 %cmp, label %if.then, label %if.end, !dbg !1668

if.then:                                          ; preds = %entry
  store %struct.encoding* null, %struct.encoding** %retval, align 8, !dbg !1669
  br label %return, !dbg !1669

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %p, align 8, !dbg !1670
  store i8 0, i8* %7, align 1, !dbg !1671
  %arraydecay2 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !1672
  %call3 = call i32 @streqci(i8* %arraydecay2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @KW_UTF_16, i32 0, i32 0)), !dbg !1674
  %tobool = icmp ne i32 %call3, 0, !dbg !1674
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !1675

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1676
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %8, i32 0, i32 13, !dbg !1678
  %9 = load i32, i32* %minBytesPerChar, align 8, !dbg !1678
  %cmp4 = icmp eq i32 %9, 2, !dbg !1679
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1680

if.then5:                                         ; preds = %land.lhs.true
  %10 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1681
  store %struct.encoding* %10, %struct.encoding** %retval, align 8, !dbg !1682
  br label %return, !dbg !1682

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %arraydecay7 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !1683
  %call8 = call i32 @getEncodingIndex(i8* %arraydecay7), !dbg !1684
  store i32 %call8, i32* %i, align 4, !dbg !1685
  %11 = load i32, i32* %i, align 4, !dbg !1686
  %cmp9 = icmp eq i32 %11, -1, !dbg !1688
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !1689

if.then10:                                        ; preds = %if.end6
  store %struct.encoding* null, %struct.encoding** %retval, align 8, !dbg !1690
  br label %return, !dbg !1690

if.end11:                                         ; preds = %if.end6
  %12 = load i32, i32* %i, align 4, !dbg !1691
  %idxprom = sext i32 %12 to i64, !dbg !1692
  %arrayidx = getelementptr inbounds [7 x %struct.encoding*], [7 x %struct.encoding*]* @encodings, i64 0, i64 %idxprom, !dbg !1692
  %13 = load %struct.encoding*, %struct.encoding** %arrayidx, align 8, !dbg !1692
  store %struct.encoding* %13, %struct.encoding** %retval, align 8, !dbg !1693
  br label %return, !dbg !1693

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %14 = load %struct.encoding*, %struct.encoding** %retval, align 8, !dbg !1694
  ret %struct.encoding* %14, !dbg !1694
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_prologTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !246 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !1695, metadata !444), !dbg !1696
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1697, metadata !444), !dbg !1698
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !1699, metadata !444), !dbg !1700
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !1701, metadata !444), !dbg !1702
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !1703, metadata !444), !dbg !1704
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !1705
  %1 = load i8*, i8** %end.addr, align 8, !dbg !1707
  %cmp = icmp uge i8* %0, %1, !dbg !1708
  br i1 %cmp, label %if.then, label %if.end, !dbg !1709

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !1710
  br label %return, !dbg !1710

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !1711
  %3 = load i8, i8* %2, align 1, !dbg !1711
  %idxprom = zext i8 %3 to i64, !dbg !1711
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1711
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !1711
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !1711
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !1711
  %6 = load i8, i8* %arrayidx, align 1, !dbg !1711
  %conv = zext i8 %6 to i32, !dbg !1711
  switch i32 %conv, label %sw.default172 [
    i32 12, label %sw.bb
    i32 13, label %sw.bb1
    i32 2, label %sw.bb4
    i32 9, label %sw.bb22
    i32 21, label %sw.bb28
    i32 10, label %sw.bb28
    i32 30, label %sw.bb49
    i32 35, label %sw.bb52
    i32 20, label %sw.bb54
    i32 4, label %sw.bb56
    i32 31, label %sw.bb84
    i32 32, label %sw.bb86
    i32 36, label %sw.bb107
    i32 11, label %sw.bb109
    i32 19, label %sw.bb111
    i32 5, label %sw.bb114
    i32 6, label %sw.bb131
    i32 7, label %sw.bb149
    i32 22, label %sw.bb167
    i32 24, label %sw.bb167
    i32 25, label %sw.bb169
    i32 26, label %sw.bb169
    i32 27, label %sw.bb169
    i32 29, label %sw.bb171
  ], !dbg !1712

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1713
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !1715
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 1, !dbg !1716
  %9 = load i8*, i8** %end.addr, align 8, !dbg !1717
  %10 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1718
  %call = call i32 @normal_scanLit(i32 12, %struct.encoding* %7, i8* %add.ptr, i8* %9, i8** %10), !dbg !1719
  store i32 %call, i32* %retval, align 4, !dbg !1720
  br label %return, !dbg !1720

sw.bb1:                                           ; preds = %if.end
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1721
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !1722
  %add.ptr2 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !1723
  %13 = load i8*, i8** %end.addr, align 8, !dbg !1724
  %14 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1725
  %call3 = call i32 @normal_scanLit(i32 13, %struct.encoding* %11, i8* %add.ptr2, i8* %13, i8** %14), !dbg !1726
  store i32 %call3, i32* %retval, align 4, !dbg !1727
  br label %return, !dbg !1727

sw.bb4:                                           ; preds = %if.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !1728
  %add.ptr5 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !1728
  store i8* %add.ptr5, i8** %ptr.addr, align 8, !dbg !1728
  %16 = load i8*, i8** %end.addr, align 8, !dbg !1730
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !1730
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !1730
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64, !dbg !1730
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1730
  %cmp6 = icmp sge i64 %sub.ptr.sub, 1, !dbg !1730
  br i1 %cmp6, label %if.end9, label %if.then8, !dbg !1733

if.then8:                                         ; preds = %sw.bb4
  store i32 -1, i32* %retval, align 4, !dbg !1734
  br label %return, !dbg !1734

if.end9:                                          ; preds = %sw.bb4
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !1737
  %19 = load i8, i8* %18, align 1, !dbg !1737
  %idxprom10 = zext i8 %19 to i64, !dbg !1737
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1737
  %21 = bitcast %struct.encoding* %20 to %struct.normal_encoding*, !dbg !1737
  %type11 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %21, i32 0, i32 1, !dbg !1737
  %arrayidx12 = getelementptr inbounds [256 x i8], [256 x i8]* %type11, i64 0, i64 %idxprom10, !dbg !1737
  %22 = load i8, i8* %arrayidx12, align 1, !dbg !1737
  %conv13 = zext i8 %22 to i32, !dbg !1737
  switch i32 %conv13, label %sw.epilog [
    i32 16, label %sw.bb14
    i32 15, label %sw.bb17
    i32 22, label %sw.bb20
    i32 24, label %sw.bb20
    i32 29, label %sw.bb20
    i32 5, label %sw.bb20
    i32 6, label %sw.bb20
    i32 7, label %sw.bb20
  ], !dbg !1738

sw.bb14:                                          ; preds = %if.end9
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1739
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !1741
  %add.ptr15 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !1742
  %25 = load i8*, i8** %end.addr, align 8, !dbg !1743
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1744
  %call16 = call i32 @normal_scanDecl(%struct.encoding* %23, i8* %add.ptr15, i8* %25, i8** %26), !dbg !1745
  store i32 %call16, i32* %retval, align 4, !dbg !1746
  br label %return, !dbg !1746

sw.bb17:                                          ; preds = %if.end9
  %27 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1747
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !1748
  %add.ptr18 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !1749
  %29 = load i8*, i8** %end.addr, align 8, !dbg !1750
  %30 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1751
  %call19 = call i32 @normal_scanPi(%struct.encoding* %27, i8* %add.ptr18, i8* %29, i8** %30), !dbg !1752
  store i32 %call19, i32* %retval, align 4, !dbg !1753
  br label %return, !dbg !1753

sw.bb20:                                          ; preds = %if.end9, %if.end9, %if.end9, %if.end9, %if.end9, %if.end9
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !1754
  %add.ptr21 = getelementptr inbounds i8, i8* %31, i64 -1, !dbg !1755
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1756
  store i8* %add.ptr21, i8** %32, align 8, !dbg !1757
  store i32 29, i32* %retval, align 4, !dbg !1758
  br label %return, !dbg !1758

sw.epilog:                                        ; preds = %if.end9
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !1759
  %34 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1760
  store i8* %33, i8** %34, align 8, !dbg !1761
  store i32 0, i32* %retval, align 4, !dbg !1762
  br label %return, !dbg !1762

sw.bb22:                                          ; preds = %if.end
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !1763
  %add.ptr23 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !1765
  %36 = load i8*, i8** %end.addr, align 8, !dbg !1766
  %cmp24 = icmp eq i8* %add.ptr23, %36, !dbg !1767
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !1768

if.then26:                                        ; preds = %sw.bb22
  %37 = load i8*, i8** %end.addr, align 8, !dbg !1769
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1771
  store i8* %37, i8** %38, align 8, !dbg !1772
  store i32 -15, i32* %retval, align 4, !dbg !1773
  br label %return, !dbg !1773

if.end27:                                         ; preds = %sw.bb22
  br label %sw.bb28, !dbg !1774

sw.bb28:                                          ; preds = %if.end, %if.end, %if.end27
  br label %for.cond, !dbg !1776

for.cond:                                         ; preds = %sw.epilog48, %sw.bb28
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !1777
  %add.ptr29 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !1777
  store i8* %add.ptr29, i8** %ptr.addr, align 8, !dbg !1777
  %40 = load i8*, i8** %end.addr, align 8, !dbg !1781
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !1781
  %sub.ptr.lhs.cast30 = ptrtoint i8* %40 to i64, !dbg !1781
  %sub.ptr.rhs.cast31 = ptrtoint i8* %41 to i64, !dbg !1781
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !1781
  %cmp33 = icmp sge i64 %sub.ptr.sub32, 1, !dbg !1781
  br i1 %cmp33, label %if.end36, label %if.then35, !dbg !1783

if.then35:                                        ; preds = %for.cond
  br label %for.end, !dbg !1784

if.end36:                                         ; preds = %for.cond
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !1785
  %43 = load i8, i8* %42, align 1, !dbg !1785
  %idxprom37 = zext i8 %43 to i64, !dbg !1785
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1785
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !1785
  %type38 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !1785
  %arrayidx39 = getelementptr inbounds [256 x i8], [256 x i8]* %type38, i64 0, i64 %idxprom37, !dbg !1785
  %46 = load i8, i8* %arrayidx39, align 1, !dbg !1785
  %conv40 = zext i8 %46 to i32, !dbg !1785
  switch i32 %conv40, label %sw.default [
    i32 21, label %sw.bb41
    i32 10, label %sw.bb41
    i32 9, label %sw.bb42
  ], !dbg !1786

sw.bb41:                                          ; preds = %if.end36, %if.end36
  br label %sw.epilog48, !dbg !1787

sw.bb42:                                          ; preds = %if.end36
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !1789
  %add.ptr43 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !1791
  %48 = load i8*, i8** %end.addr, align 8, !dbg !1792
  %cmp44 = icmp ne i8* %add.ptr43, %48, !dbg !1793
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !1794

if.then46:                                        ; preds = %sw.bb42
  br label %sw.epilog48, !dbg !1795

if.end47:                                         ; preds = %sw.bb42
  br label %sw.default, !dbg !1796

sw.default:                                       ; preds = %if.end36, %if.end47
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !1798
  %50 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1799
  store i8* %49, i8** %50, align 8, !dbg !1800
  store i32 15, i32* %retval, align 4, !dbg !1801
  br label %return, !dbg !1801

sw.epilog48:                                      ; preds = %if.then46, %sw.bb41
  br label %for.cond, !dbg !1802

for.end:                                          ; preds = %if.then35
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !1804
  %52 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1805
  store i8* %51, i8** %52, align 8, !dbg !1806
  store i32 15, i32* %retval, align 4, !dbg !1807
  br label %return, !dbg !1807

sw.bb49:                                          ; preds = %if.end
  %53 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1808
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !1809
  %add.ptr50 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !1810
  %55 = load i8*, i8** %end.addr, align 8, !dbg !1811
  %56 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1812
  %call51 = call i32 @normal_scanPercent(%struct.encoding* %53, i8* %add.ptr50, i8* %55, i8** %56), !dbg !1813
  store i32 %call51, i32* %retval, align 4, !dbg !1814
  br label %return, !dbg !1814

sw.bb52:                                          ; preds = %if.end
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !1815
  %add.ptr53 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !1816
  %58 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1817
  store i8* %add.ptr53, i8** %58, align 8, !dbg !1818
  store i32 38, i32* %retval, align 4, !dbg !1819
  br label %return, !dbg !1819

sw.bb54:                                          ; preds = %if.end
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !1820
  %add.ptr55 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !1821
  %60 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1822
  store i8* %add.ptr55, i8** %60, align 8, !dbg !1823
  store i32 25, i32* %retval, align 4, !dbg !1824
  br label %return, !dbg !1824

sw.bb56:                                          ; preds = %if.end
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !1825
  %add.ptr57 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !1825
  store i8* %add.ptr57, i8** %ptr.addr, align 8, !dbg !1825
  %62 = load i8*, i8** %end.addr, align 8, !dbg !1826
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !1826
  %sub.ptr.lhs.cast58 = ptrtoint i8* %62 to i64, !dbg !1826
  %sub.ptr.rhs.cast59 = ptrtoint i8* %63 to i64, !dbg !1826
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59, !dbg !1826
  %cmp61 = icmp sge i64 %sub.ptr.sub60, 1, !dbg !1826
  br i1 %cmp61, label %if.end64, label %if.then63, !dbg !1828

if.then63:                                        ; preds = %sw.bb56
  store i32 -26, i32* %retval, align 4, !dbg !1829
  br label %return, !dbg !1829

if.end64:                                         ; preds = %sw.bb56
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !1830
  %65 = load i8, i8* %64, align 1, !dbg !1830
  %conv65 = sext i8 %65 to i32, !dbg !1830
  %cmp66 = icmp eq i32 %conv65, 93, !dbg !1830
  br i1 %cmp66, label %if.then68, label %if.end83, !dbg !1832

if.then68:                                        ; preds = %if.end64
  %66 = load i8*, i8** %end.addr, align 8, !dbg !1833
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !1833
  %sub.ptr.lhs.cast69 = ptrtoint i8* %66 to i64, !dbg !1833
  %sub.ptr.rhs.cast70 = ptrtoint i8* %67 to i64, !dbg !1833
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !1833
  %cmp72 = icmp sge i64 %sub.ptr.sub71, 2, !dbg !1833
  br i1 %cmp72, label %if.end75, label %if.then74, !dbg !1837

if.then74:                                        ; preds = %if.then68
  store i32 -1, i32* %retval, align 4, !dbg !1838
  br label %return, !dbg !1838

if.end75:                                         ; preds = %if.then68
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !1841
  %add.ptr76 = getelementptr inbounds i8, i8* %68, i64 1, !dbg !1841
  %69 = load i8, i8* %add.ptr76, align 1, !dbg !1841
  %conv77 = sext i8 %69 to i32, !dbg !1841
  %cmp78 = icmp eq i32 %conv77, 62, !dbg !1841
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !1843

if.then80:                                        ; preds = %if.end75
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !1844
  %add.ptr81 = getelementptr inbounds i8, i8* %70, i64 2, !dbg !1846
  %71 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1847
  store i8* %add.ptr81, i8** %71, align 8, !dbg !1848
  store i32 34, i32* %retval, align 4, !dbg !1849
  br label %return, !dbg !1849

if.end82:                                         ; preds = %if.end75
  br label %if.end83, !dbg !1850

if.end83:                                         ; preds = %if.end82, %if.end64
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !1851
  %73 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1852
  store i8* %72, i8** %73, align 8, !dbg !1853
  store i32 26, i32* %retval, align 4, !dbg !1854
  br label %return, !dbg !1854

sw.bb84:                                          ; preds = %if.end
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !1855
  %add.ptr85 = getelementptr inbounds i8, i8* %74, i64 1, !dbg !1856
  %75 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1857
  store i8* %add.ptr85, i8** %75, align 8, !dbg !1858
  store i32 23, i32* %retval, align 4, !dbg !1859
  br label %return, !dbg !1859

sw.bb86:                                          ; preds = %if.end
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !1860
  %add.ptr87 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !1860
  store i8* %add.ptr87, i8** %ptr.addr, align 8, !dbg !1860
  %77 = load i8*, i8** %end.addr, align 8, !dbg !1861
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !1861
  %sub.ptr.lhs.cast88 = ptrtoint i8* %77 to i64, !dbg !1861
  %sub.ptr.rhs.cast89 = ptrtoint i8* %78 to i64, !dbg !1861
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89, !dbg !1861
  %cmp91 = icmp sge i64 %sub.ptr.sub90, 1, !dbg !1861
  br i1 %cmp91, label %if.end94, label %if.then93, !dbg !1863

if.then93:                                        ; preds = %sw.bb86
  store i32 -24, i32* %retval, align 4, !dbg !1864
  br label %return, !dbg !1864

if.end94:                                         ; preds = %sw.bb86
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !1865
  %80 = load i8, i8* %79, align 1, !dbg !1865
  %idxprom95 = zext i8 %80 to i64, !dbg !1865
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1865
  %82 = bitcast %struct.encoding* %81 to %struct.normal_encoding*, !dbg !1865
  %type96 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %82, i32 0, i32 1, !dbg !1865
  %arrayidx97 = getelementptr inbounds [256 x i8], [256 x i8]* %type96, i64 0, i64 %idxprom95, !dbg !1865
  %83 = load i8, i8* %arrayidx97, align 1, !dbg !1865
  %conv98 = zext i8 %83 to i32, !dbg !1865
  switch i32 %conv98, label %sw.epilog106 [
    i32 33, label %sw.bb99
    i32 15, label %sw.bb101
    i32 34, label %sw.bb103
    i32 9, label %sw.bb105
    i32 10, label %sw.bb105
    i32 21, label %sw.bb105
    i32 11, label %sw.bb105
    i32 35, label %sw.bb105
    i32 36, label %sw.bb105
    i32 32, label %sw.bb105
  ], !dbg !1866

sw.bb99:                                          ; preds = %if.end94
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !1867
  %add.ptr100 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !1869
  %85 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1870
  store i8* %add.ptr100, i8** %85, align 8, !dbg !1871
  store i32 36, i32* %retval, align 4, !dbg !1872
  br label %return, !dbg !1872

sw.bb101:                                         ; preds = %if.end94
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !1873
  %add.ptr102 = getelementptr inbounds i8, i8* %86, i64 1, !dbg !1874
  %87 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1875
  store i8* %add.ptr102, i8** %87, align 8, !dbg !1876
  store i32 35, i32* %retval, align 4, !dbg !1877
  br label %return, !dbg !1877

sw.bb103:                                         ; preds = %if.end94
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !1878
  %add.ptr104 = getelementptr inbounds i8, i8* %88, i64 1, !dbg !1879
  %89 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1880
  store i8* %add.ptr104, i8** %89, align 8, !dbg !1881
  store i32 37, i32* %retval, align 4, !dbg !1882
  br label %return, !dbg !1882

sw.bb105:                                         ; preds = %if.end94, %if.end94, %if.end94, %if.end94, %if.end94, %if.end94, %if.end94
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !1883
  %91 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1884
  store i8* %90, i8** %91, align 8, !dbg !1885
  store i32 24, i32* %retval, align 4, !dbg !1886
  br label %return, !dbg !1886

sw.epilog106:                                     ; preds = %if.end94
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !1887
  %93 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1888
  store i8* %92, i8** %93, align 8, !dbg !1889
  store i32 0, i32* %retval, align 4, !dbg !1890
  br label %return, !dbg !1890

sw.bb107:                                         ; preds = %if.end
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !1891
  %add.ptr108 = getelementptr inbounds i8, i8* %94, i64 1, !dbg !1892
  %95 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1893
  store i8* %add.ptr108, i8** %95, align 8, !dbg !1894
  store i32 21, i32* %retval, align 4, !dbg !1895
  br label %return, !dbg !1895

sw.bb109:                                         ; preds = %if.end
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !1896
  %add.ptr110 = getelementptr inbounds i8, i8* %96, i64 1, !dbg !1897
  %97 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1898
  store i8* %add.ptr110, i8** %97, align 8, !dbg !1899
  store i32 17, i32* %retval, align 4, !dbg !1900
  br label %return, !dbg !1900

sw.bb111:                                         ; preds = %if.end
  %98 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1901
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !1902
  %add.ptr112 = getelementptr inbounds i8, i8* %99, i64 1, !dbg !1903
  %100 = load i8*, i8** %end.addr, align 8, !dbg !1904
  %101 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1905
  %call113 = call i32 @normal_scanPoundName(%struct.encoding* %98, i8* %add.ptr112, i8* %100, i8** %101), !dbg !1906
  store i32 %call113, i32* %retval, align 4, !dbg !1907
  br label %return, !dbg !1907

sw.bb114:                                         ; preds = %if.end
  %102 = load i8*, i8** %end.addr, align 8, !dbg !1908
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !1908
  %sub.ptr.lhs.cast115 = ptrtoint i8* %102 to i64, !dbg !1908
  %sub.ptr.rhs.cast116 = ptrtoint i8* %103 to i64, !dbg !1908
  %sub.ptr.sub117 = sub i64 %sub.ptr.lhs.cast115, %sub.ptr.rhs.cast116, !dbg !1908
  %cmp118 = icmp slt i64 %sub.ptr.sub117, 2, !dbg !1908
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !1910

if.then120:                                       ; preds = %sw.bb114
  store i32 -2, i32* %retval, align 4, !dbg !1911
  br label %return, !dbg !1911

if.end121:                                        ; preds = %sw.bb114
  %104 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1913
  %105 = bitcast %struct.encoding* %104 to %struct.normal_encoding*, !dbg !1913
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %105, i32 0, i32 5, !dbg !1913
  %106 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !1913
  %107 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1913
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !1913
  %call122 = call i32 %106(%struct.encoding* %107, i8* %108), !dbg !1913
  %tobool = icmp ne i32 %call122, 0, !dbg !1913
  br i1 %tobool, label %if.then123, label %if.end125, !dbg !1913

if.then123:                                       ; preds = %if.end121
  %109 = load i8*, i8** %ptr.addr, align 8, !dbg !1916
  %add.ptr124 = getelementptr inbounds i8, i8* %109, i64 2, !dbg !1916
  store i8* %add.ptr124, i8** %ptr.addr, align 8, !dbg !1916
  store i32 18, i32* %tok, align 4, !dbg !1916
  br label %sw.epilog173, !dbg !1916

if.end125:                                        ; preds = %if.end121
  %110 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1919
  %111 = bitcast %struct.encoding* %110 to %struct.normal_encoding*, !dbg !1919
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %111, i32 0, i32 2, !dbg !1919
  %112 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !1919
  %113 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1919
  %114 = load i8*, i8** %ptr.addr, align 8, !dbg !1919
  %call126 = call i32 %112(%struct.encoding* %113, i8* %114), !dbg !1919
  %tobool127 = icmp ne i32 %call126, 0, !dbg !1919
  br i1 %tobool127, label %if.then128, label %if.end130, !dbg !1919

if.then128:                                       ; preds = %if.end125
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !1922
  %add.ptr129 = getelementptr inbounds i8, i8* %115, i64 2, !dbg !1922
  store i8* %add.ptr129, i8** %ptr.addr, align 8, !dbg !1922
  store i32 19, i32* %tok, align 4, !dbg !1922
  br label %sw.epilog173, !dbg !1922

if.end130:                                        ; preds = %if.end125
  %116 = load i8*, i8** %ptr.addr, align 8, !dbg !1925
  %117 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1925
  store i8* %116, i8** %117, align 8, !dbg !1925
  store i32 0, i32* %retval, align 4, !dbg !1925
  br label %return, !dbg !1925

sw.bb131:                                         ; preds = %if.end
  %118 = load i8*, i8** %end.addr, align 8, !dbg !1927
  %119 = load i8*, i8** %ptr.addr, align 8, !dbg !1927
  %sub.ptr.lhs.cast132 = ptrtoint i8* %118 to i64, !dbg !1927
  %sub.ptr.rhs.cast133 = ptrtoint i8* %119 to i64, !dbg !1927
  %sub.ptr.sub134 = sub i64 %sub.ptr.lhs.cast132, %sub.ptr.rhs.cast133, !dbg !1927
  %cmp135 = icmp slt i64 %sub.ptr.sub134, 3, !dbg !1927
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !1927

if.then137:                                       ; preds = %sw.bb131
  store i32 -2, i32* %retval, align 4, !dbg !1930
  br label %return, !dbg !1930

if.end138:                                        ; preds = %sw.bb131
  %120 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1932
  %121 = bitcast %struct.encoding* %120 to %struct.normal_encoding*, !dbg !1932
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %121, i32 0, i32 6, !dbg !1932
  %122 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !1932
  %123 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1932
  %124 = load i8*, i8** %ptr.addr, align 8, !dbg !1932
  %call139 = call i32 %122(%struct.encoding* %123, i8* %124), !dbg !1932
  %tobool140 = icmp ne i32 %call139, 0, !dbg !1932
  br i1 %tobool140, label %if.then141, label %if.end143, !dbg !1932

if.then141:                                       ; preds = %if.end138
  %125 = load i8*, i8** %ptr.addr, align 8, !dbg !1935
  %add.ptr142 = getelementptr inbounds i8, i8* %125, i64 3, !dbg !1935
  store i8* %add.ptr142, i8** %ptr.addr, align 8, !dbg !1935
  store i32 18, i32* %tok, align 4, !dbg !1935
  br label %sw.epilog173, !dbg !1935

if.end143:                                        ; preds = %if.end138
  %126 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1938
  %127 = bitcast %struct.encoding* %126 to %struct.normal_encoding*, !dbg !1938
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %127, i32 0, i32 3, !dbg !1938
  %128 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !1938
  %129 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1938
  %130 = load i8*, i8** %ptr.addr, align 8, !dbg !1938
  %call144 = call i32 %128(%struct.encoding* %129, i8* %130), !dbg !1938
  %tobool145 = icmp ne i32 %call144, 0, !dbg !1938
  br i1 %tobool145, label %if.then146, label %if.end148, !dbg !1938

if.then146:                                       ; preds = %if.end143
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !1941
  %add.ptr147 = getelementptr inbounds i8, i8* %131, i64 3, !dbg !1941
  store i8* %add.ptr147, i8** %ptr.addr, align 8, !dbg !1941
  store i32 19, i32* %tok, align 4, !dbg !1941
  br label %sw.epilog173, !dbg !1941

if.end148:                                        ; preds = %if.end143
  %132 = load i8*, i8** %ptr.addr, align 8, !dbg !1944
  %133 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1944
  store i8* %132, i8** %133, align 8, !dbg !1944
  store i32 0, i32* %retval, align 4, !dbg !1944
  br label %return, !dbg !1944

sw.bb149:                                         ; preds = %if.end
  %134 = load i8*, i8** %end.addr, align 8, !dbg !1946
  %135 = load i8*, i8** %ptr.addr, align 8, !dbg !1946
  %sub.ptr.lhs.cast150 = ptrtoint i8* %134 to i64, !dbg !1946
  %sub.ptr.rhs.cast151 = ptrtoint i8* %135 to i64, !dbg !1946
  %sub.ptr.sub152 = sub i64 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast151, !dbg !1946
  %cmp153 = icmp slt i64 %sub.ptr.sub152, 4, !dbg !1946
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !1946

if.then155:                                       ; preds = %sw.bb149
  store i32 -2, i32* %retval, align 4, !dbg !1949
  br label %return, !dbg !1949

if.end156:                                        ; preds = %sw.bb149
  %136 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1951
  %137 = bitcast %struct.encoding* %136 to %struct.normal_encoding*, !dbg !1951
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %137, i32 0, i32 7, !dbg !1951
  %138 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !1951
  %139 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1951
  %140 = load i8*, i8** %ptr.addr, align 8, !dbg !1951
  %call157 = call i32 %138(%struct.encoding* %139, i8* %140), !dbg !1951
  %tobool158 = icmp ne i32 %call157, 0, !dbg !1951
  br i1 %tobool158, label %if.then159, label %if.end161, !dbg !1951

if.then159:                                       ; preds = %if.end156
  %141 = load i8*, i8** %ptr.addr, align 8, !dbg !1954
  %add.ptr160 = getelementptr inbounds i8, i8* %141, i64 4, !dbg !1954
  store i8* %add.ptr160, i8** %ptr.addr, align 8, !dbg !1954
  store i32 18, i32* %tok, align 4, !dbg !1954
  br label %sw.epilog173, !dbg !1954

if.end161:                                        ; preds = %if.end156
  %142 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1957
  %143 = bitcast %struct.encoding* %142 to %struct.normal_encoding*, !dbg !1957
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %143, i32 0, i32 4, !dbg !1957
  %144 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !1957
  %145 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1957
  %146 = load i8*, i8** %ptr.addr, align 8, !dbg !1957
  %call162 = call i32 %144(%struct.encoding* %145, i8* %146), !dbg !1957
  %tobool163 = icmp ne i32 %call162, 0, !dbg !1957
  br i1 %tobool163, label %if.then164, label %if.end166, !dbg !1957

if.then164:                                       ; preds = %if.end161
  %147 = load i8*, i8** %ptr.addr, align 8, !dbg !1960
  %add.ptr165 = getelementptr inbounds i8, i8* %147, i64 4, !dbg !1960
  store i8* %add.ptr165, i8** %ptr.addr, align 8, !dbg !1960
  store i32 19, i32* %tok, align 4, !dbg !1960
  br label %sw.epilog173, !dbg !1960

if.end166:                                        ; preds = %if.end161
  %148 = load i8*, i8** %ptr.addr, align 8, !dbg !1963
  %149 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1963
  store i8* %148, i8** %149, align 8, !dbg !1963
  store i32 0, i32* %retval, align 4, !dbg !1963
  br label %return, !dbg !1963

sw.bb167:                                         ; preds = %if.end, %if.end
  store i32 18, i32* %tok, align 4, !dbg !1965
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !1966
  %add.ptr168 = getelementptr inbounds i8, i8* %150, i64 1, !dbg !1966
  store i8* %add.ptr168, i8** %ptr.addr, align 8, !dbg !1966
  br label %sw.epilog173, !dbg !1967

sw.bb169:                                         ; preds = %if.end, %if.end, %if.end
  store i32 19, i32* %tok, align 4, !dbg !1968
  %151 = load i8*, i8** %ptr.addr, align 8, !dbg !1969
  %add.ptr170 = getelementptr inbounds i8, i8* %151, i64 1, !dbg !1969
  store i8* %add.ptr170, i8** %ptr.addr, align 8, !dbg !1969
  br label %sw.epilog173, !dbg !1970

sw.bb171:                                         ; preds = %if.end
  br label %sw.default172, !dbg !1971

sw.default172:                                    ; preds = %if.end, %sw.bb171
  %152 = load i8*, i8** %ptr.addr, align 8, !dbg !1973
  %153 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1974
  store i8* %152, i8** %153, align 8, !dbg !1975
  store i32 0, i32* %retval, align 4, !dbg !1976
  br label %return, !dbg !1976

sw.epilog173:                                     ; preds = %sw.bb169, %sw.bb167, %if.then164, %if.then159, %if.then146, %if.then141, %if.then128, %if.then123
  br label %while.cond, !dbg !1977

while.cond:                                       ; preds = %sw.epilog248, %sw.epilog173
  %154 = load i8*, i8** %end.addr, align 8, !dbg !1978
  %155 = load i8*, i8** %ptr.addr, align 8, !dbg !1978
  %sub.ptr.lhs.cast174 = ptrtoint i8* %154 to i64, !dbg !1978
  %sub.ptr.rhs.cast175 = ptrtoint i8* %155 to i64, !dbg !1978
  %sub.ptr.sub176 = sub i64 %sub.ptr.lhs.cast174, %sub.ptr.rhs.cast175, !dbg !1978
  %cmp177 = icmp sge i64 %sub.ptr.sub176, 1, !dbg !1978
  br i1 %cmp177, label %while.body, label %while.end, !dbg !1980

while.body:                                       ; preds = %while.cond
  %156 = load i8*, i8** %ptr.addr, align 8, !dbg !1981
  %157 = load i8, i8* %156, align 1, !dbg !1981
  %idxprom179 = zext i8 %157 to i64, !dbg !1981
  %158 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1981
  %159 = bitcast %struct.encoding* %158 to %struct.normal_encoding*, !dbg !1981
  %type180 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %159, i32 0, i32 1, !dbg !1981
  %arrayidx181 = getelementptr inbounds [256 x i8], [256 x i8]* %type180, i64 0, i64 %idxprom179, !dbg !1981
  %160 = load i8, i8* %arrayidx181, align 1, !dbg !1981
  %conv182 = zext i8 %160 to i32, !dbg !1981
  switch i32 %conv182, label %sw.default247 [
    i32 29, label %sw.bb183
    i32 22, label %sw.bb184
    i32 24, label %sw.bb184
    i32 25, label %sw.bb184
    i32 26, label %sw.bb184
    i32 27, label %sw.bb184
    i32 5, label %sw.bb186
    i32 6, label %sw.bb200
    i32 7, label %sw.bb214
    i32 11, label %sw.bb228
    i32 32, label %sw.bb228
    i32 35, label %sw.bb228
    i32 36, label %sw.bb228
    i32 20, label %sw.bb228
    i32 30, label %sw.bb228
    i32 21, label %sw.bb228
    i32 9, label %sw.bb228
    i32 10, label %sw.bb228
    i32 34, label %sw.bb229
    i32 33, label %sw.bb235
    i32 15, label %sw.bb241
  ], !dbg !1983

sw.bb183:                                         ; preds = %while.body
  %161 = load i8*, i8** %ptr.addr, align 8, !dbg !1984
  %162 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1984
  store i8* %161, i8** %162, align 8, !dbg !1984
  store i32 0, i32* %retval, align 4, !dbg !1984
  br label %return, !dbg !1984

sw.bb184:                                         ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !1988
  %add.ptr185 = getelementptr inbounds i8, i8* %163, i64 1, !dbg !1988
  store i8* %add.ptr185, i8** %ptr.addr, align 8, !dbg !1988
  br label %sw.epilog248, !dbg !1988

sw.bb186:                                         ; preds = %while.body
  %164 = load i8*, i8** %end.addr, align 8, !dbg !1990
  %165 = load i8*, i8** %ptr.addr, align 8, !dbg !1990
  %sub.ptr.lhs.cast187 = ptrtoint i8* %164 to i64, !dbg !1990
  %sub.ptr.rhs.cast188 = ptrtoint i8* %165 to i64, !dbg !1990
  %sub.ptr.sub189 = sub i64 %sub.ptr.lhs.cast187, %sub.ptr.rhs.cast188, !dbg !1990
  %cmp190 = icmp slt i64 %sub.ptr.sub189, 2, !dbg !1990
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !1990

if.then192:                                       ; preds = %sw.bb186
  store i32 -2, i32* %retval, align 4, !dbg !1993
  br label %return, !dbg !1993

if.end193:                                        ; preds = %sw.bb186
  %166 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1995
  %167 = bitcast %struct.encoding* %166 to %struct.normal_encoding*, !dbg !1995
  %isName2194 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %167, i32 0, i32 2, !dbg !1995
  %168 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2194, align 8, !dbg !1995
  %169 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !1995
  %170 = load i8*, i8** %ptr.addr, align 8, !dbg !1995
  %call195 = call i32 %168(%struct.encoding* %169, i8* %170), !dbg !1995
  %tobool196 = icmp ne i32 %call195, 0, !dbg !1995
  br i1 %tobool196, label %if.end198, label %if.then197, !dbg !1995

if.then197:                                       ; preds = %if.end193
  %171 = load i8*, i8** %ptr.addr, align 8, !dbg !1998
  %172 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !1998
  store i8* %171, i8** %172, align 8, !dbg !1998
  store i32 0, i32* %retval, align 4, !dbg !1998
  br label %return, !dbg !1998

if.end198:                                        ; preds = %if.end193
  %173 = load i8*, i8** %ptr.addr, align 8, !dbg !2001
  %add.ptr199 = getelementptr inbounds i8, i8* %173, i64 2, !dbg !2001
  store i8* %add.ptr199, i8** %ptr.addr, align 8, !dbg !2001
  br label %sw.epilog248, !dbg !2001

sw.bb200:                                         ; preds = %while.body
  %174 = load i8*, i8** %end.addr, align 8, !dbg !2003
  %175 = load i8*, i8** %ptr.addr, align 8, !dbg !2003
  %sub.ptr.lhs.cast201 = ptrtoint i8* %174 to i64, !dbg !2003
  %sub.ptr.rhs.cast202 = ptrtoint i8* %175 to i64, !dbg !2003
  %sub.ptr.sub203 = sub i64 %sub.ptr.lhs.cast201, %sub.ptr.rhs.cast202, !dbg !2003
  %cmp204 = icmp slt i64 %sub.ptr.sub203, 3, !dbg !2003
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !2003

if.then206:                                       ; preds = %sw.bb200
  store i32 -2, i32* %retval, align 4, !dbg !2006
  br label %return, !dbg !2006

if.end207:                                        ; preds = %sw.bb200
  %176 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2008
  %177 = bitcast %struct.encoding* %176 to %struct.normal_encoding*, !dbg !2008
  %isName3208 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %177, i32 0, i32 3, !dbg !2008
  %178 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3208, align 8, !dbg !2008
  %179 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2008
  %180 = load i8*, i8** %ptr.addr, align 8, !dbg !2008
  %call209 = call i32 %178(%struct.encoding* %179, i8* %180), !dbg !2008
  %tobool210 = icmp ne i32 %call209, 0, !dbg !2008
  br i1 %tobool210, label %if.end212, label %if.then211, !dbg !2008

if.then211:                                       ; preds = %if.end207
  %181 = load i8*, i8** %ptr.addr, align 8, !dbg !2011
  %182 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2011
  store i8* %181, i8** %182, align 8, !dbg !2011
  store i32 0, i32* %retval, align 4, !dbg !2011
  br label %return, !dbg !2011

if.end212:                                        ; preds = %if.end207
  %183 = load i8*, i8** %ptr.addr, align 8, !dbg !2014
  %add.ptr213 = getelementptr inbounds i8, i8* %183, i64 3, !dbg !2014
  store i8* %add.ptr213, i8** %ptr.addr, align 8, !dbg !2014
  br label %sw.epilog248, !dbg !2014

sw.bb214:                                         ; preds = %while.body
  %184 = load i8*, i8** %end.addr, align 8, !dbg !2016
  %185 = load i8*, i8** %ptr.addr, align 8, !dbg !2016
  %sub.ptr.lhs.cast215 = ptrtoint i8* %184 to i64, !dbg !2016
  %sub.ptr.rhs.cast216 = ptrtoint i8* %185 to i64, !dbg !2016
  %sub.ptr.sub217 = sub i64 %sub.ptr.lhs.cast215, %sub.ptr.rhs.cast216, !dbg !2016
  %cmp218 = icmp slt i64 %sub.ptr.sub217, 4, !dbg !2016
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !2016

if.then220:                                       ; preds = %sw.bb214
  store i32 -2, i32* %retval, align 4, !dbg !2019
  br label %return, !dbg !2019

if.end221:                                        ; preds = %sw.bb214
  %186 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2021
  %187 = bitcast %struct.encoding* %186 to %struct.normal_encoding*, !dbg !2021
  %isName4222 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %187, i32 0, i32 4, !dbg !2021
  %188 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4222, align 8, !dbg !2021
  %189 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2021
  %190 = load i8*, i8** %ptr.addr, align 8, !dbg !2021
  %call223 = call i32 %188(%struct.encoding* %189, i8* %190), !dbg !2021
  %tobool224 = icmp ne i32 %call223, 0, !dbg !2021
  br i1 %tobool224, label %if.end226, label %if.then225, !dbg !2021

if.then225:                                       ; preds = %if.end221
  %191 = load i8*, i8** %ptr.addr, align 8, !dbg !2024
  %192 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2024
  store i8* %191, i8** %192, align 8, !dbg !2024
  store i32 0, i32* %retval, align 4, !dbg !2024
  br label %return, !dbg !2024

if.end226:                                        ; preds = %if.end221
  %193 = load i8*, i8** %ptr.addr, align 8, !dbg !2027
  %add.ptr227 = getelementptr inbounds i8, i8* %193, i64 4, !dbg !2027
  store i8* %add.ptr227, i8** %ptr.addr, align 8, !dbg !2027
  br label %sw.epilog248, !dbg !2027

sw.bb228:                                         ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %194 = load i8*, i8** %ptr.addr, align 8, !dbg !2029
  %195 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2030
  store i8* %194, i8** %195, align 8, !dbg !2031
  %196 = load i32, i32* %tok, align 4, !dbg !2032
  store i32 %196, i32* %retval, align 4, !dbg !2033
  br label %return, !dbg !2033

sw.bb229:                                         ; preds = %while.body
  %197 = load i32, i32* %tok, align 4, !dbg !2034
  %cmp230 = icmp eq i32 %197, 19, !dbg !2036
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !2037

if.then232:                                       ; preds = %sw.bb229
  %198 = load i8*, i8** %ptr.addr, align 8, !dbg !2038
  %199 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2040
  store i8* %198, i8** %199, align 8, !dbg !2041
  store i32 0, i32* %retval, align 4, !dbg !2042
  br label %return, !dbg !2042

if.end233:                                        ; preds = %sw.bb229
  %200 = load i8*, i8** %ptr.addr, align 8, !dbg !2043
  %add.ptr234 = getelementptr inbounds i8, i8* %200, i64 1, !dbg !2044
  %201 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2045
  store i8* %add.ptr234, i8** %201, align 8, !dbg !2046
  store i32 32, i32* %retval, align 4, !dbg !2047
  br label %return, !dbg !2047

sw.bb235:                                         ; preds = %while.body
  %202 = load i32, i32* %tok, align 4, !dbg !2048
  %cmp236 = icmp eq i32 %202, 19, !dbg !2050
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !2051

if.then238:                                       ; preds = %sw.bb235
  %203 = load i8*, i8** %ptr.addr, align 8, !dbg !2052
  %204 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2054
  store i8* %203, i8** %204, align 8, !dbg !2055
  store i32 0, i32* %retval, align 4, !dbg !2056
  br label %return, !dbg !2056

if.end239:                                        ; preds = %sw.bb235
  %205 = load i8*, i8** %ptr.addr, align 8, !dbg !2057
  %add.ptr240 = getelementptr inbounds i8, i8* %205, i64 1, !dbg !2058
  %206 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2059
  store i8* %add.ptr240, i8** %206, align 8, !dbg !2060
  store i32 31, i32* %retval, align 4, !dbg !2061
  br label %return, !dbg !2061

sw.bb241:                                         ; preds = %while.body
  %207 = load i32, i32* %tok, align 4, !dbg !2062
  %cmp242 = icmp eq i32 %207, 19, !dbg !2064
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !2065

if.then244:                                       ; preds = %sw.bb241
  %208 = load i8*, i8** %ptr.addr, align 8, !dbg !2066
  %209 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2068
  store i8* %208, i8** %209, align 8, !dbg !2069
  store i32 0, i32* %retval, align 4, !dbg !2070
  br label %return, !dbg !2070

if.end245:                                        ; preds = %sw.bb241
  %210 = load i8*, i8** %ptr.addr, align 8, !dbg !2071
  %add.ptr246 = getelementptr inbounds i8, i8* %210, i64 1, !dbg !2072
  %211 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2073
  store i8* %add.ptr246, i8** %211, align 8, !dbg !2074
  store i32 30, i32* %retval, align 4, !dbg !2075
  br label %return, !dbg !2075

sw.default247:                                    ; preds = %while.body
  %212 = load i8*, i8** %ptr.addr, align 8, !dbg !2076
  %213 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2077
  store i8* %212, i8** %213, align 8, !dbg !2078
  store i32 0, i32* %retval, align 4, !dbg !2079
  br label %return, !dbg !2079

sw.epilog248:                                     ; preds = %if.end226, %if.end212, %if.end198, %sw.bb184
  br label %while.cond, !dbg !2080

while.end:                                        ; preds = %while.cond
  %214 = load i32, i32* %tok, align 4, !dbg !2082
  %sub = sub nsw i32 0, %214, !dbg !2083
  store i32 %sub, i32* %retval, align 4, !dbg !2084
  br label %return, !dbg !2084

return:                                           ; preds = %while.end, %sw.default247, %if.end245, %if.then244, %if.end239, %if.then238, %if.end233, %if.then232, %sw.bb228, %if.then225, %if.then220, %if.then211, %if.then206, %if.then197, %if.then192, %sw.bb183, %sw.default172, %if.end166, %if.then155, %if.end148, %if.then137, %if.end130, %if.then120, %sw.bb111, %sw.bb109, %sw.bb107, %sw.epilog106, %sw.bb105, %sw.bb103, %sw.bb101, %sw.bb99, %if.then93, %sw.bb84, %if.end83, %if.then80, %if.then74, %if.then63, %sw.bb54, %sw.bb52, %sw.bb49, %for.end, %sw.default, %if.then26, %sw.epilog, %sw.bb20, %sw.bb17, %sw.bb14, %if.then8, %sw.bb1, %sw.bb, %if.then
  %215 = load i32, i32* %retval, align 4, !dbg !2085
  ret i32 %215, !dbg !2085
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_contentTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !258 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2086, metadata !444), !dbg !2087
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2088, metadata !444), !dbg !2089
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2090, metadata !444), !dbg !2091
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !2092, metadata !444), !dbg !2093
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !2094
  %1 = load i8*, i8** %end.addr, align 8, !dbg !2096
  %cmp = icmp uge i8* %0, %1, !dbg !2097
  br i1 %cmp, label %if.then, label %if.end, !dbg !2098

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !2099
  br label %return, !dbg !2099

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !2100
  %3 = load i8, i8* %2, align 1, !dbg !2100
  %idxprom = zext i8 %3 to i64, !dbg !2100
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2100
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !2100
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !2100
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2100
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2100
  %conv = zext i8 %6 to i32, !dbg !2100
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 9, label %sw.bb4
    i32 10, label %sw.bb19
    i32 4, label %sw.bb21
    i32 5, label %sw.bb49
    i32 6, label %sw.bb61
    i32 7, label %sw.bb74
    i32 0, label %sw.bb87
    i32 1, label %sw.bb87
    i32 8, label %sw.bb87
  ], !dbg !2101

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2102
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !2104
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 1, !dbg !2105
  %9 = load i8*, i8** %end.addr, align 8, !dbg !2106
  %10 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2107
  %call = call i32 @normal_scanLt(%struct.encoding* %7, i8* %add.ptr, i8* %9, i8** %10), !dbg !2108
  store i32 %call, i32* %retval, align 4, !dbg !2109
  br label %return, !dbg !2109

sw.bb1:                                           ; preds = %if.end
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2110
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !2111
  %add.ptr2 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !2112
  %13 = load i8*, i8** %end.addr, align 8, !dbg !2113
  %14 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2114
  %call3 = call i32 @normal_scanRef(%struct.encoding* %11, i8* %add.ptr2, i8* %13, i8** %14), !dbg !2115
  store i32 %call3, i32* %retval, align 4, !dbg !2116
  br label %return, !dbg !2116

sw.bb4:                                           ; preds = %if.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !2117
  %add.ptr5 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !2117
  store i8* %add.ptr5, i8** %ptr.addr, align 8, !dbg !2117
  %16 = load i8*, i8** %end.addr, align 8, !dbg !2118
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !2118
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !2118
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64, !dbg !2118
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2118
  %cmp6 = icmp sge i64 %sub.ptr.sub, 1, !dbg !2118
  br i1 %cmp6, label %if.end9, label %if.then8, !dbg !2120

if.then8:                                         ; preds = %sw.bb4
  store i32 -3, i32* %retval, align 4, !dbg !2121
  br label %return, !dbg !2121

if.end9:                                          ; preds = %sw.bb4
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !2122
  %19 = load i8, i8* %18, align 1, !dbg !2122
  %idxprom10 = zext i8 %19 to i64, !dbg !2122
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2122
  %21 = bitcast %struct.encoding* %20 to %struct.normal_encoding*, !dbg !2122
  %type11 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %21, i32 0, i32 1, !dbg !2122
  %arrayidx12 = getelementptr inbounds [256 x i8], [256 x i8]* %type11, i64 0, i64 %idxprom10, !dbg !2122
  %22 = load i8, i8* %arrayidx12, align 1, !dbg !2122
  %conv13 = zext i8 %22 to i32, !dbg !2122
  %cmp14 = icmp eq i32 %conv13, 10, !dbg !2124
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !2125

if.then16:                                        ; preds = %if.end9
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !2126
  %add.ptr17 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !2126
  store i8* %add.ptr17, i8** %ptr.addr, align 8, !dbg !2126
  br label %if.end18, !dbg !2127

if.end18:                                         ; preds = %if.then16, %if.end9
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !2128
  %25 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2129
  store i8* %24, i8** %25, align 8, !dbg !2130
  store i32 7, i32* %retval, align 4, !dbg !2131
  br label %return, !dbg !2131

sw.bb19:                                          ; preds = %if.end
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !2132
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !2133
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2134
  store i8* %add.ptr20, i8** %27, align 8, !dbg !2135
  store i32 7, i32* %retval, align 4, !dbg !2136
  br label %return, !dbg !2136

sw.bb21:                                          ; preds = %if.end
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !2137
  %add.ptr22 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !2137
  store i8* %add.ptr22, i8** %ptr.addr, align 8, !dbg !2137
  %29 = load i8*, i8** %end.addr, align 8, !dbg !2138
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !2138
  %sub.ptr.lhs.cast23 = ptrtoint i8* %29 to i64, !dbg !2138
  %sub.ptr.rhs.cast24 = ptrtoint i8* %30 to i64, !dbg !2138
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !2138
  %cmp26 = icmp sge i64 %sub.ptr.sub25, 1, !dbg !2138
  br i1 %cmp26, label %if.end29, label %if.then28, !dbg !2140

if.then28:                                        ; preds = %sw.bb21
  store i32 -5, i32* %retval, align 4, !dbg !2141
  br label %return, !dbg !2141

if.end29:                                         ; preds = %sw.bb21
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !2142
  %32 = load i8, i8* %31, align 1, !dbg !2142
  %conv30 = sext i8 %32 to i32, !dbg !2142
  %cmp31 = icmp eq i32 %conv30, 93, !dbg !2142
  br i1 %cmp31, label %if.end34, label %if.then33, !dbg !2144

if.then33:                                        ; preds = %if.end29
  br label %sw.epilog, !dbg !2145

if.end34:                                         ; preds = %if.end29
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !2146
  %add.ptr35 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !2146
  store i8* %add.ptr35, i8** %ptr.addr, align 8, !dbg !2146
  %34 = load i8*, i8** %end.addr, align 8, !dbg !2147
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !2147
  %sub.ptr.lhs.cast36 = ptrtoint i8* %34 to i64, !dbg !2147
  %sub.ptr.rhs.cast37 = ptrtoint i8* %35 to i64, !dbg !2147
  %sub.ptr.sub38 = sub i64 %sub.ptr.lhs.cast36, %sub.ptr.rhs.cast37, !dbg !2147
  %cmp39 = icmp sge i64 %sub.ptr.sub38, 1, !dbg !2147
  br i1 %cmp39, label %if.end42, label %if.then41, !dbg !2149

if.then41:                                        ; preds = %if.end34
  store i32 -5, i32* %retval, align 4, !dbg !2150
  br label %return, !dbg !2150

if.end42:                                         ; preds = %if.end34
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !2151
  %37 = load i8, i8* %36, align 1, !dbg !2151
  %conv43 = sext i8 %37 to i32, !dbg !2151
  %cmp44 = icmp eq i32 %conv43, 62, !dbg !2151
  br i1 %cmp44, label %if.end48, label %if.then46, !dbg !2153

if.then46:                                        ; preds = %if.end42
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !2154
  %add.ptr47 = getelementptr inbounds i8, i8* %38, i64 -1, !dbg !2154
  store i8* %add.ptr47, i8** %ptr.addr, align 8, !dbg !2154
  br label %sw.epilog, !dbg !2156

if.end48:                                         ; preds = %if.end42
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !2157
  %40 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2158
  store i8* %39, i8** %40, align 8, !dbg !2159
  store i32 0, i32* %retval, align 4, !dbg !2160
  br label %return, !dbg !2160

sw.bb49:                                          ; preds = %if.end
  %41 = load i8*, i8** %end.addr, align 8, !dbg !2161
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !2161
  %sub.ptr.lhs.cast50 = ptrtoint i8* %41 to i64, !dbg !2161
  %sub.ptr.rhs.cast51 = ptrtoint i8* %42 to i64, !dbg !2161
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51, !dbg !2161
  %cmp53 = icmp slt i64 %sub.ptr.sub52, 2, !dbg !2161
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !2163

if.then55:                                        ; preds = %sw.bb49
  store i32 -2, i32* %retval, align 4, !dbg !2164
  br label %return, !dbg !2164

if.end56:                                         ; preds = %sw.bb49
  %43 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2166
  %44 = bitcast %struct.encoding* %43 to %struct.normal_encoding*, !dbg !2166
  %isInvalid2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %44, i32 0, i32 8, !dbg !2166
  %45 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid2, align 8, !dbg !2166
  %46 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2166
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !2166
  %call57 = call i32 %45(%struct.encoding* %46, i8* %47), !dbg !2166
  %tobool = icmp ne i32 %call57, 0, !dbg !2166
  br i1 %tobool, label %if.then58, label %if.end59, !dbg !2166

if.then58:                                        ; preds = %if.end56
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !2169
  %49 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2169
  store i8* %48, i8** %49, align 8, !dbg !2169
  store i32 0, i32* %retval, align 4, !dbg !2169
  br label %return, !dbg !2169

if.end59:                                         ; preds = %if.end56
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !2172
  %add.ptr60 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !2172
  store i8* %add.ptr60, i8** %ptr.addr, align 8, !dbg !2172
  br label %sw.epilog, !dbg !2172

sw.bb61:                                          ; preds = %if.end
  %51 = load i8*, i8** %end.addr, align 8, !dbg !2174
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !2174
  %sub.ptr.lhs.cast62 = ptrtoint i8* %51 to i64, !dbg !2174
  %sub.ptr.rhs.cast63 = ptrtoint i8* %52 to i64, !dbg !2174
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63, !dbg !2174
  %cmp65 = icmp slt i64 %sub.ptr.sub64, 3, !dbg !2174
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !2174

if.then67:                                        ; preds = %sw.bb61
  store i32 -2, i32* %retval, align 4, !dbg !2177
  br label %return, !dbg !2177

if.end68:                                         ; preds = %sw.bb61
  %53 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2179
  %54 = bitcast %struct.encoding* %53 to %struct.normal_encoding*, !dbg !2179
  %isInvalid3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %54, i32 0, i32 9, !dbg !2179
  %55 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3, align 8, !dbg !2179
  %56 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2179
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !2179
  %call69 = call i32 %55(%struct.encoding* %56, i8* %57), !dbg !2179
  %tobool70 = icmp ne i32 %call69, 0, !dbg !2179
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !2179

if.then71:                                        ; preds = %if.end68
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !2182
  %59 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2182
  store i8* %58, i8** %59, align 8, !dbg !2182
  store i32 0, i32* %retval, align 4, !dbg !2182
  br label %return, !dbg !2182

if.end72:                                         ; preds = %if.end68
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !2185
  %add.ptr73 = getelementptr inbounds i8, i8* %60, i64 3, !dbg !2185
  store i8* %add.ptr73, i8** %ptr.addr, align 8, !dbg !2185
  br label %sw.epilog, !dbg !2185

sw.bb74:                                          ; preds = %if.end
  %61 = load i8*, i8** %end.addr, align 8, !dbg !2187
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !2187
  %sub.ptr.lhs.cast75 = ptrtoint i8* %61 to i64, !dbg !2187
  %sub.ptr.rhs.cast76 = ptrtoint i8* %62 to i64, !dbg !2187
  %sub.ptr.sub77 = sub i64 %sub.ptr.lhs.cast75, %sub.ptr.rhs.cast76, !dbg !2187
  %cmp78 = icmp slt i64 %sub.ptr.sub77, 4, !dbg !2187
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !2187

if.then80:                                        ; preds = %sw.bb74
  store i32 -2, i32* %retval, align 4, !dbg !2190
  br label %return, !dbg !2190

if.end81:                                         ; preds = %sw.bb74
  %63 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2192
  %64 = bitcast %struct.encoding* %63 to %struct.normal_encoding*, !dbg !2192
  %isInvalid4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %64, i32 0, i32 10, !dbg !2192
  %65 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4, align 8, !dbg !2192
  %66 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2192
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !2192
  %call82 = call i32 %65(%struct.encoding* %66, i8* %67), !dbg !2192
  %tobool83 = icmp ne i32 %call82, 0, !dbg !2192
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !2192

if.then84:                                        ; preds = %if.end81
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !2195
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2195
  store i8* %68, i8** %69, align 8, !dbg !2195
  store i32 0, i32* %retval, align 4, !dbg !2195
  br label %return, !dbg !2195

if.end85:                                         ; preds = %if.end81
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !2198
  %add.ptr86 = getelementptr inbounds i8, i8* %70, i64 4, !dbg !2198
  store i8* %add.ptr86, i8** %ptr.addr, align 8, !dbg !2198
  br label %sw.epilog, !dbg !2198

sw.bb87:                                          ; preds = %if.end, %if.end, %if.end
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !2200
  %72 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2200
  store i8* %71, i8** %72, align 8, !dbg !2200
  store i32 0, i32* %retval, align 4, !dbg !2200
  br label %return, !dbg !2200

sw.default:                                       ; preds = %if.end
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !2202
  %add.ptr88 = getelementptr inbounds i8, i8* %73, i64 1, !dbg !2202
  store i8* %add.ptr88, i8** %ptr.addr, align 8, !dbg !2202
  br label %sw.epilog, !dbg !2203

sw.epilog:                                        ; preds = %sw.default, %if.end85, %if.end72, %if.end59, %if.then46, %if.then33
  br label %while.cond, !dbg !2204

while.cond:                                       ; preds = %sw.epilog169, %sw.epilog
  %74 = load i8*, i8** %end.addr, align 8, !dbg !2205
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !2205
  %sub.ptr.lhs.cast89 = ptrtoint i8* %74 to i64, !dbg !2205
  %sub.ptr.rhs.cast90 = ptrtoint i8* %75 to i64, !dbg !2205
  %sub.ptr.sub91 = sub i64 %sub.ptr.lhs.cast89, %sub.ptr.rhs.cast90, !dbg !2205
  %cmp92 = icmp sge i64 %sub.ptr.sub91, 1, !dbg !2205
  br i1 %cmp92, label %while.body, label %while.end, !dbg !2207

while.body:                                       ; preds = %while.cond
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !2208
  %77 = load i8, i8* %76, align 1, !dbg !2208
  %idxprom94 = zext i8 %77 to i64, !dbg !2208
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2208
  %79 = bitcast %struct.encoding* %78 to %struct.normal_encoding*, !dbg !2208
  %type95 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %79, i32 0, i32 1, !dbg !2208
  %arrayidx96 = getelementptr inbounds [256 x i8], [256 x i8]* %type95, i64 0, i64 %idxprom94, !dbg !2208
  %80 = load i8, i8* %arrayidx96, align 1, !dbg !2208
  %conv97 = zext i8 %80 to i32, !dbg !2208
  switch i32 %conv97, label %sw.default167 [
    i32 5, label %sw.bb98
    i32 6, label %sw.bb110
    i32 7, label %sw.bb123
    i32 4, label %sw.bb136
    i32 3, label %sw.bb166
    i32 2, label %sw.bb166
    i32 0, label %sw.bb166
    i32 1, label %sw.bb166
    i32 8, label %sw.bb166
    i32 9, label %sw.bb166
    i32 10, label %sw.bb166
  ], !dbg !2210

sw.bb98:                                          ; preds = %while.body
  %81 = load i8*, i8** %end.addr, align 8, !dbg !2211
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !2211
  %sub.ptr.lhs.cast99 = ptrtoint i8* %81 to i64, !dbg !2211
  %sub.ptr.rhs.cast100 = ptrtoint i8* %82 to i64, !dbg !2211
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100, !dbg !2211
  %cmp102 = icmp slt i64 %sub.ptr.sub101, 2, !dbg !2211
  br i1 %cmp102, label %if.then107, label %lor.lhs.false, !dbg !2211

lor.lhs.false:                                    ; preds = %sw.bb98
  %83 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2214
  %84 = bitcast %struct.encoding* %83 to %struct.normal_encoding*, !dbg !2214
  %isInvalid2104 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %84, i32 0, i32 8, !dbg !2214
  %85 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid2104, align 8, !dbg !2214
  %86 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2214
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !2214
  %call105 = call i32 %85(%struct.encoding* %86, i8* %87), !dbg !2214
  %tobool106 = icmp ne i32 %call105, 0, !dbg !2214
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !2214

if.then107:                                       ; preds = %lor.lhs.false, %sw.bb98
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !2216
  %89 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2216
  store i8* %88, i8** %89, align 8, !dbg !2216
  store i32 6, i32* %retval, align 4, !dbg !2216
  br label %return, !dbg !2216

if.end108:                                        ; preds = %lor.lhs.false
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !2219
  %add.ptr109 = getelementptr inbounds i8, i8* %90, i64 2, !dbg !2219
  store i8* %add.ptr109, i8** %ptr.addr, align 8, !dbg !2219
  br label %sw.epilog169, !dbg !2219

sw.bb110:                                         ; preds = %while.body
  %91 = load i8*, i8** %end.addr, align 8, !dbg !2221
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !2221
  %sub.ptr.lhs.cast111 = ptrtoint i8* %91 to i64, !dbg !2221
  %sub.ptr.rhs.cast112 = ptrtoint i8* %92 to i64, !dbg !2221
  %sub.ptr.sub113 = sub i64 %sub.ptr.lhs.cast111, %sub.ptr.rhs.cast112, !dbg !2221
  %cmp114 = icmp slt i64 %sub.ptr.sub113, 3, !dbg !2221
  br i1 %cmp114, label %if.then120, label %lor.lhs.false116, !dbg !2221

lor.lhs.false116:                                 ; preds = %sw.bb110
  %93 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2224
  %94 = bitcast %struct.encoding* %93 to %struct.normal_encoding*, !dbg !2224
  %isInvalid3117 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %94, i32 0, i32 9, !dbg !2224
  %95 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3117, align 8, !dbg !2224
  %96 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2224
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !2224
  %call118 = call i32 %95(%struct.encoding* %96, i8* %97), !dbg !2224
  %tobool119 = icmp ne i32 %call118, 0, !dbg !2224
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !2224

if.then120:                                       ; preds = %lor.lhs.false116, %sw.bb110
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !2226
  %99 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2226
  store i8* %98, i8** %99, align 8, !dbg !2226
  store i32 6, i32* %retval, align 4, !dbg !2226
  br label %return, !dbg !2226

if.end121:                                        ; preds = %lor.lhs.false116
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !2229
  %add.ptr122 = getelementptr inbounds i8, i8* %100, i64 3, !dbg !2229
  store i8* %add.ptr122, i8** %ptr.addr, align 8, !dbg !2229
  br label %sw.epilog169, !dbg !2229

sw.bb123:                                         ; preds = %while.body
  %101 = load i8*, i8** %end.addr, align 8, !dbg !2231
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !2231
  %sub.ptr.lhs.cast124 = ptrtoint i8* %101 to i64, !dbg !2231
  %sub.ptr.rhs.cast125 = ptrtoint i8* %102 to i64, !dbg !2231
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !2231
  %cmp127 = icmp slt i64 %sub.ptr.sub126, 4, !dbg !2231
  br i1 %cmp127, label %if.then133, label %lor.lhs.false129, !dbg !2231

lor.lhs.false129:                                 ; preds = %sw.bb123
  %103 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2234
  %104 = bitcast %struct.encoding* %103 to %struct.normal_encoding*, !dbg !2234
  %isInvalid4130 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %104, i32 0, i32 10, !dbg !2234
  %105 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4130, align 8, !dbg !2234
  %106 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2234
  %107 = load i8*, i8** %ptr.addr, align 8, !dbg !2234
  %call131 = call i32 %105(%struct.encoding* %106, i8* %107), !dbg !2234
  %tobool132 = icmp ne i32 %call131, 0, !dbg !2234
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !2234

if.then133:                                       ; preds = %lor.lhs.false129, %sw.bb123
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !2236
  %109 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2236
  store i8* %108, i8** %109, align 8, !dbg !2236
  store i32 6, i32* %retval, align 4, !dbg !2236
  br label %return, !dbg !2236

if.end134:                                        ; preds = %lor.lhs.false129
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !2239
  %add.ptr135 = getelementptr inbounds i8, i8* %110, i64 4, !dbg !2239
  store i8* %add.ptr135, i8** %ptr.addr, align 8, !dbg !2239
  br label %sw.epilog169, !dbg !2239

sw.bb136:                                         ; preds = %while.body
  %111 = load i8*, i8** %end.addr, align 8, !dbg !2241
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !2241
  %sub.ptr.lhs.cast137 = ptrtoint i8* %111 to i64, !dbg !2241
  %sub.ptr.rhs.cast138 = ptrtoint i8* %112 to i64, !dbg !2241
  %sub.ptr.sub139 = sub i64 %sub.ptr.lhs.cast137, %sub.ptr.rhs.cast138, !dbg !2241
  %cmp140 = icmp sge i64 %sub.ptr.sub139, 2, !dbg !2241
  br i1 %cmp140, label %if.then142, label %if.end165, !dbg !2243

if.then142:                                       ; preds = %sw.bb136
  %113 = load i8*, i8** %ptr.addr, align 8, !dbg !2244
  %add.ptr143 = getelementptr inbounds i8, i8* %113, i64 1, !dbg !2244
  %114 = load i8, i8* %add.ptr143, align 1, !dbg !2244
  %conv144 = sext i8 %114 to i32, !dbg !2244
  %cmp145 = icmp eq i32 %conv144, 93, !dbg !2244
  br i1 %cmp145, label %if.end149, label %if.then147, !dbg !2247

if.then147:                                       ; preds = %if.then142
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !2248
  %add.ptr148 = getelementptr inbounds i8, i8* %115, i64 1, !dbg !2248
  store i8* %add.ptr148, i8** %ptr.addr, align 8, !dbg !2248
  br label %sw.epilog169, !dbg !2250

if.end149:                                        ; preds = %if.then142
  %116 = load i8*, i8** %end.addr, align 8, !dbg !2251
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !2251
  %sub.ptr.lhs.cast150 = ptrtoint i8* %116 to i64, !dbg !2251
  %sub.ptr.rhs.cast151 = ptrtoint i8* %117 to i64, !dbg !2251
  %sub.ptr.sub152 = sub i64 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast151, !dbg !2251
  %cmp153 = icmp sge i64 %sub.ptr.sub152, 3, !dbg !2251
  br i1 %cmp153, label %if.then155, label %if.end164, !dbg !2253

if.then155:                                       ; preds = %if.end149
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !2254
  %add.ptr156 = getelementptr inbounds i8, i8* %118, i64 2, !dbg !2254
  %119 = load i8, i8* %add.ptr156, align 1, !dbg !2254
  %conv157 = sext i8 %119 to i32, !dbg !2254
  %cmp158 = icmp eq i32 %conv157, 62, !dbg !2254
  br i1 %cmp158, label %if.end162, label %if.then160, !dbg !2257

if.then160:                                       ; preds = %if.then155
  %120 = load i8*, i8** %ptr.addr, align 8, !dbg !2258
  %add.ptr161 = getelementptr inbounds i8, i8* %120, i64 1, !dbg !2258
  store i8* %add.ptr161, i8** %ptr.addr, align 8, !dbg !2258
  br label %sw.epilog169, !dbg !2260

if.end162:                                        ; preds = %if.then155
  %121 = load i8*, i8** %ptr.addr, align 8, !dbg !2261
  %add.ptr163 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !2262
  %122 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2263
  store i8* %add.ptr163, i8** %122, align 8, !dbg !2264
  store i32 0, i32* %retval, align 4, !dbg !2265
  br label %return, !dbg !2265

if.end164:                                        ; preds = %if.end149
  br label %if.end165, !dbg !2266

if.end165:                                        ; preds = %if.end164, %sw.bb136
  br label %sw.bb166, !dbg !2267

sw.bb166:                                         ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %if.end165
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !2269
  %124 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2270
  store i8* %123, i8** %124, align 8, !dbg !2271
  store i32 6, i32* %retval, align 4, !dbg !2272
  br label %return, !dbg !2272

sw.default167:                                    ; preds = %while.body
  %125 = load i8*, i8** %ptr.addr, align 8, !dbg !2273
  %add.ptr168 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !2273
  store i8* %add.ptr168, i8** %ptr.addr, align 8, !dbg !2273
  br label %sw.epilog169, !dbg !2274

sw.epilog169:                                     ; preds = %sw.default167, %if.then160, %if.then147, %if.end134, %if.end121, %if.end108
  br label %while.cond, !dbg !2275

while.end:                                        ; preds = %while.cond
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !2277
  %127 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2278
  store i8* %126, i8** %127, align 8, !dbg !2279
  store i32 6, i32* %retval, align 4, !dbg !2280
  br label %return, !dbg !2280

return:                                           ; preds = %while.end, %sw.bb166, %if.end162, %if.then133, %if.then120, %if.then107, %sw.bb87, %if.then84, %if.then80, %if.then71, %if.then67, %if.then58, %if.then55, %if.end48, %if.then41, %if.then28, %sw.bb19, %if.end18, %if.then8, %sw.bb1, %sw.bb, %if.then
  %128 = load i32, i32* %retval, align 4, !dbg !2281
  ret i32 %128, !dbg !2281
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_cdataSectionTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !266 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2282, metadata !444), !dbg !2283
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2284, metadata !444), !dbg !2285
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2286, metadata !444), !dbg !2287
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !2288, metadata !444), !dbg !2289
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !2290
  %1 = load i8*, i8** %end.addr, align 8, !dbg !2292
  %cmp = icmp uge i8* %0, %1, !dbg !2293
  br i1 %cmp, label %if.then, label %if.end, !dbg !2294

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !2295
  br label %return, !dbg !2295

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !2296
  %3 = load i8, i8* %2, align 1, !dbg !2296
  %idxprom = zext i8 %3 to i64, !dbg !2296
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2296
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !2296
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !2296
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2296
  %6 = load i8, i8* %arrayidx, align 1, !dbg !2296
  %conv = zext i8 %6 to i32, !dbg !2296
  switch i32 %conv, label %sw.default [
    i32 4, label %sw.bb
    i32 9, label %sw.bb25
    i32 10, label %sw.bb43
    i32 5, label %sw.bb45
    i32 6, label %sw.bb56
    i32 7, label %sw.bb69
    i32 0, label %sw.bb82
    i32 1, label %sw.bb82
    i32 8, label %sw.bb82
  ], !dbg !2297

sw.bb:                                            ; preds = %if.end
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !2298
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 1, !dbg !2298
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !2298
  %8 = load i8*, i8** %end.addr, align 8, !dbg !2300
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !2300
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !2300
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2300
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2300
  %cmp1 = icmp sge i64 %sub.ptr.sub, 1, !dbg !2300
  br i1 %cmp1, label %if.end4, label %if.then3, !dbg !2303

if.then3:                                         ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !2304
  br label %return, !dbg !2304

if.end4:                                          ; preds = %sw.bb
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !2307
  %11 = load i8, i8* %10, align 1, !dbg !2307
  %conv5 = sext i8 %11 to i32, !dbg !2307
  %cmp6 = icmp eq i32 %conv5, 93, !dbg !2307
  br i1 %cmp6, label %if.end9, label %if.then8, !dbg !2309

if.then8:                                         ; preds = %if.end4
  br label %sw.epilog, !dbg !2310

if.end9:                                          ; preds = %if.end4
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !2311
  %add.ptr10 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !2311
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !2311
  %13 = load i8*, i8** %end.addr, align 8, !dbg !2312
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !2312
  %sub.ptr.lhs.cast11 = ptrtoint i8* %13 to i64, !dbg !2312
  %sub.ptr.rhs.cast12 = ptrtoint i8* %14 to i64, !dbg !2312
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !2312
  %cmp14 = icmp sge i64 %sub.ptr.sub13, 1, !dbg !2312
  br i1 %cmp14, label %if.end17, label %if.then16, !dbg !2315

if.then16:                                        ; preds = %if.end9
  store i32 -1, i32* %retval, align 4, !dbg !2316
  br label %return, !dbg !2316

if.end17:                                         ; preds = %if.end9
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !2319
  %16 = load i8, i8* %15, align 1, !dbg !2319
  %conv18 = sext i8 %16 to i32, !dbg !2319
  %cmp19 = icmp eq i32 %conv18, 62, !dbg !2319
  br i1 %cmp19, label %if.end23, label %if.then21, !dbg !2321

if.then21:                                        ; preds = %if.end17
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !2322
  %add.ptr22 = getelementptr inbounds i8, i8* %17, i64 -1, !dbg !2322
  store i8* %add.ptr22, i8** %ptr.addr, align 8, !dbg !2322
  br label %sw.epilog, !dbg !2324

if.end23:                                         ; preds = %if.end17
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !2325
  %add.ptr24 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !2326
  %19 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2327
  store i8* %add.ptr24, i8** %19, align 8, !dbg !2328
  store i32 40, i32* %retval, align 4, !dbg !2329
  br label %return, !dbg !2329

sw.bb25:                                          ; preds = %if.end
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !2330
  %add.ptr26 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !2330
  store i8* %add.ptr26, i8** %ptr.addr, align 8, !dbg !2330
  %21 = load i8*, i8** %end.addr, align 8, !dbg !2331
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !2331
  %sub.ptr.lhs.cast27 = ptrtoint i8* %21 to i64, !dbg !2331
  %sub.ptr.rhs.cast28 = ptrtoint i8* %22 to i64, !dbg !2331
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !2331
  %cmp30 = icmp sge i64 %sub.ptr.sub29, 1, !dbg !2331
  br i1 %cmp30, label %if.end33, label %if.then32, !dbg !2334

if.then32:                                        ; preds = %sw.bb25
  store i32 -1, i32* %retval, align 4, !dbg !2335
  br label %return, !dbg !2335

if.end33:                                         ; preds = %sw.bb25
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !2338
  %24 = load i8, i8* %23, align 1, !dbg !2338
  %idxprom34 = zext i8 %24 to i64, !dbg !2338
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2338
  %26 = bitcast %struct.encoding* %25 to %struct.normal_encoding*, !dbg !2338
  %type35 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %26, i32 0, i32 1, !dbg !2338
  %arrayidx36 = getelementptr inbounds [256 x i8], [256 x i8]* %type35, i64 0, i64 %idxprom34, !dbg !2338
  %27 = load i8, i8* %arrayidx36, align 1, !dbg !2338
  %conv37 = zext i8 %27 to i32, !dbg !2338
  %cmp38 = icmp eq i32 %conv37, 10, !dbg !2340
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !2341

if.then40:                                        ; preds = %if.end33
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !2342
  %add.ptr41 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !2342
  store i8* %add.ptr41, i8** %ptr.addr, align 8, !dbg !2342
  br label %if.end42, !dbg !2343

if.end42:                                         ; preds = %if.then40, %if.end33
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !2344
  %30 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2345
  store i8* %29, i8** %30, align 8, !dbg !2346
  store i32 7, i32* %retval, align 4, !dbg !2347
  br label %return, !dbg !2347

sw.bb43:                                          ; preds = %if.end
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !2348
  %add.ptr44 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !2349
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2350
  store i8* %add.ptr44, i8** %32, align 8, !dbg !2351
  store i32 7, i32* %retval, align 4, !dbg !2352
  br label %return, !dbg !2352

sw.bb45:                                          ; preds = %if.end
  %33 = load i8*, i8** %end.addr, align 8, !dbg !2353
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !2353
  %sub.ptr.lhs.cast46 = ptrtoint i8* %33 to i64, !dbg !2353
  %sub.ptr.rhs.cast47 = ptrtoint i8* %34 to i64, !dbg !2353
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47, !dbg !2353
  %cmp49 = icmp slt i64 %sub.ptr.sub48, 2, !dbg !2353
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !2355

if.then51:                                        ; preds = %sw.bb45
  store i32 -2, i32* %retval, align 4, !dbg !2356
  br label %return, !dbg !2356

if.end52:                                         ; preds = %sw.bb45
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2358
  %36 = bitcast %struct.encoding* %35 to %struct.normal_encoding*, !dbg !2358
  %isInvalid2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %36, i32 0, i32 8, !dbg !2358
  %37 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid2, align 8, !dbg !2358
  %38 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2358
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !2358
  %call = call i32 %37(%struct.encoding* %38, i8* %39), !dbg !2358
  %tobool = icmp ne i32 %call, 0, !dbg !2358
  br i1 %tobool, label %if.then53, label %if.end54, !dbg !2358

if.then53:                                        ; preds = %if.end52
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !2361
  %41 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2361
  store i8* %40, i8** %41, align 8, !dbg !2361
  store i32 0, i32* %retval, align 4, !dbg !2361
  br label %return, !dbg !2361

if.end54:                                         ; preds = %if.end52
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !2364
  %add.ptr55 = getelementptr inbounds i8, i8* %42, i64 2, !dbg !2364
  store i8* %add.ptr55, i8** %ptr.addr, align 8, !dbg !2364
  br label %sw.epilog, !dbg !2364

sw.bb56:                                          ; preds = %if.end
  %43 = load i8*, i8** %end.addr, align 8, !dbg !2366
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !2366
  %sub.ptr.lhs.cast57 = ptrtoint i8* %43 to i64, !dbg !2366
  %sub.ptr.rhs.cast58 = ptrtoint i8* %44 to i64, !dbg !2366
  %sub.ptr.sub59 = sub i64 %sub.ptr.lhs.cast57, %sub.ptr.rhs.cast58, !dbg !2366
  %cmp60 = icmp slt i64 %sub.ptr.sub59, 3, !dbg !2366
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !2366

if.then62:                                        ; preds = %sw.bb56
  store i32 -2, i32* %retval, align 4, !dbg !2369
  br label %return, !dbg !2369

if.end63:                                         ; preds = %sw.bb56
  %45 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2371
  %46 = bitcast %struct.encoding* %45 to %struct.normal_encoding*, !dbg !2371
  %isInvalid3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %46, i32 0, i32 9, !dbg !2371
  %47 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3, align 8, !dbg !2371
  %48 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2371
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !2371
  %call64 = call i32 %47(%struct.encoding* %48, i8* %49), !dbg !2371
  %tobool65 = icmp ne i32 %call64, 0, !dbg !2371
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !2371

if.then66:                                        ; preds = %if.end63
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !2374
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2374
  store i8* %50, i8** %51, align 8, !dbg !2374
  store i32 0, i32* %retval, align 4, !dbg !2374
  br label %return, !dbg !2374

if.end67:                                         ; preds = %if.end63
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !2377
  %add.ptr68 = getelementptr inbounds i8, i8* %52, i64 3, !dbg !2377
  store i8* %add.ptr68, i8** %ptr.addr, align 8, !dbg !2377
  br label %sw.epilog, !dbg !2377

sw.bb69:                                          ; preds = %if.end
  %53 = load i8*, i8** %end.addr, align 8, !dbg !2379
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !2379
  %sub.ptr.lhs.cast70 = ptrtoint i8* %53 to i64, !dbg !2379
  %sub.ptr.rhs.cast71 = ptrtoint i8* %54 to i64, !dbg !2379
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71, !dbg !2379
  %cmp73 = icmp slt i64 %sub.ptr.sub72, 4, !dbg !2379
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !2379

if.then75:                                        ; preds = %sw.bb69
  store i32 -2, i32* %retval, align 4, !dbg !2382
  br label %return, !dbg !2382

if.end76:                                         ; preds = %sw.bb69
  %55 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2384
  %56 = bitcast %struct.encoding* %55 to %struct.normal_encoding*, !dbg !2384
  %isInvalid4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %56, i32 0, i32 10, !dbg !2384
  %57 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4, align 8, !dbg !2384
  %58 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2384
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !2384
  %call77 = call i32 %57(%struct.encoding* %58, i8* %59), !dbg !2384
  %tobool78 = icmp ne i32 %call77, 0, !dbg !2384
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !2384

if.then79:                                        ; preds = %if.end76
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !2387
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2387
  store i8* %60, i8** %61, align 8, !dbg !2387
  store i32 0, i32* %retval, align 4, !dbg !2387
  br label %return, !dbg !2387

if.end80:                                         ; preds = %if.end76
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !2390
  %add.ptr81 = getelementptr inbounds i8, i8* %62, i64 4, !dbg !2390
  store i8* %add.ptr81, i8** %ptr.addr, align 8, !dbg !2390
  br label %sw.epilog, !dbg !2390

sw.bb82:                                          ; preds = %if.end, %if.end, %if.end
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !2392
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2392
  store i8* %63, i8** %64, align 8, !dbg !2392
  store i32 0, i32* %retval, align 4, !dbg !2392
  br label %return, !dbg !2392

sw.default:                                       ; preds = %if.end
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !2394
  %add.ptr83 = getelementptr inbounds i8, i8* %65, i64 1, !dbg !2394
  store i8* %add.ptr83, i8** %ptr.addr, align 8, !dbg !2394
  br label %sw.epilog, !dbg !2395

sw.epilog:                                        ; preds = %sw.default, %if.end80, %if.end67, %if.end54, %if.then21, %if.then8
  br label %while.cond, !dbg !2396

while.cond:                                       ; preds = %sw.epilog134, %sw.epilog
  %66 = load i8*, i8** %end.addr, align 8, !dbg !2397
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !2397
  %sub.ptr.lhs.cast84 = ptrtoint i8* %66 to i64, !dbg !2397
  %sub.ptr.rhs.cast85 = ptrtoint i8* %67 to i64, !dbg !2397
  %sub.ptr.sub86 = sub i64 %sub.ptr.lhs.cast84, %sub.ptr.rhs.cast85, !dbg !2397
  %cmp87 = icmp sge i64 %sub.ptr.sub86, 1, !dbg !2397
  br i1 %cmp87, label %while.body, label %while.end, !dbg !2399

while.body:                                       ; preds = %while.cond
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !2400
  %69 = load i8, i8* %68, align 1, !dbg !2400
  %idxprom89 = zext i8 %69 to i64, !dbg !2400
  %70 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2400
  %71 = bitcast %struct.encoding* %70 to %struct.normal_encoding*, !dbg !2400
  %type90 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %71, i32 0, i32 1, !dbg !2400
  %arrayidx91 = getelementptr inbounds [256 x i8], [256 x i8]* %type90, i64 0, i64 %idxprom89, !dbg !2400
  %72 = load i8, i8* %arrayidx91, align 1, !dbg !2400
  %conv92 = zext i8 %72 to i32, !dbg !2400
  switch i32 %conv92, label %sw.default132 [
    i32 5, label %sw.bb93
    i32 6, label %sw.bb105
    i32 7, label %sw.bb118
    i32 0, label %sw.bb131
    i32 1, label %sw.bb131
    i32 8, label %sw.bb131
    i32 9, label %sw.bb131
    i32 10, label %sw.bb131
    i32 4, label %sw.bb131
  ], !dbg !2402

sw.bb93:                                          ; preds = %while.body
  %73 = load i8*, i8** %end.addr, align 8, !dbg !2403
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !2403
  %sub.ptr.lhs.cast94 = ptrtoint i8* %73 to i64, !dbg !2403
  %sub.ptr.rhs.cast95 = ptrtoint i8* %74 to i64, !dbg !2403
  %sub.ptr.sub96 = sub i64 %sub.ptr.lhs.cast94, %sub.ptr.rhs.cast95, !dbg !2403
  %cmp97 = icmp slt i64 %sub.ptr.sub96, 2, !dbg !2403
  br i1 %cmp97, label %if.then102, label %lor.lhs.false, !dbg !2403

lor.lhs.false:                                    ; preds = %sw.bb93
  %75 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2406
  %76 = bitcast %struct.encoding* %75 to %struct.normal_encoding*, !dbg !2406
  %isInvalid299 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %76, i32 0, i32 8, !dbg !2406
  %77 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid299, align 8, !dbg !2406
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2406
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !2406
  %call100 = call i32 %77(%struct.encoding* %78, i8* %79), !dbg !2406
  %tobool101 = icmp ne i32 %call100, 0, !dbg !2406
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !2406

if.then102:                                       ; preds = %lor.lhs.false, %sw.bb93
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !2408
  %81 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2408
  store i8* %80, i8** %81, align 8, !dbg !2408
  store i32 6, i32* %retval, align 4, !dbg !2408
  br label %return, !dbg !2408

if.end103:                                        ; preds = %lor.lhs.false
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !2411
  %add.ptr104 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !2411
  store i8* %add.ptr104, i8** %ptr.addr, align 8, !dbg !2411
  br label %sw.epilog134, !dbg !2411

sw.bb105:                                         ; preds = %while.body
  %83 = load i8*, i8** %end.addr, align 8, !dbg !2413
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !2413
  %sub.ptr.lhs.cast106 = ptrtoint i8* %83 to i64, !dbg !2413
  %sub.ptr.rhs.cast107 = ptrtoint i8* %84 to i64, !dbg !2413
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107, !dbg !2413
  %cmp109 = icmp slt i64 %sub.ptr.sub108, 3, !dbg !2413
  br i1 %cmp109, label %if.then115, label %lor.lhs.false111, !dbg !2413

lor.lhs.false111:                                 ; preds = %sw.bb105
  %85 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2416
  %86 = bitcast %struct.encoding* %85 to %struct.normal_encoding*, !dbg !2416
  %isInvalid3112 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %86, i32 0, i32 9, !dbg !2416
  %87 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3112, align 8, !dbg !2416
  %88 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2416
  %89 = load i8*, i8** %ptr.addr, align 8, !dbg !2416
  %call113 = call i32 %87(%struct.encoding* %88, i8* %89), !dbg !2416
  %tobool114 = icmp ne i32 %call113, 0, !dbg !2416
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !2416

if.then115:                                       ; preds = %lor.lhs.false111, %sw.bb105
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !2418
  %91 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2418
  store i8* %90, i8** %91, align 8, !dbg !2418
  store i32 6, i32* %retval, align 4, !dbg !2418
  br label %return, !dbg !2418

if.end116:                                        ; preds = %lor.lhs.false111
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !2421
  %add.ptr117 = getelementptr inbounds i8, i8* %92, i64 3, !dbg !2421
  store i8* %add.ptr117, i8** %ptr.addr, align 8, !dbg !2421
  br label %sw.epilog134, !dbg !2421

sw.bb118:                                         ; preds = %while.body
  %93 = load i8*, i8** %end.addr, align 8, !dbg !2423
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !2423
  %sub.ptr.lhs.cast119 = ptrtoint i8* %93 to i64, !dbg !2423
  %sub.ptr.rhs.cast120 = ptrtoint i8* %94 to i64, !dbg !2423
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120, !dbg !2423
  %cmp122 = icmp slt i64 %sub.ptr.sub121, 4, !dbg !2423
  br i1 %cmp122, label %if.then128, label %lor.lhs.false124, !dbg !2423

lor.lhs.false124:                                 ; preds = %sw.bb118
  %95 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2426
  %96 = bitcast %struct.encoding* %95 to %struct.normal_encoding*, !dbg !2426
  %isInvalid4125 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %96, i32 0, i32 10, !dbg !2426
  %97 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4125, align 8, !dbg !2426
  %98 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2426
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !2426
  %call126 = call i32 %97(%struct.encoding* %98, i8* %99), !dbg !2426
  %tobool127 = icmp ne i32 %call126, 0, !dbg !2426
  br i1 %tobool127, label %if.then128, label %if.end129, !dbg !2426

if.then128:                                       ; preds = %lor.lhs.false124, %sw.bb118
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !2428
  %101 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2428
  store i8* %100, i8** %101, align 8, !dbg !2428
  store i32 6, i32* %retval, align 4, !dbg !2428
  br label %return, !dbg !2428

if.end129:                                        ; preds = %lor.lhs.false124
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !2431
  %add.ptr130 = getelementptr inbounds i8, i8* %102, i64 4, !dbg !2431
  store i8* %add.ptr130, i8** %ptr.addr, align 8, !dbg !2431
  br label %sw.epilog134, !dbg !2431

sw.bb131:                                         ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !2433
  %104 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2434
  store i8* %103, i8** %104, align 8, !dbg !2435
  store i32 6, i32* %retval, align 4, !dbg !2436
  br label %return, !dbg !2436

sw.default132:                                    ; preds = %while.body
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !2437
  %add.ptr133 = getelementptr inbounds i8, i8* %105, i64 1, !dbg !2437
  store i8* %add.ptr133, i8** %ptr.addr, align 8, !dbg !2437
  br label %sw.epilog134, !dbg !2438

sw.epilog134:                                     ; preds = %sw.default132, %if.end129, %if.end116, %if.end103
  br label %while.cond, !dbg !2439

while.end:                                        ; preds = %while.cond
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !2441
  %107 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2442
  store i8* %106, i8** %107, align 8, !dbg !2443
  store i32 6, i32* %retval, align 4, !dbg !2444
  br label %return, !dbg !2444

return:                                           ; preds = %while.end, %sw.bb131, %if.then128, %if.then115, %if.then102, %sw.bb82, %if.then79, %if.then75, %if.then66, %if.then62, %if.then53, %if.then51, %sw.bb43, %if.end42, %if.then32, %if.end23, %if.then16, %if.then3, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !2445
  ret i32 %108, !dbg !2445
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_attributeValueTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !267 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2446, metadata !444), !dbg !2447
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2448, metadata !444), !dbg !2449
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2450, metadata !444), !dbg !2451
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !2452, metadata !444), !dbg !2453
  call void @llvm.dbg.declare(metadata i8** %start, metadata !2454, metadata !444), !dbg !2455
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !2456
  %1 = load i8*, i8** %end.addr, align 8, !dbg !2458
  %cmp = icmp uge i8* %0, %1, !dbg !2459
  br i1 %cmp, label %if.then, label %if.end, !dbg !2460

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !2461
  br label %return, !dbg !2461

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !2462
  store i8* %2, i8** %start, align 8, !dbg !2463
  br label %while.cond, !dbg !2464

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i8*, i8** %end.addr, align 8, !dbg !2465
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !2465
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !2465
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !2465
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2465
  %cmp1 = icmp sge i64 %sub.ptr.sub, 1, !dbg !2465
  br i1 %cmp1, label %while.body, label %while.end, !dbg !2467

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !2468
  %6 = load i8, i8* %5, align 1, !dbg !2468
  %idxprom = zext i8 %6 to i64, !dbg !2468
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2468
  %8 = bitcast %struct.encoding* %7 to %struct.normal_encoding*, !dbg !2468
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %8, i32 0, i32 1, !dbg !2468
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2468
  %9 = load i8, i8* %arrayidx, align 1, !dbg !2468
  %conv = zext i8 %9 to i32, !dbg !2468
  switch i32 %conv, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb2
    i32 7, label %sw.bb4
    i32 3, label %sw.bb6
    i32 2, label %sw.bb12
    i32 10, label %sw.bb13
    i32 9, label %sw.bb19
    i32 21, label %sw.bb41
  ], !dbg !2470

sw.bb:                                            ; preds = %while.body
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !2471
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 2, !dbg !2471
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !2471
  br label %sw.epilog, !dbg !2471

sw.bb2:                                           ; preds = %while.body
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !2473
  %add.ptr3 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !2473
  store i8* %add.ptr3, i8** %ptr.addr, align 8, !dbg !2473
  br label %sw.epilog, !dbg !2473

sw.bb4:                                           ; preds = %while.body
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !2475
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !2475
  store i8* %add.ptr5, i8** %ptr.addr, align 8, !dbg !2475
  br label %sw.epilog, !dbg !2475

sw.bb6:                                           ; preds = %while.body
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !2477
  %14 = load i8*, i8** %start, align 8, !dbg !2479
  %cmp7 = icmp eq i8* %13, %14, !dbg !2480
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !2481

if.then9:                                         ; preds = %sw.bb6
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2482
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !2483
  %add.ptr10 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !2484
  %17 = load i8*, i8** %end.addr, align 8, !dbg !2485
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2486
  %call = call i32 @normal_scanRef(%struct.encoding* %15, i8* %add.ptr10, i8* %17, i8** %18), !dbg !2487
  store i32 %call, i32* %retval, align 4, !dbg !2488
  br label %return, !dbg !2488

if.end11:                                         ; preds = %sw.bb6
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !2489
  %20 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2490
  store i8* %19, i8** %20, align 8, !dbg !2491
  store i32 6, i32* %retval, align 4, !dbg !2492
  br label %return, !dbg !2492

sw.bb12:                                          ; preds = %while.body
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !2493
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2494
  store i8* %21, i8** %22, align 8, !dbg !2495
  store i32 0, i32* %retval, align 4, !dbg !2496
  br label %return, !dbg !2496

sw.bb13:                                          ; preds = %while.body
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !2497
  %24 = load i8*, i8** %start, align 8, !dbg !2499
  %cmp14 = icmp eq i8* %23, %24, !dbg !2500
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !2501

if.then16:                                        ; preds = %sw.bb13
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !2502
  %add.ptr17 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !2504
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2505
  store i8* %add.ptr17, i8** %26, align 8, !dbg !2506
  store i32 7, i32* %retval, align 4, !dbg !2507
  br label %return, !dbg !2507

if.end18:                                         ; preds = %sw.bb13
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !2508
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2509
  store i8* %27, i8** %28, align 8, !dbg !2510
  store i32 6, i32* %retval, align 4, !dbg !2511
  br label %return, !dbg !2511

sw.bb19:                                          ; preds = %while.body
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !2512
  %30 = load i8*, i8** %start, align 8, !dbg !2514
  %cmp20 = icmp eq i8* %29, %30, !dbg !2515
  br i1 %cmp20, label %if.then22, label %if.end40, !dbg !2516

if.then22:                                        ; preds = %sw.bb19
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !2517
  %add.ptr23 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !2517
  store i8* %add.ptr23, i8** %ptr.addr, align 8, !dbg !2517
  %32 = load i8*, i8** %end.addr, align 8, !dbg !2519
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !2519
  %sub.ptr.lhs.cast24 = ptrtoint i8* %32 to i64, !dbg !2519
  %sub.ptr.rhs.cast25 = ptrtoint i8* %33 to i64, !dbg !2519
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !2519
  %cmp27 = icmp sge i64 %sub.ptr.sub26, 1, !dbg !2519
  br i1 %cmp27, label %if.end30, label %if.then29, !dbg !2521

if.then29:                                        ; preds = %if.then22
  store i32 -3, i32* %retval, align 4, !dbg !2522
  br label %return, !dbg !2522

if.end30:                                         ; preds = %if.then22
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !2523
  %35 = load i8, i8* %34, align 1, !dbg !2523
  %idxprom31 = zext i8 %35 to i64, !dbg !2523
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2523
  %37 = bitcast %struct.encoding* %36 to %struct.normal_encoding*, !dbg !2523
  %type32 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %37, i32 0, i32 1, !dbg !2523
  %arrayidx33 = getelementptr inbounds [256 x i8], [256 x i8]* %type32, i64 0, i64 %idxprom31, !dbg !2523
  %38 = load i8, i8* %arrayidx33, align 1, !dbg !2523
  %conv34 = zext i8 %38 to i32, !dbg !2523
  %cmp35 = icmp eq i32 %conv34, 10, !dbg !2525
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !2526

if.then37:                                        ; preds = %if.end30
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !2527
  %add.ptr38 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !2527
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !2527
  br label %if.end39, !dbg !2528

if.end39:                                         ; preds = %if.then37, %if.end30
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !2529
  %41 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2530
  store i8* %40, i8** %41, align 8, !dbg !2531
  store i32 7, i32* %retval, align 4, !dbg !2532
  br label %return, !dbg !2532

if.end40:                                         ; preds = %sw.bb19
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !2533
  %43 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2534
  store i8* %42, i8** %43, align 8, !dbg !2535
  store i32 6, i32* %retval, align 4, !dbg !2536
  br label %return, !dbg !2536

sw.bb41:                                          ; preds = %while.body
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !2537
  %45 = load i8*, i8** %start, align 8, !dbg !2539
  %cmp42 = icmp eq i8* %44, %45, !dbg !2540
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !2541

if.then44:                                        ; preds = %sw.bb41
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !2542
  %add.ptr45 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !2544
  %47 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2545
  store i8* %add.ptr45, i8** %47, align 8, !dbg !2546
  store i32 39, i32* %retval, align 4, !dbg !2547
  br label %return, !dbg !2547

if.end46:                                         ; preds = %sw.bb41
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !2548
  %49 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2549
  store i8* %48, i8** %49, align 8, !dbg !2550
  store i32 6, i32* %retval, align 4, !dbg !2551
  br label %return, !dbg !2551

sw.default:                                       ; preds = %while.body
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !2552
  %add.ptr47 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !2552
  store i8* %add.ptr47, i8** %ptr.addr, align 8, !dbg !2552
  br label %sw.epilog, !dbg !2553

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb2, %sw.bb
  br label %while.cond, !dbg !2554

while.end:                                        ; preds = %while.cond
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !2556
  %52 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2557
  store i8* %51, i8** %52, align 8, !dbg !2558
  store i32 6, i32* %retval, align 4, !dbg !2559
  br label %return, !dbg !2559

return:                                           ; preds = %while.end, %if.end46, %if.then44, %if.end40, %if.end39, %if.then29, %if.end18, %if.then16, %sw.bb12, %if.end11, %if.then9, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !2560
  ret i32 %53, !dbg !2560
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_entityValueTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !268 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2561, metadata !444), !dbg !2562
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2563, metadata !444), !dbg !2564
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2565, metadata !444), !dbg !2566
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !2567, metadata !444), !dbg !2568
  call void @llvm.dbg.declare(metadata i8** %start, metadata !2569, metadata !444), !dbg !2570
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !2571
  %1 = load i8*, i8** %end.addr, align 8, !dbg !2573
  %cmp = icmp uge i8* %0, %1, !dbg !2574
  br i1 %cmp, label %if.then, label %if.end, !dbg !2575

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !2576
  br label %return, !dbg !2576

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !2577
  store i8* %2, i8** %start, align 8, !dbg !2578
  br label %while.cond, !dbg !2579

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i8*, i8** %end.addr, align 8, !dbg !2580
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !2580
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !2580
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !2580
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2580
  %cmp1 = icmp sge i64 %sub.ptr.sub, 1, !dbg !2580
  br i1 %cmp1, label %while.body, label %while.end, !dbg !2582

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !2583
  %6 = load i8, i8* %5, align 1, !dbg !2583
  %idxprom = zext i8 %6 to i64, !dbg !2583
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2583
  %8 = bitcast %struct.encoding* %7 to %struct.normal_encoding*, !dbg !2583
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %8, i32 0, i32 1, !dbg !2583
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2583
  %9 = load i8, i8* %arrayidx, align 1, !dbg !2583
  %conv = zext i8 %9 to i32, !dbg !2583
  switch i32 %conv, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb2
    i32 7, label %sw.bb4
    i32 3, label %sw.bb6
    i32 30, label %sw.bb12
    i32 10, label %sw.bb21
    i32 9, label %sw.bb27
  ], !dbg !2585

sw.bb:                                            ; preds = %while.body
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !2586
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 2, !dbg !2586
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !2586
  br label %sw.epilog, !dbg !2586

sw.bb2:                                           ; preds = %while.body
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !2588
  %add.ptr3 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !2588
  store i8* %add.ptr3, i8** %ptr.addr, align 8, !dbg !2588
  br label %sw.epilog, !dbg !2588

sw.bb4:                                           ; preds = %while.body
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !2590
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !2590
  store i8* %add.ptr5, i8** %ptr.addr, align 8, !dbg !2590
  br label %sw.epilog, !dbg !2590

sw.bb6:                                           ; preds = %while.body
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !2592
  %14 = load i8*, i8** %start, align 8, !dbg !2594
  %cmp7 = icmp eq i8* %13, %14, !dbg !2595
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !2596

if.then9:                                         ; preds = %sw.bb6
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2597
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !2598
  %add.ptr10 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !2599
  %17 = load i8*, i8** %end.addr, align 8, !dbg !2600
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2601
  %call = call i32 @normal_scanRef(%struct.encoding* %15, i8* %add.ptr10, i8* %17, i8** %18), !dbg !2602
  store i32 %call, i32* %retval, align 4, !dbg !2603
  br label %return, !dbg !2603

if.end11:                                         ; preds = %sw.bb6
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !2604
  %20 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2605
  store i8* %19, i8** %20, align 8, !dbg !2606
  store i32 6, i32* %retval, align 4, !dbg !2607
  br label %return, !dbg !2607

sw.bb12:                                          ; preds = %while.body
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !2608
  %22 = load i8*, i8** %start, align 8, !dbg !2610
  %cmp13 = icmp eq i8* %21, %22, !dbg !2611
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !2612

if.then15:                                        ; preds = %sw.bb12
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !2613, metadata !444), !dbg !2615
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2616
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !2617
  %add.ptr16 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !2618
  %25 = load i8*, i8** %end.addr, align 8, !dbg !2619
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2620
  %call17 = call i32 @normal_scanPercent(%struct.encoding* %23, i8* %add.ptr16, i8* %25, i8** %26), !dbg !2621
  store i32 %call17, i32* %tok, align 4, !dbg !2615
  %27 = load i32, i32* %tok, align 4, !dbg !2622
  %cmp18 = icmp eq i32 %27, 22, !dbg !2623
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !2624

cond.true:                                        ; preds = %if.then15
  br label %cond.end, !dbg !2625

cond.false:                                       ; preds = %if.then15
  %28 = load i32, i32* %tok, align 4, !dbg !2627
  br label %cond.end, !dbg !2629

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %28, %cond.false ], !dbg !2630
  store i32 %cond, i32* %retval, align 4, !dbg !2632
  br label %return, !dbg !2632

if.end20:                                         ; preds = %sw.bb12
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !2633
  %30 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2634
  store i8* %29, i8** %30, align 8, !dbg !2635
  store i32 6, i32* %retval, align 4, !dbg !2636
  br label %return, !dbg !2636

sw.bb21:                                          ; preds = %while.body
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !2637
  %32 = load i8*, i8** %start, align 8, !dbg !2639
  %cmp22 = icmp eq i8* %31, %32, !dbg !2640
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !2641

if.then24:                                        ; preds = %sw.bb21
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !2642
  %add.ptr25 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !2644
  %34 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2645
  store i8* %add.ptr25, i8** %34, align 8, !dbg !2646
  store i32 7, i32* %retval, align 4, !dbg !2647
  br label %return, !dbg !2647

if.end26:                                         ; preds = %sw.bb21
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !2648
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2649
  store i8* %35, i8** %36, align 8, !dbg !2650
  store i32 6, i32* %retval, align 4, !dbg !2651
  br label %return, !dbg !2651

sw.bb27:                                          ; preds = %while.body
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !2652
  %38 = load i8*, i8** %start, align 8, !dbg !2654
  %cmp28 = icmp eq i8* %37, %38, !dbg !2655
  br i1 %cmp28, label %if.then30, label %if.end48, !dbg !2656

if.then30:                                        ; preds = %sw.bb27
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !2657
  %add.ptr31 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !2657
  store i8* %add.ptr31, i8** %ptr.addr, align 8, !dbg !2657
  %40 = load i8*, i8** %end.addr, align 8, !dbg !2659
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !2659
  %sub.ptr.lhs.cast32 = ptrtoint i8* %40 to i64, !dbg !2659
  %sub.ptr.rhs.cast33 = ptrtoint i8* %41 to i64, !dbg !2659
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !2659
  %cmp35 = icmp sge i64 %sub.ptr.sub34, 1, !dbg !2659
  br i1 %cmp35, label %if.end38, label %if.then37, !dbg !2661

if.then37:                                        ; preds = %if.then30
  store i32 -3, i32* %retval, align 4, !dbg !2662
  br label %return, !dbg !2662

if.end38:                                         ; preds = %if.then30
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !2663
  %43 = load i8, i8* %42, align 1, !dbg !2663
  %idxprom39 = zext i8 %43 to i64, !dbg !2663
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2663
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !2663
  %type40 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !2663
  %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* %type40, i64 0, i64 %idxprom39, !dbg !2663
  %46 = load i8, i8* %arrayidx41, align 1, !dbg !2663
  %conv42 = zext i8 %46 to i32, !dbg !2663
  %cmp43 = icmp eq i32 %conv42, 10, !dbg !2665
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !2666

if.then45:                                        ; preds = %if.end38
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !2667
  %add.ptr46 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !2667
  store i8* %add.ptr46, i8** %ptr.addr, align 8, !dbg !2667
  br label %if.end47, !dbg !2668

if.end47:                                         ; preds = %if.then45, %if.end38
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !2669
  %49 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2670
  store i8* %48, i8** %49, align 8, !dbg !2671
  store i32 7, i32* %retval, align 4, !dbg !2672
  br label %return, !dbg !2672

if.end48:                                         ; preds = %sw.bb27
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !2673
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2674
  store i8* %50, i8** %51, align 8, !dbg !2675
  store i32 6, i32* %retval, align 4, !dbg !2676
  br label %return, !dbg !2676

sw.default:                                       ; preds = %while.body
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !2677
  %add.ptr49 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !2677
  store i8* %add.ptr49, i8** %ptr.addr, align 8, !dbg !2677
  br label %sw.epilog, !dbg !2678

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb2, %sw.bb
  br label %while.cond, !dbg !2679

while.end:                                        ; preds = %while.cond
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !2681
  %54 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !2682
  store i8* %53, i8** %54, align 8, !dbg !2683
  store i32 6, i32* %retval, align 4, !dbg !2684
  br label %return, !dbg !2684

return:                                           ; preds = %while.end, %if.end48, %if.end47, %if.then37, %if.end26, %if.then24, %if.end20, %cond.end, %if.end11, %if.then9, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !2685
  ret i32 %55, !dbg !2685
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_sameName(%struct.encoding* %enc, i8* %ptr1, i8* %ptr2) #0 !dbg !269 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr1.addr = alloca i8*, align 8
  %ptr2.addr = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2686, metadata !444), !dbg !2687
  store i8* %ptr1, i8** %ptr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr1.addr, metadata !2688, metadata !444), !dbg !2689
  store i8* %ptr2, i8** %ptr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr2.addr, metadata !2690, metadata !444), !dbg !2691
  br label %for.cond, !dbg !2692

for.cond:                                         ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %ptr1.addr, align 8, !dbg !2693
  %1 = load i8, i8* %0, align 1, !dbg !2693
  %idxprom = zext i8 %1 to i64, !dbg !2693
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2693
  %3 = bitcast %struct.encoding* %2 to %struct.normal_encoding*, !dbg !2693
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %3, i32 0, i32 1, !dbg !2693
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2693
  %4 = load i8, i8* %arrayidx, align 1, !dbg !2693
  %conv = zext i8 %4 to i32, !dbg !2693
  switch i32 %conv, label %sw.default [
    i32 7, label %sw.bb
    i32 6, label %sw.bb5
    i32 5, label %sw.bb14
    i32 29, label %sw.bb31
    i32 22, label %sw.bb31
    i32 24, label %sw.bb31
    i32 25, label %sw.bb31
    i32 26, label %sw.bb31
    i32 27, label %sw.bb31
  ], !dbg !2697

sw.bb:                                            ; preds = %for.cond
  %5 = load i8*, i8** %ptr1.addr, align 8, !dbg !2698
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !2698
  store i8* %incdec.ptr, i8** %ptr1.addr, align 8, !dbg !2698
  %6 = load i8, i8* %5, align 1, !dbg !2698
  %conv1 = sext i8 %6 to i32, !dbg !2698
  %7 = load i8*, i8** %ptr2.addr, align 8, !dbg !2698
  %incdec.ptr2 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !2698
  store i8* %incdec.ptr2, i8** %ptr2.addr, align 8, !dbg !2698
  %8 = load i8, i8* %7, align 1, !dbg !2698
  %conv3 = sext i8 %8 to i32, !dbg !2698
  %cmp = icmp ne i32 %conv1, %conv3, !dbg !2698
  br i1 %cmp, label %if.then, label %if.end, !dbg !2701

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !2702
  br label %return, !dbg !2702

if.end:                                           ; preds = %sw.bb
  br label %sw.bb5, !dbg !2704

sw.bb5:                                           ; preds = %for.cond, %if.end
  %9 = load i8*, i8** %ptr1.addr, align 8, !dbg !2706
  %incdec.ptr6 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !2706
  store i8* %incdec.ptr6, i8** %ptr1.addr, align 8, !dbg !2706
  %10 = load i8, i8* %9, align 1, !dbg !2706
  %conv7 = sext i8 %10 to i32, !dbg !2706
  %11 = load i8*, i8** %ptr2.addr, align 8, !dbg !2706
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !2706
  store i8* %incdec.ptr8, i8** %ptr2.addr, align 8, !dbg !2706
  %12 = load i8, i8* %11, align 1, !dbg !2706
  %conv9 = sext i8 %12 to i32, !dbg !2706
  %cmp10 = icmp ne i32 %conv7, %conv9, !dbg !2706
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2706

if.then12:                                        ; preds = %sw.bb5
  store i32 0, i32* %retval, align 4, !dbg !2709
  br label %return, !dbg !2709

if.end13:                                         ; preds = %sw.bb5
  br label %sw.bb14, !dbg !2711

sw.bb14:                                          ; preds = %for.cond, %if.end13
  %13 = load i8*, i8** %ptr1.addr, align 8, !dbg !2713
  %incdec.ptr15 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !2713
  store i8* %incdec.ptr15, i8** %ptr1.addr, align 8, !dbg !2713
  %14 = load i8, i8* %13, align 1, !dbg !2713
  %conv16 = sext i8 %14 to i32, !dbg !2713
  %15 = load i8*, i8** %ptr2.addr, align 8, !dbg !2713
  %incdec.ptr17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !2713
  store i8* %incdec.ptr17, i8** %ptr2.addr, align 8, !dbg !2713
  %16 = load i8, i8* %15, align 1, !dbg !2713
  %conv18 = sext i8 %16 to i32, !dbg !2713
  %cmp19 = icmp ne i32 %conv16, %conv18, !dbg !2713
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2713

if.then21:                                        ; preds = %sw.bb14
  store i32 0, i32* %retval, align 4, !dbg !2716
  br label %return, !dbg !2716

if.end22:                                         ; preds = %sw.bb14
  %17 = load i8*, i8** %ptr1.addr, align 8, !dbg !2718
  %incdec.ptr23 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !2718
  store i8* %incdec.ptr23, i8** %ptr1.addr, align 8, !dbg !2718
  %18 = load i8, i8* %17, align 1, !dbg !2720
  %conv24 = sext i8 %18 to i32, !dbg !2720
  %19 = load i8*, i8** %ptr2.addr, align 8, !dbg !2721
  %incdec.ptr25 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !2721
  store i8* %incdec.ptr25, i8** %ptr2.addr, align 8, !dbg !2721
  %20 = load i8, i8* %19, align 1, !dbg !2722
  %conv26 = sext i8 %20 to i32, !dbg !2722
  %cmp27 = icmp ne i32 %conv24, %conv26, !dbg !2723
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !2724

if.then29:                                        ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !2725
  br label %return, !dbg !2725

if.end30:                                         ; preds = %if.end22
  br label %sw.epilog, !dbg !2726

sw.bb31:                                          ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond
  %21 = load i8*, i8** %ptr2.addr, align 8, !dbg !2727
  %incdec.ptr32 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !2727
  store i8* %incdec.ptr32, i8** %ptr2.addr, align 8, !dbg !2727
  %22 = load i8, i8* %21, align 1, !dbg !2729
  %conv33 = sext i8 %22 to i32, !dbg !2729
  %23 = load i8*, i8** %ptr1.addr, align 8, !dbg !2730
  %incdec.ptr34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !2730
  store i8* %incdec.ptr34, i8** %ptr1.addr, align 8, !dbg !2730
  %24 = load i8, i8* %23, align 1, !dbg !2731
  %conv35 = sext i8 %24 to i32, !dbg !2731
  %cmp36 = icmp ne i32 %conv33, %conv35, !dbg !2732
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2733

if.then38:                                        ; preds = %sw.bb31
  store i32 0, i32* %retval, align 4, !dbg !2734
  br label %return, !dbg !2734

if.end39:                                         ; preds = %sw.bb31
  br label %sw.epilog, !dbg !2735

sw.default:                                       ; preds = %for.cond
  %25 = load i8*, i8** %ptr1.addr, align 8, !dbg !2736
  %26 = load i8, i8* %25, align 1, !dbg !2738
  %conv40 = sext i8 %26 to i32, !dbg !2738
  %27 = load i8*, i8** %ptr2.addr, align 8, !dbg !2739
  %28 = load i8, i8* %27, align 1, !dbg !2740
  %conv41 = sext i8 %28 to i32, !dbg !2740
  %cmp42 = icmp eq i32 %conv40, %conv41, !dbg !2741
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !2742

if.then44:                                        ; preds = %sw.default
  store i32 1, i32* %retval, align 4, !dbg !2743
  br label %return, !dbg !2743

if.end45:                                         ; preds = %sw.default
  %29 = load i8*, i8** %ptr2.addr, align 8, !dbg !2744
  %30 = load i8, i8* %29, align 1, !dbg !2744
  %idxprom46 = zext i8 %30 to i64, !dbg !2744
  %31 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2744
  %32 = bitcast %struct.encoding* %31 to %struct.normal_encoding*, !dbg !2744
  %type47 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %32, i32 0, i32 1, !dbg !2744
  %arrayidx48 = getelementptr inbounds [256 x i8], [256 x i8]* %type47, i64 0, i64 %idxprom46, !dbg !2744
  %33 = load i8, i8* %arrayidx48, align 1, !dbg !2744
  %conv49 = zext i8 %33 to i32, !dbg !2744
  switch i32 %conv49, label %sw.default51 [
    i32 5, label %sw.bb50
    i32 6, label %sw.bb50
    i32 7, label %sw.bb50
    i32 29, label %sw.bb50
    i32 22, label %sw.bb50
    i32 24, label %sw.bb50
    i32 25, label %sw.bb50
    i32 26, label %sw.bb50
    i32 27, label %sw.bb50
  ], !dbg !2745

sw.bb50:                                          ; preds = %if.end45, %if.end45, %if.end45, %if.end45, %if.end45, %if.end45, %if.end45, %if.end45, %if.end45
  store i32 0, i32* %retval, align 4, !dbg !2746
  br label %return, !dbg !2746

sw.default51:                                     ; preds = %if.end45
  store i32 1, i32* %retval, align 4, !dbg !2748
  br label %return, !dbg !2748

sw.epilog:                                        ; preds = %if.end39, %if.end30
  br label %for.cond, !dbg !2749

return:                                           ; preds = %sw.default51, %sw.bb50, %if.then44, %if.then38, %if.then29, %if.then21, %if.then12, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !2751
  ret i32 %34, !dbg !2751
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_nameMatchesAscii(%struct.encoding* %UNUSED_enc, i8* %ptr1, i8* %end1, i8* %ptr2) #0 !dbg !270 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr1.addr = alloca i8*, align 8
  %end1.addr = alloca i8*, align 8
  %ptr2.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !2752, metadata !444), !dbg !2753
  store i8* %ptr1, i8** %ptr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr1.addr, metadata !2754, metadata !444), !dbg !2755
  store i8* %end1, i8** %end1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end1.addr, metadata !2756, metadata !444), !dbg !2757
  store i8* %ptr2, i8** %ptr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr2.addr, metadata !2758, metadata !444), !dbg !2759
  br label %for.cond, !dbg !2760

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %ptr2.addr, align 8, !dbg !2761
  %1 = load i8, i8* %0, align 1, !dbg !2765
  %tobool = icmp ne i8 %1, 0, !dbg !2766
  br i1 %tobool, label %for.body, label %for.end, !dbg !2766

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %end1.addr, align 8, !dbg !2767
  %3 = load i8*, i8** %ptr1.addr, align 8, !dbg !2770
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !2771
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !2771
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2771
  %cmp = icmp slt i64 %sub.ptr.sub, 1, !dbg !2772
  br i1 %cmp, label %if.then, label %if.end, !dbg !2773

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !2774
  br label %return, !dbg !2774

if.end:                                           ; preds = %for.body
  %4 = load i8*, i8** %ptr1.addr, align 8, !dbg !2775
  %5 = load i8, i8* %4, align 1, !dbg !2775
  %conv = sext i8 %5 to i32, !dbg !2775
  %6 = load i8*, i8** %ptr2.addr, align 8, !dbg !2775
  %7 = load i8, i8* %6, align 1, !dbg !2775
  %conv1 = sext i8 %7 to i32, !dbg !2775
  %cmp2 = icmp eq i32 %conv, %conv1, !dbg !2775
  br i1 %cmp2, label %if.end5, label %if.then4, !dbg !2777

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2778
  br label %return, !dbg !2778

if.end5:                                          ; preds = %if.end
  br label %for.inc, !dbg !2779

for.inc:                                          ; preds = %if.end5
  %8 = load i8*, i8** %ptr1.addr, align 8, !dbg !2780
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 1, !dbg !2780
  store i8* %add.ptr, i8** %ptr1.addr, align 8, !dbg !2780
  %9 = load i8*, i8** %ptr2.addr, align 8, !dbg !2782
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !2782
  store i8* %incdec.ptr, i8** %ptr2.addr, align 8, !dbg !2782
  br label %for.cond, !dbg !2783

for.end:                                          ; preds = %for.cond
  %10 = load i8*, i8** %ptr1.addr, align 8, !dbg !2784
  %11 = load i8*, i8** %end1.addr, align 8, !dbg !2785
  %cmp6 = icmp eq i8* %10, %11, !dbg !2786
  %conv7 = zext i1 %cmp6 to i32, !dbg !2786
  store i32 %conv7, i32* %retval, align 4, !dbg !2787
  br label %return, !dbg !2787

return:                                           ; preds = %for.end, %if.then4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !2788
  ret i32 %12, !dbg !2788
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_nameLength(%struct.encoding* %enc, i8* %ptr) #0 !dbg !271 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %start = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2789, metadata !444), !dbg !2790
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2791, metadata !444), !dbg !2792
  call void @llvm.dbg.declare(metadata i8** %start, metadata !2793, metadata !444), !dbg !2794
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !2795
  store i8* %0, i8** %start, align 8, !dbg !2794
  br label %for.cond, !dbg !2796

for.cond:                                         ; preds = %sw.epilog, %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !2797
  %2 = load i8, i8* %1, align 1, !dbg !2797
  %idxprom = zext i8 %2 to i64, !dbg !2797
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2797
  %4 = bitcast %struct.encoding* %3 to %struct.normal_encoding*, !dbg !2797
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %4, i32 0, i32 1, !dbg !2797
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2797
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2797
  %conv = zext i8 %5 to i32, !dbg !2797
  switch i32 %conv, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb1
    i32 7, label %sw.bb3
    i32 29, label %sw.bb5
    i32 22, label %sw.bb5
    i32 24, label %sw.bb5
    i32 25, label %sw.bb5
    i32 26, label %sw.bb5
    i32 27, label %sw.bb5
  ], !dbg !2801

sw.bb:                                            ; preds = %for.cond
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !2802
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 2, !dbg !2802
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !2802
  br label %sw.epilog, !dbg !2802

sw.bb1:                                           ; preds = %for.cond
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !2804
  %add.ptr2 = getelementptr inbounds i8, i8* %7, i64 3, !dbg !2804
  store i8* %add.ptr2, i8** %ptr.addr, align 8, !dbg !2804
  br label %sw.epilog, !dbg !2804

sw.bb3:                                           ; preds = %for.cond
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !2806
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 4, !dbg !2806
  store i8* %add.ptr4, i8** %ptr.addr, align 8, !dbg !2806
  br label %sw.epilog, !dbg !2806

sw.bb5:                                           ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !2808
  %add.ptr6 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !2808
  store i8* %add.ptr6, i8** %ptr.addr, align 8, !dbg !2808
  br label %sw.epilog, !dbg !2809

sw.default:                                       ; preds = %for.cond
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !2810
  %11 = load i8*, i8** %start, align 8, !dbg !2811
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !2812
  %sub.ptr.rhs.cast = ptrtoint i8* %11 to i64, !dbg !2812
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2812
  %conv7 = trunc i64 %sub.ptr.sub to i32, !dbg !2813
  ret i32 %conv7, !dbg !2814

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  br label %for.cond, !dbg !2815
}

; Function Attrs: nounwind uwtable
define internal i8* @normal_skipS(%struct.encoding* %enc, i8* %ptr) #0 !dbg !272 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2817, metadata !444), !dbg !2818
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2819, metadata !444), !dbg !2820
  br label %for.cond, !dbg !2821

for.cond:                                         ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !2822
  %1 = load i8, i8* %0, align 1, !dbg !2822
  %idxprom = zext i8 %1 to i64, !dbg !2822
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2822
  %3 = bitcast %struct.encoding* %2 to %struct.normal_encoding*, !dbg !2822
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %3, i32 0, i32 1, !dbg !2822
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2822
  %4 = load i8, i8* %arrayidx, align 1, !dbg !2822
  %conv = zext i8 %4 to i32, !dbg !2822
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
    i32 9, label %sw.bb
    i32 21, label %sw.bb
  ], !dbg !2826

sw.bb:                                            ; preds = %for.cond, %for.cond, %for.cond
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !2827
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !2827
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !2827
  br label %sw.epilog, !dbg !2829

sw.default:                                       ; preds = %for.cond
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !2830
  ret i8* %6, !dbg !2831

sw.epilog:                                        ; preds = %sw.bb
  br label %for.cond, !dbg !2832
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_getAtts(%struct.encoding* %enc, i8* %ptr, i32 %attsMax, %struct.ATTRIBUTE* %atts) #0 !dbg !79 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %attsMax.addr = alloca i32, align 4
  %atts.addr = alloca %struct.ATTRIBUTE*, align 8
  %state = alloca i32, align 4
  %nAtts = alloca i32, align 4
  %open = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !2834, metadata !444), !dbg !2835
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2836, metadata !444), !dbg !2837
  store i32 %attsMax, i32* %attsMax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attsMax.addr, metadata !2838, metadata !444), !dbg !2839
  store %struct.ATTRIBUTE* %atts, %struct.ATTRIBUTE** %atts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATTRIBUTE** %atts.addr, metadata !2840, metadata !444), !dbg !2841
  call void @llvm.dbg.declare(metadata i32* %state, metadata !2842, metadata !444), !dbg !2843
  store i32 1, i32* %state, align 4, !dbg !2843
  call void @llvm.dbg.declare(metadata i32* %nAtts, metadata !2844, metadata !444), !dbg !2845
  store i32 0, i32* %nAtts, align 4, !dbg !2845
  call void @llvm.dbg.declare(metadata i32* %open, metadata !2846, metadata !444), !dbg !2847
  store i32 0, i32* %open, align 4, !dbg !2847
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !2848
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2848
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !2848
  br label %for.cond, !dbg !2850

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !2851
  %2 = load i8, i8* %1, align 1, !dbg !2851
  %idxprom = zext i8 %2 to i64, !dbg !2851
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !2851
  %4 = bitcast %struct.encoding* %3 to %struct.normal_encoding*, !dbg !2851
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %4, i32 0, i32 1, !dbg !2851
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !2851
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2851
  %conv = zext i8 %5 to i32, !dbg !2851
  switch i32 %conv, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb11
    i32 7, label %sw.bb27
    i32 29, label %sw.bb43
    i32 22, label %sw.bb43
    i32 24, label %sw.bb43
    i32 12, label %sw.bb58
    i32 13, label %sw.bb80
    i32 3, label %sw.bb106
    i32 21, label %sw.bb114
    i32 9, label %sw.bb156
    i32 10, label %sw.bb156
    i32 11, label %sw.bb172
    i32 17, label %sw.bb172
  ], !dbg !2854

sw.bb:                                            ; preds = %for.cond
  %6 = load i32, i32* %state, align 4, !dbg !2855
  %cmp = icmp eq i32 %6, 0, !dbg !2855
  br i1 %cmp, label %if.then, label %if.end9, !dbg !2858

if.then:                                          ; preds = %sw.bb
  %7 = load i32, i32* %nAtts, align 4, !dbg !2859
  %8 = load i32, i32* %attsMax.addr, align 4, !dbg !2859
  %cmp2 = icmp slt i32 %7, %8, !dbg !2859
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !2859

if.then4:                                         ; preds = %if.then
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !2863
  %10 = load i32, i32* %nAtts, align 4, !dbg !2863
  %idxprom5 = sext i32 %10 to i64, !dbg !2863
  %11 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2863
  %arrayidx6 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %11, i64 %idxprom5, !dbg !2863
  %name = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx6, i32 0, i32 0, !dbg !2863
  store i8* %9, i8** %name, align 8, !dbg !2863
  %12 = load i32, i32* %nAtts, align 4, !dbg !2863
  %idxprom7 = sext i32 %12 to i64, !dbg !2863
  %13 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2863
  %arrayidx8 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %13, i64 %idxprom7, !dbg !2863
  %normalized = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx8, i32 0, i32 3, !dbg !2863
  store i8 1, i8* %normalized, align 8, !dbg !2863
  br label %if.end, !dbg !2863

if.end:                                           ; preds = %if.then4, %if.then
  store i32 1, i32* %state, align 4, !dbg !2866
  br label %if.end9, !dbg !2866

if.end9:                                          ; preds = %if.end, %sw.bb
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !2868
  %add.ptr10 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !2868
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !2868
  br label %sw.epilog, !dbg !2868

sw.bb11:                                          ; preds = %for.cond
  %15 = load i32, i32* %state, align 4, !dbg !2870
  %cmp12 = icmp eq i32 %15, 0, !dbg !2870
  br i1 %cmp12, label %if.then14, label %if.end25, !dbg !2870

if.then14:                                        ; preds = %sw.bb11
  %16 = load i32, i32* %nAtts, align 4, !dbg !2873
  %17 = load i32, i32* %attsMax.addr, align 4, !dbg !2873
  %cmp15 = icmp slt i32 %16, %17, !dbg !2873
  br i1 %cmp15, label %if.then17, label %if.end24, !dbg !2873

if.then17:                                        ; preds = %if.then14
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !2877
  %19 = load i32, i32* %nAtts, align 4, !dbg !2877
  %idxprom18 = sext i32 %19 to i64, !dbg !2877
  %20 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2877
  %arrayidx19 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %20, i64 %idxprom18, !dbg !2877
  %name20 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx19, i32 0, i32 0, !dbg !2877
  store i8* %18, i8** %name20, align 8, !dbg !2877
  %21 = load i32, i32* %nAtts, align 4, !dbg !2877
  %idxprom21 = sext i32 %21 to i64, !dbg !2877
  %22 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2877
  %arrayidx22 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %22, i64 %idxprom21, !dbg !2877
  %normalized23 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx22, i32 0, i32 3, !dbg !2877
  store i8 1, i8* %normalized23, align 8, !dbg !2877
  br label %if.end24, !dbg !2877

if.end24:                                         ; preds = %if.then17, %if.then14
  store i32 1, i32* %state, align 4, !dbg !2880
  br label %if.end25, !dbg !2880

if.end25:                                         ; preds = %if.end24, %sw.bb11
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !2882
  %add.ptr26 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !2882
  store i8* %add.ptr26, i8** %ptr.addr, align 8, !dbg !2882
  br label %sw.epilog, !dbg !2882

sw.bb27:                                          ; preds = %for.cond
  %24 = load i32, i32* %state, align 4, !dbg !2884
  %cmp28 = icmp eq i32 %24, 0, !dbg !2884
  br i1 %cmp28, label %if.then30, label %if.end41, !dbg !2884

if.then30:                                        ; preds = %sw.bb27
  %25 = load i32, i32* %nAtts, align 4, !dbg !2887
  %26 = load i32, i32* %attsMax.addr, align 4, !dbg !2887
  %cmp31 = icmp slt i32 %25, %26, !dbg !2887
  br i1 %cmp31, label %if.then33, label %if.end40, !dbg !2887

if.then33:                                        ; preds = %if.then30
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !2891
  %28 = load i32, i32* %nAtts, align 4, !dbg !2891
  %idxprom34 = sext i32 %28 to i64, !dbg !2891
  %29 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2891
  %arrayidx35 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %29, i64 %idxprom34, !dbg !2891
  %name36 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx35, i32 0, i32 0, !dbg !2891
  store i8* %27, i8** %name36, align 8, !dbg !2891
  %30 = load i32, i32* %nAtts, align 4, !dbg !2891
  %idxprom37 = sext i32 %30 to i64, !dbg !2891
  %31 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2891
  %arrayidx38 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %31, i64 %idxprom37, !dbg !2891
  %normalized39 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx38, i32 0, i32 3, !dbg !2891
  store i8 1, i8* %normalized39, align 8, !dbg !2891
  br label %if.end40, !dbg !2891

if.end40:                                         ; preds = %if.then33, %if.then30
  store i32 1, i32* %state, align 4, !dbg !2894
  br label %if.end41, !dbg !2894

if.end41:                                         ; preds = %if.end40, %sw.bb27
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !2896
  %add.ptr42 = getelementptr inbounds i8, i8* %32, i64 3, !dbg !2896
  store i8* %add.ptr42, i8** %ptr.addr, align 8, !dbg !2896
  br label %sw.epilog, !dbg !2896

sw.bb43:                                          ; preds = %for.cond, %for.cond, %for.cond
  %33 = load i32, i32* %state, align 4, !dbg !2898
  %cmp44 = icmp eq i32 %33, 0, !dbg !2898
  br i1 %cmp44, label %if.then46, label %if.end57, !dbg !2900

if.then46:                                        ; preds = %sw.bb43
  %34 = load i32, i32* %nAtts, align 4, !dbg !2901
  %35 = load i32, i32* %attsMax.addr, align 4, !dbg !2901
  %cmp47 = icmp slt i32 %34, %35, !dbg !2901
  br i1 %cmp47, label %if.then49, label %if.end56, !dbg !2901

if.then49:                                        ; preds = %if.then46
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !2905
  %37 = load i32, i32* %nAtts, align 4, !dbg !2905
  %idxprom50 = sext i32 %37 to i64, !dbg !2905
  %38 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2905
  %arrayidx51 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %38, i64 %idxprom50, !dbg !2905
  %name52 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx51, i32 0, i32 0, !dbg !2905
  store i8* %36, i8** %name52, align 8, !dbg !2905
  %39 = load i32, i32* %nAtts, align 4, !dbg !2905
  %idxprom53 = sext i32 %39 to i64, !dbg !2905
  %40 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2905
  %arrayidx54 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %40, i64 %idxprom53, !dbg !2905
  %normalized55 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx54, i32 0, i32 3, !dbg !2905
  store i8 1, i8* %normalized55, align 8, !dbg !2905
  br label %if.end56, !dbg !2905

if.end56:                                         ; preds = %if.then49, %if.then46
  store i32 1, i32* %state, align 4, !dbg !2908
  br label %if.end57, !dbg !2908

if.end57:                                         ; preds = %if.end56, %sw.bb43
  br label %sw.epilog, !dbg !2910

sw.bb58:                                          ; preds = %for.cond
  %41 = load i32, i32* %state, align 4, !dbg !2911
  %cmp59 = icmp ne i32 %41, 2, !dbg !2913
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !2914

if.then61:                                        ; preds = %sw.bb58
  %42 = load i32, i32* %nAtts, align 4, !dbg !2915
  %43 = load i32, i32* %attsMax.addr, align 4, !dbg !2918
  %cmp62 = icmp slt i32 %42, %43, !dbg !2919
  br i1 %cmp62, label %if.then64, label %if.end68, !dbg !2920

if.then64:                                        ; preds = %if.then61
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !2921
  %add.ptr65 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !2922
  %45 = load i32, i32* %nAtts, align 4, !dbg !2923
  %idxprom66 = sext i32 %45 to i64, !dbg !2924
  %46 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2924
  %arrayidx67 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %46, i64 %idxprom66, !dbg !2924
  %valuePtr = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx67, i32 0, i32 1, !dbg !2925
  store i8* %add.ptr65, i8** %valuePtr, align 8, !dbg !2926
  br label %if.end68, !dbg !2924

if.end68:                                         ; preds = %if.then64, %if.then61
  store i32 2, i32* %state, align 4, !dbg !2927
  store i32 12, i32* %open, align 4, !dbg !2928
  br label %if.end79, !dbg !2929

if.else:                                          ; preds = %sw.bb58
  %47 = load i32, i32* %open, align 4, !dbg !2930
  %cmp69 = icmp eq i32 %47, 12, !dbg !2932
  br i1 %cmp69, label %if.then71, label %if.end78, !dbg !2933

if.then71:                                        ; preds = %if.else
  store i32 0, i32* %state, align 4, !dbg !2934
  %48 = load i32, i32* %nAtts, align 4, !dbg !2936
  %49 = load i32, i32* %attsMax.addr, align 4, !dbg !2938
  %cmp72 = icmp slt i32 %48, %49, !dbg !2939
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !2940

if.then74:                                        ; preds = %if.then71
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !2941
  %51 = load i32, i32* %nAtts, align 4, !dbg !2942
  %idxprom75 = sext i32 %51 to i64, !dbg !2943
  %52 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2943
  %arrayidx76 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %52, i64 %idxprom75, !dbg !2943
  %valueEnd = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx76, i32 0, i32 2, !dbg !2944
  store i8* %50, i8** %valueEnd, align 8, !dbg !2945
  br label %if.end77, !dbg !2943

if.end77:                                         ; preds = %if.then74, %if.then71
  %53 = load i32, i32* %nAtts, align 4, !dbg !2946
  %inc = add nsw i32 %53, 1, !dbg !2946
  store i32 %inc, i32* %nAtts, align 4, !dbg !2946
  br label %if.end78, !dbg !2947

if.end78:                                         ; preds = %if.end77, %if.else
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end68
  br label %sw.epilog, !dbg !2948

sw.bb80:                                          ; preds = %for.cond
  %54 = load i32, i32* %state, align 4, !dbg !2949
  %cmp81 = icmp ne i32 %54, 2, !dbg !2951
  br i1 %cmp81, label %if.then83, label %if.else92, !dbg !2952

if.then83:                                        ; preds = %sw.bb80
  %55 = load i32, i32* %nAtts, align 4, !dbg !2953
  %56 = load i32, i32* %attsMax.addr, align 4, !dbg !2956
  %cmp84 = icmp slt i32 %55, %56, !dbg !2957
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !2958

if.then86:                                        ; preds = %if.then83
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !2959
  %add.ptr87 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !2960
  %58 = load i32, i32* %nAtts, align 4, !dbg !2961
  %idxprom88 = sext i32 %58 to i64, !dbg !2962
  %59 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2962
  %arrayidx89 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %59, i64 %idxprom88, !dbg !2962
  %valuePtr90 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx89, i32 0, i32 1, !dbg !2963
  store i8* %add.ptr87, i8** %valuePtr90, align 8, !dbg !2964
  br label %if.end91, !dbg !2962

if.end91:                                         ; preds = %if.then86, %if.then83
  store i32 2, i32* %state, align 4, !dbg !2965
  store i32 13, i32* %open, align 4, !dbg !2966
  br label %if.end105, !dbg !2967

if.else92:                                        ; preds = %sw.bb80
  %60 = load i32, i32* %open, align 4, !dbg !2968
  %cmp93 = icmp eq i32 %60, 13, !dbg !2970
  br i1 %cmp93, label %if.then95, label %if.end104, !dbg !2971

if.then95:                                        ; preds = %if.else92
  store i32 0, i32* %state, align 4, !dbg !2972
  %61 = load i32, i32* %nAtts, align 4, !dbg !2974
  %62 = load i32, i32* %attsMax.addr, align 4, !dbg !2976
  %cmp96 = icmp slt i32 %61, %62, !dbg !2977
  br i1 %cmp96, label %if.then98, label %if.end102, !dbg !2978

if.then98:                                        ; preds = %if.then95
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !2979
  %64 = load i32, i32* %nAtts, align 4, !dbg !2980
  %idxprom99 = sext i32 %64 to i64, !dbg !2981
  %65 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2981
  %arrayidx100 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %65, i64 %idxprom99, !dbg !2981
  %valueEnd101 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx100, i32 0, i32 2, !dbg !2982
  store i8* %63, i8** %valueEnd101, align 8, !dbg !2983
  br label %if.end102, !dbg !2981

if.end102:                                        ; preds = %if.then98, %if.then95
  %66 = load i32, i32* %nAtts, align 4, !dbg !2984
  %inc103 = add nsw i32 %66, 1, !dbg !2984
  store i32 %inc103, i32* %nAtts, align 4, !dbg !2984
  br label %if.end104, !dbg !2985

if.end104:                                        ; preds = %if.end102, %if.else92
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end91
  br label %sw.epilog, !dbg !2986

sw.bb106:                                         ; preds = %for.cond
  %67 = load i32, i32* %nAtts, align 4, !dbg !2987
  %68 = load i32, i32* %attsMax.addr, align 4, !dbg !2989
  %cmp107 = icmp slt i32 %67, %68, !dbg !2990
  br i1 %cmp107, label %if.then109, label %if.end113, !dbg !2991

if.then109:                                       ; preds = %sw.bb106
  %69 = load i32, i32* %nAtts, align 4, !dbg !2992
  %idxprom110 = sext i32 %69 to i64, !dbg !2993
  %70 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !2993
  %arrayidx111 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %70, i64 %idxprom110, !dbg !2993
  %normalized112 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx111, i32 0, i32 3, !dbg !2994
  store i8 0, i8* %normalized112, align 8, !dbg !2995
  br label %if.end113, !dbg !2993

if.end113:                                        ; preds = %if.then109, %sw.bb106
  br label %sw.epilog, !dbg !2996

sw.bb114:                                         ; preds = %for.cond
  %71 = load i32, i32* %state, align 4, !dbg !2997
  %cmp115 = icmp eq i32 %71, 1, !dbg !2999
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !3000

if.then117:                                       ; preds = %sw.bb114
  store i32 0, i32* %state, align 4, !dbg !3001
  br label %if.end155, !dbg !3002

if.else118:                                       ; preds = %sw.bb114
  %72 = load i32, i32* %state, align 4, !dbg !3003
  %cmp119 = icmp eq i32 %72, 2, !dbg !3005
  br i1 %cmp119, label %land.lhs.true, label %if.end154, !dbg !3006

land.lhs.true:                                    ; preds = %if.else118
  %73 = load i32, i32* %nAtts, align 4, !dbg !3007
  %74 = load i32, i32* %attsMax.addr, align 4, !dbg !3009
  %cmp121 = icmp slt i32 %73, %74, !dbg !3010
  br i1 %cmp121, label %land.lhs.true123, label %if.end154, !dbg !3011

land.lhs.true123:                                 ; preds = %land.lhs.true
  %75 = load i32, i32* %nAtts, align 4, !dbg !3012
  %idxprom124 = sext i32 %75 to i64, !dbg !3013
  %76 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !3013
  %arrayidx125 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %76, i64 %idxprom124, !dbg !3013
  %normalized126 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx125, i32 0, i32 3, !dbg !3014
  %77 = load i8, i8* %normalized126, align 8, !dbg !3014
  %conv127 = sext i8 %77 to i32, !dbg !3013
  %tobool = icmp ne i32 %conv127, 0, !dbg !3013
  br i1 %tobool, label %land.lhs.true128, label %if.end154, !dbg !3015

land.lhs.true128:                                 ; preds = %land.lhs.true123
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !3016
  %79 = load i32, i32* %nAtts, align 4, !dbg !3017
  %idxprom129 = sext i32 %79 to i64, !dbg !3018
  %80 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !3018
  %arrayidx130 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %80, i64 %idxprom129, !dbg !3018
  %valuePtr131 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx130, i32 0, i32 1, !dbg !3019
  %81 = load i8*, i8** %valuePtr131, align 8, !dbg !3019
  %cmp132 = icmp eq i8* %78, %81, !dbg !3020
  br i1 %cmp132, label %if.then150, label %lor.lhs.false, !dbg !3021

lor.lhs.false:                                    ; preds = %land.lhs.true128
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !3022
  %83 = load i8, i8* %82, align 1, !dbg !3022
  %conv134 = sext i8 %83 to i32, !dbg !3022
  %cmp135 = icmp ne i32 %conv134, 32, !dbg !3023
  br i1 %cmp135, label %if.then150, label %lor.lhs.false137, !dbg !3024

lor.lhs.false137:                                 ; preds = %lor.lhs.false
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !3025
  %add.ptr138 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !3025
  %85 = load i8, i8* %add.ptr138, align 1, !dbg !3025
  %conv139 = sext i8 %85 to i32, !dbg !3025
  %cmp140 = icmp eq i32 %conv139, 32, !dbg !3026
  br i1 %cmp140, label %if.then150, label %lor.lhs.false142, !dbg !3027

lor.lhs.false142:                                 ; preds = %lor.lhs.false137
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !3028
  %add.ptr143 = getelementptr inbounds i8, i8* %86, i64 1, !dbg !3028
  %87 = load i8, i8* %add.ptr143, align 1, !dbg !3028
  %idxprom144 = zext i8 %87 to i64, !dbg !3028
  %88 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3028
  %89 = bitcast %struct.encoding* %88 to %struct.normal_encoding*, !dbg !3028
  %type145 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %89, i32 0, i32 1, !dbg !3028
  %arrayidx146 = getelementptr inbounds [256 x i8], [256 x i8]* %type145, i64 0, i64 %idxprom144, !dbg !3028
  %90 = load i8, i8* %arrayidx146, align 1, !dbg !3028
  %conv147 = zext i8 %90 to i32, !dbg !3028
  %91 = load i32, i32* %open, align 4, !dbg !3029
  %cmp148 = icmp eq i32 %conv147, %91, !dbg !3030
  br i1 %cmp148, label %if.then150, label %if.end154, !dbg !3031

if.then150:                                       ; preds = %lor.lhs.false142, %lor.lhs.false137, %lor.lhs.false, %land.lhs.true128
  %92 = load i32, i32* %nAtts, align 4, !dbg !3033
  %idxprom151 = sext i32 %92 to i64, !dbg !3034
  %93 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !3034
  %arrayidx152 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %93, i64 %idxprom151, !dbg !3034
  %normalized153 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx152, i32 0, i32 3, !dbg !3035
  store i8 0, i8* %normalized153, align 8, !dbg !3036
  br label %if.end154, !dbg !3034

if.end154:                                        ; preds = %if.then150, %lor.lhs.false142, %land.lhs.true123, %land.lhs.true, %if.else118
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then117
  br label %sw.epilog, !dbg !3037

sw.bb156:                                         ; preds = %for.cond, %for.cond
  %94 = load i32, i32* %state, align 4, !dbg !3038
  %cmp157 = icmp eq i32 %94, 1, !dbg !3040
  br i1 %cmp157, label %if.then159, label %if.else160, !dbg !3041

if.then159:                                       ; preds = %sw.bb156
  store i32 0, i32* %state, align 4, !dbg !3042
  br label %if.end171, !dbg !3043

if.else160:                                       ; preds = %sw.bb156
  %95 = load i32, i32* %state, align 4, !dbg !3044
  %cmp161 = icmp eq i32 %95, 2, !dbg !3046
  br i1 %cmp161, label %land.lhs.true163, label %if.end170, !dbg !3047

land.lhs.true163:                                 ; preds = %if.else160
  %96 = load i32, i32* %nAtts, align 4, !dbg !3048
  %97 = load i32, i32* %attsMax.addr, align 4, !dbg !3050
  %cmp164 = icmp slt i32 %96, %97, !dbg !3051
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !3052

if.then166:                                       ; preds = %land.lhs.true163
  %98 = load i32, i32* %nAtts, align 4, !dbg !3053
  %idxprom167 = sext i32 %98 to i64, !dbg !3054
  %99 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !3054
  %arrayidx168 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %99, i64 %idxprom167, !dbg !3054
  %normalized169 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx168, i32 0, i32 3, !dbg !3055
  store i8 0, i8* %normalized169, align 8, !dbg !3056
  br label %if.end170, !dbg !3054

if.end170:                                        ; preds = %if.then166, %land.lhs.true163, %if.else160
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.then159
  br label %sw.epilog, !dbg !3057

sw.bb172:                                         ; preds = %for.cond, %for.cond
  %100 = load i32, i32* %state, align 4, !dbg !3058
  %cmp173 = icmp ne i32 %100, 2, !dbg !3060
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !3061

if.then175:                                       ; preds = %sw.bb172
  %101 = load i32, i32* %nAtts, align 4, !dbg !3062
  ret i32 %101, !dbg !3063

if.end176:                                        ; preds = %sw.bb172
  br label %sw.epilog, !dbg !3064

sw.default:                                       ; preds = %for.cond
  br label %sw.epilog, !dbg !3065

sw.epilog:                                        ; preds = %sw.default, %if.end176, %if.end171, %if.end155, %if.end113, %if.end105, %if.end79, %if.end57, %if.end41, %if.end25, %if.end9
  br label %for.inc, !dbg !3066

for.inc:                                          ; preds = %sw.epilog
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !3067
  %add.ptr177 = getelementptr inbounds i8, i8* %102, i64 1, !dbg !3067
  store i8* %add.ptr177, i8** %ptr.addr, align 8, !dbg !3067
  br label %for.cond, !dbg !3069
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_charRefNumber(%struct.encoding* %UNUSED_enc, i8* %ptr) #0 !dbg !273 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %c = alloca i32, align 4
  %c26 = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !3070, metadata !444), !dbg !3071
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3072, metadata !444), !dbg !3073
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3074, metadata !444), !dbg !3075
  store i32 0, i32* %result, align 4, !dbg !3075
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !3076
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 2, !dbg !3076
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !3076
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3077
  %2 = load i8, i8* %1, align 1, !dbg !3077
  %conv = sext i8 %2 to i32, !dbg !3077
  %cmp = icmp eq i32 %conv, 120, !dbg !3077
  br i1 %cmp, label %if.then, label %if.else, !dbg !3079

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !3080
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !3080
  store i8* %add.ptr2, i8** %ptr.addr, align 8, !dbg !3080
  br label %for.cond, !dbg !3083

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !3084
  %5 = load i8, i8* %4, align 1, !dbg !3084
  %conv3 = sext i8 %5 to i32, !dbg !3084
  %cmp4 = icmp eq i32 %conv3, 59, !dbg !3084
  %lnot = xor i1 %cmp4, true, !dbg !3086
  br i1 %lnot, label %for.body, label %for.end, !dbg !3087

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3089, metadata !444), !dbg !3091
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !3092
  %7 = load i8, i8* %6, align 1, !dbg !3092
  %conv6 = sext i8 %7 to i32, !dbg !3092
  store i32 %conv6, i32* %c, align 4, !dbg !3091
  %8 = load i32, i32* %c, align 4, !dbg !3093
  switch i32 %8, label %sw.epilog [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 65, label %sw.bb7
    i32 66, label %sw.bb7
    i32 67, label %sw.bb7
    i32 68, label %sw.bb7
    i32 69, label %sw.bb7
    i32 70, label %sw.bb7
    i32 97, label %sw.bb11
    i32 98, label %sw.bb11
    i32 99, label %sw.bb11
    i32 100, label %sw.bb11
    i32 101, label %sw.bb11
    i32 102, label %sw.bb11
  ], !dbg !3094

sw.bb:                                            ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %9 = load i32, i32* %result, align 4, !dbg !3095
  %shl = shl i32 %9, 4, !dbg !3095
  store i32 %shl, i32* %result, align 4, !dbg !3095
  %10 = load i32, i32* %c, align 4, !dbg !3097
  %sub = sub nsw i32 %10, 48, !dbg !3098
  %11 = load i32, i32* %result, align 4, !dbg !3099
  %or = or i32 %11, %sub, !dbg !3099
  store i32 %or, i32* %result, align 4, !dbg !3099
  br label %sw.epilog, !dbg !3100

sw.bb7:                                           ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %12 = load i32, i32* %result, align 4, !dbg !3101
  %shl8 = shl i32 %12, 4, !dbg !3101
  store i32 %shl8, i32* %result, align 4, !dbg !3101
  %13 = load i32, i32* %c, align 4, !dbg !3102
  %sub9 = sub nsw i32 %13, 65, !dbg !3103
  %add = add nsw i32 10, %sub9, !dbg !3104
  %14 = load i32, i32* %result, align 4, !dbg !3105
  %add10 = add nsw i32 %14, %add, !dbg !3105
  store i32 %add10, i32* %result, align 4, !dbg !3105
  br label %sw.epilog, !dbg !3106

sw.bb11:                                          ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %15 = load i32, i32* %result, align 4, !dbg !3107
  %shl12 = shl i32 %15, 4, !dbg !3107
  store i32 %shl12, i32* %result, align 4, !dbg !3107
  %16 = load i32, i32* %c, align 4, !dbg !3108
  %sub13 = sub nsw i32 %16, 97, !dbg !3109
  %add14 = add nsw i32 10, %sub13, !dbg !3110
  %17 = load i32, i32* %result, align 4, !dbg !3111
  %add15 = add nsw i32 %17, %add14, !dbg !3111
  store i32 %add15, i32* %result, align 4, !dbg !3111
  br label %sw.epilog, !dbg !3112

sw.epilog:                                        ; preds = %for.body, %sw.bb11, %sw.bb7, %sw.bb
  %18 = load i32, i32* %result, align 4, !dbg !3113
  %cmp16 = icmp sge i32 %18, 1114112, !dbg !3115
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !3116

if.then18:                                        ; preds = %sw.epilog
  store i32 -1, i32* %retval, align 4, !dbg !3117
  br label %return, !dbg !3117

if.end:                                           ; preds = %sw.epilog
  br label %for.inc, !dbg !3118

for.inc:                                          ; preds = %if.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !3119
  %add.ptr19 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !3119
  store i8* %add.ptr19, i8** %ptr.addr, align 8, !dbg !3119
  br label %for.cond, !dbg !3120

for.end:                                          ; preds = %for.cond
  br label %if.end37, !dbg !3122

if.else:                                          ; preds = %entry
  br label %for.cond20, !dbg !3123

for.cond20:                                       ; preds = %for.inc34, %if.else
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !3125
  %21 = load i8, i8* %20, align 1, !dbg !3125
  %conv21 = sext i8 %21 to i32, !dbg !3125
  %cmp22 = icmp eq i32 %conv21, 59, !dbg !3125
  %lnot24 = xor i1 %cmp22, true, !dbg !3129
  br i1 %lnot24, label %for.body25, label %for.end36, !dbg !3130

for.body25:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata i32* %c26, metadata !3131, metadata !444), !dbg !3133
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !3134
  %23 = load i8, i8* %22, align 1, !dbg !3134
  %conv27 = sext i8 %23 to i32, !dbg !3134
  store i32 %conv27, i32* %c26, align 4, !dbg !3133
  %24 = load i32, i32* %result, align 4, !dbg !3135
  %mul = mul nsw i32 %24, 10, !dbg !3135
  store i32 %mul, i32* %result, align 4, !dbg !3135
  %25 = load i32, i32* %c26, align 4, !dbg !3136
  %sub28 = sub nsw i32 %25, 48, !dbg !3137
  %26 = load i32, i32* %result, align 4, !dbg !3138
  %add29 = add nsw i32 %26, %sub28, !dbg !3138
  store i32 %add29, i32* %result, align 4, !dbg !3138
  %27 = load i32, i32* %result, align 4, !dbg !3139
  %cmp30 = icmp sge i32 %27, 1114112, !dbg !3141
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !3142

if.then32:                                        ; preds = %for.body25
  store i32 -1, i32* %retval, align 4, !dbg !3143
  br label %return, !dbg !3143

if.end33:                                         ; preds = %for.body25
  br label %for.inc34, !dbg !3144

for.inc34:                                        ; preds = %if.end33
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !3145
  %add.ptr35 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !3145
  store i8* %add.ptr35, i8** %ptr.addr, align 8, !dbg !3145
  br label %for.cond20, !dbg !3147

for.end36:                                        ; preds = %for.cond20
  br label %if.end37

if.end37:                                         ; preds = %for.end36, %for.end
  %29 = load i32, i32* %result, align 4, !dbg !3148
  %call = call i32 @checkCharRefNumber(i32 %29), !dbg !3149
  store i32 %call, i32* %retval, align 4, !dbg !3150
  br label %return, !dbg !3150

return:                                           ; preds = %if.end37, %if.then32, %if.then18
  %30 = load i32, i32* %retval, align 4, !dbg !3151
  ret i32 %30, !dbg !3151
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_predefinedEntityName(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end) #0 !dbg !274 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !3152, metadata !444), !dbg !3153
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3154, metadata !444), !dbg !3155
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3156, metadata !444), !dbg !3157
  %0 = load i8*, i8** %end.addr, align 8, !dbg !3158
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3159
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !3160
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !3160
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3160
  %div = sdiv i64 %sub.ptr.sub, 1, !dbg !3161
  switch i64 %div, label %sw.epilog64 [
    i64 2, label %sw.bb
    i64 3, label %sw.bb5
    i64 4, label %sw.bb23
  ], !dbg !3162

sw.bb:                                            ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3163
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !3163
  %3 = load i8, i8* %add.ptr, align 1, !dbg !3163
  %conv = sext i8 %3 to i32, !dbg !3163
  %cmp = icmp eq i32 %conv, 116, !dbg !3163
  br i1 %cmp, label %if.then, label %if.end, !dbg !3166

if.then:                                          ; preds = %sw.bb
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !3167
  %5 = load i8, i8* %4, align 1, !dbg !3167
  %conv2 = sext i8 %5 to i32, !dbg !3167
  switch i32 %conv2, label %sw.epilog [
    i32 108, label %sw.bb3
    i32 103, label %sw.bb4
  ], !dbg !3169

sw.bb3:                                           ; preds = %if.then
  store i32 60, i32* %retval, align 4, !dbg !3170
  br label %return, !dbg !3170

sw.bb4:                                           ; preds = %if.then
  store i32 62, i32* %retval, align 4, !dbg !3172
  br label %return, !dbg !3172

sw.epilog:                                        ; preds = %if.then
  br label %if.end, !dbg !3173

if.end:                                           ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog64, !dbg !3174

sw.bb5:                                           ; preds = %entry
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !3175
  %7 = load i8, i8* %6, align 1, !dbg !3175
  %conv6 = sext i8 %7 to i32, !dbg !3175
  %cmp7 = icmp eq i32 %conv6, 97, !dbg !3175
  br i1 %cmp7, label %if.then9, label %if.end22, !dbg !3177

if.then9:                                         ; preds = %sw.bb5
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !3178
  %add.ptr10 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !3178
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !3178
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !3180
  %10 = load i8, i8* %9, align 1, !dbg !3180
  %conv11 = sext i8 %10 to i32, !dbg !3180
  %cmp12 = icmp eq i32 %conv11, 109, !dbg !3180
  br i1 %cmp12, label %if.then14, label %if.end21, !dbg !3182

if.then14:                                        ; preds = %if.then9
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !3183
  %add.ptr15 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !3183
  store i8* %add.ptr15, i8** %ptr.addr, align 8, !dbg !3183
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !3185
  %13 = load i8, i8* %12, align 1, !dbg !3185
  %conv16 = sext i8 %13 to i32, !dbg !3185
  %cmp17 = icmp eq i32 %conv16, 112, !dbg !3185
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !3187

if.then19:                                        ; preds = %if.then14
  store i32 38, i32* %retval, align 4, !dbg !3188
  br label %return, !dbg !3188

if.end20:                                         ; preds = %if.then14
  br label %if.end21, !dbg !3189

if.end21:                                         ; preds = %if.end20, %if.then9
  br label %if.end22, !dbg !3190

if.end22:                                         ; preds = %if.end21, %sw.bb5
  br label %sw.epilog64, !dbg !3191

sw.bb23:                                          ; preds = %entry
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !3192
  %15 = load i8, i8* %14, align 1, !dbg !3192
  %conv24 = sext i8 %15 to i32, !dbg !3192
  switch i32 %conv24, label %sw.epilog63 [
    i32 113, label %sw.bb25
    i32 97, label %sw.bb44
  ], !dbg !3193

sw.bb25:                                          ; preds = %sw.bb23
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !3194
  %add.ptr26 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !3194
  store i8* %add.ptr26, i8** %ptr.addr, align 8, !dbg !3194
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !3196
  %18 = load i8, i8* %17, align 1, !dbg !3196
  %conv27 = sext i8 %18 to i32, !dbg !3196
  %cmp28 = icmp eq i32 %conv27, 117, !dbg !3196
  br i1 %cmp28, label %if.then30, label %if.end43, !dbg !3198

if.then30:                                        ; preds = %sw.bb25
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !3199
  %add.ptr31 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !3199
  store i8* %add.ptr31, i8** %ptr.addr, align 8, !dbg !3199
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !3201
  %21 = load i8, i8* %20, align 1, !dbg !3201
  %conv32 = sext i8 %21 to i32, !dbg !3201
  %cmp33 = icmp eq i32 %conv32, 111, !dbg !3201
  br i1 %cmp33, label %if.then35, label %if.end42, !dbg !3203

if.then35:                                        ; preds = %if.then30
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !3204
  %add.ptr36 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !3204
  store i8* %add.ptr36, i8** %ptr.addr, align 8, !dbg !3204
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !3206
  %24 = load i8, i8* %23, align 1, !dbg !3206
  %conv37 = sext i8 %24 to i32, !dbg !3206
  %cmp38 = icmp eq i32 %conv37, 116, !dbg !3206
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !3208

if.then40:                                        ; preds = %if.then35
  store i32 34, i32* %retval, align 4, !dbg !3209
  br label %return, !dbg !3209

if.end41:                                         ; preds = %if.then35
  br label %if.end42, !dbg !3210

if.end42:                                         ; preds = %if.end41, %if.then30
  br label %if.end43, !dbg !3211

if.end43:                                         ; preds = %if.end42, %sw.bb25
  br label %sw.epilog63, !dbg !3212

sw.bb44:                                          ; preds = %sw.bb23
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !3213
  %add.ptr45 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !3213
  store i8* %add.ptr45, i8** %ptr.addr, align 8, !dbg !3213
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !3214
  %27 = load i8, i8* %26, align 1, !dbg !3214
  %conv46 = sext i8 %27 to i32, !dbg !3214
  %cmp47 = icmp eq i32 %conv46, 112, !dbg !3214
  br i1 %cmp47, label %if.then49, label %if.end62, !dbg !3216

if.then49:                                        ; preds = %sw.bb44
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !3217
  %add.ptr50 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !3217
  store i8* %add.ptr50, i8** %ptr.addr, align 8, !dbg !3217
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !3219
  %30 = load i8, i8* %29, align 1, !dbg !3219
  %conv51 = sext i8 %30 to i32, !dbg !3219
  %cmp52 = icmp eq i32 %conv51, 111, !dbg !3219
  br i1 %cmp52, label %if.then54, label %if.end61, !dbg !3221

if.then54:                                        ; preds = %if.then49
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !3222
  %add.ptr55 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !3222
  store i8* %add.ptr55, i8** %ptr.addr, align 8, !dbg !3222
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !3224
  %33 = load i8, i8* %32, align 1, !dbg !3224
  %conv56 = sext i8 %33 to i32, !dbg !3224
  %cmp57 = icmp eq i32 %conv56, 115, !dbg !3224
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !3226

if.then59:                                        ; preds = %if.then54
  store i32 39, i32* %retval, align 4, !dbg !3227
  br label %return, !dbg !3227

if.end60:                                         ; preds = %if.then54
  br label %if.end61, !dbg !3228

if.end61:                                         ; preds = %if.end60, %if.then49
  br label %if.end62, !dbg !3229

if.end62:                                         ; preds = %if.end61, %sw.bb44
  br label %sw.epilog63, !dbg !3230

sw.epilog63:                                      ; preds = %sw.bb23, %if.end62, %if.end43
  br label %sw.epilog64, !dbg !3231

sw.epilog64:                                      ; preds = %sw.epilog63, %entry, %if.end22, %if.end
  store i32 0, i32* %retval, align 4, !dbg !3232
  br label %return, !dbg !3232

return:                                           ; preds = %sw.epilog64, %if.then59, %if.then40, %if.then19, %sw.bb4, %sw.bb3
  %34 = load i32, i32* %retval, align 4, !dbg !3233
  ret i32 %34, !dbg !3233
}

; Function Attrs: nounwind uwtable
define internal void @normal_updatePosition(%struct.encoding* %enc, i8* %ptr, i8* %end, %struct.position* %pos) #0 !dbg !275 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pos.addr = alloca %struct.position*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !3234, metadata !444), !dbg !3235
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3236, metadata !444), !dbg !3237
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3238, metadata !444), !dbg !3239
  store %struct.position* %pos, %struct.position** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.position** %pos.addr, metadata !3240, metadata !444), !dbg !3241
  br label %while.cond, !dbg !3242

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !3243
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3243
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !3243
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !3243
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3243
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !3243
  br i1 %cmp, label %while.body, label %while.end, !dbg !3245

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3246
  %3 = load i8, i8* %2, align 1, !dbg !3246
  %idxprom = zext i8 %3 to i64, !dbg !3246
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3246
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !3246
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !3246
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !3246
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3246
  %conv = zext i8 %6 to i32, !dbg !3246
  switch i32 %conv, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb1
    i32 7, label %sw.bb3
    i32 10, label %sw.bb5
    i32 9, label %sw.bb7
  ], !dbg !3248

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !3249
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2, !dbg !3249
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !3249
  br label %sw.epilog, !dbg !3249

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !3251
  %add.ptr2 = getelementptr inbounds i8, i8* %8, i64 3, !dbg !3251
  store i8* %add.ptr2, i8** %ptr.addr, align 8, !dbg !3251
  br label %sw.epilog, !dbg !3251

sw.bb3:                                           ; preds = %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !3253
  %add.ptr4 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !3253
  store i8* %add.ptr4, i8** %ptr.addr, align 8, !dbg !3253
  br label %sw.epilog, !dbg !3253

sw.bb5:                                           ; preds = %while.body
  %10 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !3255
  %columnNumber = getelementptr inbounds %struct.position, %struct.position* %10, i32 0, i32 1, !dbg !3256
  store i64 -1, i64* %columnNumber, align 8, !dbg !3257
  %11 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !3258
  %lineNumber = getelementptr inbounds %struct.position, %struct.position* %11, i32 0, i32 0, !dbg !3259
  %12 = load i64, i64* %lineNumber, align 8, !dbg !3260
  %inc = add i64 %12, 1, !dbg !3260
  store i64 %inc, i64* %lineNumber, align 8, !dbg !3260
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !3261
  %add.ptr6 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !3261
  store i8* %add.ptr6, i8** %ptr.addr, align 8, !dbg !3261
  br label %sw.epilog, !dbg !3262

sw.bb7:                                           ; preds = %while.body
  %14 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !3263
  %lineNumber8 = getelementptr inbounds %struct.position, %struct.position* %14, i32 0, i32 0, !dbg !3264
  %15 = load i64, i64* %lineNumber8, align 8, !dbg !3265
  %inc9 = add i64 %15, 1, !dbg !3265
  store i64 %inc9, i64* %lineNumber8, align 8, !dbg !3265
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !3266
  %add.ptr10 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !3266
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !3266
  %17 = load i8*, i8** %end.addr, align 8, !dbg !3267
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !3267
  %sub.ptr.lhs.cast11 = ptrtoint i8* %17 to i64, !dbg !3267
  %sub.ptr.rhs.cast12 = ptrtoint i8* %18 to i64, !dbg !3267
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !3267
  %cmp14 = icmp sge i64 %sub.ptr.sub13, 1, !dbg !3267
  br i1 %cmp14, label %land.lhs.true, label %if.end, !dbg !3269

land.lhs.true:                                    ; preds = %sw.bb7
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !3270
  %20 = load i8, i8* %19, align 1, !dbg !3270
  %idxprom16 = zext i8 %20 to i64, !dbg !3270
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3270
  %22 = bitcast %struct.encoding* %21 to %struct.normal_encoding*, !dbg !3270
  %type17 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %22, i32 0, i32 1, !dbg !3270
  %arrayidx18 = getelementptr inbounds [256 x i8], [256 x i8]* %type17, i64 0, i64 %idxprom16, !dbg !3270
  %23 = load i8, i8* %arrayidx18, align 1, !dbg !3270
  %conv19 = zext i8 %23 to i32, !dbg !3270
  %cmp20 = icmp eq i32 %conv19, 10, !dbg !3272
  br i1 %cmp20, label %if.then, label %if.end, !dbg !3273

if.then:                                          ; preds = %land.lhs.true
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !3274
  %add.ptr22 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !3274
  store i8* %add.ptr22, i8** %ptr.addr, align 8, !dbg !3274
  br label %if.end, !dbg !3275

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb7
  %25 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !3276
  %columnNumber23 = getelementptr inbounds %struct.position, %struct.position* %25, i32 0, i32 1, !dbg !3277
  store i64 -1, i64* %columnNumber23, align 8, !dbg !3278
  br label %sw.epilog, !dbg !3279

sw.default:                                       ; preds = %while.body
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !3280
  %add.ptr24 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !3280
  store i8* %add.ptr24, i8** %ptr.addr, align 8, !dbg !3280
  br label %sw.epilog, !dbg !3281

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %27 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !3282
  %columnNumber25 = getelementptr inbounds %struct.position, %struct.position* %27, i32 0, i32 1, !dbg !3283
  %28 = load i64, i64* %columnNumber25, align 8, !dbg !3284
  %inc26 = add i64 %28, 1, !dbg !3284
  store i64 %inc26, i64* %columnNumber25, align 8, !dbg !3284
  br label %while.cond, !dbg !3285

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3287
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_isPublicId(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %badPtr) #0 !dbg !276 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %badPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !3288, metadata !444), !dbg !3289
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3290, metadata !444), !dbg !3291
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3292, metadata !444), !dbg !3293
  store i8** %badPtr, i8*** %badPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %badPtr.addr, metadata !3294, metadata !444), !dbg !3295
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !3296
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3296
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !3296
  %1 = load i8*, i8** %end.addr, align 8, !dbg !3297
  %add.ptr1 = getelementptr inbounds i8, i8* %1, i64 -1, !dbg !3297
  store i8* %add.ptr1, i8** %end.addr, align 8, !dbg !3297
  br label %for.cond, !dbg !3298

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %end.addr, align 8, !dbg !3299
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !3299
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !3299
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !3299
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3299
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !3299
  br i1 %cmp, label %for.body, label %for.end, !dbg !3303

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !3304
  %5 = load i8, i8* %4, align 1, !dbg !3304
  %idxprom = zext i8 %5 to i64, !dbg !3304
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3304
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !3304
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !3304
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !3304
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3304
  %conv = zext i8 %8 to i32, !dbg !3304
  switch i32 %conv, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
    i32 27, label %sw.bb
    i32 13, label %sw.bb
    i32 31, label %sw.bb
    i32 32, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 17, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 18, label %sw.bb
    i32 16, label %sw.bb
    i32 33, label %sw.bb
    i32 30, label %sw.bb
    i32 19, label %sw.bb
    i32 21, label %sw.bb2
    i32 26, label %sw.bb6
    i32 22, label %sw.bb6
  ], !dbg !3306

sw.bb:                                            ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  br label %sw.epilog13, !dbg !3307

sw.bb2:                                           ; preds = %for.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !3309
  %10 = load i8, i8* %9, align 1, !dbg !3309
  %conv3 = sext i8 %10 to i32, !dbg !3309
  %cmp4 = icmp eq i32 %conv3, 9, !dbg !3309
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3311

if.then:                                          ; preds = %sw.bb2
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !3312
  %12 = load i8**, i8*** %badPtr.addr, align 8, !dbg !3314
  store i8* %11, i8** %12, align 8, !dbg !3315
  store i32 0, i32* %retval, align 4, !dbg !3316
  br label %return, !dbg !3316

if.end:                                           ; preds = %sw.bb2
  br label %sw.epilog13, !dbg !3317

sw.bb6:                                           ; preds = %for.body, %for.body
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !3318
  %14 = load i8, i8* %13, align 1, !dbg !3318
  %conv7 = sext i8 %14 to i32, !dbg !3318
  %and = and i32 %conv7, -128, !dbg !3320
  %tobool = icmp ne i32 %and, 0, !dbg !3320
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !3321

if.then8:                                         ; preds = %sw.bb6
  br label %sw.epilog13, !dbg !3322

if.end9:                                          ; preds = %sw.bb6
  br label %sw.default, !dbg !3323

sw.default:                                       ; preds = %for.body, %if.end9
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !3325
  %16 = load i8, i8* %15, align 1, !dbg !3325
  %conv10 = sext i8 %16 to i32, !dbg !3325
  switch i32 %conv10, label %sw.default12 [
    i32 36, label %sw.bb11
    i32 64, label %sw.bb11
  ], !dbg !3326

sw.bb11:                                          ; preds = %sw.default, %sw.default
  br label %sw.epilog, !dbg !3327

sw.default12:                                     ; preds = %sw.default
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !3329
  %18 = load i8**, i8*** %badPtr.addr, align 8, !dbg !3330
  store i8* %17, i8** %18, align 8, !dbg !3331
  store i32 0, i32* %retval, align 4, !dbg !3332
  br label %return, !dbg !3332

sw.epilog:                                        ; preds = %sw.bb11
  br label %sw.epilog13, !dbg !3333

sw.epilog13:                                      ; preds = %sw.epilog, %if.then8, %if.end, %sw.bb
  br label %for.inc, !dbg !3334

for.inc:                                          ; preds = %sw.epilog13
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !3335
  %add.ptr14 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !3335
  store i8* %add.ptr14, i8** %ptr.addr, align 8, !dbg !3335
  br label %for.cond, !dbg !3337

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !3338
  br label %return, !dbg !3338

return:                                           ; preds = %for.end, %sw.default12, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !3339
  ret i32 %20, !dbg !3339
}

; Function Attrs: nounwind uwtable
define internal i32 @latin1_toUtf8(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i8** %toP, i8* %toLim) #0 !dbg !277 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i8**, align 8
  %toLim.addr = alloca i8*, align 8
  %c = alloca i8, align 1
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !3340, metadata !444), !dbg !3341
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !3342, metadata !444), !dbg !3343
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !3344, metadata !444), !dbg !3345
  store i8** %toP, i8*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %toP.addr, metadata !3346, metadata !444), !dbg !3347
  store i8* %toLim, i8** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toLim.addr, metadata !3348, metadata !444), !dbg !3349
  br label %for.cond, !dbg !3350

for.cond:                                         ; preds = %if.end20, %entry
  call void @llvm.dbg.declare(metadata i8* %c, metadata !3351, metadata !444), !dbg !3355
  %0 = load i8**, i8*** %fromP.addr, align 8, !dbg !3356
  %1 = load i8*, i8** %0, align 8, !dbg !3358
  %2 = load i8*, i8** %fromLim.addr, align 8, !dbg !3359
  %cmp = icmp eq i8* %1, %2, !dbg !3360
  br i1 %cmp, label %if.then, label %if.end, !dbg !3361

if.then:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3362
  br label %return, !dbg !3362

if.end:                                           ; preds = %for.cond
  %3 = load i8**, i8*** %fromP.addr, align 8, !dbg !3363
  %4 = load i8*, i8** %3, align 8, !dbg !3364
  %5 = load i8, i8* %4, align 1, !dbg !3365
  store i8 %5, i8* %c, align 1, !dbg !3366
  %6 = load i8, i8* %c, align 1, !dbg !3367
  %conv = zext i8 %6 to i32, !dbg !3367
  %and = and i32 %conv, 128, !dbg !3369
  %tobool = icmp ne i32 %and, 0, !dbg !3369
  br i1 %tobool, label %if.then1, label %if.else, !dbg !3370

if.then1:                                         ; preds = %if.end
  %7 = load i8*, i8** %toLim.addr, align 8, !dbg !3371
  %8 = load i8**, i8*** %toP.addr, align 8, !dbg !3374
  %9 = load i8*, i8** %8, align 8, !dbg !3375
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !3376
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !3376
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3376
  %cmp2 = icmp slt i64 %sub.ptr.sub, 2, !dbg !3377
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !3378

if.then4:                                         ; preds = %if.then1
  store i32 2, i32* %retval, align 4, !dbg !3379
  br label %return, !dbg !3379

if.end5:                                          ; preds = %if.then1
  %10 = load i8, i8* %c, align 1, !dbg !3380
  %conv6 = zext i8 %10 to i32, !dbg !3380
  %shr = ashr i32 %conv6, 6, !dbg !3381
  %or = or i32 %shr, 192, !dbg !3382
  %conv7 = trunc i32 %or to i8, !dbg !3383
  %11 = load i8**, i8*** %toP.addr, align 8, !dbg !3384
  %12 = load i8*, i8** %11, align 8, !dbg !3385
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !3385
  store i8* %incdec.ptr, i8** %11, align 8, !dbg !3385
  store i8 %conv7, i8* %12, align 1, !dbg !3386
  %13 = load i8, i8* %c, align 1, !dbg !3387
  %conv8 = zext i8 %13 to i32, !dbg !3387
  %and9 = and i32 %conv8, 63, !dbg !3388
  %or10 = or i32 %and9, 128, !dbg !3389
  %conv11 = trunc i32 %or10 to i8, !dbg !3390
  %14 = load i8**, i8*** %toP.addr, align 8, !dbg !3391
  %15 = load i8*, i8** %14, align 8, !dbg !3392
  %incdec.ptr12 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !3392
  store i8* %incdec.ptr12, i8** %14, align 8, !dbg !3392
  store i8 %conv11, i8* %15, align 1, !dbg !3393
  %16 = load i8**, i8*** %fromP.addr, align 8, !dbg !3394
  %17 = load i8*, i8** %16, align 8, !dbg !3395
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !3395
  store i8* %incdec.ptr13, i8** %16, align 8, !dbg !3395
  br label %if.end20, !dbg !3396

if.else:                                          ; preds = %if.end
  %18 = load i8**, i8*** %toP.addr, align 8, !dbg !3397
  %19 = load i8*, i8** %18, align 8, !dbg !3400
  %20 = load i8*, i8** %toLim.addr, align 8, !dbg !3401
  %cmp14 = icmp eq i8* %19, %20, !dbg !3402
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !3403

if.then16:                                        ; preds = %if.else
  store i32 2, i32* %retval, align 4, !dbg !3404
  br label %return, !dbg !3404

if.end17:                                         ; preds = %if.else
  %21 = load i8**, i8*** %fromP.addr, align 8, !dbg !3405
  %22 = load i8*, i8** %21, align 8, !dbg !3406
  %incdec.ptr18 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !3406
  store i8* %incdec.ptr18, i8** %21, align 8, !dbg !3406
  %23 = load i8, i8* %22, align 1, !dbg !3407
  %24 = load i8**, i8*** %toP.addr, align 8, !dbg !3408
  %25 = load i8*, i8** %24, align 8, !dbg !3409
  %incdec.ptr19 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !3409
  store i8* %incdec.ptr19, i8** %24, align 8, !dbg !3409
  store i8 %23, i8* %25, align 1, !dbg !3410
  br label %if.end20

if.end20:                                         ; preds = %if.end17, %if.end5
  br label %for.cond, !dbg !3411

return:                                           ; preds = %if.then16, %if.then4, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !3413
  ret i32 %26, !dbg !3413
}

; Function Attrs: nounwind uwtable
define internal i32 @latin1_toUtf16(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i16** %toP, i16* %toLim) #0 !dbg !278 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i16**, align 8
  %toLim.addr = alloca i16*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !3414, metadata !444), !dbg !3415
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !3416, metadata !444), !dbg !3417
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !3418, metadata !444), !dbg !3419
  store i16** %toP, i16*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %toP.addr, metadata !3420, metadata !444), !dbg !3421
  store i16* %toLim, i16** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toLim.addr, metadata !3422, metadata !444), !dbg !3423
  br label %while.cond, !dbg !3424

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8**, i8*** %fromP.addr, align 8, !dbg !3425
  %1 = load i8*, i8** %0, align 8, !dbg !3427
  %2 = load i8*, i8** %fromLim.addr, align 8, !dbg !3428
  %cmp = icmp ult i8* %1, %2, !dbg !3429
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3430

land.rhs:                                         ; preds = %while.cond
  %3 = load i16**, i16*** %toP.addr, align 8, !dbg !3431
  %4 = load i16*, i16** %3, align 8, !dbg !3433
  %5 = load i16*, i16** %toLim.addr, align 8, !dbg !3434
  %cmp1 = icmp ult i16* %4, %5, !dbg !3435
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !3436

while.body:                                       ; preds = %land.end
  %7 = load i8**, i8*** %fromP.addr, align 8, !dbg !3438
  %8 = load i8*, i8** %7, align 8, !dbg !3439
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3439
  store i8* %incdec.ptr, i8** %7, align 8, !dbg !3439
  %9 = load i8, i8* %8, align 1, !dbg !3440
  %conv = zext i8 %9 to i16, !dbg !3441
  %10 = load i16**, i16*** %toP.addr, align 8, !dbg !3442
  %11 = load i16*, i16** %10, align 8, !dbg !3443
  %incdec.ptr2 = getelementptr inbounds i16, i16* %11, i32 1, !dbg !3443
  store i16* %incdec.ptr2, i16** %10, align 8, !dbg !3443
  store i16 %conv, i16* %11, align 2, !dbg !3444
  br label %while.cond, !dbg !3445

while.end:                                        ; preds = %land.end
  %12 = load i16**, i16*** %toP.addr, align 8, !dbg !3447
  %13 = load i16*, i16** %12, align 8, !dbg !3449
  %14 = load i16*, i16** %toLim.addr, align 8, !dbg !3450
  %cmp3 = icmp eq i16* %13, %14, !dbg !3451
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !3452

land.lhs.true:                                    ; preds = %while.end
  %15 = load i8**, i8*** %fromP.addr, align 8, !dbg !3453
  %16 = load i8*, i8** %15, align 8, !dbg !3455
  %17 = load i8*, i8** %fromLim.addr, align 8, !dbg !3456
  %cmp5 = icmp ult i8* %16, %17, !dbg !3457
  br i1 %cmp5, label %if.then, label %if.else, !dbg !3458

if.then:                                          ; preds = %land.lhs.true
  store i32 2, i32* %retval, align 4, !dbg !3459
  br label %return, !dbg !3459

if.else:                                          ; preds = %land.lhs.true, %while.end
  store i32 0, i32* %retval, align 4, !dbg !3460
  br label %return, !dbg !3460

return:                                           ; preds = %if.else, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !3461
  ret i32 %18, !dbg !3461
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanLit(i32 %open, %struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !247 {
entry:
  %retval = alloca i32, align 4
  %open.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %t = alloca i32, align 4
  store i32 %open, i32* %open.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %open.addr, metadata !3462, metadata !444), !dbg !3463
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !3464, metadata !444), !dbg !3465
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3466, metadata !444), !dbg !3467
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3468, metadata !444), !dbg !3469
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !3470, metadata !444), !dbg !3471
  br label %while.cond, !dbg !3472

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !3473
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3473
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !3473
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !3473
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3473
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !3473
  br i1 %cmp, label %while.body, label %while.end, !dbg !3475

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %t, metadata !3476, metadata !444), !dbg !3478
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3479
  %3 = load i8, i8* %2, align 1, !dbg !3479
  %idxprom = zext i8 %3 to i64, !dbg !3479
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3479
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !3479
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !3479
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !3479
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3479
  %conv = zext i8 %6 to i32, !dbg !3479
  store i32 %conv, i32* %t, align 4, !dbg !3478
  %7 = load i32, i32* %t, align 4, !dbg !3480
  switch i32 %7, label %sw.default53 [
    i32 5, label %sw.bb
    i32 6, label %sw.bb8
    i32 7, label %sw.bb21
    i32 0, label %sw.bb34
    i32 1, label %sw.bb34
    i32 8, label %sw.bb34
    i32 12, label %sw.bb35
    i32 13, label %sw.bb35
  ], !dbg !3481

sw.bb:                                            ; preds = %while.body
  %8 = load i8*, i8** %end.addr, align 8, !dbg !3482
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !3482
  %sub.ptr.lhs.cast1 = ptrtoint i8* %8 to i64, !dbg !3482
  %sub.ptr.rhs.cast2 = ptrtoint i8* %9 to i64, !dbg !3482
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !3482
  %cmp4 = icmp slt i64 %sub.ptr.sub3, 2, !dbg !3482
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3485

if.then:                                          ; preds = %sw.bb
  store i32 -2, i32* %retval, align 4, !dbg !3486
  br label %return, !dbg !3486

if.end:                                           ; preds = %sw.bb
  %10 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3488
  %11 = bitcast %struct.encoding* %10 to %struct.normal_encoding*, !dbg !3488
  %isInvalid2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %11, i32 0, i32 8, !dbg !3488
  %12 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid2, align 8, !dbg !3488
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3488
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !3488
  %call = call i32 %12(%struct.encoding* %13, i8* %14), !dbg !3488
  %tobool = icmp ne i32 %call, 0, !dbg !3488
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !3488

if.then6:                                         ; preds = %if.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !3491
  %16 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3491
  store i8* %15, i8** %16, align 8, !dbg !3491
  store i32 0, i32* %retval, align 4, !dbg !3491
  br label %return, !dbg !3491

if.end7:                                          ; preds = %if.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !3494
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 2, !dbg !3494
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !3494
  br label %sw.epilog, !dbg !3494

sw.bb8:                                           ; preds = %while.body
  %18 = load i8*, i8** %end.addr, align 8, !dbg !3496
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !3496
  %sub.ptr.lhs.cast9 = ptrtoint i8* %18 to i64, !dbg !3496
  %sub.ptr.rhs.cast10 = ptrtoint i8* %19 to i64, !dbg !3496
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10, !dbg !3496
  %cmp12 = icmp slt i64 %sub.ptr.sub11, 3, !dbg !3496
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3496

if.then14:                                        ; preds = %sw.bb8
  store i32 -2, i32* %retval, align 4, !dbg !3499
  br label %return, !dbg !3499

if.end15:                                         ; preds = %sw.bb8
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3501
  %21 = bitcast %struct.encoding* %20 to %struct.normal_encoding*, !dbg !3501
  %isInvalid3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %21, i32 0, i32 9, !dbg !3501
  %22 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3, align 8, !dbg !3501
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3501
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !3501
  %call16 = call i32 %22(%struct.encoding* %23, i8* %24), !dbg !3501
  %tobool17 = icmp ne i32 %call16, 0, !dbg !3501
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3501

if.then18:                                        ; preds = %if.end15
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !3504
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3504
  store i8* %25, i8** %26, align 8, !dbg !3504
  store i32 0, i32* %retval, align 4, !dbg !3504
  br label %return, !dbg !3504

if.end19:                                         ; preds = %if.end15
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !3507
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !3507
  store i8* %add.ptr20, i8** %ptr.addr, align 8, !dbg !3507
  br label %sw.epilog, !dbg !3507

sw.bb21:                                          ; preds = %while.body
  %28 = load i8*, i8** %end.addr, align 8, !dbg !3509
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !3509
  %sub.ptr.lhs.cast22 = ptrtoint i8* %28 to i64, !dbg !3509
  %sub.ptr.rhs.cast23 = ptrtoint i8* %29 to i64, !dbg !3509
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !3509
  %cmp25 = icmp slt i64 %sub.ptr.sub24, 4, !dbg !3509
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !3509

if.then27:                                        ; preds = %sw.bb21
  store i32 -2, i32* %retval, align 4, !dbg !3512
  br label %return, !dbg !3512

if.end28:                                         ; preds = %sw.bb21
  %30 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3514
  %31 = bitcast %struct.encoding* %30 to %struct.normal_encoding*, !dbg !3514
  %isInvalid4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %31, i32 0, i32 10, !dbg !3514
  %32 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4, align 8, !dbg !3514
  %33 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3514
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !3514
  %call29 = call i32 %32(%struct.encoding* %33, i8* %34), !dbg !3514
  %tobool30 = icmp ne i32 %call29, 0, !dbg !3514
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !3514

if.then31:                                        ; preds = %if.end28
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !3517
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3517
  store i8* %35, i8** %36, align 8, !dbg !3517
  store i32 0, i32* %retval, align 4, !dbg !3517
  br label %return, !dbg !3517

if.end32:                                         ; preds = %if.end28
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !3520
  %add.ptr33 = getelementptr inbounds i8, i8* %37, i64 4, !dbg !3520
  store i8* %add.ptr33, i8** %ptr.addr, align 8, !dbg !3520
  br label %sw.epilog, !dbg !3520

sw.bb34:                                          ; preds = %while.body, %while.body, %while.body
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !3522
  %39 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3522
  store i8* %38, i8** %39, align 8, !dbg !3522
  store i32 0, i32* %retval, align 4, !dbg !3522
  br label %return, !dbg !3522

sw.bb35:                                          ; preds = %while.body, %while.body
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !3524
  %add.ptr36 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !3524
  store i8* %add.ptr36, i8** %ptr.addr, align 8, !dbg !3524
  %41 = load i32, i32* %t, align 4, !dbg !3525
  %42 = load i32, i32* %open.addr, align 4, !dbg !3527
  %cmp37 = icmp ne i32 %41, %42, !dbg !3528
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3529

if.then39:                                        ; preds = %sw.bb35
  br label %sw.epilog, !dbg !3530

if.end40:                                         ; preds = %sw.bb35
  %43 = load i8*, i8** %end.addr, align 8, !dbg !3531
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !3531
  %sub.ptr.lhs.cast41 = ptrtoint i8* %43 to i64, !dbg !3531
  %sub.ptr.rhs.cast42 = ptrtoint i8* %44 to i64, !dbg !3531
  %sub.ptr.sub43 = sub i64 %sub.ptr.lhs.cast41, %sub.ptr.rhs.cast42, !dbg !3531
  %cmp44 = icmp sge i64 %sub.ptr.sub43, 1, !dbg !3531
  br i1 %cmp44, label %if.end47, label %if.then46, !dbg !3533

if.then46:                                        ; preds = %if.end40
  store i32 -27, i32* %retval, align 4, !dbg !3534
  br label %return, !dbg !3534

if.end47:                                         ; preds = %if.end40
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !3535
  %46 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3536
  store i8* %45, i8** %46, align 8, !dbg !3537
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !3538
  %48 = load i8, i8* %47, align 1, !dbg !3538
  %idxprom48 = zext i8 %48 to i64, !dbg !3538
  %49 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3538
  %50 = bitcast %struct.encoding* %49 to %struct.normal_encoding*, !dbg !3538
  %type49 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %50, i32 0, i32 1, !dbg !3538
  %arrayidx50 = getelementptr inbounds [256 x i8], [256 x i8]* %type49, i64 0, i64 %idxprom48, !dbg !3538
  %51 = load i8, i8* %arrayidx50, align 1, !dbg !3538
  %conv51 = zext i8 %51 to i32, !dbg !3538
  switch i32 %conv51, label %sw.default [
    i32 21, label %sw.bb52
    i32 9, label %sw.bb52
    i32 10, label %sw.bb52
    i32 11, label %sw.bb52
    i32 30, label %sw.bb52
    i32 20, label %sw.bb52
  ], !dbg !3539

sw.bb52:                                          ; preds = %if.end47, %if.end47, %if.end47, %if.end47, %if.end47, %if.end47
  store i32 27, i32* %retval, align 4, !dbg !3540
  br label %return, !dbg !3540

sw.default:                                       ; preds = %if.end47
  store i32 0, i32* %retval, align 4, !dbg !3542
  br label %return, !dbg !3542

sw.default53:                                     ; preds = %while.body
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !3543
  %add.ptr54 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !3543
  store i8* %add.ptr54, i8** %ptr.addr, align 8, !dbg !3543
  br label %sw.epilog, !dbg !3544

sw.epilog:                                        ; preds = %sw.default53, %if.then39, %if.end32, %if.end19, %if.end7
  br label %while.cond, !dbg !3545

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !3547
  br label %return, !dbg !3547

return:                                           ; preds = %while.end, %sw.default, %sw.bb52, %if.then46, %sw.bb34, %if.then31, %if.then27, %if.then18, %if.then14, %if.then6, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !3548
  ret i32 %53, !dbg !3548
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanDecl(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !250 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !3549, metadata !444), !dbg !3550
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3551, metadata !444), !dbg !3552
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3553, metadata !444), !dbg !3554
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !3555, metadata !444), !dbg !3556
  %0 = load i8*, i8** %end.addr, align 8, !dbg !3557
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3557
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !3557
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !3557
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3557
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !3557
  br i1 %cmp, label %if.end, label %if.then, !dbg !3560

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3561
  br label %return, !dbg !3561

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3564
  %3 = load i8, i8* %2, align 1, !dbg !3564
  %idxprom = zext i8 %3 to i64, !dbg !3564
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3564
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !3564
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !3564
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !3564
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3564
  %conv = zext i8 %6 to i32, !dbg !3564
  switch i32 %conv, label %sw.default [
    i32 27, label %sw.bb
    i32 20, label %sw.bb1
    i32 22, label %sw.bb3
    i32 24, label %sw.bb3
  ], !dbg !3565

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3566
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !3568
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 1, !dbg !3569
  %9 = load i8*, i8** %end.addr, align 8, !dbg !3570
  %10 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3571
  %call = call i32 @normal_scanComment(%struct.encoding* %7, i8* %add.ptr, i8* %9, i8** %10), !dbg !3572
  store i32 %call, i32* %retval, align 4, !dbg !3573
  br label %return, !dbg !3573

sw.bb1:                                           ; preds = %if.end
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !3574
  %add.ptr2 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !3575
  %12 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3576
  store i8* %add.ptr2, i8** %12, align 8, !dbg !3577
  store i32 33, i32* %retval, align 4, !dbg !3578
  br label %return, !dbg !3578

sw.bb3:                                           ; preds = %if.end, %if.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !3579
  %add.ptr4 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !3579
  store i8* %add.ptr4, i8** %ptr.addr, align 8, !dbg !3579
  br label %sw.epilog, !dbg !3580

sw.default:                                       ; preds = %if.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !3581
  %15 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3582
  store i8* %14, i8** %15, align 8, !dbg !3583
  store i32 0, i32* %retval, align 4, !dbg !3584
  br label %return, !dbg !3584

sw.epilog:                                        ; preds = %sw.bb3
  br label %while.cond, !dbg !3585

while.cond:                                       ; preds = %sw.epilog33, %sw.epilog
  %16 = load i8*, i8** %end.addr, align 8, !dbg !3586
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !3586
  %sub.ptr.lhs.cast5 = ptrtoint i8* %16 to i64, !dbg !3586
  %sub.ptr.rhs.cast6 = ptrtoint i8* %17 to i64, !dbg !3586
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6, !dbg !3586
  %cmp8 = icmp sge i64 %sub.ptr.sub7, 1, !dbg !3586
  br i1 %cmp8, label %while.body, label %while.end, !dbg !3588

while.body:                                       ; preds = %while.cond
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !3589
  %19 = load i8, i8* %18, align 1, !dbg !3589
  %idxprom10 = zext i8 %19 to i64, !dbg !3589
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3589
  %21 = bitcast %struct.encoding* %20 to %struct.normal_encoding*, !dbg !3589
  %type11 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %21, i32 0, i32 1, !dbg !3589
  %arrayidx12 = getelementptr inbounds [256 x i8], [256 x i8]* %type11, i64 0, i64 %idxprom10, !dbg !3589
  %22 = load i8, i8* %arrayidx12, align 1, !dbg !3589
  %conv13 = zext i8 %22 to i32, !dbg !3589
  switch i32 %conv13, label %sw.default32 [
    i32 30, label %sw.bb14
    i32 21, label %sw.bb29
    i32 9, label %sw.bb29
    i32 10, label %sw.bb29
    i32 22, label %sw.bb30
    i32 24, label %sw.bb30
  ], !dbg !3591

sw.bb14:                                          ; preds = %while.body
  %23 = load i8*, i8** %end.addr, align 8, !dbg !3592
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !3592
  %sub.ptr.lhs.cast15 = ptrtoint i8* %23 to i64, !dbg !3592
  %sub.ptr.rhs.cast16 = ptrtoint i8* %24 to i64, !dbg !3592
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !3592
  %cmp18 = icmp sge i64 %sub.ptr.sub17, 2, !dbg !3592
  br i1 %cmp18, label %if.end21, label %if.then20, !dbg !3596

if.then20:                                        ; preds = %sw.bb14
  store i32 -1, i32* %retval, align 4, !dbg !3597
  br label %return, !dbg !3597

if.end21:                                         ; preds = %sw.bb14
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !3600
  %add.ptr22 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !3600
  %26 = load i8, i8* %add.ptr22, align 1, !dbg !3600
  %idxprom23 = zext i8 %26 to i64, !dbg !3600
  %27 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3600
  %28 = bitcast %struct.encoding* %27 to %struct.normal_encoding*, !dbg !3600
  %type24 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %28, i32 0, i32 1, !dbg !3600
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* %type24, i64 0, i64 %idxprom23, !dbg !3600
  %29 = load i8, i8* %arrayidx25, align 1, !dbg !3600
  %conv26 = zext i8 %29 to i32, !dbg !3600
  switch i32 %conv26, label %sw.epilog28 [
    i32 21, label %sw.bb27
    i32 9, label %sw.bb27
    i32 10, label %sw.bb27
    i32 30, label %sw.bb27
  ], !dbg !3601

sw.bb27:                                          ; preds = %if.end21, %if.end21, %if.end21, %if.end21
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !3602
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3604
  store i8* %30, i8** %31, align 8, !dbg !3605
  store i32 0, i32* %retval, align 4, !dbg !3606
  br label %return, !dbg !3606

sw.epilog28:                                      ; preds = %if.end21
  br label %sw.bb29, !dbg !3607

sw.bb29:                                          ; preds = %while.body, %while.body, %while.body, %sw.epilog28
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !3608
  %33 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3609
  store i8* %32, i8** %33, align 8, !dbg !3610
  store i32 16, i32* %retval, align 4, !dbg !3611
  br label %return, !dbg !3611

sw.bb30:                                          ; preds = %while.body, %while.body
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !3612
  %add.ptr31 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !3612
  store i8* %add.ptr31, i8** %ptr.addr, align 8, !dbg !3612
  br label %sw.epilog33, !dbg !3613

sw.default32:                                     ; preds = %while.body
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !3614
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3615
  store i8* %35, i8** %36, align 8, !dbg !3616
  store i32 0, i32* %retval, align 4, !dbg !3617
  br label %return, !dbg !3617

sw.epilog33:                                      ; preds = %sw.bb30
  br label %while.cond, !dbg !3618

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !3620
  br label %return, !dbg !3620

return:                                           ; preds = %while.end, %sw.default32, %sw.bb29, %sw.bb27, %if.then20, %sw.default, %sw.bb1, %sw.bb, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !3621
  ret i32 %37, !dbg !3621
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanPi(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !252 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %target = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !3622, metadata !444), !dbg !3623
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3624, metadata !444), !dbg !3625
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3626, metadata !444), !dbg !3627
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !3628, metadata !444), !dbg !3629
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !3630, metadata !444), !dbg !3631
  call void @llvm.dbg.declare(metadata i8** %target, metadata !3632, metadata !444), !dbg !3633
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !3634
  store i8* %0, i8** %target, align 8, !dbg !3633
  %1 = load i8*, i8** %end.addr, align 8, !dbg !3635
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3635
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !3635
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !3635
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3635
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !3635
  br i1 %cmp, label %if.end, label %if.then, !dbg !3638

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3639
  br label %return, !dbg !3639

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !3642
  %4 = load i8, i8* %3, align 1, !dbg !3642
  %idxprom = zext i8 %4 to i64, !dbg !3642
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3642
  %6 = bitcast %struct.encoding* %5 to %struct.normal_encoding*, !dbg !3642
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %6, i32 0, i32 1, !dbg !3642
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !3642
  %7 = load i8, i8* %arrayidx, align 1, !dbg !3642
  %conv = zext i8 %7 to i32, !dbg !3642
  switch i32 %conv, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb1
    i32 24, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb13
    i32 7, label %sw.bb26
  ], !dbg !3643

sw.bb:                                            ; preds = %if.end
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !3644
  %9 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3644
  store i8* %8, i8** %9, align 8, !dbg !3644
  store i32 0, i32* %retval, align 4, !dbg !3644
  br label %return, !dbg !3644

sw.bb1:                                           ; preds = %if.end, %if.end
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !3648
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !3648
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !3648
  br label %sw.epilog, !dbg !3648

sw.bb2:                                           ; preds = %if.end
  %11 = load i8*, i8** %end.addr, align 8, !dbg !3650
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !3650
  %sub.ptr.lhs.cast3 = ptrtoint i8* %11 to i64, !dbg !3650
  %sub.ptr.rhs.cast4 = ptrtoint i8* %12 to i64, !dbg !3650
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !3650
  %cmp6 = icmp slt i64 %sub.ptr.sub5, 2, !dbg !3650
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3650

if.then8:                                         ; preds = %sw.bb2
  store i32 -2, i32* %retval, align 4, !dbg !3653
  br label %return, !dbg !3653

if.end9:                                          ; preds = %sw.bb2
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3655
  %14 = bitcast %struct.encoding* %13 to %struct.normal_encoding*, !dbg !3655
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %14, i32 0, i32 5, !dbg !3655
  %15 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !3655
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3655
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !3655
  %call = call i32 %15(%struct.encoding* %16, i8* %17), !dbg !3655
  %tobool = icmp ne i32 %call, 0, !dbg !3655
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !3655

if.then10:                                        ; preds = %if.end9
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !3658
  %19 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3658
  store i8* %18, i8** %19, align 8, !dbg !3658
  store i32 0, i32* %retval, align 4, !dbg !3658
  br label %return, !dbg !3658

if.end11:                                         ; preds = %if.end9
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !3661
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !3661
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !3661
  br label %sw.epilog, !dbg !3661

sw.bb13:                                          ; preds = %if.end
  %21 = load i8*, i8** %end.addr, align 8, !dbg !3663
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !3663
  %sub.ptr.lhs.cast14 = ptrtoint i8* %21 to i64, !dbg !3663
  %sub.ptr.rhs.cast15 = ptrtoint i8* %22 to i64, !dbg !3663
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !3663
  %cmp17 = icmp slt i64 %sub.ptr.sub16, 3, !dbg !3663
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !3663

if.then19:                                        ; preds = %sw.bb13
  store i32 -2, i32* %retval, align 4, !dbg !3666
  br label %return, !dbg !3666

if.end20:                                         ; preds = %sw.bb13
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3668
  %24 = bitcast %struct.encoding* %23 to %struct.normal_encoding*, !dbg !3668
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %24, i32 0, i32 6, !dbg !3668
  %25 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !3668
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3668
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !3668
  %call21 = call i32 %25(%struct.encoding* %26, i8* %27), !dbg !3668
  %tobool22 = icmp ne i32 %call21, 0, !dbg !3668
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !3668

if.then23:                                        ; preds = %if.end20
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !3671
  %29 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3671
  store i8* %28, i8** %29, align 8, !dbg !3671
  store i32 0, i32* %retval, align 4, !dbg !3671
  br label %return, !dbg !3671

if.end24:                                         ; preds = %if.end20
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !3674
  %add.ptr25 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !3674
  store i8* %add.ptr25, i8** %ptr.addr, align 8, !dbg !3674
  br label %sw.epilog, !dbg !3674

sw.bb26:                                          ; preds = %if.end
  %31 = load i8*, i8** %end.addr, align 8, !dbg !3676
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !3676
  %sub.ptr.lhs.cast27 = ptrtoint i8* %31 to i64, !dbg !3676
  %sub.ptr.rhs.cast28 = ptrtoint i8* %32 to i64, !dbg !3676
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !3676
  %cmp30 = icmp slt i64 %sub.ptr.sub29, 4, !dbg !3676
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !3676

if.then32:                                        ; preds = %sw.bb26
  store i32 -2, i32* %retval, align 4, !dbg !3679
  br label %return, !dbg !3679

if.end33:                                         ; preds = %sw.bb26
  %33 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3681
  %34 = bitcast %struct.encoding* %33 to %struct.normal_encoding*, !dbg !3681
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %34, i32 0, i32 7, !dbg !3681
  %35 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !3681
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3681
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !3681
  %call34 = call i32 %35(%struct.encoding* %36, i8* %37), !dbg !3681
  %tobool35 = icmp ne i32 %call34, 0, !dbg !3681
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !3681

if.then36:                                        ; preds = %if.end33
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !3684
  %39 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3684
  store i8* %38, i8** %39, align 8, !dbg !3684
  store i32 0, i32* %retval, align 4, !dbg !3684
  br label %return, !dbg !3684

if.end37:                                         ; preds = %if.end33
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !3687
  %add.ptr38 = getelementptr inbounds i8, i8* %40, i64 4, !dbg !3687
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !3687
  br label %sw.epilog, !dbg !3687

sw.default:                                       ; preds = %if.end
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !3689
  %42 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3690
  store i8* %41, i8** %42, align 8, !dbg !3691
  store i32 0, i32* %retval, align 4, !dbg !3692
  br label %return, !dbg !3692

sw.epilog:                                        ; preds = %if.end37, %if.end24, %if.end11, %sw.bb1
  br label %while.cond, !dbg !3693

while.cond:                                       ; preds = %sw.epilog185, %sw.epilog
  %43 = load i8*, i8** %end.addr, align 8, !dbg !3694
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !3694
  %sub.ptr.lhs.cast39 = ptrtoint i8* %43 to i64, !dbg !3694
  %sub.ptr.rhs.cast40 = ptrtoint i8* %44 to i64, !dbg !3694
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !3694
  %cmp42 = icmp sge i64 %sub.ptr.sub41, 1, !dbg !3694
  br i1 %cmp42, label %while.body, label %while.end186, !dbg !3696

while.body:                                       ; preds = %while.cond
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !3697
  %46 = load i8, i8* %45, align 1, !dbg !3697
  %idxprom44 = zext i8 %46 to i64, !dbg !3697
  %47 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3697
  %48 = bitcast %struct.encoding* %47 to %struct.normal_encoding*, !dbg !3697
  %type45 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %48, i32 0, i32 1, !dbg !3697
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* %type45, i64 0, i64 %idxprom44, !dbg !3697
  %49 = load i8, i8* %arrayidx46, align 1, !dbg !3697
  %conv47 = zext i8 %49 to i32, !dbg !3697
  switch i32 %conv47, label %sw.default184 [
    i32 29, label %sw.bb48
    i32 22, label %sw.bb49
    i32 24, label %sw.bb49
    i32 25, label %sw.bb49
    i32 26, label %sw.bb49
    i32 27, label %sw.bb49
    i32 5, label %sw.bb51
    i32 6, label %sw.bb64
    i32 7, label %sw.bb77
    i32 21, label %sw.bb90
    i32 9, label %sw.bb90
    i32 10, label %sw.bb90
    i32 15, label %sw.bb165
  ], !dbg !3699

sw.bb48:                                          ; preds = %while.body
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !3700
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3700
  store i8* %50, i8** %51, align 8, !dbg !3700
  store i32 0, i32* %retval, align 4, !dbg !3700
  br label %return, !dbg !3700

sw.bb49:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !3704
  %add.ptr50 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !3704
  store i8* %add.ptr50, i8** %ptr.addr, align 8, !dbg !3704
  br label %sw.epilog185, !dbg !3704

sw.bb51:                                          ; preds = %while.body
  %53 = load i8*, i8** %end.addr, align 8, !dbg !3706
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !3706
  %sub.ptr.lhs.cast52 = ptrtoint i8* %53 to i64, !dbg !3706
  %sub.ptr.rhs.cast53 = ptrtoint i8* %54 to i64, !dbg !3706
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53, !dbg !3706
  %cmp55 = icmp slt i64 %sub.ptr.sub54, 2, !dbg !3706
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !3706

if.then57:                                        ; preds = %sw.bb51
  store i32 -2, i32* %retval, align 4, !dbg !3709
  br label %return, !dbg !3709

if.end58:                                         ; preds = %sw.bb51
  %55 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3711
  %56 = bitcast %struct.encoding* %55 to %struct.normal_encoding*, !dbg !3711
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %56, i32 0, i32 2, !dbg !3711
  %57 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !3711
  %58 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3711
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !3711
  %call59 = call i32 %57(%struct.encoding* %58, i8* %59), !dbg !3711
  %tobool60 = icmp ne i32 %call59, 0, !dbg !3711
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !3711

if.then61:                                        ; preds = %if.end58
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !3714
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3714
  store i8* %60, i8** %61, align 8, !dbg !3714
  store i32 0, i32* %retval, align 4, !dbg !3714
  br label %return, !dbg !3714

if.end62:                                         ; preds = %if.end58
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !3717
  %add.ptr63 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !3717
  store i8* %add.ptr63, i8** %ptr.addr, align 8, !dbg !3717
  br label %sw.epilog185, !dbg !3717

sw.bb64:                                          ; preds = %while.body
  %63 = load i8*, i8** %end.addr, align 8, !dbg !3719
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !3719
  %sub.ptr.lhs.cast65 = ptrtoint i8* %63 to i64, !dbg !3719
  %sub.ptr.rhs.cast66 = ptrtoint i8* %64 to i64, !dbg !3719
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66, !dbg !3719
  %cmp68 = icmp slt i64 %sub.ptr.sub67, 3, !dbg !3719
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !3719

if.then70:                                        ; preds = %sw.bb64
  store i32 -2, i32* %retval, align 4, !dbg !3722
  br label %return, !dbg !3722

if.end71:                                         ; preds = %sw.bb64
  %65 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3724
  %66 = bitcast %struct.encoding* %65 to %struct.normal_encoding*, !dbg !3724
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %66, i32 0, i32 3, !dbg !3724
  %67 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !3724
  %68 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3724
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !3724
  %call72 = call i32 %67(%struct.encoding* %68, i8* %69), !dbg !3724
  %tobool73 = icmp ne i32 %call72, 0, !dbg !3724
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !3724

if.then74:                                        ; preds = %if.end71
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !3727
  %71 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3727
  store i8* %70, i8** %71, align 8, !dbg !3727
  store i32 0, i32* %retval, align 4, !dbg !3727
  br label %return, !dbg !3727

if.end75:                                         ; preds = %if.end71
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !3730
  %add.ptr76 = getelementptr inbounds i8, i8* %72, i64 3, !dbg !3730
  store i8* %add.ptr76, i8** %ptr.addr, align 8, !dbg !3730
  br label %sw.epilog185, !dbg !3730

sw.bb77:                                          ; preds = %while.body
  %73 = load i8*, i8** %end.addr, align 8, !dbg !3732
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !3732
  %sub.ptr.lhs.cast78 = ptrtoint i8* %73 to i64, !dbg !3732
  %sub.ptr.rhs.cast79 = ptrtoint i8* %74 to i64, !dbg !3732
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79, !dbg !3732
  %cmp81 = icmp slt i64 %sub.ptr.sub80, 4, !dbg !3732
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !3732

if.then83:                                        ; preds = %sw.bb77
  store i32 -2, i32* %retval, align 4, !dbg !3735
  br label %return, !dbg !3735

if.end84:                                         ; preds = %sw.bb77
  %75 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3737
  %76 = bitcast %struct.encoding* %75 to %struct.normal_encoding*, !dbg !3737
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %76, i32 0, i32 4, !dbg !3737
  %77 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !3737
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3737
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !3737
  %call85 = call i32 %77(%struct.encoding* %78, i8* %79), !dbg !3737
  %tobool86 = icmp ne i32 %call85, 0, !dbg !3737
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !3737

if.then87:                                        ; preds = %if.end84
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !3740
  %81 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3740
  store i8* %80, i8** %81, align 8, !dbg !3740
  store i32 0, i32* %retval, align 4, !dbg !3740
  br label %return, !dbg !3740

if.end88:                                         ; preds = %if.end84
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !3743
  %add.ptr89 = getelementptr inbounds i8, i8* %82, i64 4, !dbg !3743
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !3743
  br label %sw.epilog185, !dbg !3743

sw.bb90:                                          ; preds = %while.body, %while.body, %while.body
  %83 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3745
  %84 = load i8*, i8** %target, align 8, !dbg !3747
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !3748
  %call91 = call i32 @normal_checkPiTarget(%struct.encoding* %83, i8* %84, i8* %85, i32* %tok), !dbg !3749
  %tobool92 = icmp ne i32 %call91, 0, !dbg !3749
  br i1 %tobool92, label %if.end94, label %if.then93, !dbg !3750

if.then93:                                        ; preds = %sw.bb90
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !3751
  %87 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3753
  store i8* %86, i8** %87, align 8, !dbg !3754
  store i32 0, i32* %retval, align 4, !dbg !3755
  br label %return, !dbg !3755

if.end94:                                         ; preds = %sw.bb90
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !3756
  %add.ptr95 = getelementptr inbounds i8, i8* %88, i64 1, !dbg !3756
  store i8* %add.ptr95, i8** %ptr.addr, align 8, !dbg !3756
  br label %while.cond96, !dbg !3757

while.cond96:                                     ; preds = %sw.epilog164, %if.end94
  %89 = load i8*, i8** %end.addr, align 8, !dbg !3758
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !3758
  %sub.ptr.lhs.cast97 = ptrtoint i8* %89 to i64, !dbg !3758
  %sub.ptr.rhs.cast98 = ptrtoint i8* %90 to i64, !dbg !3758
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98, !dbg !3758
  %cmp100 = icmp sge i64 %sub.ptr.sub99, 1, !dbg !3758
  br i1 %cmp100, label %while.body102, label %while.end, !dbg !3759

while.body102:                                    ; preds = %while.cond96
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !3760
  %92 = load i8, i8* %91, align 1, !dbg !3760
  %idxprom103 = zext i8 %92 to i64, !dbg !3760
  %93 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3760
  %94 = bitcast %struct.encoding* %93 to %struct.normal_encoding*, !dbg !3760
  %type104 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %94, i32 0, i32 1, !dbg !3760
  %arrayidx105 = getelementptr inbounds [256 x i8], [256 x i8]* %type104, i64 0, i64 %idxprom103, !dbg !3760
  %95 = load i8, i8* %arrayidx105, align 1, !dbg !3760
  %conv106 = zext i8 %95 to i32, !dbg !3760
  switch i32 %conv106, label %sw.default162 [
    i32 5, label %sw.bb107
    i32 6, label %sw.bb120
    i32 7, label %sw.bb133
    i32 0, label %sw.bb146
    i32 1, label %sw.bb146
    i32 8, label %sw.bb146
    i32 15, label %sw.bb147
  ], !dbg !3762

sw.bb107:                                         ; preds = %while.body102
  %96 = load i8*, i8** %end.addr, align 8, !dbg !3763
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !3763
  %sub.ptr.lhs.cast108 = ptrtoint i8* %96 to i64, !dbg !3763
  %sub.ptr.rhs.cast109 = ptrtoint i8* %97 to i64, !dbg !3763
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109, !dbg !3763
  %cmp111 = icmp slt i64 %sub.ptr.sub110, 2, !dbg !3763
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !3766

if.then113:                                       ; preds = %sw.bb107
  store i32 -2, i32* %retval, align 4, !dbg !3767
  br label %return, !dbg !3767

if.end114:                                        ; preds = %sw.bb107
  %98 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3769
  %99 = bitcast %struct.encoding* %98 to %struct.normal_encoding*, !dbg !3769
  %isInvalid2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %99, i32 0, i32 8, !dbg !3769
  %100 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid2, align 8, !dbg !3769
  %101 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3769
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !3769
  %call115 = call i32 %100(%struct.encoding* %101, i8* %102), !dbg !3769
  %tobool116 = icmp ne i32 %call115, 0, !dbg !3769
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !3769

if.then117:                                       ; preds = %if.end114
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !3772
  %104 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3772
  store i8* %103, i8** %104, align 8, !dbg !3772
  store i32 0, i32* %retval, align 4, !dbg !3772
  br label %return, !dbg !3772

if.end118:                                        ; preds = %if.end114
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !3775
  %add.ptr119 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !3775
  store i8* %add.ptr119, i8** %ptr.addr, align 8, !dbg !3775
  br label %sw.epilog164, !dbg !3775

sw.bb120:                                         ; preds = %while.body102
  %106 = load i8*, i8** %end.addr, align 8, !dbg !3777
  %107 = load i8*, i8** %ptr.addr, align 8, !dbg !3777
  %sub.ptr.lhs.cast121 = ptrtoint i8* %106 to i64, !dbg !3777
  %sub.ptr.rhs.cast122 = ptrtoint i8* %107 to i64, !dbg !3777
  %sub.ptr.sub123 = sub i64 %sub.ptr.lhs.cast121, %sub.ptr.rhs.cast122, !dbg !3777
  %cmp124 = icmp slt i64 %sub.ptr.sub123, 3, !dbg !3777
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !3777

if.then126:                                       ; preds = %sw.bb120
  store i32 -2, i32* %retval, align 4, !dbg !3780
  br label %return, !dbg !3780

if.end127:                                        ; preds = %sw.bb120
  %108 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3782
  %109 = bitcast %struct.encoding* %108 to %struct.normal_encoding*, !dbg !3782
  %isInvalid3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %109, i32 0, i32 9, !dbg !3782
  %110 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3, align 8, !dbg !3782
  %111 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3782
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !3782
  %call128 = call i32 %110(%struct.encoding* %111, i8* %112), !dbg !3782
  %tobool129 = icmp ne i32 %call128, 0, !dbg !3782
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !3782

if.then130:                                       ; preds = %if.end127
  %113 = load i8*, i8** %ptr.addr, align 8, !dbg !3785
  %114 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3785
  store i8* %113, i8** %114, align 8, !dbg !3785
  store i32 0, i32* %retval, align 4, !dbg !3785
  br label %return, !dbg !3785

if.end131:                                        ; preds = %if.end127
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !3788
  %add.ptr132 = getelementptr inbounds i8, i8* %115, i64 3, !dbg !3788
  store i8* %add.ptr132, i8** %ptr.addr, align 8, !dbg !3788
  br label %sw.epilog164, !dbg !3788

sw.bb133:                                         ; preds = %while.body102
  %116 = load i8*, i8** %end.addr, align 8, !dbg !3790
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !3790
  %sub.ptr.lhs.cast134 = ptrtoint i8* %116 to i64, !dbg !3790
  %sub.ptr.rhs.cast135 = ptrtoint i8* %117 to i64, !dbg !3790
  %sub.ptr.sub136 = sub i64 %sub.ptr.lhs.cast134, %sub.ptr.rhs.cast135, !dbg !3790
  %cmp137 = icmp slt i64 %sub.ptr.sub136, 4, !dbg !3790
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !3790

if.then139:                                       ; preds = %sw.bb133
  store i32 -2, i32* %retval, align 4, !dbg !3793
  br label %return, !dbg !3793

if.end140:                                        ; preds = %sw.bb133
  %118 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3795
  %119 = bitcast %struct.encoding* %118 to %struct.normal_encoding*, !dbg !3795
  %isInvalid4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %119, i32 0, i32 10, !dbg !3795
  %120 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4, align 8, !dbg !3795
  %121 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3795
  %122 = load i8*, i8** %ptr.addr, align 8, !dbg !3795
  %call141 = call i32 %120(%struct.encoding* %121, i8* %122), !dbg !3795
  %tobool142 = icmp ne i32 %call141, 0, !dbg !3795
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !3795

if.then143:                                       ; preds = %if.end140
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !3798
  %124 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3798
  store i8* %123, i8** %124, align 8, !dbg !3798
  store i32 0, i32* %retval, align 4, !dbg !3798
  br label %return, !dbg !3798

if.end144:                                        ; preds = %if.end140
  %125 = load i8*, i8** %ptr.addr, align 8, !dbg !3801
  %add.ptr145 = getelementptr inbounds i8, i8* %125, i64 4, !dbg !3801
  store i8* %add.ptr145, i8** %ptr.addr, align 8, !dbg !3801
  br label %sw.epilog164, !dbg !3801

sw.bb146:                                         ; preds = %while.body102, %while.body102, %while.body102
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !3803
  %127 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3803
  store i8* %126, i8** %127, align 8, !dbg !3803
  store i32 0, i32* %retval, align 4, !dbg !3803
  br label %return, !dbg !3803

sw.bb147:                                         ; preds = %while.body102
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !3805
  %add.ptr148 = getelementptr inbounds i8, i8* %128, i64 1, !dbg !3805
  store i8* %add.ptr148, i8** %ptr.addr, align 8, !dbg !3805
  %129 = load i8*, i8** %end.addr, align 8, !dbg !3806
  %130 = load i8*, i8** %ptr.addr, align 8, !dbg !3806
  %sub.ptr.lhs.cast149 = ptrtoint i8* %129 to i64, !dbg !3806
  %sub.ptr.rhs.cast150 = ptrtoint i8* %130 to i64, !dbg !3806
  %sub.ptr.sub151 = sub i64 %sub.ptr.lhs.cast149, %sub.ptr.rhs.cast150, !dbg !3806
  %cmp152 = icmp sge i64 %sub.ptr.sub151, 1, !dbg !3806
  br i1 %cmp152, label %if.end155, label %if.then154, !dbg !3809

if.then154:                                       ; preds = %sw.bb147
  store i32 -1, i32* %retval, align 4, !dbg !3810
  br label %return, !dbg !3810

if.end155:                                        ; preds = %sw.bb147
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !3813
  %132 = load i8, i8* %131, align 1, !dbg !3813
  %conv156 = sext i8 %132 to i32, !dbg !3813
  %cmp157 = icmp eq i32 %conv156, 62, !dbg !3813
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !3815

if.then159:                                       ; preds = %if.end155
  %133 = load i8*, i8** %ptr.addr, align 8, !dbg !3816
  %add.ptr160 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !3818
  %134 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3819
  store i8* %add.ptr160, i8** %134, align 8, !dbg !3820
  %135 = load i32, i32* %tok, align 4, !dbg !3821
  store i32 %135, i32* %retval, align 4, !dbg !3822
  br label %return, !dbg !3822

if.end161:                                        ; preds = %if.end155
  br label %sw.epilog164, !dbg !3823

sw.default162:                                    ; preds = %while.body102
  %136 = load i8*, i8** %ptr.addr, align 8, !dbg !3824
  %add.ptr163 = getelementptr inbounds i8, i8* %136, i64 1, !dbg !3824
  store i8* %add.ptr163, i8** %ptr.addr, align 8, !dbg !3824
  br label %sw.epilog164, !dbg !3825

sw.epilog164:                                     ; preds = %sw.default162, %if.end161, %if.end144, %if.end131, %if.end118
  br label %while.cond96, !dbg !3826

while.end:                                        ; preds = %while.cond96
  store i32 -1, i32* %retval, align 4, !dbg !3828
  br label %return, !dbg !3828

sw.bb165:                                         ; preds = %while.body
  %137 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3829
  %138 = load i8*, i8** %target, align 8, !dbg !3831
  %139 = load i8*, i8** %ptr.addr, align 8, !dbg !3832
  %call166 = call i32 @normal_checkPiTarget(%struct.encoding* %137, i8* %138, i8* %139, i32* %tok), !dbg !3833
  %tobool167 = icmp ne i32 %call166, 0, !dbg !3833
  br i1 %tobool167, label %if.end169, label %if.then168, !dbg !3834

if.then168:                                       ; preds = %sw.bb165
  %140 = load i8*, i8** %ptr.addr, align 8, !dbg !3835
  %141 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3837
  store i8* %140, i8** %141, align 8, !dbg !3838
  store i32 0, i32* %retval, align 4, !dbg !3839
  br label %return, !dbg !3839

if.end169:                                        ; preds = %sw.bb165
  %142 = load i8*, i8** %ptr.addr, align 8, !dbg !3840
  %add.ptr170 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !3840
  store i8* %add.ptr170, i8** %ptr.addr, align 8, !dbg !3840
  %143 = load i8*, i8** %end.addr, align 8, !dbg !3841
  %144 = load i8*, i8** %ptr.addr, align 8, !dbg !3841
  %sub.ptr.lhs.cast171 = ptrtoint i8* %143 to i64, !dbg !3841
  %sub.ptr.rhs.cast172 = ptrtoint i8* %144 to i64, !dbg !3841
  %sub.ptr.sub173 = sub i64 %sub.ptr.lhs.cast171, %sub.ptr.rhs.cast172, !dbg !3841
  %cmp174 = icmp sge i64 %sub.ptr.sub173, 1, !dbg !3841
  br i1 %cmp174, label %if.end177, label %if.then176, !dbg !3844

if.then176:                                       ; preds = %if.end169
  store i32 -1, i32* %retval, align 4, !dbg !3845
  br label %return, !dbg !3845

if.end177:                                        ; preds = %if.end169
  %145 = load i8*, i8** %ptr.addr, align 8, !dbg !3848
  %146 = load i8, i8* %145, align 1, !dbg !3848
  %conv178 = sext i8 %146 to i32, !dbg !3848
  %cmp179 = icmp eq i32 %conv178, 62, !dbg !3848
  br i1 %cmp179, label %if.then181, label %if.end183, !dbg !3850

if.then181:                                       ; preds = %if.end177
  %147 = load i8*, i8** %ptr.addr, align 8, !dbg !3851
  %add.ptr182 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !3853
  %148 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3854
  store i8* %add.ptr182, i8** %148, align 8, !dbg !3855
  %149 = load i32, i32* %tok, align 4, !dbg !3856
  store i32 %149, i32* %retval, align 4, !dbg !3857
  br label %return, !dbg !3857

if.end183:                                        ; preds = %if.end177
  br label %sw.default184, !dbg !3858

sw.default184:                                    ; preds = %while.body, %if.end183
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !3860
  %151 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3861
  store i8* %150, i8** %151, align 8, !dbg !3862
  store i32 0, i32* %retval, align 4, !dbg !3863
  br label %return, !dbg !3863

sw.epilog185:                                     ; preds = %if.end88, %if.end75, %if.end62, %sw.bb49
  br label %while.cond, !dbg !3864

while.end186:                                     ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !3866
  br label %return, !dbg !3866

return:                                           ; preds = %while.end186, %sw.default184, %if.then181, %if.then176, %if.then168, %while.end, %if.then159, %if.then154, %sw.bb146, %if.then143, %if.then139, %if.then130, %if.then126, %if.then117, %if.then113, %if.then93, %if.then87, %if.then83, %if.then74, %if.then70, %if.then61, %if.then57, %sw.bb48, %sw.default, %if.then36, %if.then32, %if.then23, %if.then19, %if.then10, %if.then8, %sw.bb, %if.then
  %152 = load i32, i32* %retval, align 4, !dbg !3867
  ret i32 %152, !dbg !3867
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanPercent(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !256 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !3868, metadata !444), !dbg !3869
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3870, metadata !444), !dbg !3871
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3872, metadata !444), !dbg !3873
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !3874, metadata !444), !dbg !3875
  %0 = load i8*, i8** %end.addr, align 8, !dbg !3876
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3876
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !3876
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !3876
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3876
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !3876
  br i1 %cmp, label %if.end, label %if.then, !dbg !3879

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3880
  br label %return, !dbg !3880

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3883
  %3 = load i8, i8* %2, align 1, !dbg !3883
  %idxprom = zext i8 %3 to i64, !dbg !3883
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3883
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !3883
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !3883
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !3883
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3883
  %conv = zext i8 %6 to i32, !dbg !3883
  switch i32 %conv, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb1
    i32 24, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb13
    i32 7, label %sw.bb26
    i32 21, label %sw.bb39
    i32 10, label %sw.bb39
    i32 9, label %sw.bb39
    i32 30, label %sw.bb39
  ], !dbg !3884

sw.bb:                                            ; preds = %if.end
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !3885
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3885
  store i8* %7, i8** %8, align 8, !dbg !3885
  store i32 0, i32* %retval, align 4, !dbg !3885
  br label %return, !dbg !3885

sw.bb1:                                           ; preds = %if.end, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !3889
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !3889
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !3889
  br label %sw.epilog, !dbg !3889

sw.bb2:                                           ; preds = %if.end
  %10 = load i8*, i8** %end.addr, align 8, !dbg !3891
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !3891
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !3891
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !3891
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !3891
  %cmp6 = icmp slt i64 %sub.ptr.sub5, 2, !dbg !3891
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3891

if.then8:                                         ; preds = %sw.bb2
  store i32 -2, i32* %retval, align 4, !dbg !3894
  br label %return, !dbg !3894

if.end9:                                          ; preds = %sw.bb2
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3896
  %13 = bitcast %struct.encoding* %12 to %struct.normal_encoding*, !dbg !3896
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %13, i32 0, i32 5, !dbg !3896
  %14 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !3896
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3896
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !3896
  %call = call i32 %14(%struct.encoding* %15, i8* %16), !dbg !3896
  %tobool = icmp ne i32 %call, 0, !dbg !3896
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !3896

if.then10:                                        ; preds = %if.end9
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !3899
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3899
  store i8* %17, i8** %18, align 8, !dbg !3899
  store i32 0, i32* %retval, align 4, !dbg !3899
  br label %return, !dbg !3899

if.end11:                                         ; preds = %if.end9
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !3902
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !3902
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !3902
  br label %sw.epilog, !dbg !3902

sw.bb13:                                          ; preds = %if.end
  %20 = load i8*, i8** %end.addr, align 8, !dbg !3904
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !3904
  %sub.ptr.lhs.cast14 = ptrtoint i8* %20 to i64, !dbg !3904
  %sub.ptr.rhs.cast15 = ptrtoint i8* %21 to i64, !dbg !3904
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !3904
  %cmp17 = icmp slt i64 %sub.ptr.sub16, 3, !dbg !3904
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !3904

if.then19:                                        ; preds = %sw.bb13
  store i32 -2, i32* %retval, align 4, !dbg !3907
  br label %return, !dbg !3907

if.end20:                                         ; preds = %sw.bb13
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3909
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !3909
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 6, !dbg !3909
  %24 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !3909
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3909
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !3909
  %call21 = call i32 %24(%struct.encoding* %25, i8* %26), !dbg !3909
  %tobool22 = icmp ne i32 %call21, 0, !dbg !3909
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !3909

if.then23:                                        ; preds = %if.end20
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !3912
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3912
  store i8* %27, i8** %28, align 8, !dbg !3912
  store i32 0, i32* %retval, align 4, !dbg !3912
  br label %return, !dbg !3912

if.end24:                                         ; preds = %if.end20
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !3915
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !3915
  store i8* %add.ptr25, i8** %ptr.addr, align 8, !dbg !3915
  br label %sw.epilog, !dbg !3915

sw.bb26:                                          ; preds = %if.end
  %30 = load i8*, i8** %end.addr, align 8, !dbg !3917
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !3917
  %sub.ptr.lhs.cast27 = ptrtoint i8* %30 to i64, !dbg !3917
  %sub.ptr.rhs.cast28 = ptrtoint i8* %31 to i64, !dbg !3917
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !3917
  %cmp30 = icmp slt i64 %sub.ptr.sub29, 4, !dbg !3917
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !3917

if.then32:                                        ; preds = %sw.bb26
  store i32 -2, i32* %retval, align 4, !dbg !3920
  br label %return, !dbg !3920

if.end33:                                         ; preds = %sw.bb26
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3922
  %33 = bitcast %struct.encoding* %32 to %struct.normal_encoding*, !dbg !3922
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %33, i32 0, i32 7, !dbg !3922
  %34 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !3922
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3922
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !3922
  %call34 = call i32 %34(%struct.encoding* %35, i8* %36), !dbg !3922
  %tobool35 = icmp ne i32 %call34, 0, !dbg !3922
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !3922

if.then36:                                        ; preds = %if.end33
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !3925
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3925
  store i8* %37, i8** %38, align 8, !dbg !3925
  store i32 0, i32* %retval, align 4, !dbg !3925
  br label %return, !dbg !3925

if.end37:                                         ; preds = %if.end33
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !3928
  %add.ptr38 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !3928
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !3928
  br label %sw.epilog, !dbg !3928

sw.bb39:                                          ; preds = %if.end, %if.end, %if.end, %if.end
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !3930
  %41 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3931
  store i8* %40, i8** %41, align 8, !dbg !3932
  store i32 22, i32* %retval, align 4, !dbg !3933
  br label %return, !dbg !3933

sw.default:                                       ; preds = %if.end
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !3934
  %43 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3935
  store i8* %42, i8** %43, align 8, !dbg !3936
  store i32 0, i32* %retval, align 4, !dbg !3937
  br label %return, !dbg !3937

sw.epilog:                                        ; preds = %if.end37, %if.end24, %if.end11, %sw.bb1
  br label %while.cond, !dbg !3938

while.cond:                                       ; preds = %sw.epilog94, %sw.epilog
  %44 = load i8*, i8** %end.addr, align 8, !dbg !3939
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !3939
  %sub.ptr.lhs.cast40 = ptrtoint i8* %44 to i64, !dbg !3939
  %sub.ptr.rhs.cast41 = ptrtoint i8* %45 to i64, !dbg !3939
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !3939
  %cmp43 = icmp sge i64 %sub.ptr.sub42, 1, !dbg !3939
  br i1 %cmp43, label %while.body, label %while.end, !dbg !3941

while.body:                                       ; preds = %while.cond
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !3942
  %47 = load i8, i8* %46, align 1, !dbg !3942
  %idxprom45 = zext i8 %47 to i64, !dbg !3942
  %48 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3942
  %49 = bitcast %struct.encoding* %48 to %struct.normal_encoding*, !dbg !3942
  %type46 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %49, i32 0, i32 1, !dbg !3942
  %arrayidx47 = getelementptr inbounds [256 x i8], [256 x i8]* %type46, i64 0, i64 %idxprom45, !dbg !3942
  %50 = load i8, i8* %arrayidx47, align 1, !dbg !3942
  %conv48 = zext i8 %50 to i32, !dbg !3942
  switch i32 %conv48, label %sw.default93 [
    i32 29, label %sw.bb49
    i32 22, label %sw.bb50
    i32 24, label %sw.bb50
    i32 25, label %sw.bb50
    i32 26, label %sw.bb50
    i32 27, label %sw.bb50
    i32 5, label %sw.bb52
    i32 6, label %sw.bb65
    i32 7, label %sw.bb78
    i32 18, label %sw.bb91
  ], !dbg !3944

sw.bb49:                                          ; preds = %while.body
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !3945
  %52 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3945
  store i8* %51, i8** %52, align 8, !dbg !3945
  store i32 0, i32* %retval, align 4, !dbg !3945
  br label %return, !dbg !3945

sw.bb50:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !3949
  %add.ptr51 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !3949
  store i8* %add.ptr51, i8** %ptr.addr, align 8, !dbg !3949
  br label %sw.epilog94, !dbg !3949

sw.bb52:                                          ; preds = %while.body
  %54 = load i8*, i8** %end.addr, align 8, !dbg !3951
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !3951
  %sub.ptr.lhs.cast53 = ptrtoint i8* %54 to i64, !dbg !3951
  %sub.ptr.rhs.cast54 = ptrtoint i8* %55 to i64, !dbg !3951
  %sub.ptr.sub55 = sub i64 %sub.ptr.lhs.cast53, %sub.ptr.rhs.cast54, !dbg !3951
  %cmp56 = icmp slt i64 %sub.ptr.sub55, 2, !dbg !3951
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !3951

if.then58:                                        ; preds = %sw.bb52
  store i32 -2, i32* %retval, align 4, !dbg !3954
  br label %return, !dbg !3954

if.end59:                                         ; preds = %sw.bb52
  %56 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3956
  %57 = bitcast %struct.encoding* %56 to %struct.normal_encoding*, !dbg !3956
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %57, i32 0, i32 2, !dbg !3956
  %58 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !3956
  %59 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3956
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !3956
  %call60 = call i32 %58(%struct.encoding* %59, i8* %60), !dbg !3956
  %tobool61 = icmp ne i32 %call60, 0, !dbg !3956
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !3956

if.then62:                                        ; preds = %if.end59
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !3959
  %62 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3959
  store i8* %61, i8** %62, align 8, !dbg !3959
  store i32 0, i32* %retval, align 4, !dbg !3959
  br label %return, !dbg !3959

if.end63:                                         ; preds = %if.end59
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !3962
  %add.ptr64 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !3962
  store i8* %add.ptr64, i8** %ptr.addr, align 8, !dbg !3962
  br label %sw.epilog94, !dbg !3962

sw.bb65:                                          ; preds = %while.body
  %64 = load i8*, i8** %end.addr, align 8, !dbg !3964
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !3964
  %sub.ptr.lhs.cast66 = ptrtoint i8* %64 to i64, !dbg !3964
  %sub.ptr.rhs.cast67 = ptrtoint i8* %65 to i64, !dbg !3964
  %sub.ptr.sub68 = sub i64 %sub.ptr.lhs.cast66, %sub.ptr.rhs.cast67, !dbg !3964
  %cmp69 = icmp slt i64 %sub.ptr.sub68, 3, !dbg !3964
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !3964

if.then71:                                        ; preds = %sw.bb65
  store i32 -2, i32* %retval, align 4, !dbg !3967
  br label %return, !dbg !3967

if.end72:                                         ; preds = %sw.bb65
  %66 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3969
  %67 = bitcast %struct.encoding* %66 to %struct.normal_encoding*, !dbg !3969
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %67, i32 0, i32 3, !dbg !3969
  %68 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !3969
  %69 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3969
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !3969
  %call73 = call i32 %68(%struct.encoding* %69, i8* %70), !dbg !3969
  %tobool74 = icmp ne i32 %call73, 0, !dbg !3969
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !3969

if.then75:                                        ; preds = %if.end72
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !3972
  %72 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3972
  store i8* %71, i8** %72, align 8, !dbg !3972
  store i32 0, i32* %retval, align 4, !dbg !3972
  br label %return, !dbg !3972

if.end76:                                         ; preds = %if.end72
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !3975
  %add.ptr77 = getelementptr inbounds i8, i8* %73, i64 3, !dbg !3975
  store i8* %add.ptr77, i8** %ptr.addr, align 8, !dbg !3975
  br label %sw.epilog94, !dbg !3975

sw.bb78:                                          ; preds = %while.body
  %74 = load i8*, i8** %end.addr, align 8, !dbg !3977
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !3977
  %sub.ptr.lhs.cast79 = ptrtoint i8* %74 to i64, !dbg !3977
  %sub.ptr.rhs.cast80 = ptrtoint i8* %75 to i64, !dbg !3977
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80, !dbg !3977
  %cmp82 = icmp slt i64 %sub.ptr.sub81, 4, !dbg !3977
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !3977

if.then84:                                        ; preds = %sw.bb78
  store i32 -2, i32* %retval, align 4, !dbg !3980
  br label %return, !dbg !3980

if.end85:                                         ; preds = %sw.bb78
  %76 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3982
  %77 = bitcast %struct.encoding* %76 to %struct.normal_encoding*, !dbg !3982
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %77, i32 0, i32 4, !dbg !3982
  %78 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !3982
  %79 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3982
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !3982
  %call86 = call i32 %78(%struct.encoding* %79, i8* %80), !dbg !3982
  %tobool87 = icmp ne i32 %call86, 0, !dbg !3982
  br i1 %tobool87, label %if.end89, label %if.then88, !dbg !3982

if.then88:                                        ; preds = %if.end85
  %81 = load i8*, i8** %ptr.addr, align 8, !dbg !3985
  %82 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3985
  store i8* %81, i8** %82, align 8, !dbg !3985
  store i32 0, i32* %retval, align 4, !dbg !3985
  br label %return, !dbg !3985

if.end89:                                         ; preds = %if.end85
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !3988
  %add.ptr90 = getelementptr inbounds i8, i8* %83, i64 4, !dbg !3988
  store i8* %add.ptr90, i8** %ptr.addr, align 8, !dbg !3988
  br label %sw.epilog94, !dbg !3988

sw.bb91:                                          ; preds = %while.body
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !3990
  %add.ptr92 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !3991
  %85 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3992
  store i8* %add.ptr92, i8** %85, align 8, !dbg !3993
  store i32 28, i32* %retval, align 4, !dbg !3994
  br label %return, !dbg !3994

sw.default93:                                     ; preds = %while.body
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !3995
  %87 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !3996
  store i8* %86, i8** %87, align 8, !dbg !3997
  store i32 0, i32* %retval, align 4, !dbg !3998
  br label %return, !dbg !3998

sw.epilog94:                                      ; preds = %if.end89, %if.end76, %if.end63, %sw.bb50
  br label %while.cond, !dbg !3999

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !4001
  br label %return, !dbg !4001

return:                                           ; preds = %while.end, %sw.default93, %sw.bb91, %if.then88, %if.then84, %if.then75, %if.then71, %if.then62, %if.then58, %sw.bb49, %sw.default, %sw.bb39, %if.then36, %if.then32, %if.then23, %if.then19, %if.then10, %if.then8, %sw.bb, %if.then
  %88 = load i32, i32* %retval, align 4, !dbg !4002
  ret i32 %88, !dbg !4002
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanPoundName(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !257 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !4003, metadata !444), !dbg !4004
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4005, metadata !444), !dbg !4006
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4007, metadata !444), !dbg !4008
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !4009, metadata !444), !dbg !4010
  %0 = load i8*, i8** %end.addr, align 8, !dbg !4011
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !4011
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4011
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4011
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4011
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !4011
  br i1 %cmp, label %if.end, label %if.then, !dbg !4014

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4015
  br label %return, !dbg !4015

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4018
  %3 = load i8, i8* %2, align 1, !dbg !4018
  %idxprom = zext i8 %3 to i64, !dbg !4018
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4018
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !4018
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !4018
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !4018
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4018
  %conv = zext i8 %6 to i32, !dbg !4018
  switch i32 %conv, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb1
    i32 24, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb13
    i32 7, label %sw.bb26
  ], !dbg !4019

sw.bb:                                            ; preds = %if.end
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !4020
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4020
  store i8* %7, i8** %8, align 8, !dbg !4020
  store i32 0, i32* %retval, align 4, !dbg !4020
  br label %return, !dbg !4020

sw.bb1:                                           ; preds = %if.end, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !4024
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4024
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4024
  br label %sw.epilog, !dbg !4024

sw.bb2:                                           ; preds = %if.end
  %10 = load i8*, i8** %end.addr, align 8, !dbg !4026
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !4026
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !4026
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !4026
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !4026
  %cmp6 = icmp slt i64 %sub.ptr.sub5, 2, !dbg !4026
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4026

if.then8:                                         ; preds = %sw.bb2
  store i32 -2, i32* %retval, align 4, !dbg !4029
  br label %return, !dbg !4029

if.end9:                                          ; preds = %sw.bb2
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4031
  %13 = bitcast %struct.encoding* %12 to %struct.normal_encoding*, !dbg !4031
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %13, i32 0, i32 5, !dbg !4031
  %14 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !4031
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4031
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !4031
  %call = call i32 %14(%struct.encoding* %15, i8* %16), !dbg !4031
  %tobool = icmp ne i32 %call, 0, !dbg !4031
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !4031

if.then10:                                        ; preds = %if.end9
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !4034
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4034
  store i8* %17, i8** %18, align 8, !dbg !4034
  store i32 0, i32* %retval, align 4, !dbg !4034
  br label %return, !dbg !4034

if.end11:                                         ; preds = %if.end9
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !4037
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !4037
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !4037
  br label %sw.epilog, !dbg !4037

sw.bb13:                                          ; preds = %if.end
  %20 = load i8*, i8** %end.addr, align 8, !dbg !4039
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !4039
  %sub.ptr.lhs.cast14 = ptrtoint i8* %20 to i64, !dbg !4039
  %sub.ptr.rhs.cast15 = ptrtoint i8* %21 to i64, !dbg !4039
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !4039
  %cmp17 = icmp slt i64 %sub.ptr.sub16, 3, !dbg !4039
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4039

if.then19:                                        ; preds = %sw.bb13
  store i32 -2, i32* %retval, align 4, !dbg !4042
  br label %return, !dbg !4042

if.end20:                                         ; preds = %sw.bb13
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4044
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !4044
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 6, !dbg !4044
  %24 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !4044
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4044
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !4044
  %call21 = call i32 %24(%struct.encoding* %25, i8* %26), !dbg !4044
  %tobool22 = icmp ne i32 %call21, 0, !dbg !4044
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4044

if.then23:                                        ; preds = %if.end20
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !4047
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4047
  store i8* %27, i8** %28, align 8, !dbg !4047
  store i32 0, i32* %retval, align 4, !dbg !4047
  br label %return, !dbg !4047

if.end24:                                         ; preds = %if.end20
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !4050
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !4050
  store i8* %add.ptr25, i8** %ptr.addr, align 8, !dbg !4050
  br label %sw.epilog, !dbg !4050

sw.bb26:                                          ; preds = %if.end
  %30 = load i8*, i8** %end.addr, align 8, !dbg !4052
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !4052
  %sub.ptr.lhs.cast27 = ptrtoint i8* %30 to i64, !dbg !4052
  %sub.ptr.rhs.cast28 = ptrtoint i8* %31 to i64, !dbg !4052
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !4052
  %cmp30 = icmp slt i64 %sub.ptr.sub29, 4, !dbg !4052
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4052

if.then32:                                        ; preds = %sw.bb26
  store i32 -2, i32* %retval, align 4, !dbg !4055
  br label %return, !dbg !4055

if.end33:                                         ; preds = %sw.bb26
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4057
  %33 = bitcast %struct.encoding* %32 to %struct.normal_encoding*, !dbg !4057
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %33, i32 0, i32 7, !dbg !4057
  %34 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !4057
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4057
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !4057
  %call34 = call i32 %34(%struct.encoding* %35, i8* %36), !dbg !4057
  %tobool35 = icmp ne i32 %call34, 0, !dbg !4057
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !4057

if.then36:                                        ; preds = %if.end33
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !4060
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4060
  store i8* %37, i8** %38, align 8, !dbg !4060
  store i32 0, i32* %retval, align 4, !dbg !4060
  br label %return, !dbg !4060

if.end37:                                         ; preds = %if.end33
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !4063
  %add.ptr38 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !4063
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !4063
  br label %sw.epilog, !dbg !4063

sw.default:                                       ; preds = %if.end
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !4065
  %41 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4066
  store i8* %40, i8** %41, align 8, !dbg !4067
  store i32 0, i32* %retval, align 4, !dbg !4068
  br label %return, !dbg !4068

sw.epilog:                                        ; preds = %if.end37, %if.end24, %if.end11, %sw.bb1
  br label %while.cond, !dbg !4069

while.cond:                                       ; preds = %sw.epilog92, %sw.epilog
  %42 = load i8*, i8** %end.addr, align 8, !dbg !4070
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !4070
  %sub.ptr.lhs.cast39 = ptrtoint i8* %42 to i64, !dbg !4070
  %sub.ptr.rhs.cast40 = ptrtoint i8* %43 to i64, !dbg !4070
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !4070
  %cmp42 = icmp sge i64 %sub.ptr.sub41, 1, !dbg !4070
  br i1 %cmp42, label %while.body, label %while.end, !dbg !4072

while.body:                                       ; preds = %while.cond
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !4073
  %45 = load i8, i8* %44, align 1, !dbg !4073
  %idxprom44 = zext i8 %45 to i64, !dbg !4073
  %46 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4073
  %47 = bitcast %struct.encoding* %46 to %struct.normal_encoding*, !dbg !4073
  %type45 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %47, i32 0, i32 1, !dbg !4073
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* %type45, i64 0, i64 %idxprom44, !dbg !4073
  %48 = load i8, i8* %arrayidx46, align 1, !dbg !4073
  %conv47 = zext i8 %48 to i32, !dbg !4073
  switch i32 %conv47, label %sw.default91 [
    i32 29, label %sw.bb48
    i32 22, label %sw.bb49
    i32 24, label %sw.bb49
    i32 25, label %sw.bb49
    i32 26, label %sw.bb49
    i32 27, label %sw.bb49
    i32 5, label %sw.bb51
    i32 6, label %sw.bb64
    i32 7, label %sw.bb77
    i32 9, label %sw.bb90
    i32 10, label %sw.bb90
    i32 21, label %sw.bb90
    i32 32, label %sw.bb90
    i32 11, label %sw.bb90
    i32 30, label %sw.bb90
    i32 36, label %sw.bb90
  ], !dbg !4075

sw.bb48:                                          ; preds = %while.body
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !4076
  %50 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4076
  store i8* %49, i8** %50, align 8, !dbg !4076
  store i32 0, i32* %retval, align 4, !dbg !4076
  br label %return, !dbg !4076

sw.bb49:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !4080
  %add.ptr50 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !4080
  store i8* %add.ptr50, i8** %ptr.addr, align 8, !dbg !4080
  br label %sw.epilog92, !dbg !4080

sw.bb51:                                          ; preds = %while.body
  %52 = load i8*, i8** %end.addr, align 8, !dbg !4082
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !4082
  %sub.ptr.lhs.cast52 = ptrtoint i8* %52 to i64, !dbg !4082
  %sub.ptr.rhs.cast53 = ptrtoint i8* %53 to i64, !dbg !4082
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53, !dbg !4082
  %cmp55 = icmp slt i64 %sub.ptr.sub54, 2, !dbg !4082
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !4082

if.then57:                                        ; preds = %sw.bb51
  store i32 -2, i32* %retval, align 4, !dbg !4085
  br label %return, !dbg !4085

if.end58:                                         ; preds = %sw.bb51
  %54 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4087
  %55 = bitcast %struct.encoding* %54 to %struct.normal_encoding*, !dbg !4087
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %55, i32 0, i32 2, !dbg !4087
  %56 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !4087
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4087
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !4087
  %call59 = call i32 %56(%struct.encoding* %57, i8* %58), !dbg !4087
  %tobool60 = icmp ne i32 %call59, 0, !dbg !4087
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !4087

if.then61:                                        ; preds = %if.end58
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !4090
  %60 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4090
  store i8* %59, i8** %60, align 8, !dbg !4090
  store i32 0, i32* %retval, align 4, !dbg !4090
  br label %return, !dbg !4090

if.end62:                                         ; preds = %if.end58
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !4093
  %add.ptr63 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !4093
  store i8* %add.ptr63, i8** %ptr.addr, align 8, !dbg !4093
  br label %sw.epilog92, !dbg !4093

sw.bb64:                                          ; preds = %while.body
  %62 = load i8*, i8** %end.addr, align 8, !dbg !4095
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !4095
  %sub.ptr.lhs.cast65 = ptrtoint i8* %62 to i64, !dbg !4095
  %sub.ptr.rhs.cast66 = ptrtoint i8* %63 to i64, !dbg !4095
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66, !dbg !4095
  %cmp68 = icmp slt i64 %sub.ptr.sub67, 3, !dbg !4095
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !4095

if.then70:                                        ; preds = %sw.bb64
  store i32 -2, i32* %retval, align 4, !dbg !4098
  br label %return, !dbg !4098

if.end71:                                         ; preds = %sw.bb64
  %64 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4100
  %65 = bitcast %struct.encoding* %64 to %struct.normal_encoding*, !dbg !4100
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %65, i32 0, i32 3, !dbg !4100
  %66 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !4100
  %67 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4100
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !4100
  %call72 = call i32 %66(%struct.encoding* %67, i8* %68), !dbg !4100
  %tobool73 = icmp ne i32 %call72, 0, !dbg !4100
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !4100

if.then74:                                        ; preds = %if.end71
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !4103
  %70 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4103
  store i8* %69, i8** %70, align 8, !dbg !4103
  store i32 0, i32* %retval, align 4, !dbg !4103
  br label %return, !dbg !4103

if.end75:                                         ; preds = %if.end71
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !4106
  %add.ptr76 = getelementptr inbounds i8, i8* %71, i64 3, !dbg !4106
  store i8* %add.ptr76, i8** %ptr.addr, align 8, !dbg !4106
  br label %sw.epilog92, !dbg !4106

sw.bb77:                                          ; preds = %while.body
  %72 = load i8*, i8** %end.addr, align 8, !dbg !4108
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !4108
  %sub.ptr.lhs.cast78 = ptrtoint i8* %72 to i64, !dbg !4108
  %sub.ptr.rhs.cast79 = ptrtoint i8* %73 to i64, !dbg !4108
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79, !dbg !4108
  %cmp81 = icmp slt i64 %sub.ptr.sub80, 4, !dbg !4108
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4108

if.then83:                                        ; preds = %sw.bb77
  store i32 -2, i32* %retval, align 4, !dbg !4111
  br label %return, !dbg !4111

if.end84:                                         ; preds = %sw.bb77
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4113
  %75 = bitcast %struct.encoding* %74 to %struct.normal_encoding*, !dbg !4113
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %75, i32 0, i32 4, !dbg !4113
  %76 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !4113
  %77 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4113
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !4113
  %call85 = call i32 %76(%struct.encoding* %77, i8* %78), !dbg !4113
  %tobool86 = icmp ne i32 %call85, 0, !dbg !4113
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !4113

if.then87:                                        ; preds = %if.end84
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !4116
  %80 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4116
  store i8* %79, i8** %80, align 8, !dbg !4116
  store i32 0, i32* %retval, align 4, !dbg !4116
  br label %return, !dbg !4116

if.end88:                                         ; preds = %if.end84
  %81 = load i8*, i8** %ptr.addr, align 8, !dbg !4119
  %add.ptr89 = getelementptr inbounds i8, i8* %81, i64 4, !dbg !4119
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !4119
  br label %sw.epilog92, !dbg !4119

sw.bb90:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !4121
  %83 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4122
  store i8* %82, i8** %83, align 8, !dbg !4123
  store i32 20, i32* %retval, align 4, !dbg !4124
  br label %return, !dbg !4124

sw.default91:                                     ; preds = %while.body
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !4125
  %85 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4126
  store i8* %84, i8** %85, align 8, !dbg !4127
  store i32 0, i32* %retval, align 4, !dbg !4128
  br label %return, !dbg !4128

sw.epilog92:                                      ; preds = %if.end88, %if.end75, %if.end62, %sw.bb49
  br label %while.cond, !dbg !4129

while.end:                                        ; preds = %while.cond
  store i32 -20, i32* %retval, align 4, !dbg !4131
  br label %return, !dbg !4131

return:                                           ; preds = %while.end, %sw.default91, %sw.bb90, %if.then87, %if.then83, %if.then74, %if.then70, %if.then61, %if.then57, %sw.bb48, %sw.default, %if.then36, %if.then32, %if.then23, %if.then19, %if.then10, %if.then8, %sw.bb, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !4132
  ret i32 %86, !dbg !4132
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanComment(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !251 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !4133, metadata !444), !dbg !4134
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4135, metadata !444), !dbg !4136
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4137, metadata !444), !dbg !4138
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !4139, metadata !444), !dbg !4140
  %0 = load i8*, i8** %end.addr, align 8, !dbg !4141
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !4141
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4141
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4141
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4141
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !4141
  br i1 %cmp, label %if.then, label %if.end76, !dbg !4143

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4144
  %3 = load i8, i8* %2, align 1, !dbg !4144
  %conv = sext i8 %3 to i32, !dbg !4144
  %cmp1 = icmp eq i32 %conv, 45, !dbg !4144
  br i1 %cmp1, label %if.end, label %if.then3, !dbg !4147

if.then3:                                         ; preds = %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !4148
  %5 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4150
  store i8* %4, i8** %5, align 8, !dbg !4151
  store i32 0, i32* %retval, align 4, !dbg !4152
  br label %return, !dbg !4152

if.end:                                           ; preds = %if.then
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !4153
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 1, !dbg !4153
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4153
  br label %while.cond, !dbg !4154

while.cond:                                       ; preds = %sw.epilog, %if.end
  %7 = load i8*, i8** %end.addr, align 8, !dbg !4155
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !4155
  %sub.ptr.lhs.cast4 = ptrtoint i8* %7 to i64, !dbg !4155
  %sub.ptr.rhs.cast5 = ptrtoint i8* %8 to i64, !dbg !4155
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5, !dbg !4155
  %cmp7 = icmp sge i64 %sub.ptr.sub6, 1, !dbg !4155
  br i1 %cmp7, label %while.body, label %while.end, !dbg !4157

while.body:                                       ; preds = %while.cond
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !4158
  %10 = load i8, i8* %9, align 1, !dbg !4158
  %idxprom = zext i8 %10 to i64, !dbg !4158
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4158
  %12 = bitcast %struct.encoding* %11 to %struct.normal_encoding*, !dbg !4158
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %12, i32 0, i32 1, !dbg !4158
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !4158
  %13 = load i8, i8* %arrayidx, align 1, !dbg !4158
  %conv9 = zext i8 %13 to i32, !dbg !4158
  switch i32 %conv9, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb20
    i32 7, label %sw.bb33
    i32 0, label %sw.bb46
    i32 1, label %sw.bb46
    i32 8, label %sw.bb46
    i32 27, label %sw.bb47
  ], !dbg !4160

sw.bb:                                            ; preds = %while.body
  %14 = load i8*, i8** %end.addr, align 8, !dbg !4161
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !4161
  %sub.ptr.lhs.cast10 = ptrtoint i8* %14 to i64, !dbg !4161
  %sub.ptr.rhs.cast11 = ptrtoint i8* %15 to i64, !dbg !4161
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !4161
  %cmp13 = icmp slt i64 %sub.ptr.sub12, 2, !dbg !4161
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !4164

if.then15:                                        ; preds = %sw.bb
  store i32 -2, i32* %retval, align 4, !dbg !4165
  br label %return, !dbg !4165

if.end16:                                         ; preds = %sw.bb
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4167
  %17 = bitcast %struct.encoding* %16 to %struct.normal_encoding*, !dbg !4167
  %isInvalid2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %17, i32 0, i32 8, !dbg !4167
  %18 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid2, align 8, !dbg !4167
  %19 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4167
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !4167
  %call = call i32 %18(%struct.encoding* %19, i8* %20), !dbg !4167
  %tobool = icmp ne i32 %call, 0, !dbg !4167
  br i1 %tobool, label %if.then17, label %if.end18, !dbg !4167

if.then17:                                        ; preds = %if.end16
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !4170
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4170
  store i8* %21, i8** %22, align 8, !dbg !4170
  store i32 0, i32* %retval, align 4, !dbg !4170
  br label %return, !dbg !4170

if.end18:                                         ; preds = %if.end16
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !4173
  %add.ptr19 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !4173
  store i8* %add.ptr19, i8** %ptr.addr, align 8, !dbg !4173
  br label %sw.epilog, !dbg !4173

sw.bb20:                                          ; preds = %while.body
  %24 = load i8*, i8** %end.addr, align 8, !dbg !4175
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !4175
  %sub.ptr.lhs.cast21 = ptrtoint i8* %24 to i64, !dbg !4175
  %sub.ptr.rhs.cast22 = ptrtoint i8* %25 to i64, !dbg !4175
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !4175
  %cmp24 = icmp slt i64 %sub.ptr.sub23, 3, !dbg !4175
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !4175

if.then26:                                        ; preds = %sw.bb20
  store i32 -2, i32* %retval, align 4, !dbg !4178
  br label %return, !dbg !4178

if.end27:                                         ; preds = %sw.bb20
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4180
  %27 = bitcast %struct.encoding* %26 to %struct.normal_encoding*, !dbg !4180
  %isInvalid3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %27, i32 0, i32 9, !dbg !4180
  %28 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3, align 8, !dbg !4180
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4180
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !4180
  %call28 = call i32 %28(%struct.encoding* %29, i8* %30), !dbg !4180
  %tobool29 = icmp ne i32 %call28, 0, !dbg !4180
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !4180

if.then30:                                        ; preds = %if.end27
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !4183
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4183
  store i8* %31, i8** %32, align 8, !dbg !4183
  store i32 0, i32* %retval, align 4, !dbg !4183
  br label %return, !dbg !4183

if.end31:                                         ; preds = %if.end27
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !4186
  %add.ptr32 = getelementptr inbounds i8, i8* %33, i64 3, !dbg !4186
  store i8* %add.ptr32, i8** %ptr.addr, align 8, !dbg !4186
  br label %sw.epilog, !dbg !4186

sw.bb33:                                          ; preds = %while.body
  %34 = load i8*, i8** %end.addr, align 8, !dbg !4188
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !4188
  %sub.ptr.lhs.cast34 = ptrtoint i8* %34 to i64, !dbg !4188
  %sub.ptr.rhs.cast35 = ptrtoint i8* %35 to i64, !dbg !4188
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35, !dbg !4188
  %cmp37 = icmp slt i64 %sub.ptr.sub36, 4, !dbg !4188
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4188

if.then39:                                        ; preds = %sw.bb33
  store i32 -2, i32* %retval, align 4, !dbg !4191
  br label %return, !dbg !4191

if.end40:                                         ; preds = %sw.bb33
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4193
  %37 = bitcast %struct.encoding* %36 to %struct.normal_encoding*, !dbg !4193
  %isInvalid4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %37, i32 0, i32 10, !dbg !4193
  %38 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4, align 8, !dbg !4193
  %39 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4193
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !4193
  %call41 = call i32 %38(%struct.encoding* %39, i8* %40), !dbg !4193
  %tobool42 = icmp ne i32 %call41, 0, !dbg !4193
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !4193

if.then43:                                        ; preds = %if.end40
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !4196
  %42 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4196
  store i8* %41, i8** %42, align 8, !dbg !4196
  store i32 0, i32* %retval, align 4, !dbg !4196
  br label %return, !dbg !4196

if.end44:                                         ; preds = %if.end40
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !4199
  %add.ptr45 = getelementptr inbounds i8, i8* %43, i64 4, !dbg !4199
  store i8* %add.ptr45, i8** %ptr.addr, align 8, !dbg !4199
  br label %sw.epilog, !dbg !4199

sw.bb46:                                          ; preds = %while.body, %while.body, %while.body
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !4201
  %45 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4201
  store i8* %44, i8** %45, align 8, !dbg !4201
  store i32 0, i32* %retval, align 4, !dbg !4201
  br label %return, !dbg !4201

sw.bb47:                                          ; preds = %while.body
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !4203
  %add.ptr48 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !4203
  store i8* %add.ptr48, i8** %ptr.addr, align 8, !dbg !4203
  %47 = load i8*, i8** %end.addr, align 8, !dbg !4204
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !4204
  %sub.ptr.lhs.cast49 = ptrtoint i8* %47 to i64, !dbg !4204
  %sub.ptr.rhs.cast50 = ptrtoint i8* %48 to i64, !dbg !4204
  %sub.ptr.sub51 = sub i64 %sub.ptr.lhs.cast49, %sub.ptr.rhs.cast50, !dbg !4204
  %cmp52 = icmp sge i64 %sub.ptr.sub51, 1, !dbg !4204
  br i1 %cmp52, label %if.end55, label %if.then54, !dbg !4207

if.then54:                                        ; preds = %sw.bb47
  store i32 -1, i32* %retval, align 4, !dbg !4208
  br label %return, !dbg !4208

if.end55:                                         ; preds = %sw.bb47
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !4211
  %50 = load i8, i8* %49, align 1, !dbg !4211
  %conv56 = sext i8 %50 to i32, !dbg !4211
  %cmp57 = icmp eq i32 %conv56, 45, !dbg !4211
  br i1 %cmp57, label %if.then59, label %if.end74, !dbg !4213

if.then59:                                        ; preds = %if.end55
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !4214
  %add.ptr60 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !4214
  store i8* %add.ptr60, i8** %ptr.addr, align 8, !dbg !4214
  %52 = load i8*, i8** %end.addr, align 8, !dbg !4216
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !4216
  %sub.ptr.lhs.cast61 = ptrtoint i8* %52 to i64, !dbg !4216
  %sub.ptr.rhs.cast62 = ptrtoint i8* %53 to i64, !dbg !4216
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62, !dbg !4216
  %cmp64 = icmp sge i64 %sub.ptr.sub63, 1, !dbg !4216
  br i1 %cmp64, label %if.end67, label %if.then66, !dbg !4219

if.then66:                                        ; preds = %if.then59
  store i32 -1, i32* %retval, align 4, !dbg !4220
  br label %return, !dbg !4220

if.end67:                                         ; preds = %if.then59
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !4223
  %55 = load i8, i8* %54, align 1, !dbg !4223
  %conv68 = sext i8 %55 to i32, !dbg !4223
  %cmp69 = icmp eq i32 %conv68, 62, !dbg !4223
  br i1 %cmp69, label %if.end72, label %if.then71, !dbg !4225

if.then71:                                        ; preds = %if.end67
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !4226
  %57 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4228
  store i8* %56, i8** %57, align 8, !dbg !4229
  store i32 0, i32* %retval, align 4, !dbg !4230
  br label %return, !dbg !4230

if.end72:                                         ; preds = %if.end67
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !4231
  %add.ptr73 = getelementptr inbounds i8, i8* %58, i64 1, !dbg !4232
  %59 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4233
  store i8* %add.ptr73, i8** %59, align 8, !dbg !4234
  store i32 13, i32* %retval, align 4, !dbg !4235
  br label %return, !dbg !4235

if.end74:                                         ; preds = %if.end55
  br label %sw.epilog, !dbg !4236

sw.default:                                       ; preds = %while.body
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !4237
  %add.ptr75 = getelementptr inbounds i8, i8* %60, i64 1, !dbg !4237
  store i8* %add.ptr75, i8** %ptr.addr, align 8, !dbg !4237
  br label %sw.epilog, !dbg !4238

sw.epilog:                                        ; preds = %sw.default, %if.end74, %if.end44, %if.end31, %if.end18
  br label %while.cond, !dbg !4239

while.end:                                        ; preds = %while.cond
  br label %if.end76, !dbg !4241

if.end76:                                         ; preds = %while.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !4242
  br label %return, !dbg !4242

return:                                           ; preds = %if.end76, %if.end72, %if.then71, %if.then66, %if.then54, %sw.bb46, %if.then43, %if.then39, %if.then30, %if.then26, %if.then17, %if.then15, %if.then3
  %61 = load i32, i32* %retval, align 4, !dbg !4243
  ret i32 %61, !dbg !4243
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_checkPiTarget(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end, i32* %tokPtr) #0 !dbg !253 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %tokPtr.addr = alloca i32*, align 8
  %upper = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !4244, metadata !444), !dbg !4245
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4246, metadata !444), !dbg !4247
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4248, metadata !444), !dbg !4249
  store i32* %tokPtr, i32** %tokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tokPtr.addr, metadata !4250, metadata !444), !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %upper, metadata !4252, metadata !444), !dbg !4253
  store i32 0, i32* %upper, align 4, !dbg !4253
  %0 = load i32*, i32** %tokPtr.addr, align 8, !dbg !4254
  store i32 11, i32* %0, align 4, !dbg !4255
  %1 = load i8*, i8** %end.addr, align 8, !dbg !4256
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4258
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !4259
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !4259
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4259
  %cmp = icmp ne i64 %sub.ptr.sub, 3, !dbg !4260
  br i1 %cmp, label %if.then, label %if.end, !dbg !4261

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4262
  br label %return, !dbg !4262

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !4263
  %4 = load i8, i8* %3, align 1, !dbg !4263
  %conv = sext i8 %4 to i32, !dbg !4263
  switch i32 %conv, label %sw.default [
    i32 120, label %sw.bb
    i32 88, label %sw.bb1
  ], !dbg !4264

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !4265

sw.bb1:                                           ; preds = %if.end
  store i32 1, i32* %upper, align 4, !dbg !4267
  br label %sw.epilog, !dbg !4268

sw.default:                                       ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !4269
  br label %return, !dbg !4269

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !4270
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !4270
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4270
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !4271
  %7 = load i8, i8* %6, align 1, !dbg !4271
  %conv2 = sext i8 %7 to i32, !dbg !4271
  switch i32 %conv2, label %sw.default5 [
    i32 109, label %sw.bb3
    i32 77, label %sw.bb4
  ], !dbg !4272

sw.bb3:                                           ; preds = %sw.epilog
  br label %sw.epilog6, !dbg !4273

sw.bb4:                                           ; preds = %sw.epilog
  store i32 1, i32* %upper, align 4, !dbg !4275
  br label %sw.epilog6, !dbg !4276

sw.default5:                                      ; preds = %sw.epilog
  store i32 1, i32* %retval, align 4, !dbg !4277
  br label %return, !dbg !4277

sw.epilog6:                                       ; preds = %sw.bb4, %sw.bb3
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !4278
  %add.ptr7 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !4278
  store i8* %add.ptr7, i8** %ptr.addr, align 8, !dbg !4278
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !4279
  %10 = load i8, i8* %9, align 1, !dbg !4279
  %conv8 = sext i8 %10 to i32, !dbg !4279
  switch i32 %conv8, label %sw.default11 [
    i32 108, label %sw.bb9
    i32 76, label %sw.bb10
  ], !dbg !4280

sw.bb9:                                           ; preds = %sw.epilog6
  br label %sw.epilog12, !dbg !4281

sw.bb10:                                          ; preds = %sw.epilog6
  store i32 1, i32* %upper, align 4, !dbg !4283
  br label %sw.epilog12, !dbg !4284

sw.default11:                                     ; preds = %sw.epilog6
  store i32 1, i32* %retval, align 4, !dbg !4285
  br label %return, !dbg !4285

sw.epilog12:                                      ; preds = %sw.bb10, %sw.bb9
  %11 = load i32, i32* %upper, align 4, !dbg !4286
  %tobool = icmp ne i32 %11, 0, !dbg !4286
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !4288

if.then13:                                        ; preds = %sw.epilog12
  store i32 0, i32* %retval, align 4, !dbg !4289
  br label %return, !dbg !4289

if.end14:                                         ; preds = %sw.epilog12
  %12 = load i32*, i32** %tokPtr.addr, align 8, !dbg !4290
  store i32 12, i32* %12, align 4, !dbg !4291
  store i32 1, i32* %retval, align 4, !dbg !4292
  br label %return, !dbg !4292

return:                                           ; preds = %if.end14, %if.then13, %sw.default11, %sw.default5, %sw.default, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !4293
  ret i32 %13, !dbg !4293
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanLt(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !259 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !4294, metadata !444), !dbg !4295
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4296, metadata !444), !dbg !4297
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4298, metadata !444), !dbg !4299
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !4300, metadata !444), !dbg !4301
  %0 = load i8*, i8** %end.addr, align 8, !dbg !4302
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !4302
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4302
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4302
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4302
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !4302
  br i1 %cmp, label %if.end, label %if.then, !dbg !4305

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4306
  br label %return, !dbg !4306

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4309
  %3 = load i8, i8* %2, align 1, !dbg !4309
  %idxprom = zext i8 %3 to i64, !dbg !4309
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4309
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !4309
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !4309
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !4309
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4309
  %conv = zext i8 %6 to i32, !dbg !4309
  switch i32 %conv, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb1
    i32 24, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb13
    i32 7, label %sw.bb26
    i32 16, label %sw.bb39
    i32 15, label %sw.bb58
    i32 17, label %sw.bb61
  ], !dbg !4310

sw.bb:                                            ; preds = %if.end
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !4311
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4311
  store i8* %7, i8** %8, align 8, !dbg !4311
  store i32 0, i32* %retval, align 4, !dbg !4311
  br label %return, !dbg !4311

sw.bb1:                                           ; preds = %if.end, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !4315
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4315
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4315
  br label %sw.epilog64, !dbg !4315

sw.bb2:                                           ; preds = %if.end
  %10 = load i8*, i8** %end.addr, align 8, !dbg !4317
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !4317
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !4317
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !4317
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !4317
  %cmp6 = icmp slt i64 %sub.ptr.sub5, 2, !dbg !4317
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4317

if.then8:                                         ; preds = %sw.bb2
  store i32 -2, i32* %retval, align 4, !dbg !4320
  br label %return, !dbg !4320

if.end9:                                          ; preds = %sw.bb2
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4322
  %13 = bitcast %struct.encoding* %12 to %struct.normal_encoding*, !dbg !4322
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %13, i32 0, i32 5, !dbg !4322
  %14 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !4322
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4322
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !4322
  %call = call i32 %14(%struct.encoding* %15, i8* %16), !dbg !4322
  %tobool = icmp ne i32 %call, 0, !dbg !4322
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !4322

if.then10:                                        ; preds = %if.end9
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !4325
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4325
  store i8* %17, i8** %18, align 8, !dbg !4325
  store i32 0, i32* %retval, align 4, !dbg !4325
  br label %return, !dbg !4325

if.end11:                                         ; preds = %if.end9
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !4328
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !4328
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !4328
  br label %sw.epilog64, !dbg !4328

sw.bb13:                                          ; preds = %if.end
  %20 = load i8*, i8** %end.addr, align 8, !dbg !4330
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !4330
  %sub.ptr.lhs.cast14 = ptrtoint i8* %20 to i64, !dbg !4330
  %sub.ptr.rhs.cast15 = ptrtoint i8* %21 to i64, !dbg !4330
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !4330
  %cmp17 = icmp slt i64 %sub.ptr.sub16, 3, !dbg !4330
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4330

if.then19:                                        ; preds = %sw.bb13
  store i32 -2, i32* %retval, align 4, !dbg !4333
  br label %return, !dbg !4333

if.end20:                                         ; preds = %sw.bb13
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4335
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !4335
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 6, !dbg !4335
  %24 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !4335
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4335
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !4335
  %call21 = call i32 %24(%struct.encoding* %25, i8* %26), !dbg !4335
  %tobool22 = icmp ne i32 %call21, 0, !dbg !4335
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4335

if.then23:                                        ; preds = %if.end20
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !4338
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4338
  store i8* %27, i8** %28, align 8, !dbg !4338
  store i32 0, i32* %retval, align 4, !dbg !4338
  br label %return, !dbg !4338

if.end24:                                         ; preds = %if.end20
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !4341
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !4341
  store i8* %add.ptr25, i8** %ptr.addr, align 8, !dbg !4341
  br label %sw.epilog64, !dbg !4341

sw.bb26:                                          ; preds = %if.end
  %30 = load i8*, i8** %end.addr, align 8, !dbg !4343
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !4343
  %sub.ptr.lhs.cast27 = ptrtoint i8* %30 to i64, !dbg !4343
  %sub.ptr.rhs.cast28 = ptrtoint i8* %31 to i64, !dbg !4343
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !4343
  %cmp30 = icmp slt i64 %sub.ptr.sub29, 4, !dbg !4343
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4343

if.then32:                                        ; preds = %sw.bb26
  store i32 -2, i32* %retval, align 4, !dbg !4346
  br label %return, !dbg !4346

if.end33:                                         ; preds = %sw.bb26
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4348
  %33 = bitcast %struct.encoding* %32 to %struct.normal_encoding*, !dbg !4348
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %33, i32 0, i32 7, !dbg !4348
  %34 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !4348
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4348
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !4348
  %call34 = call i32 %34(%struct.encoding* %35, i8* %36), !dbg !4348
  %tobool35 = icmp ne i32 %call34, 0, !dbg !4348
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !4348

if.then36:                                        ; preds = %if.end33
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !4351
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4351
  store i8* %37, i8** %38, align 8, !dbg !4351
  store i32 0, i32* %retval, align 4, !dbg !4351
  br label %return, !dbg !4351

if.end37:                                         ; preds = %if.end33
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !4354
  %add.ptr38 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !4354
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !4354
  br label %sw.epilog64, !dbg !4354

sw.bb39:                                          ; preds = %if.end
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !4356
  %add.ptr40 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !4356
  store i8* %add.ptr40, i8** %ptr.addr, align 8, !dbg !4356
  %41 = load i8*, i8** %end.addr, align 8, !dbg !4357
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !4357
  %sub.ptr.lhs.cast41 = ptrtoint i8* %41 to i64, !dbg !4357
  %sub.ptr.rhs.cast42 = ptrtoint i8* %42 to i64, !dbg !4357
  %sub.ptr.sub43 = sub i64 %sub.ptr.lhs.cast41, %sub.ptr.rhs.cast42, !dbg !4357
  %cmp44 = icmp sge i64 %sub.ptr.sub43, 1, !dbg !4357
  br i1 %cmp44, label %if.end47, label %if.then46, !dbg !4360

if.then46:                                        ; preds = %sw.bb39
  store i32 -1, i32* %retval, align 4, !dbg !4361
  br label %return, !dbg !4361

if.end47:                                         ; preds = %sw.bb39
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !4364
  %44 = load i8, i8* %43, align 1, !dbg !4364
  %idxprom48 = zext i8 %44 to i64, !dbg !4364
  %45 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4364
  %46 = bitcast %struct.encoding* %45 to %struct.normal_encoding*, !dbg !4364
  %type49 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %46, i32 0, i32 1, !dbg !4364
  %arrayidx50 = getelementptr inbounds [256 x i8], [256 x i8]* %type49, i64 0, i64 %idxprom48, !dbg !4364
  %47 = load i8, i8* %arrayidx50, align 1, !dbg !4364
  %conv51 = zext i8 %47 to i32, !dbg !4364
  switch i32 %conv51, label %sw.epilog [
    i32 27, label %sw.bb52
    i32 20, label %sw.bb55
  ], !dbg !4365

sw.bb52:                                          ; preds = %if.end47
  %48 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4366
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !4368
  %add.ptr53 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !4369
  %50 = load i8*, i8** %end.addr, align 8, !dbg !4370
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4371
  %call54 = call i32 @normal_scanComment(%struct.encoding* %48, i8* %add.ptr53, i8* %50, i8** %51), !dbg !4372
  store i32 %call54, i32* %retval, align 4, !dbg !4373
  br label %return, !dbg !4373

sw.bb55:                                          ; preds = %if.end47
  %52 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4374
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !4375
  %add.ptr56 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !4376
  %54 = load i8*, i8** %end.addr, align 8, !dbg !4377
  %55 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4378
  %call57 = call i32 @normal_scanCdataSection(%struct.encoding* %52, i8* %add.ptr56, i8* %54, i8** %55), !dbg !4379
  store i32 %call57, i32* %retval, align 4, !dbg !4380
  br label %return, !dbg !4380

sw.epilog:                                        ; preds = %if.end47
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !4381
  %57 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4382
  store i8* %56, i8** %57, align 8, !dbg !4383
  store i32 0, i32* %retval, align 4, !dbg !4384
  br label %return, !dbg !4384

sw.bb58:                                          ; preds = %if.end
  %58 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4385
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !4386
  %add.ptr59 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !4387
  %60 = load i8*, i8** %end.addr, align 8, !dbg !4388
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4389
  %call60 = call i32 @normal_scanPi(%struct.encoding* %58, i8* %add.ptr59, i8* %60, i8** %61), !dbg !4390
  store i32 %call60, i32* %retval, align 4, !dbg !4391
  br label %return, !dbg !4391

sw.bb61:                                          ; preds = %if.end
  %62 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4392
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !4393
  %add.ptr62 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !4394
  %64 = load i8*, i8** %end.addr, align 8, !dbg !4395
  %65 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4396
  %call63 = call i32 @normal_scanEndTag(%struct.encoding* %62, i8* %add.ptr62, i8* %64, i8** %65), !dbg !4397
  store i32 %call63, i32* %retval, align 4, !dbg !4398
  br label %return, !dbg !4398

sw.default:                                       ; preds = %if.end
  %66 = load i8*, i8** %ptr.addr, align 8, !dbg !4399
  %67 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4400
  store i8* %66, i8** %67, align 8, !dbg !4401
  store i32 0, i32* %retval, align 4, !dbg !4402
  br label %return, !dbg !4402

sw.epilog64:                                      ; preds = %if.end37, %if.end24, %if.end11, %sw.bb1
  br label %while.cond, !dbg !4403

while.cond:                                       ; preds = %sw.epilog199, %sw.epilog64
  %68 = load i8*, i8** %end.addr, align 8, !dbg !4404
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !4404
  %sub.ptr.lhs.cast65 = ptrtoint i8* %68 to i64, !dbg !4404
  %sub.ptr.rhs.cast66 = ptrtoint i8* %69 to i64, !dbg !4404
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66, !dbg !4404
  %cmp68 = icmp sge i64 %sub.ptr.sub67, 1, !dbg !4404
  br i1 %cmp68, label %while.body, label %while.end200, !dbg !4406

while.body:                                       ; preds = %while.cond
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !4407
  %71 = load i8, i8* %70, align 1, !dbg !4407
  %idxprom70 = zext i8 %71 to i64, !dbg !4407
  %72 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4407
  %73 = bitcast %struct.encoding* %72 to %struct.normal_encoding*, !dbg !4407
  %type71 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %73, i32 0, i32 1, !dbg !4407
  %arrayidx72 = getelementptr inbounds [256 x i8], [256 x i8]* %type71, i64 0, i64 %idxprom70, !dbg !4407
  %74 = load i8, i8* %arrayidx72, align 1, !dbg !4407
  %conv73 = zext i8 %74 to i32, !dbg !4407
  switch i32 %conv73, label %sw.default198 [
    i32 29, label %sw.bb74
    i32 22, label %sw.bb75
    i32 24, label %sw.bb75
    i32 25, label %sw.bb75
    i32 26, label %sw.bb75
    i32 27, label %sw.bb75
    i32 5, label %sw.bb77
    i32 6, label %sw.bb90
    i32 7, label %sw.bb103
    i32 21, label %sw.bb116
    i32 9, label %sw.bb116
    i32 10, label %sw.bb116
    i32 11, label %sw.bb181
    i32 17, label %sw.bb183
  ], !dbg !4409

sw.bb74:                                          ; preds = %while.body
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !4410
  %76 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4410
  store i8* %75, i8** %76, align 8, !dbg !4410
  store i32 0, i32* %retval, align 4, !dbg !4410
  br label %return, !dbg !4410

sw.bb75:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !4414
  %add.ptr76 = getelementptr inbounds i8, i8* %77, i64 1, !dbg !4414
  store i8* %add.ptr76, i8** %ptr.addr, align 8, !dbg !4414
  br label %sw.epilog199, !dbg !4414

sw.bb77:                                          ; preds = %while.body
  %78 = load i8*, i8** %end.addr, align 8, !dbg !4416
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !4416
  %sub.ptr.lhs.cast78 = ptrtoint i8* %78 to i64, !dbg !4416
  %sub.ptr.rhs.cast79 = ptrtoint i8* %79 to i64, !dbg !4416
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79, !dbg !4416
  %cmp81 = icmp slt i64 %sub.ptr.sub80, 2, !dbg !4416
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4416

if.then83:                                        ; preds = %sw.bb77
  store i32 -2, i32* %retval, align 4, !dbg !4419
  br label %return, !dbg !4419

if.end84:                                         ; preds = %sw.bb77
  %80 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4421
  %81 = bitcast %struct.encoding* %80 to %struct.normal_encoding*, !dbg !4421
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %81, i32 0, i32 2, !dbg !4421
  %82 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !4421
  %83 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4421
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !4421
  %call85 = call i32 %82(%struct.encoding* %83, i8* %84), !dbg !4421
  %tobool86 = icmp ne i32 %call85, 0, !dbg !4421
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !4421

if.then87:                                        ; preds = %if.end84
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !4424
  %86 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4424
  store i8* %85, i8** %86, align 8, !dbg !4424
  store i32 0, i32* %retval, align 4, !dbg !4424
  br label %return, !dbg !4424

if.end88:                                         ; preds = %if.end84
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !4427
  %add.ptr89 = getelementptr inbounds i8, i8* %87, i64 2, !dbg !4427
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !4427
  br label %sw.epilog199, !dbg !4427

sw.bb90:                                          ; preds = %while.body
  %88 = load i8*, i8** %end.addr, align 8, !dbg !4429
  %89 = load i8*, i8** %ptr.addr, align 8, !dbg !4429
  %sub.ptr.lhs.cast91 = ptrtoint i8* %88 to i64, !dbg !4429
  %sub.ptr.rhs.cast92 = ptrtoint i8* %89 to i64, !dbg !4429
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92, !dbg !4429
  %cmp94 = icmp slt i64 %sub.ptr.sub93, 3, !dbg !4429
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4429

if.then96:                                        ; preds = %sw.bb90
  store i32 -2, i32* %retval, align 4, !dbg !4432
  br label %return, !dbg !4432

if.end97:                                         ; preds = %sw.bb90
  %90 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4434
  %91 = bitcast %struct.encoding* %90 to %struct.normal_encoding*, !dbg !4434
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %91, i32 0, i32 3, !dbg !4434
  %92 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !4434
  %93 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4434
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !4434
  %call98 = call i32 %92(%struct.encoding* %93, i8* %94), !dbg !4434
  %tobool99 = icmp ne i32 %call98, 0, !dbg !4434
  br i1 %tobool99, label %if.end101, label %if.then100, !dbg !4434

if.then100:                                       ; preds = %if.end97
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !4437
  %96 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4437
  store i8* %95, i8** %96, align 8, !dbg !4437
  store i32 0, i32* %retval, align 4, !dbg !4437
  br label %return, !dbg !4437

if.end101:                                        ; preds = %if.end97
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !4440
  %add.ptr102 = getelementptr inbounds i8, i8* %97, i64 3, !dbg !4440
  store i8* %add.ptr102, i8** %ptr.addr, align 8, !dbg !4440
  br label %sw.epilog199, !dbg !4440

sw.bb103:                                         ; preds = %while.body
  %98 = load i8*, i8** %end.addr, align 8, !dbg !4442
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !4442
  %sub.ptr.lhs.cast104 = ptrtoint i8* %98 to i64, !dbg !4442
  %sub.ptr.rhs.cast105 = ptrtoint i8* %99 to i64, !dbg !4442
  %sub.ptr.sub106 = sub i64 %sub.ptr.lhs.cast104, %sub.ptr.rhs.cast105, !dbg !4442
  %cmp107 = icmp slt i64 %sub.ptr.sub106, 4, !dbg !4442
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !4442

if.then109:                                       ; preds = %sw.bb103
  store i32 -2, i32* %retval, align 4, !dbg !4445
  br label %return, !dbg !4445

if.end110:                                        ; preds = %sw.bb103
  %100 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4447
  %101 = bitcast %struct.encoding* %100 to %struct.normal_encoding*, !dbg !4447
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %101, i32 0, i32 4, !dbg !4447
  %102 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !4447
  %103 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4447
  %104 = load i8*, i8** %ptr.addr, align 8, !dbg !4447
  %call111 = call i32 %102(%struct.encoding* %103, i8* %104), !dbg !4447
  %tobool112 = icmp ne i32 %call111, 0, !dbg !4447
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !4447

if.then113:                                       ; preds = %if.end110
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !4450
  %106 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4450
  store i8* %105, i8** %106, align 8, !dbg !4450
  store i32 0, i32* %retval, align 4, !dbg !4450
  br label %return, !dbg !4450

if.end114:                                        ; preds = %if.end110
  %107 = load i8*, i8** %ptr.addr, align 8, !dbg !4453
  %add.ptr115 = getelementptr inbounds i8, i8* %107, i64 4, !dbg !4453
  store i8* %add.ptr115, i8** %ptr.addr, align 8, !dbg !4453
  br label %sw.epilog199, !dbg !4453

sw.bb116:                                         ; preds = %while.body, %while.body, %while.body
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !4455
  %add.ptr117 = getelementptr inbounds i8, i8* %108, i64 1, !dbg !4455
  store i8* %add.ptr117, i8** %ptr.addr, align 8, !dbg !4455
  br label %while.cond118, !dbg !4457

while.cond118:                                    ; preds = %sw.bb176, %sw.bb116
  %109 = load i8*, i8** %end.addr, align 8, !dbg !4458
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !4458
  %sub.ptr.lhs.cast119 = ptrtoint i8* %109 to i64, !dbg !4458
  %sub.ptr.rhs.cast120 = ptrtoint i8* %110 to i64, !dbg !4458
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120, !dbg !4458
  %cmp122 = icmp sge i64 %sub.ptr.sub121, 1, !dbg !4458
  br i1 %cmp122, label %while.body124, label %while.end, !dbg !4460

while.body124:                                    ; preds = %while.cond118
  %111 = load i8*, i8** %ptr.addr, align 8, !dbg !4461
  %112 = load i8, i8* %111, align 1, !dbg !4461
  %idxprom125 = zext i8 %112 to i64, !dbg !4461
  %113 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4461
  %114 = bitcast %struct.encoding* %113 to %struct.normal_encoding*, !dbg !4461
  %type126 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %114, i32 0, i32 1, !dbg !4461
  %arrayidx127 = getelementptr inbounds [256 x i8], [256 x i8]* %type126, i64 0, i64 %idxprom125, !dbg !4461
  %115 = load i8, i8* %arrayidx127, align 1, !dbg !4461
  %conv128 = zext i8 %115 to i32, !dbg !4461
  switch i32 %conv128, label %sw.default178 [
    i32 29, label %sw.bb129
    i32 22, label %sw.bb130
    i32 24, label %sw.bb130
    i32 5, label %sw.bb132
    i32 6, label %sw.bb146
    i32 7, label %sw.bb160
    i32 11, label %sw.bb174
    i32 17, label %sw.bb175
    i32 21, label %sw.bb176
    i32 9, label %sw.bb176
    i32 10, label %sw.bb176
  ], !dbg !4463

sw.bb129:                                         ; preds = %while.body124
  %116 = load i8*, i8** %ptr.addr, align 8, !dbg !4464
  %117 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4464
  store i8* %116, i8** %117, align 8, !dbg !4464
  store i32 0, i32* %retval, align 4, !dbg !4464
  br label %return, !dbg !4464

sw.bb130:                                         ; preds = %while.body124, %while.body124
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !4468
  %add.ptr131 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !4468
  store i8* %add.ptr131, i8** %ptr.addr, align 8, !dbg !4468
  br label %sw.epilog179, !dbg !4468

sw.bb132:                                         ; preds = %while.body124
  %119 = load i8*, i8** %end.addr, align 8, !dbg !4470
  %120 = load i8*, i8** %ptr.addr, align 8, !dbg !4470
  %sub.ptr.lhs.cast133 = ptrtoint i8* %119 to i64, !dbg !4470
  %sub.ptr.rhs.cast134 = ptrtoint i8* %120 to i64, !dbg !4470
  %sub.ptr.sub135 = sub i64 %sub.ptr.lhs.cast133, %sub.ptr.rhs.cast134, !dbg !4470
  %cmp136 = icmp slt i64 %sub.ptr.sub135, 2, !dbg !4470
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !4470

if.then138:                                       ; preds = %sw.bb132
  store i32 -2, i32* %retval, align 4, !dbg !4473
  br label %return, !dbg !4473

if.end139:                                        ; preds = %sw.bb132
  %121 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4475
  %122 = bitcast %struct.encoding* %121 to %struct.normal_encoding*, !dbg !4475
  %isNmstrt2140 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %122, i32 0, i32 5, !dbg !4475
  %123 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2140, align 8, !dbg !4475
  %124 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4475
  %125 = load i8*, i8** %ptr.addr, align 8, !dbg !4475
  %call141 = call i32 %123(%struct.encoding* %124, i8* %125), !dbg !4475
  %tobool142 = icmp ne i32 %call141, 0, !dbg !4475
  br i1 %tobool142, label %if.end144, label %if.then143, !dbg !4475

if.then143:                                       ; preds = %if.end139
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !4478
  %127 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4478
  store i8* %126, i8** %127, align 8, !dbg !4478
  store i32 0, i32* %retval, align 4, !dbg !4478
  br label %return, !dbg !4478

if.end144:                                        ; preds = %if.end139
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !4481
  %add.ptr145 = getelementptr inbounds i8, i8* %128, i64 2, !dbg !4481
  store i8* %add.ptr145, i8** %ptr.addr, align 8, !dbg !4481
  br label %sw.epilog179, !dbg !4481

sw.bb146:                                         ; preds = %while.body124
  %129 = load i8*, i8** %end.addr, align 8, !dbg !4483
  %130 = load i8*, i8** %ptr.addr, align 8, !dbg !4483
  %sub.ptr.lhs.cast147 = ptrtoint i8* %129 to i64, !dbg !4483
  %sub.ptr.rhs.cast148 = ptrtoint i8* %130 to i64, !dbg !4483
  %sub.ptr.sub149 = sub i64 %sub.ptr.lhs.cast147, %sub.ptr.rhs.cast148, !dbg !4483
  %cmp150 = icmp slt i64 %sub.ptr.sub149, 3, !dbg !4483
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !4483

if.then152:                                       ; preds = %sw.bb146
  store i32 -2, i32* %retval, align 4, !dbg !4486
  br label %return, !dbg !4486

if.end153:                                        ; preds = %sw.bb146
  %131 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4488
  %132 = bitcast %struct.encoding* %131 to %struct.normal_encoding*, !dbg !4488
  %isNmstrt3154 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %132, i32 0, i32 6, !dbg !4488
  %133 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3154, align 8, !dbg !4488
  %134 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4488
  %135 = load i8*, i8** %ptr.addr, align 8, !dbg !4488
  %call155 = call i32 %133(%struct.encoding* %134, i8* %135), !dbg !4488
  %tobool156 = icmp ne i32 %call155, 0, !dbg !4488
  br i1 %tobool156, label %if.end158, label %if.then157, !dbg !4488

if.then157:                                       ; preds = %if.end153
  %136 = load i8*, i8** %ptr.addr, align 8, !dbg !4491
  %137 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4491
  store i8* %136, i8** %137, align 8, !dbg !4491
  store i32 0, i32* %retval, align 4, !dbg !4491
  br label %return, !dbg !4491

if.end158:                                        ; preds = %if.end153
  %138 = load i8*, i8** %ptr.addr, align 8, !dbg !4494
  %add.ptr159 = getelementptr inbounds i8, i8* %138, i64 3, !dbg !4494
  store i8* %add.ptr159, i8** %ptr.addr, align 8, !dbg !4494
  br label %sw.epilog179, !dbg !4494

sw.bb160:                                         ; preds = %while.body124
  %139 = load i8*, i8** %end.addr, align 8, !dbg !4496
  %140 = load i8*, i8** %ptr.addr, align 8, !dbg !4496
  %sub.ptr.lhs.cast161 = ptrtoint i8* %139 to i64, !dbg !4496
  %sub.ptr.rhs.cast162 = ptrtoint i8* %140 to i64, !dbg !4496
  %sub.ptr.sub163 = sub i64 %sub.ptr.lhs.cast161, %sub.ptr.rhs.cast162, !dbg !4496
  %cmp164 = icmp slt i64 %sub.ptr.sub163, 4, !dbg !4496
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !4496

if.then166:                                       ; preds = %sw.bb160
  store i32 -2, i32* %retval, align 4, !dbg !4499
  br label %return, !dbg !4499

if.end167:                                        ; preds = %sw.bb160
  %141 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4501
  %142 = bitcast %struct.encoding* %141 to %struct.normal_encoding*, !dbg !4501
  %isNmstrt4168 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %142, i32 0, i32 7, !dbg !4501
  %143 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4168, align 8, !dbg !4501
  %144 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4501
  %145 = load i8*, i8** %ptr.addr, align 8, !dbg !4501
  %call169 = call i32 %143(%struct.encoding* %144, i8* %145), !dbg !4501
  %tobool170 = icmp ne i32 %call169, 0, !dbg !4501
  br i1 %tobool170, label %if.end172, label %if.then171, !dbg !4501

if.then171:                                       ; preds = %if.end167
  %146 = load i8*, i8** %ptr.addr, align 8, !dbg !4504
  %147 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4504
  store i8* %146, i8** %147, align 8, !dbg !4504
  store i32 0, i32* %retval, align 4, !dbg !4504
  br label %return, !dbg !4504

if.end172:                                        ; preds = %if.end167
  %148 = load i8*, i8** %ptr.addr, align 8, !dbg !4507
  %add.ptr173 = getelementptr inbounds i8, i8* %148, i64 4, !dbg !4507
  store i8* %add.ptr173, i8** %ptr.addr, align 8, !dbg !4507
  br label %sw.epilog179, !dbg !4507

sw.bb174:                                         ; preds = %while.body124
  br label %gt, !dbg !4509

sw.bb175:                                         ; preds = %while.body124
  br label %sol, !dbg !4510

sw.bb176:                                         ; preds = %while.body124, %while.body124, %while.body124
  %149 = load i8*, i8** %ptr.addr, align 8, !dbg !4511
  %add.ptr177 = getelementptr inbounds i8, i8* %149, i64 1, !dbg !4511
  store i8* %add.ptr177, i8** %ptr.addr, align 8, !dbg !4511
  br label %while.cond118, !dbg !4512

sw.default178:                                    ; preds = %while.body124
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !4513
  %151 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4514
  store i8* %150, i8** %151, align 8, !dbg !4515
  store i32 0, i32* %retval, align 4, !dbg !4516
  br label %return, !dbg !4516

sw.epilog179:                                     ; preds = %if.end172, %if.end158, %if.end144, %sw.bb130
  %152 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4517
  %153 = load i8*, i8** %ptr.addr, align 8, !dbg !4518
  %154 = load i8*, i8** %end.addr, align 8, !dbg !4519
  %155 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4520
  %call180 = call i32 @normal_scanAtts(%struct.encoding* %152, i8* %153, i8* %154, i8** %155), !dbg !4521
  store i32 %call180, i32* %retval, align 4, !dbg !4522
  br label %return, !dbg !4522

while.end:                                        ; preds = %while.cond118
  store i32 -1, i32* %retval, align 4, !dbg !4523
  br label %return, !dbg !4523

sw.bb181:                                         ; preds = %while.body
  br label %gt, !dbg !4524

gt:                                               ; preds = %sw.bb181, %sw.bb174
  %156 = load i8*, i8** %ptr.addr, align 8, !dbg !4525
  %add.ptr182 = getelementptr inbounds i8, i8* %156, i64 1, !dbg !4526
  %157 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4527
  store i8* %add.ptr182, i8** %157, align 8, !dbg !4528
  store i32 2, i32* %retval, align 4, !dbg !4529
  br label %return, !dbg !4529

sw.bb183:                                         ; preds = %while.body
  br label %sol, !dbg !4530

sol:                                              ; preds = %sw.bb183, %sw.bb175
  %158 = load i8*, i8** %ptr.addr, align 8, !dbg !4531
  %add.ptr184 = getelementptr inbounds i8, i8* %158, i64 1, !dbg !4531
  store i8* %add.ptr184, i8** %ptr.addr, align 8, !dbg !4531
  %159 = load i8*, i8** %end.addr, align 8, !dbg !4532
  %160 = load i8*, i8** %ptr.addr, align 8, !dbg !4532
  %sub.ptr.lhs.cast185 = ptrtoint i8* %159 to i64, !dbg !4532
  %sub.ptr.rhs.cast186 = ptrtoint i8* %160 to i64, !dbg !4532
  %sub.ptr.sub187 = sub i64 %sub.ptr.lhs.cast185, %sub.ptr.rhs.cast186, !dbg !4532
  %cmp188 = icmp sge i64 %sub.ptr.sub187, 1, !dbg !4532
  br i1 %cmp188, label %if.end191, label %if.then190, !dbg !4535

if.then190:                                       ; preds = %sol
  store i32 -1, i32* %retval, align 4, !dbg !4536
  br label %return, !dbg !4536

if.end191:                                        ; preds = %sol
  %161 = load i8*, i8** %ptr.addr, align 8, !dbg !4539
  %162 = load i8, i8* %161, align 1, !dbg !4539
  %conv192 = sext i8 %162 to i32, !dbg !4539
  %cmp193 = icmp eq i32 %conv192, 62, !dbg !4539
  br i1 %cmp193, label %if.end196, label %if.then195, !dbg !4541

if.then195:                                       ; preds = %if.end191
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !4542
  %164 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4544
  store i8* %163, i8** %164, align 8, !dbg !4545
  store i32 0, i32* %retval, align 4, !dbg !4546
  br label %return, !dbg !4546

if.end196:                                        ; preds = %if.end191
  %165 = load i8*, i8** %ptr.addr, align 8, !dbg !4547
  %add.ptr197 = getelementptr inbounds i8, i8* %165, i64 1, !dbg !4548
  %166 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4549
  store i8* %add.ptr197, i8** %166, align 8, !dbg !4550
  store i32 4, i32* %retval, align 4, !dbg !4551
  br label %return, !dbg !4551

sw.default198:                                    ; preds = %while.body
  %167 = load i8*, i8** %ptr.addr, align 8, !dbg !4552
  %168 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4553
  store i8* %167, i8** %168, align 8, !dbg !4554
  store i32 0, i32* %retval, align 4, !dbg !4555
  br label %return, !dbg !4555

sw.epilog199:                                     ; preds = %if.end114, %if.end101, %if.end88, %sw.bb75
  br label %while.cond, !dbg !4556

while.end200:                                     ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !4558
  br label %return, !dbg !4558

return:                                           ; preds = %while.end200, %sw.default198, %if.end196, %if.then195, %if.then190, %gt, %while.end, %sw.epilog179, %sw.default178, %if.then171, %if.then166, %if.then157, %if.then152, %if.then143, %if.then138, %sw.bb129, %if.then113, %if.then109, %if.then100, %if.then96, %if.then87, %if.then83, %sw.bb74, %sw.default, %sw.bb61, %sw.bb58, %sw.epilog, %sw.bb55, %sw.bb52, %if.then46, %if.then36, %if.then32, %if.then23, %if.then19, %if.then10, %if.then8, %sw.bb, %if.then
  %169 = load i32, i32* %retval, align 4, !dbg !4559
  ret i32 %169, !dbg !4559
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !263 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !4560, metadata !444), !dbg !4561
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4562, metadata !444), !dbg !4563
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4564, metadata !444), !dbg !4565
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !4566, metadata !444), !dbg !4567
  %0 = load i8*, i8** %end.addr, align 8, !dbg !4568
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !4568
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4568
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4568
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4568
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !4568
  br i1 %cmp, label %if.end, label %if.then, !dbg !4571

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4572
  br label %return, !dbg !4572

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4575
  %3 = load i8, i8* %2, align 1, !dbg !4575
  %idxprom = zext i8 %3 to i64, !dbg !4575
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4575
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !4575
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !4575
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !4575
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4575
  %conv = zext i8 %6 to i32, !dbg !4575
  switch i32 %conv, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb1
    i32 24, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb13
    i32 7, label %sw.bb26
    i32 19, label %sw.bb39
  ], !dbg !4576

sw.bb:                                            ; preds = %if.end
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !4577
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4577
  store i8* %7, i8** %8, align 8, !dbg !4577
  store i32 0, i32* %retval, align 4, !dbg !4577
  br label %return, !dbg !4577

sw.bb1:                                           ; preds = %if.end, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !4581
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4581
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4581
  br label %sw.epilog, !dbg !4581

sw.bb2:                                           ; preds = %if.end
  %10 = load i8*, i8** %end.addr, align 8, !dbg !4583
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !4583
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !4583
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !4583
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !4583
  %cmp6 = icmp slt i64 %sub.ptr.sub5, 2, !dbg !4583
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4583

if.then8:                                         ; preds = %sw.bb2
  store i32 -2, i32* %retval, align 4, !dbg !4586
  br label %return, !dbg !4586

if.end9:                                          ; preds = %sw.bb2
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4588
  %13 = bitcast %struct.encoding* %12 to %struct.normal_encoding*, !dbg !4588
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %13, i32 0, i32 5, !dbg !4588
  %14 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !4588
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4588
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !4588
  %call = call i32 %14(%struct.encoding* %15, i8* %16), !dbg !4588
  %tobool = icmp ne i32 %call, 0, !dbg !4588
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !4588

if.then10:                                        ; preds = %if.end9
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !4591
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4591
  store i8* %17, i8** %18, align 8, !dbg !4591
  store i32 0, i32* %retval, align 4, !dbg !4591
  br label %return, !dbg !4591

if.end11:                                         ; preds = %if.end9
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !4594
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !4594
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !4594
  br label %sw.epilog, !dbg !4594

sw.bb13:                                          ; preds = %if.end
  %20 = load i8*, i8** %end.addr, align 8, !dbg !4596
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !4596
  %sub.ptr.lhs.cast14 = ptrtoint i8* %20 to i64, !dbg !4596
  %sub.ptr.rhs.cast15 = ptrtoint i8* %21 to i64, !dbg !4596
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !4596
  %cmp17 = icmp slt i64 %sub.ptr.sub16, 3, !dbg !4596
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4596

if.then19:                                        ; preds = %sw.bb13
  store i32 -2, i32* %retval, align 4, !dbg !4599
  br label %return, !dbg !4599

if.end20:                                         ; preds = %sw.bb13
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4601
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !4601
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 6, !dbg !4601
  %24 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !4601
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4601
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !4601
  %call21 = call i32 %24(%struct.encoding* %25, i8* %26), !dbg !4601
  %tobool22 = icmp ne i32 %call21, 0, !dbg !4601
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4601

if.then23:                                        ; preds = %if.end20
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !4604
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4604
  store i8* %27, i8** %28, align 8, !dbg !4604
  store i32 0, i32* %retval, align 4, !dbg !4604
  br label %return, !dbg !4604

if.end24:                                         ; preds = %if.end20
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !4607
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !4607
  store i8* %add.ptr25, i8** %ptr.addr, align 8, !dbg !4607
  br label %sw.epilog, !dbg !4607

sw.bb26:                                          ; preds = %if.end
  %30 = load i8*, i8** %end.addr, align 8, !dbg !4609
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !4609
  %sub.ptr.lhs.cast27 = ptrtoint i8* %30 to i64, !dbg !4609
  %sub.ptr.rhs.cast28 = ptrtoint i8* %31 to i64, !dbg !4609
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !4609
  %cmp30 = icmp slt i64 %sub.ptr.sub29, 4, !dbg !4609
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4609

if.then32:                                        ; preds = %sw.bb26
  store i32 -2, i32* %retval, align 4, !dbg !4612
  br label %return, !dbg !4612

if.end33:                                         ; preds = %sw.bb26
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4614
  %33 = bitcast %struct.encoding* %32 to %struct.normal_encoding*, !dbg !4614
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %33, i32 0, i32 7, !dbg !4614
  %34 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !4614
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4614
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !4614
  %call34 = call i32 %34(%struct.encoding* %35, i8* %36), !dbg !4614
  %tobool35 = icmp ne i32 %call34, 0, !dbg !4614
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !4614

if.then36:                                        ; preds = %if.end33
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !4617
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4617
  store i8* %37, i8** %38, align 8, !dbg !4617
  store i32 0, i32* %retval, align 4, !dbg !4617
  br label %return, !dbg !4617

if.end37:                                         ; preds = %if.end33
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !4620
  %add.ptr38 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !4620
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !4620
  br label %sw.epilog, !dbg !4620

sw.bb39:                                          ; preds = %if.end
  %40 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4622
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !4623
  %add.ptr40 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !4624
  %42 = load i8*, i8** %end.addr, align 8, !dbg !4625
  %43 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4626
  %call41 = call i32 @normal_scanCharRef(%struct.encoding* %40, i8* %add.ptr40, i8* %42, i8** %43), !dbg !4627
  store i32 %call41, i32* %retval, align 4, !dbg !4628
  br label %return, !dbg !4628

sw.default:                                       ; preds = %if.end
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !4629
  %45 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4630
  store i8* %44, i8** %45, align 8, !dbg !4631
  store i32 0, i32* %retval, align 4, !dbg !4632
  br label %return, !dbg !4632

sw.epilog:                                        ; preds = %if.end37, %if.end24, %if.end11, %sw.bb1
  br label %while.cond, !dbg !4633

while.cond:                                       ; preds = %sw.epilog96, %sw.epilog
  %46 = load i8*, i8** %end.addr, align 8, !dbg !4634
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !4634
  %sub.ptr.lhs.cast42 = ptrtoint i8* %46 to i64, !dbg !4634
  %sub.ptr.rhs.cast43 = ptrtoint i8* %47 to i64, !dbg !4634
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43, !dbg !4634
  %cmp45 = icmp sge i64 %sub.ptr.sub44, 1, !dbg !4634
  br i1 %cmp45, label %while.body, label %while.end, !dbg !4636

while.body:                                       ; preds = %while.cond
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !4637
  %49 = load i8, i8* %48, align 1, !dbg !4637
  %idxprom47 = zext i8 %49 to i64, !dbg !4637
  %50 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4637
  %51 = bitcast %struct.encoding* %50 to %struct.normal_encoding*, !dbg !4637
  %type48 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %51, i32 0, i32 1, !dbg !4637
  %arrayidx49 = getelementptr inbounds [256 x i8], [256 x i8]* %type48, i64 0, i64 %idxprom47, !dbg !4637
  %52 = load i8, i8* %arrayidx49, align 1, !dbg !4637
  %conv50 = zext i8 %52 to i32, !dbg !4637
  switch i32 %conv50, label %sw.default95 [
    i32 29, label %sw.bb51
    i32 22, label %sw.bb52
    i32 24, label %sw.bb52
    i32 25, label %sw.bb52
    i32 26, label %sw.bb52
    i32 27, label %sw.bb52
    i32 5, label %sw.bb54
    i32 6, label %sw.bb67
    i32 7, label %sw.bb80
    i32 18, label %sw.bb93
  ], !dbg !4639

sw.bb51:                                          ; preds = %while.body
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !4640
  %54 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4640
  store i8* %53, i8** %54, align 8, !dbg !4640
  store i32 0, i32* %retval, align 4, !dbg !4640
  br label %return, !dbg !4640

sw.bb52:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !4644
  %add.ptr53 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !4644
  store i8* %add.ptr53, i8** %ptr.addr, align 8, !dbg !4644
  br label %sw.epilog96, !dbg !4644

sw.bb54:                                          ; preds = %while.body
  %56 = load i8*, i8** %end.addr, align 8, !dbg !4646
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !4646
  %sub.ptr.lhs.cast55 = ptrtoint i8* %56 to i64, !dbg !4646
  %sub.ptr.rhs.cast56 = ptrtoint i8* %57 to i64, !dbg !4646
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !4646
  %cmp58 = icmp slt i64 %sub.ptr.sub57, 2, !dbg !4646
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !4646

if.then60:                                        ; preds = %sw.bb54
  store i32 -2, i32* %retval, align 4, !dbg !4649
  br label %return, !dbg !4649

if.end61:                                         ; preds = %sw.bb54
  %58 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4651
  %59 = bitcast %struct.encoding* %58 to %struct.normal_encoding*, !dbg !4651
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %59, i32 0, i32 2, !dbg !4651
  %60 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !4651
  %61 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4651
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !4651
  %call62 = call i32 %60(%struct.encoding* %61, i8* %62), !dbg !4651
  %tobool63 = icmp ne i32 %call62, 0, !dbg !4651
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !4651

if.then64:                                        ; preds = %if.end61
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !4654
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4654
  store i8* %63, i8** %64, align 8, !dbg !4654
  store i32 0, i32* %retval, align 4, !dbg !4654
  br label %return, !dbg !4654

if.end65:                                         ; preds = %if.end61
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !4657
  %add.ptr66 = getelementptr inbounds i8, i8* %65, i64 2, !dbg !4657
  store i8* %add.ptr66, i8** %ptr.addr, align 8, !dbg !4657
  br label %sw.epilog96, !dbg !4657

sw.bb67:                                          ; preds = %while.body
  %66 = load i8*, i8** %end.addr, align 8, !dbg !4659
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !4659
  %sub.ptr.lhs.cast68 = ptrtoint i8* %66 to i64, !dbg !4659
  %sub.ptr.rhs.cast69 = ptrtoint i8* %67 to i64, !dbg !4659
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69, !dbg !4659
  %cmp71 = icmp slt i64 %sub.ptr.sub70, 3, !dbg !4659
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !4659

if.then73:                                        ; preds = %sw.bb67
  store i32 -2, i32* %retval, align 4, !dbg !4662
  br label %return, !dbg !4662

if.end74:                                         ; preds = %sw.bb67
  %68 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4664
  %69 = bitcast %struct.encoding* %68 to %struct.normal_encoding*, !dbg !4664
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %69, i32 0, i32 3, !dbg !4664
  %70 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !4664
  %71 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4664
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !4664
  %call75 = call i32 %70(%struct.encoding* %71, i8* %72), !dbg !4664
  %tobool76 = icmp ne i32 %call75, 0, !dbg !4664
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !4664

if.then77:                                        ; preds = %if.end74
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !4667
  %74 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4667
  store i8* %73, i8** %74, align 8, !dbg !4667
  store i32 0, i32* %retval, align 4, !dbg !4667
  br label %return, !dbg !4667

if.end78:                                         ; preds = %if.end74
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !4670
  %add.ptr79 = getelementptr inbounds i8, i8* %75, i64 3, !dbg !4670
  store i8* %add.ptr79, i8** %ptr.addr, align 8, !dbg !4670
  br label %sw.epilog96, !dbg !4670

sw.bb80:                                          ; preds = %while.body
  %76 = load i8*, i8** %end.addr, align 8, !dbg !4672
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !4672
  %sub.ptr.lhs.cast81 = ptrtoint i8* %76 to i64, !dbg !4672
  %sub.ptr.rhs.cast82 = ptrtoint i8* %77 to i64, !dbg !4672
  %sub.ptr.sub83 = sub i64 %sub.ptr.lhs.cast81, %sub.ptr.rhs.cast82, !dbg !4672
  %cmp84 = icmp slt i64 %sub.ptr.sub83, 4, !dbg !4672
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !4672

if.then86:                                        ; preds = %sw.bb80
  store i32 -2, i32* %retval, align 4, !dbg !4675
  br label %return, !dbg !4675

if.end87:                                         ; preds = %sw.bb80
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4677
  %79 = bitcast %struct.encoding* %78 to %struct.normal_encoding*, !dbg !4677
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %79, i32 0, i32 4, !dbg !4677
  %80 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !4677
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4677
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !4677
  %call88 = call i32 %80(%struct.encoding* %81, i8* %82), !dbg !4677
  %tobool89 = icmp ne i32 %call88, 0, !dbg !4677
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !4677

if.then90:                                        ; preds = %if.end87
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !4680
  %84 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4680
  store i8* %83, i8** %84, align 8, !dbg !4680
  store i32 0, i32* %retval, align 4, !dbg !4680
  br label %return, !dbg !4680

if.end91:                                         ; preds = %if.end87
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !4683
  %add.ptr92 = getelementptr inbounds i8, i8* %85, i64 4, !dbg !4683
  store i8* %add.ptr92, i8** %ptr.addr, align 8, !dbg !4683
  br label %sw.epilog96, !dbg !4683

sw.bb93:                                          ; preds = %while.body
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !4685
  %add.ptr94 = getelementptr inbounds i8, i8* %86, i64 1, !dbg !4686
  %87 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4687
  store i8* %add.ptr94, i8** %87, align 8, !dbg !4688
  store i32 9, i32* %retval, align 4, !dbg !4689
  br label %return, !dbg !4689

sw.default95:                                     ; preds = %while.body
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !4690
  %89 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4691
  store i8* %88, i8** %89, align 8, !dbg !4692
  store i32 0, i32* %retval, align 4, !dbg !4693
  br label %return, !dbg !4693

sw.epilog96:                                      ; preds = %if.end91, %if.end78, %if.end65, %sw.bb52
  br label %while.cond, !dbg !4694

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !4696
  br label %return, !dbg !4696

return:                                           ; preds = %while.end, %sw.default95, %sw.bb93, %if.then90, %if.then86, %if.then77, %if.then73, %if.then64, %if.then60, %sw.bb51, %sw.default, %sw.bb39, %if.then36, %if.then32, %if.then23, %if.then19, %if.then10, %if.then8, %sw.bb, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !4697
  ret i32 %90, !dbg !4697
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanCdataSection(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !260 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !4698, metadata !444), !dbg !4699
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4700, metadata !444), !dbg !4701
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4702, metadata !444), !dbg !4703
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !4704, metadata !444), !dbg !4705
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4706, metadata !444), !dbg !4707
  %0 = load i8*, i8** %end.addr, align 8, !dbg !4708
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !4708
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4708
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4708
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4708
  %cmp = icmp sge i64 %sub.ptr.sub, 6, !dbg !4708
  br i1 %cmp, label %if.end, label %if.then, !dbg !4711

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4712
  br label %return, !dbg !4712

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4715
  br label %for.cond, !dbg !4717

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !4718
  %cmp1 = icmp slt i32 %2, 6, !dbg !4721
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4722

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !4723
  %4 = load i8, i8* %3, align 1, !dbg !4723
  %conv = sext i8 %4 to i32, !dbg !4723
  %5 = load i32, i32* %i, align 4, !dbg !4723
  %idxprom = sext i32 %5 to i64, !dbg !4723
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* @normal_scanCdataSection.CDATA_LSQB, i64 0, i64 %idxprom, !dbg !4723
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4723
  %conv2 = sext i8 %6 to i32, !dbg !4723
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !4723
  br i1 %cmp3, label %if.end6, label %if.then5, !dbg !4726

if.then5:                                         ; preds = %for.body
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !4727
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4729
  store i8* %7, i8** %8, align 8, !dbg !4730
  store i32 0, i32* %retval, align 4, !dbg !4731
  br label %return, !dbg !4731

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !4732

for.inc:                                          ; preds = %if.end6
  %9 = load i32, i32* %i, align 4, !dbg !4733
  %inc = add nsw i32 %9, 1, !dbg !4733
  store i32 %inc, i32* %i, align 4, !dbg !4733
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !4735
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !4735
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4735
  br label %for.cond, !dbg !4736

for.end:                                          ; preds = %for.cond
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !4737
  %12 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4738
  store i8* %11, i8** %12, align 8, !dbg !4739
  store i32 8, i32* %retval, align 4, !dbg !4740
  br label %return, !dbg !4740

return:                                           ; preds = %for.end, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !4741
  ret i32 %13, !dbg !4741
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanEndTag(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !261 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !4742, metadata !444), !dbg !4743
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4744, metadata !444), !dbg !4745
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4746, metadata !444), !dbg !4747
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !4748, metadata !444), !dbg !4749
  %0 = load i8*, i8** %end.addr, align 8, !dbg !4750
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !4750
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4750
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4750
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4750
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !4750
  br i1 %cmp, label %if.end, label %if.then, !dbg !4753

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4754
  br label %return, !dbg !4754

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4757
  %3 = load i8, i8* %2, align 1, !dbg !4757
  %idxprom = zext i8 %3 to i64, !dbg !4757
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4757
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !4757
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !4757
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !4757
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4757
  %conv = zext i8 %6 to i32, !dbg !4757
  switch i32 %conv, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb1
    i32 24, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb13
    i32 7, label %sw.bb26
  ], !dbg !4758

sw.bb:                                            ; preds = %if.end
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !4759
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4759
  store i8* %7, i8** %8, align 8, !dbg !4759
  store i32 0, i32* %retval, align 4, !dbg !4759
  br label %return, !dbg !4759

sw.bb1:                                           ; preds = %if.end, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !4763
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4763
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4763
  br label %sw.epilog, !dbg !4763

sw.bb2:                                           ; preds = %if.end
  %10 = load i8*, i8** %end.addr, align 8, !dbg !4765
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !4765
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !4765
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !4765
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !4765
  %cmp6 = icmp slt i64 %sub.ptr.sub5, 2, !dbg !4765
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4765

if.then8:                                         ; preds = %sw.bb2
  store i32 -2, i32* %retval, align 4, !dbg !4768
  br label %return, !dbg !4768

if.end9:                                          ; preds = %sw.bb2
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4770
  %13 = bitcast %struct.encoding* %12 to %struct.normal_encoding*, !dbg !4770
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %13, i32 0, i32 5, !dbg !4770
  %14 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !4770
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4770
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !4770
  %call = call i32 %14(%struct.encoding* %15, i8* %16), !dbg !4770
  %tobool = icmp ne i32 %call, 0, !dbg !4770
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !4770

if.then10:                                        ; preds = %if.end9
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !4773
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4773
  store i8* %17, i8** %18, align 8, !dbg !4773
  store i32 0, i32* %retval, align 4, !dbg !4773
  br label %return, !dbg !4773

if.end11:                                         ; preds = %if.end9
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !4776
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !4776
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !4776
  br label %sw.epilog, !dbg !4776

sw.bb13:                                          ; preds = %if.end
  %20 = load i8*, i8** %end.addr, align 8, !dbg !4778
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !4778
  %sub.ptr.lhs.cast14 = ptrtoint i8* %20 to i64, !dbg !4778
  %sub.ptr.rhs.cast15 = ptrtoint i8* %21 to i64, !dbg !4778
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !4778
  %cmp17 = icmp slt i64 %sub.ptr.sub16, 3, !dbg !4778
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4778

if.then19:                                        ; preds = %sw.bb13
  store i32 -2, i32* %retval, align 4, !dbg !4781
  br label %return, !dbg !4781

if.end20:                                         ; preds = %sw.bb13
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4783
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !4783
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 6, !dbg !4783
  %24 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !4783
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4783
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !4783
  %call21 = call i32 %24(%struct.encoding* %25, i8* %26), !dbg !4783
  %tobool22 = icmp ne i32 %call21, 0, !dbg !4783
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4783

if.then23:                                        ; preds = %if.end20
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !4786
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4786
  store i8* %27, i8** %28, align 8, !dbg !4786
  store i32 0, i32* %retval, align 4, !dbg !4786
  br label %return, !dbg !4786

if.end24:                                         ; preds = %if.end20
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !4789
  %add.ptr25 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !4789
  store i8* %add.ptr25, i8** %ptr.addr, align 8, !dbg !4789
  br label %sw.epilog, !dbg !4789

sw.bb26:                                          ; preds = %if.end
  %30 = load i8*, i8** %end.addr, align 8, !dbg !4791
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !4791
  %sub.ptr.lhs.cast27 = ptrtoint i8* %30 to i64, !dbg !4791
  %sub.ptr.rhs.cast28 = ptrtoint i8* %31 to i64, !dbg !4791
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !4791
  %cmp30 = icmp slt i64 %sub.ptr.sub29, 4, !dbg !4791
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4791

if.then32:                                        ; preds = %sw.bb26
  store i32 -2, i32* %retval, align 4, !dbg !4794
  br label %return, !dbg !4794

if.end33:                                         ; preds = %sw.bb26
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4796
  %33 = bitcast %struct.encoding* %32 to %struct.normal_encoding*, !dbg !4796
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %33, i32 0, i32 7, !dbg !4796
  %34 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !4796
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4796
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !4796
  %call34 = call i32 %34(%struct.encoding* %35, i8* %36), !dbg !4796
  %tobool35 = icmp ne i32 %call34, 0, !dbg !4796
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !4796

if.then36:                                        ; preds = %if.end33
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !4799
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4799
  store i8* %37, i8** %38, align 8, !dbg !4799
  store i32 0, i32* %retval, align 4, !dbg !4799
  br label %return, !dbg !4799

if.end37:                                         ; preds = %if.end33
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !4802
  %add.ptr38 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !4802
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !4802
  br label %sw.epilog, !dbg !4802

sw.default:                                       ; preds = %if.end
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !4804
  %41 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4805
  store i8* %40, i8** %41, align 8, !dbg !4806
  store i32 0, i32* %retval, align 4, !dbg !4807
  br label %return, !dbg !4807

sw.epilog:                                        ; preds = %if.end37, %if.end24, %if.end11, %sw.bb1
  br label %while.cond, !dbg !4808

while.cond:                                       ; preds = %sw.epilog110, %sw.epilog
  %42 = load i8*, i8** %end.addr, align 8, !dbg !4809
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !4809
  %sub.ptr.lhs.cast39 = ptrtoint i8* %42 to i64, !dbg !4809
  %sub.ptr.rhs.cast40 = ptrtoint i8* %43 to i64, !dbg !4809
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !4809
  %cmp42 = icmp sge i64 %sub.ptr.sub41, 1, !dbg !4809
  br i1 %cmp42, label %while.body, label %while.end, !dbg !4811

while.body:                                       ; preds = %while.cond
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !4812
  %45 = load i8, i8* %44, align 1, !dbg !4812
  %idxprom44 = zext i8 %45 to i64, !dbg !4812
  %46 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4812
  %47 = bitcast %struct.encoding* %46 to %struct.normal_encoding*, !dbg !4812
  %type45 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %47, i32 0, i32 1, !dbg !4812
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* %type45, i64 0, i64 %idxprom44, !dbg !4812
  %48 = load i8, i8* %arrayidx46, align 1, !dbg !4812
  %conv47 = zext i8 %48 to i32, !dbg !4812
  switch i32 %conv47, label %sw.default109 [
    i32 29, label %sw.bb48
    i32 22, label %sw.bb49
    i32 24, label %sw.bb49
    i32 25, label %sw.bb49
    i32 26, label %sw.bb49
    i32 27, label %sw.bb49
    i32 5, label %sw.bb51
    i32 6, label %sw.bb64
    i32 7, label %sw.bb77
    i32 21, label %sw.bb90
    i32 9, label %sw.bb90
    i32 10, label %sw.bb90
    i32 11, label %sw.bb107
  ], !dbg !4814

sw.bb48:                                          ; preds = %while.body
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !4815
  %50 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4815
  store i8* %49, i8** %50, align 8, !dbg !4815
  store i32 0, i32* %retval, align 4, !dbg !4815
  br label %return, !dbg !4815

sw.bb49:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !4819
  %add.ptr50 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !4819
  store i8* %add.ptr50, i8** %ptr.addr, align 8, !dbg !4819
  br label %sw.epilog110, !dbg !4819

sw.bb51:                                          ; preds = %while.body
  %52 = load i8*, i8** %end.addr, align 8, !dbg !4821
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !4821
  %sub.ptr.lhs.cast52 = ptrtoint i8* %52 to i64, !dbg !4821
  %sub.ptr.rhs.cast53 = ptrtoint i8* %53 to i64, !dbg !4821
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53, !dbg !4821
  %cmp55 = icmp slt i64 %sub.ptr.sub54, 2, !dbg !4821
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !4821

if.then57:                                        ; preds = %sw.bb51
  store i32 -2, i32* %retval, align 4, !dbg !4824
  br label %return, !dbg !4824

if.end58:                                         ; preds = %sw.bb51
  %54 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4826
  %55 = bitcast %struct.encoding* %54 to %struct.normal_encoding*, !dbg !4826
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %55, i32 0, i32 2, !dbg !4826
  %56 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !4826
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4826
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !4826
  %call59 = call i32 %56(%struct.encoding* %57, i8* %58), !dbg !4826
  %tobool60 = icmp ne i32 %call59, 0, !dbg !4826
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !4826

if.then61:                                        ; preds = %if.end58
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !4829
  %60 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4829
  store i8* %59, i8** %60, align 8, !dbg !4829
  store i32 0, i32* %retval, align 4, !dbg !4829
  br label %return, !dbg !4829

if.end62:                                         ; preds = %if.end58
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !4832
  %add.ptr63 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !4832
  store i8* %add.ptr63, i8** %ptr.addr, align 8, !dbg !4832
  br label %sw.epilog110, !dbg !4832

sw.bb64:                                          ; preds = %while.body
  %62 = load i8*, i8** %end.addr, align 8, !dbg !4834
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !4834
  %sub.ptr.lhs.cast65 = ptrtoint i8* %62 to i64, !dbg !4834
  %sub.ptr.rhs.cast66 = ptrtoint i8* %63 to i64, !dbg !4834
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66, !dbg !4834
  %cmp68 = icmp slt i64 %sub.ptr.sub67, 3, !dbg !4834
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !4834

if.then70:                                        ; preds = %sw.bb64
  store i32 -2, i32* %retval, align 4, !dbg !4837
  br label %return, !dbg !4837

if.end71:                                         ; preds = %sw.bb64
  %64 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4839
  %65 = bitcast %struct.encoding* %64 to %struct.normal_encoding*, !dbg !4839
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %65, i32 0, i32 3, !dbg !4839
  %66 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !4839
  %67 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4839
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !4839
  %call72 = call i32 %66(%struct.encoding* %67, i8* %68), !dbg !4839
  %tobool73 = icmp ne i32 %call72, 0, !dbg !4839
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !4839

if.then74:                                        ; preds = %if.end71
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !4842
  %70 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4842
  store i8* %69, i8** %70, align 8, !dbg !4842
  store i32 0, i32* %retval, align 4, !dbg !4842
  br label %return, !dbg !4842

if.end75:                                         ; preds = %if.end71
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !4845
  %add.ptr76 = getelementptr inbounds i8, i8* %71, i64 3, !dbg !4845
  store i8* %add.ptr76, i8** %ptr.addr, align 8, !dbg !4845
  br label %sw.epilog110, !dbg !4845

sw.bb77:                                          ; preds = %while.body
  %72 = load i8*, i8** %end.addr, align 8, !dbg !4847
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !4847
  %sub.ptr.lhs.cast78 = ptrtoint i8* %72 to i64, !dbg !4847
  %sub.ptr.rhs.cast79 = ptrtoint i8* %73 to i64, !dbg !4847
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79, !dbg !4847
  %cmp81 = icmp slt i64 %sub.ptr.sub80, 4, !dbg !4847
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4847

if.then83:                                        ; preds = %sw.bb77
  store i32 -2, i32* %retval, align 4, !dbg !4850
  br label %return, !dbg !4850

if.end84:                                         ; preds = %sw.bb77
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4852
  %75 = bitcast %struct.encoding* %74 to %struct.normal_encoding*, !dbg !4852
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %75, i32 0, i32 4, !dbg !4852
  %76 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !4852
  %77 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4852
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !4852
  %call85 = call i32 %76(%struct.encoding* %77, i8* %78), !dbg !4852
  %tobool86 = icmp ne i32 %call85, 0, !dbg !4852
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !4852

if.then87:                                        ; preds = %if.end84
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !4855
  %80 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4855
  store i8* %79, i8** %80, align 8, !dbg !4855
  store i32 0, i32* %retval, align 4, !dbg !4855
  br label %return, !dbg !4855

if.end88:                                         ; preds = %if.end84
  %81 = load i8*, i8** %ptr.addr, align 8, !dbg !4858
  %add.ptr89 = getelementptr inbounds i8, i8* %81, i64 4, !dbg !4858
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !4858
  br label %sw.epilog110, !dbg !4858

sw.bb90:                                          ; preds = %while.body, %while.body, %while.body
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !4860
  %add.ptr91 = getelementptr inbounds i8, i8* %82, i64 1, !dbg !4860
  store i8* %add.ptr91, i8** %ptr.addr, align 8, !dbg !4860
  br label %for.cond, !dbg !4862

for.cond:                                         ; preds = %for.inc, %sw.bb90
  %83 = load i8*, i8** %end.addr, align 8, !dbg !4863
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !4863
  %sub.ptr.lhs.cast92 = ptrtoint i8* %83 to i64, !dbg !4863
  %sub.ptr.rhs.cast93 = ptrtoint i8* %84 to i64, !dbg !4863
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93, !dbg !4863
  %cmp95 = icmp sge i64 %sub.ptr.sub94, 1, !dbg !4863
  br i1 %cmp95, label %for.body, label %for.end, !dbg !4866

for.body:                                         ; preds = %for.cond
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !4867
  %86 = load i8, i8* %85, align 1, !dbg !4867
  %idxprom97 = zext i8 %86 to i64, !dbg !4867
  %87 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4867
  %88 = bitcast %struct.encoding* %87 to %struct.normal_encoding*, !dbg !4867
  %type98 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %88, i32 0, i32 1, !dbg !4867
  %arrayidx99 = getelementptr inbounds [256 x i8], [256 x i8]* %type98, i64 0, i64 %idxprom97, !dbg !4867
  %89 = load i8, i8* %arrayidx99, align 1, !dbg !4867
  %conv100 = zext i8 %89 to i32, !dbg !4867
  switch i32 %conv100, label %sw.default104 [
    i32 21, label %sw.bb101
    i32 9, label %sw.bb101
    i32 10, label %sw.bb101
    i32 11, label %sw.bb102
  ], !dbg !4869

sw.bb101:                                         ; preds = %for.body, %for.body, %for.body
  br label %sw.epilog105, !dbg !4870

sw.bb102:                                         ; preds = %for.body
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !4872
  %add.ptr103 = getelementptr inbounds i8, i8* %90, i64 1, !dbg !4873
  %91 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4874
  store i8* %add.ptr103, i8** %91, align 8, !dbg !4875
  store i32 5, i32* %retval, align 4, !dbg !4876
  br label %return, !dbg !4876

sw.default104:                                    ; preds = %for.body
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !4877
  %93 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4878
  store i8* %92, i8** %93, align 8, !dbg !4879
  store i32 0, i32* %retval, align 4, !dbg !4880
  br label %return, !dbg !4880

sw.epilog105:                                     ; preds = %sw.bb101
  br label %for.inc, !dbg !4881

for.inc:                                          ; preds = %sw.epilog105
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !4882
  %add.ptr106 = getelementptr inbounds i8, i8* %94, i64 1, !dbg !4882
  store i8* %add.ptr106, i8** %ptr.addr, align 8, !dbg !4882
  br label %for.cond, !dbg !4884

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !4885
  br label %return, !dbg !4885

sw.bb107:                                         ; preds = %while.body
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !4886
  %add.ptr108 = getelementptr inbounds i8, i8* %95, i64 1, !dbg !4887
  %96 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4888
  store i8* %add.ptr108, i8** %96, align 8, !dbg !4889
  store i32 5, i32* %retval, align 4, !dbg !4890
  br label %return, !dbg !4890

sw.default109:                                    ; preds = %while.body
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !4891
  %98 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4892
  store i8* %97, i8** %98, align 8, !dbg !4893
  store i32 0, i32* %retval, align 4, !dbg !4894
  br label %return, !dbg !4894

sw.epilog110:                                     ; preds = %if.end88, %if.end75, %if.end62, %sw.bb49
  br label %while.cond, !dbg !4895

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !4897
  br label %return, !dbg !4897

return:                                           ; preds = %while.end, %sw.default109, %sw.bb107, %for.end, %sw.default104, %sw.bb102, %if.then87, %if.then83, %if.then74, %if.then70, %if.then61, %if.then57, %sw.bb48, %sw.default, %if.then36, %if.then32, %if.then23, %if.then19, %if.then10, %if.then8, %sw.bb, %if.then
  %99 = load i32, i32* %retval, align 4, !dbg !4898
  ret i32 %99, !dbg !4898
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanAtts(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !262 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %t = alloca i32, align 4
  %open = alloca i32, align 4
  %t81 = alloca i32, align 4
  %tok = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !4899, metadata !444), !dbg !4900
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4901, metadata !444), !dbg !4902
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4903, metadata !444), !dbg !4904
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !4905, metadata !444), !dbg !4906
  br label %while.cond, !dbg !4907

while.cond:                                       ; preds = %sw.epilog247, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !4908
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !4908
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4908
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4908
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4908
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !4908
  br i1 %cmp, label %while.body, label %while.end, !dbg !4910

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !4911
  %3 = load i8, i8* %2, align 1, !dbg !4911
  %idxprom = zext i8 %3 to i64, !dbg !4911
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4911
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !4911
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !4911
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !4911
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4911
  %conv = zext i8 %6 to i32, !dbg !4911
  switch i32 %conv, label %sw.default246 [
    i32 29, label %sw.bb
    i32 22, label %sw.bb1
    i32 24, label %sw.bb1
    i32 25, label %sw.bb1
    i32 26, label %sw.bb1
    i32 27, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb11
    i32 7, label %sw.bb24
    i32 21, label %sw.bb37
    i32 9, label %sw.bb37
    i32 10, label %sw.bb37
    i32 14, label %sw.bb55
  ], !dbg !4913

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !4914
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4914
  store i8* %7, i8** %8, align 8, !dbg !4914
  store i32 0, i32* %retval, align 4, !dbg !4914
  br label %return, !dbg !4914

sw.bb1:                                           ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !4918
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4918
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !4918
  br label %sw.epilog247, !dbg !4918

sw.bb2:                                           ; preds = %while.body
  %10 = load i8*, i8** %end.addr, align 8, !dbg !4920
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !4920
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !4920
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !4920
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !4920
  %cmp6 = icmp slt i64 %sub.ptr.sub5, 2, !dbg !4920
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4920

if.then:                                          ; preds = %sw.bb2
  store i32 -2, i32* %retval, align 4, !dbg !4923
  br label %return, !dbg !4923

if.end:                                           ; preds = %sw.bb2
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4925
  %13 = bitcast %struct.encoding* %12 to %struct.normal_encoding*, !dbg !4925
  %isName2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %13, i32 0, i32 2, !dbg !4925
  %14 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName2, align 8, !dbg !4925
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4925
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !4925
  %call = call i32 %14(%struct.encoding* %15, i8* %16), !dbg !4925
  %tobool = icmp ne i32 %call, 0, !dbg !4925
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !4925

if.then8:                                         ; preds = %if.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !4928
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4928
  store i8* %17, i8** %18, align 8, !dbg !4928
  store i32 0, i32* %retval, align 4, !dbg !4928
  br label %return, !dbg !4928

if.end9:                                          ; preds = %if.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !4931
  %add.ptr10 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !4931
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !4931
  br label %sw.epilog247, !dbg !4931

sw.bb11:                                          ; preds = %while.body
  %20 = load i8*, i8** %end.addr, align 8, !dbg !4933
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !4933
  %sub.ptr.lhs.cast12 = ptrtoint i8* %20 to i64, !dbg !4933
  %sub.ptr.rhs.cast13 = ptrtoint i8* %21 to i64, !dbg !4933
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast12, %sub.ptr.rhs.cast13, !dbg !4933
  %cmp15 = icmp slt i64 %sub.ptr.sub14, 3, !dbg !4933
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4933

if.then17:                                        ; preds = %sw.bb11
  store i32 -2, i32* %retval, align 4, !dbg !4936
  br label %return, !dbg !4936

if.end18:                                         ; preds = %sw.bb11
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4938
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !4938
  %isName3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 3, !dbg !4938
  %24 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName3, align 8, !dbg !4938
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4938
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !4938
  %call19 = call i32 %24(%struct.encoding* %25, i8* %26), !dbg !4938
  %tobool20 = icmp ne i32 %call19, 0, !dbg !4938
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !4938

if.then21:                                        ; preds = %if.end18
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !4941
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4941
  store i8* %27, i8** %28, align 8, !dbg !4941
  store i32 0, i32* %retval, align 4, !dbg !4941
  br label %return, !dbg !4941

if.end22:                                         ; preds = %if.end18
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !4944
  %add.ptr23 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !4944
  store i8* %add.ptr23, i8** %ptr.addr, align 8, !dbg !4944
  br label %sw.epilog247, !dbg !4944

sw.bb24:                                          ; preds = %while.body
  %30 = load i8*, i8** %end.addr, align 8, !dbg !4946
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !4946
  %sub.ptr.lhs.cast25 = ptrtoint i8* %30 to i64, !dbg !4946
  %sub.ptr.rhs.cast26 = ptrtoint i8* %31 to i64, !dbg !4946
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast26, !dbg !4946
  %cmp28 = icmp slt i64 %sub.ptr.sub27, 4, !dbg !4946
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !4946

if.then30:                                        ; preds = %sw.bb24
  store i32 -2, i32* %retval, align 4, !dbg !4949
  br label %return, !dbg !4949

if.end31:                                         ; preds = %sw.bb24
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4951
  %33 = bitcast %struct.encoding* %32 to %struct.normal_encoding*, !dbg !4951
  %isName4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %33, i32 0, i32 4, !dbg !4951
  %34 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isName4, align 8, !dbg !4951
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4951
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !4951
  %call32 = call i32 %34(%struct.encoding* %35, i8* %36), !dbg !4951
  %tobool33 = icmp ne i32 %call32, 0, !dbg !4951
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !4951

if.then34:                                        ; preds = %if.end31
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !4954
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4954
  store i8* %37, i8** %38, align 8, !dbg !4954
  store i32 0, i32* %retval, align 4, !dbg !4954
  br label %return, !dbg !4954

if.end35:                                         ; preds = %if.end31
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !4957
  %add.ptr36 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !4957
  store i8* %add.ptr36, i8** %ptr.addr, align 8, !dbg !4957
  br label %sw.epilog247, !dbg !4957

sw.bb37:                                          ; preds = %while.body, %while.body, %while.body
  br label %for.cond, !dbg !4959

for.cond:                                         ; preds = %sw.epilog, %sw.bb37
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4960, metadata !444), !dbg !4964
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !4965
  %add.ptr38 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !4965
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !4965
  %41 = load i8*, i8** %end.addr, align 8, !dbg !4966
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !4966
  %sub.ptr.lhs.cast39 = ptrtoint i8* %41 to i64, !dbg !4966
  %sub.ptr.rhs.cast40 = ptrtoint i8* %42 to i64, !dbg !4966
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !4966
  %cmp42 = icmp sge i64 %sub.ptr.sub41, 1, !dbg !4966
  br i1 %cmp42, label %if.end45, label %if.then44, !dbg !4969

if.then44:                                        ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !4970
  br label %return, !dbg !4970

if.end45:                                         ; preds = %for.cond
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !4973
  %44 = load i8, i8* %43, align 1, !dbg !4973
  %idxprom46 = zext i8 %44 to i64, !dbg !4973
  %45 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4973
  %46 = bitcast %struct.encoding* %45 to %struct.normal_encoding*, !dbg !4973
  %type47 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %46, i32 0, i32 1, !dbg !4973
  %arrayidx48 = getelementptr inbounds [256 x i8], [256 x i8]* %type47, i64 0, i64 %idxprom46, !dbg !4973
  %47 = load i8, i8* %arrayidx48, align 1, !dbg !4973
  %conv49 = zext i8 %47 to i32, !dbg !4973
  store i32 %conv49, i32* %t, align 4, !dbg !4974
  %48 = load i32, i32* %t, align 4, !dbg !4975
  %cmp50 = icmp eq i32 %48, 14, !dbg !4977
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !4978

if.then52:                                        ; preds = %if.end45
  br label %for.end, !dbg !4979

if.end53:                                         ; preds = %if.end45
  %49 = load i32, i32* %t, align 4, !dbg !4980
  switch i32 %49, label %sw.default [
    i32 21, label %sw.bb54
    i32 10, label %sw.bb54
    i32 9, label %sw.bb54
  ], !dbg !4981

sw.bb54:                                          ; preds = %if.end53, %if.end53, %if.end53
  br label %sw.epilog, !dbg !4982

sw.default:                                       ; preds = %if.end53
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !4984
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !4985
  store i8* %50, i8** %51, align 8, !dbg !4986
  store i32 0, i32* %retval, align 4, !dbg !4987
  br label %return, !dbg !4987

sw.epilog:                                        ; preds = %sw.bb54
  br label %for.cond, !dbg !4988

for.end:                                          ; preds = %if.then52
  br label %sw.bb55, !dbg !4990

sw.bb55:                                          ; preds = %while.body, %for.end
  call void @llvm.dbg.declare(metadata i32* %open, metadata !4991, metadata !444), !dbg !4993
  br label %for.cond56, !dbg !4994

for.cond56:                                       ; preds = %sw.epilog77, %sw.bb55
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !4995
  %add.ptr57 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !4995
  store i8* %add.ptr57, i8** %ptr.addr, align 8, !dbg !4995
  %53 = load i8*, i8** %end.addr, align 8, !dbg !4999
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !4999
  %sub.ptr.lhs.cast58 = ptrtoint i8* %53 to i64, !dbg !4999
  %sub.ptr.rhs.cast59 = ptrtoint i8* %54 to i64, !dbg !4999
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59, !dbg !4999
  %cmp61 = icmp sge i64 %sub.ptr.sub60, 1, !dbg !4999
  br i1 %cmp61, label %if.end64, label %if.then63, !dbg !5002

if.then63:                                        ; preds = %for.cond56
  store i32 -1, i32* %retval, align 4, !dbg !5003
  br label %return, !dbg !5003

if.end64:                                         ; preds = %for.cond56
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !5006
  %56 = load i8, i8* %55, align 1, !dbg !5006
  %idxprom65 = zext i8 %56 to i64, !dbg !5006
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5006
  %58 = bitcast %struct.encoding* %57 to %struct.normal_encoding*, !dbg !5006
  %type66 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %58, i32 0, i32 1, !dbg !5006
  %arrayidx67 = getelementptr inbounds [256 x i8], [256 x i8]* %type66, i64 0, i64 %idxprom65, !dbg !5006
  %59 = load i8, i8* %arrayidx67, align 1, !dbg !5006
  %conv68 = zext i8 %59 to i32, !dbg !5006
  store i32 %conv68, i32* %open, align 4, !dbg !5007
  %60 = load i32, i32* %open, align 4, !dbg !5008
  %cmp69 = icmp eq i32 %60, 12, !dbg !5010
  br i1 %cmp69, label %if.then73, label %lor.lhs.false, !dbg !5011

lor.lhs.false:                                    ; preds = %if.end64
  %61 = load i32, i32* %open, align 4, !dbg !5012
  %cmp71 = icmp eq i32 %61, 13, !dbg !5014
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !5015

if.then73:                                        ; preds = %lor.lhs.false, %if.end64
  br label %for.end78, !dbg !5016

if.end74:                                         ; preds = %lor.lhs.false
  %62 = load i32, i32* %open, align 4, !dbg !5017
  switch i32 %62, label %sw.default76 [
    i32 21, label %sw.bb75
    i32 10, label %sw.bb75
    i32 9, label %sw.bb75
  ], !dbg !5018

sw.bb75:                                          ; preds = %if.end74, %if.end74, %if.end74
  br label %sw.epilog77, !dbg !5019

sw.default76:                                     ; preds = %if.end74
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !5021
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5022
  store i8* %63, i8** %64, align 8, !dbg !5023
  store i32 0, i32* %retval, align 4, !dbg !5024
  br label %return, !dbg !5024

sw.epilog77:                                      ; preds = %sw.bb75
  br label %for.cond56, !dbg !5025

for.end78:                                        ; preds = %if.then73
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !5027
  %add.ptr79 = getelementptr inbounds i8, i8* %65, i64 1, !dbg !5027
  store i8* %add.ptr79, i8** %ptr.addr, align 8, !dbg !5027
  br label %for.cond80, !dbg !5028

for.cond80:                                       ; preds = %sw.epilog151, %for.end78
  call void @llvm.dbg.declare(metadata i32* %t81, metadata !5029, metadata !444), !dbg !5033
  %66 = load i8*, i8** %end.addr, align 8, !dbg !5034
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !5034
  %sub.ptr.lhs.cast82 = ptrtoint i8* %66 to i64, !dbg !5034
  %sub.ptr.rhs.cast83 = ptrtoint i8* %67 to i64, !dbg !5034
  %sub.ptr.sub84 = sub i64 %sub.ptr.lhs.cast82, %sub.ptr.rhs.cast83, !dbg !5034
  %cmp85 = icmp sge i64 %sub.ptr.sub84, 1, !dbg !5034
  br i1 %cmp85, label %if.end88, label %if.then87, !dbg !5037

if.then87:                                        ; preds = %for.cond80
  store i32 -1, i32* %retval, align 4, !dbg !5038
  br label %return, !dbg !5038

if.end88:                                         ; preds = %for.cond80
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !5041
  %69 = load i8, i8* %68, align 1, !dbg !5041
  %idxprom89 = zext i8 %69 to i64, !dbg !5041
  %70 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5041
  %71 = bitcast %struct.encoding* %70 to %struct.normal_encoding*, !dbg !5041
  %type90 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %71, i32 0, i32 1, !dbg !5041
  %arrayidx91 = getelementptr inbounds [256 x i8], [256 x i8]* %type90, i64 0, i64 %idxprom89, !dbg !5041
  %72 = load i8, i8* %arrayidx91, align 1, !dbg !5041
  %conv92 = zext i8 %72 to i32, !dbg !5041
  store i32 %conv92, i32* %t81, align 4, !dbg !5042
  %73 = load i32, i32* %t81, align 4, !dbg !5043
  %74 = load i32, i32* %open, align 4, !dbg !5045
  %cmp93 = icmp eq i32 %73, %74, !dbg !5046
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !5047

if.then95:                                        ; preds = %if.end88
  br label %for.end152, !dbg !5048

if.end96:                                         ; preds = %if.end88
  %75 = load i32, i32* %t81, align 4, !dbg !5049
  switch i32 %75, label %sw.default149 [
    i32 5, label %sw.bb97
    i32 6, label %sw.bb110
    i32 7, label %sw.bb123
    i32 0, label %sw.bb136
    i32 1, label %sw.bb136
    i32 8, label %sw.bb136
    i32 3, label %sw.bb137
    i32 2, label %sw.bb148
  ], !dbg !5050

sw.bb97:                                          ; preds = %if.end96
  %76 = load i8*, i8** %end.addr, align 8, !dbg !5051
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !5051
  %sub.ptr.lhs.cast98 = ptrtoint i8* %76 to i64, !dbg !5051
  %sub.ptr.rhs.cast99 = ptrtoint i8* %77 to i64, !dbg !5051
  %sub.ptr.sub100 = sub i64 %sub.ptr.lhs.cast98, %sub.ptr.rhs.cast99, !dbg !5051
  %cmp101 = icmp slt i64 %sub.ptr.sub100, 2, !dbg !5051
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !5054

if.then103:                                       ; preds = %sw.bb97
  store i32 -2, i32* %retval, align 4, !dbg !5055
  br label %return, !dbg !5055

if.end104:                                        ; preds = %sw.bb97
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5057
  %79 = bitcast %struct.encoding* %78 to %struct.normal_encoding*, !dbg !5057
  %isInvalid2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %79, i32 0, i32 8, !dbg !5057
  %80 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid2, align 8, !dbg !5057
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5057
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !5057
  %call105 = call i32 %80(%struct.encoding* %81, i8* %82), !dbg !5057
  %tobool106 = icmp ne i32 %call105, 0, !dbg !5057
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !5057

if.then107:                                       ; preds = %if.end104
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !5060
  %84 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5060
  store i8* %83, i8** %84, align 8, !dbg !5060
  store i32 0, i32* %retval, align 4, !dbg !5060
  br label %return, !dbg !5060

if.end108:                                        ; preds = %if.end104
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !5063
  %add.ptr109 = getelementptr inbounds i8, i8* %85, i64 2, !dbg !5063
  store i8* %add.ptr109, i8** %ptr.addr, align 8, !dbg !5063
  br label %sw.epilog151, !dbg !5063

sw.bb110:                                         ; preds = %if.end96
  %86 = load i8*, i8** %end.addr, align 8, !dbg !5065
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !5065
  %sub.ptr.lhs.cast111 = ptrtoint i8* %86 to i64, !dbg !5065
  %sub.ptr.rhs.cast112 = ptrtoint i8* %87 to i64, !dbg !5065
  %sub.ptr.sub113 = sub i64 %sub.ptr.lhs.cast111, %sub.ptr.rhs.cast112, !dbg !5065
  %cmp114 = icmp slt i64 %sub.ptr.sub113, 3, !dbg !5065
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !5065

if.then116:                                       ; preds = %sw.bb110
  store i32 -2, i32* %retval, align 4, !dbg !5068
  br label %return, !dbg !5068

if.end117:                                        ; preds = %sw.bb110
  %88 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5070
  %89 = bitcast %struct.encoding* %88 to %struct.normal_encoding*, !dbg !5070
  %isInvalid3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %89, i32 0, i32 9, !dbg !5070
  %90 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid3, align 8, !dbg !5070
  %91 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5070
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !5070
  %call118 = call i32 %90(%struct.encoding* %91, i8* %92), !dbg !5070
  %tobool119 = icmp ne i32 %call118, 0, !dbg !5070
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !5070

if.then120:                                       ; preds = %if.end117
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !5073
  %94 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5073
  store i8* %93, i8** %94, align 8, !dbg !5073
  store i32 0, i32* %retval, align 4, !dbg !5073
  br label %return, !dbg !5073

if.end121:                                        ; preds = %if.end117
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !5076
  %add.ptr122 = getelementptr inbounds i8, i8* %95, i64 3, !dbg !5076
  store i8* %add.ptr122, i8** %ptr.addr, align 8, !dbg !5076
  br label %sw.epilog151, !dbg !5076

sw.bb123:                                         ; preds = %if.end96
  %96 = load i8*, i8** %end.addr, align 8, !dbg !5078
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !5078
  %sub.ptr.lhs.cast124 = ptrtoint i8* %96 to i64, !dbg !5078
  %sub.ptr.rhs.cast125 = ptrtoint i8* %97 to i64, !dbg !5078
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !5078
  %cmp127 = icmp slt i64 %sub.ptr.sub126, 4, !dbg !5078
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !5078

if.then129:                                       ; preds = %sw.bb123
  store i32 -2, i32* %retval, align 4, !dbg !5081
  br label %return, !dbg !5081

if.end130:                                        ; preds = %sw.bb123
  %98 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5083
  %99 = bitcast %struct.encoding* %98 to %struct.normal_encoding*, !dbg !5083
  %isInvalid4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %99, i32 0, i32 10, !dbg !5083
  %100 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isInvalid4, align 8, !dbg !5083
  %101 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5083
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !5083
  %call131 = call i32 %100(%struct.encoding* %101, i8* %102), !dbg !5083
  %tobool132 = icmp ne i32 %call131, 0, !dbg !5083
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !5083

if.then133:                                       ; preds = %if.end130
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !5086
  %104 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5086
  store i8* %103, i8** %104, align 8, !dbg !5086
  store i32 0, i32* %retval, align 4, !dbg !5086
  br label %return, !dbg !5086

if.end134:                                        ; preds = %if.end130
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !5089
  %add.ptr135 = getelementptr inbounds i8, i8* %105, i64 4, !dbg !5089
  store i8* %add.ptr135, i8** %ptr.addr, align 8, !dbg !5089
  br label %sw.epilog151, !dbg !5089

sw.bb136:                                         ; preds = %if.end96, %if.end96, %if.end96
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !5091
  %107 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5091
  store i8* %106, i8** %107, align 8, !dbg !5091
  store i32 0, i32* %retval, align 4, !dbg !5091
  br label %return, !dbg !5091

sw.bb137:                                         ; preds = %if.end96
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !5093, metadata !444), !dbg !5095
  %108 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5096
  %109 = load i8*, i8** %ptr.addr, align 8, !dbg !5097
  %add.ptr138 = getelementptr inbounds i8, i8* %109, i64 1, !dbg !5098
  %110 = load i8*, i8** %end.addr, align 8, !dbg !5099
  %call139 = call i32 @normal_scanRef(%struct.encoding* %108, i8* %add.ptr138, i8* %110, i8** %ptr.addr), !dbg !5100
  store i32 %call139, i32* %tok, align 4, !dbg !5095
  %111 = load i32, i32* %tok, align 4, !dbg !5101
  %cmp140 = icmp sle i32 %111, 0, !dbg !5103
  br i1 %cmp140, label %if.then142, label %if.end147, !dbg !5104

if.then142:                                       ; preds = %sw.bb137
  %112 = load i32, i32* %tok, align 4, !dbg !5105
  %cmp143 = icmp eq i32 %112, 0, !dbg !5108
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !5109

if.then145:                                       ; preds = %if.then142
  %113 = load i8*, i8** %ptr.addr, align 8, !dbg !5110
  %114 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5111
  store i8* %113, i8** %114, align 8, !dbg !5112
  br label %if.end146, !dbg !5113

if.end146:                                        ; preds = %if.then145, %if.then142
  %115 = load i32, i32* %tok, align 4, !dbg !5114
  store i32 %115, i32* %retval, align 4, !dbg !5115
  br label %return, !dbg !5115

if.end147:                                        ; preds = %sw.bb137
  br label %sw.epilog151, !dbg !5116

sw.bb148:                                         ; preds = %if.end96
  %116 = load i8*, i8** %ptr.addr, align 8, !dbg !5117
  %117 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5118
  store i8* %116, i8** %117, align 8, !dbg !5119
  store i32 0, i32* %retval, align 4, !dbg !5120
  br label %return, !dbg !5120

sw.default149:                                    ; preds = %if.end96
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !5121
  %add.ptr150 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !5121
  store i8* %add.ptr150, i8** %ptr.addr, align 8, !dbg !5121
  br label %sw.epilog151, !dbg !5122

sw.epilog151:                                     ; preds = %sw.default149, %if.end147, %if.end134, %if.end121, %if.end108
  br label %for.cond80, !dbg !5123

for.end152:                                       ; preds = %if.then95
  %119 = load i8*, i8** %ptr.addr, align 8, !dbg !5125
  %add.ptr153 = getelementptr inbounds i8, i8* %119, i64 1, !dbg !5125
  store i8* %add.ptr153, i8** %ptr.addr, align 8, !dbg !5125
  %120 = load i8*, i8** %end.addr, align 8, !dbg !5126
  %121 = load i8*, i8** %ptr.addr, align 8, !dbg !5126
  %sub.ptr.lhs.cast154 = ptrtoint i8* %120 to i64, !dbg !5126
  %sub.ptr.rhs.cast155 = ptrtoint i8* %121 to i64, !dbg !5126
  %sub.ptr.sub156 = sub i64 %sub.ptr.lhs.cast154, %sub.ptr.rhs.cast155, !dbg !5126
  %cmp157 = icmp sge i64 %sub.ptr.sub156, 1, !dbg !5126
  br i1 %cmp157, label %if.end160, label %if.then159, !dbg !5129

if.then159:                                       ; preds = %for.end152
  store i32 -1, i32* %retval, align 4, !dbg !5130
  br label %return, !dbg !5130

if.end160:                                        ; preds = %for.end152
  %122 = load i8*, i8** %ptr.addr, align 8, !dbg !5133
  %123 = load i8, i8* %122, align 1, !dbg !5133
  %idxprom161 = zext i8 %123 to i64, !dbg !5133
  %124 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5133
  %125 = bitcast %struct.encoding* %124 to %struct.normal_encoding*, !dbg !5133
  %type162 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %125, i32 0, i32 1, !dbg !5133
  %arrayidx163 = getelementptr inbounds [256 x i8], [256 x i8]* %type162, i64 0, i64 %idxprom161, !dbg !5133
  %126 = load i8, i8* %arrayidx163, align 1, !dbg !5133
  %conv164 = zext i8 %126 to i32, !dbg !5133
  switch i32 %conv164, label %sw.default168 [
    i32 21, label %sw.bb165
    i32 9, label %sw.bb165
    i32 10, label %sw.bb165
    i32 17, label %sw.bb166
    i32 11, label %sw.bb167
  ], !dbg !5134

sw.bb165:                                         ; preds = %if.end160, %if.end160, %if.end160
  br label %sw.epilog169, !dbg !5135

sw.bb166:                                         ; preds = %if.end160
  br label %sol, !dbg !5137

sw.bb167:                                         ; preds = %if.end160
  br label %gt, !dbg !5138

sw.default168:                                    ; preds = %if.end160
  %127 = load i8*, i8** %ptr.addr, align 8, !dbg !5139
  %128 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5140
  store i8* %127, i8** %128, align 8, !dbg !5141
  store i32 0, i32* %retval, align 4, !dbg !5142
  br label %return, !dbg !5142

sw.epilog169:                                     ; preds = %sw.bb165
  br label %for.cond170, !dbg !5143

for.cond170:                                      ; preds = %sw.bb225, %sw.epilog169
  %129 = load i8*, i8** %ptr.addr, align 8, !dbg !5144
  %add.ptr171 = getelementptr inbounds i8, i8* %129, i64 1, !dbg !5144
  store i8* %add.ptr171, i8** %ptr.addr, align 8, !dbg !5144
  %130 = load i8*, i8** %end.addr, align 8, !dbg !5148
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !5148
  %sub.ptr.lhs.cast172 = ptrtoint i8* %130 to i64, !dbg !5148
  %sub.ptr.rhs.cast173 = ptrtoint i8* %131 to i64, !dbg !5148
  %sub.ptr.sub174 = sub i64 %sub.ptr.lhs.cast172, %sub.ptr.rhs.cast173, !dbg !5148
  %cmp175 = icmp sge i64 %sub.ptr.sub174, 1, !dbg !5148
  br i1 %cmp175, label %if.end178, label %if.then177, !dbg !5151

if.then177:                                       ; preds = %for.cond170
  store i32 -1, i32* %retval, align 4, !dbg !5152
  br label %return, !dbg !5152

if.end178:                                        ; preds = %for.cond170
  %132 = load i8*, i8** %ptr.addr, align 8, !dbg !5155
  %133 = load i8, i8* %132, align 1, !dbg !5155
  %idxprom179 = zext i8 %133 to i64, !dbg !5155
  %134 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5155
  %135 = bitcast %struct.encoding* %134 to %struct.normal_encoding*, !dbg !5155
  %type180 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %135, i32 0, i32 1, !dbg !5155
  %arrayidx181 = getelementptr inbounds [256 x i8], [256 x i8]* %type180, i64 0, i64 %idxprom179, !dbg !5155
  %136 = load i8, i8* %arrayidx181, align 1, !dbg !5155
  %conv182 = zext i8 %136 to i32, !dbg !5155
  switch i32 %conv182, label %sw.default243 [
    i32 29, label %sw.bb183
    i32 22, label %sw.bb184
    i32 24, label %sw.bb184
    i32 5, label %sw.bb186
    i32 6, label %sw.bb199
    i32 7, label %sw.bb212
    i32 21, label %sw.bb225
    i32 9, label %sw.bb225
    i32 10, label %sw.bb225
    i32 11, label %sw.bb226
    i32 17, label %sw.bb228
  ], !dbg !5156

sw.bb183:                                         ; preds = %if.end178
  %137 = load i8*, i8** %ptr.addr, align 8, !dbg !5157
  %138 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5157
  store i8* %137, i8** %138, align 8, !dbg !5157
  store i32 0, i32* %retval, align 4, !dbg !5157
  br label %return, !dbg !5157

sw.bb184:                                         ; preds = %if.end178, %if.end178
  %139 = load i8*, i8** %ptr.addr, align 8, !dbg !5161
  %add.ptr185 = getelementptr inbounds i8, i8* %139, i64 1, !dbg !5161
  store i8* %add.ptr185, i8** %ptr.addr, align 8, !dbg !5161
  br label %sw.epilog244, !dbg !5161

sw.bb186:                                         ; preds = %if.end178
  %140 = load i8*, i8** %end.addr, align 8, !dbg !5163
  %141 = load i8*, i8** %ptr.addr, align 8, !dbg !5163
  %sub.ptr.lhs.cast187 = ptrtoint i8* %140 to i64, !dbg !5163
  %sub.ptr.rhs.cast188 = ptrtoint i8* %141 to i64, !dbg !5163
  %sub.ptr.sub189 = sub i64 %sub.ptr.lhs.cast187, %sub.ptr.rhs.cast188, !dbg !5163
  %cmp190 = icmp slt i64 %sub.ptr.sub189, 2, !dbg !5163
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !5163

if.then192:                                       ; preds = %sw.bb186
  store i32 -2, i32* %retval, align 4, !dbg !5166
  br label %return, !dbg !5166

if.end193:                                        ; preds = %sw.bb186
  %142 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5168
  %143 = bitcast %struct.encoding* %142 to %struct.normal_encoding*, !dbg !5168
  %isNmstrt2 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %143, i32 0, i32 5, !dbg !5168
  %144 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt2, align 8, !dbg !5168
  %145 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5168
  %146 = load i8*, i8** %ptr.addr, align 8, !dbg !5168
  %call194 = call i32 %144(%struct.encoding* %145, i8* %146), !dbg !5168
  %tobool195 = icmp ne i32 %call194, 0, !dbg !5168
  br i1 %tobool195, label %if.end197, label %if.then196, !dbg !5168

if.then196:                                       ; preds = %if.end193
  %147 = load i8*, i8** %ptr.addr, align 8, !dbg !5171
  %148 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5171
  store i8* %147, i8** %148, align 8, !dbg !5171
  store i32 0, i32* %retval, align 4, !dbg !5171
  br label %return, !dbg !5171

if.end197:                                        ; preds = %if.end193
  %149 = load i8*, i8** %ptr.addr, align 8, !dbg !5174
  %add.ptr198 = getelementptr inbounds i8, i8* %149, i64 2, !dbg !5174
  store i8* %add.ptr198, i8** %ptr.addr, align 8, !dbg !5174
  br label %sw.epilog244, !dbg !5174

sw.bb199:                                         ; preds = %if.end178
  %150 = load i8*, i8** %end.addr, align 8, !dbg !5176
  %151 = load i8*, i8** %ptr.addr, align 8, !dbg !5176
  %sub.ptr.lhs.cast200 = ptrtoint i8* %150 to i64, !dbg !5176
  %sub.ptr.rhs.cast201 = ptrtoint i8* %151 to i64, !dbg !5176
  %sub.ptr.sub202 = sub i64 %sub.ptr.lhs.cast200, %sub.ptr.rhs.cast201, !dbg !5176
  %cmp203 = icmp slt i64 %sub.ptr.sub202, 3, !dbg !5176
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !5176

if.then205:                                       ; preds = %sw.bb199
  store i32 -2, i32* %retval, align 4, !dbg !5179
  br label %return, !dbg !5179

if.end206:                                        ; preds = %sw.bb199
  %152 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5181
  %153 = bitcast %struct.encoding* %152 to %struct.normal_encoding*, !dbg !5181
  %isNmstrt3 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %153, i32 0, i32 6, !dbg !5181
  %154 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt3, align 8, !dbg !5181
  %155 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5181
  %156 = load i8*, i8** %ptr.addr, align 8, !dbg !5181
  %call207 = call i32 %154(%struct.encoding* %155, i8* %156), !dbg !5181
  %tobool208 = icmp ne i32 %call207, 0, !dbg !5181
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !5181

if.then209:                                       ; preds = %if.end206
  %157 = load i8*, i8** %ptr.addr, align 8, !dbg !5184
  %158 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5184
  store i8* %157, i8** %158, align 8, !dbg !5184
  store i32 0, i32* %retval, align 4, !dbg !5184
  br label %return, !dbg !5184

if.end210:                                        ; preds = %if.end206
  %159 = load i8*, i8** %ptr.addr, align 8, !dbg !5187
  %add.ptr211 = getelementptr inbounds i8, i8* %159, i64 3, !dbg !5187
  store i8* %add.ptr211, i8** %ptr.addr, align 8, !dbg !5187
  br label %sw.epilog244, !dbg !5187

sw.bb212:                                         ; preds = %if.end178
  %160 = load i8*, i8** %end.addr, align 8, !dbg !5189
  %161 = load i8*, i8** %ptr.addr, align 8, !dbg !5189
  %sub.ptr.lhs.cast213 = ptrtoint i8* %160 to i64, !dbg !5189
  %sub.ptr.rhs.cast214 = ptrtoint i8* %161 to i64, !dbg !5189
  %sub.ptr.sub215 = sub i64 %sub.ptr.lhs.cast213, %sub.ptr.rhs.cast214, !dbg !5189
  %cmp216 = icmp slt i64 %sub.ptr.sub215, 4, !dbg !5189
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !5189

if.then218:                                       ; preds = %sw.bb212
  store i32 -2, i32* %retval, align 4, !dbg !5192
  br label %return, !dbg !5192

if.end219:                                        ; preds = %sw.bb212
  %162 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5194
  %163 = bitcast %struct.encoding* %162 to %struct.normal_encoding*, !dbg !5194
  %isNmstrt4 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %163, i32 0, i32 7, !dbg !5194
  %164 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %isNmstrt4, align 8, !dbg !5194
  %165 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5194
  %166 = load i8*, i8** %ptr.addr, align 8, !dbg !5194
  %call220 = call i32 %164(%struct.encoding* %165, i8* %166), !dbg !5194
  %tobool221 = icmp ne i32 %call220, 0, !dbg !5194
  br i1 %tobool221, label %if.end223, label %if.then222, !dbg !5194

if.then222:                                       ; preds = %if.end219
  %167 = load i8*, i8** %ptr.addr, align 8, !dbg !5197
  %168 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5197
  store i8* %167, i8** %168, align 8, !dbg !5197
  store i32 0, i32* %retval, align 4, !dbg !5197
  br label %return, !dbg !5197

if.end223:                                        ; preds = %if.end219
  %169 = load i8*, i8** %ptr.addr, align 8, !dbg !5200
  %add.ptr224 = getelementptr inbounds i8, i8* %169, i64 4, !dbg !5200
  store i8* %add.ptr224, i8** %ptr.addr, align 8, !dbg !5200
  br label %sw.epilog244, !dbg !5200

sw.bb225:                                         ; preds = %if.end178, %if.end178, %if.end178
  br label %for.cond170, !dbg !5202

sw.bb226:                                         ; preds = %if.end178
  br label %gt, !dbg !5203

gt:                                               ; preds = %sw.bb226, %sw.bb167
  %170 = load i8*, i8** %ptr.addr, align 8, !dbg !5204
  %add.ptr227 = getelementptr inbounds i8, i8* %170, i64 1, !dbg !5205
  %171 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5206
  store i8* %add.ptr227, i8** %171, align 8, !dbg !5207
  store i32 1, i32* %retval, align 4, !dbg !5208
  br label %return, !dbg !5208

sw.bb228:                                         ; preds = %if.end178
  br label %sol, !dbg !5209

sol:                                              ; preds = %sw.bb228, %sw.bb166
  %172 = load i8*, i8** %ptr.addr, align 8, !dbg !5210
  %add.ptr229 = getelementptr inbounds i8, i8* %172, i64 1, !dbg !5210
  store i8* %add.ptr229, i8** %ptr.addr, align 8, !dbg !5210
  %173 = load i8*, i8** %end.addr, align 8, !dbg !5211
  %174 = load i8*, i8** %ptr.addr, align 8, !dbg !5211
  %sub.ptr.lhs.cast230 = ptrtoint i8* %173 to i64, !dbg !5211
  %sub.ptr.rhs.cast231 = ptrtoint i8* %174 to i64, !dbg !5211
  %sub.ptr.sub232 = sub i64 %sub.ptr.lhs.cast230, %sub.ptr.rhs.cast231, !dbg !5211
  %cmp233 = icmp sge i64 %sub.ptr.sub232, 1, !dbg !5211
  br i1 %cmp233, label %if.end236, label %if.then235, !dbg !5214

if.then235:                                       ; preds = %sol
  store i32 -1, i32* %retval, align 4, !dbg !5215
  br label %return, !dbg !5215

if.end236:                                        ; preds = %sol
  %175 = load i8*, i8** %ptr.addr, align 8, !dbg !5218
  %176 = load i8, i8* %175, align 1, !dbg !5218
  %conv237 = sext i8 %176 to i32, !dbg !5218
  %cmp238 = icmp eq i32 %conv237, 62, !dbg !5218
  br i1 %cmp238, label %if.end241, label %if.then240, !dbg !5220

if.then240:                                       ; preds = %if.end236
  %177 = load i8*, i8** %ptr.addr, align 8, !dbg !5221
  %178 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5223
  store i8* %177, i8** %178, align 8, !dbg !5224
  store i32 0, i32* %retval, align 4, !dbg !5225
  br label %return, !dbg !5225

if.end241:                                        ; preds = %if.end236
  %179 = load i8*, i8** %ptr.addr, align 8, !dbg !5226
  %add.ptr242 = getelementptr inbounds i8, i8* %179, i64 1, !dbg !5227
  %180 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5228
  store i8* %add.ptr242, i8** %180, align 8, !dbg !5229
  store i32 3, i32* %retval, align 4, !dbg !5230
  br label %return, !dbg !5230

sw.default243:                                    ; preds = %if.end178
  %181 = load i8*, i8** %ptr.addr, align 8, !dbg !5231
  %182 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5232
  store i8* %181, i8** %182, align 8, !dbg !5233
  store i32 0, i32* %retval, align 4, !dbg !5234
  br label %return, !dbg !5234

sw.epilog244:                                     ; preds = %if.end223, %if.end210, %if.end197, %sw.bb184
  br label %for.end245, !dbg !5235

for.end245:                                       ; preds = %sw.epilog244
  br label %sw.epilog247, !dbg !5236

sw.default246:                                    ; preds = %while.body
  %183 = load i8*, i8** %ptr.addr, align 8, !dbg !5237
  %184 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5238
  store i8* %183, i8** %184, align 8, !dbg !5239
  store i32 0, i32* %retval, align 4, !dbg !5240
  br label %return, !dbg !5240

sw.epilog247:                                     ; preds = %for.end245, %if.end35, %if.end22, %if.end9, %sw.bb1
  br label %while.cond, !dbg !5241

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !5243
  br label %return, !dbg !5243

return:                                           ; preds = %while.end, %sw.default246, %sw.default243, %if.end241, %if.then240, %if.then235, %gt, %if.then222, %if.then218, %if.then209, %if.then205, %if.then196, %if.then192, %sw.bb183, %if.then177, %sw.default168, %if.then159, %sw.bb148, %if.end146, %sw.bb136, %if.then133, %if.then129, %if.then120, %if.then116, %if.then107, %if.then103, %if.then87, %sw.default76, %if.then63, %sw.default, %if.then44, %if.then34, %if.then30, %if.then21, %if.then17, %if.then8, %if.then, %sw.bb
  %185 = load i32, i32* %retval, align 4, !dbg !5244
  ret i32 %185, !dbg !5244
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanCharRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !264 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !5245, metadata !444), !dbg !5246
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5247, metadata !444), !dbg !5248
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !5249, metadata !444), !dbg !5250
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !5251, metadata !444), !dbg !5252
  %0 = load i8*, i8** %end.addr, align 8, !dbg !5253
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !5253
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !5253
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !5253
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5253
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !5253
  br i1 %cmp, label %if.then, label %if.end21, !dbg !5255

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !5256
  %3 = load i8, i8* %2, align 1, !dbg !5256
  %conv = sext i8 %3 to i32, !dbg !5256
  %cmp1 = icmp eq i32 %conv, 120, !dbg !5256
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !5259

if.then3:                                         ; preds = %if.then
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5260
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !5261
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5262
  %6 = load i8*, i8** %end.addr, align 8, !dbg !5263
  %7 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5264
  %call = call i32 @normal_scanHexCharRef(%struct.encoding* %4, i8* %add.ptr, i8* %6, i8** %7), !dbg !5265
  store i32 %call, i32* %retval, align 4, !dbg !5266
  br label %return, !dbg !5266

if.end:                                           ; preds = %if.then
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !5267
  %9 = load i8, i8* %8, align 1, !dbg !5267
  %idxprom = zext i8 %9 to i64, !dbg !5267
  %10 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5267
  %11 = bitcast %struct.encoding* %10 to %struct.normal_encoding*, !dbg !5267
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %11, i32 0, i32 1, !dbg !5267
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !5267
  %12 = load i8, i8* %arrayidx, align 1, !dbg !5267
  %conv4 = zext i8 %12 to i32, !dbg !5267
  switch i32 %conv4, label %sw.default [
    i32 25, label %sw.bb
  ], !dbg !5268

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !5269

sw.default:                                       ; preds = %if.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !5271
  %14 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5272
  store i8* %13, i8** %14, align 8, !dbg !5273
  store i32 0, i32* %retval, align 4, !dbg !5274
  br label %return, !dbg !5274

sw.epilog:                                        ; preds = %sw.bb
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !5275
  %add.ptr5 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !5275
  store i8* %add.ptr5, i8** %ptr.addr, align 8, !dbg !5275
  br label %for.cond, !dbg !5277

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %16 = load i8*, i8** %end.addr, align 8, !dbg !5278
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !5278
  %sub.ptr.lhs.cast6 = ptrtoint i8* %16 to i64, !dbg !5278
  %sub.ptr.rhs.cast7 = ptrtoint i8* %17 to i64, !dbg !5278
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast6, %sub.ptr.rhs.cast7, !dbg !5278
  %cmp9 = icmp sge i64 %sub.ptr.sub8, 1, !dbg !5278
  br i1 %cmp9, label %for.body, label %for.end, !dbg !5281

for.body:                                         ; preds = %for.cond
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !5282
  %19 = load i8, i8* %18, align 1, !dbg !5282
  %idxprom11 = zext i8 %19 to i64, !dbg !5282
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5282
  %21 = bitcast %struct.encoding* %20 to %struct.normal_encoding*, !dbg !5282
  %type12 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %21, i32 0, i32 1, !dbg !5282
  %arrayidx13 = getelementptr inbounds [256 x i8], [256 x i8]* %type12, i64 0, i64 %idxprom11, !dbg !5282
  %22 = load i8, i8* %arrayidx13, align 1, !dbg !5282
  %conv14 = zext i8 %22 to i32, !dbg !5282
  switch i32 %conv14, label %sw.default18 [
    i32 25, label %sw.bb15
    i32 18, label %sw.bb16
  ], !dbg !5284

sw.bb15:                                          ; preds = %for.body
  br label %sw.epilog19, !dbg !5285

sw.bb16:                                          ; preds = %for.body
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !5287
  %add.ptr17 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !5288
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5289
  store i8* %add.ptr17, i8** %24, align 8, !dbg !5290
  store i32 10, i32* %retval, align 4, !dbg !5291
  br label %return, !dbg !5291

sw.default18:                                     ; preds = %for.body
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !5292
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5293
  store i8* %25, i8** %26, align 8, !dbg !5294
  store i32 0, i32* %retval, align 4, !dbg !5295
  br label %return, !dbg !5295

sw.epilog19:                                      ; preds = %sw.bb15
  br label %for.inc, !dbg !5296

for.inc:                                          ; preds = %sw.epilog19
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !5297
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !5297
  store i8* %add.ptr20, i8** %ptr.addr, align 8, !dbg !5297
  br label %for.cond, !dbg !5299

for.end:                                          ; preds = %for.cond
  br label %if.end21, !dbg !5300

if.end21:                                         ; preds = %for.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !5301
  br label %return, !dbg !5301

return:                                           ; preds = %if.end21, %sw.default18, %sw.bb16, %sw.default, %if.then3
  %28 = load i32, i32* %retval, align 4, !dbg !5302
  ret i32 %28, !dbg !5302
}

; Function Attrs: nounwind uwtable
define internal i32 @normal_scanHexCharRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !265 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !5303, metadata !444), !dbg !5304
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5305, metadata !444), !dbg !5306
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !5307, metadata !444), !dbg !5308
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !5309, metadata !444), !dbg !5310
  %0 = load i8*, i8** %end.addr, align 8, !dbg !5311
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !5311
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !5311
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !5311
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5311
  %cmp = icmp sge i64 %sub.ptr.sub, 1, !dbg !5311
  br i1 %cmp, label %if.then, label %if.end, !dbg !5313

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !5314
  %3 = load i8, i8* %2, align 1, !dbg !5314
  %idxprom = zext i8 %3 to i64, !dbg !5314
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5314
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !5314
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !5314
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !5314
  %6 = load i8, i8* %arrayidx, align 1, !dbg !5314
  %conv = zext i8 %6 to i32, !dbg !5314
  switch i32 %conv, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
  ], !dbg !5316

sw.bb:                                            ; preds = %if.then, %if.then
  br label %sw.epilog, !dbg !5317

sw.default:                                       ; preds = %if.then
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !5319
  %8 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5320
  store i8* %7, i8** %8, align 8, !dbg !5321
  store i32 0, i32* %retval, align 4, !dbg !5322
  br label %return, !dbg !5322

sw.epilog:                                        ; preds = %sw.bb
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !5323
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !5323
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !5323
  br label %for.cond, !dbg !5325

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %10 = load i8*, i8** %end.addr, align 8, !dbg !5326
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !5326
  %sub.ptr.lhs.cast1 = ptrtoint i8* %10 to i64, !dbg !5326
  %sub.ptr.rhs.cast2 = ptrtoint i8* %11 to i64, !dbg !5326
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !5326
  %cmp4 = icmp sge i64 %sub.ptr.sub3, 1, !dbg !5326
  br i1 %cmp4, label %for.body, label %for.end, !dbg !5329

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !5330
  %13 = load i8, i8* %12, align 1, !dbg !5330
  %idxprom6 = zext i8 %13 to i64, !dbg !5330
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5330
  %15 = bitcast %struct.encoding* %14 to %struct.normal_encoding*, !dbg !5330
  %type7 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %15, i32 0, i32 1, !dbg !5330
  %arrayidx8 = getelementptr inbounds [256 x i8], [256 x i8]* %type7, i64 0, i64 %idxprom6, !dbg !5330
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !5330
  %conv9 = zext i8 %16 to i32, !dbg !5330
  switch i32 %conv9, label %sw.default13 [
    i32 25, label %sw.bb10
    i32 24, label %sw.bb10
    i32 18, label %sw.bb11
  ], !dbg !5332

sw.bb10:                                          ; preds = %for.body, %for.body
  br label %sw.epilog14, !dbg !5333

sw.bb11:                                          ; preds = %for.body
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !5335
  %add.ptr12 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !5336
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5337
  store i8* %add.ptr12, i8** %18, align 8, !dbg !5338
  store i32 10, i32* %retval, align 4, !dbg !5339
  br label %return, !dbg !5339

sw.default13:                                     ; preds = %for.body
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !5340
  %20 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5341
  store i8* %19, i8** %20, align 8, !dbg !5342
  store i32 0, i32* %retval, align 4, !dbg !5343
  br label %return, !dbg !5343

sw.epilog14:                                      ; preds = %sw.bb10
  br label %for.inc, !dbg !5344

for.inc:                                          ; preds = %sw.epilog14
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !5345
  %add.ptr15 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !5345
  store i8* %add.ptr15, i8** %ptr.addr, align 8, !dbg !5345
  br label %for.cond, !dbg !5347

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5348

if.end:                                           ; preds = %for.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !5349
  br label %return, !dbg !5349

return:                                           ; preds = %if.end, %sw.default13, %sw.bb11, %sw.default
  %22 = load i32, i32* %retval, align 4, !dbg !5350
  ret i32 %22, !dbg !5350
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_toUtf8(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i8** %toP, i8* %toLim) #0 !dbg !287 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i8**, align 8
  %toLim.addr = alloca i8*, align 8
  %res = alloca i32, align 4
  %to = alloca i8*, align 8
  %from = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5351, metadata !444), !dbg !5352
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !5353, metadata !444), !dbg !5354
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !5355, metadata !444), !dbg !5356
  store i8** %toP, i8*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %toP.addr, metadata !5357, metadata !444), !dbg !5358
  store i8* %toLim, i8** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toLim.addr, metadata !5359, metadata !444), !dbg !5360
  call void @llvm.dbg.declare(metadata i32* %res, metadata !5361, metadata !444), !dbg !5362
  store i32 0, i32* %res, align 4, !dbg !5362
  call void @llvm.dbg.declare(metadata i8** %to, metadata !5363, metadata !444), !dbg !5364
  call void @llvm.dbg.declare(metadata i8** %from, metadata !5365, metadata !444), !dbg !5366
  %0 = load i8*, i8** %fromLim.addr, align 8, !dbg !5367
  %1 = load i8**, i8*** %fromP.addr, align 8, !dbg !5369
  %2 = load i8*, i8** %1, align 8, !dbg !5370
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !5371
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !5371
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5371
  %3 = load i8*, i8** %toLim.addr, align 8, !dbg !5372
  %4 = load i8**, i8*** %toP.addr, align 8, !dbg !5373
  %5 = load i8*, i8** %4, align 8, !dbg !5374
  %sub.ptr.lhs.cast1 = ptrtoint i8* %3 to i64, !dbg !5375
  %sub.ptr.rhs.cast2 = ptrtoint i8* %5 to i64, !dbg !5375
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !5375
  %cmp = icmp sgt i64 %sub.ptr.sub, %sub.ptr.sub3, !dbg !5376
  br i1 %cmp, label %if.then, label %if.end, !dbg !5377

if.then:                                          ; preds = %entry
  store i32 2, i32* %res, align 4, !dbg !5378
  %6 = load i8**, i8*** %fromP.addr, align 8, !dbg !5380
  %7 = load i8*, i8** %6, align 8, !dbg !5381
  %8 = load i8*, i8** %toLim.addr, align 8, !dbg !5382
  %9 = load i8**, i8*** %toP.addr, align 8, !dbg !5383
  %10 = load i8*, i8** %9, align 8, !dbg !5384
  %sub.ptr.lhs.cast4 = ptrtoint i8* %8 to i64, !dbg !5385
  %sub.ptr.rhs.cast5 = ptrtoint i8* %10 to i64, !dbg !5385
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5, !dbg !5385
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %sub.ptr.sub6, !dbg !5386
  store i8* %add.ptr, i8** %fromLim.addr, align 8, !dbg !5387
  %11 = load i8**, i8*** %fromP.addr, align 8, !dbg !5388
  %12 = load i8*, i8** %11, align 8, !dbg !5389
  call void @align_limit_to_full_utf8_characters(i8* %12, i8** %fromLim.addr), !dbg !5390
  br label %if.end, !dbg !5391

if.end:                                           ; preds = %if.then, %entry
  %13 = load i8**, i8*** %toP.addr, align 8, !dbg !5392
  %14 = load i8*, i8** %13, align 8, !dbg !5394
  store i8* %14, i8** %to, align 8, !dbg !5395
  %15 = load i8**, i8*** %fromP.addr, align 8, !dbg !5396
  %16 = load i8*, i8** %15, align 8, !dbg !5397
  store i8* %16, i8** %from, align 8, !dbg !5398
  br label %for.cond, !dbg !5399

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i8*, i8** %from, align 8, !dbg !5400
  %18 = load i8*, i8** %fromLim.addr, align 8, !dbg !5403
  %cmp7 = icmp ult i8* %17, %18, !dbg !5404
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !5405

land.rhs:                                         ; preds = %for.cond
  %19 = load i8*, i8** %to, align 8, !dbg !5406
  %20 = load i8*, i8** %toLim.addr, align 8, !dbg !5408
  %cmp8 = icmp ult i8* %19, %20, !dbg !5409
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %21 = phi i1 [ false, %for.cond ], [ %cmp8, %land.rhs ]
  br i1 %21, label %for.body, label %for.end, !dbg !5410

for.body:                                         ; preds = %land.end
  %22 = load i8*, i8** %from, align 8, !dbg !5412
  %23 = load i8, i8* %22, align 1, !dbg !5413
  %24 = load i8*, i8** %to, align 8, !dbg !5414
  store i8 %23, i8* %24, align 1, !dbg !5415
  br label %for.inc, !dbg !5416

for.inc:                                          ; preds = %for.body
  %25 = load i8*, i8** %from, align 8, !dbg !5417
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1, !dbg !5417
  store i8* %incdec.ptr, i8** %from, align 8, !dbg !5417
  %26 = load i8*, i8** %to, align 8, !dbg !5419
  %incdec.ptr9 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !5419
  store i8* %incdec.ptr9, i8** %to, align 8, !dbg !5419
  br label %for.cond, !dbg !5420

for.end:                                          ; preds = %land.end
  %27 = load i8*, i8** %from, align 8, !dbg !5421
  %28 = load i8**, i8*** %fromP.addr, align 8, !dbg !5422
  store i8* %27, i8** %28, align 8, !dbg !5423
  %29 = load i8*, i8** %to, align 8, !dbg !5424
  %30 = load i8**, i8*** %toP.addr, align 8, !dbg !5425
  store i8* %29, i8** %30, align 8, !dbg !5426
  %31 = load i8*, i8** %to, align 8, !dbg !5427
  %32 = load i8*, i8** %toLim.addr, align 8, !dbg !5429
  %cmp10 = icmp eq i8* %31, %32, !dbg !5430
  br i1 %cmp10, label %land.lhs.true, label %if.else, !dbg !5431

land.lhs.true:                                    ; preds = %for.end
  %33 = load i8*, i8** %from, align 8, !dbg !5432
  %34 = load i8*, i8** %fromLim.addr, align 8, !dbg !5434
  %cmp11 = icmp ult i8* %33, %34, !dbg !5435
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !5436

if.then12:                                        ; preds = %land.lhs.true
  store i32 2, i32* %retval, align 4, !dbg !5437
  br label %return, !dbg !5437

if.else:                                          ; preds = %land.lhs.true, %for.end
  %35 = load i32, i32* %res, align 4, !dbg !5438
  store i32 %35, i32* %retval, align 4, !dbg !5439
  br label %return, !dbg !5439

return:                                           ; preds = %if.else, %if.then12
  %36 = load i32, i32* %retval, align 4, !dbg !5440
  ret i32 %36, !dbg !5440
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_toUtf16(%struct.encoding* %enc, i8** %fromP, i8* %fromLim, i16** %toP, i16* %toLim) #0 !dbg !288 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i16**, align 8
  %toLim.addr = alloca i16*, align 8
  %res = alloca i32, align 4
  %to = alloca i16*, align 8
  %from = alloca i8*, align 8
  %n = alloca i64, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !5441, metadata !444), !dbg !5442
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !5443, metadata !444), !dbg !5444
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !5445, metadata !444), !dbg !5446
  store i16** %toP, i16*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %toP.addr, metadata !5447, metadata !444), !dbg !5448
  store i16* %toLim, i16** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toLim.addr, metadata !5449, metadata !444), !dbg !5450
  call void @llvm.dbg.declare(metadata i32* %res, metadata !5451, metadata !444), !dbg !5452
  store i32 0, i32* %res, align 4, !dbg !5452
  call void @llvm.dbg.declare(metadata i16** %to, metadata !5453, metadata !444), !dbg !5454
  %0 = load i16**, i16*** %toP.addr, align 8, !dbg !5455
  %1 = load i16*, i16** %0, align 8, !dbg !5456
  store i16* %1, i16** %to, align 8, !dbg !5454
  call void @llvm.dbg.declare(metadata i8** %from, metadata !5457, metadata !444), !dbg !5458
  %2 = load i8**, i8*** %fromP.addr, align 8, !dbg !5459
  %3 = load i8*, i8** %2, align 8, !dbg !5460
  store i8* %3, i8** %from, align 8, !dbg !5458
  br label %while.cond, !dbg !5461

while.cond:                                       ; preds = %sw.epilog, %entry
  %4 = load i8*, i8** %from, align 8, !dbg !5462
  %5 = load i8*, i8** %fromLim.addr, align 8, !dbg !5464
  %cmp = icmp ult i8* %4, %5, !dbg !5465
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5466

land.rhs:                                         ; preds = %while.cond
  %6 = load i16*, i16** %to, align 8, !dbg !5467
  %7 = load i16*, i16** %toLim.addr, align 8, !dbg !5469
  %cmp1 = icmp ult i16* %6, %7, !dbg !5470
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %8, label %while.body, label %while.end, !dbg !5471

while.body:                                       ; preds = %land.end
  %9 = load i8*, i8** %from, align 8, !dbg !5473
  %10 = load i8, i8* %9, align 1, !dbg !5475
  %idxprom = zext i8 %10 to i64, !dbg !5476
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5477
  %12 = bitcast %struct.encoding* %11 to %struct.normal_encoding*, !dbg !5478
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %12, i32 0, i32 1, !dbg !5478
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !5476
  %13 = load i8, i8* %arrayidx, align 1, !dbg !5476
  %conv = zext i8 %13 to i32, !dbg !5476
  switch i32 %conv, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb10
    i32 7, label %sw.bb34
  ], !dbg !5479

sw.bb:                                            ; preds = %while.body
  %14 = load i8*, i8** %fromLim.addr, align 8, !dbg !5480
  %15 = load i8*, i8** %from, align 8, !dbg !5483
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64, !dbg !5484
  %sub.ptr.rhs.cast = ptrtoint i8* %15 to i64, !dbg !5484
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5484
  %cmp2 = icmp slt i64 %sub.ptr.sub, 2, !dbg !5485
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5486

if.then:                                          ; preds = %sw.bb
  store i32 1, i32* %res, align 4, !dbg !5487
  br label %sw.epilog, !dbg !5489

if.end:                                           ; preds = %sw.bb
  %16 = load i8*, i8** %from, align 8, !dbg !5490
  %arrayidx4 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !5490
  %17 = load i8, i8* %arrayidx4, align 1, !dbg !5490
  %conv5 = sext i8 %17 to i32, !dbg !5490
  %and = and i32 %conv5, 31, !dbg !5491
  %shl = shl i32 %and, 6, !dbg !5492
  %18 = load i8*, i8** %from, align 8, !dbg !5493
  %arrayidx6 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !5493
  %19 = load i8, i8* %arrayidx6, align 1, !dbg !5493
  %conv7 = sext i8 %19 to i32, !dbg !5493
  %and8 = and i32 %conv7, 63, !dbg !5494
  %or = or i32 %shl, %and8, !dbg !5495
  %conv9 = trunc i32 %or to i16, !dbg !5496
  %20 = load i16*, i16** %to, align 8, !dbg !5497
  %incdec.ptr = getelementptr inbounds i16, i16* %20, i32 1, !dbg !5497
  store i16* %incdec.ptr, i16** %to, align 8, !dbg !5497
  store i16 %conv9, i16* %20, align 2, !dbg !5498
  %21 = load i8*, i8** %from, align 8, !dbg !5499
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 2, !dbg !5499
  store i8* %add.ptr, i8** %from, align 8, !dbg !5499
  br label %sw.epilog, !dbg !5500

sw.bb10:                                          ; preds = %while.body
  %22 = load i8*, i8** %fromLim.addr, align 8, !dbg !5501
  %23 = load i8*, i8** %from, align 8, !dbg !5503
  %sub.ptr.lhs.cast11 = ptrtoint i8* %22 to i64, !dbg !5504
  %sub.ptr.rhs.cast12 = ptrtoint i8* %23 to i64, !dbg !5504
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !5504
  %cmp14 = icmp slt i64 %sub.ptr.sub13, 3, !dbg !5505
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5506

if.then16:                                        ; preds = %sw.bb10
  store i32 1, i32* %res, align 4, !dbg !5507
  br label %sw.epilog, !dbg !5509

if.end17:                                         ; preds = %sw.bb10
  %24 = load i8*, i8** %from, align 8, !dbg !5510
  %arrayidx18 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !5510
  %25 = load i8, i8* %arrayidx18, align 1, !dbg !5510
  %conv19 = sext i8 %25 to i32, !dbg !5510
  %and20 = and i32 %conv19, 15, !dbg !5511
  %shl21 = shl i32 %and20, 12, !dbg !5512
  %26 = load i8*, i8** %from, align 8, !dbg !5513
  %arrayidx22 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !5513
  %27 = load i8, i8* %arrayidx22, align 1, !dbg !5513
  %conv23 = sext i8 %27 to i32, !dbg !5513
  %and24 = and i32 %conv23, 63, !dbg !5514
  %shl25 = shl i32 %and24, 6, !dbg !5515
  %or26 = or i32 %shl21, %shl25, !dbg !5516
  %28 = load i8*, i8** %from, align 8, !dbg !5517
  %arrayidx27 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !5517
  %29 = load i8, i8* %arrayidx27, align 1, !dbg !5517
  %conv28 = sext i8 %29 to i32, !dbg !5517
  %and29 = and i32 %conv28, 63, !dbg !5518
  %or30 = or i32 %or26, %and29, !dbg !5519
  %conv31 = trunc i32 %or30 to i16, !dbg !5520
  %30 = load i16*, i16** %to, align 8, !dbg !5521
  %incdec.ptr32 = getelementptr inbounds i16, i16* %30, i32 1, !dbg !5521
  store i16* %incdec.ptr32, i16** %to, align 8, !dbg !5521
  store i16 %conv31, i16* %30, align 2, !dbg !5522
  %31 = load i8*, i8** %from, align 8, !dbg !5523
  %add.ptr33 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !5523
  store i8* %add.ptr33, i8** %from, align 8, !dbg !5523
  br label %sw.epilog, !dbg !5524

sw.bb34:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %n, metadata !5525, metadata !444), !dbg !5527
  %32 = load i16*, i16** %toLim.addr, align 8, !dbg !5528
  %33 = load i16*, i16** %to, align 8, !dbg !5530
  %sub.ptr.lhs.cast35 = ptrtoint i16* %32 to i64, !dbg !5531
  %sub.ptr.rhs.cast36 = ptrtoint i16* %33 to i64, !dbg !5531
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !5531
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub37, 2, !dbg !5531
  %cmp38 = icmp slt i64 %sub.ptr.div, 2, !dbg !5532
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !5533

if.then40:                                        ; preds = %sw.bb34
  store i32 2, i32* %res, align 4, !dbg !5534
  br label %after, !dbg !5536

if.end41:                                         ; preds = %sw.bb34
  %34 = load i8*, i8** %fromLim.addr, align 8, !dbg !5537
  %35 = load i8*, i8** %from, align 8, !dbg !5539
  %sub.ptr.lhs.cast42 = ptrtoint i8* %34 to i64, !dbg !5540
  %sub.ptr.rhs.cast43 = ptrtoint i8* %35 to i64, !dbg !5540
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43, !dbg !5540
  %cmp45 = icmp slt i64 %sub.ptr.sub44, 4, !dbg !5541
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !5542

if.then47:                                        ; preds = %if.end41
  store i32 1, i32* %res, align 4, !dbg !5543
  br label %after, !dbg !5545

if.end48:                                         ; preds = %if.end41
  %36 = load i8*, i8** %from, align 8, !dbg !5546
  %arrayidx49 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !5546
  %37 = load i8, i8* %arrayidx49, align 1, !dbg !5546
  %conv50 = sext i8 %37 to i32, !dbg !5546
  %and51 = and i32 %conv50, 7, !dbg !5547
  %shl52 = shl i32 %and51, 18, !dbg !5548
  %38 = load i8*, i8** %from, align 8, !dbg !5549
  %arrayidx53 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !5549
  %39 = load i8, i8* %arrayidx53, align 1, !dbg !5549
  %conv54 = sext i8 %39 to i32, !dbg !5549
  %and55 = and i32 %conv54, 63, !dbg !5550
  %shl56 = shl i32 %and55, 12, !dbg !5551
  %or57 = or i32 %shl52, %shl56, !dbg !5552
  %40 = load i8*, i8** %from, align 8, !dbg !5553
  %arrayidx58 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !5553
  %41 = load i8, i8* %arrayidx58, align 1, !dbg !5553
  %conv59 = sext i8 %41 to i32, !dbg !5553
  %and60 = and i32 %conv59, 63, !dbg !5554
  %shl61 = shl i32 %and60, 6, !dbg !5555
  %or62 = or i32 %or57, %shl61, !dbg !5556
  %42 = load i8*, i8** %from, align 8, !dbg !5557
  %arrayidx63 = getelementptr inbounds i8, i8* %42, i64 3, !dbg !5557
  %43 = load i8, i8* %arrayidx63, align 1, !dbg !5557
  %conv64 = sext i8 %43 to i32, !dbg !5557
  %and65 = and i32 %conv64, 63, !dbg !5558
  %or66 = or i32 %or62, %and65, !dbg !5559
  %conv67 = sext i32 %or66 to i64, !dbg !5560
  store i64 %conv67, i64* %n, align 8, !dbg !5561
  %44 = load i64, i64* %n, align 8, !dbg !5562
  %sub = sub i64 %44, 65536, !dbg !5562
  store i64 %sub, i64* %n, align 8, !dbg !5562
  %45 = load i64, i64* %n, align 8, !dbg !5563
  %shr = lshr i64 %45, 10, !dbg !5564
  %or68 = or i64 %shr, 55296, !dbg !5565
  %conv69 = trunc i64 %or68 to i16, !dbg !5566
  %46 = load i16*, i16** %to, align 8, !dbg !5567
  %arrayidx70 = getelementptr inbounds i16, i16* %46, i64 0, !dbg !5567
  store i16 %conv69, i16* %arrayidx70, align 2, !dbg !5568
  %47 = load i64, i64* %n, align 8, !dbg !5569
  %and71 = and i64 %47, 1023, !dbg !5570
  %or72 = or i64 %and71, 56320, !dbg !5571
  %conv73 = trunc i64 %or72 to i16, !dbg !5572
  %48 = load i16*, i16** %to, align 8, !dbg !5573
  %arrayidx74 = getelementptr inbounds i16, i16* %48, i64 1, !dbg !5573
  store i16 %conv73, i16* %arrayidx74, align 2, !dbg !5574
  %49 = load i16*, i16** %to, align 8, !dbg !5575
  %add.ptr75 = getelementptr inbounds i16, i16* %49, i64 2, !dbg !5575
  store i16* %add.ptr75, i16** %to, align 8, !dbg !5575
  %50 = load i8*, i8** %from, align 8, !dbg !5576
  %add.ptr76 = getelementptr inbounds i8, i8* %50, i64 4, !dbg !5576
  store i8* %add.ptr76, i8** %from, align 8, !dbg !5576
  br label %sw.epilog, !dbg !5577

sw.default:                                       ; preds = %while.body
  %51 = load i8*, i8** %from, align 8, !dbg !5578
  %incdec.ptr77 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !5578
  store i8* %incdec.ptr77, i8** %from, align 8, !dbg !5578
  %52 = load i8, i8* %51, align 1, !dbg !5579
  %conv78 = sext i8 %52 to i16, !dbg !5579
  %53 = load i16*, i16** %to, align 8, !dbg !5580
  %incdec.ptr79 = getelementptr inbounds i16, i16* %53, i32 1, !dbg !5580
  store i16* %incdec.ptr79, i16** %to, align 8, !dbg !5580
  store i16 %conv78, i16* %53, align 2, !dbg !5581
  br label %sw.epilog, !dbg !5582

sw.epilog:                                        ; preds = %sw.default, %if.end48, %if.end17, %if.then16, %if.end, %if.then
  br label %while.cond, !dbg !5583

while.end:                                        ; preds = %land.end
  br label %after, !dbg !5585

after:                                            ; preds = %while.end, %if.then47, %if.then40
  %54 = load i8*, i8** %from, align 8, !dbg !5587
  %55 = load i8**, i8*** %fromP.addr, align 8, !dbg !5588
  store i8* %54, i8** %55, align 8, !dbg !5589
  %56 = load i16*, i16** %to, align 8, !dbg !5590
  %57 = load i16**, i16*** %toP.addr, align 8, !dbg !5591
  store i16* %56, i16** %57, align 8, !dbg !5592
  %58 = load i32, i32* %res, align 4, !dbg !5593
  ret i32 %58, !dbg !5594
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_isName2(%struct.encoding* %UNUSED_enc, i8* %p) #0 !dbg !289 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5595, metadata !444), !dbg !5596
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5597, metadata !444), !dbg !5598
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5599
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5599
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5599
  %conv = zext i8 %1 to i32, !dbg !5599
  %shr = ashr i32 %conv, 2, !dbg !5599
  %and = and i32 %shr, 7, !dbg !5599
  %idxprom = sext i32 %and to i64, !dbg !5599
  %arrayidx1 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom, !dbg !5599
  %2 = load i8, i8* %arrayidx1, align 1, !dbg !5599
  %conv2 = zext i8 %2 to i32, !dbg !5599
  %shl = shl i32 %conv2, 3, !dbg !5599
  %3 = load i8*, i8** %p.addr, align 8, !dbg !5599
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5599
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !5599
  %conv4 = zext i8 %4 to i32, !dbg !5599
  %and5 = and i32 %conv4, 3, !dbg !5599
  %shl6 = shl i32 %and5, 1, !dbg !5599
  %add = add nsw i32 %shl, %shl6, !dbg !5599
  %5 = load i8*, i8** %p.addr, align 8, !dbg !5599
  %arrayidx7 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5599
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !5599
  %conv8 = zext i8 %6 to i32, !dbg !5599
  %shr9 = ashr i32 %conv8, 5, !dbg !5599
  %and10 = and i32 %shr9, 1, !dbg !5599
  %add11 = add nsw i32 %add, %and10, !dbg !5599
  %idxprom12 = sext i32 %add11 to i64, !dbg !5599
  %arrayidx13 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom12, !dbg !5599
  %7 = load i32, i32* %arrayidx13, align 4, !dbg !5599
  %8 = load i8*, i8** %p.addr, align 8, !dbg !5599
  %arrayidx14 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !5599
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !5599
  %conv15 = zext i8 %9 to i32, !dbg !5599
  %and16 = and i32 %conv15, 31, !dbg !5599
  %shl17 = shl i32 1, %and16, !dbg !5599
  %and18 = and i32 %7, %shl17, !dbg !5599
  ret i32 %and18, !dbg !5600
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_isName3(%struct.encoding* %UNUSED_enc, i8* %p) #0 !dbg !290 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5601, metadata !444), !dbg !5602
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5603, metadata !444), !dbg !5604
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5605
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5605
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5605
  %conv = zext i8 %1 to i32, !dbg !5605
  %and = and i32 %conv, 15, !dbg !5605
  %shl = shl i32 %and, 4, !dbg !5605
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5605
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !5605
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !5605
  %conv2 = zext i8 %3 to i32, !dbg !5605
  %shr = ashr i32 %conv2, 2, !dbg !5605
  %and3 = and i32 %shr, 15, !dbg !5605
  %add = add nsw i32 %shl, %and3, !dbg !5605
  %idxprom = sext i32 %add to i64, !dbg !5605
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom, !dbg !5605
  %4 = load i8, i8* %arrayidx4, align 1, !dbg !5605
  %conv5 = zext i8 %4 to i32, !dbg !5605
  %shl6 = shl i32 %conv5, 3, !dbg !5605
  %5 = load i8*, i8** %p.addr, align 8, !dbg !5605
  %arrayidx7 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5605
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !5605
  %conv8 = zext i8 %6 to i32, !dbg !5605
  %and9 = and i32 %conv8, 3, !dbg !5605
  %shl10 = shl i32 %and9, 1, !dbg !5605
  %add11 = add nsw i32 %shl6, %shl10, !dbg !5605
  %7 = load i8*, i8** %p.addr, align 8, !dbg !5605
  %arrayidx12 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !5605
  %8 = load i8, i8* %arrayidx12, align 1, !dbg !5605
  %conv13 = zext i8 %8 to i32, !dbg !5605
  %shr14 = ashr i32 %conv13, 5, !dbg !5605
  %and15 = and i32 %shr14, 1, !dbg !5605
  %add16 = add nsw i32 %add11, %and15, !dbg !5605
  %idxprom17 = sext i32 %add16 to i64, !dbg !5605
  %arrayidx18 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom17, !dbg !5605
  %9 = load i32, i32* %arrayidx18, align 4, !dbg !5605
  %10 = load i8*, i8** %p.addr, align 8, !dbg !5605
  %arrayidx19 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !5605
  %11 = load i8, i8* %arrayidx19, align 1, !dbg !5605
  %conv20 = zext i8 %11 to i32, !dbg !5605
  %and21 = and i32 %conv20, 31, !dbg !5605
  %shl22 = shl i32 1, %and21, !dbg !5605
  %and23 = and i32 %9, %shl22, !dbg !5605
  ret i32 %and23, !dbg !5606
}

; Function Attrs: nounwind uwtable
define internal i32 @isNever(%struct.encoding* %UNUSED_enc, i8* %UNUSED_p) #0 !dbg !291 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %UNUSED_p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5607, metadata !444), !dbg !5608
  store i8* %UNUSED_p, i8** %UNUSED_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_p.addr, metadata !5609, metadata !444), !dbg !5610
  ret i32 0, !dbg !5611
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_isNmstrt2(%struct.encoding* %UNUSED_enc, i8* %p) #0 !dbg !292 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5612, metadata !444), !dbg !5613
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5614, metadata !444), !dbg !5615
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5616
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5616
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5616
  %conv = zext i8 %1 to i32, !dbg !5616
  %shr = ashr i32 %conv, 2, !dbg !5616
  %and = and i32 %shr, 7, !dbg !5616
  %idxprom = sext i32 %and to i64, !dbg !5616
  %arrayidx1 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom, !dbg !5616
  %2 = load i8, i8* %arrayidx1, align 1, !dbg !5616
  %conv2 = zext i8 %2 to i32, !dbg !5616
  %shl = shl i32 %conv2, 3, !dbg !5616
  %3 = load i8*, i8** %p.addr, align 8, !dbg !5616
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5616
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !5616
  %conv4 = zext i8 %4 to i32, !dbg !5616
  %and5 = and i32 %conv4, 3, !dbg !5616
  %shl6 = shl i32 %and5, 1, !dbg !5616
  %add = add nsw i32 %shl, %shl6, !dbg !5616
  %5 = load i8*, i8** %p.addr, align 8, !dbg !5616
  %arrayidx7 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5616
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !5616
  %conv8 = zext i8 %6 to i32, !dbg !5616
  %shr9 = ashr i32 %conv8, 5, !dbg !5616
  %and10 = and i32 %shr9, 1, !dbg !5616
  %add11 = add nsw i32 %add, %and10, !dbg !5616
  %idxprom12 = sext i32 %add11 to i64, !dbg !5616
  %arrayidx13 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom12, !dbg !5616
  %7 = load i32, i32* %arrayidx13, align 4, !dbg !5616
  %8 = load i8*, i8** %p.addr, align 8, !dbg !5616
  %arrayidx14 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !5616
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !5616
  %conv15 = zext i8 %9 to i32, !dbg !5616
  %and16 = and i32 %conv15, 31, !dbg !5616
  %shl17 = shl i32 1, %and16, !dbg !5616
  %and18 = and i32 %7, %shl17, !dbg !5616
  ret i32 %and18, !dbg !5617
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_isNmstrt3(%struct.encoding* %UNUSED_enc, i8* %p) #0 !dbg !293 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5618, metadata !444), !dbg !5619
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5620, metadata !444), !dbg !5621
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5622
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5622
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5622
  %conv = zext i8 %1 to i32, !dbg !5622
  %and = and i32 %conv, 15, !dbg !5622
  %shl = shl i32 %and, 4, !dbg !5622
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5622
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !5622
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !5622
  %conv2 = zext i8 %3 to i32, !dbg !5622
  %shr = ashr i32 %conv2, 2, !dbg !5622
  %and3 = and i32 %shr, 15, !dbg !5622
  %add = add nsw i32 %shl, %and3, !dbg !5622
  %idxprom = sext i32 %add to i64, !dbg !5622
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom, !dbg !5622
  %4 = load i8, i8* %arrayidx4, align 1, !dbg !5622
  %conv5 = zext i8 %4 to i32, !dbg !5622
  %shl6 = shl i32 %conv5, 3, !dbg !5622
  %5 = load i8*, i8** %p.addr, align 8, !dbg !5622
  %arrayidx7 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5622
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !5622
  %conv8 = zext i8 %6 to i32, !dbg !5622
  %and9 = and i32 %conv8, 3, !dbg !5622
  %shl10 = shl i32 %and9, 1, !dbg !5622
  %add11 = add nsw i32 %shl6, %shl10, !dbg !5622
  %7 = load i8*, i8** %p.addr, align 8, !dbg !5622
  %arrayidx12 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !5622
  %8 = load i8, i8* %arrayidx12, align 1, !dbg !5622
  %conv13 = zext i8 %8 to i32, !dbg !5622
  %shr14 = ashr i32 %conv13, 5, !dbg !5622
  %and15 = and i32 %shr14, 1, !dbg !5622
  %add16 = add nsw i32 %add11, %and15, !dbg !5622
  %idxprom17 = sext i32 %add16 to i64, !dbg !5622
  %arrayidx18 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom17, !dbg !5622
  %9 = load i32, i32* %arrayidx18, align 4, !dbg !5622
  %10 = load i8*, i8** %p.addr, align 8, !dbg !5622
  %arrayidx19 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !5622
  %11 = load i8, i8* %arrayidx19, align 1, !dbg !5622
  %conv20 = zext i8 %11 to i32, !dbg !5622
  %and21 = and i32 %conv20, 31, !dbg !5622
  %shl22 = shl i32 1, %and21, !dbg !5622
  %and23 = and i32 %9, %shl22, !dbg !5622
  ret i32 %and23, !dbg !5623
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_isInvalid2(%struct.encoding* %UNUSED_enc, i8* %p) #0 !dbg !294 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5624, metadata !444), !dbg !5625
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5626, metadata !444), !dbg !5627
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5628
  %1 = load i8, i8* %0, align 1, !dbg !5628
  %conv = zext i8 %1 to i32, !dbg !5628
  %cmp = icmp slt i32 %conv, 194, !dbg !5628
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !5628

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5629
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !5629
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5629
  %conv2 = zext i8 %3 to i32, !dbg !5629
  %and = and i32 %conv2, 128, !dbg !5629
  %cmp3 = icmp eq i32 %and, 0, !dbg !5629
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !5629

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p.addr, align 8, !dbg !5631
  %arrayidx5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5631
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !5631
  %conv6 = zext i8 %5 to i32, !dbg !5631
  %and7 = and i32 %conv6, 192, !dbg !5631
  %cmp8 = icmp eq i32 %and7, 192, !dbg !5631
  br label %lor.end, !dbg !5631

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp8, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !5633
  ret i32 %lor.ext, !dbg !5635
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_isInvalid3(%struct.encoding* %UNUSED_enc, i8* %p) #0 !dbg !295 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5636, metadata !444), !dbg !5637
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5638, metadata !444), !dbg !5639
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5640
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 2, !dbg !5640
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5640
  %conv = zext i8 %1 to i32, !dbg !5640
  %and = and i32 %conv, 128, !dbg !5640
  %cmp = icmp eq i32 %and, 0, !dbg !5640
  br i1 %cmp, label %lor.end58, label %lor.lhs.false, !dbg !5640

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5641
  %3 = load i8, i8* %2, align 1, !dbg !5641
  %conv2 = zext i8 %3 to i32, !dbg !5641
  %cmp3 = icmp eq i32 %conv2, 239, !dbg !5641
  br i1 %cmp3, label %land.lhs.true, label %cond.false, !dbg !5641

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p.addr, align 8, !dbg !5643
  %arrayidx5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5643
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !5643
  %conv6 = zext i8 %5 to i32, !dbg !5643
  %cmp7 = icmp eq i32 %conv6, 191, !dbg !5643
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5643

cond.true:                                        ; preds = %land.lhs.true
  %6 = load i8*, i8** %p.addr, align 8, !dbg !5645
  %arrayidx9 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !5645
  %7 = load i8, i8* %arrayidx9, align 1, !dbg !5645
  %conv10 = zext i8 %7 to i32, !dbg !5645
  %cmp11 = icmp sgt i32 %conv10, 189, !dbg !5645
  br i1 %cmp11, label %lor.end58, label %lor.rhs, !dbg !5645

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %8 = load i8*, i8** %p.addr, align 8, !dbg !5647
  %arrayidx13 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !5647
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !5647
  %conv14 = zext i8 %9 to i32, !dbg !5647
  %and15 = and i32 %conv14, 192, !dbg !5647
  %cmp16 = icmp eq i32 %and15, 192, !dbg !5647
  br i1 %cmp16, label %lor.end58, label %lor.rhs, !dbg !5647

lor.rhs:                                          ; preds = %cond.false, %cond.true
  %10 = load i8*, i8** %p.addr, align 8, !dbg !5649
  %11 = load i8, i8* %10, align 1, !dbg !5649
  %conv18 = zext i8 %11 to i32, !dbg !5649
  %cmp19 = icmp eq i32 %conv18, 224, !dbg !5649
  br i1 %cmp19, label %cond.true21, label %cond.false32, !dbg !5649

cond.true21:                                      ; preds = %lor.rhs
  %12 = load i8*, i8** %p.addr, align 8, !dbg !5651
  %arrayidx22 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !5651
  %13 = load i8, i8* %arrayidx22, align 1, !dbg !5651
  %conv23 = zext i8 %13 to i32, !dbg !5651
  %cmp24 = icmp slt i32 %conv23, 160, !dbg !5651
  br i1 %cmp24, label %lor.end, label %lor.rhs26, !dbg !5651

lor.rhs26:                                        ; preds = %cond.true21
  %14 = load i8*, i8** %p.addr, align 8, !dbg !5653
  %arrayidx27 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !5653
  %15 = load i8, i8* %arrayidx27, align 1, !dbg !5653
  %conv28 = zext i8 %15 to i32, !dbg !5653
  %and29 = and i32 %conv28, 192, !dbg !5653
  %cmp30 = icmp eq i32 %and29, 192, !dbg !5653
  br label %lor.end, !dbg !5653

lor.end:                                          ; preds = %lor.rhs26, %cond.true21
  %16 = phi i1 [ true, %cond.true21 ], [ %cmp30, %lor.rhs26 ]
  %lor.ext = zext i1 %16 to i32, !dbg !5655
  br label %cond.end55, !dbg !5655

cond.false32:                                     ; preds = %lor.rhs
  %17 = load i8*, i8** %p.addr, align 8, !dbg !5657
  %arrayidx33 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !5657
  %18 = load i8, i8* %arrayidx33, align 1, !dbg !5657
  %conv34 = zext i8 %18 to i32, !dbg !5657
  %and35 = and i32 %conv34, 128, !dbg !5657
  %cmp36 = icmp eq i32 %and35, 0, !dbg !5657
  br i1 %cmp36, label %lor.end53, label %lor.rhs38, !dbg !5657

lor.rhs38:                                        ; preds = %cond.false32
  %19 = load i8*, i8** %p.addr, align 8, !dbg !5659
  %20 = load i8, i8* %19, align 1, !dbg !5659
  %conv39 = zext i8 %20 to i32, !dbg !5659
  %cmp40 = icmp eq i32 %conv39, 237, !dbg !5659
  br i1 %cmp40, label %cond.true42, label %cond.false47, !dbg !5659

cond.true42:                                      ; preds = %lor.rhs38
  %21 = load i8*, i8** %p.addr, align 8, !dbg !5661
  %arrayidx43 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !5661
  %22 = load i8, i8* %arrayidx43, align 1, !dbg !5661
  %conv44 = zext i8 %22 to i32, !dbg !5661
  %cmp45 = icmp sgt i32 %conv44, 159, !dbg !5661
  %conv46 = zext i1 %cmp45 to i32, !dbg !5661
  br label %cond.end, !dbg !5661

cond.false47:                                     ; preds = %lor.rhs38
  %23 = load i8*, i8** %p.addr, align 8, !dbg !5663
  %arrayidx48 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !5663
  %24 = load i8, i8* %arrayidx48, align 1, !dbg !5663
  %conv49 = zext i8 %24 to i32, !dbg !5663
  %and50 = and i32 %conv49, 192, !dbg !5663
  %cmp51 = icmp eq i32 %and50, 192, !dbg !5663
  %conv52 = zext i1 %cmp51 to i32, !dbg !5663
  br label %cond.end, !dbg !5663

cond.end:                                         ; preds = %cond.false47, %cond.true42
  %cond = phi i32 [ %conv46, %cond.true42 ], [ %conv52, %cond.false47 ], !dbg !5665
  %tobool = icmp ne i32 %cond, 0, !dbg !5665
  br label %lor.end53, !dbg !5665

lor.end53:                                        ; preds = %cond.end, %cond.false32
  %25 = phi i1 [ true, %cond.false32 ], [ %tobool, %cond.end ]
  %lor.ext54 = zext i1 %25 to i32, !dbg !5667
  br label %cond.end55, !dbg !5667

cond.end55:                                       ; preds = %lor.end53, %lor.end
  %cond56 = phi i32 [ %lor.ext, %lor.end ], [ %lor.ext54, %lor.end53 ], !dbg !5669
  %tobool57 = icmp ne i32 %cond56, 0, !dbg !5669
  br label %lor.end58, !dbg !5669

lor.end58:                                        ; preds = %cond.end55, %cond.false, %cond.true, %entry
  %26 = phi i1 [ true, %cond.false ], [ true, %cond.true ], [ true, %entry ], [ %tobool57, %cond.end55 ]
  %lor.ext59 = zext i1 %26 to i32, !dbg !5671
  ret i32 %lor.ext59, !dbg !5673
}

; Function Attrs: nounwind uwtable
define internal i32 @utf8_isInvalid4(%struct.encoding* %UNUSED_enc, i8* %p) #0 !dbg !296 {
entry:
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !5674, metadata !444), !dbg !5675
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5676, metadata !444), !dbg !5677
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5678
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3, !dbg !5678
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5678
  %conv = zext i8 %1 to i32, !dbg !5678
  %and = and i32 %conv, 128, !dbg !5678
  %cmp = icmp eq i32 %and, 0, !dbg !5678
  br i1 %cmp, label %lor.end57, label %lor.lhs.false, !dbg !5678

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !5679
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 3, !dbg !5679
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !5679
  %conv3 = zext i8 %3 to i32, !dbg !5679
  %and4 = and i32 %conv3, 192, !dbg !5679
  %cmp5 = icmp eq i32 %and4, 192, !dbg !5679
  br i1 %cmp5, label %lor.end57, label %lor.lhs.false7, !dbg !5679

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p.addr, align 8, !dbg !5681
  %arrayidx8 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !5681
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !5681
  %conv9 = zext i8 %5 to i32, !dbg !5681
  %and10 = and i32 %conv9, 128, !dbg !5681
  %cmp11 = icmp eq i32 %and10, 0, !dbg !5681
  br i1 %cmp11, label %lor.end57, label %lor.lhs.false13, !dbg !5681

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %6 = load i8*, i8** %p.addr, align 8, !dbg !5683
  %arrayidx14 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !5683
  %7 = load i8, i8* %arrayidx14, align 1, !dbg !5683
  %conv15 = zext i8 %7 to i32, !dbg !5683
  %and16 = and i32 %conv15, 192, !dbg !5683
  %cmp17 = icmp eq i32 %and16, 192, !dbg !5683
  br i1 %cmp17, label %lor.end57, label %lor.rhs, !dbg !5683

lor.rhs:                                          ; preds = %lor.lhs.false13
  %8 = load i8*, i8** %p.addr, align 8, !dbg !5685
  %9 = load i8, i8* %8, align 1, !dbg !5685
  %conv19 = zext i8 %9 to i32, !dbg !5685
  %cmp20 = icmp eq i32 %conv19, 240, !dbg !5685
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !5685

cond.true:                                        ; preds = %lor.rhs
  %10 = load i8*, i8** %p.addr, align 8, !dbg !5687
  %arrayidx22 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5687
  %11 = load i8, i8* %arrayidx22, align 1, !dbg !5687
  %conv23 = zext i8 %11 to i32, !dbg !5687
  %cmp24 = icmp slt i32 %conv23, 144, !dbg !5687
  br i1 %cmp24, label %lor.end, label %lor.rhs26, !dbg !5687

lor.rhs26:                                        ; preds = %cond.true
  %12 = load i8*, i8** %p.addr, align 8, !dbg !5689
  %arrayidx27 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !5689
  %13 = load i8, i8* %arrayidx27, align 1, !dbg !5689
  %conv28 = zext i8 %13 to i32, !dbg !5689
  %and29 = and i32 %conv28, 192, !dbg !5689
  %cmp30 = icmp eq i32 %and29, 192, !dbg !5689
  br label %lor.end, !dbg !5689

lor.end:                                          ; preds = %lor.rhs26, %cond.true
  %14 = phi i1 [ true, %cond.true ], [ %cmp30, %lor.rhs26 ]
  %lor.ext = zext i1 %14 to i32, !dbg !5691
  br label %cond.end54, !dbg !5691

cond.false:                                       ; preds = %lor.rhs
  %15 = load i8*, i8** %p.addr, align 8, !dbg !5693
  %arrayidx32 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !5693
  %16 = load i8, i8* %arrayidx32, align 1, !dbg !5693
  %conv33 = zext i8 %16 to i32, !dbg !5693
  %and34 = and i32 %conv33, 128, !dbg !5693
  %cmp35 = icmp eq i32 %and34, 0, !dbg !5693
  br i1 %cmp35, label %lor.end52, label %lor.rhs37, !dbg !5693

lor.rhs37:                                        ; preds = %cond.false
  %17 = load i8*, i8** %p.addr, align 8, !dbg !5695
  %18 = load i8, i8* %17, align 1, !dbg !5695
  %conv38 = zext i8 %18 to i32, !dbg !5695
  %cmp39 = icmp eq i32 %conv38, 244, !dbg !5695
  br i1 %cmp39, label %cond.true41, label %cond.false46, !dbg !5695

cond.true41:                                      ; preds = %lor.rhs37
  %19 = load i8*, i8** %p.addr, align 8, !dbg !5697
  %arrayidx42 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !5697
  %20 = load i8, i8* %arrayidx42, align 1, !dbg !5697
  %conv43 = zext i8 %20 to i32, !dbg !5697
  %cmp44 = icmp sgt i32 %conv43, 143, !dbg !5697
  %conv45 = zext i1 %cmp44 to i32, !dbg !5697
  br label %cond.end, !dbg !5697

cond.false46:                                     ; preds = %lor.rhs37
  %21 = load i8*, i8** %p.addr, align 8, !dbg !5699
  %arrayidx47 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !5699
  %22 = load i8, i8* %arrayidx47, align 1, !dbg !5699
  %conv48 = zext i8 %22 to i32, !dbg !5699
  %and49 = and i32 %conv48, 192, !dbg !5699
  %cmp50 = icmp eq i32 %and49, 192, !dbg !5699
  %conv51 = zext i1 %cmp50 to i32, !dbg !5699
  br label %cond.end, !dbg !5699

cond.end:                                         ; preds = %cond.false46, %cond.true41
  %cond = phi i32 [ %conv45, %cond.true41 ], [ %conv51, %cond.false46 ], !dbg !5701
  %tobool = icmp ne i32 %cond, 0, !dbg !5701
  br label %lor.end52, !dbg !5701

lor.end52:                                        ; preds = %cond.end, %cond.false
  %23 = phi i1 [ true, %cond.false ], [ %tobool, %cond.end ]
  %lor.ext53 = zext i1 %23 to i32, !dbg !5703
  br label %cond.end54, !dbg !5703

cond.end54:                                       ; preds = %lor.end52, %lor.end
  %cond55 = phi i32 [ %lor.ext, %lor.end ], [ %lor.ext53, %lor.end52 ], !dbg !5705
  %tobool56 = icmp ne i32 %cond55, 0, !dbg !5705
  br label %lor.end57, !dbg !5705

lor.end57:                                        ; preds = %cond.end54, %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry
  %24 = phi i1 [ true, %lor.lhs.false13 ], [ true, %lor.lhs.false7 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool56, %cond.end54 ]
  %lor.ext58 = zext i1 %24 to i32, !dbg !5707
  ret i32 %lor.ext58, !dbg !5709
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_prologTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !297 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %n = alloca i64, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !5710, metadata !444), !dbg !5711
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5712, metadata !444), !dbg !5713
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !5714, metadata !444), !dbg !5715
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !5716, metadata !444), !dbg !5717
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !5718, metadata !444), !dbg !5719
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5720
  %1 = load i8*, i8** %end.addr, align 8, !dbg !5722
  %cmp = icmp uge i8* %0, %1, !dbg !5723
  br i1 %cmp, label %if.then, label %if.end, !dbg !5724

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !5725
  br label %return, !dbg !5725

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n, metadata !5726, metadata !444), !dbg !5729
  %2 = load i8*, i8** %end.addr, align 8, !dbg !5730
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !5731
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !5732
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !5732
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5732
  store i64 %sub.ptr.sub, i64* %n, align 8, !dbg !5729
  %4 = load i64, i64* %n, align 8, !dbg !5733
  %and = and i64 %4, 1, !dbg !5735
  %tobool = icmp ne i64 %and, 0, !dbg !5735
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !5736

if.then1:                                         ; preds = %if.end
  %5 = load i64, i64* %n, align 8, !dbg !5737
  %and2 = and i64 %5, -2, !dbg !5737
  store i64 %and2, i64* %n, align 8, !dbg !5737
  %6 = load i64, i64* %n, align 8, !dbg !5739
  %cmp3 = icmp eq i64 %6, 0, !dbg !5741
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5742

if.then4:                                         ; preds = %if.then1
  store i32 -1, i32* %retval, align 4, !dbg !5743
  br label %return, !dbg !5743

if.end5:                                          ; preds = %if.then1
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !5744
  %8 = load i64, i64* %n, align 8, !dbg !5745
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !5746
  store i8* %add.ptr, i8** %end.addr, align 8, !dbg !5747
  br label %if.end6, !dbg !5748

if.end6:                                          ; preds = %if.end5, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !5749
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 1, !dbg !5749
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5749
  %conv = sext i8 %10 to i32, !dbg !5749
  %cmp7 = icmp eq i32 %conv, 0, !dbg !5749
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5749

cond.true:                                        ; preds = %if.end6
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !5750
  %12 = load i8, i8* %11, align 1, !dbg !5750
  %idxprom = zext i8 %12 to i64, !dbg !5750
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5750
  %14 = bitcast %struct.encoding* %13 to %struct.normal_encoding*, !dbg !5750
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %14, i32 0, i32 1, !dbg !5750
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !5750
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !5750
  %conv10 = zext i8 %15 to i32, !dbg !5750
  br label %cond.end, !dbg !5750

cond.false:                                       ; preds = %if.end6
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !5752
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !5752
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !5752
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !5752
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !5752
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !5752
  %call = call i32 @unicode_byte_type(i8 signext %17, i8 signext %19), !dbg !5752
  br label %cond.end, !dbg !5752

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv10, %cond.true ], [ %call, %cond.false ], !dbg !5754
  switch i32 %cond, label %sw.default242 [
    i32 12, label %sw.bb
    i32 13, label %sw.bb15
    i32 2, label %sw.bb18
    i32 9, label %sw.bb50
    i32 21, label %sw.bb56
    i32 10, label %sw.bb56
    i32 30, label %sw.bb88
    i32 35, label %sw.bb91
    i32 20, label %sw.bb93
    i32 4, label %sw.bb95
    i32 31, label %sw.bb135
    i32 32, label %sw.bb137
    i32 36, label %sw.bb169
    i32 11, label %sw.bb171
    i32 19, label %sw.bb173
    i32 5, label %sw.bb176
    i32 6, label %sw.bb184
    i32 7, label %sw.bb192
    i32 22, label %sw.bb200
    i32 24, label %sw.bb200
    i32 25, label %sw.bb202
    i32 26, label %sw.bb202
    i32 27, label %sw.bb202
    i32 29, label %sw.bb204
  ], !dbg !5756

sw.bb:                                            ; preds = %cond.end
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5757
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !5759
  %add.ptr13 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !5760
  %22 = load i8*, i8** %end.addr, align 8, !dbg !5761
  %23 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5762
  %call14 = call i32 @little2_scanLit(i32 12, %struct.encoding* %20, i8* %add.ptr13, i8* %22, i8** %23), !dbg !5763
  store i32 %call14, i32* %retval, align 4, !dbg !5764
  br label %return, !dbg !5764

sw.bb15:                                          ; preds = %cond.end
  %24 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5765
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !5766
  %add.ptr16 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !5767
  %26 = load i8*, i8** %end.addr, align 8, !dbg !5768
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5769
  %call17 = call i32 @little2_scanLit(i32 13, %struct.encoding* %24, i8* %add.ptr16, i8* %26, i8** %27), !dbg !5770
  store i32 %call17, i32* %retval, align 4, !dbg !5771
  br label %return, !dbg !5771

sw.bb18:                                          ; preds = %cond.end
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !5772
  %add.ptr19 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !5772
  store i8* %add.ptr19, i8** %ptr.addr, align 8, !dbg !5772
  %29 = load i8*, i8** %end.addr, align 8, !dbg !5774
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !5774
  %sub.ptr.lhs.cast20 = ptrtoint i8* %29 to i64, !dbg !5774
  %sub.ptr.rhs.cast21 = ptrtoint i8* %30 to i64, !dbg !5774
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !5774
  %cmp23 = icmp sge i64 %sub.ptr.sub22, 2, !dbg !5774
  br i1 %cmp23, label %if.end26, label %if.then25, !dbg !5777

if.then25:                                        ; preds = %sw.bb18
  store i32 -1, i32* %retval, align 4, !dbg !5778
  br label %return, !dbg !5778

if.end26:                                         ; preds = %sw.bb18
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !5781
  %arrayidx27 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !5781
  %32 = load i8, i8* %arrayidx27, align 1, !dbg !5781
  %conv28 = sext i8 %32 to i32, !dbg !5781
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !5781
  br i1 %cmp29, label %cond.true31, label %cond.false36, !dbg !5781

cond.true31:                                      ; preds = %if.end26
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !5782
  %34 = load i8, i8* %33, align 1, !dbg !5782
  %idxprom32 = zext i8 %34 to i64, !dbg !5782
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5782
  %36 = bitcast %struct.encoding* %35 to %struct.normal_encoding*, !dbg !5782
  %type33 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %36, i32 0, i32 1, !dbg !5782
  %arrayidx34 = getelementptr inbounds [256 x i8], [256 x i8]* %type33, i64 0, i64 %idxprom32, !dbg !5782
  %37 = load i8, i8* %arrayidx34, align 1, !dbg !5782
  %conv35 = zext i8 %37 to i32, !dbg !5782
  br label %cond.end40, !dbg !5782

cond.false36:                                     ; preds = %if.end26
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !5784
  %arrayidx37 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !5784
  %39 = load i8, i8* %arrayidx37, align 1, !dbg !5784
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !5784
  %arrayidx38 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !5784
  %41 = load i8, i8* %arrayidx38, align 1, !dbg !5784
  %call39 = call i32 @unicode_byte_type(i8 signext %39, i8 signext %41), !dbg !5784
  br label %cond.end40, !dbg !5784

cond.end40:                                       ; preds = %cond.false36, %cond.true31
  %cond41 = phi i32 [ %conv35, %cond.true31 ], [ %call39, %cond.false36 ], !dbg !5786
  switch i32 %cond41, label %sw.epilog [
    i32 16, label %sw.bb42
    i32 15, label %sw.bb45
    i32 22, label %sw.bb48
    i32 24, label %sw.bb48
    i32 29, label %sw.bb48
    i32 5, label %sw.bb48
    i32 6, label %sw.bb48
    i32 7, label %sw.bb48
  ], !dbg !5788

sw.bb42:                                          ; preds = %cond.end40
  %42 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5789
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !5791
  %add.ptr43 = getelementptr inbounds i8, i8* %43, i64 2, !dbg !5792
  %44 = load i8*, i8** %end.addr, align 8, !dbg !5793
  %45 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5794
  %call44 = call i32 @little2_scanDecl(%struct.encoding* %42, i8* %add.ptr43, i8* %44, i8** %45), !dbg !5795
  store i32 %call44, i32* %retval, align 4, !dbg !5796
  br label %return, !dbg !5796

sw.bb45:                                          ; preds = %cond.end40
  %46 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5797
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !5798
  %add.ptr46 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !5799
  %48 = load i8*, i8** %end.addr, align 8, !dbg !5800
  %49 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5801
  %call47 = call i32 @little2_scanPi(%struct.encoding* %46, i8* %add.ptr46, i8* %48, i8** %49), !dbg !5802
  store i32 %call47, i32* %retval, align 4, !dbg !5803
  br label %return, !dbg !5803

sw.bb48:                                          ; preds = %cond.end40, %cond.end40, %cond.end40, %cond.end40, %cond.end40, %cond.end40
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !5804
  %add.ptr49 = getelementptr inbounds i8, i8* %50, i64 -2, !dbg !5805
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5806
  store i8* %add.ptr49, i8** %51, align 8, !dbg !5807
  store i32 29, i32* %retval, align 4, !dbg !5808
  br label %return, !dbg !5808

sw.epilog:                                        ; preds = %cond.end40
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !5809
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5810
  store i8* %52, i8** %53, align 8, !dbg !5811
  store i32 0, i32* %retval, align 4, !dbg !5812
  br label %return, !dbg !5812

sw.bb50:                                          ; preds = %cond.end
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !5813
  %add.ptr51 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !5815
  %55 = load i8*, i8** %end.addr, align 8, !dbg !5816
  %cmp52 = icmp eq i8* %add.ptr51, %55, !dbg !5817
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !5818

if.then54:                                        ; preds = %sw.bb50
  %56 = load i8*, i8** %end.addr, align 8, !dbg !5819
  %57 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5821
  store i8* %56, i8** %57, align 8, !dbg !5822
  store i32 -15, i32* %retval, align 4, !dbg !5823
  br label %return, !dbg !5823

if.end55:                                         ; preds = %sw.bb50
  br label %sw.bb56, !dbg !5824

sw.bb56:                                          ; preds = %cond.end, %cond.end, %if.end55
  br label %for.cond, !dbg !5826

for.cond:                                         ; preds = %sw.epilog87, %sw.bb56
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !5827
  %add.ptr57 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !5827
  store i8* %add.ptr57, i8** %ptr.addr, align 8, !dbg !5827
  %59 = load i8*, i8** %end.addr, align 8, !dbg !5831
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !5831
  %sub.ptr.lhs.cast58 = ptrtoint i8* %59 to i64, !dbg !5831
  %sub.ptr.rhs.cast59 = ptrtoint i8* %60 to i64, !dbg !5831
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59, !dbg !5831
  %cmp61 = icmp sge i64 %sub.ptr.sub60, 2, !dbg !5831
  br i1 %cmp61, label %if.end64, label %if.then63, !dbg !5833

if.then63:                                        ; preds = %for.cond
  br label %for.end, !dbg !5834

if.end64:                                         ; preds = %for.cond
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !5835
  %arrayidx65 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !5835
  %62 = load i8, i8* %arrayidx65, align 1, !dbg !5835
  %conv66 = sext i8 %62 to i32, !dbg !5835
  %cmp67 = icmp eq i32 %conv66, 0, !dbg !5835
  br i1 %cmp67, label %cond.true69, label %cond.false74, !dbg !5835

cond.true69:                                      ; preds = %if.end64
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !5836
  %64 = load i8, i8* %63, align 1, !dbg !5836
  %idxprom70 = zext i8 %64 to i64, !dbg !5836
  %65 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5836
  %66 = bitcast %struct.encoding* %65 to %struct.normal_encoding*, !dbg !5836
  %type71 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %66, i32 0, i32 1, !dbg !5836
  %arrayidx72 = getelementptr inbounds [256 x i8], [256 x i8]* %type71, i64 0, i64 %idxprom70, !dbg !5836
  %67 = load i8, i8* %arrayidx72, align 1, !dbg !5836
  %conv73 = zext i8 %67 to i32, !dbg !5836
  br label %cond.end78, !dbg !5836

cond.false74:                                     ; preds = %if.end64
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !5838
  %arrayidx75 = getelementptr inbounds i8, i8* %68, i64 1, !dbg !5838
  %69 = load i8, i8* %arrayidx75, align 1, !dbg !5838
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !5838
  %arrayidx76 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !5838
  %71 = load i8, i8* %arrayidx76, align 1, !dbg !5838
  %call77 = call i32 @unicode_byte_type(i8 signext %69, i8 signext %71), !dbg !5838
  br label %cond.end78, !dbg !5838

cond.end78:                                       ; preds = %cond.false74, %cond.true69
  %cond79 = phi i32 [ %conv73, %cond.true69 ], [ %call77, %cond.false74 ], !dbg !5840
  switch i32 %cond79, label %sw.default [
    i32 21, label %sw.bb80
    i32 10, label %sw.bb80
    i32 9, label %sw.bb81
  ], !dbg !5842

sw.bb80:                                          ; preds = %cond.end78, %cond.end78
  br label %sw.epilog87, !dbg !5843

sw.bb81:                                          ; preds = %cond.end78
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !5845
  %add.ptr82 = getelementptr inbounds i8, i8* %72, i64 2, !dbg !5847
  %73 = load i8*, i8** %end.addr, align 8, !dbg !5848
  %cmp83 = icmp ne i8* %add.ptr82, %73, !dbg !5849
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !5850

if.then85:                                        ; preds = %sw.bb81
  br label %sw.epilog87, !dbg !5851

if.end86:                                         ; preds = %sw.bb81
  br label %sw.default, !dbg !5852

sw.default:                                       ; preds = %cond.end78, %if.end86
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !5854
  %75 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5855
  store i8* %74, i8** %75, align 8, !dbg !5856
  store i32 15, i32* %retval, align 4, !dbg !5857
  br label %return, !dbg !5857

sw.epilog87:                                      ; preds = %if.then85, %sw.bb80
  br label %for.cond, !dbg !5858

for.end:                                          ; preds = %if.then63
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !5860
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5861
  store i8* %76, i8** %77, align 8, !dbg !5862
  store i32 15, i32* %retval, align 4, !dbg !5863
  br label %return, !dbg !5863

sw.bb88:                                          ; preds = %cond.end
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5864
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !5865
  %add.ptr89 = getelementptr inbounds i8, i8* %79, i64 2, !dbg !5866
  %80 = load i8*, i8** %end.addr, align 8, !dbg !5867
  %81 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5868
  %call90 = call i32 @little2_scanPercent(%struct.encoding* %78, i8* %add.ptr89, i8* %80, i8** %81), !dbg !5869
  store i32 %call90, i32* %retval, align 4, !dbg !5870
  br label %return, !dbg !5870

sw.bb91:                                          ; preds = %cond.end
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !5871
  %add.ptr92 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !5872
  %83 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5873
  store i8* %add.ptr92, i8** %83, align 8, !dbg !5874
  store i32 38, i32* %retval, align 4, !dbg !5875
  br label %return, !dbg !5875

sw.bb93:                                          ; preds = %cond.end
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !5876
  %add.ptr94 = getelementptr inbounds i8, i8* %84, i64 2, !dbg !5877
  %85 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5878
  store i8* %add.ptr94, i8** %85, align 8, !dbg !5879
  store i32 25, i32* %retval, align 4, !dbg !5880
  br label %return, !dbg !5880

sw.bb95:                                          ; preds = %cond.end
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !5881
  %add.ptr96 = getelementptr inbounds i8, i8* %86, i64 2, !dbg !5881
  store i8* %add.ptr96, i8** %ptr.addr, align 8, !dbg !5881
  %87 = load i8*, i8** %end.addr, align 8, !dbg !5882
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !5882
  %sub.ptr.lhs.cast97 = ptrtoint i8* %87 to i64, !dbg !5882
  %sub.ptr.rhs.cast98 = ptrtoint i8* %88 to i64, !dbg !5882
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98, !dbg !5882
  %cmp100 = icmp sge i64 %sub.ptr.sub99, 2, !dbg !5882
  br i1 %cmp100, label %if.end103, label %if.then102, !dbg !5884

if.then102:                                       ; preds = %sw.bb95
  store i32 -26, i32* %retval, align 4, !dbg !5885
  br label %return, !dbg !5885

if.end103:                                        ; preds = %sw.bb95
  %89 = load i8*, i8** %ptr.addr, align 8, !dbg !5886
  %arrayidx104 = getelementptr inbounds i8, i8* %89, i64 1, !dbg !5886
  %90 = load i8, i8* %arrayidx104, align 1, !dbg !5886
  %conv105 = sext i8 %90 to i32, !dbg !5886
  %cmp106 = icmp eq i32 %conv105, 0, !dbg !5886
  br i1 %cmp106, label %land.lhs.true, label %if.end134, !dbg !5886

land.lhs.true:                                    ; preds = %if.end103
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !5888
  %arrayidx108 = getelementptr inbounds i8, i8* %91, i64 0, !dbg !5888
  %92 = load i8, i8* %arrayidx108, align 1, !dbg !5888
  %conv109 = sext i8 %92 to i32, !dbg !5888
  %cmp110 = icmp eq i32 %conv109, 93, !dbg !5888
  br i1 %cmp110, label %if.then112, label %if.end134, !dbg !5888

if.then112:                                       ; preds = %land.lhs.true
  %93 = load i8*, i8** %end.addr, align 8, !dbg !5890
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !5890
  %sub.ptr.lhs.cast113 = ptrtoint i8* %93 to i64, !dbg !5890
  %sub.ptr.rhs.cast114 = ptrtoint i8* %94 to i64, !dbg !5890
  %sub.ptr.sub115 = sub i64 %sub.ptr.lhs.cast113, %sub.ptr.rhs.cast114, !dbg !5890
  %cmp116 = icmp sge i64 %sub.ptr.sub115, 4, !dbg !5890
  br i1 %cmp116, label %if.end119, label %if.then118, !dbg !5894

if.then118:                                       ; preds = %if.then112
  store i32 -1, i32* %retval, align 4, !dbg !5895
  br label %return, !dbg !5895

if.end119:                                        ; preds = %if.then112
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !5898
  %add.ptr120 = getelementptr inbounds i8, i8* %95, i64 2, !dbg !5898
  %arrayidx121 = getelementptr inbounds i8, i8* %add.ptr120, i64 1, !dbg !5898
  %96 = load i8, i8* %arrayidx121, align 1, !dbg !5898
  %conv122 = sext i8 %96 to i32, !dbg !5898
  %cmp123 = icmp eq i32 %conv122, 0, !dbg !5898
  br i1 %cmp123, label %land.lhs.true125, label %if.end133, !dbg !5898

land.lhs.true125:                                 ; preds = %if.end119
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !5900
  %add.ptr126 = getelementptr inbounds i8, i8* %97, i64 2, !dbg !5900
  %arrayidx127 = getelementptr inbounds i8, i8* %add.ptr126, i64 0, !dbg !5900
  %98 = load i8, i8* %arrayidx127, align 1, !dbg !5900
  %conv128 = sext i8 %98 to i32, !dbg !5900
  %cmp129 = icmp eq i32 %conv128, 62, !dbg !5900
  br i1 %cmp129, label %if.then131, label %if.end133, !dbg !5900

if.then131:                                       ; preds = %land.lhs.true125
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !5902
  %add.ptr132 = getelementptr inbounds i8, i8* %99, i64 4, !dbg !5904
  %100 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5905
  store i8* %add.ptr132, i8** %100, align 8, !dbg !5906
  store i32 34, i32* %retval, align 4, !dbg !5907
  br label %return, !dbg !5907

if.end133:                                        ; preds = %land.lhs.true125, %if.end119
  br label %if.end134, !dbg !5908

if.end134:                                        ; preds = %if.end133, %land.lhs.true, %if.end103
  %101 = load i8*, i8** %ptr.addr, align 8, !dbg !5909
  %102 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5910
  store i8* %101, i8** %102, align 8, !dbg !5911
  store i32 26, i32* %retval, align 4, !dbg !5912
  br label %return, !dbg !5912

sw.bb135:                                         ; preds = %cond.end
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !5913
  %add.ptr136 = getelementptr inbounds i8, i8* %103, i64 2, !dbg !5914
  %104 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5915
  store i8* %add.ptr136, i8** %104, align 8, !dbg !5916
  store i32 23, i32* %retval, align 4, !dbg !5917
  br label %return, !dbg !5917

sw.bb137:                                         ; preds = %cond.end
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !5918
  %add.ptr138 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !5918
  store i8* %add.ptr138, i8** %ptr.addr, align 8, !dbg !5918
  %106 = load i8*, i8** %end.addr, align 8, !dbg !5919
  %107 = load i8*, i8** %ptr.addr, align 8, !dbg !5919
  %sub.ptr.lhs.cast139 = ptrtoint i8* %106 to i64, !dbg !5919
  %sub.ptr.rhs.cast140 = ptrtoint i8* %107 to i64, !dbg !5919
  %sub.ptr.sub141 = sub i64 %sub.ptr.lhs.cast139, %sub.ptr.rhs.cast140, !dbg !5919
  %cmp142 = icmp sge i64 %sub.ptr.sub141, 2, !dbg !5919
  br i1 %cmp142, label %if.end145, label %if.then144, !dbg !5921

if.then144:                                       ; preds = %sw.bb137
  store i32 -24, i32* %retval, align 4, !dbg !5922
  br label %return, !dbg !5922

if.end145:                                        ; preds = %sw.bb137
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !5923
  %arrayidx146 = getelementptr inbounds i8, i8* %108, i64 1, !dbg !5923
  %109 = load i8, i8* %arrayidx146, align 1, !dbg !5923
  %conv147 = sext i8 %109 to i32, !dbg !5923
  %cmp148 = icmp eq i32 %conv147, 0, !dbg !5923
  br i1 %cmp148, label %cond.true150, label %cond.false155, !dbg !5923

cond.true150:                                     ; preds = %if.end145
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !5924
  %111 = load i8, i8* %110, align 1, !dbg !5924
  %idxprom151 = zext i8 %111 to i64, !dbg !5924
  %112 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5924
  %113 = bitcast %struct.encoding* %112 to %struct.normal_encoding*, !dbg !5924
  %type152 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %113, i32 0, i32 1, !dbg !5924
  %arrayidx153 = getelementptr inbounds [256 x i8], [256 x i8]* %type152, i64 0, i64 %idxprom151, !dbg !5924
  %114 = load i8, i8* %arrayidx153, align 1, !dbg !5924
  %conv154 = zext i8 %114 to i32, !dbg !5924
  br label %cond.end159, !dbg !5924

cond.false155:                                    ; preds = %if.end145
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !5926
  %arrayidx156 = getelementptr inbounds i8, i8* %115, i64 1, !dbg !5926
  %116 = load i8, i8* %arrayidx156, align 1, !dbg !5926
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !5926
  %arrayidx157 = getelementptr inbounds i8, i8* %117, i64 0, !dbg !5926
  %118 = load i8, i8* %arrayidx157, align 1, !dbg !5926
  %call158 = call i32 @unicode_byte_type(i8 signext %116, i8 signext %118), !dbg !5926
  br label %cond.end159, !dbg !5926

cond.end159:                                      ; preds = %cond.false155, %cond.true150
  %cond160 = phi i32 [ %conv154, %cond.true150 ], [ %call158, %cond.false155 ], !dbg !5928
  switch i32 %cond160, label %sw.epilog168 [
    i32 33, label %sw.bb161
    i32 15, label %sw.bb163
    i32 34, label %sw.bb165
    i32 9, label %sw.bb167
    i32 10, label %sw.bb167
    i32 21, label %sw.bb167
    i32 11, label %sw.bb167
    i32 35, label %sw.bb167
    i32 36, label %sw.bb167
    i32 32, label %sw.bb167
  ], !dbg !5930

sw.bb161:                                         ; preds = %cond.end159
  %119 = load i8*, i8** %ptr.addr, align 8, !dbg !5931
  %add.ptr162 = getelementptr inbounds i8, i8* %119, i64 2, !dbg !5933
  %120 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5934
  store i8* %add.ptr162, i8** %120, align 8, !dbg !5935
  store i32 36, i32* %retval, align 4, !dbg !5936
  br label %return, !dbg !5936

sw.bb163:                                         ; preds = %cond.end159
  %121 = load i8*, i8** %ptr.addr, align 8, !dbg !5937
  %add.ptr164 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !5938
  %122 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5939
  store i8* %add.ptr164, i8** %122, align 8, !dbg !5940
  store i32 35, i32* %retval, align 4, !dbg !5941
  br label %return, !dbg !5941

sw.bb165:                                         ; preds = %cond.end159
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !5942
  %add.ptr166 = getelementptr inbounds i8, i8* %123, i64 2, !dbg !5943
  %124 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5944
  store i8* %add.ptr166, i8** %124, align 8, !dbg !5945
  store i32 37, i32* %retval, align 4, !dbg !5946
  br label %return, !dbg !5946

sw.bb167:                                         ; preds = %cond.end159, %cond.end159, %cond.end159, %cond.end159, %cond.end159, %cond.end159, %cond.end159
  %125 = load i8*, i8** %ptr.addr, align 8, !dbg !5947
  %126 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5948
  store i8* %125, i8** %126, align 8, !dbg !5949
  store i32 24, i32* %retval, align 4, !dbg !5950
  br label %return, !dbg !5950

sw.epilog168:                                     ; preds = %cond.end159
  %127 = load i8*, i8** %ptr.addr, align 8, !dbg !5951
  %128 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5952
  store i8* %127, i8** %128, align 8, !dbg !5953
  store i32 0, i32* %retval, align 4, !dbg !5954
  br label %return, !dbg !5954

sw.bb169:                                         ; preds = %cond.end
  %129 = load i8*, i8** %ptr.addr, align 8, !dbg !5955
  %add.ptr170 = getelementptr inbounds i8, i8* %129, i64 2, !dbg !5956
  %130 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5957
  store i8* %add.ptr170, i8** %130, align 8, !dbg !5958
  store i32 21, i32* %retval, align 4, !dbg !5959
  br label %return, !dbg !5959

sw.bb171:                                         ; preds = %cond.end
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !5960
  %add.ptr172 = getelementptr inbounds i8, i8* %131, i64 2, !dbg !5961
  %132 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5962
  store i8* %add.ptr172, i8** %132, align 8, !dbg !5963
  store i32 17, i32* %retval, align 4, !dbg !5964
  br label %return, !dbg !5964

sw.bb173:                                         ; preds = %cond.end
  %133 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5965
  %134 = load i8*, i8** %ptr.addr, align 8, !dbg !5966
  %add.ptr174 = getelementptr inbounds i8, i8* %134, i64 2, !dbg !5967
  %135 = load i8*, i8** %end.addr, align 8, !dbg !5968
  %136 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5969
  %call175 = call i32 @little2_scanPoundName(%struct.encoding* %133, i8* %add.ptr174, i8* %135, i8** %136), !dbg !5970
  store i32 %call175, i32* %retval, align 4, !dbg !5971
  br label %return, !dbg !5971

sw.bb176:                                         ; preds = %cond.end
  %137 = load i8*, i8** %end.addr, align 8, !dbg !5972
  %138 = load i8*, i8** %ptr.addr, align 8, !dbg !5972
  %sub.ptr.lhs.cast177 = ptrtoint i8* %137 to i64, !dbg !5972
  %sub.ptr.rhs.cast178 = ptrtoint i8* %138 to i64, !dbg !5972
  %sub.ptr.sub179 = sub i64 %sub.ptr.lhs.cast177, %sub.ptr.rhs.cast178, !dbg !5972
  %cmp180 = icmp slt i64 %sub.ptr.sub179, 2, !dbg !5972
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !5974

if.then182:                                       ; preds = %sw.bb176
  store i32 -2, i32* %retval, align 4, !dbg !5975
  br label %return, !dbg !5975

if.end183:                                        ; preds = %sw.bb176
  %139 = load i8*, i8** %ptr.addr, align 8, !dbg !5977
  %140 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5977
  store i8* %139, i8** %140, align 8, !dbg !5977
  store i32 0, i32* %retval, align 4, !dbg !5977
  br label %return, !dbg !5977

sw.bb184:                                         ; preds = %cond.end
  %141 = load i8*, i8** %end.addr, align 8, !dbg !5979
  %142 = load i8*, i8** %ptr.addr, align 8, !dbg !5979
  %sub.ptr.lhs.cast185 = ptrtoint i8* %141 to i64, !dbg !5979
  %sub.ptr.rhs.cast186 = ptrtoint i8* %142 to i64, !dbg !5979
  %sub.ptr.sub187 = sub i64 %sub.ptr.lhs.cast185, %sub.ptr.rhs.cast186, !dbg !5979
  %cmp188 = icmp slt i64 %sub.ptr.sub187, 3, !dbg !5979
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !5979

if.then190:                                       ; preds = %sw.bb184
  store i32 -2, i32* %retval, align 4, !dbg !5982
  br label %return, !dbg !5982

if.end191:                                        ; preds = %sw.bb184
  %143 = load i8*, i8** %ptr.addr, align 8, !dbg !5984
  %144 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5984
  store i8* %143, i8** %144, align 8, !dbg !5984
  store i32 0, i32* %retval, align 4, !dbg !5984
  br label %return, !dbg !5984

sw.bb192:                                         ; preds = %cond.end
  %145 = load i8*, i8** %end.addr, align 8, !dbg !5986
  %146 = load i8*, i8** %ptr.addr, align 8, !dbg !5986
  %sub.ptr.lhs.cast193 = ptrtoint i8* %145 to i64, !dbg !5986
  %sub.ptr.rhs.cast194 = ptrtoint i8* %146 to i64, !dbg !5986
  %sub.ptr.sub195 = sub i64 %sub.ptr.lhs.cast193, %sub.ptr.rhs.cast194, !dbg !5986
  %cmp196 = icmp slt i64 %sub.ptr.sub195, 4, !dbg !5986
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !5986

if.then198:                                       ; preds = %sw.bb192
  store i32 -2, i32* %retval, align 4, !dbg !5989
  br label %return, !dbg !5989

if.end199:                                        ; preds = %sw.bb192
  %147 = load i8*, i8** %ptr.addr, align 8, !dbg !5991
  %148 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !5991
  store i8* %147, i8** %148, align 8, !dbg !5991
  store i32 0, i32* %retval, align 4, !dbg !5991
  br label %return, !dbg !5991

sw.bb200:                                         ; preds = %cond.end, %cond.end
  store i32 18, i32* %tok, align 4, !dbg !5993
  %149 = load i8*, i8** %ptr.addr, align 8, !dbg !5994
  %add.ptr201 = getelementptr inbounds i8, i8* %149, i64 2, !dbg !5994
  store i8* %add.ptr201, i8** %ptr.addr, align 8, !dbg !5994
  br label %sw.epilog243, !dbg !5995

sw.bb202:                                         ; preds = %cond.end, %cond.end, %cond.end
  store i32 19, i32* %tok, align 4, !dbg !5996
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !5997
  %add.ptr203 = getelementptr inbounds i8, i8* %150, i64 2, !dbg !5997
  store i8* %add.ptr203, i8** %ptr.addr, align 8, !dbg !5997
  br label %sw.epilog243, !dbg !5998

sw.bb204:                                         ; preds = %cond.end
  %151 = load i8*, i8** %ptr.addr, align 8, !dbg !5999
  %arrayidx205 = getelementptr inbounds i8, i8* %151, i64 1, !dbg !5999
  %152 = load i8, i8* %arrayidx205, align 1, !dbg !5999
  %idxprom206 = zext i8 %152 to i64, !dbg !5999
  %arrayidx207 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom206, !dbg !5999
  %153 = load i8, i8* %arrayidx207, align 1, !dbg !5999
  %conv208 = zext i8 %153 to i32, !dbg !5999
  %shl = shl i32 %conv208, 3, !dbg !5999
  %154 = load i8*, i8** %ptr.addr, align 8, !dbg !5999
  %arrayidx209 = getelementptr inbounds i8, i8* %154, i64 0, !dbg !5999
  %155 = load i8, i8* %arrayidx209, align 1, !dbg !5999
  %conv210 = zext i8 %155 to i32, !dbg !5999
  %shr = ashr i32 %conv210, 5, !dbg !5999
  %add = add nsw i32 %shl, %shr, !dbg !5999
  %idxprom211 = sext i32 %add to i64, !dbg !5999
  %arrayidx212 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom211, !dbg !5999
  %156 = load i32, i32* %arrayidx212, align 4, !dbg !5999
  %157 = load i8*, i8** %ptr.addr, align 8, !dbg !5999
  %arrayidx213 = getelementptr inbounds i8, i8* %157, i64 0, !dbg !5999
  %158 = load i8, i8* %arrayidx213, align 1, !dbg !5999
  %conv214 = zext i8 %158 to i32, !dbg !5999
  %and215 = and i32 %conv214, 31, !dbg !5999
  %shl216 = shl i32 1, %and215, !dbg !5999
  %and217 = and i32 %156, %shl216, !dbg !5999
  %tobool218 = icmp ne i32 %and217, 0, !dbg !5999
  br i1 %tobool218, label %if.then219, label %if.end221, !dbg !6001

if.then219:                                       ; preds = %sw.bb204
  %159 = load i8*, i8** %ptr.addr, align 8, !dbg !6002
  %add.ptr220 = getelementptr inbounds i8, i8* %159, i64 2, !dbg !6002
  store i8* %add.ptr220, i8** %ptr.addr, align 8, !dbg !6002
  store i32 18, i32* %tok, align 4, !dbg !6004
  br label %sw.epilog243, !dbg !6005

if.end221:                                        ; preds = %sw.bb204
  %160 = load i8*, i8** %ptr.addr, align 8, !dbg !6006
  %arrayidx222 = getelementptr inbounds i8, i8* %160, i64 1, !dbg !6006
  %161 = load i8, i8* %arrayidx222, align 1, !dbg !6006
  %idxprom223 = zext i8 %161 to i64, !dbg !6006
  %arrayidx224 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom223, !dbg !6006
  %162 = load i8, i8* %arrayidx224, align 1, !dbg !6006
  %conv225 = zext i8 %162 to i32, !dbg !6006
  %shl226 = shl i32 %conv225, 3, !dbg !6006
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !6006
  %arrayidx227 = getelementptr inbounds i8, i8* %163, i64 0, !dbg !6006
  %164 = load i8, i8* %arrayidx227, align 1, !dbg !6006
  %conv228 = zext i8 %164 to i32, !dbg !6006
  %shr229 = ashr i32 %conv228, 5, !dbg !6006
  %add230 = add nsw i32 %shl226, %shr229, !dbg !6006
  %idxprom231 = sext i32 %add230 to i64, !dbg !6006
  %arrayidx232 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom231, !dbg !6006
  %165 = load i32, i32* %arrayidx232, align 4, !dbg !6006
  %166 = load i8*, i8** %ptr.addr, align 8, !dbg !6006
  %arrayidx233 = getelementptr inbounds i8, i8* %166, i64 0, !dbg !6006
  %167 = load i8, i8* %arrayidx233, align 1, !dbg !6006
  %conv234 = zext i8 %167 to i32, !dbg !6006
  %and235 = and i32 %conv234, 31, !dbg !6006
  %shl236 = shl i32 1, %and235, !dbg !6006
  %and237 = and i32 %165, %shl236, !dbg !6006
  %tobool238 = icmp ne i32 %and237, 0, !dbg !6006
  br i1 %tobool238, label %if.then239, label %if.end241, !dbg !6008

if.then239:                                       ; preds = %if.end221
  %168 = load i8*, i8** %ptr.addr, align 8, !dbg !6009
  %add.ptr240 = getelementptr inbounds i8, i8* %168, i64 2, !dbg !6009
  store i8* %add.ptr240, i8** %ptr.addr, align 8, !dbg !6009
  store i32 19, i32* %tok, align 4, !dbg !6011
  br label %sw.epilog243, !dbg !6012

if.end241:                                        ; preds = %if.end221
  br label %sw.default242, !dbg !6013

sw.default242:                                    ; preds = %cond.end, %if.end241
  %169 = load i8*, i8** %ptr.addr, align 8, !dbg !6015
  %170 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6016
  store i8* %169, i8** %170, align 8, !dbg !6017
  store i32 0, i32* %retval, align 4, !dbg !6018
  br label %return, !dbg !6018

sw.epilog243:                                     ; preds = %if.then239, %if.then219, %sw.bb202, %sw.bb200
  br label %while.cond, !dbg !6019

while.cond:                                       ; preds = %sw.epilog330, %sw.epilog243
  %171 = load i8*, i8** %end.addr, align 8, !dbg !6020
  %172 = load i8*, i8** %ptr.addr, align 8, !dbg !6020
  %sub.ptr.lhs.cast244 = ptrtoint i8* %171 to i64, !dbg !6020
  %sub.ptr.rhs.cast245 = ptrtoint i8* %172 to i64, !dbg !6020
  %sub.ptr.sub246 = sub i64 %sub.ptr.lhs.cast244, %sub.ptr.rhs.cast245, !dbg !6020
  %cmp247 = icmp sge i64 %sub.ptr.sub246, 2, !dbg !6020
  br i1 %cmp247, label %while.body, label %while.end, !dbg !6021

while.body:                                       ; preds = %while.cond
  %173 = load i8*, i8** %ptr.addr, align 8, !dbg !6022
  %arrayidx249 = getelementptr inbounds i8, i8* %173, i64 1, !dbg !6022
  %174 = load i8, i8* %arrayidx249, align 1, !dbg !6022
  %conv250 = sext i8 %174 to i32, !dbg !6022
  %cmp251 = icmp eq i32 %conv250, 0, !dbg !6022
  br i1 %cmp251, label %cond.true253, label %cond.false258, !dbg !6022

cond.true253:                                     ; preds = %while.body
  %175 = load i8*, i8** %ptr.addr, align 8, !dbg !6024
  %176 = load i8, i8* %175, align 1, !dbg !6024
  %idxprom254 = zext i8 %176 to i64, !dbg !6024
  %177 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6024
  %178 = bitcast %struct.encoding* %177 to %struct.normal_encoding*, !dbg !6024
  %type255 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %178, i32 0, i32 1, !dbg !6024
  %arrayidx256 = getelementptr inbounds [256 x i8], [256 x i8]* %type255, i64 0, i64 %idxprom254, !dbg !6024
  %179 = load i8, i8* %arrayidx256, align 1, !dbg !6024
  %conv257 = zext i8 %179 to i32, !dbg !6024
  br label %cond.end262, !dbg !6024

cond.false258:                                    ; preds = %while.body
  %180 = load i8*, i8** %ptr.addr, align 8, !dbg !6026
  %arrayidx259 = getelementptr inbounds i8, i8* %180, i64 1, !dbg !6026
  %181 = load i8, i8* %arrayidx259, align 1, !dbg !6026
  %182 = load i8*, i8** %ptr.addr, align 8, !dbg !6026
  %arrayidx260 = getelementptr inbounds i8, i8* %182, i64 0, !dbg !6026
  %183 = load i8, i8* %arrayidx260, align 1, !dbg !6026
  %call261 = call i32 @unicode_byte_type(i8 signext %181, i8 signext %183), !dbg !6026
  br label %cond.end262, !dbg !6026

cond.end262:                                      ; preds = %cond.false258, %cond.true253
  %cond263 = phi i32 [ %conv257, %cond.true253 ], [ %call261, %cond.false258 ], !dbg !6028
  switch i32 %cond263, label %sw.default329 [
    i32 29, label %sw.bb264
    i32 22, label %sw.bb284
    i32 24, label %sw.bb284
    i32 25, label %sw.bb284
    i32 26, label %sw.bb284
    i32 27, label %sw.bb284
    i32 5, label %sw.bb286
    i32 6, label %sw.bb294
    i32 7, label %sw.bb302
    i32 11, label %sw.bb310
    i32 32, label %sw.bb310
    i32 35, label %sw.bb310
    i32 36, label %sw.bb310
    i32 20, label %sw.bb310
    i32 30, label %sw.bb310
    i32 21, label %sw.bb310
    i32 9, label %sw.bb310
    i32 10, label %sw.bb310
    i32 34, label %sw.bb311
    i32 33, label %sw.bb317
    i32 15, label %sw.bb323
  ], !dbg !6030

sw.bb264:                                         ; preds = %cond.end262
  %184 = load i8*, i8** %ptr.addr, align 8, !dbg !6031
  %arrayidx265 = getelementptr inbounds i8, i8* %184, i64 1, !dbg !6031
  %185 = load i8, i8* %arrayidx265, align 1, !dbg !6031
  %idxprom266 = zext i8 %185 to i64, !dbg !6031
  %arrayidx267 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom266, !dbg !6031
  %186 = load i8, i8* %arrayidx267, align 1, !dbg !6031
  %conv268 = zext i8 %186 to i32, !dbg !6031
  %shl269 = shl i32 %conv268, 3, !dbg !6031
  %187 = load i8*, i8** %ptr.addr, align 8, !dbg !6031
  %arrayidx270 = getelementptr inbounds i8, i8* %187, i64 0, !dbg !6031
  %188 = load i8, i8* %arrayidx270, align 1, !dbg !6031
  %conv271 = zext i8 %188 to i32, !dbg !6031
  %shr272 = ashr i32 %conv271, 5, !dbg !6031
  %add273 = add nsw i32 %shl269, %shr272, !dbg !6031
  %idxprom274 = sext i32 %add273 to i64, !dbg !6031
  %arrayidx275 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom274, !dbg !6031
  %189 = load i32, i32* %arrayidx275, align 4, !dbg !6031
  %190 = load i8*, i8** %ptr.addr, align 8, !dbg !6031
  %arrayidx276 = getelementptr inbounds i8, i8* %190, i64 0, !dbg !6031
  %191 = load i8, i8* %arrayidx276, align 1, !dbg !6031
  %conv277 = zext i8 %191 to i32, !dbg !6031
  %and278 = and i32 %conv277, 31, !dbg !6031
  %shl279 = shl i32 1, %and278, !dbg !6031
  %and280 = and i32 %189, %shl279, !dbg !6031
  %tobool281 = icmp ne i32 %and280, 0, !dbg !6031
  br i1 %tobool281, label %if.end283, label %if.then282, !dbg !6034

if.then282:                                       ; preds = %sw.bb264
  %192 = load i8*, i8** %ptr.addr, align 8, !dbg !6035
  %193 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6035
  store i8* %192, i8** %193, align 8, !dbg !6035
  store i32 0, i32* %retval, align 4, !dbg !6035
  br label %return, !dbg !6035

if.end283:                                        ; preds = %sw.bb264
  br label %sw.bb284, !dbg !6038

sw.bb284:                                         ; preds = %cond.end262, %cond.end262, %cond.end262, %cond.end262, %cond.end262, %if.end283
  %194 = load i8*, i8** %ptr.addr, align 8, !dbg !6040
  %add.ptr285 = getelementptr inbounds i8, i8* %194, i64 2, !dbg !6040
  store i8* %add.ptr285, i8** %ptr.addr, align 8, !dbg !6040
  br label %sw.epilog330, !dbg !6040

sw.bb286:                                         ; preds = %cond.end262
  %195 = load i8*, i8** %end.addr, align 8, !dbg !6042
  %196 = load i8*, i8** %ptr.addr, align 8, !dbg !6042
  %sub.ptr.lhs.cast287 = ptrtoint i8* %195 to i64, !dbg !6042
  %sub.ptr.rhs.cast288 = ptrtoint i8* %196 to i64, !dbg !6042
  %sub.ptr.sub289 = sub i64 %sub.ptr.lhs.cast287, %sub.ptr.rhs.cast288, !dbg !6042
  %cmp290 = icmp slt i64 %sub.ptr.sub289, 2, !dbg !6042
  br i1 %cmp290, label %if.then292, label %if.end293, !dbg !6042

if.then292:                                       ; preds = %sw.bb286
  store i32 -2, i32* %retval, align 4, !dbg !6045
  br label %return, !dbg !6045

if.end293:                                        ; preds = %sw.bb286
  %197 = load i8*, i8** %ptr.addr, align 8, !dbg !6047
  %198 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6047
  store i8* %197, i8** %198, align 8, !dbg !6047
  store i32 0, i32* %retval, align 4, !dbg !6047
  br label %return, !dbg !6047

sw.bb294:                                         ; preds = %cond.end262
  %199 = load i8*, i8** %end.addr, align 8, !dbg !6051
  %200 = load i8*, i8** %ptr.addr, align 8, !dbg !6051
  %sub.ptr.lhs.cast295 = ptrtoint i8* %199 to i64, !dbg !6051
  %sub.ptr.rhs.cast296 = ptrtoint i8* %200 to i64, !dbg !6051
  %sub.ptr.sub297 = sub i64 %sub.ptr.lhs.cast295, %sub.ptr.rhs.cast296, !dbg !6051
  %cmp298 = icmp slt i64 %sub.ptr.sub297, 3, !dbg !6051
  br i1 %cmp298, label %if.then300, label %if.end301, !dbg !6051

if.then300:                                       ; preds = %sw.bb294
  store i32 -2, i32* %retval, align 4, !dbg !6054
  br label %return, !dbg !6054

if.end301:                                        ; preds = %sw.bb294
  %201 = load i8*, i8** %ptr.addr, align 8, !dbg !6056
  %202 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6056
  store i8* %201, i8** %202, align 8, !dbg !6056
  store i32 0, i32* %retval, align 4, !dbg !6056
  br label %return, !dbg !6056

sw.bb302:                                         ; preds = %cond.end262
  %203 = load i8*, i8** %end.addr, align 8, !dbg !6060
  %204 = load i8*, i8** %ptr.addr, align 8, !dbg !6060
  %sub.ptr.lhs.cast303 = ptrtoint i8* %203 to i64, !dbg !6060
  %sub.ptr.rhs.cast304 = ptrtoint i8* %204 to i64, !dbg !6060
  %sub.ptr.sub305 = sub i64 %sub.ptr.lhs.cast303, %sub.ptr.rhs.cast304, !dbg !6060
  %cmp306 = icmp slt i64 %sub.ptr.sub305, 4, !dbg !6060
  br i1 %cmp306, label %if.then308, label %if.end309, !dbg !6060

if.then308:                                       ; preds = %sw.bb302
  store i32 -2, i32* %retval, align 4, !dbg !6063
  br label %return, !dbg !6063

if.end309:                                        ; preds = %sw.bb302
  %205 = load i8*, i8** %ptr.addr, align 8, !dbg !6065
  %206 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6065
  store i8* %205, i8** %206, align 8, !dbg !6065
  store i32 0, i32* %retval, align 4, !dbg !6065
  br label %return, !dbg !6065

sw.bb310:                                         ; preds = %cond.end262, %cond.end262, %cond.end262, %cond.end262, %cond.end262, %cond.end262, %cond.end262, %cond.end262, %cond.end262
  %207 = load i8*, i8** %ptr.addr, align 8, !dbg !6069
  %208 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6070
  store i8* %207, i8** %208, align 8, !dbg !6071
  %209 = load i32, i32* %tok, align 4, !dbg !6072
  store i32 %209, i32* %retval, align 4, !dbg !6073
  br label %return, !dbg !6073

sw.bb311:                                         ; preds = %cond.end262
  %210 = load i32, i32* %tok, align 4, !dbg !6074
  %cmp312 = icmp eq i32 %210, 19, !dbg !6076
  br i1 %cmp312, label %if.then314, label %if.end315, !dbg !6077

if.then314:                                       ; preds = %sw.bb311
  %211 = load i8*, i8** %ptr.addr, align 8, !dbg !6078
  %212 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6080
  store i8* %211, i8** %212, align 8, !dbg !6081
  store i32 0, i32* %retval, align 4, !dbg !6082
  br label %return, !dbg !6082

if.end315:                                        ; preds = %sw.bb311
  %213 = load i8*, i8** %ptr.addr, align 8, !dbg !6083
  %add.ptr316 = getelementptr inbounds i8, i8* %213, i64 2, !dbg !6084
  %214 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6085
  store i8* %add.ptr316, i8** %214, align 8, !dbg !6086
  store i32 32, i32* %retval, align 4, !dbg !6087
  br label %return, !dbg !6087

sw.bb317:                                         ; preds = %cond.end262
  %215 = load i32, i32* %tok, align 4, !dbg !6088
  %cmp318 = icmp eq i32 %215, 19, !dbg !6090
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !6091

if.then320:                                       ; preds = %sw.bb317
  %216 = load i8*, i8** %ptr.addr, align 8, !dbg !6092
  %217 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6094
  store i8* %216, i8** %217, align 8, !dbg !6095
  store i32 0, i32* %retval, align 4, !dbg !6096
  br label %return, !dbg !6096

if.end321:                                        ; preds = %sw.bb317
  %218 = load i8*, i8** %ptr.addr, align 8, !dbg !6097
  %add.ptr322 = getelementptr inbounds i8, i8* %218, i64 2, !dbg !6098
  %219 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6099
  store i8* %add.ptr322, i8** %219, align 8, !dbg !6100
  store i32 31, i32* %retval, align 4, !dbg !6101
  br label %return, !dbg !6101

sw.bb323:                                         ; preds = %cond.end262
  %220 = load i32, i32* %tok, align 4, !dbg !6102
  %cmp324 = icmp eq i32 %220, 19, !dbg !6104
  br i1 %cmp324, label %if.then326, label %if.end327, !dbg !6105

if.then326:                                       ; preds = %sw.bb323
  %221 = load i8*, i8** %ptr.addr, align 8, !dbg !6106
  %222 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6108
  store i8* %221, i8** %222, align 8, !dbg !6109
  store i32 0, i32* %retval, align 4, !dbg !6110
  br label %return, !dbg !6110

if.end327:                                        ; preds = %sw.bb323
  %223 = load i8*, i8** %ptr.addr, align 8, !dbg !6111
  %add.ptr328 = getelementptr inbounds i8, i8* %223, i64 2, !dbg !6112
  %224 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6113
  store i8* %add.ptr328, i8** %224, align 8, !dbg !6114
  store i32 30, i32* %retval, align 4, !dbg !6115
  br label %return, !dbg !6115

sw.default329:                                    ; preds = %cond.end262
  %225 = load i8*, i8** %ptr.addr, align 8, !dbg !6116
  %226 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6117
  store i8* %225, i8** %226, align 8, !dbg !6118
  store i32 0, i32* %retval, align 4, !dbg !6119
  br label %return, !dbg !6119

sw.epilog330:                                     ; preds = %sw.bb284
  br label %while.cond, !dbg !6120

while.end:                                        ; preds = %while.cond
  %227 = load i32, i32* %tok, align 4, !dbg !6122
  %sub = sub nsw i32 0, %227, !dbg !6123
  store i32 %sub, i32* %retval, align 4, !dbg !6124
  br label %return, !dbg !6124

return:                                           ; preds = %while.end, %sw.default329, %if.end327, %if.then326, %if.end321, %if.then320, %if.end315, %if.then314, %sw.bb310, %if.end309, %if.then308, %if.end301, %if.then300, %if.end293, %if.then292, %if.then282, %sw.default242, %if.end199, %if.then198, %if.end191, %if.then190, %if.end183, %if.then182, %sw.bb173, %sw.bb171, %sw.bb169, %sw.epilog168, %sw.bb167, %sw.bb165, %sw.bb163, %sw.bb161, %if.then144, %sw.bb135, %if.end134, %if.then131, %if.then118, %if.then102, %sw.bb93, %sw.bb91, %sw.bb88, %for.end, %sw.default, %if.then54, %sw.epilog, %sw.bb48, %sw.bb45, %sw.bb42, %if.then25, %sw.bb15, %sw.bb, %if.then4, %if.then
  %228 = load i32, i32* %retval, align 4, !dbg !6125
  ret i32 %228, !dbg !6125
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_contentTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !308 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %n = alloca i64, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6126, metadata !444), !dbg !6127
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6128, metadata !444), !dbg !6129
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6130, metadata !444), !dbg !6131
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !6132, metadata !444), !dbg !6133
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6134
  %1 = load i8*, i8** %end.addr, align 8, !dbg !6136
  %cmp = icmp uge i8* %0, %1, !dbg !6137
  br i1 %cmp, label %if.then, label %if.end, !dbg !6138

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !6139
  br label %return, !dbg !6139

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n, metadata !6140, metadata !444), !dbg !6143
  %2 = load i8*, i8** %end.addr, align 8, !dbg !6144
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !6145
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !6146
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !6146
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6146
  store i64 %sub.ptr.sub, i64* %n, align 8, !dbg !6143
  %4 = load i64, i64* %n, align 8, !dbg !6147
  %and = and i64 %4, 1, !dbg !6149
  %tobool = icmp ne i64 %and, 0, !dbg !6149
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !6150

if.then1:                                         ; preds = %if.end
  %5 = load i64, i64* %n, align 8, !dbg !6151
  %and2 = and i64 %5, -2, !dbg !6151
  store i64 %and2, i64* %n, align 8, !dbg !6151
  %6 = load i64, i64* %n, align 8, !dbg !6153
  %cmp3 = icmp eq i64 %6, 0, !dbg !6155
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6156

if.then4:                                         ; preds = %if.then1
  store i32 -1, i32* %retval, align 4, !dbg !6157
  br label %return, !dbg !6157

if.end5:                                          ; preds = %if.then1
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !6158
  %8 = load i64, i64* %n, align 8, !dbg !6159
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !6160
  store i8* %add.ptr, i8** %end.addr, align 8, !dbg !6161
  br label %if.end6, !dbg !6162

if.end6:                                          ; preds = %if.end5, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !6163
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 1, !dbg !6163
  %10 = load i8, i8* %arrayidx, align 1, !dbg !6163
  %conv = sext i8 %10 to i32, !dbg !6163
  %cmp7 = icmp eq i32 %conv, 0, !dbg !6163
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !6163

cond.true:                                        ; preds = %if.end6
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !6164
  %12 = load i8, i8* %11, align 1, !dbg !6164
  %idxprom = zext i8 %12 to i64, !dbg !6164
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6164
  %14 = bitcast %struct.encoding* %13 to %struct.normal_encoding*, !dbg !6164
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %14, i32 0, i32 1, !dbg !6164
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6164
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !6164
  %conv10 = zext i8 %15 to i32, !dbg !6164
  br label %cond.end, !dbg !6164

cond.false:                                       ; preds = %if.end6
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !6166
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !6166
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !6166
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !6166
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !6166
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !6166
  %call = call i32 @unicode_byte_type(i8 signext %17, i8 signext %19), !dbg !6166
  br label %cond.end, !dbg !6166

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv10, %cond.true ], [ %call, %cond.false ], !dbg !6168
  switch i32 %cond, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb15
    i32 9, label %sw.bb18
    i32 10, label %sw.bb47
    i32 4, label %sw.bb49
    i32 5, label %sw.bb88
    i32 6, label %sw.bb97
    i32 7, label %sw.bb106
    i32 0, label %sw.bb115
    i32 1, label %sw.bb115
    i32 8, label %sw.bb115
  ], !dbg !6170

sw.bb:                                            ; preds = %cond.end
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6171
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !6173
  %add.ptr13 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !6174
  %22 = load i8*, i8** %end.addr, align 8, !dbg !6175
  %23 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6176
  %call14 = call i32 @little2_scanLt(%struct.encoding* %20, i8* %add.ptr13, i8* %22, i8** %23), !dbg !6177
  store i32 %call14, i32* %retval, align 4, !dbg !6178
  br label %return, !dbg !6178

sw.bb15:                                          ; preds = %cond.end
  %24 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6179
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !6180
  %add.ptr16 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !6181
  %26 = load i8*, i8** %end.addr, align 8, !dbg !6182
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6183
  %call17 = call i32 @little2_scanRef(%struct.encoding* %24, i8* %add.ptr16, i8* %26, i8** %27), !dbg !6184
  store i32 %call17, i32* %retval, align 4, !dbg !6185
  br label %return, !dbg !6185

sw.bb18:                                          ; preds = %cond.end
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !6186
  %add.ptr19 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !6186
  store i8* %add.ptr19, i8** %ptr.addr, align 8, !dbg !6186
  %29 = load i8*, i8** %end.addr, align 8, !dbg !6187
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !6187
  %sub.ptr.lhs.cast20 = ptrtoint i8* %29 to i64, !dbg !6187
  %sub.ptr.rhs.cast21 = ptrtoint i8* %30 to i64, !dbg !6187
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !6187
  %cmp23 = icmp sge i64 %sub.ptr.sub22, 2, !dbg !6187
  br i1 %cmp23, label %if.end26, label %if.then25, !dbg !6189

if.then25:                                        ; preds = %sw.bb18
  store i32 -3, i32* %retval, align 4, !dbg !6190
  br label %return, !dbg !6190

if.end26:                                         ; preds = %sw.bb18
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !6191
  %arrayidx27 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !6191
  %32 = load i8, i8* %arrayidx27, align 1, !dbg !6191
  %conv28 = sext i8 %32 to i32, !dbg !6191
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !6191
  br i1 %cmp29, label %cond.true31, label %cond.false36, !dbg !6191

cond.true31:                                      ; preds = %if.end26
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !6193
  %34 = load i8, i8* %33, align 1, !dbg !6193
  %idxprom32 = zext i8 %34 to i64, !dbg !6193
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6193
  %36 = bitcast %struct.encoding* %35 to %struct.normal_encoding*, !dbg !6193
  %type33 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %36, i32 0, i32 1, !dbg !6193
  %arrayidx34 = getelementptr inbounds [256 x i8], [256 x i8]* %type33, i64 0, i64 %idxprom32, !dbg !6193
  %37 = load i8, i8* %arrayidx34, align 1, !dbg !6193
  %conv35 = zext i8 %37 to i32, !dbg !6193
  br label %cond.end40, !dbg !6193

cond.false36:                                     ; preds = %if.end26
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !6195
  %arrayidx37 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !6195
  %39 = load i8, i8* %arrayidx37, align 1, !dbg !6195
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !6195
  %arrayidx38 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !6195
  %41 = load i8, i8* %arrayidx38, align 1, !dbg !6195
  %call39 = call i32 @unicode_byte_type(i8 signext %39, i8 signext %41), !dbg !6195
  br label %cond.end40, !dbg !6195

cond.end40:                                       ; preds = %cond.false36, %cond.true31
  %cond41 = phi i32 [ %conv35, %cond.true31 ], [ %call39, %cond.false36 ], !dbg !6197
  %cmp42 = icmp eq i32 %cond41, 10, !dbg !6199
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !6197

if.then44:                                        ; preds = %cond.end40
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !6200
  %add.ptr45 = getelementptr inbounds i8, i8* %42, i64 2, !dbg !6200
  store i8* %add.ptr45, i8** %ptr.addr, align 8, !dbg !6200
  br label %if.end46, !dbg !6201

if.end46:                                         ; preds = %if.then44, %cond.end40
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !6202
  %44 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6203
  store i8* %43, i8** %44, align 8, !dbg !6204
  store i32 7, i32* %retval, align 4, !dbg !6205
  br label %return, !dbg !6205

sw.bb47:                                          ; preds = %cond.end
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !6206
  %add.ptr48 = getelementptr inbounds i8, i8* %45, i64 2, !dbg !6207
  %46 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6208
  store i8* %add.ptr48, i8** %46, align 8, !dbg !6209
  store i32 7, i32* %retval, align 4, !dbg !6210
  br label %return, !dbg !6210

sw.bb49:                                          ; preds = %cond.end
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !6211
  %add.ptr50 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !6211
  store i8* %add.ptr50, i8** %ptr.addr, align 8, !dbg !6211
  %48 = load i8*, i8** %end.addr, align 8, !dbg !6212
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !6212
  %sub.ptr.lhs.cast51 = ptrtoint i8* %48 to i64, !dbg !6212
  %sub.ptr.rhs.cast52 = ptrtoint i8* %49 to i64, !dbg !6212
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52, !dbg !6212
  %cmp54 = icmp sge i64 %sub.ptr.sub53, 2, !dbg !6212
  br i1 %cmp54, label %if.end57, label %if.then56, !dbg !6214

if.then56:                                        ; preds = %sw.bb49
  store i32 -5, i32* %retval, align 4, !dbg !6215
  br label %return, !dbg !6215

if.end57:                                         ; preds = %sw.bb49
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !6216
  %arrayidx58 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !6216
  %51 = load i8, i8* %arrayidx58, align 1, !dbg !6216
  %conv59 = sext i8 %51 to i32, !dbg !6216
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !6216
  br i1 %cmp60, label %land.lhs.true, label %if.then66, !dbg !6216

land.lhs.true:                                    ; preds = %if.end57
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !6218
  %arrayidx62 = getelementptr inbounds i8, i8* %52, i64 0, !dbg !6218
  %53 = load i8, i8* %arrayidx62, align 1, !dbg !6218
  %conv63 = sext i8 %53 to i32, !dbg !6218
  %cmp64 = icmp eq i32 %conv63, 93, !dbg !6218
  br i1 %cmp64, label %if.end67, label %if.then66, !dbg !6220

if.then66:                                        ; preds = %land.lhs.true, %if.end57
  br label %sw.epilog, !dbg !6221

if.end67:                                         ; preds = %land.lhs.true
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !6222
  %add.ptr68 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !6222
  store i8* %add.ptr68, i8** %ptr.addr, align 8, !dbg !6222
  %55 = load i8*, i8** %end.addr, align 8, !dbg !6223
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !6223
  %sub.ptr.lhs.cast69 = ptrtoint i8* %55 to i64, !dbg !6223
  %sub.ptr.rhs.cast70 = ptrtoint i8* %56 to i64, !dbg !6223
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !6223
  %cmp72 = icmp sge i64 %sub.ptr.sub71, 2, !dbg !6223
  br i1 %cmp72, label %if.end75, label %if.then74, !dbg !6225

if.then74:                                        ; preds = %if.end67
  store i32 -5, i32* %retval, align 4, !dbg !6226
  br label %return, !dbg !6226

if.end75:                                         ; preds = %if.end67
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !6227
  %arrayidx76 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !6227
  %58 = load i8, i8* %arrayidx76, align 1, !dbg !6227
  %conv77 = sext i8 %58 to i32, !dbg !6227
  %cmp78 = icmp eq i32 %conv77, 0, !dbg !6227
  br i1 %cmp78, label %land.lhs.true80, label %if.then85, !dbg !6227

land.lhs.true80:                                  ; preds = %if.end75
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !6229
  %arrayidx81 = getelementptr inbounds i8, i8* %59, i64 0, !dbg !6229
  %60 = load i8, i8* %arrayidx81, align 1, !dbg !6229
  %conv82 = sext i8 %60 to i32, !dbg !6229
  %cmp83 = icmp eq i32 %conv82, 62, !dbg !6229
  br i1 %cmp83, label %if.end87, label %if.then85, !dbg !6231

if.then85:                                        ; preds = %land.lhs.true80, %if.end75
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !6232
  %add.ptr86 = getelementptr inbounds i8, i8* %61, i64 -2, !dbg !6232
  store i8* %add.ptr86, i8** %ptr.addr, align 8, !dbg !6232
  br label %sw.epilog, !dbg !6234

if.end87:                                         ; preds = %land.lhs.true80
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !6235
  %63 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6236
  store i8* %62, i8** %63, align 8, !dbg !6237
  store i32 0, i32* %retval, align 4, !dbg !6238
  br label %return, !dbg !6238

sw.bb88:                                          ; preds = %cond.end
  %64 = load i8*, i8** %end.addr, align 8, !dbg !6239
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !6239
  %sub.ptr.lhs.cast89 = ptrtoint i8* %64 to i64, !dbg !6239
  %sub.ptr.rhs.cast90 = ptrtoint i8* %65 to i64, !dbg !6239
  %sub.ptr.sub91 = sub i64 %sub.ptr.lhs.cast89, %sub.ptr.rhs.cast90, !dbg !6239
  %cmp92 = icmp slt i64 %sub.ptr.sub91, 2, !dbg !6239
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !6241

if.then94:                                        ; preds = %sw.bb88
  store i32 -2, i32* %retval, align 4, !dbg !6242
  br label %return, !dbg !6242

if.end95:                                         ; preds = %sw.bb88
  %66 = load i8*, i8** %ptr.addr, align 8, !dbg !6244
  %add.ptr96 = getelementptr inbounds i8, i8* %66, i64 2, !dbg !6244
  store i8* %add.ptr96, i8** %ptr.addr, align 8, !dbg !6244
  br label %sw.epilog, !dbg !6244

sw.bb97:                                          ; preds = %cond.end
  %67 = load i8*, i8** %end.addr, align 8, !dbg !6246
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !6246
  %sub.ptr.lhs.cast98 = ptrtoint i8* %67 to i64, !dbg !6246
  %sub.ptr.rhs.cast99 = ptrtoint i8* %68 to i64, !dbg !6246
  %sub.ptr.sub100 = sub i64 %sub.ptr.lhs.cast98, %sub.ptr.rhs.cast99, !dbg !6246
  %cmp101 = icmp slt i64 %sub.ptr.sub100, 3, !dbg !6246
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !6246

if.then103:                                       ; preds = %sw.bb97
  store i32 -2, i32* %retval, align 4, !dbg !6249
  br label %return, !dbg !6249

if.end104:                                        ; preds = %sw.bb97
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !6251
  %add.ptr105 = getelementptr inbounds i8, i8* %69, i64 3, !dbg !6251
  store i8* %add.ptr105, i8** %ptr.addr, align 8, !dbg !6251
  br label %sw.epilog, !dbg !6251

sw.bb106:                                         ; preds = %cond.end
  %70 = load i8*, i8** %end.addr, align 8, !dbg !6253
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !6253
  %sub.ptr.lhs.cast107 = ptrtoint i8* %70 to i64, !dbg !6253
  %sub.ptr.rhs.cast108 = ptrtoint i8* %71 to i64, !dbg !6253
  %sub.ptr.sub109 = sub i64 %sub.ptr.lhs.cast107, %sub.ptr.rhs.cast108, !dbg !6253
  %cmp110 = icmp slt i64 %sub.ptr.sub109, 4, !dbg !6253
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !6253

if.then112:                                       ; preds = %sw.bb106
  store i32 -2, i32* %retval, align 4, !dbg !6256
  br label %return, !dbg !6256

if.end113:                                        ; preds = %sw.bb106
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !6258
  %add.ptr114 = getelementptr inbounds i8, i8* %72, i64 4, !dbg !6258
  store i8* %add.ptr114, i8** %ptr.addr, align 8, !dbg !6258
  br label %sw.epilog, !dbg !6258

sw.bb115:                                         ; preds = %cond.end, %cond.end, %cond.end
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !6260
  %74 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6260
  store i8* %73, i8** %74, align 8, !dbg !6260
  store i32 0, i32* %retval, align 4, !dbg !6260
  br label %return, !dbg !6260

sw.default:                                       ; preds = %cond.end
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !6262
  %add.ptr116 = getelementptr inbounds i8, i8* %75, i64 2, !dbg !6262
  store i8* %add.ptr116, i8** %ptr.addr, align 8, !dbg !6262
  br label %sw.epilog, !dbg !6263

sw.epilog:                                        ; preds = %sw.default, %if.end113, %if.end104, %if.end95, %if.then85, %if.then66
  br label %while.cond, !dbg !6264

while.cond:                                       ; preds = %sw.epilog211, %sw.epilog
  %76 = load i8*, i8** %end.addr, align 8, !dbg !6265
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !6265
  %sub.ptr.lhs.cast117 = ptrtoint i8* %76 to i64, !dbg !6265
  %sub.ptr.rhs.cast118 = ptrtoint i8* %77 to i64, !dbg !6265
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !6265
  %cmp120 = icmp sge i64 %sub.ptr.sub119, 2, !dbg !6265
  br i1 %cmp120, label %while.body, label %while.end, !dbg !6266

while.body:                                       ; preds = %while.cond
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !6267
  %arrayidx122 = getelementptr inbounds i8, i8* %78, i64 1, !dbg !6267
  %79 = load i8, i8* %arrayidx122, align 1, !dbg !6267
  %conv123 = sext i8 %79 to i32, !dbg !6267
  %cmp124 = icmp eq i32 %conv123, 0, !dbg !6267
  br i1 %cmp124, label %cond.true126, label %cond.false131, !dbg !6267

cond.true126:                                     ; preds = %while.body
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !6269
  %81 = load i8, i8* %80, align 1, !dbg !6269
  %idxprom127 = zext i8 %81 to i64, !dbg !6269
  %82 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6269
  %83 = bitcast %struct.encoding* %82 to %struct.normal_encoding*, !dbg !6269
  %type128 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %83, i32 0, i32 1, !dbg !6269
  %arrayidx129 = getelementptr inbounds [256 x i8], [256 x i8]* %type128, i64 0, i64 %idxprom127, !dbg !6269
  %84 = load i8, i8* %arrayidx129, align 1, !dbg !6269
  %conv130 = zext i8 %84 to i32, !dbg !6269
  br label %cond.end135, !dbg !6269

cond.false131:                                    ; preds = %while.body
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !6271
  %arrayidx132 = getelementptr inbounds i8, i8* %85, i64 1, !dbg !6271
  %86 = load i8, i8* %arrayidx132, align 1, !dbg !6271
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !6271
  %arrayidx133 = getelementptr inbounds i8, i8* %87, i64 0, !dbg !6271
  %88 = load i8, i8* %arrayidx133, align 1, !dbg !6271
  %call134 = call i32 @unicode_byte_type(i8 signext %86, i8 signext %88), !dbg !6271
  br label %cond.end135, !dbg !6271

cond.end135:                                      ; preds = %cond.false131, %cond.true126
  %cond136 = phi i32 [ %conv130, %cond.true126 ], [ %call134, %cond.false131 ], !dbg !6273
  switch i32 %cond136, label %sw.default209 [
    i32 5, label %sw.bb137
    i32 6, label %sw.bb146
    i32 7, label %sw.bb155
    i32 4, label %sw.bb164
    i32 3, label %sw.bb208
    i32 2, label %sw.bb208
    i32 0, label %sw.bb208
    i32 1, label %sw.bb208
    i32 8, label %sw.bb208
    i32 9, label %sw.bb208
    i32 10, label %sw.bb208
  ], !dbg !6275

sw.bb137:                                         ; preds = %cond.end135
  %89 = load i8*, i8** %end.addr, align 8, !dbg !6276
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !6276
  %sub.ptr.lhs.cast138 = ptrtoint i8* %89 to i64, !dbg !6276
  %sub.ptr.rhs.cast139 = ptrtoint i8* %90 to i64, !dbg !6276
  %sub.ptr.sub140 = sub i64 %sub.ptr.lhs.cast138, %sub.ptr.rhs.cast139, !dbg !6276
  %cmp141 = icmp slt i64 %sub.ptr.sub140, 2, !dbg !6276
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !6279

if.then143:                                       ; preds = %sw.bb137
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !6280
  %92 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6280
  store i8* %91, i8** %92, align 8, !dbg !6280
  store i32 6, i32* %retval, align 4, !dbg !6280
  br label %return, !dbg !6280

if.end144:                                        ; preds = %sw.bb137
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !6283
  %add.ptr145 = getelementptr inbounds i8, i8* %93, i64 2, !dbg !6283
  store i8* %add.ptr145, i8** %ptr.addr, align 8, !dbg !6283
  br label %sw.epilog211, !dbg !6283

sw.bb146:                                         ; preds = %cond.end135
  %94 = load i8*, i8** %end.addr, align 8, !dbg !6285
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !6285
  %sub.ptr.lhs.cast147 = ptrtoint i8* %94 to i64, !dbg !6285
  %sub.ptr.rhs.cast148 = ptrtoint i8* %95 to i64, !dbg !6285
  %sub.ptr.sub149 = sub i64 %sub.ptr.lhs.cast147, %sub.ptr.rhs.cast148, !dbg !6285
  %cmp150 = icmp slt i64 %sub.ptr.sub149, 3, !dbg !6285
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !6285

if.then152:                                       ; preds = %sw.bb146
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !6288
  %97 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6288
  store i8* %96, i8** %97, align 8, !dbg !6288
  store i32 6, i32* %retval, align 4, !dbg !6288
  br label %return, !dbg !6288

if.end153:                                        ; preds = %sw.bb146
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !6291
  %add.ptr154 = getelementptr inbounds i8, i8* %98, i64 3, !dbg !6291
  store i8* %add.ptr154, i8** %ptr.addr, align 8, !dbg !6291
  br label %sw.epilog211, !dbg !6291

sw.bb155:                                         ; preds = %cond.end135
  %99 = load i8*, i8** %end.addr, align 8, !dbg !6293
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !6293
  %sub.ptr.lhs.cast156 = ptrtoint i8* %99 to i64, !dbg !6293
  %sub.ptr.rhs.cast157 = ptrtoint i8* %100 to i64, !dbg !6293
  %sub.ptr.sub158 = sub i64 %sub.ptr.lhs.cast156, %sub.ptr.rhs.cast157, !dbg !6293
  %cmp159 = icmp slt i64 %sub.ptr.sub158, 4, !dbg !6293
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !6293

if.then161:                                       ; preds = %sw.bb155
  %101 = load i8*, i8** %ptr.addr, align 8, !dbg !6296
  %102 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6296
  store i8* %101, i8** %102, align 8, !dbg !6296
  store i32 6, i32* %retval, align 4, !dbg !6296
  br label %return, !dbg !6296

if.end162:                                        ; preds = %sw.bb155
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !6299
  %add.ptr163 = getelementptr inbounds i8, i8* %103, i64 4, !dbg !6299
  store i8* %add.ptr163, i8** %ptr.addr, align 8, !dbg !6299
  br label %sw.epilog211, !dbg !6299

sw.bb164:                                         ; preds = %cond.end135
  %104 = load i8*, i8** %end.addr, align 8, !dbg !6301
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !6301
  %sub.ptr.lhs.cast165 = ptrtoint i8* %104 to i64, !dbg !6301
  %sub.ptr.rhs.cast166 = ptrtoint i8* %105 to i64, !dbg !6301
  %sub.ptr.sub167 = sub i64 %sub.ptr.lhs.cast165, %sub.ptr.rhs.cast166, !dbg !6301
  %cmp168 = icmp sge i64 %sub.ptr.sub167, 4, !dbg !6301
  br i1 %cmp168, label %if.then170, label %if.end207, !dbg !6303

if.then170:                                       ; preds = %sw.bb164
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !6304
  %add.ptr171 = getelementptr inbounds i8, i8* %106, i64 2, !dbg !6304
  %arrayidx172 = getelementptr inbounds i8, i8* %add.ptr171, i64 1, !dbg !6304
  %107 = load i8, i8* %arrayidx172, align 1, !dbg !6304
  %conv173 = sext i8 %107 to i32, !dbg !6304
  %cmp174 = icmp eq i32 %conv173, 0, !dbg !6304
  br i1 %cmp174, label %land.lhs.true176, label %if.then182, !dbg !6304

land.lhs.true176:                                 ; preds = %if.then170
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !6307
  %add.ptr177 = getelementptr inbounds i8, i8* %108, i64 2, !dbg !6307
  %arrayidx178 = getelementptr inbounds i8, i8* %add.ptr177, i64 0, !dbg !6307
  %109 = load i8, i8* %arrayidx178, align 1, !dbg !6307
  %conv179 = sext i8 %109 to i32, !dbg !6307
  %cmp180 = icmp eq i32 %conv179, 93, !dbg !6307
  br i1 %cmp180, label %if.end184, label %if.then182, !dbg !6309

if.then182:                                       ; preds = %land.lhs.true176, %if.then170
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !6310
  %add.ptr183 = getelementptr inbounds i8, i8* %110, i64 2, !dbg !6310
  store i8* %add.ptr183, i8** %ptr.addr, align 8, !dbg !6310
  br label %sw.epilog211, !dbg !6312

if.end184:                                        ; preds = %land.lhs.true176
  %111 = load i8*, i8** %end.addr, align 8, !dbg !6313
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !6313
  %sub.ptr.lhs.cast185 = ptrtoint i8* %111 to i64, !dbg !6313
  %sub.ptr.rhs.cast186 = ptrtoint i8* %112 to i64, !dbg !6313
  %sub.ptr.sub187 = sub i64 %sub.ptr.lhs.cast185, %sub.ptr.rhs.cast186, !dbg !6313
  %cmp188 = icmp sge i64 %sub.ptr.sub187, 6, !dbg !6313
  br i1 %cmp188, label %if.then190, label %if.end206, !dbg !6315

if.then190:                                       ; preds = %if.end184
  %113 = load i8*, i8** %ptr.addr, align 8, !dbg !6316
  %add.ptr191 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !6316
  %arrayidx192 = getelementptr inbounds i8, i8* %add.ptr191, i64 1, !dbg !6316
  %114 = load i8, i8* %arrayidx192, align 1, !dbg !6316
  %conv193 = sext i8 %114 to i32, !dbg !6316
  %cmp194 = icmp eq i32 %conv193, 0, !dbg !6316
  br i1 %cmp194, label %land.lhs.true196, label %if.then202, !dbg !6316

land.lhs.true196:                                 ; preds = %if.then190
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !6319
  %add.ptr197 = getelementptr inbounds i8, i8* %115, i64 4, !dbg !6319
  %arrayidx198 = getelementptr inbounds i8, i8* %add.ptr197, i64 0, !dbg !6319
  %116 = load i8, i8* %arrayidx198, align 1, !dbg !6319
  %conv199 = sext i8 %116 to i32, !dbg !6319
  %cmp200 = icmp eq i32 %conv199, 62, !dbg !6319
  br i1 %cmp200, label %if.end204, label %if.then202, !dbg !6321

if.then202:                                       ; preds = %land.lhs.true196, %if.then190
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !6322
  %add.ptr203 = getelementptr inbounds i8, i8* %117, i64 2, !dbg !6322
  store i8* %add.ptr203, i8** %ptr.addr, align 8, !dbg !6322
  br label %sw.epilog211, !dbg !6324

if.end204:                                        ; preds = %land.lhs.true196
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !6325
  %add.ptr205 = getelementptr inbounds i8, i8* %118, i64 4, !dbg !6326
  %119 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6327
  store i8* %add.ptr205, i8** %119, align 8, !dbg !6328
  store i32 0, i32* %retval, align 4, !dbg !6329
  br label %return, !dbg !6329

if.end206:                                        ; preds = %if.end184
  br label %if.end207, !dbg !6330

if.end207:                                        ; preds = %if.end206, %sw.bb164
  br label %sw.bb208, !dbg !6331

sw.bb208:                                         ; preds = %cond.end135, %cond.end135, %cond.end135, %cond.end135, %cond.end135, %cond.end135, %cond.end135, %if.end207
  %120 = load i8*, i8** %ptr.addr, align 8, !dbg !6333
  %121 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6334
  store i8* %120, i8** %121, align 8, !dbg !6335
  store i32 6, i32* %retval, align 4, !dbg !6336
  br label %return, !dbg !6336

sw.default209:                                    ; preds = %cond.end135
  %122 = load i8*, i8** %ptr.addr, align 8, !dbg !6337
  %add.ptr210 = getelementptr inbounds i8, i8* %122, i64 2, !dbg !6337
  store i8* %add.ptr210, i8** %ptr.addr, align 8, !dbg !6337
  br label %sw.epilog211, !dbg !6338

sw.epilog211:                                     ; preds = %sw.default209, %if.then202, %if.then182, %if.end162, %if.end153, %if.end144
  br label %while.cond, !dbg !6339

while.end:                                        ; preds = %while.cond
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !6341
  %124 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6342
  store i8* %123, i8** %124, align 8, !dbg !6343
  store i32 6, i32* %retval, align 4, !dbg !6344
  br label %return, !dbg !6344

return:                                           ; preds = %while.end, %sw.bb208, %if.end204, %if.then161, %if.then152, %if.then143, %sw.bb115, %if.then112, %if.then103, %if.then94, %if.end87, %if.then74, %if.then56, %sw.bb47, %if.end46, %if.then25, %sw.bb15, %sw.bb, %if.then4, %if.then
  %125 = load i32, i32* %retval, align 4, !dbg !6345
  ret i32 %125, !dbg !6345
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_cdataSectionTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !316 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %n = alloca i64, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6346, metadata !444), !dbg !6347
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6348, metadata !444), !dbg !6349
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6350, metadata !444), !dbg !6351
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !6352, metadata !444), !dbg !6353
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6354
  %1 = load i8*, i8** %end.addr, align 8, !dbg !6356
  %cmp = icmp uge i8* %0, %1, !dbg !6357
  br i1 %cmp, label %if.then, label %if.end, !dbg !6358

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !6359
  br label %return, !dbg !6359

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n, metadata !6360, metadata !444), !dbg !6363
  %2 = load i8*, i8** %end.addr, align 8, !dbg !6364
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !6365
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !6366
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !6366
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6366
  store i64 %sub.ptr.sub, i64* %n, align 8, !dbg !6363
  %4 = load i64, i64* %n, align 8, !dbg !6367
  %and = and i64 %4, 1, !dbg !6369
  %tobool = icmp ne i64 %and, 0, !dbg !6369
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !6370

if.then1:                                         ; preds = %if.end
  %5 = load i64, i64* %n, align 8, !dbg !6371
  %and2 = and i64 %5, -2, !dbg !6371
  store i64 %and2, i64* %n, align 8, !dbg !6371
  %6 = load i64, i64* %n, align 8, !dbg !6373
  %cmp3 = icmp eq i64 %6, 0, !dbg !6375
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6376

if.then4:                                         ; preds = %if.then1
  store i32 -1, i32* %retval, align 4, !dbg !6377
  br label %return, !dbg !6377

if.end5:                                          ; preds = %if.then1
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !6378
  %8 = load i64, i64* %n, align 8, !dbg !6379
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !6380
  store i8* %add.ptr, i8** %end.addr, align 8, !dbg !6381
  br label %if.end6, !dbg !6382

if.end6:                                          ; preds = %if.end5, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !6383
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 1, !dbg !6383
  %10 = load i8, i8* %arrayidx, align 1, !dbg !6383
  %conv = sext i8 %10 to i32, !dbg !6383
  %cmp7 = icmp eq i32 %conv, 0, !dbg !6383
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !6383

cond.true:                                        ; preds = %if.end6
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !6384
  %12 = load i8, i8* %11, align 1, !dbg !6384
  %idxprom = zext i8 %12 to i64, !dbg !6384
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6384
  %14 = bitcast %struct.encoding* %13 to %struct.normal_encoding*, !dbg !6384
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %14, i32 0, i32 1, !dbg !6384
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6384
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !6384
  %conv10 = zext i8 %15 to i32, !dbg !6384
  br label %cond.end, !dbg !6384

cond.false:                                       ; preds = %if.end6
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !6386
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !6386
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !6386
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !6386
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !6386
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !6386
  %call = call i32 @unicode_byte_type(i8 signext %17, i8 signext %19), !dbg !6386
  br label %cond.end, !dbg !6386

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv10, %cond.true ], [ %call, %cond.false ], !dbg !6388
  switch i32 %cond, label %sw.default [
    i32 4, label %sw.bb
    i32 9, label %sw.bb52
    i32 10, label %sw.bb81
    i32 5, label %sw.bb83
    i32 6, label %sw.bb92
    i32 7, label %sw.bb101
    i32 0, label %sw.bb110
    i32 1, label %sw.bb110
    i32 8, label %sw.bb110
  ], !dbg !6390

sw.bb:                                            ; preds = %cond.end
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !6391
  %add.ptr13 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !6391
  store i8* %add.ptr13, i8** %ptr.addr, align 8, !dbg !6391
  %21 = load i8*, i8** %end.addr, align 8, !dbg !6393
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !6393
  %sub.ptr.lhs.cast14 = ptrtoint i8* %21 to i64, !dbg !6393
  %sub.ptr.rhs.cast15 = ptrtoint i8* %22 to i64, !dbg !6393
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !6393
  %cmp17 = icmp sge i64 %sub.ptr.sub16, 2, !dbg !6393
  br i1 %cmp17, label %if.end20, label %if.then19, !dbg !6396

if.then19:                                        ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !6397
  br label %return, !dbg !6397

if.end20:                                         ; preds = %sw.bb
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !6400
  %arrayidx21 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !6400
  %24 = load i8, i8* %arrayidx21, align 1, !dbg !6400
  %conv22 = sext i8 %24 to i32, !dbg !6400
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !6400
  br i1 %cmp23, label %land.lhs.true, label %if.then29, !dbg !6400

land.lhs.true:                                    ; preds = %if.end20
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !6402
  %arrayidx25 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !6402
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !6402
  %conv26 = sext i8 %26 to i32, !dbg !6402
  %cmp27 = icmp eq i32 %conv26, 93, !dbg !6402
  br i1 %cmp27, label %if.end30, label %if.then29, !dbg !6404

if.then29:                                        ; preds = %land.lhs.true, %if.end20
  br label %sw.epilog, !dbg !6405

if.end30:                                         ; preds = %land.lhs.true
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !6406
  %add.ptr31 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !6406
  store i8* %add.ptr31, i8** %ptr.addr, align 8, !dbg !6406
  %28 = load i8*, i8** %end.addr, align 8, !dbg !6407
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !6407
  %sub.ptr.lhs.cast32 = ptrtoint i8* %28 to i64, !dbg !6407
  %sub.ptr.rhs.cast33 = ptrtoint i8* %29 to i64, !dbg !6407
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !6407
  %cmp35 = icmp sge i64 %sub.ptr.sub34, 2, !dbg !6407
  br i1 %cmp35, label %if.end38, label %if.then37, !dbg !6410

if.then37:                                        ; preds = %if.end30
  store i32 -1, i32* %retval, align 4, !dbg !6411
  br label %return, !dbg !6411

if.end38:                                         ; preds = %if.end30
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !6414
  %arrayidx39 = getelementptr inbounds i8, i8* %30, i64 1, !dbg !6414
  %31 = load i8, i8* %arrayidx39, align 1, !dbg !6414
  %conv40 = sext i8 %31 to i32, !dbg !6414
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !6414
  br i1 %cmp41, label %land.lhs.true43, label %if.then48, !dbg !6414

land.lhs.true43:                                  ; preds = %if.end38
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !6416
  %arrayidx44 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !6416
  %33 = load i8, i8* %arrayidx44, align 1, !dbg !6416
  %conv45 = sext i8 %33 to i32, !dbg !6416
  %cmp46 = icmp eq i32 %conv45, 62, !dbg !6416
  br i1 %cmp46, label %if.end50, label %if.then48, !dbg !6418

if.then48:                                        ; preds = %land.lhs.true43, %if.end38
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !6419
  %add.ptr49 = getelementptr inbounds i8, i8* %34, i64 -2, !dbg !6419
  store i8* %add.ptr49, i8** %ptr.addr, align 8, !dbg !6419
  br label %sw.epilog, !dbg !6421

if.end50:                                         ; preds = %land.lhs.true43
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !6422
  %add.ptr51 = getelementptr inbounds i8, i8* %35, i64 2, !dbg !6423
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6424
  store i8* %add.ptr51, i8** %36, align 8, !dbg !6425
  store i32 40, i32* %retval, align 4, !dbg !6426
  br label %return, !dbg !6426

sw.bb52:                                          ; preds = %cond.end
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !6427
  %add.ptr53 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !6427
  store i8* %add.ptr53, i8** %ptr.addr, align 8, !dbg !6427
  %38 = load i8*, i8** %end.addr, align 8, !dbg !6428
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !6428
  %sub.ptr.lhs.cast54 = ptrtoint i8* %38 to i64, !dbg !6428
  %sub.ptr.rhs.cast55 = ptrtoint i8* %39 to i64, !dbg !6428
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !6428
  %cmp57 = icmp sge i64 %sub.ptr.sub56, 2, !dbg !6428
  br i1 %cmp57, label %if.end60, label %if.then59, !dbg !6431

if.then59:                                        ; preds = %sw.bb52
  store i32 -1, i32* %retval, align 4, !dbg !6432
  br label %return, !dbg !6432

if.end60:                                         ; preds = %sw.bb52
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !6435
  %arrayidx61 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !6435
  %41 = load i8, i8* %arrayidx61, align 1, !dbg !6435
  %conv62 = sext i8 %41 to i32, !dbg !6435
  %cmp63 = icmp eq i32 %conv62, 0, !dbg !6435
  br i1 %cmp63, label %cond.true65, label %cond.false70, !dbg !6435

cond.true65:                                      ; preds = %if.end60
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !6437
  %43 = load i8, i8* %42, align 1, !dbg !6437
  %idxprom66 = zext i8 %43 to i64, !dbg !6437
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6437
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !6437
  %type67 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !6437
  %arrayidx68 = getelementptr inbounds [256 x i8], [256 x i8]* %type67, i64 0, i64 %idxprom66, !dbg !6437
  %46 = load i8, i8* %arrayidx68, align 1, !dbg !6437
  %conv69 = zext i8 %46 to i32, !dbg !6437
  br label %cond.end74, !dbg !6437

cond.false70:                                     ; preds = %if.end60
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !6439
  %arrayidx71 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !6439
  %48 = load i8, i8* %arrayidx71, align 1, !dbg !6439
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !6439
  %arrayidx72 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !6439
  %50 = load i8, i8* %arrayidx72, align 1, !dbg !6439
  %call73 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !6439
  br label %cond.end74, !dbg !6439

cond.end74:                                       ; preds = %cond.false70, %cond.true65
  %cond75 = phi i32 [ %conv69, %cond.true65 ], [ %call73, %cond.false70 ], !dbg !6441
  %cmp76 = icmp eq i32 %cond75, 10, !dbg !6443
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !6441

if.then78:                                        ; preds = %cond.end74
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !6444
  %add.ptr79 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !6444
  store i8* %add.ptr79, i8** %ptr.addr, align 8, !dbg !6444
  br label %if.end80, !dbg !6445

if.end80:                                         ; preds = %if.then78, %cond.end74
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !6446
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6447
  store i8* %52, i8** %53, align 8, !dbg !6448
  store i32 7, i32* %retval, align 4, !dbg !6449
  br label %return, !dbg !6449

sw.bb81:                                          ; preds = %cond.end
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !6450
  %add.ptr82 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !6451
  %55 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6452
  store i8* %add.ptr82, i8** %55, align 8, !dbg !6453
  store i32 7, i32* %retval, align 4, !dbg !6454
  br label %return, !dbg !6454

sw.bb83:                                          ; preds = %cond.end
  %56 = load i8*, i8** %end.addr, align 8, !dbg !6455
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !6455
  %sub.ptr.lhs.cast84 = ptrtoint i8* %56 to i64, !dbg !6455
  %sub.ptr.rhs.cast85 = ptrtoint i8* %57 to i64, !dbg !6455
  %sub.ptr.sub86 = sub i64 %sub.ptr.lhs.cast84, %sub.ptr.rhs.cast85, !dbg !6455
  %cmp87 = icmp slt i64 %sub.ptr.sub86, 2, !dbg !6455
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !6457

if.then89:                                        ; preds = %sw.bb83
  store i32 -2, i32* %retval, align 4, !dbg !6458
  br label %return, !dbg !6458

if.end90:                                         ; preds = %sw.bb83
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !6460
  %add.ptr91 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !6460
  store i8* %add.ptr91, i8** %ptr.addr, align 8, !dbg !6460
  br label %sw.epilog, !dbg !6460

sw.bb92:                                          ; preds = %cond.end
  %59 = load i8*, i8** %end.addr, align 8, !dbg !6462
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !6462
  %sub.ptr.lhs.cast93 = ptrtoint i8* %59 to i64, !dbg !6462
  %sub.ptr.rhs.cast94 = ptrtoint i8* %60 to i64, !dbg !6462
  %sub.ptr.sub95 = sub i64 %sub.ptr.lhs.cast93, %sub.ptr.rhs.cast94, !dbg !6462
  %cmp96 = icmp slt i64 %sub.ptr.sub95, 3, !dbg !6462
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !6462

if.then98:                                        ; preds = %sw.bb92
  store i32 -2, i32* %retval, align 4, !dbg !6465
  br label %return, !dbg !6465

if.end99:                                         ; preds = %sw.bb92
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !6467
  %add.ptr100 = getelementptr inbounds i8, i8* %61, i64 3, !dbg !6467
  store i8* %add.ptr100, i8** %ptr.addr, align 8, !dbg !6467
  br label %sw.epilog, !dbg !6467

sw.bb101:                                         ; preds = %cond.end
  %62 = load i8*, i8** %end.addr, align 8, !dbg !6469
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !6469
  %sub.ptr.lhs.cast102 = ptrtoint i8* %62 to i64, !dbg !6469
  %sub.ptr.rhs.cast103 = ptrtoint i8* %63 to i64, !dbg !6469
  %sub.ptr.sub104 = sub i64 %sub.ptr.lhs.cast102, %sub.ptr.rhs.cast103, !dbg !6469
  %cmp105 = icmp slt i64 %sub.ptr.sub104, 4, !dbg !6469
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !6469

if.then107:                                       ; preds = %sw.bb101
  store i32 -2, i32* %retval, align 4, !dbg !6472
  br label %return, !dbg !6472

if.end108:                                        ; preds = %sw.bb101
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !6474
  %add.ptr109 = getelementptr inbounds i8, i8* %64, i64 4, !dbg !6474
  store i8* %add.ptr109, i8** %ptr.addr, align 8, !dbg !6474
  br label %sw.epilog, !dbg !6474

sw.bb110:                                         ; preds = %cond.end, %cond.end, %cond.end
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !6476
  %66 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6476
  store i8* %65, i8** %66, align 8, !dbg !6476
  store i32 0, i32* %retval, align 4, !dbg !6476
  br label %return, !dbg !6476

sw.default:                                       ; preds = %cond.end
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !6478
  %add.ptr111 = getelementptr inbounds i8, i8* %67, i64 2, !dbg !6478
  store i8* %add.ptr111, i8** %ptr.addr, align 8, !dbg !6478
  br label %sw.epilog, !dbg !6479

sw.epilog:                                        ; preds = %sw.default, %if.end108, %if.end99, %if.end90, %if.then48, %if.then29
  br label %while.cond, !dbg !6480

while.cond:                                       ; preds = %sw.epilog162, %sw.epilog
  %68 = load i8*, i8** %end.addr, align 8, !dbg !6481
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !6481
  %sub.ptr.lhs.cast112 = ptrtoint i8* %68 to i64, !dbg !6481
  %sub.ptr.rhs.cast113 = ptrtoint i8* %69 to i64, !dbg !6481
  %sub.ptr.sub114 = sub i64 %sub.ptr.lhs.cast112, %sub.ptr.rhs.cast113, !dbg !6481
  %cmp115 = icmp sge i64 %sub.ptr.sub114, 2, !dbg !6481
  br i1 %cmp115, label %while.body, label %while.end, !dbg !6482

while.body:                                       ; preds = %while.cond
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !6483
  %arrayidx117 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !6483
  %71 = load i8, i8* %arrayidx117, align 1, !dbg !6483
  %conv118 = sext i8 %71 to i32, !dbg !6483
  %cmp119 = icmp eq i32 %conv118, 0, !dbg !6483
  br i1 %cmp119, label %cond.true121, label %cond.false126, !dbg !6483

cond.true121:                                     ; preds = %while.body
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !6485
  %73 = load i8, i8* %72, align 1, !dbg !6485
  %idxprom122 = zext i8 %73 to i64, !dbg !6485
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6485
  %75 = bitcast %struct.encoding* %74 to %struct.normal_encoding*, !dbg !6485
  %type123 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %75, i32 0, i32 1, !dbg !6485
  %arrayidx124 = getelementptr inbounds [256 x i8], [256 x i8]* %type123, i64 0, i64 %idxprom122, !dbg !6485
  %76 = load i8, i8* %arrayidx124, align 1, !dbg !6485
  %conv125 = zext i8 %76 to i32, !dbg !6485
  br label %cond.end130, !dbg !6485

cond.false126:                                    ; preds = %while.body
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !6487
  %arrayidx127 = getelementptr inbounds i8, i8* %77, i64 1, !dbg !6487
  %78 = load i8, i8* %arrayidx127, align 1, !dbg !6487
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !6487
  %arrayidx128 = getelementptr inbounds i8, i8* %79, i64 0, !dbg !6487
  %80 = load i8, i8* %arrayidx128, align 1, !dbg !6487
  %call129 = call i32 @unicode_byte_type(i8 signext %78, i8 signext %80), !dbg !6487
  br label %cond.end130, !dbg !6487

cond.end130:                                      ; preds = %cond.false126, %cond.true121
  %cond131 = phi i32 [ %conv125, %cond.true121 ], [ %call129, %cond.false126 ], !dbg !6489
  switch i32 %cond131, label %sw.default160 [
    i32 5, label %sw.bb132
    i32 6, label %sw.bb141
    i32 7, label %sw.bb150
    i32 0, label %sw.bb159
    i32 1, label %sw.bb159
    i32 8, label %sw.bb159
    i32 9, label %sw.bb159
    i32 10, label %sw.bb159
    i32 4, label %sw.bb159
  ], !dbg !6491

sw.bb132:                                         ; preds = %cond.end130
  %81 = load i8*, i8** %end.addr, align 8, !dbg !6492
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !6492
  %sub.ptr.lhs.cast133 = ptrtoint i8* %81 to i64, !dbg !6492
  %sub.ptr.rhs.cast134 = ptrtoint i8* %82 to i64, !dbg !6492
  %sub.ptr.sub135 = sub i64 %sub.ptr.lhs.cast133, %sub.ptr.rhs.cast134, !dbg !6492
  %cmp136 = icmp slt i64 %sub.ptr.sub135, 2, !dbg !6492
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !6495

if.then138:                                       ; preds = %sw.bb132
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !6496
  %84 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6496
  store i8* %83, i8** %84, align 8, !dbg !6496
  store i32 6, i32* %retval, align 4, !dbg !6496
  br label %return, !dbg !6496

if.end139:                                        ; preds = %sw.bb132
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !6499
  %add.ptr140 = getelementptr inbounds i8, i8* %85, i64 2, !dbg !6499
  store i8* %add.ptr140, i8** %ptr.addr, align 8, !dbg !6499
  br label %sw.epilog162, !dbg !6499

sw.bb141:                                         ; preds = %cond.end130
  %86 = load i8*, i8** %end.addr, align 8, !dbg !6501
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !6501
  %sub.ptr.lhs.cast142 = ptrtoint i8* %86 to i64, !dbg !6501
  %sub.ptr.rhs.cast143 = ptrtoint i8* %87 to i64, !dbg !6501
  %sub.ptr.sub144 = sub i64 %sub.ptr.lhs.cast142, %sub.ptr.rhs.cast143, !dbg !6501
  %cmp145 = icmp slt i64 %sub.ptr.sub144, 3, !dbg !6501
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !6501

if.then147:                                       ; preds = %sw.bb141
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !6504
  %89 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6504
  store i8* %88, i8** %89, align 8, !dbg !6504
  store i32 6, i32* %retval, align 4, !dbg !6504
  br label %return, !dbg !6504

if.end148:                                        ; preds = %sw.bb141
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !6507
  %add.ptr149 = getelementptr inbounds i8, i8* %90, i64 3, !dbg !6507
  store i8* %add.ptr149, i8** %ptr.addr, align 8, !dbg !6507
  br label %sw.epilog162, !dbg !6507

sw.bb150:                                         ; preds = %cond.end130
  %91 = load i8*, i8** %end.addr, align 8, !dbg !6509
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !6509
  %sub.ptr.lhs.cast151 = ptrtoint i8* %91 to i64, !dbg !6509
  %sub.ptr.rhs.cast152 = ptrtoint i8* %92 to i64, !dbg !6509
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152, !dbg !6509
  %cmp154 = icmp slt i64 %sub.ptr.sub153, 4, !dbg !6509
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !6509

if.then156:                                       ; preds = %sw.bb150
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !6512
  %94 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6512
  store i8* %93, i8** %94, align 8, !dbg !6512
  store i32 6, i32* %retval, align 4, !dbg !6512
  br label %return, !dbg !6512

if.end157:                                        ; preds = %sw.bb150
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !6515
  %add.ptr158 = getelementptr inbounds i8, i8* %95, i64 4, !dbg !6515
  store i8* %add.ptr158, i8** %ptr.addr, align 8, !dbg !6515
  br label %sw.epilog162, !dbg !6515

sw.bb159:                                         ; preds = %cond.end130, %cond.end130, %cond.end130, %cond.end130, %cond.end130, %cond.end130
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !6517
  %97 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6518
  store i8* %96, i8** %97, align 8, !dbg !6519
  store i32 6, i32* %retval, align 4, !dbg !6520
  br label %return, !dbg !6520

sw.default160:                                    ; preds = %cond.end130
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !6521
  %add.ptr161 = getelementptr inbounds i8, i8* %98, i64 2, !dbg !6521
  store i8* %add.ptr161, i8** %ptr.addr, align 8, !dbg !6521
  br label %sw.epilog162, !dbg !6522

sw.epilog162:                                     ; preds = %sw.default160, %if.end157, %if.end148, %if.end139
  br label %while.cond, !dbg !6523

while.end:                                        ; preds = %while.cond
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !6525
  %100 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6526
  store i8* %99, i8** %100, align 8, !dbg !6527
  store i32 6, i32* %retval, align 4, !dbg !6528
  br label %return, !dbg !6528

return:                                           ; preds = %while.end, %sw.bb159, %if.then156, %if.then147, %if.then138, %sw.bb110, %if.then107, %if.then98, %if.then89, %sw.bb81, %if.end80, %if.then59, %if.end50, %if.then37, %if.then19, %if.then4, %if.then
  %101 = load i32, i32* %retval, align 4, !dbg !6529
  ret i32 %101, !dbg !6529
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_attributeValueTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !317 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6530, metadata !444), !dbg !6531
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6532, metadata !444), !dbg !6533
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6534, metadata !444), !dbg !6535
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !6536, metadata !444), !dbg !6537
  call void @llvm.dbg.declare(metadata i8** %start, metadata !6538, metadata !444), !dbg !6539
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6540
  %1 = load i8*, i8** %end.addr, align 8, !dbg !6542
  %cmp = icmp uge i8* %0, %1, !dbg !6543
  br i1 %cmp, label %if.then, label %if.end, !dbg !6544

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !6545
  br label %return, !dbg !6545

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !6546
  store i8* %2, i8** %start, align 8, !dbg !6547
  br label %while.cond, !dbg !6548

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i8*, i8** %end.addr, align 8, !dbg !6549
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !6549
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !6549
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !6549
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6549
  %cmp1 = icmp sge i64 %sub.ptr.sub, 2, !dbg !6549
  br i1 %cmp1, label %while.body, label %while.end, !dbg !6551

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !6552
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6552
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6552
  %conv = sext i8 %6 to i32, !dbg !6552
  %cmp2 = icmp eq i32 %conv, 0, !dbg !6552
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6552

cond.true:                                        ; preds = %while.body
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !6554
  %8 = load i8, i8* %7, align 1, !dbg !6554
  %idxprom = zext i8 %8 to i64, !dbg !6554
  %9 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6554
  %10 = bitcast %struct.encoding* %9 to %struct.normal_encoding*, !dbg !6554
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %10, i32 0, i32 1, !dbg !6554
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6554
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !6554
  %conv5 = zext i8 %11 to i32, !dbg !6554
  br label %cond.end, !dbg !6554

cond.false:                                       ; preds = %while.body
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !6556
  %arrayidx6 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !6556
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !6556
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !6556
  %arrayidx7 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !6556
  %15 = load i8, i8* %arrayidx7, align 1, !dbg !6556
  %call = call i32 @unicode_byte_type(i8 signext %13, i8 signext %15), !dbg !6556
  br label %cond.end, !dbg !6556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !6558
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb8
    i32 7, label %sw.bb10
    i32 3, label %sw.bb12
    i32 2, label %sw.bb19
    i32 10, label %sw.bb20
    i32 9, label %sw.bb26
    i32 21, label %sw.bb59
  ], !dbg !6560

sw.bb:                                            ; preds = %cond.end
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !6561
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 2, !dbg !6561
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !6561
  br label %sw.epilog, !dbg !6561

sw.bb8:                                           ; preds = %cond.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !6563
  %add.ptr9 = getelementptr inbounds i8, i8* %17, i64 3, !dbg !6563
  store i8* %add.ptr9, i8** %ptr.addr, align 8, !dbg !6563
  br label %sw.epilog, !dbg !6563

sw.bb10:                                          ; preds = %cond.end
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !6565
  %add.ptr11 = getelementptr inbounds i8, i8* %18, i64 4, !dbg !6565
  store i8* %add.ptr11, i8** %ptr.addr, align 8, !dbg !6565
  br label %sw.epilog, !dbg !6565

sw.bb12:                                          ; preds = %cond.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !6567
  %20 = load i8*, i8** %start, align 8, !dbg !6569
  %cmp13 = icmp eq i8* %19, %20, !dbg !6570
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !6571

if.then15:                                        ; preds = %sw.bb12
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6572
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !6573
  %add.ptr16 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !6574
  %23 = load i8*, i8** %end.addr, align 8, !dbg !6575
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6576
  %call17 = call i32 @little2_scanRef(%struct.encoding* %21, i8* %add.ptr16, i8* %23, i8** %24), !dbg !6577
  store i32 %call17, i32* %retval, align 4, !dbg !6578
  br label %return, !dbg !6578

if.end18:                                         ; preds = %sw.bb12
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !6579
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6580
  store i8* %25, i8** %26, align 8, !dbg !6581
  store i32 6, i32* %retval, align 4, !dbg !6582
  br label %return, !dbg !6582

sw.bb19:                                          ; preds = %cond.end
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !6583
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6584
  store i8* %27, i8** %28, align 8, !dbg !6585
  store i32 0, i32* %retval, align 4, !dbg !6586
  br label %return, !dbg !6586

sw.bb20:                                          ; preds = %cond.end
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !6587
  %30 = load i8*, i8** %start, align 8, !dbg !6589
  %cmp21 = icmp eq i8* %29, %30, !dbg !6590
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !6591

if.then23:                                        ; preds = %sw.bb20
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !6592
  %add.ptr24 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !6594
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6595
  store i8* %add.ptr24, i8** %32, align 8, !dbg !6596
  store i32 7, i32* %retval, align 4, !dbg !6597
  br label %return, !dbg !6597

if.end25:                                         ; preds = %sw.bb20
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !6598
  %34 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6599
  store i8* %33, i8** %34, align 8, !dbg !6600
  store i32 6, i32* %retval, align 4, !dbg !6601
  br label %return, !dbg !6601

sw.bb26:                                          ; preds = %cond.end
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !6602
  %36 = load i8*, i8** %start, align 8, !dbg !6604
  %cmp27 = icmp eq i8* %35, %36, !dbg !6605
  br i1 %cmp27, label %if.then29, label %if.end58, !dbg !6606

if.then29:                                        ; preds = %sw.bb26
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !6607
  %add.ptr30 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !6607
  store i8* %add.ptr30, i8** %ptr.addr, align 8, !dbg !6607
  %38 = load i8*, i8** %end.addr, align 8, !dbg !6609
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !6609
  %sub.ptr.lhs.cast31 = ptrtoint i8* %38 to i64, !dbg !6609
  %sub.ptr.rhs.cast32 = ptrtoint i8* %39 to i64, !dbg !6609
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !6609
  %cmp34 = icmp sge i64 %sub.ptr.sub33, 2, !dbg !6609
  br i1 %cmp34, label %if.end37, label %if.then36, !dbg !6611

if.then36:                                        ; preds = %if.then29
  store i32 -3, i32* %retval, align 4, !dbg !6612
  br label %return, !dbg !6612

if.end37:                                         ; preds = %if.then29
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !6613
  %arrayidx38 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !6613
  %41 = load i8, i8* %arrayidx38, align 1, !dbg !6613
  %conv39 = sext i8 %41 to i32, !dbg !6613
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !6613
  br i1 %cmp40, label %cond.true42, label %cond.false47, !dbg !6613

cond.true42:                                      ; preds = %if.end37
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !6615
  %43 = load i8, i8* %42, align 1, !dbg !6615
  %idxprom43 = zext i8 %43 to i64, !dbg !6615
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6615
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !6615
  %type44 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !6615
  %arrayidx45 = getelementptr inbounds [256 x i8], [256 x i8]* %type44, i64 0, i64 %idxprom43, !dbg !6615
  %46 = load i8, i8* %arrayidx45, align 1, !dbg !6615
  %conv46 = zext i8 %46 to i32, !dbg !6615
  br label %cond.end51, !dbg !6615

cond.false47:                                     ; preds = %if.end37
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !6617
  %arrayidx48 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !6617
  %48 = load i8, i8* %arrayidx48, align 1, !dbg !6617
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !6617
  %arrayidx49 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !6617
  %50 = load i8, i8* %arrayidx49, align 1, !dbg !6617
  %call50 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !6617
  br label %cond.end51, !dbg !6617

cond.end51:                                       ; preds = %cond.false47, %cond.true42
  %cond52 = phi i32 [ %conv46, %cond.true42 ], [ %call50, %cond.false47 ], !dbg !6619
  %cmp53 = icmp eq i32 %cond52, 10, !dbg !6621
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !6619

if.then55:                                        ; preds = %cond.end51
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !6622
  %add.ptr56 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !6622
  store i8* %add.ptr56, i8** %ptr.addr, align 8, !dbg !6622
  br label %if.end57, !dbg !6623

if.end57:                                         ; preds = %if.then55, %cond.end51
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !6624
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6625
  store i8* %52, i8** %53, align 8, !dbg !6626
  store i32 7, i32* %retval, align 4, !dbg !6627
  br label %return, !dbg !6627

if.end58:                                         ; preds = %sw.bb26
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !6628
  %55 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6629
  store i8* %54, i8** %55, align 8, !dbg !6630
  store i32 6, i32* %retval, align 4, !dbg !6631
  br label %return, !dbg !6631

sw.bb59:                                          ; preds = %cond.end
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !6632
  %57 = load i8*, i8** %start, align 8, !dbg !6634
  %cmp60 = icmp eq i8* %56, %57, !dbg !6635
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !6636

if.then62:                                        ; preds = %sw.bb59
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !6637
  %add.ptr63 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !6639
  %59 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6640
  store i8* %add.ptr63, i8** %59, align 8, !dbg !6641
  store i32 39, i32* %retval, align 4, !dbg !6642
  br label %return, !dbg !6642

if.end64:                                         ; preds = %sw.bb59
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !6643
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6644
  store i8* %60, i8** %61, align 8, !dbg !6645
  store i32 6, i32* %retval, align 4, !dbg !6646
  br label %return, !dbg !6646

sw.default:                                       ; preds = %cond.end
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !6647
  %add.ptr65 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !6647
  store i8* %add.ptr65, i8** %ptr.addr, align 8, !dbg !6647
  br label %sw.epilog, !dbg !6648

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb8, %sw.bb
  br label %while.cond, !dbg !6649

while.end:                                        ; preds = %while.cond
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !6651
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6652
  store i8* %63, i8** %64, align 8, !dbg !6653
  store i32 6, i32* %retval, align 4, !dbg !6654
  br label %return, !dbg !6654

return:                                           ; preds = %while.end, %if.end64, %if.then62, %if.end58, %if.end57, %if.then36, %if.end25, %if.then23, %sw.bb19, %if.end18, %if.then15, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !6655
  ret i32 %65, !dbg !6655
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_entityValueTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !318 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6656, metadata !444), !dbg !6657
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6658, metadata !444), !dbg !6659
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6660, metadata !444), !dbg !6661
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !6662, metadata !444), !dbg !6663
  call void @llvm.dbg.declare(metadata i8** %start, metadata !6664, metadata !444), !dbg !6665
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6666
  %1 = load i8*, i8** %end.addr, align 8, !dbg !6668
  %cmp = icmp uge i8* %0, %1, !dbg !6669
  br i1 %cmp, label %if.then, label %if.end, !dbg !6670

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !6671
  br label %return, !dbg !6671

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !6672
  store i8* %2, i8** %start, align 8, !dbg !6673
  br label %while.cond, !dbg !6674

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i8*, i8** %end.addr, align 8, !dbg !6675
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !6675
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !6675
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !6675
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6675
  %cmp1 = icmp sge i64 %sub.ptr.sub, 2, !dbg !6675
  br i1 %cmp1, label %while.body, label %while.end, !dbg !6677

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !6678
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6678
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6678
  %conv = sext i8 %6 to i32, !dbg !6678
  %cmp2 = icmp eq i32 %conv, 0, !dbg !6678
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6678

cond.true:                                        ; preds = %while.body
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !6680
  %8 = load i8, i8* %7, align 1, !dbg !6680
  %idxprom = zext i8 %8 to i64, !dbg !6680
  %9 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6680
  %10 = bitcast %struct.encoding* %9 to %struct.normal_encoding*, !dbg !6680
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %10, i32 0, i32 1, !dbg !6680
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6680
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !6680
  %conv5 = zext i8 %11 to i32, !dbg !6680
  br label %cond.end, !dbg !6680

cond.false:                                       ; preds = %while.body
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !6682
  %arrayidx6 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !6682
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !6682
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !6682
  %arrayidx7 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !6682
  %15 = load i8, i8* %arrayidx7, align 1, !dbg !6682
  %call = call i32 @unicode_byte_type(i8 signext %13, i8 signext %15), !dbg !6682
  br label %cond.end, !dbg !6682

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !6684
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb8
    i32 7, label %sw.bb10
    i32 3, label %sw.bb12
    i32 30, label %sw.bb19
    i32 10, label %sw.bb32
    i32 9, label %sw.bb38
  ], !dbg !6686

sw.bb:                                            ; preds = %cond.end
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !6687
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 2, !dbg !6687
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !6687
  br label %sw.epilog, !dbg !6687

sw.bb8:                                           ; preds = %cond.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !6689
  %add.ptr9 = getelementptr inbounds i8, i8* %17, i64 3, !dbg !6689
  store i8* %add.ptr9, i8** %ptr.addr, align 8, !dbg !6689
  br label %sw.epilog, !dbg !6689

sw.bb10:                                          ; preds = %cond.end
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !6691
  %add.ptr11 = getelementptr inbounds i8, i8* %18, i64 4, !dbg !6691
  store i8* %add.ptr11, i8** %ptr.addr, align 8, !dbg !6691
  br label %sw.epilog, !dbg !6691

sw.bb12:                                          ; preds = %cond.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !6693
  %20 = load i8*, i8** %start, align 8, !dbg !6695
  %cmp13 = icmp eq i8* %19, %20, !dbg !6696
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !6697

if.then15:                                        ; preds = %sw.bb12
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6698
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !6699
  %add.ptr16 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !6700
  %23 = load i8*, i8** %end.addr, align 8, !dbg !6701
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6702
  %call17 = call i32 @little2_scanRef(%struct.encoding* %21, i8* %add.ptr16, i8* %23, i8** %24), !dbg !6703
  store i32 %call17, i32* %retval, align 4, !dbg !6704
  br label %return, !dbg !6704

if.end18:                                         ; preds = %sw.bb12
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !6705
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6706
  store i8* %25, i8** %26, align 8, !dbg !6707
  store i32 6, i32* %retval, align 4, !dbg !6708
  br label %return, !dbg !6708

sw.bb19:                                          ; preds = %cond.end
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !6709
  %28 = load i8*, i8** %start, align 8, !dbg !6711
  %cmp20 = icmp eq i8* %27, %28, !dbg !6712
  br i1 %cmp20, label %if.then22, label %if.end31, !dbg !6713

if.then22:                                        ; preds = %sw.bb19
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !6714, metadata !444), !dbg !6716
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6717
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !6718
  %add.ptr23 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !6719
  %31 = load i8*, i8** %end.addr, align 8, !dbg !6720
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6721
  %call24 = call i32 @little2_scanPercent(%struct.encoding* %29, i8* %add.ptr23, i8* %31, i8** %32), !dbg !6722
  store i32 %call24, i32* %tok, align 4, !dbg !6716
  %33 = load i32, i32* %tok, align 4, !dbg !6723
  %cmp25 = icmp eq i32 %33, 22, !dbg !6724
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !6725

cond.true27:                                      ; preds = %if.then22
  br label %cond.end29, !dbg !6726

cond.false28:                                     ; preds = %if.then22
  %34 = load i32, i32* %tok, align 4, !dbg !6728
  br label %cond.end29, !dbg !6730

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ 0, %cond.true27 ], [ %34, %cond.false28 ], !dbg !6731
  store i32 %cond30, i32* %retval, align 4, !dbg !6733
  br label %return, !dbg !6733

if.end31:                                         ; preds = %sw.bb19
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !6734
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6735
  store i8* %35, i8** %36, align 8, !dbg !6736
  store i32 6, i32* %retval, align 4, !dbg !6737
  br label %return, !dbg !6737

sw.bb32:                                          ; preds = %cond.end
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !6738
  %38 = load i8*, i8** %start, align 8, !dbg !6740
  %cmp33 = icmp eq i8* %37, %38, !dbg !6741
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !6742

if.then35:                                        ; preds = %sw.bb32
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !6743
  %add.ptr36 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !6745
  %40 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6746
  store i8* %add.ptr36, i8** %40, align 8, !dbg !6747
  store i32 7, i32* %retval, align 4, !dbg !6748
  br label %return, !dbg !6748

if.end37:                                         ; preds = %sw.bb32
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !6749
  %42 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6750
  store i8* %41, i8** %42, align 8, !dbg !6751
  store i32 6, i32* %retval, align 4, !dbg !6752
  br label %return, !dbg !6752

sw.bb38:                                          ; preds = %cond.end
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !6753
  %44 = load i8*, i8** %start, align 8, !dbg !6755
  %cmp39 = icmp eq i8* %43, %44, !dbg !6756
  br i1 %cmp39, label %if.then41, label %if.end70, !dbg !6757

if.then41:                                        ; preds = %sw.bb38
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !6758
  %add.ptr42 = getelementptr inbounds i8, i8* %45, i64 2, !dbg !6758
  store i8* %add.ptr42, i8** %ptr.addr, align 8, !dbg !6758
  %46 = load i8*, i8** %end.addr, align 8, !dbg !6760
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !6760
  %sub.ptr.lhs.cast43 = ptrtoint i8* %46 to i64, !dbg !6760
  %sub.ptr.rhs.cast44 = ptrtoint i8* %47 to i64, !dbg !6760
  %sub.ptr.sub45 = sub i64 %sub.ptr.lhs.cast43, %sub.ptr.rhs.cast44, !dbg !6760
  %cmp46 = icmp sge i64 %sub.ptr.sub45, 2, !dbg !6760
  br i1 %cmp46, label %if.end49, label %if.then48, !dbg !6762

if.then48:                                        ; preds = %if.then41
  store i32 -3, i32* %retval, align 4, !dbg !6763
  br label %return, !dbg !6763

if.end49:                                         ; preds = %if.then41
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !6764
  %arrayidx50 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !6764
  %49 = load i8, i8* %arrayidx50, align 1, !dbg !6764
  %conv51 = sext i8 %49 to i32, !dbg !6764
  %cmp52 = icmp eq i32 %conv51, 0, !dbg !6764
  br i1 %cmp52, label %cond.true54, label %cond.false59, !dbg !6764

cond.true54:                                      ; preds = %if.end49
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !6766
  %51 = load i8, i8* %50, align 1, !dbg !6766
  %idxprom55 = zext i8 %51 to i64, !dbg !6766
  %52 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6766
  %53 = bitcast %struct.encoding* %52 to %struct.normal_encoding*, !dbg !6766
  %type56 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %53, i32 0, i32 1, !dbg !6766
  %arrayidx57 = getelementptr inbounds [256 x i8], [256 x i8]* %type56, i64 0, i64 %idxprom55, !dbg !6766
  %54 = load i8, i8* %arrayidx57, align 1, !dbg !6766
  %conv58 = zext i8 %54 to i32, !dbg !6766
  br label %cond.end63, !dbg !6766

cond.false59:                                     ; preds = %if.end49
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !6768
  %arrayidx60 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !6768
  %56 = load i8, i8* %arrayidx60, align 1, !dbg !6768
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !6768
  %arrayidx61 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !6768
  %58 = load i8, i8* %arrayidx61, align 1, !dbg !6768
  %call62 = call i32 @unicode_byte_type(i8 signext %56, i8 signext %58), !dbg !6768
  br label %cond.end63, !dbg !6768

cond.end63:                                       ; preds = %cond.false59, %cond.true54
  %cond64 = phi i32 [ %conv58, %cond.true54 ], [ %call62, %cond.false59 ], !dbg !6770
  %cmp65 = icmp eq i32 %cond64, 10, !dbg !6772
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !6770

if.then67:                                        ; preds = %cond.end63
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !6773
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 2, !dbg !6773
  store i8* %add.ptr68, i8** %ptr.addr, align 8, !dbg !6773
  br label %if.end69, !dbg !6774

if.end69:                                         ; preds = %if.then67, %cond.end63
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !6775
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6776
  store i8* %60, i8** %61, align 8, !dbg !6777
  store i32 7, i32* %retval, align 4, !dbg !6778
  br label %return, !dbg !6778

if.end70:                                         ; preds = %sw.bb38
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !6779
  %63 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6780
  store i8* %62, i8** %63, align 8, !dbg !6781
  store i32 6, i32* %retval, align 4, !dbg !6782
  br label %return, !dbg !6782

sw.default:                                       ; preds = %cond.end
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !6783
  %add.ptr71 = getelementptr inbounds i8, i8* %64, i64 2, !dbg !6783
  store i8* %add.ptr71, i8** %ptr.addr, align 8, !dbg !6783
  br label %sw.epilog, !dbg !6784

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb8, %sw.bb
  br label %while.cond, !dbg !6785

while.end:                                        ; preds = %while.cond
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !6787
  %66 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !6788
  store i8* %65, i8** %66, align 8, !dbg !6789
  store i32 6, i32* %retval, align 4, !dbg !6790
  br label %return, !dbg !6790

return:                                           ; preds = %while.end, %if.end70, %if.end69, %if.then48, %if.end37, %if.then35, %if.end31, %cond.end29, %if.end18, %if.then15, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !6791
  ret i32 %67, !dbg !6791
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_sameName(%struct.encoding* %enc, i8* %ptr1, i8* %ptr2) #0 !dbg !319 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr1.addr = alloca i8*, align 8
  %ptr2.addr = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6792, metadata !444), !dbg !6793
  store i8* %ptr1, i8** %ptr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr1.addr, metadata !6794, metadata !444), !dbg !6795
  store i8* %ptr2, i8** %ptr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr2.addr, metadata !6796, metadata !444), !dbg !6797
  br label %for.cond, !dbg !6798

for.cond:                                         ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %ptr1.addr, align 8, !dbg !6799
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 1, !dbg !6799
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6799
  %conv = sext i8 %1 to i32, !dbg !6799
  %cmp = icmp eq i32 %conv, 0, !dbg !6799
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6799

cond.true:                                        ; preds = %for.cond
  %2 = load i8*, i8** %ptr1.addr, align 8, !dbg !6803
  %3 = load i8, i8* %2, align 1, !dbg !6803
  %idxprom = zext i8 %3 to i64, !dbg !6803
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6803
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !6803
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !6803
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6803
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !6803
  %conv3 = zext i8 %6 to i32, !dbg !6803
  br label %cond.end, !dbg !6803

cond.false:                                       ; preds = %for.cond
  %7 = load i8*, i8** %ptr1.addr, align 8, !dbg !6805
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !6805
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !6805
  %9 = load i8*, i8** %ptr1.addr, align 8, !dbg !6805
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !6805
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !6805
  %call = call i32 @unicode_byte_type(i8 signext %8, i8 signext %10), !dbg !6805
  br label %cond.end, !dbg !6805

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %call, %cond.false ], !dbg !6807
  switch i32 %cond, label %sw.default [
    i32 7, label %sw.bb
    i32 6, label %sw.bb11
    i32 5, label %sw.bb20
    i32 29, label %sw.bb37
    i32 22, label %sw.bb37
    i32 24, label %sw.bb37
    i32 25, label %sw.bb37
    i32 26, label %sw.bb37
    i32 27, label %sw.bb37
  ], !dbg !6809

sw.bb:                                            ; preds = %cond.end
  %11 = load i8*, i8** %ptr1.addr, align 8, !dbg !6810
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !6810
  store i8* %incdec.ptr, i8** %ptr1.addr, align 8, !dbg !6810
  %12 = load i8, i8* %11, align 1, !dbg !6810
  %conv6 = sext i8 %12 to i32, !dbg !6810
  %13 = load i8*, i8** %ptr2.addr, align 8, !dbg !6810
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6810
  store i8* %incdec.ptr7, i8** %ptr2.addr, align 8, !dbg !6810
  %14 = load i8, i8* %13, align 1, !dbg !6810
  %conv8 = sext i8 %14 to i32, !dbg !6810
  %cmp9 = icmp ne i32 %conv6, %conv8, !dbg !6810
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6813

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !6814
  br label %return, !dbg !6814

if.end:                                           ; preds = %sw.bb
  br label %sw.bb11, !dbg !6816

sw.bb11:                                          ; preds = %cond.end, %if.end
  %15 = load i8*, i8** %ptr1.addr, align 8, !dbg !6818
  %incdec.ptr12 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !6818
  store i8* %incdec.ptr12, i8** %ptr1.addr, align 8, !dbg !6818
  %16 = load i8, i8* %15, align 1, !dbg !6818
  %conv13 = sext i8 %16 to i32, !dbg !6818
  %17 = load i8*, i8** %ptr2.addr, align 8, !dbg !6818
  %incdec.ptr14 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6818
  store i8* %incdec.ptr14, i8** %ptr2.addr, align 8, !dbg !6818
  %18 = load i8, i8* %17, align 1, !dbg !6818
  %conv15 = sext i8 %18 to i32, !dbg !6818
  %cmp16 = icmp ne i32 %conv13, %conv15, !dbg !6818
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !6818

if.then18:                                        ; preds = %sw.bb11
  store i32 0, i32* %retval, align 4, !dbg !6821
  br label %return, !dbg !6821

if.end19:                                         ; preds = %sw.bb11
  br label %sw.bb20, !dbg !6823

sw.bb20:                                          ; preds = %cond.end, %if.end19
  %19 = load i8*, i8** %ptr1.addr, align 8, !dbg !6825
  %incdec.ptr21 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6825
  store i8* %incdec.ptr21, i8** %ptr1.addr, align 8, !dbg !6825
  %20 = load i8, i8* %19, align 1, !dbg !6825
  %conv22 = sext i8 %20 to i32, !dbg !6825
  %21 = load i8*, i8** %ptr2.addr, align 8, !dbg !6825
  %incdec.ptr23 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !6825
  store i8* %incdec.ptr23, i8** %ptr2.addr, align 8, !dbg !6825
  %22 = load i8, i8* %21, align 1, !dbg !6825
  %conv24 = sext i8 %22 to i32, !dbg !6825
  %cmp25 = icmp ne i32 %conv22, %conv24, !dbg !6825
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6825

if.then27:                                        ; preds = %sw.bb20
  store i32 0, i32* %retval, align 4, !dbg !6828
  br label %return, !dbg !6828

if.end28:                                         ; preds = %sw.bb20
  %23 = load i8*, i8** %ptr1.addr, align 8, !dbg !6830
  %incdec.ptr29 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6830
  store i8* %incdec.ptr29, i8** %ptr1.addr, align 8, !dbg !6830
  %24 = load i8, i8* %23, align 1, !dbg !6832
  %conv30 = sext i8 %24 to i32, !dbg !6832
  %25 = load i8*, i8** %ptr2.addr, align 8, !dbg !6833
  %incdec.ptr31 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !6833
  store i8* %incdec.ptr31, i8** %ptr2.addr, align 8, !dbg !6833
  %26 = load i8, i8* %25, align 1, !dbg !6834
  %conv32 = sext i8 %26 to i32, !dbg !6834
  %cmp33 = icmp ne i32 %conv30, %conv32, !dbg !6835
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !6836

if.then35:                                        ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !6837
  br label %return, !dbg !6837

if.end36:                                         ; preds = %if.end28
  br label %sw.epilog, !dbg !6838

sw.bb37:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %27 = load i8*, i8** %ptr2.addr, align 8, !dbg !6839
  %incdec.ptr38 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !6839
  store i8* %incdec.ptr38, i8** %ptr2.addr, align 8, !dbg !6839
  %28 = load i8, i8* %27, align 1, !dbg !6841
  %conv39 = sext i8 %28 to i32, !dbg !6841
  %29 = load i8*, i8** %ptr1.addr, align 8, !dbg !6842
  %incdec.ptr40 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !6842
  store i8* %incdec.ptr40, i8** %ptr1.addr, align 8, !dbg !6842
  %30 = load i8, i8* %29, align 1, !dbg !6843
  %conv41 = sext i8 %30 to i32, !dbg !6843
  %cmp42 = icmp ne i32 %conv39, %conv41, !dbg !6844
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !6845

if.then44:                                        ; preds = %sw.bb37
  store i32 0, i32* %retval, align 4, !dbg !6846
  br label %return, !dbg !6846

if.end45:                                         ; preds = %sw.bb37
  %31 = load i8*, i8** %ptr2.addr, align 8, !dbg !6847
  %incdec.ptr46 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !6847
  store i8* %incdec.ptr46, i8** %ptr2.addr, align 8, !dbg !6847
  %32 = load i8, i8* %31, align 1, !dbg !6851
  %conv47 = sext i8 %32 to i32, !dbg !6851
  %33 = load i8*, i8** %ptr1.addr, align 8, !dbg !6852
  %incdec.ptr48 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !6852
  store i8* %incdec.ptr48, i8** %ptr1.addr, align 8, !dbg !6852
  %34 = load i8, i8* %33, align 1, !dbg !6853
  %conv49 = sext i8 %34 to i32, !dbg !6853
  %cmp50 = icmp ne i32 %conv47, %conv49, !dbg !6854
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !6855

if.then52:                                        ; preds = %if.end45
  store i32 0, i32* %retval, align 4, !dbg !6856
  br label %return, !dbg !6856

if.end53:                                         ; preds = %if.end45
  br label %sw.epilog, !dbg !6857

sw.default:                                       ; preds = %cond.end
  %35 = load i8*, i8** %ptr2.addr, align 8, !dbg !6858
  %arrayidx54 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !6858
  %36 = load i8, i8* %arrayidx54, align 1, !dbg !6858
  %conv55 = sext i8 %36 to i32, !dbg !6858
  %cmp56 = icmp eq i32 %conv55, 0, !dbg !6858
  br i1 %cmp56, label %cond.true58, label %cond.false63, !dbg !6858

cond.true58:                                      ; preds = %sw.default
  %37 = load i8*, i8** %ptr2.addr, align 8, !dbg !6859
  %38 = load i8, i8* %37, align 1, !dbg !6859
  %idxprom59 = zext i8 %38 to i64, !dbg !6859
  %39 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6859
  %40 = bitcast %struct.encoding* %39 to %struct.normal_encoding*, !dbg !6859
  %type60 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %40, i32 0, i32 1, !dbg !6859
  %arrayidx61 = getelementptr inbounds [256 x i8], [256 x i8]* %type60, i64 0, i64 %idxprom59, !dbg !6859
  %41 = load i8, i8* %arrayidx61, align 1, !dbg !6859
  %conv62 = zext i8 %41 to i32, !dbg !6859
  br label %cond.end67, !dbg !6859

cond.false63:                                     ; preds = %sw.default
  %42 = load i8*, i8** %ptr2.addr, align 8, !dbg !6861
  %arrayidx64 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !6861
  %43 = load i8, i8* %arrayidx64, align 1, !dbg !6861
  %44 = load i8*, i8** %ptr2.addr, align 8, !dbg !6861
  %arrayidx65 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !6861
  %45 = load i8, i8* %arrayidx65, align 1, !dbg !6861
  %call66 = call i32 @unicode_byte_type(i8 signext %43, i8 signext %45), !dbg !6861
  br label %cond.end67, !dbg !6861

cond.end67:                                       ; preds = %cond.false63, %cond.true58
  %cond68 = phi i32 [ %conv62, %cond.true58 ], [ %call66, %cond.false63 ], !dbg !6863
  switch i32 %cond68, label %sw.default70 [
    i32 5, label %sw.bb69
    i32 6, label %sw.bb69
    i32 7, label %sw.bb69
    i32 29, label %sw.bb69
    i32 22, label %sw.bb69
    i32 24, label %sw.bb69
    i32 25, label %sw.bb69
    i32 26, label %sw.bb69
    i32 27, label %sw.bb69
  ], !dbg !6865

sw.bb69:                                          ; preds = %cond.end67, %cond.end67, %cond.end67, %cond.end67, %cond.end67, %cond.end67, %cond.end67, %cond.end67, %cond.end67
  store i32 0, i32* %retval, align 4, !dbg !6866
  br label %return, !dbg !6866

sw.default70:                                     ; preds = %cond.end67
  store i32 1, i32* %retval, align 4, !dbg !6868
  br label %return, !dbg !6868

sw.epilog:                                        ; preds = %if.end53, %if.end36
  br label %for.cond, !dbg !6869

return:                                           ; preds = %sw.default70, %sw.bb69, %if.then52, %if.then44, %if.then35, %if.then27, %if.then18, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !6871
  ret i32 %46, !dbg !6871
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_nameMatchesAscii(%struct.encoding* %UNUSED_enc, i8* %ptr1, i8* %end1, i8* %ptr2) #0 !dbg !320 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr1.addr = alloca i8*, align 8
  %end1.addr = alloca i8*, align 8
  %ptr2.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !6872, metadata !444), !dbg !6873
  store i8* %ptr1, i8** %ptr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr1.addr, metadata !6874, metadata !444), !dbg !6875
  store i8* %end1, i8** %end1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end1.addr, metadata !6876, metadata !444), !dbg !6877
  store i8* %ptr2, i8** %ptr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr2.addr, metadata !6878, metadata !444), !dbg !6879
  br label %for.cond, !dbg !6880

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %ptr2.addr, align 8, !dbg !6881
  %1 = load i8, i8* %0, align 1, !dbg !6885
  %tobool = icmp ne i8 %1, 0, !dbg !6886
  br i1 %tobool, label %for.body, label %for.end, !dbg !6886

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %end1.addr, align 8, !dbg !6887
  %3 = load i8*, i8** %ptr1.addr, align 8, !dbg !6890
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !6891
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !6891
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6891
  %cmp = icmp slt i64 %sub.ptr.sub, 2, !dbg !6892
  br i1 %cmp, label %if.then, label %if.end, !dbg !6893

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !6894
  br label %return, !dbg !6894

if.end:                                           ; preds = %for.body
  %4 = load i8*, i8** %ptr1.addr, align 8, !dbg !6895
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 1, !dbg !6895
  %5 = load i8, i8* %arrayidx, align 1, !dbg !6895
  %conv = sext i8 %5 to i32, !dbg !6895
  %cmp1 = icmp eq i32 %conv, 0, !dbg !6895
  br i1 %cmp1, label %land.lhs.true, label %if.then8, !dbg !6895

land.lhs.true:                                    ; preds = %if.end
  %6 = load i8*, i8** %ptr1.addr, align 8, !dbg !6897
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !6897
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !6897
  %conv4 = sext i8 %7 to i32, !dbg !6897
  %8 = load i8*, i8** %ptr2.addr, align 8, !dbg !6897
  %9 = load i8, i8* %8, align 1, !dbg !6897
  %conv5 = sext i8 %9 to i32, !dbg !6897
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !6897
  br i1 %cmp6, label %if.end9, label %if.then8, !dbg !6899

if.then8:                                         ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6900
  br label %return, !dbg !6900

if.end9:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !6901

for.inc:                                          ; preds = %if.end9
  %10 = load i8*, i8** %ptr1.addr, align 8, !dbg !6902
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 2, !dbg !6902
  store i8* %add.ptr, i8** %ptr1.addr, align 8, !dbg !6902
  %11 = load i8*, i8** %ptr2.addr, align 8, !dbg !6904
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !6904
  store i8* %incdec.ptr, i8** %ptr2.addr, align 8, !dbg !6904
  br label %for.cond, !dbg !6905

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %ptr1.addr, align 8, !dbg !6906
  %13 = load i8*, i8** %end1.addr, align 8, !dbg !6907
  %cmp10 = icmp eq i8* %12, %13, !dbg !6908
  %conv11 = zext i1 %cmp10 to i32, !dbg !6908
  store i32 %conv11, i32* %retval, align 4, !dbg !6909
  br label %return, !dbg !6909

return:                                           ; preds = %for.end, %if.then8, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6910
  ret i32 %14, !dbg !6910
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_nameLength(%struct.encoding* %enc, i8* %ptr) #0 !dbg !321 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %start = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6911, metadata !444), !dbg !6912
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6913, metadata !444), !dbg !6914
  call void @llvm.dbg.declare(metadata i8** %start, metadata !6915, metadata !444), !dbg !6916
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6917
  store i8* %0, i8** %start, align 8, !dbg !6916
  br label %for.cond, !dbg !6918

for.cond:                                         ; preds = %sw.epilog, %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !6919
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !6919
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6919
  %conv = sext i8 %2 to i32, !dbg !6919
  %cmp = icmp eq i32 %conv, 0, !dbg !6919
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6919

cond.true:                                        ; preds = %for.cond
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !6923
  %4 = load i8, i8* %3, align 1, !dbg !6923
  %idxprom = zext i8 %4 to i64, !dbg !6923
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6923
  %6 = bitcast %struct.encoding* %5 to %struct.normal_encoding*, !dbg !6923
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %6, i32 0, i32 1, !dbg !6923
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6923
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !6923
  %conv3 = zext i8 %7 to i32, !dbg !6923
  br label %cond.end, !dbg !6923

cond.false:                                       ; preds = %for.cond
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !6925
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !6925
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !6925
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !6925
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !6925
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !6925
  %call = call i32 @unicode_byte_type(i8 signext %9, i8 signext %11), !dbg !6925
  br label %cond.end, !dbg !6925

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %call, %cond.false ], !dbg !6927
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb6
    i32 7, label %sw.bb8
    i32 29, label %sw.bb10
    i32 22, label %sw.bb10
    i32 24, label %sw.bb10
    i32 25, label %sw.bb10
    i32 26, label %sw.bb10
    i32 27, label %sw.bb10
  ], !dbg !6929

sw.bb:                                            ; preds = %cond.end
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !6930
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 2, !dbg !6930
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !6930
  br label %sw.epilog, !dbg !6930

sw.bb6:                                           ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !6932
  %add.ptr7 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !6932
  store i8* %add.ptr7, i8** %ptr.addr, align 8, !dbg !6932
  br label %sw.epilog, !dbg !6932

sw.bb8:                                           ; preds = %cond.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !6934
  %add.ptr9 = getelementptr inbounds i8, i8* %14, i64 4, !dbg !6934
  store i8* %add.ptr9, i8** %ptr.addr, align 8, !dbg !6934
  br label %sw.epilog, !dbg !6934

sw.bb10:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !6936
  %add.ptr11 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !6936
  store i8* %add.ptr11, i8** %ptr.addr, align 8, !dbg !6936
  br label %sw.epilog, !dbg !6937

sw.default:                                       ; preds = %cond.end
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !6938
  %17 = load i8*, i8** %start, align 8, !dbg !6939
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !6940
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64, !dbg !6940
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6940
  %conv12 = trunc i64 %sub.ptr.sub to i32, !dbg !6941
  ret i32 %conv12, !dbg !6942

sw.epilog:                                        ; preds = %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb
  br label %for.cond, !dbg !6943
}

; Function Attrs: nounwind uwtable
define internal i8* @little2_skipS(%struct.encoding* %enc, i8* %ptr) #0 !dbg !322 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6945, metadata !444), !dbg !6946
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6947, metadata !444), !dbg !6948
  br label %for.cond, !dbg !6949

for.cond:                                         ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6950
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 1, !dbg !6950
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6950
  %conv = sext i8 %1 to i32, !dbg !6950
  %cmp = icmp eq i32 %conv, 0, !dbg !6950
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6950

cond.true:                                        ; preds = %for.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !6954
  %3 = load i8, i8* %2, align 1, !dbg !6954
  %idxprom = zext i8 %3 to i64, !dbg !6954
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6954
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !6954
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !6954
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6954
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !6954
  %conv3 = zext i8 %6 to i32, !dbg !6954
  br label %cond.end, !dbg !6954

cond.false:                                       ; preds = %for.cond
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !6956
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !6956
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !6956
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !6956
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !6956
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !6956
  %call = call i32 @unicode_byte_type(i8 signext %8, i8 signext %10), !dbg !6956
  br label %cond.end, !dbg !6956

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %call, %cond.false ], !dbg !6958
  switch i32 %cond, label %sw.default [
    i32 10, label %sw.bb
    i32 9, label %sw.bb
    i32 21, label %sw.bb
  ], !dbg !6960

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !6961
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 2, !dbg !6961
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !6961
  br label %sw.epilog, !dbg !6963

sw.default:                                       ; preds = %cond.end
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !6964
  ret i8* %12, !dbg !6965

sw.epilog:                                        ; preds = %sw.bb
  br label %for.cond, !dbg !6966
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_getAtts(%struct.encoding* %enc, i8* %ptr, i32 %attsMax, %struct.ATTRIBUTE* %atts) #0 !dbg !166 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %attsMax.addr = alloca i32, align 4
  %atts.addr = alloca %struct.ATTRIBUTE*, align 8
  %state = alloca i32, align 4
  %nAtts = alloca i32, align 4
  %open = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6968, metadata !444), !dbg !6969
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6970, metadata !444), !dbg !6971
  store i32 %attsMax, i32* %attsMax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attsMax.addr, metadata !6972, metadata !444), !dbg !6973
  store %struct.ATTRIBUTE* %atts, %struct.ATTRIBUTE** %atts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATTRIBUTE** %atts.addr, metadata !6974, metadata !444), !dbg !6975
  call void @llvm.dbg.declare(metadata i32* %state, metadata !6976, metadata !444), !dbg !6977
  store i32 1, i32* %state, align 4, !dbg !6977
  call void @llvm.dbg.declare(metadata i32* %nAtts, metadata !6978, metadata !444), !dbg !6979
  store i32 0, i32* %nAtts, align 4, !dbg !6979
  call void @llvm.dbg.declare(metadata i32* %open, metadata !6980, metadata !444), !dbg !6981
  store i32 0, i32* %open, align 4, !dbg !6981
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6982
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 2, !dbg !6982
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !6982
  br label %for.cond, !dbg !6984

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !6985
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !6985
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6985
  %conv = sext i8 %2 to i32, !dbg !6985
  %cmp = icmp eq i32 %conv, 0, !dbg !6985
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6985

cond.true:                                        ; preds = %for.cond
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !6988
  %4 = load i8, i8* %3, align 1, !dbg !6988
  %idxprom = zext i8 %4 to i64, !dbg !6988
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6988
  %6 = bitcast %struct.encoding* %5 to %struct.normal_encoding*, !dbg !6988
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %6, i32 0, i32 1, !dbg !6988
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !6988
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !6988
  %conv3 = zext i8 %7 to i32, !dbg !6988
  br label %cond.end, !dbg !6988

cond.false:                                       ; preds = %for.cond
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !6990
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !6990
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !6990
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !6990
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !6990
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !6990
  %call = call i32 @unicode_byte_type(i8 signext %9, i8 signext %11), !dbg !6990
  br label %cond.end, !dbg !6990

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %call, %cond.false ], !dbg !6992
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb17
    i32 7, label %sw.bb33
    i32 29, label %sw.bb49
    i32 22, label %sw.bb49
    i32 24, label %sw.bb49
    i32 12, label %sw.bb64
    i32 13, label %sw.bb86
    i32 3, label %sw.bb112
    i32 21, label %sw.bb120
    i32 9, label %sw.bb195
    i32 10, label %sw.bb195
    i32 11, label %sw.bb211
    i32 17, label %sw.bb211
  ], !dbg !6994

sw.bb:                                            ; preds = %cond.end
  %12 = load i32, i32* %state, align 4, !dbg !6995
  %cmp6 = icmp eq i32 %12, 0, !dbg !6995
  br i1 %cmp6, label %if.then, label %if.end15, !dbg !6998

if.then:                                          ; preds = %sw.bb
  %13 = load i32, i32* %nAtts, align 4, !dbg !6999
  %14 = load i32, i32* %attsMax.addr, align 4, !dbg !6999
  %cmp8 = icmp slt i32 %13, %14, !dbg !6999
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !6999

if.then10:                                        ; preds = %if.then
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !7003
  %16 = load i32, i32* %nAtts, align 4, !dbg !7003
  %idxprom11 = sext i32 %16 to i64, !dbg !7003
  %17 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7003
  %arrayidx12 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %17, i64 %idxprom11, !dbg !7003
  %name = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx12, i32 0, i32 0, !dbg !7003
  store i8* %15, i8** %name, align 8, !dbg !7003
  %18 = load i32, i32* %nAtts, align 4, !dbg !7003
  %idxprom13 = sext i32 %18 to i64, !dbg !7003
  %19 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7003
  %arrayidx14 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %19, i64 %idxprom13, !dbg !7003
  %normalized = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx14, i32 0, i32 3, !dbg !7003
  store i8 1, i8* %normalized, align 8, !dbg !7003
  br label %if.end, !dbg !7003

if.end:                                           ; preds = %if.then10, %if.then
  store i32 1, i32* %state, align 4, !dbg !7006
  br label %if.end15, !dbg !7006

if.end15:                                         ; preds = %if.end, %sw.bb
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !7008
  %add.ptr16 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !7008
  store i8* %add.ptr16, i8** %ptr.addr, align 8, !dbg !7008
  br label %sw.epilog, !dbg !7008

sw.bb17:                                          ; preds = %cond.end
  %21 = load i32, i32* %state, align 4, !dbg !7010
  %cmp18 = icmp eq i32 %21, 0, !dbg !7010
  br i1 %cmp18, label %if.then20, label %if.end31, !dbg !7010

if.then20:                                        ; preds = %sw.bb17
  %22 = load i32, i32* %nAtts, align 4, !dbg !7013
  %23 = load i32, i32* %attsMax.addr, align 4, !dbg !7013
  %cmp21 = icmp slt i32 %22, %23, !dbg !7013
  br i1 %cmp21, label %if.then23, label %if.end30, !dbg !7013

if.then23:                                        ; preds = %if.then20
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !7017
  %25 = load i32, i32* %nAtts, align 4, !dbg !7017
  %idxprom24 = sext i32 %25 to i64, !dbg !7017
  %26 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7017
  %arrayidx25 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %26, i64 %idxprom24, !dbg !7017
  %name26 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx25, i32 0, i32 0, !dbg !7017
  store i8* %24, i8** %name26, align 8, !dbg !7017
  %27 = load i32, i32* %nAtts, align 4, !dbg !7017
  %idxprom27 = sext i32 %27 to i64, !dbg !7017
  %28 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7017
  %arrayidx28 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %28, i64 %idxprom27, !dbg !7017
  %normalized29 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx28, i32 0, i32 3, !dbg !7017
  store i8 1, i8* %normalized29, align 8, !dbg !7017
  br label %if.end30, !dbg !7017

if.end30:                                         ; preds = %if.then23, %if.then20
  store i32 1, i32* %state, align 4, !dbg !7020
  br label %if.end31, !dbg !7020

if.end31:                                         ; preds = %if.end30, %sw.bb17
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !7022
  %add.ptr32 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !7022
  store i8* %add.ptr32, i8** %ptr.addr, align 8, !dbg !7022
  br label %sw.epilog, !dbg !7022

sw.bb33:                                          ; preds = %cond.end
  %30 = load i32, i32* %state, align 4, !dbg !7024
  %cmp34 = icmp eq i32 %30, 0, !dbg !7024
  br i1 %cmp34, label %if.then36, label %if.end47, !dbg !7024

if.then36:                                        ; preds = %sw.bb33
  %31 = load i32, i32* %nAtts, align 4, !dbg !7027
  %32 = load i32, i32* %attsMax.addr, align 4, !dbg !7027
  %cmp37 = icmp slt i32 %31, %32, !dbg !7027
  br i1 %cmp37, label %if.then39, label %if.end46, !dbg !7027

if.then39:                                        ; preds = %if.then36
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !7031
  %34 = load i32, i32* %nAtts, align 4, !dbg !7031
  %idxprom40 = sext i32 %34 to i64, !dbg !7031
  %35 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7031
  %arrayidx41 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %35, i64 %idxprom40, !dbg !7031
  %name42 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx41, i32 0, i32 0, !dbg !7031
  store i8* %33, i8** %name42, align 8, !dbg !7031
  %36 = load i32, i32* %nAtts, align 4, !dbg !7031
  %idxprom43 = sext i32 %36 to i64, !dbg !7031
  %37 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7031
  %arrayidx44 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %37, i64 %idxprom43, !dbg !7031
  %normalized45 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx44, i32 0, i32 3, !dbg !7031
  store i8 1, i8* %normalized45, align 8, !dbg !7031
  br label %if.end46, !dbg !7031

if.end46:                                         ; preds = %if.then39, %if.then36
  store i32 1, i32* %state, align 4, !dbg !7034
  br label %if.end47, !dbg !7034

if.end47:                                         ; preds = %if.end46, %sw.bb33
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !7036
  %add.ptr48 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !7036
  store i8* %add.ptr48, i8** %ptr.addr, align 8, !dbg !7036
  br label %sw.epilog, !dbg !7036

sw.bb49:                                          ; preds = %cond.end, %cond.end, %cond.end
  %39 = load i32, i32* %state, align 4, !dbg !7038
  %cmp50 = icmp eq i32 %39, 0, !dbg !7038
  br i1 %cmp50, label %if.then52, label %if.end63, !dbg !7040

if.then52:                                        ; preds = %sw.bb49
  %40 = load i32, i32* %nAtts, align 4, !dbg !7041
  %41 = load i32, i32* %attsMax.addr, align 4, !dbg !7041
  %cmp53 = icmp slt i32 %40, %41, !dbg !7041
  br i1 %cmp53, label %if.then55, label %if.end62, !dbg !7041

if.then55:                                        ; preds = %if.then52
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !7045
  %43 = load i32, i32* %nAtts, align 4, !dbg !7045
  %idxprom56 = sext i32 %43 to i64, !dbg !7045
  %44 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7045
  %arrayidx57 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %44, i64 %idxprom56, !dbg !7045
  %name58 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx57, i32 0, i32 0, !dbg !7045
  store i8* %42, i8** %name58, align 8, !dbg !7045
  %45 = load i32, i32* %nAtts, align 4, !dbg !7045
  %idxprom59 = sext i32 %45 to i64, !dbg !7045
  %46 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7045
  %arrayidx60 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %46, i64 %idxprom59, !dbg !7045
  %normalized61 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx60, i32 0, i32 3, !dbg !7045
  store i8 1, i8* %normalized61, align 8, !dbg !7045
  br label %if.end62, !dbg !7045

if.end62:                                         ; preds = %if.then55, %if.then52
  store i32 1, i32* %state, align 4, !dbg !7048
  br label %if.end63, !dbg !7048

if.end63:                                         ; preds = %if.end62, %sw.bb49
  br label %sw.epilog, !dbg !7050

sw.bb64:                                          ; preds = %cond.end
  %47 = load i32, i32* %state, align 4, !dbg !7051
  %cmp65 = icmp ne i32 %47, 2, !dbg !7053
  br i1 %cmp65, label %if.then67, label %if.else, !dbg !7054

if.then67:                                        ; preds = %sw.bb64
  %48 = load i32, i32* %nAtts, align 4, !dbg !7055
  %49 = load i32, i32* %attsMax.addr, align 4, !dbg !7058
  %cmp68 = icmp slt i32 %48, %49, !dbg !7059
  br i1 %cmp68, label %if.then70, label %if.end74, !dbg !7060

if.then70:                                        ; preds = %if.then67
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !7061
  %add.ptr71 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !7062
  %51 = load i32, i32* %nAtts, align 4, !dbg !7063
  %idxprom72 = sext i32 %51 to i64, !dbg !7064
  %52 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7064
  %arrayidx73 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %52, i64 %idxprom72, !dbg !7064
  %valuePtr = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx73, i32 0, i32 1, !dbg !7065
  store i8* %add.ptr71, i8** %valuePtr, align 8, !dbg !7066
  br label %if.end74, !dbg !7064

if.end74:                                         ; preds = %if.then70, %if.then67
  store i32 2, i32* %state, align 4, !dbg !7067
  store i32 12, i32* %open, align 4, !dbg !7068
  br label %if.end85, !dbg !7069

if.else:                                          ; preds = %sw.bb64
  %53 = load i32, i32* %open, align 4, !dbg !7070
  %cmp75 = icmp eq i32 %53, 12, !dbg !7072
  br i1 %cmp75, label %if.then77, label %if.end84, !dbg !7073

if.then77:                                        ; preds = %if.else
  store i32 0, i32* %state, align 4, !dbg !7074
  %54 = load i32, i32* %nAtts, align 4, !dbg !7076
  %55 = load i32, i32* %attsMax.addr, align 4, !dbg !7078
  %cmp78 = icmp slt i32 %54, %55, !dbg !7079
  br i1 %cmp78, label %if.then80, label %if.end83, !dbg !7080

if.then80:                                        ; preds = %if.then77
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !7081
  %57 = load i32, i32* %nAtts, align 4, !dbg !7082
  %idxprom81 = sext i32 %57 to i64, !dbg !7083
  %58 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7083
  %arrayidx82 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %58, i64 %idxprom81, !dbg !7083
  %valueEnd = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx82, i32 0, i32 2, !dbg !7084
  store i8* %56, i8** %valueEnd, align 8, !dbg !7085
  br label %if.end83, !dbg !7083

if.end83:                                         ; preds = %if.then80, %if.then77
  %59 = load i32, i32* %nAtts, align 4, !dbg !7086
  %inc = add nsw i32 %59, 1, !dbg !7086
  store i32 %inc, i32* %nAtts, align 4, !dbg !7086
  br label %if.end84, !dbg !7087

if.end84:                                         ; preds = %if.end83, %if.else
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end74
  br label %sw.epilog, !dbg !7088

sw.bb86:                                          ; preds = %cond.end
  %60 = load i32, i32* %state, align 4, !dbg !7089
  %cmp87 = icmp ne i32 %60, 2, !dbg !7091
  br i1 %cmp87, label %if.then89, label %if.else98, !dbg !7092

if.then89:                                        ; preds = %sw.bb86
  %61 = load i32, i32* %nAtts, align 4, !dbg !7093
  %62 = load i32, i32* %attsMax.addr, align 4, !dbg !7096
  %cmp90 = icmp slt i32 %61, %62, !dbg !7097
  br i1 %cmp90, label %if.then92, label %if.end97, !dbg !7098

if.then92:                                        ; preds = %if.then89
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !7099
  %add.ptr93 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !7100
  %64 = load i32, i32* %nAtts, align 4, !dbg !7101
  %idxprom94 = sext i32 %64 to i64, !dbg !7102
  %65 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7102
  %arrayidx95 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %65, i64 %idxprom94, !dbg !7102
  %valuePtr96 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx95, i32 0, i32 1, !dbg !7103
  store i8* %add.ptr93, i8** %valuePtr96, align 8, !dbg !7104
  br label %if.end97, !dbg !7102

if.end97:                                         ; preds = %if.then92, %if.then89
  store i32 2, i32* %state, align 4, !dbg !7105
  store i32 13, i32* %open, align 4, !dbg !7106
  br label %if.end111, !dbg !7107

if.else98:                                        ; preds = %sw.bb86
  %66 = load i32, i32* %open, align 4, !dbg !7108
  %cmp99 = icmp eq i32 %66, 13, !dbg !7110
  br i1 %cmp99, label %if.then101, label %if.end110, !dbg !7111

if.then101:                                       ; preds = %if.else98
  store i32 0, i32* %state, align 4, !dbg !7112
  %67 = load i32, i32* %nAtts, align 4, !dbg !7114
  %68 = load i32, i32* %attsMax.addr, align 4, !dbg !7116
  %cmp102 = icmp slt i32 %67, %68, !dbg !7117
  br i1 %cmp102, label %if.then104, label %if.end108, !dbg !7118

if.then104:                                       ; preds = %if.then101
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !7119
  %70 = load i32, i32* %nAtts, align 4, !dbg !7120
  %idxprom105 = sext i32 %70 to i64, !dbg !7121
  %71 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7121
  %arrayidx106 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %71, i64 %idxprom105, !dbg !7121
  %valueEnd107 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx106, i32 0, i32 2, !dbg !7122
  store i8* %69, i8** %valueEnd107, align 8, !dbg !7123
  br label %if.end108, !dbg !7121

if.end108:                                        ; preds = %if.then104, %if.then101
  %72 = load i32, i32* %nAtts, align 4, !dbg !7124
  %inc109 = add nsw i32 %72, 1, !dbg !7124
  store i32 %inc109, i32* %nAtts, align 4, !dbg !7124
  br label %if.end110, !dbg !7125

if.end110:                                        ; preds = %if.end108, %if.else98
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end97
  br label %sw.epilog, !dbg !7126

sw.bb112:                                         ; preds = %cond.end
  %73 = load i32, i32* %nAtts, align 4, !dbg !7127
  %74 = load i32, i32* %attsMax.addr, align 4, !dbg !7129
  %cmp113 = icmp slt i32 %73, %74, !dbg !7130
  br i1 %cmp113, label %if.then115, label %if.end119, !dbg !7131

if.then115:                                       ; preds = %sw.bb112
  %75 = load i32, i32* %nAtts, align 4, !dbg !7132
  %idxprom116 = sext i32 %75 to i64, !dbg !7133
  %76 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7133
  %arrayidx117 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %76, i64 %idxprom116, !dbg !7133
  %normalized118 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx117, i32 0, i32 3, !dbg !7134
  store i8 0, i8* %normalized118, align 8, !dbg !7135
  br label %if.end119, !dbg !7133

if.end119:                                        ; preds = %if.then115, %sw.bb112
  br label %sw.epilog, !dbg !7136

sw.bb120:                                         ; preds = %cond.end
  %77 = load i32, i32* %state, align 4, !dbg !7137
  %cmp121 = icmp eq i32 %77, 1, !dbg !7139
  br i1 %cmp121, label %if.then123, label %if.else124, !dbg !7140

if.then123:                                       ; preds = %sw.bb120
  store i32 0, i32* %state, align 4, !dbg !7141
  br label %if.end194, !dbg !7142

if.else124:                                       ; preds = %sw.bb120
  %78 = load i32, i32* %state, align 4, !dbg !7143
  %cmp125 = icmp eq i32 %78, 2, !dbg !7145
  br i1 %cmp125, label %land.lhs.true, label %if.end193, !dbg !7146

land.lhs.true:                                    ; preds = %if.else124
  %79 = load i32, i32* %nAtts, align 4, !dbg !7147
  %80 = load i32, i32* %attsMax.addr, align 4, !dbg !7149
  %cmp127 = icmp slt i32 %79, %80, !dbg !7150
  br i1 %cmp127, label %land.lhs.true129, label %if.end193, !dbg !7151

land.lhs.true129:                                 ; preds = %land.lhs.true
  %81 = load i32, i32* %nAtts, align 4, !dbg !7152
  %idxprom130 = sext i32 %81 to i64, !dbg !7153
  %82 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7153
  %arrayidx131 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %82, i64 %idxprom130, !dbg !7153
  %normalized132 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx131, i32 0, i32 3, !dbg !7154
  %83 = load i8, i8* %normalized132, align 8, !dbg !7154
  %conv133 = sext i8 %83 to i32, !dbg !7153
  %tobool = icmp ne i32 %conv133, 0, !dbg !7153
  br i1 %tobool, label %land.lhs.true134, label %if.end193, !dbg !7155

land.lhs.true134:                                 ; preds = %land.lhs.true129
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !7156
  %85 = load i32, i32* %nAtts, align 4, !dbg !7157
  %idxprom135 = sext i32 %85 to i64, !dbg !7158
  %86 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7158
  %arrayidx136 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %86, i64 %idxprom135, !dbg !7158
  %valuePtr137 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx136, i32 0, i32 1, !dbg !7159
  %87 = load i8*, i8** %valuePtr137, align 8, !dbg !7159
  %cmp138 = icmp eq i8* %84, %87, !dbg !7160
  br i1 %cmp138, label %if.then189, label %lor.lhs.false, !dbg !7161

lor.lhs.false:                                    ; preds = %land.lhs.true134
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !7162
  %arrayidx140 = getelementptr inbounds i8, i8* %88, i64 1, !dbg !7162
  %89 = load i8, i8* %arrayidx140, align 1, !dbg !7162
  %conv141 = sext i8 %89 to i32, !dbg !7162
  %cmp142 = icmp eq i32 %conv141, 0, !dbg !7162
  br i1 %cmp142, label %cond.true144, label %cond.false147, !dbg !7162

cond.true144:                                     ; preds = %lor.lhs.false
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !7163
  %arrayidx145 = getelementptr inbounds i8, i8* %90, i64 0, !dbg !7163
  %91 = load i8, i8* %arrayidx145, align 1, !dbg !7163
  %conv146 = sext i8 %91 to i32, !dbg !7163
  br label %cond.end148, !dbg !7163

cond.false147:                                    ; preds = %lor.lhs.false
  br label %cond.end148, !dbg !7165

cond.end148:                                      ; preds = %cond.false147, %cond.true144
  %cond149 = phi i32 [ %conv146, %cond.true144 ], [ -1, %cond.false147 ], !dbg !7167
  %cmp150 = icmp ne i32 %cond149, 32, !dbg !7169
  br i1 %cmp150, label %if.then189, label %lor.lhs.false152, !dbg !7170

lor.lhs.false152:                                 ; preds = %cond.end148
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !7171
  %add.ptr153 = getelementptr inbounds i8, i8* %92, i64 2, !dbg !7171
  %arrayidx154 = getelementptr inbounds i8, i8* %add.ptr153, i64 1, !dbg !7171
  %93 = load i8, i8* %arrayidx154, align 1, !dbg !7171
  %conv155 = sext i8 %93 to i32, !dbg !7171
  %cmp156 = icmp eq i32 %conv155, 0, !dbg !7171
  br i1 %cmp156, label %cond.true158, label %cond.false162, !dbg !7171

cond.true158:                                     ; preds = %lor.lhs.false152
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !7172
  %add.ptr159 = getelementptr inbounds i8, i8* %94, i64 2, !dbg !7172
  %arrayidx160 = getelementptr inbounds i8, i8* %add.ptr159, i64 0, !dbg !7172
  %95 = load i8, i8* %arrayidx160, align 1, !dbg !7172
  %conv161 = sext i8 %95 to i32, !dbg !7172
  br label %cond.end163, !dbg !7172

cond.false162:                                    ; preds = %lor.lhs.false152
  br label %cond.end163, !dbg !7173

cond.end163:                                      ; preds = %cond.false162, %cond.true158
  %cond164 = phi i32 [ %conv161, %cond.true158 ], [ -1, %cond.false162 ], !dbg !7174
  %cmp165 = icmp eq i32 %cond164, 32, !dbg !7175
  br i1 %cmp165, label %if.then189, label %lor.lhs.false167, !dbg !7176

lor.lhs.false167:                                 ; preds = %cond.end163
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !7177
  %add.ptr168 = getelementptr inbounds i8, i8* %96, i64 2, !dbg !7177
  %arrayidx169 = getelementptr inbounds i8, i8* %add.ptr168, i64 1, !dbg !7177
  %97 = load i8, i8* %arrayidx169, align 1, !dbg !7177
  %conv170 = sext i8 %97 to i32, !dbg !7177
  %cmp171 = icmp eq i32 %conv170, 0, !dbg !7177
  br i1 %cmp171, label %cond.true173, label %cond.false179, !dbg !7177

cond.true173:                                     ; preds = %lor.lhs.false167
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !7178
  %add.ptr174 = getelementptr inbounds i8, i8* %98, i64 2, !dbg !7178
  %99 = load i8, i8* %add.ptr174, align 1, !dbg !7178
  %idxprom175 = zext i8 %99 to i64, !dbg !7178
  %100 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7178
  %101 = bitcast %struct.encoding* %100 to %struct.normal_encoding*, !dbg !7178
  %type176 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %101, i32 0, i32 1, !dbg !7178
  %arrayidx177 = getelementptr inbounds [256 x i8], [256 x i8]* %type176, i64 0, i64 %idxprom175, !dbg !7178
  %102 = load i8, i8* %arrayidx177, align 1, !dbg !7178
  %conv178 = zext i8 %102 to i32, !dbg !7178
  br label %cond.end185, !dbg !7178

cond.false179:                                    ; preds = %lor.lhs.false167
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !7179
  %add.ptr180 = getelementptr inbounds i8, i8* %103, i64 2, !dbg !7179
  %arrayidx181 = getelementptr inbounds i8, i8* %add.ptr180, i64 1, !dbg !7179
  %104 = load i8, i8* %arrayidx181, align 1, !dbg !7179
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !7179
  %add.ptr182 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !7179
  %arrayidx183 = getelementptr inbounds i8, i8* %add.ptr182, i64 0, !dbg !7179
  %106 = load i8, i8* %arrayidx183, align 1, !dbg !7179
  %call184 = call i32 @unicode_byte_type(i8 signext %104, i8 signext %106), !dbg !7179
  br label %cond.end185, !dbg !7179

cond.end185:                                      ; preds = %cond.false179, %cond.true173
  %cond186 = phi i32 [ %conv178, %cond.true173 ], [ %call184, %cond.false179 ], !dbg !7180
  %107 = load i32, i32* %open, align 4, !dbg !7181
  %cmp187 = icmp eq i32 %cond186, %107, !dbg !7182
  br i1 %cmp187, label %if.then189, label %if.end193, !dbg !7183

if.then189:                                       ; preds = %cond.end185, %cond.end163, %cond.end148, %land.lhs.true134
  %108 = load i32, i32* %nAtts, align 4, !dbg !7185
  %idxprom190 = sext i32 %108 to i64, !dbg !7186
  %109 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7186
  %arrayidx191 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %109, i64 %idxprom190, !dbg !7186
  %normalized192 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx191, i32 0, i32 3, !dbg !7187
  store i8 0, i8* %normalized192, align 8, !dbg !7188
  br label %if.end193, !dbg !7186

if.end193:                                        ; preds = %if.then189, %cond.end185, %land.lhs.true129, %land.lhs.true, %if.else124
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then123
  br label %sw.epilog, !dbg !7189

sw.bb195:                                         ; preds = %cond.end, %cond.end
  %110 = load i32, i32* %state, align 4, !dbg !7190
  %cmp196 = icmp eq i32 %110, 1, !dbg !7192
  br i1 %cmp196, label %if.then198, label %if.else199, !dbg !7193

if.then198:                                       ; preds = %sw.bb195
  store i32 0, i32* %state, align 4, !dbg !7194
  br label %if.end210, !dbg !7195

if.else199:                                       ; preds = %sw.bb195
  %111 = load i32, i32* %state, align 4, !dbg !7196
  %cmp200 = icmp eq i32 %111, 2, !dbg !7198
  br i1 %cmp200, label %land.lhs.true202, label %if.end209, !dbg !7199

land.lhs.true202:                                 ; preds = %if.else199
  %112 = load i32, i32* %nAtts, align 4, !dbg !7200
  %113 = load i32, i32* %attsMax.addr, align 4, !dbg !7202
  %cmp203 = icmp slt i32 %112, %113, !dbg !7203
  br i1 %cmp203, label %if.then205, label %if.end209, !dbg !7204

if.then205:                                       ; preds = %land.lhs.true202
  %114 = load i32, i32* %nAtts, align 4, !dbg !7205
  %idxprom206 = sext i32 %114 to i64, !dbg !7206
  %115 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !7206
  %arrayidx207 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %115, i64 %idxprom206, !dbg !7206
  %normalized208 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx207, i32 0, i32 3, !dbg !7207
  store i8 0, i8* %normalized208, align 8, !dbg !7208
  br label %if.end209, !dbg !7206

if.end209:                                        ; preds = %if.then205, %land.lhs.true202, %if.else199
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.then198
  br label %sw.epilog, !dbg !7209

sw.bb211:                                         ; preds = %cond.end, %cond.end
  %116 = load i32, i32* %state, align 4, !dbg !7210
  %cmp212 = icmp ne i32 %116, 2, !dbg !7212
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !7213

if.then214:                                       ; preds = %sw.bb211
  %117 = load i32, i32* %nAtts, align 4, !dbg !7214
  ret i32 %117, !dbg !7215

if.end215:                                        ; preds = %sw.bb211
  br label %sw.epilog, !dbg !7216

sw.default:                                       ; preds = %cond.end
  br label %sw.epilog, !dbg !7217

sw.epilog:                                        ; preds = %sw.default, %if.end215, %if.end210, %if.end194, %if.end119, %if.end111, %if.end85, %if.end63, %if.end47, %if.end31, %if.end15
  br label %for.inc, !dbg !7218

for.inc:                                          ; preds = %sw.epilog
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !7219
  %add.ptr216 = getelementptr inbounds i8, i8* %118, i64 2, !dbg !7219
  store i8* %add.ptr216, i8** %ptr.addr, align 8, !dbg !7219
  br label %for.cond, !dbg !7221
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_charRefNumber(%struct.encoding* %UNUSED_enc, i8* %ptr) #0 !dbg !323 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %c = alloca i32, align 4
  %c47 = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !7222, metadata !444), !dbg !7223
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7224, metadata !444), !dbg !7225
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7226, metadata !444), !dbg !7227
  store i32 0, i32* %result, align 4, !dbg !7227
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7228
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 4, !dbg !7228
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !7228
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7229
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !7229
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7229
  %conv = sext i8 %2 to i32, !dbg !7229
  %cmp = icmp eq i32 %conv, 0, !dbg !7229
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7229

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !7231
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !7231
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7231
  %conv3 = sext i8 %4 to i32, !dbg !7231
  %cmp4 = icmp eq i32 %conv3, 120, !dbg !7231
  br i1 %cmp4, label %if.then, label %if.else, !dbg !7231

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !7233
  %add.ptr6 = getelementptr inbounds i8, i8* %5, i64 2, !dbg !7233
  store i8* %add.ptr6, i8** %ptr.addr, align 8, !dbg !7233
  br label %for.cond, !dbg !7236

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !7237
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !7237
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !7237
  %conv8 = sext i8 %7 to i32, !dbg !7237
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !7237
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !7237

land.rhs:                                         ; preds = %for.cond
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !7239
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !7239
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !7239
  %conv12 = sext i8 %9 to i32, !dbg !7239
  %cmp13 = icmp eq i32 %conv12, 59, !dbg !7239
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %10 = phi i1 [ false, %for.cond ], [ %cmp13, %land.rhs ]
  %lnot = xor i1 %10, true, !dbg !7241
  br i1 %lnot, label %for.body, label %for.end, !dbg !7243

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7245, metadata !444), !dbg !7247
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !7248
  %arrayidx15 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !7248
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !7248
  %conv16 = sext i8 %12 to i32, !dbg !7248
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !7248
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !7248

cond.true:                                        ; preds = %for.body
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !7249
  %arrayidx19 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !7249
  %14 = load i8, i8* %arrayidx19, align 1, !dbg !7249
  %conv20 = sext i8 %14 to i32, !dbg !7249
  br label %cond.end, !dbg !7249

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ -1, %cond.false ], !dbg !7253
  store i32 %cond, i32* %c, align 4, !dbg !7255
  %15 = load i32, i32* %c, align 4, !dbg !7256
  switch i32 %15, label %sw.epilog [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 65, label %sw.bb21
    i32 66, label %sw.bb21
    i32 67, label %sw.bb21
    i32 68, label %sw.bb21
    i32 69, label %sw.bb21
    i32 70, label %sw.bb21
    i32 97, label %sw.bb25
    i32 98, label %sw.bb25
    i32 99, label %sw.bb25
    i32 100, label %sw.bb25
    i32 101, label %sw.bb25
    i32 102, label %sw.bb25
  ], !dbg !7257

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %16 = load i32, i32* %result, align 4, !dbg !7258
  %shl = shl i32 %16, 4, !dbg !7258
  store i32 %shl, i32* %result, align 4, !dbg !7258
  %17 = load i32, i32* %c, align 4, !dbg !7260
  %sub = sub nsw i32 %17, 48, !dbg !7261
  %18 = load i32, i32* %result, align 4, !dbg !7262
  %or = or i32 %18, %sub, !dbg !7262
  store i32 %or, i32* %result, align 4, !dbg !7262
  br label %sw.epilog, !dbg !7263

sw.bb21:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %19 = load i32, i32* %result, align 4, !dbg !7264
  %shl22 = shl i32 %19, 4, !dbg !7264
  store i32 %shl22, i32* %result, align 4, !dbg !7264
  %20 = load i32, i32* %c, align 4, !dbg !7265
  %sub23 = sub nsw i32 %20, 65, !dbg !7266
  %add = add nsw i32 10, %sub23, !dbg !7267
  %21 = load i32, i32* %result, align 4, !dbg !7268
  %add24 = add nsw i32 %21, %add, !dbg !7268
  store i32 %add24, i32* %result, align 4, !dbg !7268
  br label %sw.epilog, !dbg !7269

sw.bb25:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %22 = load i32, i32* %result, align 4, !dbg !7270
  %shl26 = shl i32 %22, 4, !dbg !7270
  store i32 %shl26, i32* %result, align 4, !dbg !7270
  %23 = load i32, i32* %c, align 4, !dbg !7271
  %sub27 = sub nsw i32 %23, 97, !dbg !7272
  %add28 = add nsw i32 10, %sub27, !dbg !7273
  %24 = load i32, i32* %result, align 4, !dbg !7274
  %add29 = add nsw i32 %24, %add28, !dbg !7274
  store i32 %add29, i32* %result, align 4, !dbg !7274
  br label %sw.epilog, !dbg !7275

sw.epilog:                                        ; preds = %cond.end, %sw.bb25, %sw.bb21, %sw.bb
  %25 = load i32, i32* %result, align 4, !dbg !7276
  %cmp30 = icmp sge i32 %25, 1114112, !dbg !7278
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !7279

if.then32:                                        ; preds = %sw.epilog
  store i32 -1, i32* %retval, align 4, !dbg !7280
  br label %return, !dbg !7280

if.end:                                           ; preds = %sw.epilog
  br label %for.inc, !dbg !7281

for.inc:                                          ; preds = %if.end
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !7282
  %add.ptr33 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !7282
  store i8* %add.ptr33, i8** %ptr.addr, align 8, !dbg !7282
  br label %for.cond, !dbg !7283

for.end:                                          ; preds = %land.end
  br label %if.end67, !dbg !7285

if.else:                                          ; preds = %land.lhs.true, %entry
  br label %for.cond34, !dbg !7286

for.cond34:                                       ; preds = %for.inc64, %if.else
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !7288
  %arrayidx35 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !7288
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !7288
  %conv36 = sext i8 %28 to i32, !dbg !7288
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !7288
  br i1 %cmp37, label %land.rhs39, label %land.end44, !dbg !7288

land.rhs39:                                       ; preds = %for.cond34
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !7292
  %arrayidx40 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !7292
  %30 = load i8, i8* %arrayidx40, align 1, !dbg !7292
  %conv41 = sext i8 %30 to i32, !dbg !7292
  %cmp42 = icmp eq i32 %conv41, 59, !dbg !7292
  br label %land.end44

land.end44:                                       ; preds = %land.rhs39, %for.cond34
  %31 = phi i1 [ false, %for.cond34 ], [ %cmp42, %land.rhs39 ]
  %lnot45 = xor i1 %31, true, !dbg !7294
  br i1 %lnot45, label %for.body46, label %for.end66, !dbg !7296

for.body46:                                       ; preds = %land.end44
  call void @llvm.dbg.declare(metadata i32* %c47, metadata !7297, metadata !444), !dbg !7299
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !7300
  %arrayidx48 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !7300
  %33 = load i8, i8* %arrayidx48, align 1, !dbg !7300
  %conv49 = sext i8 %33 to i32, !dbg !7300
  %cmp50 = icmp eq i32 %conv49, 0, !dbg !7300
  br i1 %cmp50, label %cond.true52, label %cond.false55, !dbg !7300

cond.true52:                                      ; preds = %for.body46
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !7301
  %arrayidx53 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !7301
  %35 = load i8, i8* %arrayidx53, align 1, !dbg !7301
  %conv54 = sext i8 %35 to i32, !dbg !7301
  br label %cond.end56, !dbg !7301

cond.false55:                                     ; preds = %for.body46
  br label %cond.end56, !dbg !7303

cond.end56:                                       ; preds = %cond.false55, %cond.true52
  %cond57 = phi i32 [ %conv54, %cond.true52 ], [ -1, %cond.false55 ], !dbg !7305
  store i32 %cond57, i32* %c47, align 4, !dbg !7307
  %36 = load i32, i32* %result, align 4, !dbg !7308
  %mul = mul nsw i32 %36, 10, !dbg !7308
  store i32 %mul, i32* %result, align 4, !dbg !7308
  %37 = load i32, i32* %c47, align 4, !dbg !7309
  %sub58 = sub nsw i32 %37, 48, !dbg !7310
  %38 = load i32, i32* %result, align 4, !dbg !7311
  %add59 = add nsw i32 %38, %sub58, !dbg !7311
  store i32 %add59, i32* %result, align 4, !dbg !7311
  %39 = load i32, i32* %result, align 4, !dbg !7312
  %cmp60 = icmp sge i32 %39, 1114112, !dbg !7314
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !7315

if.then62:                                        ; preds = %cond.end56
  store i32 -1, i32* %retval, align 4, !dbg !7316
  br label %return, !dbg !7316

if.end63:                                         ; preds = %cond.end56
  br label %for.inc64, !dbg !7317

for.inc64:                                        ; preds = %if.end63
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !7318
  %add.ptr65 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !7318
  store i8* %add.ptr65, i8** %ptr.addr, align 8, !dbg !7318
  br label %for.cond34, !dbg !7320

for.end66:                                        ; preds = %land.end44
  br label %if.end67

if.end67:                                         ; preds = %for.end66, %for.end
  %41 = load i32, i32* %result, align 4, !dbg !7321
  %call = call i32 @checkCharRefNumber(i32 %41), !dbg !7322
  store i32 %call, i32* %retval, align 4, !dbg !7323
  br label %return, !dbg !7323

return:                                           ; preds = %if.end67, %if.then62, %if.then32
  %42 = load i32, i32* %retval, align 4, !dbg !7324
  ret i32 %42, !dbg !7324
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_predefinedEntityName(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end) #0 !dbg !324 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !7325, metadata !444), !dbg !7326
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7327, metadata !444), !dbg !7328
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7329, metadata !444), !dbg !7330
  %0 = load i8*, i8** %end.addr, align 8, !dbg !7331
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7332
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !7333
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !7333
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7333
  %div = sdiv i64 %sub.ptr.sub, 2, !dbg !7334
  switch i64 %div, label %sw.epilog137 [
    i64 2, label %sw.bb
    i64 3, label %sw.bb15
    i64 4, label %sw.bb51
  ], !dbg !7335

sw.bb:                                            ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !7336
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 2, !dbg !7336
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !7336
  %3 = load i8, i8* %arrayidx, align 1, !dbg !7336
  %conv = sext i8 %3 to i32, !dbg !7336
  %cmp = icmp eq i32 %conv, 0, !dbg !7336
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7336

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !7339
  %add.ptr2 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !7339
  %arrayidx3 = getelementptr inbounds i8, i8* %add.ptr2, i64 0, !dbg !7339
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !7339
  %conv4 = sext i8 %5 to i32, !dbg !7339
  %cmp5 = icmp eq i32 %conv4, 116, !dbg !7339
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7339

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !7341
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !7341
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !7341
  %conv8 = sext i8 %7 to i32, !dbg !7341
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !7341
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !7341

cond.true:                                        ; preds = %if.then
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !7343
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !7343
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !7343
  %conv12 = sext i8 %9 to i32, !dbg !7343
  br label %cond.end, !dbg !7343

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !7345

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv12, %cond.true ], [ -1, %cond.false ], !dbg !7347
  switch i32 %cond, label %sw.epilog [
    i32 108, label %sw.bb13
    i32 103, label %sw.bb14
  ], !dbg !7349

sw.bb13:                                          ; preds = %cond.end
  store i32 60, i32* %retval, align 4, !dbg !7350
  br label %return, !dbg !7350

sw.bb14:                                          ; preds = %cond.end
  store i32 62, i32* %retval, align 4, !dbg !7352
  br label %return, !dbg !7352

sw.epilog:                                        ; preds = %cond.end
  br label %if.end, !dbg !7353

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %sw.bb
  br label %sw.epilog137, !dbg !7354

sw.bb15:                                          ; preds = %entry
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !7355
  %arrayidx16 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !7355
  %11 = load i8, i8* %arrayidx16, align 1, !dbg !7355
  %conv17 = sext i8 %11 to i32, !dbg !7355
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !7355
  br i1 %cmp18, label %land.lhs.true20, label %if.end50, !dbg !7355

land.lhs.true20:                                  ; preds = %sw.bb15
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !7357
  %arrayidx21 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !7357
  %13 = load i8, i8* %arrayidx21, align 1, !dbg !7357
  %conv22 = sext i8 %13 to i32, !dbg !7357
  %cmp23 = icmp eq i32 %conv22, 97, !dbg !7357
  br i1 %cmp23, label %if.then25, label %if.end50, !dbg !7357

if.then25:                                        ; preds = %land.lhs.true20
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !7359
  %add.ptr26 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !7359
  store i8* %add.ptr26, i8** %ptr.addr, align 8, !dbg !7359
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !7361
  %arrayidx27 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !7361
  %16 = load i8, i8* %arrayidx27, align 1, !dbg !7361
  %conv28 = sext i8 %16 to i32, !dbg !7361
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !7361
  br i1 %cmp29, label %land.lhs.true31, label %if.end49, !dbg !7361

land.lhs.true31:                                  ; preds = %if.then25
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !7363
  %arrayidx32 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !7363
  %18 = load i8, i8* %arrayidx32, align 1, !dbg !7363
  %conv33 = sext i8 %18 to i32, !dbg !7363
  %cmp34 = icmp eq i32 %conv33, 109, !dbg !7363
  br i1 %cmp34, label %if.then36, label %if.end49, !dbg !7363

if.then36:                                        ; preds = %land.lhs.true31
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !7365
  %add.ptr37 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !7365
  store i8* %add.ptr37, i8** %ptr.addr, align 8, !dbg !7365
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !7367
  %arrayidx38 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !7367
  %21 = load i8, i8* %arrayidx38, align 1, !dbg !7367
  %conv39 = sext i8 %21 to i32, !dbg !7367
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !7367
  br i1 %cmp40, label %land.lhs.true42, label %if.end48, !dbg !7367

land.lhs.true42:                                  ; preds = %if.then36
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !7369
  %arrayidx43 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !7369
  %23 = load i8, i8* %arrayidx43, align 1, !dbg !7369
  %conv44 = sext i8 %23 to i32, !dbg !7369
  %cmp45 = icmp eq i32 %conv44, 112, !dbg !7369
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !7369

if.then47:                                        ; preds = %land.lhs.true42
  store i32 38, i32* %retval, align 4, !dbg !7371
  br label %return, !dbg !7371

if.end48:                                         ; preds = %land.lhs.true42, %if.then36
  br label %if.end49, !dbg !7372

if.end49:                                         ; preds = %if.end48, %land.lhs.true31, %if.then25
  br label %if.end50, !dbg !7373

if.end50:                                         ; preds = %if.end49, %land.lhs.true20, %sw.bb15
  br label %sw.epilog137, !dbg !7374

sw.bb51:                                          ; preds = %entry
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !7375
  %arrayidx52 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !7375
  %25 = load i8, i8* %arrayidx52, align 1, !dbg !7375
  %conv53 = sext i8 %25 to i32, !dbg !7375
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !7375
  br i1 %cmp54, label %cond.true56, label %cond.false59, !dbg !7375

cond.true56:                                      ; preds = %sw.bb51
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !7376
  %arrayidx57 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !7376
  %27 = load i8, i8* %arrayidx57, align 1, !dbg !7376
  %conv58 = sext i8 %27 to i32, !dbg !7376
  br label %cond.end60, !dbg !7376

cond.false59:                                     ; preds = %sw.bb51
  br label %cond.end60, !dbg !7378

cond.end60:                                       ; preds = %cond.false59, %cond.true56
  %cond61 = phi i32 [ %conv58, %cond.true56 ], [ -1, %cond.false59 ], !dbg !7380
  switch i32 %cond61, label %sw.epilog136 [
    i32 113, label %sw.bb62
    i32 97, label %sw.bb99
  ], !dbg !7382

sw.bb62:                                          ; preds = %cond.end60
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !7383
  %add.ptr63 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !7383
  store i8* %add.ptr63, i8** %ptr.addr, align 8, !dbg !7383
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !7385
  %arrayidx64 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !7385
  %30 = load i8, i8* %arrayidx64, align 1, !dbg !7385
  %conv65 = sext i8 %30 to i32, !dbg !7385
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !7385
  br i1 %cmp66, label %land.lhs.true68, label %if.end98, !dbg !7385

land.lhs.true68:                                  ; preds = %sw.bb62
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !7387
  %arrayidx69 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !7387
  %32 = load i8, i8* %arrayidx69, align 1, !dbg !7387
  %conv70 = sext i8 %32 to i32, !dbg !7387
  %cmp71 = icmp eq i32 %conv70, 117, !dbg !7387
  br i1 %cmp71, label %if.then73, label %if.end98, !dbg !7387

if.then73:                                        ; preds = %land.lhs.true68
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !7389
  %add.ptr74 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !7389
  store i8* %add.ptr74, i8** %ptr.addr, align 8, !dbg !7389
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !7391
  %arrayidx75 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !7391
  %35 = load i8, i8* %arrayidx75, align 1, !dbg !7391
  %conv76 = sext i8 %35 to i32, !dbg !7391
  %cmp77 = icmp eq i32 %conv76, 0, !dbg !7391
  br i1 %cmp77, label %land.lhs.true79, label %if.end97, !dbg !7391

land.lhs.true79:                                  ; preds = %if.then73
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !7393
  %arrayidx80 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !7393
  %37 = load i8, i8* %arrayidx80, align 1, !dbg !7393
  %conv81 = sext i8 %37 to i32, !dbg !7393
  %cmp82 = icmp eq i32 %conv81, 111, !dbg !7393
  br i1 %cmp82, label %if.then84, label %if.end97, !dbg !7393

if.then84:                                        ; preds = %land.lhs.true79
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !7395
  %add.ptr85 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !7395
  store i8* %add.ptr85, i8** %ptr.addr, align 8, !dbg !7395
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !7397
  %arrayidx86 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !7397
  %40 = load i8, i8* %arrayidx86, align 1, !dbg !7397
  %conv87 = sext i8 %40 to i32, !dbg !7397
  %cmp88 = icmp eq i32 %conv87, 0, !dbg !7397
  br i1 %cmp88, label %land.lhs.true90, label %if.end96, !dbg !7397

land.lhs.true90:                                  ; preds = %if.then84
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !7399
  %arrayidx91 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !7399
  %42 = load i8, i8* %arrayidx91, align 1, !dbg !7399
  %conv92 = sext i8 %42 to i32, !dbg !7399
  %cmp93 = icmp eq i32 %conv92, 116, !dbg !7399
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !7399

if.then95:                                        ; preds = %land.lhs.true90
  store i32 34, i32* %retval, align 4, !dbg !7401
  br label %return, !dbg !7401

if.end96:                                         ; preds = %land.lhs.true90, %if.then84
  br label %if.end97, !dbg !7402

if.end97:                                         ; preds = %if.end96, %land.lhs.true79, %if.then73
  br label %if.end98, !dbg !7403

if.end98:                                         ; preds = %if.end97, %land.lhs.true68, %sw.bb62
  br label %sw.epilog136, !dbg !7404

sw.bb99:                                          ; preds = %cond.end60
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !7405
  %add.ptr100 = getelementptr inbounds i8, i8* %43, i64 2, !dbg !7405
  store i8* %add.ptr100, i8** %ptr.addr, align 8, !dbg !7405
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !7406
  %arrayidx101 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !7406
  %45 = load i8, i8* %arrayidx101, align 1, !dbg !7406
  %conv102 = sext i8 %45 to i32, !dbg !7406
  %cmp103 = icmp eq i32 %conv102, 0, !dbg !7406
  br i1 %cmp103, label %land.lhs.true105, label %if.end135, !dbg !7406

land.lhs.true105:                                 ; preds = %sw.bb99
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !7408
  %arrayidx106 = getelementptr inbounds i8, i8* %46, i64 0, !dbg !7408
  %47 = load i8, i8* %arrayidx106, align 1, !dbg !7408
  %conv107 = sext i8 %47 to i32, !dbg !7408
  %cmp108 = icmp eq i32 %conv107, 112, !dbg !7408
  br i1 %cmp108, label %if.then110, label %if.end135, !dbg !7408

if.then110:                                       ; preds = %land.lhs.true105
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !7410
  %add.ptr111 = getelementptr inbounds i8, i8* %48, i64 2, !dbg !7410
  store i8* %add.ptr111, i8** %ptr.addr, align 8, !dbg !7410
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !7412
  %arrayidx112 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !7412
  %50 = load i8, i8* %arrayidx112, align 1, !dbg !7412
  %conv113 = sext i8 %50 to i32, !dbg !7412
  %cmp114 = icmp eq i32 %conv113, 0, !dbg !7412
  br i1 %cmp114, label %land.lhs.true116, label %if.end134, !dbg !7412

land.lhs.true116:                                 ; preds = %if.then110
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !7414
  %arrayidx117 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !7414
  %52 = load i8, i8* %arrayidx117, align 1, !dbg !7414
  %conv118 = sext i8 %52 to i32, !dbg !7414
  %cmp119 = icmp eq i32 %conv118, 111, !dbg !7414
  br i1 %cmp119, label %if.then121, label %if.end134, !dbg !7414

if.then121:                                       ; preds = %land.lhs.true116
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !7416
  %add.ptr122 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !7416
  store i8* %add.ptr122, i8** %ptr.addr, align 8, !dbg !7416
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !7418
  %arrayidx123 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !7418
  %55 = load i8, i8* %arrayidx123, align 1, !dbg !7418
  %conv124 = sext i8 %55 to i32, !dbg !7418
  %cmp125 = icmp eq i32 %conv124, 0, !dbg !7418
  br i1 %cmp125, label %land.lhs.true127, label %if.end133, !dbg !7418

land.lhs.true127:                                 ; preds = %if.then121
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !7420
  %arrayidx128 = getelementptr inbounds i8, i8* %56, i64 0, !dbg !7420
  %57 = load i8, i8* %arrayidx128, align 1, !dbg !7420
  %conv129 = sext i8 %57 to i32, !dbg !7420
  %cmp130 = icmp eq i32 %conv129, 115, !dbg !7420
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !7420

if.then132:                                       ; preds = %land.lhs.true127
  store i32 39, i32* %retval, align 4, !dbg !7422
  br label %return, !dbg !7422

if.end133:                                        ; preds = %land.lhs.true127, %if.then121
  br label %if.end134, !dbg !7423

if.end134:                                        ; preds = %if.end133, %land.lhs.true116, %if.then110
  br label %if.end135, !dbg !7424

if.end135:                                        ; preds = %if.end134, %land.lhs.true105, %sw.bb99
  br label %sw.epilog136, !dbg !7425

sw.epilog136:                                     ; preds = %cond.end60, %if.end135, %if.end98
  br label %sw.epilog137, !dbg !7426

sw.epilog137:                                     ; preds = %sw.epilog136, %entry, %if.end50, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7427
  br label %return, !dbg !7427

return:                                           ; preds = %sw.epilog137, %if.then132, %if.then95, %if.then47, %sw.bb14, %sw.bb13
  %58 = load i32, i32* %retval, align 4, !dbg !7428
  ret i32 %58, !dbg !7428
}

; Function Attrs: nounwind uwtable
define internal void @little2_updatePosition(%struct.encoding* %enc, i8* %ptr, i8* %end, %struct.position* %pos) #0 !dbg !325 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pos.addr = alloca %struct.position*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7429, metadata !444), !dbg !7430
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7431, metadata !444), !dbg !7432
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7433, metadata !444), !dbg !7434
  store %struct.position* %pos, %struct.position** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.position** %pos.addr, metadata !7435, metadata !444), !dbg !7436
  br label %while.cond, !dbg !7437

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !7438
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7438
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !7438
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !7438
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7438
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !7438
  br i1 %cmp, label %while.body, label %while.end, !dbg !7440

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !7441
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !7441
  %3 = load i8, i8* %arrayidx, align 1, !dbg !7441
  %conv = sext i8 %3 to i32, !dbg !7441
  %cmp1 = icmp eq i32 %conv, 0, !dbg !7441
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !7441

cond.true:                                        ; preds = %while.body
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !7443
  %5 = load i8, i8* %4, align 1, !dbg !7443
  %idxprom = zext i8 %5 to i64, !dbg !7443
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7443
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !7443
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !7443
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !7443
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !7443
  %conv4 = zext i8 %8 to i32, !dbg !7443
  br label %cond.end, !dbg !7443

cond.false:                                       ; preds = %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !7445
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !7445
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !7445
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !7445
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !7445
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !7445
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !7445
  br label %cond.end, !dbg !7445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !7447
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb7
    i32 7, label %sw.bb9
    i32 10, label %sw.bb11
    i32 9, label %sw.bb13
  ], !dbg !7449

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !7450
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 2, !dbg !7450
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !7450
  br label %sw.epilog, !dbg !7450

sw.bb7:                                           ; preds = %cond.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !7452
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 3, !dbg !7452
  store i8* %add.ptr8, i8** %ptr.addr, align 8, !dbg !7452
  br label %sw.epilog, !dbg !7452

sw.bb9:                                           ; preds = %cond.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !7454
  %add.ptr10 = getelementptr inbounds i8, i8* %15, i64 4, !dbg !7454
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !7454
  br label %sw.epilog, !dbg !7454

sw.bb11:                                          ; preds = %cond.end
  %16 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !7456
  %columnNumber = getelementptr inbounds %struct.position, %struct.position* %16, i32 0, i32 1, !dbg !7457
  store i64 -1, i64* %columnNumber, align 8, !dbg !7458
  %17 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !7459
  %lineNumber = getelementptr inbounds %struct.position, %struct.position* %17, i32 0, i32 0, !dbg !7460
  %18 = load i64, i64* %lineNumber, align 8, !dbg !7461
  %inc = add i64 %18, 1, !dbg !7461
  store i64 %inc, i64* %lineNumber, align 8, !dbg !7461
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !7462
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !7462
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !7462
  br label %sw.epilog, !dbg !7463

sw.bb13:                                          ; preds = %cond.end
  %20 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !7464
  %lineNumber14 = getelementptr inbounds %struct.position, %struct.position* %20, i32 0, i32 0, !dbg !7465
  %21 = load i64, i64* %lineNumber14, align 8, !dbg !7466
  %inc15 = add i64 %21, 1, !dbg !7466
  store i64 %inc15, i64* %lineNumber14, align 8, !dbg !7466
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !7467
  %add.ptr16 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !7467
  store i8* %add.ptr16, i8** %ptr.addr, align 8, !dbg !7467
  %23 = load i8*, i8** %end.addr, align 8, !dbg !7468
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !7468
  %sub.ptr.lhs.cast17 = ptrtoint i8* %23 to i64, !dbg !7468
  %sub.ptr.rhs.cast18 = ptrtoint i8* %24 to i64, !dbg !7468
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !7468
  %cmp20 = icmp sge i64 %sub.ptr.sub19, 2, !dbg !7468
  br i1 %cmp20, label %land.lhs.true, label %if.end, !dbg !7470

land.lhs.true:                                    ; preds = %sw.bb13
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !7471
  %arrayidx22 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !7471
  %26 = load i8, i8* %arrayidx22, align 1, !dbg !7471
  %conv23 = sext i8 %26 to i32, !dbg !7471
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !7471
  br i1 %cmp24, label %cond.true26, label %cond.false31, !dbg !7471

cond.true26:                                      ; preds = %land.lhs.true
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !7473
  %28 = load i8, i8* %27, align 1, !dbg !7473
  %idxprom27 = zext i8 %28 to i64, !dbg !7473
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7473
  %30 = bitcast %struct.encoding* %29 to %struct.normal_encoding*, !dbg !7473
  %type28 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %30, i32 0, i32 1, !dbg !7473
  %arrayidx29 = getelementptr inbounds [256 x i8], [256 x i8]* %type28, i64 0, i64 %idxprom27, !dbg !7473
  %31 = load i8, i8* %arrayidx29, align 1, !dbg !7473
  %conv30 = zext i8 %31 to i32, !dbg !7473
  br label %cond.end35, !dbg !7473

cond.false31:                                     ; preds = %land.lhs.true
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !7475
  %arrayidx32 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !7475
  %33 = load i8, i8* %arrayidx32, align 1, !dbg !7475
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !7475
  %arrayidx33 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !7475
  %35 = load i8, i8* %arrayidx33, align 1, !dbg !7475
  %call34 = call i32 @unicode_byte_type(i8 signext %33, i8 signext %35), !dbg !7475
  br label %cond.end35, !dbg !7475

cond.end35:                                       ; preds = %cond.false31, %cond.true26
  %cond36 = phi i32 [ %conv30, %cond.true26 ], [ %call34, %cond.false31 ], !dbg !7477
  %cmp37 = icmp eq i32 %cond36, 10, !dbg !7479
  br i1 %cmp37, label %if.then, label %if.end, !dbg !7480

if.then:                                          ; preds = %cond.end35
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !7481
  %add.ptr39 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !7481
  store i8* %add.ptr39, i8** %ptr.addr, align 8, !dbg !7481
  br label %if.end, !dbg !7482

if.end:                                           ; preds = %if.then, %cond.end35, %sw.bb13
  %37 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !7483
  %columnNumber40 = getelementptr inbounds %struct.position, %struct.position* %37, i32 0, i32 1, !dbg !7484
  store i64 -1, i64* %columnNumber40, align 8, !dbg !7485
  br label %sw.epilog, !dbg !7486

sw.default:                                       ; preds = %cond.end
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !7487
  %add.ptr41 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !7487
  store i8* %add.ptr41, i8** %ptr.addr, align 8, !dbg !7487
  br label %sw.epilog, !dbg !7488

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb
  %39 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !7489
  %columnNumber42 = getelementptr inbounds %struct.position, %struct.position* %39, i32 0, i32 1, !dbg !7490
  %40 = load i64, i64* %columnNumber42, align 8, !dbg !7491
  %inc43 = add i64 %40, 1, !dbg !7491
  store i64 %inc43, i64* %columnNumber42, align 8, !dbg !7491
  br label %while.cond, !dbg !7492

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7494
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_isPublicId(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %badPtr) #0 !dbg !326 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %badPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7495, metadata !444), !dbg !7496
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7497, metadata !444), !dbg !7498
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7499, metadata !444), !dbg !7500
  store i8** %badPtr, i8*** %badPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %badPtr.addr, metadata !7501, metadata !444), !dbg !7502
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7503
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 2, !dbg !7503
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !7503
  %1 = load i8*, i8** %end.addr, align 8, !dbg !7504
  %add.ptr1 = getelementptr inbounds i8, i8* %1, i64 -2, !dbg !7504
  store i8* %add.ptr1, i8** %end.addr, align 8, !dbg !7504
  br label %for.cond, !dbg !7505

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %end.addr, align 8, !dbg !7506
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !7506
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !7506
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !7506
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7506
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !7506
  br i1 %cmp, label %for.body, label %for.end, !dbg !7510

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !7511
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 1, !dbg !7511
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7511
  %conv = sext i8 %5 to i32, !dbg !7511
  %cmp2 = icmp eq i32 %conv, 0, !dbg !7511
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7511

cond.true:                                        ; preds = %for.body
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !7513
  %7 = load i8, i8* %6, align 1, !dbg !7513
  %idxprom = zext i8 %7 to i64, !dbg !7513
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7513
  %9 = bitcast %struct.encoding* %8 to %struct.normal_encoding*, !dbg !7513
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %9, i32 0, i32 1, !dbg !7513
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !7513
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !7513
  %conv5 = zext i8 %10 to i32, !dbg !7513
  br label %cond.end, !dbg !7513

cond.false:                                       ; preds = %for.body
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !7515
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !7515
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !7515
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !7515
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !7515
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !7515
  %call = call i32 @unicode_byte_type(i8 signext %12, i8 signext %14), !dbg !7515
  br label %cond.end, !dbg !7515

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !7517
  switch i32 %cond, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
    i32 27, label %sw.bb
    i32 13, label %sw.bb
    i32 31, label %sw.bb
    i32 32, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 17, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 18, label %sw.bb
    i32 16, label %sw.bb
    i32 33, label %sw.bb
    i32 30, label %sw.bb
    i32 19, label %sw.bb
    i32 21, label %sw.bb8
    i32 26, label %sw.bb17
    i32 22, label %sw.bb17
  ], !dbg !7519

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  br label %sw.epilog42, !dbg !7520

sw.bb8:                                           ; preds = %cond.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !7522
  %arrayidx9 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !7522
  %16 = load i8, i8* %arrayidx9, align 1, !dbg !7522
  %conv10 = sext i8 %16 to i32, !dbg !7522
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !7522
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !7522

land.lhs.true:                                    ; preds = %sw.bb8
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !7524
  %arrayidx13 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !7524
  %18 = load i8, i8* %arrayidx13, align 1, !dbg !7524
  %conv14 = sext i8 %18 to i32, !dbg !7524
  %cmp15 = icmp eq i32 %conv14, 9, !dbg !7524
  br i1 %cmp15, label %if.then, label %if.end, !dbg !7524

if.then:                                          ; preds = %land.lhs.true
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !7526
  %20 = load i8**, i8*** %badPtr.addr, align 8, !dbg !7528
  store i8* %19, i8** %20, align 8, !dbg !7529
  store i32 0, i32* %retval, align 4, !dbg !7530
  br label %return, !dbg !7530

if.end:                                           ; preds = %land.lhs.true, %sw.bb8
  br label %sw.epilog42, !dbg !7531

sw.bb17:                                          ; preds = %cond.end, %cond.end
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !7532
  %arrayidx18 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !7532
  %22 = load i8, i8* %arrayidx18, align 1, !dbg !7532
  %conv19 = sext i8 %22 to i32, !dbg !7532
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !7532
  br i1 %cmp20, label %cond.true22, label %cond.false25, !dbg !7532

cond.true22:                                      ; preds = %sw.bb17
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !7534
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !7534
  %24 = load i8, i8* %arrayidx23, align 1, !dbg !7534
  %conv24 = sext i8 %24 to i32, !dbg !7534
  br label %cond.end26, !dbg !7534

cond.false25:                                     ; preds = %sw.bb17
  br label %cond.end26, !dbg !7536

cond.end26:                                       ; preds = %cond.false25, %cond.true22
  %cond27 = phi i32 [ %conv24, %cond.true22 ], [ -1, %cond.false25 ], !dbg !7538
  %and = and i32 %cond27, -128, !dbg !7540
  %tobool = icmp ne i32 %and, 0, !dbg !7540
  br i1 %tobool, label %if.end29, label %if.then28, !dbg !7541

if.then28:                                        ; preds = %cond.end26
  br label %sw.epilog42, !dbg !7542

if.end29:                                         ; preds = %cond.end26
  br label %sw.default, !dbg !7543

sw.default:                                       ; preds = %cond.end, %if.end29
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !7545
  %arrayidx30 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !7545
  %26 = load i8, i8* %arrayidx30, align 1, !dbg !7545
  %conv31 = sext i8 %26 to i32, !dbg !7545
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !7545
  br i1 %cmp32, label %cond.true34, label %cond.false37, !dbg !7545

cond.true34:                                      ; preds = %sw.default
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !7546
  %arrayidx35 = getelementptr inbounds i8, i8* %27, i64 0, !dbg !7546
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !7546
  %conv36 = sext i8 %28 to i32, !dbg !7546
  br label %cond.end38, !dbg !7546

cond.false37:                                     ; preds = %sw.default
  br label %cond.end38, !dbg !7548

cond.end38:                                       ; preds = %cond.false37, %cond.true34
  %cond39 = phi i32 [ %conv36, %cond.true34 ], [ -1, %cond.false37 ], !dbg !7550
  switch i32 %cond39, label %sw.default41 [
    i32 36, label %sw.bb40
    i32 64, label %sw.bb40
  ], !dbg !7552

sw.bb40:                                          ; preds = %cond.end38, %cond.end38
  br label %sw.epilog, !dbg !7553

sw.default41:                                     ; preds = %cond.end38
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !7555
  %30 = load i8**, i8*** %badPtr.addr, align 8, !dbg !7556
  store i8* %29, i8** %30, align 8, !dbg !7557
  store i32 0, i32* %retval, align 4, !dbg !7558
  br label %return, !dbg !7558

sw.epilog:                                        ; preds = %sw.bb40
  br label %sw.epilog42, !dbg !7559

sw.epilog42:                                      ; preds = %sw.epilog, %if.then28, %if.end, %sw.bb
  br label %for.inc, !dbg !7560

for.inc:                                          ; preds = %sw.epilog42
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !7561
  %add.ptr43 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !7561
  store i8* %add.ptr43, i8** %ptr.addr, align 8, !dbg !7561
  br label %for.cond, !dbg !7563

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !7564
  br label %return, !dbg !7564

return:                                           ; preds = %for.end, %sw.default41, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7565
  ret i32 %32, !dbg !7565
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_toUtf8(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i8** %toP, i8* %toLim) #0 !dbg !327 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i8**, align 8
  %toLim.addr = alloca i8*, align 8
  %from = alloca i8*, align 8
  %plane = alloca i32, align 4
  %lo2 = alloca i8, align 1
  %lo = alloca i8, align 1
  %hi = alloca i8, align 1
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !7566, metadata !444), !dbg !7567
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !7568, metadata !444), !dbg !7567
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !7569, metadata !444), !dbg !7567
  store i8** %toP, i8*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %toP.addr, metadata !7570, metadata !444), !dbg !7567
  store i8* %toLim, i8** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toLim.addr, metadata !7571, metadata !444), !dbg !7567
  call void @llvm.dbg.declare(metadata i8** %from, metadata !7572, metadata !444), !dbg !7567
  %0 = load i8**, i8*** %fromP.addr, align 8, !dbg !7567
  %1 = load i8*, i8** %0, align 8, !dbg !7567
  store i8* %1, i8** %from, align 8, !dbg !7567
  %2 = load i8*, i8** %from, align 8, !dbg !7567
  %3 = load i8*, i8** %fromLim.addr, align 8, !dbg !7567
  %4 = load i8*, i8** %from, align 8, !dbg !7567
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !7567
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !7567
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7567
  %shr = ashr i64 %sub.ptr.sub, 1, !dbg !7567
  %shl = shl i64 %shr, 1, !dbg !7567
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %shl, !dbg !7567
  store i8* %add.ptr, i8** %fromLim.addr, align 8, !dbg !7567
  br label %for.cond, !dbg !7567

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i8*, i8** %from, align 8, !dbg !7573
  %6 = load i8*, i8** %fromLim.addr, align 8, !dbg !7573
  %cmp = icmp ult i8* %5, %6, !dbg !7573
  br i1 %cmp, label %for.body, label %for.end, !dbg !7573

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !7577, metadata !444), !dbg !7579
  call void @llvm.dbg.declare(metadata i8* %lo2, metadata !7580, metadata !444), !dbg !7579
  call void @llvm.dbg.declare(metadata i8* %lo, metadata !7581, metadata !444), !dbg !7579
  %7 = load i8*, i8** %from, align 8, !dbg !7582
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !7582
  %8 = load i8, i8* %arrayidx, align 1, !dbg !7582
  store i8 %8, i8* %lo, align 1, !dbg !7582
  call void @llvm.dbg.declare(metadata i8* %hi, metadata !7584, metadata !444), !dbg !7579
  %9 = load i8*, i8** %from, align 8, !dbg !7582
  %arrayidx1 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !7582
  %10 = load i8, i8* %arrayidx1, align 1, !dbg !7582
  store i8 %10, i8* %hi, align 1, !dbg !7582
  %11 = load i8, i8* %hi, align 1, !dbg !7582
  %conv = zext i8 %11 to i32, !dbg !7582
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb9
    i32 3, label %sw.bb9
    i32 4, label %sw.bb9
    i32 5, label %sw.bb9
    i32 6, label %sw.bb9
    i32 7, label %sw.bb9
    i32 216, label %sw.bb54
    i32 217, label %sw.bb54
    i32 218, label %sw.bb54
    i32 219, label %sw.bb54
  ], !dbg !7582

sw.bb:                                            ; preds = %for.body
  %12 = load i8, i8* %lo, align 1, !dbg !7585
  %conv2 = zext i8 %12 to i32, !dbg !7585
  %cmp3 = icmp slt i32 %conv2, 128, !dbg !7585
  br i1 %cmp3, label %if.then, label %if.end8, !dbg !7585

if.then:                                          ; preds = %sw.bb
  %13 = load i8**, i8*** %toP.addr, align 8, !dbg !7589
  %14 = load i8*, i8** %13, align 8, !dbg !7589
  %15 = load i8*, i8** %toLim.addr, align 8, !dbg !7589
  %cmp5 = icmp eq i8* %14, %15, !dbg !7589
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !7589

if.then7:                                         ; preds = %if.then
  %16 = load i8*, i8** %from, align 8, !dbg !7593
  %17 = load i8**, i8*** %fromP.addr, align 8, !dbg !7593
  store i8* %16, i8** %17, align 8, !dbg !7593
  store i32 2, i32* %retval, align 4, !dbg !7593
  br label %return, !dbg !7593

if.end:                                           ; preds = %if.then
  %18 = load i8, i8* %lo, align 1, !dbg !7596
  %19 = load i8**, i8*** %toP.addr, align 8, !dbg !7596
  %20 = load i8*, i8** %19, align 8, !dbg !7596
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !7596
  store i8* %incdec.ptr, i8** %19, align 8, !dbg !7596
  store i8 %18, i8* %20, align 1, !dbg !7596
  br label %sw.epilog, !dbg !7596

if.end8:                                          ; preds = %sw.bb
  br label %sw.bb9, !dbg !7598

sw.bb9:                                           ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %if.end8
  %21 = load i8*, i8** %toLim.addr, align 8, !dbg !7600
  %22 = load i8**, i8*** %toP.addr, align 8, !dbg !7600
  %23 = load i8*, i8** %22, align 8, !dbg !7600
  %sub.ptr.lhs.cast10 = ptrtoint i8* %21 to i64, !dbg !7600
  %sub.ptr.rhs.cast11 = ptrtoint i8* %23 to i64, !dbg !7600
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !7600
  %cmp13 = icmp slt i64 %sub.ptr.sub12, 2, !dbg !7600
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7600

if.then15:                                        ; preds = %sw.bb9
  %24 = load i8*, i8** %from, align 8, !dbg !7603
  %25 = load i8**, i8*** %fromP.addr, align 8, !dbg !7603
  store i8* %24, i8** %25, align 8, !dbg !7603
  store i32 2, i32* %retval, align 4, !dbg !7603
  br label %return, !dbg !7603

if.end16:                                         ; preds = %sw.bb9
  %26 = load i8, i8* %lo, align 1, !dbg !7606
  %conv17 = zext i8 %26 to i32, !dbg !7606
  %shr18 = ashr i32 %conv17, 6, !dbg !7606
  %27 = load i8, i8* %hi, align 1, !dbg !7606
  %conv19 = zext i8 %27 to i32, !dbg !7606
  %shl20 = shl i32 %conv19, 2, !dbg !7606
  %or = or i32 %shr18, %shl20, !dbg !7606
  %or21 = or i32 %or, 192, !dbg !7606
  %conv22 = trunc i32 %or21 to i8, !dbg !7606
  %28 = load i8**, i8*** %toP.addr, align 8, !dbg !7606
  %29 = load i8*, i8** %28, align 8, !dbg !7606
  %incdec.ptr23 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !7606
  store i8* %incdec.ptr23, i8** %28, align 8, !dbg !7606
  store i8 %conv22, i8* %29, align 1, !dbg !7606
  %30 = load i8, i8* %lo, align 1, !dbg !7606
  %conv24 = zext i8 %30 to i32, !dbg !7606
  %and = and i32 %conv24, 63, !dbg !7606
  %or25 = or i32 %and, 128, !dbg !7606
  %conv26 = trunc i32 %or25 to i8, !dbg !7606
  %31 = load i8**, i8*** %toP.addr, align 8, !dbg !7606
  %32 = load i8*, i8** %31, align 8, !dbg !7606
  %incdec.ptr27 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7606
  store i8* %incdec.ptr27, i8** %31, align 8, !dbg !7606
  store i8 %conv26, i8* %32, align 1, !dbg !7606
  br label %sw.epilog, !dbg !7606

sw.default:                                       ; preds = %for.body
  %33 = load i8*, i8** %toLim.addr, align 8, !dbg !7608
  %34 = load i8**, i8*** %toP.addr, align 8, !dbg !7608
  %35 = load i8*, i8** %34, align 8, !dbg !7608
  %sub.ptr.lhs.cast28 = ptrtoint i8* %33 to i64, !dbg !7608
  %sub.ptr.rhs.cast29 = ptrtoint i8* %35 to i64, !dbg !7608
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29, !dbg !7608
  %cmp31 = icmp slt i64 %sub.ptr.sub30, 3, !dbg !7608
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7608

if.then33:                                        ; preds = %sw.default
  %36 = load i8*, i8** %from, align 8, !dbg !7611
  %37 = load i8**, i8*** %fromP.addr, align 8, !dbg !7611
  store i8* %36, i8** %37, align 8, !dbg !7611
  store i32 2, i32* %retval, align 4, !dbg !7611
  br label %return, !dbg !7611

if.end34:                                         ; preds = %sw.default
  %38 = load i8, i8* %hi, align 1, !dbg !7614
  %conv35 = zext i8 %38 to i32, !dbg !7614
  %shr36 = ashr i32 %conv35, 4, !dbg !7614
  %or37 = or i32 %shr36, 224, !dbg !7614
  %conv38 = trunc i32 %or37 to i8, !dbg !7614
  %39 = load i8**, i8*** %toP.addr, align 8, !dbg !7614
  %40 = load i8*, i8** %39, align 8, !dbg !7614
  %incdec.ptr39 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !7614
  store i8* %incdec.ptr39, i8** %39, align 8, !dbg !7614
  store i8 %conv38, i8* %40, align 1, !dbg !7614
  %41 = load i8, i8* %hi, align 1, !dbg !7614
  %conv40 = zext i8 %41 to i32, !dbg !7614
  %and41 = and i32 %conv40, 15, !dbg !7614
  %shl42 = shl i32 %and41, 2, !dbg !7614
  %42 = load i8, i8* %lo, align 1, !dbg !7614
  %conv43 = zext i8 %42 to i32, !dbg !7614
  %shr44 = ashr i32 %conv43, 6, !dbg !7614
  %or45 = or i32 %shl42, %shr44, !dbg !7614
  %or46 = or i32 %or45, 128, !dbg !7614
  %conv47 = trunc i32 %or46 to i8, !dbg !7614
  %43 = load i8**, i8*** %toP.addr, align 8, !dbg !7614
  %44 = load i8*, i8** %43, align 8, !dbg !7614
  %incdec.ptr48 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !7614
  store i8* %incdec.ptr48, i8** %43, align 8, !dbg !7614
  store i8 %conv47, i8* %44, align 1, !dbg !7614
  %45 = load i8, i8* %lo, align 1, !dbg !7614
  %conv49 = zext i8 %45 to i32, !dbg !7614
  %and50 = and i32 %conv49, 63, !dbg !7614
  %or51 = or i32 %and50, 128, !dbg !7614
  %conv52 = trunc i32 %or51 to i8, !dbg !7614
  %46 = load i8**, i8*** %toP.addr, align 8, !dbg !7614
  %47 = load i8*, i8** %46, align 8, !dbg !7614
  %incdec.ptr53 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !7614
  store i8* %incdec.ptr53, i8** %46, align 8, !dbg !7614
  store i8 %conv52, i8* %47, align 1, !dbg !7614
  br label %sw.epilog, !dbg !7614

sw.bb54:                                          ; preds = %for.body, %for.body, %for.body, %for.body
  %48 = load i8*, i8** %toLim.addr, align 8, !dbg !7616
  %49 = load i8**, i8*** %toP.addr, align 8, !dbg !7616
  %50 = load i8*, i8** %49, align 8, !dbg !7616
  %sub.ptr.lhs.cast55 = ptrtoint i8* %48 to i64, !dbg !7616
  %sub.ptr.rhs.cast56 = ptrtoint i8* %50 to i64, !dbg !7616
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !7616
  %cmp58 = icmp slt i64 %sub.ptr.sub57, 4, !dbg !7616
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !7616

if.then60:                                        ; preds = %sw.bb54
  %51 = load i8*, i8** %from, align 8, !dbg !7619
  %52 = load i8**, i8*** %fromP.addr, align 8, !dbg !7619
  store i8* %51, i8** %52, align 8, !dbg !7619
  store i32 2, i32* %retval, align 4, !dbg !7619
  br label %return, !dbg !7619

if.end61:                                         ; preds = %sw.bb54
  %53 = load i8*, i8** %fromLim.addr, align 8, !dbg !7622
  %54 = load i8*, i8** %from, align 8, !dbg !7622
  %sub.ptr.lhs.cast62 = ptrtoint i8* %53 to i64, !dbg !7622
  %sub.ptr.rhs.cast63 = ptrtoint i8* %54 to i64, !dbg !7622
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63, !dbg !7622
  %cmp65 = icmp slt i64 %sub.ptr.sub64, 4, !dbg !7622
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !7622

if.then67:                                        ; preds = %if.end61
  %55 = load i8*, i8** %from, align 8, !dbg !7625
  %56 = load i8**, i8*** %fromP.addr, align 8, !dbg !7625
  store i8* %55, i8** %56, align 8, !dbg !7625
  store i32 1, i32* %retval, align 4, !dbg !7625
  br label %return, !dbg !7625

if.end68:                                         ; preds = %if.end61
  %57 = load i8, i8* %hi, align 1, !dbg !7628
  %conv69 = zext i8 %57 to i32, !dbg !7628
  %and70 = and i32 %conv69, 3, !dbg !7628
  %shl71 = shl i32 %and70, 2, !dbg !7628
  %58 = load i8, i8* %lo, align 1, !dbg !7628
  %conv72 = zext i8 %58 to i32, !dbg !7628
  %shr73 = ashr i32 %conv72, 6, !dbg !7628
  %and74 = and i32 %shr73, 3, !dbg !7628
  %or75 = or i32 %shl71, %and74, !dbg !7628
  %add = add nsw i32 %or75, 1, !dbg !7628
  store i32 %add, i32* %plane, align 4, !dbg !7628
  %59 = load i32, i32* %plane, align 4, !dbg !7628
  %shr76 = ashr i32 %59, 2, !dbg !7628
  %or77 = or i32 %shr76, 240, !dbg !7628
  %conv78 = trunc i32 %or77 to i8, !dbg !7628
  %60 = load i8**, i8*** %toP.addr, align 8, !dbg !7628
  %61 = load i8*, i8** %60, align 8, !dbg !7628
  %incdec.ptr79 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !7628
  store i8* %incdec.ptr79, i8** %60, align 8, !dbg !7628
  store i8 %conv78, i8* %61, align 1, !dbg !7628
  %62 = load i8, i8* %lo, align 1, !dbg !7628
  %conv80 = zext i8 %62 to i32, !dbg !7628
  %shr81 = ashr i32 %conv80, 2, !dbg !7628
  %and82 = and i32 %shr81, 15, !dbg !7628
  %63 = load i32, i32* %plane, align 4, !dbg !7628
  %and83 = and i32 %63, 3, !dbg !7628
  %shl84 = shl i32 %and83, 4, !dbg !7628
  %or85 = or i32 %and82, %shl84, !dbg !7628
  %or86 = or i32 %or85, 128, !dbg !7628
  %conv87 = trunc i32 %or86 to i8, !dbg !7628
  %64 = load i8**, i8*** %toP.addr, align 8, !dbg !7628
  %65 = load i8*, i8** %64, align 8, !dbg !7628
  %incdec.ptr88 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !7628
  store i8* %incdec.ptr88, i8** %64, align 8, !dbg !7628
  store i8 %conv87, i8* %65, align 1, !dbg !7628
  %66 = load i8*, i8** %from, align 8, !dbg !7628
  %add.ptr89 = getelementptr inbounds i8, i8* %66, i64 2, !dbg !7628
  store i8* %add.ptr89, i8** %from, align 8, !dbg !7628
  %67 = load i8*, i8** %from, align 8, !dbg !7628
  %arrayidx90 = getelementptr inbounds i8, i8* %67, i64 0, !dbg !7628
  %68 = load i8, i8* %arrayidx90, align 1, !dbg !7628
  store i8 %68, i8* %lo2, align 1, !dbg !7628
  %69 = load i8, i8* %lo, align 1, !dbg !7628
  %conv91 = zext i8 %69 to i32, !dbg !7628
  %and92 = and i32 %conv91, 3, !dbg !7628
  %shl93 = shl i32 %and92, 4, !dbg !7628
  %70 = load i8*, i8** %from, align 8, !dbg !7628
  %arrayidx94 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !7628
  %71 = load i8, i8* %arrayidx94, align 1, !dbg !7628
  %conv95 = zext i8 %71 to i32, !dbg !7628
  %and96 = and i32 %conv95, 3, !dbg !7628
  %shl97 = shl i32 %and96, 2, !dbg !7628
  %or98 = or i32 %shl93, %shl97, !dbg !7628
  %72 = load i8, i8* %lo2, align 1, !dbg !7628
  %conv99 = zext i8 %72 to i32, !dbg !7628
  %shr100 = ashr i32 %conv99, 6, !dbg !7628
  %or101 = or i32 %or98, %shr100, !dbg !7628
  %or102 = or i32 %or101, 128, !dbg !7628
  %conv103 = trunc i32 %or102 to i8, !dbg !7628
  %73 = load i8**, i8*** %toP.addr, align 8, !dbg !7628
  %74 = load i8*, i8** %73, align 8, !dbg !7628
  %incdec.ptr104 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7628
  store i8* %incdec.ptr104, i8** %73, align 8, !dbg !7628
  store i8 %conv103, i8* %74, align 1, !dbg !7628
  %75 = load i8, i8* %lo2, align 1, !dbg !7628
  %conv105 = zext i8 %75 to i32, !dbg !7628
  %and106 = and i32 %conv105, 63, !dbg !7628
  %or107 = or i32 %and106, 128, !dbg !7628
  %conv108 = trunc i32 %or107 to i8, !dbg !7628
  %76 = load i8**, i8*** %toP.addr, align 8, !dbg !7628
  %77 = load i8*, i8** %76, align 8, !dbg !7628
  %incdec.ptr109 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !7628
  store i8* %incdec.ptr109, i8** %76, align 8, !dbg !7628
  store i8 %conv108, i8* %77, align 1, !dbg !7628
  br label %sw.epilog, !dbg !7628

sw.epilog:                                        ; preds = %if.end68, %if.end34, %if.end16, %if.end
  br label %for.inc, !dbg !7630

for.inc:                                          ; preds = %sw.epilog
  %78 = load i8*, i8** %from, align 8, !dbg !7632
  %add.ptr110 = getelementptr inbounds i8, i8* %78, i64 2, !dbg !7632
  store i8* %add.ptr110, i8** %from, align 8, !dbg !7632
  br label %for.cond, !dbg !7632

for.end:                                          ; preds = %for.cond
  %79 = load i8*, i8** %from, align 8, !dbg !7634
  %80 = load i8**, i8*** %fromP.addr, align 8, !dbg !7634
  store i8* %79, i8** %80, align 8, !dbg !7634
  %81 = load i8*, i8** %from, align 8, !dbg !7634
  %82 = load i8*, i8** %fromLim.addr, align 8, !dbg !7634
  %cmp111 = icmp ult i8* %81, %82, !dbg !7634
  br i1 %cmp111, label %if.then113, label %if.else, !dbg !7634

if.then113:                                       ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !7636
  br label %return, !dbg !7636

if.else:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !7639
  br label %return, !dbg !7639

return:                                           ; preds = %if.else, %if.then113, %if.then67, %if.then60, %if.then33, %if.then15, %if.then7
  %83 = load i32, i32* %retval, align 4, !dbg !7641
  ret i32 %83, !dbg !7641
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_toUtf16(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i16** %toP, i16* %toLim) #0 !dbg !328 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i16**, align 8
  %toLim.addr = alloca i16*, align 8
  %res = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !7643, metadata !444), !dbg !7644
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !7645, metadata !444), !dbg !7644
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !7646, metadata !444), !dbg !7644
  store i16** %toP, i16*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %toP.addr, metadata !7647, metadata !444), !dbg !7644
  store i16* %toLim, i16** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toLim.addr, metadata !7648, metadata !444), !dbg !7644
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7649, metadata !444), !dbg !7644
  store i32 0, i32* %res, align 4, !dbg !7644
  %0 = load i8**, i8*** %fromP.addr, align 8, !dbg !7644
  %1 = load i8*, i8** %0, align 8, !dbg !7644
  %2 = load i8*, i8** %fromLim.addr, align 8, !dbg !7644
  %3 = load i8**, i8*** %fromP.addr, align 8, !dbg !7644
  %4 = load i8*, i8** %3, align 8, !dbg !7644
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !7644
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !7644
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7644
  %shr = ashr i64 %sub.ptr.sub, 1, !dbg !7644
  %shl = shl i64 %shr, 1, !dbg !7644
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %shl, !dbg !7644
  store i8* %add.ptr, i8** %fromLim.addr, align 8, !dbg !7644
  %5 = load i8*, i8** %fromLim.addr, align 8, !dbg !7650
  %6 = load i8**, i8*** %fromP.addr, align 8, !dbg !7650
  %7 = load i8*, i8** %6, align 8, !dbg !7650
  %sub.ptr.lhs.cast1 = ptrtoint i8* %5 to i64, !dbg !7650
  %sub.ptr.rhs.cast2 = ptrtoint i8* %7 to i64, !dbg !7650
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !7650
  %8 = load i16*, i16** %toLim.addr, align 8, !dbg !7650
  %9 = load i16**, i16*** %toP.addr, align 8, !dbg !7650
  %10 = load i16*, i16** %9, align 8, !dbg !7650
  %sub.ptr.lhs.cast4 = ptrtoint i16* %8 to i64, !dbg !7650
  %sub.ptr.rhs.cast5 = ptrtoint i16* %10 to i64, !dbg !7650
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5, !dbg !7650
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub6, 2, !dbg !7650
  %shl7 = shl i64 %sub.ptr.div, 1, !dbg !7650
  %cmp = icmp sgt i64 %sub.ptr.sub3, %shl7, !dbg !7650
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7650

land.lhs.true:                                    ; preds = %entry
  %11 = load i8*, i8** %fromLim.addr, align 8, !dbg !7652
  %add.ptr8 = getelementptr inbounds i8, i8* %11, i64 -2, !dbg !7652
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr8, i64 1, !dbg !7652
  %12 = load i8, i8* %arrayidx, align 1, !dbg !7652
  %conv = zext i8 %12 to i32, !dbg !7652
  %and = and i32 %conv, 248, !dbg !7652
  %cmp9 = icmp eq i32 %and, 216, !dbg !7652
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7652

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %fromLim.addr, align 8, !dbg !7654
  %add.ptr11 = getelementptr inbounds i8, i8* %13, i64 -2, !dbg !7654
  store i8* %add.ptr11, i8** %fromLim.addr, align 8, !dbg !7654
  store i32 1, i32* %res, align 4, !dbg !7654
  br label %if.end, !dbg !7654

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %for.cond, !dbg !7657

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i8**, i8*** %fromP.addr, align 8, !dbg !7659
  %15 = load i8*, i8** %14, align 8, !dbg !7659
  %16 = load i8*, i8** %fromLim.addr, align 8, !dbg !7659
  %cmp12 = icmp ult i8* %15, %16, !dbg !7659
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !7659

land.rhs:                                         ; preds = %for.cond
  %17 = load i16**, i16*** %toP.addr, align 8, !dbg !7663
  %18 = load i16*, i16** %17, align 8, !dbg !7663
  %19 = load i16*, i16** %toLim.addr, align 8, !dbg !7663
  %cmp14 = icmp ult i16* %18, %19, !dbg !7663
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp14, %land.rhs ]
  br i1 %20, label %for.body, label %for.end, !dbg !7665

for.body:                                         ; preds = %land.end
  %21 = load i8**, i8*** %fromP.addr, align 8, !dbg !7667
  %22 = load i8*, i8** %21, align 8, !dbg !7667
  %arrayidx16 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !7667
  %23 = load i8, i8* %arrayidx16, align 1, !dbg !7667
  %conv17 = zext i8 %23 to i32, !dbg !7667
  %shl18 = shl i32 %conv17, 8, !dbg !7667
  %24 = load i8**, i8*** %fromP.addr, align 8, !dbg !7667
  %25 = load i8*, i8** %24, align 8, !dbg !7667
  %arrayidx19 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !7667
  %26 = load i8, i8* %arrayidx19, align 1, !dbg !7667
  %conv20 = zext i8 %26 to i32, !dbg !7667
  %or = or i32 %shl18, %conv20, !dbg !7667
  %conv21 = trunc i32 %or to i16, !dbg !7667
  %27 = load i16**, i16*** %toP.addr, align 8, !dbg !7667
  %28 = load i16*, i16** %27, align 8, !dbg !7667
  %incdec.ptr = getelementptr inbounds i16, i16* %28, i32 1, !dbg !7667
  store i16* %incdec.ptr, i16** %27, align 8, !dbg !7667
  store i16 %conv21, i16* %28, align 2, !dbg !7667
  br label %for.inc, !dbg !7667

for.inc:                                          ; preds = %for.body
  %29 = load i8**, i8*** %fromP.addr, align 8, !dbg !7669
  %30 = load i8*, i8** %29, align 8, !dbg !7669
  %add.ptr22 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !7669
  store i8* %add.ptr22, i8** %29, align 8, !dbg !7669
  br label %for.cond, !dbg !7669

for.end:                                          ; preds = %land.end
  %31 = load i16**, i16*** %toP.addr, align 8, !dbg !7671
  %32 = load i16*, i16** %31, align 8, !dbg !7671
  %33 = load i16*, i16** %toLim.addr, align 8, !dbg !7671
  %cmp23 = icmp eq i16* %32, %33, !dbg !7671
  br i1 %cmp23, label %land.lhs.true25, label %if.else, !dbg !7671

land.lhs.true25:                                  ; preds = %for.end
  %34 = load i8**, i8*** %fromP.addr, align 8, !dbg !7674
  %35 = load i8*, i8** %34, align 8, !dbg !7674
  %36 = load i8*, i8** %fromLim.addr, align 8, !dbg !7674
  %cmp26 = icmp ult i8* %35, %36, !dbg !7674
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !7674

if.then28:                                        ; preds = %land.lhs.true25
  store i32 2, i32* %retval, align 4, !dbg !7676
  br label %return, !dbg !7676

if.else:                                          ; preds = %land.lhs.true25, %for.end
  %37 = load i32, i32* %res, align 4, !dbg !7678
  store i32 %37, i32* %retval, align 4, !dbg !7678
  br label %return, !dbg !7678

return:                                           ; preds = %if.else, %if.then28
  %38 = load i32, i32* %retval, align 4, !dbg !7680
  ret i32 %38, !dbg !7680
}

; Function Attrs: nounwind uwtable
define internal i32 @unicode_byte_type(i8 signext %hi, i8 signext %lo) #0 !dbg !298 {
entry:
  %retval = alloca i32, align 4
  %hi.addr = alloca i8, align 1
  %lo.addr = alloca i8, align 1
  store i8 %hi, i8* %hi.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hi.addr, metadata !7682, metadata !444), !dbg !7683
  store i8 %lo, i8* %lo.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lo.addr, metadata !7684, metadata !444), !dbg !7685
  %0 = load i8, i8* %hi.addr, align 1, !dbg !7686
  %conv = zext i8 %0 to i32, !dbg !7687
  switch i32 %conv, label %sw.epilog5 [
    i32 216, label %sw.bb
    i32 217, label %sw.bb
    i32 218, label %sw.bb
    i32 219, label %sw.bb
    i32 220, label %sw.bb1
    i32 221, label %sw.bb1
    i32 222, label %sw.bb1
    i32 223, label %sw.bb1
    i32 255, label %sw.bb2
  ], !dbg !7688

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i32 7, i32* %retval, align 4, !dbg !7689
  br label %return, !dbg !7689

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  store i32 8, i32* %retval, align 4, !dbg !7691
  br label %return, !dbg !7691

sw.bb2:                                           ; preds = %entry
  %1 = load i8, i8* %lo.addr, align 1, !dbg !7692
  %conv3 = zext i8 %1 to i32, !dbg !7693
  switch i32 %conv3, label %sw.epilog [
    i32 255, label %sw.bb4
    i32 254, label %sw.bb4
  ], !dbg !7694

sw.bb4:                                           ; preds = %sw.bb2, %sw.bb2
  store i32 0, i32* %retval, align 4, !dbg !7695
  br label %return, !dbg !7695

sw.epilog:                                        ; preds = %sw.bb2
  br label %sw.epilog5, !dbg !7697

sw.epilog5:                                       ; preds = %entry, %sw.epilog
  store i32 29, i32* %retval, align 4, !dbg !7698
  br label %return, !dbg !7698

return:                                           ; preds = %sw.epilog5, %sw.bb4, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !7699
  ret i32 %2, !dbg !7699
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanLit(i32 %open, %struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !301 {
entry:
  %retval = alloca i32, align 4
  %open.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %t = alloca i32, align 4
  store i32 %open, i32* %open.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %open.addr, metadata !7700, metadata !444), !dbg !7701
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7702, metadata !444), !dbg !7703
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7704, metadata !444), !dbg !7705
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7706, metadata !444), !dbg !7707
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !7708, metadata !444), !dbg !7709
  br label %while.cond, !dbg !7710

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !7711
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7711
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !7711
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !7711
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7711
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !7711
  br i1 %cmp, label %while.body, label %while.end, !dbg !7713

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %t, metadata !7714, metadata !444), !dbg !7716
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !7717
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !7717
  %3 = load i8, i8* %arrayidx, align 1, !dbg !7717
  %conv = sext i8 %3 to i32, !dbg !7717
  %cmp1 = icmp eq i32 %conv, 0, !dbg !7717
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !7717

cond.true:                                        ; preds = %while.body
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !7718
  %5 = load i8, i8* %4, align 1, !dbg !7718
  %idxprom = zext i8 %5 to i64, !dbg !7718
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7718
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !7718
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !7718
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !7718
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !7718
  %conv4 = zext i8 %8 to i32, !dbg !7718
  br label %cond.end, !dbg !7718

cond.false:                                       ; preds = %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !7720
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !7720
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !7720
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !7720
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !7720
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !7720
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !7720
  br label %cond.end, !dbg !7720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !7722
  store i32 %cond, i32* %t, align 4, !dbg !7724
  %13 = load i32, i32* %t, align 4, !dbg !7725
  switch i32 %13, label %sw.default60 [
    i32 5, label %sw.bb
    i32 6, label %sw.bb12
    i32 7, label %sw.bb21
    i32 0, label %sw.bb30
    i32 1, label %sw.bb30
    i32 8, label %sw.bb30
    i32 12, label %sw.bb31
    i32 13, label %sw.bb31
  ], !dbg !7726

sw.bb:                                            ; preds = %cond.end
  %14 = load i8*, i8** %end.addr, align 8, !dbg !7727
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !7727
  %sub.ptr.lhs.cast7 = ptrtoint i8* %14 to i64, !dbg !7727
  %sub.ptr.rhs.cast8 = ptrtoint i8* %15 to i64, !dbg !7727
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast8, !dbg !7727
  %cmp10 = icmp slt i64 %sub.ptr.sub9, 2, !dbg !7727
  br i1 %cmp10, label %if.then, label %if.end, !dbg !7730

if.then:                                          ; preds = %sw.bb
  store i32 -2, i32* %retval, align 4, !dbg !7731
  br label %return, !dbg !7731

if.end:                                           ; preds = %sw.bb
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !7733
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 2, !dbg !7733
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !7733
  br label %sw.epilog, !dbg !7733

sw.bb12:                                          ; preds = %cond.end
  %17 = load i8*, i8** %end.addr, align 8, !dbg !7735
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !7735
  %sub.ptr.lhs.cast13 = ptrtoint i8* %17 to i64, !dbg !7735
  %sub.ptr.rhs.cast14 = ptrtoint i8* %18 to i64, !dbg !7735
  %sub.ptr.sub15 = sub i64 %sub.ptr.lhs.cast13, %sub.ptr.rhs.cast14, !dbg !7735
  %cmp16 = icmp slt i64 %sub.ptr.sub15, 3, !dbg !7735
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7735

if.then18:                                        ; preds = %sw.bb12
  store i32 -2, i32* %retval, align 4, !dbg !7738
  br label %return, !dbg !7738

if.end19:                                         ; preds = %sw.bb12
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !7740
  %add.ptr20 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !7740
  store i8* %add.ptr20, i8** %ptr.addr, align 8, !dbg !7740
  br label %sw.epilog, !dbg !7740

sw.bb21:                                          ; preds = %cond.end
  %20 = load i8*, i8** %end.addr, align 8, !dbg !7742
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !7742
  %sub.ptr.lhs.cast22 = ptrtoint i8* %20 to i64, !dbg !7742
  %sub.ptr.rhs.cast23 = ptrtoint i8* %21 to i64, !dbg !7742
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !7742
  %cmp25 = icmp slt i64 %sub.ptr.sub24, 4, !dbg !7742
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7742

if.then27:                                        ; preds = %sw.bb21
  store i32 -2, i32* %retval, align 4, !dbg !7745
  br label %return, !dbg !7745

if.end28:                                         ; preds = %sw.bb21
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !7747
  %add.ptr29 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !7747
  store i8* %add.ptr29, i8** %ptr.addr, align 8, !dbg !7747
  br label %sw.epilog, !dbg !7747

sw.bb30:                                          ; preds = %cond.end, %cond.end, %cond.end
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !7749
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7749
  store i8* %23, i8** %24, align 8, !dbg !7749
  store i32 0, i32* %retval, align 4, !dbg !7749
  br label %return, !dbg !7749

sw.bb31:                                          ; preds = %cond.end, %cond.end
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !7751
  %add.ptr32 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !7751
  store i8* %add.ptr32, i8** %ptr.addr, align 8, !dbg !7751
  %26 = load i32, i32* %t, align 4, !dbg !7752
  %27 = load i32, i32* %open.addr, align 4, !dbg !7754
  %cmp33 = icmp ne i32 %26, %27, !dbg !7755
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !7756

if.then35:                                        ; preds = %sw.bb31
  br label %sw.epilog, !dbg !7757

if.end36:                                         ; preds = %sw.bb31
  %28 = load i8*, i8** %end.addr, align 8, !dbg !7758
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !7758
  %sub.ptr.lhs.cast37 = ptrtoint i8* %28 to i64, !dbg !7758
  %sub.ptr.rhs.cast38 = ptrtoint i8* %29 to i64, !dbg !7758
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38, !dbg !7758
  %cmp40 = icmp sge i64 %sub.ptr.sub39, 2, !dbg !7758
  br i1 %cmp40, label %if.end43, label %if.then42, !dbg !7760

if.then42:                                        ; preds = %if.end36
  store i32 -27, i32* %retval, align 4, !dbg !7761
  br label %return, !dbg !7761

if.end43:                                         ; preds = %if.end36
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !7762
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7763
  store i8* %30, i8** %31, align 8, !dbg !7764
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !7765
  %arrayidx44 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !7765
  %33 = load i8, i8* %arrayidx44, align 1, !dbg !7765
  %conv45 = sext i8 %33 to i32, !dbg !7765
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !7765
  br i1 %cmp46, label %cond.true48, label %cond.false53, !dbg !7765

cond.true48:                                      ; preds = %if.end43
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !7766
  %35 = load i8, i8* %34, align 1, !dbg !7766
  %idxprom49 = zext i8 %35 to i64, !dbg !7766
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7766
  %37 = bitcast %struct.encoding* %36 to %struct.normal_encoding*, !dbg !7766
  %type50 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %37, i32 0, i32 1, !dbg !7766
  %arrayidx51 = getelementptr inbounds [256 x i8], [256 x i8]* %type50, i64 0, i64 %idxprom49, !dbg !7766
  %38 = load i8, i8* %arrayidx51, align 1, !dbg !7766
  %conv52 = zext i8 %38 to i32, !dbg !7766
  br label %cond.end57, !dbg !7766

cond.false53:                                     ; preds = %if.end43
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !7768
  %arrayidx54 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !7768
  %40 = load i8, i8* %arrayidx54, align 1, !dbg !7768
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !7768
  %arrayidx55 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !7768
  %42 = load i8, i8* %arrayidx55, align 1, !dbg !7768
  %call56 = call i32 @unicode_byte_type(i8 signext %40, i8 signext %42), !dbg !7768
  br label %cond.end57, !dbg !7768

cond.end57:                                       ; preds = %cond.false53, %cond.true48
  %cond58 = phi i32 [ %conv52, %cond.true48 ], [ %call56, %cond.false53 ], !dbg !7770
  switch i32 %cond58, label %sw.default [
    i32 21, label %sw.bb59
    i32 9, label %sw.bb59
    i32 10, label %sw.bb59
    i32 11, label %sw.bb59
    i32 30, label %sw.bb59
    i32 20, label %sw.bb59
  ], !dbg !7772

sw.bb59:                                          ; preds = %cond.end57, %cond.end57, %cond.end57, %cond.end57, %cond.end57, %cond.end57
  store i32 27, i32* %retval, align 4, !dbg !7773
  br label %return, !dbg !7773

sw.default:                                       ; preds = %cond.end57
  store i32 0, i32* %retval, align 4, !dbg !7775
  br label %return, !dbg !7775

sw.default60:                                     ; preds = %cond.end
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !7776
  %add.ptr61 = getelementptr inbounds i8, i8* %43, i64 2, !dbg !7776
  store i8* %add.ptr61, i8** %ptr.addr, align 8, !dbg !7776
  br label %sw.epilog, !dbg !7777

sw.epilog:                                        ; preds = %sw.default60, %if.then35, %if.end28, %if.end19, %if.end
  br label %while.cond, !dbg !7778

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !7780
  br label %return, !dbg !7780

return:                                           ; preds = %while.end, %sw.default, %sw.bb59, %if.then42, %sw.bb30, %if.then27, %if.then18, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !7781
  ret i32 %44, !dbg !7781
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanDecl(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !302 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7782, metadata !444), !dbg !7783
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7784, metadata !444), !dbg !7785
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7786, metadata !444), !dbg !7787
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !7788, metadata !444), !dbg !7789
  %0 = load i8*, i8** %end.addr, align 8, !dbg !7790
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7790
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !7790
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !7790
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7790
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !7790
  br i1 %cmp, label %if.end, label %if.then, !dbg !7793

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7794
  br label %return, !dbg !7794

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !7797
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !7797
  %3 = load i8, i8* %arrayidx, align 1, !dbg !7797
  %conv = sext i8 %3 to i32, !dbg !7797
  %cmp1 = icmp eq i32 %conv, 0, !dbg !7797
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !7797

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !7798
  %5 = load i8, i8* %4, align 1, !dbg !7798
  %idxprom = zext i8 %5 to i64, !dbg !7798
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7798
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !7798
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !7798
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !7798
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !7798
  %conv4 = zext i8 %8 to i32, !dbg !7798
  br label %cond.end, !dbg !7798

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !7800
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !7800
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !7800
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !7800
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !7800
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !7800
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !7800
  br label %cond.end, !dbg !7800

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !7802
  switch i32 %cond, label %sw.default [
    i32 27, label %sw.bb
    i32 20, label %sw.bb8
    i32 22, label %sw.bb10
    i32 24, label %sw.bb10
  ], !dbg !7804

sw.bb:                                            ; preds = %cond.end
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7805
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !7807
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 2, !dbg !7808
  %15 = load i8*, i8** %end.addr, align 8, !dbg !7809
  %16 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7810
  %call7 = call i32 @little2_scanComment(%struct.encoding* %13, i8* %add.ptr, i8* %15, i8** %16), !dbg !7811
  store i32 %call7, i32* %retval, align 4, !dbg !7812
  br label %return, !dbg !7812

sw.bb8:                                           ; preds = %cond.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !7813
  %add.ptr9 = getelementptr inbounds i8, i8* %17, i64 2, !dbg !7814
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7815
  store i8* %add.ptr9, i8** %18, align 8, !dbg !7816
  store i32 33, i32* %retval, align 4, !dbg !7817
  br label %return, !dbg !7817

sw.bb10:                                          ; preds = %cond.end, %cond.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !7818
  %add.ptr11 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !7818
  store i8* %add.ptr11, i8** %ptr.addr, align 8, !dbg !7818
  br label %sw.epilog, !dbg !7819

sw.default:                                       ; preds = %cond.end
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !7820
  %21 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7821
  store i8* %20, i8** %21, align 8, !dbg !7822
  store i32 0, i32* %retval, align 4, !dbg !7823
  br label %return, !dbg !7823

sw.epilog:                                        ; preds = %sw.bb10
  br label %while.cond, !dbg !7824

while.cond:                                       ; preds = %sw.epilog65, %sw.epilog
  %22 = load i8*, i8** %end.addr, align 8, !dbg !7825
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !7825
  %sub.ptr.lhs.cast12 = ptrtoint i8* %22 to i64, !dbg !7825
  %sub.ptr.rhs.cast13 = ptrtoint i8* %23 to i64, !dbg !7825
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast12, %sub.ptr.rhs.cast13, !dbg !7825
  %cmp15 = icmp sge i64 %sub.ptr.sub14, 2, !dbg !7825
  br i1 %cmp15, label %while.body, label %while.end, !dbg !7826

while.body:                                       ; preds = %while.cond
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !7827
  %arrayidx17 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !7827
  %25 = load i8, i8* %arrayidx17, align 1, !dbg !7827
  %conv18 = sext i8 %25 to i32, !dbg !7827
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !7827
  br i1 %cmp19, label %cond.true21, label %cond.false26, !dbg !7827

cond.true21:                                      ; preds = %while.body
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !7829
  %27 = load i8, i8* %26, align 1, !dbg !7829
  %idxprom22 = zext i8 %27 to i64, !dbg !7829
  %28 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7829
  %29 = bitcast %struct.encoding* %28 to %struct.normal_encoding*, !dbg !7829
  %type23 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %29, i32 0, i32 1, !dbg !7829
  %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* %type23, i64 0, i64 %idxprom22, !dbg !7829
  %30 = load i8, i8* %arrayidx24, align 1, !dbg !7829
  %conv25 = zext i8 %30 to i32, !dbg !7829
  br label %cond.end30, !dbg !7829

cond.false26:                                     ; preds = %while.body
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !7831
  %arrayidx27 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !7831
  %32 = load i8, i8* %arrayidx27, align 1, !dbg !7831
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !7831
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !7831
  %34 = load i8, i8* %arrayidx28, align 1, !dbg !7831
  %call29 = call i32 @unicode_byte_type(i8 signext %32, i8 signext %34), !dbg !7831
  br label %cond.end30, !dbg !7831

cond.end30:                                       ; preds = %cond.false26, %cond.true21
  %cond31 = phi i32 [ %conv25, %cond.true21 ], [ %call29, %cond.false26 ], !dbg !7833
  switch i32 %cond31, label %sw.default64 [
    i32 30, label %sw.bb32
    i32 21, label %sw.bb61
    i32 9, label %sw.bb61
    i32 10, label %sw.bb61
    i32 22, label %sw.bb62
    i32 24, label %sw.bb62
  ], !dbg !7835

sw.bb32:                                          ; preds = %cond.end30
  %35 = load i8*, i8** %end.addr, align 8, !dbg !7836
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !7836
  %sub.ptr.lhs.cast33 = ptrtoint i8* %35 to i64, !dbg !7836
  %sub.ptr.rhs.cast34 = ptrtoint i8* %36 to i64, !dbg !7836
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !7836
  %cmp36 = icmp sge i64 %sub.ptr.sub35, 4, !dbg !7836
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !7840

if.then38:                                        ; preds = %sw.bb32
  store i32 -1, i32* %retval, align 4, !dbg !7841
  br label %return, !dbg !7841

if.end39:                                         ; preds = %sw.bb32
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !7844
  %add.ptr40 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !7844
  %arrayidx41 = getelementptr inbounds i8, i8* %add.ptr40, i64 1, !dbg !7844
  %38 = load i8, i8* %arrayidx41, align 1, !dbg !7844
  %conv42 = sext i8 %38 to i32, !dbg !7844
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !7844
  br i1 %cmp43, label %cond.true45, label %cond.false51, !dbg !7844

cond.true45:                                      ; preds = %if.end39
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !7845
  %add.ptr46 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !7845
  %40 = load i8, i8* %add.ptr46, align 1, !dbg !7845
  %idxprom47 = zext i8 %40 to i64, !dbg !7845
  %41 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7845
  %42 = bitcast %struct.encoding* %41 to %struct.normal_encoding*, !dbg !7845
  %type48 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %42, i32 0, i32 1, !dbg !7845
  %arrayidx49 = getelementptr inbounds [256 x i8], [256 x i8]* %type48, i64 0, i64 %idxprom47, !dbg !7845
  %43 = load i8, i8* %arrayidx49, align 1, !dbg !7845
  %conv50 = zext i8 %43 to i32, !dbg !7845
  br label %cond.end57, !dbg !7845

cond.false51:                                     ; preds = %if.end39
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !7847
  %add.ptr52 = getelementptr inbounds i8, i8* %44, i64 2, !dbg !7847
  %arrayidx53 = getelementptr inbounds i8, i8* %add.ptr52, i64 1, !dbg !7847
  %45 = load i8, i8* %arrayidx53, align 1, !dbg !7847
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !7847
  %add.ptr54 = getelementptr inbounds i8, i8* %46, i64 2, !dbg !7847
  %arrayidx55 = getelementptr inbounds i8, i8* %add.ptr54, i64 0, !dbg !7847
  %47 = load i8, i8* %arrayidx55, align 1, !dbg !7847
  %call56 = call i32 @unicode_byte_type(i8 signext %45, i8 signext %47), !dbg !7847
  br label %cond.end57, !dbg !7847

cond.end57:                                       ; preds = %cond.false51, %cond.true45
  %cond58 = phi i32 [ %conv50, %cond.true45 ], [ %call56, %cond.false51 ], !dbg !7849
  switch i32 %cond58, label %sw.epilog60 [
    i32 21, label %sw.bb59
    i32 9, label %sw.bb59
    i32 10, label %sw.bb59
    i32 30, label %sw.bb59
  ], !dbg !7851

sw.bb59:                                          ; preds = %cond.end57, %cond.end57, %cond.end57, %cond.end57
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !7852
  %49 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7854
  store i8* %48, i8** %49, align 8, !dbg !7855
  store i32 0, i32* %retval, align 4, !dbg !7856
  br label %return, !dbg !7856

sw.epilog60:                                      ; preds = %cond.end57
  br label %sw.bb61, !dbg !7857

sw.bb61:                                          ; preds = %cond.end30, %cond.end30, %cond.end30, %sw.epilog60
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !7858
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7859
  store i8* %50, i8** %51, align 8, !dbg !7860
  store i32 16, i32* %retval, align 4, !dbg !7861
  br label %return, !dbg !7861

sw.bb62:                                          ; preds = %cond.end30, %cond.end30
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !7862
  %add.ptr63 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !7862
  store i8* %add.ptr63, i8** %ptr.addr, align 8, !dbg !7862
  br label %sw.epilog65, !dbg !7863

sw.default64:                                     ; preds = %cond.end30
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !7864
  %54 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7865
  store i8* %53, i8** %54, align 8, !dbg !7866
  store i32 0, i32* %retval, align 4, !dbg !7867
  br label %return, !dbg !7867

sw.epilog65:                                      ; preds = %sw.bb62
  br label %while.cond, !dbg !7868

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !7870
  br label %return, !dbg !7870

return:                                           ; preds = %while.end, %sw.default64, %sw.bb61, %sw.bb59, %if.then38, %sw.default, %sw.bb8, %sw.bb, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !7871
  ret i32 %55, !dbg !7871
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanPi(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !304 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %target = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7872, metadata !444), !dbg !7873
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7874, metadata !444), !dbg !7875
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7876, metadata !444), !dbg !7877
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !7878, metadata !444), !dbg !7879
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !7880, metadata !444), !dbg !7881
  call void @llvm.dbg.declare(metadata i8** %target, metadata !7882, metadata !444), !dbg !7883
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7884
  store i8* %0, i8** %target, align 8, !dbg !7883
  %1 = load i8*, i8** %end.addr, align 8, !dbg !7885
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !7885
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !7885
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !7885
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7885
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !7885
  br i1 %cmp, label %if.end, label %if.then, !dbg !7888

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7889
  br label %return, !dbg !7889

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !7892
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7892
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7892
  %conv = sext i8 %4 to i32, !dbg !7892
  %cmp1 = icmp eq i32 %conv, 0, !dbg !7892
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !7892

cond.true:                                        ; preds = %if.end
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !7893
  %6 = load i8, i8* %5, align 1, !dbg !7893
  %idxprom = zext i8 %6 to i64, !dbg !7893
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7893
  %8 = bitcast %struct.encoding* %7 to %struct.normal_encoding*, !dbg !7893
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %8, i32 0, i32 1, !dbg !7893
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !7893
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !7893
  %conv4 = zext i8 %9 to i32, !dbg !7893
  br label %cond.end, !dbg !7893

cond.false:                                       ; preds = %if.end
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !7895
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !7895
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !7895
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !7895
  %arrayidx6 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !7895
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !7895
  %call = call i32 @unicode_byte_type(i8 signext %11, i8 signext %13), !dbg !7895
  br label %cond.end, !dbg !7895

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !7897
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb21
    i32 24, label %sw.bb21
    i32 5, label %sw.bb22
    i32 6, label %sw.bb30
    i32 7, label %sw.bb38
  ], !dbg !7899

sw.bb:                                            ; preds = %cond.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !7900
  %arrayidx7 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !7900
  %15 = load i8, i8* %arrayidx7, align 1, !dbg !7900
  %idxprom8 = zext i8 %15 to i64, !dbg !7900
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom8, !dbg !7900
  %16 = load i8, i8* %arrayidx9, align 1, !dbg !7900
  %conv10 = zext i8 %16 to i32, !dbg !7900
  %shl = shl i32 %conv10, 3, !dbg !7900
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !7900
  %arrayidx11 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !7900
  %18 = load i8, i8* %arrayidx11, align 1, !dbg !7900
  %conv12 = zext i8 %18 to i32, !dbg !7900
  %shr = ashr i32 %conv12, 5, !dbg !7900
  %add = add nsw i32 %shl, %shr, !dbg !7900
  %idxprom13 = sext i32 %add to i64, !dbg !7900
  %arrayidx14 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom13, !dbg !7900
  %19 = load i32, i32* %arrayidx14, align 4, !dbg !7900
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !7900
  %arrayidx15 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !7900
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !7900
  %conv16 = zext i8 %21 to i32, !dbg !7900
  %and = and i32 %conv16, 31, !dbg !7900
  %shl17 = shl i32 1, %and, !dbg !7900
  %and18 = and i32 %19, %shl17, !dbg !7900
  %tobool = icmp ne i32 %and18, 0, !dbg !7900
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !7903

if.then19:                                        ; preds = %sw.bb
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !7904
  %23 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7904
  store i8* %22, i8** %23, align 8, !dbg !7904
  store i32 0, i32* %retval, align 4, !dbg !7904
  br label %return, !dbg !7904

if.end20:                                         ; preds = %sw.bb
  br label %sw.bb21, !dbg !7907

sw.bb21:                                          ; preds = %cond.end, %cond.end, %if.end20
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !7909
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 2, !dbg !7909
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !7909
  br label %sw.epilog, !dbg !7909

sw.bb22:                                          ; preds = %cond.end
  %25 = load i8*, i8** %end.addr, align 8, !dbg !7911
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !7911
  %sub.ptr.lhs.cast23 = ptrtoint i8* %25 to i64, !dbg !7911
  %sub.ptr.rhs.cast24 = ptrtoint i8* %26 to i64, !dbg !7911
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !7911
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 2, !dbg !7911
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !7911

if.then28:                                        ; preds = %sw.bb22
  store i32 -2, i32* %retval, align 4, !dbg !7914
  br label %return, !dbg !7914

if.end29:                                         ; preds = %sw.bb22
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !7916
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7916
  store i8* %27, i8** %28, align 8, !dbg !7916
  store i32 0, i32* %retval, align 4, !dbg !7916
  br label %return, !dbg !7916

sw.bb30:                                          ; preds = %cond.end
  %29 = load i8*, i8** %end.addr, align 8, !dbg !7920
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !7920
  %sub.ptr.lhs.cast31 = ptrtoint i8* %29 to i64, !dbg !7920
  %sub.ptr.rhs.cast32 = ptrtoint i8* %30 to i64, !dbg !7920
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !7920
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 3, !dbg !7920
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !7920

if.then36:                                        ; preds = %sw.bb30
  store i32 -2, i32* %retval, align 4, !dbg !7923
  br label %return, !dbg !7923

if.end37:                                         ; preds = %sw.bb30
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !7925
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7925
  store i8* %31, i8** %32, align 8, !dbg !7925
  store i32 0, i32* %retval, align 4, !dbg !7925
  br label %return, !dbg !7925

sw.bb38:                                          ; preds = %cond.end
  %33 = load i8*, i8** %end.addr, align 8, !dbg !7929
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !7929
  %sub.ptr.lhs.cast39 = ptrtoint i8* %33 to i64, !dbg !7929
  %sub.ptr.rhs.cast40 = ptrtoint i8* %34 to i64, !dbg !7929
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !7929
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 4, !dbg !7929
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7929

if.then44:                                        ; preds = %sw.bb38
  store i32 -2, i32* %retval, align 4, !dbg !7932
  br label %return, !dbg !7932

if.end45:                                         ; preds = %sw.bb38
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !7934
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7934
  store i8* %35, i8** %36, align 8, !dbg !7934
  store i32 0, i32* %retval, align 4, !dbg !7934
  br label %return, !dbg !7934

sw.default:                                       ; preds = %cond.end
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !7938
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7939
  store i8* %37, i8** %38, align 8, !dbg !7940
  store i32 0, i32* %retval, align 4, !dbg !7941
  br label %return, !dbg !7941

sw.epilog:                                        ; preds = %sw.bb21
  br label %while.cond, !dbg !7942

while.cond:                                       ; preds = %sw.epilog217, %sw.epilog
  %39 = load i8*, i8** %end.addr, align 8, !dbg !7943
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !7943
  %sub.ptr.lhs.cast46 = ptrtoint i8* %39 to i64, !dbg !7943
  %sub.ptr.rhs.cast47 = ptrtoint i8* %40 to i64, !dbg !7943
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47, !dbg !7943
  %cmp49 = icmp sge i64 %sub.ptr.sub48, 2, !dbg !7943
  br i1 %cmp49, label %while.body, label %while.end218, !dbg !7944

while.body:                                       ; preds = %while.cond
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !7945
  %arrayidx51 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !7945
  %42 = load i8, i8* %arrayidx51, align 1, !dbg !7945
  %conv52 = sext i8 %42 to i32, !dbg !7945
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !7945
  br i1 %cmp53, label %cond.true55, label %cond.false60, !dbg !7945

cond.true55:                                      ; preds = %while.body
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !7947
  %44 = load i8, i8* %43, align 1, !dbg !7947
  %idxprom56 = zext i8 %44 to i64, !dbg !7947
  %45 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7947
  %46 = bitcast %struct.encoding* %45 to %struct.normal_encoding*, !dbg !7947
  %type57 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %46, i32 0, i32 1, !dbg !7947
  %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* %type57, i64 0, i64 %idxprom56, !dbg !7947
  %47 = load i8, i8* %arrayidx58, align 1, !dbg !7947
  %conv59 = zext i8 %47 to i32, !dbg !7947
  br label %cond.end64, !dbg !7947

cond.false60:                                     ; preds = %while.body
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !7949
  %arrayidx61 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !7949
  %49 = load i8, i8* %arrayidx61, align 1, !dbg !7949
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !7949
  %arrayidx62 = getelementptr inbounds i8, i8* %50, i64 0, !dbg !7949
  %51 = load i8, i8* %arrayidx62, align 1, !dbg !7949
  %call63 = call i32 @unicode_byte_type(i8 signext %49, i8 signext %51), !dbg !7949
  br label %cond.end64, !dbg !7949

cond.end64:                                       ; preds = %cond.false60, %cond.true55
  %cond65 = phi i32 [ %conv59, %cond.true55 ], [ %call63, %cond.false60 ], !dbg !7951
  switch i32 %cond65, label %sw.default216 [
    i32 29, label %sw.bb66
    i32 22, label %sw.bb86
    i32 24, label %sw.bb86
    i32 25, label %sw.bb86
    i32 26, label %sw.bb86
    i32 27, label %sw.bb86
    i32 5, label %sw.bb88
    i32 6, label %sw.bb96
    i32 7, label %sw.bb104
    i32 21, label %sw.bb112
    i32 9, label %sw.bb112
    i32 10, label %sw.bb112
    i32 15, label %sw.bb191
  ], !dbg !7953

sw.bb66:                                          ; preds = %cond.end64
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !7954
  %arrayidx67 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !7954
  %53 = load i8, i8* %arrayidx67, align 1, !dbg !7954
  %idxprom68 = zext i8 %53 to i64, !dbg !7954
  %arrayidx69 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom68, !dbg !7954
  %54 = load i8, i8* %arrayidx69, align 1, !dbg !7954
  %conv70 = zext i8 %54 to i32, !dbg !7954
  %shl71 = shl i32 %conv70, 3, !dbg !7954
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !7954
  %arrayidx72 = getelementptr inbounds i8, i8* %55, i64 0, !dbg !7954
  %56 = load i8, i8* %arrayidx72, align 1, !dbg !7954
  %conv73 = zext i8 %56 to i32, !dbg !7954
  %shr74 = ashr i32 %conv73, 5, !dbg !7954
  %add75 = add nsw i32 %shl71, %shr74, !dbg !7954
  %idxprom76 = sext i32 %add75 to i64, !dbg !7954
  %arrayidx77 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom76, !dbg !7954
  %57 = load i32, i32* %arrayidx77, align 4, !dbg !7954
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !7954
  %arrayidx78 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !7954
  %59 = load i8, i8* %arrayidx78, align 1, !dbg !7954
  %conv79 = zext i8 %59 to i32, !dbg !7954
  %and80 = and i32 %conv79, 31, !dbg !7954
  %shl81 = shl i32 1, %and80, !dbg !7954
  %and82 = and i32 %57, %shl81, !dbg !7954
  %tobool83 = icmp ne i32 %and82, 0, !dbg !7954
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !7957

if.then84:                                        ; preds = %sw.bb66
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !7958
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7958
  store i8* %60, i8** %61, align 8, !dbg !7958
  store i32 0, i32* %retval, align 4, !dbg !7958
  br label %return, !dbg !7958

if.end85:                                         ; preds = %sw.bb66
  br label %sw.bb86, !dbg !7961

sw.bb86:                                          ; preds = %cond.end64, %cond.end64, %cond.end64, %cond.end64, %cond.end64, %if.end85
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !7963
  %add.ptr87 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !7963
  store i8* %add.ptr87, i8** %ptr.addr, align 8, !dbg !7963
  br label %sw.epilog217, !dbg !7963

sw.bb88:                                          ; preds = %cond.end64
  %63 = load i8*, i8** %end.addr, align 8, !dbg !7965
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !7965
  %sub.ptr.lhs.cast89 = ptrtoint i8* %63 to i64, !dbg !7965
  %sub.ptr.rhs.cast90 = ptrtoint i8* %64 to i64, !dbg !7965
  %sub.ptr.sub91 = sub i64 %sub.ptr.lhs.cast89, %sub.ptr.rhs.cast90, !dbg !7965
  %cmp92 = icmp slt i64 %sub.ptr.sub91, 2, !dbg !7965
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !7965

if.then94:                                        ; preds = %sw.bb88
  store i32 -2, i32* %retval, align 4, !dbg !7968
  br label %return, !dbg !7968

if.end95:                                         ; preds = %sw.bb88
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !7970
  %66 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7970
  store i8* %65, i8** %66, align 8, !dbg !7970
  store i32 0, i32* %retval, align 4, !dbg !7970
  br label %return, !dbg !7970

sw.bb96:                                          ; preds = %cond.end64
  %67 = load i8*, i8** %end.addr, align 8, !dbg !7974
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !7974
  %sub.ptr.lhs.cast97 = ptrtoint i8* %67 to i64, !dbg !7974
  %sub.ptr.rhs.cast98 = ptrtoint i8* %68 to i64, !dbg !7974
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98, !dbg !7974
  %cmp100 = icmp slt i64 %sub.ptr.sub99, 3, !dbg !7974
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !7974

if.then102:                                       ; preds = %sw.bb96
  store i32 -2, i32* %retval, align 4, !dbg !7977
  br label %return, !dbg !7977

if.end103:                                        ; preds = %sw.bb96
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !7979
  %70 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7979
  store i8* %69, i8** %70, align 8, !dbg !7979
  store i32 0, i32* %retval, align 4, !dbg !7979
  br label %return, !dbg !7979

sw.bb104:                                         ; preds = %cond.end64
  %71 = load i8*, i8** %end.addr, align 8, !dbg !7983
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !7983
  %sub.ptr.lhs.cast105 = ptrtoint i8* %71 to i64, !dbg !7983
  %sub.ptr.rhs.cast106 = ptrtoint i8* %72 to i64, !dbg !7983
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106, !dbg !7983
  %cmp108 = icmp slt i64 %sub.ptr.sub107, 4, !dbg !7983
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7983

if.then110:                                       ; preds = %sw.bb104
  store i32 -2, i32* %retval, align 4, !dbg !7986
  br label %return, !dbg !7986

if.end111:                                        ; preds = %sw.bb104
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !7988
  %74 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !7988
  store i8* %73, i8** %74, align 8, !dbg !7988
  store i32 0, i32* %retval, align 4, !dbg !7988
  br label %return, !dbg !7988

sw.bb112:                                         ; preds = %cond.end64, %cond.end64, %cond.end64
  %75 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7992
  %76 = load i8*, i8** %target, align 8, !dbg !7994
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !7995
  %call113 = call i32 @little2_checkPiTarget(%struct.encoding* %75, i8* %76, i8* %77, i32* %tok), !dbg !7996
  %tobool114 = icmp ne i32 %call113, 0, !dbg !7996
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !7997

if.then115:                                       ; preds = %sw.bb112
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !7998
  %79 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8000
  store i8* %78, i8** %79, align 8, !dbg !8001
  store i32 0, i32* %retval, align 4, !dbg !8002
  br label %return, !dbg !8002

if.end116:                                        ; preds = %sw.bb112
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !8003
  %add.ptr117 = getelementptr inbounds i8, i8* %80, i64 2, !dbg !8003
  store i8* %add.ptr117, i8** %ptr.addr, align 8, !dbg !8003
  br label %while.cond118, !dbg !8004

while.cond118:                                    ; preds = %sw.epilog190, %if.end116
  %81 = load i8*, i8** %end.addr, align 8, !dbg !8005
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !8005
  %sub.ptr.lhs.cast119 = ptrtoint i8* %81 to i64, !dbg !8005
  %sub.ptr.rhs.cast120 = ptrtoint i8* %82 to i64, !dbg !8005
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120, !dbg !8005
  %cmp122 = icmp sge i64 %sub.ptr.sub121, 2, !dbg !8005
  br i1 %cmp122, label %while.body124, label %while.end, !dbg !8007

while.body124:                                    ; preds = %while.cond118
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !8008
  %arrayidx125 = getelementptr inbounds i8, i8* %83, i64 1, !dbg !8008
  %84 = load i8, i8* %arrayidx125, align 1, !dbg !8008
  %conv126 = sext i8 %84 to i32, !dbg !8008
  %cmp127 = icmp eq i32 %conv126, 0, !dbg !8008
  br i1 %cmp127, label %cond.true129, label %cond.false134, !dbg !8008

cond.true129:                                     ; preds = %while.body124
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !8010
  %86 = load i8, i8* %85, align 1, !dbg !8010
  %idxprom130 = zext i8 %86 to i64, !dbg !8010
  %87 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8010
  %88 = bitcast %struct.encoding* %87 to %struct.normal_encoding*, !dbg !8010
  %type131 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %88, i32 0, i32 1, !dbg !8010
  %arrayidx132 = getelementptr inbounds [256 x i8], [256 x i8]* %type131, i64 0, i64 %idxprom130, !dbg !8010
  %89 = load i8, i8* %arrayidx132, align 1, !dbg !8010
  %conv133 = zext i8 %89 to i32, !dbg !8010
  br label %cond.end138, !dbg !8010

cond.false134:                                    ; preds = %while.body124
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !8012
  %arrayidx135 = getelementptr inbounds i8, i8* %90, i64 1, !dbg !8012
  %91 = load i8, i8* %arrayidx135, align 1, !dbg !8012
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !8012
  %arrayidx136 = getelementptr inbounds i8, i8* %92, i64 0, !dbg !8012
  %93 = load i8, i8* %arrayidx136, align 1, !dbg !8012
  %call137 = call i32 @unicode_byte_type(i8 signext %91, i8 signext %93), !dbg !8012
  br label %cond.end138, !dbg !8012

cond.end138:                                      ; preds = %cond.false134, %cond.true129
  %cond139 = phi i32 [ %conv133, %cond.true129 ], [ %call137, %cond.false134 ], !dbg !8014
  switch i32 %cond139, label %sw.default188 [
    i32 5, label %sw.bb140
    i32 6, label %sw.bb149
    i32 7, label %sw.bb158
    i32 0, label %sw.bb167
    i32 1, label %sw.bb167
    i32 8, label %sw.bb167
    i32 15, label %sw.bb168
  ], !dbg !8016

sw.bb140:                                         ; preds = %cond.end138
  %94 = load i8*, i8** %end.addr, align 8, !dbg !8017
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !8017
  %sub.ptr.lhs.cast141 = ptrtoint i8* %94 to i64, !dbg !8017
  %sub.ptr.rhs.cast142 = ptrtoint i8* %95 to i64, !dbg !8017
  %sub.ptr.sub143 = sub i64 %sub.ptr.lhs.cast141, %sub.ptr.rhs.cast142, !dbg !8017
  %cmp144 = icmp slt i64 %sub.ptr.sub143, 2, !dbg !8017
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !8020

if.then146:                                       ; preds = %sw.bb140
  store i32 -2, i32* %retval, align 4, !dbg !8021
  br label %return, !dbg !8021

if.end147:                                        ; preds = %sw.bb140
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !8023
  %add.ptr148 = getelementptr inbounds i8, i8* %96, i64 2, !dbg !8023
  store i8* %add.ptr148, i8** %ptr.addr, align 8, !dbg !8023
  br label %sw.epilog190, !dbg !8023

sw.bb149:                                         ; preds = %cond.end138
  %97 = load i8*, i8** %end.addr, align 8, !dbg !8025
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !8025
  %sub.ptr.lhs.cast150 = ptrtoint i8* %97 to i64, !dbg !8025
  %sub.ptr.rhs.cast151 = ptrtoint i8* %98 to i64, !dbg !8025
  %sub.ptr.sub152 = sub i64 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast151, !dbg !8025
  %cmp153 = icmp slt i64 %sub.ptr.sub152, 3, !dbg !8025
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !8025

if.then155:                                       ; preds = %sw.bb149
  store i32 -2, i32* %retval, align 4, !dbg !8028
  br label %return, !dbg !8028

if.end156:                                        ; preds = %sw.bb149
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !8030
  %add.ptr157 = getelementptr inbounds i8, i8* %99, i64 3, !dbg !8030
  store i8* %add.ptr157, i8** %ptr.addr, align 8, !dbg !8030
  br label %sw.epilog190, !dbg !8030

sw.bb158:                                         ; preds = %cond.end138
  %100 = load i8*, i8** %end.addr, align 8, !dbg !8032
  %101 = load i8*, i8** %ptr.addr, align 8, !dbg !8032
  %sub.ptr.lhs.cast159 = ptrtoint i8* %100 to i64, !dbg !8032
  %sub.ptr.rhs.cast160 = ptrtoint i8* %101 to i64, !dbg !8032
  %sub.ptr.sub161 = sub i64 %sub.ptr.lhs.cast159, %sub.ptr.rhs.cast160, !dbg !8032
  %cmp162 = icmp slt i64 %sub.ptr.sub161, 4, !dbg !8032
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !8032

if.then164:                                       ; preds = %sw.bb158
  store i32 -2, i32* %retval, align 4, !dbg !8035
  br label %return, !dbg !8035

if.end165:                                        ; preds = %sw.bb158
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !8037
  %add.ptr166 = getelementptr inbounds i8, i8* %102, i64 4, !dbg !8037
  store i8* %add.ptr166, i8** %ptr.addr, align 8, !dbg !8037
  br label %sw.epilog190, !dbg !8037

sw.bb167:                                         ; preds = %cond.end138, %cond.end138, %cond.end138
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !8039
  %104 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8039
  store i8* %103, i8** %104, align 8, !dbg !8039
  store i32 0, i32* %retval, align 4, !dbg !8039
  br label %return, !dbg !8039

sw.bb168:                                         ; preds = %cond.end138
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !8041
  %add.ptr169 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !8041
  store i8* %add.ptr169, i8** %ptr.addr, align 8, !dbg !8041
  %106 = load i8*, i8** %end.addr, align 8, !dbg !8042
  %107 = load i8*, i8** %ptr.addr, align 8, !dbg !8042
  %sub.ptr.lhs.cast170 = ptrtoint i8* %106 to i64, !dbg !8042
  %sub.ptr.rhs.cast171 = ptrtoint i8* %107 to i64, !dbg !8042
  %sub.ptr.sub172 = sub i64 %sub.ptr.lhs.cast170, %sub.ptr.rhs.cast171, !dbg !8042
  %cmp173 = icmp sge i64 %sub.ptr.sub172, 2, !dbg !8042
  br i1 %cmp173, label %if.end176, label %if.then175, !dbg !8045

if.then175:                                       ; preds = %sw.bb168
  store i32 -1, i32* %retval, align 4, !dbg !8046
  br label %return, !dbg !8046

if.end176:                                        ; preds = %sw.bb168
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !8049
  %arrayidx177 = getelementptr inbounds i8, i8* %108, i64 1, !dbg !8049
  %109 = load i8, i8* %arrayidx177, align 1, !dbg !8049
  %conv178 = sext i8 %109 to i32, !dbg !8049
  %cmp179 = icmp eq i32 %conv178, 0, !dbg !8049
  br i1 %cmp179, label %land.lhs.true, label %if.end187, !dbg !8049

land.lhs.true:                                    ; preds = %if.end176
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !8051
  %arrayidx181 = getelementptr inbounds i8, i8* %110, i64 0, !dbg !8051
  %111 = load i8, i8* %arrayidx181, align 1, !dbg !8051
  %conv182 = sext i8 %111 to i32, !dbg !8051
  %cmp183 = icmp eq i32 %conv182, 62, !dbg !8051
  br i1 %cmp183, label %if.then185, label %if.end187, !dbg !8051

if.then185:                                       ; preds = %land.lhs.true
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !8053
  %add.ptr186 = getelementptr inbounds i8, i8* %112, i64 2, !dbg !8055
  %113 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8056
  store i8* %add.ptr186, i8** %113, align 8, !dbg !8057
  %114 = load i32, i32* %tok, align 4, !dbg !8058
  store i32 %114, i32* %retval, align 4, !dbg !8059
  br label %return, !dbg !8059

if.end187:                                        ; preds = %land.lhs.true, %if.end176
  br label %sw.epilog190, !dbg !8060

sw.default188:                                    ; preds = %cond.end138
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !8061
  %add.ptr189 = getelementptr inbounds i8, i8* %115, i64 2, !dbg !8061
  store i8* %add.ptr189, i8** %ptr.addr, align 8, !dbg !8061
  br label %sw.epilog190, !dbg !8062

sw.epilog190:                                     ; preds = %sw.default188, %if.end187, %if.end165, %if.end156, %if.end147
  br label %while.cond118, !dbg !8063

while.end:                                        ; preds = %while.cond118
  store i32 -1, i32* %retval, align 4, !dbg !8065
  br label %return, !dbg !8065

sw.bb191:                                         ; preds = %cond.end64
  %116 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8066
  %117 = load i8*, i8** %target, align 8, !dbg !8068
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !8069
  %call192 = call i32 @little2_checkPiTarget(%struct.encoding* %116, i8* %117, i8* %118, i32* %tok), !dbg !8070
  %tobool193 = icmp ne i32 %call192, 0, !dbg !8070
  br i1 %tobool193, label %if.end195, label %if.then194, !dbg !8071

if.then194:                                       ; preds = %sw.bb191
  %119 = load i8*, i8** %ptr.addr, align 8, !dbg !8072
  %120 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8074
  store i8* %119, i8** %120, align 8, !dbg !8075
  store i32 0, i32* %retval, align 4, !dbg !8076
  br label %return, !dbg !8076

if.end195:                                        ; preds = %sw.bb191
  %121 = load i8*, i8** %ptr.addr, align 8, !dbg !8077
  %add.ptr196 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !8077
  store i8* %add.ptr196, i8** %ptr.addr, align 8, !dbg !8077
  %122 = load i8*, i8** %end.addr, align 8, !dbg !8078
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !8078
  %sub.ptr.lhs.cast197 = ptrtoint i8* %122 to i64, !dbg !8078
  %sub.ptr.rhs.cast198 = ptrtoint i8* %123 to i64, !dbg !8078
  %sub.ptr.sub199 = sub i64 %sub.ptr.lhs.cast197, %sub.ptr.rhs.cast198, !dbg !8078
  %cmp200 = icmp sge i64 %sub.ptr.sub199, 2, !dbg !8078
  br i1 %cmp200, label %if.end203, label %if.then202, !dbg !8081

if.then202:                                       ; preds = %if.end195
  store i32 -1, i32* %retval, align 4, !dbg !8082
  br label %return, !dbg !8082

if.end203:                                        ; preds = %if.end195
  %124 = load i8*, i8** %ptr.addr, align 8, !dbg !8085
  %arrayidx204 = getelementptr inbounds i8, i8* %124, i64 1, !dbg !8085
  %125 = load i8, i8* %arrayidx204, align 1, !dbg !8085
  %conv205 = sext i8 %125 to i32, !dbg !8085
  %cmp206 = icmp eq i32 %conv205, 0, !dbg !8085
  br i1 %cmp206, label %land.lhs.true208, label %if.end215, !dbg !8085

land.lhs.true208:                                 ; preds = %if.end203
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !8087
  %arrayidx209 = getelementptr inbounds i8, i8* %126, i64 0, !dbg !8087
  %127 = load i8, i8* %arrayidx209, align 1, !dbg !8087
  %conv210 = sext i8 %127 to i32, !dbg !8087
  %cmp211 = icmp eq i32 %conv210, 62, !dbg !8087
  br i1 %cmp211, label %if.then213, label %if.end215, !dbg !8087

if.then213:                                       ; preds = %land.lhs.true208
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !8089
  %add.ptr214 = getelementptr inbounds i8, i8* %128, i64 2, !dbg !8091
  %129 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8092
  store i8* %add.ptr214, i8** %129, align 8, !dbg !8093
  %130 = load i32, i32* %tok, align 4, !dbg !8094
  store i32 %130, i32* %retval, align 4, !dbg !8095
  br label %return, !dbg !8095

if.end215:                                        ; preds = %land.lhs.true208, %if.end203
  br label %sw.default216, !dbg !8096

sw.default216:                                    ; preds = %cond.end64, %if.end215
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !8098
  %132 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8099
  store i8* %131, i8** %132, align 8, !dbg !8100
  store i32 0, i32* %retval, align 4, !dbg !8101
  br label %return, !dbg !8101

sw.epilog217:                                     ; preds = %sw.bb86
  br label %while.cond, !dbg !8102

while.end218:                                     ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !8104
  br label %return, !dbg !8104

return:                                           ; preds = %while.end218, %sw.default216, %if.then213, %if.then202, %if.then194, %while.end, %if.then185, %if.then175, %sw.bb167, %if.then164, %if.then155, %if.then146, %if.then115, %if.end111, %if.then110, %if.end103, %if.then102, %if.end95, %if.then94, %if.then84, %sw.default, %if.end45, %if.then44, %if.end37, %if.then36, %if.end29, %if.then28, %if.then19, %if.then
  %133 = load i32, i32* %retval, align 4, !dbg !8105
  ret i32 %133, !dbg !8105
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanPercent(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !306 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !8106, metadata !444), !dbg !8107
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8108, metadata !444), !dbg !8109
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8110, metadata !444), !dbg !8111
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !8112, metadata !444), !dbg !8113
  %0 = load i8*, i8** %end.addr, align 8, !dbg !8114
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !8114
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !8114
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8114
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8114
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !8114
  br i1 %cmp, label %if.end, label %if.then, !dbg !8117

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8118
  br label %return, !dbg !8118

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !8121
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !8121
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8121
  %conv = sext i8 %3 to i32, !dbg !8121
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8121
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8121

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !8122
  %5 = load i8, i8* %4, align 1, !dbg !8122
  %idxprom = zext i8 %5 to i64, !dbg !8122
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8122
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !8122
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !8122
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !8122
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !8122
  %conv4 = zext i8 %8 to i32, !dbg !8122
  br label %cond.end, !dbg !8122

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !8124
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !8124
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !8124
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !8124
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !8124
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !8124
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !8124
  br label %cond.end, !dbg !8124

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !8126
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb21
    i32 24, label %sw.bb21
    i32 5, label %sw.bb22
    i32 6, label %sw.bb30
    i32 7, label %sw.bb38
    i32 21, label %sw.bb46
    i32 10, label %sw.bb46
    i32 9, label %sw.bb46
    i32 30, label %sw.bb46
  ], !dbg !8128

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !8129
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !8129
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !8129
  %idxprom8 = zext i8 %14 to i64, !dbg !8129
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom8, !dbg !8129
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !8129
  %conv10 = zext i8 %15 to i32, !dbg !8129
  %shl = shl i32 %conv10, 3, !dbg !8129
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !8129
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !8129
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !8129
  %conv12 = zext i8 %17 to i32, !dbg !8129
  %shr = ashr i32 %conv12, 5, !dbg !8129
  %add = add nsw i32 %shl, %shr, !dbg !8129
  %idxprom13 = sext i32 %add to i64, !dbg !8129
  %arrayidx14 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom13, !dbg !8129
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !8129
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !8129
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !8129
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !8129
  %conv16 = zext i8 %20 to i32, !dbg !8129
  %and = and i32 %conv16, 31, !dbg !8129
  %shl17 = shl i32 1, %and, !dbg !8129
  %and18 = and i32 %18, %shl17, !dbg !8129
  %tobool = icmp ne i32 %and18, 0, !dbg !8129
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !8132

if.then19:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !8133
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8133
  store i8* %21, i8** %22, align 8, !dbg !8133
  store i32 0, i32* %retval, align 4, !dbg !8133
  br label %return, !dbg !8133

if.end20:                                         ; preds = %sw.bb
  br label %sw.bb21, !dbg !8136

sw.bb21:                                          ; preds = %cond.end, %cond.end, %if.end20
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !8138
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !8138
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !8138
  br label %sw.epilog, !dbg !8138

sw.bb22:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !8140
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !8140
  %sub.ptr.lhs.cast23 = ptrtoint i8* %24 to i64, !dbg !8140
  %sub.ptr.rhs.cast24 = ptrtoint i8* %25 to i64, !dbg !8140
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !8140
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 2, !dbg !8140
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !8140

if.then28:                                        ; preds = %sw.bb22
  store i32 -2, i32* %retval, align 4, !dbg !8143
  br label %return, !dbg !8143

if.end29:                                         ; preds = %sw.bb22
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !8145
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8145
  store i8* %26, i8** %27, align 8, !dbg !8145
  store i32 0, i32* %retval, align 4, !dbg !8145
  br label %return, !dbg !8145

sw.bb30:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !8149
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !8149
  %sub.ptr.lhs.cast31 = ptrtoint i8* %28 to i64, !dbg !8149
  %sub.ptr.rhs.cast32 = ptrtoint i8* %29 to i64, !dbg !8149
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !8149
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 3, !dbg !8149
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !8149

if.then36:                                        ; preds = %sw.bb30
  store i32 -2, i32* %retval, align 4, !dbg !8152
  br label %return, !dbg !8152

if.end37:                                         ; preds = %sw.bb30
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !8154
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8154
  store i8* %30, i8** %31, align 8, !dbg !8154
  store i32 0, i32* %retval, align 4, !dbg !8154
  br label %return, !dbg !8154

sw.bb38:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !8158
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !8158
  %sub.ptr.lhs.cast39 = ptrtoint i8* %32 to i64, !dbg !8158
  %sub.ptr.rhs.cast40 = ptrtoint i8* %33 to i64, !dbg !8158
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !8158
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 4, !dbg !8158
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8158

if.then44:                                        ; preds = %sw.bb38
  store i32 -2, i32* %retval, align 4, !dbg !8161
  br label %return, !dbg !8161

if.end45:                                         ; preds = %sw.bb38
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !8163
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8163
  store i8* %34, i8** %35, align 8, !dbg !8163
  store i32 0, i32* %retval, align 4, !dbg !8163
  br label %return, !dbg !8163

sw.bb46:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !8167
  %37 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8168
  store i8* %36, i8** %37, align 8, !dbg !8169
  store i32 22, i32* %retval, align 4, !dbg !8170
  br label %return, !dbg !8170

sw.default:                                       ; preds = %cond.end
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !8171
  %39 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8172
  store i8* %38, i8** %39, align 8, !dbg !8173
  store i32 0, i32* %retval, align 4, !dbg !8174
  br label %return, !dbg !8174

sw.epilog:                                        ; preds = %sw.bb21
  br label %while.cond, !dbg !8175

while.cond:                                       ; preds = %sw.epilog116, %sw.epilog
  %40 = load i8*, i8** %end.addr, align 8, !dbg !8176
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !8176
  %sub.ptr.lhs.cast47 = ptrtoint i8* %40 to i64, !dbg !8176
  %sub.ptr.rhs.cast48 = ptrtoint i8* %41 to i64, !dbg !8176
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !8176
  %cmp50 = icmp sge i64 %sub.ptr.sub49, 2, !dbg !8176
  br i1 %cmp50, label %while.body, label %while.end, !dbg !8177

while.body:                                       ; preds = %while.cond
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !8178
  %arrayidx52 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !8178
  %43 = load i8, i8* %arrayidx52, align 1, !dbg !8178
  %conv53 = sext i8 %43 to i32, !dbg !8178
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !8178
  br i1 %cmp54, label %cond.true56, label %cond.false61, !dbg !8178

cond.true56:                                      ; preds = %while.body
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !8180
  %45 = load i8, i8* %44, align 1, !dbg !8180
  %idxprom57 = zext i8 %45 to i64, !dbg !8180
  %46 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8180
  %47 = bitcast %struct.encoding* %46 to %struct.normal_encoding*, !dbg !8180
  %type58 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %47, i32 0, i32 1, !dbg !8180
  %arrayidx59 = getelementptr inbounds [256 x i8], [256 x i8]* %type58, i64 0, i64 %idxprom57, !dbg !8180
  %48 = load i8, i8* %arrayidx59, align 1, !dbg !8180
  %conv60 = zext i8 %48 to i32, !dbg !8180
  br label %cond.end65, !dbg !8180

cond.false61:                                     ; preds = %while.body
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !8182
  %arrayidx62 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !8182
  %50 = load i8, i8* %arrayidx62, align 1, !dbg !8182
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !8182
  %arrayidx63 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !8182
  %52 = load i8, i8* %arrayidx63, align 1, !dbg !8182
  %call64 = call i32 @unicode_byte_type(i8 signext %50, i8 signext %52), !dbg !8182
  br label %cond.end65, !dbg !8182

cond.end65:                                       ; preds = %cond.false61, %cond.true56
  %cond66 = phi i32 [ %conv60, %cond.true56 ], [ %call64, %cond.false61 ], !dbg !8184
  switch i32 %cond66, label %sw.default115 [
    i32 29, label %sw.bb67
    i32 22, label %sw.bb87
    i32 24, label %sw.bb87
    i32 25, label %sw.bb87
    i32 26, label %sw.bb87
    i32 27, label %sw.bb87
    i32 5, label %sw.bb89
    i32 6, label %sw.bb97
    i32 7, label %sw.bb105
    i32 18, label %sw.bb113
  ], !dbg !8186

sw.bb67:                                          ; preds = %cond.end65
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !8187
  %arrayidx68 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !8187
  %54 = load i8, i8* %arrayidx68, align 1, !dbg !8187
  %idxprom69 = zext i8 %54 to i64, !dbg !8187
  %arrayidx70 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom69, !dbg !8187
  %55 = load i8, i8* %arrayidx70, align 1, !dbg !8187
  %conv71 = zext i8 %55 to i32, !dbg !8187
  %shl72 = shl i32 %conv71, 3, !dbg !8187
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !8187
  %arrayidx73 = getelementptr inbounds i8, i8* %56, i64 0, !dbg !8187
  %57 = load i8, i8* %arrayidx73, align 1, !dbg !8187
  %conv74 = zext i8 %57 to i32, !dbg !8187
  %shr75 = ashr i32 %conv74, 5, !dbg !8187
  %add76 = add nsw i32 %shl72, %shr75, !dbg !8187
  %idxprom77 = sext i32 %add76 to i64, !dbg !8187
  %arrayidx78 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom77, !dbg !8187
  %58 = load i32, i32* %arrayidx78, align 4, !dbg !8187
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !8187
  %arrayidx79 = getelementptr inbounds i8, i8* %59, i64 0, !dbg !8187
  %60 = load i8, i8* %arrayidx79, align 1, !dbg !8187
  %conv80 = zext i8 %60 to i32, !dbg !8187
  %and81 = and i32 %conv80, 31, !dbg !8187
  %shl82 = shl i32 1, %and81, !dbg !8187
  %and83 = and i32 %58, %shl82, !dbg !8187
  %tobool84 = icmp ne i32 %and83, 0, !dbg !8187
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !8190

if.then85:                                        ; preds = %sw.bb67
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !8191
  %62 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8191
  store i8* %61, i8** %62, align 8, !dbg !8191
  store i32 0, i32* %retval, align 4, !dbg !8191
  br label %return, !dbg !8191

if.end86:                                         ; preds = %sw.bb67
  br label %sw.bb87, !dbg !8194

sw.bb87:                                          ; preds = %cond.end65, %cond.end65, %cond.end65, %cond.end65, %cond.end65, %if.end86
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !8196
  %add.ptr88 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !8196
  store i8* %add.ptr88, i8** %ptr.addr, align 8, !dbg !8196
  br label %sw.epilog116, !dbg !8196

sw.bb89:                                          ; preds = %cond.end65
  %64 = load i8*, i8** %end.addr, align 8, !dbg !8198
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !8198
  %sub.ptr.lhs.cast90 = ptrtoint i8* %64 to i64, !dbg !8198
  %sub.ptr.rhs.cast91 = ptrtoint i8* %65 to i64, !dbg !8198
  %sub.ptr.sub92 = sub i64 %sub.ptr.lhs.cast90, %sub.ptr.rhs.cast91, !dbg !8198
  %cmp93 = icmp slt i64 %sub.ptr.sub92, 2, !dbg !8198
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !8198

if.then95:                                        ; preds = %sw.bb89
  store i32 -2, i32* %retval, align 4, !dbg !8201
  br label %return, !dbg !8201

if.end96:                                         ; preds = %sw.bb89
  %66 = load i8*, i8** %ptr.addr, align 8, !dbg !8203
  %67 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8203
  store i8* %66, i8** %67, align 8, !dbg !8203
  store i32 0, i32* %retval, align 4, !dbg !8203
  br label %return, !dbg !8203

sw.bb97:                                          ; preds = %cond.end65
  %68 = load i8*, i8** %end.addr, align 8, !dbg !8207
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !8207
  %sub.ptr.lhs.cast98 = ptrtoint i8* %68 to i64, !dbg !8207
  %sub.ptr.rhs.cast99 = ptrtoint i8* %69 to i64, !dbg !8207
  %sub.ptr.sub100 = sub i64 %sub.ptr.lhs.cast98, %sub.ptr.rhs.cast99, !dbg !8207
  %cmp101 = icmp slt i64 %sub.ptr.sub100, 3, !dbg !8207
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !8207

if.then103:                                       ; preds = %sw.bb97
  store i32 -2, i32* %retval, align 4, !dbg !8210
  br label %return, !dbg !8210

if.end104:                                        ; preds = %sw.bb97
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !8212
  %71 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8212
  store i8* %70, i8** %71, align 8, !dbg !8212
  store i32 0, i32* %retval, align 4, !dbg !8212
  br label %return, !dbg !8212

sw.bb105:                                         ; preds = %cond.end65
  %72 = load i8*, i8** %end.addr, align 8, !dbg !8216
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !8216
  %sub.ptr.lhs.cast106 = ptrtoint i8* %72 to i64, !dbg !8216
  %sub.ptr.rhs.cast107 = ptrtoint i8* %73 to i64, !dbg !8216
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107, !dbg !8216
  %cmp109 = icmp slt i64 %sub.ptr.sub108, 4, !dbg !8216
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !8216

if.then111:                                       ; preds = %sw.bb105
  store i32 -2, i32* %retval, align 4, !dbg !8219
  br label %return, !dbg !8219

if.end112:                                        ; preds = %sw.bb105
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !8221
  %75 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8221
  store i8* %74, i8** %75, align 8, !dbg !8221
  store i32 0, i32* %retval, align 4, !dbg !8221
  br label %return, !dbg !8221

sw.bb113:                                         ; preds = %cond.end65
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !8225
  %add.ptr114 = getelementptr inbounds i8, i8* %76, i64 2, !dbg !8226
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8227
  store i8* %add.ptr114, i8** %77, align 8, !dbg !8228
  store i32 28, i32* %retval, align 4, !dbg !8229
  br label %return, !dbg !8229

sw.default115:                                    ; preds = %cond.end65
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !8230
  %79 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8231
  store i8* %78, i8** %79, align 8, !dbg !8232
  store i32 0, i32* %retval, align 4, !dbg !8233
  br label %return, !dbg !8233

sw.epilog116:                                     ; preds = %sw.bb87
  br label %while.cond, !dbg !8234

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !8236
  br label %return, !dbg !8236

return:                                           ; preds = %while.end, %sw.default115, %sw.bb113, %if.end112, %if.then111, %if.end104, %if.then103, %if.end96, %if.then95, %if.then85, %sw.default, %sw.bb46, %if.end45, %if.then44, %if.end37, %if.then36, %if.end29, %if.then28, %if.then19, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !8237
  ret i32 %80, !dbg !8237
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanPoundName(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !307 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !8238, metadata !444), !dbg !8239
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8240, metadata !444), !dbg !8241
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8242, metadata !444), !dbg !8243
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !8244, metadata !444), !dbg !8245
  %0 = load i8*, i8** %end.addr, align 8, !dbg !8246
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !8246
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !8246
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8246
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8246
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !8246
  br i1 %cmp, label %if.end, label %if.then, !dbg !8249

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8250
  br label %return, !dbg !8250

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !8253
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !8253
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8253
  %conv = sext i8 %3 to i32, !dbg !8253
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8253
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8253

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !8254
  %5 = load i8, i8* %4, align 1, !dbg !8254
  %idxprom = zext i8 %5 to i64, !dbg !8254
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8254
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !8254
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !8254
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !8254
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !8254
  %conv4 = zext i8 %8 to i32, !dbg !8254
  br label %cond.end, !dbg !8254

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !8256
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !8256
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !8256
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !8256
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !8256
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !8256
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !8256
  br label %cond.end, !dbg !8256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !8258
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb21
    i32 24, label %sw.bb21
    i32 5, label %sw.bb22
    i32 6, label %sw.bb30
    i32 7, label %sw.bb38
  ], !dbg !8260

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !8261
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !8261
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !8261
  %idxprom8 = zext i8 %14 to i64, !dbg !8261
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom8, !dbg !8261
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !8261
  %conv10 = zext i8 %15 to i32, !dbg !8261
  %shl = shl i32 %conv10, 3, !dbg !8261
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !8261
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !8261
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !8261
  %conv12 = zext i8 %17 to i32, !dbg !8261
  %shr = ashr i32 %conv12, 5, !dbg !8261
  %add = add nsw i32 %shl, %shr, !dbg !8261
  %idxprom13 = sext i32 %add to i64, !dbg !8261
  %arrayidx14 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom13, !dbg !8261
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !8261
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !8261
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !8261
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !8261
  %conv16 = zext i8 %20 to i32, !dbg !8261
  %and = and i32 %conv16, 31, !dbg !8261
  %shl17 = shl i32 1, %and, !dbg !8261
  %and18 = and i32 %18, %shl17, !dbg !8261
  %tobool = icmp ne i32 %and18, 0, !dbg !8261
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !8264

if.then19:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !8265
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8265
  store i8* %21, i8** %22, align 8, !dbg !8265
  store i32 0, i32* %retval, align 4, !dbg !8265
  br label %return, !dbg !8265

if.end20:                                         ; preds = %sw.bb
  br label %sw.bb21, !dbg !8268

sw.bb21:                                          ; preds = %cond.end, %cond.end, %if.end20
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !8270
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !8270
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !8270
  br label %sw.epilog, !dbg !8270

sw.bb22:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !8272
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !8272
  %sub.ptr.lhs.cast23 = ptrtoint i8* %24 to i64, !dbg !8272
  %sub.ptr.rhs.cast24 = ptrtoint i8* %25 to i64, !dbg !8272
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !8272
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 2, !dbg !8272
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !8272

if.then28:                                        ; preds = %sw.bb22
  store i32 -2, i32* %retval, align 4, !dbg !8275
  br label %return, !dbg !8275

if.end29:                                         ; preds = %sw.bb22
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !8277
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8277
  store i8* %26, i8** %27, align 8, !dbg !8277
  store i32 0, i32* %retval, align 4, !dbg !8277
  br label %return, !dbg !8277

sw.bb30:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !8281
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !8281
  %sub.ptr.lhs.cast31 = ptrtoint i8* %28 to i64, !dbg !8281
  %sub.ptr.rhs.cast32 = ptrtoint i8* %29 to i64, !dbg !8281
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !8281
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 3, !dbg !8281
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !8281

if.then36:                                        ; preds = %sw.bb30
  store i32 -2, i32* %retval, align 4, !dbg !8284
  br label %return, !dbg !8284

if.end37:                                         ; preds = %sw.bb30
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !8286
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8286
  store i8* %30, i8** %31, align 8, !dbg !8286
  store i32 0, i32* %retval, align 4, !dbg !8286
  br label %return, !dbg !8286

sw.bb38:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !8290
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !8290
  %sub.ptr.lhs.cast39 = ptrtoint i8* %32 to i64, !dbg !8290
  %sub.ptr.rhs.cast40 = ptrtoint i8* %33 to i64, !dbg !8290
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !8290
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 4, !dbg !8290
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8290

if.then44:                                        ; preds = %sw.bb38
  store i32 -2, i32* %retval, align 4, !dbg !8293
  br label %return, !dbg !8293

if.end45:                                         ; preds = %sw.bb38
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !8295
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8295
  store i8* %34, i8** %35, align 8, !dbg !8295
  store i32 0, i32* %retval, align 4, !dbg !8295
  br label %return, !dbg !8295

sw.default:                                       ; preds = %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !8299
  %37 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8300
  store i8* %36, i8** %37, align 8, !dbg !8301
  store i32 0, i32* %retval, align 4, !dbg !8302
  br label %return, !dbg !8302

sw.epilog:                                        ; preds = %sw.bb21
  br label %while.cond, !dbg !8303

while.cond:                                       ; preds = %sw.epilog114, %sw.epilog
  %38 = load i8*, i8** %end.addr, align 8, !dbg !8304
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !8304
  %sub.ptr.lhs.cast46 = ptrtoint i8* %38 to i64, !dbg !8304
  %sub.ptr.rhs.cast47 = ptrtoint i8* %39 to i64, !dbg !8304
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47, !dbg !8304
  %cmp49 = icmp sge i64 %sub.ptr.sub48, 2, !dbg !8304
  br i1 %cmp49, label %while.body, label %while.end, !dbg !8305

while.body:                                       ; preds = %while.cond
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !8306
  %arrayidx51 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !8306
  %41 = load i8, i8* %arrayidx51, align 1, !dbg !8306
  %conv52 = sext i8 %41 to i32, !dbg !8306
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !8306
  br i1 %cmp53, label %cond.true55, label %cond.false60, !dbg !8306

cond.true55:                                      ; preds = %while.body
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !8308
  %43 = load i8, i8* %42, align 1, !dbg !8308
  %idxprom56 = zext i8 %43 to i64, !dbg !8308
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8308
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !8308
  %type57 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !8308
  %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* %type57, i64 0, i64 %idxprom56, !dbg !8308
  %46 = load i8, i8* %arrayidx58, align 1, !dbg !8308
  %conv59 = zext i8 %46 to i32, !dbg !8308
  br label %cond.end64, !dbg !8308

cond.false60:                                     ; preds = %while.body
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !8310
  %arrayidx61 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !8310
  %48 = load i8, i8* %arrayidx61, align 1, !dbg !8310
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !8310
  %arrayidx62 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !8310
  %50 = load i8, i8* %arrayidx62, align 1, !dbg !8310
  %call63 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !8310
  br label %cond.end64, !dbg !8310

cond.end64:                                       ; preds = %cond.false60, %cond.true55
  %cond65 = phi i32 [ %conv59, %cond.true55 ], [ %call63, %cond.false60 ], !dbg !8312
  switch i32 %cond65, label %sw.default113 [
    i32 29, label %sw.bb66
    i32 22, label %sw.bb86
    i32 24, label %sw.bb86
    i32 25, label %sw.bb86
    i32 26, label %sw.bb86
    i32 27, label %sw.bb86
    i32 5, label %sw.bb88
    i32 6, label %sw.bb96
    i32 7, label %sw.bb104
    i32 9, label %sw.bb112
    i32 10, label %sw.bb112
    i32 21, label %sw.bb112
    i32 32, label %sw.bb112
    i32 11, label %sw.bb112
    i32 30, label %sw.bb112
    i32 36, label %sw.bb112
  ], !dbg !8314

sw.bb66:                                          ; preds = %cond.end64
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !8315
  %arrayidx67 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !8315
  %52 = load i8, i8* %arrayidx67, align 1, !dbg !8315
  %idxprom68 = zext i8 %52 to i64, !dbg !8315
  %arrayidx69 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom68, !dbg !8315
  %53 = load i8, i8* %arrayidx69, align 1, !dbg !8315
  %conv70 = zext i8 %53 to i32, !dbg !8315
  %shl71 = shl i32 %conv70, 3, !dbg !8315
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !8315
  %arrayidx72 = getelementptr inbounds i8, i8* %54, i64 0, !dbg !8315
  %55 = load i8, i8* %arrayidx72, align 1, !dbg !8315
  %conv73 = zext i8 %55 to i32, !dbg !8315
  %shr74 = ashr i32 %conv73, 5, !dbg !8315
  %add75 = add nsw i32 %shl71, %shr74, !dbg !8315
  %idxprom76 = sext i32 %add75 to i64, !dbg !8315
  %arrayidx77 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom76, !dbg !8315
  %56 = load i32, i32* %arrayidx77, align 4, !dbg !8315
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !8315
  %arrayidx78 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !8315
  %58 = load i8, i8* %arrayidx78, align 1, !dbg !8315
  %conv79 = zext i8 %58 to i32, !dbg !8315
  %and80 = and i32 %conv79, 31, !dbg !8315
  %shl81 = shl i32 1, %and80, !dbg !8315
  %and82 = and i32 %56, %shl81, !dbg !8315
  %tobool83 = icmp ne i32 %and82, 0, !dbg !8315
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !8318

if.then84:                                        ; preds = %sw.bb66
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !8319
  %60 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8319
  store i8* %59, i8** %60, align 8, !dbg !8319
  store i32 0, i32* %retval, align 4, !dbg !8319
  br label %return, !dbg !8319

if.end85:                                         ; preds = %sw.bb66
  br label %sw.bb86, !dbg !8322

sw.bb86:                                          ; preds = %cond.end64, %cond.end64, %cond.end64, %cond.end64, %cond.end64, %if.end85
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !8324
  %add.ptr87 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !8324
  store i8* %add.ptr87, i8** %ptr.addr, align 8, !dbg !8324
  br label %sw.epilog114, !dbg !8324

sw.bb88:                                          ; preds = %cond.end64
  %62 = load i8*, i8** %end.addr, align 8, !dbg !8326
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !8326
  %sub.ptr.lhs.cast89 = ptrtoint i8* %62 to i64, !dbg !8326
  %sub.ptr.rhs.cast90 = ptrtoint i8* %63 to i64, !dbg !8326
  %sub.ptr.sub91 = sub i64 %sub.ptr.lhs.cast89, %sub.ptr.rhs.cast90, !dbg !8326
  %cmp92 = icmp slt i64 %sub.ptr.sub91, 2, !dbg !8326
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !8326

if.then94:                                        ; preds = %sw.bb88
  store i32 -2, i32* %retval, align 4, !dbg !8329
  br label %return, !dbg !8329

if.end95:                                         ; preds = %sw.bb88
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !8331
  %65 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8331
  store i8* %64, i8** %65, align 8, !dbg !8331
  store i32 0, i32* %retval, align 4, !dbg !8331
  br label %return, !dbg !8331

sw.bb96:                                          ; preds = %cond.end64
  %66 = load i8*, i8** %end.addr, align 8, !dbg !8335
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !8335
  %sub.ptr.lhs.cast97 = ptrtoint i8* %66 to i64, !dbg !8335
  %sub.ptr.rhs.cast98 = ptrtoint i8* %67 to i64, !dbg !8335
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98, !dbg !8335
  %cmp100 = icmp slt i64 %sub.ptr.sub99, 3, !dbg !8335
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !8335

if.then102:                                       ; preds = %sw.bb96
  store i32 -2, i32* %retval, align 4, !dbg !8338
  br label %return, !dbg !8338

if.end103:                                        ; preds = %sw.bb96
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !8340
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8340
  store i8* %68, i8** %69, align 8, !dbg !8340
  store i32 0, i32* %retval, align 4, !dbg !8340
  br label %return, !dbg !8340

sw.bb104:                                         ; preds = %cond.end64
  %70 = load i8*, i8** %end.addr, align 8, !dbg !8344
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !8344
  %sub.ptr.lhs.cast105 = ptrtoint i8* %70 to i64, !dbg !8344
  %sub.ptr.rhs.cast106 = ptrtoint i8* %71 to i64, !dbg !8344
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106, !dbg !8344
  %cmp108 = icmp slt i64 %sub.ptr.sub107, 4, !dbg !8344
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !8344

if.then110:                                       ; preds = %sw.bb104
  store i32 -2, i32* %retval, align 4, !dbg !8347
  br label %return, !dbg !8347

if.end111:                                        ; preds = %sw.bb104
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !8349
  %73 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8349
  store i8* %72, i8** %73, align 8, !dbg !8349
  store i32 0, i32* %retval, align 4, !dbg !8349
  br label %return, !dbg !8349

sw.bb112:                                         ; preds = %cond.end64, %cond.end64, %cond.end64, %cond.end64, %cond.end64, %cond.end64, %cond.end64
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !8353
  %75 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8354
  store i8* %74, i8** %75, align 8, !dbg !8355
  store i32 20, i32* %retval, align 4, !dbg !8356
  br label %return, !dbg !8356

sw.default113:                                    ; preds = %cond.end64
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !8357
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8358
  store i8* %76, i8** %77, align 8, !dbg !8359
  store i32 0, i32* %retval, align 4, !dbg !8360
  br label %return, !dbg !8360

sw.epilog114:                                     ; preds = %sw.bb86
  br label %while.cond, !dbg !8361

while.end:                                        ; preds = %while.cond
  store i32 -20, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

return:                                           ; preds = %while.end, %sw.default113, %sw.bb112, %if.end111, %if.then110, %if.end103, %if.then102, %if.end95, %if.then94, %if.then84, %sw.default, %if.end45, %if.then44, %if.end37, %if.then36, %if.end29, %if.then28, %if.then19, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !8364
  ret i32 %78, !dbg !8364
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanComment(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !303 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !8365, metadata !444), !dbg !8366
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8367, metadata !444), !dbg !8368
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8369, metadata !444), !dbg !8370
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !8371, metadata !444), !dbg !8372
  %0 = load i8*, i8** %end.addr, align 8, !dbg !8373
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !8373
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !8373
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8373
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8373
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !8373
  br i1 %cmp, label %if.then, label %if.end89, !dbg !8375

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !8376
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !8376
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8376
  %conv = sext i8 %3 to i32, !dbg !8376
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8376
  br i1 %cmp1, label %land.lhs.true, label %if.then7, !dbg !8376

land.lhs.true:                                    ; preds = %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !8379
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !8379
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !8379
  %conv4 = sext i8 %5 to i32, !dbg !8379
  %cmp5 = icmp eq i32 %conv4, 45, !dbg !8379
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !8381

if.then7:                                         ; preds = %land.lhs.true, %if.then
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !8382
  %7 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8384
  store i8* %6, i8** %7, align 8, !dbg !8385
  store i32 0, i32* %retval, align 4, !dbg !8386
  br label %return, !dbg !8386

if.end:                                           ; preds = %land.lhs.true
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !8387
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 2, !dbg !8387
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !8387
  br label %while.cond, !dbg !8388

while.cond:                                       ; preds = %sw.epilog, %if.end
  %9 = load i8*, i8** %end.addr, align 8, !dbg !8389
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !8389
  %sub.ptr.lhs.cast8 = ptrtoint i8* %9 to i64, !dbg !8389
  %sub.ptr.rhs.cast9 = ptrtoint i8* %10 to i64, !dbg !8389
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9, !dbg !8389
  %cmp11 = icmp sge i64 %sub.ptr.sub10, 2, !dbg !8389
  br i1 %cmp11, label %while.body, label %while.end, !dbg !8391

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !8392
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !8392
  %12 = load i8, i8* %arrayidx13, align 1, !dbg !8392
  %conv14 = sext i8 %12 to i32, !dbg !8392
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !8392
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !8392

cond.true:                                        ; preds = %while.body
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !8394
  %14 = load i8, i8* %13, align 1, !dbg !8394
  %idxprom = zext i8 %14 to i64, !dbg !8394
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8394
  %16 = bitcast %struct.encoding* %15 to %struct.normal_encoding*, !dbg !8394
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %16, i32 0, i32 1, !dbg !8394
  %arrayidx17 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !8394
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !8394
  %conv18 = zext i8 %17 to i32, !dbg !8394
  br label %cond.end, !dbg !8394

cond.false:                                       ; preds = %while.body
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !8396
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !8396
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !8396
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !8396
  %arrayidx20 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !8396
  %21 = load i8, i8* %arrayidx20, align 1, !dbg !8396
  %call = call i32 @unicode_byte_type(i8 signext %19, i8 signext %21), !dbg !8396
  br label %cond.end, !dbg !8396

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv18, %cond.true ], [ %call, %cond.false ], !dbg !8398
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb29
    i32 7, label %sw.bb38
    i32 0, label %sw.bb47
    i32 1, label %sw.bb47
    i32 8, label %sw.bb47
    i32 27, label %sw.bb48
  ], !dbg !8400

sw.bb:                                            ; preds = %cond.end
  %22 = load i8*, i8** %end.addr, align 8, !dbg !8401
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !8401
  %sub.ptr.lhs.cast21 = ptrtoint i8* %22 to i64, !dbg !8401
  %sub.ptr.rhs.cast22 = ptrtoint i8* %23 to i64, !dbg !8401
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !8401
  %cmp24 = icmp slt i64 %sub.ptr.sub23, 2, !dbg !8401
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !8404

if.then26:                                        ; preds = %sw.bb
  store i32 -2, i32* %retval, align 4, !dbg !8405
  br label %return, !dbg !8405

if.end27:                                         ; preds = %sw.bb
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !8407
  %add.ptr28 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !8407
  store i8* %add.ptr28, i8** %ptr.addr, align 8, !dbg !8407
  br label %sw.epilog, !dbg !8407

sw.bb29:                                          ; preds = %cond.end
  %25 = load i8*, i8** %end.addr, align 8, !dbg !8409
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !8409
  %sub.ptr.lhs.cast30 = ptrtoint i8* %25 to i64, !dbg !8409
  %sub.ptr.rhs.cast31 = ptrtoint i8* %26 to i64, !dbg !8409
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !8409
  %cmp33 = icmp slt i64 %sub.ptr.sub32, 3, !dbg !8409
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !8409

if.then35:                                        ; preds = %sw.bb29
  store i32 -2, i32* %retval, align 4, !dbg !8412
  br label %return, !dbg !8412

if.end36:                                         ; preds = %sw.bb29
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !8414
  %add.ptr37 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !8414
  store i8* %add.ptr37, i8** %ptr.addr, align 8, !dbg !8414
  br label %sw.epilog, !dbg !8414

sw.bb38:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !8416
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !8416
  %sub.ptr.lhs.cast39 = ptrtoint i8* %28 to i64, !dbg !8416
  %sub.ptr.rhs.cast40 = ptrtoint i8* %29 to i64, !dbg !8416
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !8416
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 4, !dbg !8416
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8416

if.then44:                                        ; preds = %sw.bb38
  store i32 -2, i32* %retval, align 4, !dbg !8419
  br label %return, !dbg !8419

if.end45:                                         ; preds = %sw.bb38
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !8421
  %add.ptr46 = getelementptr inbounds i8, i8* %30, i64 4, !dbg !8421
  store i8* %add.ptr46, i8** %ptr.addr, align 8, !dbg !8421
  br label %sw.epilog, !dbg !8421

sw.bb47:                                          ; preds = %cond.end, %cond.end, %cond.end
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !8423
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8423
  store i8* %31, i8** %32, align 8, !dbg !8423
  store i32 0, i32* %retval, align 4, !dbg !8423
  br label %return, !dbg !8423

sw.bb48:                                          ; preds = %cond.end
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !8425
  %add.ptr49 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !8425
  store i8* %add.ptr49, i8** %ptr.addr, align 8, !dbg !8425
  %34 = load i8*, i8** %end.addr, align 8, !dbg !8426
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !8426
  %sub.ptr.lhs.cast50 = ptrtoint i8* %34 to i64, !dbg !8426
  %sub.ptr.rhs.cast51 = ptrtoint i8* %35 to i64, !dbg !8426
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51, !dbg !8426
  %cmp53 = icmp sge i64 %sub.ptr.sub52, 2, !dbg !8426
  br i1 %cmp53, label %if.end56, label %if.then55, !dbg !8429

if.then55:                                        ; preds = %sw.bb48
  store i32 -1, i32* %retval, align 4, !dbg !8430
  br label %return, !dbg !8430

if.end56:                                         ; preds = %sw.bb48
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !8433
  %arrayidx57 = getelementptr inbounds i8, i8* %36, i64 1, !dbg !8433
  %37 = load i8, i8* %arrayidx57, align 1, !dbg !8433
  %conv58 = sext i8 %37 to i32, !dbg !8433
  %cmp59 = icmp eq i32 %conv58, 0, !dbg !8433
  br i1 %cmp59, label %land.lhs.true61, label %if.end87, !dbg !8433

land.lhs.true61:                                  ; preds = %if.end56
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !8435
  %arrayidx62 = getelementptr inbounds i8, i8* %38, i64 0, !dbg !8435
  %39 = load i8, i8* %arrayidx62, align 1, !dbg !8435
  %conv63 = sext i8 %39 to i32, !dbg !8435
  %cmp64 = icmp eq i32 %conv63, 45, !dbg !8435
  br i1 %cmp64, label %if.then66, label %if.end87, !dbg !8435

if.then66:                                        ; preds = %land.lhs.true61
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !8437
  %add.ptr67 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !8437
  store i8* %add.ptr67, i8** %ptr.addr, align 8, !dbg !8437
  %41 = load i8*, i8** %end.addr, align 8, !dbg !8439
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !8439
  %sub.ptr.lhs.cast68 = ptrtoint i8* %41 to i64, !dbg !8439
  %sub.ptr.rhs.cast69 = ptrtoint i8* %42 to i64, !dbg !8439
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69, !dbg !8439
  %cmp71 = icmp sge i64 %sub.ptr.sub70, 2, !dbg !8439
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !8442

if.then73:                                        ; preds = %if.then66
  store i32 -1, i32* %retval, align 4, !dbg !8443
  br label %return, !dbg !8443

if.end74:                                         ; preds = %if.then66
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !8446
  %arrayidx75 = getelementptr inbounds i8, i8* %43, i64 1, !dbg !8446
  %44 = load i8, i8* %arrayidx75, align 1, !dbg !8446
  %conv76 = sext i8 %44 to i32, !dbg !8446
  %cmp77 = icmp eq i32 %conv76, 0, !dbg !8446
  br i1 %cmp77, label %land.lhs.true79, label %if.then84, !dbg !8446

land.lhs.true79:                                  ; preds = %if.end74
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !8448
  %arrayidx80 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !8448
  %46 = load i8, i8* %arrayidx80, align 1, !dbg !8448
  %conv81 = sext i8 %46 to i32, !dbg !8448
  %cmp82 = icmp eq i32 %conv81, 62, !dbg !8448
  br i1 %cmp82, label %if.end85, label %if.then84, !dbg !8450

if.then84:                                        ; preds = %land.lhs.true79, %if.end74
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !8451
  %48 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8453
  store i8* %47, i8** %48, align 8, !dbg !8454
  store i32 0, i32* %retval, align 4, !dbg !8455
  br label %return, !dbg !8455

if.end85:                                         ; preds = %land.lhs.true79
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !8456
  %add.ptr86 = getelementptr inbounds i8, i8* %49, i64 2, !dbg !8457
  %50 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8458
  store i8* %add.ptr86, i8** %50, align 8, !dbg !8459
  store i32 13, i32* %retval, align 4, !dbg !8460
  br label %return, !dbg !8460

if.end87:                                         ; preds = %land.lhs.true61, %if.end56
  br label %sw.epilog, !dbg !8461

sw.default:                                       ; preds = %cond.end
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !8462
  %add.ptr88 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !8462
  store i8* %add.ptr88, i8** %ptr.addr, align 8, !dbg !8462
  br label %sw.epilog, !dbg !8463

sw.epilog:                                        ; preds = %sw.default, %if.end87, %if.end45, %if.end36, %if.end27
  br label %while.cond, !dbg !8464

while.end:                                        ; preds = %while.cond
  br label %if.end89, !dbg !8466

if.end89:                                         ; preds = %while.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !8467
  br label %return, !dbg !8467

return:                                           ; preds = %if.end89, %if.end85, %if.then84, %if.then73, %if.then55, %sw.bb47, %if.then44, %if.then35, %if.then26, %if.then7
  %52 = load i32, i32* %retval, align 4, !dbg !8468
  ret i32 %52, !dbg !8468
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_checkPiTarget(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end, i32* %tokPtr) #0 !dbg !305 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %tokPtr.addr = alloca i32*, align 8
  %upper = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !8469, metadata !444), !dbg !8470
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8471, metadata !444), !dbg !8472
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8473, metadata !444), !dbg !8474
  store i32* %tokPtr, i32** %tokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tokPtr.addr, metadata !8475, metadata !444), !dbg !8476
  call void @llvm.dbg.declare(metadata i32* %upper, metadata !8477, metadata !444), !dbg !8478
  store i32 0, i32* %upper, align 4, !dbg !8478
  %0 = load i32*, i32** %tokPtr.addr, align 8, !dbg !8479
  store i32 11, i32* %0, align 4, !dbg !8480
  %1 = load i8*, i8** %end.addr, align 8, !dbg !8481
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !8483
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !8484
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !8484
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8484
  %cmp = icmp ne i64 %sub.ptr.sub, 6, !dbg !8485
  br i1 %cmp, label %if.then, label %if.end, !dbg !8486

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8487
  br label %return, !dbg !8487

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !8488
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8488
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8488
  %conv = sext i8 %4 to i32, !dbg !8488
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8488
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8488

cond.true:                                        ; preds = %if.end
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !8489
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 0, !dbg !8489
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !8489
  %conv4 = sext i8 %6 to i32, !dbg !8489
  br label %cond.end, !dbg !8489

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !8491

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ -1, %cond.false ], !dbg !8493
  switch i32 %cond, label %sw.default [
    i32 120, label %sw.bb
    i32 88, label %sw.bb5
  ], !dbg !8495

sw.bb:                                            ; preds = %cond.end
  br label %sw.epilog, !dbg !8496

sw.bb5:                                           ; preds = %cond.end
  store i32 1, i32* %upper, align 4, !dbg !8498
  br label %sw.epilog, !dbg !8499

sw.default:                                       ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !8500
  br label %return, !dbg !8500

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !8501
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2, !dbg !8501
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !8501
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !8502
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !8502
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !8502
  %conv7 = sext i8 %9 to i32, !dbg !8502
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !8502
  br i1 %cmp8, label %cond.true10, label %cond.false13, !dbg !8502

cond.true10:                                      ; preds = %sw.epilog
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !8503
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !8503
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !8503
  %conv12 = sext i8 %11 to i32, !dbg !8503
  br label %cond.end14, !dbg !8503

cond.false13:                                     ; preds = %sw.epilog
  br label %cond.end14, !dbg !8504

cond.end14:                                       ; preds = %cond.false13, %cond.true10
  %cond15 = phi i32 [ %conv12, %cond.true10 ], [ -1, %cond.false13 ], !dbg !8505
  switch i32 %cond15, label %sw.default18 [
    i32 109, label %sw.bb16
    i32 77, label %sw.bb17
  ], !dbg !8506

sw.bb16:                                          ; preds = %cond.end14
  br label %sw.epilog19, !dbg !8507

sw.bb17:                                          ; preds = %cond.end14
  store i32 1, i32* %upper, align 4, !dbg !8509
  br label %sw.epilog19, !dbg !8510

sw.default18:                                     ; preds = %cond.end14
  store i32 1, i32* %retval, align 4, !dbg !8511
  br label %return, !dbg !8511

sw.epilog19:                                      ; preds = %sw.bb17, %sw.bb16
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !8512
  %add.ptr20 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !8512
  store i8* %add.ptr20, i8** %ptr.addr, align 8, !dbg !8512
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !8513
  %arrayidx21 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !8513
  %14 = load i8, i8* %arrayidx21, align 1, !dbg !8513
  %conv22 = sext i8 %14 to i32, !dbg !8513
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !8513
  br i1 %cmp23, label %cond.true25, label %cond.false28, !dbg !8513

cond.true25:                                      ; preds = %sw.epilog19
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !8514
  %arrayidx26 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !8514
  %16 = load i8, i8* %arrayidx26, align 1, !dbg !8514
  %conv27 = sext i8 %16 to i32, !dbg !8514
  br label %cond.end29, !dbg !8514

cond.false28:                                     ; preds = %sw.epilog19
  br label %cond.end29, !dbg !8515

cond.end29:                                       ; preds = %cond.false28, %cond.true25
  %cond30 = phi i32 [ %conv27, %cond.true25 ], [ -1, %cond.false28 ], !dbg !8516
  switch i32 %cond30, label %sw.default33 [
    i32 108, label %sw.bb31
    i32 76, label %sw.bb32
  ], !dbg !8517

sw.bb31:                                          ; preds = %cond.end29
  br label %sw.epilog34, !dbg !8518

sw.bb32:                                          ; preds = %cond.end29
  store i32 1, i32* %upper, align 4, !dbg !8520
  br label %sw.epilog34, !dbg !8521

sw.default33:                                     ; preds = %cond.end29
  store i32 1, i32* %retval, align 4, !dbg !8522
  br label %return, !dbg !8522

sw.epilog34:                                      ; preds = %sw.bb32, %sw.bb31
  %17 = load i32, i32* %upper, align 4, !dbg !8523
  %tobool = icmp ne i32 %17, 0, !dbg !8523
  br i1 %tobool, label %if.then35, label %if.end36, !dbg !8525

if.then35:                                        ; preds = %sw.epilog34
  store i32 0, i32* %retval, align 4, !dbg !8526
  br label %return, !dbg !8526

if.end36:                                         ; preds = %sw.epilog34
  %18 = load i32*, i32** %tokPtr.addr, align 8, !dbg !8527
  store i32 12, i32* %18, align 4, !dbg !8528
  store i32 1, i32* %retval, align 4, !dbg !8529
  br label %return, !dbg !8529

return:                                           ; preds = %if.end36, %if.then35, %sw.default33, %sw.default18, %sw.default, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8530
  ret i32 %19, !dbg !8530
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanLt(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !309 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !8531, metadata !444), !dbg !8532
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8533, metadata !444), !dbg !8534
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8535, metadata !444), !dbg !8536
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !8537, metadata !444), !dbg !8538
  %0 = load i8*, i8** %end.addr, align 8, !dbg !8539
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !8539
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !8539
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8539
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8539
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !8539
  br i1 %cmp, label %if.end, label %if.then, !dbg !8542

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8543
  br label %return, !dbg !8543

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !8546
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !8546
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8546
  %conv = sext i8 %3 to i32, !dbg !8546
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8546
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8546

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !8547
  %5 = load i8, i8* %4, align 1, !dbg !8547
  %idxprom = zext i8 %5 to i64, !dbg !8547
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8547
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !8547
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !8547
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !8547
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !8547
  %conv4 = zext i8 %8 to i32, !dbg !8547
  br label %cond.end, !dbg !8547

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !8549
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !8549
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !8549
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !8549
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !8549
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !8549
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !8549
  br label %cond.end, !dbg !8549

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !8551
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb21
    i32 24, label %sw.bb21
    i32 5, label %sw.bb22
    i32 6, label %sw.bb30
    i32 7, label %sw.bb38
    i32 16, label %sw.bb46
    i32 15, label %sw.bb76
    i32 17, label %sw.bb79
  ], !dbg !8553

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !8554
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !8554
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !8554
  %idxprom8 = zext i8 %14 to i64, !dbg !8554
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom8, !dbg !8554
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !8554
  %conv10 = zext i8 %15 to i32, !dbg !8554
  %shl = shl i32 %conv10, 3, !dbg !8554
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !8554
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !8554
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !8554
  %conv12 = zext i8 %17 to i32, !dbg !8554
  %shr = ashr i32 %conv12, 5, !dbg !8554
  %add = add nsw i32 %shl, %shr, !dbg !8554
  %idxprom13 = sext i32 %add to i64, !dbg !8554
  %arrayidx14 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom13, !dbg !8554
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !8554
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !8554
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !8554
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !8554
  %conv16 = zext i8 %20 to i32, !dbg !8554
  %and = and i32 %conv16, 31, !dbg !8554
  %shl17 = shl i32 1, %and, !dbg !8554
  %and18 = and i32 %18, %shl17, !dbg !8554
  %tobool = icmp ne i32 %and18, 0, !dbg !8554
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !8557

if.then19:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !8558
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8558
  store i8* %21, i8** %22, align 8, !dbg !8558
  store i32 0, i32* %retval, align 4, !dbg !8558
  br label %return, !dbg !8558

if.end20:                                         ; preds = %sw.bb
  br label %sw.bb21, !dbg !8561

sw.bb21:                                          ; preds = %cond.end, %cond.end, %if.end20
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !8563
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !8563
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !8563
  br label %sw.epilog82, !dbg !8563

sw.bb22:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !8565
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !8565
  %sub.ptr.lhs.cast23 = ptrtoint i8* %24 to i64, !dbg !8565
  %sub.ptr.rhs.cast24 = ptrtoint i8* %25 to i64, !dbg !8565
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !8565
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 2, !dbg !8565
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !8565

if.then28:                                        ; preds = %sw.bb22
  store i32 -2, i32* %retval, align 4, !dbg !8568
  br label %return, !dbg !8568

if.end29:                                         ; preds = %sw.bb22
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !8570
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8570
  store i8* %26, i8** %27, align 8, !dbg !8570
  store i32 0, i32* %retval, align 4, !dbg !8570
  br label %return, !dbg !8570

sw.bb30:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !8574
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !8574
  %sub.ptr.lhs.cast31 = ptrtoint i8* %28 to i64, !dbg !8574
  %sub.ptr.rhs.cast32 = ptrtoint i8* %29 to i64, !dbg !8574
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !8574
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 3, !dbg !8574
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !8574

if.then36:                                        ; preds = %sw.bb30
  store i32 -2, i32* %retval, align 4, !dbg !8577
  br label %return, !dbg !8577

if.end37:                                         ; preds = %sw.bb30
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !8579
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8579
  store i8* %30, i8** %31, align 8, !dbg !8579
  store i32 0, i32* %retval, align 4, !dbg !8579
  br label %return, !dbg !8579

sw.bb38:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !8583
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !8583
  %sub.ptr.lhs.cast39 = ptrtoint i8* %32 to i64, !dbg !8583
  %sub.ptr.rhs.cast40 = ptrtoint i8* %33 to i64, !dbg !8583
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !8583
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 4, !dbg !8583
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8583

if.then44:                                        ; preds = %sw.bb38
  store i32 -2, i32* %retval, align 4, !dbg !8586
  br label %return, !dbg !8586

if.end45:                                         ; preds = %sw.bb38
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !8588
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8588
  store i8* %34, i8** %35, align 8, !dbg !8588
  store i32 0, i32* %retval, align 4, !dbg !8588
  br label %return, !dbg !8588

sw.bb46:                                          ; preds = %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !8592
  %add.ptr47 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !8592
  store i8* %add.ptr47, i8** %ptr.addr, align 8, !dbg !8592
  %37 = load i8*, i8** %end.addr, align 8, !dbg !8593
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !8593
  %sub.ptr.lhs.cast48 = ptrtoint i8* %37 to i64, !dbg !8593
  %sub.ptr.rhs.cast49 = ptrtoint i8* %38 to i64, !dbg !8593
  %sub.ptr.sub50 = sub i64 %sub.ptr.lhs.cast48, %sub.ptr.rhs.cast49, !dbg !8593
  %cmp51 = icmp sge i64 %sub.ptr.sub50, 2, !dbg !8593
  br i1 %cmp51, label %if.end54, label %if.then53, !dbg !8596

if.then53:                                        ; preds = %sw.bb46
  store i32 -1, i32* %retval, align 4, !dbg !8597
  br label %return, !dbg !8597

if.end54:                                         ; preds = %sw.bb46
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !8600
  %arrayidx55 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !8600
  %40 = load i8, i8* %arrayidx55, align 1, !dbg !8600
  %conv56 = sext i8 %40 to i32, !dbg !8600
  %cmp57 = icmp eq i32 %conv56, 0, !dbg !8600
  br i1 %cmp57, label %cond.true59, label %cond.false64, !dbg !8600

cond.true59:                                      ; preds = %if.end54
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !8601
  %42 = load i8, i8* %41, align 1, !dbg !8601
  %idxprom60 = zext i8 %42 to i64, !dbg !8601
  %43 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8601
  %44 = bitcast %struct.encoding* %43 to %struct.normal_encoding*, !dbg !8601
  %type61 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %44, i32 0, i32 1, !dbg !8601
  %arrayidx62 = getelementptr inbounds [256 x i8], [256 x i8]* %type61, i64 0, i64 %idxprom60, !dbg !8601
  %45 = load i8, i8* %arrayidx62, align 1, !dbg !8601
  %conv63 = zext i8 %45 to i32, !dbg !8601
  br label %cond.end68, !dbg !8601

cond.false64:                                     ; preds = %if.end54
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !8603
  %arrayidx65 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !8603
  %47 = load i8, i8* %arrayidx65, align 1, !dbg !8603
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !8603
  %arrayidx66 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !8603
  %49 = load i8, i8* %arrayidx66, align 1, !dbg !8603
  %call67 = call i32 @unicode_byte_type(i8 signext %47, i8 signext %49), !dbg !8603
  br label %cond.end68, !dbg !8603

cond.end68:                                       ; preds = %cond.false64, %cond.true59
  %cond69 = phi i32 [ %conv63, %cond.true59 ], [ %call67, %cond.false64 ], !dbg !8605
  switch i32 %cond69, label %sw.epilog [
    i32 27, label %sw.bb70
    i32 20, label %sw.bb73
  ], !dbg !8607

sw.bb70:                                          ; preds = %cond.end68
  %50 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8608
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !8610
  %add.ptr71 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !8611
  %52 = load i8*, i8** %end.addr, align 8, !dbg !8612
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8613
  %call72 = call i32 @little2_scanComment(%struct.encoding* %50, i8* %add.ptr71, i8* %52, i8** %53), !dbg !8614
  store i32 %call72, i32* %retval, align 4, !dbg !8615
  br label %return, !dbg !8615

sw.bb73:                                          ; preds = %cond.end68
  %54 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8616
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !8617
  %add.ptr74 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !8618
  %56 = load i8*, i8** %end.addr, align 8, !dbg !8619
  %57 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8620
  %call75 = call i32 @little2_scanCdataSection(%struct.encoding* %54, i8* %add.ptr74, i8* %56, i8** %57), !dbg !8621
  store i32 %call75, i32* %retval, align 4, !dbg !8622
  br label %return, !dbg !8622

sw.epilog:                                        ; preds = %cond.end68
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !8623
  %59 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8624
  store i8* %58, i8** %59, align 8, !dbg !8625
  store i32 0, i32* %retval, align 4, !dbg !8626
  br label %return, !dbg !8626

sw.bb76:                                          ; preds = %cond.end
  %60 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8627
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !8628
  %add.ptr77 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !8629
  %62 = load i8*, i8** %end.addr, align 8, !dbg !8630
  %63 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8631
  %call78 = call i32 @little2_scanPi(%struct.encoding* %60, i8* %add.ptr77, i8* %62, i8** %63), !dbg !8632
  store i32 %call78, i32* %retval, align 4, !dbg !8633
  br label %return, !dbg !8633

sw.bb79:                                          ; preds = %cond.end
  %64 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8634
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !8635
  %add.ptr80 = getelementptr inbounds i8, i8* %65, i64 2, !dbg !8636
  %66 = load i8*, i8** %end.addr, align 8, !dbg !8637
  %67 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8638
  %call81 = call i32 @little2_scanEndTag(%struct.encoding* %64, i8* %add.ptr80, i8* %66, i8** %67), !dbg !8639
  store i32 %call81, i32* %retval, align 4, !dbg !8640
  br label %return, !dbg !8640

sw.default:                                       ; preds = %cond.end
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !8641
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8642
  store i8* %68, i8** %69, align 8, !dbg !8643
  store i32 0, i32* %retval, align 4, !dbg !8644
  br label %return, !dbg !8644

sw.epilog82:                                      ; preds = %sw.bb21
  br label %while.cond, !dbg !8645

while.cond:                                       ; preds = %sw.epilog249, %sw.epilog82
  %70 = load i8*, i8** %end.addr, align 8, !dbg !8646
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !8646
  %sub.ptr.lhs.cast83 = ptrtoint i8* %70 to i64, !dbg !8646
  %sub.ptr.rhs.cast84 = ptrtoint i8* %71 to i64, !dbg !8646
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast84, !dbg !8646
  %cmp86 = icmp sge i64 %sub.ptr.sub85, 2, !dbg !8646
  br i1 %cmp86, label %while.body, label %while.end250, !dbg !8647

while.body:                                       ; preds = %while.cond
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !8648
  %arrayidx88 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !8648
  %73 = load i8, i8* %arrayidx88, align 1, !dbg !8648
  %conv89 = sext i8 %73 to i32, !dbg !8648
  %cmp90 = icmp eq i32 %conv89, 0, !dbg !8648
  br i1 %cmp90, label %cond.true92, label %cond.false97, !dbg !8648

cond.true92:                                      ; preds = %while.body
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !8650
  %75 = load i8, i8* %74, align 1, !dbg !8650
  %idxprom93 = zext i8 %75 to i64, !dbg !8650
  %76 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8650
  %77 = bitcast %struct.encoding* %76 to %struct.normal_encoding*, !dbg !8650
  %type94 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %77, i32 0, i32 1, !dbg !8650
  %arrayidx95 = getelementptr inbounds [256 x i8], [256 x i8]* %type94, i64 0, i64 %idxprom93, !dbg !8650
  %78 = load i8, i8* %arrayidx95, align 1, !dbg !8650
  %conv96 = zext i8 %78 to i32, !dbg !8650
  br label %cond.end101, !dbg !8650

cond.false97:                                     ; preds = %while.body
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !8652
  %arrayidx98 = getelementptr inbounds i8, i8* %79, i64 1, !dbg !8652
  %80 = load i8, i8* %arrayidx98, align 1, !dbg !8652
  %81 = load i8*, i8** %ptr.addr, align 8, !dbg !8652
  %arrayidx99 = getelementptr inbounds i8, i8* %81, i64 0, !dbg !8652
  %82 = load i8, i8* %arrayidx99, align 1, !dbg !8652
  %call100 = call i32 @unicode_byte_type(i8 signext %80, i8 signext %82), !dbg !8652
  br label %cond.end101, !dbg !8652

cond.end101:                                      ; preds = %cond.false97, %cond.true92
  %cond102 = phi i32 [ %conv96, %cond.true92 ], [ %call100, %cond.false97 ], !dbg !8654
  switch i32 %cond102, label %sw.default248 [
    i32 29, label %sw.bb103
    i32 22, label %sw.bb123
    i32 24, label %sw.bb123
    i32 25, label %sw.bb123
    i32 26, label %sw.bb123
    i32 27, label %sw.bb123
    i32 5, label %sw.bb125
    i32 6, label %sw.bb133
    i32 7, label %sw.bb141
    i32 21, label %sw.bb149
    i32 9, label %sw.bb149
    i32 10, label %sw.bb149
    i32 11, label %sw.bb226
    i32 17, label %sw.bb228
  ], !dbg !8656

sw.bb103:                                         ; preds = %cond.end101
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !8657
  %arrayidx104 = getelementptr inbounds i8, i8* %83, i64 1, !dbg !8657
  %84 = load i8, i8* %arrayidx104, align 1, !dbg !8657
  %idxprom105 = zext i8 %84 to i64, !dbg !8657
  %arrayidx106 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom105, !dbg !8657
  %85 = load i8, i8* %arrayidx106, align 1, !dbg !8657
  %conv107 = zext i8 %85 to i32, !dbg !8657
  %shl108 = shl i32 %conv107, 3, !dbg !8657
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !8657
  %arrayidx109 = getelementptr inbounds i8, i8* %86, i64 0, !dbg !8657
  %87 = load i8, i8* %arrayidx109, align 1, !dbg !8657
  %conv110 = zext i8 %87 to i32, !dbg !8657
  %shr111 = ashr i32 %conv110, 5, !dbg !8657
  %add112 = add nsw i32 %shl108, %shr111, !dbg !8657
  %idxprom113 = sext i32 %add112 to i64, !dbg !8657
  %arrayidx114 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom113, !dbg !8657
  %88 = load i32, i32* %arrayidx114, align 4, !dbg !8657
  %89 = load i8*, i8** %ptr.addr, align 8, !dbg !8657
  %arrayidx115 = getelementptr inbounds i8, i8* %89, i64 0, !dbg !8657
  %90 = load i8, i8* %arrayidx115, align 1, !dbg !8657
  %conv116 = zext i8 %90 to i32, !dbg !8657
  %and117 = and i32 %conv116, 31, !dbg !8657
  %shl118 = shl i32 1, %and117, !dbg !8657
  %and119 = and i32 %88, %shl118, !dbg !8657
  %tobool120 = icmp ne i32 %and119, 0, !dbg !8657
  br i1 %tobool120, label %if.end122, label %if.then121, !dbg !8660

if.then121:                                       ; preds = %sw.bb103
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !8661
  %92 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8661
  store i8* %91, i8** %92, align 8, !dbg !8661
  store i32 0, i32* %retval, align 4, !dbg !8661
  br label %return, !dbg !8661

if.end122:                                        ; preds = %sw.bb103
  br label %sw.bb123, !dbg !8664

sw.bb123:                                         ; preds = %cond.end101, %cond.end101, %cond.end101, %cond.end101, %cond.end101, %if.end122
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !8666
  %add.ptr124 = getelementptr inbounds i8, i8* %93, i64 2, !dbg !8666
  store i8* %add.ptr124, i8** %ptr.addr, align 8, !dbg !8666
  br label %sw.epilog249, !dbg !8666

sw.bb125:                                         ; preds = %cond.end101
  %94 = load i8*, i8** %end.addr, align 8, !dbg !8668
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !8668
  %sub.ptr.lhs.cast126 = ptrtoint i8* %94 to i64, !dbg !8668
  %sub.ptr.rhs.cast127 = ptrtoint i8* %95 to i64, !dbg !8668
  %sub.ptr.sub128 = sub i64 %sub.ptr.lhs.cast126, %sub.ptr.rhs.cast127, !dbg !8668
  %cmp129 = icmp slt i64 %sub.ptr.sub128, 2, !dbg !8668
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !8668

if.then131:                                       ; preds = %sw.bb125
  store i32 -2, i32* %retval, align 4, !dbg !8671
  br label %return, !dbg !8671

if.end132:                                        ; preds = %sw.bb125
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !8673
  %97 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8673
  store i8* %96, i8** %97, align 8, !dbg !8673
  store i32 0, i32* %retval, align 4, !dbg !8673
  br label %return, !dbg !8673

sw.bb133:                                         ; preds = %cond.end101
  %98 = load i8*, i8** %end.addr, align 8, !dbg !8677
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !8677
  %sub.ptr.lhs.cast134 = ptrtoint i8* %98 to i64, !dbg !8677
  %sub.ptr.rhs.cast135 = ptrtoint i8* %99 to i64, !dbg !8677
  %sub.ptr.sub136 = sub i64 %sub.ptr.lhs.cast134, %sub.ptr.rhs.cast135, !dbg !8677
  %cmp137 = icmp slt i64 %sub.ptr.sub136, 3, !dbg !8677
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !8677

if.then139:                                       ; preds = %sw.bb133
  store i32 -2, i32* %retval, align 4, !dbg !8680
  br label %return, !dbg !8680

if.end140:                                        ; preds = %sw.bb133
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !8682
  %101 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8682
  store i8* %100, i8** %101, align 8, !dbg !8682
  store i32 0, i32* %retval, align 4, !dbg !8682
  br label %return, !dbg !8682

sw.bb141:                                         ; preds = %cond.end101
  %102 = load i8*, i8** %end.addr, align 8, !dbg !8686
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !8686
  %sub.ptr.lhs.cast142 = ptrtoint i8* %102 to i64, !dbg !8686
  %sub.ptr.rhs.cast143 = ptrtoint i8* %103 to i64, !dbg !8686
  %sub.ptr.sub144 = sub i64 %sub.ptr.lhs.cast142, %sub.ptr.rhs.cast143, !dbg !8686
  %cmp145 = icmp slt i64 %sub.ptr.sub144, 4, !dbg !8686
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !8686

if.then147:                                       ; preds = %sw.bb141
  store i32 -2, i32* %retval, align 4, !dbg !8689
  br label %return, !dbg !8689

if.end148:                                        ; preds = %sw.bb141
  %104 = load i8*, i8** %ptr.addr, align 8, !dbg !8691
  %105 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8691
  store i8* %104, i8** %105, align 8, !dbg !8691
  store i32 0, i32* %retval, align 4, !dbg !8691
  br label %return, !dbg !8691

sw.bb149:                                         ; preds = %cond.end101, %cond.end101, %cond.end101
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !8695
  %add.ptr150 = getelementptr inbounds i8, i8* %106, i64 2, !dbg !8695
  store i8* %add.ptr150, i8** %ptr.addr, align 8, !dbg !8695
  br label %while.cond151, !dbg !8697

while.cond151:                                    ; preds = %sw.bb221, %sw.bb149
  %107 = load i8*, i8** %end.addr, align 8, !dbg !8698
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !8698
  %sub.ptr.lhs.cast152 = ptrtoint i8* %107 to i64, !dbg !8698
  %sub.ptr.rhs.cast153 = ptrtoint i8* %108 to i64, !dbg !8698
  %sub.ptr.sub154 = sub i64 %sub.ptr.lhs.cast152, %sub.ptr.rhs.cast153, !dbg !8698
  %cmp155 = icmp sge i64 %sub.ptr.sub154, 2, !dbg !8698
  br i1 %cmp155, label %while.body157, label %while.end, !dbg !8700

while.body157:                                    ; preds = %while.cond151
  %109 = load i8*, i8** %ptr.addr, align 8, !dbg !8701
  %arrayidx158 = getelementptr inbounds i8, i8* %109, i64 1, !dbg !8701
  %110 = load i8, i8* %arrayidx158, align 1, !dbg !8701
  %conv159 = sext i8 %110 to i32, !dbg !8701
  %cmp160 = icmp eq i32 %conv159, 0, !dbg !8701
  br i1 %cmp160, label %cond.true162, label %cond.false167, !dbg !8701

cond.true162:                                     ; preds = %while.body157
  %111 = load i8*, i8** %ptr.addr, align 8, !dbg !8703
  %112 = load i8, i8* %111, align 1, !dbg !8703
  %idxprom163 = zext i8 %112 to i64, !dbg !8703
  %113 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8703
  %114 = bitcast %struct.encoding* %113 to %struct.normal_encoding*, !dbg !8703
  %type164 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %114, i32 0, i32 1, !dbg !8703
  %arrayidx165 = getelementptr inbounds [256 x i8], [256 x i8]* %type164, i64 0, i64 %idxprom163, !dbg !8703
  %115 = load i8, i8* %arrayidx165, align 1, !dbg !8703
  %conv166 = zext i8 %115 to i32, !dbg !8703
  br label %cond.end171, !dbg !8703

cond.false167:                                    ; preds = %while.body157
  %116 = load i8*, i8** %ptr.addr, align 8, !dbg !8705
  %arrayidx168 = getelementptr inbounds i8, i8* %116, i64 1, !dbg !8705
  %117 = load i8, i8* %arrayidx168, align 1, !dbg !8705
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !8705
  %arrayidx169 = getelementptr inbounds i8, i8* %118, i64 0, !dbg !8705
  %119 = load i8, i8* %arrayidx169, align 1, !dbg !8705
  %call170 = call i32 @unicode_byte_type(i8 signext %117, i8 signext %119), !dbg !8705
  br label %cond.end171, !dbg !8705

cond.end171:                                      ; preds = %cond.false167, %cond.true162
  %cond172 = phi i32 [ %conv166, %cond.true162 ], [ %call170, %cond.false167 ], !dbg !8707
  switch i32 %cond172, label %sw.default223 [
    i32 29, label %sw.bb173
    i32 22, label %sw.bb193
    i32 24, label %sw.bb193
    i32 5, label %sw.bb195
    i32 6, label %sw.bb203
    i32 7, label %sw.bb211
    i32 11, label %sw.bb219
    i32 17, label %sw.bb220
    i32 21, label %sw.bb221
    i32 9, label %sw.bb221
    i32 10, label %sw.bb221
  ], !dbg !8709

sw.bb173:                                         ; preds = %cond.end171
  %120 = load i8*, i8** %ptr.addr, align 8, !dbg !8710
  %arrayidx174 = getelementptr inbounds i8, i8* %120, i64 1, !dbg !8710
  %121 = load i8, i8* %arrayidx174, align 1, !dbg !8710
  %idxprom175 = zext i8 %121 to i64, !dbg !8710
  %arrayidx176 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom175, !dbg !8710
  %122 = load i8, i8* %arrayidx176, align 1, !dbg !8710
  %conv177 = zext i8 %122 to i32, !dbg !8710
  %shl178 = shl i32 %conv177, 3, !dbg !8710
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !8710
  %arrayidx179 = getelementptr inbounds i8, i8* %123, i64 0, !dbg !8710
  %124 = load i8, i8* %arrayidx179, align 1, !dbg !8710
  %conv180 = zext i8 %124 to i32, !dbg !8710
  %shr181 = ashr i32 %conv180, 5, !dbg !8710
  %add182 = add nsw i32 %shl178, %shr181, !dbg !8710
  %idxprom183 = sext i32 %add182 to i64, !dbg !8710
  %arrayidx184 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom183, !dbg !8710
  %125 = load i32, i32* %arrayidx184, align 4, !dbg !8710
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !8710
  %arrayidx185 = getelementptr inbounds i8, i8* %126, i64 0, !dbg !8710
  %127 = load i8, i8* %arrayidx185, align 1, !dbg !8710
  %conv186 = zext i8 %127 to i32, !dbg !8710
  %and187 = and i32 %conv186, 31, !dbg !8710
  %shl188 = shl i32 1, %and187, !dbg !8710
  %and189 = and i32 %125, %shl188, !dbg !8710
  %tobool190 = icmp ne i32 %and189, 0, !dbg !8710
  br i1 %tobool190, label %if.end192, label %if.then191, !dbg !8713

if.then191:                                       ; preds = %sw.bb173
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !8714
  %129 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8714
  store i8* %128, i8** %129, align 8, !dbg !8714
  store i32 0, i32* %retval, align 4, !dbg !8714
  br label %return, !dbg !8714

if.end192:                                        ; preds = %sw.bb173
  br label %sw.bb193, !dbg !8717

sw.bb193:                                         ; preds = %cond.end171, %cond.end171, %if.end192
  %130 = load i8*, i8** %ptr.addr, align 8, !dbg !8719
  %add.ptr194 = getelementptr inbounds i8, i8* %130, i64 2, !dbg !8719
  store i8* %add.ptr194, i8** %ptr.addr, align 8, !dbg !8719
  br label %sw.epilog224, !dbg !8719

sw.bb195:                                         ; preds = %cond.end171
  %131 = load i8*, i8** %end.addr, align 8, !dbg !8721
  %132 = load i8*, i8** %ptr.addr, align 8, !dbg !8721
  %sub.ptr.lhs.cast196 = ptrtoint i8* %131 to i64, !dbg !8721
  %sub.ptr.rhs.cast197 = ptrtoint i8* %132 to i64, !dbg !8721
  %sub.ptr.sub198 = sub i64 %sub.ptr.lhs.cast196, %sub.ptr.rhs.cast197, !dbg !8721
  %cmp199 = icmp slt i64 %sub.ptr.sub198, 2, !dbg !8721
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !8721

if.then201:                                       ; preds = %sw.bb195
  store i32 -2, i32* %retval, align 4, !dbg !8724
  br label %return, !dbg !8724

if.end202:                                        ; preds = %sw.bb195
  %133 = load i8*, i8** %ptr.addr, align 8, !dbg !8726
  %134 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8726
  store i8* %133, i8** %134, align 8, !dbg !8726
  store i32 0, i32* %retval, align 4, !dbg !8726
  br label %return, !dbg !8726

sw.bb203:                                         ; preds = %cond.end171
  %135 = load i8*, i8** %end.addr, align 8, !dbg !8730
  %136 = load i8*, i8** %ptr.addr, align 8, !dbg !8730
  %sub.ptr.lhs.cast204 = ptrtoint i8* %135 to i64, !dbg !8730
  %sub.ptr.rhs.cast205 = ptrtoint i8* %136 to i64, !dbg !8730
  %sub.ptr.sub206 = sub i64 %sub.ptr.lhs.cast204, %sub.ptr.rhs.cast205, !dbg !8730
  %cmp207 = icmp slt i64 %sub.ptr.sub206, 3, !dbg !8730
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !8730

if.then209:                                       ; preds = %sw.bb203
  store i32 -2, i32* %retval, align 4, !dbg !8733
  br label %return, !dbg !8733

if.end210:                                        ; preds = %sw.bb203
  %137 = load i8*, i8** %ptr.addr, align 8, !dbg !8735
  %138 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8735
  store i8* %137, i8** %138, align 8, !dbg !8735
  store i32 0, i32* %retval, align 4, !dbg !8735
  br label %return, !dbg !8735

sw.bb211:                                         ; preds = %cond.end171
  %139 = load i8*, i8** %end.addr, align 8, !dbg !8739
  %140 = load i8*, i8** %ptr.addr, align 8, !dbg !8739
  %sub.ptr.lhs.cast212 = ptrtoint i8* %139 to i64, !dbg !8739
  %sub.ptr.rhs.cast213 = ptrtoint i8* %140 to i64, !dbg !8739
  %sub.ptr.sub214 = sub i64 %sub.ptr.lhs.cast212, %sub.ptr.rhs.cast213, !dbg !8739
  %cmp215 = icmp slt i64 %sub.ptr.sub214, 4, !dbg !8739
  br i1 %cmp215, label %if.then217, label %if.end218, !dbg !8739

if.then217:                                       ; preds = %sw.bb211
  store i32 -2, i32* %retval, align 4, !dbg !8742
  br label %return, !dbg !8742

if.end218:                                        ; preds = %sw.bb211
  %141 = load i8*, i8** %ptr.addr, align 8, !dbg !8744
  %142 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8744
  store i8* %141, i8** %142, align 8, !dbg !8744
  store i32 0, i32* %retval, align 4, !dbg !8744
  br label %return, !dbg !8744

sw.bb219:                                         ; preds = %cond.end171
  br label %gt, !dbg !8748

sw.bb220:                                         ; preds = %cond.end171
  br label %sol, !dbg !8749

sw.bb221:                                         ; preds = %cond.end171, %cond.end171, %cond.end171
  %143 = load i8*, i8** %ptr.addr, align 8, !dbg !8750
  %add.ptr222 = getelementptr inbounds i8, i8* %143, i64 2, !dbg !8750
  store i8* %add.ptr222, i8** %ptr.addr, align 8, !dbg !8750
  br label %while.cond151, !dbg !8751

sw.default223:                                    ; preds = %cond.end171
  %144 = load i8*, i8** %ptr.addr, align 8, !dbg !8752
  %145 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8753
  store i8* %144, i8** %145, align 8, !dbg !8754
  store i32 0, i32* %retval, align 4, !dbg !8755
  br label %return, !dbg !8755

sw.epilog224:                                     ; preds = %sw.bb193
  %146 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8756
  %147 = load i8*, i8** %ptr.addr, align 8, !dbg !8757
  %148 = load i8*, i8** %end.addr, align 8, !dbg !8758
  %149 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8759
  %call225 = call i32 @little2_scanAtts(%struct.encoding* %146, i8* %147, i8* %148, i8** %149), !dbg !8760
  store i32 %call225, i32* %retval, align 4, !dbg !8761
  br label %return, !dbg !8761

while.end:                                        ; preds = %while.cond151
  store i32 -1, i32* %retval, align 4, !dbg !8762
  br label %return, !dbg !8762

sw.bb226:                                         ; preds = %cond.end101
  br label %gt, !dbg !8763

gt:                                               ; preds = %sw.bb226, %sw.bb219
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !8764
  %add.ptr227 = getelementptr inbounds i8, i8* %150, i64 2, !dbg !8765
  %151 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8766
  store i8* %add.ptr227, i8** %151, align 8, !dbg !8767
  store i32 2, i32* %retval, align 4, !dbg !8768
  br label %return, !dbg !8768

sw.bb228:                                         ; preds = %cond.end101
  br label %sol, !dbg !8769

sol:                                              ; preds = %sw.bb228, %sw.bb220
  %152 = load i8*, i8** %ptr.addr, align 8, !dbg !8771
  %add.ptr229 = getelementptr inbounds i8, i8* %152, i64 2, !dbg !8771
  store i8* %add.ptr229, i8** %ptr.addr, align 8, !dbg !8771
  %153 = load i8*, i8** %end.addr, align 8, !dbg !8772
  %154 = load i8*, i8** %ptr.addr, align 8, !dbg !8772
  %sub.ptr.lhs.cast230 = ptrtoint i8* %153 to i64, !dbg !8772
  %sub.ptr.rhs.cast231 = ptrtoint i8* %154 to i64, !dbg !8772
  %sub.ptr.sub232 = sub i64 %sub.ptr.lhs.cast230, %sub.ptr.rhs.cast231, !dbg !8772
  %cmp233 = icmp sge i64 %sub.ptr.sub232, 2, !dbg !8772
  br i1 %cmp233, label %if.end236, label %if.then235, !dbg !8775

if.then235:                                       ; preds = %sol
  store i32 -1, i32* %retval, align 4, !dbg !8776
  br label %return, !dbg !8776

if.end236:                                        ; preds = %sol
  %155 = load i8*, i8** %ptr.addr, align 8, !dbg !8779
  %arrayidx237 = getelementptr inbounds i8, i8* %155, i64 1, !dbg !8779
  %156 = load i8, i8* %arrayidx237, align 1, !dbg !8779
  %conv238 = sext i8 %156 to i32, !dbg !8779
  %cmp239 = icmp eq i32 %conv238, 0, !dbg !8779
  br i1 %cmp239, label %land.lhs.true, label %if.then245, !dbg !8779

land.lhs.true:                                    ; preds = %if.end236
  %157 = load i8*, i8** %ptr.addr, align 8, !dbg !8781
  %arrayidx241 = getelementptr inbounds i8, i8* %157, i64 0, !dbg !8781
  %158 = load i8, i8* %arrayidx241, align 1, !dbg !8781
  %conv242 = sext i8 %158 to i32, !dbg !8781
  %cmp243 = icmp eq i32 %conv242, 62, !dbg !8781
  br i1 %cmp243, label %if.end246, label %if.then245, !dbg !8783

if.then245:                                       ; preds = %land.lhs.true, %if.end236
  %159 = load i8*, i8** %ptr.addr, align 8, !dbg !8784
  %160 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8786
  store i8* %159, i8** %160, align 8, !dbg !8787
  store i32 0, i32* %retval, align 4, !dbg !8788
  br label %return, !dbg !8788

if.end246:                                        ; preds = %land.lhs.true
  %161 = load i8*, i8** %ptr.addr, align 8, !dbg !8789
  %add.ptr247 = getelementptr inbounds i8, i8* %161, i64 2, !dbg !8790
  %162 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8791
  store i8* %add.ptr247, i8** %162, align 8, !dbg !8792
  store i32 4, i32* %retval, align 4, !dbg !8793
  br label %return, !dbg !8793

sw.default248:                                    ; preds = %cond.end101
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !8794
  %164 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8795
  store i8* %163, i8** %164, align 8, !dbg !8796
  store i32 0, i32* %retval, align 4, !dbg !8797
  br label %return, !dbg !8797

sw.epilog249:                                     ; preds = %sw.bb123
  br label %while.cond, !dbg !8798

while.end250:                                     ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !8800
  br label %return, !dbg !8800

return:                                           ; preds = %while.end250, %sw.default248, %if.end246, %if.then245, %if.then235, %gt, %while.end, %sw.epilog224, %sw.default223, %if.end218, %if.then217, %if.end210, %if.then209, %if.end202, %if.then201, %if.then191, %if.end148, %if.then147, %if.end140, %if.then139, %if.end132, %if.then131, %if.then121, %sw.default, %sw.bb79, %sw.bb76, %sw.epilog, %sw.bb73, %sw.bb70, %if.then53, %if.end45, %if.then44, %if.end37, %if.then36, %if.end29, %if.then28, %if.then19, %if.then
  %165 = load i32, i32* %retval, align 4, !dbg !8801
  ret i32 %165, !dbg !8801
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !313 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !8802, metadata !444), !dbg !8803
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8804, metadata !444), !dbg !8805
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8806, metadata !444), !dbg !8807
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !8808, metadata !444), !dbg !8809
  %0 = load i8*, i8** %end.addr, align 8, !dbg !8810
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !8810
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !8810
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8810
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8810
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !8810
  br i1 %cmp, label %if.end, label %if.then, !dbg !8813

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8814
  br label %return, !dbg !8814

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !8817
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !8817
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8817
  %conv = sext i8 %3 to i32, !dbg !8817
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8817
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8817

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !8818
  %5 = load i8, i8* %4, align 1, !dbg !8818
  %idxprom = zext i8 %5 to i64, !dbg !8818
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8818
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !8818
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !8818
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !8818
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !8818
  %conv4 = zext i8 %8 to i32, !dbg !8818
  br label %cond.end, !dbg !8818

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !8820
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !8820
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !8820
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !8820
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !8820
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !8820
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !8820
  br label %cond.end, !dbg !8820

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !8822
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb21
    i32 24, label %sw.bb21
    i32 5, label %sw.bb22
    i32 6, label %sw.bb30
    i32 7, label %sw.bb38
    i32 19, label %sw.bb46
  ], !dbg !8824

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !8825
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !8825
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !8825
  %idxprom8 = zext i8 %14 to i64, !dbg !8825
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom8, !dbg !8825
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !8825
  %conv10 = zext i8 %15 to i32, !dbg !8825
  %shl = shl i32 %conv10, 3, !dbg !8825
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !8825
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !8825
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !8825
  %conv12 = zext i8 %17 to i32, !dbg !8825
  %shr = ashr i32 %conv12, 5, !dbg !8825
  %add = add nsw i32 %shl, %shr, !dbg !8825
  %idxprom13 = sext i32 %add to i64, !dbg !8825
  %arrayidx14 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom13, !dbg !8825
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !8825
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !8825
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !8825
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !8825
  %conv16 = zext i8 %20 to i32, !dbg !8825
  %and = and i32 %conv16, 31, !dbg !8825
  %shl17 = shl i32 1, %and, !dbg !8825
  %and18 = and i32 %18, %shl17, !dbg !8825
  %tobool = icmp ne i32 %and18, 0, !dbg !8825
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !8828

if.then19:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !8829
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8829
  store i8* %21, i8** %22, align 8, !dbg !8829
  store i32 0, i32* %retval, align 4, !dbg !8829
  br label %return, !dbg !8829

if.end20:                                         ; preds = %sw.bb
  br label %sw.bb21, !dbg !8832

sw.bb21:                                          ; preds = %cond.end, %cond.end, %if.end20
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !8834
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !8834
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !8834
  br label %sw.epilog, !dbg !8834

sw.bb22:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !8836
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !8836
  %sub.ptr.lhs.cast23 = ptrtoint i8* %24 to i64, !dbg !8836
  %sub.ptr.rhs.cast24 = ptrtoint i8* %25 to i64, !dbg !8836
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !8836
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 2, !dbg !8836
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !8836

if.then28:                                        ; preds = %sw.bb22
  store i32 -2, i32* %retval, align 4, !dbg !8839
  br label %return, !dbg !8839

if.end29:                                         ; preds = %sw.bb22
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !8841
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8841
  store i8* %26, i8** %27, align 8, !dbg !8841
  store i32 0, i32* %retval, align 4, !dbg !8841
  br label %return, !dbg !8841

sw.bb30:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !8845
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !8845
  %sub.ptr.lhs.cast31 = ptrtoint i8* %28 to i64, !dbg !8845
  %sub.ptr.rhs.cast32 = ptrtoint i8* %29 to i64, !dbg !8845
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !8845
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 3, !dbg !8845
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !8845

if.then36:                                        ; preds = %sw.bb30
  store i32 -2, i32* %retval, align 4, !dbg !8848
  br label %return, !dbg !8848

if.end37:                                         ; preds = %sw.bb30
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !8850
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8850
  store i8* %30, i8** %31, align 8, !dbg !8850
  store i32 0, i32* %retval, align 4, !dbg !8850
  br label %return, !dbg !8850

sw.bb38:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !8854
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !8854
  %sub.ptr.lhs.cast39 = ptrtoint i8* %32 to i64, !dbg !8854
  %sub.ptr.rhs.cast40 = ptrtoint i8* %33 to i64, !dbg !8854
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !8854
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 4, !dbg !8854
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8854

if.then44:                                        ; preds = %sw.bb38
  store i32 -2, i32* %retval, align 4, !dbg !8857
  br label %return, !dbg !8857

if.end45:                                         ; preds = %sw.bb38
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !8859
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8859
  store i8* %34, i8** %35, align 8, !dbg !8859
  store i32 0, i32* %retval, align 4, !dbg !8859
  br label %return, !dbg !8859

sw.bb46:                                          ; preds = %cond.end
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8863
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !8864
  %add.ptr47 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !8865
  %38 = load i8*, i8** %end.addr, align 8, !dbg !8866
  %39 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8867
  %call48 = call i32 @little2_scanCharRef(%struct.encoding* %36, i8* %add.ptr47, i8* %38, i8** %39), !dbg !8868
  store i32 %call48, i32* %retval, align 4, !dbg !8869
  br label %return, !dbg !8869

sw.default:                                       ; preds = %cond.end
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !8870
  %41 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8871
  store i8* %40, i8** %41, align 8, !dbg !8872
  store i32 0, i32* %retval, align 4, !dbg !8873
  br label %return, !dbg !8873

sw.epilog:                                        ; preds = %sw.bb21
  br label %while.cond, !dbg !8874

while.cond:                                       ; preds = %sw.epilog118, %sw.epilog
  %42 = load i8*, i8** %end.addr, align 8, !dbg !8875
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !8875
  %sub.ptr.lhs.cast49 = ptrtoint i8* %42 to i64, !dbg !8875
  %sub.ptr.rhs.cast50 = ptrtoint i8* %43 to i64, !dbg !8875
  %sub.ptr.sub51 = sub i64 %sub.ptr.lhs.cast49, %sub.ptr.rhs.cast50, !dbg !8875
  %cmp52 = icmp sge i64 %sub.ptr.sub51, 2, !dbg !8875
  br i1 %cmp52, label %while.body, label %while.end, !dbg !8876

while.body:                                       ; preds = %while.cond
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !8877
  %arrayidx54 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !8877
  %45 = load i8, i8* %arrayidx54, align 1, !dbg !8877
  %conv55 = sext i8 %45 to i32, !dbg !8877
  %cmp56 = icmp eq i32 %conv55, 0, !dbg !8877
  br i1 %cmp56, label %cond.true58, label %cond.false63, !dbg !8877

cond.true58:                                      ; preds = %while.body
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !8879
  %47 = load i8, i8* %46, align 1, !dbg !8879
  %idxprom59 = zext i8 %47 to i64, !dbg !8879
  %48 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8879
  %49 = bitcast %struct.encoding* %48 to %struct.normal_encoding*, !dbg !8879
  %type60 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %49, i32 0, i32 1, !dbg !8879
  %arrayidx61 = getelementptr inbounds [256 x i8], [256 x i8]* %type60, i64 0, i64 %idxprom59, !dbg !8879
  %50 = load i8, i8* %arrayidx61, align 1, !dbg !8879
  %conv62 = zext i8 %50 to i32, !dbg !8879
  br label %cond.end67, !dbg !8879

cond.false63:                                     ; preds = %while.body
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !8881
  %arrayidx64 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !8881
  %52 = load i8, i8* %arrayidx64, align 1, !dbg !8881
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !8881
  %arrayidx65 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !8881
  %54 = load i8, i8* %arrayidx65, align 1, !dbg !8881
  %call66 = call i32 @unicode_byte_type(i8 signext %52, i8 signext %54), !dbg !8881
  br label %cond.end67, !dbg !8881

cond.end67:                                       ; preds = %cond.false63, %cond.true58
  %cond68 = phi i32 [ %conv62, %cond.true58 ], [ %call66, %cond.false63 ], !dbg !8883
  switch i32 %cond68, label %sw.default117 [
    i32 29, label %sw.bb69
    i32 22, label %sw.bb89
    i32 24, label %sw.bb89
    i32 25, label %sw.bb89
    i32 26, label %sw.bb89
    i32 27, label %sw.bb89
    i32 5, label %sw.bb91
    i32 6, label %sw.bb99
    i32 7, label %sw.bb107
    i32 18, label %sw.bb115
  ], !dbg !8885

sw.bb69:                                          ; preds = %cond.end67
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !8886
  %arrayidx70 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !8886
  %56 = load i8, i8* %arrayidx70, align 1, !dbg !8886
  %idxprom71 = zext i8 %56 to i64, !dbg !8886
  %arrayidx72 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom71, !dbg !8886
  %57 = load i8, i8* %arrayidx72, align 1, !dbg !8886
  %conv73 = zext i8 %57 to i32, !dbg !8886
  %shl74 = shl i32 %conv73, 3, !dbg !8886
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !8886
  %arrayidx75 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !8886
  %59 = load i8, i8* %arrayidx75, align 1, !dbg !8886
  %conv76 = zext i8 %59 to i32, !dbg !8886
  %shr77 = ashr i32 %conv76, 5, !dbg !8886
  %add78 = add nsw i32 %shl74, %shr77, !dbg !8886
  %idxprom79 = sext i32 %add78 to i64, !dbg !8886
  %arrayidx80 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom79, !dbg !8886
  %60 = load i32, i32* %arrayidx80, align 4, !dbg !8886
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !8886
  %arrayidx81 = getelementptr inbounds i8, i8* %61, i64 0, !dbg !8886
  %62 = load i8, i8* %arrayidx81, align 1, !dbg !8886
  %conv82 = zext i8 %62 to i32, !dbg !8886
  %and83 = and i32 %conv82, 31, !dbg !8886
  %shl84 = shl i32 1, %and83, !dbg !8886
  %and85 = and i32 %60, %shl84, !dbg !8886
  %tobool86 = icmp ne i32 %and85, 0, !dbg !8886
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !8889

if.then87:                                        ; preds = %sw.bb69
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !8890
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8890
  store i8* %63, i8** %64, align 8, !dbg !8890
  store i32 0, i32* %retval, align 4, !dbg !8890
  br label %return, !dbg !8890

if.end88:                                         ; preds = %sw.bb69
  br label %sw.bb89, !dbg !8893

sw.bb89:                                          ; preds = %cond.end67, %cond.end67, %cond.end67, %cond.end67, %cond.end67, %if.end88
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !8895
  %add.ptr90 = getelementptr inbounds i8, i8* %65, i64 2, !dbg !8895
  store i8* %add.ptr90, i8** %ptr.addr, align 8, !dbg !8895
  br label %sw.epilog118, !dbg !8895

sw.bb91:                                          ; preds = %cond.end67
  %66 = load i8*, i8** %end.addr, align 8, !dbg !8897
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !8897
  %sub.ptr.lhs.cast92 = ptrtoint i8* %66 to i64, !dbg !8897
  %sub.ptr.rhs.cast93 = ptrtoint i8* %67 to i64, !dbg !8897
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93, !dbg !8897
  %cmp95 = icmp slt i64 %sub.ptr.sub94, 2, !dbg !8897
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !8897

if.then97:                                        ; preds = %sw.bb91
  store i32 -2, i32* %retval, align 4, !dbg !8900
  br label %return, !dbg !8900

if.end98:                                         ; preds = %sw.bb91
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !8902
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8902
  store i8* %68, i8** %69, align 8, !dbg !8902
  store i32 0, i32* %retval, align 4, !dbg !8902
  br label %return, !dbg !8902

sw.bb99:                                          ; preds = %cond.end67
  %70 = load i8*, i8** %end.addr, align 8, !dbg !8906
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !8906
  %sub.ptr.lhs.cast100 = ptrtoint i8* %70 to i64, !dbg !8906
  %sub.ptr.rhs.cast101 = ptrtoint i8* %71 to i64, !dbg !8906
  %sub.ptr.sub102 = sub i64 %sub.ptr.lhs.cast100, %sub.ptr.rhs.cast101, !dbg !8906
  %cmp103 = icmp slt i64 %sub.ptr.sub102, 3, !dbg !8906
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !8906

if.then105:                                       ; preds = %sw.bb99
  store i32 -2, i32* %retval, align 4, !dbg !8909
  br label %return, !dbg !8909

if.end106:                                        ; preds = %sw.bb99
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !8911
  %73 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8911
  store i8* %72, i8** %73, align 8, !dbg !8911
  store i32 0, i32* %retval, align 4, !dbg !8911
  br label %return, !dbg !8911

sw.bb107:                                         ; preds = %cond.end67
  %74 = load i8*, i8** %end.addr, align 8, !dbg !8915
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !8915
  %sub.ptr.lhs.cast108 = ptrtoint i8* %74 to i64, !dbg !8915
  %sub.ptr.rhs.cast109 = ptrtoint i8* %75 to i64, !dbg !8915
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109, !dbg !8915
  %cmp111 = icmp slt i64 %sub.ptr.sub110, 4, !dbg !8915
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !8915

if.then113:                                       ; preds = %sw.bb107
  store i32 -2, i32* %retval, align 4, !dbg !8918
  br label %return, !dbg !8918

if.end114:                                        ; preds = %sw.bb107
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !8920
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8920
  store i8* %76, i8** %77, align 8, !dbg !8920
  store i32 0, i32* %retval, align 4, !dbg !8920
  br label %return, !dbg !8920

sw.bb115:                                         ; preds = %cond.end67
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !8924
  %add.ptr116 = getelementptr inbounds i8, i8* %78, i64 2, !dbg !8925
  %79 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8926
  store i8* %add.ptr116, i8** %79, align 8, !dbg !8927
  store i32 9, i32* %retval, align 4, !dbg !8928
  br label %return, !dbg !8928

sw.default117:                                    ; preds = %cond.end67
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !8929
  %81 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8930
  store i8* %80, i8** %81, align 8, !dbg !8931
  store i32 0, i32* %retval, align 4, !dbg !8932
  br label %return, !dbg !8932

sw.epilog118:                                     ; preds = %sw.bb89
  br label %while.cond, !dbg !8933

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !8935
  br label %return, !dbg !8935

return:                                           ; preds = %while.end, %sw.default117, %sw.bb115, %if.end114, %if.then113, %if.end106, %if.then105, %if.end98, %if.then97, %if.then87, %sw.default, %sw.bb46, %if.end45, %if.then44, %if.end37, %if.then36, %if.end29, %if.then28, %if.then19, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !8936
  ret i32 %82, !dbg !8936
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanCdataSection(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !310 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !8937, metadata !444), !dbg !8938
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8939, metadata !444), !dbg !8940
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8941, metadata !444), !dbg !8942
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !8943, metadata !444), !dbg !8944
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8945, metadata !444), !dbg !8946
  %0 = load i8*, i8** %end.addr, align 8, !dbg !8947
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !8947
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !8947
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8947
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8947
  %cmp = icmp sge i64 %sub.ptr.sub, 12, !dbg !8947
  br i1 %cmp, label %if.end, label %if.then, !dbg !8950

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8951
  br label %return, !dbg !8951

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8954
  br label %for.cond, !dbg !8956

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !8957
  %cmp1 = icmp slt i32 %2, 6, !dbg !8960
  br i1 %cmp1, label %for.body, label %for.end, !dbg !8961

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !8962
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8962
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8962
  %conv = sext i8 %4 to i32, !dbg !8962
  %cmp2 = icmp eq i32 %conv, 0, !dbg !8962
  br i1 %cmp2, label %land.lhs.true, label %if.then10, !dbg !8962

land.lhs.true:                                    ; preds = %for.body
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !8965
  %arrayidx4 = getelementptr inbounds i8, i8* %5, i64 0, !dbg !8965
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !8965
  %conv5 = sext i8 %6 to i32, !dbg !8965
  %7 = load i32, i32* %i, align 4, !dbg !8965
  %idxprom = sext i32 %7 to i64, !dbg !8965
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* @little2_scanCdataSection.CDATA_LSQB, i64 0, i64 %idxprom, !dbg !8965
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !8965
  %conv7 = sext i8 %8 to i32, !dbg !8965
  %cmp8 = icmp eq i32 %conv5, %conv7, !dbg !8965
  br i1 %cmp8, label %if.end11, label %if.then10, !dbg !8967

if.then10:                                        ; preds = %land.lhs.true, %for.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !8968
  %10 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8970
  store i8* %9, i8** %10, align 8, !dbg !8971
  store i32 0, i32* %retval, align 4, !dbg !8972
  br label %return, !dbg !8972

if.end11:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !8973

for.inc:                                          ; preds = %if.end11
  %11 = load i32, i32* %i, align 4, !dbg !8974
  %inc = add nsw i32 %11, 1, !dbg !8974
  store i32 %inc, i32* %i, align 4, !dbg !8974
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !8976
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 2, !dbg !8976
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !8976
  br label %for.cond, !dbg !8977

for.end:                                          ; preds = %for.cond
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !8978
  %14 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !8979
  store i8* %13, i8** %14, align 8, !dbg !8980
  store i32 8, i32* %retval, align 4, !dbg !8981
  br label %return, !dbg !8981

return:                                           ; preds = %for.end, %if.then10, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8982
  ret i32 %15, !dbg !8982
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanEndTag(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !311 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !8983, metadata !444), !dbg !8984
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8985, metadata !444), !dbg !8986
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !8987, metadata !444), !dbg !8988
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !8989, metadata !444), !dbg !8990
  %0 = load i8*, i8** %end.addr, align 8, !dbg !8991
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !8991
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !8991
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8991
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8991
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !8991
  br i1 %cmp, label %if.end, label %if.then, !dbg !8994

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8995
  br label %return, !dbg !8995

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !8998
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !8998
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8998
  %conv = sext i8 %3 to i32, !dbg !8998
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8998
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8998

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !8999
  %5 = load i8, i8* %4, align 1, !dbg !8999
  %idxprom = zext i8 %5 to i64, !dbg !8999
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8999
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !8999
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !8999
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !8999
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !8999
  %conv4 = zext i8 %8 to i32, !dbg !8999
  br label %cond.end, !dbg !8999

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !9001
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !9001
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !9001
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !9001
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !9001
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !9001
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !9001
  br label %cond.end, !dbg !9001

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !9003
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb21
    i32 24, label %sw.bb21
    i32 5, label %sw.bb22
    i32 6, label %sw.bb30
    i32 7, label %sw.bb38
  ], !dbg !9005

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !9006
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !9006
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !9006
  %idxprom8 = zext i8 %14 to i64, !dbg !9006
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom8, !dbg !9006
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !9006
  %conv10 = zext i8 %15 to i32, !dbg !9006
  %shl = shl i32 %conv10, 3, !dbg !9006
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !9006
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !9006
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !9006
  %conv12 = zext i8 %17 to i32, !dbg !9006
  %shr = ashr i32 %conv12, 5, !dbg !9006
  %add = add nsw i32 %shl, %shr, !dbg !9006
  %idxprom13 = sext i32 %add to i64, !dbg !9006
  %arrayidx14 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom13, !dbg !9006
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !9006
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !9006
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !9006
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !9006
  %conv16 = zext i8 %20 to i32, !dbg !9006
  %and = and i32 %conv16, 31, !dbg !9006
  %shl17 = shl i32 1, %and, !dbg !9006
  %and18 = and i32 %18, %shl17, !dbg !9006
  %tobool = icmp ne i32 %and18, 0, !dbg !9006
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !9009

if.then19:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !9010
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9010
  store i8* %21, i8** %22, align 8, !dbg !9010
  store i32 0, i32* %retval, align 4, !dbg !9010
  br label %return, !dbg !9010

if.end20:                                         ; preds = %sw.bb
  br label %sw.bb21, !dbg !9013

sw.bb21:                                          ; preds = %cond.end, %cond.end, %if.end20
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !9015
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !9015
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !9015
  br label %sw.epilog, !dbg !9015

sw.bb22:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !9017
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !9017
  %sub.ptr.lhs.cast23 = ptrtoint i8* %24 to i64, !dbg !9017
  %sub.ptr.rhs.cast24 = ptrtoint i8* %25 to i64, !dbg !9017
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !9017
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 2, !dbg !9017
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !9017

if.then28:                                        ; preds = %sw.bb22
  store i32 -2, i32* %retval, align 4, !dbg !9020
  br label %return, !dbg !9020

if.end29:                                         ; preds = %sw.bb22
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !9022
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9022
  store i8* %26, i8** %27, align 8, !dbg !9022
  store i32 0, i32* %retval, align 4, !dbg !9022
  br label %return, !dbg !9022

sw.bb30:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !9026
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !9026
  %sub.ptr.lhs.cast31 = ptrtoint i8* %28 to i64, !dbg !9026
  %sub.ptr.rhs.cast32 = ptrtoint i8* %29 to i64, !dbg !9026
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !9026
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 3, !dbg !9026
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !9026

if.then36:                                        ; preds = %sw.bb30
  store i32 -2, i32* %retval, align 4, !dbg !9029
  br label %return, !dbg !9029

if.end37:                                         ; preds = %sw.bb30
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !9031
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9031
  store i8* %30, i8** %31, align 8, !dbg !9031
  store i32 0, i32* %retval, align 4, !dbg !9031
  br label %return, !dbg !9031

sw.bb38:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !9035
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !9035
  %sub.ptr.lhs.cast39 = ptrtoint i8* %32 to i64, !dbg !9035
  %sub.ptr.rhs.cast40 = ptrtoint i8* %33 to i64, !dbg !9035
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !9035
  %cmp42 = icmp slt i64 %sub.ptr.sub41, 4, !dbg !9035
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !9035

if.then44:                                        ; preds = %sw.bb38
  store i32 -2, i32* %retval, align 4, !dbg !9038
  br label %return, !dbg !9038

if.end45:                                         ; preds = %sw.bb38
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !9040
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9040
  store i8* %34, i8** %35, align 8, !dbg !9040
  store i32 0, i32* %retval, align 4, !dbg !9040
  br label %return, !dbg !9040

sw.default:                                       ; preds = %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !9044
  %37 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9045
  store i8* %36, i8** %37, align 8, !dbg !9046
  store i32 0, i32* %retval, align 4, !dbg !9047
  br label %return, !dbg !9047

sw.epilog:                                        ; preds = %sw.bb21
  br label %while.cond, !dbg !9048

while.cond:                                       ; preds = %sw.epilog143, %sw.epilog
  %38 = load i8*, i8** %end.addr, align 8, !dbg !9049
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !9049
  %sub.ptr.lhs.cast46 = ptrtoint i8* %38 to i64, !dbg !9049
  %sub.ptr.rhs.cast47 = ptrtoint i8* %39 to i64, !dbg !9049
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47, !dbg !9049
  %cmp49 = icmp sge i64 %sub.ptr.sub48, 2, !dbg !9049
  br i1 %cmp49, label %while.body, label %while.end, !dbg !9050

while.body:                                       ; preds = %while.cond
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !9051
  %arrayidx51 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !9051
  %41 = load i8, i8* %arrayidx51, align 1, !dbg !9051
  %conv52 = sext i8 %41 to i32, !dbg !9051
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !9051
  br i1 %cmp53, label %cond.true55, label %cond.false60, !dbg !9051

cond.true55:                                      ; preds = %while.body
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !9053
  %43 = load i8, i8* %42, align 1, !dbg !9053
  %idxprom56 = zext i8 %43 to i64, !dbg !9053
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9053
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !9053
  %type57 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !9053
  %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* %type57, i64 0, i64 %idxprom56, !dbg !9053
  %46 = load i8, i8* %arrayidx58, align 1, !dbg !9053
  %conv59 = zext i8 %46 to i32, !dbg !9053
  br label %cond.end64, !dbg !9053

cond.false60:                                     ; preds = %while.body
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !9055
  %arrayidx61 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !9055
  %48 = load i8, i8* %arrayidx61, align 1, !dbg !9055
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !9055
  %arrayidx62 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !9055
  %50 = load i8, i8* %arrayidx62, align 1, !dbg !9055
  %call63 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !9055
  br label %cond.end64, !dbg !9055

cond.end64:                                       ; preds = %cond.false60, %cond.true55
  %cond65 = phi i32 [ %conv59, %cond.true55 ], [ %call63, %cond.false60 ], !dbg !9057
  switch i32 %cond65, label %sw.default142 [
    i32 29, label %sw.bb66
    i32 22, label %sw.bb86
    i32 24, label %sw.bb86
    i32 25, label %sw.bb86
    i32 26, label %sw.bb86
    i32 27, label %sw.bb86
    i32 5, label %sw.bb88
    i32 6, label %sw.bb96
    i32 7, label %sw.bb104
    i32 21, label %sw.bb112
    i32 9, label %sw.bb112
    i32 10, label %sw.bb112
    i32 11, label %sw.bb140
  ], !dbg !9059

sw.bb66:                                          ; preds = %cond.end64
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !9060
  %arrayidx67 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !9060
  %52 = load i8, i8* %arrayidx67, align 1, !dbg !9060
  %idxprom68 = zext i8 %52 to i64, !dbg !9060
  %arrayidx69 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom68, !dbg !9060
  %53 = load i8, i8* %arrayidx69, align 1, !dbg !9060
  %conv70 = zext i8 %53 to i32, !dbg !9060
  %shl71 = shl i32 %conv70, 3, !dbg !9060
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !9060
  %arrayidx72 = getelementptr inbounds i8, i8* %54, i64 0, !dbg !9060
  %55 = load i8, i8* %arrayidx72, align 1, !dbg !9060
  %conv73 = zext i8 %55 to i32, !dbg !9060
  %shr74 = ashr i32 %conv73, 5, !dbg !9060
  %add75 = add nsw i32 %shl71, %shr74, !dbg !9060
  %idxprom76 = sext i32 %add75 to i64, !dbg !9060
  %arrayidx77 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom76, !dbg !9060
  %56 = load i32, i32* %arrayidx77, align 4, !dbg !9060
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !9060
  %arrayidx78 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !9060
  %58 = load i8, i8* %arrayidx78, align 1, !dbg !9060
  %conv79 = zext i8 %58 to i32, !dbg !9060
  %and80 = and i32 %conv79, 31, !dbg !9060
  %shl81 = shl i32 1, %and80, !dbg !9060
  %and82 = and i32 %56, %shl81, !dbg !9060
  %tobool83 = icmp ne i32 %and82, 0, !dbg !9060
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !9063

if.then84:                                        ; preds = %sw.bb66
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !9064
  %60 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9064
  store i8* %59, i8** %60, align 8, !dbg !9064
  store i32 0, i32* %retval, align 4, !dbg !9064
  br label %return, !dbg !9064

if.end85:                                         ; preds = %sw.bb66
  br label %sw.bb86, !dbg !9067

sw.bb86:                                          ; preds = %cond.end64, %cond.end64, %cond.end64, %cond.end64, %cond.end64, %if.end85
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !9069
  %add.ptr87 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !9069
  store i8* %add.ptr87, i8** %ptr.addr, align 8, !dbg !9069
  br label %sw.epilog143, !dbg !9069

sw.bb88:                                          ; preds = %cond.end64
  %62 = load i8*, i8** %end.addr, align 8, !dbg !9071
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !9071
  %sub.ptr.lhs.cast89 = ptrtoint i8* %62 to i64, !dbg !9071
  %sub.ptr.rhs.cast90 = ptrtoint i8* %63 to i64, !dbg !9071
  %sub.ptr.sub91 = sub i64 %sub.ptr.lhs.cast89, %sub.ptr.rhs.cast90, !dbg !9071
  %cmp92 = icmp slt i64 %sub.ptr.sub91, 2, !dbg !9071
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !9071

if.then94:                                        ; preds = %sw.bb88
  store i32 -2, i32* %retval, align 4, !dbg !9074
  br label %return, !dbg !9074

if.end95:                                         ; preds = %sw.bb88
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !9076
  %65 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9076
  store i8* %64, i8** %65, align 8, !dbg !9076
  store i32 0, i32* %retval, align 4, !dbg !9076
  br label %return, !dbg !9076

sw.bb96:                                          ; preds = %cond.end64
  %66 = load i8*, i8** %end.addr, align 8, !dbg !9080
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !9080
  %sub.ptr.lhs.cast97 = ptrtoint i8* %66 to i64, !dbg !9080
  %sub.ptr.rhs.cast98 = ptrtoint i8* %67 to i64, !dbg !9080
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98, !dbg !9080
  %cmp100 = icmp slt i64 %sub.ptr.sub99, 3, !dbg !9080
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !9080

if.then102:                                       ; preds = %sw.bb96
  store i32 -2, i32* %retval, align 4, !dbg !9083
  br label %return, !dbg !9083

if.end103:                                        ; preds = %sw.bb96
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !9085
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9085
  store i8* %68, i8** %69, align 8, !dbg !9085
  store i32 0, i32* %retval, align 4, !dbg !9085
  br label %return, !dbg !9085

sw.bb104:                                         ; preds = %cond.end64
  %70 = load i8*, i8** %end.addr, align 8, !dbg !9089
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !9089
  %sub.ptr.lhs.cast105 = ptrtoint i8* %70 to i64, !dbg !9089
  %sub.ptr.rhs.cast106 = ptrtoint i8* %71 to i64, !dbg !9089
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106, !dbg !9089
  %cmp108 = icmp slt i64 %sub.ptr.sub107, 4, !dbg !9089
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !9089

if.then110:                                       ; preds = %sw.bb104
  store i32 -2, i32* %retval, align 4, !dbg !9092
  br label %return, !dbg !9092

if.end111:                                        ; preds = %sw.bb104
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !9094
  %73 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9094
  store i8* %72, i8** %73, align 8, !dbg !9094
  store i32 0, i32* %retval, align 4, !dbg !9094
  br label %return, !dbg !9094

sw.bb112:                                         ; preds = %cond.end64, %cond.end64, %cond.end64
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !9098
  %add.ptr113 = getelementptr inbounds i8, i8* %74, i64 2, !dbg !9098
  store i8* %add.ptr113, i8** %ptr.addr, align 8, !dbg !9098
  br label %for.cond, !dbg !9100

for.cond:                                         ; preds = %for.inc, %sw.bb112
  %75 = load i8*, i8** %end.addr, align 8, !dbg !9101
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !9101
  %sub.ptr.lhs.cast114 = ptrtoint i8* %75 to i64, !dbg !9101
  %sub.ptr.rhs.cast115 = ptrtoint i8* %76 to i64, !dbg !9101
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast114, %sub.ptr.rhs.cast115, !dbg !9101
  %cmp117 = icmp sge i64 %sub.ptr.sub116, 2, !dbg !9101
  br i1 %cmp117, label %for.body, label %for.end, !dbg !9104

for.body:                                         ; preds = %for.cond
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !9105
  %arrayidx119 = getelementptr inbounds i8, i8* %77, i64 1, !dbg !9105
  %78 = load i8, i8* %arrayidx119, align 1, !dbg !9105
  %conv120 = sext i8 %78 to i32, !dbg !9105
  %cmp121 = icmp eq i32 %conv120, 0, !dbg !9105
  br i1 %cmp121, label %cond.true123, label %cond.false128, !dbg !9105

cond.true123:                                     ; preds = %for.body
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !9107
  %80 = load i8, i8* %79, align 1, !dbg !9107
  %idxprom124 = zext i8 %80 to i64, !dbg !9107
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9107
  %82 = bitcast %struct.encoding* %81 to %struct.normal_encoding*, !dbg !9107
  %type125 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %82, i32 0, i32 1, !dbg !9107
  %arrayidx126 = getelementptr inbounds [256 x i8], [256 x i8]* %type125, i64 0, i64 %idxprom124, !dbg !9107
  %83 = load i8, i8* %arrayidx126, align 1, !dbg !9107
  %conv127 = zext i8 %83 to i32, !dbg !9107
  br label %cond.end132, !dbg !9107

cond.false128:                                    ; preds = %for.body
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !9109
  %arrayidx129 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !9109
  %85 = load i8, i8* %arrayidx129, align 1, !dbg !9109
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !9109
  %arrayidx130 = getelementptr inbounds i8, i8* %86, i64 0, !dbg !9109
  %87 = load i8, i8* %arrayidx130, align 1, !dbg !9109
  %call131 = call i32 @unicode_byte_type(i8 signext %85, i8 signext %87), !dbg !9109
  br label %cond.end132, !dbg !9109

cond.end132:                                      ; preds = %cond.false128, %cond.true123
  %cond133 = phi i32 [ %conv127, %cond.true123 ], [ %call131, %cond.false128 ], !dbg !9111
  switch i32 %cond133, label %sw.default137 [
    i32 21, label %sw.bb134
    i32 9, label %sw.bb134
    i32 10, label %sw.bb134
    i32 11, label %sw.bb135
  ], !dbg !9113

sw.bb134:                                         ; preds = %cond.end132, %cond.end132, %cond.end132
  br label %sw.epilog138, !dbg !9114

sw.bb135:                                         ; preds = %cond.end132
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !9116
  %add.ptr136 = getelementptr inbounds i8, i8* %88, i64 2, !dbg !9117
  %89 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9118
  store i8* %add.ptr136, i8** %89, align 8, !dbg !9119
  store i32 5, i32* %retval, align 4, !dbg !9120
  br label %return, !dbg !9120

sw.default137:                                    ; preds = %cond.end132
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !9121
  %91 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9122
  store i8* %90, i8** %91, align 8, !dbg !9123
  store i32 0, i32* %retval, align 4, !dbg !9124
  br label %return, !dbg !9124

sw.epilog138:                                     ; preds = %sw.bb134
  br label %for.inc, !dbg !9125

for.inc:                                          ; preds = %sw.epilog138
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !9126
  %add.ptr139 = getelementptr inbounds i8, i8* %92, i64 2, !dbg !9126
  store i8* %add.ptr139, i8** %ptr.addr, align 8, !dbg !9126
  br label %for.cond, !dbg !9128

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !9129
  br label %return, !dbg !9129

sw.bb140:                                         ; preds = %cond.end64
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !9130
  %add.ptr141 = getelementptr inbounds i8, i8* %93, i64 2, !dbg !9131
  %94 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9132
  store i8* %add.ptr141, i8** %94, align 8, !dbg !9133
  store i32 5, i32* %retval, align 4, !dbg !9134
  br label %return, !dbg !9134

sw.default142:                                    ; preds = %cond.end64
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !9135
  %96 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9136
  store i8* %95, i8** %96, align 8, !dbg !9137
  store i32 0, i32* %retval, align 4, !dbg !9138
  br label %return, !dbg !9138

sw.epilog143:                                     ; preds = %sw.bb86
  br label %while.cond, !dbg !9139

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !9141
  br label %return, !dbg !9141

return:                                           ; preds = %while.end, %sw.default142, %sw.bb140, %for.end, %sw.default137, %sw.bb135, %if.end111, %if.then110, %if.end103, %if.then102, %if.end95, %if.then94, %if.then84, %sw.default, %if.end45, %if.then44, %if.end37, %if.then36, %if.end29, %if.then28, %if.then19, %if.then
  %97 = load i32, i32* %retval, align 4, !dbg !9142
  ret i32 %97, !dbg !9142
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanAtts(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !312 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %t = alloca i32, align 4
  %open = alloca i32, align 4
  %t110 = alloca i32, align 4
  %tok = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !9143, metadata !444), !dbg !9144
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9145, metadata !444), !dbg !9146
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !9147, metadata !444), !dbg !9148
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !9149, metadata !444), !dbg !9150
  br label %while.cond, !dbg !9151

while.cond:                                       ; preds = %sw.epilog306, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !9152
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !9152
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !9152
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9152
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9152
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !9152
  br i1 %cmp, label %while.body, label %while.end, !dbg !9154

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !9155
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !9155
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9155
  %conv = sext i8 %3 to i32, !dbg !9155
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9155
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9155

cond.true:                                        ; preds = %while.body
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !9157
  %5 = load i8, i8* %4, align 1, !dbg !9157
  %idxprom = zext i8 %5 to i64, !dbg !9157
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9157
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !9157
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !9157
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !9157
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !9157
  %conv4 = zext i8 %8 to i32, !dbg !9157
  br label %cond.end, !dbg !9157

cond.false:                                       ; preds = %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !9159
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !9159
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !9159
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !9159
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !9159
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !9159
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !9159
  br label %cond.end, !dbg !9159

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !9161
  switch i32 %cond, label %sw.default305 [
    i32 29, label %sw.bb
    i32 22, label %sw.bb19
    i32 24, label %sw.bb19
    i32 25, label %sw.bb19
    i32 26, label %sw.bb19
    i32 27, label %sw.bb19
    i32 5, label %sw.bb20
    i32 6, label %sw.bb28
    i32 7, label %sw.bb36
    i32 21, label %sw.bb44
    i32 9, label %sw.bb44
    i32 10, label %sw.bb44
    i32 14, label %sw.bb73
  ], !dbg !9163

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !9164
  %arrayidx7 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !9164
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !9164
  %idxprom8 = zext i8 %14 to i64, !dbg !9164
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom8, !dbg !9164
  %15 = load i8, i8* %arrayidx9, align 1, !dbg !9164
  %conv10 = zext i8 %15 to i32, !dbg !9164
  %shl = shl i32 %conv10, 3, !dbg !9164
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !9164
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !9164
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !9164
  %conv12 = zext i8 %17 to i32, !dbg !9164
  %shr = ashr i32 %conv12, 5, !dbg !9164
  %add = add nsw i32 %shl, %shr, !dbg !9164
  %idxprom13 = sext i32 %add to i64, !dbg !9164
  %arrayidx14 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom13, !dbg !9164
  %18 = load i32, i32* %arrayidx14, align 4, !dbg !9164
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !9164
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !9164
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !9164
  %conv16 = zext i8 %20 to i32, !dbg !9164
  %and = and i32 %conv16, 31, !dbg !9164
  %shl17 = shl i32 1, %and, !dbg !9164
  %and18 = and i32 %18, %shl17, !dbg !9164
  %tobool = icmp ne i32 %and18, 0, !dbg !9164
  br i1 %tobool, label %if.end, label %if.then, !dbg !9167

if.then:                                          ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !9168
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9168
  store i8* %21, i8** %22, align 8, !dbg !9168
  store i32 0, i32* %retval, align 4, !dbg !9168
  br label %return, !dbg !9168

if.end:                                           ; preds = %sw.bb
  br label %sw.bb19, !dbg !9171

sw.bb19:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %if.end
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !9173
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !9173
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !9173
  br label %sw.epilog306, !dbg !9173

sw.bb20:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !9175
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !9175
  %sub.ptr.lhs.cast21 = ptrtoint i8* %24 to i64, !dbg !9175
  %sub.ptr.rhs.cast22 = ptrtoint i8* %25 to i64, !dbg !9175
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !9175
  %cmp24 = icmp slt i64 %sub.ptr.sub23, 2, !dbg !9175
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !9175

if.then26:                                        ; preds = %sw.bb20
  store i32 -2, i32* %retval, align 4, !dbg !9178
  br label %return, !dbg !9178

if.end27:                                         ; preds = %sw.bb20
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !9180
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9180
  store i8* %26, i8** %27, align 8, !dbg !9180
  store i32 0, i32* %retval, align 4, !dbg !9180
  br label %return, !dbg !9180

sw.bb28:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !9184
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !9184
  %sub.ptr.lhs.cast29 = ptrtoint i8* %28 to i64, !dbg !9184
  %sub.ptr.rhs.cast30 = ptrtoint i8* %29 to i64, !dbg !9184
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30, !dbg !9184
  %cmp32 = icmp slt i64 %sub.ptr.sub31, 3, !dbg !9184
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !9184

if.then34:                                        ; preds = %sw.bb28
  store i32 -2, i32* %retval, align 4, !dbg !9187
  br label %return, !dbg !9187

if.end35:                                         ; preds = %sw.bb28
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !9189
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9189
  store i8* %30, i8** %31, align 8, !dbg !9189
  store i32 0, i32* %retval, align 4, !dbg !9189
  br label %return, !dbg !9189

sw.bb36:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !9193
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !9193
  %sub.ptr.lhs.cast37 = ptrtoint i8* %32 to i64, !dbg !9193
  %sub.ptr.rhs.cast38 = ptrtoint i8* %33 to i64, !dbg !9193
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38, !dbg !9193
  %cmp40 = icmp slt i64 %sub.ptr.sub39, 4, !dbg !9193
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !9193

if.then42:                                        ; preds = %sw.bb36
  store i32 -2, i32* %retval, align 4, !dbg !9196
  br label %return, !dbg !9196

if.end43:                                         ; preds = %sw.bb36
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !9198
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9198
  store i8* %34, i8** %35, align 8, !dbg !9198
  store i32 0, i32* %retval, align 4, !dbg !9198
  br label %return, !dbg !9198

sw.bb44:                                          ; preds = %cond.end, %cond.end, %cond.end
  br label %for.cond, !dbg !9202

for.cond:                                         ; preds = %sw.epilog, %sw.bb44
  call void @llvm.dbg.declare(metadata i32* %t, metadata !9203, metadata !444), !dbg !9207
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !9208
  %add.ptr45 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !9208
  store i8* %add.ptr45, i8** %ptr.addr, align 8, !dbg !9208
  %37 = load i8*, i8** %end.addr, align 8, !dbg !9209
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !9209
  %sub.ptr.lhs.cast46 = ptrtoint i8* %37 to i64, !dbg !9209
  %sub.ptr.rhs.cast47 = ptrtoint i8* %38 to i64, !dbg !9209
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47, !dbg !9209
  %cmp49 = icmp sge i64 %sub.ptr.sub48, 2, !dbg !9209
  br i1 %cmp49, label %if.end52, label %if.then51, !dbg !9212

if.then51:                                        ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !9213
  br label %return, !dbg !9213

if.end52:                                         ; preds = %for.cond
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !9216
  %arrayidx53 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !9216
  %40 = load i8, i8* %arrayidx53, align 1, !dbg !9216
  %conv54 = sext i8 %40 to i32, !dbg !9216
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !9216
  br i1 %cmp55, label %cond.true57, label %cond.false62, !dbg !9216

cond.true57:                                      ; preds = %if.end52
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !9217
  %42 = load i8, i8* %41, align 1, !dbg !9217
  %idxprom58 = zext i8 %42 to i64, !dbg !9217
  %43 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9217
  %44 = bitcast %struct.encoding* %43 to %struct.normal_encoding*, !dbg !9217
  %type59 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %44, i32 0, i32 1, !dbg !9217
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %type59, i64 0, i64 %idxprom58, !dbg !9217
  %45 = load i8, i8* %arrayidx60, align 1, !dbg !9217
  %conv61 = zext i8 %45 to i32, !dbg !9217
  br label %cond.end66, !dbg !9217

cond.false62:                                     ; preds = %if.end52
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !9219
  %arrayidx63 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !9219
  %47 = load i8, i8* %arrayidx63, align 1, !dbg !9219
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !9219
  %arrayidx64 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !9219
  %49 = load i8, i8* %arrayidx64, align 1, !dbg !9219
  %call65 = call i32 @unicode_byte_type(i8 signext %47, i8 signext %49), !dbg !9219
  br label %cond.end66, !dbg !9219

cond.end66:                                       ; preds = %cond.false62, %cond.true57
  %cond67 = phi i32 [ %conv61, %cond.true57 ], [ %call65, %cond.false62 ], !dbg !9221
  store i32 %cond67, i32* %t, align 4, !dbg !9223
  %50 = load i32, i32* %t, align 4, !dbg !9224
  %cmp68 = icmp eq i32 %50, 14, !dbg !9226
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !9227

if.then70:                                        ; preds = %cond.end66
  br label %for.end, !dbg !9228

if.end71:                                         ; preds = %cond.end66
  %51 = load i32, i32* %t, align 4, !dbg !9229
  switch i32 %51, label %sw.default [
    i32 21, label %sw.bb72
    i32 10, label %sw.bb72
    i32 9, label %sw.bb72
  ], !dbg !9230

sw.bb72:                                          ; preds = %if.end71, %if.end71, %if.end71
  br label %sw.epilog, !dbg !9231

sw.default:                                       ; preds = %if.end71
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !9233
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9234
  store i8* %52, i8** %53, align 8, !dbg !9235
  store i32 0, i32* %retval, align 4, !dbg !9236
  br label %return, !dbg !9236

sw.epilog:                                        ; preds = %sw.bb72
  br label %for.cond, !dbg !9237

for.end:                                          ; preds = %if.then70
  br label %sw.bb73, !dbg !9239

sw.bb73:                                          ; preds = %cond.end, %for.end
  call void @llvm.dbg.declare(metadata i32* %open, metadata !9240, metadata !444), !dbg !9242
  br label %for.cond74, !dbg !9243

for.cond74:                                       ; preds = %sw.epilog106, %sw.bb73
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !9244
  %add.ptr75 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !9244
  store i8* %add.ptr75, i8** %ptr.addr, align 8, !dbg !9244
  %55 = load i8*, i8** %end.addr, align 8, !dbg !9248
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !9248
  %sub.ptr.lhs.cast76 = ptrtoint i8* %55 to i64, !dbg !9248
  %sub.ptr.rhs.cast77 = ptrtoint i8* %56 to i64, !dbg !9248
  %sub.ptr.sub78 = sub i64 %sub.ptr.lhs.cast76, %sub.ptr.rhs.cast77, !dbg !9248
  %cmp79 = icmp sge i64 %sub.ptr.sub78, 2, !dbg !9248
  br i1 %cmp79, label %if.end82, label %if.then81, !dbg !9251

if.then81:                                        ; preds = %for.cond74
  store i32 -1, i32* %retval, align 4, !dbg !9252
  br label %return, !dbg !9252

if.end82:                                         ; preds = %for.cond74
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !9255
  %arrayidx83 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !9255
  %58 = load i8, i8* %arrayidx83, align 1, !dbg !9255
  %conv84 = sext i8 %58 to i32, !dbg !9255
  %cmp85 = icmp eq i32 %conv84, 0, !dbg !9255
  br i1 %cmp85, label %cond.true87, label %cond.false92, !dbg !9255

cond.true87:                                      ; preds = %if.end82
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !9256
  %60 = load i8, i8* %59, align 1, !dbg !9256
  %idxprom88 = zext i8 %60 to i64, !dbg !9256
  %61 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9256
  %62 = bitcast %struct.encoding* %61 to %struct.normal_encoding*, !dbg !9256
  %type89 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %62, i32 0, i32 1, !dbg !9256
  %arrayidx90 = getelementptr inbounds [256 x i8], [256 x i8]* %type89, i64 0, i64 %idxprom88, !dbg !9256
  %63 = load i8, i8* %arrayidx90, align 1, !dbg !9256
  %conv91 = zext i8 %63 to i32, !dbg !9256
  br label %cond.end96, !dbg !9256

cond.false92:                                     ; preds = %if.end82
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !9258
  %arrayidx93 = getelementptr inbounds i8, i8* %64, i64 1, !dbg !9258
  %65 = load i8, i8* %arrayidx93, align 1, !dbg !9258
  %66 = load i8*, i8** %ptr.addr, align 8, !dbg !9258
  %arrayidx94 = getelementptr inbounds i8, i8* %66, i64 0, !dbg !9258
  %67 = load i8, i8* %arrayidx94, align 1, !dbg !9258
  %call95 = call i32 @unicode_byte_type(i8 signext %65, i8 signext %67), !dbg !9258
  br label %cond.end96, !dbg !9258

cond.end96:                                       ; preds = %cond.false92, %cond.true87
  %cond97 = phi i32 [ %conv91, %cond.true87 ], [ %call95, %cond.false92 ], !dbg !9260
  store i32 %cond97, i32* %open, align 4, !dbg !9262
  %68 = load i32, i32* %open, align 4, !dbg !9263
  %cmp98 = icmp eq i32 %68, 12, !dbg !9265
  br i1 %cmp98, label %if.then102, label %lor.lhs.false, !dbg !9266

lor.lhs.false:                                    ; preds = %cond.end96
  %69 = load i32, i32* %open, align 4, !dbg !9267
  %cmp100 = icmp eq i32 %69, 13, !dbg !9269
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !9270

if.then102:                                       ; preds = %lor.lhs.false, %cond.end96
  br label %for.end107, !dbg !9271

if.end103:                                        ; preds = %lor.lhs.false
  %70 = load i32, i32* %open, align 4, !dbg !9272
  switch i32 %70, label %sw.default105 [
    i32 21, label %sw.bb104
    i32 10, label %sw.bb104
    i32 9, label %sw.bb104
  ], !dbg !9273

sw.bb104:                                         ; preds = %if.end103, %if.end103, %if.end103
  br label %sw.epilog106, !dbg !9274

sw.default105:                                    ; preds = %if.end103
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !9276
  %72 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9277
  store i8* %71, i8** %72, align 8, !dbg !9278
  store i32 0, i32* %retval, align 4, !dbg !9279
  br label %return, !dbg !9279

sw.epilog106:                                     ; preds = %sw.bb104
  br label %for.cond74, !dbg !9280

for.end107:                                       ; preds = %if.then102
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !9282
  %add.ptr108 = getelementptr inbounds i8, i8* %73, i64 2, !dbg !9282
  store i8* %add.ptr108, i8** %ptr.addr, align 8, !dbg !9282
  br label %for.cond109, !dbg !9283

for.cond109:                                      ; preds = %sw.epilog179, %for.end107
  call void @llvm.dbg.declare(metadata i32* %t110, metadata !9284, metadata !444), !dbg !9288
  %74 = load i8*, i8** %end.addr, align 8, !dbg !9289
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !9289
  %sub.ptr.lhs.cast111 = ptrtoint i8* %74 to i64, !dbg !9289
  %sub.ptr.rhs.cast112 = ptrtoint i8* %75 to i64, !dbg !9289
  %sub.ptr.sub113 = sub i64 %sub.ptr.lhs.cast111, %sub.ptr.rhs.cast112, !dbg !9289
  %cmp114 = icmp sge i64 %sub.ptr.sub113, 2, !dbg !9289
  br i1 %cmp114, label %if.end117, label %if.then116, !dbg !9292

if.then116:                                       ; preds = %for.cond109
  store i32 -1, i32* %retval, align 4, !dbg !9293
  br label %return, !dbg !9293

if.end117:                                        ; preds = %for.cond109
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !9296
  %arrayidx118 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !9296
  %77 = load i8, i8* %arrayidx118, align 1, !dbg !9296
  %conv119 = sext i8 %77 to i32, !dbg !9296
  %cmp120 = icmp eq i32 %conv119, 0, !dbg !9296
  br i1 %cmp120, label %cond.true122, label %cond.false127, !dbg !9296

cond.true122:                                     ; preds = %if.end117
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !9297
  %79 = load i8, i8* %78, align 1, !dbg !9297
  %idxprom123 = zext i8 %79 to i64, !dbg !9297
  %80 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9297
  %81 = bitcast %struct.encoding* %80 to %struct.normal_encoding*, !dbg !9297
  %type124 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %81, i32 0, i32 1, !dbg !9297
  %arrayidx125 = getelementptr inbounds [256 x i8], [256 x i8]* %type124, i64 0, i64 %idxprom123, !dbg !9297
  %82 = load i8, i8* %arrayidx125, align 1, !dbg !9297
  %conv126 = zext i8 %82 to i32, !dbg !9297
  br label %cond.end131, !dbg !9297

cond.false127:                                    ; preds = %if.end117
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !9299
  %arrayidx128 = getelementptr inbounds i8, i8* %83, i64 1, !dbg !9299
  %84 = load i8, i8* %arrayidx128, align 1, !dbg !9299
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !9299
  %arrayidx129 = getelementptr inbounds i8, i8* %85, i64 0, !dbg !9299
  %86 = load i8, i8* %arrayidx129, align 1, !dbg !9299
  %call130 = call i32 @unicode_byte_type(i8 signext %84, i8 signext %86), !dbg !9299
  br label %cond.end131, !dbg !9299

cond.end131:                                      ; preds = %cond.false127, %cond.true122
  %cond132 = phi i32 [ %conv126, %cond.true122 ], [ %call130, %cond.false127 ], !dbg !9301
  store i32 %cond132, i32* %t110, align 4, !dbg !9303
  %87 = load i32, i32* %t110, align 4, !dbg !9304
  %88 = load i32, i32* %open, align 4, !dbg !9306
  %cmp133 = icmp eq i32 %87, %88, !dbg !9307
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !9308

if.then135:                                       ; preds = %cond.end131
  br label %for.end180, !dbg !9309

if.end136:                                        ; preds = %cond.end131
  %89 = load i32, i32* %t110, align 4, !dbg !9310
  switch i32 %89, label %sw.default177 [
    i32 5, label %sw.bb137
    i32 6, label %sw.bb146
    i32 7, label %sw.bb155
    i32 0, label %sw.bb164
    i32 1, label %sw.bb164
    i32 8, label %sw.bb164
    i32 3, label %sw.bb165
    i32 2, label %sw.bb176
  ], !dbg !9311

sw.bb137:                                         ; preds = %if.end136
  %90 = load i8*, i8** %end.addr, align 8, !dbg !9312
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !9312
  %sub.ptr.lhs.cast138 = ptrtoint i8* %90 to i64, !dbg !9312
  %sub.ptr.rhs.cast139 = ptrtoint i8* %91 to i64, !dbg !9312
  %sub.ptr.sub140 = sub i64 %sub.ptr.lhs.cast138, %sub.ptr.rhs.cast139, !dbg !9312
  %cmp141 = icmp slt i64 %sub.ptr.sub140, 2, !dbg !9312
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !9315

if.then143:                                       ; preds = %sw.bb137
  store i32 -2, i32* %retval, align 4, !dbg !9316
  br label %return, !dbg !9316

if.end144:                                        ; preds = %sw.bb137
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !9318
  %add.ptr145 = getelementptr inbounds i8, i8* %92, i64 2, !dbg !9318
  store i8* %add.ptr145, i8** %ptr.addr, align 8, !dbg !9318
  br label %sw.epilog179, !dbg !9318

sw.bb146:                                         ; preds = %if.end136
  %93 = load i8*, i8** %end.addr, align 8, !dbg !9320
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !9320
  %sub.ptr.lhs.cast147 = ptrtoint i8* %93 to i64, !dbg !9320
  %sub.ptr.rhs.cast148 = ptrtoint i8* %94 to i64, !dbg !9320
  %sub.ptr.sub149 = sub i64 %sub.ptr.lhs.cast147, %sub.ptr.rhs.cast148, !dbg !9320
  %cmp150 = icmp slt i64 %sub.ptr.sub149, 3, !dbg !9320
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !9320

if.then152:                                       ; preds = %sw.bb146
  store i32 -2, i32* %retval, align 4, !dbg !9323
  br label %return, !dbg !9323

if.end153:                                        ; preds = %sw.bb146
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !9325
  %add.ptr154 = getelementptr inbounds i8, i8* %95, i64 3, !dbg !9325
  store i8* %add.ptr154, i8** %ptr.addr, align 8, !dbg !9325
  br label %sw.epilog179, !dbg !9325

sw.bb155:                                         ; preds = %if.end136
  %96 = load i8*, i8** %end.addr, align 8, !dbg !9327
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !9327
  %sub.ptr.lhs.cast156 = ptrtoint i8* %96 to i64, !dbg !9327
  %sub.ptr.rhs.cast157 = ptrtoint i8* %97 to i64, !dbg !9327
  %sub.ptr.sub158 = sub i64 %sub.ptr.lhs.cast156, %sub.ptr.rhs.cast157, !dbg !9327
  %cmp159 = icmp slt i64 %sub.ptr.sub158, 4, !dbg !9327
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !9327

if.then161:                                       ; preds = %sw.bb155
  store i32 -2, i32* %retval, align 4, !dbg !9330
  br label %return, !dbg !9330

if.end162:                                        ; preds = %sw.bb155
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !9332
  %add.ptr163 = getelementptr inbounds i8, i8* %98, i64 4, !dbg !9332
  store i8* %add.ptr163, i8** %ptr.addr, align 8, !dbg !9332
  br label %sw.epilog179, !dbg !9332

sw.bb164:                                         ; preds = %if.end136, %if.end136, %if.end136
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !9334
  %100 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9334
  store i8* %99, i8** %100, align 8, !dbg !9334
  store i32 0, i32* %retval, align 4, !dbg !9334
  br label %return, !dbg !9334

sw.bb165:                                         ; preds = %if.end136
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !9336, metadata !444), !dbg !9338
  %101 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9339
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !9340
  %add.ptr166 = getelementptr inbounds i8, i8* %102, i64 2, !dbg !9341
  %103 = load i8*, i8** %end.addr, align 8, !dbg !9342
  %call167 = call i32 @little2_scanRef(%struct.encoding* %101, i8* %add.ptr166, i8* %103, i8** %ptr.addr), !dbg !9343
  store i32 %call167, i32* %tok, align 4, !dbg !9338
  %104 = load i32, i32* %tok, align 4, !dbg !9344
  %cmp168 = icmp sle i32 %104, 0, !dbg !9346
  br i1 %cmp168, label %if.then170, label %if.end175, !dbg !9347

if.then170:                                       ; preds = %sw.bb165
  %105 = load i32, i32* %tok, align 4, !dbg !9348
  %cmp171 = icmp eq i32 %105, 0, !dbg !9351
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !9352

if.then173:                                       ; preds = %if.then170
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !9353
  %107 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9354
  store i8* %106, i8** %107, align 8, !dbg !9355
  br label %if.end174, !dbg !9356

if.end174:                                        ; preds = %if.then173, %if.then170
  %108 = load i32, i32* %tok, align 4, !dbg !9357
  store i32 %108, i32* %retval, align 4, !dbg !9358
  br label %return, !dbg !9358

if.end175:                                        ; preds = %sw.bb165
  br label %sw.epilog179, !dbg !9359

sw.bb176:                                         ; preds = %if.end136
  %109 = load i8*, i8** %ptr.addr, align 8, !dbg !9360
  %110 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9361
  store i8* %109, i8** %110, align 8, !dbg !9362
  store i32 0, i32* %retval, align 4, !dbg !9363
  br label %return, !dbg !9363

sw.default177:                                    ; preds = %if.end136
  %111 = load i8*, i8** %ptr.addr, align 8, !dbg !9364
  %add.ptr178 = getelementptr inbounds i8, i8* %111, i64 2, !dbg !9364
  store i8* %add.ptr178, i8** %ptr.addr, align 8, !dbg !9364
  br label %sw.epilog179, !dbg !9365

sw.epilog179:                                     ; preds = %sw.default177, %if.end175, %if.end162, %if.end153, %if.end144
  br label %for.cond109, !dbg !9366

for.end180:                                       ; preds = %if.then135
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !9368
  %add.ptr181 = getelementptr inbounds i8, i8* %112, i64 2, !dbg !9368
  store i8* %add.ptr181, i8** %ptr.addr, align 8, !dbg !9368
  %113 = load i8*, i8** %end.addr, align 8, !dbg !9369
  %114 = load i8*, i8** %ptr.addr, align 8, !dbg !9369
  %sub.ptr.lhs.cast182 = ptrtoint i8* %113 to i64, !dbg !9369
  %sub.ptr.rhs.cast183 = ptrtoint i8* %114 to i64, !dbg !9369
  %sub.ptr.sub184 = sub i64 %sub.ptr.lhs.cast182, %sub.ptr.rhs.cast183, !dbg !9369
  %cmp185 = icmp sge i64 %sub.ptr.sub184, 2, !dbg !9369
  br i1 %cmp185, label %if.end188, label %if.then187, !dbg !9372

if.then187:                                       ; preds = %for.end180
  store i32 -1, i32* %retval, align 4, !dbg !9373
  br label %return, !dbg !9373

if.end188:                                        ; preds = %for.end180
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !9376
  %arrayidx189 = getelementptr inbounds i8, i8* %115, i64 1, !dbg !9376
  %116 = load i8, i8* %arrayidx189, align 1, !dbg !9376
  %conv190 = sext i8 %116 to i32, !dbg !9376
  %cmp191 = icmp eq i32 %conv190, 0, !dbg !9376
  br i1 %cmp191, label %cond.true193, label %cond.false198, !dbg !9376

cond.true193:                                     ; preds = %if.end188
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !9377
  %118 = load i8, i8* %117, align 1, !dbg !9377
  %idxprom194 = zext i8 %118 to i64, !dbg !9377
  %119 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9377
  %120 = bitcast %struct.encoding* %119 to %struct.normal_encoding*, !dbg !9377
  %type195 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %120, i32 0, i32 1, !dbg !9377
  %arrayidx196 = getelementptr inbounds [256 x i8], [256 x i8]* %type195, i64 0, i64 %idxprom194, !dbg !9377
  %121 = load i8, i8* %arrayidx196, align 1, !dbg !9377
  %conv197 = zext i8 %121 to i32, !dbg !9377
  br label %cond.end202, !dbg !9377

cond.false198:                                    ; preds = %if.end188
  %122 = load i8*, i8** %ptr.addr, align 8, !dbg !9379
  %arrayidx199 = getelementptr inbounds i8, i8* %122, i64 1, !dbg !9379
  %123 = load i8, i8* %arrayidx199, align 1, !dbg !9379
  %124 = load i8*, i8** %ptr.addr, align 8, !dbg !9379
  %arrayidx200 = getelementptr inbounds i8, i8* %124, i64 0, !dbg !9379
  %125 = load i8, i8* %arrayidx200, align 1, !dbg !9379
  %call201 = call i32 @unicode_byte_type(i8 signext %123, i8 signext %125), !dbg !9379
  br label %cond.end202, !dbg !9379

cond.end202:                                      ; preds = %cond.false198, %cond.true193
  %cond203 = phi i32 [ %conv197, %cond.true193 ], [ %call201, %cond.false198 ], !dbg !9381
  switch i32 %cond203, label %sw.default207 [
    i32 21, label %sw.bb204
    i32 9, label %sw.bb204
    i32 10, label %sw.bb204
    i32 17, label %sw.bb205
    i32 11, label %sw.bb206
  ], !dbg !9383

sw.bb204:                                         ; preds = %cond.end202, %cond.end202, %cond.end202
  br label %sw.epilog208, !dbg !9384

sw.bb205:                                         ; preds = %cond.end202
  br label %sol, !dbg !9386

sw.bb206:                                         ; preds = %cond.end202
  br label %gt, !dbg !9387

sw.default207:                                    ; preds = %cond.end202
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !9388
  %127 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9389
  store i8* %126, i8** %127, align 8, !dbg !9390
  store i32 0, i32* %retval, align 4, !dbg !9391
  br label %return, !dbg !9391

sw.epilog208:                                     ; preds = %sw.bb204
  br label %for.cond209, !dbg !9392

for.cond209:                                      ; preds = %sw.bb279, %sw.epilog208
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !9393
  %add.ptr210 = getelementptr inbounds i8, i8* %128, i64 2, !dbg !9393
  store i8* %add.ptr210, i8** %ptr.addr, align 8, !dbg !9393
  %129 = load i8*, i8** %end.addr, align 8, !dbg !9397
  %130 = load i8*, i8** %ptr.addr, align 8, !dbg !9397
  %sub.ptr.lhs.cast211 = ptrtoint i8* %129 to i64, !dbg !9397
  %sub.ptr.rhs.cast212 = ptrtoint i8* %130 to i64, !dbg !9397
  %sub.ptr.sub213 = sub i64 %sub.ptr.lhs.cast211, %sub.ptr.rhs.cast212, !dbg !9397
  %cmp214 = icmp sge i64 %sub.ptr.sub213, 2, !dbg !9397
  br i1 %cmp214, label %if.end217, label %if.then216, !dbg !9400

if.then216:                                       ; preds = %for.cond209
  store i32 -1, i32* %retval, align 4, !dbg !9401
  br label %return, !dbg !9401

if.end217:                                        ; preds = %for.cond209
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !9404
  %arrayidx218 = getelementptr inbounds i8, i8* %131, i64 1, !dbg !9404
  %132 = load i8, i8* %arrayidx218, align 1, !dbg !9404
  %conv219 = sext i8 %132 to i32, !dbg !9404
  %cmp220 = icmp eq i32 %conv219, 0, !dbg !9404
  br i1 %cmp220, label %cond.true222, label %cond.false227, !dbg !9404

cond.true222:                                     ; preds = %if.end217
  %133 = load i8*, i8** %ptr.addr, align 8, !dbg !9405
  %134 = load i8, i8* %133, align 1, !dbg !9405
  %idxprom223 = zext i8 %134 to i64, !dbg !9405
  %135 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9405
  %136 = bitcast %struct.encoding* %135 to %struct.normal_encoding*, !dbg !9405
  %type224 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %136, i32 0, i32 1, !dbg !9405
  %arrayidx225 = getelementptr inbounds [256 x i8], [256 x i8]* %type224, i64 0, i64 %idxprom223, !dbg !9405
  %137 = load i8, i8* %arrayidx225, align 1, !dbg !9405
  %conv226 = zext i8 %137 to i32, !dbg !9405
  br label %cond.end231, !dbg !9405

cond.false227:                                    ; preds = %if.end217
  %138 = load i8*, i8** %ptr.addr, align 8, !dbg !9407
  %arrayidx228 = getelementptr inbounds i8, i8* %138, i64 1, !dbg !9407
  %139 = load i8, i8* %arrayidx228, align 1, !dbg !9407
  %140 = load i8*, i8** %ptr.addr, align 8, !dbg !9407
  %arrayidx229 = getelementptr inbounds i8, i8* %140, i64 0, !dbg !9407
  %141 = load i8, i8* %arrayidx229, align 1, !dbg !9407
  %call230 = call i32 @unicode_byte_type(i8 signext %139, i8 signext %141), !dbg !9407
  br label %cond.end231, !dbg !9407

cond.end231:                                      ; preds = %cond.false227, %cond.true222
  %cond232 = phi i32 [ %conv226, %cond.true222 ], [ %call230, %cond.false227 ], !dbg !9409
  switch i32 %cond232, label %sw.default302 [
    i32 29, label %sw.bb233
    i32 22, label %sw.bb253
    i32 24, label %sw.bb253
    i32 5, label %sw.bb255
    i32 6, label %sw.bb263
    i32 7, label %sw.bb271
    i32 21, label %sw.bb279
    i32 9, label %sw.bb279
    i32 10, label %sw.bb279
    i32 11, label %sw.bb280
    i32 17, label %sw.bb282
  ], !dbg !9411

sw.bb233:                                         ; preds = %cond.end231
  %142 = load i8*, i8** %ptr.addr, align 8, !dbg !9412
  %arrayidx234 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !9412
  %143 = load i8, i8* %arrayidx234, align 1, !dbg !9412
  %idxprom235 = zext i8 %143 to i64, !dbg !9412
  %arrayidx236 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom235, !dbg !9412
  %144 = load i8, i8* %arrayidx236, align 1, !dbg !9412
  %conv237 = zext i8 %144 to i32, !dbg !9412
  %shl238 = shl i32 %conv237, 3, !dbg !9412
  %145 = load i8*, i8** %ptr.addr, align 8, !dbg !9412
  %arrayidx239 = getelementptr inbounds i8, i8* %145, i64 0, !dbg !9412
  %146 = load i8, i8* %arrayidx239, align 1, !dbg !9412
  %conv240 = zext i8 %146 to i32, !dbg !9412
  %shr241 = ashr i32 %conv240, 5, !dbg !9412
  %add242 = add nsw i32 %shl238, %shr241, !dbg !9412
  %idxprom243 = sext i32 %add242 to i64, !dbg !9412
  %arrayidx244 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom243, !dbg !9412
  %147 = load i32, i32* %arrayidx244, align 4, !dbg !9412
  %148 = load i8*, i8** %ptr.addr, align 8, !dbg !9412
  %arrayidx245 = getelementptr inbounds i8, i8* %148, i64 0, !dbg !9412
  %149 = load i8, i8* %arrayidx245, align 1, !dbg !9412
  %conv246 = zext i8 %149 to i32, !dbg !9412
  %and247 = and i32 %conv246, 31, !dbg !9412
  %shl248 = shl i32 1, %and247, !dbg !9412
  %and249 = and i32 %147, %shl248, !dbg !9412
  %tobool250 = icmp ne i32 %and249, 0, !dbg !9412
  br i1 %tobool250, label %if.end252, label %if.then251, !dbg !9415

if.then251:                                       ; preds = %sw.bb233
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !9416
  %151 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9416
  store i8* %150, i8** %151, align 8, !dbg !9416
  store i32 0, i32* %retval, align 4, !dbg !9416
  br label %return, !dbg !9416

if.end252:                                        ; preds = %sw.bb233
  br label %sw.bb253, !dbg !9419

sw.bb253:                                         ; preds = %cond.end231, %cond.end231, %if.end252
  %152 = load i8*, i8** %ptr.addr, align 8, !dbg !9421
  %add.ptr254 = getelementptr inbounds i8, i8* %152, i64 2, !dbg !9421
  store i8* %add.ptr254, i8** %ptr.addr, align 8, !dbg !9421
  br label %sw.epilog303, !dbg !9421

sw.bb255:                                         ; preds = %cond.end231
  %153 = load i8*, i8** %end.addr, align 8, !dbg !9423
  %154 = load i8*, i8** %ptr.addr, align 8, !dbg !9423
  %sub.ptr.lhs.cast256 = ptrtoint i8* %153 to i64, !dbg !9423
  %sub.ptr.rhs.cast257 = ptrtoint i8* %154 to i64, !dbg !9423
  %sub.ptr.sub258 = sub i64 %sub.ptr.lhs.cast256, %sub.ptr.rhs.cast257, !dbg !9423
  %cmp259 = icmp slt i64 %sub.ptr.sub258, 2, !dbg !9423
  br i1 %cmp259, label %if.then261, label %if.end262, !dbg !9423

if.then261:                                       ; preds = %sw.bb255
  store i32 -2, i32* %retval, align 4, !dbg !9426
  br label %return, !dbg !9426

if.end262:                                        ; preds = %sw.bb255
  %155 = load i8*, i8** %ptr.addr, align 8, !dbg !9428
  %156 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9428
  store i8* %155, i8** %156, align 8, !dbg !9428
  store i32 0, i32* %retval, align 4, !dbg !9428
  br label %return, !dbg !9428

sw.bb263:                                         ; preds = %cond.end231
  %157 = load i8*, i8** %end.addr, align 8, !dbg !9432
  %158 = load i8*, i8** %ptr.addr, align 8, !dbg !9432
  %sub.ptr.lhs.cast264 = ptrtoint i8* %157 to i64, !dbg !9432
  %sub.ptr.rhs.cast265 = ptrtoint i8* %158 to i64, !dbg !9432
  %sub.ptr.sub266 = sub i64 %sub.ptr.lhs.cast264, %sub.ptr.rhs.cast265, !dbg !9432
  %cmp267 = icmp slt i64 %sub.ptr.sub266, 3, !dbg !9432
  br i1 %cmp267, label %if.then269, label %if.end270, !dbg !9432

if.then269:                                       ; preds = %sw.bb263
  store i32 -2, i32* %retval, align 4, !dbg !9435
  br label %return, !dbg !9435

if.end270:                                        ; preds = %sw.bb263
  %159 = load i8*, i8** %ptr.addr, align 8, !dbg !9437
  %160 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9437
  store i8* %159, i8** %160, align 8, !dbg !9437
  store i32 0, i32* %retval, align 4, !dbg !9437
  br label %return, !dbg !9437

sw.bb271:                                         ; preds = %cond.end231
  %161 = load i8*, i8** %end.addr, align 8, !dbg !9441
  %162 = load i8*, i8** %ptr.addr, align 8, !dbg !9441
  %sub.ptr.lhs.cast272 = ptrtoint i8* %161 to i64, !dbg !9441
  %sub.ptr.rhs.cast273 = ptrtoint i8* %162 to i64, !dbg !9441
  %sub.ptr.sub274 = sub i64 %sub.ptr.lhs.cast272, %sub.ptr.rhs.cast273, !dbg !9441
  %cmp275 = icmp slt i64 %sub.ptr.sub274, 4, !dbg !9441
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !9441

if.then277:                                       ; preds = %sw.bb271
  store i32 -2, i32* %retval, align 4, !dbg !9444
  br label %return, !dbg !9444

if.end278:                                        ; preds = %sw.bb271
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !9446
  %164 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9446
  store i8* %163, i8** %164, align 8, !dbg !9446
  store i32 0, i32* %retval, align 4, !dbg !9446
  br label %return, !dbg !9446

sw.bb279:                                         ; preds = %cond.end231, %cond.end231, %cond.end231
  br label %for.cond209, !dbg !9450

sw.bb280:                                         ; preds = %cond.end231
  br label %gt, !dbg !9451

gt:                                               ; preds = %sw.bb280, %sw.bb206
  %165 = load i8*, i8** %ptr.addr, align 8, !dbg !9453
  %add.ptr281 = getelementptr inbounds i8, i8* %165, i64 2, !dbg !9454
  %166 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9455
  store i8* %add.ptr281, i8** %166, align 8, !dbg !9456
  store i32 1, i32* %retval, align 4, !dbg !9457
  br label %return, !dbg !9457

sw.bb282:                                         ; preds = %cond.end231
  br label %sol, !dbg !9458

sol:                                              ; preds = %sw.bb282, %sw.bb205
  %167 = load i8*, i8** %ptr.addr, align 8, !dbg !9459
  %add.ptr283 = getelementptr inbounds i8, i8* %167, i64 2, !dbg !9459
  store i8* %add.ptr283, i8** %ptr.addr, align 8, !dbg !9459
  %168 = load i8*, i8** %end.addr, align 8, !dbg !9460
  %169 = load i8*, i8** %ptr.addr, align 8, !dbg !9460
  %sub.ptr.lhs.cast284 = ptrtoint i8* %168 to i64, !dbg !9460
  %sub.ptr.rhs.cast285 = ptrtoint i8* %169 to i64, !dbg !9460
  %sub.ptr.sub286 = sub i64 %sub.ptr.lhs.cast284, %sub.ptr.rhs.cast285, !dbg !9460
  %cmp287 = icmp sge i64 %sub.ptr.sub286, 2, !dbg !9460
  br i1 %cmp287, label %if.end290, label %if.then289, !dbg !9463

if.then289:                                       ; preds = %sol
  store i32 -1, i32* %retval, align 4, !dbg !9464
  br label %return, !dbg !9464

if.end290:                                        ; preds = %sol
  %170 = load i8*, i8** %ptr.addr, align 8, !dbg !9467
  %arrayidx291 = getelementptr inbounds i8, i8* %170, i64 1, !dbg !9467
  %171 = load i8, i8* %arrayidx291, align 1, !dbg !9467
  %conv292 = sext i8 %171 to i32, !dbg !9467
  %cmp293 = icmp eq i32 %conv292, 0, !dbg !9467
  br i1 %cmp293, label %land.lhs.true, label %if.then299, !dbg !9467

land.lhs.true:                                    ; preds = %if.end290
  %172 = load i8*, i8** %ptr.addr, align 8, !dbg !9469
  %arrayidx295 = getelementptr inbounds i8, i8* %172, i64 0, !dbg !9469
  %173 = load i8, i8* %arrayidx295, align 1, !dbg !9469
  %conv296 = sext i8 %173 to i32, !dbg !9469
  %cmp297 = icmp eq i32 %conv296, 62, !dbg !9469
  br i1 %cmp297, label %if.end300, label %if.then299, !dbg !9471

if.then299:                                       ; preds = %land.lhs.true, %if.end290
  %174 = load i8*, i8** %ptr.addr, align 8, !dbg !9472
  %175 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9474
  store i8* %174, i8** %175, align 8, !dbg !9475
  store i32 0, i32* %retval, align 4, !dbg !9476
  br label %return, !dbg !9476

if.end300:                                        ; preds = %land.lhs.true
  %176 = load i8*, i8** %ptr.addr, align 8, !dbg !9477
  %add.ptr301 = getelementptr inbounds i8, i8* %176, i64 2, !dbg !9478
  %177 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9479
  store i8* %add.ptr301, i8** %177, align 8, !dbg !9480
  store i32 3, i32* %retval, align 4, !dbg !9481
  br label %return, !dbg !9481

sw.default302:                                    ; preds = %cond.end231
  %178 = load i8*, i8** %ptr.addr, align 8, !dbg !9482
  %179 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9483
  store i8* %178, i8** %179, align 8, !dbg !9484
  store i32 0, i32* %retval, align 4, !dbg !9485
  br label %return, !dbg !9485

sw.epilog303:                                     ; preds = %sw.bb253
  br label %for.end304, !dbg !9486

for.end304:                                       ; preds = %sw.epilog303
  br label %sw.epilog306, !dbg !9487

sw.default305:                                    ; preds = %cond.end
  %180 = load i8*, i8** %ptr.addr, align 8, !dbg !9488
  %181 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9489
  store i8* %180, i8** %181, align 8, !dbg !9490
  store i32 0, i32* %retval, align 4, !dbg !9491
  br label %return, !dbg !9491

sw.epilog306:                                     ; preds = %for.end304, %sw.bb19
  br label %while.cond, !dbg !9492

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !9494
  br label %return, !dbg !9494

return:                                           ; preds = %while.end, %sw.default305, %sw.default302, %if.end300, %if.then299, %if.then289, %gt, %if.end278, %if.then277, %if.end270, %if.then269, %if.end262, %if.then261, %if.then251, %if.then216, %sw.default207, %if.then187, %sw.bb176, %if.end174, %sw.bb164, %if.then161, %if.then152, %if.then143, %if.then116, %sw.default105, %if.then81, %sw.default, %if.then51, %if.end43, %if.then42, %if.end35, %if.then34, %if.end27, %if.then26, %if.then
  %182 = load i32, i32* %retval, align 4, !dbg !9495
  ret i32 %182, !dbg !9495
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanCharRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !314 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !9496, metadata !444), !dbg !9497
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9498, metadata !444), !dbg !9499
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !9500, metadata !444), !dbg !9501
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !9502, metadata !444), !dbg !9503
  %0 = load i8*, i8** %end.addr, align 8, !dbg !9504
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !9504
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !9504
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9504
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9504
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !9504
  br i1 %cmp, label %if.then, label %if.end44, !dbg !9506

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !9507
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !9507
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9507
  %conv = sext i8 %3 to i32, !dbg !9507
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9507
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !9507

land.lhs.true:                                    ; preds = %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !9510
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !9510
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !9510
  %conv4 = sext i8 %5 to i32, !dbg !9510
  %cmp5 = icmp eq i32 %conv4, 120, !dbg !9510
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !9510

if.then7:                                         ; preds = %land.lhs.true
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9512
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !9513
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2, !dbg !9514
  %8 = load i8*, i8** %end.addr, align 8, !dbg !9515
  %9 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9516
  %call = call i32 @little2_scanHexCharRef(%struct.encoding* %6, i8* %add.ptr, i8* %8, i8** %9), !dbg !9517
  store i32 %call, i32* %retval, align 4, !dbg !9518
  br label %return, !dbg !9518

if.end:                                           ; preds = %land.lhs.true, %if.then
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !9519
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !9519
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !9519
  %conv9 = sext i8 %11 to i32, !dbg !9519
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !9519
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !9519

cond.true:                                        ; preds = %if.end
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !9520
  %13 = load i8, i8* %12, align 1, !dbg !9520
  %idxprom = zext i8 %13 to i64, !dbg !9520
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9520
  %15 = bitcast %struct.encoding* %14 to %struct.normal_encoding*, !dbg !9520
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %15, i32 0, i32 1, !dbg !9520
  %arrayidx12 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !9520
  %16 = load i8, i8* %arrayidx12, align 1, !dbg !9520
  %conv13 = zext i8 %16 to i32, !dbg !9520
  br label %cond.end, !dbg !9520

cond.false:                                       ; preds = %if.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !9522
  %arrayidx14 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !9522
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !9522
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !9522
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !9522
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !9522
  %call16 = call i32 @unicode_byte_type(i8 signext %18, i8 signext %20), !dbg !9522
  br label %cond.end, !dbg !9522

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv13, %cond.true ], [ %call16, %cond.false ], !dbg !9524
  switch i32 %cond, label %sw.default [
    i32 25, label %sw.bb
  ], !dbg !9526

sw.bb:                                            ; preds = %cond.end
  br label %sw.epilog, !dbg !9527

sw.default:                                       ; preds = %cond.end
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !9529
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9530
  store i8* %21, i8** %22, align 8, !dbg !9531
  store i32 0, i32* %retval, align 4, !dbg !9532
  br label %return, !dbg !9532

sw.epilog:                                        ; preds = %sw.bb
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !9533
  %add.ptr17 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !9533
  store i8* %add.ptr17, i8** %ptr.addr, align 8, !dbg !9533
  br label %for.cond, !dbg !9535

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %24 = load i8*, i8** %end.addr, align 8, !dbg !9536
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !9536
  %sub.ptr.lhs.cast18 = ptrtoint i8* %24 to i64, !dbg !9536
  %sub.ptr.rhs.cast19 = ptrtoint i8* %25 to i64, !dbg !9536
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !9536
  %cmp21 = icmp sge i64 %sub.ptr.sub20, 2, !dbg !9536
  br i1 %cmp21, label %for.body, label %for.end, !dbg !9539

for.body:                                         ; preds = %for.cond
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !9540
  %arrayidx23 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !9540
  %27 = load i8, i8* %arrayidx23, align 1, !dbg !9540
  %conv24 = sext i8 %27 to i32, !dbg !9540
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !9540
  br i1 %cmp25, label %cond.true27, label %cond.false32, !dbg !9540

cond.true27:                                      ; preds = %for.body
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !9542
  %29 = load i8, i8* %28, align 1, !dbg !9542
  %idxprom28 = zext i8 %29 to i64, !dbg !9542
  %30 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9542
  %31 = bitcast %struct.encoding* %30 to %struct.normal_encoding*, !dbg !9542
  %type29 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %31, i32 0, i32 1, !dbg !9542
  %arrayidx30 = getelementptr inbounds [256 x i8], [256 x i8]* %type29, i64 0, i64 %idxprom28, !dbg !9542
  %32 = load i8, i8* %arrayidx30, align 1, !dbg !9542
  %conv31 = zext i8 %32 to i32, !dbg !9542
  br label %cond.end36, !dbg !9542

cond.false32:                                     ; preds = %for.body
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !9544
  %arrayidx33 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !9544
  %34 = load i8, i8* %arrayidx33, align 1, !dbg !9544
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !9544
  %arrayidx34 = getelementptr inbounds i8, i8* %35, i64 0, !dbg !9544
  %36 = load i8, i8* %arrayidx34, align 1, !dbg !9544
  %call35 = call i32 @unicode_byte_type(i8 signext %34, i8 signext %36), !dbg !9544
  br label %cond.end36, !dbg !9544

cond.end36:                                       ; preds = %cond.false32, %cond.true27
  %cond37 = phi i32 [ %conv31, %cond.true27 ], [ %call35, %cond.false32 ], !dbg !9546
  switch i32 %cond37, label %sw.default41 [
    i32 25, label %sw.bb38
    i32 18, label %sw.bb39
  ], !dbg !9548

sw.bb38:                                          ; preds = %cond.end36
  br label %sw.epilog42, !dbg !9549

sw.bb39:                                          ; preds = %cond.end36
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !9551
  %add.ptr40 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !9552
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9553
  store i8* %add.ptr40, i8** %38, align 8, !dbg !9554
  store i32 10, i32* %retval, align 4, !dbg !9555
  br label %return, !dbg !9555

sw.default41:                                     ; preds = %cond.end36
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !9556
  %40 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9557
  store i8* %39, i8** %40, align 8, !dbg !9558
  store i32 0, i32* %retval, align 4, !dbg !9559
  br label %return, !dbg !9559

sw.epilog42:                                      ; preds = %sw.bb38
  br label %for.inc, !dbg !9560

for.inc:                                          ; preds = %sw.epilog42
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !9561
  %add.ptr43 = getelementptr inbounds i8, i8* %41, i64 2, !dbg !9561
  store i8* %add.ptr43, i8** %ptr.addr, align 8, !dbg !9561
  br label %for.cond, !dbg !9563

for.end:                                          ; preds = %for.cond
  br label %if.end44, !dbg !9564

if.end44:                                         ; preds = %for.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !9565
  br label %return, !dbg !9565

return:                                           ; preds = %if.end44, %sw.default41, %sw.bb39, %sw.default, %if.then7
  %42 = load i32, i32* %retval, align 4, !dbg !9566
  ret i32 %42, !dbg !9566
}

; Function Attrs: nounwind uwtable
define internal i32 @little2_scanHexCharRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !315 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !9567, metadata !444), !dbg !9568
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9569, metadata !444), !dbg !9570
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !9571, metadata !444), !dbg !9572
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !9573, metadata !444), !dbg !9574
  %0 = load i8*, i8** %end.addr, align 8, !dbg !9575
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !9575
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !9575
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9575
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9575
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !9575
  br i1 %cmp, label %if.then, label %if.end, !dbg !9577

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !9578
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 1, !dbg !9578
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9578
  %conv = sext i8 %3 to i32, !dbg !9578
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9578
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9578

cond.true:                                        ; preds = %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !9580
  %5 = load i8, i8* %4, align 1, !dbg !9580
  %idxprom = zext i8 %5 to i64, !dbg !9580
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9580
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !9580
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !9580
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !9580
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !9580
  %conv4 = zext i8 %8 to i32, !dbg !9580
  br label %cond.end, !dbg !9580

cond.false:                                       ; preds = %if.then
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !9582
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !9582
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !9582
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !9582
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !9582
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !9582
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !9582
  br label %cond.end, !dbg !9582

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !9584
  switch i32 %cond, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
  ], !dbg !9586

sw.bb:                                            ; preds = %cond.end, %cond.end
  br label %sw.epilog, !dbg !9587

sw.default:                                       ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !9589
  %14 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9590
  store i8* %13, i8** %14, align 8, !dbg !9591
  store i32 0, i32* %retval, align 4, !dbg !9592
  br label %return, !dbg !9592

sw.epilog:                                        ; preds = %sw.bb
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !9593
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 2, !dbg !9593
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !9593
  br label %for.cond, !dbg !9595

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %16 = load i8*, i8** %end.addr, align 8, !dbg !9596
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !9596
  %sub.ptr.lhs.cast7 = ptrtoint i8* %16 to i64, !dbg !9596
  %sub.ptr.rhs.cast8 = ptrtoint i8* %17 to i64, !dbg !9596
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast8, !dbg !9596
  %cmp10 = icmp sge i64 %sub.ptr.sub9, 2, !dbg !9596
  br i1 %cmp10, label %for.body, label %for.end, !dbg !9599

for.body:                                         ; preds = %for.cond
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !9600
  %arrayidx12 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !9600
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !9600
  %conv13 = sext i8 %19 to i32, !dbg !9600
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !9600
  br i1 %cmp14, label %cond.true16, label %cond.false21, !dbg !9600

cond.true16:                                      ; preds = %for.body
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !9602
  %21 = load i8, i8* %20, align 1, !dbg !9602
  %idxprom17 = zext i8 %21 to i64, !dbg !9602
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9602
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !9602
  %type18 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 1, !dbg !9602
  %arrayidx19 = getelementptr inbounds [256 x i8], [256 x i8]* %type18, i64 0, i64 %idxprom17, !dbg !9602
  %24 = load i8, i8* %arrayidx19, align 1, !dbg !9602
  %conv20 = zext i8 %24 to i32, !dbg !9602
  br label %cond.end25, !dbg !9602

cond.false21:                                     ; preds = %for.body
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !9604
  %arrayidx22 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !9604
  %26 = load i8, i8* %arrayidx22, align 1, !dbg !9604
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !9604
  %arrayidx23 = getelementptr inbounds i8, i8* %27, i64 0, !dbg !9604
  %28 = load i8, i8* %arrayidx23, align 1, !dbg !9604
  %call24 = call i32 @unicode_byte_type(i8 signext %26, i8 signext %28), !dbg !9604
  br label %cond.end25, !dbg !9604

cond.end25:                                       ; preds = %cond.false21, %cond.true16
  %cond26 = phi i32 [ %conv20, %cond.true16 ], [ %call24, %cond.false21 ], !dbg !9606
  switch i32 %cond26, label %sw.default30 [
    i32 25, label %sw.bb27
    i32 24, label %sw.bb27
    i32 18, label %sw.bb28
  ], !dbg !9608

sw.bb27:                                          ; preds = %cond.end25, %cond.end25
  br label %sw.epilog31, !dbg !9609

sw.bb28:                                          ; preds = %cond.end25
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !9611
  %add.ptr29 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !9612
  %30 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9613
  store i8* %add.ptr29, i8** %30, align 8, !dbg !9614
  store i32 10, i32* %retval, align 4, !dbg !9615
  br label %return, !dbg !9615

sw.default30:                                     ; preds = %cond.end25
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !9616
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9617
  store i8* %31, i8** %32, align 8, !dbg !9618
  store i32 0, i32* %retval, align 4, !dbg !9619
  br label %return, !dbg !9619

sw.epilog31:                                      ; preds = %sw.bb27
  br label %for.inc, !dbg !9620

for.inc:                                          ; preds = %sw.epilog31
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !9621
  %add.ptr32 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !9621
  store i8* %add.ptr32, i8** %ptr.addr, align 8, !dbg !9621
  br label %for.cond, !dbg !9623

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !9624

if.end:                                           ; preds = %for.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !9625
  br label %return, !dbg !9625

return:                                           ; preds = %if.end, %sw.default30, %sw.bb28, %sw.default
  %34 = load i32, i32* %retval, align 4, !dbg !9626
  ret i32 %34, !dbg !9626
}

; Function Attrs: nounwind uwtable
define internal i32 @streqci(i8* %s1, i8* %s2) #0 !dbg !332 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %c1 = alloca i8, align 1
  %c2 = alloca i8, align 1
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !9627, metadata !444), !dbg !9628
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !9629, metadata !444), !dbg !9630
  br label %for.cond, !dbg !9631

for.cond:                                         ; preds = %if.end27, %entry
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !9632, metadata !444), !dbg !9636
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !9637
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i32 1, !dbg !9637
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !9637
  %1 = load i8, i8* %0, align 1, !dbg !9638
  store i8 %1, i8* %c1, align 1, !dbg !9636
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !9639, metadata !444), !dbg !9640
  %2 = load i8*, i8** %s2.addr, align 8, !dbg !9641
  %incdec.ptr1 = getelementptr inbounds i8, i8* %2, i32 1, !dbg !9641
  store i8* %incdec.ptr1, i8** %s2.addr, align 8, !dbg !9641
  %3 = load i8, i8* %2, align 1, !dbg !9642
  store i8 %3, i8* %c2, align 1, !dbg !9640
  %4 = load i8, i8* %c1, align 1, !dbg !9643
  %conv = sext i8 %4 to i32, !dbg !9643
  %cmp = icmp sle i32 97, %conv, !dbg !9645
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9646

land.lhs.true:                                    ; preds = %for.cond
  %5 = load i8, i8* %c1, align 1, !dbg !9647
  %conv3 = sext i8 %5 to i32, !dbg !9647
  %cmp4 = icmp sle i32 %conv3, 122, !dbg !9649
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9650

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8, i8* %c1, align 1, !dbg !9651
  %conv6 = sext i8 %6 to i32, !dbg !9651
  %add = add nsw i32 %conv6, -32, !dbg !9651
  %conv7 = trunc i32 %add to i8, !dbg !9651
  store i8 %conv7, i8* %c1, align 1, !dbg !9651
  br label %if.end, !dbg !9652

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.cond
  %7 = load i8, i8* %c2, align 1, !dbg !9653
  %conv8 = sext i8 %7 to i32, !dbg !9653
  %cmp9 = icmp sle i32 97, %conv8, !dbg !9655
  br i1 %cmp9, label %land.lhs.true11, label %if.end19, !dbg !9656

land.lhs.true11:                                  ; preds = %if.end
  %8 = load i8, i8* %c2, align 1, !dbg !9657
  %conv12 = sext i8 %8 to i32, !dbg !9657
  %cmp13 = icmp sle i32 %conv12, 122, !dbg !9659
  br i1 %cmp13, label %if.then15, label %if.end19, !dbg !9660

if.then15:                                        ; preds = %land.lhs.true11
  %9 = load i8, i8* %c2, align 1, !dbg !9661
  %conv16 = sext i8 %9 to i32, !dbg !9661
  %add17 = add nsw i32 %conv16, -32, !dbg !9661
  %conv18 = trunc i32 %add17 to i8, !dbg !9661
  store i8 %conv18, i8* %c2, align 1, !dbg !9661
  br label %if.end19, !dbg !9662

if.end19:                                         ; preds = %if.then15, %land.lhs.true11, %if.end
  %10 = load i8, i8* %c1, align 1, !dbg !9663
  %conv20 = sext i8 %10 to i32, !dbg !9663
  %11 = load i8, i8* %c2, align 1, !dbg !9665
  %conv21 = sext i8 %11 to i32, !dbg !9665
  %cmp22 = icmp ne i32 %conv20, %conv21, !dbg !9666
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9667

if.then24:                                        ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !9668
  br label %return, !dbg !9668

if.end25:                                         ; preds = %if.end19
  %12 = load i8, i8* %c1, align 1, !dbg !9669
  %tobool = icmp ne i8 %12, 0, !dbg !9669
  br i1 %tobool, label %if.end27, label %if.then26, !dbg !9671

if.then26:                                        ; preds = %if.end25
  br label %for.end, !dbg !9672

if.end27:                                         ; preds = %if.end25
  br label %for.cond, !dbg !9673

for.end:                                          ; preds = %if.then26
  store i32 1, i32* %retval, align 4, !dbg !9675
  br label %return, !dbg !9675

return:                                           ; preds = %for.end, %if.then24
  %13 = load i32, i32* %retval, align 4, !dbg !9676
  ret i32 %13, !dbg !9676
}

; Function Attrs: nounwind uwtable
define internal i32 @initScan(%struct.encoding** %encodingTable, %struct.INIT_ENCODING* %enc, i32 %state, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !336 {
entry:
  %retval = alloca i32, align 4
  %encodingTable.addr = alloca %struct.encoding**, align 8
  %enc.addr = alloca %struct.INIT_ENCODING*, align 8
  %state.addr = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %encPtr = alloca %struct.encoding**, align 8
  %e = alloca i32, align 4
  store %struct.encoding** %encodingTable, %struct.encoding*** %encodingTable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding*** %encodingTable.addr, metadata !9677, metadata !444), !dbg !9678
  store %struct.INIT_ENCODING* %enc, %struct.INIT_ENCODING** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.INIT_ENCODING** %enc.addr, metadata !9679, metadata !444), !dbg !9680
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9681, metadata !444), !dbg !9682
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9683, metadata !444), !dbg !9684
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !9685, metadata !444), !dbg !9686
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !9687, metadata !444), !dbg !9688
  call void @llvm.dbg.declare(metadata %struct.encoding*** %encPtr, metadata !9689, metadata !444), !dbg !9690
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9691
  %1 = load i8*, i8** %end.addr, align 8, !dbg !9693
  %cmp = icmp uge i8* %0, %1, !dbg !9694
  br i1 %cmp, label %if.then, label %if.end, !dbg !9695

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !9696
  br label %return, !dbg !9696

if.end:                                           ; preds = %entry
  %2 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9697
  %encPtr1 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %2, i32 0, i32 1, !dbg !9698
  %3 = load %struct.encoding**, %struct.encoding*** %encPtr1, align 8, !dbg !9698
  store %struct.encoding** %3, %struct.encoding*** %encPtr, align 8, !dbg !9699
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !9700
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !9702
  %5 = load i8*, i8** %end.addr, align 8, !dbg !9703
  %cmp2 = icmp eq i8* %add.ptr, %5, !dbg !9704
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9705

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %state.addr, align 4, !dbg !9706
  %cmp4 = icmp ne i32 %6, 1, !dbg !9709
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9710

if.then5:                                         ; preds = %if.then3
  store i32 -1, i32* %retval, align 4, !dbg !9711
  br label %return, !dbg !9711

if.end6:                                          ; preds = %if.then3
  %7 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9712
  %initEnc = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %7, i32 0, i32 0, !dbg !9712
  %isUtf16 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc, i32 0, i32 15, !dbg !9712
  %8 = load i8, i8* %isUtf16, align 1, !dbg !9712
  %conv = sext i8 %8 to i32, !dbg !9712
  switch i32 %conv, label %sw.epilog [
    i32 3, label %sw.bb
    i32 5, label %sw.bb
    i32 4, label %sw.bb
  ], !dbg !9713

sw.bb:                                            ; preds = %if.end6, %if.end6, %if.end6
  store i32 -1, i32* %retval, align 4, !dbg !9714
  br label %return, !dbg !9714

sw.epilog:                                        ; preds = %if.end6
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !9716
  %10 = load i8, i8* %9, align 1, !dbg !9717
  %conv7 = zext i8 %10 to i32, !dbg !9718
  switch i32 %conv7, label %sw.epilog19 [
    i32 254, label %sw.bb8
    i32 255, label %sw.bb8
    i32 239, label %sw.bb8
    i32 0, label %sw.bb18
    i32 60, label %sw.bb18
  ], !dbg !9719

sw.bb8:                                           ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  %11 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9720
  %initEnc9 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %11, i32 0, i32 0, !dbg !9720
  %isUtf1610 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc9, i32 0, i32 15, !dbg !9720
  %12 = load i8, i8* %isUtf1610, align 1, !dbg !9720
  %conv11 = sext i8 %12 to i32, !dbg !9720
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !9723
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !9724

land.lhs.true:                                    ; preds = %sw.bb8
  %13 = load i32, i32* %state.addr, align 4, !dbg !9725
  %cmp14 = icmp eq i32 %13, 1, !dbg !9727
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !9728

if.then16:                                        ; preds = %land.lhs.true
  br label %sw.epilog19, !dbg !9730

if.end17:                                         ; preds = %land.lhs.true, %sw.bb8
  br label %sw.bb18, !dbg !9731

sw.bb18:                                          ; preds = %sw.epilog, %sw.epilog, %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !9733
  br label %return, !dbg !9733

sw.epilog19:                                      ; preds = %sw.epilog, %if.then16
  br label %if.end139, !dbg !9734

if.else:                                          ; preds = %if.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !9735
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0, !dbg !9735
  %15 = load i8, i8* %arrayidx, align 1, !dbg !9735
  %conv20 = zext i8 %15 to i32, !dbg !9737
  %shl = shl i32 %conv20, 8, !dbg !9738
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !9739
  %arrayidx21 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !9739
  %17 = load i8, i8* %arrayidx21, align 1, !dbg !9739
  %conv22 = zext i8 %17 to i32, !dbg !9740
  %or = or i32 %shl, %conv22, !dbg !9741
  switch i32 %or, label %sw.default [
    i32 65279, label %sw.bb23
    i32 15360, label %sw.bb36
    i32 65534, label %sw.bb54
    i32 61371, label %sw.bb67
  ], !dbg !9742

sw.bb23:                                          ; preds = %if.else
  %18 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9743
  %initEnc24 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %18, i32 0, i32 0, !dbg !9743
  %isUtf1625 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc24, i32 0, i32 15, !dbg !9743
  %19 = load i8, i8* %isUtf1625, align 1, !dbg !9743
  %conv26 = sext i8 %19 to i32, !dbg !9743
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !9746
  br i1 %cmp27, label %land.lhs.true29, label %if.end33, !dbg !9747

land.lhs.true29:                                  ; preds = %sw.bb23
  %20 = load i32, i32* %state.addr, align 4, !dbg !9748
  %cmp30 = icmp eq i32 %20, 1, !dbg !9750
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !9751

if.then32:                                        ; preds = %land.lhs.true29
  br label %sw.epilog138, !dbg !9753

if.end33:                                         ; preds = %land.lhs.true29, %sw.bb23
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !9754
  %add.ptr34 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !9755
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9756
  store i8* %add.ptr34, i8** %22, align 8, !dbg !9757
  %23 = load %struct.encoding**, %struct.encoding*** %encodingTable.addr, align 8, !dbg !9758
  %arrayidx35 = getelementptr inbounds %struct.encoding*, %struct.encoding** %23, i64 4, !dbg !9758
  %24 = load %struct.encoding*, %struct.encoding** %arrayidx35, align 8, !dbg !9758
  %25 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9759
  store %struct.encoding* %24, %struct.encoding** %25, align 8, !dbg !9760
  store i32 14, i32* %retval, align 4, !dbg !9761
  br label %return, !dbg !9761

sw.bb36:                                          ; preds = %if.else
  %26 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9762
  %initEnc37 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %26, i32 0, i32 0, !dbg !9762
  %isUtf1638 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc37, i32 0, i32 15, !dbg !9762
  %27 = load i8, i8* %isUtf1638, align 1, !dbg !9762
  %conv39 = sext i8 %27 to i32, !dbg !9762
  %cmp40 = icmp eq i32 %conv39, 4, !dbg !9764
  br i1 %cmp40, label %land.lhs.true47, label %lor.lhs.false, !dbg !9765

lor.lhs.false:                                    ; preds = %sw.bb36
  %28 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9766
  %initEnc42 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %28, i32 0, i32 0, !dbg !9766
  %isUtf1643 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc42, i32 0, i32 15, !dbg !9766
  %29 = load i8, i8* %isUtf1643, align 1, !dbg !9766
  %conv44 = sext i8 %29 to i32, !dbg !9766
  %cmp45 = icmp eq i32 %conv44, 3, !dbg !9768
  br i1 %cmp45, label %land.lhs.true47, label %if.end51, !dbg !9769

land.lhs.true47:                                  ; preds = %lor.lhs.false, %sw.bb36
  %30 = load i32, i32* %state.addr, align 4, !dbg !9770
  %cmp48 = icmp eq i32 %30, 1, !dbg !9771
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !9772

if.then50:                                        ; preds = %land.lhs.true47
  br label %sw.epilog138, !dbg !9773

if.end51:                                         ; preds = %land.lhs.true47, %lor.lhs.false
  %31 = load %struct.encoding**, %struct.encoding*** %encodingTable.addr, align 8, !dbg !9774
  %arrayidx52 = getelementptr inbounds %struct.encoding*, %struct.encoding** %31, i64 5, !dbg !9774
  %32 = load %struct.encoding*, %struct.encoding** %arrayidx52, align 8, !dbg !9774
  %33 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9775
  store %struct.encoding* %32, %struct.encoding** %33, align 8, !dbg !9776
  %34 = load i32, i32* %state.addr, align 4, !dbg !9777
  %idxprom = sext i32 %34 to i64, !dbg !9777
  %35 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9777
  %36 = load %struct.encoding*, %struct.encoding** %35, align 8, !dbg !9777
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %36, i32 0, i32 0, !dbg !9777
  %arrayidx53 = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 %idxprom, !dbg !9777
  %37 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx53, align 8, !dbg !9777
  %38 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9777
  %39 = load %struct.encoding*, %struct.encoding** %38, align 8, !dbg !9777
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !9777
  %41 = load i8*, i8** %end.addr, align 8, !dbg !9777
  %42 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9777
  %call = call i32 %37(%struct.encoding* %39, i8* %40, i8* %41, i8** %42), !dbg !9777
  store i32 %call, i32* %retval, align 4, !dbg !9778
  br label %return, !dbg !9778

sw.bb54:                                          ; preds = %if.else
  %43 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9779
  %initEnc55 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %43, i32 0, i32 0, !dbg !9779
  %isUtf1656 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc55, i32 0, i32 15, !dbg !9779
  %44 = load i8, i8* %isUtf1656, align 1, !dbg !9779
  %conv57 = sext i8 %44 to i32, !dbg !9779
  %cmp58 = icmp eq i32 %conv57, 0, !dbg !9781
  br i1 %cmp58, label %land.lhs.true60, label %if.end64, !dbg !9782

land.lhs.true60:                                  ; preds = %sw.bb54
  %45 = load i32, i32* %state.addr, align 4, !dbg !9783
  %cmp61 = icmp eq i32 %45, 1, !dbg !9785
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !9786

if.then63:                                        ; preds = %land.lhs.true60
  br label %sw.epilog138, !dbg !9787

if.end64:                                         ; preds = %land.lhs.true60, %sw.bb54
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !9788
  %add.ptr65 = getelementptr inbounds i8, i8* %46, i64 2, !dbg !9789
  %47 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9790
  store i8* %add.ptr65, i8** %47, align 8, !dbg !9791
  %48 = load %struct.encoding**, %struct.encoding*** %encodingTable.addr, align 8, !dbg !9792
  %arrayidx66 = getelementptr inbounds %struct.encoding*, %struct.encoding** %48, i64 5, !dbg !9792
  %49 = load %struct.encoding*, %struct.encoding** %arrayidx66, align 8, !dbg !9792
  %50 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9793
  store %struct.encoding* %49, %struct.encoding** %50, align 8, !dbg !9794
  store i32 14, i32* %retval, align 4, !dbg !9795
  br label %return, !dbg !9795

sw.bb67:                                          ; preds = %if.else
  %51 = load i32, i32* %state.addr, align 4, !dbg !9796
  %cmp68 = icmp eq i32 %51, 1, !dbg !9798
  br i1 %cmp68, label %if.then70, label %if.end87, !dbg !9799

if.then70:                                        ; preds = %sw.bb67
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9800, metadata !444), !dbg !9802
  %52 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9803
  %initEnc71 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %52, i32 0, i32 0, !dbg !9803
  %isUtf1672 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc71, i32 0, i32 15, !dbg !9803
  %53 = load i8, i8* %isUtf1672, align 1, !dbg !9803
  %conv73 = sext i8 %53 to i32, !dbg !9803
  store i32 %conv73, i32* %e, align 4, !dbg !9802
  %54 = load i32, i32* %e, align 4, !dbg !9804
  %cmp74 = icmp eq i32 %54, 0, !dbg !9806
  br i1 %cmp74, label %if.then85, label %lor.lhs.false76, !dbg !9807

lor.lhs.false76:                                  ; preds = %if.then70
  %55 = load i32, i32* %e, align 4, !dbg !9808
  %cmp77 = icmp eq i32 %55, 4, !dbg !9810
  br i1 %cmp77, label %if.then85, label %lor.lhs.false79, !dbg !9811

lor.lhs.false79:                                  ; preds = %lor.lhs.false76
  %56 = load i32, i32* %e, align 4, !dbg !9812
  %cmp80 = icmp eq i32 %56, 5, !dbg !9813
  br i1 %cmp80, label %if.then85, label %lor.lhs.false82, !dbg !9814

lor.lhs.false82:                                  ; preds = %lor.lhs.false79
  %57 = load i32, i32* %e, align 4, !dbg !9815
  %cmp83 = icmp eq i32 %57, 3, !dbg !9817
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !9818

if.then85:                                        ; preds = %lor.lhs.false82, %lor.lhs.false79, %lor.lhs.false76, %if.then70
  br label %sw.epilog138, !dbg !9820

if.end86:                                         ; preds = %lor.lhs.false82
  br label %if.end87, !dbg !9821

if.end87:                                         ; preds = %if.end86, %sw.bb67
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !9822
  %add.ptr88 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !9824
  %59 = load i8*, i8** %end.addr, align 8, !dbg !9825
  %cmp89 = icmp eq i8* %add.ptr88, %59, !dbg !9826
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !9827

if.then91:                                        ; preds = %if.end87
  store i32 -1, i32* %retval, align 4, !dbg !9828
  br label %return, !dbg !9828

if.end92:                                         ; preds = %if.end87
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !9829
  %arrayidx93 = getelementptr inbounds i8, i8* %60, i64 2, !dbg !9829
  %61 = load i8, i8* %arrayidx93, align 1, !dbg !9829
  %conv94 = zext i8 %61 to i32, !dbg !9831
  %cmp95 = icmp eq i32 %conv94, 191, !dbg !9832
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !9833

if.then97:                                        ; preds = %if.end92
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !9834
  %add.ptr98 = getelementptr inbounds i8, i8* %62, i64 3, !dbg !9836
  %63 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9837
  store i8* %add.ptr98, i8** %63, align 8, !dbg !9838
  %64 = load %struct.encoding**, %struct.encoding*** %encodingTable.addr, align 8, !dbg !9839
  %arrayidx99 = getelementptr inbounds %struct.encoding*, %struct.encoding** %64, i64 2, !dbg !9839
  %65 = load %struct.encoding*, %struct.encoding** %arrayidx99, align 8, !dbg !9839
  %66 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9840
  store %struct.encoding* %65, %struct.encoding** %66, align 8, !dbg !9841
  store i32 14, i32* %retval, align 4, !dbg !9842
  br label %return, !dbg !9842

if.end100:                                        ; preds = %if.end92
  br label %sw.epilog138, !dbg !9843

sw.default:                                       ; preds = %if.else
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !9844
  %arrayidx101 = getelementptr inbounds i8, i8* %67, i64 0, !dbg !9844
  %68 = load i8, i8* %arrayidx101, align 1, !dbg !9844
  %conv102 = sext i8 %68 to i32, !dbg !9844
  %cmp103 = icmp eq i32 %conv102, 0, !dbg !9846
  br i1 %cmp103, label %if.then105, label %if.else121, !dbg !9847

if.then105:                                       ; preds = %sw.default
  %69 = load i32, i32* %state.addr, align 4, !dbg !9848
  %cmp106 = icmp eq i32 %69, 1, !dbg !9851
  br i1 %cmp106, label %land.lhs.true108, label %if.end115, !dbg !9852

land.lhs.true108:                                 ; preds = %if.then105
  %70 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9853
  %initEnc109 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %70, i32 0, i32 0, !dbg !9853
  %isUtf16110 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc109, i32 0, i32 15, !dbg !9853
  %71 = load i8, i8* %isUtf16110, align 1, !dbg !9853
  %conv111 = sext i8 %71 to i32, !dbg !9853
  %cmp112 = icmp eq i32 %conv111, 5, !dbg !9855
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !9856

if.then114:                                       ; preds = %land.lhs.true108
  br label %sw.epilog138, !dbg !9857

if.end115:                                        ; preds = %land.lhs.true108, %if.then105
  %72 = load %struct.encoding**, %struct.encoding*** %encodingTable.addr, align 8, !dbg !9858
  %arrayidx116 = getelementptr inbounds %struct.encoding*, %struct.encoding** %72, i64 4, !dbg !9858
  %73 = load %struct.encoding*, %struct.encoding** %arrayidx116, align 8, !dbg !9858
  %74 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9859
  store %struct.encoding* %73, %struct.encoding** %74, align 8, !dbg !9860
  %75 = load i32, i32* %state.addr, align 4, !dbg !9861
  %idxprom117 = sext i32 %75 to i64, !dbg !9861
  %76 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9861
  %77 = load %struct.encoding*, %struct.encoding** %76, align 8, !dbg !9861
  %scanners118 = getelementptr inbounds %struct.encoding, %struct.encoding* %77, i32 0, i32 0, !dbg !9861
  %arrayidx119 = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners118, i64 0, i64 %idxprom117, !dbg !9861
  %78 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx119, align 8, !dbg !9861
  %79 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9861
  %80 = load %struct.encoding*, %struct.encoding** %79, align 8, !dbg !9861
  %81 = load i8*, i8** %ptr.addr, align 8, !dbg !9861
  %82 = load i8*, i8** %end.addr, align 8, !dbg !9861
  %83 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9861
  %call120 = call i32 %78(%struct.encoding* %80, i8* %81, i8* %82, i8** %83), !dbg !9861
  store i32 %call120, i32* %retval, align 4, !dbg !9862
  br label %return, !dbg !9862

if.else121:                                       ; preds = %sw.default
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !9863
  %arrayidx122 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !9863
  %85 = load i8, i8* %arrayidx122, align 1, !dbg !9863
  %conv123 = sext i8 %85 to i32, !dbg !9863
  %cmp124 = icmp eq i32 %conv123, 0, !dbg !9865
  br i1 %cmp124, label %if.then126, label %if.end136, !dbg !9866

if.then126:                                       ; preds = %if.else121
  %86 = load i32, i32* %state.addr, align 4, !dbg !9867
  %cmp127 = icmp eq i32 %86, 1, !dbg !9870
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !9871

if.then129:                                       ; preds = %if.then126
  br label %sw.epilog138, !dbg !9872

if.end130:                                        ; preds = %if.then126
  %87 = load %struct.encoding**, %struct.encoding*** %encodingTable.addr, align 8, !dbg !9873
  %arrayidx131 = getelementptr inbounds %struct.encoding*, %struct.encoding** %87, i64 5, !dbg !9873
  %88 = load %struct.encoding*, %struct.encoding** %arrayidx131, align 8, !dbg !9873
  %89 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9874
  store %struct.encoding* %88, %struct.encoding** %89, align 8, !dbg !9875
  %90 = load i32, i32* %state.addr, align 4, !dbg !9876
  %idxprom132 = sext i32 %90 to i64, !dbg !9876
  %91 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9876
  %92 = load %struct.encoding*, %struct.encoding** %91, align 8, !dbg !9876
  %scanners133 = getelementptr inbounds %struct.encoding, %struct.encoding* %92, i32 0, i32 0, !dbg !9876
  %arrayidx134 = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners133, i64 0, i64 %idxprom132, !dbg !9876
  %93 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx134, align 8, !dbg !9876
  %94 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9876
  %95 = load %struct.encoding*, %struct.encoding** %94, align 8, !dbg !9876
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !9876
  %97 = load i8*, i8** %end.addr, align 8, !dbg !9876
  %98 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9876
  %call135 = call i32 %93(%struct.encoding* %95, i8* %96, i8* %97, i8** %98), !dbg !9876
  store i32 %call135, i32* %retval, align 4, !dbg !9877
  br label %return, !dbg !9877

if.end136:                                        ; preds = %if.else121
  br label %if.end137

if.end137:                                        ; preds = %if.end136
  br label %sw.epilog138, !dbg !9878

sw.epilog138:                                     ; preds = %if.end137, %if.then129, %if.then114, %if.end100, %if.then85, %if.then63, %if.then50, %if.then32
  br label %if.end139

if.end139:                                        ; preds = %sw.epilog138, %sw.epilog19
  %99 = load %struct.INIT_ENCODING*, %struct.INIT_ENCODING** %enc.addr, align 8, !dbg !9879
  %initEnc140 = getelementptr inbounds %struct.INIT_ENCODING, %struct.INIT_ENCODING* %99, i32 0, i32 0, !dbg !9879
  %isUtf16141 = getelementptr inbounds %struct.encoding, %struct.encoding* %initEnc140, i32 0, i32 15, !dbg !9879
  %100 = load i8, i8* %isUtf16141, align 1, !dbg !9879
  %conv142 = sext i8 %100 to i32, !dbg !9879
  %idxprom143 = sext i32 %conv142 to i64, !dbg !9880
  %101 = load %struct.encoding**, %struct.encoding*** %encodingTable.addr, align 8, !dbg !9880
  %arrayidx144 = getelementptr inbounds %struct.encoding*, %struct.encoding** %101, i64 %idxprom143, !dbg !9880
  %102 = load %struct.encoding*, %struct.encoding** %arrayidx144, align 8, !dbg !9880
  %103 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9881
  store %struct.encoding* %102, %struct.encoding** %103, align 8, !dbg !9882
  %104 = load i32, i32* %state.addr, align 4, !dbg !9883
  %idxprom145 = sext i32 %104 to i64, !dbg !9883
  %105 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9883
  %106 = load %struct.encoding*, %struct.encoding** %105, align 8, !dbg !9883
  %scanners146 = getelementptr inbounds %struct.encoding, %struct.encoding* %106, i32 0, i32 0, !dbg !9883
  %arrayidx147 = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners146, i64 0, i64 %idxprom145, !dbg !9883
  %107 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx147, align 8, !dbg !9883
  %108 = load %struct.encoding**, %struct.encoding*** %encPtr, align 8, !dbg !9883
  %109 = load %struct.encoding*, %struct.encoding** %108, align 8, !dbg !9883
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !9883
  %111 = load i8*, i8** %end.addr, align 8, !dbg !9883
  %112 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9883
  %call148 = call i32 %107(%struct.encoding* %109, i8* %110, i8* %111, i8** %112), !dbg !9883
  store i32 %call148, i32* %retval, align 4, !dbg !9884
  br label %return, !dbg !9884

return:                                           ; preds = %if.end139, %if.end130, %if.end115, %if.then97, %if.then91, %if.end64, %if.end51, %if.end33, %sw.bb18, %sw.bb, %if.then5, %if.then
  %113 = load i32, i32* %retval, align 4, !dbg !9885
  ret i32 %113, !dbg !9885
}

; Function Attrs: nounwind uwtable
define internal i32 @ascii_toUtf8(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i8** %toP, i8* %toLim) #0 !dbg !341 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i8**, align 8
  %toLim.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !9886, metadata !444), !dbg !9887
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !9888, metadata !444), !dbg !9889
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !9890, metadata !444), !dbg !9891
  store i8** %toP, i8*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %toP.addr, metadata !9892, metadata !444), !dbg !9893
  store i8* %toLim, i8** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toLim.addr, metadata !9894, metadata !444), !dbg !9895
  br label %while.cond, !dbg !9896

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8**, i8*** %fromP.addr, align 8, !dbg !9897
  %1 = load i8*, i8** %0, align 8, !dbg !9899
  %2 = load i8*, i8** %fromLim.addr, align 8, !dbg !9900
  %cmp = icmp ult i8* %1, %2, !dbg !9901
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9902

land.rhs:                                         ; preds = %while.cond
  %3 = load i8**, i8*** %toP.addr, align 8, !dbg !9903
  %4 = load i8*, i8** %3, align 8, !dbg !9905
  %5 = load i8*, i8** %toLim.addr, align 8, !dbg !9906
  %cmp1 = icmp ult i8* %4, %5, !dbg !9907
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !9908

while.body:                                       ; preds = %land.end
  %7 = load i8**, i8*** %fromP.addr, align 8, !dbg !9910
  %8 = load i8*, i8** %7, align 8, !dbg !9911
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9911
  store i8* %incdec.ptr, i8** %7, align 8, !dbg !9911
  %9 = load i8, i8* %8, align 1, !dbg !9912
  %10 = load i8**, i8*** %toP.addr, align 8, !dbg !9913
  %11 = load i8*, i8** %10, align 8, !dbg !9914
  %incdec.ptr2 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9914
  store i8* %incdec.ptr2, i8** %10, align 8, !dbg !9914
  store i8 %9, i8* %11, align 1, !dbg !9915
  br label %while.cond, !dbg !9916

while.end:                                        ; preds = %land.end
  %12 = load i8**, i8*** %toP.addr, align 8, !dbg !9918
  %13 = load i8*, i8** %12, align 8, !dbg !9920
  %14 = load i8*, i8** %toLim.addr, align 8, !dbg !9921
  %cmp3 = icmp eq i8* %13, %14, !dbg !9922
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !9923

land.lhs.true:                                    ; preds = %while.end
  %15 = load i8**, i8*** %fromP.addr, align 8, !dbg !9924
  %16 = load i8*, i8** %15, align 8, !dbg !9926
  %17 = load i8*, i8** %fromLim.addr, align 8, !dbg !9927
  %cmp4 = icmp ult i8* %16, %17, !dbg !9928
  br i1 %cmp4, label %if.then, label %if.else, !dbg !9929

if.then:                                          ; preds = %land.lhs.true
  store i32 2, i32* %retval, align 4, !dbg !9930
  br label %return, !dbg !9930

if.else:                                          ; preds = %land.lhs.true, %while.end
  store i32 0, i32* %retval, align 4, !dbg !9931
  br label %return, !dbg !9931

return:                                           ; preds = %if.else, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !9932
  ret i32 %18, !dbg !9932
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_prologTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !342 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %n = alloca i64, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !9933, metadata !444), !dbg !9934
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9935, metadata !444), !dbg !9936
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !9937, metadata !444), !dbg !9938
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !9939, metadata !444), !dbg !9940
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !9941, metadata !444), !dbg !9942
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9943
  %1 = load i8*, i8** %end.addr, align 8, !dbg !9945
  %cmp = icmp uge i8* %0, %1, !dbg !9946
  br i1 %cmp, label %if.then, label %if.end, !dbg !9947

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !9948
  br label %return, !dbg !9948

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9949, metadata !444), !dbg !9952
  %2 = load i8*, i8** %end.addr, align 8, !dbg !9953
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !9954
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !9955
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !9955
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9955
  store i64 %sub.ptr.sub, i64* %n, align 8, !dbg !9952
  %4 = load i64, i64* %n, align 8, !dbg !9956
  %and = and i64 %4, 1, !dbg !9958
  %tobool = icmp ne i64 %and, 0, !dbg !9958
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !9959

if.then1:                                         ; preds = %if.end
  %5 = load i64, i64* %n, align 8, !dbg !9960
  %and2 = and i64 %5, -2, !dbg !9960
  store i64 %and2, i64* %n, align 8, !dbg !9960
  %6 = load i64, i64* %n, align 8, !dbg !9962
  %cmp3 = icmp eq i64 %6, 0, !dbg !9964
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9965

if.then4:                                         ; preds = %if.then1
  store i32 -1, i32* %retval, align 4, !dbg !9966
  br label %return, !dbg !9966

if.end5:                                          ; preds = %if.then1
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !9967
  %8 = load i64, i64* %n, align 8, !dbg !9968
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !9969
  store i8* %add.ptr, i8** %end.addr, align 8, !dbg !9970
  br label %if.end6, !dbg !9971

if.end6:                                          ; preds = %if.end5, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !9972
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !9972
  %10 = load i8, i8* %arrayidx, align 1, !dbg !9972
  %conv = sext i8 %10 to i32, !dbg !9972
  %cmp7 = icmp eq i32 %conv, 0, !dbg !9972
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !9972

cond.true:                                        ; preds = %if.end6
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !9973
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !9973
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !9973
  %idxprom = zext i8 %12 to i64, !dbg !9973
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9973
  %14 = bitcast %struct.encoding* %13 to %struct.normal_encoding*, !dbg !9973
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %14, i32 0, i32 1, !dbg !9973
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !9973
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !9973
  %conv11 = zext i8 %15 to i32, !dbg !9973
  br label %cond.end, !dbg !9973

cond.false:                                       ; preds = %if.end6
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !9975
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !9975
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !9975
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !9975
  %arrayidx13 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !9975
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !9975
  %call = call i32 @unicode_byte_type(i8 signext %17, i8 signext %19), !dbg !9975
  br label %cond.end, !dbg !9975

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv11, %cond.true ], [ %call, %cond.false ], !dbg !9977
  switch i32 %cond, label %sw.default246 [
    i32 12, label %sw.bb
    i32 13, label %sw.bb16
    i32 2, label %sw.bb19
    i32 9, label %sw.bb52
    i32 21, label %sw.bb58
    i32 10, label %sw.bb58
    i32 30, label %sw.bb91
    i32 35, label %sw.bb94
    i32 20, label %sw.bb96
    i32 4, label %sw.bb98
    i32 31, label %sw.bb138
    i32 32, label %sw.bb140
    i32 36, label %sw.bb173
    i32 11, label %sw.bb175
    i32 19, label %sw.bb177
    i32 5, label %sw.bb180
    i32 6, label %sw.bb188
    i32 7, label %sw.bb196
    i32 22, label %sw.bb204
    i32 24, label %sw.bb204
    i32 25, label %sw.bb206
    i32 26, label %sw.bb206
    i32 27, label %sw.bb206
    i32 29, label %sw.bb208
  ], !dbg !9979

sw.bb:                                            ; preds = %cond.end
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9980
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !9982
  %add.ptr14 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !9983
  %22 = load i8*, i8** %end.addr, align 8, !dbg !9984
  %23 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9985
  %call15 = call i32 @big2_scanLit(i32 12, %struct.encoding* %20, i8* %add.ptr14, i8* %22, i8** %23), !dbg !9986
  store i32 %call15, i32* %retval, align 4, !dbg !9987
  br label %return, !dbg !9987

sw.bb16:                                          ; preds = %cond.end
  %24 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9988
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !9989
  %add.ptr17 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !9990
  %26 = load i8*, i8** %end.addr, align 8, !dbg !9991
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !9992
  %call18 = call i32 @big2_scanLit(i32 13, %struct.encoding* %24, i8* %add.ptr17, i8* %26, i8** %27), !dbg !9993
  store i32 %call18, i32* %retval, align 4, !dbg !9994
  br label %return, !dbg !9994

sw.bb19:                                          ; preds = %cond.end
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !9995
  %add.ptr20 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !9995
  store i8* %add.ptr20, i8** %ptr.addr, align 8, !dbg !9995
  %29 = load i8*, i8** %end.addr, align 8, !dbg !9997
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !9997
  %sub.ptr.lhs.cast21 = ptrtoint i8* %29 to i64, !dbg !9997
  %sub.ptr.rhs.cast22 = ptrtoint i8* %30 to i64, !dbg !9997
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !9997
  %cmp24 = icmp sge i64 %sub.ptr.sub23, 2, !dbg !9997
  br i1 %cmp24, label %if.end27, label %if.then26, !dbg !10000

if.then26:                                        ; preds = %sw.bb19
  store i32 -1, i32* %retval, align 4, !dbg !10001
  br label %return, !dbg !10001

if.end27:                                         ; preds = %sw.bb19
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !10004
  %arrayidx28 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !10004
  %32 = load i8, i8* %arrayidx28, align 1, !dbg !10004
  %conv29 = sext i8 %32 to i32, !dbg !10004
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !10004
  br i1 %cmp30, label %cond.true32, label %cond.false38, !dbg !10004

cond.true32:                                      ; preds = %if.end27
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !10005
  %arrayidx33 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !10005
  %34 = load i8, i8* %arrayidx33, align 1, !dbg !10005
  %idxprom34 = zext i8 %34 to i64, !dbg !10005
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10005
  %36 = bitcast %struct.encoding* %35 to %struct.normal_encoding*, !dbg !10005
  %type35 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %36, i32 0, i32 1, !dbg !10005
  %arrayidx36 = getelementptr inbounds [256 x i8], [256 x i8]* %type35, i64 0, i64 %idxprom34, !dbg !10005
  %37 = load i8, i8* %arrayidx36, align 1, !dbg !10005
  %conv37 = zext i8 %37 to i32, !dbg !10005
  br label %cond.end42, !dbg !10005

cond.false38:                                     ; preds = %if.end27
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !10007
  %arrayidx39 = getelementptr inbounds i8, i8* %38, i64 0, !dbg !10007
  %39 = load i8, i8* %arrayidx39, align 1, !dbg !10007
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !10007
  %arrayidx40 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !10007
  %41 = load i8, i8* %arrayidx40, align 1, !dbg !10007
  %call41 = call i32 @unicode_byte_type(i8 signext %39, i8 signext %41), !dbg !10007
  br label %cond.end42, !dbg !10007

cond.end42:                                       ; preds = %cond.false38, %cond.true32
  %cond43 = phi i32 [ %conv37, %cond.true32 ], [ %call41, %cond.false38 ], !dbg !10009
  switch i32 %cond43, label %sw.epilog [
    i32 16, label %sw.bb44
    i32 15, label %sw.bb47
    i32 22, label %sw.bb50
    i32 24, label %sw.bb50
    i32 29, label %sw.bb50
    i32 5, label %sw.bb50
    i32 6, label %sw.bb50
    i32 7, label %sw.bb50
  ], !dbg !10011

sw.bb44:                                          ; preds = %cond.end42
  %42 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10012
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !10014
  %add.ptr45 = getelementptr inbounds i8, i8* %43, i64 2, !dbg !10015
  %44 = load i8*, i8** %end.addr, align 8, !dbg !10016
  %45 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10017
  %call46 = call i32 @big2_scanDecl(%struct.encoding* %42, i8* %add.ptr45, i8* %44, i8** %45), !dbg !10018
  store i32 %call46, i32* %retval, align 4, !dbg !10019
  br label %return, !dbg !10019

sw.bb47:                                          ; preds = %cond.end42
  %46 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10020
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !10021
  %add.ptr48 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !10022
  %48 = load i8*, i8** %end.addr, align 8, !dbg !10023
  %49 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10024
  %call49 = call i32 @big2_scanPi(%struct.encoding* %46, i8* %add.ptr48, i8* %48, i8** %49), !dbg !10025
  store i32 %call49, i32* %retval, align 4, !dbg !10026
  br label %return, !dbg !10026

sw.bb50:                                          ; preds = %cond.end42, %cond.end42, %cond.end42, %cond.end42, %cond.end42, %cond.end42
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !10027
  %add.ptr51 = getelementptr inbounds i8, i8* %50, i64 -2, !dbg !10028
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10029
  store i8* %add.ptr51, i8** %51, align 8, !dbg !10030
  store i32 29, i32* %retval, align 4, !dbg !10031
  br label %return, !dbg !10031

sw.epilog:                                        ; preds = %cond.end42
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !10032
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10033
  store i8* %52, i8** %53, align 8, !dbg !10034
  store i32 0, i32* %retval, align 4, !dbg !10035
  br label %return, !dbg !10035

sw.bb52:                                          ; preds = %cond.end
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !10036
  %add.ptr53 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !10038
  %55 = load i8*, i8** %end.addr, align 8, !dbg !10039
  %cmp54 = icmp eq i8* %add.ptr53, %55, !dbg !10040
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !10041

if.then56:                                        ; preds = %sw.bb52
  %56 = load i8*, i8** %end.addr, align 8, !dbg !10042
  %57 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10044
  store i8* %56, i8** %57, align 8, !dbg !10045
  store i32 -15, i32* %retval, align 4, !dbg !10046
  br label %return, !dbg !10046

if.end57:                                         ; preds = %sw.bb52
  br label %sw.bb58, !dbg !10047

sw.bb58:                                          ; preds = %cond.end, %cond.end, %if.end57
  br label %for.cond, !dbg !10049

for.cond:                                         ; preds = %sw.epilog90, %sw.bb58
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !10050
  %add.ptr59 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !10050
  store i8* %add.ptr59, i8** %ptr.addr, align 8, !dbg !10050
  %59 = load i8*, i8** %end.addr, align 8, !dbg !10054
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !10054
  %sub.ptr.lhs.cast60 = ptrtoint i8* %59 to i64, !dbg !10054
  %sub.ptr.rhs.cast61 = ptrtoint i8* %60 to i64, !dbg !10054
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61, !dbg !10054
  %cmp63 = icmp sge i64 %sub.ptr.sub62, 2, !dbg !10054
  br i1 %cmp63, label %if.end66, label %if.then65, !dbg !10056

if.then65:                                        ; preds = %for.cond
  br label %for.end, !dbg !10057

if.end66:                                         ; preds = %for.cond
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !10058
  %arrayidx67 = getelementptr inbounds i8, i8* %61, i64 0, !dbg !10058
  %62 = load i8, i8* %arrayidx67, align 1, !dbg !10058
  %conv68 = sext i8 %62 to i32, !dbg !10058
  %cmp69 = icmp eq i32 %conv68, 0, !dbg !10058
  br i1 %cmp69, label %cond.true71, label %cond.false77, !dbg !10058

cond.true71:                                      ; preds = %if.end66
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !10059
  %arrayidx72 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !10059
  %64 = load i8, i8* %arrayidx72, align 1, !dbg !10059
  %idxprom73 = zext i8 %64 to i64, !dbg !10059
  %65 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10059
  %66 = bitcast %struct.encoding* %65 to %struct.normal_encoding*, !dbg !10059
  %type74 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %66, i32 0, i32 1, !dbg !10059
  %arrayidx75 = getelementptr inbounds [256 x i8], [256 x i8]* %type74, i64 0, i64 %idxprom73, !dbg !10059
  %67 = load i8, i8* %arrayidx75, align 1, !dbg !10059
  %conv76 = zext i8 %67 to i32, !dbg !10059
  br label %cond.end81, !dbg !10059

cond.false77:                                     ; preds = %if.end66
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !10061
  %arrayidx78 = getelementptr inbounds i8, i8* %68, i64 0, !dbg !10061
  %69 = load i8, i8* %arrayidx78, align 1, !dbg !10061
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !10061
  %arrayidx79 = getelementptr inbounds i8, i8* %70, i64 1, !dbg !10061
  %71 = load i8, i8* %arrayidx79, align 1, !dbg !10061
  %call80 = call i32 @unicode_byte_type(i8 signext %69, i8 signext %71), !dbg !10061
  br label %cond.end81, !dbg !10061

cond.end81:                                       ; preds = %cond.false77, %cond.true71
  %cond82 = phi i32 [ %conv76, %cond.true71 ], [ %call80, %cond.false77 ], !dbg !10063
  switch i32 %cond82, label %sw.default [
    i32 21, label %sw.bb83
    i32 10, label %sw.bb83
    i32 9, label %sw.bb84
  ], !dbg !10065

sw.bb83:                                          ; preds = %cond.end81, %cond.end81
  br label %sw.epilog90, !dbg !10066

sw.bb84:                                          ; preds = %cond.end81
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !10068
  %add.ptr85 = getelementptr inbounds i8, i8* %72, i64 2, !dbg !10070
  %73 = load i8*, i8** %end.addr, align 8, !dbg !10071
  %cmp86 = icmp ne i8* %add.ptr85, %73, !dbg !10072
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !10073

if.then88:                                        ; preds = %sw.bb84
  br label %sw.epilog90, !dbg !10074

if.end89:                                         ; preds = %sw.bb84
  br label %sw.default, !dbg !10075

sw.default:                                       ; preds = %cond.end81, %if.end89
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !10077
  %75 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10078
  store i8* %74, i8** %75, align 8, !dbg !10079
  store i32 15, i32* %retval, align 4, !dbg !10080
  br label %return, !dbg !10080

sw.epilog90:                                      ; preds = %if.then88, %sw.bb83
  br label %for.cond, !dbg !10081

for.end:                                          ; preds = %if.then65
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !10083
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10084
  store i8* %76, i8** %77, align 8, !dbg !10085
  store i32 15, i32* %retval, align 4, !dbg !10086
  br label %return, !dbg !10086

sw.bb91:                                          ; preds = %cond.end
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10087
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !10088
  %add.ptr92 = getelementptr inbounds i8, i8* %79, i64 2, !dbg !10089
  %80 = load i8*, i8** %end.addr, align 8, !dbg !10090
  %81 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10091
  %call93 = call i32 @big2_scanPercent(%struct.encoding* %78, i8* %add.ptr92, i8* %80, i8** %81), !dbg !10092
  store i32 %call93, i32* %retval, align 4, !dbg !10093
  br label %return, !dbg !10093

sw.bb94:                                          ; preds = %cond.end
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !10094
  %add.ptr95 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !10095
  %83 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10096
  store i8* %add.ptr95, i8** %83, align 8, !dbg !10097
  store i32 38, i32* %retval, align 4, !dbg !10098
  br label %return, !dbg !10098

sw.bb96:                                          ; preds = %cond.end
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !10099
  %add.ptr97 = getelementptr inbounds i8, i8* %84, i64 2, !dbg !10100
  %85 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10101
  store i8* %add.ptr97, i8** %85, align 8, !dbg !10102
  store i32 25, i32* %retval, align 4, !dbg !10103
  br label %return, !dbg !10103

sw.bb98:                                          ; preds = %cond.end
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !10104
  %add.ptr99 = getelementptr inbounds i8, i8* %86, i64 2, !dbg !10104
  store i8* %add.ptr99, i8** %ptr.addr, align 8, !dbg !10104
  %87 = load i8*, i8** %end.addr, align 8, !dbg !10105
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !10105
  %sub.ptr.lhs.cast100 = ptrtoint i8* %87 to i64, !dbg !10105
  %sub.ptr.rhs.cast101 = ptrtoint i8* %88 to i64, !dbg !10105
  %sub.ptr.sub102 = sub i64 %sub.ptr.lhs.cast100, %sub.ptr.rhs.cast101, !dbg !10105
  %cmp103 = icmp sge i64 %sub.ptr.sub102, 2, !dbg !10105
  br i1 %cmp103, label %if.end106, label %if.then105, !dbg !10107

if.then105:                                       ; preds = %sw.bb98
  store i32 -26, i32* %retval, align 4, !dbg !10108
  br label %return, !dbg !10108

if.end106:                                        ; preds = %sw.bb98
  %89 = load i8*, i8** %ptr.addr, align 8, !dbg !10109
  %arrayidx107 = getelementptr inbounds i8, i8* %89, i64 0, !dbg !10109
  %90 = load i8, i8* %arrayidx107, align 1, !dbg !10109
  %conv108 = sext i8 %90 to i32, !dbg !10109
  %cmp109 = icmp eq i32 %conv108, 0, !dbg !10109
  br i1 %cmp109, label %land.lhs.true, label %if.end137, !dbg !10109

land.lhs.true:                                    ; preds = %if.end106
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !10111
  %arrayidx111 = getelementptr inbounds i8, i8* %91, i64 1, !dbg !10111
  %92 = load i8, i8* %arrayidx111, align 1, !dbg !10111
  %conv112 = sext i8 %92 to i32, !dbg !10111
  %cmp113 = icmp eq i32 %conv112, 93, !dbg !10111
  br i1 %cmp113, label %if.then115, label %if.end137, !dbg !10111

if.then115:                                       ; preds = %land.lhs.true
  %93 = load i8*, i8** %end.addr, align 8, !dbg !10113
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !10113
  %sub.ptr.lhs.cast116 = ptrtoint i8* %93 to i64, !dbg !10113
  %sub.ptr.rhs.cast117 = ptrtoint i8* %94 to i64, !dbg !10113
  %sub.ptr.sub118 = sub i64 %sub.ptr.lhs.cast116, %sub.ptr.rhs.cast117, !dbg !10113
  %cmp119 = icmp sge i64 %sub.ptr.sub118, 4, !dbg !10113
  br i1 %cmp119, label %if.end122, label %if.then121, !dbg !10117

if.then121:                                       ; preds = %if.then115
  store i32 -1, i32* %retval, align 4, !dbg !10118
  br label %return, !dbg !10118

if.end122:                                        ; preds = %if.then115
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !10121
  %add.ptr123 = getelementptr inbounds i8, i8* %95, i64 2, !dbg !10121
  %arrayidx124 = getelementptr inbounds i8, i8* %add.ptr123, i64 0, !dbg !10121
  %96 = load i8, i8* %arrayidx124, align 1, !dbg !10121
  %conv125 = sext i8 %96 to i32, !dbg !10121
  %cmp126 = icmp eq i32 %conv125, 0, !dbg !10121
  br i1 %cmp126, label %land.lhs.true128, label %if.end136, !dbg !10121

land.lhs.true128:                                 ; preds = %if.end122
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !10123
  %add.ptr129 = getelementptr inbounds i8, i8* %97, i64 2, !dbg !10123
  %arrayidx130 = getelementptr inbounds i8, i8* %add.ptr129, i64 1, !dbg !10123
  %98 = load i8, i8* %arrayidx130, align 1, !dbg !10123
  %conv131 = sext i8 %98 to i32, !dbg !10123
  %cmp132 = icmp eq i32 %conv131, 62, !dbg !10123
  br i1 %cmp132, label %if.then134, label %if.end136, !dbg !10123

if.then134:                                       ; preds = %land.lhs.true128
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !10125
  %add.ptr135 = getelementptr inbounds i8, i8* %99, i64 4, !dbg !10127
  %100 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10128
  store i8* %add.ptr135, i8** %100, align 8, !dbg !10129
  store i32 34, i32* %retval, align 4, !dbg !10130
  br label %return, !dbg !10130

if.end136:                                        ; preds = %land.lhs.true128, %if.end122
  br label %if.end137, !dbg !10131

if.end137:                                        ; preds = %if.end136, %land.lhs.true, %if.end106
  %101 = load i8*, i8** %ptr.addr, align 8, !dbg !10132
  %102 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10133
  store i8* %101, i8** %102, align 8, !dbg !10134
  store i32 26, i32* %retval, align 4, !dbg !10135
  br label %return, !dbg !10135

sw.bb138:                                         ; preds = %cond.end
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !10136
  %add.ptr139 = getelementptr inbounds i8, i8* %103, i64 2, !dbg !10137
  %104 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10138
  store i8* %add.ptr139, i8** %104, align 8, !dbg !10139
  store i32 23, i32* %retval, align 4, !dbg !10140
  br label %return, !dbg !10140

sw.bb140:                                         ; preds = %cond.end
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !10141
  %add.ptr141 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !10141
  store i8* %add.ptr141, i8** %ptr.addr, align 8, !dbg !10141
  %106 = load i8*, i8** %end.addr, align 8, !dbg !10142
  %107 = load i8*, i8** %ptr.addr, align 8, !dbg !10142
  %sub.ptr.lhs.cast142 = ptrtoint i8* %106 to i64, !dbg !10142
  %sub.ptr.rhs.cast143 = ptrtoint i8* %107 to i64, !dbg !10142
  %sub.ptr.sub144 = sub i64 %sub.ptr.lhs.cast142, %sub.ptr.rhs.cast143, !dbg !10142
  %cmp145 = icmp sge i64 %sub.ptr.sub144, 2, !dbg !10142
  br i1 %cmp145, label %if.end148, label %if.then147, !dbg !10144

if.then147:                                       ; preds = %sw.bb140
  store i32 -24, i32* %retval, align 4, !dbg !10145
  br label %return, !dbg !10145

if.end148:                                        ; preds = %sw.bb140
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !10146
  %arrayidx149 = getelementptr inbounds i8, i8* %108, i64 0, !dbg !10146
  %109 = load i8, i8* %arrayidx149, align 1, !dbg !10146
  %conv150 = sext i8 %109 to i32, !dbg !10146
  %cmp151 = icmp eq i32 %conv150, 0, !dbg !10146
  br i1 %cmp151, label %cond.true153, label %cond.false159, !dbg !10146

cond.true153:                                     ; preds = %if.end148
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !10147
  %arrayidx154 = getelementptr inbounds i8, i8* %110, i64 1, !dbg !10147
  %111 = load i8, i8* %arrayidx154, align 1, !dbg !10147
  %idxprom155 = zext i8 %111 to i64, !dbg !10147
  %112 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10147
  %113 = bitcast %struct.encoding* %112 to %struct.normal_encoding*, !dbg !10147
  %type156 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %113, i32 0, i32 1, !dbg !10147
  %arrayidx157 = getelementptr inbounds [256 x i8], [256 x i8]* %type156, i64 0, i64 %idxprom155, !dbg !10147
  %114 = load i8, i8* %arrayidx157, align 1, !dbg !10147
  %conv158 = zext i8 %114 to i32, !dbg !10147
  br label %cond.end163, !dbg !10147

cond.false159:                                    ; preds = %if.end148
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !10149
  %arrayidx160 = getelementptr inbounds i8, i8* %115, i64 0, !dbg !10149
  %116 = load i8, i8* %arrayidx160, align 1, !dbg !10149
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !10149
  %arrayidx161 = getelementptr inbounds i8, i8* %117, i64 1, !dbg !10149
  %118 = load i8, i8* %arrayidx161, align 1, !dbg !10149
  %call162 = call i32 @unicode_byte_type(i8 signext %116, i8 signext %118), !dbg !10149
  br label %cond.end163, !dbg !10149

cond.end163:                                      ; preds = %cond.false159, %cond.true153
  %cond164 = phi i32 [ %conv158, %cond.true153 ], [ %call162, %cond.false159 ], !dbg !10151
  switch i32 %cond164, label %sw.epilog172 [
    i32 33, label %sw.bb165
    i32 15, label %sw.bb167
    i32 34, label %sw.bb169
    i32 9, label %sw.bb171
    i32 10, label %sw.bb171
    i32 21, label %sw.bb171
    i32 11, label %sw.bb171
    i32 35, label %sw.bb171
    i32 36, label %sw.bb171
    i32 32, label %sw.bb171
  ], !dbg !10153

sw.bb165:                                         ; preds = %cond.end163
  %119 = load i8*, i8** %ptr.addr, align 8, !dbg !10154
  %add.ptr166 = getelementptr inbounds i8, i8* %119, i64 2, !dbg !10156
  %120 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10157
  store i8* %add.ptr166, i8** %120, align 8, !dbg !10158
  store i32 36, i32* %retval, align 4, !dbg !10159
  br label %return, !dbg !10159

sw.bb167:                                         ; preds = %cond.end163
  %121 = load i8*, i8** %ptr.addr, align 8, !dbg !10160
  %add.ptr168 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !10161
  %122 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10162
  store i8* %add.ptr168, i8** %122, align 8, !dbg !10163
  store i32 35, i32* %retval, align 4, !dbg !10164
  br label %return, !dbg !10164

sw.bb169:                                         ; preds = %cond.end163
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !10165
  %add.ptr170 = getelementptr inbounds i8, i8* %123, i64 2, !dbg !10166
  %124 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10167
  store i8* %add.ptr170, i8** %124, align 8, !dbg !10168
  store i32 37, i32* %retval, align 4, !dbg !10169
  br label %return, !dbg !10169

sw.bb171:                                         ; preds = %cond.end163, %cond.end163, %cond.end163, %cond.end163, %cond.end163, %cond.end163, %cond.end163
  %125 = load i8*, i8** %ptr.addr, align 8, !dbg !10170
  %126 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10171
  store i8* %125, i8** %126, align 8, !dbg !10172
  store i32 24, i32* %retval, align 4, !dbg !10173
  br label %return, !dbg !10173

sw.epilog172:                                     ; preds = %cond.end163
  %127 = load i8*, i8** %ptr.addr, align 8, !dbg !10174
  %128 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10175
  store i8* %127, i8** %128, align 8, !dbg !10176
  store i32 0, i32* %retval, align 4, !dbg !10177
  br label %return, !dbg !10177

sw.bb173:                                         ; preds = %cond.end
  %129 = load i8*, i8** %ptr.addr, align 8, !dbg !10178
  %add.ptr174 = getelementptr inbounds i8, i8* %129, i64 2, !dbg !10179
  %130 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10180
  store i8* %add.ptr174, i8** %130, align 8, !dbg !10181
  store i32 21, i32* %retval, align 4, !dbg !10182
  br label %return, !dbg !10182

sw.bb175:                                         ; preds = %cond.end
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !10183
  %add.ptr176 = getelementptr inbounds i8, i8* %131, i64 2, !dbg !10184
  %132 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10185
  store i8* %add.ptr176, i8** %132, align 8, !dbg !10186
  store i32 17, i32* %retval, align 4, !dbg !10187
  br label %return, !dbg !10187

sw.bb177:                                         ; preds = %cond.end
  %133 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10188
  %134 = load i8*, i8** %ptr.addr, align 8, !dbg !10189
  %add.ptr178 = getelementptr inbounds i8, i8* %134, i64 2, !dbg !10190
  %135 = load i8*, i8** %end.addr, align 8, !dbg !10191
  %136 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10192
  %call179 = call i32 @big2_scanPoundName(%struct.encoding* %133, i8* %add.ptr178, i8* %135, i8** %136), !dbg !10193
  store i32 %call179, i32* %retval, align 4, !dbg !10194
  br label %return, !dbg !10194

sw.bb180:                                         ; preds = %cond.end
  %137 = load i8*, i8** %end.addr, align 8, !dbg !10195
  %138 = load i8*, i8** %ptr.addr, align 8, !dbg !10195
  %sub.ptr.lhs.cast181 = ptrtoint i8* %137 to i64, !dbg !10195
  %sub.ptr.rhs.cast182 = ptrtoint i8* %138 to i64, !dbg !10195
  %sub.ptr.sub183 = sub i64 %sub.ptr.lhs.cast181, %sub.ptr.rhs.cast182, !dbg !10195
  %cmp184 = icmp slt i64 %sub.ptr.sub183, 2, !dbg !10195
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !10197

if.then186:                                       ; preds = %sw.bb180
  store i32 -2, i32* %retval, align 4, !dbg !10198
  br label %return, !dbg !10198

if.end187:                                        ; preds = %sw.bb180
  %139 = load i8*, i8** %ptr.addr, align 8, !dbg !10200
  %140 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10200
  store i8* %139, i8** %140, align 8, !dbg !10200
  store i32 0, i32* %retval, align 4, !dbg !10200
  br label %return, !dbg !10200

sw.bb188:                                         ; preds = %cond.end
  %141 = load i8*, i8** %end.addr, align 8, !dbg !10202
  %142 = load i8*, i8** %ptr.addr, align 8, !dbg !10202
  %sub.ptr.lhs.cast189 = ptrtoint i8* %141 to i64, !dbg !10202
  %sub.ptr.rhs.cast190 = ptrtoint i8* %142 to i64, !dbg !10202
  %sub.ptr.sub191 = sub i64 %sub.ptr.lhs.cast189, %sub.ptr.rhs.cast190, !dbg !10202
  %cmp192 = icmp slt i64 %sub.ptr.sub191, 3, !dbg !10202
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !10202

if.then194:                                       ; preds = %sw.bb188
  store i32 -2, i32* %retval, align 4, !dbg !10205
  br label %return, !dbg !10205

if.end195:                                        ; preds = %sw.bb188
  %143 = load i8*, i8** %ptr.addr, align 8, !dbg !10207
  %144 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10207
  store i8* %143, i8** %144, align 8, !dbg !10207
  store i32 0, i32* %retval, align 4, !dbg !10207
  br label %return, !dbg !10207

sw.bb196:                                         ; preds = %cond.end
  %145 = load i8*, i8** %end.addr, align 8, !dbg !10209
  %146 = load i8*, i8** %ptr.addr, align 8, !dbg !10209
  %sub.ptr.lhs.cast197 = ptrtoint i8* %145 to i64, !dbg !10209
  %sub.ptr.rhs.cast198 = ptrtoint i8* %146 to i64, !dbg !10209
  %sub.ptr.sub199 = sub i64 %sub.ptr.lhs.cast197, %sub.ptr.rhs.cast198, !dbg !10209
  %cmp200 = icmp slt i64 %sub.ptr.sub199, 4, !dbg !10209
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !10209

if.then202:                                       ; preds = %sw.bb196
  store i32 -2, i32* %retval, align 4, !dbg !10212
  br label %return, !dbg !10212

if.end203:                                        ; preds = %sw.bb196
  %147 = load i8*, i8** %ptr.addr, align 8, !dbg !10214
  %148 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10214
  store i8* %147, i8** %148, align 8, !dbg !10214
  store i32 0, i32* %retval, align 4, !dbg !10214
  br label %return, !dbg !10214

sw.bb204:                                         ; preds = %cond.end, %cond.end
  store i32 18, i32* %tok, align 4, !dbg !10216
  %149 = load i8*, i8** %ptr.addr, align 8, !dbg !10217
  %add.ptr205 = getelementptr inbounds i8, i8* %149, i64 2, !dbg !10217
  store i8* %add.ptr205, i8** %ptr.addr, align 8, !dbg !10217
  br label %sw.epilog247, !dbg !10218

sw.bb206:                                         ; preds = %cond.end, %cond.end, %cond.end
  store i32 19, i32* %tok, align 4, !dbg !10219
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !10220
  %add.ptr207 = getelementptr inbounds i8, i8* %150, i64 2, !dbg !10220
  store i8* %add.ptr207, i8** %ptr.addr, align 8, !dbg !10220
  br label %sw.epilog247, !dbg !10221

sw.bb208:                                         ; preds = %cond.end
  %151 = load i8*, i8** %ptr.addr, align 8, !dbg !10222
  %arrayidx209 = getelementptr inbounds i8, i8* %151, i64 0, !dbg !10222
  %152 = load i8, i8* %arrayidx209, align 1, !dbg !10222
  %idxprom210 = zext i8 %152 to i64, !dbg !10222
  %arrayidx211 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom210, !dbg !10222
  %153 = load i8, i8* %arrayidx211, align 1, !dbg !10222
  %conv212 = zext i8 %153 to i32, !dbg !10222
  %shl = shl i32 %conv212, 3, !dbg !10222
  %154 = load i8*, i8** %ptr.addr, align 8, !dbg !10222
  %arrayidx213 = getelementptr inbounds i8, i8* %154, i64 1, !dbg !10222
  %155 = load i8, i8* %arrayidx213, align 1, !dbg !10222
  %conv214 = zext i8 %155 to i32, !dbg !10222
  %shr = ashr i32 %conv214, 5, !dbg !10222
  %add = add nsw i32 %shl, %shr, !dbg !10222
  %idxprom215 = sext i32 %add to i64, !dbg !10222
  %arrayidx216 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom215, !dbg !10222
  %156 = load i32, i32* %arrayidx216, align 4, !dbg !10222
  %157 = load i8*, i8** %ptr.addr, align 8, !dbg !10222
  %arrayidx217 = getelementptr inbounds i8, i8* %157, i64 1, !dbg !10222
  %158 = load i8, i8* %arrayidx217, align 1, !dbg !10222
  %conv218 = zext i8 %158 to i32, !dbg !10222
  %and219 = and i32 %conv218, 31, !dbg !10222
  %shl220 = shl i32 1, %and219, !dbg !10222
  %and221 = and i32 %156, %shl220, !dbg !10222
  %tobool222 = icmp ne i32 %and221, 0, !dbg !10222
  br i1 %tobool222, label %if.then223, label %if.end225, !dbg !10224

if.then223:                                       ; preds = %sw.bb208
  %159 = load i8*, i8** %ptr.addr, align 8, !dbg !10225
  %add.ptr224 = getelementptr inbounds i8, i8* %159, i64 2, !dbg !10225
  store i8* %add.ptr224, i8** %ptr.addr, align 8, !dbg !10225
  store i32 18, i32* %tok, align 4, !dbg !10227
  br label %sw.epilog247, !dbg !10228

if.end225:                                        ; preds = %sw.bb208
  %160 = load i8*, i8** %ptr.addr, align 8, !dbg !10229
  %arrayidx226 = getelementptr inbounds i8, i8* %160, i64 0, !dbg !10229
  %161 = load i8, i8* %arrayidx226, align 1, !dbg !10229
  %idxprom227 = zext i8 %161 to i64, !dbg !10229
  %arrayidx228 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom227, !dbg !10229
  %162 = load i8, i8* %arrayidx228, align 1, !dbg !10229
  %conv229 = zext i8 %162 to i32, !dbg !10229
  %shl230 = shl i32 %conv229, 3, !dbg !10229
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !10229
  %arrayidx231 = getelementptr inbounds i8, i8* %163, i64 1, !dbg !10229
  %164 = load i8, i8* %arrayidx231, align 1, !dbg !10229
  %conv232 = zext i8 %164 to i32, !dbg !10229
  %shr233 = ashr i32 %conv232, 5, !dbg !10229
  %add234 = add nsw i32 %shl230, %shr233, !dbg !10229
  %idxprom235 = sext i32 %add234 to i64, !dbg !10229
  %arrayidx236 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom235, !dbg !10229
  %165 = load i32, i32* %arrayidx236, align 4, !dbg !10229
  %166 = load i8*, i8** %ptr.addr, align 8, !dbg !10229
  %arrayidx237 = getelementptr inbounds i8, i8* %166, i64 1, !dbg !10229
  %167 = load i8, i8* %arrayidx237, align 1, !dbg !10229
  %conv238 = zext i8 %167 to i32, !dbg !10229
  %and239 = and i32 %conv238, 31, !dbg !10229
  %shl240 = shl i32 1, %and239, !dbg !10229
  %and241 = and i32 %165, %shl240, !dbg !10229
  %tobool242 = icmp ne i32 %and241, 0, !dbg !10229
  br i1 %tobool242, label %if.then243, label %if.end245, !dbg !10231

if.then243:                                       ; preds = %if.end225
  %168 = load i8*, i8** %ptr.addr, align 8, !dbg !10232
  %add.ptr244 = getelementptr inbounds i8, i8* %168, i64 2, !dbg !10232
  store i8* %add.ptr244, i8** %ptr.addr, align 8, !dbg !10232
  store i32 19, i32* %tok, align 4, !dbg !10234
  br label %sw.epilog247, !dbg !10235

if.end245:                                        ; preds = %if.end225
  br label %sw.default246, !dbg !10236

sw.default246:                                    ; preds = %cond.end, %if.end245
  %169 = load i8*, i8** %ptr.addr, align 8, !dbg !10238
  %170 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10239
  store i8* %169, i8** %170, align 8, !dbg !10240
  store i32 0, i32* %retval, align 4, !dbg !10241
  br label %return, !dbg !10241

sw.epilog247:                                     ; preds = %if.then243, %if.then223, %sw.bb206, %sw.bb204
  br label %while.cond, !dbg !10242

while.cond:                                       ; preds = %sw.epilog335, %sw.epilog247
  %171 = load i8*, i8** %end.addr, align 8, !dbg !10243
  %172 = load i8*, i8** %ptr.addr, align 8, !dbg !10243
  %sub.ptr.lhs.cast248 = ptrtoint i8* %171 to i64, !dbg !10243
  %sub.ptr.rhs.cast249 = ptrtoint i8* %172 to i64, !dbg !10243
  %sub.ptr.sub250 = sub i64 %sub.ptr.lhs.cast248, %sub.ptr.rhs.cast249, !dbg !10243
  %cmp251 = icmp sge i64 %sub.ptr.sub250, 2, !dbg !10243
  br i1 %cmp251, label %while.body, label %while.end, !dbg !10244

while.body:                                       ; preds = %while.cond
  %173 = load i8*, i8** %ptr.addr, align 8, !dbg !10245
  %arrayidx253 = getelementptr inbounds i8, i8* %173, i64 0, !dbg !10245
  %174 = load i8, i8* %arrayidx253, align 1, !dbg !10245
  %conv254 = sext i8 %174 to i32, !dbg !10245
  %cmp255 = icmp eq i32 %conv254, 0, !dbg !10245
  br i1 %cmp255, label %cond.true257, label %cond.false263, !dbg !10245

cond.true257:                                     ; preds = %while.body
  %175 = load i8*, i8** %ptr.addr, align 8, !dbg !10247
  %arrayidx258 = getelementptr inbounds i8, i8* %175, i64 1, !dbg !10247
  %176 = load i8, i8* %arrayidx258, align 1, !dbg !10247
  %idxprom259 = zext i8 %176 to i64, !dbg !10247
  %177 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10247
  %178 = bitcast %struct.encoding* %177 to %struct.normal_encoding*, !dbg !10247
  %type260 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %178, i32 0, i32 1, !dbg !10247
  %arrayidx261 = getelementptr inbounds [256 x i8], [256 x i8]* %type260, i64 0, i64 %idxprom259, !dbg !10247
  %179 = load i8, i8* %arrayidx261, align 1, !dbg !10247
  %conv262 = zext i8 %179 to i32, !dbg !10247
  br label %cond.end267, !dbg !10247

cond.false263:                                    ; preds = %while.body
  %180 = load i8*, i8** %ptr.addr, align 8, !dbg !10249
  %arrayidx264 = getelementptr inbounds i8, i8* %180, i64 0, !dbg !10249
  %181 = load i8, i8* %arrayidx264, align 1, !dbg !10249
  %182 = load i8*, i8** %ptr.addr, align 8, !dbg !10249
  %arrayidx265 = getelementptr inbounds i8, i8* %182, i64 1, !dbg !10249
  %183 = load i8, i8* %arrayidx265, align 1, !dbg !10249
  %call266 = call i32 @unicode_byte_type(i8 signext %181, i8 signext %183), !dbg !10249
  br label %cond.end267, !dbg !10249

cond.end267:                                      ; preds = %cond.false263, %cond.true257
  %cond268 = phi i32 [ %conv262, %cond.true257 ], [ %call266, %cond.false263 ], !dbg !10251
  switch i32 %cond268, label %sw.default334 [
    i32 29, label %sw.bb269
    i32 22, label %sw.bb289
    i32 24, label %sw.bb289
    i32 25, label %sw.bb289
    i32 26, label %sw.bb289
    i32 27, label %sw.bb289
    i32 5, label %sw.bb291
    i32 6, label %sw.bb299
    i32 7, label %sw.bb307
    i32 11, label %sw.bb315
    i32 32, label %sw.bb315
    i32 35, label %sw.bb315
    i32 36, label %sw.bb315
    i32 20, label %sw.bb315
    i32 30, label %sw.bb315
    i32 21, label %sw.bb315
    i32 9, label %sw.bb315
    i32 10, label %sw.bb315
    i32 34, label %sw.bb316
    i32 33, label %sw.bb322
    i32 15, label %sw.bb328
  ], !dbg !10253

sw.bb269:                                         ; preds = %cond.end267
  %184 = load i8*, i8** %ptr.addr, align 8, !dbg !10254
  %arrayidx270 = getelementptr inbounds i8, i8* %184, i64 0, !dbg !10254
  %185 = load i8, i8* %arrayidx270, align 1, !dbg !10254
  %idxprom271 = zext i8 %185 to i64, !dbg !10254
  %arrayidx272 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom271, !dbg !10254
  %186 = load i8, i8* %arrayidx272, align 1, !dbg !10254
  %conv273 = zext i8 %186 to i32, !dbg !10254
  %shl274 = shl i32 %conv273, 3, !dbg !10254
  %187 = load i8*, i8** %ptr.addr, align 8, !dbg !10254
  %arrayidx275 = getelementptr inbounds i8, i8* %187, i64 1, !dbg !10254
  %188 = load i8, i8* %arrayidx275, align 1, !dbg !10254
  %conv276 = zext i8 %188 to i32, !dbg !10254
  %shr277 = ashr i32 %conv276, 5, !dbg !10254
  %add278 = add nsw i32 %shl274, %shr277, !dbg !10254
  %idxprom279 = sext i32 %add278 to i64, !dbg !10254
  %arrayidx280 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom279, !dbg !10254
  %189 = load i32, i32* %arrayidx280, align 4, !dbg !10254
  %190 = load i8*, i8** %ptr.addr, align 8, !dbg !10254
  %arrayidx281 = getelementptr inbounds i8, i8* %190, i64 1, !dbg !10254
  %191 = load i8, i8* %arrayidx281, align 1, !dbg !10254
  %conv282 = zext i8 %191 to i32, !dbg !10254
  %and283 = and i32 %conv282, 31, !dbg !10254
  %shl284 = shl i32 1, %and283, !dbg !10254
  %and285 = and i32 %189, %shl284, !dbg !10254
  %tobool286 = icmp ne i32 %and285, 0, !dbg !10254
  br i1 %tobool286, label %if.end288, label %if.then287, !dbg !10257

if.then287:                                       ; preds = %sw.bb269
  %192 = load i8*, i8** %ptr.addr, align 8, !dbg !10258
  %193 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10258
  store i8* %192, i8** %193, align 8, !dbg !10258
  store i32 0, i32* %retval, align 4, !dbg !10258
  br label %return, !dbg !10258

if.end288:                                        ; preds = %sw.bb269
  br label %sw.bb289, !dbg !10261

sw.bb289:                                         ; preds = %cond.end267, %cond.end267, %cond.end267, %cond.end267, %cond.end267, %if.end288
  %194 = load i8*, i8** %ptr.addr, align 8, !dbg !10263
  %add.ptr290 = getelementptr inbounds i8, i8* %194, i64 2, !dbg !10263
  store i8* %add.ptr290, i8** %ptr.addr, align 8, !dbg !10263
  br label %sw.epilog335, !dbg !10263

sw.bb291:                                         ; preds = %cond.end267
  %195 = load i8*, i8** %end.addr, align 8, !dbg !10265
  %196 = load i8*, i8** %ptr.addr, align 8, !dbg !10265
  %sub.ptr.lhs.cast292 = ptrtoint i8* %195 to i64, !dbg !10265
  %sub.ptr.rhs.cast293 = ptrtoint i8* %196 to i64, !dbg !10265
  %sub.ptr.sub294 = sub i64 %sub.ptr.lhs.cast292, %sub.ptr.rhs.cast293, !dbg !10265
  %cmp295 = icmp slt i64 %sub.ptr.sub294, 2, !dbg !10265
  br i1 %cmp295, label %if.then297, label %if.end298, !dbg !10265

if.then297:                                       ; preds = %sw.bb291
  store i32 -2, i32* %retval, align 4, !dbg !10268
  br label %return, !dbg !10268

if.end298:                                        ; preds = %sw.bb291
  %197 = load i8*, i8** %ptr.addr, align 8, !dbg !10270
  %198 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10270
  store i8* %197, i8** %198, align 8, !dbg !10270
  store i32 0, i32* %retval, align 4, !dbg !10270
  br label %return, !dbg !10270

sw.bb299:                                         ; preds = %cond.end267
  %199 = load i8*, i8** %end.addr, align 8, !dbg !10274
  %200 = load i8*, i8** %ptr.addr, align 8, !dbg !10274
  %sub.ptr.lhs.cast300 = ptrtoint i8* %199 to i64, !dbg !10274
  %sub.ptr.rhs.cast301 = ptrtoint i8* %200 to i64, !dbg !10274
  %sub.ptr.sub302 = sub i64 %sub.ptr.lhs.cast300, %sub.ptr.rhs.cast301, !dbg !10274
  %cmp303 = icmp slt i64 %sub.ptr.sub302, 3, !dbg !10274
  br i1 %cmp303, label %if.then305, label %if.end306, !dbg !10274

if.then305:                                       ; preds = %sw.bb299
  store i32 -2, i32* %retval, align 4, !dbg !10277
  br label %return, !dbg !10277

if.end306:                                        ; preds = %sw.bb299
  %201 = load i8*, i8** %ptr.addr, align 8, !dbg !10279
  %202 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10279
  store i8* %201, i8** %202, align 8, !dbg !10279
  store i32 0, i32* %retval, align 4, !dbg !10279
  br label %return, !dbg !10279

sw.bb307:                                         ; preds = %cond.end267
  %203 = load i8*, i8** %end.addr, align 8, !dbg !10283
  %204 = load i8*, i8** %ptr.addr, align 8, !dbg !10283
  %sub.ptr.lhs.cast308 = ptrtoint i8* %203 to i64, !dbg !10283
  %sub.ptr.rhs.cast309 = ptrtoint i8* %204 to i64, !dbg !10283
  %sub.ptr.sub310 = sub i64 %sub.ptr.lhs.cast308, %sub.ptr.rhs.cast309, !dbg !10283
  %cmp311 = icmp slt i64 %sub.ptr.sub310, 4, !dbg !10283
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !10283

if.then313:                                       ; preds = %sw.bb307
  store i32 -2, i32* %retval, align 4, !dbg !10286
  br label %return, !dbg !10286

if.end314:                                        ; preds = %sw.bb307
  %205 = load i8*, i8** %ptr.addr, align 8, !dbg !10288
  %206 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10288
  store i8* %205, i8** %206, align 8, !dbg !10288
  store i32 0, i32* %retval, align 4, !dbg !10288
  br label %return, !dbg !10288

sw.bb315:                                         ; preds = %cond.end267, %cond.end267, %cond.end267, %cond.end267, %cond.end267, %cond.end267, %cond.end267, %cond.end267, %cond.end267
  %207 = load i8*, i8** %ptr.addr, align 8, !dbg !10292
  %208 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10293
  store i8* %207, i8** %208, align 8, !dbg !10294
  %209 = load i32, i32* %tok, align 4, !dbg !10295
  store i32 %209, i32* %retval, align 4, !dbg !10296
  br label %return, !dbg !10296

sw.bb316:                                         ; preds = %cond.end267
  %210 = load i32, i32* %tok, align 4, !dbg !10297
  %cmp317 = icmp eq i32 %210, 19, !dbg !10299
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !10300

if.then319:                                       ; preds = %sw.bb316
  %211 = load i8*, i8** %ptr.addr, align 8, !dbg !10301
  %212 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10303
  store i8* %211, i8** %212, align 8, !dbg !10304
  store i32 0, i32* %retval, align 4, !dbg !10305
  br label %return, !dbg !10305

if.end320:                                        ; preds = %sw.bb316
  %213 = load i8*, i8** %ptr.addr, align 8, !dbg !10306
  %add.ptr321 = getelementptr inbounds i8, i8* %213, i64 2, !dbg !10307
  %214 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10308
  store i8* %add.ptr321, i8** %214, align 8, !dbg !10309
  store i32 32, i32* %retval, align 4, !dbg !10310
  br label %return, !dbg !10310

sw.bb322:                                         ; preds = %cond.end267
  %215 = load i32, i32* %tok, align 4, !dbg !10311
  %cmp323 = icmp eq i32 %215, 19, !dbg !10313
  br i1 %cmp323, label %if.then325, label %if.end326, !dbg !10314

if.then325:                                       ; preds = %sw.bb322
  %216 = load i8*, i8** %ptr.addr, align 8, !dbg !10315
  %217 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10317
  store i8* %216, i8** %217, align 8, !dbg !10318
  store i32 0, i32* %retval, align 4, !dbg !10319
  br label %return, !dbg !10319

if.end326:                                        ; preds = %sw.bb322
  %218 = load i8*, i8** %ptr.addr, align 8, !dbg !10320
  %add.ptr327 = getelementptr inbounds i8, i8* %218, i64 2, !dbg !10321
  %219 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10322
  store i8* %add.ptr327, i8** %219, align 8, !dbg !10323
  store i32 31, i32* %retval, align 4, !dbg !10324
  br label %return, !dbg !10324

sw.bb328:                                         ; preds = %cond.end267
  %220 = load i32, i32* %tok, align 4, !dbg !10325
  %cmp329 = icmp eq i32 %220, 19, !dbg !10327
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !10328

if.then331:                                       ; preds = %sw.bb328
  %221 = load i8*, i8** %ptr.addr, align 8, !dbg !10329
  %222 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10331
  store i8* %221, i8** %222, align 8, !dbg !10332
  store i32 0, i32* %retval, align 4, !dbg !10333
  br label %return, !dbg !10333

if.end332:                                        ; preds = %sw.bb328
  %223 = load i8*, i8** %ptr.addr, align 8, !dbg !10334
  %add.ptr333 = getelementptr inbounds i8, i8* %223, i64 2, !dbg !10335
  %224 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10336
  store i8* %add.ptr333, i8** %224, align 8, !dbg !10337
  store i32 30, i32* %retval, align 4, !dbg !10338
  br label %return, !dbg !10338

sw.default334:                                    ; preds = %cond.end267
  %225 = load i8*, i8** %ptr.addr, align 8, !dbg !10339
  %226 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10340
  store i8* %225, i8** %226, align 8, !dbg !10341
  store i32 0, i32* %retval, align 4, !dbg !10342
  br label %return, !dbg !10342

sw.epilog335:                                     ; preds = %sw.bb289
  br label %while.cond, !dbg !10343

while.end:                                        ; preds = %while.cond
  %227 = load i32, i32* %tok, align 4, !dbg !10344
  %sub = sub nsw i32 0, %227, !dbg !10345
  store i32 %sub, i32* %retval, align 4, !dbg !10346
  br label %return, !dbg !10346

return:                                           ; preds = %while.end, %sw.default334, %if.end332, %if.then331, %if.end326, %if.then325, %if.end320, %if.then319, %sw.bb315, %if.end314, %if.then313, %if.end306, %if.then305, %if.end298, %if.then297, %if.then287, %sw.default246, %if.end203, %if.then202, %if.end195, %if.then194, %if.end187, %if.then186, %sw.bb177, %sw.bb175, %sw.bb173, %sw.epilog172, %sw.bb171, %sw.bb169, %sw.bb167, %sw.bb165, %if.then147, %sw.bb138, %if.end137, %if.then134, %if.then121, %if.then105, %sw.bb96, %sw.bb94, %sw.bb91, %for.end, %sw.default, %if.then56, %sw.epilog, %sw.bb50, %sw.bb47, %sw.bb44, %if.then26, %sw.bb16, %sw.bb, %if.then4, %if.then
  %228 = load i32, i32* %retval, align 4, !dbg !10347
  ret i32 %228, !dbg !10347
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_contentTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !350 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %n = alloca i64, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !10348, metadata !444), !dbg !10349
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10350, metadata !444), !dbg !10351
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10352, metadata !444), !dbg !10353
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !10354, metadata !444), !dbg !10355
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10356
  %1 = load i8*, i8** %end.addr, align 8, !dbg !10358
  %cmp = icmp uge i8* %0, %1, !dbg !10359
  br i1 %cmp, label %if.then, label %if.end, !dbg !10360

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !10361
  br label %return, !dbg !10361

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10362, metadata !444), !dbg !10365
  %2 = load i8*, i8** %end.addr, align 8, !dbg !10366
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !10367
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10368
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10368
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10368
  store i64 %sub.ptr.sub, i64* %n, align 8, !dbg !10365
  %4 = load i64, i64* %n, align 8, !dbg !10369
  %and = and i64 %4, 1, !dbg !10371
  %tobool = icmp ne i64 %and, 0, !dbg !10371
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !10372

if.then1:                                         ; preds = %if.end
  %5 = load i64, i64* %n, align 8, !dbg !10373
  %and2 = and i64 %5, -2, !dbg !10373
  store i64 %and2, i64* %n, align 8, !dbg !10373
  %6 = load i64, i64* %n, align 8, !dbg !10375
  %cmp3 = icmp eq i64 %6, 0, !dbg !10377
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !10378

if.then4:                                         ; preds = %if.then1
  store i32 -1, i32* %retval, align 4, !dbg !10379
  br label %return, !dbg !10379

if.end5:                                          ; preds = %if.then1
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !10380
  %8 = load i64, i64* %n, align 8, !dbg !10381
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !10382
  store i8* %add.ptr, i8** %end.addr, align 8, !dbg !10383
  br label %if.end6, !dbg !10384

if.end6:                                          ; preds = %if.end5, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !10385
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !10385
  %10 = load i8, i8* %arrayidx, align 1, !dbg !10385
  %conv = sext i8 %10 to i32, !dbg !10385
  %cmp7 = icmp eq i32 %conv, 0, !dbg !10385
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !10385

cond.true:                                        ; preds = %if.end6
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !10386
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !10386
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !10386
  %idxprom = zext i8 %12 to i64, !dbg !10386
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10386
  %14 = bitcast %struct.encoding* %13 to %struct.normal_encoding*, !dbg !10386
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %14, i32 0, i32 1, !dbg !10386
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !10386
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !10386
  %conv11 = zext i8 %15 to i32, !dbg !10386
  br label %cond.end, !dbg !10386

cond.false:                                       ; preds = %if.end6
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !10388
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !10388
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !10388
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !10388
  %arrayidx13 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !10388
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !10388
  %call = call i32 @unicode_byte_type(i8 signext %17, i8 signext %19), !dbg !10388
  br label %cond.end, !dbg !10388

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv11, %cond.true ], [ %call, %cond.false ], !dbg !10390
  switch i32 %cond, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb16
    i32 9, label %sw.bb19
    i32 10, label %sw.bb49
    i32 4, label %sw.bb51
    i32 5, label %sw.bb90
    i32 6, label %sw.bb99
    i32 7, label %sw.bb108
    i32 0, label %sw.bb117
    i32 1, label %sw.bb117
    i32 8, label %sw.bb117
  ], !dbg !10392

sw.bb:                                            ; preds = %cond.end
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10393
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !10395
  %add.ptr14 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !10396
  %22 = load i8*, i8** %end.addr, align 8, !dbg !10397
  %23 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10398
  %call15 = call i32 @big2_scanLt(%struct.encoding* %20, i8* %add.ptr14, i8* %22, i8** %23), !dbg !10399
  store i32 %call15, i32* %retval, align 4, !dbg !10400
  br label %return, !dbg !10400

sw.bb16:                                          ; preds = %cond.end
  %24 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10401
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !10402
  %add.ptr17 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !10403
  %26 = load i8*, i8** %end.addr, align 8, !dbg !10404
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10405
  %call18 = call i32 @big2_scanRef(%struct.encoding* %24, i8* %add.ptr17, i8* %26, i8** %27), !dbg !10406
  store i32 %call18, i32* %retval, align 4, !dbg !10407
  br label %return, !dbg !10407

sw.bb19:                                          ; preds = %cond.end
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !10408
  %add.ptr20 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !10408
  store i8* %add.ptr20, i8** %ptr.addr, align 8, !dbg !10408
  %29 = load i8*, i8** %end.addr, align 8, !dbg !10409
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !10409
  %sub.ptr.lhs.cast21 = ptrtoint i8* %29 to i64, !dbg !10409
  %sub.ptr.rhs.cast22 = ptrtoint i8* %30 to i64, !dbg !10409
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !10409
  %cmp24 = icmp sge i64 %sub.ptr.sub23, 2, !dbg !10409
  br i1 %cmp24, label %if.end27, label %if.then26, !dbg !10411

if.then26:                                        ; preds = %sw.bb19
  store i32 -3, i32* %retval, align 4, !dbg !10412
  br label %return, !dbg !10412

if.end27:                                         ; preds = %sw.bb19
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !10413
  %arrayidx28 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !10413
  %32 = load i8, i8* %arrayidx28, align 1, !dbg !10413
  %conv29 = sext i8 %32 to i32, !dbg !10413
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !10413
  br i1 %cmp30, label %cond.true32, label %cond.false38, !dbg !10413

cond.true32:                                      ; preds = %if.end27
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !10415
  %arrayidx33 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !10415
  %34 = load i8, i8* %arrayidx33, align 1, !dbg !10415
  %idxprom34 = zext i8 %34 to i64, !dbg !10415
  %35 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10415
  %36 = bitcast %struct.encoding* %35 to %struct.normal_encoding*, !dbg !10415
  %type35 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %36, i32 0, i32 1, !dbg !10415
  %arrayidx36 = getelementptr inbounds [256 x i8], [256 x i8]* %type35, i64 0, i64 %idxprom34, !dbg !10415
  %37 = load i8, i8* %arrayidx36, align 1, !dbg !10415
  %conv37 = zext i8 %37 to i32, !dbg !10415
  br label %cond.end42, !dbg !10415

cond.false38:                                     ; preds = %if.end27
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !10417
  %arrayidx39 = getelementptr inbounds i8, i8* %38, i64 0, !dbg !10417
  %39 = load i8, i8* %arrayidx39, align 1, !dbg !10417
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !10417
  %arrayidx40 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !10417
  %41 = load i8, i8* %arrayidx40, align 1, !dbg !10417
  %call41 = call i32 @unicode_byte_type(i8 signext %39, i8 signext %41), !dbg !10417
  br label %cond.end42, !dbg !10417

cond.end42:                                       ; preds = %cond.false38, %cond.true32
  %cond43 = phi i32 [ %conv37, %cond.true32 ], [ %call41, %cond.false38 ], !dbg !10419
  %cmp44 = icmp eq i32 %cond43, 10, !dbg !10421
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !10419

if.then46:                                        ; preds = %cond.end42
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !10422
  %add.ptr47 = getelementptr inbounds i8, i8* %42, i64 2, !dbg !10422
  store i8* %add.ptr47, i8** %ptr.addr, align 8, !dbg !10422
  br label %if.end48, !dbg !10423

if.end48:                                         ; preds = %if.then46, %cond.end42
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !10424
  %44 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10425
  store i8* %43, i8** %44, align 8, !dbg !10426
  store i32 7, i32* %retval, align 4, !dbg !10427
  br label %return, !dbg !10427

sw.bb49:                                          ; preds = %cond.end
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !10428
  %add.ptr50 = getelementptr inbounds i8, i8* %45, i64 2, !dbg !10429
  %46 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10430
  store i8* %add.ptr50, i8** %46, align 8, !dbg !10431
  store i32 7, i32* %retval, align 4, !dbg !10432
  br label %return, !dbg !10432

sw.bb51:                                          ; preds = %cond.end
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !10433
  %add.ptr52 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !10433
  store i8* %add.ptr52, i8** %ptr.addr, align 8, !dbg !10433
  %48 = load i8*, i8** %end.addr, align 8, !dbg !10434
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !10434
  %sub.ptr.lhs.cast53 = ptrtoint i8* %48 to i64, !dbg !10434
  %sub.ptr.rhs.cast54 = ptrtoint i8* %49 to i64, !dbg !10434
  %sub.ptr.sub55 = sub i64 %sub.ptr.lhs.cast53, %sub.ptr.rhs.cast54, !dbg !10434
  %cmp56 = icmp sge i64 %sub.ptr.sub55, 2, !dbg !10434
  br i1 %cmp56, label %if.end59, label %if.then58, !dbg !10436

if.then58:                                        ; preds = %sw.bb51
  store i32 -5, i32* %retval, align 4, !dbg !10437
  br label %return, !dbg !10437

if.end59:                                         ; preds = %sw.bb51
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !10438
  %arrayidx60 = getelementptr inbounds i8, i8* %50, i64 0, !dbg !10438
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !10438
  %conv61 = sext i8 %51 to i32, !dbg !10438
  %cmp62 = icmp eq i32 %conv61, 0, !dbg !10438
  br i1 %cmp62, label %land.lhs.true, label %if.then68, !dbg !10438

land.lhs.true:                                    ; preds = %if.end59
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !10440
  %arrayidx64 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !10440
  %53 = load i8, i8* %arrayidx64, align 1, !dbg !10440
  %conv65 = sext i8 %53 to i32, !dbg !10440
  %cmp66 = icmp eq i32 %conv65, 93, !dbg !10440
  br i1 %cmp66, label %if.end69, label %if.then68, !dbg !10442

if.then68:                                        ; preds = %land.lhs.true, %if.end59
  br label %sw.epilog, !dbg !10443

if.end69:                                         ; preds = %land.lhs.true
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !10444
  %add.ptr70 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !10444
  store i8* %add.ptr70, i8** %ptr.addr, align 8, !dbg !10444
  %55 = load i8*, i8** %end.addr, align 8, !dbg !10445
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !10445
  %sub.ptr.lhs.cast71 = ptrtoint i8* %55 to i64, !dbg !10445
  %sub.ptr.rhs.cast72 = ptrtoint i8* %56 to i64, !dbg !10445
  %sub.ptr.sub73 = sub i64 %sub.ptr.lhs.cast71, %sub.ptr.rhs.cast72, !dbg !10445
  %cmp74 = icmp sge i64 %sub.ptr.sub73, 2, !dbg !10445
  br i1 %cmp74, label %if.end77, label %if.then76, !dbg !10447

if.then76:                                        ; preds = %if.end69
  store i32 -5, i32* %retval, align 4, !dbg !10448
  br label %return, !dbg !10448

if.end77:                                         ; preds = %if.end69
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !10449
  %arrayidx78 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !10449
  %58 = load i8, i8* %arrayidx78, align 1, !dbg !10449
  %conv79 = sext i8 %58 to i32, !dbg !10449
  %cmp80 = icmp eq i32 %conv79, 0, !dbg !10449
  br i1 %cmp80, label %land.lhs.true82, label %if.then87, !dbg !10449

land.lhs.true82:                                  ; preds = %if.end77
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !10451
  %arrayidx83 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !10451
  %60 = load i8, i8* %arrayidx83, align 1, !dbg !10451
  %conv84 = sext i8 %60 to i32, !dbg !10451
  %cmp85 = icmp eq i32 %conv84, 62, !dbg !10451
  br i1 %cmp85, label %if.end89, label %if.then87, !dbg !10453

if.then87:                                        ; preds = %land.lhs.true82, %if.end77
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !10454
  %add.ptr88 = getelementptr inbounds i8, i8* %61, i64 -2, !dbg !10454
  store i8* %add.ptr88, i8** %ptr.addr, align 8, !dbg !10454
  br label %sw.epilog, !dbg !10456

if.end89:                                         ; preds = %land.lhs.true82
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !10457
  %63 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10458
  store i8* %62, i8** %63, align 8, !dbg !10459
  store i32 0, i32* %retval, align 4, !dbg !10460
  br label %return, !dbg !10460

sw.bb90:                                          ; preds = %cond.end
  %64 = load i8*, i8** %end.addr, align 8, !dbg !10461
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !10461
  %sub.ptr.lhs.cast91 = ptrtoint i8* %64 to i64, !dbg !10461
  %sub.ptr.rhs.cast92 = ptrtoint i8* %65 to i64, !dbg !10461
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92, !dbg !10461
  %cmp94 = icmp slt i64 %sub.ptr.sub93, 2, !dbg !10461
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !10463

if.then96:                                        ; preds = %sw.bb90
  store i32 -2, i32* %retval, align 4, !dbg !10464
  br label %return, !dbg !10464

if.end97:                                         ; preds = %sw.bb90
  %66 = load i8*, i8** %ptr.addr, align 8, !dbg !10466
  %add.ptr98 = getelementptr inbounds i8, i8* %66, i64 2, !dbg !10466
  store i8* %add.ptr98, i8** %ptr.addr, align 8, !dbg !10466
  br label %sw.epilog, !dbg !10466

sw.bb99:                                          ; preds = %cond.end
  %67 = load i8*, i8** %end.addr, align 8, !dbg !10468
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !10468
  %sub.ptr.lhs.cast100 = ptrtoint i8* %67 to i64, !dbg !10468
  %sub.ptr.rhs.cast101 = ptrtoint i8* %68 to i64, !dbg !10468
  %sub.ptr.sub102 = sub i64 %sub.ptr.lhs.cast100, %sub.ptr.rhs.cast101, !dbg !10468
  %cmp103 = icmp slt i64 %sub.ptr.sub102, 3, !dbg !10468
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !10468

if.then105:                                       ; preds = %sw.bb99
  store i32 -2, i32* %retval, align 4, !dbg !10471
  br label %return, !dbg !10471

if.end106:                                        ; preds = %sw.bb99
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !10473
  %add.ptr107 = getelementptr inbounds i8, i8* %69, i64 3, !dbg !10473
  store i8* %add.ptr107, i8** %ptr.addr, align 8, !dbg !10473
  br label %sw.epilog, !dbg !10473

sw.bb108:                                         ; preds = %cond.end
  %70 = load i8*, i8** %end.addr, align 8, !dbg !10475
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !10475
  %sub.ptr.lhs.cast109 = ptrtoint i8* %70 to i64, !dbg !10475
  %sub.ptr.rhs.cast110 = ptrtoint i8* %71 to i64, !dbg !10475
  %sub.ptr.sub111 = sub i64 %sub.ptr.lhs.cast109, %sub.ptr.rhs.cast110, !dbg !10475
  %cmp112 = icmp slt i64 %sub.ptr.sub111, 4, !dbg !10475
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !10475

if.then114:                                       ; preds = %sw.bb108
  store i32 -2, i32* %retval, align 4, !dbg !10478
  br label %return, !dbg !10478

if.end115:                                        ; preds = %sw.bb108
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !10480
  %add.ptr116 = getelementptr inbounds i8, i8* %72, i64 4, !dbg !10480
  store i8* %add.ptr116, i8** %ptr.addr, align 8, !dbg !10480
  br label %sw.epilog, !dbg !10480

sw.bb117:                                         ; preds = %cond.end, %cond.end, %cond.end
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !10482
  %74 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10482
  store i8* %73, i8** %74, align 8, !dbg !10482
  store i32 0, i32* %retval, align 4, !dbg !10482
  br label %return, !dbg !10482

sw.default:                                       ; preds = %cond.end
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !10484
  %add.ptr118 = getelementptr inbounds i8, i8* %75, i64 2, !dbg !10484
  store i8* %add.ptr118, i8** %ptr.addr, align 8, !dbg !10484
  br label %sw.epilog, !dbg !10485

sw.epilog:                                        ; preds = %sw.default, %if.end115, %if.end106, %if.end97, %if.then87, %if.then68
  br label %while.cond, !dbg !10486

while.cond:                                       ; preds = %sw.epilog214, %sw.epilog
  %76 = load i8*, i8** %end.addr, align 8, !dbg !10487
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !10487
  %sub.ptr.lhs.cast119 = ptrtoint i8* %76 to i64, !dbg !10487
  %sub.ptr.rhs.cast120 = ptrtoint i8* %77 to i64, !dbg !10487
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120, !dbg !10487
  %cmp122 = icmp sge i64 %sub.ptr.sub121, 2, !dbg !10487
  br i1 %cmp122, label %while.body, label %while.end, !dbg !10488

while.body:                                       ; preds = %while.cond
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !10489
  %arrayidx124 = getelementptr inbounds i8, i8* %78, i64 0, !dbg !10489
  %79 = load i8, i8* %arrayidx124, align 1, !dbg !10489
  %conv125 = sext i8 %79 to i32, !dbg !10489
  %cmp126 = icmp eq i32 %conv125, 0, !dbg !10489
  br i1 %cmp126, label %cond.true128, label %cond.false134, !dbg !10489

cond.true128:                                     ; preds = %while.body
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !10491
  %arrayidx129 = getelementptr inbounds i8, i8* %80, i64 1, !dbg !10491
  %81 = load i8, i8* %arrayidx129, align 1, !dbg !10491
  %idxprom130 = zext i8 %81 to i64, !dbg !10491
  %82 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10491
  %83 = bitcast %struct.encoding* %82 to %struct.normal_encoding*, !dbg !10491
  %type131 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %83, i32 0, i32 1, !dbg !10491
  %arrayidx132 = getelementptr inbounds [256 x i8], [256 x i8]* %type131, i64 0, i64 %idxprom130, !dbg !10491
  %84 = load i8, i8* %arrayidx132, align 1, !dbg !10491
  %conv133 = zext i8 %84 to i32, !dbg !10491
  br label %cond.end138, !dbg !10491

cond.false134:                                    ; preds = %while.body
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !10493
  %arrayidx135 = getelementptr inbounds i8, i8* %85, i64 0, !dbg !10493
  %86 = load i8, i8* %arrayidx135, align 1, !dbg !10493
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !10493
  %arrayidx136 = getelementptr inbounds i8, i8* %87, i64 1, !dbg !10493
  %88 = load i8, i8* %arrayidx136, align 1, !dbg !10493
  %call137 = call i32 @unicode_byte_type(i8 signext %86, i8 signext %88), !dbg !10493
  br label %cond.end138, !dbg !10493

cond.end138:                                      ; preds = %cond.false134, %cond.true128
  %cond139 = phi i32 [ %conv133, %cond.true128 ], [ %call137, %cond.false134 ], !dbg !10495
  switch i32 %cond139, label %sw.default212 [
    i32 5, label %sw.bb140
    i32 6, label %sw.bb149
    i32 7, label %sw.bb158
    i32 4, label %sw.bb167
    i32 3, label %sw.bb211
    i32 2, label %sw.bb211
    i32 0, label %sw.bb211
    i32 1, label %sw.bb211
    i32 8, label %sw.bb211
    i32 9, label %sw.bb211
    i32 10, label %sw.bb211
  ], !dbg !10497

sw.bb140:                                         ; preds = %cond.end138
  %89 = load i8*, i8** %end.addr, align 8, !dbg !10498
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !10498
  %sub.ptr.lhs.cast141 = ptrtoint i8* %89 to i64, !dbg !10498
  %sub.ptr.rhs.cast142 = ptrtoint i8* %90 to i64, !dbg !10498
  %sub.ptr.sub143 = sub i64 %sub.ptr.lhs.cast141, %sub.ptr.rhs.cast142, !dbg !10498
  %cmp144 = icmp slt i64 %sub.ptr.sub143, 2, !dbg !10498
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !10501

if.then146:                                       ; preds = %sw.bb140
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !10502
  %92 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10502
  store i8* %91, i8** %92, align 8, !dbg !10502
  store i32 6, i32* %retval, align 4, !dbg !10502
  br label %return, !dbg !10502

if.end147:                                        ; preds = %sw.bb140
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !10505
  %add.ptr148 = getelementptr inbounds i8, i8* %93, i64 2, !dbg !10505
  store i8* %add.ptr148, i8** %ptr.addr, align 8, !dbg !10505
  br label %sw.epilog214, !dbg !10505

sw.bb149:                                         ; preds = %cond.end138
  %94 = load i8*, i8** %end.addr, align 8, !dbg !10507
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !10507
  %sub.ptr.lhs.cast150 = ptrtoint i8* %94 to i64, !dbg !10507
  %sub.ptr.rhs.cast151 = ptrtoint i8* %95 to i64, !dbg !10507
  %sub.ptr.sub152 = sub i64 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast151, !dbg !10507
  %cmp153 = icmp slt i64 %sub.ptr.sub152, 3, !dbg !10507
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !10507

if.then155:                                       ; preds = %sw.bb149
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !10510
  %97 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10510
  store i8* %96, i8** %97, align 8, !dbg !10510
  store i32 6, i32* %retval, align 4, !dbg !10510
  br label %return, !dbg !10510

if.end156:                                        ; preds = %sw.bb149
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !10513
  %add.ptr157 = getelementptr inbounds i8, i8* %98, i64 3, !dbg !10513
  store i8* %add.ptr157, i8** %ptr.addr, align 8, !dbg !10513
  br label %sw.epilog214, !dbg !10513

sw.bb158:                                         ; preds = %cond.end138
  %99 = load i8*, i8** %end.addr, align 8, !dbg !10515
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !10515
  %sub.ptr.lhs.cast159 = ptrtoint i8* %99 to i64, !dbg !10515
  %sub.ptr.rhs.cast160 = ptrtoint i8* %100 to i64, !dbg !10515
  %sub.ptr.sub161 = sub i64 %sub.ptr.lhs.cast159, %sub.ptr.rhs.cast160, !dbg !10515
  %cmp162 = icmp slt i64 %sub.ptr.sub161, 4, !dbg !10515
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !10515

if.then164:                                       ; preds = %sw.bb158
  %101 = load i8*, i8** %ptr.addr, align 8, !dbg !10518
  %102 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10518
  store i8* %101, i8** %102, align 8, !dbg !10518
  store i32 6, i32* %retval, align 4, !dbg !10518
  br label %return, !dbg !10518

if.end165:                                        ; preds = %sw.bb158
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !10521
  %add.ptr166 = getelementptr inbounds i8, i8* %103, i64 4, !dbg !10521
  store i8* %add.ptr166, i8** %ptr.addr, align 8, !dbg !10521
  br label %sw.epilog214, !dbg !10521

sw.bb167:                                         ; preds = %cond.end138
  %104 = load i8*, i8** %end.addr, align 8, !dbg !10523
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !10523
  %sub.ptr.lhs.cast168 = ptrtoint i8* %104 to i64, !dbg !10523
  %sub.ptr.rhs.cast169 = ptrtoint i8* %105 to i64, !dbg !10523
  %sub.ptr.sub170 = sub i64 %sub.ptr.lhs.cast168, %sub.ptr.rhs.cast169, !dbg !10523
  %cmp171 = icmp sge i64 %sub.ptr.sub170, 4, !dbg !10523
  br i1 %cmp171, label %if.then173, label %if.end210, !dbg !10525

if.then173:                                       ; preds = %sw.bb167
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !10526
  %add.ptr174 = getelementptr inbounds i8, i8* %106, i64 2, !dbg !10526
  %arrayidx175 = getelementptr inbounds i8, i8* %add.ptr174, i64 0, !dbg !10526
  %107 = load i8, i8* %arrayidx175, align 1, !dbg !10526
  %conv176 = sext i8 %107 to i32, !dbg !10526
  %cmp177 = icmp eq i32 %conv176, 0, !dbg !10526
  br i1 %cmp177, label %land.lhs.true179, label %if.then185, !dbg !10526

land.lhs.true179:                                 ; preds = %if.then173
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !10529
  %add.ptr180 = getelementptr inbounds i8, i8* %108, i64 2, !dbg !10529
  %arrayidx181 = getelementptr inbounds i8, i8* %add.ptr180, i64 1, !dbg !10529
  %109 = load i8, i8* %arrayidx181, align 1, !dbg !10529
  %conv182 = sext i8 %109 to i32, !dbg !10529
  %cmp183 = icmp eq i32 %conv182, 93, !dbg !10529
  br i1 %cmp183, label %if.end187, label %if.then185, !dbg !10531

if.then185:                                       ; preds = %land.lhs.true179, %if.then173
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !10532
  %add.ptr186 = getelementptr inbounds i8, i8* %110, i64 2, !dbg !10532
  store i8* %add.ptr186, i8** %ptr.addr, align 8, !dbg !10532
  br label %sw.epilog214, !dbg !10534

if.end187:                                        ; preds = %land.lhs.true179
  %111 = load i8*, i8** %end.addr, align 8, !dbg !10535
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !10535
  %sub.ptr.lhs.cast188 = ptrtoint i8* %111 to i64, !dbg !10535
  %sub.ptr.rhs.cast189 = ptrtoint i8* %112 to i64, !dbg !10535
  %sub.ptr.sub190 = sub i64 %sub.ptr.lhs.cast188, %sub.ptr.rhs.cast189, !dbg !10535
  %cmp191 = icmp sge i64 %sub.ptr.sub190, 6, !dbg !10535
  br i1 %cmp191, label %if.then193, label %if.end209, !dbg !10537

if.then193:                                       ; preds = %if.end187
  %113 = load i8*, i8** %ptr.addr, align 8, !dbg !10538
  %add.ptr194 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !10538
  %arrayidx195 = getelementptr inbounds i8, i8* %add.ptr194, i64 0, !dbg !10538
  %114 = load i8, i8* %arrayidx195, align 1, !dbg !10538
  %conv196 = sext i8 %114 to i32, !dbg !10538
  %cmp197 = icmp eq i32 %conv196, 0, !dbg !10538
  br i1 %cmp197, label %land.lhs.true199, label %if.then205, !dbg !10538

land.lhs.true199:                                 ; preds = %if.then193
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !10541
  %add.ptr200 = getelementptr inbounds i8, i8* %115, i64 4, !dbg !10541
  %arrayidx201 = getelementptr inbounds i8, i8* %add.ptr200, i64 1, !dbg !10541
  %116 = load i8, i8* %arrayidx201, align 1, !dbg !10541
  %conv202 = sext i8 %116 to i32, !dbg !10541
  %cmp203 = icmp eq i32 %conv202, 62, !dbg !10541
  br i1 %cmp203, label %if.end207, label %if.then205, !dbg !10543

if.then205:                                       ; preds = %land.lhs.true199, %if.then193
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !10544
  %add.ptr206 = getelementptr inbounds i8, i8* %117, i64 2, !dbg !10544
  store i8* %add.ptr206, i8** %ptr.addr, align 8, !dbg !10544
  br label %sw.epilog214, !dbg !10546

if.end207:                                        ; preds = %land.lhs.true199
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !10547
  %add.ptr208 = getelementptr inbounds i8, i8* %118, i64 4, !dbg !10548
  %119 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10549
  store i8* %add.ptr208, i8** %119, align 8, !dbg !10550
  store i32 0, i32* %retval, align 4, !dbg !10551
  br label %return, !dbg !10551

if.end209:                                        ; preds = %if.end187
  br label %if.end210, !dbg !10552

if.end210:                                        ; preds = %if.end209, %sw.bb167
  br label %sw.bb211, !dbg !10553

sw.bb211:                                         ; preds = %cond.end138, %cond.end138, %cond.end138, %cond.end138, %cond.end138, %cond.end138, %cond.end138, %if.end210
  %120 = load i8*, i8** %ptr.addr, align 8, !dbg !10555
  %121 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10556
  store i8* %120, i8** %121, align 8, !dbg !10557
  store i32 6, i32* %retval, align 4, !dbg !10558
  br label %return, !dbg !10558

sw.default212:                                    ; preds = %cond.end138
  %122 = load i8*, i8** %ptr.addr, align 8, !dbg !10559
  %add.ptr213 = getelementptr inbounds i8, i8* %122, i64 2, !dbg !10559
  store i8* %add.ptr213, i8** %ptr.addr, align 8, !dbg !10559
  br label %sw.epilog214, !dbg !10560

sw.epilog214:                                     ; preds = %sw.default212, %if.then205, %if.then185, %if.end165, %if.end156, %if.end147
  br label %while.cond, !dbg !10561

while.end:                                        ; preds = %while.cond
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !10562
  %124 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10563
  store i8* %123, i8** %124, align 8, !dbg !10564
  store i32 6, i32* %retval, align 4, !dbg !10565
  br label %return, !dbg !10565

return:                                           ; preds = %while.end, %sw.bb211, %if.end207, %if.then164, %if.then155, %if.then146, %sw.bb117, %if.then114, %if.then105, %if.then96, %if.end89, %if.then76, %if.then58, %sw.bb49, %if.end48, %if.then26, %sw.bb16, %sw.bb, %if.then4, %if.then
  %125 = load i32, i32* %retval, align 4, !dbg !10566
  ret i32 %125, !dbg !10566
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_cdataSectionTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !358 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %n = alloca i64, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !10567, metadata !444), !dbg !10568
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10569, metadata !444), !dbg !10570
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10571, metadata !444), !dbg !10572
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !10573, metadata !444), !dbg !10574
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10575
  %1 = load i8*, i8** %end.addr, align 8, !dbg !10577
  %cmp = icmp uge i8* %0, %1, !dbg !10578
  br i1 %cmp, label %if.then, label %if.end, !dbg !10579

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !10580
  br label %return, !dbg !10580

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10581, metadata !444), !dbg !10584
  %2 = load i8*, i8** %end.addr, align 8, !dbg !10585
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !10586
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10587
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10587
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10587
  store i64 %sub.ptr.sub, i64* %n, align 8, !dbg !10584
  %4 = load i64, i64* %n, align 8, !dbg !10588
  %and = and i64 %4, 1, !dbg !10590
  %tobool = icmp ne i64 %and, 0, !dbg !10590
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !10591

if.then1:                                         ; preds = %if.end
  %5 = load i64, i64* %n, align 8, !dbg !10592
  %and2 = and i64 %5, -2, !dbg !10592
  store i64 %and2, i64* %n, align 8, !dbg !10592
  %6 = load i64, i64* %n, align 8, !dbg !10594
  %cmp3 = icmp eq i64 %6, 0, !dbg !10596
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !10597

if.then4:                                         ; preds = %if.then1
  store i32 -1, i32* %retval, align 4, !dbg !10598
  br label %return, !dbg !10598

if.end5:                                          ; preds = %if.then1
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !10599
  %8 = load i64, i64* %n, align 8, !dbg !10600
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !10601
  store i8* %add.ptr, i8** %end.addr, align 8, !dbg !10602
  br label %if.end6, !dbg !10603

if.end6:                                          ; preds = %if.end5, %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !10604
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !10604
  %10 = load i8, i8* %arrayidx, align 1, !dbg !10604
  %conv = sext i8 %10 to i32, !dbg !10604
  %cmp7 = icmp eq i32 %conv, 0, !dbg !10604
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !10604

cond.true:                                        ; preds = %if.end6
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !10605
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !10605
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !10605
  %idxprom = zext i8 %12 to i64, !dbg !10605
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10605
  %14 = bitcast %struct.encoding* %13 to %struct.normal_encoding*, !dbg !10605
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %14, i32 0, i32 1, !dbg !10605
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !10605
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !10605
  %conv11 = zext i8 %15 to i32, !dbg !10605
  br label %cond.end, !dbg !10605

cond.false:                                       ; preds = %if.end6
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !10607
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !10607
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !10607
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !10607
  %arrayidx13 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !10607
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !10607
  %call = call i32 @unicode_byte_type(i8 signext %17, i8 signext %19), !dbg !10607
  br label %cond.end, !dbg !10607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv11, %cond.true ], [ %call, %cond.false ], !dbg !10609
  switch i32 %cond, label %sw.default [
    i32 4, label %sw.bb
    i32 9, label %sw.bb53
    i32 10, label %sw.bb83
    i32 5, label %sw.bb85
    i32 6, label %sw.bb94
    i32 7, label %sw.bb103
    i32 0, label %sw.bb112
    i32 1, label %sw.bb112
    i32 8, label %sw.bb112
  ], !dbg !10611

sw.bb:                                            ; preds = %cond.end
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !10612
  %add.ptr14 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !10612
  store i8* %add.ptr14, i8** %ptr.addr, align 8, !dbg !10612
  %21 = load i8*, i8** %end.addr, align 8, !dbg !10614
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !10614
  %sub.ptr.lhs.cast15 = ptrtoint i8* %21 to i64, !dbg !10614
  %sub.ptr.rhs.cast16 = ptrtoint i8* %22 to i64, !dbg !10614
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !10614
  %cmp18 = icmp sge i64 %sub.ptr.sub17, 2, !dbg !10614
  br i1 %cmp18, label %if.end21, label %if.then20, !dbg !10617

if.then20:                                        ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !10618
  br label %return, !dbg !10618

if.end21:                                         ; preds = %sw.bb
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !10621
  %arrayidx22 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !10621
  %24 = load i8, i8* %arrayidx22, align 1, !dbg !10621
  %conv23 = sext i8 %24 to i32, !dbg !10621
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !10621
  br i1 %cmp24, label %land.lhs.true, label %if.then30, !dbg !10621

land.lhs.true:                                    ; preds = %if.end21
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !10623
  %arrayidx26 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !10623
  %26 = load i8, i8* %arrayidx26, align 1, !dbg !10623
  %conv27 = sext i8 %26 to i32, !dbg !10623
  %cmp28 = icmp eq i32 %conv27, 93, !dbg !10623
  br i1 %cmp28, label %if.end31, label %if.then30, !dbg !10625

if.then30:                                        ; preds = %land.lhs.true, %if.end21
  br label %sw.epilog, !dbg !10626

if.end31:                                         ; preds = %land.lhs.true
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !10627
  %add.ptr32 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !10627
  store i8* %add.ptr32, i8** %ptr.addr, align 8, !dbg !10627
  %28 = load i8*, i8** %end.addr, align 8, !dbg !10628
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !10628
  %sub.ptr.lhs.cast33 = ptrtoint i8* %28 to i64, !dbg !10628
  %sub.ptr.rhs.cast34 = ptrtoint i8* %29 to i64, !dbg !10628
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !10628
  %cmp36 = icmp sge i64 %sub.ptr.sub35, 2, !dbg !10628
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !10631

if.then38:                                        ; preds = %if.end31
  store i32 -1, i32* %retval, align 4, !dbg !10632
  br label %return, !dbg !10632

if.end39:                                         ; preds = %if.end31
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !10635
  %arrayidx40 = getelementptr inbounds i8, i8* %30, i64 0, !dbg !10635
  %31 = load i8, i8* %arrayidx40, align 1, !dbg !10635
  %conv41 = sext i8 %31 to i32, !dbg !10635
  %cmp42 = icmp eq i32 %conv41, 0, !dbg !10635
  br i1 %cmp42, label %land.lhs.true44, label %if.then49, !dbg !10635

land.lhs.true44:                                  ; preds = %if.end39
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !10637
  %arrayidx45 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !10637
  %33 = load i8, i8* %arrayidx45, align 1, !dbg !10637
  %conv46 = sext i8 %33 to i32, !dbg !10637
  %cmp47 = icmp eq i32 %conv46, 62, !dbg !10637
  br i1 %cmp47, label %if.end51, label %if.then49, !dbg !10639

if.then49:                                        ; preds = %land.lhs.true44, %if.end39
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !10640
  %add.ptr50 = getelementptr inbounds i8, i8* %34, i64 -2, !dbg !10640
  store i8* %add.ptr50, i8** %ptr.addr, align 8, !dbg !10640
  br label %sw.epilog, !dbg !10642

if.end51:                                         ; preds = %land.lhs.true44
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !10643
  %add.ptr52 = getelementptr inbounds i8, i8* %35, i64 2, !dbg !10644
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10645
  store i8* %add.ptr52, i8** %36, align 8, !dbg !10646
  store i32 40, i32* %retval, align 4, !dbg !10647
  br label %return, !dbg !10647

sw.bb53:                                          ; preds = %cond.end
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !10648
  %add.ptr54 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !10648
  store i8* %add.ptr54, i8** %ptr.addr, align 8, !dbg !10648
  %38 = load i8*, i8** %end.addr, align 8, !dbg !10649
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !10649
  %sub.ptr.lhs.cast55 = ptrtoint i8* %38 to i64, !dbg !10649
  %sub.ptr.rhs.cast56 = ptrtoint i8* %39 to i64, !dbg !10649
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !10649
  %cmp58 = icmp sge i64 %sub.ptr.sub57, 2, !dbg !10649
  br i1 %cmp58, label %if.end61, label %if.then60, !dbg !10652

if.then60:                                        ; preds = %sw.bb53
  store i32 -1, i32* %retval, align 4, !dbg !10653
  br label %return, !dbg !10653

if.end61:                                         ; preds = %sw.bb53
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !10656
  %arrayidx62 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !10656
  %41 = load i8, i8* %arrayidx62, align 1, !dbg !10656
  %conv63 = sext i8 %41 to i32, !dbg !10656
  %cmp64 = icmp eq i32 %conv63, 0, !dbg !10656
  br i1 %cmp64, label %cond.true66, label %cond.false72, !dbg !10656

cond.true66:                                      ; preds = %if.end61
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !10658
  %arrayidx67 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !10658
  %43 = load i8, i8* %arrayidx67, align 1, !dbg !10658
  %idxprom68 = zext i8 %43 to i64, !dbg !10658
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10658
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !10658
  %type69 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !10658
  %arrayidx70 = getelementptr inbounds [256 x i8], [256 x i8]* %type69, i64 0, i64 %idxprom68, !dbg !10658
  %46 = load i8, i8* %arrayidx70, align 1, !dbg !10658
  %conv71 = zext i8 %46 to i32, !dbg !10658
  br label %cond.end76, !dbg !10658

cond.false72:                                     ; preds = %if.end61
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !10660
  %arrayidx73 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !10660
  %48 = load i8, i8* %arrayidx73, align 1, !dbg !10660
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !10660
  %arrayidx74 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !10660
  %50 = load i8, i8* %arrayidx74, align 1, !dbg !10660
  %call75 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !10660
  br label %cond.end76, !dbg !10660

cond.end76:                                       ; preds = %cond.false72, %cond.true66
  %cond77 = phi i32 [ %conv71, %cond.true66 ], [ %call75, %cond.false72 ], !dbg !10662
  %cmp78 = icmp eq i32 %cond77, 10, !dbg !10664
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !10662

if.then80:                                        ; preds = %cond.end76
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !10665
  %add.ptr81 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !10665
  store i8* %add.ptr81, i8** %ptr.addr, align 8, !dbg !10665
  br label %if.end82, !dbg !10666

if.end82:                                         ; preds = %if.then80, %cond.end76
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !10667
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10668
  store i8* %52, i8** %53, align 8, !dbg !10669
  store i32 7, i32* %retval, align 4, !dbg !10670
  br label %return, !dbg !10670

sw.bb83:                                          ; preds = %cond.end
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !10671
  %add.ptr84 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !10672
  %55 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10673
  store i8* %add.ptr84, i8** %55, align 8, !dbg !10674
  store i32 7, i32* %retval, align 4, !dbg !10675
  br label %return, !dbg !10675

sw.bb85:                                          ; preds = %cond.end
  %56 = load i8*, i8** %end.addr, align 8, !dbg !10676
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !10676
  %sub.ptr.lhs.cast86 = ptrtoint i8* %56 to i64, !dbg !10676
  %sub.ptr.rhs.cast87 = ptrtoint i8* %57 to i64, !dbg !10676
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87, !dbg !10676
  %cmp89 = icmp slt i64 %sub.ptr.sub88, 2, !dbg !10676
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !10678

if.then91:                                        ; preds = %sw.bb85
  store i32 -2, i32* %retval, align 4, !dbg !10679
  br label %return, !dbg !10679

if.end92:                                         ; preds = %sw.bb85
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !10681
  %add.ptr93 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !10681
  store i8* %add.ptr93, i8** %ptr.addr, align 8, !dbg !10681
  br label %sw.epilog, !dbg !10681

sw.bb94:                                          ; preds = %cond.end
  %59 = load i8*, i8** %end.addr, align 8, !dbg !10683
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !10683
  %sub.ptr.lhs.cast95 = ptrtoint i8* %59 to i64, !dbg !10683
  %sub.ptr.rhs.cast96 = ptrtoint i8* %60 to i64, !dbg !10683
  %sub.ptr.sub97 = sub i64 %sub.ptr.lhs.cast95, %sub.ptr.rhs.cast96, !dbg !10683
  %cmp98 = icmp slt i64 %sub.ptr.sub97, 3, !dbg !10683
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !10683

if.then100:                                       ; preds = %sw.bb94
  store i32 -2, i32* %retval, align 4, !dbg !10686
  br label %return, !dbg !10686

if.end101:                                        ; preds = %sw.bb94
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !10688
  %add.ptr102 = getelementptr inbounds i8, i8* %61, i64 3, !dbg !10688
  store i8* %add.ptr102, i8** %ptr.addr, align 8, !dbg !10688
  br label %sw.epilog, !dbg !10688

sw.bb103:                                         ; preds = %cond.end
  %62 = load i8*, i8** %end.addr, align 8, !dbg !10690
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !10690
  %sub.ptr.lhs.cast104 = ptrtoint i8* %62 to i64, !dbg !10690
  %sub.ptr.rhs.cast105 = ptrtoint i8* %63 to i64, !dbg !10690
  %sub.ptr.sub106 = sub i64 %sub.ptr.lhs.cast104, %sub.ptr.rhs.cast105, !dbg !10690
  %cmp107 = icmp slt i64 %sub.ptr.sub106, 4, !dbg !10690
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !10690

if.then109:                                       ; preds = %sw.bb103
  store i32 -2, i32* %retval, align 4, !dbg !10693
  br label %return, !dbg !10693

if.end110:                                        ; preds = %sw.bb103
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !10695
  %add.ptr111 = getelementptr inbounds i8, i8* %64, i64 4, !dbg !10695
  store i8* %add.ptr111, i8** %ptr.addr, align 8, !dbg !10695
  br label %sw.epilog, !dbg !10695

sw.bb112:                                         ; preds = %cond.end, %cond.end, %cond.end
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !10697
  %66 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10697
  store i8* %65, i8** %66, align 8, !dbg !10697
  store i32 0, i32* %retval, align 4, !dbg !10697
  br label %return, !dbg !10697

sw.default:                                       ; preds = %cond.end
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !10699
  %add.ptr113 = getelementptr inbounds i8, i8* %67, i64 2, !dbg !10699
  store i8* %add.ptr113, i8** %ptr.addr, align 8, !dbg !10699
  br label %sw.epilog, !dbg !10700

sw.epilog:                                        ; preds = %sw.default, %if.end110, %if.end101, %if.end92, %if.then49, %if.then30
  br label %while.cond, !dbg !10701

while.cond:                                       ; preds = %sw.epilog165, %sw.epilog
  %68 = load i8*, i8** %end.addr, align 8, !dbg !10702
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !10702
  %sub.ptr.lhs.cast114 = ptrtoint i8* %68 to i64, !dbg !10702
  %sub.ptr.rhs.cast115 = ptrtoint i8* %69 to i64, !dbg !10702
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast114, %sub.ptr.rhs.cast115, !dbg !10702
  %cmp117 = icmp sge i64 %sub.ptr.sub116, 2, !dbg !10702
  br i1 %cmp117, label %while.body, label %while.end, !dbg !10703

while.body:                                       ; preds = %while.cond
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !10704
  %arrayidx119 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !10704
  %71 = load i8, i8* %arrayidx119, align 1, !dbg !10704
  %conv120 = sext i8 %71 to i32, !dbg !10704
  %cmp121 = icmp eq i32 %conv120, 0, !dbg !10704
  br i1 %cmp121, label %cond.true123, label %cond.false129, !dbg !10704

cond.true123:                                     ; preds = %while.body
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !10706
  %arrayidx124 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !10706
  %73 = load i8, i8* %arrayidx124, align 1, !dbg !10706
  %idxprom125 = zext i8 %73 to i64, !dbg !10706
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10706
  %75 = bitcast %struct.encoding* %74 to %struct.normal_encoding*, !dbg !10706
  %type126 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %75, i32 0, i32 1, !dbg !10706
  %arrayidx127 = getelementptr inbounds [256 x i8], [256 x i8]* %type126, i64 0, i64 %idxprom125, !dbg !10706
  %76 = load i8, i8* %arrayidx127, align 1, !dbg !10706
  %conv128 = zext i8 %76 to i32, !dbg !10706
  br label %cond.end133, !dbg !10706

cond.false129:                                    ; preds = %while.body
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !10708
  %arrayidx130 = getelementptr inbounds i8, i8* %77, i64 0, !dbg !10708
  %78 = load i8, i8* %arrayidx130, align 1, !dbg !10708
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !10708
  %arrayidx131 = getelementptr inbounds i8, i8* %79, i64 1, !dbg !10708
  %80 = load i8, i8* %arrayidx131, align 1, !dbg !10708
  %call132 = call i32 @unicode_byte_type(i8 signext %78, i8 signext %80), !dbg !10708
  br label %cond.end133, !dbg !10708

cond.end133:                                      ; preds = %cond.false129, %cond.true123
  %cond134 = phi i32 [ %conv128, %cond.true123 ], [ %call132, %cond.false129 ], !dbg !10710
  switch i32 %cond134, label %sw.default163 [
    i32 5, label %sw.bb135
    i32 6, label %sw.bb144
    i32 7, label %sw.bb153
    i32 0, label %sw.bb162
    i32 1, label %sw.bb162
    i32 8, label %sw.bb162
    i32 9, label %sw.bb162
    i32 10, label %sw.bb162
    i32 4, label %sw.bb162
  ], !dbg !10712

sw.bb135:                                         ; preds = %cond.end133
  %81 = load i8*, i8** %end.addr, align 8, !dbg !10713
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !10713
  %sub.ptr.lhs.cast136 = ptrtoint i8* %81 to i64, !dbg !10713
  %sub.ptr.rhs.cast137 = ptrtoint i8* %82 to i64, !dbg !10713
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137, !dbg !10713
  %cmp139 = icmp slt i64 %sub.ptr.sub138, 2, !dbg !10713
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !10716

if.then141:                                       ; preds = %sw.bb135
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !10717
  %84 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10717
  store i8* %83, i8** %84, align 8, !dbg !10717
  store i32 6, i32* %retval, align 4, !dbg !10717
  br label %return, !dbg !10717

if.end142:                                        ; preds = %sw.bb135
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !10720
  %add.ptr143 = getelementptr inbounds i8, i8* %85, i64 2, !dbg !10720
  store i8* %add.ptr143, i8** %ptr.addr, align 8, !dbg !10720
  br label %sw.epilog165, !dbg !10720

sw.bb144:                                         ; preds = %cond.end133
  %86 = load i8*, i8** %end.addr, align 8, !dbg !10722
  %87 = load i8*, i8** %ptr.addr, align 8, !dbg !10722
  %sub.ptr.lhs.cast145 = ptrtoint i8* %86 to i64, !dbg !10722
  %sub.ptr.rhs.cast146 = ptrtoint i8* %87 to i64, !dbg !10722
  %sub.ptr.sub147 = sub i64 %sub.ptr.lhs.cast145, %sub.ptr.rhs.cast146, !dbg !10722
  %cmp148 = icmp slt i64 %sub.ptr.sub147, 3, !dbg !10722
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !10722

if.then150:                                       ; preds = %sw.bb144
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !10725
  %89 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10725
  store i8* %88, i8** %89, align 8, !dbg !10725
  store i32 6, i32* %retval, align 4, !dbg !10725
  br label %return, !dbg !10725

if.end151:                                        ; preds = %sw.bb144
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !10728
  %add.ptr152 = getelementptr inbounds i8, i8* %90, i64 3, !dbg !10728
  store i8* %add.ptr152, i8** %ptr.addr, align 8, !dbg !10728
  br label %sw.epilog165, !dbg !10728

sw.bb153:                                         ; preds = %cond.end133
  %91 = load i8*, i8** %end.addr, align 8, !dbg !10730
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !10730
  %sub.ptr.lhs.cast154 = ptrtoint i8* %91 to i64, !dbg !10730
  %sub.ptr.rhs.cast155 = ptrtoint i8* %92 to i64, !dbg !10730
  %sub.ptr.sub156 = sub i64 %sub.ptr.lhs.cast154, %sub.ptr.rhs.cast155, !dbg !10730
  %cmp157 = icmp slt i64 %sub.ptr.sub156, 4, !dbg !10730
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !10730

if.then159:                                       ; preds = %sw.bb153
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !10733
  %94 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10733
  store i8* %93, i8** %94, align 8, !dbg !10733
  store i32 6, i32* %retval, align 4, !dbg !10733
  br label %return, !dbg !10733

if.end160:                                        ; preds = %sw.bb153
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !10736
  %add.ptr161 = getelementptr inbounds i8, i8* %95, i64 4, !dbg !10736
  store i8* %add.ptr161, i8** %ptr.addr, align 8, !dbg !10736
  br label %sw.epilog165, !dbg !10736

sw.bb162:                                         ; preds = %cond.end133, %cond.end133, %cond.end133, %cond.end133, %cond.end133, %cond.end133
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !10738
  %97 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10739
  store i8* %96, i8** %97, align 8, !dbg !10740
  store i32 6, i32* %retval, align 4, !dbg !10741
  br label %return, !dbg !10741

sw.default163:                                    ; preds = %cond.end133
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !10742
  %add.ptr164 = getelementptr inbounds i8, i8* %98, i64 2, !dbg !10742
  store i8* %add.ptr164, i8** %ptr.addr, align 8, !dbg !10742
  br label %sw.epilog165, !dbg !10743

sw.epilog165:                                     ; preds = %sw.default163, %if.end160, %if.end151, %if.end142
  br label %while.cond, !dbg !10744

while.end:                                        ; preds = %while.cond
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !10745
  %100 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10746
  store i8* %99, i8** %100, align 8, !dbg !10747
  store i32 6, i32* %retval, align 4, !dbg !10748
  br label %return, !dbg !10748

return:                                           ; preds = %while.end, %sw.bb162, %if.then159, %if.then150, %if.then141, %sw.bb112, %if.then109, %if.then100, %if.then91, %sw.bb83, %if.end82, %if.then60, %if.end51, %if.then38, %if.then20, %if.then4, %if.then
  %101 = load i32, i32* %retval, align 4, !dbg !10749
  ret i32 %101, !dbg !10749
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_attributeValueTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !359 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !10750, metadata !444), !dbg !10751
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10752, metadata !444), !dbg !10753
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10754, metadata !444), !dbg !10755
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !10756, metadata !444), !dbg !10757
  call void @llvm.dbg.declare(metadata i8** %start, metadata !10758, metadata !444), !dbg !10759
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10760
  %1 = load i8*, i8** %end.addr, align 8, !dbg !10762
  %cmp = icmp uge i8* %0, %1, !dbg !10763
  br i1 %cmp, label %if.then, label %if.end, !dbg !10764

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !10765
  br label %return, !dbg !10765

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !10766
  store i8* %2, i8** %start, align 8, !dbg !10767
  br label %while.cond, !dbg !10768

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i8*, i8** %end.addr, align 8, !dbg !10769
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !10769
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !10769
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !10769
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10769
  %cmp1 = icmp sge i64 %sub.ptr.sub, 2, !dbg !10769
  br i1 %cmp1, label %while.body, label %while.end, !dbg !10771

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !10772
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !10772
  %6 = load i8, i8* %arrayidx, align 1, !dbg !10772
  %conv = sext i8 %6 to i32, !dbg !10772
  %cmp2 = icmp eq i32 %conv, 0, !dbg !10772
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !10772

cond.true:                                        ; preds = %while.body
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !10774
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !10774
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !10774
  %idxprom = zext i8 %8 to i64, !dbg !10774
  %9 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10774
  %10 = bitcast %struct.encoding* %9 to %struct.normal_encoding*, !dbg !10774
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %10, i32 0, i32 1, !dbg !10774
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !10774
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !10774
  %conv6 = zext i8 %11 to i32, !dbg !10774
  br label %cond.end, !dbg !10774

cond.false:                                       ; preds = %while.body
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !10776
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10776
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !10776
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !10776
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !10776
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !10776
  %call = call i32 @unicode_byte_type(i8 signext %13, i8 signext %15), !dbg !10776
  br label %cond.end, !dbg !10776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv6, %cond.true ], [ %call, %cond.false ], !dbg !10778
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb9
    i32 7, label %sw.bb11
    i32 3, label %sw.bb13
    i32 2, label %sw.bb20
    i32 10, label %sw.bb21
    i32 9, label %sw.bb27
    i32 21, label %sw.bb61
  ], !dbg !10780

sw.bb:                                            ; preds = %cond.end
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !10781
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 2, !dbg !10781
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !10781
  br label %sw.epilog, !dbg !10781

sw.bb9:                                           ; preds = %cond.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !10783
  %add.ptr10 = getelementptr inbounds i8, i8* %17, i64 3, !dbg !10783
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !10783
  br label %sw.epilog, !dbg !10783

sw.bb11:                                          ; preds = %cond.end
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !10785
  %add.ptr12 = getelementptr inbounds i8, i8* %18, i64 4, !dbg !10785
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !10785
  br label %sw.epilog, !dbg !10785

sw.bb13:                                          ; preds = %cond.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !10787
  %20 = load i8*, i8** %start, align 8, !dbg !10789
  %cmp14 = icmp eq i8* %19, %20, !dbg !10790
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !10791

if.then16:                                        ; preds = %sw.bb13
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10792
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !10793
  %add.ptr17 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !10794
  %23 = load i8*, i8** %end.addr, align 8, !dbg !10795
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10796
  %call18 = call i32 @big2_scanRef(%struct.encoding* %21, i8* %add.ptr17, i8* %23, i8** %24), !dbg !10797
  store i32 %call18, i32* %retval, align 4, !dbg !10798
  br label %return, !dbg !10798

if.end19:                                         ; preds = %sw.bb13
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !10799
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10800
  store i8* %25, i8** %26, align 8, !dbg !10801
  store i32 6, i32* %retval, align 4, !dbg !10802
  br label %return, !dbg !10802

sw.bb20:                                          ; preds = %cond.end
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !10803
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10804
  store i8* %27, i8** %28, align 8, !dbg !10805
  store i32 0, i32* %retval, align 4, !dbg !10806
  br label %return, !dbg !10806

sw.bb21:                                          ; preds = %cond.end
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !10807
  %30 = load i8*, i8** %start, align 8, !dbg !10809
  %cmp22 = icmp eq i8* %29, %30, !dbg !10810
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !10811

if.then24:                                        ; preds = %sw.bb21
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !10812
  %add.ptr25 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !10814
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10815
  store i8* %add.ptr25, i8** %32, align 8, !dbg !10816
  store i32 7, i32* %retval, align 4, !dbg !10817
  br label %return, !dbg !10817

if.end26:                                         ; preds = %sw.bb21
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !10818
  %34 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10819
  store i8* %33, i8** %34, align 8, !dbg !10820
  store i32 6, i32* %retval, align 4, !dbg !10821
  br label %return, !dbg !10821

sw.bb27:                                          ; preds = %cond.end
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !10822
  %36 = load i8*, i8** %start, align 8, !dbg !10824
  %cmp28 = icmp eq i8* %35, %36, !dbg !10825
  br i1 %cmp28, label %if.then30, label %if.end60, !dbg !10826

if.then30:                                        ; preds = %sw.bb27
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !10827
  %add.ptr31 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !10827
  store i8* %add.ptr31, i8** %ptr.addr, align 8, !dbg !10827
  %38 = load i8*, i8** %end.addr, align 8, !dbg !10829
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !10829
  %sub.ptr.lhs.cast32 = ptrtoint i8* %38 to i64, !dbg !10829
  %sub.ptr.rhs.cast33 = ptrtoint i8* %39 to i64, !dbg !10829
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !10829
  %cmp35 = icmp sge i64 %sub.ptr.sub34, 2, !dbg !10829
  br i1 %cmp35, label %if.end38, label %if.then37, !dbg !10831

if.then37:                                        ; preds = %if.then30
  store i32 -3, i32* %retval, align 4, !dbg !10832
  br label %return, !dbg !10832

if.end38:                                         ; preds = %if.then30
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !10833
  %arrayidx39 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !10833
  %41 = load i8, i8* %arrayidx39, align 1, !dbg !10833
  %conv40 = sext i8 %41 to i32, !dbg !10833
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !10833
  br i1 %cmp41, label %cond.true43, label %cond.false49, !dbg !10833

cond.true43:                                      ; preds = %if.end38
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !10835
  %arrayidx44 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !10835
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !10835
  %idxprom45 = zext i8 %43 to i64, !dbg !10835
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10835
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !10835
  %type46 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !10835
  %arrayidx47 = getelementptr inbounds [256 x i8], [256 x i8]* %type46, i64 0, i64 %idxprom45, !dbg !10835
  %46 = load i8, i8* %arrayidx47, align 1, !dbg !10835
  %conv48 = zext i8 %46 to i32, !dbg !10835
  br label %cond.end53, !dbg !10835

cond.false49:                                     ; preds = %if.end38
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !10837
  %arrayidx50 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !10837
  %48 = load i8, i8* %arrayidx50, align 1, !dbg !10837
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !10837
  %arrayidx51 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !10837
  %50 = load i8, i8* %arrayidx51, align 1, !dbg !10837
  %call52 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !10837
  br label %cond.end53, !dbg !10837

cond.end53:                                       ; preds = %cond.false49, %cond.true43
  %cond54 = phi i32 [ %conv48, %cond.true43 ], [ %call52, %cond.false49 ], !dbg !10839
  %cmp55 = icmp eq i32 %cond54, 10, !dbg !10841
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !10839

if.then57:                                        ; preds = %cond.end53
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !10842
  %add.ptr58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !10842
  store i8* %add.ptr58, i8** %ptr.addr, align 8, !dbg !10842
  br label %if.end59, !dbg !10843

if.end59:                                         ; preds = %if.then57, %cond.end53
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !10844
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10845
  store i8* %52, i8** %53, align 8, !dbg !10846
  store i32 7, i32* %retval, align 4, !dbg !10847
  br label %return, !dbg !10847

if.end60:                                         ; preds = %sw.bb27
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !10848
  %55 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10849
  store i8* %54, i8** %55, align 8, !dbg !10850
  store i32 6, i32* %retval, align 4, !dbg !10851
  br label %return, !dbg !10851

sw.bb61:                                          ; preds = %cond.end
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !10852
  %57 = load i8*, i8** %start, align 8, !dbg !10854
  %cmp62 = icmp eq i8* %56, %57, !dbg !10855
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !10856

if.then64:                                        ; preds = %sw.bb61
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !10857
  %add.ptr65 = getelementptr inbounds i8, i8* %58, i64 2, !dbg !10859
  %59 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10860
  store i8* %add.ptr65, i8** %59, align 8, !dbg !10861
  store i32 39, i32* %retval, align 4, !dbg !10862
  br label %return, !dbg !10862

if.end66:                                         ; preds = %sw.bb61
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !10863
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10864
  store i8* %60, i8** %61, align 8, !dbg !10865
  store i32 6, i32* %retval, align 4, !dbg !10866
  br label %return, !dbg !10866

sw.default:                                       ; preds = %cond.end
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !10867
  %add.ptr67 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !10867
  store i8* %add.ptr67, i8** %ptr.addr, align 8, !dbg !10867
  br label %sw.epilog, !dbg !10868

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb9, %sw.bb
  br label %while.cond, !dbg !10869

while.end:                                        ; preds = %while.cond
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !10871
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10872
  store i8* %63, i8** %64, align 8, !dbg !10873
  store i32 6, i32* %retval, align 4, !dbg !10874
  br label %return, !dbg !10874

return:                                           ; preds = %while.end, %if.end66, %if.then64, %if.end60, %if.end59, %if.then37, %if.end26, %if.then24, %sw.bb20, %if.end19, %if.then16, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !10875
  ret i32 %65, !dbg !10875
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_entityValueTok(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !360 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !10876, metadata !444), !dbg !10877
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10878, metadata !444), !dbg !10879
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10880, metadata !444), !dbg !10881
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !10882, metadata !444), !dbg !10883
  call void @llvm.dbg.declare(metadata i8** %start, metadata !10884, metadata !444), !dbg !10885
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10886
  %1 = load i8*, i8** %end.addr, align 8, !dbg !10888
  %cmp = icmp uge i8* %0, %1, !dbg !10889
  br i1 %cmp, label %if.then, label %if.end, !dbg !10890

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !10891
  br label %return, !dbg !10891

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !10892
  store i8* %2, i8** %start, align 8, !dbg !10893
  br label %while.cond, !dbg !10894

while.cond:                                       ; preds = %sw.epilog, %if.end
  %3 = load i8*, i8** %end.addr, align 8, !dbg !10895
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !10895
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !10895
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !10895
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10895
  %cmp1 = icmp sge i64 %sub.ptr.sub, 2, !dbg !10895
  br i1 %cmp1, label %while.body, label %while.end, !dbg !10897

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !10898
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !10898
  %6 = load i8, i8* %arrayidx, align 1, !dbg !10898
  %conv = sext i8 %6 to i32, !dbg !10898
  %cmp2 = icmp eq i32 %conv, 0, !dbg !10898
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !10898

cond.true:                                        ; preds = %while.body
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !10900
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !10900
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !10900
  %idxprom = zext i8 %8 to i64, !dbg !10900
  %9 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10900
  %10 = bitcast %struct.encoding* %9 to %struct.normal_encoding*, !dbg !10900
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %10, i32 0, i32 1, !dbg !10900
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !10900
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !10900
  %conv6 = zext i8 %11 to i32, !dbg !10900
  br label %cond.end, !dbg !10900

cond.false:                                       ; preds = %while.body
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !10902
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10902
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !10902
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !10902
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !10902
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !10902
  %call = call i32 @unicode_byte_type(i8 signext %13, i8 signext %15), !dbg !10902
  br label %cond.end, !dbg !10902

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv6, %cond.true ], [ %call, %cond.false ], !dbg !10904
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb9
    i32 7, label %sw.bb11
    i32 3, label %sw.bb13
    i32 30, label %sw.bb20
    i32 10, label %sw.bb33
    i32 9, label %sw.bb39
  ], !dbg !10906

sw.bb:                                            ; preds = %cond.end
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !10907
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 2, !dbg !10907
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !10907
  br label %sw.epilog, !dbg !10907

sw.bb9:                                           ; preds = %cond.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !10909
  %add.ptr10 = getelementptr inbounds i8, i8* %17, i64 3, !dbg !10909
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !10909
  br label %sw.epilog, !dbg !10909

sw.bb11:                                          ; preds = %cond.end
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !10911
  %add.ptr12 = getelementptr inbounds i8, i8* %18, i64 4, !dbg !10911
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !10911
  br label %sw.epilog, !dbg !10911

sw.bb13:                                          ; preds = %cond.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !10913
  %20 = load i8*, i8** %start, align 8, !dbg !10915
  %cmp14 = icmp eq i8* %19, %20, !dbg !10916
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !10917

if.then16:                                        ; preds = %sw.bb13
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10918
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !10919
  %add.ptr17 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !10920
  %23 = load i8*, i8** %end.addr, align 8, !dbg !10921
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10922
  %call18 = call i32 @big2_scanRef(%struct.encoding* %21, i8* %add.ptr17, i8* %23, i8** %24), !dbg !10923
  store i32 %call18, i32* %retval, align 4, !dbg !10924
  br label %return, !dbg !10924

if.end19:                                         ; preds = %sw.bb13
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !10925
  %26 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10926
  store i8* %25, i8** %26, align 8, !dbg !10927
  store i32 6, i32* %retval, align 4, !dbg !10928
  br label %return, !dbg !10928

sw.bb20:                                          ; preds = %cond.end
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !10929
  %28 = load i8*, i8** %start, align 8, !dbg !10931
  %cmp21 = icmp eq i8* %27, %28, !dbg !10932
  br i1 %cmp21, label %if.then23, label %if.end32, !dbg !10933

if.then23:                                        ; preds = %sw.bb20
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !10934, metadata !444), !dbg !10936
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10937
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !10938
  %add.ptr24 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !10939
  %31 = load i8*, i8** %end.addr, align 8, !dbg !10940
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10941
  %call25 = call i32 @big2_scanPercent(%struct.encoding* %29, i8* %add.ptr24, i8* %31, i8** %32), !dbg !10942
  store i32 %call25, i32* %tok, align 4, !dbg !10936
  %33 = load i32, i32* %tok, align 4, !dbg !10943
  %cmp26 = icmp eq i32 %33, 22, !dbg !10944
  br i1 %cmp26, label %cond.true28, label %cond.false29, !dbg !10945

cond.true28:                                      ; preds = %if.then23
  br label %cond.end30, !dbg !10946

cond.false29:                                     ; preds = %if.then23
  %34 = load i32, i32* %tok, align 4, !dbg !10948
  br label %cond.end30, !dbg !10950

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ 0, %cond.true28 ], [ %34, %cond.false29 ], !dbg !10951
  store i32 %cond31, i32* %retval, align 4, !dbg !10953
  br label %return, !dbg !10953

if.end32:                                         ; preds = %sw.bb20
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !10954
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10955
  store i8* %35, i8** %36, align 8, !dbg !10956
  store i32 6, i32* %retval, align 4, !dbg !10957
  br label %return, !dbg !10957

sw.bb33:                                          ; preds = %cond.end
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !10958
  %38 = load i8*, i8** %start, align 8, !dbg !10960
  %cmp34 = icmp eq i8* %37, %38, !dbg !10961
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !10962

if.then36:                                        ; preds = %sw.bb33
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !10963
  %add.ptr37 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !10965
  %40 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10966
  store i8* %add.ptr37, i8** %40, align 8, !dbg !10967
  store i32 7, i32* %retval, align 4, !dbg !10968
  br label %return, !dbg !10968

if.end38:                                         ; preds = %sw.bb33
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !10969
  %42 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10970
  store i8* %41, i8** %42, align 8, !dbg !10971
  store i32 6, i32* %retval, align 4, !dbg !10972
  br label %return, !dbg !10972

sw.bb39:                                          ; preds = %cond.end
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !10973
  %44 = load i8*, i8** %start, align 8, !dbg !10975
  %cmp40 = icmp eq i8* %43, %44, !dbg !10976
  br i1 %cmp40, label %if.then42, label %if.end72, !dbg !10977

if.then42:                                        ; preds = %sw.bb39
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !10978
  %add.ptr43 = getelementptr inbounds i8, i8* %45, i64 2, !dbg !10978
  store i8* %add.ptr43, i8** %ptr.addr, align 8, !dbg !10978
  %46 = load i8*, i8** %end.addr, align 8, !dbg !10980
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !10980
  %sub.ptr.lhs.cast44 = ptrtoint i8* %46 to i64, !dbg !10980
  %sub.ptr.rhs.cast45 = ptrtoint i8* %47 to i64, !dbg !10980
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45, !dbg !10980
  %cmp47 = icmp sge i64 %sub.ptr.sub46, 2, !dbg !10980
  br i1 %cmp47, label %if.end50, label %if.then49, !dbg !10982

if.then49:                                        ; preds = %if.then42
  store i32 -3, i32* %retval, align 4, !dbg !10983
  br label %return, !dbg !10983

if.end50:                                         ; preds = %if.then42
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !10984
  %arrayidx51 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !10984
  %49 = load i8, i8* %arrayidx51, align 1, !dbg !10984
  %conv52 = sext i8 %49 to i32, !dbg !10984
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !10984
  br i1 %cmp53, label %cond.true55, label %cond.false61, !dbg !10984

cond.true55:                                      ; preds = %if.end50
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !10986
  %arrayidx56 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !10986
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !10986
  %idxprom57 = zext i8 %51 to i64, !dbg !10986
  %52 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10986
  %53 = bitcast %struct.encoding* %52 to %struct.normal_encoding*, !dbg !10986
  %type58 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %53, i32 0, i32 1, !dbg !10986
  %arrayidx59 = getelementptr inbounds [256 x i8], [256 x i8]* %type58, i64 0, i64 %idxprom57, !dbg !10986
  %54 = load i8, i8* %arrayidx59, align 1, !dbg !10986
  %conv60 = zext i8 %54 to i32, !dbg !10986
  br label %cond.end65, !dbg !10986

cond.false61:                                     ; preds = %if.end50
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !10988
  %arrayidx62 = getelementptr inbounds i8, i8* %55, i64 0, !dbg !10988
  %56 = load i8, i8* %arrayidx62, align 1, !dbg !10988
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !10988
  %arrayidx63 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !10988
  %58 = load i8, i8* %arrayidx63, align 1, !dbg !10988
  %call64 = call i32 @unicode_byte_type(i8 signext %56, i8 signext %58), !dbg !10988
  br label %cond.end65, !dbg !10988

cond.end65:                                       ; preds = %cond.false61, %cond.true55
  %cond66 = phi i32 [ %conv60, %cond.true55 ], [ %call64, %cond.false61 ], !dbg !10990
  %cmp67 = icmp eq i32 %cond66, 10, !dbg !10992
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !10990

if.then69:                                        ; preds = %cond.end65
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !10993
  %add.ptr70 = getelementptr inbounds i8, i8* %59, i64 2, !dbg !10993
  store i8* %add.ptr70, i8** %ptr.addr, align 8, !dbg !10993
  br label %if.end71, !dbg !10994

if.end71:                                         ; preds = %if.then69, %cond.end65
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !10995
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !10996
  store i8* %60, i8** %61, align 8, !dbg !10997
  store i32 7, i32* %retval, align 4, !dbg !10998
  br label %return, !dbg !10998

if.end72:                                         ; preds = %sw.bb39
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !10999
  %63 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !11000
  store i8* %62, i8** %63, align 8, !dbg !11001
  store i32 6, i32* %retval, align 4, !dbg !11002
  br label %return, !dbg !11002

sw.default:                                       ; preds = %cond.end
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !11003
  %add.ptr73 = getelementptr inbounds i8, i8* %64, i64 2, !dbg !11003
  store i8* %add.ptr73, i8** %ptr.addr, align 8, !dbg !11003
  br label %sw.epilog, !dbg !11004

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb9, %sw.bb
  br label %while.cond, !dbg !11005

while.end:                                        ; preds = %while.cond
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !11007
  %66 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !11008
  store i8* %65, i8** %66, align 8, !dbg !11009
  store i32 6, i32* %retval, align 4, !dbg !11010
  br label %return, !dbg !11010

return:                                           ; preds = %while.end, %if.end72, %if.end71, %if.then49, %if.end38, %if.then36, %if.end32, %cond.end30, %if.end19, %if.then16, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !11011
  ret i32 %67, !dbg !11011
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_sameName(%struct.encoding* %enc, i8* %ptr1, i8* %ptr2) #0 !dbg !361 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr1.addr = alloca i8*, align 8
  %ptr2.addr = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11012, metadata !444), !dbg !11013
  store i8* %ptr1, i8** %ptr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr1.addr, metadata !11014, metadata !444), !dbg !11015
  store i8* %ptr2, i8** %ptr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr2.addr, metadata !11016, metadata !444), !dbg !11017
  br label %for.cond, !dbg !11018

for.cond:                                         ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %ptr1.addr, align 8, !dbg !11019
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !11019
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11019
  %conv = sext i8 %1 to i32, !dbg !11019
  %cmp = icmp eq i32 %conv, 0, !dbg !11019
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11019

cond.true:                                        ; preds = %for.cond
  %2 = load i8*, i8** %ptr1.addr, align 8, !dbg !11023
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !11023
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !11023
  %idxprom = zext i8 %3 to i64, !dbg !11023
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11023
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !11023
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !11023
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !11023
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !11023
  %conv4 = zext i8 %6 to i32, !dbg !11023
  br label %cond.end, !dbg !11023

cond.false:                                       ; preds = %for.cond
  %7 = load i8*, i8** %ptr1.addr, align 8, !dbg !11025
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11025
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !11025
  %9 = load i8*, i8** %ptr1.addr, align 8, !dbg !11025
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !11025
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !11025
  %call = call i32 @unicode_byte_type(i8 signext %8, i8 signext %10), !dbg !11025
  br label %cond.end, !dbg !11025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !11027
  switch i32 %cond, label %sw.default [
    i32 7, label %sw.bb
    i32 6, label %sw.bb12
    i32 5, label %sw.bb21
    i32 29, label %sw.bb38
    i32 22, label %sw.bb38
    i32 24, label %sw.bb38
    i32 25, label %sw.bb38
    i32 26, label %sw.bb38
    i32 27, label %sw.bb38
  ], !dbg !11029

sw.bb:                                            ; preds = %cond.end
  %11 = load i8*, i8** %ptr1.addr, align 8, !dbg !11030
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !11030
  store i8* %incdec.ptr, i8** %ptr1.addr, align 8, !dbg !11030
  %12 = load i8, i8* %11, align 1, !dbg !11030
  %conv7 = sext i8 %12 to i32, !dbg !11030
  %13 = load i8*, i8** %ptr2.addr, align 8, !dbg !11030
  %incdec.ptr8 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !11030
  store i8* %incdec.ptr8, i8** %ptr2.addr, align 8, !dbg !11030
  %14 = load i8, i8* %13, align 1, !dbg !11030
  %conv9 = sext i8 %14 to i32, !dbg !11030
  %cmp10 = icmp ne i32 %conv7, %conv9, !dbg !11030
  br i1 %cmp10, label %if.then, label %if.end, !dbg !11033

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !11034
  br label %return, !dbg !11034

if.end:                                           ; preds = %sw.bb
  br label %sw.bb12, !dbg !11036

sw.bb12:                                          ; preds = %cond.end, %if.end
  %15 = load i8*, i8** %ptr1.addr, align 8, !dbg !11038
  %incdec.ptr13 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !11038
  store i8* %incdec.ptr13, i8** %ptr1.addr, align 8, !dbg !11038
  %16 = load i8, i8* %15, align 1, !dbg !11038
  %conv14 = sext i8 %16 to i32, !dbg !11038
  %17 = load i8*, i8** %ptr2.addr, align 8, !dbg !11038
  %incdec.ptr15 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !11038
  store i8* %incdec.ptr15, i8** %ptr2.addr, align 8, !dbg !11038
  %18 = load i8, i8* %17, align 1, !dbg !11038
  %conv16 = sext i8 %18 to i32, !dbg !11038
  %cmp17 = icmp ne i32 %conv14, %conv16, !dbg !11038
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11038

if.then19:                                        ; preds = %sw.bb12
  store i32 0, i32* %retval, align 4, !dbg !11041
  br label %return, !dbg !11041

if.end20:                                         ; preds = %sw.bb12
  br label %sw.bb21, !dbg !11043

sw.bb21:                                          ; preds = %cond.end, %if.end20
  %19 = load i8*, i8** %ptr1.addr, align 8, !dbg !11045
  %incdec.ptr22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !11045
  store i8* %incdec.ptr22, i8** %ptr1.addr, align 8, !dbg !11045
  %20 = load i8, i8* %19, align 1, !dbg !11045
  %conv23 = sext i8 %20 to i32, !dbg !11045
  %21 = load i8*, i8** %ptr2.addr, align 8, !dbg !11045
  %incdec.ptr24 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !11045
  store i8* %incdec.ptr24, i8** %ptr2.addr, align 8, !dbg !11045
  %22 = load i8, i8* %21, align 1, !dbg !11045
  %conv25 = sext i8 %22 to i32, !dbg !11045
  %cmp26 = icmp ne i32 %conv23, %conv25, !dbg !11045
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !11045

if.then28:                                        ; preds = %sw.bb21
  store i32 0, i32* %retval, align 4, !dbg !11048
  br label %return, !dbg !11048

if.end29:                                         ; preds = %sw.bb21
  %23 = load i8*, i8** %ptr1.addr, align 8, !dbg !11050
  %incdec.ptr30 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11050
  store i8* %incdec.ptr30, i8** %ptr1.addr, align 8, !dbg !11050
  %24 = load i8, i8* %23, align 1, !dbg !11052
  %conv31 = sext i8 %24 to i32, !dbg !11052
  %25 = load i8*, i8** %ptr2.addr, align 8, !dbg !11053
  %incdec.ptr32 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !11053
  store i8* %incdec.ptr32, i8** %ptr2.addr, align 8, !dbg !11053
  %26 = load i8, i8* %25, align 1, !dbg !11054
  %conv33 = sext i8 %26 to i32, !dbg !11054
  %cmp34 = icmp ne i32 %conv31, %conv33, !dbg !11055
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11056

if.then36:                                        ; preds = %if.end29
  store i32 0, i32* %retval, align 4, !dbg !11057
  br label %return, !dbg !11057

if.end37:                                         ; preds = %if.end29
  br label %sw.epilog, !dbg !11058

sw.bb38:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %27 = load i8*, i8** %ptr2.addr, align 8, !dbg !11059
  %incdec.ptr39 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !11059
  store i8* %incdec.ptr39, i8** %ptr2.addr, align 8, !dbg !11059
  %28 = load i8, i8* %27, align 1, !dbg !11061
  %conv40 = sext i8 %28 to i32, !dbg !11061
  %29 = load i8*, i8** %ptr1.addr, align 8, !dbg !11062
  %incdec.ptr41 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !11062
  store i8* %incdec.ptr41, i8** %ptr1.addr, align 8, !dbg !11062
  %30 = load i8, i8* %29, align 1, !dbg !11063
  %conv42 = sext i8 %30 to i32, !dbg !11063
  %cmp43 = icmp ne i32 %conv40, %conv42, !dbg !11064
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !11065

if.then45:                                        ; preds = %sw.bb38
  store i32 0, i32* %retval, align 4, !dbg !11066
  br label %return, !dbg !11066

if.end46:                                         ; preds = %sw.bb38
  %31 = load i8*, i8** %ptr2.addr, align 8, !dbg !11067
  %incdec.ptr47 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !11067
  store i8* %incdec.ptr47, i8** %ptr2.addr, align 8, !dbg !11067
  %32 = load i8, i8* %31, align 1, !dbg !11071
  %conv48 = sext i8 %32 to i32, !dbg !11071
  %33 = load i8*, i8** %ptr1.addr, align 8, !dbg !11072
  %incdec.ptr49 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !11072
  store i8* %incdec.ptr49, i8** %ptr1.addr, align 8, !dbg !11072
  %34 = load i8, i8* %33, align 1, !dbg !11073
  %conv50 = sext i8 %34 to i32, !dbg !11073
  %cmp51 = icmp ne i32 %conv48, %conv50, !dbg !11074
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !11075

if.then53:                                        ; preds = %if.end46
  store i32 0, i32* %retval, align 4, !dbg !11076
  br label %return, !dbg !11076

if.end54:                                         ; preds = %if.end46
  br label %sw.epilog, !dbg !11077

sw.default:                                       ; preds = %cond.end
  %35 = load i8*, i8** %ptr2.addr, align 8, !dbg !11078
  %arrayidx55 = getelementptr inbounds i8, i8* %35, i64 0, !dbg !11078
  %36 = load i8, i8* %arrayidx55, align 1, !dbg !11078
  %conv56 = sext i8 %36 to i32, !dbg !11078
  %cmp57 = icmp eq i32 %conv56, 0, !dbg !11078
  br i1 %cmp57, label %cond.true59, label %cond.false65, !dbg !11078

cond.true59:                                      ; preds = %sw.default
  %37 = load i8*, i8** %ptr2.addr, align 8, !dbg !11079
  %arrayidx60 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !11079
  %38 = load i8, i8* %arrayidx60, align 1, !dbg !11079
  %idxprom61 = zext i8 %38 to i64, !dbg !11079
  %39 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11079
  %40 = bitcast %struct.encoding* %39 to %struct.normal_encoding*, !dbg !11079
  %type62 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %40, i32 0, i32 1, !dbg !11079
  %arrayidx63 = getelementptr inbounds [256 x i8], [256 x i8]* %type62, i64 0, i64 %idxprom61, !dbg !11079
  %41 = load i8, i8* %arrayidx63, align 1, !dbg !11079
  %conv64 = zext i8 %41 to i32, !dbg !11079
  br label %cond.end69, !dbg !11079

cond.false65:                                     ; preds = %sw.default
  %42 = load i8*, i8** %ptr2.addr, align 8, !dbg !11081
  %arrayidx66 = getelementptr inbounds i8, i8* %42, i64 0, !dbg !11081
  %43 = load i8, i8* %arrayidx66, align 1, !dbg !11081
  %44 = load i8*, i8** %ptr2.addr, align 8, !dbg !11081
  %arrayidx67 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !11081
  %45 = load i8, i8* %arrayidx67, align 1, !dbg !11081
  %call68 = call i32 @unicode_byte_type(i8 signext %43, i8 signext %45), !dbg !11081
  br label %cond.end69, !dbg !11081

cond.end69:                                       ; preds = %cond.false65, %cond.true59
  %cond70 = phi i32 [ %conv64, %cond.true59 ], [ %call68, %cond.false65 ], !dbg !11083
  switch i32 %cond70, label %sw.default72 [
    i32 5, label %sw.bb71
    i32 6, label %sw.bb71
    i32 7, label %sw.bb71
    i32 29, label %sw.bb71
    i32 22, label %sw.bb71
    i32 24, label %sw.bb71
    i32 25, label %sw.bb71
    i32 26, label %sw.bb71
    i32 27, label %sw.bb71
  ], !dbg !11085

sw.bb71:                                          ; preds = %cond.end69, %cond.end69, %cond.end69, %cond.end69, %cond.end69, %cond.end69, %cond.end69, %cond.end69, %cond.end69
  store i32 0, i32* %retval, align 4, !dbg !11086
  br label %return, !dbg !11086

sw.default72:                                     ; preds = %cond.end69
  store i32 1, i32* %retval, align 4, !dbg !11088
  br label %return, !dbg !11088

sw.epilog:                                        ; preds = %if.end54, %if.end37
  br label %for.cond, !dbg !11089

return:                                           ; preds = %sw.default72, %sw.bb71, %if.then53, %if.then45, %if.then36, %if.then28, %if.then19, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !11091
  ret i32 %46, !dbg !11091
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_nameMatchesAscii(%struct.encoding* %UNUSED_enc, i8* %ptr1, i8* %end1, i8* %ptr2) #0 !dbg !362 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr1.addr = alloca i8*, align 8
  %end1.addr = alloca i8*, align 8
  %ptr2.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !11092, metadata !444), !dbg !11093
  store i8* %ptr1, i8** %ptr1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr1.addr, metadata !11094, metadata !444), !dbg !11095
  store i8* %end1, i8** %end1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end1.addr, metadata !11096, metadata !444), !dbg !11097
  store i8* %ptr2, i8** %ptr2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr2.addr, metadata !11098, metadata !444), !dbg !11099
  br label %for.cond, !dbg !11100

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %ptr2.addr, align 8, !dbg !11101
  %1 = load i8, i8* %0, align 1, !dbg !11105
  %tobool = icmp ne i8 %1, 0, !dbg !11106
  br i1 %tobool, label %for.body, label %for.end, !dbg !11106

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %end1.addr, align 8, !dbg !11107
  %3 = load i8*, i8** %ptr1.addr, align 8, !dbg !11110
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11111
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11111
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11111
  %cmp = icmp slt i64 %sub.ptr.sub, 2, !dbg !11112
  br i1 %cmp, label %if.then, label %if.end, !dbg !11113

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !11114
  br label %return, !dbg !11114

if.end:                                           ; preds = %for.body
  %4 = load i8*, i8** %ptr1.addr, align 8, !dbg !11115
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !11115
  %5 = load i8, i8* %arrayidx, align 1, !dbg !11115
  %conv = sext i8 %5 to i32, !dbg !11115
  %cmp1 = icmp eq i32 %conv, 0, !dbg !11115
  br i1 %cmp1, label %land.lhs.true, label %if.then8, !dbg !11115

land.lhs.true:                                    ; preds = %if.end
  %6 = load i8*, i8** %ptr1.addr, align 8, !dbg !11117
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !11117
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !11117
  %conv4 = sext i8 %7 to i32, !dbg !11117
  %8 = load i8*, i8** %ptr2.addr, align 8, !dbg !11117
  %9 = load i8, i8* %8, align 1, !dbg !11117
  %conv5 = sext i8 %9 to i32, !dbg !11117
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !11117
  br i1 %cmp6, label %if.end9, label %if.then8, !dbg !11119

if.then8:                                         ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11120
  br label %return, !dbg !11120

if.end9:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !11121

for.inc:                                          ; preds = %if.end9
  %10 = load i8*, i8** %ptr1.addr, align 8, !dbg !11122
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 2, !dbg !11122
  store i8* %add.ptr, i8** %ptr1.addr, align 8, !dbg !11122
  %11 = load i8*, i8** %ptr2.addr, align 8, !dbg !11124
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !11124
  store i8* %incdec.ptr, i8** %ptr2.addr, align 8, !dbg !11124
  br label %for.cond, !dbg !11125

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %ptr1.addr, align 8, !dbg !11126
  %13 = load i8*, i8** %end1.addr, align 8, !dbg !11127
  %cmp10 = icmp eq i8* %12, %13, !dbg !11128
  %conv11 = zext i1 %cmp10 to i32, !dbg !11128
  store i32 %conv11, i32* %retval, align 4, !dbg !11129
  br label %return, !dbg !11129

return:                                           ; preds = %for.end, %if.then8, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !11130
  ret i32 %14, !dbg !11130
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_nameLength(%struct.encoding* %enc, i8* %ptr) #0 !dbg !363 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %start = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11131, metadata !444), !dbg !11132
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11133, metadata !444), !dbg !11134
  call void @llvm.dbg.declare(metadata i8** %start, metadata !11135, metadata !444), !dbg !11136
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11137
  store i8* %0, i8** %start, align 8, !dbg !11136
  br label %for.cond, !dbg !11138

for.cond:                                         ; preds = %sw.epilog, %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11139
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11139
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11139
  %conv = sext i8 %2 to i32, !dbg !11139
  %cmp = icmp eq i32 %conv, 0, !dbg !11139
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11139

cond.true:                                        ; preds = %for.cond
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !11143
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !11143
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !11143
  %idxprom = zext i8 %4 to i64, !dbg !11143
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11143
  %6 = bitcast %struct.encoding* %5 to %struct.normal_encoding*, !dbg !11143
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %6, i32 0, i32 1, !dbg !11143
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !11143
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !11143
  %conv4 = zext i8 %7 to i32, !dbg !11143
  br label %cond.end, !dbg !11143

cond.false:                                       ; preds = %for.cond
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !11145
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !11145
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !11145
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !11145
  %arrayidx6 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !11145
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !11145
  %call = call i32 @unicode_byte_type(i8 signext %9, i8 signext %11), !dbg !11145
  br label %cond.end, !dbg !11145

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !11147
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb7
    i32 7, label %sw.bb9
    i32 29, label %sw.bb11
    i32 22, label %sw.bb11
    i32 24, label %sw.bb11
    i32 25, label %sw.bb11
    i32 26, label %sw.bb11
    i32 27, label %sw.bb11
  ], !dbg !11149

sw.bb:                                            ; preds = %cond.end
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !11150
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 2, !dbg !11150
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !11150
  br label %sw.epilog, !dbg !11150

sw.bb7:                                           ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !11152
  %add.ptr8 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !11152
  store i8* %add.ptr8, i8** %ptr.addr, align 8, !dbg !11152
  br label %sw.epilog, !dbg !11152

sw.bb9:                                           ; preds = %cond.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !11154
  %add.ptr10 = getelementptr inbounds i8, i8* %14, i64 4, !dbg !11154
  store i8* %add.ptr10, i8** %ptr.addr, align 8, !dbg !11154
  br label %sw.epilog, !dbg !11154

sw.bb11:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !11156
  %add.ptr12 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !11156
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !11156
  br label %sw.epilog, !dbg !11157

sw.default:                                       ; preds = %cond.end
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !11158
  %17 = load i8*, i8** %start, align 8, !dbg !11159
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !11160
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64, !dbg !11160
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11160
  %conv13 = trunc i64 %sub.ptr.sub to i32, !dbg !11161
  ret i32 %conv13, !dbg !11162

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb
  br label %for.cond, !dbg !11163
}

; Function Attrs: nounwind uwtable
define internal i8* @big2_skipS(%struct.encoding* %enc, i8* %ptr) #0 !dbg !364 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11165, metadata !444), !dbg !11166
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11167, metadata !444), !dbg !11168
  br label %for.cond, !dbg !11169

for.cond:                                         ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11170
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !11170
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11170
  %conv = sext i8 %1 to i32, !dbg !11170
  %cmp = icmp eq i32 %conv, 0, !dbg !11170
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11170

cond.true:                                        ; preds = %for.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !11174
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !11174
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !11174
  %idxprom = zext i8 %3 to i64, !dbg !11174
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11174
  %5 = bitcast %struct.encoding* %4 to %struct.normal_encoding*, !dbg !11174
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %5, i32 0, i32 1, !dbg !11174
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !11174
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !11174
  %conv4 = zext i8 %6 to i32, !dbg !11174
  br label %cond.end, !dbg !11174

cond.false:                                       ; preds = %for.cond
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !11176
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11176
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !11176
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !11176
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !11176
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !11176
  %call = call i32 @unicode_byte_type(i8 signext %8, i8 signext %10), !dbg !11176
  br label %cond.end, !dbg !11176

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !11178
  switch i32 %cond, label %sw.default [
    i32 10, label %sw.bb
    i32 9, label %sw.bb
    i32 21, label %sw.bb
  ], !dbg !11180

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !11181
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 2, !dbg !11181
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !11181
  br label %sw.epilog, !dbg !11183

sw.default:                                       ; preds = %cond.end
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !11184
  ret i8* %12, !dbg !11185

sw.epilog:                                        ; preds = %sw.bb
  br label %for.cond, !dbg !11186
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_getAtts(%struct.encoding* %enc, i8* %ptr, i32 %attsMax, %struct.ATTRIBUTE* %atts) #0 !dbg !168 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %attsMax.addr = alloca i32, align 4
  %atts.addr = alloca %struct.ATTRIBUTE*, align 8
  %state = alloca i32, align 4
  %nAtts = alloca i32, align 4
  %open = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11188, metadata !444), !dbg !11189
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11190, metadata !444), !dbg !11191
  store i32 %attsMax, i32* %attsMax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attsMax.addr, metadata !11192, metadata !444), !dbg !11193
  store %struct.ATTRIBUTE* %atts, %struct.ATTRIBUTE** %atts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ATTRIBUTE** %atts.addr, metadata !11194, metadata !444), !dbg !11195
  call void @llvm.dbg.declare(metadata i32* %state, metadata !11196, metadata !444), !dbg !11197
  store i32 1, i32* %state, align 4, !dbg !11197
  call void @llvm.dbg.declare(metadata i32* %nAtts, metadata !11198, metadata !444), !dbg !11199
  store i32 0, i32* %nAtts, align 4, !dbg !11199
  call void @llvm.dbg.declare(metadata i32* %open, metadata !11200, metadata !444), !dbg !11201
  store i32 0, i32* %open, align 4, !dbg !11201
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11202
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 2, !dbg !11202
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !11202
  br label %for.cond, !dbg !11204

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11205
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11205
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11205
  %conv = sext i8 %2 to i32, !dbg !11205
  %cmp = icmp eq i32 %conv, 0, !dbg !11205
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11205

cond.true:                                        ; preds = %for.cond
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !11208
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !11208
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !11208
  %idxprom = zext i8 %4 to i64, !dbg !11208
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11208
  %6 = bitcast %struct.encoding* %5 to %struct.normal_encoding*, !dbg !11208
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %6, i32 0, i32 1, !dbg !11208
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !11208
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !11208
  %conv4 = zext i8 %7 to i32, !dbg !11208
  br label %cond.end, !dbg !11208

cond.false:                                       ; preds = %for.cond
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !11210
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !11210
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !11210
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !11210
  %arrayidx6 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !11210
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !11210
  %call = call i32 @unicode_byte_type(i8 signext %9, i8 signext %11), !dbg !11210
  br label %cond.end, !dbg !11210

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ %call, %cond.false ], !dbg !11212
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb18
    i32 7, label %sw.bb34
    i32 29, label %sw.bb50
    i32 22, label %sw.bb50
    i32 24, label %sw.bb50
    i32 12, label %sw.bb65
    i32 13, label %sw.bb87
    i32 3, label %sw.bb113
    i32 21, label %sw.bb121
    i32 9, label %sw.bb197
    i32 10, label %sw.bb197
    i32 11, label %sw.bb213
    i32 17, label %sw.bb213
  ], !dbg !11214

sw.bb:                                            ; preds = %cond.end
  %12 = load i32, i32* %state, align 4, !dbg !11215
  %cmp7 = icmp eq i32 %12, 0, !dbg !11215
  br i1 %cmp7, label %if.then, label %if.end16, !dbg !11218

if.then:                                          ; preds = %sw.bb
  %13 = load i32, i32* %nAtts, align 4, !dbg !11219
  %14 = load i32, i32* %attsMax.addr, align 4, !dbg !11219
  %cmp9 = icmp slt i32 %13, %14, !dbg !11219
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !11219

if.then11:                                        ; preds = %if.then
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !11223
  %16 = load i32, i32* %nAtts, align 4, !dbg !11223
  %idxprom12 = sext i32 %16 to i64, !dbg !11223
  %17 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11223
  %arrayidx13 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %17, i64 %idxprom12, !dbg !11223
  %name = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx13, i32 0, i32 0, !dbg !11223
  store i8* %15, i8** %name, align 8, !dbg !11223
  %18 = load i32, i32* %nAtts, align 4, !dbg !11223
  %idxprom14 = sext i32 %18 to i64, !dbg !11223
  %19 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11223
  %arrayidx15 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %19, i64 %idxprom14, !dbg !11223
  %normalized = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx15, i32 0, i32 3, !dbg !11223
  store i8 1, i8* %normalized, align 8, !dbg !11223
  br label %if.end, !dbg !11223

if.end:                                           ; preds = %if.then11, %if.then
  store i32 1, i32* %state, align 4, !dbg !11226
  br label %if.end16, !dbg !11226

if.end16:                                         ; preds = %if.end, %sw.bb
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !11228
  %add.ptr17 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !11228
  store i8* %add.ptr17, i8** %ptr.addr, align 8, !dbg !11228
  br label %sw.epilog, !dbg !11228

sw.bb18:                                          ; preds = %cond.end
  %21 = load i32, i32* %state, align 4, !dbg !11230
  %cmp19 = icmp eq i32 %21, 0, !dbg !11230
  br i1 %cmp19, label %if.then21, label %if.end32, !dbg !11230

if.then21:                                        ; preds = %sw.bb18
  %22 = load i32, i32* %nAtts, align 4, !dbg !11233
  %23 = load i32, i32* %attsMax.addr, align 4, !dbg !11233
  %cmp22 = icmp slt i32 %22, %23, !dbg !11233
  br i1 %cmp22, label %if.then24, label %if.end31, !dbg !11233

if.then24:                                        ; preds = %if.then21
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !11237
  %25 = load i32, i32* %nAtts, align 4, !dbg !11237
  %idxprom25 = sext i32 %25 to i64, !dbg !11237
  %26 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11237
  %arrayidx26 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %26, i64 %idxprom25, !dbg !11237
  %name27 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx26, i32 0, i32 0, !dbg !11237
  store i8* %24, i8** %name27, align 8, !dbg !11237
  %27 = load i32, i32* %nAtts, align 4, !dbg !11237
  %idxprom28 = sext i32 %27 to i64, !dbg !11237
  %28 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11237
  %arrayidx29 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %28, i64 %idxprom28, !dbg !11237
  %normalized30 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx29, i32 0, i32 3, !dbg !11237
  store i8 1, i8* %normalized30, align 8, !dbg !11237
  br label %if.end31, !dbg !11237

if.end31:                                         ; preds = %if.then24, %if.then21
  store i32 1, i32* %state, align 4, !dbg !11240
  br label %if.end32, !dbg !11240

if.end32:                                         ; preds = %if.end31, %sw.bb18
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !11242
  %add.ptr33 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !11242
  store i8* %add.ptr33, i8** %ptr.addr, align 8, !dbg !11242
  br label %sw.epilog, !dbg !11242

sw.bb34:                                          ; preds = %cond.end
  %30 = load i32, i32* %state, align 4, !dbg !11244
  %cmp35 = icmp eq i32 %30, 0, !dbg !11244
  br i1 %cmp35, label %if.then37, label %if.end48, !dbg !11244

if.then37:                                        ; preds = %sw.bb34
  %31 = load i32, i32* %nAtts, align 4, !dbg !11247
  %32 = load i32, i32* %attsMax.addr, align 4, !dbg !11247
  %cmp38 = icmp slt i32 %31, %32, !dbg !11247
  br i1 %cmp38, label %if.then40, label %if.end47, !dbg !11247

if.then40:                                        ; preds = %if.then37
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !11251
  %34 = load i32, i32* %nAtts, align 4, !dbg !11251
  %idxprom41 = sext i32 %34 to i64, !dbg !11251
  %35 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11251
  %arrayidx42 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %35, i64 %idxprom41, !dbg !11251
  %name43 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx42, i32 0, i32 0, !dbg !11251
  store i8* %33, i8** %name43, align 8, !dbg !11251
  %36 = load i32, i32* %nAtts, align 4, !dbg !11251
  %idxprom44 = sext i32 %36 to i64, !dbg !11251
  %37 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11251
  %arrayidx45 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %37, i64 %idxprom44, !dbg !11251
  %normalized46 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx45, i32 0, i32 3, !dbg !11251
  store i8 1, i8* %normalized46, align 8, !dbg !11251
  br label %if.end47, !dbg !11251

if.end47:                                         ; preds = %if.then40, %if.then37
  store i32 1, i32* %state, align 4, !dbg !11254
  br label %if.end48, !dbg !11254

if.end48:                                         ; preds = %if.end47, %sw.bb34
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !11256
  %add.ptr49 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !11256
  store i8* %add.ptr49, i8** %ptr.addr, align 8, !dbg !11256
  br label %sw.epilog, !dbg !11256

sw.bb50:                                          ; preds = %cond.end, %cond.end, %cond.end
  %39 = load i32, i32* %state, align 4, !dbg !11258
  %cmp51 = icmp eq i32 %39, 0, !dbg !11258
  br i1 %cmp51, label %if.then53, label %if.end64, !dbg !11260

if.then53:                                        ; preds = %sw.bb50
  %40 = load i32, i32* %nAtts, align 4, !dbg !11261
  %41 = load i32, i32* %attsMax.addr, align 4, !dbg !11261
  %cmp54 = icmp slt i32 %40, %41, !dbg !11261
  br i1 %cmp54, label %if.then56, label %if.end63, !dbg !11261

if.then56:                                        ; preds = %if.then53
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !11265
  %43 = load i32, i32* %nAtts, align 4, !dbg !11265
  %idxprom57 = sext i32 %43 to i64, !dbg !11265
  %44 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11265
  %arrayidx58 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %44, i64 %idxprom57, !dbg !11265
  %name59 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx58, i32 0, i32 0, !dbg !11265
  store i8* %42, i8** %name59, align 8, !dbg !11265
  %45 = load i32, i32* %nAtts, align 4, !dbg !11265
  %idxprom60 = sext i32 %45 to i64, !dbg !11265
  %46 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11265
  %arrayidx61 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %46, i64 %idxprom60, !dbg !11265
  %normalized62 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx61, i32 0, i32 3, !dbg !11265
  store i8 1, i8* %normalized62, align 8, !dbg !11265
  br label %if.end63, !dbg !11265

if.end63:                                         ; preds = %if.then56, %if.then53
  store i32 1, i32* %state, align 4, !dbg !11268
  br label %if.end64, !dbg !11268

if.end64:                                         ; preds = %if.end63, %sw.bb50
  br label %sw.epilog, !dbg !11270

sw.bb65:                                          ; preds = %cond.end
  %47 = load i32, i32* %state, align 4, !dbg !11271
  %cmp66 = icmp ne i32 %47, 2, !dbg !11273
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !11274

if.then68:                                        ; preds = %sw.bb65
  %48 = load i32, i32* %nAtts, align 4, !dbg !11275
  %49 = load i32, i32* %attsMax.addr, align 4, !dbg !11278
  %cmp69 = icmp slt i32 %48, %49, !dbg !11279
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !11280

if.then71:                                        ; preds = %if.then68
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !11281
  %add.ptr72 = getelementptr inbounds i8, i8* %50, i64 2, !dbg !11282
  %51 = load i32, i32* %nAtts, align 4, !dbg !11283
  %idxprom73 = sext i32 %51 to i64, !dbg !11284
  %52 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11284
  %arrayidx74 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %52, i64 %idxprom73, !dbg !11284
  %valuePtr = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx74, i32 0, i32 1, !dbg !11285
  store i8* %add.ptr72, i8** %valuePtr, align 8, !dbg !11286
  br label %if.end75, !dbg !11284

if.end75:                                         ; preds = %if.then71, %if.then68
  store i32 2, i32* %state, align 4, !dbg !11287
  store i32 12, i32* %open, align 4, !dbg !11288
  br label %if.end86, !dbg !11289

if.else:                                          ; preds = %sw.bb65
  %53 = load i32, i32* %open, align 4, !dbg !11290
  %cmp76 = icmp eq i32 %53, 12, !dbg !11292
  br i1 %cmp76, label %if.then78, label %if.end85, !dbg !11293

if.then78:                                        ; preds = %if.else
  store i32 0, i32* %state, align 4, !dbg !11294
  %54 = load i32, i32* %nAtts, align 4, !dbg !11296
  %55 = load i32, i32* %attsMax.addr, align 4, !dbg !11298
  %cmp79 = icmp slt i32 %54, %55, !dbg !11299
  br i1 %cmp79, label %if.then81, label %if.end84, !dbg !11300

if.then81:                                        ; preds = %if.then78
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !11301
  %57 = load i32, i32* %nAtts, align 4, !dbg !11302
  %idxprom82 = sext i32 %57 to i64, !dbg !11303
  %58 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11303
  %arrayidx83 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %58, i64 %idxprom82, !dbg !11303
  %valueEnd = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx83, i32 0, i32 2, !dbg !11304
  store i8* %56, i8** %valueEnd, align 8, !dbg !11305
  br label %if.end84, !dbg !11303

if.end84:                                         ; preds = %if.then81, %if.then78
  %59 = load i32, i32* %nAtts, align 4, !dbg !11306
  %inc = add nsw i32 %59, 1, !dbg !11306
  store i32 %inc, i32* %nAtts, align 4, !dbg !11306
  br label %if.end85, !dbg !11307

if.end85:                                         ; preds = %if.end84, %if.else
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end75
  br label %sw.epilog, !dbg !11308

sw.bb87:                                          ; preds = %cond.end
  %60 = load i32, i32* %state, align 4, !dbg !11309
  %cmp88 = icmp ne i32 %60, 2, !dbg !11311
  br i1 %cmp88, label %if.then90, label %if.else99, !dbg !11312

if.then90:                                        ; preds = %sw.bb87
  %61 = load i32, i32* %nAtts, align 4, !dbg !11313
  %62 = load i32, i32* %attsMax.addr, align 4, !dbg !11316
  %cmp91 = icmp slt i32 %61, %62, !dbg !11317
  br i1 %cmp91, label %if.then93, label %if.end98, !dbg !11318

if.then93:                                        ; preds = %if.then90
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !11319
  %add.ptr94 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !11320
  %64 = load i32, i32* %nAtts, align 4, !dbg !11321
  %idxprom95 = sext i32 %64 to i64, !dbg !11322
  %65 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11322
  %arrayidx96 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %65, i64 %idxprom95, !dbg !11322
  %valuePtr97 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx96, i32 0, i32 1, !dbg !11323
  store i8* %add.ptr94, i8** %valuePtr97, align 8, !dbg !11324
  br label %if.end98, !dbg !11322

if.end98:                                         ; preds = %if.then93, %if.then90
  store i32 2, i32* %state, align 4, !dbg !11325
  store i32 13, i32* %open, align 4, !dbg !11326
  br label %if.end112, !dbg !11327

if.else99:                                        ; preds = %sw.bb87
  %66 = load i32, i32* %open, align 4, !dbg !11328
  %cmp100 = icmp eq i32 %66, 13, !dbg !11330
  br i1 %cmp100, label %if.then102, label %if.end111, !dbg !11331

if.then102:                                       ; preds = %if.else99
  store i32 0, i32* %state, align 4, !dbg !11332
  %67 = load i32, i32* %nAtts, align 4, !dbg !11334
  %68 = load i32, i32* %attsMax.addr, align 4, !dbg !11336
  %cmp103 = icmp slt i32 %67, %68, !dbg !11337
  br i1 %cmp103, label %if.then105, label %if.end109, !dbg !11338

if.then105:                                       ; preds = %if.then102
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !11339
  %70 = load i32, i32* %nAtts, align 4, !dbg !11340
  %idxprom106 = sext i32 %70 to i64, !dbg !11341
  %71 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11341
  %arrayidx107 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %71, i64 %idxprom106, !dbg !11341
  %valueEnd108 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx107, i32 0, i32 2, !dbg !11342
  store i8* %69, i8** %valueEnd108, align 8, !dbg !11343
  br label %if.end109, !dbg !11341

if.end109:                                        ; preds = %if.then105, %if.then102
  %72 = load i32, i32* %nAtts, align 4, !dbg !11344
  %inc110 = add nsw i32 %72, 1, !dbg !11344
  store i32 %inc110, i32* %nAtts, align 4, !dbg !11344
  br label %if.end111, !dbg !11345

if.end111:                                        ; preds = %if.end109, %if.else99
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.end98
  br label %sw.epilog, !dbg !11346

sw.bb113:                                         ; preds = %cond.end
  %73 = load i32, i32* %nAtts, align 4, !dbg !11347
  %74 = load i32, i32* %attsMax.addr, align 4, !dbg !11349
  %cmp114 = icmp slt i32 %73, %74, !dbg !11350
  br i1 %cmp114, label %if.then116, label %if.end120, !dbg !11351

if.then116:                                       ; preds = %sw.bb113
  %75 = load i32, i32* %nAtts, align 4, !dbg !11352
  %idxprom117 = sext i32 %75 to i64, !dbg !11353
  %76 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11353
  %arrayidx118 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %76, i64 %idxprom117, !dbg !11353
  %normalized119 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx118, i32 0, i32 3, !dbg !11354
  store i8 0, i8* %normalized119, align 8, !dbg !11355
  br label %if.end120, !dbg !11353

if.end120:                                        ; preds = %if.then116, %sw.bb113
  br label %sw.epilog, !dbg !11356

sw.bb121:                                         ; preds = %cond.end
  %77 = load i32, i32* %state, align 4, !dbg !11357
  %cmp122 = icmp eq i32 %77, 1, !dbg !11359
  br i1 %cmp122, label %if.then124, label %if.else125, !dbg !11360

if.then124:                                       ; preds = %sw.bb121
  store i32 0, i32* %state, align 4, !dbg !11361
  br label %if.end196, !dbg !11362

if.else125:                                       ; preds = %sw.bb121
  %78 = load i32, i32* %state, align 4, !dbg !11363
  %cmp126 = icmp eq i32 %78, 2, !dbg !11365
  br i1 %cmp126, label %land.lhs.true, label %if.end195, !dbg !11366

land.lhs.true:                                    ; preds = %if.else125
  %79 = load i32, i32* %nAtts, align 4, !dbg !11367
  %80 = load i32, i32* %attsMax.addr, align 4, !dbg !11369
  %cmp128 = icmp slt i32 %79, %80, !dbg !11370
  br i1 %cmp128, label %land.lhs.true130, label %if.end195, !dbg !11371

land.lhs.true130:                                 ; preds = %land.lhs.true
  %81 = load i32, i32* %nAtts, align 4, !dbg !11372
  %idxprom131 = sext i32 %81 to i64, !dbg !11373
  %82 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11373
  %arrayidx132 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %82, i64 %idxprom131, !dbg !11373
  %normalized133 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx132, i32 0, i32 3, !dbg !11374
  %83 = load i8, i8* %normalized133, align 8, !dbg !11374
  %conv134 = sext i8 %83 to i32, !dbg !11373
  %tobool = icmp ne i32 %conv134, 0, !dbg !11373
  br i1 %tobool, label %land.lhs.true135, label %if.end195, !dbg !11375

land.lhs.true135:                                 ; preds = %land.lhs.true130
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !11376
  %85 = load i32, i32* %nAtts, align 4, !dbg !11377
  %idxprom136 = sext i32 %85 to i64, !dbg !11378
  %86 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11378
  %arrayidx137 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %86, i64 %idxprom136, !dbg !11378
  %valuePtr138 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx137, i32 0, i32 1, !dbg !11379
  %87 = load i8*, i8** %valuePtr138, align 8, !dbg !11379
  %cmp139 = icmp eq i8* %84, %87, !dbg !11380
  br i1 %cmp139, label %if.then191, label %lor.lhs.false, !dbg !11381

lor.lhs.false:                                    ; preds = %land.lhs.true135
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !11382
  %arrayidx141 = getelementptr inbounds i8, i8* %88, i64 0, !dbg !11382
  %89 = load i8, i8* %arrayidx141, align 1, !dbg !11382
  %conv142 = sext i8 %89 to i32, !dbg !11382
  %cmp143 = icmp eq i32 %conv142, 0, !dbg !11382
  br i1 %cmp143, label %cond.true145, label %cond.false148, !dbg !11382

cond.true145:                                     ; preds = %lor.lhs.false
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !11384
  %arrayidx146 = getelementptr inbounds i8, i8* %90, i64 1, !dbg !11384
  %91 = load i8, i8* %arrayidx146, align 1, !dbg !11384
  %conv147 = sext i8 %91 to i32, !dbg !11384
  br label %cond.end149, !dbg !11384

cond.false148:                                    ; preds = %lor.lhs.false
  br label %cond.end149, !dbg !11386

cond.end149:                                      ; preds = %cond.false148, %cond.true145
  %cond150 = phi i32 [ %conv147, %cond.true145 ], [ -1, %cond.false148 ], !dbg !11388
  %cmp151 = icmp ne i32 %cond150, 32, !dbg !11390
  br i1 %cmp151, label %if.then191, label %lor.lhs.false153, !dbg !11391

lor.lhs.false153:                                 ; preds = %cond.end149
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !11392
  %add.ptr154 = getelementptr inbounds i8, i8* %92, i64 2, !dbg !11392
  %arrayidx155 = getelementptr inbounds i8, i8* %add.ptr154, i64 0, !dbg !11392
  %93 = load i8, i8* %arrayidx155, align 1, !dbg !11392
  %conv156 = sext i8 %93 to i32, !dbg !11392
  %cmp157 = icmp eq i32 %conv156, 0, !dbg !11392
  br i1 %cmp157, label %cond.true159, label %cond.false163, !dbg !11392

cond.true159:                                     ; preds = %lor.lhs.false153
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !11393
  %add.ptr160 = getelementptr inbounds i8, i8* %94, i64 2, !dbg !11393
  %arrayidx161 = getelementptr inbounds i8, i8* %add.ptr160, i64 1, !dbg !11393
  %95 = load i8, i8* %arrayidx161, align 1, !dbg !11393
  %conv162 = sext i8 %95 to i32, !dbg !11393
  br label %cond.end164, !dbg !11393

cond.false163:                                    ; preds = %lor.lhs.false153
  br label %cond.end164, !dbg !11394

cond.end164:                                      ; preds = %cond.false163, %cond.true159
  %cond165 = phi i32 [ %conv162, %cond.true159 ], [ -1, %cond.false163 ], !dbg !11395
  %cmp166 = icmp eq i32 %cond165, 32, !dbg !11396
  br i1 %cmp166, label %if.then191, label %lor.lhs.false168, !dbg !11397

lor.lhs.false168:                                 ; preds = %cond.end164
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !11398
  %add.ptr169 = getelementptr inbounds i8, i8* %96, i64 2, !dbg !11398
  %arrayidx170 = getelementptr inbounds i8, i8* %add.ptr169, i64 0, !dbg !11398
  %97 = load i8, i8* %arrayidx170, align 1, !dbg !11398
  %conv171 = sext i8 %97 to i32, !dbg !11398
  %cmp172 = icmp eq i32 %conv171, 0, !dbg !11398
  br i1 %cmp172, label %cond.true174, label %cond.false181, !dbg !11398

cond.true174:                                     ; preds = %lor.lhs.false168
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !11399
  %add.ptr175 = getelementptr inbounds i8, i8* %98, i64 2, !dbg !11399
  %arrayidx176 = getelementptr inbounds i8, i8* %add.ptr175, i64 1, !dbg !11399
  %99 = load i8, i8* %arrayidx176, align 1, !dbg !11399
  %idxprom177 = zext i8 %99 to i64, !dbg !11399
  %100 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11399
  %101 = bitcast %struct.encoding* %100 to %struct.normal_encoding*, !dbg !11399
  %type178 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %101, i32 0, i32 1, !dbg !11399
  %arrayidx179 = getelementptr inbounds [256 x i8], [256 x i8]* %type178, i64 0, i64 %idxprom177, !dbg !11399
  %102 = load i8, i8* %arrayidx179, align 1, !dbg !11399
  %conv180 = zext i8 %102 to i32, !dbg !11399
  br label %cond.end187, !dbg !11399

cond.false181:                                    ; preds = %lor.lhs.false168
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !11400
  %add.ptr182 = getelementptr inbounds i8, i8* %103, i64 2, !dbg !11400
  %arrayidx183 = getelementptr inbounds i8, i8* %add.ptr182, i64 0, !dbg !11400
  %104 = load i8, i8* %arrayidx183, align 1, !dbg !11400
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !11400
  %add.ptr184 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !11400
  %arrayidx185 = getelementptr inbounds i8, i8* %add.ptr184, i64 1, !dbg !11400
  %106 = load i8, i8* %arrayidx185, align 1, !dbg !11400
  %call186 = call i32 @unicode_byte_type(i8 signext %104, i8 signext %106), !dbg !11400
  br label %cond.end187, !dbg !11400

cond.end187:                                      ; preds = %cond.false181, %cond.true174
  %cond188 = phi i32 [ %conv180, %cond.true174 ], [ %call186, %cond.false181 ], !dbg !11401
  %107 = load i32, i32* %open, align 4, !dbg !11402
  %cmp189 = icmp eq i32 %cond188, %107, !dbg !11403
  br i1 %cmp189, label %if.then191, label %if.end195, !dbg !11404

if.then191:                                       ; preds = %cond.end187, %cond.end164, %cond.end149, %land.lhs.true135
  %108 = load i32, i32* %nAtts, align 4, !dbg !11406
  %idxprom192 = sext i32 %108 to i64, !dbg !11407
  %109 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11407
  %arrayidx193 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %109, i64 %idxprom192, !dbg !11407
  %normalized194 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx193, i32 0, i32 3, !dbg !11408
  store i8 0, i8* %normalized194, align 8, !dbg !11409
  br label %if.end195, !dbg !11407

if.end195:                                        ; preds = %if.then191, %cond.end187, %land.lhs.true130, %land.lhs.true, %if.else125
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then124
  br label %sw.epilog, !dbg !11410

sw.bb197:                                         ; preds = %cond.end, %cond.end
  %110 = load i32, i32* %state, align 4, !dbg !11411
  %cmp198 = icmp eq i32 %110, 1, !dbg !11413
  br i1 %cmp198, label %if.then200, label %if.else201, !dbg !11414

if.then200:                                       ; preds = %sw.bb197
  store i32 0, i32* %state, align 4, !dbg !11415
  br label %if.end212, !dbg !11416

if.else201:                                       ; preds = %sw.bb197
  %111 = load i32, i32* %state, align 4, !dbg !11417
  %cmp202 = icmp eq i32 %111, 2, !dbg !11419
  br i1 %cmp202, label %land.lhs.true204, label %if.end211, !dbg !11420

land.lhs.true204:                                 ; preds = %if.else201
  %112 = load i32, i32* %nAtts, align 4, !dbg !11421
  %113 = load i32, i32* %attsMax.addr, align 4, !dbg !11423
  %cmp205 = icmp slt i32 %112, %113, !dbg !11424
  br i1 %cmp205, label %if.then207, label %if.end211, !dbg !11425

if.then207:                                       ; preds = %land.lhs.true204
  %114 = load i32, i32* %nAtts, align 4, !dbg !11426
  %idxprom208 = sext i32 %114 to i64, !dbg !11427
  %115 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %atts.addr, align 8, !dbg !11427
  %arrayidx209 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %115, i64 %idxprom208, !dbg !11427
  %normalized210 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx209, i32 0, i32 3, !dbg !11428
  store i8 0, i8* %normalized210, align 8, !dbg !11429
  br label %if.end211, !dbg !11427

if.end211:                                        ; preds = %if.then207, %land.lhs.true204, %if.else201
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then200
  br label %sw.epilog, !dbg !11430

sw.bb213:                                         ; preds = %cond.end, %cond.end
  %116 = load i32, i32* %state, align 4, !dbg !11431
  %cmp214 = icmp ne i32 %116, 2, !dbg !11433
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !11434

if.then216:                                       ; preds = %sw.bb213
  %117 = load i32, i32* %nAtts, align 4, !dbg !11435
  ret i32 %117, !dbg !11436

if.end217:                                        ; preds = %sw.bb213
  br label %sw.epilog, !dbg !11437

sw.default:                                       ; preds = %cond.end
  br label %sw.epilog, !dbg !11438

sw.epilog:                                        ; preds = %sw.default, %if.end217, %if.end212, %if.end196, %if.end120, %if.end112, %if.end86, %if.end64, %if.end48, %if.end32, %if.end16
  br label %for.inc, !dbg !11439

for.inc:                                          ; preds = %sw.epilog
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !11440
  %add.ptr218 = getelementptr inbounds i8, i8* %118, i64 2, !dbg !11440
  store i8* %add.ptr218, i8** %ptr.addr, align 8, !dbg !11440
  br label %for.cond, !dbg !11442
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_charRefNumber(%struct.encoding* %UNUSED_enc, i8* %ptr) #0 !dbg !365 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %c = alloca i32, align 4
  %c47 = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !11443, metadata !444), !dbg !11444
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11445, metadata !444), !dbg !11446
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11447, metadata !444), !dbg !11448
  store i32 0, i32* %result, align 4, !dbg !11448
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11449
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 4, !dbg !11449
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !11449
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11450
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11450
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11450
  %conv = sext i8 %2 to i32, !dbg !11450
  %cmp = icmp eq i32 %conv, 0, !dbg !11450
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11450

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !11452
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !11452
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !11452
  %conv3 = sext i8 %4 to i32, !dbg !11452
  %cmp4 = icmp eq i32 %conv3, 120, !dbg !11452
  br i1 %cmp4, label %if.then, label %if.else, !dbg !11452

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !11454
  %add.ptr6 = getelementptr inbounds i8, i8* %5, i64 2, !dbg !11454
  store i8* %add.ptr6, i8** %ptr.addr, align 8, !dbg !11454
  br label %for.cond, !dbg !11457

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !11458
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !11458
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !11458
  %conv8 = sext i8 %7 to i32, !dbg !11458
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !11458
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !11458

land.rhs:                                         ; preds = %for.cond
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !11460
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !11460
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !11460
  %conv12 = sext i8 %9 to i32, !dbg !11460
  %cmp13 = icmp eq i32 %conv12, 59, !dbg !11460
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %10 = phi i1 [ false, %for.cond ], [ %cmp13, %land.rhs ]
  %lnot = xor i1 %10, true, !dbg !11462
  br i1 %lnot, label %for.body, label %for.end, !dbg !11464

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %c, metadata !11466, metadata !444), !dbg !11468
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !11469
  %arrayidx15 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !11469
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !11469
  %conv16 = sext i8 %12 to i32, !dbg !11469
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !11469
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !11469

cond.true:                                        ; preds = %for.body
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !11470
  %arrayidx19 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !11470
  %14 = load i8, i8* %arrayidx19, align 1, !dbg !11470
  %conv20 = sext i8 %14 to i32, !dbg !11470
  br label %cond.end, !dbg !11470

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !11472

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ -1, %cond.false ], !dbg !11474
  store i32 %cond, i32* %c, align 4, !dbg !11476
  %15 = load i32, i32* %c, align 4, !dbg !11477
  switch i32 %15, label %sw.epilog [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 65, label %sw.bb21
    i32 66, label %sw.bb21
    i32 67, label %sw.bb21
    i32 68, label %sw.bb21
    i32 69, label %sw.bb21
    i32 70, label %sw.bb21
    i32 97, label %sw.bb25
    i32 98, label %sw.bb25
    i32 99, label %sw.bb25
    i32 100, label %sw.bb25
    i32 101, label %sw.bb25
    i32 102, label %sw.bb25
  ], !dbg !11478

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %16 = load i32, i32* %result, align 4, !dbg !11479
  %shl = shl i32 %16, 4, !dbg !11479
  store i32 %shl, i32* %result, align 4, !dbg !11479
  %17 = load i32, i32* %c, align 4, !dbg !11481
  %sub = sub nsw i32 %17, 48, !dbg !11482
  %18 = load i32, i32* %result, align 4, !dbg !11483
  %or = or i32 %18, %sub, !dbg !11483
  store i32 %or, i32* %result, align 4, !dbg !11483
  br label %sw.epilog, !dbg !11484

sw.bb21:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %19 = load i32, i32* %result, align 4, !dbg !11485
  %shl22 = shl i32 %19, 4, !dbg !11485
  store i32 %shl22, i32* %result, align 4, !dbg !11485
  %20 = load i32, i32* %c, align 4, !dbg !11486
  %sub23 = sub nsw i32 %20, 65, !dbg !11487
  %add = add nsw i32 10, %sub23, !dbg !11488
  %21 = load i32, i32* %result, align 4, !dbg !11489
  %add24 = add nsw i32 %21, %add, !dbg !11489
  store i32 %add24, i32* %result, align 4, !dbg !11489
  br label %sw.epilog, !dbg !11490

sw.bb25:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  %22 = load i32, i32* %result, align 4, !dbg !11491
  %shl26 = shl i32 %22, 4, !dbg !11491
  store i32 %shl26, i32* %result, align 4, !dbg !11491
  %23 = load i32, i32* %c, align 4, !dbg !11492
  %sub27 = sub nsw i32 %23, 97, !dbg !11493
  %add28 = add nsw i32 10, %sub27, !dbg !11494
  %24 = load i32, i32* %result, align 4, !dbg !11495
  %add29 = add nsw i32 %24, %add28, !dbg !11495
  store i32 %add29, i32* %result, align 4, !dbg !11495
  br label %sw.epilog, !dbg !11496

sw.epilog:                                        ; preds = %cond.end, %sw.bb25, %sw.bb21, %sw.bb
  %25 = load i32, i32* %result, align 4, !dbg !11497
  %cmp30 = icmp sge i32 %25, 1114112, !dbg !11499
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !11500

if.then32:                                        ; preds = %sw.epilog
  store i32 -1, i32* %retval, align 4, !dbg !11501
  br label %return, !dbg !11501

if.end:                                           ; preds = %sw.epilog
  br label %for.inc, !dbg !11502

for.inc:                                          ; preds = %if.end
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !11503
  %add.ptr33 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !11503
  store i8* %add.ptr33, i8** %ptr.addr, align 8, !dbg !11503
  br label %for.cond, !dbg !11504

for.end:                                          ; preds = %land.end
  br label %if.end67, !dbg !11506

if.else:                                          ; preds = %land.lhs.true, %entry
  br label %for.cond34, !dbg !11507

for.cond34:                                       ; preds = %for.inc64, %if.else
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !11509
  %arrayidx35 = getelementptr inbounds i8, i8* %27, i64 0, !dbg !11509
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !11509
  %conv36 = sext i8 %28 to i32, !dbg !11509
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !11509
  br i1 %cmp37, label %land.rhs39, label %land.end44, !dbg !11509

land.rhs39:                                       ; preds = %for.cond34
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !11513
  %arrayidx40 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !11513
  %30 = load i8, i8* %arrayidx40, align 1, !dbg !11513
  %conv41 = sext i8 %30 to i32, !dbg !11513
  %cmp42 = icmp eq i32 %conv41, 59, !dbg !11513
  br label %land.end44

land.end44:                                       ; preds = %land.rhs39, %for.cond34
  %31 = phi i1 [ false, %for.cond34 ], [ %cmp42, %land.rhs39 ]
  %lnot45 = xor i1 %31, true, !dbg !11515
  br i1 %lnot45, label %for.body46, label %for.end66, !dbg !11517

for.body46:                                       ; preds = %land.end44
  call void @llvm.dbg.declare(metadata i32* %c47, metadata !11518, metadata !444), !dbg !11520
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !11521
  %arrayidx48 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !11521
  %33 = load i8, i8* %arrayidx48, align 1, !dbg !11521
  %conv49 = sext i8 %33 to i32, !dbg !11521
  %cmp50 = icmp eq i32 %conv49, 0, !dbg !11521
  br i1 %cmp50, label %cond.true52, label %cond.false55, !dbg !11521

cond.true52:                                      ; preds = %for.body46
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !11522
  %arrayidx53 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !11522
  %35 = load i8, i8* %arrayidx53, align 1, !dbg !11522
  %conv54 = sext i8 %35 to i32, !dbg !11522
  br label %cond.end56, !dbg !11522

cond.false55:                                     ; preds = %for.body46
  br label %cond.end56, !dbg !11524

cond.end56:                                       ; preds = %cond.false55, %cond.true52
  %cond57 = phi i32 [ %conv54, %cond.true52 ], [ -1, %cond.false55 ], !dbg !11526
  store i32 %cond57, i32* %c47, align 4, !dbg !11528
  %36 = load i32, i32* %result, align 4, !dbg !11529
  %mul = mul nsw i32 %36, 10, !dbg !11529
  store i32 %mul, i32* %result, align 4, !dbg !11529
  %37 = load i32, i32* %c47, align 4, !dbg !11530
  %sub58 = sub nsw i32 %37, 48, !dbg !11531
  %38 = load i32, i32* %result, align 4, !dbg !11532
  %add59 = add nsw i32 %38, %sub58, !dbg !11532
  store i32 %add59, i32* %result, align 4, !dbg !11532
  %39 = load i32, i32* %result, align 4, !dbg !11533
  %cmp60 = icmp sge i32 %39, 1114112, !dbg !11535
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !11536

if.then62:                                        ; preds = %cond.end56
  store i32 -1, i32* %retval, align 4, !dbg !11537
  br label %return, !dbg !11537

if.end63:                                         ; preds = %cond.end56
  br label %for.inc64, !dbg !11538

for.inc64:                                        ; preds = %if.end63
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !11539
  %add.ptr65 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !11539
  store i8* %add.ptr65, i8** %ptr.addr, align 8, !dbg !11539
  br label %for.cond34, !dbg !11541

for.end66:                                        ; preds = %land.end44
  br label %if.end67

if.end67:                                         ; preds = %for.end66, %for.end
  %41 = load i32, i32* %result, align 4, !dbg !11542
  %call = call i32 @checkCharRefNumber(i32 %41), !dbg !11543
  store i32 %call, i32* %retval, align 4, !dbg !11544
  br label %return, !dbg !11544

return:                                           ; preds = %if.end67, %if.then62, %if.then32
  %42 = load i32, i32* %retval, align 4, !dbg !11545
  ret i32 %42, !dbg !11545
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_predefinedEntityName(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end) #0 !dbg !366 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !11546, metadata !444), !dbg !11547
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11548, metadata !444), !dbg !11549
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !11550, metadata !444), !dbg !11551
  %0 = load i8*, i8** %end.addr, align 8, !dbg !11552
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11553
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !11554
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !11554
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11554
  %div = sdiv i64 %sub.ptr.sub, 2, !dbg !11555
  switch i64 %div, label %sw.epilog137 [
    i64 2, label %sw.bb
    i64 3, label %sw.bb15
    i64 4, label %sw.bb51
  ], !dbg !11556

sw.bb:                                            ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !11557
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 2, !dbg !11557
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !11557
  %3 = load i8, i8* %arrayidx, align 1, !dbg !11557
  %conv = sext i8 %3 to i32, !dbg !11557
  %cmp = icmp eq i32 %conv, 0, !dbg !11557
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11557

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !11560
  %add.ptr2 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !11560
  %arrayidx3 = getelementptr inbounds i8, i8* %add.ptr2, i64 1, !dbg !11560
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !11560
  %conv4 = sext i8 %5 to i32, !dbg !11560
  %cmp5 = icmp eq i32 %conv4, 116, !dbg !11560
  br i1 %cmp5, label %if.then, label %if.end, !dbg !11560

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !11562
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !11562
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !11562
  %conv8 = sext i8 %7 to i32, !dbg !11562
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !11562
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !11562

cond.true:                                        ; preds = %if.then
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !11564
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !11564
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !11564
  %conv12 = sext i8 %9 to i32, !dbg !11564
  br label %cond.end, !dbg !11564

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !11566

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv12, %cond.true ], [ -1, %cond.false ], !dbg !11568
  switch i32 %cond, label %sw.epilog [
    i32 108, label %sw.bb13
    i32 103, label %sw.bb14
  ], !dbg !11570

sw.bb13:                                          ; preds = %cond.end
  store i32 60, i32* %retval, align 4, !dbg !11571
  br label %return, !dbg !11571

sw.bb14:                                          ; preds = %cond.end
  store i32 62, i32* %retval, align 4, !dbg !11573
  br label %return, !dbg !11573

sw.epilog:                                        ; preds = %cond.end
  br label %if.end, !dbg !11574

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %sw.bb
  br label %sw.epilog137, !dbg !11575

sw.bb15:                                          ; preds = %entry
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !11576
  %arrayidx16 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !11576
  %11 = load i8, i8* %arrayidx16, align 1, !dbg !11576
  %conv17 = sext i8 %11 to i32, !dbg !11576
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !11576
  br i1 %cmp18, label %land.lhs.true20, label %if.end50, !dbg !11576

land.lhs.true20:                                  ; preds = %sw.bb15
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !11578
  %arrayidx21 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !11578
  %13 = load i8, i8* %arrayidx21, align 1, !dbg !11578
  %conv22 = sext i8 %13 to i32, !dbg !11578
  %cmp23 = icmp eq i32 %conv22, 97, !dbg !11578
  br i1 %cmp23, label %if.then25, label %if.end50, !dbg !11578

if.then25:                                        ; preds = %land.lhs.true20
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !11580
  %add.ptr26 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !11580
  store i8* %add.ptr26, i8** %ptr.addr, align 8, !dbg !11580
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !11582
  %arrayidx27 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !11582
  %16 = load i8, i8* %arrayidx27, align 1, !dbg !11582
  %conv28 = sext i8 %16 to i32, !dbg !11582
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !11582
  br i1 %cmp29, label %land.lhs.true31, label %if.end49, !dbg !11582

land.lhs.true31:                                  ; preds = %if.then25
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !11584
  %arrayidx32 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !11584
  %18 = load i8, i8* %arrayidx32, align 1, !dbg !11584
  %conv33 = sext i8 %18 to i32, !dbg !11584
  %cmp34 = icmp eq i32 %conv33, 109, !dbg !11584
  br i1 %cmp34, label %if.then36, label %if.end49, !dbg !11584

if.then36:                                        ; preds = %land.lhs.true31
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !11586
  %add.ptr37 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !11586
  store i8* %add.ptr37, i8** %ptr.addr, align 8, !dbg !11586
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !11588
  %arrayidx38 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !11588
  %21 = load i8, i8* %arrayidx38, align 1, !dbg !11588
  %conv39 = sext i8 %21 to i32, !dbg !11588
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !11588
  br i1 %cmp40, label %land.lhs.true42, label %if.end48, !dbg !11588

land.lhs.true42:                                  ; preds = %if.then36
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !11590
  %arrayidx43 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !11590
  %23 = load i8, i8* %arrayidx43, align 1, !dbg !11590
  %conv44 = sext i8 %23 to i32, !dbg !11590
  %cmp45 = icmp eq i32 %conv44, 112, !dbg !11590
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !11590

if.then47:                                        ; preds = %land.lhs.true42
  store i32 38, i32* %retval, align 4, !dbg !11592
  br label %return, !dbg !11592

if.end48:                                         ; preds = %land.lhs.true42, %if.then36
  br label %if.end49, !dbg !11593

if.end49:                                         ; preds = %if.end48, %land.lhs.true31, %if.then25
  br label %if.end50, !dbg !11594

if.end50:                                         ; preds = %if.end49, %land.lhs.true20, %sw.bb15
  br label %sw.epilog137, !dbg !11595

sw.bb51:                                          ; preds = %entry
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !11596
  %arrayidx52 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !11596
  %25 = load i8, i8* %arrayidx52, align 1, !dbg !11596
  %conv53 = sext i8 %25 to i32, !dbg !11596
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !11596
  br i1 %cmp54, label %cond.true56, label %cond.false59, !dbg !11596

cond.true56:                                      ; preds = %sw.bb51
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !11597
  %arrayidx57 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !11597
  %27 = load i8, i8* %arrayidx57, align 1, !dbg !11597
  %conv58 = sext i8 %27 to i32, !dbg !11597
  br label %cond.end60, !dbg !11597

cond.false59:                                     ; preds = %sw.bb51
  br label %cond.end60, !dbg !11599

cond.end60:                                       ; preds = %cond.false59, %cond.true56
  %cond61 = phi i32 [ %conv58, %cond.true56 ], [ -1, %cond.false59 ], !dbg !11601
  switch i32 %cond61, label %sw.epilog136 [
    i32 113, label %sw.bb62
    i32 97, label %sw.bb99
  ], !dbg !11603

sw.bb62:                                          ; preds = %cond.end60
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !11604
  %add.ptr63 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !11604
  store i8* %add.ptr63, i8** %ptr.addr, align 8, !dbg !11604
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !11606
  %arrayidx64 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !11606
  %30 = load i8, i8* %arrayidx64, align 1, !dbg !11606
  %conv65 = sext i8 %30 to i32, !dbg !11606
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !11606
  br i1 %cmp66, label %land.lhs.true68, label %if.end98, !dbg !11606

land.lhs.true68:                                  ; preds = %sw.bb62
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !11608
  %arrayidx69 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !11608
  %32 = load i8, i8* %arrayidx69, align 1, !dbg !11608
  %conv70 = sext i8 %32 to i32, !dbg !11608
  %cmp71 = icmp eq i32 %conv70, 117, !dbg !11608
  br i1 %cmp71, label %if.then73, label %if.end98, !dbg !11608

if.then73:                                        ; preds = %land.lhs.true68
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !11610
  %add.ptr74 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !11610
  store i8* %add.ptr74, i8** %ptr.addr, align 8, !dbg !11610
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !11612
  %arrayidx75 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !11612
  %35 = load i8, i8* %arrayidx75, align 1, !dbg !11612
  %conv76 = sext i8 %35 to i32, !dbg !11612
  %cmp77 = icmp eq i32 %conv76, 0, !dbg !11612
  br i1 %cmp77, label %land.lhs.true79, label %if.end97, !dbg !11612

land.lhs.true79:                                  ; preds = %if.then73
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !11614
  %arrayidx80 = getelementptr inbounds i8, i8* %36, i64 1, !dbg !11614
  %37 = load i8, i8* %arrayidx80, align 1, !dbg !11614
  %conv81 = sext i8 %37 to i32, !dbg !11614
  %cmp82 = icmp eq i32 %conv81, 111, !dbg !11614
  br i1 %cmp82, label %if.then84, label %if.end97, !dbg !11614

if.then84:                                        ; preds = %land.lhs.true79
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !11616
  %add.ptr85 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !11616
  store i8* %add.ptr85, i8** %ptr.addr, align 8, !dbg !11616
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !11618
  %arrayidx86 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !11618
  %40 = load i8, i8* %arrayidx86, align 1, !dbg !11618
  %conv87 = sext i8 %40 to i32, !dbg !11618
  %cmp88 = icmp eq i32 %conv87, 0, !dbg !11618
  br i1 %cmp88, label %land.lhs.true90, label %if.end96, !dbg !11618

land.lhs.true90:                                  ; preds = %if.then84
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !11620
  %arrayidx91 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !11620
  %42 = load i8, i8* %arrayidx91, align 1, !dbg !11620
  %conv92 = sext i8 %42 to i32, !dbg !11620
  %cmp93 = icmp eq i32 %conv92, 116, !dbg !11620
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !11620

if.then95:                                        ; preds = %land.lhs.true90
  store i32 34, i32* %retval, align 4, !dbg !11622
  br label %return, !dbg !11622

if.end96:                                         ; preds = %land.lhs.true90, %if.then84
  br label %if.end97, !dbg !11623

if.end97:                                         ; preds = %if.end96, %land.lhs.true79, %if.then73
  br label %if.end98, !dbg !11624

if.end98:                                         ; preds = %if.end97, %land.lhs.true68, %sw.bb62
  br label %sw.epilog136, !dbg !11625

sw.bb99:                                          ; preds = %cond.end60
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !11626
  %add.ptr100 = getelementptr inbounds i8, i8* %43, i64 2, !dbg !11626
  store i8* %add.ptr100, i8** %ptr.addr, align 8, !dbg !11626
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !11627
  %arrayidx101 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !11627
  %45 = load i8, i8* %arrayidx101, align 1, !dbg !11627
  %conv102 = sext i8 %45 to i32, !dbg !11627
  %cmp103 = icmp eq i32 %conv102, 0, !dbg !11627
  br i1 %cmp103, label %land.lhs.true105, label %if.end135, !dbg !11627

land.lhs.true105:                                 ; preds = %sw.bb99
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !11629
  %arrayidx106 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !11629
  %47 = load i8, i8* %arrayidx106, align 1, !dbg !11629
  %conv107 = sext i8 %47 to i32, !dbg !11629
  %cmp108 = icmp eq i32 %conv107, 112, !dbg !11629
  br i1 %cmp108, label %if.then110, label %if.end135, !dbg !11629

if.then110:                                       ; preds = %land.lhs.true105
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !11631
  %add.ptr111 = getelementptr inbounds i8, i8* %48, i64 2, !dbg !11631
  store i8* %add.ptr111, i8** %ptr.addr, align 8, !dbg !11631
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !11633
  %arrayidx112 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !11633
  %50 = load i8, i8* %arrayidx112, align 1, !dbg !11633
  %conv113 = sext i8 %50 to i32, !dbg !11633
  %cmp114 = icmp eq i32 %conv113, 0, !dbg !11633
  br i1 %cmp114, label %land.lhs.true116, label %if.end134, !dbg !11633

land.lhs.true116:                                 ; preds = %if.then110
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !11635
  %arrayidx117 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !11635
  %52 = load i8, i8* %arrayidx117, align 1, !dbg !11635
  %conv118 = sext i8 %52 to i32, !dbg !11635
  %cmp119 = icmp eq i32 %conv118, 111, !dbg !11635
  br i1 %cmp119, label %if.then121, label %if.end134, !dbg !11635

if.then121:                                       ; preds = %land.lhs.true116
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !11637
  %add.ptr122 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !11637
  store i8* %add.ptr122, i8** %ptr.addr, align 8, !dbg !11637
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !11639
  %arrayidx123 = getelementptr inbounds i8, i8* %54, i64 0, !dbg !11639
  %55 = load i8, i8* %arrayidx123, align 1, !dbg !11639
  %conv124 = sext i8 %55 to i32, !dbg !11639
  %cmp125 = icmp eq i32 %conv124, 0, !dbg !11639
  br i1 %cmp125, label %land.lhs.true127, label %if.end133, !dbg !11639

land.lhs.true127:                                 ; preds = %if.then121
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !11641
  %arrayidx128 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !11641
  %57 = load i8, i8* %arrayidx128, align 1, !dbg !11641
  %conv129 = sext i8 %57 to i32, !dbg !11641
  %cmp130 = icmp eq i32 %conv129, 115, !dbg !11641
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !11641

if.then132:                                       ; preds = %land.lhs.true127
  store i32 39, i32* %retval, align 4, !dbg !11643
  br label %return, !dbg !11643

if.end133:                                        ; preds = %land.lhs.true127, %if.then121
  br label %if.end134, !dbg !11644

if.end134:                                        ; preds = %if.end133, %land.lhs.true116, %if.then110
  br label %if.end135, !dbg !11645

if.end135:                                        ; preds = %if.end134, %land.lhs.true105, %sw.bb99
  br label %sw.epilog136, !dbg !11646

sw.epilog136:                                     ; preds = %cond.end60, %if.end135, %if.end98
  br label %sw.epilog137, !dbg !11647

sw.epilog137:                                     ; preds = %sw.epilog136, %entry, %if.end50, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11648
  br label %return, !dbg !11648

return:                                           ; preds = %sw.epilog137, %if.then132, %if.then95, %if.then47, %sw.bb14, %sw.bb13
  %58 = load i32, i32* %retval, align 4, !dbg !11649
  ret i32 %58, !dbg !11649
}

; Function Attrs: nounwind uwtable
define internal void @big2_updatePosition(%struct.encoding* %enc, i8* %ptr, i8* %end, %struct.position* %pos) #0 !dbg !367 {
entry:
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pos.addr = alloca %struct.position*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11650, metadata !444), !dbg !11651
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11652, metadata !444), !dbg !11653
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !11654, metadata !444), !dbg !11655
  store %struct.position* %pos, %struct.position** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.position** %pos.addr, metadata !11656, metadata !444), !dbg !11657
  br label %while.cond, !dbg !11658

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !11659
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11659
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !11659
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !11659
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11659
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !11659
  br i1 %cmp, label %while.body, label %while.end, !dbg !11661

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !11662
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !11662
  %3 = load i8, i8* %arrayidx, align 1, !dbg !11662
  %conv = sext i8 %3 to i32, !dbg !11662
  %cmp1 = icmp eq i32 %conv, 0, !dbg !11662
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11662

cond.true:                                        ; preds = %while.body
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !11664
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !11664
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !11664
  %idxprom = zext i8 %5 to i64, !dbg !11664
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11664
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !11664
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !11664
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !11664
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !11664
  %conv5 = zext i8 %8 to i32, !dbg !11664
  br label %cond.end, !dbg !11664

cond.false:                                       ; preds = %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !11666
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !11666
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !11666
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !11666
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !11666
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !11666
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !11666
  br label %cond.end, !dbg !11666

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !11668
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb8
    i32 7, label %sw.bb10
    i32 10, label %sw.bb12
    i32 9, label %sw.bb14
  ], !dbg !11670

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !11671
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 2, !dbg !11671
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !11671
  br label %sw.epilog, !dbg !11671

sw.bb8:                                           ; preds = %cond.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !11673
  %add.ptr9 = getelementptr inbounds i8, i8* %14, i64 3, !dbg !11673
  store i8* %add.ptr9, i8** %ptr.addr, align 8, !dbg !11673
  br label %sw.epilog, !dbg !11673

sw.bb10:                                          ; preds = %cond.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !11675
  %add.ptr11 = getelementptr inbounds i8, i8* %15, i64 4, !dbg !11675
  store i8* %add.ptr11, i8** %ptr.addr, align 8, !dbg !11675
  br label %sw.epilog, !dbg !11675

sw.bb12:                                          ; preds = %cond.end
  %16 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !11677
  %columnNumber = getelementptr inbounds %struct.position, %struct.position* %16, i32 0, i32 1, !dbg !11678
  store i64 -1, i64* %columnNumber, align 8, !dbg !11679
  %17 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !11680
  %lineNumber = getelementptr inbounds %struct.position, %struct.position* %17, i32 0, i32 0, !dbg !11681
  %18 = load i64, i64* %lineNumber, align 8, !dbg !11682
  %inc = add i64 %18, 1, !dbg !11682
  store i64 %inc, i64* %lineNumber, align 8, !dbg !11682
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !11683
  %add.ptr13 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !11683
  store i8* %add.ptr13, i8** %ptr.addr, align 8, !dbg !11683
  br label %sw.epilog, !dbg !11684

sw.bb14:                                          ; preds = %cond.end
  %20 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !11685
  %lineNumber15 = getelementptr inbounds %struct.position, %struct.position* %20, i32 0, i32 0, !dbg !11686
  %21 = load i64, i64* %lineNumber15, align 8, !dbg !11687
  %inc16 = add i64 %21, 1, !dbg !11687
  store i64 %inc16, i64* %lineNumber15, align 8, !dbg !11687
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !11688
  %add.ptr17 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !11688
  store i8* %add.ptr17, i8** %ptr.addr, align 8, !dbg !11688
  %23 = load i8*, i8** %end.addr, align 8, !dbg !11689
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !11689
  %sub.ptr.lhs.cast18 = ptrtoint i8* %23 to i64, !dbg !11689
  %sub.ptr.rhs.cast19 = ptrtoint i8* %24 to i64, !dbg !11689
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !11689
  %cmp21 = icmp sge i64 %sub.ptr.sub20, 2, !dbg !11689
  br i1 %cmp21, label %land.lhs.true, label %if.end, !dbg !11691

land.lhs.true:                                    ; preds = %sw.bb14
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !11692
  %arrayidx23 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !11692
  %26 = load i8, i8* %arrayidx23, align 1, !dbg !11692
  %conv24 = sext i8 %26 to i32, !dbg !11692
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !11692
  br i1 %cmp25, label %cond.true27, label %cond.false33, !dbg !11692

cond.true27:                                      ; preds = %land.lhs.true
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !11694
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !11694
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !11694
  %idxprom29 = zext i8 %28 to i64, !dbg !11694
  %29 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11694
  %30 = bitcast %struct.encoding* %29 to %struct.normal_encoding*, !dbg !11694
  %type30 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %30, i32 0, i32 1, !dbg !11694
  %arrayidx31 = getelementptr inbounds [256 x i8], [256 x i8]* %type30, i64 0, i64 %idxprom29, !dbg !11694
  %31 = load i8, i8* %arrayidx31, align 1, !dbg !11694
  %conv32 = zext i8 %31 to i32, !dbg !11694
  br label %cond.end37, !dbg !11694

cond.false33:                                     ; preds = %land.lhs.true
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !11696
  %arrayidx34 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !11696
  %33 = load i8, i8* %arrayidx34, align 1, !dbg !11696
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !11696
  %arrayidx35 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !11696
  %35 = load i8, i8* %arrayidx35, align 1, !dbg !11696
  %call36 = call i32 @unicode_byte_type(i8 signext %33, i8 signext %35), !dbg !11696
  br label %cond.end37, !dbg !11696

cond.end37:                                       ; preds = %cond.false33, %cond.true27
  %cond38 = phi i32 [ %conv32, %cond.true27 ], [ %call36, %cond.false33 ], !dbg !11698
  %cmp39 = icmp eq i32 %cond38, 10, !dbg !11700
  br i1 %cmp39, label %if.then, label %if.end, !dbg !11701

if.then:                                          ; preds = %cond.end37
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !11702
  %add.ptr41 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !11702
  store i8* %add.ptr41, i8** %ptr.addr, align 8, !dbg !11702
  br label %if.end, !dbg !11703

if.end:                                           ; preds = %if.then, %cond.end37, %sw.bb14
  %37 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !11704
  %columnNumber42 = getelementptr inbounds %struct.position, %struct.position* %37, i32 0, i32 1, !dbg !11705
  store i64 -1, i64* %columnNumber42, align 8, !dbg !11706
  br label %sw.epilog, !dbg !11707

sw.default:                                       ; preds = %cond.end
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !11708
  %add.ptr43 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !11708
  store i8* %add.ptr43, i8** %ptr.addr, align 8, !dbg !11708
  br label %sw.epilog, !dbg !11709

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb
  %39 = load %struct.position*, %struct.position** %pos.addr, align 8, !dbg !11710
  %columnNumber44 = getelementptr inbounds %struct.position, %struct.position* %39, i32 0, i32 1, !dbg !11711
  %40 = load i64, i64* %columnNumber44, align 8, !dbg !11712
  %inc45 = add i64 %40, 1, !dbg !11712
  store i64 %inc45, i64* %columnNumber44, align 8, !dbg !11712
  br label %while.cond, !dbg !11713

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11715
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_isPublicId(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %badPtr) #0 !dbg !368 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %badPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11716, metadata !444), !dbg !11717
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11718, metadata !444), !dbg !11719
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !11720, metadata !444), !dbg !11721
  store i8** %badPtr, i8*** %badPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %badPtr.addr, metadata !11722, metadata !444), !dbg !11723
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11724
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 2, !dbg !11724
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !11724
  %1 = load i8*, i8** %end.addr, align 8, !dbg !11725
  %add.ptr1 = getelementptr inbounds i8, i8* %1, i64 -2, !dbg !11725
  store i8* %add.ptr1, i8** %end.addr, align 8, !dbg !11725
  br label %for.cond, !dbg !11726

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %end.addr, align 8, !dbg !11727
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !11727
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11727
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11727
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11727
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !11727
  br i1 %cmp, label %for.body, label %for.end, !dbg !11731

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !11732
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !11732
  %5 = load i8, i8* %arrayidx, align 1, !dbg !11732
  %conv = sext i8 %5 to i32, !dbg !11732
  %cmp2 = icmp eq i32 %conv, 0, !dbg !11732
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !11732

cond.true:                                        ; preds = %for.body
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !11734
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !11734
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !11734
  %idxprom = zext i8 %7 to i64, !dbg !11734
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11734
  %9 = bitcast %struct.encoding* %8 to %struct.normal_encoding*, !dbg !11734
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %9, i32 0, i32 1, !dbg !11734
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !11734
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !11734
  %conv6 = zext i8 %10 to i32, !dbg !11734
  br label %cond.end, !dbg !11734

cond.false:                                       ; preds = %for.body
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !11736
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !11736
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !11736
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !11736
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !11736
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !11736
  %call = call i32 @unicode_byte_type(i8 signext %12, i8 signext %14), !dbg !11736
  br label %cond.end, !dbg !11736

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv6, %cond.true ], [ %call, %cond.false ], !dbg !11738
  switch i32 %cond, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
    i32 27, label %sw.bb
    i32 13, label %sw.bb
    i32 31, label %sw.bb
    i32 32, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 17, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 18, label %sw.bb
    i32 16, label %sw.bb
    i32 33, label %sw.bb
    i32 30, label %sw.bb
    i32 19, label %sw.bb
    i32 21, label %sw.bb9
    i32 26, label %sw.bb18
    i32 22, label %sw.bb18
  ], !dbg !11740

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.end
  br label %sw.epilog43, !dbg !11741

sw.bb9:                                           ; preds = %cond.end
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !11743
  %arrayidx10 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !11743
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !11743
  %conv11 = sext i8 %16 to i32, !dbg !11743
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !11743
  br i1 %cmp12, label %land.lhs.true, label %if.end, !dbg !11743

land.lhs.true:                                    ; preds = %sw.bb9
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !11745
  %arrayidx14 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !11745
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !11745
  %conv15 = sext i8 %18 to i32, !dbg !11745
  %cmp16 = icmp eq i32 %conv15, 9, !dbg !11745
  br i1 %cmp16, label %if.then, label %if.end, !dbg !11745

if.then:                                          ; preds = %land.lhs.true
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !11747
  %20 = load i8**, i8*** %badPtr.addr, align 8, !dbg !11749
  store i8* %19, i8** %20, align 8, !dbg !11750
  store i32 0, i32* %retval, align 4, !dbg !11751
  br label %return, !dbg !11751

if.end:                                           ; preds = %land.lhs.true, %sw.bb9
  br label %sw.epilog43, !dbg !11752

sw.bb18:                                          ; preds = %cond.end, %cond.end
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !11753
  %arrayidx19 = getelementptr inbounds i8, i8* %21, i64 0, !dbg !11753
  %22 = load i8, i8* %arrayidx19, align 1, !dbg !11753
  %conv20 = sext i8 %22 to i32, !dbg !11753
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !11753
  br i1 %cmp21, label %cond.true23, label %cond.false26, !dbg !11753

cond.true23:                                      ; preds = %sw.bb18
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !11755
  %arrayidx24 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !11755
  %24 = load i8, i8* %arrayidx24, align 1, !dbg !11755
  %conv25 = sext i8 %24 to i32, !dbg !11755
  br label %cond.end27, !dbg !11755

cond.false26:                                     ; preds = %sw.bb18
  br label %cond.end27, !dbg !11757

cond.end27:                                       ; preds = %cond.false26, %cond.true23
  %cond28 = phi i32 [ %conv25, %cond.true23 ], [ -1, %cond.false26 ], !dbg !11759
  %and = and i32 %cond28, -128, !dbg !11761
  %tobool = icmp ne i32 %and, 0, !dbg !11761
  br i1 %tobool, label %if.end30, label %if.then29, !dbg !11762

if.then29:                                        ; preds = %cond.end27
  br label %sw.epilog43, !dbg !11763

if.end30:                                         ; preds = %cond.end27
  br label %sw.default, !dbg !11764

sw.default:                                       ; preds = %cond.end, %if.end30
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !11766
  %arrayidx31 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !11766
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !11766
  %conv32 = sext i8 %26 to i32, !dbg !11766
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !11766
  br i1 %cmp33, label %cond.true35, label %cond.false38, !dbg !11766

cond.true35:                                      ; preds = %sw.default
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !11767
  %arrayidx36 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !11767
  %28 = load i8, i8* %arrayidx36, align 1, !dbg !11767
  %conv37 = sext i8 %28 to i32, !dbg !11767
  br label %cond.end39, !dbg !11767

cond.false38:                                     ; preds = %sw.default
  br label %cond.end39, !dbg !11769

cond.end39:                                       ; preds = %cond.false38, %cond.true35
  %cond40 = phi i32 [ %conv37, %cond.true35 ], [ -1, %cond.false38 ], !dbg !11771
  switch i32 %cond40, label %sw.default42 [
    i32 36, label %sw.bb41
    i32 64, label %sw.bb41
  ], !dbg !11773

sw.bb41:                                          ; preds = %cond.end39, %cond.end39
  br label %sw.epilog, !dbg !11774

sw.default42:                                     ; preds = %cond.end39
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !11776
  %30 = load i8**, i8*** %badPtr.addr, align 8, !dbg !11777
  store i8* %29, i8** %30, align 8, !dbg !11778
  store i32 0, i32* %retval, align 4, !dbg !11779
  br label %return, !dbg !11779

sw.epilog:                                        ; preds = %sw.bb41
  br label %sw.epilog43, !dbg !11780

sw.epilog43:                                      ; preds = %sw.epilog, %if.then29, %if.end, %sw.bb
  br label %for.inc, !dbg !11781

for.inc:                                          ; preds = %sw.epilog43
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !11782
  %add.ptr44 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !11782
  store i8* %add.ptr44, i8** %ptr.addr, align 8, !dbg !11782
  br label %for.cond, !dbg !11784

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !11785
  br label %return, !dbg !11785

return:                                           ; preds = %for.end, %sw.default42, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !11786
  ret i32 %32, !dbg !11786
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_toUtf8(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i8** %toP, i8* %toLim) #0 !dbg !369 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i8**, align 8
  %toLim.addr = alloca i8*, align 8
  %from = alloca i8*, align 8
  %plane = alloca i32, align 4
  %lo2 = alloca i8, align 1
  %lo = alloca i8, align 1
  %hi = alloca i8, align 1
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !11787, metadata !444), !dbg !11788
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !11789, metadata !444), !dbg !11788
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !11790, metadata !444), !dbg !11788
  store i8** %toP, i8*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %toP.addr, metadata !11791, metadata !444), !dbg !11788
  store i8* %toLim, i8** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %toLim.addr, metadata !11792, metadata !444), !dbg !11788
  call void @llvm.dbg.declare(metadata i8** %from, metadata !11793, metadata !444), !dbg !11788
  %0 = load i8**, i8*** %fromP.addr, align 8, !dbg !11788
  %1 = load i8*, i8** %0, align 8, !dbg !11788
  store i8* %1, i8** %from, align 8, !dbg !11788
  %2 = load i8*, i8** %from, align 8, !dbg !11788
  %3 = load i8*, i8** %fromLim.addr, align 8, !dbg !11788
  %4 = load i8*, i8** %from, align 8, !dbg !11788
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !11788
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !11788
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11788
  %shr = ashr i64 %sub.ptr.sub, 1, !dbg !11788
  %shl = shl i64 %shr, 1, !dbg !11788
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %shl, !dbg !11788
  store i8* %add.ptr, i8** %fromLim.addr, align 8, !dbg !11788
  br label %for.cond, !dbg !11788

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i8*, i8** %from, align 8, !dbg !11794
  %6 = load i8*, i8** %fromLim.addr, align 8, !dbg !11794
  %cmp = icmp ult i8* %5, %6, !dbg !11794
  br i1 %cmp, label %for.body, label %for.end, !dbg !11794

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !11798, metadata !444), !dbg !11800
  call void @llvm.dbg.declare(metadata i8* %lo2, metadata !11801, metadata !444), !dbg !11800
  call void @llvm.dbg.declare(metadata i8* %lo, metadata !11802, metadata !444), !dbg !11800
  %7 = load i8*, i8** %from, align 8, !dbg !11803
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 1, !dbg !11803
  %8 = load i8, i8* %arrayidx, align 1, !dbg !11803
  store i8 %8, i8* %lo, align 1, !dbg !11803
  call void @llvm.dbg.declare(metadata i8* %hi, metadata !11805, metadata !444), !dbg !11800
  %9 = load i8*, i8** %from, align 8, !dbg !11803
  %arrayidx1 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !11803
  %10 = load i8, i8* %arrayidx1, align 1, !dbg !11803
  store i8 %10, i8* %hi, align 1, !dbg !11803
  %11 = load i8, i8* %hi, align 1, !dbg !11803
  %conv = zext i8 %11 to i32, !dbg !11803
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb9
    i32 3, label %sw.bb9
    i32 4, label %sw.bb9
    i32 5, label %sw.bb9
    i32 6, label %sw.bb9
    i32 7, label %sw.bb9
    i32 216, label %sw.bb54
    i32 217, label %sw.bb54
    i32 218, label %sw.bb54
    i32 219, label %sw.bb54
  ], !dbg !11803

sw.bb:                                            ; preds = %for.body
  %12 = load i8, i8* %lo, align 1, !dbg !11806
  %conv2 = zext i8 %12 to i32, !dbg !11806
  %cmp3 = icmp slt i32 %conv2, 128, !dbg !11806
  br i1 %cmp3, label %if.then, label %if.end8, !dbg !11806

if.then:                                          ; preds = %sw.bb
  %13 = load i8**, i8*** %toP.addr, align 8, !dbg !11810
  %14 = load i8*, i8** %13, align 8, !dbg !11810
  %15 = load i8*, i8** %toLim.addr, align 8, !dbg !11810
  %cmp5 = icmp eq i8* %14, %15, !dbg !11810
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !11810

if.then7:                                         ; preds = %if.then
  %16 = load i8*, i8** %from, align 8, !dbg !11814
  %17 = load i8**, i8*** %fromP.addr, align 8, !dbg !11814
  store i8* %16, i8** %17, align 8, !dbg !11814
  store i32 2, i32* %retval, align 4, !dbg !11814
  br label %return, !dbg !11814

if.end:                                           ; preds = %if.then
  %18 = load i8, i8* %lo, align 1, !dbg !11817
  %19 = load i8**, i8*** %toP.addr, align 8, !dbg !11817
  %20 = load i8*, i8** %19, align 8, !dbg !11817
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11817
  store i8* %incdec.ptr, i8** %19, align 8, !dbg !11817
  store i8 %18, i8* %20, align 1, !dbg !11817
  br label %sw.epilog, !dbg !11817

if.end8:                                          ; preds = %sw.bb
  br label %sw.bb9, !dbg !11819

sw.bb9:                                           ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %if.end8
  %21 = load i8*, i8** %toLim.addr, align 8, !dbg !11821
  %22 = load i8**, i8*** %toP.addr, align 8, !dbg !11821
  %23 = load i8*, i8** %22, align 8, !dbg !11821
  %sub.ptr.lhs.cast10 = ptrtoint i8* %21 to i64, !dbg !11821
  %sub.ptr.rhs.cast11 = ptrtoint i8* %23 to i64, !dbg !11821
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !11821
  %cmp13 = icmp slt i64 %sub.ptr.sub12, 2, !dbg !11821
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !11821

if.then15:                                        ; preds = %sw.bb9
  %24 = load i8*, i8** %from, align 8, !dbg !11824
  %25 = load i8**, i8*** %fromP.addr, align 8, !dbg !11824
  store i8* %24, i8** %25, align 8, !dbg !11824
  store i32 2, i32* %retval, align 4, !dbg !11824
  br label %return, !dbg !11824

if.end16:                                         ; preds = %sw.bb9
  %26 = load i8, i8* %lo, align 1, !dbg !11827
  %conv17 = zext i8 %26 to i32, !dbg !11827
  %shr18 = ashr i32 %conv17, 6, !dbg !11827
  %27 = load i8, i8* %hi, align 1, !dbg !11827
  %conv19 = zext i8 %27 to i32, !dbg !11827
  %shl20 = shl i32 %conv19, 2, !dbg !11827
  %or = or i32 %shr18, %shl20, !dbg !11827
  %or21 = or i32 %or, 192, !dbg !11827
  %conv22 = trunc i32 %or21 to i8, !dbg !11827
  %28 = load i8**, i8*** %toP.addr, align 8, !dbg !11827
  %29 = load i8*, i8** %28, align 8, !dbg !11827
  %incdec.ptr23 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !11827
  store i8* %incdec.ptr23, i8** %28, align 8, !dbg !11827
  store i8 %conv22, i8* %29, align 1, !dbg !11827
  %30 = load i8, i8* %lo, align 1, !dbg !11827
  %conv24 = zext i8 %30 to i32, !dbg !11827
  %and = and i32 %conv24, 63, !dbg !11827
  %or25 = or i32 %and, 128, !dbg !11827
  %conv26 = trunc i32 %or25 to i8, !dbg !11827
  %31 = load i8**, i8*** %toP.addr, align 8, !dbg !11827
  %32 = load i8*, i8** %31, align 8, !dbg !11827
  %incdec.ptr27 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !11827
  store i8* %incdec.ptr27, i8** %31, align 8, !dbg !11827
  store i8 %conv26, i8* %32, align 1, !dbg !11827
  br label %sw.epilog, !dbg !11827

sw.default:                                       ; preds = %for.body
  %33 = load i8*, i8** %toLim.addr, align 8, !dbg !11829
  %34 = load i8**, i8*** %toP.addr, align 8, !dbg !11829
  %35 = load i8*, i8** %34, align 8, !dbg !11829
  %sub.ptr.lhs.cast28 = ptrtoint i8* %33 to i64, !dbg !11829
  %sub.ptr.rhs.cast29 = ptrtoint i8* %35 to i64, !dbg !11829
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29, !dbg !11829
  %cmp31 = icmp slt i64 %sub.ptr.sub30, 3, !dbg !11829
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !11829

if.then33:                                        ; preds = %sw.default
  %36 = load i8*, i8** %from, align 8, !dbg !11832
  %37 = load i8**, i8*** %fromP.addr, align 8, !dbg !11832
  store i8* %36, i8** %37, align 8, !dbg !11832
  store i32 2, i32* %retval, align 4, !dbg !11832
  br label %return, !dbg !11832

if.end34:                                         ; preds = %sw.default
  %38 = load i8, i8* %hi, align 1, !dbg !11835
  %conv35 = zext i8 %38 to i32, !dbg !11835
  %shr36 = ashr i32 %conv35, 4, !dbg !11835
  %or37 = or i32 %shr36, 224, !dbg !11835
  %conv38 = trunc i32 %or37 to i8, !dbg !11835
  %39 = load i8**, i8*** %toP.addr, align 8, !dbg !11835
  %40 = load i8*, i8** %39, align 8, !dbg !11835
  %incdec.ptr39 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !11835
  store i8* %incdec.ptr39, i8** %39, align 8, !dbg !11835
  store i8 %conv38, i8* %40, align 1, !dbg !11835
  %41 = load i8, i8* %hi, align 1, !dbg !11835
  %conv40 = zext i8 %41 to i32, !dbg !11835
  %and41 = and i32 %conv40, 15, !dbg !11835
  %shl42 = shl i32 %and41, 2, !dbg !11835
  %42 = load i8, i8* %lo, align 1, !dbg !11835
  %conv43 = zext i8 %42 to i32, !dbg !11835
  %shr44 = ashr i32 %conv43, 6, !dbg !11835
  %or45 = or i32 %shl42, %shr44, !dbg !11835
  %or46 = or i32 %or45, 128, !dbg !11835
  %conv47 = trunc i32 %or46 to i8, !dbg !11835
  %43 = load i8**, i8*** %toP.addr, align 8, !dbg !11835
  %44 = load i8*, i8** %43, align 8, !dbg !11835
  %incdec.ptr48 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !11835
  store i8* %incdec.ptr48, i8** %43, align 8, !dbg !11835
  store i8 %conv47, i8* %44, align 1, !dbg !11835
  %45 = load i8, i8* %lo, align 1, !dbg !11835
  %conv49 = zext i8 %45 to i32, !dbg !11835
  %and50 = and i32 %conv49, 63, !dbg !11835
  %or51 = or i32 %and50, 128, !dbg !11835
  %conv52 = trunc i32 %or51 to i8, !dbg !11835
  %46 = load i8**, i8*** %toP.addr, align 8, !dbg !11835
  %47 = load i8*, i8** %46, align 8, !dbg !11835
  %incdec.ptr53 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !11835
  store i8* %incdec.ptr53, i8** %46, align 8, !dbg !11835
  store i8 %conv52, i8* %47, align 1, !dbg !11835
  br label %sw.epilog, !dbg !11835

sw.bb54:                                          ; preds = %for.body, %for.body, %for.body, %for.body
  %48 = load i8*, i8** %toLim.addr, align 8, !dbg !11837
  %49 = load i8**, i8*** %toP.addr, align 8, !dbg !11837
  %50 = load i8*, i8** %49, align 8, !dbg !11837
  %sub.ptr.lhs.cast55 = ptrtoint i8* %48 to i64, !dbg !11837
  %sub.ptr.rhs.cast56 = ptrtoint i8* %50 to i64, !dbg !11837
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !11837
  %cmp58 = icmp slt i64 %sub.ptr.sub57, 4, !dbg !11837
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !11837

if.then60:                                        ; preds = %sw.bb54
  %51 = load i8*, i8** %from, align 8, !dbg !11840
  %52 = load i8**, i8*** %fromP.addr, align 8, !dbg !11840
  store i8* %51, i8** %52, align 8, !dbg !11840
  store i32 2, i32* %retval, align 4, !dbg !11840
  br label %return, !dbg !11840

if.end61:                                         ; preds = %sw.bb54
  %53 = load i8*, i8** %fromLim.addr, align 8, !dbg !11843
  %54 = load i8*, i8** %from, align 8, !dbg !11843
  %sub.ptr.lhs.cast62 = ptrtoint i8* %53 to i64, !dbg !11843
  %sub.ptr.rhs.cast63 = ptrtoint i8* %54 to i64, !dbg !11843
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63, !dbg !11843
  %cmp65 = icmp slt i64 %sub.ptr.sub64, 4, !dbg !11843
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !11843

if.then67:                                        ; preds = %if.end61
  %55 = load i8*, i8** %from, align 8, !dbg !11846
  %56 = load i8**, i8*** %fromP.addr, align 8, !dbg !11846
  store i8* %55, i8** %56, align 8, !dbg !11846
  store i32 1, i32* %retval, align 4, !dbg !11846
  br label %return, !dbg !11846

if.end68:                                         ; preds = %if.end61
  %57 = load i8, i8* %hi, align 1, !dbg !11849
  %conv69 = zext i8 %57 to i32, !dbg !11849
  %and70 = and i32 %conv69, 3, !dbg !11849
  %shl71 = shl i32 %and70, 2, !dbg !11849
  %58 = load i8, i8* %lo, align 1, !dbg !11849
  %conv72 = zext i8 %58 to i32, !dbg !11849
  %shr73 = ashr i32 %conv72, 6, !dbg !11849
  %and74 = and i32 %shr73, 3, !dbg !11849
  %or75 = or i32 %shl71, %and74, !dbg !11849
  %add = add nsw i32 %or75, 1, !dbg !11849
  store i32 %add, i32* %plane, align 4, !dbg !11849
  %59 = load i32, i32* %plane, align 4, !dbg !11849
  %shr76 = ashr i32 %59, 2, !dbg !11849
  %or77 = or i32 %shr76, 240, !dbg !11849
  %conv78 = trunc i32 %or77 to i8, !dbg !11849
  %60 = load i8**, i8*** %toP.addr, align 8, !dbg !11849
  %61 = load i8*, i8** %60, align 8, !dbg !11849
  %incdec.ptr79 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !11849
  store i8* %incdec.ptr79, i8** %60, align 8, !dbg !11849
  store i8 %conv78, i8* %61, align 1, !dbg !11849
  %62 = load i8, i8* %lo, align 1, !dbg !11849
  %conv80 = zext i8 %62 to i32, !dbg !11849
  %shr81 = ashr i32 %conv80, 2, !dbg !11849
  %and82 = and i32 %shr81, 15, !dbg !11849
  %63 = load i32, i32* %plane, align 4, !dbg !11849
  %and83 = and i32 %63, 3, !dbg !11849
  %shl84 = shl i32 %and83, 4, !dbg !11849
  %or85 = or i32 %and82, %shl84, !dbg !11849
  %or86 = or i32 %or85, 128, !dbg !11849
  %conv87 = trunc i32 %or86 to i8, !dbg !11849
  %64 = load i8**, i8*** %toP.addr, align 8, !dbg !11849
  %65 = load i8*, i8** %64, align 8, !dbg !11849
  %incdec.ptr88 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !11849
  store i8* %incdec.ptr88, i8** %64, align 8, !dbg !11849
  store i8 %conv87, i8* %65, align 1, !dbg !11849
  %66 = load i8*, i8** %from, align 8, !dbg !11849
  %add.ptr89 = getelementptr inbounds i8, i8* %66, i64 2, !dbg !11849
  store i8* %add.ptr89, i8** %from, align 8, !dbg !11849
  %67 = load i8*, i8** %from, align 8, !dbg !11849
  %arrayidx90 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !11849
  %68 = load i8, i8* %arrayidx90, align 1, !dbg !11849
  store i8 %68, i8* %lo2, align 1, !dbg !11849
  %69 = load i8, i8* %lo, align 1, !dbg !11849
  %conv91 = zext i8 %69 to i32, !dbg !11849
  %and92 = and i32 %conv91, 3, !dbg !11849
  %shl93 = shl i32 %and92, 4, !dbg !11849
  %70 = load i8*, i8** %from, align 8, !dbg !11849
  %arrayidx94 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !11849
  %71 = load i8, i8* %arrayidx94, align 1, !dbg !11849
  %conv95 = zext i8 %71 to i32, !dbg !11849
  %and96 = and i32 %conv95, 3, !dbg !11849
  %shl97 = shl i32 %and96, 2, !dbg !11849
  %or98 = or i32 %shl93, %shl97, !dbg !11849
  %72 = load i8, i8* %lo2, align 1, !dbg !11849
  %conv99 = zext i8 %72 to i32, !dbg !11849
  %shr100 = ashr i32 %conv99, 6, !dbg !11849
  %or101 = or i32 %or98, %shr100, !dbg !11849
  %or102 = or i32 %or101, 128, !dbg !11849
  %conv103 = trunc i32 %or102 to i8, !dbg !11849
  %73 = load i8**, i8*** %toP.addr, align 8, !dbg !11849
  %74 = load i8*, i8** %73, align 8, !dbg !11849
  %incdec.ptr104 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !11849
  store i8* %incdec.ptr104, i8** %73, align 8, !dbg !11849
  store i8 %conv103, i8* %74, align 1, !dbg !11849
  %75 = load i8, i8* %lo2, align 1, !dbg !11849
  %conv105 = zext i8 %75 to i32, !dbg !11849
  %and106 = and i32 %conv105, 63, !dbg !11849
  %or107 = or i32 %and106, 128, !dbg !11849
  %conv108 = trunc i32 %or107 to i8, !dbg !11849
  %76 = load i8**, i8*** %toP.addr, align 8, !dbg !11849
  %77 = load i8*, i8** %76, align 8, !dbg !11849
  %incdec.ptr109 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !11849
  store i8* %incdec.ptr109, i8** %76, align 8, !dbg !11849
  store i8 %conv108, i8* %77, align 1, !dbg !11849
  br label %sw.epilog, !dbg !11849

sw.epilog:                                        ; preds = %if.end68, %if.end34, %if.end16, %if.end
  br label %for.inc, !dbg !11851

for.inc:                                          ; preds = %sw.epilog
  %78 = load i8*, i8** %from, align 8, !dbg !11853
  %add.ptr110 = getelementptr inbounds i8, i8* %78, i64 2, !dbg !11853
  store i8* %add.ptr110, i8** %from, align 8, !dbg !11853
  br label %for.cond, !dbg !11853

for.end:                                          ; preds = %for.cond
  %79 = load i8*, i8** %from, align 8, !dbg !11855
  %80 = load i8**, i8*** %fromP.addr, align 8, !dbg !11855
  store i8* %79, i8** %80, align 8, !dbg !11855
  %81 = load i8*, i8** %from, align 8, !dbg !11855
  %82 = load i8*, i8** %fromLim.addr, align 8, !dbg !11855
  %cmp111 = icmp ult i8* %81, %82, !dbg !11855
  br i1 %cmp111, label %if.then113, label %if.else, !dbg !11855

if.then113:                                       ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !11857
  br label %return, !dbg !11857

if.else:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !11860
  br label %return, !dbg !11860

return:                                           ; preds = %if.else, %if.then113, %if.then67, %if.then60, %if.then33, %if.then15, %if.then7
  %83 = load i32, i32* %retval, align 4, !dbg !11862
  ret i32 %83, !dbg !11862
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_toUtf16(%struct.encoding* %UNUSED_enc, i8** %fromP, i8* %fromLim, i16** %toP, i16* %toLim) #0 !dbg !370 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %fromP.addr = alloca i8**, align 8
  %fromLim.addr = alloca i8*, align 8
  %toP.addr = alloca i16**, align 8
  %toLim.addr = alloca i16*, align 8
  %res = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !11864, metadata !444), !dbg !11865
  store i8** %fromP, i8*** %fromP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fromP.addr, metadata !11866, metadata !444), !dbg !11865
  store i8* %fromLim, i8** %fromLim.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fromLim.addr, metadata !11867, metadata !444), !dbg !11865
  store i16** %toP, i16*** %toP.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %toP.addr, metadata !11868, metadata !444), !dbg !11865
  store i16* %toLim, i16** %toLim.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %toLim.addr, metadata !11869, metadata !444), !dbg !11865
  call void @llvm.dbg.declare(metadata i32* %res, metadata !11870, metadata !444), !dbg !11865
  store i32 0, i32* %res, align 4, !dbg !11865
  %0 = load i8**, i8*** %fromP.addr, align 8, !dbg !11865
  %1 = load i8*, i8** %0, align 8, !dbg !11865
  %2 = load i8*, i8** %fromLim.addr, align 8, !dbg !11865
  %3 = load i8**, i8*** %fromP.addr, align 8, !dbg !11865
  %4 = load i8*, i8** %3, align 8, !dbg !11865
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11865
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !11865
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11865
  %shr = ashr i64 %sub.ptr.sub, 1, !dbg !11865
  %shl = shl i64 %shr, 1, !dbg !11865
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %shl, !dbg !11865
  store i8* %add.ptr, i8** %fromLim.addr, align 8, !dbg !11865
  %5 = load i8*, i8** %fromLim.addr, align 8, !dbg !11871
  %6 = load i8**, i8*** %fromP.addr, align 8, !dbg !11871
  %7 = load i8*, i8** %6, align 8, !dbg !11871
  %sub.ptr.lhs.cast1 = ptrtoint i8* %5 to i64, !dbg !11871
  %sub.ptr.rhs.cast2 = ptrtoint i8* %7 to i64, !dbg !11871
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !11871
  %8 = load i16*, i16** %toLim.addr, align 8, !dbg !11871
  %9 = load i16**, i16*** %toP.addr, align 8, !dbg !11871
  %10 = load i16*, i16** %9, align 8, !dbg !11871
  %sub.ptr.lhs.cast4 = ptrtoint i16* %8 to i64, !dbg !11871
  %sub.ptr.rhs.cast5 = ptrtoint i16* %10 to i64, !dbg !11871
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5, !dbg !11871
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub6, 2, !dbg !11871
  %shl7 = shl i64 %sub.ptr.div, 1, !dbg !11871
  %cmp = icmp sgt i64 %sub.ptr.sub3, %shl7, !dbg !11871
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11871

land.lhs.true:                                    ; preds = %entry
  %11 = load i8*, i8** %fromLim.addr, align 8, !dbg !11873
  %add.ptr8 = getelementptr inbounds i8, i8* %11, i64 -2, !dbg !11873
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr8, i64 0, !dbg !11873
  %12 = load i8, i8* %arrayidx, align 1, !dbg !11873
  %conv = zext i8 %12 to i32, !dbg !11873
  %and = and i32 %conv, 248, !dbg !11873
  %cmp9 = icmp eq i32 %and, 216, !dbg !11873
  br i1 %cmp9, label %if.then, label %if.end, !dbg !11873

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %fromLim.addr, align 8, !dbg !11875
  %add.ptr11 = getelementptr inbounds i8, i8* %13, i64 -2, !dbg !11875
  store i8* %add.ptr11, i8** %fromLim.addr, align 8, !dbg !11875
  store i32 1, i32* %res, align 4, !dbg !11875
  br label %if.end, !dbg !11875

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %for.cond, !dbg !11878

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i8**, i8*** %fromP.addr, align 8, !dbg !11880
  %15 = load i8*, i8** %14, align 8, !dbg !11880
  %16 = load i8*, i8** %fromLim.addr, align 8, !dbg !11880
  %cmp12 = icmp ult i8* %15, %16, !dbg !11880
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !11880

land.rhs:                                         ; preds = %for.cond
  %17 = load i16**, i16*** %toP.addr, align 8, !dbg !11884
  %18 = load i16*, i16** %17, align 8, !dbg !11884
  %19 = load i16*, i16** %toLim.addr, align 8, !dbg !11884
  %cmp14 = icmp ult i16* %18, %19, !dbg !11884
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp14, %land.rhs ]
  br i1 %20, label %for.body, label %for.end, !dbg !11886

for.body:                                         ; preds = %land.end
  %21 = load i8**, i8*** %fromP.addr, align 8, !dbg !11888
  %22 = load i8*, i8** %21, align 8, !dbg !11888
  %arrayidx16 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !11888
  %23 = load i8, i8* %arrayidx16, align 1, !dbg !11888
  %conv17 = zext i8 %23 to i32, !dbg !11888
  %shl18 = shl i32 %conv17, 8, !dbg !11888
  %24 = load i8**, i8*** %fromP.addr, align 8, !dbg !11888
  %25 = load i8*, i8** %24, align 8, !dbg !11888
  %arrayidx19 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !11888
  %26 = load i8, i8* %arrayidx19, align 1, !dbg !11888
  %conv20 = zext i8 %26 to i32, !dbg !11888
  %or = or i32 %shl18, %conv20, !dbg !11888
  %conv21 = trunc i32 %or to i16, !dbg !11888
  %27 = load i16**, i16*** %toP.addr, align 8, !dbg !11888
  %28 = load i16*, i16** %27, align 8, !dbg !11888
  %incdec.ptr = getelementptr inbounds i16, i16* %28, i32 1, !dbg !11888
  store i16* %incdec.ptr, i16** %27, align 8, !dbg !11888
  store i16 %conv21, i16* %28, align 2, !dbg !11888
  br label %for.inc, !dbg !11888

for.inc:                                          ; preds = %for.body
  %29 = load i8**, i8*** %fromP.addr, align 8, !dbg !11890
  %30 = load i8*, i8** %29, align 8, !dbg !11890
  %add.ptr22 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !11890
  store i8* %add.ptr22, i8** %29, align 8, !dbg !11890
  br label %for.cond, !dbg !11890

for.end:                                          ; preds = %land.end
  %31 = load i16**, i16*** %toP.addr, align 8, !dbg !11892
  %32 = load i16*, i16** %31, align 8, !dbg !11892
  %33 = load i16*, i16** %toLim.addr, align 8, !dbg !11892
  %cmp23 = icmp eq i16* %32, %33, !dbg !11892
  br i1 %cmp23, label %land.lhs.true25, label %if.else, !dbg !11892

land.lhs.true25:                                  ; preds = %for.end
  %34 = load i8**, i8*** %fromP.addr, align 8, !dbg !11895
  %35 = load i8*, i8** %34, align 8, !dbg !11895
  %36 = load i8*, i8** %fromLim.addr, align 8, !dbg !11895
  %cmp26 = icmp ult i8* %35, %36, !dbg !11895
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !11895

if.then28:                                        ; preds = %land.lhs.true25
  store i32 2, i32* %retval, align 4, !dbg !11897
  br label %return, !dbg !11897

if.else:                                          ; preds = %land.lhs.true25, %for.end
  %37 = load i32, i32* %res, align 4, !dbg !11899
  store i32 %37, i32* %retval, align 4, !dbg !11899
  br label %return, !dbg !11899

return:                                           ; preds = %if.else, %if.then28
  %38 = load i32, i32* %retval, align 4, !dbg !11901
  ret i32 %38, !dbg !11901
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanLit(i32 %open, %struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !343 {
entry:
  %retval = alloca i32, align 4
  %open.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %t = alloca i32, align 4
  store i32 %open, i32* %open.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %open.addr, metadata !11903, metadata !444), !dbg !11904
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11905, metadata !444), !dbg !11906
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11907, metadata !444), !dbg !11908
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !11909, metadata !444), !dbg !11910
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !11911, metadata !444), !dbg !11912
  br label %while.cond, !dbg !11913

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !11914
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11914
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !11914
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !11914
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11914
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !11914
  br i1 %cmp, label %while.body, label %while.end, !dbg !11916

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %t, metadata !11917, metadata !444), !dbg !11919
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !11920
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !11920
  %3 = load i8, i8* %arrayidx, align 1, !dbg !11920
  %conv = sext i8 %3 to i32, !dbg !11920
  %cmp1 = icmp eq i32 %conv, 0, !dbg !11920
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11920

cond.true:                                        ; preds = %while.body
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !11921
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !11921
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !11921
  %idxprom = zext i8 %5 to i64, !dbg !11921
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11921
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !11921
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !11921
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !11921
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !11921
  %conv5 = zext i8 %8 to i32, !dbg !11921
  br label %cond.end, !dbg !11921

cond.false:                                       ; preds = %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !11923
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !11923
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !11923
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !11923
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !11923
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !11923
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !11923
  br label %cond.end, !dbg !11923

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !11925
  store i32 %cond, i32* %t, align 4, !dbg !11927
  %13 = load i32, i32* %t, align 4, !dbg !11928
  switch i32 %13, label %sw.default62 [
    i32 5, label %sw.bb
    i32 6, label %sw.bb13
    i32 7, label %sw.bb22
    i32 0, label %sw.bb31
    i32 1, label %sw.bb31
    i32 8, label %sw.bb31
    i32 12, label %sw.bb32
    i32 13, label %sw.bb32
  ], !dbg !11929

sw.bb:                                            ; preds = %cond.end
  %14 = load i8*, i8** %end.addr, align 8, !dbg !11930
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !11930
  %sub.ptr.lhs.cast8 = ptrtoint i8* %14 to i64, !dbg !11930
  %sub.ptr.rhs.cast9 = ptrtoint i8* %15 to i64, !dbg !11930
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9, !dbg !11930
  %cmp11 = icmp slt i64 %sub.ptr.sub10, 2, !dbg !11930
  br i1 %cmp11, label %if.then, label %if.end, !dbg !11933

if.then:                                          ; preds = %sw.bb
  store i32 -2, i32* %retval, align 4, !dbg !11934
  br label %return, !dbg !11934

if.end:                                           ; preds = %sw.bb
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !11936
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 2, !dbg !11936
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !11936
  br label %sw.epilog, !dbg !11936

sw.bb13:                                          ; preds = %cond.end
  %17 = load i8*, i8** %end.addr, align 8, !dbg !11938
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !11938
  %sub.ptr.lhs.cast14 = ptrtoint i8* %17 to i64, !dbg !11938
  %sub.ptr.rhs.cast15 = ptrtoint i8* %18 to i64, !dbg !11938
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !11938
  %cmp17 = icmp slt i64 %sub.ptr.sub16, 3, !dbg !11938
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11938

if.then19:                                        ; preds = %sw.bb13
  store i32 -2, i32* %retval, align 4, !dbg !11941
  br label %return, !dbg !11941

if.end20:                                         ; preds = %sw.bb13
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !11943
  %add.ptr21 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !11943
  store i8* %add.ptr21, i8** %ptr.addr, align 8, !dbg !11943
  br label %sw.epilog, !dbg !11943

sw.bb22:                                          ; preds = %cond.end
  %20 = load i8*, i8** %end.addr, align 8, !dbg !11945
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !11945
  %sub.ptr.lhs.cast23 = ptrtoint i8* %20 to i64, !dbg !11945
  %sub.ptr.rhs.cast24 = ptrtoint i8* %21 to i64, !dbg !11945
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !11945
  %cmp26 = icmp slt i64 %sub.ptr.sub25, 4, !dbg !11945
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !11945

if.then28:                                        ; preds = %sw.bb22
  store i32 -2, i32* %retval, align 4, !dbg !11948
  br label %return, !dbg !11948

if.end29:                                         ; preds = %sw.bb22
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !11950
  %add.ptr30 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !11950
  store i8* %add.ptr30, i8** %ptr.addr, align 8, !dbg !11950
  br label %sw.epilog, !dbg !11950

sw.bb31:                                          ; preds = %cond.end, %cond.end, %cond.end
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !11952
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !11952
  store i8* %23, i8** %24, align 8, !dbg !11952
  store i32 0, i32* %retval, align 4, !dbg !11952
  br label %return, !dbg !11952

sw.bb32:                                          ; preds = %cond.end, %cond.end
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !11954
  %add.ptr33 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !11954
  store i8* %add.ptr33, i8** %ptr.addr, align 8, !dbg !11954
  %26 = load i32, i32* %t, align 4, !dbg !11955
  %27 = load i32, i32* %open.addr, align 4, !dbg !11957
  %cmp34 = icmp ne i32 %26, %27, !dbg !11958
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11959

if.then36:                                        ; preds = %sw.bb32
  br label %sw.epilog, !dbg !11960

if.end37:                                         ; preds = %sw.bb32
  %28 = load i8*, i8** %end.addr, align 8, !dbg !11961
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !11961
  %sub.ptr.lhs.cast38 = ptrtoint i8* %28 to i64, !dbg !11961
  %sub.ptr.rhs.cast39 = ptrtoint i8* %29 to i64, !dbg !11961
  %sub.ptr.sub40 = sub i64 %sub.ptr.lhs.cast38, %sub.ptr.rhs.cast39, !dbg !11961
  %cmp41 = icmp sge i64 %sub.ptr.sub40, 2, !dbg !11961
  br i1 %cmp41, label %if.end44, label %if.then43, !dbg !11963

if.then43:                                        ; preds = %if.end37
  store i32 -27, i32* %retval, align 4, !dbg !11964
  br label %return, !dbg !11964

if.end44:                                         ; preds = %if.end37
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !11965
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !11966
  store i8* %30, i8** %31, align 8, !dbg !11967
  %32 = load i8*, i8** %ptr.addr, align 8, !dbg !11968
  %arrayidx45 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !11968
  %33 = load i8, i8* %arrayidx45, align 1, !dbg !11968
  %conv46 = sext i8 %33 to i32, !dbg !11968
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !11968
  br i1 %cmp47, label %cond.true49, label %cond.false55, !dbg !11968

cond.true49:                                      ; preds = %if.end44
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !11969
  %arrayidx50 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !11969
  %35 = load i8, i8* %arrayidx50, align 1, !dbg !11969
  %idxprom51 = zext i8 %35 to i64, !dbg !11969
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11969
  %37 = bitcast %struct.encoding* %36 to %struct.normal_encoding*, !dbg !11969
  %type52 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %37, i32 0, i32 1, !dbg !11969
  %arrayidx53 = getelementptr inbounds [256 x i8], [256 x i8]* %type52, i64 0, i64 %idxprom51, !dbg !11969
  %38 = load i8, i8* %arrayidx53, align 1, !dbg !11969
  %conv54 = zext i8 %38 to i32, !dbg !11969
  br label %cond.end59, !dbg !11969

cond.false55:                                     ; preds = %if.end44
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !11971
  %arrayidx56 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !11971
  %40 = load i8, i8* %arrayidx56, align 1, !dbg !11971
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !11971
  %arrayidx57 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !11971
  %42 = load i8, i8* %arrayidx57, align 1, !dbg !11971
  %call58 = call i32 @unicode_byte_type(i8 signext %40, i8 signext %42), !dbg !11971
  br label %cond.end59, !dbg !11971

cond.end59:                                       ; preds = %cond.false55, %cond.true49
  %cond60 = phi i32 [ %conv54, %cond.true49 ], [ %call58, %cond.false55 ], !dbg !11973
  switch i32 %cond60, label %sw.default [
    i32 21, label %sw.bb61
    i32 9, label %sw.bb61
    i32 10, label %sw.bb61
    i32 11, label %sw.bb61
    i32 30, label %sw.bb61
    i32 20, label %sw.bb61
  ], !dbg !11975

sw.bb61:                                          ; preds = %cond.end59, %cond.end59, %cond.end59, %cond.end59, %cond.end59, %cond.end59
  store i32 27, i32* %retval, align 4, !dbg !11976
  br label %return, !dbg !11976

sw.default:                                       ; preds = %cond.end59
  store i32 0, i32* %retval, align 4, !dbg !11978
  br label %return, !dbg !11978

sw.default62:                                     ; preds = %cond.end
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !11979
  %add.ptr63 = getelementptr inbounds i8, i8* %43, i64 2, !dbg !11979
  store i8* %add.ptr63, i8** %ptr.addr, align 8, !dbg !11979
  br label %sw.epilog, !dbg !11980

sw.epilog:                                        ; preds = %sw.default62, %if.then36, %if.end29, %if.end20, %if.end
  br label %while.cond, !dbg !11981

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !11983
  br label %return, !dbg !11983

return:                                           ; preds = %while.end, %sw.default, %sw.bb61, %if.then43, %sw.bb31, %if.then28, %if.then19, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !11984
  ret i32 %44, !dbg !11984
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanDecl(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !344 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11985, metadata !444), !dbg !11986
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11987, metadata !444), !dbg !11988
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !11989, metadata !444), !dbg !11990
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !11991, metadata !444), !dbg !11992
  %0 = load i8*, i8** %end.addr, align 8, !dbg !11993
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11993
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !11993
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !11993
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11993
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !11993
  br i1 %cmp, label %if.end, label %if.then, !dbg !11996

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !11997
  br label %return, !dbg !11997

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12000
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !12000
  %3 = load i8, i8* %arrayidx, align 1, !dbg !12000
  %conv = sext i8 %3 to i32, !dbg !12000
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12000
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12000

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !12001
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !12001
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !12001
  %idxprom = zext i8 %5 to i64, !dbg !12001
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12001
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !12001
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !12001
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !12001
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !12001
  %conv5 = zext i8 %8 to i32, !dbg !12001
  br label %cond.end, !dbg !12001

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !12003
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !12003
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !12003
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !12003
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !12003
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !12003
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !12003
  br label %cond.end, !dbg !12003

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !12005
  switch i32 %cond, label %sw.default [
    i32 27, label %sw.bb
    i32 20, label %sw.bb9
    i32 22, label %sw.bb11
    i32 24, label %sw.bb11
  ], !dbg !12007

sw.bb:                                            ; preds = %cond.end
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12008
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !12010
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 2, !dbg !12011
  %15 = load i8*, i8** %end.addr, align 8, !dbg !12012
  %16 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12013
  %call8 = call i32 @big2_scanComment(%struct.encoding* %13, i8* %add.ptr, i8* %15, i8** %16), !dbg !12014
  store i32 %call8, i32* %retval, align 4, !dbg !12015
  br label %return, !dbg !12015

sw.bb9:                                           ; preds = %cond.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !12016
  %add.ptr10 = getelementptr inbounds i8, i8* %17, i64 2, !dbg !12017
  %18 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12018
  store i8* %add.ptr10, i8** %18, align 8, !dbg !12019
  store i32 33, i32* %retval, align 4, !dbg !12020
  br label %return, !dbg !12020

sw.bb11:                                          ; preds = %cond.end, %cond.end
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !12021
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !12021
  store i8* %add.ptr12, i8** %ptr.addr, align 8, !dbg !12021
  br label %sw.epilog, !dbg !12022

sw.default:                                       ; preds = %cond.end
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !12023
  %21 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12024
  store i8* %20, i8** %21, align 8, !dbg !12025
  store i32 0, i32* %retval, align 4, !dbg !12026
  br label %return, !dbg !12026

sw.epilog:                                        ; preds = %sw.bb11
  br label %while.cond, !dbg !12027

while.cond:                                       ; preds = %sw.epilog68, %sw.epilog
  %22 = load i8*, i8** %end.addr, align 8, !dbg !12028
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !12028
  %sub.ptr.lhs.cast13 = ptrtoint i8* %22 to i64, !dbg !12028
  %sub.ptr.rhs.cast14 = ptrtoint i8* %23 to i64, !dbg !12028
  %sub.ptr.sub15 = sub i64 %sub.ptr.lhs.cast13, %sub.ptr.rhs.cast14, !dbg !12028
  %cmp16 = icmp sge i64 %sub.ptr.sub15, 2, !dbg !12028
  br i1 %cmp16, label %while.body, label %while.end, !dbg !12029

while.body:                                       ; preds = %while.cond
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !12030
  %arrayidx18 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !12030
  %25 = load i8, i8* %arrayidx18, align 1, !dbg !12030
  %conv19 = sext i8 %25 to i32, !dbg !12030
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !12030
  br i1 %cmp20, label %cond.true22, label %cond.false28, !dbg !12030

cond.true22:                                      ; preds = %while.body
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !12032
  %arrayidx23 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !12032
  %27 = load i8, i8* %arrayidx23, align 1, !dbg !12032
  %idxprom24 = zext i8 %27 to i64, !dbg !12032
  %28 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12032
  %29 = bitcast %struct.encoding* %28 to %struct.normal_encoding*, !dbg !12032
  %type25 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %29, i32 0, i32 1, !dbg !12032
  %arrayidx26 = getelementptr inbounds [256 x i8], [256 x i8]* %type25, i64 0, i64 %idxprom24, !dbg !12032
  %30 = load i8, i8* %arrayidx26, align 1, !dbg !12032
  %conv27 = zext i8 %30 to i32, !dbg !12032
  br label %cond.end32, !dbg !12032

cond.false28:                                     ; preds = %while.body
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !12034
  %arrayidx29 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !12034
  %32 = load i8, i8* %arrayidx29, align 1, !dbg !12034
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !12034
  %arrayidx30 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !12034
  %34 = load i8, i8* %arrayidx30, align 1, !dbg !12034
  %call31 = call i32 @unicode_byte_type(i8 signext %32, i8 signext %34), !dbg !12034
  br label %cond.end32, !dbg !12034

cond.end32:                                       ; preds = %cond.false28, %cond.true22
  %cond33 = phi i32 [ %conv27, %cond.true22 ], [ %call31, %cond.false28 ], !dbg !12036
  switch i32 %cond33, label %sw.default67 [
    i32 30, label %sw.bb34
    i32 21, label %sw.bb64
    i32 9, label %sw.bb64
    i32 10, label %sw.bb64
    i32 22, label %sw.bb65
    i32 24, label %sw.bb65
  ], !dbg !12038

sw.bb34:                                          ; preds = %cond.end32
  %35 = load i8*, i8** %end.addr, align 8, !dbg !12039
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !12039
  %sub.ptr.lhs.cast35 = ptrtoint i8* %35 to i64, !dbg !12039
  %sub.ptr.rhs.cast36 = ptrtoint i8* %36 to i64, !dbg !12039
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !12039
  %cmp38 = icmp sge i64 %sub.ptr.sub37, 4, !dbg !12039
  br i1 %cmp38, label %if.end41, label %if.then40, !dbg !12043

if.then40:                                        ; preds = %sw.bb34
  store i32 -1, i32* %retval, align 4, !dbg !12044
  br label %return, !dbg !12044

if.end41:                                         ; preds = %sw.bb34
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !12047
  %add.ptr42 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !12047
  %arrayidx43 = getelementptr inbounds i8, i8* %add.ptr42, i64 0, !dbg !12047
  %38 = load i8, i8* %arrayidx43, align 1, !dbg !12047
  %conv44 = sext i8 %38 to i32, !dbg !12047
  %cmp45 = icmp eq i32 %conv44, 0, !dbg !12047
  br i1 %cmp45, label %cond.true47, label %cond.false54, !dbg !12047

cond.true47:                                      ; preds = %if.end41
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !12048
  %add.ptr48 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !12048
  %arrayidx49 = getelementptr inbounds i8, i8* %add.ptr48, i64 1, !dbg !12048
  %40 = load i8, i8* %arrayidx49, align 1, !dbg !12048
  %idxprom50 = zext i8 %40 to i64, !dbg !12048
  %41 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12048
  %42 = bitcast %struct.encoding* %41 to %struct.normal_encoding*, !dbg !12048
  %type51 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %42, i32 0, i32 1, !dbg !12048
  %arrayidx52 = getelementptr inbounds [256 x i8], [256 x i8]* %type51, i64 0, i64 %idxprom50, !dbg !12048
  %43 = load i8, i8* %arrayidx52, align 1, !dbg !12048
  %conv53 = zext i8 %43 to i32, !dbg !12048
  br label %cond.end60, !dbg !12048

cond.false54:                                     ; preds = %if.end41
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !12050
  %add.ptr55 = getelementptr inbounds i8, i8* %44, i64 2, !dbg !12050
  %arrayidx56 = getelementptr inbounds i8, i8* %add.ptr55, i64 0, !dbg !12050
  %45 = load i8, i8* %arrayidx56, align 1, !dbg !12050
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !12050
  %add.ptr57 = getelementptr inbounds i8, i8* %46, i64 2, !dbg !12050
  %arrayidx58 = getelementptr inbounds i8, i8* %add.ptr57, i64 1, !dbg !12050
  %47 = load i8, i8* %arrayidx58, align 1, !dbg !12050
  %call59 = call i32 @unicode_byte_type(i8 signext %45, i8 signext %47), !dbg !12050
  br label %cond.end60, !dbg !12050

cond.end60:                                       ; preds = %cond.false54, %cond.true47
  %cond61 = phi i32 [ %conv53, %cond.true47 ], [ %call59, %cond.false54 ], !dbg !12052
  switch i32 %cond61, label %sw.epilog63 [
    i32 21, label %sw.bb62
    i32 9, label %sw.bb62
    i32 10, label %sw.bb62
    i32 30, label %sw.bb62
  ], !dbg !12054

sw.bb62:                                          ; preds = %cond.end60, %cond.end60, %cond.end60, %cond.end60
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !12055
  %49 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12057
  store i8* %48, i8** %49, align 8, !dbg !12058
  store i32 0, i32* %retval, align 4, !dbg !12059
  br label %return, !dbg !12059

sw.epilog63:                                      ; preds = %cond.end60
  br label %sw.bb64, !dbg !12060

sw.bb64:                                          ; preds = %cond.end32, %cond.end32, %cond.end32, %sw.epilog63
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !12061
  %51 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12062
  store i8* %50, i8** %51, align 8, !dbg !12063
  store i32 16, i32* %retval, align 4, !dbg !12064
  br label %return, !dbg !12064

sw.bb65:                                          ; preds = %cond.end32, %cond.end32
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !12065
  %add.ptr66 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !12065
  store i8* %add.ptr66, i8** %ptr.addr, align 8, !dbg !12065
  br label %sw.epilog68, !dbg !12066

sw.default67:                                     ; preds = %cond.end32
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !12067
  %54 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12068
  store i8* %53, i8** %54, align 8, !dbg !12069
  store i32 0, i32* %retval, align 4, !dbg !12070
  br label %return, !dbg !12070

sw.epilog68:                                      ; preds = %sw.bb65
  br label %while.cond, !dbg !12071

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !12072
  br label %return, !dbg !12072

return:                                           ; preds = %while.end, %sw.default67, %sw.bb64, %sw.bb62, %if.then40, %sw.default, %sw.bb9, %sw.bb, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !12073
  ret i32 %55, !dbg !12073
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanPi(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !346 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %target = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !12074, metadata !444), !dbg !12075
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12076, metadata !444), !dbg !12077
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12078, metadata !444), !dbg !12079
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !12080, metadata !444), !dbg !12081
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !12082, metadata !444), !dbg !12083
  call void @llvm.dbg.declare(metadata i8** %target, metadata !12084, metadata !444), !dbg !12085
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12086
  store i8* %0, i8** %target, align 8, !dbg !12085
  %1 = load i8*, i8** %end.addr, align 8, !dbg !12087
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12087
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !12087
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !12087
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12087
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !12087
  br i1 %cmp, label %if.end, label %if.then, !dbg !12090

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12091
  br label %return, !dbg !12091

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !12094
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !12094
  %4 = load i8, i8* %arrayidx, align 1, !dbg !12094
  %conv = sext i8 %4 to i32, !dbg !12094
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12094
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12094

cond.true:                                        ; preds = %if.end
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !12095
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !12095
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !12095
  %idxprom = zext i8 %6 to i64, !dbg !12095
  %7 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12095
  %8 = bitcast %struct.encoding* %7 to %struct.normal_encoding*, !dbg !12095
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %8, i32 0, i32 1, !dbg !12095
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !12095
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !12095
  %conv5 = zext i8 %9 to i32, !dbg !12095
  br label %cond.end, !dbg !12095

cond.false:                                       ; preds = %if.end
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !12097
  %arrayidx6 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !12097
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !12097
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !12097
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !12097
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !12097
  %call = call i32 @unicode_byte_type(i8 signext %11, i8 signext %13), !dbg !12097
  br label %cond.end, !dbg !12097

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !12099
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb22
    i32 24, label %sw.bb22
    i32 5, label %sw.bb23
    i32 6, label %sw.bb31
    i32 7, label %sw.bb39
  ], !dbg !12101

sw.bb:                                            ; preds = %cond.end
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !12102
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !12102
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !12102
  %idxprom9 = zext i8 %15 to i64, !dbg !12102
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom9, !dbg !12102
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !12102
  %conv11 = zext i8 %16 to i32, !dbg !12102
  %shl = shl i32 %conv11, 3, !dbg !12102
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !12102
  %arrayidx12 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !12102
  %18 = load i8, i8* %arrayidx12, align 1, !dbg !12102
  %conv13 = zext i8 %18 to i32, !dbg !12102
  %shr = ashr i32 %conv13, 5, !dbg !12102
  %add = add nsw i32 %shl, %shr, !dbg !12102
  %idxprom14 = sext i32 %add to i64, !dbg !12102
  %arrayidx15 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom14, !dbg !12102
  %19 = load i32, i32* %arrayidx15, align 4, !dbg !12102
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !12102
  %arrayidx16 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !12102
  %21 = load i8, i8* %arrayidx16, align 1, !dbg !12102
  %conv17 = zext i8 %21 to i32, !dbg !12102
  %and = and i32 %conv17, 31, !dbg !12102
  %shl18 = shl i32 1, %and, !dbg !12102
  %and19 = and i32 %19, %shl18, !dbg !12102
  %tobool = icmp ne i32 %and19, 0, !dbg !12102
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !12105

if.then20:                                        ; preds = %sw.bb
  %22 = load i8*, i8** %ptr.addr, align 8, !dbg !12106
  %23 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12106
  store i8* %22, i8** %23, align 8, !dbg !12106
  store i32 0, i32* %retval, align 4, !dbg !12106
  br label %return, !dbg !12106

if.end21:                                         ; preds = %sw.bb
  br label %sw.bb22, !dbg !12109

sw.bb22:                                          ; preds = %cond.end, %cond.end, %if.end21
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !12111
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 2, !dbg !12111
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !12111
  br label %sw.epilog, !dbg !12111

sw.bb23:                                          ; preds = %cond.end
  %25 = load i8*, i8** %end.addr, align 8, !dbg !12113
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !12113
  %sub.ptr.lhs.cast24 = ptrtoint i8* %25 to i64, !dbg !12113
  %sub.ptr.rhs.cast25 = ptrtoint i8* %26 to i64, !dbg !12113
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !12113
  %cmp27 = icmp slt i64 %sub.ptr.sub26, 2, !dbg !12113
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !12113

if.then29:                                        ; preds = %sw.bb23
  store i32 -2, i32* %retval, align 4, !dbg !12116
  br label %return, !dbg !12116

if.end30:                                         ; preds = %sw.bb23
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !12118
  %28 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12118
  store i8* %27, i8** %28, align 8, !dbg !12118
  store i32 0, i32* %retval, align 4, !dbg !12118
  br label %return, !dbg !12118

sw.bb31:                                          ; preds = %cond.end
  %29 = load i8*, i8** %end.addr, align 8, !dbg !12122
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !12122
  %sub.ptr.lhs.cast32 = ptrtoint i8* %29 to i64, !dbg !12122
  %sub.ptr.rhs.cast33 = ptrtoint i8* %30 to i64, !dbg !12122
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !12122
  %cmp35 = icmp slt i64 %sub.ptr.sub34, 3, !dbg !12122
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12122

if.then37:                                        ; preds = %sw.bb31
  store i32 -2, i32* %retval, align 4, !dbg !12125
  br label %return, !dbg !12125

if.end38:                                         ; preds = %sw.bb31
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !12127
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12127
  store i8* %31, i8** %32, align 8, !dbg !12127
  store i32 0, i32* %retval, align 4, !dbg !12127
  br label %return, !dbg !12127

sw.bb39:                                          ; preds = %cond.end
  %33 = load i8*, i8** %end.addr, align 8, !dbg !12131
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !12131
  %sub.ptr.lhs.cast40 = ptrtoint i8* %33 to i64, !dbg !12131
  %sub.ptr.rhs.cast41 = ptrtoint i8* %34 to i64, !dbg !12131
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !12131
  %cmp43 = icmp slt i64 %sub.ptr.sub42, 4, !dbg !12131
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !12131

if.then45:                                        ; preds = %sw.bb39
  store i32 -2, i32* %retval, align 4, !dbg !12134
  br label %return, !dbg !12134

if.end46:                                         ; preds = %sw.bb39
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !12136
  %36 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12136
  store i8* %35, i8** %36, align 8, !dbg !12136
  store i32 0, i32* %retval, align 4, !dbg !12136
  br label %return, !dbg !12136

sw.default:                                       ; preds = %cond.end
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !12140
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12141
  store i8* %37, i8** %38, align 8, !dbg !12142
  store i32 0, i32* %retval, align 4, !dbg !12143
  br label %return, !dbg !12143

sw.epilog:                                        ; preds = %sw.bb22
  br label %while.cond, !dbg !12144

while.cond:                                       ; preds = %sw.epilog220, %sw.epilog
  %39 = load i8*, i8** %end.addr, align 8, !dbg !12145
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !12145
  %sub.ptr.lhs.cast47 = ptrtoint i8* %39 to i64, !dbg !12145
  %sub.ptr.rhs.cast48 = ptrtoint i8* %40 to i64, !dbg !12145
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !12145
  %cmp50 = icmp sge i64 %sub.ptr.sub49, 2, !dbg !12145
  br i1 %cmp50, label %while.body, label %while.end221, !dbg !12146

while.body:                                       ; preds = %while.cond
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !12147
  %arrayidx52 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !12147
  %42 = load i8, i8* %arrayidx52, align 1, !dbg !12147
  %conv53 = sext i8 %42 to i32, !dbg !12147
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !12147
  br i1 %cmp54, label %cond.true56, label %cond.false62, !dbg !12147

cond.true56:                                      ; preds = %while.body
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !12149
  %arrayidx57 = getelementptr inbounds i8, i8* %43, i64 1, !dbg !12149
  %44 = load i8, i8* %arrayidx57, align 1, !dbg !12149
  %idxprom58 = zext i8 %44 to i64, !dbg !12149
  %45 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12149
  %46 = bitcast %struct.encoding* %45 to %struct.normal_encoding*, !dbg !12149
  %type59 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %46, i32 0, i32 1, !dbg !12149
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %type59, i64 0, i64 %idxprom58, !dbg !12149
  %47 = load i8, i8* %arrayidx60, align 1, !dbg !12149
  %conv61 = zext i8 %47 to i32, !dbg !12149
  br label %cond.end66, !dbg !12149

cond.false62:                                     ; preds = %while.body
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !12151
  %arrayidx63 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !12151
  %49 = load i8, i8* %arrayidx63, align 1, !dbg !12151
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !12151
  %arrayidx64 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !12151
  %51 = load i8, i8* %arrayidx64, align 1, !dbg !12151
  %call65 = call i32 @unicode_byte_type(i8 signext %49, i8 signext %51), !dbg !12151
  br label %cond.end66, !dbg !12151

cond.end66:                                       ; preds = %cond.false62, %cond.true56
  %cond67 = phi i32 [ %conv61, %cond.true56 ], [ %call65, %cond.false62 ], !dbg !12153
  switch i32 %cond67, label %sw.default219 [
    i32 29, label %sw.bb68
    i32 22, label %sw.bb88
    i32 24, label %sw.bb88
    i32 25, label %sw.bb88
    i32 26, label %sw.bb88
    i32 27, label %sw.bb88
    i32 5, label %sw.bb90
    i32 6, label %sw.bb98
    i32 7, label %sw.bb106
    i32 21, label %sw.bb114
    i32 9, label %sw.bb114
    i32 10, label %sw.bb114
    i32 15, label %sw.bb194
  ], !dbg !12155

sw.bb68:                                          ; preds = %cond.end66
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !12156
  %arrayidx69 = getelementptr inbounds i8, i8* %52, i64 0, !dbg !12156
  %53 = load i8, i8* %arrayidx69, align 1, !dbg !12156
  %idxprom70 = zext i8 %53 to i64, !dbg !12156
  %arrayidx71 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom70, !dbg !12156
  %54 = load i8, i8* %arrayidx71, align 1, !dbg !12156
  %conv72 = zext i8 %54 to i32, !dbg !12156
  %shl73 = shl i32 %conv72, 3, !dbg !12156
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !12156
  %arrayidx74 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !12156
  %56 = load i8, i8* %arrayidx74, align 1, !dbg !12156
  %conv75 = zext i8 %56 to i32, !dbg !12156
  %shr76 = ashr i32 %conv75, 5, !dbg !12156
  %add77 = add nsw i32 %shl73, %shr76, !dbg !12156
  %idxprom78 = sext i32 %add77 to i64, !dbg !12156
  %arrayidx79 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom78, !dbg !12156
  %57 = load i32, i32* %arrayidx79, align 4, !dbg !12156
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !12156
  %arrayidx80 = getelementptr inbounds i8, i8* %58, i64 1, !dbg !12156
  %59 = load i8, i8* %arrayidx80, align 1, !dbg !12156
  %conv81 = zext i8 %59 to i32, !dbg !12156
  %and82 = and i32 %conv81, 31, !dbg !12156
  %shl83 = shl i32 1, %and82, !dbg !12156
  %and84 = and i32 %57, %shl83, !dbg !12156
  %tobool85 = icmp ne i32 %and84, 0, !dbg !12156
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !12159

if.then86:                                        ; preds = %sw.bb68
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !12160
  %61 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12160
  store i8* %60, i8** %61, align 8, !dbg !12160
  store i32 0, i32* %retval, align 4, !dbg !12160
  br label %return, !dbg !12160

if.end87:                                         ; preds = %sw.bb68
  br label %sw.bb88, !dbg !12163

sw.bb88:                                          ; preds = %cond.end66, %cond.end66, %cond.end66, %cond.end66, %cond.end66, %if.end87
  %62 = load i8*, i8** %ptr.addr, align 8, !dbg !12165
  %add.ptr89 = getelementptr inbounds i8, i8* %62, i64 2, !dbg !12165
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !12165
  br label %sw.epilog220, !dbg !12165

sw.bb90:                                          ; preds = %cond.end66
  %63 = load i8*, i8** %end.addr, align 8, !dbg !12167
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !12167
  %sub.ptr.lhs.cast91 = ptrtoint i8* %63 to i64, !dbg !12167
  %sub.ptr.rhs.cast92 = ptrtoint i8* %64 to i64, !dbg !12167
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92, !dbg !12167
  %cmp94 = icmp slt i64 %sub.ptr.sub93, 2, !dbg !12167
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !12167

if.then96:                                        ; preds = %sw.bb90
  store i32 -2, i32* %retval, align 4, !dbg !12170
  br label %return, !dbg !12170

if.end97:                                         ; preds = %sw.bb90
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !12172
  %66 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12172
  store i8* %65, i8** %66, align 8, !dbg !12172
  store i32 0, i32* %retval, align 4, !dbg !12172
  br label %return, !dbg !12172

sw.bb98:                                          ; preds = %cond.end66
  %67 = load i8*, i8** %end.addr, align 8, !dbg !12176
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !12176
  %sub.ptr.lhs.cast99 = ptrtoint i8* %67 to i64, !dbg !12176
  %sub.ptr.rhs.cast100 = ptrtoint i8* %68 to i64, !dbg !12176
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100, !dbg !12176
  %cmp102 = icmp slt i64 %sub.ptr.sub101, 3, !dbg !12176
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !12176

if.then104:                                       ; preds = %sw.bb98
  store i32 -2, i32* %retval, align 4, !dbg !12179
  br label %return, !dbg !12179

if.end105:                                        ; preds = %sw.bb98
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !12181
  %70 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12181
  store i8* %69, i8** %70, align 8, !dbg !12181
  store i32 0, i32* %retval, align 4, !dbg !12181
  br label %return, !dbg !12181

sw.bb106:                                         ; preds = %cond.end66
  %71 = load i8*, i8** %end.addr, align 8, !dbg !12185
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !12185
  %sub.ptr.lhs.cast107 = ptrtoint i8* %71 to i64, !dbg !12185
  %sub.ptr.rhs.cast108 = ptrtoint i8* %72 to i64, !dbg !12185
  %sub.ptr.sub109 = sub i64 %sub.ptr.lhs.cast107, %sub.ptr.rhs.cast108, !dbg !12185
  %cmp110 = icmp slt i64 %sub.ptr.sub109, 4, !dbg !12185
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !12185

if.then112:                                       ; preds = %sw.bb106
  store i32 -2, i32* %retval, align 4, !dbg !12188
  br label %return, !dbg !12188

if.end113:                                        ; preds = %sw.bb106
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !12190
  %74 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12190
  store i8* %73, i8** %74, align 8, !dbg !12190
  store i32 0, i32* %retval, align 4, !dbg !12190
  br label %return, !dbg !12190

sw.bb114:                                         ; preds = %cond.end66, %cond.end66, %cond.end66
  %75 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12194
  %76 = load i8*, i8** %target, align 8, !dbg !12196
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !12197
  %call115 = call i32 @big2_checkPiTarget(%struct.encoding* %75, i8* %76, i8* %77, i32* %tok), !dbg !12198
  %tobool116 = icmp ne i32 %call115, 0, !dbg !12198
  br i1 %tobool116, label %if.end118, label %if.then117, !dbg !12199

if.then117:                                       ; preds = %sw.bb114
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !12200
  %79 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12202
  store i8* %78, i8** %79, align 8, !dbg !12203
  store i32 0, i32* %retval, align 4, !dbg !12204
  br label %return, !dbg !12204

if.end118:                                        ; preds = %sw.bb114
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !12205
  %add.ptr119 = getelementptr inbounds i8, i8* %80, i64 2, !dbg !12205
  store i8* %add.ptr119, i8** %ptr.addr, align 8, !dbg !12205
  br label %while.cond120, !dbg !12206

while.cond120:                                    ; preds = %sw.epilog193, %if.end118
  %81 = load i8*, i8** %end.addr, align 8, !dbg !12207
  %82 = load i8*, i8** %ptr.addr, align 8, !dbg !12207
  %sub.ptr.lhs.cast121 = ptrtoint i8* %81 to i64, !dbg !12207
  %sub.ptr.rhs.cast122 = ptrtoint i8* %82 to i64, !dbg !12207
  %sub.ptr.sub123 = sub i64 %sub.ptr.lhs.cast121, %sub.ptr.rhs.cast122, !dbg !12207
  %cmp124 = icmp sge i64 %sub.ptr.sub123, 2, !dbg !12207
  br i1 %cmp124, label %while.body126, label %while.end, !dbg !12209

while.body126:                                    ; preds = %while.cond120
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !12210
  %arrayidx127 = getelementptr inbounds i8, i8* %83, i64 0, !dbg !12210
  %84 = load i8, i8* %arrayidx127, align 1, !dbg !12210
  %conv128 = sext i8 %84 to i32, !dbg !12210
  %cmp129 = icmp eq i32 %conv128, 0, !dbg !12210
  br i1 %cmp129, label %cond.true131, label %cond.false137, !dbg !12210

cond.true131:                                     ; preds = %while.body126
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !12212
  %arrayidx132 = getelementptr inbounds i8, i8* %85, i64 1, !dbg !12212
  %86 = load i8, i8* %arrayidx132, align 1, !dbg !12212
  %idxprom133 = zext i8 %86 to i64, !dbg !12212
  %87 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12212
  %88 = bitcast %struct.encoding* %87 to %struct.normal_encoding*, !dbg !12212
  %type134 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %88, i32 0, i32 1, !dbg !12212
  %arrayidx135 = getelementptr inbounds [256 x i8], [256 x i8]* %type134, i64 0, i64 %idxprom133, !dbg !12212
  %89 = load i8, i8* %arrayidx135, align 1, !dbg !12212
  %conv136 = zext i8 %89 to i32, !dbg !12212
  br label %cond.end141, !dbg !12212

cond.false137:                                    ; preds = %while.body126
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !12214
  %arrayidx138 = getelementptr inbounds i8, i8* %90, i64 0, !dbg !12214
  %91 = load i8, i8* %arrayidx138, align 1, !dbg !12214
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !12214
  %arrayidx139 = getelementptr inbounds i8, i8* %92, i64 1, !dbg !12214
  %93 = load i8, i8* %arrayidx139, align 1, !dbg !12214
  %call140 = call i32 @unicode_byte_type(i8 signext %91, i8 signext %93), !dbg !12214
  br label %cond.end141, !dbg !12214

cond.end141:                                      ; preds = %cond.false137, %cond.true131
  %cond142 = phi i32 [ %conv136, %cond.true131 ], [ %call140, %cond.false137 ], !dbg !12216
  switch i32 %cond142, label %sw.default191 [
    i32 5, label %sw.bb143
    i32 6, label %sw.bb152
    i32 7, label %sw.bb161
    i32 0, label %sw.bb170
    i32 1, label %sw.bb170
    i32 8, label %sw.bb170
    i32 15, label %sw.bb171
  ], !dbg !12218

sw.bb143:                                         ; preds = %cond.end141
  %94 = load i8*, i8** %end.addr, align 8, !dbg !12219
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !12219
  %sub.ptr.lhs.cast144 = ptrtoint i8* %94 to i64, !dbg !12219
  %sub.ptr.rhs.cast145 = ptrtoint i8* %95 to i64, !dbg !12219
  %sub.ptr.sub146 = sub i64 %sub.ptr.lhs.cast144, %sub.ptr.rhs.cast145, !dbg !12219
  %cmp147 = icmp slt i64 %sub.ptr.sub146, 2, !dbg !12219
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !12222

if.then149:                                       ; preds = %sw.bb143
  store i32 -2, i32* %retval, align 4, !dbg !12223
  br label %return, !dbg !12223

if.end150:                                        ; preds = %sw.bb143
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !12225
  %add.ptr151 = getelementptr inbounds i8, i8* %96, i64 2, !dbg !12225
  store i8* %add.ptr151, i8** %ptr.addr, align 8, !dbg !12225
  br label %sw.epilog193, !dbg !12225

sw.bb152:                                         ; preds = %cond.end141
  %97 = load i8*, i8** %end.addr, align 8, !dbg !12227
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !12227
  %sub.ptr.lhs.cast153 = ptrtoint i8* %97 to i64, !dbg !12227
  %sub.ptr.rhs.cast154 = ptrtoint i8* %98 to i64, !dbg !12227
  %sub.ptr.sub155 = sub i64 %sub.ptr.lhs.cast153, %sub.ptr.rhs.cast154, !dbg !12227
  %cmp156 = icmp slt i64 %sub.ptr.sub155, 3, !dbg !12227
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !12227

if.then158:                                       ; preds = %sw.bb152
  store i32 -2, i32* %retval, align 4, !dbg !12230
  br label %return, !dbg !12230

if.end159:                                        ; preds = %sw.bb152
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !12232
  %add.ptr160 = getelementptr inbounds i8, i8* %99, i64 3, !dbg !12232
  store i8* %add.ptr160, i8** %ptr.addr, align 8, !dbg !12232
  br label %sw.epilog193, !dbg !12232

sw.bb161:                                         ; preds = %cond.end141
  %100 = load i8*, i8** %end.addr, align 8, !dbg !12234
  %101 = load i8*, i8** %ptr.addr, align 8, !dbg !12234
  %sub.ptr.lhs.cast162 = ptrtoint i8* %100 to i64, !dbg !12234
  %sub.ptr.rhs.cast163 = ptrtoint i8* %101 to i64, !dbg !12234
  %sub.ptr.sub164 = sub i64 %sub.ptr.lhs.cast162, %sub.ptr.rhs.cast163, !dbg !12234
  %cmp165 = icmp slt i64 %sub.ptr.sub164, 4, !dbg !12234
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !12234

if.then167:                                       ; preds = %sw.bb161
  store i32 -2, i32* %retval, align 4, !dbg !12237
  br label %return, !dbg !12237

if.end168:                                        ; preds = %sw.bb161
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !12239
  %add.ptr169 = getelementptr inbounds i8, i8* %102, i64 4, !dbg !12239
  store i8* %add.ptr169, i8** %ptr.addr, align 8, !dbg !12239
  br label %sw.epilog193, !dbg !12239

sw.bb170:                                         ; preds = %cond.end141, %cond.end141, %cond.end141
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !12241
  %104 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12241
  store i8* %103, i8** %104, align 8, !dbg !12241
  store i32 0, i32* %retval, align 4, !dbg !12241
  br label %return, !dbg !12241

sw.bb171:                                         ; preds = %cond.end141
  %105 = load i8*, i8** %ptr.addr, align 8, !dbg !12243
  %add.ptr172 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !12243
  store i8* %add.ptr172, i8** %ptr.addr, align 8, !dbg !12243
  %106 = load i8*, i8** %end.addr, align 8, !dbg !12244
  %107 = load i8*, i8** %ptr.addr, align 8, !dbg !12244
  %sub.ptr.lhs.cast173 = ptrtoint i8* %106 to i64, !dbg !12244
  %sub.ptr.rhs.cast174 = ptrtoint i8* %107 to i64, !dbg !12244
  %sub.ptr.sub175 = sub i64 %sub.ptr.lhs.cast173, %sub.ptr.rhs.cast174, !dbg !12244
  %cmp176 = icmp sge i64 %sub.ptr.sub175, 2, !dbg !12244
  br i1 %cmp176, label %if.end179, label %if.then178, !dbg !12247

if.then178:                                       ; preds = %sw.bb171
  store i32 -1, i32* %retval, align 4, !dbg !12248
  br label %return, !dbg !12248

if.end179:                                        ; preds = %sw.bb171
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !12251
  %arrayidx180 = getelementptr inbounds i8, i8* %108, i64 0, !dbg !12251
  %109 = load i8, i8* %arrayidx180, align 1, !dbg !12251
  %conv181 = sext i8 %109 to i32, !dbg !12251
  %cmp182 = icmp eq i32 %conv181, 0, !dbg !12251
  br i1 %cmp182, label %land.lhs.true, label %if.end190, !dbg !12251

land.lhs.true:                                    ; preds = %if.end179
  %110 = load i8*, i8** %ptr.addr, align 8, !dbg !12253
  %arrayidx184 = getelementptr inbounds i8, i8* %110, i64 1, !dbg !12253
  %111 = load i8, i8* %arrayidx184, align 1, !dbg !12253
  %conv185 = sext i8 %111 to i32, !dbg !12253
  %cmp186 = icmp eq i32 %conv185, 62, !dbg !12253
  br i1 %cmp186, label %if.then188, label %if.end190, !dbg !12253

if.then188:                                       ; preds = %land.lhs.true
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !12255
  %add.ptr189 = getelementptr inbounds i8, i8* %112, i64 2, !dbg !12257
  %113 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12258
  store i8* %add.ptr189, i8** %113, align 8, !dbg !12259
  %114 = load i32, i32* %tok, align 4, !dbg !12260
  store i32 %114, i32* %retval, align 4, !dbg !12261
  br label %return, !dbg !12261

if.end190:                                        ; preds = %land.lhs.true, %if.end179
  br label %sw.epilog193, !dbg !12262

sw.default191:                                    ; preds = %cond.end141
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !12263
  %add.ptr192 = getelementptr inbounds i8, i8* %115, i64 2, !dbg !12263
  store i8* %add.ptr192, i8** %ptr.addr, align 8, !dbg !12263
  br label %sw.epilog193, !dbg !12264

sw.epilog193:                                     ; preds = %sw.default191, %if.end190, %if.end168, %if.end159, %if.end150
  br label %while.cond120, !dbg !12265

while.end:                                        ; preds = %while.cond120
  store i32 -1, i32* %retval, align 4, !dbg !12267
  br label %return, !dbg !12267

sw.bb194:                                         ; preds = %cond.end66
  %116 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12268
  %117 = load i8*, i8** %target, align 8, !dbg !12270
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !12271
  %call195 = call i32 @big2_checkPiTarget(%struct.encoding* %116, i8* %117, i8* %118, i32* %tok), !dbg !12272
  %tobool196 = icmp ne i32 %call195, 0, !dbg !12272
  br i1 %tobool196, label %if.end198, label %if.then197, !dbg !12273

if.then197:                                       ; preds = %sw.bb194
  %119 = load i8*, i8** %ptr.addr, align 8, !dbg !12274
  %120 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12276
  store i8* %119, i8** %120, align 8, !dbg !12277
  store i32 0, i32* %retval, align 4, !dbg !12278
  br label %return, !dbg !12278

if.end198:                                        ; preds = %sw.bb194
  %121 = load i8*, i8** %ptr.addr, align 8, !dbg !12279
  %add.ptr199 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !12279
  store i8* %add.ptr199, i8** %ptr.addr, align 8, !dbg !12279
  %122 = load i8*, i8** %end.addr, align 8, !dbg !12280
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !12280
  %sub.ptr.lhs.cast200 = ptrtoint i8* %122 to i64, !dbg !12280
  %sub.ptr.rhs.cast201 = ptrtoint i8* %123 to i64, !dbg !12280
  %sub.ptr.sub202 = sub i64 %sub.ptr.lhs.cast200, %sub.ptr.rhs.cast201, !dbg !12280
  %cmp203 = icmp sge i64 %sub.ptr.sub202, 2, !dbg !12280
  br i1 %cmp203, label %if.end206, label %if.then205, !dbg !12283

if.then205:                                       ; preds = %if.end198
  store i32 -1, i32* %retval, align 4, !dbg !12284
  br label %return, !dbg !12284

if.end206:                                        ; preds = %if.end198
  %124 = load i8*, i8** %ptr.addr, align 8, !dbg !12287
  %arrayidx207 = getelementptr inbounds i8, i8* %124, i64 0, !dbg !12287
  %125 = load i8, i8* %arrayidx207, align 1, !dbg !12287
  %conv208 = sext i8 %125 to i32, !dbg !12287
  %cmp209 = icmp eq i32 %conv208, 0, !dbg !12287
  br i1 %cmp209, label %land.lhs.true211, label %if.end218, !dbg !12287

land.lhs.true211:                                 ; preds = %if.end206
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !12289
  %arrayidx212 = getelementptr inbounds i8, i8* %126, i64 1, !dbg !12289
  %127 = load i8, i8* %arrayidx212, align 1, !dbg !12289
  %conv213 = sext i8 %127 to i32, !dbg !12289
  %cmp214 = icmp eq i32 %conv213, 62, !dbg !12289
  br i1 %cmp214, label %if.then216, label %if.end218, !dbg !12289

if.then216:                                       ; preds = %land.lhs.true211
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !12291
  %add.ptr217 = getelementptr inbounds i8, i8* %128, i64 2, !dbg !12293
  %129 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12294
  store i8* %add.ptr217, i8** %129, align 8, !dbg !12295
  %130 = load i32, i32* %tok, align 4, !dbg !12296
  store i32 %130, i32* %retval, align 4, !dbg !12297
  br label %return, !dbg !12297

if.end218:                                        ; preds = %land.lhs.true211, %if.end206
  br label %sw.default219, !dbg !12298

sw.default219:                                    ; preds = %cond.end66, %if.end218
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !12300
  %132 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12301
  store i8* %131, i8** %132, align 8, !dbg !12302
  store i32 0, i32* %retval, align 4, !dbg !12303
  br label %return, !dbg !12303

sw.epilog220:                                     ; preds = %sw.bb88
  br label %while.cond, !dbg !12304

while.end221:                                     ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !12305
  br label %return, !dbg !12305

return:                                           ; preds = %while.end221, %sw.default219, %if.then216, %if.then205, %if.then197, %while.end, %if.then188, %if.then178, %sw.bb170, %if.then167, %if.then158, %if.then149, %if.then117, %if.end113, %if.then112, %if.end105, %if.then104, %if.end97, %if.then96, %if.then86, %sw.default, %if.end46, %if.then45, %if.end38, %if.then37, %if.end30, %if.then29, %if.then20, %if.then
  %133 = load i32, i32* %retval, align 4, !dbg !12306
  ret i32 %133, !dbg !12306
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanPercent(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !348 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !12307, metadata !444), !dbg !12308
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12309, metadata !444), !dbg !12310
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12311, metadata !444), !dbg !12312
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !12313, metadata !444), !dbg !12314
  %0 = load i8*, i8** %end.addr, align 8, !dbg !12315
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !12315
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !12315
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !12315
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12315
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !12315
  br i1 %cmp, label %if.end, label %if.then, !dbg !12318

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12319
  br label %return, !dbg !12319

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12322
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !12322
  %3 = load i8, i8* %arrayidx, align 1, !dbg !12322
  %conv = sext i8 %3 to i32, !dbg !12322
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12322
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12322

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !12323
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !12323
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !12323
  %idxprom = zext i8 %5 to i64, !dbg !12323
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12323
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !12323
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !12323
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !12323
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !12323
  %conv5 = zext i8 %8 to i32, !dbg !12323
  br label %cond.end, !dbg !12323

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !12325
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !12325
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !12325
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !12325
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !12325
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !12325
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !12325
  br label %cond.end, !dbg !12325

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !12327
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb22
    i32 24, label %sw.bb22
    i32 5, label %sw.bb23
    i32 6, label %sw.bb31
    i32 7, label %sw.bb39
    i32 21, label %sw.bb47
    i32 10, label %sw.bb47
    i32 9, label %sw.bb47
    i32 30, label %sw.bb47
  ], !dbg !12329

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !12330
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !12330
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !12330
  %idxprom9 = zext i8 %14 to i64, !dbg !12330
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom9, !dbg !12330
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !12330
  %conv11 = zext i8 %15 to i32, !dbg !12330
  %shl = shl i32 %conv11, 3, !dbg !12330
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !12330
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !12330
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !12330
  %conv13 = zext i8 %17 to i32, !dbg !12330
  %shr = ashr i32 %conv13, 5, !dbg !12330
  %add = add nsw i32 %shl, %shr, !dbg !12330
  %idxprom14 = sext i32 %add to i64, !dbg !12330
  %arrayidx15 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom14, !dbg !12330
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !12330
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !12330
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !12330
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !12330
  %conv17 = zext i8 %20 to i32, !dbg !12330
  %and = and i32 %conv17, 31, !dbg !12330
  %shl18 = shl i32 1, %and, !dbg !12330
  %and19 = and i32 %18, %shl18, !dbg !12330
  %tobool = icmp ne i32 %and19, 0, !dbg !12330
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !12333

if.then20:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !12334
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12334
  store i8* %21, i8** %22, align 8, !dbg !12334
  store i32 0, i32* %retval, align 4, !dbg !12334
  br label %return, !dbg !12334

if.end21:                                         ; preds = %sw.bb
  br label %sw.bb22, !dbg !12337

sw.bb22:                                          ; preds = %cond.end, %cond.end, %if.end21
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !12339
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !12339
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !12339
  br label %sw.epilog, !dbg !12339

sw.bb23:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !12341
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !12341
  %sub.ptr.lhs.cast24 = ptrtoint i8* %24 to i64, !dbg !12341
  %sub.ptr.rhs.cast25 = ptrtoint i8* %25 to i64, !dbg !12341
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !12341
  %cmp27 = icmp slt i64 %sub.ptr.sub26, 2, !dbg !12341
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !12341

if.then29:                                        ; preds = %sw.bb23
  store i32 -2, i32* %retval, align 4, !dbg !12344
  br label %return, !dbg !12344

if.end30:                                         ; preds = %sw.bb23
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !12346
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12346
  store i8* %26, i8** %27, align 8, !dbg !12346
  store i32 0, i32* %retval, align 4, !dbg !12346
  br label %return, !dbg !12346

sw.bb31:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !12350
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !12350
  %sub.ptr.lhs.cast32 = ptrtoint i8* %28 to i64, !dbg !12350
  %sub.ptr.rhs.cast33 = ptrtoint i8* %29 to i64, !dbg !12350
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !12350
  %cmp35 = icmp slt i64 %sub.ptr.sub34, 3, !dbg !12350
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12350

if.then37:                                        ; preds = %sw.bb31
  store i32 -2, i32* %retval, align 4, !dbg !12353
  br label %return, !dbg !12353

if.end38:                                         ; preds = %sw.bb31
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !12355
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12355
  store i8* %30, i8** %31, align 8, !dbg !12355
  store i32 0, i32* %retval, align 4, !dbg !12355
  br label %return, !dbg !12355

sw.bb39:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !12359
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !12359
  %sub.ptr.lhs.cast40 = ptrtoint i8* %32 to i64, !dbg !12359
  %sub.ptr.rhs.cast41 = ptrtoint i8* %33 to i64, !dbg !12359
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !12359
  %cmp43 = icmp slt i64 %sub.ptr.sub42, 4, !dbg !12359
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !12359

if.then45:                                        ; preds = %sw.bb39
  store i32 -2, i32* %retval, align 4, !dbg !12362
  br label %return, !dbg !12362

if.end46:                                         ; preds = %sw.bb39
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !12364
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12364
  store i8* %34, i8** %35, align 8, !dbg !12364
  store i32 0, i32* %retval, align 4, !dbg !12364
  br label %return, !dbg !12364

sw.bb47:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !12368
  %37 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12369
  store i8* %36, i8** %37, align 8, !dbg !12370
  store i32 22, i32* %retval, align 4, !dbg !12371
  br label %return, !dbg !12371

sw.default:                                       ; preds = %cond.end
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !12372
  %39 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12373
  store i8* %38, i8** %39, align 8, !dbg !12374
  store i32 0, i32* %retval, align 4, !dbg !12375
  br label %return, !dbg !12375

sw.epilog:                                        ; preds = %sw.bb22
  br label %while.cond, !dbg !12376

while.cond:                                       ; preds = %sw.epilog118, %sw.epilog
  %40 = load i8*, i8** %end.addr, align 8, !dbg !12377
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !12377
  %sub.ptr.lhs.cast48 = ptrtoint i8* %40 to i64, !dbg !12377
  %sub.ptr.rhs.cast49 = ptrtoint i8* %41 to i64, !dbg !12377
  %sub.ptr.sub50 = sub i64 %sub.ptr.lhs.cast48, %sub.ptr.rhs.cast49, !dbg !12377
  %cmp51 = icmp sge i64 %sub.ptr.sub50, 2, !dbg !12377
  br i1 %cmp51, label %while.body, label %while.end, !dbg !12378

while.body:                                       ; preds = %while.cond
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !12379
  %arrayidx53 = getelementptr inbounds i8, i8* %42, i64 0, !dbg !12379
  %43 = load i8, i8* %arrayidx53, align 1, !dbg !12379
  %conv54 = sext i8 %43 to i32, !dbg !12379
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !12379
  br i1 %cmp55, label %cond.true57, label %cond.false63, !dbg !12379

cond.true57:                                      ; preds = %while.body
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !12381
  %arrayidx58 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !12381
  %45 = load i8, i8* %arrayidx58, align 1, !dbg !12381
  %idxprom59 = zext i8 %45 to i64, !dbg !12381
  %46 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12381
  %47 = bitcast %struct.encoding* %46 to %struct.normal_encoding*, !dbg !12381
  %type60 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %47, i32 0, i32 1, !dbg !12381
  %arrayidx61 = getelementptr inbounds [256 x i8], [256 x i8]* %type60, i64 0, i64 %idxprom59, !dbg !12381
  %48 = load i8, i8* %arrayidx61, align 1, !dbg !12381
  %conv62 = zext i8 %48 to i32, !dbg !12381
  br label %cond.end67, !dbg !12381

cond.false63:                                     ; preds = %while.body
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !12383
  %arrayidx64 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !12383
  %50 = load i8, i8* %arrayidx64, align 1, !dbg !12383
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !12383
  %arrayidx65 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !12383
  %52 = load i8, i8* %arrayidx65, align 1, !dbg !12383
  %call66 = call i32 @unicode_byte_type(i8 signext %50, i8 signext %52), !dbg !12383
  br label %cond.end67, !dbg !12383

cond.end67:                                       ; preds = %cond.false63, %cond.true57
  %cond68 = phi i32 [ %conv62, %cond.true57 ], [ %call66, %cond.false63 ], !dbg !12385
  switch i32 %cond68, label %sw.default117 [
    i32 29, label %sw.bb69
    i32 22, label %sw.bb89
    i32 24, label %sw.bb89
    i32 25, label %sw.bb89
    i32 26, label %sw.bb89
    i32 27, label %sw.bb89
    i32 5, label %sw.bb91
    i32 6, label %sw.bb99
    i32 7, label %sw.bb107
    i32 18, label %sw.bb115
  ], !dbg !12387

sw.bb69:                                          ; preds = %cond.end67
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !12388
  %arrayidx70 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !12388
  %54 = load i8, i8* %arrayidx70, align 1, !dbg !12388
  %idxprom71 = zext i8 %54 to i64, !dbg !12388
  %arrayidx72 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom71, !dbg !12388
  %55 = load i8, i8* %arrayidx72, align 1, !dbg !12388
  %conv73 = zext i8 %55 to i32, !dbg !12388
  %shl74 = shl i32 %conv73, 3, !dbg !12388
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !12388
  %arrayidx75 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !12388
  %57 = load i8, i8* %arrayidx75, align 1, !dbg !12388
  %conv76 = zext i8 %57 to i32, !dbg !12388
  %shr77 = ashr i32 %conv76, 5, !dbg !12388
  %add78 = add nsw i32 %shl74, %shr77, !dbg !12388
  %idxprom79 = sext i32 %add78 to i64, !dbg !12388
  %arrayidx80 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom79, !dbg !12388
  %58 = load i32, i32* %arrayidx80, align 4, !dbg !12388
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !12388
  %arrayidx81 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !12388
  %60 = load i8, i8* %arrayidx81, align 1, !dbg !12388
  %conv82 = zext i8 %60 to i32, !dbg !12388
  %and83 = and i32 %conv82, 31, !dbg !12388
  %shl84 = shl i32 1, %and83, !dbg !12388
  %and85 = and i32 %58, %shl84, !dbg !12388
  %tobool86 = icmp ne i32 %and85, 0, !dbg !12388
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !12391

if.then87:                                        ; preds = %sw.bb69
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !12392
  %62 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12392
  store i8* %61, i8** %62, align 8, !dbg !12392
  store i32 0, i32* %retval, align 4, !dbg !12392
  br label %return, !dbg !12392

if.end88:                                         ; preds = %sw.bb69
  br label %sw.bb89, !dbg !12395

sw.bb89:                                          ; preds = %cond.end67, %cond.end67, %cond.end67, %cond.end67, %cond.end67, %if.end88
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !12397
  %add.ptr90 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !12397
  store i8* %add.ptr90, i8** %ptr.addr, align 8, !dbg !12397
  br label %sw.epilog118, !dbg !12397

sw.bb91:                                          ; preds = %cond.end67
  %64 = load i8*, i8** %end.addr, align 8, !dbg !12399
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !12399
  %sub.ptr.lhs.cast92 = ptrtoint i8* %64 to i64, !dbg !12399
  %sub.ptr.rhs.cast93 = ptrtoint i8* %65 to i64, !dbg !12399
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93, !dbg !12399
  %cmp95 = icmp slt i64 %sub.ptr.sub94, 2, !dbg !12399
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !12399

if.then97:                                        ; preds = %sw.bb91
  store i32 -2, i32* %retval, align 4, !dbg !12402
  br label %return, !dbg !12402

if.end98:                                         ; preds = %sw.bb91
  %66 = load i8*, i8** %ptr.addr, align 8, !dbg !12404
  %67 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12404
  store i8* %66, i8** %67, align 8, !dbg !12404
  store i32 0, i32* %retval, align 4, !dbg !12404
  br label %return, !dbg !12404

sw.bb99:                                          ; preds = %cond.end67
  %68 = load i8*, i8** %end.addr, align 8, !dbg !12408
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !12408
  %sub.ptr.lhs.cast100 = ptrtoint i8* %68 to i64, !dbg !12408
  %sub.ptr.rhs.cast101 = ptrtoint i8* %69 to i64, !dbg !12408
  %sub.ptr.sub102 = sub i64 %sub.ptr.lhs.cast100, %sub.ptr.rhs.cast101, !dbg !12408
  %cmp103 = icmp slt i64 %sub.ptr.sub102, 3, !dbg !12408
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !12408

if.then105:                                       ; preds = %sw.bb99
  store i32 -2, i32* %retval, align 4, !dbg !12411
  br label %return, !dbg !12411

if.end106:                                        ; preds = %sw.bb99
  %70 = load i8*, i8** %ptr.addr, align 8, !dbg !12413
  %71 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12413
  store i8* %70, i8** %71, align 8, !dbg !12413
  store i32 0, i32* %retval, align 4, !dbg !12413
  br label %return, !dbg !12413

sw.bb107:                                         ; preds = %cond.end67
  %72 = load i8*, i8** %end.addr, align 8, !dbg !12417
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !12417
  %sub.ptr.lhs.cast108 = ptrtoint i8* %72 to i64, !dbg !12417
  %sub.ptr.rhs.cast109 = ptrtoint i8* %73 to i64, !dbg !12417
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109, !dbg !12417
  %cmp111 = icmp slt i64 %sub.ptr.sub110, 4, !dbg !12417
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !12417

if.then113:                                       ; preds = %sw.bb107
  store i32 -2, i32* %retval, align 4, !dbg !12420
  br label %return, !dbg !12420

if.end114:                                        ; preds = %sw.bb107
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !12422
  %75 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12422
  store i8* %74, i8** %75, align 8, !dbg !12422
  store i32 0, i32* %retval, align 4, !dbg !12422
  br label %return, !dbg !12422

sw.bb115:                                         ; preds = %cond.end67
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !12426
  %add.ptr116 = getelementptr inbounds i8, i8* %76, i64 2, !dbg !12427
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12428
  store i8* %add.ptr116, i8** %77, align 8, !dbg !12429
  store i32 28, i32* %retval, align 4, !dbg !12430
  br label %return, !dbg !12430

sw.default117:                                    ; preds = %cond.end67
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !12431
  %79 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12432
  store i8* %78, i8** %79, align 8, !dbg !12433
  store i32 0, i32* %retval, align 4, !dbg !12434
  br label %return, !dbg !12434

sw.epilog118:                                     ; preds = %sw.bb89
  br label %while.cond, !dbg !12435

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !12436
  br label %return, !dbg !12436

return:                                           ; preds = %while.end, %sw.default117, %sw.bb115, %if.end114, %if.then113, %if.end106, %if.then105, %if.end98, %if.then97, %if.then87, %sw.default, %sw.bb47, %if.end46, %if.then45, %if.end38, %if.then37, %if.end30, %if.then29, %if.then20, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !12437
  ret i32 %80, !dbg !12437
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanPoundName(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !349 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !12438, metadata !444), !dbg !12439
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12440, metadata !444), !dbg !12441
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12442, metadata !444), !dbg !12443
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !12444, metadata !444), !dbg !12445
  %0 = load i8*, i8** %end.addr, align 8, !dbg !12446
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !12446
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !12446
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !12446
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12446
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !12446
  br i1 %cmp, label %if.end, label %if.then, !dbg !12449

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12450
  br label %return, !dbg !12450

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12453
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !12453
  %3 = load i8, i8* %arrayidx, align 1, !dbg !12453
  %conv = sext i8 %3 to i32, !dbg !12453
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12453
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12453

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !12454
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !12454
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !12454
  %idxprom = zext i8 %5 to i64, !dbg !12454
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12454
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !12454
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !12454
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !12454
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !12454
  %conv5 = zext i8 %8 to i32, !dbg !12454
  br label %cond.end, !dbg !12454

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !12456
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !12456
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !12456
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !12456
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !12456
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !12456
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !12456
  br label %cond.end, !dbg !12456

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !12458
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb22
    i32 24, label %sw.bb22
    i32 5, label %sw.bb23
    i32 6, label %sw.bb31
    i32 7, label %sw.bb39
  ], !dbg !12460

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !12461
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !12461
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !12461
  %idxprom9 = zext i8 %14 to i64, !dbg !12461
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom9, !dbg !12461
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !12461
  %conv11 = zext i8 %15 to i32, !dbg !12461
  %shl = shl i32 %conv11, 3, !dbg !12461
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !12461
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !12461
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !12461
  %conv13 = zext i8 %17 to i32, !dbg !12461
  %shr = ashr i32 %conv13, 5, !dbg !12461
  %add = add nsw i32 %shl, %shr, !dbg !12461
  %idxprom14 = sext i32 %add to i64, !dbg !12461
  %arrayidx15 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom14, !dbg !12461
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !12461
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !12461
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !12461
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !12461
  %conv17 = zext i8 %20 to i32, !dbg !12461
  %and = and i32 %conv17, 31, !dbg !12461
  %shl18 = shl i32 1, %and, !dbg !12461
  %and19 = and i32 %18, %shl18, !dbg !12461
  %tobool = icmp ne i32 %and19, 0, !dbg !12461
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !12464

if.then20:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !12465
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12465
  store i8* %21, i8** %22, align 8, !dbg !12465
  store i32 0, i32* %retval, align 4, !dbg !12465
  br label %return, !dbg !12465

if.end21:                                         ; preds = %sw.bb
  br label %sw.bb22, !dbg !12468

sw.bb22:                                          ; preds = %cond.end, %cond.end, %if.end21
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !12470
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !12470
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !12470
  br label %sw.epilog, !dbg !12470

sw.bb23:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !12472
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !12472
  %sub.ptr.lhs.cast24 = ptrtoint i8* %24 to i64, !dbg !12472
  %sub.ptr.rhs.cast25 = ptrtoint i8* %25 to i64, !dbg !12472
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !12472
  %cmp27 = icmp slt i64 %sub.ptr.sub26, 2, !dbg !12472
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !12472

if.then29:                                        ; preds = %sw.bb23
  store i32 -2, i32* %retval, align 4, !dbg !12475
  br label %return, !dbg !12475

if.end30:                                         ; preds = %sw.bb23
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !12477
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12477
  store i8* %26, i8** %27, align 8, !dbg !12477
  store i32 0, i32* %retval, align 4, !dbg !12477
  br label %return, !dbg !12477

sw.bb31:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !12481
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !12481
  %sub.ptr.lhs.cast32 = ptrtoint i8* %28 to i64, !dbg !12481
  %sub.ptr.rhs.cast33 = ptrtoint i8* %29 to i64, !dbg !12481
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !12481
  %cmp35 = icmp slt i64 %sub.ptr.sub34, 3, !dbg !12481
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12481

if.then37:                                        ; preds = %sw.bb31
  store i32 -2, i32* %retval, align 4, !dbg !12484
  br label %return, !dbg !12484

if.end38:                                         ; preds = %sw.bb31
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !12486
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12486
  store i8* %30, i8** %31, align 8, !dbg !12486
  store i32 0, i32* %retval, align 4, !dbg !12486
  br label %return, !dbg !12486

sw.bb39:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !12490
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !12490
  %sub.ptr.lhs.cast40 = ptrtoint i8* %32 to i64, !dbg !12490
  %sub.ptr.rhs.cast41 = ptrtoint i8* %33 to i64, !dbg !12490
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !12490
  %cmp43 = icmp slt i64 %sub.ptr.sub42, 4, !dbg !12490
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !12490

if.then45:                                        ; preds = %sw.bb39
  store i32 -2, i32* %retval, align 4, !dbg !12493
  br label %return, !dbg !12493

if.end46:                                         ; preds = %sw.bb39
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !12495
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12495
  store i8* %34, i8** %35, align 8, !dbg !12495
  store i32 0, i32* %retval, align 4, !dbg !12495
  br label %return, !dbg !12495

sw.default:                                       ; preds = %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !12499
  %37 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12500
  store i8* %36, i8** %37, align 8, !dbg !12501
  store i32 0, i32* %retval, align 4, !dbg !12502
  br label %return, !dbg !12502

sw.epilog:                                        ; preds = %sw.bb22
  br label %while.cond, !dbg !12503

while.cond:                                       ; preds = %sw.epilog116, %sw.epilog
  %38 = load i8*, i8** %end.addr, align 8, !dbg !12504
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !12504
  %sub.ptr.lhs.cast47 = ptrtoint i8* %38 to i64, !dbg !12504
  %sub.ptr.rhs.cast48 = ptrtoint i8* %39 to i64, !dbg !12504
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !12504
  %cmp50 = icmp sge i64 %sub.ptr.sub49, 2, !dbg !12504
  br i1 %cmp50, label %while.body, label %while.end, !dbg !12505

while.body:                                       ; preds = %while.cond
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !12506
  %arrayidx52 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !12506
  %41 = load i8, i8* %arrayidx52, align 1, !dbg !12506
  %conv53 = sext i8 %41 to i32, !dbg !12506
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !12506
  br i1 %cmp54, label %cond.true56, label %cond.false62, !dbg !12506

cond.true56:                                      ; preds = %while.body
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !12508
  %arrayidx57 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !12508
  %43 = load i8, i8* %arrayidx57, align 1, !dbg !12508
  %idxprom58 = zext i8 %43 to i64, !dbg !12508
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12508
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !12508
  %type59 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !12508
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %type59, i64 0, i64 %idxprom58, !dbg !12508
  %46 = load i8, i8* %arrayidx60, align 1, !dbg !12508
  %conv61 = zext i8 %46 to i32, !dbg !12508
  br label %cond.end66, !dbg !12508

cond.false62:                                     ; preds = %while.body
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !12510
  %arrayidx63 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !12510
  %48 = load i8, i8* %arrayidx63, align 1, !dbg !12510
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !12510
  %arrayidx64 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !12510
  %50 = load i8, i8* %arrayidx64, align 1, !dbg !12510
  %call65 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !12510
  br label %cond.end66, !dbg !12510

cond.end66:                                       ; preds = %cond.false62, %cond.true56
  %cond67 = phi i32 [ %conv61, %cond.true56 ], [ %call65, %cond.false62 ], !dbg !12512
  switch i32 %cond67, label %sw.default115 [
    i32 29, label %sw.bb68
    i32 22, label %sw.bb88
    i32 24, label %sw.bb88
    i32 25, label %sw.bb88
    i32 26, label %sw.bb88
    i32 27, label %sw.bb88
    i32 5, label %sw.bb90
    i32 6, label %sw.bb98
    i32 7, label %sw.bb106
    i32 9, label %sw.bb114
    i32 10, label %sw.bb114
    i32 21, label %sw.bb114
    i32 32, label %sw.bb114
    i32 11, label %sw.bb114
    i32 30, label %sw.bb114
    i32 36, label %sw.bb114
  ], !dbg !12514

sw.bb68:                                          ; preds = %cond.end66
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !12515
  %arrayidx69 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !12515
  %52 = load i8, i8* %arrayidx69, align 1, !dbg !12515
  %idxprom70 = zext i8 %52 to i64, !dbg !12515
  %arrayidx71 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom70, !dbg !12515
  %53 = load i8, i8* %arrayidx71, align 1, !dbg !12515
  %conv72 = zext i8 %53 to i32, !dbg !12515
  %shl73 = shl i32 %conv72, 3, !dbg !12515
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !12515
  %arrayidx74 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !12515
  %55 = load i8, i8* %arrayidx74, align 1, !dbg !12515
  %conv75 = zext i8 %55 to i32, !dbg !12515
  %shr76 = ashr i32 %conv75, 5, !dbg !12515
  %add77 = add nsw i32 %shl73, %shr76, !dbg !12515
  %idxprom78 = sext i32 %add77 to i64, !dbg !12515
  %arrayidx79 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom78, !dbg !12515
  %56 = load i32, i32* %arrayidx79, align 4, !dbg !12515
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !12515
  %arrayidx80 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !12515
  %58 = load i8, i8* %arrayidx80, align 1, !dbg !12515
  %conv81 = zext i8 %58 to i32, !dbg !12515
  %and82 = and i32 %conv81, 31, !dbg !12515
  %shl83 = shl i32 1, %and82, !dbg !12515
  %and84 = and i32 %56, %shl83, !dbg !12515
  %tobool85 = icmp ne i32 %and84, 0, !dbg !12515
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !12518

if.then86:                                        ; preds = %sw.bb68
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !12519
  %60 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12519
  store i8* %59, i8** %60, align 8, !dbg !12519
  store i32 0, i32* %retval, align 4, !dbg !12519
  br label %return, !dbg !12519

if.end87:                                         ; preds = %sw.bb68
  br label %sw.bb88, !dbg !12522

sw.bb88:                                          ; preds = %cond.end66, %cond.end66, %cond.end66, %cond.end66, %cond.end66, %if.end87
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !12524
  %add.ptr89 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !12524
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !12524
  br label %sw.epilog116, !dbg !12524

sw.bb90:                                          ; preds = %cond.end66
  %62 = load i8*, i8** %end.addr, align 8, !dbg !12526
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !12526
  %sub.ptr.lhs.cast91 = ptrtoint i8* %62 to i64, !dbg !12526
  %sub.ptr.rhs.cast92 = ptrtoint i8* %63 to i64, !dbg !12526
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92, !dbg !12526
  %cmp94 = icmp slt i64 %sub.ptr.sub93, 2, !dbg !12526
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !12526

if.then96:                                        ; preds = %sw.bb90
  store i32 -2, i32* %retval, align 4, !dbg !12529
  br label %return, !dbg !12529

if.end97:                                         ; preds = %sw.bb90
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !12531
  %65 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12531
  store i8* %64, i8** %65, align 8, !dbg !12531
  store i32 0, i32* %retval, align 4, !dbg !12531
  br label %return, !dbg !12531

sw.bb98:                                          ; preds = %cond.end66
  %66 = load i8*, i8** %end.addr, align 8, !dbg !12535
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !12535
  %sub.ptr.lhs.cast99 = ptrtoint i8* %66 to i64, !dbg !12535
  %sub.ptr.rhs.cast100 = ptrtoint i8* %67 to i64, !dbg !12535
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100, !dbg !12535
  %cmp102 = icmp slt i64 %sub.ptr.sub101, 3, !dbg !12535
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !12535

if.then104:                                       ; preds = %sw.bb98
  store i32 -2, i32* %retval, align 4, !dbg !12538
  br label %return, !dbg !12538

if.end105:                                        ; preds = %sw.bb98
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !12540
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12540
  store i8* %68, i8** %69, align 8, !dbg !12540
  store i32 0, i32* %retval, align 4, !dbg !12540
  br label %return, !dbg !12540

sw.bb106:                                         ; preds = %cond.end66
  %70 = load i8*, i8** %end.addr, align 8, !dbg !12544
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !12544
  %sub.ptr.lhs.cast107 = ptrtoint i8* %70 to i64, !dbg !12544
  %sub.ptr.rhs.cast108 = ptrtoint i8* %71 to i64, !dbg !12544
  %sub.ptr.sub109 = sub i64 %sub.ptr.lhs.cast107, %sub.ptr.rhs.cast108, !dbg !12544
  %cmp110 = icmp slt i64 %sub.ptr.sub109, 4, !dbg !12544
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !12544

if.then112:                                       ; preds = %sw.bb106
  store i32 -2, i32* %retval, align 4, !dbg !12547
  br label %return, !dbg !12547

if.end113:                                        ; preds = %sw.bb106
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !12549
  %73 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12549
  store i8* %72, i8** %73, align 8, !dbg !12549
  store i32 0, i32* %retval, align 4, !dbg !12549
  br label %return, !dbg !12549

sw.bb114:                                         ; preds = %cond.end66, %cond.end66, %cond.end66, %cond.end66, %cond.end66, %cond.end66, %cond.end66
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !12553
  %75 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12554
  store i8* %74, i8** %75, align 8, !dbg !12555
  store i32 20, i32* %retval, align 4, !dbg !12556
  br label %return, !dbg !12556

sw.default115:                                    ; preds = %cond.end66
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !12557
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12558
  store i8* %76, i8** %77, align 8, !dbg !12559
  store i32 0, i32* %retval, align 4, !dbg !12560
  br label %return, !dbg !12560

sw.epilog116:                                     ; preds = %sw.bb88
  br label %while.cond, !dbg !12561

while.end:                                        ; preds = %while.cond
  store i32 -20, i32* %retval, align 4, !dbg !12562
  br label %return, !dbg !12562

return:                                           ; preds = %while.end, %sw.default115, %sw.bb114, %if.end113, %if.then112, %if.end105, %if.then104, %if.end97, %if.then96, %if.then86, %sw.default, %if.end46, %if.then45, %if.end38, %if.then37, %if.end30, %if.then29, %if.then20, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !12563
  ret i32 %78, !dbg !12563
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanComment(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !345 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !12564, metadata !444), !dbg !12565
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12566, metadata !444), !dbg !12567
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12568, metadata !444), !dbg !12569
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !12570, metadata !444), !dbg !12571
  %0 = load i8*, i8** %end.addr, align 8, !dbg !12572
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !12572
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !12572
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !12572
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12572
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !12572
  br i1 %cmp, label %if.then, label %if.end90, !dbg !12574

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12575
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !12575
  %3 = load i8, i8* %arrayidx, align 1, !dbg !12575
  %conv = sext i8 %3 to i32, !dbg !12575
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12575
  br i1 %cmp1, label %land.lhs.true, label %if.then7, !dbg !12575

land.lhs.true:                                    ; preds = %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !12578
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !12578
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !12578
  %conv4 = sext i8 %5 to i32, !dbg !12578
  %cmp5 = icmp eq i32 %conv4, 45, !dbg !12578
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !12580

if.then7:                                         ; preds = %land.lhs.true, %if.then
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !12581
  %7 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12583
  store i8* %6, i8** %7, align 8, !dbg !12584
  store i32 0, i32* %retval, align 4, !dbg !12585
  br label %return, !dbg !12585

if.end:                                           ; preds = %land.lhs.true
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !12586
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 2, !dbg !12586
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !12586
  br label %while.cond, !dbg !12587

while.cond:                                       ; preds = %sw.epilog, %if.end
  %9 = load i8*, i8** %end.addr, align 8, !dbg !12588
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !12588
  %sub.ptr.lhs.cast8 = ptrtoint i8* %9 to i64, !dbg !12588
  %sub.ptr.rhs.cast9 = ptrtoint i8* %10 to i64, !dbg !12588
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9, !dbg !12588
  %cmp11 = icmp sge i64 %sub.ptr.sub10, 2, !dbg !12588
  br i1 %cmp11, label %while.body, label %while.end, !dbg !12590

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !12591
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !12591
  %12 = load i8, i8* %arrayidx13, align 1, !dbg !12591
  %conv14 = sext i8 %12 to i32, !dbg !12591
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !12591
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !12591

cond.true:                                        ; preds = %while.body
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !12593
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !12593
  %14 = load i8, i8* %arrayidx17, align 1, !dbg !12593
  %idxprom = zext i8 %14 to i64, !dbg !12593
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12593
  %16 = bitcast %struct.encoding* %15 to %struct.normal_encoding*, !dbg !12593
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %16, i32 0, i32 1, !dbg !12593
  %arrayidx18 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !12593
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !12593
  %conv19 = zext i8 %17 to i32, !dbg !12593
  br label %cond.end, !dbg !12593

cond.false:                                       ; preds = %while.body
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !12595
  %arrayidx20 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !12595
  %19 = load i8, i8* %arrayidx20, align 1, !dbg !12595
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !12595
  %arrayidx21 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !12595
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !12595
  %call = call i32 @unicode_byte_type(i8 signext %19, i8 signext %21), !dbg !12595
  br label %cond.end, !dbg !12595

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv19, %cond.true ], [ %call, %cond.false ], !dbg !12597
  switch i32 %cond, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb30
    i32 7, label %sw.bb39
    i32 0, label %sw.bb48
    i32 1, label %sw.bb48
    i32 8, label %sw.bb48
    i32 27, label %sw.bb49
  ], !dbg !12599

sw.bb:                                            ; preds = %cond.end
  %22 = load i8*, i8** %end.addr, align 8, !dbg !12600
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !12600
  %sub.ptr.lhs.cast22 = ptrtoint i8* %22 to i64, !dbg !12600
  %sub.ptr.rhs.cast23 = ptrtoint i8* %23 to i64, !dbg !12600
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !12600
  %cmp25 = icmp slt i64 %sub.ptr.sub24, 2, !dbg !12600
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !12603

if.then27:                                        ; preds = %sw.bb
  store i32 -2, i32* %retval, align 4, !dbg !12604
  br label %return, !dbg !12604

if.end28:                                         ; preds = %sw.bb
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !12606
  %add.ptr29 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !12606
  store i8* %add.ptr29, i8** %ptr.addr, align 8, !dbg !12606
  br label %sw.epilog, !dbg !12606

sw.bb30:                                          ; preds = %cond.end
  %25 = load i8*, i8** %end.addr, align 8, !dbg !12608
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !12608
  %sub.ptr.lhs.cast31 = ptrtoint i8* %25 to i64, !dbg !12608
  %sub.ptr.rhs.cast32 = ptrtoint i8* %26 to i64, !dbg !12608
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !12608
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 3, !dbg !12608
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !12608

if.then36:                                        ; preds = %sw.bb30
  store i32 -2, i32* %retval, align 4, !dbg !12611
  br label %return, !dbg !12611

if.end37:                                         ; preds = %sw.bb30
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !12613
  %add.ptr38 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !12613
  store i8* %add.ptr38, i8** %ptr.addr, align 8, !dbg !12613
  br label %sw.epilog, !dbg !12613

sw.bb39:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !12615
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !12615
  %sub.ptr.lhs.cast40 = ptrtoint i8* %28 to i64, !dbg !12615
  %sub.ptr.rhs.cast41 = ptrtoint i8* %29 to i64, !dbg !12615
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !12615
  %cmp43 = icmp slt i64 %sub.ptr.sub42, 4, !dbg !12615
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !12615

if.then45:                                        ; preds = %sw.bb39
  store i32 -2, i32* %retval, align 4, !dbg !12618
  br label %return, !dbg !12618

if.end46:                                         ; preds = %sw.bb39
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !12620
  %add.ptr47 = getelementptr inbounds i8, i8* %30, i64 4, !dbg !12620
  store i8* %add.ptr47, i8** %ptr.addr, align 8, !dbg !12620
  br label %sw.epilog, !dbg !12620

sw.bb48:                                          ; preds = %cond.end, %cond.end, %cond.end
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !12622
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12622
  store i8* %31, i8** %32, align 8, !dbg !12622
  store i32 0, i32* %retval, align 4, !dbg !12622
  br label %return, !dbg !12622

sw.bb49:                                          ; preds = %cond.end
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !12624
  %add.ptr50 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !12624
  store i8* %add.ptr50, i8** %ptr.addr, align 8, !dbg !12624
  %34 = load i8*, i8** %end.addr, align 8, !dbg !12625
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !12625
  %sub.ptr.lhs.cast51 = ptrtoint i8* %34 to i64, !dbg !12625
  %sub.ptr.rhs.cast52 = ptrtoint i8* %35 to i64, !dbg !12625
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52, !dbg !12625
  %cmp54 = icmp sge i64 %sub.ptr.sub53, 2, !dbg !12625
  br i1 %cmp54, label %if.end57, label %if.then56, !dbg !12628

if.then56:                                        ; preds = %sw.bb49
  store i32 -1, i32* %retval, align 4, !dbg !12629
  br label %return, !dbg !12629

if.end57:                                         ; preds = %sw.bb49
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !12632
  %arrayidx58 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !12632
  %37 = load i8, i8* %arrayidx58, align 1, !dbg !12632
  %conv59 = sext i8 %37 to i32, !dbg !12632
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !12632
  br i1 %cmp60, label %land.lhs.true62, label %if.end88, !dbg !12632

land.lhs.true62:                                  ; preds = %if.end57
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !12634
  %arrayidx63 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !12634
  %39 = load i8, i8* %arrayidx63, align 1, !dbg !12634
  %conv64 = sext i8 %39 to i32, !dbg !12634
  %cmp65 = icmp eq i32 %conv64, 45, !dbg !12634
  br i1 %cmp65, label %if.then67, label %if.end88, !dbg !12634

if.then67:                                        ; preds = %land.lhs.true62
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !12636
  %add.ptr68 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !12636
  store i8* %add.ptr68, i8** %ptr.addr, align 8, !dbg !12636
  %41 = load i8*, i8** %end.addr, align 8, !dbg !12638
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !12638
  %sub.ptr.lhs.cast69 = ptrtoint i8* %41 to i64, !dbg !12638
  %sub.ptr.rhs.cast70 = ptrtoint i8* %42 to i64, !dbg !12638
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !12638
  %cmp72 = icmp sge i64 %sub.ptr.sub71, 2, !dbg !12638
  br i1 %cmp72, label %if.end75, label %if.then74, !dbg !12641

if.then74:                                        ; preds = %if.then67
  store i32 -1, i32* %retval, align 4, !dbg !12642
  br label %return, !dbg !12642

if.end75:                                         ; preds = %if.then67
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !12645
  %arrayidx76 = getelementptr inbounds i8, i8* %43, i64 0, !dbg !12645
  %44 = load i8, i8* %arrayidx76, align 1, !dbg !12645
  %conv77 = sext i8 %44 to i32, !dbg !12645
  %cmp78 = icmp eq i32 %conv77, 0, !dbg !12645
  br i1 %cmp78, label %land.lhs.true80, label %if.then85, !dbg !12645

land.lhs.true80:                                  ; preds = %if.end75
  %45 = load i8*, i8** %ptr.addr, align 8, !dbg !12647
  %arrayidx81 = getelementptr inbounds i8, i8* %45, i64 1, !dbg !12647
  %46 = load i8, i8* %arrayidx81, align 1, !dbg !12647
  %conv82 = sext i8 %46 to i32, !dbg !12647
  %cmp83 = icmp eq i32 %conv82, 62, !dbg !12647
  br i1 %cmp83, label %if.end86, label %if.then85, !dbg !12649

if.then85:                                        ; preds = %land.lhs.true80, %if.end75
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !12650
  %48 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12652
  store i8* %47, i8** %48, align 8, !dbg !12653
  store i32 0, i32* %retval, align 4, !dbg !12654
  br label %return, !dbg !12654

if.end86:                                         ; preds = %land.lhs.true80
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !12655
  %add.ptr87 = getelementptr inbounds i8, i8* %49, i64 2, !dbg !12656
  %50 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12657
  store i8* %add.ptr87, i8** %50, align 8, !dbg !12658
  store i32 13, i32* %retval, align 4, !dbg !12659
  br label %return, !dbg !12659

if.end88:                                         ; preds = %land.lhs.true62, %if.end57
  br label %sw.epilog, !dbg !12660

sw.default:                                       ; preds = %cond.end
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !12661
  %add.ptr89 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !12661
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !12661
  br label %sw.epilog, !dbg !12662

sw.epilog:                                        ; preds = %sw.default, %if.end88, %if.end46, %if.end37, %if.end28
  br label %while.cond, !dbg !12663

while.end:                                        ; preds = %while.cond
  br label %if.end90, !dbg !12665

if.end90:                                         ; preds = %while.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !12666
  br label %return, !dbg !12666

return:                                           ; preds = %if.end90, %if.end86, %if.then85, %if.then74, %if.then56, %sw.bb48, %if.then45, %if.then36, %if.then27, %if.then7
  %52 = load i32, i32* %retval, align 4, !dbg !12667
  ret i32 %52, !dbg !12667
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_checkPiTarget(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end, i32* %tokPtr) #0 !dbg !347 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %tokPtr.addr = alloca i32*, align 8
  %upper = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !12668, metadata !444), !dbg !12669
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12670, metadata !444), !dbg !12671
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12672, metadata !444), !dbg !12673
  store i32* %tokPtr, i32** %tokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tokPtr.addr, metadata !12674, metadata !444), !dbg !12675
  call void @llvm.dbg.declare(metadata i32* %upper, metadata !12676, metadata !444), !dbg !12677
  store i32 0, i32* %upper, align 4, !dbg !12677
  %0 = load i32*, i32** %tokPtr.addr, align 8, !dbg !12678
  store i32 11, i32* %0, align 4, !dbg !12679
  %1 = load i8*, i8** %end.addr, align 8, !dbg !12680
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12682
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !12683
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !12683
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12683
  %cmp = icmp ne i64 %sub.ptr.sub, 6, !dbg !12684
  br i1 %cmp, label %if.then, label %if.end, !dbg !12685

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !12686
  br label %return, !dbg !12686

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !12687
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !12687
  %4 = load i8, i8* %arrayidx, align 1, !dbg !12687
  %conv = sext i8 %4 to i32, !dbg !12687
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12687
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12687

cond.true:                                        ; preds = %if.end
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !12688
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !12688
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !12688
  %conv4 = sext i8 %6 to i32, !dbg !12688
  br label %cond.end, !dbg !12688

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !12690

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ -1, %cond.false ], !dbg !12692
  switch i32 %cond, label %sw.default [
    i32 120, label %sw.bb
    i32 88, label %sw.bb5
  ], !dbg !12694

sw.bb:                                            ; preds = %cond.end
  br label %sw.epilog, !dbg !12695

sw.bb5:                                           ; preds = %cond.end
  store i32 1, i32* %upper, align 4, !dbg !12697
  br label %sw.epilog, !dbg !12698

sw.default:                                       ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !12699
  br label %return, !dbg !12699

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !12700
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2, !dbg !12700
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !12700
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !12701
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !12701
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !12701
  %conv7 = sext i8 %9 to i32, !dbg !12701
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !12701
  br i1 %cmp8, label %cond.true10, label %cond.false13, !dbg !12701

cond.true10:                                      ; preds = %sw.epilog
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !12702
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !12702
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !12702
  %conv12 = sext i8 %11 to i32, !dbg !12702
  br label %cond.end14, !dbg !12702

cond.false13:                                     ; preds = %sw.epilog
  br label %cond.end14, !dbg !12703

cond.end14:                                       ; preds = %cond.false13, %cond.true10
  %cond15 = phi i32 [ %conv12, %cond.true10 ], [ -1, %cond.false13 ], !dbg !12704
  switch i32 %cond15, label %sw.default18 [
    i32 109, label %sw.bb16
    i32 77, label %sw.bb17
  ], !dbg !12705

sw.bb16:                                          ; preds = %cond.end14
  br label %sw.epilog19, !dbg !12706

sw.bb17:                                          ; preds = %cond.end14
  store i32 1, i32* %upper, align 4, !dbg !12708
  br label %sw.epilog19, !dbg !12709

sw.default18:                                     ; preds = %cond.end14
  store i32 1, i32* %retval, align 4, !dbg !12710
  br label %return, !dbg !12710

sw.epilog19:                                      ; preds = %sw.bb17, %sw.bb16
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !12711
  %add.ptr20 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !12711
  store i8* %add.ptr20, i8** %ptr.addr, align 8, !dbg !12711
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !12712
  %arrayidx21 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !12712
  %14 = load i8, i8* %arrayidx21, align 1, !dbg !12712
  %conv22 = sext i8 %14 to i32, !dbg !12712
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !12712
  br i1 %cmp23, label %cond.true25, label %cond.false28, !dbg !12712

cond.true25:                                      ; preds = %sw.epilog19
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !12713
  %arrayidx26 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !12713
  %16 = load i8, i8* %arrayidx26, align 1, !dbg !12713
  %conv27 = sext i8 %16 to i32, !dbg !12713
  br label %cond.end29, !dbg !12713

cond.false28:                                     ; preds = %sw.epilog19
  br label %cond.end29, !dbg !12714

cond.end29:                                       ; preds = %cond.false28, %cond.true25
  %cond30 = phi i32 [ %conv27, %cond.true25 ], [ -1, %cond.false28 ], !dbg !12715
  switch i32 %cond30, label %sw.default33 [
    i32 108, label %sw.bb31
    i32 76, label %sw.bb32
  ], !dbg !12716

sw.bb31:                                          ; preds = %cond.end29
  br label %sw.epilog34, !dbg !12717

sw.bb32:                                          ; preds = %cond.end29
  store i32 1, i32* %upper, align 4, !dbg !12719
  br label %sw.epilog34, !dbg !12720

sw.default33:                                     ; preds = %cond.end29
  store i32 1, i32* %retval, align 4, !dbg !12721
  br label %return, !dbg !12721

sw.epilog34:                                      ; preds = %sw.bb32, %sw.bb31
  %17 = load i32, i32* %upper, align 4, !dbg !12722
  %tobool = icmp ne i32 %17, 0, !dbg !12722
  br i1 %tobool, label %if.then35, label %if.end36, !dbg !12724

if.then35:                                        ; preds = %sw.epilog34
  store i32 0, i32* %retval, align 4, !dbg !12725
  br label %return, !dbg !12725

if.end36:                                         ; preds = %sw.epilog34
  %18 = load i32*, i32** %tokPtr.addr, align 8, !dbg !12726
  store i32 12, i32* %18, align 4, !dbg !12727
  store i32 1, i32* %retval, align 4, !dbg !12728
  br label %return, !dbg !12728

return:                                           ; preds = %if.end36, %if.then35, %sw.default33, %sw.default18, %sw.default, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !12729
  ret i32 %19, !dbg !12729
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanLt(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !351 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !12730, metadata !444), !dbg !12731
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12732, metadata !444), !dbg !12733
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12734, metadata !444), !dbg !12735
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !12736, metadata !444), !dbg !12737
  %0 = load i8*, i8** %end.addr, align 8, !dbg !12738
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !12738
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !12738
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !12738
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12738
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !12738
  br i1 %cmp, label %if.end, label %if.then, !dbg !12741

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12742
  br label %return, !dbg !12742

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !12745
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !12745
  %3 = load i8, i8* %arrayidx, align 1, !dbg !12745
  %conv = sext i8 %3 to i32, !dbg !12745
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12745
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12745

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !12746
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !12746
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !12746
  %idxprom = zext i8 %5 to i64, !dbg !12746
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12746
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !12746
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !12746
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !12746
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !12746
  %conv5 = zext i8 %8 to i32, !dbg !12746
  br label %cond.end, !dbg !12746

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !12748
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !12748
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !12748
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !12748
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !12748
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !12748
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !12748
  br label %cond.end, !dbg !12748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !12750
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb22
    i32 24, label %sw.bb22
    i32 5, label %sw.bb23
    i32 6, label %sw.bb31
    i32 7, label %sw.bb39
    i32 16, label %sw.bb47
    i32 15, label %sw.bb78
    i32 17, label %sw.bb81
  ], !dbg !12752

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !12753
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !12753
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !12753
  %idxprom9 = zext i8 %14 to i64, !dbg !12753
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom9, !dbg !12753
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !12753
  %conv11 = zext i8 %15 to i32, !dbg !12753
  %shl = shl i32 %conv11, 3, !dbg !12753
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !12753
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !12753
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !12753
  %conv13 = zext i8 %17 to i32, !dbg !12753
  %shr = ashr i32 %conv13, 5, !dbg !12753
  %add = add nsw i32 %shl, %shr, !dbg !12753
  %idxprom14 = sext i32 %add to i64, !dbg !12753
  %arrayidx15 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom14, !dbg !12753
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !12753
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !12753
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !12753
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !12753
  %conv17 = zext i8 %20 to i32, !dbg !12753
  %and = and i32 %conv17, 31, !dbg !12753
  %shl18 = shl i32 1, %and, !dbg !12753
  %and19 = and i32 %18, %shl18, !dbg !12753
  %tobool = icmp ne i32 %and19, 0, !dbg !12753
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !12756

if.then20:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !12757
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12757
  store i8* %21, i8** %22, align 8, !dbg !12757
  store i32 0, i32* %retval, align 4, !dbg !12757
  br label %return, !dbg !12757

if.end21:                                         ; preds = %sw.bb
  br label %sw.bb22, !dbg !12760

sw.bb22:                                          ; preds = %cond.end, %cond.end, %if.end21
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !12762
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !12762
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !12762
  br label %sw.epilog84, !dbg !12762

sw.bb23:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !12764
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !12764
  %sub.ptr.lhs.cast24 = ptrtoint i8* %24 to i64, !dbg !12764
  %sub.ptr.rhs.cast25 = ptrtoint i8* %25 to i64, !dbg !12764
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !12764
  %cmp27 = icmp slt i64 %sub.ptr.sub26, 2, !dbg !12764
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !12764

if.then29:                                        ; preds = %sw.bb23
  store i32 -2, i32* %retval, align 4, !dbg !12767
  br label %return, !dbg !12767

if.end30:                                         ; preds = %sw.bb23
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !12769
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12769
  store i8* %26, i8** %27, align 8, !dbg !12769
  store i32 0, i32* %retval, align 4, !dbg !12769
  br label %return, !dbg !12769

sw.bb31:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !12773
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !12773
  %sub.ptr.lhs.cast32 = ptrtoint i8* %28 to i64, !dbg !12773
  %sub.ptr.rhs.cast33 = ptrtoint i8* %29 to i64, !dbg !12773
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !12773
  %cmp35 = icmp slt i64 %sub.ptr.sub34, 3, !dbg !12773
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12773

if.then37:                                        ; preds = %sw.bb31
  store i32 -2, i32* %retval, align 4, !dbg !12776
  br label %return, !dbg !12776

if.end38:                                         ; preds = %sw.bb31
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !12778
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12778
  store i8* %30, i8** %31, align 8, !dbg !12778
  store i32 0, i32* %retval, align 4, !dbg !12778
  br label %return, !dbg !12778

sw.bb39:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !12782
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !12782
  %sub.ptr.lhs.cast40 = ptrtoint i8* %32 to i64, !dbg !12782
  %sub.ptr.rhs.cast41 = ptrtoint i8* %33 to i64, !dbg !12782
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !12782
  %cmp43 = icmp slt i64 %sub.ptr.sub42, 4, !dbg !12782
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !12782

if.then45:                                        ; preds = %sw.bb39
  store i32 -2, i32* %retval, align 4, !dbg !12785
  br label %return, !dbg !12785

if.end46:                                         ; preds = %sw.bb39
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !12787
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12787
  store i8* %34, i8** %35, align 8, !dbg !12787
  store i32 0, i32* %retval, align 4, !dbg !12787
  br label %return, !dbg !12787

sw.bb47:                                          ; preds = %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !12791
  %add.ptr48 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !12791
  store i8* %add.ptr48, i8** %ptr.addr, align 8, !dbg !12791
  %37 = load i8*, i8** %end.addr, align 8, !dbg !12792
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !12792
  %sub.ptr.lhs.cast49 = ptrtoint i8* %37 to i64, !dbg !12792
  %sub.ptr.rhs.cast50 = ptrtoint i8* %38 to i64, !dbg !12792
  %sub.ptr.sub51 = sub i64 %sub.ptr.lhs.cast49, %sub.ptr.rhs.cast50, !dbg !12792
  %cmp52 = icmp sge i64 %sub.ptr.sub51, 2, !dbg !12792
  br i1 %cmp52, label %if.end55, label %if.then54, !dbg !12795

if.then54:                                        ; preds = %sw.bb47
  store i32 -1, i32* %retval, align 4, !dbg !12796
  br label %return, !dbg !12796

if.end55:                                         ; preds = %sw.bb47
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !12799
  %arrayidx56 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !12799
  %40 = load i8, i8* %arrayidx56, align 1, !dbg !12799
  %conv57 = sext i8 %40 to i32, !dbg !12799
  %cmp58 = icmp eq i32 %conv57, 0, !dbg !12799
  br i1 %cmp58, label %cond.true60, label %cond.false66, !dbg !12799

cond.true60:                                      ; preds = %if.end55
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !12800
  %arrayidx61 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !12800
  %42 = load i8, i8* %arrayidx61, align 1, !dbg !12800
  %idxprom62 = zext i8 %42 to i64, !dbg !12800
  %43 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12800
  %44 = bitcast %struct.encoding* %43 to %struct.normal_encoding*, !dbg !12800
  %type63 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %44, i32 0, i32 1, !dbg !12800
  %arrayidx64 = getelementptr inbounds [256 x i8], [256 x i8]* %type63, i64 0, i64 %idxprom62, !dbg !12800
  %45 = load i8, i8* %arrayidx64, align 1, !dbg !12800
  %conv65 = zext i8 %45 to i32, !dbg !12800
  br label %cond.end70, !dbg !12800

cond.false66:                                     ; preds = %if.end55
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !12802
  %arrayidx67 = getelementptr inbounds i8, i8* %46, i64 0, !dbg !12802
  %47 = load i8, i8* %arrayidx67, align 1, !dbg !12802
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !12802
  %arrayidx68 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !12802
  %49 = load i8, i8* %arrayidx68, align 1, !dbg !12802
  %call69 = call i32 @unicode_byte_type(i8 signext %47, i8 signext %49), !dbg !12802
  br label %cond.end70, !dbg !12802

cond.end70:                                       ; preds = %cond.false66, %cond.true60
  %cond71 = phi i32 [ %conv65, %cond.true60 ], [ %call69, %cond.false66 ], !dbg !12804
  switch i32 %cond71, label %sw.epilog [
    i32 27, label %sw.bb72
    i32 20, label %sw.bb75
  ], !dbg !12806

sw.bb72:                                          ; preds = %cond.end70
  %50 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12807
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !12809
  %add.ptr73 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !12810
  %52 = load i8*, i8** %end.addr, align 8, !dbg !12811
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12812
  %call74 = call i32 @big2_scanComment(%struct.encoding* %50, i8* %add.ptr73, i8* %52, i8** %53), !dbg !12813
  store i32 %call74, i32* %retval, align 4, !dbg !12814
  br label %return, !dbg !12814

sw.bb75:                                          ; preds = %cond.end70
  %54 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12815
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !12816
  %add.ptr76 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !12817
  %56 = load i8*, i8** %end.addr, align 8, !dbg !12818
  %57 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12819
  %call77 = call i32 @big2_scanCdataSection(%struct.encoding* %54, i8* %add.ptr76, i8* %56, i8** %57), !dbg !12820
  store i32 %call77, i32* %retval, align 4, !dbg !12821
  br label %return, !dbg !12821

sw.epilog:                                        ; preds = %cond.end70
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !12822
  %59 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12823
  store i8* %58, i8** %59, align 8, !dbg !12824
  store i32 0, i32* %retval, align 4, !dbg !12825
  br label %return, !dbg !12825

sw.bb78:                                          ; preds = %cond.end
  %60 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12826
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !12827
  %add.ptr79 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !12828
  %62 = load i8*, i8** %end.addr, align 8, !dbg !12829
  %63 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12830
  %call80 = call i32 @big2_scanPi(%struct.encoding* %60, i8* %add.ptr79, i8* %62, i8** %63), !dbg !12831
  store i32 %call80, i32* %retval, align 4, !dbg !12832
  br label %return, !dbg !12832

sw.bb81:                                          ; preds = %cond.end
  %64 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12833
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !12834
  %add.ptr82 = getelementptr inbounds i8, i8* %65, i64 2, !dbg !12835
  %66 = load i8*, i8** %end.addr, align 8, !dbg !12836
  %67 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12837
  %call83 = call i32 @big2_scanEndTag(%struct.encoding* %64, i8* %add.ptr82, i8* %66, i8** %67), !dbg !12838
  store i32 %call83, i32* %retval, align 4, !dbg !12839
  br label %return, !dbg !12839

sw.default:                                       ; preds = %cond.end
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !12840
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12841
  store i8* %68, i8** %69, align 8, !dbg !12842
  store i32 0, i32* %retval, align 4, !dbg !12843
  br label %return, !dbg !12843

sw.epilog84:                                      ; preds = %sw.bb22
  br label %while.cond, !dbg !12844

while.cond:                                       ; preds = %sw.epilog253, %sw.epilog84
  %70 = load i8*, i8** %end.addr, align 8, !dbg !12845
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !12845
  %sub.ptr.lhs.cast85 = ptrtoint i8* %70 to i64, !dbg !12845
  %sub.ptr.rhs.cast86 = ptrtoint i8* %71 to i64, !dbg !12845
  %sub.ptr.sub87 = sub i64 %sub.ptr.lhs.cast85, %sub.ptr.rhs.cast86, !dbg !12845
  %cmp88 = icmp sge i64 %sub.ptr.sub87, 2, !dbg !12845
  br i1 %cmp88, label %while.body, label %while.end254, !dbg !12846

while.body:                                       ; preds = %while.cond
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !12847
  %arrayidx90 = getelementptr inbounds i8, i8* %72, i64 0, !dbg !12847
  %73 = load i8, i8* %arrayidx90, align 1, !dbg !12847
  %conv91 = sext i8 %73 to i32, !dbg !12847
  %cmp92 = icmp eq i32 %conv91, 0, !dbg !12847
  br i1 %cmp92, label %cond.true94, label %cond.false100, !dbg !12847

cond.true94:                                      ; preds = %while.body
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !12849
  %arrayidx95 = getelementptr inbounds i8, i8* %74, i64 1, !dbg !12849
  %75 = load i8, i8* %arrayidx95, align 1, !dbg !12849
  %idxprom96 = zext i8 %75 to i64, !dbg !12849
  %76 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12849
  %77 = bitcast %struct.encoding* %76 to %struct.normal_encoding*, !dbg !12849
  %type97 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %77, i32 0, i32 1, !dbg !12849
  %arrayidx98 = getelementptr inbounds [256 x i8], [256 x i8]* %type97, i64 0, i64 %idxprom96, !dbg !12849
  %78 = load i8, i8* %arrayidx98, align 1, !dbg !12849
  %conv99 = zext i8 %78 to i32, !dbg !12849
  br label %cond.end104, !dbg !12849

cond.false100:                                    ; preds = %while.body
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !12851
  %arrayidx101 = getelementptr inbounds i8, i8* %79, i64 0, !dbg !12851
  %80 = load i8, i8* %arrayidx101, align 1, !dbg !12851
  %81 = load i8*, i8** %ptr.addr, align 8, !dbg !12851
  %arrayidx102 = getelementptr inbounds i8, i8* %81, i64 1, !dbg !12851
  %82 = load i8, i8* %arrayidx102, align 1, !dbg !12851
  %call103 = call i32 @unicode_byte_type(i8 signext %80, i8 signext %82), !dbg !12851
  br label %cond.end104, !dbg !12851

cond.end104:                                      ; preds = %cond.false100, %cond.true94
  %cond105 = phi i32 [ %conv99, %cond.true94 ], [ %call103, %cond.false100 ], !dbg !12853
  switch i32 %cond105, label %sw.default252 [
    i32 29, label %sw.bb106
    i32 22, label %sw.bb126
    i32 24, label %sw.bb126
    i32 25, label %sw.bb126
    i32 26, label %sw.bb126
    i32 27, label %sw.bb126
    i32 5, label %sw.bb128
    i32 6, label %sw.bb136
    i32 7, label %sw.bb144
    i32 21, label %sw.bb152
    i32 9, label %sw.bb152
    i32 10, label %sw.bb152
    i32 11, label %sw.bb230
    i32 17, label %sw.bb232
  ], !dbg !12855

sw.bb106:                                         ; preds = %cond.end104
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !12856
  %arrayidx107 = getelementptr inbounds i8, i8* %83, i64 0, !dbg !12856
  %84 = load i8, i8* %arrayidx107, align 1, !dbg !12856
  %idxprom108 = zext i8 %84 to i64, !dbg !12856
  %arrayidx109 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom108, !dbg !12856
  %85 = load i8, i8* %arrayidx109, align 1, !dbg !12856
  %conv110 = zext i8 %85 to i32, !dbg !12856
  %shl111 = shl i32 %conv110, 3, !dbg !12856
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !12856
  %arrayidx112 = getelementptr inbounds i8, i8* %86, i64 1, !dbg !12856
  %87 = load i8, i8* %arrayidx112, align 1, !dbg !12856
  %conv113 = zext i8 %87 to i32, !dbg !12856
  %shr114 = ashr i32 %conv113, 5, !dbg !12856
  %add115 = add nsw i32 %shl111, %shr114, !dbg !12856
  %idxprom116 = sext i32 %add115 to i64, !dbg !12856
  %arrayidx117 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom116, !dbg !12856
  %88 = load i32, i32* %arrayidx117, align 4, !dbg !12856
  %89 = load i8*, i8** %ptr.addr, align 8, !dbg !12856
  %arrayidx118 = getelementptr inbounds i8, i8* %89, i64 1, !dbg !12856
  %90 = load i8, i8* %arrayidx118, align 1, !dbg !12856
  %conv119 = zext i8 %90 to i32, !dbg !12856
  %and120 = and i32 %conv119, 31, !dbg !12856
  %shl121 = shl i32 1, %and120, !dbg !12856
  %and122 = and i32 %88, %shl121, !dbg !12856
  %tobool123 = icmp ne i32 %and122, 0, !dbg !12856
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !12859

if.then124:                                       ; preds = %sw.bb106
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !12860
  %92 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12860
  store i8* %91, i8** %92, align 8, !dbg !12860
  store i32 0, i32* %retval, align 4, !dbg !12860
  br label %return, !dbg !12860

if.end125:                                        ; preds = %sw.bb106
  br label %sw.bb126, !dbg !12863

sw.bb126:                                         ; preds = %cond.end104, %cond.end104, %cond.end104, %cond.end104, %cond.end104, %if.end125
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !12865
  %add.ptr127 = getelementptr inbounds i8, i8* %93, i64 2, !dbg !12865
  store i8* %add.ptr127, i8** %ptr.addr, align 8, !dbg !12865
  br label %sw.epilog253, !dbg !12865

sw.bb128:                                         ; preds = %cond.end104
  %94 = load i8*, i8** %end.addr, align 8, !dbg !12867
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !12867
  %sub.ptr.lhs.cast129 = ptrtoint i8* %94 to i64, !dbg !12867
  %sub.ptr.rhs.cast130 = ptrtoint i8* %95 to i64, !dbg !12867
  %sub.ptr.sub131 = sub i64 %sub.ptr.lhs.cast129, %sub.ptr.rhs.cast130, !dbg !12867
  %cmp132 = icmp slt i64 %sub.ptr.sub131, 2, !dbg !12867
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !12867

if.then134:                                       ; preds = %sw.bb128
  store i32 -2, i32* %retval, align 4, !dbg !12870
  br label %return, !dbg !12870

if.end135:                                        ; preds = %sw.bb128
  %96 = load i8*, i8** %ptr.addr, align 8, !dbg !12872
  %97 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12872
  store i8* %96, i8** %97, align 8, !dbg !12872
  store i32 0, i32* %retval, align 4, !dbg !12872
  br label %return, !dbg !12872

sw.bb136:                                         ; preds = %cond.end104
  %98 = load i8*, i8** %end.addr, align 8, !dbg !12876
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !12876
  %sub.ptr.lhs.cast137 = ptrtoint i8* %98 to i64, !dbg !12876
  %sub.ptr.rhs.cast138 = ptrtoint i8* %99 to i64, !dbg !12876
  %sub.ptr.sub139 = sub i64 %sub.ptr.lhs.cast137, %sub.ptr.rhs.cast138, !dbg !12876
  %cmp140 = icmp slt i64 %sub.ptr.sub139, 3, !dbg !12876
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !12876

if.then142:                                       ; preds = %sw.bb136
  store i32 -2, i32* %retval, align 4, !dbg !12879
  br label %return, !dbg !12879

if.end143:                                        ; preds = %sw.bb136
  %100 = load i8*, i8** %ptr.addr, align 8, !dbg !12881
  %101 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12881
  store i8* %100, i8** %101, align 8, !dbg !12881
  store i32 0, i32* %retval, align 4, !dbg !12881
  br label %return, !dbg !12881

sw.bb144:                                         ; preds = %cond.end104
  %102 = load i8*, i8** %end.addr, align 8, !dbg !12885
  %103 = load i8*, i8** %ptr.addr, align 8, !dbg !12885
  %sub.ptr.lhs.cast145 = ptrtoint i8* %102 to i64, !dbg !12885
  %sub.ptr.rhs.cast146 = ptrtoint i8* %103 to i64, !dbg !12885
  %sub.ptr.sub147 = sub i64 %sub.ptr.lhs.cast145, %sub.ptr.rhs.cast146, !dbg !12885
  %cmp148 = icmp slt i64 %sub.ptr.sub147, 4, !dbg !12885
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !12885

if.then150:                                       ; preds = %sw.bb144
  store i32 -2, i32* %retval, align 4, !dbg !12888
  br label %return, !dbg !12888

if.end151:                                        ; preds = %sw.bb144
  %104 = load i8*, i8** %ptr.addr, align 8, !dbg !12890
  %105 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12890
  store i8* %104, i8** %105, align 8, !dbg !12890
  store i32 0, i32* %retval, align 4, !dbg !12890
  br label %return, !dbg !12890

sw.bb152:                                         ; preds = %cond.end104, %cond.end104, %cond.end104
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !12894
  %add.ptr153 = getelementptr inbounds i8, i8* %106, i64 2, !dbg !12894
  store i8* %add.ptr153, i8** %ptr.addr, align 8, !dbg !12894
  br label %while.cond154, !dbg !12896

while.cond154:                                    ; preds = %sw.bb225, %sw.bb152
  %107 = load i8*, i8** %end.addr, align 8, !dbg !12897
  %108 = load i8*, i8** %ptr.addr, align 8, !dbg !12897
  %sub.ptr.lhs.cast155 = ptrtoint i8* %107 to i64, !dbg !12897
  %sub.ptr.rhs.cast156 = ptrtoint i8* %108 to i64, !dbg !12897
  %sub.ptr.sub157 = sub i64 %sub.ptr.lhs.cast155, %sub.ptr.rhs.cast156, !dbg !12897
  %cmp158 = icmp sge i64 %sub.ptr.sub157, 2, !dbg !12897
  br i1 %cmp158, label %while.body160, label %while.end, !dbg !12899

while.body160:                                    ; preds = %while.cond154
  %109 = load i8*, i8** %ptr.addr, align 8, !dbg !12900
  %arrayidx161 = getelementptr inbounds i8, i8* %109, i64 0, !dbg !12900
  %110 = load i8, i8* %arrayidx161, align 1, !dbg !12900
  %conv162 = sext i8 %110 to i32, !dbg !12900
  %cmp163 = icmp eq i32 %conv162, 0, !dbg !12900
  br i1 %cmp163, label %cond.true165, label %cond.false171, !dbg !12900

cond.true165:                                     ; preds = %while.body160
  %111 = load i8*, i8** %ptr.addr, align 8, !dbg !12902
  %arrayidx166 = getelementptr inbounds i8, i8* %111, i64 1, !dbg !12902
  %112 = load i8, i8* %arrayidx166, align 1, !dbg !12902
  %idxprom167 = zext i8 %112 to i64, !dbg !12902
  %113 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12902
  %114 = bitcast %struct.encoding* %113 to %struct.normal_encoding*, !dbg !12902
  %type168 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %114, i32 0, i32 1, !dbg !12902
  %arrayidx169 = getelementptr inbounds [256 x i8], [256 x i8]* %type168, i64 0, i64 %idxprom167, !dbg !12902
  %115 = load i8, i8* %arrayidx169, align 1, !dbg !12902
  %conv170 = zext i8 %115 to i32, !dbg !12902
  br label %cond.end175, !dbg !12902

cond.false171:                                    ; preds = %while.body160
  %116 = load i8*, i8** %ptr.addr, align 8, !dbg !12904
  %arrayidx172 = getelementptr inbounds i8, i8* %116, i64 0, !dbg !12904
  %117 = load i8, i8* %arrayidx172, align 1, !dbg !12904
  %118 = load i8*, i8** %ptr.addr, align 8, !dbg !12904
  %arrayidx173 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !12904
  %119 = load i8, i8* %arrayidx173, align 1, !dbg !12904
  %call174 = call i32 @unicode_byte_type(i8 signext %117, i8 signext %119), !dbg !12904
  br label %cond.end175, !dbg !12904

cond.end175:                                      ; preds = %cond.false171, %cond.true165
  %cond176 = phi i32 [ %conv170, %cond.true165 ], [ %call174, %cond.false171 ], !dbg !12906
  switch i32 %cond176, label %sw.default227 [
    i32 29, label %sw.bb177
    i32 22, label %sw.bb197
    i32 24, label %sw.bb197
    i32 5, label %sw.bb199
    i32 6, label %sw.bb207
    i32 7, label %sw.bb215
    i32 11, label %sw.bb223
    i32 17, label %sw.bb224
    i32 21, label %sw.bb225
    i32 9, label %sw.bb225
    i32 10, label %sw.bb225
  ], !dbg !12908

sw.bb177:                                         ; preds = %cond.end175
  %120 = load i8*, i8** %ptr.addr, align 8, !dbg !12909
  %arrayidx178 = getelementptr inbounds i8, i8* %120, i64 0, !dbg !12909
  %121 = load i8, i8* %arrayidx178, align 1, !dbg !12909
  %idxprom179 = zext i8 %121 to i64, !dbg !12909
  %arrayidx180 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom179, !dbg !12909
  %122 = load i8, i8* %arrayidx180, align 1, !dbg !12909
  %conv181 = zext i8 %122 to i32, !dbg !12909
  %shl182 = shl i32 %conv181, 3, !dbg !12909
  %123 = load i8*, i8** %ptr.addr, align 8, !dbg !12909
  %arrayidx183 = getelementptr inbounds i8, i8* %123, i64 1, !dbg !12909
  %124 = load i8, i8* %arrayidx183, align 1, !dbg !12909
  %conv184 = zext i8 %124 to i32, !dbg !12909
  %shr185 = ashr i32 %conv184, 5, !dbg !12909
  %add186 = add nsw i32 %shl182, %shr185, !dbg !12909
  %idxprom187 = sext i32 %add186 to i64, !dbg !12909
  %arrayidx188 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom187, !dbg !12909
  %125 = load i32, i32* %arrayidx188, align 4, !dbg !12909
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !12909
  %arrayidx189 = getelementptr inbounds i8, i8* %126, i64 1, !dbg !12909
  %127 = load i8, i8* %arrayidx189, align 1, !dbg !12909
  %conv190 = zext i8 %127 to i32, !dbg !12909
  %and191 = and i32 %conv190, 31, !dbg !12909
  %shl192 = shl i32 1, %and191, !dbg !12909
  %and193 = and i32 %125, %shl192, !dbg !12909
  %tobool194 = icmp ne i32 %and193, 0, !dbg !12909
  br i1 %tobool194, label %if.end196, label %if.then195, !dbg !12912

if.then195:                                       ; preds = %sw.bb177
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !12913
  %129 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12913
  store i8* %128, i8** %129, align 8, !dbg !12913
  store i32 0, i32* %retval, align 4, !dbg !12913
  br label %return, !dbg !12913

if.end196:                                        ; preds = %sw.bb177
  br label %sw.bb197, !dbg !12916

sw.bb197:                                         ; preds = %cond.end175, %cond.end175, %if.end196
  %130 = load i8*, i8** %ptr.addr, align 8, !dbg !12918
  %add.ptr198 = getelementptr inbounds i8, i8* %130, i64 2, !dbg !12918
  store i8* %add.ptr198, i8** %ptr.addr, align 8, !dbg !12918
  br label %sw.epilog228, !dbg !12918

sw.bb199:                                         ; preds = %cond.end175
  %131 = load i8*, i8** %end.addr, align 8, !dbg !12920
  %132 = load i8*, i8** %ptr.addr, align 8, !dbg !12920
  %sub.ptr.lhs.cast200 = ptrtoint i8* %131 to i64, !dbg !12920
  %sub.ptr.rhs.cast201 = ptrtoint i8* %132 to i64, !dbg !12920
  %sub.ptr.sub202 = sub i64 %sub.ptr.lhs.cast200, %sub.ptr.rhs.cast201, !dbg !12920
  %cmp203 = icmp slt i64 %sub.ptr.sub202, 2, !dbg !12920
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !12920

if.then205:                                       ; preds = %sw.bb199
  store i32 -2, i32* %retval, align 4, !dbg !12923
  br label %return, !dbg !12923

if.end206:                                        ; preds = %sw.bb199
  %133 = load i8*, i8** %ptr.addr, align 8, !dbg !12925
  %134 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12925
  store i8* %133, i8** %134, align 8, !dbg !12925
  store i32 0, i32* %retval, align 4, !dbg !12925
  br label %return, !dbg !12925

sw.bb207:                                         ; preds = %cond.end175
  %135 = load i8*, i8** %end.addr, align 8, !dbg !12929
  %136 = load i8*, i8** %ptr.addr, align 8, !dbg !12929
  %sub.ptr.lhs.cast208 = ptrtoint i8* %135 to i64, !dbg !12929
  %sub.ptr.rhs.cast209 = ptrtoint i8* %136 to i64, !dbg !12929
  %sub.ptr.sub210 = sub i64 %sub.ptr.lhs.cast208, %sub.ptr.rhs.cast209, !dbg !12929
  %cmp211 = icmp slt i64 %sub.ptr.sub210, 3, !dbg !12929
  br i1 %cmp211, label %if.then213, label %if.end214, !dbg !12929

if.then213:                                       ; preds = %sw.bb207
  store i32 -2, i32* %retval, align 4, !dbg !12932
  br label %return, !dbg !12932

if.end214:                                        ; preds = %sw.bb207
  %137 = load i8*, i8** %ptr.addr, align 8, !dbg !12934
  %138 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12934
  store i8* %137, i8** %138, align 8, !dbg !12934
  store i32 0, i32* %retval, align 4, !dbg !12934
  br label %return, !dbg !12934

sw.bb215:                                         ; preds = %cond.end175
  %139 = load i8*, i8** %end.addr, align 8, !dbg !12938
  %140 = load i8*, i8** %ptr.addr, align 8, !dbg !12938
  %sub.ptr.lhs.cast216 = ptrtoint i8* %139 to i64, !dbg !12938
  %sub.ptr.rhs.cast217 = ptrtoint i8* %140 to i64, !dbg !12938
  %sub.ptr.sub218 = sub i64 %sub.ptr.lhs.cast216, %sub.ptr.rhs.cast217, !dbg !12938
  %cmp219 = icmp slt i64 %sub.ptr.sub218, 4, !dbg !12938
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !12938

if.then221:                                       ; preds = %sw.bb215
  store i32 -2, i32* %retval, align 4, !dbg !12941
  br label %return, !dbg !12941

if.end222:                                        ; preds = %sw.bb215
  %141 = load i8*, i8** %ptr.addr, align 8, !dbg !12943
  %142 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12943
  store i8* %141, i8** %142, align 8, !dbg !12943
  store i32 0, i32* %retval, align 4, !dbg !12943
  br label %return, !dbg !12943

sw.bb223:                                         ; preds = %cond.end175
  br label %gt, !dbg !12947

sw.bb224:                                         ; preds = %cond.end175
  br label %sol, !dbg !12948

sw.bb225:                                         ; preds = %cond.end175, %cond.end175, %cond.end175
  %143 = load i8*, i8** %ptr.addr, align 8, !dbg !12949
  %add.ptr226 = getelementptr inbounds i8, i8* %143, i64 2, !dbg !12949
  store i8* %add.ptr226, i8** %ptr.addr, align 8, !dbg !12949
  br label %while.cond154, !dbg !12950

sw.default227:                                    ; preds = %cond.end175
  %144 = load i8*, i8** %ptr.addr, align 8, !dbg !12951
  %145 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12952
  store i8* %144, i8** %145, align 8, !dbg !12953
  store i32 0, i32* %retval, align 4, !dbg !12954
  br label %return, !dbg !12954

sw.epilog228:                                     ; preds = %sw.bb197
  %146 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !12955
  %147 = load i8*, i8** %ptr.addr, align 8, !dbg !12956
  %148 = load i8*, i8** %end.addr, align 8, !dbg !12957
  %149 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12958
  %call229 = call i32 @big2_scanAtts(%struct.encoding* %146, i8* %147, i8* %148, i8** %149), !dbg !12959
  store i32 %call229, i32* %retval, align 4, !dbg !12960
  br label %return, !dbg !12960

while.end:                                        ; preds = %while.cond154
  store i32 -1, i32* %retval, align 4, !dbg !12961
  br label %return, !dbg !12961

sw.bb230:                                         ; preds = %cond.end104
  br label %gt, !dbg !12962

gt:                                               ; preds = %sw.bb230, %sw.bb223
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !12963
  %add.ptr231 = getelementptr inbounds i8, i8* %150, i64 2, !dbg !12964
  %151 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12965
  store i8* %add.ptr231, i8** %151, align 8, !dbg !12966
  store i32 2, i32* %retval, align 4, !dbg !12967
  br label %return, !dbg !12967

sw.bb232:                                         ; preds = %cond.end104
  br label %sol, !dbg !12968

sol:                                              ; preds = %sw.bb232, %sw.bb224
  %152 = load i8*, i8** %ptr.addr, align 8, !dbg !12970
  %add.ptr233 = getelementptr inbounds i8, i8* %152, i64 2, !dbg !12970
  store i8* %add.ptr233, i8** %ptr.addr, align 8, !dbg !12970
  %153 = load i8*, i8** %end.addr, align 8, !dbg !12971
  %154 = load i8*, i8** %ptr.addr, align 8, !dbg !12971
  %sub.ptr.lhs.cast234 = ptrtoint i8* %153 to i64, !dbg !12971
  %sub.ptr.rhs.cast235 = ptrtoint i8* %154 to i64, !dbg !12971
  %sub.ptr.sub236 = sub i64 %sub.ptr.lhs.cast234, %sub.ptr.rhs.cast235, !dbg !12971
  %cmp237 = icmp sge i64 %sub.ptr.sub236, 2, !dbg !12971
  br i1 %cmp237, label %if.end240, label %if.then239, !dbg !12974

if.then239:                                       ; preds = %sol
  store i32 -1, i32* %retval, align 4, !dbg !12975
  br label %return, !dbg !12975

if.end240:                                        ; preds = %sol
  %155 = load i8*, i8** %ptr.addr, align 8, !dbg !12978
  %arrayidx241 = getelementptr inbounds i8, i8* %155, i64 0, !dbg !12978
  %156 = load i8, i8* %arrayidx241, align 1, !dbg !12978
  %conv242 = sext i8 %156 to i32, !dbg !12978
  %cmp243 = icmp eq i32 %conv242, 0, !dbg !12978
  br i1 %cmp243, label %land.lhs.true, label %if.then249, !dbg !12978

land.lhs.true:                                    ; preds = %if.end240
  %157 = load i8*, i8** %ptr.addr, align 8, !dbg !12980
  %arrayidx245 = getelementptr inbounds i8, i8* %157, i64 1, !dbg !12980
  %158 = load i8, i8* %arrayidx245, align 1, !dbg !12980
  %conv246 = sext i8 %158 to i32, !dbg !12980
  %cmp247 = icmp eq i32 %conv246, 62, !dbg !12980
  br i1 %cmp247, label %if.end250, label %if.then249, !dbg !12982

if.then249:                                       ; preds = %land.lhs.true, %if.end240
  %159 = load i8*, i8** %ptr.addr, align 8, !dbg !12983
  %160 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12985
  store i8* %159, i8** %160, align 8, !dbg !12986
  store i32 0, i32* %retval, align 4, !dbg !12987
  br label %return, !dbg !12987

if.end250:                                        ; preds = %land.lhs.true
  %161 = load i8*, i8** %ptr.addr, align 8, !dbg !12988
  %add.ptr251 = getelementptr inbounds i8, i8* %161, i64 2, !dbg !12989
  %162 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12990
  store i8* %add.ptr251, i8** %162, align 8, !dbg !12991
  store i32 4, i32* %retval, align 4, !dbg !12992
  br label %return, !dbg !12992

sw.default252:                                    ; preds = %cond.end104
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !12993
  %164 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !12994
  store i8* %163, i8** %164, align 8, !dbg !12995
  store i32 0, i32* %retval, align 4, !dbg !12996
  br label %return, !dbg !12996

sw.epilog253:                                     ; preds = %sw.bb126
  br label %while.cond, !dbg !12997

while.end254:                                     ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !12998
  br label %return, !dbg !12998

return:                                           ; preds = %while.end254, %sw.default252, %if.end250, %if.then249, %if.then239, %gt, %while.end, %sw.epilog228, %sw.default227, %if.end222, %if.then221, %if.end214, %if.then213, %if.end206, %if.then205, %if.then195, %if.end151, %if.then150, %if.end143, %if.then142, %if.end135, %if.then134, %if.then124, %sw.default, %sw.bb81, %sw.bb78, %sw.epilog, %sw.bb75, %sw.bb72, %if.then54, %if.end46, %if.then45, %if.end38, %if.then37, %if.end30, %if.then29, %if.then20, %if.then
  %165 = load i32, i32* %retval, align 4, !dbg !12999
  ret i32 %165, !dbg !12999
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !355 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !13000, metadata !444), !dbg !13001
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13002, metadata !444), !dbg !13003
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !13004, metadata !444), !dbg !13005
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !13006, metadata !444), !dbg !13007
  %0 = load i8*, i8** %end.addr, align 8, !dbg !13008
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !13008
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !13008
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !13008
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13008
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !13008
  br i1 %cmp, label %if.end, label %if.then, !dbg !13011

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13012
  br label %return, !dbg !13012

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !13015
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !13015
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13015
  %conv = sext i8 %3 to i32, !dbg !13015
  %cmp1 = icmp eq i32 %conv, 0, !dbg !13015
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13015

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !13016
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13016
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !13016
  %idxprom = zext i8 %5 to i64, !dbg !13016
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13016
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !13016
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !13016
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !13016
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !13016
  %conv5 = zext i8 %8 to i32, !dbg !13016
  br label %cond.end, !dbg !13016

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !13018
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !13018
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !13018
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !13018
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !13018
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !13018
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !13018
  br label %cond.end, !dbg !13018

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !13020
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb22
    i32 24, label %sw.bb22
    i32 5, label %sw.bb23
    i32 6, label %sw.bb31
    i32 7, label %sw.bb39
    i32 19, label %sw.bb47
  ], !dbg !13022

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !13023
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !13023
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !13023
  %idxprom9 = zext i8 %14 to i64, !dbg !13023
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom9, !dbg !13023
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !13023
  %conv11 = zext i8 %15 to i32, !dbg !13023
  %shl = shl i32 %conv11, 3, !dbg !13023
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !13023
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !13023
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !13023
  %conv13 = zext i8 %17 to i32, !dbg !13023
  %shr = ashr i32 %conv13, 5, !dbg !13023
  %add = add nsw i32 %shl, %shr, !dbg !13023
  %idxprom14 = sext i32 %add to i64, !dbg !13023
  %arrayidx15 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom14, !dbg !13023
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !13023
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !13023
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !13023
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !13023
  %conv17 = zext i8 %20 to i32, !dbg !13023
  %and = and i32 %conv17, 31, !dbg !13023
  %shl18 = shl i32 1, %and, !dbg !13023
  %and19 = and i32 %18, %shl18, !dbg !13023
  %tobool = icmp ne i32 %and19, 0, !dbg !13023
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !13026

if.then20:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !13027
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13027
  store i8* %21, i8** %22, align 8, !dbg !13027
  store i32 0, i32* %retval, align 4, !dbg !13027
  br label %return, !dbg !13027

if.end21:                                         ; preds = %sw.bb
  br label %sw.bb22, !dbg !13030

sw.bb22:                                          ; preds = %cond.end, %cond.end, %if.end21
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !13032
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !13032
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !13032
  br label %sw.epilog, !dbg !13032

sw.bb23:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !13034
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !13034
  %sub.ptr.lhs.cast24 = ptrtoint i8* %24 to i64, !dbg !13034
  %sub.ptr.rhs.cast25 = ptrtoint i8* %25 to i64, !dbg !13034
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !13034
  %cmp27 = icmp slt i64 %sub.ptr.sub26, 2, !dbg !13034
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !13034

if.then29:                                        ; preds = %sw.bb23
  store i32 -2, i32* %retval, align 4, !dbg !13037
  br label %return, !dbg !13037

if.end30:                                         ; preds = %sw.bb23
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !13039
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13039
  store i8* %26, i8** %27, align 8, !dbg !13039
  store i32 0, i32* %retval, align 4, !dbg !13039
  br label %return, !dbg !13039

sw.bb31:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !13043
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !13043
  %sub.ptr.lhs.cast32 = ptrtoint i8* %28 to i64, !dbg !13043
  %sub.ptr.rhs.cast33 = ptrtoint i8* %29 to i64, !dbg !13043
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !13043
  %cmp35 = icmp slt i64 %sub.ptr.sub34, 3, !dbg !13043
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !13043

if.then37:                                        ; preds = %sw.bb31
  store i32 -2, i32* %retval, align 4, !dbg !13046
  br label %return, !dbg !13046

if.end38:                                         ; preds = %sw.bb31
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !13048
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13048
  store i8* %30, i8** %31, align 8, !dbg !13048
  store i32 0, i32* %retval, align 4, !dbg !13048
  br label %return, !dbg !13048

sw.bb39:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !13052
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !13052
  %sub.ptr.lhs.cast40 = ptrtoint i8* %32 to i64, !dbg !13052
  %sub.ptr.rhs.cast41 = ptrtoint i8* %33 to i64, !dbg !13052
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !13052
  %cmp43 = icmp slt i64 %sub.ptr.sub42, 4, !dbg !13052
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !13052

if.then45:                                        ; preds = %sw.bb39
  store i32 -2, i32* %retval, align 4, !dbg !13055
  br label %return, !dbg !13055

if.end46:                                         ; preds = %sw.bb39
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !13057
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13057
  store i8* %34, i8** %35, align 8, !dbg !13057
  store i32 0, i32* %retval, align 4, !dbg !13057
  br label %return, !dbg !13057

sw.bb47:                                          ; preds = %cond.end
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13061
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !13062
  %add.ptr48 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !13063
  %38 = load i8*, i8** %end.addr, align 8, !dbg !13064
  %39 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13065
  %call49 = call i32 @big2_scanCharRef(%struct.encoding* %36, i8* %add.ptr48, i8* %38, i8** %39), !dbg !13066
  store i32 %call49, i32* %retval, align 4, !dbg !13067
  br label %return, !dbg !13067

sw.default:                                       ; preds = %cond.end
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !13068
  %41 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13069
  store i8* %40, i8** %41, align 8, !dbg !13070
  store i32 0, i32* %retval, align 4, !dbg !13071
  br label %return, !dbg !13071

sw.epilog:                                        ; preds = %sw.bb22
  br label %while.cond, !dbg !13072

while.cond:                                       ; preds = %sw.epilog120, %sw.epilog
  %42 = load i8*, i8** %end.addr, align 8, !dbg !13073
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !13073
  %sub.ptr.lhs.cast50 = ptrtoint i8* %42 to i64, !dbg !13073
  %sub.ptr.rhs.cast51 = ptrtoint i8* %43 to i64, !dbg !13073
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51, !dbg !13073
  %cmp53 = icmp sge i64 %sub.ptr.sub52, 2, !dbg !13073
  br i1 %cmp53, label %while.body, label %while.end, !dbg !13074

while.body:                                       ; preds = %while.cond
  %44 = load i8*, i8** %ptr.addr, align 8, !dbg !13075
  %arrayidx55 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !13075
  %45 = load i8, i8* %arrayidx55, align 1, !dbg !13075
  %conv56 = sext i8 %45 to i32, !dbg !13075
  %cmp57 = icmp eq i32 %conv56, 0, !dbg !13075
  br i1 %cmp57, label %cond.true59, label %cond.false65, !dbg !13075

cond.true59:                                      ; preds = %while.body
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !13077
  %arrayidx60 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !13077
  %47 = load i8, i8* %arrayidx60, align 1, !dbg !13077
  %idxprom61 = zext i8 %47 to i64, !dbg !13077
  %48 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13077
  %49 = bitcast %struct.encoding* %48 to %struct.normal_encoding*, !dbg !13077
  %type62 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %49, i32 0, i32 1, !dbg !13077
  %arrayidx63 = getelementptr inbounds [256 x i8], [256 x i8]* %type62, i64 0, i64 %idxprom61, !dbg !13077
  %50 = load i8, i8* %arrayidx63, align 1, !dbg !13077
  %conv64 = zext i8 %50 to i32, !dbg !13077
  br label %cond.end69, !dbg !13077

cond.false65:                                     ; preds = %while.body
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !13079
  %arrayidx66 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !13079
  %52 = load i8, i8* %arrayidx66, align 1, !dbg !13079
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !13079
  %arrayidx67 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !13079
  %54 = load i8, i8* %arrayidx67, align 1, !dbg !13079
  %call68 = call i32 @unicode_byte_type(i8 signext %52, i8 signext %54), !dbg !13079
  br label %cond.end69, !dbg !13079

cond.end69:                                       ; preds = %cond.false65, %cond.true59
  %cond70 = phi i32 [ %conv64, %cond.true59 ], [ %call68, %cond.false65 ], !dbg !13081
  switch i32 %cond70, label %sw.default119 [
    i32 29, label %sw.bb71
    i32 22, label %sw.bb91
    i32 24, label %sw.bb91
    i32 25, label %sw.bb91
    i32 26, label %sw.bb91
    i32 27, label %sw.bb91
    i32 5, label %sw.bb93
    i32 6, label %sw.bb101
    i32 7, label %sw.bb109
    i32 18, label %sw.bb117
  ], !dbg !13083

sw.bb71:                                          ; preds = %cond.end69
  %55 = load i8*, i8** %ptr.addr, align 8, !dbg !13084
  %arrayidx72 = getelementptr inbounds i8, i8* %55, i64 0, !dbg !13084
  %56 = load i8, i8* %arrayidx72, align 1, !dbg !13084
  %idxprom73 = zext i8 %56 to i64, !dbg !13084
  %arrayidx74 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom73, !dbg !13084
  %57 = load i8, i8* %arrayidx74, align 1, !dbg !13084
  %conv75 = zext i8 %57 to i32, !dbg !13084
  %shl76 = shl i32 %conv75, 3, !dbg !13084
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !13084
  %arrayidx77 = getelementptr inbounds i8, i8* %58, i64 1, !dbg !13084
  %59 = load i8, i8* %arrayidx77, align 1, !dbg !13084
  %conv78 = zext i8 %59 to i32, !dbg !13084
  %shr79 = ashr i32 %conv78, 5, !dbg !13084
  %add80 = add nsw i32 %shl76, %shr79, !dbg !13084
  %idxprom81 = sext i32 %add80 to i64, !dbg !13084
  %arrayidx82 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom81, !dbg !13084
  %60 = load i32, i32* %arrayidx82, align 4, !dbg !13084
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !13084
  %arrayidx83 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !13084
  %62 = load i8, i8* %arrayidx83, align 1, !dbg !13084
  %conv84 = zext i8 %62 to i32, !dbg !13084
  %and85 = and i32 %conv84, 31, !dbg !13084
  %shl86 = shl i32 1, %and85, !dbg !13084
  %and87 = and i32 %60, %shl86, !dbg !13084
  %tobool88 = icmp ne i32 %and87, 0, !dbg !13084
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !13087

if.then89:                                        ; preds = %sw.bb71
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !13088
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13088
  store i8* %63, i8** %64, align 8, !dbg !13088
  store i32 0, i32* %retval, align 4, !dbg !13088
  br label %return, !dbg !13088

if.end90:                                         ; preds = %sw.bb71
  br label %sw.bb91, !dbg !13091

sw.bb91:                                          ; preds = %cond.end69, %cond.end69, %cond.end69, %cond.end69, %cond.end69, %if.end90
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !13093
  %add.ptr92 = getelementptr inbounds i8, i8* %65, i64 2, !dbg !13093
  store i8* %add.ptr92, i8** %ptr.addr, align 8, !dbg !13093
  br label %sw.epilog120, !dbg !13093

sw.bb93:                                          ; preds = %cond.end69
  %66 = load i8*, i8** %end.addr, align 8, !dbg !13095
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !13095
  %sub.ptr.lhs.cast94 = ptrtoint i8* %66 to i64, !dbg !13095
  %sub.ptr.rhs.cast95 = ptrtoint i8* %67 to i64, !dbg !13095
  %sub.ptr.sub96 = sub i64 %sub.ptr.lhs.cast94, %sub.ptr.rhs.cast95, !dbg !13095
  %cmp97 = icmp slt i64 %sub.ptr.sub96, 2, !dbg !13095
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !13095

if.then99:                                        ; preds = %sw.bb93
  store i32 -2, i32* %retval, align 4, !dbg !13098
  br label %return, !dbg !13098

if.end100:                                        ; preds = %sw.bb93
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !13100
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13100
  store i8* %68, i8** %69, align 8, !dbg !13100
  store i32 0, i32* %retval, align 4, !dbg !13100
  br label %return, !dbg !13100

sw.bb101:                                         ; preds = %cond.end69
  %70 = load i8*, i8** %end.addr, align 8, !dbg !13104
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !13104
  %sub.ptr.lhs.cast102 = ptrtoint i8* %70 to i64, !dbg !13104
  %sub.ptr.rhs.cast103 = ptrtoint i8* %71 to i64, !dbg !13104
  %sub.ptr.sub104 = sub i64 %sub.ptr.lhs.cast102, %sub.ptr.rhs.cast103, !dbg !13104
  %cmp105 = icmp slt i64 %sub.ptr.sub104, 3, !dbg !13104
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !13104

if.then107:                                       ; preds = %sw.bb101
  store i32 -2, i32* %retval, align 4, !dbg !13107
  br label %return, !dbg !13107

if.end108:                                        ; preds = %sw.bb101
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !13109
  %73 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13109
  store i8* %72, i8** %73, align 8, !dbg !13109
  store i32 0, i32* %retval, align 4, !dbg !13109
  br label %return, !dbg !13109

sw.bb109:                                         ; preds = %cond.end69
  %74 = load i8*, i8** %end.addr, align 8, !dbg !13113
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !13113
  %sub.ptr.lhs.cast110 = ptrtoint i8* %74 to i64, !dbg !13113
  %sub.ptr.rhs.cast111 = ptrtoint i8* %75 to i64, !dbg !13113
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111, !dbg !13113
  %cmp113 = icmp slt i64 %sub.ptr.sub112, 4, !dbg !13113
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !13113

if.then115:                                       ; preds = %sw.bb109
  store i32 -2, i32* %retval, align 4, !dbg !13116
  br label %return, !dbg !13116

if.end116:                                        ; preds = %sw.bb109
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !13118
  %77 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13118
  store i8* %76, i8** %77, align 8, !dbg !13118
  store i32 0, i32* %retval, align 4, !dbg !13118
  br label %return, !dbg !13118

sw.bb117:                                         ; preds = %cond.end69
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !13122
  %add.ptr118 = getelementptr inbounds i8, i8* %78, i64 2, !dbg !13123
  %79 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13124
  store i8* %add.ptr118, i8** %79, align 8, !dbg !13125
  store i32 9, i32* %retval, align 4, !dbg !13126
  br label %return, !dbg !13126

sw.default119:                                    ; preds = %cond.end69
  %80 = load i8*, i8** %ptr.addr, align 8, !dbg !13127
  %81 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13128
  store i8* %80, i8** %81, align 8, !dbg !13129
  store i32 0, i32* %retval, align 4, !dbg !13130
  br label %return, !dbg !13130

sw.epilog120:                                     ; preds = %sw.bb91
  br label %while.cond, !dbg !13131

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !13132
  br label %return, !dbg !13132

return:                                           ; preds = %while.end, %sw.default119, %sw.bb117, %if.end116, %if.then115, %if.end108, %if.then107, %if.end100, %if.then99, %if.then89, %sw.default, %sw.bb47, %if.end46, %if.then45, %if.end38, %if.then37, %if.end30, %if.then29, %if.then20, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !13133
  ret i32 %82, !dbg !13133
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanCdataSection(%struct.encoding* %UNUSED_enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !352 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.encoding* %UNUSED_enc, %struct.encoding** %UNUSED_enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %UNUSED_enc.addr, metadata !13134, metadata !444), !dbg !13135
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13136, metadata !444), !dbg !13137
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !13138, metadata !444), !dbg !13139
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !13140, metadata !444), !dbg !13141
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13142, metadata !444), !dbg !13143
  %0 = load i8*, i8** %end.addr, align 8, !dbg !13144
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !13144
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !13144
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !13144
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13144
  %cmp = icmp sge i64 %sub.ptr.sub, 12, !dbg !13144
  br i1 %cmp, label %if.end, label %if.then, !dbg !13147

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13148
  br label %return, !dbg !13148

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !13151
  br label %for.cond, !dbg !13153

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !13154
  %cmp1 = icmp slt i32 %2, 6, !dbg !13157
  br i1 %cmp1, label %for.body, label %for.end, !dbg !13158

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !13159
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !13159
  %4 = load i8, i8* %arrayidx, align 1, !dbg !13159
  %conv = sext i8 %4 to i32, !dbg !13159
  %cmp2 = icmp eq i32 %conv, 0, !dbg !13159
  br i1 %cmp2, label %land.lhs.true, label %if.then10, !dbg !13159

land.lhs.true:                                    ; preds = %for.body
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !13162
  %arrayidx4 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !13162
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !13162
  %conv5 = sext i8 %6 to i32, !dbg !13162
  %7 = load i32, i32* %i, align 4, !dbg !13162
  %idxprom = sext i32 %7 to i64, !dbg !13162
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* @big2_scanCdataSection.CDATA_LSQB, i64 0, i64 %idxprom, !dbg !13162
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !13162
  %conv7 = sext i8 %8 to i32, !dbg !13162
  %cmp8 = icmp eq i32 %conv5, %conv7, !dbg !13162
  br i1 %cmp8, label %if.end11, label %if.then10, !dbg !13164

if.then10:                                        ; preds = %land.lhs.true, %for.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !13165
  %10 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13167
  store i8* %9, i8** %10, align 8, !dbg !13168
  store i32 0, i32* %retval, align 4, !dbg !13169
  br label %return, !dbg !13169

if.end11:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !13170

for.inc:                                          ; preds = %if.end11
  %11 = load i32, i32* %i, align 4, !dbg !13171
  %inc = add nsw i32 %11, 1, !dbg !13171
  store i32 %inc, i32* %i, align 4, !dbg !13171
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !13173
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 2, !dbg !13173
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !13173
  br label %for.cond, !dbg !13174

for.end:                                          ; preds = %for.cond
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !13175
  %14 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13176
  store i8* %13, i8** %14, align 8, !dbg !13177
  store i32 8, i32* %retval, align 4, !dbg !13178
  br label %return, !dbg !13178

return:                                           ; preds = %for.end, %if.then10, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !13179
  ret i32 %15, !dbg !13179
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanEndTag(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !353 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !13180, metadata !444), !dbg !13181
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13182, metadata !444), !dbg !13183
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !13184, metadata !444), !dbg !13185
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !13186, metadata !444), !dbg !13187
  %0 = load i8*, i8** %end.addr, align 8, !dbg !13188
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !13188
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !13188
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !13188
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13188
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !13188
  br i1 %cmp, label %if.end, label %if.then, !dbg !13191

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13192
  br label %return, !dbg !13192

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !13195
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !13195
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13195
  %conv = sext i8 %3 to i32, !dbg !13195
  %cmp1 = icmp eq i32 %conv, 0, !dbg !13195
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13195

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !13196
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13196
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !13196
  %idxprom = zext i8 %5 to i64, !dbg !13196
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13196
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !13196
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !13196
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !13196
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !13196
  %conv5 = zext i8 %8 to i32, !dbg !13196
  br label %cond.end, !dbg !13196

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !13198
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !13198
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !13198
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !13198
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !13198
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !13198
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !13198
  br label %cond.end, !dbg !13198

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !13200
  switch i32 %cond, label %sw.default [
    i32 29, label %sw.bb
    i32 22, label %sw.bb22
    i32 24, label %sw.bb22
    i32 5, label %sw.bb23
    i32 6, label %sw.bb31
    i32 7, label %sw.bb39
  ], !dbg !13202

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !13203
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !13203
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !13203
  %idxprom9 = zext i8 %14 to i64, !dbg !13203
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom9, !dbg !13203
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !13203
  %conv11 = zext i8 %15 to i32, !dbg !13203
  %shl = shl i32 %conv11, 3, !dbg !13203
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !13203
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !13203
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !13203
  %conv13 = zext i8 %17 to i32, !dbg !13203
  %shr = ashr i32 %conv13, 5, !dbg !13203
  %add = add nsw i32 %shl, %shr, !dbg !13203
  %idxprom14 = sext i32 %add to i64, !dbg !13203
  %arrayidx15 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom14, !dbg !13203
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !13203
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !13203
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !13203
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !13203
  %conv17 = zext i8 %20 to i32, !dbg !13203
  %and = and i32 %conv17, 31, !dbg !13203
  %shl18 = shl i32 1, %and, !dbg !13203
  %and19 = and i32 %18, %shl18, !dbg !13203
  %tobool = icmp ne i32 %and19, 0, !dbg !13203
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !13206

if.then20:                                        ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !13207
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13207
  store i8* %21, i8** %22, align 8, !dbg !13207
  store i32 0, i32* %retval, align 4, !dbg !13207
  br label %return, !dbg !13207

if.end21:                                         ; preds = %sw.bb
  br label %sw.bb22, !dbg !13210

sw.bb22:                                          ; preds = %cond.end, %cond.end, %if.end21
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !13212
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !13212
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !13212
  br label %sw.epilog, !dbg !13212

sw.bb23:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !13214
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !13214
  %sub.ptr.lhs.cast24 = ptrtoint i8* %24 to i64, !dbg !13214
  %sub.ptr.rhs.cast25 = ptrtoint i8* %25 to i64, !dbg !13214
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !13214
  %cmp27 = icmp slt i64 %sub.ptr.sub26, 2, !dbg !13214
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !13214

if.then29:                                        ; preds = %sw.bb23
  store i32 -2, i32* %retval, align 4, !dbg !13217
  br label %return, !dbg !13217

if.end30:                                         ; preds = %sw.bb23
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !13219
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13219
  store i8* %26, i8** %27, align 8, !dbg !13219
  store i32 0, i32* %retval, align 4, !dbg !13219
  br label %return, !dbg !13219

sw.bb31:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !13223
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !13223
  %sub.ptr.lhs.cast32 = ptrtoint i8* %28 to i64, !dbg !13223
  %sub.ptr.rhs.cast33 = ptrtoint i8* %29 to i64, !dbg !13223
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33, !dbg !13223
  %cmp35 = icmp slt i64 %sub.ptr.sub34, 3, !dbg !13223
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !13223

if.then37:                                        ; preds = %sw.bb31
  store i32 -2, i32* %retval, align 4, !dbg !13226
  br label %return, !dbg !13226

if.end38:                                         ; preds = %sw.bb31
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !13228
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13228
  store i8* %30, i8** %31, align 8, !dbg !13228
  store i32 0, i32* %retval, align 4, !dbg !13228
  br label %return, !dbg !13228

sw.bb39:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !13232
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !13232
  %sub.ptr.lhs.cast40 = ptrtoint i8* %32 to i64, !dbg !13232
  %sub.ptr.rhs.cast41 = ptrtoint i8* %33 to i64, !dbg !13232
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !13232
  %cmp43 = icmp slt i64 %sub.ptr.sub42, 4, !dbg !13232
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !13232

if.then45:                                        ; preds = %sw.bb39
  store i32 -2, i32* %retval, align 4, !dbg !13235
  br label %return, !dbg !13235

if.end46:                                         ; preds = %sw.bb39
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !13237
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13237
  store i8* %34, i8** %35, align 8, !dbg !13237
  store i32 0, i32* %retval, align 4, !dbg !13237
  br label %return, !dbg !13237

sw.default:                                       ; preds = %cond.end
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !13241
  %37 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13242
  store i8* %36, i8** %37, align 8, !dbg !13243
  store i32 0, i32* %retval, align 4, !dbg !13244
  br label %return, !dbg !13244

sw.epilog:                                        ; preds = %sw.bb22
  br label %while.cond, !dbg !13245

while.cond:                                       ; preds = %sw.epilog146, %sw.epilog
  %38 = load i8*, i8** %end.addr, align 8, !dbg !13246
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !13246
  %sub.ptr.lhs.cast47 = ptrtoint i8* %38 to i64, !dbg !13246
  %sub.ptr.rhs.cast48 = ptrtoint i8* %39 to i64, !dbg !13246
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !13246
  %cmp50 = icmp sge i64 %sub.ptr.sub49, 2, !dbg !13246
  br i1 %cmp50, label %while.body, label %while.end, !dbg !13247

while.body:                                       ; preds = %while.cond
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !13248
  %arrayidx52 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !13248
  %41 = load i8, i8* %arrayidx52, align 1, !dbg !13248
  %conv53 = sext i8 %41 to i32, !dbg !13248
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !13248
  br i1 %cmp54, label %cond.true56, label %cond.false62, !dbg !13248

cond.true56:                                      ; preds = %while.body
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !13250
  %arrayidx57 = getelementptr inbounds i8, i8* %42, i64 1, !dbg !13250
  %43 = load i8, i8* %arrayidx57, align 1, !dbg !13250
  %idxprom58 = zext i8 %43 to i64, !dbg !13250
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13250
  %45 = bitcast %struct.encoding* %44 to %struct.normal_encoding*, !dbg !13250
  %type59 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %45, i32 0, i32 1, !dbg !13250
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %type59, i64 0, i64 %idxprom58, !dbg !13250
  %46 = load i8, i8* %arrayidx60, align 1, !dbg !13250
  %conv61 = zext i8 %46 to i32, !dbg !13250
  br label %cond.end66, !dbg !13250

cond.false62:                                     ; preds = %while.body
  %47 = load i8*, i8** %ptr.addr, align 8, !dbg !13252
  %arrayidx63 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !13252
  %48 = load i8, i8* %arrayidx63, align 1, !dbg !13252
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !13252
  %arrayidx64 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !13252
  %50 = load i8, i8* %arrayidx64, align 1, !dbg !13252
  %call65 = call i32 @unicode_byte_type(i8 signext %48, i8 signext %50), !dbg !13252
  br label %cond.end66, !dbg !13252

cond.end66:                                       ; preds = %cond.false62, %cond.true56
  %cond67 = phi i32 [ %conv61, %cond.true56 ], [ %call65, %cond.false62 ], !dbg !13254
  switch i32 %cond67, label %sw.default145 [
    i32 29, label %sw.bb68
    i32 22, label %sw.bb88
    i32 24, label %sw.bb88
    i32 25, label %sw.bb88
    i32 26, label %sw.bb88
    i32 27, label %sw.bb88
    i32 5, label %sw.bb90
    i32 6, label %sw.bb98
    i32 7, label %sw.bb106
    i32 21, label %sw.bb114
    i32 9, label %sw.bb114
    i32 10, label %sw.bb114
    i32 11, label %sw.bb143
  ], !dbg !13256

sw.bb68:                                          ; preds = %cond.end66
  %51 = load i8*, i8** %ptr.addr, align 8, !dbg !13257
  %arrayidx69 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !13257
  %52 = load i8, i8* %arrayidx69, align 1, !dbg !13257
  %idxprom70 = zext i8 %52 to i64, !dbg !13257
  %arrayidx71 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom70, !dbg !13257
  %53 = load i8, i8* %arrayidx71, align 1, !dbg !13257
  %conv72 = zext i8 %53 to i32, !dbg !13257
  %shl73 = shl i32 %conv72, 3, !dbg !13257
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !13257
  %arrayidx74 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !13257
  %55 = load i8, i8* %arrayidx74, align 1, !dbg !13257
  %conv75 = zext i8 %55 to i32, !dbg !13257
  %shr76 = ashr i32 %conv75, 5, !dbg !13257
  %add77 = add nsw i32 %shl73, %shr76, !dbg !13257
  %idxprom78 = sext i32 %add77 to i64, !dbg !13257
  %arrayidx79 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom78, !dbg !13257
  %56 = load i32, i32* %arrayidx79, align 4, !dbg !13257
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !13257
  %arrayidx80 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !13257
  %58 = load i8, i8* %arrayidx80, align 1, !dbg !13257
  %conv81 = zext i8 %58 to i32, !dbg !13257
  %and82 = and i32 %conv81, 31, !dbg !13257
  %shl83 = shl i32 1, %and82, !dbg !13257
  %and84 = and i32 %56, %shl83, !dbg !13257
  %tobool85 = icmp ne i32 %and84, 0, !dbg !13257
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !13260

if.then86:                                        ; preds = %sw.bb68
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !13261
  %60 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13261
  store i8* %59, i8** %60, align 8, !dbg !13261
  store i32 0, i32* %retval, align 4, !dbg !13261
  br label %return, !dbg !13261

if.end87:                                         ; preds = %sw.bb68
  br label %sw.bb88, !dbg !13264

sw.bb88:                                          ; preds = %cond.end66, %cond.end66, %cond.end66, %cond.end66, %cond.end66, %if.end87
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !13266
  %add.ptr89 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !13266
  store i8* %add.ptr89, i8** %ptr.addr, align 8, !dbg !13266
  br label %sw.epilog146, !dbg !13266

sw.bb90:                                          ; preds = %cond.end66
  %62 = load i8*, i8** %end.addr, align 8, !dbg !13268
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !13268
  %sub.ptr.lhs.cast91 = ptrtoint i8* %62 to i64, !dbg !13268
  %sub.ptr.rhs.cast92 = ptrtoint i8* %63 to i64, !dbg !13268
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast92, !dbg !13268
  %cmp94 = icmp slt i64 %sub.ptr.sub93, 2, !dbg !13268
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !13268

if.then96:                                        ; preds = %sw.bb90
  store i32 -2, i32* %retval, align 4, !dbg !13271
  br label %return, !dbg !13271

if.end97:                                         ; preds = %sw.bb90
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !13273
  %65 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13273
  store i8* %64, i8** %65, align 8, !dbg !13273
  store i32 0, i32* %retval, align 4, !dbg !13273
  br label %return, !dbg !13273

sw.bb98:                                          ; preds = %cond.end66
  %66 = load i8*, i8** %end.addr, align 8, !dbg !13277
  %67 = load i8*, i8** %ptr.addr, align 8, !dbg !13277
  %sub.ptr.lhs.cast99 = ptrtoint i8* %66 to i64, !dbg !13277
  %sub.ptr.rhs.cast100 = ptrtoint i8* %67 to i64, !dbg !13277
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100, !dbg !13277
  %cmp102 = icmp slt i64 %sub.ptr.sub101, 3, !dbg !13277
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !13277

if.then104:                                       ; preds = %sw.bb98
  store i32 -2, i32* %retval, align 4, !dbg !13280
  br label %return, !dbg !13280

if.end105:                                        ; preds = %sw.bb98
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !13282
  %69 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13282
  store i8* %68, i8** %69, align 8, !dbg !13282
  store i32 0, i32* %retval, align 4, !dbg !13282
  br label %return, !dbg !13282

sw.bb106:                                         ; preds = %cond.end66
  %70 = load i8*, i8** %end.addr, align 8, !dbg !13286
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !13286
  %sub.ptr.lhs.cast107 = ptrtoint i8* %70 to i64, !dbg !13286
  %sub.ptr.rhs.cast108 = ptrtoint i8* %71 to i64, !dbg !13286
  %sub.ptr.sub109 = sub i64 %sub.ptr.lhs.cast107, %sub.ptr.rhs.cast108, !dbg !13286
  %cmp110 = icmp slt i64 %sub.ptr.sub109, 4, !dbg !13286
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !13286

if.then112:                                       ; preds = %sw.bb106
  store i32 -2, i32* %retval, align 4, !dbg !13289
  br label %return, !dbg !13289

if.end113:                                        ; preds = %sw.bb106
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !13291
  %73 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13291
  store i8* %72, i8** %73, align 8, !dbg !13291
  store i32 0, i32* %retval, align 4, !dbg !13291
  br label %return, !dbg !13291

sw.bb114:                                         ; preds = %cond.end66, %cond.end66, %cond.end66
  %74 = load i8*, i8** %ptr.addr, align 8, !dbg !13295
  %add.ptr115 = getelementptr inbounds i8, i8* %74, i64 2, !dbg !13295
  store i8* %add.ptr115, i8** %ptr.addr, align 8, !dbg !13295
  br label %for.cond, !dbg !13297

for.cond:                                         ; preds = %for.inc, %sw.bb114
  %75 = load i8*, i8** %end.addr, align 8, !dbg !13298
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !13298
  %sub.ptr.lhs.cast116 = ptrtoint i8* %75 to i64, !dbg !13298
  %sub.ptr.rhs.cast117 = ptrtoint i8* %76 to i64, !dbg !13298
  %sub.ptr.sub118 = sub i64 %sub.ptr.lhs.cast116, %sub.ptr.rhs.cast117, !dbg !13298
  %cmp119 = icmp sge i64 %sub.ptr.sub118, 2, !dbg !13298
  br i1 %cmp119, label %for.body, label %for.end, !dbg !13301

for.body:                                         ; preds = %for.cond
  %77 = load i8*, i8** %ptr.addr, align 8, !dbg !13302
  %arrayidx121 = getelementptr inbounds i8, i8* %77, i64 0, !dbg !13302
  %78 = load i8, i8* %arrayidx121, align 1, !dbg !13302
  %conv122 = sext i8 %78 to i32, !dbg !13302
  %cmp123 = icmp eq i32 %conv122, 0, !dbg !13302
  br i1 %cmp123, label %cond.true125, label %cond.false131, !dbg !13302

cond.true125:                                     ; preds = %for.body
  %79 = load i8*, i8** %ptr.addr, align 8, !dbg !13304
  %arrayidx126 = getelementptr inbounds i8, i8* %79, i64 1, !dbg !13304
  %80 = load i8, i8* %arrayidx126, align 1, !dbg !13304
  %idxprom127 = zext i8 %80 to i64, !dbg !13304
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13304
  %82 = bitcast %struct.encoding* %81 to %struct.normal_encoding*, !dbg !13304
  %type128 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %82, i32 0, i32 1, !dbg !13304
  %arrayidx129 = getelementptr inbounds [256 x i8], [256 x i8]* %type128, i64 0, i64 %idxprom127, !dbg !13304
  %83 = load i8, i8* %arrayidx129, align 1, !dbg !13304
  %conv130 = zext i8 %83 to i32, !dbg !13304
  br label %cond.end135, !dbg !13304

cond.false131:                                    ; preds = %for.body
  %84 = load i8*, i8** %ptr.addr, align 8, !dbg !13306
  %arrayidx132 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !13306
  %85 = load i8, i8* %arrayidx132, align 1, !dbg !13306
  %86 = load i8*, i8** %ptr.addr, align 8, !dbg !13306
  %arrayidx133 = getelementptr inbounds i8, i8* %86, i64 1, !dbg !13306
  %87 = load i8, i8* %arrayidx133, align 1, !dbg !13306
  %call134 = call i32 @unicode_byte_type(i8 signext %85, i8 signext %87), !dbg !13306
  br label %cond.end135, !dbg !13306

cond.end135:                                      ; preds = %cond.false131, %cond.true125
  %cond136 = phi i32 [ %conv130, %cond.true125 ], [ %call134, %cond.false131 ], !dbg !13308
  switch i32 %cond136, label %sw.default140 [
    i32 21, label %sw.bb137
    i32 9, label %sw.bb137
    i32 10, label %sw.bb137
    i32 11, label %sw.bb138
  ], !dbg !13310

sw.bb137:                                         ; preds = %cond.end135, %cond.end135, %cond.end135
  br label %sw.epilog141, !dbg !13311

sw.bb138:                                         ; preds = %cond.end135
  %88 = load i8*, i8** %ptr.addr, align 8, !dbg !13313
  %add.ptr139 = getelementptr inbounds i8, i8* %88, i64 2, !dbg !13314
  %89 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13315
  store i8* %add.ptr139, i8** %89, align 8, !dbg !13316
  store i32 5, i32* %retval, align 4, !dbg !13317
  br label %return, !dbg !13317

sw.default140:                                    ; preds = %cond.end135
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !13318
  %91 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13319
  store i8* %90, i8** %91, align 8, !dbg !13320
  store i32 0, i32* %retval, align 4, !dbg !13321
  br label %return, !dbg !13321

sw.epilog141:                                     ; preds = %sw.bb137
  br label %for.inc, !dbg !13322

for.inc:                                          ; preds = %sw.epilog141
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !13323
  %add.ptr142 = getelementptr inbounds i8, i8* %92, i64 2, !dbg !13323
  store i8* %add.ptr142, i8** %ptr.addr, align 8, !dbg !13323
  br label %for.cond, !dbg !13325

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !13326
  br label %return, !dbg !13326

sw.bb143:                                         ; preds = %cond.end66
  %93 = load i8*, i8** %ptr.addr, align 8, !dbg !13327
  %add.ptr144 = getelementptr inbounds i8, i8* %93, i64 2, !dbg !13328
  %94 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13329
  store i8* %add.ptr144, i8** %94, align 8, !dbg !13330
  store i32 5, i32* %retval, align 4, !dbg !13331
  br label %return, !dbg !13331

sw.default145:                                    ; preds = %cond.end66
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !13332
  %96 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13333
  store i8* %95, i8** %96, align 8, !dbg !13334
  store i32 0, i32* %retval, align 4, !dbg !13335
  br label %return, !dbg !13335

sw.epilog146:                                     ; preds = %sw.bb88
  br label %while.cond, !dbg !13336

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !13337
  br label %return, !dbg !13337

return:                                           ; preds = %while.end, %sw.default145, %sw.bb143, %for.end, %sw.default140, %sw.bb138, %if.end113, %if.then112, %if.end105, %if.then104, %if.end97, %if.then96, %if.then86, %sw.default, %if.end46, %if.then45, %if.end38, %if.then37, %if.end30, %if.then29, %if.then20, %if.then
  %97 = load i32, i32* %retval, align 4, !dbg !13338
  ret i32 %97, !dbg !13338
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanAtts(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !354 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %t = alloca i32, align 4
  %open = alloca i32, align 4
  %t113 = alloca i32, align 4
  %tok = alloca i32, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !13339, metadata !444), !dbg !13340
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13341, metadata !444), !dbg !13342
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !13343, metadata !444), !dbg !13344
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !13345, metadata !444), !dbg !13346
  br label %while.cond, !dbg !13347

while.cond:                                       ; preds = %sw.epilog312, %entry
  %0 = load i8*, i8** %end.addr, align 8, !dbg !13348
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !13348
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !13348
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !13348
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13348
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !13348
  br i1 %cmp, label %while.body, label %while.end, !dbg !13350

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !13351
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !13351
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13351
  %conv = sext i8 %3 to i32, !dbg !13351
  %cmp1 = icmp eq i32 %conv, 0, !dbg !13351
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13351

cond.true:                                        ; preds = %while.body
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !13353
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13353
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !13353
  %idxprom = zext i8 %5 to i64, !dbg !13353
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13353
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !13353
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !13353
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !13353
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !13353
  %conv5 = zext i8 %8 to i32, !dbg !13353
  br label %cond.end, !dbg !13353

cond.false:                                       ; preds = %while.body
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !13355
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !13355
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !13355
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !13355
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !13355
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !13355
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !13355
  br label %cond.end, !dbg !13355

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !13357
  switch i32 %cond, label %sw.default311 [
    i32 29, label %sw.bb
    i32 22, label %sw.bb20
    i32 24, label %sw.bb20
    i32 25, label %sw.bb20
    i32 26, label %sw.bb20
    i32 27, label %sw.bb20
    i32 5, label %sw.bb21
    i32 6, label %sw.bb29
    i32 7, label %sw.bb37
    i32 21, label %sw.bb45
    i32 9, label %sw.bb45
    i32 10, label %sw.bb45
    i32 14, label %sw.bb75
  ], !dbg !13359

sw.bb:                                            ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !13360
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !13360
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !13360
  %idxprom9 = zext i8 %14 to i64, !dbg !13360
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @namePages, i64 0, i64 %idxprom9, !dbg !13360
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !13360
  %conv11 = zext i8 %15 to i32, !dbg !13360
  %shl = shl i32 %conv11, 3, !dbg !13360
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !13360
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !13360
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !13360
  %conv13 = zext i8 %17 to i32, !dbg !13360
  %shr = ashr i32 %conv13, 5, !dbg !13360
  %add = add nsw i32 %shl, %shr, !dbg !13360
  %idxprom14 = sext i32 %add to i64, !dbg !13360
  %arrayidx15 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom14, !dbg !13360
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !13360
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !13360
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !13360
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !13360
  %conv17 = zext i8 %20 to i32, !dbg !13360
  %and = and i32 %conv17, 31, !dbg !13360
  %shl18 = shl i32 1, %and, !dbg !13360
  %and19 = and i32 %18, %shl18, !dbg !13360
  %tobool = icmp ne i32 %and19, 0, !dbg !13360
  br i1 %tobool, label %if.end, label %if.then, !dbg !13363

if.then:                                          ; preds = %sw.bb
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !13364
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13364
  store i8* %21, i8** %22, align 8, !dbg !13364
  store i32 0, i32* %retval, align 4, !dbg !13364
  br label %return, !dbg !13364

if.end:                                           ; preds = %sw.bb
  br label %sw.bb20, !dbg !13367

sw.bb20:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %if.end
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !13369
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 2, !dbg !13369
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !13369
  br label %sw.epilog312, !dbg !13369

sw.bb21:                                          ; preds = %cond.end
  %24 = load i8*, i8** %end.addr, align 8, !dbg !13371
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !13371
  %sub.ptr.lhs.cast22 = ptrtoint i8* %24 to i64, !dbg !13371
  %sub.ptr.rhs.cast23 = ptrtoint i8* %25 to i64, !dbg !13371
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !13371
  %cmp25 = icmp slt i64 %sub.ptr.sub24, 2, !dbg !13371
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !13371

if.then27:                                        ; preds = %sw.bb21
  store i32 -2, i32* %retval, align 4, !dbg !13374
  br label %return, !dbg !13374

if.end28:                                         ; preds = %sw.bb21
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !13376
  %27 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13376
  store i8* %26, i8** %27, align 8, !dbg !13376
  store i32 0, i32* %retval, align 4, !dbg !13376
  br label %return, !dbg !13376

sw.bb29:                                          ; preds = %cond.end
  %28 = load i8*, i8** %end.addr, align 8, !dbg !13380
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !13380
  %sub.ptr.lhs.cast30 = ptrtoint i8* %28 to i64, !dbg !13380
  %sub.ptr.rhs.cast31 = ptrtoint i8* %29 to i64, !dbg !13380
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !13380
  %cmp33 = icmp slt i64 %sub.ptr.sub32, 3, !dbg !13380
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !13380

if.then35:                                        ; preds = %sw.bb29
  store i32 -2, i32* %retval, align 4, !dbg !13383
  br label %return, !dbg !13383

if.end36:                                         ; preds = %sw.bb29
  %30 = load i8*, i8** %ptr.addr, align 8, !dbg !13385
  %31 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13385
  store i8* %30, i8** %31, align 8, !dbg !13385
  store i32 0, i32* %retval, align 4, !dbg !13385
  br label %return, !dbg !13385

sw.bb37:                                          ; preds = %cond.end
  %32 = load i8*, i8** %end.addr, align 8, !dbg !13389
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !13389
  %sub.ptr.lhs.cast38 = ptrtoint i8* %32 to i64, !dbg !13389
  %sub.ptr.rhs.cast39 = ptrtoint i8* %33 to i64, !dbg !13389
  %sub.ptr.sub40 = sub i64 %sub.ptr.lhs.cast38, %sub.ptr.rhs.cast39, !dbg !13389
  %cmp41 = icmp slt i64 %sub.ptr.sub40, 4, !dbg !13389
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !13389

if.then43:                                        ; preds = %sw.bb37
  store i32 -2, i32* %retval, align 4, !dbg !13392
  br label %return, !dbg !13392

if.end44:                                         ; preds = %sw.bb37
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !13394
  %35 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13394
  store i8* %34, i8** %35, align 8, !dbg !13394
  store i32 0, i32* %retval, align 4, !dbg !13394
  br label %return, !dbg !13394

sw.bb45:                                          ; preds = %cond.end, %cond.end, %cond.end
  br label %for.cond, !dbg !13398

for.cond:                                         ; preds = %sw.epilog, %sw.bb45
  call void @llvm.dbg.declare(metadata i32* %t, metadata !13399, metadata !444), !dbg !13403
  %36 = load i8*, i8** %ptr.addr, align 8, !dbg !13404
  %add.ptr46 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !13404
  store i8* %add.ptr46, i8** %ptr.addr, align 8, !dbg !13404
  %37 = load i8*, i8** %end.addr, align 8, !dbg !13405
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !13405
  %sub.ptr.lhs.cast47 = ptrtoint i8* %37 to i64, !dbg !13405
  %sub.ptr.rhs.cast48 = ptrtoint i8* %38 to i64, !dbg !13405
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !13405
  %cmp50 = icmp sge i64 %sub.ptr.sub49, 2, !dbg !13405
  br i1 %cmp50, label %if.end53, label %if.then52, !dbg !13408

if.then52:                                        ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !13409
  br label %return, !dbg !13409

if.end53:                                         ; preds = %for.cond
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !13412
  %arrayidx54 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !13412
  %40 = load i8, i8* %arrayidx54, align 1, !dbg !13412
  %conv55 = sext i8 %40 to i32, !dbg !13412
  %cmp56 = icmp eq i32 %conv55, 0, !dbg !13412
  br i1 %cmp56, label %cond.true58, label %cond.false64, !dbg !13412

cond.true58:                                      ; preds = %if.end53
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !13413
  %arrayidx59 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !13413
  %42 = load i8, i8* %arrayidx59, align 1, !dbg !13413
  %idxprom60 = zext i8 %42 to i64, !dbg !13413
  %43 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13413
  %44 = bitcast %struct.encoding* %43 to %struct.normal_encoding*, !dbg !13413
  %type61 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %44, i32 0, i32 1, !dbg !13413
  %arrayidx62 = getelementptr inbounds [256 x i8], [256 x i8]* %type61, i64 0, i64 %idxprom60, !dbg !13413
  %45 = load i8, i8* %arrayidx62, align 1, !dbg !13413
  %conv63 = zext i8 %45 to i32, !dbg !13413
  br label %cond.end68, !dbg !13413

cond.false64:                                     ; preds = %if.end53
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !13415
  %arrayidx65 = getelementptr inbounds i8, i8* %46, i64 0, !dbg !13415
  %47 = load i8, i8* %arrayidx65, align 1, !dbg !13415
  %48 = load i8*, i8** %ptr.addr, align 8, !dbg !13415
  %arrayidx66 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !13415
  %49 = load i8, i8* %arrayidx66, align 1, !dbg !13415
  %call67 = call i32 @unicode_byte_type(i8 signext %47, i8 signext %49), !dbg !13415
  br label %cond.end68, !dbg !13415

cond.end68:                                       ; preds = %cond.false64, %cond.true58
  %cond69 = phi i32 [ %conv63, %cond.true58 ], [ %call67, %cond.false64 ], !dbg !13417
  store i32 %cond69, i32* %t, align 4, !dbg !13419
  %50 = load i32, i32* %t, align 4, !dbg !13420
  %cmp70 = icmp eq i32 %50, 14, !dbg !13422
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !13423

if.then72:                                        ; preds = %cond.end68
  br label %for.end, !dbg !13424

if.end73:                                         ; preds = %cond.end68
  %51 = load i32, i32* %t, align 4, !dbg !13425
  switch i32 %51, label %sw.default [
    i32 21, label %sw.bb74
    i32 10, label %sw.bb74
    i32 9, label %sw.bb74
  ], !dbg !13426

sw.bb74:                                          ; preds = %if.end73, %if.end73, %if.end73
  br label %sw.epilog, !dbg !13427

sw.default:                                       ; preds = %if.end73
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !13429
  %53 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13430
  store i8* %52, i8** %53, align 8, !dbg !13431
  store i32 0, i32* %retval, align 4, !dbg !13432
  br label %return, !dbg !13432

sw.epilog:                                        ; preds = %sw.bb74
  br label %for.cond, !dbg !13433

for.end:                                          ; preds = %if.then72
  br label %sw.bb75, !dbg !13435

sw.bb75:                                          ; preds = %cond.end, %for.end
  call void @llvm.dbg.declare(metadata i32* %open, metadata !13436, metadata !444), !dbg !13438
  br label %for.cond76, !dbg !13439

for.cond76:                                       ; preds = %sw.epilog109, %sw.bb75
  %54 = load i8*, i8** %ptr.addr, align 8, !dbg !13440
  %add.ptr77 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !13440
  store i8* %add.ptr77, i8** %ptr.addr, align 8, !dbg !13440
  %55 = load i8*, i8** %end.addr, align 8, !dbg !13444
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !13444
  %sub.ptr.lhs.cast78 = ptrtoint i8* %55 to i64, !dbg !13444
  %sub.ptr.rhs.cast79 = ptrtoint i8* %56 to i64, !dbg !13444
  %sub.ptr.sub80 = sub i64 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79, !dbg !13444
  %cmp81 = icmp sge i64 %sub.ptr.sub80, 2, !dbg !13444
  br i1 %cmp81, label %if.end84, label %if.then83, !dbg !13447

if.then83:                                        ; preds = %for.cond76
  store i32 -1, i32* %retval, align 4, !dbg !13448
  br label %return, !dbg !13448

if.end84:                                         ; preds = %for.cond76
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !13451
  %arrayidx85 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !13451
  %58 = load i8, i8* %arrayidx85, align 1, !dbg !13451
  %conv86 = sext i8 %58 to i32, !dbg !13451
  %cmp87 = icmp eq i32 %conv86, 0, !dbg !13451
  br i1 %cmp87, label %cond.true89, label %cond.false95, !dbg !13451

cond.true89:                                      ; preds = %if.end84
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !13452
  %arrayidx90 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !13452
  %60 = load i8, i8* %arrayidx90, align 1, !dbg !13452
  %idxprom91 = zext i8 %60 to i64, !dbg !13452
  %61 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13452
  %62 = bitcast %struct.encoding* %61 to %struct.normal_encoding*, !dbg !13452
  %type92 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %62, i32 0, i32 1, !dbg !13452
  %arrayidx93 = getelementptr inbounds [256 x i8], [256 x i8]* %type92, i64 0, i64 %idxprom91, !dbg !13452
  %63 = load i8, i8* %arrayidx93, align 1, !dbg !13452
  %conv94 = zext i8 %63 to i32, !dbg !13452
  br label %cond.end99, !dbg !13452

cond.false95:                                     ; preds = %if.end84
  %64 = load i8*, i8** %ptr.addr, align 8, !dbg !13454
  %arrayidx96 = getelementptr inbounds i8, i8* %64, i64 0, !dbg !13454
  %65 = load i8, i8* %arrayidx96, align 1, !dbg !13454
  %66 = load i8*, i8** %ptr.addr, align 8, !dbg !13454
  %arrayidx97 = getelementptr inbounds i8, i8* %66, i64 1, !dbg !13454
  %67 = load i8, i8* %arrayidx97, align 1, !dbg !13454
  %call98 = call i32 @unicode_byte_type(i8 signext %65, i8 signext %67), !dbg !13454
  br label %cond.end99, !dbg !13454

cond.end99:                                       ; preds = %cond.false95, %cond.true89
  %cond100 = phi i32 [ %conv94, %cond.true89 ], [ %call98, %cond.false95 ], !dbg !13456
  store i32 %cond100, i32* %open, align 4, !dbg !13458
  %68 = load i32, i32* %open, align 4, !dbg !13459
  %cmp101 = icmp eq i32 %68, 12, !dbg !13461
  br i1 %cmp101, label %if.then105, label %lor.lhs.false, !dbg !13462

lor.lhs.false:                                    ; preds = %cond.end99
  %69 = load i32, i32* %open, align 4, !dbg !13463
  %cmp103 = icmp eq i32 %69, 13, !dbg !13465
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !13466

if.then105:                                       ; preds = %lor.lhs.false, %cond.end99
  br label %for.end110, !dbg !13467

if.end106:                                        ; preds = %lor.lhs.false
  %70 = load i32, i32* %open, align 4, !dbg !13468
  switch i32 %70, label %sw.default108 [
    i32 21, label %sw.bb107
    i32 10, label %sw.bb107
    i32 9, label %sw.bb107
  ], !dbg !13469

sw.bb107:                                         ; preds = %if.end106, %if.end106, %if.end106
  br label %sw.epilog109, !dbg !13470

sw.default108:                                    ; preds = %if.end106
  %71 = load i8*, i8** %ptr.addr, align 8, !dbg !13472
  %72 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13473
  store i8* %71, i8** %72, align 8, !dbg !13474
  store i32 0, i32* %retval, align 4, !dbg !13475
  br label %return, !dbg !13475

sw.epilog109:                                     ; preds = %sw.bb107
  br label %for.cond76, !dbg !13476

for.end110:                                       ; preds = %if.then105
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !13478
  %add.ptr111 = getelementptr inbounds i8, i8* %73, i64 2, !dbg !13478
  store i8* %add.ptr111, i8** %ptr.addr, align 8, !dbg !13478
  br label %for.cond112, !dbg !13479

for.cond112:                                      ; preds = %sw.epilog183, %for.end110
  call void @llvm.dbg.declare(metadata i32* %t113, metadata !13480, metadata !444), !dbg !13484
  %74 = load i8*, i8** %end.addr, align 8, !dbg !13485
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !13485
  %sub.ptr.lhs.cast114 = ptrtoint i8* %74 to i64, !dbg !13485
  %sub.ptr.rhs.cast115 = ptrtoint i8* %75 to i64, !dbg !13485
  %sub.ptr.sub116 = sub i64 %sub.ptr.lhs.cast114, %sub.ptr.rhs.cast115, !dbg !13485
  %cmp117 = icmp sge i64 %sub.ptr.sub116, 2, !dbg !13485
  br i1 %cmp117, label %if.end120, label %if.then119, !dbg !13488

if.then119:                                       ; preds = %for.cond112
  store i32 -1, i32* %retval, align 4, !dbg !13489
  br label %return, !dbg !13489

if.end120:                                        ; preds = %for.cond112
  %76 = load i8*, i8** %ptr.addr, align 8, !dbg !13492
  %arrayidx121 = getelementptr inbounds i8, i8* %76, i64 0, !dbg !13492
  %77 = load i8, i8* %arrayidx121, align 1, !dbg !13492
  %conv122 = sext i8 %77 to i32, !dbg !13492
  %cmp123 = icmp eq i32 %conv122, 0, !dbg !13492
  br i1 %cmp123, label %cond.true125, label %cond.false131, !dbg !13492

cond.true125:                                     ; preds = %if.end120
  %78 = load i8*, i8** %ptr.addr, align 8, !dbg !13493
  %arrayidx126 = getelementptr inbounds i8, i8* %78, i64 1, !dbg !13493
  %79 = load i8, i8* %arrayidx126, align 1, !dbg !13493
  %idxprom127 = zext i8 %79 to i64, !dbg !13493
  %80 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13493
  %81 = bitcast %struct.encoding* %80 to %struct.normal_encoding*, !dbg !13493
  %type128 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %81, i32 0, i32 1, !dbg !13493
  %arrayidx129 = getelementptr inbounds [256 x i8], [256 x i8]* %type128, i64 0, i64 %idxprom127, !dbg !13493
  %82 = load i8, i8* %arrayidx129, align 1, !dbg !13493
  %conv130 = zext i8 %82 to i32, !dbg !13493
  br label %cond.end135, !dbg !13493

cond.false131:                                    ; preds = %if.end120
  %83 = load i8*, i8** %ptr.addr, align 8, !dbg !13495
  %arrayidx132 = getelementptr inbounds i8, i8* %83, i64 0, !dbg !13495
  %84 = load i8, i8* %arrayidx132, align 1, !dbg !13495
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !13495
  %arrayidx133 = getelementptr inbounds i8, i8* %85, i64 1, !dbg !13495
  %86 = load i8, i8* %arrayidx133, align 1, !dbg !13495
  %call134 = call i32 @unicode_byte_type(i8 signext %84, i8 signext %86), !dbg !13495
  br label %cond.end135, !dbg !13495

cond.end135:                                      ; preds = %cond.false131, %cond.true125
  %cond136 = phi i32 [ %conv130, %cond.true125 ], [ %call134, %cond.false131 ], !dbg !13497
  store i32 %cond136, i32* %t113, align 4, !dbg !13499
  %87 = load i32, i32* %t113, align 4, !dbg !13500
  %88 = load i32, i32* %open, align 4, !dbg !13502
  %cmp137 = icmp eq i32 %87, %88, !dbg !13503
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !13504

if.then139:                                       ; preds = %cond.end135
  br label %for.end184, !dbg !13505

if.end140:                                        ; preds = %cond.end135
  %89 = load i32, i32* %t113, align 4, !dbg !13506
  switch i32 %89, label %sw.default181 [
    i32 5, label %sw.bb141
    i32 6, label %sw.bb150
    i32 7, label %sw.bb159
    i32 0, label %sw.bb168
    i32 1, label %sw.bb168
    i32 8, label %sw.bb168
    i32 3, label %sw.bb169
    i32 2, label %sw.bb180
  ], !dbg !13507

sw.bb141:                                         ; preds = %if.end140
  %90 = load i8*, i8** %end.addr, align 8, !dbg !13508
  %91 = load i8*, i8** %ptr.addr, align 8, !dbg !13508
  %sub.ptr.lhs.cast142 = ptrtoint i8* %90 to i64, !dbg !13508
  %sub.ptr.rhs.cast143 = ptrtoint i8* %91 to i64, !dbg !13508
  %sub.ptr.sub144 = sub i64 %sub.ptr.lhs.cast142, %sub.ptr.rhs.cast143, !dbg !13508
  %cmp145 = icmp slt i64 %sub.ptr.sub144, 2, !dbg !13508
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !13511

if.then147:                                       ; preds = %sw.bb141
  store i32 -2, i32* %retval, align 4, !dbg !13512
  br label %return, !dbg !13512

if.end148:                                        ; preds = %sw.bb141
  %92 = load i8*, i8** %ptr.addr, align 8, !dbg !13514
  %add.ptr149 = getelementptr inbounds i8, i8* %92, i64 2, !dbg !13514
  store i8* %add.ptr149, i8** %ptr.addr, align 8, !dbg !13514
  br label %sw.epilog183, !dbg !13514

sw.bb150:                                         ; preds = %if.end140
  %93 = load i8*, i8** %end.addr, align 8, !dbg !13516
  %94 = load i8*, i8** %ptr.addr, align 8, !dbg !13516
  %sub.ptr.lhs.cast151 = ptrtoint i8* %93 to i64, !dbg !13516
  %sub.ptr.rhs.cast152 = ptrtoint i8* %94 to i64, !dbg !13516
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152, !dbg !13516
  %cmp154 = icmp slt i64 %sub.ptr.sub153, 3, !dbg !13516
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !13516

if.then156:                                       ; preds = %sw.bb150
  store i32 -2, i32* %retval, align 4, !dbg !13519
  br label %return, !dbg !13519

if.end157:                                        ; preds = %sw.bb150
  %95 = load i8*, i8** %ptr.addr, align 8, !dbg !13521
  %add.ptr158 = getelementptr inbounds i8, i8* %95, i64 3, !dbg !13521
  store i8* %add.ptr158, i8** %ptr.addr, align 8, !dbg !13521
  br label %sw.epilog183, !dbg !13521

sw.bb159:                                         ; preds = %if.end140
  %96 = load i8*, i8** %end.addr, align 8, !dbg !13523
  %97 = load i8*, i8** %ptr.addr, align 8, !dbg !13523
  %sub.ptr.lhs.cast160 = ptrtoint i8* %96 to i64, !dbg !13523
  %sub.ptr.rhs.cast161 = ptrtoint i8* %97 to i64, !dbg !13523
  %sub.ptr.sub162 = sub i64 %sub.ptr.lhs.cast160, %sub.ptr.rhs.cast161, !dbg !13523
  %cmp163 = icmp slt i64 %sub.ptr.sub162, 4, !dbg !13523
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !13523

if.then165:                                       ; preds = %sw.bb159
  store i32 -2, i32* %retval, align 4, !dbg !13526
  br label %return, !dbg !13526

if.end166:                                        ; preds = %sw.bb159
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !13528
  %add.ptr167 = getelementptr inbounds i8, i8* %98, i64 4, !dbg !13528
  store i8* %add.ptr167, i8** %ptr.addr, align 8, !dbg !13528
  br label %sw.epilog183, !dbg !13528

sw.bb168:                                         ; preds = %if.end140, %if.end140, %if.end140
  %99 = load i8*, i8** %ptr.addr, align 8, !dbg !13530
  %100 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13530
  store i8* %99, i8** %100, align 8, !dbg !13530
  store i32 0, i32* %retval, align 4, !dbg !13530
  br label %return, !dbg !13530

sw.bb169:                                         ; preds = %if.end140
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !13532, metadata !444), !dbg !13534
  %101 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13535
  %102 = load i8*, i8** %ptr.addr, align 8, !dbg !13536
  %add.ptr170 = getelementptr inbounds i8, i8* %102, i64 2, !dbg !13537
  %103 = load i8*, i8** %end.addr, align 8, !dbg !13538
  %call171 = call i32 @big2_scanRef(%struct.encoding* %101, i8* %add.ptr170, i8* %103, i8** %ptr.addr), !dbg !13539
  store i32 %call171, i32* %tok, align 4, !dbg !13534
  %104 = load i32, i32* %tok, align 4, !dbg !13540
  %cmp172 = icmp sle i32 %104, 0, !dbg !13542
  br i1 %cmp172, label %if.then174, label %if.end179, !dbg !13543

if.then174:                                       ; preds = %sw.bb169
  %105 = load i32, i32* %tok, align 4, !dbg !13544
  %cmp175 = icmp eq i32 %105, 0, !dbg !13547
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !13548

if.then177:                                       ; preds = %if.then174
  %106 = load i8*, i8** %ptr.addr, align 8, !dbg !13549
  %107 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13550
  store i8* %106, i8** %107, align 8, !dbg !13551
  br label %if.end178, !dbg !13552

if.end178:                                        ; preds = %if.then177, %if.then174
  %108 = load i32, i32* %tok, align 4, !dbg !13553
  store i32 %108, i32* %retval, align 4, !dbg !13554
  br label %return, !dbg !13554

if.end179:                                        ; preds = %sw.bb169
  br label %sw.epilog183, !dbg !13555

sw.bb180:                                         ; preds = %if.end140
  %109 = load i8*, i8** %ptr.addr, align 8, !dbg !13556
  %110 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13557
  store i8* %109, i8** %110, align 8, !dbg !13558
  store i32 0, i32* %retval, align 4, !dbg !13559
  br label %return, !dbg !13559

sw.default181:                                    ; preds = %if.end140
  %111 = load i8*, i8** %ptr.addr, align 8, !dbg !13560
  %add.ptr182 = getelementptr inbounds i8, i8* %111, i64 2, !dbg !13560
  store i8* %add.ptr182, i8** %ptr.addr, align 8, !dbg !13560
  br label %sw.epilog183, !dbg !13561

sw.epilog183:                                     ; preds = %sw.default181, %if.end179, %if.end166, %if.end157, %if.end148
  br label %for.cond112, !dbg !13562

for.end184:                                       ; preds = %if.then139
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !13564
  %add.ptr185 = getelementptr inbounds i8, i8* %112, i64 2, !dbg !13564
  store i8* %add.ptr185, i8** %ptr.addr, align 8, !dbg !13564
  %113 = load i8*, i8** %end.addr, align 8, !dbg !13565
  %114 = load i8*, i8** %ptr.addr, align 8, !dbg !13565
  %sub.ptr.lhs.cast186 = ptrtoint i8* %113 to i64, !dbg !13565
  %sub.ptr.rhs.cast187 = ptrtoint i8* %114 to i64, !dbg !13565
  %sub.ptr.sub188 = sub i64 %sub.ptr.lhs.cast186, %sub.ptr.rhs.cast187, !dbg !13565
  %cmp189 = icmp sge i64 %sub.ptr.sub188, 2, !dbg !13565
  br i1 %cmp189, label %if.end192, label %if.then191, !dbg !13568

if.then191:                                       ; preds = %for.end184
  store i32 -1, i32* %retval, align 4, !dbg !13569
  br label %return, !dbg !13569

if.end192:                                        ; preds = %for.end184
  %115 = load i8*, i8** %ptr.addr, align 8, !dbg !13572
  %arrayidx193 = getelementptr inbounds i8, i8* %115, i64 0, !dbg !13572
  %116 = load i8, i8* %arrayidx193, align 1, !dbg !13572
  %conv194 = sext i8 %116 to i32, !dbg !13572
  %cmp195 = icmp eq i32 %conv194, 0, !dbg !13572
  br i1 %cmp195, label %cond.true197, label %cond.false203, !dbg !13572

cond.true197:                                     ; preds = %if.end192
  %117 = load i8*, i8** %ptr.addr, align 8, !dbg !13573
  %arrayidx198 = getelementptr inbounds i8, i8* %117, i64 1, !dbg !13573
  %118 = load i8, i8* %arrayidx198, align 1, !dbg !13573
  %idxprom199 = zext i8 %118 to i64, !dbg !13573
  %119 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13573
  %120 = bitcast %struct.encoding* %119 to %struct.normal_encoding*, !dbg !13573
  %type200 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %120, i32 0, i32 1, !dbg !13573
  %arrayidx201 = getelementptr inbounds [256 x i8], [256 x i8]* %type200, i64 0, i64 %idxprom199, !dbg !13573
  %121 = load i8, i8* %arrayidx201, align 1, !dbg !13573
  %conv202 = zext i8 %121 to i32, !dbg !13573
  br label %cond.end207, !dbg !13573

cond.false203:                                    ; preds = %if.end192
  %122 = load i8*, i8** %ptr.addr, align 8, !dbg !13575
  %arrayidx204 = getelementptr inbounds i8, i8* %122, i64 0, !dbg !13575
  %123 = load i8, i8* %arrayidx204, align 1, !dbg !13575
  %124 = load i8*, i8** %ptr.addr, align 8, !dbg !13575
  %arrayidx205 = getelementptr inbounds i8, i8* %124, i64 1, !dbg !13575
  %125 = load i8, i8* %arrayidx205, align 1, !dbg !13575
  %call206 = call i32 @unicode_byte_type(i8 signext %123, i8 signext %125), !dbg !13575
  br label %cond.end207, !dbg !13575

cond.end207:                                      ; preds = %cond.false203, %cond.true197
  %cond208 = phi i32 [ %conv202, %cond.true197 ], [ %call206, %cond.false203 ], !dbg !13577
  switch i32 %cond208, label %sw.default212 [
    i32 21, label %sw.bb209
    i32 9, label %sw.bb209
    i32 10, label %sw.bb209
    i32 17, label %sw.bb210
    i32 11, label %sw.bb211
  ], !dbg !13579

sw.bb209:                                         ; preds = %cond.end207, %cond.end207, %cond.end207
  br label %sw.epilog213, !dbg !13580

sw.bb210:                                         ; preds = %cond.end207
  br label %sol, !dbg !13582

sw.bb211:                                         ; preds = %cond.end207
  br label %gt, !dbg !13583

sw.default212:                                    ; preds = %cond.end207
  %126 = load i8*, i8** %ptr.addr, align 8, !dbg !13584
  %127 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13585
  store i8* %126, i8** %127, align 8, !dbg !13586
  store i32 0, i32* %retval, align 4, !dbg !13587
  br label %return, !dbg !13587

sw.epilog213:                                     ; preds = %sw.bb209
  br label %for.cond214, !dbg !13588

for.cond214:                                      ; preds = %sw.bb285, %sw.epilog213
  %128 = load i8*, i8** %ptr.addr, align 8, !dbg !13589
  %add.ptr215 = getelementptr inbounds i8, i8* %128, i64 2, !dbg !13589
  store i8* %add.ptr215, i8** %ptr.addr, align 8, !dbg !13589
  %129 = load i8*, i8** %end.addr, align 8, !dbg !13593
  %130 = load i8*, i8** %ptr.addr, align 8, !dbg !13593
  %sub.ptr.lhs.cast216 = ptrtoint i8* %129 to i64, !dbg !13593
  %sub.ptr.rhs.cast217 = ptrtoint i8* %130 to i64, !dbg !13593
  %sub.ptr.sub218 = sub i64 %sub.ptr.lhs.cast216, %sub.ptr.rhs.cast217, !dbg !13593
  %cmp219 = icmp sge i64 %sub.ptr.sub218, 2, !dbg !13593
  br i1 %cmp219, label %if.end222, label %if.then221, !dbg !13596

if.then221:                                       ; preds = %for.cond214
  store i32 -1, i32* %retval, align 4, !dbg !13597
  br label %return, !dbg !13597

if.end222:                                        ; preds = %for.cond214
  %131 = load i8*, i8** %ptr.addr, align 8, !dbg !13600
  %arrayidx223 = getelementptr inbounds i8, i8* %131, i64 0, !dbg !13600
  %132 = load i8, i8* %arrayidx223, align 1, !dbg !13600
  %conv224 = sext i8 %132 to i32, !dbg !13600
  %cmp225 = icmp eq i32 %conv224, 0, !dbg !13600
  br i1 %cmp225, label %cond.true227, label %cond.false233, !dbg !13600

cond.true227:                                     ; preds = %if.end222
  %133 = load i8*, i8** %ptr.addr, align 8, !dbg !13601
  %arrayidx228 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !13601
  %134 = load i8, i8* %arrayidx228, align 1, !dbg !13601
  %idxprom229 = zext i8 %134 to i64, !dbg !13601
  %135 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13601
  %136 = bitcast %struct.encoding* %135 to %struct.normal_encoding*, !dbg !13601
  %type230 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %136, i32 0, i32 1, !dbg !13601
  %arrayidx231 = getelementptr inbounds [256 x i8], [256 x i8]* %type230, i64 0, i64 %idxprom229, !dbg !13601
  %137 = load i8, i8* %arrayidx231, align 1, !dbg !13601
  %conv232 = zext i8 %137 to i32, !dbg !13601
  br label %cond.end237, !dbg !13601

cond.false233:                                    ; preds = %if.end222
  %138 = load i8*, i8** %ptr.addr, align 8, !dbg !13603
  %arrayidx234 = getelementptr inbounds i8, i8* %138, i64 0, !dbg !13603
  %139 = load i8, i8* %arrayidx234, align 1, !dbg !13603
  %140 = load i8*, i8** %ptr.addr, align 8, !dbg !13603
  %arrayidx235 = getelementptr inbounds i8, i8* %140, i64 1, !dbg !13603
  %141 = load i8, i8* %arrayidx235, align 1, !dbg !13603
  %call236 = call i32 @unicode_byte_type(i8 signext %139, i8 signext %141), !dbg !13603
  br label %cond.end237, !dbg !13603

cond.end237:                                      ; preds = %cond.false233, %cond.true227
  %cond238 = phi i32 [ %conv232, %cond.true227 ], [ %call236, %cond.false233 ], !dbg !13605
  switch i32 %cond238, label %sw.default308 [
    i32 29, label %sw.bb239
    i32 22, label %sw.bb259
    i32 24, label %sw.bb259
    i32 5, label %sw.bb261
    i32 6, label %sw.bb269
    i32 7, label %sw.bb277
    i32 21, label %sw.bb285
    i32 9, label %sw.bb285
    i32 10, label %sw.bb285
    i32 11, label %sw.bb286
    i32 17, label %sw.bb288
  ], !dbg !13607

sw.bb239:                                         ; preds = %cond.end237
  %142 = load i8*, i8** %ptr.addr, align 8, !dbg !13608
  %arrayidx240 = getelementptr inbounds i8, i8* %142, i64 0, !dbg !13608
  %143 = load i8, i8* %arrayidx240, align 1, !dbg !13608
  %idxprom241 = zext i8 %143 to i64, !dbg !13608
  %arrayidx242 = getelementptr inbounds [256 x i8], [256 x i8]* @nmstrtPages, i64 0, i64 %idxprom241, !dbg !13608
  %144 = load i8, i8* %arrayidx242, align 1, !dbg !13608
  %conv243 = zext i8 %144 to i32, !dbg !13608
  %shl244 = shl i32 %conv243, 3, !dbg !13608
  %145 = load i8*, i8** %ptr.addr, align 8, !dbg !13608
  %arrayidx245 = getelementptr inbounds i8, i8* %145, i64 1, !dbg !13608
  %146 = load i8, i8* %arrayidx245, align 1, !dbg !13608
  %conv246 = zext i8 %146 to i32, !dbg !13608
  %shr247 = ashr i32 %conv246, 5, !dbg !13608
  %add248 = add nsw i32 %shl244, %shr247, !dbg !13608
  %idxprom249 = sext i32 %add248 to i64, !dbg !13608
  %arrayidx250 = getelementptr inbounds [320 x i32], [320 x i32]* @namingBitmap, i64 0, i64 %idxprom249, !dbg !13608
  %147 = load i32, i32* %arrayidx250, align 4, !dbg !13608
  %148 = load i8*, i8** %ptr.addr, align 8, !dbg !13608
  %arrayidx251 = getelementptr inbounds i8, i8* %148, i64 1, !dbg !13608
  %149 = load i8, i8* %arrayidx251, align 1, !dbg !13608
  %conv252 = zext i8 %149 to i32, !dbg !13608
  %and253 = and i32 %conv252, 31, !dbg !13608
  %shl254 = shl i32 1, %and253, !dbg !13608
  %and255 = and i32 %147, %shl254, !dbg !13608
  %tobool256 = icmp ne i32 %and255, 0, !dbg !13608
  br i1 %tobool256, label %if.end258, label %if.then257, !dbg !13611

if.then257:                                       ; preds = %sw.bb239
  %150 = load i8*, i8** %ptr.addr, align 8, !dbg !13612
  %151 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13612
  store i8* %150, i8** %151, align 8, !dbg !13612
  store i32 0, i32* %retval, align 4, !dbg !13612
  br label %return, !dbg !13612

if.end258:                                        ; preds = %sw.bb239
  br label %sw.bb259, !dbg !13615

sw.bb259:                                         ; preds = %cond.end237, %cond.end237, %if.end258
  %152 = load i8*, i8** %ptr.addr, align 8, !dbg !13617
  %add.ptr260 = getelementptr inbounds i8, i8* %152, i64 2, !dbg !13617
  store i8* %add.ptr260, i8** %ptr.addr, align 8, !dbg !13617
  br label %sw.epilog309, !dbg !13617

sw.bb261:                                         ; preds = %cond.end237
  %153 = load i8*, i8** %end.addr, align 8, !dbg !13619
  %154 = load i8*, i8** %ptr.addr, align 8, !dbg !13619
  %sub.ptr.lhs.cast262 = ptrtoint i8* %153 to i64, !dbg !13619
  %sub.ptr.rhs.cast263 = ptrtoint i8* %154 to i64, !dbg !13619
  %sub.ptr.sub264 = sub i64 %sub.ptr.lhs.cast262, %sub.ptr.rhs.cast263, !dbg !13619
  %cmp265 = icmp slt i64 %sub.ptr.sub264, 2, !dbg !13619
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !13619

if.then267:                                       ; preds = %sw.bb261
  store i32 -2, i32* %retval, align 4, !dbg !13622
  br label %return, !dbg !13622

if.end268:                                        ; preds = %sw.bb261
  %155 = load i8*, i8** %ptr.addr, align 8, !dbg !13624
  %156 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13624
  store i8* %155, i8** %156, align 8, !dbg !13624
  store i32 0, i32* %retval, align 4, !dbg !13624
  br label %return, !dbg !13624

sw.bb269:                                         ; preds = %cond.end237
  %157 = load i8*, i8** %end.addr, align 8, !dbg !13628
  %158 = load i8*, i8** %ptr.addr, align 8, !dbg !13628
  %sub.ptr.lhs.cast270 = ptrtoint i8* %157 to i64, !dbg !13628
  %sub.ptr.rhs.cast271 = ptrtoint i8* %158 to i64, !dbg !13628
  %sub.ptr.sub272 = sub i64 %sub.ptr.lhs.cast270, %sub.ptr.rhs.cast271, !dbg !13628
  %cmp273 = icmp slt i64 %sub.ptr.sub272, 3, !dbg !13628
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !13628

if.then275:                                       ; preds = %sw.bb269
  store i32 -2, i32* %retval, align 4, !dbg !13631
  br label %return, !dbg !13631

if.end276:                                        ; preds = %sw.bb269
  %159 = load i8*, i8** %ptr.addr, align 8, !dbg !13633
  %160 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13633
  store i8* %159, i8** %160, align 8, !dbg !13633
  store i32 0, i32* %retval, align 4, !dbg !13633
  br label %return, !dbg !13633

sw.bb277:                                         ; preds = %cond.end237
  %161 = load i8*, i8** %end.addr, align 8, !dbg !13637
  %162 = load i8*, i8** %ptr.addr, align 8, !dbg !13637
  %sub.ptr.lhs.cast278 = ptrtoint i8* %161 to i64, !dbg !13637
  %sub.ptr.rhs.cast279 = ptrtoint i8* %162 to i64, !dbg !13637
  %sub.ptr.sub280 = sub i64 %sub.ptr.lhs.cast278, %sub.ptr.rhs.cast279, !dbg !13637
  %cmp281 = icmp slt i64 %sub.ptr.sub280, 4, !dbg !13637
  br i1 %cmp281, label %if.then283, label %if.end284, !dbg !13637

if.then283:                                       ; preds = %sw.bb277
  store i32 -2, i32* %retval, align 4, !dbg !13640
  br label %return, !dbg !13640

if.end284:                                        ; preds = %sw.bb277
  %163 = load i8*, i8** %ptr.addr, align 8, !dbg !13642
  %164 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13642
  store i8* %163, i8** %164, align 8, !dbg !13642
  store i32 0, i32* %retval, align 4, !dbg !13642
  br label %return, !dbg !13642

sw.bb285:                                         ; preds = %cond.end237, %cond.end237, %cond.end237
  br label %for.cond214, !dbg !13646

sw.bb286:                                         ; preds = %cond.end237
  br label %gt, !dbg !13647

gt:                                               ; preds = %sw.bb286, %sw.bb211
  %165 = load i8*, i8** %ptr.addr, align 8, !dbg !13649
  %add.ptr287 = getelementptr inbounds i8, i8* %165, i64 2, !dbg !13650
  %166 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13651
  store i8* %add.ptr287, i8** %166, align 8, !dbg !13652
  store i32 1, i32* %retval, align 4, !dbg !13653
  br label %return, !dbg !13653

sw.bb288:                                         ; preds = %cond.end237
  br label %sol, !dbg !13654

sol:                                              ; preds = %sw.bb288, %sw.bb210
  %167 = load i8*, i8** %ptr.addr, align 8, !dbg !13655
  %add.ptr289 = getelementptr inbounds i8, i8* %167, i64 2, !dbg !13655
  store i8* %add.ptr289, i8** %ptr.addr, align 8, !dbg !13655
  %168 = load i8*, i8** %end.addr, align 8, !dbg !13656
  %169 = load i8*, i8** %ptr.addr, align 8, !dbg !13656
  %sub.ptr.lhs.cast290 = ptrtoint i8* %168 to i64, !dbg !13656
  %sub.ptr.rhs.cast291 = ptrtoint i8* %169 to i64, !dbg !13656
  %sub.ptr.sub292 = sub i64 %sub.ptr.lhs.cast290, %sub.ptr.rhs.cast291, !dbg !13656
  %cmp293 = icmp sge i64 %sub.ptr.sub292, 2, !dbg !13656
  br i1 %cmp293, label %if.end296, label %if.then295, !dbg !13659

if.then295:                                       ; preds = %sol
  store i32 -1, i32* %retval, align 4, !dbg !13660
  br label %return, !dbg !13660

if.end296:                                        ; preds = %sol
  %170 = load i8*, i8** %ptr.addr, align 8, !dbg !13663
  %arrayidx297 = getelementptr inbounds i8, i8* %170, i64 0, !dbg !13663
  %171 = load i8, i8* %arrayidx297, align 1, !dbg !13663
  %conv298 = sext i8 %171 to i32, !dbg !13663
  %cmp299 = icmp eq i32 %conv298, 0, !dbg !13663
  br i1 %cmp299, label %land.lhs.true, label %if.then305, !dbg !13663

land.lhs.true:                                    ; preds = %if.end296
  %172 = load i8*, i8** %ptr.addr, align 8, !dbg !13665
  %arrayidx301 = getelementptr inbounds i8, i8* %172, i64 1, !dbg !13665
  %173 = load i8, i8* %arrayidx301, align 1, !dbg !13665
  %conv302 = sext i8 %173 to i32, !dbg !13665
  %cmp303 = icmp eq i32 %conv302, 62, !dbg !13665
  br i1 %cmp303, label %if.end306, label %if.then305, !dbg !13667

if.then305:                                       ; preds = %land.lhs.true, %if.end296
  %174 = load i8*, i8** %ptr.addr, align 8, !dbg !13668
  %175 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13670
  store i8* %174, i8** %175, align 8, !dbg !13671
  store i32 0, i32* %retval, align 4, !dbg !13672
  br label %return, !dbg !13672

if.end306:                                        ; preds = %land.lhs.true
  %176 = load i8*, i8** %ptr.addr, align 8, !dbg !13673
  %add.ptr307 = getelementptr inbounds i8, i8* %176, i64 2, !dbg !13674
  %177 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13675
  store i8* %add.ptr307, i8** %177, align 8, !dbg !13676
  store i32 3, i32* %retval, align 4, !dbg !13677
  br label %return, !dbg !13677

sw.default308:                                    ; preds = %cond.end237
  %178 = load i8*, i8** %ptr.addr, align 8, !dbg !13678
  %179 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13679
  store i8* %178, i8** %179, align 8, !dbg !13680
  store i32 0, i32* %retval, align 4, !dbg !13681
  br label %return, !dbg !13681

sw.epilog309:                                     ; preds = %sw.bb259
  br label %for.end310, !dbg !13682

for.end310:                                       ; preds = %sw.epilog309
  br label %sw.epilog312, !dbg !13683

sw.default311:                                    ; preds = %cond.end
  %180 = load i8*, i8** %ptr.addr, align 8, !dbg !13684
  %181 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13685
  store i8* %180, i8** %181, align 8, !dbg !13686
  store i32 0, i32* %retval, align 4, !dbg !13687
  br label %return, !dbg !13687

sw.epilog312:                                     ; preds = %for.end310, %sw.bb20
  br label %while.cond, !dbg !13688

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !13690
  br label %return, !dbg !13690

return:                                           ; preds = %while.end, %sw.default311, %sw.default308, %if.end306, %if.then305, %if.then295, %gt, %if.end284, %if.then283, %if.end276, %if.then275, %if.end268, %if.then267, %if.then257, %if.then221, %sw.default212, %if.then191, %sw.bb180, %if.end178, %sw.bb168, %if.then165, %if.then156, %if.then147, %if.then119, %sw.default108, %if.then83, %sw.default, %if.then52, %if.end44, %if.then43, %if.end36, %if.then35, %if.end28, %if.then27, %if.then
  %182 = load i32, i32* %retval, align 4, !dbg !13691
  ret i32 %182, !dbg !13691
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanCharRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !356 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !13692, metadata !444), !dbg !13693
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13694, metadata !444), !dbg !13695
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !13696, metadata !444), !dbg !13697
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !13698, metadata !444), !dbg !13699
  %0 = load i8*, i8** %end.addr, align 8, !dbg !13700
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !13700
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !13700
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !13700
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13700
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !13700
  br i1 %cmp, label %if.then, label %if.end46, !dbg !13702

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !13703
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !13703
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13703
  %conv = sext i8 %3 to i32, !dbg !13703
  %cmp1 = icmp eq i32 %conv, 0, !dbg !13703
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !13703

land.lhs.true:                                    ; preds = %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !13706
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13706
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !13706
  %conv4 = sext i8 %5 to i32, !dbg !13706
  %cmp5 = icmp eq i32 %conv4, 120, !dbg !13706
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !13706

if.then7:                                         ; preds = %land.lhs.true
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13708
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !13709
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2, !dbg !13710
  %8 = load i8*, i8** %end.addr, align 8, !dbg !13711
  %9 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13712
  %call = call i32 @big2_scanHexCharRef(%struct.encoding* %6, i8* %add.ptr, i8* %8, i8** %9), !dbg !13713
  store i32 %call, i32* %retval, align 4, !dbg !13714
  br label %return, !dbg !13714

if.end:                                           ; preds = %land.lhs.true, %if.then
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !13715
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !13715
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !13715
  %conv9 = sext i8 %11 to i32, !dbg !13715
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !13715
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !13715

cond.true:                                        ; preds = %if.end
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !13716
  %arrayidx12 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !13716
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !13716
  %idxprom = zext i8 %13 to i64, !dbg !13716
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13716
  %15 = bitcast %struct.encoding* %14 to %struct.normal_encoding*, !dbg !13716
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %15, i32 0, i32 1, !dbg !13716
  %arrayidx13 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !13716
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !13716
  %conv14 = zext i8 %16 to i32, !dbg !13716
  br label %cond.end, !dbg !13716

cond.false:                                       ; preds = %if.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !13718
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !13718
  %18 = load i8, i8* %arrayidx15, align 1, !dbg !13718
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !13718
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !13718
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !13718
  %call17 = call i32 @unicode_byte_type(i8 signext %18, i8 signext %20), !dbg !13718
  br label %cond.end, !dbg !13718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv14, %cond.true ], [ %call17, %cond.false ], !dbg !13720
  switch i32 %cond, label %sw.default [
    i32 25, label %sw.bb
  ], !dbg !13722

sw.bb:                                            ; preds = %cond.end
  br label %sw.epilog, !dbg !13723

sw.default:                                       ; preds = %cond.end
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !13725
  %22 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13726
  store i8* %21, i8** %22, align 8, !dbg !13727
  store i32 0, i32* %retval, align 4, !dbg !13728
  br label %return, !dbg !13728

sw.epilog:                                        ; preds = %sw.bb
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !13729
  %add.ptr18 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !13729
  store i8* %add.ptr18, i8** %ptr.addr, align 8, !dbg !13729
  br label %for.cond, !dbg !13731

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %24 = load i8*, i8** %end.addr, align 8, !dbg !13732
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !13732
  %sub.ptr.lhs.cast19 = ptrtoint i8* %24 to i64, !dbg !13732
  %sub.ptr.rhs.cast20 = ptrtoint i8* %25 to i64, !dbg !13732
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20, !dbg !13732
  %cmp22 = icmp sge i64 %sub.ptr.sub21, 2, !dbg !13732
  br i1 %cmp22, label %for.body, label %for.end, !dbg !13735

for.body:                                         ; preds = %for.cond
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !13736
  %arrayidx24 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !13736
  %27 = load i8, i8* %arrayidx24, align 1, !dbg !13736
  %conv25 = sext i8 %27 to i32, !dbg !13736
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !13736
  br i1 %cmp26, label %cond.true28, label %cond.false34, !dbg !13736

cond.true28:                                      ; preds = %for.body
  %28 = load i8*, i8** %ptr.addr, align 8, !dbg !13738
  %arrayidx29 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !13738
  %29 = load i8, i8* %arrayidx29, align 1, !dbg !13738
  %idxprom30 = zext i8 %29 to i64, !dbg !13738
  %30 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13738
  %31 = bitcast %struct.encoding* %30 to %struct.normal_encoding*, !dbg !13738
  %type31 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %31, i32 0, i32 1, !dbg !13738
  %arrayidx32 = getelementptr inbounds [256 x i8], [256 x i8]* %type31, i64 0, i64 %idxprom30, !dbg !13738
  %32 = load i8, i8* %arrayidx32, align 1, !dbg !13738
  %conv33 = zext i8 %32 to i32, !dbg !13738
  br label %cond.end38, !dbg !13738

cond.false34:                                     ; preds = %for.body
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !13740
  %arrayidx35 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !13740
  %34 = load i8, i8* %arrayidx35, align 1, !dbg !13740
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !13740
  %arrayidx36 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !13740
  %36 = load i8, i8* %arrayidx36, align 1, !dbg !13740
  %call37 = call i32 @unicode_byte_type(i8 signext %34, i8 signext %36), !dbg !13740
  br label %cond.end38, !dbg !13740

cond.end38:                                       ; preds = %cond.false34, %cond.true28
  %cond39 = phi i32 [ %conv33, %cond.true28 ], [ %call37, %cond.false34 ], !dbg !13742
  switch i32 %cond39, label %sw.default43 [
    i32 25, label %sw.bb40
    i32 18, label %sw.bb41
  ], !dbg !13744

sw.bb40:                                          ; preds = %cond.end38
  br label %sw.epilog44, !dbg !13745

sw.bb41:                                          ; preds = %cond.end38
  %37 = load i8*, i8** %ptr.addr, align 8, !dbg !13747
  %add.ptr42 = getelementptr inbounds i8, i8* %37, i64 2, !dbg !13748
  %38 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13749
  store i8* %add.ptr42, i8** %38, align 8, !dbg !13750
  store i32 10, i32* %retval, align 4, !dbg !13751
  br label %return, !dbg !13751

sw.default43:                                     ; preds = %cond.end38
  %39 = load i8*, i8** %ptr.addr, align 8, !dbg !13752
  %40 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13753
  store i8* %39, i8** %40, align 8, !dbg !13754
  store i32 0, i32* %retval, align 4, !dbg !13755
  br label %return, !dbg !13755

sw.epilog44:                                      ; preds = %sw.bb40
  br label %for.inc, !dbg !13756

for.inc:                                          ; preds = %sw.epilog44
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !13757
  %add.ptr45 = getelementptr inbounds i8, i8* %41, i64 2, !dbg !13757
  store i8* %add.ptr45, i8** %ptr.addr, align 8, !dbg !13757
  br label %for.cond, !dbg !13759

for.end:                                          ; preds = %for.cond
  br label %if.end46, !dbg !13760

if.end46:                                         ; preds = %for.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !13761
  br label %return, !dbg !13761

return:                                           ; preds = %if.end46, %sw.default43, %sw.bb41, %sw.default, %if.then7
  %42 = load i32, i32* %retval, align 4, !dbg !13762
  ret i32 %42, !dbg !13762
}

; Function Attrs: nounwind uwtable
define internal i32 @big2_scanHexCharRef(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %nextTokPtr) #0 !dbg !357 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !13763, metadata !444), !dbg !13764
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13765, metadata !444), !dbg !13766
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !13767, metadata !444), !dbg !13768
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !13769, metadata !444), !dbg !13770
  %0 = load i8*, i8** %end.addr, align 8, !dbg !13771
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !13771
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !13771
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !13771
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13771
  %cmp = icmp sge i64 %sub.ptr.sub, 2, !dbg !13771
  br i1 %cmp, label %if.then, label %if.end, !dbg !13773

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !13774
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !13774
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13774
  %conv = sext i8 %3 to i32, !dbg !13774
  %cmp1 = icmp eq i32 %conv, 0, !dbg !13774
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13774

cond.true:                                        ; preds = %if.then
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !13776
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13776
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !13776
  %idxprom = zext i8 %5 to i64, !dbg !13776
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13776
  %7 = bitcast %struct.encoding* %6 to %struct.normal_encoding*, !dbg !13776
  %type = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %7, i32 0, i32 1, !dbg !13776
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %type, i64 0, i64 %idxprom, !dbg !13776
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !13776
  %conv5 = zext i8 %8 to i32, !dbg !13776
  br label %cond.end, !dbg !13776

cond.false:                                       ; preds = %if.then
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !13778
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !13778
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !13778
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !13778
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !13778
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !13778
  %call = call i32 @unicode_byte_type(i8 signext %10, i8 signext %12), !dbg !13778
  br label %cond.end, !dbg !13778

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %call, %cond.false ], !dbg !13780
  switch i32 %cond, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
  ], !dbg !13782

sw.bb:                                            ; preds = %cond.end, %cond.end
  br label %sw.epilog, !dbg !13783

sw.default:                                       ; preds = %cond.end
  %13 = load i8*, i8** %ptr.addr, align 8, !dbg !13785
  %14 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13786
  store i8* %13, i8** %14, align 8, !dbg !13787
  store i32 0, i32* %retval, align 4, !dbg !13788
  br label %return, !dbg !13788

sw.epilog:                                        ; preds = %sw.bb
  %15 = load i8*, i8** %ptr.addr, align 8, !dbg !13789
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 2, !dbg !13789
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !13789
  br label %for.cond, !dbg !13791

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %16 = load i8*, i8** %end.addr, align 8, !dbg !13792
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !13792
  %sub.ptr.lhs.cast8 = ptrtoint i8* %16 to i64, !dbg !13792
  %sub.ptr.rhs.cast9 = ptrtoint i8* %17 to i64, !dbg !13792
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9, !dbg !13792
  %cmp11 = icmp sge i64 %sub.ptr.sub10, 2, !dbg !13792
  br i1 %cmp11, label %for.body, label %for.end, !dbg !13795

for.body:                                         ; preds = %for.cond
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !13796
  %arrayidx13 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !13796
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !13796
  %conv14 = sext i8 %19 to i32, !dbg !13796
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !13796
  br i1 %cmp15, label %cond.true17, label %cond.false23, !dbg !13796

cond.true17:                                      ; preds = %for.body
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !13798
  %arrayidx18 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !13798
  %21 = load i8, i8* %arrayidx18, align 1, !dbg !13798
  %idxprom19 = zext i8 %21 to i64, !dbg !13798
  %22 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13798
  %23 = bitcast %struct.encoding* %22 to %struct.normal_encoding*, !dbg !13798
  %type20 = getelementptr inbounds %struct.normal_encoding, %struct.normal_encoding* %23, i32 0, i32 1, !dbg !13798
  %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* %type20, i64 0, i64 %idxprom19, !dbg !13798
  %24 = load i8, i8* %arrayidx21, align 1, !dbg !13798
  %conv22 = zext i8 %24 to i32, !dbg !13798
  br label %cond.end27, !dbg !13798

cond.false23:                                     ; preds = %for.body
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !13800
  %arrayidx24 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !13800
  %26 = load i8, i8* %arrayidx24, align 1, !dbg !13800
  %27 = load i8*, i8** %ptr.addr, align 8, !dbg !13800
  %arrayidx25 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !13800
  %28 = load i8, i8* %arrayidx25, align 1, !dbg !13800
  %call26 = call i32 @unicode_byte_type(i8 signext %26, i8 signext %28), !dbg !13800
  br label %cond.end27, !dbg !13800

cond.end27:                                       ; preds = %cond.false23, %cond.true17
  %cond28 = phi i32 [ %conv22, %cond.true17 ], [ %call26, %cond.false23 ], !dbg !13802
  switch i32 %cond28, label %sw.default32 [
    i32 25, label %sw.bb29
    i32 24, label %sw.bb29
    i32 18, label %sw.bb30
  ], !dbg !13804

sw.bb29:                                          ; preds = %cond.end27, %cond.end27
  br label %sw.epilog33, !dbg !13805

sw.bb30:                                          ; preds = %cond.end27
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !13807
  %add.ptr31 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !13808
  %30 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13809
  store i8* %add.ptr31, i8** %30, align 8, !dbg !13810
  store i32 10, i32* %retval, align 4, !dbg !13811
  br label %return, !dbg !13811

sw.default32:                                     ; preds = %cond.end27
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !13812
  %32 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13813
  store i8* %31, i8** %32, align 8, !dbg !13814
  store i32 0, i32* %retval, align 4, !dbg !13815
  br label %return, !dbg !13815

sw.epilog33:                                      ; preds = %sw.bb29
  br label %for.inc, !dbg !13816

for.inc:                                          ; preds = %sw.epilog33
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !13817
  %add.ptr34 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !13817
  store i8* %add.ptr34, i8** %ptr.addr, align 8, !dbg !13817
  br label %for.cond, !dbg !13819

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !13820

if.end:                                           ; preds = %for.end, %entry
  store i32 -1, i32* %retval, align 4, !dbg !13821
  br label %return, !dbg !13821

return:                                           ; preds = %if.end, %sw.default32, %sw.bb30, %sw.default
  %34 = load i32, i32* %retval, align 4, !dbg !13822
  ret i32 %34, !dbg !13822
}

; Function Attrs: nounwind uwtable
define internal i32 @parsePseudoAttribute(%struct.encoding* %enc, i8* %ptr, i8* %end, i8** %namePtr, i8** %nameEndPtr, i8** %valPtr, i8** %nextTokPtr) #0 !dbg !379 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %namePtr.addr = alloca i8**, align 8
  %nameEndPtr.addr = alloca i8**, align 8
  %valPtr.addr = alloca i8**, align 8
  %nextTokPtr.addr = alloca i8**, align 8
  %c = alloca i32, align 4
  %open = alloca i8, align 1
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !13823, metadata !444), !dbg !13824
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13825, metadata !444), !dbg !13826
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !13827, metadata !444), !dbg !13828
  store i8** %namePtr, i8*** %namePtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %namePtr.addr, metadata !13829, metadata !444), !dbg !13830
  store i8** %nameEndPtr, i8*** %nameEndPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nameEndPtr.addr, metadata !13831, metadata !444), !dbg !13832
  store i8** %valPtr, i8*** %valPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %valPtr.addr, metadata !13833, metadata !444), !dbg !13834
  store i8** %nextTokPtr, i8*** %nextTokPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextTokPtr.addr, metadata !13835, metadata !444), !dbg !13836
  call void @llvm.dbg.declare(metadata i32* %c, metadata !13837, metadata !444), !dbg !13838
  call void @llvm.dbg.declare(metadata i8* %open, metadata !13839, metadata !444), !dbg !13840
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !13841
  %1 = load i8*, i8** %end.addr, align 8, !dbg !13843
  %cmp = icmp eq i8* %0, %1, !dbg !13844
  br i1 %cmp, label %if.then, label %if.end, !dbg !13845

if.then:                                          ; preds = %entry
  %2 = load i8**, i8*** %namePtr.addr, align 8, !dbg !13846
  store i8* null, i8** %2, align 8, !dbg !13848
  store i32 1, i32* %retval, align 4, !dbg !13849
  br label %return, !dbg !13849

if.end:                                           ; preds = %entry
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13850
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !13852
  %5 = load i8*, i8** %end.addr, align 8, !dbg !13853
  %call = call i32 @toAscii(%struct.encoding* %3, i8* %4, i8* %5), !dbg !13854
  %call1 = call i32 @isSpace(i32 %call), !dbg !13855
  %tobool = icmp ne i32 %call1, 0, !dbg !13857
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !13858

if.then2:                                         ; preds = %if.end
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !13859
  %7 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13861
  store i8* %6, i8** %7, align 8, !dbg !13862
  store i32 0, i32* %retval, align 4, !dbg !13863
  br label %return, !dbg !13863

if.end3:                                          ; preds = %if.end
  br label %do.body, !dbg !13864

do.body:                                          ; preds = %do.cond, %if.end3
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13865
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %8, i32 0, i32 13, !dbg !13867
  %9 = load i32, i32* %minBytesPerChar, align 8, !dbg !13867
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !13868
  %idx.ext = sext i32 %9 to i64, !dbg !13868
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !13868
  store i8* %add.ptr, i8** %ptr.addr, align 8, !dbg !13868
  br label %do.cond, !dbg !13869

do.cond:                                          ; preds = %do.body
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13870
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !13872
  %13 = load i8*, i8** %end.addr, align 8, !dbg !13873
  %call4 = call i32 @toAscii(%struct.encoding* %11, i8* %12, i8* %13), !dbg !13874
  %call5 = call i32 @isSpace(i32 %call4), !dbg !13875
  %tobool6 = icmp ne i32 %call5, 0, !dbg !13877
  br i1 %tobool6, label %do.body, label %do.end, !dbg !13877

do.end:                                           ; preds = %do.cond
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !13878
  %15 = load i8*, i8** %end.addr, align 8, !dbg !13880
  %cmp7 = icmp eq i8* %14, %15, !dbg !13881
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !13882

if.then8:                                         ; preds = %do.end
  %16 = load i8**, i8*** %namePtr.addr, align 8, !dbg !13883
  store i8* null, i8** %16, align 8, !dbg !13885
  store i32 1, i32* %retval, align 4, !dbg !13886
  br label %return, !dbg !13886

if.end9:                                          ; preds = %do.end
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !13887
  %18 = load i8**, i8*** %namePtr.addr, align 8, !dbg !13888
  store i8* %17, i8** %18, align 8, !dbg !13889
  br label %for.cond, !dbg !13890

for.cond:                                         ; preds = %if.end32, %if.end9
  %19 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13891
  %20 = load i8*, i8** %ptr.addr, align 8, !dbg !13895
  %21 = load i8*, i8** %end.addr, align 8, !dbg !13896
  %call10 = call i32 @toAscii(%struct.encoding* %19, i8* %20, i8* %21), !dbg !13897
  store i32 %call10, i32* %c, align 4, !dbg !13898
  %22 = load i32, i32* %c, align 4, !dbg !13899
  %cmp11 = icmp eq i32 %22, -1, !dbg !13901
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13902

if.then12:                                        ; preds = %for.cond
  %23 = load i8*, i8** %ptr.addr, align 8, !dbg !13903
  %24 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13905
  store i8* %23, i8** %24, align 8, !dbg !13906
  store i32 0, i32* %retval, align 4, !dbg !13907
  br label %return, !dbg !13907

if.end13:                                         ; preds = %for.cond
  %25 = load i32, i32* %c, align 4, !dbg !13908
  %cmp14 = icmp eq i32 %25, 61, !dbg !13910
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !13911

if.then15:                                        ; preds = %if.end13
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !13912
  %27 = load i8**, i8*** %nameEndPtr.addr, align 8, !dbg !13914
  store i8* %26, i8** %27, align 8, !dbg !13915
  br label %for.end, !dbg !13916

if.end16:                                         ; preds = %if.end13
  %28 = load i32, i32* %c, align 4, !dbg !13917
  %call17 = call i32 @isSpace(i32 %28), !dbg !13919
  %tobool18 = icmp ne i32 %call17, 0, !dbg !13919
  br i1 %tobool18, label %if.then19, label %if.end32, !dbg !13920

if.then19:                                        ; preds = %if.end16
  %29 = load i8*, i8** %ptr.addr, align 8, !dbg !13921
  %30 = load i8**, i8*** %nameEndPtr.addr, align 8, !dbg !13923
  store i8* %29, i8** %30, align 8, !dbg !13924
  br label %do.body20, !dbg !13925

do.body20:                                        ; preds = %do.cond24, %if.then19
  %31 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13926
  %minBytesPerChar21 = getelementptr inbounds %struct.encoding, %struct.encoding* %31, i32 0, i32 13, !dbg !13928
  %32 = load i32, i32* %minBytesPerChar21, align 8, !dbg !13928
  %33 = load i8*, i8** %ptr.addr, align 8, !dbg !13929
  %idx.ext22 = sext i32 %32 to i64, !dbg !13929
  %add.ptr23 = getelementptr inbounds i8, i8* %33, i64 %idx.ext22, !dbg !13929
  store i8* %add.ptr23, i8** %ptr.addr, align 8, !dbg !13929
  br label %do.cond24, !dbg !13930

do.cond24:                                        ; preds = %do.body20
  %34 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13931
  %35 = load i8*, i8** %ptr.addr, align 8, !dbg !13933
  %36 = load i8*, i8** %end.addr, align 8, !dbg !13934
  %call25 = call i32 @toAscii(%struct.encoding* %34, i8* %35, i8* %36), !dbg !13935
  store i32 %call25, i32* %c, align 4, !dbg !13936
  %call26 = call i32 @isSpace(i32 %call25), !dbg !13937
  %tobool27 = icmp ne i32 %call26, 0, !dbg !13939
  br i1 %tobool27, label %do.body20, label %do.end28, !dbg !13939

do.end28:                                         ; preds = %do.cond24
  %37 = load i32, i32* %c, align 4, !dbg !13940
  %cmp29 = icmp ne i32 %37, 61, !dbg !13942
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !13943

if.then30:                                        ; preds = %do.end28
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !13944
  %39 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13946
  store i8* %38, i8** %39, align 8, !dbg !13947
  store i32 0, i32* %retval, align 4, !dbg !13948
  br label %return, !dbg !13948

if.end31:                                         ; preds = %do.end28
  br label %for.end, !dbg !13949

if.end32:                                         ; preds = %if.end16
  %40 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13950
  %minBytesPerChar33 = getelementptr inbounds %struct.encoding, %struct.encoding* %40, i32 0, i32 13, !dbg !13951
  %41 = load i32, i32* %minBytesPerChar33, align 8, !dbg !13951
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !13952
  %idx.ext34 = sext i32 %41 to i64, !dbg !13952
  %add.ptr35 = getelementptr inbounds i8, i8* %42, i64 %idx.ext34, !dbg !13952
  store i8* %add.ptr35, i8** %ptr.addr, align 8, !dbg !13952
  br label %for.cond, !dbg !13953

for.end:                                          ; preds = %if.end31, %if.then15
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !13955
  %44 = load i8**, i8*** %namePtr.addr, align 8, !dbg !13957
  %45 = load i8*, i8** %44, align 8, !dbg !13958
  %cmp36 = icmp eq i8* %43, %45, !dbg !13959
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !13960

if.then37:                                        ; preds = %for.end
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !13961
  %47 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13963
  store i8* %46, i8** %47, align 8, !dbg !13964
  store i32 0, i32* %retval, align 4, !dbg !13965
  br label %return, !dbg !13965

if.end38:                                         ; preds = %for.end
  %48 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13966
  %minBytesPerChar39 = getelementptr inbounds %struct.encoding, %struct.encoding* %48, i32 0, i32 13, !dbg !13967
  %49 = load i32, i32* %minBytesPerChar39, align 8, !dbg !13967
  %50 = load i8*, i8** %ptr.addr, align 8, !dbg !13968
  %idx.ext40 = sext i32 %49 to i64, !dbg !13968
  %add.ptr41 = getelementptr inbounds i8, i8* %50, i64 %idx.ext40, !dbg !13968
  store i8* %add.ptr41, i8** %ptr.addr, align 8, !dbg !13968
  %51 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13969
  %52 = load i8*, i8** %ptr.addr, align 8, !dbg !13970
  %53 = load i8*, i8** %end.addr, align 8, !dbg !13971
  %call42 = call i32 @toAscii(%struct.encoding* %51, i8* %52, i8* %53), !dbg !13972
  store i32 %call42, i32* %c, align 4, !dbg !13973
  br label %while.cond, !dbg !13974

while.cond:                                       ; preds = %while.body, %if.end38
  %54 = load i32, i32* %c, align 4, !dbg !13975
  %call43 = call i32 @isSpace(i32 %54), !dbg !13976
  %tobool44 = icmp ne i32 %call43, 0, !dbg !13977
  br i1 %tobool44, label %while.body, label %while.end, !dbg !13977

while.body:                                       ; preds = %while.cond
  %55 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13978
  %minBytesPerChar45 = getelementptr inbounds %struct.encoding, %struct.encoding* %55, i32 0, i32 13, !dbg !13980
  %56 = load i32, i32* %minBytesPerChar45, align 8, !dbg !13980
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !13981
  %idx.ext46 = sext i32 %56 to i64, !dbg !13981
  %add.ptr47 = getelementptr inbounds i8, i8* %57, i64 %idx.ext46, !dbg !13981
  store i8* %add.ptr47, i8** %ptr.addr, align 8, !dbg !13981
  %58 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !13982
  %59 = load i8*, i8** %ptr.addr, align 8, !dbg !13983
  %60 = load i8*, i8** %end.addr, align 8, !dbg !13984
  %call48 = call i32 @toAscii(%struct.encoding* %58, i8* %59, i8* %60), !dbg !13985
  store i32 %call48, i32* %c, align 4, !dbg !13986
  br label %while.cond, !dbg !13987

while.end:                                        ; preds = %while.cond
  %61 = load i32, i32* %c, align 4, !dbg !13989
  %cmp49 = icmp ne i32 %61, 34, !dbg !13991
  br i1 %cmp49, label %land.lhs.true, label %if.end52, !dbg !13992

land.lhs.true:                                    ; preds = %while.end
  %62 = load i32, i32* %c, align 4, !dbg !13993
  %cmp50 = icmp ne i32 %62, 39, !dbg !13995
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !13996

if.then51:                                        ; preds = %land.lhs.true
  %63 = load i8*, i8** %ptr.addr, align 8, !dbg !13997
  %64 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !13999
  store i8* %63, i8** %64, align 8, !dbg !14000
  store i32 0, i32* %retval, align 4, !dbg !14001
  br label %return, !dbg !14001

if.end52:                                         ; preds = %land.lhs.true, %while.end
  %65 = load i32, i32* %c, align 4, !dbg !14002
  %conv = trunc i32 %65 to i8, !dbg !14003
  store i8 %conv, i8* %open, align 1, !dbg !14004
  %66 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !14005
  %minBytesPerChar53 = getelementptr inbounds %struct.encoding, %struct.encoding* %66, i32 0, i32 13, !dbg !14006
  %67 = load i32, i32* %minBytesPerChar53, align 8, !dbg !14006
  %68 = load i8*, i8** %ptr.addr, align 8, !dbg !14007
  %idx.ext54 = sext i32 %67 to i64, !dbg !14007
  %add.ptr55 = getelementptr inbounds i8, i8* %68, i64 %idx.ext54, !dbg !14007
  store i8* %add.ptr55, i8** %ptr.addr, align 8, !dbg !14007
  %69 = load i8*, i8** %ptr.addr, align 8, !dbg !14008
  %70 = load i8**, i8*** %valPtr.addr, align 8, !dbg !14009
  store i8* %69, i8** %70, align 8, !dbg !14010
  br label %for.cond56, !dbg !14011

for.cond56:                                       ; preds = %for.inc, %if.end52
  %71 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !14012
  %72 = load i8*, i8** %ptr.addr, align 8, !dbg !14016
  %73 = load i8*, i8** %end.addr, align 8, !dbg !14017
  %call57 = call i32 @toAscii(%struct.encoding* %71, i8* %72, i8* %73), !dbg !14018
  store i32 %call57, i32* %c, align 4, !dbg !14019
  %74 = load i32, i32* %c, align 4, !dbg !14020
  %75 = load i8, i8* %open, align 1, !dbg !14022
  %conv58 = sext i8 %75 to i32, !dbg !14022
  %cmp59 = icmp eq i32 %74, %conv58, !dbg !14023
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !14024

if.then61:                                        ; preds = %for.cond56
  br label %for.end94, !dbg !14025

if.end62:                                         ; preds = %for.cond56
  %76 = load i32, i32* %c, align 4, !dbg !14026
  %cmp63 = icmp sle i32 97, %76, !dbg !14028
  br i1 %cmp63, label %land.lhs.true65, label %land.lhs.true68, !dbg !14029

land.lhs.true65:                                  ; preds = %if.end62
  %77 = load i32, i32* %c, align 4, !dbg !14030
  %cmp66 = icmp sle i32 %77, 122, !dbg !14032
  br i1 %cmp66, label %if.end90, label %land.lhs.true68, !dbg !14033

land.lhs.true68:                                  ; preds = %land.lhs.true65, %if.end62
  %78 = load i32, i32* %c, align 4, !dbg !14034
  %cmp69 = icmp sle i32 65, %78, !dbg !14035
  br i1 %cmp69, label %land.lhs.true71, label %land.lhs.true74, !dbg !14036

land.lhs.true71:                                  ; preds = %land.lhs.true68
  %79 = load i32, i32* %c, align 4, !dbg !14037
  %cmp72 = icmp sle i32 %79, 90, !dbg !14039
  br i1 %cmp72, label %if.end90, label %land.lhs.true74, !dbg !14040

land.lhs.true74:                                  ; preds = %land.lhs.true71, %land.lhs.true68
  %80 = load i32, i32* %c, align 4, !dbg !14041
  %cmp75 = icmp sle i32 48, %80, !dbg !14042
  br i1 %cmp75, label %land.lhs.true77, label %land.lhs.true80, !dbg !14043

land.lhs.true77:                                  ; preds = %land.lhs.true74
  %81 = load i32, i32* %c, align 4, !dbg !14044
  %cmp78 = icmp sle i32 %81, 57, !dbg !14045
  br i1 %cmp78, label %if.end90, label %land.lhs.true80, !dbg !14046

land.lhs.true80:                                  ; preds = %land.lhs.true77, %land.lhs.true74
  %82 = load i32, i32* %c, align 4, !dbg !14047
  %cmp81 = icmp ne i32 %82, 46, !dbg !14048
  br i1 %cmp81, label %land.lhs.true83, label %if.end90, !dbg !14049

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %83 = load i32, i32* %c, align 4, !dbg !14050
  %cmp84 = icmp ne i32 %83, 45, !dbg !14051
  br i1 %cmp84, label %land.lhs.true86, label %if.end90, !dbg !14052

land.lhs.true86:                                  ; preds = %land.lhs.true83
  %84 = load i32, i32* %c, align 4, !dbg !14053
  %cmp87 = icmp ne i32 %84, 95, !dbg !14054
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !14055

if.then89:                                        ; preds = %land.lhs.true86
  %85 = load i8*, i8** %ptr.addr, align 8, !dbg !14057
  %86 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !14059
  store i8* %85, i8** %86, align 8, !dbg !14060
  store i32 0, i32* %retval, align 4, !dbg !14061
  br label %return, !dbg !14061

if.end90:                                         ; preds = %land.lhs.true86, %land.lhs.true83, %land.lhs.true80, %land.lhs.true77, %land.lhs.true71, %land.lhs.true65
  br label %for.inc, !dbg !14062

for.inc:                                          ; preds = %if.end90
  %87 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !14063
  %minBytesPerChar91 = getelementptr inbounds %struct.encoding, %struct.encoding* %87, i32 0, i32 13, !dbg !14065
  %88 = load i32, i32* %minBytesPerChar91, align 8, !dbg !14065
  %89 = load i8*, i8** %ptr.addr, align 8, !dbg !14066
  %idx.ext92 = sext i32 %88 to i64, !dbg !14066
  %add.ptr93 = getelementptr inbounds i8, i8* %89, i64 %idx.ext92, !dbg !14066
  store i8* %add.ptr93, i8** %ptr.addr, align 8, !dbg !14066
  br label %for.cond56, !dbg !14067

for.end94:                                        ; preds = %if.then61
  %90 = load i8*, i8** %ptr.addr, align 8, !dbg !14068
  %91 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !14069
  %minBytesPerChar95 = getelementptr inbounds %struct.encoding, %struct.encoding* %91, i32 0, i32 13, !dbg !14070
  %92 = load i32, i32* %minBytesPerChar95, align 8, !dbg !14070
  %idx.ext96 = sext i32 %92 to i64, !dbg !14071
  %add.ptr97 = getelementptr inbounds i8, i8* %90, i64 %idx.ext96, !dbg !14071
  %93 = load i8**, i8*** %nextTokPtr.addr, align 8, !dbg !14072
  store i8* %add.ptr97, i8** %93, align 8, !dbg !14073
  store i32 1, i32* %retval, align 4, !dbg !14074
  br label %return, !dbg !14074

return:                                           ; preds = %for.end94, %if.then89, %if.then51, %if.then37, %if.then30, %if.then12, %if.then8, %if.then2, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !14075
  ret i32 %94, !dbg !14075
}

; Function Attrs: nounwind uwtable
define internal i32 @toAscii(%struct.encoding* %enc, i8* %ptr, i8* %end) #0 !dbg !382 {
entry:
  %retval = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %buf = alloca [1 x i8], align 1
  %p = alloca i8*, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !14076, metadata !444), !dbg !14077
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14078, metadata !444), !dbg !14079
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !14080, metadata !444), !dbg !14081
  call void @llvm.dbg.declare(metadata [1 x i8]* %buf, metadata !14082, metadata !444), !dbg !14086
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14087, metadata !444), !dbg !14088
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i32 0, i32 0, !dbg !14089
  store i8* %arraydecay, i8** %p, align 8, !dbg !14088
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !14090
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %0, i32 0, i32 11, !dbg !14090
  %1 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !14090
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !14090
  %3 = load i8*, i8** %end.addr, align 8, !dbg !14090
  %4 = load i8*, i8** %p, align 8, !dbg !14090
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !14090
  %call = call i32 %1(%struct.encoding* %2, i8** %ptr.addr, i8* %3, i8** %p, i8* %add.ptr), !dbg !14090
  %5 = load i8*, i8** %p, align 8, !dbg !14091
  %arraydecay1 = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i32 0, i32 0, !dbg !14093
  %cmp = icmp eq i8* %5, %arraydecay1, !dbg !14094
  br i1 %cmp, label %if.then, label %if.else, !dbg !14095

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14096
  br label %return, !dbg !14096

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0, !dbg !14097
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14097
  %conv = sext i8 %6 to i32, !dbg !14097
  store i32 %conv, i32* %retval, align 4, !dbg !14098
  br label %return, !dbg !14098

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !14099
  ret i32 %7, !dbg !14099
}

; Function Attrs: nounwind uwtable
define internal i32 @isSpace(i32 %c) #0 !dbg !383 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !14100, metadata !444), !dbg !14101
  %0 = load i32, i32* %c.addr, align 4, !dbg !14102
  switch i32 %0, label %sw.epilog [
    i32 32, label %sw.bb
    i32 13, label %sw.bb
    i32 10, label %sw.bb
    i32 9, label %sw.bb
  ], !dbg !14103

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !14104
  br label %return, !dbg !14104

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14106
  br label %return, !dbg !14106

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !14107
  ret i32 %1, !dbg !14107
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!440, !441}
!llvm.ident = !{!442}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !169, subprograms: !219, globals: !385)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmltok.c", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!2 = !{!3, !15, !21, !27, !67, !77, !165, !167}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !4, file: !1, line: 1290, size: 32, align: 32, elements: !11)
!4 = distinct !DISubprogram(name: "XmlUtf8Encode", scope: !1, file: !1, line: 1288, type: !5, isLocal: false, isDefinition: true, scopeLine: 1289, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !7, !8}
!7 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!9 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!10 = !{}
!11 = !{!12, !13, !14}
!12 = !DIEnumerator(name: "min2", value: 128)
!13 = !DIEnumerator(name: "min3", value: 2048)
!14 = !DIEnumerator(name: "min4", value: 65536)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1, line: 325, size: 32, align: 32, elements: !16)
!16 = !{!17, !18, !19, !20}
!17 = !DIEnumerator(name: "UTF8_cval1", value: 0)
!18 = !DIEnumerator(name: "UTF8_cval2", value: 192)
!19 = !DIEnumerator(name: "UTF8_cval3", value: 224)
!20 = !DIEnumerator(name: "UTF8_cval4", value: 240)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Convert_Result", file: !22, line: 133, size: 32, align: 32, elements: !23)
!22 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmltok.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!23 = !{!24, !25, !26}
!24 = !DIEnumerator(name: "XML_CONVERT_COMPLETED", value: 0)
!25 = !DIEnumerator(name: "XML_CONVERT_INPUT_INCOMPLETE", value: 1)
!26 = !DIEnumerator(name: "XML_CONVERT_OUTPUT_EXHAUSTED", value: 2)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 6, size: 32, align: 32, elements: !29)
!28 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmltok_impl.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!29 = !{!30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66}
!30 = !DIEnumerator(name: "BT_NONXML", value: 0)
!31 = !DIEnumerator(name: "BT_MALFORM", value: 1)
!32 = !DIEnumerator(name: "BT_LT", value: 2)
!33 = !DIEnumerator(name: "BT_AMP", value: 3)
!34 = !DIEnumerator(name: "BT_RSQB", value: 4)
!35 = !DIEnumerator(name: "BT_LEAD2", value: 5)
!36 = !DIEnumerator(name: "BT_LEAD3", value: 6)
!37 = !DIEnumerator(name: "BT_LEAD4", value: 7)
!38 = !DIEnumerator(name: "BT_TRAIL", value: 8)
!39 = !DIEnumerator(name: "BT_CR", value: 9)
!40 = !DIEnumerator(name: "BT_LF", value: 10)
!41 = !DIEnumerator(name: "BT_GT", value: 11)
!42 = !DIEnumerator(name: "BT_QUOT", value: 12)
!43 = !DIEnumerator(name: "BT_APOS", value: 13)
!44 = !DIEnumerator(name: "BT_EQUALS", value: 14)
!45 = !DIEnumerator(name: "BT_QUEST", value: 15)
!46 = !DIEnumerator(name: "BT_EXCL", value: 16)
!47 = !DIEnumerator(name: "BT_SOL", value: 17)
!48 = !DIEnumerator(name: "BT_SEMI", value: 18)
!49 = !DIEnumerator(name: "BT_NUM", value: 19)
!50 = !DIEnumerator(name: "BT_LSQB", value: 20)
!51 = !DIEnumerator(name: "BT_S", value: 21)
!52 = !DIEnumerator(name: "BT_NMSTRT", value: 22)
!53 = !DIEnumerator(name: "BT_COLON", value: 23)
!54 = !DIEnumerator(name: "BT_HEX", value: 24)
!55 = !DIEnumerator(name: "BT_DIGIT", value: 25)
!56 = !DIEnumerator(name: "BT_NAME", value: 26)
!57 = !DIEnumerator(name: "BT_MINUS", value: 27)
!58 = !DIEnumerator(name: "BT_OTHER", value: 28)
!59 = !DIEnumerator(name: "BT_NONASCII", value: 29)
!60 = !DIEnumerator(name: "BT_PERCNT", value: 30)
!61 = !DIEnumerator(name: "BT_LPAR", value: 31)
!62 = !DIEnumerator(name: "BT_RPAR", value: 32)
!63 = !DIEnumerator(name: "BT_AST", value: 33)
!64 = !DIEnumerator(name: "BT_PLUS", value: 34)
!65 = !DIEnumerator(name: "BT_COMMA", value: 35)
!66 = !DIEnumerator(name: "BT_VERBAR", value: 36)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1, line: 1526, size: 32, align: 32, elements: !68)
!68 = !{!69, !70, !71, !72, !73, !74, !75, !76}
!69 = !DIEnumerator(name: "UNKNOWN_ENC", value: -1)
!70 = !DIEnumerator(name: "ISO_8859_1_ENC", value: 0)
!71 = !DIEnumerator(name: "US_ASCII_ENC", value: 1)
!72 = !DIEnumerator(name: "UTF_8_ENC", value: 2)
!73 = !DIEnumerator(name: "UTF_16_ENC", value: 3)
!74 = !DIEnumerator(name: "UTF_16BE_ENC", value: 4)
!75 = !DIEnumerator(name: "UTF_16LE_ENC", value: 5)
!76 = !DIEnumerator(name: "NO_ENC", value: 6)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !79, file: !78, line: 1426, size: 32, align: 32, elements: !161)
!78 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmltok_impl.c", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!79 = distinct !DISubprogram(name: "normal_getAtts", scope: !78, file: !78, line: 1423, type: !80, isLocal: true, isDefinition: true, scopeLine: 1425, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!80 = !DISubroutineType(types: !81)
!81 = !{!7, !82, !93, !7, !153}
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64, align: 64)
!83 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !84)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENCODING", file: !22, line: 126, baseType: !85)
!85 = !DICompositeType(tag: DW_TAG_structure_type, name: "encoding", file: !22, line: 139, size: 1088, align: 64, elements: !86)
!86 = !{!87, !98, !102, !106, !110, !114, !118, !120, !121, !122, !135, !136, !141, !150, !151, !152}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "scanners", scope: !85, file: !22, line: 140, baseType: !88, size: 192, align: 64)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 192, align: 64, elements: !96)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCANNER", file: !22, line: 128, baseType: !90)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64, align: 64)
!91 = !DISubroutineType(types: !92)
!92 = !{!7, !82, !93, !93, !95}
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64, align: 64)
!94 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64, align: 64)
!96 = !{!97}
!97 = !DISubrange(count: 3)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "literalScanners", scope: !85, file: !22, line: 141, baseType: !99, size: 128, align: 64, offset: 192)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 128, align: 64, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 2)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "sameName", scope: !85, file: !22, line: 142, baseType: !103, size: 64, align: 64, offset: 320)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64, align: 64)
!104 = !DISubroutineType(types: !105)
!105 = !{!7, !82, !93, !93}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "nameMatchesAscii", scope: !85, file: !22, line: 145, baseType: !107, size: 64, align: 64, offset: 384)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64, align: 64)
!108 = !DISubroutineType(types: !109)
!109 = !{!7, !82, !93, !93, !93}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "nameLength", scope: !85, file: !22, line: 149, baseType: !111, size: 64, align: 64, offset: 448)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64, align: 64)
!112 = !DISubroutineType(types: !113)
!113 = !{!7, !82, !93}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "skipS", scope: !85, file: !22, line: 150, baseType: !115, size: 64, align: 64, offset: 512)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64, align: 64)
!116 = !DISubroutineType(types: !117)
!117 = !{!93, !82, !93}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "getAtts", scope: !85, file: !22, line: 151, baseType: !119, size: 64, align: 64, offset: 576)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "charRefNumber", scope: !85, file: !22, line: 155, baseType: !111, size: 64, align: 64, offset: 640)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "predefinedEntityName", scope: !85, file: !22, line: 156, baseType: !103, size: 64, align: 64, offset: 704)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "updatePosition", scope: !85, file: !22, line: 159, baseType: !123, size: 64, align: 64, offset: 768)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64, align: 64)
!124 = !DISubroutineType(types: !125)
!125 = !{null, !82, !93, !93, !126}
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64, align: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "POSITION", file: !22, line: 116, baseType: !128)
!128 = !DICompositeType(tag: DW_TAG_structure_type, name: "position", file: !22, line: 112, size: 128, align: 64, elements: !129)
!129 = !{!130, !134}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "lineNumber", scope: !128, file: !22, line: 114, baseType: !131, size: 64, align: 64)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Size", file: !132, line: 124, baseType: !133)
!132 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/expat_external.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!133 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "columnNumber", scope: !128, file: !22, line: 115, baseType: !131, size: 64, align: 64, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "isPublicId", scope: !85, file: !22, line: 163, baseType: !90, size: 64, align: 64, offset: 832)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "utf8Convert", scope: !85, file: !22, line: 167, baseType: !137, size: 64, align: 64, offset: 896)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64, align: 64)
!138 = !DISubroutineType(types: !139)
!139 = !{!21, !82, !95, !93, !140, !93}
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "utf16Convert", scope: !85, file: !22, line: 172, baseType: !142, size: 64, align: 64, offset: 960)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64, align: 64)
!143 = !DISubroutineType(types: !144)
!144 = !{!21, !82, !95, !93, !145, !148}
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64, align: 64)
!147 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64, align: 64)
!149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !147)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "minBytesPerChar", scope: !85, file: !22, line: 177, baseType: !7, size: 32, align: 32, offset: 1024)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "isUtf8", scope: !85, file: !22, line: 178, baseType: !9, size: 8, align: 8, offset: 1056)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "isUtf16", scope: !85, file: !22, line: 179, baseType: !9, size: 8, align: 8, offset: 1064)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATTRIBUTE", file: !22, line: 123, baseType: !155)
!155 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 118, size: 256, align: 64, elements: !156)
!156 = !{!157, !158, !159, !160}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !22, line: 119, baseType: !93, size: 64, align: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "valuePtr", scope: !155, file: !22, line: 120, baseType: !93, size: 64, align: 64, offset: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "valueEnd", scope: !155, file: !22, line: 121, baseType: !93, size: 64, align: 64, offset: 128)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "normalized", scope: !155, file: !22, line: 122, baseType: !9, size: 8, align: 8, offset: 192)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "other", value: 0)
!163 = !DIEnumerator(name: "inName", value: 1)
!164 = !DIEnumerator(name: "inValue", value: 2)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !166, file: !78, line: 1426, size: 32, align: 32, elements: !161)
!166 = distinct !DISubprogram(name: "little2_getAtts", scope: !78, file: !78, line: 1423, type: !80, isLocal: true, isDefinition: true, scopeLine: 1425, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !168, file: !78, line: 1426, size: 32, align: 32, elements: !161)
!168 = distinct !DISubprogram(name: "big2_getAtts", scope: !78, file: !78, line: 1423, type: !80, isLocal: true, isDefinition: true, scopeLine: 1425, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!169 = !{!170, !9, !147, !171, !7, !8, !204, !205, !131, !207, !209, !196, !211}
!170 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64, align: 64)
!172 = !DICompositeType(tag: DW_TAG_structure_type, name: "unknown_encoding", file: !1, line: 1342, size: 16128, align: 64, elements: !173)
!173 = !{!174, !191, !197, !198, !200}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "normal", scope: !172, file: !1, line: 1343, baseType: !175, size: 3712, align: 64)
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "normal_encoding", file: !1, line: 176, size: 3712, align: 64, elements: !176)
!176 = !{!177, !178, !182, !183, !184, !185, !186, !187, !188, !189, !190}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "enc", scope: !175, file: !1, line: 177, baseType: !84, size: 1088, align: 64)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !175, file: !1, line: 178, baseType: !179, size: 2048, align: 8, offset: 1088)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 2048, align: 8, elements: !180)
!180 = !{!181}
!181 = !DISubrange(count: 256)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "isName2", scope: !175, file: !1, line: 186, baseType: !111, size: 64, align: 64, offset: 3136)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "isName3", scope: !175, file: !1, line: 187, baseType: !111, size: 64, align: 64, offset: 3200)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "isName4", scope: !175, file: !1, line: 188, baseType: !111, size: 64, align: 64, offset: 3264)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "isNmstrt2", scope: !175, file: !1, line: 189, baseType: !111, size: 64, align: 64, offset: 3328)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "isNmstrt3", scope: !175, file: !1, line: 190, baseType: !111, size: 64, align: 64, offset: 3392)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "isNmstrt4", scope: !175, file: !1, line: 191, baseType: !111, size: 64, align: 64, offset: 3456)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "isInvalid2", scope: !175, file: !1, line: 192, baseType: !111, size: 64, align: 64, offset: 3520)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "isInvalid3", scope: !175, file: !1, line: 193, baseType: !111, size: 64, align: 64, offset: 3584)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "isInvalid4", scope: !175, file: !1, line: 194, baseType: !111, size: 64, align: 64, offset: 3648)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "convert", scope: !172, file: !1, line: 1344, baseType: !192, size: 64, align: 64, offset: 3712)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONVERTER", file: !22, line: 291, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DISubroutineType(types: !195)
!195 = !{!7, !196, !93}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !172, file: !1, line: 1345, baseType: !196, size: 64, align: 64, offset: 3776)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "utf16", scope: !172, file: !1, line: 1346, baseType: !199, size: 4096, align: 16, offset: 3840)
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 4096, align: 16, elements: !180)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !172, file: !1, line: 1347, baseType: !201, size: 8192, align: 8, offset: 7936)
!201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8192, align: 8, elements: !202)
!202 = !{!181, !203}
!203 = !DISubrange(count: 4)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64, align: 64)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64, align: 64)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !172)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "INIT_ENCODING", file: !22, line: 270, baseType: !214)
!214 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 267, size: 1152, align: 64, elements: !215)
!215 = !{!216, !217}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "initEnc", scope: !214, file: !22, line: 268, baseType: !84, size: 1088, align: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "encPtr", scope: !214, file: !22, line: 269, baseType: !218, size: 64, align: 64, offset: 1088)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!219 = !{!220, !4, !223, !226, !229, !234, !238, !239, !243, !246, !247, !250, !251, !252, !253, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !79, !273, !274, !275, !276, !277, !278, !279, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !166, !323, !324, !325, !326, !327, !328, !329, !332, !335, !336, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !168, !365, !366, !367, !368, !369, !370, !371, !372, !373, !379, !382, !383, !384}
!220 = distinct !DISubprogram(name: "align_limit_to_full_utf8_characters", scope: !1, file: !1, line: 333, type: !221, isLocal: false, isDefinition: true, scopeLine: 334, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!221 = !DISubroutineType(types: !222)
!222 = !{null, !93, !95}
!223 = distinct !DISubprogram(name: "XmlUtf16Encode", scope: !1, file: !1, line: 1325, type: !224, isLocal: false, isDefinition: true, scopeLine: 1326, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!224 = !DISubroutineType(types: !225)
!225 = !{!7, !7, !146}
!226 = distinct !DISubprogram(name: "XmlSizeOfUnknownEncoding", scope: !1, file: !1, line: 1353, type: !227, isLocal: false, isDefinition: true, scopeLine: 1354, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!227 = !DISubroutineType(types: !228)
!228 = !{!7}
!229 = distinct !DISubprogram(name: "XmlInitUnknownEncoding", scope: !1, file: !1, line: 1446, type: !230, isLocal: false, isDefinition: true, scopeLine: 1450, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!230 = !DISubroutineType(types: !231)
!231 = !{!232, !196, !233, !192, !196}
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!234 = distinct !DISubprogram(name: "XmlGetUtf8InternalEncoding", scope: !235, file: !235, line: 9, type: !236, isLocal: false, isDefinition: true, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!235 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmltok_ns.c", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!236 = !DISubroutineType(types: !237)
!237 = !{!82}
!238 = distinct !DISubprogram(name: "XmlGetUtf16InternalEncoding", scope: !235, file: !235, line: 15, type: !236, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!239 = distinct !DISubprogram(name: "XmlInitEncoding", scope: !235, file: !235, line: 56, type: !240, isLocal: false, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!240 = !DISubroutineType(types: !241)
!241 = !{!7, !242, !218, !93}
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64, align: 64)
!243 = distinct !DISubprogram(name: "XmlParseXmlDecl", scope: !235, file: !235, line: 91, type: !244, isLocal: false, isDefinition: true, scopeLine: 101, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!244 = !DISubroutineType(types: !245)
!245 = !{!7, !7, !82, !93, !93, !95, !95, !95, !95, !218, !233}
!246 = distinct !DISubprogram(name: "normal_prologTok", scope: !78, file: !78, line: 967, type: !91, isLocal: true, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!247 = distinct !DISubprogram(name: "normal_scanLit", scope: !78, file: !78, line: 935, type: !248, isLocal: true, isDefinition: true, scopeLine: 938, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!248 = !DISubroutineType(types: !249)
!249 = !{!7, !7, !82, !93, !93, !95}
!250 = distinct !DISubprogram(name: "normal_scanDecl", scope: !78, file: !78, line: 149, type: !91, isLocal: true, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!251 = distinct !DISubprogram(name: "normal_scanComment", scope: !78, file: !78, line: 111, type: !91, isLocal: true, isDefinition: true, scopeLine: 113, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!252 = distinct !DISubprogram(name: "normal_scanPi", scope: !78, file: !78, line: 239, type: !91, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!253 = distinct !DISubprogram(name: "normal_checkPiTarget", scope: !78, file: !78, line: 194, type: !254, isLocal: true, isDefinition: true, scopeLine: 196, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!254 = !DISubroutineType(types: !255)
!255 = !{!7, !82, !93, !93, !233}
!256 = distinct !DISubprogram(name: "normal_scanPercent", scope: !78, file: !78, line: 881, type: !91, isLocal: true, isDefinition: true, scopeLine: 883, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!257 = distinct !DISubprogram(name: "normal_scanPoundName", scope: !78, file: !78, line: 909, type: !91, isLocal: true, isDefinition: true, scopeLine: 911, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!258 = distinct !DISubprogram(name: "normal_contentTok", scope: !78, file: !78, line: 782, type: !91, isLocal: true, isDefinition: true, scopeLine: 784, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!259 = distinct !DISubprogram(name: "normal_scanLt", scope: !78, file: !78, line: 685, type: !91, isLocal: true, isDefinition: true, scopeLine: 687, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!260 = distinct !DISubprogram(name: "normal_scanCdataSection", scope: !78, file: !78, line: 298, type: !91, isLocal: true, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!261 = distinct !DISubprogram(name: "normal_scanEndTag", scope: !78, file: !78, line: 392, type: !91, isLocal: true, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!262 = distinct !DISubprogram(name: "normal_scanAtts", scope: !78, file: !78, line: 533, type: !91, isLocal: true, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!263 = distinct !DISubprogram(name: "normal_scanRef", scope: !78, file: !78, line: 504, type: !91, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!264 = distinct !DISubprogram(name: "normal_scanCharRef", scope: !78, file: !78, line: 472, type: !91, isLocal: true, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!265 = distinct !DISubprogram(name: "normal_scanHexCharRef", scope: !78, file: !78, line: 440, type: !91, isLocal: true, isDefinition: true, scopeLine: 442, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!266 = distinct !DISubprogram(name: "normal_cdataSectionTok", scope: !78, file: !78, line: 317, type: !91, isLocal: true, isDefinition: true, scopeLine: 319, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!267 = distinct !DISubprogram(name: "normal_attributeValueTok", scope: !78, file: !78, line: 1195, type: !91, isLocal: true, isDefinition: true, scopeLine: 1197, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!268 = distinct !DISubprogram(name: "normal_entityValueTok", scope: !78, file: !78, line: 1253, type: !91, isLocal: true, isDefinition: true, scopeLine: 1255, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!269 = distinct !DISubprogram(name: "normal_sameName", scope: !78, file: !78, line: 1614, type: !104, isLocal: true, isDefinition: true, scopeLine: 1615, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!270 = distinct !DISubprogram(name: "normal_nameMatchesAscii", scope: !78, file: !78, line: 1678, type: !108, isLocal: true, isDefinition: true, scopeLine: 1680, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!271 = distinct !DISubprogram(name: "normal_nameLength", scope: !78, file: !78, line: 1691, type: !112, isLocal: true, isDefinition: true, scopeLine: 1692, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!272 = distinct !DISubprogram(name: "normal_skipS", scope: !78, file: !78, line: 1718, type: !116, isLocal: true, isDefinition: true, scopeLine: 1719, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!273 = distinct !DISubprogram(name: "normal_charRefNumber", scope: !78, file: !78, line: 1516, type: !112, isLocal: true, isDefinition: true, scopeLine: 1517, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!274 = distinct !DISubprogram(name: "normal_predefinedEntityName", scope: !78, file: !78, line: 1560, type: !104, isLocal: true, isDefinition: true, scopeLine: 1562, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!275 = distinct !DISubprogram(name: "normal_updatePosition", scope: !78, file: !78, line: 1734, type: !124, isLocal: true, isDefinition: true, scopeLine: 1738, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!276 = distinct !DISubprogram(name: "normal_isPublicId", scope: !78, file: !78, line: 1363, type: !91, isLocal: true, isDefinition: true, scopeLine: 1365, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!277 = distinct !DISubprogram(name: "latin1_toUtf8", scope: !1, file: !1, line: 497, type: !138, isLocal: true, isDefinition: true, scopeLine: 500, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!278 = distinct !DISubprogram(name: "latin1_toUtf16", scope: !1, file: !1, line: 522, type: !143, isLocal: true, isDefinition: true, scopeLine: 525, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!279 = distinct !DISubprogram(name: "checkCharRefNumber", scope: !1, file: !1, line: 1269, type: !280, isLocal: true, isDefinition: true, scopeLine: 1270, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!280 = !DISubroutineType(types: !281)
!281 = !{!7, !7}
!282 = distinct !DISubprogram(name: "unknown_isName", scope: !1, file: !1, line: 1359, type: !112, isLocal: true, isDefinition: true, scopeLine: 1360, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!283 = distinct !DISubprogram(name: "unknown_isNmstrt", scope: !1, file: !1, line: 1369, type: !112, isLocal: true, isDefinition: true, scopeLine: 1370, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!284 = distinct !DISubprogram(name: "unknown_isInvalid", scope: !1, file: !1, line: 1379, type: !112, isLocal: true, isDefinition: true, scopeLine: 1380, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!285 = distinct !DISubprogram(name: "unknown_toUtf8", scope: !1, file: !1, line: 1387, type: !138, isLocal: true, isDefinition: true, scopeLine: 1390, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!286 = distinct !DISubprogram(name: "unknown_toUtf16", scope: !1, file: !1, line: 1421, type: !143, isLocal: true, isDefinition: true, scopeLine: 1424, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!287 = distinct !DISubprogram(name: "utf8_toUtf8", scope: !1, file: !1, line: 368, type: !138, isLocal: true, isDefinition: true, scopeLine: 371, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!288 = distinct !DISubprogram(name: "utf8_toUtf16", scope: !1, file: !1, line: 393, type: !143, isLocal: true, isDefinition: true, scopeLine: 396, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!289 = distinct !DISubprogram(name: "utf8_isName2", scope: !1, file: !1, line: 131, type: !112, isLocal: true, isDefinition: true, scopeLine: 132, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!290 = distinct !DISubprogram(name: "utf8_isName3", scope: !1, file: !1, line: 137, type: !112, isLocal: true, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!291 = distinct !DISubprogram(name: "isNever", scope: !1, file: !1, line: 125, type: !112, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!292 = distinct !DISubprogram(name: "utf8_isNmstrt2", scope: !1, file: !1, line: 145, type: !112, isLocal: true, isDefinition: true, scopeLine: 146, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!293 = distinct !DISubprogram(name: "utf8_isNmstrt3", scope: !1, file: !1, line: 151, type: !112, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!294 = distinct !DISubprogram(name: "utf8_isInvalid2", scope: !1, file: !1, line: 159, type: !112, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!295 = distinct !DISubprogram(name: "utf8_isInvalid3", scope: !1, file: !1, line: 165, type: !112, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!296 = distinct !DISubprogram(name: "utf8_isInvalid4", scope: !1, file: !1, line: 171, type: !112, isLocal: true, isDefinition: true, scopeLine: 172, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!297 = distinct !DISubprogram(name: "little2_prologTok", scope: !78, file: !78, line: 967, type: !91, isLocal: true, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!298 = distinct !DISubprogram(name: "unicode_byte_type", scope: !1, file: !1, line: 598, type: !299, isLocal: true, isDefinition: true, scopeLine: 599, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!299 = !DISubroutineType(types: !300)
!300 = !{!7, !9, !9}
!301 = distinct !DISubprogram(name: "little2_scanLit", scope: !78, file: !78, line: 935, type: !248, isLocal: true, isDefinition: true, scopeLine: 938, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!302 = distinct !DISubprogram(name: "little2_scanDecl", scope: !78, file: !78, line: 149, type: !91, isLocal: true, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!303 = distinct !DISubprogram(name: "little2_scanComment", scope: !78, file: !78, line: 111, type: !91, isLocal: true, isDefinition: true, scopeLine: 113, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!304 = distinct !DISubprogram(name: "little2_scanPi", scope: !78, file: !78, line: 239, type: !91, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!305 = distinct !DISubprogram(name: "little2_checkPiTarget", scope: !78, file: !78, line: 194, type: !254, isLocal: true, isDefinition: true, scopeLine: 196, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!306 = distinct !DISubprogram(name: "little2_scanPercent", scope: !78, file: !78, line: 881, type: !91, isLocal: true, isDefinition: true, scopeLine: 883, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!307 = distinct !DISubprogram(name: "little2_scanPoundName", scope: !78, file: !78, line: 909, type: !91, isLocal: true, isDefinition: true, scopeLine: 911, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!308 = distinct !DISubprogram(name: "little2_contentTok", scope: !78, file: !78, line: 782, type: !91, isLocal: true, isDefinition: true, scopeLine: 784, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!309 = distinct !DISubprogram(name: "little2_scanLt", scope: !78, file: !78, line: 685, type: !91, isLocal: true, isDefinition: true, scopeLine: 687, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!310 = distinct !DISubprogram(name: "little2_scanCdataSection", scope: !78, file: !78, line: 298, type: !91, isLocal: true, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!311 = distinct !DISubprogram(name: "little2_scanEndTag", scope: !78, file: !78, line: 392, type: !91, isLocal: true, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!312 = distinct !DISubprogram(name: "little2_scanAtts", scope: !78, file: !78, line: 533, type: !91, isLocal: true, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!313 = distinct !DISubprogram(name: "little2_scanRef", scope: !78, file: !78, line: 504, type: !91, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!314 = distinct !DISubprogram(name: "little2_scanCharRef", scope: !78, file: !78, line: 472, type: !91, isLocal: true, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!315 = distinct !DISubprogram(name: "little2_scanHexCharRef", scope: !78, file: !78, line: 440, type: !91, isLocal: true, isDefinition: true, scopeLine: 442, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!316 = distinct !DISubprogram(name: "little2_cdataSectionTok", scope: !78, file: !78, line: 317, type: !91, isLocal: true, isDefinition: true, scopeLine: 319, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!317 = distinct !DISubprogram(name: "little2_attributeValueTok", scope: !78, file: !78, line: 1195, type: !91, isLocal: true, isDefinition: true, scopeLine: 1197, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!318 = distinct !DISubprogram(name: "little2_entityValueTok", scope: !78, file: !78, line: 1253, type: !91, isLocal: true, isDefinition: true, scopeLine: 1255, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!319 = distinct !DISubprogram(name: "little2_sameName", scope: !78, file: !78, line: 1614, type: !104, isLocal: true, isDefinition: true, scopeLine: 1615, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!320 = distinct !DISubprogram(name: "little2_nameMatchesAscii", scope: !78, file: !78, line: 1678, type: !108, isLocal: true, isDefinition: true, scopeLine: 1680, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!321 = distinct !DISubprogram(name: "little2_nameLength", scope: !78, file: !78, line: 1691, type: !112, isLocal: true, isDefinition: true, scopeLine: 1692, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!322 = distinct !DISubprogram(name: "little2_skipS", scope: !78, file: !78, line: 1718, type: !116, isLocal: true, isDefinition: true, scopeLine: 1719, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!323 = distinct !DISubprogram(name: "little2_charRefNumber", scope: !78, file: !78, line: 1516, type: !112, isLocal: true, isDefinition: true, scopeLine: 1517, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!324 = distinct !DISubprogram(name: "little2_predefinedEntityName", scope: !78, file: !78, line: 1560, type: !104, isLocal: true, isDefinition: true, scopeLine: 1562, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!325 = distinct !DISubprogram(name: "little2_updatePosition", scope: !78, file: !78, line: 1734, type: !124, isLocal: true, isDefinition: true, scopeLine: 1738, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!326 = distinct !DISubprogram(name: "little2_isPublicId", scope: !78, file: !78, line: 1363, type: !91, isLocal: true, isDefinition: true, scopeLine: 1365, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!327 = distinct !DISubprogram(name: "little2_toUtf8", scope: !1, file: !1, line: 715, type: !138, isLocal: true, isDefinition: true, scopeLine: 715, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!328 = distinct !DISubprogram(name: "little2_toUtf16", scope: !1, file: !1, line: 716, type: !143, isLocal: true, isDefinition: true, scopeLine: 716, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!329 = distinct !DISubprogram(name: "getEncodingIndex", scope: !1, file: !1, line: 1562, type: !330, isLocal: true, isDefinition: true, scopeLine: 1563, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!330 = !DISubroutineType(types: !331)
!331 = !{!7, !93}
!332 = distinct !DISubprogram(name: "streqci", scope: !1, file: !1, line: 1018, type: !333, isLocal: true, isDefinition: true, scopeLine: 1019, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!333 = !DISubroutineType(types: !334)
!334 = !{!7, !93, !93}
!335 = distinct !DISubprogram(name: "initScanProlog", scope: !235, file: !235, line: 40, type: !91, isLocal: true, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!336 = distinct !DISubprogram(name: "initScan", scope: !1, file: !1, line: 1597, type: !337, isLocal: true, isDefinition: true, scopeLine: 1603, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!337 = !DISubroutineType(types: !338)
!338 = !{!7, !339, !211, !7, !93, !93, !95}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64, align: 64)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!341 = distinct !DISubprogram(name: "ascii_toUtf8", scope: !1, file: !1, line: 560, type: !138, isLocal: true, isDefinition: true, scopeLine: 563, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!342 = distinct !DISubprogram(name: "big2_prologTok", scope: !78, file: !78, line: 967, type: !91, isLocal: true, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!343 = distinct !DISubprogram(name: "big2_scanLit", scope: !78, file: !78, line: 935, type: !248, isLocal: true, isDefinition: true, scopeLine: 938, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!344 = distinct !DISubprogram(name: "big2_scanDecl", scope: !78, file: !78, line: 149, type: !91, isLocal: true, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!345 = distinct !DISubprogram(name: "big2_scanComment", scope: !78, file: !78, line: 111, type: !91, isLocal: true, isDefinition: true, scopeLine: 113, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!346 = distinct !DISubprogram(name: "big2_scanPi", scope: !78, file: !78, line: 239, type: !91, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!347 = distinct !DISubprogram(name: "big2_checkPiTarget", scope: !78, file: !78, line: 194, type: !254, isLocal: true, isDefinition: true, scopeLine: 196, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!348 = distinct !DISubprogram(name: "big2_scanPercent", scope: !78, file: !78, line: 881, type: !91, isLocal: true, isDefinition: true, scopeLine: 883, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!349 = distinct !DISubprogram(name: "big2_scanPoundName", scope: !78, file: !78, line: 909, type: !91, isLocal: true, isDefinition: true, scopeLine: 911, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!350 = distinct !DISubprogram(name: "big2_contentTok", scope: !78, file: !78, line: 782, type: !91, isLocal: true, isDefinition: true, scopeLine: 784, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!351 = distinct !DISubprogram(name: "big2_scanLt", scope: !78, file: !78, line: 685, type: !91, isLocal: true, isDefinition: true, scopeLine: 687, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!352 = distinct !DISubprogram(name: "big2_scanCdataSection", scope: !78, file: !78, line: 298, type: !91, isLocal: true, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!353 = distinct !DISubprogram(name: "big2_scanEndTag", scope: !78, file: !78, line: 392, type: !91, isLocal: true, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!354 = distinct !DISubprogram(name: "big2_scanAtts", scope: !78, file: !78, line: 533, type: !91, isLocal: true, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!355 = distinct !DISubprogram(name: "big2_scanRef", scope: !78, file: !78, line: 504, type: !91, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!356 = distinct !DISubprogram(name: "big2_scanCharRef", scope: !78, file: !78, line: 472, type: !91, isLocal: true, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!357 = distinct !DISubprogram(name: "big2_scanHexCharRef", scope: !78, file: !78, line: 440, type: !91, isLocal: true, isDefinition: true, scopeLine: 442, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!358 = distinct !DISubprogram(name: "big2_cdataSectionTok", scope: !78, file: !78, line: 317, type: !91, isLocal: true, isDefinition: true, scopeLine: 319, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!359 = distinct !DISubprogram(name: "big2_attributeValueTok", scope: !78, file: !78, line: 1195, type: !91, isLocal: true, isDefinition: true, scopeLine: 1197, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!360 = distinct !DISubprogram(name: "big2_entityValueTok", scope: !78, file: !78, line: 1253, type: !91, isLocal: true, isDefinition: true, scopeLine: 1255, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!361 = distinct !DISubprogram(name: "big2_sameName", scope: !78, file: !78, line: 1614, type: !104, isLocal: true, isDefinition: true, scopeLine: 1615, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!362 = distinct !DISubprogram(name: "big2_nameMatchesAscii", scope: !78, file: !78, line: 1678, type: !108, isLocal: true, isDefinition: true, scopeLine: 1680, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!363 = distinct !DISubprogram(name: "big2_nameLength", scope: !78, file: !78, line: 1691, type: !112, isLocal: true, isDefinition: true, scopeLine: 1692, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!364 = distinct !DISubprogram(name: "big2_skipS", scope: !78, file: !78, line: 1718, type: !116, isLocal: true, isDefinition: true, scopeLine: 1719, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!365 = distinct !DISubprogram(name: "big2_charRefNumber", scope: !78, file: !78, line: 1516, type: !112, isLocal: true, isDefinition: true, scopeLine: 1517, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!366 = distinct !DISubprogram(name: "big2_predefinedEntityName", scope: !78, file: !78, line: 1560, type: !104, isLocal: true, isDefinition: true, scopeLine: 1562, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!367 = distinct !DISubprogram(name: "big2_updatePosition", scope: !78, file: !78, line: 1734, type: !124, isLocal: true, isDefinition: true, scopeLine: 1738, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!368 = distinct !DISubprogram(name: "big2_isPublicId", scope: !78, file: !78, line: 1363, type: !91, isLocal: true, isDefinition: true, scopeLine: 1365, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!369 = distinct !DISubprogram(name: "big2_toUtf8", scope: !1, file: !1, line: 727, type: !138, isLocal: true, isDefinition: true, scopeLine: 727, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!370 = distinct !DISubprogram(name: "big2_toUtf16", scope: !1, file: !1, line: 728, type: !143, isLocal: true, isDefinition: true, scopeLine: 728, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!371 = distinct !DISubprogram(name: "initScanContent", scope: !235, file: !235, line: 48, type: !91, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!372 = distinct !DISubprogram(name: "initUpdatePosition", scope: !1, file: !1, line: 1036, type: !124, isLocal: true, isDefinition: true, scopeLine: 1038, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!373 = distinct !DISubprogram(name: "doParseXmlDecl", scope: !1, file: !1, line: 1177, type: !374, isLocal: true, isDefinition: true, scopeLine: 1190, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!374 = !DISubroutineType(types: !375)
!375 = !{!7, !376, !7, !82, !93, !93, !95, !95, !95, !95, !218, !233}
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64, align: 64)
!377 = !DISubroutineType(types: !378)
!378 = !{!82, !82, !93, !93}
!379 = distinct !DISubprogram(name: "parsePseudoAttribute", scope: !1, file: !1, line: 1071, type: !380, isLocal: true, isDefinition: true, scopeLine: 1078, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!380 = !DISubroutineType(types: !381)
!381 = !{!7, !82, !93, !93, !95, !95, !95, !95}
!382 = distinct !DISubprogram(name: "toAscii", scope: !1, file: !1, line: 1043, type: !104, isLocal: true, isDefinition: true, scopeLine: 1044, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!383 = distinct !DISubprogram(name: "isSpace", scope: !1, file: !1, line: 1055, type: !280, isLocal: true, isDefinition: true, scopeLine: 1056, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!384 = distinct !DISubprogram(name: "findEncoding", scope: !235, file: !235, line: 72, type: !377, isLocal: true, isDefinition: true, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: false, variables: !10)
!385 = !{!386, !387, !391, !394, !400, !401, !402, !403, !404, !407, !411, !415, !416, !420, !421, !422, !424, !425, !426, !427, !428, !429, !433, !434, !435, !438}
!386 = !DIGlobalVariable(name: "latin1_encoding", scope: !0, file: !1, line: 548, type: !206, isLocal: true, isDefinition: true, variable: %struct.normal_encoding* @latin1_encoding)
!387 = !DIGlobalVariable(name: "CDATA_LSQB", scope: !260, file: !78, line: 301, type: !388, isLocal: true, isDefinition: true, variable: [6 x i8]* @normal_scanCdataSection.CDATA_LSQB)
!388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 48, align: 8, elements: !389)
!389 = !{!390}
!390 = !DISubrange(count: 6)
!391 = !DIGlobalVariable(name: "nmstrtPages", scope: !0, file: !392, line: 83, type: !393, isLocal: true, isDefinition: true, variable: [256 x i8]* @nmstrtPages)
!392 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/nametab.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 2048, align: 8, elements: !180)
!394 = !DIGlobalVariable(name: "namingBitmap", scope: !0, file: !392, line: 1, type: !395, isLocal: true, isDefinition: true, variable: [320 x i32]* @namingBitmap)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 10240, align: 32, elements: !398)
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!398 = !{!399}
!399 = !DISubrange(count: 320)
!400 = !DIGlobalVariable(name: "namePages", scope: !0, file: !392, line: 117, type: !393, isLocal: true, isDefinition: true, variable: [256 x i8]* @namePages)
!401 = !DIGlobalVariable(name: "internal_utf8_encoding", scope: !0, file: !1, line: 485, type: !206, isLocal: true, isDefinition: true, variable: %struct.normal_encoding* @internal_utf8_encoding)
!402 = !DIGlobalVariable(name: "internal_little2_encoding", scope: !0, file: !1, line: 861, type: !206, isLocal: true, isDefinition: true, variable: %struct.normal_encoding* @internal_little2_encoding)
!403 = !DIGlobalVariable(name: "CDATA_LSQB", scope: !310, file: !78, line: 301, type: !388, isLocal: true, isDefinition: true, variable: [6 x i8]* @little2_scanCdataSection.CDATA_LSQB)
!404 = !DIGlobalVariable(name: "encodingNames", scope: !329, file: !1, line: 1564, type: !405, isLocal: true, isDefinition: true, variable: [6 x i8*]* @getEncodingIndex.encodingNames)
!405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 384, align: 64, elements: !389)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!407 = !DIGlobalVariable(name: "KW_ISO_8859_1", scope: !0, file: !1, line: 1538, type: !408, isLocal: true, isDefinition: true, variable: [11 x i8]* @KW_ISO_8859_1)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 88, align: 8, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 11)
!411 = !DIGlobalVariable(name: "KW_US_ASCII", scope: !0, file: !1, line: 1542, type: !412, isLocal: true, isDefinition: true, variable: [9 x i8]* @KW_US_ASCII)
!412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 72, align: 8, elements: !413)
!413 = !{!414}
!414 = !DISubrange(count: 9)
!415 = !DIGlobalVariable(name: "KW_UTF_8", scope: !0, file: !1, line: 1546, type: !388, isLocal: true, isDefinition: true, variable: [6 x i8]* @KW_UTF_8)
!416 = !DIGlobalVariable(name: "KW_UTF_16", scope: !0, file: !1, line: 1549, type: !417, isLocal: true, isDefinition: true, variable: [7 x i8]* @KW_UTF_16)
!417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 56, align: 8, elements: !418)
!418 = !{!419}
!419 = !DISubrange(count: 7)
!420 = !DIGlobalVariable(name: "KW_UTF_16BE", scope: !0, file: !1, line: 1552, type: !412, isLocal: true, isDefinition: true, variable: [9 x i8]* @KW_UTF_16BE)
!421 = !DIGlobalVariable(name: "KW_UTF_16LE", scope: !0, file: !1, line: 1556, type: !412, isLocal: true, isDefinition: true, variable: [9 x i8]* @KW_UTF_16LE)
!422 = !DIGlobalVariable(name: "encodings", scope: !0, file: !235, line: 29, type: !423, isLocal: true, isDefinition: true, variable: [7 x %struct.encoding*]* @encodings)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 448, align: 64, elements: !418)
!424 = !DIGlobalVariable(name: "ascii_encoding", scope: !0, file: !1, line: 586, type: !206, isLocal: true, isDefinition: true, variable: %struct.normal_encoding* @ascii_encoding)
!425 = !DIGlobalVariable(name: "utf8_encoding", scope: !0, file: !1, line: 461, type: !206, isLocal: true, isDefinition: true, variable: %struct.normal_encoding* @utf8_encoding)
!426 = !DIGlobalVariable(name: "big2_encoding", scope: !0, file: !1, line: 970, type: !206, isLocal: true, isDefinition: true, variable: %struct.normal_encoding* @big2_encoding)
!427 = !DIGlobalVariable(name: "CDATA_LSQB", scope: !352, file: !78, line: 301, type: !388, isLocal: true, isDefinition: true, variable: [6 x i8]* @big2_scanCdataSection.CDATA_LSQB)
!428 = !DIGlobalVariable(name: "little2_encoding", scope: !0, file: !1, line: 829, type: !206, isLocal: true, isDefinition: true, variable: %struct.normal_encoding* @little2_encoding)
!429 = !DIGlobalVariable(name: "KW_version", scope: !0, file: !1, line: 1155, type: !430, isLocal: true, isDefinition: true, variable: [8 x i8]* @KW_version)
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 64, align: 8, elements: !431)
!431 = !{!432}
!432 = !DISubrange(count: 8)
!433 = !DIGlobalVariable(name: "KW_encoding", scope: !0, file: !1, line: 1159, type: !412, isLocal: true, isDefinition: true, variable: [9 x i8]* @KW_encoding)
!434 = !DIGlobalVariable(name: "KW_standalone", scope: !0, file: !1, line: 1163, type: !408, isLocal: true, isDefinition: true, variable: [11 x i8]* @KW_standalone)
!435 = !DIGlobalVariable(name: "KW_yes", scope: !0, file: !1, line: 1168, type: !436, isLocal: true, isDefinition: true, variable: [4 x i8]* @KW_yes)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 32, align: 8, elements: !437)
!437 = !{!203}
!438 = !DIGlobalVariable(name: "KW_no", scope: !0, file: !1, line: 1172, type: !439, isLocal: true, isDefinition: true, variable: [3 x i8]* @KW_no)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 24, align: 8, elements: !96)
!440 = !{i32 2, !"Dwarf Version", i32 4}
!441 = !{i32 2, !"Debug Info Version", i32 3}
!442 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!443 = !DILocalVariable(name: "from", arg: 1, scope: !220, file: !1, line: 333, type: !93)
!444 = !DIExpression()
!445 = !DILocation(line: 333, column: 50, scope: !220)
!446 = !DILocalVariable(name: "fromLimRef", arg: 2, scope: !220, file: !1, line: 333, type: !95)
!447 = !DILocation(line: 333, column: 70, scope: !220)
!448 = !DILocalVariable(name: "fromLim", scope: !220, file: !1, line: 335, type: !93)
!449 = !DILocation(line: 335, column: 16, scope: !220)
!450 = !DILocation(line: 335, column: 27, scope: !220)
!451 = !DILocation(line: 335, column: 26, scope: !220)
!452 = !DILocalVariable(name: "walked", scope: !220, file: !1, line: 336, type: !453)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !454, line: 62, baseType: !133)
!454 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!455 = !DILocation(line: 336, column: 10, scope: !220)
!456 = !DILocation(line: 337, column: 3, scope: !220)
!457 = !DILocation(line: 337, column: 10, scope: !458)
!458 = !DILexicalBlockFile(scope: !459, file: !1, discriminator: 1)
!459 = distinct !DILexicalBlock(scope: !460, file: !1, line: 337, column: 3)
!460 = distinct !DILexicalBlock(scope: !220, file: !1, line: 337, column: 3)
!461 = !DILocation(line: 337, column: 20, scope: !458)
!462 = !DILocation(line: 337, column: 18, scope: !458)
!463 = !DILocation(line: 337, column: 3, scope: !458)
!464 = !DILocalVariable(name: "prev", scope: !465, file: !1, line: 338, type: !210)
!465 = distinct !DILexicalBlock(scope: !459, file: !1, line: 337, column: 47)
!466 = !DILocation(line: 338, column: 25, scope: !465)
!467 = !DILocation(line: 338, column: 47, scope: !465)
!468 = !DILocation(line: 339, column: 10, scope: !469)
!469 = distinct !DILexicalBlock(scope: !465, file: !1, line: 339, column: 9)
!470 = !DILocation(line: 339, column: 15, scope: !469)
!471 = !DILocation(line: 339, column: 24, scope: !469)
!472 = !DILocation(line: 339, column: 9, scope: !465)
!473 = !DILocation(line: 340, column: 11, scope: !474)
!474 = distinct !DILexicalBlock(scope: !475, file: !1, line: 340, column: 11)
!475 = distinct !DILexicalBlock(scope: !469, file: !1, line: 339, column: 34)
!476 = !DILocation(line: 340, column: 18, scope: !474)
!477 = !DILocation(line: 340, column: 22, scope: !474)
!478 = !DILocation(line: 340, column: 11, scope: !475)
!479 = !DILocation(line: 341, column: 17, scope: !480)
!480 = distinct !DILexicalBlock(scope: !474, file: !1, line: 340, column: 28)
!481 = !DILocation(line: 342, column: 9, scope: !480)
!482 = !DILocation(line: 344, column: 16, scope: !483)
!483 = distinct !DILexicalBlock(scope: !474, file: !1, line: 343, column: 14)
!484 = !DILocation(line: 346, column: 5, scope: !475)
!485 = !DILocation(line: 346, column: 17, scope: !486)
!486 = !DILexicalBlockFile(scope: !487, file: !1, discriminator: 1)
!487 = distinct !DILexicalBlock(scope: !469, file: !1, line: 346, column: 16)
!488 = !DILocation(line: 346, column: 22, scope: !486)
!489 = !DILocation(line: 346, column: 31, scope: !486)
!490 = !DILocation(line: 346, column: 16, scope: !486)
!491 = !DILocation(line: 347, column: 11, scope: !492)
!492 = distinct !DILexicalBlock(scope: !493, file: !1, line: 347, column: 11)
!493 = distinct !DILexicalBlock(scope: !487, file: !1, line: 346, column: 41)
!494 = !DILocation(line: 347, column: 18, scope: !492)
!495 = !DILocation(line: 347, column: 22, scope: !492)
!496 = !DILocation(line: 347, column: 11, scope: !493)
!497 = !DILocation(line: 348, column: 17, scope: !498)
!498 = distinct !DILexicalBlock(scope: !492, file: !1, line: 347, column: 28)
!499 = !DILocation(line: 349, column: 9, scope: !498)
!500 = !DILocation(line: 351, column: 16, scope: !501)
!501 = distinct !DILexicalBlock(scope: !492, file: !1, line: 350, column: 14)
!502 = !DILocation(line: 353, column: 5, scope: !493)
!503 = !DILocation(line: 353, column: 17, scope: !504)
!504 = !DILexicalBlockFile(scope: !505, file: !1, discriminator: 1)
!505 = distinct !DILexicalBlock(scope: !487, file: !1, line: 353, column: 16)
!506 = !DILocation(line: 353, column: 22, scope: !504)
!507 = !DILocation(line: 353, column: 31, scope: !504)
!508 = !DILocation(line: 353, column: 16, scope: !504)
!509 = !DILocation(line: 354, column: 11, scope: !510)
!510 = distinct !DILexicalBlock(scope: !511, file: !1, line: 354, column: 11)
!511 = distinct !DILexicalBlock(scope: !505, file: !1, line: 353, column: 41)
!512 = !DILocation(line: 354, column: 18, scope: !510)
!513 = !DILocation(line: 354, column: 22, scope: !510)
!514 = !DILocation(line: 354, column: 11, scope: !511)
!515 = !DILocation(line: 355, column: 17, scope: !516)
!516 = distinct !DILexicalBlock(scope: !510, file: !1, line: 354, column: 28)
!517 = !DILocation(line: 356, column: 9, scope: !516)
!518 = !DILocation(line: 358, column: 16, scope: !519)
!519 = distinct !DILexicalBlock(scope: !510, file: !1, line: 357, column: 14)
!520 = !DILocation(line: 360, column: 5, scope: !511)
!521 = !DILocation(line: 360, column: 17, scope: !522)
!522 = !DILexicalBlockFile(scope: !523, file: !1, discriminator: 1)
!523 = distinct !DILexicalBlock(scope: !505, file: !1, line: 360, column: 16)
!524 = !DILocation(line: 360, column: 22, scope: !522)
!525 = !DILocation(line: 360, column: 31, scope: !522)
!526 = !DILocation(line: 360, column: 16, scope: !522)
!527 = !DILocation(line: 361, column: 7, scope: !528)
!528 = distinct !DILexicalBlock(scope: !523, file: !1, line: 360, column: 41)
!529 = !DILocation(line: 363, column: 3, scope: !465)
!530 = !DILocation(line: 337, column: 33, scope: !531)
!531 = !DILexicalBlockFile(scope: !459, file: !1, discriminator: 2)
!532 = !DILocation(line: 337, column: 43, scope: !531)
!533 = !DILocation(line: 337, column: 3, scope: !531)
!534 = !DILocation(line: 364, column: 17, scope: !220)
!535 = !DILocation(line: 364, column: 4, scope: !220)
!536 = !DILocation(line: 364, column: 15, scope: !220)
!537 = !DILocation(line: 365, column: 1, scope: !220)
!538 = !DILocalVariable(name: "c", arg: 1, scope: !4, file: !1, line: 1288, type: !7)
!539 = !DILocation(line: 1288, column: 19, scope: !4)
!540 = !DILocalVariable(name: "buf", arg: 2, scope: !4, file: !1, line: 1288, type: !8)
!541 = !DILocation(line: 1288, column: 28, scope: !4)
!542 = !DILocation(line: 1297, column: 7, scope: !543)
!543 = distinct !DILexicalBlock(scope: !4, file: !1, line: 1297, column: 7)
!544 = !DILocation(line: 1297, column: 9, scope: !543)
!545 = !DILocation(line: 1297, column: 7, scope: !4)
!546 = !DILocation(line: 1298, column: 5, scope: !543)
!547 = !DILocation(line: 1299, column: 7, scope: !548)
!548 = distinct !DILexicalBlock(scope: !4, file: !1, line: 1299, column: 7)
!549 = !DILocation(line: 1299, column: 9, scope: !548)
!550 = !DILocation(line: 1299, column: 7, scope: !4)
!551 = !DILocation(line: 1300, column: 21, scope: !552)
!552 = distinct !DILexicalBlock(scope: !548, file: !1, line: 1299, column: 17)
!553 = !DILocation(line: 1300, column: 14, scope: !552)
!554 = !DILocation(line: 1300, column: 5, scope: !552)
!555 = !DILocation(line: 1300, column: 12, scope: !552)
!556 = !DILocation(line: 1301, column: 5, scope: !552)
!557 = !DILocation(line: 1303, column: 7, scope: !558)
!558 = distinct !DILexicalBlock(scope: !4, file: !1, line: 1303, column: 7)
!559 = !DILocation(line: 1303, column: 9, scope: !558)
!560 = !DILocation(line: 1303, column: 7, scope: !4)
!561 = !DILocation(line: 1304, column: 22, scope: !562)
!562 = distinct !DILexicalBlock(scope: !558, file: !1, line: 1303, column: 17)
!563 = !DILocation(line: 1304, column: 24, scope: !562)
!564 = !DILocation(line: 1304, column: 30, scope: !562)
!565 = !DILocation(line: 1304, column: 14, scope: !562)
!566 = !DILocation(line: 1304, column: 5, scope: !562)
!567 = !DILocation(line: 1304, column: 12, scope: !562)
!568 = !DILocation(line: 1305, column: 22, scope: !562)
!569 = !DILocation(line: 1305, column: 24, scope: !562)
!570 = !DILocation(line: 1305, column: 32, scope: !562)
!571 = !DILocation(line: 1305, column: 14, scope: !562)
!572 = !DILocation(line: 1305, column: 5, scope: !562)
!573 = !DILocation(line: 1305, column: 12, scope: !562)
!574 = !DILocation(line: 1306, column: 5, scope: !562)
!575 = !DILocation(line: 1308, column: 7, scope: !576)
!576 = distinct !DILexicalBlock(scope: !4, file: !1, line: 1308, column: 7)
!577 = !DILocation(line: 1308, column: 9, scope: !576)
!578 = !DILocation(line: 1308, column: 7, scope: !4)
!579 = !DILocation(line: 1309, column: 22, scope: !580)
!580 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1308, column: 17)
!581 = !DILocation(line: 1309, column: 24, scope: !580)
!582 = !DILocation(line: 1309, column: 31, scope: !580)
!583 = !DILocation(line: 1309, column: 14, scope: !580)
!584 = !DILocation(line: 1309, column: 5, scope: !580)
!585 = !DILocation(line: 1309, column: 12, scope: !580)
!586 = !DILocation(line: 1310, column: 23, scope: !580)
!587 = !DILocation(line: 1310, column: 25, scope: !580)
!588 = !DILocation(line: 1310, column: 31, scope: !580)
!589 = !DILocation(line: 1310, column: 39, scope: !580)
!590 = !DILocation(line: 1310, column: 14, scope: !580)
!591 = !DILocation(line: 1310, column: 5, scope: !580)
!592 = !DILocation(line: 1310, column: 12, scope: !580)
!593 = !DILocation(line: 1311, column: 22, scope: !580)
!594 = !DILocation(line: 1311, column: 24, scope: !580)
!595 = !DILocation(line: 1311, column: 32, scope: !580)
!596 = !DILocation(line: 1311, column: 14, scope: !580)
!597 = !DILocation(line: 1311, column: 5, scope: !580)
!598 = !DILocation(line: 1311, column: 12, scope: !580)
!599 = !DILocation(line: 1312, column: 5, scope: !580)
!600 = !DILocation(line: 1314, column: 7, scope: !601)
!601 = distinct !DILexicalBlock(scope: !4, file: !1, line: 1314, column: 7)
!602 = !DILocation(line: 1314, column: 9, scope: !601)
!603 = !DILocation(line: 1314, column: 7, scope: !4)
!604 = !DILocation(line: 1315, column: 22, scope: !605)
!605 = distinct !DILexicalBlock(scope: !601, file: !1, line: 1314, column: 21)
!606 = !DILocation(line: 1315, column: 24, scope: !605)
!607 = !DILocation(line: 1315, column: 31, scope: !605)
!608 = !DILocation(line: 1315, column: 14, scope: !605)
!609 = !DILocation(line: 1315, column: 5, scope: !605)
!610 = !DILocation(line: 1315, column: 12, scope: !605)
!611 = !DILocation(line: 1316, column: 23, scope: !605)
!612 = !DILocation(line: 1316, column: 25, scope: !605)
!613 = !DILocation(line: 1316, column: 32, scope: !605)
!614 = !DILocation(line: 1316, column: 40, scope: !605)
!615 = !DILocation(line: 1316, column: 14, scope: !605)
!616 = !DILocation(line: 1316, column: 5, scope: !605)
!617 = !DILocation(line: 1316, column: 12, scope: !605)
!618 = !DILocation(line: 1317, column: 23, scope: !605)
!619 = !DILocation(line: 1317, column: 25, scope: !605)
!620 = !DILocation(line: 1317, column: 31, scope: !605)
!621 = !DILocation(line: 1317, column: 39, scope: !605)
!622 = !DILocation(line: 1317, column: 14, scope: !605)
!623 = !DILocation(line: 1317, column: 5, scope: !605)
!624 = !DILocation(line: 1317, column: 12, scope: !605)
!625 = !DILocation(line: 1318, column: 22, scope: !605)
!626 = !DILocation(line: 1318, column: 24, scope: !605)
!627 = !DILocation(line: 1318, column: 32, scope: !605)
!628 = !DILocation(line: 1318, column: 14, scope: !605)
!629 = !DILocation(line: 1318, column: 5, scope: !605)
!630 = !DILocation(line: 1318, column: 12, scope: !605)
!631 = !DILocation(line: 1319, column: 5, scope: !605)
!632 = !DILocation(line: 1321, column: 3, scope: !4)
!633 = !DILocation(line: 1322, column: 1, scope: !4)
!634 = !DILocalVariable(name: "charNum", arg: 1, scope: !223, file: !1, line: 1325, type: !7)
!635 = !DILocation(line: 1325, column: 20, scope: !223)
!636 = !DILocalVariable(name: "buf", arg: 2, scope: !223, file: !1, line: 1325, type: !146)
!637 = !DILocation(line: 1325, column: 45, scope: !223)
!638 = !DILocation(line: 1327, column: 7, scope: !639)
!639 = distinct !DILexicalBlock(scope: !223, file: !1, line: 1327, column: 7)
!640 = !DILocation(line: 1327, column: 15, scope: !639)
!641 = !DILocation(line: 1327, column: 7, scope: !223)
!642 = !DILocation(line: 1328, column: 5, scope: !639)
!643 = !DILocation(line: 1329, column: 7, scope: !644)
!644 = distinct !DILexicalBlock(scope: !223, file: !1, line: 1329, column: 7)
!645 = !DILocation(line: 1329, column: 15, scope: !644)
!646 = !DILocation(line: 1329, column: 7, scope: !223)
!647 = !DILocation(line: 1330, column: 30, scope: !648)
!648 = distinct !DILexicalBlock(scope: !644, file: !1, line: 1329, column: 26)
!649 = !DILocation(line: 1330, column: 14, scope: !648)
!650 = !DILocation(line: 1330, column: 5, scope: !648)
!651 = !DILocation(line: 1330, column: 12, scope: !648)
!652 = !DILocation(line: 1331, column: 5, scope: !648)
!653 = !DILocation(line: 1333, column: 7, scope: !654)
!654 = distinct !DILexicalBlock(scope: !223, file: !1, line: 1333, column: 7)
!655 = !DILocation(line: 1333, column: 15, scope: !654)
!656 = !DILocation(line: 1333, column: 7, scope: !223)
!657 = !DILocation(line: 1334, column: 13, scope: !658)
!658 = distinct !DILexicalBlock(scope: !654, file: !1, line: 1333, column: 27)
!659 = !DILocation(line: 1335, column: 32, scope: !658)
!660 = !DILocation(line: 1335, column: 40, scope: !658)
!661 = !DILocation(line: 1335, column: 47, scope: !658)
!662 = !DILocation(line: 1335, column: 14, scope: !658)
!663 = !DILocation(line: 1335, column: 5, scope: !658)
!664 = !DILocation(line: 1335, column: 12, scope: !658)
!665 = !DILocation(line: 1336, column: 32, scope: !658)
!666 = !DILocation(line: 1336, column: 40, scope: !658)
!667 = !DILocation(line: 1336, column: 49, scope: !658)
!668 = !DILocation(line: 1336, column: 14, scope: !658)
!669 = !DILocation(line: 1336, column: 5, scope: !658)
!670 = !DILocation(line: 1336, column: 12, scope: !658)
!671 = !DILocation(line: 1337, column: 5, scope: !658)
!672 = !DILocation(line: 1339, column: 3, scope: !223)
!673 = !DILocation(line: 1340, column: 1, scope: !223)
!674 = !DILocation(line: 1355, column: 3, scope: !226)
!675 = !DILocalVariable(name: "mem", arg: 1, scope: !229, file: !1, line: 1446, type: !196)
!676 = !DILocation(line: 1446, column: 30, scope: !229)
!677 = !DILocalVariable(name: "table", arg: 2, scope: !229, file: !1, line: 1447, type: !233)
!678 = !DILocation(line: 1447, column: 29, scope: !229)
!679 = !DILocalVariable(name: "convert", arg: 3, scope: !229, file: !1, line: 1448, type: !192)
!680 = !DILocation(line: 1448, column: 34, scope: !229)
!681 = !DILocalVariable(name: "userData", arg: 4, scope: !229, file: !1, line: 1449, type: !196)
!682 = !DILocation(line: 1449, column: 30, scope: !229)
!683 = !DILocalVariable(name: "i", scope: !229, file: !1, line: 1451, type: !7)
!684 = !DILocation(line: 1451, column: 7, scope: !229)
!685 = !DILocalVariable(name: "e", scope: !229, file: !1, line: 1452, type: !171)
!686 = !DILocation(line: 1452, column: 28, scope: !229)
!687 = !DILocation(line: 1452, column: 59, scope: !229)
!688 = !DILocation(line: 1452, column: 32, scope: !229)
!689 = !DILocation(line: 1453, column: 10, scope: !690)
!690 = distinct !DILexicalBlock(scope: !229, file: !1, line: 1453, column: 3)
!691 = !DILocation(line: 1453, column: 8, scope: !690)
!692 = !DILocation(line: 1453, column: 15, scope: !693)
!693 = !DILexicalBlockFile(scope: !694, file: !1, discriminator: 1)
!694 = distinct !DILexicalBlock(scope: !690, file: !1, line: 1453, column: 3)
!695 = !DILocation(line: 1453, column: 17, scope: !693)
!696 = !DILocation(line: 1453, column: 3, scope: !693)
!697 = !DILocation(line: 1454, column: 51, scope: !694)
!698 = !DILocation(line: 1454, column: 24, scope: !694)
!699 = !DILocation(line: 1454, column: 19, scope: !694)
!700 = !DILocation(line: 1454, column: 5, scope: !694)
!701 = !DILocation(line: 1454, column: 14, scope: !694)
!702 = !DILocation(line: 1454, column: 22, scope: !694)
!703 = !DILocation(line: 1453, column: 57, scope: !704)
!704 = !DILexicalBlockFile(scope: !694, file: !1, discriminator: 2)
!705 = !DILocation(line: 1453, column: 3, scope: !704)
!706 = !DILocation(line: 1455, column: 10, scope: !707)
!707 = distinct !DILexicalBlock(scope: !229, file: !1, line: 1455, column: 3)
!708 = !DILocation(line: 1455, column: 8, scope: !707)
!709 = !DILocation(line: 1455, column: 15, scope: !710)
!710 = !DILexicalBlockFile(scope: !711, file: !1, discriminator: 1)
!711 = distinct !DILexicalBlock(scope: !707, file: !1, line: 1455, column: 3)
!712 = !DILocation(line: 1455, column: 17, scope: !710)
!713 = !DILocation(line: 1455, column: 3, scope: !710)
!714 = !DILocation(line: 1456, column: 30, scope: !715)
!715 = distinct !DILexicalBlock(scope: !711, file: !1, line: 1456, column: 9)
!716 = !DILocation(line: 1456, column: 9, scope: !715)
!717 = !DILocation(line: 1456, column: 33, scope: !715)
!718 = !DILocation(line: 1457, column: 9, scope: !715)
!719 = !DILocation(line: 1457, column: 33, scope: !720)
!720 = !DILexicalBlockFile(scope: !715, file: !1, discriminator: 1)
!721 = !DILocation(line: 1457, column: 12, scope: !720)
!722 = !DILocation(line: 1457, column: 36, scope: !720)
!723 = !DILocation(line: 1458, column: 9, scope: !715)
!724 = !DILocation(line: 1458, column: 18, scope: !720)
!725 = !DILocation(line: 1458, column: 12, scope: !720)
!726 = !DILocation(line: 1458, column: 24, scope: !720)
!727 = !DILocation(line: 1458, column: 21, scope: !720)
!728 = !DILocation(line: 1456, column: 9, scope: !710)
!729 = !DILocation(line: 1459, column: 7, scope: !715)
!730 = !DILocation(line: 1458, column: 24, scope: !731)
!731 = !DILexicalBlockFile(scope: !715, file: !1, discriminator: 2)
!732 = !DILocation(line: 1455, column: 25, scope: !733)
!733 = !DILexicalBlockFile(scope: !711, file: !1, discriminator: 2)
!734 = !DILocation(line: 1455, column: 3, scope: !733)
!735 = !DILocation(line: 1460, column: 10, scope: !736)
!736 = distinct !DILexicalBlock(scope: !229, file: !1, line: 1460, column: 3)
!737 = !DILocation(line: 1460, column: 8, scope: !736)
!738 = !DILocation(line: 1460, column: 15, scope: !739)
!739 = !DILexicalBlockFile(scope: !740, file: !1, discriminator: 1)
!740 = distinct !DILexicalBlock(scope: !736, file: !1, line: 1460, column: 3)
!741 = !DILocation(line: 1460, column: 17, scope: !739)
!742 = !DILocation(line: 1460, column: 3, scope: !739)
!743 = !DILocalVariable(name: "c", scope: !744, file: !1, line: 1461, type: !7)
!744 = distinct !DILexicalBlock(scope: !740, file: !1, line: 1460, column: 29)
!745 = !DILocation(line: 1461, column: 9, scope: !744)
!746 = !DILocation(line: 1461, column: 19, scope: !744)
!747 = !DILocation(line: 1461, column: 13, scope: !744)
!748 = !DILocation(line: 1462, column: 9, scope: !749)
!749 = distinct !DILexicalBlock(scope: !744, file: !1, line: 1462, column: 9)
!750 = !DILocation(line: 1462, column: 11, scope: !749)
!751 = !DILocation(line: 1462, column: 9, scope: !744)
!752 = !DILocation(line: 1463, column: 22, scope: !753)
!753 = distinct !DILexicalBlock(scope: !749, file: !1, line: 1462, column: 18)
!754 = !DILocation(line: 1463, column: 7, scope: !753)
!755 = !DILocation(line: 1463, column: 10, scope: !753)
!756 = !DILocation(line: 1463, column: 17, scope: !753)
!757 = !DILocation(line: 1463, column: 25, scope: !753)
!758 = !DILocation(line: 1465, column: 16, scope: !753)
!759 = !DILocation(line: 1465, column: 7, scope: !753)
!760 = !DILocation(line: 1465, column: 10, scope: !753)
!761 = !DILocation(line: 1465, column: 19, scope: !753)
!762 = !DILocation(line: 1466, column: 15, scope: !753)
!763 = !DILocation(line: 1466, column: 7, scope: !753)
!764 = !DILocation(line: 1466, column: 10, scope: !753)
!765 = !DILocation(line: 1466, column: 21, scope: !753)
!766 = !DILocation(line: 1467, column: 15, scope: !753)
!767 = !DILocation(line: 1467, column: 7, scope: !753)
!768 = !DILocation(line: 1467, column: 10, scope: !753)
!769 = !DILocation(line: 1467, column: 21, scope: !753)
!770 = !DILocation(line: 1468, column: 5, scope: !753)
!771 = !DILocation(line: 1469, column: 14, scope: !772)
!772 = distinct !DILexicalBlock(scope: !749, file: !1, line: 1469, column: 14)
!773 = !DILocation(line: 1469, column: 16, scope: !772)
!774 = !DILocation(line: 1469, column: 14, scope: !749)
!775 = !DILocation(line: 1470, column: 11, scope: !776)
!776 = distinct !DILexicalBlock(scope: !777, file: !1, line: 1470, column: 11)
!777 = distinct !DILexicalBlock(scope: !772, file: !1, line: 1469, column: 21)
!778 = !DILocation(line: 1470, column: 13, scope: !776)
!779 = !DILocation(line: 1470, column: 11, scope: !777)
!780 = !DILocation(line: 1471, column: 9, scope: !776)
!781 = !DILocation(line: 1472, column: 55, scope: !777)
!782 = !DILocation(line: 1472, column: 57, scope: !777)
!783 = !DILocation(line: 1472, column: 52, scope: !777)
!784 = !DILocation(line: 1472, column: 27, scope: !777)
!785 = !DILocation(line: 1472, column: 22, scope: !777)
!786 = !DILocation(line: 1472, column: 7, scope: !777)
!787 = !DILocation(line: 1472, column: 10, scope: !777)
!788 = !DILocation(line: 1472, column: 17, scope: !777)
!789 = !DILocation(line: 1472, column: 25, scope: !777)
!790 = !DILocation(line: 1473, column: 15, scope: !777)
!791 = !DILocation(line: 1473, column: 7, scope: !777)
!792 = !DILocation(line: 1473, column: 10, scope: !777)
!793 = !DILocation(line: 1473, column: 21, scope: !777)
!794 = !DILocation(line: 1474, column: 16, scope: !777)
!795 = !DILocation(line: 1474, column: 7, scope: !777)
!796 = !DILocation(line: 1474, column: 10, scope: !777)
!797 = !DILocation(line: 1474, column: 19, scope: !777)
!798 = !DILocation(line: 1475, column: 5, scope: !777)
!799 = !DILocation(line: 1476, column: 14, scope: !800)
!800 = distinct !DILexicalBlock(scope: !772, file: !1, line: 1476, column: 14)
!801 = !DILocation(line: 1476, column: 16, scope: !800)
!802 = !DILocation(line: 1476, column: 14, scope: !772)
!803 = !DILocation(line: 1477, column: 32, scope: !804)
!804 = distinct !DILexicalBlock(scope: !805, file: !1, line: 1477, column: 11)
!805 = distinct !DILexicalBlock(scope: !800, file: !1, line: 1476, column: 24)
!806 = !DILocation(line: 1477, column: 11, scope: !804)
!807 = !DILocation(line: 1477, column: 35, scope: !804)
!808 = !DILocation(line: 1478, column: 11, scope: !804)
!809 = !DILocation(line: 1478, column: 35, scope: !810)
!810 = !DILexicalBlockFile(scope: !804, file: !1, discriminator: 1)
!811 = !DILocation(line: 1478, column: 14, scope: !810)
!812 = !DILocation(line: 1478, column: 38, scope: !810)
!813 = !DILocation(line: 1479, column: 11, scope: !804)
!814 = !DILocation(line: 1479, column: 14, scope: !810)
!815 = !DILocation(line: 1479, column: 19, scope: !810)
!816 = !DILocation(line: 1479, column: 16, scope: !810)
!817 = !DILocation(line: 1477, column: 11, scope: !818)
!818 = !DILexicalBlockFile(scope: !805, file: !1, discriminator: 1)
!819 = !DILocation(line: 1480, column: 9, scope: !804)
!820 = !DILocation(line: 1481, column: 48, scope: !805)
!821 = !DILocation(line: 1481, column: 27, scope: !805)
!822 = !DILocation(line: 1481, column: 22, scope: !805)
!823 = !DILocation(line: 1481, column: 7, scope: !805)
!824 = !DILocation(line: 1481, column: 10, scope: !805)
!825 = !DILocation(line: 1481, column: 17, scope: !805)
!826 = !DILocation(line: 1481, column: 25, scope: !805)
!827 = !DILocation(line: 1482, column: 15, scope: !805)
!828 = !DILocation(line: 1482, column: 7, scope: !805)
!829 = !DILocation(line: 1482, column: 10, scope: !805)
!830 = !DILocation(line: 1482, column: 21, scope: !805)
!831 = !DILocation(line: 1483, column: 29, scope: !805)
!832 = !DILocation(line: 1483, column: 23, scope: !805)
!833 = !DILocation(line: 1483, column: 15, scope: !805)
!834 = !DILocation(line: 1483, column: 7, scope: !805)
!835 = !DILocation(line: 1483, column: 10, scope: !805)
!836 = !DILocation(line: 1483, column: 21, scope: !805)
!837 = !DILocation(line: 1484, column: 38, scope: !805)
!838 = !DILocation(line: 1484, column: 40, scope: !805)
!839 = !DILocation(line: 1484, column: 38, scope: !818)
!840 = !DILocation(line: 1484, column: 56, scope: !841)
!841 = !DILexicalBlockFile(scope: !805, file: !1, discriminator: 2)
!842 = !DILocation(line: 1484, column: 38, scope: !841)
!843 = !DILocation(line: 1484, column: 38, scope: !844)
!844 = !DILexicalBlockFile(scope: !805, file: !1, discriminator: 3)
!845 = !DILocation(line: 1484, column: 21, scope: !844)
!846 = !DILocation(line: 1484, column: 16, scope: !844)
!847 = !DILocation(line: 1484, column: 7, scope: !844)
!848 = !DILocation(line: 1484, column: 10, scope: !844)
!849 = !DILocation(line: 1484, column: 19, scope: !844)
!850 = !DILocation(line: 1485, column: 5, scope: !805)
!851 = !DILocation(line: 1486, column: 33, scope: !852)
!852 = distinct !DILexicalBlock(scope: !800, file: !1, line: 1486, column: 14)
!853 = !DILocation(line: 1486, column: 14, scope: !852)
!854 = !DILocation(line: 1486, column: 36, scope: !852)
!855 = !DILocation(line: 1486, column: 14, scope: !800)
!856 = !DILocation(line: 1487, column: 22, scope: !857)
!857 = distinct !DILexicalBlock(scope: !852, file: !1, line: 1486, column: 41)
!858 = !DILocation(line: 1487, column: 7, scope: !857)
!859 = !DILocation(line: 1487, column: 10, scope: !857)
!860 = !DILocation(line: 1487, column: 17, scope: !857)
!861 = !DILocation(line: 1487, column: 25, scope: !857)
!862 = !DILocation(line: 1489, column: 16, scope: !857)
!863 = !DILocation(line: 1489, column: 7, scope: !857)
!864 = !DILocation(line: 1489, column: 10, scope: !857)
!865 = !DILocation(line: 1489, column: 19, scope: !857)
!866 = !DILocation(line: 1490, column: 15, scope: !857)
!867 = !DILocation(line: 1490, column: 7, scope: !857)
!868 = !DILocation(line: 1490, column: 10, scope: !857)
!869 = !DILocation(line: 1490, column: 21, scope: !857)
!870 = !DILocation(line: 1491, column: 15, scope: !857)
!871 = !DILocation(line: 1491, column: 7, scope: !857)
!872 = !DILocation(line: 1491, column: 10, scope: !857)
!873 = !DILocation(line: 1491, column: 21, scope: !857)
!874 = !DILocation(line: 1492, column: 5, scope: !857)
!875 = !DILocation(line: 1494, column: 11, scope: !876)
!876 = distinct !DILexicalBlock(scope: !877, file: !1, line: 1494, column: 11)
!877 = distinct !DILexicalBlock(scope: !852, file: !1, line: 1493, column: 10)
!878 = !DILocation(line: 1494, column: 13, scope: !876)
!879 = !DILocation(line: 1494, column: 11, scope: !877)
!880 = !DILocation(line: 1495, column: 9, scope: !876)
!881 = !DILocation(line: 1496, column: 11, scope: !882)
!882 = distinct !DILexicalBlock(scope: !877, file: !1, line: 1496, column: 11)
!883 = !DILocation(line: 1496, column: 11, scope: !877)
!884 = !DILocation(line: 1497, column: 24, scope: !882)
!885 = !DILocation(line: 1497, column: 9, scope: !882)
!886 = !DILocation(line: 1497, column: 12, scope: !882)
!887 = !DILocation(line: 1497, column: 19, scope: !882)
!888 = !DILocation(line: 1497, column: 27, scope: !882)
!889 = !DILocation(line: 1498, column: 16, scope: !890)
!890 = distinct !DILexicalBlock(scope: !882, file: !1, line: 1498, column: 16)
!891 = !DILocation(line: 1498, column: 16, scope: !882)
!892 = !DILocation(line: 1499, column: 24, scope: !890)
!893 = !DILocation(line: 1499, column: 9, scope: !890)
!894 = !DILocation(line: 1499, column: 12, scope: !890)
!895 = !DILocation(line: 1499, column: 19, scope: !890)
!896 = !DILocation(line: 1499, column: 27, scope: !890)
!897 = !DILocation(line: 1501, column: 24, scope: !890)
!898 = !DILocation(line: 1501, column: 9, scope: !890)
!899 = !DILocation(line: 1501, column: 12, scope: !890)
!900 = !DILocation(line: 1501, column: 19, scope: !890)
!901 = !DILocation(line: 1501, column: 27, scope: !890)
!902 = !DILocation(line: 1502, column: 43, scope: !877)
!903 = !DILocation(line: 1502, column: 54, scope: !877)
!904 = !DILocation(line: 1502, column: 46, scope: !877)
!905 = !DILocation(line: 1502, column: 49, scope: !877)
!906 = !DILocation(line: 1502, column: 57, scope: !877)
!907 = !DILocation(line: 1502, column: 29, scope: !877)
!908 = !DILocation(line: 1502, column: 23, scope: !877)
!909 = !DILocation(line: 1502, column: 15, scope: !877)
!910 = !DILocation(line: 1502, column: 7, scope: !877)
!911 = !DILocation(line: 1502, column: 10, scope: !877)
!912 = !DILocation(line: 1502, column: 21, scope: !877)
!913 = !DILocation(line: 1503, column: 37, scope: !877)
!914 = !DILocation(line: 1503, column: 21, scope: !877)
!915 = !DILocation(line: 1503, column: 16, scope: !877)
!916 = !DILocation(line: 1503, column: 7, scope: !877)
!917 = !DILocation(line: 1503, column: 10, scope: !877)
!918 = !DILocation(line: 1503, column: 19, scope: !877)
!919 = !DILocation(line: 1505, column: 3, scope: !744)
!920 = !DILocation(line: 1460, column: 25, scope: !921)
!921 = !DILexicalBlockFile(scope: !740, file: !1, discriminator: 2)
!922 = !DILocation(line: 1460, column: 3, scope: !921)
!923 = !DILocation(line: 1506, column: 17, scope: !229)
!924 = !DILocation(line: 1506, column: 3, scope: !229)
!925 = !DILocation(line: 1506, column: 6, scope: !229)
!926 = !DILocation(line: 1506, column: 15, scope: !229)
!927 = !DILocation(line: 1507, column: 16, scope: !229)
!928 = !DILocation(line: 1507, column: 3, scope: !229)
!929 = !DILocation(line: 1507, column: 6, scope: !229)
!930 = !DILocation(line: 1507, column: 14, scope: !229)
!931 = !DILocation(line: 1508, column: 7, scope: !932)
!932 = distinct !DILexicalBlock(scope: !229, file: !1, line: 1508, column: 7)
!933 = !DILocation(line: 1508, column: 7, scope: !229)
!934 = !DILocation(line: 1509, column: 5, scope: !935)
!935 = distinct !DILexicalBlock(scope: !932, file: !1, line: 1508, column: 16)
!936 = !DILocation(line: 1509, column: 8, scope: !935)
!937 = !DILocation(line: 1509, column: 15, scope: !935)
!938 = !DILocation(line: 1509, column: 23, scope: !935)
!939 = !DILocation(line: 1510, column: 5, scope: !935)
!940 = !DILocation(line: 1510, column: 8, scope: !935)
!941 = !DILocation(line: 1510, column: 15, scope: !935)
!942 = !DILocation(line: 1510, column: 23, scope: !935)
!943 = !DILocation(line: 1511, column: 5, scope: !935)
!944 = !DILocation(line: 1511, column: 8, scope: !935)
!945 = !DILocation(line: 1511, column: 15, scope: !935)
!946 = !DILocation(line: 1511, column: 23, scope: !935)
!947 = !DILocation(line: 1512, column: 5, scope: !935)
!948 = !DILocation(line: 1512, column: 8, scope: !935)
!949 = !DILocation(line: 1512, column: 15, scope: !935)
!950 = !DILocation(line: 1512, column: 25, scope: !935)
!951 = !DILocation(line: 1513, column: 5, scope: !935)
!952 = !DILocation(line: 1513, column: 8, scope: !935)
!953 = !DILocation(line: 1513, column: 15, scope: !935)
!954 = !DILocation(line: 1513, column: 25, scope: !935)
!955 = !DILocation(line: 1514, column: 5, scope: !935)
!956 = !DILocation(line: 1514, column: 8, scope: !935)
!957 = !DILocation(line: 1514, column: 15, scope: !935)
!958 = !DILocation(line: 1514, column: 25, scope: !935)
!959 = !DILocation(line: 1515, column: 5, scope: !935)
!960 = !DILocation(line: 1515, column: 8, scope: !935)
!961 = !DILocation(line: 1515, column: 15, scope: !935)
!962 = !DILocation(line: 1515, column: 26, scope: !935)
!963 = !DILocation(line: 1516, column: 5, scope: !935)
!964 = !DILocation(line: 1516, column: 8, scope: !935)
!965 = !DILocation(line: 1516, column: 15, scope: !935)
!966 = !DILocation(line: 1516, column: 26, scope: !935)
!967 = !DILocation(line: 1517, column: 5, scope: !935)
!968 = !DILocation(line: 1517, column: 8, scope: !935)
!969 = !DILocation(line: 1517, column: 15, scope: !935)
!970 = !DILocation(line: 1517, column: 26, scope: !935)
!971 = !DILocation(line: 1518, column: 3, scope: !935)
!972 = !DILocation(line: 1519, column: 3, scope: !229)
!973 = !DILocation(line: 1519, column: 6, scope: !229)
!974 = !DILocation(line: 1519, column: 13, scope: !229)
!975 = !DILocation(line: 1519, column: 17, scope: !229)
!976 = !DILocation(line: 1519, column: 29, scope: !229)
!977 = !DILocation(line: 1520, column: 3, scope: !229)
!978 = !DILocation(line: 1520, column: 6, scope: !229)
!979 = !DILocation(line: 1520, column: 13, scope: !229)
!980 = !DILocation(line: 1520, column: 17, scope: !229)
!981 = !DILocation(line: 1520, column: 30, scope: !229)
!982 = !DILocation(line: 1521, column: 12, scope: !229)
!983 = !DILocation(line: 1521, column: 15, scope: !229)
!984 = !DILocation(line: 1521, column: 22, scope: !229)
!985 = !DILocation(line: 1521, column: 3, scope: !229)
!986 = !DILocation(line: 1522, column: 1, scope: !229)
!987 = !DILocalVariable(name: "result", arg: 1, scope: !279, file: !1, line: 1269, type: !7)
!988 = !DILocation(line: 1269, column: 24, scope: !279)
!989 = !DILocation(line: 1271, column: 11, scope: !279)
!990 = !DILocation(line: 1271, column: 18, scope: !279)
!991 = !DILocation(line: 1271, column: 3, scope: !279)
!992 = !DILocation(line: 1274, column: 5, scope: !993)
!993 = distinct !DILexicalBlock(scope: !279, file: !1, line: 1271, column: 24)
!994 = !DILocation(line: 1276, column: 30, scope: !995)
!995 = distinct !DILexicalBlock(scope: !993, file: !1, line: 1276, column: 9)
!996 = !DILocation(line: 1276, column: 9, scope: !995)
!997 = !DILocation(line: 1276, column: 38, scope: !995)
!998 = !DILocation(line: 1276, column: 9, scope: !993)
!999 = !DILocation(line: 1277, column: 7, scope: !995)
!1000 = !DILocation(line: 1278, column: 5, scope: !993)
!1001 = !DILocation(line: 1280, column: 9, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !993, file: !1, line: 1280, column: 9)
!1003 = !DILocation(line: 1280, column: 16, scope: !1002)
!1004 = !DILocation(line: 1280, column: 26, scope: !1002)
!1005 = !DILocation(line: 1280, column: 29, scope: !1006)
!1006 = !DILexicalBlockFile(scope: !1002, file: !1, discriminator: 1)
!1007 = !DILocation(line: 1280, column: 36, scope: !1006)
!1008 = !DILocation(line: 1280, column: 9, scope: !1006)
!1009 = !DILocation(line: 1281, column: 7, scope: !1002)
!1010 = !DILocation(line: 1282, column: 5, scope: !993)
!1011 = !DILocation(line: 1284, column: 10, scope: !279)
!1012 = !DILocation(line: 1284, column: 3, scope: !279)
!1013 = !DILocation(line: 1285, column: 1, scope: !279)
!1014 = !DILocalVariable(name: "enc", arg: 1, scope: !282, file: !1, line: 1359, type: !82)
!1015 = !DILocation(line: 1359, column: 32, scope: !282)
!1016 = !DILocalVariable(name: "p", arg: 2, scope: !282, file: !1, line: 1359, type: !93)
!1017 = !DILocation(line: 1359, column: 49, scope: !282)
!1018 = !DILocalVariable(name: "uenc", scope: !282, file: !1, line: 1361, type: !207)
!1019 = !DILocation(line: 1361, column: 34, scope: !282)
!1020 = !DILocation(line: 1361, column: 41, scope: !282)
!1021 = !DILocalVariable(name: "c", scope: !282, file: !1, line: 1362, type: !7)
!1022 = !DILocation(line: 1362, column: 7, scope: !282)
!1023 = !DILocation(line: 1362, column: 11, scope: !282)
!1024 = !DILocation(line: 1362, column: 17, scope: !282)
!1025 = !DILocation(line: 1362, column: 25, scope: !282)
!1026 = !DILocation(line: 1362, column: 31, scope: !282)
!1027 = !DILocation(line: 1362, column: 41, scope: !282)
!1028 = !DILocation(line: 1363, column: 7, scope: !1029)
!1029 = distinct !DILexicalBlock(scope: !282, file: !1, line: 1363, column: 7)
!1030 = !DILocation(line: 1363, column: 9, scope: !1029)
!1031 = !DILocation(line: 1363, column: 7, scope: !282)
!1032 = !DILocation(line: 1364, column: 5, scope: !1029)
!1033 = !DILocation(line: 1365, column: 10, scope: !282)
!1034 = !DILocation(line: 1365, column: 3, scope: !282)
!1035 = !DILocation(line: 1366, column: 1, scope: !282)
!1036 = !DILocalVariable(name: "enc", arg: 1, scope: !283, file: !1, line: 1369, type: !82)
!1037 = !DILocation(line: 1369, column: 34, scope: !283)
!1038 = !DILocalVariable(name: "p", arg: 2, scope: !283, file: !1, line: 1369, type: !93)
!1039 = !DILocation(line: 1369, column: 51, scope: !283)
!1040 = !DILocalVariable(name: "uenc", scope: !283, file: !1, line: 1371, type: !207)
!1041 = !DILocation(line: 1371, column: 34, scope: !283)
!1042 = !DILocation(line: 1371, column: 41, scope: !283)
!1043 = !DILocalVariable(name: "c", scope: !283, file: !1, line: 1372, type: !7)
!1044 = !DILocation(line: 1372, column: 7, scope: !283)
!1045 = !DILocation(line: 1372, column: 11, scope: !283)
!1046 = !DILocation(line: 1372, column: 17, scope: !283)
!1047 = !DILocation(line: 1372, column: 25, scope: !283)
!1048 = !DILocation(line: 1372, column: 31, scope: !283)
!1049 = !DILocation(line: 1372, column: 41, scope: !283)
!1050 = !DILocation(line: 1373, column: 7, scope: !1051)
!1051 = distinct !DILexicalBlock(scope: !283, file: !1, line: 1373, column: 7)
!1052 = !DILocation(line: 1373, column: 9, scope: !1051)
!1053 = !DILocation(line: 1373, column: 7, scope: !283)
!1054 = !DILocation(line: 1374, column: 5, scope: !1051)
!1055 = !DILocation(line: 1375, column: 10, scope: !283)
!1056 = !DILocation(line: 1375, column: 3, scope: !283)
!1057 = !DILocation(line: 1376, column: 1, scope: !283)
!1058 = !DILocalVariable(name: "enc", arg: 1, scope: !284, file: !1, line: 1379, type: !82)
!1059 = !DILocation(line: 1379, column: 35, scope: !284)
!1060 = !DILocalVariable(name: "p", arg: 2, scope: !284, file: !1, line: 1379, type: !93)
!1061 = !DILocation(line: 1379, column: 52, scope: !284)
!1062 = !DILocalVariable(name: "uenc", scope: !284, file: !1, line: 1381, type: !207)
!1063 = !DILocation(line: 1381, column: 34, scope: !284)
!1064 = !DILocation(line: 1381, column: 41, scope: !284)
!1065 = !DILocalVariable(name: "c", scope: !284, file: !1, line: 1382, type: !7)
!1066 = !DILocation(line: 1382, column: 7, scope: !284)
!1067 = !DILocation(line: 1382, column: 11, scope: !284)
!1068 = !DILocation(line: 1382, column: 17, scope: !284)
!1069 = !DILocation(line: 1382, column: 25, scope: !284)
!1070 = !DILocation(line: 1382, column: 31, scope: !284)
!1071 = !DILocation(line: 1382, column: 41, scope: !284)
!1072 = !DILocation(line: 1383, column: 11, scope: !284)
!1073 = !DILocation(line: 1383, column: 13, scope: !284)
!1074 = !DILocation(line: 1383, column: 24, scope: !284)
!1075 = !DILocation(line: 1383, column: 46, scope: !1076)
!1076 = !DILexicalBlockFile(scope: !284, file: !1, discriminator: 1)
!1077 = !DILocation(line: 1383, column: 27, scope: !1076)
!1078 = !DILocation(line: 1383, column: 49, scope: !1076)
!1079 = !DILocation(line: 1383, column: 24, scope: !1076)
!1080 = !DILocation(line: 1383, column: 24, scope: !1081)
!1081 = !DILexicalBlockFile(scope: !284, file: !1, discriminator: 2)
!1082 = !DILocation(line: 1383, column: 3, scope: !1081)
!1083 = !DILocalVariable(name: "enc", arg: 1, scope: !285, file: !1, line: 1387, type: !82)
!1084 = !DILocation(line: 1387, column: 32, scope: !285)
!1085 = !DILocalVariable(name: "fromP", arg: 2, scope: !285, file: !1, line: 1388, type: !95)
!1086 = !DILocation(line: 1388, column: 29, scope: !285)
!1087 = !DILocalVariable(name: "fromLim", arg: 3, scope: !285, file: !1, line: 1388, type: !93)
!1088 = !DILocation(line: 1388, column: 48, scope: !285)
!1089 = !DILocalVariable(name: "toP", arg: 4, scope: !285, file: !1, line: 1389, type: !140)
!1090 = !DILocation(line: 1389, column: 23, scope: !285)
!1091 = !DILocalVariable(name: "toLim", arg: 5, scope: !285, file: !1, line: 1389, type: !93)
!1092 = !DILocation(line: 1389, column: 40, scope: !285)
!1093 = !DILocalVariable(name: "uenc", scope: !285, file: !1, line: 1391, type: !207)
!1094 = !DILocation(line: 1391, column: 34, scope: !285)
!1095 = !DILocation(line: 1391, column: 41, scope: !285)
!1096 = !DILocalVariable(name: "buf", scope: !285, file: !1, line: 1392, type: !1097)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 32, align: 8, elements: !437)
!1098 = !DILocation(line: 1392, column: 8, scope: !285)
!1099 = !DILocation(line: 1393, column: 3, scope: !285)
!1100 = !DILocalVariable(name: "utf8", scope: !1101, file: !1, line: 1394, type: !93)
!1101 = distinct !DILexicalBlock(scope: !1102, file: !1, line: 1393, column: 12)
!1102 = distinct !DILexicalBlock(scope: !1103, file: !1, line: 1393, column: 3)
!1103 = distinct !DILexicalBlock(scope: !285, file: !1, line: 1393, column: 3)
!1104 = !DILocation(line: 1394, column: 17, scope: !1101)
!1105 = !DILocalVariable(name: "n", scope: !1101, file: !1, line: 1395, type: !7)
!1106 = !DILocation(line: 1395, column: 9, scope: !1101)
!1107 = !DILocation(line: 1396, column: 10, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !1101, file: !1, line: 1396, column: 9)
!1109 = !DILocation(line: 1396, column: 9, scope: !1108)
!1110 = !DILocation(line: 1396, column: 19, scope: !1108)
!1111 = !DILocation(line: 1396, column: 16, scope: !1108)
!1112 = !DILocation(line: 1396, column: 9, scope: !1101)
!1113 = !DILocation(line: 1397, column: 7, scope: !1108)
!1114 = !DILocation(line: 1398, column: 40, scope: !1101)
!1115 = !DILocation(line: 1398, column: 39, scope: !1101)
!1116 = !DILocation(line: 1398, column: 38, scope: !1101)
!1117 = !DILocation(line: 1398, column: 12, scope: !1101)
!1118 = !DILocation(line: 1398, column: 18, scope: !1101)
!1119 = !DILocation(line: 1398, column: 10, scope: !1101)
!1120 = !DILocation(line: 1399, column: 14, scope: !1101)
!1121 = !DILocation(line: 1399, column: 9, scope: !1101)
!1122 = !DILocation(line: 1399, column: 7, scope: !1101)
!1123 = !DILocation(line: 1400, column: 9, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1101, file: !1, line: 1400, column: 9)
!1125 = !DILocation(line: 1400, column: 11, scope: !1124)
!1126 = !DILocation(line: 1400, column: 9, scope: !1101)
!1127 = !DILocalVariable(name: "c", scope: !1128, file: !1, line: 1401, type: !7)
!1128 = distinct !DILexicalBlock(scope: !1124, file: !1, line: 1400, column: 17)
!1129 = !DILocation(line: 1401, column: 11, scope: !1128)
!1130 = !DILocation(line: 1401, column: 15, scope: !1128)
!1131 = !DILocation(line: 1401, column: 21, scope: !1128)
!1132 = !DILocation(line: 1401, column: 29, scope: !1128)
!1133 = !DILocation(line: 1401, column: 35, scope: !1128)
!1134 = !DILocation(line: 1401, column: 46, scope: !1128)
!1135 = !DILocation(line: 1401, column: 45, scope: !1128)
!1136 = !DILocation(line: 1402, column: 25, scope: !1128)
!1137 = !DILocation(line: 1402, column: 28, scope: !1128)
!1138 = !DILocation(line: 1402, column: 11, scope: !1128)
!1139 = !DILocation(line: 1402, column: 9, scope: !1128)
!1140 = !DILocation(line: 1403, column: 11, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1128, file: !1, line: 1403, column: 11)
!1142 = !DILocation(line: 1403, column: 15, scope: !1141)
!1143 = !DILocation(line: 1403, column: 24, scope: !1141)
!1144 = !DILocation(line: 1403, column: 23, scope: !1141)
!1145 = !DILocation(line: 1403, column: 21, scope: !1141)
!1146 = !DILocation(line: 1403, column: 13, scope: !1141)
!1147 = !DILocation(line: 1403, column: 11, scope: !1128)
!1148 = !DILocation(line: 1404, column: 9, scope: !1141)
!1149 = !DILocation(line: 1405, column: 14, scope: !1128)
!1150 = !DILocation(line: 1405, column: 12, scope: !1128)
!1151 = !DILocation(line: 1406, column: 65, scope: !1128)
!1152 = !DILocation(line: 1406, column: 64, scope: !1128)
!1153 = !DILocation(line: 1406, column: 63, scope: !1128)
!1154 = !DILocation(line: 1406, column: 18, scope: !1128)
!1155 = !DILocation(line: 1406, column: 43, scope: !1128)
!1156 = !DILocation(line: 1407, column: 18, scope: !1128)
!1157 = !DILocation(line: 1406, column: 8, scope: !1128)
!1158 = !DILocation(line: 1406, column: 14, scope: !1128)
!1159 = !DILocation(line: 1408, column: 5, scope: !1128)
!1160 = !DILocation(line: 1410, column: 11, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1162, file: !1, line: 1410, column: 11)
!1162 = distinct !DILexicalBlock(scope: !1124, file: !1, line: 1409, column: 10)
!1163 = !DILocation(line: 1410, column: 15, scope: !1161)
!1164 = !DILocation(line: 1410, column: 24, scope: !1161)
!1165 = !DILocation(line: 1410, column: 23, scope: !1161)
!1166 = !DILocation(line: 1410, column: 21, scope: !1161)
!1167 = !DILocation(line: 1410, column: 13, scope: !1161)
!1168 = !DILocation(line: 1410, column: 11, scope: !1162)
!1169 = !DILocation(line: 1411, column: 9, scope: !1161)
!1170 = !DILocation(line: 1412, column: 9, scope: !1162)
!1171 = !DILocation(line: 1412, column: 15, scope: !1162)
!1172 = !DILocation(line: 1414, column: 5, scope: !1101)
!1173 = !DILocation(line: 1415, column: 24, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1101, file: !1, line: 1414, column: 8)
!1175 = !DILocation(line: 1415, column: 19, scope: !1174)
!1176 = !DILocation(line: 1415, column: 10, scope: !1174)
!1177 = !DILocation(line: 1415, column: 14, scope: !1174)
!1178 = !DILocation(line: 1415, column: 17, scope: !1174)
!1179 = !DILocation(line: 1416, column: 5, scope: !1174)
!1180 = !DILocation(line: 1416, column: 14, scope: !1181)
!1181 = !DILexicalBlockFile(scope: !1101, file: !1, discriminator: 1)
!1182 = !DILocation(line: 1416, column: 18, scope: !1181)
!1183 = !DILocation(line: 1416, column: 5, scope: !1181)
!1184 = !DILocation(line: 1393, column: 3, scope: !1185)
!1185 = !DILexicalBlockFile(scope: !1102, file: !1, discriminator: 1)
!1186 = !DILocation(line: 1418, column: 1, scope: !285)
!1187 = !DILocalVariable(name: "enc", arg: 1, scope: !286, file: !1, line: 1421, type: !82)
!1188 = !DILocation(line: 1421, column: 33, scope: !286)
!1189 = !DILocalVariable(name: "fromP", arg: 2, scope: !286, file: !1, line: 1422, type: !95)
!1190 = !DILocation(line: 1422, column: 30, scope: !286)
!1191 = !DILocalVariable(name: "fromLim", arg: 3, scope: !286, file: !1, line: 1422, type: !93)
!1192 = !DILocation(line: 1422, column: 49, scope: !286)
!1193 = !DILocalVariable(name: "toP", arg: 4, scope: !286, file: !1, line: 1423, type: !145)
!1194 = !DILocation(line: 1423, column: 34, scope: !286)
!1195 = !DILocalVariable(name: "toLim", arg: 5, scope: !286, file: !1, line: 1423, type: !148)
!1196 = !DILocation(line: 1423, column: 61, scope: !286)
!1197 = !DILocalVariable(name: "uenc", scope: !286, file: !1, line: 1425, type: !207)
!1198 = !DILocation(line: 1425, column: 34, scope: !286)
!1199 = !DILocation(line: 1425, column: 41, scope: !286)
!1200 = !DILocation(line: 1426, column: 3, scope: !286)
!1201 = !DILocation(line: 1426, column: 11, scope: !1202)
!1202 = !DILexicalBlockFile(scope: !286, file: !1, discriminator: 1)
!1203 = !DILocation(line: 1426, column: 10, scope: !1202)
!1204 = !DILocation(line: 1426, column: 19, scope: !1202)
!1205 = !DILocation(line: 1426, column: 17, scope: !1202)
!1206 = !DILocation(line: 1426, column: 27, scope: !1202)
!1207 = !DILocation(line: 1426, column: 31, scope: !1208)
!1208 = !DILexicalBlockFile(scope: !286, file: !1, discriminator: 2)
!1209 = !DILocation(line: 1426, column: 30, scope: !1208)
!1210 = !DILocation(line: 1426, column: 37, scope: !1208)
!1211 = !DILocation(line: 1426, column: 35, scope: !1208)
!1212 = !DILocation(line: 1426, column: 3, scope: !1213)
!1213 = !DILexicalBlockFile(scope: !286, file: !1, discriminator: 3)
!1214 = !DILocalVariable(name: "c", scope: !1215, file: !1, line: 1427, type: !147)
!1215 = distinct !DILexicalBlock(scope: !286, file: !1, line: 1426, column: 44)
!1216 = !DILocation(line: 1427, column: 20, scope: !1215)
!1217 = !DILocation(line: 1427, column: 53, scope: !1215)
!1218 = !DILocation(line: 1427, column: 52, scope: !1215)
!1219 = !DILocation(line: 1427, column: 51, scope: !1215)
!1220 = !DILocation(line: 1427, column: 24, scope: !1215)
!1221 = !DILocation(line: 1427, column: 30, scope: !1215)
!1222 = !DILocation(line: 1428, column: 9, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1215, file: !1, line: 1428, column: 9)
!1224 = !DILocation(line: 1428, column: 11, scope: !1223)
!1225 = !DILocation(line: 1428, column: 9, scope: !1215)
!1226 = !DILocation(line: 1430, column: 11, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1223, file: !1, line: 1428, column: 17)
!1228 = !DILocation(line: 1430, column: 17, scope: !1227)
!1229 = !DILocation(line: 1430, column: 25, scope: !1227)
!1230 = !DILocation(line: 1430, column: 31, scope: !1227)
!1231 = !DILocation(line: 1430, column: 42, scope: !1227)
!1232 = !DILocation(line: 1430, column: 41, scope: !1227)
!1233 = !DILocation(line: 1429, column: 11, scope: !1227)
!1234 = !DILocation(line: 1429, column: 9, scope: !1227)
!1235 = !DILocation(line: 1431, column: 65, scope: !1227)
!1236 = !DILocation(line: 1431, column: 64, scope: !1227)
!1237 = !DILocation(line: 1431, column: 63, scope: !1227)
!1238 = !DILocation(line: 1431, column: 18, scope: !1227)
!1239 = !DILocation(line: 1431, column: 43, scope: !1227)
!1240 = !DILocation(line: 1432, column: 18, scope: !1227)
!1241 = !DILocation(line: 1431, column: 8, scope: !1227)
!1242 = !DILocation(line: 1431, column: 14, scope: !1227)
!1243 = !DILocation(line: 1433, column: 5, scope: !1227)
!1244 = !DILocation(line: 1435, column: 9, scope: !1223)
!1245 = !DILocation(line: 1435, column: 15, scope: !1223)
!1246 = !DILocation(line: 1436, column: 17, scope: !1215)
!1247 = !DILocation(line: 1436, column: 8, scope: !1215)
!1248 = !DILocation(line: 1436, column: 12, scope: !1215)
!1249 = !DILocation(line: 1436, column: 15, scope: !1215)
!1250 = !DILocation(line: 1426, column: 3, scope: !1251)
!1251 = !DILexicalBlockFile(scope: !286, file: !1, discriminator: 4)
!1252 = !DILocation(line: 1439, column: 9, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !286, file: !1, line: 1439, column: 7)
!1254 = !DILocation(line: 1439, column: 8, scope: !1253)
!1255 = !DILocation(line: 1439, column: 16, scope: !1253)
!1256 = !DILocation(line: 1439, column: 13, scope: !1253)
!1257 = !DILocation(line: 1439, column: 23, scope: !1253)
!1258 = !DILocation(line: 1439, column: 28, scope: !1259)
!1259 = !DILexicalBlockFile(scope: !1253, file: !1, discriminator: 1)
!1260 = !DILocation(line: 1439, column: 27, scope: !1259)
!1261 = !DILocation(line: 1439, column: 36, scope: !1259)
!1262 = !DILocation(line: 1439, column: 34, scope: !1259)
!1263 = !DILocation(line: 1439, column: 7, scope: !1259)
!1264 = !DILocation(line: 1440, column: 5, scope: !1253)
!1265 = !DILocation(line: 1442, column: 5, scope: !1253)
!1266 = !DILocation(line: 1443, column: 1, scope: !286)
!1267 = !DILocation(line: 11, column: 3, scope: !234)
!1268 = !DILocation(line: 18, column: 3, scope: !238)
!1269 = !DILocalVariable(name: "p", arg: 1, scope: !239, file: !235, line: 56, type: !242)
!1270 = !DILocation(line: 56, column: 36, scope: !239)
!1271 = !DILocalVariable(name: "encPtr", arg: 2, scope: !239, file: !235, line: 56, type: !218)
!1272 = !DILocation(line: 56, column: 56, scope: !239)
!1273 = !DILocalVariable(name: "name", arg: 3, scope: !239, file: !235, line: 57, type: !93)
!1274 = !DILocation(line: 57, column: 33, scope: !239)
!1275 = !DILocalVariable(name: "i", scope: !239, file: !235, line: 59, type: !7)
!1276 = !DILocation(line: 59, column: 7, scope: !239)
!1277 = !DILocation(line: 59, column: 28, scope: !239)
!1278 = !DILocation(line: 59, column: 11, scope: !239)
!1279 = !DILocation(line: 60, column: 7, scope: !1280)
!1280 = distinct !DILexicalBlock(scope: !239, file: !235, line: 60, column: 7)
!1281 = !DILocation(line: 60, column: 9, scope: !1280)
!1282 = !DILocation(line: 60, column: 7, scope: !239)
!1283 = !DILocation(line: 61, column: 5, scope: !1280)
!1284 = !DILocation(line: 62, column: 3, scope: !239)
!1285 = !DILocation(line: 63, column: 3, scope: !239)
!1286 = !DILocation(line: 63, column: 6, scope: !239)
!1287 = !DILocation(line: 63, column: 14, scope: !239)
!1288 = !DILocation(line: 63, column: 41, scope: !239)
!1289 = !DILocation(line: 64, column: 3, scope: !239)
!1290 = !DILocation(line: 64, column: 6, scope: !239)
!1291 = !DILocation(line: 64, column: 14, scope: !239)
!1292 = !DILocation(line: 64, column: 42, scope: !239)
!1293 = !DILocation(line: 65, column: 3, scope: !239)
!1294 = !DILocation(line: 65, column: 6, scope: !239)
!1295 = !DILocation(line: 65, column: 14, scope: !239)
!1296 = !DILocation(line: 65, column: 29, scope: !239)
!1297 = !DILocation(line: 66, column: 15, scope: !239)
!1298 = !DILocation(line: 66, column: 3, scope: !239)
!1299 = !DILocation(line: 66, column: 6, scope: !239)
!1300 = !DILocation(line: 66, column: 13, scope: !239)
!1301 = !DILocation(line: 67, column: 15, scope: !239)
!1302 = !DILocation(line: 67, column: 18, scope: !239)
!1303 = !DILocation(line: 67, column: 4, scope: !239)
!1304 = !DILocation(line: 67, column: 11, scope: !239)
!1305 = !DILocation(line: 68, column: 3, scope: !239)
!1306 = !DILocation(line: 69, column: 1, scope: !239)
!1307 = !DILocalVariable(name: "name", arg: 1, scope: !329, file: !1, line: 1562, type: !93)
!1308 = !DILocation(line: 1562, column: 30, scope: !329)
!1309 = !DILocalVariable(name: "i", scope: !329, file: !1, line: 1572, type: !7)
!1310 = !DILocation(line: 1572, column: 7, scope: !329)
!1311 = !DILocation(line: 1573, column: 7, scope: !1312)
!1312 = distinct !DILexicalBlock(scope: !329, file: !1, line: 1573, column: 7)
!1313 = !DILocation(line: 1573, column: 12, scope: !1312)
!1314 = !DILocation(line: 1573, column: 7, scope: !329)
!1315 = !DILocation(line: 1574, column: 5, scope: !1312)
!1316 = !DILocation(line: 1575, column: 10, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !329, file: !1, line: 1575, column: 3)
!1318 = !DILocation(line: 1575, column: 8, scope: !1317)
!1319 = !DILocation(line: 1575, column: 15, scope: !1320)
!1320 = !DILexicalBlockFile(scope: !1321, file: !1, discriminator: 1)
!1321 = distinct !DILexicalBlock(scope: !1317, file: !1, line: 1575, column: 3)
!1322 = !DILocation(line: 1575, column: 17, scope: !1320)
!1323 = !DILocation(line: 1575, column: 3, scope: !1320)
!1324 = !DILocation(line: 1576, column: 17, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1321, file: !1, line: 1576, column: 9)
!1326 = !DILocation(line: 1576, column: 37, scope: !1325)
!1327 = !DILocation(line: 1576, column: 23, scope: !1325)
!1328 = !DILocation(line: 1576, column: 9, scope: !1325)
!1329 = !DILocation(line: 1576, column: 9, scope: !1321)
!1330 = !DILocation(line: 1577, column: 14, scope: !1325)
!1331 = !DILocation(line: 1577, column: 7, scope: !1325)
!1332 = !DILocation(line: 1576, column: 39, scope: !1333)
!1333 = !DILexicalBlockFile(scope: !1325, file: !1, discriminator: 1)
!1334 = !DILocation(line: 1575, column: 75, scope: !1335)
!1335 = !DILexicalBlockFile(scope: !1321, file: !1, discriminator: 2)
!1336 = !DILocation(line: 1575, column: 3, scope: !1335)
!1337 = !DILocation(line: 1578, column: 3, scope: !329)
!1338 = !DILocation(line: 1579, column: 1, scope: !329)
!1339 = !DILocalVariable(name: "enc", arg: 1, scope: !335, file: !235, line: 40, type: !82)
!1340 = !DILocation(line: 40, column: 36, scope: !335)
!1341 = !DILocalVariable(name: "ptr", arg: 2, scope: !335, file: !235, line: 40, type: !93)
!1342 = !DILocation(line: 40, column: 53, scope: !335)
!1343 = !DILocalVariable(name: "end", arg: 3, scope: !335, file: !235, line: 40, type: !93)
!1344 = !DILocation(line: 40, column: 70, scope: !335)
!1345 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !335, file: !235, line: 41, type: !95)
!1346 = !DILocation(line: 41, column: 33, scope: !335)
!1347 = !DILocation(line: 43, column: 57, scope: !335)
!1348 = !DILocation(line: 43, column: 34, scope: !335)
!1349 = !DILocation(line: 44, column: 37, scope: !335)
!1350 = !DILocation(line: 44, column: 42, scope: !335)
!1351 = !DILocation(line: 44, column: 47, scope: !335)
!1352 = !DILocation(line: 43, column: 10, scope: !335)
!1353 = !DILocation(line: 43, column: 3, scope: !335)
!1354 = !DILocalVariable(name: "enc", arg: 1, scope: !371, file: !235, line: 48, type: !82)
!1355 = !DILocation(line: 48, column: 37, scope: !371)
!1356 = !DILocalVariable(name: "ptr", arg: 2, scope: !371, file: !235, line: 48, type: !93)
!1357 = !DILocation(line: 48, column: 54, scope: !371)
!1358 = !DILocalVariable(name: "end", arg: 3, scope: !371, file: !235, line: 48, type: !93)
!1359 = !DILocation(line: 48, column: 71, scope: !371)
!1360 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !371, file: !235, line: 49, type: !95)
!1361 = !DILocation(line: 49, column: 34, scope: !371)
!1362 = !DILocation(line: 51, column: 57, scope: !371)
!1363 = !DILocation(line: 51, column: 34, scope: !371)
!1364 = !DILocation(line: 52, column: 38, scope: !371)
!1365 = !DILocation(line: 52, column: 43, scope: !371)
!1366 = !DILocation(line: 52, column: 48, scope: !371)
!1367 = !DILocation(line: 51, column: 10, scope: !371)
!1368 = !DILocation(line: 51, column: 3, scope: !371)
!1369 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !372, file: !1, line: 1036, type: !82)
!1370 = !DILocation(line: 1036, column: 36, scope: !372)
!1371 = !DILocalVariable(name: "ptr", arg: 2, scope: !372, file: !1, line: 1036, type: !93)
!1372 = !DILocation(line: 1036, column: 63, scope: !372)
!1373 = !DILocalVariable(name: "end", arg: 3, scope: !372, file: !1, line: 1037, type: !93)
!1374 = !DILocation(line: 1037, column: 32, scope: !372)
!1375 = !DILocalVariable(name: "pos", arg: 4, scope: !372, file: !1, line: 1037, type: !126)
!1376 = !DILocation(line: 1037, column: 47, scope: !372)
!1377 = !DILocation(line: 1039, column: 45, scope: !372)
!1378 = !DILocation(line: 1039, column: 50, scope: !372)
!1379 = !DILocation(line: 1039, column: 55, scope: !372)
!1380 = !DILocation(line: 1039, column: 3, scope: !372)
!1381 = !DILocation(line: 1040, column: 1, scope: !372)
!1382 = !DILocalVariable(name: "isGeneralTextEntity", arg: 1, scope: !243, file: !235, line: 91, type: !7)
!1383 = !DILocation(line: 91, column: 25, scope: !243)
!1384 = !DILocalVariable(name: "enc", arg: 2, scope: !243, file: !235, line: 92, type: !82)
!1385 = !DILocation(line: 92, column: 37, scope: !243)
!1386 = !DILocalVariable(name: "ptr", arg: 3, scope: !243, file: !235, line: 93, type: !93)
!1387 = !DILocation(line: 93, column: 33, scope: !243)
!1388 = !DILocalVariable(name: "end", arg: 4, scope: !243, file: !235, line: 94, type: !93)
!1389 = !DILocation(line: 94, column: 33, scope: !243)
!1390 = !DILocalVariable(name: "badPtr", arg: 5, scope: !243, file: !235, line: 95, type: !95)
!1391 = !DILocation(line: 95, column: 34, scope: !243)
!1392 = !DILocalVariable(name: "versionPtr", arg: 6, scope: !243, file: !235, line: 96, type: !95)
!1393 = !DILocation(line: 96, column: 34, scope: !243)
!1394 = !DILocalVariable(name: "versionEndPtr", arg: 7, scope: !243, file: !235, line: 97, type: !95)
!1395 = !DILocation(line: 97, column: 34, scope: !243)
!1396 = !DILocalVariable(name: "encodingName", arg: 8, scope: !243, file: !235, line: 98, type: !95)
!1397 = !DILocation(line: 98, column: 34, scope: !243)
!1398 = !DILocalVariable(name: "encoding", arg: 9, scope: !243, file: !235, line: 99, type: !218)
!1399 = !DILocation(line: 99, column: 38, scope: !243)
!1400 = !DILocalVariable(name: "standalone", arg: 10, scope: !243, file: !235, line: 100, type: !233)
!1401 = !DILocation(line: 100, column: 26, scope: !243)
!1402 = !DILocation(line: 103, column: 25, scope: !243)
!1403 = !DILocation(line: 104, column: 25, scope: !243)
!1404 = !DILocation(line: 105, column: 25, scope: !243)
!1405 = !DILocation(line: 106, column: 25, scope: !243)
!1406 = !DILocation(line: 107, column: 25, scope: !243)
!1407 = !DILocation(line: 108, column: 25, scope: !243)
!1408 = !DILocation(line: 109, column: 25, scope: !243)
!1409 = !DILocation(line: 110, column: 25, scope: !243)
!1410 = !DILocation(line: 111, column: 25, scope: !243)
!1411 = !DILocation(line: 112, column: 25, scope: !243)
!1412 = !DILocation(line: 102, column: 10, scope: !243)
!1413 = !DILocation(line: 102, column: 3, scope: !243)
!1414 = !DILocalVariable(name: "encodingFinder", arg: 1, scope: !373, file: !1, line: 1177, type: !376)
!1415 = !DILocation(line: 1177, column: 34, scope: !373)
!1416 = !DILocalVariable(name: "isGeneralTextEntity", arg: 2, scope: !373, file: !1, line: 1180, type: !7)
!1417 = !DILocation(line: 1180, column: 20, scope: !373)
!1418 = !DILocalVariable(name: "enc", arg: 3, scope: !373, file: !1, line: 1181, type: !82)
!1419 = !DILocation(line: 1181, column: 32, scope: !373)
!1420 = !DILocalVariable(name: "ptr", arg: 4, scope: !373, file: !1, line: 1182, type: !93)
!1421 = !DILocation(line: 1182, column: 28, scope: !373)
!1422 = !DILocalVariable(name: "end", arg: 5, scope: !373, file: !1, line: 1183, type: !93)
!1423 = !DILocation(line: 1183, column: 28, scope: !373)
!1424 = !DILocalVariable(name: "badPtr", arg: 6, scope: !373, file: !1, line: 1184, type: !95)
!1425 = !DILocation(line: 1184, column: 29, scope: !373)
!1426 = !DILocalVariable(name: "versionPtr", arg: 7, scope: !373, file: !1, line: 1185, type: !95)
!1427 = !DILocation(line: 1185, column: 29, scope: !373)
!1428 = !DILocalVariable(name: "versionEndPtr", arg: 8, scope: !373, file: !1, line: 1186, type: !95)
!1429 = !DILocation(line: 1186, column: 29, scope: !373)
!1430 = !DILocalVariable(name: "encodingName", arg: 9, scope: !373, file: !1, line: 1187, type: !95)
!1431 = !DILocation(line: 1187, column: 29, scope: !373)
!1432 = !DILocalVariable(name: "encoding", arg: 10, scope: !373, file: !1, line: 1188, type: !218)
!1433 = !DILocation(line: 1188, column: 33, scope: !373)
!1434 = !DILocalVariable(name: "standalone", arg: 11, scope: !373, file: !1, line: 1189, type: !233)
!1435 = !DILocation(line: 1189, column: 21, scope: !373)
!1436 = !DILocalVariable(name: "val", scope: !373, file: !1, line: 1191, type: !93)
!1437 = !DILocation(line: 1191, column: 15, scope: !373)
!1438 = !DILocalVariable(name: "name", scope: !373, file: !1, line: 1192, type: !93)
!1439 = !DILocation(line: 1192, column: 15, scope: !373)
!1440 = !DILocalVariable(name: "nameEnd", scope: !373, file: !1, line: 1193, type: !93)
!1441 = !DILocation(line: 1193, column: 15, scope: !373)
!1442 = !DILocation(line: 1194, column: 14, scope: !373)
!1443 = !DILocation(line: 1194, column: 19, scope: !373)
!1444 = !DILocation(line: 1194, column: 12, scope: !373)
!1445 = !DILocation(line: 1194, column: 7, scope: !373)
!1446 = !DILocation(line: 1195, column: 14, scope: !373)
!1447 = !DILocation(line: 1195, column: 19, scope: !373)
!1448 = !DILocation(line: 1195, column: 12, scope: !373)
!1449 = !DILocation(line: 1195, column: 7, scope: !373)
!1450 = !DILocation(line: 1196, column: 29, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !373, file: !1, line: 1196, column: 7)
!1452 = !DILocation(line: 1196, column: 34, scope: !1451)
!1453 = !DILocation(line: 1196, column: 39, scope: !1451)
!1454 = !DILocation(line: 1196, column: 8, scope: !1451)
!1455 = !DILocation(line: 1197, column: 7, scope: !1451)
!1456 = !DILocation(line: 1197, column: 11, scope: !1457)
!1457 = !DILexicalBlockFile(scope: !1451, file: !1, discriminator: 1)
!1458 = !DILocation(line: 1196, column: 7, scope: !1459)
!1459 = !DILexicalBlockFile(scope: !373, file: !1, discriminator: 1)
!1460 = !DILocation(line: 1198, column: 15, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1451, file: !1, line: 1197, column: 17)
!1462 = !DILocation(line: 1198, column: 6, scope: !1461)
!1463 = !DILocation(line: 1198, column: 13, scope: !1461)
!1464 = !DILocation(line: 1199, column: 5, scope: !1461)
!1465 = !DILocation(line: 1201, column: 8, scope: !1466)
!1466 = distinct !DILexicalBlock(scope: !373, file: !1, line: 1201, column: 7)
!1467 = !DILocation(line: 1201, column: 7, scope: !373)
!1468 = !DILocation(line: 1202, column: 10, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !1470, file: !1, line: 1202, column: 9)
!1470 = distinct !DILexicalBlock(scope: !1466, file: !1, line: 1201, column: 61)
!1471 = !DILocation(line: 1202, column: 9, scope: !1470)
!1472 = !DILocation(line: 1203, column: 17, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1469, file: !1, line: 1202, column: 31)
!1474 = !DILocation(line: 1203, column: 8, scope: !1473)
!1475 = !DILocation(line: 1203, column: 15, scope: !1473)
!1476 = !DILocation(line: 1204, column: 7, scope: !1473)
!1477 = !DILocation(line: 1206, column: 3, scope: !1470)
!1478 = !DILocation(line: 1208, column: 9, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 1208, column: 9)
!1480 = distinct !DILexicalBlock(scope: !1466, file: !1, line: 1207, column: 8)
!1481 = !DILocation(line: 1208, column: 9, scope: !1480)
!1482 = !DILocation(line: 1209, column: 21, scope: !1479)
!1483 = !DILocation(line: 1209, column: 8, scope: !1479)
!1484 = !DILocation(line: 1209, column: 19, scope: !1479)
!1485 = !DILocation(line: 1209, column: 7, scope: !1479)
!1486 = !DILocation(line: 1210, column: 9, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 1210, column: 9)
!1488 = !DILocation(line: 1210, column: 9, scope: !1480)
!1489 = !DILocation(line: 1211, column: 24, scope: !1487)
!1490 = !DILocation(line: 1211, column: 8, scope: !1487)
!1491 = !DILocation(line: 1211, column: 22, scope: !1487)
!1492 = !DILocation(line: 1211, column: 7, scope: !1487)
!1493 = !DILocation(line: 1212, column: 31, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 1212, column: 9)
!1495 = !DILocation(line: 1212, column: 36, scope: !1494)
!1496 = !DILocation(line: 1212, column: 41, scope: !1494)
!1497 = !DILocation(line: 1212, column: 10, scope: !1494)
!1498 = !DILocation(line: 1212, column: 9, scope: !1480)
!1499 = !DILocation(line: 1213, column: 17, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1494, file: !1, line: 1212, column: 76)
!1501 = !DILocation(line: 1213, column: 8, scope: !1500)
!1502 = !DILocation(line: 1213, column: 15, scope: !1500)
!1503 = !DILocation(line: 1214, column: 7, scope: !1500)
!1504 = !DILocation(line: 1216, column: 10, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1480, file: !1, line: 1216, column: 9)
!1506 = !DILocation(line: 1216, column: 9, scope: !1480)
!1507 = !DILocation(line: 1217, column: 11, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 1217, column: 11)
!1509 = distinct !DILexicalBlock(scope: !1505, file: !1, line: 1216, column: 16)
!1510 = !DILocation(line: 1217, column: 11, scope: !1509)
!1511 = !DILocation(line: 1219, column: 19, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1508, file: !1, line: 1217, column: 32)
!1513 = !DILocation(line: 1219, column: 10, scope: !1512)
!1514 = !DILocation(line: 1219, column: 17, scope: !1512)
!1515 = !DILocation(line: 1220, column: 9, scope: !1512)
!1516 = !DILocation(line: 1222, column: 7, scope: !1509)
!1517 = !DILocation(line: 1225, column: 7, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !373, file: !1, line: 1225, column: 7)
!1519 = !DILocation(line: 1225, column: 7, scope: !373)
!1520 = !DILocalVariable(name: "c", scope: !1521, file: !1, line: 1226, type: !7)
!1521 = distinct !DILexicalBlock(scope: !1518, file: !1, line: 1225, column: 61)
!1522 = !DILocation(line: 1226, column: 9, scope: !1521)
!1523 = !DILocation(line: 1226, column: 21, scope: !1521)
!1524 = !DILocation(line: 1226, column: 26, scope: !1521)
!1525 = !DILocation(line: 1226, column: 31, scope: !1521)
!1526 = !DILocation(line: 1226, column: 13, scope: !1521)
!1527 = !DILocation(line: 1227, column: 22, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 1227, column: 9)
!1529 = !DILocation(line: 1227, column: 19, scope: !1528)
!1530 = !DILocation(line: 1227, column: 24, scope: !1528)
!1531 = !DILocation(line: 1227, column: 27, scope: !1532)
!1532 = !DILexicalBlockFile(scope: !1528, file: !1, discriminator: 1)
!1533 = !DILocation(line: 1227, column: 29, scope: !1532)
!1534 = !DILocation(line: 1227, column: 41, scope: !1532)
!1535 = !DILocation(line: 1227, column: 57, scope: !1536)
!1536 = !DILexicalBlockFile(scope: !1528, file: !1, discriminator: 2)
!1537 = !DILocation(line: 1227, column: 54, scope: !1536)
!1538 = !DILocation(line: 1227, column: 59, scope: !1536)
!1539 = !DILocation(line: 1227, column: 62, scope: !1540)
!1540 = !DILexicalBlockFile(scope: !1528, file: !1, discriminator: 3)
!1541 = !DILocation(line: 1227, column: 64, scope: !1540)
!1542 = !DILocation(line: 1227, column: 9, scope: !1540)
!1543 = !DILocation(line: 1228, column: 17, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1528, file: !1, line: 1227, column: 77)
!1545 = !DILocation(line: 1228, column: 8, scope: !1544)
!1546 = !DILocation(line: 1228, column: 15, scope: !1544)
!1547 = !DILocation(line: 1229, column: 7, scope: !1544)
!1548 = !DILocation(line: 1231, column: 9, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 1231, column: 9)
!1550 = !DILocation(line: 1231, column: 9, scope: !1521)
!1551 = !DILocation(line: 1232, column: 23, scope: !1549)
!1552 = !DILocation(line: 1232, column: 8, scope: !1549)
!1553 = !DILocation(line: 1232, column: 21, scope: !1549)
!1554 = !DILocation(line: 1232, column: 7, scope: !1549)
!1555 = !DILocation(line: 1233, column: 9, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 1233, column: 9)
!1557 = !DILocation(line: 1233, column: 9, scope: !1521)
!1558 = !DILocation(line: 1234, column: 19, scope: !1556)
!1559 = !DILocation(line: 1234, column: 34, scope: !1556)
!1560 = !DILocation(line: 1234, column: 39, scope: !1556)
!1561 = !DILocation(line: 1234, column: 44, scope: !1556)
!1562 = !DILocation(line: 1234, column: 50, scope: !1556)
!1563 = !DILocation(line: 1234, column: 55, scope: !1556)
!1564 = !DILocation(line: 1234, column: 48, scope: !1556)
!1565 = !DILocation(line: 1234, column: 8, scope: !1556)
!1566 = !DILocation(line: 1234, column: 17, scope: !1556)
!1567 = !DILocation(line: 1234, column: 7, scope: !1556)
!1568 = !DILocation(line: 1235, column: 31, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 1235, column: 9)
!1570 = !DILocation(line: 1235, column: 36, scope: !1569)
!1571 = !DILocation(line: 1235, column: 41, scope: !1569)
!1572 = !DILocation(line: 1235, column: 10, scope: !1569)
!1573 = !DILocation(line: 1235, column: 9, scope: !1521)
!1574 = !DILocation(line: 1236, column: 17, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1569, file: !1, line: 1235, column: 76)
!1576 = !DILocation(line: 1236, column: 8, scope: !1575)
!1577 = !DILocation(line: 1236, column: 15, scope: !1575)
!1578 = !DILocation(line: 1237, column: 7, scope: !1575)
!1579 = !DILocation(line: 1239, column: 10, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 1239, column: 9)
!1581 = !DILocation(line: 1239, column: 9, scope: !1521)
!1582 = !DILocation(line: 1240, column: 7, scope: !1580)
!1583 = !DILocation(line: 1241, column: 3, scope: !1521)
!1584 = !DILocation(line: 1242, column: 8, scope: !1585)
!1585 = distinct !DILexicalBlock(scope: !373, file: !1, line: 1242, column: 7)
!1586 = !DILocation(line: 1243, column: 7, scope: !1585)
!1587 = !DILocation(line: 1243, column: 10, scope: !1588)
!1588 = !DILexicalBlockFile(scope: !1585, file: !1, discriminator: 1)
!1589 = !DILocation(line: 1242, column: 7, scope: !1459)
!1590 = !DILocation(line: 1244, column: 15, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1585, file: !1, line: 1243, column: 31)
!1592 = !DILocation(line: 1244, column: 6, scope: !1591)
!1593 = !DILocation(line: 1244, column: 13, scope: !1591)
!1594 = !DILocation(line: 1245, column: 5, scope: !1591)
!1595 = !DILocation(line: 1247, column: 7, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !373, file: !1, line: 1247, column: 7)
!1597 = !DILocation(line: 1247, column: 7, scope: !373)
!1598 = !DILocation(line: 1248, column: 9, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !1, line: 1248, column: 9)
!1600 = distinct !DILexicalBlock(scope: !1596, file: !1, line: 1247, column: 74)
!1601 = !DILocation(line: 1248, column: 9, scope: !1600)
!1602 = !DILocation(line: 1249, column: 8, scope: !1599)
!1603 = !DILocation(line: 1249, column: 19, scope: !1599)
!1604 = !DILocation(line: 1249, column: 7, scope: !1599)
!1605 = !DILocation(line: 1250, column: 3, scope: !1600)
!1606 = !DILocation(line: 1251, column: 12, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1596, file: !1, line: 1251, column: 12)
!1608 = !DILocation(line: 1251, column: 12, scope: !1596)
!1609 = !DILocation(line: 1252, column: 9, scope: !1610)
!1610 = distinct !DILexicalBlock(scope: !1611, file: !1, line: 1252, column: 9)
!1611 = distinct !DILexicalBlock(scope: !1607, file: !1, line: 1251, column: 78)
!1612 = !DILocation(line: 1252, column: 9, scope: !1611)
!1613 = !DILocation(line: 1253, column: 8, scope: !1610)
!1614 = !DILocation(line: 1253, column: 19, scope: !1610)
!1615 = !DILocation(line: 1253, column: 7, scope: !1610)
!1616 = !DILocation(line: 1254, column: 3, scope: !1611)
!1617 = !DILocation(line: 1256, column: 15, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1607, file: !1, line: 1255, column: 8)
!1619 = !DILocation(line: 1256, column: 6, scope: !1618)
!1620 = !DILocation(line: 1256, column: 13, scope: !1618)
!1621 = !DILocation(line: 1257, column: 5, scope: !1618)
!1622 = !DILocation(line: 1259, column: 3, scope: !373)
!1623 = !DILocation(line: 1259, column: 26, scope: !1459)
!1624 = !DILocation(line: 1259, column: 31, scope: !1459)
!1625 = !DILocation(line: 1259, column: 36, scope: !1459)
!1626 = !DILocation(line: 1259, column: 18, scope: !1459)
!1627 = !DILocation(line: 1259, column: 10, scope: !1628)
!1628 = !DILexicalBlockFile(scope: !1459, file: !1, discriminator: 3)
!1629 = !DILocation(line: 1259, column: 3, scope: !1459)
!1630 = !DILocation(line: 1260, column: 12, scope: !373)
!1631 = !DILocation(line: 1260, column: 17, scope: !373)
!1632 = !DILocation(line: 1260, column: 9, scope: !373)
!1633 = !DILocation(line: 1259, column: 3, scope: !1634)
!1634 = !DILexicalBlockFile(scope: !373, file: !1, discriminator: 2)
!1635 = !DILocation(line: 1261, column: 7, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !373, file: !1, line: 1261, column: 7)
!1637 = !DILocation(line: 1261, column: 14, scope: !1636)
!1638 = !DILocation(line: 1261, column: 11, scope: !1636)
!1639 = !DILocation(line: 1261, column: 7, scope: !373)
!1640 = !DILocation(line: 1262, column: 15, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1636, file: !1, line: 1261, column: 19)
!1642 = !DILocation(line: 1262, column: 6, scope: !1641)
!1643 = !DILocation(line: 1262, column: 13, scope: !1641)
!1644 = !DILocation(line: 1263, column: 5, scope: !1641)
!1645 = !DILocation(line: 1265, column: 3, scope: !373)
!1646 = !DILocation(line: 1266, column: 1, scope: !373)
!1647 = !DILocalVariable(name: "enc", arg: 1, scope: !384, file: !235, line: 72, type: !82)
!1648 = !DILocation(line: 72, column: 34, scope: !384)
!1649 = !DILocalVariable(name: "ptr", arg: 2, scope: !384, file: !235, line: 72, type: !93)
!1650 = !DILocation(line: 72, column: 51, scope: !384)
!1651 = !DILocalVariable(name: "end", arg: 3, scope: !384, file: !235, line: 72, type: !93)
!1652 = !DILocation(line: 72, column: 68, scope: !384)
!1653 = !DILocalVariable(name: "buf", scope: !384, file: !235, line: 75, type: !1654)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 1024, align: 8, elements: !1655)
!1655 = !{!1656}
!1656 = !DISubrange(count: 128)
!1657 = !DILocation(line: 75, column: 8, scope: !384)
!1658 = !DILocalVariable(name: "p", scope: !384, file: !235, line: 76, type: !8)
!1659 = !DILocation(line: 76, column: 9, scope: !384)
!1660 = !DILocation(line: 76, column: 13, scope: !384)
!1661 = !DILocalVariable(name: "i", scope: !384, file: !235, line: 77, type: !7)
!1662 = !DILocation(line: 77, column: 7, scope: !384)
!1663 = !DILocation(line: 78, column: 3, scope: !384)
!1664 = !DILocation(line: 79, column: 7, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !384, file: !235, line: 79, column: 7)
!1666 = !DILocation(line: 79, column: 14, scope: !1665)
!1667 = !DILocation(line: 79, column: 11, scope: !1665)
!1668 = !DILocation(line: 79, column: 7, scope: !384)
!1669 = !DILocation(line: 80, column: 5, scope: !1665)
!1670 = !DILocation(line: 81, column: 4, scope: !384)
!1671 = !DILocation(line: 81, column: 6, scope: !384)
!1672 = !DILocation(line: 82, column: 15, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !384, file: !235, line: 82, column: 7)
!1674 = !DILocation(line: 82, column: 7, scope: !1673)
!1675 = !DILocation(line: 82, column: 31, scope: !1673)
!1676 = !DILocation(line: 82, column: 34, scope: !1677)
!1677 = !DILexicalBlockFile(scope: !1673, file: !235, discriminator: 1)
!1678 = !DILocation(line: 82, column: 39, scope: !1677)
!1679 = !DILocation(line: 82, column: 55, scope: !1677)
!1680 = !DILocation(line: 82, column: 7, scope: !1677)
!1681 = !DILocation(line: 83, column: 12, scope: !1673)
!1682 = !DILocation(line: 83, column: 5, scope: !1673)
!1683 = !DILocation(line: 84, column: 24, scope: !384)
!1684 = !DILocation(line: 84, column: 7, scope: !384)
!1685 = !DILocation(line: 84, column: 5, scope: !384)
!1686 = !DILocation(line: 85, column: 7, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !384, file: !235, line: 85, column: 7)
!1688 = !DILocation(line: 85, column: 9, scope: !1687)
!1689 = !DILocation(line: 85, column: 7, scope: !384)
!1690 = !DILocation(line: 86, column: 5, scope: !1687)
!1691 = !DILocation(line: 87, column: 24, scope: !384)
!1692 = !DILocation(line: 87, column: 10, scope: !384)
!1693 = !DILocation(line: 87, column: 3, scope: !384)
!1694 = !DILocation(line: 88, column: 1, scope: !384)
!1695 = !DILocalVariable(name: "enc", arg: 1, scope: !246, file: !78, line: 967, type: !82)
!1696 = !DILocation(line: 967, column: 35, scope: !246)
!1697 = !DILocalVariable(name: "ptr", arg: 2, scope: !246, file: !78, line: 967, type: !93)
!1698 = !DILocation(line: 967, column: 52, scope: !246)
!1699 = !DILocalVariable(name: "end", arg: 3, scope: !246, file: !78, line: 967, type: !93)
!1700 = !DILocation(line: 967, column: 69, scope: !246)
!1701 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !246, file: !78, line: 968, type: !95)
!1702 = !DILocation(line: 968, column: 32, scope: !246)
!1703 = !DILocalVariable(name: "tok", scope: !246, file: !78, line: 970, type: !7)
!1704 = !DILocation(line: 970, column: 7, scope: !246)
!1705 = !DILocation(line: 971, column: 7, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !246, file: !78, line: 971, column: 7)
!1707 = !DILocation(line: 971, column: 14, scope: !1706)
!1708 = !DILocation(line: 971, column: 11, scope: !1706)
!1709 = !DILocation(line: 971, column: 7, scope: !246)
!1710 = !DILocation(line: 972, column: 5, scope: !1706)
!1711 = !DILocation(line: 982, column: 11, scope: !246)
!1712 = !DILocation(line: 982, column: 3, scope: !246)
!1713 = !DILocation(line: 984, column: 37, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !246, file: !78, line: 982, column: 32)
!1715 = !DILocation(line: 984, column: 42, scope: !1714)
!1716 = !DILocation(line: 984, column: 46, scope: !1714)
!1717 = !DILocation(line: 984, column: 61, scope: !1714)
!1718 = !DILocation(line: 984, column: 66, scope: !1714)
!1719 = !DILocation(line: 984, column: 12, scope: !1714)
!1720 = !DILocation(line: 984, column: 5, scope: !1714)
!1721 = !DILocation(line: 986, column: 37, scope: !1714)
!1722 = !DILocation(line: 986, column: 42, scope: !1714)
!1723 = !DILocation(line: 986, column: 46, scope: !1714)
!1724 = !DILocation(line: 986, column: 61, scope: !1714)
!1725 = !DILocation(line: 986, column: 66, scope: !1714)
!1726 = !DILocation(line: 986, column: 12, scope: !1714)
!1727 = !DILocation(line: 986, column: 5, scope: !1714)
!1728 = !DILocation(line: 989, column: 11, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 988, column: 5)
!1730 = !DILocation(line: 990, column: 7, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1732, file: !78, line: 990, column: 7)
!1732 = distinct !DILexicalBlock(scope: !1729, file: !78, line: 990, column: 7)
!1733 = !DILocation(line: 990, column: 7, scope: !1732)
!1734 = !DILocation(line: 990, column: 7, scope: !1735)
!1735 = !DILexicalBlockFile(scope: !1736, file: !78, discriminator: 1)
!1736 = distinct !DILexicalBlock(scope: !1731, file: !78, line: 990, column: 7)
!1737 = !DILocation(line: 991, column: 15, scope: !1729)
!1738 = !DILocation(line: 991, column: 7, scope: !1729)
!1739 = !DILocation(line: 993, column: 33, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1729, file: !78, line: 991, column: 36)
!1741 = !DILocation(line: 993, column: 38, scope: !1740)
!1742 = !DILocation(line: 993, column: 42, scope: !1740)
!1743 = !DILocation(line: 993, column: 57, scope: !1740)
!1744 = !DILocation(line: 993, column: 62, scope: !1740)
!1745 = !DILocation(line: 993, column: 16, scope: !1740)
!1746 = !DILocation(line: 993, column: 9, scope: !1740)
!1747 = !DILocation(line: 995, column: 31, scope: !1740)
!1748 = !DILocation(line: 995, column: 36, scope: !1740)
!1749 = !DILocation(line: 995, column: 40, scope: !1740)
!1750 = !DILocation(line: 995, column: 55, scope: !1740)
!1751 = !DILocation(line: 995, column: 60, scope: !1740)
!1752 = !DILocation(line: 995, column: 16, scope: !1740)
!1753 = !DILocation(line: 995, column: 9, scope: !1740)
!1754 = !DILocation(line: 1002, column: 23, scope: !1740)
!1755 = !DILocation(line: 1002, column: 27, scope: !1740)
!1756 = !DILocation(line: 1002, column: 10, scope: !1740)
!1757 = !DILocation(line: 1002, column: 21, scope: !1740)
!1758 = !DILocation(line: 1003, column: 9, scope: !1740)
!1759 = !DILocation(line: 1005, column: 21, scope: !1729)
!1760 = !DILocation(line: 1005, column: 8, scope: !1729)
!1761 = !DILocation(line: 1005, column: 19, scope: !1729)
!1762 = !DILocation(line: 1006, column: 7, scope: !1729)
!1763 = !DILocation(line: 1009, column: 9, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1009, column: 9)
!1765 = !DILocation(line: 1009, column: 13, scope: !1764)
!1766 = !DILocation(line: 1009, column: 30, scope: !1764)
!1767 = !DILocation(line: 1009, column: 27, scope: !1764)
!1768 = !DILocation(line: 1009, column: 9, scope: !1714)
!1769 = !DILocation(line: 1010, column: 21, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1764, file: !78, line: 1009, column: 35)
!1771 = !DILocation(line: 1010, column: 8, scope: !1770)
!1772 = !DILocation(line: 1010, column: 19, scope: !1770)
!1773 = !DILocation(line: 1012, column: 7, scope: !1770)
!1774 = !DILocation(line: 1009, column: 30, scope: !1775)
!1775 = !DILexicalBlockFile(scope: !1764, file: !78, discriminator: 1)
!1776 = !DILocation(line: 1016, column: 5, scope: !1714)
!1777 = !DILocation(line: 1017, column: 11, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1779, file: !78, line: 1016, column: 14)
!1779 = distinct !DILexicalBlock(scope: !1780, file: !78, line: 1016, column: 5)
!1780 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1016, column: 5)
!1781 = !DILocation(line: 1018, column: 13, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1778, file: !78, line: 1018, column: 11)
!1783 = !DILocation(line: 1018, column: 11, scope: !1778)
!1784 = !DILocation(line: 1019, column: 9, scope: !1782)
!1785 = !DILocation(line: 1020, column: 15, scope: !1778)
!1786 = !DILocation(line: 1020, column: 7, scope: !1778)
!1787 = !DILocation(line: 1022, column: 9, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1778, file: !78, line: 1020, column: 36)
!1789 = !DILocation(line: 1025, column: 13, scope: !1790)
!1790 = distinct !DILexicalBlock(scope: !1788, file: !78, line: 1025, column: 13)
!1791 = !DILocation(line: 1025, column: 17, scope: !1790)
!1792 = !DILocation(line: 1025, column: 34, scope: !1790)
!1793 = !DILocation(line: 1025, column: 31, scope: !1790)
!1794 = !DILocation(line: 1025, column: 13, scope: !1788)
!1795 = !DILocation(line: 1026, column: 11, scope: !1790)
!1796 = !DILocation(line: 1025, column: 34, scope: !1797)
!1797 = !DILexicalBlockFile(scope: !1790, file: !78, discriminator: 1)
!1798 = !DILocation(line: 1029, column: 23, scope: !1788)
!1799 = !DILocation(line: 1029, column: 10, scope: !1788)
!1800 = !DILocation(line: 1029, column: 21, scope: !1788)
!1801 = !DILocation(line: 1030, column: 9, scope: !1788)
!1802 = !DILocation(line: 1016, column: 5, scope: !1803)
!1803 = !DILexicalBlockFile(scope: !1779, file: !78, discriminator: 1)
!1804 = !DILocation(line: 1033, column: 19, scope: !1714)
!1805 = !DILocation(line: 1033, column: 6, scope: !1714)
!1806 = !DILocation(line: 1033, column: 17, scope: !1714)
!1807 = !DILocation(line: 1034, column: 5, scope: !1714)
!1808 = !DILocation(line: 1036, column: 32, scope: !1714)
!1809 = !DILocation(line: 1036, column: 37, scope: !1714)
!1810 = !DILocation(line: 1036, column: 41, scope: !1714)
!1811 = !DILocation(line: 1036, column: 56, scope: !1714)
!1812 = !DILocation(line: 1036, column: 61, scope: !1714)
!1813 = !DILocation(line: 1036, column: 12, scope: !1714)
!1814 = !DILocation(line: 1036, column: 5, scope: !1714)
!1815 = !DILocation(line: 1038, column: 19, scope: !1714)
!1816 = !DILocation(line: 1038, column: 23, scope: !1714)
!1817 = !DILocation(line: 1038, column: 6, scope: !1714)
!1818 = !DILocation(line: 1038, column: 17, scope: !1714)
!1819 = !DILocation(line: 1039, column: 5, scope: !1714)
!1820 = !DILocation(line: 1041, column: 19, scope: !1714)
!1821 = !DILocation(line: 1041, column: 23, scope: !1714)
!1822 = !DILocation(line: 1041, column: 6, scope: !1714)
!1823 = !DILocation(line: 1041, column: 17, scope: !1714)
!1824 = !DILocation(line: 1042, column: 5, scope: !1714)
!1825 = !DILocation(line: 1044, column: 9, scope: !1714)
!1826 = !DILocation(line: 1045, column: 11, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1045, column: 9)
!1828 = !DILocation(line: 1045, column: 9, scope: !1714)
!1829 = !DILocation(line: 1046, column: 7, scope: !1827)
!1830 = !DILocation(line: 1047, column: 9, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1047, column: 9)
!1832 = !DILocation(line: 1047, column: 9, scope: !1714)
!1833 = !DILocation(line: 1048, column: 7, scope: !1834)
!1834 = distinct !DILexicalBlock(scope: !1835, file: !78, line: 1048, column: 7)
!1835 = distinct !DILexicalBlock(scope: !1836, file: !78, line: 1048, column: 7)
!1836 = distinct !DILexicalBlock(scope: !1831, file: !78, line: 1047, column: 45)
!1837 = !DILocation(line: 1048, column: 7, scope: !1835)
!1838 = !DILocation(line: 1048, column: 7, scope: !1839)
!1839 = !DILexicalBlockFile(scope: !1840, file: !78, discriminator: 1)
!1840 = distinct !DILexicalBlock(scope: !1834, file: !78, line: 1048, column: 7)
!1841 = !DILocation(line: 1049, column: 11, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1836, file: !78, line: 1049, column: 11)
!1843 = !DILocation(line: 1049, column: 11, scope: !1836)
!1844 = !DILocation(line: 1050, column: 23, scope: !1845)
!1845 = distinct !DILexicalBlock(scope: !1842, file: !78, line: 1049, column: 59)
!1846 = !DILocation(line: 1050, column: 27, scope: !1845)
!1847 = !DILocation(line: 1050, column: 10, scope: !1845)
!1848 = !DILocation(line: 1050, column: 21, scope: !1845)
!1849 = !DILocation(line: 1051, column: 9, scope: !1845)
!1850 = !DILocation(line: 1053, column: 5, scope: !1836)
!1851 = !DILocation(line: 1054, column: 19, scope: !1714)
!1852 = !DILocation(line: 1054, column: 6, scope: !1714)
!1853 = !DILocation(line: 1054, column: 17, scope: !1714)
!1854 = !DILocation(line: 1055, column: 5, scope: !1714)
!1855 = !DILocation(line: 1057, column: 19, scope: !1714)
!1856 = !DILocation(line: 1057, column: 23, scope: !1714)
!1857 = !DILocation(line: 1057, column: 6, scope: !1714)
!1858 = !DILocation(line: 1057, column: 17, scope: !1714)
!1859 = !DILocation(line: 1058, column: 5, scope: !1714)
!1860 = !DILocation(line: 1060, column: 9, scope: !1714)
!1861 = !DILocation(line: 1061, column: 11, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1061, column: 9)
!1863 = !DILocation(line: 1061, column: 9, scope: !1714)
!1864 = !DILocation(line: 1062, column: 7, scope: !1862)
!1865 = !DILocation(line: 1063, column: 13, scope: !1714)
!1866 = !DILocation(line: 1063, column: 5, scope: !1714)
!1867 = !DILocation(line: 1065, column: 21, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1063, column: 34)
!1869 = !DILocation(line: 1065, column: 25, scope: !1868)
!1870 = !DILocation(line: 1065, column: 8, scope: !1868)
!1871 = !DILocation(line: 1065, column: 19, scope: !1868)
!1872 = !DILocation(line: 1066, column: 7, scope: !1868)
!1873 = !DILocation(line: 1068, column: 21, scope: !1868)
!1874 = !DILocation(line: 1068, column: 25, scope: !1868)
!1875 = !DILocation(line: 1068, column: 8, scope: !1868)
!1876 = !DILocation(line: 1068, column: 19, scope: !1868)
!1877 = !DILocation(line: 1069, column: 7, scope: !1868)
!1878 = !DILocation(line: 1071, column: 21, scope: !1868)
!1879 = !DILocation(line: 1071, column: 25, scope: !1868)
!1880 = !DILocation(line: 1071, column: 8, scope: !1868)
!1881 = !DILocation(line: 1071, column: 19, scope: !1868)
!1882 = !DILocation(line: 1072, column: 7, scope: !1868)
!1883 = !DILocation(line: 1076, column: 21, scope: !1868)
!1884 = !DILocation(line: 1076, column: 8, scope: !1868)
!1885 = !DILocation(line: 1076, column: 19, scope: !1868)
!1886 = !DILocation(line: 1077, column: 7, scope: !1868)
!1887 = !DILocation(line: 1079, column: 19, scope: !1714)
!1888 = !DILocation(line: 1079, column: 6, scope: !1714)
!1889 = !DILocation(line: 1079, column: 17, scope: !1714)
!1890 = !DILocation(line: 1080, column: 5, scope: !1714)
!1891 = !DILocation(line: 1082, column: 19, scope: !1714)
!1892 = !DILocation(line: 1082, column: 23, scope: !1714)
!1893 = !DILocation(line: 1082, column: 6, scope: !1714)
!1894 = !DILocation(line: 1082, column: 17, scope: !1714)
!1895 = !DILocation(line: 1083, column: 5, scope: !1714)
!1896 = !DILocation(line: 1085, column: 19, scope: !1714)
!1897 = !DILocation(line: 1085, column: 23, scope: !1714)
!1898 = !DILocation(line: 1085, column: 6, scope: !1714)
!1899 = !DILocation(line: 1085, column: 17, scope: !1714)
!1900 = !DILocation(line: 1086, column: 5, scope: !1714)
!1901 = !DILocation(line: 1088, column: 34, scope: !1714)
!1902 = !DILocation(line: 1088, column: 39, scope: !1714)
!1903 = !DILocation(line: 1088, column: 43, scope: !1714)
!1904 = !DILocation(line: 1088, column: 58, scope: !1714)
!1905 = !DILocation(line: 1088, column: 63, scope: !1714)
!1906 = !DILocation(line: 1088, column: 12, scope: !1714)
!1907 = !DILocation(line: 1088, column: 5, scope: !1714)
!1908 = !DILocation(line: 1105, column: 5, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 5)
!1910 = !DILocation(line: 1105, column: 5, scope: !1714)
!1911 = !DILocation(line: 1105, column: 5, scope: !1912)
!1912 = !DILexicalBlockFile(scope: !1909, file: !78, discriminator: 1)
!1913 = !DILocation(line: 1105, column: 5, scope: !1914)
!1914 = !DILexicalBlockFile(scope: !1915, file: !78, discriminator: 2)
!1915 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 5)
!1916 = !DILocation(line: 1105, column: 5, scope: !1917)
!1917 = !DILexicalBlockFile(scope: !1918, file: !78, discriminator: 3)
!1918 = distinct !DILexicalBlock(scope: !1915, file: !78, line: 1105, column: 5)
!1919 = !DILocation(line: 1105, column: 5, scope: !1920)
!1920 = !DILexicalBlockFile(scope: !1921, file: !78, discriminator: 4)
!1921 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 5)
!1922 = !DILocation(line: 1105, column: 5, scope: !1923)
!1923 = !DILexicalBlockFile(scope: !1924, file: !78, discriminator: 5)
!1924 = distinct !DILexicalBlock(scope: !1921, file: !78, line: 1105, column: 5)
!1925 = !DILocation(line: 1105, column: 5, scope: !1926)
!1926 = !DILexicalBlockFile(scope: !1714, file: !78, discriminator: 6)
!1927 = !DILocation(line: 1105, column: 18, scope: !1928)
!1928 = !DILexicalBlockFile(scope: !1929, file: !78, discriminator: 7)
!1929 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 18)
!1930 = !DILocation(line: 1105, column: 18, scope: !1931)
!1931 = !DILexicalBlockFile(scope: !1929, file: !78, discriminator: 8)
!1932 = !DILocation(line: 1105, column: 18, scope: !1933)
!1933 = !DILexicalBlockFile(scope: !1934, file: !78, discriminator: 9)
!1934 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 18)
!1935 = !DILocation(line: 1105, column: 18, scope: !1936)
!1936 = !DILexicalBlockFile(scope: !1937, file: !78, discriminator: 10)
!1937 = distinct !DILexicalBlock(scope: !1934, file: !78, line: 1105, column: 18)
!1938 = !DILocation(line: 1105, column: 18, scope: !1939)
!1939 = !DILexicalBlockFile(scope: !1940, file: !78, discriminator: 11)
!1940 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 18)
!1941 = !DILocation(line: 1105, column: 18, scope: !1942)
!1942 = !DILexicalBlockFile(scope: !1943, file: !78, discriminator: 12)
!1943 = distinct !DILexicalBlock(scope: !1940, file: !78, line: 1105, column: 18)
!1944 = !DILocation(line: 1105, column: 18, scope: !1945)
!1945 = !DILexicalBlockFile(scope: !1714, file: !78, discriminator: 13)
!1946 = !DILocation(line: 1105, column: 31, scope: !1947)
!1947 = !DILexicalBlockFile(scope: !1948, file: !78, discriminator: 14)
!1948 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 31)
!1949 = !DILocation(line: 1105, column: 31, scope: !1950)
!1950 = !DILexicalBlockFile(scope: !1948, file: !78, discriminator: 15)
!1951 = !DILocation(line: 1105, column: 31, scope: !1952)
!1952 = !DILexicalBlockFile(scope: !1953, file: !78, discriminator: 16)
!1953 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 31)
!1954 = !DILocation(line: 1105, column: 31, scope: !1955)
!1955 = !DILexicalBlockFile(scope: !1956, file: !78, discriminator: 17)
!1956 = distinct !DILexicalBlock(scope: !1953, file: !78, line: 1105, column: 31)
!1957 = !DILocation(line: 1105, column: 31, scope: !1958)
!1958 = !DILexicalBlockFile(scope: !1959, file: !78, discriminator: 18)
!1959 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1105, column: 31)
!1960 = !DILocation(line: 1105, column: 31, scope: !1961)
!1961 = !DILexicalBlockFile(scope: !1962, file: !78, discriminator: 19)
!1962 = distinct !DILexicalBlock(scope: !1959, file: !78, line: 1105, column: 31)
!1963 = !DILocation(line: 1105, column: 31, scope: !1964)
!1964 = !DILexicalBlockFile(scope: !1714, file: !78, discriminator: 20)
!1965 = !DILocation(line: 1109, column: 9, scope: !1714)
!1966 = !DILocation(line: 1110, column: 9, scope: !1714)
!1967 = !DILocation(line: 1111, column: 5, scope: !1714)
!1968 = !DILocation(line: 1118, column: 9, scope: !1714)
!1969 = !DILocation(line: 1119, column: 9, scope: !1714)
!1970 = !DILocation(line: 1120, column: 5, scope: !1714)
!1971 = !DILocation(line: 1127, column: 9, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1714, file: !78, line: 1127, column: 9)
!1973 = !DILocation(line: 1134, column: 19, scope: !1714)
!1974 = !DILocation(line: 1134, column: 6, scope: !1714)
!1975 = !DILocation(line: 1134, column: 17, scope: !1714)
!1976 = !DILocation(line: 1135, column: 5, scope: !1714)
!1977 = !DILocation(line: 1137, column: 3, scope: !246)
!1978 = !DILocation(line: 1137, column: 10, scope: !1979)
!1979 = !DILexicalBlockFile(scope: !246, file: !78, discriminator: 1)
!1980 = !DILocation(line: 1137, column: 3, scope: !1979)
!1981 = !DILocation(line: 1138, column: 13, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !246, file: !78, line: 1137, column: 35)
!1983 = !DILocation(line: 1138, column: 5, scope: !1982)
!1984 = !DILocation(line: 1139, column: 5, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1986, file: !78, line: 1139, column: 5)
!1986 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1139, column: 5)
!1987 = distinct !DILexicalBlock(scope: !1982, file: !78, line: 1138, column: 34)
!1988 = !DILocation(line: 1139, column: 5, scope: !1989)
!1989 = !DILexicalBlockFile(scope: !1987, file: !78, discriminator: 1)
!1990 = !DILocation(line: 1139, column: 5, scope: !1991)
!1991 = !DILexicalBlockFile(scope: !1992, file: !78, discriminator: 2)
!1992 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1139, column: 5)
!1993 = !DILocation(line: 1139, column: 5, scope: !1994)
!1994 = !DILexicalBlockFile(scope: !1992, file: !78, discriminator: 3)
!1995 = !DILocation(line: 1139, column: 5, scope: !1996)
!1996 = !DILexicalBlockFile(scope: !1997, file: !78, discriminator: 4)
!1997 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1139, column: 5)
!1998 = !DILocation(line: 1139, column: 5, scope: !1999)
!1999 = !DILexicalBlockFile(scope: !2000, file: !78, discriminator: 5)
!2000 = distinct !DILexicalBlock(scope: !1997, file: !78, line: 1139, column: 5)
!2001 = !DILocation(line: 1139, column: 5, scope: !2002)
!2002 = !DILexicalBlockFile(scope: !1987, file: !78, discriminator: 6)
!2003 = !DILocation(line: 1139, column: 5, scope: !2004)
!2004 = !DILexicalBlockFile(scope: !2005, file: !78, discriminator: 7)
!2005 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1139, column: 5)
!2006 = !DILocation(line: 1139, column: 5, scope: !2007)
!2007 = !DILexicalBlockFile(scope: !2005, file: !78, discriminator: 8)
!2008 = !DILocation(line: 1139, column: 5, scope: !2009)
!2009 = !DILexicalBlockFile(scope: !2010, file: !78, discriminator: 9)
!2010 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1139, column: 5)
!2011 = !DILocation(line: 1139, column: 5, scope: !2012)
!2012 = !DILexicalBlockFile(scope: !2013, file: !78, discriminator: 10)
!2013 = distinct !DILexicalBlock(scope: !2010, file: !78, line: 1139, column: 5)
!2014 = !DILocation(line: 1139, column: 5, scope: !2015)
!2015 = !DILexicalBlockFile(scope: !1987, file: !78, discriminator: 11)
!2016 = !DILocation(line: 1139, column: 5, scope: !2017)
!2017 = !DILexicalBlockFile(scope: !2018, file: !78, discriminator: 12)
!2018 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1139, column: 5)
!2019 = !DILocation(line: 1139, column: 5, scope: !2020)
!2020 = !DILexicalBlockFile(scope: !2018, file: !78, discriminator: 13)
!2021 = !DILocation(line: 1139, column: 5, scope: !2022)
!2022 = !DILexicalBlockFile(scope: !2023, file: !78, discriminator: 14)
!2023 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1139, column: 5)
!2024 = !DILocation(line: 1139, column: 5, scope: !2025)
!2025 = !DILexicalBlockFile(scope: !2026, file: !78, discriminator: 15)
!2026 = distinct !DILexicalBlock(scope: !2023, file: !78, line: 1139, column: 5)
!2027 = !DILocation(line: 1139, column: 5, scope: !2028)
!2028 = !DILexicalBlockFile(scope: !1987, file: !78, discriminator: 16)
!2029 = !DILocation(line: 1143, column: 21, scope: !1987)
!2030 = !DILocation(line: 1143, column: 8, scope: !1987)
!2031 = !DILocation(line: 1143, column: 19, scope: !1987)
!2032 = !DILocation(line: 1144, column: 14, scope: !1987)
!2033 = !DILocation(line: 1144, column: 7, scope: !1987)
!2034 = !DILocation(line: 1166, column: 11, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1166, column: 11)
!2036 = !DILocation(line: 1166, column: 15, scope: !2035)
!2037 = !DILocation(line: 1166, column: 11, scope: !1987)
!2038 = !DILocation(line: 1167, column: 23, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2035, file: !78, line: 1166, column: 36)
!2040 = !DILocation(line: 1167, column: 10, scope: !2039)
!2041 = !DILocation(line: 1167, column: 21, scope: !2039)
!2042 = !DILocation(line: 1168, column: 9, scope: !2039)
!2043 = !DILocation(line: 1170, column: 21, scope: !1987)
!2044 = !DILocation(line: 1170, column: 25, scope: !1987)
!2045 = !DILocation(line: 1170, column: 8, scope: !1987)
!2046 = !DILocation(line: 1170, column: 19, scope: !1987)
!2047 = !DILocation(line: 1171, column: 7, scope: !1987)
!2048 = !DILocation(line: 1173, column: 11, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1173, column: 11)
!2050 = !DILocation(line: 1173, column: 15, scope: !2049)
!2051 = !DILocation(line: 1173, column: 11, scope: !1987)
!2052 = !DILocation(line: 1174, column: 23, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2049, file: !78, line: 1173, column: 36)
!2054 = !DILocation(line: 1174, column: 10, scope: !2053)
!2055 = !DILocation(line: 1174, column: 21, scope: !2053)
!2056 = !DILocation(line: 1175, column: 9, scope: !2053)
!2057 = !DILocation(line: 1177, column: 21, scope: !1987)
!2058 = !DILocation(line: 1177, column: 25, scope: !1987)
!2059 = !DILocation(line: 1177, column: 8, scope: !1987)
!2060 = !DILocation(line: 1177, column: 19, scope: !1987)
!2061 = !DILocation(line: 1178, column: 7, scope: !1987)
!2062 = !DILocation(line: 1180, column: 11, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !1987, file: !78, line: 1180, column: 11)
!2064 = !DILocation(line: 1180, column: 15, scope: !2063)
!2065 = !DILocation(line: 1180, column: 11, scope: !1987)
!2066 = !DILocation(line: 1181, column: 23, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2063, file: !78, line: 1180, column: 36)
!2068 = !DILocation(line: 1181, column: 10, scope: !2067)
!2069 = !DILocation(line: 1181, column: 21, scope: !2067)
!2070 = !DILocation(line: 1182, column: 9, scope: !2067)
!2071 = !DILocation(line: 1184, column: 21, scope: !1987)
!2072 = !DILocation(line: 1184, column: 25, scope: !1987)
!2073 = !DILocation(line: 1184, column: 8, scope: !1987)
!2074 = !DILocation(line: 1184, column: 19, scope: !1987)
!2075 = !DILocation(line: 1185, column: 7, scope: !1987)
!2076 = !DILocation(line: 1187, column: 21, scope: !1987)
!2077 = !DILocation(line: 1187, column: 8, scope: !1987)
!2078 = !DILocation(line: 1187, column: 19, scope: !1987)
!2079 = !DILocation(line: 1188, column: 7, scope: !1987)
!2080 = !DILocation(line: 1137, column: 3, scope: !2081)
!2081 = !DILexicalBlockFile(scope: !246, file: !78, discriminator: 2)
!2082 = !DILocation(line: 1191, column: 11, scope: !246)
!2083 = !DILocation(line: 1191, column: 10, scope: !246)
!2084 = !DILocation(line: 1191, column: 3, scope: !246)
!2085 = !DILocation(line: 1192, column: 1, scope: !246)
!2086 = !DILocalVariable(name: "enc", arg: 1, scope: !258, file: !78, line: 782, type: !82)
!2087 = !DILocation(line: 782, column: 36, scope: !258)
!2088 = !DILocalVariable(name: "ptr", arg: 2, scope: !258, file: !78, line: 782, type: !93)
!2089 = !DILocation(line: 782, column: 53, scope: !258)
!2090 = !DILocalVariable(name: "end", arg: 3, scope: !258, file: !78, line: 782, type: !93)
!2091 = !DILocation(line: 782, column: 70, scope: !258)
!2092 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !258, file: !78, line: 783, type: !95)
!2093 = !DILocation(line: 783, column: 33, scope: !258)
!2094 = !DILocation(line: 785, column: 7, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !258, file: !78, line: 785, column: 7)
!2096 = !DILocation(line: 785, column: 14, scope: !2095)
!2097 = !DILocation(line: 785, column: 11, scope: !2095)
!2098 = !DILocation(line: 785, column: 7, scope: !258)
!2099 = !DILocation(line: 786, column: 5, scope: !2095)
!2100 = !DILocation(line: 796, column: 11, scope: !258)
!2101 = !DILocation(line: 796, column: 3, scope: !258)
!2102 = !DILocation(line: 798, column: 27, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !258, file: !78, line: 796, column: 32)
!2104 = !DILocation(line: 798, column: 32, scope: !2103)
!2105 = !DILocation(line: 798, column: 36, scope: !2103)
!2106 = !DILocation(line: 798, column: 51, scope: !2103)
!2107 = !DILocation(line: 798, column: 56, scope: !2103)
!2108 = !DILocation(line: 798, column: 12, scope: !2103)
!2109 = !DILocation(line: 798, column: 5, scope: !2103)
!2110 = !DILocation(line: 800, column: 28, scope: !2103)
!2111 = !DILocation(line: 800, column: 33, scope: !2103)
!2112 = !DILocation(line: 800, column: 37, scope: !2103)
!2113 = !DILocation(line: 800, column: 52, scope: !2103)
!2114 = !DILocation(line: 800, column: 57, scope: !2103)
!2115 = !DILocation(line: 800, column: 12, scope: !2103)
!2116 = !DILocation(line: 800, column: 5, scope: !2103)
!2117 = !DILocation(line: 802, column: 9, scope: !2103)
!2118 = !DILocation(line: 803, column: 11, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 803, column: 9)
!2120 = !DILocation(line: 803, column: 9, scope: !2103)
!2121 = !DILocation(line: 804, column: 7, scope: !2119)
!2122 = !DILocation(line: 805, column: 9, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 805, column: 9)
!2124 = !DILocation(line: 805, column: 29, scope: !2123)
!2125 = !DILocation(line: 805, column: 9, scope: !2103)
!2126 = !DILocation(line: 806, column: 11, scope: !2123)
!2127 = !DILocation(line: 806, column: 7, scope: !2123)
!2128 = !DILocation(line: 807, column: 19, scope: !2103)
!2129 = !DILocation(line: 807, column: 6, scope: !2103)
!2130 = !DILocation(line: 807, column: 17, scope: !2103)
!2131 = !DILocation(line: 808, column: 5, scope: !2103)
!2132 = !DILocation(line: 810, column: 19, scope: !2103)
!2133 = !DILocation(line: 810, column: 23, scope: !2103)
!2134 = !DILocation(line: 810, column: 6, scope: !2103)
!2135 = !DILocation(line: 810, column: 17, scope: !2103)
!2136 = !DILocation(line: 811, column: 5, scope: !2103)
!2137 = !DILocation(line: 813, column: 9, scope: !2103)
!2138 = !DILocation(line: 814, column: 11, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 814, column: 9)
!2140 = !DILocation(line: 814, column: 9, scope: !2103)
!2141 = !DILocation(line: 815, column: 7, scope: !2139)
!2142 = !DILocation(line: 816, column: 10, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 816, column: 9)
!2144 = !DILocation(line: 816, column: 9, scope: !2103)
!2145 = !DILocation(line: 817, column: 7, scope: !2143)
!2146 = !DILocation(line: 818, column: 9, scope: !2103)
!2147 = !DILocation(line: 819, column: 11, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 819, column: 9)
!2149 = !DILocation(line: 819, column: 9, scope: !2103)
!2150 = !DILocation(line: 820, column: 7, scope: !2148)
!2151 = !DILocation(line: 821, column: 10, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 821, column: 9)
!2153 = !DILocation(line: 821, column: 9, scope: !2103)
!2154 = !DILocation(line: 822, column: 11, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2152, file: !78, line: 821, column: 44)
!2156 = !DILocation(line: 823, column: 7, scope: !2155)
!2157 = !DILocation(line: 825, column: 19, scope: !2103)
!2158 = !DILocation(line: 825, column: 6, scope: !2103)
!2159 = !DILocation(line: 825, column: 17, scope: !2103)
!2160 = !DILocation(line: 826, column: 5, scope: !2103)
!2161 = !DILocation(line: 827, column: 3, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 827, column: 3)
!2163 = !DILocation(line: 827, column: 3, scope: !2103)
!2164 = !DILocation(line: 827, column: 3, scope: !2165)
!2165 = !DILexicalBlockFile(scope: !2162, file: !78, discriminator: 1)
!2166 = !DILocation(line: 827, column: 3, scope: !2167)
!2167 = !DILexicalBlockFile(scope: !2168, file: !78, discriminator: 2)
!2168 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 827, column: 3)
!2169 = !DILocation(line: 827, column: 3, scope: !2170)
!2170 = !DILexicalBlockFile(scope: !2171, file: !78, discriminator: 3)
!2171 = distinct !DILexicalBlock(scope: !2168, file: !78, line: 827, column: 3)
!2172 = !DILocation(line: 827, column: 3, scope: !2173)
!2173 = !DILexicalBlockFile(scope: !2103, file: !78, discriminator: 4)
!2174 = !DILocation(line: 827, column: 3, scope: !2175)
!2175 = !DILexicalBlockFile(scope: !2176, file: !78, discriminator: 5)
!2176 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 827, column: 3)
!2177 = !DILocation(line: 827, column: 3, scope: !2178)
!2178 = !DILexicalBlockFile(scope: !2176, file: !78, discriminator: 6)
!2179 = !DILocation(line: 827, column: 3, scope: !2180)
!2180 = !DILexicalBlockFile(scope: !2181, file: !78, discriminator: 7)
!2181 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 827, column: 3)
!2182 = !DILocation(line: 827, column: 3, scope: !2183)
!2183 = !DILexicalBlockFile(scope: !2184, file: !78, discriminator: 8)
!2184 = distinct !DILexicalBlock(scope: !2181, file: !78, line: 827, column: 3)
!2185 = !DILocation(line: 827, column: 3, scope: !2186)
!2186 = !DILexicalBlockFile(scope: !2103, file: !78, discriminator: 9)
!2187 = !DILocation(line: 827, column: 3, scope: !2188)
!2188 = !DILexicalBlockFile(scope: !2189, file: !78, discriminator: 10)
!2189 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 827, column: 3)
!2190 = !DILocation(line: 827, column: 3, scope: !2191)
!2191 = !DILexicalBlockFile(scope: !2189, file: !78, discriminator: 11)
!2192 = !DILocation(line: 827, column: 3, scope: !2193)
!2193 = !DILexicalBlockFile(scope: !2194, file: !78, discriminator: 12)
!2194 = distinct !DILexicalBlock(scope: !2103, file: !78, line: 827, column: 3)
!2195 = !DILocation(line: 827, column: 3, scope: !2196)
!2196 = !DILexicalBlockFile(scope: !2197, file: !78, discriminator: 13)
!2197 = distinct !DILexicalBlock(scope: !2194, file: !78, line: 827, column: 3)
!2198 = !DILocation(line: 827, column: 3, scope: !2199)
!2199 = !DILexicalBlockFile(scope: !2103, file: !78, discriminator: 14)
!2200 = !DILocation(line: 827, column: 3, scope: !2201)
!2201 = !DILexicalBlockFile(scope: !2103, file: !78, discriminator: 15)
!2202 = !DILocation(line: 829, column: 9, scope: !2103)
!2203 = !DILocation(line: 830, column: 5, scope: !2103)
!2204 = !DILocation(line: 832, column: 3, scope: !258)
!2205 = !DILocation(line: 832, column: 10, scope: !2206)
!2206 = !DILexicalBlockFile(scope: !258, file: !78, discriminator: 1)
!2207 = !DILocation(line: 832, column: 3, scope: !2206)
!2208 = !DILocation(line: 833, column: 13, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !258, file: !78, line: 832, column: 35)
!2210 = !DILocation(line: 833, column: 5, scope: !2209)
!2211 = !DILocation(line: 842, column: 5, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !78, line: 842, column: 5)
!2213 = distinct !DILexicalBlock(scope: !2209, file: !78, line: 833, column: 34)
!2214 = !DILocation(line: 842, column: 5, scope: !2215)
!2215 = !DILexicalBlockFile(scope: !2212, file: !78, discriminator: 1)
!2216 = !DILocation(line: 842, column: 5, scope: !2217)
!2217 = !DILexicalBlockFile(scope: !2218, file: !78, discriminator: 2)
!2218 = distinct !DILexicalBlock(scope: !2212, file: !78, line: 842, column: 5)
!2219 = !DILocation(line: 842, column: 5, scope: !2220)
!2220 = !DILexicalBlockFile(scope: !2213, file: !78, discriminator: 3)
!2221 = !DILocation(line: 842, column: 18, scope: !2222)
!2222 = !DILexicalBlockFile(scope: !2223, file: !78, discriminator: 4)
!2223 = distinct !DILexicalBlock(scope: !2213, file: !78, line: 842, column: 18)
!2224 = !DILocation(line: 842, column: 18, scope: !2225)
!2225 = !DILexicalBlockFile(scope: !2223, file: !78, discriminator: 5)
!2226 = !DILocation(line: 842, column: 18, scope: !2227)
!2227 = !DILexicalBlockFile(scope: !2228, file: !78, discriminator: 6)
!2228 = distinct !DILexicalBlock(scope: !2223, file: !78, line: 842, column: 18)
!2229 = !DILocation(line: 842, column: 18, scope: !2230)
!2230 = !DILexicalBlockFile(scope: !2213, file: !78, discriminator: 7)
!2231 = !DILocation(line: 842, column: 31, scope: !2232)
!2232 = !DILexicalBlockFile(scope: !2233, file: !78, discriminator: 8)
!2233 = distinct !DILexicalBlock(scope: !2213, file: !78, line: 842, column: 31)
!2234 = !DILocation(line: 842, column: 31, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2233, file: !78, discriminator: 9)
!2236 = !DILocation(line: 842, column: 31, scope: !2237)
!2237 = !DILexicalBlockFile(scope: !2238, file: !78, discriminator: 10)
!2238 = distinct !DILexicalBlock(scope: !2233, file: !78, line: 842, column: 31)
!2239 = !DILocation(line: 842, column: 31, scope: !2240)
!2240 = !DILexicalBlockFile(scope: !2213, file: !78, discriminator: 11)
!2241 = !DILocation(line: 845, column: 11, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2213, file: !78, line: 845, column: 11)
!2243 = !DILocation(line: 845, column: 11, scope: !2213)
!2244 = !DILocation(line: 846, column: 15, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2246, file: !78, line: 846, column: 14)
!2246 = distinct !DILexicalBlock(scope: !2242, file: !78, line: 845, column: 40)
!2247 = !DILocation(line: 846, column: 14, scope: !2246)
!2248 = !DILocation(line: 847, column: 16, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2245, file: !78, line: 846, column: 65)
!2250 = !DILocation(line: 848, column: 12, scope: !2249)
!2251 = !DILocation(line: 850, column: 14, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2246, file: !78, line: 850, column: 14)
!2253 = !DILocation(line: 850, column: 14, scope: !2246)
!2254 = !DILocation(line: 851, column: 17, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2256, file: !78, line: 851, column: 16)
!2256 = distinct !DILexicalBlock(scope: !2252, file: !78, line: 850, column: 43)
!2257 = !DILocation(line: 851, column: 16, scope: !2256)
!2258 = !DILocation(line: 852, column: 18, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2255, file: !78, line: 851, column: 67)
!2260 = !DILocation(line: 853, column: 14, scope: !2259)
!2261 = !DILocation(line: 855, column: 26, scope: !2256)
!2262 = !DILocation(line: 855, column: 30, scope: !2256)
!2263 = !DILocation(line: 855, column: 13, scope: !2256)
!2264 = !DILocation(line: 855, column: 24, scope: !2256)
!2265 = !DILocation(line: 856, column: 12, scope: !2256)
!2266 = !DILocation(line: 858, column: 7, scope: !2246)
!2267 = !DILocation(line: 845, column: 11, scope: !2268)
!2268 = !DILexicalBlockFile(scope: !2242, file: !78, discriminator: 1)
!2269 = !DILocation(line: 867, column: 21, scope: !2213)
!2270 = !DILocation(line: 867, column: 8, scope: !2213)
!2271 = !DILocation(line: 867, column: 19, scope: !2213)
!2272 = !DILocation(line: 868, column: 7, scope: !2213)
!2273 = !DILocation(line: 870, column: 11, scope: !2213)
!2274 = !DILocation(line: 871, column: 7, scope: !2213)
!2275 = !DILocation(line: 832, column: 3, scope: !2276)
!2276 = !DILexicalBlockFile(scope: !258, file: !78, discriminator: 2)
!2277 = !DILocation(line: 874, column: 17, scope: !258)
!2278 = !DILocation(line: 874, column: 4, scope: !258)
!2279 = !DILocation(line: 874, column: 15, scope: !258)
!2280 = !DILocation(line: 875, column: 3, scope: !258)
!2281 = !DILocation(line: 876, column: 1, scope: !258)
!2282 = !DILocalVariable(name: "enc", arg: 1, scope: !266, file: !78, line: 317, type: !82)
!2283 = !DILocation(line: 317, column: 41, scope: !266)
!2284 = !DILocalVariable(name: "ptr", arg: 2, scope: !266, file: !78, line: 317, type: !93)
!2285 = !DILocation(line: 317, column: 58, scope: !266)
!2286 = !DILocalVariable(name: "end", arg: 3, scope: !266, file: !78, line: 318, type: !93)
!2287 = !DILocation(line: 318, column: 37, scope: !266)
!2288 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !266, file: !78, line: 318, type: !95)
!2289 = !DILocation(line: 318, column: 55, scope: !266)
!2290 = !DILocation(line: 320, column: 7, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !266, file: !78, line: 320, column: 7)
!2292 = !DILocation(line: 320, column: 14, scope: !2291)
!2293 = !DILocation(line: 320, column: 11, scope: !2291)
!2294 = !DILocation(line: 320, column: 7, scope: !266)
!2295 = !DILocation(line: 321, column: 5, scope: !2291)
!2296 = !DILocation(line: 331, column: 11, scope: !266)
!2297 = !DILocation(line: 331, column: 3, scope: !266)
!2298 = !DILocation(line: 333, column: 9, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !266, file: !78, line: 331, column: 32)
!2300 = !DILocation(line: 334, column: 5, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2302, file: !78, line: 334, column: 5)
!2302 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 334, column: 5)
!2303 = !DILocation(line: 334, column: 5, scope: !2302)
!2304 = !DILocation(line: 334, column: 5, scope: !2305)
!2305 = !DILexicalBlockFile(scope: !2306, file: !78, discriminator: 1)
!2306 = distinct !DILexicalBlock(scope: !2301, file: !78, line: 334, column: 5)
!2307 = !DILocation(line: 335, column: 10, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 335, column: 9)
!2309 = !DILocation(line: 335, column: 9, scope: !2299)
!2310 = !DILocation(line: 336, column: 7, scope: !2308)
!2311 = !DILocation(line: 337, column: 9, scope: !2299)
!2312 = !DILocation(line: 338, column: 5, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2314, file: !78, line: 338, column: 5)
!2314 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 338, column: 5)
!2315 = !DILocation(line: 338, column: 5, scope: !2314)
!2316 = !DILocation(line: 338, column: 5, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !2318, file: !78, discriminator: 1)
!2318 = distinct !DILexicalBlock(scope: !2313, file: !78, line: 338, column: 5)
!2319 = !DILocation(line: 339, column: 10, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 339, column: 9)
!2321 = !DILocation(line: 339, column: 9, scope: !2299)
!2322 = !DILocation(line: 340, column: 11, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2320, file: !78, line: 339, column: 44)
!2324 = !DILocation(line: 341, column: 7, scope: !2323)
!2325 = !DILocation(line: 343, column: 19, scope: !2299)
!2326 = !DILocation(line: 343, column: 23, scope: !2299)
!2327 = !DILocation(line: 343, column: 6, scope: !2299)
!2328 = !DILocation(line: 343, column: 17, scope: !2299)
!2329 = !DILocation(line: 344, column: 5, scope: !2299)
!2330 = !DILocation(line: 346, column: 9, scope: !2299)
!2331 = !DILocation(line: 347, column: 5, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2333, file: !78, line: 347, column: 5)
!2333 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 347, column: 5)
!2334 = !DILocation(line: 347, column: 5, scope: !2333)
!2335 = !DILocation(line: 347, column: 5, scope: !2336)
!2336 = !DILexicalBlockFile(scope: !2337, file: !78, discriminator: 1)
!2337 = distinct !DILexicalBlock(scope: !2332, file: !78, line: 347, column: 5)
!2338 = !DILocation(line: 348, column: 9, scope: !2339)
!2339 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 348, column: 9)
!2340 = !DILocation(line: 348, column: 29, scope: !2339)
!2341 = !DILocation(line: 348, column: 9, scope: !2299)
!2342 = !DILocation(line: 349, column: 11, scope: !2339)
!2343 = !DILocation(line: 349, column: 7, scope: !2339)
!2344 = !DILocation(line: 350, column: 19, scope: !2299)
!2345 = !DILocation(line: 350, column: 6, scope: !2299)
!2346 = !DILocation(line: 350, column: 17, scope: !2299)
!2347 = !DILocation(line: 351, column: 5, scope: !2299)
!2348 = !DILocation(line: 353, column: 19, scope: !2299)
!2349 = !DILocation(line: 353, column: 23, scope: !2299)
!2350 = !DILocation(line: 353, column: 6, scope: !2299)
!2351 = !DILocation(line: 353, column: 17, scope: !2299)
!2352 = !DILocation(line: 354, column: 5, scope: !2299)
!2353 = !DILocation(line: 355, column: 3, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 355, column: 3)
!2355 = !DILocation(line: 355, column: 3, scope: !2299)
!2356 = !DILocation(line: 355, column: 3, scope: !2357)
!2357 = !DILexicalBlockFile(scope: !2354, file: !78, discriminator: 1)
!2358 = !DILocation(line: 355, column: 3, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2360, file: !78, discriminator: 2)
!2360 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 355, column: 3)
!2361 = !DILocation(line: 355, column: 3, scope: !2362)
!2362 = !DILexicalBlockFile(scope: !2363, file: !78, discriminator: 3)
!2363 = distinct !DILexicalBlock(scope: !2360, file: !78, line: 355, column: 3)
!2364 = !DILocation(line: 355, column: 3, scope: !2365)
!2365 = !DILexicalBlockFile(scope: !2299, file: !78, discriminator: 4)
!2366 = !DILocation(line: 355, column: 3, scope: !2367)
!2367 = !DILexicalBlockFile(scope: !2368, file: !78, discriminator: 5)
!2368 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 355, column: 3)
!2369 = !DILocation(line: 355, column: 3, scope: !2370)
!2370 = !DILexicalBlockFile(scope: !2368, file: !78, discriminator: 6)
!2371 = !DILocation(line: 355, column: 3, scope: !2372)
!2372 = !DILexicalBlockFile(scope: !2373, file: !78, discriminator: 7)
!2373 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 355, column: 3)
!2374 = !DILocation(line: 355, column: 3, scope: !2375)
!2375 = !DILexicalBlockFile(scope: !2376, file: !78, discriminator: 8)
!2376 = distinct !DILexicalBlock(scope: !2373, file: !78, line: 355, column: 3)
!2377 = !DILocation(line: 355, column: 3, scope: !2378)
!2378 = !DILexicalBlockFile(scope: !2299, file: !78, discriminator: 9)
!2379 = !DILocation(line: 355, column: 3, scope: !2380)
!2380 = !DILexicalBlockFile(scope: !2381, file: !78, discriminator: 10)
!2381 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 355, column: 3)
!2382 = !DILocation(line: 355, column: 3, scope: !2383)
!2383 = !DILexicalBlockFile(scope: !2381, file: !78, discriminator: 11)
!2384 = !DILocation(line: 355, column: 3, scope: !2385)
!2385 = !DILexicalBlockFile(scope: !2386, file: !78, discriminator: 12)
!2386 = distinct !DILexicalBlock(scope: !2299, file: !78, line: 355, column: 3)
!2387 = !DILocation(line: 355, column: 3, scope: !2388)
!2388 = !DILexicalBlockFile(scope: !2389, file: !78, discriminator: 13)
!2389 = distinct !DILexicalBlock(scope: !2386, file: !78, line: 355, column: 3)
!2390 = !DILocation(line: 355, column: 3, scope: !2391)
!2391 = !DILexicalBlockFile(scope: !2299, file: !78, discriminator: 14)
!2392 = !DILocation(line: 355, column: 3, scope: !2393)
!2393 = !DILexicalBlockFile(scope: !2299, file: !78, discriminator: 15)
!2394 = !DILocation(line: 357, column: 9, scope: !2299)
!2395 = !DILocation(line: 358, column: 5, scope: !2299)
!2396 = !DILocation(line: 360, column: 3, scope: !266)
!2397 = !DILocation(line: 360, column: 10, scope: !2398)
!2398 = !DILexicalBlockFile(scope: !266, file: !78, discriminator: 1)
!2399 = !DILocation(line: 360, column: 3, scope: !2398)
!2400 = !DILocation(line: 361, column: 13, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !266, file: !78, line: 360, column: 35)
!2402 = !DILocation(line: 361, column: 5, scope: !2401)
!2403 = !DILocation(line: 370, column: 5, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2405, file: !78, line: 370, column: 5)
!2405 = distinct !DILexicalBlock(scope: !2401, file: !78, line: 361, column: 34)
!2406 = !DILocation(line: 370, column: 5, scope: !2407)
!2407 = !DILexicalBlockFile(scope: !2404, file: !78, discriminator: 1)
!2408 = !DILocation(line: 370, column: 5, scope: !2409)
!2409 = !DILexicalBlockFile(scope: !2410, file: !78, discriminator: 2)
!2410 = distinct !DILexicalBlock(scope: !2404, file: !78, line: 370, column: 5)
!2411 = !DILocation(line: 370, column: 5, scope: !2412)
!2412 = !DILexicalBlockFile(scope: !2405, file: !78, discriminator: 3)
!2413 = !DILocation(line: 370, column: 18, scope: !2414)
!2414 = !DILexicalBlockFile(scope: !2415, file: !78, discriminator: 4)
!2415 = distinct !DILexicalBlock(scope: !2405, file: !78, line: 370, column: 18)
!2416 = !DILocation(line: 370, column: 18, scope: !2417)
!2417 = !DILexicalBlockFile(scope: !2415, file: !78, discriminator: 5)
!2418 = !DILocation(line: 370, column: 18, scope: !2419)
!2419 = !DILexicalBlockFile(scope: !2420, file: !78, discriminator: 6)
!2420 = distinct !DILexicalBlock(scope: !2415, file: !78, line: 370, column: 18)
!2421 = !DILocation(line: 370, column: 18, scope: !2422)
!2422 = !DILexicalBlockFile(scope: !2405, file: !78, discriminator: 7)
!2423 = !DILocation(line: 370, column: 31, scope: !2424)
!2424 = !DILexicalBlockFile(scope: !2425, file: !78, discriminator: 8)
!2425 = distinct !DILexicalBlock(scope: !2405, file: !78, line: 370, column: 31)
!2426 = !DILocation(line: 370, column: 31, scope: !2427)
!2427 = !DILexicalBlockFile(scope: !2425, file: !78, discriminator: 9)
!2428 = !DILocation(line: 370, column: 31, scope: !2429)
!2429 = !DILexicalBlockFile(scope: !2430, file: !78, discriminator: 10)
!2430 = distinct !DILexicalBlock(scope: !2425, file: !78, line: 370, column: 31)
!2431 = !DILocation(line: 370, column: 31, scope: !2432)
!2432 = !DILexicalBlockFile(scope: !2405, file: !78, discriminator: 11)
!2433 = !DILocation(line: 378, column: 21, scope: !2405)
!2434 = !DILocation(line: 378, column: 8, scope: !2405)
!2435 = !DILocation(line: 378, column: 19, scope: !2405)
!2436 = !DILocation(line: 379, column: 7, scope: !2405)
!2437 = !DILocation(line: 381, column: 11, scope: !2405)
!2438 = !DILocation(line: 382, column: 7, scope: !2405)
!2439 = !DILocation(line: 360, column: 3, scope: !2440)
!2440 = !DILexicalBlockFile(scope: !266, file: !78, discriminator: 2)
!2441 = !DILocation(line: 385, column: 17, scope: !266)
!2442 = !DILocation(line: 385, column: 4, scope: !266)
!2443 = !DILocation(line: 385, column: 15, scope: !266)
!2444 = !DILocation(line: 386, column: 3, scope: !266)
!2445 = !DILocation(line: 387, column: 1, scope: !266)
!2446 = !DILocalVariable(name: "enc", arg: 1, scope: !267, file: !78, line: 1195, type: !82)
!2447 = !DILocation(line: 1195, column: 43, scope: !267)
!2448 = !DILocalVariable(name: "ptr", arg: 2, scope: !267, file: !78, line: 1195, type: !93)
!2449 = !DILocation(line: 1195, column: 60, scope: !267)
!2450 = !DILocalVariable(name: "end", arg: 3, scope: !267, file: !78, line: 1196, type: !93)
!2451 = !DILocation(line: 1196, column: 39, scope: !267)
!2452 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !267, file: !78, line: 1196, type: !95)
!2453 = !DILocation(line: 1196, column: 57, scope: !267)
!2454 = !DILocalVariable(name: "start", scope: !267, file: !78, line: 1198, type: !93)
!2455 = !DILocation(line: 1198, column: 15, scope: !267)
!2456 = !DILocation(line: 1199, column: 7, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !267, file: !78, line: 1199, column: 7)
!2458 = !DILocation(line: 1199, column: 14, scope: !2457)
!2459 = !DILocation(line: 1199, column: 11, scope: !2457)
!2460 = !DILocation(line: 1199, column: 7, scope: !267)
!2461 = !DILocation(line: 1200, column: 5, scope: !2457)
!2462 = !DILocation(line: 1201, column: 11, scope: !267)
!2463 = !DILocation(line: 1201, column: 9, scope: !267)
!2464 = !DILocation(line: 1202, column: 3, scope: !267)
!2465 = !DILocation(line: 1202, column: 10, scope: !2466)
!2466 = !DILexicalBlockFile(scope: !267, file: !78, discriminator: 1)
!2467 = !DILocation(line: 1202, column: 3, scope: !2466)
!2468 = !DILocation(line: 1203, column: 13, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !267, file: !78, line: 1202, column: 35)
!2470 = !DILocation(line: 1203, column: 5, scope: !2469)
!2471 = !DILocation(line: 1206, column: 5, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2469, file: !78, line: 1203, column: 34)
!2473 = !DILocation(line: 1206, column: 18, scope: !2474)
!2474 = !DILexicalBlockFile(scope: !2472, file: !78, discriminator: 1)
!2475 = !DILocation(line: 1206, column: 31, scope: !2476)
!2476 = !DILexicalBlockFile(scope: !2472, file: !78, discriminator: 2)
!2477 = !DILocation(line: 1209, column: 11, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2472, file: !78, line: 1209, column: 11)
!2479 = !DILocation(line: 1209, column: 18, scope: !2478)
!2480 = !DILocation(line: 1209, column: 15, scope: !2478)
!2481 = !DILocation(line: 1209, column: 11, scope: !2472)
!2482 = !DILocation(line: 1210, column: 32, scope: !2478)
!2483 = !DILocation(line: 1210, column: 37, scope: !2478)
!2484 = !DILocation(line: 1210, column: 41, scope: !2478)
!2485 = !DILocation(line: 1210, column: 56, scope: !2478)
!2486 = !DILocation(line: 1210, column: 61, scope: !2478)
!2487 = !DILocation(line: 1210, column: 16, scope: !2478)
!2488 = !DILocation(line: 1210, column: 9, scope: !2478)
!2489 = !DILocation(line: 1211, column: 21, scope: !2472)
!2490 = !DILocation(line: 1211, column: 8, scope: !2472)
!2491 = !DILocation(line: 1211, column: 19, scope: !2472)
!2492 = !DILocation(line: 1212, column: 7, scope: !2472)
!2493 = !DILocation(line: 1215, column: 21, scope: !2472)
!2494 = !DILocation(line: 1215, column: 8, scope: !2472)
!2495 = !DILocation(line: 1215, column: 19, scope: !2472)
!2496 = !DILocation(line: 1216, column: 7, scope: !2472)
!2497 = !DILocation(line: 1218, column: 11, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2472, file: !78, line: 1218, column: 11)
!2499 = !DILocation(line: 1218, column: 18, scope: !2498)
!2500 = !DILocation(line: 1218, column: 15, scope: !2498)
!2501 = !DILocation(line: 1218, column: 11, scope: !2472)
!2502 = !DILocation(line: 1219, column: 23, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2498, file: !78, line: 1218, column: 25)
!2504 = !DILocation(line: 1219, column: 27, scope: !2503)
!2505 = !DILocation(line: 1219, column: 10, scope: !2503)
!2506 = !DILocation(line: 1219, column: 21, scope: !2503)
!2507 = !DILocation(line: 1220, column: 9, scope: !2503)
!2508 = !DILocation(line: 1222, column: 21, scope: !2472)
!2509 = !DILocation(line: 1222, column: 8, scope: !2472)
!2510 = !DILocation(line: 1222, column: 19, scope: !2472)
!2511 = !DILocation(line: 1223, column: 7, scope: !2472)
!2512 = !DILocation(line: 1225, column: 11, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2472, file: !78, line: 1225, column: 11)
!2514 = !DILocation(line: 1225, column: 18, scope: !2513)
!2515 = !DILocation(line: 1225, column: 15, scope: !2513)
!2516 = !DILocation(line: 1225, column: 11, scope: !2472)
!2517 = !DILocation(line: 1226, column: 13, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2513, file: !78, line: 1225, column: 25)
!2519 = !DILocation(line: 1227, column: 15, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2518, file: !78, line: 1227, column: 13)
!2521 = !DILocation(line: 1227, column: 13, scope: !2518)
!2522 = !DILocation(line: 1228, column: 11, scope: !2520)
!2523 = !DILocation(line: 1229, column: 13, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2518, file: !78, line: 1229, column: 13)
!2525 = !DILocation(line: 1229, column: 33, scope: !2524)
!2526 = !DILocation(line: 1229, column: 13, scope: !2518)
!2527 = !DILocation(line: 1230, column: 15, scope: !2524)
!2528 = !DILocation(line: 1230, column: 11, scope: !2524)
!2529 = !DILocation(line: 1231, column: 23, scope: !2518)
!2530 = !DILocation(line: 1231, column: 10, scope: !2518)
!2531 = !DILocation(line: 1231, column: 21, scope: !2518)
!2532 = !DILocation(line: 1232, column: 9, scope: !2518)
!2533 = !DILocation(line: 1234, column: 21, scope: !2472)
!2534 = !DILocation(line: 1234, column: 8, scope: !2472)
!2535 = !DILocation(line: 1234, column: 19, scope: !2472)
!2536 = !DILocation(line: 1235, column: 7, scope: !2472)
!2537 = !DILocation(line: 1237, column: 11, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2472, file: !78, line: 1237, column: 11)
!2539 = !DILocation(line: 1237, column: 18, scope: !2538)
!2540 = !DILocation(line: 1237, column: 15, scope: !2538)
!2541 = !DILocation(line: 1237, column: 11, scope: !2472)
!2542 = !DILocation(line: 1238, column: 23, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2538, file: !78, line: 1237, column: 25)
!2544 = !DILocation(line: 1238, column: 27, scope: !2543)
!2545 = !DILocation(line: 1238, column: 10, scope: !2543)
!2546 = !DILocation(line: 1238, column: 21, scope: !2543)
!2547 = !DILocation(line: 1239, column: 9, scope: !2543)
!2548 = !DILocation(line: 1241, column: 21, scope: !2472)
!2549 = !DILocation(line: 1241, column: 8, scope: !2472)
!2550 = !DILocation(line: 1241, column: 19, scope: !2472)
!2551 = !DILocation(line: 1242, column: 7, scope: !2472)
!2552 = !DILocation(line: 1244, column: 11, scope: !2472)
!2553 = !DILocation(line: 1245, column: 7, scope: !2472)
!2554 = !DILocation(line: 1202, column: 3, scope: !2555)
!2555 = !DILexicalBlockFile(scope: !267, file: !78, discriminator: 2)
!2556 = !DILocation(line: 1248, column: 17, scope: !267)
!2557 = !DILocation(line: 1248, column: 4, scope: !267)
!2558 = !DILocation(line: 1248, column: 15, scope: !267)
!2559 = !DILocation(line: 1249, column: 3, scope: !267)
!2560 = !DILocation(line: 1250, column: 1, scope: !267)
!2561 = !DILocalVariable(name: "enc", arg: 1, scope: !268, file: !78, line: 1253, type: !82)
!2562 = !DILocation(line: 1253, column: 40, scope: !268)
!2563 = !DILocalVariable(name: "ptr", arg: 2, scope: !268, file: !78, line: 1253, type: !93)
!2564 = !DILocation(line: 1253, column: 57, scope: !268)
!2565 = !DILocalVariable(name: "end", arg: 3, scope: !268, file: !78, line: 1254, type: !93)
!2566 = !DILocation(line: 1254, column: 36, scope: !268)
!2567 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !268, file: !78, line: 1254, type: !95)
!2568 = !DILocation(line: 1254, column: 54, scope: !268)
!2569 = !DILocalVariable(name: "start", scope: !268, file: !78, line: 1256, type: !93)
!2570 = !DILocation(line: 1256, column: 15, scope: !268)
!2571 = !DILocation(line: 1257, column: 7, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !268, file: !78, line: 1257, column: 7)
!2573 = !DILocation(line: 1257, column: 14, scope: !2572)
!2574 = !DILocation(line: 1257, column: 11, scope: !2572)
!2575 = !DILocation(line: 1257, column: 7, scope: !268)
!2576 = !DILocation(line: 1258, column: 5, scope: !2572)
!2577 = !DILocation(line: 1259, column: 11, scope: !268)
!2578 = !DILocation(line: 1259, column: 9, scope: !268)
!2579 = !DILocation(line: 1260, column: 3, scope: !268)
!2580 = !DILocation(line: 1260, column: 10, scope: !2581)
!2581 = !DILexicalBlockFile(scope: !268, file: !78, discriminator: 1)
!2582 = !DILocation(line: 1260, column: 3, scope: !2581)
!2583 = !DILocation(line: 1261, column: 13, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !268, file: !78, line: 1260, column: 35)
!2585 = !DILocation(line: 1261, column: 5, scope: !2584)
!2586 = !DILocation(line: 1264, column: 5, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2584, file: !78, line: 1261, column: 34)
!2588 = !DILocation(line: 1264, column: 18, scope: !2589)
!2589 = !DILexicalBlockFile(scope: !2587, file: !78, discriminator: 1)
!2590 = !DILocation(line: 1264, column: 31, scope: !2591)
!2591 = !DILexicalBlockFile(scope: !2587, file: !78, discriminator: 2)
!2592 = !DILocation(line: 1267, column: 11, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2587, file: !78, line: 1267, column: 11)
!2594 = !DILocation(line: 1267, column: 18, scope: !2593)
!2595 = !DILocation(line: 1267, column: 15, scope: !2593)
!2596 = !DILocation(line: 1267, column: 11, scope: !2587)
!2597 = !DILocation(line: 1268, column: 32, scope: !2593)
!2598 = !DILocation(line: 1268, column: 37, scope: !2593)
!2599 = !DILocation(line: 1268, column: 41, scope: !2593)
!2600 = !DILocation(line: 1268, column: 56, scope: !2593)
!2601 = !DILocation(line: 1268, column: 61, scope: !2593)
!2602 = !DILocation(line: 1268, column: 16, scope: !2593)
!2603 = !DILocation(line: 1268, column: 9, scope: !2593)
!2604 = !DILocation(line: 1269, column: 21, scope: !2587)
!2605 = !DILocation(line: 1269, column: 8, scope: !2587)
!2606 = !DILocation(line: 1269, column: 19, scope: !2587)
!2607 = !DILocation(line: 1270, column: 7, scope: !2587)
!2608 = !DILocation(line: 1272, column: 11, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2587, file: !78, line: 1272, column: 11)
!2610 = !DILocation(line: 1272, column: 18, scope: !2609)
!2611 = !DILocation(line: 1272, column: 15, scope: !2609)
!2612 = !DILocation(line: 1272, column: 11, scope: !2587)
!2613 = !DILocalVariable(name: "tok", scope: !2614, file: !78, line: 1273, type: !7)
!2614 = distinct !DILexicalBlock(scope: !2609, file: !78, line: 1272, column: 25)
!2615 = !DILocation(line: 1273, column: 13, scope: !2614)
!2616 = !DILocation(line: 1273, column: 40, scope: !2614)
!2617 = !DILocation(line: 1273, column: 45, scope: !2614)
!2618 = !DILocation(line: 1273, column: 49, scope: !2614)
!2619 = !DILocation(line: 1274, column: 40, scope: !2614)
!2620 = !DILocation(line: 1274, column: 45, scope: !2614)
!2621 = !DILocation(line: 1273, column: 20, scope: !2614)
!2622 = !DILocation(line: 1275, column: 17, scope: !2614)
!2623 = !DILocation(line: 1275, column: 21, scope: !2614)
!2624 = !DILocation(line: 1275, column: 16, scope: !2614)
!2625 = !DILocation(line: 1275, column: 16, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2614, file: !78, discriminator: 1)
!2627 = !DILocation(line: 1275, column: 61, scope: !2628)
!2628 = !DILexicalBlockFile(scope: !2614, file: !78, discriminator: 2)
!2629 = !DILocation(line: 1275, column: 16, scope: !2628)
!2630 = !DILocation(line: 1275, column: 16, scope: !2631)
!2631 = !DILexicalBlockFile(scope: !2614, file: !78, discriminator: 3)
!2632 = !DILocation(line: 1275, column: 9, scope: !2631)
!2633 = !DILocation(line: 1277, column: 21, scope: !2587)
!2634 = !DILocation(line: 1277, column: 8, scope: !2587)
!2635 = !DILocation(line: 1277, column: 19, scope: !2587)
!2636 = !DILocation(line: 1278, column: 7, scope: !2587)
!2637 = !DILocation(line: 1280, column: 11, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2587, file: !78, line: 1280, column: 11)
!2639 = !DILocation(line: 1280, column: 18, scope: !2638)
!2640 = !DILocation(line: 1280, column: 15, scope: !2638)
!2641 = !DILocation(line: 1280, column: 11, scope: !2587)
!2642 = !DILocation(line: 1281, column: 23, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2638, file: !78, line: 1280, column: 25)
!2644 = !DILocation(line: 1281, column: 27, scope: !2643)
!2645 = !DILocation(line: 1281, column: 10, scope: !2643)
!2646 = !DILocation(line: 1281, column: 21, scope: !2643)
!2647 = !DILocation(line: 1282, column: 9, scope: !2643)
!2648 = !DILocation(line: 1284, column: 21, scope: !2587)
!2649 = !DILocation(line: 1284, column: 8, scope: !2587)
!2650 = !DILocation(line: 1284, column: 19, scope: !2587)
!2651 = !DILocation(line: 1285, column: 7, scope: !2587)
!2652 = !DILocation(line: 1287, column: 11, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2587, file: !78, line: 1287, column: 11)
!2654 = !DILocation(line: 1287, column: 18, scope: !2653)
!2655 = !DILocation(line: 1287, column: 15, scope: !2653)
!2656 = !DILocation(line: 1287, column: 11, scope: !2587)
!2657 = !DILocation(line: 1288, column: 13, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2653, file: !78, line: 1287, column: 25)
!2659 = !DILocation(line: 1289, column: 15, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2658, file: !78, line: 1289, column: 13)
!2661 = !DILocation(line: 1289, column: 13, scope: !2658)
!2662 = !DILocation(line: 1290, column: 11, scope: !2660)
!2663 = !DILocation(line: 1291, column: 13, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2658, file: !78, line: 1291, column: 13)
!2665 = !DILocation(line: 1291, column: 33, scope: !2664)
!2666 = !DILocation(line: 1291, column: 13, scope: !2658)
!2667 = !DILocation(line: 1292, column: 15, scope: !2664)
!2668 = !DILocation(line: 1292, column: 11, scope: !2664)
!2669 = !DILocation(line: 1293, column: 23, scope: !2658)
!2670 = !DILocation(line: 1293, column: 10, scope: !2658)
!2671 = !DILocation(line: 1293, column: 21, scope: !2658)
!2672 = !DILocation(line: 1294, column: 9, scope: !2658)
!2673 = !DILocation(line: 1296, column: 21, scope: !2587)
!2674 = !DILocation(line: 1296, column: 8, scope: !2587)
!2675 = !DILocation(line: 1296, column: 19, scope: !2587)
!2676 = !DILocation(line: 1297, column: 7, scope: !2587)
!2677 = !DILocation(line: 1299, column: 11, scope: !2587)
!2678 = !DILocation(line: 1300, column: 7, scope: !2587)
!2679 = !DILocation(line: 1260, column: 3, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !268, file: !78, discriminator: 2)
!2681 = !DILocation(line: 1303, column: 17, scope: !268)
!2682 = !DILocation(line: 1303, column: 4, scope: !268)
!2683 = !DILocation(line: 1303, column: 15, scope: !268)
!2684 = !DILocation(line: 1304, column: 3, scope: !268)
!2685 = !DILocation(line: 1305, column: 1, scope: !268)
!2686 = !DILocalVariable(name: "enc", arg: 1, scope: !269, file: !78, line: 1614, type: !82)
!2687 = !DILocation(line: 1614, column: 34, scope: !269)
!2688 = !DILocalVariable(name: "ptr1", arg: 2, scope: !269, file: !78, line: 1614, type: !93)
!2689 = !DILocation(line: 1614, column: 51, scope: !269)
!2690 = !DILocalVariable(name: "ptr2", arg: 3, scope: !269, file: !78, line: 1614, type: !93)
!2691 = !DILocation(line: 1614, column: 69, scope: !269)
!2692 = !DILocation(line: 1616, column: 3, scope: !269)
!2693 = !DILocation(line: 1617, column: 13, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2695, file: !78, line: 1616, column: 12)
!2695 = distinct !DILexicalBlock(scope: !2696, file: !78, line: 1616, column: 3)
!2696 = distinct !DILexicalBlock(scope: !269, file: !78, line: 1616, column: 3)
!2697 = !DILocation(line: 1617, column: 5, scope: !2694)
!2698 = !DILocation(line: 1622, column: 5, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2700, file: !78, line: 1622, column: 5)
!2700 = distinct !DILexicalBlock(scope: !2694, file: !78, line: 1617, column: 35)
!2701 = !DILocation(line: 1622, column: 5, scope: !2700)
!2702 = !DILocation(line: 1622, column: 5, scope: !2703)
!2703 = !DILexicalBlockFile(scope: !2699, file: !78, discriminator: 1)
!2704 = !DILocation(line: 1622, column: 5, scope: !2705)
!2705 = !DILexicalBlockFile(scope: !2699, file: !78, discriminator: 2)
!2706 = !DILocation(line: 1622, column: 18, scope: !2707)
!2707 = !DILexicalBlockFile(scope: !2708, file: !78, discriminator: 3)
!2708 = distinct !DILexicalBlock(scope: !2700, file: !78, line: 1622, column: 18)
!2709 = !DILocation(line: 1622, column: 18, scope: !2710)
!2710 = !DILexicalBlockFile(scope: !2708, file: !78, discriminator: 4)
!2711 = !DILocation(line: 1622, column: 18, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2708, file: !78, discriminator: 5)
!2713 = !DILocation(line: 1622, column: 31, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2715, file: !78, discriminator: 6)
!2715 = distinct !DILexicalBlock(scope: !2700, file: !78, line: 1622, column: 31)
!2716 = !DILocation(line: 1622, column: 31, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !2715, file: !78, discriminator: 7)
!2718 = !DILocation(line: 1625, column: 16, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2700, file: !78, line: 1625, column: 11)
!2720 = !DILocation(line: 1625, column: 11, scope: !2719)
!2721 = !DILocation(line: 1625, column: 27, scope: !2719)
!2722 = !DILocation(line: 1625, column: 22, scope: !2719)
!2723 = !DILocation(line: 1625, column: 19, scope: !2719)
!2724 = !DILocation(line: 1625, column: 11, scope: !2700)
!2725 = !DILocation(line: 1626, column: 9, scope: !2719)
!2726 = !DILocation(line: 1627, column: 7, scope: !2700)
!2727 = !DILocation(line: 1637, column: 16, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2700, file: !78, line: 1637, column: 11)
!2729 = !DILocation(line: 1637, column: 11, scope: !2728)
!2730 = !DILocation(line: 1637, column: 27, scope: !2728)
!2731 = !DILocation(line: 1637, column: 22, scope: !2728)
!2732 = !DILocation(line: 1637, column: 19, scope: !2728)
!2733 = !DILocation(line: 1637, column: 11, scope: !2700)
!2734 = !DILocation(line: 1638, column: 9, scope: !2728)
!2735 = !DILocation(line: 1651, column: 7, scope: !2700)
!2736 = !DILocation(line: 1653, column: 32, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2700, file: !78, line: 1653, column: 11)
!2738 = !DILocation(line: 1653, column: 31, scope: !2737)
!2739 = !DILocation(line: 1653, column: 41, scope: !2737)
!2740 = !DILocation(line: 1653, column: 40, scope: !2737)
!2741 = !DILocation(line: 1653, column: 37, scope: !2737)
!2742 = !DILocation(line: 1653, column: 11, scope: !2700)
!2743 = !DILocation(line: 1654, column: 9, scope: !2737)
!2744 = !DILocation(line: 1655, column: 15, scope: !2700)
!2745 = !DILocation(line: 1655, column: 7, scope: !2700)
!2746 = !DILocation(line: 1668, column: 9, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2700, file: !78, line: 1655, column: 37)
!2748 = !DILocation(line: 1670, column: 9, scope: !2747)
!2749 = !DILocation(line: 1616, column: 3, scope: !2750)
!2750 = !DILexicalBlockFile(scope: !2695, file: !78, discriminator: 1)
!2751 = !DILocation(line: 1675, column: 1, scope: !269)
!2752 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !270, file: !78, line: 1678, type: !82)
!2753 = !DILocation(line: 1678, column: 42, scope: !270)
!2754 = !DILocalVariable(name: "ptr1", arg: 2, scope: !270, file: !78, line: 1678, type: !93)
!2755 = !DILocation(line: 1678, column: 69, scope: !270)
!2756 = !DILocalVariable(name: "end1", arg: 3, scope: !270, file: !78, line: 1679, type: !93)
!2757 = !DILocation(line: 1679, column: 38, scope: !270)
!2758 = !DILocalVariable(name: "ptr2", arg: 4, scope: !270, file: !78, line: 1679, type: !93)
!2759 = !DILocation(line: 1679, column: 56, scope: !270)
!2760 = !DILocation(line: 1681, column: 3, scope: !270)
!2761 = !DILocation(line: 1681, column: 11, scope: !2762)
!2762 = !DILexicalBlockFile(scope: !2763, file: !78, discriminator: 1)
!2763 = distinct !DILexicalBlock(scope: !2764, file: !78, line: 1681, column: 3)
!2764 = distinct !DILexicalBlock(scope: !270, file: !78, line: 1681, column: 3)
!2765 = !DILocation(line: 1681, column: 10, scope: !2762)
!2766 = !DILocation(line: 1681, column: 3, scope: !2762)
!2767 = !DILocation(line: 1682, column: 9, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2769, file: !78, line: 1682, column: 9)
!2769 = distinct !DILexicalBlock(scope: !2763, file: !78, line: 1681, column: 46)
!2770 = !DILocation(line: 1682, column: 16, scope: !2768)
!2771 = !DILocation(line: 1682, column: 14, scope: !2768)
!2772 = !DILocation(line: 1682, column: 21, scope: !2768)
!2773 = !DILocation(line: 1682, column: 9, scope: !2769)
!2774 = !DILocation(line: 1683, column: 7, scope: !2768)
!2775 = !DILocation(line: 1684, column: 10, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2769, file: !78, line: 1684, column: 9)
!2777 = !DILocation(line: 1684, column: 9, scope: !2769)
!2778 = !DILocation(line: 1685, column: 7, scope: !2776)
!2779 = !DILocation(line: 1686, column: 3, scope: !2769)
!2780 = !DILocation(line: 1681, column: 22, scope: !2781)
!2781 = !DILexicalBlockFile(scope: !2763, file: !78, discriminator: 2)
!2782 = !DILocation(line: 1681, column: 42, scope: !2781)
!2783 = !DILocation(line: 1681, column: 3, scope: !2781)
!2784 = !DILocation(line: 1687, column: 10, scope: !270)
!2785 = !DILocation(line: 1687, column: 18, scope: !270)
!2786 = !DILocation(line: 1687, column: 15, scope: !270)
!2787 = !DILocation(line: 1687, column: 3, scope: !270)
!2788 = !DILocation(line: 1688, column: 1, scope: !270)
!2789 = !DILocalVariable(name: "enc", arg: 1, scope: !271, file: !78, line: 1691, type: !82)
!2790 = !DILocation(line: 1691, column: 36, scope: !271)
!2791 = !DILocalVariable(name: "ptr", arg: 2, scope: !271, file: !78, line: 1691, type: !93)
!2792 = !DILocation(line: 1691, column: 53, scope: !271)
!2793 = !DILocalVariable(name: "start", scope: !271, file: !78, line: 1693, type: !93)
!2794 = !DILocation(line: 1693, column: 15, scope: !271)
!2795 = !DILocation(line: 1693, column: 23, scope: !271)
!2796 = !DILocation(line: 1694, column: 3, scope: !271)
!2797 = !DILocation(line: 1695, column: 13, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2799, file: !78, line: 1694, column: 12)
!2799 = distinct !DILexicalBlock(scope: !2800, file: !78, line: 1694, column: 3)
!2800 = distinct !DILexicalBlock(scope: !271, file: !78, line: 1694, column: 3)
!2801 = !DILocation(line: 1695, column: 5, scope: !2798)
!2802 = !DILocation(line: 1698, column: 5, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2798, file: !78, line: 1695, column: 34)
!2804 = !DILocation(line: 1698, column: 18, scope: !2805)
!2805 = !DILexicalBlockFile(scope: !2803, file: !78, discriminator: 1)
!2806 = !DILocation(line: 1698, column: 31, scope: !2807)
!2807 = !DILexicalBlockFile(scope: !2803, file: !78, discriminator: 2)
!2808 = !DILocation(line: 1709, column: 11, scope: !2803)
!2809 = !DILocation(line: 1710, column: 7, scope: !2803)
!2810 = !DILocation(line: 1712, column: 20, scope: !2803)
!2811 = !DILocation(line: 1712, column: 26, scope: !2803)
!2812 = !DILocation(line: 1712, column: 24, scope: !2803)
!2813 = !DILocation(line: 1712, column: 14, scope: !2803)
!2814 = !DILocation(line: 1712, column: 7, scope: !2803)
!2815 = !DILocation(line: 1694, column: 3, scope: !2816)
!2816 = !DILexicalBlockFile(scope: !2799, file: !78, discriminator: 1)
!2817 = !DILocalVariable(name: "enc", arg: 1, scope: !272, file: !78, line: 1718, type: !82)
!2818 = !DILocation(line: 1718, column: 31, scope: !272)
!2819 = !DILocalVariable(name: "ptr", arg: 2, scope: !272, file: !78, line: 1718, type: !93)
!2820 = !DILocation(line: 1718, column: 48, scope: !272)
!2821 = !DILocation(line: 1720, column: 3, scope: !272)
!2822 = !DILocation(line: 1721, column: 13, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !78, line: 1720, column: 12)
!2824 = distinct !DILexicalBlock(scope: !2825, file: !78, line: 1720, column: 3)
!2825 = distinct !DILexicalBlock(scope: !272, file: !78, line: 1720, column: 3)
!2826 = !DILocation(line: 1721, column: 5, scope: !2823)
!2827 = !DILocation(line: 1725, column: 11, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2823, file: !78, line: 1721, column: 34)
!2829 = !DILocation(line: 1726, column: 7, scope: !2828)
!2830 = !DILocation(line: 1728, column: 14, scope: !2828)
!2831 = !DILocation(line: 1728, column: 7, scope: !2828)
!2832 = !DILocation(line: 1720, column: 3, scope: !2833)
!2833 = !DILexicalBlockFile(scope: !2824, file: !78, discriminator: 1)
!2834 = !DILocalVariable(name: "enc", arg: 1, scope: !79, file: !78, line: 1423, type: !82)
!2835 = !DILocation(line: 1423, column: 33, scope: !79)
!2836 = !DILocalVariable(name: "ptr", arg: 2, scope: !79, file: !78, line: 1423, type: !93)
!2837 = !DILocation(line: 1423, column: 50, scope: !79)
!2838 = !DILocalVariable(name: "attsMax", arg: 3, scope: !79, file: !78, line: 1424, type: !7)
!2839 = !DILocation(line: 1424, column: 21, scope: !79)
!2840 = !DILocalVariable(name: "atts", arg: 4, scope: !79, file: !78, line: 1424, type: !153)
!2841 = !DILocation(line: 1424, column: 41, scope: !79)
!2842 = !DILocalVariable(name: "state", scope: !79, file: !78, line: 1426, type: !77)
!2843 = !DILocation(line: 1426, column: 35, scope: !79)
!2844 = !DILocalVariable(name: "nAtts", scope: !79, file: !78, line: 1427, type: !7)
!2845 = !DILocation(line: 1427, column: 7, scope: !79)
!2846 = !DILocalVariable(name: "open", scope: !79, file: !78, line: 1428, type: !7)
!2847 = !DILocation(line: 1428, column: 7, scope: !79)
!2848 = !DILocation(line: 1431, column: 12, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !79, file: !78, line: 1431, column: 3)
!2850 = !DILocation(line: 1431, column: 8, scope: !2849)
!2851 = !DILocation(line: 1432, column: 13, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2853, file: !78, line: 1431, column: 49)
!2853 = distinct !DILexicalBlock(scope: !2849, file: !78, line: 1431, column: 3)
!2854 = !DILocation(line: 1432, column: 5, scope: !2852)
!2855 = !DILocation(line: 1443, column: 5, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1443, column: 5)
!2857 = distinct !DILexicalBlock(scope: !2852, file: !78, line: 1432, column: 34)
!2858 = !DILocation(line: 1443, column: 5, scope: !2857)
!2859 = !DILocation(line: 1443, column: 5, scope: !2860)
!2860 = !DILexicalBlockFile(scope: !2861, file: !78, discriminator: 1)
!2861 = distinct !DILexicalBlock(scope: !2862, file: !78, line: 1443, column: 5)
!2862 = distinct !DILexicalBlock(scope: !2856, file: !78, line: 1443, column: 5)
!2863 = !DILocation(line: 1443, column: 5, scope: !2864)
!2864 = !DILexicalBlockFile(scope: !2865, file: !78, discriminator: 2)
!2865 = distinct !DILexicalBlock(scope: !2861, file: !78, line: 1443, column: 5)
!2866 = !DILocation(line: 1443, column: 5, scope: !2867)
!2867 = !DILexicalBlockFile(scope: !2862, file: !78, discriminator: 3)
!2868 = !DILocation(line: 1443, column: 5, scope: !2869)
!2869 = !DILexicalBlockFile(scope: !2857, file: !78, discriminator: 4)
!2870 = !DILocation(line: 1443, column: 18, scope: !2871)
!2871 = !DILexicalBlockFile(scope: !2872, file: !78, discriminator: 5)
!2872 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1443, column: 18)
!2873 = !DILocation(line: 1443, column: 18, scope: !2874)
!2874 = !DILexicalBlockFile(scope: !2875, file: !78, discriminator: 6)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !78, line: 1443, column: 18)
!2876 = distinct !DILexicalBlock(scope: !2872, file: !78, line: 1443, column: 18)
!2877 = !DILocation(line: 1443, column: 18, scope: !2878)
!2878 = !DILexicalBlockFile(scope: !2879, file: !78, discriminator: 7)
!2879 = distinct !DILexicalBlock(scope: !2875, file: !78, line: 1443, column: 18)
!2880 = !DILocation(line: 1443, column: 18, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2876, file: !78, discriminator: 8)
!2882 = !DILocation(line: 1443, column: 18, scope: !2883)
!2883 = !DILexicalBlockFile(scope: !2857, file: !78, discriminator: 9)
!2884 = !DILocation(line: 1443, column: 31, scope: !2885)
!2885 = !DILexicalBlockFile(scope: !2886, file: !78, discriminator: 10)
!2886 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1443, column: 31)
!2887 = !DILocation(line: 1443, column: 31, scope: !2888)
!2888 = !DILexicalBlockFile(scope: !2889, file: !78, discriminator: 11)
!2889 = distinct !DILexicalBlock(scope: !2890, file: !78, line: 1443, column: 31)
!2890 = distinct !DILexicalBlock(scope: !2886, file: !78, line: 1443, column: 31)
!2891 = !DILocation(line: 1443, column: 31, scope: !2892)
!2892 = !DILexicalBlockFile(scope: !2893, file: !78, discriminator: 12)
!2893 = distinct !DILexicalBlock(scope: !2889, file: !78, line: 1443, column: 31)
!2894 = !DILocation(line: 1443, column: 31, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !2890, file: !78, discriminator: 13)
!2896 = !DILocation(line: 1443, column: 31, scope: !2897)
!2897 = !DILexicalBlockFile(scope: !2857, file: !78, discriminator: 14)
!2898 = !DILocation(line: 1448, column: 7, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1448, column: 7)
!2900 = !DILocation(line: 1448, column: 7, scope: !2857)
!2901 = !DILocation(line: 1448, column: 7, scope: !2902)
!2902 = !DILexicalBlockFile(scope: !2903, file: !78, discriminator: 1)
!2903 = distinct !DILexicalBlock(scope: !2904, file: !78, line: 1448, column: 7)
!2904 = distinct !DILexicalBlock(scope: !2899, file: !78, line: 1448, column: 7)
!2905 = !DILocation(line: 1448, column: 7, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !2907, file: !78, discriminator: 2)
!2907 = distinct !DILexicalBlock(scope: !2903, file: !78, line: 1448, column: 7)
!2908 = !DILocation(line: 1448, column: 7, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !2904, file: !78, discriminator: 3)
!2910 = !DILocation(line: 1449, column: 7, scope: !2857)
!2911 = !DILocation(line: 1452, column: 11, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1452, column: 11)
!2913 = !DILocation(line: 1452, column: 17, scope: !2912)
!2914 = !DILocation(line: 1452, column: 11, scope: !2857)
!2915 = !DILocation(line: 1453, column: 13, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2917, file: !78, line: 1453, column: 13)
!2917 = distinct !DILexicalBlock(scope: !2912, file: !78, line: 1452, column: 29)
!2918 = !DILocation(line: 1453, column: 21, scope: !2916)
!2919 = !DILocation(line: 1453, column: 19, scope: !2916)
!2920 = !DILocation(line: 1453, column: 13, scope: !2917)
!2921 = !DILocation(line: 1454, column: 34, scope: !2916)
!2922 = !DILocation(line: 1454, column: 38, scope: !2916)
!2923 = !DILocation(line: 1454, column: 16, scope: !2916)
!2924 = !DILocation(line: 1454, column: 11, scope: !2916)
!2925 = !DILocation(line: 1454, column: 23, scope: !2916)
!2926 = !DILocation(line: 1454, column: 32, scope: !2916)
!2927 = !DILocation(line: 1455, column: 15, scope: !2917)
!2928 = !DILocation(line: 1456, column: 14, scope: !2917)
!2929 = !DILocation(line: 1457, column: 7, scope: !2917)
!2930 = !DILocation(line: 1458, column: 16, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2912, file: !78, line: 1458, column: 16)
!2932 = !DILocation(line: 1458, column: 21, scope: !2931)
!2933 = !DILocation(line: 1458, column: 16, scope: !2912)
!2934 = !DILocation(line: 1459, column: 15, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !78, line: 1458, column: 33)
!2936 = !DILocation(line: 1460, column: 13, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2935, file: !78, line: 1460, column: 13)
!2938 = !DILocation(line: 1460, column: 21, scope: !2937)
!2939 = !DILocation(line: 1460, column: 19, scope: !2937)
!2940 = !DILocation(line: 1460, column: 13, scope: !2935)
!2941 = !DILocation(line: 1461, column: 34, scope: !2937)
!2942 = !DILocation(line: 1461, column: 16, scope: !2937)
!2943 = !DILocation(line: 1461, column: 11, scope: !2937)
!2944 = !DILocation(line: 1461, column: 23, scope: !2937)
!2945 = !DILocation(line: 1461, column: 32, scope: !2937)
!2946 = !DILocation(line: 1462, column: 14, scope: !2935)
!2947 = !DILocation(line: 1463, column: 7, scope: !2935)
!2948 = !DILocation(line: 1464, column: 7, scope: !2857)
!2949 = !DILocation(line: 1466, column: 11, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1466, column: 11)
!2951 = !DILocation(line: 1466, column: 17, scope: !2950)
!2952 = !DILocation(line: 1466, column: 11, scope: !2857)
!2953 = !DILocation(line: 1467, column: 13, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !78, line: 1467, column: 13)
!2955 = distinct !DILexicalBlock(scope: !2950, file: !78, line: 1466, column: 29)
!2956 = !DILocation(line: 1467, column: 21, scope: !2954)
!2957 = !DILocation(line: 1467, column: 19, scope: !2954)
!2958 = !DILocation(line: 1467, column: 13, scope: !2955)
!2959 = !DILocation(line: 1468, column: 34, scope: !2954)
!2960 = !DILocation(line: 1468, column: 38, scope: !2954)
!2961 = !DILocation(line: 1468, column: 16, scope: !2954)
!2962 = !DILocation(line: 1468, column: 11, scope: !2954)
!2963 = !DILocation(line: 1468, column: 23, scope: !2954)
!2964 = !DILocation(line: 1468, column: 32, scope: !2954)
!2965 = !DILocation(line: 1469, column: 15, scope: !2955)
!2966 = !DILocation(line: 1470, column: 14, scope: !2955)
!2967 = !DILocation(line: 1471, column: 7, scope: !2955)
!2968 = !DILocation(line: 1472, column: 16, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2950, file: !78, line: 1472, column: 16)
!2970 = !DILocation(line: 1472, column: 21, scope: !2969)
!2971 = !DILocation(line: 1472, column: 16, scope: !2950)
!2972 = !DILocation(line: 1473, column: 15, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2969, file: !78, line: 1472, column: 33)
!2974 = !DILocation(line: 1474, column: 13, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2973, file: !78, line: 1474, column: 13)
!2976 = !DILocation(line: 1474, column: 21, scope: !2975)
!2977 = !DILocation(line: 1474, column: 19, scope: !2975)
!2978 = !DILocation(line: 1474, column: 13, scope: !2973)
!2979 = !DILocation(line: 1475, column: 34, scope: !2975)
!2980 = !DILocation(line: 1475, column: 16, scope: !2975)
!2981 = !DILocation(line: 1475, column: 11, scope: !2975)
!2982 = !DILocation(line: 1475, column: 23, scope: !2975)
!2983 = !DILocation(line: 1475, column: 32, scope: !2975)
!2984 = !DILocation(line: 1476, column: 14, scope: !2973)
!2985 = !DILocation(line: 1477, column: 7, scope: !2973)
!2986 = !DILocation(line: 1478, column: 7, scope: !2857)
!2987 = !DILocation(line: 1480, column: 11, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1480, column: 11)
!2989 = !DILocation(line: 1480, column: 19, scope: !2988)
!2990 = !DILocation(line: 1480, column: 17, scope: !2988)
!2991 = !DILocation(line: 1480, column: 11, scope: !2857)
!2992 = !DILocation(line: 1481, column: 14, scope: !2988)
!2993 = !DILocation(line: 1481, column: 9, scope: !2988)
!2994 = !DILocation(line: 1481, column: 21, scope: !2988)
!2995 = !DILocation(line: 1481, column: 32, scope: !2988)
!2996 = !DILocation(line: 1482, column: 7, scope: !2857)
!2997 = !DILocation(line: 1484, column: 11, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1484, column: 11)
!2999 = !DILocation(line: 1484, column: 17, scope: !2998)
!3000 = !DILocation(line: 1484, column: 11, scope: !2857)
!3001 = !DILocation(line: 1485, column: 15, scope: !2998)
!3002 = !DILocation(line: 1485, column: 9, scope: !2998)
!3003 = !DILocation(line: 1486, column: 16, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2998, file: !78, line: 1486, column: 16)
!3005 = !DILocation(line: 1486, column: 22, scope: !3004)
!3006 = !DILocation(line: 1487, column: 16, scope: !3004)
!3007 = !DILocation(line: 1487, column: 19, scope: !3008)
!3008 = !DILexicalBlockFile(scope: !3004, file: !78, discriminator: 1)
!3009 = !DILocation(line: 1487, column: 27, scope: !3008)
!3010 = !DILocation(line: 1487, column: 25, scope: !3008)
!3011 = !DILocation(line: 1488, column: 16, scope: !3004)
!3012 = !DILocation(line: 1488, column: 24, scope: !3008)
!3013 = !DILocation(line: 1488, column: 19, scope: !3008)
!3014 = !DILocation(line: 1488, column: 31, scope: !3008)
!3015 = !DILocation(line: 1489, column: 16, scope: !3004)
!3016 = !DILocation(line: 1489, column: 20, scope: !3008)
!3017 = !DILocation(line: 1489, column: 32, scope: !3008)
!3018 = !DILocation(line: 1489, column: 27, scope: !3008)
!3019 = !DILocation(line: 1489, column: 39, scope: !3008)
!3020 = !DILocation(line: 1489, column: 24, scope: !3008)
!3021 = !DILocation(line: 1490, column: 20, scope: !3004)
!3022 = !DILocation(line: 1490, column: 23, scope: !3008)
!3023 = !DILocation(line: 1490, column: 47, scope: !3008)
!3024 = !DILocation(line: 1491, column: 20, scope: !3004)
!3025 = !DILocation(line: 1491, column: 23, scope: !3008)
!3026 = !DILocation(line: 1491, column: 61, scope: !3008)
!3027 = !DILocation(line: 1492, column: 20, scope: !3004)
!3028 = !DILocation(line: 1492, column: 23, scope: !3008)
!3029 = !DILocation(line: 1492, column: 60, scope: !3008)
!3030 = !DILocation(line: 1492, column: 57, scope: !3008)
!3031 = !DILocation(line: 1486, column: 16, scope: !3032)
!3032 = !DILexicalBlockFile(scope: !2998, file: !78, discriminator: 1)
!3033 = !DILocation(line: 1493, column: 14, scope: !3004)
!3034 = !DILocation(line: 1493, column: 9, scope: !3004)
!3035 = !DILocation(line: 1493, column: 21, scope: !3004)
!3036 = !DILocation(line: 1493, column: 32, scope: !3004)
!3037 = !DILocation(line: 1494, column: 7, scope: !2857)
!3038 = !DILocation(line: 1498, column: 11, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1498, column: 11)
!3040 = !DILocation(line: 1498, column: 17, scope: !3039)
!3041 = !DILocation(line: 1498, column: 11, scope: !2857)
!3042 = !DILocation(line: 1499, column: 15, scope: !3039)
!3043 = !DILocation(line: 1499, column: 9, scope: !3039)
!3044 = !DILocation(line: 1500, column: 16, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3039, file: !78, line: 1500, column: 16)
!3046 = !DILocation(line: 1500, column: 22, scope: !3045)
!3047 = !DILocation(line: 1500, column: 33, scope: !3045)
!3048 = !DILocation(line: 1500, column: 36, scope: !3049)
!3049 = !DILexicalBlockFile(scope: !3045, file: !78, discriminator: 1)
!3050 = !DILocation(line: 1500, column: 44, scope: !3049)
!3051 = !DILocation(line: 1500, column: 42, scope: !3049)
!3052 = !DILocation(line: 1500, column: 16, scope: !3049)
!3053 = !DILocation(line: 1501, column: 14, scope: !3045)
!3054 = !DILocation(line: 1501, column: 9, scope: !3045)
!3055 = !DILocation(line: 1501, column: 21, scope: !3045)
!3056 = !DILocation(line: 1501, column: 32, scope: !3045)
!3057 = !DILocation(line: 1502, column: 7, scope: !2857)
!3058 = !DILocation(line: 1505, column: 11, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !2857, file: !78, line: 1505, column: 11)
!3060 = !DILocation(line: 1505, column: 17, scope: !3059)
!3061 = !DILocation(line: 1505, column: 11, scope: !2857)
!3062 = !DILocation(line: 1506, column: 16, scope: !3059)
!3063 = !DILocation(line: 1506, column: 9, scope: !3059)
!3064 = !DILocation(line: 1507, column: 7, scope: !2857)
!3065 = !DILocation(line: 1509, column: 7, scope: !2857)
!3066 = !DILocation(line: 1511, column: 3, scope: !2852)
!3067 = !DILocation(line: 1431, column: 33, scope: !3068)
!3068 = !DILexicalBlockFile(scope: !2853, file: !78, discriminator: 1)
!3069 = !DILocation(line: 1431, column: 3, scope: !3068)
!3070 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !273, file: !78, line: 1516, type: !82)
!3071 = !DILocation(line: 1516, column: 39, scope: !273)
!3072 = !DILocalVariable(name: "ptr", arg: 2, scope: !273, file: !78, line: 1516, type: !93)
!3073 = !DILocation(line: 1516, column: 66, scope: !273)
!3074 = !DILocalVariable(name: "result", scope: !273, file: !78, line: 1518, type: !7)
!3075 = !DILocation(line: 1518, column: 7, scope: !273)
!3076 = !DILocation(line: 1520, column: 7, scope: !273)
!3077 = !DILocation(line: 1521, column: 7, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !273, file: !78, line: 1521, column: 7)
!3079 = !DILocation(line: 1521, column: 7, scope: !273)
!3080 = !DILocation(line: 1522, column: 14, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !78, line: 1522, column: 5)
!3082 = distinct !DILexicalBlock(scope: !3078, file: !78, line: 1521, column: 40)
!3083 = !DILocation(line: 1522, column: 10, scope: !3081)
!3084 = !DILocation(line: 1523, column: 11, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3081, file: !78, line: 1522, column: 5)
!3086 = !DILocation(line: 1523, column: 10, scope: !3085)
!3087 = !DILocation(line: 1522, column: 5, scope: !3088)
!3088 = !DILexicalBlockFile(scope: !3081, file: !78, discriminator: 1)
!3089 = !DILocalVariable(name: "c", scope: !3090, file: !78, line: 1525, type: !7)
!3090 = distinct !DILexicalBlock(scope: !3085, file: !78, line: 1524, column: 30)
!3091 = !DILocation(line: 1525, column: 11, scope: !3090)
!3092 = !DILocation(line: 1525, column: 15, scope: !3090)
!3093 = !DILocation(line: 1526, column: 15, scope: !3090)
!3094 = !DILocation(line: 1526, column: 7, scope: !3090)
!3095 = !DILocation(line: 1529, column: 16, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3090, file: !78, line: 1526, column: 18)
!3097 = !DILocation(line: 1530, column: 20, scope: !3096)
!3098 = !DILocation(line: 1530, column: 22, scope: !3096)
!3099 = !DILocation(line: 1530, column: 16, scope: !3096)
!3100 = !DILocation(line: 1531, column: 9, scope: !3096)
!3101 = !DILocation(line: 1534, column: 16, scope: !3096)
!3102 = !DILocation(line: 1535, column: 25, scope: !3096)
!3103 = !DILocation(line: 1535, column: 27, scope: !3096)
!3104 = !DILocation(line: 1535, column: 22, scope: !3096)
!3105 = !DILocation(line: 1535, column: 16, scope: !3096)
!3106 = !DILocation(line: 1536, column: 9, scope: !3096)
!3107 = !DILocation(line: 1539, column: 16, scope: !3096)
!3108 = !DILocation(line: 1540, column: 25, scope: !3096)
!3109 = !DILocation(line: 1540, column: 27, scope: !3096)
!3110 = !DILocation(line: 1540, column: 22, scope: !3096)
!3111 = !DILocation(line: 1540, column: 16, scope: !3096)
!3112 = !DILocation(line: 1541, column: 9, scope: !3096)
!3113 = !DILocation(line: 1543, column: 11, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3090, file: !78, line: 1543, column: 11)
!3115 = !DILocation(line: 1543, column: 18, scope: !3114)
!3116 = !DILocation(line: 1543, column: 11, scope: !3090)
!3117 = !DILocation(line: 1544, column: 9, scope: !3114)
!3118 = !DILocation(line: 1545, column: 5, scope: !3090)
!3119 = !DILocation(line: 1524, column: 14, scope: !3085)
!3120 = !DILocation(line: 1522, column: 5, scope: !3121)
!3121 = !DILexicalBlockFile(scope: !3085, file: !78, discriminator: 2)
!3122 = !DILocation(line: 1546, column: 3, scope: !3082)
!3123 = !DILocation(line: 1548, column: 5, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3078, file: !78, line: 1547, column: 8)
!3125 = !DILocation(line: 1548, column: 13, scope: !3126)
!3126 = !DILexicalBlockFile(scope: !3127, file: !78, discriminator: 1)
!3127 = distinct !DILexicalBlock(scope: !3128, file: !78, line: 1548, column: 5)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !78, line: 1548, column: 5)
!3129 = !DILocation(line: 1548, column: 12, scope: !3126)
!3130 = !DILocation(line: 1548, column: 5, scope: !3126)
!3131 = !DILocalVariable(name: "c", scope: !3132, file: !78, line: 1549, type: !7)
!3132 = distinct !DILexicalBlock(scope: !3127, file: !78, line: 1548, column: 69)
!3133 = !DILocation(line: 1549, column: 11, scope: !3132)
!3134 = !DILocation(line: 1549, column: 15, scope: !3132)
!3135 = !DILocation(line: 1550, column: 14, scope: !3132)
!3136 = !DILocation(line: 1551, column: 18, scope: !3132)
!3137 = !DILocation(line: 1551, column: 20, scope: !3132)
!3138 = !DILocation(line: 1551, column: 14, scope: !3132)
!3139 = !DILocation(line: 1552, column: 11, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3132, file: !78, line: 1552, column: 11)
!3141 = !DILocation(line: 1552, column: 18, scope: !3140)
!3142 = !DILocation(line: 1552, column: 11, scope: !3132)
!3143 = !DILocation(line: 1553, column: 9, scope: !3140)
!3144 = !DILocation(line: 1554, column: 5, scope: !3132)
!3145 = !DILocation(line: 1548, column: 53, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !3127, file: !78, discriminator: 2)
!3147 = !DILocation(line: 1548, column: 5, scope: !3146)
!3148 = !DILocation(line: 1556, column: 29, scope: !273)
!3149 = !DILocation(line: 1556, column: 10, scope: !273)
!3150 = !DILocation(line: 1556, column: 3, scope: !273)
!3151 = !DILocation(line: 1557, column: 1, scope: !273)
!3152 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !274, file: !78, line: 1560, type: !82)
!3153 = !DILocation(line: 1560, column: 46, scope: !274)
!3154 = !DILocalVariable(name: "ptr", arg: 2, scope: !274, file: !78, line: 1560, type: !93)
!3155 = !DILocation(line: 1560, column: 73, scope: !274)
!3156 = !DILocalVariable(name: "end", arg: 3, scope: !274, file: !78, line: 1561, type: !93)
!3157 = !DILocation(line: 1561, column: 42, scope: !274)
!3158 = !DILocation(line: 1563, column: 12, scope: !274)
!3159 = !DILocation(line: 1563, column: 18, scope: !274)
!3160 = !DILocation(line: 1563, column: 16, scope: !274)
!3161 = !DILocation(line: 1563, column: 22, scope: !274)
!3162 = !DILocation(line: 1563, column: 3, scope: !274)
!3163 = !DILocation(line: 1565, column: 9, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !78, line: 1565, column: 9)
!3165 = distinct !DILexicalBlock(scope: !274, file: !78, line: 1563, column: 36)
!3166 = !DILocation(line: 1565, column: 9, scope: !3165)
!3167 = !DILocation(line: 1566, column: 15, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3164, file: !78, line: 1565, column: 56)
!3169 = !DILocation(line: 1566, column: 7, scope: !3168)
!3170 = !DILocation(line: 1568, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !78, line: 1566, column: 40)
!3172 = !DILocation(line: 1570, column: 9, scope: !3171)
!3173 = !DILocation(line: 1572, column: 5, scope: !3168)
!3174 = !DILocation(line: 1573, column: 5, scope: !3165)
!3175 = !DILocation(line: 1575, column: 9, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3165, file: !78, line: 1575, column: 9)
!3177 = !DILocation(line: 1575, column: 9, scope: !3165)
!3178 = !DILocation(line: 1576, column: 11, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3176, file: !78, line: 1575, column: 42)
!3180 = !DILocation(line: 1577, column: 11, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3179, file: !78, line: 1577, column: 11)
!3182 = !DILocation(line: 1577, column: 11, scope: !3179)
!3183 = !DILocation(line: 1578, column: 13, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3181, file: !78, line: 1577, column: 44)
!3185 = !DILocation(line: 1579, column: 13, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3184, file: !78, line: 1579, column: 13)
!3187 = !DILocation(line: 1579, column: 13, scope: !3184)
!3188 = !DILocation(line: 1580, column: 11, scope: !3186)
!3189 = !DILocation(line: 1581, column: 7, scope: !3184)
!3190 = !DILocation(line: 1582, column: 5, scope: !3179)
!3191 = !DILocation(line: 1583, column: 5, scope: !3165)
!3192 = !DILocation(line: 1585, column: 13, scope: !3165)
!3193 = !DILocation(line: 1585, column: 5, scope: !3165)
!3194 = !DILocation(line: 1587, column: 11, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3165, file: !78, line: 1585, column: 38)
!3196 = !DILocation(line: 1588, column: 11, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3195, file: !78, line: 1588, column: 11)
!3198 = !DILocation(line: 1588, column: 11, scope: !3195)
!3199 = !DILocation(line: 1589, column: 13, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !78, line: 1588, column: 44)
!3201 = !DILocation(line: 1590, column: 13, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3200, file: !78, line: 1590, column: 13)
!3203 = !DILocation(line: 1590, column: 13, scope: !3200)
!3204 = !DILocation(line: 1591, column: 15, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3202, file: !78, line: 1590, column: 46)
!3206 = !DILocation(line: 1592, column: 15, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3205, file: !78, line: 1592, column: 15)
!3208 = !DILocation(line: 1592, column: 15, scope: !3205)
!3209 = !DILocation(line: 1593, column: 13, scope: !3207)
!3210 = !DILocation(line: 1594, column: 9, scope: !3205)
!3211 = !DILocation(line: 1595, column: 7, scope: !3200)
!3212 = !DILocation(line: 1596, column: 7, scope: !3195)
!3213 = !DILocation(line: 1598, column: 11, scope: !3195)
!3214 = !DILocation(line: 1599, column: 11, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3195, file: !78, line: 1599, column: 11)
!3216 = !DILocation(line: 1599, column: 11, scope: !3195)
!3217 = !DILocation(line: 1600, column: 13, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3215, file: !78, line: 1599, column: 44)
!3219 = !DILocation(line: 1601, column: 13, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3218, file: !78, line: 1601, column: 13)
!3221 = !DILocation(line: 1601, column: 13, scope: !3218)
!3222 = !DILocation(line: 1602, column: 15, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3220, file: !78, line: 1601, column: 46)
!3224 = !DILocation(line: 1603, column: 15, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3223, file: !78, line: 1603, column: 15)
!3226 = !DILocation(line: 1603, column: 15, scope: !3223)
!3227 = !DILocation(line: 1604, column: 13, scope: !3225)
!3228 = !DILocation(line: 1605, column: 9, scope: !3223)
!3229 = !DILocation(line: 1606, column: 7, scope: !3218)
!3230 = !DILocation(line: 1607, column: 7, scope: !3195)
!3231 = !DILocation(line: 1609, column: 3, scope: !3165)
!3232 = !DILocation(line: 1610, column: 3, scope: !274)
!3233 = !DILocation(line: 1611, column: 1, scope: !274)
!3234 = !DILocalVariable(name: "enc", arg: 1, scope: !275, file: !78, line: 1734, type: !82)
!3235 = !DILocation(line: 1734, column: 40, scope: !275)
!3236 = !DILocalVariable(name: "ptr", arg: 2, scope: !275, file: !78, line: 1735, type: !93)
!3237 = !DILocation(line: 1735, column: 36, scope: !275)
!3238 = !DILocalVariable(name: "end", arg: 3, scope: !275, file: !78, line: 1736, type: !93)
!3239 = !DILocation(line: 1736, column: 36, scope: !275)
!3240 = !DILocalVariable(name: "pos", arg: 4, scope: !275, file: !78, line: 1737, type: !126)
!3241 = !DILocation(line: 1737, column: 34, scope: !275)
!3242 = !DILocation(line: 1739, column: 3, scope: !275)
!3243 = !DILocation(line: 1739, column: 10, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !275, file: !78, discriminator: 1)
!3245 = !DILocation(line: 1739, column: 3, scope: !3244)
!3246 = !DILocation(line: 1740, column: 13, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !275, file: !78, line: 1739, column: 35)
!3248 = !DILocation(line: 1740, column: 5, scope: !3247)
!3249 = !DILocation(line: 1745, column: 5, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3247, file: !78, line: 1740, column: 34)
!3251 = !DILocation(line: 1745, column: 18, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !3250, file: !78, discriminator: 1)
!3253 = !DILocation(line: 1745, column: 31, scope: !3254)
!3254 = !DILexicalBlockFile(scope: !3250, file: !78, discriminator: 2)
!3255 = !DILocation(line: 1748, column: 7, scope: !3250)
!3256 = !DILocation(line: 1748, column: 12, scope: !3250)
!3257 = !DILocation(line: 1748, column: 25, scope: !3250)
!3258 = !DILocation(line: 1749, column: 7, scope: !3250)
!3259 = !DILocation(line: 1749, column: 12, scope: !3250)
!3260 = !DILocation(line: 1749, column: 22, scope: !3250)
!3261 = !DILocation(line: 1750, column: 11, scope: !3250)
!3262 = !DILocation(line: 1751, column: 7, scope: !3250)
!3263 = !DILocation(line: 1753, column: 7, scope: !3250)
!3264 = !DILocation(line: 1753, column: 12, scope: !3250)
!3265 = !DILocation(line: 1753, column: 22, scope: !3250)
!3266 = !DILocation(line: 1754, column: 11, scope: !3250)
!3267 = !DILocation(line: 1755, column: 11, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3250, file: !78, line: 1755, column: 11)
!3269 = !DILocation(line: 1755, column: 35, scope: !3268)
!3270 = !DILocation(line: 1755, column: 38, scope: !3271)
!3271 = !DILexicalBlockFile(scope: !3268, file: !78, discriminator: 1)
!3272 = !DILocation(line: 1755, column: 58, scope: !3271)
!3273 = !DILocation(line: 1755, column: 11, scope: !3271)
!3274 = !DILocation(line: 1756, column: 13, scope: !3268)
!3275 = !DILocation(line: 1756, column: 9, scope: !3268)
!3276 = !DILocation(line: 1757, column: 7, scope: !3250)
!3277 = !DILocation(line: 1757, column: 12, scope: !3250)
!3278 = !DILocation(line: 1757, column: 25, scope: !3250)
!3279 = !DILocation(line: 1758, column: 7, scope: !3250)
!3280 = !DILocation(line: 1760, column: 11, scope: !3250)
!3281 = !DILocation(line: 1761, column: 7, scope: !3250)
!3282 = !DILocation(line: 1763, column: 5, scope: !3247)
!3283 = !DILocation(line: 1763, column: 10, scope: !3247)
!3284 = !DILocation(line: 1763, column: 22, scope: !3247)
!3285 = !DILocation(line: 1739, column: 3, scope: !3286)
!3286 = !DILexicalBlockFile(scope: !275, file: !78, discriminator: 2)
!3287 = !DILocation(line: 1765, column: 1, scope: !275)
!3288 = !DILocalVariable(name: "enc", arg: 1, scope: !276, file: !78, line: 1363, type: !82)
!3289 = !DILocation(line: 1363, column: 36, scope: !276)
!3290 = !DILocalVariable(name: "ptr", arg: 2, scope: !276, file: !78, line: 1363, type: !93)
!3291 = !DILocation(line: 1363, column: 53, scope: !276)
!3292 = !DILocalVariable(name: "end", arg: 3, scope: !276, file: !78, line: 1363, type: !93)
!3293 = !DILocation(line: 1363, column: 70, scope: !276)
!3294 = !DILocalVariable(name: "badPtr", arg: 4, scope: !276, file: !78, line: 1364, type: !95)
!3295 = !DILocation(line: 1364, column: 33, scope: !276)
!3296 = !DILocation(line: 1366, column: 7, scope: !276)
!3297 = !DILocation(line: 1367, column: 7, scope: !276)
!3298 = !DILocation(line: 1368, column: 3, scope: !276)
!3299 = !DILocation(line: 1368, column: 10, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3301, file: !78, discriminator: 1)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !78, line: 1368, column: 3)
!3302 = distinct !DILexicalBlock(scope: !276, file: !78, line: 1368, column: 3)
!3303 = !DILocation(line: 1368, column: 3, scope: !3300)
!3304 = !DILocation(line: 1369, column: 13, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3301, file: !78, line: 1368, column: 55)
!3306 = !DILocation(line: 1369, column: 5, scope: !3305)
!3307 = !DILocation(line: 1391, column: 7, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3305, file: !78, line: 1369, column: 34)
!3309 = !DILocation(line: 1393, column: 11, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3308, file: !78, line: 1393, column: 11)
!3311 = !DILocation(line: 1393, column: 11, scope: !3308)
!3312 = !DILocation(line: 1394, column: 19, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3310, file: !78, line: 1393, column: 46)
!3314 = !DILocation(line: 1394, column: 10, scope: !3313)
!3315 = !DILocation(line: 1394, column: 17, scope: !3313)
!3316 = !DILocation(line: 1395, column: 9, scope: !3313)
!3317 = !DILocation(line: 1397, column: 7, scope: !3308)
!3318 = !DILocation(line: 1400, column: 13, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3308, file: !78, line: 1400, column: 11)
!3320 = !DILocation(line: 1400, column: 37, scope: !3319)
!3321 = !DILocation(line: 1400, column: 11, scope: !3308)
!3322 = !DILocation(line: 1401, column: 9, scope: !3319)
!3323 = !DILocation(line: 1400, column: 44, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !3319, file: !78, discriminator: 1)
!3325 = !DILocation(line: 1403, column: 15, scope: !3308)
!3326 = !DILocation(line: 1403, column: 7, scope: !3308)
!3327 = !DILocation(line: 1406, column: 9, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3308, file: !78, line: 1403, column: 40)
!3329 = !DILocation(line: 1408, column: 19, scope: !3328)
!3330 = !DILocation(line: 1408, column: 10, scope: !3328)
!3331 = !DILocation(line: 1408, column: 17, scope: !3328)
!3332 = !DILocation(line: 1409, column: 9, scope: !3328)
!3333 = !DILocation(line: 1411, column: 7, scope: !3308)
!3334 = !DILocation(line: 1413, column: 3, scope: !3305)
!3335 = !DILocation(line: 1368, column: 39, scope: !3336)
!3336 = !DILexicalBlockFile(scope: !3301, file: !78, discriminator: 2)
!3337 = !DILocation(line: 1368, column: 3, scope: !3336)
!3338 = !DILocation(line: 1414, column: 3, scope: !276)
!3339 = !DILocation(line: 1415, column: 1, scope: !276)
!3340 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !277, file: !1, line: 497, type: !82)
!3341 = !DILocation(line: 497, column: 31, scope: !277)
!3342 = !DILocalVariable(name: "fromP", arg: 2, scope: !277, file: !1, line: 498, type: !95)
!3343 = !DILocation(line: 498, column: 28, scope: !277)
!3344 = !DILocalVariable(name: "fromLim", arg: 3, scope: !277, file: !1, line: 498, type: !93)
!3345 = !DILocation(line: 498, column: 47, scope: !277)
!3346 = !DILocalVariable(name: "toP", arg: 4, scope: !277, file: !1, line: 499, type: !140)
!3347 = !DILocation(line: 499, column: 22, scope: !277)
!3348 = !DILocalVariable(name: "toLim", arg: 5, scope: !277, file: !1, line: 499, type: !93)
!3349 = !DILocation(line: 499, column: 39, scope: !277)
!3350 = !DILocation(line: 501, column: 3, scope: !277)
!3351 = !DILocalVariable(name: "c", scope: !3352, file: !1, line: 502, type: !170)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 501, column: 12)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !1, line: 501, column: 3)
!3354 = distinct !DILexicalBlock(scope: !277, file: !1, line: 501, column: 3)
!3355 = !DILocation(line: 502, column: 19, scope: !3352)
!3356 = !DILocation(line: 503, column: 10, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !1, line: 503, column: 9)
!3358 = !DILocation(line: 503, column: 9, scope: !3357)
!3359 = !DILocation(line: 503, column: 19, scope: !3357)
!3360 = !DILocation(line: 503, column: 16, scope: !3357)
!3361 = !DILocation(line: 503, column: 9, scope: !3352)
!3362 = !DILocation(line: 504, column: 7, scope: !3357)
!3363 = !DILocation(line: 505, column: 26, scope: !3352)
!3364 = !DILocation(line: 505, column: 25, scope: !3352)
!3365 = !DILocation(line: 505, column: 24, scope: !3352)
!3366 = !DILocation(line: 505, column: 7, scope: !3352)
!3367 = !DILocation(line: 506, column: 9, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3352, file: !1, line: 506, column: 9)
!3369 = !DILocation(line: 506, column: 11, scope: !3368)
!3370 = !DILocation(line: 506, column: 9, scope: !3352)
!3371 = !DILocation(line: 507, column: 11, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !1, line: 507, column: 11)
!3373 = distinct !DILexicalBlock(scope: !3368, file: !1, line: 506, column: 19)
!3374 = !DILocation(line: 507, column: 20, scope: !3372)
!3375 = !DILocation(line: 507, column: 19, scope: !3372)
!3376 = !DILocation(line: 507, column: 17, scope: !3372)
!3377 = !DILocation(line: 507, column: 24, scope: !3372)
!3378 = !DILocation(line: 507, column: 11, scope: !3373)
!3379 = !DILocation(line: 508, column: 9, scope: !3372)
!3380 = !DILocation(line: 509, column: 27, scope: !3373)
!3381 = !DILocation(line: 509, column: 29, scope: !3373)
!3382 = !DILocation(line: 509, column: 35, scope: !3373)
!3383 = !DILocation(line: 509, column: 19, scope: !3373)
!3384 = !DILocation(line: 509, column: 10, scope: !3373)
!3385 = !DILocation(line: 509, column: 14, scope: !3373)
!3386 = !DILocation(line: 509, column: 17, scope: !3373)
!3387 = !DILocation(line: 510, column: 27, scope: !3373)
!3388 = !DILocation(line: 510, column: 29, scope: !3373)
!3389 = !DILocation(line: 510, column: 37, scope: !3373)
!3390 = !DILocation(line: 510, column: 19, scope: !3373)
!3391 = !DILocation(line: 510, column: 10, scope: !3373)
!3392 = !DILocation(line: 510, column: 14, scope: !3373)
!3393 = !DILocation(line: 510, column: 17, scope: !3373)
!3394 = !DILocation(line: 511, column: 9, scope: !3373)
!3395 = !DILocation(line: 511, column: 15, scope: !3373)
!3396 = !DILocation(line: 512, column: 5, scope: !3373)
!3397 = !DILocation(line: 514, column: 12, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 514, column: 11)
!3399 = distinct !DILexicalBlock(scope: !3368, file: !1, line: 513, column: 10)
!3400 = !DILocation(line: 514, column: 11, scope: !3398)
!3401 = !DILocation(line: 514, column: 19, scope: !3398)
!3402 = !DILocation(line: 514, column: 16, scope: !3398)
!3403 = !DILocation(line: 514, column: 11, scope: !3399)
!3404 = !DILocation(line: 515, column: 9, scope: !3398)
!3405 = !DILocation(line: 516, column: 22, scope: !3399)
!3406 = !DILocation(line: 516, column: 28, scope: !3399)
!3407 = !DILocation(line: 516, column: 19, scope: !3399)
!3408 = !DILocation(line: 516, column: 10, scope: !3399)
!3409 = !DILocation(line: 516, column: 14, scope: !3399)
!3410 = !DILocation(line: 516, column: 17, scope: !3399)
!3411 = !DILocation(line: 501, column: 3, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3353, file: !1, discriminator: 1)
!3413 = !DILocation(line: 519, column: 1, scope: !277)
!3414 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !278, file: !1, line: 522, type: !82)
!3415 = !DILocation(line: 522, column: 32, scope: !278)
!3416 = !DILocalVariable(name: "fromP", arg: 2, scope: !278, file: !1, line: 523, type: !95)
!3417 = !DILocation(line: 523, column: 29, scope: !278)
!3418 = !DILocalVariable(name: "fromLim", arg: 3, scope: !278, file: !1, line: 523, type: !93)
!3419 = !DILocation(line: 523, column: 48, scope: !278)
!3420 = !DILocalVariable(name: "toP", arg: 4, scope: !278, file: !1, line: 524, type: !145)
!3421 = !DILocation(line: 524, column: 33, scope: !278)
!3422 = !DILocalVariable(name: "toLim", arg: 5, scope: !278, file: !1, line: 524, type: !148)
!3423 = !DILocation(line: 524, column: 60, scope: !278)
!3424 = !DILocation(line: 526, column: 3, scope: !278)
!3425 = !DILocation(line: 526, column: 11, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !278, file: !1, discriminator: 1)
!3427 = !DILocation(line: 526, column: 10, scope: !3426)
!3428 = !DILocation(line: 526, column: 19, scope: !3426)
!3429 = !DILocation(line: 526, column: 17, scope: !3426)
!3430 = !DILocation(line: 526, column: 27, scope: !3426)
!3431 = !DILocation(line: 526, column: 31, scope: !3432)
!3432 = !DILexicalBlockFile(scope: !278, file: !1, discriminator: 2)
!3433 = !DILocation(line: 526, column: 30, scope: !3432)
!3434 = !DILocation(line: 526, column: 37, scope: !3432)
!3435 = !DILocation(line: 526, column: 35, scope: !3432)
!3436 = !DILocation(line: 526, column: 3, scope: !3437)
!3437 = !DILexicalBlockFile(scope: !278, file: !1, discriminator: 3)
!3438 = !DILocation(line: 527, column: 35, scope: !278)
!3439 = !DILocation(line: 527, column: 41, scope: !278)
!3440 = !DILocation(line: 527, column: 32, scope: !278)
!3441 = !DILocation(line: 527, column: 17, scope: !278)
!3442 = !DILocation(line: 527, column: 8, scope: !278)
!3443 = !DILocation(line: 527, column: 12, scope: !278)
!3444 = !DILocation(line: 527, column: 15, scope: !278)
!3445 = !DILocation(line: 526, column: 3, scope: !3446)
!3446 = !DILexicalBlockFile(scope: !278, file: !1, discriminator: 4)
!3447 = !DILocation(line: 529, column: 9, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !278, file: !1, line: 529, column: 7)
!3449 = !DILocation(line: 529, column: 8, scope: !3448)
!3450 = !DILocation(line: 529, column: 16, scope: !3448)
!3451 = !DILocation(line: 529, column: 13, scope: !3448)
!3452 = !DILocation(line: 529, column: 23, scope: !3448)
!3453 = !DILocation(line: 529, column: 28, scope: !3454)
!3454 = !DILexicalBlockFile(scope: !3448, file: !1, discriminator: 1)
!3455 = !DILocation(line: 529, column: 27, scope: !3454)
!3456 = !DILocation(line: 529, column: 36, scope: !3454)
!3457 = !DILocation(line: 529, column: 34, scope: !3454)
!3458 = !DILocation(line: 529, column: 7, scope: !3454)
!3459 = !DILocation(line: 530, column: 5, scope: !3448)
!3460 = !DILocation(line: 532, column: 5, scope: !3448)
!3461 = !DILocation(line: 533, column: 1, scope: !278)
!3462 = !DILocalVariable(name: "open", arg: 1, scope: !247, file: !78, line: 935, type: !7)
!3463 = !DILocation(line: 935, column: 21, scope: !247)
!3464 = !DILocalVariable(name: "enc", arg: 2, scope: !247, file: !78, line: 935, type: !82)
!3465 = !DILocation(line: 935, column: 43, scope: !247)
!3466 = !DILocalVariable(name: "ptr", arg: 3, scope: !247, file: !78, line: 936, type: !93)
!3467 = !DILocation(line: 936, column: 29, scope: !247)
!3468 = !DILocalVariable(name: "end", arg: 4, scope: !247, file: !78, line: 936, type: !93)
!3469 = !DILocation(line: 936, column: 46, scope: !247)
!3470 = !DILocalVariable(name: "nextTokPtr", arg: 5, scope: !247, file: !78, line: 937, type: !95)
!3471 = !DILocation(line: 937, column: 30, scope: !247)
!3472 = !DILocation(line: 939, column: 3, scope: !247)
!3473 = !DILocation(line: 939, column: 10, scope: !3474)
!3474 = !DILexicalBlockFile(scope: !247, file: !78, discriminator: 1)
!3475 = !DILocation(line: 939, column: 3, scope: !3474)
!3476 = !DILocalVariable(name: "t", scope: !3477, file: !78, line: 940, type: !7)
!3477 = distinct !DILexicalBlock(scope: !247, file: !78, line: 939, column: 35)
!3478 = !DILocation(line: 940, column: 9, scope: !3477)
!3479 = !DILocation(line: 940, column: 13, scope: !3477)
!3480 = !DILocation(line: 941, column: 13, scope: !3477)
!3481 = !DILocation(line: 941, column: 5, scope: !3477)
!3482 = !DILocation(line: 942, column: 5, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 942, column: 5)
!3484 = distinct !DILexicalBlock(scope: !3477, file: !78, line: 941, column: 16)
!3485 = !DILocation(line: 942, column: 5, scope: !3484)
!3486 = !DILocation(line: 942, column: 5, scope: !3487)
!3487 = !DILexicalBlockFile(scope: !3483, file: !78, discriminator: 1)
!3488 = !DILocation(line: 942, column: 5, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3490, file: !78, discriminator: 2)
!3490 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 942, column: 5)
!3491 = !DILocation(line: 942, column: 5, scope: !3492)
!3492 = !DILexicalBlockFile(scope: !3493, file: !78, discriminator: 3)
!3493 = distinct !DILexicalBlock(scope: !3490, file: !78, line: 942, column: 5)
!3494 = !DILocation(line: 942, column: 5, scope: !3495)
!3495 = !DILexicalBlockFile(scope: !3484, file: !78, discriminator: 4)
!3496 = !DILocation(line: 942, column: 5, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3498, file: !78, discriminator: 5)
!3498 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 942, column: 5)
!3499 = !DILocation(line: 942, column: 5, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3498, file: !78, discriminator: 6)
!3501 = !DILocation(line: 942, column: 5, scope: !3502)
!3502 = !DILexicalBlockFile(scope: !3503, file: !78, discriminator: 7)
!3503 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 942, column: 5)
!3504 = !DILocation(line: 942, column: 5, scope: !3505)
!3505 = !DILexicalBlockFile(scope: !3506, file: !78, discriminator: 8)
!3506 = distinct !DILexicalBlock(scope: !3503, file: !78, line: 942, column: 5)
!3507 = !DILocation(line: 942, column: 5, scope: !3508)
!3508 = !DILexicalBlockFile(scope: !3484, file: !78, discriminator: 9)
!3509 = !DILocation(line: 942, column: 5, scope: !3510)
!3510 = !DILexicalBlockFile(scope: !3511, file: !78, discriminator: 10)
!3511 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 942, column: 5)
!3512 = !DILocation(line: 942, column: 5, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3511, file: !78, discriminator: 11)
!3514 = !DILocation(line: 942, column: 5, scope: !3515)
!3515 = !DILexicalBlockFile(scope: !3516, file: !78, discriminator: 12)
!3516 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 942, column: 5)
!3517 = !DILocation(line: 942, column: 5, scope: !3518)
!3518 = !DILexicalBlockFile(scope: !3519, file: !78, discriminator: 13)
!3519 = distinct !DILexicalBlock(scope: !3516, file: !78, line: 942, column: 5)
!3520 = !DILocation(line: 942, column: 5, scope: !3521)
!3521 = !DILexicalBlockFile(scope: !3484, file: !78, discriminator: 14)
!3522 = !DILocation(line: 942, column: 5, scope: !3523)
!3523 = !DILexicalBlockFile(scope: !3484, file: !78, discriminator: 15)
!3524 = !DILocation(line: 945, column: 11, scope: !3484)
!3525 = !DILocation(line: 946, column: 11, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 946, column: 11)
!3527 = !DILocation(line: 946, column: 16, scope: !3526)
!3528 = !DILocation(line: 946, column: 13, scope: !3526)
!3529 = !DILocation(line: 946, column: 11, scope: !3484)
!3530 = !DILocation(line: 947, column: 9, scope: !3526)
!3531 = !DILocation(line: 948, column: 13, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 948, column: 11)
!3533 = !DILocation(line: 948, column: 11, scope: !3484)
!3534 = !DILocation(line: 949, column: 9, scope: !3532)
!3535 = !DILocation(line: 950, column: 21, scope: !3484)
!3536 = !DILocation(line: 950, column: 8, scope: !3484)
!3537 = !DILocation(line: 950, column: 19, scope: !3484)
!3538 = !DILocation(line: 951, column: 15, scope: !3484)
!3539 = !DILocation(line: 951, column: 7, scope: !3484)
!3540 = !DILocation(line: 954, column: 9, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3484, file: !78, line: 951, column: 36)
!3542 = !DILocation(line: 956, column: 9, scope: !3541)
!3543 = !DILocation(line: 959, column: 11, scope: !3484)
!3544 = !DILocation(line: 960, column: 7, scope: !3484)
!3545 = !DILocation(line: 939, column: 3, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !247, file: !78, discriminator: 2)
!3547 = !DILocation(line: 963, column: 3, scope: !247)
!3548 = !DILocation(line: 964, column: 1, scope: !247)
!3549 = !DILocalVariable(name: "enc", arg: 1, scope: !250, file: !78, line: 149, type: !82)
!3550 = !DILocation(line: 149, column: 34, scope: !250)
!3551 = !DILocalVariable(name: "ptr", arg: 2, scope: !250, file: !78, line: 149, type: !93)
!3552 = !DILocation(line: 149, column: 51, scope: !250)
!3553 = !DILocalVariable(name: "end", arg: 3, scope: !250, file: !78, line: 150, type: !93)
!3554 = !DILocation(line: 150, column: 30, scope: !250)
!3555 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !250, file: !78, line: 150, type: !95)
!3556 = !DILocation(line: 150, column: 48, scope: !250)
!3557 = !DILocation(line: 152, column: 3, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !78, line: 152, column: 3)
!3559 = distinct !DILexicalBlock(scope: !250, file: !78, line: 152, column: 3)
!3560 = !DILocation(line: 152, column: 3, scope: !3559)
!3561 = !DILocation(line: 152, column: 3, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !3563, file: !78, discriminator: 1)
!3563 = distinct !DILexicalBlock(scope: !3558, file: !78, line: 152, column: 3)
!3564 = !DILocation(line: 153, column: 11, scope: !250)
!3565 = !DILocation(line: 153, column: 3, scope: !250)
!3566 = !DILocation(line: 155, column: 32, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !250, file: !78, line: 153, column: 32)
!3568 = !DILocation(line: 155, column: 37, scope: !3567)
!3569 = !DILocation(line: 155, column: 41, scope: !3567)
!3570 = !DILocation(line: 155, column: 56, scope: !3567)
!3571 = !DILocation(line: 155, column: 61, scope: !3567)
!3572 = !DILocation(line: 155, column: 12, scope: !3567)
!3573 = !DILocation(line: 155, column: 5, scope: !3567)
!3574 = !DILocation(line: 157, column: 19, scope: !3567)
!3575 = !DILocation(line: 157, column: 23, scope: !3567)
!3576 = !DILocation(line: 157, column: 6, scope: !3567)
!3577 = !DILocation(line: 157, column: 17, scope: !3567)
!3578 = !DILocation(line: 158, column: 5, scope: !3567)
!3579 = !DILocation(line: 161, column: 9, scope: !3567)
!3580 = !DILocation(line: 162, column: 5, scope: !3567)
!3581 = !DILocation(line: 164, column: 19, scope: !3567)
!3582 = !DILocation(line: 164, column: 6, scope: !3567)
!3583 = !DILocation(line: 164, column: 17, scope: !3567)
!3584 = !DILocation(line: 165, column: 5, scope: !3567)
!3585 = !DILocation(line: 167, column: 3, scope: !250)
!3586 = !DILocation(line: 167, column: 10, scope: !3587)
!3587 = !DILexicalBlockFile(scope: !250, file: !78, discriminator: 1)
!3588 = !DILocation(line: 167, column: 3, scope: !3587)
!3589 = !DILocation(line: 168, column: 13, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !250, file: !78, line: 167, column: 35)
!3591 = !DILocation(line: 168, column: 5, scope: !3590)
!3592 = !DILocation(line: 170, column: 7, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !78, line: 170, column: 7)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !78, line: 170, column: 7)
!3595 = distinct !DILexicalBlock(scope: !3590, file: !78, line: 168, column: 34)
!3596 = !DILocation(line: 170, column: 7, scope: !3594)
!3597 = !DILocation(line: 170, column: 7, scope: !3598)
!3598 = !DILexicalBlockFile(scope: !3599, file: !78, discriminator: 1)
!3599 = distinct !DILexicalBlock(scope: !3593, file: !78, line: 170, column: 7)
!3600 = !DILocation(line: 172, column: 15, scope: !3595)
!3601 = !DILocation(line: 172, column: 7, scope: !3595)
!3602 = !DILocation(line: 174, column: 23, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3595, file: !78, line: 172, column: 50)
!3604 = !DILocation(line: 174, column: 10, scope: !3603)
!3605 = !DILocation(line: 174, column: 21, scope: !3603)
!3606 = !DILocation(line: 175, column: 9, scope: !3603)
!3607 = !DILocation(line: 176, column: 7, scope: !3603)
!3608 = !DILocation(line: 179, column: 21, scope: !3595)
!3609 = !DILocation(line: 179, column: 8, scope: !3595)
!3610 = !DILocation(line: 179, column: 19, scope: !3595)
!3611 = !DILocation(line: 180, column: 7, scope: !3595)
!3612 = !DILocation(line: 183, column: 11, scope: !3595)
!3613 = !DILocation(line: 184, column: 7, scope: !3595)
!3614 = !DILocation(line: 186, column: 21, scope: !3595)
!3615 = !DILocation(line: 186, column: 8, scope: !3595)
!3616 = !DILocation(line: 186, column: 19, scope: !3595)
!3617 = !DILocation(line: 187, column: 7, scope: !3595)
!3618 = !DILocation(line: 167, column: 3, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !250, file: !78, discriminator: 2)
!3620 = !DILocation(line: 190, column: 3, scope: !250)
!3621 = !DILocation(line: 191, column: 1, scope: !250)
!3622 = !DILocalVariable(name: "enc", arg: 1, scope: !252, file: !78, line: 239, type: !82)
!3623 = !DILocation(line: 239, column: 32, scope: !252)
!3624 = !DILocalVariable(name: "ptr", arg: 2, scope: !252, file: !78, line: 239, type: !93)
!3625 = !DILocation(line: 239, column: 49, scope: !252)
!3626 = !DILocalVariable(name: "end", arg: 3, scope: !252, file: !78, line: 240, type: !93)
!3627 = !DILocation(line: 240, column: 28, scope: !252)
!3628 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !252, file: !78, line: 240, type: !95)
!3629 = !DILocation(line: 240, column: 46, scope: !252)
!3630 = !DILocalVariable(name: "tok", scope: !252, file: !78, line: 242, type: !7)
!3631 = !DILocation(line: 242, column: 7, scope: !252)
!3632 = !DILocalVariable(name: "target", scope: !252, file: !78, line: 243, type: !93)
!3633 = !DILocation(line: 243, column: 15, scope: !252)
!3634 = !DILocation(line: 243, column: 24, scope: !252)
!3635 = !DILocation(line: 244, column: 3, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !78, line: 244, column: 3)
!3637 = distinct !DILexicalBlock(scope: !252, file: !78, line: 244, column: 3)
!3638 = !DILocation(line: 244, column: 3, scope: !3637)
!3639 = !DILocation(line: 244, column: 3, scope: !3640)
!3640 = !DILexicalBlockFile(scope: !3641, file: !78, discriminator: 1)
!3641 = distinct !DILexicalBlock(scope: !3636, file: !78, line: 244, column: 3)
!3642 = !DILocation(line: 245, column: 11, scope: !252)
!3643 = !DILocation(line: 245, column: 3, scope: !252)
!3644 = !DILocation(line: 246, column: 3, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !78, line: 246, column: 3)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !78, line: 246, column: 3)
!3647 = distinct !DILexicalBlock(scope: !252, file: !78, line: 245, column: 32)
!3648 = !DILocation(line: 246, column: 3, scope: !3649)
!3649 = !DILexicalBlockFile(scope: !3647, file: !78, discriminator: 1)
!3650 = !DILocation(line: 246, column: 3, scope: !3651)
!3651 = !DILexicalBlockFile(scope: !3652, file: !78, discriminator: 2)
!3652 = distinct !DILexicalBlock(scope: !3647, file: !78, line: 246, column: 3)
!3653 = !DILocation(line: 246, column: 3, scope: !3654)
!3654 = !DILexicalBlockFile(scope: !3652, file: !78, discriminator: 3)
!3655 = !DILocation(line: 246, column: 3, scope: !3656)
!3656 = !DILexicalBlockFile(scope: !3657, file: !78, discriminator: 4)
!3657 = distinct !DILexicalBlock(scope: !3647, file: !78, line: 246, column: 3)
!3658 = !DILocation(line: 246, column: 3, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !3660, file: !78, discriminator: 5)
!3660 = distinct !DILexicalBlock(scope: !3657, file: !78, line: 246, column: 3)
!3661 = !DILocation(line: 246, column: 3, scope: !3662)
!3662 = !DILexicalBlockFile(scope: !3647, file: !78, discriminator: 6)
!3663 = !DILocation(line: 246, column: 3, scope: !3664)
!3664 = !DILexicalBlockFile(scope: !3665, file: !78, discriminator: 7)
!3665 = distinct !DILexicalBlock(scope: !3647, file: !78, line: 246, column: 3)
!3666 = !DILocation(line: 246, column: 3, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !3665, file: !78, discriminator: 8)
!3668 = !DILocation(line: 246, column: 3, scope: !3669)
!3669 = !DILexicalBlockFile(scope: !3670, file: !78, discriminator: 9)
!3670 = distinct !DILexicalBlock(scope: !3647, file: !78, line: 246, column: 3)
!3671 = !DILocation(line: 246, column: 3, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3673, file: !78, discriminator: 10)
!3673 = distinct !DILexicalBlock(scope: !3670, file: !78, line: 246, column: 3)
!3674 = !DILocation(line: 246, column: 3, scope: !3675)
!3675 = !DILexicalBlockFile(scope: !3647, file: !78, discriminator: 11)
!3676 = !DILocation(line: 246, column: 3, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3678, file: !78, discriminator: 12)
!3678 = distinct !DILexicalBlock(scope: !3647, file: !78, line: 246, column: 3)
!3679 = !DILocation(line: 246, column: 3, scope: !3680)
!3680 = !DILexicalBlockFile(scope: !3678, file: !78, discriminator: 13)
!3681 = !DILocation(line: 246, column: 3, scope: !3682)
!3682 = !DILexicalBlockFile(scope: !3683, file: !78, discriminator: 14)
!3683 = distinct !DILexicalBlock(scope: !3647, file: !78, line: 246, column: 3)
!3684 = !DILocation(line: 246, column: 3, scope: !3685)
!3685 = !DILexicalBlockFile(scope: !3686, file: !78, discriminator: 15)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !78, line: 246, column: 3)
!3687 = !DILocation(line: 246, column: 3, scope: !3688)
!3688 = !DILexicalBlockFile(scope: !3647, file: !78, discriminator: 16)
!3689 = !DILocation(line: 248, column: 19, scope: !3647)
!3690 = !DILocation(line: 248, column: 6, scope: !3647)
!3691 = !DILocation(line: 248, column: 17, scope: !3647)
!3692 = !DILocation(line: 249, column: 5, scope: !3647)
!3693 = !DILocation(line: 251, column: 3, scope: !252)
!3694 = !DILocation(line: 251, column: 10, scope: !3695)
!3695 = !DILexicalBlockFile(scope: !252, file: !78, discriminator: 1)
!3696 = !DILocation(line: 251, column: 3, scope: !3695)
!3697 = !DILocation(line: 252, column: 13, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !252, file: !78, line: 251, column: 35)
!3699 = !DILocation(line: 252, column: 5, scope: !3698)
!3700 = !DILocation(line: 253, column: 5, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !78, line: 253, column: 5)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 253, column: 5)
!3703 = distinct !DILexicalBlock(scope: !3698, file: !78, line: 252, column: 34)
!3704 = !DILocation(line: 253, column: 5, scope: !3705)
!3705 = !DILexicalBlockFile(scope: !3703, file: !78, discriminator: 1)
!3706 = !DILocation(line: 253, column: 5, scope: !3707)
!3707 = !DILexicalBlockFile(scope: !3708, file: !78, discriminator: 2)
!3708 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 253, column: 5)
!3709 = !DILocation(line: 253, column: 5, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3708, file: !78, discriminator: 3)
!3711 = !DILocation(line: 253, column: 5, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !3713, file: !78, discriminator: 4)
!3713 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 253, column: 5)
!3714 = !DILocation(line: 253, column: 5, scope: !3715)
!3715 = !DILexicalBlockFile(scope: !3716, file: !78, discriminator: 5)
!3716 = distinct !DILexicalBlock(scope: !3713, file: !78, line: 253, column: 5)
!3717 = !DILocation(line: 253, column: 5, scope: !3718)
!3718 = !DILexicalBlockFile(scope: !3703, file: !78, discriminator: 6)
!3719 = !DILocation(line: 253, column: 5, scope: !3720)
!3720 = !DILexicalBlockFile(scope: !3721, file: !78, discriminator: 7)
!3721 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 253, column: 5)
!3722 = !DILocation(line: 253, column: 5, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3721, file: !78, discriminator: 8)
!3724 = !DILocation(line: 253, column: 5, scope: !3725)
!3725 = !DILexicalBlockFile(scope: !3726, file: !78, discriminator: 9)
!3726 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 253, column: 5)
!3727 = !DILocation(line: 253, column: 5, scope: !3728)
!3728 = !DILexicalBlockFile(scope: !3729, file: !78, discriminator: 10)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !78, line: 253, column: 5)
!3730 = !DILocation(line: 253, column: 5, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !3703, file: !78, discriminator: 11)
!3732 = !DILocation(line: 253, column: 5, scope: !3733)
!3733 = !DILexicalBlockFile(scope: !3734, file: !78, discriminator: 12)
!3734 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 253, column: 5)
!3735 = !DILocation(line: 253, column: 5, scope: !3736)
!3736 = !DILexicalBlockFile(scope: !3734, file: !78, discriminator: 13)
!3737 = !DILocation(line: 253, column: 5, scope: !3738)
!3738 = !DILexicalBlockFile(scope: !3739, file: !78, discriminator: 14)
!3739 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 253, column: 5)
!3740 = !DILocation(line: 253, column: 5, scope: !3741)
!3741 = !DILexicalBlockFile(scope: !3742, file: !78, discriminator: 15)
!3742 = distinct !DILexicalBlock(scope: !3739, file: !78, line: 253, column: 5)
!3743 = !DILocation(line: 253, column: 5, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3703, file: !78, discriminator: 16)
!3745 = !DILocation(line: 255, column: 34, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 255, column: 11)
!3747 = !DILocation(line: 255, column: 39, scope: !3746)
!3748 = !DILocation(line: 255, column: 47, scope: !3746)
!3749 = !DILocation(line: 255, column: 12, scope: !3746)
!3750 = !DILocation(line: 255, column: 11, scope: !3703)
!3751 = !DILocation(line: 256, column: 23, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3746, file: !78, line: 255, column: 59)
!3753 = !DILocation(line: 256, column: 10, scope: !3752)
!3754 = !DILocation(line: 256, column: 21, scope: !3752)
!3755 = !DILocation(line: 257, column: 9, scope: !3752)
!3756 = !DILocation(line: 259, column: 11, scope: !3703)
!3757 = !DILocation(line: 260, column: 7, scope: !3703)
!3758 = !DILocation(line: 260, column: 14, scope: !3705)
!3759 = !DILocation(line: 260, column: 7, scope: !3705)
!3760 = !DILocation(line: 261, column: 17, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 260, column: 39)
!3762 = !DILocation(line: 261, column: 9, scope: !3761)
!3763 = !DILocation(line: 262, column: 9, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 262, column: 9)
!3765 = distinct !DILexicalBlock(scope: !3761, file: !78, line: 261, column: 38)
!3766 = !DILocation(line: 262, column: 9, scope: !3765)
!3767 = !DILocation(line: 262, column: 9, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !3764, file: !78, discriminator: 1)
!3769 = !DILocation(line: 262, column: 9, scope: !3770)
!3770 = !DILexicalBlockFile(scope: !3771, file: !78, discriminator: 2)
!3771 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 262, column: 9)
!3772 = !DILocation(line: 262, column: 9, scope: !3773)
!3773 = !DILexicalBlockFile(scope: !3774, file: !78, discriminator: 3)
!3774 = distinct !DILexicalBlock(scope: !3771, file: !78, line: 262, column: 9)
!3775 = !DILocation(line: 262, column: 9, scope: !3776)
!3776 = !DILexicalBlockFile(scope: !3765, file: !78, discriminator: 4)
!3777 = !DILocation(line: 262, column: 9, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3779, file: !78, discriminator: 5)
!3779 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 262, column: 9)
!3780 = !DILocation(line: 262, column: 9, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3779, file: !78, discriminator: 6)
!3782 = !DILocation(line: 262, column: 9, scope: !3783)
!3783 = !DILexicalBlockFile(scope: !3784, file: !78, discriminator: 7)
!3784 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 262, column: 9)
!3785 = !DILocation(line: 262, column: 9, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !3787, file: !78, discriminator: 8)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !78, line: 262, column: 9)
!3788 = !DILocation(line: 262, column: 9, scope: !3789)
!3789 = !DILexicalBlockFile(scope: !3765, file: !78, discriminator: 9)
!3790 = !DILocation(line: 262, column: 9, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !3792, file: !78, discriminator: 10)
!3792 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 262, column: 9)
!3793 = !DILocation(line: 262, column: 9, scope: !3794)
!3794 = !DILexicalBlockFile(scope: !3792, file: !78, discriminator: 11)
!3795 = !DILocation(line: 262, column: 9, scope: !3796)
!3796 = !DILexicalBlockFile(scope: !3797, file: !78, discriminator: 12)
!3797 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 262, column: 9)
!3798 = !DILocation(line: 262, column: 9, scope: !3799)
!3799 = !DILexicalBlockFile(scope: !3800, file: !78, discriminator: 13)
!3800 = distinct !DILexicalBlock(scope: !3797, file: !78, line: 262, column: 9)
!3801 = !DILocation(line: 262, column: 9, scope: !3802)
!3802 = !DILexicalBlockFile(scope: !3765, file: !78, discriminator: 14)
!3803 = !DILocation(line: 262, column: 9, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3765, file: !78, discriminator: 15)
!3805 = !DILocation(line: 264, column: 15, scope: !3765)
!3806 = !DILocation(line: 265, column: 11, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !78, line: 265, column: 11)
!3808 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 265, column: 11)
!3809 = !DILocation(line: 265, column: 11, scope: !3808)
!3810 = !DILocation(line: 265, column: 11, scope: !3811)
!3811 = !DILexicalBlockFile(scope: !3812, file: !78, discriminator: 1)
!3812 = distinct !DILexicalBlock(scope: !3807, file: !78, line: 265, column: 11)
!3813 = !DILocation(line: 266, column: 15, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3765, file: !78, line: 266, column: 15)
!3815 = !DILocation(line: 266, column: 15, scope: !3765)
!3816 = !DILocation(line: 267, column: 27, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3814, file: !78, line: 266, column: 49)
!3818 = !DILocation(line: 267, column: 31, scope: !3817)
!3819 = !DILocation(line: 267, column: 14, scope: !3817)
!3820 = !DILocation(line: 267, column: 25, scope: !3817)
!3821 = !DILocation(line: 268, column: 20, scope: !3817)
!3822 = !DILocation(line: 268, column: 13, scope: !3817)
!3823 = !DILocation(line: 270, column: 11, scope: !3765)
!3824 = !DILocation(line: 272, column: 15, scope: !3765)
!3825 = !DILocation(line: 273, column: 11, scope: !3765)
!3826 = !DILocation(line: 260, column: 7, scope: !3827)
!3827 = !DILexicalBlockFile(scope: !3703, file: !78, discriminator: 2)
!3828 = !DILocation(line: 276, column: 7, scope: !3703)
!3829 = !DILocation(line: 278, column: 34, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 278, column: 11)
!3831 = !DILocation(line: 278, column: 39, scope: !3830)
!3832 = !DILocation(line: 278, column: 47, scope: !3830)
!3833 = !DILocation(line: 278, column: 12, scope: !3830)
!3834 = !DILocation(line: 278, column: 11, scope: !3703)
!3835 = !DILocation(line: 279, column: 23, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3830, file: !78, line: 278, column: 59)
!3837 = !DILocation(line: 279, column: 10, scope: !3836)
!3838 = !DILocation(line: 279, column: 21, scope: !3836)
!3839 = !DILocation(line: 280, column: 9, scope: !3836)
!3840 = !DILocation(line: 282, column: 11, scope: !3703)
!3841 = !DILocation(line: 283, column: 7, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !78, line: 283, column: 7)
!3843 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 283, column: 7)
!3844 = !DILocation(line: 283, column: 7, scope: !3843)
!3845 = !DILocation(line: 283, column: 7, scope: !3846)
!3846 = !DILexicalBlockFile(scope: !3847, file: !78, discriminator: 1)
!3847 = distinct !DILexicalBlock(scope: !3842, file: !78, line: 283, column: 7)
!3848 = !DILocation(line: 284, column: 11, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3703, file: !78, line: 284, column: 11)
!3850 = !DILocation(line: 284, column: 11, scope: !3703)
!3851 = !DILocation(line: 285, column: 23, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3849, file: !78, line: 284, column: 45)
!3853 = !DILocation(line: 285, column: 27, scope: !3852)
!3854 = !DILocation(line: 285, column: 10, scope: !3852)
!3855 = !DILocation(line: 285, column: 21, scope: !3852)
!3856 = !DILocation(line: 286, column: 16, scope: !3852)
!3857 = !DILocation(line: 286, column: 9, scope: !3852)
!3858 = !DILocation(line: 284, column: 11, scope: !3859)
!3859 = !DILexicalBlockFile(scope: !3849, file: !78, discriminator: 1)
!3860 = !DILocation(line: 290, column: 21, scope: !3703)
!3861 = !DILocation(line: 290, column: 8, scope: !3703)
!3862 = !DILocation(line: 290, column: 19, scope: !3703)
!3863 = !DILocation(line: 291, column: 7, scope: !3703)
!3864 = !DILocation(line: 251, column: 3, scope: !3865)
!3865 = !DILexicalBlockFile(scope: !252, file: !78, discriminator: 2)
!3866 = !DILocation(line: 294, column: 3, scope: !252)
!3867 = !DILocation(line: 295, column: 1, scope: !252)
!3868 = !DILocalVariable(name: "enc", arg: 1, scope: !256, file: !78, line: 881, type: !82)
!3869 = !DILocation(line: 881, column: 37, scope: !256)
!3870 = !DILocalVariable(name: "ptr", arg: 2, scope: !256, file: !78, line: 881, type: !93)
!3871 = !DILocation(line: 881, column: 54, scope: !256)
!3872 = !DILocalVariable(name: "end", arg: 3, scope: !256, file: !78, line: 881, type: !93)
!3873 = !DILocation(line: 881, column: 71, scope: !256)
!3874 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !256, file: !78, line: 882, type: !95)
!3875 = !DILocation(line: 882, column: 34, scope: !256)
!3876 = !DILocation(line: 884, column: 3, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !78, line: 884, column: 3)
!3878 = distinct !DILexicalBlock(scope: !256, file: !78, line: 884, column: 3)
!3879 = !DILocation(line: 884, column: 3, scope: !3878)
!3880 = !DILocation(line: 884, column: 3, scope: !3881)
!3881 = !DILexicalBlockFile(scope: !3882, file: !78, discriminator: 1)
!3882 = distinct !DILexicalBlock(scope: !3877, file: !78, line: 884, column: 3)
!3883 = !DILocation(line: 885, column: 11, scope: !256)
!3884 = !DILocation(line: 885, column: 3, scope: !256)
!3885 = !DILocation(line: 886, column: 3, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !78, line: 886, column: 3)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !78, line: 886, column: 3)
!3888 = distinct !DILexicalBlock(scope: !256, file: !78, line: 885, column: 32)
!3889 = !DILocation(line: 886, column: 3, scope: !3890)
!3890 = !DILexicalBlockFile(scope: !3888, file: !78, discriminator: 1)
!3891 = !DILocation(line: 886, column: 3, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3893, file: !78, discriminator: 2)
!3893 = distinct !DILexicalBlock(scope: !3888, file: !78, line: 886, column: 3)
!3894 = !DILocation(line: 886, column: 3, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !3893, file: !78, discriminator: 3)
!3896 = !DILocation(line: 886, column: 3, scope: !3897)
!3897 = !DILexicalBlockFile(scope: !3898, file: !78, discriminator: 4)
!3898 = distinct !DILexicalBlock(scope: !3888, file: !78, line: 886, column: 3)
!3899 = !DILocation(line: 886, column: 3, scope: !3900)
!3900 = !DILexicalBlockFile(scope: !3901, file: !78, discriminator: 5)
!3901 = distinct !DILexicalBlock(scope: !3898, file: !78, line: 886, column: 3)
!3902 = !DILocation(line: 886, column: 3, scope: !3903)
!3903 = !DILexicalBlockFile(scope: !3888, file: !78, discriminator: 6)
!3904 = !DILocation(line: 886, column: 3, scope: !3905)
!3905 = !DILexicalBlockFile(scope: !3906, file: !78, discriminator: 7)
!3906 = distinct !DILexicalBlock(scope: !3888, file: !78, line: 886, column: 3)
!3907 = !DILocation(line: 886, column: 3, scope: !3908)
!3908 = !DILexicalBlockFile(scope: !3906, file: !78, discriminator: 8)
!3909 = !DILocation(line: 886, column: 3, scope: !3910)
!3910 = !DILexicalBlockFile(scope: !3911, file: !78, discriminator: 9)
!3911 = distinct !DILexicalBlock(scope: !3888, file: !78, line: 886, column: 3)
!3912 = !DILocation(line: 886, column: 3, scope: !3913)
!3913 = !DILexicalBlockFile(scope: !3914, file: !78, discriminator: 10)
!3914 = distinct !DILexicalBlock(scope: !3911, file: !78, line: 886, column: 3)
!3915 = !DILocation(line: 886, column: 3, scope: !3916)
!3916 = !DILexicalBlockFile(scope: !3888, file: !78, discriminator: 11)
!3917 = !DILocation(line: 886, column: 3, scope: !3918)
!3918 = !DILexicalBlockFile(scope: !3919, file: !78, discriminator: 12)
!3919 = distinct !DILexicalBlock(scope: !3888, file: !78, line: 886, column: 3)
!3920 = !DILocation(line: 886, column: 3, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3919, file: !78, discriminator: 13)
!3922 = !DILocation(line: 886, column: 3, scope: !3923)
!3923 = !DILexicalBlockFile(scope: !3924, file: !78, discriminator: 14)
!3924 = distinct !DILexicalBlock(scope: !3888, file: !78, line: 886, column: 3)
!3925 = !DILocation(line: 886, column: 3, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !3927, file: !78, discriminator: 15)
!3927 = distinct !DILexicalBlock(scope: !3924, file: !78, line: 886, column: 3)
!3928 = !DILocation(line: 886, column: 3, scope: !3929)
!3929 = !DILexicalBlockFile(scope: !3888, file: !78, discriminator: 16)
!3930 = !DILocation(line: 888, column: 19, scope: !3888)
!3931 = !DILocation(line: 888, column: 6, scope: !3888)
!3932 = !DILocation(line: 888, column: 17, scope: !3888)
!3933 = !DILocation(line: 889, column: 5, scope: !3888)
!3934 = !DILocation(line: 891, column: 19, scope: !3888)
!3935 = !DILocation(line: 891, column: 6, scope: !3888)
!3936 = !DILocation(line: 891, column: 17, scope: !3888)
!3937 = !DILocation(line: 892, column: 5, scope: !3888)
!3938 = !DILocation(line: 894, column: 3, scope: !256)
!3939 = !DILocation(line: 894, column: 10, scope: !3940)
!3940 = !DILexicalBlockFile(scope: !256, file: !78, discriminator: 1)
!3941 = !DILocation(line: 894, column: 3, scope: !3940)
!3942 = !DILocation(line: 895, column: 13, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !256, file: !78, line: 894, column: 35)
!3944 = !DILocation(line: 895, column: 5, scope: !3943)
!3945 = !DILocation(line: 896, column: 5, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !78, line: 896, column: 5)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !78, line: 896, column: 5)
!3948 = distinct !DILexicalBlock(scope: !3943, file: !78, line: 895, column: 34)
!3949 = !DILocation(line: 896, column: 5, scope: !3950)
!3950 = !DILexicalBlockFile(scope: !3948, file: !78, discriminator: 1)
!3951 = !DILocation(line: 896, column: 5, scope: !3952)
!3952 = !DILexicalBlockFile(scope: !3953, file: !78, discriminator: 2)
!3953 = distinct !DILexicalBlock(scope: !3948, file: !78, line: 896, column: 5)
!3954 = !DILocation(line: 896, column: 5, scope: !3955)
!3955 = !DILexicalBlockFile(scope: !3953, file: !78, discriminator: 3)
!3956 = !DILocation(line: 896, column: 5, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !3958, file: !78, discriminator: 4)
!3958 = distinct !DILexicalBlock(scope: !3948, file: !78, line: 896, column: 5)
!3959 = !DILocation(line: 896, column: 5, scope: !3960)
!3960 = !DILexicalBlockFile(scope: !3961, file: !78, discriminator: 5)
!3961 = distinct !DILexicalBlock(scope: !3958, file: !78, line: 896, column: 5)
!3962 = !DILocation(line: 896, column: 5, scope: !3963)
!3963 = !DILexicalBlockFile(scope: !3948, file: !78, discriminator: 6)
!3964 = !DILocation(line: 896, column: 5, scope: !3965)
!3965 = !DILexicalBlockFile(scope: !3966, file: !78, discriminator: 7)
!3966 = distinct !DILexicalBlock(scope: !3948, file: !78, line: 896, column: 5)
!3967 = !DILocation(line: 896, column: 5, scope: !3968)
!3968 = !DILexicalBlockFile(scope: !3966, file: !78, discriminator: 8)
!3969 = !DILocation(line: 896, column: 5, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3971, file: !78, discriminator: 9)
!3971 = distinct !DILexicalBlock(scope: !3948, file: !78, line: 896, column: 5)
!3972 = !DILocation(line: 896, column: 5, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3974, file: !78, discriminator: 10)
!3974 = distinct !DILexicalBlock(scope: !3971, file: !78, line: 896, column: 5)
!3975 = !DILocation(line: 896, column: 5, scope: !3976)
!3976 = !DILexicalBlockFile(scope: !3948, file: !78, discriminator: 11)
!3977 = !DILocation(line: 896, column: 5, scope: !3978)
!3978 = !DILexicalBlockFile(scope: !3979, file: !78, discriminator: 12)
!3979 = distinct !DILexicalBlock(scope: !3948, file: !78, line: 896, column: 5)
!3980 = !DILocation(line: 896, column: 5, scope: !3981)
!3981 = !DILexicalBlockFile(scope: !3979, file: !78, discriminator: 13)
!3982 = !DILocation(line: 896, column: 5, scope: !3983)
!3983 = !DILexicalBlockFile(scope: !3984, file: !78, discriminator: 14)
!3984 = distinct !DILexicalBlock(scope: !3948, file: !78, line: 896, column: 5)
!3985 = !DILocation(line: 896, column: 5, scope: !3986)
!3986 = !DILexicalBlockFile(scope: !3987, file: !78, discriminator: 15)
!3987 = distinct !DILexicalBlock(scope: !3984, file: !78, line: 896, column: 5)
!3988 = !DILocation(line: 896, column: 5, scope: !3989)
!3989 = !DILexicalBlockFile(scope: !3948, file: !78, discriminator: 16)
!3990 = !DILocation(line: 898, column: 21, scope: !3948)
!3991 = !DILocation(line: 898, column: 25, scope: !3948)
!3992 = !DILocation(line: 898, column: 8, scope: !3948)
!3993 = !DILocation(line: 898, column: 19, scope: !3948)
!3994 = !DILocation(line: 899, column: 7, scope: !3948)
!3995 = !DILocation(line: 901, column: 21, scope: !3948)
!3996 = !DILocation(line: 901, column: 8, scope: !3948)
!3997 = !DILocation(line: 901, column: 19, scope: !3948)
!3998 = !DILocation(line: 902, column: 7, scope: !3948)
!3999 = !DILocation(line: 894, column: 3, scope: !4000)
!4000 = !DILexicalBlockFile(scope: !256, file: !78, discriminator: 2)
!4001 = !DILocation(line: 905, column: 3, scope: !256)
!4002 = !DILocation(line: 906, column: 1, scope: !256)
!4003 = !DILocalVariable(name: "enc", arg: 1, scope: !257, file: !78, line: 909, type: !82)
!4004 = !DILocation(line: 909, column: 39, scope: !257)
!4005 = !DILocalVariable(name: "ptr", arg: 2, scope: !257, file: !78, line: 909, type: !93)
!4006 = !DILocation(line: 909, column: 56, scope: !257)
!4007 = !DILocalVariable(name: "end", arg: 3, scope: !257, file: !78, line: 909, type: !93)
!4008 = !DILocation(line: 909, column: 73, scope: !257)
!4009 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !257, file: !78, line: 910, type: !95)
!4010 = !DILocation(line: 910, column: 36, scope: !257)
!4011 = !DILocation(line: 912, column: 3, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !78, line: 912, column: 3)
!4013 = distinct !DILexicalBlock(scope: !257, file: !78, line: 912, column: 3)
!4014 = !DILocation(line: 912, column: 3, scope: !4013)
!4015 = !DILocation(line: 912, column: 3, scope: !4016)
!4016 = !DILexicalBlockFile(scope: !4017, file: !78, discriminator: 1)
!4017 = distinct !DILexicalBlock(scope: !4012, file: !78, line: 912, column: 3)
!4018 = !DILocation(line: 913, column: 11, scope: !257)
!4019 = !DILocation(line: 913, column: 3, scope: !257)
!4020 = !DILocation(line: 914, column: 3, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !78, line: 914, column: 3)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !78, line: 914, column: 3)
!4023 = distinct !DILexicalBlock(scope: !257, file: !78, line: 913, column: 32)
!4024 = !DILocation(line: 914, column: 3, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !4023, file: !78, discriminator: 1)
!4026 = !DILocation(line: 914, column: 3, scope: !4027)
!4027 = !DILexicalBlockFile(scope: !4028, file: !78, discriminator: 2)
!4028 = distinct !DILexicalBlock(scope: !4023, file: !78, line: 914, column: 3)
!4029 = !DILocation(line: 914, column: 3, scope: !4030)
!4030 = !DILexicalBlockFile(scope: !4028, file: !78, discriminator: 3)
!4031 = !DILocation(line: 914, column: 3, scope: !4032)
!4032 = !DILexicalBlockFile(scope: !4033, file: !78, discriminator: 4)
!4033 = distinct !DILexicalBlock(scope: !4023, file: !78, line: 914, column: 3)
!4034 = !DILocation(line: 914, column: 3, scope: !4035)
!4035 = !DILexicalBlockFile(scope: !4036, file: !78, discriminator: 5)
!4036 = distinct !DILexicalBlock(scope: !4033, file: !78, line: 914, column: 3)
!4037 = !DILocation(line: 914, column: 3, scope: !4038)
!4038 = !DILexicalBlockFile(scope: !4023, file: !78, discriminator: 6)
!4039 = !DILocation(line: 914, column: 3, scope: !4040)
!4040 = !DILexicalBlockFile(scope: !4041, file: !78, discriminator: 7)
!4041 = distinct !DILexicalBlock(scope: !4023, file: !78, line: 914, column: 3)
!4042 = !DILocation(line: 914, column: 3, scope: !4043)
!4043 = !DILexicalBlockFile(scope: !4041, file: !78, discriminator: 8)
!4044 = !DILocation(line: 914, column: 3, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !4046, file: !78, discriminator: 9)
!4046 = distinct !DILexicalBlock(scope: !4023, file: !78, line: 914, column: 3)
!4047 = !DILocation(line: 914, column: 3, scope: !4048)
!4048 = !DILexicalBlockFile(scope: !4049, file: !78, discriminator: 10)
!4049 = distinct !DILexicalBlock(scope: !4046, file: !78, line: 914, column: 3)
!4050 = !DILocation(line: 914, column: 3, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4023, file: !78, discriminator: 11)
!4052 = !DILocation(line: 914, column: 3, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !4054, file: !78, discriminator: 12)
!4054 = distinct !DILexicalBlock(scope: !4023, file: !78, line: 914, column: 3)
!4055 = !DILocation(line: 914, column: 3, scope: !4056)
!4056 = !DILexicalBlockFile(scope: !4054, file: !78, discriminator: 13)
!4057 = !DILocation(line: 914, column: 3, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !4059, file: !78, discriminator: 14)
!4059 = distinct !DILexicalBlock(scope: !4023, file: !78, line: 914, column: 3)
!4060 = !DILocation(line: 914, column: 3, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4062, file: !78, discriminator: 15)
!4062 = distinct !DILexicalBlock(scope: !4059, file: !78, line: 914, column: 3)
!4063 = !DILocation(line: 914, column: 3, scope: !4064)
!4064 = !DILexicalBlockFile(scope: !4023, file: !78, discriminator: 16)
!4065 = !DILocation(line: 916, column: 19, scope: !4023)
!4066 = !DILocation(line: 916, column: 6, scope: !4023)
!4067 = !DILocation(line: 916, column: 17, scope: !4023)
!4068 = !DILocation(line: 917, column: 5, scope: !4023)
!4069 = !DILocation(line: 919, column: 3, scope: !257)
!4070 = !DILocation(line: 919, column: 10, scope: !4071)
!4071 = !DILexicalBlockFile(scope: !257, file: !78, discriminator: 1)
!4072 = !DILocation(line: 919, column: 3, scope: !4071)
!4073 = !DILocation(line: 920, column: 13, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !257, file: !78, line: 919, column: 35)
!4075 = !DILocation(line: 920, column: 5, scope: !4074)
!4076 = !DILocation(line: 921, column: 5, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !78, line: 921, column: 5)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !78, line: 921, column: 5)
!4079 = distinct !DILexicalBlock(scope: !4074, file: !78, line: 920, column: 34)
!4080 = !DILocation(line: 921, column: 5, scope: !4081)
!4081 = !DILexicalBlockFile(scope: !4079, file: !78, discriminator: 1)
!4082 = !DILocation(line: 921, column: 5, scope: !4083)
!4083 = !DILexicalBlockFile(scope: !4084, file: !78, discriminator: 2)
!4084 = distinct !DILexicalBlock(scope: !4079, file: !78, line: 921, column: 5)
!4085 = !DILocation(line: 921, column: 5, scope: !4086)
!4086 = !DILexicalBlockFile(scope: !4084, file: !78, discriminator: 3)
!4087 = !DILocation(line: 921, column: 5, scope: !4088)
!4088 = !DILexicalBlockFile(scope: !4089, file: !78, discriminator: 4)
!4089 = distinct !DILexicalBlock(scope: !4079, file: !78, line: 921, column: 5)
!4090 = !DILocation(line: 921, column: 5, scope: !4091)
!4091 = !DILexicalBlockFile(scope: !4092, file: !78, discriminator: 5)
!4092 = distinct !DILexicalBlock(scope: !4089, file: !78, line: 921, column: 5)
!4093 = !DILocation(line: 921, column: 5, scope: !4094)
!4094 = !DILexicalBlockFile(scope: !4079, file: !78, discriminator: 6)
!4095 = !DILocation(line: 921, column: 5, scope: !4096)
!4096 = !DILexicalBlockFile(scope: !4097, file: !78, discriminator: 7)
!4097 = distinct !DILexicalBlock(scope: !4079, file: !78, line: 921, column: 5)
!4098 = !DILocation(line: 921, column: 5, scope: !4099)
!4099 = !DILexicalBlockFile(scope: !4097, file: !78, discriminator: 8)
!4100 = !DILocation(line: 921, column: 5, scope: !4101)
!4101 = !DILexicalBlockFile(scope: !4102, file: !78, discriminator: 9)
!4102 = distinct !DILexicalBlock(scope: !4079, file: !78, line: 921, column: 5)
!4103 = !DILocation(line: 921, column: 5, scope: !4104)
!4104 = !DILexicalBlockFile(scope: !4105, file: !78, discriminator: 10)
!4105 = distinct !DILexicalBlock(scope: !4102, file: !78, line: 921, column: 5)
!4106 = !DILocation(line: 921, column: 5, scope: !4107)
!4107 = !DILexicalBlockFile(scope: !4079, file: !78, discriminator: 11)
!4108 = !DILocation(line: 921, column: 5, scope: !4109)
!4109 = !DILexicalBlockFile(scope: !4110, file: !78, discriminator: 12)
!4110 = distinct !DILexicalBlock(scope: !4079, file: !78, line: 921, column: 5)
!4111 = !DILocation(line: 921, column: 5, scope: !4112)
!4112 = !DILexicalBlockFile(scope: !4110, file: !78, discriminator: 13)
!4113 = !DILocation(line: 921, column: 5, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !4115, file: !78, discriminator: 14)
!4115 = distinct !DILexicalBlock(scope: !4079, file: !78, line: 921, column: 5)
!4116 = !DILocation(line: 921, column: 5, scope: !4117)
!4117 = !DILexicalBlockFile(scope: !4118, file: !78, discriminator: 15)
!4118 = distinct !DILexicalBlock(scope: !4115, file: !78, line: 921, column: 5)
!4119 = !DILocation(line: 921, column: 5, scope: !4120)
!4120 = !DILexicalBlockFile(scope: !4079, file: !78, discriminator: 16)
!4121 = !DILocation(line: 924, column: 21, scope: !4079)
!4122 = !DILocation(line: 924, column: 8, scope: !4079)
!4123 = !DILocation(line: 924, column: 19, scope: !4079)
!4124 = !DILocation(line: 925, column: 7, scope: !4079)
!4125 = !DILocation(line: 927, column: 21, scope: !4079)
!4126 = !DILocation(line: 927, column: 8, scope: !4079)
!4127 = !DILocation(line: 927, column: 19, scope: !4079)
!4128 = !DILocation(line: 928, column: 7, scope: !4079)
!4129 = !DILocation(line: 919, column: 3, scope: !4130)
!4130 = !DILexicalBlockFile(scope: !257, file: !78, discriminator: 2)
!4131 = !DILocation(line: 931, column: 3, scope: !257)
!4132 = !DILocation(line: 932, column: 1, scope: !257)
!4133 = !DILocalVariable(name: "enc", arg: 1, scope: !251, file: !78, line: 111, type: !82)
!4134 = !DILocation(line: 111, column: 37, scope: !251)
!4135 = !DILocalVariable(name: "ptr", arg: 2, scope: !251, file: !78, line: 111, type: !93)
!4136 = !DILocation(line: 111, column: 54, scope: !251)
!4137 = !DILocalVariable(name: "end", arg: 3, scope: !251, file: !78, line: 112, type: !93)
!4138 = !DILocation(line: 112, column: 33, scope: !251)
!4139 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !251, file: !78, line: 112, type: !95)
!4140 = !DILocation(line: 112, column: 51, scope: !251)
!4141 = !DILocation(line: 114, column: 7, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !251, file: !78, line: 114, column: 7)
!4143 = !DILocation(line: 114, column: 7, scope: !251)
!4144 = !DILocation(line: 115, column: 10, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !78, line: 115, column: 9)
!4146 = distinct !DILexicalBlock(scope: !4142, file: !78, line: 114, column: 32)
!4147 = !DILocation(line: 115, column: 9, scope: !4146)
!4148 = !DILocation(line: 116, column: 21, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4145, file: !78, line: 115, column: 47)
!4150 = !DILocation(line: 116, column: 8, scope: !4149)
!4151 = !DILocation(line: 116, column: 19, scope: !4149)
!4152 = !DILocation(line: 117, column: 7, scope: !4149)
!4153 = !DILocation(line: 119, column: 9, scope: !4146)
!4154 = !DILocation(line: 120, column: 5, scope: !4146)
!4155 = !DILocation(line: 120, column: 12, scope: !4156)
!4156 = !DILexicalBlockFile(scope: !4146, file: !78, discriminator: 1)
!4157 = !DILocation(line: 120, column: 5, scope: !4156)
!4158 = !DILocation(line: 121, column: 15, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4146, file: !78, line: 120, column: 37)
!4160 = !DILocation(line: 121, column: 7, scope: !4159)
!4161 = !DILocation(line: 122, column: 7, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 122, column: 7)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !78, line: 121, column: 36)
!4164 = !DILocation(line: 122, column: 7, scope: !4163)
!4165 = !DILocation(line: 122, column: 7, scope: !4166)
!4166 = !DILexicalBlockFile(scope: !4162, file: !78, discriminator: 1)
!4167 = !DILocation(line: 122, column: 7, scope: !4168)
!4168 = !DILexicalBlockFile(scope: !4169, file: !78, discriminator: 2)
!4169 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 122, column: 7)
!4170 = !DILocation(line: 122, column: 7, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !4172, file: !78, discriminator: 3)
!4172 = distinct !DILexicalBlock(scope: !4169, file: !78, line: 122, column: 7)
!4173 = !DILocation(line: 122, column: 7, scope: !4174)
!4174 = !DILexicalBlockFile(scope: !4163, file: !78, discriminator: 4)
!4175 = !DILocation(line: 122, column: 7, scope: !4176)
!4176 = !DILexicalBlockFile(scope: !4177, file: !78, discriminator: 5)
!4177 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 122, column: 7)
!4178 = !DILocation(line: 122, column: 7, scope: !4179)
!4179 = !DILexicalBlockFile(scope: !4177, file: !78, discriminator: 6)
!4180 = !DILocation(line: 122, column: 7, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !4182, file: !78, discriminator: 7)
!4182 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 122, column: 7)
!4183 = !DILocation(line: 122, column: 7, scope: !4184)
!4184 = !DILexicalBlockFile(scope: !4185, file: !78, discriminator: 8)
!4185 = distinct !DILexicalBlock(scope: !4182, file: !78, line: 122, column: 7)
!4186 = !DILocation(line: 122, column: 7, scope: !4187)
!4187 = !DILexicalBlockFile(scope: !4163, file: !78, discriminator: 9)
!4188 = !DILocation(line: 122, column: 7, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !4190, file: !78, discriminator: 10)
!4190 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 122, column: 7)
!4191 = !DILocation(line: 122, column: 7, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !4190, file: !78, discriminator: 11)
!4193 = !DILocation(line: 122, column: 7, scope: !4194)
!4194 = !DILexicalBlockFile(scope: !4195, file: !78, discriminator: 12)
!4195 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 122, column: 7)
!4196 = !DILocation(line: 122, column: 7, scope: !4197)
!4197 = !DILexicalBlockFile(scope: !4198, file: !78, discriminator: 13)
!4198 = distinct !DILexicalBlock(scope: !4195, file: !78, line: 122, column: 7)
!4199 = !DILocation(line: 122, column: 7, scope: !4200)
!4200 = !DILexicalBlockFile(scope: !4163, file: !78, discriminator: 14)
!4201 = !DILocation(line: 122, column: 7, scope: !4202)
!4202 = !DILexicalBlockFile(scope: !4163, file: !78, discriminator: 15)
!4203 = !DILocation(line: 124, column: 13, scope: !4163)
!4204 = !DILocation(line: 125, column: 9, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !78, line: 125, column: 9)
!4206 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 125, column: 9)
!4207 = !DILocation(line: 125, column: 9, scope: !4206)
!4208 = !DILocation(line: 125, column: 9, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4210, file: !78, discriminator: 1)
!4210 = distinct !DILexicalBlock(scope: !4205, file: !78, line: 125, column: 9)
!4211 = !DILocation(line: 126, column: 13, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4163, file: !78, line: 126, column: 13)
!4213 = !DILocation(line: 126, column: 13, scope: !4163)
!4214 = !DILocation(line: 127, column: 15, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4212, file: !78, line: 126, column: 50)
!4216 = !DILocation(line: 128, column: 11, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !78, line: 128, column: 11)
!4218 = distinct !DILexicalBlock(scope: !4215, file: !78, line: 128, column: 11)
!4219 = !DILocation(line: 128, column: 11, scope: !4218)
!4220 = !DILocation(line: 128, column: 11, scope: !4221)
!4221 = !DILexicalBlockFile(scope: !4222, file: !78, discriminator: 1)
!4222 = distinct !DILexicalBlock(scope: !4217, file: !78, line: 128, column: 11)
!4223 = !DILocation(line: 129, column: 16, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4215, file: !78, line: 129, column: 15)
!4225 = !DILocation(line: 129, column: 15, scope: !4215)
!4226 = !DILocation(line: 130, column: 27, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4224, file: !78, line: 129, column: 50)
!4228 = !DILocation(line: 130, column: 14, scope: !4227)
!4229 = !DILocation(line: 130, column: 25, scope: !4227)
!4230 = !DILocation(line: 131, column: 13, scope: !4227)
!4231 = !DILocation(line: 133, column: 25, scope: !4215)
!4232 = !DILocation(line: 133, column: 29, scope: !4215)
!4233 = !DILocation(line: 133, column: 12, scope: !4215)
!4234 = !DILocation(line: 133, column: 23, scope: !4215)
!4235 = !DILocation(line: 134, column: 11, scope: !4215)
!4236 = !DILocation(line: 136, column: 9, scope: !4163)
!4237 = !DILocation(line: 138, column: 13, scope: !4163)
!4238 = !DILocation(line: 139, column: 9, scope: !4163)
!4239 = !DILocation(line: 120, column: 5, scope: !4240)
!4240 = !DILexicalBlockFile(scope: !4146, file: !78, discriminator: 2)
!4241 = !DILocation(line: 142, column: 3, scope: !4146)
!4242 = !DILocation(line: 143, column: 3, scope: !251)
!4243 = !DILocation(line: 144, column: 1, scope: !251)
!4244 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !253, file: !78, line: 194, type: !82)
!4245 = !DILocation(line: 194, column: 39, scope: !253)
!4246 = !DILocalVariable(name: "ptr", arg: 2, scope: !253, file: !78, line: 194, type: !93)
!4247 = !DILocation(line: 194, column: 66, scope: !253)
!4248 = !DILocalVariable(name: "end", arg: 3, scope: !253, file: !78, line: 195, type: !93)
!4249 = !DILocation(line: 195, column: 35, scope: !253)
!4250 = !DILocalVariable(name: "tokPtr", arg: 4, scope: !253, file: !78, line: 195, type: !233)
!4251 = !DILocation(line: 195, column: 45, scope: !253)
!4252 = !DILocalVariable(name: "upper", scope: !253, file: !78, line: 197, type: !7)
!4253 = !DILocation(line: 197, column: 7, scope: !253)
!4254 = !DILocation(line: 198, column: 4, scope: !253)
!4255 = !DILocation(line: 198, column: 11, scope: !253)
!4256 = !DILocation(line: 199, column: 7, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !253, file: !78, line: 199, column: 7)
!4258 = !DILocation(line: 199, column: 13, scope: !4257)
!4259 = !DILocation(line: 199, column: 11, scope: !4257)
!4260 = !DILocation(line: 199, column: 17, scope: !4257)
!4261 = !DILocation(line: 199, column: 7, scope: !253)
!4262 = !DILocation(line: 200, column: 5, scope: !4257)
!4263 = !DILocation(line: 201, column: 11, scope: !253)
!4264 = !DILocation(line: 201, column: 3, scope: !253)
!4265 = !DILocation(line: 203, column: 5, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !253, file: !78, line: 201, column: 36)
!4267 = !DILocation(line: 205, column: 11, scope: !4266)
!4268 = !DILocation(line: 206, column: 5, scope: !4266)
!4269 = !DILocation(line: 208, column: 5, scope: !4266)
!4270 = !DILocation(line: 210, column: 7, scope: !253)
!4271 = !DILocation(line: 211, column: 11, scope: !253)
!4272 = !DILocation(line: 211, column: 3, scope: !253)
!4273 = !DILocation(line: 213, column: 5, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !253, file: !78, line: 211, column: 36)
!4275 = !DILocation(line: 215, column: 11, scope: !4274)
!4276 = !DILocation(line: 216, column: 5, scope: !4274)
!4277 = !DILocation(line: 218, column: 5, scope: !4274)
!4278 = !DILocation(line: 220, column: 7, scope: !253)
!4279 = !DILocation(line: 221, column: 11, scope: !253)
!4280 = !DILocation(line: 221, column: 3, scope: !253)
!4281 = !DILocation(line: 223, column: 5, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !253, file: !78, line: 221, column: 36)
!4283 = !DILocation(line: 225, column: 11, scope: !4282)
!4284 = !DILocation(line: 226, column: 5, scope: !4282)
!4285 = !DILocation(line: 228, column: 5, scope: !4282)
!4286 = !DILocation(line: 230, column: 7, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !253, file: !78, line: 230, column: 7)
!4288 = !DILocation(line: 230, column: 7, scope: !253)
!4289 = !DILocation(line: 231, column: 5, scope: !4287)
!4290 = !DILocation(line: 232, column: 4, scope: !253)
!4291 = !DILocation(line: 232, column: 11, scope: !253)
!4292 = !DILocation(line: 233, column: 3, scope: !253)
!4293 = !DILocation(line: 234, column: 1, scope: !253)
!4294 = !DILocalVariable(name: "enc", arg: 1, scope: !259, file: !78, line: 685, type: !82)
!4295 = !DILocation(line: 685, column: 32, scope: !259)
!4296 = !DILocalVariable(name: "ptr", arg: 2, scope: !259, file: !78, line: 685, type: !93)
!4297 = !DILocation(line: 685, column: 49, scope: !259)
!4298 = !DILocalVariable(name: "end", arg: 3, scope: !259, file: !78, line: 685, type: !93)
!4299 = !DILocation(line: 685, column: 66, scope: !259)
!4300 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !259, file: !78, line: 686, type: !95)
!4301 = !DILocation(line: 686, column: 29, scope: !259)
!4302 = !DILocation(line: 691, column: 3, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !78, line: 691, column: 3)
!4304 = distinct !DILexicalBlock(scope: !259, file: !78, line: 691, column: 3)
!4305 = !DILocation(line: 691, column: 3, scope: !4304)
!4306 = !DILocation(line: 691, column: 3, scope: !4307)
!4307 = !DILexicalBlockFile(scope: !4308, file: !78, discriminator: 1)
!4308 = distinct !DILexicalBlock(scope: !4303, file: !78, line: 691, column: 3)
!4309 = !DILocation(line: 692, column: 11, scope: !259)
!4310 = !DILocation(line: 692, column: 3, scope: !259)
!4311 = !DILocation(line: 693, column: 3, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !78, line: 693, column: 3)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 693, column: 3)
!4314 = distinct !DILexicalBlock(scope: !259, file: !78, line: 692, column: 32)
!4315 = !DILocation(line: 693, column: 3, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !4314, file: !78, discriminator: 1)
!4317 = !DILocation(line: 693, column: 3, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4319, file: !78, discriminator: 2)
!4319 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 693, column: 3)
!4320 = !DILocation(line: 693, column: 3, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !4319, file: !78, discriminator: 3)
!4322 = !DILocation(line: 693, column: 3, scope: !4323)
!4323 = !DILexicalBlockFile(scope: !4324, file: !78, discriminator: 4)
!4324 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 693, column: 3)
!4325 = !DILocation(line: 693, column: 3, scope: !4326)
!4326 = !DILexicalBlockFile(scope: !4327, file: !78, discriminator: 5)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !78, line: 693, column: 3)
!4328 = !DILocation(line: 693, column: 3, scope: !4329)
!4329 = !DILexicalBlockFile(scope: !4314, file: !78, discriminator: 6)
!4330 = !DILocation(line: 693, column: 3, scope: !4331)
!4331 = !DILexicalBlockFile(scope: !4332, file: !78, discriminator: 7)
!4332 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 693, column: 3)
!4333 = !DILocation(line: 693, column: 3, scope: !4334)
!4334 = !DILexicalBlockFile(scope: !4332, file: !78, discriminator: 8)
!4335 = !DILocation(line: 693, column: 3, scope: !4336)
!4336 = !DILexicalBlockFile(scope: !4337, file: !78, discriminator: 9)
!4337 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 693, column: 3)
!4338 = !DILocation(line: 693, column: 3, scope: !4339)
!4339 = !DILexicalBlockFile(scope: !4340, file: !78, discriminator: 10)
!4340 = distinct !DILexicalBlock(scope: !4337, file: !78, line: 693, column: 3)
!4341 = !DILocation(line: 693, column: 3, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4314, file: !78, discriminator: 11)
!4343 = !DILocation(line: 693, column: 3, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !4345, file: !78, discriminator: 12)
!4345 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 693, column: 3)
!4346 = !DILocation(line: 693, column: 3, scope: !4347)
!4347 = !DILexicalBlockFile(scope: !4345, file: !78, discriminator: 13)
!4348 = !DILocation(line: 693, column: 3, scope: !4349)
!4349 = !DILexicalBlockFile(scope: !4350, file: !78, discriminator: 14)
!4350 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 693, column: 3)
!4351 = !DILocation(line: 693, column: 3, scope: !4352)
!4352 = !DILexicalBlockFile(scope: !4353, file: !78, discriminator: 15)
!4353 = distinct !DILexicalBlock(scope: !4350, file: !78, line: 693, column: 3)
!4354 = !DILocation(line: 693, column: 3, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4314, file: !78, discriminator: 16)
!4356 = !DILocation(line: 695, column: 9, scope: !4314)
!4357 = !DILocation(line: 696, column: 5, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !78, line: 696, column: 5)
!4359 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 696, column: 5)
!4360 = !DILocation(line: 696, column: 5, scope: !4359)
!4361 = !DILocation(line: 696, column: 5, scope: !4362)
!4362 = !DILexicalBlockFile(scope: !4363, file: !78, discriminator: 1)
!4363 = distinct !DILexicalBlock(scope: !4358, file: !78, line: 696, column: 5)
!4364 = !DILocation(line: 697, column: 13, scope: !4314)
!4365 = !DILocation(line: 697, column: 5, scope: !4314)
!4366 = !DILocation(line: 699, column: 34, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4314, file: !78, line: 697, column: 34)
!4368 = !DILocation(line: 699, column: 39, scope: !4367)
!4369 = !DILocation(line: 699, column: 43, scope: !4367)
!4370 = !DILocation(line: 699, column: 58, scope: !4367)
!4371 = !DILocation(line: 699, column: 63, scope: !4367)
!4372 = !DILocation(line: 699, column: 14, scope: !4367)
!4373 = !DILocation(line: 699, column: 7, scope: !4367)
!4374 = !DILocation(line: 701, column: 39, scope: !4367)
!4375 = !DILocation(line: 701, column: 44, scope: !4367)
!4376 = !DILocation(line: 701, column: 48, scope: !4367)
!4377 = !DILocation(line: 702, column: 39, scope: !4367)
!4378 = !DILocation(line: 702, column: 44, scope: !4367)
!4379 = !DILocation(line: 701, column: 14, scope: !4367)
!4380 = !DILocation(line: 701, column: 7, scope: !4367)
!4381 = !DILocation(line: 704, column: 19, scope: !4314)
!4382 = !DILocation(line: 704, column: 6, scope: !4314)
!4383 = !DILocation(line: 704, column: 17, scope: !4314)
!4384 = !DILocation(line: 705, column: 5, scope: !4314)
!4385 = !DILocation(line: 707, column: 27, scope: !4314)
!4386 = !DILocation(line: 707, column: 32, scope: !4314)
!4387 = !DILocation(line: 707, column: 36, scope: !4314)
!4388 = !DILocation(line: 707, column: 51, scope: !4314)
!4389 = !DILocation(line: 707, column: 56, scope: !4314)
!4390 = !DILocation(line: 707, column: 12, scope: !4314)
!4391 = !DILocation(line: 707, column: 5, scope: !4314)
!4392 = !DILocation(line: 709, column: 31, scope: !4314)
!4393 = !DILocation(line: 709, column: 36, scope: !4314)
!4394 = !DILocation(line: 709, column: 40, scope: !4314)
!4395 = !DILocation(line: 709, column: 55, scope: !4314)
!4396 = !DILocation(line: 709, column: 60, scope: !4314)
!4397 = !DILocation(line: 709, column: 12, scope: !4314)
!4398 = !DILocation(line: 709, column: 5, scope: !4314)
!4399 = !DILocation(line: 711, column: 19, scope: !4314)
!4400 = !DILocation(line: 711, column: 6, scope: !4314)
!4401 = !DILocation(line: 711, column: 17, scope: !4314)
!4402 = !DILocation(line: 712, column: 5, scope: !4314)
!4403 = !DILocation(line: 718, column: 3, scope: !259)
!4404 = !DILocation(line: 718, column: 10, scope: !4405)
!4405 = !DILexicalBlockFile(scope: !259, file: !78, discriminator: 1)
!4406 = !DILocation(line: 718, column: 3, scope: !4405)
!4407 = !DILocation(line: 719, column: 13, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !259, file: !78, line: 718, column: 35)
!4409 = !DILocation(line: 719, column: 5, scope: !4408)
!4410 = !DILocation(line: 720, column: 5, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !78, line: 720, column: 5)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 720, column: 5)
!4413 = distinct !DILexicalBlock(scope: !4408, file: !78, line: 719, column: 34)
!4414 = !DILocation(line: 720, column: 5, scope: !4415)
!4415 = !DILexicalBlockFile(scope: !4413, file: !78, discriminator: 1)
!4416 = !DILocation(line: 720, column: 5, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4418, file: !78, discriminator: 2)
!4418 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 720, column: 5)
!4419 = !DILocation(line: 720, column: 5, scope: !4420)
!4420 = !DILexicalBlockFile(scope: !4418, file: !78, discriminator: 3)
!4421 = !DILocation(line: 720, column: 5, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4423, file: !78, discriminator: 4)
!4423 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 720, column: 5)
!4424 = !DILocation(line: 720, column: 5, scope: !4425)
!4425 = !DILexicalBlockFile(scope: !4426, file: !78, discriminator: 5)
!4426 = distinct !DILexicalBlock(scope: !4423, file: !78, line: 720, column: 5)
!4427 = !DILocation(line: 720, column: 5, scope: !4428)
!4428 = !DILexicalBlockFile(scope: !4413, file: !78, discriminator: 6)
!4429 = !DILocation(line: 720, column: 5, scope: !4430)
!4430 = !DILexicalBlockFile(scope: !4431, file: !78, discriminator: 7)
!4431 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 720, column: 5)
!4432 = !DILocation(line: 720, column: 5, scope: !4433)
!4433 = !DILexicalBlockFile(scope: !4431, file: !78, discriminator: 8)
!4434 = !DILocation(line: 720, column: 5, scope: !4435)
!4435 = !DILexicalBlockFile(scope: !4436, file: !78, discriminator: 9)
!4436 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 720, column: 5)
!4437 = !DILocation(line: 720, column: 5, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !4439, file: !78, discriminator: 10)
!4439 = distinct !DILexicalBlock(scope: !4436, file: !78, line: 720, column: 5)
!4440 = !DILocation(line: 720, column: 5, scope: !4441)
!4441 = !DILexicalBlockFile(scope: !4413, file: !78, discriminator: 11)
!4442 = !DILocation(line: 720, column: 5, scope: !4443)
!4443 = !DILexicalBlockFile(scope: !4444, file: !78, discriminator: 12)
!4444 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 720, column: 5)
!4445 = !DILocation(line: 720, column: 5, scope: !4446)
!4446 = !DILexicalBlockFile(scope: !4444, file: !78, discriminator: 13)
!4447 = !DILocation(line: 720, column: 5, scope: !4448)
!4448 = !DILexicalBlockFile(scope: !4449, file: !78, discriminator: 14)
!4449 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 720, column: 5)
!4450 = !DILocation(line: 720, column: 5, scope: !4451)
!4451 = !DILexicalBlockFile(scope: !4452, file: !78, discriminator: 15)
!4452 = distinct !DILexicalBlock(scope: !4449, file: !78, line: 720, column: 5)
!4453 = !DILocation(line: 720, column: 5, scope: !4454)
!4454 = !DILexicalBlockFile(scope: !4413, file: !78, discriminator: 16)
!4455 = !DILocation(line: 740, column: 13, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 739, column: 7)
!4457 = !DILocation(line: 741, column: 9, scope: !4456)
!4458 = !DILocation(line: 741, column: 16, scope: !4459)
!4459 = !DILexicalBlockFile(scope: !4456, file: !78, discriminator: 1)
!4460 = !DILocation(line: 741, column: 9, scope: !4459)
!4461 = !DILocation(line: 742, column: 19, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4456, file: !78, line: 741, column: 41)
!4463 = !DILocation(line: 742, column: 11, scope: !4462)
!4464 = !DILocation(line: 743, column: 11, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !78, line: 743, column: 11)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !78, line: 743, column: 11)
!4467 = distinct !DILexicalBlock(scope: !4462, file: !78, line: 742, column: 40)
!4468 = !DILocation(line: 743, column: 11, scope: !4469)
!4469 = !DILexicalBlockFile(scope: !4467, file: !78, discriminator: 1)
!4470 = !DILocation(line: 743, column: 11, scope: !4471)
!4471 = !DILexicalBlockFile(scope: !4472, file: !78, discriminator: 2)
!4472 = distinct !DILexicalBlock(scope: !4467, file: !78, line: 743, column: 11)
!4473 = !DILocation(line: 743, column: 11, scope: !4474)
!4474 = !DILexicalBlockFile(scope: !4472, file: !78, discriminator: 3)
!4475 = !DILocation(line: 743, column: 11, scope: !4476)
!4476 = !DILexicalBlockFile(scope: !4477, file: !78, discriminator: 4)
!4477 = distinct !DILexicalBlock(scope: !4467, file: !78, line: 743, column: 11)
!4478 = !DILocation(line: 743, column: 11, scope: !4479)
!4479 = !DILexicalBlockFile(scope: !4480, file: !78, discriminator: 5)
!4480 = distinct !DILexicalBlock(scope: !4477, file: !78, line: 743, column: 11)
!4481 = !DILocation(line: 743, column: 11, scope: !4482)
!4482 = !DILexicalBlockFile(scope: !4467, file: !78, discriminator: 6)
!4483 = !DILocation(line: 743, column: 11, scope: !4484)
!4484 = !DILexicalBlockFile(scope: !4485, file: !78, discriminator: 7)
!4485 = distinct !DILexicalBlock(scope: !4467, file: !78, line: 743, column: 11)
!4486 = !DILocation(line: 743, column: 11, scope: !4487)
!4487 = !DILexicalBlockFile(scope: !4485, file: !78, discriminator: 8)
!4488 = !DILocation(line: 743, column: 11, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !4490, file: !78, discriminator: 9)
!4490 = distinct !DILexicalBlock(scope: !4467, file: !78, line: 743, column: 11)
!4491 = !DILocation(line: 743, column: 11, scope: !4492)
!4492 = !DILexicalBlockFile(scope: !4493, file: !78, discriminator: 10)
!4493 = distinct !DILexicalBlock(scope: !4490, file: !78, line: 743, column: 11)
!4494 = !DILocation(line: 743, column: 11, scope: !4495)
!4495 = !DILexicalBlockFile(scope: !4467, file: !78, discriminator: 11)
!4496 = !DILocation(line: 743, column: 11, scope: !4497)
!4497 = !DILexicalBlockFile(scope: !4498, file: !78, discriminator: 12)
!4498 = distinct !DILexicalBlock(scope: !4467, file: !78, line: 743, column: 11)
!4499 = !DILocation(line: 743, column: 11, scope: !4500)
!4500 = !DILexicalBlockFile(scope: !4498, file: !78, discriminator: 13)
!4501 = !DILocation(line: 743, column: 11, scope: !4502)
!4502 = !DILexicalBlockFile(scope: !4503, file: !78, discriminator: 14)
!4503 = distinct !DILexicalBlock(scope: !4467, file: !78, line: 743, column: 11)
!4504 = !DILocation(line: 743, column: 11, scope: !4505)
!4505 = !DILexicalBlockFile(scope: !4506, file: !78, discriminator: 15)
!4506 = distinct !DILexicalBlock(scope: !4503, file: !78, line: 743, column: 11)
!4507 = !DILocation(line: 743, column: 11, scope: !4508)
!4508 = !DILexicalBlockFile(scope: !4467, file: !78, discriminator: 16)
!4509 = !DILocation(line: 745, column: 13, scope: !4467)
!4510 = !DILocation(line: 747, column: 13, scope: !4467)
!4511 = !DILocation(line: 749, column: 17, scope: !4467)
!4512 = !DILocation(line: 750, column: 13, scope: !4467)
!4513 = !DILocation(line: 752, column: 27, scope: !4467)
!4514 = !DILocation(line: 752, column: 14, scope: !4467)
!4515 = !DILocation(line: 752, column: 25, scope: !4467)
!4516 = !DILocation(line: 753, column: 13, scope: !4467)
!4517 = !DILocation(line: 755, column: 35, scope: !4462)
!4518 = !DILocation(line: 755, column: 40, scope: !4462)
!4519 = !DILocation(line: 755, column: 45, scope: !4462)
!4520 = !DILocation(line: 755, column: 50, scope: !4462)
!4521 = !DILocation(line: 755, column: 18, scope: !4462)
!4522 = !DILocation(line: 755, column: 11, scope: !4462)
!4523 = !DILocation(line: 757, column: 9, scope: !4456)
!4524 = !DILocation(line: 758, column: 7, scope: !4456)
!4525 = !DILocation(line: 761, column: 21, scope: !4413)
!4526 = !DILocation(line: 761, column: 25, scope: !4413)
!4527 = !DILocation(line: 761, column: 8, scope: !4413)
!4528 = !DILocation(line: 761, column: 19, scope: !4413)
!4529 = !DILocation(line: 762, column: 7, scope: !4413)
!4530 = !DILocation(line: 762, column: 7, scope: !4415)
!4531 = !DILocation(line: 765, column: 11, scope: !4413)
!4532 = !DILocation(line: 766, column: 7, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !78, line: 766, column: 7)
!4534 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 766, column: 7)
!4535 = !DILocation(line: 766, column: 7, scope: !4534)
!4536 = !DILocation(line: 766, column: 7, scope: !4537)
!4537 = !DILexicalBlockFile(scope: !4538, file: !78, discriminator: 1)
!4538 = distinct !DILexicalBlock(scope: !4533, file: !78, line: 766, column: 7)
!4539 = !DILocation(line: 767, column: 12, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4413, file: !78, line: 767, column: 11)
!4541 = !DILocation(line: 767, column: 11, scope: !4413)
!4542 = !DILocation(line: 768, column: 23, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4540, file: !78, line: 767, column: 46)
!4544 = !DILocation(line: 768, column: 10, scope: !4543)
!4545 = !DILocation(line: 768, column: 21, scope: !4543)
!4546 = !DILocation(line: 769, column: 9, scope: !4543)
!4547 = !DILocation(line: 771, column: 21, scope: !4413)
!4548 = !DILocation(line: 771, column: 25, scope: !4413)
!4549 = !DILocation(line: 771, column: 8, scope: !4413)
!4550 = !DILocation(line: 771, column: 19, scope: !4413)
!4551 = !DILocation(line: 772, column: 7, scope: !4413)
!4552 = !DILocation(line: 774, column: 21, scope: !4413)
!4553 = !DILocation(line: 774, column: 8, scope: !4413)
!4554 = !DILocation(line: 774, column: 19, scope: !4413)
!4555 = !DILocation(line: 775, column: 7, scope: !4413)
!4556 = !DILocation(line: 718, column: 3, scope: !4557)
!4557 = !DILexicalBlockFile(scope: !259, file: !78, discriminator: 2)
!4558 = !DILocation(line: 778, column: 3, scope: !259)
!4559 = !DILocation(line: 779, column: 1, scope: !259)
!4560 = !DILocalVariable(name: "enc", arg: 1, scope: !263, file: !78, line: 504, type: !82)
!4561 = !DILocation(line: 504, column: 33, scope: !263)
!4562 = !DILocalVariable(name: "ptr", arg: 2, scope: !263, file: !78, line: 504, type: !93)
!4563 = !DILocation(line: 504, column: 50, scope: !263)
!4564 = !DILocalVariable(name: "end", arg: 3, scope: !263, file: !78, line: 504, type: !93)
!4565 = !DILocation(line: 504, column: 67, scope: !263)
!4566 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !263, file: !78, line: 505, type: !95)
!4567 = !DILocation(line: 505, column: 30, scope: !263)
!4568 = !DILocation(line: 507, column: 3, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !78, line: 507, column: 3)
!4570 = distinct !DILexicalBlock(scope: !263, file: !78, line: 507, column: 3)
!4571 = !DILocation(line: 507, column: 3, scope: !4570)
!4572 = !DILocation(line: 507, column: 3, scope: !4573)
!4573 = !DILexicalBlockFile(scope: !4574, file: !78, discriminator: 1)
!4574 = distinct !DILexicalBlock(scope: !4569, file: !78, line: 507, column: 3)
!4575 = !DILocation(line: 508, column: 11, scope: !263)
!4576 = !DILocation(line: 508, column: 3, scope: !263)
!4577 = !DILocation(line: 509, column: 3, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !78, line: 509, column: 3)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !78, line: 509, column: 3)
!4580 = distinct !DILexicalBlock(scope: !263, file: !78, line: 508, column: 32)
!4581 = !DILocation(line: 509, column: 3, scope: !4582)
!4582 = !DILexicalBlockFile(scope: !4580, file: !78, discriminator: 1)
!4583 = !DILocation(line: 509, column: 3, scope: !4584)
!4584 = !DILexicalBlockFile(scope: !4585, file: !78, discriminator: 2)
!4585 = distinct !DILexicalBlock(scope: !4580, file: !78, line: 509, column: 3)
!4586 = !DILocation(line: 509, column: 3, scope: !4587)
!4587 = !DILexicalBlockFile(scope: !4585, file: !78, discriminator: 3)
!4588 = !DILocation(line: 509, column: 3, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4590, file: !78, discriminator: 4)
!4590 = distinct !DILexicalBlock(scope: !4580, file: !78, line: 509, column: 3)
!4591 = !DILocation(line: 509, column: 3, scope: !4592)
!4592 = !DILexicalBlockFile(scope: !4593, file: !78, discriminator: 5)
!4593 = distinct !DILexicalBlock(scope: !4590, file: !78, line: 509, column: 3)
!4594 = !DILocation(line: 509, column: 3, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !4580, file: !78, discriminator: 6)
!4596 = !DILocation(line: 509, column: 3, scope: !4597)
!4597 = !DILexicalBlockFile(scope: !4598, file: !78, discriminator: 7)
!4598 = distinct !DILexicalBlock(scope: !4580, file: !78, line: 509, column: 3)
!4599 = !DILocation(line: 509, column: 3, scope: !4600)
!4600 = !DILexicalBlockFile(scope: !4598, file: !78, discriminator: 8)
!4601 = !DILocation(line: 509, column: 3, scope: !4602)
!4602 = !DILexicalBlockFile(scope: !4603, file: !78, discriminator: 9)
!4603 = distinct !DILexicalBlock(scope: !4580, file: !78, line: 509, column: 3)
!4604 = !DILocation(line: 509, column: 3, scope: !4605)
!4605 = !DILexicalBlockFile(scope: !4606, file: !78, discriminator: 10)
!4606 = distinct !DILexicalBlock(scope: !4603, file: !78, line: 509, column: 3)
!4607 = !DILocation(line: 509, column: 3, scope: !4608)
!4608 = !DILexicalBlockFile(scope: !4580, file: !78, discriminator: 11)
!4609 = !DILocation(line: 509, column: 3, scope: !4610)
!4610 = !DILexicalBlockFile(scope: !4611, file: !78, discriminator: 12)
!4611 = distinct !DILexicalBlock(scope: !4580, file: !78, line: 509, column: 3)
!4612 = !DILocation(line: 509, column: 3, scope: !4613)
!4613 = !DILexicalBlockFile(scope: !4611, file: !78, discriminator: 13)
!4614 = !DILocation(line: 509, column: 3, scope: !4615)
!4615 = !DILexicalBlockFile(scope: !4616, file: !78, discriminator: 14)
!4616 = distinct !DILexicalBlock(scope: !4580, file: !78, line: 509, column: 3)
!4617 = !DILocation(line: 509, column: 3, scope: !4618)
!4618 = !DILexicalBlockFile(scope: !4619, file: !78, discriminator: 15)
!4619 = distinct !DILexicalBlock(scope: !4616, file: !78, line: 509, column: 3)
!4620 = !DILocation(line: 509, column: 3, scope: !4621)
!4621 = !DILexicalBlockFile(scope: !4580, file: !78, discriminator: 16)
!4622 = !DILocation(line: 511, column: 32, scope: !4580)
!4623 = !DILocation(line: 511, column: 37, scope: !4580)
!4624 = !DILocation(line: 511, column: 41, scope: !4580)
!4625 = !DILocation(line: 511, column: 56, scope: !4580)
!4626 = !DILocation(line: 511, column: 61, scope: !4580)
!4627 = !DILocation(line: 511, column: 12, scope: !4580)
!4628 = !DILocation(line: 511, column: 5, scope: !4580)
!4629 = !DILocation(line: 513, column: 19, scope: !4580)
!4630 = !DILocation(line: 513, column: 6, scope: !4580)
!4631 = !DILocation(line: 513, column: 17, scope: !4580)
!4632 = !DILocation(line: 514, column: 5, scope: !4580)
!4633 = !DILocation(line: 516, column: 3, scope: !263)
!4634 = !DILocation(line: 516, column: 10, scope: !4635)
!4635 = !DILexicalBlockFile(scope: !263, file: !78, discriminator: 1)
!4636 = !DILocation(line: 516, column: 3, scope: !4635)
!4637 = !DILocation(line: 517, column: 13, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !263, file: !78, line: 516, column: 35)
!4639 = !DILocation(line: 517, column: 5, scope: !4638)
!4640 = !DILocation(line: 518, column: 5, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !78, line: 518, column: 5)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !78, line: 518, column: 5)
!4643 = distinct !DILexicalBlock(scope: !4638, file: !78, line: 517, column: 34)
!4644 = !DILocation(line: 518, column: 5, scope: !4645)
!4645 = !DILexicalBlockFile(scope: !4643, file: !78, discriminator: 1)
!4646 = !DILocation(line: 518, column: 5, scope: !4647)
!4647 = !DILexicalBlockFile(scope: !4648, file: !78, discriminator: 2)
!4648 = distinct !DILexicalBlock(scope: !4643, file: !78, line: 518, column: 5)
!4649 = !DILocation(line: 518, column: 5, scope: !4650)
!4650 = !DILexicalBlockFile(scope: !4648, file: !78, discriminator: 3)
!4651 = !DILocation(line: 518, column: 5, scope: !4652)
!4652 = !DILexicalBlockFile(scope: !4653, file: !78, discriminator: 4)
!4653 = distinct !DILexicalBlock(scope: !4643, file: !78, line: 518, column: 5)
!4654 = !DILocation(line: 518, column: 5, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !4656, file: !78, discriminator: 5)
!4656 = distinct !DILexicalBlock(scope: !4653, file: !78, line: 518, column: 5)
!4657 = !DILocation(line: 518, column: 5, scope: !4658)
!4658 = !DILexicalBlockFile(scope: !4643, file: !78, discriminator: 6)
!4659 = !DILocation(line: 518, column: 5, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !4661, file: !78, discriminator: 7)
!4661 = distinct !DILexicalBlock(scope: !4643, file: !78, line: 518, column: 5)
!4662 = !DILocation(line: 518, column: 5, scope: !4663)
!4663 = !DILexicalBlockFile(scope: !4661, file: !78, discriminator: 8)
!4664 = !DILocation(line: 518, column: 5, scope: !4665)
!4665 = !DILexicalBlockFile(scope: !4666, file: !78, discriminator: 9)
!4666 = distinct !DILexicalBlock(scope: !4643, file: !78, line: 518, column: 5)
!4667 = !DILocation(line: 518, column: 5, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !4669, file: !78, discriminator: 10)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !78, line: 518, column: 5)
!4670 = !DILocation(line: 518, column: 5, scope: !4671)
!4671 = !DILexicalBlockFile(scope: !4643, file: !78, discriminator: 11)
!4672 = !DILocation(line: 518, column: 5, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4674, file: !78, discriminator: 12)
!4674 = distinct !DILexicalBlock(scope: !4643, file: !78, line: 518, column: 5)
!4675 = !DILocation(line: 518, column: 5, scope: !4676)
!4676 = !DILexicalBlockFile(scope: !4674, file: !78, discriminator: 13)
!4677 = !DILocation(line: 518, column: 5, scope: !4678)
!4678 = !DILexicalBlockFile(scope: !4679, file: !78, discriminator: 14)
!4679 = distinct !DILexicalBlock(scope: !4643, file: !78, line: 518, column: 5)
!4680 = !DILocation(line: 518, column: 5, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4682, file: !78, discriminator: 15)
!4682 = distinct !DILexicalBlock(scope: !4679, file: !78, line: 518, column: 5)
!4683 = !DILocation(line: 518, column: 5, scope: !4684)
!4684 = !DILexicalBlockFile(scope: !4643, file: !78, discriminator: 16)
!4685 = !DILocation(line: 520, column: 21, scope: !4643)
!4686 = !DILocation(line: 520, column: 25, scope: !4643)
!4687 = !DILocation(line: 520, column: 8, scope: !4643)
!4688 = !DILocation(line: 520, column: 19, scope: !4643)
!4689 = !DILocation(line: 521, column: 7, scope: !4643)
!4690 = !DILocation(line: 523, column: 21, scope: !4643)
!4691 = !DILocation(line: 523, column: 8, scope: !4643)
!4692 = !DILocation(line: 523, column: 19, scope: !4643)
!4693 = !DILocation(line: 524, column: 7, scope: !4643)
!4694 = !DILocation(line: 516, column: 3, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !263, file: !78, discriminator: 2)
!4696 = !DILocation(line: 527, column: 3, scope: !263)
!4697 = !DILocation(line: 528, column: 1, scope: !263)
!4698 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !260, file: !78, line: 298, type: !82)
!4699 = !DILocation(line: 298, column: 42, scope: !260)
!4700 = !DILocalVariable(name: "ptr", arg: 2, scope: !260, file: !78, line: 298, type: !93)
!4701 = !DILocation(line: 298, column: 69, scope: !260)
!4702 = !DILocalVariable(name: "end", arg: 3, scope: !260, file: !78, line: 299, type: !93)
!4703 = !DILocation(line: 299, column: 38, scope: !260)
!4704 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !260, file: !78, line: 299, type: !95)
!4705 = !DILocation(line: 299, column: 56, scope: !260)
!4706 = !DILocalVariable(name: "i", scope: !260, file: !78, line: 303, type: !7)
!4707 = !DILocation(line: 303, column: 7, scope: !260)
!4708 = !DILocation(line: 305, column: 3, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !78, line: 305, column: 3)
!4710 = distinct !DILexicalBlock(scope: !260, file: !78, line: 305, column: 3)
!4711 = !DILocation(line: 305, column: 3, scope: !4710)
!4712 = !DILocation(line: 305, column: 3, scope: !4713)
!4713 = !DILexicalBlockFile(scope: !4714, file: !78, discriminator: 1)
!4714 = distinct !DILexicalBlock(scope: !4709, file: !78, line: 305, column: 3)
!4715 = !DILocation(line: 306, column: 10, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !260, file: !78, line: 306, column: 3)
!4717 = !DILocation(line: 306, column: 8, scope: !4716)
!4718 = !DILocation(line: 306, column: 15, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4720, file: !78, discriminator: 1)
!4720 = distinct !DILexicalBlock(scope: !4716, file: !78, line: 306, column: 3)
!4721 = !DILocation(line: 306, column: 17, scope: !4719)
!4722 = !DILocation(line: 306, column: 3, scope: !4719)
!4723 = !DILocation(line: 307, column: 10, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !78, line: 307, column: 9)
!4725 = distinct !DILexicalBlock(scope: !4720, file: !78, line: 306, column: 47)
!4726 = !DILocation(line: 307, column: 9, scope: !4725)
!4727 = !DILocation(line: 308, column: 21, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4724, file: !78, line: 307, column: 49)
!4729 = !DILocation(line: 308, column: 8, scope: !4728)
!4730 = !DILocation(line: 308, column: 19, scope: !4728)
!4731 = !DILocation(line: 309, column: 7, scope: !4728)
!4732 = !DILocation(line: 311, column: 3, scope: !4725)
!4733 = !DILocation(line: 306, column: 23, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4720, file: !78, discriminator: 2)
!4735 = !DILocation(line: 306, column: 31, scope: !4734)
!4736 = !DILocation(line: 306, column: 3, scope: !4734)
!4737 = !DILocation(line: 312, column: 17, scope: !260)
!4738 = !DILocation(line: 312, column: 4, scope: !260)
!4739 = !DILocation(line: 312, column: 15, scope: !260)
!4740 = !DILocation(line: 313, column: 3, scope: !260)
!4741 = !DILocation(line: 314, column: 1, scope: !260)
!4742 = !DILocalVariable(name: "enc", arg: 1, scope: !261, file: !78, line: 392, type: !82)
!4743 = !DILocation(line: 392, column: 36, scope: !261)
!4744 = !DILocalVariable(name: "ptr", arg: 2, scope: !261, file: !78, line: 392, type: !93)
!4745 = !DILocation(line: 392, column: 53, scope: !261)
!4746 = !DILocalVariable(name: "end", arg: 3, scope: !261, file: !78, line: 393, type: !93)
!4747 = !DILocation(line: 393, column: 32, scope: !261)
!4748 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !261, file: !78, line: 393, type: !95)
!4749 = !DILocation(line: 393, column: 50, scope: !261)
!4750 = !DILocation(line: 395, column: 3, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !78, line: 395, column: 3)
!4752 = distinct !DILexicalBlock(scope: !261, file: !78, line: 395, column: 3)
!4753 = !DILocation(line: 395, column: 3, scope: !4752)
!4754 = !DILocation(line: 395, column: 3, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4756, file: !78, discriminator: 1)
!4756 = distinct !DILexicalBlock(scope: !4751, file: !78, line: 395, column: 3)
!4757 = !DILocation(line: 396, column: 11, scope: !261)
!4758 = !DILocation(line: 396, column: 3, scope: !261)
!4759 = !DILocation(line: 397, column: 3, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !78, line: 397, column: 3)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !78, line: 397, column: 3)
!4762 = distinct !DILexicalBlock(scope: !261, file: !78, line: 396, column: 32)
!4763 = !DILocation(line: 397, column: 3, scope: !4764)
!4764 = !DILexicalBlockFile(scope: !4762, file: !78, discriminator: 1)
!4765 = !DILocation(line: 397, column: 3, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !4767, file: !78, discriminator: 2)
!4767 = distinct !DILexicalBlock(scope: !4762, file: !78, line: 397, column: 3)
!4768 = !DILocation(line: 397, column: 3, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4767, file: !78, discriminator: 3)
!4770 = !DILocation(line: 397, column: 3, scope: !4771)
!4771 = !DILexicalBlockFile(scope: !4772, file: !78, discriminator: 4)
!4772 = distinct !DILexicalBlock(scope: !4762, file: !78, line: 397, column: 3)
!4773 = !DILocation(line: 397, column: 3, scope: !4774)
!4774 = !DILexicalBlockFile(scope: !4775, file: !78, discriminator: 5)
!4775 = distinct !DILexicalBlock(scope: !4772, file: !78, line: 397, column: 3)
!4776 = !DILocation(line: 397, column: 3, scope: !4777)
!4777 = !DILexicalBlockFile(scope: !4762, file: !78, discriminator: 6)
!4778 = !DILocation(line: 397, column: 3, scope: !4779)
!4779 = !DILexicalBlockFile(scope: !4780, file: !78, discriminator: 7)
!4780 = distinct !DILexicalBlock(scope: !4762, file: !78, line: 397, column: 3)
!4781 = !DILocation(line: 397, column: 3, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !4780, file: !78, discriminator: 8)
!4783 = !DILocation(line: 397, column: 3, scope: !4784)
!4784 = !DILexicalBlockFile(scope: !4785, file: !78, discriminator: 9)
!4785 = distinct !DILexicalBlock(scope: !4762, file: !78, line: 397, column: 3)
!4786 = !DILocation(line: 397, column: 3, scope: !4787)
!4787 = !DILexicalBlockFile(scope: !4788, file: !78, discriminator: 10)
!4788 = distinct !DILexicalBlock(scope: !4785, file: !78, line: 397, column: 3)
!4789 = !DILocation(line: 397, column: 3, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !4762, file: !78, discriminator: 11)
!4791 = !DILocation(line: 397, column: 3, scope: !4792)
!4792 = !DILexicalBlockFile(scope: !4793, file: !78, discriminator: 12)
!4793 = distinct !DILexicalBlock(scope: !4762, file: !78, line: 397, column: 3)
!4794 = !DILocation(line: 397, column: 3, scope: !4795)
!4795 = !DILexicalBlockFile(scope: !4793, file: !78, discriminator: 13)
!4796 = !DILocation(line: 397, column: 3, scope: !4797)
!4797 = !DILexicalBlockFile(scope: !4798, file: !78, discriminator: 14)
!4798 = distinct !DILexicalBlock(scope: !4762, file: !78, line: 397, column: 3)
!4799 = !DILocation(line: 397, column: 3, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4801, file: !78, discriminator: 15)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !78, line: 397, column: 3)
!4802 = !DILocation(line: 397, column: 3, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !4762, file: !78, discriminator: 16)
!4804 = !DILocation(line: 399, column: 19, scope: !4762)
!4805 = !DILocation(line: 399, column: 6, scope: !4762)
!4806 = !DILocation(line: 399, column: 17, scope: !4762)
!4807 = !DILocation(line: 400, column: 5, scope: !4762)
!4808 = !DILocation(line: 402, column: 3, scope: !261)
!4809 = !DILocation(line: 402, column: 10, scope: !4810)
!4810 = !DILexicalBlockFile(scope: !261, file: !78, discriminator: 1)
!4811 = !DILocation(line: 402, column: 3, scope: !4810)
!4812 = !DILocation(line: 403, column: 13, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !261, file: !78, line: 402, column: 35)
!4814 = !DILocation(line: 403, column: 5, scope: !4813)
!4815 = !DILocation(line: 404, column: 5, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !78, line: 404, column: 5)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 404, column: 5)
!4818 = distinct !DILexicalBlock(scope: !4813, file: !78, line: 403, column: 34)
!4819 = !DILocation(line: 404, column: 5, scope: !4820)
!4820 = !DILexicalBlockFile(scope: !4818, file: !78, discriminator: 1)
!4821 = !DILocation(line: 404, column: 5, scope: !4822)
!4822 = !DILexicalBlockFile(scope: !4823, file: !78, discriminator: 2)
!4823 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 404, column: 5)
!4824 = !DILocation(line: 404, column: 5, scope: !4825)
!4825 = !DILexicalBlockFile(scope: !4823, file: !78, discriminator: 3)
!4826 = !DILocation(line: 404, column: 5, scope: !4827)
!4827 = !DILexicalBlockFile(scope: !4828, file: !78, discriminator: 4)
!4828 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 404, column: 5)
!4829 = !DILocation(line: 404, column: 5, scope: !4830)
!4830 = !DILexicalBlockFile(scope: !4831, file: !78, discriminator: 5)
!4831 = distinct !DILexicalBlock(scope: !4828, file: !78, line: 404, column: 5)
!4832 = !DILocation(line: 404, column: 5, scope: !4833)
!4833 = !DILexicalBlockFile(scope: !4818, file: !78, discriminator: 6)
!4834 = !DILocation(line: 404, column: 5, scope: !4835)
!4835 = !DILexicalBlockFile(scope: !4836, file: !78, discriminator: 7)
!4836 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 404, column: 5)
!4837 = !DILocation(line: 404, column: 5, scope: !4838)
!4838 = !DILexicalBlockFile(scope: !4836, file: !78, discriminator: 8)
!4839 = !DILocation(line: 404, column: 5, scope: !4840)
!4840 = !DILexicalBlockFile(scope: !4841, file: !78, discriminator: 9)
!4841 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 404, column: 5)
!4842 = !DILocation(line: 404, column: 5, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4844, file: !78, discriminator: 10)
!4844 = distinct !DILexicalBlock(scope: !4841, file: !78, line: 404, column: 5)
!4845 = !DILocation(line: 404, column: 5, scope: !4846)
!4846 = !DILexicalBlockFile(scope: !4818, file: !78, discriminator: 11)
!4847 = !DILocation(line: 404, column: 5, scope: !4848)
!4848 = !DILexicalBlockFile(scope: !4849, file: !78, discriminator: 12)
!4849 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 404, column: 5)
!4850 = !DILocation(line: 404, column: 5, scope: !4851)
!4851 = !DILexicalBlockFile(scope: !4849, file: !78, discriminator: 13)
!4852 = !DILocation(line: 404, column: 5, scope: !4853)
!4853 = !DILexicalBlockFile(scope: !4854, file: !78, discriminator: 14)
!4854 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 404, column: 5)
!4855 = !DILocation(line: 404, column: 5, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !4857, file: !78, discriminator: 15)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !78, line: 404, column: 5)
!4858 = !DILocation(line: 404, column: 5, scope: !4859)
!4859 = !DILexicalBlockFile(scope: !4818, file: !78, discriminator: 16)
!4860 = !DILocation(line: 406, column: 16, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4818, file: !78, line: 406, column: 7)
!4862 = !DILocation(line: 406, column: 12, scope: !4861)
!4863 = !DILocation(line: 406, column: 32, scope: !4864)
!4864 = !DILexicalBlockFile(scope: !4865, file: !78, discriminator: 1)
!4865 = distinct !DILexicalBlock(scope: !4861, file: !78, line: 406, column: 7)
!4866 = !DILocation(line: 406, column: 7, scope: !4864)
!4867 = !DILocation(line: 407, column: 17, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4865, file: !78, line: 406, column: 77)
!4869 = !DILocation(line: 407, column: 9, scope: !4868)
!4870 = !DILocation(line: 409, column: 11, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4868, file: !78, line: 407, column: 38)
!4872 = !DILocation(line: 411, column: 25, scope: !4871)
!4873 = !DILocation(line: 411, column: 29, scope: !4871)
!4874 = !DILocation(line: 411, column: 12, scope: !4871)
!4875 = !DILocation(line: 411, column: 23, scope: !4871)
!4876 = !DILocation(line: 412, column: 11, scope: !4871)
!4877 = !DILocation(line: 414, column: 25, scope: !4871)
!4878 = !DILocation(line: 414, column: 12, scope: !4871)
!4879 = !DILocation(line: 414, column: 23, scope: !4871)
!4880 = !DILocation(line: 415, column: 11, scope: !4871)
!4881 = !DILocation(line: 417, column: 7, scope: !4868)
!4882 = !DILocation(line: 406, column: 61, scope: !4883)
!4883 = !DILexicalBlockFile(scope: !4865, file: !78, discriminator: 2)
!4884 = !DILocation(line: 406, column: 7, scope: !4883)
!4885 = !DILocation(line: 418, column: 7, scope: !4818)
!4886 = !DILocation(line: 427, column: 21, scope: !4818)
!4887 = !DILocation(line: 427, column: 25, scope: !4818)
!4888 = !DILocation(line: 427, column: 8, scope: !4818)
!4889 = !DILocation(line: 427, column: 19, scope: !4818)
!4890 = !DILocation(line: 428, column: 7, scope: !4818)
!4891 = !DILocation(line: 430, column: 21, scope: !4818)
!4892 = !DILocation(line: 430, column: 8, scope: !4818)
!4893 = !DILocation(line: 430, column: 19, scope: !4818)
!4894 = !DILocation(line: 431, column: 7, scope: !4818)
!4895 = !DILocation(line: 402, column: 3, scope: !4896)
!4896 = !DILexicalBlockFile(scope: !261, file: !78, discriminator: 2)
!4897 = !DILocation(line: 434, column: 3, scope: !261)
!4898 = !DILocation(line: 435, column: 1, scope: !261)
!4899 = !DILocalVariable(name: "enc", arg: 1, scope: !262, file: !78, line: 533, type: !82)
!4900 = !DILocation(line: 533, column: 34, scope: !262)
!4901 = !DILocalVariable(name: "ptr", arg: 2, scope: !262, file: !78, line: 533, type: !93)
!4902 = !DILocation(line: 533, column: 51, scope: !262)
!4903 = !DILocalVariable(name: "end", arg: 3, scope: !262, file: !78, line: 533, type: !93)
!4904 = !DILocation(line: 533, column: 68, scope: !262)
!4905 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !262, file: !78, line: 534, type: !95)
!4906 = !DILocation(line: 534, column: 31, scope: !262)
!4907 = !DILocation(line: 539, column: 3, scope: !262)
!4908 = !DILocation(line: 539, column: 10, scope: !4909)
!4909 = !DILexicalBlockFile(scope: !262, file: !78, discriminator: 1)
!4910 = !DILocation(line: 539, column: 3, scope: !4909)
!4911 = !DILocation(line: 540, column: 13, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !262, file: !78, line: 539, column: 35)
!4913 = !DILocation(line: 540, column: 5, scope: !4912)
!4914 = !DILocation(line: 541, column: 5, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !78, line: 541, column: 5)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 541, column: 5)
!4917 = distinct !DILexicalBlock(scope: !4912, file: !78, line: 540, column: 34)
!4918 = !DILocation(line: 541, column: 5, scope: !4919)
!4919 = !DILexicalBlockFile(scope: !4917, file: !78, discriminator: 1)
!4920 = !DILocation(line: 541, column: 5, scope: !4921)
!4921 = !DILexicalBlockFile(scope: !4922, file: !78, discriminator: 2)
!4922 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 541, column: 5)
!4923 = !DILocation(line: 541, column: 5, scope: !4924)
!4924 = !DILexicalBlockFile(scope: !4922, file: !78, discriminator: 3)
!4925 = !DILocation(line: 541, column: 5, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !4927, file: !78, discriminator: 4)
!4927 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 541, column: 5)
!4928 = !DILocation(line: 541, column: 5, scope: !4929)
!4929 = !DILexicalBlockFile(scope: !4930, file: !78, discriminator: 5)
!4930 = distinct !DILexicalBlock(scope: !4927, file: !78, line: 541, column: 5)
!4931 = !DILocation(line: 541, column: 5, scope: !4932)
!4932 = !DILexicalBlockFile(scope: !4917, file: !78, discriminator: 6)
!4933 = !DILocation(line: 541, column: 5, scope: !4934)
!4934 = !DILexicalBlockFile(scope: !4935, file: !78, discriminator: 7)
!4935 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 541, column: 5)
!4936 = !DILocation(line: 541, column: 5, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !4935, file: !78, discriminator: 8)
!4938 = !DILocation(line: 541, column: 5, scope: !4939)
!4939 = !DILexicalBlockFile(scope: !4940, file: !78, discriminator: 9)
!4940 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 541, column: 5)
!4941 = !DILocation(line: 541, column: 5, scope: !4942)
!4942 = !DILexicalBlockFile(scope: !4943, file: !78, discriminator: 10)
!4943 = distinct !DILexicalBlock(scope: !4940, file: !78, line: 541, column: 5)
!4944 = !DILocation(line: 541, column: 5, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4917, file: !78, discriminator: 11)
!4946 = !DILocation(line: 541, column: 5, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !4948, file: !78, discriminator: 12)
!4948 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 541, column: 5)
!4949 = !DILocation(line: 541, column: 5, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !4948, file: !78, discriminator: 13)
!4951 = !DILocation(line: 541, column: 5, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !4953, file: !78, discriminator: 14)
!4953 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 541, column: 5)
!4954 = !DILocation(line: 541, column: 5, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !4956, file: !78, discriminator: 15)
!4956 = distinct !DILexicalBlock(scope: !4953, file: !78, line: 541, column: 5)
!4957 = !DILocation(line: 541, column: 5, scope: !4958)
!4958 = !DILexicalBlockFile(scope: !4917, file: !78, discriminator: 16)
!4959 = !DILocation(line: 560, column: 7, scope: !4917)
!4960 = !DILocalVariable(name: "t", scope: !4961, file: !78, line: 561, type: !7)
!4961 = distinct !DILexicalBlock(scope: !4962, file: !78, line: 560, column: 16)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !78, line: 560, column: 7)
!4963 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 560, column: 7)
!4964 = !DILocation(line: 561, column: 13, scope: !4961)
!4965 = !DILocation(line: 563, column: 13, scope: !4961)
!4966 = !DILocation(line: 564, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !78, line: 564, column: 9)
!4968 = distinct !DILexicalBlock(scope: !4961, file: !78, line: 564, column: 9)
!4969 = !DILocation(line: 564, column: 9, scope: !4968)
!4970 = !DILocation(line: 564, column: 9, scope: !4971)
!4971 = !DILexicalBlockFile(scope: !4972, file: !78, discriminator: 1)
!4972 = distinct !DILexicalBlock(scope: !4967, file: !78, line: 564, column: 9)
!4973 = !DILocation(line: 565, column: 13, scope: !4961)
!4974 = !DILocation(line: 565, column: 11, scope: !4961)
!4975 = !DILocation(line: 566, column: 13, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4961, file: !78, line: 566, column: 13)
!4977 = !DILocation(line: 566, column: 15, scope: !4976)
!4978 = !DILocation(line: 566, column: 13, scope: !4961)
!4979 = !DILocation(line: 567, column: 11, scope: !4976)
!4980 = !DILocation(line: 568, column: 17, scope: !4961)
!4981 = !DILocation(line: 568, column: 9, scope: !4961)
!4982 = !DILocation(line: 572, column: 11, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4961, file: !78, line: 568, column: 20)
!4984 = !DILocation(line: 574, column: 25, scope: !4983)
!4985 = !DILocation(line: 574, column: 12, scope: !4983)
!4986 = !DILocation(line: 574, column: 23, scope: !4983)
!4987 = !DILocation(line: 575, column: 11, scope: !4983)
!4988 = !DILocation(line: 560, column: 7, scope: !4989)
!4989 = !DILexicalBlockFile(scope: !4962, file: !78, discriminator: 1)
!4990 = !DILocation(line: 577, column: 7, scope: !4963)
!4991 = !DILocalVariable(name: "open", scope: !4992, file: !78, line: 581, type: !7)
!4992 = distinct !DILexicalBlock(scope: !4917, file: !78, line: 580, column: 7)
!4993 = !DILocation(line: 581, column: 13, scope: !4992)
!4994 = !DILocation(line: 585, column: 9, scope: !4992)
!4995 = !DILocation(line: 586, column: 15, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !78, line: 585, column: 18)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !78, line: 585, column: 9)
!4998 = distinct !DILexicalBlock(scope: !4992, file: !78, line: 585, column: 9)
!4999 = !DILocation(line: 587, column: 11, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !78, line: 587, column: 11)
!5001 = distinct !DILexicalBlock(scope: !4996, file: !78, line: 587, column: 11)
!5002 = !DILocation(line: 587, column: 11, scope: !5001)
!5003 = !DILocation(line: 587, column: 11, scope: !5004)
!5004 = !DILexicalBlockFile(scope: !5005, file: !78, discriminator: 1)
!5005 = distinct !DILexicalBlock(scope: !5000, file: !78, line: 587, column: 11)
!5006 = !DILocation(line: 588, column: 18, scope: !4996)
!5007 = !DILocation(line: 588, column: 16, scope: !4996)
!5008 = !DILocation(line: 589, column: 15, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4996, file: !78, line: 589, column: 15)
!5010 = !DILocation(line: 589, column: 20, scope: !5009)
!5011 = !DILocation(line: 589, column: 31, scope: !5009)
!5012 = !DILocation(line: 589, column: 34, scope: !5013)
!5013 = !DILexicalBlockFile(scope: !5009, file: !78, discriminator: 1)
!5014 = !DILocation(line: 589, column: 39, scope: !5013)
!5015 = !DILocation(line: 589, column: 15, scope: !5013)
!5016 = !DILocation(line: 590, column: 13, scope: !5009)
!5017 = !DILocation(line: 591, column: 19, scope: !4996)
!5018 = !DILocation(line: 591, column: 11, scope: !4996)
!5019 = !DILocation(line: 595, column: 13, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4996, file: !78, line: 591, column: 25)
!5021 = !DILocation(line: 597, column: 27, scope: !5020)
!5022 = !DILocation(line: 597, column: 14, scope: !5020)
!5023 = !DILocation(line: 597, column: 25, scope: !5020)
!5024 = !DILocation(line: 598, column: 13, scope: !5020)
!5025 = !DILocation(line: 585, column: 9, scope: !5026)
!5026 = !DILexicalBlockFile(scope: !4997, file: !78, discriminator: 1)
!5027 = !DILocation(line: 601, column: 13, scope: !4992)
!5028 = !DILocation(line: 603, column: 9, scope: !4992)
!5029 = !DILocalVariable(name: "t", scope: !5030, file: !78, line: 604, type: !7)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !78, line: 603, column: 18)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !78, line: 603, column: 9)
!5032 = distinct !DILexicalBlock(scope: !4992, file: !78, line: 603, column: 9)
!5033 = !DILocation(line: 604, column: 15, scope: !5030)
!5034 = !DILocation(line: 605, column: 11, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !78, line: 605, column: 11)
!5036 = distinct !DILexicalBlock(scope: !5030, file: !78, line: 605, column: 11)
!5037 = !DILocation(line: 605, column: 11, scope: !5036)
!5038 = !DILocation(line: 605, column: 11, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !5040, file: !78, discriminator: 1)
!5040 = distinct !DILexicalBlock(scope: !5035, file: !78, line: 605, column: 11)
!5041 = !DILocation(line: 606, column: 15, scope: !5030)
!5042 = !DILocation(line: 606, column: 13, scope: !5030)
!5043 = !DILocation(line: 607, column: 15, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5030, file: !78, line: 607, column: 15)
!5045 = !DILocation(line: 607, column: 20, scope: !5044)
!5046 = !DILocation(line: 607, column: 17, scope: !5044)
!5047 = !DILocation(line: 607, column: 15, scope: !5030)
!5048 = !DILocation(line: 608, column: 13, scope: !5044)
!5049 = !DILocation(line: 609, column: 19, scope: !5030)
!5050 = !DILocation(line: 609, column: 11, scope: !5030)
!5051 = !DILocation(line: 610, column: 11, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !78, line: 610, column: 11)
!5053 = distinct !DILexicalBlock(scope: !5030, file: !78, line: 609, column: 22)
!5054 = !DILocation(line: 610, column: 11, scope: !5053)
!5055 = !DILocation(line: 610, column: 11, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !5052, file: !78, discriminator: 1)
!5057 = !DILocation(line: 610, column: 11, scope: !5058)
!5058 = !DILexicalBlockFile(scope: !5059, file: !78, discriminator: 2)
!5059 = distinct !DILexicalBlock(scope: !5053, file: !78, line: 610, column: 11)
!5060 = !DILocation(line: 610, column: 11, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !5062, file: !78, discriminator: 3)
!5062 = distinct !DILexicalBlock(scope: !5059, file: !78, line: 610, column: 11)
!5063 = !DILocation(line: 610, column: 11, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !5053, file: !78, discriminator: 4)
!5065 = !DILocation(line: 610, column: 11, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !5067, file: !78, discriminator: 5)
!5067 = distinct !DILexicalBlock(scope: !5053, file: !78, line: 610, column: 11)
!5068 = !DILocation(line: 610, column: 11, scope: !5069)
!5069 = !DILexicalBlockFile(scope: !5067, file: !78, discriminator: 6)
!5070 = !DILocation(line: 610, column: 11, scope: !5071)
!5071 = !DILexicalBlockFile(scope: !5072, file: !78, discriminator: 7)
!5072 = distinct !DILexicalBlock(scope: !5053, file: !78, line: 610, column: 11)
!5073 = !DILocation(line: 610, column: 11, scope: !5074)
!5074 = !DILexicalBlockFile(scope: !5075, file: !78, discriminator: 8)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !78, line: 610, column: 11)
!5076 = !DILocation(line: 610, column: 11, scope: !5077)
!5077 = !DILexicalBlockFile(scope: !5053, file: !78, discriminator: 9)
!5078 = !DILocation(line: 610, column: 11, scope: !5079)
!5079 = !DILexicalBlockFile(scope: !5080, file: !78, discriminator: 10)
!5080 = distinct !DILexicalBlock(scope: !5053, file: !78, line: 610, column: 11)
!5081 = !DILocation(line: 610, column: 11, scope: !5082)
!5082 = !DILexicalBlockFile(scope: !5080, file: !78, discriminator: 11)
!5083 = !DILocation(line: 610, column: 11, scope: !5084)
!5084 = !DILexicalBlockFile(scope: !5085, file: !78, discriminator: 12)
!5085 = distinct !DILexicalBlock(scope: !5053, file: !78, line: 610, column: 11)
!5086 = !DILocation(line: 610, column: 11, scope: !5087)
!5087 = !DILexicalBlockFile(scope: !5088, file: !78, discriminator: 13)
!5088 = distinct !DILexicalBlock(scope: !5085, file: !78, line: 610, column: 11)
!5089 = !DILocation(line: 610, column: 11, scope: !5090)
!5090 = !DILexicalBlockFile(scope: !5053, file: !78, discriminator: 14)
!5091 = !DILocation(line: 610, column: 11, scope: !5092)
!5092 = !DILexicalBlockFile(scope: !5053, file: !78, discriminator: 15)
!5093 = !DILocalVariable(name: "tok", scope: !5094, file: !78, line: 613, type: !7)
!5094 = distinct !DILexicalBlock(scope: !5053, file: !78, line: 612, column: 13)
!5095 = !DILocation(line: 613, column: 19, scope: !5094)
!5096 = !DILocation(line: 613, column: 41, scope: !5094)
!5097 = !DILocation(line: 613, column: 46, scope: !5094)
!5098 = !DILocation(line: 613, column: 50, scope: !5094)
!5099 = !DILocation(line: 613, column: 65, scope: !5094)
!5100 = !DILocation(line: 613, column: 25, scope: !5094)
!5101 = !DILocation(line: 614, column: 19, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5094, file: !78, line: 614, column: 19)
!5103 = !DILocation(line: 614, column: 23, scope: !5102)
!5104 = !DILocation(line: 614, column: 19, scope: !5094)
!5105 = !DILocation(line: 615, column: 21, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !78, line: 615, column: 21)
!5107 = distinct !DILexicalBlock(scope: !5102, file: !78, line: 614, column: 29)
!5108 = !DILocation(line: 615, column: 25, scope: !5106)
!5109 = !DILocation(line: 615, column: 21, scope: !5107)
!5110 = !DILocation(line: 616, column: 33, scope: !5106)
!5111 = !DILocation(line: 616, column: 20, scope: !5106)
!5112 = !DILocation(line: 616, column: 31, scope: !5106)
!5113 = !DILocation(line: 616, column: 19, scope: !5106)
!5114 = !DILocation(line: 617, column: 24, scope: !5107)
!5115 = !DILocation(line: 617, column: 17, scope: !5107)
!5116 = !DILocation(line: 619, column: 15, scope: !5094)
!5117 = !DILocation(line: 622, column: 27, scope: !5053)
!5118 = !DILocation(line: 622, column: 14, scope: !5053)
!5119 = !DILocation(line: 622, column: 25, scope: !5053)
!5120 = !DILocation(line: 623, column: 13, scope: !5053)
!5121 = !DILocation(line: 625, column: 17, scope: !5053)
!5122 = !DILocation(line: 626, column: 13, scope: !5053)
!5123 = !DILocation(line: 603, column: 9, scope: !5124)
!5124 = !DILexicalBlockFile(scope: !5031, file: !78, discriminator: 1)
!5125 = !DILocation(line: 629, column: 13, scope: !4992)
!5126 = !DILocation(line: 630, column: 9, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !78, line: 630, column: 9)
!5128 = distinct !DILexicalBlock(scope: !4992, file: !78, line: 630, column: 9)
!5129 = !DILocation(line: 630, column: 9, scope: !5128)
!5130 = !DILocation(line: 630, column: 9, scope: !5131)
!5131 = !DILexicalBlockFile(scope: !5132, file: !78, discriminator: 1)
!5132 = distinct !DILexicalBlock(scope: !5127, file: !78, line: 630, column: 9)
!5133 = !DILocation(line: 631, column: 17, scope: !4992)
!5134 = !DILocation(line: 631, column: 9, scope: !4992)
!5135 = !DILocation(line: 635, column: 11, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !4992, file: !78, line: 631, column: 38)
!5137 = !DILocation(line: 637, column: 11, scope: !5136)
!5138 = !DILocation(line: 639, column: 11, scope: !5136)
!5139 = !DILocation(line: 641, column: 25, scope: !5136)
!5140 = !DILocation(line: 641, column: 12, scope: !5136)
!5141 = !DILocation(line: 641, column: 23, scope: !5136)
!5142 = !DILocation(line: 642, column: 11, scope: !5136)
!5143 = !DILocation(line: 645, column: 9, scope: !4992)
!5144 = !DILocation(line: 646, column: 15, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5146, file: !78, line: 645, column: 18)
!5146 = distinct !DILexicalBlock(scope: !5147, file: !78, line: 645, column: 9)
!5147 = distinct !DILexicalBlock(scope: !4992, file: !78, line: 645, column: 9)
!5148 = !DILocation(line: 647, column: 11, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !78, line: 647, column: 11)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !78, line: 647, column: 11)
!5151 = !DILocation(line: 647, column: 11, scope: !5150)
!5152 = !DILocation(line: 647, column: 11, scope: !5153)
!5153 = !DILexicalBlockFile(scope: !5154, file: !78, discriminator: 1)
!5154 = distinct !DILexicalBlock(scope: !5149, file: !78, line: 647, column: 11)
!5155 = !DILocation(line: 648, column: 19, scope: !5145)
!5156 = !DILocation(line: 648, column: 11, scope: !5145)
!5157 = !DILocation(line: 649, column: 11, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !78, line: 649, column: 11)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 649, column: 11)
!5160 = distinct !DILexicalBlock(scope: !5145, file: !78, line: 648, column: 40)
!5161 = !DILocation(line: 649, column: 11, scope: !5162)
!5162 = !DILexicalBlockFile(scope: !5160, file: !78, discriminator: 1)
!5163 = !DILocation(line: 649, column: 11, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !5165, file: !78, discriminator: 2)
!5165 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 649, column: 11)
!5166 = !DILocation(line: 649, column: 11, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !5165, file: !78, discriminator: 3)
!5168 = !DILocation(line: 649, column: 11, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !5170, file: !78, discriminator: 4)
!5170 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 649, column: 11)
!5171 = !DILocation(line: 649, column: 11, scope: !5172)
!5172 = !DILexicalBlockFile(scope: !5173, file: !78, discriminator: 5)
!5173 = distinct !DILexicalBlock(scope: !5170, file: !78, line: 649, column: 11)
!5174 = !DILocation(line: 649, column: 11, scope: !5175)
!5175 = !DILexicalBlockFile(scope: !5160, file: !78, discriminator: 6)
!5176 = !DILocation(line: 649, column: 11, scope: !5177)
!5177 = !DILexicalBlockFile(scope: !5178, file: !78, discriminator: 7)
!5178 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 649, column: 11)
!5179 = !DILocation(line: 649, column: 11, scope: !5180)
!5180 = !DILexicalBlockFile(scope: !5178, file: !78, discriminator: 8)
!5181 = !DILocation(line: 649, column: 11, scope: !5182)
!5182 = !DILexicalBlockFile(scope: !5183, file: !78, discriminator: 9)
!5183 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 649, column: 11)
!5184 = !DILocation(line: 649, column: 11, scope: !5185)
!5185 = !DILexicalBlockFile(scope: !5186, file: !78, discriminator: 10)
!5186 = distinct !DILexicalBlock(scope: !5183, file: !78, line: 649, column: 11)
!5187 = !DILocation(line: 649, column: 11, scope: !5188)
!5188 = !DILexicalBlockFile(scope: !5160, file: !78, discriminator: 11)
!5189 = !DILocation(line: 649, column: 11, scope: !5190)
!5190 = !DILexicalBlockFile(scope: !5191, file: !78, discriminator: 12)
!5191 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 649, column: 11)
!5192 = !DILocation(line: 649, column: 11, scope: !5193)
!5193 = !DILexicalBlockFile(scope: !5191, file: !78, discriminator: 13)
!5194 = !DILocation(line: 649, column: 11, scope: !5195)
!5195 = !DILexicalBlockFile(scope: !5196, file: !78, discriminator: 14)
!5196 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 649, column: 11)
!5197 = !DILocation(line: 649, column: 11, scope: !5198)
!5198 = !DILexicalBlockFile(scope: !5199, file: !78, discriminator: 15)
!5199 = distinct !DILexicalBlock(scope: !5196, file: !78, line: 649, column: 11)
!5200 = !DILocation(line: 649, column: 11, scope: !5201)
!5201 = !DILexicalBlockFile(scope: !5160, file: !78, discriminator: 16)
!5202 = !DILocation(line: 651, column: 13, scope: !5160)
!5203 = !DILocation(line: 651, column: 13, scope: !5162)
!5204 = !DILocation(line: 654, column: 27, scope: !5160)
!5205 = !DILocation(line: 654, column: 31, scope: !5160)
!5206 = !DILocation(line: 654, column: 14, scope: !5160)
!5207 = !DILocation(line: 654, column: 25, scope: !5160)
!5208 = !DILocation(line: 655, column: 13, scope: !5160)
!5209 = !DILocation(line: 655, column: 13, scope: !5162)
!5210 = !DILocation(line: 658, column: 17, scope: !5160)
!5211 = !DILocation(line: 659, column: 13, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5213, file: !78, line: 659, column: 13)
!5213 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 659, column: 13)
!5214 = !DILocation(line: 659, column: 13, scope: !5213)
!5215 = !DILocation(line: 659, column: 13, scope: !5216)
!5216 = !DILexicalBlockFile(scope: !5217, file: !78, discriminator: 1)
!5217 = distinct !DILexicalBlock(scope: !5212, file: !78, line: 659, column: 13)
!5218 = !DILocation(line: 660, column: 18, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5160, file: !78, line: 660, column: 17)
!5220 = !DILocation(line: 660, column: 17, scope: !5160)
!5221 = !DILocation(line: 661, column: 29, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5219, file: !78, line: 660, column: 52)
!5223 = !DILocation(line: 661, column: 16, scope: !5222)
!5224 = !DILocation(line: 661, column: 27, scope: !5222)
!5225 = !DILocation(line: 662, column: 15, scope: !5222)
!5226 = !DILocation(line: 664, column: 27, scope: !5160)
!5227 = !DILocation(line: 664, column: 31, scope: !5160)
!5228 = !DILocation(line: 664, column: 14, scope: !5160)
!5229 = !DILocation(line: 664, column: 25, scope: !5160)
!5230 = !DILocation(line: 665, column: 13, scope: !5160)
!5231 = !DILocation(line: 667, column: 27, scope: !5160)
!5232 = !DILocation(line: 667, column: 14, scope: !5160)
!5233 = !DILocation(line: 667, column: 25, scope: !5160)
!5234 = !DILocation(line: 668, column: 13, scope: !5160)
!5235 = !DILocation(line: 670, column: 11, scope: !5145)
!5236 = !DILocation(line: 672, column: 9, scope: !4992)
!5237 = !DILocation(line: 675, column: 21, scope: !4917)
!5238 = !DILocation(line: 675, column: 8, scope: !4917)
!5239 = !DILocation(line: 675, column: 19, scope: !4917)
!5240 = !DILocation(line: 676, column: 7, scope: !4917)
!5241 = !DILocation(line: 539, column: 3, scope: !5242)
!5242 = !DILexicalBlockFile(scope: !262, file: !78, discriminator: 2)
!5243 = !DILocation(line: 679, column: 3, scope: !262)
!5244 = !DILocation(line: 680, column: 1, scope: !262)
!5245 = !DILocalVariable(name: "enc", arg: 1, scope: !264, file: !78, line: 472, type: !82)
!5246 = !DILocation(line: 472, column: 37, scope: !264)
!5247 = !DILocalVariable(name: "ptr", arg: 2, scope: !264, file: !78, line: 472, type: !93)
!5248 = !DILocation(line: 472, column: 54, scope: !264)
!5249 = !DILocalVariable(name: "end", arg: 3, scope: !264, file: !78, line: 473, type: !93)
!5250 = !DILocation(line: 473, column: 33, scope: !264)
!5251 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !264, file: !78, line: 473, type: !95)
!5252 = !DILocation(line: 473, column: 51, scope: !264)
!5253 = !DILocation(line: 475, column: 7, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !264, file: !78, line: 475, column: 7)
!5255 = !DILocation(line: 475, column: 7, scope: !264)
!5256 = !DILocation(line: 476, column: 9, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5258, file: !78, line: 476, column: 9)
!5258 = distinct !DILexicalBlock(scope: !5254, file: !78, line: 475, column: 32)
!5259 = !DILocation(line: 476, column: 9, scope: !5258)
!5260 = !DILocation(line: 477, column: 37, scope: !5257)
!5261 = !DILocation(line: 477, column: 42, scope: !5257)
!5262 = !DILocation(line: 477, column: 46, scope: !5257)
!5263 = !DILocation(line: 477, column: 61, scope: !5257)
!5264 = !DILocation(line: 477, column: 66, scope: !5257)
!5265 = !DILocation(line: 477, column: 14, scope: !5257)
!5266 = !DILocation(line: 477, column: 7, scope: !5257)
!5267 = !DILocation(line: 478, column: 13, scope: !5258)
!5268 = !DILocation(line: 478, column: 5, scope: !5258)
!5269 = !DILocation(line: 480, column: 7, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5258, file: !78, line: 478, column: 34)
!5271 = !DILocation(line: 482, column: 21, scope: !5270)
!5272 = !DILocation(line: 482, column: 8, scope: !5270)
!5273 = !DILocation(line: 482, column: 19, scope: !5270)
!5274 = !DILocation(line: 483, column: 7, scope: !5270)
!5275 = !DILocation(line: 485, column: 14, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5258, file: !78, line: 485, column: 5)
!5277 = !DILocation(line: 485, column: 10, scope: !5276)
!5278 = !DILocation(line: 485, column: 30, scope: !5279)
!5279 = !DILexicalBlockFile(scope: !5280, file: !78, discriminator: 1)
!5280 = distinct !DILexicalBlock(scope: !5276, file: !78, line: 485, column: 5)
!5281 = !DILocation(line: 485, column: 5, scope: !5279)
!5282 = !DILocation(line: 486, column: 15, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5280, file: !78, line: 485, column: 75)
!5284 = !DILocation(line: 486, column: 7, scope: !5283)
!5285 = !DILocation(line: 488, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5283, file: !78, line: 486, column: 36)
!5287 = !DILocation(line: 490, column: 23, scope: !5286)
!5288 = !DILocation(line: 490, column: 27, scope: !5286)
!5289 = !DILocation(line: 490, column: 10, scope: !5286)
!5290 = !DILocation(line: 490, column: 21, scope: !5286)
!5291 = !DILocation(line: 491, column: 9, scope: !5286)
!5292 = !DILocation(line: 493, column: 23, scope: !5286)
!5293 = !DILocation(line: 493, column: 10, scope: !5286)
!5294 = !DILocation(line: 493, column: 21, scope: !5286)
!5295 = !DILocation(line: 494, column: 9, scope: !5286)
!5296 = !DILocation(line: 496, column: 5, scope: !5283)
!5297 = !DILocation(line: 485, column: 59, scope: !5298)
!5298 = !DILexicalBlockFile(scope: !5280, file: !78, discriminator: 2)
!5299 = !DILocation(line: 485, column: 5, scope: !5298)
!5300 = !DILocation(line: 497, column: 3, scope: !5258)
!5301 = !DILocation(line: 498, column: 3, scope: !264)
!5302 = !DILocation(line: 499, column: 1, scope: !264)
!5303 = !DILocalVariable(name: "enc", arg: 1, scope: !265, file: !78, line: 440, type: !82)
!5304 = !DILocation(line: 440, column: 40, scope: !265)
!5305 = !DILocalVariable(name: "ptr", arg: 2, scope: !265, file: !78, line: 440, type: !93)
!5306 = !DILocation(line: 440, column: 57, scope: !265)
!5307 = !DILocalVariable(name: "end", arg: 3, scope: !265, file: !78, line: 441, type: !93)
!5308 = !DILocation(line: 441, column: 36, scope: !265)
!5309 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !265, file: !78, line: 441, type: !95)
!5310 = !DILocation(line: 441, column: 54, scope: !265)
!5311 = !DILocation(line: 443, column: 7, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !265, file: !78, line: 443, column: 7)
!5313 = !DILocation(line: 443, column: 7, scope: !265)
!5314 = !DILocation(line: 444, column: 13, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5312, file: !78, line: 443, column: 32)
!5316 = !DILocation(line: 444, column: 5, scope: !5315)
!5317 = !DILocation(line: 447, column: 7, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5315, file: !78, line: 444, column: 34)
!5319 = !DILocation(line: 449, column: 21, scope: !5318)
!5320 = !DILocation(line: 449, column: 8, scope: !5318)
!5321 = !DILocation(line: 449, column: 19, scope: !5318)
!5322 = !DILocation(line: 450, column: 7, scope: !5318)
!5323 = !DILocation(line: 452, column: 14, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5315, file: !78, line: 452, column: 5)
!5325 = !DILocation(line: 452, column: 10, scope: !5324)
!5326 = !DILocation(line: 452, column: 30, scope: !5327)
!5327 = !DILexicalBlockFile(scope: !5328, file: !78, discriminator: 1)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !78, line: 452, column: 5)
!5329 = !DILocation(line: 452, column: 5, scope: !5327)
!5330 = !DILocation(line: 453, column: 15, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5328, file: !78, line: 452, column: 75)
!5332 = !DILocation(line: 453, column: 7, scope: !5331)
!5333 = !DILocation(line: 456, column: 9, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5331, file: !78, line: 453, column: 36)
!5335 = !DILocation(line: 458, column: 23, scope: !5334)
!5336 = !DILocation(line: 458, column: 27, scope: !5334)
!5337 = !DILocation(line: 458, column: 10, scope: !5334)
!5338 = !DILocation(line: 458, column: 21, scope: !5334)
!5339 = !DILocation(line: 459, column: 9, scope: !5334)
!5340 = !DILocation(line: 461, column: 23, scope: !5334)
!5341 = !DILocation(line: 461, column: 10, scope: !5334)
!5342 = !DILocation(line: 461, column: 21, scope: !5334)
!5343 = !DILocation(line: 462, column: 9, scope: !5334)
!5344 = !DILocation(line: 464, column: 5, scope: !5331)
!5345 = !DILocation(line: 452, column: 59, scope: !5346)
!5346 = !DILexicalBlockFile(scope: !5328, file: !78, discriminator: 2)
!5347 = !DILocation(line: 452, column: 5, scope: !5346)
!5348 = !DILocation(line: 465, column: 3, scope: !5315)
!5349 = !DILocation(line: 466, column: 3, scope: !265)
!5350 = !DILocation(line: 467, column: 1, scope: !265)
!5351 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !287, file: !1, line: 368, type: !82)
!5352 = !DILocation(line: 368, column: 29, scope: !287)
!5353 = !DILocalVariable(name: "fromP", arg: 2, scope: !287, file: !1, line: 369, type: !95)
!5354 = !DILocation(line: 369, column: 26, scope: !287)
!5355 = !DILocalVariable(name: "fromLim", arg: 3, scope: !287, file: !1, line: 369, type: !93)
!5356 = !DILocation(line: 369, column: 45, scope: !287)
!5357 = !DILocalVariable(name: "toP", arg: 4, scope: !287, file: !1, line: 370, type: !140)
!5358 = !DILocation(line: 370, column: 20, scope: !287)
!5359 = !DILocalVariable(name: "toLim", arg: 5, scope: !287, file: !1, line: 370, type: !93)
!5360 = !DILocation(line: 370, column: 37, scope: !287)
!5361 = !DILocalVariable(name: "res", scope: !287, file: !1, line: 372, type: !21)
!5362 = !DILocation(line: 372, column: 27, scope: !287)
!5363 = !DILocalVariable(name: "to", scope: !287, file: !1, line: 373, type: !8)
!5364 = !DILocation(line: 373, column: 9, scope: !287)
!5365 = !DILocalVariable(name: "from", scope: !287, file: !1, line: 374, type: !93)
!5366 = !DILocation(line: 374, column: 15, scope: !287)
!5367 = !DILocation(line: 375, column: 7, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !287, file: !1, line: 375, column: 7)
!5369 = !DILocation(line: 375, column: 18, scope: !5368)
!5370 = !DILocation(line: 375, column: 17, scope: !5368)
!5371 = !DILocation(line: 375, column: 15, scope: !5368)
!5372 = !DILocation(line: 375, column: 26, scope: !5368)
!5373 = !DILocation(line: 375, column: 35, scope: !5368)
!5374 = !DILocation(line: 375, column: 34, scope: !5368)
!5375 = !DILocation(line: 375, column: 32, scope: !5368)
!5376 = !DILocation(line: 375, column: 24, scope: !5368)
!5377 = !DILocation(line: 375, column: 7, scope: !287)
!5378 = !DILocation(line: 377, column: 9, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5368, file: !1, line: 375, column: 40)
!5380 = !DILocation(line: 378, column: 16, scope: !5379)
!5381 = !DILocation(line: 378, column: 15, scope: !5379)
!5382 = !DILocation(line: 378, column: 25, scope: !5379)
!5383 = !DILocation(line: 378, column: 34, scope: !5379)
!5384 = !DILocation(line: 378, column: 33, scope: !5379)
!5385 = !DILocation(line: 378, column: 31, scope: !5379)
!5386 = !DILocation(line: 378, column: 22, scope: !5379)
!5387 = !DILocation(line: 378, column: 13, scope: !5379)
!5388 = !DILocation(line: 379, column: 42, scope: !5379)
!5389 = !DILocation(line: 379, column: 41, scope: !5379)
!5390 = !DILocation(line: 379, column: 5, scope: !5379)
!5391 = !DILocation(line: 380, column: 3, scope: !5379)
!5392 = !DILocation(line: 381, column: 14, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !287, file: !1, line: 381, column: 3)
!5394 = !DILocation(line: 381, column: 13, scope: !5393)
!5395 = !DILocation(line: 381, column: 11, scope: !5393)
!5396 = !DILocation(line: 381, column: 27, scope: !5393)
!5397 = !DILocation(line: 381, column: 26, scope: !5393)
!5398 = !DILocation(line: 381, column: 24, scope: !5393)
!5399 = !DILocation(line: 381, column: 8, scope: !5393)
!5400 = !DILocation(line: 381, column: 35, scope: !5401)
!5401 = !DILexicalBlockFile(scope: !5402, file: !1, discriminator: 1)
!5402 = distinct !DILexicalBlock(scope: !5393, file: !1, line: 381, column: 3)
!5403 = !DILocation(line: 381, column: 42, scope: !5401)
!5404 = !DILocation(line: 381, column: 40, scope: !5401)
!5405 = !DILocation(line: 381, column: 51, scope: !5401)
!5406 = !DILocation(line: 381, column: 55, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !5402, file: !1, discriminator: 2)
!5408 = !DILocation(line: 381, column: 60, scope: !5407)
!5409 = !DILocation(line: 381, column: 58, scope: !5407)
!5410 = !DILocation(line: 381, column: 3, scope: !5411)
!5411 = !DILexicalBlockFile(scope: !5393, file: !1, discriminator: 3)
!5412 = !DILocation(line: 382, column: 12, scope: !5402)
!5413 = !DILocation(line: 382, column: 11, scope: !5402)
!5414 = !DILocation(line: 382, column: 6, scope: !5402)
!5415 = !DILocation(line: 382, column: 9, scope: !5402)
!5416 = !DILocation(line: 382, column: 5, scope: !5402)
!5417 = !DILocation(line: 381, column: 72, scope: !5418)
!5418 = !DILexicalBlockFile(scope: !5402, file: !1, discriminator: 4)
!5419 = !DILocation(line: 381, column: 78, scope: !5418)
!5420 = !DILocation(line: 381, column: 3, scope: !5418)
!5421 = !DILocation(line: 383, column: 12, scope: !287)
!5422 = !DILocation(line: 383, column: 4, scope: !287)
!5423 = !DILocation(line: 383, column: 10, scope: !287)
!5424 = !DILocation(line: 384, column: 10, scope: !287)
!5425 = !DILocation(line: 384, column: 4, scope: !287)
!5426 = !DILocation(line: 384, column: 8, scope: !287)
!5427 = !DILocation(line: 386, column: 8, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !287, file: !1, line: 386, column: 7)
!5429 = !DILocation(line: 386, column: 14, scope: !5428)
!5430 = !DILocation(line: 386, column: 11, scope: !5428)
!5431 = !DILocation(line: 386, column: 21, scope: !5428)
!5432 = !DILocation(line: 386, column: 25, scope: !5433)
!5433 = !DILexicalBlockFile(scope: !5428, file: !1, discriminator: 1)
!5434 = !DILocation(line: 386, column: 32, scope: !5433)
!5435 = !DILocation(line: 386, column: 30, scope: !5433)
!5436 = !DILocation(line: 386, column: 7, scope: !5433)
!5437 = !DILocation(line: 387, column: 5, scope: !5428)
!5438 = !DILocation(line: 389, column: 12, scope: !5428)
!5439 = !DILocation(line: 389, column: 5, scope: !5428)
!5440 = !DILocation(line: 390, column: 1, scope: !287)
!5441 = !DILocalVariable(name: "enc", arg: 1, scope: !288, file: !1, line: 393, type: !82)
!5442 = !DILocation(line: 393, column: 30, scope: !288)
!5443 = !DILocalVariable(name: "fromP", arg: 2, scope: !288, file: !1, line: 394, type: !95)
!5444 = !DILocation(line: 394, column: 27, scope: !288)
!5445 = !DILocalVariable(name: "fromLim", arg: 3, scope: !288, file: !1, line: 394, type: !93)
!5446 = !DILocation(line: 394, column: 46, scope: !288)
!5447 = !DILocalVariable(name: "toP", arg: 4, scope: !288, file: !1, line: 395, type: !145)
!5448 = !DILocation(line: 395, column: 31, scope: !288)
!5449 = !DILocalVariable(name: "toLim", arg: 5, scope: !288, file: !1, line: 395, type: !148)
!5450 = !DILocation(line: 395, column: 58, scope: !288)
!5451 = !DILocalVariable(name: "res", scope: !288, file: !1, line: 397, type: !21)
!5452 = !DILocation(line: 397, column: 27, scope: !288)
!5453 = !DILocalVariable(name: "to", scope: !288, file: !1, line: 398, type: !146)
!5454 = !DILocation(line: 398, column: 19, scope: !288)
!5455 = !DILocation(line: 398, column: 25, scope: !288)
!5456 = !DILocation(line: 398, column: 24, scope: !288)
!5457 = !DILocalVariable(name: "from", scope: !288, file: !1, line: 399, type: !93)
!5458 = !DILocation(line: 399, column: 15, scope: !288)
!5459 = !DILocation(line: 399, column: 23, scope: !288)
!5460 = !DILocation(line: 399, column: 22, scope: !288)
!5461 = !DILocation(line: 400, column: 3, scope: !288)
!5462 = !DILocation(line: 400, column: 10, scope: !5463)
!5463 = !DILexicalBlockFile(scope: !288, file: !1, discriminator: 1)
!5464 = !DILocation(line: 400, column: 17, scope: !5463)
!5465 = !DILocation(line: 400, column: 15, scope: !5463)
!5466 = !DILocation(line: 400, column: 25, scope: !5463)
!5467 = !DILocation(line: 400, column: 28, scope: !5468)
!5468 = !DILexicalBlockFile(scope: !288, file: !1, discriminator: 2)
!5469 = !DILocation(line: 400, column: 33, scope: !5468)
!5470 = !DILocation(line: 400, column: 31, scope: !5468)
!5471 = !DILocation(line: 400, column: 3, scope: !5472)
!5472 = !DILexicalBlockFile(scope: !288, file: !1, discriminator: 3)
!5473 = !DILocation(line: 401, column: 67, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !288, file: !1, line: 400, column: 40)
!5475 = !DILocation(line: 401, column: 66, scope: !5474)
!5476 = !DILocation(line: 401, column: 13, scope: !5474)
!5477 = !DILocation(line: 401, column: 40, scope: !5474)
!5478 = !DILocation(line: 401, column: 46, scope: !5474)
!5479 = !DILocation(line: 401, column: 5, scope: !5474)
!5480 = !DILocation(line: 403, column: 11, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !1, line: 403, column: 11)
!5482 = distinct !DILexicalBlock(scope: !5474, file: !1, line: 401, column: 74)
!5483 = !DILocation(line: 403, column: 21, scope: !5481)
!5484 = !DILocation(line: 403, column: 19, scope: !5481)
!5485 = !DILocation(line: 403, column: 26, scope: !5481)
!5486 = !DILocation(line: 403, column: 11, scope: !5482)
!5487 = !DILocation(line: 404, column: 13, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5481, file: !1, line: 403, column: 31)
!5489 = !DILocation(line: 405, column: 9, scope: !5488)
!5490 = !DILocation(line: 407, column: 34, scope: !5482)
!5491 = !DILocation(line: 407, column: 42, scope: !5482)
!5492 = !DILocation(line: 407, column: 50, scope: !5482)
!5493 = !DILocation(line: 407, column: 59, scope: !5482)
!5494 = !DILocation(line: 407, column: 67, scope: !5482)
!5495 = !DILocation(line: 407, column: 56, scope: !5482)
!5496 = !DILocation(line: 407, column: 15, scope: !5482)
!5497 = !DILocation(line: 407, column: 10, scope: !5482)
!5498 = !DILocation(line: 407, column: 13, scope: !5482)
!5499 = !DILocation(line: 408, column: 12, scope: !5482)
!5500 = !DILocation(line: 409, column: 7, scope: !5482)
!5501 = !DILocation(line: 411, column: 11, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5482, file: !1, line: 411, column: 11)
!5503 = !DILocation(line: 411, column: 21, scope: !5502)
!5504 = !DILocation(line: 411, column: 19, scope: !5502)
!5505 = !DILocation(line: 411, column: 26, scope: !5502)
!5506 = !DILocation(line: 411, column: 11, scope: !5482)
!5507 = !DILocation(line: 412, column: 13, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5502, file: !1, line: 411, column: 31)
!5509 = !DILocation(line: 413, column: 9, scope: !5508)
!5510 = !DILocation(line: 415, column: 34, scope: !5482)
!5511 = !DILocation(line: 415, column: 42, scope: !5482)
!5512 = !DILocation(line: 415, column: 49, scope: !5482)
!5513 = !DILocation(line: 416, column: 36, scope: !5482)
!5514 = !DILocation(line: 416, column: 44, scope: !5482)
!5515 = !DILocation(line: 416, column: 52, scope: !5482)
!5516 = !DILocation(line: 416, column: 32, scope: !5482)
!5517 = !DILocation(line: 416, column: 61, scope: !5482)
!5518 = !DILocation(line: 416, column: 69, scope: !5482)
!5519 = !DILocation(line: 416, column: 58, scope: !5482)
!5520 = !DILocation(line: 415, column: 15, scope: !5482)
!5521 = !DILocation(line: 415, column: 10, scope: !5482)
!5522 = !DILocation(line: 415, column: 13, scope: !5482)
!5523 = !DILocation(line: 417, column: 12, scope: !5482)
!5524 = !DILocation(line: 418, column: 7, scope: !5482)
!5525 = !DILocalVariable(name: "n", scope: !5526, file: !1, line: 421, type: !133)
!5526 = distinct !DILexicalBlock(scope: !5482, file: !1, line: 420, column: 7)
!5527 = !DILocation(line: 421, column: 23, scope: !5526)
!5528 = !DILocation(line: 422, column: 13, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5526, file: !1, line: 422, column: 13)
!5530 = !DILocation(line: 422, column: 21, scope: !5529)
!5531 = !DILocation(line: 422, column: 19, scope: !5529)
!5532 = !DILocation(line: 422, column: 24, scope: !5529)
!5533 = !DILocation(line: 422, column: 13, scope: !5526)
!5534 = !DILocation(line: 423, column: 15, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 422, column: 29)
!5536 = !DILocation(line: 424, column: 11, scope: !5535)
!5537 = !DILocation(line: 426, column: 13, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5526, file: !1, line: 426, column: 13)
!5539 = !DILocation(line: 426, column: 23, scope: !5538)
!5540 = !DILocation(line: 426, column: 21, scope: !5538)
!5541 = !DILocation(line: 426, column: 28, scope: !5538)
!5542 = !DILocation(line: 426, column: 13, scope: !5526)
!5543 = !DILocation(line: 427, column: 15, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5538, file: !1, line: 426, column: 33)
!5545 = !DILocation(line: 428, column: 11, scope: !5544)
!5546 = !DILocation(line: 430, column: 15, scope: !5526)
!5547 = !DILocation(line: 430, column: 23, scope: !5526)
!5548 = !DILocation(line: 430, column: 30, scope: !5526)
!5549 = !DILocation(line: 430, column: 41, scope: !5526)
!5550 = !DILocation(line: 430, column: 49, scope: !5526)
!5551 = !DILocation(line: 430, column: 57, scope: !5526)
!5552 = !DILocation(line: 430, column: 37, scope: !5526)
!5553 = !DILocation(line: 431, column: 17, scope: !5526)
!5554 = !DILocation(line: 431, column: 25, scope: !5526)
!5555 = !DILocation(line: 431, column: 33, scope: !5526)
!5556 = !DILocation(line: 431, column: 13, scope: !5526)
!5557 = !DILocation(line: 431, column: 42, scope: !5526)
!5558 = !DILocation(line: 431, column: 50, scope: !5526)
!5559 = !DILocation(line: 431, column: 39, scope: !5526)
!5560 = !DILocation(line: 430, column: 13, scope: !5526)
!5561 = !DILocation(line: 430, column: 11, scope: !5526)
!5562 = !DILocation(line: 432, column: 11, scope: !5526)
!5563 = !DILocation(line: 433, column: 35, scope: !5526)
!5564 = !DILocation(line: 433, column: 37, scope: !5526)
!5565 = !DILocation(line: 433, column: 44, scope: !5526)
!5566 = !DILocation(line: 433, column: 17, scope: !5526)
!5567 = !DILocation(line: 433, column: 9, scope: !5526)
!5568 = !DILocation(line: 433, column: 15, scope: !5526)
!5569 = !DILocation(line: 434, column: 35, scope: !5526)
!5570 = !DILocation(line: 434, column: 37, scope: !5526)
!5571 = !DILocation(line: 434, column: 46, scope: !5526)
!5572 = !DILocation(line: 434, column: 17, scope: !5526)
!5573 = !DILocation(line: 434, column: 9, scope: !5526)
!5574 = !DILocation(line: 434, column: 15, scope: !5526)
!5575 = !DILocation(line: 435, column: 12, scope: !5526)
!5576 = !DILocation(line: 436, column: 14, scope: !5526)
!5577 = !DILocation(line: 438, column: 7, scope: !5482)
!5578 = !DILocation(line: 440, column: 20, scope: !5482)
!5579 = !DILocation(line: 440, column: 15, scope: !5482)
!5580 = !DILocation(line: 440, column: 10, scope: !5482)
!5581 = !DILocation(line: 440, column: 13, scope: !5482)
!5582 = !DILocation(line: 441, column: 7, scope: !5482)
!5583 = !DILocation(line: 400, column: 3, scope: !5584)
!5584 = !DILexicalBlockFile(scope: !288, file: !1, discriminator: 4)
!5585 = !DILocation(line: 400, column: 3, scope: !5586)
!5586 = !DILexicalBlockFile(scope: !288, file: !1, discriminator: 5)
!5587 = !DILocation(line: 445, column: 12, scope: !288)
!5588 = !DILocation(line: 445, column: 4, scope: !288)
!5589 = !DILocation(line: 445, column: 10, scope: !288)
!5590 = !DILocation(line: 446, column: 10, scope: !288)
!5591 = !DILocation(line: 446, column: 4, scope: !288)
!5592 = !DILocation(line: 446, column: 8, scope: !288)
!5593 = !DILocation(line: 447, column: 10, scope: !288)
!5594 = !DILocation(line: 447, column: 3, scope: !288)
!5595 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !289, file: !1, line: 131, type: !82)
!5596 = !DILocation(line: 131, column: 30, scope: !289)
!5597 = !DILocalVariable(name: "p", arg: 2, scope: !289, file: !1, line: 131, type: !93)
!5598 = !DILocation(line: 131, column: 57, scope: !289)
!5599 = !DILocation(line: 133, column: 10, scope: !289)
!5600 = !DILocation(line: 133, column: 3, scope: !289)
!5601 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !290, file: !1, line: 137, type: !82)
!5602 = !DILocation(line: 137, column: 30, scope: !290)
!5603 = !DILocalVariable(name: "p", arg: 2, scope: !290, file: !1, line: 137, type: !93)
!5604 = !DILocation(line: 137, column: 57, scope: !290)
!5605 = !DILocation(line: 139, column: 10, scope: !290)
!5606 = !DILocation(line: 139, column: 3, scope: !290)
!5607 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !291, file: !1, line: 125, type: !82)
!5608 = !DILocation(line: 125, column: 25, scope: !291)
!5609 = !DILocalVariable(name: "UNUSED_p", arg: 2, scope: !291, file: !1, line: 125, type: !93)
!5610 = !DILocation(line: 125, column: 52, scope: !291)
!5611 = !DILocation(line: 127, column: 3, scope: !291)
!5612 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !292, file: !1, line: 145, type: !82)
!5613 = !DILocation(line: 145, column: 32, scope: !292)
!5614 = !DILocalVariable(name: "p", arg: 2, scope: !292, file: !1, line: 145, type: !93)
!5615 = !DILocation(line: 145, column: 59, scope: !292)
!5616 = !DILocation(line: 147, column: 10, scope: !292)
!5617 = !DILocation(line: 147, column: 3, scope: !292)
!5618 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !293, file: !1, line: 151, type: !82)
!5619 = !DILocation(line: 151, column: 32, scope: !293)
!5620 = !DILocalVariable(name: "p", arg: 2, scope: !293, file: !1, line: 151, type: !93)
!5621 = !DILocation(line: 151, column: 59, scope: !293)
!5622 = !DILocation(line: 153, column: 10, scope: !293)
!5623 = !DILocation(line: 153, column: 3, scope: !293)
!5624 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !294, file: !1, line: 159, type: !82)
!5625 = !DILocation(line: 159, column: 33, scope: !294)
!5626 = !DILocalVariable(name: "p", arg: 2, scope: !294, file: !1, line: 159, type: !93)
!5627 = !DILocation(line: 159, column: 60, scope: !294)
!5628 = !DILocation(line: 161, column: 10, scope: !294)
!5629 = !DILocation(line: 161, column: 10, scope: !5630)
!5630 = !DILexicalBlockFile(scope: !294, file: !1, discriminator: 1)
!5631 = !DILocation(line: 161, column: 10, scope: !5632)
!5632 = !DILexicalBlockFile(scope: !294, file: !1, discriminator: 2)
!5633 = !DILocation(line: 161, column: 10, scope: !5634)
!5634 = !DILexicalBlockFile(scope: !294, file: !1, discriminator: 3)
!5635 = !DILocation(line: 161, column: 3, scope: !5634)
!5636 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !295, file: !1, line: 165, type: !82)
!5637 = !DILocation(line: 165, column: 33, scope: !295)
!5638 = !DILocalVariable(name: "p", arg: 2, scope: !295, file: !1, line: 165, type: !93)
!5639 = !DILocation(line: 165, column: 60, scope: !295)
!5640 = !DILocation(line: 167, column: 10, scope: !295)
!5641 = !DILocation(line: 167, column: 10, scope: !5642)
!5642 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 1)
!5643 = !DILocation(line: 167, column: 10, scope: !5644)
!5644 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 2)
!5645 = !DILocation(line: 167, column: 10, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 3)
!5647 = !DILocation(line: 167, column: 10, scope: !5648)
!5648 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 4)
!5649 = !DILocation(line: 167, column: 10, scope: !5650)
!5650 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 5)
!5651 = !DILocation(line: 167, column: 10, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 6)
!5653 = !DILocation(line: 167, column: 10, scope: !5654)
!5654 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 7)
!5655 = !DILocation(line: 167, column: 10, scope: !5656)
!5656 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 8)
!5657 = !DILocation(line: 167, column: 10, scope: !5658)
!5658 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 9)
!5659 = !DILocation(line: 167, column: 10, scope: !5660)
!5660 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 10)
!5661 = !DILocation(line: 167, column: 10, scope: !5662)
!5662 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 11)
!5663 = !DILocation(line: 167, column: 10, scope: !5664)
!5664 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 12)
!5665 = !DILocation(line: 167, column: 10, scope: !5666)
!5666 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 13)
!5667 = !DILocation(line: 167, column: 10, scope: !5668)
!5668 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 14)
!5669 = !DILocation(line: 167, column: 10, scope: !5670)
!5670 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 15)
!5671 = !DILocation(line: 167, column: 10, scope: !5672)
!5672 = !DILexicalBlockFile(scope: !295, file: !1, discriminator: 16)
!5673 = !DILocation(line: 167, column: 3, scope: !5672)
!5674 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !296, file: !1, line: 171, type: !82)
!5675 = !DILocation(line: 171, column: 33, scope: !296)
!5676 = !DILocalVariable(name: "p", arg: 2, scope: !296, file: !1, line: 171, type: !93)
!5677 = !DILocation(line: 171, column: 60, scope: !296)
!5678 = !DILocation(line: 173, column: 10, scope: !296)
!5679 = !DILocation(line: 173, column: 10, scope: !5680)
!5680 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 1)
!5681 = !DILocation(line: 173, column: 10, scope: !5682)
!5682 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 2)
!5683 = !DILocation(line: 173, column: 10, scope: !5684)
!5684 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 3)
!5685 = !DILocation(line: 173, column: 10, scope: !5686)
!5686 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 4)
!5687 = !DILocation(line: 173, column: 10, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 5)
!5689 = !DILocation(line: 173, column: 10, scope: !5690)
!5690 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 6)
!5691 = !DILocation(line: 173, column: 10, scope: !5692)
!5692 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 7)
!5693 = !DILocation(line: 173, column: 10, scope: !5694)
!5694 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 8)
!5695 = !DILocation(line: 173, column: 10, scope: !5696)
!5696 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 9)
!5697 = !DILocation(line: 173, column: 10, scope: !5698)
!5698 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 10)
!5699 = !DILocation(line: 173, column: 10, scope: !5700)
!5700 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 11)
!5701 = !DILocation(line: 173, column: 10, scope: !5702)
!5702 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 12)
!5703 = !DILocation(line: 173, column: 10, scope: !5704)
!5704 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 13)
!5705 = !DILocation(line: 173, column: 10, scope: !5706)
!5706 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 14)
!5707 = !DILocation(line: 173, column: 10, scope: !5708)
!5708 = !DILexicalBlockFile(scope: !296, file: !1, discriminator: 15)
!5709 = !DILocation(line: 173, column: 3, scope: !5708)
!5710 = !DILocalVariable(name: "enc", arg: 1, scope: !297, file: !78, line: 967, type: !82)
!5711 = !DILocation(line: 967, column: 35, scope: !297)
!5712 = !DILocalVariable(name: "ptr", arg: 2, scope: !297, file: !78, line: 967, type: !93)
!5713 = !DILocation(line: 967, column: 52, scope: !297)
!5714 = !DILocalVariable(name: "end", arg: 3, scope: !297, file: !78, line: 967, type: !93)
!5715 = !DILocation(line: 967, column: 69, scope: !297)
!5716 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !297, file: !78, line: 968, type: !95)
!5717 = !DILocation(line: 968, column: 32, scope: !297)
!5718 = !DILocalVariable(name: "tok", scope: !297, file: !78, line: 970, type: !7)
!5719 = !DILocation(line: 970, column: 7, scope: !297)
!5720 = !DILocation(line: 971, column: 7, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !297, file: !78, line: 971, column: 7)
!5722 = !DILocation(line: 971, column: 14, scope: !5721)
!5723 = !DILocation(line: 971, column: 11, scope: !5721)
!5724 = !DILocation(line: 971, column: 7, scope: !297)
!5725 = !DILocation(line: 972, column: 5, scope: !5721)
!5726 = !DILocalVariable(name: "n", scope: !5727, file: !78, line: 974, type: !453)
!5727 = distinct !DILexicalBlock(scope: !5728, file: !78, line: 973, column: 24)
!5728 = distinct !DILexicalBlock(scope: !297, file: !78, line: 973, column: 7)
!5729 = !DILocation(line: 974, column: 12, scope: !5727)
!5730 = !DILocation(line: 974, column: 16, scope: !5727)
!5731 = !DILocation(line: 974, column: 22, scope: !5727)
!5732 = !DILocation(line: 974, column: 20, scope: !5727)
!5733 = !DILocation(line: 975, column: 9, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5727, file: !78, line: 975, column: 9)
!5735 = !DILocation(line: 975, column: 11, scope: !5734)
!5736 = !DILocation(line: 975, column: 9, scope: !5727)
!5737 = !DILocation(line: 976, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5734, file: !78, line: 975, column: 32)
!5739 = !DILocation(line: 977, column: 11, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5738, file: !78, line: 977, column: 11)
!5741 = !DILocation(line: 977, column: 13, scope: !5740)
!5742 = !DILocation(line: 977, column: 11, scope: !5738)
!5743 = !DILocation(line: 978, column: 9, scope: !5740)
!5744 = !DILocation(line: 979, column: 13, scope: !5738)
!5745 = !DILocation(line: 979, column: 19, scope: !5738)
!5746 = !DILocation(line: 979, column: 17, scope: !5738)
!5747 = !DILocation(line: 979, column: 11, scope: !5738)
!5748 = !DILocation(line: 980, column: 5, scope: !5738)
!5749 = !DILocation(line: 982, column: 11, scope: !297)
!5750 = !DILocation(line: 982, column: 11, scope: !5751)
!5751 = !DILexicalBlockFile(scope: !297, file: !78, discriminator: 1)
!5752 = !DILocation(line: 982, column: 11, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !297, file: !78, discriminator: 2)
!5754 = !DILocation(line: 982, column: 11, scope: !5755)
!5755 = !DILexicalBlockFile(scope: !297, file: !78, discriminator: 3)
!5756 = !DILocation(line: 982, column: 3, scope: !5755)
!5757 = !DILocation(line: 984, column: 37, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !297, file: !78, line: 982, column: 32)
!5759 = !DILocation(line: 984, column: 42, scope: !5758)
!5760 = !DILocation(line: 984, column: 46, scope: !5758)
!5761 = !DILocation(line: 984, column: 61, scope: !5758)
!5762 = !DILocation(line: 984, column: 66, scope: !5758)
!5763 = !DILocation(line: 984, column: 12, scope: !5758)
!5764 = !DILocation(line: 984, column: 5, scope: !5758)
!5765 = !DILocation(line: 986, column: 37, scope: !5758)
!5766 = !DILocation(line: 986, column: 42, scope: !5758)
!5767 = !DILocation(line: 986, column: 46, scope: !5758)
!5768 = !DILocation(line: 986, column: 61, scope: !5758)
!5769 = !DILocation(line: 986, column: 66, scope: !5758)
!5770 = !DILocation(line: 986, column: 12, scope: !5758)
!5771 = !DILocation(line: 986, column: 5, scope: !5758)
!5772 = !DILocation(line: 989, column: 11, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 988, column: 5)
!5774 = !DILocation(line: 990, column: 7, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5776, file: !78, line: 990, column: 7)
!5776 = distinct !DILexicalBlock(scope: !5773, file: !78, line: 990, column: 7)
!5777 = !DILocation(line: 990, column: 7, scope: !5776)
!5778 = !DILocation(line: 990, column: 7, scope: !5779)
!5779 = !DILexicalBlockFile(scope: !5780, file: !78, discriminator: 2)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !78, line: 990, column: 7)
!5781 = !DILocation(line: 991, column: 15, scope: !5773)
!5782 = !DILocation(line: 991, column: 15, scope: !5783)
!5783 = !DILexicalBlockFile(scope: !5773, file: !78, discriminator: 1)
!5784 = !DILocation(line: 991, column: 15, scope: !5785)
!5785 = !DILexicalBlockFile(scope: !5773, file: !78, discriminator: 2)
!5786 = !DILocation(line: 991, column: 15, scope: !5787)
!5787 = !DILexicalBlockFile(scope: !5773, file: !78, discriminator: 3)
!5788 = !DILocation(line: 991, column: 7, scope: !5787)
!5789 = !DILocation(line: 993, column: 33, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5773, file: !78, line: 991, column: 36)
!5791 = !DILocation(line: 993, column: 38, scope: !5790)
!5792 = !DILocation(line: 993, column: 42, scope: !5790)
!5793 = !DILocation(line: 993, column: 57, scope: !5790)
!5794 = !DILocation(line: 993, column: 62, scope: !5790)
!5795 = !DILocation(line: 993, column: 16, scope: !5790)
!5796 = !DILocation(line: 993, column: 9, scope: !5790)
!5797 = !DILocation(line: 995, column: 31, scope: !5790)
!5798 = !DILocation(line: 995, column: 36, scope: !5790)
!5799 = !DILocation(line: 995, column: 40, scope: !5790)
!5800 = !DILocation(line: 995, column: 55, scope: !5790)
!5801 = !DILocation(line: 995, column: 60, scope: !5790)
!5802 = !DILocation(line: 995, column: 16, scope: !5790)
!5803 = !DILocation(line: 995, column: 9, scope: !5790)
!5804 = !DILocation(line: 1002, column: 23, scope: !5790)
!5805 = !DILocation(line: 1002, column: 27, scope: !5790)
!5806 = !DILocation(line: 1002, column: 10, scope: !5790)
!5807 = !DILocation(line: 1002, column: 21, scope: !5790)
!5808 = !DILocation(line: 1003, column: 9, scope: !5790)
!5809 = !DILocation(line: 1005, column: 21, scope: !5773)
!5810 = !DILocation(line: 1005, column: 8, scope: !5773)
!5811 = !DILocation(line: 1005, column: 19, scope: !5773)
!5812 = !DILocation(line: 1006, column: 7, scope: !5773)
!5813 = !DILocation(line: 1009, column: 9, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1009, column: 9)
!5815 = !DILocation(line: 1009, column: 13, scope: !5814)
!5816 = !DILocation(line: 1009, column: 30, scope: !5814)
!5817 = !DILocation(line: 1009, column: 27, scope: !5814)
!5818 = !DILocation(line: 1009, column: 9, scope: !5758)
!5819 = !DILocation(line: 1010, column: 21, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5814, file: !78, line: 1009, column: 35)
!5821 = !DILocation(line: 1010, column: 8, scope: !5820)
!5822 = !DILocation(line: 1010, column: 19, scope: !5820)
!5823 = !DILocation(line: 1012, column: 7, scope: !5820)
!5824 = !DILocation(line: 1009, column: 30, scope: !5825)
!5825 = !DILexicalBlockFile(scope: !5814, file: !78, discriminator: 2)
!5826 = !DILocation(line: 1016, column: 5, scope: !5758)
!5827 = !DILocation(line: 1017, column: 11, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !78, line: 1016, column: 14)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !78, line: 1016, column: 5)
!5830 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1016, column: 5)
!5831 = !DILocation(line: 1018, column: 13, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5828, file: !78, line: 1018, column: 11)
!5833 = !DILocation(line: 1018, column: 11, scope: !5828)
!5834 = !DILocation(line: 1019, column: 9, scope: !5832)
!5835 = !DILocation(line: 1020, column: 15, scope: !5828)
!5836 = !DILocation(line: 1020, column: 15, scope: !5837)
!5837 = !DILexicalBlockFile(scope: !5828, file: !78, discriminator: 1)
!5838 = !DILocation(line: 1020, column: 15, scope: !5839)
!5839 = !DILexicalBlockFile(scope: !5828, file: !78, discriminator: 2)
!5840 = !DILocation(line: 1020, column: 15, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5828, file: !78, discriminator: 3)
!5842 = !DILocation(line: 1020, column: 7, scope: !5841)
!5843 = !DILocation(line: 1022, column: 9, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5828, file: !78, line: 1020, column: 36)
!5845 = !DILocation(line: 1025, column: 13, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5844, file: !78, line: 1025, column: 13)
!5847 = !DILocation(line: 1025, column: 17, scope: !5846)
!5848 = !DILocation(line: 1025, column: 34, scope: !5846)
!5849 = !DILocation(line: 1025, column: 31, scope: !5846)
!5850 = !DILocation(line: 1025, column: 13, scope: !5844)
!5851 = !DILocation(line: 1026, column: 11, scope: !5846)
!5852 = !DILocation(line: 1025, column: 34, scope: !5853)
!5853 = !DILexicalBlockFile(scope: !5846, file: !78, discriminator: 2)
!5854 = !DILocation(line: 1029, column: 23, scope: !5844)
!5855 = !DILocation(line: 1029, column: 10, scope: !5844)
!5856 = !DILocation(line: 1029, column: 21, scope: !5844)
!5857 = !DILocation(line: 1030, column: 9, scope: !5844)
!5858 = !DILocation(line: 1016, column: 5, scope: !5859)
!5859 = !DILexicalBlockFile(scope: !5829, file: !78, discriminator: 2)
!5860 = !DILocation(line: 1033, column: 19, scope: !5758)
!5861 = !DILocation(line: 1033, column: 6, scope: !5758)
!5862 = !DILocation(line: 1033, column: 17, scope: !5758)
!5863 = !DILocation(line: 1034, column: 5, scope: !5758)
!5864 = !DILocation(line: 1036, column: 32, scope: !5758)
!5865 = !DILocation(line: 1036, column: 37, scope: !5758)
!5866 = !DILocation(line: 1036, column: 41, scope: !5758)
!5867 = !DILocation(line: 1036, column: 56, scope: !5758)
!5868 = !DILocation(line: 1036, column: 61, scope: !5758)
!5869 = !DILocation(line: 1036, column: 12, scope: !5758)
!5870 = !DILocation(line: 1036, column: 5, scope: !5758)
!5871 = !DILocation(line: 1038, column: 19, scope: !5758)
!5872 = !DILocation(line: 1038, column: 23, scope: !5758)
!5873 = !DILocation(line: 1038, column: 6, scope: !5758)
!5874 = !DILocation(line: 1038, column: 17, scope: !5758)
!5875 = !DILocation(line: 1039, column: 5, scope: !5758)
!5876 = !DILocation(line: 1041, column: 19, scope: !5758)
!5877 = !DILocation(line: 1041, column: 23, scope: !5758)
!5878 = !DILocation(line: 1041, column: 6, scope: !5758)
!5879 = !DILocation(line: 1041, column: 17, scope: !5758)
!5880 = !DILocation(line: 1042, column: 5, scope: !5758)
!5881 = !DILocation(line: 1044, column: 9, scope: !5758)
!5882 = !DILocation(line: 1045, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1045, column: 9)
!5884 = !DILocation(line: 1045, column: 9, scope: !5758)
!5885 = !DILocation(line: 1046, column: 7, scope: !5883)
!5886 = !DILocation(line: 1047, column: 9, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1047, column: 9)
!5888 = !DILocation(line: 1047, column: 9, scope: !5889)
!5889 = !DILexicalBlockFile(scope: !5887, file: !78, discriminator: 1)
!5890 = !DILocation(line: 1048, column: 7, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5892, file: !78, line: 1048, column: 7)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !78, line: 1048, column: 7)
!5893 = distinct !DILexicalBlock(scope: !5887, file: !78, line: 1047, column: 45)
!5894 = !DILocation(line: 1048, column: 7, scope: !5892)
!5895 = !DILocation(line: 1048, column: 7, scope: !5896)
!5896 = !DILexicalBlockFile(scope: !5897, file: !78, discriminator: 2)
!5897 = distinct !DILexicalBlock(scope: !5891, file: !78, line: 1048, column: 7)
!5898 = !DILocation(line: 1049, column: 11, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5893, file: !78, line: 1049, column: 11)
!5900 = !DILocation(line: 1049, column: 11, scope: !5901)
!5901 = !DILexicalBlockFile(scope: !5899, file: !78, discriminator: 1)
!5902 = !DILocation(line: 1050, column: 23, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5899, file: !78, line: 1049, column: 59)
!5904 = !DILocation(line: 1050, column: 27, scope: !5903)
!5905 = !DILocation(line: 1050, column: 10, scope: !5903)
!5906 = !DILocation(line: 1050, column: 21, scope: !5903)
!5907 = !DILocation(line: 1051, column: 9, scope: !5903)
!5908 = !DILocation(line: 1053, column: 5, scope: !5893)
!5909 = !DILocation(line: 1054, column: 19, scope: !5758)
!5910 = !DILocation(line: 1054, column: 6, scope: !5758)
!5911 = !DILocation(line: 1054, column: 17, scope: !5758)
!5912 = !DILocation(line: 1055, column: 5, scope: !5758)
!5913 = !DILocation(line: 1057, column: 19, scope: !5758)
!5914 = !DILocation(line: 1057, column: 23, scope: !5758)
!5915 = !DILocation(line: 1057, column: 6, scope: !5758)
!5916 = !DILocation(line: 1057, column: 17, scope: !5758)
!5917 = !DILocation(line: 1058, column: 5, scope: !5758)
!5918 = !DILocation(line: 1060, column: 9, scope: !5758)
!5919 = !DILocation(line: 1061, column: 11, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1061, column: 9)
!5921 = !DILocation(line: 1061, column: 9, scope: !5758)
!5922 = !DILocation(line: 1062, column: 7, scope: !5920)
!5923 = !DILocation(line: 1063, column: 13, scope: !5758)
!5924 = !DILocation(line: 1063, column: 13, scope: !5925)
!5925 = !DILexicalBlockFile(scope: !5758, file: !78, discriminator: 1)
!5926 = !DILocation(line: 1063, column: 13, scope: !5927)
!5927 = !DILexicalBlockFile(scope: !5758, file: !78, discriminator: 2)
!5928 = !DILocation(line: 1063, column: 13, scope: !5929)
!5929 = !DILexicalBlockFile(scope: !5758, file: !78, discriminator: 3)
!5930 = !DILocation(line: 1063, column: 5, scope: !5929)
!5931 = !DILocation(line: 1065, column: 21, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1063, column: 34)
!5933 = !DILocation(line: 1065, column: 25, scope: !5932)
!5934 = !DILocation(line: 1065, column: 8, scope: !5932)
!5935 = !DILocation(line: 1065, column: 19, scope: !5932)
!5936 = !DILocation(line: 1066, column: 7, scope: !5932)
!5937 = !DILocation(line: 1068, column: 21, scope: !5932)
!5938 = !DILocation(line: 1068, column: 25, scope: !5932)
!5939 = !DILocation(line: 1068, column: 8, scope: !5932)
!5940 = !DILocation(line: 1068, column: 19, scope: !5932)
!5941 = !DILocation(line: 1069, column: 7, scope: !5932)
!5942 = !DILocation(line: 1071, column: 21, scope: !5932)
!5943 = !DILocation(line: 1071, column: 25, scope: !5932)
!5944 = !DILocation(line: 1071, column: 8, scope: !5932)
!5945 = !DILocation(line: 1071, column: 19, scope: !5932)
!5946 = !DILocation(line: 1072, column: 7, scope: !5932)
!5947 = !DILocation(line: 1076, column: 21, scope: !5932)
!5948 = !DILocation(line: 1076, column: 8, scope: !5932)
!5949 = !DILocation(line: 1076, column: 19, scope: !5932)
!5950 = !DILocation(line: 1077, column: 7, scope: !5932)
!5951 = !DILocation(line: 1079, column: 19, scope: !5758)
!5952 = !DILocation(line: 1079, column: 6, scope: !5758)
!5953 = !DILocation(line: 1079, column: 17, scope: !5758)
!5954 = !DILocation(line: 1080, column: 5, scope: !5758)
!5955 = !DILocation(line: 1082, column: 19, scope: !5758)
!5956 = !DILocation(line: 1082, column: 23, scope: !5758)
!5957 = !DILocation(line: 1082, column: 6, scope: !5758)
!5958 = !DILocation(line: 1082, column: 17, scope: !5758)
!5959 = !DILocation(line: 1083, column: 5, scope: !5758)
!5960 = !DILocation(line: 1085, column: 19, scope: !5758)
!5961 = !DILocation(line: 1085, column: 23, scope: !5758)
!5962 = !DILocation(line: 1085, column: 6, scope: !5758)
!5963 = !DILocation(line: 1085, column: 17, scope: !5758)
!5964 = !DILocation(line: 1086, column: 5, scope: !5758)
!5965 = !DILocation(line: 1088, column: 34, scope: !5758)
!5966 = !DILocation(line: 1088, column: 39, scope: !5758)
!5967 = !DILocation(line: 1088, column: 43, scope: !5758)
!5968 = !DILocation(line: 1088, column: 58, scope: !5758)
!5969 = !DILocation(line: 1088, column: 63, scope: !5758)
!5970 = !DILocation(line: 1088, column: 12, scope: !5758)
!5971 = !DILocation(line: 1088, column: 5, scope: !5758)
!5972 = !DILocation(line: 1105, column: 5, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1105, column: 5)
!5974 = !DILocation(line: 1105, column: 5, scope: !5758)
!5975 = !DILocation(line: 1105, column: 5, scope: !5976)
!5976 = !DILexicalBlockFile(scope: !5973, file: !78, discriminator: 21)
!5977 = !DILocation(line: 1105, column: 5, scope: !5978)
!5978 = !DILexicalBlockFile(scope: !5758, file: !78, discriminator: 22)
!5979 = !DILocation(line: 1105, column: 18, scope: !5980)
!5980 = !DILexicalBlockFile(scope: !5981, file: !78, discriminator: 23)
!5981 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1105, column: 18)
!5982 = !DILocation(line: 1105, column: 18, scope: !5983)
!5983 = !DILexicalBlockFile(scope: !5981, file: !78, discriminator: 24)
!5984 = !DILocation(line: 1105, column: 18, scope: !5985)
!5985 = !DILexicalBlockFile(scope: !5758, file: !78, discriminator: 25)
!5986 = !DILocation(line: 1105, column: 31, scope: !5987)
!5987 = !DILexicalBlockFile(scope: !5988, file: !78, discriminator: 26)
!5988 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1105, column: 31)
!5989 = !DILocation(line: 1105, column: 31, scope: !5990)
!5990 = !DILexicalBlockFile(scope: !5988, file: !78, discriminator: 27)
!5991 = !DILocation(line: 1105, column: 31, scope: !5992)
!5992 = !DILexicalBlockFile(scope: !5758, file: !78, discriminator: 28)
!5993 = !DILocation(line: 1109, column: 9, scope: !5758)
!5994 = !DILocation(line: 1110, column: 9, scope: !5758)
!5995 = !DILocation(line: 1111, column: 5, scope: !5758)
!5996 = !DILocation(line: 1118, column: 9, scope: !5758)
!5997 = !DILocation(line: 1119, column: 9, scope: !5758)
!5998 = !DILocation(line: 1120, column: 5, scope: !5758)
!5999 = !DILocation(line: 1122, column: 9, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1122, column: 9)
!6001 = !DILocation(line: 1122, column: 9, scope: !5758)
!6002 = !DILocation(line: 1123, column: 11, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6000, file: !78, line: 1122, column: 42)
!6004 = !DILocation(line: 1124, column: 11, scope: !6003)
!6005 = !DILocation(line: 1125, column: 7, scope: !6003)
!6006 = !DILocation(line: 1127, column: 9, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5758, file: !78, line: 1127, column: 9)
!6008 = !DILocation(line: 1127, column: 9, scope: !5758)
!6009 = !DILocation(line: 1128, column: 11, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6007, file: !78, line: 1127, column: 40)
!6011 = !DILocation(line: 1129, column: 11, scope: !6010)
!6012 = !DILocation(line: 1130, column: 7, scope: !6010)
!6013 = !DILocation(line: 1127, column: 9, scope: !6014)
!6014 = !DILexicalBlockFile(scope: !6007, file: !78, discriminator: 1)
!6015 = !DILocation(line: 1134, column: 19, scope: !5758)
!6016 = !DILocation(line: 1134, column: 6, scope: !5758)
!6017 = !DILocation(line: 1134, column: 17, scope: !5758)
!6018 = !DILocation(line: 1135, column: 5, scope: !5758)
!6019 = !DILocation(line: 1137, column: 3, scope: !297)
!6020 = !DILocation(line: 1137, column: 10, scope: !5755)
!6021 = !DILocation(line: 1137, column: 3, scope: !5755)
!6022 = !DILocation(line: 1138, column: 13, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !297, file: !78, line: 1137, column: 35)
!6024 = !DILocation(line: 1138, column: 13, scope: !6025)
!6025 = !DILexicalBlockFile(scope: !6023, file: !78, discriminator: 1)
!6026 = !DILocation(line: 1138, column: 13, scope: !6027)
!6027 = !DILexicalBlockFile(scope: !6023, file: !78, discriminator: 2)
!6028 = !DILocation(line: 1138, column: 13, scope: !6029)
!6029 = !DILexicalBlockFile(scope: !6023, file: !78, discriminator: 3)
!6030 = !DILocation(line: 1138, column: 5, scope: !6029)
!6031 = !DILocation(line: 1139, column: 5, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1139, column: 5)
!6033 = distinct !DILexicalBlock(scope: !6023, file: !78, line: 1138, column: 34)
!6034 = !DILocation(line: 1139, column: 5, scope: !6033)
!6035 = !DILocation(line: 1139, column: 5, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !6037, file: !78, discriminator: 17)
!6037 = distinct !DILexicalBlock(scope: !6032, file: !78, line: 1139, column: 5)
!6038 = !DILocation(line: 1139, column: 5, scope: !6039)
!6039 = !DILexicalBlockFile(scope: !6032, file: !78, discriminator: 18)
!6040 = !DILocation(line: 1139, column: 5, scope: !6041)
!6041 = !DILexicalBlockFile(scope: !6033, file: !78, discriminator: 19)
!6042 = !DILocation(line: 1139, column: 5, scope: !6043)
!6043 = !DILexicalBlockFile(scope: !6044, file: !78, discriminator: 20)
!6044 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1139, column: 5)
!6045 = !DILocation(line: 1139, column: 5, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !6044, file: !78, discriminator: 21)
!6047 = !DILocation(line: 1139, column: 5, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !6049, file: !78, discriminator: 22)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !78, line: 1139, column: 5)
!6050 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1139, column: 5)
!6051 = !DILocation(line: 1139, column: 5, scope: !6052)
!6052 = !DILexicalBlockFile(scope: !6053, file: !78, discriminator: 23)
!6053 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1139, column: 5)
!6054 = !DILocation(line: 1139, column: 5, scope: !6055)
!6055 = !DILexicalBlockFile(scope: !6053, file: !78, discriminator: 24)
!6056 = !DILocation(line: 1139, column: 5, scope: !6057)
!6057 = !DILexicalBlockFile(scope: !6058, file: !78, discriminator: 25)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !78, line: 1139, column: 5)
!6059 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1139, column: 5)
!6060 = !DILocation(line: 1139, column: 5, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !6062, file: !78, discriminator: 26)
!6062 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1139, column: 5)
!6063 = !DILocation(line: 1139, column: 5, scope: !6064)
!6064 = !DILexicalBlockFile(scope: !6062, file: !78, discriminator: 27)
!6065 = !DILocation(line: 1139, column: 5, scope: !6066)
!6066 = !DILexicalBlockFile(scope: !6067, file: !78, discriminator: 28)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !78, line: 1139, column: 5)
!6068 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1139, column: 5)
!6069 = !DILocation(line: 1143, column: 21, scope: !6033)
!6070 = !DILocation(line: 1143, column: 8, scope: !6033)
!6071 = !DILocation(line: 1143, column: 19, scope: !6033)
!6072 = !DILocation(line: 1144, column: 14, scope: !6033)
!6073 = !DILocation(line: 1144, column: 7, scope: !6033)
!6074 = !DILocation(line: 1166, column: 11, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1166, column: 11)
!6076 = !DILocation(line: 1166, column: 15, scope: !6075)
!6077 = !DILocation(line: 1166, column: 11, scope: !6033)
!6078 = !DILocation(line: 1167, column: 23, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6075, file: !78, line: 1166, column: 36)
!6080 = !DILocation(line: 1167, column: 10, scope: !6079)
!6081 = !DILocation(line: 1167, column: 21, scope: !6079)
!6082 = !DILocation(line: 1168, column: 9, scope: !6079)
!6083 = !DILocation(line: 1170, column: 21, scope: !6033)
!6084 = !DILocation(line: 1170, column: 25, scope: !6033)
!6085 = !DILocation(line: 1170, column: 8, scope: !6033)
!6086 = !DILocation(line: 1170, column: 19, scope: !6033)
!6087 = !DILocation(line: 1171, column: 7, scope: !6033)
!6088 = !DILocation(line: 1173, column: 11, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1173, column: 11)
!6090 = !DILocation(line: 1173, column: 15, scope: !6089)
!6091 = !DILocation(line: 1173, column: 11, scope: !6033)
!6092 = !DILocation(line: 1174, column: 23, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !78, line: 1173, column: 36)
!6094 = !DILocation(line: 1174, column: 10, scope: !6093)
!6095 = !DILocation(line: 1174, column: 21, scope: !6093)
!6096 = !DILocation(line: 1175, column: 9, scope: !6093)
!6097 = !DILocation(line: 1177, column: 21, scope: !6033)
!6098 = !DILocation(line: 1177, column: 25, scope: !6033)
!6099 = !DILocation(line: 1177, column: 8, scope: !6033)
!6100 = !DILocation(line: 1177, column: 19, scope: !6033)
!6101 = !DILocation(line: 1178, column: 7, scope: !6033)
!6102 = !DILocation(line: 1180, column: 11, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6033, file: !78, line: 1180, column: 11)
!6104 = !DILocation(line: 1180, column: 15, scope: !6103)
!6105 = !DILocation(line: 1180, column: 11, scope: !6033)
!6106 = !DILocation(line: 1181, column: 23, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6103, file: !78, line: 1180, column: 36)
!6108 = !DILocation(line: 1181, column: 10, scope: !6107)
!6109 = !DILocation(line: 1181, column: 21, scope: !6107)
!6110 = !DILocation(line: 1182, column: 9, scope: !6107)
!6111 = !DILocation(line: 1184, column: 21, scope: !6033)
!6112 = !DILocation(line: 1184, column: 25, scope: !6033)
!6113 = !DILocation(line: 1184, column: 8, scope: !6033)
!6114 = !DILocation(line: 1184, column: 19, scope: !6033)
!6115 = !DILocation(line: 1185, column: 7, scope: !6033)
!6116 = !DILocation(line: 1187, column: 21, scope: !6033)
!6117 = !DILocation(line: 1187, column: 8, scope: !6033)
!6118 = !DILocation(line: 1187, column: 19, scope: !6033)
!6119 = !DILocation(line: 1188, column: 7, scope: !6033)
!6120 = !DILocation(line: 1137, column: 3, scope: !6121)
!6121 = !DILexicalBlockFile(scope: !297, file: !78, discriminator: 4)
!6122 = !DILocation(line: 1191, column: 11, scope: !297)
!6123 = !DILocation(line: 1191, column: 10, scope: !297)
!6124 = !DILocation(line: 1191, column: 3, scope: !297)
!6125 = !DILocation(line: 1192, column: 1, scope: !297)
!6126 = !DILocalVariable(name: "enc", arg: 1, scope: !308, file: !78, line: 782, type: !82)
!6127 = !DILocation(line: 782, column: 36, scope: !308)
!6128 = !DILocalVariable(name: "ptr", arg: 2, scope: !308, file: !78, line: 782, type: !93)
!6129 = !DILocation(line: 782, column: 53, scope: !308)
!6130 = !DILocalVariable(name: "end", arg: 3, scope: !308, file: !78, line: 782, type: !93)
!6131 = !DILocation(line: 782, column: 70, scope: !308)
!6132 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !308, file: !78, line: 783, type: !95)
!6133 = !DILocation(line: 783, column: 33, scope: !308)
!6134 = !DILocation(line: 785, column: 7, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !308, file: !78, line: 785, column: 7)
!6136 = !DILocation(line: 785, column: 14, scope: !6135)
!6137 = !DILocation(line: 785, column: 11, scope: !6135)
!6138 = !DILocation(line: 785, column: 7, scope: !308)
!6139 = !DILocation(line: 786, column: 5, scope: !6135)
!6140 = !DILocalVariable(name: "n", scope: !6141, file: !78, line: 788, type: !453)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !78, line: 787, column: 24)
!6142 = distinct !DILexicalBlock(scope: !308, file: !78, line: 787, column: 7)
!6143 = !DILocation(line: 788, column: 12, scope: !6141)
!6144 = !DILocation(line: 788, column: 16, scope: !6141)
!6145 = !DILocation(line: 788, column: 22, scope: !6141)
!6146 = !DILocation(line: 788, column: 20, scope: !6141)
!6147 = !DILocation(line: 789, column: 9, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6141, file: !78, line: 789, column: 9)
!6149 = !DILocation(line: 789, column: 11, scope: !6148)
!6150 = !DILocation(line: 789, column: 9, scope: !6141)
!6151 = !DILocation(line: 790, column: 9, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6148, file: !78, line: 789, column: 32)
!6153 = !DILocation(line: 791, column: 11, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6152, file: !78, line: 791, column: 11)
!6155 = !DILocation(line: 791, column: 13, scope: !6154)
!6156 = !DILocation(line: 791, column: 11, scope: !6152)
!6157 = !DILocation(line: 792, column: 9, scope: !6154)
!6158 = !DILocation(line: 793, column: 13, scope: !6152)
!6159 = !DILocation(line: 793, column: 19, scope: !6152)
!6160 = !DILocation(line: 793, column: 17, scope: !6152)
!6161 = !DILocation(line: 793, column: 11, scope: !6152)
!6162 = !DILocation(line: 794, column: 5, scope: !6152)
!6163 = !DILocation(line: 796, column: 11, scope: !308)
!6164 = !DILocation(line: 796, column: 11, scope: !6165)
!6165 = !DILexicalBlockFile(scope: !308, file: !78, discriminator: 1)
!6166 = !DILocation(line: 796, column: 11, scope: !6167)
!6167 = !DILexicalBlockFile(scope: !308, file: !78, discriminator: 2)
!6168 = !DILocation(line: 796, column: 11, scope: !6169)
!6169 = !DILexicalBlockFile(scope: !308, file: !78, discriminator: 3)
!6170 = !DILocation(line: 796, column: 3, scope: !6169)
!6171 = !DILocation(line: 798, column: 27, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !308, file: !78, line: 796, column: 32)
!6173 = !DILocation(line: 798, column: 32, scope: !6172)
!6174 = !DILocation(line: 798, column: 36, scope: !6172)
!6175 = !DILocation(line: 798, column: 51, scope: !6172)
!6176 = !DILocation(line: 798, column: 56, scope: !6172)
!6177 = !DILocation(line: 798, column: 12, scope: !6172)
!6178 = !DILocation(line: 798, column: 5, scope: !6172)
!6179 = !DILocation(line: 800, column: 28, scope: !6172)
!6180 = !DILocation(line: 800, column: 33, scope: !6172)
!6181 = !DILocation(line: 800, column: 37, scope: !6172)
!6182 = !DILocation(line: 800, column: 52, scope: !6172)
!6183 = !DILocation(line: 800, column: 57, scope: !6172)
!6184 = !DILocation(line: 800, column: 12, scope: !6172)
!6185 = !DILocation(line: 800, column: 5, scope: !6172)
!6186 = !DILocation(line: 802, column: 9, scope: !6172)
!6187 = !DILocation(line: 803, column: 11, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 803, column: 9)
!6189 = !DILocation(line: 803, column: 9, scope: !6172)
!6190 = !DILocation(line: 804, column: 7, scope: !6188)
!6191 = !DILocation(line: 805, column: 9, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 805, column: 9)
!6193 = !DILocation(line: 805, column: 9, scope: !6194)
!6194 = !DILexicalBlockFile(scope: !6192, file: !78, discriminator: 1)
!6195 = !DILocation(line: 805, column: 9, scope: !6196)
!6196 = !DILexicalBlockFile(scope: !6192, file: !78, discriminator: 2)
!6197 = !DILocation(line: 805, column: 9, scope: !6198)
!6198 = !DILexicalBlockFile(scope: !6192, file: !78, discriminator: 3)
!6199 = !DILocation(line: 805, column: 29, scope: !6198)
!6200 = !DILocation(line: 806, column: 11, scope: !6192)
!6201 = !DILocation(line: 806, column: 7, scope: !6192)
!6202 = !DILocation(line: 807, column: 19, scope: !6172)
!6203 = !DILocation(line: 807, column: 6, scope: !6172)
!6204 = !DILocation(line: 807, column: 17, scope: !6172)
!6205 = !DILocation(line: 808, column: 5, scope: !6172)
!6206 = !DILocation(line: 810, column: 19, scope: !6172)
!6207 = !DILocation(line: 810, column: 23, scope: !6172)
!6208 = !DILocation(line: 810, column: 6, scope: !6172)
!6209 = !DILocation(line: 810, column: 17, scope: !6172)
!6210 = !DILocation(line: 811, column: 5, scope: !6172)
!6211 = !DILocation(line: 813, column: 9, scope: !6172)
!6212 = !DILocation(line: 814, column: 11, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 814, column: 9)
!6214 = !DILocation(line: 814, column: 9, scope: !6172)
!6215 = !DILocation(line: 815, column: 7, scope: !6213)
!6216 = !DILocation(line: 816, column: 10, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 816, column: 9)
!6218 = !DILocation(line: 816, column: 10, scope: !6219)
!6219 = !DILexicalBlockFile(scope: !6217, file: !78, discriminator: 1)
!6220 = !DILocation(line: 816, column: 9, scope: !6219)
!6221 = !DILocation(line: 817, column: 7, scope: !6217)
!6222 = !DILocation(line: 818, column: 9, scope: !6172)
!6223 = !DILocation(line: 819, column: 11, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 819, column: 9)
!6225 = !DILocation(line: 819, column: 9, scope: !6172)
!6226 = !DILocation(line: 820, column: 7, scope: !6224)
!6227 = !DILocation(line: 821, column: 10, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 821, column: 9)
!6229 = !DILocation(line: 821, column: 10, scope: !6230)
!6230 = !DILexicalBlockFile(scope: !6228, file: !78, discriminator: 1)
!6231 = !DILocation(line: 821, column: 9, scope: !6230)
!6232 = !DILocation(line: 822, column: 11, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6228, file: !78, line: 821, column: 44)
!6234 = !DILocation(line: 823, column: 7, scope: !6233)
!6235 = !DILocation(line: 825, column: 19, scope: !6172)
!6236 = !DILocation(line: 825, column: 6, scope: !6172)
!6237 = !DILocation(line: 825, column: 17, scope: !6172)
!6238 = !DILocation(line: 826, column: 5, scope: !6172)
!6239 = !DILocation(line: 827, column: 3, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 827, column: 3)
!6241 = !DILocation(line: 827, column: 3, scope: !6172)
!6242 = !DILocation(line: 827, column: 3, scope: !6243)
!6243 = !DILexicalBlockFile(scope: !6240, file: !78, discriminator: 16)
!6244 = !DILocation(line: 827, column: 3, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6172, file: !78, discriminator: 17)
!6246 = !DILocation(line: 827, column: 3, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !6248, file: !78, discriminator: 18)
!6248 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 827, column: 3)
!6249 = !DILocation(line: 827, column: 3, scope: !6250)
!6250 = !DILexicalBlockFile(scope: !6248, file: !78, discriminator: 19)
!6251 = !DILocation(line: 827, column: 3, scope: !6252)
!6252 = !DILexicalBlockFile(scope: !6172, file: !78, discriminator: 20)
!6253 = !DILocation(line: 827, column: 3, scope: !6254)
!6254 = !DILexicalBlockFile(scope: !6255, file: !78, discriminator: 21)
!6255 = distinct !DILexicalBlock(scope: !6172, file: !78, line: 827, column: 3)
!6256 = !DILocation(line: 827, column: 3, scope: !6257)
!6257 = !DILexicalBlockFile(scope: !6255, file: !78, discriminator: 22)
!6258 = !DILocation(line: 827, column: 3, scope: !6259)
!6259 = !DILexicalBlockFile(scope: !6172, file: !78, discriminator: 23)
!6260 = !DILocation(line: 827, column: 3, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !6172, file: !78, discriminator: 24)
!6262 = !DILocation(line: 829, column: 9, scope: !6172)
!6263 = !DILocation(line: 830, column: 5, scope: !6172)
!6264 = !DILocation(line: 832, column: 3, scope: !308)
!6265 = !DILocation(line: 832, column: 10, scope: !6169)
!6266 = !DILocation(line: 832, column: 3, scope: !6169)
!6267 = !DILocation(line: 833, column: 13, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !308, file: !78, line: 832, column: 35)
!6269 = !DILocation(line: 833, column: 13, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6268, file: !78, discriminator: 1)
!6271 = !DILocation(line: 833, column: 13, scope: !6272)
!6272 = !DILexicalBlockFile(scope: !6268, file: !78, discriminator: 2)
!6273 = !DILocation(line: 833, column: 13, scope: !6274)
!6274 = !DILexicalBlockFile(scope: !6268, file: !78, discriminator: 3)
!6275 = !DILocation(line: 833, column: 5, scope: !6274)
!6276 = !DILocation(line: 842, column: 5, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !78, line: 842, column: 5)
!6278 = distinct !DILexicalBlock(scope: !6268, file: !78, line: 833, column: 34)
!6279 = !DILocation(line: 842, column: 5, scope: !6278)
!6280 = !DILocation(line: 842, column: 5, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !6282, file: !78, discriminator: 12)
!6282 = distinct !DILexicalBlock(scope: !6277, file: !78, line: 842, column: 5)
!6283 = !DILocation(line: 842, column: 5, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6278, file: !78, discriminator: 13)
!6285 = !DILocation(line: 842, column: 18, scope: !6286)
!6286 = !DILexicalBlockFile(scope: !6287, file: !78, discriminator: 14)
!6287 = distinct !DILexicalBlock(scope: !6278, file: !78, line: 842, column: 18)
!6288 = !DILocation(line: 842, column: 18, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6290, file: !78, discriminator: 15)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !78, line: 842, column: 18)
!6291 = !DILocation(line: 842, column: 18, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !6278, file: !78, discriminator: 16)
!6293 = !DILocation(line: 842, column: 31, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6295, file: !78, discriminator: 17)
!6295 = distinct !DILexicalBlock(scope: !6278, file: !78, line: 842, column: 31)
!6296 = !DILocation(line: 842, column: 31, scope: !6297)
!6297 = !DILexicalBlockFile(scope: !6298, file: !78, discriminator: 18)
!6298 = distinct !DILexicalBlock(scope: !6295, file: !78, line: 842, column: 31)
!6299 = !DILocation(line: 842, column: 31, scope: !6300)
!6300 = !DILexicalBlockFile(scope: !6278, file: !78, discriminator: 19)
!6301 = !DILocation(line: 845, column: 11, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6278, file: !78, line: 845, column: 11)
!6303 = !DILocation(line: 845, column: 11, scope: !6278)
!6304 = !DILocation(line: 846, column: 15, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !78, line: 846, column: 14)
!6306 = distinct !DILexicalBlock(scope: !6302, file: !78, line: 845, column: 40)
!6307 = !DILocation(line: 846, column: 15, scope: !6308)
!6308 = !DILexicalBlockFile(scope: !6305, file: !78, discriminator: 1)
!6309 = !DILocation(line: 846, column: 14, scope: !6308)
!6310 = !DILocation(line: 847, column: 16, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6305, file: !78, line: 846, column: 65)
!6312 = !DILocation(line: 848, column: 12, scope: !6311)
!6313 = !DILocation(line: 850, column: 14, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6306, file: !78, line: 850, column: 14)
!6315 = !DILocation(line: 850, column: 14, scope: !6306)
!6316 = !DILocation(line: 851, column: 17, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6318, file: !78, line: 851, column: 16)
!6318 = distinct !DILexicalBlock(scope: !6314, file: !78, line: 850, column: 43)
!6319 = !DILocation(line: 851, column: 17, scope: !6320)
!6320 = !DILexicalBlockFile(scope: !6317, file: !78, discriminator: 1)
!6321 = !DILocation(line: 851, column: 16, scope: !6320)
!6322 = !DILocation(line: 852, column: 18, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6317, file: !78, line: 851, column: 67)
!6324 = !DILocation(line: 853, column: 14, scope: !6323)
!6325 = !DILocation(line: 855, column: 26, scope: !6318)
!6326 = !DILocation(line: 855, column: 30, scope: !6318)
!6327 = !DILocation(line: 855, column: 13, scope: !6318)
!6328 = !DILocation(line: 855, column: 24, scope: !6318)
!6329 = !DILocation(line: 856, column: 12, scope: !6318)
!6330 = !DILocation(line: 858, column: 7, scope: !6306)
!6331 = !DILocation(line: 845, column: 11, scope: !6332)
!6332 = !DILexicalBlockFile(scope: !6302, file: !78, discriminator: 2)
!6333 = !DILocation(line: 867, column: 21, scope: !6278)
!6334 = !DILocation(line: 867, column: 8, scope: !6278)
!6335 = !DILocation(line: 867, column: 19, scope: !6278)
!6336 = !DILocation(line: 868, column: 7, scope: !6278)
!6337 = !DILocation(line: 870, column: 11, scope: !6278)
!6338 = !DILocation(line: 871, column: 7, scope: !6278)
!6339 = !DILocation(line: 832, column: 3, scope: !6340)
!6340 = !DILexicalBlockFile(scope: !308, file: !78, discriminator: 4)
!6341 = !DILocation(line: 874, column: 17, scope: !308)
!6342 = !DILocation(line: 874, column: 4, scope: !308)
!6343 = !DILocation(line: 874, column: 15, scope: !308)
!6344 = !DILocation(line: 875, column: 3, scope: !308)
!6345 = !DILocation(line: 876, column: 1, scope: !308)
!6346 = !DILocalVariable(name: "enc", arg: 1, scope: !316, file: !78, line: 317, type: !82)
!6347 = !DILocation(line: 317, column: 41, scope: !316)
!6348 = !DILocalVariable(name: "ptr", arg: 2, scope: !316, file: !78, line: 317, type: !93)
!6349 = !DILocation(line: 317, column: 58, scope: !316)
!6350 = !DILocalVariable(name: "end", arg: 3, scope: !316, file: !78, line: 318, type: !93)
!6351 = !DILocation(line: 318, column: 37, scope: !316)
!6352 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !316, file: !78, line: 318, type: !95)
!6353 = !DILocation(line: 318, column: 55, scope: !316)
!6354 = !DILocation(line: 320, column: 7, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !316, file: !78, line: 320, column: 7)
!6356 = !DILocation(line: 320, column: 14, scope: !6355)
!6357 = !DILocation(line: 320, column: 11, scope: !6355)
!6358 = !DILocation(line: 320, column: 7, scope: !316)
!6359 = !DILocation(line: 321, column: 5, scope: !6355)
!6360 = !DILocalVariable(name: "n", scope: !6361, file: !78, line: 323, type: !453)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !78, line: 322, column: 24)
!6362 = distinct !DILexicalBlock(scope: !316, file: !78, line: 322, column: 7)
!6363 = !DILocation(line: 323, column: 12, scope: !6361)
!6364 = !DILocation(line: 323, column: 16, scope: !6361)
!6365 = !DILocation(line: 323, column: 22, scope: !6361)
!6366 = !DILocation(line: 323, column: 20, scope: !6361)
!6367 = !DILocation(line: 324, column: 9, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6361, file: !78, line: 324, column: 9)
!6369 = !DILocation(line: 324, column: 11, scope: !6368)
!6370 = !DILocation(line: 324, column: 9, scope: !6361)
!6371 = !DILocation(line: 325, column: 9, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !78, line: 324, column: 32)
!6373 = !DILocation(line: 326, column: 11, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6372, file: !78, line: 326, column: 11)
!6375 = !DILocation(line: 326, column: 13, scope: !6374)
!6376 = !DILocation(line: 326, column: 11, scope: !6372)
!6377 = !DILocation(line: 327, column: 9, scope: !6374)
!6378 = !DILocation(line: 328, column: 13, scope: !6372)
!6379 = !DILocation(line: 328, column: 19, scope: !6372)
!6380 = !DILocation(line: 328, column: 17, scope: !6372)
!6381 = !DILocation(line: 328, column: 11, scope: !6372)
!6382 = !DILocation(line: 329, column: 5, scope: !6372)
!6383 = !DILocation(line: 331, column: 11, scope: !316)
!6384 = !DILocation(line: 331, column: 11, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !316, file: !78, discriminator: 1)
!6386 = !DILocation(line: 331, column: 11, scope: !6387)
!6387 = !DILexicalBlockFile(scope: !316, file: !78, discriminator: 2)
!6388 = !DILocation(line: 331, column: 11, scope: !6389)
!6389 = !DILexicalBlockFile(scope: !316, file: !78, discriminator: 3)
!6390 = !DILocation(line: 331, column: 3, scope: !6389)
!6391 = !DILocation(line: 333, column: 9, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !316, file: !78, line: 331, column: 32)
!6393 = !DILocation(line: 334, column: 5, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !78, line: 334, column: 5)
!6395 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 334, column: 5)
!6396 = !DILocation(line: 334, column: 5, scope: !6395)
!6397 = !DILocation(line: 334, column: 5, scope: !6398)
!6398 = !DILexicalBlockFile(scope: !6399, file: !78, discriminator: 2)
!6399 = distinct !DILexicalBlock(scope: !6394, file: !78, line: 334, column: 5)
!6400 = !DILocation(line: 335, column: 10, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 335, column: 9)
!6402 = !DILocation(line: 335, column: 10, scope: !6403)
!6403 = !DILexicalBlockFile(scope: !6401, file: !78, discriminator: 1)
!6404 = !DILocation(line: 335, column: 9, scope: !6403)
!6405 = !DILocation(line: 336, column: 7, scope: !6401)
!6406 = !DILocation(line: 337, column: 9, scope: !6392)
!6407 = !DILocation(line: 338, column: 5, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !78, line: 338, column: 5)
!6409 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 338, column: 5)
!6410 = !DILocation(line: 338, column: 5, scope: !6409)
!6411 = !DILocation(line: 338, column: 5, scope: !6412)
!6412 = !DILexicalBlockFile(scope: !6413, file: !78, discriminator: 2)
!6413 = distinct !DILexicalBlock(scope: !6408, file: !78, line: 338, column: 5)
!6414 = !DILocation(line: 339, column: 10, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 339, column: 9)
!6416 = !DILocation(line: 339, column: 10, scope: !6417)
!6417 = !DILexicalBlockFile(scope: !6415, file: !78, discriminator: 1)
!6418 = !DILocation(line: 339, column: 9, scope: !6417)
!6419 = !DILocation(line: 340, column: 11, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6415, file: !78, line: 339, column: 44)
!6421 = !DILocation(line: 341, column: 7, scope: !6420)
!6422 = !DILocation(line: 343, column: 19, scope: !6392)
!6423 = !DILocation(line: 343, column: 23, scope: !6392)
!6424 = !DILocation(line: 343, column: 6, scope: !6392)
!6425 = !DILocation(line: 343, column: 17, scope: !6392)
!6426 = !DILocation(line: 344, column: 5, scope: !6392)
!6427 = !DILocation(line: 346, column: 9, scope: !6392)
!6428 = !DILocation(line: 347, column: 5, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !78, line: 347, column: 5)
!6430 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 347, column: 5)
!6431 = !DILocation(line: 347, column: 5, scope: !6430)
!6432 = !DILocation(line: 347, column: 5, scope: !6433)
!6433 = !DILexicalBlockFile(scope: !6434, file: !78, discriminator: 2)
!6434 = distinct !DILexicalBlock(scope: !6429, file: !78, line: 347, column: 5)
!6435 = !DILocation(line: 348, column: 9, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 348, column: 9)
!6437 = !DILocation(line: 348, column: 9, scope: !6438)
!6438 = !DILexicalBlockFile(scope: !6436, file: !78, discriminator: 1)
!6439 = !DILocation(line: 348, column: 9, scope: !6440)
!6440 = !DILexicalBlockFile(scope: !6436, file: !78, discriminator: 2)
!6441 = !DILocation(line: 348, column: 9, scope: !6442)
!6442 = !DILexicalBlockFile(scope: !6436, file: !78, discriminator: 3)
!6443 = !DILocation(line: 348, column: 29, scope: !6442)
!6444 = !DILocation(line: 349, column: 11, scope: !6436)
!6445 = !DILocation(line: 349, column: 7, scope: !6436)
!6446 = !DILocation(line: 350, column: 19, scope: !6392)
!6447 = !DILocation(line: 350, column: 6, scope: !6392)
!6448 = !DILocation(line: 350, column: 17, scope: !6392)
!6449 = !DILocation(line: 351, column: 5, scope: !6392)
!6450 = !DILocation(line: 353, column: 19, scope: !6392)
!6451 = !DILocation(line: 353, column: 23, scope: !6392)
!6452 = !DILocation(line: 353, column: 6, scope: !6392)
!6453 = !DILocation(line: 353, column: 17, scope: !6392)
!6454 = !DILocation(line: 354, column: 5, scope: !6392)
!6455 = !DILocation(line: 355, column: 3, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 355, column: 3)
!6457 = !DILocation(line: 355, column: 3, scope: !6392)
!6458 = !DILocation(line: 355, column: 3, scope: !6459)
!6459 = !DILexicalBlockFile(scope: !6456, file: !78, discriminator: 16)
!6460 = !DILocation(line: 355, column: 3, scope: !6461)
!6461 = !DILexicalBlockFile(scope: !6392, file: !78, discriminator: 17)
!6462 = !DILocation(line: 355, column: 3, scope: !6463)
!6463 = !DILexicalBlockFile(scope: !6464, file: !78, discriminator: 18)
!6464 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 355, column: 3)
!6465 = !DILocation(line: 355, column: 3, scope: !6466)
!6466 = !DILexicalBlockFile(scope: !6464, file: !78, discriminator: 19)
!6467 = !DILocation(line: 355, column: 3, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !6392, file: !78, discriminator: 20)
!6469 = !DILocation(line: 355, column: 3, scope: !6470)
!6470 = !DILexicalBlockFile(scope: !6471, file: !78, discriminator: 21)
!6471 = distinct !DILexicalBlock(scope: !6392, file: !78, line: 355, column: 3)
!6472 = !DILocation(line: 355, column: 3, scope: !6473)
!6473 = !DILexicalBlockFile(scope: !6471, file: !78, discriminator: 22)
!6474 = !DILocation(line: 355, column: 3, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !6392, file: !78, discriminator: 23)
!6476 = !DILocation(line: 355, column: 3, scope: !6477)
!6477 = !DILexicalBlockFile(scope: !6392, file: !78, discriminator: 24)
!6478 = !DILocation(line: 357, column: 9, scope: !6392)
!6479 = !DILocation(line: 358, column: 5, scope: !6392)
!6480 = !DILocation(line: 360, column: 3, scope: !316)
!6481 = !DILocation(line: 360, column: 10, scope: !6389)
!6482 = !DILocation(line: 360, column: 3, scope: !6389)
!6483 = !DILocation(line: 361, column: 13, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !316, file: !78, line: 360, column: 35)
!6485 = !DILocation(line: 361, column: 13, scope: !6486)
!6486 = !DILexicalBlockFile(scope: !6484, file: !78, discriminator: 1)
!6487 = !DILocation(line: 361, column: 13, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6484, file: !78, discriminator: 2)
!6489 = !DILocation(line: 361, column: 13, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !6484, file: !78, discriminator: 3)
!6491 = !DILocation(line: 361, column: 5, scope: !6490)
!6492 = !DILocation(line: 370, column: 5, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !78, line: 370, column: 5)
!6494 = distinct !DILexicalBlock(scope: !6484, file: !78, line: 361, column: 34)
!6495 = !DILocation(line: 370, column: 5, scope: !6494)
!6496 = !DILocation(line: 370, column: 5, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !6498, file: !78, discriminator: 12)
!6498 = distinct !DILexicalBlock(scope: !6493, file: !78, line: 370, column: 5)
!6499 = !DILocation(line: 370, column: 5, scope: !6500)
!6500 = !DILexicalBlockFile(scope: !6494, file: !78, discriminator: 13)
!6501 = !DILocation(line: 370, column: 18, scope: !6502)
!6502 = !DILexicalBlockFile(scope: !6503, file: !78, discriminator: 14)
!6503 = distinct !DILexicalBlock(scope: !6494, file: !78, line: 370, column: 18)
!6504 = !DILocation(line: 370, column: 18, scope: !6505)
!6505 = !DILexicalBlockFile(scope: !6506, file: !78, discriminator: 15)
!6506 = distinct !DILexicalBlock(scope: !6503, file: !78, line: 370, column: 18)
!6507 = !DILocation(line: 370, column: 18, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !6494, file: !78, discriminator: 16)
!6509 = !DILocation(line: 370, column: 31, scope: !6510)
!6510 = !DILexicalBlockFile(scope: !6511, file: !78, discriminator: 17)
!6511 = distinct !DILexicalBlock(scope: !6494, file: !78, line: 370, column: 31)
!6512 = !DILocation(line: 370, column: 31, scope: !6513)
!6513 = !DILexicalBlockFile(scope: !6514, file: !78, discriminator: 18)
!6514 = distinct !DILexicalBlock(scope: !6511, file: !78, line: 370, column: 31)
!6515 = !DILocation(line: 370, column: 31, scope: !6516)
!6516 = !DILexicalBlockFile(scope: !6494, file: !78, discriminator: 19)
!6517 = !DILocation(line: 378, column: 21, scope: !6494)
!6518 = !DILocation(line: 378, column: 8, scope: !6494)
!6519 = !DILocation(line: 378, column: 19, scope: !6494)
!6520 = !DILocation(line: 379, column: 7, scope: !6494)
!6521 = !DILocation(line: 381, column: 11, scope: !6494)
!6522 = !DILocation(line: 382, column: 7, scope: !6494)
!6523 = !DILocation(line: 360, column: 3, scope: !6524)
!6524 = !DILexicalBlockFile(scope: !316, file: !78, discriminator: 4)
!6525 = !DILocation(line: 385, column: 17, scope: !316)
!6526 = !DILocation(line: 385, column: 4, scope: !316)
!6527 = !DILocation(line: 385, column: 15, scope: !316)
!6528 = !DILocation(line: 386, column: 3, scope: !316)
!6529 = !DILocation(line: 387, column: 1, scope: !316)
!6530 = !DILocalVariable(name: "enc", arg: 1, scope: !317, file: !78, line: 1195, type: !82)
!6531 = !DILocation(line: 1195, column: 43, scope: !317)
!6532 = !DILocalVariable(name: "ptr", arg: 2, scope: !317, file: !78, line: 1195, type: !93)
!6533 = !DILocation(line: 1195, column: 60, scope: !317)
!6534 = !DILocalVariable(name: "end", arg: 3, scope: !317, file: !78, line: 1196, type: !93)
!6535 = !DILocation(line: 1196, column: 39, scope: !317)
!6536 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !317, file: !78, line: 1196, type: !95)
!6537 = !DILocation(line: 1196, column: 57, scope: !317)
!6538 = !DILocalVariable(name: "start", scope: !317, file: !78, line: 1198, type: !93)
!6539 = !DILocation(line: 1198, column: 15, scope: !317)
!6540 = !DILocation(line: 1199, column: 7, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !317, file: !78, line: 1199, column: 7)
!6542 = !DILocation(line: 1199, column: 14, scope: !6541)
!6543 = !DILocation(line: 1199, column: 11, scope: !6541)
!6544 = !DILocation(line: 1199, column: 7, scope: !317)
!6545 = !DILocation(line: 1200, column: 5, scope: !6541)
!6546 = !DILocation(line: 1201, column: 11, scope: !317)
!6547 = !DILocation(line: 1201, column: 9, scope: !317)
!6548 = !DILocation(line: 1202, column: 3, scope: !317)
!6549 = !DILocation(line: 1202, column: 10, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !317, file: !78, discriminator: 3)
!6551 = !DILocation(line: 1202, column: 3, scope: !6550)
!6552 = !DILocation(line: 1203, column: 13, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !317, file: !78, line: 1202, column: 35)
!6554 = !DILocation(line: 1203, column: 13, scope: !6555)
!6555 = !DILexicalBlockFile(scope: !6553, file: !78, discriminator: 1)
!6556 = !DILocation(line: 1203, column: 13, scope: !6557)
!6557 = !DILexicalBlockFile(scope: !6553, file: !78, discriminator: 2)
!6558 = !DILocation(line: 1203, column: 13, scope: !6559)
!6559 = !DILexicalBlockFile(scope: !6553, file: !78, discriminator: 3)
!6560 = !DILocation(line: 1203, column: 5, scope: !6559)
!6561 = !DILocation(line: 1206, column: 5, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6553, file: !78, line: 1203, column: 34)
!6563 = !DILocation(line: 1206, column: 18, scope: !6564)
!6564 = !DILexicalBlockFile(scope: !6562, file: !78, discriminator: 3)
!6565 = !DILocation(line: 1206, column: 31, scope: !6566)
!6566 = !DILexicalBlockFile(scope: !6562, file: !78, discriminator: 4)
!6567 = !DILocation(line: 1209, column: 11, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6562, file: !78, line: 1209, column: 11)
!6569 = !DILocation(line: 1209, column: 18, scope: !6568)
!6570 = !DILocation(line: 1209, column: 15, scope: !6568)
!6571 = !DILocation(line: 1209, column: 11, scope: !6562)
!6572 = !DILocation(line: 1210, column: 32, scope: !6568)
!6573 = !DILocation(line: 1210, column: 37, scope: !6568)
!6574 = !DILocation(line: 1210, column: 41, scope: !6568)
!6575 = !DILocation(line: 1210, column: 56, scope: !6568)
!6576 = !DILocation(line: 1210, column: 61, scope: !6568)
!6577 = !DILocation(line: 1210, column: 16, scope: !6568)
!6578 = !DILocation(line: 1210, column: 9, scope: !6568)
!6579 = !DILocation(line: 1211, column: 21, scope: !6562)
!6580 = !DILocation(line: 1211, column: 8, scope: !6562)
!6581 = !DILocation(line: 1211, column: 19, scope: !6562)
!6582 = !DILocation(line: 1212, column: 7, scope: !6562)
!6583 = !DILocation(line: 1215, column: 21, scope: !6562)
!6584 = !DILocation(line: 1215, column: 8, scope: !6562)
!6585 = !DILocation(line: 1215, column: 19, scope: !6562)
!6586 = !DILocation(line: 1216, column: 7, scope: !6562)
!6587 = !DILocation(line: 1218, column: 11, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6562, file: !78, line: 1218, column: 11)
!6589 = !DILocation(line: 1218, column: 18, scope: !6588)
!6590 = !DILocation(line: 1218, column: 15, scope: !6588)
!6591 = !DILocation(line: 1218, column: 11, scope: !6562)
!6592 = !DILocation(line: 1219, column: 23, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !78, line: 1218, column: 25)
!6594 = !DILocation(line: 1219, column: 27, scope: !6593)
!6595 = !DILocation(line: 1219, column: 10, scope: !6593)
!6596 = !DILocation(line: 1219, column: 21, scope: !6593)
!6597 = !DILocation(line: 1220, column: 9, scope: !6593)
!6598 = !DILocation(line: 1222, column: 21, scope: !6562)
!6599 = !DILocation(line: 1222, column: 8, scope: !6562)
!6600 = !DILocation(line: 1222, column: 19, scope: !6562)
!6601 = !DILocation(line: 1223, column: 7, scope: !6562)
!6602 = !DILocation(line: 1225, column: 11, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6562, file: !78, line: 1225, column: 11)
!6604 = !DILocation(line: 1225, column: 18, scope: !6603)
!6605 = !DILocation(line: 1225, column: 15, scope: !6603)
!6606 = !DILocation(line: 1225, column: 11, scope: !6562)
!6607 = !DILocation(line: 1226, column: 13, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6603, file: !78, line: 1225, column: 25)
!6609 = !DILocation(line: 1227, column: 15, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6608, file: !78, line: 1227, column: 13)
!6611 = !DILocation(line: 1227, column: 13, scope: !6608)
!6612 = !DILocation(line: 1228, column: 11, scope: !6610)
!6613 = !DILocation(line: 1229, column: 13, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6608, file: !78, line: 1229, column: 13)
!6615 = !DILocation(line: 1229, column: 13, scope: !6616)
!6616 = !DILexicalBlockFile(scope: !6614, file: !78, discriminator: 1)
!6617 = !DILocation(line: 1229, column: 13, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6614, file: !78, discriminator: 2)
!6619 = !DILocation(line: 1229, column: 13, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6614, file: !78, discriminator: 3)
!6621 = !DILocation(line: 1229, column: 33, scope: !6620)
!6622 = !DILocation(line: 1230, column: 15, scope: !6614)
!6623 = !DILocation(line: 1230, column: 11, scope: !6614)
!6624 = !DILocation(line: 1231, column: 23, scope: !6608)
!6625 = !DILocation(line: 1231, column: 10, scope: !6608)
!6626 = !DILocation(line: 1231, column: 21, scope: !6608)
!6627 = !DILocation(line: 1232, column: 9, scope: !6608)
!6628 = !DILocation(line: 1234, column: 21, scope: !6562)
!6629 = !DILocation(line: 1234, column: 8, scope: !6562)
!6630 = !DILocation(line: 1234, column: 19, scope: !6562)
!6631 = !DILocation(line: 1235, column: 7, scope: !6562)
!6632 = !DILocation(line: 1237, column: 11, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6562, file: !78, line: 1237, column: 11)
!6634 = !DILocation(line: 1237, column: 18, scope: !6633)
!6635 = !DILocation(line: 1237, column: 15, scope: !6633)
!6636 = !DILocation(line: 1237, column: 11, scope: !6562)
!6637 = !DILocation(line: 1238, column: 23, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6633, file: !78, line: 1237, column: 25)
!6639 = !DILocation(line: 1238, column: 27, scope: !6638)
!6640 = !DILocation(line: 1238, column: 10, scope: !6638)
!6641 = !DILocation(line: 1238, column: 21, scope: !6638)
!6642 = !DILocation(line: 1239, column: 9, scope: !6638)
!6643 = !DILocation(line: 1241, column: 21, scope: !6562)
!6644 = !DILocation(line: 1241, column: 8, scope: !6562)
!6645 = !DILocation(line: 1241, column: 19, scope: !6562)
!6646 = !DILocation(line: 1242, column: 7, scope: !6562)
!6647 = !DILocation(line: 1244, column: 11, scope: !6562)
!6648 = !DILocation(line: 1245, column: 7, scope: !6562)
!6649 = !DILocation(line: 1202, column: 3, scope: !6650)
!6650 = !DILexicalBlockFile(scope: !317, file: !78, discriminator: 4)
!6651 = !DILocation(line: 1248, column: 17, scope: !317)
!6652 = !DILocation(line: 1248, column: 4, scope: !317)
!6653 = !DILocation(line: 1248, column: 15, scope: !317)
!6654 = !DILocation(line: 1249, column: 3, scope: !317)
!6655 = !DILocation(line: 1250, column: 1, scope: !317)
!6656 = !DILocalVariable(name: "enc", arg: 1, scope: !318, file: !78, line: 1253, type: !82)
!6657 = !DILocation(line: 1253, column: 40, scope: !318)
!6658 = !DILocalVariable(name: "ptr", arg: 2, scope: !318, file: !78, line: 1253, type: !93)
!6659 = !DILocation(line: 1253, column: 57, scope: !318)
!6660 = !DILocalVariable(name: "end", arg: 3, scope: !318, file: !78, line: 1254, type: !93)
!6661 = !DILocation(line: 1254, column: 36, scope: !318)
!6662 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !318, file: !78, line: 1254, type: !95)
!6663 = !DILocation(line: 1254, column: 54, scope: !318)
!6664 = !DILocalVariable(name: "start", scope: !318, file: !78, line: 1256, type: !93)
!6665 = !DILocation(line: 1256, column: 15, scope: !318)
!6666 = !DILocation(line: 1257, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !318, file: !78, line: 1257, column: 7)
!6668 = !DILocation(line: 1257, column: 14, scope: !6667)
!6669 = !DILocation(line: 1257, column: 11, scope: !6667)
!6670 = !DILocation(line: 1257, column: 7, scope: !318)
!6671 = !DILocation(line: 1258, column: 5, scope: !6667)
!6672 = !DILocation(line: 1259, column: 11, scope: !318)
!6673 = !DILocation(line: 1259, column: 9, scope: !318)
!6674 = !DILocation(line: 1260, column: 3, scope: !318)
!6675 = !DILocation(line: 1260, column: 10, scope: !6676)
!6676 = !DILexicalBlockFile(scope: !318, file: !78, discriminator: 3)
!6677 = !DILocation(line: 1260, column: 3, scope: !6676)
!6678 = !DILocation(line: 1261, column: 13, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !318, file: !78, line: 1260, column: 35)
!6680 = !DILocation(line: 1261, column: 13, scope: !6681)
!6681 = !DILexicalBlockFile(scope: !6679, file: !78, discriminator: 1)
!6682 = !DILocation(line: 1261, column: 13, scope: !6683)
!6683 = !DILexicalBlockFile(scope: !6679, file: !78, discriminator: 2)
!6684 = !DILocation(line: 1261, column: 13, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !6679, file: !78, discriminator: 3)
!6686 = !DILocation(line: 1261, column: 5, scope: !6685)
!6687 = !DILocation(line: 1264, column: 5, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6679, file: !78, line: 1261, column: 34)
!6689 = !DILocation(line: 1264, column: 18, scope: !6690)
!6690 = !DILexicalBlockFile(scope: !6688, file: !78, discriminator: 3)
!6691 = !DILocation(line: 1264, column: 31, scope: !6692)
!6692 = !DILexicalBlockFile(scope: !6688, file: !78, discriminator: 4)
!6693 = !DILocation(line: 1267, column: 11, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6688, file: !78, line: 1267, column: 11)
!6695 = !DILocation(line: 1267, column: 18, scope: !6694)
!6696 = !DILocation(line: 1267, column: 15, scope: !6694)
!6697 = !DILocation(line: 1267, column: 11, scope: !6688)
!6698 = !DILocation(line: 1268, column: 32, scope: !6694)
!6699 = !DILocation(line: 1268, column: 37, scope: !6694)
!6700 = !DILocation(line: 1268, column: 41, scope: !6694)
!6701 = !DILocation(line: 1268, column: 56, scope: !6694)
!6702 = !DILocation(line: 1268, column: 61, scope: !6694)
!6703 = !DILocation(line: 1268, column: 16, scope: !6694)
!6704 = !DILocation(line: 1268, column: 9, scope: !6694)
!6705 = !DILocation(line: 1269, column: 21, scope: !6688)
!6706 = !DILocation(line: 1269, column: 8, scope: !6688)
!6707 = !DILocation(line: 1269, column: 19, scope: !6688)
!6708 = !DILocation(line: 1270, column: 7, scope: !6688)
!6709 = !DILocation(line: 1272, column: 11, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6688, file: !78, line: 1272, column: 11)
!6711 = !DILocation(line: 1272, column: 18, scope: !6710)
!6712 = !DILocation(line: 1272, column: 15, scope: !6710)
!6713 = !DILocation(line: 1272, column: 11, scope: !6688)
!6714 = !DILocalVariable(name: "tok", scope: !6715, file: !78, line: 1273, type: !7)
!6715 = distinct !DILexicalBlock(scope: !6710, file: !78, line: 1272, column: 25)
!6716 = !DILocation(line: 1273, column: 13, scope: !6715)
!6717 = !DILocation(line: 1273, column: 40, scope: !6715)
!6718 = !DILocation(line: 1273, column: 45, scope: !6715)
!6719 = !DILocation(line: 1273, column: 49, scope: !6715)
!6720 = !DILocation(line: 1274, column: 40, scope: !6715)
!6721 = !DILocation(line: 1274, column: 45, scope: !6715)
!6722 = !DILocation(line: 1273, column: 20, scope: !6715)
!6723 = !DILocation(line: 1275, column: 17, scope: !6715)
!6724 = !DILocation(line: 1275, column: 21, scope: !6715)
!6725 = !DILocation(line: 1275, column: 16, scope: !6715)
!6726 = !DILocation(line: 1275, column: 16, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !6715, file: !78, discriminator: 4)
!6728 = !DILocation(line: 1275, column: 61, scope: !6729)
!6729 = !DILexicalBlockFile(scope: !6715, file: !78, discriminator: 5)
!6730 = !DILocation(line: 1275, column: 16, scope: !6729)
!6731 = !DILocation(line: 1275, column: 16, scope: !6732)
!6732 = !DILexicalBlockFile(scope: !6715, file: !78, discriminator: 6)
!6733 = !DILocation(line: 1275, column: 9, scope: !6732)
!6734 = !DILocation(line: 1277, column: 21, scope: !6688)
!6735 = !DILocation(line: 1277, column: 8, scope: !6688)
!6736 = !DILocation(line: 1277, column: 19, scope: !6688)
!6737 = !DILocation(line: 1278, column: 7, scope: !6688)
!6738 = !DILocation(line: 1280, column: 11, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6688, file: !78, line: 1280, column: 11)
!6740 = !DILocation(line: 1280, column: 18, scope: !6739)
!6741 = !DILocation(line: 1280, column: 15, scope: !6739)
!6742 = !DILocation(line: 1280, column: 11, scope: !6688)
!6743 = !DILocation(line: 1281, column: 23, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6739, file: !78, line: 1280, column: 25)
!6745 = !DILocation(line: 1281, column: 27, scope: !6744)
!6746 = !DILocation(line: 1281, column: 10, scope: !6744)
!6747 = !DILocation(line: 1281, column: 21, scope: !6744)
!6748 = !DILocation(line: 1282, column: 9, scope: !6744)
!6749 = !DILocation(line: 1284, column: 21, scope: !6688)
!6750 = !DILocation(line: 1284, column: 8, scope: !6688)
!6751 = !DILocation(line: 1284, column: 19, scope: !6688)
!6752 = !DILocation(line: 1285, column: 7, scope: !6688)
!6753 = !DILocation(line: 1287, column: 11, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6688, file: !78, line: 1287, column: 11)
!6755 = !DILocation(line: 1287, column: 18, scope: !6754)
!6756 = !DILocation(line: 1287, column: 15, scope: !6754)
!6757 = !DILocation(line: 1287, column: 11, scope: !6688)
!6758 = !DILocation(line: 1288, column: 13, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6754, file: !78, line: 1287, column: 25)
!6760 = !DILocation(line: 1289, column: 15, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6759, file: !78, line: 1289, column: 13)
!6762 = !DILocation(line: 1289, column: 13, scope: !6759)
!6763 = !DILocation(line: 1290, column: 11, scope: !6761)
!6764 = !DILocation(line: 1291, column: 13, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6759, file: !78, line: 1291, column: 13)
!6766 = !DILocation(line: 1291, column: 13, scope: !6767)
!6767 = !DILexicalBlockFile(scope: !6765, file: !78, discriminator: 1)
!6768 = !DILocation(line: 1291, column: 13, scope: !6769)
!6769 = !DILexicalBlockFile(scope: !6765, file: !78, discriminator: 2)
!6770 = !DILocation(line: 1291, column: 13, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !6765, file: !78, discriminator: 3)
!6772 = !DILocation(line: 1291, column: 33, scope: !6771)
!6773 = !DILocation(line: 1292, column: 15, scope: !6765)
!6774 = !DILocation(line: 1292, column: 11, scope: !6765)
!6775 = !DILocation(line: 1293, column: 23, scope: !6759)
!6776 = !DILocation(line: 1293, column: 10, scope: !6759)
!6777 = !DILocation(line: 1293, column: 21, scope: !6759)
!6778 = !DILocation(line: 1294, column: 9, scope: !6759)
!6779 = !DILocation(line: 1296, column: 21, scope: !6688)
!6780 = !DILocation(line: 1296, column: 8, scope: !6688)
!6781 = !DILocation(line: 1296, column: 19, scope: !6688)
!6782 = !DILocation(line: 1297, column: 7, scope: !6688)
!6783 = !DILocation(line: 1299, column: 11, scope: !6688)
!6784 = !DILocation(line: 1300, column: 7, scope: !6688)
!6785 = !DILocation(line: 1260, column: 3, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !318, file: !78, discriminator: 4)
!6787 = !DILocation(line: 1303, column: 17, scope: !318)
!6788 = !DILocation(line: 1303, column: 4, scope: !318)
!6789 = !DILocation(line: 1303, column: 15, scope: !318)
!6790 = !DILocation(line: 1304, column: 3, scope: !318)
!6791 = !DILocation(line: 1305, column: 1, scope: !318)
!6792 = !DILocalVariable(name: "enc", arg: 1, scope: !319, file: !78, line: 1614, type: !82)
!6793 = !DILocation(line: 1614, column: 34, scope: !319)
!6794 = !DILocalVariable(name: "ptr1", arg: 2, scope: !319, file: !78, line: 1614, type: !93)
!6795 = !DILocation(line: 1614, column: 51, scope: !319)
!6796 = !DILocalVariable(name: "ptr2", arg: 3, scope: !319, file: !78, line: 1614, type: !93)
!6797 = !DILocation(line: 1614, column: 69, scope: !319)
!6798 = !DILocation(line: 1616, column: 3, scope: !319)
!6799 = !DILocation(line: 1617, column: 13, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !78, line: 1616, column: 12)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !78, line: 1616, column: 3)
!6802 = distinct !DILexicalBlock(scope: !319, file: !78, line: 1616, column: 3)
!6803 = !DILocation(line: 1617, column: 13, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !6800, file: !78, discriminator: 1)
!6805 = !DILocation(line: 1617, column: 13, scope: !6806)
!6806 = !DILexicalBlockFile(scope: !6800, file: !78, discriminator: 2)
!6807 = !DILocation(line: 1617, column: 13, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !6800, file: !78, discriminator: 3)
!6809 = !DILocation(line: 1617, column: 5, scope: !6808)
!6810 = !DILocation(line: 1622, column: 5, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !78, line: 1622, column: 5)
!6812 = distinct !DILexicalBlock(scope: !6800, file: !78, line: 1617, column: 35)
!6813 = !DILocation(line: 1622, column: 5, scope: !6812)
!6814 = !DILocation(line: 1622, column: 5, scope: !6815)
!6815 = !DILexicalBlockFile(scope: !6811, file: !78, discriminator: 8)
!6816 = !DILocation(line: 1622, column: 5, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !6811, file: !78, discriminator: 9)
!6818 = !DILocation(line: 1622, column: 18, scope: !6819)
!6819 = !DILexicalBlockFile(scope: !6820, file: !78, discriminator: 10)
!6820 = distinct !DILexicalBlock(scope: !6812, file: !78, line: 1622, column: 18)
!6821 = !DILocation(line: 1622, column: 18, scope: !6822)
!6822 = !DILexicalBlockFile(scope: !6820, file: !78, discriminator: 11)
!6823 = !DILocation(line: 1622, column: 18, scope: !6824)
!6824 = !DILexicalBlockFile(scope: !6820, file: !78, discriminator: 12)
!6825 = !DILocation(line: 1622, column: 31, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !6827, file: !78, discriminator: 13)
!6827 = distinct !DILexicalBlock(scope: !6812, file: !78, line: 1622, column: 31)
!6828 = !DILocation(line: 1622, column: 31, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6827, file: !78, discriminator: 14)
!6830 = !DILocation(line: 1625, column: 16, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6812, file: !78, line: 1625, column: 11)
!6832 = !DILocation(line: 1625, column: 11, scope: !6831)
!6833 = !DILocation(line: 1625, column: 27, scope: !6831)
!6834 = !DILocation(line: 1625, column: 22, scope: !6831)
!6835 = !DILocation(line: 1625, column: 19, scope: !6831)
!6836 = !DILocation(line: 1625, column: 11, scope: !6812)
!6837 = !DILocation(line: 1626, column: 9, scope: !6831)
!6838 = !DILocation(line: 1627, column: 7, scope: !6812)
!6839 = !DILocation(line: 1637, column: 16, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6812, file: !78, line: 1637, column: 11)
!6841 = !DILocation(line: 1637, column: 11, scope: !6840)
!6842 = !DILocation(line: 1637, column: 27, scope: !6840)
!6843 = !DILocation(line: 1637, column: 22, scope: !6840)
!6844 = !DILocation(line: 1637, column: 19, scope: !6840)
!6845 = !DILocation(line: 1637, column: 11, scope: !6812)
!6846 = !DILocation(line: 1638, column: 9, scope: !6840)
!6847 = !DILocation(line: 1640, column: 18, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !78, line: 1640, column: 13)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !78, line: 1639, column: 28)
!6850 = distinct !DILexicalBlock(scope: !6812, file: !78, line: 1639, column: 11)
!6851 = !DILocation(line: 1640, column: 13, scope: !6848)
!6852 = !DILocation(line: 1640, column: 29, scope: !6848)
!6853 = !DILocation(line: 1640, column: 24, scope: !6848)
!6854 = !DILocation(line: 1640, column: 21, scope: !6848)
!6855 = !DILocation(line: 1640, column: 13, scope: !6849)
!6856 = !DILocation(line: 1641, column: 11, scope: !6848)
!6857 = !DILocation(line: 1651, column: 7, scope: !6812)
!6858 = !DILocation(line: 1655, column: 15, scope: !6812)
!6859 = !DILocation(line: 1655, column: 15, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !6812, file: !78, discriminator: 1)
!6861 = !DILocation(line: 1655, column: 15, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !6812, file: !78, discriminator: 2)
!6863 = !DILocation(line: 1655, column: 15, scope: !6864)
!6864 = !DILexicalBlockFile(scope: !6812, file: !78, discriminator: 3)
!6865 = !DILocation(line: 1655, column: 7, scope: !6864)
!6866 = !DILocation(line: 1668, column: 9, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6812, file: !78, line: 1655, column: 37)
!6868 = !DILocation(line: 1670, column: 9, scope: !6867)
!6869 = !DILocation(line: 1616, column: 3, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !6801, file: !78, discriminator: 2)
!6871 = !DILocation(line: 1675, column: 1, scope: !319)
!6872 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !320, file: !78, line: 1678, type: !82)
!6873 = !DILocation(line: 1678, column: 42, scope: !320)
!6874 = !DILocalVariable(name: "ptr1", arg: 2, scope: !320, file: !78, line: 1678, type: !93)
!6875 = !DILocation(line: 1678, column: 69, scope: !320)
!6876 = !DILocalVariable(name: "end1", arg: 3, scope: !320, file: !78, line: 1679, type: !93)
!6877 = !DILocation(line: 1679, column: 38, scope: !320)
!6878 = !DILocalVariable(name: "ptr2", arg: 4, scope: !320, file: !78, line: 1679, type: !93)
!6879 = !DILocation(line: 1679, column: 56, scope: !320)
!6880 = !DILocation(line: 1681, column: 3, scope: !320)
!6881 = !DILocation(line: 1681, column: 11, scope: !6882)
!6882 = !DILexicalBlockFile(scope: !6883, file: !78, discriminator: 3)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !78, line: 1681, column: 3)
!6884 = distinct !DILexicalBlock(scope: !320, file: !78, line: 1681, column: 3)
!6885 = !DILocation(line: 1681, column: 10, scope: !6882)
!6886 = !DILocation(line: 1681, column: 3, scope: !6882)
!6887 = !DILocation(line: 1682, column: 9, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !78, line: 1682, column: 9)
!6889 = distinct !DILexicalBlock(scope: !6883, file: !78, line: 1681, column: 46)
!6890 = !DILocation(line: 1682, column: 16, scope: !6888)
!6891 = !DILocation(line: 1682, column: 14, scope: !6888)
!6892 = !DILocation(line: 1682, column: 21, scope: !6888)
!6893 = !DILocation(line: 1682, column: 9, scope: !6889)
!6894 = !DILocation(line: 1683, column: 7, scope: !6888)
!6895 = !DILocation(line: 1684, column: 10, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6889, file: !78, line: 1684, column: 9)
!6897 = !DILocation(line: 1684, column: 10, scope: !6898)
!6898 = !DILexicalBlockFile(scope: !6896, file: !78, discriminator: 1)
!6899 = !DILocation(line: 1684, column: 9, scope: !6898)
!6900 = !DILocation(line: 1685, column: 7, scope: !6896)
!6901 = !DILocation(line: 1686, column: 3, scope: !6889)
!6902 = !DILocation(line: 1681, column: 22, scope: !6903)
!6903 = !DILexicalBlockFile(scope: !6883, file: !78, discriminator: 4)
!6904 = !DILocation(line: 1681, column: 42, scope: !6903)
!6905 = !DILocation(line: 1681, column: 3, scope: !6903)
!6906 = !DILocation(line: 1687, column: 10, scope: !320)
!6907 = !DILocation(line: 1687, column: 18, scope: !320)
!6908 = !DILocation(line: 1687, column: 15, scope: !320)
!6909 = !DILocation(line: 1687, column: 3, scope: !320)
!6910 = !DILocation(line: 1688, column: 1, scope: !320)
!6911 = !DILocalVariable(name: "enc", arg: 1, scope: !321, file: !78, line: 1691, type: !82)
!6912 = !DILocation(line: 1691, column: 36, scope: !321)
!6913 = !DILocalVariable(name: "ptr", arg: 2, scope: !321, file: !78, line: 1691, type: !93)
!6914 = !DILocation(line: 1691, column: 53, scope: !321)
!6915 = !DILocalVariable(name: "start", scope: !321, file: !78, line: 1693, type: !93)
!6916 = !DILocation(line: 1693, column: 15, scope: !321)
!6917 = !DILocation(line: 1693, column: 23, scope: !321)
!6918 = !DILocation(line: 1694, column: 3, scope: !321)
!6919 = !DILocation(line: 1695, column: 13, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !78, line: 1694, column: 12)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !78, line: 1694, column: 3)
!6922 = distinct !DILexicalBlock(scope: !321, file: !78, line: 1694, column: 3)
!6923 = !DILocation(line: 1695, column: 13, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6920, file: !78, discriminator: 1)
!6925 = !DILocation(line: 1695, column: 13, scope: !6926)
!6926 = !DILexicalBlockFile(scope: !6920, file: !78, discriminator: 2)
!6927 = !DILocation(line: 1695, column: 13, scope: !6928)
!6928 = !DILexicalBlockFile(scope: !6920, file: !78, discriminator: 3)
!6929 = !DILocation(line: 1695, column: 5, scope: !6928)
!6930 = !DILocation(line: 1698, column: 5, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6920, file: !78, line: 1695, column: 34)
!6932 = !DILocation(line: 1698, column: 18, scope: !6933)
!6933 = !DILexicalBlockFile(scope: !6931, file: !78, discriminator: 3)
!6934 = !DILocation(line: 1698, column: 31, scope: !6935)
!6935 = !DILexicalBlockFile(scope: !6931, file: !78, discriminator: 4)
!6936 = !DILocation(line: 1709, column: 11, scope: !6931)
!6937 = !DILocation(line: 1710, column: 7, scope: !6931)
!6938 = !DILocation(line: 1712, column: 20, scope: !6931)
!6939 = !DILocation(line: 1712, column: 26, scope: !6931)
!6940 = !DILocation(line: 1712, column: 24, scope: !6931)
!6941 = !DILocation(line: 1712, column: 14, scope: !6931)
!6942 = !DILocation(line: 1712, column: 7, scope: !6931)
!6943 = !DILocation(line: 1694, column: 3, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6921, file: !78, discriminator: 2)
!6945 = !DILocalVariable(name: "enc", arg: 1, scope: !322, file: !78, line: 1718, type: !82)
!6946 = !DILocation(line: 1718, column: 31, scope: !322)
!6947 = !DILocalVariable(name: "ptr", arg: 2, scope: !322, file: !78, line: 1718, type: !93)
!6948 = !DILocation(line: 1718, column: 48, scope: !322)
!6949 = !DILocation(line: 1720, column: 3, scope: !322)
!6950 = !DILocation(line: 1721, column: 13, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !78, line: 1720, column: 12)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !78, line: 1720, column: 3)
!6953 = distinct !DILexicalBlock(scope: !322, file: !78, line: 1720, column: 3)
!6954 = !DILocation(line: 1721, column: 13, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !6951, file: !78, discriminator: 1)
!6956 = !DILocation(line: 1721, column: 13, scope: !6957)
!6957 = !DILexicalBlockFile(scope: !6951, file: !78, discriminator: 2)
!6958 = !DILocation(line: 1721, column: 13, scope: !6959)
!6959 = !DILexicalBlockFile(scope: !6951, file: !78, discriminator: 3)
!6960 = !DILocation(line: 1721, column: 5, scope: !6959)
!6961 = !DILocation(line: 1725, column: 11, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6951, file: !78, line: 1721, column: 34)
!6963 = !DILocation(line: 1726, column: 7, scope: !6962)
!6964 = !DILocation(line: 1728, column: 14, scope: !6962)
!6965 = !DILocation(line: 1728, column: 7, scope: !6962)
!6966 = !DILocation(line: 1720, column: 3, scope: !6967)
!6967 = !DILexicalBlockFile(scope: !6952, file: !78, discriminator: 2)
!6968 = !DILocalVariable(name: "enc", arg: 1, scope: !166, file: !78, line: 1423, type: !82)
!6969 = !DILocation(line: 1423, column: 33, scope: !166)
!6970 = !DILocalVariable(name: "ptr", arg: 2, scope: !166, file: !78, line: 1423, type: !93)
!6971 = !DILocation(line: 1423, column: 50, scope: !166)
!6972 = !DILocalVariable(name: "attsMax", arg: 3, scope: !166, file: !78, line: 1424, type: !7)
!6973 = !DILocation(line: 1424, column: 21, scope: !166)
!6974 = !DILocalVariable(name: "atts", arg: 4, scope: !166, file: !78, line: 1424, type: !153)
!6975 = !DILocation(line: 1424, column: 41, scope: !166)
!6976 = !DILocalVariable(name: "state", scope: !166, file: !78, line: 1426, type: !165)
!6977 = !DILocation(line: 1426, column: 35, scope: !166)
!6978 = !DILocalVariable(name: "nAtts", scope: !166, file: !78, line: 1427, type: !7)
!6979 = !DILocation(line: 1427, column: 7, scope: !166)
!6980 = !DILocalVariable(name: "open", scope: !166, file: !78, line: 1428, type: !7)
!6981 = !DILocation(line: 1428, column: 7, scope: !166)
!6982 = !DILocation(line: 1431, column: 12, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !166, file: !78, line: 1431, column: 3)
!6984 = !DILocation(line: 1431, column: 8, scope: !6983)
!6985 = !DILocation(line: 1432, column: 13, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !78, line: 1431, column: 49)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !78, line: 1431, column: 3)
!6988 = !DILocation(line: 1432, column: 13, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !6986, file: !78, discriminator: 1)
!6990 = !DILocation(line: 1432, column: 13, scope: !6991)
!6991 = !DILexicalBlockFile(scope: !6986, file: !78, discriminator: 2)
!6992 = !DILocation(line: 1432, column: 13, scope: !6993)
!6993 = !DILexicalBlockFile(scope: !6986, file: !78, discriminator: 3)
!6994 = !DILocation(line: 1432, column: 5, scope: !6993)
!6995 = !DILocation(line: 1443, column: 5, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1443, column: 5)
!6997 = distinct !DILexicalBlock(scope: !6986, file: !78, line: 1432, column: 34)
!6998 = !DILocation(line: 1443, column: 5, scope: !6997)
!6999 = !DILocation(line: 1443, column: 5, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !7001, file: !78, discriminator: 15)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !78, line: 1443, column: 5)
!7002 = distinct !DILexicalBlock(scope: !6996, file: !78, line: 1443, column: 5)
!7003 = !DILocation(line: 1443, column: 5, scope: !7004)
!7004 = !DILexicalBlockFile(scope: !7005, file: !78, discriminator: 16)
!7005 = distinct !DILexicalBlock(scope: !7001, file: !78, line: 1443, column: 5)
!7006 = !DILocation(line: 1443, column: 5, scope: !7007)
!7007 = !DILexicalBlockFile(scope: !7002, file: !78, discriminator: 17)
!7008 = !DILocation(line: 1443, column: 5, scope: !7009)
!7009 = !DILexicalBlockFile(scope: !6997, file: !78, discriminator: 18)
!7010 = !DILocation(line: 1443, column: 18, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !7012, file: !78, discriminator: 19)
!7012 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1443, column: 18)
!7013 = !DILocation(line: 1443, column: 18, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !7015, file: !78, discriminator: 20)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !78, line: 1443, column: 18)
!7016 = distinct !DILexicalBlock(scope: !7012, file: !78, line: 1443, column: 18)
!7017 = !DILocation(line: 1443, column: 18, scope: !7018)
!7018 = !DILexicalBlockFile(scope: !7019, file: !78, discriminator: 21)
!7019 = distinct !DILexicalBlock(scope: !7015, file: !78, line: 1443, column: 18)
!7020 = !DILocation(line: 1443, column: 18, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !7016, file: !78, discriminator: 22)
!7022 = !DILocation(line: 1443, column: 18, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !6997, file: !78, discriminator: 23)
!7024 = !DILocation(line: 1443, column: 31, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !7026, file: !78, discriminator: 24)
!7026 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1443, column: 31)
!7027 = !DILocation(line: 1443, column: 31, scope: !7028)
!7028 = !DILexicalBlockFile(scope: !7029, file: !78, discriminator: 25)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !78, line: 1443, column: 31)
!7030 = distinct !DILexicalBlock(scope: !7026, file: !78, line: 1443, column: 31)
!7031 = !DILocation(line: 1443, column: 31, scope: !7032)
!7032 = !DILexicalBlockFile(scope: !7033, file: !78, discriminator: 26)
!7033 = distinct !DILexicalBlock(scope: !7029, file: !78, line: 1443, column: 31)
!7034 = !DILocation(line: 1443, column: 31, scope: !7035)
!7035 = !DILexicalBlockFile(scope: !7030, file: !78, discriminator: 27)
!7036 = !DILocation(line: 1443, column: 31, scope: !7037)
!7037 = !DILexicalBlockFile(scope: !6997, file: !78, discriminator: 28)
!7038 = !DILocation(line: 1448, column: 7, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1448, column: 7)
!7040 = !DILocation(line: 1448, column: 7, scope: !6997)
!7041 = !DILocation(line: 1448, column: 7, scope: !7042)
!7042 = !DILexicalBlockFile(scope: !7043, file: !78, discriminator: 4)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !78, line: 1448, column: 7)
!7044 = distinct !DILexicalBlock(scope: !7039, file: !78, line: 1448, column: 7)
!7045 = !DILocation(line: 1448, column: 7, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !7047, file: !78, discriminator: 5)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !78, line: 1448, column: 7)
!7048 = !DILocation(line: 1448, column: 7, scope: !7049)
!7049 = !DILexicalBlockFile(scope: !7044, file: !78, discriminator: 6)
!7050 = !DILocation(line: 1449, column: 7, scope: !6997)
!7051 = !DILocation(line: 1452, column: 11, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1452, column: 11)
!7053 = !DILocation(line: 1452, column: 17, scope: !7052)
!7054 = !DILocation(line: 1452, column: 11, scope: !6997)
!7055 = !DILocation(line: 1453, column: 13, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !78, line: 1453, column: 13)
!7057 = distinct !DILexicalBlock(scope: !7052, file: !78, line: 1452, column: 29)
!7058 = !DILocation(line: 1453, column: 21, scope: !7056)
!7059 = !DILocation(line: 1453, column: 19, scope: !7056)
!7060 = !DILocation(line: 1453, column: 13, scope: !7057)
!7061 = !DILocation(line: 1454, column: 34, scope: !7056)
!7062 = !DILocation(line: 1454, column: 38, scope: !7056)
!7063 = !DILocation(line: 1454, column: 16, scope: !7056)
!7064 = !DILocation(line: 1454, column: 11, scope: !7056)
!7065 = !DILocation(line: 1454, column: 23, scope: !7056)
!7066 = !DILocation(line: 1454, column: 32, scope: !7056)
!7067 = !DILocation(line: 1455, column: 15, scope: !7057)
!7068 = !DILocation(line: 1456, column: 14, scope: !7057)
!7069 = !DILocation(line: 1457, column: 7, scope: !7057)
!7070 = !DILocation(line: 1458, column: 16, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7052, file: !78, line: 1458, column: 16)
!7072 = !DILocation(line: 1458, column: 21, scope: !7071)
!7073 = !DILocation(line: 1458, column: 16, scope: !7052)
!7074 = !DILocation(line: 1459, column: 15, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7071, file: !78, line: 1458, column: 33)
!7076 = !DILocation(line: 1460, column: 13, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7075, file: !78, line: 1460, column: 13)
!7078 = !DILocation(line: 1460, column: 21, scope: !7077)
!7079 = !DILocation(line: 1460, column: 19, scope: !7077)
!7080 = !DILocation(line: 1460, column: 13, scope: !7075)
!7081 = !DILocation(line: 1461, column: 34, scope: !7077)
!7082 = !DILocation(line: 1461, column: 16, scope: !7077)
!7083 = !DILocation(line: 1461, column: 11, scope: !7077)
!7084 = !DILocation(line: 1461, column: 23, scope: !7077)
!7085 = !DILocation(line: 1461, column: 32, scope: !7077)
!7086 = !DILocation(line: 1462, column: 14, scope: !7075)
!7087 = !DILocation(line: 1463, column: 7, scope: !7075)
!7088 = !DILocation(line: 1464, column: 7, scope: !6997)
!7089 = !DILocation(line: 1466, column: 11, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1466, column: 11)
!7091 = !DILocation(line: 1466, column: 17, scope: !7090)
!7092 = !DILocation(line: 1466, column: 11, scope: !6997)
!7093 = !DILocation(line: 1467, column: 13, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !78, line: 1467, column: 13)
!7095 = distinct !DILexicalBlock(scope: !7090, file: !78, line: 1466, column: 29)
!7096 = !DILocation(line: 1467, column: 21, scope: !7094)
!7097 = !DILocation(line: 1467, column: 19, scope: !7094)
!7098 = !DILocation(line: 1467, column: 13, scope: !7095)
!7099 = !DILocation(line: 1468, column: 34, scope: !7094)
!7100 = !DILocation(line: 1468, column: 38, scope: !7094)
!7101 = !DILocation(line: 1468, column: 16, scope: !7094)
!7102 = !DILocation(line: 1468, column: 11, scope: !7094)
!7103 = !DILocation(line: 1468, column: 23, scope: !7094)
!7104 = !DILocation(line: 1468, column: 32, scope: !7094)
!7105 = !DILocation(line: 1469, column: 15, scope: !7095)
!7106 = !DILocation(line: 1470, column: 14, scope: !7095)
!7107 = !DILocation(line: 1471, column: 7, scope: !7095)
!7108 = !DILocation(line: 1472, column: 16, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7090, file: !78, line: 1472, column: 16)
!7110 = !DILocation(line: 1472, column: 21, scope: !7109)
!7111 = !DILocation(line: 1472, column: 16, scope: !7090)
!7112 = !DILocation(line: 1473, column: 15, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7109, file: !78, line: 1472, column: 33)
!7114 = !DILocation(line: 1474, column: 13, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7113, file: !78, line: 1474, column: 13)
!7116 = !DILocation(line: 1474, column: 21, scope: !7115)
!7117 = !DILocation(line: 1474, column: 19, scope: !7115)
!7118 = !DILocation(line: 1474, column: 13, scope: !7113)
!7119 = !DILocation(line: 1475, column: 34, scope: !7115)
!7120 = !DILocation(line: 1475, column: 16, scope: !7115)
!7121 = !DILocation(line: 1475, column: 11, scope: !7115)
!7122 = !DILocation(line: 1475, column: 23, scope: !7115)
!7123 = !DILocation(line: 1475, column: 32, scope: !7115)
!7124 = !DILocation(line: 1476, column: 14, scope: !7113)
!7125 = !DILocation(line: 1477, column: 7, scope: !7113)
!7126 = !DILocation(line: 1478, column: 7, scope: !6997)
!7127 = !DILocation(line: 1480, column: 11, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1480, column: 11)
!7129 = !DILocation(line: 1480, column: 19, scope: !7128)
!7130 = !DILocation(line: 1480, column: 17, scope: !7128)
!7131 = !DILocation(line: 1480, column: 11, scope: !6997)
!7132 = !DILocation(line: 1481, column: 14, scope: !7128)
!7133 = !DILocation(line: 1481, column: 9, scope: !7128)
!7134 = !DILocation(line: 1481, column: 21, scope: !7128)
!7135 = !DILocation(line: 1481, column: 32, scope: !7128)
!7136 = !DILocation(line: 1482, column: 7, scope: !6997)
!7137 = !DILocation(line: 1484, column: 11, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1484, column: 11)
!7139 = !DILocation(line: 1484, column: 17, scope: !7138)
!7140 = !DILocation(line: 1484, column: 11, scope: !6997)
!7141 = !DILocation(line: 1485, column: 15, scope: !7138)
!7142 = !DILocation(line: 1485, column: 9, scope: !7138)
!7143 = !DILocation(line: 1486, column: 16, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7138, file: !78, line: 1486, column: 16)
!7145 = !DILocation(line: 1486, column: 22, scope: !7144)
!7146 = !DILocation(line: 1487, column: 16, scope: !7144)
!7147 = !DILocation(line: 1487, column: 19, scope: !7148)
!7148 = !DILexicalBlockFile(scope: !7144, file: !78, discriminator: 2)
!7149 = !DILocation(line: 1487, column: 27, scope: !7148)
!7150 = !DILocation(line: 1487, column: 25, scope: !7148)
!7151 = !DILocation(line: 1488, column: 16, scope: !7144)
!7152 = !DILocation(line: 1488, column: 24, scope: !7148)
!7153 = !DILocation(line: 1488, column: 19, scope: !7148)
!7154 = !DILocation(line: 1488, column: 31, scope: !7148)
!7155 = !DILocation(line: 1489, column: 16, scope: !7144)
!7156 = !DILocation(line: 1489, column: 20, scope: !7148)
!7157 = !DILocation(line: 1489, column: 32, scope: !7148)
!7158 = !DILocation(line: 1489, column: 27, scope: !7148)
!7159 = !DILocation(line: 1489, column: 39, scope: !7148)
!7160 = !DILocation(line: 1489, column: 24, scope: !7148)
!7161 = !DILocation(line: 1490, column: 20, scope: !7144)
!7162 = !DILocation(line: 1490, column: 23, scope: !7148)
!7163 = !DILocation(line: 1490, column: 23, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !7144, file: !78, discriminator: 3)
!7165 = !DILocation(line: 1490, column: 23, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !7144, file: !78, discriminator: 4)
!7167 = !DILocation(line: 1490, column: 23, scope: !7168)
!7168 = !DILexicalBlockFile(scope: !7144, file: !78, discriminator: 5)
!7169 = !DILocation(line: 1490, column: 47, scope: !7168)
!7170 = !DILocation(line: 1491, column: 20, scope: !7144)
!7171 = !DILocation(line: 1491, column: 23, scope: !7148)
!7172 = !DILocation(line: 1491, column: 23, scope: !7164)
!7173 = !DILocation(line: 1491, column: 23, scope: !7166)
!7174 = !DILocation(line: 1491, column: 23, scope: !7168)
!7175 = !DILocation(line: 1491, column: 61, scope: !7168)
!7176 = !DILocation(line: 1492, column: 20, scope: !7144)
!7177 = !DILocation(line: 1492, column: 23, scope: !7148)
!7178 = !DILocation(line: 1492, column: 23, scope: !7164)
!7179 = !DILocation(line: 1492, column: 23, scope: !7166)
!7180 = !DILocation(line: 1492, column: 23, scope: !7168)
!7181 = !DILocation(line: 1492, column: 60, scope: !7168)
!7182 = !DILocation(line: 1492, column: 57, scope: !7168)
!7183 = !DILocation(line: 1486, column: 16, scope: !7184)
!7184 = !DILexicalBlockFile(scope: !7138, file: !78, discriminator: 2)
!7185 = !DILocation(line: 1493, column: 14, scope: !7144)
!7186 = !DILocation(line: 1493, column: 9, scope: !7144)
!7187 = !DILocation(line: 1493, column: 21, scope: !7144)
!7188 = !DILocation(line: 1493, column: 32, scope: !7144)
!7189 = !DILocation(line: 1494, column: 7, scope: !6997)
!7190 = !DILocation(line: 1498, column: 11, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1498, column: 11)
!7192 = !DILocation(line: 1498, column: 17, scope: !7191)
!7193 = !DILocation(line: 1498, column: 11, scope: !6997)
!7194 = !DILocation(line: 1499, column: 15, scope: !7191)
!7195 = !DILocation(line: 1499, column: 9, scope: !7191)
!7196 = !DILocation(line: 1500, column: 16, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7191, file: !78, line: 1500, column: 16)
!7198 = !DILocation(line: 1500, column: 22, scope: !7197)
!7199 = !DILocation(line: 1500, column: 33, scope: !7197)
!7200 = !DILocation(line: 1500, column: 36, scope: !7201)
!7201 = !DILexicalBlockFile(scope: !7197, file: !78, discriminator: 2)
!7202 = !DILocation(line: 1500, column: 44, scope: !7201)
!7203 = !DILocation(line: 1500, column: 42, scope: !7201)
!7204 = !DILocation(line: 1500, column: 16, scope: !7201)
!7205 = !DILocation(line: 1501, column: 14, scope: !7197)
!7206 = !DILocation(line: 1501, column: 9, scope: !7197)
!7207 = !DILocation(line: 1501, column: 21, scope: !7197)
!7208 = !DILocation(line: 1501, column: 32, scope: !7197)
!7209 = !DILocation(line: 1502, column: 7, scope: !6997)
!7210 = !DILocation(line: 1505, column: 11, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !6997, file: !78, line: 1505, column: 11)
!7212 = !DILocation(line: 1505, column: 17, scope: !7211)
!7213 = !DILocation(line: 1505, column: 11, scope: !6997)
!7214 = !DILocation(line: 1506, column: 16, scope: !7211)
!7215 = !DILocation(line: 1506, column: 9, scope: !7211)
!7216 = !DILocation(line: 1507, column: 7, scope: !6997)
!7217 = !DILocation(line: 1509, column: 7, scope: !6997)
!7218 = !DILocation(line: 1511, column: 3, scope: !6986)
!7219 = !DILocation(line: 1431, column: 33, scope: !7220)
!7220 = !DILexicalBlockFile(scope: !6987, file: !78, discriminator: 2)
!7221 = !DILocation(line: 1431, column: 3, scope: !7220)
!7222 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !323, file: !78, line: 1516, type: !82)
!7223 = !DILocation(line: 1516, column: 39, scope: !323)
!7224 = !DILocalVariable(name: "ptr", arg: 2, scope: !323, file: !78, line: 1516, type: !93)
!7225 = !DILocation(line: 1516, column: 66, scope: !323)
!7226 = !DILocalVariable(name: "result", scope: !323, file: !78, line: 1518, type: !7)
!7227 = !DILocation(line: 1518, column: 7, scope: !323)
!7228 = !DILocation(line: 1520, column: 7, scope: !323)
!7229 = !DILocation(line: 1521, column: 7, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !323, file: !78, line: 1521, column: 7)
!7231 = !DILocation(line: 1521, column: 7, scope: !7232)
!7232 = !DILexicalBlockFile(scope: !7230, file: !78, discriminator: 1)
!7233 = !DILocation(line: 1522, column: 14, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !78, line: 1522, column: 5)
!7235 = distinct !DILexicalBlock(scope: !7230, file: !78, line: 1521, column: 40)
!7236 = !DILocation(line: 1522, column: 10, scope: !7234)
!7237 = !DILocation(line: 1523, column: 11, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7234, file: !78, line: 1522, column: 5)
!7239 = !DILocation(line: 1523, column: 11, scope: !7240)
!7240 = !DILexicalBlockFile(scope: !7238, file: !78, discriminator: 1)
!7241 = !DILocation(line: 1523, column: 10, scope: !7242)
!7242 = !DILexicalBlockFile(scope: !7238, file: !78, discriminator: 2)
!7243 = !DILocation(line: 1522, column: 5, scope: !7244)
!7244 = !DILexicalBlockFile(scope: !7234, file: !78, discriminator: 3)
!7245 = !DILocalVariable(name: "c", scope: !7246, file: !78, line: 1525, type: !7)
!7246 = distinct !DILexicalBlock(scope: !7238, file: !78, line: 1524, column: 30)
!7247 = !DILocation(line: 1525, column: 11, scope: !7246)
!7248 = !DILocation(line: 1525, column: 15, scope: !7246)
!7249 = !DILocation(line: 1525, column: 15, scope: !7250)
!7250 = !DILexicalBlockFile(scope: !7246, file: !78, discriminator: 1)
!7251 = !DILocation(line: 1525, column: 15, scope: !7252)
!7252 = !DILexicalBlockFile(scope: !7246, file: !78, discriminator: 2)
!7253 = !DILocation(line: 1525, column: 15, scope: !7254)
!7254 = !DILexicalBlockFile(scope: !7246, file: !78, discriminator: 3)
!7255 = !DILocation(line: 1525, column: 11, scope: !7254)
!7256 = !DILocation(line: 1526, column: 15, scope: !7246)
!7257 = !DILocation(line: 1526, column: 7, scope: !7246)
!7258 = !DILocation(line: 1529, column: 16, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7246, file: !78, line: 1526, column: 18)
!7260 = !DILocation(line: 1530, column: 20, scope: !7259)
!7261 = !DILocation(line: 1530, column: 22, scope: !7259)
!7262 = !DILocation(line: 1530, column: 16, scope: !7259)
!7263 = !DILocation(line: 1531, column: 9, scope: !7259)
!7264 = !DILocation(line: 1534, column: 16, scope: !7259)
!7265 = !DILocation(line: 1535, column: 25, scope: !7259)
!7266 = !DILocation(line: 1535, column: 27, scope: !7259)
!7267 = !DILocation(line: 1535, column: 22, scope: !7259)
!7268 = !DILocation(line: 1535, column: 16, scope: !7259)
!7269 = !DILocation(line: 1536, column: 9, scope: !7259)
!7270 = !DILocation(line: 1539, column: 16, scope: !7259)
!7271 = !DILocation(line: 1540, column: 25, scope: !7259)
!7272 = !DILocation(line: 1540, column: 27, scope: !7259)
!7273 = !DILocation(line: 1540, column: 22, scope: !7259)
!7274 = !DILocation(line: 1540, column: 16, scope: !7259)
!7275 = !DILocation(line: 1541, column: 9, scope: !7259)
!7276 = !DILocation(line: 1543, column: 11, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7246, file: !78, line: 1543, column: 11)
!7278 = !DILocation(line: 1543, column: 18, scope: !7277)
!7279 = !DILocation(line: 1543, column: 11, scope: !7246)
!7280 = !DILocation(line: 1544, column: 9, scope: !7277)
!7281 = !DILocation(line: 1545, column: 5, scope: !7246)
!7282 = !DILocation(line: 1524, column: 14, scope: !7238)
!7283 = !DILocation(line: 1522, column: 5, scope: !7284)
!7284 = !DILexicalBlockFile(scope: !7238, file: !78, discriminator: 4)
!7285 = !DILocation(line: 1546, column: 3, scope: !7235)
!7286 = !DILocation(line: 1548, column: 5, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7230, file: !78, line: 1547, column: 8)
!7288 = !DILocation(line: 1548, column: 13, scope: !7289)
!7289 = !DILexicalBlockFile(scope: !7290, file: !78, discriminator: 3)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !78, line: 1548, column: 5)
!7291 = distinct !DILexicalBlock(scope: !7287, file: !78, line: 1548, column: 5)
!7292 = !DILocation(line: 1548, column: 13, scope: !7293)
!7293 = !DILexicalBlockFile(scope: !7290, file: !78, discriminator: 4)
!7294 = !DILocation(line: 1548, column: 12, scope: !7295)
!7295 = !DILexicalBlockFile(scope: !7290, file: !78, discriminator: 5)
!7296 = !DILocation(line: 1548, column: 5, scope: !7295)
!7297 = !DILocalVariable(name: "c", scope: !7298, file: !78, line: 1549, type: !7)
!7298 = distinct !DILexicalBlock(scope: !7290, file: !78, line: 1548, column: 69)
!7299 = !DILocation(line: 1549, column: 11, scope: !7298)
!7300 = !DILocation(line: 1549, column: 15, scope: !7298)
!7301 = !DILocation(line: 1549, column: 15, scope: !7302)
!7302 = !DILexicalBlockFile(scope: !7298, file: !78, discriminator: 1)
!7303 = !DILocation(line: 1549, column: 15, scope: !7304)
!7304 = !DILexicalBlockFile(scope: !7298, file: !78, discriminator: 2)
!7305 = !DILocation(line: 1549, column: 15, scope: !7306)
!7306 = !DILexicalBlockFile(scope: !7298, file: !78, discriminator: 3)
!7307 = !DILocation(line: 1549, column: 11, scope: !7306)
!7308 = !DILocation(line: 1550, column: 14, scope: !7298)
!7309 = !DILocation(line: 1551, column: 18, scope: !7298)
!7310 = !DILocation(line: 1551, column: 20, scope: !7298)
!7311 = !DILocation(line: 1551, column: 14, scope: !7298)
!7312 = !DILocation(line: 1552, column: 11, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7298, file: !78, line: 1552, column: 11)
!7314 = !DILocation(line: 1552, column: 18, scope: !7313)
!7315 = !DILocation(line: 1552, column: 11, scope: !7298)
!7316 = !DILocation(line: 1553, column: 9, scope: !7313)
!7317 = !DILocation(line: 1554, column: 5, scope: !7298)
!7318 = !DILocation(line: 1548, column: 53, scope: !7319)
!7319 = !DILexicalBlockFile(scope: !7290, file: !78, discriminator: 6)
!7320 = !DILocation(line: 1548, column: 5, scope: !7319)
!7321 = !DILocation(line: 1556, column: 29, scope: !323)
!7322 = !DILocation(line: 1556, column: 10, scope: !323)
!7323 = !DILocation(line: 1556, column: 3, scope: !323)
!7324 = !DILocation(line: 1557, column: 1, scope: !323)
!7325 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !324, file: !78, line: 1560, type: !82)
!7326 = !DILocation(line: 1560, column: 46, scope: !324)
!7327 = !DILocalVariable(name: "ptr", arg: 2, scope: !324, file: !78, line: 1560, type: !93)
!7328 = !DILocation(line: 1560, column: 73, scope: !324)
!7329 = !DILocalVariable(name: "end", arg: 3, scope: !324, file: !78, line: 1561, type: !93)
!7330 = !DILocation(line: 1561, column: 42, scope: !324)
!7331 = !DILocation(line: 1563, column: 12, scope: !324)
!7332 = !DILocation(line: 1563, column: 18, scope: !324)
!7333 = !DILocation(line: 1563, column: 16, scope: !324)
!7334 = !DILocation(line: 1563, column: 22, scope: !324)
!7335 = !DILocation(line: 1563, column: 3, scope: !324)
!7336 = !DILocation(line: 1565, column: 9, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !78, line: 1565, column: 9)
!7338 = distinct !DILexicalBlock(scope: !324, file: !78, line: 1563, column: 36)
!7339 = !DILocation(line: 1565, column: 9, scope: !7340)
!7340 = !DILexicalBlockFile(scope: !7337, file: !78, discriminator: 1)
!7341 = !DILocation(line: 1566, column: 15, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7337, file: !78, line: 1565, column: 56)
!7343 = !DILocation(line: 1566, column: 15, scope: !7344)
!7344 = !DILexicalBlockFile(scope: !7342, file: !78, discriminator: 1)
!7345 = !DILocation(line: 1566, column: 15, scope: !7346)
!7346 = !DILexicalBlockFile(scope: !7342, file: !78, discriminator: 2)
!7347 = !DILocation(line: 1566, column: 15, scope: !7348)
!7348 = !DILexicalBlockFile(scope: !7342, file: !78, discriminator: 3)
!7349 = !DILocation(line: 1566, column: 7, scope: !7348)
!7350 = !DILocation(line: 1568, column: 9, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7342, file: !78, line: 1566, column: 40)
!7352 = !DILocation(line: 1570, column: 9, scope: !7351)
!7353 = !DILocation(line: 1572, column: 5, scope: !7342)
!7354 = !DILocation(line: 1573, column: 5, scope: !7338)
!7355 = !DILocation(line: 1575, column: 9, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7338, file: !78, line: 1575, column: 9)
!7357 = !DILocation(line: 1575, column: 9, scope: !7358)
!7358 = !DILexicalBlockFile(scope: !7356, file: !78, discriminator: 1)
!7359 = !DILocation(line: 1576, column: 11, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7356, file: !78, line: 1575, column: 42)
!7361 = !DILocation(line: 1577, column: 11, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7360, file: !78, line: 1577, column: 11)
!7363 = !DILocation(line: 1577, column: 11, scope: !7364)
!7364 = !DILexicalBlockFile(scope: !7362, file: !78, discriminator: 1)
!7365 = !DILocation(line: 1578, column: 13, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7362, file: !78, line: 1577, column: 44)
!7367 = !DILocation(line: 1579, column: 13, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7366, file: !78, line: 1579, column: 13)
!7369 = !DILocation(line: 1579, column: 13, scope: !7370)
!7370 = !DILexicalBlockFile(scope: !7368, file: !78, discriminator: 1)
!7371 = !DILocation(line: 1580, column: 11, scope: !7368)
!7372 = !DILocation(line: 1581, column: 7, scope: !7366)
!7373 = !DILocation(line: 1582, column: 5, scope: !7360)
!7374 = !DILocation(line: 1583, column: 5, scope: !7338)
!7375 = !DILocation(line: 1585, column: 13, scope: !7338)
!7376 = !DILocation(line: 1585, column: 13, scope: !7377)
!7377 = !DILexicalBlockFile(scope: !7338, file: !78, discriminator: 1)
!7378 = !DILocation(line: 1585, column: 13, scope: !7379)
!7379 = !DILexicalBlockFile(scope: !7338, file: !78, discriminator: 2)
!7380 = !DILocation(line: 1585, column: 13, scope: !7381)
!7381 = !DILexicalBlockFile(scope: !7338, file: !78, discriminator: 3)
!7382 = !DILocation(line: 1585, column: 5, scope: !7381)
!7383 = !DILocation(line: 1587, column: 11, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7338, file: !78, line: 1585, column: 38)
!7385 = !DILocation(line: 1588, column: 11, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7384, file: !78, line: 1588, column: 11)
!7387 = !DILocation(line: 1588, column: 11, scope: !7388)
!7388 = !DILexicalBlockFile(scope: !7386, file: !78, discriminator: 1)
!7389 = !DILocation(line: 1589, column: 13, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7386, file: !78, line: 1588, column: 44)
!7391 = !DILocation(line: 1590, column: 13, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7390, file: !78, line: 1590, column: 13)
!7393 = !DILocation(line: 1590, column: 13, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !7392, file: !78, discriminator: 1)
!7395 = !DILocation(line: 1591, column: 15, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7392, file: !78, line: 1590, column: 46)
!7397 = !DILocation(line: 1592, column: 15, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7396, file: !78, line: 1592, column: 15)
!7399 = !DILocation(line: 1592, column: 15, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !7398, file: !78, discriminator: 1)
!7401 = !DILocation(line: 1593, column: 13, scope: !7398)
!7402 = !DILocation(line: 1594, column: 9, scope: !7396)
!7403 = !DILocation(line: 1595, column: 7, scope: !7390)
!7404 = !DILocation(line: 1596, column: 7, scope: !7384)
!7405 = !DILocation(line: 1598, column: 11, scope: !7384)
!7406 = !DILocation(line: 1599, column: 11, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7384, file: !78, line: 1599, column: 11)
!7408 = !DILocation(line: 1599, column: 11, scope: !7409)
!7409 = !DILexicalBlockFile(scope: !7407, file: !78, discriminator: 1)
!7410 = !DILocation(line: 1600, column: 13, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7407, file: !78, line: 1599, column: 44)
!7412 = !DILocation(line: 1601, column: 13, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7411, file: !78, line: 1601, column: 13)
!7414 = !DILocation(line: 1601, column: 13, scope: !7415)
!7415 = !DILexicalBlockFile(scope: !7413, file: !78, discriminator: 1)
!7416 = !DILocation(line: 1602, column: 15, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7413, file: !78, line: 1601, column: 46)
!7418 = !DILocation(line: 1603, column: 15, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7417, file: !78, line: 1603, column: 15)
!7420 = !DILocation(line: 1603, column: 15, scope: !7421)
!7421 = !DILexicalBlockFile(scope: !7419, file: !78, discriminator: 1)
!7422 = !DILocation(line: 1604, column: 13, scope: !7419)
!7423 = !DILocation(line: 1605, column: 9, scope: !7417)
!7424 = !DILocation(line: 1606, column: 7, scope: !7411)
!7425 = !DILocation(line: 1607, column: 7, scope: !7384)
!7426 = !DILocation(line: 1609, column: 3, scope: !7338)
!7427 = !DILocation(line: 1610, column: 3, scope: !324)
!7428 = !DILocation(line: 1611, column: 1, scope: !324)
!7429 = !DILocalVariable(name: "enc", arg: 1, scope: !325, file: !78, line: 1734, type: !82)
!7430 = !DILocation(line: 1734, column: 40, scope: !325)
!7431 = !DILocalVariable(name: "ptr", arg: 2, scope: !325, file: !78, line: 1735, type: !93)
!7432 = !DILocation(line: 1735, column: 36, scope: !325)
!7433 = !DILocalVariable(name: "end", arg: 3, scope: !325, file: !78, line: 1736, type: !93)
!7434 = !DILocation(line: 1736, column: 36, scope: !325)
!7435 = !DILocalVariable(name: "pos", arg: 4, scope: !325, file: !78, line: 1737, type: !126)
!7436 = !DILocation(line: 1737, column: 34, scope: !325)
!7437 = !DILocation(line: 1739, column: 3, scope: !325)
!7438 = !DILocation(line: 1739, column: 10, scope: !7439)
!7439 = !DILexicalBlockFile(scope: !325, file: !78, discriminator: 3)
!7440 = !DILocation(line: 1739, column: 3, scope: !7439)
!7441 = !DILocation(line: 1740, column: 13, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !325, file: !78, line: 1739, column: 35)
!7443 = !DILocation(line: 1740, column: 13, scope: !7444)
!7444 = !DILexicalBlockFile(scope: !7442, file: !78, discriminator: 1)
!7445 = !DILocation(line: 1740, column: 13, scope: !7446)
!7446 = !DILexicalBlockFile(scope: !7442, file: !78, discriminator: 2)
!7447 = !DILocation(line: 1740, column: 13, scope: !7448)
!7448 = !DILexicalBlockFile(scope: !7442, file: !78, discriminator: 3)
!7449 = !DILocation(line: 1740, column: 5, scope: !7448)
!7450 = !DILocation(line: 1745, column: 5, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7442, file: !78, line: 1740, column: 34)
!7452 = !DILocation(line: 1745, column: 18, scope: !7453)
!7453 = !DILexicalBlockFile(scope: !7451, file: !78, discriminator: 3)
!7454 = !DILocation(line: 1745, column: 31, scope: !7455)
!7455 = !DILexicalBlockFile(scope: !7451, file: !78, discriminator: 4)
!7456 = !DILocation(line: 1748, column: 7, scope: !7451)
!7457 = !DILocation(line: 1748, column: 12, scope: !7451)
!7458 = !DILocation(line: 1748, column: 25, scope: !7451)
!7459 = !DILocation(line: 1749, column: 7, scope: !7451)
!7460 = !DILocation(line: 1749, column: 12, scope: !7451)
!7461 = !DILocation(line: 1749, column: 22, scope: !7451)
!7462 = !DILocation(line: 1750, column: 11, scope: !7451)
!7463 = !DILocation(line: 1751, column: 7, scope: !7451)
!7464 = !DILocation(line: 1753, column: 7, scope: !7451)
!7465 = !DILocation(line: 1753, column: 12, scope: !7451)
!7466 = !DILocation(line: 1753, column: 22, scope: !7451)
!7467 = !DILocation(line: 1754, column: 11, scope: !7451)
!7468 = !DILocation(line: 1755, column: 11, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7451, file: !78, line: 1755, column: 11)
!7470 = !DILocation(line: 1755, column: 35, scope: !7469)
!7471 = !DILocation(line: 1755, column: 38, scope: !7472)
!7472 = !DILexicalBlockFile(scope: !7469, file: !78, discriminator: 2)
!7473 = !DILocation(line: 1755, column: 38, scope: !7474)
!7474 = !DILexicalBlockFile(scope: !7469, file: !78, discriminator: 3)
!7475 = !DILocation(line: 1755, column: 38, scope: !7476)
!7476 = !DILexicalBlockFile(scope: !7469, file: !78, discriminator: 4)
!7477 = !DILocation(line: 1755, column: 38, scope: !7478)
!7478 = !DILexicalBlockFile(scope: !7469, file: !78, discriminator: 5)
!7479 = !DILocation(line: 1755, column: 58, scope: !7478)
!7480 = !DILocation(line: 1755, column: 11, scope: !7478)
!7481 = !DILocation(line: 1756, column: 13, scope: !7469)
!7482 = !DILocation(line: 1756, column: 9, scope: !7469)
!7483 = !DILocation(line: 1757, column: 7, scope: !7451)
!7484 = !DILocation(line: 1757, column: 12, scope: !7451)
!7485 = !DILocation(line: 1757, column: 25, scope: !7451)
!7486 = !DILocation(line: 1758, column: 7, scope: !7451)
!7487 = !DILocation(line: 1760, column: 11, scope: !7451)
!7488 = !DILocation(line: 1761, column: 7, scope: !7451)
!7489 = !DILocation(line: 1763, column: 5, scope: !7442)
!7490 = !DILocation(line: 1763, column: 10, scope: !7442)
!7491 = !DILocation(line: 1763, column: 22, scope: !7442)
!7492 = !DILocation(line: 1739, column: 3, scope: !7493)
!7493 = !DILexicalBlockFile(scope: !325, file: !78, discriminator: 4)
!7494 = !DILocation(line: 1765, column: 1, scope: !325)
!7495 = !DILocalVariable(name: "enc", arg: 1, scope: !326, file: !78, line: 1363, type: !82)
!7496 = !DILocation(line: 1363, column: 36, scope: !326)
!7497 = !DILocalVariable(name: "ptr", arg: 2, scope: !326, file: !78, line: 1363, type: !93)
!7498 = !DILocation(line: 1363, column: 53, scope: !326)
!7499 = !DILocalVariable(name: "end", arg: 3, scope: !326, file: !78, line: 1363, type: !93)
!7500 = !DILocation(line: 1363, column: 70, scope: !326)
!7501 = !DILocalVariable(name: "badPtr", arg: 4, scope: !326, file: !78, line: 1364, type: !95)
!7502 = !DILocation(line: 1364, column: 33, scope: !326)
!7503 = !DILocation(line: 1366, column: 7, scope: !326)
!7504 = !DILocation(line: 1367, column: 7, scope: !326)
!7505 = !DILocation(line: 1368, column: 3, scope: !326)
!7506 = !DILocation(line: 1368, column: 10, scope: !7507)
!7507 = !DILexicalBlockFile(scope: !7508, file: !78, discriminator: 3)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !78, line: 1368, column: 3)
!7509 = distinct !DILexicalBlock(scope: !326, file: !78, line: 1368, column: 3)
!7510 = !DILocation(line: 1368, column: 3, scope: !7507)
!7511 = !DILocation(line: 1369, column: 13, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !78, line: 1368, column: 55)
!7513 = !DILocation(line: 1369, column: 13, scope: !7514)
!7514 = !DILexicalBlockFile(scope: !7512, file: !78, discriminator: 1)
!7515 = !DILocation(line: 1369, column: 13, scope: !7516)
!7516 = !DILexicalBlockFile(scope: !7512, file: !78, discriminator: 2)
!7517 = !DILocation(line: 1369, column: 13, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7512, file: !78, discriminator: 3)
!7519 = !DILocation(line: 1369, column: 5, scope: !7518)
!7520 = !DILocation(line: 1391, column: 7, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7512, file: !78, line: 1369, column: 34)
!7522 = !DILocation(line: 1393, column: 11, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7521, file: !78, line: 1393, column: 11)
!7524 = !DILocation(line: 1393, column: 11, scope: !7525)
!7525 = !DILexicalBlockFile(scope: !7523, file: !78, discriminator: 1)
!7526 = !DILocation(line: 1394, column: 19, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7523, file: !78, line: 1393, column: 46)
!7528 = !DILocation(line: 1394, column: 10, scope: !7527)
!7529 = !DILocation(line: 1394, column: 17, scope: !7527)
!7530 = !DILocation(line: 1395, column: 9, scope: !7527)
!7531 = !DILocation(line: 1397, column: 7, scope: !7521)
!7532 = !DILocation(line: 1400, column: 13, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7521, file: !78, line: 1400, column: 11)
!7534 = !DILocation(line: 1400, column: 13, scope: !7535)
!7535 = !DILexicalBlockFile(scope: !7533, file: !78, discriminator: 2)
!7536 = !DILocation(line: 1400, column: 13, scope: !7537)
!7537 = !DILexicalBlockFile(scope: !7533, file: !78, discriminator: 3)
!7538 = !DILocation(line: 1400, column: 13, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !7533, file: !78, discriminator: 4)
!7540 = !DILocation(line: 1400, column: 37, scope: !7539)
!7541 = !DILocation(line: 1400, column: 11, scope: !7539)
!7542 = !DILocation(line: 1401, column: 9, scope: !7533)
!7543 = !DILocation(line: 1400, column: 44, scope: !7544)
!7544 = !DILexicalBlockFile(scope: !7533, file: !78, discriminator: 5)
!7545 = !DILocation(line: 1403, column: 15, scope: !7521)
!7546 = !DILocation(line: 1403, column: 15, scope: !7547)
!7547 = !DILexicalBlockFile(scope: !7521, file: !78, discriminator: 1)
!7548 = !DILocation(line: 1403, column: 15, scope: !7549)
!7549 = !DILexicalBlockFile(scope: !7521, file: !78, discriminator: 2)
!7550 = !DILocation(line: 1403, column: 15, scope: !7551)
!7551 = !DILexicalBlockFile(scope: !7521, file: !78, discriminator: 3)
!7552 = !DILocation(line: 1403, column: 7, scope: !7551)
!7553 = !DILocation(line: 1406, column: 9, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7521, file: !78, line: 1403, column: 40)
!7555 = !DILocation(line: 1408, column: 19, scope: !7554)
!7556 = !DILocation(line: 1408, column: 10, scope: !7554)
!7557 = !DILocation(line: 1408, column: 17, scope: !7554)
!7558 = !DILocation(line: 1409, column: 9, scope: !7554)
!7559 = !DILocation(line: 1411, column: 7, scope: !7521)
!7560 = !DILocation(line: 1413, column: 3, scope: !7512)
!7561 = !DILocation(line: 1368, column: 39, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !7508, file: !78, discriminator: 4)
!7563 = !DILocation(line: 1368, column: 3, scope: !7562)
!7564 = !DILocation(line: 1414, column: 3, scope: !326)
!7565 = !DILocation(line: 1415, column: 1, scope: !326)
!7566 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !327, file: !1, line: 715, type: !82)
!7567 = !DILocation(line: 715, column: 1, scope: !327)
!7568 = !DILocalVariable(name: "fromP", arg: 2, scope: !327, file: !1, line: 715, type: !95)
!7569 = !DILocalVariable(name: "fromLim", arg: 3, scope: !327, file: !1, line: 715, type: !93)
!7570 = !DILocalVariable(name: "toP", arg: 4, scope: !327, file: !1, line: 715, type: !140)
!7571 = !DILocalVariable(name: "toLim", arg: 5, scope: !327, file: !1, line: 715, type: !93)
!7572 = !DILocalVariable(name: "from", scope: !327, file: !1, line: 715, type: !93)
!7573 = !DILocation(line: 715, column: 1, scope: !7574)
!7574 = !DILexicalBlockFile(scope: !7575, file: !1, discriminator: 1)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !1, line: 715, column: 1)
!7576 = distinct !DILexicalBlock(scope: !327, file: !1, line: 715, column: 1)
!7577 = !DILocalVariable(name: "plane", scope: !7578, file: !1, line: 715, type: !7)
!7578 = distinct !DILexicalBlock(scope: !7575, file: !1, line: 715, column: 1)
!7579 = !DILocation(line: 715, column: 1, scope: !7578)
!7580 = !DILocalVariable(name: "lo2", scope: !7578, file: !1, line: 715, type: !170)
!7581 = !DILocalVariable(name: "lo", scope: !7578, file: !1, line: 715, type: !170)
!7582 = !DILocation(line: 715, column: 1, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7578, file: !1, discriminator: 2)
!7584 = !DILocalVariable(name: "hi", scope: !7578, file: !1, line: 715, type: !170)
!7585 = !DILocation(line: 715, column: 1, scope: !7586)
!7586 = !DILexicalBlockFile(scope: !7587, file: !1, discriminator: 3)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !1, line: 715, column: 1)
!7588 = distinct !DILexicalBlock(scope: !7578, file: !1, line: 715, column: 1)
!7589 = !DILocation(line: 715, column: 1, scope: !7590)
!7590 = !DILexicalBlockFile(scope: !7591, file: !1, discriminator: 4)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !1, line: 715, column: 1)
!7592 = distinct !DILexicalBlock(scope: !7587, file: !1, line: 715, column: 1)
!7593 = !DILocation(line: 715, column: 1, scope: !7594)
!7594 = !DILexicalBlockFile(scope: !7595, file: !1, discriminator: 5)
!7595 = distinct !DILexicalBlock(scope: !7591, file: !1, line: 715, column: 1)
!7596 = !DILocation(line: 715, column: 1, scope: !7597)
!7597 = !DILexicalBlockFile(scope: !7592, file: !1, discriminator: 6)
!7598 = !DILocation(line: 715, column: 1, scope: !7599)
!7599 = !DILexicalBlockFile(scope: !7587, file: !1, discriminator: 7)
!7600 = !DILocation(line: 715, column: 1, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !7602, file: !1, discriminator: 8)
!7602 = distinct !DILexicalBlock(scope: !7588, file: !1, line: 715, column: 1)
!7603 = !DILocation(line: 715, column: 1, scope: !7604)
!7604 = !DILexicalBlockFile(scope: !7605, file: !1, discriminator: 9)
!7605 = distinct !DILexicalBlock(scope: !7602, file: !1, line: 715, column: 1)
!7606 = !DILocation(line: 715, column: 1, scope: !7607)
!7607 = !DILexicalBlockFile(scope: !7588, file: !1, discriminator: 10)
!7608 = !DILocation(line: 715, column: 1, scope: !7609)
!7609 = !DILexicalBlockFile(scope: !7610, file: !1, discriminator: 11)
!7610 = distinct !DILexicalBlock(scope: !7588, file: !1, line: 715, column: 1)
!7611 = !DILocation(line: 715, column: 1, scope: !7612)
!7612 = !DILexicalBlockFile(scope: !7613, file: !1, discriminator: 12)
!7613 = distinct !DILexicalBlock(scope: !7610, file: !1, line: 715, column: 1)
!7614 = !DILocation(line: 715, column: 1, scope: !7615)
!7615 = !DILexicalBlockFile(scope: !7588, file: !1, discriminator: 13)
!7616 = !DILocation(line: 715, column: 1, scope: !7617)
!7617 = !DILexicalBlockFile(scope: !7618, file: !1, discriminator: 14)
!7618 = distinct !DILexicalBlock(scope: !7588, file: !1, line: 715, column: 1)
!7619 = !DILocation(line: 715, column: 1, scope: !7620)
!7620 = !DILexicalBlockFile(scope: !7621, file: !1, discriminator: 15)
!7621 = distinct !DILexicalBlock(scope: !7618, file: !1, line: 715, column: 1)
!7622 = !DILocation(line: 715, column: 1, scope: !7623)
!7623 = !DILexicalBlockFile(scope: !7624, file: !1, discriminator: 16)
!7624 = distinct !DILexicalBlock(scope: !7588, file: !1, line: 715, column: 1)
!7625 = !DILocation(line: 715, column: 1, scope: !7626)
!7626 = !DILexicalBlockFile(scope: !7627, file: !1, discriminator: 17)
!7627 = distinct !DILexicalBlock(scope: !7624, file: !1, line: 715, column: 1)
!7628 = !DILocation(line: 715, column: 1, scope: !7629)
!7629 = !DILexicalBlockFile(scope: !7588, file: !1, discriminator: 18)
!7630 = !DILocation(line: 715, column: 1, scope: !7631)
!7631 = !DILexicalBlockFile(scope: !7578, file: !1, discriminator: 19)
!7632 = !DILocation(line: 715, column: 1, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !7575, file: !1, discriminator: 20)
!7634 = !DILocation(line: 715, column: 1, scope: !7635)
!7635 = !DILexicalBlockFile(scope: !327, file: !1, discriminator: 21)
!7636 = !DILocation(line: 715, column: 1, scope: !7637)
!7637 = !DILexicalBlockFile(scope: !7638, file: !1, discriminator: 22)
!7638 = distinct !DILexicalBlock(scope: !327, file: !1, line: 715, column: 1)
!7639 = !DILocation(line: 715, column: 1, scope: !7640)
!7640 = !DILexicalBlockFile(scope: !7638, file: !1, discriminator: 23)
!7641 = !DILocation(line: 715, column: 1, scope: !7642)
!7642 = !DILexicalBlockFile(scope: !327, file: !1, discriminator: 24)
!7643 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !328, file: !1, line: 716, type: !82)
!7644 = !DILocation(line: 716, column: 1, scope: !328)
!7645 = !DILocalVariable(name: "fromP", arg: 2, scope: !328, file: !1, line: 716, type: !95)
!7646 = !DILocalVariable(name: "fromLim", arg: 3, scope: !328, file: !1, line: 716, type: !93)
!7647 = !DILocalVariable(name: "toP", arg: 4, scope: !328, file: !1, line: 716, type: !145)
!7648 = !DILocalVariable(name: "toLim", arg: 5, scope: !328, file: !1, line: 716, type: !148)
!7649 = !DILocalVariable(name: "res", scope: !328, file: !1, line: 716, type: !21)
!7650 = !DILocation(line: 716, column: 1, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !328, file: !1, line: 716, column: 1)
!7652 = !DILocation(line: 716, column: 1, scope: !7653)
!7653 = !DILexicalBlockFile(scope: !7651, file: !1, discriminator: 1)
!7654 = !DILocation(line: 716, column: 1, scope: !7655)
!7655 = !DILexicalBlockFile(scope: !7656, file: !1, discriminator: 2)
!7656 = distinct !DILexicalBlock(scope: !7651, file: !1, line: 716, column: 1)
!7657 = !DILocation(line: 716, column: 1, scope: !7658)
!7658 = !DILexicalBlockFile(scope: !328, file: !1, discriminator: 3)
!7659 = !DILocation(line: 716, column: 1, scope: !7660)
!7660 = !DILexicalBlockFile(scope: !7661, file: !1, discriminator: 4)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 716, column: 1)
!7662 = distinct !DILexicalBlock(scope: !328, file: !1, line: 716, column: 1)
!7663 = !DILocation(line: 716, column: 1, scope: !7664)
!7664 = !DILexicalBlockFile(scope: !7661, file: !1, discriminator: 5)
!7665 = !DILocation(line: 716, column: 1, scope: !7666)
!7666 = !DILexicalBlockFile(scope: !7662, file: !1, discriminator: 6)
!7667 = !DILocation(line: 716, column: 1, scope: !7668)
!7668 = !DILexicalBlockFile(scope: !7661, file: !1, discriminator: 7)
!7669 = !DILocation(line: 716, column: 1, scope: !7670)
!7670 = !DILexicalBlockFile(scope: !7661, file: !1, discriminator: 8)
!7671 = !DILocation(line: 716, column: 1, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7673, file: !1, discriminator: 9)
!7673 = distinct !DILexicalBlock(scope: !328, file: !1, line: 716, column: 1)
!7674 = !DILocation(line: 716, column: 1, scope: !7675)
!7675 = !DILexicalBlockFile(scope: !7673, file: !1, discriminator: 10)
!7676 = !DILocation(line: 716, column: 1, scope: !7677)
!7677 = !DILexicalBlockFile(scope: !7673, file: !1, discriminator: 11)
!7678 = !DILocation(line: 716, column: 1, scope: !7679)
!7679 = !DILexicalBlockFile(scope: !7673, file: !1, discriminator: 12)
!7680 = !DILocation(line: 716, column: 1, scope: !7681)
!7681 = !DILexicalBlockFile(scope: !328, file: !1, discriminator: 13)
!7682 = !DILocalVariable(name: "hi", arg: 1, scope: !298, file: !1, line: 598, type: !9)
!7683 = !DILocation(line: 598, column: 24, scope: !298)
!7684 = !DILocalVariable(name: "lo", arg: 2, scope: !298, file: !1, line: 598, type: !9)
!7685 = !DILocation(line: 598, column: 33, scope: !298)
!7686 = !DILocation(line: 600, column: 26, scope: !298)
!7687 = !DILocation(line: 600, column: 11, scope: !298)
!7688 = !DILocation(line: 600, column: 3, scope: !298)
!7689 = !DILocation(line: 602, column: 5, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !298, file: !1, line: 600, column: 30)
!7691 = !DILocation(line: 604, column: 5, scope: !7690)
!7692 = !DILocation(line: 606, column: 28, scope: !7690)
!7693 = !DILocation(line: 606, column: 13, scope: !7690)
!7694 = !DILocation(line: 606, column: 5, scope: !7690)
!7695 = !DILocation(line: 609, column: 7, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 606, column: 32)
!7697 = !DILocation(line: 611, column: 5, scope: !7690)
!7698 = !DILocation(line: 613, column: 3, scope: !298)
!7699 = !DILocation(line: 614, column: 1, scope: !298)
!7700 = !DILocalVariable(name: "open", arg: 1, scope: !301, file: !78, line: 935, type: !7)
!7701 = !DILocation(line: 935, column: 21, scope: !301)
!7702 = !DILocalVariable(name: "enc", arg: 2, scope: !301, file: !78, line: 935, type: !82)
!7703 = !DILocation(line: 935, column: 43, scope: !301)
!7704 = !DILocalVariable(name: "ptr", arg: 3, scope: !301, file: !78, line: 936, type: !93)
!7705 = !DILocation(line: 936, column: 29, scope: !301)
!7706 = !DILocalVariable(name: "end", arg: 4, scope: !301, file: !78, line: 936, type: !93)
!7707 = !DILocation(line: 936, column: 46, scope: !301)
!7708 = !DILocalVariable(name: "nextTokPtr", arg: 5, scope: !301, file: !78, line: 937, type: !95)
!7709 = !DILocation(line: 937, column: 30, scope: !301)
!7710 = !DILocation(line: 939, column: 3, scope: !301)
!7711 = !DILocation(line: 939, column: 10, scope: !7712)
!7712 = !DILexicalBlockFile(scope: !301, file: !78, discriminator: 3)
!7713 = !DILocation(line: 939, column: 3, scope: !7712)
!7714 = !DILocalVariable(name: "t", scope: !7715, file: !78, line: 940, type: !7)
!7715 = distinct !DILexicalBlock(scope: !301, file: !78, line: 939, column: 35)
!7716 = !DILocation(line: 940, column: 9, scope: !7715)
!7717 = !DILocation(line: 940, column: 13, scope: !7715)
!7718 = !DILocation(line: 940, column: 13, scope: !7719)
!7719 = !DILexicalBlockFile(scope: !7715, file: !78, discriminator: 1)
!7720 = !DILocation(line: 940, column: 13, scope: !7721)
!7721 = !DILexicalBlockFile(scope: !7715, file: !78, discriminator: 2)
!7722 = !DILocation(line: 940, column: 13, scope: !7723)
!7723 = !DILexicalBlockFile(scope: !7715, file: !78, discriminator: 3)
!7724 = !DILocation(line: 940, column: 9, scope: !7723)
!7725 = !DILocation(line: 941, column: 13, scope: !7715)
!7726 = !DILocation(line: 941, column: 5, scope: !7715)
!7727 = !DILocation(line: 942, column: 5, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !78, line: 942, column: 5)
!7729 = distinct !DILexicalBlock(scope: !7715, file: !78, line: 941, column: 16)
!7730 = !DILocation(line: 942, column: 5, scope: !7729)
!7731 = !DILocation(line: 942, column: 5, scope: !7732)
!7732 = !DILexicalBlockFile(scope: !7728, file: !78, discriminator: 16)
!7733 = !DILocation(line: 942, column: 5, scope: !7734)
!7734 = !DILexicalBlockFile(scope: !7729, file: !78, discriminator: 17)
!7735 = !DILocation(line: 942, column: 5, scope: !7736)
!7736 = !DILexicalBlockFile(scope: !7737, file: !78, discriminator: 18)
!7737 = distinct !DILexicalBlock(scope: !7729, file: !78, line: 942, column: 5)
!7738 = !DILocation(line: 942, column: 5, scope: !7739)
!7739 = !DILexicalBlockFile(scope: !7737, file: !78, discriminator: 19)
!7740 = !DILocation(line: 942, column: 5, scope: !7741)
!7741 = !DILexicalBlockFile(scope: !7729, file: !78, discriminator: 20)
!7742 = !DILocation(line: 942, column: 5, scope: !7743)
!7743 = !DILexicalBlockFile(scope: !7744, file: !78, discriminator: 21)
!7744 = distinct !DILexicalBlock(scope: !7729, file: !78, line: 942, column: 5)
!7745 = !DILocation(line: 942, column: 5, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7744, file: !78, discriminator: 22)
!7747 = !DILocation(line: 942, column: 5, scope: !7748)
!7748 = !DILexicalBlockFile(scope: !7729, file: !78, discriminator: 23)
!7749 = !DILocation(line: 942, column: 5, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !7729, file: !78, discriminator: 24)
!7751 = !DILocation(line: 945, column: 11, scope: !7729)
!7752 = !DILocation(line: 946, column: 11, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7729, file: !78, line: 946, column: 11)
!7754 = !DILocation(line: 946, column: 16, scope: !7753)
!7755 = !DILocation(line: 946, column: 13, scope: !7753)
!7756 = !DILocation(line: 946, column: 11, scope: !7729)
!7757 = !DILocation(line: 947, column: 9, scope: !7753)
!7758 = !DILocation(line: 948, column: 13, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7729, file: !78, line: 948, column: 11)
!7760 = !DILocation(line: 948, column: 11, scope: !7729)
!7761 = !DILocation(line: 949, column: 9, scope: !7759)
!7762 = !DILocation(line: 950, column: 21, scope: !7729)
!7763 = !DILocation(line: 950, column: 8, scope: !7729)
!7764 = !DILocation(line: 950, column: 19, scope: !7729)
!7765 = !DILocation(line: 951, column: 15, scope: !7729)
!7766 = !DILocation(line: 951, column: 15, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !7729, file: !78, discriminator: 1)
!7768 = !DILocation(line: 951, column: 15, scope: !7769)
!7769 = !DILexicalBlockFile(scope: !7729, file: !78, discriminator: 2)
!7770 = !DILocation(line: 951, column: 15, scope: !7771)
!7771 = !DILexicalBlockFile(scope: !7729, file: !78, discriminator: 3)
!7772 = !DILocation(line: 951, column: 7, scope: !7771)
!7773 = !DILocation(line: 954, column: 9, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7729, file: !78, line: 951, column: 36)
!7775 = !DILocation(line: 956, column: 9, scope: !7774)
!7776 = !DILocation(line: 959, column: 11, scope: !7729)
!7777 = !DILocation(line: 960, column: 7, scope: !7729)
!7778 = !DILocation(line: 939, column: 3, scope: !7779)
!7779 = !DILexicalBlockFile(scope: !301, file: !78, discriminator: 4)
!7780 = !DILocation(line: 963, column: 3, scope: !301)
!7781 = !DILocation(line: 964, column: 1, scope: !301)
!7782 = !DILocalVariable(name: "enc", arg: 1, scope: !302, file: !78, line: 149, type: !82)
!7783 = !DILocation(line: 149, column: 34, scope: !302)
!7784 = !DILocalVariable(name: "ptr", arg: 2, scope: !302, file: !78, line: 149, type: !93)
!7785 = !DILocation(line: 149, column: 51, scope: !302)
!7786 = !DILocalVariable(name: "end", arg: 3, scope: !302, file: !78, line: 150, type: !93)
!7787 = !DILocation(line: 150, column: 30, scope: !302)
!7788 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !302, file: !78, line: 150, type: !95)
!7789 = !DILocation(line: 150, column: 48, scope: !302)
!7790 = !DILocation(line: 152, column: 3, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !78, line: 152, column: 3)
!7792 = distinct !DILexicalBlock(scope: !302, file: !78, line: 152, column: 3)
!7793 = !DILocation(line: 152, column: 3, scope: !7792)
!7794 = !DILocation(line: 152, column: 3, scope: !7795)
!7795 = !DILexicalBlockFile(scope: !7796, file: !78, discriminator: 2)
!7796 = distinct !DILexicalBlock(scope: !7791, file: !78, line: 152, column: 3)
!7797 = !DILocation(line: 153, column: 11, scope: !302)
!7798 = !DILocation(line: 153, column: 11, scope: !7799)
!7799 = !DILexicalBlockFile(scope: !302, file: !78, discriminator: 1)
!7800 = !DILocation(line: 153, column: 11, scope: !7801)
!7801 = !DILexicalBlockFile(scope: !302, file: !78, discriminator: 2)
!7802 = !DILocation(line: 153, column: 11, scope: !7803)
!7803 = !DILexicalBlockFile(scope: !302, file: !78, discriminator: 3)
!7804 = !DILocation(line: 153, column: 3, scope: !7803)
!7805 = !DILocation(line: 155, column: 32, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !302, file: !78, line: 153, column: 32)
!7807 = !DILocation(line: 155, column: 37, scope: !7806)
!7808 = !DILocation(line: 155, column: 41, scope: !7806)
!7809 = !DILocation(line: 155, column: 56, scope: !7806)
!7810 = !DILocation(line: 155, column: 61, scope: !7806)
!7811 = !DILocation(line: 155, column: 12, scope: !7806)
!7812 = !DILocation(line: 155, column: 5, scope: !7806)
!7813 = !DILocation(line: 157, column: 19, scope: !7806)
!7814 = !DILocation(line: 157, column: 23, scope: !7806)
!7815 = !DILocation(line: 157, column: 6, scope: !7806)
!7816 = !DILocation(line: 157, column: 17, scope: !7806)
!7817 = !DILocation(line: 158, column: 5, scope: !7806)
!7818 = !DILocation(line: 161, column: 9, scope: !7806)
!7819 = !DILocation(line: 162, column: 5, scope: !7806)
!7820 = !DILocation(line: 164, column: 19, scope: !7806)
!7821 = !DILocation(line: 164, column: 6, scope: !7806)
!7822 = !DILocation(line: 164, column: 17, scope: !7806)
!7823 = !DILocation(line: 165, column: 5, scope: !7806)
!7824 = !DILocation(line: 167, column: 3, scope: !302)
!7825 = !DILocation(line: 167, column: 10, scope: !7803)
!7826 = !DILocation(line: 167, column: 3, scope: !7803)
!7827 = !DILocation(line: 168, column: 13, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !302, file: !78, line: 167, column: 35)
!7829 = !DILocation(line: 168, column: 13, scope: !7830)
!7830 = !DILexicalBlockFile(scope: !7828, file: !78, discriminator: 1)
!7831 = !DILocation(line: 168, column: 13, scope: !7832)
!7832 = !DILexicalBlockFile(scope: !7828, file: !78, discriminator: 2)
!7833 = !DILocation(line: 168, column: 13, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !7828, file: !78, discriminator: 3)
!7835 = !DILocation(line: 168, column: 5, scope: !7834)
!7836 = !DILocation(line: 170, column: 7, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !78, line: 170, column: 7)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !78, line: 170, column: 7)
!7839 = distinct !DILexicalBlock(scope: !7828, file: !78, line: 168, column: 34)
!7840 = !DILocation(line: 170, column: 7, scope: !7838)
!7841 = !DILocation(line: 170, column: 7, scope: !7842)
!7842 = !DILexicalBlockFile(scope: !7843, file: !78, discriminator: 2)
!7843 = distinct !DILexicalBlock(scope: !7837, file: !78, line: 170, column: 7)
!7844 = !DILocation(line: 172, column: 15, scope: !7839)
!7845 = !DILocation(line: 172, column: 15, scope: !7846)
!7846 = !DILexicalBlockFile(scope: !7839, file: !78, discriminator: 1)
!7847 = !DILocation(line: 172, column: 15, scope: !7848)
!7848 = !DILexicalBlockFile(scope: !7839, file: !78, discriminator: 2)
!7849 = !DILocation(line: 172, column: 15, scope: !7850)
!7850 = !DILexicalBlockFile(scope: !7839, file: !78, discriminator: 3)
!7851 = !DILocation(line: 172, column: 7, scope: !7850)
!7852 = !DILocation(line: 174, column: 23, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7839, file: !78, line: 172, column: 50)
!7854 = !DILocation(line: 174, column: 10, scope: !7853)
!7855 = !DILocation(line: 174, column: 21, scope: !7853)
!7856 = !DILocation(line: 175, column: 9, scope: !7853)
!7857 = !DILocation(line: 176, column: 7, scope: !7853)
!7858 = !DILocation(line: 179, column: 21, scope: !7839)
!7859 = !DILocation(line: 179, column: 8, scope: !7839)
!7860 = !DILocation(line: 179, column: 19, scope: !7839)
!7861 = !DILocation(line: 180, column: 7, scope: !7839)
!7862 = !DILocation(line: 183, column: 11, scope: !7839)
!7863 = !DILocation(line: 184, column: 7, scope: !7839)
!7864 = !DILocation(line: 186, column: 21, scope: !7839)
!7865 = !DILocation(line: 186, column: 8, scope: !7839)
!7866 = !DILocation(line: 186, column: 19, scope: !7839)
!7867 = !DILocation(line: 187, column: 7, scope: !7839)
!7868 = !DILocation(line: 167, column: 3, scope: !7869)
!7869 = !DILexicalBlockFile(scope: !302, file: !78, discriminator: 4)
!7870 = !DILocation(line: 190, column: 3, scope: !302)
!7871 = !DILocation(line: 191, column: 1, scope: !302)
!7872 = !DILocalVariable(name: "enc", arg: 1, scope: !304, file: !78, line: 239, type: !82)
!7873 = !DILocation(line: 239, column: 32, scope: !304)
!7874 = !DILocalVariable(name: "ptr", arg: 2, scope: !304, file: !78, line: 239, type: !93)
!7875 = !DILocation(line: 239, column: 49, scope: !304)
!7876 = !DILocalVariable(name: "end", arg: 3, scope: !304, file: !78, line: 240, type: !93)
!7877 = !DILocation(line: 240, column: 28, scope: !304)
!7878 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !304, file: !78, line: 240, type: !95)
!7879 = !DILocation(line: 240, column: 46, scope: !304)
!7880 = !DILocalVariable(name: "tok", scope: !304, file: !78, line: 242, type: !7)
!7881 = !DILocation(line: 242, column: 7, scope: !304)
!7882 = !DILocalVariable(name: "target", scope: !304, file: !78, line: 243, type: !93)
!7883 = !DILocation(line: 243, column: 15, scope: !304)
!7884 = !DILocation(line: 243, column: 24, scope: !304)
!7885 = !DILocation(line: 244, column: 3, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !78, line: 244, column: 3)
!7887 = distinct !DILexicalBlock(scope: !304, file: !78, line: 244, column: 3)
!7888 = !DILocation(line: 244, column: 3, scope: !7887)
!7889 = !DILocation(line: 244, column: 3, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7891, file: !78, discriminator: 2)
!7891 = distinct !DILexicalBlock(scope: !7886, file: !78, line: 244, column: 3)
!7892 = !DILocation(line: 245, column: 11, scope: !304)
!7893 = !DILocation(line: 245, column: 11, scope: !7894)
!7894 = !DILexicalBlockFile(scope: !304, file: !78, discriminator: 1)
!7895 = !DILocation(line: 245, column: 11, scope: !7896)
!7896 = !DILexicalBlockFile(scope: !304, file: !78, discriminator: 2)
!7897 = !DILocation(line: 245, column: 11, scope: !7898)
!7898 = !DILexicalBlockFile(scope: !304, file: !78, discriminator: 3)
!7899 = !DILocation(line: 245, column: 3, scope: !7898)
!7900 = !DILocation(line: 246, column: 3, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !78, line: 246, column: 3)
!7902 = distinct !DILexicalBlock(scope: !304, file: !78, line: 245, column: 32)
!7903 = !DILocation(line: 246, column: 3, scope: !7902)
!7904 = !DILocation(line: 246, column: 3, scope: !7905)
!7905 = !DILexicalBlockFile(scope: !7906, file: !78, discriminator: 17)
!7906 = distinct !DILexicalBlock(scope: !7901, file: !78, line: 246, column: 3)
!7907 = !DILocation(line: 246, column: 3, scope: !7908)
!7908 = !DILexicalBlockFile(scope: !7901, file: !78, discriminator: 18)
!7909 = !DILocation(line: 246, column: 3, scope: !7910)
!7910 = !DILexicalBlockFile(scope: !7902, file: !78, discriminator: 19)
!7911 = !DILocation(line: 246, column: 3, scope: !7912)
!7912 = !DILexicalBlockFile(scope: !7913, file: !78, discriminator: 20)
!7913 = distinct !DILexicalBlock(scope: !7902, file: !78, line: 246, column: 3)
!7914 = !DILocation(line: 246, column: 3, scope: !7915)
!7915 = !DILexicalBlockFile(scope: !7913, file: !78, discriminator: 21)
!7916 = !DILocation(line: 246, column: 3, scope: !7917)
!7917 = !DILexicalBlockFile(scope: !7918, file: !78, discriminator: 22)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !78, line: 246, column: 3)
!7919 = distinct !DILexicalBlock(scope: !7902, file: !78, line: 246, column: 3)
!7920 = !DILocation(line: 246, column: 3, scope: !7921)
!7921 = !DILexicalBlockFile(scope: !7922, file: !78, discriminator: 23)
!7922 = distinct !DILexicalBlock(scope: !7902, file: !78, line: 246, column: 3)
!7923 = !DILocation(line: 246, column: 3, scope: !7924)
!7924 = !DILexicalBlockFile(scope: !7922, file: !78, discriminator: 24)
!7925 = !DILocation(line: 246, column: 3, scope: !7926)
!7926 = !DILexicalBlockFile(scope: !7927, file: !78, discriminator: 25)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !78, line: 246, column: 3)
!7928 = distinct !DILexicalBlock(scope: !7902, file: !78, line: 246, column: 3)
!7929 = !DILocation(line: 246, column: 3, scope: !7930)
!7930 = !DILexicalBlockFile(scope: !7931, file: !78, discriminator: 26)
!7931 = distinct !DILexicalBlock(scope: !7902, file: !78, line: 246, column: 3)
!7932 = !DILocation(line: 246, column: 3, scope: !7933)
!7933 = !DILexicalBlockFile(scope: !7931, file: !78, discriminator: 27)
!7934 = !DILocation(line: 246, column: 3, scope: !7935)
!7935 = !DILexicalBlockFile(scope: !7936, file: !78, discriminator: 28)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !78, line: 246, column: 3)
!7937 = distinct !DILexicalBlock(scope: !7902, file: !78, line: 246, column: 3)
!7938 = !DILocation(line: 248, column: 19, scope: !7902)
!7939 = !DILocation(line: 248, column: 6, scope: !7902)
!7940 = !DILocation(line: 248, column: 17, scope: !7902)
!7941 = !DILocation(line: 249, column: 5, scope: !7902)
!7942 = !DILocation(line: 251, column: 3, scope: !304)
!7943 = !DILocation(line: 251, column: 10, scope: !7898)
!7944 = !DILocation(line: 251, column: 3, scope: !7898)
!7945 = !DILocation(line: 252, column: 13, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !304, file: !78, line: 251, column: 35)
!7947 = !DILocation(line: 252, column: 13, scope: !7948)
!7948 = !DILexicalBlockFile(scope: !7946, file: !78, discriminator: 1)
!7949 = !DILocation(line: 252, column: 13, scope: !7950)
!7950 = !DILexicalBlockFile(scope: !7946, file: !78, discriminator: 2)
!7951 = !DILocation(line: 252, column: 13, scope: !7952)
!7952 = !DILexicalBlockFile(scope: !7946, file: !78, discriminator: 3)
!7953 = !DILocation(line: 252, column: 5, scope: !7952)
!7954 = !DILocation(line: 253, column: 5, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 253, column: 5)
!7956 = distinct !DILexicalBlock(scope: !7946, file: !78, line: 252, column: 34)
!7957 = !DILocation(line: 253, column: 5, scope: !7956)
!7958 = !DILocation(line: 253, column: 5, scope: !7959)
!7959 = !DILexicalBlockFile(scope: !7960, file: !78, discriminator: 17)
!7960 = distinct !DILexicalBlock(scope: !7955, file: !78, line: 253, column: 5)
!7961 = !DILocation(line: 253, column: 5, scope: !7962)
!7962 = !DILexicalBlockFile(scope: !7955, file: !78, discriminator: 18)
!7963 = !DILocation(line: 253, column: 5, scope: !7964)
!7964 = !DILexicalBlockFile(scope: !7956, file: !78, discriminator: 19)
!7965 = !DILocation(line: 253, column: 5, scope: !7966)
!7966 = !DILexicalBlockFile(scope: !7967, file: !78, discriminator: 20)
!7967 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 253, column: 5)
!7968 = !DILocation(line: 253, column: 5, scope: !7969)
!7969 = !DILexicalBlockFile(scope: !7967, file: !78, discriminator: 21)
!7970 = !DILocation(line: 253, column: 5, scope: !7971)
!7971 = !DILexicalBlockFile(scope: !7972, file: !78, discriminator: 22)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !78, line: 253, column: 5)
!7973 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 253, column: 5)
!7974 = !DILocation(line: 253, column: 5, scope: !7975)
!7975 = !DILexicalBlockFile(scope: !7976, file: !78, discriminator: 23)
!7976 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 253, column: 5)
!7977 = !DILocation(line: 253, column: 5, scope: !7978)
!7978 = !DILexicalBlockFile(scope: !7976, file: !78, discriminator: 24)
!7979 = !DILocation(line: 253, column: 5, scope: !7980)
!7980 = !DILexicalBlockFile(scope: !7981, file: !78, discriminator: 25)
!7981 = distinct !DILexicalBlock(scope: !7982, file: !78, line: 253, column: 5)
!7982 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 253, column: 5)
!7983 = !DILocation(line: 253, column: 5, scope: !7984)
!7984 = !DILexicalBlockFile(scope: !7985, file: !78, discriminator: 26)
!7985 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 253, column: 5)
!7986 = !DILocation(line: 253, column: 5, scope: !7987)
!7987 = !DILexicalBlockFile(scope: !7985, file: !78, discriminator: 27)
!7988 = !DILocation(line: 253, column: 5, scope: !7989)
!7989 = !DILexicalBlockFile(scope: !7990, file: !78, discriminator: 28)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !78, line: 253, column: 5)
!7991 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 253, column: 5)
!7992 = !DILocation(line: 255, column: 34, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 255, column: 11)
!7994 = !DILocation(line: 255, column: 39, scope: !7993)
!7995 = !DILocation(line: 255, column: 47, scope: !7993)
!7996 = !DILocation(line: 255, column: 12, scope: !7993)
!7997 = !DILocation(line: 255, column: 11, scope: !7956)
!7998 = !DILocation(line: 256, column: 23, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7993, file: !78, line: 255, column: 59)
!8000 = !DILocation(line: 256, column: 10, scope: !7999)
!8001 = !DILocation(line: 256, column: 21, scope: !7999)
!8002 = !DILocation(line: 257, column: 9, scope: !7999)
!8003 = !DILocation(line: 259, column: 11, scope: !7956)
!8004 = !DILocation(line: 260, column: 7, scope: !7956)
!8005 = !DILocation(line: 260, column: 14, scope: !8006)
!8006 = !DILexicalBlockFile(scope: !7956, file: !78, discriminator: 3)
!8007 = !DILocation(line: 260, column: 7, scope: !8006)
!8008 = !DILocation(line: 261, column: 17, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 260, column: 39)
!8010 = !DILocation(line: 261, column: 17, scope: !8011)
!8011 = !DILexicalBlockFile(scope: !8009, file: !78, discriminator: 1)
!8012 = !DILocation(line: 261, column: 17, scope: !8013)
!8013 = !DILexicalBlockFile(scope: !8009, file: !78, discriminator: 2)
!8014 = !DILocation(line: 261, column: 17, scope: !8015)
!8015 = !DILexicalBlockFile(scope: !8009, file: !78, discriminator: 3)
!8016 = !DILocation(line: 261, column: 9, scope: !8015)
!8017 = !DILocation(line: 262, column: 9, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8019, file: !78, line: 262, column: 9)
!8019 = distinct !DILexicalBlock(scope: !8009, file: !78, line: 261, column: 38)
!8020 = !DILocation(line: 262, column: 9, scope: !8019)
!8021 = !DILocation(line: 262, column: 9, scope: !8022)
!8022 = !DILexicalBlockFile(scope: !8018, file: !78, discriminator: 16)
!8023 = !DILocation(line: 262, column: 9, scope: !8024)
!8024 = !DILexicalBlockFile(scope: !8019, file: !78, discriminator: 17)
!8025 = !DILocation(line: 262, column: 9, scope: !8026)
!8026 = !DILexicalBlockFile(scope: !8027, file: !78, discriminator: 18)
!8027 = distinct !DILexicalBlock(scope: !8019, file: !78, line: 262, column: 9)
!8028 = !DILocation(line: 262, column: 9, scope: !8029)
!8029 = !DILexicalBlockFile(scope: !8027, file: !78, discriminator: 19)
!8030 = !DILocation(line: 262, column: 9, scope: !8031)
!8031 = !DILexicalBlockFile(scope: !8019, file: !78, discriminator: 20)
!8032 = !DILocation(line: 262, column: 9, scope: !8033)
!8033 = !DILexicalBlockFile(scope: !8034, file: !78, discriminator: 21)
!8034 = distinct !DILexicalBlock(scope: !8019, file: !78, line: 262, column: 9)
!8035 = !DILocation(line: 262, column: 9, scope: !8036)
!8036 = !DILexicalBlockFile(scope: !8034, file: !78, discriminator: 22)
!8037 = !DILocation(line: 262, column: 9, scope: !8038)
!8038 = !DILexicalBlockFile(scope: !8019, file: !78, discriminator: 23)
!8039 = !DILocation(line: 262, column: 9, scope: !8040)
!8040 = !DILexicalBlockFile(scope: !8019, file: !78, discriminator: 24)
!8041 = !DILocation(line: 264, column: 15, scope: !8019)
!8042 = !DILocation(line: 265, column: 11, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8044, file: !78, line: 265, column: 11)
!8044 = distinct !DILexicalBlock(scope: !8019, file: !78, line: 265, column: 11)
!8045 = !DILocation(line: 265, column: 11, scope: !8044)
!8046 = !DILocation(line: 265, column: 11, scope: !8047)
!8047 = !DILexicalBlockFile(scope: !8048, file: !78, discriminator: 2)
!8048 = distinct !DILexicalBlock(scope: !8043, file: !78, line: 265, column: 11)
!8049 = !DILocation(line: 266, column: 15, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8019, file: !78, line: 266, column: 15)
!8051 = !DILocation(line: 266, column: 15, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !8050, file: !78, discriminator: 1)
!8053 = !DILocation(line: 267, column: 27, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8050, file: !78, line: 266, column: 49)
!8055 = !DILocation(line: 267, column: 31, scope: !8054)
!8056 = !DILocation(line: 267, column: 14, scope: !8054)
!8057 = !DILocation(line: 267, column: 25, scope: !8054)
!8058 = !DILocation(line: 268, column: 20, scope: !8054)
!8059 = !DILocation(line: 268, column: 13, scope: !8054)
!8060 = !DILocation(line: 270, column: 11, scope: !8019)
!8061 = !DILocation(line: 272, column: 15, scope: !8019)
!8062 = !DILocation(line: 273, column: 11, scope: !8019)
!8063 = !DILocation(line: 260, column: 7, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !7956, file: !78, discriminator: 4)
!8065 = !DILocation(line: 276, column: 7, scope: !7956)
!8066 = !DILocation(line: 278, column: 34, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 278, column: 11)
!8068 = !DILocation(line: 278, column: 39, scope: !8067)
!8069 = !DILocation(line: 278, column: 47, scope: !8067)
!8070 = !DILocation(line: 278, column: 12, scope: !8067)
!8071 = !DILocation(line: 278, column: 11, scope: !7956)
!8072 = !DILocation(line: 279, column: 23, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8067, file: !78, line: 278, column: 59)
!8074 = !DILocation(line: 279, column: 10, scope: !8073)
!8075 = !DILocation(line: 279, column: 21, scope: !8073)
!8076 = !DILocation(line: 280, column: 9, scope: !8073)
!8077 = !DILocation(line: 282, column: 11, scope: !7956)
!8078 = !DILocation(line: 283, column: 7, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !78, line: 283, column: 7)
!8080 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 283, column: 7)
!8081 = !DILocation(line: 283, column: 7, scope: !8080)
!8082 = !DILocation(line: 283, column: 7, scope: !8083)
!8083 = !DILexicalBlockFile(scope: !8084, file: !78, discriminator: 2)
!8084 = distinct !DILexicalBlock(scope: !8079, file: !78, line: 283, column: 7)
!8085 = !DILocation(line: 284, column: 11, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !7956, file: !78, line: 284, column: 11)
!8087 = !DILocation(line: 284, column: 11, scope: !8088)
!8088 = !DILexicalBlockFile(scope: !8086, file: !78, discriminator: 2)
!8089 = !DILocation(line: 285, column: 23, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8086, file: !78, line: 284, column: 45)
!8091 = !DILocation(line: 285, column: 27, scope: !8090)
!8092 = !DILocation(line: 285, column: 10, scope: !8090)
!8093 = !DILocation(line: 285, column: 21, scope: !8090)
!8094 = !DILocation(line: 286, column: 16, scope: !8090)
!8095 = !DILocation(line: 286, column: 9, scope: !8090)
!8096 = !DILocation(line: 284, column: 11, scope: !8097)
!8097 = !DILexicalBlockFile(scope: !8086, file: !78, discriminator: 3)
!8098 = !DILocation(line: 290, column: 21, scope: !7956)
!8099 = !DILocation(line: 290, column: 8, scope: !7956)
!8100 = !DILocation(line: 290, column: 19, scope: !7956)
!8101 = !DILocation(line: 291, column: 7, scope: !7956)
!8102 = !DILocation(line: 251, column: 3, scope: !8103)
!8103 = !DILexicalBlockFile(scope: !304, file: !78, discriminator: 4)
!8104 = !DILocation(line: 294, column: 3, scope: !304)
!8105 = !DILocation(line: 295, column: 1, scope: !304)
!8106 = !DILocalVariable(name: "enc", arg: 1, scope: !306, file: !78, line: 881, type: !82)
!8107 = !DILocation(line: 881, column: 37, scope: !306)
!8108 = !DILocalVariable(name: "ptr", arg: 2, scope: !306, file: !78, line: 881, type: !93)
!8109 = !DILocation(line: 881, column: 54, scope: !306)
!8110 = !DILocalVariable(name: "end", arg: 3, scope: !306, file: !78, line: 881, type: !93)
!8111 = !DILocation(line: 881, column: 71, scope: !306)
!8112 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !306, file: !78, line: 882, type: !95)
!8113 = !DILocation(line: 882, column: 34, scope: !306)
!8114 = !DILocation(line: 884, column: 3, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !78, line: 884, column: 3)
!8116 = distinct !DILexicalBlock(scope: !306, file: !78, line: 884, column: 3)
!8117 = !DILocation(line: 884, column: 3, scope: !8116)
!8118 = !DILocation(line: 884, column: 3, scope: !8119)
!8119 = !DILexicalBlockFile(scope: !8120, file: !78, discriminator: 2)
!8120 = distinct !DILexicalBlock(scope: !8115, file: !78, line: 884, column: 3)
!8121 = !DILocation(line: 885, column: 11, scope: !306)
!8122 = !DILocation(line: 885, column: 11, scope: !8123)
!8123 = !DILexicalBlockFile(scope: !306, file: !78, discriminator: 1)
!8124 = !DILocation(line: 885, column: 11, scope: !8125)
!8125 = !DILexicalBlockFile(scope: !306, file: !78, discriminator: 2)
!8126 = !DILocation(line: 885, column: 11, scope: !8127)
!8127 = !DILexicalBlockFile(scope: !306, file: !78, discriminator: 3)
!8128 = !DILocation(line: 885, column: 3, scope: !8127)
!8129 = !DILocation(line: 886, column: 3, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !78, line: 886, column: 3)
!8131 = distinct !DILexicalBlock(scope: !306, file: !78, line: 885, column: 32)
!8132 = !DILocation(line: 886, column: 3, scope: !8131)
!8133 = !DILocation(line: 886, column: 3, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !8135, file: !78, discriminator: 17)
!8135 = distinct !DILexicalBlock(scope: !8130, file: !78, line: 886, column: 3)
!8136 = !DILocation(line: 886, column: 3, scope: !8137)
!8137 = !DILexicalBlockFile(scope: !8130, file: !78, discriminator: 18)
!8138 = !DILocation(line: 886, column: 3, scope: !8139)
!8139 = !DILexicalBlockFile(scope: !8131, file: !78, discriminator: 19)
!8140 = !DILocation(line: 886, column: 3, scope: !8141)
!8141 = !DILexicalBlockFile(scope: !8142, file: !78, discriminator: 20)
!8142 = distinct !DILexicalBlock(scope: !8131, file: !78, line: 886, column: 3)
!8143 = !DILocation(line: 886, column: 3, scope: !8144)
!8144 = !DILexicalBlockFile(scope: !8142, file: !78, discriminator: 21)
!8145 = !DILocation(line: 886, column: 3, scope: !8146)
!8146 = !DILexicalBlockFile(scope: !8147, file: !78, discriminator: 22)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !78, line: 886, column: 3)
!8148 = distinct !DILexicalBlock(scope: !8131, file: !78, line: 886, column: 3)
!8149 = !DILocation(line: 886, column: 3, scope: !8150)
!8150 = !DILexicalBlockFile(scope: !8151, file: !78, discriminator: 23)
!8151 = distinct !DILexicalBlock(scope: !8131, file: !78, line: 886, column: 3)
!8152 = !DILocation(line: 886, column: 3, scope: !8153)
!8153 = !DILexicalBlockFile(scope: !8151, file: !78, discriminator: 24)
!8154 = !DILocation(line: 886, column: 3, scope: !8155)
!8155 = !DILexicalBlockFile(scope: !8156, file: !78, discriminator: 25)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !78, line: 886, column: 3)
!8157 = distinct !DILexicalBlock(scope: !8131, file: !78, line: 886, column: 3)
!8158 = !DILocation(line: 886, column: 3, scope: !8159)
!8159 = !DILexicalBlockFile(scope: !8160, file: !78, discriminator: 26)
!8160 = distinct !DILexicalBlock(scope: !8131, file: !78, line: 886, column: 3)
!8161 = !DILocation(line: 886, column: 3, scope: !8162)
!8162 = !DILexicalBlockFile(scope: !8160, file: !78, discriminator: 27)
!8163 = !DILocation(line: 886, column: 3, scope: !8164)
!8164 = !DILexicalBlockFile(scope: !8165, file: !78, discriminator: 28)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !78, line: 886, column: 3)
!8166 = distinct !DILexicalBlock(scope: !8131, file: !78, line: 886, column: 3)
!8167 = !DILocation(line: 888, column: 19, scope: !8131)
!8168 = !DILocation(line: 888, column: 6, scope: !8131)
!8169 = !DILocation(line: 888, column: 17, scope: !8131)
!8170 = !DILocation(line: 889, column: 5, scope: !8131)
!8171 = !DILocation(line: 891, column: 19, scope: !8131)
!8172 = !DILocation(line: 891, column: 6, scope: !8131)
!8173 = !DILocation(line: 891, column: 17, scope: !8131)
!8174 = !DILocation(line: 892, column: 5, scope: !8131)
!8175 = !DILocation(line: 894, column: 3, scope: !306)
!8176 = !DILocation(line: 894, column: 10, scope: !8127)
!8177 = !DILocation(line: 894, column: 3, scope: !8127)
!8178 = !DILocation(line: 895, column: 13, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !306, file: !78, line: 894, column: 35)
!8180 = !DILocation(line: 895, column: 13, scope: !8181)
!8181 = !DILexicalBlockFile(scope: !8179, file: !78, discriminator: 1)
!8182 = !DILocation(line: 895, column: 13, scope: !8183)
!8183 = !DILexicalBlockFile(scope: !8179, file: !78, discriminator: 2)
!8184 = !DILocation(line: 895, column: 13, scope: !8185)
!8185 = !DILexicalBlockFile(scope: !8179, file: !78, discriminator: 3)
!8186 = !DILocation(line: 895, column: 5, scope: !8185)
!8187 = !DILocation(line: 896, column: 5, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !78, line: 896, column: 5)
!8189 = distinct !DILexicalBlock(scope: !8179, file: !78, line: 895, column: 34)
!8190 = !DILocation(line: 896, column: 5, scope: !8189)
!8191 = !DILocation(line: 896, column: 5, scope: !8192)
!8192 = !DILexicalBlockFile(scope: !8193, file: !78, discriminator: 17)
!8193 = distinct !DILexicalBlock(scope: !8188, file: !78, line: 896, column: 5)
!8194 = !DILocation(line: 896, column: 5, scope: !8195)
!8195 = !DILexicalBlockFile(scope: !8188, file: !78, discriminator: 18)
!8196 = !DILocation(line: 896, column: 5, scope: !8197)
!8197 = !DILexicalBlockFile(scope: !8189, file: !78, discriminator: 19)
!8198 = !DILocation(line: 896, column: 5, scope: !8199)
!8199 = !DILexicalBlockFile(scope: !8200, file: !78, discriminator: 20)
!8200 = distinct !DILexicalBlock(scope: !8189, file: !78, line: 896, column: 5)
!8201 = !DILocation(line: 896, column: 5, scope: !8202)
!8202 = !DILexicalBlockFile(scope: !8200, file: !78, discriminator: 21)
!8203 = !DILocation(line: 896, column: 5, scope: !8204)
!8204 = !DILexicalBlockFile(scope: !8205, file: !78, discriminator: 22)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !78, line: 896, column: 5)
!8206 = distinct !DILexicalBlock(scope: !8189, file: !78, line: 896, column: 5)
!8207 = !DILocation(line: 896, column: 5, scope: !8208)
!8208 = !DILexicalBlockFile(scope: !8209, file: !78, discriminator: 23)
!8209 = distinct !DILexicalBlock(scope: !8189, file: !78, line: 896, column: 5)
!8210 = !DILocation(line: 896, column: 5, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !8209, file: !78, discriminator: 24)
!8212 = !DILocation(line: 896, column: 5, scope: !8213)
!8213 = !DILexicalBlockFile(scope: !8214, file: !78, discriminator: 25)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !78, line: 896, column: 5)
!8215 = distinct !DILexicalBlock(scope: !8189, file: !78, line: 896, column: 5)
!8216 = !DILocation(line: 896, column: 5, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !8218, file: !78, discriminator: 26)
!8218 = distinct !DILexicalBlock(scope: !8189, file: !78, line: 896, column: 5)
!8219 = !DILocation(line: 896, column: 5, scope: !8220)
!8220 = !DILexicalBlockFile(scope: !8218, file: !78, discriminator: 27)
!8221 = !DILocation(line: 896, column: 5, scope: !8222)
!8222 = !DILexicalBlockFile(scope: !8223, file: !78, discriminator: 28)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !78, line: 896, column: 5)
!8224 = distinct !DILexicalBlock(scope: !8189, file: !78, line: 896, column: 5)
!8225 = !DILocation(line: 898, column: 21, scope: !8189)
!8226 = !DILocation(line: 898, column: 25, scope: !8189)
!8227 = !DILocation(line: 898, column: 8, scope: !8189)
!8228 = !DILocation(line: 898, column: 19, scope: !8189)
!8229 = !DILocation(line: 899, column: 7, scope: !8189)
!8230 = !DILocation(line: 901, column: 21, scope: !8189)
!8231 = !DILocation(line: 901, column: 8, scope: !8189)
!8232 = !DILocation(line: 901, column: 19, scope: !8189)
!8233 = !DILocation(line: 902, column: 7, scope: !8189)
!8234 = !DILocation(line: 894, column: 3, scope: !8235)
!8235 = !DILexicalBlockFile(scope: !306, file: !78, discriminator: 4)
!8236 = !DILocation(line: 905, column: 3, scope: !306)
!8237 = !DILocation(line: 906, column: 1, scope: !306)
!8238 = !DILocalVariable(name: "enc", arg: 1, scope: !307, file: !78, line: 909, type: !82)
!8239 = !DILocation(line: 909, column: 39, scope: !307)
!8240 = !DILocalVariable(name: "ptr", arg: 2, scope: !307, file: !78, line: 909, type: !93)
!8241 = !DILocation(line: 909, column: 56, scope: !307)
!8242 = !DILocalVariable(name: "end", arg: 3, scope: !307, file: !78, line: 909, type: !93)
!8243 = !DILocation(line: 909, column: 73, scope: !307)
!8244 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !307, file: !78, line: 910, type: !95)
!8245 = !DILocation(line: 910, column: 36, scope: !307)
!8246 = !DILocation(line: 912, column: 3, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !78, line: 912, column: 3)
!8248 = distinct !DILexicalBlock(scope: !307, file: !78, line: 912, column: 3)
!8249 = !DILocation(line: 912, column: 3, scope: !8248)
!8250 = !DILocation(line: 912, column: 3, scope: !8251)
!8251 = !DILexicalBlockFile(scope: !8252, file: !78, discriminator: 2)
!8252 = distinct !DILexicalBlock(scope: !8247, file: !78, line: 912, column: 3)
!8253 = !DILocation(line: 913, column: 11, scope: !307)
!8254 = !DILocation(line: 913, column: 11, scope: !8255)
!8255 = !DILexicalBlockFile(scope: !307, file: !78, discriminator: 1)
!8256 = !DILocation(line: 913, column: 11, scope: !8257)
!8257 = !DILexicalBlockFile(scope: !307, file: !78, discriminator: 2)
!8258 = !DILocation(line: 913, column: 11, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !307, file: !78, discriminator: 3)
!8260 = !DILocation(line: 913, column: 3, scope: !8259)
!8261 = !DILocation(line: 914, column: 3, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !78, line: 914, column: 3)
!8263 = distinct !DILexicalBlock(scope: !307, file: !78, line: 913, column: 32)
!8264 = !DILocation(line: 914, column: 3, scope: !8263)
!8265 = !DILocation(line: 914, column: 3, scope: !8266)
!8266 = !DILexicalBlockFile(scope: !8267, file: !78, discriminator: 17)
!8267 = distinct !DILexicalBlock(scope: !8262, file: !78, line: 914, column: 3)
!8268 = !DILocation(line: 914, column: 3, scope: !8269)
!8269 = !DILexicalBlockFile(scope: !8262, file: !78, discriminator: 18)
!8270 = !DILocation(line: 914, column: 3, scope: !8271)
!8271 = !DILexicalBlockFile(scope: !8263, file: !78, discriminator: 19)
!8272 = !DILocation(line: 914, column: 3, scope: !8273)
!8273 = !DILexicalBlockFile(scope: !8274, file: !78, discriminator: 20)
!8274 = distinct !DILexicalBlock(scope: !8263, file: !78, line: 914, column: 3)
!8275 = !DILocation(line: 914, column: 3, scope: !8276)
!8276 = !DILexicalBlockFile(scope: !8274, file: !78, discriminator: 21)
!8277 = !DILocation(line: 914, column: 3, scope: !8278)
!8278 = !DILexicalBlockFile(scope: !8279, file: !78, discriminator: 22)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !78, line: 914, column: 3)
!8280 = distinct !DILexicalBlock(scope: !8263, file: !78, line: 914, column: 3)
!8281 = !DILocation(line: 914, column: 3, scope: !8282)
!8282 = !DILexicalBlockFile(scope: !8283, file: !78, discriminator: 23)
!8283 = distinct !DILexicalBlock(scope: !8263, file: !78, line: 914, column: 3)
!8284 = !DILocation(line: 914, column: 3, scope: !8285)
!8285 = !DILexicalBlockFile(scope: !8283, file: !78, discriminator: 24)
!8286 = !DILocation(line: 914, column: 3, scope: !8287)
!8287 = !DILexicalBlockFile(scope: !8288, file: !78, discriminator: 25)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !78, line: 914, column: 3)
!8289 = distinct !DILexicalBlock(scope: !8263, file: !78, line: 914, column: 3)
!8290 = !DILocation(line: 914, column: 3, scope: !8291)
!8291 = !DILexicalBlockFile(scope: !8292, file: !78, discriminator: 26)
!8292 = distinct !DILexicalBlock(scope: !8263, file: !78, line: 914, column: 3)
!8293 = !DILocation(line: 914, column: 3, scope: !8294)
!8294 = !DILexicalBlockFile(scope: !8292, file: !78, discriminator: 27)
!8295 = !DILocation(line: 914, column: 3, scope: !8296)
!8296 = !DILexicalBlockFile(scope: !8297, file: !78, discriminator: 28)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !78, line: 914, column: 3)
!8298 = distinct !DILexicalBlock(scope: !8263, file: !78, line: 914, column: 3)
!8299 = !DILocation(line: 916, column: 19, scope: !8263)
!8300 = !DILocation(line: 916, column: 6, scope: !8263)
!8301 = !DILocation(line: 916, column: 17, scope: !8263)
!8302 = !DILocation(line: 917, column: 5, scope: !8263)
!8303 = !DILocation(line: 919, column: 3, scope: !307)
!8304 = !DILocation(line: 919, column: 10, scope: !8259)
!8305 = !DILocation(line: 919, column: 3, scope: !8259)
!8306 = !DILocation(line: 920, column: 13, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !307, file: !78, line: 919, column: 35)
!8308 = !DILocation(line: 920, column: 13, scope: !8309)
!8309 = !DILexicalBlockFile(scope: !8307, file: !78, discriminator: 1)
!8310 = !DILocation(line: 920, column: 13, scope: !8311)
!8311 = !DILexicalBlockFile(scope: !8307, file: !78, discriminator: 2)
!8312 = !DILocation(line: 920, column: 13, scope: !8313)
!8313 = !DILexicalBlockFile(scope: !8307, file: !78, discriminator: 3)
!8314 = !DILocation(line: 920, column: 5, scope: !8313)
!8315 = !DILocation(line: 921, column: 5, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !78, line: 921, column: 5)
!8317 = distinct !DILexicalBlock(scope: !8307, file: !78, line: 920, column: 34)
!8318 = !DILocation(line: 921, column: 5, scope: !8317)
!8319 = !DILocation(line: 921, column: 5, scope: !8320)
!8320 = !DILexicalBlockFile(scope: !8321, file: !78, discriminator: 17)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !78, line: 921, column: 5)
!8322 = !DILocation(line: 921, column: 5, scope: !8323)
!8323 = !DILexicalBlockFile(scope: !8316, file: !78, discriminator: 18)
!8324 = !DILocation(line: 921, column: 5, scope: !8325)
!8325 = !DILexicalBlockFile(scope: !8317, file: !78, discriminator: 19)
!8326 = !DILocation(line: 921, column: 5, scope: !8327)
!8327 = !DILexicalBlockFile(scope: !8328, file: !78, discriminator: 20)
!8328 = distinct !DILexicalBlock(scope: !8317, file: !78, line: 921, column: 5)
!8329 = !DILocation(line: 921, column: 5, scope: !8330)
!8330 = !DILexicalBlockFile(scope: !8328, file: !78, discriminator: 21)
!8331 = !DILocation(line: 921, column: 5, scope: !8332)
!8332 = !DILexicalBlockFile(scope: !8333, file: !78, discriminator: 22)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !78, line: 921, column: 5)
!8334 = distinct !DILexicalBlock(scope: !8317, file: !78, line: 921, column: 5)
!8335 = !DILocation(line: 921, column: 5, scope: !8336)
!8336 = !DILexicalBlockFile(scope: !8337, file: !78, discriminator: 23)
!8337 = distinct !DILexicalBlock(scope: !8317, file: !78, line: 921, column: 5)
!8338 = !DILocation(line: 921, column: 5, scope: !8339)
!8339 = !DILexicalBlockFile(scope: !8337, file: !78, discriminator: 24)
!8340 = !DILocation(line: 921, column: 5, scope: !8341)
!8341 = !DILexicalBlockFile(scope: !8342, file: !78, discriminator: 25)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !78, line: 921, column: 5)
!8343 = distinct !DILexicalBlock(scope: !8317, file: !78, line: 921, column: 5)
!8344 = !DILocation(line: 921, column: 5, scope: !8345)
!8345 = !DILexicalBlockFile(scope: !8346, file: !78, discriminator: 26)
!8346 = distinct !DILexicalBlock(scope: !8317, file: !78, line: 921, column: 5)
!8347 = !DILocation(line: 921, column: 5, scope: !8348)
!8348 = !DILexicalBlockFile(scope: !8346, file: !78, discriminator: 27)
!8349 = !DILocation(line: 921, column: 5, scope: !8350)
!8350 = !DILexicalBlockFile(scope: !8351, file: !78, discriminator: 28)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !78, line: 921, column: 5)
!8352 = distinct !DILexicalBlock(scope: !8317, file: !78, line: 921, column: 5)
!8353 = !DILocation(line: 924, column: 21, scope: !8317)
!8354 = !DILocation(line: 924, column: 8, scope: !8317)
!8355 = !DILocation(line: 924, column: 19, scope: !8317)
!8356 = !DILocation(line: 925, column: 7, scope: !8317)
!8357 = !DILocation(line: 927, column: 21, scope: !8317)
!8358 = !DILocation(line: 927, column: 8, scope: !8317)
!8359 = !DILocation(line: 927, column: 19, scope: !8317)
!8360 = !DILocation(line: 928, column: 7, scope: !8317)
!8361 = !DILocation(line: 919, column: 3, scope: !8362)
!8362 = !DILexicalBlockFile(scope: !307, file: !78, discriminator: 4)
!8363 = !DILocation(line: 931, column: 3, scope: !307)
!8364 = !DILocation(line: 932, column: 1, scope: !307)
!8365 = !DILocalVariable(name: "enc", arg: 1, scope: !303, file: !78, line: 111, type: !82)
!8366 = !DILocation(line: 111, column: 37, scope: !303)
!8367 = !DILocalVariable(name: "ptr", arg: 2, scope: !303, file: !78, line: 111, type: !93)
!8368 = !DILocation(line: 111, column: 54, scope: !303)
!8369 = !DILocalVariable(name: "end", arg: 3, scope: !303, file: !78, line: 112, type: !93)
!8370 = !DILocation(line: 112, column: 33, scope: !303)
!8371 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !303, file: !78, line: 112, type: !95)
!8372 = !DILocation(line: 112, column: 51, scope: !303)
!8373 = !DILocation(line: 114, column: 7, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !303, file: !78, line: 114, column: 7)
!8375 = !DILocation(line: 114, column: 7, scope: !303)
!8376 = !DILocation(line: 115, column: 10, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !78, line: 115, column: 9)
!8378 = distinct !DILexicalBlock(scope: !8374, file: !78, line: 114, column: 32)
!8379 = !DILocation(line: 115, column: 10, scope: !8380)
!8380 = !DILexicalBlockFile(scope: !8377, file: !78, discriminator: 1)
!8381 = !DILocation(line: 115, column: 9, scope: !8380)
!8382 = !DILocation(line: 116, column: 21, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8377, file: !78, line: 115, column: 47)
!8384 = !DILocation(line: 116, column: 8, scope: !8383)
!8385 = !DILocation(line: 116, column: 19, scope: !8383)
!8386 = !DILocation(line: 117, column: 7, scope: !8383)
!8387 = !DILocation(line: 119, column: 9, scope: !8378)
!8388 = !DILocation(line: 120, column: 5, scope: !8378)
!8389 = !DILocation(line: 120, column: 12, scope: !8390)
!8390 = !DILexicalBlockFile(scope: !8378, file: !78, discriminator: 3)
!8391 = !DILocation(line: 120, column: 5, scope: !8390)
!8392 = !DILocation(line: 121, column: 15, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8378, file: !78, line: 120, column: 37)
!8394 = !DILocation(line: 121, column: 15, scope: !8395)
!8395 = !DILexicalBlockFile(scope: !8393, file: !78, discriminator: 1)
!8396 = !DILocation(line: 121, column: 15, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !8393, file: !78, discriminator: 2)
!8398 = !DILocation(line: 121, column: 15, scope: !8399)
!8399 = !DILexicalBlockFile(scope: !8393, file: !78, discriminator: 3)
!8400 = !DILocation(line: 121, column: 7, scope: !8399)
!8401 = !DILocation(line: 122, column: 7, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !78, line: 122, column: 7)
!8403 = distinct !DILexicalBlock(scope: !8393, file: !78, line: 121, column: 36)
!8404 = !DILocation(line: 122, column: 7, scope: !8403)
!8405 = !DILocation(line: 122, column: 7, scope: !8406)
!8406 = !DILexicalBlockFile(scope: !8402, file: !78, discriminator: 16)
!8407 = !DILocation(line: 122, column: 7, scope: !8408)
!8408 = !DILexicalBlockFile(scope: !8403, file: !78, discriminator: 17)
!8409 = !DILocation(line: 122, column: 7, scope: !8410)
!8410 = !DILexicalBlockFile(scope: !8411, file: !78, discriminator: 18)
!8411 = distinct !DILexicalBlock(scope: !8403, file: !78, line: 122, column: 7)
!8412 = !DILocation(line: 122, column: 7, scope: !8413)
!8413 = !DILexicalBlockFile(scope: !8411, file: !78, discriminator: 19)
!8414 = !DILocation(line: 122, column: 7, scope: !8415)
!8415 = !DILexicalBlockFile(scope: !8403, file: !78, discriminator: 20)
!8416 = !DILocation(line: 122, column: 7, scope: !8417)
!8417 = !DILexicalBlockFile(scope: !8418, file: !78, discriminator: 21)
!8418 = distinct !DILexicalBlock(scope: !8403, file: !78, line: 122, column: 7)
!8419 = !DILocation(line: 122, column: 7, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !8418, file: !78, discriminator: 22)
!8421 = !DILocation(line: 122, column: 7, scope: !8422)
!8422 = !DILexicalBlockFile(scope: !8403, file: !78, discriminator: 23)
!8423 = !DILocation(line: 122, column: 7, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !8403, file: !78, discriminator: 24)
!8425 = !DILocation(line: 124, column: 13, scope: !8403)
!8426 = !DILocation(line: 125, column: 9, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !78, line: 125, column: 9)
!8428 = distinct !DILexicalBlock(scope: !8403, file: !78, line: 125, column: 9)
!8429 = !DILocation(line: 125, column: 9, scope: !8428)
!8430 = !DILocation(line: 125, column: 9, scope: !8431)
!8431 = !DILexicalBlockFile(scope: !8432, file: !78, discriminator: 2)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !78, line: 125, column: 9)
!8433 = !DILocation(line: 126, column: 13, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8403, file: !78, line: 126, column: 13)
!8435 = !DILocation(line: 126, column: 13, scope: !8436)
!8436 = !DILexicalBlockFile(scope: !8434, file: !78, discriminator: 1)
!8437 = !DILocation(line: 127, column: 15, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8434, file: !78, line: 126, column: 50)
!8439 = !DILocation(line: 128, column: 11, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !78, line: 128, column: 11)
!8441 = distinct !DILexicalBlock(scope: !8438, file: !78, line: 128, column: 11)
!8442 = !DILocation(line: 128, column: 11, scope: !8441)
!8443 = !DILocation(line: 128, column: 11, scope: !8444)
!8444 = !DILexicalBlockFile(scope: !8445, file: !78, discriminator: 2)
!8445 = distinct !DILexicalBlock(scope: !8440, file: !78, line: 128, column: 11)
!8446 = !DILocation(line: 129, column: 16, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8438, file: !78, line: 129, column: 15)
!8448 = !DILocation(line: 129, column: 16, scope: !8449)
!8449 = !DILexicalBlockFile(scope: !8447, file: !78, discriminator: 1)
!8450 = !DILocation(line: 129, column: 15, scope: !8449)
!8451 = !DILocation(line: 130, column: 27, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8447, file: !78, line: 129, column: 50)
!8453 = !DILocation(line: 130, column: 14, scope: !8452)
!8454 = !DILocation(line: 130, column: 25, scope: !8452)
!8455 = !DILocation(line: 131, column: 13, scope: !8452)
!8456 = !DILocation(line: 133, column: 25, scope: !8438)
!8457 = !DILocation(line: 133, column: 29, scope: !8438)
!8458 = !DILocation(line: 133, column: 12, scope: !8438)
!8459 = !DILocation(line: 133, column: 23, scope: !8438)
!8460 = !DILocation(line: 134, column: 11, scope: !8438)
!8461 = !DILocation(line: 136, column: 9, scope: !8403)
!8462 = !DILocation(line: 138, column: 13, scope: !8403)
!8463 = !DILocation(line: 139, column: 9, scope: !8403)
!8464 = !DILocation(line: 120, column: 5, scope: !8465)
!8465 = !DILexicalBlockFile(scope: !8378, file: !78, discriminator: 4)
!8466 = !DILocation(line: 142, column: 3, scope: !8378)
!8467 = !DILocation(line: 143, column: 3, scope: !303)
!8468 = !DILocation(line: 144, column: 1, scope: !303)
!8469 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !305, file: !78, line: 194, type: !82)
!8470 = !DILocation(line: 194, column: 39, scope: !305)
!8471 = !DILocalVariable(name: "ptr", arg: 2, scope: !305, file: !78, line: 194, type: !93)
!8472 = !DILocation(line: 194, column: 66, scope: !305)
!8473 = !DILocalVariable(name: "end", arg: 3, scope: !305, file: !78, line: 195, type: !93)
!8474 = !DILocation(line: 195, column: 35, scope: !305)
!8475 = !DILocalVariable(name: "tokPtr", arg: 4, scope: !305, file: !78, line: 195, type: !233)
!8476 = !DILocation(line: 195, column: 45, scope: !305)
!8477 = !DILocalVariable(name: "upper", scope: !305, file: !78, line: 197, type: !7)
!8478 = !DILocation(line: 197, column: 7, scope: !305)
!8479 = !DILocation(line: 198, column: 4, scope: !305)
!8480 = !DILocation(line: 198, column: 11, scope: !305)
!8481 = !DILocation(line: 199, column: 7, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !305, file: !78, line: 199, column: 7)
!8483 = !DILocation(line: 199, column: 13, scope: !8482)
!8484 = !DILocation(line: 199, column: 11, scope: !8482)
!8485 = !DILocation(line: 199, column: 17, scope: !8482)
!8486 = !DILocation(line: 199, column: 7, scope: !305)
!8487 = !DILocation(line: 200, column: 5, scope: !8482)
!8488 = !DILocation(line: 201, column: 11, scope: !305)
!8489 = !DILocation(line: 201, column: 11, scope: !8490)
!8490 = !DILexicalBlockFile(scope: !305, file: !78, discriminator: 1)
!8491 = !DILocation(line: 201, column: 11, scope: !8492)
!8492 = !DILexicalBlockFile(scope: !305, file: !78, discriminator: 2)
!8493 = !DILocation(line: 201, column: 11, scope: !8494)
!8494 = !DILexicalBlockFile(scope: !305, file: !78, discriminator: 3)
!8495 = !DILocation(line: 201, column: 3, scope: !8494)
!8496 = !DILocation(line: 203, column: 5, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !305, file: !78, line: 201, column: 36)
!8498 = !DILocation(line: 205, column: 11, scope: !8497)
!8499 = !DILocation(line: 206, column: 5, scope: !8497)
!8500 = !DILocation(line: 208, column: 5, scope: !8497)
!8501 = !DILocation(line: 210, column: 7, scope: !305)
!8502 = !DILocation(line: 211, column: 11, scope: !305)
!8503 = !DILocation(line: 211, column: 11, scope: !8490)
!8504 = !DILocation(line: 211, column: 11, scope: !8492)
!8505 = !DILocation(line: 211, column: 11, scope: !8494)
!8506 = !DILocation(line: 211, column: 3, scope: !8494)
!8507 = !DILocation(line: 213, column: 5, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !305, file: !78, line: 211, column: 36)
!8509 = !DILocation(line: 215, column: 11, scope: !8508)
!8510 = !DILocation(line: 216, column: 5, scope: !8508)
!8511 = !DILocation(line: 218, column: 5, scope: !8508)
!8512 = !DILocation(line: 220, column: 7, scope: !305)
!8513 = !DILocation(line: 221, column: 11, scope: !305)
!8514 = !DILocation(line: 221, column: 11, scope: !8490)
!8515 = !DILocation(line: 221, column: 11, scope: !8492)
!8516 = !DILocation(line: 221, column: 11, scope: !8494)
!8517 = !DILocation(line: 221, column: 3, scope: !8494)
!8518 = !DILocation(line: 223, column: 5, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !305, file: !78, line: 221, column: 36)
!8520 = !DILocation(line: 225, column: 11, scope: !8519)
!8521 = !DILocation(line: 226, column: 5, scope: !8519)
!8522 = !DILocation(line: 228, column: 5, scope: !8519)
!8523 = !DILocation(line: 230, column: 7, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !305, file: !78, line: 230, column: 7)
!8525 = !DILocation(line: 230, column: 7, scope: !305)
!8526 = !DILocation(line: 231, column: 5, scope: !8524)
!8527 = !DILocation(line: 232, column: 4, scope: !305)
!8528 = !DILocation(line: 232, column: 11, scope: !305)
!8529 = !DILocation(line: 233, column: 3, scope: !305)
!8530 = !DILocation(line: 234, column: 1, scope: !305)
!8531 = !DILocalVariable(name: "enc", arg: 1, scope: !309, file: !78, line: 685, type: !82)
!8532 = !DILocation(line: 685, column: 32, scope: !309)
!8533 = !DILocalVariable(name: "ptr", arg: 2, scope: !309, file: !78, line: 685, type: !93)
!8534 = !DILocation(line: 685, column: 49, scope: !309)
!8535 = !DILocalVariable(name: "end", arg: 3, scope: !309, file: !78, line: 685, type: !93)
!8536 = !DILocation(line: 685, column: 66, scope: !309)
!8537 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !309, file: !78, line: 686, type: !95)
!8538 = !DILocation(line: 686, column: 29, scope: !309)
!8539 = !DILocation(line: 691, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !78, line: 691, column: 3)
!8541 = distinct !DILexicalBlock(scope: !309, file: !78, line: 691, column: 3)
!8542 = !DILocation(line: 691, column: 3, scope: !8541)
!8543 = !DILocation(line: 691, column: 3, scope: !8544)
!8544 = !DILexicalBlockFile(scope: !8545, file: !78, discriminator: 2)
!8545 = distinct !DILexicalBlock(scope: !8540, file: !78, line: 691, column: 3)
!8546 = !DILocation(line: 692, column: 11, scope: !309)
!8547 = !DILocation(line: 692, column: 11, scope: !8548)
!8548 = !DILexicalBlockFile(scope: !309, file: !78, discriminator: 1)
!8549 = !DILocation(line: 692, column: 11, scope: !8550)
!8550 = !DILexicalBlockFile(scope: !309, file: !78, discriminator: 2)
!8551 = !DILocation(line: 692, column: 11, scope: !8552)
!8552 = !DILexicalBlockFile(scope: !309, file: !78, discriminator: 3)
!8553 = !DILocation(line: 692, column: 3, scope: !8552)
!8554 = !DILocation(line: 693, column: 3, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 693, column: 3)
!8556 = distinct !DILexicalBlock(scope: !309, file: !78, line: 692, column: 32)
!8557 = !DILocation(line: 693, column: 3, scope: !8556)
!8558 = !DILocation(line: 693, column: 3, scope: !8559)
!8559 = !DILexicalBlockFile(scope: !8560, file: !78, discriminator: 17)
!8560 = distinct !DILexicalBlock(scope: !8555, file: !78, line: 693, column: 3)
!8561 = !DILocation(line: 693, column: 3, scope: !8562)
!8562 = !DILexicalBlockFile(scope: !8555, file: !78, discriminator: 18)
!8563 = !DILocation(line: 693, column: 3, scope: !8564)
!8564 = !DILexicalBlockFile(scope: !8556, file: !78, discriminator: 19)
!8565 = !DILocation(line: 693, column: 3, scope: !8566)
!8566 = !DILexicalBlockFile(scope: !8567, file: !78, discriminator: 20)
!8567 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 693, column: 3)
!8568 = !DILocation(line: 693, column: 3, scope: !8569)
!8569 = !DILexicalBlockFile(scope: !8567, file: !78, discriminator: 21)
!8570 = !DILocation(line: 693, column: 3, scope: !8571)
!8571 = !DILexicalBlockFile(scope: !8572, file: !78, discriminator: 22)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !78, line: 693, column: 3)
!8573 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 693, column: 3)
!8574 = !DILocation(line: 693, column: 3, scope: !8575)
!8575 = !DILexicalBlockFile(scope: !8576, file: !78, discriminator: 23)
!8576 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 693, column: 3)
!8577 = !DILocation(line: 693, column: 3, scope: !8578)
!8578 = !DILexicalBlockFile(scope: !8576, file: !78, discriminator: 24)
!8579 = !DILocation(line: 693, column: 3, scope: !8580)
!8580 = !DILexicalBlockFile(scope: !8581, file: !78, discriminator: 25)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !78, line: 693, column: 3)
!8582 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 693, column: 3)
!8583 = !DILocation(line: 693, column: 3, scope: !8584)
!8584 = !DILexicalBlockFile(scope: !8585, file: !78, discriminator: 26)
!8585 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 693, column: 3)
!8586 = !DILocation(line: 693, column: 3, scope: !8587)
!8587 = !DILexicalBlockFile(scope: !8585, file: !78, discriminator: 27)
!8588 = !DILocation(line: 693, column: 3, scope: !8589)
!8589 = !DILexicalBlockFile(scope: !8590, file: !78, discriminator: 28)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !78, line: 693, column: 3)
!8591 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 693, column: 3)
!8592 = !DILocation(line: 695, column: 9, scope: !8556)
!8593 = !DILocation(line: 696, column: 5, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !78, line: 696, column: 5)
!8595 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 696, column: 5)
!8596 = !DILocation(line: 696, column: 5, scope: !8595)
!8597 = !DILocation(line: 696, column: 5, scope: !8598)
!8598 = !DILexicalBlockFile(scope: !8599, file: !78, discriminator: 2)
!8599 = distinct !DILexicalBlock(scope: !8594, file: !78, line: 696, column: 5)
!8600 = !DILocation(line: 697, column: 13, scope: !8556)
!8601 = !DILocation(line: 697, column: 13, scope: !8602)
!8602 = !DILexicalBlockFile(scope: !8556, file: !78, discriminator: 1)
!8603 = !DILocation(line: 697, column: 13, scope: !8604)
!8604 = !DILexicalBlockFile(scope: !8556, file: !78, discriminator: 2)
!8605 = !DILocation(line: 697, column: 13, scope: !8606)
!8606 = !DILexicalBlockFile(scope: !8556, file: !78, discriminator: 3)
!8607 = !DILocation(line: 697, column: 5, scope: !8606)
!8608 = !DILocation(line: 699, column: 34, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8556, file: !78, line: 697, column: 34)
!8610 = !DILocation(line: 699, column: 39, scope: !8609)
!8611 = !DILocation(line: 699, column: 43, scope: !8609)
!8612 = !DILocation(line: 699, column: 58, scope: !8609)
!8613 = !DILocation(line: 699, column: 63, scope: !8609)
!8614 = !DILocation(line: 699, column: 14, scope: !8609)
!8615 = !DILocation(line: 699, column: 7, scope: !8609)
!8616 = !DILocation(line: 701, column: 39, scope: !8609)
!8617 = !DILocation(line: 701, column: 44, scope: !8609)
!8618 = !DILocation(line: 701, column: 48, scope: !8609)
!8619 = !DILocation(line: 702, column: 39, scope: !8609)
!8620 = !DILocation(line: 702, column: 44, scope: !8609)
!8621 = !DILocation(line: 701, column: 14, scope: !8609)
!8622 = !DILocation(line: 701, column: 7, scope: !8609)
!8623 = !DILocation(line: 704, column: 19, scope: !8556)
!8624 = !DILocation(line: 704, column: 6, scope: !8556)
!8625 = !DILocation(line: 704, column: 17, scope: !8556)
!8626 = !DILocation(line: 705, column: 5, scope: !8556)
!8627 = !DILocation(line: 707, column: 27, scope: !8556)
!8628 = !DILocation(line: 707, column: 32, scope: !8556)
!8629 = !DILocation(line: 707, column: 36, scope: !8556)
!8630 = !DILocation(line: 707, column: 51, scope: !8556)
!8631 = !DILocation(line: 707, column: 56, scope: !8556)
!8632 = !DILocation(line: 707, column: 12, scope: !8556)
!8633 = !DILocation(line: 707, column: 5, scope: !8556)
!8634 = !DILocation(line: 709, column: 31, scope: !8556)
!8635 = !DILocation(line: 709, column: 36, scope: !8556)
!8636 = !DILocation(line: 709, column: 40, scope: !8556)
!8637 = !DILocation(line: 709, column: 55, scope: !8556)
!8638 = !DILocation(line: 709, column: 60, scope: !8556)
!8639 = !DILocation(line: 709, column: 12, scope: !8556)
!8640 = !DILocation(line: 709, column: 5, scope: !8556)
!8641 = !DILocation(line: 711, column: 19, scope: !8556)
!8642 = !DILocation(line: 711, column: 6, scope: !8556)
!8643 = !DILocation(line: 711, column: 17, scope: !8556)
!8644 = !DILocation(line: 712, column: 5, scope: !8556)
!8645 = !DILocation(line: 718, column: 3, scope: !309)
!8646 = !DILocation(line: 718, column: 10, scope: !8552)
!8647 = !DILocation(line: 718, column: 3, scope: !8552)
!8648 = !DILocation(line: 719, column: 13, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !309, file: !78, line: 718, column: 35)
!8650 = !DILocation(line: 719, column: 13, scope: !8651)
!8651 = !DILexicalBlockFile(scope: !8649, file: !78, discriminator: 1)
!8652 = !DILocation(line: 719, column: 13, scope: !8653)
!8653 = !DILexicalBlockFile(scope: !8649, file: !78, discriminator: 2)
!8654 = !DILocation(line: 719, column: 13, scope: !8655)
!8655 = !DILexicalBlockFile(scope: !8649, file: !78, discriminator: 3)
!8656 = !DILocation(line: 719, column: 5, scope: !8655)
!8657 = !DILocation(line: 720, column: 5, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 720, column: 5)
!8659 = distinct !DILexicalBlock(scope: !8649, file: !78, line: 719, column: 34)
!8660 = !DILocation(line: 720, column: 5, scope: !8659)
!8661 = !DILocation(line: 720, column: 5, scope: !8662)
!8662 = !DILexicalBlockFile(scope: !8663, file: !78, discriminator: 17)
!8663 = distinct !DILexicalBlock(scope: !8658, file: !78, line: 720, column: 5)
!8664 = !DILocation(line: 720, column: 5, scope: !8665)
!8665 = !DILexicalBlockFile(scope: !8658, file: !78, discriminator: 18)
!8666 = !DILocation(line: 720, column: 5, scope: !8667)
!8667 = !DILexicalBlockFile(scope: !8659, file: !78, discriminator: 19)
!8668 = !DILocation(line: 720, column: 5, scope: !8669)
!8669 = !DILexicalBlockFile(scope: !8670, file: !78, discriminator: 20)
!8670 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 720, column: 5)
!8671 = !DILocation(line: 720, column: 5, scope: !8672)
!8672 = !DILexicalBlockFile(scope: !8670, file: !78, discriminator: 21)
!8673 = !DILocation(line: 720, column: 5, scope: !8674)
!8674 = !DILexicalBlockFile(scope: !8675, file: !78, discriminator: 22)
!8675 = distinct !DILexicalBlock(scope: !8676, file: !78, line: 720, column: 5)
!8676 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 720, column: 5)
!8677 = !DILocation(line: 720, column: 5, scope: !8678)
!8678 = !DILexicalBlockFile(scope: !8679, file: !78, discriminator: 23)
!8679 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 720, column: 5)
!8680 = !DILocation(line: 720, column: 5, scope: !8681)
!8681 = !DILexicalBlockFile(scope: !8679, file: !78, discriminator: 24)
!8682 = !DILocation(line: 720, column: 5, scope: !8683)
!8683 = !DILexicalBlockFile(scope: !8684, file: !78, discriminator: 25)
!8684 = distinct !DILexicalBlock(scope: !8685, file: !78, line: 720, column: 5)
!8685 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 720, column: 5)
!8686 = !DILocation(line: 720, column: 5, scope: !8687)
!8687 = !DILexicalBlockFile(scope: !8688, file: !78, discriminator: 26)
!8688 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 720, column: 5)
!8689 = !DILocation(line: 720, column: 5, scope: !8690)
!8690 = !DILexicalBlockFile(scope: !8688, file: !78, discriminator: 27)
!8691 = !DILocation(line: 720, column: 5, scope: !8692)
!8692 = !DILexicalBlockFile(scope: !8693, file: !78, discriminator: 28)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !78, line: 720, column: 5)
!8694 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 720, column: 5)
!8695 = !DILocation(line: 740, column: 13, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 739, column: 7)
!8697 = !DILocation(line: 741, column: 9, scope: !8696)
!8698 = !DILocation(line: 741, column: 16, scope: !8699)
!8699 = !DILexicalBlockFile(scope: !8696, file: !78, discriminator: 2)
!8700 = !DILocation(line: 741, column: 9, scope: !8699)
!8701 = !DILocation(line: 742, column: 19, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8696, file: !78, line: 741, column: 41)
!8703 = !DILocation(line: 742, column: 19, scope: !8704)
!8704 = !DILexicalBlockFile(scope: !8702, file: !78, discriminator: 1)
!8705 = !DILocation(line: 742, column: 19, scope: !8706)
!8706 = !DILexicalBlockFile(scope: !8702, file: !78, discriminator: 2)
!8707 = !DILocation(line: 742, column: 19, scope: !8708)
!8708 = !DILexicalBlockFile(scope: !8702, file: !78, discriminator: 3)
!8709 = !DILocation(line: 742, column: 11, scope: !8708)
!8710 = !DILocation(line: 743, column: 11, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !78, line: 743, column: 11)
!8712 = distinct !DILexicalBlock(scope: !8702, file: !78, line: 742, column: 40)
!8713 = !DILocation(line: 743, column: 11, scope: !8712)
!8714 = !DILocation(line: 743, column: 11, scope: !8715)
!8715 = !DILexicalBlockFile(scope: !8716, file: !78, discriminator: 17)
!8716 = distinct !DILexicalBlock(scope: !8711, file: !78, line: 743, column: 11)
!8717 = !DILocation(line: 743, column: 11, scope: !8718)
!8718 = !DILexicalBlockFile(scope: !8711, file: !78, discriminator: 18)
!8719 = !DILocation(line: 743, column: 11, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8712, file: !78, discriminator: 19)
!8721 = !DILocation(line: 743, column: 11, scope: !8722)
!8722 = !DILexicalBlockFile(scope: !8723, file: !78, discriminator: 20)
!8723 = distinct !DILexicalBlock(scope: !8712, file: !78, line: 743, column: 11)
!8724 = !DILocation(line: 743, column: 11, scope: !8725)
!8725 = !DILexicalBlockFile(scope: !8723, file: !78, discriminator: 21)
!8726 = !DILocation(line: 743, column: 11, scope: !8727)
!8727 = !DILexicalBlockFile(scope: !8728, file: !78, discriminator: 22)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !78, line: 743, column: 11)
!8729 = distinct !DILexicalBlock(scope: !8712, file: !78, line: 743, column: 11)
!8730 = !DILocation(line: 743, column: 11, scope: !8731)
!8731 = !DILexicalBlockFile(scope: !8732, file: !78, discriminator: 23)
!8732 = distinct !DILexicalBlock(scope: !8712, file: !78, line: 743, column: 11)
!8733 = !DILocation(line: 743, column: 11, scope: !8734)
!8734 = !DILexicalBlockFile(scope: !8732, file: !78, discriminator: 24)
!8735 = !DILocation(line: 743, column: 11, scope: !8736)
!8736 = !DILexicalBlockFile(scope: !8737, file: !78, discriminator: 25)
!8737 = distinct !DILexicalBlock(scope: !8738, file: !78, line: 743, column: 11)
!8738 = distinct !DILexicalBlock(scope: !8712, file: !78, line: 743, column: 11)
!8739 = !DILocation(line: 743, column: 11, scope: !8740)
!8740 = !DILexicalBlockFile(scope: !8741, file: !78, discriminator: 26)
!8741 = distinct !DILexicalBlock(scope: !8712, file: !78, line: 743, column: 11)
!8742 = !DILocation(line: 743, column: 11, scope: !8743)
!8743 = !DILexicalBlockFile(scope: !8741, file: !78, discriminator: 27)
!8744 = !DILocation(line: 743, column: 11, scope: !8745)
!8745 = !DILexicalBlockFile(scope: !8746, file: !78, discriminator: 28)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !78, line: 743, column: 11)
!8747 = distinct !DILexicalBlock(scope: !8712, file: !78, line: 743, column: 11)
!8748 = !DILocation(line: 745, column: 13, scope: !8712)
!8749 = !DILocation(line: 747, column: 13, scope: !8712)
!8750 = !DILocation(line: 749, column: 17, scope: !8712)
!8751 = !DILocation(line: 750, column: 13, scope: !8712)
!8752 = !DILocation(line: 752, column: 27, scope: !8712)
!8753 = !DILocation(line: 752, column: 14, scope: !8712)
!8754 = !DILocation(line: 752, column: 25, scope: !8712)
!8755 = !DILocation(line: 753, column: 13, scope: !8712)
!8756 = !DILocation(line: 755, column: 35, scope: !8702)
!8757 = !DILocation(line: 755, column: 40, scope: !8702)
!8758 = !DILocation(line: 755, column: 45, scope: !8702)
!8759 = !DILocation(line: 755, column: 50, scope: !8702)
!8760 = !DILocation(line: 755, column: 18, scope: !8702)
!8761 = !DILocation(line: 755, column: 11, scope: !8702)
!8762 = !DILocation(line: 757, column: 9, scope: !8696)
!8763 = !DILocation(line: 758, column: 7, scope: !8696)
!8764 = !DILocation(line: 761, column: 21, scope: !8659)
!8765 = !DILocation(line: 761, column: 25, scope: !8659)
!8766 = !DILocation(line: 761, column: 8, scope: !8659)
!8767 = !DILocation(line: 761, column: 19, scope: !8659)
!8768 = !DILocation(line: 762, column: 7, scope: !8659)
!8769 = !DILocation(line: 762, column: 7, scope: !8770)
!8770 = !DILexicalBlockFile(scope: !8659, file: !78, discriminator: 2)
!8771 = !DILocation(line: 765, column: 11, scope: !8659)
!8772 = !DILocation(line: 766, column: 7, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !78, line: 766, column: 7)
!8774 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 766, column: 7)
!8775 = !DILocation(line: 766, column: 7, scope: !8774)
!8776 = !DILocation(line: 766, column: 7, scope: !8777)
!8777 = !DILexicalBlockFile(scope: !8778, file: !78, discriminator: 2)
!8778 = distinct !DILexicalBlock(scope: !8773, file: !78, line: 766, column: 7)
!8779 = !DILocation(line: 767, column: 12, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8659, file: !78, line: 767, column: 11)
!8781 = !DILocation(line: 767, column: 12, scope: !8782)
!8782 = !DILexicalBlockFile(scope: !8780, file: !78, discriminator: 1)
!8783 = !DILocation(line: 767, column: 11, scope: !8782)
!8784 = !DILocation(line: 768, column: 23, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8780, file: !78, line: 767, column: 46)
!8786 = !DILocation(line: 768, column: 10, scope: !8785)
!8787 = !DILocation(line: 768, column: 21, scope: !8785)
!8788 = !DILocation(line: 769, column: 9, scope: !8785)
!8789 = !DILocation(line: 771, column: 21, scope: !8659)
!8790 = !DILocation(line: 771, column: 25, scope: !8659)
!8791 = !DILocation(line: 771, column: 8, scope: !8659)
!8792 = !DILocation(line: 771, column: 19, scope: !8659)
!8793 = !DILocation(line: 772, column: 7, scope: !8659)
!8794 = !DILocation(line: 774, column: 21, scope: !8659)
!8795 = !DILocation(line: 774, column: 8, scope: !8659)
!8796 = !DILocation(line: 774, column: 19, scope: !8659)
!8797 = !DILocation(line: 775, column: 7, scope: !8659)
!8798 = !DILocation(line: 718, column: 3, scope: !8799)
!8799 = !DILexicalBlockFile(scope: !309, file: !78, discriminator: 4)
!8800 = !DILocation(line: 778, column: 3, scope: !309)
!8801 = !DILocation(line: 779, column: 1, scope: !309)
!8802 = !DILocalVariable(name: "enc", arg: 1, scope: !313, file: !78, line: 504, type: !82)
!8803 = !DILocation(line: 504, column: 33, scope: !313)
!8804 = !DILocalVariable(name: "ptr", arg: 2, scope: !313, file: !78, line: 504, type: !93)
!8805 = !DILocation(line: 504, column: 50, scope: !313)
!8806 = !DILocalVariable(name: "end", arg: 3, scope: !313, file: !78, line: 504, type: !93)
!8807 = !DILocation(line: 504, column: 67, scope: !313)
!8808 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !313, file: !78, line: 505, type: !95)
!8809 = !DILocation(line: 505, column: 30, scope: !313)
!8810 = !DILocation(line: 507, column: 3, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !78, line: 507, column: 3)
!8812 = distinct !DILexicalBlock(scope: !313, file: !78, line: 507, column: 3)
!8813 = !DILocation(line: 507, column: 3, scope: !8812)
!8814 = !DILocation(line: 507, column: 3, scope: !8815)
!8815 = !DILexicalBlockFile(scope: !8816, file: !78, discriminator: 2)
!8816 = distinct !DILexicalBlock(scope: !8811, file: !78, line: 507, column: 3)
!8817 = !DILocation(line: 508, column: 11, scope: !313)
!8818 = !DILocation(line: 508, column: 11, scope: !8819)
!8819 = !DILexicalBlockFile(scope: !313, file: !78, discriminator: 1)
!8820 = !DILocation(line: 508, column: 11, scope: !8821)
!8821 = !DILexicalBlockFile(scope: !313, file: !78, discriminator: 2)
!8822 = !DILocation(line: 508, column: 11, scope: !8823)
!8823 = !DILexicalBlockFile(scope: !313, file: !78, discriminator: 3)
!8824 = !DILocation(line: 508, column: 3, scope: !8823)
!8825 = !DILocation(line: 509, column: 3, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !78, line: 509, column: 3)
!8827 = distinct !DILexicalBlock(scope: !313, file: !78, line: 508, column: 32)
!8828 = !DILocation(line: 509, column: 3, scope: !8827)
!8829 = !DILocation(line: 509, column: 3, scope: !8830)
!8830 = !DILexicalBlockFile(scope: !8831, file: !78, discriminator: 17)
!8831 = distinct !DILexicalBlock(scope: !8826, file: !78, line: 509, column: 3)
!8832 = !DILocation(line: 509, column: 3, scope: !8833)
!8833 = !DILexicalBlockFile(scope: !8826, file: !78, discriminator: 18)
!8834 = !DILocation(line: 509, column: 3, scope: !8835)
!8835 = !DILexicalBlockFile(scope: !8827, file: !78, discriminator: 19)
!8836 = !DILocation(line: 509, column: 3, scope: !8837)
!8837 = !DILexicalBlockFile(scope: !8838, file: !78, discriminator: 20)
!8838 = distinct !DILexicalBlock(scope: !8827, file: !78, line: 509, column: 3)
!8839 = !DILocation(line: 509, column: 3, scope: !8840)
!8840 = !DILexicalBlockFile(scope: !8838, file: !78, discriminator: 21)
!8841 = !DILocation(line: 509, column: 3, scope: !8842)
!8842 = !DILexicalBlockFile(scope: !8843, file: !78, discriminator: 22)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !78, line: 509, column: 3)
!8844 = distinct !DILexicalBlock(scope: !8827, file: !78, line: 509, column: 3)
!8845 = !DILocation(line: 509, column: 3, scope: !8846)
!8846 = !DILexicalBlockFile(scope: !8847, file: !78, discriminator: 23)
!8847 = distinct !DILexicalBlock(scope: !8827, file: !78, line: 509, column: 3)
!8848 = !DILocation(line: 509, column: 3, scope: !8849)
!8849 = !DILexicalBlockFile(scope: !8847, file: !78, discriminator: 24)
!8850 = !DILocation(line: 509, column: 3, scope: !8851)
!8851 = !DILexicalBlockFile(scope: !8852, file: !78, discriminator: 25)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !78, line: 509, column: 3)
!8853 = distinct !DILexicalBlock(scope: !8827, file: !78, line: 509, column: 3)
!8854 = !DILocation(line: 509, column: 3, scope: !8855)
!8855 = !DILexicalBlockFile(scope: !8856, file: !78, discriminator: 26)
!8856 = distinct !DILexicalBlock(scope: !8827, file: !78, line: 509, column: 3)
!8857 = !DILocation(line: 509, column: 3, scope: !8858)
!8858 = !DILexicalBlockFile(scope: !8856, file: !78, discriminator: 27)
!8859 = !DILocation(line: 509, column: 3, scope: !8860)
!8860 = !DILexicalBlockFile(scope: !8861, file: !78, discriminator: 28)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !78, line: 509, column: 3)
!8862 = distinct !DILexicalBlock(scope: !8827, file: !78, line: 509, column: 3)
!8863 = !DILocation(line: 511, column: 32, scope: !8827)
!8864 = !DILocation(line: 511, column: 37, scope: !8827)
!8865 = !DILocation(line: 511, column: 41, scope: !8827)
!8866 = !DILocation(line: 511, column: 56, scope: !8827)
!8867 = !DILocation(line: 511, column: 61, scope: !8827)
!8868 = !DILocation(line: 511, column: 12, scope: !8827)
!8869 = !DILocation(line: 511, column: 5, scope: !8827)
!8870 = !DILocation(line: 513, column: 19, scope: !8827)
!8871 = !DILocation(line: 513, column: 6, scope: !8827)
!8872 = !DILocation(line: 513, column: 17, scope: !8827)
!8873 = !DILocation(line: 514, column: 5, scope: !8827)
!8874 = !DILocation(line: 516, column: 3, scope: !313)
!8875 = !DILocation(line: 516, column: 10, scope: !8823)
!8876 = !DILocation(line: 516, column: 3, scope: !8823)
!8877 = !DILocation(line: 517, column: 13, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !313, file: !78, line: 516, column: 35)
!8879 = !DILocation(line: 517, column: 13, scope: !8880)
!8880 = !DILexicalBlockFile(scope: !8878, file: !78, discriminator: 1)
!8881 = !DILocation(line: 517, column: 13, scope: !8882)
!8882 = !DILexicalBlockFile(scope: !8878, file: !78, discriminator: 2)
!8883 = !DILocation(line: 517, column: 13, scope: !8884)
!8884 = !DILexicalBlockFile(scope: !8878, file: !78, discriminator: 3)
!8885 = !DILocation(line: 517, column: 5, scope: !8884)
!8886 = !DILocation(line: 518, column: 5, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !78, line: 518, column: 5)
!8888 = distinct !DILexicalBlock(scope: !8878, file: !78, line: 517, column: 34)
!8889 = !DILocation(line: 518, column: 5, scope: !8888)
!8890 = !DILocation(line: 518, column: 5, scope: !8891)
!8891 = !DILexicalBlockFile(scope: !8892, file: !78, discriminator: 17)
!8892 = distinct !DILexicalBlock(scope: !8887, file: !78, line: 518, column: 5)
!8893 = !DILocation(line: 518, column: 5, scope: !8894)
!8894 = !DILexicalBlockFile(scope: !8887, file: !78, discriminator: 18)
!8895 = !DILocation(line: 518, column: 5, scope: !8896)
!8896 = !DILexicalBlockFile(scope: !8888, file: !78, discriminator: 19)
!8897 = !DILocation(line: 518, column: 5, scope: !8898)
!8898 = !DILexicalBlockFile(scope: !8899, file: !78, discriminator: 20)
!8899 = distinct !DILexicalBlock(scope: !8888, file: !78, line: 518, column: 5)
!8900 = !DILocation(line: 518, column: 5, scope: !8901)
!8901 = !DILexicalBlockFile(scope: !8899, file: !78, discriminator: 21)
!8902 = !DILocation(line: 518, column: 5, scope: !8903)
!8903 = !DILexicalBlockFile(scope: !8904, file: !78, discriminator: 22)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !78, line: 518, column: 5)
!8905 = distinct !DILexicalBlock(scope: !8888, file: !78, line: 518, column: 5)
!8906 = !DILocation(line: 518, column: 5, scope: !8907)
!8907 = !DILexicalBlockFile(scope: !8908, file: !78, discriminator: 23)
!8908 = distinct !DILexicalBlock(scope: !8888, file: !78, line: 518, column: 5)
!8909 = !DILocation(line: 518, column: 5, scope: !8910)
!8910 = !DILexicalBlockFile(scope: !8908, file: !78, discriminator: 24)
!8911 = !DILocation(line: 518, column: 5, scope: !8912)
!8912 = !DILexicalBlockFile(scope: !8913, file: !78, discriminator: 25)
!8913 = distinct !DILexicalBlock(scope: !8914, file: !78, line: 518, column: 5)
!8914 = distinct !DILexicalBlock(scope: !8888, file: !78, line: 518, column: 5)
!8915 = !DILocation(line: 518, column: 5, scope: !8916)
!8916 = !DILexicalBlockFile(scope: !8917, file: !78, discriminator: 26)
!8917 = distinct !DILexicalBlock(scope: !8888, file: !78, line: 518, column: 5)
!8918 = !DILocation(line: 518, column: 5, scope: !8919)
!8919 = !DILexicalBlockFile(scope: !8917, file: !78, discriminator: 27)
!8920 = !DILocation(line: 518, column: 5, scope: !8921)
!8921 = !DILexicalBlockFile(scope: !8922, file: !78, discriminator: 28)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !78, line: 518, column: 5)
!8923 = distinct !DILexicalBlock(scope: !8888, file: !78, line: 518, column: 5)
!8924 = !DILocation(line: 520, column: 21, scope: !8888)
!8925 = !DILocation(line: 520, column: 25, scope: !8888)
!8926 = !DILocation(line: 520, column: 8, scope: !8888)
!8927 = !DILocation(line: 520, column: 19, scope: !8888)
!8928 = !DILocation(line: 521, column: 7, scope: !8888)
!8929 = !DILocation(line: 523, column: 21, scope: !8888)
!8930 = !DILocation(line: 523, column: 8, scope: !8888)
!8931 = !DILocation(line: 523, column: 19, scope: !8888)
!8932 = !DILocation(line: 524, column: 7, scope: !8888)
!8933 = !DILocation(line: 516, column: 3, scope: !8934)
!8934 = !DILexicalBlockFile(scope: !313, file: !78, discriminator: 4)
!8935 = !DILocation(line: 527, column: 3, scope: !313)
!8936 = !DILocation(line: 528, column: 1, scope: !313)
!8937 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !310, file: !78, line: 298, type: !82)
!8938 = !DILocation(line: 298, column: 42, scope: !310)
!8939 = !DILocalVariable(name: "ptr", arg: 2, scope: !310, file: !78, line: 298, type: !93)
!8940 = !DILocation(line: 298, column: 69, scope: !310)
!8941 = !DILocalVariable(name: "end", arg: 3, scope: !310, file: !78, line: 299, type: !93)
!8942 = !DILocation(line: 299, column: 38, scope: !310)
!8943 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !310, file: !78, line: 299, type: !95)
!8944 = !DILocation(line: 299, column: 56, scope: !310)
!8945 = !DILocalVariable(name: "i", scope: !310, file: !78, line: 303, type: !7)
!8946 = !DILocation(line: 303, column: 7, scope: !310)
!8947 = !DILocation(line: 305, column: 3, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !78, line: 305, column: 3)
!8949 = distinct !DILexicalBlock(scope: !310, file: !78, line: 305, column: 3)
!8950 = !DILocation(line: 305, column: 3, scope: !8949)
!8951 = !DILocation(line: 305, column: 3, scope: !8952)
!8952 = !DILexicalBlockFile(scope: !8953, file: !78, discriminator: 2)
!8953 = distinct !DILexicalBlock(scope: !8948, file: !78, line: 305, column: 3)
!8954 = !DILocation(line: 306, column: 10, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !310, file: !78, line: 306, column: 3)
!8956 = !DILocation(line: 306, column: 8, scope: !8955)
!8957 = !DILocation(line: 306, column: 15, scope: !8958)
!8958 = !DILexicalBlockFile(scope: !8959, file: !78, discriminator: 3)
!8959 = distinct !DILexicalBlock(scope: !8955, file: !78, line: 306, column: 3)
!8960 = !DILocation(line: 306, column: 17, scope: !8958)
!8961 = !DILocation(line: 306, column: 3, scope: !8958)
!8962 = !DILocation(line: 307, column: 10, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !78, line: 307, column: 9)
!8964 = distinct !DILexicalBlock(scope: !8959, file: !78, line: 306, column: 47)
!8965 = !DILocation(line: 307, column: 10, scope: !8966)
!8966 = !DILexicalBlockFile(scope: !8963, file: !78, discriminator: 1)
!8967 = !DILocation(line: 307, column: 9, scope: !8966)
!8968 = !DILocation(line: 308, column: 21, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8963, file: !78, line: 307, column: 49)
!8970 = !DILocation(line: 308, column: 8, scope: !8969)
!8971 = !DILocation(line: 308, column: 19, scope: !8969)
!8972 = !DILocation(line: 309, column: 7, scope: !8969)
!8973 = !DILocation(line: 311, column: 3, scope: !8964)
!8974 = !DILocation(line: 306, column: 23, scope: !8975)
!8975 = !DILexicalBlockFile(scope: !8959, file: !78, discriminator: 4)
!8976 = !DILocation(line: 306, column: 31, scope: !8975)
!8977 = !DILocation(line: 306, column: 3, scope: !8975)
!8978 = !DILocation(line: 312, column: 17, scope: !310)
!8979 = !DILocation(line: 312, column: 4, scope: !310)
!8980 = !DILocation(line: 312, column: 15, scope: !310)
!8981 = !DILocation(line: 313, column: 3, scope: !310)
!8982 = !DILocation(line: 314, column: 1, scope: !310)
!8983 = !DILocalVariable(name: "enc", arg: 1, scope: !311, file: !78, line: 392, type: !82)
!8984 = !DILocation(line: 392, column: 36, scope: !311)
!8985 = !DILocalVariable(name: "ptr", arg: 2, scope: !311, file: !78, line: 392, type: !93)
!8986 = !DILocation(line: 392, column: 53, scope: !311)
!8987 = !DILocalVariable(name: "end", arg: 3, scope: !311, file: !78, line: 393, type: !93)
!8988 = !DILocation(line: 393, column: 32, scope: !311)
!8989 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !311, file: !78, line: 393, type: !95)
!8990 = !DILocation(line: 393, column: 50, scope: !311)
!8991 = !DILocation(line: 395, column: 3, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !78, line: 395, column: 3)
!8993 = distinct !DILexicalBlock(scope: !311, file: !78, line: 395, column: 3)
!8994 = !DILocation(line: 395, column: 3, scope: !8993)
!8995 = !DILocation(line: 395, column: 3, scope: !8996)
!8996 = !DILexicalBlockFile(scope: !8997, file: !78, discriminator: 2)
!8997 = distinct !DILexicalBlock(scope: !8992, file: !78, line: 395, column: 3)
!8998 = !DILocation(line: 396, column: 11, scope: !311)
!8999 = !DILocation(line: 396, column: 11, scope: !9000)
!9000 = !DILexicalBlockFile(scope: !311, file: !78, discriminator: 1)
!9001 = !DILocation(line: 396, column: 11, scope: !9002)
!9002 = !DILexicalBlockFile(scope: !311, file: !78, discriminator: 2)
!9003 = !DILocation(line: 396, column: 11, scope: !9004)
!9004 = !DILexicalBlockFile(scope: !311, file: !78, discriminator: 3)
!9005 = !DILocation(line: 396, column: 3, scope: !9004)
!9006 = !DILocation(line: 397, column: 3, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !78, line: 397, column: 3)
!9008 = distinct !DILexicalBlock(scope: !311, file: !78, line: 396, column: 32)
!9009 = !DILocation(line: 397, column: 3, scope: !9008)
!9010 = !DILocation(line: 397, column: 3, scope: !9011)
!9011 = !DILexicalBlockFile(scope: !9012, file: !78, discriminator: 17)
!9012 = distinct !DILexicalBlock(scope: !9007, file: !78, line: 397, column: 3)
!9013 = !DILocation(line: 397, column: 3, scope: !9014)
!9014 = !DILexicalBlockFile(scope: !9007, file: !78, discriminator: 18)
!9015 = !DILocation(line: 397, column: 3, scope: !9016)
!9016 = !DILexicalBlockFile(scope: !9008, file: !78, discriminator: 19)
!9017 = !DILocation(line: 397, column: 3, scope: !9018)
!9018 = !DILexicalBlockFile(scope: !9019, file: !78, discriminator: 20)
!9019 = distinct !DILexicalBlock(scope: !9008, file: !78, line: 397, column: 3)
!9020 = !DILocation(line: 397, column: 3, scope: !9021)
!9021 = !DILexicalBlockFile(scope: !9019, file: !78, discriminator: 21)
!9022 = !DILocation(line: 397, column: 3, scope: !9023)
!9023 = !DILexicalBlockFile(scope: !9024, file: !78, discriminator: 22)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !78, line: 397, column: 3)
!9025 = distinct !DILexicalBlock(scope: !9008, file: !78, line: 397, column: 3)
!9026 = !DILocation(line: 397, column: 3, scope: !9027)
!9027 = !DILexicalBlockFile(scope: !9028, file: !78, discriminator: 23)
!9028 = distinct !DILexicalBlock(scope: !9008, file: !78, line: 397, column: 3)
!9029 = !DILocation(line: 397, column: 3, scope: !9030)
!9030 = !DILexicalBlockFile(scope: !9028, file: !78, discriminator: 24)
!9031 = !DILocation(line: 397, column: 3, scope: !9032)
!9032 = !DILexicalBlockFile(scope: !9033, file: !78, discriminator: 25)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !78, line: 397, column: 3)
!9034 = distinct !DILexicalBlock(scope: !9008, file: !78, line: 397, column: 3)
!9035 = !DILocation(line: 397, column: 3, scope: !9036)
!9036 = !DILexicalBlockFile(scope: !9037, file: !78, discriminator: 26)
!9037 = distinct !DILexicalBlock(scope: !9008, file: !78, line: 397, column: 3)
!9038 = !DILocation(line: 397, column: 3, scope: !9039)
!9039 = !DILexicalBlockFile(scope: !9037, file: !78, discriminator: 27)
!9040 = !DILocation(line: 397, column: 3, scope: !9041)
!9041 = !DILexicalBlockFile(scope: !9042, file: !78, discriminator: 28)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !78, line: 397, column: 3)
!9043 = distinct !DILexicalBlock(scope: !9008, file: !78, line: 397, column: 3)
!9044 = !DILocation(line: 399, column: 19, scope: !9008)
!9045 = !DILocation(line: 399, column: 6, scope: !9008)
!9046 = !DILocation(line: 399, column: 17, scope: !9008)
!9047 = !DILocation(line: 400, column: 5, scope: !9008)
!9048 = !DILocation(line: 402, column: 3, scope: !311)
!9049 = !DILocation(line: 402, column: 10, scope: !9004)
!9050 = !DILocation(line: 402, column: 3, scope: !9004)
!9051 = !DILocation(line: 403, column: 13, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !311, file: !78, line: 402, column: 35)
!9053 = !DILocation(line: 403, column: 13, scope: !9054)
!9054 = !DILexicalBlockFile(scope: !9052, file: !78, discriminator: 1)
!9055 = !DILocation(line: 403, column: 13, scope: !9056)
!9056 = !DILexicalBlockFile(scope: !9052, file: !78, discriminator: 2)
!9057 = !DILocation(line: 403, column: 13, scope: !9058)
!9058 = !DILexicalBlockFile(scope: !9052, file: !78, discriminator: 3)
!9059 = !DILocation(line: 403, column: 5, scope: !9058)
!9060 = !DILocation(line: 404, column: 5, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 404, column: 5)
!9062 = distinct !DILexicalBlock(scope: !9052, file: !78, line: 403, column: 34)
!9063 = !DILocation(line: 404, column: 5, scope: !9062)
!9064 = !DILocation(line: 404, column: 5, scope: !9065)
!9065 = !DILexicalBlockFile(scope: !9066, file: !78, discriminator: 17)
!9066 = distinct !DILexicalBlock(scope: !9061, file: !78, line: 404, column: 5)
!9067 = !DILocation(line: 404, column: 5, scope: !9068)
!9068 = !DILexicalBlockFile(scope: !9061, file: !78, discriminator: 18)
!9069 = !DILocation(line: 404, column: 5, scope: !9070)
!9070 = !DILexicalBlockFile(scope: !9062, file: !78, discriminator: 19)
!9071 = !DILocation(line: 404, column: 5, scope: !9072)
!9072 = !DILexicalBlockFile(scope: !9073, file: !78, discriminator: 20)
!9073 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 404, column: 5)
!9074 = !DILocation(line: 404, column: 5, scope: !9075)
!9075 = !DILexicalBlockFile(scope: !9073, file: !78, discriminator: 21)
!9076 = !DILocation(line: 404, column: 5, scope: !9077)
!9077 = !DILexicalBlockFile(scope: !9078, file: !78, discriminator: 22)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !78, line: 404, column: 5)
!9079 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 404, column: 5)
!9080 = !DILocation(line: 404, column: 5, scope: !9081)
!9081 = !DILexicalBlockFile(scope: !9082, file: !78, discriminator: 23)
!9082 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 404, column: 5)
!9083 = !DILocation(line: 404, column: 5, scope: !9084)
!9084 = !DILexicalBlockFile(scope: !9082, file: !78, discriminator: 24)
!9085 = !DILocation(line: 404, column: 5, scope: !9086)
!9086 = !DILexicalBlockFile(scope: !9087, file: !78, discriminator: 25)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !78, line: 404, column: 5)
!9088 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 404, column: 5)
!9089 = !DILocation(line: 404, column: 5, scope: !9090)
!9090 = !DILexicalBlockFile(scope: !9091, file: !78, discriminator: 26)
!9091 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 404, column: 5)
!9092 = !DILocation(line: 404, column: 5, scope: !9093)
!9093 = !DILexicalBlockFile(scope: !9091, file: !78, discriminator: 27)
!9094 = !DILocation(line: 404, column: 5, scope: !9095)
!9095 = !DILexicalBlockFile(scope: !9096, file: !78, discriminator: 28)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !78, line: 404, column: 5)
!9097 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 404, column: 5)
!9098 = !DILocation(line: 406, column: 16, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9062, file: !78, line: 406, column: 7)
!9100 = !DILocation(line: 406, column: 12, scope: !9099)
!9101 = !DILocation(line: 406, column: 32, scope: !9102)
!9102 = !DILexicalBlockFile(scope: !9103, file: !78, discriminator: 3)
!9103 = distinct !DILexicalBlock(scope: !9099, file: !78, line: 406, column: 7)
!9104 = !DILocation(line: 406, column: 7, scope: !9102)
!9105 = !DILocation(line: 407, column: 17, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9103, file: !78, line: 406, column: 77)
!9107 = !DILocation(line: 407, column: 17, scope: !9108)
!9108 = !DILexicalBlockFile(scope: !9106, file: !78, discriminator: 1)
!9109 = !DILocation(line: 407, column: 17, scope: !9110)
!9110 = !DILexicalBlockFile(scope: !9106, file: !78, discriminator: 2)
!9111 = !DILocation(line: 407, column: 17, scope: !9112)
!9112 = !DILexicalBlockFile(scope: !9106, file: !78, discriminator: 3)
!9113 = !DILocation(line: 407, column: 9, scope: !9112)
!9114 = !DILocation(line: 409, column: 11, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9106, file: !78, line: 407, column: 38)
!9116 = !DILocation(line: 411, column: 25, scope: !9115)
!9117 = !DILocation(line: 411, column: 29, scope: !9115)
!9118 = !DILocation(line: 411, column: 12, scope: !9115)
!9119 = !DILocation(line: 411, column: 23, scope: !9115)
!9120 = !DILocation(line: 412, column: 11, scope: !9115)
!9121 = !DILocation(line: 414, column: 25, scope: !9115)
!9122 = !DILocation(line: 414, column: 12, scope: !9115)
!9123 = !DILocation(line: 414, column: 23, scope: !9115)
!9124 = !DILocation(line: 415, column: 11, scope: !9115)
!9125 = !DILocation(line: 417, column: 7, scope: !9106)
!9126 = !DILocation(line: 406, column: 61, scope: !9127)
!9127 = !DILexicalBlockFile(scope: !9103, file: !78, discriminator: 4)
!9128 = !DILocation(line: 406, column: 7, scope: !9127)
!9129 = !DILocation(line: 418, column: 7, scope: !9062)
!9130 = !DILocation(line: 427, column: 21, scope: !9062)
!9131 = !DILocation(line: 427, column: 25, scope: !9062)
!9132 = !DILocation(line: 427, column: 8, scope: !9062)
!9133 = !DILocation(line: 427, column: 19, scope: !9062)
!9134 = !DILocation(line: 428, column: 7, scope: !9062)
!9135 = !DILocation(line: 430, column: 21, scope: !9062)
!9136 = !DILocation(line: 430, column: 8, scope: !9062)
!9137 = !DILocation(line: 430, column: 19, scope: !9062)
!9138 = !DILocation(line: 431, column: 7, scope: !9062)
!9139 = !DILocation(line: 402, column: 3, scope: !9140)
!9140 = !DILexicalBlockFile(scope: !311, file: !78, discriminator: 4)
!9141 = !DILocation(line: 434, column: 3, scope: !311)
!9142 = !DILocation(line: 435, column: 1, scope: !311)
!9143 = !DILocalVariable(name: "enc", arg: 1, scope: !312, file: !78, line: 533, type: !82)
!9144 = !DILocation(line: 533, column: 34, scope: !312)
!9145 = !DILocalVariable(name: "ptr", arg: 2, scope: !312, file: !78, line: 533, type: !93)
!9146 = !DILocation(line: 533, column: 51, scope: !312)
!9147 = !DILocalVariable(name: "end", arg: 3, scope: !312, file: !78, line: 533, type: !93)
!9148 = !DILocation(line: 533, column: 68, scope: !312)
!9149 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !312, file: !78, line: 534, type: !95)
!9150 = !DILocation(line: 534, column: 31, scope: !312)
!9151 = !DILocation(line: 539, column: 3, scope: !312)
!9152 = !DILocation(line: 539, column: 10, scope: !9153)
!9153 = !DILexicalBlockFile(scope: !312, file: !78, discriminator: 3)
!9154 = !DILocation(line: 539, column: 3, scope: !9153)
!9155 = !DILocation(line: 540, column: 13, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !312, file: !78, line: 539, column: 35)
!9157 = !DILocation(line: 540, column: 13, scope: !9158)
!9158 = !DILexicalBlockFile(scope: !9156, file: !78, discriminator: 1)
!9159 = !DILocation(line: 540, column: 13, scope: !9160)
!9160 = !DILexicalBlockFile(scope: !9156, file: !78, discriminator: 2)
!9161 = !DILocation(line: 540, column: 13, scope: !9162)
!9162 = !DILexicalBlockFile(scope: !9156, file: !78, discriminator: 3)
!9163 = !DILocation(line: 540, column: 5, scope: !9162)
!9164 = !DILocation(line: 541, column: 5, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 541, column: 5)
!9166 = distinct !DILexicalBlock(scope: !9156, file: !78, line: 540, column: 34)
!9167 = !DILocation(line: 541, column: 5, scope: !9166)
!9168 = !DILocation(line: 541, column: 5, scope: !9169)
!9169 = !DILexicalBlockFile(scope: !9170, file: !78, discriminator: 17)
!9170 = distinct !DILexicalBlock(scope: !9165, file: !78, line: 541, column: 5)
!9171 = !DILocation(line: 541, column: 5, scope: !9172)
!9172 = !DILexicalBlockFile(scope: !9165, file: !78, discriminator: 18)
!9173 = !DILocation(line: 541, column: 5, scope: !9174)
!9174 = !DILexicalBlockFile(scope: !9166, file: !78, discriminator: 19)
!9175 = !DILocation(line: 541, column: 5, scope: !9176)
!9176 = !DILexicalBlockFile(scope: !9177, file: !78, discriminator: 20)
!9177 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 541, column: 5)
!9178 = !DILocation(line: 541, column: 5, scope: !9179)
!9179 = !DILexicalBlockFile(scope: !9177, file: !78, discriminator: 21)
!9180 = !DILocation(line: 541, column: 5, scope: !9181)
!9181 = !DILexicalBlockFile(scope: !9182, file: !78, discriminator: 22)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !78, line: 541, column: 5)
!9183 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 541, column: 5)
!9184 = !DILocation(line: 541, column: 5, scope: !9185)
!9185 = !DILexicalBlockFile(scope: !9186, file: !78, discriminator: 23)
!9186 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 541, column: 5)
!9187 = !DILocation(line: 541, column: 5, scope: !9188)
!9188 = !DILexicalBlockFile(scope: !9186, file: !78, discriminator: 24)
!9189 = !DILocation(line: 541, column: 5, scope: !9190)
!9190 = !DILexicalBlockFile(scope: !9191, file: !78, discriminator: 25)
!9191 = distinct !DILexicalBlock(scope: !9192, file: !78, line: 541, column: 5)
!9192 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 541, column: 5)
!9193 = !DILocation(line: 541, column: 5, scope: !9194)
!9194 = !DILexicalBlockFile(scope: !9195, file: !78, discriminator: 26)
!9195 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 541, column: 5)
!9196 = !DILocation(line: 541, column: 5, scope: !9197)
!9197 = !DILexicalBlockFile(scope: !9195, file: !78, discriminator: 27)
!9198 = !DILocation(line: 541, column: 5, scope: !9199)
!9199 = !DILexicalBlockFile(scope: !9200, file: !78, discriminator: 28)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !78, line: 541, column: 5)
!9201 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 541, column: 5)
!9202 = !DILocation(line: 560, column: 7, scope: !9166)
!9203 = !DILocalVariable(name: "t", scope: !9204, file: !78, line: 561, type: !7)
!9204 = distinct !DILexicalBlock(scope: !9205, file: !78, line: 560, column: 16)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !78, line: 560, column: 7)
!9206 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 560, column: 7)
!9207 = !DILocation(line: 561, column: 13, scope: !9204)
!9208 = !DILocation(line: 563, column: 13, scope: !9204)
!9209 = !DILocation(line: 564, column: 9, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !78, line: 564, column: 9)
!9211 = distinct !DILexicalBlock(scope: !9204, file: !78, line: 564, column: 9)
!9212 = !DILocation(line: 564, column: 9, scope: !9211)
!9213 = !DILocation(line: 564, column: 9, scope: !9214)
!9214 = !DILexicalBlockFile(scope: !9215, file: !78, discriminator: 2)
!9215 = distinct !DILexicalBlock(scope: !9210, file: !78, line: 564, column: 9)
!9216 = !DILocation(line: 565, column: 13, scope: !9204)
!9217 = !DILocation(line: 565, column: 13, scope: !9218)
!9218 = !DILexicalBlockFile(scope: !9204, file: !78, discriminator: 1)
!9219 = !DILocation(line: 565, column: 13, scope: !9220)
!9220 = !DILexicalBlockFile(scope: !9204, file: !78, discriminator: 2)
!9221 = !DILocation(line: 565, column: 13, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !9204, file: !78, discriminator: 3)
!9223 = !DILocation(line: 565, column: 11, scope: !9222)
!9224 = !DILocation(line: 566, column: 13, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9204, file: !78, line: 566, column: 13)
!9226 = !DILocation(line: 566, column: 15, scope: !9225)
!9227 = !DILocation(line: 566, column: 13, scope: !9204)
!9228 = !DILocation(line: 567, column: 11, scope: !9225)
!9229 = !DILocation(line: 568, column: 17, scope: !9204)
!9230 = !DILocation(line: 568, column: 9, scope: !9204)
!9231 = !DILocation(line: 572, column: 11, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9204, file: !78, line: 568, column: 20)
!9233 = !DILocation(line: 574, column: 25, scope: !9232)
!9234 = !DILocation(line: 574, column: 12, scope: !9232)
!9235 = !DILocation(line: 574, column: 23, scope: !9232)
!9236 = !DILocation(line: 575, column: 11, scope: !9232)
!9237 = !DILocation(line: 560, column: 7, scope: !9238)
!9238 = !DILexicalBlockFile(scope: !9205, file: !78, discriminator: 2)
!9239 = !DILocation(line: 577, column: 7, scope: !9206)
!9240 = !DILocalVariable(name: "open", scope: !9241, file: !78, line: 581, type: !7)
!9241 = distinct !DILexicalBlock(scope: !9166, file: !78, line: 580, column: 7)
!9242 = !DILocation(line: 581, column: 13, scope: !9241)
!9243 = !DILocation(line: 585, column: 9, scope: !9241)
!9244 = !DILocation(line: 586, column: 15, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !78, line: 585, column: 18)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !78, line: 585, column: 9)
!9247 = distinct !DILexicalBlock(scope: !9241, file: !78, line: 585, column: 9)
!9248 = !DILocation(line: 587, column: 11, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9250, file: !78, line: 587, column: 11)
!9250 = distinct !DILexicalBlock(scope: !9245, file: !78, line: 587, column: 11)
!9251 = !DILocation(line: 587, column: 11, scope: !9250)
!9252 = !DILocation(line: 587, column: 11, scope: !9253)
!9253 = !DILexicalBlockFile(scope: !9254, file: !78, discriminator: 2)
!9254 = distinct !DILexicalBlock(scope: !9249, file: !78, line: 587, column: 11)
!9255 = !DILocation(line: 588, column: 18, scope: !9245)
!9256 = !DILocation(line: 588, column: 18, scope: !9257)
!9257 = !DILexicalBlockFile(scope: !9245, file: !78, discriminator: 1)
!9258 = !DILocation(line: 588, column: 18, scope: !9259)
!9259 = !DILexicalBlockFile(scope: !9245, file: !78, discriminator: 2)
!9260 = !DILocation(line: 588, column: 18, scope: !9261)
!9261 = !DILexicalBlockFile(scope: !9245, file: !78, discriminator: 3)
!9262 = !DILocation(line: 588, column: 16, scope: !9261)
!9263 = !DILocation(line: 589, column: 15, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9245, file: !78, line: 589, column: 15)
!9265 = !DILocation(line: 589, column: 20, scope: !9264)
!9266 = !DILocation(line: 589, column: 31, scope: !9264)
!9267 = !DILocation(line: 589, column: 34, scope: !9268)
!9268 = !DILexicalBlockFile(scope: !9264, file: !78, discriminator: 2)
!9269 = !DILocation(line: 589, column: 39, scope: !9268)
!9270 = !DILocation(line: 589, column: 15, scope: !9268)
!9271 = !DILocation(line: 590, column: 13, scope: !9264)
!9272 = !DILocation(line: 591, column: 19, scope: !9245)
!9273 = !DILocation(line: 591, column: 11, scope: !9245)
!9274 = !DILocation(line: 595, column: 13, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9245, file: !78, line: 591, column: 25)
!9276 = !DILocation(line: 597, column: 27, scope: !9275)
!9277 = !DILocation(line: 597, column: 14, scope: !9275)
!9278 = !DILocation(line: 597, column: 25, scope: !9275)
!9279 = !DILocation(line: 598, column: 13, scope: !9275)
!9280 = !DILocation(line: 585, column: 9, scope: !9281)
!9281 = !DILexicalBlockFile(scope: !9246, file: !78, discriminator: 2)
!9282 = !DILocation(line: 601, column: 13, scope: !9241)
!9283 = !DILocation(line: 603, column: 9, scope: !9241)
!9284 = !DILocalVariable(name: "t", scope: !9285, file: !78, line: 604, type: !7)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !78, line: 603, column: 18)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !78, line: 603, column: 9)
!9287 = distinct !DILexicalBlock(scope: !9241, file: !78, line: 603, column: 9)
!9288 = !DILocation(line: 604, column: 15, scope: !9285)
!9289 = !DILocation(line: 605, column: 11, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !78, line: 605, column: 11)
!9291 = distinct !DILexicalBlock(scope: !9285, file: !78, line: 605, column: 11)
!9292 = !DILocation(line: 605, column: 11, scope: !9291)
!9293 = !DILocation(line: 605, column: 11, scope: !9294)
!9294 = !DILexicalBlockFile(scope: !9295, file: !78, discriminator: 2)
!9295 = distinct !DILexicalBlock(scope: !9290, file: !78, line: 605, column: 11)
!9296 = !DILocation(line: 606, column: 15, scope: !9285)
!9297 = !DILocation(line: 606, column: 15, scope: !9298)
!9298 = !DILexicalBlockFile(scope: !9285, file: !78, discriminator: 1)
!9299 = !DILocation(line: 606, column: 15, scope: !9300)
!9300 = !DILexicalBlockFile(scope: !9285, file: !78, discriminator: 2)
!9301 = !DILocation(line: 606, column: 15, scope: !9302)
!9302 = !DILexicalBlockFile(scope: !9285, file: !78, discriminator: 3)
!9303 = !DILocation(line: 606, column: 13, scope: !9302)
!9304 = !DILocation(line: 607, column: 15, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9285, file: !78, line: 607, column: 15)
!9306 = !DILocation(line: 607, column: 20, scope: !9305)
!9307 = !DILocation(line: 607, column: 17, scope: !9305)
!9308 = !DILocation(line: 607, column: 15, scope: !9285)
!9309 = !DILocation(line: 608, column: 13, scope: !9305)
!9310 = !DILocation(line: 609, column: 19, scope: !9285)
!9311 = !DILocation(line: 609, column: 11, scope: !9285)
!9312 = !DILocation(line: 610, column: 11, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9314, file: !78, line: 610, column: 11)
!9314 = distinct !DILexicalBlock(scope: !9285, file: !78, line: 609, column: 22)
!9315 = !DILocation(line: 610, column: 11, scope: !9314)
!9316 = !DILocation(line: 610, column: 11, scope: !9317)
!9317 = !DILexicalBlockFile(scope: !9313, file: !78, discriminator: 16)
!9318 = !DILocation(line: 610, column: 11, scope: !9319)
!9319 = !DILexicalBlockFile(scope: !9314, file: !78, discriminator: 17)
!9320 = !DILocation(line: 610, column: 11, scope: !9321)
!9321 = !DILexicalBlockFile(scope: !9322, file: !78, discriminator: 18)
!9322 = distinct !DILexicalBlock(scope: !9314, file: !78, line: 610, column: 11)
!9323 = !DILocation(line: 610, column: 11, scope: !9324)
!9324 = !DILexicalBlockFile(scope: !9322, file: !78, discriminator: 19)
!9325 = !DILocation(line: 610, column: 11, scope: !9326)
!9326 = !DILexicalBlockFile(scope: !9314, file: !78, discriminator: 20)
!9327 = !DILocation(line: 610, column: 11, scope: !9328)
!9328 = !DILexicalBlockFile(scope: !9329, file: !78, discriminator: 21)
!9329 = distinct !DILexicalBlock(scope: !9314, file: !78, line: 610, column: 11)
!9330 = !DILocation(line: 610, column: 11, scope: !9331)
!9331 = !DILexicalBlockFile(scope: !9329, file: !78, discriminator: 22)
!9332 = !DILocation(line: 610, column: 11, scope: !9333)
!9333 = !DILexicalBlockFile(scope: !9314, file: !78, discriminator: 23)
!9334 = !DILocation(line: 610, column: 11, scope: !9335)
!9335 = !DILexicalBlockFile(scope: !9314, file: !78, discriminator: 24)
!9336 = !DILocalVariable(name: "tok", scope: !9337, file: !78, line: 613, type: !7)
!9337 = distinct !DILexicalBlock(scope: !9314, file: !78, line: 612, column: 13)
!9338 = !DILocation(line: 613, column: 19, scope: !9337)
!9339 = !DILocation(line: 613, column: 41, scope: !9337)
!9340 = !DILocation(line: 613, column: 46, scope: !9337)
!9341 = !DILocation(line: 613, column: 50, scope: !9337)
!9342 = !DILocation(line: 613, column: 65, scope: !9337)
!9343 = !DILocation(line: 613, column: 25, scope: !9337)
!9344 = !DILocation(line: 614, column: 19, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9337, file: !78, line: 614, column: 19)
!9346 = !DILocation(line: 614, column: 23, scope: !9345)
!9347 = !DILocation(line: 614, column: 19, scope: !9337)
!9348 = !DILocation(line: 615, column: 21, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !78, line: 615, column: 21)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !78, line: 614, column: 29)
!9351 = !DILocation(line: 615, column: 25, scope: !9349)
!9352 = !DILocation(line: 615, column: 21, scope: !9350)
!9353 = !DILocation(line: 616, column: 33, scope: !9349)
!9354 = !DILocation(line: 616, column: 20, scope: !9349)
!9355 = !DILocation(line: 616, column: 31, scope: !9349)
!9356 = !DILocation(line: 616, column: 19, scope: !9349)
!9357 = !DILocation(line: 617, column: 24, scope: !9350)
!9358 = !DILocation(line: 617, column: 17, scope: !9350)
!9359 = !DILocation(line: 619, column: 15, scope: !9337)
!9360 = !DILocation(line: 622, column: 27, scope: !9314)
!9361 = !DILocation(line: 622, column: 14, scope: !9314)
!9362 = !DILocation(line: 622, column: 25, scope: !9314)
!9363 = !DILocation(line: 623, column: 13, scope: !9314)
!9364 = !DILocation(line: 625, column: 17, scope: !9314)
!9365 = !DILocation(line: 626, column: 13, scope: !9314)
!9366 = !DILocation(line: 603, column: 9, scope: !9367)
!9367 = !DILexicalBlockFile(scope: !9286, file: !78, discriminator: 2)
!9368 = !DILocation(line: 629, column: 13, scope: !9241)
!9369 = !DILocation(line: 630, column: 9, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !78, line: 630, column: 9)
!9371 = distinct !DILexicalBlock(scope: !9241, file: !78, line: 630, column: 9)
!9372 = !DILocation(line: 630, column: 9, scope: !9371)
!9373 = !DILocation(line: 630, column: 9, scope: !9374)
!9374 = !DILexicalBlockFile(scope: !9375, file: !78, discriminator: 2)
!9375 = distinct !DILexicalBlock(scope: !9370, file: !78, line: 630, column: 9)
!9376 = !DILocation(line: 631, column: 17, scope: !9241)
!9377 = !DILocation(line: 631, column: 17, scope: !9378)
!9378 = !DILexicalBlockFile(scope: !9241, file: !78, discriminator: 1)
!9379 = !DILocation(line: 631, column: 17, scope: !9380)
!9380 = !DILexicalBlockFile(scope: !9241, file: !78, discriminator: 2)
!9381 = !DILocation(line: 631, column: 17, scope: !9382)
!9382 = !DILexicalBlockFile(scope: !9241, file: !78, discriminator: 3)
!9383 = !DILocation(line: 631, column: 9, scope: !9382)
!9384 = !DILocation(line: 635, column: 11, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9241, file: !78, line: 631, column: 38)
!9386 = !DILocation(line: 637, column: 11, scope: !9385)
!9387 = !DILocation(line: 639, column: 11, scope: !9385)
!9388 = !DILocation(line: 641, column: 25, scope: !9385)
!9389 = !DILocation(line: 641, column: 12, scope: !9385)
!9390 = !DILocation(line: 641, column: 23, scope: !9385)
!9391 = !DILocation(line: 642, column: 11, scope: !9385)
!9392 = !DILocation(line: 645, column: 9, scope: !9241)
!9393 = !DILocation(line: 646, column: 15, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9395, file: !78, line: 645, column: 18)
!9395 = distinct !DILexicalBlock(scope: !9396, file: !78, line: 645, column: 9)
!9396 = distinct !DILexicalBlock(scope: !9241, file: !78, line: 645, column: 9)
!9397 = !DILocation(line: 647, column: 11, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9399, file: !78, line: 647, column: 11)
!9399 = distinct !DILexicalBlock(scope: !9394, file: !78, line: 647, column: 11)
!9400 = !DILocation(line: 647, column: 11, scope: !9399)
!9401 = !DILocation(line: 647, column: 11, scope: !9402)
!9402 = !DILexicalBlockFile(scope: !9403, file: !78, discriminator: 2)
!9403 = distinct !DILexicalBlock(scope: !9398, file: !78, line: 647, column: 11)
!9404 = !DILocation(line: 648, column: 19, scope: !9394)
!9405 = !DILocation(line: 648, column: 19, scope: !9406)
!9406 = !DILexicalBlockFile(scope: !9394, file: !78, discriminator: 1)
!9407 = !DILocation(line: 648, column: 19, scope: !9408)
!9408 = !DILexicalBlockFile(scope: !9394, file: !78, discriminator: 2)
!9409 = !DILocation(line: 648, column: 19, scope: !9410)
!9410 = !DILexicalBlockFile(scope: !9394, file: !78, discriminator: 3)
!9411 = !DILocation(line: 648, column: 11, scope: !9410)
!9412 = !DILocation(line: 649, column: 11, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 649, column: 11)
!9414 = distinct !DILexicalBlock(scope: !9394, file: !78, line: 648, column: 40)
!9415 = !DILocation(line: 649, column: 11, scope: !9414)
!9416 = !DILocation(line: 649, column: 11, scope: !9417)
!9417 = !DILexicalBlockFile(scope: !9418, file: !78, discriminator: 17)
!9418 = distinct !DILexicalBlock(scope: !9413, file: !78, line: 649, column: 11)
!9419 = !DILocation(line: 649, column: 11, scope: !9420)
!9420 = !DILexicalBlockFile(scope: !9413, file: !78, discriminator: 18)
!9421 = !DILocation(line: 649, column: 11, scope: !9422)
!9422 = !DILexicalBlockFile(scope: !9414, file: !78, discriminator: 19)
!9423 = !DILocation(line: 649, column: 11, scope: !9424)
!9424 = !DILexicalBlockFile(scope: !9425, file: !78, discriminator: 20)
!9425 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 649, column: 11)
!9426 = !DILocation(line: 649, column: 11, scope: !9427)
!9427 = !DILexicalBlockFile(scope: !9425, file: !78, discriminator: 21)
!9428 = !DILocation(line: 649, column: 11, scope: !9429)
!9429 = !DILexicalBlockFile(scope: !9430, file: !78, discriminator: 22)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !78, line: 649, column: 11)
!9431 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 649, column: 11)
!9432 = !DILocation(line: 649, column: 11, scope: !9433)
!9433 = !DILexicalBlockFile(scope: !9434, file: !78, discriminator: 23)
!9434 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 649, column: 11)
!9435 = !DILocation(line: 649, column: 11, scope: !9436)
!9436 = !DILexicalBlockFile(scope: !9434, file: !78, discriminator: 24)
!9437 = !DILocation(line: 649, column: 11, scope: !9438)
!9438 = !DILexicalBlockFile(scope: !9439, file: !78, discriminator: 25)
!9439 = distinct !DILexicalBlock(scope: !9440, file: !78, line: 649, column: 11)
!9440 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 649, column: 11)
!9441 = !DILocation(line: 649, column: 11, scope: !9442)
!9442 = !DILexicalBlockFile(scope: !9443, file: !78, discriminator: 26)
!9443 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 649, column: 11)
!9444 = !DILocation(line: 649, column: 11, scope: !9445)
!9445 = !DILexicalBlockFile(scope: !9443, file: !78, discriminator: 27)
!9446 = !DILocation(line: 649, column: 11, scope: !9447)
!9447 = !DILexicalBlockFile(scope: !9448, file: !78, discriminator: 28)
!9448 = distinct !DILexicalBlock(scope: !9449, file: !78, line: 649, column: 11)
!9449 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 649, column: 11)
!9450 = !DILocation(line: 651, column: 13, scope: !9414)
!9451 = !DILocation(line: 651, column: 13, scope: !9452)
!9452 = !DILexicalBlockFile(scope: !9414, file: !78, discriminator: 2)
!9453 = !DILocation(line: 654, column: 27, scope: !9414)
!9454 = !DILocation(line: 654, column: 31, scope: !9414)
!9455 = !DILocation(line: 654, column: 14, scope: !9414)
!9456 = !DILocation(line: 654, column: 25, scope: !9414)
!9457 = !DILocation(line: 655, column: 13, scope: !9414)
!9458 = !DILocation(line: 655, column: 13, scope: !9452)
!9459 = !DILocation(line: 658, column: 17, scope: !9414)
!9460 = !DILocation(line: 659, column: 13, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !78, line: 659, column: 13)
!9462 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 659, column: 13)
!9463 = !DILocation(line: 659, column: 13, scope: !9462)
!9464 = !DILocation(line: 659, column: 13, scope: !9465)
!9465 = !DILexicalBlockFile(scope: !9466, file: !78, discriminator: 2)
!9466 = distinct !DILexicalBlock(scope: !9461, file: !78, line: 659, column: 13)
!9467 = !DILocation(line: 660, column: 18, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9414, file: !78, line: 660, column: 17)
!9469 = !DILocation(line: 660, column: 18, scope: !9470)
!9470 = !DILexicalBlockFile(scope: !9468, file: !78, discriminator: 1)
!9471 = !DILocation(line: 660, column: 17, scope: !9470)
!9472 = !DILocation(line: 661, column: 29, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9468, file: !78, line: 660, column: 52)
!9474 = !DILocation(line: 661, column: 16, scope: !9473)
!9475 = !DILocation(line: 661, column: 27, scope: !9473)
!9476 = !DILocation(line: 662, column: 15, scope: !9473)
!9477 = !DILocation(line: 664, column: 27, scope: !9414)
!9478 = !DILocation(line: 664, column: 31, scope: !9414)
!9479 = !DILocation(line: 664, column: 14, scope: !9414)
!9480 = !DILocation(line: 664, column: 25, scope: !9414)
!9481 = !DILocation(line: 665, column: 13, scope: !9414)
!9482 = !DILocation(line: 667, column: 27, scope: !9414)
!9483 = !DILocation(line: 667, column: 14, scope: !9414)
!9484 = !DILocation(line: 667, column: 25, scope: !9414)
!9485 = !DILocation(line: 668, column: 13, scope: !9414)
!9486 = !DILocation(line: 670, column: 11, scope: !9394)
!9487 = !DILocation(line: 672, column: 9, scope: !9241)
!9488 = !DILocation(line: 675, column: 21, scope: !9166)
!9489 = !DILocation(line: 675, column: 8, scope: !9166)
!9490 = !DILocation(line: 675, column: 19, scope: !9166)
!9491 = !DILocation(line: 676, column: 7, scope: !9166)
!9492 = !DILocation(line: 539, column: 3, scope: !9493)
!9493 = !DILexicalBlockFile(scope: !312, file: !78, discriminator: 4)
!9494 = !DILocation(line: 679, column: 3, scope: !312)
!9495 = !DILocation(line: 680, column: 1, scope: !312)
!9496 = !DILocalVariable(name: "enc", arg: 1, scope: !314, file: !78, line: 472, type: !82)
!9497 = !DILocation(line: 472, column: 37, scope: !314)
!9498 = !DILocalVariable(name: "ptr", arg: 2, scope: !314, file: !78, line: 472, type: !93)
!9499 = !DILocation(line: 472, column: 54, scope: !314)
!9500 = !DILocalVariable(name: "end", arg: 3, scope: !314, file: !78, line: 473, type: !93)
!9501 = !DILocation(line: 473, column: 33, scope: !314)
!9502 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !314, file: !78, line: 473, type: !95)
!9503 = !DILocation(line: 473, column: 51, scope: !314)
!9504 = !DILocation(line: 475, column: 7, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !314, file: !78, line: 475, column: 7)
!9506 = !DILocation(line: 475, column: 7, scope: !314)
!9507 = !DILocation(line: 476, column: 9, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !78, line: 476, column: 9)
!9509 = distinct !DILexicalBlock(scope: !9505, file: !78, line: 475, column: 32)
!9510 = !DILocation(line: 476, column: 9, scope: !9511)
!9511 = !DILexicalBlockFile(scope: !9508, file: !78, discriminator: 1)
!9512 = !DILocation(line: 477, column: 37, scope: !9508)
!9513 = !DILocation(line: 477, column: 42, scope: !9508)
!9514 = !DILocation(line: 477, column: 46, scope: !9508)
!9515 = !DILocation(line: 477, column: 61, scope: !9508)
!9516 = !DILocation(line: 477, column: 66, scope: !9508)
!9517 = !DILocation(line: 477, column: 14, scope: !9508)
!9518 = !DILocation(line: 477, column: 7, scope: !9508)
!9519 = !DILocation(line: 478, column: 13, scope: !9509)
!9520 = !DILocation(line: 478, column: 13, scope: !9521)
!9521 = !DILexicalBlockFile(scope: !9509, file: !78, discriminator: 1)
!9522 = !DILocation(line: 478, column: 13, scope: !9523)
!9523 = !DILexicalBlockFile(scope: !9509, file: !78, discriminator: 2)
!9524 = !DILocation(line: 478, column: 13, scope: !9525)
!9525 = !DILexicalBlockFile(scope: !9509, file: !78, discriminator: 3)
!9526 = !DILocation(line: 478, column: 5, scope: !9525)
!9527 = !DILocation(line: 480, column: 7, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9509, file: !78, line: 478, column: 34)
!9529 = !DILocation(line: 482, column: 21, scope: !9528)
!9530 = !DILocation(line: 482, column: 8, scope: !9528)
!9531 = !DILocation(line: 482, column: 19, scope: !9528)
!9532 = !DILocation(line: 483, column: 7, scope: !9528)
!9533 = !DILocation(line: 485, column: 14, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9509, file: !78, line: 485, column: 5)
!9535 = !DILocation(line: 485, column: 10, scope: !9534)
!9536 = !DILocation(line: 485, column: 30, scope: !9537)
!9537 = !DILexicalBlockFile(scope: !9538, file: !78, discriminator: 3)
!9538 = distinct !DILexicalBlock(scope: !9534, file: !78, line: 485, column: 5)
!9539 = !DILocation(line: 485, column: 5, scope: !9537)
!9540 = !DILocation(line: 486, column: 15, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9538, file: !78, line: 485, column: 75)
!9542 = !DILocation(line: 486, column: 15, scope: !9543)
!9543 = !DILexicalBlockFile(scope: !9541, file: !78, discriminator: 1)
!9544 = !DILocation(line: 486, column: 15, scope: !9545)
!9545 = !DILexicalBlockFile(scope: !9541, file: !78, discriminator: 2)
!9546 = !DILocation(line: 486, column: 15, scope: !9547)
!9547 = !DILexicalBlockFile(scope: !9541, file: !78, discriminator: 3)
!9548 = !DILocation(line: 486, column: 7, scope: !9547)
!9549 = !DILocation(line: 488, column: 9, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9541, file: !78, line: 486, column: 36)
!9551 = !DILocation(line: 490, column: 23, scope: !9550)
!9552 = !DILocation(line: 490, column: 27, scope: !9550)
!9553 = !DILocation(line: 490, column: 10, scope: !9550)
!9554 = !DILocation(line: 490, column: 21, scope: !9550)
!9555 = !DILocation(line: 491, column: 9, scope: !9550)
!9556 = !DILocation(line: 493, column: 23, scope: !9550)
!9557 = !DILocation(line: 493, column: 10, scope: !9550)
!9558 = !DILocation(line: 493, column: 21, scope: !9550)
!9559 = !DILocation(line: 494, column: 9, scope: !9550)
!9560 = !DILocation(line: 496, column: 5, scope: !9541)
!9561 = !DILocation(line: 485, column: 59, scope: !9562)
!9562 = !DILexicalBlockFile(scope: !9538, file: !78, discriminator: 4)
!9563 = !DILocation(line: 485, column: 5, scope: !9562)
!9564 = !DILocation(line: 497, column: 3, scope: !9509)
!9565 = !DILocation(line: 498, column: 3, scope: !314)
!9566 = !DILocation(line: 499, column: 1, scope: !314)
!9567 = !DILocalVariable(name: "enc", arg: 1, scope: !315, file: !78, line: 440, type: !82)
!9568 = !DILocation(line: 440, column: 40, scope: !315)
!9569 = !DILocalVariable(name: "ptr", arg: 2, scope: !315, file: !78, line: 440, type: !93)
!9570 = !DILocation(line: 440, column: 57, scope: !315)
!9571 = !DILocalVariable(name: "end", arg: 3, scope: !315, file: !78, line: 441, type: !93)
!9572 = !DILocation(line: 441, column: 36, scope: !315)
!9573 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !315, file: !78, line: 441, type: !95)
!9574 = !DILocation(line: 441, column: 54, scope: !315)
!9575 = !DILocation(line: 443, column: 7, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !315, file: !78, line: 443, column: 7)
!9577 = !DILocation(line: 443, column: 7, scope: !315)
!9578 = !DILocation(line: 444, column: 13, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9576, file: !78, line: 443, column: 32)
!9580 = !DILocation(line: 444, column: 13, scope: !9581)
!9581 = !DILexicalBlockFile(scope: !9579, file: !78, discriminator: 1)
!9582 = !DILocation(line: 444, column: 13, scope: !9583)
!9583 = !DILexicalBlockFile(scope: !9579, file: !78, discriminator: 2)
!9584 = !DILocation(line: 444, column: 13, scope: !9585)
!9585 = !DILexicalBlockFile(scope: !9579, file: !78, discriminator: 3)
!9586 = !DILocation(line: 444, column: 5, scope: !9585)
!9587 = !DILocation(line: 447, column: 7, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9579, file: !78, line: 444, column: 34)
!9589 = !DILocation(line: 449, column: 21, scope: !9588)
!9590 = !DILocation(line: 449, column: 8, scope: !9588)
!9591 = !DILocation(line: 449, column: 19, scope: !9588)
!9592 = !DILocation(line: 450, column: 7, scope: !9588)
!9593 = !DILocation(line: 452, column: 14, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9579, file: !78, line: 452, column: 5)
!9595 = !DILocation(line: 452, column: 10, scope: !9594)
!9596 = !DILocation(line: 452, column: 30, scope: !9597)
!9597 = !DILexicalBlockFile(scope: !9598, file: !78, discriminator: 3)
!9598 = distinct !DILexicalBlock(scope: !9594, file: !78, line: 452, column: 5)
!9599 = !DILocation(line: 452, column: 5, scope: !9597)
!9600 = !DILocation(line: 453, column: 15, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9598, file: !78, line: 452, column: 75)
!9602 = !DILocation(line: 453, column: 15, scope: !9603)
!9603 = !DILexicalBlockFile(scope: !9601, file: !78, discriminator: 1)
!9604 = !DILocation(line: 453, column: 15, scope: !9605)
!9605 = !DILexicalBlockFile(scope: !9601, file: !78, discriminator: 2)
!9606 = !DILocation(line: 453, column: 15, scope: !9607)
!9607 = !DILexicalBlockFile(scope: !9601, file: !78, discriminator: 3)
!9608 = !DILocation(line: 453, column: 7, scope: !9607)
!9609 = !DILocation(line: 456, column: 9, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9601, file: !78, line: 453, column: 36)
!9611 = !DILocation(line: 458, column: 23, scope: !9610)
!9612 = !DILocation(line: 458, column: 27, scope: !9610)
!9613 = !DILocation(line: 458, column: 10, scope: !9610)
!9614 = !DILocation(line: 458, column: 21, scope: !9610)
!9615 = !DILocation(line: 459, column: 9, scope: !9610)
!9616 = !DILocation(line: 461, column: 23, scope: !9610)
!9617 = !DILocation(line: 461, column: 10, scope: !9610)
!9618 = !DILocation(line: 461, column: 21, scope: !9610)
!9619 = !DILocation(line: 462, column: 9, scope: !9610)
!9620 = !DILocation(line: 464, column: 5, scope: !9601)
!9621 = !DILocation(line: 452, column: 59, scope: !9622)
!9622 = !DILexicalBlockFile(scope: !9598, file: !78, discriminator: 4)
!9623 = !DILocation(line: 452, column: 5, scope: !9622)
!9624 = !DILocation(line: 465, column: 3, scope: !9579)
!9625 = !DILocation(line: 466, column: 3, scope: !315)
!9626 = !DILocation(line: 467, column: 1, scope: !315)
!9627 = !DILocalVariable(name: "s1", arg: 1, scope: !332, file: !1, line: 1018, type: !93)
!9628 = !DILocation(line: 1018, column: 21, scope: !332)
!9629 = !DILocalVariable(name: "s2", arg: 2, scope: !332, file: !1, line: 1018, type: !93)
!9630 = !DILocation(line: 1018, column: 37, scope: !332)
!9631 = !DILocation(line: 1020, column: 3, scope: !332)
!9632 = !DILocalVariable(name: "c1", scope: !9633, file: !1, line: 1021, type: !9)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !1, line: 1020, column: 12)
!9634 = distinct !DILexicalBlock(scope: !9635, file: !1, line: 1020, column: 3)
!9635 = distinct !DILexicalBlock(scope: !332, file: !1, line: 1020, column: 3)
!9636 = !DILocation(line: 1021, column: 10, scope: !9633)
!9637 = !DILocation(line: 1021, column: 18, scope: !9633)
!9638 = !DILocation(line: 1021, column: 15, scope: !9633)
!9639 = !DILocalVariable(name: "c2", scope: !9633, file: !1, line: 1022, type: !9)
!9640 = !DILocation(line: 1022, column: 10, scope: !9633)
!9641 = !DILocation(line: 1022, column: 18, scope: !9633)
!9642 = !DILocation(line: 1022, column: 15, scope: !9633)
!9643 = !DILocation(line: 1023, column: 20, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9633, file: !1, line: 1023, column: 9)
!9645 = !DILocation(line: 1023, column: 17, scope: !9644)
!9646 = !DILocation(line: 1023, column: 23, scope: !9644)
!9647 = !DILocation(line: 1023, column: 26, scope: !9648)
!9648 = !DILexicalBlockFile(scope: !9644, file: !1, discriminator: 1)
!9649 = !DILocation(line: 1023, column: 29, scope: !9648)
!9650 = !DILocation(line: 1023, column: 9, scope: !9648)
!9651 = !DILocation(line: 1024, column: 10, scope: !9644)
!9652 = !DILocation(line: 1024, column: 7, scope: !9644)
!9653 = !DILocation(line: 1025, column: 20, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9633, file: !1, line: 1025, column: 9)
!9655 = !DILocation(line: 1025, column: 17, scope: !9654)
!9656 = !DILocation(line: 1025, column: 23, scope: !9654)
!9657 = !DILocation(line: 1025, column: 26, scope: !9658)
!9658 = !DILexicalBlockFile(scope: !9654, file: !1, discriminator: 1)
!9659 = !DILocation(line: 1025, column: 29, scope: !9658)
!9660 = !DILocation(line: 1025, column: 9, scope: !9658)
!9661 = !DILocation(line: 1026, column: 10, scope: !9654)
!9662 = !DILocation(line: 1026, column: 7, scope: !9654)
!9663 = !DILocation(line: 1027, column: 9, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9633, file: !1, line: 1027, column: 9)
!9665 = !DILocation(line: 1027, column: 15, scope: !9664)
!9666 = !DILocation(line: 1027, column: 12, scope: !9664)
!9667 = !DILocation(line: 1027, column: 9, scope: !9633)
!9668 = !DILocation(line: 1028, column: 7, scope: !9664)
!9669 = !DILocation(line: 1029, column: 10, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9633, file: !1, line: 1029, column: 9)
!9671 = !DILocation(line: 1029, column: 9, scope: !9633)
!9672 = !DILocation(line: 1030, column: 7, scope: !9670)
!9673 = !DILocation(line: 1020, column: 3, scope: !9674)
!9674 = !DILexicalBlockFile(scope: !9634, file: !1, discriminator: 1)
!9675 = !DILocation(line: 1032, column: 3, scope: !332)
!9676 = !DILocation(line: 1033, column: 1, scope: !332)
!9677 = !DILocalVariable(name: "encodingTable", arg: 1, scope: !336, file: !1, line: 1597, type: !339)
!9678 = !DILocation(line: 1597, column: 34, scope: !336)
!9679 = !DILocalVariable(name: "enc", arg: 2, scope: !336, file: !1, line: 1598, type: !211)
!9680 = !DILocation(line: 1598, column: 31, scope: !336)
!9681 = !DILocalVariable(name: "state", arg: 3, scope: !336, file: !1, line: 1599, type: !7)
!9682 = !DILocation(line: 1599, column: 14, scope: !336)
!9683 = !DILocalVariable(name: "ptr", arg: 4, scope: !336, file: !1, line: 1600, type: !93)
!9684 = !DILocation(line: 1600, column: 22, scope: !336)
!9685 = !DILocalVariable(name: "end", arg: 5, scope: !336, file: !1, line: 1601, type: !93)
!9686 = !DILocation(line: 1601, column: 22, scope: !336)
!9687 = !DILocalVariable(name: "nextTokPtr", arg: 6, scope: !336, file: !1, line: 1602, type: !95)
!9688 = !DILocation(line: 1602, column: 23, scope: !336)
!9689 = !DILocalVariable(name: "encPtr", scope: !336, file: !1, line: 1604, type: !218)
!9690 = !DILocation(line: 1604, column: 20, scope: !336)
!9691 = !DILocation(line: 1606, column: 7, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !336, file: !1, line: 1606, column: 7)
!9693 = !DILocation(line: 1606, column: 14, scope: !9692)
!9694 = !DILocation(line: 1606, column: 11, scope: !9692)
!9695 = !DILocation(line: 1606, column: 7, scope: !336)
!9696 = !DILocation(line: 1607, column: 5, scope: !9692)
!9697 = !DILocation(line: 1608, column: 12, scope: !336)
!9698 = !DILocation(line: 1608, column: 17, scope: !336)
!9699 = !DILocation(line: 1608, column: 10, scope: !336)
!9700 = !DILocation(line: 1609, column: 7, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !336, file: !1, line: 1609, column: 7)
!9702 = !DILocation(line: 1609, column: 11, scope: !9701)
!9703 = !DILocation(line: 1609, column: 18, scope: !9701)
!9704 = !DILocation(line: 1609, column: 15, scope: !9701)
!9705 = !DILocation(line: 1609, column: 7, scope: !336)
!9706 = !DILocation(line: 1613, column: 9, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9708, file: !1, line: 1613, column: 9)
!9708 = distinct !DILexicalBlock(scope: !9701, file: !1, line: 1609, column: 23)
!9709 = !DILocation(line: 1613, column: 15, scope: !9707)
!9710 = !DILocation(line: 1613, column: 9, scope: !9708)
!9711 = !DILocation(line: 1614, column: 7, scope: !9707)
!9712 = !DILocation(line: 1618, column: 13, scope: !9708)
!9713 = !DILocation(line: 1618, column: 5, scope: !9708)
!9714 = !DILocation(line: 1622, column: 7, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9708, file: !1, line: 1618, column: 34)
!9716 = !DILocation(line: 1624, column: 29, scope: !9708)
!9717 = !DILocation(line: 1624, column: 28, scope: !9708)
!9718 = !DILocation(line: 1624, column: 13, scope: !9708)
!9719 = !DILocation(line: 1624, column: 5, scope: !9708)
!9720 = !DILocation(line: 1628, column: 11, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9722, file: !1, line: 1628, column: 11)
!9722 = distinct !DILexicalBlock(scope: !9708, file: !1, line: 1624, column: 34)
!9723 = !DILocation(line: 1628, column: 31, scope: !9721)
!9724 = !DILocation(line: 1629, column: 11, scope: !9721)
!9725 = !DILocation(line: 1629, column: 14, scope: !9726)
!9726 = !DILexicalBlockFile(scope: !9721, file: !1, discriminator: 1)
!9727 = !DILocation(line: 1629, column: 20, scope: !9726)
!9728 = !DILocation(line: 1628, column: 11, scope: !9729)
!9729 = !DILexicalBlockFile(scope: !9722, file: !1, discriminator: 1)
!9730 = !DILocation(line: 1630, column: 9, scope: !9721)
!9731 = !DILocation(line: 1629, column: 23, scope: !9732)
!9732 = !DILexicalBlockFile(scope: !9721, file: !1, discriminator: 2)
!9733 = !DILocation(line: 1634, column: 7, scope: !9722)
!9734 = !DILocation(line: 1636, column: 3, scope: !9708)
!9735 = !DILocation(line: 1638, column: 29, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9701, file: !1, line: 1637, column: 8)
!9737 = !DILocation(line: 1638, column: 14, scope: !9736)
!9738 = !DILocation(line: 1638, column: 36, scope: !9736)
!9739 = !DILocation(line: 1638, column: 59, scope: !9736)
!9740 = !DILocation(line: 1638, column: 44, scope: !9736)
!9741 = !DILocation(line: 1638, column: 42, scope: !9736)
!9742 = !DILocation(line: 1638, column: 5, scope: !9736)
!9743 = !DILocation(line: 1640, column: 11, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9745, file: !1, line: 1640, column: 11)
!9745 = distinct !DILexicalBlock(scope: !9736, file: !1, line: 1638, column: 67)
!9746 = !DILocation(line: 1640, column: 31, scope: !9744)
!9747 = !DILocation(line: 1641, column: 11, scope: !9744)
!9748 = !DILocation(line: 1641, column: 14, scope: !9749)
!9749 = !DILexicalBlockFile(scope: !9744, file: !1, discriminator: 1)
!9750 = !DILocation(line: 1641, column: 20, scope: !9749)
!9751 = !DILocation(line: 1640, column: 11, scope: !9752)
!9752 = !DILexicalBlockFile(scope: !9745, file: !1, discriminator: 1)
!9753 = !DILocation(line: 1642, column: 9, scope: !9744)
!9754 = !DILocation(line: 1643, column: 21, scope: !9745)
!9755 = !DILocation(line: 1643, column: 25, scope: !9745)
!9756 = !DILocation(line: 1643, column: 8, scope: !9745)
!9757 = !DILocation(line: 1643, column: 19, scope: !9745)
!9758 = !DILocation(line: 1644, column: 17, scope: !9745)
!9759 = !DILocation(line: 1644, column: 8, scope: !9745)
!9760 = !DILocation(line: 1644, column: 15, scope: !9745)
!9761 = !DILocation(line: 1645, column: 7, scope: !9745)
!9762 = !DILocation(line: 1648, column: 12, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9745, file: !1, line: 1648, column: 11)
!9764 = !DILocation(line: 1648, column: 32, scope: !9763)
!9765 = !DILocation(line: 1649, column: 12, scope: !9763)
!9766 = !DILocation(line: 1649, column: 15, scope: !9767)
!9767 = !DILexicalBlockFile(scope: !9763, file: !1, discriminator: 1)
!9768 = !DILocation(line: 1649, column: 35, scope: !9767)
!9769 = !DILocation(line: 1650, column: 11, scope: !9763)
!9770 = !DILocation(line: 1650, column: 14, scope: !9767)
!9771 = !DILocation(line: 1650, column: 20, scope: !9767)
!9772 = !DILocation(line: 1648, column: 11, scope: !9752)
!9773 = !DILocation(line: 1651, column: 9, scope: !9763)
!9774 = !DILocation(line: 1652, column: 17, scope: !9745)
!9775 = !DILocation(line: 1652, column: 8, scope: !9745)
!9776 = !DILocation(line: 1652, column: 15, scope: !9745)
!9777 = !DILocation(line: 1653, column: 14, scope: !9745)
!9778 = !DILocation(line: 1653, column: 7, scope: !9745)
!9779 = !DILocation(line: 1655, column: 11, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9745, file: !1, line: 1655, column: 11)
!9781 = !DILocation(line: 1655, column: 31, scope: !9780)
!9782 = !DILocation(line: 1656, column: 11, scope: !9780)
!9783 = !DILocation(line: 1656, column: 14, scope: !9784)
!9784 = !DILexicalBlockFile(scope: !9780, file: !1, discriminator: 1)
!9785 = !DILocation(line: 1656, column: 20, scope: !9784)
!9786 = !DILocation(line: 1655, column: 11, scope: !9752)
!9787 = !DILocation(line: 1657, column: 9, scope: !9780)
!9788 = !DILocation(line: 1658, column: 21, scope: !9745)
!9789 = !DILocation(line: 1658, column: 25, scope: !9745)
!9790 = !DILocation(line: 1658, column: 8, scope: !9745)
!9791 = !DILocation(line: 1658, column: 19, scope: !9745)
!9792 = !DILocation(line: 1659, column: 17, scope: !9745)
!9793 = !DILocation(line: 1659, column: 8, scope: !9745)
!9794 = !DILocation(line: 1659, column: 15, scope: !9745)
!9795 = !DILocation(line: 1660, column: 7, scope: !9745)
!9796 = !DILocation(line: 1669, column: 11, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9745, file: !1, line: 1669, column: 11)
!9798 = !DILocation(line: 1669, column: 17, scope: !9797)
!9799 = !DILocation(line: 1669, column: 11, scope: !9745)
!9800 = !DILocalVariable(name: "e", scope: !9801, file: !1, line: 1670, type: !7)
!9801 = distinct !DILexicalBlock(scope: !9797, file: !1, line: 1669, column: 39)
!9802 = !DILocation(line: 1670, column: 13, scope: !9801)
!9803 = !DILocation(line: 1670, column: 17, scope: !9801)
!9804 = !DILocation(line: 1671, column: 13, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9801, file: !1, line: 1671, column: 13)
!9806 = !DILocation(line: 1671, column: 15, scope: !9805)
!9807 = !DILocation(line: 1671, column: 33, scope: !9805)
!9808 = !DILocation(line: 1671, column: 36, scope: !9809)
!9809 = !DILexicalBlockFile(scope: !9805, file: !1, discriminator: 1)
!9810 = !DILocation(line: 1671, column: 38, scope: !9809)
!9811 = !DILocation(line: 1672, column: 13, scope: !9805)
!9812 = !DILocation(line: 1672, column: 16, scope: !9809)
!9813 = !DILocation(line: 1672, column: 18, scope: !9809)
!9814 = !DILocation(line: 1672, column: 34, scope: !9809)
!9815 = !DILocation(line: 1672, column: 37, scope: !9816)
!9816 = !DILexicalBlockFile(scope: !9805, file: !1, discriminator: 2)
!9817 = !DILocation(line: 1672, column: 39, scope: !9816)
!9818 = !DILocation(line: 1671, column: 13, scope: !9819)
!9819 = !DILexicalBlockFile(scope: !9801, file: !1, discriminator: 2)
!9820 = !DILocation(line: 1673, column: 11, scope: !9805)
!9821 = !DILocation(line: 1674, column: 7, scope: !9801)
!9822 = !DILocation(line: 1675, column: 11, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9745, file: !1, line: 1675, column: 11)
!9824 = !DILocation(line: 1675, column: 15, scope: !9823)
!9825 = !DILocation(line: 1675, column: 22, scope: !9823)
!9826 = !DILocation(line: 1675, column: 19, scope: !9823)
!9827 = !DILocation(line: 1675, column: 11, scope: !9745)
!9828 = !DILocation(line: 1676, column: 9, scope: !9823)
!9829 = !DILocation(line: 1677, column: 26, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9745, file: !1, line: 1677, column: 11)
!9831 = !DILocation(line: 1677, column: 11, scope: !9830)
!9832 = !DILocation(line: 1677, column: 33, scope: !9830)
!9833 = !DILocation(line: 1677, column: 11, scope: !9745)
!9834 = !DILocation(line: 1678, column: 23, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9830, file: !1, line: 1677, column: 42)
!9836 = !DILocation(line: 1678, column: 27, scope: !9835)
!9837 = !DILocation(line: 1678, column: 10, scope: !9835)
!9838 = !DILocation(line: 1678, column: 21, scope: !9835)
!9839 = !DILocation(line: 1679, column: 19, scope: !9835)
!9840 = !DILocation(line: 1679, column: 10, scope: !9835)
!9841 = !DILocation(line: 1679, column: 17, scope: !9835)
!9842 = !DILocation(line: 1680, column: 9, scope: !9835)
!9843 = !DILocation(line: 1682, column: 7, scope: !9745)
!9844 = !DILocation(line: 1684, column: 11, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9745, file: !1, line: 1684, column: 11)
!9846 = !DILocation(line: 1684, column: 18, scope: !9845)
!9847 = !DILocation(line: 1684, column: 11, scope: !9745)
!9848 = !DILocation(line: 1691, column: 13, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9850, file: !1, line: 1691, column: 13)
!9850 = distinct !DILexicalBlock(scope: !9845, file: !1, line: 1684, column: 27)
!9851 = !DILocation(line: 1691, column: 19, scope: !9849)
!9852 = !DILocation(line: 1691, column: 40, scope: !9849)
!9853 = !DILocation(line: 1691, column: 43, scope: !9854)
!9854 = !DILexicalBlockFile(scope: !9849, file: !1, discriminator: 1)
!9855 = !DILocation(line: 1691, column: 63, scope: !9854)
!9856 = !DILocation(line: 1691, column: 13, scope: !9854)
!9857 = !DILocation(line: 1692, column: 11, scope: !9849)
!9858 = !DILocation(line: 1693, column: 19, scope: !9850)
!9859 = !DILocation(line: 1693, column: 10, scope: !9850)
!9860 = !DILocation(line: 1693, column: 17, scope: !9850)
!9861 = !DILocation(line: 1694, column: 16, scope: !9850)
!9862 = !DILocation(line: 1694, column: 9, scope: !9850)
!9863 = !DILocation(line: 1696, column: 16, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9845, file: !1, line: 1696, column: 16)
!9865 = !DILocation(line: 1696, column: 23, scope: !9864)
!9866 = !DILocation(line: 1696, column: 16, scope: !9845)
!9867 = !DILocation(line: 1706, column: 13, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !1, line: 1706, column: 13)
!9869 = distinct !DILexicalBlock(scope: !9864, file: !1, line: 1696, column: 32)
!9870 = !DILocation(line: 1706, column: 19, scope: !9868)
!9871 = !DILocation(line: 1706, column: 13, scope: !9869)
!9872 = !DILocation(line: 1707, column: 11, scope: !9868)
!9873 = !DILocation(line: 1708, column: 19, scope: !9869)
!9874 = !DILocation(line: 1708, column: 10, scope: !9869)
!9875 = !DILocation(line: 1708, column: 17, scope: !9869)
!9876 = !DILocation(line: 1709, column: 16, scope: !9869)
!9877 = !DILocation(line: 1709, column: 9, scope: !9869)
!9878 = !DILocation(line: 1711, column: 7, scope: !9745)
!9879 = !DILocation(line: 1714, column: 27, scope: !336)
!9880 = !DILocation(line: 1714, column: 13, scope: !336)
!9881 = !DILocation(line: 1714, column: 4, scope: !336)
!9882 = !DILocation(line: 1714, column: 11, scope: !336)
!9883 = !DILocation(line: 1715, column: 10, scope: !336)
!9884 = !DILocation(line: 1715, column: 3, scope: !336)
!9885 = !DILocation(line: 1716, column: 1, scope: !336)
!9886 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !341, file: !1, line: 560, type: !82)
!9887 = !DILocation(line: 560, column: 30, scope: !341)
!9888 = !DILocalVariable(name: "fromP", arg: 2, scope: !341, file: !1, line: 561, type: !95)
!9889 = !DILocation(line: 561, column: 27, scope: !341)
!9890 = !DILocalVariable(name: "fromLim", arg: 3, scope: !341, file: !1, line: 561, type: !93)
!9891 = !DILocation(line: 561, column: 46, scope: !341)
!9892 = !DILocalVariable(name: "toP", arg: 4, scope: !341, file: !1, line: 562, type: !140)
!9893 = !DILocation(line: 562, column: 21, scope: !341)
!9894 = !DILocalVariable(name: "toLim", arg: 5, scope: !341, file: !1, line: 562, type: !93)
!9895 = !DILocation(line: 562, column: 38, scope: !341)
!9896 = !DILocation(line: 564, column: 3, scope: !341)
!9897 = !DILocation(line: 564, column: 11, scope: !9898)
!9898 = !DILexicalBlockFile(scope: !341, file: !1, discriminator: 1)
!9899 = !DILocation(line: 564, column: 10, scope: !9898)
!9900 = !DILocation(line: 564, column: 19, scope: !9898)
!9901 = !DILocation(line: 564, column: 17, scope: !9898)
!9902 = !DILocation(line: 564, column: 27, scope: !9898)
!9903 = !DILocation(line: 564, column: 31, scope: !9904)
!9904 = !DILexicalBlockFile(scope: !341, file: !1, discriminator: 2)
!9905 = !DILocation(line: 564, column: 30, scope: !9904)
!9906 = !DILocation(line: 564, column: 37, scope: !9904)
!9907 = !DILocation(line: 564, column: 35, scope: !9904)
!9908 = !DILocation(line: 564, column: 3, scope: !9909)
!9909 = !DILexicalBlockFile(scope: !341, file: !1, discriminator: 3)
!9910 = !DILocation(line: 565, column: 20, scope: !341)
!9911 = !DILocation(line: 565, column: 26, scope: !341)
!9912 = !DILocation(line: 565, column: 17, scope: !341)
!9913 = !DILocation(line: 565, column: 8, scope: !341)
!9914 = !DILocation(line: 565, column: 12, scope: !341)
!9915 = !DILocation(line: 565, column: 15, scope: !341)
!9916 = !DILocation(line: 564, column: 3, scope: !9917)
!9917 = !DILexicalBlockFile(scope: !341, file: !1, discriminator: 4)
!9918 = !DILocation(line: 567, column: 9, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !341, file: !1, line: 567, column: 7)
!9920 = !DILocation(line: 567, column: 8, scope: !9919)
!9921 = !DILocation(line: 567, column: 16, scope: !9919)
!9922 = !DILocation(line: 567, column: 13, scope: !9919)
!9923 = !DILocation(line: 567, column: 23, scope: !9919)
!9924 = !DILocation(line: 567, column: 28, scope: !9925)
!9925 = !DILexicalBlockFile(scope: !9919, file: !1, discriminator: 1)
!9926 = !DILocation(line: 567, column: 27, scope: !9925)
!9927 = !DILocation(line: 567, column: 36, scope: !9925)
!9928 = !DILocation(line: 567, column: 34, scope: !9925)
!9929 = !DILocation(line: 567, column: 7, scope: !9925)
!9930 = !DILocation(line: 568, column: 5, scope: !9919)
!9931 = !DILocation(line: 570, column: 5, scope: !9919)
!9932 = !DILocation(line: 571, column: 1, scope: !341)
!9933 = !DILocalVariable(name: "enc", arg: 1, scope: !342, file: !78, line: 967, type: !82)
!9934 = !DILocation(line: 967, column: 35, scope: !342)
!9935 = !DILocalVariable(name: "ptr", arg: 2, scope: !342, file: !78, line: 967, type: !93)
!9936 = !DILocation(line: 967, column: 52, scope: !342)
!9937 = !DILocalVariable(name: "end", arg: 3, scope: !342, file: !78, line: 967, type: !93)
!9938 = !DILocation(line: 967, column: 69, scope: !342)
!9939 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !342, file: !78, line: 968, type: !95)
!9940 = !DILocation(line: 968, column: 32, scope: !342)
!9941 = !DILocalVariable(name: "tok", scope: !342, file: !78, line: 970, type: !7)
!9942 = !DILocation(line: 970, column: 7, scope: !342)
!9943 = !DILocation(line: 971, column: 7, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !342, file: !78, line: 971, column: 7)
!9945 = !DILocation(line: 971, column: 14, scope: !9944)
!9946 = !DILocation(line: 971, column: 11, scope: !9944)
!9947 = !DILocation(line: 971, column: 7, scope: !342)
!9948 = !DILocation(line: 972, column: 5, scope: !9944)
!9949 = !DILocalVariable(name: "n", scope: !9950, file: !78, line: 974, type: !453)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !78, line: 973, column: 24)
!9951 = distinct !DILexicalBlock(scope: !342, file: !78, line: 973, column: 7)
!9952 = !DILocation(line: 974, column: 12, scope: !9950)
!9953 = !DILocation(line: 974, column: 16, scope: !9950)
!9954 = !DILocation(line: 974, column: 22, scope: !9950)
!9955 = !DILocation(line: 974, column: 20, scope: !9950)
!9956 = !DILocation(line: 975, column: 9, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9950, file: !78, line: 975, column: 9)
!9958 = !DILocation(line: 975, column: 11, scope: !9957)
!9959 = !DILocation(line: 975, column: 9, scope: !9950)
!9960 = !DILocation(line: 976, column: 9, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9957, file: !78, line: 975, column: 32)
!9962 = !DILocation(line: 977, column: 11, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9961, file: !78, line: 977, column: 11)
!9964 = !DILocation(line: 977, column: 13, scope: !9963)
!9965 = !DILocation(line: 977, column: 11, scope: !9961)
!9966 = !DILocation(line: 978, column: 9, scope: !9963)
!9967 = !DILocation(line: 979, column: 13, scope: !9961)
!9968 = !DILocation(line: 979, column: 19, scope: !9961)
!9969 = !DILocation(line: 979, column: 17, scope: !9961)
!9970 = !DILocation(line: 979, column: 11, scope: !9961)
!9971 = !DILocation(line: 980, column: 5, scope: !9961)
!9972 = !DILocation(line: 982, column: 11, scope: !342)
!9973 = !DILocation(line: 982, column: 11, scope: !9974)
!9974 = !DILexicalBlockFile(scope: !342, file: !78, discriminator: 4)
!9975 = !DILocation(line: 982, column: 11, scope: !9976)
!9976 = !DILexicalBlockFile(scope: !342, file: !78, discriminator: 5)
!9977 = !DILocation(line: 982, column: 11, scope: !9978)
!9978 = !DILexicalBlockFile(scope: !342, file: !78, discriminator: 6)
!9979 = !DILocation(line: 982, column: 3, scope: !9978)
!9980 = !DILocation(line: 984, column: 37, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !342, file: !78, line: 982, column: 32)
!9982 = !DILocation(line: 984, column: 42, scope: !9981)
!9983 = !DILocation(line: 984, column: 46, scope: !9981)
!9984 = !DILocation(line: 984, column: 61, scope: !9981)
!9985 = !DILocation(line: 984, column: 66, scope: !9981)
!9986 = !DILocation(line: 984, column: 12, scope: !9981)
!9987 = !DILocation(line: 984, column: 5, scope: !9981)
!9988 = !DILocation(line: 986, column: 37, scope: !9981)
!9989 = !DILocation(line: 986, column: 42, scope: !9981)
!9990 = !DILocation(line: 986, column: 46, scope: !9981)
!9991 = !DILocation(line: 986, column: 61, scope: !9981)
!9992 = !DILocation(line: 986, column: 66, scope: !9981)
!9993 = !DILocation(line: 986, column: 12, scope: !9981)
!9994 = !DILocation(line: 986, column: 5, scope: !9981)
!9995 = !DILocation(line: 989, column: 11, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 988, column: 5)
!9997 = !DILocation(line: 990, column: 7, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !78, line: 990, column: 7)
!9999 = distinct !DILexicalBlock(scope: !9996, file: !78, line: 990, column: 7)
!10000 = !DILocation(line: 990, column: 7, scope: !9999)
!10001 = !DILocation(line: 990, column: 7, scope: !10002)
!10002 = !DILexicalBlockFile(scope: !10003, file: !78, discriminator: 3)
!10003 = distinct !DILexicalBlock(scope: !9998, file: !78, line: 990, column: 7)
!10004 = !DILocation(line: 991, column: 15, scope: !9996)
!10005 = !DILocation(line: 991, column: 15, scope: !10006)
!10006 = !DILexicalBlockFile(scope: !9996, file: !78, discriminator: 4)
!10007 = !DILocation(line: 991, column: 15, scope: !10008)
!10008 = !DILexicalBlockFile(scope: !9996, file: !78, discriminator: 5)
!10009 = !DILocation(line: 991, column: 15, scope: !10010)
!10010 = !DILexicalBlockFile(scope: !9996, file: !78, discriminator: 6)
!10011 = !DILocation(line: 991, column: 7, scope: !10010)
!10012 = !DILocation(line: 993, column: 33, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9996, file: !78, line: 991, column: 36)
!10014 = !DILocation(line: 993, column: 38, scope: !10013)
!10015 = !DILocation(line: 993, column: 42, scope: !10013)
!10016 = !DILocation(line: 993, column: 57, scope: !10013)
!10017 = !DILocation(line: 993, column: 62, scope: !10013)
!10018 = !DILocation(line: 993, column: 16, scope: !10013)
!10019 = !DILocation(line: 993, column: 9, scope: !10013)
!10020 = !DILocation(line: 995, column: 31, scope: !10013)
!10021 = !DILocation(line: 995, column: 36, scope: !10013)
!10022 = !DILocation(line: 995, column: 40, scope: !10013)
!10023 = !DILocation(line: 995, column: 55, scope: !10013)
!10024 = !DILocation(line: 995, column: 60, scope: !10013)
!10025 = !DILocation(line: 995, column: 16, scope: !10013)
!10026 = !DILocation(line: 995, column: 9, scope: !10013)
!10027 = !DILocation(line: 1002, column: 23, scope: !10013)
!10028 = !DILocation(line: 1002, column: 27, scope: !10013)
!10029 = !DILocation(line: 1002, column: 10, scope: !10013)
!10030 = !DILocation(line: 1002, column: 21, scope: !10013)
!10031 = !DILocation(line: 1003, column: 9, scope: !10013)
!10032 = !DILocation(line: 1005, column: 21, scope: !9996)
!10033 = !DILocation(line: 1005, column: 8, scope: !9996)
!10034 = !DILocation(line: 1005, column: 19, scope: !9996)
!10035 = !DILocation(line: 1006, column: 7, scope: !9996)
!10036 = !DILocation(line: 1009, column: 9, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1009, column: 9)
!10038 = !DILocation(line: 1009, column: 13, scope: !10037)
!10039 = !DILocation(line: 1009, column: 30, scope: !10037)
!10040 = !DILocation(line: 1009, column: 27, scope: !10037)
!10041 = !DILocation(line: 1009, column: 9, scope: !9981)
!10042 = !DILocation(line: 1010, column: 21, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10037, file: !78, line: 1009, column: 35)
!10044 = !DILocation(line: 1010, column: 8, scope: !10043)
!10045 = !DILocation(line: 1010, column: 19, scope: !10043)
!10046 = !DILocation(line: 1012, column: 7, scope: !10043)
!10047 = !DILocation(line: 1009, column: 30, scope: !10048)
!10048 = !DILexicalBlockFile(scope: !10037, file: !78, discriminator: 3)
!10049 = !DILocation(line: 1016, column: 5, scope: !9981)
!10050 = !DILocation(line: 1017, column: 11, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !78, line: 1016, column: 14)
!10052 = distinct !DILexicalBlock(scope: !10053, file: !78, line: 1016, column: 5)
!10053 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1016, column: 5)
!10054 = !DILocation(line: 1018, column: 13, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !78, line: 1018, column: 11)
!10056 = !DILocation(line: 1018, column: 11, scope: !10051)
!10057 = !DILocation(line: 1019, column: 9, scope: !10055)
!10058 = !DILocation(line: 1020, column: 15, scope: !10051)
!10059 = !DILocation(line: 1020, column: 15, scope: !10060)
!10060 = !DILexicalBlockFile(scope: !10051, file: !78, discriminator: 4)
!10061 = !DILocation(line: 1020, column: 15, scope: !10062)
!10062 = !DILexicalBlockFile(scope: !10051, file: !78, discriminator: 5)
!10063 = !DILocation(line: 1020, column: 15, scope: !10064)
!10064 = !DILexicalBlockFile(scope: !10051, file: !78, discriminator: 6)
!10065 = !DILocation(line: 1020, column: 7, scope: !10064)
!10066 = !DILocation(line: 1022, column: 9, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10051, file: !78, line: 1020, column: 36)
!10068 = !DILocation(line: 1025, column: 13, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10067, file: !78, line: 1025, column: 13)
!10070 = !DILocation(line: 1025, column: 17, scope: !10069)
!10071 = !DILocation(line: 1025, column: 34, scope: !10069)
!10072 = !DILocation(line: 1025, column: 31, scope: !10069)
!10073 = !DILocation(line: 1025, column: 13, scope: !10067)
!10074 = !DILocation(line: 1026, column: 11, scope: !10069)
!10075 = !DILocation(line: 1025, column: 34, scope: !10076)
!10076 = !DILexicalBlockFile(scope: !10069, file: !78, discriminator: 3)
!10077 = !DILocation(line: 1029, column: 23, scope: !10067)
!10078 = !DILocation(line: 1029, column: 10, scope: !10067)
!10079 = !DILocation(line: 1029, column: 21, scope: !10067)
!10080 = !DILocation(line: 1030, column: 9, scope: !10067)
!10081 = !DILocation(line: 1016, column: 5, scope: !10082)
!10082 = !DILexicalBlockFile(scope: !10052, file: !78, discriminator: 3)
!10083 = !DILocation(line: 1033, column: 19, scope: !9981)
!10084 = !DILocation(line: 1033, column: 6, scope: !9981)
!10085 = !DILocation(line: 1033, column: 17, scope: !9981)
!10086 = !DILocation(line: 1034, column: 5, scope: !9981)
!10087 = !DILocation(line: 1036, column: 32, scope: !9981)
!10088 = !DILocation(line: 1036, column: 37, scope: !9981)
!10089 = !DILocation(line: 1036, column: 41, scope: !9981)
!10090 = !DILocation(line: 1036, column: 56, scope: !9981)
!10091 = !DILocation(line: 1036, column: 61, scope: !9981)
!10092 = !DILocation(line: 1036, column: 12, scope: !9981)
!10093 = !DILocation(line: 1036, column: 5, scope: !9981)
!10094 = !DILocation(line: 1038, column: 19, scope: !9981)
!10095 = !DILocation(line: 1038, column: 23, scope: !9981)
!10096 = !DILocation(line: 1038, column: 6, scope: !9981)
!10097 = !DILocation(line: 1038, column: 17, scope: !9981)
!10098 = !DILocation(line: 1039, column: 5, scope: !9981)
!10099 = !DILocation(line: 1041, column: 19, scope: !9981)
!10100 = !DILocation(line: 1041, column: 23, scope: !9981)
!10101 = !DILocation(line: 1041, column: 6, scope: !9981)
!10102 = !DILocation(line: 1041, column: 17, scope: !9981)
!10103 = !DILocation(line: 1042, column: 5, scope: !9981)
!10104 = !DILocation(line: 1044, column: 9, scope: !9981)
!10105 = !DILocation(line: 1045, column: 11, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1045, column: 9)
!10107 = !DILocation(line: 1045, column: 9, scope: !9981)
!10108 = !DILocation(line: 1046, column: 7, scope: !10106)
!10109 = !DILocation(line: 1047, column: 9, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1047, column: 9)
!10111 = !DILocation(line: 1047, column: 9, scope: !10112)
!10112 = !DILexicalBlockFile(scope: !10110, file: !78, discriminator: 2)
!10113 = !DILocation(line: 1048, column: 7, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !78, line: 1048, column: 7)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !78, line: 1048, column: 7)
!10116 = distinct !DILexicalBlock(scope: !10110, file: !78, line: 1047, column: 45)
!10117 = !DILocation(line: 1048, column: 7, scope: !10115)
!10118 = !DILocation(line: 1048, column: 7, scope: !10119)
!10119 = !DILexicalBlockFile(scope: !10120, file: !78, discriminator: 3)
!10120 = distinct !DILexicalBlock(scope: !10114, file: !78, line: 1048, column: 7)
!10121 = !DILocation(line: 1049, column: 11, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10116, file: !78, line: 1049, column: 11)
!10123 = !DILocation(line: 1049, column: 11, scope: !10124)
!10124 = !DILexicalBlockFile(scope: !10122, file: !78, discriminator: 2)
!10125 = !DILocation(line: 1050, column: 23, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10122, file: !78, line: 1049, column: 59)
!10127 = !DILocation(line: 1050, column: 27, scope: !10126)
!10128 = !DILocation(line: 1050, column: 10, scope: !10126)
!10129 = !DILocation(line: 1050, column: 21, scope: !10126)
!10130 = !DILocation(line: 1051, column: 9, scope: !10126)
!10131 = !DILocation(line: 1053, column: 5, scope: !10116)
!10132 = !DILocation(line: 1054, column: 19, scope: !9981)
!10133 = !DILocation(line: 1054, column: 6, scope: !9981)
!10134 = !DILocation(line: 1054, column: 17, scope: !9981)
!10135 = !DILocation(line: 1055, column: 5, scope: !9981)
!10136 = !DILocation(line: 1057, column: 19, scope: !9981)
!10137 = !DILocation(line: 1057, column: 23, scope: !9981)
!10138 = !DILocation(line: 1057, column: 6, scope: !9981)
!10139 = !DILocation(line: 1057, column: 17, scope: !9981)
!10140 = !DILocation(line: 1058, column: 5, scope: !9981)
!10141 = !DILocation(line: 1060, column: 9, scope: !9981)
!10142 = !DILocation(line: 1061, column: 11, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1061, column: 9)
!10144 = !DILocation(line: 1061, column: 9, scope: !9981)
!10145 = !DILocation(line: 1062, column: 7, scope: !10143)
!10146 = !DILocation(line: 1063, column: 13, scope: !9981)
!10147 = !DILocation(line: 1063, column: 13, scope: !10148)
!10148 = !DILexicalBlockFile(scope: !9981, file: !78, discriminator: 4)
!10149 = !DILocation(line: 1063, column: 13, scope: !10150)
!10150 = !DILexicalBlockFile(scope: !9981, file: !78, discriminator: 5)
!10151 = !DILocation(line: 1063, column: 13, scope: !10152)
!10152 = !DILexicalBlockFile(scope: !9981, file: !78, discriminator: 6)
!10153 = !DILocation(line: 1063, column: 5, scope: !10152)
!10154 = !DILocation(line: 1065, column: 21, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1063, column: 34)
!10156 = !DILocation(line: 1065, column: 25, scope: !10155)
!10157 = !DILocation(line: 1065, column: 8, scope: !10155)
!10158 = !DILocation(line: 1065, column: 19, scope: !10155)
!10159 = !DILocation(line: 1066, column: 7, scope: !10155)
!10160 = !DILocation(line: 1068, column: 21, scope: !10155)
!10161 = !DILocation(line: 1068, column: 25, scope: !10155)
!10162 = !DILocation(line: 1068, column: 8, scope: !10155)
!10163 = !DILocation(line: 1068, column: 19, scope: !10155)
!10164 = !DILocation(line: 1069, column: 7, scope: !10155)
!10165 = !DILocation(line: 1071, column: 21, scope: !10155)
!10166 = !DILocation(line: 1071, column: 25, scope: !10155)
!10167 = !DILocation(line: 1071, column: 8, scope: !10155)
!10168 = !DILocation(line: 1071, column: 19, scope: !10155)
!10169 = !DILocation(line: 1072, column: 7, scope: !10155)
!10170 = !DILocation(line: 1076, column: 21, scope: !10155)
!10171 = !DILocation(line: 1076, column: 8, scope: !10155)
!10172 = !DILocation(line: 1076, column: 19, scope: !10155)
!10173 = !DILocation(line: 1077, column: 7, scope: !10155)
!10174 = !DILocation(line: 1079, column: 19, scope: !9981)
!10175 = !DILocation(line: 1079, column: 6, scope: !9981)
!10176 = !DILocation(line: 1079, column: 17, scope: !9981)
!10177 = !DILocation(line: 1080, column: 5, scope: !9981)
!10178 = !DILocation(line: 1082, column: 19, scope: !9981)
!10179 = !DILocation(line: 1082, column: 23, scope: !9981)
!10180 = !DILocation(line: 1082, column: 6, scope: !9981)
!10181 = !DILocation(line: 1082, column: 17, scope: !9981)
!10182 = !DILocation(line: 1083, column: 5, scope: !9981)
!10183 = !DILocation(line: 1085, column: 19, scope: !9981)
!10184 = !DILocation(line: 1085, column: 23, scope: !9981)
!10185 = !DILocation(line: 1085, column: 6, scope: !9981)
!10186 = !DILocation(line: 1085, column: 17, scope: !9981)
!10187 = !DILocation(line: 1086, column: 5, scope: !9981)
!10188 = !DILocation(line: 1088, column: 34, scope: !9981)
!10189 = !DILocation(line: 1088, column: 39, scope: !9981)
!10190 = !DILocation(line: 1088, column: 43, scope: !9981)
!10191 = !DILocation(line: 1088, column: 58, scope: !9981)
!10192 = !DILocation(line: 1088, column: 63, scope: !9981)
!10193 = !DILocation(line: 1088, column: 12, scope: !9981)
!10194 = !DILocation(line: 1088, column: 5, scope: !9981)
!10195 = !DILocation(line: 1105, column: 5, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1105, column: 5)
!10197 = !DILocation(line: 1105, column: 5, scope: !9981)
!10198 = !DILocation(line: 1105, column: 5, scope: !10199)
!10199 = !DILexicalBlockFile(scope: !10196, file: !78, discriminator: 29)
!10200 = !DILocation(line: 1105, column: 5, scope: !10201)
!10201 = !DILexicalBlockFile(scope: !9981, file: !78, discriminator: 30)
!10202 = !DILocation(line: 1105, column: 18, scope: !10203)
!10203 = !DILexicalBlockFile(scope: !10204, file: !78, discriminator: 31)
!10204 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1105, column: 18)
!10205 = !DILocation(line: 1105, column: 18, scope: !10206)
!10206 = !DILexicalBlockFile(scope: !10204, file: !78, discriminator: 32)
!10207 = !DILocation(line: 1105, column: 18, scope: !10208)
!10208 = !DILexicalBlockFile(scope: !9981, file: !78, discriminator: 33)
!10209 = !DILocation(line: 1105, column: 31, scope: !10210)
!10210 = !DILexicalBlockFile(scope: !10211, file: !78, discriminator: 34)
!10211 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1105, column: 31)
!10212 = !DILocation(line: 1105, column: 31, scope: !10213)
!10213 = !DILexicalBlockFile(scope: !10211, file: !78, discriminator: 35)
!10214 = !DILocation(line: 1105, column: 31, scope: !10215)
!10215 = !DILexicalBlockFile(scope: !9981, file: !78, discriminator: 36)
!10216 = !DILocation(line: 1109, column: 9, scope: !9981)
!10217 = !DILocation(line: 1110, column: 9, scope: !9981)
!10218 = !DILocation(line: 1111, column: 5, scope: !9981)
!10219 = !DILocation(line: 1118, column: 9, scope: !9981)
!10220 = !DILocation(line: 1119, column: 9, scope: !9981)
!10221 = !DILocation(line: 1120, column: 5, scope: !9981)
!10222 = !DILocation(line: 1122, column: 9, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1122, column: 9)
!10224 = !DILocation(line: 1122, column: 9, scope: !9981)
!10225 = !DILocation(line: 1123, column: 11, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10223, file: !78, line: 1122, column: 42)
!10227 = !DILocation(line: 1124, column: 11, scope: !10226)
!10228 = !DILocation(line: 1125, column: 7, scope: !10226)
!10229 = !DILocation(line: 1127, column: 9, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !9981, file: !78, line: 1127, column: 9)
!10231 = !DILocation(line: 1127, column: 9, scope: !9981)
!10232 = !DILocation(line: 1128, column: 11, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10230, file: !78, line: 1127, column: 40)
!10234 = !DILocation(line: 1129, column: 11, scope: !10233)
!10235 = !DILocation(line: 1130, column: 7, scope: !10233)
!10236 = !DILocation(line: 1127, column: 9, scope: !10237)
!10237 = !DILexicalBlockFile(scope: !10230, file: !78, discriminator: 2)
!10238 = !DILocation(line: 1134, column: 19, scope: !9981)
!10239 = !DILocation(line: 1134, column: 6, scope: !9981)
!10240 = !DILocation(line: 1134, column: 17, scope: !9981)
!10241 = !DILocation(line: 1135, column: 5, scope: !9981)
!10242 = !DILocation(line: 1137, column: 3, scope: !342)
!10243 = !DILocation(line: 1137, column: 10, scope: !9976)
!10244 = !DILocation(line: 1137, column: 3, scope: !9976)
!10245 = !DILocation(line: 1138, column: 13, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !342, file: !78, line: 1137, column: 35)
!10247 = !DILocation(line: 1138, column: 13, scope: !10248)
!10248 = !DILexicalBlockFile(scope: !10246, file: !78, discriminator: 4)
!10249 = !DILocation(line: 1138, column: 13, scope: !10250)
!10250 = !DILexicalBlockFile(scope: !10246, file: !78, discriminator: 5)
!10251 = !DILocation(line: 1138, column: 13, scope: !10252)
!10252 = !DILexicalBlockFile(scope: !10246, file: !78, discriminator: 6)
!10253 = !DILocation(line: 1138, column: 5, scope: !10252)
!10254 = !DILocation(line: 1139, column: 5, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1139, column: 5)
!10256 = distinct !DILexicalBlock(scope: !10246, file: !78, line: 1138, column: 34)
!10257 = !DILocation(line: 1139, column: 5, scope: !10256)
!10258 = !DILocation(line: 1139, column: 5, scope: !10259)
!10259 = !DILexicalBlockFile(scope: !10260, file: !78, discriminator: 29)
!10260 = distinct !DILexicalBlock(scope: !10255, file: !78, line: 1139, column: 5)
!10261 = !DILocation(line: 1139, column: 5, scope: !10262)
!10262 = !DILexicalBlockFile(scope: !10255, file: !78, discriminator: 30)
!10263 = !DILocation(line: 1139, column: 5, scope: !10264)
!10264 = !DILexicalBlockFile(scope: !10256, file: !78, discriminator: 31)
!10265 = !DILocation(line: 1139, column: 5, scope: !10266)
!10266 = !DILexicalBlockFile(scope: !10267, file: !78, discriminator: 32)
!10267 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1139, column: 5)
!10268 = !DILocation(line: 1139, column: 5, scope: !10269)
!10269 = !DILexicalBlockFile(scope: !10267, file: !78, discriminator: 33)
!10270 = !DILocation(line: 1139, column: 5, scope: !10271)
!10271 = !DILexicalBlockFile(scope: !10272, file: !78, discriminator: 34)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !78, line: 1139, column: 5)
!10273 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1139, column: 5)
!10274 = !DILocation(line: 1139, column: 5, scope: !10275)
!10275 = !DILexicalBlockFile(scope: !10276, file: !78, discriminator: 35)
!10276 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1139, column: 5)
!10277 = !DILocation(line: 1139, column: 5, scope: !10278)
!10278 = !DILexicalBlockFile(scope: !10276, file: !78, discriminator: 36)
!10279 = !DILocation(line: 1139, column: 5, scope: !10280)
!10280 = !DILexicalBlockFile(scope: !10281, file: !78, discriminator: 37)
!10281 = distinct !DILexicalBlock(scope: !10282, file: !78, line: 1139, column: 5)
!10282 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1139, column: 5)
!10283 = !DILocation(line: 1139, column: 5, scope: !10284)
!10284 = !DILexicalBlockFile(scope: !10285, file: !78, discriminator: 38)
!10285 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1139, column: 5)
!10286 = !DILocation(line: 1139, column: 5, scope: !10287)
!10287 = !DILexicalBlockFile(scope: !10285, file: !78, discriminator: 39)
!10288 = !DILocation(line: 1139, column: 5, scope: !10289)
!10289 = !DILexicalBlockFile(scope: !10290, file: !78, discriminator: 40)
!10290 = distinct !DILexicalBlock(scope: !10291, file: !78, line: 1139, column: 5)
!10291 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1139, column: 5)
!10292 = !DILocation(line: 1143, column: 21, scope: !10256)
!10293 = !DILocation(line: 1143, column: 8, scope: !10256)
!10294 = !DILocation(line: 1143, column: 19, scope: !10256)
!10295 = !DILocation(line: 1144, column: 14, scope: !10256)
!10296 = !DILocation(line: 1144, column: 7, scope: !10256)
!10297 = !DILocation(line: 1166, column: 11, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1166, column: 11)
!10299 = !DILocation(line: 1166, column: 15, scope: !10298)
!10300 = !DILocation(line: 1166, column: 11, scope: !10256)
!10301 = !DILocation(line: 1167, column: 23, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10298, file: !78, line: 1166, column: 36)
!10303 = !DILocation(line: 1167, column: 10, scope: !10302)
!10304 = !DILocation(line: 1167, column: 21, scope: !10302)
!10305 = !DILocation(line: 1168, column: 9, scope: !10302)
!10306 = !DILocation(line: 1170, column: 21, scope: !10256)
!10307 = !DILocation(line: 1170, column: 25, scope: !10256)
!10308 = !DILocation(line: 1170, column: 8, scope: !10256)
!10309 = !DILocation(line: 1170, column: 19, scope: !10256)
!10310 = !DILocation(line: 1171, column: 7, scope: !10256)
!10311 = !DILocation(line: 1173, column: 11, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1173, column: 11)
!10313 = !DILocation(line: 1173, column: 15, scope: !10312)
!10314 = !DILocation(line: 1173, column: 11, scope: !10256)
!10315 = !DILocation(line: 1174, column: 23, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10312, file: !78, line: 1173, column: 36)
!10317 = !DILocation(line: 1174, column: 10, scope: !10316)
!10318 = !DILocation(line: 1174, column: 21, scope: !10316)
!10319 = !DILocation(line: 1175, column: 9, scope: !10316)
!10320 = !DILocation(line: 1177, column: 21, scope: !10256)
!10321 = !DILocation(line: 1177, column: 25, scope: !10256)
!10322 = !DILocation(line: 1177, column: 8, scope: !10256)
!10323 = !DILocation(line: 1177, column: 19, scope: !10256)
!10324 = !DILocation(line: 1178, column: 7, scope: !10256)
!10325 = !DILocation(line: 1180, column: 11, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10256, file: !78, line: 1180, column: 11)
!10327 = !DILocation(line: 1180, column: 15, scope: !10326)
!10328 = !DILocation(line: 1180, column: 11, scope: !10256)
!10329 = !DILocation(line: 1181, column: 23, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10326, file: !78, line: 1180, column: 36)
!10331 = !DILocation(line: 1181, column: 10, scope: !10330)
!10332 = !DILocation(line: 1181, column: 21, scope: !10330)
!10333 = !DILocation(line: 1182, column: 9, scope: !10330)
!10334 = !DILocation(line: 1184, column: 21, scope: !10256)
!10335 = !DILocation(line: 1184, column: 25, scope: !10256)
!10336 = !DILocation(line: 1184, column: 8, scope: !10256)
!10337 = !DILocation(line: 1184, column: 19, scope: !10256)
!10338 = !DILocation(line: 1185, column: 7, scope: !10256)
!10339 = !DILocation(line: 1187, column: 21, scope: !10256)
!10340 = !DILocation(line: 1187, column: 8, scope: !10256)
!10341 = !DILocation(line: 1187, column: 19, scope: !10256)
!10342 = !DILocation(line: 1188, column: 7, scope: !10256)
!10343 = !DILocation(line: 1137, column: 3, scope: !9978)
!10344 = !DILocation(line: 1191, column: 11, scope: !342)
!10345 = !DILocation(line: 1191, column: 10, scope: !342)
!10346 = !DILocation(line: 1191, column: 3, scope: !342)
!10347 = !DILocation(line: 1192, column: 1, scope: !342)
!10348 = !DILocalVariable(name: "enc", arg: 1, scope: !350, file: !78, line: 782, type: !82)
!10349 = !DILocation(line: 782, column: 36, scope: !350)
!10350 = !DILocalVariable(name: "ptr", arg: 2, scope: !350, file: !78, line: 782, type: !93)
!10351 = !DILocation(line: 782, column: 53, scope: !350)
!10352 = !DILocalVariable(name: "end", arg: 3, scope: !350, file: !78, line: 782, type: !93)
!10353 = !DILocation(line: 782, column: 70, scope: !350)
!10354 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !350, file: !78, line: 783, type: !95)
!10355 = !DILocation(line: 783, column: 33, scope: !350)
!10356 = !DILocation(line: 785, column: 7, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !350, file: !78, line: 785, column: 7)
!10358 = !DILocation(line: 785, column: 14, scope: !10357)
!10359 = !DILocation(line: 785, column: 11, scope: !10357)
!10360 = !DILocation(line: 785, column: 7, scope: !350)
!10361 = !DILocation(line: 786, column: 5, scope: !10357)
!10362 = !DILocalVariable(name: "n", scope: !10363, file: !78, line: 788, type: !453)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !78, line: 787, column: 24)
!10364 = distinct !DILexicalBlock(scope: !350, file: !78, line: 787, column: 7)
!10365 = !DILocation(line: 788, column: 12, scope: !10363)
!10366 = !DILocation(line: 788, column: 16, scope: !10363)
!10367 = !DILocation(line: 788, column: 22, scope: !10363)
!10368 = !DILocation(line: 788, column: 20, scope: !10363)
!10369 = !DILocation(line: 789, column: 9, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10363, file: !78, line: 789, column: 9)
!10371 = !DILocation(line: 789, column: 11, scope: !10370)
!10372 = !DILocation(line: 789, column: 9, scope: !10363)
!10373 = !DILocation(line: 790, column: 9, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !78, line: 789, column: 32)
!10375 = !DILocation(line: 791, column: 11, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10374, file: !78, line: 791, column: 11)
!10377 = !DILocation(line: 791, column: 13, scope: !10376)
!10378 = !DILocation(line: 791, column: 11, scope: !10374)
!10379 = !DILocation(line: 792, column: 9, scope: !10376)
!10380 = !DILocation(line: 793, column: 13, scope: !10374)
!10381 = !DILocation(line: 793, column: 19, scope: !10374)
!10382 = !DILocation(line: 793, column: 17, scope: !10374)
!10383 = !DILocation(line: 793, column: 11, scope: !10374)
!10384 = !DILocation(line: 794, column: 5, scope: !10374)
!10385 = !DILocation(line: 796, column: 11, scope: !350)
!10386 = !DILocation(line: 796, column: 11, scope: !10387)
!10387 = !DILexicalBlockFile(scope: !350, file: !78, discriminator: 4)
!10388 = !DILocation(line: 796, column: 11, scope: !10389)
!10389 = !DILexicalBlockFile(scope: !350, file: !78, discriminator: 5)
!10390 = !DILocation(line: 796, column: 11, scope: !10391)
!10391 = !DILexicalBlockFile(scope: !350, file: !78, discriminator: 6)
!10392 = !DILocation(line: 796, column: 3, scope: !10391)
!10393 = !DILocation(line: 798, column: 27, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !350, file: !78, line: 796, column: 32)
!10395 = !DILocation(line: 798, column: 32, scope: !10394)
!10396 = !DILocation(line: 798, column: 36, scope: !10394)
!10397 = !DILocation(line: 798, column: 51, scope: !10394)
!10398 = !DILocation(line: 798, column: 56, scope: !10394)
!10399 = !DILocation(line: 798, column: 12, scope: !10394)
!10400 = !DILocation(line: 798, column: 5, scope: !10394)
!10401 = !DILocation(line: 800, column: 28, scope: !10394)
!10402 = !DILocation(line: 800, column: 33, scope: !10394)
!10403 = !DILocation(line: 800, column: 37, scope: !10394)
!10404 = !DILocation(line: 800, column: 52, scope: !10394)
!10405 = !DILocation(line: 800, column: 57, scope: !10394)
!10406 = !DILocation(line: 800, column: 12, scope: !10394)
!10407 = !DILocation(line: 800, column: 5, scope: !10394)
!10408 = !DILocation(line: 802, column: 9, scope: !10394)
!10409 = !DILocation(line: 803, column: 11, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 803, column: 9)
!10411 = !DILocation(line: 803, column: 9, scope: !10394)
!10412 = !DILocation(line: 804, column: 7, scope: !10410)
!10413 = !DILocation(line: 805, column: 9, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 805, column: 9)
!10415 = !DILocation(line: 805, column: 9, scope: !10416)
!10416 = !DILexicalBlockFile(scope: !10414, file: !78, discriminator: 4)
!10417 = !DILocation(line: 805, column: 9, scope: !10418)
!10418 = !DILexicalBlockFile(scope: !10414, file: !78, discriminator: 5)
!10419 = !DILocation(line: 805, column: 9, scope: !10420)
!10420 = !DILexicalBlockFile(scope: !10414, file: !78, discriminator: 6)
!10421 = !DILocation(line: 805, column: 29, scope: !10420)
!10422 = !DILocation(line: 806, column: 11, scope: !10414)
!10423 = !DILocation(line: 806, column: 7, scope: !10414)
!10424 = !DILocation(line: 807, column: 19, scope: !10394)
!10425 = !DILocation(line: 807, column: 6, scope: !10394)
!10426 = !DILocation(line: 807, column: 17, scope: !10394)
!10427 = !DILocation(line: 808, column: 5, scope: !10394)
!10428 = !DILocation(line: 810, column: 19, scope: !10394)
!10429 = !DILocation(line: 810, column: 23, scope: !10394)
!10430 = !DILocation(line: 810, column: 6, scope: !10394)
!10431 = !DILocation(line: 810, column: 17, scope: !10394)
!10432 = !DILocation(line: 811, column: 5, scope: !10394)
!10433 = !DILocation(line: 813, column: 9, scope: !10394)
!10434 = !DILocation(line: 814, column: 11, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 814, column: 9)
!10436 = !DILocation(line: 814, column: 9, scope: !10394)
!10437 = !DILocation(line: 815, column: 7, scope: !10435)
!10438 = !DILocation(line: 816, column: 10, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 816, column: 9)
!10440 = !DILocation(line: 816, column: 10, scope: !10441)
!10441 = !DILexicalBlockFile(scope: !10439, file: !78, discriminator: 2)
!10442 = !DILocation(line: 816, column: 9, scope: !10441)
!10443 = !DILocation(line: 817, column: 7, scope: !10439)
!10444 = !DILocation(line: 818, column: 9, scope: !10394)
!10445 = !DILocation(line: 819, column: 11, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 819, column: 9)
!10447 = !DILocation(line: 819, column: 9, scope: !10394)
!10448 = !DILocation(line: 820, column: 7, scope: !10446)
!10449 = !DILocation(line: 821, column: 10, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 821, column: 9)
!10451 = !DILocation(line: 821, column: 10, scope: !10452)
!10452 = !DILexicalBlockFile(scope: !10450, file: !78, discriminator: 2)
!10453 = !DILocation(line: 821, column: 9, scope: !10452)
!10454 = !DILocation(line: 822, column: 11, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10450, file: !78, line: 821, column: 44)
!10456 = !DILocation(line: 823, column: 7, scope: !10455)
!10457 = !DILocation(line: 825, column: 19, scope: !10394)
!10458 = !DILocation(line: 825, column: 6, scope: !10394)
!10459 = !DILocation(line: 825, column: 17, scope: !10394)
!10460 = !DILocation(line: 826, column: 5, scope: !10394)
!10461 = !DILocation(line: 827, column: 3, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 827, column: 3)
!10463 = !DILocation(line: 827, column: 3, scope: !10394)
!10464 = !DILocation(line: 827, column: 3, scope: !10465)
!10465 = !DILexicalBlockFile(scope: !10462, file: !78, discriminator: 25)
!10466 = !DILocation(line: 827, column: 3, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !10394, file: !78, discriminator: 26)
!10468 = !DILocation(line: 827, column: 3, scope: !10469)
!10469 = !DILexicalBlockFile(scope: !10470, file: !78, discriminator: 27)
!10470 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 827, column: 3)
!10471 = !DILocation(line: 827, column: 3, scope: !10472)
!10472 = !DILexicalBlockFile(scope: !10470, file: !78, discriminator: 28)
!10473 = !DILocation(line: 827, column: 3, scope: !10474)
!10474 = !DILexicalBlockFile(scope: !10394, file: !78, discriminator: 29)
!10475 = !DILocation(line: 827, column: 3, scope: !10476)
!10476 = !DILexicalBlockFile(scope: !10477, file: !78, discriminator: 30)
!10477 = distinct !DILexicalBlock(scope: !10394, file: !78, line: 827, column: 3)
!10478 = !DILocation(line: 827, column: 3, scope: !10479)
!10479 = !DILexicalBlockFile(scope: !10477, file: !78, discriminator: 31)
!10480 = !DILocation(line: 827, column: 3, scope: !10481)
!10481 = !DILexicalBlockFile(scope: !10394, file: !78, discriminator: 32)
!10482 = !DILocation(line: 827, column: 3, scope: !10483)
!10483 = !DILexicalBlockFile(scope: !10394, file: !78, discriminator: 33)
!10484 = !DILocation(line: 829, column: 9, scope: !10394)
!10485 = !DILocation(line: 830, column: 5, scope: !10394)
!10486 = !DILocation(line: 832, column: 3, scope: !350)
!10487 = !DILocation(line: 832, column: 10, scope: !10389)
!10488 = !DILocation(line: 832, column: 3, scope: !10389)
!10489 = !DILocation(line: 833, column: 13, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !350, file: !78, line: 832, column: 35)
!10491 = !DILocation(line: 833, column: 13, scope: !10492)
!10492 = !DILexicalBlockFile(scope: !10490, file: !78, discriminator: 4)
!10493 = !DILocation(line: 833, column: 13, scope: !10494)
!10494 = !DILexicalBlockFile(scope: !10490, file: !78, discriminator: 5)
!10495 = !DILocation(line: 833, column: 13, scope: !10496)
!10496 = !DILexicalBlockFile(scope: !10490, file: !78, discriminator: 6)
!10497 = !DILocation(line: 833, column: 5, scope: !10496)
!10498 = !DILocation(line: 842, column: 5, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !78, line: 842, column: 5)
!10500 = distinct !DILexicalBlock(scope: !10490, file: !78, line: 833, column: 34)
!10501 = !DILocation(line: 842, column: 5, scope: !10500)
!10502 = !DILocation(line: 842, column: 5, scope: !10503)
!10503 = !DILexicalBlockFile(scope: !10504, file: !78, discriminator: 20)
!10504 = distinct !DILexicalBlock(scope: !10499, file: !78, line: 842, column: 5)
!10505 = !DILocation(line: 842, column: 5, scope: !10506)
!10506 = !DILexicalBlockFile(scope: !10500, file: !78, discriminator: 21)
!10507 = !DILocation(line: 842, column: 18, scope: !10508)
!10508 = !DILexicalBlockFile(scope: !10509, file: !78, discriminator: 22)
!10509 = distinct !DILexicalBlock(scope: !10500, file: !78, line: 842, column: 18)
!10510 = !DILocation(line: 842, column: 18, scope: !10511)
!10511 = !DILexicalBlockFile(scope: !10512, file: !78, discriminator: 23)
!10512 = distinct !DILexicalBlock(scope: !10509, file: !78, line: 842, column: 18)
!10513 = !DILocation(line: 842, column: 18, scope: !10514)
!10514 = !DILexicalBlockFile(scope: !10500, file: !78, discriminator: 24)
!10515 = !DILocation(line: 842, column: 31, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !10517, file: !78, discriminator: 25)
!10517 = distinct !DILexicalBlock(scope: !10500, file: !78, line: 842, column: 31)
!10518 = !DILocation(line: 842, column: 31, scope: !10519)
!10519 = !DILexicalBlockFile(scope: !10520, file: !78, discriminator: 26)
!10520 = distinct !DILexicalBlock(scope: !10517, file: !78, line: 842, column: 31)
!10521 = !DILocation(line: 842, column: 31, scope: !10522)
!10522 = !DILexicalBlockFile(scope: !10500, file: !78, discriminator: 27)
!10523 = !DILocation(line: 845, column: 11, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10500, file: !78, line: 845, column: 11)
!10525 = !DILocation(line: 845, column: 11, scope: !10500)
!10526 = !DILocation(line: 846, column: 15, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !78, line: 846, column: 14)
!10528 = distinct !DILexicalBlock(scope: !10524, file: !78, line: 845, column: 40)
!10529 = !DILocation(line: 846, column: 15, scope: !10530)
!10530 = !DILexicalBlockFile(scope: !10527, file: !78, discriminator: 2)
!10531 = !DILocation(line: 846, column: 14, scope: !10530)
!10532 = !DILocation(line: 847, column: 16, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10527, file: !78, line: 846, column: 65)
!10534 = !DILocation(line: 848, column: 12, scope: !10533)
!10535 = !DILocation(line: 850, column: 14, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10528, file: !78, line: 850, column: 14)
!10537 = !DILocation(line: 850, column: 14, scope: !10528)
!10538 = !DILocation(line: 851, column: 17, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10540, file: !78, line: 851, column: 16)
!10540 = distinct !DILexicalBlock(scope: !10536, file: !78, line: 850, column: 43)
!10541 = !DILocation(line: 851, column: 17, scope: !10542)
!10542 = !DILexicalBlockFile(scope: !10539, file: !78, discriminator: 2)
!10543 = !DILocation(line: 851, column: 16, scope: !10542)
!10544 = !DILocation(line: 852, column: 18, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10539, file: !78, line: 851, column: 67)
!10546 = !DILocation(line: 853, column: 14, scope: !10545)
!10547 = !DILocation(line: 855, column: 26, scope: !10540)
!10548 = !DILocation(line: 855, column: 30, scope: !10540)
!10549 = !DILocation(line: 855, column: 13, scope: !10540)
!10550 = !DILocation(line: 855, column: 24, scope: !10540)
!10551 = !DILocation(line: 856, column: 12, scope: !10540)
!10552 = !DILocation(line: 858, column: 7, scope: !10528)
!10553 = !DILocation(line: 845, column: 11, scope: !10554)
!10554 = !DILexicalBlockFile(scope: !10524, file: !78, discriminator: 3)
!10555 = !DILocation(line: 867, column: 21, scope: !10500)
!10556 = !DILocation(line: 867, column: 8, scope: !10500)
!10557 = !DILocation(line: 867, column: 19, scope: !10500)
!10558 = !DILocation(line: 868, column: 7, scope: !10500)
!10559 = !DILocation(line: 870, column: 11, scope: !10500)
!10560 = !DILocation(line: 871, column: 7, scope: !10500)
!10561 = !DILocation(line: 832, column: 3, scope: !10391)
!10562 = !DILocation(line: 874, column: 17, scope: !350)
!10563 = !DILocation(line: 874, column: 4, scope: !350)
!10564 = !DILocation(line: 874, column: 15, scope: !350)
!10565 = !DILocation(line: 875, column: 3, scope: !350)
!10566 = !DILocation(line: 876, column: 1, scope: !350)
!10567 = !DILocalVariable(name: "enc", arg: 1, scope: !358, file: !78, line: 317, type: !82)
!10568 = !DILocation(line: 317, column: 41, scope: !358)
!10569 = !DILocalVariable(name: "ptr", arg: 2, scope: !358, file: !78, line: 317, type: !93)
!10570 = !DILocation(line: 317, column: 58, scope: !358)
!10571 = !DILocalVariable(name: "end", arg: 3, scope: !358, file: !78, line: 318, type: !93)
!10572 = !DILocation(line: 318, column: 37, scope: !358)
!10573 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !358, file: !78, line: 318, type: !95)
!10574 = !DILocation(line: 318, column: 55, scope: !358)
!10575 = !DILocation(line: 320, column: 7, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !358, file: !78, line: 320, column: 7)
!10577 = !DILocation(line: 320, column: 14, scope: !10576)
!10578 = !DILocation(line: 320, column: 11, scope: !10576)
!10579 = !DILocation(line: 320, column: 7, scope: !358)
!10580 = !DILocation(line: 321, column: 5, scope: !10576)
!10581 = !DILocalVariable(name: "n", scope: !10582, file: !78, line: 323, type: !453)
!10582 = distinct !DILexicalBlock(scope: !10583, file: !78, line: 322, column: 24)
!10583 = distinct !DILexicalBlock(scope: !358, file: !78, line: 322, column: 7)
!10584 = !DILocation(line: 323, column: 12, scope: !10582)
!10585 = !DILocation(line: 323, column: 16, scope: !10582)
!10586 = !DILocation(line: 323, column: 22, scope: !10582)
!10587 = !DILocation(line: 323, column: 20, scope: !10582)
!10588 = !DILocation(line: 324, column: 9, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10582, file: !78, line: 324, column: 9)
!10590 = !DILocation(line: 324, column: 11, scope: !10589)
!10591 = !DILocation(line: 324, column: 9, scope: !10582)
!10592 = !DILocation(line: 325, column: 9, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10589, file: !78, line: 324, column: 32)
!10594 = !DILocation(line: 326, column: 11, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10593, file: !78, line: 326, column: 11)
!10596 = !DILocation(line: 326, column: 13, scope: !10595)
!10597 = !DILocation(line: 326, column: 11, scope: !10593)
!10598 = !DILocation(line: 327, column: 9, scope: !10595)
!10599 = !DILocation(line: 328, column: 13, scope: !10593)
!10600 = !DILocation(line: 328, column: 19, scope: !10593)
!10601 = !DILocation(line: 328, column: 17, scope: !10593)
!10602 = !DILocation(line: 328, column: 11, scope: !10593)
!10603 = !DILocation(line: 329, column: 5, scope: !10593)
!10604 = !DILocation(line: 331, column: 11, scope: !358)
!10605 = !DILocation(line: 331, column: 11, scope: !10606)
!10606 = !DILexicalBlockFile(scope: !358, file: !78, discriminator: 4)
!10607 = !DILocation(line: 331, column: 11, scope: !10608)
!10608 = !DILexicalBlockFile(scope: !358, file: !78, discriminator: 5)
!10609 = !DILocation(line: 331, column: 11, scope: !10610)
!10610 = !DILexicalBlockFile(scope: !358, file: !78, discriminator: 6)
!10611 = !DILocation(line: 331, column: 3, scope: !10610)
!10612 = !DILocation(line: 333, column: 9, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !358, file: !78, line: 331, column: 32)
!10614 = !DILocation(line: 334, column: 5, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !78, line: 334, column: 5)
!10616 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 334, column: 5)
!10617 = !DILocation(line: 334, column: 5, scope: !10616)
!10618 = !DILocation(line: 334, column: 5, scope: !10619)
!10619 = !DILexicalBlockFile(scope: !10620, file: !78, discriminator: 3)
!10620 = distinct !DILexicalBlock(scope: !10615, file: !78, line: 334, column: 5)
!10621 = !DILocation(line: 335, column: 10, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 335, column: 9)
!10623 = !DILocation(line: 335, column: 10, scope: !10624)
!10624 = !DILexicalBlockFile(scope: !10622, file: !78, discriminator: 2)
!10625 = !DILocation(line: 335, column: 9, scope: !10624)
!10626 = !DILocation(line: 336, column: 7, scope: !10622)
!10627 = !DILocation(line: 337, column: 9, scope: !10613)
!10628 = !DILocation(line: 338, column: 5, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10630, file: !78, line: 338, column: 5)
!10630 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 338, column: 5)
!10631 = !DILocation(line: 338, column: 5, scope: !10630)
!10632 = !DILocation(line: 338, column: 5, scope: !10633)
!10633 = !DILexicalBlockFile(scope: !10634, file: !78, discriminator: 3)
!10634 = distinct !DILexicalBlock(scope: !10629, file: !78, line: 338, column: 5)
!10635 = !DILocation(line: 339, column: 10, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 339, column: 9)
!10637 = !DILocation(line: 339, column: 10, scope: !10638)
!10638 = !DILexicalBlockFile(scope: !10636, file: !78, discriminator: 2)
!10639 = !DILocation(line: 339, column: 9, scope: !10638)
!10640 = !DILocation(line: 340, column: 11, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10636, file: !78, line: 339, column: 44)
!10642 = !DILocation(line: 341, column: 7, scope: !10641)
!10643 = !DILocation(line: 343, column: 19, scope: !10613)
!10644 = !DILocation(line: 343, column: 23, scope: !10613)
!10645 = !DILocation(line: 343, column: 6, scope: !10613)
!10646 = !DILocation(line: 343, column: 17, scope: !10613)
!10647 = !DILocation(line: 344, column: 5, scope: !10613)
!10648 = !DILocation(line: 346, column: 9, scope: !10613)
!10649 = !DILocation(line: 347, column: 5, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !78, line: 347, column: 5)
!10651 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 347, column: 5)
!10652 = !DILocation(line: 347, column: 5, scope: !10651)
!10653 = !DILocation(line: 347, column: 5, scope: !10654)
!10654 = !DILexicalBlockFile(scope: !10655, file: !78, discriminator: 3)
!10655 = distinct !DILexicalBlock(scope: !10650, file: !78, line: 347, column: 5)
!10656 = !DILocation(line: 348, column: 9, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 348, column: 9)
!10658 = !DILocation(line: 348, column: 9, scope: !10659)
!10659 = !DILexicalBlockFile(scope: !10657, file: !78, discriminator: 4)
!10660 = !DILocation(line: 348, column: 9, scope: !10661)
!10661 = !DILexicalBlockFile(scope: !10657, file: !78, discriminator: 5)
!10662 = !DILocation(line: 348, column: 9, scope: !10663)
!10663 = !DILexicalBlockFile(scope: !10657, file: !78, discriminator: 6)
!10664 = !DILocation(line: 348, column: 29, scope: !10663)
!10665 = !DILocation(line: 349, column: 11, scope: !10657)
!10666 = !DILocation(line: 349, column: 7, scope: !10657)
!10667 = !DILocation(line: 350, column: 19, scope: !10613)
!10668 = !DILocation(line: 350, column: 6, scope: !10613)
!10669 = !DILocation(line: 350, column: 17, scope: !10613)
!10670 = !DILocation(line: 351, column: 5, scope: !10613)
!10671 = !DILocation(line: 353, column: 19, scope: !10613)
!10672 = !DILocation(line: 353, column: 23, scope: !10613)
!10673 = !DILocation(line: 353, column: 6, scope: !10613)
!10674 = !DILocation(line: 353, column: 17, scope: !10613)
!10675 = !DILocation(line: 354, column: 5, scope: !10613)
!10676 = !DILocation(line: 355, column: 3, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 355, column: 3)
!10678 = !DILocation(line: 355, column: 3, scope: !10613)
!10679 = !DILocation(line: 355, column: 3, scope: !10680)
!10680 = !DILexicalBlockFile(scope: !10677, file: !78, discriminator: 25)
!10681 = !DILocation(line: 355, column: 3, scope: !10682)
!10682 = !DILexicalBlockFile(scope: !10613, file: !78, discriminator: 26)
!10683 = !DILocation(line: 355, column: 3, scope: !10684)
!10684 = !DILexicalBlockFile(scope: !10685, file: !78, discriminator: 27)
!10685 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 355, column: 3)
!10686 = !DILocation(line: 355, column: 3, scope: !10687)
!10687 = !DILexicalBlockFile(scope: !10685, file: !78, discriminator: 28)
!10688 = !DILocation(line: 355, column: 3, scope: !10689)
!10689 = !DILexicalBlockFile(scope: !10613, file: !78, discriminator: 29)
!10690 = !DILocation(line: 355, column: 3, scope: !10691)
!10691 = !DILexicalBlockFile(scope: !10692, file: !78, discriminator: 30)
!10692 = distinct !DILexicalBlock(scope: !10613, file: !78, line: 355, column: 3)
!10693 = !DILocation(line: 355, column: 3, scope: !10694)
!10694 = !DILexicalBlockFile(scope: !10692, file: !78, discriminator: 31)
!10695 = !DILocation(line: 355, column: 3, scope: !10696)
!10696 = !DILexicalBlockFile(scope: !10613, file: !78, discriminator: 32)
!10697 = !DILocation(line: 355, column: 3, scope: !10698)
!10698 = !DILexicalBlockFile(scope: !10613, file: !78, discriminator: 33)
!10699 = !DILocation(line: 357, column: 9, scope: !10613)
!10700 = !DILocation(line: 358, column: 5, scope: !10613)
!10701 = !DILocation(line: 360, column: 3, scope: !358)
!10702 = !DILocation(line: 360, column: 10, scope: !10608)
!10703 = !DILocation(line: 360, column: 3, scope: !10608)
!10704 = !DILocation(line: 361, column: 13, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !358, file: !78, line: 360, column: 35)
!10706 = !DILocation(line: 361, column: 13, scope: !10707)
!10707 = !DILexicalBlockFile(scope: !10705, file: !78, discriminator: 4)
!10708 = !DILocation(line: 361, column: 13, scope: !10709)
!10709 = !DILexicalBlockFile(scope: !10705, file: !78, discriminator: 5)
!10710 = !DILocation(line: 361, column: 13, scope: !10711)
!10711 = !DILexicalBlockFile(scope: !10705, file: !78, discriminator: 6)
!10712 = !DILocation(line: 361, column: 5, scope: !10711)
!10713 = !DILocation(line: 370, column: 5, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10715, file: !78, line: 370, column: 5)
!10715 = distinct !DILexicalBlock(scope: !10705, file: !78, line: 361, column: 34)
!10716 = !DILocation(line: 370, column: 5, scope: !10715)
!10717 = !DILocation(line: 370, column: 5, scope: !10718)
!10718 = !DILexicalBlockFile(scope: !10719, file: !78, discriminator: 20)
!10719 = distinct !DILexicalBlock(scope: !10714, file: !78, line: 370, column: 5)
!10720 = !DILocation(line: 370, column: 5, scope: !10721)
!10721 = !DILexicalBlockFile(scope: !10715, file: !78, discriminator: 21)
!10722 = !DILocation(line: 370, column: 18, scope: !10723)
!10723 = !DILexicalBlockFile(scope: !10724, file: !78, discriminator: 22)
!10724 = distinct !DILexicalBlock(scope: !10715, file: !78, line: 370, column: 18)
!10725 = !DILocation(line: 370, column: 18, scope: !10726)
!10726 = !DILexicalBlockFile(scope: !10727, file: !78, discriminator: 23)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !78, line: 370, column: 18)
!10728 = !DILocation(line: 370, column: 18, scope: !10729)
!10729 = !DILexicalBlockFile(scope: !10715, file: !78, discriminator: 24)
!10730 = !DILocation(line: 370, column: 31, scope: !10731)
!10731 = !DILexicalBlockFile(scope: !10732, file: !78, discriminator: 25)
!10732 = distinct !DILexicalBlock(scope: !10715, file: !78, line: 370, column: 31)
!10733 = !DILocation(line: 370, column: 31, scope: !10734)
!10734 = !DILexicalBlockFile(scope: !10735, file: !78, discriminator: 26)
!10735 = distinct !DILexicalBlock(scope: !10732, file: !78, line: 370, column: 31)
!10736 = !DILocation(line: 370, column: 31, scope: !10737)
!10737 = !DILexicalBlockFile(scope: !10715, file: !78, discriminator: 27)
!10738 = !DILocation(line: 378, column: 21, scope: !10715)
!10739 = !DILocation(line: 378, column: 8, scope: !10715)
!10740 = !DILocation(line: 378, column: 19, scope: !10715)
!10741 = !DILocation(line: 379, column: 7, scope: !10715)
!10742 = !DILocation(line: 381, column: 11, scope: !10715)
!10743 = !DILocation(line: 382, column: 7, scope: !10715)
!10744 = !DILocation(line: 360, column: 3, scope: !10610)
!10745 = !DILocation(line: 385, column: 17, scope: !358)
!10746 = !DILocation(line: 385, column: 4, scope: !358)
!10747 = !DILocation(line: 385, column: 15, scope: !358)
!10748 = !DILocation(line: 386, column: 3, scope: !358)
!10749 = !DILocation(line: 387, column: 1, scope: !358)
!10750 = !DILocalVariable(name: "enc", arg: 1, scope: !359, file: !78, line: 1195, type: !82)
!10751 = !DILocation(line: 1195, column: 43, scope: !359)
!10752 = !DILocalVariable(name: "ptr", arg: 2, scope: !359, file: !78, line: 1195, type: !93)
!10753 = !DILocation(line: 1195, column: 60, scope: !359)
!10754 = !DILocalVariable(name: "end", arg: 3, scope: !359, file: !78, line: 1196, type: !93)
!10755 = !DILocation(line: 1196, column: 39, scope: !359)
!10756 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !359, file: !78, line: 1196, type: !95)
!10757 = !DILocation(line: 1196, column: 57, scope: !359)
!10758 = !DILocalVariable(name: "start", scope: !359, file: !78, line: 1198, type: !93)
!10759 = !DILocation(line: 1198, column: 15, scope: !359)
!10760 = !DILocation(line: 1199, column: 7, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !359, file: !78, line: 1199, column: 7)
!10762 = !DILocation(line: 1199, column: 14, scope: !10761)
!10763 = !DILocation(line: 1199, column: 11, scope: !10761)
!10764 = !DILocation(line: 1199, column: 7, scope: !359)
!10765 = !DILocation(line: 1200, column: 5, scope: !10761)
!10766 = !DILocation(line: 1201, column: 11, scope: !359)
!10767 = !DILocation(line: 1201, column: 9, scope: !359)
!10768 = !DILocation(line: 1202, column: 3, scope: !359)
!10769 = !DILocation(line: 1202, column: 10, scope: !10770)
!10770 = !DILexicalBlockFile(scope: !359, file: !78, discriminator: 5)
!10771 = !DILocation(line: 1202, column: 3, scope: !10770)
!10772 = !DILocation(line: 1203, column: 13, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !359, file: !78, line: 1202, column: 35)
!10774 = !DILocation(line: 1203, column: 13, scope: !10775)
!10775 = !DILexicalBlockFile(scope: !10773, file: !78, discriminator: 4)
!10776 = !DILocation(line: 1203, column: 13, scope: !10777)
!10777 = !DILexicalBlockFile(scope: !10773, file: !78, discriminator: 5)
!10778 = !DILocation(line: 1203, column: 13, scope: !10779)
!10779 = !DILexicalBlockFile(scope: !10773, file: !78, discriminator: 6)
!10780 = !DILocation(line: 1203, column: 5, scope: !10779)
!10781 = !DILocation(line: 1206, column: 5, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10773, file: !78, line: 1203, column: 34)
!10783 = !DILocation(line: 1206, column: 18, scope: !10784)
!10784 = !DILexicalBlockFile(scope: !10782, file: !78, discriminator: 5)
!10785 = !DILocation(line: 1206, column: 31, scope: !10786)
!10786 = !DILexicalBlockFile(scope: !10782, file: !78, discriminator: 6)
!10787 = !DILocation(line: 1209, column: 11, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10782, file: !78, line: 1209, column: 11)
!10789 = !DILocation(line: 1209, column: 18, scope: !10788)
!10790 = !DILocation(line: 1209, column: 15, scope: !10788)
!10791 = !DILocation(line: 1209, column: 11, scope: !10782)
!10792 = !DILocation(line: 1210, column: 32, scope: !10788)
!10793 = !DILocation(line: 1210, column: 37, scope: !10788)
!10794 = !DILocation(line: 1210, column: 41, scope: !10788)
!10795 = !DILocation(line: 1210, column: 56, scope: !10788)
!10796 = !DILocation(line: 1210, column: 61, scope: !10788)
!10797 = !DILocation(line: 1210, column: 16, scope: !10788)
!10798 = !DILocation(line: 1210, column: 9, scope: !10788)
!10799 = !DILocation(line: 1211, column: 21, scope: !10782)
!10800 = !DILocation(line: 1211, column: 8, scope: !10782)
!10801 = !DILocation(line: 1211, column: 19, scope: !10782)
!10802 = !DILocation(line: 1212, column: 7, scope: !10782)
!10803 = !DILocation(line: 1215, column: 21, scope: !10782)
!10804 = !DILocation(line: 1215, column: 8, scope: !10782)
!10805 = !DILocation(line: 1215, column: 19, scope: !10782)
!10806 = !DILocation(line: 1216, column: 7, scope: !10782)
!10807 = !DILocation(line: 1218, column: 11, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10782, file: !78, line: 1218, column: 11)
!10809 = !DILocation(line: 1218, column: 18, scope: !10808)
!10810 = !DILocation(line: 1218, column: 15, scope: !10808)
!10811 = !DILocation(line: 1218, column: 11, scope: !10782)
!10812 = !DILocation(line: 1219, column: 23, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10808, file: !78, line: 1218, column: 25)
!10814 = !DILocation(line: 1219, column: 27, scope: !10813)
!10815 = !DILocation(line: 1219, column: 10, scope: !10813)
!10816 = !DILocation(line: 1219, column: 21, scope: !10813)
!10817 = !DILocation(line: 1220, column: 9, scope: !10813)
!10818 = !DILocation(line: 1222, column: 21, scope: !10782)
!10819 = !DILocation(line: 1222, column: 8, scope: !10782)
!10820 = !DILocation(line: 1222, column: 19, scope: !10782)
!10821 = !DILocation(line: 1223, column: 7, scope: !10782)
!10822 = !DILocation(line: 1225, column: 11, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10782, file: !78, line: 1225, column: 11)
!10824 = !DILocation(line: 1225, column: 18, scope: !10823)
!10825 = !DILocation(line: 1225, column: 15, scope: !10823)
!10826 = !DILocation(line: 1225, column: 11, scope: !10782)
!10827 = !DILocation(line: 1226, column: 13, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10823, file: !78, line: 1225, column: 25)
!10829 = !DILocation(line: 1227, column: 15, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10828, file: !78, line: 1227, column: 13)
!10831 = !DILocation(line: 1227, column: 13, scope: !10828)
!10832 = !DILocation(line: 1228, column: 11, scope: !10830)
!10833 = !DILocation(line: 1229, column: 13, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10828, file: !78, line: 1229, column: 13)
!10835 = !DILocation(line: 1229, column: 13, scope: !10836)
!10836 = !DILexicalBlockFile(scope: !10834, file: !78, discriminator: 4)
!10837 = !DILocation(line: 1229, column: 13, scope: !10838)
!10838 = !DILexicalBlockFile(scope: !10834, file: !78, discriminator: 5)
!10839 = !DILocation(line: 1229, column: 13, scope: !10840)
!10840 = !DILexicalBlockFile(scope: !10834, file: !78, discriminator: 6)
!10841 = !DILocation(line: 1229, column: 33, scope: !10840)
!10842 = !DILocation(line: 1230, column: 15, scope: !10834)
!10843 = !DILocation(line: 1230, column: 11, scope: !10834)
!10844 = !DILocation(line: 1231, column: 23, scope: !10828)
!10845 = !DILocation(line: 1231, column: 10, scope: !10828)
!10846 = !DILocation(line: 1231, column: 21, scope: !10828)
!10847 = !DILocation(line: 1232, column: 9, scope: !10828)
!10848 = !DILocation(line: 1234, column: 21, scope: !10782)
!10849 = !DILocation(line: 1234, column: 8, scope: !10782)
!10850 = !DILocation(line: 1234, column: 19, scope: !10782)
!10851 = !DILocation(line: 1235, column: 7, scope: !10782)
!10852 = !DILocation(line: 1237, column: 11, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10782, file: !78, line: 1237, column: 11)
!10854 = !DILocation(line: 1237, column: 18, scope: !10853)
!10855 = !DILocation(line: 1237, column: 15, scope: !10853)
!10856 = !DILocation(line: 1237, column: 11, scope: !10782)
!10857 = !DILocation(line: 1238, column: 23, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10853, file: !78, line: 1237, column: 25)
!10859 = !DILocation(line: 1238, column: 27, scope: !10858)
!10860 = !DILocation(line: 1238, column: 10, scope: !10858)
!10861 = !DILocation(line: 1238, column: 21, scope: !10858)
!10862 = !DILocation(line: 1239, column: 9, scope: !10858)
!10863 = !DILocation(line: 1241, column: 21, scope: !10782)
!10864 = !DILocation(line: 1241, column: 8, scope: !10782)
!10865 = !DILocation(line: 1241, column: 19, scope: !10782)
!10866 = !DILocation(line: 1242, column: 7, scope: !10782)
!10867 = !DILocation(line: 1244, column: 11, scope: !10782)
!10868 = !DILocation(line: 1245, column: 7, scope: !10782)
!10869 = !DILocation(line: 1202, column: 3, scope: !10870)
!10870 = !DILexicalBlockFile(scope: !359, file: !78, discriminator: 6)
!10871 = !DILocation(line: 1248, column: 17, scope: !359)
!10872 = !DILocation(line: 1248, column: 4, scope: !359)
!10873 = !DILocation(line: 1248, column: 15, scope: !359)
!10874 = !DILocation(line: 1249, column: 3, scope: !359)
!10875 = !DILocation(line: 1250, column: 1, scope: !359)
!10876 = !DILocalVariable(name: "enc", arg: 1, scope: !360, file: !78, line: 1253, type: !82)
!10877 = !DILocation(line: 1253, column: 40, scope: !360)
!10878 = !DILocalVariable(name: "ptr", arg: 2, scope: !360, file: !78, line: 1253, type: !93)
!10879 = !DILocation(line: 1253, column: 57, scope: !360)
!10880 = !DILocalVariable(name: "end", arg: 3, scope: !360, file: !78, line: 1254, type: !93)
!10881 = !DILocation(line: 1254, column: 36, scope: !360)
!10882 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !360, file: !78, line: 1254, type: !95)
!10883 = !DILocation(line: 1254, column: 54, scope: !360)
!10884 = !DILocalVariable(name: "start", scope: !360, file: !78, line: 1256, type: !93)
!10885 = !DILocation(line: 1256, column: 15, scope: !360)
!10886 = !DILocation(line: 1257, column: 7, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !360, file: !78, line: 1257, column: 7)
!10888 = !DILocation(line: 1257, column: 14, scope: !10887)
!10889 = !DILocation(line: 1257, column: 11, scope: !10887)
!10890 = !DILocation(line: 1257, column: 7, scope: !360)
!10891 = !DILocation(line: 1258, column: 5, scope: !10887)
!10892 = !DILocation(line: 1259, column: 11, scope: !360)
!10893 = !DILocation(line: 1259, column: 9, scope: !360)
!10894 = !DILocation(line: 1260, column: 3, scope: !360)
!10895 = !DILocation(line: 1260, column: 10, scope: !10896)
!10896 = !DILexicalBlockFile(scope: !360, file: !78, discriminator: 5)
!10897 = !DILocation(line: 1260, column: 3, scope: !10896)
!10898 = !DILocation(line: 1261, column: 13, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !360, file: !78, line: 1260, column: 35)
!10900 = !DILocation(line: 1261, column: 13, scope: !10901)
!10901 = !DILexicalBlockFile(scope: !10899, file: !78, discriminator: 4)
!10902 = !DILocation(line: 1261, column: 13, scope: !10903)
!10903 = !DILexicalBlockFile(scope: !10899, file: !78, discriminator: 5)
!10904 = !DILocation(line: 1261, column: 13, scope: !10905)
!10905 = !DILexicalBlockFile(scope: !10899, file: !78, discriminator: 6)
!10906 = !DILocation(line: 1261, column: 5, scope: !10905)
!10907 = !DILocation(line: 1264, column: 5, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10899, file: !78, line: 1261, column: 34)
!10909 = !DILocation(line: 1264, column: 18, scope: !10910)
!10910 = !DILexicalBlockFile(scope: !10908, file: !78, discriminator: 5)
!10911 = !DILocation(line: 1264, column: 31, scope: !10912)
!10912 = !DILexicalBlockFile(scope: !10908, file: !78, discriminator: 6)
!10913 = !DILocation(line: 1267, column: 11, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10908, file: !78, line: 1267, column: 11)
!10915 = !DILocation(line: 1267, column: 18, scope: !10914)
!10916 = !DILocation(line: 1267, column: 15, scope: !10914)
!10917 = !DILocation(line: 1267, column: 11, scope: !10908)
!10918 = !DILocation(line: 1268, column: 32, scope: !10914)
!10919 = !DILocation(line: 1268, column: 37, scope: !10914)
!10920 = !DILocation(line: 1268, column: 41, scope: !10914)
!10921 = !DILocation(line: 1268, column: 56, scope: !10914)
!10922 = !DILocation(line: 1268, column: 61, scope: !10914)
!10923 = !DILocation(line: 1268, column: 16, scope: !10914)
!10924 = !DILocation(line: 1268, column: 9, scope: !10914)
!10925 = !DILocation(line: 1269, column: 21, scope: !10908)
!10926 = !DILocation(line: 1269, column: 8, scope: !10908)
!10927 = !DILocation(line: 1269, column: 19, scope: !10908)
!10928 = !DILocation(line: 1270, column: 7, scope: !10908)
!10929 = !DILocation(line: 1272, column: 11, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10908, file: !78, line: 1272, column: 11)
!10931 = !DILocation(line: 1272, column: 18, scope: !10930)
!10932 = !DILocation(line: 1272, column: 15, scope: !10930)
!10933 = !DILocation(line: 1272, column: 11, scope: !10908)
!10934 = !DILocalVariable(name: "tok", scope: !10935, file: !78, line: 1273, type: !7)
!10935 = distinct !DILexicalBlock(scope: !10930, file: !78, line: 1272, column: 25)
!10936 = !DILocation(line: 1273, column: 13, scope: !10935)
!10937 = !DILocation(line: 1273, column: 40, scope: !10935)
!10938 = !DILocation(line: 1273, column: 45, scope: !10935)
!10939 = !DILocation(line: 1273, column: 49, scope: !10935)
!10940 = !DILocation(line: 1274, column: 40, scope: !10935)
!10941 = !DILocation(line: 1274, column: 45, scope: !10935)
!10942 = !DILocation(line: 1273, column: 20, scope: !10935)
!10943 = !DILocation(line: 1275, column: 17, scope: !10935)
!10944 = !DILocation(line: 1275, column: 21, scope: !10935)
!10945 = !DILocation(line: 1275, column: 16, scope: !10935)
!10946 = !DILocation(line: 1275, column: 16, scope: !10947)
!10947 = !DILexicalBlockFile(scope: !10935, file: !78, discriminator: 7)
!10948 = !DILocation(line: 1275, column: 61, scope: !10949)
!10949 = !DILexicalBlockFile(scope: !10935, file: !78, discriminator: 8)
!10950 = !DILocation(line: 1275, column: 16, scope: !10949)
!10951 = !DILocation(line: 1275, column: 16, scope: !10952)
!10952 = !DILexicalBlockFile(scope: !10935, file: !78, discriminator: 9)
!10953 = !DILocation(line: 1275, column: 9, scope: !10952)
!10954 = !DILocation(line: 1277, column: 21, scope: !10908)
!10955 = !DILocation(line: 1277, column: 8, scope: !10908)
!10956 = !DILocation(line: 1277, column: 19, scope: !10908)
!10957 = !DILocation(line: 1278, column: 7, scope: !10908)
!10958 = !DILocation(line: 1280, column: 11, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10908, file: !78, line: 1280, column: 11)
!10960 = !DILocation(line: 1280, column: 18, scope: !10959)
!10961 = !DILocation(line: 1280, column: 15, scope: !10959)
!10962 = !DILocation(line: 1280, column: 11, scope: !10908)
!10963 = !DILocation(line: 1281, column: 23, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10959, file: !78, line: 1280, column: 25)
!10965 = !DILocation(line: 1281, column: 27, scope: !10964)
!10966 = !DILocation(line: 1281, column: 10, scope: !10964)
!10967 = !DILocation(line: 1281, column: 21, scope: !10964)
!10968 = !DILocation(line: 1282, column: 9, scope: !10964)
!10969 = !DILocation(line: 1284, column: 21, scope: !10908)
!10970 = !DILocation(line: 1284, column: 8, scope: !10908)
!10971 = !DILocation(line: 1284, column: 19, scope: !10908)
!10972 = !DILocation(line: 1285, column: 7, scope: !10908)
!10973 = !DILocation(line: 1287, column: 11, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10908, file: !78, line: 1287, column: 11)
!10975 = !DILocation(line: 1287, column: 18, scope: !10974)
!10976 = !DILocation(line: 1287, column: 15, scope: !10974)
!10977 = !DILocation(line: 1287, column: 11, scope: !10908)
!10978 = !DILocation(line: 1288, column: 13, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10974, file: !78, line: 1287, column: 25)
!10980 = !DILocation(line: 1289, column: 15, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10979, file: !78, line: 1289, column: 13)
!10982 = !DILocation(line: 1289, column: 13, scope: !10979)
!10983 = !DILocation(line: 1290, column: 11, scope: !10981)
!10984 = !DILocation(line: 1291, column: 13, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10979, file: !78, line: 1291, column: 13)
!10986 = !DILocation(line: 1291, column: 13, scope: !10987)
!10987 = !DILexicalBlockFile(scope: !10985, file: !78, discriminator: 4)
!10988 = !DILocation(line: 1291, column: 13, scope: !10989)
!10989 = !DILexicalBlockFile(scope: !10985, file: !78, discriminator: 5)
!10990 = !DILocation(line: 1291, column: 13, scope: !10991)
!10991 = !DILexicalBlockFile(scope: !10985, file: !78, discriminator: 6)
!10992 = !DILocation(line: 1291, column: 33, scope: !10991)
!10993 = !DILocation(line: 1292, column: 15, scope: !10985)
!10994 = !DILocation(line: 1292, column: 11, scope: !10985)
!10995 = !DILocation(line: 1293, column: 23, scope: !10979)
!10996 = !DILocation(line: 1293, column: 10, scope: !10979)
!10997 = !DILocation(line: 1293, column: 21, scope: !10979)
!10998 = !DILocation(line: 1294, column: 9, scope: !10979)
!10999 = !DILocation(line: 1296, column: 21, scope: !10908)
!11000 = !DILocation(line: 1296, column: 8, scope: !10908)
!11001 = !DILocation(line: 1296, column: 19, scope: !10908)
!11002 = !DILocation(line: 1297, column: 7, scope: !10908)
!11003 = !DILocation(line: 1299, column: 11, scope: !10908)
!11004 = !DILocation(line: 1300, column: 7, scope: !10908)
!11005 = !DILocation(line: 1260, column: 3, scope: !11006)
!11006 = !DILexicalBlockFile(scope: !360, file: !78, discriminator: 6)
!11007 = !DILocation(line: 1303, column: 17, scope: !360)
!11008 = !DILocation(line: 1303, column: 4, scope: !360)
!11009 = !DILocation(line: 1303, column: 15, scope: !360)
!11010 = !DILocation(line: 1304, column: 3, scope: !360)
!11011 = !DILocation(line: 1305, column: 1, scope: !360)
!11012 = !DILocalVariable(name: "enc", arg: 1, scope: !361, file: !78, line: 1614, type: !82)
!11013 = !DILocation(line: 1614, column: 34, scope: !361)
!11014 = !DILocalVariable(name: "ptr1", arg: 2, scope: !361, file: !78, line: 1614, type: !93)
!11015 = !DILocation(line: 1614, column: 51, scope: !361)
!11016 = !DILocalVariable(name: "ptr2", arg: 3, scope: !361, file: !78, line: 1614, type: !93)
!11017 = !DILocation(line: 1614, column: 69, scope: !361)
!11018 = !DILocation(line: 1616, column: 3, scope: !361)
!11019 = !DILocation(line: 1617, column: 13, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !78, line: 1616, column: 12)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !78, line: 1616, column: 3)
!11022 = distinct !DILexicalBlock(scope: !361, file: !78, line: 1616, column: 3)
!11023 = !DILocation(line: 1617, column: 13, scope: !11024)
!11024 = !DILexicalBlockFile(scope: !11020, file: !78, discriminator: 4)
!11025 = !DILocation(line: 1617, column: 13, scope: !11026)
!11026 = !DILexicalBlockFile(scope: !11020, file: !78, discriminator: 5)
!11027 = !DILocation(line: 1617, column: 13, scope: !11028)
!11028 = !DILexicalBlockFile(scope: !11020, file: !78, discriminator: 6)
!11029 = !DILocation(line: 1617, column: 5, scope: !11028)
!11030 = !DILocation(line: 1622, column: 5, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11032, file: !78, line: 1622, column: 5)
!11032 = distinct !DILexicalBlock(scope: !11020, file: !78, line: 1617, column: 35)
!11033 = !DILocation(line: 1622, column: 5, scope: !11032)
!11034 = !DILocation(line: 1622, column: 5, scope: !11035)
!11035 = !DILexicalBlockFile(scope: !11031, file: !78, discriminator: 15)
!11036 = !DILocation(line: 1622, column: 5, scope: !11037)
!11037 = !DILexicalBlockFile(scope: !11031, file: !78, discriminator: 16)
!11038 = !DILocation(line: 1622, column: 18, scope: !11039)
!11039 = !DILexicalBlockFile(scope: !11040, file: !78, discriminator: 17)
!11040 = distinct !DILexicalBlock(scope: !11032, file: !78, line: 1622, column: 18)
!11041 = !DILocation(line: 1622, column: 18, scope: !11042)
!11042 = !DILexicalBlockFile(scope: !11040, file: !78, discriminator: 18)
!11043 = !DILocation(line: 1622, column: 18, scope: !11044)
!11044 = !DILexicalBlockFile(scope: !11040, file: !78, discriminator: 19)
!11045 = !DILocation(line: 1622, column: 31, scope: !11046)
!11046 = !DILexicalBlockFile(scope: !11047, file: !78, discriminator: 20)
!11047 = distinct !DILexicalBlock(scope: !11032, file: !78, line: 1622, column: 31)
!11048 = !DILocation(line: 1622, column: 31, scope: !11049)
!11049 = !DILexicalBlockFile(scope: !11047, file: !78, discriminator: 21)
!11050 = !DILocation(line: 1625, column: 16, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11032, file: !78, line: 1625, column: 11)
!11052 = !DILocation(line: 1625, column: 11, scope: !11051)
!11053 = !DILocation(line: 1625, column: 27, scope: !11051)
!11054 = !DILocation(line: 1625, column: 22, scope: !11051)
!11055 = !DILocation(line: 1625, column: 19, scope: !11051)
!11056 = !DILocation(line: 1625, column: 11, scope: !11032)
!11057 = !DILocation(line: 1626, column: 9, scope: !11051)
!11058 = !DILocation(line: 1627, column: 7, scope: !11032)
!11059 = !DILocation(line: 1637, column: 16, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11032, file: !78, line: 1637, column: 11)
!11061 = !DILocation(line: 1637, column: 11, scope: !11060)
!11062 = !DILocation(line: 1637, column: 27, scope: !11060)
!11063 = !DILocation(line: 1637, column: 22, scope: !11060)
!11064 = !DILocation(line: 1637, column: 19, scope: !11060)
!11065 = !DILocation(line: 1637, column: 11, scope: !11032)
!11066 = !DILocation(line: 1638, column: 9, scope: !11060)
!11067 = !DILocation(line: 1640, column: 18, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !78, line: 1640, column: 13)
!11069 = distinct !DILexicalBlock(scope: !11070, file: !78, line: 1639, column: 28)
!11070 = distinct !DILexicalBlock(scope: !11032, file: !78, line: 1639, column: 11)
!11071 = !DILocation(line: 1640, column: 13, scope: !11068)
!11072 = !DILocation(line: 1640, column: 29, scope: !11068)
!11073 = !DILocation(line: 1640, column: 24, scope: !11068)
!11074 = !DILocation(line: 1640, column: 21, scope: !11068)
!11075 = !DILocation(line: 1640, column: 13, scope: !11069)
!11076 = !DILocation(line: 1641, column: 11, scope: !11068)
!11077 = !DILocation(line: 1651, column: 7, scope: !11032)
!11078 = !DILocation(line: 1655, column: 15, scope: !11032)
!11079 = !DILocation(line: 1655, column: 15, scope: !11080)
!11080 = !DILexicalBlockFile(scope: !11032, file: !78, discriminator: 4)
!11081 = !DILocation(line: 1655, column: 15, scope: !11082)
!11082 = !DILexicalBlockFile(scope: !11032, file: !78, discriminator: 5)
!11083 = !DILocation(line: 1655, column: 15, scope: !11084)
!11084 = !DILexicalBlockFile(scope: !11032, file: !78, discriminator: 6)
!11085 = !DILocation(line: 1655, column: 7, scope: !11084)
!11086 = !DILocation(line: 1668, column: 9, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11032, file: !78, line: 1655, column: 37)
!11088 = !DILocation(line: 1670, column: 9, scope: !11087)
!11089 = !DILocation(line: 1616, column: 3, scope: !11090)
!11090 = !DILexicalBlockFile(scope: !11021, file: !78, discriminator: 3)
!11091 = !DILocation(line: 1675, column: 1, scope: !361)
!11092 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !362, file: !78, line: 1678, type: !82)
!11093 = !DILocation(line: 1678, column: 42, scope: !362)
!11094 = !DILocalVariable(name: "ptr1", arg: 2, scope: !362, file: !78, line: 1678, type: !93)
!11095 = !DILocation(line: 1678, column: 69, scope: !362)
!11096 = !DILocalVariable(name: "end1", arg: 3, scope: !362, file: !78, line: 1679, type: !93)
!11097 = !DILocation(line: 1679, column: 38, scope: !362)
!11098 = !DILocalVariable(name: "ptr2", arg: 4, scope: !362, file: !78, line: 1679, type: !93)
!11099 = !DILocation(line: 1679, column: 56, scope: !362)
!11100 = !DILocation(line: 1681, column: 3, scope: !362)
!11101 = !DILocation(line: 1681, column: 11, scope: !11102)
!11102 = !DILexicalBlockFile(scope: !11103, file: !78, discriminator: 5)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !78, line: 1681, column: 3)
!11104 = distinct !DILexicalBlock(scope: !362, file: !78, line: 1681, column: 3)
!11105 = !DILocation(line: 1681, column: 10, scope: !11102)
!11106 = !DILocation(line: 1681, column: 3, scope: !11102)
!11107 = !DILocation(line: 1682, column: 9, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !78, line: 1682, column: 9)
!11109 = distinct !DILexicalBlock(scope: !11103, file: !78, line: 1681, column: 46)
!11110 = !DILocation(line: 1682, column: 16, scope: !11108)
!11111 = !DILocation(line: 1682, column: 14, scope: !11108)
!11112 = !DILocation(line: 1682, column: 21, scope: !11108)
!11113 = !DILocation(line: 1682, column: 9, scope: !11109)
!11114 = !DILocation(line: 1683, column: 7, scope: !11108)
!11115 = !DILocation(line: 1684, column: 10, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11109, file: !78, line: 1684, column: 9)
!11117 = !DILocation(line: 1684, column: 10, scope: !11118)
!11118 = !DILexicalBlockFile(scope: !11116, file: !78, discriminator: 2)
!11119 = !DILocation(line: 1684, column: 9, scope: !11118)
!11120 = !DILocation(line: 1685, column: 7, scope: !11116)
!11121 = !DILocation(line: 1686, column: 3, scope: !11109)
!11122 = !DILocation(line: 1681, column: 22, scope: !11123)
!11123 = !DILexicalBlockFile(scope: !11103, file: !78, discriminator: 6)
!11124 = !DILocation(line: 1681, column: 42, scope: !11123)
!11125 = !DILocation(line: 1681, column: 3, scope: !11123)
!11126 = !DILocation(line: 1687, column: 10, scope: !362)
!11127 = !DILocation(line: 1687, column: 18, scope: !362)
!11128 = !DILocation(line: 1687, column: 15, scope: !362)
!11129 = !DILocation(line: 1687, column: 3, scope: !362)
!11130 = !DILocation(line: 1688, column: 1, scope: !362)
!11131 = !DILocalVariable(name: "enc", arg: 1, scope: !363, file: !78, line: 1691, type: !82)
!11132 = !DILocation(line: 1691, column: 36, scope: !363)
!11133 = !DILocalVariable(name: "ptr", arg: 2, scope: !363, file: !78, line: 1691, type: !93)
!11134 = !DILocation(line: 1691, column: 53, scope: !363)
!11135 = !DILocalVariable(name: "start", scope: !363, file: !78, line: 1693, type: !93)
!11136 = !DILocation(line: 1693, column: 15, scope: !363)
!11137 = !DILocation(line: 1693, column: 23, scope: !363)
!11138 = !DILocation(line: 1694, column: 3, scope: !363)
!11139 = !DILocation(line: 1695, column: 13, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !78, line: 1694, column: 12)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !78, line: 1694, column: 3)
!11142 = distinct !DILexicalBlock(scope: !363, file: !78, line: 1694, column: 3)
!11143 = !DILocation(line: 1695, column: 13, scope: !11144)
!11144 = !DILexicalBlockFile(scope: !11140, file: !78, discriminator: 4)
!11145 = !DILocation(line: 1695, column: 13, scope: !11146)
!11146 = !DILexicalBlockFile(scope: !11140, file: !78, discriminator: 5)
!11147 = !DILocation(line: 1695, column: 13, scope: !11148)
!11148 = !DILexicalBlockFile(scope: !11140, file: !78, discriminator: 6)
!11149 = !DILocation(line: 1695, column: 5, scope: !11148)
!11150 = !DILocation(line: 1698, column: 5, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11140, file: !78, line: 1695, column: 34)
!11152 = !DILocation(line: 1698, column: 18, scope: !11153)
!11153 = !DILexicalBlockFile(scope: !11151, file: !78, discriminator: 5)
!11154 = !DILocation(line: 1698, column: 31, scope: !11155)
!11155 = !DILexicalBlockFile(scope: !11151, file: !78, discriminator: 6)
!11156 = !DILocation(line: 1709, column: 11, scope: !11151)
!11157 = !DILocation(line: 1710, column: 7, scope: !11151)
!11158 = !DILocation(line: 1712, column: 20, scope: !11151)
!11159 = !DILocation(line: 1712, column: 26, scope: !11151)
!11160 = !DILocation(line: 1712, column: 24, scope: !11151)
!11161 = !DILocation(line: 1712, column: 14, scope: !11151)
!11162 = !DILocation(line: 1712, column: 7, scope: !11151)
!11163 = !DILocation(line: 1694, column: 3, scope: !11164)
!11164 = !DILexicalBlockFile(scope: !11141, file: !78, discriminator: 3)
!11165 = !DILocalVariable(name: "enc", arg: 1, scope: !364, file: !78, line: 1718, type: !82)
!11166 = !DILocation(line: 1718, column: 31, scope: !364)
!11167 = !DILocalVariable(name: "ptr", arg: 2, scope: !364, file: !78, line: 1718, type: !93)
!11168 = !DILocation(line: 1718, column: 48, scope: !364)
!11169 = !DILocation(line: 1720, column: 3, scope: !364)
!11170 = !DILocation(line: 1721, column: 13, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !78, line: 1720, column: 12)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !78, line: 1720, column: 3)
!11173 = distinct !DILexicalBlock(scope: !364, file: !78, line: 1720, column: 3)
!11174 = !DILocation(line: 1721, column: 13, scope: !11175)
!11175 = !DILexicalBlockFile(scope: !11171, file: !78, discriminator: 4)
!11176 = !DILocation(line: 1721, column: 13, scope: !11177)
!11177 = !DILexicalBlockFile(scope: !11171, file: !78, discriminator: 5)
!11178 = !DILocation(line: 1721, column: 13, scope: !11179)
!11179 = !DILexicalBlockFile(scope: !11171, file: !78, discriminator: 6)
!11180 = !DILocation(line: 1721, column: 5, scope: !11179)
!11181 = !DILocation(line: 1725, column: 11, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11171, file: !78, line: 1721, column: 34)
!11183 = !DILocation(line: 1726, column: 7, scope: !11182)
!11184 = !DILocation(line: 1728, column: 14, scope: !11182)
!11185 = !DILocation(line: 1728, column: 7, scope: !11182)
!11186 = !DILocation(line: 1720, column: 3, scope: !11187)
!11187 = !DILexicalBlockFile(scope: !11172, file: !78, discriminator: 3)
!11188 = !DILocalVariable(name: "enc", arg: 1, scope: !168, file: !78, line: 1423, type: !82)
!11189 = !DILocation(line: 1423, column: 33, scope: !168)
!11190 = !DILocalVariable(name: "ptr", arg: 2, scope: !168, file: !78, line: 1423, type: !93)
!11191 = !DILocation(line: 1423, column: 50, scope: !168)
!11192 = !DILocalVariable(name: "attsMax", arg: 3, scope: !168, file: !78, line: 1424, type: !7)
!11193 = !DILocation(line: 1424, column: 21, scope: !168)
!11194 = !DILocalVariable(name: "atts", arg: 4, scope: !168, file: !78, line: 1424, type: !153)
!11195 = !DILocation(line: 1424, column: 41, scope: !168)
!11196 = !DILocalVariable(name: "state", scope: !168, file: !78, line: 1426, type: !167)
!11197 = !DILocation(line: 1426, column: 35, scope: !168)
!11198 = !DILocalVariable(name: "nAtts", scope: !168, file: !78, line: 1427, type: !7)
!11199 = !DILocation(line: 1427, column: 7, scope: !168)
!11200 = !DILocalVariable(name: "open", scope: !168, file: !78, line: 1428, type: !7)
!11201 = !DILocation(line: 1428, column: 7, scope: !168)
!11202 = !DILocation(line: 1431, column: 12, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !168, file: !78, line: 1431, column: 3)
!11204 = !DILocation(line: 1431, column: 8, scope: !11203)
!11205 = !DILocation(line: 1432, column: 13, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11207, file: !78, line: 1431, column: 49)
!11207 = distinct !DILexicalBlock(scope: !11203, file: !78, line: 1431, column: 3)
!11208 = !DILocation(line: 1432, column: 13, scope: !11209)
!11209 = !DILexicalBlockFile(scope: !11206, file: !78, discriminator: 4)
!11210 = !DILocation(line: 1432, column: 13, scope: !11211)
!11211 = !DILexicalBlockFile(scope: !11206, file: !78, discriminator: 5)
!11212 = !DILocation(line: 1432, column: 13, scope: !11213)
!11213 = !DILexicalBlockFile(scope: !11206, file: !78, discriminator: 6)
!11214 = !DILocation(line: 1432, column: 5, scope: !11213)
!11215 = !DILocation(line: 1443, column: 5, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1443, column: 5)
!11217 = distinct !DILexicalBlock(scope: !11206, file: !78, line: 1432, column: 34)
!11218 = !DILocation(line: 1443, column: 5, scope: !11217)
!11219 = !DILocation(line: 1443, column: 5, scope: !11220)
!11220 = !DILexicalBlockFile(scope: !11221, file: !78, discriminator: 29)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !78, line: 1443, column: 5)
!11222 = distinct !DILexicalBlock(scope: !11216, file: !78, line: 1443, column: 5)
!11223 = !DILocation(line: 1443, column: 5, scope: !11224)
!11224 = !DILexicalBlockFile(scope: !11225, file: !78, discriminator: 30)
!11225 = distinct !DILexicalBlock(scope: !11221, file: !78, line: 1443, column: 5)
!11226 = !DILocation(line: 1443, column: 5, scope: !11227)
!11227 = !DILexicalBlockFile(scope: !11222, file: !78, discriminator: 31)
!11228 = !DILocation(line: 1443, column: 5, scope: !11229)
!11229 = !DILexicalBlockFile(scope: !11217, file: !78, discriminator: 32)
!11230 = !DILocation(line: 1443, column: 18, scope: !11231)
!11231 = !DILexicalBlockFile(scope: !11232, file: !78, discriminator: 33)
!11232 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1443, column: 18)
!11233 = !DILocation(line: 1443, column: 18, scope: !11234)
!11234 = !DILexicalBlockFile(scope: !11235, file: !78, discriminator: 34)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !78, line: 1443, column: 18)
!11236 = distinct !DILexicalBlock(scope: !11232, file: !78, line: 1443, column: 18)
!11237 = !DILocation(line: 1443, column: 18, scope: !11238)
!11238 = !DILexicalBlockFile(scope: !11239, file: !78, discriminator: 35)
!11239 = distinct !DILexicalBlock(scope: !11235, file: !78, line: 1443, column: 18)
!11240 = !DILocation(line: 1443, column: 18, scope: !11241)
!11241 = !DILexicalBlockFile(scope: !11236, file: !78, discriminator: 36)
!11242 = !DILocation(line: 1443, column: 18, scope: !11243)
!11243 = !DILexicalBlockFile(scope: !11217, file: !78, discriminator: 37)
!11244 = !DILocation(line: 1443, column: 31, scope: !11245)
!11245 = !DILexicalBlockFile(scope: !11246, file: !78, discriminator: 38)
!11246 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1443, column: 31)
!11247 = !DILocation(line: 1443, column: 31, scope: !11248)
!11248 = !DILexicalBlockFile(scope: !11249, file: !78, discriminator: 39)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !78, line: 1443, column: 31)
!11250 = distinct !DILexicalBlock(scope: !11246, file: !78, line: 1443, column: 31)
!11251 = !DILocation(line: 1443, column: 31, scope: !11252)
!11252 = !DILexicalBlockFile(scope: !11253, file: !78, discriminator: 40)
!11253 = distinct !DILexicalBlock(scope: !11249, file: !78, line: 1443, column: 31)
!11254 = !DILocation(line: 1443, column: 31, scope: !11255)
!11255 = !DILexicalBlockFile(scope: !11250, file: !78, discriminator: 41)
!11256 = !DILocation(line: 1443, column: 31, scope: !11257)
!11257 = !DILexicalBlockFile(scope: !11217, file: !78, discriminator: 42)
!11258 = !DILocation(line: 1448, column: 7, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1448, column: 7)
!11260 = !DILocation(line: 1448, column: 7, scope: !11217)
!11261 = !DILocation(line: 1448, column: 7, scope: !11262)
!11262 = !DILexicalBlockFile(scope: !11263, file: !78, discriminator: 7)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !78, line: 1448, column: 7)
!11264 = distinct !DILexicalBlock(scope: !11259, file: !78, line: 1448, column: 7)
!11265 = !DILocation(line: 1448, column: 7, scope: !11266)
!11266 = !DILexicalBlockFile(scope: !11267, file: !78, discriminator: 8)
!11267 = distinct !DILexicalBlock(scope: !11263, file: !78, line: 1448, column: 7)
!11268 = !DILocation(line: 1448, column: 7, scope: !11269)
!11269 = !DILexicalBlockFile(scope: !11264, file: !78, discriminator: 9)
!11270 = !DILocation(line: 1449, column: 7, scope: !11217)
!11271 = !DILocation(line: 1452, column: 11, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1452, column: 11)
!11273 = !DILocation(line: 1452, column: 17, scope: !11272)
!11274 = !DILocation(line: 1452, column: 11, scope: !11217)
!11275 = !DILocation(line: 1453, column: 13, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11277, file: !78, line: 1453, column: 13)
!11277 = distinct !DILexicalBlock(scope: !11272, file: !78, line: 1452, column: 29)
!11278 = !DILocation(line: 1453, column: 21, scope: !11276)
!11279 = !DILocation(line: 1453, column: 19, scope: !11276)
!11280 = !DILocation(line: 1453, column: 13, scope: !11277)
!11281 = !DILocation(line: 1454, column: 34, scope: !11276)
!11282 = !DILocation(line: 1454, column: 38, scope: !11276)
!11283 = !DILocation(line: 1454, column: 16, scope: !11276)
!11284 = !DILocation(line: 1454, column: 11, scope: !11276)
!11285 = !DILocation(line: 1454, column: 23, scope: !11276)
!11286 = !DILocation(line: 1454, column: 32, scope: !11276)
!11287 = !DILocation(line: 1455, column: 15, scope: !11277)
!11288 = !DILocation(line: 1456, column: 14, scope: !11277)
!11289 = !DILocation(line: 1457, column: 7, scope: !11277)
!11290 = !DILocation(line: 1458, column: 16, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11272, file: !78, line: 1458, column: 16)
!11292 = !DILocation(line: 1458, column: 21, scope: !11291)
!11293 = !DILocation(line: 1458, column: 16, scope: !11272)
!11294 = !DILocation(line: 1459, column: 15, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11291, file: !78, line: 1458, column: 33)
!11296 = !DILocation(line: 1460, column: 13, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11295, file: !78, line: 1460, column: 13)
!11298 = !DILocation(line: 1460, column: 21, scope: !11297)
!11299 = !DILocation(line: 1460, column: 19, scope: !11297)
!11300 = !DILocation(line: 1460, column: 13, scope: !11295)
!11301 = !DILocation(line: 1461, column: 34, scope: !11297)
!11302 = !DILocation(line: 1461, column: 16, scope: !11297)
!11303 = !DILocation(line: 1461, column: 11, scope: !11297)
!11304 = !DILocation(line: 1461, column: 23, scope: !11297)
!11305 = !DILocation(line: 1461, column: 32, scope: !11297)
!11306 = !DILocation(line: 1462, column: 14, scope: !11295)
!11307 = !DILocation(line: 1463, column: 7, scope: !11295)
!11308 = !DILocation(line: 1464, column: 7, scope: !11217)
!11309 = !DILocation(line: 1466, column: 11, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1466, column: 11)
!11311 = !DILocation(line: 1466, column: 17, scope: !11310)
!11312 = !DILocation(line: 1466, column: 11, scope: !11217)
!11313 = !DILocation(line: 1467, column: 13, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !78, line: 1467, column: 13)
!11315 = distinct !DILexicalBlock(scope: !11310, file: !78, line: 1466, column: 29)
!11316 = !DILocation(line: 1467, column: 21, scope: !11314)
!11317 = !DILocation(line: 1467, column: 19, scope: !11314)
!11318 = !DILocation(line: 1467, column: 13, scope: !11315)
!11319 = !DILocation(line: 1468, column: 34, scope: !11314)
!11320 = !DILocation(line: 1468, column: 38, scope: !11314)
!11321 = !DILocation(line: 1468, column: 16, scope: !11314)
!11322 = !DILocation(line: 1468, column: 11, scope: !11314)
!11323 = !DILocation(line: 1468, column: 23, scope: !11314)
!11324 = !DILocation(line: 1468, column: 32, scope: !11314)
!11325 = !DILocation(line: 1469, column: 15, scope: !11315)
!11326 = !DILocation(line: 1470, column: 14, scope: !11315)
!11327 = !DILocation(line: 1471, column: 7, scope: !11315)
!11328 = !DILocation(line: 1472, column: 16, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11310, file: !78, line: 1472, column: 16)
!11330 = !DILocation(line: 1472, column: 21, scope: !11329)
!11331 = !DILocation(line: 1472, column: 16, scope: !11310)
!11332 = !DILocation(line: 1473, column: 15, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11329, file: !78, line: 1472, column: 33)
!11334 = !DILocation(line: 1474, column: 13, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11333, file: !78, line: 1474, column: 13)
!11336 = !DILocation(line: 1474, column: 21, scope: !11335)
!11337 = !DILocation(line: 1474, column: 19, scope: !11335)
!11338 = !DILocation(line: 1474, column: 13, scope: !11333)
!11339 = !DILocation(line: 1475, column: 34, scope: !11335)
!11340 = !DILocation(line: 1475, column: 16, scope: !11335)
!11341 = !DILocation(line: 1475, column: 11, scope: !11335)
!11342 = !DILocation(line: 1475, column: 23, scope: !11335)
!11343 = !DILocation(line: 1475, column: 32, scope: !11335)
!11344 = !DILocation(line: 1476, column: 14, scope: !11333)
!11345 = !DILocation(line: 1477, column: 7, scope: !11333)
!11346 = !DILocation(line: 1478, column: 7, scope: !11217)
!11347 = !DILocation(line: 1480, column: 11, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1480, column: 11)
!11349 = !DILocation(line: 1480, column: 19, scope: !11348)
!11350 = !DILocation(line: 1480, column: 17, scope: !11348)
!11351 = !DILocation(line: 1480, column: 11, scope: !11217)
!11352 = !DILocation(line: 1481, column: 14, scope: !11348)
!11353 = !DILocation(line: 1481, column: 9, scope: !11348)
!11354 = !DILocation(line: 1481, column: 21, scope: !11348)
!11355 = !DILocation(line: 1481, column: 32, scope: !11348)
!11356 = !DILocation(line: 1482, column: 7, scope: !11217)
!11357 = !DILocation(line: 1484, column: 11, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1484, column: 11)
!11359 = !DILocation(line: 1484, column: 17, scope: !11358)
!11360 = !DILocation(line: 1484, column: 11, scope: !11217)
!11361 = !DILocation(line: 1485, column: 15, scope: !11358)
!11362 = !DILocation(line: 1485, column: 9, scope: !11358)
!11363 = !DILocation(line: 1486, column: 16, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11358, file: !78, line: 1486, column: 16)
!11365 = !DILocation(line: 1486, column: 22, scope: !11364)
!11366 = !DILocation(line: 1487, column: 16, scope: !11364)
!11367 = !DILocation(line: 1487, column: 19, scope: !11368)
!11368 = !DILexicalBlockFile(scope: !11364, file: !78, discriminator: 3)
!11369 = !DILocation(line: 1487, column: 27, scope: !11368)
!11370 = !DILocation(line: 1487, column: 25, scope: !11368)
!11371 = !DILocation(line: 1488, column: 16, scope: !11364)
!11372 = !DILocation(line: 1488, column: 24, scope: !11368)
!11373 = !DILocation(line: 1488, column: 19, scope: !11368)
!11374 = !DILocation(line: 1488, column: 31, scope: !11368)
!11375 = !DILocation(line: 1489, column: 16, scope: !11364)
!11376 = !DILocation(line: 1489, column: 20, scope: !11368)
!11377 = !DILocation(line: 1489, column: 32, scope: !11368)
!11378 = !DILocation(line: 1489, column: 27, scope: !11368)
!11379 = !DILocation(line: 1489, column: 39, scope: !11368)
!11380 = !DILocation(line: 1489, column: 24, scope: !11368)
!11381 = !DILocation(line: 1490, column: 20, scope: !11364)
!11382 = !DILocation(line: 1490, column: 23, scope: !11383)
!11383 = !DILexicalBlockFile(scope: !11364, file: !78, discriminator: 6)
!11384 = !DILocation(line: 1490, column: 23, scope: !11385)
!11385 = !DILexicalBlockFile(scope: !11364, file: !78, discriminator: 7)
!11386 = !DILocation(line: 1490, column: 23, scope: !11387)
!11387 = !DILexicalBlockFile(scope: !11364, file: !78, discriminator: 8)
!11388 = !DILocation(line: 1490, column: 23, scope: !11389)
!11389 = !DILexicalBlockFile(scope: !11364, file: !78, discriminator: 9)
!11390 = !DILocation(line: 1490, column: 47, scope: !11389)
!11391 = !DILocation(line: 1491, column: 20, scope: !11364)
!11392 = !DILocation(line: 1491, column: 23, scope: !11383)
!11393 = !DILocation(line: 1491, column: 23, scope: !11385)
!11394 = !DILocation(line: 1491, column: 23, scope: !11387)
!11395 = !DILocation(line: 1491, column: 23, scope: !11389)
!11396 = !DILocation(line: 1491, column: 61, scope: !11389)
!11397 = !DILocation(line: 1492, column: 20, scope: !11364)
!11398 = !DILocation(line: 1492, column: 23, scope: !11383)
!11399 = !DILocation(line: 1492, column: 23, scope: !11385)
!11400 = !DILocation(line: 1492, column: 23, scope: !11387)
!11401 = !DILocation(line: 1492, column: 23, scope: !11389)
!11402 = !DILocation(line: 1492, column: 60, scope: !11389)
!11403 = !DILocation(line: 1492, column: 57, scope: !11389)
!11404 = !DILocation(line: 1486, column: 16, scope: !11405)
!11405 = !DILexicalBlockFile(scope: !11358, file: !78, discriminator: 3)
!11406 = !DILocation(line: 1493, column: 14, scope: !11364)
!11407 = !DILocation(line: 1493, column: 9, scope: !11364)
!11408 = !DILocation(line: 1493, column: 21, scope: !11364)
!11409 = !DILocation(line: 1493, column: 32, scope: !11364)
!11410 = !DILocation(line: 1494, column: 7, scope: !11217)
!11411 = !DILocation(line: 1498, column: 11, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1498, column: 11)
!11413 = !DILocation(line: 1498, column: 17, scope: !11412)
!11414 = !DILocation(line: 1498, column: 11, scope: !11217)
!11415 = !DILocation(line: 1499, column: 15, scope: !11412)
!11416 = !DILocation(line: 1499, column: 9, scope: !11412)
!11417 = !DILocation(line: 1500, column: 16, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11412, file: !78, line: 1500, column: 16)
!11419 = !DILocation(line: 1500, column: 22, scope: !11418)
!11420 = !DILocation(line: 1500, column: 33, scope: !11418)
!11421 = !DILocation(line: 1500, column: 36, scope: !11422)
!11422 = !DILexicalBlockFile(scope: !11418, file: !78, discriminator: 3)
!11423 = !DILocation(line: 1500, column: 44, scope: !11422)
!11424 = !DILocation(line: 1500, column: 42, scope: !11422)
!11425 = !DILocation(line: 1500, column: 16, scope: !11422)
!11426 = !DILocation(line: 1501, column: 14, scope: !11418)
!11427 = !DILocation(line: 1501, column: 9, scope: !11418)
!11428 = !DILocation(line: 1501, column: 21, scope: !11418)
!11429 = !DILocation(line: 1501, column: 32, scope: !11418)
!11430 = !DILocation(line: 1502, column: 7, scope: !11217)
!11431 = !DILocation(line: 1505, column: 11, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11217, file: !78, line: 1505, column: 11)
!11433 = !DILocation(line: 1505, column: 17, scope: !11432)
!11434 = !DILocation(line: 1505, column: 11, scope: !11217)
!11435 = !DILocation(line: 1506, column: 16, scope: !11432)
!11436 = !DILocation(line: 1506, column: 9, scope: !11432)
!11437 = !DILocation(line: 1507, column: 7, scope: !11217)
!11438 = !DILocation(line: 1509, column: 7, scope: !11217)
!11439 = !DILocation(line: 1511, column: 3, scope: !11206)
!11440 = !DILocation(line: 1431, column: 33, scope: !11441)
!11441 = !DILexicalBlockFile(scope: !11207, file: !78, discriminator: 3)
!11442 = !DILocation(line: 1431, column: 3, scope: !11441)
!11443 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !365, file: !78, line: 1516, type: !82)
!11444 = !DILocation(line: 1516, column: 39, scope: !365)
!11445 = !DILocalVariable(name: "ptr", arg: 2, scope: !365, file: !78, line: 1516, type: !93)
!11446 = !DILocation(line: 1516, column: 66, scope: !365)
!11447 = !DILocalVariable(name: "result", scope: !365, file: !78, line: 1518, type: !7)
!11448 = !DILocation(line: 1518, column: 7, scope: !365)
!11449 = !DILocation(line: 1520, column: 7, scope: !365)
!11450 = !DILocation(line: 1521, column: 7, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !365, file: !78, line: 1521, column: 7)
!11452 = !DILocation(line: 1521, column: 7, scope: !11453)
!11453 = !DILexicalBlockFile(scope: !11451, file: !78, discriminator: 2)
!11454 = !DILocation(line: 1522, column: 14, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !78, line: 1522, column: 5)
!11456 = distinct !DILexicalBlock(scope: !11451, file: !78, line: 1521, column: 40)
!11457 = !DILocation(line: 1522, column: 10, scope: !11455)
!11458 = !DILocation(line: 1523, column: 11, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11455, file: !78, line: 1522, column: 5)
!11460 = !DILocation(line: 1523, column: 11, scope: !11461)
!11461 = !DILexicalBlockFile(scope: !11459, file: !78, discriminator: 3)
!11462 = !DILocation(line: 1523, column: 10, scope: !11463)
!11463 = !DILexicalBlockFile(scope: !11459, file: !78, discriminator: 4)
!11464 = !DILocation(line: 1522, column: 5, scope: !11465)
!11465 = !DILexicalBlockFile(scope: !11455, file: !78, discriminator: 5)
!11466 = !DILocalVariable(name: "c", scope: !11467, file: !78, line: 1525, type: !7)
!11467 = distinct !DILexicalBlock(scope: !11459, file: !78, line: 1524, column: 30)
!11468 = !DILocation(line: 1525, column: 11, scope: !11467)
!11469 = !DILocation(line: 1525, column: 15, scope: !11467)
!11470 = !DILocation(line: 1525, column: 15, scope: !11471)
!11471 = !DILexicalBlockFile(scope: !11467, file: !78, discriminator: 4)
!11472 = !DILocation(line: 1525, column: 15, scope: !11473)
!11473 = !DILexicalBlockFile(scope: !11467, file: !78, discriminator: 5)
!11474 = !DILocation(line: 1525, column: 15, scope: !11475)
!11475 = !DILexicalBlockFile(scope: !11467, file: !78, discriminator: 6)
!11476 = !DILocation(line: 1525, column: 11, scope: !11475)
!11477 = !DILocation(line: 1526, column: 15, scope: !11467)
!11478 = !DILocation(line: 1526, column: 7, scope: !11467)
!11479 = !DILocation(line: 1529, column: 16, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11467, file: !78, line: 1526, column: 18)
!11481 = !DILocation(line: 1530, column: 20, scope: !11480)
!11482 = !DILocation(line: 1530, column: 22, scope: !11480)
!11483 = !DILocation(line: 1530, column: 16, scope: !11480)
!11484 = !DILocation(line: 1531, column: 9, scope: !11480)
!11485 = !DILocation(line: 1534, column: 16, scope: !11480)
!11486 = !DILocation(line: 1535, column: 25, scope: !11480)
!11487 = !DILocation(line: 1535, column: 27, scope: !11480)
!11488 = !DILocation(line: 1535, column: 22, scope: !11480)
!11489 = !DILocation(line: 1535, column: 16, scope: !11480)
!11490 = !DILocation(line: 1536, column: 9, scope: !11480)
!11491 = !DILocation(line: 1539, column: 16, scope: !11480)
!11492 = !DILocation(line: 1540, column: 25, scope: !11480)
!11493 = !DILocation(line: 1540, column: 27, scope: !11480)
!11494 = !DILocation(line: 1540, column: 22, scope: !11480)
!11495 = !DILocation(line: 1540, column: 16, scope: !11480)
!11496 = !DILocation(line: 1541, column: 9, scope: !11480)
!11497 = !DILocation(line: 1543, column: 11, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11467, file: !78, line: 1543, column: 11)
!11499 = !DILocation(line: 1543, column: 18, scope: !11498)
!11500 = !DILocation(line: 1543, column: 11, scope: !11467)
!11501 = !DILocation(line: 1544, column: 9, scope: !11498)
!11502 = !DILocation(line: 1545, column: 5, scope: !11467)
!11503 = !DILocation(line: 1524, column: 14, scope: !11459)
!11504 = !DILocation(line: 1522, column: 5, scope: !11505)
!11505 = !DILexicalBlockFile(scope: !11459, file: !78, discriminator: 6)
!11506 = !DILocation(line: 1546, column: 3, scope: !11456)
!11507 = !DILocation(line: 1548, column: 5, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11451, file: !78, line: 1547, column: 8)
!11509 = !DILocation(line: 1548, column: 13, scope: !11510)
!11510 = !DILexicalBlockFile(scope: !11511, file: !78, discriminator: 7)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !78, line: 1548, column: 5)
!11512 = distinct !DILexicalBlock(scope: !11508, file: !78, line: 1548, column: 5)
!11513 = !DILocation(line: 1548, column: 13, scope: !11514)
!11514 = !DILexicalBlockFile(scope: !11511, file: !78, discriminator: 8)
!11515 = !DILocation(line: 1548, column: 12, scope: !11516)
!11516 = !DILexicalBlockFile(scope: !11511, file: !78, discriminator: 9)
!11517 = !DILocation(line: 1548, column: 5, scope: !11516)
!11518 = !DILocalVariable(name: "c", scope: !11519, file: !78, line: 1549, type: !7)
!11519 = distinct !DILexicalBlock(scope: !11511, file: !78, line: 1548, column: 69)
!11520 = !DILocation(line: 1549, column: 11, scope: !11519)
!11521 = !DILocation(line: 1549, column: 15, scope: !11519)
!11522 = !DILocation(line: 1549, column: 15, scope: !11523)
!11523 = !DILexicalBlockFile(scope: !11519, file: !78, discriminator: 4)
!11524 = !DILocation(line: 1549, column: 15, scope: !11525)
!11525 = !DILexicalBlockFile(scope: !11519, file: !78, discriminator: 5)
!11526 = !DILocation(line: 1549, column: 15, scope: !11527)
!11527 = !DILexicalBlockFile(scope: !11519, file: !78, discriminator: 6)
!11528 = !DILocation(line: 1549, column: 11, scope: !11527)
!11529 = !DILocation(line: 1550, column: 14, scope: !11519)
!11530 = !DILocation(line: 1551, column: 18, scope: !11519)
!11531 = !DILocation(line: 1551, column: 20, scope: !11519)
!11532 = !DILocation(line: 1551, column: 14, scope: !11519)
!11533 = !DILocation(line: 1552, column: 11, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11519, file: !78, line: 1552, column: 11)
!11535 = !DILocation(line: 1552, column: 18, scope: !11534)
!11536 = !DILocation(line: 1552, column: 11, scope: !11519)
!11537 = !DILocation(line: 1553, column: 9, scope: !11534)
!11538 = !DILocation(line: 1554, column: 5, scope: !11519)
!11539 = !DILocation(line: 1548, column: 53, scope: !11540)
!11540 = !DILexicalBlockFile(scope: !11511, file: !78, discriminator: 10)
!11541 = !DILocation(line: 1548, column: 5, scope: !11540)
!11542 = !DILocation(line: 1556, column: 29, scope: !365)
!11543 = !DILocation(line: 1556, column: 10, scope: !365)
!11544 = !DILocation(line: 1556, column: 3, scope: !365)
!11545 = !DILocation(line: 1557, column: 1, scope: !365)
!11546 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !366, file: !78, line: 1560, type: !82)
!11547 = !DILocation(line: 1560, column: 46, scope: !366)
!11548 = !DILocalVariable(name: "ptr", arg: 2, scope: !366, file: !78, line: 1560, type: !93)
!11549 = !DILocation(line: 1560, column: 73, scope: !366)
!11550 = !DILocalVariable(name: "end", arg: 3, scope: !366, file: !78, line: 1561, type: !93)
!11551 = !DILocation(line: 1561, column: 42, scope: !366)
!11552 = !DILocation(line: 1563, column: 12, scope: !366)
!11553 = !DILocation(line: 1563, column: 18, scope: !366)
!11554 = !DILocation(line: 1563, column: 16, scope: !366)
!11555 = !DILocation(line: 1563, column: 22, scope: !366)
!11556 = !DILocation(line: 1563, column: 3, scope: !366)
!11557 = !DILocation(line: 1565, column: 9, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !78, line: 1565, column: 9)
!11559 = distinct !DILexicalBlock(scope: !366, file: !78, line: 1563, column: 36)
!11560 = !DILocation(line: 1565, column: 9, scope: !11561)
!11561 = !DILexicalBlockFile(scope: !11558, file: !78, discriminator: 2)
!11562 = !DILocation(line: 1566, column: 15, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11558, file: !78, line: 1565, column: 56)
!11564 = !DILocation(line: 1566, column: 15, scope: !11565)
!11565 = !DILexicalBlockFile(scope: !11563, file: !78, discriminator: 4)
!11566 = !DILocation(line: 1566, column: 15, scope: !11567)
!11567 = !DILexicalBlockFile(scope: !11563, file: !78, discriminator: 5)
!11568 = !DILocation(line: 1566, column: 15, scope: !11569)
!11569 = !DILexicalBlockFile(scope: !11563, file: !78, discriminator: 6)
!11570 = !DILocation(line: 1566, column: 7, scope: !11569)
!11571 = !DILocation(line: 1568, column: 9, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11563, file: !78, line: 1566, column: 40)
!11573 = !DILocation(line: 1570, column: 9, scope: !11572)
!11574 = !DILocation(line: 1572, column: 5, scope: !11563)
!11575 = !DILocation(line: 1573, column: 5, scope: !11559)
!11576 = !DILocation(line: 1575, column: 9, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11559, file: !78, line: 1575, column: 9)
!11578 = !DILocation(line: 1575, column: 9, scope: !11579)
!11579 = !DILexicalBlockFile(scope: !11577, file: !78, discriminator: 2)
!11580 = !DILocation(line: 1576, column: 11, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11577, file: !78, line: 1575, column: 42)
!11582 = !DILocation(line: 1577, column: 11, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11581, file: !78, line: 1577, column: 11)
!11584 = !DILocation(line: 1577, column: 11, scope: !11585)
!11585 = !DILexicalBlockFile(scope: !11583, file: !78, discriminator: 2)
!11586 = !DILocation(line: 1578, column: 13, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11583, file: !78, line: 1577, column: 44)
!11588 = !DILocation(line: 1579, column: 13, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11587, file: !78, line: 1579, column: 13)
!11590 = !DILocation(line: 1579, column: 13, scope: !11591)
!11591 = !DILexicalBlockFile(scope: !11589, file: !78, discriminator: 2)
!11592 = !DILocation(line: 1580, column: 11, scope: !11589)
!11593 = !DILocation(line: 1581, column: 7, scope: !11587)
!11594 = !DILocation(line: 1582, column: 5, scope: !11581)
!11595 = !DILocation(line: 1583, column: 5, scope: !11559)
!11596 = !DILocation(line: 1585, column: 13, scope: !11559)
!11597 = !DILocation(line: 1585, column: 13, scope: !11598)
!11598 = !DILexicalBlockFile(scope: !11559, file: !78, discriminator: 4)
!11599 = !DILocation(line: 1585, column: 13, scope: !11600)
!11600 = !DILexicalBlockFile(scope: !11559, file: !78, discriminator: 5)
!11601 = !DILocation(line: 1585, column: 13, scope: !11602)
!11602 = !DILexicalBlockFile(scope: !11559, file: !78, discriminator: 6)
!11603 = !DILocation(line: 1585, column: 5, scope: !11602)
!11604 = !DILocation(line: 1587, column: 11, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11559, file: !78, line: 1585, column: 38)
!11606 = !DILocation(line: 1588, column: 11, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11605, file: !78, line: 1588, column: 11)
!11608 = !DILocation(line: 1588, column: 11, scope: !11609)
!11609 = !DILexicalBlockFile(scope: !11607, file: !78, discriminator: 2)
!11610 = !DILocation(line: 1589, column: 13, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11607, file: !78, line: 1588, column: 44)
!11612 = !DILocation(line: 1590, column: 13, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11611, file: !78, line: 1590, column: 13)
!11614 = !DILocation(line: 1590, column: 13, scope: !11615)
!11615 = !DILexicalBlockFile(scope: !11613, file: !78, discriminator: 2)
!11616 = !DILocation(line: 1591, column: 15, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11613, file: !78, line: 1590, column: 46)
!11618 = !DILocation(line: 1592, column: 15, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11617, file: !78, line: 1592, column: 15)
!11620 = !DILocation(line: 1592, column: 15, scope: !11621)
!11621 = !DILexicalBlockFile(scope: !11619, file: !78, discriminator: 2)
!11622 = !DILocation(line: 1593, column: 13, scope: !11619)
!11623 = !DILocation(line: 1594, column: 9, scope: !11617)
!11624 = !DILocation(line: 1595, column: 7, scope: !11611)
!11625 = !DILocation(line: 1596, column: 7, scope: !11605)
!11626 = !DILocation(line: 1598, column: 11, scope: !11605)
!11627 = !DILocation(line: 1599, column: 11, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11605, file: !78, line: 1599, column: 11)
!11629 = !DILocation(line: 1599, column: 11, scope: !11630)
!11630 = !DILexicalBlockFile(scope: !11628, file: !78, discriminator: 2)
!11631 = !DILocation(line: 1600, column: 13, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11628, file: !78, line: 1599, column: 44)
!11633 = !DILocation(line: 1601, column: 13, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11632, file: !78, line: 1601, column: 13)
!11635 = !DILocation(line: 1601, column: 13, scope: !11636)
!11636 = !DILexicalBlockFile(scope: !11634, file: !78, discriminator: 2)
!11637 = !DILocation(line: 1602, column: 15, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11634, file: !78, line: 1601, column: 46)
!11639 = !DILocation(line: 1603, column: 15, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11638, file: !78, line: 1603, column: 15)
!11641 = !DILocation(line: 1603, column: 15, scope: !11642)
!11642 = !DILexicalBlockFile(scope: !11640, file: !78, discriminator: 2)
!11643 = !DILocation(line: 1604, column: 13, scope: !11640)
!11644 = !DILocation(line: 1605, column: 9, scope: !11638)
!11645 = !DILocation(line: 1606, column: 7, scope: !11632)
!11646 = !DILocation(line: 1607, column: 7, scope: !11605)
!11647 = !DILocation(line: 1609, column: 3, scope: !11559)
!11648 = !DILocation(line: 1610, column: 3, scope: !366)
!11649 = !DILocation(line: 1611, column: 1, scope: !366)
!11650 = !DILocalVariable(name: "enc", arg: 1, scope: !367, file: !78, line: 1734, type: !82)
!11651 = !DILocation(line: 1734, column: 40, scope: !367)
!11652 = !DILocalVariable(name: "ptr", arg: 2, scope: !367, file: !78, line: 1735, type: !93)
!11653 = !DILocation(line: 1735, column: 36, scope: !367)
!11654 = !DILocalVariable(name: "end", arg: 3, scope: !367, file: !78, line: 1736, type: !93)
!11655 = !DILocation(line: 1736, column: 36, scope: !367)
!11656 = !DILocalVariable(name: "pos", arg: 4, scope: !367, file: !78, line: 1737, type: !126)
!11657 = !DILocation(line: 1737, column: 34, scope: !367)
!11658 = !DILocation(line: 1739, column: 3, scope: !367)
!11659 = !DILocation(line: 1739, column: 10, scope: !11660)
!11660 = !DILexicalBlockFile(scope: !367, file: !78, discriminator: 5)
!11661 = !DILocation(line: 1739, column: 3, scope: !11660)
!11662 = !DILocation(line: 1740, column: 13, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !367, file: !78, line: 1739, column: 35)
!11664 = !DILocation(line: 1740, column: 13, scope: !11665)
!11665 = !DILexicalBlockFile(scope: !11663, file: !78, discriminator: 4)
!11666 = !DILocation(line: 1740, column: 13, scope: !11667)
!11667 = !DILexicalBlockFile(scope: !11663, file: !78, discriminator: 5)
!11668 = !DILocation(line: 1740, column: 13, scope: !11669)
!11669 = !DILexicalBlockFile(scope: !11663, file: !78, discriminator: 6)
!11670 = !DILocation(line: 1740, column: 5, scope: !11669)
!11671 = !DILocation(line: 1745, column: 5, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11663, file: !78, line: 1740, column: 34)
!11673 = !DILocation(line: 1745, column: 18, scope: !11674)
!11674 = !DILexicalBlockFile(scope: !11672, file: !78, discriminator: 5)
!11675 = !DILocation(line: 1745, column: 31, scope: !11676)
!11676 = !DILexicalBlockFile(scope: !11672, file: !78, discriminator: 6)
!11677 = !DILocation(line: 1748, column: 7, scope: !11672)
!11678 = !DILocation(line: 1748, column: 12, scope: !11672)
!11679 = !DILocation(line: 1748, column: 25, scope: !11672)
!11680 = !DILocation(line: 1749, column: 7, scope: !11672)
!11681 = !DILocation(line: 1749, column: 12, scope: !11672)
!11682 = !DILocation(line: 1749, column: 22, scope: !11672)
!11683 = !DILocation(line: 1750, column: 11, scope: !11672)
!11684 = !DILocation(line: 1751, column: 7, scope: !11672)
!11685 = !DILocation(line: 1753, column: 7, scope: !11672)
!11686 = !DILocation(line: 1753, column: 12, scope: !11672)
!11687 = !DILocation(line: 1753, column: 22, scope: !11672)
!11688 = !DILocation(line: 1754, column: 11, scope: !11672)
!11689 = !DILocation(line: 1755, column: 11, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11672, file: !78, line: 1755, column: 11)
!11691 = !DILocation(line: 1755, column: 35, scope: !11690)
!11692 = !DILocation(line: 1755, column: 38, scope: !11693)
!11693 = !DILexicalBlockFile(scope: !11690, file: !78, discriminator: 6)
!11694 = !DILocation(line: 1755, column: 38, scope: !11695)
!11695 = !DILexicalBlockFile(scope: !11690, file: !78, discriminator: 7)
!11696 = !DILocation(line: 1755, column: 38, scope: !11697)
!11697 = !DILexicalBlockFile(scope: !11690, file: !78, discriminator: 8)
!11698 = !DILocation(line: 1755, column: 38, scope: !11699)
!11699 = !DILexicalBlockFile(scope: !11690, file: !78, discriminator: 9)
!11700 = !DILocation(line: 1755, column: 58, scope: !11699)
!11701 = !DILocation(line: 1755, column: 11, scope: !11699)
!11702 = !DILocation(line: 1756, column: 13, scope: !11690)
!11703 = !DILocation(line: 1756, column: 9, scope: !11690)
!11704 = !DILocation(line: 1757, column: 7, scope: !11672)
!11705 = !DILocation(line: 1757, column: 12, scope: !11672)
!11706 = !DILocation(line: 1757, column: 25, scope: !11672)
!11707 = !DILocation(line: 1758, column: 7, scope: !11672)
!11708 = !DILocation(line: 1760, column: 11, scope: !11672)
!11709 = !DILocation(line: 1761, column: 7, scope: !11672)
!11710 = !DILocation(line: 1763, column: 5, scope: !11663)
!11711 = !DILocation(line: 1763, column: 10, scope: !11663)
!11712 = !DILocation(line: 1763, column: 22, scope: !11663)
!11713 = !DILocation(line: 1739, column: 3, scope: !11714)
!11714 = !DILexicalBlockFile(scope: !367, file: !78, discriminator: 6)
!11715 = !DILocation(line: 1765, column: 1, scope: !367)
!11716 = !DILocalVariable(name: "enc", arg: 1, scope: !368, file: !78, line: 1363, type: !82)
!11717 = !DILocation(line: 1363, column: 36, scope: !368)
!11718 = !DILocalVariable(name: "ptr", arg: 2, scope: !368, file: !78, line: 1363, type: !93)
!11719 = !DILocation(line: 1363, column: 53, scope: !368)
!11720 = !DILocalVariable(name: "end", arg: 3, scope: !368, file: !78, line: 1363, type: !93)
!11721 = !DILocation(line: 1363, column: 70, scope: !368)
!11722 = !DILocalVariable(name: "badPtr", arg: 4, scope: !368, file: !78, line: 1364, type: !95)
!11723 = !DILocation(line: 1364, column: 33, scope: !368)
!11724 = !DILocation(line: 1366, column: 7, scope: !368)
!11725 = !DILocation(line: 1367, column: 7, scope: !368)
!11726 = !DILocation(line: 1368, column: 3, scope: !368)
!11727 = !DILocation(line: 1368, column: 10, scope: !11728)
!11728 = !DILexicalBlockFile(scope: !11729, file: !78, discriminator: 5)
!11729 = distinct !DILexicalBlock(scope: !11730, file: !78, line: 1368, column: 3)
!11730 = distinct !DILexicalBlock(scope: !368, file: !78, line: 1368, column: 3)
!11731 = !DILocation(line: 1368, column: 3, scope: !11728)
!11732 = !DILocation(line: 1369, column: 13, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11729, file: !78, line: 1368, column: 55)
!11734 = !DILocation(line: 1369, column: 13, scope: !11735)
!11735 = !DILexicalBlockFile(scope: !11733, file: !78, discriminator: 4)
!11736 = !DILocation(line: 1369, column: 13, scope: !11737)
!11737 = !DILexicalBlockFile(scope: !11733, file: !78, discriminator: 5)
!11738 = !DILocation(line: 1369, column: 13, scope: !11739)
!11739 = !DILexicalBlockFile(scope: !11733, file: !78, discriminator: 6)
!11740 = !DILocation(line: 1369, column: 5, scope: !11739)
!11741 = !DILocation(line: 1391, column: 7, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11733, file: !78, line: 1369, column: 34)
!11743 = !DILocation(line: 1393, column: 11, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11742, file: !78, line: 1393, column: 11)
!11745 = !DILocation(line: 1393, column: 11, scope: !11746)
!11746 = !DILexicalBlockFile(scope: !11744, file: !78, discriminator: 2)
!11747 = !DILocation(line: 1394, column: 19, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11744, file: !78, line: 1393, column: 46)
!11749 = !DILocation(line: 1394, column: 10, scope: !11748)
!11750 = !DILocation(line: 1394, column: 17, scope: !11748)
!11751 = !DILocation(line: 1395, column: 9, scope: !11748)
!11752 = !DILocation(line: 1397, column: 7, scope: !11742)
!11753 = !DILocation(line: 1400, column: 13, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11742, file: !78, line: 1400, column: 11)
!11755 = !DILocation(line: 1400, column: 13, scope: !11756)
!11756 = !DILexicalBlockFile(scope: !11754, file: !78, discriminator: 6)
!11757 = !DILocation(line: 1400, column: 13, scope: !11758)
!11758 = !DILexicalBlockFile(scope: !11754, file: !78, discriminator: 7)
!11759 = !DILocation(line: 1400, column: 13, scope: !11760)
!11760 = !DILexicalBlockFile(scope: !11754, file: !78, discriminator: 8)
!11761 = !DILocation(line: 1400, column: 37, scope: !11760)
!11762 = !DILocation(line: 1400, column: 11, scope: !11760)
!11763 = !DILocation(line: 1401, column: 9, scope: !11754)
!11764 = !DILocation(line: 1400, column: 44, scope: !11765)
!11765 = !DILexicalBlockFile(scope: !11754, file: !78, discriminator: 9)
!11766 = !DILocation(line: 1403, column: 15, scope: !11742)
!11767 = !DILocation(line: 1403, column: 15, scope: !11768)
!11768 = !DILexicalBlockFile(scope: !11742, file: !78, discriminator: 4)
!11769 = !DILocation(line: 1403, column: 15, scope: !11770)
!11770 = !DILexicalBlockFile(scope: !11742, file: !78, discriminator: 5)
!11771 = !DILocation(line: 1403, column: 15, scope: !11772)
!11772 = !DILexicalBlockFile(scope: !11742, file: !78, discriminator: 6)
!11773 = !DILocation(line: 1403, column: 7, scope: !11772)
!11774 = !DILocation(line: 1406, column: 9, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11742, file: !78, line: 1403, column: 40)
!11776 = !DILocation(line: 1408, column: 19, scope: !11775)
!11777 = !DILocation(line: 1408, column: 10, scope: !11775)
!11778 = !DILocation(line: 1408, column: 17, scope: !11775)
!11779 = !DILocation(line: 1409, column: 9, scope: !11775)
!11780 = !DILocation(line: 1411, column: 7, scope: !11742)
!11781 = !DILocation(line: 1413, column: 3, scope: !11733)
!11782 = !DILocation(line: 1368, column: 39, scope: !11783)
!11783 = !DILexicalBlockFile(scope: !11729, file: !78, discriminator: 6)
!11784 = !DILocation(line: 1368, column: 3, scope: !11783)
!11785 = !DILocation(line: 1414, column: 3, scope: !368)
!11786 = !DILocation(line: 1415, column: 1, scope: !368)
!11787 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !369, file: !1, line: 727, type: !82)
!11788 = !DILocation(line: 727, column: 1, scope: !369)
!11789 = !DILocalVariable(name: "fromP", arg: 2, scope: !369, file: !1, line: 727, type: !95)
!11790 = !DILocalVariable(name: "fromLim", arg: 3, scope: !369, file: !1, line: 727, type: !93)
!11791 = !DILocalVariable(name: "toP", arg: 4, scope: !369, file: !1, line: 727, type: !140)
!11792 = !DILocalVariable(name: "toLim", arg: 5, scope: !369, file: !1, line: 727, type: !93)
!11793 = !DILocalVariable(name: "from", scope: !369, file: !1, line: 727, type: !93)
!11794 = !DILocation(line: 727, column: 1, scope: !11795)
!11795 = !DILexicalBlockFile(scope: !11796, file: !1, discriminator: 1)
!11796 = distinct !DILexicalBlock(scope: !11797, file: !1, line: 727, column: 1)
!11797 = distinct !DILexicalBlock(scope: !369, file: !1, line: 727, column: 1)
!11798 = !DILocalVariable(name: "plane", scope: !11799, file: !1, line: 727, type: !7)
!11799 = distinct !DILexicalBlock(scope: !11796, file: !1, line: 727, column: 1)
!11800 = !DILocation(line: 727, column: 1, scope: !11799)
!11801 = !DILocalVariable(name: "lo2", scope: !11799, file: !1, line: 727, type: !170)
!11802 = !DILocalVariable(name: "lo", scope: !11799, file: !1, line: 727, type: !170)
!11803 = !DILocation(line: 727, column: 1, scope: !11804)
!11804 = !DILexicalBlockFile(scope: !11799, file: !1, discriminator: 2)
!11805 = !DILocalVariable(name: "hi", scope: !11799, file: !1, line: 727, type: !170)
!11806 = !DILocation(line: 727, column: 1, scope: !11807)
!11807 = !DILexicalBlockFile(scope: !11808, file: !1, discriminator: 3)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !1, line: 727, column: 1)
!11809 = distinct !DILexicalBlock(scope: !11799, file: !1, line: 727, column: 1)
!11810 = !DILocation(line: 727, column: 1, scope: !11811)
!11811 = !DILexicalBlockFile(scope: !11812, file: !1, discriminator: 4)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !1, line: 727, column: 1)
!11813 = distinct !DILexicalBlock(scope: !11808, file: !1, line: 727, column: 1)
!11814 = !DILocation(line: 727, column: 1, scope: !11815)
!11815 = !DILexicalBlockFile(scope: !11816, file: !1, discriminator: 5)
!11816 = distinct !DILexicalBlock(scope: !11812, file: !1, line: 727, column: 1)
!11817 = !DILocation(line: 727, column: 1, scope: !11818)
!11818 = !DILexicalBlockFile(scope: !11813, file: !1, discriminator: 6)
!11819 = !DILocation(line: 727, column: 1, scope: !11820)
!11820 = !DILexicalBlockFile(scope: !11808, file: !1, discriminator: 7)
!11821 = !DILocation(line: 727, column: 1, scope: !11822)
!11822 = !DILexicalBlockFile(scope: !11823, file: !1, discriminator: 8)
!11823 = distinct !DILexicalBlock(scope: !11809, file: !1, line: 727, column: 1)
!11824 = !DILocation(line: 727, column: 1, scope: !11825)
!11825 = !DILexicalBlockFile(scope: !11826, file: !1, discriminator: 9)
!11826 = distinct !DILexicalBlock(scope: !11823, file: !1, line: 727, column: 1)
!11827 = !DILocation(line: 727, column: 1, scope: !11828)
!11828 = !DILexicalBlockFile(scope: !11809, file: !1, discriminator: 10)
!11829 = !DILocation(line: 727, column: 1, scope: !11830)
!11830 = !DILexicalBlockFile(scope: !11831, file: !1, discriminator: 11)
!11831 = distinct !DILexicalBlock(scope: !11809, file: !1, line: 727, column: 1)
!11832 = !DILocation(line: 727, column: 1, scope: !11833)
!11833 = !DILexicalBlockFile(scope: !11834, file: !1, discriminator: 12)
!11834 = distinct !DILexicalBlock(scope: !11831, file: !1, line: 727, column: 1)
!11835 = !DILocation(line: 727, column: 1, scope: !11836)
!11836 = !DILexicalBlockFile(scope: !11809, file: !1, discriminator: 13)
!11837 = !DILocation(line: 727, column: 1, scope: !11838)
!11838 = !DILexicalBlockFile(scope: !11839, file: !1, discriminator: 14)
!11839 = distinct !DILexicalBlock(scope: !11809, file: !1, line: 727, column: 1)
!11840 = !DILocation(line: 727, column: 1, scope: !11841)
!11841 = !DILexicalBlockFile(scope: !11842, file: !1, discriminator: 15)
!11842 = distinct !DILexicalBlock(scope: !11839, file: !1, line: 727, column: 1)
!11843 = !DILocation(line: 727, column: 1, scope: !11844)
!11844 = !DILexicalBlockFile(scope: !11845, file: !1, discriminator: 16)
!11845 = distinct !DILexicalBlock(scope: !11809, file: !1, line: 727, column: 1)
!11846 = !DILocation(line: 727, column: 1, scope: !11847)
!11847 = !DILexicalBlockFile(scope: !11848, file: !1, discriminator: 17)
!11848 = distinct !DILexicalBlock(scope: !11845, file: !1, line: 727, column: 1)
!11849 = !DILocation(line: 727, column: 1, scope: !11850)
!11850 = !DILexicalBlockFile(scope: !11809, file: !1, discriminator: 18)
!11851 = !DILocation(line: 727, column: 1, scope: !11852)
!11852 = !DILexicalBlockFile(scope: !11799, file: !1, discriminator: 19)
!11853 = !DILocation(line: 727, column: 1, scope: !11854)
!11854 = !DILexicalBlockFile(scope: !11796, file: !1, discriminator: 20)
!11855 = !DILocation(line: 727, column: 1, scope: !11856)
!11856 = !DILexicalBlockFile(scope: !369, file: !1, discriminator: 21)
!11857 = !DILocation(line: 727, column: 1, scope: !11858)
!11858 = !DILexicalBlockFile(scope: !11859, file: !1, discriminator: 22)
!11859 = distinct !DILexicalBlock(scope: !369, file: !1, line: 727, column: 1)
!11860 = !DILocation(line: 727, column: 1, scope: !11861)
!11861 = !DILexicalBlockFile(scope: !11859, file: !1, discriminator: 23)
!11862 = !DILocation(line: 727, column: 1, scope: !11863)
!11863 = !DILexicalBlockFile(scope: !369, file: !1, discriminator: 24)
!11864 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !370, file: !1, line: 728, type: !82)
!11865 = !DILocation(line: 728, column: 1, scope: !370)
!11866 = !DILocalVariable(name: "fromP", arg: 2, scope: !370, file: !1, line: 728, type: !95)
!11867 = !DILocalVariable(name: "fromLim", arg: 3, scope: !370, file: !1, line: 728, type: !93)
!11868 = !DILocalVariable(name: "toP", arg: 4, scope: !370, file: !1, line: 728, type: !145)
!11869 = !DILocalVariable(name: "toLim", arg: 5, scope: !370, file: !1, line: 728, type: !148)
!11870 = !DILocalVariable(name: "res", scope: !370, file: !1, line: 728, type: !21)
!11871 = !DILocation(line: 728, column: 1, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !370, file: !1, line: 728, column: 1)
!11873 = !DILocation(line: 728, column: 1, scope: !11874)
!11874 = !DILexicalBlockFile(scope: !11872, file: !1, discriminator: 1)
!11875 = !DILocation(line: 728, column: 1, scope: !11876)
!11876 = !DILexicalBlockFile(scope: !11877, file: !1, discriminator: 2)
!11877 = distinct !DILexicalBlock(scope: !11872, file: !1, line: 728, column: 1)
!11878 = !DILocation(line: 728, column: 1, scope: !11879)
!11879 = !DILexicalBlockFile(scope: !370, file: !1, discriminator: 3)
!11880 = !DILocation(line: 728, column: 1, scope: !11881)
!11881 = !DILexicalBlockFile(scope: !11882, file: !1, discriminator: 4)
!11882 = distinct !DILexicalBlock(scope: !11883, file: !1, line: 728, column: 1)
!11883 = distinct !DILexicalBlock(scope: !370, file: !1, line: 728, column: 1)
!11884 = !DILocation(line: 728, column: 1, scope: !11885)
!11885 = !DILexicalBlockFile(scope: !11882, file: !1, discriminator: 5)
!11886 = !DILocation(line: 728, column: 1, scope: !11887)
!11887 = !DILexicalBlockFile(scope: !11883, file: !1, discriminator: 6)
!11888 = !DILocation(line: 728, column: 1, scope: !11889)
!11889 = !DILexicalBlockFile(scope: !11882, file: !1, discriminator: 7)
!11890 = !DILocation(line: 728, column: 1, scope: !11891)
!11891 = !DILexicalBlockFile(scope: !11882, file: !1, discriminator: 8)
!11892 = !DILocation(line: 728, column: 1, scope: !11893)
!11893 = !DILexicalBlockFile(scope: !11894, file: !1, discriminator: 9)
!11894 = distinct !DILexicalBlock(scope: !370, file: !1, line: 728, column: 1)
!11895 = !DILocation(line: 728, column: 1, scope: !11896)
!11896 = !DILexicalBlockFile(scope: !11894, file: !1, discriminator: 10)
!11897 = !DILocation(line: 728, column: 1, scope: !11898)
!11898 = !DILexicalBlockFile(scope: !11894, file: !1, discriminator: 11)
!11899 = !DILocation(line: 728, column: 1, scope: !11900)
!11900 = !DILexicalBlockFile(scope: !11894, file: !1, discriminator: 12)
!11901 = !DILocation(line: 728, column: 1, scope: !11902)
!11902 = !DILexicalBlockFile(scope: !370, file: !1, discriminator: 13)
!11903 = !DILocalVariable(name: "open", arg: 1, scope: !343, file: !78, line: 935, type: !7)
!11904 = !DILocation(line: 935, column: 21, scope: !343)
!11905 = !DILocalVariable(name: "enc", arg: 2, scope: !343, file: !78, line: 935, type: !82)
!11906 = !DILocation(line: 935, column: 43, scope: !343)
!11907 = !DILocalVariable(name: "ptr", arg: 3, scope: !343, file: !78, line: 936, type: !93)
!11908 = !DILocation(line: 936, column: 29, scope: !343)
!11909 = !DILocalVariable(name: "end", arg: 4, scope: !343, file: !78, line: 936, type: !93)
!11910 = !DILocation(line: 936, column: 46, scope: !343)
!11911 = !DILocalVariable(name: "nextTokPtr", arg: 5, scope: !343, file: !78, line: 937, type: !95)
!11912 = !DILocation(line: 937, column: 30, scope: !343)
!11913 = !DILocation(line: 939, column: 3, scope: !343)
!11914 = !DILocation(line: 939, column: 10, scope: !11915)
!11915 = !DILexicalBlockFile(scope: !343, file: !78, discriminator: 5)
!11916 = !DILocation(line: 939, column: 3, scope: !11915)
!11917 = !DILocalVariable(name: "t", scope: !11918, file: !78, line: 940, type: !7)
!11918 = distinct !DILexicalBlock(scope: !343, file: !78, line: 939, column: 35)
!11919 = !DILocation(line: 940, column: 9, scope: !11918)
!11920 = !DILocation(line: 940, column: 13, scope: !11918)
!11921 = !DILocation(line: 940, column: 13, scope: !11922)
!11922 = !DILexicalBlockFile(scope: !11918, file: !78, discriminator: 4)
!11923 = !DILocation(line: 940, column: 13, scope: !11924)
!11924 = !DILexicalBlockFile(scope: !11918, file: !78, discriminator: 5)
!11925 = !DILocation(line: 940, column: 13, scope: !11926)
!11926 = !DILexicalBlockFile(scope: !11918, file: !78, discriminator: 6)
!11927 = !DILocation(line: 940, column: 9, scope: !11926)
!11928 = !DILocation(line: 941, column: 13, scope: !11918)
!11929 = !DILocation(line: 941, column: 5, scope: !11918)
!11930 = !DILocation(line: 942, column: 5, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !78, line: 942, column: 5)
!11932 = distinct !DILexicalBlock(scope: !11918, file: !78, line: 941, column: 16)
!11933 = !DILocation(line: 942, column: 5, scope: !11932)
!11934 = !DILocation(line: 942, column: 5, scope: !11935)
!11935 = !DILexicalBlockFile(scope: !11931, file: !78, discriminator: 25)
!11936 = !DILocation(line: 942, column: 5, scope: !11937)
!11937 = !DILexicalBlockFile(scope: !11932, file: !78, discriminator: 26)
!11938 = !DILocation(line: 942, column: 5, scope: !11939)
!11939 = !DILexicalBlockFile(scope: !11940, file: !78, discriminator: 27)
!11940 = distinct !DILexicalBlock(scope: !11932, file: !78, line: 942, column: 5)
!11941 = !DILocation(line: 942, column: 5, scope: !11942)
!11942 = !DILexicalBlockFile(scope: !11940, file: !78, discriminator: 28)
!11943 = !DILocation(line: 942, column: 5, scope: !11944)
!11944 = !DILexicalBlockFile(scope: !11932, file: !78, discriminator: 29)
!11945 = !DILocation(line: 942, column: 5, scope: !11946)
!11946 = !DILexicalBlockFile(scope: !11947, file: !78, discriminator: 30)
!11947 = distinct !DILexicalBlock(scope: !11932, file: !78, line: 942, column: 5)
!11948 = !DILocation(line: 942, column: 5, scope: !11949)
!11949 = !DILexicalBlockFile(scope: !11947, file: !78, discriminator: 31)
!11950 = !DILocation(line: 942, column: 5, scope: !11951)
!11951 = !DILexicalBlockFile(scope: !11932, file: !78, discriminator: 32)
!11952 = !DILocation(line: 942, column: 5, scope: !11953)
!11953 = !DILexicalBlockFile(scope: !11932, file: !78, discriminator: 33)
!11954 = !DILocation(line: 945, column: 11, scope: !11932)
!11955 = !DILocation(line: 946, column: 11, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11932, file: !78, line: 946, column: 11)
!11957 = !DILocation(line: 946, column: 16, scope: !11956)
!11958 = !DILocation(line: 946, column: 13, scope: !11956)
!11959 = !DILocation(line: 946, column: 11, scope: !11932)
!11960 = !DILocation(line: 947, column: 9, scope: !11956)
!11961 = !DILocation(line: 948, column: 13, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11932, file: !78, line: 948, column: 11)
!11963 = !DILocation(line: 948, column: 11, scope: !11932)
!11964 = !DILocation(line: 949, column: 9, scope: !11962)
!11965 = !DILocation(line: 950, column: 21, scope: !11932)
!11966 = !DILocation(line: 950, column: 8, scope: !11932)
!11967 = !DILocation(line: 950, column: 19, scope: !11932)
!11968 = !DILocation(line: 951, column: 15, scope: !11932)
!11969 = !DILocation(line: 951, column: 15, scope: !11970)
!11970 = !DILexicalBlockFile(scope: !11932, file: !78, discriminator: 4)
!11971 = !DILocation(line: 951, column: 15, scope: !11972)
!11972 = !DILexicalBlockFile(scope: !11932, file: !78, discriminator: 5)
!11973 = !DILocation(line: 951, column: 15, scope: !11974)
!11974 = !DILexicalBlockFile(scope: !11932, file: !78, discriminator: 6)
!11975 = !DILocation(line: 951, column: 7, scope: !11974)
!11976 = !DILocation(line: 954, column: 9, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11932, file: !78, line: 951, column: 36)
!11978 = !DILocation(line: 956, column: 9, scope: !11977)
!11979 = !DILocation(line: 959, column: 11, scope: !11932)
!11980 = !DILocation(line: 960, column: 7, scope: !11932)
!11981 = !DILocation(line: 939, column: 3, scope: !11982)
!11982 = !DILexicalBlockFile(scope: !343, file: !78, discriminator: 6)
!11983 = !DILocation(line: 963, column: 3, scope: !343)
!11984 = !DILocation(line: 964, column: 1, scope: !343)
!11985 = !DILocalVariable(name: "enc", arg: 1, scope: !344, file: !78, line: 149, type: !82)
!11986 = !DILocation(line: 149, column: 34, scope: !344)
!11987 = !DILocalVariable(name: "ptr", arg: 2, scope: !344, file: !78, line: 149, type: !93)
!11988 = !DILocation(line: 149, column: 51, scope: !344)
!11989 = !DILocalVariable(name: "end", arg: 3, scope: !344, file: !78, line: 150, type: !93)
!11990 = !DILocation(line: 150, column: 30, scope: !344)
!11991 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !344, file: !78, line: 150, type: !95)
!11992 = !DILocation(line: 150, column: 48, scope: !344)
!11993 = !DILocation(line: 152, column: 3, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !78, line: 152, column: 3)
!11995 = distinct !DILexicalBlock(scope: !344, file: !78, line: 152, column: 3)
!11996 = !DILocation(line: 152, column: 3, scope: !11995)
!11997 = !DILocation(line: 152, column: 3, scope: !11998)
!11998 = !DILexicalBlockFile(scope: !11999, file: !78, discriminator: 3)
!11999 = distinct !DILexicalBlock(scope: !11994, file: !78, line: 152, column: 3)
!12000 = !DILocation(line: 153, column: 11, scope: !344)
!12001 = !DILocation(line: 153, column: 11, scope: !12002)
!12002 = !DILexicalBlockFile(scope: !344, file: !78, discriminator: 4)
!12003 = !DILocation(line: 153, column: 11, scope: !12004)
!12004 = !DILexicalBlockFile(scope: !344, file: !78, discriminator: 5)
!12005 = !DILocation(line: 153, column: 11, scope: !12006)
!12006 = !DILexicalBlockFile(scope: !344, file: !78, discriminator: 6)
!12007 = !DILocation(line: 153, column: 3, scope: !12006)
!12008 = !DILocation(line: 155, column: 32, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !344, file: !78, line: 153, column: 32)
!12010 = !DILocation(line: 155, column: 37, scope: !12009)
!12011 = !DILocation(line: 155, column: 41, scope: !12009)
!12012 = !DILocation(line: 155, column: 56, scope: !12009)
!12013 = !DILocation(line: 155, column: 61, scope: !12009)
!12014 = !DILocation(line: 155, column: 12, scope: !12009)
!12015 = !DILocation(line: 155, column: 5, scope: !12009)
!12016 = !DILocation(line: 157, column: 19, scope: !12009)
!12017 = !DILocation(line: 157, column: 23, scope: !12009)
!12018 = !DILocation(line: 157, column: 6, scope: !12009)
!12019 = !DILocation(line: 157, column: 17, scope: !12009)
!12020 = !DILocation(line: 158, column: 5, scope: !12009)
!12021 = !DILocation(line: 161, column: 9, scope: !12009)
!12022 = !DILocation(line: 162, column: 5, scope: !12009)
!12023 = !DILocation(line: 164, column: 19, scope: !12009)
!12024 = !DILocation(line: 164, column: 6, scope: !12009)
!12025 = !DILocation(line: 164, column: 17, scope: !12009)
!12026 = !DILocation(line: 165, column: 5, scope: !12009)
!12027 = !DILocation(line: 167, column: 3, scope: !344)
!12028 = !DILocation(line: 167, column: 10, scope: !12004)
!12029 = !DILocation(line: 167, column: 3, scope: !12004)
!12030 = !DILocation(line: 168, column: 13, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !344, file: !78, line: 167, column: 35)
!12032 = !DILocation(line: 168, column: 13, scope: !12033)
!12033 = !DILexicalBlockFile(scope: !12031, file: !78, discriminator: 4)
!12034 = !DILocation(line: 168, column: 13, scope: !12035)
!12035 = !DILexicalBlockFile(scope: !12031, file: !78, discriminator: 5)
!12036 = !DILocation(line: 168, column: 13, scope: !12037)
!12037 = !DILexicalBlockFile(scope: !12031, file: !78, discriminator: 6)
!12038 = !DILocation(line: 168, column: 5, scope: !12037)
!12039 = !DILocation(line: 170, column: 7, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !78, line: 170, column: 7)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !78, line: 170, column: 7)
!12042 = distinct !DILexicalBlock(scope: !12031, file: !78, line: 168, column: 34)
!12043 = !DILocation(line: 170, column: 7, scope: !12041)
!12044 = !DILocation(line: 170, column: 7, scope: !12045)
!12045 = !DILexicalBlockFile(scope: !12046, file: !78, discriminator: 3)
!12046 = distinct !DILexicalBlock(scope: !12040, file: !78, line: 170, column: 7)
!12047 = !DILocation(line: 172, column: 15, scope: !12042)
!12048 = !DILocation(line: 172, column: 15, scope: !12049)
!12049 = !DILexicalBlockFile(scope: !12042, file: !78, discriminator: 4)
!12050 = !DILocation(line: 172, column: 15, scope: !12051)
!12051 = !DILexicalBlockFile(scope: !12042, file: !78, discriminator: 5)
!12052 = !DILocation(line: 172, column: 15, scope: !12053)
!12053 = !DILexicalBlockFile(scope: !12042, file: !78, discriminator: 6)
!12054 = !DILocation(line: 172, column: 7, scope: !12053)
!12055 = !DILocation(line: 174, column: 23, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12042, file: !78, line: 172, column: 50)
!12057 = !DILocation(line: 174, column: 10, scope: !12056)
!12058 = !DILocation(line: 174, column: 21, scope: !12056)
!12059 = !DILocation(line: 175, column: 9, scope: !12056)
!12060 = !DILocation(line: 176, column: 7, scope: !12056)
!12061 = !DILocation(line: 179, column: 21, scope: !12042)
!12062 = !DILocation(line: 179, column: 8, scope: !12042)
!12063 = !DILocation(line: 179, column: 19, scope: !12042)
!12064 = !DILocation(line: 180, column: 7, scope: !12042)
!12065 = !DILocation(line: 183, column: 11, scope: !12042)
!12066 = !DILocation(line: 184, column: 7, scope: !12042)
!12067 = !DILocation(line: 186, column: 21, scope: !12042)
!12068 = !DILocation(line: 186, column: 8, scope: !12042)
!12069 = !DILocation(line: 186, column: 19, scope: !12042)
!12070 = !DILocation(line: 187, column: 7, scope: !12042)
!12071 = !DILocation(line: 167, column: 3, scope: !12006)
!12072 = !DILocation(line: 190, column: 3, scope: !344)
!12073 = !DILocation(line: 191, column: 1, scope: !344)
!12074 = !DILocalVariable(name: "enc", arg: 1, scope: !346, file: !78, line: 239, type: !82)
!12075 = !DILocation(line: 239, column: 32, scope: !346)
!12076 = !DILocalVariable(name: "ptr", arg: 2, scope: !346, file: !78, line: 239, type: !93)
!12077 = !DILocation(line: 239, column: 49, scope: !346)
!12078 = !DILocalVariable(name: "end", arg: 3, scope: !346, file: !78, line: 240, type: !93)
!12079 = !DILocation(line: 240, column: 28, scope: !346)
!12080 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !346, file: !78, line: 240, type: !95)
!12081 = !DILocation(line: 240, column: 46, scope: !346)
!12082 = !DILocalVariable(name: "tok", scope: !346, file: !78, line: 242, type: !7)
!12083 = !DILocation(line: 242, column: 7, scope: !346)
!12084 = !DILocalVariable(name: "target", scope: !346, file: !78, line: 243, type: !93)
!12085 = !DILocation(line: 243, column: 15, scope: !346)
!12086 = !DILocation(line: 243, column: 24, scope: !346)
!12087 = !DILocation(line: 244, column: 3, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !78, line: 244, column: 3)
!12089 = distinct !DILexicalBlock(scope: !346, file: !78, line: 244, column: 3)
!12090 = !DILocation(line: 244, column: 3, scope: !12089)
!12091 = !DILocation(line: 244, column: 3, scope: !12092)
!12092 = !DILexicalBlockFile(scope: !12093, file: !78, discriminator: 3)
!12093 = distinct !DILexicalBlock(scope: !12088, file: !78, line: 244, column: 3)
!12094 = !DILocation(line: 245, column: 11, scope: !346)
!12095 = !DILocation(line: 245, column: 11, scope: !12096)
!12096 = !DILexicalBlockFile(scope: !346, file: !78, discriminator: 4)
!12097 = !DILocation(line: 245, column: 11, scope: !12098)
!12098 = !DILexicalBlockFile(scope: !346, file: !78, discriminator: 5)
!12099 = !DILocation(line: 245, column: 11, scope: !12100)
!12100 = !DILexicalBlockFile(scope: !346, file: !78, discriminator: 6)
!12101 = !DILocation(line: 245, column: 3, scope: !12100)
!12102 = !DILocation(line: 246, column: 3, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !78, line: 246, column: 3)
!12104 = distinct !DILexicalBlock(scope: !346, file: !78, line: 245, column: 32)
!12105 = !DILocation(line: 246, column: 3, scope: !12104)
!12106 = !DILocation(line: 246, column: 3, scope: !12107)
!12107 = !DILexicalBlockFile(scope: !12108, file: !78, discriminator: 29)
!12108 = distinct !DILexicalBlock(scope: !12103, file: !78, line: 246, column: 3)
!12109 = !DILocation(line: 246, column: 3, scope: !12110)
!12110 = !DILexicalBlockFile(scope: !12103, file: !78, discriminator: 30)
!12111 = !DILocation(line: 246, column: 3, scope: !12112)
!12112 = !DILexicalBlockFile(scope: !12104, file: !78, discriminator: 31)
!12113 = !DILocation(line: 246, column: 3, scope: !12114)
!12114 = !DILexicalBlockFile(scope: !12115, file: !78, discriminator: 32)
!12115 = distinct !DILexicalBlock(scope: !12104, file: !78, line: 246, column: 3)
!12116 = !DILocation(line: 246, column: 3, scope: !12117)
!12117 = !DILexicalBlockFile(scope: !12115, file: !78, discriminator: 33)
!12118 = !DILocation(line: 246, column: 3, scope: !12119)
!12119 = !DILexicalBlockFile(scope: !12120, file: !78, discriminator: 34)
!12120 = distinct !DILexicalBlock(scope: !12121, file: !78, line: 246, column: 3)
!12121 = distinct !DILexicalBlock(scope: !12104, file: !78, line: 246, column: 3)
!12122 = !DILocation(line: 246, column: 3, scope: !12123)
!12123 = !DILexicalBlockFile(scope: !12124, file: !78, discriminator: 35)
!12124 = distinct !DILexicalBlock(scope: !12104, file: !78, line: 246, column: 3)
!12125 = !DILocation(line: 246, column: 3, scope: !12126)
!12126 = !DILexicalBlockFile(scope: !12124, file: !78, discriminator: 36)
!12127 = !DILocation(line: 246, column: 3, scope: !12128)
!12128 = !DILexicalBlockFile(scope: !12129, file: !78, discriminator: 37)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !78, line: 246, column: 3)
!12130 = distinct !DILexicalBlock(scope: !12104, file: !78, line: 246, column: 3)
!12131 = !DILocation(line: 246, column: 3, scope: !12132)
!12132 = !DILexicalBlockFile(scope: !12133, file: !78, discriminator: 38)
!12133 = distinct !DILexicalBlock(scope: !12104, file: !78, line: 246, column: 3)
!12134 = !DILocation(line: 246, column: 3, scope: !12135)
!12135 = !DILexicalBlockFile(scope: !12133, file: !78, discriminator: 39)
!12136 = !DILocation(line: 246, column: 3, scope: !12137)
!12137 = !DILexicalBlockFile(scope: !12138, file: !78, discriminator: 40)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !78, line: 246, column: 3)
!12139 = distinct !DILexicalBlock(scope: !12104, file: !78, line: 246, column: 3)
!12140 = !DILocation(line: 248, column: 19, scope: !12104)
!12141 = !DILocation(line: 248, column: 6, scope: !12104)
!12142 = !DILocation(line: 248, column: 17, scope: !12104)
!12143 = !DILocation(line: 249, column: 5, scope: !12104)
!12144 = !DILocation(line: 251, column: 3, scope: !346)
!12145 = !DILocation(line: 251, column: 10, scope: !12098)
!12146 = !DILocation(line: 251, column: 3, scope: !12098)
!12147 = !DILocation(line: 252, column: 13, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !346, file: !78, line: 251, column: 35)
!12149 = !DILocation(line: 252, column: 13, scope: !12150)
!12150 = !DILexicalBlockFile(scope: !12148, file: !78, discriminator: 4)
!12151 = !DILocation(line: 252, column: 13, scope: !12152)
!12152 = !DILexicalBlockFile(scope: !12148, file: !78, discriminator: 5)
!12153 = !DILocation(line: 252, column: 13, scope: !12154)
!12154 = !DILexicalBlockFile(scope: !12148, file: !78, discriminator: 6)
!12155 = !DILocation(line: 252, column: 5, scope: !12154)
!12156 = !DILocation(line: 253, column: 5, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 253, column: 5)
!12158 = distinct !DILexicalBlock(scope: !12148, file: !78, line: 252, column: 34)
!12159 = !DILocation(line: 253, column: 5, scope: !12158)
!12160 = !DILocation(line: 253, column: 5, scope: !12161)
!12161 = !DILexicalBlockFile(scope: !12162, file: !78, discriminator: 29)
!12162 = distinct !DILexicalBlock(scope: !12157, file: !78, line: 253, column: 5)
!12163 = !DILocation(line: 253, column: 5, scope: !12164)
!12164 = !DILexicalBlockFile(scope: !12157, file: !78, discriminator: 30)
!12165 = !DILocation(line: 253, column: 5, scope: !12166)
!12166 = !DILexicalBlockFile(scope: !12158, file: !78, discriminator: 31)
!12167 = !DILocation(line: 253, column: 5, scope: !12168)
!12168 = !DILexicalBlockFile(scope: !12169, file: !78, discriminator: 32)
!12169 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 253, column: 5)
!12170 = !DILocation(line: 253, column: 5, scope: !12171)
!12171 = !DILexicalBlockFile(scope: !12169, file: !78, discriminator: 33)
!12172 = !DILocation(line: 253, column: 5, scope: !12173)
!12173 = !DILexicalBlockFile(scope: !12174, file: !78, discriminator: 34)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !78, line: 253, column: 5)
!12175 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 253, column: 5)
!12176 = !DILocation(line: 253, column: 5, scope: !12177)
!12177 = !DILexicalBlockFile(scope: !12178, file: !78, discriminator: 35)
!12178 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 253, column: 5)
!12179 = !DILocation(line: 253, column: 5, scope: !12180)
!12180 = !DILexicalBlockFile(scope: !12178, file: !78, discriminator: 36)
!12181 = !DILocation(line: 253, column: 5, scope: !12182)
!12182 = !DILexicalBlockFile(scope: !12183, file: !78, discriminator: 37)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !78, line: 253, column: 5)
!12184 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 253, column: 5)
!12185 = !DILocation(line: 253, column: 5, scope: !12186)
!12186 = !DILexicalBlockFile(scope: !12187, file: !78, discriminator: 38)
!12187 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 253, column: 5)
!12188 = !DILocation(line: 253, column: 5, scope: !12189)
!12189 = !DILexicalBlockFile(scope: !12187, file: !78, discriminator: 39)
!12190 = !DILocation(line: 253, column: 5, scope: !12191)
!12191 = !DILexicalBlockFile(scope: !12192, file: !78, discriminator: 40)
!12192 = distinct !DILexicalBlock(scope: !12193, file: !78, line: 253, column: 5)
!12193 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 253, column: 5)
!12194 = !DILocation(line: 255, column: 34, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 255, column: 11)
!12196 = !DILocation(line: 255, column: 39, scope: !12195)
!12197 = !DILocation(line: 255, column: 47, scope: !12195)
!12198 = !DILocation(line: 255, column: 12, scope: !12195)
!12199 = !DILocation(line: 255, column: 11, scope: !12158)
!12200 = !DILocation(line: 256, column: 23, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12195, file: !78, line: 255, column: 59)
!12202 = !DILocation(line: 256, column: 10, scope: !12201)
!12203 = !DILocation(line: 256, column: 21, scope: !12201)
!12204 = !DILocation(line: 257, column: 9, scope: !12201)
!12205 = !DILocation(line: 259, column: 11, scope: !12158)
!12206 = !DILocation(line: 260, column: 7, scope: !12158)
!12207 = !DILocation(line: 260, column: 14, scope: !12208)
!12208 = !DILexicalBlockFile(scope: !12158, file: !78, discriminator: 5)
!12209 = !DILocation(line: 260, column: 7, scope: !12208)
!12210 = !DILocation(line: 261, column: 17, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 260, column: 39)
!12212 = !DILocation(line: 261, column: 17, scope: !12213)
!12213 = !DILexicalBlockFile(scope: !12211, file: !78, discriminator: 4)
!12214 = !DILocation(line: 261, column: 17, scope: !12215)
!12215 = !DILexicalBlockFile(scope: !12211, file: !78, discriminator: 5)
!12216 = !DILocation(line: 261, column: 17, scope: !12217)
!12217 = !DILexicalBlockFile(scope: !12211, file: !78, discriminator: 6)
!12218 = !DILocation(line: 261, column: 9, scope: !12217)
!12219 = !DILocation(line: 262, column: 9, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12221, file: !78, line: 262, column: 9)
!12221 = distinct !DILexicalBlock(scope: !12211, file: !78, line: 261, column: 38)
!12222 = !DILocation(line: 262, column: 9, scope: !12221)
!12223 = !DILocation(line: 262, column: 9, scope: !12224)
!12224 = !DILexicalBlockFile(scope: !12220, file: !78, discriminator: 25)
!12225 = !DILocation(line: 262, column: 9, scope: !12226)
!12226 = !DILexicalBlockFile(scope: !12221, file: !78, discriminator: 26)
!12227 = !DILocation(line: 262, column: 9, scope: !12228)
!12228 = !DILexicalBlockFile(scope: !12229, file: !78, discriminator: 27)
!12229 = distinct !DILexicalBlock(scope: !12221, file: !78, line: 262, column: 9)
!12230 = !DILocation(line: 262, column: 9, scope: !12231)
!12231 = !DILexicalBlockFile(scope: !12229, file: !78, discriminator: 28)
!12232 = !DILocation(line: 262, column: 9, scope: !12233)
!12233 = !DILexicalBlockFile(scope: !12221, file: !78, discriminator: 29)
!12234 = !DILocation(line: 262, column: 9, scope: !12235)
!12235 = !DILexicalBlockFile(scope: !12236, file: !78, discriminator: 30)
!12236 = distinct !DILexicalBlock(scope: !12221, file: !78, line: 262, column: 9)
!12237 = !DILocation(line: 262, column: 9, scope: !12238)
!12238 = !DILexicalBlockFile(scope: !12236, file: !78, discriminator: 31)
!12239 = !DILocation(line: 262, column: 9, scope: !12240)
!12240 = !DILexicalBlockFile(scope: !12221, file: !78, discriminator: 32)
!12241 = !DILocation(line: 262, column: 9, scope: !12242)
!12242 = !DILexicalBlockFile(scope: !12221, file: !78, discriminator: 33)
!12243 = !DILocation(line: 264, column: 15, scope: !12221)
!12244 = !DILocation(line: 265, column: 11, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12246, file: !78, line: 265, column: 11)
!12246 = distinct !DILexicalBlock(scope: !12221, file: !78, line: 265, column: 11)
!12247 = !DILocation(line: 265, column: 11, scope: !12246)
!12248 = !DILocation(line: 265, column: 11, scope: !12249)
!12249 = !DILexicalBlockFile(scope: !12250, file: !78, discriminator: 3)
!12250 = distinct !DILexicalBlock(scope: !12245, file: !78, line: 265, column: 11)
!12251 = !DILocation(line: 266, column: 15, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12221, file: !78, line: 266, column: 15)
!12253 = !DILocation(line: 266, column: 15, scope: !12254)
!12254 = !DILexicalBlockFile(scope: !12252, file: !78, discriminator: 2)
!12255 = !DILocation(line: 267, column: 27, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12252, file: !78, line: 266, column: 49)
!12257 = !DILocation(line: 267, column: 31, scope: !12256)
!12258 = !DILocation(line: 267, column: 14, scope: !12256)
!12259 = !DILocation(line: 267, column: 25, scope: !12256)
!12260 = !DILocation(line: 268, column: 20, scope: !12256)
!12261 = !DILocation(line: 268, column: 13, scope: !12256)
!12262 = !DILocation(line: 270, column: 11, scope: !12221)
!12263 = !DILocation(line: 272, column: 15, scope: !12221)
!12264 = !DILocation(line: 273, column: 11, scope: !12221)
!12265 = !DILocation(line: 260, column: 7, scope: !12266)
!12266 = !DILexicalBlockFile(scope: !12158, file: !78, discriminator: 6)
!12267 = !DILocation(line: 276, column: 7, scope: !12158)
!12268 = !DILocation(line: 278, column: 34, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 278, column: 11)
!12270 = !DILocation(line: 278, column: 39, scope: !12269)
!12271 = !DILocation(line: 278, column: 47, scope: !12269)
!12272 = !DILocation(line: 278, column: 12, scope: !12269)
!12273 = !DILocation(line: 278, column: 11, scope: !12158)
!12274 = !DILocation(line: 279, column: 23, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12269, file: !78, line: 278, column: 59)
!12276 = !DILocation(line: 279, column: 10, scope: !12275)
!12277 = !DILocation(line: 279, column: 21, scope: !12275)
!12278 = !DILocation(line: 280, column: 9, scope: !12275)
!12279 = !DILocation(line: 282, column: 11, scope: !12158)
!12280 = !DILocation(line: 283, column: 7, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !78, line: 283, column: 7)
!12282 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 283, column: 7)
!12283 = !DILocation(line: 283, column: 7, scope: !12282)
!12284 = !DILocation(line: 283, column: 7, scope: !12285)
!12285 = !DILexicalBlockFile(scope: !12286, file: !78, discriminator: 3)
!12286 = distinct !DILexicalBlock(scope: !12281, file: !78, line: 283, column: 7)
!12287 = !DILocation(line: 284, column: 11, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12158, file: !78, line: 284, column: 11)
!12289 = !DILocation(line: 284, column: 11, scope: !12290)
!12290 = !DILexicalBlockFile(scope: !12288, file: !78, discriminator: 4)
!12291 = !DILocation(line: 285, column: 23, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12288, file: !78, line: 284, column: 45)
!12293 = !DILocation(line: 285, column: 27, scope: !12292)
!12294 = !DILocation(line: 285, column: 10, scope: !12292)
!12295 = !DILocation(line: 285, column: 21, scope: !12292)
!12296 = !DILocation(line: 286, column: 16, scope: !12292)
!12297 = !DILocation(line: 286, column: 9, scope: !12292)
!12298 = !DILocation(line: 284, column: 11, scope: !12299)
!12299 = !DILexicalBlockFile(scope: !12288, file: !78, discriminator: 5)
!12300 = !DILocation(line: 290, column: 21, scope: !12158)
!12301 = !DILocation(line: 290, column: 8, scope: !12158)
!12302 = !DILocation(line: 290, column: 19, scope: !12158)
!12303 = !DILocation(line: 291, column: 7, scope: !12158)
!12304 = !DILocation(line: 251, column: 3, scope: !12100)
!12305 = !DILocation(line: 294, column: 3, scope: !346)
!12306 = !DILocation(line: 295, column: 1, scope: !346)
!12307 = !DILocalVariable(name: "enc", arg: 1, scope: !348, file: !78, line: 881, type: !82)
!12308 = !DILocation(line: 881, column: 37, scope: !348)
!12309 = !DILocalVariable(name: "ptr", arg: 2, scope: !348, file: !78, line: 881, type: !93)
!12310 = !DILocation(line: 881, column: 54, scope: !348)
!12311 = !DILocalVariable(name: "end", arg: 3, scope: !348, file: !78, line: 881, type: !93)
!12312 = !DILocation(line: 881, column: 71, scope: !348)
!12313 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !348, file: !78, line: 882, type: !95)
!12314 = !DILocation(line: 882, column: 34, scope: !348)
!12315 = !DILocation(line: 884, column: 3, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !78, line: 884, column: 3)
!12317 = distinct !DILexicalBlock(scope: !348, file: !78, line: 884, column: 3)
!12318 = !DILocation(line: 884, column: 3, scope: !12317)
!12319 = !DILocation(line: 884, column: 3, scope: !12320)
!12320 = !DILexicalBlockFile(scope: !12321, file: !78, discriminator: 3)
!12321 = distinct !DILexicalBlock(scope: !12316, file: !78, line: 884, column: 3)
!12322 = !DILocation(line: 885, column: 11, scope: !348)
!12323 = !DILocation(line: 885, column: 11, scope: !12324)
!12324 = !DILexicalBlockFile(scope: !348, file: !78, discriminator: 4)
!12325 = !DILocation(line: 885, column: 11, scope: !12326)
!12326 = !DILexicalBlockFile(scope: !348, file: !78, discriminator: 5)
!12327 = !DILocation(line: 885, column: 11, scope: !12328)
!12328 = !DILexicalBlockFile(scope: !348, file: !78, discriminator: 6)
!12329 = !DILocation(line: 885, column: 3, scope: !12328)
!12330 = !DILocation(line: 886, column: 3, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12332, file: !78, line: 886, column: 3)
!12332 = distinct !DILexicalBlock(scope: !348, file: !78, line: 885, column: 32)
!12333 = !DILocation(line: 886, column: 3, scope: !12332)
!12334 = !DILocation(line: 886, column: 3, scope: !12335)
!12335 = !DILexicalBlockFile(scope: !12336, file: !78, discriminator: 29)
!12336 = distinct !DILexicalBlock(scope: !12331, file: !78, line: 886, column: 3)
!12337 = !DILocation(line: 886, column: 3, scope: !12338)
!12338 = !DILexicalBlockFile(scope: !12331, file: !78, discriminator: 30)
!12339 = !DILocation(line: 886, column: 3, scope: !12340)
!12340 = !DILexicalBlockFile(scope: !12332, file: !78, discriminator: 31)
!12341 = !DILocation(line: 886, column: 3, scope: !12342)
!12342 = !DILexicalBlockFile(scope: !12343, file: !78, discriminator: 32)
!12343 = distinct !DILexicalBlock(scope: !12332, file: !78, line: 886, column: 3)
!12344 = !DILocation(line: 886, column: 3, scope: !12345)
!12345 = !DILexicalBlockFile(scope: !12343, file: !78, discriminator: 33)
!12346 = !DILocation(line: 886, column: 3, scope: !12347)
!12347 = !DILexicalBlockFile(scope: !12348, file: !78, discriminator: 34)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !78, line: 886, column: 3)
!12349 = distinct !DILexicalBlock(scope: !12332, file: !78, line: 886, column: 3)
!12350 = !DILocation(line: 886, column: 3, scope: !12351)
!12351 = !DILexicalBlockFile(scope: !12352, file: !78, discriminator: 35)
!12352 = distinct !DILexicalBlock(scope: !12332, file: !78, line: 886, column: 3)
!12353 = !DILocation(line: 886, column: 3, scope: !12354)
!12354 = !DILexicalBlockFile(scope: !12352, file: !78, discriminator: 36)
!12355 = !DILocation(line: 886, column: 3, scope: !12356)
!12356 = !DILexicalBlockFile(scope: !12357, file: !78, discriminator: 37)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !78, line: 886, column: 3)
!12358 = distinct !DILexicalBlock(scope: !12332, file: !78, line: 886, column: 3)
!12359 = !DILocation(line: 886, column: 3, scope: !12360)
!12360 = !DILexicalBlockFile(scope: !12361, file: !78, discriminator: 38)
!12361 = distinct !DILexicalBlock(scope: !12332, file: !78, line: 886, column: 3)
!12362 = !DILocation(line: 886, column: 3, scope: !12363)
!12363 = !DILexicalBlockFile(scope: !12361, file: !78, discriminator: 39)
!12364 = !DILocation(line: 886, column: 3, scope: !12365)
!12365 = !DILexicalBlockFile(scope: !12366, file: !78, discriminator: 40)
!12366 = distinct !DILexicalBlock(scope: !12367, file: !78, line: 886, column: 3)
!12367 = distinct !DILexicalBlock(scope: !12332, file: !78, line: 886, column: 3)
!12368 = !DILocation(line: 888, column: 19, scope: !12332)
!12369 = !DILocation(line: 888, column: 6, scope: !12332)
!12370 = !DILocation(line: 888, column: 17, scope: !12332)
!12371 = !DILocation(line: 889, column: 5, scope: !12332)
!12372 = !DILocation(line: 891, column: 19, scope: !12332)
!12373 = !DILocation(line: 891, column: 6, scope: !12332)
!12374 = !DILocation(line: 891, column: 17, scope: !12332)
!12375 = !DILocation(line: 892, column: 5, scope: !12332)
!12376 = !DILocation(line: 894, column: 3, scope: !348)
!12377 = !DILocation(line: 894, column: 10, scope: !12326)
!12378 = !DILocation(line: 894, column: 3, scope: !12326)
!12379 = !DILocation(line: 895, column: 13, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !348, file: !78, line: 894, column: 35)
!12381 = !DILocation(line: 895, column: 13, scope: !12382)
!12382 = !DILexicalBlockFile(scope: !12380, file: !78, discriminator: 4)
!12383 = !DILocation(line: 895, column: 13, scope: !12384)
!12384 = !DILexicalBlockFile(scope: !12380, file: !78, discriminator: 5)
!12385 = !DILocation(line: 895, column: 13, scope: !12386)
!12386 = !DILexicalBlockFile(scope: !12380, file: !78, discriminator: 6)
!12387 = !DILocation(line: 895, column: 5, scope: !12386)
!12388 = !DILocation(line: 896, column: 5, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !78, line: 896, column: 5)
!12390 = distinct !DILexicalBlock(scope: !12380, file: !78, line: 895, column: 34)
!12391 = !DILocation(line: 896, column: 5, scope: !12390)
!12392 = !DILocation(line: 896, column: 5, scope: !12393)
!12393 = !DILexicalBlockFile(scope: !12394, file: !78, discriminator: 29)
!12394 = distinct !DILexicalBlock(scope: !12389, file: !78, line: 896, column: 5)
!12395 = !DILocation(line: 896, column: 5, scope: !12396)
!12396 = !DILexicalBlockFile(scope: !12389, file: !78, discriminator: 30)
!12397 = !DILocation(line: 896, column: 5, scope: !12398)
!12398 = !DILexicalBlockFile(scope: !12390, file: !78, discriminator: 31)
!12399 = !DILocation(line: 896, column: 5, scope: !12400)
!12400 = !DILexicalBlockFile(scope: !12401, file: !78, discriminator: 32)
!12401 = distinct !DILexicalBlock(scope: !12390, file: !78, line: 896, column: 5)
!12402 = !DILocation(line: 896, column: 5, scope: !12403)
!12403 = !DILexicalBlockFile(scope: !12401, file: !78, discriminator: 33)
!12404 = !DILocation(line: 896, column: 5, scope: !12405)
!12405 = !DILexicalBlockFile(scope: !12406, file: !78, discriminator: 34)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !78, line: 896, column: 5)
!12407 = distinct !DILexicalBlock(scope: !12390, file: !78, line: 896, column: 5)
!12408 = !DILocation(line: 896, column: 5, scope: !12409)
!12409 = !DILexicalBlockFile(scope: !12410, file: !78, discriminator: 35)
!12410 = distinct !DILexicalBlock(scope: !12390, file: !78, line: 896, column: 5)
!12411 = !DILocation(line: 896, column: 5, scope: !12412)
!12412 = !DILexicalBlockFile(scope: !12410, file: !78, discriminator: 36)
!12413 = !DILocation(line: 896, column: 5, scope: !12414)
!12414 = !DILexicalBlockFile(scope: !12415, file: !78, discriminator: 37)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !78, line: 896, column: 5)
!12416 = distinct !DILexicalBlock(scope: !12390, file: !78, line: 896, column: 5)
!12417 = !DILocation(line: 896, column: 5, scope: !12418)
!12418 = !DILexicalBlockFile(scope: !12419, file: !78, discriminator: 38)
!12419 = distinct !DILexicalBlock(scope: !12390, file: !78, line: 896, column: 5)
!12420 = !DILocation(line: 896, column: 5, scope: !12421)
!12421 = !DILexicalBlockFile(scope: !12419, file: !78, discriminator: 39)
!12422 = !DILocation(line: 896, column: 5, scope: !12423)
!12423 = !DILexicalBlockFile(scope: !12424, file: !78, discriminator: 40)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !78, line: 896, column: 5)
!12425 = distinct !DILexicalBlock(scope: !12390, file: !78, line: 896, column: 5)
!12426 = !DILocation(line: 898, column: 21, scope: !12390)
!12427 = !DILocation(line: 898, column: 25, scope: !12390)
!12428 = !DILocation(line: 898, column: 8, scope: !12390)
!12429 = !DILocation(line: 898, column: 19, scope: !12390)
!12430 = !DILocation(line: 899, column: 7, scope: !12390)
!12431 = !DILocation(line: 901, column: 21, scope: !12390)
!12432 = !DILocation(line: 901, column: 8, scope: !12390)
!12433 = !DILocation(line: 901, column: 19, scope: !12390)
!12434 = !DILocation(line: 902, column: 7, scope: !12390)
!12435 = !DILocation(line: 894, column: 3, scope: !12328)
!12436 = !DILocation(line: 905, column: 3, scope: !348)
!12437 = !DILocation(line: 906, column: 1, scope: !348)
!12438 = !DILocalVariable(name: "enc", arg: 1, scope: !349, file: !78, line: 909, type: !82)
!12439 = !DILocation(line: 909, column: 39, scope: !349)
!12440 = !DILocalVariable(name: "ptr", arg: 2, scope: !349, file: !78, line: 909, type: !93)
!12441 = !DILocation(line: 909, column: 56, scope: !349)
!12442 = !DILocalVariable(name: "end", arg: 3, scope: !349, file: !78, line: 909, type: !93)
!12443 = !DILocation(line: 909, column: 73, scope: !349)
!12444 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !349, file: !78, line: 910, type: !95)
!12445 = !DILocation(line: 910, column: 36, scope: !349)
!12446 = !DILocation(line: 912, column: 3, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !78, line: 912, column: 3)
!12448 = distinct !DILexicalBlock(scope: !349, file: !78, line: 912, column: 3)
!12449 = !DILocation(line: 912, column: 3, scope: !12448)
!12450 = !DILocation(line: 912, column: 3, scope: !12451)
!12451 = !DILexicalBlockFile(scope: !12452, file: !78, discriminator: 3)
!12452 = distinct !DILexicalBlock(scope: !12447, file: !78, line: 912, column: 3)
!12453 = !DILocation(line: 913, column: 11, scope: !349)
!12454 = !DILocation(line: 913, column: 11, scope: !12455)
!12455 = !DILexicalBlockFile(scope: !349, file: !78, discriminator: 4)
!12456 = !DILocation(line: 913, column: 11, scope: !12457)
!12457 = !DILexicalBlockFile(scope: !349, file: !78, discriminator: 5)
!12458 = !DILocation(line: 913, column: 11, scope: !12459)
!12459 = !DILexicalBlockFile(scope: !349, file: !78, discriminator: 6)
!12460 = !DILocation(line: 913, column: 3, scope: !12459)
!12461 = !DILocation(line: 914, column: 3, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12463, file: !78, line: 914, column: 3)
!12463 = distinct !DILexicalBlock(scope: !349, file: !78, line: 913, column: 32)
!12464 = !DILocation(line: 914, column: 3, scope: !12463)
!12465 = !DILocation(line: 914, column: 3, scope: !12466)
!12466 = !DILexicalBlockFile(scope: !12467, file: !78, discriminator: 29)
!12467 = distinct !DILexicalBlock(scope: !12462, file: !78, line: 914, column: 3)
!12468 = !DILocation(line: 914, column: 3, scope: !12469)
!12469 = !DILexicalBlockFile(scope: !12462, file: !78, discriminator: 30)
!12470 = !DILocation(line: 914, column: 3, scope: !12471)
!12471 = !DILexicalBlockFile(scope: !12463, file: !78, discriminator: 31)
!12472 = !DILocation(line: 914, column: 3, scope: !12473)
!12473 = !DILexicalBlockFile(scope: !12474, file: !78, discriminator: 32)
!12474 = distinct !DILexicalBlock(scope: !12463, file: !78, line: 914, column: 3)
!12475 = !DILocation(line: 914, column: 3, scope: !12476)
!12476 = !DILexicalBlockFile(scope: !12474, file: !78, discriminator: 33)
!12477 = !DILocation(line: 914, column: 3, scope: !12478)
!12478 = !DILexicalBlockFile(scope: !12479, file: !78, discriminator: 34)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !78, line: 914, column: 3)
!12480 = distinct !DILexicalBlock(scope: !12463, file: !78, line: 914, column: 3)
!12481 = !DILocation(line: 914, column: 3, scope: !12482)
!12482 = !DILexicalBlockFile(scope: !12483, file: !78, discriminator: 35)
!12483 = distinct !DILexicalBlock(scope: !12463, file: !78, line: 914, column: 3)
!12484 = !DILocation(line: 914, column: 3, scope: !12485)
!12485 = !DILexicalBlockFile(scope: !12483, file: !78, discriminator: 36)
!12486 = !DILocation(line: 914, column: 3, scope: !12487)
!12487 = !DILexicalBlockFile(scope: !12488, file: !78, discriminator: 37)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !78, line: 914, column: 3)
!12489 = distinct !DILexicalBlock(scope: !12463, file: !78, line: 914, column: 3)
!12490 = !DILocation(line: 914, column: 3, scope: !12491)
!12491 = !DILexicalBlockFile(scope: !12492, file: !78, discriminator: 38)
!12492 = distinct !DILexicalBlock(scope: !12463, file: !78, line: 914, column: 3)
!12493 = !DILocation(line: 914, column: 3, scope: !12494)
!12494 = !DILexicalBlockFile(scope: !12492, file: !78, discriminator: 39)
!12495 = !DILocation(line: 914, column: 3, scope: !12496)
!12496 = !DILexicalBlockFile(scope: !12497, file: !78, discriminator: 40)
!12497 = distinct !DILexicalBlock(scope: !12498, file: !78, line: 914, column: 3)
!12498 = distinct !DILexicalBlock(scope: !12463, file: !78, line: 914, column: 3)
!12499 = !DILocation(line: 916, column: 19, scope: !12463)
!12500 = !DILocation(line: 916, column: 6, scope: !12463)
!12501 = !DILocation(line: 916, column: 17, scope: !12463)
!12502 = !DILocation(line: 917, column: 5, scope: !12463)
!12503 = !DILocation(line: 919, column: 3, scope: !349)
!12504 = !DILocation(line: 919, column: 10, scope: !12457)
!12505 = !DILocation(line: 919, column: 3, scope: !12457)
!12506 = !DILocation(line: 920, column: 13, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !349, file: !78, line: 919, column: 35)
!12508 = !DILocation(line: 920, column: 13, scope: !12509)
!12509 = !DILexicalBlockFile(scope: !12507, file: !78, discriminator: 4)
!12510 = !DILocation(line: 920, column: 13, scope: !12511)
!12511 = !DILexicalBlockFile(scope: !12507, file: !78, discriminator: 5)
!12512 = !DILocation(line: 920, column: 13, scope: !12513)
!12513 = !DILexicalBlockFile(scope: !12507, file: !78, discriminator: 6)
!12514 = !DILocation(line: 920, column: 5, scope: !12513)
!12515 = !DILocation(line: 921, column: 5, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !78, line: 921, column: 5)
!12517 = distinct !DILexicalBlock(scope: !12507, file: !78, line: 920, column: 34)
!12518 = !DILocation(line: 921, column: 5, scope: !12517)
!12519 = !DILocation(line: 921, column: 5, scope: !12520)
!12520 = !DILexicalBlockFile(scope: !12521, file: !78, discriminator: 29)
!12521 = distinct !DILexicalBlock(scope: !12516, file: !78, line: 921, column: 5)
!12522 = !DILocation(line: 921, column: 5, scope: !12523)
!12523 = !DILexicalBlockFile(scope: !12516, file: !78, discriminator: 30)
!12524 = !DILocation(line: 921, column: 5, scope: !12525)
!12525 = !DILexicalBlockFile(scope: !12517, file: !78, discriminator: 31)
!12526 = !DILocation(line: 921, column: 5, scope: !12527)
!12527 = !DILexicalBlockFile(scope: !12528, file: !78, discriminator: 32)
!12528 = distinct !DILexicalBlock(scope: !12517, file: !78, line: 921, column: 5)
!12529 = !DILocation(line: 921, column: 5, scope: !12530)
!12530 = !DILexicalBlockFile(scope: !12528, file: !78, discriminator: 33)
!12531 = !DILocation(line: 921, column: 5, scope: !12532)
!12532 = !DILexicalBlockFile(scope: !12533, file: !78, discriminator: 34)
!12533 = distinct !DILexicalBlock(scope: !12534, file: !78, line: 921, column: 5)
!12534 = distinct !DILexicalBlock(scope: !12517, file: !78, line: 921, column: 5)
!12535 = !DILocation(line: 921, column: 5, scope: !12536)
!12536 = !DILexicalBlockFile(scope: !12537, file: !78, discriminator: 35)
!12537 = distinct !DILexicalBlock(scope: !12517, file: !78, line: 921, column: 5)
!12538 = !DILocation(line: 921, column: 5, scope: !12539)
!12539 = !DILexicalBlockFile(scope: !12537, file: !78, discriminator: 36)
!12540 = !DILocation(line: 921, column: 5, scope: !12541)
!12541 = !DILexicalBlockFile(scope: !12542, file: !78, discriminator: 37)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !78, line: 921, column: 5)
!12543 = distinct !DILexicalBlock(scope: !12517, file: !78, line: 921, column: 5)
!12544 = !DILocation(line: 921, column: 5, scope: !12545)
!12545 = !DILexicalBlockFile(scope: !12546, file: !78, discriminator: 38)
!12546 = distinct !DILexicalBlock(scope: !12517, file: !78, line: 921, column: 5)
!12547 = !DILocation(line: 921, column: 5, scope: !12548)
!12548 = !DILexicalBlockFile(scope: !12546, file: !78, discriminator: 39)
!12549 = !DILocation(line: 921, column: 5, scope: !12550)
!12550 = !DILexicalBlockFile(scope: !12551, file: !78, discriminator: 40)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !78, line: 921, column: 5)
!12552 = distinct !DILexicalBlock(scope: !12517, file: !78, line: 921, column: 5)
!12553 = !DILocation(line: 924, column: 21, scope: !12517)
!12554 = !DILocation(line: 924, column: 8, scope: !12517)
!12555 = !DILocation(line: 924, column: 19, scope: !12517)
!12556 = !DILocation(line: 925, column: 7, scope: !12517)
!12557 = !DILocation(line: 927, column: 21, scope: !12517)
!12558 = !DILocation(line: 927, column: 8, scope: !12517)
!12559 = !DILocation(line: 927, column: 19, scope: !12517)
!12560 = !DILocation(line: 928, column: 7, scope: !12517)
!12561 = !DILocation(line: 919, column: 3, scope: !12459)
!12562 = !DILocation(line: 931, column: 3, scope: !349)
!12563 = !DILocation(line: 932, column: 1, scope: !349)
!12564 = !DILocalVariable(name: "enc", arg: 1, scope: !345, file: !78, line: 111, type: !82)
!12565 = !DILocation(line: 111, column: 37, scope: !345)
!12566 = !DILocalVariable(name: "ptr", arg: 2, scope: !345, file: !78, line: 111, type: !93)
!12567 = !DILocation(line: 111, column: 54, scope: !345)
!12568 = !DILocalVariable(name: "end", arg: 3, scope: !345, file: !78, line: 112, type: !93)
!12569 = !DILocation(line: 112, column: 33, scope: !345)
!12570 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !345, file: !78, line: 112, type: !95)
!12571 = !DILocation(line: 112, column: 51, scope: !345)
!12572 = !DILocation(line: 114, column: 7, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !345, file: !78, line: 114, column: 7)
!12574 = !DILocation(line: 114, column: 7, scope: !345)
!12575 = !DILocation(line: 115, column: 10, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !78, line: 115, column: 9)
!12577 = distinct !DILexicalBlock(scope: !12573, file: !78, line: 114, column: 32)
!12578 = !DILocation(line: 115, column: 10, scope: !12579)
!12579 = !DILexicalBlockFile(scope: !12576, file: !78, discriminator: 2)
!12580 = !DILocation(line: 115, column: 9, scope: !12579)
!12581 = !DILocation(line: 116, column: 21, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12576, file: !78, line: 115, column: 47)
!12583 = !DILocation(line: 116, column: 8, scope: !12582)
!12584 = !DILocation(line: 116, column: 19, scope: !12582)
!12585 = !DILocation(line: 117, column: 7, scope: !12582)
!12586 = !DILocation(line: 119, column: 9, scope: !12577)
!12587 = !DILocation(line: 120, column: 5, scope: !12577)
!12588 = !DILocation(line: 120, column: 12, scope: !12589)
!12589 = !DILexicalBlockFile(scope: !12577, file: !78, discriminator: 5)
!12590 = !DILocation(line: 120, column: 5, scope: !12589)
!12591 = !DILocation(line: 121, column: 15, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12577, file: !78, line: 120, column: 37)
!12593 = !DILocation(line: 121, column: 15, scope: !12594)
!12594 = !DILexicalBlockFile(scope: !12592, file: !78, discriminator: 4)
!12595 = !DILocation(line: 121, column: 15, scope: !12596)
!12596 = !DILexicalBlockFile(scope: !12592, file: !78, discriminator: 5)
!12597 = !DILocation(line: 121, column: 15, scope: !12598)
!12598 = !DILexicalBlockFile(scope: !12592, file: !78, discriminator: 6)
!12599 = !DILocation(line: 121, column: 7, scope: !12598)
!12600 = !DILocation(line: 122, column: 7, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12602, file: !78, line: 122, column: 7)
!12602 = distinct !DILexicalBlock(scope: !12592, file: !78, line: 121, column: 36)
!12603 = !DILocation(line: 122, column: 7, scope: !12602)
!12604 = !DILocation(line: 122, column: 7, scope: !12605)
!12605 = !DILexicalBlockFile(scope: !12601, file: !78, discriminator: 25)
!12606 = !DILocation(line: 122, column: 7, scope: !12607)
!12607 = !DILexicalBlockFile(scope: !12602, file: !78, discriminator: 26)
!12608 = !DILocation(line: 122, column: 7, scope: !12609)
!12609 = !DILexicalBlockFile(scope: !12610, file: !78, discriminator: 27)
!12610 = distinct !DILexicalBlock(scope: !12602, file: !78, line: 122, column: 7)
!12611 = !DILocation(line: 122, column: 7, scope: !12612)
!12612 = !DILexicalBlockFile(scope: !12610, file: !78, discriminator: 28)
!12613 = !DILocation(line: 122, column: 7, scope: !12614)
!12614 = !DILexicalBlockFile(scope: !12602, file: !78, discriminator: 29)
!12615 = !DILocation(line: 122, column: 7, scope: !12616)
!12616 = !DILexicalBlockFile(scope: !12617, file: !78, discriminator: 30)
!12617 = distinct !DILexicalBlock(scope: !12602, file: !78, line: 122, column: 7)
!12618 = !DILocation(line: 122, column: 7, scope: !12619)
!12619 = !DILexicalBlockFile(scope: !12617, file: !78, discriminator: 31)
!12620 = !DILocation(line: 122, column: 7, scope: !12621)
!12621 = !DILexicalBlockFile(scope: !12602, file: !78, discriminator: 32)
!12622 = !DILocation(line: 122, column: 7, scope: !12623)
!12623 = !DILexicalBlockFile(scope: !12602, file: !78, discriminator: 33)
!12624 = !DILocation(line: 124, column: 13, scope: !12602)
!12625 = !DILocation(line: 125, column: 9, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !78, line: 125, column: 9)
!12627 = distinct !DILexicalBlock(scope: !12602, file: !78, line: 125, column: 9)
!12628 = !DILocation(line: 125, column: 9, scope: !12627)
!12629 = !DILocation(line: 125, column: 9, scope: !12630)
!12630 = !DILexicalBlockFile(scope: !12631, file: !78, discriminator: 3)
!12631 = distinct !DILexicalBlock(scope: !12626, file: !78, line: 125, column: 9)
!12632 = !DILocation(line: 126, column: 13, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12602, file: !78, line: 126, column: 13)
!12634 = !DILocation(line: 126, column: 13, scope: !12635)
!12635 = !DILexicalBlockFile(scope: !12633, file: !78, discriminator: 2)
!12636 = !DILocation(line: 127, column: 15, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12633, file: !78, line: 126, column: 50)
!12638 = !DILocation(line: 128, column: 11, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12640, file: !78, line: 128, column: 11)
!12640 = distinct !DILexicalBlock(scope: !12637, file: !78, line: 128, column: 11)
!12641 = !DILocation(line: 128, column: 11, scope: !12640)
!12642 = !DILocation(line: 128, column: 11, scope: !12643)
!12643 = !DILexicalBlockFile(scope: !12644, file: !78, discriminator: 3)
!12644 = distinct !DILexicalBlock(scope: !12639, file: !78, line: 128, column: 11)
!12645 = !DILocation(line: 129, column: 16, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12637, file: !78, line: 129, column: 15)
!12647 = !DILocation(line: 129, column: 16, scope: !12648)
!12648 = !DILexicalBlockFile(scope: !12646, file: !78, discriminator: 2)
!12649 = !DILocation(line: 129, column: 15, scope: !12648)
!12650 = !DILocation(line: 130, column: 27, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12646, file: !78, line: 129, column: 50)
!12652 = !DILocation(line: 130, column: 14, scope: !12651)
!12653 = !DILocation(line: 130, column: 25, scope: !12651)
!12654 = !DILocation(line: 131, column: 13, scope: !12651)
!12655 = !DILocation(line: 133, column: 25, scope: !12637)
!12656 = !DILocation(line: 133, column: 29, scope: !12637)
!12657 = !DILocation(line: 133, column: 12, scope: !12637)
!12658 = !DILocation(line: 133, column: 23, scope: !12637)
!12659 = !DILocation(line: 134, column: 11, scope: !12637)
!12660 = !DILocation(line: 136, column: 9, scope: !12602)
!12661 = !DILocation(line: 138, column: 13, scope: !12602)
!12662 = !DILocation(line: 139, column: 9, scope: !12602)
!12663 = !DILocation(line: 120, column: 5, scope: !12664)
!12664 = !DILexicalBlockFile(scope: !12577, file: !78, discriminator: 6)
!12665 = !DILocation(line: 142, column: 3, scope: !12577)
!12666 = !DILocation(line: 143, column: 3, scope: !345)
!12667 = !DILocation(line: 144, column: 1, scope: !345)
!12668 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !347, file: !78, line: 194, type: !82)
!12669 = !DILocation(line: 194, column: 39, scope: !347)
!12670 = !DILocalVariable(name: "ptr", arg: 2, scope: !347, file: !78, line: 194, type: !93)
!12671 = !DILocation(line: 194, column: 66, scope: !347)
!12672 = !DILocalVariable(name: "end", arg: 3, scope: !347, file: !78, line: 195, type: !93)
!12673 = !DILocation(line: 195, column: 35, scope: !347)
!12674 = !DILocalVariable(name: "tokPtr", arg: 4, scope: !347, file: !78, line: 195, type: !233)
!12675 = !DILocation(line: 195, column: 45, scope: !347)
!12676 = !DILocalVariable(name: "upper", scope: !347, file: !78, line: 197, type: !7)
!12677 = !DILocation(line: 197, column: 7, scope: !347)
!12678 = !DILocation(line: 198, column: 4, scope: !347)
!12679 = !DILocation(line: 198, column: 11, scope: !347)
!12680 = !DILocation(line: 199, column: 7, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !347, file: !78, line: 199, column: 7)
!12682 = !DILocation(line: 199, column: 13, scope: !12681)
!12683 = !DILocation(line: 199, column: 11, scope: !12681)
!12684 = !DILocation(line: 199, column: 17, scope: !12681)
!12685 = !DILocation(line: 199, column: 7, scope: !347)
!12686 = !DILocation(line: 200, column: 5, scope: !12681)
!12687 = !DILocation(line: 201, column: 11, scope: !347)
!12688 = !DILocation(line: 201, column: 11, scope: !12689)
!12689 = !DILexicalBlockFile(scope: !347, file: !78, discriminator: 4)
!12690 = !DILocation(line: 201, column: 11, scope: !12691)
!12691 = !DILexicalBlockFile(scope: !347, file: !78, discriminator: 5)
!12692 = !DILocation(line: 201, column: 11, scope: !12693)
!12693 = !DILexicalBlockFile(scope: !347, file: !78, discriminator: 6)
!12694 = !DILocation(line: 201, column: 3, scope: !12693)
!12695 = !DILocation(line: 203, column: 5, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !347, file: !78, line: 201, column: 36)
!12697 = !DILocation(line: 205, column: 11, scope: !12696)
!12698 = !DILocation(line: 206, column: 5, scope: !12696)
!12699 = !DILocation(line: 208, column: 5, scope: !12696)
!12700 = !DILocation(line: 210, column: 7, scope: !347)
!12701 = !DILocation(line: 211, column: 11, scope: !347)
!12702 = !DILocation(line: 211, column: 11, scope: !12689)
!12703 = !DILocation(line: 211, column: 11, scope: !12691)
!12704 = !DILocation(line: 211, column: 11, scope: !12693)
!12705 = !DILocation(line: 211, column: 3, scope: !12693)
!12706 = !DILocation(line: 213, column: 5, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !347, file: !78, line: 211, column: 36)
!12708 = !DILocation(line: 215, column: 11, scope: !12707)
!12709 = !DILocation(line: 216, column: 5, scope: !12707)
!12710 = !DILocation(line: 218, column: 5, scope: !12707)
!12711 = !DILocation(line: 220, column: 7, scope: !347)
!12712 = !DILocation(line: 221, column: 11, scope: !347)
!12713 = !DILocation(line: 221, column: 11, scope: !12689)
!12714 = !DILocation(line: 221, column: 11, scope: !12691)
!12715 = !DILocation(line: 221, column: 11, scope: !12693)
!12716 = !DILocation(line: 221, column: 3, scope: !12693)
!12717 = !DILocation(line: 223, column: 5, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !347, file: !78, line: 221, column: 36)
!12719 = !DILocation(line: 225, column: 11, scope: !12718)
!12720 = !DILocation(line: 226, column: 5, scope: !12718)
!12721 = !DILocation(line: 228, column: 5, scope: !12718)
!12722 = !DILocation(line: 230, column: 7, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !347, file: !78, line: 230, column: 7)
!12724 = !DILocation(line: 230, column: 7, scope: !347)
!12725 = !DILocation(line: 231, column: 5, scope: !12723)
!12726 = !DILocation(line: 232, column: 4, scope: !347)
!12727 = !DILocation(line: 232, column: 11, scope: !347)
!12728 = !DILocation(line: 233, column: 3, scope: !347)
!12729 = !DILocation(line: 234, column: 1, scope: !347)
!12730 = !DILocalVariable(name: "enc", arg: 1, scope: !351, file: !78, line: 685, type: !82)
!12731 = !DILocation(line: 685, column: 32, scope: !351)
!12732 = !DILocalVariable(name: "ptr", arg: 2, scope: !351, file: !78, line: 685, type: !93)
!12733 = !DILocation(line: 685, column: 49, scope: !351)
!12734 = !DILocalVariable(name: "end", arg: 3, scope: !351, file: !78, line: 685, type: !93)
!12735 = !DILocation(line: 685, column: 66, scope: !351)
!12736 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !351, file: !78, line: 686, type: !95)
!12737 = !DILocation(line: 686, column: 29, scope: !351)
!12738 = !DILocation(line: 691, column: 3, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12740, file: !78, line: 691, column: 3)
!12740 = distinct !DILexicalBlock(scope: !351, file: !78, line: 691, column: 3)
!12741 = !DILocation(line: 691, column: 3, scope: !12740)
!12742 = !DILocation(line: 691, column: 3, scope: !12743)
!12743 = !DILexicalBlockFile(scope: !12744, file: !78, discriminator: 3)
!12744 = distinct !DILexicalBlock(scope: !12739, file: !78, line: 691, column: 3)
!12745 = !DILocation(line: 692, column: 11, scope: !351)
!12746 = !DILocation(line: 692, column: 11, scope: !12747)
!12747 = !DILexicalBlockFile(scope: !351, file: !78, discriminator: 4)
!12748 = !DILocation(line: 692, column: 11, scope: !12749)
!12749 = !DILexicalBlockFile(scope: !351, file: !78, discriminator: 5)
!12750 = !DILocation(line: 692, column: 11, scope: !12751)
!12751 = !DILexicalBlockFile(scope: !351, file: !78, discriminator: 6)
!12752 = !DILocation(line: 692, column: 3, scope: !12751)
!12753 = !DILocation(line: 693, column: 3, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 693, column: 3)
!12755 = distinct !DILexicalBlock(scope: !351, file: !78, line: 692, column: 32)
!12756 = !DILocation(line: 693, column: 3, scope: !12755)
!12757 = !DILocation(line: 693, column: 3, scope: !12758)
!12758 = !DILexicalBlockFile(scope: !12759, file: !78, discriminator: 29)
!12759 = distinct !DILexicalBlock(scope: !12754, file: !78, line: 693, column: 3)
!12760 = !DILocation(line: 693, column: 3, scope: !12761)
!12761 = !DILexicalBlockFile(scope: !12754, file: !78, discriminator: 30)
!12762 = !DILocation(line: 693, column: 3, scope: !12763)
!12763 = !DILexicalBlockFile(scope: !12755, file: !78, discriminator: 31)
!12764 = !DILocation(line: 693, column: 3, scope: !12765)
!12765 = !DILexicalBlockFile(scope: !12766, file: !78, discriminator: 32)
!12766 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 693, column: 3)
!12767 = !DILocation(line: 693, column: 3, scope: !12768)
!12768 = !DILexicalBlockFile(scope: !12766, file: !78, discriminator: 33)
!12769 = !DILocation(line: 693, column: 3, scope: !12770)
!12770 = !DILexicalBlockFile(scope: !12771, file: !78, discriminator: 34)
!12771 = distinct !DILexicalBlock(scope: !12772, file: !78, line: 693, column: 3)
!12772 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 693, column: 3)
!12773 = !DILocation(line: 693, column: 3, scope: !12774)
!12774 = !DILexicalBlockFile(scope: !12775, file: !78, discriminator: 35)
!12775 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 693, column: 3)
!12776 = !DILocation(line: 693, column: 3, scope: !12777)
!12777 = !DILexicalBlockFile(scope: !12775, file: !78, discriminator: 36)
!12778 = !DILocation(line: 693, column: 3, scope: !12779)
!12779 = !DILexicalBlockFile(scope: !12780, file: !78, discriminator: 37)
!12780 = distinct !DILexicalBlock(scope: !12781, file: !78, line: 693, column: 3)
!12781 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 693, column: 3)
!12782 = !DILocation(line: 693, column: 3, scope: !12783)
!12783 = !DILexicalBlockFile(scope: !12784, file: !78, discriminator: 38)
!12784 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 693, column: 3)
!12785 = !DILocation(line: 693, column: 3, scope: !12786)
!12786 = !DILexicalBlockFile(scope: !12784, file: !78, discriminator: 39)
!12787 = !DILocation(line: 693, column: 3, scope: !12788)
!12788 = !DILexicalBlockFile(scope: !12789, file: !78, discriminator: 40)
!12789 = distinct !DILexicalBlock(scope: !12790, file: !78, line: 693, column: 3)
!12790 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 693, column: 3)
!12791 = !DILocation(line: 695, column: 9, scope: !12755)
!12792 = !DILocation(line: 696, column: 5, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12794, file: !78, line: 696, column: 5)
!12794 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 696, column: 5)
!12795 = !DILocation(line: 696, column: 5, scope: !12794)
!12796 = !DILocation(line: 696, column: 5, scope: !12797)
!12797 = !DILexicalBlockFile(scope: !12798, file: !78, discriminator: 3)
!12798 = distinct !DILexicalBlock(scope: !12793, file: !78, line: 696, column: 5)
!12799 = !DILocation(line: 697, column: 13, scope: !12755)
!12800 = !DILocation(line: 697, column: 13, scope: !12801)
!12801 = !DILexicalBlockFile(scope: !12755, file: !78, discriminator: 4)
!12802 = !DILocation(line: 697, column: 13, scope: !12803)
!12803 = !DILexicalBlockFile(scope: !12755, file: !78, discriminator: 5)
!12804 = !DILocation(line: 697, column: 13, scope: !12805)
!12805 = !DILexicalBlockFile(scope: !12755, file: !78, discriminator: 6)
!12806 = !DILocation(line: 697, column: 5, scope: !12805)
!12807 = !DILocation(line: 699, column: 34, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12755, file: !78, line: 697, column: 34)
!12809 = !DILocation(line: 699, column: 39, scope: !12808)
!12810 = !DILocation(line: 699, column: 43, scope: !12808)
!12811 = !DILocation(line: 699, column: 58, scope: !12808)
!12812 = !DILocation(line: 699, column: 63, scope: !12808)
!12813 = !DILocation(line: 699, column: 14, scope: !12808)
!12814 = !DILocation(line: 699, column: 7, scope: !12808)
!12815 = !DILocation(line: 701, column: 39, scope: !12808)
!12816 = !DILocation(line: 701, column: 44, scope: !12808)
!12817 = !DILocation(line: 701, column: 48, scope: !12808)
!12818 = !DILocation(line: 702, column: 39, scope: !12808)
!12819 = !DILocation(line: 702, column: 44, scope: !12808)
!12820 = !DILocation(line: 701, column: 14, scope: !12808)
!12821 = !DILocation(line: 701, column: 7, scope: !12808)
!12822 = !DILocation(line: 704, column: 19, scope: !12755)
!12823 = !DILocation(line: 704, column: 6, scope: !12755)
!12824 = !DILocation(line: 704, column: 17, scope: !12755)
!12825 = !DILocation(line: 705, column: 5, scope: !12755)
!12826 = !DILocation(line: 707, column: 27, scope: !12755)
!12827 = !DILocation(line: 707, column: 32, scope: !12755)
!12828 = !DILocation(line: 707, column: 36, scope: !12755)
!12829 = !DILocation(line: 707, column: 51, scope: !12755)
!12830 = !DILocation(line: 707, column: 56, scope: !12755)
!12831 = !DILocation(line: 707, column: 12, scope: !12755)
!12832 = !DILocation(line: 707, column: 5, scope: !12755)
!12833 = !DILocation(line: 709, column: 31, scope: !12755)
!12834 = !DILocation(line: 709, column: 36, scope: !12755)
!12835 = !DILocation(line: 709, column: 40, scope: !12755)
!12836 = !DILocation(line: 709, column: 55, scope: !12755)
!12837 = !DILocation(line: 709, column: 60, scope: !12755)
!12838 = !DILocation(line: 709, column: 12, scope: !12755)
!12839 = !DILocation(line: 709, column: 5, scope: !12755)
!12840 = !DILocation(line: 711, column: 19, scope: !12755)
!12841 = !DILocation(line: 711, column: 6, scope: !12755)
!12842 = !DILocation(line: 711, column: 17, scope: !12755)
!12843 = !DILocation(line: 712, column: 5, scope: !12755)
!12844 = !DILocation(line: 718, column: 3, scope: !351)
!12845 = !DILocation(line: 718, column: 10, scope: !12749)
!12846 = !DILocation(line: 718, column: 3, scope: !12749)
!12847 = !DILocation(line: 719, column: 13, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !351, file: !78, line: 718, column: 35)
!12849 = !DILocation(line: 719, column: 13, scope: !12850)
!12850 = !DILexicalBlockFile(scope: !12848, file: !78, discriminator: 4)
!12851 = !DILocation(line: 719, column: 13, scope: !12852)
!12852 = !DILexicalBlockFile(scope: !12848, file: !78, discriminator: 5)
!12853 = !DILocation(line: 719, column: 13, scope: !12854)
!12854 = !DILexicalBlockFile(scope: !12848, file: !78, discriminator: 6)
!12855 = !DILocation(line: 719, column: 5, scope: !12854)
!12856 = !DILocation(line: 720, column: 5, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 720, column: 5)
!12858 = distinct !DILexicalBlock(scope: !12848, file: !78, line: 719, column: 34)
!12859 = !DILocation(line: 720, column: 5, scope: !12858)
!12860 = !DILocation(line: 720, column: 5, scope: !12861)
!12861 = !DILexicalBlockFile(scope: !12862, file: !78, discriminator: 29)
!12862 = distinct !DILexicalBlock(scope: !12857, file: !78, line: 720, column: 5)
!12863 = !DILocation(line: 720, column: 5, scope: !12864)
!12864 = !DILexicalBlockFile(scope: !12857, file: !78, discriminator: 30)
!12865 = !DILocation(line: 720, column: 5, scope: !12866)
!12866 = !DILexicalBlockFile(scope: !12858, file: !78, discriminator: 31)
!12867 = !DILocation(line: 720, column: 5, scope: !12868)
!12868 = !DILexicalBlockFile(scope: !12869, file: !78, discriminator: 32)
!12869 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 720, column: 5)
!12870 = !DILocation(line: 720, column: 5, scope: !12871)
!12871 = !DILexicalBlockFile(scope: !12869, file: !78, discriminator: 33)
!12872 = !DILocation(line: 720, column: 5, scope: !12873)
!12873 = !DILexicalBlockFile(scope: !12874, file: !78, discriminator: 34)
!12874 = distinct !DILexicalBlock(scope: !12875, file: !78, line: 720, column: 5)
!12875 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 720, column: 5)
!12876 = !DILocation(line: 720, column: 5, scope: !12877)
!12877 = !DILexicalBlockFile(scope: !12878, file: !78, discriminator: 35)
!12878 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 720, column: 5)
!12879 = !DILocation(line: 720, column: 5, scope: !12880)
!12880 = !DILexicalBlockFile(scope: !12878, file: !78, discriminator: 36)
!12881 = !DILocation(line: 720, column: 5, scope: !12882)
!12882 = !DILexicalBlockFile(scope: !12883, file: !78, discriminator: 37)
!12883 = distinct !DILexicalBlock(scope: !12884, file: !78, line: 720, column: 5)
!12884 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 720, column: 5)
!12885 = !DILocation(line: 720, column: 5, scope: !12886)
!12886 = !DILexicalBlockFile(scope: !12887, file: !78, discriminator: 38)
!12887 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 720, column: 5)
!12888 = !DILocation(line: 720, column: 5, scope: !12889)
!12889 = !DILexicalBlockFile(scope: !12887, file: !78, discriminator: 39)
!12890 = !DILocation(line: 720, column: 5, scope: !12891)
!12891 = !DILexicalBlockFile(scope: !12892, file: !78, discriminator: 40)
!12892 = distinct !DILexicalBlock(scope: !12893, file: !78, line: 720, column: 5)
!12893 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 720, column: 5)
!12894 = !DILocation(line: 740, column: 13, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 739, column: 7)
!12896 = !DILocation(line: 741, column: 9, scope: !12895)
!12897 = !DILocation(line: 741, column: 16, scope: !12898)
!12898 = !DILexicalBlockFile(scope: !12895, file: !78, discriminator: 3)
!12899 = !DILocation(line: 741, column: 9, scope: !12898)
!12900 = !DILocation(line: 742, column: 19, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12895, file: !78, line: 741, column: 41)
!12902 = !DILocation(line: 742, column: 19, scope: !12903)
!12903 = !DILexicalBlockFile(scope: !12901, file: !78, discriminator: 4)
!12904 = !DILocation(line: 742, column: 19, scope: !12905)
!12905 = !DILexicalBlockFile(scope: !12901, file: !78, discriminator: 5)
!12906 = !DILocation(line: 742, column: 19, scope: !12907)
!12907 = !DILexicalBlockFile(scope: !12901, file: !78, discriminator: 6)
!12908 = !DILocation(line: 742, column: 11, scope: !12907)
!12909 = !DILocation(line: 743, column: 11, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12911, file: !78, line: 743, column: 11)
!12911 = distinct !DILexicalBlock(scope: !12901, file: !78, line: 742, column: 40)
!12912 = !DILocation(line: 743, column: 11, scope: !12911)
!12913 = !DILocation(line: 743, column: 11, scope: !12914)
!12914 = !DILexicalBlockFile(scope: !12915, file: !78, discriminator: 29)
!12915 = distinct !DILexicalBlock(scope: !12910, file: !78, line: 743, column: 11)
!12916 = !DILocation(line: 743, column: 11, scope: !12917)
!12917 = !DILexicalBlockFile(scope: !12910, file: !78, discriminator: 30)
!12918 = !DILocation(line: 743, column: 11, scope: !12919)
!12919 = !DILexicalBlockFile(scope: !12911, file: !78, discriminator: 31)
!12920 = !DILocation(line: 743, column: 11, scope: !12921)
!12921 = !DILexicalBlockFile(scope: !12922, file: !78, discriminator: 32)
!12922 = distinct !DILexicalBlock(scope: !12911, file: !78, line: 743, column: 11)
!12923 = !DILocation(line: 743, column: 11, scope: !12924)
!12924 = !DILexicalBlockFile(scope: !12922, file: !78, discriminator: 33)
!12925 = !DILocation(line: 743, column: 11, scope: !12926)
!12926 = !DILexicalBlockFile(scope: !12927, file: !78, discriminator: 34)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !78, line: 743, column: 11)
!12928 = distinct !DILexicalBlock(scope: !12911, file: !78, line: 743, column: 11)
!12929 = !DILocation(line: 743, column: 11, scope: !12930)
!12930 = !DILexicalBlockFile(scope: !12931, file: !78, discriminator: 35)
!12931 = distinct !DILexicalBlock(scope: !12911, file: !78, line: 743, column: 11)
!12932 = !DILocation(line: 743, column: 11, scope: !12933)
!12933 = !DILexicalBlockFile(scope: !12931, file: !78, discriminator: 36)
!12934 = !DILocation(line: 743, column: 11, scope: !12935)
!12935 = !DILexicalBlockFile(scope: !12936, file: !78, discriminator: 37)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !78, line: 743, column: 11)
!12937 = distinct !DILexicalBlock(scope: !12911, file: !78, line: 743, column: 11)
!12938 = !DILocation(line: 743, column: 11, scope: !12939)
!12939 = !DILexicalBlockFile(scope: !12940, file: !78, discriminator: 38)
!12940 = distinct !DILexicalBlock(scope: !12911, file: !78, line: 743, column: 11)
!12941 = !DILocation(line: 743, column: 11, scope: !12942)
!12942 = !DILexicalBlockFile(scope: !12940, file: !78, discriminator: 39)
!12943 = !DILocation(line: 743, column: 11, scope: !12944)
!12944 = !DILexicalBlockFile(scope: !12945, file: !78, discriminator: 40)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !78, line: 743, column: 11)
!12946 = distinct !DILexicalBlock(scope: !12911, file: !78, line: 743, column: 11)
!12947 = !DILocation(line: 745, column: 13, scope: !12911)
!12948 = !DILocation(line: 747, column: 13, scope: !12911)
!12949 = !DILocation(line: 749, column: 17, scope: !12911)
!12950 = !DILocation(line: 750, column: 13, scope: !12911)
!12951 = !DILocation(line: 752, column: 27, scope: !12911)
!12952 = !DILocation(line: 752, column: 14, scope: !12911)
!12953 = !DILocation(line: 752, column: 25, scope: !12911)
!12954 = !DILocation(line: 753, column: 13, scope: !12911)
!12955 = !DILocation(line: 755, column: 35, scope: !12901)
!12956 = !DILocation(line: 755, column: 40, scope: !12901)
!12957 = !DILocation(line: 755, column: 45, scope: !12901)
!12958 = !DILocation(line: 755, column: 50, scope: !12901)
!12959 = !DILocation(line: 755, column: 18, scope: !12901)
!12960 = !DILocation(line: 755, column: 11, scope: !12901)
!12961 = !DILocation(line: 757, column: 9, scope: !12895)
!12962 = !DILocation(line: 758, column: 7, scope: !12895)
!12963 = !DILocation(line: 761, column: 21, scope: !12858)
!12964 = !DILocation(line: 761, column: 25, scope: !12858)
!12965 = !DILocation(line: 761, column: 8, scope: !12858)
!12966 = !DILocation(line: 761, column: 19, scope: !12858)
!12967 = !DILocation(line: 762, column: 7, scope: !12858)
!12968 = !DILocation(line: 762, column: 7, scope: !12969)
!12969 = !DILexicalBlockFile(scope: !12858, file: !78, discriminator: 3)
!12970 = !DILocation(line: 765, column: 11, scope: !12858)
!12971 = !DILocation(line: 766, column: 7, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12973, file: !78, line: 766, column: 7)
!12973 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 766, column: 7)
!12974 = !DILocation(line: 766, column: 7, scope: !12973)
!12975 = !DILocation(line: 766, column: 7, scope: !12976)
!12976 = !DILexicalBlockFile(scope: !12977, file: !78, discriminator: 3)
!12977 = distinct !DILexicalBlock(scope: !12972, file: !78, line: 766, column: 7)
!12978 = !DILocation(line: 767, column: 12, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12858, file: !78, line: 767, column: 11)
!12980 = !DILocation(line: 767, column: 12, scope: !12981)
!12981 = !DILexicalBlockFile(scope: !12979, file: !78, discriminator: 2)
!12982 = !DILocation(line: 767, column: 11, scope: !12981)
!12983 = !DILocation(line: 768, column: 23, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12979, file: !78, line: 767, column: 46)
!12985 = !DILocation(line: 768, column: 10, scope: !12984)
!12986 = !DILocation(line: 768, column: 21, scope: !12984)
!12987 = !DILocation(line: 769, column: 9, scope: !12984)
!12988 = !DILocation(line: 771, column: 21, scope: !12858)
!12989 = !DILocation(line: 771, column: 25, scope: !12858)
!12990 = !DILocation(line: 771, column: 8, scope: !12858)
!12991 = !DILocation(line: 771, column: 19, scope: !12858)
!12992 = !DILocation(line: 772, column: 7, scope: !12858)
!12993 = !DILocation(line: 774, column: 21, scope: !12858)
!12994 = !DILocation(line: 774, column: 8, scope: !12858)
!12995 = !DILocation(line: 774, column: 19, scope: !12858)
!12996 = !DILocation(line: 775, column: 7, scope: !12858)
!12997 = !DILocation(line: 718, column: 3, scope: !12751)
!12998 = !DILocation(line: 778, column: 3, scope: !351)
!12999 = !DILocation(line: 779, column: 1, scope: !351)
!13000 = !DILocalVariable(name: "enc", arg: 1, scope: !355, file: !78, line: 504, type: !82)
!13001 = !DILocation(line: 504, column: 33, scope: !355)
!13002 = !DILocalVariable(name: "ptr", arg: 2, scope: !355, file: !78, line: 504, type: !93)
!13003 = !DILocation(line: 504, column: 50, scope: !355)
!13004 = !DILocalVariable(name: "end", arg: 3, scope: !355, file: !78, line: 504, type: !93)
!13005 = !DILocation(line: 504, column: 67, scope: !355)
!13006 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !355, file: !78, line: 505, type: !95)
!13007 = !DILocation(line: 505, column: 30, scope: !355)
!13008 = !DILocation(line: 507, column: 3, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !78, line: 507, column: 3)
!13010 = distinct !DILexicalBlock(scope: !355, file: !78, line: 507, column: 3)
!13011 = !DILocation(line: 507, column: 3, scope: !13010)
!13012 = !DILocation(line: 507, column: 3, scope: !13013)
!13013 = !DILexicalBlockFile(scope: !13014, file: !78, discriminator: 3)
!13014 = distinct !DILexicalBlock(scope: !13009, file: !78, line: 507, column: 3)
!13015 = !DILocation(line: 508, column: 11, scope: !355)
!13016 = !DILocation(line: 508, column: 11, scope: !13017)
!13017 = !DILexicalBlockFile(scope: !355, file: !78, discriminator: 4)
!13018 = !DILocation(line: 508, column: 11, scope: !13019)
!13019 = !DILexicalBlockFile(scope: !355, file: !78, discriminator: 5)
!13020 = !DILocation(line: 508, column: 11, scope: !13021)
!13021 = !DILexicalBlockFile(scope: !355, file: !78, discriminator: 6)
!13022 = !DILocation(line: 508, column: 3, scope: !13021)
!13023 = !DILocation(line: 509, column: 3, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13025, file: !78, line: 509, column: 3)
!13025 = distinct !DILexicalBlock(scope: !355, file: !78, line: 508, column: 32)
!13026 = !DILocation(line: 509, column: 3, scope: !13025)
!13027 = !DILocation(line: 509, column: 3, scope: !13028)
!13028 = !DILexicalBlockFile(scope: !13029, file: !78, discriminator: 29)
!13029 = distinct !DILexicalBlock(scope: !13024, file: !78, line: 509, column: 3)
!13030 = !DILocation(line: 509, column: 3, scope: !13031)
!13031 = !DILexicalBlockFile(scope: !13024, file: !78, discriminator: 30)
!13032 = !DILocation(line: 509, column: 3, scope: !13033)
!13033 = !DILexicalBlockFile(scope: !13025, file: !78, discriminator: 31)
!13034 = !DILocation(line: 509, column: 3, scope: !13035)
!13035 = !DILexicalBlockFile(scope: !13036, file: !78, discriminator: 32)
!13036 = distinct !DILexicalBlock(scope: !13025, file: !78, line: 509, column: 3)
!13037 = !DILocation(line: 509, column: 3, scope: !13038)
!13038 = !DILexicalBlockFile(scope: !13036, file: !78, discriminator: 33)
!13039 = !DILocation(line: 509, column: 3, scope: !13040)
!13040 = !DILexicalBlockFile(scope: !13041, file: !78, discriminator: 34)
!13041 = distinct !DILexicalBlock(scope: !13042, file: !78, line: 509, column: 3)
!13042 = distinct !DILexicalBlock(scope: !13025, file: !78, line: 509, column: 3)
!13043 = !DILocation(line: 509, column: 3, scope: !13044)
!13044 = !DILexicalBlockFile(scope: !13045, file: !78, discriminator: 35)
!13045 = distinct !DILexicalBlock(scope: !13025, file: !78, line: 509, column: 3)
!13046 = !DILocation(line: 509, column: 3, scope: !13047)
!13047 = !DILexicalBlockFile(scope: !13045, file: !78, discriminator: 36)
!13048 = !DILocation(line: 509, column: 3, scope: !13049)
!13049 = !DILexicalBlockFile(scope: !13050, file: !78, discriminator: 37)
!13050 = distinct !DILexicalBlock(scope: !13051, file: !78, line: 509, column: 3)
!13051 = distinct !DILexicalBlock(scope: !13025, file: !78, line: 509, column: 3)
!13052 = !DILocation(line: 509, column: 3, scope: !13053)
!13053 = !DILexicalBlockFile(scope: !13054, file: !78, discriminator: 38)
!13054 = distinct !DILexicalBlock(scope: !13025, file: !78, line: 509, column: 3)
!13055 = !DILocation(line: 509, column: 3, scope: !13056)
!13056 = !DILexicalBlockFile(scope: !13054, file: !78, discriminator: 39)
!13057 = !DILocation(line: 509, column: 3, scope: !13058)
!13058 = !DILexicalBlockFile(scope: !13059, file: !78, discriminator: 40)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !78, line: 509, column: 3)
!13060 = distinct !DILexicalBlock(scope: !13025, file: !78, line: 509, column: 3)
!13061 = !DILocation(line: 511, column: 32, scope: !13025)
!13062 = !DILocation(line: 511, column: 37, scope: !13025)
!13063 = !DILocation(line: 511, column: 41, scope: !13025)
!13064 = !DILocation(line: 511, column: 56, scope: !13025)
!13065 = !DILocation(line: 511, column: 61, scope: !13025)
!13066 = !DILocation(line: 511, column: 12, scope: !13025)
!13067 = !DILocation(line: 511, column: 5, scope: !13025)
!13068 = !DILocation(line: 513, column: 19, scope: !13025)
!13069 = !DILocation(line: 513, column: 6, scope: !13025)
!13070 = !DILocation(line: 513, column: 17, scope: !13025)
!13071 = !DILocation(line: 514, column: 5, scope: !13025)
!13072 = !DILocation(line: 516, column: 3, scope: !355)
!13073 = !DILocation(line: 516, column: 10, scope: !13019)
!13074 = !DILocation(line: 516, column: 3, scope: !13019)
!13075 = !DILocation(line: 517, column: 13, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !355, file: !78, line: 516, column: 35)
!13077 = !DILocation(line: 517, column: 13, scope: !13078)
!13078 = !DILexicalBlockFile(scope: !13076, file: !78, discriminator: 4)
!13079 = !DILocation(line: 517, column: 13, scope: !13080)
!13080 = !DILexicalBlockFile(scope: !13076, file: !78, discriminator: 5)
!13081 = !DILocation(line: 517, column: 13, scope: !13082)
!13082 = !DILexicalBlockFile(scope: !13076, file: !78, discriminator: 6)
!13083 = !DILocation(line: 517, column: 5, scope: !13082)
!13084 = !DILocation(line: 518, column: 5, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13086, file: !78, line: 518, column: 5)
!13086 = distinct !DILexicalBlock(scope: !13076, file: !78, line: 517, column: 34)
!13087 = !DILocation(line: 518, column: 5, scope: !13086)
!13088 = !DILocation(line: 518, column: 5, scope: !13089)
!13089 = !DILexicalBlockFile(scope: !13090, file: !78, discriminator: 29)
!13090 = distinct !DILexicalBlock(scope: !13085, file: !78, line: 518, column: 5)
!13091 = !DILocation(line: 518, column: 5, scope: !13092)
!13092 = !DILexicalBlockFile(scope: !13085, file: !78, discriminator: 30)
!13093 = !DILocation(line: 518, column: 5, scope: !13094)
!13094 = !DILexicalBlockFile(scope: !13086, file: !78, discriminator: 31)
!13095 = !DILocation(line: 518, column: 5, scope: !13096)
!13096 = !DILexicalBlockFile(scope: !13097, file: !78, discriminator: 32)
!13097 = distinct !DILexicalBlock(scope: !13086, file: !78, line: 518, column: 5)
!13098 = !DILocation(line: 518, column: 5, scope: !13099)
!13099 = !DILexicalBlockFile(scope: !13097, file: !78, discriminator: 33)
!13100 = !DILocation(line: 518, column: 5, scope: !13101)
!13101 = !DILexicalBlockFile(scope: !13102, file: !78, discriminator: 34)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !78, line: 518, column: 5)
!13103 = distinct !DILexicalBlock(scope: !13086, file: !78, line: 518, column: 5)
!13104 = !DILocation(line: 518, column: 5, scope: !13105)
!13105 = !DILexicalBlockFile(scope: !13106, file: !78, discriminator: 35)
!13106 = distinct !DILexicalBlock(scope: !13086, file: !78, line: 518, column: 5)
!13107 = !DILocation(line: 518, column: 5, scope: !13108)
!13108 = !DILexicalBlockFile(scope: !13106, file: !78, discriminator: 36)
!13109 = !DILocation(line: 518, column: 5, scope: !13110)
!13110 = !DILexicalBlockFile(scope: !13111, file: !78, discriminator: 37)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !78, line: 518, column: 5)
!13112 = distinct !DILexicalBlock(scope: !13086, file: !78, line: 518, column: 5)
!13113 = !DILocation(line: 518, column: 5, scope: !13114)
!13114 = !DILexicalBlockFile(scope: !13115, file: !78, discriminator: 38)
!13115 = distinct !DILexicalBlock(scope: !13086, file: !78, line: 518, column: 5)
!13116 = !DILocation(line: 518, column: 5, scope: !13117)
!13117 = !DILexicalBlockFile(scope: !13115, file: !78, discriminator: 39)
!13118 = !DILocation(line: 518, column: 5, scope: !13119)
!13119 = !DILexicalBlockFile(scope: !13120, file: !78, discriminator: 40)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !78, line: 518, column: 5)
!13121 = distinct !DILexicalBlock(scope: !13086, file: !78, line: 518, column: 5)
!13122 = !DILocation(line: 520, column: 21, scope: !13086)
!13123 = !DILocation(line: 520, column: 25, scope: !13086)
!13124 = !DILocation(line: 520, column: 8, scope: !13086)
!13125 = !DILocation(line: 520, column: 19, scope: !13086)
!13126 = !DILocation(line: 521, column: 7, scope: !13086)
!13127 = !DILocation(line: 523, column: 21, scope: !13086)
!13128 = !DILocation(line: 523, column: 8, scope: !13086)
!13129 = !DILocation(line: 523, column: 19, scope: !13086)
!13130 = !DILocation(line: 524, column: 7, scope: !13086)
!13131 = !DILocation(line: 516, column: 3, scope: !13021)
!13132 = !DILocation(line: 527, column: 3, scope: !355)
!13133 = !DILocation(line: 528, column: 1, scope: !355)
!13134 = !DILocalVariable(name: "UNUSED_enc", arg: 1, scope: !352, file: !78, line: 298, type: !82)
!13135 = !DILocation(line: 298, column: 42, scope: !352)
!13136 = !DILocalVariable(name: "ptr", arg: 2, scope: !352, file: !78, line: 298, type: !93)
!13137 = !DILocation(line: 298, column: 69, scope: !352)
!13138 = !DILocalVariable(name: "end", arg: 3, scope: !352, file: !78, line: 299, type: !93)
!13139 = !DILocation(line: 299, column: 38, scope: !352)
!13140 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !352, file: !78, line: 299, type: !95)
!13141 = !DILocation(line: 299, column: 56, scope: !352)
!13142 = !DILocalVariable(name: "i", scope: !352, file: !78, line: 303, type: !7)
!13143 = !DILocation(line: 303, column: 7, scope: !352)
!13144 = !DILocation(line: 305, column: 3, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13146, file: !78, line: 305, column: 3)
!13146 = distinct !DILexicalBlock(scope: !352, file: !78, line: 305, column: 3)
!13147 = !DILocation(line: 305, column: 3, scope: !13146)
!13148 = !DILocation(line: 305, column: 3, scope: !13149)
!13149 = !DILexicalBlockFile(scope: !13150, file: !78, discriminator: 3)
!13150 = distinct !DILexicalBlock(scope: !13145, file: !78, line: 305, column: 3)
!13151 = !DILocation(line: 306, column: 10, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !352, file: !78, line: 306, column: 3)
!13153 = !DILocation(line: 306, column: 8, scope: !13152)
!13154 = !DILocation(line: 306, column: 15, scope: !13155)
!13155 = !DILexicalBlockFile(scope: !13156, file: !78, discriminator: 5)
!13156 = distinct !DILexicalBlock(scope: !13152, file: !78, line: 306, column: 3)
!13157 = !DILocation(line: 306, column: 17, scope: !13155)
!13158 = !DILocation(line: 306, column: 3, scope: !13155)
!13159 = !DILocation(line: 307, column: 10, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13161, file: !78, line: 307, column: 9)
!13161 = distinct !DILexicalBlock(scope: !13156, file: !78, line: 306, column: 47)
!13162 = !DILocation(line: 307, column: 10, scope: !13163)
!13163 = !DILexicalBlockFile(scope: !13160, file: !78, discriminator: 2)
!13164 = !DILocation(line: 307, column: 9, scope: !13163)
!13165 = !DILocation(line: 308, column: 21, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13160, file: !78, line: 307, column: 49)
!13167 = !DILocation(line: 308, column: 8, scope: !13166)
!13168 = !DILocation(line: 308, column: 19, scope: !13166)
!13169 = !DILocation(line: 309, column: 7, scope: !13166)
!13170 = !DILocation(line: 311, column: 3, scope: !13161)
!13171 = !DILocation(line: 306, column: 23, scope: !13172)
!13172 = !DILexicalBlockFile(scope: !13156, file: !78, discriminator: 6)
!13173 = !DILocation(line: 306, column: 31, scope: !13172)
!13174 = !DILocation(line: 306, column: 3, scope: !13172)
!13175 = !DILocation(line: 312, column: 17, scope: !352)
!13176 = !DILocation(line: 312, column: 4, scope: !352)
!13177 = !DILocation(line: 312, column: 15, scope: !352)
!13178 = !DILocation(line: 313, column: 3, scope: !352)
!13179 = !DILocation(line: 314, column: 1, scope: !352)
!13180 = !DILocalVariable(name: "enc", arg: 1, scope: !353, file: !78, line: 392, type: !82)
!13181 = !DILocation(line: 392, column: 36, scope: !353)
!13182 = !DILocalVariable(name: "ptr", arg: 2, scope: !353, file: !78, line: 392, type: !93)
!13183 = !DILocation(line: 392, column: 53, scope: !353)
!13184 = !DILocalVariable(name: "end", arg: 3, scope: !353, file: !78, line: 393, type: !93)
!13185 = !DILocation(line: 393, column: 32, scope: !353)
!13186 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !353, file: !78, line: 393, type: !95)
!13187 = !DILocation(line: 393, column: 50, scope: !353)
!13188 = !DILocation(line: 395, column: 3, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13190, file: !78, line: 395, column: 3)
!13190 = distinct !DILexicalBlock(scope: !353, file: !78, line: 395, column: 3)
!13191 = !DILocation(line: 395, column: 3, scope: !13190)
!13192 = !DILocation(line: 395, column: 3, scope: !13193)
!13193 = !DILexicalBlockFile(scope: !13194, file: !78, discriminator: 3)
!13194 = distinct !DILexicalBlock(scope: !13189, file: !78, line: 395, column: 3)
!13195 = !DILocation(line: 396, column: 11, scope: !353)
!13196 = !DILocation(line: 396, column: 11, scope: !13197)
!13197 = !DILexicalBlockFile(scope: !353, file: !78, discriminator: 4)
!13198 = !DILocation(line: 396, column: 11, scope: !13199)
!13199 = !DILexicalBlockFile(scope: !353, file: !78, discriminator: 5)
!13200 = !DILocation(line: 396, column: 11, scope: !13201)
!13201 = !DILexicalBlockFile(scope: !353, file: !78, discriminator: 6)
!13202 = !DILocation(line: 396, column: 3, scope: !13201)
!13203 = !DILocation(line: 397, column: 3, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13205, file: !78, line: 397, column: 3)
!13205 = distinct !DILexicalBlock(scope: !353, file: !78, line: 396, column: 32)
!13206 = !DILocation(line: 397, column: 3, scope: !13205)
!13207 = !DILocation(line: 397, column: 3, scope: !13208)
!13208 = !DILexicalBlockFile(scope: !13209, file: !78, discriminator: 29)
!13209 = distinct !DILexicalBlock(scope: !13204, file: !78, line: 397, column: 3)
!13210 = !DILocation(line: 397, column: 3, scope: !13211)
!13211 = !DILexicalBlockFile(scope: !13204, file: !78, discriminator: 30)
!13212 = !DILocation(line: 397, column: 3, scope: !13213)
!13213 = !DILexicalBlockFile(scope: !13205, file: !78, discriminator: 31)
!13214 = !DILocation(line: 397, column: 3, scope: !13215)
!13215 = !DILexicalBlockFile(scope: !13216, file: !78, discriminator: 32)
!13216 = distinct !DILexicalBlock(scope: !13205, file: !78, line: 397, column: 3)
!13217 = !DILocation(line: 397, column: 3, scope: !13218)
!13218 = !DILexicalBlockFile(scope: !13216, file: !78, discriminator: 33)
!13219 = !DILocation(line: 397, column: 3, scope: !13220)
!13220 = !DILexicalBlockFile(scope: !13221, file: !78, discriminator: 34)
!13221 = distinct !DILexicalBlock(scope: !13222, file: !78, line: 397, column: 3)
!13222 = distinct !DILexicalBlock(scope: !13205, file: !78, line: 397, column: 3)
!13223 = !DILocation(line: 397, column: 3, scope: !13224)
!13224 = !DILexicalBlockFile(scope: !13225, file: !78, discriminator: 35)
!13225 = distinct !DILexicalBlock(scope: !13205, file: !78, line: 397, column: 3)
!13226 = !DILocation(line: 397, column: 3, scope: !13227)
!13227 = !DILexicalBlockFile(scope: !13225, file: !78, discriminator: 36)
!13228 = !DILocation(line: 397, column: 3, scope: !13229)
!13229 = !DILexicalBlockFile(scope: !13230, file: !78, discriminator: 37)
!13230 = distinct !DILexicalBlock(scope: !13231, file: !78, line: 397, column: 3)
!13231 = distinct !DILexicalBlock(scope: !13205, file: !78, line: 397, column: 3)
!13232 = !DILocation(line: 397, column: 3, scope: !13233)
!13233 = !DILexicalBlockFile(scope: !13234, file: !78, discriminator: 38)
!13234 = distinct !DILexicalBlock(scope: !13205, file: !78, line: 397, column: 3)
!13235 = !DILocation(line: 397, column: 3, scope: !13236)
!13236 = !DILexicalBlockFile(scope: !13234, file: !78, discriminator: 39)
!13237 = !DILocation(line: 397, column: 3, scope: !13238)
!13238 = !DILexicalBlockFile(scope: !13239, file: !78, discriminator: 40)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !78, line: 397, column: 3)
!13240 = distinct !DILexicalBlock(scope: !13205, file: !78, line: 397, column: 3)
!13241 = !DILocation(line: 399, column: 19, scope: !13205)
!13242 = !DILocation(line: 399, column: 6, scope: !13205)
!13243 = !DILocation(line: 399, column: 17, scope: !13205)
!13244 = !DILocation(line: 400, column: 5, scope: !13205)
!13245 = !DILocation(line: 402, column: 3, scope: !353)
!13246 = !DILocation(line: 402, column: 10, scope: !13199)
!13247 = !DILocation(line: 402, column: 3, scope: !13199)
!13248 = !DILocation(line: 403, column: 13, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !353, file: !78, line: 402, column: 35)
!13250 = !DILocation(line: 403, column: 13, scope: !13251)
!13251 = !DILexicalBlockFile(scope: !13249, file: !78, discriminator: 4)
!13252 = !DILocation(line: 403, column: 13, scope: !13253)
!13253 = !DILexicalBlockFile(scope: !13249, file: !78, discriminator: 5)
!13254 = !DILocation(line: 403, column: 13, scope: !13255)
!13255 = !DILexicalBlockFile(scope: !13249, file: !78, discriminator: 6)
!13256 = !DILocation(line: 403, column: 5, scope: !13255)
!13257 = !DILocation(line: 404, column: 5, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 404, column: 5)
!13259 = distinct !DILexicalBlock(scope: !13249, file: !78, line: 403, column: 34)
!13260 = !DILocation(line: 404, column: 5, scope: !13259)
!13261 = !DILocation(line: 404, column: 5, scope: !13262)
!13262 = !DILexicalBlockFile(scope: !13263, file: !78, discriminator: 29)
!13263 = distinct !DILexicalBlock(scope: !13258, file: !78, line: 404, column: 5)
!13264 = !DILocation(line: 404, column: 5, scope: !13265)
!13265 = !DILexicalBlockFile(scope: !13258, file: !78, discriminator: 30)
!13266 = !DILocation(line: 404, column: 5, scope: !13267)
!13267 = !DILexicalBlockFile(scope: !13259, file: !78, discriminator: 31)
!13268 = !DILocation(line: 404, column: 5, scope: !13269)
!13269 = !DILexicalBlockFile(scope: !13270, file: !78, discriminator: 32)
!13270 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 404, column: 5)
!13271 = !DILocation(line: 404, column: 5, scope: !13272)
!13272 = !DILexicalBlockFile(scope: !13270, file: !78, discriminator: 33)
!13273 = !DILocation(line: 404, column: 5, scope: !13274)
!13274 = !DILexicalBlockFile(scope: !13275, file: !78, discriminator: 34)
!13275 = distinct !DILexicalBlock(scope: !13276, file: !78, line: 404, column: 5)
!13276 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 404, column: 5)
!13277 = !DILocation(line: 404, column: 5, scope: !13278)
!13278 = !DILexicalBlockFile(scope: !13279, file: !78, discriminator: 35)
!13279 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 404, column: 5)
!13280 = !DILocation(line: 404, column: 5, scope: !13281)
!13281 = !DILexicalBlockFile(scope: !13279, file: !78, discriminator: 36)
!13282 = !DILocation(line: 404, column: 5, scope: !13283)
!13283 = !DILexicalBlockFile(scope: !13284, file: !78, discriminator: 37)
!13284 = distinct !DILexicalBlock(scope: !13285, file: !78, line: 404, column: 5)
!13285 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 404, column: 5)
!13286 = !DILocation(line: 404, column: 5, scope: !13287)
!13287 = !DILexicalBlockFile(scope: !13288, file: !78, discriminator: 38)
!13288 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 404, column: 5)
!13289 = !DILocation(line: 404, column: 5, scope: !13290)
!13290 = !DILexicalBlockFile(scope: !13288, file: !78, discriminator: 39)
!13291 = !DILocation(line: 404, column: 5, scope: !13292)
!13292 = !DILexicalBlockFile(scope: !13293, file: !78, discriminator: 40)
!13293 = distinct !DILexicalBlock(scope: !13294, file: !78, line: 404, column: 5)
!13294 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 404, column: 5)
!13295 = !DILocation(line: 406, column: 16, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13259, file: !78, line: 406, column: 7)
!13297 = !DILocation(line: 406, column: 12, scope: !13296)
!13298 = !DILocation(line: 406, column: 32, scope: !13299)
!13299 = !DILexicalBlockFile(scope: !13300, file: !78, discriminator: 5)
!13300 = distinct !DILexicalBlock(scope: !13296, file: !78, line: 406, column: 7)
!13301 = !DILocation(line: 406, column: 7, scope: !13299)
!13302 = !DILocation(line: 407, column: 17, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13300, file: !78, line: 406, column: 77)
!13304 = !DILocation(line: 407, column: 17, scope: !13305)
!13305 = !DILexicalBlockFile(scope: !13303, file: !78, discriminator: 4)
!13306 = !DILocation(line: 407, column: 17, scope: !13307)
!13307 = !DILexicalBlockFile(scope: !13303, file: !78, discriminator: 5)
!13308 = !DILocation(line: 407, column: 17, scope: !13309)
!13309 = !DILexicalBlockFile(scope: !13303, file: !78, discriminator: 6)
!13310 = !DILocation(line: 407, column: 9, scope: !13309)
!13311 = !DILocation(line: 409, column: 11, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13303, file: !78, line: 407, column: 38)
!13313 = !DILocation(line: 411, column: 25, scope: !13312)
!13314 = !DILocation(line: 411, column: 29, scope: !13312)
!13315 = !DILocation(line: 411, column: 12, scope: !13312)
!13316 = !DILocation(line: 411, column: 23, scope: !13312)
!13317 = !DILocation(line: 412, column: 11, scope: !13312)
!13318 = !DILocation(line: 414, column: 25, scope: !13312)
!13319 = !DILocation(line: 414, column: 12, scope: !13312)
!13320 = !DILocation(line: 414, column: 23, scope: !13312)
!13321 = !DILocation(line: 415, column: 11, scope: !13312)
!13322 = !DILocation(line: 417, column: 7, scope: !13303)
!13323 = !DILocation(line: 406, column: 61, scope: !13324)
!13324 = !DILexicalBlockFile(scope: !13300, file: !78, discriminator: 6)
!13325 = !DILocation(line: 406, column: 7, scope: !13324)
!13326 = !DILocation(line: 418, column: 7, scope: !13259)
!13327 = !DILocation(line: 427, column: 21, scope: !13259)
!13328 = !DILocation(line: 427, column: 25, scope: !13259)
!13329 = !DILocation(line: 427, column: 8, scope: !13259)
!13330 = !DILocation(line: 427, column: 19, scope: !13259)
!13331 = !DILocation(line: 428, column: 7, scope: !13259)
!13332 = !DILocation(line: 430, column: 21, scope: !13259)
!13333 = !DILocation(line: 430, column: 8, scope: !13259)
!13334 = !DILocation(line: 430, column: 19, scope: !13259)
!13335 = !DILocation(line: 431, column: 7, scope: !13259)
!13336 = !DILocation(line: 402, column: 3, scope: !13201)
!13337 = !DILocation(line: 434, column: 3, scope: !353)
!13338 = !DILocation(line: 435, column: 1, scope: !353)
!13339 = !DILocalVariable(name: "enc", arg: 1, scope: !354, file: !78, line: 533, type: !82)
!13340 = !DILocation(line: 533, column: 34, scope: !354)
!13341 = !DILocalVariable(name: "ptr", arg: 2, scope: !354, file: !78, line: 533, type: !93)
!13342 = !DILocation(line: 533, column: 51, scope: !354)
!13343 = !DILocalVariable(name: "end", arg: 3, scope: !354, file: !78, line: 533, type: !93)
!13344 = !DILocation(line: 533, column: 68, scope: !354)
!13345 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !354, file: !78, line: 534, type: !95)
!13346 = !DILocation(line: 534, column: 31, scope: !354)
!13347 = !DILocation(line: 539, column: 3, scope: !354)
!13348 = !DILocation(line: 539, column: 10, scope: !13349)
!13349 = !DILexicalBlockFile(scope: !354, file: !78, discriminator: 5)
!13350 = !DILocation(line: 539, column: 3, scope: !13349)
!13351 = !DILocation(line: 540, column: 13, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !354, file: !78, line: 539, column: 35)
!13353 = !DILocation(line: 540, column: 13, scope: !13354)
!13354 = !DILexicalBlockFile(scope: !13352, file: !78, discriminator: 4)
!13355 = !DILocation(line: 540, column: 13, scope: !13356)
!13356 = !DILexicalBlockFile(scope: !13352, file: !78, discriminator: 5)
!13357 = !DILocation(line: 540, column: 13, scope: !13358)
!13358 = !DILexicalBlockFile(scope: !13352, file: !78, discriminator: 6)
!13359 = !DILocation(line: 540, column: 5, scope: !13358)
!13360 = !DILocation(line: 541, column: 5, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 541, column: 5)
!13362 = distinct !DILexicalBlock(scope: !13352, file: !78, line: 540, column: 34)
!13363 = !DILocation(line: 541, column: 5, scope: !13362)
!13364 = !DILocation(line: 541, column: 5, scope: !13365)
!13365 = !DILexicalBlockFile(scope: !13366, file: !78, discriminator: 29)
!13366 = distinct !DILexicalBlock(scope: !13361, file: !78, line: 541, column: 5)
!13367 = !DILocation(line: 541, column: 5, scope: !13368)
!13368 = !DILexicalBlockFile(scope: !13361, file: !78, discriminator: 30)
!13369 = !DILocation(line: 541, column: 5, scope: !13370)
!13370 = !DILexicalBlockFile(scope: !13362, file: !78, discriminator: 31)
!13371 = !DILocation(line: 541, column: 5, scope: !13372)
!13372 = !DILexicalBlockFile(scope: !13373, file: !78, discriminator: 32)
!13373 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 541, column: 5)
!13374 = !DILocation(line: 541, column: 5, scope: !13375)
!13375 = !DILexicalBlockFile(scope: !13373, file: !78, discriminator: 33)
!13376 = !DILocation(line: 541, column: 5, scope: !13377)
!13377 = !DILexicalBlockFile(scope: !13378, file: !78, discriminator: 34)
!13378 = distinct !DILexicalBlock(scope: !13379, file: !78, line: 541, column: 5)
!13379 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 541, column: 5)
!13380 = !DILocation(line: 541, column: 5, scope: !13381)
!13381 = !DILexicalBlockFile(scope: !13382, file: !78, discriminator: 35)
!13382 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 541, column: 5)
!13383 = !DILocation(line: 541, column: 5, scope: !13384)
!13384 = !DILexicalBlockFile(scope: !13382, file: !78, discriminator: 36)
!13385 = !DILocation(line: 541, column: 5, scope: !13386)
!13386 = !DILexicalBlockFile(scope: !13387, file: !78, discriminator: 37)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !78, line: 541, column: 5)
!13388 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 541, column: 5)
!13389 = !DILocation(line: 541, column: 5, scope: !13390)
!13390 = !DILexicalBlockFile(scope: !13391, file: !78, discriminator: 38)
!13391 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 541, column: 5)
!13392 = !DILocation(line: 541, column: 5, scope: !13393)
!13393 = !DILexicalBlockFile(scope: !13391, file: !78, discriminator: 39)
!13394 = !DILocation(line: 541, column: 5, scope: !13395)
!13395 = !DILexicalBlockFile(scope: !13396, file: !78, discriminator: 40)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !78, line: 541, column: 5)
!13397 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 541, column: 5)
!13398 = !DILocation(line: 560, column: 7, scope: !13362)
!13399 = !DILocalVariable(name: "t", scope: !13400, file: !78, line: 561, type: !7)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !78, line: 560, column: 16)
!13401 = distinct !DILexicalBlock(scope: !13402, file: !78, line: 560, column: 7)
!13402 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 560, column: 7)
!13403 = !DILocation(line: 561, column: 13, scope: !13400)
!13404 = !DILocation(line: 563, column: 13, scope: !13400)
!13405 = !DILocation(line: 564, column: 9, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13407, file: !78, line: 564, column: 9)
!13407 = distinct !DILexicalBlock(scope: !13400, file: !78, line: 564, column: 9)
!13408 = !DILocation(line: 564, column: 9, scope: !13407)
!13409 = !DILocation(line: 564, column: 9, scope: !13410)
!13410 = !DILexicalBlockFile(scope: !13411, file: !78, discriminator: 3)
!13411 = distinct !DILexicalBlock(scope: !13406, file: !78, line: 564, column: 9)
!13412 = !DILocation(line: 565, column: 13, scope: !13400)
!13413 = !DILocation(line: 565, column: 13, scope: !13414)
!13414 = !DILexicalBlockFile(scope: !13400, file: !78, discriminator: 4)
!13415 = !DILocation(line: 565, column: 13, scope: !13416)
!13416 = !DILexicalBlockFile(scope: !13400, file: !78, discriminator: 5)
!13417 = !DILocation(line: 565, column: 13, scope: !13418)
!13418 = !DILexicalBlockFile(scope: !13400, file: !78, discriminator: 6)
!13419 = !DILocation(line: 565, column: 11, scope: !13418)
!13420 = !DILocation(line: 566, column: 13, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13400, file: !78, line: 566, column: 13)
!13422 = !DILocation(line: 566, column: 15, scope: !13421)
!13423 = !DILocation(line: 566, column: 13, scope: !13400)
!13424 = !DILocation(line: 567, column: 11, scope: !13421)
!13425 = !DILocation(line: 568, column: 17, scope: !13400)
!13426 = !DILocation(line: 568, column: 9, scope: !13400)
!13427 = !DILocation(line: 572, column: 11, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13400, file: !78, line: 568, column: 20)
!13429 = !DILocation(line: 574, column: 25, scope: !13428)
!13430 = !DILocation(line: 574, column: 12, scope: !13428)
!13431 = !DILocation(line: 574, column: 23, scope: !13428)
!13432 = !DILocation(line: 575, column: 11, scope: !13428)
!13433 = !DILocation(line: 560, column: 7, scope: !13434)
!13434 = !DILexicalBlockFile(scope: !13401, file: !78, discriminator: 3)
!13435 = !DILocation(line: 577, column: 7, scope: !13402)
!13436 = !DILocalVariable(name: "open", scope: !13437, file: !78, line: 581, type: !7)
!13437 = distinct !DILexicalBlock(scope: !13362, file: !78, line: 580, column: 7)
!13438 = !DILocation(line: 581, column: 13, scope: !13437)
!13439 = !DILocation(line: 585, column: 9, scope: !13437)
!13440 = !DILocation(line: 586, column: 15, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !78, line: 585, column: 18)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !78, line: 585, column: 9)
!13443 = distinct !DILexicalBlock(scope: !13437, file: !78, line: 585, column: 9)
!13444 = !DILocation(line: 587, column: 11, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13446, file: !78, line: 587, column: 11)
!13446 = distinct !DILexicalBlock(scope: !13441, file: !78, line: 587, column: 11)
!13447 = !DILocation(line: 587, column: 11, scope: !13446)
!13448 = !DILocation(line: 587, column: 11, scope: !13449)
!13449 = !DILexicalBlockFile(scope: !13450, file: !78, discriminator: 3)
!13450 = distinct !DILexicalBlock(scope: !13445, file: !78, line: 587, column: 11)
!13451 = !DILocation(line: 588, column: 18, scope: !13441)
!13452 = !DILocation(line: 588, column: 18, scope: !13453)
!13453 = !DILexicalBlockFile(scope: !13441, file: !78, discriminator: 4)
!13454 = !DILocation(line: 588, column: 18, scope: !13455)
!13455 = !DILexicalBlockFile(scope: !13441, file: !78, discriminator: 5)
!13456 = !DILocation(line: 588, column: 18, scope: !13457)
!13457 = !DILexicalBlockFile(scope: !13441, file: !78, discriminator: 6)
!13458 = !DILocation(line: 588, column: 16, scope: !13457)
!13459 = !DILocation(line: 589, column: 15, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13441, file: !78, line: 589, column: 15)
!13461 = !DILocation(line: 589, column: 20, scope: !13460)
!13462 = !DILocation(line: 589, column: 31, scope: !13460)
!13463 = !DILocation(line: 589, column: 34, scope: !13464)
!13464 = !DILexicalBlockFile(scope: !13460, file: !78, discriminator: 3)
!13465 = !DILocation(line: 589, column: 39, scope: !13464)
!13466 = !DILocation(line: 589, column: 15, scope: !13464)
!13467 = !DILocation(line: 590, column: 13, scope: !13460)
!13468 = !DILocation(line: 591, column: 19, scope: !13441)
!13469 = !DILocation(line: 591, column: 11, scope: !13441)
!13470 = !DILocation(line: 595, column: 13, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13441, file: !78, line: 591, column: 25)
!13472 = !DILocation(line: 597, column: 27, scope: !13471)
!13473 = !DILocation(line: 597, column: 14, scope: !13471)
!13474 = !DILocation(line: 597, column: 25, scope: !13471)
!13475 = !DILocation(line: 598, column: 13, scope: !13471)
!13476 = !DILocation(line: 585, column: 9, scope: !13477)
!13477 = !DILexicalBlockFile(scope: !13442, file: !78, discriminator: 3)
!13478 = !DILocation(line: 601, column: 13, scope: !13437)
!13479 = !DILocation(line: 603, column: 9, scope: !13437)
!13480 = !DILocalVariable(name: "t", scope: !13481, file: !78, line: 604, type: !7)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !78, line: 603, column: 18)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !78, line: 603, column: 9)
!13483 = distinct !DILexicalBlock(scope: !13437, file: !78, line: 603, column: 9)
!13484 = !DILocation(line: 604, column: 15, scope: !13481)
!13485 = !DILocation(line: 605, column: 11, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13487, file: !78, line: 605, column: 11)
!13487 = distinct !DILexicalBlock(scope: !13481, file: !78, line: 605, column: 11)
!13488 = !DILocation(line: 605, column: 11, scope: !13487)
!13489 = !DILocation(line: 605, column: 11, scope: !13490)
!13490 = !DILexicalBlockFile(scope: !13491, file: !78, discriminator: 3)
!13491 = distinct !DILexicalBlock(scope: !13486, file: !78, line: 605, column: 11)
!13492 = !DILocation(line: 606, column: 15, scope: !13481)
!13493 = !DILocation(line: 606, column: 15, scope: !13494)
!13494 = !DILexicalBlockFile(scope: !13481, file: !78, discriminator: 4)
!13495 = !DILocation(line: 606, column: 15, scope: !13496)
!13496 = !DILexicalBlockFile(scope: !13481, file: !78, discriminator: 5)
!13497 = !DILocation(line: 606, column: 15, scope: !13498)
!13498 = !DILexicalBlockFile(scope: !13481, file: !78, discriminator: 6)
!13499 = !DILocation(line: 606, column: 13, scope: !13498)
!13500 = !DILocation(line: 607, column: 15, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13481, file: !78, line: 607, column: 15)
!13502 = !DILocation(line: 607, column: 20, scope: !13501)
!13503 = !DILocation(line: 607, column: 17, scope: !13501)
!13504 = !DILocation(line: 607, column: 15, scope: !13481)
!13505 = !DILocation(line: 608, column: 13, scope: !13501)
!13506 = !DILocation(line: 609, column: 19, scope: !13481)
!13507 = !DILocation(line: 609, column: 11, scope: !13481)
!13508 = !DILocation(line: 610, column: 11, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !78, line: 610, column: 11)
!13510 = distinct !DILexicalBlock(scope: !13481, file: !78, line: 609, column: 22)
!13511 = !DILocation(line: 610, column: 11, scope: !13510)
!13512 = !DILocation(line: 610, column: 11, scope: !13513)
!13513 = !DILexicalBlockFile(scope: !13509, file: !78, discriminator: 25)
!13514 = !DILocation(line: 610, column: 11, scope: !13515)
!13515 = !DILexicalBlockFile(scope: !13510, file: !78, discriminator: 26)
!13516 = !DILocation(line: 610, column: 11, scope: !13517)
!13517 = !DILexicalBlockFile(scope: !13518, file: !78, discriminator: 27)
!13518 = distinct !DILexicalBlock(scope: !13510, file: !78, line: 610, column: 11)
!13519 = !DILocation(line: 610, column: 11, scope: !13520)
!13520 = !DILexicalBlockFile(scope: !13518, file: !78, discriminator: 28)
!13521 = !DILocation(line: 610, column: 11, scope: !13522)
!13522 = !DILexicalBlockFile(scope: !13510, file: !78, discriminator: 29)
!13523 = !DILocation(line: 610, column: 11, scope: !13524)
!13524 = !DILexicalBlockFile(scope: !13525, file: !78, discriminator: 30)
!13525 = distinct !DILexicalBlock(scope: !13510, file: !78, line: 610, column: 11)
!13526 = !DILocation(line: 610, column: 11, scope: !13527)
!13527 = !DILexicalBlockFile(scope: !13525, file: !78, discriminator: 31)
!13528 = !DILocation(line: 610, column: 11, scope: !13529)
!13529 = !DILexicalBlockFile(scope: !13510, file: !78, discriminator: 32)
!13530 = !DILocation(line: 610, column: 11, scope: !13531)
!13531 = !DILexicalBlockFile(scope: !13510, file: !78, discriminator: 33)
!13532 = !DILocalVariable(name: "tok", scope: !13533, file: !78, line: 613, type: !7)
!13533 = distinct !DILexicalBlock(scope: !13510, file: !78, line: 612, column: 13)
!13534 = !DILocation(line: 613, column: 19, scope: !13533)
!13535 = !DILocation(line: 613, column: 41, scope: !13533)
!13536 = !DILocation(line: 613, column: 46, scope: !13533)
!13537 = !DILocation(line: 613, column: 50, scope: !13533)
!13538 = !DILocation(line: 613, column: 65, scope: !13533)
!13539 = !DILocation(line: 613, column: 25, scope: !13533)
!13540 = !DILocation(line: 614, column: 19, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13533, file: !78, line: 614, column: 19)
!13542 = !DILocation(line: 614, column: 23, scope: !13541)
!13543 = !DILocation(line: 614, column: 19, scope: !13533)
!13544 = !DILocation(line: 615, column: 21, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13546, file: !78, line: 615, column: 21)
!13546 = distinct !DILexicalBlock(scope: !13541, file: !78, line: 614, column: 29)
!13547 = !DILocation(line: 615, column: 25, scope: !13545)
!13548 = !DILocation(line: 615, column: 21, scope: !13546)
!13549 = !DILocation(line: 616, column: 33, scope: !13545)
!13550 = !DILocation(line: 616, column: 20, scope: !13545)
!13551 = !DILocation(line: 616, column: 31, scope: !13545)
!13552 = !DILocation(line: 616, column: 19, scope: !13545)
!13553 = !DILocation(line: 617, column: 24, scope: !13546)
!13554 = !DILocation(line: 617, column: 17, scope: !13546)
!13555 = !DILocation(line: 619, column: 15, scope: !13533)
!13556 = !DILocation(line: 622, column: 27, scope: !13510)
!13557 = !DILocation(line: 622, column: 14, scope: !13510)
!13558 = !DILocation(line: 622, column: 25, scope: !13510)
!13559 = !DILocation(line: 623, column: 13, scope: !13510)
!13560 = !DILocation(line: 625, column: 17, scope: !13510)
!13561 = !DILocation(line: 626, column: 13, scope: !13510)
!13562 = !DILocation(line: 603, column: 9, scope: !13563)
!13563 = !DILexicalBlockFile(scope: !13482, file: !78, discriminator: 3)
!13564 = !DILocation(line: 629, column: 13, scope: !13437)
!13565 = !DILocation(line: 630, column: 9, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !78, line: 630, column: 9)
!13567 = distinct !DILexicalBlock(scope: !13437, file: !78, line: 630, column: 9)
!13568 = !DILocation(line: 630, column: 9, scope: !13567)
!13569 = !DILocation(line: 630, column: 9, scope: !13570)
!13570 = !DILexicalBlockFile(scope: !13571, file: !78, discriminator: 3)
!13571 = distinct !DILexicalBlock(scope: !13566, file: !78, line: 630, column: 9)
!13572 = !DILocation(line: 631, column: 17, scope: !13437)
!13573 = !DILocation(line: 631, column: 17, scope: !13574)
!13574 = !DILexicalBlockFile(scope: !13437, file: !78, discriminator: 4)
!13575 = !DILocation(line: 631, column: 17, scope: !13576)
!13576 = !DILexicalBlockFile(scope: !13437, file: !78, discriminator: 5)
!13577 = !DILocation(line: 631, column: 17, scope: !13578)
!13578 = !DILexicalBlockFile(scope: !13437, file: !78, discriminator: 6)
!13579 = !DILocation(line: 631, column: 9, scope: !13578)
!13580 = !DILocation(line: 635, column: 11, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13437, file: !78, line: 631, column: 38)
!13582 = !DILocation(line: 637, column: 11, scope: !13581)
!13583 = !DILocation(line: 639, column: 11, scope: !13581)
!13584 = !DILocation(line: 641, column: 25, scope: !13581)
!13585 = !DILocation(line: 641, column: 12, scope: !13581)
!13586 = !DILocation(line: 641, column: 23, scope: !13581)
!13587 = !DILocation(line: 642, column: 11, scope: !13581)
!13588 = !DILocation(line: 645, column: 9, scope: !13437)
!13589 = !DILocation(line: 646, column: 15, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13591, file: !78, line: 645, column: 18)
!13591 = distinct !DILexicalBlock(scope: !13592, file: !78, line: 645, column: 9)
!13592 = distinct !DILexicalBlock(scope: !13437, file: !78, line: 645, column: 9)
!13593 = !DILocation(line: 647, column: 11, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !78, line: 647, column: 11)
!13595 = distinct !DILexicalBlock(scope: !13590, file: !78, line: 647, column: 11)
!13596 = !DILocation(line: 647, column: 11, scope: !13595)
!13597 = !DILocation(line: 647, column: 11, scope: !13598)
!13598 = !DILexicalBlockFile(scope: !13599, file: !78, discriminator: 3)
!13599 = distinct !DILexicalBlock(scope: !13594, file: !78, line: 647, column: 11)
!13600 = !DILocation(line: 648, column: 19, scope: !13590)
!13601 = !DILocation(line: 648, column: 19, scope: !13602)
!13602 = !DILexicalBlockFile(scope: !13590, file: !78, discriminator: 4)
!13603 = !DILocation(line: 648, column: 19, scope: !13604)
!13604 = !DILexicalBlockFile(scope: !13590, file: !78, discriminator: 5)
!13605 = !DILocation(line: 648, column: 19, scope: !13606)
!13606 = !DILexicalBlockFile(scope: !13590, file: !78, discriminator: 6)
!13607 = !DILocation(line: 648, column: 11, scope: !13606)
!13608 = !DILocation(line: 649, column: 11, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 649, column: 11)
!13610 = distinct !DILexicalBlock(scope: !13590, file: !78, line: 648, column: 40)
!13611 = !DILocation(line: 649, column: 11, scope: !13610)
!13612 = !DILocation(line: 649, column: 11, scope: !13613)
!13613 = !DILexicalBlockFile(scope: !13614, file: !78, discriminator: 29)
!13614 = distinct !DILexicalBlock(scope: !13609, file: !78, line: 649, column: 11)
!13615 = !DILocation(line: 649, column: 11, scope: !13616)
!13616 = !DILexicalBlockFile(scope: !13609, file: !78, discriminator: 30)
!13617 = !DILocation(line: 649, column: 11, scope: !13618)
!13618 = !DILexicalBlockFile(scope: !13610, file: !78, discriminator: 31)
!13619 = !DILocation(line: 649, column: 11, scope: !13620)
!13620 = !DILexicalBlockFile(scope: !13621, file: !78, discriminator: 32)
!13621 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 649, column: 11)
!13622 = !DILocation(line: 649, column: 11, scope: !13623)
!13623 = !DILexicalBlockFile(scope: !13621, file: !78, discriminator: 33)
!13624 = !DILocation(line: 649, column: 11, scope: !13625)
!13625 = !DILexicalBlockFile(scope: !13626, file: !78, discriminator: 34)
!13626 = distinct !DILexicalBlock(scope: !13627, file: !78, line: 649, column: 11)
!13627 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 649, column: 11)
!13628 = !DILocation(line: 649, column: 11, scope: !13629)
!13629 = !DILexicalBlockFile(scope: !13630, file: !78, discriminator: 35)
!13630 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 649, column: 11)
!13631 = !DILocation(line: 649, column: 11, scope: !13632)
!13632 = !DILexicalBlockFile(scope: !13630, file: !78, discriminator: 36)
!13633 = !DILocation(line: 649, column: 11, scope: !13634)
!13634 = !DILexicalBlockFile(scope: !13635, file: !78, discriminator: 37)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !78, line: 649, column: 11)
!13636 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 649, column: 11)
!13637 = !DILocation(line: 649, column: 11, scope: !13638)
!13638 = !DILexicalBlockFile(scope: !13639, file: !78, discriminator: 38)
!13639 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 649, column: 11)
!13640 = !DILocation(line: 649, column: 11, scope: !13641)
!13641 = !DILexicalBlockFile(scope: !13639, file: !78, discriminator: 39)
!13642 = !DILocation(line: 649, column: 11, scope: !13643)
!13643 = !DILexicalBlockFile(scope: !13644, file: !78, discriminator: 40)
!13644 = distinct !DILexicalBlock(scope: !13645, file: !78, line: 649, column: 11)
!13645 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 649, column: 11)
!13646 = !DILocation(line: 651, column: 13, scope: !13610)
!13647 = !DILocation(line: 651, column: 13, scope: !13648)
!13648 = !DILexicalBlockFile(scope: !13610, file: !78, discriminator: 3)
!13649 = !DILocation(line: 654, column: 27, scope: !13610)
!13650 = !DILocation(line: 654, column: 31, scope: !13610)
!13651 = !DILocation(line: 654, column: 14, scope: !13610)
!13652 = !DILocation(line: 654, column: 25, scope: !13610)
!13653 = !DILocation(line: 655, column: 13, scope: !13610)
!13654 = !DILocation(line: 655, column: 13, scope: !13648)
!13655 = !DILocation(line: 658, column: 17, scope: !13610)
!13656 = !DILocation(line: 659, column: 13, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13658, file: !78, line: 659, column: 13)
!13658 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 659, column: 13)
!13659 = !DILocation(line: 659, column: 13, scope: !13658)
!13660 = !DILocation(line: 659, column: 13, scope: !13661)
!13661 = !DILexicalBlockFile(scope: !13662, file: !78, discriminator: 3)
!13662 = distinct !DILexicalBlock(scope: !13657, file: !78, line: 659, column: 13)
!13663 = !DILocation(line: 660, column: 18, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13610, file: !78, line: 660, column: 17)
!13665 = !DILocation(line: 660, column: 18, scope: !13666)
!13666 = !DILexicalBlockFile(scope: !13664, file: !78, discriminator: 2)
!13667 = !DILocation(line: 660, column: 17, scope: !13666)
!13668 = !DILocation(line: 661, column: 29, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13664, file: !78, line: 660, column: 52)
!13670 = !DILocation(line: 661, column: 16, scope: !13669)
!13671 = !DILocation(line: 661, column: 27, scope: !13669)
!13672 = !DILocation(line: 662, column: 15, scope: !13669)
!13673 = !DILocation(line: 664, column: 27, scope: !13610)
!13674 = !DILocation(line: 664, column: 31, scope: !13610)
!13675 = !DILocation(line: 664, column: 14, scope: !13610)
!13676 = !DILocation(line: 664, column: 25, scope: !13610)
!13677 = !DILocation(line: 665, column: 13, scope: !13610)
!13678 = !DILocation(line: 667, column: 27, scope: !13610)
!13679 = !DILocation(line: 667, column: 14, scope: !13610)
!13680 = !DILocation(line: 667, column: 25, scope: !13610)
!13681 = !DILocation(line: 668, column: 13, scope: !13610)
!13682 = !DILocation(line: 670, column: 11, scope: !13590)
!13683 = !DILocation(line: 672, column: 9, scope: !13437)
!13684 = !DILocation(line: 675, column: 21, scope: !13362)
!13685 = !DILocation(line: 675, column: 8, scope: !13362)
!13686 = !DILocation(line: 675, column: 19, scope: !13362)
!13687 = !DILocation(line: 676, column: 7, scope: !13362)
!13688 = !DILocation(line: 539, column: 3, scope: !13689)
!13689 = !DILexicalBlockFile(scope: !354, file: !78, discriminator: 6)
!13690 = !DILocation(line: 679, column: 3, scope: !354)
!13691 = !DILocation(line: 680, column: 1, scope: !354)
!13692 = !DILocalVariable(name: "enc", arg: 1, scope: !356, file: !78, line: 472, type: !82)
!13693 = !DILocation(line: 472, column: 37, scope: !356)
!13694 = !DILocalVariable(name: "ptr", arg: 2, scope: !356, file: !78, line: 472, type: !93)
!13695 = !DILocation(line: 472, column: 54, scope: !356)
!13696 = !DILocalVariable(name: "end", arg: 3, scope: !356, file: !78, line: 473, type: !93)
!13697 = !DILocation(line: 473, column: 33, scope: !356)
!13698 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !356, file: !78, line: 473, type: !95)
!13699 = !DILocation(line: 473, column: 51, scope: !356)
!13700 = !DILocation(line: 475, column: 7, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !356, file: !78, line: 475, column: 7)
!13702 = !DILocation(line: 475, column: 7, scope: !356)
!13703 = !DILocation(line: 476, column: 9, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13705, file: !78, line: 476, column: 9)
!13705 = distinct !DILexicalBlock(scope: !13701, file: !78, line: 475, column: 32)
!13706 = !DILocation(line: 476, column: 9, scope: !13707)
!13707 = !DILexicalBlockFile(scope: !13704, file: !78, discriminator: 2)
!13708 = !DILocation(line: 477, column: 37, scope: !13704)
!13709 = !DILocation(line: 477, column: 42, scope: !13704)
!13710 = !DILocation(line: 477, column: 46, scope: !13704)
!13711 = !DILocation(line: 477, column: 61, scope: !13704)
!13712 = !DILocation(line: 477, column: 66, scope: !13704)
!13713 = !DILocation(line: 477, column: 14, scope: !13704)
!13714 = !DILocation(line: 477, column: 7, scope: !13704)
!13715 = !DILocation(line: 478, column: 13, scope: !13705)
!13716 = !DILocation(line: 478, column: 13, scope: !13717)
!13717 = !DILexicalBlockFile(scope: !13705, file: !78, discriminator: 4)
!13718 = !DILocation(line: 478, column: 13, scope: !13719)
!13719 = !DILexicalBlockFile(scope: !13705, file: !78, discriminator: 5)
!13720 = !DILocation(line: 478, column: 13, scope: !13721)
!13721 = !DILexicalBlockFile(scope: !13705, file: !78, discriminator: 6)
!13722 = !DILocation(line: 478, column: 5, scope: !13721)
!13723 = !DILocation(line: 480, column: 7, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13705, file: !78, line: 478, column: 34)
!13725 = !DILocation(line: 482, column: 21, scope: !13724)
!13726 = !DILocation(line: 482, column: 8, scope: !13724)
!13727 = !DILocation(line: 482, column: 19, scope: !13724)
!13728 = !DILocation(line: 483, column: 7, scope: !13724)
!13729 = !DILocation(line: 485, column: 14, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13705, file: !78, line: 485, column: 5)
!13731 = !DILocation(line: 485, column: 10, scope: !13730)
!13732 = !DILocation(line: 485, column: 30, scope: !13733)
!13733 = !DILexicalBlockFile(scope: !13734, file: !78, discriminator: 5)
!13734 = distinct !DILexicalBlock(scope: !13730, file: !78, line: 485, column: 5)
!13735 = !DILocation(line: 485, column: 5, scope: !13733)
!13736 = !DILocation(line: 486, column: 15, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13734, file: !78, line: 485, column: 75)
!13738 = !DILocation(line: 486, column: 15, scope: !13739)
!13739 = !DILexicalBlockFile(scope: !13737, file: !78, discriminator: 4)
!13740 = !DILocation(line: 486, column: 15, scope: !13741)
!13741 = !DILexicalBlockFile(scope: !13737, file: !78, discriminator: 5)
!13742 = !DILocation(line: 486, column: 15, scope: !13743)
!13743 = !DILexicalBlockFile(scope: !13737, file: !78, discriminator: 6)
!13744 = !DILocation(line: 486, column: 7, scope: !13743)
!13745 = !DILocation(line: 488, column: 9, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13737, file: !78, line: 486, column: 36)
!13747 = !DILocation(line: 490, column: 23, scope: !13746)
!13748 = !DILocation(line: 490, column: 27, scope: !13746)
!13749 = !DILocation(line: 490, column: 10, scope: !13746)
!13750 = !DILocation(line: 490, column: 21, scope: !13746)
!13751 = !DILocation(line: 491, column: 9, scope: !13746)
!13752 = !DILocation(line: 493, column: 23, scope: !13746)
!13753 = !DILocation(line: 493, column: 10, scope: !13746)
!13754 = !DILocation(line: 493, column: 21, scope: !13746)
!13755 = !DILocation(line: 494, column: 9, scope: !13746)
!13756 = !DILocation(line: 496, column: 5, scope: !13737)
!13757 = !DILocation(line: 485, column: 59, scope: !13758)
!13758 = !DILexicalBlockFile(scope: !13734, file: !78, discriminator: 6)
!13759 = !DILocation(line: 485, column: 5, scope: !13758)
!13760 = !DILocation(line: 497, column: 3, scope: !13705)
!13761 = !DILocation(line: 498, column: 3, scope: !356)
!13762 = !DILocation(line: 499, column: 1, scope: !356)
!13763 = !DILocalVariable(name: "enc", arg: 1, scope: !357, file: !78, line: 440, type: !82)
!13764 = !DILocation(line: 440, column: 40, scope: !357)
!13765 = !DILocalVariable(name: "ptr", arg: 2, scope: !357, file: !78, line: 440, type: !93)
!13766 = !DILocation(line: 440, column: 57, scope: !357)
!13767 = !DILocalVariable(name: "end", arg: 3, scope: !357, file: !78, line: 441, type: !93)
!13768 = !DILocation(line: 441, column: 36, scope: !357)
!13769 = !DILocalVariable(name: "nextTokPtr", arg: 4, scope: !357, file: !78, line: 441, type: !95)
!13770 = !DILocation(line: 441, column: 54, scope: !357)
!13771 = !DILocation(line: 443, column: 7, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !357, file: !78, line: 443, column: 7)
!13773 = !DILocation(line: 443, column: 7, scope: !357)
!13774 = !DILocation(line: 444, column: 13, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13772, file: !78, line: 443, column: 32)
!13776 = !DILocation(line: 444, column: 13, scope: !13777)
!13777 = !DILexicalBlockFile(scope: !13775, file: !78, discriminator: 4)
!13778 = !DILocation(line: 444, column: 13, scope: !13779)
!13779 = !DILexicalBlockFile(scope: !13775, file: !78, discriminator: 5)
!13780 = !DILocation(line: 444, column: 13, scope: !13781)
!13781 = !DILexicalBlockFile(scope: !13775, file: !78, discriminator: 6)
!13782 = !DILocation(line: 444, column: 5, scope: !13781)
!13783 = !DILocation(line: 447, column: 7, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13775, file: !78, line: 444, column: 34)
!13785 = !DILocation(line: 449, column: 21, scope: !13784)
!13786 = !DILocation(line: 449, column: 8, scope: !13784)
!13787 = !DILocation(line: 449, column: 19, scope: !13784)
!13788 = !DILocation(line: 450, column: 7, scope: !13784)
!13789 = !DILocation(line: 452, column: 14, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13775, file: !78, line: 452, column: 5)
!13791 = !DILocation(line: 452, column: 10, scope: !13790)
!13792 = !DILocation(line: 452, column: 30, scope: !13793)
!13793 = !DILexicalBlockFile(scope: !13794, file: !78, discriminator: 5)
!13794 = distinct !DILexicalBlock(scope: !13790, file: !78, line: 452, column: 5)
!13795 = !DILocation(line: 452, column: 5, scope: !13793)
!13796 = !DILocation(line: 453, column: 15, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13794, file: !78, line: 452, column: 75)
!13798 = !DILocation(line: 453, column: 15, scope: !13799)
!13799 = !DILexicalBlockFile(scope: !13797, file: !78, discriminator: 4)
!13800 = !DILocation(line: 453, column: 15, scope: !13801)
!13801 = !DILexicalBlockFile(scope: !13797, file: !78, discriminator: 5)
!13802 = !DILocation(line: 453, column: 15, scope: !13803)
!13803 = !DILexicalBlockFile(scope: !13797, file: !78, discriminator: 6)
!13804 = !DILocation(line: 453, column: 7, scope: !13803)
!13805 = !DILocation(line: 456, column: 9, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13797, file: !78, line: 453, column: 36)
!13807 = !DILocation(line: 458, column: 23, scope: !13806)
!13808 = !DILocation(line: 458, column: 27, scope: !13806)
!13809 = !DILocation(line: 458, column: 10, scope: !13806)
!13810 = !DILocation(line: 458, column: 21, scope: !13806)
!13811 = !DILocation(line: 459, column: 9, scope: !13806)
!13812 = !DILocation(line: 461, column: 23, scope: !13806)
!13813 = !DILocation(line: 461, column: 10, scope: !13806)
!13814 = !DILocation(line: 461, column: 21, scope: !13806)
!13815 = !DILocation(line: 462, column: 9, scope: !13806)
!13816 = !DILocation(line: 464, column: 5, scope: !13797)
!13817 = !DILocation(line: 452, column: 59, scope: !13818)
!13818 = !DILexicalBlockFile(scope: !13794, file: !78, discriminator: 6)
!13819 = !DILocation(line: 452, column: 5, scope: !13818)
!13820 = !DILocation(line: 465, column: 3, scope: !13775)
!13821 = !DILocation(line: 466, column: 3, scope: !357)
!13822 = !DILocation(line: 467, column: 1, scope: !357)
!13823 = !DILocalVariable(name: "enc", arg: 1, scope: !379, file: !1, line: 1071, type: !82)
!13824 = !DILocation(line: 1071, column: 38, scope: !379)
!13825 = !DILocalVariable(name: "ptr", arg: 2, scope: !379, file: !1, line: 1072, type: !93)
!13826 = !DILocation(line: 1072, column: 34, scope: !379)
!13827 = !DILocalVariable(name: "end", arg: 3, scope: !379, file: !1, line: 1073, type: !93)
!13828 = !DILocation(line: 1073, column: 34, scope: !379)
!13829 = !DILocalVariable(name: "namePtr", arg: 4, scope: !379, file: !1, line: 1074, type: !95)
!13830 = !DILocation(line: 1074, column: 35, scope: !379)
!13831 = !DILocalVariable(name: "nameEndPtr", arg: 5, scope: !379, file: !1, line: 1075, type: !95)
!13832 = !DILocation(line: 1075, column: 35, scope: !379)
!13833 = !DILocalVariable(name: "valPtr", arg: 6, scope: !379, file: !1, line: 1076, type: !95)
!13834 = !DILocation(line: 1076, column: 35, scope: !379)
!13835 = !DILocalVariable(name: "nextTokPtr", arg: 7, scope: !379, file: !1, line: 1077, type: !95)
!13836 = !DILocation(line: 1077, column: 35, scope: !379)
!13837 = !DILocalVariable(name: "c", scope: !379, file: !1, line: 1079, type: !7)
!13838 = !DILocation(line: 1079, column: 7, scope: !379)
!13839 = !DILocalVariable(name: "open", scope: !379, file: !1, line: 1080, type: !9)
!13840 = !DILocation(line: 1080, column: 8, scope: !379)
!13841 = !DILocation(line: 1081, column: 7, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1081, column: 7)
!13843 = !DILocation(line: 1081, column: 14, scope: !13842)
!13844 = !DILocation(line: 1081, column: 11, scope: !13842)
!13845 = !DILocation(line: 1081, column: 7, scope: !379)
!13846 = !DILocation(line: 1082, column: 6, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13842, file: !1, line: 1081, column: 19)
!13848 = !DILocation(line: 1082, column: 14, scope: !13847)
!13849 = !DILocation(line: 1083, column: 5, scope: !13847)
!13850 = !DILocation(line: 1085, column: 24, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1085, column: 7)
!13852 = !DILocation(line: 1085, column: 29, scope: !13851)
!13853 = !DILocation(line: 1085, column: 34, scope: !13851)
!13854 = !DILocation(line: 1085, column: 16, scope: !13851)
!13855 = !DILocation(line: 1085, column: 8, scope: !13856)
!13856 = !DILexicalBlockFile(scope: !13851, file: !1, discriminator: 1)
!13857 = !DILocation(line: 1085, column: 8, scope: !13851)
!13858 = !DILocation(line: 1085, column: 7, scope: !379)
!13859 = !DILocation(line: 1086, column: 19, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13851, file: !1, line: 1085, column: 41)
!13861 = !DILocation(line: 1086, column: 6, scope: !13860)
!13862 = !DILocation(line: 1086, column: 17, scope: !13860)
!13863 = !DILocation(line: 1087, column: 5, scope: !13860)
!13864 = !DILocation(line: 1089, column: 3, scope: !379)
!13865 = !DILocation(line: 1090, column: 12, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1089, column: 6)
!13867 = !DILocation(line: 1090, column: 17, scope: !13866)
!13868 = !DILocation(line: 1090, column: 9, scope: !13866)
!13869 = !DILocation(line: 1091, column: 3, scope: !13866)
!13870 = !DILocation(line: 1091, column: 28, scope: !13871)
!13871 = !DILexicalBlockFile(scope: !379, file: !1, discriminator: 1)
!13872 = !DILocation(line: 1091, column: 33, scope: !13871)
!13873 = !DILocation(line: 1091, column: 38, scope: !13871)
!13874 = !DILocation(line: 1091, column: 20, scope: !13871)
!13875 = !DILocation(line: 1091, column: 12, scope: !13876)
!13876 = !DILexicalBlockFile(scope: !13871, file: !1, discriminator: 2)
!13877 = !DILocation(line: 1091, column: 3, scope: !13871)
!13878 = !DILocation(line: 1092, column: 7, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1092, column: 7)
!13880 = !DILocation(line: 1092, column: 14, scope: !13879)
!13881 = !DILocation(line: 1092, column: 11, scope: !13879)
!13882 = !DILocation(line: 1092, column: 7, scope: !379)
!13883 = !DILocation(line: 1093, column: 6, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13879, file: !1, line: 1092, column: 19)
!13885 = !DILocation(line: 1093, column: 14, scope: !13884)
!13886 = !DILocation(line: 1094, column: 5, scope: !13884)
!13887 = !DILocation(line: 1096, column: 14, scope: !379)
!13888 = !DILocation(line: 1096, column: 4, scope: !379)
!13889 = !DILocation(line: 1096, column: 12, scope: !379)
!13890 = !DILocation(line: 1097, column: 3, scope: !379)
!13891 = !DILocation(line: 1098, column: 17, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13893, file: !1, line: 1097, column: 12)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !1, line: 1097, column: 3)
!13894 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1097, column: 3)
!13895 = !DILocation(line: 1098, column: 22, scope: !13892)
!13896 = !DILocation(line: 1098, column: 27, scope: !13892)
!13897 = !DILocation(line: 1098, column: 9, scope: !13892)
!13898 = !DILocation(line: 1098, column: 7, scope: !13892)
!13899 = !DILocation(line: 1099, column: 9, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13892, file: !1, line: 1099, column: 9)
!13901 = !DILocation(line: 1099, column: 11, scope: !13900)
!13902 = !DILocation(line: 1099, column: 9, scope: !13892)
!13903 = !DILocation(line: 1100, column: 21, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13900, file: !1, line: 1099, column: 18)
!13905 = !DILocation(line: 1100, column: 8, scope: !13904)
!13906 = !DILocation(line: 1100, column: 19, scope: !13904)
!13907 = !DILocation(line: 1101, column: 7, scope: !13904)
!13908 = !DILocation(line: 1103, column: 9, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13892, file: !1, line: 1103, column: 9)
!13910 = !DILocation(line: 1103, column: 11, scope: !13909)
!13911 = !DILocation(line: 1103, column: 9, scope: !13892)
!13912 = !DILocation(line: 1104, column: 21, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13909, file: !1, line: 1103, column: 28)
!13914 = !DILocation(line: 1104, column: 8, scope: !13913)
!13915 = !DILocation(line: 1104, column: 19, scope: !13913)
!13916 = !DILocation(line: 1105, column: 7, scope: !13913)
!13917 = !DILocation(line: 1107, column: 17, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13892, file: !1, line: 1107, column: 9)
!13919 = !DILocation(line: 1107, column: 9, scope: !13918)
!13920 = !DILocation(line: 1107, column: 9, scope: !13892)
!13921 = !DILocation(line: 1108, column: 21, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13918, file: !1, line: 1107, column: 21)
!13923 = !DILocation(line: 1108, column: 8, scope: !13922)
!13924 = !DILocation(line: 1108, column: 19, scope: !13922)
!13925 = !DILocation(line: 1109, column: 7, scope: !13922)
!13926 = !DILocation(line: 1110, column: 16, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13922, file: !1, line: 1109, column: 10)
!13928 = !DILocation(line: 1110, column: 21, scope: !13927)
!13929 = !DILocation(line: 1110, column: 13, scope: !13927)
!13930 = !DILocation(line: 1111, column: 7, scope: !13927)
!13931 = !DILocation(line: 1111, column: 36, scope: !13932)
!13932 = !DILexicalBlockFile(scope: !13922, file: !1, discriminator: 1)
!13933 = !DILocation(line: 1111, column: 41, scope: !13932)
!13934 = !DILocation(line: 1111, column: 46, scope: !13932)
!13935 = !DILocation(line: 1111, column: 28, scope: !13932)
!13936 = !DILocation(line: 1111, column: 26, scope: !13932)
!13937 = !DILocation(line: 1111, column: 16, scope: !13938)
!13938 = !DILexicalBlockFile(scope: !13932, file: !1, discriminator: 2)
!13939 = !DILocation(line: 1111, column: 7, scope: !13932)
!13940 = !DILocation(line: 1112, column: 11, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13922, file: !1, line: 1112, column: 11)
!13942 = !DILocation(line: 1112, column: 13, scope: !13941)
!13943 = !DILocation(line: 1112, column: 11, scope: !13922)
!13944 = !DILocation(line: 1113, column: 23, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13941, file: !1, line: 1112, column: 30)
!13946 = !DILocation(line: 1113, column: 10, scope: !13945)
!13947 = !DILocation(line: 1113, column: 21, scope: !13945)
!13948 = !DILocation(line: 1114, column: 9, scope: !13945)
!13949 = !DILocation(line: 1116, column: 7, scope: !13922)
!13950 = !DILocation(line: 1118, column: 12, scope: !13892)
!13951 = !DILocation(line: 1118, column: 17, scope: !13892)
!13952 = !DILocation(line: 1118, column: 9, scope: !13892)
!13953 = !DILocation(line: 1097, column: 3, scope: !13954)
!13954 = !DILexicalBlockFile(scope: !13893, file: !1, discriminator: 1)
!13955 = !DILocation(line: 1120, column: 7, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1120, column: 7)
!13957 = !DILocation(line: 1120, column: 15, scope: !13956)
!13958 = !DILocation(line: 1120, column: 14, scope: !13956)
!13959 = !DILocation(line: 1120, column: 11, scope: !13956)
!13960 = !DILocation(line: 1120, column: 7, scope: !379)
!13961 = !DILocation(line: 1121, column: 19, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13956, file: !1, line: 1120, column: 24)
!13963 = !DILocation(line: 1121, column: 6, scope: !13962)
!13964 = !DILocation(line: 1121, column: 17, scope: !13962)
!13965 = !DILocation(line: 1122, column: 5, scope: !13962)
!13966 = !DILocation(line: 1124, column: 10, scope: !379)
!13967 = !DILocation(line: 1124, column: 15, scope: !379)
!13968 = !DILocation(line: 1124, column: 7, scope: !379)
!13969 = !DILocation(line: 1125, column: 15, scope: !379)
!13970 = !DILocation(line: 1125, column: 20, scope: !379)
!13971 = !DILocation(line: 1125, column: 25, scope: !379)
!13972 = !DILocation(line: 1125, column: 7, scope: !379)
!13973 = !DILocation(line: 1125, column: 5, scope: !379)
!13974 = !DILocation(line: 1126, column: 3, scope: !379)
!13975 = !DILocation(line: 1126, column: 18, scope: !13871)
!13976 = !DILocation(line: 1126, column: 10, scope: !13871)
!13977 = !DILocation(line: 1126, column: 3, scope: !13871)
!13978 = !DILocation(line: 1127, column: 12, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1126, column: 22)
!13980 = !DILocation(line: 1127, column: 17, scope: !13979)
!13981 = !DILocation(line: 1127, column: 9, scope: !13979)
!13982 = !DILocation(line: 1128, column: 17, scope: !13979)
!13983 = !DILocation(line: 1128, column: 22, scope: !13979)
!13984 = !DILocation(line: 1128, column: 27, scope: !13979)
!13985 = !DILocation(line: 1128, column: 9, scope: !13979)
!13986 = !DILocation(line: 1128, column: 7, scope: !13979)
!13987 = !DILocation(line: 1126, column: 3, scope: !13988)
!13988 = !DILexicalBlockFile(scope: !379, file: !1, discriminator: 2)
!13989 = !DILocation(line: 1130, column: 7, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1130, column: 7)
!13991 = !DILocation(line: 1130, column: 9, scope: !13990)
!13992 = !DILocation(line: 1130, column: 23, scope: !13990)
!13993 = !DILocation(line: 1130, column: 26, scope: !13994)
!13994 = !DILexicalBlockFile(scope: !13990, file: !1, discriminator: 1)
!13995 = !DILocation(line: 1130, column: 28, scope: !13994)
!13996 = !DILocation(line: 1130, column: 7, scope: !13994)
!13997 = !DILocation(line: 1131, column: 19, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13990, file: !1, line: 1130, column: 43)
!13999 = !DILocation(line: 1131, column: 6, scope: !13998)
!14000 = !DILocation(line: 1131, column: 17, scope: !13998)
!14001 = !DILocation(line: 1132, column: 5, scope: !13998)
!14002 = !DILocation(line: 1134, column: 16, scope: !379)
!14003 = !DILocation(line: 1134, column: 10, scope: !379)
!14004 = !DILocation(line: 1134, column: 8, scope: !379)
!14005 = !DILocation(line: 1135, column: 10, scope: !379)
!14006 = !DILocation(line: 1135, column: 15, scope: !379)
!14007 = !DILocation(line: 1135, column: 7, scope: !379)
!14008 = !DILocation(line: 1136, column: 13, scope: !379)
!14009 = !DILocation(line: 1136, column: 4, scope: !379)
!14010 = !DILocation(line: 1136, column: 11, scope: !379)
!14011 = !DILocation(line: 1137, column: 3, scope: !379)
!14012 = !DILocation(line: 1138, column: 17, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !1, line: 1137, column: 40)
!14014 = distinct !DILexicalBlock(scope: !14015, file: !1, line: 1137, column: 3)
!14015 = distinct !DILexicalBlock(scope: !379, file: !1, line: 1137, column: 3)
!14016 = !DILocation(line: 1138, column: 22, scope: !14013)
!14017 = !DILocation(line: 1138, column: 27, scope: !14013)
!14018 = !DILocation(line: 1138, column: 9, scope: !14013)
!14019 = !DILocation(line: 1138, column: 7, scope: !14013)
!14020 = !DILocation(line: 1139, column: 9, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14013, file: !1, line: 1139, column: 9)
!14022 = !DILocation(line: 1139, column: 14, scope: !14021)
!14023 = !DILocation(line: 1139, column: 11, scope: !14021)
!14024 = !DILocation(line: 1139, column: 9, scope: !14013)
!14025 = !DILocation(line: 1140, column: 7, scope: !14021)
!14026 = !DILocation(line: 1141, column: 22, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14013, file: !1, line: 1141, column: 9)
!14028 = !DILocation(line: 1141, column: 19, scope: !14027)
!14029 = !DILocation(line: 1141, column: 24, scope: !14027)
!14030 = !DILocation(line: 1141, column: 27, scope: !14031)
!14031 = !DILexicalBlockFile(scope: !14027, file: !1, discriminator: 1)
!14032 = !DILocation(line: 1141, column: 29, scope: !14031)
!14033 = !DILocation(line: 1142, column: 9, scope: !14027)
!14034 = !DILocation(line: 1142, column: 25, scope: !14031)
!14035 = !DILocation(line: 1142, column: 22, scope: !14031)
!14036 = !DILocation(line: 1142, column: 27, scope: !14031)
!14037 = !DILocation(line: 1142, column: 30, scope: !14038)
!14038 = !DILexicalBlockFile(scope: !14027, file: !1, discriminator: 2)
!14039 = !DILocation(line: 1142, column: 32, scope: !14038)
!14040 = !DILocation(line: 1143, column: 9, scope: !14027)
!14041 = !DILocation(line: 1143, column: 25, scope: !14031)
!14042 = !DILocation(line: 1143, column: 22, scope: !14031)
!14043 = !DILocation(line: 1143, column: 27, scope: !14031)
!14044 = !DILocation(line: 1143, column: 30, scope: !14038)
!14045 = !DILocation(line: 1143, column: 32, scope: !14038)
!14046 = !DILocation(line: 1144, column: 9, scope: !14027)
!14047 = !DILocation(line: 1144, column: 12, scope: !14031)
!14048 = !DILocation(line: 1144, column: 14, scope: !14031)
!14049 = !DILocation(line: 1145, column: 9, scope: !14027)
!14050 = !DILocation(line: 1145, column: 12, scope: !14031)
!14051 = !DILocation(line: 1145, column: 14, scope: !14031)
!14052 = !DILocation(line: 1146, column: 9, scope: !14027)
!14053 = !DILocation(line: 1146, column: 12, scope: !14031)
!14054 = !DILocation(line: 1146, column: 14, scope: !14031)
!14055 = !DILocation(line: 1141, column: 9, scope: !14056)
!14056 = !DILexicalBlockFile(scope: !14013, file: !1, discriminator: 2)
!14057 = !DILocation(line: 1147, column: 21, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14027, file: !1, line: 1146, column: 35)
!14059 = !DILocation(line: 1147, column: 8, scope: !14058)
!14060 = !DILocation(line: 1147, column: 19, scope: !14058)
!14061 = !DILocation(line: 1148, column: 7, scope: !14058)
!14062 = !DILocation(line: 1150, column: 3, scope: !14013)
!14063 = !DILocation(line: 1137, column: 18, scope: !14064)
!14064 = !DILexicalBlockFile(scope: !14014, file: !1, discriminator: 1)
!14065 = !DILocation(line: 1137, column: 23, scope: !14064)
!14066 = !DILocation(line: 1137, column: 15, scope: !14064)
!14067 = !DILocation(line: 1137, column: 3, scope: !14064)
!14068 = !DILocation(line: 1151, column: 17, scope: !379)
!14069 = !DILocation(line: 1151, column: 23, scope: !379)
!14070 = !DILocation(line: 1151, column: 28, scope: !379)
!14071 = !DILocation(line: 1151, column: 21, scope: !379)
!14072 = !DILocation(line: 1151, column: 4, scope: !379)
!14073 = !DILocation(line: 1151, column: 15, scope: !379)
!14074 = !DILocation(line: 1152, column: 3, scope: !379)
!14075 = !DILocation(line: 1153, column: 1, scope: !379)
!14076 = !DILocalVariable(name: "enc", arg: 1, scope: !382, file: !1, line: 1043, type: !82)
!14077 = !DILocation(line: 1043, column: 25, scope: !382)
!14078 = !DILocalVariable(name: "ptr", arg: 2, scope: !382, file: !1, line: 1043, type: !93)
!14079 = !DILocation(line: 1043, column: 42, scope: !382)
!14080 = !DILocalVariable(name: "end", arg: 3, scope: !382, file: !1, line: 1043, type: !93)
!14081 = !DILocation(line: 1043, column: 59, scope: !382)
!14082 = !DILocalVariable(name: "buf", scope: !382, file: !1, line: 1045, type: !14083)
!14083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8, align: 8, elements: !14084)
!14084 = !{!14085}
!14085 = !DISubrange(count: 1)
!14086 = !DILocation(line: 1045, column: 8, scope: !382)
!14087 = !DILocalVariable(name: "p", scope: !382, file: !1, line: 1046, type: !8)
!14088 = !DILocation(line: 1046, column: 9, scope: !382)
!14089 = !DILocation(line: 1046, column: 13, scope: !382)
!14090 = !DILocation(line: 1047, column: 3, scope: !382)
!14091 = !DILocation(line: 1048, column: 7, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !382, file: !1, line: 1048, column: 7)
!14093 = !DILocation(line: 1048, column: 12, scope: !14092)
!14094 = !DILocation(line: 1048, column: 9, scope: !14092)
!14095 = !DILocation(line: 1048, column: 7, scope: !382)
!14096 = !DILocation(line: 1049, column: 5, scope: !14092)
!14097 = !DILocation(line: 1051, column: 12, scope: !14092)
!14098 = !DILocation(line: 1051, column: 5, scope: !14092)
!14099 = !DILocation(line: 1052, column: 1, scope: !382)
!14100 = !DILocalVariable(name: "c", arg: 1, scope: !383, file: !1, line: 1055, type: !7)
!14101 = !DILocation(line: 1055, column: 13, scope: !383)
!14102 = !DILocation(line: 1057, column: 11, scope: !383)
!14103 = !DILocation(line: 1057, column: 3, scope: !383)
!14104 = !DILocation(line: 1062, column: 5, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !383, file: !1, line: 1057, column: 14)
!14106 = !DILocation(line: 1064, column: 3, scope: !383)
!14107 = !DILocation(line: 1065, column: 1, scope: !383)

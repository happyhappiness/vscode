; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmlparse.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.XML_Feature = type { i32, i8*, i64 }
%struct.XML_ParserStruct = type { i8*, i8*, i8*, %struct.XML_Memory_Handling_Suite, i8*, i8*, i8*, i64, i8*, i8*, i8*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)*, void (i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, i32 (i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, %struct.XML_ParserStruct*, void (i8*, i8*, i32)*, i32 (i8*, i8*, %struct.XML_Encoding*)*, void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32)*, %struct.encoding*, %struct.INIT_ENCODING, %struct.encoding*, i8*, i8, i8, i8*, i8*, i8*, void (i8*)*, %struct.prolog_state, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32, i8*, i8*, i8*, %struct.open_internal_entity*, %struct.open_internal_entity*, i8, i32, %struct.ENTITY*, i8*, i8*, i8*, i8*, i8*, i8*, %struct.ELEMENT_TYPE*, %struct.attribute_id*, i8, i8, %struct.DTD*, i8*, %struct.tag*, %struct.tag*, %struct.binding*, %struct.binding*, i32, i32, i32, %struct.ATTRIBUTE*, %struct.NS_ATT*, i64, i8, %struct.position, %struct.STRING_POOL, %struct.STRING_POOL, i8*, i32, i8, %struct.XML_ParserStruct*, %struct.XML_ParsingStatus, i64 }
%struct.XML_Memory_Handling_Suite = type { i8* (i64)*, i8* (i8*, i64)*, void (i8*)* }
%struct.XML_Encoding = type { [256 x i32], i8*, i32 (i8*, i8*)*, void (i8*)* }
%struct.XML_cp = type { i32, i32, i8*, i32, %struct.XML_cp* }
%struct.INIT_ENCODING = type { %struct.encoding, %struct.encoding** }
%struct.encoding = type { [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*)*, i8* (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i8*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)*, i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i16**, i16*)*, i32, i8, i8 }
%struct.prolog_state = type { i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32, i32 }
%struct.open_internal_entity = type { i8*, i8*, %struct.open_internal_entity*, %struct.ENTITY*, i32, i8 }
%struct.ENTITY = type { i8*, i8*, i32, i32, i8*, i8*, i8*, i8*, i8, i8, i8 }
%struct.ELEMENT_TYPE = type { i8*, %struct.prefix*, %struct.attribute_id*, i32, i32, %struct.DEFAULT_ATTRIBUTE* }
%struct.prefix = type { i8*, %struct.binding* }
%struct.DEFAULT_ATTRIBUTE = type { %struct.attribute_id*, i8, i8* }
%struct.attribute_id = type { i8*, %struct.prefix*, i8, i8 }
%struct.DTD = type { %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.STRING_POOL, %struct.STRING_POOL, i8, i8, i8, %struct.prefix, i8, %struct.CONTENT_SCAFFOLD*, i32, i32, i32, i32, i32* }
%struct.HASH_TABLE = type { %struct.NAMED**, i8, i64, i64, %struct.XML_Memory_Handling_Suite* }
%struct.NAMED = type { i8* }
%struct.CONTENT_SCAFFOLD = type { i32, i32, i8*, i32, i32, i32, i32 }
%struct.tag = type { %struct.tag*, i8*, i32, %struct.TAG_NAME, i8*, i8*, %struct.binding* }
%struct.TAG_NAME = type { i8*, i8*, i8*, i32, i32, i32 }
%struct.binding = type { %struct.prefix*, %struct.binding*, %struct.binding*, %struct.attribute_id*, i8*, i32, i32 }
%struct.ATTRIBUTE = type { i8*, i8*, i8*, i8 }
%struct.NS_ATT = type { i64, i64, i8* }
%struct.position = type { i64, i64 }
%struct.STRING_POOL = type { %struct.block*, %struct.block*, i8*, i8*, i8*, %struct.XML_Memory_Handling_Suite* }
%struct.block = type { %struct.block*, i32, [1 x i8] }
%struct.XML_ParsingStatus = type { i32, i8 }
%struct.HASH_TABLE_ITER = type { %struct.NAMED**, %struct.NAMED** }
%struct.XML_Expat_Version = type { i32, i32, i32 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }

@.str = private unnamed_addr constant [21 x i8] c"status != ((void*)0)\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmlparse.c\00", align 1
@__PRETTY_FUNCTION__.XML_GetParsingStatus = private unnamed_addr constant [59 x i8] c"void XML_GetParsingStatus(XML_Parser, XML_ParsingStatus *)\00", align 1
@XML_ErrorString.message = internal constant [41 x i8*] [i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.41, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"no element found\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"not well-formed (invalid token)\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"unclosed token\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"partial character\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"mismatched tag\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"duplicate attribute\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"junk after document element\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"illegal parameter entity reference\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"undefined entity\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"recursive entity reference\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"asynchronous entity\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"reference to invalid character number\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"reference to binary entity\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"reference to external entity in attribute\00", align 1
@.str.18 = private unnamed_addr constant [47 x i8] c"XML or text declaration not at start of entity\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"unknown encoding\00", align 1
@.str.20 = private unnamed_addr constant [51 x i8] c"encoding specified in XML declaration is incorrect\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"unclosed CDATA section\00", align 1
@.str.22 = private unnamed_addr constant [46 x i8] c"error in processing external entity reference\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"document is not standalone\00", align 1
@.str.24 = private unnamed_addr constant [51 x i8] c"unexpected parser state - please send a bug report\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"entity declared in parameter entity\00", align 1
@.str.26 = private unnamed_addr constant [52 x i8] c"requested feature requires XML_DTD support in Expat\00", align 1
@.str.27 = private unnamed_addr constant [45 x i8] c"cannot change setting once parsing has begun\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"unbound prefix\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"must not undeclare prefix\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"incomplete markup in parameter entity\00", align 1
@.str.31 = private unnamed_addr constant [32 x i8] c"XML declaration not well-formed\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"text declaration not well-formed\00", align 1
@.str.33 = private unnamed_addr constant [34 x i8] c"illegal character(s) in public id\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"parser suspended\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"parser not suspended\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"parsing aborted\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"parsing finished\00", align 1
@.str.38 = private unnamed_addr constant [44 x i8] c"cannot suspend in external parameter entity\00", align 1
@.str.39 = private unnamed_addr constant [80 x i8] c"reserved prefix (xml) must not be undeclared or bound to another namespace name\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"reserved prefix (xmlns) must not be declared or undeclared\00", align 1
@.str.41 = private unnamed_addr constant [64 x i8] c"prefix must not be bound to one of the reserved namespace names\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"expat_2.1.1\00", align 1
@XML_GetFeatureList.features = internal constant [4 x %struct.XML_Feature] [%struct.XML_Feature { i32 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0), i64 1 }, %struct.XML_Feature { i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i32 0, i32 0), i64 1 }, %struct.XML_Feature { i32 4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i32 0, i32 0), i64 1024 }, %struct.XML_Feature zeroinitializer], align 16
@.str.43 = private unnamed_addr constant [17 x i8] c"sizeof(XML_Char)\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"sizeof(XML_LChar)\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"XML_CONTEXT_BYTES\00", align 1
@doProlog.atypeCDATA = internal constant [6 x i8] c"CDATA\00", align 1
@doProlog.atypeID = internal constant [3 x i8] c"ID\00", align 1
@doProlog.atypeIDREF = internal constant [6 x i8] c"IDREF\00", align 1
@doProlog.atypeIDREFS = internal constant [7 x i8] c"IDREFS\00", align 1
@doProlog.atypeENTITY = internal constant [7 x i8] c"ENTITY\00", align 1
@doProlog.atypeENTITIES = internal constant [9 x i8] c"ENTITIES\00", align 1
@doProlog.atypeNMTOKEN = internal constant [8 x i8] c"NMTOKEN\00", align 1
@doProlog.atypeNMTOKENS = internal constant [9 x i8] c"NMTOKENS\00", align 1
@doProlog.notationPrefix = internal constant [10 x i8] c"NOTATION(\00", align 1
@doProlog.enumValueSep = internal constant [2 x i8] c"|\00", align 1
@doProlog.enumValueStart = internal constant [2 x i8] c"(\00", align 1
@addBinding.xmlNamespace = internal constant [37 x i8] c"http://www.w3.org/XML/1998/namespace\00", align 16
@addBinding.xmlLen = internal constant i32 36, align 4
@addBinding.xmlnsNamespace = internal constant [30 x i8] c"http://www.w3.org/2000/xmlns/\00", align 16
@addBinding.xmlnsLen = internal constant i32 29, align 4
@implicitContext = internal constant [41 x i8] c"xml=http://www.w3.org/XML/1998/namespace\00", align 16
@.str.46 = private unnamed_addr constant [22 x i8] c"gettimeofday_res == 0\00", align 1
@__PRETTY_FUNCTION__.gather_time_entropy = private unnamed_addr constant [36 x i8] c"unsigned long gather_time_entropy()\00", align 1

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @XML_ParserCreate(i8* %encodingName) #0 !dbg !651 {
entry:
  %encodingName.addr = alloca i8*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1075, metadata !1076), !dbg !1077
  %0 = load i8*, i8** %encodingName.addr, align 8, !dbg !1078
  %call = call %struct.XML_ParserStruct* @XML_ParserCreate_MM(i8* %0, %struct.XML_Memory_Handling_Suite* null, i8* null), !dbg !1079
  ret %struct.XML_ParserStruct* %call, !dbg !1080
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @XML_ParserCreate_MM(i8* %encodingName, %struct.XML_Memory_Handling_Suite* %memsuite, i8* %nameSep) #0 !dbg !658 {
entry:
  %encodingName.addr = alloca i8*, align 8
  %memsuite.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %nameSep.addr = alloca i8*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1081, metadata !1076), !dbg !1082
  store %struct.XML_Memory_Handling_Suite* %memsuite, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %memsuite.addr, metadata !1083, metadata !1076), !dbg !1084
  store i8* %nameSep, i8** %nameSep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nameSep.addr, metadata !1085, metadata !1076), !dbg !1086
  %0 = load i8*, i8** %encodingName.addr, align 8, !dbg !1087
  %1 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !1088
  %2 = load i8*, i8** %nameSep.addr, align 8, !dbg !1089
  %call = call %struct.XML_ParserStruct* @parserCreate(i8* %0, %struct.XML_Memory_Handling_Suite* %1, i8* %2, %struct.DTD* null), !dbg !1090
  ret %struct.XML_ParserStruct* %call, !dbg !1091
}

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @XML_ParserCreateNS(i8* %encodingName, i8 signext %nsSep) #0 !dbg !655 {
entry:
  %encodingName.addr = alloca i8*, align 8
  %nsSep.addr = alloca i8, align 1
  %tmp = alloca [2 x i8], align 1
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1092, metadata !1076), !dbg !1093
  store i8 %nsSep, i8* %nsSep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nsSep.addr, metadata !1094, metadata !1076), !dbg !1095
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !1096, metadata !1076), !dbg !1098
  %0 = load i8, i8* %nsSep.addr, align 1, !dbg !1099
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !1100
  store i8 %0, i8* %arraydecay, align 1, !dbg !1101
  %1 = load i8*, i8** %encodingName.addr, align 8, !dbg !1102
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !1103
  %call = call %struct.XML_ParserStruct* @XML_ParserCreate_MM(i8* %1, %struct.XML_Memory_Handling_Suite* null, i8* %arraydecay1), !dbg !1104
  ret %struct.XML_ParserStruct* %call, !dbg !1105
}

; Function Attrs: nounwind uwtable
define internal %struct.XML_ParserStruct* @parserCreate(i8* %encodingName, %struct.XML_Memory_Handling_Suite* %memsuite, i8* %nameSep, %struct.DTD* %dtd) #0 !dbg !850 {
entry:
  %retval = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %memsuite.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %nameSep.addr = alloca i8*, align 8
  %dtd.addr = alloca %struct.DTD*, align 8
  %parser = alloca %struct.XML_ParserStruct*, align 8
  %mtemp = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %mtemp6 = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1106, metadata !1076), !dbg !1107
  store %struct.XML_Memory_Handling_Suite* %memsuite, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %memsuite.addr, metadata !1108, metadata !1076), !dbg !1109
  store i8* %nameSep, i8** %nameSep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nameSep.addr, metadata !1110, metadata !1076), !dbg !1111
  store %struct.DTD* %dtd, %struct.DTD** %dtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd.addr, metadata !1112, metadata !1076), !dbg !1113
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser, metadata !1114, metadata !1076), !dbg !1115
  %0 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !1116
  %tobool = icmp ne %struct.XML_Memory_Handling_Suite* %0, null, !dbg !1116
  br i1 %tobool, label %if.then, label %if.else, !dbg !1118

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %mtemp, metadata !1119, metadata !1076), !dbg !1121
  %1 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !1122
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %1, i32 0, i32 0, !dbg !1123
  %2 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !1123
  %call = call i8* %2(i64 904), !dbg !1122
  %3 = bitcast i8* %call to %struct.XML_ParserStruct*, !dbg !1124
  store %struct.XML_ParserStruct* %3, %struct.XML_ParserStruct** %parser, align 8, !dbg !1125
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1126
  %cmp = icmp ne %struct.XML_ParserStruct* %4, null, !dbg !1128
  br i1 %cmp, label %if.then1, label %if.end, !dbg !1129

if.then1:                                         ; preds = %if.then
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1130
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 3, !dbg !1132
  store %struct.XML_Memory_Handling_Suite* %m_mem, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !1133
  %6 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !1134
  %malloc_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %6, i32 0, i32 0, !dbg !1135
  %7 = load i8* (i64)*, i8* (i64)** %malloc_fcn2, align 8, !dbg !1135
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !1136
  %malloc_fcn3 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %8, i32 0, i32 0, !dbg !1137
  store i8* (i64)* %7, i8* (i64)** %malloc_fcn3, align 8, !dbg !1138
  %9 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !1139
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %9, i32 0, i32 1, !dbg !1140
  %10 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !1140
  %11 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !1141
  %realloc_fcn4 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %11, i32 0, i32 1, !dbg !1142
  store i8* (i8*, i64)* %10, i8* (i8*, i64)** %realloc_fcn4, align 8, !dbg !1143
  %12 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8, !dbg !1144
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %12, i32 0, i32 2, !dbg !1145
  %13 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !1145
  %14 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8, !dbg !1146
  %free_fcn5 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %14, i32 0, i32 2, !dbg !1147
  store void (i8*)* %13, void (i8*)** %free_fcn5, align 8, !dbg !1148
  br label %if.end, !dbg !1149

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end15, !dbg !1150

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %mtemp6, metadata !1151, metadata !1076), !dbg !1153
  %call7 = call noalias i8* @malloc(i64 904) #7, !dbg !1154
  %15 = bitcast i8* %call7 to %struct.XML_ParserStruct*, !dbg !1155
  store %struct.XML_ParserStruct* %15, %struct.XML_ParserStruct** %parser, align 8, !dbg !1156
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1157
  %cmp8 = icmp ne %struct.XML_ParserStruct* %16, null, !dbg !1159
  br i1 %cmp8, label %if.then9, label %if.end14, !dbg !1160

if.then9:                                         ; preds = %if.else
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1161
  %m_mem10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 3, !dbg !1163
  store %struct.XML_Memory_Handling_Suite* %m_mem10, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !1164
  %18 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !1165
  %malloc_fcn11 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %18, i32 0, i32 0, !dbg !1166
  store i8* (i64)* @malloc, i8* (i64)** %malloc_fcn11, align 8, !dbg !1167
  %19 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !1168
  %realloc_fcn12 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %19, i32 0, i32 1, !dbg !1169
  store i8* (i8*, i64)* @realloc, i8* (i8*, i64)** %realloc_fcn12, align 8, !dbg !1170
  %20 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8, !dbg !1171
  %free_fcn13 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %20, i32 0, i32 2, !dbg !1172
  store void (i8*)* @free, void (i8*)** %free_fcn13, align 8, !dbg !1173
  br label %if.end14, !dbg !1174

if.end14:                                         ; preds = %if.then9, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1175
  %tobool16 = icmp ne %struct.XML_ParserStruct* %21, null, !dbg !1175
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !1177

if.then17:                                        ; preds = %if.end15
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1178
  store %struct.XML_ParserStruct* %22, %struct.XML_ParserStruct** %retval, align 8, !dbg !1179
  br label %return, !dbg !1179

if.end18:                                         ; preds = %if.end15
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1180
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 2, !dbg !1180
  store i8* null, i8** %m_buffer, align 8, !dbg !1181
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1182
  %m_bufferLim = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 6, !dbg !1182
  store i8* null, i8** %m_bufferLim, align 8, !dbg !1183
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1184
  %m_attsSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 71, !dbg !1184
  store i32 16, i32* %m_attsSize, align 8, !dbg !1185
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1186
  %m_mem19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 3, !dbg !1186
  %malloc_fcn20 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem19, i32 0, i32 0, !dbg !1186
  %27 = load i8* (i64)*, i8* (i64)** %malloc_fcn20, align 8, !dbg !1186
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1186
  %m_attsSize21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 71, !dbg !1186
  %29 = load i32, i32* %m_attsSize21, align 8, !dbg !1186
  %conv = sext i32 %29 to i64, !dbg !1186
  %mul = mul i64 %conv, 32, !dbg !1186
  %call22 = call i8* %27(i64 %mul), !dbg !1186
  %30 = bitcast i8* %call22 to %struct.ATTRIBUTE*, !dbg !1187
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1188
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 74, !dbg !1188
  store %struct.ATTRIBUTE* %30, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !1189
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1190
  %m_atts23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 74, !dbg !1190
  %33 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts23, align 8, !dbg !1190
  %cmp24 = icmp eq %struct.ATTRIBUTE* %33, null, !dbg !1192
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !1193

if.then26:                                        ; preds = %if.end18
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1194
  %m_mem27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 3, !dbg !1194
  %free_fcn28 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem27, i32 0, i32 2, !dbg !1194
  %35 = load void (i8*)*, void (i8*)** %free_fcn28, align 8, !dbg !1194
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1194
  %37 = bitcast %struct.XML_ParserStruct* %36 to i8*, !dbg !1194
  call void %35(i8* %37), !dbg !1194
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, align 8, !dbg !1196
  br label %return, !dbg !1196

if.end29:                                         ; preds = %if.end18
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1197
  %m_mem30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 3, !dbg !1197
  %malloc_fcn31 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem30, i32 0, i32 0, !dbg !1197
  %39 = load i8* (i64)*, i8* (i64)** %malloc_fcn31, align 8, !dbg !1197
  %call32 = call i8* %39(i64 1024), !dbg !1197
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1198
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 9, !dbg !1198
  store i8* %call32, i8** %m_dataBuf, align 8, !dbg !1199
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1200
  %m_dataBuf33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 9, !dbg !1200
  %42 = load i8*, i8** %m_dataBuf33, align 8, !dbg !1200
  %cmp34 = icmp eq i8* %42, null, !dbg !1202
  br i1 %cmp34, label %if.then36, label %if.end42, !dbg !1203

if.then36:                                        ; preds = %if.end29
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1204
  %m_mem37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 3, !dbg !1204
  %free_fcn38 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem37, i32 0, i32 2, !dbg !1204
  %44 = load void (i8*)*, void (i8*)** %free_fcn38, align 8, !dbg !1204
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1204
  %m_atts39 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 74, !dbg !1204
  %46 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts39, align 8, !dbg !1204
  %47 = bitcast %struct.ATTRIBUTE* %46 to i8*, !dbg !1204
  call void %44(i8* %47), !dbg !1204
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1206
  %m_mem40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 3, !dbg !1206
  %free_fcn41 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem40, i32 0, i32 2, !dbg !1206
  %49 = load void (i8*)*, void (i8*)** %free_fcn41, align 8, !dbg !1206
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1206
  %51 = bitcast %struct.XML_ParserStruct* %50 to i8*, !dbg !1206
  call void %49(i8* %51), !dbg !1206
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, align 8, !dbg !1207
  br label %return, !dbg !1207

if.end42:                                         ; preds = %if.end29
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1208
  %m_dataBuf43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 9, !dbg !1208
  %53 = load i8*, i8** %m_dataBuf43, align 8, !dbg !1208
  %add.ptr = getelementptr inbounds i8, i8* %53, i64 1024, !dbg !1209
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1210
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 10, !dbg !1210
  store i8* %add.ptr, i8** %m_dataBufEnd, align 8, !dbg !1211
  %55 = load %struct.DTD*, %struct.DTD** %dtd.addr, align 8, !dbg !1212
  %tobool44 = icmp ne %struct.DTD* %55, null, !dbg !1212
  br i1 %tobool44, label %if.then45, label %if.else46, !dbg !1214

if.then45:                                        ; preds = %if.end42
  %56 = load %struct.DTD*, %struct.DTD** %dtd.addr, align 8, !dbg !1215
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1216
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 65, !dbg !1216
  store %struct.DTD* %56, %struct.DTD** %m_dtd, align 8, !dbg !1217
  br label %if.end63, !dbg !1216

if.else46:                                        ; preds = %if.end42
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1218
  %m_mem47 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 3, !dbg !1220
  %call48 = call %struct.DTD* @dtdCreate(%struct.XML_Memory_Handling_Suite* %m_mem47), !dbg !1221
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1222
  %m_dtd49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 65, !dbg !1222
  store %struct.DTD* %call48, %struct.DTD** %m_dtd49, align 8, !dbg !1223
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1224
  %m_dtd50 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 65, !dbg !1224
  %61 = load %struct.DTD*, %struct.DTD** %m_dtd50, align 8, !dbg !1224
  %cmp51 = icmp eq %struct.DTD* %61, null, !dbg !1226
  br i1 %cmp51, label %if.then53, label %if.end62, !dbg !1227

if.then53:                                        ; preds = %if.else46
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1228
  %m_mem54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 3, !dbg !1228
  %free_fcn55 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem54, i32 0, i32 2, !dbg !1228
  %63 = load void (i8*)*, void (i8*)** %free_fcn55, align 8, !dbg !1228
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1228
  %m_dataBuf56 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 9, !dbg !1228
  %65 = load i8*, i8** %m_dataBuf56, align 8, !dbg !1228
  call void %63(i8* %65), !dbg !1228
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1230
  %m_mem57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 3, !dbg !1230
  %free_fcn58 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem57, i32 0, i32 2, !dbg !1230
  %67 = load void (i8*)*, void (i8*)** %free_fcn58, align 8, !dbg !1230
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1230
  %m_atts59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 74, !dbg !1230
  %69 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts59, align 8, !dbg !1230
  %70 = bitcast %struct.ATTRIBUTE* %69 to i8*, !dbg !1230
  call void %67(i8* %70), !dbg !1230
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1231
  %m_mem60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 3, !dbg !1231
  %free_fcn61 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem60, i32 0, i32 2, !dbg !1231
  %72 = load void (i8*)*, void (i8*)** %free_fcn61, align 8, !dbg !1231
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1231
  %74 = bitcast %struct.XML_ParserStruct* %73 to i8*, !dbg !1231
  call void %72(i8* %74), !dbg !1231
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, align 8, !dbg !1232
  br label %return, !dbg !1232

if.end62:                                         ; preds = %if.else46
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then45
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1233
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 70, !dbg !1233
  store %struct.binding* null, %struct.binding** %m_freeBindingList, align 8, !dbg !1234
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1235
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 68, !dbg !1235
  store %struct.tag* null, %struct.tag** %m_freeTagList, align 8, !dbg !1236
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1237
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 51, !dbg !1237
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !1238
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1239
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 82, !dbg !1239
  store i32 0, i32* %m_groupSize, align 8, !dbg !1240
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1241
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 81, !dbg !1241
  store i8* null, i8** %m_groupConnector, align 8, !dbg !1242
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1243
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 29, !dbg !1243
  store i32 (i8*, i8*, %struct.XML_Encoding*)* null, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !1244
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1245
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 42, !dbg !1245
  store i8* null, i8** %m_unknownEncodingHandlerData, align 8, !dbg !1246
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1247
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 83, !dbg !1247
  store i8 33, i8* %m_namespaceSeparator, align 4, !dbg !1248
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1249
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 38, !dbg !1249
  store i8 0, i8* %m_ns, align 8, !dbg !1250
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1251
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 39, !dbg !1251
  store i8 0, i8* %m_ns_triplets, align 1, !dbg !1252
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1253
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 75, !dbg !1253
  store %struct.NS_ATT* null, %struct.NS_ATT** %m_nsAtts, align 8, !dbg !1254
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1255
  %m_nsAttsVersion = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 76, !dbg !1255
  store i64 0, i64* %m_nsAttsVersion, align 8, !dbg !1256
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1257
  %m_nsAttsPower = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 77, !dbg !1257
  store i8 0, i8* %m_nsAttsPower, align 8, !dbg !1258
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1259
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 79, !dbg !1259
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1260
  %m_mem64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 3, !dbg !1261
  call void @poolInit(%struct.STRING_POOL* %m_tempPool, %struct.XML_Memory_Handling_Suite* %m_mem64), !dbg !1262
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1263
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 80, !dbg !1263
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1264
  %m_mem65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 3, !dbg !1265
  call void @poolInit(%struct.STRING_POOL* %m_temp2Pool, %struct.XML_Memory_Handling_Suite* %m_mem65), !dbg !1266
  %92 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1267
  %93 = load i8*, i8** %encodingName.addr, align 8, !dbg !1268
  call void @parserInit(%struct.XML_ParserStruct* %92, i8* %93), !dbg !1269
  %94 = load i8*, i8** %encodingName.addr, align 8, !dbg !1270
  %tobool66 = icmp ne i8* %94, null, !dbg !1270
  br i1 %tobool66, label %land.lhs.true, label %if.end69, !dbg !1272

land.lhs.true:                                    ; preds = %if.end63
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1273
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 37, !dbg !1273
  %96 = load i8*, i8** %m_protocolEncodingName, align 8, !dbg !1273
  %tobool67 = icmp ne i8* %96, null, !dbg !1273
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !1275

if.then68:                                        ; preds = %land.lhs.true
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1276
  call void @XML_ParserFree(%struct.XML_ParserStruct* %97), !dbg !1278
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, align 8, !dbg !1279
  br label %return, !dbg !1279

if.end69:                                         ; preds = %land.lhs.true, %if.end63
  %98 = load i8*, i8** %nameSep.addr, align 8, !dbg !1280
  %tobool70 = icmp ne i8* %98, null, !dbg !1280
  br i1 %tobool70, label %if.then71, label %if.else75, !dbg !1282

if.then71:                                        ; preds = %if.end69
  %99 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1283
  %m_ns72 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %99, i32 0, i32 38, !dbg !1283
  store i8 1, i8* %m_ns72, align 8, !dbg !1285
  %call73 = call %struct.encoding* @XmlGetUtf8InternalEncoding(), !dbg !1286
  %100 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1287
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %100, i32 0, i32 36, !dbg !1287
  store %struct.encoding* %call73, %struct.encoding** %m_internalEncoding, align 8, !dbg !1288
  %101 = load i8*, i8** %nameSep.addr, align 8, !dbg !1289
  %102 = load i8, i8* %101, align 1, !dbg !1290
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1291
  %m_namespaceSeparator74 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 83, !dbg !1291
  store i8 %102, i8* %m_namespaceSeparator74, align 4, !dbg !1292
  br label %if.end78, !dbg !1293

if.else75:                                        ; preds = %if.end69
  %call76 = call %struct.encoding* @XmlGetUtf8InternalEncoding(), !dbg !1294
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1296
  %m_internalEncoding77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 36, !dbg !1296
  store %struct.encoding* %call76, %struct.encoding** %m_internalEncoding77, align 8, !dbg !1297
  br label %if.end78

if.end78:                                         ; preds = %if.else75, %if.then71
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1298
  store %struct.XML_ParserStruct* %105, %struct.XML_ParserStruct** %retval, align 8, !dbg !1299
  br label %return, !dbg !1299

return:                                           ; preds = %if.end78, %if.then68, %if.then53, %if.then36, %if.then26, %if.then17
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %retval, align 8, !dbg !1300
  ret %struct.XML_ParserStruct* %106, !dbg !1300
}

; Function Attrs: nounwind uwtable
define zeroext i8 @XML_ParserReset(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 !dbg !661 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %tStk = alloca %struct.tag*, align 8
  %openEntityList = alloca %struct.open_internal_entity*, align 8
  %tag = alloca %struct.tag*, align 8
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1301, metadata !1076), !dbg !1302
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1303, metadata !1076), !dbg !1304
  call void @llvm.dbg.declare(metadata %struct.tag** %tStk, metadata !1305, metadata !1076), !dbg !1306
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntityList, metadata !1307, metadata !1076), !dbg !1308
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1309
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 84, !dbg !1309
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !1309
  %tobool = icmp ne %struct.XML_ParserStruct* %1, null, !dbg !1309
  br i1 %tobool, label %if.then, label %if.end, !dbg !1311

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !1312
  br label %return, !dbg !1312

if.end:                                           ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1313
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 67, !dbg !1313
  %3 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !1313
  store %struct.tag* %3, %struct.tag** %tStk, align 8, !dbg !1314
  br label %while.cond, !dbg !1315

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load %struct.tag*, %struct.tag** %tStk, align 8, !dbg !1316
  %tobool1 = icmp ne %struct.tag* %4, null, !dbg !1318
  br i1 %tobool1, label %while.body, label %while.end, !dbg !1318

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.tag** %tag, metadata !1319, metadata !1076), !dbg !1321
  %5 = load %struct.tag*, %struct.tag** %tStk, align 8, !dbg !1322
  store %struct.tag* %5, %struct.tag** %tag, align 8, !dbg !1321
  %6 = load %struct.tag*, %struct.tag** %tStk, align 8, !dbg !1323
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %6, i32 0, i32 0, !dbg !1324
  %7 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !1324
  store %struct.tag* %7, %struct.tag** %tStk, align 8, !dbg !1325
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1326
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 68, !dbg !1326
  %9 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8, !dbg !1326
  %10 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !1327
  %parent2 = getelementptr inbounds %struct.tag, %struct.tag* %10, i32 0, i32 0, !dbg !1328
  store %struct.tag* %9, %struct.tag** %parent2, align 8, !dbg !1329
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1330
  %12 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !1331
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %12, i32 0, i32 6, !dbg !1332
  %13 = load %struct.binding*, %struct.binding** %bindings, align 8, !dbg !1332
  call void @moveToFreeBindingList(%struct.XML_ParserStruct* %11, %struct.binding* %13), !dbg !1333
  %14 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !1334
  %bindings3 = getelementptr inbounds %struct.tag, %struct.tag* %14, i32 0, i32 6, !dbg !1335
  store %struct.binding* null, %struct.binding** %bindings3, align 8, !dbg !1336
  %15 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !1337
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1338
  %m_freeTagList4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 68, !dbg !1338
  store %struct.tag* %15, %struct.tag** %m_freeTagList4, align 8, !dbg !1339
  br label %while.cond, !dbg !1340

while.end:                                        ; preds = %while.cond
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1342
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 50, !dbg !1342
  %18 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !1342
  store %struct.open_internal_entity* %18, %struct.open_internal_entity** %openEntityList, align 8, !dbg !1343
  br label %while.cond5, !dbg !1344

while.cond5:                                      ; preds = %while.body7, %while.end
  %19 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntityList, align 8, !dbg !1345
  %tobool6 = icmp ne %struct.open_internal_entity* %19, null, !dbg !1346
  br i1 %tobool6, label %while.body7, label %while.end10, !dbg !1346

while.body7:                                      ; preds = %while.cond5
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !1347, metadata !1076), !dbg !1349
  %20 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntityList, align 8, !dbg !1350
  store %struct.open_internal_entity* %20, %struct.open_internal_entity** %openEntity, align 8, !dbg !1349
  %21 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !1351
  %next = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %21, i32 0, i32 2, !dbg !1352
  %22 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next, align 8, !dbg !1352
  store %struct.open_internal_entity* %22, %struct.open_internal_entity** %openEntityList, align 8, !dbg !1353
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1354
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 51, !dbg !1354
  %24 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !1354
  %25 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !1355
  %next8 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %25, i32 0, i32 2, !dbg !1356
  store %struct.open_internal_entity* %24, %struct.open_internal_entity** %next8, align 8, !dbg !1357
  %26 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !1358
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1359
  %m_freeInternalEntities9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 51, !dbg !1359
  store %struct.open_internal_entity* %26, %struct.open_internal_entity** %m_freeInternalEntities9, align 8, !dbg !1360
  br label %while.cond5, !dbg !1361

while.end10:                                      ; preds = %while.cond5
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1362
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1363
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 69, !dbg !1363
  %30 = load %struct.binding*, %struct.binding** %m_inheritedBindings, align 8, !dbg !1363
  call void @moveToFreeBindingList(%struct.XML_ParserStruct* %28, %struct.binding* %30), !dbg !1364
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1365
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 3, !dbg !1365
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !1365
  %32 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !1365
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1365
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 40, !dbg !1365
  %34 = load i8*, i8** %m_unknownEncodingMem, align 8, !dbg !1365
  call void %32(i8* %34), !dbg !1365
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1366
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 43, !dbg !1366
  %36 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !1366
  %tobool11 = icmp ne void (i8*)* %36, null, !dbg !1366
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !1368

if.then12:                                        ; preds = %while.end10
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1369
  %m_unknownEncodingRelease13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 43, !dbg !1369
  %38 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease13, align 8, !dbg !1369
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1370
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 41, !dbg !1370
  %40 = load i8*, i8** %m_unknownEncodingData, align 8, !dbg !1370
  call void %38(i8* %40), !dbg !1369
  br label %if.end14, !dbg !1369

if.end14:                                         ; preds = %if.then12, %while.end10
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1371
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 79, !dbg !1371
  call void @poolClear(%struct.STRING_POOL* %m_tempPool), !dbg !1372
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1373
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 80, !dbg !1373
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool), !dbg !1374
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1375
  %44 = load i8*, i8** %encodingName.addr, align 8, !dbg !1376
  call void @parserInit(%struct.XML_ParserStruct* %43, i8* %44), !dbg !1377
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1378
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 65, !dbg !1378
  %46 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !1378
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1379
  %m_mem15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 3, !dbg !1380
  call void @dtdReset(%struct.DTD* %46, %struct.XML_Memory_Handling_Suite* %m_mem15), !dbg !1381
  store i8 1, i8* %retval, align 1, !dbg !1382
  br label %return, !dbg !1382

return:                                           ; preds = %if.end14, %if.then
  %48 = load i8, i8* %retval, align 1, !dbg !1383
  ret i8 %48, !dbg !1383
}

; Function Attrs: nounwind uwtable
define internal void @moveToFreeBindingList(%struct.XML_ParserStruct* %parser, %struct.binding* %bindings) #0 !dbg !864 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %bindings.addr = alloca %struct.binding*, align 8
  %b = alloca %struct.binding*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1384, metadata !1076), !dbg !1385
  store %struct.binding* %bindings, %struct.binding** %bindings.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.binding** %bindings.addr, metadata !1386, metadata !1076), !dbg !1387
  br label %while.cond, !dbg !1388

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !1389
  %tobool = icmp ne %struct.binding* %0, null, !dbg !1391
  br i1 %tobool, label %while.body, label %while.end, !dbg !1391

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !1392, metadata !1076), !dbg !1394
  %1 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !1395
  store %struct.binding* %1, %struct.binding** %b, align 8, !dbg !1394
  %2 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !1396
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %2, i32 0, i32 1, !dbg !1397
  %3 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !1397
  store %struct.binding* %3, %struct.binding** %bindings.addr, align 8, !dbg !1398
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1399
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 70, !dbg !1399
  %5 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !1399
  %6 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !1400
  %nextTagBinding1 = getelementptr inbounds %struct.binding, %struct.binding* %6, i32 0, i32 1, !dbg !1401
  store %struct.binding* %5, %struct.binding** %nextTagBinding1, align 8, !dbg !1402
  %7 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !1403
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1404
  %m_freeBindingList2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 70, !dbg !1404
  store %struct.binding* %7, %struct.binding** %m_freeBindingList2, align 8, !dbg !1405
  br label %while.cond, !dbg !1406

while.end:                                        ; preds = %while.cond
  ret void, !dbg !1408
}

; Function Attrs: nounwind uwtable
define internal void @poolClear(%struct.STRING_POOL* %pool) #0 !dbg !1016 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %p = alloca %struct.block*, align 8
  %tem = alloca %struct.block*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1409, metadata !1076), !dbg !1410
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1411
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 1, !dbg !1413
  %1 = load %struct.block*, %struct.block** %freeBlocks, align 8, !dbg !1413
  %tobool = icmp ne %struct.block* %1, null, !dbg !1411
  br i1 %tobool, label %if.else, label %if.then, !dbg !1414

if.then:                                          ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1415
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 0, !dbg !1416
  %3 = load %struct.block*, %struct.block** %blocks, align 8, !dbg !1416
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1417
  %freeBlocks1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 1, !dbg !1418
  store %struct.block* %3, %struct.block** %freeBlocks1, align 8, !dbg !1419
  br label %if.end, !dbg !1417

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.block** %p, metadata !1420, metadata !1076), !dbg !1422
  %5 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1423
  %blocks2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %5, i32 0, i32 0, !dbg !1424
  %6 = load %struct.block*, %struct.block** %blocks2, align 8, !dbg !1424
  store %struct.block* %6, %struct.block** %p, align 8, !dbg !1422
  br label %while.cond, !dbg !1425

while.cond:                                       ; preds = %while.body, %if.else
  %7 = load %struct.block*, %struct.block** %p, align 8, !dbg !1426
  %tobool3 = icmp ne %struct.block* %7, null, !dbg !1428
  br i1 %tobool3, label %while.body, label %while.end, !dbg !1428

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.block** %tem, metadata !1429, metadata !1076), !dbg !1431
  %8 = load %struct.block*, %struct.block** %p, align 8, !dbg !1432
  %next = getelementptr inbounds %struct.block, %struct.block* %8, i32 0, i32 0, !dbg !1433
  %9 = load %struct.block*, %struct.block** %next, align 8, !dbg !1433
  store %struct.block* %9, %struct.block** %tem, align 8, !dbg !1431
  %10 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1434
  %freeBlocks4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %10, i32 0, i32 1, !dbg !1435
  %11 = load %struct.block*, %struct.block** %freeBlocks4, align 8, !dbg !1435
  %12 = load %struct.block*, %struct.block** %p, align 8, !dbg !1436
  %next5 = getelementptr inbounds %struct.block, %struct.block* %12, i32 0, i32 0, !dbg !1437
  store %struct.block* %11, %struct.block** %next5, align 8, !dbg !1438
  %13 = load %struct.block*, %struct.block** %p, align 8, !dbg !1439
  %14 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1440
  %freeBlocks6 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %14, i32 0, i32 1, !dbg !1441
  store %struct.block* %13, %struct.block** %freeBlocks6, align 8, !dbg !1442
  %15 = load %struct.block*, %struct.block** %tem, align 8, !dbg !1443
  store %struct.block* %15, %struct.block** %p, align 8, !dbg !1444
  br label %while.cond, !dbg !1445

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1447
  %blocks7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 0, !dbg !1448
  store %struct.block* null, %struct.block** %blocks7, align 8, !dbg !1449
  %17 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1450
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %17, i32 0, i32 4, !dbg !1451
  store i8* null, i8** %start, align 8, !dbg !1452
  %18 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1453
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %18, i32 0, i32 3, !dbg !1454
  store i8* null, i8** %ptr, align 8, !dbg !1455
  %19 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1456
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %19, i32 0, i32 2, !dbg !1457
  store i8* null, i8** %end, align 8, !dbg !1458
  ret void, !dbg !1459
}

; Function Attrs: nounwind uwtable
define internal void @parserInit(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 !dbg !867 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1460, metadata !1076), !dbg !1461
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1462, metadata !1076), !dbg !1463
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1464
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 45, !dbg !1464
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !1465
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1466
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 44, !dbg !1466
  call void @XmlPrologStateInit(%struct.prolog_state* %m_prologState), !dbg !1467
  %2 = load i8*, i8** %encodingName.addr, align 8, !dbg !1468
  %cmp = icmp ne i8* %2, null, !dbg !1469
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1468

cond.true:                                        ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1470
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 79, !dbg !1470
  %4 = load i8*, i8** %encodingName.addr, align 8, !dbg !1471
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %m_tempPool, i8* %4), !dbg !1472
  br label %cond.end, !dbg !1473

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !1475

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !1477
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1479
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 37, !dbg !1479
  store i8* %cond, i8** %m_protocolEncodingName, align 8, !dbg !1480
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1481
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 66, !dbg !1481
  store i8* null, i8** %m_curBase, align 8, !dbg !1482
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1483
  %m_initEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 35, !dbg !1483
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1484
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 34, !dbg !1484
  %call1 = call i32 @XmlInitEncoding(%struct.INIT_ENCODING* %m_initEncoding, %struct.encoding** %m_encoding, i8* null), !dbg !1485
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1486
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 0, !dbg !1486
  store i8* null, i8** %m_userData, align 8, !dbg !1487
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1488
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 1, !dbg !1488
  store i8* null, i8** %m_handlerArg, align 8, !dbg !1489
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1490
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 11, !dbg !1490
  store void (i8*, i8*, i8**)* null, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !1491
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1492
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 12, !dbg !1492
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !1493
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1494
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 13, !dbg !1494
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !1495
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1496
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 14, !dbg !1496
  store void (i8*, i8*, i8*)* null, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !1497
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1498
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 15, !dbg !1498
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !1499
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1500
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 16, !dbg !1500
  store void (i8*)* null, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !1501
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1502
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 17, !dbg !1502
  store void (i8*)* null, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !1503
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1504
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 18, !dbg !1504
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !1505
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1506
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 19, !dbg !1506
  store void (i8*, i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !1507
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1508
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 20, !dbg !1508
  store void (i8*)* null, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !1509
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1510
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 21, !dbg !1510
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !1511
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1512
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 22, !dbg !1512
  store void (i8*, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !1513
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1514
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 23, !dbg !1514
  store void (i8*, i8*, i8*)* null, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !1515
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1516
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 24, !dbg !1516
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !1517
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1518
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 25, !dbg !1518
  store i32 (i8*)* null, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !1519
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1520
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 26, !dbg !1520
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* null, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !1521
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1522
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1523
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 27, !dbg !1523
  store %struct.XML_ParserStruct* %27, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !1524
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1525
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 28, !dbg !1525
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !1526
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1527
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 30, !dbg !1527
  store void (i8*, i8*, %struct.XML_cp*)* null, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !1528
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1529
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 31, !dbg !1529
  store void (i8*, i8*, i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !1530
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1531
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 32, !dbg !1531
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !1532
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1533
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 33, !dbg !1533
  store void (i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !1534
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1535
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 2, !dbg !1535
  %35 = load i8*, i8** %m_buffer, align 8, !dbg !1535
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1536
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 4, !dbg !1536
  store i8* %35, i8** %m_bufferPtr, align 8, !dbg !1537
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1538
  %m_buffer2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 2, !dbg !1538
  %38 = load i8*, i8** %m_buffer2, align 8, !dbg !1538
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1539
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 5, !dbg !1539
  store i8* %38, i8** %m_bufferEnd, align 8, !dbg !1540
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1541
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 7, !dbg !1541
  store i64 0, i64* %m_parseEndByteIndex, align 8, !dbg !1542
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1543
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 8, !dbg !1543
  store i8* null, i8** %m_parseEndPtr, align 8, !dbg !1544
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1545
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 61, !dbg !1545
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %m_declElementType, align 8, !dbg !1546
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1547
  %m_declAttributeId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 62, !dbg !1547
  store %struct.attribute_id* null, %struct.attribute_id** %m_declAttributeId, align 8, !dbg !1548
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1549
  %m_declEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 54, !dbg !1549
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity, align 8, !dbg !1550
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1551
  %m_doctypeName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 55, !dbg !1551
  store i8* null, i8** %m_doctypeName, align 8, !dbg !1552
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1553
  %m_doctypeSysid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 56, !dbg !1553
  store i8* null, i8** %m_doctypeSysid, align 8, !dbg !1554
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1555
  %m_doctypePubid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 57, !dbg !1555
  store i8* null, i8** %m_doctypePubid, align 8, !dbg !1556
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1557
  %m_declAttributeType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 58, !dbg !1557
  store i8* null, i8** %m_declAttributeType, align 8, !dbg !1558
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1559
  %m_declNotationName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 59, !dbg !1559
  store i8* null, i8** %m_declNotationName, align 8, !dbg !1560
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1561
  %m_declNotationPublicId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 60, !dbg !1561
  store i8* null, i8** %m_declNotationPublicId, align 8, !dbg !1562
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1563
  %m_declAttributeIsCdata = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 63, !dbg !1563
  store i8 0, i8* %m_declAttributeIsCdata, align 8, !dbg !1564
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1565
  %m_declAttributeIsId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 64, !dbg !1565
  store i8 0, i8* %m_declAttributeIsId, align 1, !dbg !1566
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1567
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 78, !dbg !1567
  %54 = bitcast %struct.position* %m_position to i8*, !dbg !1568
  call void @llvm.memset.p0i8.i64(i8* %54, i8 0, i64 16, i32 8, i1 false), !dbg !1568
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1569
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 46, !dbg !1569
  store i32 0, i32* %m_errorCode, align 8, !dbg !1570
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1571
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 47, !dbg !1571
  store i8* null, i8** %m_eventPtr, align 8, !dbg !1572
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1573
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 48, !dbg !1573
  store i8* null, i8** %m_eventEndPtr, align 8, !dbg !1574
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1575
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 49, !dbg !1575
  store i8* null, i8** %m_positionPtr, align 8, !dbg !1576
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1577
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 50, !dbg !1577
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !1578
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1579
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 52, !dbg !1579
  store i8 1, i8* %m_defaultExpandInternalEntities, align 8, !dbg !1580
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1581
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 53, !dbg !1581
  store i32 0, i32* %m_tagLevel, align 4, !dbg !1582
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1583
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 67, !dbg !1583
  store %struct.tag* null, %struct.tag** %m_tagStack, align 8, !dbg !1584
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1585
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 69, !dbg !1585
  store %struct.binding* null, %struct.binding** %m_inheritedBindings, align 8, !dbg !1586
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1587
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 72, !dbg !1587
  store i32 0, i32* %m_nSpecifiedAtts, align 4, !dbg !1588
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1589
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 40, !dbg !1589
  store i8* null, i8** %m_unknownEncodingMem, align 8, !dbg !1590
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1591
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 43, !dbg !1591
  store void (i8*)* null, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !1592
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1593
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 41, !dbg !1593
  store i8* null, i8** %m_unknownEncodingData, align 8, !dbg !1594
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1595
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 84, !dbg !1595
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !1596
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1597
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 85, !dbg !1597
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !1597
  store i32 0, i32* %parsing, align 8, !dbg !1598
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1599
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 86, !dbg !1599
  store i64 0, i64* %m_hash_secret_salt, align 8, !dbg !1600
  ret void, !dbg !1601
}

; Function Attrs: nounwind uwtable
define internal void @dtdReset(%struct.DTD* %p, %struct.XML_Memory_Handling_Suite* %ms) #0 !dbg !995 {
entry:
  %p.addr = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %e = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.DTD* %p, %struct.DTD** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DTD** %p.addr, metadata !1602, metadata !1076), !dbg !1603
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !1604, metadata !1076), !dbg !1605
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !1606, metadata !1076), !dbg !1607
  %0 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1608
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %0, i32 0, i32 1, !dbg !1609
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes), !dbg !1610
  br label %for.cond, !dbg !1611

for.cond:                                         ; preds = %if.end2, %entry
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %e, metadata !1612, metadata !1076), !dbg !1616
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !1617
  %1 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*, !dbg !1618
  store %struct.ELEMENT_TYPE* %1, %struct.ELEMENT_TYPE** %e, align 8, !dbg !1616
  %2 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !1619
  %tobool = icmp ne %struct.ELEMENT_TYPE* %2, null, !dbg !1619
  br i1 %tobool, label %if.end, label %if.then, !dbg !1621

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !1622

if.end:                                           ; preds = %for.cond
  %3 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !1623
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %3, i32 0, i32 4, !dbg !1625
  %4 = load i32, i32* %allocDefaultAtts, align 4, !dbg !1625
  %cmp = icmp ne i32 %4, 0, !dbg !1626
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !1627

if.then1:                                         ; preds = %if.end
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !1628
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %5, i32 0, i32 2, !dbg !1629
  %6 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !1629
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !1630
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %7, i32 0, i32 5, !dbg !1631
  %8 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !1631
  %9 = bitcast %struct.DEFAULT_ATTRIBUTE* %8 to i8*, !dbg !1630
  call void %6(i8* %9), !dbg !1628
  br label %if.end2, !dbg !1628

if.end2:                                          ; preds = %if.then1, %if.end
  br label %for.cond, !dbg !1632

for.end:                                          ; preds = %if.then
  %10 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1634
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 0, !dbg !1635
  call void @hashTableClear(%struct.HASH_TABLE* %generalEntities), !dbg !1636
  %11 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1637
  %elementTypes3 = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 1, !dbg !1638
  call void @hashTableClear(%struct.HASH_TABLE* %elementTypes3), !dbg !1639
  %12 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1640
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 2, !dbg !1641
  call void @hashTableClear(%struct.HASH_TABLE* %attributeIds), !dbg !1642
  %13 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1643
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 3, !dbg !1644
  call void @hashTableClear(%struct.HASH_TABLE* %prefixes), !dbg !1645
  %14 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1646
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 4, !dbg !1647
  call void @poolClear(%struct.STRING_POOL* %pool), !dbg !1648
  %15 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1649
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 5, !dbg !1650
  call void @poolClear(%struct.STRING_POOL* %entityValuePool), !dbg !1651
  %16 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1652
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 9, !dbg !1653
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 0, !dbg !1654
  store i8* null, i8** %name, align 8, !dbg !1655
  %17 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1656
  %defaultPrefix4 = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 9, !dbg !1657
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix4, i32 0, i32 1, !dbg !1658
  store %struct.binding* null, %struct.binding** %binding, align 8, !dbg !1659
  %18 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1660
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 10, !dbg !1661
  store i8 0, i8* %in_eldecl, align 8, !dbg !1662
  %19 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !1663
  %free_fcn5 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %19, i32 0, i32 2, !dbg !1664
  %20 = load void (i8*)*, void (i8*)** %free_fcn5, align 8, !dbg !1664
  %21 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1665
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 16, !dbg !1666
  %22 = load i32*, i32** %scaffIndex, align 8, !dbg !1666
  %23 = bitcast i32* %22 to i8*, !dbg !1665
  call void %20(i8* %23), !dbg !1663
  %24 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1667
  %scaffIndex6 = getelementptr inbounds %struct.DTD, %struct.DTD* %24, i32 0, i32 16, !dbg !1668
  store i32* null, i32** %scaffIndex6, align 8, !dbg !1669
  %25 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !1670
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %25, i32 0, i32 2, !dbg !1671
  %26 = load void (i8*)*, void (i8*)** %free_fcn7, align 8, !dbg !1671
  %27 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1672
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %27, i32 0, i32 11, !dbg !1673
  %28 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !1673
  %29 = bitcast %struct.CONTENT_SCAFFOLD* %28 to i8*, !dbg !1672
  call void %26(i8* %29), !dbg !1670
  %30 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1674
  %scaffold8 = getelementptr inbounds %struct.DTD, %struct.DTD* %30, i32 0, i32 11, !dbg !1675
  store %struct.CONTENT_SCAFFOLD* null, %struct.CONTENT_SCAFFOLD** %scaffold8, align 8, !dbg !1676
  %31 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1677
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 15, !dbg !1678
  store i32 0, i32* %scaffLevel, align 4, !dbg !1679
  %32 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1680
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %32, i32 0, i32 13, !dbg !1681
  store i32 0, i32* %scaffSize, align 4, !dbg !1682
  %33 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1683
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %33, i32 0, i32 14, !dbg !1684
  store i32 0, i32* %scaffCount, align 8, !dbg !1685
  %34 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1686
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %34, i32 0, i32 12, !dbg !1687
  store i32 0, i32* %contentStringLen, align 8, !dbg !1688
  %35 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1689
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %35, i32 0, i32 6, !dbg !1690
  store i8 1, i8* %keepProcessing, align 8, !dbg !1691
  %36 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1692
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %36, i32 0, i32 7, !dbg !1693
  store i8 0, i8* %hasParamEntityRefs, align 1, !dbg !1694
  %37 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !1695
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 8, !dbg !1696
  store i8 0, i8* %standalone, align 2, !dbg !1697
  ret void, !dbg !1698
}

; Function Attrs: nounwind uwtable
define i32 @XML_SetEncoding(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 !dbg !664 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !1699, metadata !1076), !dbg !1700
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1701, metadata !1076), !dbg !1702
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1703
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !1703
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !1703
  %1 = load i32, i32* %parsing, align 8, !dbg !1703
  %cmp = icmp eq i32 %1, 1, !dbg !1705
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1706

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1707
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !1707
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !1707
  %3 = load i32, i32* %parsing2, align 8, !dbg !1707
  %cmp3 = icmp eq i32 %3, 3, !dbg !1709
  br i1 %cmp3, label %if.then, label %if.end, !dbg !1710

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !1711
  br label %return, !dbg !1711

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %encodingName.addr, align 8, !dbg !1712
  %cmp4 = icmp eq i8* %4, null, !dbg !1714
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !1715

if.then5:                                         ; preds = %if.end
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1716
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 37, !dbg !1716
  store i8* null, i8** %m_protocolEncodingName, align 8, !dbg !1717
  br label %if.end10, !dbg !1716

if.else:                                          ; preds = %if.end
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1718
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 79, !dbg !1718
  %7 = load i8*, i8** %encodingName.addr, align 8, !dbg !1720
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %m_tempPool, i8* %7), !dbg !1721
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1722
  %m_protocolEncodingName6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 37, !dbg !1722
  store i8* %call, i8** %m_protocolEncodingName6, align 8, !dbg !1723
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !1724
  %m_protocolEncodingName7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 37, !dbg !1724
  %10 = load i8*, i8** %m_protocolEncodingName7, align 8, !dbg !1724
  %tobool = icmp ne i8* %10, null, !dbg !1724
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !1726

if.then8:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !1727
  br label %return, !dbg !1727

if.end9:                                          ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then5
  store i32 1, i32* %retval, align 4, !dbg !1728
  br label %return, !dbg !1728

return:                                           ; preds = %if.end10, %if.then8, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !1729
  ret i32 %11, !dbg !1729
}

; Function Attrs: nounwind uwtable
define internal i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %s) #0 !dbg !1020 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !1730, metadata !1076), !dbg !1731
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1732, metadata !1076), !dbg !1733
  br label %do.body, !dbg !1734

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1735
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3, !dbg !1735
  %1 = load i8*, i8** %ptr, align 8, !dbg !1735
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1735
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 2, !dbg !1735
  %3 = load i8*, i8** %end, align 8, !dbg !1735
  %cmp = icmp eq i8* %1, %3, !dbg !1735
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !1735

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1738
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %4), !dbg !1738
  %tobool = icmp ne i8 %call, 0, !dbg !1738
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1740

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then, !dbg !1741

cond.false:                                       ; preds = %land.lhs.true, %do.body
  %5 = load i8*, i8** %s.addr, align 8, !dbg !1743
  %6 = load i8, i8* %5, align 1, !dbg !1743
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1743
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 3, !dbg !1743
  %8 = load i8*, i8** %ptr1, align 8, !dbg !1743
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !1743
  store i8* %incdec.ptr, i8** %ptr1, align 8, !dbg !1743
  store i8 %6, i8* %8, align 1, !dbg !1743
  br i1 true, label %if.end, label %if.then, !dbg !1745

if.then:                                          ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, align 8, !dbg !1746
  br label %return, !dbg !1746

if.end:                                           ; preds = %cond.false, %cond.true
  br label %do.cond, !dbg !1747

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %s.addr, align 8, !dbg !1748
  %incdec.ptr2 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !1748
  store i8* %incdec.ptr2, i8** %s.addr, align 8, !dbg !1748
  %10 = load i8, i8* %9, align 1, !dbg !1750
  %tobool3 = icmp ne i8 %10, 0, !dbg !1751
  br i1 %tobool3, label %do.body, label %do.end, !dbg !1751

do.end:                                           ; preds = %do.cond
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1752
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4, !dbg !1753
  %12 = load i8*, i8** %start, align 8, !dbg !1753
  store i8* %12, i8** %s.addr, align 8, !dbg !1754
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1755
  %ptr4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 3, !dbg !1755
  %14 = load i8*, i8** %ptr4, align 8, !dbg !1755
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !1755
  %start5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4, !dbg !1755
  store i8* %14, i8** %start5, align 8, !dbg !1755
  %16 = load i8*, i8** %s.addr, align 8, !dbg !1756
  store i8* %16, i8** %retval, align 8, !dbg !1757
  br label %return, !dbg !1757

return:                                           ; preds = %do.end, %if.then
  %17 = load i8*, i8** %retval, align 8, !dbg !1758
  ret i8* %17, !dbg !1758
}

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @XML_ExternalEntityParserCreate(%struct.XML_ParserStruct* %oldParser, i8* %context, i8* %encodingName) #0 !dbg !667 {
entry:
  %retval = alloca %struct.XML_ParserStruct*, align 8
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %context.addr = alloca i8*, align 8
  %encodingName.addr = alloca i8*, align 8
  %parser = alloca %struct.XML_ParserStruct*, align 8
  %newDtd = alloca %struct.DTD*, align 8
  %oldDtd = alloca %struct.DTD*, align 8
  %oldStartElementHandler = alloca void (i8*, i8*, i8**)*, align 8
  %oldEndElementHandler = alloca void (i8*, i8*)*, align 8
  %oldCharacterDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldProcessingInstructionHandler = alloca void (i8*, i8*, i8*)*, align 8
  %oldCommentHandler = alloca void (i8*, i8*)*, align 8
  %oldStartCdataSectionHandler = alloca void (i8*)*, align 8
  %oldEndCdataSectionHandler = alloca void (i8*)*, align 8
  %oldDefaultHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldUnparsedEntityDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*, i8*)*, align 8
  %oldNotationDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*)*, align 8
  %oldStartNamespaceDeclHandler = alloca void (i8*, i8*, i8*)*, align 8
  %oldEndNamespaceDeclHandler = alloca void (i8*, i8*)*, align 8
  %oldNotStandaloneHandler = alloca i32 (i8*)*, align 8
  %oldExternalEntityRefHandler = alloca i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, align 8
  %oldSkippedEntityHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldUnknownEncodingHandler = alloca i32 (i8*, i8*, %struct.XML_Encoding*)*, align 8
  %oldElementDeclHandler = alloca void (i8*, i8*, %struct.XML_cp*)*, align 8
  %oldAttlistDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %oldEntityDeclHandler = alloca void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, align 8
  %oldXmlDeclHandler = alloca void (i8*, i8*, i8*, i32)*, align 8
  %oldDeclElementType = alloca %struct.ELEMENT_TYPE*, align 8
  %oldUserData = alloca i8*, align 8
  %oldHandlerArg = alloca i8*, align 8
  %oldDefaultExpandInternalEntities = alloca i8, align 1
  %oldExternalEntityRefHandlerArg = alloca %struct.XML_ParserStruct*, align 8
  %oldns_triplets = alloca i8, align 1
  %oldhash_secret_salt = alloca i64, align 8
  %tmp = alloca [2 x i8], align 1
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldParser.addr, metadata !1759, metadata !1076), !dbg !1760
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1761, metadata !1076), !dbg !1762
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !1763, metadata !1076), !dbg !1764
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser, metadata !1765, metadata !1076), !dbg !1766
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !1767
  store %struct.XML_ParserStruct* %0, %struct.XML_ParserStruct** %parser, align 8, !dbg !1766
  call void @llvm.dbg.declare(metadata %struct.DTD** %newDtd, metadata !1768, metadata !1076), !dbg !1769
  store %struct.DTD* null, %struct.DTD** %newDtd, align 8, !dbg !1769
  call void @llvm.dbg.declare(metadata %struct.DTD** %oldDtd, metadata !1770, metadata !1076), !dbg !1771
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1772
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !1772
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !1772
  store %struct.DTD* %2, %struct.DTD** %oldDtd, align 8, !dbg !1771
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8**)** %oldStartElementHandler, metadata !1773, metadata !1076), !dbg !1774
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1775
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 11, !dbg !1775
  %4 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !1775
  store void (i8*, i8*, i8**)* %4, void (i8*, i8*, i8**)** %oldStartElementHandler, align 8, !dbg !1774
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %oldEndElementHandler, metadata !1776, metadata !1076), !dbg !1777
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1778
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 12, !dbg !1778
  %6 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !1778
  store void (i8*, i8*)* %6, void (i8*, i8*)** %oldEndElementHandler, align 8, !dbg !1777
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %oldCharacterDataHandler, metadata !1779, metadata !1076), !dbg !1780
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1781
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 13, !dbg !1781
  %8 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !1781
  store void (i8*, i8*, i32)* %8, void (i8*, i8*, i32)** %oldCharacterDataHandler, align 8, !dbg !1780
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, metadata !1782, metadata !1076), !dbg !1783
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1784
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 14, !dbg !1784
  %10 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !1784
  store void (i8*, i8*, i8*)* %10, void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, align 8, !dbg !1783
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %oldCommentHandler, metadata !1785, metadata !1076), !dbg !1786
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1787
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 15, !dbg !1787
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !1787
  store void (i8*, i8*)* %12, void (i8*, i8*)** %oldCommentHandler, align 8, !dbg !1786
  call void @llvm.dbg.declare(metadata void (i8*)** %oldStartCdataSectionHandler, metadata !1788, metadata !1076), !dbg !1789
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1790
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 16, !dbg !1790
  %14 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !1790
  store void (i8*)* %14, void (i8*)** %oldStartCdataSectionHandler, align 8, !dbg !1789
  call void @llvm.dbg.declare(metadata void (i8*)** %oldEndCdataSectionHandler, metadata !1791, metadata !1076), !dbg !1792
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1793
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 17, !dbg !1793
  %16 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !1793
  store void (i8*)* %16, void (i8*)** %oldEndCdataSectionHandler, align 8, !dbg !1792
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %oldDefaultHandler, metadata !1794, metadata !1076), !dbg !1795
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1796
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 18, !dbg !1796
  %18 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !1796
  store void (i8*, i8*, i32)* %18, void (i8*, i8*, i32)** %oldDefaultHandler, align 8, !dbg !1795
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, metadata !1797, metadata !1076), !dbg !1798
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1799
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 21, !dbg !1799
  %20 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !1799
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %20, void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, align 8, !dbg !1798
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, metadata !1800, metadata !1076), !dbg !1801
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1802
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 22, !dbg !1802
  %22 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !1802
  store void (i8*, i8*, i8*, i8*, i8*)* %22, void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, align 8, !dbg !1801
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, metadata !1803, metadata !1076), !dbg !1804
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1805
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 23, !dbg !1805
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !1805
  store void (i8*, i8*, i8*)* %24, void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, align 8, !dbg !1804
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %oldEndNamespaceDeclHandler, metadata !1806, metadata !1076), !dbg !1807
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1808
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 24, !dbg !1808
  %26 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !1808
  store void (i8*, i8*)* %26, void (i8*, i8*)** %oldEndNamespaceDeclHandler, align 8, !dbg !1807
  call void @llvm.dbg.declare(metadata i32 (i8*)** %oldNotStandaloneHandler, metadata !1809, metadata !1076), !dbg !1810
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1811
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 25, !dbg !1811
  %28 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !1811
  store i32 (i8*)* %28, i32 (i8*)** %oldNotStandaloneHandler, align 8, !dbg !1810
  call void @llvm.dbg.declare(metadata i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, metadata !1812, metadata !1076), !dbg !1813
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1814
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 26, !dbg !1814
  %30 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !1814
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %30, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, align 8, !dbg !1813
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %oldSkippedEntityHandler, metadata !1815, metadata !1076), !dbg !1816
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1817
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 28, !dbg !1817
  %32 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !1817
  store void (i8*, i8*, i32)* %32, void (i8*, i8*, i32)** %oldSkippedEntityHandler, align 8, !dbg !1816
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, metadata !1818, metadata !1076), !dbg !1819
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1820
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 29, !dbg !1820
  %34 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !1820
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %34, i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, align 8, !dbg !1819
  call void @llvm.dbg.declare(metadata void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, metadata !1821, metadata !1076), !dbg !1822
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1823
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 30, !dbg !1823
  %36 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !1823
  store void (i8*, i8*, %struct.XML_cp*)* %36, void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, align 8, !dbg !1822
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, metadata !1824, metadata !1076), !dbg !1825
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1826
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 31, !dbg !1826
  %38 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !1826
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %38, void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, align 8, !dbg !1825
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, metadata !1827, metadata !1076), !dbg !1828
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1829
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 32, !dbg !1829
  %40 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !1829
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %40, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, align 8, !dbg !1828
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, metadata !1830, metadata !1076), !dbg !1831
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1832
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 33, !dbg !1832
  %42 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !1832
  store void (i8*, i8*, i8*, i32)* %42, void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, align 8, !dbg !1831
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %oldDeclElementType, metadata !1833, metadata !1076), !dbg !1834
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1835
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 61, !dbg !1835
  %44 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType, align 8, !dbg !1835
  store %struct.ELEMENT_TYPE* %44, %struct.ELEMENT_TYPE** %oldDeclElementType, align 8, !dbg !1834
  call void @llvm.dbg.declare(metadata i8** %oldUserData, metadata !1836, metadata !1076), !dbg !1837
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1838
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 0, !dbg !1838
  %46 = load i8*, i8** %m_userData, align 8, !dbg !1838
  store i8* %46, i8** %oldUserData, align 8, !dbg !1837
  call void @llvm.dbg.declare(metadata i8** %oldHandlerArg, metadata !1839, metadata !1076), !dbg !1840
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1841
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 1, !dbg !1841
  %48 = load i8*, i8** %m_handlerArg, align 8, !dbg !1841
  store i8* %48, i8** %oldHandlerArg, align 8, !dbg !1840
  call void @llvm.dbg.declare(metadata i8* %oldDefaultExpandInternalEntities, metadata !1842, metadata !1076), !dbg !1843
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1844
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 52, !dbg !1844
  %50 = load i8, i8* %m_defaultExpandInternalEntities, align 8, !dbg !1844
  store i8 %50, i8* %oldDefaultExpandInternalEntities, align 1, !dbg !1843
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, metadata !1845, metadata !1076), !dbg !1846
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1847
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 27, !dbg !1847
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !1847
  store %struct.XML_ParserStruct* %52, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8, !dbg !1846
  call void @llvm.dbg.declare(metadata i8* %oldns_triplets, metadata !1848, metadata !1076), !dbg !1849
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1850
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 39, !dbg !1850
  %54 = load i8, i8* %m_ns_triplets, align 1, !dbg !1850
  store i8 %54, i8* %oldns_triplets, align 1, !dbg !1849
  call void @llvm.dbg.declare(metadata i64* %oldhash_secret_salt, metadata !1851, metadata !1076), !dbg !1852
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1853
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 86, !dbg !1853
  %56 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !1853
  store i64 %56, i64* %oldhash_secret_salt, align 8, !dbg !1852
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1854
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 38, !dbg !1854
  %58 = load i8, i8* %m_ns, align 8, !dbg !1854
  %tobool = icmp ne i8 %58, 0, !dbg !1854
  br i1 %tobool, label %if.then, label %if.else, !dbg !1856

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !1857, metadata !1076), !dbg !1859
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1860
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 83, !dbg !1860
  %60 = load i8, i8* %m_namespaceSeparator, align 4, !dbg !1860
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !1861
  store i8 %60, i8* %arraydecay, align 1, !dbg !1862
  %61 = load i8*, i8** %encodingName.addr, align 8, !dbg !1863
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1864
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 3, !dbg !1865
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0, !dbg !1866
  %63 = load %struct.DTD*, %struct.DTD** %newDtd, align 8, !dbg !1867
  %call = call %struct.XML_ParserStruct* @parserCreate(i8* %61, %struct.XML_Memory_Handling_Suite* %m_mem, i8* %arraydecay1, %struct.DTD* %63), !dbg !1868
  store %struct.XML_ParserStruct* %call, %struct.XML_ParserStruct** %parser, align 8, !dbg !1869
  br label %if.end, !dbg !1870

if.else:                                          ; preds = %entry
  %64 = load i8*, i8** %encodingName.addr, align 8, !dbg !1871
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1873
  %m_mem2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 3, !dbg !1874
  %66 = load %struct.DTD*, %struct.DTD** %newDtd, align 8, !dbg !1875
  %call3 = call %struct.XML_ParserStruct* @parserCreate(i8* %64, %struct.XML_Memory_Handling_Suite* %m_mem2, i8* null, %struct.DTD* %66), !dbg !1876
  store %struct.XML_ParserStruct* %call3, %struct.XML_ParserStruct** %parser, align 8, !dbg !1877
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1878
  %tobool4 = icmp ne %struct.XML_ParserStruct* %67, null, !dbg !1878
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !1880

if.then5:                                         ; preds = %if.end
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, align 8, !dbg !1881
  br label %return, !dbg !1881

if.end6:                                          ; preds = %if.end
  %68 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %oldStartElementHandler, align 8, !dbg !1882
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1883
  %m_startElementHandler7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 11, !dbg !1883
  store void (i8*, i8*, i8**)* %68, void (i8*, i8*, i8**)** %m_startElementHandler7, align 8, !dbg !1884
  %70 = load void (i8*, i8*)*, void (i8*, i8*)** %oldEndElementHandler, align 8, !dbg !1885
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1886
  %m_endElementHandler8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 12, !dbg !1886
  store void (i8*, i8*)* %70, void (i8*, i8*)** %m_endElementHandler8, align 8, !dbg !1887
  %72 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldCharacterDataHandler, align 8, !dbg !1888
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1889
  %m_characterDataHandler9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 13, !dbg !1889
  store void (i8*, i8*, i32)* %72, void (i8*, i8*, i32)** %m_characterDataHandler9, align 8, !dbg !1890
  %74 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, align 8, !dbg !1891
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1892
  %m_processingInstructionHandler10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 14, !dbg !1892
  store void (i8*, i8*, i8*)* %74, void (i8*, i8*, i8*)** %m_processingInstructionHandler10, align 8, !dbg !1893
  %76 = load void (i8*, i8*)*, void (i8*, i8*)** %oldCommentHandler, align 8, !dbg !1894
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1895
  %m_commentHandler11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 15, !dbg !1895
  store void (i8*, i8*)* %76, void (i8*, i8*)** %m_commentHandler11, align 8, !dbg !1896
  %78 = load void (i8*)*, void (i8*)** %oldStartCdataSectionHandler, align 8, !dbg !1897
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1898
  %m_startCdataSectionHandler12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 16, !dbg !1898
  store void (i8*)* %78, void (i8*)** %m_startCdataSectionHandler12, align 8, !dbg !1899
  %80 = load void (i8*)*, void (i8*)** %oldEndCdataSectionHandler, align 8, !dbg !1900
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1901
  %m_endCdataSectionHandler13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 17, !dbg !1901
  store void (i8*)* %80, void (i8*)** %m_endCdataSectionHandler13, align 8, !dbg !1902
  %82 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldDefaultHandler, align 8, !dbg !1903
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1904
  %m_defaultHandler14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 18, !dbg !1904
  store void (i8*, i8*, i32)* %82, void (i8*, i8*, i32)** %m_defaultHandler14, align 8, !dbg !1905
  %84 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, align 8, !dbg !1906
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1907
  %m_unparsedEntityDeclHandler15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 21, !dbg !1907
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %84, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler15, align 8, !dbg !1908
  %86 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, align 8, !dbg !1909
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1910
  %m_notationDeclHandler16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 22, !dbg !1910
  store void (i8*, i8*, i8*, i8*, i8*)* %86, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler16, align 8, !dbg !1911
  %88 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, align 8, !dbg !1912
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1913
  %m_startNamespaceDeclHandler17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 23, !dbg !1913
  store void (i8*, i8*, i8*)* %88, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler17, align 8, !dbg !1914
  %90 = load void (i8*, i8*)*, void (i8*, i8*)** %oldEndNamespaceDeclHandler, align 8, !dbg !1915
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1916
  %m_endNamespaceDeclHandler18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 24, !dbg !1916
  store void (i8*, i8*)* %90, void (i8*, i8*)** %m_endNamespaceDeclHandler18, align 8, !dbg !1917
  %92 = load i32 (i8*)*, i32 (i8*)** %oldNotStandaloneHandler, align 8, !dbg !1918
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1919
  %m_notStandaloneHandler19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 25, !dbg !1919
  store i32 (i8*)* %92, i32 (i8*)** %m_notStandaloneHandler19, align 8, !dbg !1920
  %94 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, align 8, !dbg !1921
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1922
  %m_externalEntityRefHandler20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 26, !dbg !1922
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %94, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler20, align 8, !dbg !1923
  %96 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldSkippedEntityHandler, align 8, !dbg !1924
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1925
  %m_skippedEntityHandler21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 28, !dbg !1925
  store void (i8*, i8*, i32)* %96, void (i8*, i8*, i32)** %m_skippedEntityHandler21, align 8, !dbg !1926
  %98 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, align 8, !dbg !1927
  %99 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1928
  %m_unknownEncodingHandler22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %99, i32 0, i32 29, !dbg !1928
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %98, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler22, align 8, !dbg !1929
  %100 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, align 8, !dbg !1930
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1931
  %m_elementDeclHandler23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 30, !dbg !1931
  store void (i8*, i8*, %struct.XML_cp*)* %100, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler23, align 8, !dbg !1932
  %102 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, align 8, !dbg !1933
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1934
  %m_attlistDeclHandler24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 31, !dbg !1934
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %102, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler24, align 8, !dbg !1935
  %104 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, align 8, !dbg !1936
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1937
  %m_entityDeclHandler25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 32, !dbg !1937
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %104, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler25, align 8, !dbg !1938
  %106 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, align 8, !dbg !1939
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1940
  %m_xmlDeclHandler26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 33, !dbg !1940
  store void (i8*, i8*, i8*, i32)* %106, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler26, align 8, !dbg !1941
  %108 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldDeclElementType, align 8, !dbg !1942
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1943
  %m_declElementType27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 61, !dbg !1943
  store %struct.ELEMENT_TYPE* %108, %struct.ELEMENT_TYPE** %m_declElementType27, align 8, !dbg !1944
  %110 = load i8*, i8** %oldUserData, align 8, !dbg !1945
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1946
  %m_userData28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 0, !dbg !1946
  store i8* %110, i8** %m_userData28, align 8, !dbg !1947
  %112 = load i8*, i8** %oldUserData, align 8, !dbg !1948
  %113 = load i8*, i8** %oldHandlerArg, align 8, !dbg !1950
  %cmp = icmp eq i8* %112, %113, !dbg !1951
  br i1 %cmp, label %if.then29, label %if.else32, !dbg !1952

if.then29:                                        ; preds = %if.end6
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1953
  %m_userData30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 0, !dbg !1953
  %115 = load i8*, i8** %m_userData30, align 8, !dbg !1953
  %116 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1954
  %m_handlerArg31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %116, i32 0, i32 1, !dbg !1954
  store i8* %115, i8** %m_handlerArg31, align 8, !dbg !1955
  br label %if.end34, !dbg !1954

if.else32:                                        ; preds = %if.end6
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1956
  %118 = bitcast %struct.XML_ParserStruct* %117 to i8*, !dbg !1956
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1957
  %m_handlerArg33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 1, !dbg !1957
  store i8* %118, i8** %m_handlerArg33, align 8, !dbg !1958
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then29
  %120 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8, !dbg !1959
  %121 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !1961
  %cmp35 = icmp ne %struct.XML_ParserStruct* %120, %121, !dbg !1962
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !1963

if.then36:                                        ; preds = %if.end34
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8, !dbg !1964
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1965
  %m_externalEntityRefHandlerArg37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 27, !dbg !1965
  store %struct.XML_ParserStruct* %122, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg37, align 8, !dbg !1966
  br label %if.end38, !dbg !1965

if.end38:                                         ; preds = %if.then36, %if.end34
  %124 = load i8, i8* %oldDefaultExpandInternalEntities, align 1, !dbg !1967
  %125 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1968
  %m_defaultExpandInternalEntities39 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %125, i32 0, i32 52, !dbg !1968
  store i8 %124, i8* %m_defaultExpandInternalEntities39, align 8, !dbg !1969
  %126 = load i8, i8* %oldns_triplets, align 1, !dbg !1970
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1971
  %m_ns_triplets40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 39, !dbg !1971
  store i8 %126, i8* %m_ns_triplets40, align 1, !dbg !1972
  %128 = load i64, i64* %oldhash_secret_salt, align 8, !dbg !1973
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1974
  %m_hash_secret_salt41 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 86, !dbg !1974
  store i64 %128, i64* %m_hash_secret_salt41, align 8, !dbg !1975
  %130 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !1976
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1977
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 84, !dbg !1977
  store %struct.XML_ParserStruct* %130, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !1978
  %132 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !1979
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1981
  %m_dtd42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 65, !dbg !1981
  %134 = load %struct.DTD*, %struct.DTD** %m_dtd42, align 8, !dbg !1981
  %135 = load %struct.DTD*, %struct.DTD** %oldDtd, align 8, !dbg !1982
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1983
  %m_mem43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 3, !dbg !1984
  %call44 = call i32 @dtdCopy(%struct.XML_ParserStruct* %132, %struct.DTD* %134, %struct.DTD* %135, %struct.XML_Memory_Handling_Suite* %m_mem43), !dbg !1985
  %tobool45 = icmp ne i32 %call44, 0, !dbg !1985
  br i1 %tobool45, label %lor.lhs.false, label %if.then48, !dbg !1986

lor.lhs.false:                                    ; preds = %if.end38
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1987
  %138 = load i8*, i8** %context.addr, align 8, !dbg !1989
  %call46 = call zeroext i8 @setContext(%struct.XML_ParserStruct* %137, i8* %138), !dbg !1990
  %tobool47 = icmp ne i8 %call46, 0, !dbg !1990
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !1991

if.then48:                                        ; preds = %lor.lhs.false, %if.end38
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1993
  call void @XML_ParserFree(%struct.XML_ParserStruct* %139), !dbg !1995
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval, align 8, !dbg !1996
  br label %return, !dbg !1996

if.end49:                                         ; preds = %lor.lhs.false
  %140 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1997
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %140, i32 0, i32 45, !dbg !1997
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !1998
  %141 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !1999
  store %struct.XML_ParserStruct* %141, %struct.XML_ParserStruct** %retval, align 8, !dbg !2000
  br label %return, !dbg !2000

return:                                           ; preds = %if.end49, %if.then48, %if.then5
  %142 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %retval, align 8, !dbg !2001
  ret %struct.XML_ParserStruct* %142, !dbg !2001
}

; Function Attrs: nounwind uwtable
define internal i32 @dtdCopy(%struct.XML_ParserStruct* %oldParser, %struct.DTD* %newDtd, %struct.DTD* %oldDtd, %struct.XML_Memory_Handling_Suite* %ms) #0 !dbg !1005 {
entry:
  %retval = alloca i32, align 4
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %newDtd.addr = alloca %struct.DTD*, align 8
  %oldDtd.addr = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %name = alloca i8*, align 8
  %oldP = alloca %struct.prefix*, align 8
  %newA = alloca %struct.attribute_id*, align 8
  %name12 = alloca i8*, align 8
  %oldA = alloca %struct.attribute_id*, align 8
  %i = alloca i32, align 4
  %newE = alloca %struct.ELEMENT_TYPE*, align 8
  %name56 = alloca i8*, align 8
  %oldE = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldParser.addr, metadata !2002, metadata !1076), !dbg !2003
  store %struct.DTD* %newDtd, %struct.DTD** %newDtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DTD** %newDtd.addr, metadata !2004, metadata !1076), !dbg !2005
  store %struct.DTD* %oldDtd, %struct.DTD** %oldDtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DTD** %oldDtd.addr, metadata !2006, metadata !1076), !dbg !2007
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !2008, metadata !1076), !dbg !2009
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !2010, metadata !1076), !dbg !2011
  %0 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2012
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %0, i32 0, i32 3, !dbg !2013
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %prefixes), !dbg !2014
  br label %for.cond, !dbg !2015

for.cond:                                         ; preds = %if.end10, %entry
  call void @llvm.dbg.declare(metadata i8** %name, metadata !2016, metadata !1076), !dbg !2020
  call void @llvm.dbg.declare(metadata %struct.prefix** %oldP, metadata !2021, metadata !1076), !dbg !2024
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !2025
  %1 = bitcast %struct.NAMED* %call to %struct.prefix*, !dbg !2026
  store %struct.prefix* %1, %struct.prefix** %oldP, align 8, !dbg !2024
  %2 = load %struct.prefix*, %struct.prefix** %oldP, align 8, !dbg !2027
  %tobool = icmp ne %struct.prefix* %2, null, !dbg !2027
  br i1 %tobool, label %if.end, label %if.then, !dbg !2029

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !2030

if.end:                                           ; preds = %for.cond
  %3 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2031
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %3, i32 0, i32 4, !dbg !2032
  %4 = load %struct.prefix*, %struct.prefix** %oldP, align 8, !dbg !2033
  %name1 = getelementptr inbounds %struct.prefix, %struct.prefix* %4, i32 0, i32 0, !dbg !2034
  %5 = load i8*, i8** %name1, align 8, !dbg !2034
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %5), !dbg !2035
  store i8* %call2, i8** %name, align 8, !dbg !2036
  %6 = load i8*, i8** %name, align 8, !dbg !2037
  %tobool3 = icmp ne i8* %6, null, !dbg !2037
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !2039

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2040
  br label %return, !dbg !2040

if.end5:                                          ; preds = %if.end
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2041
  %8 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2043
  %prefixes6 = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 3, !dbg !2044
  %9 = load i8*, i8** %name, align 8, !dbg !2045
  %call7 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %7, %struct.HASH_TABLE* %prefixes6, i8* %9, i64 16), !dbg !2046
  %tobool8 = icmp ne %struct.NAMED* %call7, null, !dbg !2046
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !2047

if.then9:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !2048
  br label %return, !dbg !2048

if.end10:                                         ; preds = %if.end5
  br label %for.cond, !dbg !2049

for.end:                                          ; preds = %if.then
  %10 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2051
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 2, !dbg !2052
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %attributeIds), !dbg !2053
  br label %for.cond11, !dbg !2054

for.cond11:                                       ; preds = %if.end53, %for.end
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %newA, metadata !2055, metadata !1076), !dbg !2059
  call void @llvm.dbg.declare(metadata i8** %name12, metadata !2060, metadata !1076), !dbg !2061
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %oldA, metadata !2062, metadata !1076), !dbg !2063
  %call13 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !2064
  %11 = bitcast %struct.NAMED* %call13 to %struct.attribute_id*, !dbg !2065
  store %struct.attribute_id* %11, %struct.attribute_id** %oldA, align 8, !dbg !2063
  %12 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !2066
  %tobool14 = icmp ne %struct.attribute_id* %12, null, !dbg !2066
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !2068

if.then15:                                        ; preds = %for.cond11
  br label %for.end54, !dbg !2069

if.end16:                                         ; preds = %for.cond11
  %13 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2070
  %pool17 = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 4, !dbg !2070
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool17, i32 0, i32 3, !dbg !2070
  %14 = load i8*, i8** %ptr, align 8, !dbg !2070
  %15 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2070
  %pool18 = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 4, !dbg !2070
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool18, i32 0, i32 2, !dbg !2070
  %16 = load i8*, i8** %end, align 8, !dbg !2070
  %cmp = icmp eq i8* %14, %16, !dbg !2070
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !2070

land.lhs.true:                                    ; preds = %if.end16
  %17 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2072
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 4, !dbg !2072
  %call20 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool19), !dbg !2072
  %tobool21 = icmp ne i8 %call20, 0, !dbg !2072
  br i1 %tobool21, label %cond.false, label %cond.true, !dbg !2074

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end25, label %if.then24, !dbg !2075

cond.false:                                       ; preds = %land.lhs.true, %if.end16
  %18 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2077
  %pool22 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 4, !dbg !2077
  %ptr23 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool22, i32 0, i32 3, !dbg !2077
  %19 = load i8*, i8** %ptr23, align 8, !dbg !2077
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1, !dbg !2077
  store i8* %incdec.ptr, i8** %ptr23, align 8, !dbg !2077
  store i8 0, i8* %19, align 1, !dbg !2077
  br i1 true, label %if.end25, label %if.then24, !dbg !2079

if.then24:                                        ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !2080
  br label %return, !dbg !2080

if.end25:                                         ; preds = %cond.false, %cond.true
  %20 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2081
  %pool26 = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 4, !dbg !2082
  %21 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !2083
  %name27 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %21, i32 0, i32 0, !dbg !2084
  %22 = load i8*, i8** %name27, align 8, !dbg !2084
  %call28 = call i8* @poolCopyString(%struct.STRING_POOL* %pool26, i8* %22), !dbg !2085
  store i8* %call28, i8** %name12, align 8, !dbg !2086
  %23 = load i8*, i8** %name12, align 8, !dbg !2087
  %tobool29 = icmp ne i8* %23, null, !dbg !2087
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !2089

if.then30:                                        ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !2090
  br label %return, !dbg !2090

if.end31:                                         ; preds = %if.end25
  %24 = load i8*, i8** %name12, align 8, !dbg !2091
  %incdec.ptr32 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !2091
  store i8* %incdec.ptr32, i8** %name12, align 8, !dbg !2091
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2092
  %26 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2093
  %attributeIds33 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 2, !dbg !2094
  %27 = load i8*, i8** %name12, align 8, !dbg !2095
  %call34 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %25, %struct.HASH_TABLE* %attributeIds33, i8* %27, i64 24), !dbg !2096
  %28 = bitcast %struct.NAMED* %call34 to %struct.attribute_id*, !dbg !2097
  store %struct.attribute_id* %28, %struct.attribute_id** %newA, align 8, !dbg !2098
  %29 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !2099
  %tobool35 = icmp ne %struct.attribute_id* %29, null, !dbg !2099
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !2101

if.then36:                                        ; preds = %if.end31
  store i32 0, i32* %retval, align 4, !dbg !2102
  br label %return, !dbg !2102

if.end37:                                         ; preds = %if.end31
  %30 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !2103
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %30, i32 0, i32 2, !dbg !2104
  %31 = load i8, i8* %maybeTokenized, align 8, !dbg !2104
  %32 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !2105
  %maybeTokenized38 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %32, i32 0, i32 2, !dbg !2106
  store i8 %31, i8* %maybeTokenized38, align 8, !dbg !2107
  %33 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !2108
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %33, i32 0, i32 1, !dbg !2110
  %34 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !2110
  %tobool39 = icmp ne %struct.prefix* %34, null, !dbg !2108
  br i1 %tobool39, label %if.then40, label %if.end53, !dbg !2111

if.then40:                                        ; preds = %if.end37
  %35 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !2112
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %35, i32 0, i32 3, !dbg !2114
  %36 = load i8, i8* %xmlns, align 1, !dbg !2114
  %37 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !2115
  %xmlns41 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %37, i32 0, i32 3, !dbg !2116
  store i8 %36, i8* %xmlns41, align 1, !dbg !2117
  %38 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !2118
  %prefix42 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %38, i32 0, i32 1, !dbg !2120
  %39 = load %struct.prefix*, %struct.prefix** %prefix42, align 8, !dbg !2120
  %40 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2121
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %40, i32 0, i32 9, !dbg !2122
  %cmp43 = icmp eq %struct.prefix* %39, %defaultPrefix, !dbg !2123
  br i1 %cmp43, label %if.then44, label %if.else, !dbg !2124

if.then44:                                        ; preds = %if.then40
  %41 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2125
  %defaultPrefix45 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 9, !dbg !2126
  %42 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !2127
  %prefix46 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %42, i32 0, i32 1, !dbg !2128
  store %struct.prefix* %defaultPrefix45, %struct.prefix** %prefix46, align 8, !dbg !2129
  br label %if.end52, !dbg !2127

if.else:                                          ; preds = %if.then40
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2130
  %44 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2131
  %prefixes47 = getelementptr inbounds %struct.DTD, %struct.DTD* %44, i32 0, i32 3, !dbg !2132
  %45 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8, !dbg !2133
  %prefix48 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %45, i32 0, i32 1, !dbg !2134
  %46 = load %struct.prefix*, %struct.prefix** %prefix48, align 8, !dbg !2134
  %name49 = getelementptr inbounds %struct.prefix, %struct.prefix* %46, i32 0, i32 0, !dbg !2135
  %47 = load i8*, i8** %name49, align 8, !dbg !2135
  %call50 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %43, %struct.HASH_TABLE* %prefixes47, i8* %47, i64 0), !dbg !2136
  %48 = bitcast %struct.NAMED* %call50 to %struct.prefix*, !dbg !2137
  %49 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8, !dbg !2138
  %prefix51 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %49, i32 0, i32 1, !dbg !2139
  store %struct.prefix* %48, %struct.prefix** %prefix51, align 8, !dbg !2140
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then44
  br label %if.end53, !dbg !2141

if.end53:                                         ; preds = %if.end52, %if.end37
  br label %for.cond11, !dbg !2142

for.end54:                                        ; preds = %if.then15
  %50 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2144
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 1, !dbg !2145
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes), !dbg !2146
  br label %for.cond55, !dbg !2147

for.cond55:                                       ; preds = %for.end147, %for.end54
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2148, metadata !1076), !dbg !2152
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %newE, metadata !2153, metadata !1076), !dbg !2154
  call void @llvm.dbg.declare(metadata i8** %name56, metadata !2155, metadata !1076), !dbg !2156
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %oldE, metadata !2157, metadata !1076), !dbg !2160
  %call57 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !2161
  %51 = bitcast %struct.NAMED* %call57 to %struct.ELEMENT_TYPE*, !dbg !2162
  store %struct.ELEMENT_TYPE* %51, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2160
  %52 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2163
  %tobool58 = icmp ne %struct.ELEMENT_TYPE* %52, null, !dbg !2163
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !2165

if.then59:                                        ; preds = %for.cond55
  br label %for.end148, !dbg !2166

if.end60:                                         ; preds = %for.cond55
  %53 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2167
  %pool61 = getelementptr inbounds %struct.DTD, %struct.DTD* %53, i32 0, i32 4, !dbg !2168
  %54 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2169
  %name62 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %54, i32 0, i32 0, !dbg !2170
  %55 = load i8*, i8** %name62, align 8, !dbg !2170
  %call63 = call i8* @poolCopyString(%struct.STRING_POOL* %pool61, i8* %55), !dbg !2171
  store i8* %call63, i8** %name56, align 8, !dbg !2172
  %56 = load i8*, i8** %name56, align 8, !dbg !2173
  %tobool64 = icmp ne i8* %56, null, !dbg !2173
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !2175

if.then65:                                        ; preds = %if.end60
  store i32 0, i32* %retval, align 4, !dbg !2176
  br label %return, !dbg !2176

if.end66:                                         ; preds = %if.end60
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2177
  %58 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2178
  %elementTypes67 = getelementptr inbounds %struct.DTD, %struct.DTD* %58, i32 0, i32 1, !dbg !2179
  %59 = load i8*, i8** %name56, align 8, !dbg !2180
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %57, %struct.HASH_TABLE* %elementTypes67, i8* %59, i64 40), !dbg !2181
  %60 = bitcast %struct.NAMED* %call68 to %struct.ELEMENT_TYPE*, !dbg !2182
  store %struct.ELEMENT_TYPE* %60, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2183
  %61 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2184
  %tobool69 = icmp ne %struct.ELEMENT_TYPE* %61, null, !dbg !2184
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !2186

if.then70:                                        ; preds = %if.end66
  store i32 0, i32* %retval, align 4, !dbg !2187
  br label %return, !dbg !2187

if.end71:                                         ; preds = %if.end66
  %62 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2188
  %nDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %62, i32 0, i32 3, !dbg !2190
  %63 = load i32, i32* %nDefaultAtts, align 8, !dbg !2190
  %tobool72 = icmp ne i32 %63, 0, !dbg !2188
  br i1 %tobool72, label %if.then73, label %if.end80, !dbg !2191

if.then73:                                        ; preds = %if.end71
  %64 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !2192
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %64, i32 0, i32 0, !dbg !2194
  %65 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !2194
  %66 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2195
  %nDefaultAtts74 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %66, i32 0, i32 3, !dbg !2196
  %67 = load i32, i32* %nDefaultAtts74, align 8, !dbg !2196
  %conv = sext i32 %67 to i64, !dbg !2195
  %mul = mul i64 %conv, 24, !dbg !2197
  %call75 = call i8* %65(i64 %mul), !dbg !2192
  %68 = bitcast i8* %call75 to %struct.DEFAULT_ATTRIBUTE*, !dbg !2198
  %69 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2199
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %69, i32 0, i32 5, !dbg !2200
  store %struct.DEFAULT_ATTRIBUTE* %68, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !2201
  %70 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2202
  %defaultAtts76 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %70, i32 0, i32 5, !dbg !2204
  %71 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts76, align 8, !dbg !2204
  %tobool77 = icmp ne %struct.DEFAULT_ATTRIBUTE* %71, null, !dbg !2202
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !2205

if.then78:                                        ; preds = %if.then73
  %72 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !2206
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %72, i32 0, i32 2, !dbg !2208
  %73 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !2208
  %74 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2209
  %75 = bitcast %struct.ELEMENT_TYPE* %74 to i8*, !dbg !2209
  call void %73(i8* %75), !dbg !2206
  store i32 0, i32* %retval, align 4, !dbg !2210
  br label %return, !dbg !2210

if.end79:                                         ; preds = %if.then73
  br label %if.end80, !dbg !2211

if.end80:                                         ; preds = %if.end79, %if.end71
  %76 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2212
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %76, i32 0, i32 2, !dbg !2214
  %77 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8, !dbg !2214
  %tobool81 = icmp ne %struct.attribute_id* %77, null, !dbg !2212
  br i1 %tobool81, label %if.then82, label %if.end88, !dbg !2215

if.then82:                                        ; preds = %if.end80
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2216
  %79 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2217
  %attributeIds83 = getelementptr inbounds %struct.DTD, %struct.DTD* %79, i32 0, i32 2, !dbg !2218
  %80 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2219
  %idAtt84 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %80, i32 0, i32 2, !dbg !2220
  %81 = load %struct.attribute_id*, %struct.attribute_id** %idAtt84, align 8, !dbg !2220
  %name85 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %81, i32 0, i32 0, !dbg !2221
  %82 = load i8*, i8** %name85, align 8, !dbg !2221
  %call86 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %78, %struct.HASH_TABLE* %attributeIds83, i8* %82, i64 0), !dbg !2222
  %83 = bitcast %struct.NAMED* %call86 to %struct.attribute_id*, !dbg !2223
  %84 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2224
  %idAtt87 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %84, i32 0, i32 2, !dbg !2225
  store %struct.attribute_id* %83, %struct.attribute_id** %idAtt87, align 8, !dbg !2226
  br label %if.end88, !dbg !2224

if.end88:                                         ; preds = %if.then82, %if.end80
  %85 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2227
  %nDefaultAtts89 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %85, i32 0, i32 3, !dbg !2228
  %86 = load i32, i32* %nDefaultAtts89, align 8, !dbg !2228
  %87 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2229
  %nDefaultAtts90 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %87, i32 0, i32 3, !dbg !2230
  store i32 %86, i32* %nDefaultAtts90, align 8, !dbg !2231
  %88 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2232
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %88, i32 0, i32 4, !dbg !2233
  store i32 %86, i32* %allocDefaultAtts, align 4, !dbg !2234
  %89 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2235
  %prefix91 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %89, i32 0, i32 1, !dbg !2237
  %90 = load %struct.prefix*, %struct.prefix** %prefix91, align 8, !dbg !2237
  %tobool92 = icmp ne %struct.prefix* %90, null, !dbg !2235
  br i1 %tobool92, label %if.then93, label %if.end99, !dbg !2238

if.then93:                                        ; preds = %if.end88
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2239
  %92 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2240
  %prefixes94 = getelementptr inbounds %struct.DTD, %struct.DTD* %92, i32 0, i32 3, !dbg !2241
  %93 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2242
  %prefix95 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %93, i32 0, i32 1, !dbg !2243
  %94 = load %struct.prefix*, %struct.prefix** %prefix95, align 8, !dbg !2243
  %name96 = getelementptr inbounds %struct.prefix, %struct.prefix* %94, i32 0, i32 0, !dbg !2244
  %95 = load i8*, i8** %name96, align 8, !dbg !2244
  %call97 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %91, %struct.HASH_TABLE* %prefixes94, i8* %95, i64 0), !dbg !2245
  %96 = bitcast %struct.NAMED* %call97 to %struct.prefix*, !dbg !2246
  %97 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2247
  %prefix98 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %97, i32 0, i32 1, !dbg !2248
  store %struct.prefix* %96, %struct.prefix** %prefix98, align 8, !dbg !2249
  br label %if.end99, !dbg !2247

if.end99:                                         ; preds = %if.then93, %if.end88
  store i32 0, i32* %i, align 4, !dbg !2250
  br label %for.cond100, !dbg !2252

for.cond100:                                      ; preds = %for.inc, %if.end99
  %98 = load i32, i32* %i, align 4, !dbg !2253
  %99 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2256
  %nDefaultAtts101 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %99, i32 0, i32 3, !dbg !2257
  %100 = load i32, i32* %nDefaultAtts101, align 8, !dbg !2257
  %cmp102 = icmp slt i32 %98, %100, !dbg !2258
  br i1 %cmp102, label %for.body, label %for.end147, !dbg !2259

for.body:                                         ; preds = %for.cond100
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2260
  %102 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2262
  %attributeIds104 = getelementptr inbounds %struct.DTD, %struct.DTD* %102, i32 0, i32 2, !dbg !2263
  %103 = load i32, i32* %i, align 4, !dbg !2264
  %idxprom = sext i32 %103 to i64, !dbg !2265
  %104 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2265
  %defaultAtts105 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %104, i32 0, i32 5, !dbg !2266
  %105 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts105, align 8, !dbg !2266
  %arrayidx = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %105, i64 %idxprom, !dbg !2265
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx, i32 0, i32 0, !dbg !2267
  %106 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !2267
  %name106 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %106, i32 0, i32 0, !dbg !2268
  %107 = load i8*, i8** %name106, align 8, !dbg !2268
  %call107 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %101, %struct.HASH_TABLE* %attributeIds104, i8* %107, i64 0), !dbg !2269
  %108 = bitcast %struct.NAMED* %call107 to %struct.attribute_id*, !dbg !2270
  %109 = load i32, i32* %i, align 4, !dbg !2271
  %idxprom108 = sext i32 %109 to i64, !dbg !2272
  %110 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2272
  %defaultAtts109 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %110, i32 0, i32 5, !dbg !2273
  %111 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts109, align 8, !dbg !2273
  %arrayidx110 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %111, i64 %idxprom108, !dbg !2272
  %id111 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx110, i32 0, i32 0, !dbg !2274
  store %struct.attribute_id* %108, %struct.attribute_id** %id111, align 8, !dbg !2275
  %112 = load i32, i32* %i, align 4, !dbg !2276
  %idxprom112 = sext i32 %112 to i64, !dbg !2277
  %113 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2277
  %defaultAtts113 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %113, i32 0, i32 5, !dbg !2278
  %114 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts113, align 8, !dbg !2278
  %arrayidx114 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %114, i64 %idxprom112, !dbg !2277
  %isCdata = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx114, i32 0, i32 1, !dbg !2279
  %115 = load i8, i8* %isCdata, align 8, !dbg !2279
  %116 = load i32, i32* %i, align 4, !dbg !2280
  %idxprom115 = sext i32 %116 to i64, !dbg !2281
  %117 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2281
  %defaultAtts116 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %117, i32 0, i32 5, !dbg !2282
  %118 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts116, align 8, !dbg !2282
  %arrayidx117 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %118, i64 %idxprom115, !dbg !2281
  %isCdata118 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx117, i32 0, i32 1, !dbg !2283
  store i8 %115, i8* %isCdata118, align 8, !dbg !2284
  %119 = load i32, i32* %i, align 4, !dbg !2285
  %idxprom119 = sext i32 %119 to i64, !dbg !2287
  %120 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2287
  %defaultAtts120 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %120, i32 0, i32 5, !dbg !2288
  %121 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts120, align 8, !dbg !2288
  %arrayidx121 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %121, i64 %idxprom119, !dbg !2287
  %value = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx121, i32 0, i32 2, !dbg !2289
  %122 = load i8*, i8** %value, align 8, !dbg !2289
  %tobool122 = icmp ne i8* %122, null, !dbg !2287
  br i1 %tobool122, label %if.then123, label %if.else141, !dbg !2290

if.then123:                                       ; preds = %for.body
  %123 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2291
  %pool124 = getelementptr inbounds %struct.DTD, %struct.DTD* %123, i32 0, i32 4, !dbg !2293
  %124 = load i32, i32* %i, align 4, !dbg !2294
  %idxprom125 = sext i32 %124 to i64, !dbg !2295
  %125 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8, !dbg !2295
  %defaultAtts126 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %125, i32 0, i32 5, !dbg !2296
  %126 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts126, align 8, !dbg !2296
  %arrayidx127 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %126, i64 %idxprom125, !dbg !2295
  %value128 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx127, i32 0, i32 2, !dbg !2297
  %127 = load i8*, i8** %value128, align 8, !dbg !2297
  %call129 = call i8* @poolCopyString(%struct.STRING_POOL* %pool124, i8* %127), !dbg !2298
  %128 = load i32, i32* %i, align 4, !dbg !2299
  %idxprom130 = sext i32 %128 to i64, !dbg !2300
  %129 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2300
  %defaultAtts131 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %129, i32 0, i32 5, !dbg !2301
  %130 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts131, align 8, !dbg !2301
  %arrayidx132 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %130, i64 %idxprom130, !dbg !2300
  %value133 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx132, i32 0, i32 2, !dbg !2302
  store i8* %call129, i8** %value133, align 8, !dbg !2303
  %131 = load i32, i32* %i, align 4, !dbg !2304
  %idxprom134 = sext i32 %131 to i64, !dbg !2306
  %132 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2306
  %defaultAtts135 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %132, i32 0, i32 5, !dbg !2307
  %133 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts135, align 8, !dbg !2307
  %arrayidx136 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %133, i64 %idxprom134, !dbg !2306
  %value137 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx136, i32 0, i32 2, !dbg !2308
  %134 = load i8*, i8** %value137, align 8, !dbg !2308
  %tobool138 = icmp ne i8* %134, null, !dbg !2306
  br i1 %tobool138, label %if.end140, label %if.then139, !dbg !2309

if.then139:                                       ; preds = %if.then123
  store i32 0, i32* %retval, align 4, !dbg !2310
  br label %return, !dbg !2310

if.end140:                                        ; preds = %if.then123
  br label %if.end146, !dbg !2311

if.else141:                                       ; preds = %for.body
  %135 = load i32, i32* %i, align 4, !dbg !2312
  %idxprom142 = sext i32 %135 to i64, !dbg !2313
  %136 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8, !dbg !2313
  %defaultAtts143 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %136, i32 0, i32 5, !dbg !2314
  %137 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts143, align 8, !dbg !2314
  %arrayidx144 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %137, i64 %idxprom142, !dbg !2313
  %value145 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx144, i32 0, i32 2, !dbg !2315
  store i8* null, i8** %value145, align 8, !dbg !2316
  br label %if.end146

if.end146:                                        ; preds = %if.else141, %if.end140
  br label %for.inc, !dbg !2317

for.inc:                                          ; preds = %if.end146
  %138 = load i32, i32* %i, align 4, !dbg !2318
  %inc = add nsw i32 %138, 1, !dbg !2318
  store i32 %inc, i32* %i, align 4, !dbg !2318
  br label %for.cond100, !dbg !2320

for.end147:                                       ; preds = %for.cond100
  br label %for.cond55, !dbg !2321

for.end148:                                       ; preds = %if.then59
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !2323
  %140 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2325
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %140, i32 0, i32 0, !dbg !2326
  %141 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2327
  %pool149 = getelementptr inbounds %struct.DTD, %struct.DTD* %141, i32 0, i32 4, !dbg !2328
  %142 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2329
  %generalEntities150 = getelementptr inbounds %struct.DTD, %struct.DTD* %142, i32 0, i32 0, !dbg !2330
  %call151 = call i32 @copyEntityTable(%struct.XML_ParserStruct* %139, %struct.HASH_TABLE* %generalEntities, %struct.STRING_POOL* %pool149, %struct.HASH_TABLE* %generalEntities150), !dbg !2331
  %tobool152 = icmp ne i32 %call151, 0, !dbg !2331
  br i1 %tobool152, label %if.end154, label %if.then153, !dbg !2332

if.then153:                                       ; preds = %for.end148
  store i32 0, i32* %retval, align 4, !dbg !2333
  br label %return, !dbg !2333

if.end154:                                        ; preds = %for.end148
  %143 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2334
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %143, i32 0, i32 6, !dbg !2335
  %144 = load i8, i8* %keepProcessing, align 8, !dbg !2335
  %145 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2336
  %keepProcessing155 = getelementptr inbounds %struct.DTD, %struct.DTD* %145, i32 0, i32 6, !dbg !2337
  store i8 %144, i8* %keepProcessing155, align 8, !dbg !2338
  %146 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2339
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %146, i32 0, i32 7, !dbg !2340
  %147 = load i8, i8* %hasParamEntityRefs, align 1, !dbg !2340
  %148 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2341
  %hasParamEntityRefs156 = getelementptr inbounds %struct.DTD, %struct.DTD* %148, i32 0, i32 7, !dbg !2342
  store i8 %147, i8* %hasParamEntityRefs156, align 1, !dbg !2343
  %149 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2344
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %149, i32 0, i32 8, !dbg !2345
  %150 = load i8, i8* %standalone, align 2, !dbg !2345
  %151 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2346
  %standalone157 = getelementptr inbounds %struct.DTD, %struct.DTD* %151, i32 0, i32 8, !dbg !2347
  store i8 %150, i8* %standalone157, align 2, !dbg !2348
  %152 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2349
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %152, i32 0, i32 10, !dbg !2350
  %153 = load i8, i8* %in_eldecl, align 8, !dbg !2350
  %154 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2351
  %in_eldecl158 = getelementptr inbounds %struct.DTD, %struct.DTD* %154, i32 0, i32 10, !dbg !2352
  store i8 %153, i8* %in_eldecl158, align 8, !dbg !2353
  %155 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2354
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %155, i32 0, i32 11, !dbg !2355
  %156 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !2355
  %157 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2356
  %scaffold159 = getelementptr inbounds %struct.DTD, %struct.DTD* %157, i32 0, i32 11, !dbg !2357
  store %struct.CONTENT_SCAFFOLD* %156, %struct.CONTENT_SCAFFOLD** %scaffold159, align 8, !dbg !2358
  %158 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2359
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %158, i32 0, i32 12, !dbg !2360
  %159 = load i32, i32* %contentStringLen, align 8, !dbg !2360
  %160 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2361
  %contentStringLen160 = getelementptr inbounds %struct.DTD, %struct.DTD* %160, i32 0, i32 12, !dbg !2362
  store i32 %159, i32* %contentStringLen160, align 8, !dbg !2363
  %161 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2364
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %161, i32 0, i32 13, !dbg !2365
  %162 = load i32, i32* %scaffSize, align 4, !dbg !2365
  %163 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2366
  %scaffSize161 = getelementptr inbounds %struct.DTD, %struct.DTD* %163, i32 0, i32 13, !dbg !2367
  store i32 %162, i32* %scaffSize161, align 4, !dbg !2368
  %164 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2369
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %164, i32 0, i32 15, !dbg !2370
  %165 = load i32, i32* %scaffLevel, align 4, !dbg !2370
  %166 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2371
  %scaffLevel162 = getelementptr inbounds %struct.DTD, %struct.DTD* %166, i32 0, i32 15, !dbg !2372
  store i32 %165, i32* %scaffLevel162, align 4, !dbg !2373
  %167 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8, !dbg !2374
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %167, i32 0, i32 16, !dbg !2375
  %168 = load i32*, i32** %scaffIndex, align 8, !dbg !2375
  %169 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8, !dbg !2376
  %scaffIndex163 = getelementptr inbounds %struct.DTD, %struct.DTD* %169, i32 0, i32 16, !dbg !2377
  store i32* %168, i32** %scaffIndex163, align 8, !dbg !2378
  store i32 1, i32* %retval, align 4, !dbg !2379
  br label %return, !dbg !2379

return:                                           ; preds = %if.end154, %if.then153, %if.then139, %if.then78, %if.then70, %if.then65, %if.then36, %if.then30, %if.then24, %if.then9, %if.then4
  %170 = load i32, i32* %retval, align 4, !dbg !2380
  ret i32 %170, !dbg !2380
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @setContext(%struct.XML_ParserStruct* %parser, i8* %context) #0 !dbg !994 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %context.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %s = alloca i8*, align 8
  %e = alloca %struct.ENTITY*, align 8
  %prefix = alloca %struct.prefix*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2381, metadata !1076), !dbg !2382
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !2383, metadata !1076), !dbg !2384
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !2385, metadata !1076), !dbg !2387
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2388
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !2388
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !2388
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !2387
  call void @llvm.dbg.declare(metadata i8** %s, metadata !2389, metadata !1076), !dbg !2390
  %2 = load i8*, i8** %context.addr, align 8, !dbg !2391
  store i8* %2, i8** %s, align 8, !dbg !2390
  br label %while.cond, !dbg !2392

while.cond:                                       ; preds = %if.end161, %entry
  %3 = load i8*, i8** %context.addr, align 8, !dbg !2393
  %4 = load i8, i8* %3, align 1, !dbg !2395
  %conv = sext i8 %4 to i32, !dbg !2395
  %cmp = icmp ne i32 %conv, 0, !dbg !2396
  br i1 %cmp, label %while.body, label %while.end, !dbg !2397

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %s, align 8, !dbg !2398
  %6 = load i8, i8* %5, align 1, !dbg !2401
  %conv2 = sext i8 %6 to i32, !dbg !2401
  %cmp3 = icmp eq i32 %conv2, 12, !dbg !2402
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !2403

lor.lhs.false:                                    ; preds = %while.body
  %7 = load i8*, i8** %s, align 8, !dbg !2404
  %8 = load i8, i8* %7, align 1, !dbg !2406
  %conv5 = sext i8 %8 to i32, !dbg !2406
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !2407
  br i1 %cmp6, label %if.then, label %if.else, !dbg !2408

if.then:                                          ; preds = %lor.lhs.false, %while.body
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %e, metadata !2409, metadata !1076), !dbg !2411
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2412
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 79, !dbg !2412
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 3, !dbg !2412
  %10 = load i8*, i8** %ptr, align 8, !dbg !2412
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2412
  %m_tempPool8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 79, !dbg !2412
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool8, i32 0, i32 2, !dbg !2412
  %12 = load i8*, i8** %end, align 8, !dbg !2412
  %cmp9 = icmp eq i8* %10, %12, !dbg !2412
  br i1 %cmp9, label %land.lhs.true, label %cond.false, !dbg !2412

land.lhs.true:                                    ; preds = %if.then
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2414
  %m_tempPool11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 79, !dbg !2414
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool11), !dbg !2414
  %tobool = icmp ne i8 %call, 0, !dbg !2414
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2416

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then14, !dbg !2417

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2419
  %m_tempPool12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 79, !dbg !2419
  %ptr13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool12, i32 0, i32 3, !dbg !2419
  %15 = load i8*, i8** %ptr13, align 8, !dbg !2419
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !2419
  store i8* %incdec.ptr, i8** %ptr13, align 8, !dbg !2419
  store i8 0, i8* %15, align 1, !dbg !2419
  br i1 true, label %if.end, label %if.then14, !dbg !2421

if.then14:                                        ; preds = %cond.false, %cond.true
  store i8 0, i8* %retval, align 1, !dbg !2422
  br label %return, !dbg !2422

if.end:                                           ; preds = %cond.false, %cond.true
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2423
  %17 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !2424
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 0, !dbg !2425
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2426
  %m_tempPool15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 79, !dbg !2426
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool15, i32 0, i32 4, !dbg !2426
  %19 = load i8*, i8** %start, align 8, !dbg !2426
  %call16 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %16, %struct.HASH_TABLE* %generalEntities, i8* %19, i64 0), !dbg !2427
  %20 = bitcast %struct.NAMED* %call16 to %struct.ENTITY*, !dbg !2428
  store %struct.ENTITY* %20, %struct.ENTITY** %e, align 8, !dbg !2429
  %21 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !2430
  %tobool17 = icmp ne %struct.ENTITY* %21, null, !dbg !2430
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !2432

if.then18:                                        ; preds = %if.end
  %22 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !2433
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %22, i32 0, i32 8, !dbg !2434
  store i8 1, i8* %open, align 8, !dbg !2435
  br label %if.end19, !dbg !2433

if.end19:                                         ; preds = %if.then18, %if.end
  %23 = load i8*, i8** %s, align 8, !dbg !2436
  %24 = load i8, i8* %23, align 1, !dbg !2438
  %conv20 = sext i8 %24 to i32, !dbg !2438
  %cmp21 = icmp ne i32 %conv20, 0, !dbg !2439
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !2440

if.then23:                                        ; preds = %if.end19
  %25 = load i8*, i8** %s, align 8, !dbg !2441
  %incdec.ptr24 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !2441
  store i8* %incdec.ptr24, i8** %s, align 8, !dbg !2441
  br label %if.end25, !dbg !2442

if.end25:                                         ; preds = %if.then23, %if.end19
  %26 = load i8*, i8** %s, align 8, !dbg !2443
  store i8* %26, i8** %context.addr, align 8, !dbg !2444
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2445
  %m_tempPool26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 79, !dbg !2445
  %start27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool26, i32 0, i32 4, !dbg !2445
  %28 = load i8*, i8** %start27, align 8, !dbg !2445
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2445
  %m_tempPool28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 79, !dbg !2445
  %ptr29 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool28, i32 0, i32 3, !dbg !2445
  store i8* %28, i8** %ptr29, align 8, !dbg !2445
  br label %if.end161, !dbg !2446

if.else:                                          ; preds = %lor.lhs.false
  %30 = load i8*, i8** %s, align 8, !dbg !2447
  %31 = load i8, i8* %30, align 1, !dbg !2449
  %conv30 = sext i8 %31 to i32, !dbg !2449
  %cmp31 = icmp eq i32 %conv30, 61, !dbg !2450
  br i1 %cmp31, label %if.then33, label %if.else141, !dbg !2451

if.then33:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix, metadata !2452, metadata !1076), !dbg !2454
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2455
  %m_tempPool34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 79, !dbg !2455
  %ptr35 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool34, i32 0, i32 3, !dbg !2455
  %33 = load i8*, i8** %ptr35, align 8, !dbg !2455
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2455
  %m_tempPool36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 79, !dbg !2455
  %start37 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool36, i32 0, i32 4, !dbg !2455
  %35 = load i8*, i8** %start37, align 8, !dbg !2455
  %sub.ptr.lhs.cast = ptrtoint i8* %33 to i64, !dbg !2455
  %sub.ptr.rhs.cast = ptrtoint i8* %35 to i64, !dbg !2455
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2455
  %cmp38 = icmp eq i64 %sub.ptr.sub, 0, !dbg !2457
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !2458

if.then40:                                        ; preds = %if.then33
  %36 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !2459
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %36, i32 0, i32 9, !dbg !2460
  store %struct.prefix* %defaultPrefix, %struct.prefix** %prefix, align 8, !dbg !2461
  br label %if.end82, !dbg !2462

if.else41:                                        ; preds = %if.then33
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2463
  %m_tempPool42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 79, !dbg !2463
  %ptr43 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool42, i32 0, i32 3, !dbg !2463
  %38 = load i8*, i8** %ptr43, align 8, !dbg !2463
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2463
  %m_tempPool44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 79, !dbg !2463
  %end45 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool44, i32 0, i32 2, !dbg !2463
  %40 = load i8*, i8** %end45, align 8, !dbg !2463
  %cmp46 = icmp eq i8* %38, %40, !dbg !2463
  br i1 %cmp46, label %land.lhs.true48, label %cond.false53, !dbg !2463

land.lhs.true48:                                  ; preds = %if.else41
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2466
  %m_tempPool49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 79, !dbg !2466
  %call50 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool49), !dbg !2466
  %tobool51 = icmp ne i8 %call50, 0, !dbg !2466
  br i1 %tobool51, label %cond.false53, label %cond.true52, !dbg !2468

cond.true52:                                      ; preds = %land.lhs.true48
  br i1 false, label %if.end58, label %if.then57, !dbg !2469

cond.false53:                                     ; preds = %land.lhs.true48, %if.else41
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2471
  %m_tempPool54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 79, !dbg !2471
  %ptr55 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool54, i32 0, i32 3, !dbg !2471
  %43 = load i8*, i8** %ptr55, align 8, !dbg !2471
  %incdec.ptr56 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !2471
  store i8* %incdec.ptr56, i8** %ptr55, align 8, !dbg !2471
  store i8 0, i8* %43, align 1, !dbg !2471
  br i1 true, label %if.end58, label %if.then57, !dbg !2473

if.then57:                                        ; preds = %cond.false53, %cond.true52
  store i8 0, i8* %retval, align 1, !dbg !2474
  br label %return, !dbg !2474

if.end58:                                         ; preds = %cond.false53, %cond.true52
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2475
  %45 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !2476
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %45, i32 0, i32 3, !dbg !2477
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2478
  %m_tempPool59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 79, !dbg !2478
  %start60 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool59, i32 0, i32 4, !dbg !2478
  %47 = load i8*, i8** %start60, align 8, !dbg !2478
  %call61 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %44, %struct.HASH_TABLE* %prefixes, i8* %47, i64 16), !dbg !2479
  %48 = bitcast %struct.NAMED* %call61 to %struct.prefix*, !dbg !2480
  store %struct.prefix* %48, %struct.prefix** %prefix, align 8, !dbg !2481
  %49 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !2482
  %tobool62 = icmp ne %struct.prefix* %49, null, !dbg !2482
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !2484

if.then63:                                        ; preds = %if.end58
  store i8 0, i8* %retval, align 1, !dbg !2485
  br label %return, !dbg !2485

if.end64:                                         ; preds = %if.end58
  %50 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !2486
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %50, i32 0, i32 0, !dbg !2488
  %51 = load i8*, i8** %name, align 8, !dbg !2488
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2489
  %m_tempPool65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 79, !dbg !2489
  %start66 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool65, i32 0, i32 4, !dbg !2489
  %53 = load i8*, i8** %start66, align 8, !dbg !2489
  %cmp67 = icmp eq i8* %51, %53, !dbg !2490
  br i1 %cmp67, label %if.then69, label %if.end77, !dbg !2491

if.then69:                                        ; preds = %if.end64
  %54 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !2492
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %54, i32 0, i32 4, !dbg !2494
  %55 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !2495
  %name70 = getelementptr inbounds %struct.prefix, %struct.prefix* %55, i32 0, i32 0, !dbg !2496
  %56 = load i8*, i8** %name70, align 8, !dbg !2496
  %call71 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %56), !dbg !2497
  %57 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !2498
  %name72 = getelementptr inbounds %struct.prefix, %struct.prefix* %57, i32 0, i32 0, !dbg !2499
  store i8* %call71, i8** %name72, align 8, !dbg !2500
  %58 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !2501
  %name73 = getelementptr inbounds %struct.prefix, %struct.prefix* %58, i32 0, i32 0, !dbg !2503
  %59 = load i8*, i8** %name73, align 8, !dbg !2503
  %tobool74 = icmp ne i8* %59, null, !dbg !2501
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !2504

if.then75:                                        ; preds = %if.then69
  store i8 0, i8* %retval, align 1, !dbg !2505
  br label %return, !dbg !2505

if.end76:                                         ; preds = %if.then69
  br label %if.end77, !dbg !2506

if.end77:                                         ; preds = %if.end76, %if.end64
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2507
  %m_tempPool78 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 79, !dbg !2507
  %start79 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool78, i32 0, i32 4, !dbg !2507
  %61 = load i8*, i8** %start79, align 8, !dbg !2507
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2507
  %m_tempPool80 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 79, !dbg !2507
  %ptr81 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool80, i32 0, i32 3, !dbg !2507
  store i8* %61, i8** %ptr81, align 8, !dbg !2507
  br label %if.end82

if.end82:                                         ; preds = %if.end77, %if.then40
  %63 = load i8*, i8** %s, align 8, !dbg !2508
  %add.ptr = getelementptr inbounds i8, i8* %63, i64 1, !dbg !2510
  store i8* %add.ptr, i8** %context.addr, align 8, !dbg !2511
  br label %for.cond, !dbg !2512

for.cond:                                         ; preds = %for.inc, %if.end82
  %64 = load i8*, i8** %context.addr, align 8, !dbg !2513
  %65 = load i8, i8* %64, align 1, !dbg !2515
  %conv83 = sext i8 %65 to i32, !dbg !2515
  %cmp84 = icmp ne i32 %conv83, 12, !dbg !2516
  br i1 %cmp84, label %land.rhs, label %land.end, !dbg !2517

land.rhs:                                         ; preds = %for.cond
  %66 = load i8*, i8** %context.addr, align 8, !dbg !2518
  %67 = load i8, i8* %66, align 1, !dbg !2520
  %conv86 = sext i8 %67 to i32, !dbg !2520
  %cmp87 = icmp ne i32 %conv86, 0, !dbg !2521
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %68 = phi i1 [ false, %for.cond ], [ %cmp87, %land.rhs ]
  br i1 %68, label %for.body, label %for.end, !dbg !2522

for.body:                                         ; preds = %land.end
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2524
  %m_tempPool89 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 79, !dbg !2524
  %ptr90 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool89, i32 0, i32 3, !dbg !2524
  %70 = load i8*, i8** %ptr90, align 8, !dbg !2524
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2524
  %m_tempPool91 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 79, !dbg !2524
  %end92 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool91, i32 0, i32 2, !dbg !2524
  %72 = load i8*, i8** %end92, align 8, !dbg !2524
  %cmp93 = icmp eq i8* %70, %72, !dbg !2524
  br i1 %cmp93, label %land.lhs.true95, label %cond.false100, !dbg !2524

land.lhs.true95:                                  ; preds = %for.body
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2526
  %m_tempPool96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 79, !dbg !2526
  %call97 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool96), !dbg !2526
  %tobool98 = icmp ne i8 %call97, 0, !dbg !2526
  br i1 %tobool98, label %cond.false100, label %cond.true99, !dbg !2528

cond.true99:                                      ; preds = %land.lhs.true95
  br i1 false, label %if.end105, label %if.then104, !dbg !2529

cond.false100:                                    ; preds = %land.lhs.true95, %for.body
  %74 = load i8*, i8** %context.addr, align 8, !dbg !2531
  %75 = load i8, i8* %74, align 1, !dbg !2531
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2531
  %m_tempPool101 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 79, !dbg !2531
  %ptr102 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool101, i32 0, i32 3, !dbg !2531
  %77 = load i8*, i8** %ptr102, align 8, !dbg !2531
  %incdec.ptr103 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !2531
  store i8* %incdec.ptr103, i8** %ptr102, align 8, !dbg !2531
  store i8 %75, i8* %77, align 1, !dbg !2531
  br i1 true, label %if.end105, label %if.then104, !dbg !2533

if.then104:                                       ; preds = %cond.false100, %cond.true99
  store i8 0, i8* %retval, align 1, !dbg !2534
  br label %return, !dbg !2534

if.end105:                                        ; preds = %cond.false100, %cond.true99
  br label %for.inc, !dbg !2535

for.inc:                                          ; preds = %if.end105
  %78 = load i8*, i8** %context.addr, align 8, !dbg !2537
  %incdec.ptr106 = getelementptr inbounds i8, i8* %78, i32 1, !dbg !2537
  store i8* %incdec.ptr106, i8** %context.addr, align 8, !dbg !2537
  br label %for.cond, !dbg !2538

for.end:                                          ; preds = %land.end
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2540
  %m_tempPool107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 79, !dbg !2540
  %ptr108 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool107, i32 0, i32 3, !dbg !2540
  %80 = load i8*, i8** %ptr108, align 8, !dbg !2540
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2540
  %m_tempPool109 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 79, !dbg !2540
  %end110 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool109, i32 0, i32 2, !dbg !2540
  %82 = load i8*, i8** %end110, align 8, !dbg !2540
  %cmp111 = icmp eq i8* %80, %82, !dbg !2540
  br i1 %cmp111, label %land.lhs.true113, label %cond.false118, !dbg !2540

land.lhs.true113:                                 ; preds = %for.end
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2542
  %m_tempPool114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 79, !dbg !2542
  %call115 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool114), !dbg !2542
  %tobool116 = icmp ne i8 %call115, 0, !dbg !2542
  br i1 %tobool116, label %cond.false118, label %cond.true117, !dbg !2544

cond.true117:                                     ; preds = %land.lhs.true113
  br i1 false, label %if.end123, label %if.then122, !dbg !2545

cond.false118:                                    ; preds = %land.lhs.true113, %for.end
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2547
  %m_tempPool119 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 79, !dbg !2547
  %ptr120 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool119, i32 0, i32 3, !dbg !2547
  %85 = load i8*, i8** %ptr120, align 8, !dbg !2547
  %incdec.ptr121 = getelementptr inbounds i8, i8* %85, i32 1, !dbg !2547
  store i8* %incdec.ptr121, i8** %ptr120, align 8, !dbg !2547
  store i8 0, i8* %85, align 1, !dbg !2547
  br i1 true, label %if.end123, label %if.then122, !dbg !2549

if.then122:                                       ; preds = %cond.false118, %cond.true117
  store i8 0, i8* %retval, align 1, !dbg !2550
  br label %return, !dbg !2550

if.end123:                                        ; preds = %cond.false118, %cond.true117
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2551
  %87 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !2553
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2554
  %m_tempPool124 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 79, !dbg !2554
  %start125 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool124, i32 0, i32 4, !dbg !2554
  %89 = load i8*, i8** %start125, align 8, !dbg !2554
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2555
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 69, !dbg !2555
  %call126 = call i32 @addBinding(%struct.XML_ParserStruct* %86, %struct.prefix* %87, %struct.attribute_id* null, i8* %89, %struct.binding** %m_inheritedBindings), !dbg !2556
  %cmp127 = icmp ne i32 %call126, 0, !dbg !2557
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !2558

if.then129:                                       ; preds = %if.end123
  store i8 0, i8* %retval, align 1, !dbg !2559
  br label %return, !dbg !2559

if.end130:                                        ; preds = %if.end123
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2560
  %m_tempPool131 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 79, !dbg !2560
  %start132 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool131, i32 0, i32 4, !dbg !2560
  %92 = load i8*, i8** %start132, align 8, !dbg !2560
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2560
  %m_tempPool133 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 79, !dbg !2560
  %ptr134 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool133, i32 0, i32 3, !dbg !2560
  store i8* %92, i8** %ptr134, align 8, !dbg !2560
  %94 = load i8*, i8** %context.addr, align 8, !dbg !2561
  %95 = load i8, i8* %94, align 1, !dbg !2563
  %conv135 = sext i8 %95 to i32, !dbg !2563
  %cmp136 = icmp ne i32 %conv135, 0, !dbg !2564
  br i1 %cmp136, label %if.then138, label %if.end140, !dbg !2565

if.then138:                                       ; preds = %if.end130
  %96 = load i8*, i8** %context.addr, align 8, !dbg !2566
  %incdec.ptr139 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !2566
  store i8* %incdec.ptr139, i8** %context.addr, align 8, !dbg !2566
  br label %if.end140, !dbg !2566

if.end140:                                        ; preds = %if.then138, %if.end130
  %97 = load i8*, i8** %context.addr, align 8, !dbg !2567
  store i8* %97, i8** %s, align 8, !dbg !2568
  br label %if.end160, !dbg !2569

if.else141:                                       ; preds = %if.else
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2570
  %m_tempPool142 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 79, !dbg !2570
  %ptr143 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool142, i32 0, i32 3, !dbg !2570
  %99 = load i8*, i8** %ptr143, align 8, !dbg !2570
  %100 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2570
  %m_tempPool144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %100, i32 0, i32 79, !dbg !2570
  %end145 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool144, i32 0, i32 2, !dbg !2570
  %101 = load i8*, i8** %end145, align 8, !dbg !2570
  %cmp146 = icmp eq i8* %99, %101, !dbg !2570
  br i1 %cmp146, label %land.lhs.true148, label %cond.false153, !dbg !2570

land.lhs.true148:                                 ; preds = %if.else141
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2573
  %m_tempPool149 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %102, i32 0, i32 79, !dbg !2573
  %call150 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool149), !dbg !2573
  %tobool151 = icmp ne i8 %call150, 0, !dbg !2573
  br i1 %tobool151, label %cond.false153, label %cond.true152, !dbg !2575

cond.true152:                                     ; preds = %land.lhs.true148
  br i1 false, label %if.end158, label %if.then157, !dbg !2576

cond.false153:                                    ; preds = %land.lhs.true148, %if.else141
  %103 = load i8*, i8** %s, align 8, !dbg !2578
  %104 = load i8, i8* %103, align 1, !dbg !2578
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2578
  %m_tempPool154 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 79, !dbg !2578
  %ptr155 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool154, i32 0, i32 3, !dbg !2578
  %106 = load i8*, i8** %ptr155, align 8, !dbg !2578
  %incdec.ptr156 = getelementptr inbounds i8, i8* %106, i32 1, !dbg !2578
  store i8* %incdec.ptr156, i8** %ptr155, align 8, !dbg !2578
  store i8 %104, i8* %106, align 1, !dbg !2578
  br i1 true, label %if.end158, label %if.then157, !dbg !2580

if.then157:                                       ; preds = %cond.false153, %cond.true152
  store i8 0, i8* %retval, align 1, !dbg !2581
  br label %return, !dbg !2581

if.end158:                                        ; preds = %cond.false153, %cond.true152
  %107 = load i8*, i8** %s, align 8, !dbg !2582
  %incdec.ptr159 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !2582
  store i8* %incdec.ptr159, i8** %s, align 8, !dbg !2582
  br label %if.end160

if.end160:                                        ; preds = %if.end158, %if.end140
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.end25
  br label %while.cond, !dbg !2583

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !2585
  br label %return, !dbg !2585

return:                                           ; preds = %while.end, %if.then157, %if.then129, %if.then122, %if.then104, %if.then75, %if.then63, %if.then57, %if.then14
  %108 = load i8, i8* %retval, align 1, !dbg !2586
  ret i8 %108, !dbg !2586
}

; Function Attrs: nounwind uwtable
define void @XML_ParserFree(%struct.XML_ParserStruct* %parser) #0 !dbg !670 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %tagList = alloca %struct.tag*, align 8
  %entityList = alloca %struct.open_internal_entity*, align 8
  %p = alloca %struct.tag*, align 8
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2587, metadata !1076), !dbg !2588
  call void @llvm.dbg.declare(metadata %struct.tag** %tagList, metadata !2589, metadata !1076), !dbg !2590
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %entityList, metadata !2591, metadata !1076), !dbg !2592
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2593
  %cmp = icmp eq %struct.XML_ParserStruct* %0, null, !dbg !2595
  br i1 %cmp, label %if.then, label %if.end, !dbg !2596

if.then:                                          ; preds = %entry
  br label %return, !dbg !2597

if.end:                                           ; preds = %entry
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2598
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 67, !dbg !2598
  %2 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !2598
  store %struct.tag* %2, %struct.tag** %tagList, align 8, !dbg !2599
  br label %for.cond, !dbg !2600

for.cond:                                         ; preds = %if.end8, %if.end
  call void @llvm.dbg.declare(metadata %struct.tag** %p, metadata !2601, metadata !1076), !dbg !2605
  %3 = load %struct.tag*, %struct.tag** %tagList, align 8, !dbg !2606
  %cmp1 = icmp eq %struct.tag* %3, null, !dbg !2608
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !2609

if.then2:                                         ; preds = %for.cond
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2610
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 68, !dbg !2610
  %5 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8, !dbg !2610
  %cmp3 = icmp eq %struct.tag* %5, null, !dbg !2613
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2614

if.then4:                                         ; preds = %if.then2
  br label %for.end, !dbg !2615

if.end5:                                          ; preds = %if.then2
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2616
  %m_freeTagList6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 68, !dbg !2616
  %7 = load %struct.tag*, %struct.tag** %m_freeTagList6, align 8, !dbg !2616
  store %struct.tag* %7, %struct.tag** %tagList, align 8, !dbg !2617
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2618
  %m_freeTagList7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 68, !dbg !2618
  store %struct.tag* null, %struct.tag** %m_freeTagList7, align 8, !dbg !2619
  br label %if.end8, !dbg !2620

if.end8:                                          ; preds = %if.end5, %for.cond
  %9 = load %struct.tag*, %struct.tag** %tagList, align 8, !dbg !2621
  store %struct.tag* %9, %struct.tag** %p, align 8, !dbg !2622
  %10 = load %struct.tag*, %struct.tag** %tagList, align 8, !dbg !2623
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %10, i32 0, i32 0, !dbg !2624
  %11 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !2624
  store %struct.tag* %11, %struct.tag** %tagList, align 8, !dbg !2625
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2626
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 3, !dbg !2626
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !2626
  %13 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !2626
  %14 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !2626
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %14, i32 0, i32 4, !dbg !2626
  %15 = load i8*, i8** %buf, align 8, !dbg !2626
  call void %13(i8* %15), !dbg !2626
  %16 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !2627
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %16, i32 0, i32 6, !dbg !2628
  %17 = load %struct.binding*, %struct.binding** %bindings, align 8, !dbg !2628
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2629
  call void @destroyBindings(%struct.binding* %17, %struct.XML_ParserStruct* %18), !dbg !2630
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2631
  %m_mem9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 3, !dbg !2631
  %free_fcn10 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem9, i32 0, i32 2, !dbg !2631
  %20 = load void (i8*)*, void (i8*)** %free_fcn10, align 8, !dbg !2631
  %21 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !2631
  %22 = bitcast %struct.tag* %21 to i8*, !dbg !2631
  call void %20(i8* %22), !dbg !2631
  br label %for.cond, !dbg !2632

for.end:                                          ; preds = %if.then4
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2634
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 50, !dbg !2634
  %24 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !2634
  store %struct.open_internal_entity* %24, %struct.open_internal_entity** %entityList, align 8, !dbg !2635
  br label %for.cond11, !dbg !2636

for.cond11:                                       ; preds = %if.end19, %for.end
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !2637, metadata !1076), !dbg !2641
  %25 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8, !dbg !2642
  %cmp12 = icmp eq %struct.open_internal_entity* %25, null, !dbg !2644
  br i1 %cmp12, label %if.then13, label %if.end19, !dbg !2645

if.then13:                                        ; preds = %for.cond11
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2646
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 51, !dbg !2646
  %27 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !2646
  %cmp14 = icmp eq %struct.open_internal_entity* %27, null, !dbg !2649
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2650

if.then15:                                        ; preds = %if.then13
  br label %for.end22, !dbg !2651

if.end16:                                         ; preds = %if.then13
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2652
  %m_freeInternalEntities17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 51, !dbg !2652
  %29 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities17, align 8, !dbg !2652
  store %struct.open_internal_entity* %29, %struct.open_internal_entity** %entityList, align 8, !dbg !2653
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2654
  %m_freeInternalEntities18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 51, !dbg !2654
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_freeInternalEntities18, align 8, !dbg !2655
  br label %if.end19, !dbg !2656

if.end19:                                         ; preds = %if.end16, %for.cond11
  %31 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8, !dbg !2657
  store %struct.open_internal_entity* %31, %struct.open_internal_entity** %openEntity, align 8, !dbg !2658
  %32 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8, !dbg !2659
  %next = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %32, i32 0, i32 2, !dbg !2660
  %33 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next, align 8, !dbg !2660
  store %struct.open_internal_entity* %33, %struct.open_internal_entity** %entityList, align 8, !dbg !2661
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2662
  %m_mem20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 3, !dbg !2662
  %free_fcn21 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem20, i32 0, i32 2, !dbg !2662
  %35 = load void (i8*)*, void (i8*)** %free_fcn21, align 8, !dbg !2662
  %36 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !2662
  %37 = bitcast %struct.open_internal_entity* %36 to i8*, !dbg !2662
  call void %35(i8* %37), !dbg !2662
  br label %for.cond11, !dbg !2663

for.end22:                                        ; preds = %if.then15
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2665
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 70, !dbg !2665
  %39 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !2665
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2666
  call void @destroyBindings(%struct.binding* %39, %struct.XML_ParserStruct* %40), !dbg !2667
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2668
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 69, !dbg !2668
  %42 = load %struct.binding*, %struct.binding** %m_inheritedBindings, align 8, !dbg !2668
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2669
  call void @destroyBindings(%struct.binding* %42, %struct.XML_ParserStruct* %43), !dbg !2670
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2671
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 79, !dbg !2671
  call void @poolDestroy(%struct.STRING_POOL* %m_tempPool), !dbg !2672
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2673
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 80, !dbg !2673
  call void @poolDestroy(%struct.STRING_POOL* %m_temp2Pool), !dbg !2674
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2675
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 65, !dbg !2675
  %47 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !2675
  %tobool = icmp ne %struct.DTD* %47, null, !dbg !2675
  br i1 %tobool, label %if.then23, label %if.end27, !dbg !2677

if.then23:                                        ; preds = %for.end22
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2678
  %m_dtd24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 65, !dbg !2678
  %49 = load %struct.DTD*, %struct.DTD** %m_dtd24, align 8, !dbg !2678
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2679
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 84, !dbg !2679
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !2679
  %tobool25 = icmp ne %struct.XML_ParserStruct* %51, null, !dbg !2680
  %lnot = xor i1 %tobool25, true, !dbg !2680
  %lnot.ext = zext i1 %lnot to i32, !dbg !2680
  %conv = trunc i32 %lnot.ext to i8, !dbg !2681
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2682
  %m_mem26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 3, !dbg !2683
  call void @dtdDestroy(%struct.DTD* %49, i8 zeroext %conv, %struct.XML_Memory_Handling_Suite* %m_mem26), !dbg !2684
  br label %if.end27, !dbg !2684

if.end27:                                         ; preds = %if.then23, %for.end22
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2685
  %m_mem28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 3, !dbg !2685
  %free_fcn29 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem28, i32 0, i32 2, !dbg !2685
  %54 = load void (i8*)*, void (i8*)** %free_fcn29, align 8, !dbg !2685
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2685
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 74, !dbg !2685
  %56 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !2685
  %57 = bitcast %struct.ATTRIBUTE* %56 to i8*, !dbg !2685
  call void %54(i8* %57), !dbg !2685
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2686
  %m_mem30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 3, !dbg !2686
  %free_fcn31 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem30, i32 0, i32 2, !dbg !2686
  %59 = load void (i8*)*, void (i8*)** %free_fcn31, align 8, !dbg !2686
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2686
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 81, !dbg !2686
  %61 = load i8*, i8** %m_groupConnector, align 8, !dbg !2686
  call void %59(i8* %61), !dbg !2686
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2687
  %m_mem32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 3, !dbg !2687
  %free_fcn33 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem32, i32 0, i32 2, !dbg !2687
  %63 = load void (i8*)*, void (i8*)** %free_fcn33, align 8, !dbg !2687
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2687
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 2, !dbg !2687
  %65 = load i8*, i8** %m_buffer, align 8, !dbg !2687
  call void %63(i8* %65), !dbg !2687
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2688
  %m_mem34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 3, !dbg !2688
  %free_fcn35 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem34, i32 0, i32 2, !dbg !2688
  %67 = load void (i8*)*, void (i8*)** %free_fcn35, align 8, !dbg !2688
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2688
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 9, !dbg !2688
  %69 = load i8*, i8** %m_dataBuf, align 8, !dbg !2688
  call void %67(i8* %69), !dbg !2688
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2689
  %m_mem36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 3, !dbg !2689
  %free_fcn37 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem36, i32 0, i32 2, !dbg !2689
  %71 = load void (i8*)*, void (i8*)** %free_fcn37, align 8, !dbg !2689
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2689
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 75, !dbg !2689
  %73 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts, align 8, !dbg !2689
  %74 = bitcast %struct.NS_ATT* %73 to i8*, !dbg !2689
  call void %71(i8* %74), !dbg !2689
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2690
  %m_mem38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 3, !dbg !2690
  %free_fcn39 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem38, i32 0, i32 2, !dbg !2690
  %76 = load void (i8*)*, void (i8*)** %free_fcn39, align 8, !dbg !2690
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2690
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 40, !dbg !2690
  %78 = load i8*, i8** %m_unknownEncodingMem, align 8, !dbg !2690
  call void %76(i8* %78), !dbg !2690
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2691
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 43, !dbg !2691
  %80 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !2691
  %tobool40 = icmp ne void (i8*)* %80, null, !dbg !2691
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !2693

if.then41:                                        ; preds = %if.end27
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2694
  %m_unknownEncodingRelease42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 43, !dbg !2694
  %82 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease42, align 8, !dbg !2694
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2695
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 41, !dbg !2695
  %84 = load i8*, i8** %m_unknownEncodingData, align 8, !dbg !2695
  call void %82(i8* %84), !dbg !2694
  br label %if.end43, !dbg !2694

if.end43:                                         ; preds = %if.then41, %if.end27
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2696
  %m_mem44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 3, !dbg !2696
  %free_fcn45 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem44, i32 0, i32 2, !dbg !2696
  %86 = load void (i8*)*, void (i8*)** %free_fcn45, align 8, !dbg !2696
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2696
  %88 = bitcast %struct.XML_ParserStruct* %87 to i8*, !dbg !2696
  call void %86(i8* %88), !dbg !2696
  br label %return, !dbg !2697

return:                                           ; preds = %if.end43, %if.then
  ret void, !dbg !2698
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 !dbg !987 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2700, metadata !1076), !dbg !2701
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !2702, metadata !1076), !dbg !2703
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !2704, metadata !1076), !dbg !2705
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !2706, metadata !1076), !dbg !2707
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2708, metadata !1076), !dbg !2709
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2710
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %0), !dbg !2711
  store i32 %call, i32* %result, align 4, !dbg !2709
  %1 = load i32, i32* %result, align 4, !dbg !2712
  %cmp = icmp ne i32 %1, 0, !dbg !2714
  br i1 %cmp, label %if.then, label %if.end, !dbg !2715

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %result, align 4, !dbg !2716
  store i32 %2, i32* %retval, align 4, !dbg !2717
  br label %return, !dbg !2717

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2718
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 45, !dbg !2718
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor2, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !2719
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2720
  %5 = load i8*, i8** %start.addr, align 8, !dbg !2721
  %6 = load i8*, i8** %end.addr, align 8, !dbg !2722
  %7 = load i8**, i8*** %endPtr.addr, align 8, !dbg !2723
  %call1 = call i32 @externalEntityInitProcessor2(%struct.XML_ParserStruct* %4, i8* %5, i8* %6, i8** %7), !dbg !2724
  store i32 %call1, i32* %retval, align 4, !dbg !2725
  br label %return, !dbg !2725

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !2726
  ret i32 %8, !dbg !2726
}

; Function Attrs: nounwind uwtable
define internal void @destroyBindings(%struct.binding* %bindings, %struct.XML_ParserStruct* %parser) #0 !dbg !977 {
entry:
  %bindings.addr = alloca %struct.binding*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %b = alloca %struct.binding*, align 8
  store %struct.binding* %bindings, %struct.binding** %bindings.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.binding** %bindings.addr, metadata !2727, metadata !1076), !dbg !2728
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2729, metadata !1076), !dbg !2730
  br label %for.cond, !dbg !2731

for.cond:                                         ; preds = %if.end, %entry
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !2732, metadata !1076), !dbg !2736
  %0 = load %struct.binding*, %struct.binding** %bindings.addr, align 8, !dbg !2737
  store %struct.binding* %0, %struct.binding** %b, align 8, !dbg !2736
  %1 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !2738
  %tobool = icmp ne %struct.binding* %1, null, !dbg !2738
  br i1 %tobool, label %if.end, label %if.then, !dbg !2740

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !2741

if.end:                                           ; preds = %for.cond
  %2 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !2742
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %2, i32 0, i32 1, !dbg !2743
  %3 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !2743
  store %struct.binding* %3, %struct.binding** %bindings.addr, align 8, !dbg !2744
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2745
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 3, !dbg !2745
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !2745
  %5 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !2745
  %6 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !2745
  %uri = getelementptr inbounds %struct.binding, %struct.binding* %6, i32 0, i32 4, !dbg !2745
  %7 = load i8*, i8** %uri, align 8, !dbg !2745
  call void %5(i8* %7), !dbg !2745
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2746
  %m_mem1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 3, !dbg !2746
  %free_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem1, i32 0, i32 2, !dbg !2746
  %9 = load void (i8*)*, void (i8*)** %free_fcn2, align 8, !dbg !2746
  %10 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !2746
  %11 = bitcast %struct.binding* %10 to i8*, !dbg !2746
  call void %9(i8* %11), !dbg !2746
  br label %for.cond, !dbg !2747

for.end:                                          ; preds = %if.then
  ret void, !dbg !2749
}

; Function Attrs: nounwind uwtable
define internal void @poolDestroy(%struct.STRING_POOL* %pool) #0 !dbg !1019 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %p = alloca %struct.block*, align 8
  %tem = alloca %struct.block*, align 8
  %tem4 = alloca %struct.block*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !2750, metadata !1076), !dbg !2751
  call void @llvm.dbg.declare(metadata %struct.block** %p, metadata !2752, metadata !1076), !dbg !2753
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2754
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 0, !dbg !2755
  %1 = load %struct.block*, %struct.block** %blocks, align 8, !dbg !2755
  store %struct.block* %1, %struct.block** %p, align 8, !dbg !2753
  br label %while.cond, !dbg !2756

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.block*, %struct.block** %p, align 8, !dbg !2757
  %tobool = icmp ne %struct.block* %2, null, !dbg !2759
  br i1 %tobool, label %while.body, label %while.end, !dbg !2759

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.block** %tem, metadata !2760, metadata !1076), !dbg !2762
  %3 = load %struct.block*, %struct.block** %p, align 8, !dbg !2763
  %next = getelementptr inbounds %struct.block, %struct.block* %3, i32 0, i32 0, !dbg !2764
  %4 = load %struct.block*, %struct.block** %next, align 8, !dbg !2764
  store %struct.block* %4, %struct.block** %tem, align 8, !dbg !2762
  %5 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2765
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %5, i32 0, i32 5, !dbg !2766
  %6 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !2766
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %6, i32 0, i32 2, !dbg !2767
  %7 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !2767
  %8 = load %struct.block*, %struct.block** %p, align 8, !dbg !2768
  %9 = bitcast %struct.block* %8 to i8*, !dbg !2768
  call void %7(i8* %9), !dbg !2765
  %10 = load %struct.block*, %struct.block** %tem, align 8, !dbg !2769
  store %struct.block* %10, %struct.block** %p, align 8, !dbg !2770
  br label %while.cond, !dbg !2771

while.end:                                        ; preds = %while.cond
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2773
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 1, !dbg !2774
  %12 = load %struct.block*, %struct.block** %freeBlocks, align 8, !dbg !2774
  store %struct.block* %12, %struct.block** %p, align 8, !dbg !2775
  br label %while.cond1, !dbg !2776

while.cond1:                                      ; preds = %while.body3, %while.end
  %13 = load %struct.block*, %struct.block** %p, align 8, !dbg !2777
  %tobool2 = icmp ne %struct.block* %13, null, !dbg !2778
  br i1 %tobool2, label %while.body3, label %while.end8, !dbg !2778

while.body3:                                      ; preds = %while.cond1
  call void @llvm.dbg.declare(metadata %struct.block** %tem4, metadata !2779, metadata !1076), !dbg !2781
  %14 = load %struct.block*, %struct.block** %p, align 8, !dbg !2782
  %next5 = getelementptr inbounds %struct.block, %struct.block* %14, i32 0, i32 0, !dbg !2783
  %15 = load %struct.block*, %struct.block** %next5, align 8, !dbg !2783
  store %struct.block* %15, %struct.block** %tem4, align 8, !dbg !2781
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !2784
  %mem6 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 5, !dbg !2785
  %17 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem6, align 8, !dbg !2785
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %17, i32 0, i32 2, !dbg !2786
  %18 = load void (i8*)*, void (i8*)** %free_fcn7, align 8, !dbg !2786
  %19 = load %struct.block*, %struct.block** %p, align 8, !dbg !2787
  %20 = bitcast %struct.block* %19 to i8*, !dbg !2787
  call void %18(i8* %20), !dbg !2784
  %21 = load %struct.block*, %struct.block** %tem4, align 8, !dbg !2788
  store %struct.block* %21, %struct.block** %p, align 8, !dbg !2789
  br label %while.cond1, !dbg !2790

while.end8:                                       ; preds = %while.cond1
  ret void, !dbg !2791
}

; Function Attrs: nounwind uwtable
define internal void @dtdDestroy(%struct.DTD* %p, i8 zeroext %isDocEntity, %struct.XML_Memory_Handling_Suite* %ms) #0 !dbg !1001 {
entry:
  %p.addr = alloca %struct.DTD*, align 8
  %isDocEntity.addr = alloca i8, align 1
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %e = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.DTD* %p, %struct.DTD** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DTD** %p.addr, metadata !2792, metadata !1076), !dbg !2793
  store i8 %isDocEntity, i8* %isDocEntity.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isDocEntity.addr, metadata !2794, metadata !1076), !dbg !2795
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !2796, metadata !1076), !dbg !2797
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !2798, metadata !1076), !dbg !2799
  %0 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2800
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %0, i32 0, i32 1, !dbg !2801
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes), !dbg !2802
  br label %for.cond, !dbg !2803

for.cond:                                         ; preds = %if.end2, %entry
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %e, metadata !2804, metadata !1076), !dbg !2808
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !2809
  %1 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*, !dbg !2810
  store %struct.ELEMENT_TYPE* %1, %struct.ELEMENT_TYPE** %e, align 8, !dbg !2808
  %2 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !2811
  %tobool = icmp ne %struct.ELEMENT_TYPE* %2, null, !dbg !2811
  br i1 %tobool, label %if.end, label %if.then, !dbg !2813

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !2814

if.end:                                           ; preds = %for.cond
  %3 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !2815
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %3, i32 0, i32 4, !dbg !2817
  %4 = load i32, i32* %allocDefaultAtts, align 4, !dbg !2817
  %cmp = icmp ne i32 %4, 0, !dbg !2818
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !2819

if.then1:                                         ; preds = %if.end
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !2820
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %5, i32 0, i32 2, !dbg !2821
  %6 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !2821
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8, !dbg !2822
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %7, i32 0, i32 5, !dbg !2823
  %8 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !2823
  %9 = bitcast %struct.DEFAULT_ATTRIBUTE* %8 to i8*, !dbg !2822
  call void %6(i8* %9), !dbg !2820
  br label %if.end2, !dbg !2820

if.end2:                                          ; preds = %if.then1, %if.end
  br label %for.cond, !dbg !2824

for.end:                                          ; preds = %if.then
  %10 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2826
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 0, !dbg !2827
  call void @hashTableDestroy(%struct.HASH_TABLE* %generalEntities), !dbg !2828
  %11 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2829
  %elementTypes3 = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 1, !dbg !2830
  call void @hashTableDestroy(%struct.HASH_TABLE* %elementTypes3), !dbg !2831
  %12 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2832
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 2, !dbg !2833
  call void @hashTableDestroy(%struct.HASH_TABLE* %attributeIds), !dbg !2834
  %13 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2835
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 3, !dbg !2836
  call void @hashTableDestroy(%struct.HASH_TABLE* %prefixes), !dbg !2837
  %14 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2838
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 4, !dbg !2839
  call void @poolDestroy(%struct.STRING_POOL* %pool), !dbg !2840
  %15 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2841
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 5, !dbg !2842
  call void @poolDestroy(%struct.STRING_POOL* %entityValuePool), !dbg !2843
  %16 = load i8, i8* %isDocEntity.addr, align 1, !dbg !2844
  %tobool4 = icmp ne i8 %16, 0, !dbg !2844
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !2846

if.then5:                                         ; preds = %for.end
  %17 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !2847
  %free_fcn6 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %17, i32 0, i32 2, !dbg !2849
  %18 = load void (i8*)*, void (i8*)** %free_fcn6, align 8, !dbg !2849
  %19 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2850
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 16, !dbg !2851
  %20 = load i32*, i32** %scaffIndex, align 8, !dbg !2851
  %21 = bitcast i32* %20 to i8*, !dbg !2850
  call void %18(i8* %21), !dbg !2847
  %22 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !2852
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %22, i32 0, i32 2, !dbg !2853
  %23 = load void (i8*)*, void (i8*)** %free_fcn7, align 8, !dbg !2853
  %24 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2854
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %24, i32 0, i32 11, !dbg !2855
  %25 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !2855
  %26 = bitcast %struct.CONTENT_SCAFFOLD* %25 to i8*, !dbg !2854
  call void %23(i8* %26), !dbg !2852
  br label %if.end8, !dbg !2856

if.end8:                                          ; preds = %if.then5, %for.end
  %27 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !2857
  %free_fcn9 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %27, i32 0, i32 2, !dbg !2858
  %28 = load void (i8*)*, void (i8*)** %free_fcn9, align 8, !dbg !2858
  %29 = load %struct.DTD*, %struct.DTD** %p.addr, align 8, !dbg !2859
  %30 = bitcast %struct.DTD* %29 to i8*, !dbg !2859
  call void %28(i8* %30), !dbg !2857
  ret void, !dbg !2860
}

; Function Attrs: nounwind uwtable
define void @XML_UseParserAsHandlerArg(%struct.XML_ParserStruct* %parser) #0 !dbg !673 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2861, metadata !1076), !dbg !2862
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2863
  %1 = bitcast %struct.XML_ParserStruct* %0 to i8*, !dbg !2863
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2864
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 1, !dbg !2864
  store i8* %1, i8** %m_handlerArg, align 8, !dbg !2865
  ret void, !dbg !2866
}

; Function Attrs: nounwind uwtable
define i32 @XML_UseForeignDTD(%struct.XML_ParserStruct* %parser, i8 zeroext %useDTD) #0 !dbg !674 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %useDTD.addr = alloca i8, align 1
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2867, metadata !1076), !dbg !2868
  store i8 %useDTD, i8* %useDTD.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %useDTD.addr, metadata !2869, metadata !1076), !dbg !2870
  ret i32 25, !dbg !2871
}

; Function Attrs: nounwind uwtable
define void @XML_SetReturnNSTriplet(%struct.XML_ParserStruct* %parser, i32 %do_nst) #0 !dbg !677 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %do_nst.addr = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2872, metadata !1076), !dbg !2873
  store i32 %do_nst, i32* %do_nst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_nst.addr, metadata !2874, metadata !1076), !dbg !2875
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2876
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !2876
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !2876
  %1 = load i32, i32* %parsing, align 8, !dbg !2876
  %cmp = icmp eq i32 %1, 1, !dbg !2878
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2879

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2880
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !2880
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !2880
  %3 = load i32, i32* %parsing2, align 8, !dbg !2880
  %cmp3 = icmp eq i32 %3, 3, !dbg !2882
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2883

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !2884

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %do_nst.addr, align 4, !dbg !2885
  %tobool = icmp ne i32 %4, 0, !dbg !2885
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !2885
  %conv = trunc i32 %cond to i8, !dbg !2885
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2886
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 39, !dbg !2886
  store i8 %conv, i8* %m_ns_triplets, align 1, !dbg !2887
  br label %return, !dbg !2888

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2889
}

; Function Attrs: nounwind uwtable
define void @XML_SetUserData(%struct.XML_ParserStruct* %parser, i8* %p) #0 !dbg !680 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2891, metadata !1076), !dbg !2892
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2893, metadata !1076), !dbg !2894
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2895
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 1, !dbg !2895
  %1 = load i8*, i8** %m_handlerArg, align 8, !dbg !2895
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2897
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 0, !dbg !2897
  %3 = load i8*, i8** %m_userData, align 8, !dbg !2897
  %cmp = icmp eq i8* %1, %3, !dbg !2898
  br i1 %cmp, label %if.then, label %if.else, !dbg !2899

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %p.addr, align 8, !dbg !2900
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2901
  %m_userData1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 0, !dbg !2901
  store i8* %4, i8** %m_userData1, align 8, !dbg !2902
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2903
  %m_handlerArg2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 1, !dbg !2903
  store i8* %4, i8** %m_handlerArg2, align 8, !dbg !2904
  br label %if.end, !dbg !2903

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %p.addr, align 8, !dbg !2905
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2906
  %m_userData3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 0, !dbg !2906
  store i8* %7, i8** %m_userData3, align 8, !dbg !2907
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2908
}

; Function Attrs: nounwind uwtable
define i32 @XML_SetBase(%struct.XML_ParserStruct* %parser, i8* %p) #0 !dbg !683 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2909, metadata !1076), !dbg !2910
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2911, metadata !1076), !dbg !2912
  %0 = load i8*, i8** %p.addr, align 8, !dbg !2913
  %tobool = icmp ne i8* %0, null, !dbg !2913
  br i1 %tobool, label %if.then, label %if.else, !dbg !2915

if.then:                                          ; preds = %entry
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2916
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65, !dbg !2916
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !2916
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 4, !dbg !2918
  %3 = load i8*, i8** %p.addr, align 8, !dbg !2919
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %3), !dbg !2920
  store i8* %call, i8** %p.addr, align 8, !dbg !2921
  %4 = load i8*, i8** %p.addr, align 8, !dbg !2922
  %tobool1 = icmp ne i8* %4, null, !dbg !2922
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !2924

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !2925
  br label %return, !dbg !2925

if.end:                                           ; preds = %if.then
  %5 = load i8*, i8** %p.addr, align 8, !dbg !2926
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2927
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 66, !dbg !2927
  store i8* %5, i8** %m_curBase, align 8, !dbg !2928
  br label %if.end4, !dbg !2929

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2930
  %m_curBase3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 66, !dbg !2930
  store i8* null, i8** %m_curBase3, align 8, !dbg !2931
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  store i32 1, i32* %retval, align 4, !dbg !2932
  br label %return, !dbg !2932

return:                                           ; preds = %if.end4, %if.then2
  %8 = load i32, i32* %retval, align 4, !dbg !2933
  ret i32 %8, !dbg !2933
}

; Function Attrs: nounwind uwtable
define i8* @XML_GetBase(%struct.XML_ParserStruct* %parser) #0 !dbg !684 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2934, metadata !1076), !dbg !2935
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2936
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 66, !dbg !2936
  %1 = load i8*, i8** %m_curBase, align 8, !dbg !2936
  ret i8* %1, !dbg !2937
}

; Function Attrs: nounwind uwtable
define i32 @XML_GetSpecifiedAttributeCount(%struct.XML_ParserStruct* %parser) #0 !dbg !687 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2938, metadata !1076), !dbg !2939
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2940
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 72, !dbg !2940
  %1 = load i32, i32* %m_nSpecifiedAtts, align 4, !dbg !2940
  ret i32 %1, !dbg !2941
}

; Function Attrs: nounwind uwtable
define i32 @XML_GetIdAttributeIndex(%struct.XML_ParserStruct* %parser) #0 !dbg !690 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2942, metadata !1076), !dbg !2943
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2944
  %m_idAttIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 73, !dbg !2944
  %1 = load i32, i32* %m_idAttIndex, align 8, !dbg !2944
  ret i32 %1, !dbg !2945
}

; Function Attrs: nounwind uwtable
define void @XML_SetElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8**)* %start, void (i8*, i8*)* %end) #0 !dbg !691 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8**)*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2946, metadata !1076), !dbg !2947
  store void (i8*, i8*, i8**)* %start, void (i8*, i8*, i8**)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8**)** %start.addr, metadata !2948, metadata !1076), !dbg !2949
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !2950, metadata !1076), !dbg !2951
  %0 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %start.addr, align 8, !dbg !2952
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2953
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 11, !dbg !2953
  store void (i8*, i8*, i8**)* %0, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !2954
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !2955
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2956
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 12, !dbg !2956
  store void (i8*, i8*)* %2, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !2957
  ret void, !dbg !2958
}

; Function Attrs: nounwind uwtable
define void @XML_SetStartElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8**)* %start) #0 !dbg !694 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8**)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2959, metadata !1076), !dbg !2960
  store void (i8*, i8*, i8**)* %start, void (i8*, i8*, i8**)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8**)** %start.addr, metadata !2961, metadata !1076), !dbg !2962
  %0 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %start.addr, align 8, !dbg !2963
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2964
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 11, !dbg !2964
  store void (i8*, i8*, i8**)* %0, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !2965
  ret void, !dbg !2966
}

; Function Attrs: nounwind uwtable
define void @XML_SetEndElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %end) #0 !dbg !697 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2967, metadata !1076), !dbg !2968
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !2969, metadata !1076), !dbg !2970
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !2971
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2972
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 12, !dbg !2972
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !2973
  ret void, !dbg !2974
}

; Function Attrs: nounwind uwtable
define void @XML_SetCharacterDataHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 !dbg !700 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2975, metadata !1076), !dbg !2976
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !2977, metadata !1076), !dbg !2978
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !2979
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2980
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 13, !dbg !2980
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !2981
  ret void, !dbg !2982
}

; Function Attrs: nounwind uwtable
define void @XML_SetProcessingInstructionHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %handler) #0 !dbg !703 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2983, metadata !1076), !dbg !2984
  store void (i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %handler.addr, metadata !2985, metadata !1076), !dbg !2986
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %handler.addr, align 8, !dbg !2987
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2988
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 14, !dbg !2988
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !2989
  ret void, !dbg !2990
}

; Function Attrs: nounwind uwtable
define void @XML_SetCommentHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %handler) #0 !dbg !706 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2991, metadata !1076), !dbg !2992
  store void (i8*, i8*)* %handler, void (i8*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %handler.addr, metadata !2993, metadata !1076), !dbg !2994
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %handler.addr, align 8, !dbg !2995
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !2996
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 15, !dbg !2996
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !2997
  ret void, !dbg !2998
}

; Function Attrs: nounwind uwtable
define void @XML_SetCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %start, void (i8*)* %end) #0 !dbg !709 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*)*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !2999, metadata !1076), !dbg !3000
  store void (i8*)* %start, void (i8*)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %start.addr, metadata !3001, metadata !1076), !dbg !3002
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !3003, metadata !1076), !dbg !3004
  %0 = load void (i8*)*, void (i8*)** %start.addr, align 8, !dbg !3005
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3006
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 16, !dbg !3006
  store void (i8*)* %0, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !3007
  %2 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !3008
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3009
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 17, !dbg !3009
  store void (i8*)* %2, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !3010
  ret void, !dbg !3011
}

; Function Attrs: nounwind uwtable
define void @XML_SetStartCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %start) #0 !dbg !712 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3012, metadata !1076), !dbg !3013
  store void (i8*)* %start, void (i8*)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %start.addr, metadata !3014, metadata !1076), !dbg !3015
  %0 = load void (i8*)*, void (i8*)** %start.addr, align 8, !dbg !3016
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3017
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 16, !dbg !3017
  store void (i8*)* %0, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !3018
  ret void, !dbg !3019
}

; Function Attrs: nounwind uwtable
define void @XML_SetEndCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %end) #0 !dbg !715 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3020, metadata !1076), !dbg !3021
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !3022, metadata !1076), !dbg !3023
  %0 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !3024
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3025
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 17, !dbg !3025
  store void (i8*)* %0, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !3026
  ret void, !dbg !3027
}

; Function Attrs: nounwind uwtable
define void @XML_SetDefaultHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 !dbg !718 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3028, metadata !1076), !dbg !3029
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !3030, metadata !1076), !dbg !3031
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !3032
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3033
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 18, !dbg !3033
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !3034
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3035
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 52, !dbg !3035
  store i8 0, i8* %m_defaultExpandInternalEntities, align 8, !dbg !3036
  ret void, !dbg !3037
}

; Function Attrs: nounwind uwtable
define void @XML_SetDefaultHandlerExpand(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 !dbg !721 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3038, metadata !1076), !dbg !3039
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !3040, metadata !1076), !dbg !3041
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !3042
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3043
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 18, !dbg !3043
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !3044
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3045
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 52, !dbg !3045
  store i8 1, i8* %m_defaultExpandInternalEntities, align 8, !dbg !3046
  ret void, !dbg !3047
}

; Function Attrs: nounwind uwtable
define void @XML_SetDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*)* %end) #0 !dbg !722 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*, i8*, i32)*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3048, metadata !1076), !dbg !3049
  store void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i32)** %start.addr, metadata !3050, metadata !1076), !dbg !3051
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !3052, metadata !1076), !dbg !3053
  %0 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8, !dbg !3054
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3055
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 19, !dbg !3055
  store void (i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !3056
  %2 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !3057
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3058
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 20, !dbg !3058
  store void (i8*)* %2, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !3059
  ret void, !dbg !3060
}

; Function Attrs: nounwind uwtable
define void @XML_SetStartDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i32)* %start) #0 !dbg !725 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3061, metadata !1076), !dbg !3062
  store void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i32)** %start.addr, metadata !3063, metadata !1076), !dbg !3064
  %0 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8, !dbg !3065
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3066
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 19, !dbg !3066
  store void (i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !3067
  ret void, !dbg !3068
}

; Function Attrs: nounwind uwtable
define void @XML_SetEndDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %end) #0 !dbg !728 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3069, metadata !1076), !dbg !3070
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %end.addr, metadata !3071, metadata !1076), !dbg !3072
  %0 = load void (i8*)*, void (i8*)** %end.addr, align 8, !dbg !3073
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3074
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 20, !dbg !3074
  store void (i8*)* %0, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !3075
  ret void, !dbg !3076
}

; Function Attrs: nounwind uwtable
define void @XML_SetUnparsedEntityDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*, i8*)* %handler) #0 !dbg !731 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3077, metadata !1076), !dbg !3078
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, metadata !3079, metadata !1076), !dbg !3080
  %0 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !3081
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3082
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 21, !dbg !3082
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !3083
  ret void, !dbg !3084
}

; Function Attrs: nounwind uwtable
define void @XML_SetNotationDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*)* %handler) #0 !dbg !734 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3085, metadata !1076), !dbg !3086
  store void (i8*, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, metadata !3087, metadata !1076), !dbg !3088
  %0 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !3089
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3090
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 22, !dbg !3090
  store void (i8*, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !3091
  ret void, !dbg !3092
}

; Function Attrs: nounwind uwtable
define void @XML_SetNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %start, void (i8*, i8*)* %end) #0 !dbg !737 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*)*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3093, metadata !1076), !dbg !3094
  store void (i8*, i8*, i8*)* %start, void (i8*, i8*, i8*)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %start.addr, metadata !3095, metadata !1076), !dbg !3096
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !3097, metadata !1076), !dbg !3098
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %start.addr, align 8, !dbg !3099
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3100
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 23, !dbg !3100
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !3101
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !3102
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3103
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 24, !dbg !3103
  store void (i8*, i8*)* %2, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !3104
  ret void, !dbg !3105
}

; Function Attrs: nounwind uwtable
define void @XML_SetStartNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %start) #0 !dbg !740 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3106, metadata !1076), !dbg !3107
  store void (i8*, i8*, i8*)* %start, void (i8*, i8*, i8*)** %start.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %start.addr, metadata !3108, metadata !1076), !dbg !3109
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %start.addr, align 8, !dbg !3110
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3111
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 23, !dbg !3111
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !3112
  ret void, !dbg !3113
}

; Function Attrs: nounwind uwtable
define void @XML_SetEndNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %end) #0 !dbg !743 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3114, metadata !1076), !dbg !3115
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %end.addr, metadata !3116, metadata !1076), !dbg !3117
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8, !dbg !3118
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3119
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 24, !dbg !3119
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !3120
  ret void, !dbg !3121
}

; Function Attrs: nounwind uwtable
define void @XML_SetNotStandaloneHandler(%struct.XML_ParserStruct* %parser, i32 (i8*)* %handler) #0 !dbg !746 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3122, metadata !1076), !dbg !3123
  store i32 (i8*)* %handler, i32 (i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*)** %handler.addr, metadata !3124, metadata !1076), !dbg !3125
  %0 = load i32 (i8*)*, i32 (i8*)** %handler.addr, align 8, !dbg !3126
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3127
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 25, !dbg !3127
  store i32 (i8*)* %0, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !3128
  ret void, !dbg !3129
}

; Function Attrs: nounwind uwtable
define void @XML_SetExternalEntityRefHandler(%struct.XML_ParserStruct* %parser, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %handler) #0 !dbg !749 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3130, metadata !1076), !dbg !3131
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %handler, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, metadata !3132, metadata !1076), !dbg !3133
  %0 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !3134
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3135
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 26, !dbg !3135
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %0, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !3136
  ret void, !dbg !3137
}

; Function Attrs: nounwind uwtable
define void @XML_SetExternalEntityRefHandlerArg(%struct.XML_ParserStruct* %parser, i8* %arg) #0 !dbg !752 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3138, metadata !1076), !dbg !3139
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3140, metadata !1076), !dbg !3141
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3142
  %tobool = icmp ne i8* %0, null, !dbg !3142
  br i1 %tobool, label %if.then, label %if.else, !dbg !3144

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !3145
  %2 = bitcast i8* %1 to %struct.XML_ParserStruct*, !dbg !3146
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3147
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 27, !dbg !3147
  store %struct.XML_ParserStruct* %2, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !3148
  br label %if.end, !dbg !3147

if.else:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3149
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3150
  %m_externalEntityRefHandlerArg1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 27, !dbg !3150
  store %struct.XML_ParserStruct* %4, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg1, align 8, !dbg !3151
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3152
}

; Function Attrs: nounwind uwtable
define void @XML_SetSkippedEntityHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 !dbg !753 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3153, metadata !1076), !dbg !3154
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %handler.addr, metadata !3155, metadata !1076), !dbg !3156
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8, !dbg !3157
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3158
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 28, !dbg !3158
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !3159
  ret void, !dbg !3160
}

; Function Attrs: nounwind uwtable
define void @XML_SetUnknownEncodingHandler(%struct.XML_ParserStruct* %parser, i32 (i8*, i8*, %struct.XML_Encoding*)* %handler, i8* %data) #0 !dbg !756 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (i8*, i8*, %struct.XML_Encoding*)*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3161, metadata !1076), !dbg !3162
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %handler, i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, metadata !3163, metadata !1076), !dbg !3164
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3165, metadata !1076), !dbg !3166
  %0 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, align 8, !dbg !3167
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3168
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 29, !dbg !3168
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %0, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !3169
  %2 = load i8*, i8** %data.addr, align 8, !dbg !3170
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3171
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 42, !dbg !3171
  store i8* %2, i8** %m_unknownEncodingHandlerData, align 8, !dbg !3172
  ret void, !dbg !3173
}

; Function Attrs: nounwind uwtable
define void @XML_SetElementDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, %struct.XML_cp*)* %eldecl) #0 !dbg !759 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %eldecl.addr = alloca void (i8*, i8*, %struct.XML_cp*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3174, metadata !1076), !dbg !3175
  store void (i8*, i8*, %struct.XML_cp*)* %eldecl, void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, metadata !3176, metadata !1076), !dbg !3177
  %0 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, align 8, !dbg !3178
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3179
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 30, !dbg !3179
  store void (i8*, i8*, %struct.XML_cp*)* %0, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !3180
  ret void, !dbg !3181
}

; Function Attrs: nounwind uwtable
define void @XML_SetAttlistDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*, i32)* %attdecl) #0 !dbg !762 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %attdecl.addr = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3182, metadata !1076), !dbg !3183
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %attdecl, void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, metadata !3184, metadata !1076), !dbg !3185
  %0 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, align 8, !dbg !3186
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3187
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 31, !dbg !3187
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !3188
  ret void, !dbg !3189
}

; Function Attrs: nounwind uwtable
define void @XML_SetEntityDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %handler) #0 !dbg !765 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3190, metadata !1076), !dbg !3191
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, metadata !3192, metadata !1076), !dbg !3193
  %0 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, align 8, !dbg !3194
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3195
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 32, !dbg !3195
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !3196
  ret void, !dbg !3197
}

; Function Attrs: nounwind uwtable
define void @XML_SetXmlDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i32)* %handler) #0 !dbg !768 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3198, metadata !1076), !dbg !3199
  store void (i8*, i8*, i8*, i32)* %handler, void (i8*, i8*, i8*, i32)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %handler.addr, metadata !3200, metadata !1076), !dbg !3201
  %0 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %handler.addr, align 8, !dbg !3202
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3203
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 33, !dbg !3203
  store void (i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !3204
  ret void, !dbg !3205
}

; Function Attrs: nounwind uwtable
define i32 @XML_SetParamEntityParsing(%struct.XML_ParserStruct* %parser, i32 %peParsing) #0 !dbg !771 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %peParsing.addr = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3206, metadata !1076), !dbg !3207
  store i32 %peParsing, i32* %peParsing.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %peParsing.addr, metadata !3208, metadata !1076), !dbg !3209
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3210
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !3210
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3210
  %1 = load i32, i32* %parsing, align 8, !dbg !3210
  %cmp = icmp eq i32 %1, 1, !dbg !3212
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3213

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3214
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !3214
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !3214
  %3 = load i32, i32* %parsing2, align 8, !dbg !3214
  %cmp3 = icmp eq i32 %3, 3, !dbg !3216
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3217

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !3218
  br label %return, !dbg !3218

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %peParsing.addr, align 4, !dbg !3219
  %cmp4 = icmp eq i32 %4, 0, !dbg !3220
  %conv = zext i1 %cmp4 to i32, !dbg !3220
  store i32 %conv, i32* %retval, align 4, !dbg !3221
  br label %return, !dbg !3221

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !3222
  ret i32 %5, !dbg !3222
}

; Function Attrs: nounwind uwtable
define i32 @XML_SetHashSalt(%struct.XML_ParserStruct* %parser, i64 %hash_salt) #0 !dbg !774 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %hash_salt.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3223, metadata !1076), !dbg !3224
  store i64 %hash_salt, i64* %hash_salt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hash_salt.addr, metadata !3225, metadata !1076), !dbg !3226
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3227
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !3227
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3227
  %1 = load i32, i32* %parsing, align 8, !dbg !3227
  %cmp = icmp eq i32 %1, 1, !dbg !3229
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3230

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3231
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !3231
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !3231
  %3 = load i32, i32* %parsing2, align 8, !dbg !3231
  %cmp3 = icmp eq i32 %3, 3, !dbg !3233
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3234

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !3235
  br label %return, !dbg !3235

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i64, i64* %hash_salt.addr, align 8, !dbg !3236
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3237
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 86, !dbg !3237
  store i64 %4, i64* %m_hash_secret_salt, align 8, !dbg !3238
  store i32 1, i32* %retval, align 4, !dbg !3239
  br label %return, !dbg !3239

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !3240
  ret i32 %6, !dbg !3240
}

; Function Attrs: nounwind uwtable
define i32 @XML_Parse(%struct.XML_ParserStruct* %parser, i8* %s, i32 %len, i32 %isFinal) #0 !dbg !777 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %isFinal.addr = alloca i32, align 4
  %buff = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3241, metadata !1076), !dbg !3242
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3243, metadata !1076), !dbg !3244
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3245, metadata !1076), !dbg !3246
  store i32 %isFinal, i32* %isFinal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %isFinal.addr, metadata !3247, metadata !1076), !dbg !3248
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3249
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !3249
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3249
  %1 = load i32, i32* %parsing, align 8, !dbg !3249
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb1
    i32 0, label %sw.bb3
  ], !dbg !3250

sw.bb:                                            ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3251
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46, !dbg !3251
  store i32 33, i32* %m_errorCode, align 8, !dbg !3253
  store i32 0, i32* %retval, align 4, !dbg !3254
  br label %return, !dbg !3254

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3255
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46, !dbg !3255
  store i32 36, i32* %m_errorCode2, align 8, !dbg !3256
  store i32 0, i32* %retval, align 4, !dbg !3257
  br label %return, !dbg !3257

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3258
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 84, !dbg !3258
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !3258
  %cmp = icmp eq %struct.XML_ParserStruct* %5, null, !dbg !3260
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3261

land.lhs.true:                                    ; preds = %sw.bb3
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3262
  %call = call zeroext i8 @startParsing(%struct.XML_ParserStruct* %6), !dbg !3264
  %tobool = icmp ne i8 %call, 0, !dbg !3264
  br i1 %tobool, label %if.end, label %if.then, !dbg !3265

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3266
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 46, !dbg !3266
  store i32 1, i32* %m_errorCode4, align 8, !dbg !3268
  store i32 0, i32* %retval, align 4, !dbg !3269
  br label %return, !dbg !3269

if.end:                                           ; preds = %land.lhs.true, %sw.bb3
  br label %sw.default, !dbg !3270

sw.default:                                       ; preds = %entry, %if.end
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3272
  %m_parsingStatus5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 85, !dbg !3272
  %parsing6 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus5, i32 0, i32 0, !dbg !3272
  store i32 1, i32* %parsing6, align 8, !dbg !3273
  br label %sw.epilog, !dbg !3274

sw.epilog:                                        ; preds = %sw.default
  %9 = load i32, i32* %len.addr, align 4, !dbg !3275
  %cmp7 = icmp eq i32 %9, 0, !dbg !3277
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !3278

if.then8:                                         ; preds = %sw.epilog
  %10 = load i32, i32* %isFinal.addr, align 4, !dbg !3279
  %conv = trunc i32 %10 to i8, !dbg !3281
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3282
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85, !dbg !3282
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1, !dbg !3282
  store i8 %conv, i8* %finalBuffer, align 4, !dbg !3283
  %12 = load i32, i32* %isFinal.addr, align 4, !dbg !3284
  %tobool10 = icmp ne i32 %12, 0, !dbg !3284
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !3286

if.then11:                                        ; preds = %if.then8
  store i32 1, i32* %retval, align 4, !dbg !3287
  br label %return, !dbg !3287

if.end12:                                         ; preds = %if.then8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3288
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 4, !dbg !3288
  %14 = load i8*, i8** %m_bufferPtr, align 8, !dbg !3288
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3289
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 49, !dbg !3289
  store i8* %14, i8** %m_positionPtr, align 8, !dbg !3290
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3291
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 5, !dbg !3291
  %17 = load i8*, i8** %m_bufferEnd, align 8, !dbg !3291
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3292
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 8, !dbg !3292
  store i8* %17, i8** %m_parseEndPtr, align 8, !dbg !3293
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3294
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 45, !dbg !3294
  %20 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !3294
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3295
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3296
  %m_bufferPtr13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 4, !dbg !3296
  %23 = load i8*, i8** %m_bufferPtr13, align 8, !dbg !3296
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3297
  %m_parseEndPtr14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 8, !dbg !3297
  %25 = load i8*, i8** %m_parseEndPtr14, align 8, !dbg !3297
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3298
  %m_bufferPtr15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 4, !dbg !3298
  %call16 = call i32 %20(%struct.XML_ParserStruct* %21, i8* %23, i8* %25, i8** %m_bufferPtr15), !dbg !3294
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3299
  %m_errorCode17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 46, !dbg !3299
  store i32 %call16, i32* %m_errorCode17, align 8, !dbg !3300
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3301
  %m_errorCode18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 46, !dbg !3301
  %29 = load i32, i32* %m_errorCode18, align 8, !dbg !3301
  %cmp19 = icmp eq i32 %29, 0, !dbg !3303
  br i1 %cmp19, label %if.then21, label %if.end34, !dbg !3304

if.then21:                                        ; preds = %if.end12
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3305
  %m_parsingStatus22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 85, !dbg !3305
  %parsing23 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus22, i32 0, i32 0, !dbg !3305
  %31 = load i32, i32* %parsing23, align 8, !dbg !3305
  switch i32 %31, label %sw.default33 [
    i32 3, label %sw.bb24
    i32 0, label %sw.bb30
    i32 1, label %sw.bb30
  ], !dbg !3307

sw.bb24:                                          ; preds = %if.then21
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3308
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 34, !dbg !3308
  %33 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !3308
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %33, i32 0, i32 9, !dbg !3308
  %34 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !3308
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3308
  %m_encoding25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 34, !dbg !3308
  %36 = load %struct.encoding*, %struct.encoding** %m_encoding25, align 8, !dbg !3308
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3308
  %m_positionPtr26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 49, !dbg !3308
  %38 = load i8*, i8** %m_positionPtr26, align 8, !dbg !3308
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3308
  %m_bufferPtr27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 4, !dbg !3308
  %40 = load i8*, i8** %m_bufferPtr27, align 8, !dbg !3308
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3308
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 78, !dbg !3308
  call void %34(%struct.encoding* %36, i8* %38, i8* %40, %struct.position* %m_position), !dbg !3308
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3310
  %m_bufferPtr28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 4, !dbg !3310
  %43 = load i8*, i8** %m_bufferPtr28, align 8, !dbg !3310
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3311
  %m_positionPtr29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 49, !dbg !3311
  store i8* %43, i8** %m_positionPtr29, align 8, !dbg !3312
  store i32 2, i32* %retval, align 4, !dbg !3313
  br label %return, !dbg !3313

sw.bb30:                                          ; preds = %if.then21, %if.then21
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3314
  %m_parsingStatus31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 85, !dbg !3314
  %parsing32 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus31, i32 0, i32 0, !dbg !3314
  store i32 2, i32* %parsing32, align 8, !dbg !3315
  br label %sw.default33, !dbg !3314

sw.default33:                                     ; preds = %if.then21, %sw.bb30
  store i32 1, i32* %retval, align 4, !dbg !3316
  br label %return, !dbg !3316

if.end34:                                         ; preds = %if.end12
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3317
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 47, !dbg !3317
  %47 = load i8*, i8** %m_eventPtr, align 8, !dbg !3317
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3318
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 48, !dbg !3318
  store i8* %47, i8** %m_eventEndPtr, align 8, !dbg !3319
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3320
  %m_processor35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 45, !dbg !3320
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor35, align 8, !dbg !3321
  store i32 0, i32* %retval, align 4, !dbg !3322
  br label %return, !dbg !3322

if.else:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i8** %buff, metadata !3323, metadata !1076), !dbg !3325
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3326
  %51 = load i32, i32* %len.addr, align 4, !dbg !3327
  %call36 = call i8* @XML_GetBuffer(%struct.XML_ParserStruct* %50, i32 %51), !dbg !3328
  store i8* %call36, i8** %buff, align 8, !dbg !3325
  %52 = load i8*, i8** %buff, align 8, !dbg !3329
  %cmp37 = icmp eq i8* %52, null, !dbg !3331
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !3332

if.then39:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !3333
  br label %return, !dbg !3333

if.else40:                                        ; preds = %if.else
  %53 = load i8*, i8** %buff, align 8, !dbg !3334
  %54 = load i8*, i8** %s.addr, align 8, !dbg !3336
  %55 = load i32, i32* %len.addr, align 4, !dbg !3337
  %conv41 = sext i32 %55 to i64, !dbg !3337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 %conv41, i32 1, i1 false), !dbg !3338
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3339
  %57 = load i32, i32* %len.addr, align 4, !dbg !3340
  %58 = load i32, i32* %isFinal.addr, align 4, !dbg !3341
  %call42 = call i32 @XML_ParseBuffer(%struct.XML_ParserStruct* %56, i32 %57, i32 %58), !dbg !3342
  store i32 %call42, i32* %retval, align 4, !dbg !3343
  br label %return, !dbg !3343

return:                                           ; preds = %if.else40, %if.then39, %if.end34, %sw.default33, %sw.bb24, %if.then11, %if.then, %sw.bb1, %sw.bb
  %59 = load i32, i32* %retval, align 4, !dbg !3344
  ret i32 %59, !dbg !3344
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @startParsing(%struct.XML_ParserStruct* %parser) #0 !dbg !980 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3345, metadata !1076), !dbg !3346
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3347
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 86, !dbg !3347
  %1 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !3347
  %cmp = icmp eq i64 %1, 0, !dbg !3349
  br i1 %cmp, label %if.then, label %if.end, !dbg !3350

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3351
  %call = call i64 @generate_hash_secret_salt(%struct.XML_ParserStruct* %2), !dbg !3352
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3353
  %m_hash_secret_salt1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 86, !dbg !3353
  store i64 %call, i64* %m_hash_secret_salt1, align 8, !dbg !3354
  br label %if.end, !dbg !3353

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3355
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 38, !dbg !3355
  %5 = load i8, i8* %m_ns, align 8, !dbg !3355
  %tobool = icmp ne i8 %5, 0, !dbg !3355
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !3357

if.then2:                                         ; preds = %if.end
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3358
  %call3 = call zeroext i8 @setContext(%struct.XML_ParserStruct* %6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @implicitContext, i32 0, i32 0)), !dbg !3360
  store i8 %call3, i8* %retval, align 1, !dbg !3361
  br label %return, !dbg !3361

if.end4:                                          ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !3362
  br label %return, !dbg !3362

return:                                           ; preds = %if.end4, %if.then2
  %7 = load i8, i8* %retval, align 1, !dbg !3363
  ret i8 %7, !dbg !3363
}

; Function Attrs: nounwind uwtable
define internal i32 @errorProcessor(%struct.XML_ParserStruct* %parser, i8* %UNUSED_s, i8* %UNUSED_end, i8** %UNUSED_nextPtr) #0 !dbg !990 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %UNUSED_s.addr = alloca i8*, align 8
  %UNUSED_end.addr = alloca i8*, align 8
  %UNUSED_nextPtr.addr = alloca i8**, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3364, metadata !1076), !dbg !3365
  store i8* %UNUSED_s, i8** %UNUSED_s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_s.addr, metadata !3366, metadata !1076), !dbg !3367
  store i8* %UNUSED_end, i8** %UNUSED_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_end.addr, metadata !3368, metadata !1076), !dbg !3369
  store i8** %UNUSED_nextPtr, i8*** %UNUSED_nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %UNUSED_nextPtr.addr, metadata !3370, metadata !1076), !dbg !3371
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3372
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 46, !dbg !3372
  %1 = load i32, i32* %m_errorCode, align 8, !dbg !3372
  ret i32 %1, !dbg !3373
}

; Function Attrs: nounwind uwtable
define i8* @XML_GetBuffer(%struct.XML_ParserStruct* %parser, i32 %len) #0 !dbg !783 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %len.addr = alloca i32, align 4
  %keep = alloca i32, align 4
  %neededSize = alloca i32, align 4
  %offset = alloca i32, align 4
  %newBuf = alloca i8*, align 8
  %bufferSize = alloca i32, align 4
  %keep96 = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3374, metadata !1076), !dbg !3375
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3376, metadata !1076), !dbg !3377
  %0 = load i32, i32* %len.addr, align 4, !dbg !3378
  %cmp = icmp slt i32 %0, 0, !dbg !3380
  br i1 %cmp, label %if.then, label %if.end, !dbg !3381

if.then:                                          ; preds = %entry
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3382
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 46, !dbg !3382
  store i32 1, i32* %m_errorCode, align 8, !dbg !3384
  store i8* null, i8** %retval, align 8, !dbg !3385
  br label %return, !dbg !3385

if.end:                                           ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3386
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85, !dbg !3386
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3386
  %3 = load i32, i32* %parsing, align 8, !dbg !3386
  switch i32 %3, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb2
  ], !dbg !3387

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3388
  %m_errorCode1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 46, !dbg !3388
  store i32 33, i32* %m_errorCode1, align 8, !dbg !3390
  store i8* null, i8** %retval, align 8, !dbg !3391
  br label %return, !dbg !3391

sw.bb2:                                           ; preds = %if.end
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3392
  %m_errorCode3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 46, !dbg !3392
  store i32 36, i32* %m_errorCode3, align 8, !dbg !3393
  store i8* null, i8** %retval, align 8, !dbg !3394
  br label %return, !dbg !3394

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !3395

sw.epilog:                                        ; preds = %sw.default
  %6 = load i32, i32* %len.addr, align 4, !dbg !3396
  %conv = sext i32 %6 to i64, !dbg !3396
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3398
  %m_bufferLim = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 6, !dbg !3398
  %8 = load i8*, i8** %m_bufferLim, align 8, !dbg !3398
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3399
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 5, !dbg !3399
  %10 = load i8*, i8** %m_bufferEnd, align 8, !dbg !3399
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !3400
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !3400
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3400
  %cmp4 = icmp sgt i64 %conv, %sub.ptr.sub, !dbg !3401
  br i1 %cmp4, label %if.then6, label %if.end147, !dbg !3402

if.then6:                                         ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i32* %keep, metadata !3403, metadata !1076), !dbg !3405
  call void @llvm.dbg.declare(metadata i32* %neededSize, metadata !3406, metadata !1076), !dbg !3407
  %11 = load i32, i32* %len.addr, align 4, !dbg !3408
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3409
  %m_bufferEnd7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 5, !dbg !3409
  %13 = load i8*, i8** %m_bufferEnd7, align 8, !dbg !3409
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3410
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 4, !dbg !3410
  %15 = load i8*, i8** %m_bufferPtr, align 8, !dbg !3410
  %sub.ptr.lhs.cast8 = ptrtoint i8* %13 to i64, !dbg !3411
  %sub.ptr.rhs.cast9 = ptrtoint i8* %15 to i64, !dbg !3411
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9, !dbg !3411
  %conv11 = trunc i64 %sub.ptr.sub10 to i32, !dbg !3412
  %add = add i32 %11, %conv11, !dbg !3413
  store i32 %add, i32* %neededSize, align 4, !dbg !3407
  %16 = load i32, i32* %neededSize, align 4, !dbg !3414
  %cmp12 = icmp slt i32 %16, 0, !dbg !3416
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !3417

if.then14:                                        ; preds = %if.then6
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3418
  %m_errorCode15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 46, !dbg !3418
  store i32 1, i32* %m_errorCode15, align 8, !dbg !3420
  store i8* null, i8** %retval, align 8, !dbg !3421
  br label %return, !dbg !3421

if.end16:                                         ; preds = %if.then6
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3422
  %m_bufferPtr17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 4, !dbg !3422
  %19 = load i8*, i8** %m_bufferPtr17, align 8, !dbg !3422
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3423
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 2, !dbg !3423
  %21 = load i8*, i8** %m_buffer, align 8, !dbg !3423
  %sub.ptr.lhs.cast18 = ptrtoint i8* %19 to i64, !dbg !3424
  %sub.ptr.rhs.cast19 = ptrtoint i8* %21 to i64, !dbg !3424
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !3424
  %conv21 = trunc i64 %sub.ptr.sub20 to i32, !dbg !3425
  store i32 %conv21, i32* %keep, align 4, !dbg !3426
  %22 = load i32, i32* %keep, align 4, !dbg !3427
  %cmp22 = icmp sgt i32 %22, 1024, !dbg !3429
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !3430

if.then24:                                        ; preds = %if.end16
  store i32 1024, i32* %keep, align 4, !dbg !3431
  br label %if.end25, !dbg !3432

if.end25:                                         ; preds = %if.then24, %if.end16
  %23 = load i32, i32* %keep, align 4, !dbg !3433
  %24 = load i32, i32* %neededSize, align 4, !dbg !3434
  %add26 = add nsw i32 %24, %23, !dbg !3434
  store i32 %add26, i32* %neededSize, align 4, !dbg !3434
  %25 = load i32, i32* %neededSize, align 4, !dbg !3435
  %conv27 = sext i32 %25 to i64, !dbg !3435
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3437
  %m_bufferLim28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 6, !dbg !3437
  %27 = load i8*, i8** %m_bufferLim28, align 8, !dbg !3437
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3438
  %m_buffer29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 2, !dbg !3438
  %29 = load i8*, i8** %m_buffer29, align 8, !dbg !3438
  %sub.ptr.lhs.cast30 = ptrtoint i8* %27 to i64, !dbg !3439
  %sub.ptr.rhs.cast31 = ptrtoint i8* %29 to i64, !dbg !3439
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !3439
  %cmp33 = icmp sle i64 %conv27, %sub.ptr.sub32, !dbg !3440
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !3441

if.then35:                                        ; preds = %if.end25
  %30 = load i32, i32* %keep, align 4, !dbg !3442
  %conv36 = sext i32 %30 to i64, !dbg !3442
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3445
  %m_bufferPtr37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 4, !dbg !3445
  %32 = load i8*, i8** %m_bufferPtr37, align 8, !dbg !3445
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3446
  %m_buffer38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 2, !dbg !3446
  %34 = load i8*, i8** %m_buffer38, align 8, !dbg !3446
  %sub.ptr.lhs.cast39 = ptrtoint i8* %32 to i64, !dbg !3447
  %sub.ptr.rhs.cast40 = ptrtoint i8* %34 to i64, !dbg !3447
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40, !dbg !3447
  %cmp42 = icmp slt i64 %conv36, %sub.ptr.sub41, !dbg !3448
  br i1 %cmp42, label %if.then44, label %if.end65, !dbg !3449

if.then44:                                        ; preds = %if.then35
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3450, metadata !1076), !dbg !3452
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3453
  %m_bufferPtr45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 4, !dbg !3453
  %36 = load i8*, i8** %m_bufferPtr45, align 8, !dbg !3453
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3454
  %m_buffer46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 2, !dbg !3454
  %38 = load i8*, i8** %m_buffer46, align 8, !dbg !3454
  %sub.ptr.lhs.cast47 = ptrtoint i8* %36 to i64, !dbg !3455
  %sub.ptr.rhs.cast48 = ptrtoint i8* %38 to i64, !dbg !3455
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !3455
  %conv50 = trunc i64 %sub.ptr.sub49 to i32, !dbg !3456
  %39 = load i32, i32* %keep, align 4, !dbg !3457
  %sub = sub nsw i32 %conv50, %39, !dbg !3458
  store i32 %sub, i32* %offset, align 4, !dbg !3452
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3459
  %m_buffer51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 2, !dbg !3459
  %41 = load i8*, i8** %m_buffer51, align 8, !dbg !3459
  %42 = load i32, i32* %offset, align 4, !dbg !3460
  %idxprom = sext i32 %42 to i64, !dbg !3461
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3461
  %m_buffer52 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 2, !dbg !3461
  %44 = load i8*, i8** %m_buffer52, align 8, !dbg !3461
  %arrayidx = getelementptr inbounds i8, i8* %44, i64 %idxprom, !dbg !3461
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3462
  %m_bufferEnd53 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 5, !dbg !3462
  %46 = load i8*, i8** %m_bufferEnd53, align 8, !dbg !3462
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3463
  %m_bufferPtr54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 4, !dbg !3463
  %48 = load i8*, i8** %m_bufferPtr54, align 8, !dbg !3463
  %sub.ptr.lhs.cast55 = ptrtoint i8* %46 to i64, !dbg !3464
  %sub.ptr.rhs.cast56 = ptrtoint i8* %48 to i64, !dbg !3464
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !3464
  %49 = load i32, i32* %keep, align 4, !dbg !3465
  %conv58 = sext i32 %49 to i64, !dbg !3465
  %add59 = add nsw i64 %sub.ptr.sub57, %conv58, !dbg !3466
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %41, i8* %arrayidx, i64 %add59, i32 1, i1 false), !dbg !3467
  %50 = load i32, i32* %offset, align 4, !dbg !3468
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3469
  %m_bufferEnd60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 5, !dbg !3469
  %52 = load i8*, i8** %m_bufferEnd60, align 8, !dbg !3470
  %idx.ext = sext i32 %50 to i64, !dbg !3470
  %idx.neg = sub i64 0, %idx.ext, !dbg !3470
  %add.ptr = getelementptr inbounds i8, i8* %52, i64 %idx.neg, !dbg !3470
  store i8* %add.ptr, i8** %m_bufferEnd60, align 8, !dbg !3470
  %53 = load i32, i32* %offset, align 4, !dbg !3471
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3472
  %m_bufferPtr61 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 4, !dbg !3472
  %55 = load i8*, i8** %m_bufferPtr61, align 8, !dbg !3473
  %idx.ext62 = sext i32 %53 to i64, !dbg !3473
  %idx.neg63 = sub i64 0, %idx.ext62, !dbg !3473
  %add.ptr64 = getelementptr inbounds i8, i8* %55, i64 %idx.neg63, !dbg !3473
  store i8* %add.ptr64, i8** %m_bufferPtr61, align 8, !dbg !3473
  br label %if.end65, !dbg !3474

if.end65:                                         ; preds = %if.then44, %if.then35
  br label %if.end146, !dbg !3475

if.else:                                          ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i8** %newBuf, metadata !3476, metadata !1076), !dbg !3478
  call void @llvm.dbg.declare(metadata i32* %bufferSize, metadata !3479, metadata !1076), !dbg !3480
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3481
  %m_bufferLim66 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 6, !dbg !3481
  %57 = load i8*, i8** %m_bufferLim66, align 8, !dbg !3481
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3482
  %m_bufferPtr67 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 4, !dbg !3482
  %59 = load i8*, i8** %m_bufferPtr67, align 8, !dbg !3482
  %sub.ptr.lhs.cast68 = ptrtoint i8* %57 to i64, !dbg !3483
  %sub.ptr.rhs.cast69 = ptrtoint i8* %59 to i64, !dbg !3483
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69, !dbg !3483
  %conv71 = trunc i64 %sub.ptr.sub70 to i32, !dbg !3484
  store i32 %conv71, i32* %bufferSize, align 4, !dbg !3480
  %60 = load i32, i32* %bufferSize, align 4, !dbg !3485
  %cmp72 = icmp eq i32 %60, 0, !dbg !3487
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !3488

if.then74:                                        ; preds = %if.else
  store i32 1024, i32* %bufferSize, align 4, !dbg !3489
  br label %if.end75, !dbg !3490

if.end75:                                         ; preds = %if.then74, %if.else
  br label %do.body, !dbg !3491

do.body:                                          ; preds = %land.end, %if.end75
  %61 = load i32, i32* %bufferSize, align 4, !dbg !3492
  %mul = mul i32 2, %61, !dbg !3494
  store i32 %mul, i32* %bufferSize, align 4, !dbg !3495
  br label %do.cond, !dbg !3496

do.cond:                                          ; preds = %do.body
  %62 = load i32, i32* %bufferSize, align 4, !dbg !3497
  %63 = load i32, i32* %neededSize, align 4, !dbg !3499
  %cmp76 = icmp slt i32 %62, %63, !dbg !3500
  br i1 %cmp76, label %land.rhs, label %land.end, !dbg !3501

land.rhs:                                         ; preds = %do.cond
  %64 = load i32, i32* %bufferSize, align 4, !dbg !3502
  %cmp78 = icmp sgt i32 %64, 0, !dbg !3504
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %65 = phi i1 [ false, %do.cond ], [ %cmp78, %land.rhs ]
  br i1 %65, label %do.body, label %do.end, !dbg !3505

do.end:                                           ; preds = %land.end
  %66 = load i32, i32* %bufferSize, align 4, !dbg !3507
  %cmp80 = icmp sle i32 %66, 0, !dbg !3509
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !3510

if.then82:                                        ; preds = %do.end
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3511
  %m_errorCode83 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 46, !dbg !3511
  store i32 1, i32* %m_errorCode83, align 8, !dbg !3513
  store i8* null, i8** %retval, align 8, !dbg !3514
  br label %return, !dbg !3514

if.end84:                                         ; preds = %do.end
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3515
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 3, !dbg !3515
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !3515
  %69 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !3515
  %70 = load i32, i32* %bufferSize, align 4, !dbg !3515
  %conv85 = sext i32 %70 to i64, !dbg !3515
  %call = call i8* %69(i64 %conv85), !dbg !3515
  store i8* %call, i8** %newBuf, align 8, !dbg !3516
  %71 = load i8*, i8** %newBuf, align 8, !dbg !3517
  %cmp86 = icmp eq i8* %71, null, !dbg !3519
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !3520

if.then88:                                        ; preds = %if.end84
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3521
  %m_errorCode89 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 46, !dbg !3521
  store i32 1, i32* %m_errorCode89, align 8, !dbg !3523
  store i8* null, i8** %retval, align 8, !dbg !3524
  br label %return, !dbg !3524

if.end90:                                         ; preds = %if.end84
  %73 = load i8*, i8** %newBuf, align 8, !dbg !3525
  %74 = load i32, i32* %bufferSize, align 4, !dbg !3526
  %idx.ext91 = sext i32 %74 to i64, !dbg !3527
  %add.ptr92 = getelementptr inbounds i8, i8* %73, i64 %idx.ext91, !dbg !3527
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3528
  %m_bufferLim93 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 6, !dbg !3528
  store i8* %add.ptr92, i8** %m_bufferLim93, align 8, !dbg !3529
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3530
  %m_bufferPtr94 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 4, !dbg !3530
  %77 = load i8*, i8** %m_bufferPtr94, align 8, !dbg !3530
  %tobool = icmp ne i8* %77, null, !dbg !3530
  br i1 %tobool, label %if.then95, label %if.else135, !dbg !3532

if.then95:                                        ; preds = %if.end90
  call void @llvm.dbg.declare(metadata i32* %keep96, metadata !3533, metadata !1076), !dbg !3535
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3536
  %m_bufferPtr97 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 4, !dbg !3536
  %79 = load i8*, i8** %m_bufferPtr97, align 8, !dbg !3536
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3537
  %m_buffer98 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 2, !dbg !3537
  %81 = load i8*, i8** %m_buffer98, align 8, !dbg !3537
  %sub.ptr.lhs.cast99 = ptrtoint i8* %79 to i64, !dbg !3538
  %sub.ptr.rhs.cast100 = ptrtoint i8* %81 to i64, !dbg !3538
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast100, !dbg !3538
  %conv102 = trunc i64 %sub.ptr.sub101 to i32, !dbg !3539
  store i32 %conv102, i32* %keep96, align 4, !dbg !3535
  %82 = load i32, i32* %keep96, align 4, !dbg !3540
  %cmp103 = icmp sgt i32 %82, 1024, !dbg !3542
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !3543

if.then105:                                       ; preds = %if.then95
  store i32 1024, i32* %keep96, align 4, !dbg !3544
  br label %if.end106, !dbg !3545

if.end106:                                        ; preds = %if.then105, %if.then95
  %83 = load i8*, i8** %newBuf, align 8, !dbg !3546
  %84 = load i32, i32* %keep96, align 4, !dbg !3547
  %sub107 = sub nsw i32 0, %84, !dbg !3548
  %idxprom108 = sext i32 %sub107 to i64, !dbg !3549
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3549
  %m_bufferPtr109 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 4, !dbg !3549
  %86 = load i8*, i8** %m_bufferPtr109, align 8, !dbg !3549
  %arrayidx110 = getelementptr inbounds i8, i8* %86, i64 %idxprom108, !dbg !3549
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3550
  %m_bufferEnd111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 5, !dbg !3550
  %88 = load i8*, i8** %m_bufferEnd111, align 8, !dbg !3550
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3551
  %m_bufferPtr112 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 4, !dbg !3551
  %90 = load i8*, i8** %m_bufferPtr112, align 8, !dbg !3551
  %sub.ptr.lhs.cast113 = ptrtoint i8* %88 to i64, !dbg !3552
  %sub.ptr.rhs.cast114 = ptrtoint i8* %90 to i64, !dbg !3552
  %sub.ptr.sub115 = sub i64 %sub.ptr.lhs.cast113, %sub.ptr.rhs.cast114, !dbg !3552
  %91 = load i32, i32* %keep96, align 4, !dbg !3553
  %conv116 = sext i32 %91 to i64, !dbg !3553
  %add117 = add nsw i64 %sub.ptr.sub115, %conv116, !dbg !3554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %arrayidx110, i64 %add117, i32 1, i1 false), !dbg !3555
  %92 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3556
  %m_mem118 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %92, i32 0, i32 3, !dbg !3556
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem118, i32 0, i32 2, !dbg !3556
  %93 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !3556
  %94 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3556
  %m_buffer119 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %94, i32 0, i32 2, !dbg !3556
  %95 = load i8*, i8** %m_buffer119, align 8, !dbg !3556
  call void %93(i8* %95), !dbg !3556
  %96 = load i8*, i8** %newBuf, align 8, !dbg !3557
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3558
  %m_buffer120 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 2, !dbg !3558
  store i8* %96, i8** %m_buffer120, align 8, !dbg !3559
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3560
  %m_buffer121 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 2, !dbg !3560
  %99 = load i8*, i8** %m_buffer121, align 8, !dbg !3560
  %100 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3561
  %m_bufferEnd122 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %100, i32 0, i32 5, !dbg !3561
  %101 = load i8*, i8** %m_bufferEnd122, align 8, !dbg !3561
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3562
  %m_bufferPtr123 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %102, i32 0, i32 4, !dbg !3562
  %103 = load i8*, i8** %m_bufferPtr123, align 8, !dbg !3562
  %sub.ptr.lhs.cast124 = ptrtoint i8* %101 to i64, !dbg !3563
  %sub.ptr.rhs.cast125 = ptrtoint i8* %103 to i64, !dbg !3563
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !3563
  %add.ptr127 = getelementptr inbounds i8, i8* %99, i64 %sub.ptr.sub126, !dbg !3564
  %104 = load i32, i32* %keep96, align 4, !dbg !3565
  %idx.ext128 = sext i32 %104 to i64, !dbg !3566
  %add.ptr129 = getelementptr inbounds i8, i8* %add.ptr127, i64 %idx.ext128, !dbg !3566
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3567
  %m_bufferEnd130 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 5, !dbg !3567
  store i8* %add.ptr129, i8** %m_bufferEnd130, align 8, !dbg !3568
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3569
  %m_buffer131 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %106, i32 0, i32 2, !dbg !3569
  %107 = load i8*, i8** %m_buffer131, align 8, !dbg !3569
  %108 = load i32, i32* %keep96, align 4, !dbg !3570
  %idx.ext132 = sext i32 %108 to i64, !dbg !3571
  %add.ptr133 = getelementptr inbounds i8, i8* %107, i64 %idx.ext132, !dbg !3571
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3572
  %m_bufferPtr134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 4, !dbg !3572
  store i8* %add.ptr133, i8** %m_bufferPtr134, align 8, !dbg !3573
  br label %if.end145, !dbg !3574

if.else135:                                       ; preds = %if.end90
  %110 = load i8*, i8** %newBuf, align 8, !dbg !3575
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3577
  %m_bufferEnd136 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 5, !dbg !3577
  %112 = load i8*, i8** %m_bufferEnd136, align 8, !dbg !3577
  %113 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3578
  %m_bufferPtr137 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %113, i32 0, i32 4, !dbg !3578
  %114 = load i8*, i8** %m_bufferPtr137, align 8, !dbg !3578
  %sub.ptr.lhs.cast138 = ptrtoint i8* %112 to i64, !dbg !3579
  %sub.ptr.rhs.cast139 = ptrtoint i8* %114 to i64, !dbg !3579
  %sub.ptr.sub140 = sub i64 %sub.ptr.lhs.cast138, %sub.ptr.rhs.cast139, !dbg !3579
  %add.ptr141 = getelementptr inbounds i8, i8* %110, i64 %sub.ptr.sub140, !dbg !3580
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3581
  %m_bufferEnd142 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %115, i32 0, i32 5, !dbg !3581
  store i8* %add.ptr141, i8** %m_bufferEnd142, align 8, !dbg !3582
  %116 = load i8*, i8** %newBuf, align 8, !dbg !3583
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3584
  %m_buffer143 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %117, i32 0, i32 2, !dbg !3584
  store i8* %116, i8** %m_buffer143, align 8, !dbg !3585
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3586
  %m_bufferPtr144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 4, !dbg !3586
  store i8* %116, i8** %m_bufferPtr144, align 8, !dbg !3587
  br label %if.end145

if.end145:                                        ; preds = %if.else135, %if.end106
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end65
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3588
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 48, !dbg !3588
  store i8* null, i8** %m_eventEndPtr, align 8, !dbg !3589
  %120 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3590
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %120, i32 0, i32 47, !dbg !3590
  store i8* null, i8** %m_eventPtr, align 8, !dbg !3591
  %121 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3592
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %121, i32 0, i32 49, !dbg !3592
  store i8* null, i8** %m_positionPtr, align 8, !dbg !3593
  br label %if.end147, !dbg !3594

if.end147:                                        ; preds = %if.end146, %sw.epilog
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3595
  %m_bufferEnd148 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %122, i32 0, i32 5, !dbg !3595
  %123 = load i8*, i8** %m_bufferEnd148, align 8, !dbg !3595
  store i8* %123, i8** %retval, align 8, !dbg !3596
  br label %return, !dbg !3596

return:                                           ; preds = %if.end147, %if.then88, %if.then82, %if.then14, %sw.bb2, %sw.bb, %if.then
  %124 = load i8*, i8** %retval, align 8, !dbg !3597
  ret i8* %124, !dbg !3597
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @XML_ParseBuffer(%struct.XML_ParserStruct* %parser, i32 %len, i32 %isFinal) #0 !dbg !780 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %len.addr = alloca i32, align 4
  %isFinal.addr = alloca i32, align 4
  %start = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3598, metadata !1076), !dbg !3599
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3600, metadata !1076), !dbg !3601
  store i32 %isFinal, i32* %isFinal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %isFinal.addr, metadata !3602, metadata !1076), !dbg !3603
  call void @llvm.dbg.declare(metadata i8** %start, metadata !3604, metadata !1076), !dbg !3605
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3606, metadata !1076), !dbg !3607
  store i32 1, i32* %result, align 4, !dbg !3607
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3608
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !3608
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3608
  %1 = load i32, i32* %parsing, align 8, !dbg !3608
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb1
    i32 0, label %sw.bb3
  ], !dbg !3609

sw.bb:                                            ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3610
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46, !dbg !3610
  store i32 33, i32* %m_errorCode, align 8, !dbg !3612
  store i32 0, i32* %retval, align 4, !dbg !3613
  br label %return, !dbg !3613

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3614
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46, !dbg !3614
  store i32 36, i32* %m_errorCode2, align 8, !dbg !3615
  store i32 0, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3617
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 84, !dbg !3617
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !3617
  %cmp = icmp eq %struct.XML_ParserStruct* %5, null, !dbg !3619
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3620

land.lhs.true:                                    ; preds = %sw.bb3
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3621
  %call = call zeroext i8 @startParsing(%struct.XML_ParserStruct* %6), !dbg !3623
  %tobool = icmp ne i8 %call, 0, !dbg !3623
  br i1 %tobool, label %if.end, label %if.then, !dbg !3624

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3625
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 46, !dbg !3625
  store i32 1, i32* %m_errorCode4, align 8, !dbg !3627
  store i32 0, i32* %retval, align 4, !dbg !3628
  br label %return, !dbg !3628

if.end:                                           ; preds = %land.lhs.true, %sw.bb3
  br label %sw.default, !dbg !3629

sw.default:                                       ; preds = %entry, %if.end
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3631
  %m_parsingStatus5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 85, !dbg !3631
  %parsing6 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus5, i32 0, i32 0, !dbg !3631
  store i32 1, i32* %parsing6, align 8, !dbg !3632
  br label %sw.epilog, !dbg !3633

sw.epilog:                                        ; preds = %sw.default
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3634
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 4, !dbg !3634
  %10 = load i8*, i8** %m_bufferPtr, align 8, !dbg !3634
  store i8* %10, i8** %start, align 8, !dbg !3635
  %11 = load i8*, i8** %start, align 8, !dbg !3636
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3637
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 49, !dbg !3637
  store i8* %11, i8** %m_positionPtr, align 8, !dbg !3638
  %13 = load i32, i32* %len.addr, align 4, !dbg !3639
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3640
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 5, !dbg !3640
  %15 = load i8*, i8** %m_bufferEnd, align 8, !dbg !3641
  %idx.ext = sext i32 %13 to i64, !dbg !3641
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !3641
  store i8* %add.ptr, i8** %m_bufferEnd, align 8, !dbg !3641
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3642
  %m_bufferEnd7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 5, !dbg !3642
  %17 = load i8*, i8** %m_bufferEnd7, align 8, !dbg !3642
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3643
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 8, !dbg !3643
  store i8* %17, i8** %m_parseEndPtr, align 8, !dbg !3644
  %19 = load i32, i32* %len.addr, align 4, !dbg !3645
  %conv = sext i32 %19 to i64, !dbg !3645
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3646
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 7, !dbg !3646
  %21 = load i64, i64* %m_parseEndByteIndex, align 8, !dbg !3647
  %add = add nsw i64 %21, %conv, !dbg !3647
  store i64 %add, i64* %m_parseEndByteIndex, align 8, !dbg !3647
  %22 = load i32, i32* %isFinal.addr, align 4, !dbg !3648
  %conv8 = trunc i32 %22 to i8, !dbg !3649
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3650
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 85, !dbg !3650
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1, !dbg !3650
  store i8 %conv8, i8* %finalBuffer, align 4, !dbg !3651
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3652
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 45, !dbg !3652
  %25 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !3652
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3653
  %27 = load i8*, i8** %start, align 8, !dbg !3654
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3655
  %m_parseEndPtr10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 8, !dbg !3655
  %29 = load i8*, i8** %m_parseEndPtr10, align 8, !dbg !3655
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3656
  %m_bufferPtr11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 4, !dbg !3656
  %call12 = call i32 %25(%struct.XML_ParserStruct* %26, i8* %27, i8* %29, i8** %m_bufferPtr11), !dbg !3652
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3657
  %m_errorCode13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 46, !dbg !3657
  store i32 %call12, i32* %m_errorCode13, align 8, !dbg !3658
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3659
  %m_errorCode14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 46, !dbg !3659
  %33 = load i32, i32* %m_errorCode14, align 8, !dbg !3659
  %cmp15 = icmp ne i32 %33, 0, !dbg !3661
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !3662

if.then17:                                        ; preds = %sw.epilog
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3663
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 47, !dbg !3663
  %35 = load i8*, i8** %m_eventPtr, align 8, !dbg !3663
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3665
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 48, !dbg !3665
  store i8* %35, i8** %m_eventEndPtr, align 8, !dbg !3666
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3667
  %m_processor18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 45, !dbg !3667
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor18, align 8, !dbg !3668
  store i32 0, i32* %retval, align 4, !dbg !3669
  br label %return, !dbg !3669

if.else:                                          ; preds = %sw.epilog
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3670
  %m_parsingStatus19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 85, !dbg !3670
  %parsing20 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus19, i32 0, i32 0, !dbg !3670
  %39 = load i32, i32* %parsing20, align 8, !dbg !3670
  switch i32 %39, label %sw.default28 [
    i32 3, label %sw.bb21
    i32 0, label %sw.bb22
    i32 1, label %sw.bb22
  ], !dbg !3672

sw.bb21:                                          ; preds = %if.else
  store i32 2, i32* %result, align 4, !dbg !3673
  br label %sw.epilog29, !dbg !3675

sw.bb22:                                          ; preds = %if.else, %if.else
  %40 = load i32, i32* %isFinal.addr, align 4, !dbg !3676
  %tobool23 = icmp ne i32 %40, 0, !dbg !3676
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !3678

if.then24:                                        ; preds = %sw.bb22
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3679
  %m_parsingStatus25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 85, !dbg !3679
  %parsing26 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus25, i32 0, i32 0, !dbg !3679
  store i32 2, i32* %parsing26, align 8, !dbg !3681
  %42 = load i32, i32* %result, align 4, !dbg !3682
  store i32 %42, i32* %retval, align 4, !dbg !3683
  br label %return, !dbg !3683

if.end27:                                         ; preds = %sw.bb22
  br label %sw.default28, !dbg !3684

sw.default28:                                     ; preds = %if.else, %if.end27
  br label %sw.epilog29, !dbg !3686

sw.epilog29:                                      ; preds = %sw.default28, %sw.bb21
  br label %if.end30

if.end30:                                         ; preds = %sw.epilog29
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3687
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 34, !dbg !3687
  %44 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !3687
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %44, i32 0, i32 9, !dbg !3687
  %45 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !3687
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3687
  %m_encoding31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 34, !dbg !3687
  %47 = load %struct.encoding*, %struct.encoding** %m_encoding31, align 8, !dbg !3687
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3687
  %m_positionPtr32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 49, !dbg !3687
  %49 = load i8*, i8** %m_positionPtr32, align 8, !dbg !3687
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3687
  %m_bufferPtr33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 4, !dbg !3687
  %51 = load i8*, i8** %m_bufferPtr33, align 8, !dbg !3687
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3687
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 78, !dbg !3687
  call void %45(%struct.encoding* %47, i8* %49, i8* %51, %struct.position* %m_position), !dbg !3687
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3688
  %m_bufferPtr34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 4, !dbg !3688
  %54 = load i8*, i8** %m_bufferPtr34, align 8, !dbg !3688
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3689
  %m_positionPtr35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 49, !dbg !3689
  store i8* %54, i8** %m_positionPtr35, align 8, !dbg !3690
  %56 = load i32, i32* %result, align 4, !dbg !3691
  store i32 %56, i32* %retval, align 4, !dbg !3692
  br label %return, !dbg !3692

return:                                           ; preds = %if.end30, %if.then24, %if.then17, %if.then, %sw.bb1, %sw.bb
  %57 = load i32, i32* %retval, align 4, !dbg !3693
  ret i32 %57, !dbg !3693
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @XML_StopParser(%struct.XML_ParserStruct* %parser, i8 zeroext %resumable) #0 !dbg !786 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %resumable.addr = alloca i8, align 1
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3694, metadata !1076), !dbg !3695
  store i8 %resumable, i8* %resumable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resumable.addr, metadata !3696, metadata !1076), !dbg !3697
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3698
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !3698
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3698
  %1 = load i32, i32* %parsing, align 8, !dbg !3698
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb3
  ], !dbg !3699

sw.bb:                                            ; preds = %entry
  %2 = load i8, i8* %resumable.addr, align 1, !dbg !3700
  %tobool = icmp ne i8 %2, 0, !dbg !3700
  br i1 %tobool, label %if.then, label %if.end, !dbg !3703

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3704
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46, !dbg !3704
  store i32 33, i32* %m_errorCode, align 8, !dbg !3706
  store i32 0, i32* %retval, align 4, !dbg !3707
  br label %return, !dbg !3707

if.end:                                           ; preds = %sw.bb
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3708
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 85, !dbg !3708
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !3708
  store i32 2, i32* %parsing2, align 8, !dbg !3709
  br label %sw.epilog, !dbg !3710

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3711
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 46, !dbg !3711
  store i32 36, i32* %m_errorCode4, align 8, !dbg !3712
  store i32 0, i32* %retval, align 4, !dbg !3713
  br label %return, !dbg !3713

sw.default:                                       ; preds = %entry
  %6 = load i8, i8* %resumable.addr, align 1, !dbg !3714
  %tobool5 = icmp ne i8 %6, 0, !dbg !3714
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !3716

if.then6:                                         ; preds = %sw.default
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3717
  %m_parsingStatus7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 85, !dbg !3717
  %parsing8 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus7, i32 0, i32 0, !dbg !3717
  store i32 3, i32* %parsing8, align 8, !dbg !3719
  br label %if.end11, !dbg !3720

if.else:                                          ; preds = %sw.default
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3721
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 85, !dbg !3721
  %parsing10 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 0, !dbg !3721
  store i32 2, i32* %parsing10, align 8, !dbg !3722
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then6
  br label %sw.epilog, !dbg !3723

sw.epilog:                                        ; preds = %if.end11, %if.end
  store i32 1, i32* %retval, align 4, !dbg !3724
  br label %return, !dbg !3724

return:                                           ; preds = %sw.epilog, %sw.bb3, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3725
  ret i32 %9, !dbg !3725
}

; Function Attrs: nounwind uwtable
define i32 @XML_ResumeParser(%struct.XML_ParserStruct* %parser) #0 !dbg !789 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3726, metadata !1076), !dbg !3727
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3728, metadata !1076), !dbg !3729
  store i32 1, i32* %result, align 4, !dbg !3729
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3730
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85, !dbg !3730
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !3730
  %1 = load i32, i32* %parsing, align 8, !dbg !3730
  %cmp = icmp ne i32 %1, 3, !dbg !3732
  br i1 %cmp, label %if.then, label %if.end, !dbg !3733

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3734
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46, !dbg !3734
  store i32 34, i32* %m_errorCode, align 8, !dbg !3736
  store i32 0, i32* %retval, align 4, !dbg !3737
  br label %return, !dbg !3737

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3738
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 85, !dbg !3738
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0, !dbg !3738
  store i32 1, i32* %parsing2, align 8, !dbg !3739
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3740
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 45, !dbg !3740
  %5 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !3740
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3741
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3742
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 4, !dbg !3742
  %8 = load i8*, i8** %m_bufferPtr, align 8, !dbg !3742
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3743
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 8, !dbg !3743
  %10 = load i8*, i8** %m_parseEndPtr, align 8, !dbg !3743
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3744
  %m_bufferPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 4, !dbg !3744
  %call = call i32 %5(%struct.XML_ParserStruct* %6, i8* %8, i8* %10, i8** %m_bufferPtr3), !dbg !3740
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3745
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 46, !dbg !3745
  store i32 %call, i32* %m_errorCode4, align 8, !dbg !3746
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3747
  %m_errorCode5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 46, !dbg !3747
  %14 = load i32, i32* %m_errorCode5, align 8, !dbg !3747
  %cmp6 = icmp ne i32 %14, 0, !dbg !3749
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !3750

if.then7:                                         ; preds = %if.end
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3751
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 47, !dbg !3751
  %16 = load i8*, i8** %m_eventPtr, align 8, !dbg !3751
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3753
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 48, !dbg !3753
  store i8* %16, i8** %m_eventEndPtr, align 8, !dbg !3754
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3755
  %m_processor8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 45, !dbg !3755
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor8, align 8, !dbg !3756
  store i32 0, i32* %retval, align 4, !dbg !3757
  br label %return, !dbg !3757

if.else:                                          ; preds = %if.end
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3758
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 85, !dbg !3758
  %parsing10 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 0, !dbg !3758
  %20 = load i32, i32* %parsing10, align 8, !dbg !3758
  switch i32 %20, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %sw.bb11
    i32 1, label %sw.bb11
  ], !dbg !3760

sw.bb:                                            ; preds = %if.else
  store i32 2, i32* %result, align 4, !dbg !3761
  br label %sw.epilog, !dbg !3763

sw.bb11:                                          ; preds = %if.else, %if.else
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3764
  %m_parsingStatus12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 85, !dbg !3764
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus12, i32 0, i32 1, !dbg !3764
  %22 = load i8, i8* %finalBuffer, align 4, !dbg !3764
  %tobool = icmp ne i8 %22, 0, !dbg !3764
  br i1 %tobool, label %if.then13, label %if.end16, !dbg !3766

if.then13:                                        ; preds = %sw.bb11
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3767
  %m_parsingStatus14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 85, !dbg !3767
  %parsing15 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus14, i32 0, i32 0, !dbg !3767
  store i32 2, i32* %parsing15, align 8, !dbg !3769
  %24 = load i32, i32* %result, align 4, !dbg !3770
  store i32 %24, i32* %retval, align 4, !dbg !3771
  br label %return, !dbg !3771

if.end16:                                         ; preds = %sw.bb11
  br label %sw.default, !dbg !3772

sw.default:                                       ; preds = %if.else, %if.end16
  br label %sw.epilog, !dbg !3774

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end17

if.end17:                                         ; preds = %sw.epilog
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3775
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 34, !dbg !3775
  %26 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !3775
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %26, i32 0, i32 9, !dbg !3775
  %27 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !3775
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3775
  %m_encoding18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 34, !dbg !3775
  %29 = load %struct.encoding*, %struct.encoding** %m_encoding18, align 8, !dbg !3775
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3775
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 49, !dbg !3775
  %31 = load i8*, i8** %m_positionPtr, align 8, !dbg !3775
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3775
  %m_bufferPtr19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 4, !dbg !3775
  %33 = load i8*, i8** %m_bufferPtr19, align 8, !dbg !3775
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3775
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 78, !dbg !3775
  call void %27(%struct.encoding* %29, i8* %31, i8* %33, %struct.position* %m_position), !dbg !3775
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3776
  %m_bufferPtr20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 4, !dbg !3776
  %36 = load i8*, i8** %m_bufferPtr20, align 8, !dbg !3776
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3777
  %m_positionPtr21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 49, !dbg !3777
  store i8* %36, i8** %m_positionPtr21, align 8, !dbg !3778
  %38 = load i32, i32* %result, align 4, !dbg !3779
  store i32 %38, i32* %retval, align 4, !dbg !3780
  br label %return, !dbg !3780

return:                                           ; preds = %if.end17, %if.then13, %if.then7, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !3781
  ret i32 %39, !dbg !3781
}

; Function Attrs: nounwind uwtable
define void @XML_GetParsingStatus(%struct.XML_ParserStruct* %parser, %struct.XML_ParsingStatus* %status) #0 !dbg !792 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %status.addr = alloca %struct.XML_ParsingStatus*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3782, metadata !1076), !dbg !3783
  store %struct.XML_ParsingStatus* %status, %struct.XML_ParsingStatus** %status.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParsingStatus** %status.addr, metadata !3784, metadata !1076), !dbg !3785
  %0 = load %struct.XML_ParsingStatus*, %struct.XML_ParsingStatus** %status.addr, align 8, !dbg !3786
  %cmp = icmp ne %struct.XML_ParsingStatus* %0, null, !dbg !3786
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3786

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3787

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i32 0, i32 0), i32 1879, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__.XML_GetParsingStatus, i32 0, i32 0)) #8, !dbg !3789
  unreachable, !dbg !3789
                                                  ; No predecessors!
  br label %cond.end, !dbg !3791

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.XML_ParsingStatus*, %struct.XML_ParsingStatus** %status.addr, align 8, !dbg !3793
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3794
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 85, !dbg !3795
  %4 = bitcast %struct.XML_ParsingStatus* %2 to i8*, !dbg !3795
  %5 = bitcast %struct.XML_ParsingStatus* %m_parsingStatus to i8*, !dbg !3795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 4, i1 false), !dbg !3795
  ret void, !dbg !3796
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @XML_GetErrorCode(%struct.XML_ParserStruct* %parser) #0 !dbg !796 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3797, metadata !1076), !dbg !3798
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3799
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 46, !dbg !3799
  %1 = load i32, i32* %m_errorCode, align 8, !dbg !3799
  ret i32 %1, !dbg !3800
}

; Function Attrs: nounwind uwtable
define i64 @XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %parser) #0 !dbg !799 {
entry:
  %retval = alloca i64, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3801, metadata !1076), !dbg !3802
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3803
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !3803
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !3803
  %tobool = icmp ne i8* %1, null, !dbg !3803
  br i1 %tobool, label %if.then, label %if.end, !dbg !3805

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3806
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 7, !dbg !3806
  %3 = load i64, i64* %m_parseEndByteIndex, align 8, !dbg !3806
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3807
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 8, !dbg !3807
  %5 = load i8*, i8** %m_parseEndPtr, align 8, !dbg !3807
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3808
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 47, !dbg !3808
  %7 = load i8*, i8** %m_eventPtr1, align 8, !dbg !3808
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !3809
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !3809
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3809
  %sub = sub nsw i64 %3, %sub.ptr.sub, !dbg !3810
  store i64 %sub, i64* %retval, align 8, !dbg !3811
  br label %return, !dbg !3811

if.end:                                           ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !3812
  br label %return, !dbg !3812

return:                                           ; preds = %if.end, %if.then
  %8 = load i64, i64* %retval, align 8, !dbg !3813
  ret i64 %8, !dbg !3813
}

; Function Attrs: nounwind uwtable
define i32 @XML_GetCurrentByteCount(%struct.XML_ParserStruct* %parser) #0 !dbg !802 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3814, metadata !1076), !dbg !3815
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3816
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 48, !dbg !3816
  %1 = load i8*, i8** %m_eventEndPtr, align 8, !dbg !3816
  %tobool = icmp ne i8* %1, null, !dbg !3816
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3818

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3819
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !3819
  %3 = load i8*, i8** %m_eventPtr, align 8, !dbg !3819
  %tobool1 = icmp ne i8* %3, null, !dbg !3819
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3821

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3822
  %m_eventEndPtr2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 48, !dbg !3822
  %5 = load i8*, i8** %m_eventEndPtr2, align 8, !dbg !3822
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3823
  %m_eventPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 47, !dbg !3823
  %7 = load i8*, i8** %m_eventPtr3, align 8, !dbg !3823
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !3824
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !3824
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3824
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3825
  store i32 %conv, i32* %retval, align 4, !dbg !3826
  br label %return, !dbg !3826

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3827
  br label %return, !dbg !3827

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3828
  ret i32 %8, !dbg !3828
}

; Function Attrs: nounwind uwtable
define i8* @XML_GetInputContext(%struct.XML_ParserStruct* %parser, i32* %offset, i32* %size) #0 !dbg !803 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %offset.addr = alloca i32*, align 8
  %size.addr = alloca i32*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3829, metadata !1076), !dbg !3830
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !3831, metadata !1076), !dbg !3832
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !3833, metadata !1076), !dbg !3834
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3835
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !3835
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !3835
  %tobool = icmp ne i8* %1, null, !dbg !3835
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3837

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3838
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 2, !dbg !3838
  %3 = load i8*, i8** %m_buffer, align 8, !dbg !3838
  %tobool1 = icmp ne i8* %3, null, !dbg !3838
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3840

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3841
  %m_eventPtr2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 47, !dbg !3841
  %5 = load i8*, i8** %m_eventPtr2, align 8, !dbg !3841
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3843
  %m_buffer3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 2, !dbg !3843
  %7 = load i8*, i8** %m_buffer3, align 8, !dbg !3843
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !3844
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !3844
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3844
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3845
  %8 = load i32*, i32** %offset.addr, align 8, !dbg !3846
  store i32 %conv, i32* %8, align 4, !dbg !3847
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3848
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 5, !dbg !3848
  %10 = load i8*, i8** %m_bufferEnd, align 8, !dbg !3848
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3849
  %m_buffer4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 2, !dbg !3849
  %12 = load i8*, i8** %m_buffer4, align 8, !dbg !3849
  %sub.ptr.lhs.cast5 = ptrtoint i8* %10 to i64, !dbg !3850
  %sub.ptr.rhs.cast6 = ptrtoint i8* %12 to i64, !dbg !3850
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6, !dbg !3850
  %conv8 = trunc i64 %sub.ptr.sub7 to i32, !dbg !3851
  %13 = load i32*, i32** %size.addr, align 8, !dbg !3852
  store i32 %conv8, i32* %13, align 4, !dbg !3853
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3854
  %m_buffer9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 2, !dbg !3854
  %15 = load i8*, i8** %m_buffer9, align 8, !dbg !3854
  store i8* %15, i8** %retval, align 8, !dbg !3855
  br label %return, !dbg !3855

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval, align 8, !dbg !3856
  br label %return, !dbg !3856

return:                                           ; preds = %if.end, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !3857
  ret i8* %16, !dbg !3857
}

; Function Attrs: nounwind uwtable
define i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %parser) #0 !dbg !806 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3858, metadata !1076), !dbg !3859
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3860
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !3860
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !3860
  %tobool = icmp ne i8* %1, null, !dbg !3860
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3862

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3863
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !3863
  %3 = load i8*, i8** %m_eventPtr1, align 8, !dbg !3863
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3865
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 49, !dbg !3865
  %5 = load i8*, i8** %m_positionPtr, align 8, !dbg !3865
  %cmp = icmp uge i8* %3, %5, !dbg !3866
  br i1 %cmp, label %if.then, label %if.end, !dbg !3867

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3868
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !3868
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !3868
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %7, i32 0, i32 9, !dbg !3868
  %8 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !3868
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3868
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34, !dbg !3868
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !3868
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3868
  %m_positionPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 49, !dbg !3868
  %12 = load i8*, i8** %m_positionPtr3, align 8, !dbg !3868
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3868
  %m_eventPtr4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 47, !dbg !3868
  %14 = load i8*, i8** %m_eventPtr4, align 8, !dbg !3868
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3868
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 78, !dbg !3868
  call void %8(%struct.encoding* %10, i8* %12, i8* %14, %struct.position* %m_position), !dbg !3868
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3870
  %m_eventPtr5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47, !dbg !3870
  %17 = load i8*, i8** %m_eventPtr5, align 8, !dbg !3870
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3871
  %m_positionPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 49, !dbg !3871
  store i8* %17, i8** %m_positionPtr6, align 8, !dbg !3872
  br label %if.end, !dbg !3873

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3874
  %m_position7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 78, !dbg !3874
  %lineNumber = getelementptr inbounds %struct.position, %struct.position* %m_position7, i32 0, i32 0, !dbg !3875
  %20 = load i64, i64* %lineNumber, align 8, !dbg !3875
  %add = add i64 %20, 1, !dbg !3876
  ret i64 %add, !dbg !3877
}

; Function Attrs: nounwind uwtable
define i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %parser) #0 !dbg !809 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3878, metadata !1076), !dbg !3879
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3880
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47, !dbg !3880
  %1 = load i8*, i8** %m_eventPtr, align 8, !dbg !3880
  %tobool = icmp ne i8* %1, null, !dbg !3880
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3882

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3883
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !3883
  %3 = load i8*, i8** %m_eventPtr1, align 8, !dbg !3883
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3885
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 49, !dbg !3885
  %5 = load i8*, i8** %m_positionPtr, align 8, !dbg !3885
  %cmp = icmp uge i8* %3, %5, !dbg !3886
  br i1 %cmp, label %if.then, label %if.end, !dbg !3887

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3888
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !3888
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !3888
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %7, i32 0, i32 9, !dbg !3888
  %8 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8, !dbg !3888
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3888
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34, !dbg !3888
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !3888
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3888
  %m_positionPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 49, !dbg !3888
  %12 = load i8*, i8** %m_positionPtr3, align 8, !dbg !3888
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3888
  %m_eventPtr4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 47, !dbg !3888
  %14 = load i8*, i8** %m_eventPtr4, align 8, !dbg !3888
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3888
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 78, !dbg !3888
  call void %8(%struct.encoding* %10, i8* %12, i8* %14, %struct.position* %m_position), !dbg !3888
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3890
  %m_eventPtr5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47, !dbg !3890
  %17 = load i8*, i8** %m_eventPtr5, align 8, !dbg !3890
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3891
  %m_positionPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 49, !dbg !3891
  store i8* %17, i8** %m_positionPtr6, align 8, !dbg !3892
  br label %if.end, !dbg !3893

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3894
  %m_position7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 78, !dbg !3894
  %columnNumber = getelementptr inbounds %struct.position, %struct.position* %m_position7, i32 0, i32 1, !dbg !3895
  %20 = load i64, i64* %columnNumber, align 8, !dbg !3895
  ret i64 %20, !dbg !3896
}

; Function Attrs: nounwind uwtable
define void @XML_FreeContentModel(%struct.XML_ParserStruct* %parser, %struct.XML_cp* %model) #0 !dbg !810 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %model.addr = alloca %struct.XML_cp*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3897, metadata !1076), !dbg !3898
  store %struct.XML_cp* %model, %struct.XML_cp** %model.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %model.addr, metadata !3899, metadata !1076), !dbg !3900
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3901
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !3901
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !3901
  %1 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !3901
  %2 = load %struct.XML_cp*, %struct.XML_cp** %model.addr, align 8, !dbg !3901
  %3 = bitcast %struct.XML_cp* %2 to i8*, !dbg !3901
  call void %1(i8* %3), !dbg !3901
  ret void, !dbg !3902
}

; Function Attrs: nounwind uwtable
define noalias i8* @XML_MemMalloc(%struct.XML_ParserStruct* %parser, i64 %size) #0 !dbg !813 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %size.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3903, metadata !1076), !dbg !3904
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !3905, metadata !1076), !dbg !3906
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3907
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !3907
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !3907
  %1 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !3907
  %2 = load i64, i64* %size.addr, align 8, !dbg !3907
  %call = call i8* %1(i64 %2), !dbg !3907
  ret i8* %call, !dbg !3908
}

; Function Attrs: nounwind uwtable
define i8* @XML_MemRealloc(%struct.XML_ParserStruct* %parser, i8* %ptr, i64 %size) #0 !dbg !816 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3909, metadata !1076), !dbg !3910
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3911, metadata !1076), !dbg !3912
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !3913, metadata !1076), !dbg !3914
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3915
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !3915
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !3915
  %1 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !3915
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3915
  %3 = load i64, i64* %size.addr, align 8, !dbg !3915
  %call = call i8* %1(i8* %2, i64 %3), !dbg !3915
  ret i8* %call, !dbg !3916
}

; Function Attrs: nounwind uwtable
define void @XML_MemFree(%struct.XML_ParserStruct* %parser, i8* %ptr) #0 !dbg !819 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3917, metadata !1076), !dbg !3918
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3919, metadata !1076), !dbg !3920
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3921
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3, !dbg !3921
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2, !dbg !3921
  %1 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !3921
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !3921
  call void %1(i8* %2), !dbg !3921
  ret void, !dbg !3922
}

; Function Attrs: nounwind uwtable
define void @XML_DefaultCurrent(%struct.XML_ParserStruct* %parser) #0 !dbg !820 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3923, metadata !1076), !dbg !3924
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3925
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 18, !dbg !3925
  %1 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !3925
  %tobool = icmp ne void (i8*, i8*, i32)* %1, null, !dbg !3925
  br i1 %tobool, label %if.then, label %if.end5, !dbg !3927

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3928
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 50, !dbg !3928
  %3 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !3928
  %tobool1 = icmp ne %struct.open_internal_entity* %3, null, !dbg !3928
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3931

if.then2:                                         ; preds = %if.then
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3932
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3933
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 36, !dbg !3933
  %6 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !3933
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3934
  %m_openInternalEntities3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50, !dbg !3934
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities3, align 8, !dbg !3934
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0, !dbg !3935
  %9 = load i8*, i8** %internalEventPtr, align 8, !dbg !3935
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3936
  %m_openInternalEntities4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 50, !dbg !3936
  %11 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities4, align 8, !dbg !3936
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %11, i32 0, i32 1, !dbg !3937
  %12 = load i8*, i8** %internalEventEndPtr, align 8, !dbg !3937
  call void @reportDefault(%struct.XML_ParserStruct* %4, %struct.encoding* %6, i8* %9, i8* %12), !dbg !3938
  br label %if.end, !dbg !3938

if.else:                                          ; preds = %if.then
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3939
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3940
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 34, !dbg !3940
  %15 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !3940
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3941
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47, !dbg !3941
  %17 = load i8*, i8** %m_eventPtr, align 8, !dbg !3941
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3942
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 48, !dbg !3942
  %19 = load i8*, i8** %m_eventEndPtr, align 8, !dbg !3942
  call void @reportDefault(%struct.XML_ParserStruct* %13, %struct.encoding* %15, i8* %17, i8* %19), !dbg !3943
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !3944

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !3945
}

; Function Attrs: nounwind uwtable
define internal void @reportDefault(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %s, i8* %end) #0 !dbg !991 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %convert_res = alloca i32, align 4
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %dataPtr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !3946, metadata !1076), !dbg !3947
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !3948, metadata !1076), !dbg !3949
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !3950, metadata !1076), !dbg !3951
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !3952, metadata !1076), !dbg !3953
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3954
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %0, i32 0, i32 14, !dbg !3954
  %1 = load i8, i8* %isUtf8, align 4, !dbg !3954
  %tobool = icmp ne i8 %1, 0, !dbg !3954
  br i1 %tobool, label %if.else9, label %if.then, !dbg !3956

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %convert_res, metadata !3957, metadata !1076), !dbg !3959
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !3960, metadata !1076), !dbg !3961
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !3962, metadata !1076), !dbg !3963
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3964
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3966
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !3966
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !3966
  %cmp = icmp eq %struct.encoding* %2, %4, !dbg !3967
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3968

if.then1:                                         ; preds = %if.then
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3969
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47, !dbg !3969
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !3971
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3972
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 48, !dbg !3972
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !3973
  br label %if.end, !dbg !3974

if.else:                                          ; preds = %if.then
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3975
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50, !dbg !3975
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !3975
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0, !dbg !3977
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !3978
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3979
  %m_openInternalEntities2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50, !dbg !3979
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities2, align 8, !dbg !3979
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 1, !dbg !3980
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !3981
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %do.body, !dbg !3982

do.body:                                          ; preds = %land.end, %if.end
  call void @llvm.dbg.declare(metadata i8** %dataPtr, metadata !3983, metadata !1076), !dbg !3985
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3986
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 9, !dbg !3986
  %12 = load i8*, i8** %m_dataBuf, align 8, !dbg !3986
  store i8* %12, i8** %dataPtr, align 8, !dbg !3985
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3987
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %13, i32 0, i32 11, !dbg !3987
  %14 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !3987
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !3987
  %16 = load i8*, i8** %end.addr, align 8, !dbg !3987
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3987
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 10, !dbg !3987
  %18 = load i8*, i8** %m_dataBufEnd, align 8, !dbg !3987
  %call = call i32 %14(%struct.encoding* %15, i8** %s.addr, i8* %16, i8** %dataPtr, i8* %18), !dbg !3987
  store i32 %call, i32* %convert_res, align 4, !dbg !3988
  %19 = load i8*, i8** %s.addr, align 8, !dbg !3989
  %20 = load i8**, i8*** %eventEndPP, align 8, !dbg !3990
  store i8* %19, i8** %20, align 8, !dbg !3991
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3992
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 18, !dbg !3992
  %22 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !3992
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3993
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 1, !dbg !3993
  %24 = load i8*, i8** %m_handlerArg, align 8, !dbg !3993
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3994
  %m_dataBuf3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 9, !dbg !3994
  %26 = load i8*, i8** %m_dataBuf3, align 8, !dbg !3994
  %27 = load i8*, i8** %dataPtr, align 8, !dbg !3995
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !3996
  %m_dataBuf4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 9, !dbg !3996
  %29 = load i8*, i8** %m_dataBuf4, align 8, !dbg !3996
  %sub.ptr.lhs.cast = ptrtoint i8* %27 to i64, !dbg !3997
  %sub.ptr.rhs.cast = ptrtoint i8* %29 to i64, !dbg !3997
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3997
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3998
  call void %22(i8* %24, i8* %26, i32 %conv), !dbg !3992
  %30 = load i8*, i8** %s.addr, align 8, !dbg !3999
  %31 = load i8**, i8*** %eventPP, align 8, !dbg !4000
  store i8* %30, i8** %31, align 8, !dbg !4001
  br label %do.cond, !dbg !4002

do.cond:                                          ; preds = %do.body
  %32 = load i32, i32* %convert_res, align 4, !dbg !4003
  %cmp5 = icmp ne i32 %32, 0, !dbg !4005
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !4006

land.rhs:                                         ; preds = %do.cond
  %33 = load i32, i32* %convert_res, align 4, !dbg !4007
  %cmp7 = icmp ne i32 %33, 1, !dbg !4009
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %34 = phi i1 [ false, %do.cond ], [ %cmp7, %land.rhs ]
  br i1 %34, label %do.body, label %do.end, !dbg !4010

do.end:                                           ; preds = %land.end
  br label %if.end16, !dbg !4012

if.else9:                                         ; preds = %entry
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4013
  %m_defaultHandler10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 18, !dbg !4013
  %36 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler10, align 8, !dbg !4013
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4014
  %m_handlerArg11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 1, !dbg !4014
  %38 = load i8*, i8** %m_handlerArg11, align 8, !dbg !4014
  %39 = load i8*, i8** %s.addr, align 8, !dbg !4015
  %40 = load i8*, i8** %end.addr, align 8, !dbg !4016
  %41 = load i8*, i8** %s.addr, align 8, !dbg !4017
  %sub.ptr.lhs.cast12 = ptrtoint i8* %40 to i64, !dbg !4018
  %sub.ptr.rhs.cast13 = ptrtoint i8* %41 to i64, !dbg !4018
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast12, %sub.ptr.rhs.cast13, !dbg !4018
  %conv15 = trunc i64 %sub.ptr.sub14 to i32, !dbg !4019
  call void %36(i8* %38, i8* %39, i32 %conv15), !dbg !4013
  br label %if.end16

if.end16:                                         ; preds = %if.else9, %do.end
  ret void, !dbg !4020
}

; Function Attrs: nounwind uwtable
define i8* @XML_ErrorString(i32 %code) #0 !dbg !821 {
entry:
  %retval = alloca i8*, align 8
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4021, metadata !1076), !dbg !4022
  %0 = load i32, i32* %code.addr, align 4, !dbg !4023
  %cmp = icmp ugt i32 %0, 0, !dbg !4025
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4026

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4, !dbg !4027
  %conv = zext i32 %1 to i64, !dbg !4027
  %cmp1 = icmp ult i64 %conv, 41, !dbg !4029
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4030

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %code.addr, align 4, !dbg !4031
  %idxprom = zext i32 %2 to i64, !dbg !4032
  %arrayidx = getelementptr inbounds [41 x i8*], [41 x i8*]* @XML_ErrorString.message, i64 0, i64 %idxprom, !dbg !4032
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !4032
  store i8* %3, i8** %retval, align 8, !dbg !4033
  br label %return, !dbg !4033

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval, align 8, !dbg !4034
  br label %return, !dbg !4034

return:                                           ; preds = %if.end, %if.then
  %4 = load i8*, i8** %retval, align 8, !dbg !4035
  ret i8* %4, !dbg !4035
}

; Function Attrs: nounwind uwtable
define i8* @XML_ExpatVersion() #0 !dbg !827 {
entry:
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), !dbg !4036
}

; Function Attrs: nounwind uwtable
define { i64, i32 } @XML_ExpatVersionInfo() #0 !dbg !830 {
entry:
  %retval = alloca %struct.XML_Expat_Version, align 4
  %version = alloca %struct.XML_Expat_Version, align 4
  %tmp = alloca { i64, i32 }, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Expat_Version* %version, metadata !4037, metadata !1076), !dbg !4038
  %major = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 0, !dbg !4039
  store i32 2, i32* %major, align 4, !dbg !4040
  %minor = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 1, !dbg !4041
  store i32 1, i32* %minor, align 4, !dbg !4042
  %micro = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 2, !dbg !4043
  store i32 1, i32* %micro, align 4, !dbg !4044
  %0 = bitcast %struct.XML_Expat_Version* %retval to i8*, !dbg !4045
  %1 = bitcast %struct.XML_Expat_Version* %version to i8*, !dbg !4045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 12, i32 4, i1 false), !dbg !4045
  %2 = bitcast { i64, i32 }* %tmp to i8*, !dbg !4046
  %3 = bitcast %struct.XML_Expat_Version* %retval to i8*, !dbg !4046
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 12, i32 4, i1 false), !dbg !4047
  %4 = load { i64, i32 }, { i64, i32 }* %tmp, align 8, !dbg !4046
  ret { i64, i32 } %4, !dbg !4046
}

; Function Attrs: nounwind uwtable
define %struct.XML_Feature* @XML_GetFeatureList() #0 !dbg !839 {
entry:
  ret %struct.XML_Feature* getelementptr inbounds ([4 x %struct.XML_Feature], [4 x %struct.XML_Feature]* @XML_GetFeatureList.features, i32 0, i32 0), !dbg !4049
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #4

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: nounwind uwtable
define internal %struct.DTD* @dtdCreate(%struct.XML_Memory_Handling_Suite* %ms) #0 !dbg !853 {
entry:
  %retval = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %p = alloca %struct.DTD*, align 8
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !4050, metadata !1076), !dbg !4051
  call void @llvm.dbg.declare(metadata %struct.DTD** %p, metadata !4052, metadata !1076), !dbg !4053
  %0 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4054
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %0, i32 0, i32 0, !dbg !4055
  %1 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !4055
  %call = call i8* %1(i64 320), !dbg !4054
  %2 = bitcast i8* %call to %struct.DTD*, !dbg !4056
  store %struct.DTD* %2, %struct.DTD** %p, align 8, !dbg !4053
  %3 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4057
  %cmp = icmp eq %struct.DTD* %3, null, !dbg !4059
  br i1 %cmp, label %if.then, label %if.end, !dbg !4060

if.then:                                          ; preds = %entry
  %4 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4061
  store %struct.DTD* %4, %struct.DTD** %retval, align 8, !dbg !4062
  br label %return, !dbg !4062

if.end:                                           ; preds = %entry
  %5 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4063
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %5, i32 0, i32 4, !dbg !4064
  %6 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4065
  call void @poolInit(%struct.STRING_POOL* %pool, %struct.XML_Memory_Handling_Suite* %6), !dbg !4066
  %7 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4067
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %7, i32 0, i32 5, !dbg !4068
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4069
  call void @poolInit(%struct.STRING_POOL* %entityValuePool, %struct.XML_Memory_Handling_Suite* %8), !dbg !4070
  %9 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4071
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 0, !dbg !4072
  %10 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4073
  call void @hashTableInit(%struct.HASH_TABLE* %generalEntities, %struct.XML_Memory_Handling_Suite* %10), !dbg !4074
  %11 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4075
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 1, !dbg !4076
  %12 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4077
  call void @hashTableInit(%struct.HASH_TABLE* %elementTypes, %struct.XML_Memory_Handling_Suite* %12), !dbg !4078
  %13 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4079
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 2, !dbg !4080
  %14 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4081
  call void @hashTableInit(%struct.HASH_TABLE* %attributeIds, %struct.XML_Memory_Handling_Suite* %14), !dbg !4082
  %15 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4083
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 3, !dbg !4084
  %16 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4085
  call void @hashTableInit(%struct.HASH_TABLE* %prefixes, %struct.XML_Memory_Handling_Suite* %16), !dbg !4086
  %17 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4087
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 9, !dbg !4088
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 0, !dbg !4089
  store i8* null, i8** %name, align 8, !dbg !4090
  %18 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4091
  %defaultPrefix1 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 9, !dbg !4092
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix1, i32 0, i32 1, !dbg !4093
  store %struct.binding* null, %struct.binding** %binding, align 8, !dbg !4094
  %19 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4095
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 10, !dbg !4096
  store i8 0, i8* %in_eldecl, align 8, !dbg !4097
  %20 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4098
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 16, !dbg !4099
  store i32* null, i32** %scaffIndex, align 8, !dbg !4100
  %21 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4101
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 11, !dbg !4102
  store %struct.CONTENT_SCAFFOLD* null, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !4103
  %22 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4104
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 15, !dbg !4105
  store i32 0, i32* %scaffLevel, align 4, !dbg !4106
  %23 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4107
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 13, !dbg !4108
  store i32 0, i32* %scaffSize, align 4, !dbg !4109
  %24 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4110
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %24, i32 0, i32 14, !dbg !4111
  store i32 0, i32* %scaffCount, align 8, !dbg !4112
  %25 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4113
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 12, !dbg !4114
  store i32 0, i32* %contentStringLen, align 8, !dbg !4115
  %26 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4116
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 6, !dbg !4117
  store i8 1, i8* %keepProcessing, align 8, !dbg !4118
  %27 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4119
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %27, i32 0, i32 7, !dbg !4120
  store i8 0, i8* %hasParamEntityRefs, align 1, !dbg !4121
  %28 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4122
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 8, !dbg !4123
  store i8 0, i8* %standalone, align 2, !dbg !4124
  %29 = load %struct.DTD*, %struct.DTD** %p, align 8, !dbg !4125
  store %struct.DTD* %29, %struct.DTD** %retval, align 8, !dbg !4126
  br label %return, !dbg !4126

return:                                           ; preds = %if.end, %if.then
  %30 = load %struct.DTD*, %struct.DTD** %retval, align 8, !dbg !4127
  ret %struct.DTD* %30, !dbg !4127
}

; Function Attrs: nounwind uwtable
define internal void @poolInit(%struct.STRING_POOL* %pool, %struct.XML_Memory_Handling_Suite* %ms) #0 !dbg !860 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !4128, metadata !1076), !dbg !4129
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !4130, metadata !1076), !dbg !4131
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4132
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 0, !dbg !4133
  store %struct.block* null, %struct.block** %blocks, align 8, !dbg !4134
  %1 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4135
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %1, i32 0, i32 1, !dbg !4136
  store %struct.block* null, %struct.block** %freeBlocks, align 8, !dbg !4137
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4138
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 4, !dbg !4139
  store i8* null, i8** %start, align 8, !dbg !4140
  %3 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4141
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %3, i32 0, i32 3, !dbg !4142
  store i8* null, i8** %ptr, align 8, !dbg !4143
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4144
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 2, !dbg !4145
  store i8* null, i8** %end, align 8, !dbg !4146
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4147
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !4148
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 5, !dbg !4149
  store %struct.XML_Memory_Handling_Suite* %5, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !4150
  ret void, !dbg !4151
}

declare %struct.encoding* @XmlGetUtf8InternalEncoding() #5

; Function Attrs: nounwind uwtable
define internal void @hashTableInit(%struct.HASH_TABLE* %p, %struct.XML_Memory_Handling_Suite* %ms) #0 !dbg !856 {
entry:
  %p.addr = alloca %struct.HASH_TABLE*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store %struct.HASH_TABLE* %p, %struct.HASH_TABLE** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %p.addr, metadata !4152, metadata !1076), !dbg !4153
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_Memory_Handling_Suite** %ms.addr, metadata !4154, metadata !1076), !dbg !4155
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !4156
  %power = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 1, !dbg !4157
  store i8 0, i8* %power, align 8, !dbg !4158
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !4159
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2, !dbg !4160
  store i64 0, i64* %size, align 8, !dbg !4161
  %2 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !4162
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %2, i32 0, i32 3, !dbg !4163
  store i64 0, i64* %used, align 8, !dbg !4164
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !4165
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 0, !dbg !4166
  store %struct.NAMED** null, %struct.NAMED*** %v, align 8, !dbg !4167
  %4 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8, !dbg !4168
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8, !dbg !4169
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 4, !dbg !4170
  store %struct.XML_Memory_Handling_Suite* %4, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !4171
  ret void, !dbg !4172
}

; Function Attrs: nounwind uwtable
define internal i32 @prologInitProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 !dbg !870 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !4173, metadata !1076), !dbg !4174
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !4175, metadata !1076), !dbg !4176
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4177, metadata !1076), !dbg !4178
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !4179, metadata !1076), !dbg !4180
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4181, metadata !1076), !dbg !4182
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4183
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %0), !dbg !4184
  store i32 %call, i32* %result, align 4, !dbg !4182
  %1 = load i32, i32* %result, align 4, !dbg !4185
  %cmp = icmp ne i32 %1, 0, !dbg !4187
  br i1 %cmp, label %if.then, label %if.end, !dbg !4188

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %result, align 4, !dbg !4189
  store i32 %2, i32* %retval, align 4, !dbg !4190
  br label %return, !dbg !4190

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4191
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 45, !dbg !4191
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !4192
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4193
  %5 = load i8*, i8** %s.addr, align 8, !dbg !4194
  %6 = load i8*, i8** %end.addr, align 8, !dbg !4195
  %7 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !4196
  %call1 = call i32 @prologProcessor(%struct.XML_ParserStruct* %4, i8* %5, i8* %6, i8** %7), !dbg !4197
  store i32 %call1, i32* %retval, align 4, !dbg !4198
  br label %return, !dbg !4198

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4199
  ret i32 %8, !dbg !4199
}

declare void @XmlPrologStateInit(%struct.prolog_state*) #5

declare i32 @XmlInitEncoding(%struct.INIT_ENCODING*, %struct.encoding**, i8*) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @initializeEncoding(%struct.XML_ParserStruct* %parser) #0 !dbg !871 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !4200, metadata !1076), !dbg !4201
  call void @llvm.dbg.declare(metadata i8** %s, metadata !4202, metadata !1076), !dbg !4203
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4204
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 37, !dbg !4204
  %1 = load i8*, i8** %m_protocolEncodingName, align 8, !dbg !4204
  store i8* %1, i8** %s, align 8, !dbg !4205
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4206
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 38, !dbg !4206
  %3 = load i8, i8* %m_ns, align 8, !dbg !4206
  %conv = zext i8 %3 to i32, !dbg !4206
  %tobool = icmp ne i32 %conv, 0, !dbg !4206
  %cond = select i1 %tobool, i32 (%struct.INIT_ENCODING*, %struct.encoding**, i8*)* @XmlInitEncoding, i32 (%struct.INIT_ENCODING*, %struct.encoding**, i8*)* @XmlInitEncoding, !dbg !4206
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4208
  %m_initEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 35, !dbg !4208
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4209
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 34, !dbg !4209
  %6 = load i8*, i8** %s, align 8, !dbg !4210
  %call = call i32 %cond(%struct.INIT_ENCODING* %m_initEncoding, %struct.encoding** %m_encoding, i8* %6), !dbg !4211
  %tobool1 = icmp ne i32 %call, 0, !dbg !4211
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4212

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4213
  br label %return, !dbg !4213

if.end:                                           ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4214
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4215
  %m_protocolEncodingName2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 37, !dbg !4215
  %9 = load i8*, i8** %m_protocolEncodingName2, align 8, !dbg !4215
  %call3 = call i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %7, i8* %9), !dbg !4216
  store i32 %call3, i32* %retval, align 4, !dbg !4217
  br label %return, !dbg !4217

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4218
  ret i32 %10, !dbg !4218
}

; Function Attrs: nounwind uwtable
define internal i32 @prologProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 !dbg !875 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !4219, metadata !1076), !dbg !4220
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !4221, metadata !1076), !dbg !4222
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4223, metadata !1076), !dbg !4224
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !4225, metadata !1076), !dbg !4226
  call void @llvm.dbg.declare(metadata i8** %next, metadata !4227, metadata !1076), !dbg !4228
  %0 = load i8*, i8** %s.addr, align 8, !dbg !4229
  store i8* %0, i8** %next, align 8, !dbg !4228
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !4230, metadata !1076), !dbg !4231
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4232
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34, !dbg !4232
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !4232
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %2, i32 0, i32 0, !dbg !4232
  %arrayidx = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 0, !dbg !4232
  %3 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !4232
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4232
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 34, !dbg !4232
  %5 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !4232
  %6 = load i8*, i8** %s.addr, align 8, !dbg !4232
  %7 = load i8*, i8** %end.addr, align 8, !dbg !4232
  %call = call i32 %3(%struct.encoding* %5, i8* %6, i8* %7, i8** %next), !dbg !4232
  store i32 %call, i32* %tok, align 4, !dbg !4231
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4233
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4234
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34, !dbg !4234
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !4234
  %11 = load i8*, i8** %s.addr, align 8, !dbg !4235
  %12 = load i8*, i8** %end.addr, align 8, !dbg !4236
  %13 = load i32, i32* %tok, align 4, !dbg !4237
  %14 = load i8*, i8** %next, align 8, !dbg !4238
  %15 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !4239
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4240
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 85, !dbg !4240
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !4240
  %17 = load i8, i8* %finalBuffer, align 4, !dbg !4240
  %tobool = icmp ne i8 %17, 0, !dbg !4241
  %lnot = xor i1 %tobool, true, !dbg !4241
  %lnot.ext = zext i1 %lnot to i32, !dbg !4241
  %conv = trunc i32 %lnot.ext to i8, !dbg !4242
  %call3 = call i32 @doProlog(%struct.XML_ParserStruct* %8, %struct.encoding* %10, i8* %11, i8* %12, i32 %13, i8* %14, i8** %15, i8 zeroext %conv), !dbg !4243
  ret i32 %call3, !dbg !4244
}

; Function Attrs: nounwind uwtable
define internal i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 !dbg !872 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %info = alloca %struct.XML_Encoding, align 8
  %i = alloca i32, align 4
  %enc = alloca %struct.encoding*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !4245, metadata !1076), !dbg !4246
  store i8* %encodingName, i8** %encodingName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodingName.addr, metadata !4247, metadata !1076), !dbg !4248
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4249
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 29, !dbg !4249
  %1 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8, !dbg !4249
  %tobool = icmp ne i32 (i8*, i8*, %struct.XML_Encoding*)* %1, null, !dbg !4249
  br i1 %tobool, label %if.then, label %if.end35, !dbg !4251

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.XML_Encoding* %info, metadata !4252, metadata !1076), !dbg !4254
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4255, metadata !1076), !dbg !4256
  store i32 0, i32* %i, align 4, !dbg !4257
  br label %for.cond, !dbg !4259

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !4260
  %cmp = icmp slt i32 %2, 256, !dbg !4263
  br i1 %cmp, label %for.body, label %for.end, !dbg !4264

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !4265
  %idxprom = sext i32 %3 to i64, !dbg !4266
  %map = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 0, !dbg !4267
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* %map, i64 0, i64 %idxprom, !dbg !4266
  store i32 -1, i32* %arrayidx, align 4, !dbg !4268
  br label %for.inc, !dbg !4266

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !4269
  %inc = add nsw i32 %4, 1, !dbg !4269
  store i32 %inc, i32* %i, align 4, !dbg !4269
  br label %for.cond, !dbg !4271

for.end:                                          ; preds = %for.cond
  %convert = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 2, !dbg !4272
  store i32 (i8*, i8*)* null, i32 (i8*, i8*)** %convert, align 8, !dbg !4273
  %data = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !4274
  store i8* null, i8** %data, align 8, !dbg !4275
  %release = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !4276
  store void (i8*)* null, void (i8*)** %release, align 8, !dbg !4277
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4278
  %m_unknownEncodingHandler1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 29, !dbg !4278
  %6 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler1, align 8, !dbg !4278
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4280
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 42, !dbg !4280
  %8 = load i8*, i8** %m_unknownEncodingHandlerData, align 8, !dbg !4280
  %9 = load i8*, i8** %encodingName.addr, align 8, !dbg !4281
  %call = call i32 %6(i8* %8, i8* %9, %struct.XML_Encoding* %info), !dbg !4278
  %tobool2 = icmp ne i32 %call, 0, !dbg !4278
  br i1 %tobool2, label %if.then3, label %if.end27, !dbg !4282

if.then3:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc, metadata !4283, metadata !1076), !dbg !4286
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4287
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 3, !dbg !4287
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !4287
  %11 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !4287
  %call4 = call i32 @XmlSizeOfUnknownEncoding(), !dbg !4287
  %conv = sext i32 %call4 to i64, !dbg !4287
  %call5 = call i8* %11(i64 %conv), !dbg !4288
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4290
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 40, !dbg !4290
  store i8* %call5, i8** %m_unknownEncodingMem, align 8, !dbg !4291
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4292
  %m_unknownEncodingMem6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 40, !dbg !4292
  %14 = load i8*, i8** %m_unknownEncodingMem6, align 8, !dbg !4292
  %tobool7 = icmp ne i8* %14, null, !dbg !4292
  br i1 %tobool7, label %if.end14, label %if.then8, !dbg !4294

if.then8:                                         ; preds = %if.then3
  %release9 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !4295
  %15 = load void (i8*)*, void (i8*)** %release9, align 8, !dbg !4295
  %tobool10 = icmp ne void (i8*)* %15, null, !dbg !4298
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !4299

if.then11:                                        ; preds = %if.then8
  %release12 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !4300
  %16 = load void (i8*)*, void (i8*)** %release12, align 8, !dbg !4300
  %data13 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !4301
  %17 = load i8*, i8** %data13, align 8, !dbg !4301
  call void %16(i8* %17), !dbg !4302
  br label %if.end, !dbg !4302

if.end:                                           ; preds = %if.then11, %if.then8
  store i32 1, i32* %retval, align 4, !dbg !4303
  br label %return, !dbg !4303

if.end14:                                         ; preds = %if.then3
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4304
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 38, !dbg !4304
  %19 = load i8, i8* %m_ns, align 8, !dbg !4304
  %conv15 = zext i8 %19 to i32, !dbg !4304
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !4304
  %cond = select i1 %tobool16, %struct.encoding* (i8*, i32*, i32 (i8*, i8*)*, i8*)* @XmlInitUnknownEncoding, %struct.encoding* (i8*, i32*, i32 (i8*, i8*)*, i8*)* @XmlInitUnknownEncoding, !dbg !4304
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4305
  %m_unknownEncodingMem17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 40, !dbg !4305
  %21 = load i8*, i8** %m_unknownEncodingMem17, align 8, !dbg !4305
  %map18 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 0, !dbg !4306
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %map18, i32 0, i32 0, !dbg !4307
  %convert19 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 2, !dbg !4308
  %22 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert19, align 8, !dbg !4308
  %data20 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !4309
  %23 = load i8*, i8** %data20, align 8, !dbg !4309
  %call21 = call %struct.encoding* %cond(i8* %21, i32* %arraydecay, i32 (i8*, i8*)* %22, i8* %23), !dbg !4310
  store %struct.encoding* %call21, %struct.encoding** %enc, align 8, !dbg !4311
  %24 = load %struct.encoding*, %struct.encoding** %enc, align 8, !dbg !4312
  %tobool22 = icmp ne %struct.encoding* %24, null, !dbg !4312
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !4314

if.then23:                                        ; preds = %if.end14
  %data24 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !4315
  %25 = load i8*, i8** %data24, align 8, !dbg !4315
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4317
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 41, !dbg !4317
  store i8* %25, i8** %m_unknownEncodingData, align 8, !dbg !4318
  %release25 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !4319
  %27 = load void (i8*)*, void (i8*)** %release25, align 8, !dbg !4319
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4320
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 43, !dbg !4320
  store void (i8*)* %27, void (i8*)** %m_unknownEncodingRelease, align 8, !dbg !4321
  %29 = load %struct.encoding*, %struct.encoding** %enc, align 8, !dbg !4322
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4323
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 34, !dbg !4323
  store %struct.encoding* %29, %struct.encoding** %m_encoding, align 8, !dbg !4324
  store i32 0, i32* %retval, align 4, !dbg !4325
  br label %return, !dbg !4325

if.end26:                                         ; preds = %if.end14
  br label %if.end27, !dbg !4326

if.end27:                                         ; preds = %if.end26, %for.end
  %release28 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !4327
  %31 = load void (i8*)*, void (i8*)** %release28, align 8, !dbg !4327
  %cmp29 = icmp ne void (i8*)* %31, null, !dbg !4329
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !4330

if.then31:                                        ; preds = %if.end27
  %release32 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3, !dbg !4331
  %32 = load void (i8*)*, void (i8*)** %release32, align 8, !dbg !4331
  %data33 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1, !dbg !4332
  %33 = load i8*, i8** %data33, align 8, !dbg !4332
  call void %32(i8* %33), !dbg !4333
  br label %if.end34, !dbg !4333

if.end34:                                         ; preds = %if.then31, %if.end27
  br label %if.end35, !dbg !4334

if.end35:                                         ; preds = %if.end34, %entry
  store i32 18, i32* %retval, align 4, !dbg !4335
  br label %return, !dbg !4335

return:                                           ; preds = %if.end35, %if.then23, %if.end
  %34 = load i32, i32* %retval, align 4, !dbg !4336
  ret i32 %34, !dbg !4336
}

declare i32 @XmlSizeOfUnknownEncoding() #5

declare %struct.encoding* @XmlInitUnknownEncoding(i8*, i32*, i32 (i8*, i8*)*, i8*) #5

; Function Attrs: nounwind uwtable
define internal i32 @doProlog(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %s, i8* %end, i32 %tok, i8* %next, i8** %nextPtr, i8 zeroext %haveMore) #0 !dbg !876 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %tok.addr = alloca i32, align 4
  %next.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %dtd = alloca %struct.DTD*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %quant = alloca i32, align 4
  %role = alloca i32, align 4
  %handleDefault = alloca i8, align 1
  %result = alloca i32, align 4
  %pubId = alloca i8*, align 8
  %tem = alloca i8*, align 8
  %prefix = alloca i8*, align 8
  %attVal = alloca i8*, align 8
  %result266 = alloca i32, align 4
  %result372 = alloca i32, align 4
  %name577 = alloca i8*, align 8
  %tem651 = alloca i8*, align 8
  %systemId677 = alloca i8*, align 8
  %temp = alloca i8*, align 8
  %temp733 = alloca i32*, align 8
  %myindex = alloca i32, align 4
  %content = alloca %struct.XML_cp*, align 8
  %el = alloca %struct.ELEMENT_TYPE*, align 8
  %name933 = alloca i8*, align 8
  %nameLen = alloca i32, align 4
  %nxt = alloca i8*, align 8
  %myindex943 = alloca i32, align 4
  %model = alloca %struct.XML_cp*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !4337, metadata !1076), !dbg !4338
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !4339, metadata !1076), !dbg !4340
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !4341, metadata !1076), !dbg !4342
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !4343, metadata !1076), !dbg !4344
  store i32 %tok, i32* %tok.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tok.addr, metadata !4345, metadata !1076), !dbg !4346
  store i8* %next, i8** %next.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %next.addr, metadata !4347, metadata !1076), !dbg !4348
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !4349, metadata !1076), !dbg !4350
  store i8 %haveMore, i8* %haveMore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %haveMore.addr, metadata !4351, metadata !1076), !dbg !4352
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !4353, metadata !1076), !dbg !4354
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4355
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !4355
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !4355
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !4354
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !4356, metadata !1076), !dbg !4357
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !4358, metadata !1076), !dbg !4359
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !4360, metadata !1076), !dbg !4361
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4362
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4364
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !4364
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !4364
  %cmp = icmp eq %struct.encoding* %2, %4, !dbg !4365
  br i1 %cmp, label %if.then, label %if.else, !dbg !4366

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4367
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47, !dbg !4367
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !4369
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4370
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 48, !dbg !4370
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !4371
  br label %if.end, !dbg !4372

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4373
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50, !dbg !4373
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !4373
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0, !dbg !4375
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !4376
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4377
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50, !dbg !4377
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8, !dbg !4377
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 1, !dbg !4378
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !4379
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond, !dbg !4380

for.cond:                                         ; preds = %sw.epilog1073, %if.end
  call void @llvm.dbg.declare(metadata i32* %role, metadata !4381, metadata !1076), !dbg !4385
  call void @llvm.dbg.declare(metadata i8* %handleDefault, metadata !4386, metadata !1076), !dbg !4387
  store i8 1, i8* %handleDefault, align 1, !dbg !4387
  %11 = load i8*, i8** %s.addr, align 8, !dbg !4388
  %12 = load i8**, i8*** %eventPP, align 8, !dbg !4389
  store i8* %11, i8** %12, align 8, !dbg !4390
  %13 = load i8*, i8** %next.addr, align 8, !dbg !4391
  %14 = load i8**, i8*** %eventEndPP, align 8, !dbg !4392
  store i8* %13, i8** %14, align 8, !dbg !4393
  %15 = load i32, i32* %tok.addr, align 4, !dbg !4394
  %cmp2 = icmp sle i32 %15, 0, !dbg !4396
  br i1 %cmp2, label %if.then3, label %if.end13, !dbg !4397

if.then3:                                         ; preds = %for.cond
  %16 = load i8, i8* %haveMore.addr, align 1, !dbg !4398
  %conv = zext i8 %16 to i32, !dbg !4398
  %tobool = icmp ne i32 %conv, 0, !dbg !4398
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !4401

land.lhs.true:                                    ; preds = %if.then3
  %17 = load i32, i32* %tok.addr, align 4, !dbg !4402
  %cmp4 = icmp ne i32 %17, 0, !dbg !4404
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4405

if.then6:                                         ; preds = %land.lhs.true
  %18 = load i8*, i8** %s.addr, align 8, !dbg !4406
  %19 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !4408
  store i8* %18, i8** %19, align 8, !dbg !4409
  store i32 0, i32* %retval, align 4, !dbg !4410
  br label %return, !dbg !4410

if.end7:                                          ; preds = %land.lhs.true, %if.then3
  %20 = load i32, i32* %tok.addr, align 4, !dbg !4411
  switch i32 %20, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb8
    i32 -2, label %sw.bb9
    i32 -15, label %sw.bb10
    i32 -4, label %sw.bb11
  ], !dbg !4412

sw.bb:                                            ; preds = %if.end7
  %21 = load i8*, i8** %next.addr, align 8, !dbg !4413
  %22 = load i8**, i8*** %eventPP, align 8, !dbg !4415
  store i8* %21, i8** %22, align 8, !dbg !4416
  store i32 4, i32* %retval, align 4, !dbg !4417
  br label %return, !dbg !4417

sw.bb8:                                           ; preds = %if.end7
  store i32 5, i32* %retval, align 4, !dbg !4418
  br label %return, !dbg !4418

sw.bb9:                                           ; preds = %if.end7
  store i32 6, i32* %retval, align 4, !dbg !4419
  br label %return, !dbg !4419

sw.bb10:                                          ; preds = %if.end7
  %23 = load i32, i32* %tok.addr, align 4, !dbg !4420
  %sub = sub nsw i32 0, %23, !dbg !4421
  store i32 %sub, i32* %tok.addr, align 4, !dbg !4422
  br label %sw.epilog, !dbg !4423

sw.bb11:                                          ; preds = %if.end7
  store i32 3, i32* %retval, align 4, !dbg !4424
  br label %return, !dbg !4424

sw.default:                                       ; preds = %if.end7
  %24 = load i32, i32* %tok.addr, align 4, !dbg !4425
  %sub12 = sub nsw i32 0, %24, !dbg !4426
  store i32 %sub12, i32* %tok.addr, align 4, !dbg !4427
  %25 = load i8*, i8** %end.addr, align 8, !dbg !4428
  store i8* %25, i8** %next.addr, align 8, !dbg !4429
  br label %sw.epilog, !dbg !4430

sw.epilog:                                        ; preds = %sw.default, %sw.bb10
  br label %if.end13, !dbg !4431

if.end13:                                         ; preds = %sw.epilog, %for.cond
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4432
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 44, !dbg !4432
  %handler = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 0, !dbg !4432
  %27 = load i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)** %handler, align 8, !dbg !4432
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4432
  %m_prologState14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 44, !dbg !4432
  %29 = load i32, i32* %tok.addr, align 4, !dbg !4432
  %30 = load i8*, i8** %s.addr, align 8, !dbg !4432
  %31 = load i8*, i8** %next.addr, align 8, !dbg !4432
  %32 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4432
  %call = call i32 %27(%struct.prolog_state* %m_prologState14, i32 %29, i8* %30, i8* %31, %struct.encoding* %32), !dbg !4432
  store i32 %call, i32* %role, align 4, !dbg !4433
  %33 = load i32, i32* %role, align 4, !dbg !4434
  switch i32 %33, label %sw.epilog1061 [
    i32 1, label %sw.bb15
    i32 4, label %sw.bb22
    i32 7, label %sw.bb33
    i32 6, label %sw.bb44
    i32 14, label %sw.bb66
    i32 8, label %sw.bb97
    i32 2, label %sw.bb113
    i32 34, label %sw.bb115
    i32 22, label %sw.bb121
    i32 23, label %sw.bb127
    i32 24, label %sw.bb130
    i32 25, label %sw.bb133
    i32 26, label %sw.bb135
    i32 27, label %sw.bb137
    i32 28, label %sw.bb139
    i32 29, label %sw.bb141
    i32 30, label %sw.bb143
    i32 31, label %sw.bb152
    i32 32, label %sw.bb152
    i32 35, label %sw.bb181
    i32 36, label %sw.bb181
    i32 37, label %sw.bb262
    i32 38, label %sw.bb262
    i32 12, label %sw.bb368
    i32 5, label %sw.bb421
    i32 13, label %sw.bb456
    i32 15, label %sw.bb490
    i32 16, label %sw.bb515
    i32 9, label %sw.bb568
    i32 10, label %sw.bb625
    i32 18, label %sw.bb627
    i32 21, label %sw.bb642
    i32 19, label %sw.bb670
    i32 20, label %sw.bb697
    i32 -1, label %sw.bb711
    i32 44, label %sw.bb715
    i32 50, label %sw.bb779
    i32 49, label %sw.bb803
    i32 57, label %sw.bb856
    i32 40, label %sw.bb869
    i32 41, label %sw.bb882
    i32 42, label %sw.bb882
    i32 43, label %sw.bb908
    i32 51, label %sw.bb926
    i32 53, label %sw.bb927
    i32 52, label %sw.bb928
    i32 54, label %sw.bb929
    i32 45, label %sw.bb976
    i32 47, label %sw.bb977
    i32 46, label %sw.bb978
    i32 48, label %sw.bb979
    i32 55, label %sw.bb1015
    i32 56, label %sw.bb1020
    i32 0, label %sw.bb1025
    i32 3, label %sw.bb1028
    i32 11, label %sw.bb1033
    i32 17, label %sw.bb1042
    i32 33, label %sw.bb1047
    i32 39, label %sw.bb1056
  ], !dbg !4435

sw.bb15:                                          ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4436, metadata !1076), !dbg !4439
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4440
  %35 = load i8*, i8** %s.addr, align 8, !dbg !4441
  %36 = load i8*, i8** %next.addr, align 8, !dbg !4442
  %call16 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %34, i32 0, i8* %35, i8* %36), !dbg !4443
  store i32 %call16, i32* %result, align 4, !dbg !4439
  %37 = load i32, i32* %result, align 4, !dbg !4444
  %cmp17 = icmp ne i32 %37, 0, !dbg !4446
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4447

if.then19:                                        ; preds = %sw.bb15
  %38 = load i32, i32* %result, align 4, !dbg !4448
  store i32 %38, i32* %retval, align 4, !dbg !4449
  br label %return, !dbg !4449

if.end20:                                         ; preds = %sw.bb15
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4450
  %m_encoding21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 34, !dbg !4450
  %40 = load %struct.encoding*, %struct.encoding** %m_encoding21, align 8, !dbg !4450
  store %struct.encoding* %40, %struct.encoding** %enc.addr, align 8, !dbg !4451
  store i8 0, i8* %handleDefault, align 1, !dbg !4452
  br label %sw.epilog1061, !dbg !4453

sw.bb22:                                          ; preds = %if.end13
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4454
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 19, !dbg !4454
  %42 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8, !dbg !4454
  %tobool23 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %42, null, !dbg !4454
  br i1 %tobool23, label %if.then24, label %if.end32, !dbg !4456

if.then24:                                        ; preds = %sw.bb22
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4457
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 79, !dbg !4457
  %44 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4459
  %45 = load i8*, i8** %s.addr, align 8, !dbg !4460
  %46 = load i8*, i8** %next.addr, align 8, !dbg !4461
  %call25 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %44, i8* %45, i8* %46), !dbg !4462
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4463
  %m_doctypeName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 55, !dbg !4463
  store i8* %call25, i8** %m_doctypeName, align 8, !dbg !4464
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4465
  %m_doctypeName26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 55, !dbg !4465
  %49 = load i8*, i8** %m_doctypeName26, align 8, !dbg !4465
  %tobool27 = icmp ne i8* %49, null, !dbg !4465
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !4467

if.then28:                                        ; preds = %if.then24
  store i32 1, i32* %retval, align 4, !dbg !4468
  br label %return, !dbg !4468

if.end29:                                         ; preds = %if.then24
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4469
  %m_tempPool30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 79, !dbg !4469
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool30, i32 0, i32 3, !dbg !4469
  %51 = load i8*, i8** %ptr, align 8, !dbg !4469
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4469
  %m_tempPool31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 79, !dbg !4469
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool31, i32 0, i32 4, !dbg !4469
  store i8* %51, i8** %start, align 8, !dbg !4469
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4470
  %m_doctypePubid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 57, !dbg !4470
  store i8* null, i8** %m_doctypePubid, align 8, !dbg !4471
  store i8 0, i8* %handleDefault, align 1, !dbg !4472
  br label %if.end32, !dbg !4473

if.end32:                                         ; preds = %if.end29, %sw.bb22
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4474
  %m_doctypeSysid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 56, !dbg !4474
  store i8* null, i8** %m_doctypeSysid, align 8, !dbg !4475
  br label %sw.epilog1061, !dbg !4476

sw.bb33:                                          ; preds = %if.end13
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4477
  %m_startDoctypeDeclHandler34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 19, !dbg !4477
  %56 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler34, align 8, !dbg !4477
  %tobool35 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %56, null, !dbg !4477
  br i1 %tobool35, label %if.then36, label %if.end43, !dbg !4479

if.then36:                                        ; preds = %sw.bb33
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4480
  %m_startDoctypeDeclHandler37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 19, !dbg !4480
  %58 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler37, align 8, !dbg !4480
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4482
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 1, !dbg !4482
  %60 = load i8*, i8** %m_handlerArg, align 8, !dbg !4482
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4483
  %m_doctypeName38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 55, !dbg !4483
  %62 = load i8*, i8** %m_doctypeName38, align 8, !dbg !4483
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4484
  %m_doctypeSysid39 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 56, !dbg !4484
  %64 = load i8*, i8** %m_doctypeSysid39, align 8, !dbg !4484
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4485
  %m_doctypePubid40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 57, !dbg !4485
  %66 = load i8*, i8** %m_doctypePubid40, align 8, !dbg !4485
  call void %58(i8* %60, i8* %62, i8* %64, i8* %66, i32 1), !dbg !4480
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4486
  %m_doctypeName41 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 55, !dbg !4486
  store i8* null, i8** %m_doctypeName41, align 8, !dbg !4487
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4488
  %m_tempPool42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 79, !dbg !4488
  call void @poolClear(%struct.STRING_POOL* %m_tempPool42), !dbg !4489
  store i8 0, i8* %handleDefault, align 1, !dbg !4490
  br label %if.end43, !dbg !4491

if.end43:                                         ; preds = %if.then36, %sw.bb33
  br label %sw.epilog1061, !dbg !4492

sw.bb44:                                          ; preds = %if.end13
  %69 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4493
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %69, i32 0, i32 7, !dbg !4494
  store i8 1, i8* %hasParamEntityRefs, align 1, !dbg !4495
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4496
  %m_startDoctypeDeclHandler45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 19, !dbg !4496
  %71 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler45, align 8, !dbg !4496
  %tobool46 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %71, null, !dbg !4496
  br i1 %tobool46, label %if.then47, label %if.end65, !dbg !4498

if.then47:                                        ; preds = %sw.bb44
  call void @llvm.dbg.declare(metadata i8** %pubId, metadata !4499, metadata !1076), !dbg !4501
  %72 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4502
  %isPublicId = getelementptr inbounds %struct.encoding, %struct.encoding* %72, i32 0, i32 10, !dbg !4502
  %73 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId, align 8, !dbg !4502
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4502
  %75 = load i8*, i8** %s.addr, align 8, !dbg !4502
  %76 = load i8*, i8** %next.addr, align 8, !dbg !4502
  %77 = load i8**, i8*** %eventPP, align 8, !dbg !4502
  %call48 = call i32 %73(%struct.encoding* %74, i8* %75, i8* %76, i8** %77), !dbg !4502
  %tobool49 = icmp ne i32 %call48, 0, !dbg !4502
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !4504

if.then50:                                        ; preds = %if.then47
  store i32 32, i32* %retval, align 4, !dbg !4505
  br label %return, !dbg !4505

if.end51:                                         ; preds = %if.then47
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4506
  %m_tempPool52 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 79, !dbg !4506
  %79 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4507
  %80 = load i8*, i8** %s.addr, align 8, !dbg !4508
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4509
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %81, i32 0, i32 13, !dbg !4510
  %82 = load i32, i32* %minBytesPerChar, align 8, !dbg !4510
  %idx.ext = sext i32 %82 to i64, !dbg !4511
  %add.ptr = getelementptr inbounds i8, i8* %80, i64 %idx.ext, !dbg !4511
  %83 = load i8*, i8** %next.addr, align 8, !dbg !4512
  %84 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4513
  %minBytesPerChar53 = getelementptr inbounds %struct.encoding, %struct.encoding* %84, i32 0, i32 13, !dbg !4514
  %85 = load i32, i32* %minBytesPerChar53, align 8, !dbg !4514
  %idx.ext54 = sext i32 %85 to i64, !dbg !4515
  %idx.neg = sub i64 0, %idx.ext54, !dbg !4515
  %add.ptr55 = getelementptr inbounds i8, i8* %83, i64 %idx.neg, !dbg !4515
  %call56 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool52, %struct.encoding* %79, i8* %add.ptr, i8* %add.ptr55), !dbg !4516
  store i8* %call56, i8** %pubId, align 8, !dbg !4517
  %86 = load i8*, i8** %pubId, align 8, !dbg !4518
  %tobool57 = icmp ne i8* %86, null, !dbg !4518
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !4520

if.then58:                                        ; preds = %if.end51
  store i32 1, i32* %retval, align 4, !dbg !4521
  br label %return, !dbg !4521

if.end59:                                         ; preds = %if.end51
  %87 = load i8*, i8** %pubId, align 8, !dbg !4522
  call void @normalizePublicId(i8* %87), !dbg !4523
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4524
  %m_tempPool60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 79, !dbg !4524
  %ptr61 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool60, i32 0, i32 3, !dbg !4524
  %89 = load i8*, i8** %ptr61, align 8, !dbg !4524
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4524
  %m_tempPool62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 79, !dbg !4524
  %start63 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool62, i32 0, i32 4, !dbg !4524
  store i8* %89, i8** %start63, align 8, !dbg !4524
  %91 = load i8*, i8** %pubId, align 8, !dbg !4525
  %92 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4526
  %m_doctypePubid64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %92, i32 0, i32 57, !dbg !4526
  store i8* %91, i8** %m_doctypePubid64, align 8, !dbg !4527
  store i8 0, i8* %handleDefault, align 1, !dbg !4528
  br label %alreadyChecked, !dbg !4529

if.end65:                                         ; preds = %sw.bb44
  br label %sw.bb66, !dbg !4530

sw.bb66:                                          ; preds = %if.end13, %if.end65
  %93 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4532
  %isPublicId67 = getelementptr inbounds %struct.encoding, %struct.encoding* %93, i32 0, i32 10, !dbg !4532
  %94 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId67, align 8, !dbg !4532
  %95 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4532
  %96 = load i8*, i8** %s.addr, align 8, !dbg !4532
  %97 = load i8*, i8** %next.addr, align 8, !dbg !4532
  %98 = load i8**, i8*** %eventPP, align 8, !dbg !4532
  %call68 = call i32 %94(%struct.encoding* %95, i8* %96, i8* %97, i8** %98), !dbg !4532
  %tobool69 = icmp ne i32 %call68, 0, !dbg !4532
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !4534

if.then70:                                        ; preds = %sw.bb66
  store i32 32, i32* %retval, align 4, !dbg !4535
  br label %return, !dbg !4535

if.end71:                                         ; preds = %sw.bb66
  br label %alreadyChecked, !dbg !4536

alreadyChecked:                                   ; preds = %if.end71, %if.end59
  %99 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4538
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %99, i32 0, i32 6, !dbg !4540
  %100 = load i8, i8* %keepProcessing, align 8, !dbg !4540
  %conv72 = zext i8 %100 to i32, !dbg !4538
  %tobool73 = icmp ne i32 %conv72, 0, !dbg !4538
  br i1 %tobool73, label %land.lhs.true74, label %if.end96, !dbg !4541

land.lhs.true74:                                  ; preds = %alreadyChecked
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4542
  %m_declEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 54, !dbg !4542
  %102 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity, align 8, !dbg !4542
  %tobool75 = icmp ne %struct.ENTITY* %102, null, !dbg !4542
  br i1 %tobool75, label %if.then76, label %if.end96, !dbg !4544

if.then76:                                        ; preds = %land.lhs.true74
  call void @llvm.dbg.declare(metadata i8** %tem, metadata !4545, metadata !1076), !dbg !4547
  %103 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4548
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %103, i32 0, i32 4, !dbg !4549
  %104 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4550
  %105 = load i8*, i8** %s.addr, align 8, !dbg !4551
  %106 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4552
  %minBytesPerChar77 = getelementptr inbounds %struct.encoding, %struct.encoding* %106, i32 0, i32 13, !dbg !4553
  %107 = load i32, i32* %minBytesPerChar77, align 8, !dbg !4553
  %idx.ext78 = sext i32 %107 to i64, !dbg !4554
  %add.ptr79 = getelementptr inbounds i8, i8* %105, i64 %idx.ext78, !dbg !4554
  %108 = load i8*, i8** %next.addr, align 8, !dbg !4555
  %109 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4556
  %minBytesPerChar80 = getelementptr inbounds %struct.encoding, %struct.encoding* %109, i32 0, i32 13, !dbg !4557
  %110 = load i32, i32* %minBytesPerChar80, align 8, !dbg !4557
  %idx.ext81 = sext i32 %110 to i64, !dbg !4558
  %idx.neg82 = sub i64 0, %idx.ext81, !dbg !4558
  %add.ptr83 = getelementptr inbounds i8, i8* %108, i64 %idx.neg82, !dbg !4558
  %call84 = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %104, i8* %add.ptr79, i8* %add.ptr83), !dbg !4559
  store i8* %call84, i8** %tem, align 8, !dbg !4547
  %111 = load i8*, i8** %tem, align 8, !dbg !4560
  %tobool85 = icmp ne i8* %111, null, !dbg !4560
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !4562

if.then86:                                        ; preds = %if.then76
  store i32 1, i32* %retval, align 4, !dbg !4563
  br label %return, !dbg !4563

if.end87:                                         ; preds = %if.then76
  %112 = load i8*, i8** %tem, align 8, !dbg !4564
  call void @normalizePublicId(i8* %112), !dbg !4565
  %113 = load i8*, i8** %tem, align 8, !dbg !4566
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4567
  %m_declEntity88 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 54, !dbg !4567
  %115 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity88, align 8, !dbg !4567
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %115, i32 0, i32 6, !dbg !4568
  store i8* %113, i8** %publicId, align 8, !dbg !4569
  %116 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4570
  %pool89 = getelementptr inbounds %struct.DTD, %struct.DTD* %116, i32 0, i32 4, !dbg !4570
  %ptr90 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool89, i32 0, i32 3, !dbg !4570
  %117 = load i8*, i8** %ptr90, align 8, !dbg !4570
  %118 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4570
  %pool91 = getelementptr inbounds %struct.DTD, %struct.DTD* %118, i32 0, i32 4, !dbg !4570
  %start92 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool91, i32 0, i32 4, !dbg !4570
  store i8* %117, i8** %start92, align 8, !dbg !4570
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4571
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 32, !dbg !4571
  %120 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8, !dbg !4571
  %tobool93 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %120, null, !dbg !4571
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !4573

if.then94:                                        ; preds = %if.end87
  store i8 0, i8* %handleDefault, align 1, !dbg !4574
  br label %if.end95, !dbg !4575

if.end95:                                         ; preds = %if.then94, %if.end87
  br label %if.end96, !dbg !4576

if.end96:                                         ; preds = %if.end95, %land.lhs.true74, %alreadyChecked
  br label %sw.epilog1061, !dbg !4577

sw.bb97:                                          ; preds = %if.end13
  %121 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4578
  %m_doctypeName98 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %121, i32 0, i32 55, !dbg !4578
  %122 = load i8*, i8** %m_doctypeName98, align 8, !dbg !4578
  %tobool99 = icmp ne i8* %122, null, !dbg !4578
  br i1 %tobool99, label %if.then100, label %if.end107, !dbg !4580

if.then100:                                       ; preds = %sw.bb97
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4581
  %m_startDoctypeDeclHandler101 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 19, !dbg !4581
  %124 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler101, align 8, !dbg !4581
  %125 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4583
  %m_handlerArg102 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %125, i32 0, i32 1, !dbg !4583
  %126 = load i8*, i8** %m_handlerArg102, align 8, !dbg !4583
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4584
  %m_doctypeName103 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 55, !dbg !4584
  %128 = load i8*, i8** %m_doctypeName103, align 8, !dbg !4584
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4585
  %m_doctypeSysid104 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 56, !dbg !4585
  %130 = load i8*, i8** %m_doctypeSysid104, align 8, !dbg !4585
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4586
  %m_doctypePubid105 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 57, !dbg !4586
  %132 = load i8*, i8** %m_doctypePubid105, align 8, !dbg !4586
  call void %124(i8* %126, i8* %128, i8* %130, i8* %132, i32 0), !dbg !4581
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4587
  %m_tempPool106 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 79, !dbg !4587
  call void @poolClear(%struct.STRING_POOL* %m_tempPool106), !dbg !4588
  store i8 0, i8* %handleDefault, align 1, !dbg !4589
  br label %if.end107, !dbg !4590

if.end107:                                        ; preds = %if.then100, %sw.bb97
  %134 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4591
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %134, i32 0, i32 20, !dbg !4591
  %135 = load void (i8*)*, void (i8*)** %m_endDoctypeDeclHandler, align 8, !dbg !4591
  %tobool108 = icmp ne void (i8*)* %135, null, !dbg !4591
  br i1 %tobool108, label %if.then109, label %if.end112, !dbg !4593

if.then109:                                       ; preds = %if.end107
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4594
  %m_endDoctypeDeclHandler110 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 20, !dbg !4594
  %137 = load void (i8*)*, void (i8*)** %m_endDoctypeDeclHandler110, align 8, !dbg !4594
  %138 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4596
  %m_handlerArg111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %138, i32 0, i32 1, !dbg !4596
  %139 = load i8*, i8** %m_handlerArg111, align 8, !dbg !4596
  call void %137(i8* %139), !dbg !4594
  store i8 0, i8* %handleDefault, align 1, !dbg !4597
  br label %if.end112, !dbg !4598

if.end112:                                        ; preds = %if.then109, %if.end107
  br label %sw.epilog1061, !dbg !4599

sw.bb113:                                         ; preds = %if.end13
  %140 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4600
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %140, i32 0, i32 45, !dbg !4600
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !4601
  %141 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4602
  %142 = load i8*, i8** %s.addr, align 8, !dbg !4603
  %143 = load i8*, i8** %end.addr, align 8, !dbg !4604
  %144 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !4605
  %call114 = call i32 @contentProcessor(%struct.XML_ParserStruct* %141, i8* %142, i8* %143, i8** %144), !dbg !4606
  store i32 %call114, i32* %retval, align 4, !dbg !4607
  br label %return, !dbg !4607

sw.bb115:                                         ; preds = %if.end13
  %145 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4608
  %146 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4609
  %147 = load i8*, i8** %s.addr, align 8, !dbg !4610
  %148 = load i8*, i8** %next.addr, align 8, !dbg !4611
  %call116 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %145, %struct.encoding* %146, i8* %147, i8* %148), !dbg !4612
  %149 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4613
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %149, i32 0, i32 61, !dbg !4613
  store %struct.ELEMENT_TYPE* %call116, %struct.ELEMENT_TYPE** %m_declElementType, align 8, !dbg !4614
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4615
  %m_declElementType117 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %150, i32 0, i32 61, !dbg !4615
  %151 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType117, align 8, !dbg !4615
  %tobool118 = icmp ne %struct.ELEMENT_TYPE* %151, null, !dbg !4615
  br i1 %tobool118, label %if.end120, label %if.then119, !dbg !4617

if.then119:                                       ; preds = %sw.bb115
  store i32 1, i32* %retval, align 4, !dbg !4618
  br label %return, !dbg !4618

if.end120:                                        ; preds = %sw.bb115
  br label %checkAttListDeclHandler, !dbg !4619

sw.bb121:                                         ; preds = %if.end13
  %152 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4620
  %153 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4621
  %154 = load i8*, i8** %s.addr, align 8, !dbg !4622
  %155 = load i8*, i8** %next.addr, align 8, !dbg !4623
  %call122 = call %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %152, %struct.encoding* %153, i8* %154, i8* %155), !dbg !4624
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4625
  %m_declAttributeId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %156, i32 0, i32 62, !dbg !4625
  store %struct.attribute_id* %call122, %struct.attribute_id** %m_declAttributeId, align 8, !dbg !4626
  %157 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4627
  %m_declAttributeId123 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %157, i32 0, i32 62, !dbg !4627
  %158 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId123, align 8, !dbg !4627
  %tobool124 = icmp ne %struct.attribute_id* %158, null, !dbg !4627
  br i1 %tobool124, label %if.end126, label %if.then125, !dbg !4629

if.then125:                                       ; preds = %sw.bb121
  store i32 1, i32* %retval, align 4, !dbg !4630
  br label %return, !dbg !4630

if.end126:                                        ; preds = %sw.bb121
  %159 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4631
  %m_declAttributeIsCdata = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %159, i32 0, i32 63, !dbg !4631
  store i8 0, i8* %m_declAttributeIsCdata, align 8, !dbg !4632
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4633
  %m_declAttributeType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %160, i32 0, i32 58, !dbg !4633
  store i8* null, i8** %m_declAttributeType, align 8, !dbg !4634
  %161 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4635
  %m_declAttributeIsId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %161, i32 0, i32 64, !dbg !4635
  store i8 0, i8* %m_declAttributeIsId, align 1, !dbg !4636
  br label %checkAttListDeclHandler, !dbg !4637

sw.bb127:                                         ; preds = %if.end13
  %162 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4638
  %m_declAttributeIsCdata128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %162, i32 0, i32 63, !dbg !4638
  store i8 1, i8* %m_declAttributeIsCdata128, align 8, !dbg !4639
  %163 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4640
  %m_declAttributeType129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %163, i32 0, i32 58, !dbg !4640
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @doProlog.atypeCDATA, i32 0, i32 0), i8** %m_declAttributeType129, align 8, !dbg !4641
  br label %checkAttListDeclHandler, !dbg !4642

sw.bb130:                                         ; preds = %if.end13
  %164 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4643
  %m_declAttributeIsId131 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %164, i32 0, i32 64, !dbg !4643
  store i8 1, i8* %m_declAttributeIsId131, align 1, !dbg !4644
  %165 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4645
  %m_declAttributeType132 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %165, i32 0, i32 58, !dbg !4645
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @doProlog.atypeID, i32 0, i32 0), i8** %m_declAttributeType132, align 8, !dbg !4646
  br label %checkAttListDeclHandler, !dbg !4647

sw.bb133:                                         ; preds = %if.end13
  %166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4648
  %m_declAttributeType134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %166, i32 0, i32 58, !dbg !4648
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @doProlog.atypeIDREF, i32 0, i32 0), i8** %m_declAttributeType134, align 8, !dbg !4649
  br label %checkAttListDeclHandler, !dbg !4650

sw.bb135:                                         ; preds = %if.end13
  %167 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4651
  %m_declAttributeType136 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %167, i32 0, i32 58, !dbg !4651
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @doProlog.atypeIDREFS, i32 0, i32 0), i8** %m_declAttributeType136, align 8, !dbg !4652
  br label %checkAttListDeclHandler, !dbg !4653

sw.bb137:                                         ; preds = %if.end13
  %168 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4654
  %m_declAttributeType138 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %168, i32 0, i32 58, !dbg !4654
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @doProlog.atypeENTITY, i32 0, i32 0), i8** %m_declAttributeType138, align 8, !dbg !4655
  br label %checkAttListDeclHandler, !dbg !4656

sw.bb139:                                         ; preds = %if.end13
  %169 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4657
  %m_declAttributeType140 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %169, i32 0, i32 58, !dbg !4657
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @doProlog.atypeENTITIES, i32 0, i32 0), i8** %m_declAttributeType140, align 8, !dbg !4658
  br label %checkAttListDeclHandler, !dbg !4659

sw.bb141:                                         ; preds = %if.end13
  %170 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4660
  %m_declAttributeType142 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %170, i32 0, i32 58, !dbg !4660
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @doProlog.atypeNMTOKEN, i32 0, i32 0), i8** %m_declAttributeType142, align 8, !dbg !4661
  br label %checkAttListDeclHandler, !dbg !4662

sw.bb143:                                         ; preds = %if.end13
  %171 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4663
  %m_declAttributeType144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %171, i32 0, i32 58, !dbg !4663
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @doProlog.atypeNMTOKENS, i32 0, i32 0), i8** %m_declAttributeType144, align 8, !dbg !4664
  br label %checkAttListDeclHandler, !dbg !4663

checkAttListDeclHandler:                          ; preds = %sw.bb143, %sw.bb141, %sw.bb139, %sw.bb137, %sw.bb135, %sw.bb133, %sw.bb130, %sw.bb127, %if.end126, %if.end120
  %172 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4665
  %keepProcessing145 = getelementptr inbounds %struct.DTD, %struct.DTD* %172, i32 0, i32 6, !dbg !4667
  %173 = load i8, i8* %keepProcessing145, align 8, !dbg !4667
  %conv146 = zext i8 %173 to i32, !dbg !4665
  %tobool147 = icmp ne i32 %conv146, 0, !dbg !4665
  br i1 %tobool147, label %land.lhs.true148, label %if.end151, !dbg !4668

land.lhs.true148:                                 ; preds = %checkAttListDeclHandler
  %174 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4669
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %174, i32 0, i32 31, !dbg !4669
  %175 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8, !dbg !4669
  %tobool149 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %175, null, !dbg !4669
  br i1 %tobool149, label %if.then150, label %if.end151, !dbg !4671

if.then150:                                       ; preds = %land.lhs.true148
  store i8 0, i8* %handleDefault, align 1, !dbg !4672
  br label %if.end151, !dbg !4673

if.end151:                                        ; preds = %if.then150, %land.lhs.true148, %checkAttListDeclHandler
  br label %sw.epilog1061, !dbg !4674

sw.bb152:                                         ; preds = %if.end13, %if.end13
  %176 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4675
  %keepProcessing153 = getelementptr inbounds %struct.DTD, %struct.DTD* %176, i32 0, i32 6, !dbg !4677
  %177 = load i8, i8* %keepProcessing153, align 8, !dbg !4677
  %conv154 = zext i8 %177 to i32, !dbg !4675
  %tobool155 = icmp ne i32 %conv154, 0, !dbg !4675
  br i1 %tobool155, label %land.lhs.true156, label %if.end180, !dbg !4678

land.lhs.true156:                                 ; preds = %sw.bb152
  %178 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4679
  %m_attlistDeclHandler157 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %178, i32 0, i32 31, !dbg !4679
  %179 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler157, align 8, !dbg !4679
  %tobool158 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %179, null, !dbg !4679
  br i1 %tobool158, label %if.then159, label %if.end180, !dbg !4681

if.then159:                                       ; preds = %land.lhs.true156
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !4682, metadata !1076), !dbg !4684
  %180 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4685
  %m_declAttributeType160 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %180, i32 0, i32 58, !dbg !4685
  %181 = load i8*, i8** %m_declAttributeType160, align 8, !dbg !4685
  %tobool161 = icmp ne i8* %181, null, !dbg !4685
  br i1 %tobool161, label %if.then162, label %if.else163, !dbg !4687

if.then162:                                       ; preds = %if.then159
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.enumValueSep, i32 0, i32 0), i8** %prefix, align 8, !dbg !4688
  br label %if.end166, !dbg !4690

if.else163:                                       ; preds = %if.then159
  %182 = load i32, i32* %role, align 4, !dbg !4691
  %cmp164 = icmp eq i32 %182, 32, !dbg !4693
  %cond = select i1 %cmp164, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @doProlog.notationPrefix, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.enumValueStart, i32 0, i32 0), !dbg !4691
  store i8* %cond, i8** %prefix, align 8, !dbg !4694
  br label %if.end166

if.end166:                                        ; preds = %if.else163, %if.then162
  %183 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4695
  %m_tempPool167 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %183, i32 0, i32 79, !dbg !4695
  %184 = load i8*, i8** %prefix, align 8, !dbg !4697
  %call168 = call i8* @poolAppendString(%struct.STRING_POOL* %m_tempPool167, i8* %184), !dbg !4698
  %tobool169 = icmp ne i8* %call168, null, !dbg !4698
  br i1 %tobool169, label %if.end171, label %if.then170, !dbg !4699

if.then170:                                       ; preds = %if.end166
  store i32 1, i32* %retval, align 4, !dbg !4700
  br label %return, !dbg !4700

if.end171:                                        ; preds = %if.end166
  %185 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4701
  %m_tempPool172 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %185, i32 0, i32 79, !dbg !4701
  %186 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4703
  %187 = load i8*, i8** %s.addr, align 8, !dbg !4704
  %188 = load i8*, i8** %next.addr, align 8, !dbg !4705
  %call173 = call i8* @poolAppend(%struct.STRING_POOL* %m_tempPool172, %struct.encoding* %186, i8* %187, i8* %188), !dbg !4706
  %tobool174 = icmp ne i8* %call173, null, !dbg !4706
  br i1 %tobool174, label %if.end176, label %if.then175, !dbg !4707

if.then175:                                       ; preds = %if.end171
  store i32 1, i32* %retval, align 4, !dbg !4708
  br label %return, !dbg !4708

if.end176:                                        ; preds = %if.end171
  %189 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4709
  %m_tempPool177 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %189, i32 0, i32 79, !dbg !4709
  %start178 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool177, i32 0, i32 4, !dbg !4710
  %190 = load i8*, i8** %start178, align 8, !dbg !4710
  %191 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4711
  %m_declAttributeType179 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %191, i32 0, i32 58, !dbg !4711
  store i8* %190, i8** %m_declAttributeType179, align 8, !dbg !4712
  store i8 0, i8* %handleDefault, align 1, !dbg !4713
  br label %if.end180, !dbg !4714

if.end180:                                        ; preds = %if.end176, %land.lhs.true156, %sw.bb152
  br label %sw.epilog1061, !dbg !4715

sw.bb181:                                         ; preds = %if.end13, %if.end13
  %192 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4716
  %keepProcessing182 = getelementptr inbounds %struct.DTD, %struct.DTD* %192, i32 0, i32 6, !dbg !4718
  %193 = load i8, i8* %keepProcessing182, align 8, !dbg !4718
  %tobool183 = icmp ne i8 %193, 0, !dbg !4716
  br i1 %tobool183, label %if.then184, label %if.end261, !dbg !4719

if.then184:                                       ; preds = %sw.bb181
  %194 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4720
  %m_declElementType185 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %194, i32 0, i32 61, !dbg !4720
  %195 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType185, align 8, !dbg !4720
  %196 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4723
  %m_declAttributeId186 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %196, i32 0, i32 62, !dbg !4723
  %197 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId186, align 8, !dbg !4723
  %198 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4724
  %m_declAttributeIsCdata187 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %198, i32 0, i32 63, !dbg !4724
  %199 = load i8, i8* %m_declAttributeIsCdata187, align 8, !dbg !4724
  %200 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4725
  %m_declAttributeIsId188 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %200, i32 0, i32 64, !dbg !4725
  %201 = load i8, i8* %m_declAttributeIsId188, align 1, !dbg !4725
  %202 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4726
  %call189 = call i32 @defineAttribute(%struct.ELEMENT_TYPE* %195, %struct.attribute_id* %197, i8 zeroext %199, i8 zeroext %201, i8* null, %struct.XML_ParserStruct* %202), !dbg !4727
  %tobool190 = icmp ne i32 %call189, 0, !dbg !4727
  br i1 %tobool190, label %if.end192, label %if.then191, !dbg !4728

if.then191:                                       ; preds = %if.then184
  store i32 1, i32* %retval, align 4, !dbg !4729
  br label %return, !dbg !4729

if.end192:                                        ; preds = %if.then184
  %203 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4730
  %m_attlistDeclHandler193 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %203, i32 0, i32 31, !dbg !4730
  %204 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler193, align 8, !dbg !4730
  %tobool194 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %204, null, !dbg !4730
  br i1 %tobool194, label %land.lhs.true195, label %if.end260, !dbg !4732

land.lhs.true195:                                 ; preds = %if.end192
  %205 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4733
  %m_declAttributeType196 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %205, i32 0, i32 58, !dbg !4733
  %206 = load i8*, i8** %m_declAttributeType196, align 8, !dbg !4733
  %tobool197 = icmp ne i8* %206, null, !dbg !4733
  br i1 %tobool197, label %if.then198, label %if.end260, !dbg !4735

if.then198:                                       ; preds = %land.lhs.true195
  %207 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4736
  %m_declAttributeType199 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %207, i32 0, i32 58, !dbg !4736
  %208 = load i8*, i8** %m_declAttributeType199, align 8, !dbg !4736
  %209 = load i8, i8* %208, align 1, !dbg !4739
  %conv200 = sext i8 %209 to i32, !dbg !4739
  %cmp201 = icmp eq i32 %conv200, 40, !dbg !4740
  br i1 %cmp201, label %if.then212, label %lor.lhs.false, !dbg !4741

lor.lhs.false:                                    ; preds = %if.then198
  %210 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4742
  %m_declAttributeType203 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %210, i32 0, i32 58, !dbg !4742
  %211 = load i8*, i8** %m_declAttributeType203, align 8, !dbg !4742
  %212 = load i8, i8* %211, align 1, !dbg !4744
  %conv204 = sext i8 %212 to i32, !dbg !4744
  %cmp205 = icmp eq i32 %conv204, 78, !dbg !4745
  br i1 %cmp205, label %land.lhs.true207, label %if.end250, !dbg !4746

land.lhs.true207:                                 ; preds = %lor.lhs.false
  %213 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4747
  %m_declAttributeType208 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %213, i32 0, i32 58, !dbg !4747
  %214 = load i8*, i8** %m_declAttributeType208, align 8, !dbg !4747
  %arrayidx = getelementptr inbounds i8, i8* %214, i64 1, !dbg !4747
  %215 = load i8, i8* %arrayidx, align 1, !dbg !4747
  %conv209 = sext i8 %215 to i32, !dbg !4747
  %cmp210 = icmp eq i32 %conv209, 79, !dbg !4748
  br i1 %cmp210, label %if.then212, label %if.end250, !dbg !4749

if.then212:                                       ; preds = %land.lhs.true207, %if.then198
  %216 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4751
  %m_tempPool213 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %216, i32 0, i32 79, !dbg !4751
  %ptr214 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool213, i32 0, i32 3, !dbg !4751
  %217 = load i8*, i8** %ptr214, align 8, !dbg !4751
  %218 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4751
  %m_tempPool215 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %218, i32 0, i32 79, !dbg !4751
  %end216 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool215, i32 0, i32 2, !dbg !4751
  %219 = load i8*, i8** %end216, align 8, !dbg !4751
  %cmp217 = icmp eq i8* %217, %219, !dbg !4751
  br i1 %cmp217, label %land.lhs.true219, label %cond.false, !dbg !4751

land.lhs.true219:                                 ; preds = %if.then212
  %220 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4754
  %m_tempPool220 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %220, i32 0, i32 79, !dbg !4754
  %call221 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool220), !dbg !4754
  %tobool222 = icmp ne i8 %call221, 0, !dbg !4754
  br i1 %tobool222, label %cond.false, label %cond.true, !dbg !4756

cond.true:                                        ; preds = %land.lhs.true219
  br i1 false, label %lor.lhs.false225, label %if.then241, !dbg !4757

cond.false:                                       ; preds = %land.lhs.true219, %if.then212
  %221 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4759
  %m_tempPool223 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %221, i32 0, i32 79, !dbg !4759
  %ptr224 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool223, i32 0, i32 3, !dbg !4759
  %222 = load i8*, i8** %ptr224, align 8, !dbg !4759
  %incdec.ptr = getelementptr inbounds i8, i8* %222, i32 1, !dbg !4759
  store i8* %incdec.ptr, i8** %ptr224, align 8, !dbg !4759
  store i8 41, i8* %222, align 1, !dbg !4759
  br i1 true, label %lor.lhs.false225, label %if.then241, !dbg !4761

lor.lhs.false225:                                 ; preds = %cond.false, %cond.true
  %223 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4762
  %m_tempPool226 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %223, i32 0, i32 79, !dbg !4762
  %ptr227 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool226, i32 0, i32 3, !dbg !4762
  %224 = load i8*, i8** %ptr227, align 8, !dbg !4762
  %225 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4762
  %m_tempPool228 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %225, i32 0, i32 79, !dbg !4762
  %end229 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool228, i32 0, i32 2, !dbg !4762
  %226 = load i8*, i8** %end229, align 8, !dbg !4762
  %cmp230 = icmp eq i8* %224, %226, !dbg !4762
  br i1 %cmp230, label %land.lhs.true232, label %cond.false237, !dbg !4762

land.lhs.true232:                                 ; preds = %lor.lhs.false225
  %227 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4763
  %m_tempPool233 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %227, i32 0, i32 79, !dbg !4763
  %call234 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool233), !dbg !4763
  %tobool235 = icmp ne i8 %call234, 0, !dbg !4763
  br i1 %tobool235, label %cond.false237, label %cond.true236, !dbg !4764

cond.true236:                                     ; preds = %land.lhs.true232
  br i1 false, label %if.end242, label %if.then241, !dbg !4766

cond.false237:                                    ; preds = %land.lhs.true232, %lor.lhs.false225
  %228 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4768
  %m_tempPool238 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %228, i32 0, i32 79, !dbg !4768
  %ptr239 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool238, i32 0, i32 3, !dbg !4768
  %229 = load i8*, i8** %ptr239, align 8, !dbg !4768
  %incdec.ptr240 = getelementptr inbounds i8, i8* %229, i32 1, !dbg !4768
  store i8* %incdec.ptr240, i8** %ptr239, align 8, !dbg !4768
  store i8 0, i8* %229, align 1, !dbg !4768
  br i1 true, label %if.end242, label %if.then241, !dbg !4770

if.then241:                                       ; preds = %cond.false237, %cond.true236, %cond.false, %cond.true
  store i32 1, i32* %retval, align 4, !dbg !4772
  br label %return, !dbg !4772

if.end242:                                        ; preds = %cond.false237, %cond.true236
  %230 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4773
  %m_tempPool243 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %230, i32 0, i32 79, !dbg !4773
  %start244 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool243, i32 0, i32 4, !dbg !4774
  %231 = load i8*, i8** %start244, align 8, !dbg !4774
  %232 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4775
  %m_declAttributeType245 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %232, i32 0, i32 58, !dbg !4775
  store i8* %231, i8** %m_declAttributeType245, align 8, !dbg !4776
  %233 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4777
  %m_tempPool246 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %233, i32 0, i32 79, !dbg !4777
  %ptr247 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool246, i32 0, i32 3, !dbg !4777
  %234 = load i8*, i8** %ptr247, align 8, !dbg !4777
  %235 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4777
  %m_tempPool248 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %235, i32 0, i32 79, !dbg !4777
  %start249 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool248, i32 0, i32 4, !dbg !4777
  store i8* %234, i8** %start249, align 8, !dbg !4777
  br label %if.end250, !dbg !4778

if.end250:                                        ; preds = %if.end242, %land.lhs.true207, %lor.lhs.false
  %236 = load i8*, i8** %s.addr, align 8, !dbg !4779
  %237 = load i8**, i8*** %eventEndPP, align 8, !dbg !4780
  store i8* %236, i8** %237, align 8, !dbg !4781
  %238 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4782
  %m_attlistDeclHandler251 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %238, i32 0, i32 31, !dbg !4782
  %239 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler251, align 8, !dbg !4782
  %240 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4783
  %m_handlerArg252 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %240, i32 0, i32 1, !dbg !4783
  %241 = load i8*, i8** %m_handlerArg252, align 8, !dbg !4783
  %242 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4784
  %m_declElementType253 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %242, i32 0, i32 61, !dbg !4784
  %243 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType253, align 8, !dbg !4784
  %name = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %243, i32 0, i32 0, !dbg !4785
  %244 = load i8*, i8** %name, align 8, !dbg !4785
  %245 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4786
  %m_declAttributeId254 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %245, i32 0, i32 62, !dbg !4786
  %246 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId254, align 8, !dbg !4786
  %name255 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %246, i32 0, i32 0, !dbg !4787
  %247 = load i8*, i8** %name255, align 8, !dbg !4787
  %248 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4788
  %m_declAttributeType256 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %248, i32 0, i32 58, !dbg !4788
  %249 = load i8*, i8** %m_declAttributeType256, align 8, !dbg !4788
  %250 = load i32, i32* %role, align 4, !dbg !4789
  %cmp257 = icmp eq i32 %250, 36, !dbg !4790
  %conv258 = zext i1 %cmp257 to i32, !dbg !4790
  call void %239(i8* %241, i8* %244, i8* %247, i8* %249, i8* null, i32 %conv258), !dbg !4782
  %251 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4791
  %m_tempPool259 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %251, i32 0, i32 79, !dbg !4791
  call void @poolClear(%struct.STRING_POOL* %m_tempPool259), !dbg !4792
  store i8 0, i8* %handleDefault, align 1, !dbg !4793
  br label %if.end260, !dbg !4794

if.end260:                                        ; preds = %if.end250, %land.lhs.true195, %if.end192
  br label %if.end261, !dbg !4795

if.end261:                                        ; preds = %if.end260, %sw.bb181
  br label %sw.epilog1061, !dbg !4796

sw.bb262:                                         ; preds = %if.end13, %if.end13
  %252 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4797
  %keepProcessing263 = getelementptr inbounds %struct.DTD, %struct.DTD* %252, i32 0, i32 6, !dbg !4799
  %253 = load i8, i8* %keepProcessing263, align 8, !dbg !4799
  %tobool264 = icmp ne i8 %253, 0, !dbg !4797
  br i1 %tobool264, label %if.then265, label %if.end367, !dbg !4800

if.then265:                                       ; preds = %sw.bb262
  call void @llvm.dbg.declare(metadata i8** %attVal, metadata !4801, metadata !1076), !dbg !4803
  call void @llvm.dbg.declare(metadata i32* %result266, metadata !4804, metadata !1076), !dbg !4805
  %254 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4806
  %255 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4807
  %256 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4808
  %m_declAttributeIsCdata267 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %256, i32 0, i32 63, !dbg !4808
  %257 = load i8, i8* %m_declAttributeIsCdata267, align 8, !dbg !4808
  %258 = load i8*, i8** %s.addr, align 8, !dbg !4809
  %259 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4810
  %minBytesPerChar268 = getelementptr inbounds %struct.encoding, %struct.encoding* %259, i32 0, i32 13, !dbg !4811
  %260 = load i32, i32* %minBytesPerChar268, align 8, !dbg !4811
  %idx.ext269 = sext i32 %260 to i64, !dbg !4812
  %add.ptr270 = getelementptr inbounds i8, i8* %258, i64 %idx.ext269, !dbg !4812
  %261 = load i8*, i8** %next.addr, align 8, !dbg !4813
  %262 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4814
  %minBytesPerChar271 = getelementptr inbounds %struct.encoding, %struct.encoding* %262, i32 0, i32 13, !dbg !4815
  %263 = load i32, i32* %minBytesPerChar271, align 8, !dbg !4815
  %idx.ext272 = sext i32 %263 to i64, !dbg !4816
  %idx.neg273 = sub i64 0, %idx.ext272, !dbg !4816
  %add.ptr274 = getelementptr inbounds i8, i8* %261, i64 %idx.neg273, !dbg !4816
  %264 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4817
  %pool275 = getelementptr inbounds %struct.DTD, %struct.DTD* %264, i32 0, i32 4, !dbg !4818
  %call276 = call i32 @storeAttributeValue(%struct.XML_ParserStruct* %254, %struct.encoding* %255, i8 zeroext %257, i8* %add.ptr270, i8* %add.ptr274, %struct.STRING_POOL* %pool275), !dbg !4819
  store i32 %call276, i32* %result266, align 4, !dbg !4805
  %265 = load i32, i32* %result266, align 4, !dbg !4820
  %tobool277 = icmp ne i32 %265, 0, !dbg !4820
  br i1 %tobool277, label %if.then278, label %if.end279, !dbg !4822

if.then278:                                       ; preds = %if.then265
  %266 = load i32, i32* %result266, align 4, !dbg !4823
  store i32 %266, i32* %retval, align 4, !dbg !4824
  br label %return, !dbg !4824

if.end279:                                        ; preds = %if.then265
  %267 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4825
  %pool280 = getelementptr inbounds %struct.DTD, %struct.DTD* %267, i32 0, i32 4, !dbg !4825
  %start281 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool280, i32 0, i32 4, !dbg !4825
  %268 = load i8*, i8** %start281, align 8, !dbg !4825
  store i8* %268, i8** %attVal, align 8, !dbg !4826
  %269 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4827
  %pool282 = getelementptr inbounds %struct.DTD, %struct.DTD* %269, i32 0, i32 4, !dbg !4827
  %ptr283 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool282, i32 0, i32 3, !dbg !4827
  %270 = load i8*, i8** %ptr283, align 8, !dbg !4827
  %271 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4827
  %pool284 = getelementptr inbounds %struct.DTD, %struct.DTD* %271, i32 0, i32 4, !dbg !4827
  %start285 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool284, i32 0, i32 4, !dbg !4827
  store i8* %270, i8** %start285, align 8, !dbg !4827
  %272 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4828
  %m_declElementType286 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %272, i32 0, i32 61, !dbg !4828
  %273 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType286, align 8, !dbg !4828
  %274 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4830
  %m_declAttributeId287 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %274, i32 0, i32 62, !dbg !4830
  %275 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId287, align 8, !dbg !4830
  %276 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4831
  %m_declAttributeIsCdata288 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %276, i32 0, i32 63, !dbg !4831
  %277 = load i8, i8* %m_declAttributeIsCdata288, align 8, !dbg !4831
  %278 = load i8*, i8** %attVal, align 8, !dbg !4832
  %279 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4833
  %call289 = call i32 @defineAttribute(%struct.ELEMENT_TYPE* %273, %struct.attribute_id* %275, i8 zeroext %277, i8 zeroext 0, i8* %278, %struct.XML_ParserStruct* %279), !dbg !4834
  %tobool290 = icmp ne i32 %call289, 0, !dbg !4834
  br i1 %tobool290, label %if.end292, label %if.then291, !dbg !4835

if.then291:                                       ; preds = %if.end279
  store i32 1, i32* %retval, align 4, !dbg !4836
  br label %return, !dbg !4836

if.end292:                                        ; preds = %if.end279
  %280 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4837
  %m_attlistDeclHandler293 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %280, i32 0, i32 31, !dbg !4837
  %281 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler293, align 8, !dbg !4837
  %tobool294 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %281, null, !dbg !4837
  br i1 %tobool294, label %land.lhs.true295, label %if.end366, !dbg !4839

land.lhs.true295:                                 ; preds = %if.end292
  %282 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4840
  %m_declAttributeType296 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %282, i32 0, i32 58, !dbg !4840
  %283 = load i8*, i8** %m_declAttributeType296, align 8, !dbg !4840
  %tobool297 = icmp ne i8* %283, null, !dbg !4840
  br i1 %tobool297, label %if.then298, label %if.end366, !dbg !4842

if.then298:                                       ; preds = %land.lhs.true295
  %284 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4843
  %m_declAttributeType299 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %284, i32 0, i32 58, !dbg !4843
  %285 = load i8*, i8** %m_declAttributeType299, align 8, !dbg !4843
  %286 = load i8, i8* %285, align 1, !dbg !4846
  %conv300 = sext i8 %286 to i32, !dbg !4846
  %cmp301 = icmp eq i32 %conv300, 40, !dbg !4847
  br i1 %cmp301, label %if.then314, label %lor.lhs.false303, !dbg !4848

lor.lhs.false303:                                 ; preds = %if.then298
  %287 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4849
  %m_declAttributeType304 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %287, i32 0, i32 58, !dbg !4849
  %288 = load i8*, i8** %m_declAttributeType304, align 8, !dbg !4849
  %289 = load i8, i8* %288, align 1, !dbg !4851
  %conv305 = sext i8 %289 to i32, !dbg !4851
  %cmp306 = icmp eq i32 %conv305, 78, !dbg !4852
  br i1 %cmp306, label %land.lhs.true308, label %if.end355, !dbg !4853

land.lhs.true308:                                 ; preds = %lor.lhs.false303
  %290 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4854
  %m_declAttributeType309 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %290, i32 0, i32 58, !dbg !4854
  %291 = load i8*, i8** %m_declAttributeType309, align 8, !dbg !4854
  %arrayidx310 = getelementptr inbounds i8, i8* %291, i64 1, !dbg !4854
  %292 = load i8, i8* %arrayidx310, align 1, !dbg !4854
  %conv311 = sext i8 %292 to i32, !dbg !4854
  %cmp312 = icmp eq i32 %conv311, 79, !dbg !4855
  br i1 %cmp312, label %if.then314, label %if.end355, !dbg !4856

if.then314:                                       ; preds = %land.lhs.true308, %if.then298
  %293 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4858
  %m_tempPool315 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %293, i32 0, i32 79, !dbg !4858
  %ptr316 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool315, i32 0, i32 3, !dbg !4858
  %294 = load i8*, i8** %ptr316, align 8, !dbg !4858
  %295 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4858
  %m_tempPool317 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %295, i32 0, i32 79, !dbg !4858
  %end318 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool317, i32 0, i32 2, !dbg !4858
  %296 = load i8*, i8** %end318, align 8, !dbg !4858
  %cmp319 = icmp eq i8* %294, %296, !dbg !4858
  br i1 %cmp319, label %land.lhs.true321, label %cond.false326, !dbg !4858

land.lhs.true321:                                 ; preds = %if.then314
  %297 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4861
  %m_tempPool322 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %297, i32 0, i32 79, !dbg !4861
  %call323 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool322), !dbg !4861
  %tobool324 = icmp ne i8 %call323, 0, !dbg !4861
  br i1 %tobool324, label %cond.false326, label %cond.true325, !dbg !4863

cond.true325:                                     ; preds = %land.lhs.true321
  br i1 false, label %lor.lhs.false330, label %if.then346, !dbg !4864

cond.false326:                                    ; preds = %land.lhs.true321, %if.then314
  %298 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4866
  %m_tempPool327 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %298, i32 0, i32 79, !dbg !4866
  %ptr328 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool327, i32 0, i32 3, !dbg !4866
  %299 = load i8*, i8** %ptr328, align 8, !dbg !4866
  %incdec.ptr329 = getelementptr inbounds i8, i8* %299, i32 1, !dbg !4866
  store i8* %incdec.ptr329, i8** %ptr328, align 8, !dbg !4866
  store i8 41, i8* %299, align 1, !dbg !4866
  br i1 true, label %lor.lhs.false330, label %if.then346, !dbg !4868

lor.lhs.false330:                                 ; preds = %cond.false326, %cond.true325
  %300 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4869
  %m_tempPool331 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %300, i32 0, i32 79, !dbg !4869
  %ptr332 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool331, i32 0, i32 3, !dbg !4869
  %301 = load i8*, i8** %ptr332, align 8, !dbg !4869
  %302 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4869
  %m_tempPool333 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %302, i32 0, i32 79, !dbg !4869
  %end334 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool333, i32 0, i32 2, !dbg !4869
  %303 = load i8*, i8** %end334, align 8, !dbg !4869
  %cmp335 = icmp eq i8* %301, %303, !dbg !4869
  br i1 %cmp335, label %land.lhs.true337, label %cond.false342, !dbg !4869

land.lhs.true337:                                 ; preds = %lor.lhs.false330
  %304 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4870
  %m_tempPool338 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %304, i32 0, i32 79, !dbg !4870
  %call339 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool338), !dbg !4870
  %tobool340 = icmp ne i8 %call339, 0, !dbg !4870
  br i1 %tobool340, label %cond.false342, label %cond.true341, !dbg !4871

cond.true341:                                     ; preds = %land.lhs.true337
  br i1 false, label %if.end347, label %if.then346, !dbg !4873

cond.false342:                                    ; preds = %land.lhs.true337, %lor.lhs.false330
  %305 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4875
  %m_tempPool343 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %305, i32 0, i32 79, !dbg !4875
  %ptr344 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool343, i32 0, i32 3, !dbg !4875
  %306 = load i8*, i8** %ptr344, align 8, !dbg !4875
  %incdec.ptr345 = getelementptr inbounds i8, i8* %306, i32 1, !dbg !4875
  store i8* %incdec.ptr345, i8** %ptr344, align 8, !dbg !4875
  store i8 0, i8* %306, align 1, !dbg !4875
  br i1 true, label %if.end347, label %if.then346, !dbg !4877

if.then346:                                       ; preds = %cond.false342, %cond.true341, %cond.false326, %cond.true325
  store i32 1, i32* %retval, align 4, !dbg !4879
  br label %return, !dbg !4879

if.end347:                                        ; preds = %cond.false342, %cond.true341
  %307 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4880
  %m_tempPool348 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %307, i32 0, i32 79, !dbg !4880
  %start349 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool348, i32 0, i32 4, !dbg !4881
  %308 = load i8*, i8** %start349, align 8, !dbg !4881
  %309 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4882
  %m_declAttributeType350 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %309, i32 0, i32 58, !dbg !4882
  store i8* %308, i8** %m_declAttributeType350, align 8, !dbg !4883
  %310 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4884
  %m_tempPool351 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %310, i32 0, i32 79, !dbg !4884
  %ptr352 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool351, i32 0, i32 3, !dbg !4884
  %311 = load i8*, i8** %ptr352, align 8, !dbg !4884
  %312 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4884
  %m_tempPool353 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %312, i32 0, i32 79, !dbg !4884
  %start354 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool353, i32 0, i32 4, !dbg !4884
  store i8* %311, i8** %start354, align 8, !dbg !4884
  br label %if.end355, !dbg !4885

if.end355:                                        ; preds = %if.end347, %land.lhs.true308, %lor.lhs.false303
  %313 = load i8*, i8** %s.addr, align 8, !dbg !4886
  %314 = load i8**, i8*** %eventEndPP, align 8, !dbg !4887
  store i8* %313, i8** %314, align 8, !dbg !4888
  %315 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4889
  %m_attlistDeclHandler356 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %315, i32 0, i32 31, !dbg !4889
  %316 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler356, align 8, !dbg !4889
  %317 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4890
  %m_handlerArg357 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %317, i32 0, i32 1, !dbg !4890
  %318 = load i8*, i8** %m_handlerArg357, align 8, !dbg !4890
  %319 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4891
  %m_declElementType358 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %319, i32 0, i32 61, !dbg !4891
  %320 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType358, align 8, !dbg !4891
  %name359 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %320, i32 0, i32 0, !dbg !4892
  %321 = load i8*, i8** %name359, align 8, !dbg !4892
  %322 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4893
  %m_declAttributeId360 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %322, i32 0, i32 62, !dbg !4893
  %323 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId360, align 8, !dbg !4893
  %name361 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %323, i32 0, i32 0, !dbg !4894
  %324 = load i8*, i8** %name361, align 8, !dbg !4894
  %325 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4895
  %m_declAttributeType362 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %325, i32 0, i32 58, !dbg !4895
  %326 = load i8*, i8** %m_declAttributeType362, align 8, !dbg !4895
  %327 = load i8*, i8** %attVal, align 8, !dbg !4896
  %328 = load i32, i32* %role, align 4, !dbg !4897
  %cmp363 = icmp eq i32 %328, 38, !dbg !4898
  %conv364 = zext i1 %cmp363 to i32, !dbg !4898
  call void %316(i8* %318, i8* %321, i8* %324, i8* %326, i8* %327, i32 %conv364), !dbg !4889
  %329 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4899
  %m_tempPool365 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %329, i32 0, i32 79, !dbg !4899
  call void @poolClear(%struct.STRING_POOL* %m_tempPool365), !dbg !4900
  store i8 0, i8* %handleDefault, align 1, !dbg !4901
  br label %if.end366, !dbg !4902

if.end366:                                        ; preds = %if.end355, %land.lhs.true295, %if.end292
  br label %if.end367, !dbg !4903

if.end367:                                        ; preds = %if.end366, %sw.bb262
  br label %sw.epilog1061, !dbg !4904

sw.bb368:                                         ; preds = %if.end13
  %330 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4905
  %keepProcessing369 = getelementptr inbounds %struct.DTD, %struct.DTD* %330, i32 0, i32 6, !dbg !4907
  %331 = load i8, i8* %keepProcessing369, align 8, !dbg !4907
  %tobool370 = icmp ne i8 %331, 0, !dbg !4905
  br i1 %tobool370, label %if.then371, label %if.end420, !dbg !4908

if.then371:                                       ; preds = %sw.bb368
  call void @llvm.dbg.declare(metadata i32* %result372, metadata !4909, metadata !1076), !dbg !4911
  %332 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4912
  %333 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4913
  %334 = load i8*, i8** %s.addr, align 8, !dbg !4914
  %335 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4915
  %minBytesPerChar373 = getelementptr inbounds %struct.encoding, %struct.encoding* %335, i32 0, i32 13, !dbg !4916
  %336 = load i32, i32* %minBytesPerChar373, align 8, !dbg !4916
  %idx.ext374 = sext i32 %336 to i64, !dbg !4917
  %add.ptr375 = getelementptr inbounds i8, i8* %334, i64 %idx.ext374, !dbg !4917
  %337 = load i8*, i8** %next.addr, align 8, !dbg !4918
  %338 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4919
  %minBytesPerChar376 = getelementptr inbounds %struct.encoding, %struct.encoding* %338, i32 0, i32 13, !dbg !4920
  %339 = load i32, i32* %minBytesPerChar376, align 8, !dbg !4920
  %idx.ext377 = sext i32 %339 to i64, !dbg !4921
  %idx.neg378 = sub i64 0, %idx.ext377, !dbg !4921
  %add.ptr379 = getelementptr inbounds i8, i8* %337, i64 %idx.neg378, !dbg !4921
  %call380 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %332, %struct.encoding* %333, i8* %add.ptr375, i8* %add.ptr379), !dbg !4922
  store i32 %call380, i32* %result372, align 4, !dbg !4911
  %340 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4923
  %m_declEntity381 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %340, i32 0, i32 54, !dbg !4923
  %341 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity381, align 8, !dbg !4923
  %tobool382 = icmp ne %struct.ENTITY* %341, null, !dbg !4923
  br i1 %tobool382, label %if.then383, label %if.else410, !dbg !4925

if.then383:                                       ; preds = %if.then371
  %342 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4926
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %342, i32 0, i32 5, !dbg !4926
  %start384 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool, i32 0, i32 4, !dbg !4926
  %343 = load i8*, i8** %start384, align 8, !dbg !4926
  %344 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4928
  %m_declEntity385 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %344, i32 0, i32 54, !dbg !4928
  %345 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity385, align 8, !dbg !4928
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %345, i32 0, i32 1, !dbg !4929
  store i8* %343, i8** %textPtr, align 8, !dbg !4930
  %346 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4931
  %entityValuePool386 = getelementptr inbounds %struct.DTD, %struct.DTD* %346, i32 0, i32 5, !dbg !4931
  %ptr387 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool386, i32 0, i32 3, !dbg !4931
  %347 = load i8*, i8** %ptr387, align 8, !dbg !4931
  %348 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4931
  %entityValuePool388 = getelementptr inbounds %struct.DTD, %struct.DTD* %348, i32 0, i32 5, !dbg !4931
  %start389 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool388, i32 0, i32 4, !dbg !4931
  %349 = load i8*, i8** %start389, align 8, !dbg !4931
  %sub.ptr.lhs.cast = ptrtoint i8* %347 to i64, !dbg !4931
  %sub.ptr.rhs.cast = ptrtoint i8* %349 to i64, !dbg !4931
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4931
  %conv390 = trunc i64 %sub.ptr.sub to i32, !dbg !4932
  %350 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4933
  %m_declEntity391 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %350, i32 0, i32 54, !dbg !4933
  %351 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity391, align 8, !dbg !4933
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %351, i32 0, i32 2, !dbg !4934
  store i32 %conv390, i32* %textLen, align 8, !dbg !4935
  %352 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4936
  %entityValuePool392 = getelementptr inbounds %struct.DTD, %struct.DTD* %352, i32 0, i32 5, !dbg !4936
  %ptr393 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool392, i32 0, i32 3, !dbg !4936
  %353 = load i8*, i8** %ptr393, align 8, !dbg !4936
  %354 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4936
  %entityValuePool394 = getelementptr inbounds %struct.DTD, %struct.DTD* %354, i32 0, i32 5, !dbg !4936
  %start395 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool394, i32 0, i32 4, !dbg !4936
  store i8* %353, i8** %start395, align 8, !dbg !4936
  %355 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4937
  %m_entityDeclHandler396 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %355, i32 0, i32 32, !dbg !4937
  %356 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler396, align 8, !dbg !4937
  %tobool397 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %356, null, !dbg !4937
  br i1 %tobool397, label %if.then398, label %if.end409, !dbg !4939

if.then398:                                       ; preds = %if.then383
  %357 = load i8*, i8** %s.addr, align 8, !dbg !4940
  %358 = load i8**, i8*** %eventEndPP, align 8, !dbg !4942
  store i8* %357, i8** %358, align 8, !dbg !4943
  %359 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4944
  %m_entityDeclHandler399 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %359, i32 0, i32 32, !dbg !4944
  %360 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler399, align 8, !dbg !4944
  %361 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4945
  %m_handlerArg400 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %361, i32 0, i32 1, !dbg !4945
  %362 = load i8*, i8** %m_handlerArg400, align 8, !dbg !4945
  %363 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4946
  %m_declEntity401 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %363, i32 0, i32 54, !dbg !4946
  %364 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity401, align 8, !dbg !4946
  %name402 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %364, i32 0, i32 0, !dbg !4947
  %365 = load i8*, i8** %name402, align 8, !dbg !4947
  %366 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4948
  %m_declEntity403 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %366, i32 0, i32 54, !dbg !4948
  %367 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity403, align 8, !dbg !4948
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %367, i32 0, i32 9, !dbg !4949
  %368 = load i8, i8* %is_param, align 1, !dbg !4949
  %conv404 = zext i8 %368 to i32, !dbg !4948
  %369 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4950
  %m_declEntity405 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %369, i32 0, i32 54, !dbg !4950
  %370 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity405, align 8, !dbg !4950
  %textPtr406 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %370, i32 0, i32 1, !dbg !4951
  %371 = load i8*, i8** %textPtr406, align 8, !dbg !4951
  %372 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4952
  %m_declEntity407 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %372, i32 0, i32 54, !dbg !4952
  %373 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity407, align 8, !dbg !4952
  %textLen408 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %373, i32 0, i32 2, !dbg !4953
  %374 = load i32, i32* %textLen408, align 8, !dbg !4953
  %375 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4954
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %375, i32 0, i32 66, !dbg !4954
  %376 = load i8*, i8** %m_curBase, align 8, !dbg !4954
  call void %360(i8* %362, i8* %365, i32 %conv404, i8* %371, i32 %374, i8* %376, i8* null, i8* null, i8* null), !dbg !4944
  store i8 0, i8* %handleDefault, align 1, !dbg !4955
  br label %if.end409, !dbg !4956

if.end409:                                        ; preds = %if.then398, %if.then383
  br label %if.end415, !dbg !4957

if.else410:                                       ; preds = %if.then371
  %377 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4958
  %entityValuePool411 = getelementptr inbounds %struct.DTD, %struct.DTD* %377, i32 0, i32 5, !dbg !4958
  %start412 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool411, i32 0, i32 4, !dbg !4958
  %378 = load i8*, i8** %start412, align 8, !dbg !4958
  %379 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4958
  %entityValuePool413 = getelementptr inbounds %struct.DTD, %struct.DTD* %379, i32 0, i32 5, !dbg !4958
  %ptr414 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool413, i32 0, i32 3, !dbg !4958
  store i8* %378, i8** %ptr414, align 8, !dbg !4958
  br label %if.end415

if.end415:                                        ; preds = %if.else410, %if.end409
  %380 = load i32, i32* %result372, align 4, !dbg !4959
  %cmp416 = icmp ne i32 %380, 0, !dbg !4961
  br i1 %cmp416, label %if.then418, label %if.end419, !dbg !4962

if.then418:                                       ; preds = %if.end415
  %381 = load i32, i32* %result372, align 4, !dbg !4963
  store i32 %381, i32* %retval, align 4, !dbg !4964
  br label %return, !dbg !4964

if.end419:                                        ; preds = %if.end415
  br label %if.end420, !dbg !4965

if.end420:                                        ; preds = %if.end419, %sw.bb368
  br label %sw.epilog1061, !dbg !4966

sw.bb421:                                         ; preds = %if.end13
  %382 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4967
  %hasParamEntityRefs422 = getelementptr inbounds %struct.DTD, %struct.DTD* %382, i32 0, i32 7, !dbg !4968
  store i8 1, i8* %hasParamEntityRefs422, align 1, !dbg !4969
  %383 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4970
  %m_startDoctypeDeclHandler423 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %383, i32 0, i32 19, !dbg !4970
  %384 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler423, align 8, !dbg !4970
  %tobool424 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %384, null, !dbg !4970
  br i1 %tobool424, label %if.then425, label %if.end445, !dbg !4972

if.then425:                                       ; preds = %sw.bb421
  %385 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4973
  %m_tempPool426 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %385, i32 0, i32 79, !dbg !4973
  %386 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4975
  %387 = load i8*, i8** %s.addr, align 8, !dbg !4976
  %388 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4977
  %minBytesPerChar427 = getelementptr inbounds %struct.encoding, %struct.encoding* %388, i32 0, i32 13, !dbg !4978
  %389 = load i32, i32* %minBytesPerChar427, align 8, !dbg !4978
  %idx.ext428 = sext i32 %389 to i64, !dbg !4979
  %add.ptr429 = getelementptr inbounds i8, i8* %387, i64 %idx.ext428, !dbg !4979
  %390 = load i8*, i8** %next.addr, align 8, !dbg !4980
  %391 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !4981
  %minBytesPerChar430 = getelementptr inbounds %struct.encoding, %struct.encoding* %391, i32 0, i32 13, !dbg !4982
  %392 = load i32, i32* %minBytesPerChar430, align 8, !dbg !4982
  %idx.ext431 = sext i32 %392 to i64, !dbg !4983
  %idx.neg432 = sub i64 0, %idx.ext431, !dbg !4983
  %add.ptr433 = getelementptr inbounds i8, i8* %390, i64 %idx.neg432, !dbg !4983
  %call434 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool426, %struct.encoding* %386, i8* %add.ptr429, i8* %add.ptr433), !dbg !4984
  %393 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4985
  %m_doctypeSysid435 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %393, i32 0, i32 56, !dbg !4985
  store i8* %call434, i8** %m_doctypeSysid435, align 8, !dbg !4986
  %394 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4987
  %m_doctypeSysid436 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %394, i32 0, i32 56, !dbg !4987
  %395 = load i8*, i8** %m_doctypeSysid436, align 8, !dbg !4987
  %cmp437 = icmp eq i8* %395, null, !dbg !4989
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !4990

if.then439:                                       ; preds = %if.then425
  store i32 1, i32* %retval, align 4, !dbg !4991
  br label %return, !dbg !4991

if.end440:                                        ; preds = %if.then425
  %396 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4992
  %m_tempPool441 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %396, i32 0, i32 79, !dbg !4992
  %ptr442 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool441, i32 0, i32 3, !dbg !4992
  %397 = load i8*, i8** %ptr442, align 8, !dbg !4992
  %398 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4992
  %m_tempPool443 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %398, i32 0, i32 79, !dbg !4992
  %start444 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool443, i32 0, i32 4, !dbg !4992
  store i8* %397, i8** %start444, align 8, !dbg !4992
  store i8 0, i8* %handleDefault, align 1, !dbg !4993
  br label %if.end445, !dbg !4994

if.end445:                                        ; preds = %if.end440, %sw.bb421
  %399 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !4995
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %399, i32 0, i32 8, !dbg !4997
  %400 = load i8, i8* %standalone, align 2, !dbg !4997
  %tobool446 = icmp ne i8 %400, 0, !dbg !4995
  br i1 %tobool446, label %if.end455, label %land.lhs.true447, !dbg !4998

land.lhs.true447:                                 ; preds = %if.end445
  %401 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !4999
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %401, i32 0, i32 25, !dbg !4999
  %402 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler, align 8, !dbg !4999
  %tobool448 = icmp ne i32 (i8*)* %402, null, !dbg !4999
  br i1 %tobool448, label %land.lhs.true449, label %if.end455, !dbg !5001

land.lhs.true449:                                 ; preds = %land.lhs.true447
  %403 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5002
  %m_notStandaloneHandler450 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %403, i32 0, i32 25, !dbg !5002
  %404 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler450, align 8, !dbg !5002
  %405 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5003
  %m_handlerArg451 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %405, i32 0, i32 1, !dbg !5003
  %406 = load i8*, i8** %m_handlerArg451, align 8, !dbg !5003
  %call452 = call i32 %404(i8* %406), !dbg !5002
  %tobool453 = icmp ne i32 %call452, 0, !dbg !5002
  br i1 %tobool453, label %if.end455, label %if.then454, !dbg !5004

if.then454:                                       ; preds = %land.lhs.true449
  store i32 22, i32* %retval, align 4, !dbg !5006
  br label %return, !dbg !5006

if.end455:                                        ; preds = %land.lhs.true449, %land.lhs.true447, %if.end445
  br label %sw.epilog1061, !dbg !5007

sw.bb456:                                         ; preds = %if.end13
  %407 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5008
  %keepProcessing457 = getelementptr inbounds %struct.DTD, %struct.DTD* %407, i32 0, i32 6, !dbg !5010
  %408 = load i8, i8* %keepProcessing457, align 8, !dbg !5010
  %conv458 = zext i8 %408 to i32, !dbg !5008
  %tobool459 = icmp ne i32 %conv458, 0, !dbg !5008
  br i1 %tobool459, label %land.lhs.true460, label %if.end489, !dbg !5011

land.lhs.true460:                                 ; preds = %sw.bb456
  %409 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5012
  %m_declEntity461 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %409, i32 0, i32 54, !dbg !5012
  %410 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity461, align 8, !dbg !5012
  %tobool462 = icmp ne %struct.ENTITY* %410, null, !dbg !5012
  br i1 %tobool462, label %if.then463, label %if.end489, !dbg !5014

if.then463:                                       ; preds = %land.lhs.true460
  %411 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5015
  %pool464 = getelementptr inbounds %struct.DTD, %struct.DTD* %411, i32 0, i32 4, !dbg !5017
  %412 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5018
  %413 = load i8*, i8** %s.addr, align 8, !dbg !5019
  %414 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5020
  %minBytesPerChar465 = getelementptr inbounds %struct.encoding, %struct.encoding* %414, i32 0, i32 13, !dbg !5021
  %415 = load i32, i32* %minBytesPerChar465, align 8, !dbg !5021
  %idx.ext466 = sext i32 %415 to i64, !dbg !5022
  %add.ptr467 = getelementptr inbounds i8, i8* %413, i64 %idx.ext466, !dbg !5022
  %416 = load i8*, i8** %next.addr, align 8, !dbg !5023
  %417 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5024
  %minBytesPerChar468 = getelementptr inbounds %struct.encoding, %struct.encoding* %417, i32 0, i32 13, !dbg !5025
  %418 = load i32, i32* %minBytesPerChar468, align 8, !dbg !5025
  %idx.ext469 = sext i32 %418 to i64, !dbg !5026
  %idx.neg470 = sub i64 0, %idx.ext469, !dbg !5026
  %add.ptr471 = getelementptr inbounds i8, i8* %416, i64 %idx.neg470, !dbg !5026
  %call472 = call i8* @poolStoreString(%struct.STRING_POOL* %pool464, %struct.encoding* %412, i8* %add.ptr467, i8* %add.ptr471), !dbg !5027
  %419 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5028
  %m_declEntity473 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %419, i32 0, i32 54, !dbg !5028
  %420 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity473, align 8, !dbg !5028
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %420, i32 0, i32 4, !dbg !5029
  store i8* %call472, i8** %systemId, align 8, !dbg !5030
  %421 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5031
  %m_declEntity474 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %421, i32 0, i32 54, !dbg !5031
  %422 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity474, align 8, !dbg !5031
  %systemId475 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %422, i32 0, i32 4, !dbg !5033
  %423 = load i8*, i8** %systemId475, align 8, !dbg !5033
  %tobool476 = icmp ne i8* %423, null, !dbg !5031
  br i1 %tobool476, label %if.end478, label %if.then477, !dbg !5034

if.then477:                                       ; preds = %if.then463
  store i32 1, i32* %retval, align 4, !dbg !5035
  br label %return, !dbg !5035

if.end478:                                        ; preds = %if.then463
  %424 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5036
  %m_curBase479 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %424, i32 0, i32 66, !dbg !5036
  %425 = load i8*, i8** %m_curBase479, align 8, !dbg !5036
  %426 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5037
  %m_declEntity480 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %426, i32 0, i32 54, !dbg !5037
  %427 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity480, align 8, !dbg !5037
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %427, i32 0, i32 5, !dbg !5038
  store i8* %425, i8** %base, align 8, !dbg !5039
  %428 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5040
  %pool481 = getelementptr inbounds %struct.DTD, %struct.DTD* %428, i32 0, i32 4, !dbg !5040
  %ptr482 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool481, i32 0, i32 3, !dbg !5040
  %429 = load i8*, i8** %ptr482, align 8, !dbg !5040
  %430 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5040
  %pool483 = getelementptr inbounds %struct.DTD, %struct.DTD* %430, i32 0, i32 4, !dbg !5040
  %start484 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool483, i32 0, i32 4, !dbg !5040
  store i8* %429, i8** %start484, align 8, !dbg !5040
  %431 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5041
  %m_entityDeclHandler485 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %431, i32 0, i32 32, !dbg !5041
  %432 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler485, align 8, !dbg !5041
  %tobool486 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %432, null, !dbg !5041
  br i1 %tobool486, label %if.then487, label %if.end488, !dbg !5043

if.then487:                                       ; preds = %if.end478
  store i8 0, i8* %handleDefault, align 1, !dbg !5044
  br label %if.end488, !dbg !5045

if.end488:                                        ; preds = %if.then487, %if.end478
  br label %if.end489, !dbg !5046

if.end489:                                        ; preds = %if.end488, %land.lhs.true460, %sw.bb456
  br label %sw.epilog1061, !dbg !5047

sw.bb490:                                         ; preds = %if.end13
  %433 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5048
  %keepProcessing491 = getelementptr inbounds %struct.DTD, %struct.DTD* %433, i32 0, i32 6, !dbg !5050
  %434 = load i8, i8* %keepProcessing491, align 8, !dbg !5050
  %conv492 = zext i8 %434 to i32, !dbg !5048
  %tobool493 = icmp ne i32 %conv492, 0, !dbg !5048
  br i1 %tobool493, label %land.lhs.true494, label %if.end514, !dbg !5051

land.lhs.true494:                                 ; preds = %sw.bb490
  %435 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5052
  %m_declEntity495 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %435, i32 0, i32 54, !dbg !5052
  %436 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity495, align 8, !dbg !5052
  %tobool496 = icmp ne %struct.ENTITY* %436, null, !dbg !5052
  br i1 %tobool496, label %land.lhs.true497, label %if.end514, !dbg !5054

land.lhs.true497:                                 ; preds = %land.lhs.true494
  %437 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5055
  %m_entityDeclHandler498 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %437, i32 0, i32 32, !dbg !5055
  %438 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler498, align 8, !dbg !5055
  %tobool499 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %438, null, !dbg !5055
  br i1 %tobool499, label %if.then500, label %if.end514, !dbg !5057

if.then500:                                       ; preds = %land.lhs.true497
  %439 = load i8*, i8** %s.addr, align 8, !dbg !5058
  %440 = load i8**, i8*** %eventEndPP, align 8, !dbg !5060
  store i8* %439, i8** %440, align 8, !dbg !5061
  %441 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5062
  %m_entityDeclHandler501 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %441, i32 0, i32 32, !dbg !5062
  %442 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler501, align 8, !dbg !5062
  %443 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5063
  %m_handlerArg502 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %443, i32 0, i32 1, !dbg !5063
  %444 = load i8*, i8** %m_handlerArg502, align 8, !dbg !5063
  %445 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5064
  %m_declEntity503 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %445, i32 0, i32 54, !dbg !5064
  %446 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity503, align 8, !dbg !5064
  %name504 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %446, i32 0, i32 0, !dbg !5065
  %447 = load i8*, i8** %name504, align 8, !dbg !5065
  %448 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5066
  %m_declEntity505 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %448, i32 0, i32 54, !dbg !5066
  %449 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity505, align 8, !dbg !5066
  %is_param506 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %449, i32 0, i32 9, !dbg !5067
  %450 = load i8, i8* %is_param506, align 1, !dbg !5067
  %conv507 = zext i8 %450 to i32, !dbg !5066
  %451 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5068
  %m_declEntity508 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %451, i32 0, i32 54, !dbg !5068
  %452 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity508, align 8, !dbg !5068
  %base509 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %452, i32 0, i32 5, !dbg !5069
  %453 = load i8*, i8** %base509, align 8, !dbg !5069
  %454 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5070
  %m_declEntity510 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %454, i32 0, i32 54, !dbg !5070
  %455 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity510, align 8, !dbg !5070
  %systemId511 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %455, i32 0, i32 4, !dbg !5071
  %456 = load i8*, i8** %systemId511, align 8, !dbg !5071
  %457 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5072
  %m_declEntity512 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %457, i32 0, i32 54, !dbg !5072
  %458 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity512, align 8, !dbg !5072
  %publicId513 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %458, i32 0, i32 6, !dbg !5073
  %459 = load i8*, i8** %publicId513, align 8, !dbg !5073
  call void %442(i8* %444, i8* %447, i32 %conv507, i8* null, i32 0, i8* %453, i8* %456, i8* %459, i8* null), !dbg !5062
  store i8 0, i8* %handleDefault, align 1, !dbg !5074
  br label %if.end514, !dbg !5075

if.end514:                                        ; preds = %if.then500, %land.lhs.true497, %land.lhs.true494, %sw.bb490
  br label %sw.epilog1061, !dbg !5076

sw.bb515:                                         ; preds = %if.end13
  %460 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5077
  %keepProcessing516 = getelementptr inbounds %struct.DTD, %struct.DTD* %460, i32 0, i32 6, !dbg !5079
  %461 = load i8, i8* %keepProcessing516, align 8, !dbg !5079
  %conv517 = zext i8 %461 to i32, !dbg !5077
  %tobool518 = icmp ne i32 %conv517, 0, !dbg !5077
  br i1 %tobool518, label %land.lhs.true519, label %if.end567, !dbg !5080

land.lhs.true519:                                 ; preds = %sw.bb515
  %462 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5081
  %m_declEntity520 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %462, i32 0, i32 54, !dbg !5081
  %463 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity520, align 8, !dbg !5081
  %tobool521 = icmp ne %struct.ENTITY* %463, null, !dbg !5081
  br i1 %tobool521, label %if.then522, label %if.end567, !dbg !5083

if.then522:                                       ; preds = %land.lhs.true519
  %464 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5084
  %pool523 = getelementptr inbounds %struct.DTD, %struct.DTD* %464, i32 0, i32 4, !dbg !5086
  %465 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5087
  %466 = load i8*, i8** %s.addr, align 8, !dbg !5088
  %467 = load i8*, i8** %next.addr, align 8, !dbg !5089
  %call524 = call i8* @poolStoreString(%struct.STRING_POOL* %pool523, %struct.encoding* %465, i8* %466, i8* %467), !dbg !5090
  %468 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5091
  %m_declEntity525 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %468, i32 0, i32 54, !dbg !5091
  %469 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity525, align 8, !dbg !5091
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %469, i32 0, i32 7, !dbg !5092
  store i8* %call524, i8** %notation, align 8, !dbg !5093
  %470 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5094
  %m_declEntity526 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %470, i32 0, i32 54, !dbg !5094
  %471 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity526, align 8, !dbg !5094
  %notation527 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %471, i32 0, i32 7, !dbg !5096
  %472 = load i8*, i8** %notation527, align 8, !dbg !5096
  %tobool528 = icmp ne i8* %472, null, !dbg !5094
  br i1 %tobool528, label %if.end530, label %if.then529, !dbg !5097

if.then529:                                       ; preds = %if.then522
  store i32 1, i32* %retval, align 4, !dbg !5098
  br label %return, !dbg !5098

if.end530:                                        ; preds = %if.then522
  %473 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5099
  %pool531 = getelementptr inbounds %struct.DTD, %struct.DTD* %473, i32 0, i32 4, !dbg !5099
  %ptr532 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool531, i32 0, i32 3, !dbg !5099
  %474 = load i8*, i8** %ptr532, align 8, !dbg !5099
  %475 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5099
  %pool533 = getelementptr inbounds %struct.DTD, %struct.DTD* %475, i32 0, i32 4, !dbg !5099
  %start534 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool533, i32 0, i32 4, !dbg !5099
  store i8* %474, i8** %start534, align 8, !dbg !5099
  %476 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5100
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %476, i32 0, i32 21, !dbg !5100
  %477 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8, !dbg !5100
  %tobool535 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i8*)* %477, null, !dbg !5100
  br i1 %tobool535, label %if.then536, label %if.else549, !dbg !5102

if.then536:                                       ; preds = %if.end530
  %478 = load i8*, i8** %s.addr, align 8, !dbg !5103
  %479 = load i8**, i8*** %eventEndPP, align 8, !dbg !5105
  store i8* %478, i8** %479, align 8, !dbg !5106
  %480 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5107
  %m_unparsedEntityDeclHandler537 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %480, i32 0, i32 21, !dbg !5107
  %481 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler537, align 8, !dbg !5107
  %482 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5108
  %m_handlerArg538 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %482, i32 0, i32 1, !dbg !5108
  %483 = load i8*, i8** %m_handlerArg538, align 8, !dbg !5108
  %484 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5109
  %m_declEntity539 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %484, i32 0, i32 54, !dbg !5109
  %485 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity539, align 8, !dbg !5109
  %name540 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %485, i32 0, i32 0, !dbg !5110
  %486 = load i8*, i8** %name540, align 8, !dbg !5110
  %487 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5111
  %m_declEntity541 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %487, i32 0, i32 54, !dbg !5111
  %488 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity541, align 8, !dbg !5111
  %base542 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %488, i32 0, i32 5, !dbg !5112
  %489 = load i8*, i8** %base542, align 8, !dbg !5112
  %490 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5113
  %m_declEntity543 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %490, i32 0, i32 54, !dbg !5113
  %491 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity543, align 8, !dbg !5113
  %systemId544 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %491, i32 0, i32 4, !dbg !5114
  %492 = load i8*, i8** %systemId544, align 8, !dbg !5114
  %493 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5115
  %m_declEntity545 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %493, i32 0, i32 54, !dbg !5115
  %494 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity545, align 8, !dbg !5115
  %publicId546 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %494, i32 0, i32 6, !dbg !5116
  %495 = load i8*, i8** %publicId546, align 8, !dbg !5116
  %496 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5117
  %m_declEntity547 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %496, i32 0, i32 54, !dbg !5117
  %497 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity547, align 8, !dbg !5117
  %notation548 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %497, i32 0, i32 7, !dbg !5118
  %498 = load i8*, i8** %notation548, align 8, !dbg !5118
  call void %481(i8* %483, i8* %486, i8* %489, i8* %492, i8* %495, i8* %498), !dbg !5107
  store i8 0, i8* %handleDefault, align 1, !dbg !5119
  br label %if.end566, !dbg !5120

if.else549:                                       ; preds = %if.end530
  %499 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5121
  %m_entityDeclHandler550 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %499, i32 0, i32 32, !dbg !5121
  %500 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler550, align 8, !dbg !5121
  %tobool551 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %500, null, !dbg !5121
  br i1 %tobool551, label %if.then552, label %if.end565, !dbg !5123

if.then552:                                       ; preds = %if.else549
  %501 = load i8*, i8** %s.addr, align 8, !dbg !5124
  %502 = load i8**, i8*** %eventEndPP, align 8, !dbg !5126
  store i8* %501, i8** %502, align 8, !dbg !5127
  %503 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5128
  %m_entityDeclHandler553 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %503, i32 0, i32 32, !dbg !5128
  %504 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler553, align 8, !dbg !5128
  %505 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5129
  %m_handlerArg554 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %505, i32 0, i32 1, !dbg !5129
  %506 = load i8*, i8** %m_handlerArg554, align 8, !dbg !5129
  %507 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5130
  %m_declEntity555 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %507, i32 0, i32 54, !dbg !5130
  %508 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity555, align 8, !dbg !5130
  %name556 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %508, i32 0, i32 0, !dbg !5131
  %509 = load i8*, i8** %name556, align 8, !dbg !5131
  %510 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5132
  %m_declEntity557 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %510, i32 0, i32 54, !dbg !5132
  %511 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity557, align 8, !dbg !5132
  %base558 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %511, i32 0, i32 5, !dbg !5133
  %512 = load i8*, i8** %base558, align 8, !dbg !5133
  %513 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5134
  %m_declEntity559 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %513, i32 0, i32 54, !dbg !5134
  %514 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity559, align 8, !dbg !5134
  %systemId560 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %514, i32 0, i32 4, !dbg !5135
  %515 = load i8*, i8** %systemId560, align 8, !dbg !5135
  %516 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5136
  %m_declEntity561 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %516, i32 0, i32 54, !dbg !5136
  %517 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity561, align 8, !dbg !5136
  %publicId562 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %517, i32 0, i32 6, !dbg !5137
  %518 = load i8*, i8** %publicId562, align 8, !dbg !5137
  %519 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5138
  %m_declEntity563 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %519, i32 0, i32 54, !dbg !5138
  %520 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity563, align 8, !dbg !5138
  %notation564 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %520, i32 0, i32 7, !dbg !5139
  %521 = load i8*, i8** %notation564, align 8, !dbg !5139
  call void %504(i8* %506, i8* %509, i32 0, i8* null, i32 0, i8* %512, i8* %515, i8* %518, i8* %521), !dbg !5128
  store i8 0, i8* %handleDefault, align 1, !dbg !5140
  br label %if.end565, !dbg !5141

if.end565:                                        ; preds = %if.then552, %if.else549
  br label %if.end566

if.end566:                                        ; preds = %if.end565, %if.then536
  br label %if.end567, !dbg !5142

if.end567:                                        ; preds = %if.end566, %land.lhs.true519, %sw.bb515
  br label %sw.epilog1061, !dbg !5143

sw.bb568:                                         ; preds = %if.end13
  %522 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5144
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %522, i32 0, i32 8, !dbg !5144
  %523 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8, !dbg !5144
  %524 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5144
  %525 = load i8*, i8** %s.addr, align 8, !dbg !5144
  %526 = load i8*, i8** %next.addr, align 8, !dbg !5144
  %call569 = call i32 %523(%struct.encoding* %524, i8* %525, i8* %526), !dbg !5144
  %tobool570 = icmp ne i32 %call569, 0, !dbg !5144
  br i1 %tobool570, label %if.then571, label %if.end573, !dbg !5147

if.then571:                                       ; preds = %sw.bb568
  %527 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5148
  %m_declEntity572 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %527, i32 0, i32 54, !dbg !5148
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity572, align 8, !dbg !5150
  br label %sw.epilog1061, !dbg !5151

if.end573:                                        ; preds = %sw.bb568
  %528 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5152
  %keepProcessing574 = getelementptr inbounds %struct.DTD, %struct.DTD* %528, i32 0, i32 6, !dbg !5154
  %529 = load i8, i8* %keepProcessing574, align 8, !dbg !5154
  %tobool575 = icmp ne i8 %529, 0, !dbg !5152
  br i1 %tobool575, label %if.then576, label %if.else618, !dbg !5155

if.then576:                                       ; preds = %if.end573
  call void @llvm.dbg.declare(metadata i8** %name577, metadata !5156, metadata !1076), !dbg !5158
  %530 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5159
  %pool578 = getelementptr inbounds %struct.DTD, %struct.DTD* %530, i32 0, i32 4, !dbg !5160
  %531 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5161
  %532 = load i8*, i8** %s.addr, align 8, !dbg !5162
  %533 = load i8*, i8** %next.addr, align 8, !dbg !5163
  %call579 = call i8* @poolStoreString(%struct.STRING_POOL* %pool578, %struct.encoding* %531, i8* %532, i8* %533), !dbg !5164
  store i8* %call579, i8** %name577, align 8, !dbg !5158
  %534 = load i8*, i8** %name577, align 8, !dbg !5165
  %tobool580 = icmp ne i8* %534, null, !dbg !5165
  br i1 %tobool580, label %if.end582, label %if.then581, !dbg !5167

if.then581:                                       ; preds = %if.then576
  store i32 1, i32* %retval, align 4, !dbg !5168
  br label %return, !dbg !5168

if.end582:                                        ; preds = %if.then576
  %535 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5169
  %536 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5170
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %536, i32 0, i32 0, !dbg !5171
  %537 = load i8*, i8** %name577, align 8, !dbg !5172
  %call583 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %535, %struct.HASH_TABLE* %generalEntities, i8* %537, i64 64), !dbg !5173
  %538 = bitcast %struct.NAMED* %call583 to %struct.ENTITY*, !dbg !5174
  %539 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5175
  %m_declEntity584 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %539, i32 0, i32 54, !dbg !5175
  store %struct.ENTITY* %538, %struct.ENTITY** %m_declEntity584, align 8, !dbg !5176
  %540 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5177
  %m_declEntity585 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %540, i32 0, i32 54, !dbg !5177
  %541 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity585, align 8, !dbg !5177
  %tobool586 = icmp ne %struct.ENTITY* %541, null, !dbg !5177
  br i1 %tobool586, label %if.end588, label %if.then587, !dbg !5179

if.then587:                                       ; preds = %if.end582
  store i32 1, i32* %retval, align 4, !dbg !5180
  br label %return, !dbg !5180

if.end588:                                        ; preds = %if.end582
  %542 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5181
  %m_declEntity589 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %542, i32 0, i32 54, !dbg !5181
  %543 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity589, align 8, !dbg !5181
  %name590 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %543, i32 0, i32 0, !dbg !5183
  %544 = load i8*, i8** %name590, align 8, !dbg !5183
  %545 = load i8*, i8** %name577, align 8, !dbg !5184
  %cmp591 = icmp ne i8* %544, %545, !dbg !5185
  br i1 %cmp591, label %if.then593, label %if.else599, !dbg !5186

if.then593:                                       ; preds = %if.end588
  %546 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5187
  %pool594 = getelementptr inbounds %struct.DTD, %struct.DTD* %546, i32 0, i32 4, !dbg !5187
  %start595 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool594, i32 0, i32 4, !dbg !5187
  %547 = load i8*, i8** %start595, align 8, !dbg !5187
  %548 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5187
  %pool596 = getelementptr inbounds %struct.DTD, %struct.DTD* %548, i32 0, i32 4, !dbg !5187
  %ptr597 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool596, i32 0, i32 3, !dbg !5187
  store i8* %547, i8** %ptr597, align 8, !dbg !5187
  %549 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5189
  %m_declEntity598 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %549, i32 0, i32 54, !dbg !5189
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity598, align 8, !dbg !5190
  br label %if.end617, !dbg !5191

if.else599:                                       ; preds = %if.end588
  %550 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5192
  %pool600 = getelementptr inbounds %struct.DTD, %struct.DTD* %550, i32 0, i32 4, !dbg !5192
  %ptr601 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool600, i32 0, i32 3, !dbg !5192
  %551 = load i8*, i8** %ptr601, align 8, !dbg !5192
  %552 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5192
  %pool602 = getelementptr inbounds %struct.DTD, %struct.DTD* %552, i32 0, i32 4, !dbg !5192
  %start603 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool602, i32 0, i32 4, !dbg !5192
  store i8* %551, i8** %start603, align 8, !dbg !5192
  %553 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5194
  %m_declEntity604 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %553, i32 0, i32 54, !dbg !5194
  %554 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity604, align 8, !dbg !5194
  %publicId605 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %554, i32 0, i32 6, !dbg !5195
  store i8* null, i8** %publicId605, align 8, !dbg !5196
  %555 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5197
  %m_declEntity606 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %555, i32 0, i32 54, !dbg !5197
  %556 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity606, align 8, !dbg !5197
  %is_param607 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %556, i32 0, i32 9, !dbg !5198
  store i8 0, i8* %is_param607, align 1, !dbg !5199
  %557 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5200
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %557, i32 0, i32 84, !dbg !5200
  %558 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !5200
  %tobool608 = icmp ne %struct.XML_ParserStruct* %558, null, !dbg !5200
  br i1 %tobool608, label %lor.end, label %lor.rhs, !dbg !5201

lor.rhs:                                          ; preds = %if.else599
  %559 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5202
  %m_openInternalEntities609 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %559, i32 0, i32 50, !dbg !5202
  %560 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities609, align 8, !dbg !5202
  %tobool610 = icmp ne %struct.open_internal_entity* %560, null, !dbg !5204
  br label %lor.end, !dbg !5204

lor.end:                                          ; preds = %lor.rhs, %if.else599
  %561 = phi i1 [ true, %if.else599 ], [ %tobool610, %lor.rhs ]
  %lnot = xor i1 %561, true, !dbg !5205
  %lnot.ext = zext i1 %lnot to i32, !dbg !5205
  %conv611 = trunc i32 %lnot.ext to i8, !dbg !5205
  %562 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5207
  %m_declEntity612 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %562, i32 0, i32 54, !dbg !5207
  %563 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity612, align 8, !dbg !5207
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %563, i32 0, i32 10, !dbg !5208
  store i8 %conv611, i8* %is_internal, align 2, !dbg !5209
  %564 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5210
  %m_entityDeclHandler613 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %564, i32 0, i32 32, !dbg !5210
  %565 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler613, align 8, !dbg !5210
  %tobool614 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %565, null, !dbg !5210
  br i1 %tobool614, label %if.then615, label %if.end616, !dbg !5212

if.then615:                                       ; preds = %lor.end
  store i8 0, i8* %handleDefault, align 1, !dbg !5213
  br label %if.end616, !dbg !5214

if.end616:                                        ; preds = %if.then615, %lor.end
  br label %if.end617

if.end617:                                        ; preds = %if.end616, %if.then593
  br label %if.end624, !dbg !5215

if.else618:                                       ; preds = %if.end573
  %566 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5216
  %pool619 = getelementptr inbounds %struct.DTD, %struct.DTD* %566, i32 0, i32 4, !dbg !5216
  %start620 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool619, i32 0, i32 4, !dbg !5216
  %567 = load i8*, i8** %start620, align 8, !dbg !5216
  %568 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5216
  %pool621 = getelementptr inbounds %struct.DTD, %struct.DTD* %568, i32 0, i32 4, !dbg !5216
  %ptr622 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool621, i32 0, i32 3, !dbg !5216
  store i8* %567, i8** %ptr622, align 8, !dbg !5216
  %569 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5218
  %m_declEntity623 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %569, i32 0, i32 54, !dbg !5218
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity623, align 8, !dbg !5219
  br label %if.end624

if.end624:                                        ; preds = %if.else618, %if.end617
  br label %sw.epilog1061, !dbg !5220

sw.bb625:                                         ; preds = %if.end13
  %570 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5221
  %m_declEntity626 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %570, i32 0, i32 54, !dbg !5221
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity626, align 8, !dbg !5222
  br label %sw.epilog1061, !dbg !5223

sw.bb627:                                         ; preds = %if.end13
  %571 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5224
  %m_declNotationPublicId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %571, i32 0, i32 60, !dbg !5224
  store i8* null, i8** %m_declNotationPublicId, align 8, !dbg !5225
  %572 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5226
  %m_declNotationName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %572, i32 0, i32 59, !dbg !5226
  store i8* null, i8** %m_declNotationName, align 8, !dbg !5227
  %573 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5228
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %573, i32 0, i32 22, !dbg !5228
  %574 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8, !dbg !5228
  %tobool628 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %574, null, !dbg !5228
  br i1 %tobool628, label %if.then629, label %if.end641, !dbg !5230

if.then629:                                       ; preds = %sw.bb627
  %575 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5231
  %m_tempPool630 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %575, i32 0, i32 79, !dbg !5231
  %576 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5233
  %577 = load i8*, i8** %s.addr, align 8, !dbg !5234
  %578 = load i8*, i8** %next.addr, align 8, !dbg !5235
  %call631 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool630, %struct.encoding* %576, i8* %577, i8* %578), !dbg !5236
  %579 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5237
  %m_declNotationName632 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %579, i32 0, i32 59, !dbg !5237
  store i8* %call631, i8** %m_declNotationName632, align 8, !dbg !5238
  %580 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5239
  %m_declNotationName633 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %580, i32 0, i32 59, !dbg !5239
  %581 = load i8*, i8** %m_declNotationName633, align 8, !dbg !5239
  %tobool634 = icmp ne i8* %581, null, !dbg !5239
  br i1 %tobool634, label %if.end636, label %if.then635, !dbg !5241

if.then635:                                       ; preds = %if.then629
  store i32 1, i32* %retval, align 4, !dbg !5242
  br label %return, !dbg !5242

if.end636:                                        ; preds = %if.then629
  %582 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5243
  %m_tempPool637 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %582, i32 0, i32 79, !dbg !5243
  %ptr638 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool637, i32 0, i32 3, !dbg !5243
  %583 = load i8*, i8** %ptr638, align 8, !dbg !5243
  %584 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5243
  %m_tempPool639 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %584, i32 0, i32 79, !dbg !5243
  %start640 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool639, i32 0, i32 4, !dbg !5243
  store i8* %583, i8** %start640, align 8, !dbg !5243
  store i8 0, i8* %handleDefault, align 1, !dbg !5244
  br label %if.end641, !dbg !5245

if.end641:                                        ; preds = %if.end636, %sw.bb627
  br label %sw.epilog1061, !dbg !5246

sw.bb642:                                         ; preds = %if.end13
  %585 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5247
  %isPublicId643 = getelementptr inbounds %struct.encoding, %struct.encoding* %585, i32 0, i32 10, !dbg !5247
  %586 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId643, align 8, !dbg !5247
  %587 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5247
  %588 = load i8*, i8** %s.addr, align 8, !dbg !5247
  %589 = load i8*, i8** %next.addr, align 8, !dbg !5247
  %590 = load i8**, i8*** %eventPP, align 8, !dbg !5247
  %call644 = call i32 %586(%struct.encoding* %587, i8* %588, i8* %589, i8** %590), !dbg !5247
  %tobool645 = icmp ne i32 %call644, 0, !dbg !5247
  br i1 %tobool645, label %if.end647, label %if.then646, !dbg !5249

if.then646:                                       ; preds = %sw.bb642
  store i32 32, i32* %retval, align 4, !dbg !5250
  br label %return, !dbg !5250

if.end647:                                        ; preds = %sw.bb642
  %591 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5251
  %m_declNotationName648 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %591, i32 0, i32 59, !dbg !5251
  %592 = load i8*, i8** %m_declNotationName648, align 8, !dbg !5251
  %tobool649 = icmp ne i8* %592, null, !dbg !5251
  br i1 %tobool649, label %if.then650, label %if.end669, !dbg !5253

if.then650:                                       ; preds = %if.end647
  call void @llvm.dbg.declare(metadata i8** %tem651, metadata !5254, metadata !1076), !dbg !5256
  %593 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5257
  %m_tempPool652 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %593, i32 0, i32 79, !dbg !5257
  %594 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5258
  %595 = load i8*, i8** %s.addr, align 8, !dbg !5259
  %596 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5260
  %minBytesPerChar653 = getelementptr inbounds %struct.encoding, %struct.encoding* %596, i32 0, i32 13, !dbg !5261
  %597 = load i32, i32* %minBytesPerChar653, align 8, !dbg !5261
  %idx.ext654 = sext i32 %597 to i64, !dbg !5262
  %add.ptr655 = getelementptr inbounds i8, i8* %595, i64 %idx.ext654, !dbg !5262
  %598 = load i8*, i8** %next.addr, align 8, !dbg !5263
  %599 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5264
  %minBytesPerChar656 = getelementptr inbounds %struct.encoding, %struct.encoding* %599, i32 0, i32 13, !dbg !5265
  %600 = load i32, i32* %minBytesPerChar656, align 8, !dbg !5265
  %idx.ext657 = sext i32 %600 to i64, !dbg !5266
  %idx.neg658 = sub i64 0, %idx.ext657, !dbg !5266
  %add.ptr659 = getelementptr inbounds i8, i8* %598, i64 %idx.neg658, !dbg !5266
  %call660 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool652, %struct.encoding* %594, i8* %add.ptr655, i8* %add.ptr659), !dbg !5267
  store i8* %call660, i8** %tem651, align 8, !dbg !5256
  %601 = load i8*, i8** %tem651, align 8, !dbg !5268
  %tobool661 = icmp ne i8* %601, null, !dbg !5268
  br i1 %tobool661, label %if.end663, label %if.then662, !dbg !5270

if.then662:                                       ; preds = %if.then650
  store i32 1, i32* %retval, align 4, !dbg !5271
  br label %return, !dbg !5271

if.end663:                                        ; preds = %if.then650
  %602 = load i8*, i8** %tem651, align 8, !dbg !5272
  call void @normalizePublicId(i8* %602), !dbg !5273
  %603 = load i8*, i8** %tem651, align 8, !dbg !5274
  %604 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5275
  %m_declNotationPublicId664 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %604, i32 0, i32 60, !dbg !5275
  store i8* %603, i8** %m_declNotationPublicId664, align 8, !dbg !5276
  %605 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5277
  %m_tempPool665 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %605, i32 0, i32 79, !dbg !5277
  %ptr666 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool665, i32 0, i32 3, !dbg !5277
  %606 = load i8*, i8** %ptr666, align 8, !dbg !5277
  %607 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5277
  %m_tempPool667 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %607, i32 0, i32 79, !dbg !5277
  %start668 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool667, i32 0, i32 4, !dbg !5277
  store i8* %606, i8** %start668, align 8, !dbg !5277
  store i8 0, i8* %handleDefault, align 1, !dbg !5278
  br label %if.end669, !dbg !5279

if.end669:                                        ; preds = %if.end663, %if.end647
  br label %sw.epilog1061, !dbg !5280

sw.bb670:                                         ; preds = %if.end13
  %608 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5281
  %m_declNotationName671 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %608, i32 0, i32 59, !dbg !5281
  %609 = load i8*, i8** %m_declNotationName671, align 8, !dbg !5281
  %tobool672 = icmp ne i8* %609, null, !dbg !5281
  br i1 %tobool672, label %land.lhs.true673, label %if.end695, !dbg !5283

land.lhs.true673:                                 ; preds = %sw.bb670
  %610 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5284
  %m_notationDeclHandler674 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %610, i32 0, i32 22, !dbg !5284
  %611 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler674, align 8, !dbg !5284
  %tobool675 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %611, null, !dbg !5284
  br i1 %tobool675, label %if.then676, label %if.end695, !dbg !5286

if.then676:                                       ; preds = %land.lhs.true673
  call void @llvm.dbg.declare(metadata i8** %systemId677, metadata !5287, metadata !1076), !dbg !5289
  %612 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5290
  %m_tempPool678 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %612, i32 0, i32 79, !dbg !5290
  %613 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5291
  %614 = load i8*, i8** %s.addr, align 8, !dbg !5292
  %615 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5293
  %minBytesPerChar679 = getelementptr inbounds %struct.encoding, %struct.encoding* %615, i32 0, i32 13, !dbg !5294
  %616 = load i32, i32* %minBytesPerChar679, align 8, !dbg !5294
  %idx.ext680 = sext i32 %616 to i64, !dbg !5295
  %add.ptr681 = getelementptr inbounds i8, i8* %614, i64 %idx.ext680, !dbg !5295
  %617 = load i8*, i8** %next.addr, align 8, !dbg !5296
  %618 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5297
  %minBytesPerChar682 = getelementptr inbounds %struct.encoding, %struct.encoding* %618, i32 0, i32 13, !dbg !5298
  %619 = load i32, i32* %minBytesPerChar682, align 8, !dbg !5298
  %idx.ext683 = sext i32 %619 to i64, !dbg !5299
  %idx.neg684 = sub i64 0, %idx.ext683, !dbg !5299
  %add.ptr685 = getelementptr inbounds i8, i8* %617, i64 %idx.neg684, !dbg !5299
  %call686 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool678, %struct.encoding* %613, i8* %add.ptr681, i8* %add.ptr685), !dbg !5300
  store i8* %call686, i8** %systemId677, align 8, !dbg !5289
  %620 = load i8*, i8** %systemId677, align 8, !dbg !5301
  %tobool687 = icmp ne i8* %620, null, !dbg !5301
  br i1 %tobool687, label %if.end689, label %if.then688, !dbg !5303

if.then688:                                       ; preds = %if.then676
  store i32 1, i32* %retval, align 4, !dbg !5304
  br label %return, !dbg !5304

if.end689:                                        ; preds = %if.then676
  %621 = load i8*, i8** %s.addr, align 8, !dbg !5305
  %622 = load i8**, i8*** %eventEndPP, align 8, !dbg !5306
  store i8* %621, i8** %622, align 8, !dbg !5307
  %623 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5308
  %m_notationDeclHandler690 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %623, i32 0, i32 22, !dbg !5308
  %624 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler690, align 8, !dbg !5308
  %625 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5309
  %m_handlerArg691 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %625, i32 0, i32 1, !dbg !5309
  %626 = load i8*, i8** %m_handlerArg691, align 8, !dbg !5309
  %627 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5310
  %m_declNotationName692 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %627, i32 0, i32 59, !dbg !5310
  %628 = load i8*, i8** %m_declNotationName692, align 8, !dbg !5310
  %629 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5311
  %m_curBase693 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %629, i32 0, i32 66, !dbg !5311
  %630 = load i8*, i8** %m_curBase693, align 8, !dbg !5311
  %631 = load i8*, i8** %systemId677, align 8, !dbg !5312
  %632 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5313
  %m_declNotationPublicId694 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %632, i32 0, i32 60, !dbg !5313
  %633 = load i8*, i8** %m_declNotationPublicId694, align 8, !dbg !5313
  call void %624(i8* %626, i8* %628, i8* %630, i8* %631, i8* %633), !dbg !5308
  store i8 0, i8* %handleDefault, align 1, !dbg !5314
  br label %if.end695, !dbg !5315

if.end695:                                        ; preds = %if.end689, %land.lhs.true673, %sw.bb670
  %634 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5316
  %m_tempPool696 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %634, i32 0, i32 79, !dbg !5316
  call void @poolClear(%struct.STRING_POOL* %m_tempPool696), !dbg !5317
  br label %sw.epilog1061, !dbg !5318

sw.bb697:                                         ; preds = %if.end13
  %635 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5319
  %m_declNotationPublicId698 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %635, i32 0, i32 60, !dbg !5319
  %636 = load i8*, i8** %m_declNotationPublicId698, align 8, !dbg !5319
  %tobool699 = icmp ne i8* %636, null, !dbg !5319
  br i1 %tobool699, label %land.lhs.true700, label %if.end709, !dbg !5321

land.lhs.true700:                                 ; preds = %sw.bb697
  %637 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5322
  %m_notationDeclHandler701 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %637, i32 0, i32 22, !dbg !5322
  %638 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler701, align 8, !dbg !5322
  %tobool702 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %638, null, !dbg !5322
  br i1 %tobool702, label %if.then703, label %if.end709, !dbg !5324

if.then703:                                       ; preds = %land.lhs.true700
  %639 = load i8*, i8** %s.addr, align 8, !dbg !5325
  %640 = load i8**, i8*** %eventEndPP, align 8, !dbg !5327
  store i8* %639, i8** %640, align 8, !dbg !5328
  %641 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5329
  %m_notationDeclHandler704 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %641, i32 0, i32 22, !dbg !5329
  %642 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler704, align 8, !dbg !5329
  %643 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5330
  %m_handlerArg705 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %643, i32 0, i32 1, !dbg !5330
  %644 = load i8*, i8** %m_handlerArg705, align 8, !dbg !5330
  %645 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5331
  %m_declNotationName706 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %645, i32 0, i32 59, !dbg !5331
  %646 = load i8*, i8** %m_declNotationName706, align 8, !dbg !5331
  %647 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5332
  %m_curBase707 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %647, i32 0, i32 66, !dbg !5332
  %648 = load i8*, i8** %m_curBase707, align 8, !dbg !5332
  %649 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5333
  %m_declNotationPublicId708 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %649, i32 0, i32 60, !dbg !5333
  %650 = load i8*, i8** %m_declNotationPublicId708, align 8, !dbg !5333
  call void %642(i8* %644, i8* %646, i8* %648, i8* null, i8* %650), !dbg !5329
  store i8 0, i8* %handleDefault, align 1, !dbg !5334
  br label %if.end709, !dbg !5335

if.end709:                                        ; preds = %if.then703, %land.lhs.true700, %sw.bb697
  %651 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5336
  %m_tempPool710 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %651, i32 0, i32 79, !dbg !5336
  call void @poolClear(%struct.STRING_POOL* %m_tempPool710), !dbg !5337
  br label %sw.epilog1061, !dbg !5338

sw.bb711:                                         ; preds = %if.end13
  %652 = load i32, i32* %tok.addr, align 4, !dbg !5339
  switch i32 %652, label %sw.default714 [
    i32 28, label %sw.bb712
    i32 12, label %sw.bb713
  ], !dbg !5340

sw.bb712:                                         ; preds = %sw.bb711
  store i32 10, i32* %retval, align 4, !dbg !5341
  br label %return, !dbg !5341

sw.bb713:                                         ; preds = %sw.bb711
  store i32 17, i32* %retval, align 4, !dbg !5343
  br label %return, !dbg !5343

sw.default714:                                    ; preds = %sw.bb711
  store i32 2, i32* %retval, align 4, !dbg !5344
  br label %return, !dbg !5344

sw.bb715:                                         ; preds = %if.end13
  %653 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5345
  %m_prologState716 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %653, i32 0, i32 44, !dbg !5345
  %level = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState716, i32 0, i32 1, !dbg !5347
  %654 = load i32, i32* %level, align 8, !dbg !5347
  %655 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5348
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %655, i32 0, i32 82, !dbg !5348
  %656 = load i32, i32* %m_groupSize, align 8, !dbg !5348
  %cmp717 = icmp uge i32 %654, %656, !dbg !5349
  br i1 %cmp717, label %if.then719, label %if.end757, !dbg !5350

if.then719:                                       ; preds = %sw.bb715
  %657 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5351
  %m_groupSize720 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %657, i32 0, i32 82, !dbg !5351
  %658 = load i32, i32* %m_groupSize720, align 8, !dbg !5351
  %tobool721 = icmp ne i32 %658, 0, !dbg !5351
  br i1 %tobool721, label %if.then722, label %if.else747, !dbg !5354

if.then722:                                       ; preds = %if.then719
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !5355, metadata !1076), !dbg !5357
  %659 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5358
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %659, i32 0, i32 3, !dbg !5358
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !5358
  %660 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !5358
  %661 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5358
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %661, i32 0, i32 81, !dbg !5358
  %662 = load i8*, i8** %m_groupConnector, align 8, !dbg !5358
  %663 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5358
  %m_groupSize723 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %663, i32 0, i32 82, !dbg !5358
  %664 = load i32, i32* %m_groupSize723, align 8, !dbg !5358
  %mul = mul i32 %664, 2, !dbg !5358
  store i32 %mul, i32* %m_groupSize723, align 8, !dbg !5358
  %conv724 = zext i32 %mul to i64, !dbg !5358
  %call725 = call i8* %660(i8* %662, i64 %conv724), !dbg !5358
  store i8* %call725, i8** %temp, align 8, !dbg !5357
  %665 = load i8*, i8** %temp, align 8, !dbg !5359
  %cmp726 = icmp eq i8* %665, null, !dbg !5361
  br i1 %cmp726, label %if.then728, label %if.end729, !dbg !5362

if.then728:                                       ; preds = %if.then722
  store i32 1, i32* %retval, align 4, !dbg !5363
  br label %return, !dbg !5363

if.end729:                                        ; preds = %if.then722
  %666 = load i8*, i8** %temp, align 8, !dbg !5364
  %667 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5365
  %m_groupConnector730 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %667, i32 0, i32 81, !dbg !5365
  store i8* %666, i8** %m_groupConnector730, align 8, !dbg !5366
  %668 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5367
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %668, i32 0, i32 16, !dbg !5369
  %669 = load i32*, i32** %scaffIndex, align 8, !dbg !5369
  %tobool731 = icmp ne i32* %669, null, !dbg !5367
  br i1 %tobool731, label %if.then732, label %if.end746, !dbg !5370

if.then732:                                       ; preds = %if.end729
  call void @llvm.dbg.declare(metadata i32** %temp733, metadata !5371, metadata !1076), !dbg !5373
  %670 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5374
  %m_mem734 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %670, i32 0, i32 3, !dbg !5374
  %realloc_fcn735 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem734, i32 0, i32 1, !dbg !5374
  %671 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn735, align 8, !dbg !5374
  %672 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5374
  %scaffIndex736 = getelementptr inbounds %struct.DTD, %struct.DTD* %672, i32 0, i32 16, !dbg !5374
  %673 = load i32*, i32** %scaffIndex736, align 8, !dbg !5374
  %674 = bitcast i32* %673 to i8*, !dbg !5374
  %675 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5374
  %m_groupSize737 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %675, i32 0, i32 82, !dbg !5374
  %676 = load i32, i32* %m_groupSize737, align 8, !dbg !5374
  %conv738 = zext i32 %676 to i64, !dbg !5374
  %mul739 = mul i64 %conv738, 4, !dbg !5374
  %call740 = call i8* %671(i8* %674, i64 %mul739), !dbg !5374
  %677 = bitcast i8* %call740 to i32*, !dbg !5375
  store i32* %677, i32** %temp733, align 8, !dbg !5373
  %678 = load i32*, i32** %temp733, align 8, !dbg !5376
  %cmp741 = icmp eq i32* %678, null, !dbg !5378
  br i1 %cmp741, label %if.then743, label %if.end744, !dbg !5379

if.then743:                                       ; preds = %if.then732
  store i32 1, i32* %retval, align 4, !dbg !5380
  br label %return, !dbg !5380

if.end744:                                        ; preds = %if.then732
  %679 = load i32*, i32** %temp733, align 8, !dbg !5381
  %680 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5382
  %scaffIndex745 = getelementptr inbounds %struct.DTD, %struct.DTD* %680, i32 0, i32 16, !dbg !5383
  store i32* %679, i32** %scaffIndex745, align 8, !dbg !5384
  br label %if.end746, !dbg !5385

if.end746:                                        ; preds = %if.end744, %if.end729
  br label %if.end756, !dbg !5386

if.else747:                                       ; preds = %if.then719
  %681 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5387
  %m_mem748 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %681, i32 0, i32 3, !dbg !5387
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem748, i32 0, i32 0, !dbg !5387
  %682 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !5387
  %683 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5387
  %m_groupSize749 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %683, i32 0, i32 82, !dbg !5387
  store i32 32, i32* %m_groupSize749, align 8, !dbg !5387
  %call750 = call i8* %682(i64 32), !dbg !5387
  %684 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5389
  %m_groupConnector751 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %684, i32 0, i32 81, !dbg !5389
  store i8* %call750, i8** %m_groupConnector751, align 8, !dbg !5390
  %685 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5391
  %m_groupConnector752 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %685, i32 0, i32 81, !dbg !5391
  %686 = load i8*, i8** %m_groupConnector752, align 8, !dbg !5391
  %tobool753 = icmp ne i8* %686, null, !dbg !5391
  br i1 %tobool753, label %if.end755, label %if.then754, !dbg !5393

if.then754:                                       ; preds = %if.else747
  store i32 1, i32* %retval, align 4, !dbg !5394
  br label %return, !dbg !5394

if.end755:                                        ; preds = %if.else747
  br label %if.end756

if.end756:                                        ; preds = %if.end755, %if.end746
  br label %if.end757, !dbg !5395

if.end757:                                        ; preds = %if.end756, %sw.bb715
  %687 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5396
  %m_prologState758 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %687, i32 0, i32 44, !dbg !5396
  %level759 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState758, i32 0, i32 1, !dbg !5397
  %688 = load i32, i32* %level759, align 8, !dbg !5397
  %idxprom = zext i32 %688 to i64, !dbg !5398
  %689 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5398
  %m_groupConnector760 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %689, i32 0, i32 81, !dbg !5398
  %690 = load i8*, i8** %m_groupConnector760, align 8, !dbg !5398
  %arrayidx761 = getelementptr inbounds i8, i8* %690, i64 %idxprom, !dbg !5398
  store i8 0, i8* %arrayidx761, align 1, !dbg !5399
  %691 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5400
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %691, i32 0, i32 10, !dbg !5402
  %692 = load i8, i8* %in_eldecl, align 8, !dbg !5402
  %tobool762 = icmp ne i8 %692, 0, !dbg !5400
  br i1 %tobool762, label %if.then763, label %if.end778, !dbg !5403

if.then763:                                       ; preds = %if.end757
  call void @llvm.dbg.declare(metadata i32* %myindex, metadata !5404, metadata !1076), !dbg !5406
  %693 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5407
  %call764 = call i32 @nextScaffoldPart(%struct.XML_ParserStruct* %693), !dbg !5408
  store i32 %call764, i32* %myindex, align 4, !dbg !5406
  %694 = load i32, i32* %myindex, align 4, !dbg !5409
  %cmp765 = icmp slt i32 %694, 0, !dbg !5411
  br i1 %cmp765, label %if.then767, label %if.end768, !dbg !5412

if.then767:                                       ; preds = %if.then763
  store i32 1, i32* %retval, align 4, !dbg !5413
  br label %return, !dbg !5413

if.end768:                                        ; preds = %if.then763
  %695 = load i32, i32* %myindex, align 4, !dbg !5414
  %696 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5415
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %696, i32 0, i32 15, !dbg !5416
  %697 = load i32, i32* %scaffLevel, align 4, !dbg !5416
  %idxprom769 = sext i32 %697 to i64, !dbg !5417
  %698 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5417
  %scaffIndex770 = getelementptr inbounds %struct.DTD, %struct.DTD* %698, i32 0, i32 16, !dbg !5418
  %699 = load i32*, i32** %scaffIndex770, align 8, !dbg !5418
  %arrayidx771 = getelementptr inbounds i32, i32* %699, i64 %idxprom769, !dbg !5417
  store i32 %695, i32* %arrayidx771, align 4, !dbg !5419
  %700 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5420
  %scaffLevel772 = getelementptr inbounds %struct.DTD, %struct.DTD* %700, i32 0, i32 15, !dbg !5421
  %701 = load i32, i32* %scaffLevel772, align 4, !dbg !5422
  %inc = add nsw i32 %701, 1, !dbg !5422
  store i32 %inc, i32* %scaffLevel772, align 4, !dbg !5422
  %702 = load i32, i32* %myindex, align 4, !dbg !5423
  %idxprom773 = sext i32 %702 to i64, !dbg !5424
  %703 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5424
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %703, i32 0, i32 11, !dbg !5425
  %704 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !5425
  %arrayidx774 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %704, i64 %idxprom773, !dbg !5424
  %type = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx774, i32 0, i32 0, !dbg !5426
  store i32 6, i32* %type, align 8, !dbg !5427
  %705 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5428
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %705, i32 0, i32 30, !dbg !5428
  %706 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8, !dbg !5428
  %tobool775 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %706, null, !dbg !5428
  br i1 %tobool775, label %if.then776, label %if.end777, !dbg !5430

if.then776:                                       ; preds = %if.end768
  store i8 0, i8* %handleDefault, align 1, !dbg !5431
  br label %if.end777, !dbg !5432

if.end777:                                        ; preds = %if.then776, %if.end768
  br label %if.end778, !dbg !5433

if.end778:                                        ; preds = %if.end777, %if.end757
  br label %sw.epilog1061, !dbg !5434

sw.bb779:                                         ; preds = %if.end13
  %707 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5435
  %m_prologState780 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %707, i32 0, i32 44, !dbg !5435
  %level781 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState780, i32 0, i32 1, !dbg !5437
  %708 = load i32, i32* %level781, align 8, !dbg !5437
  %idxprom782 = zext i32 %708 to i64, !dbg !5438
  %709 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5438
  %m_groupConnector783 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %709, i32 0, i32 81, !dbg !5438
  %710 = load i8*, i8** %m_groupConnector783, align 8, !dbg !5438
  %arrayidx784 = getelementptr inbounds i8, i8* %710, i64 %idxprom782, !dbg !5438
  %711 = load i8, i8* %arrayidx784, align 1, !dbg !5438
  %conv785 = sext i8 %711 to i32, !dbg !5438
  %cmp786 = icmp eq i32 %conv785, 124, !dbg !5439
  br i1 %cmp786, label %if.then788, label %if.end789, !dbg !5440

if.then788:                                       ; preds = %sw.bb779
  store i32 2, i32* %retval, align 4, !dbg !5441
  br label %return, !dbg !5441

if.end789:                                        ; preds = %sw.bb779
  %712 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5442
  %m_prologState790 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %712, i32 0, i32 44, !dbg !5442
  %level791 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState790, i32 0, i32 1, !dbg !5443
  %713 = load i32, i32* %level791, align 8, !dbg !5443
  %idxprom792 = zext i32 %713 to i64, !dbg !5444
  %714 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5444
  %m_groupConnector793 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %714, i32 0, i32 81, !dbg !5444
  %715 = load i8*, i8** %m_groupConnector793, align 8, !dbg !5444
  %arrayidx794 = getelementptr inbounds i8, i8* %715, i64 %idxprom792, !dbg !5444
  store i8 44, i8* %arrayidx794, align 1, !dbg !5445
  %716 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5446
  %in_eldecl795 = getelementptr inbounds %struct.DTD, %struct.DTD* %716, i32 0, i32 10, !dbg !5448
  %717 = load i8, i8* %in_eldecl795, align 8, !dbg !5448
  %conv796 = zext i8 %717 to i32, !dbg !5446
  %tobool797 = icmp ne i32 %conv796, 0, !dbg !5446
  br i1 %tobool797, label %land.lhs.true798, label %if.end802, !dbg !5449

land.lhs.true798:                                 ; preds = %if.end789
  %718 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5450
  %m_elementDeclHandler799 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %718, i32 0, i32 30, !dbg !5450
  %719 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler799, align 8, !dbg !5450
  %tobool800 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %719, null, !dbg !5450
  br i1 %tobool800, label %if.then801, label %if.end802, !dbg !5452

if.then801:                                       ; preds = %land.lhs.true798
  store i8 0, i8* %handleDefault, align 1, !dbg !5453
  br label %if.end802, !dbg !5454

if.end802:                                        ; preds = %if.then801, %land.lhs.true798, %if.end789
  br label %sw.epilog1061, !dbg !5455

sw.bb803:                                         ; preds = %if.end13
  %720 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5456
  %m_prologState804 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %720, i32 0, i32 44, !dbg !5456
  %level805 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState804, i32 0, i32 1, !dbg !5458
  %721 = load i32, i32* %level805, align 8, !dbg !5458
  %idxprom806 = zext i32 %721 to i64, !dbg !5459
  %722 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5459
  %m_groupConnector807 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %722, i32 0, i32 81, !dbg !5459
  %723 = load i8*, i8** %m_groupConnector807, align 8, !dbg !5459
  %arrayidx808 = getelementptr inbounds i8, i8* %723, i64 %idxprom806, !dbg !5459
  %724 = load i8, i8* %arrayidx808, align 1, !dbg !5459
  %conv809 = sext i8 %724 to i32, !dbg !5459
  %cmp810 = icmp eq i32 %conv809, 44, !dbg !5460
  br i1 %cmp810, label %if.then812, label %if.end813, !dbg !5461

if.then812:                                       ; preds = %sw.bb803
  store i32 2, i32* %retval, align 4, !dbg !5462
  br label %return, !dbg !5462

if.end813:                                        ; preds = %sw.bb803
  %725 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5463
  %in_eldecl814 = getelementptr inbounds %struct.DTD, %struct.DTD* %725, i32 0, i32 10, !dbg !5465
  %726 = load i8, i8* %in_eldecl814, align 8, !dbg !5465
  %conv815 = zext i8 %726 to i32, !dbg !5463
  %tobool816 = icmp ne i32 %conv815, 0, !dbg !5463
  br i1 %tobool816, label %land.lhs.true817, label %if.end850, !dbg !5466

land.lhs.true817:                                 ; preds = %if.end813
  %727 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5467
  %m_prologState818 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %727, i32 0, i32 44, !dbg !5467
  %level819 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState818, i32 0, i32 1, !dbg !5469
  %728 = load i32, i32* %level819, align 8, !dbg !5469
  %idxprom820 = zext i32 %728 to i64, !dbg !5470
  %729 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5470
  %m_groupConnector821 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %729, i32 0, i32 81, !dbg !5470
  %730 = load i8*, i8** %m_groupConnector821, align 8, !dbg !5470
  %arrayidx822 = getelementptr inbounds i8, i8* %730, i64 %idxprom820, !dbg !5470
  %731 = load i8, i8* %arrayidx822, align 1, !dbg !5470
  %tobool823 = icmp ne i8 %731, 0, !dbg !5470
  br i1 %tobool823, label %if.end850, label %land.lhs.true824, !dbg !5471

land.lhs.true824:                                 ; preds = %land.lhs.true817
  %732 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5472
  %scaffLevel825 = getelementptr inbounds %struct.DTD, %struct.DTD* %732, i32 0, i32 15, !dbg !5473
  %733 = load i32, i32* %scaffLevel825, align 4, !dbg !5473
  %sub826 = sub nsw i32 %733, 1, !dbg !5474
  %idxprom827 = sext i32 %sub826 to i64, !dbg !5475
  %734 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5475
  %scaffIndex828 = getelementptr inbounds %struct.DTD, %struct.DTD* %734, i32 0, i32 16, !dbg !5476
  %735 = load i32*, i32** %scaffIndex828, align 8, !dbg !5476
  %arrayidx829 = getelementptr inbounds i32, i32* %735, i64 %idxprom827, !dbg !5475
  %736 = load i32, i32* %arrayidx829, align 4, !dbg !5475
  %idxprom830 = sext i32 %736 to i64, !dbg !5477
  %737 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5477
  %scaffold831 = getelementptr inbounds %struct.DTD, %struct.DTD* %737, i32 0, i32 11, !dbg !5478
  %738 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold831, align 8, !dbg !5478
  %arrayidx832 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %738, i64 %idxprom830, !dbg !5477
  %type833 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx832, i32 0, i32 0, !dbg !5479
  %739 = load i32, i32* %type833, align 8, !dbg !5479
  %cmp834 = icmp ne i32 %739, 3, !dbg !5480
  br i1 %cmp834, label %if.then836, label %if.end850, !dbg !5481

if.then836:                                       ; preds = %land.lhs.true824
  %740 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5482
  %scaffLevel837 = getelementptr inbounds %struct.DTD, %struct.DTD* %740, i32 0, i32 15, !dbg !5484
  %741 = load i32, i32* %scaffLevel837, align 4, !dbg !5484
  %sub838 = sub nsw i32 %741, 1, !dbg !5485
  %idxprom839 = sext i32 %sub838 to i64, !dbg !5486
  %742 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5486
  %scaffIndex840 = getelementptr inbounds %struct.DTD, %struct.DTD* %742, i32 0, i32 16, !dbg !5487
  %743 = load i32*, i32** %scaffIndex840, align 8, !dbg !5487
  %arrayidx841 = getelementptr inbounds i32, i32* %743, i64 %idxprom839, !dbg !5486
  %744 = load i32, i32* %arrayidx841, align 4, !dbg !5486
  %idxprom842 = sext i32 %744 to i64, !dbg !5488
  %745 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5488
  %scaffold843 = getelementptr inbounds %struct.DTD, %struct.DTD* %745, i32 0, i32 11, !dbg !5489
  %746 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold843, align 8, !dbg !5489
  %arrayidx844 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %746, i64 %idxprom842, !dbg !5488
  %type845 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx844, i32 0, i32 0, !dbg !5490
  store i32 5, i32* %type845, align 8, !dbg !5491
  %747 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5492
  %m_elementDeclHandler846 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %747, i32 0, i32 30, !dbg !5492
  %748 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler846, align 8, !dbg !5492
  %tobool847 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %748, null, !dbg !5492
  br i1 %tobool847, label %if.then848, label %if.end849, !dbg !5494

if.then848:                                       ; preds = %if.then836
  store i8 0, i8* %handleDefault, align 1, !dbg !5495
  br label %if.end849, !dbg !5496

if.end849:                                        ; preds = %if.then848, %if.then836
  br label %if.end850, !dbg !5497

if.end850:                                        ; preds = %if.end849, %land.lhs.true824, %land.lhs.true817, %if.end813
  %749 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5498
  %m_prologState851 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %749, i32 0, i32 44, !dbg !5498
  %level852 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState851, i32 0, i32 1, !dbg !5499
  %750 = load i32, i32* %level852, align 8, !dbg !5499
  %idxprom853 = zext i32 %750 to i64, !dbg !5500
  %751 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5500
  %m_groupConnector854 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %751, i32 0, i32 81, !dbg !5500
  %752 = load i8*, i8** %m_groupConnector854, align 8, !dbg !5500
  %arrayidx855 = getelementptr inbounds i8, i8* %752, i64 %idxprom853, !dbg !5500
  store i8 124, i8* %arrayidx855, align 1, !dbg !5501
  br label %sw.epilog1061, !dbg !5502

sw.bb856:                                         ; preds = %if.end13
  %753 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5503
  %standalone857 = getelementptr inbounds %struct.DTD, %struct.DTD* %753, i32 0, i32 8, !dbg !5505
  %754 = load i8, i8* %standalone857, align 2, !dbg !5505
  %tobool858 = icmp ne i8 %754, 0, !dbg !5503
  br i1 %tobool858, label %if.end868, label %land.lhs.true859, !dbg !5506

land.lhs.true859:                                 ; preds = %sw.bb856
  %755 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5507
  %m_notStandaloneHandler860 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %755, i32 0, i32 25, !dbg !5507
  %756 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler860, align 8, !dbg !5507
  %tobool861 = icmp ne i32 (i8*)* %756, null, !dbg !5507
  br i1 %tobool861, label %land.lhs.true862, label %if.end868, !dbg !5508

land.lhs.true862:                                 ; preds = %land.lhs.true859
  %757 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5509
  %m_notStandaloneHandler863 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %757, i32 0, i32 25, !dbg !5509
  %758 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler863, align 8, !dbg !5509
  %759 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5510
  %m_handlerArg864 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %759, i32 0, i32 1, !dbg !5510
  %760 = load i8*, i8** %m_handlerArg864, align 8, !dbg !5510
  %call865 = call i32 %758(i8* %760), !dbg !5509
  %tobool866 = icmp ne i32 %call865, 0, !dbg !5509
  br i1 %tobool866, label %if.end868, label %if.then867, !dbg !5511

if.then867:                                       ; preds = %land.lhs.true862
  store i32 22, i32* %retval, align 4, !dbg !5512
  br label %return, !dbg !5512

if.end868:                                        ; preds = %land.lhs.true862, %land.lhs.true859, %sw.bb856
  br label %sw.epilog1061, !dbg !5513

sw.bb869:                                         ; preds = %if.end13
  %761 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5514
  %m_elementDeclHandler870 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %761, i32 0, i32 30, !dbg !5514
  %762 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler870, align 8, !dbg !5514
  %tobool871 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %762, null, !dbg !5514
  br i1 %tobool871, label %if.then872, label %if.end881, !dbg !5516

if.then872:                                       ; preds = %sw.bb869
  %763 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5517
  %764 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5519
  %765 = load i8*, i8** %s.addr, align 8, !dbg !5520
  %766 = load i8*, i8** %next.addr, align 8, !dbg !5521
  %call873 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %763, %struct.encoding* %764, i8* %765, i8* %766), !dbg !5522
  %767 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5523
  %m_declElementType874 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %767, i32 0, i32 61, !dbg !5523
  store %struct.ELEMENT_TYPE* %call873, %struct.ELEMENT_TYPE** %m_declElementType874, align 8, !dbg !5524
  %768 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5525
  %m_declElementType875 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %768, i32 0, i32 61, !dbg !5525
  %769 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType875, align 8, !dbg !5525
  %tobool876 = icmp ne %struct.ELEMENT_TYPE* %769, null, !dbg !5525
  br i1 %tobool876, label %if.end878, label %if.then877, !dbg !5527

if.then877:                                       ; preds = %if.then872
  store i32 1, i32* %retval, align 4, !dbg !5528
  br label %return, !dbg !5528

if.end878:                                        ; preds = %if.then872
  %770 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5529
  %scaffLevel879 = getelementptr inbounds %struct.DTD, %struct.DTD* %770, i32 0, i32 15, !dbg !5530
  store i32 0, i32* %scaffLevel879, align 4, !dbg !5531
  %771 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5532
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %771, i32 0, i32 14, !dbg !5533
  store i32 0, i32* %scaffCount, align 8, !dbg !5534
  %772 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5535
  %in_eldecl880 = getelementptr inbounds %struct.DTD, %struct.DTD* %772, i32 0, i32 10, !dbg !5536
  store i8 1, i8* %in_eldecl880, align 8, !dbg !5537
  store i8 0, i8* %handleDefault, align 1, !dbg !5538
  br label %if.end881, !dbg !5539

if.end881:                                        ; preds = %if.end878, %sw.bb869
  br label %sw.epilog1061, !dbg !5540

sw.bb882:                                         ; preds = %if.end13, %if.end13
  %773 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5541
  %in_eldecl883 = getelementptr inbounds %struct.DTD, %struct.DTD* %773, i32 0, i32 10, !dbg !5543
  %774 = load i8, i8* %in_eldecl883, align 8, !dbg !5543
  %tobool884 = icmp ne i8 %774, 0, !dbg !5541
  br i1 %tobool884, label %if.then885, label %if.end907, !dbg !5544

if.then885:                                       ; preds = %sw.bb882
  %775 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5545
  %m_elementDeclHandler886 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %775, i32 0, i32 30, !dbg !5545
  %776 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler886, align 8, !dbg !5545
  %tobool887 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %776, null, !dbg !5545
  br i1 %tobool887, label %if.then888, label %if.end905, !dbg !5548

if.then888:                                       ; preds = %if.then885
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %content, metadata !5549, metadata !1076), !dbg !5551
  %777 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5552
  %m_mem889 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %777, i32 0, i32 3, !dbg !5552
  %malloc_fcn890 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem889, i32 0, i32 0, !dbg !5552
  %778 = load i8* (i64)*, i8* (i64)** %malloc_fcn890, align 8, !dbg !5552
  %call891 = call i8* %778(i64 32), !dbg !5552
  %779 = bitcast i8* %call891 to %struct.XML_cp*, !dbg !5553
  store %struct.XML_cp* %779, %struct.XML_cp** %content, align 8, !dbg !5551
  %780 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !5554
  %tobool892 = icmp ne %struct.XML_cp* %780, null, !dbg !5554
  br i1 %tobool892, label %if.end894, label %if.then893, !dbg !5556

if.then893:                                       ; preds = %if.then888
  store i32 1, i32* %retval, align 4, !dbg !5557
  br label %return, !dbg !5557

if.end894:                                        ; preds = %if.then888
  %781 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !5558
  %quant895 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %781, i32 0, i32 1, !dbg !5559
  store i32 0, i32* %quant895, align 4, !dbg !5560
  %782 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !5561
  %name896 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %782, i32 0, i32 2, !dbg !5562
  store i8* null, i8** %name896, align 8, !dbg !5563
  %783 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !5564
  %numchildren = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %783, i32 0, i32 3, !dbg !5565
  store i32 0, i32* %numchildren, align 8, !dbg !5566
  %784 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !5567
  %children = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %784, i32 0, i32 4, !dbg !5568
  store %struct.XML_cp* null, %struct.XML_cp** %children, align 8, !dbg !5569
  %785 = load i32, i32* %role, align 4, !dbg !5570
  %cmp897 = icmp eq i32 %785, 41, !dbg !5571
  %cond899 = select i1 %cmp897, i32 2, i32 1, !dbg !5572
  %786 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !5573
  %type900 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %786, i32 0, i32 0, !dbg !5574
  store i32 %cond899, i32* %type900, align 8, !dbg !5575
  %787 = load i8*, i8** %s.addr, align 8, !dbg !5576
  %788 = load i8**, i8*** %eventEndPP, align 8, !dbg !5577
  store i8* %787, i8** %788, align 8, !dbg !5578
  %789 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5579
  %m_elementDeclHandler901 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %789, i32 0, i32 30, !dbg !5579
  %790 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler901, align 8, !dbg !5579
  %791 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5580
  %m_handlerArg902 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %791, i32 0, i32 1, !dbg !5580
  %792 = load i8*, i8** %m_handlerArg902, align 8, !dbg !5580
  %793 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5581
  %m_declElementType903 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %793, i32 0, i32 61, !dbg !5581
  %794 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType903, align 8, !dbg !5581
  %name904 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %794, i32 0, i32 0, !dbg !5582
  %795 = load i8*, i8** %name904, align 8, !dbg !5582
  %796 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8, !dbg !5583
  call void %790(i8* %792, i8* %795, %struct.XML_cp* %796), !dbg !5579
  store i8 0, i8* %handleDefault, align 1, !dbg !5584
  br label %if.end905, !dbg !5585

if.end905:                                        ; preds = %if.end894, %if.then885
  %797 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5586
  %in_eldecl906 = getelementptr inbounds %struct.DTD, %struct.DTD* %797, i32 0, i32 10, !dbg !5587
  store i8 0, i8* %in_eldecl906, align 8, !dbg !5588
  br label %if.end907, !dbg !5589

if.end907:                                        ; preds = %if.end905, %sw.bb882
  br label %sw.epilog1061, !dbg !5590

sw.bb908:                                         ; preds = %if.end13
  %798 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5591
  %in_eldecl909 = getelementptr inbounds %struct.DTD, %struct.DTD* %798, i32 0, i32 10, !dbg !5593
  %799 = load i8, i8* %in_eldecl909, align 8, !dbg !5593
  %tobool910 = icmp ne i8 %799, 0, !dbg !5591
  br i1 %tobool910, label %if.then911, label %if.end925, !dbg !5594

if.then911:                                       ; preds = %sw.bb908
  %800 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5595
  %scaffLevel912 = getelementptr inbounds %struct.DTD, %struct.DTD* %800, i32 0, i32 15, !dbg !5597
  %801 = load i32, i32* %scaffLevel912, align 4, !dbg !5597
  %sub913 = sub nsw i32 %801, 1, !dbg !5598
  %idxprom914 = sext i32 %sub913 to i64, !dbg !5599
  %802 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5599
  %scaffIndex915 = getelementptr inbounds %struct.DTD, %struct.DTD* %802, i32 0, i32 16, !dbg !5600
  %803 = load i32*, i32** %scaffIndex915, align 8, !dbg !5600
  %arrayidx916 = getelementptr inbounds i32, i32* %803, i64 %idxprom914, !dbg !5599
  %804 = load i32, i32* %arrayidx916, align 4, !dbg !5599
  %idxprom917 = sext i32 %804 to i64, !dbg !5601
  %805 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5601
  %scaffold918 = getelementptr inbounds %struct.DTD, %struct.DTD* %805, i32 0, i32 11, !dbg !5602
  %806 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold918, align 8, !dbg !5602
  %arrayidx919 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %806, i64 %idxprom917, !dbg !5601
  %type920 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx919, i32 0, i32 0, !dbg !5603
  store i32 3, i32* %type920, align 8, !dbg !5604
  %807 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5605
  %m_elementDeclHandler921 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %807, i32 0, i32 30, !dbg !5605
  %808 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler921, align 8, !dbg !5605
  %tobool922 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %808, null, !dbg !5605
  br i1 %tobool922, label %if.then923, label %if.end924, !dbg !5607

if.then923:                                       ; preds = %if.then911
  store i8 0, i8* %handleDefault, align 1, !dbg !5608
  br label %if.end924, !dbg !5609

if.end924:                                        ; preds = %if.then923, %if.then911
  br label %if.end925, !dbg !5610

if.end925:                                        ; preds = %if.end924, %sw.bb908
  br label %sw.epilog1061, !dbg !5611

sw.bb926:                                         ; preds = %if.end13
  store i32 0, i32* %quant, align 4, !dbg !5612
  br label %elementContent, !dbg !5613

sw.bb927:                                         ; preds = %if.end13
  store i32 1, i32* %quant, align 4, !dbg !5614
  br label %elementContent, !dbg !5615

sw.bb928:                                         ; preds = %if.end13
  store i32 2, i32* %quant, align 4, !dbg !5616
  br label %elementContent, !dbg !5617

sw.bb929:                                         ; preds = %if.end13
  store i32 3, i32* %quant, align 4, !dbg !5618
  br label %elementContent, !dbg !5619

elementContent:                                   ; preds = %sw.bb929, %sw.bb928, %sw.bb927, %sw.bb926
  %809 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5620
  %in_eldecl930 = getelementptr inbounds %struct.DTD, %struct.DTD* %809, i32 0, i32 10, !dbg !5622
  %810 = load i8, i8* %in_eldecl930, align 8, !dbg !5622
  %tobool931 = icmp ne i8 %810, 0, !dbg !5620
  br i1 %tobool931, label %if.then932, label %if.end975, !dbg !5623

if.then932:                                       ; preds = %elementContent
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %el, metadata !5624, metadata !1076), !dbg !5626
  call void @llvm.dbg.declare(metadata i8** %name933, metadata !5627, metadata !1076), !dbg !5628
  call void @llvm.dbg.declare(metadata i32* %nameLen, metadata !5629, metadata !1076), !dbg !5630
  call void @llvm.dbg.declare(metadata i8** %nxt, metadata !5631, metadata !1076), !dbg !5632
  %811 = load i32, i32* %quant, align 4, !dbg !5633
  %cmp934 = icmp eq i32 %811, 0, !dbg !5634
  br i1 %cmp934, label %cond.true936, label %cond.false937, !dbg !5633

cond.true936:                                     ; preds = %if.then932
  %812 = load i8*, i8** %next.addr, align 8, !dbg !5635
  br label %cond.end, !dbg !5636

cond.false937:                                    ; preds = %if.then932
  %813 = load i8*, i8** %next.addr, align 8, !dbg !5638
  %814 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5639
  %minBytesPerChar938 = getelementptr inbounds %struct.encoding, %struct.encoding* %814, i32 0, i32 13, !dbg !5640
  %815 = load i32, i32* %minBytesPerChar938, align 8, !dbg !5640
  %idx.ext939 = sext i32 %815 to i64, !dbg !5641
  %idx.neg940 = sub i64 0, %idx.ext939, !dbg !5641
  %add.ptr941 = getelementptr inbounds i8, i8* %813, i64 %idx.neg940, !dbg !5641
  br label %cond.end, !dbg !5642

cond.end:                                         ; preds = %cond.false937, %cond.true936
  %cond942 = phi i8* [ %812, %cond.true936 ], [ %add.ptr941, %cond.false937 ], !dbg !5644
  store i8* %cond942, i8** %nxt, align 8, !dbg !5646
  call void @llvm.dbg.declare(metadata i32* %myindex943, metadata !5647, metadata !1076), !dbg !5648
  %816 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5649
  %call944 = call i32 @nextScaffoldPart(%struct.XML_ParserStruct* %816), !dbg !5650
  store i32 %call944, i32* %myindex943, align 4, !dbg !5648
  %817 = load i32, i32* %myindex943, align 4, !dbg !5651
  %cmp945 = icmp slt i32 %817, 0, !dbg !5653
  br i1 %cmp945, label %if.then947, label %if.end948, !dbg !5654

if.then947:                                       ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !5655
  br label %return, !dbg !5655

if.end948:                                        ; preds = %cond.end
  %818 = load i32, i32* %myindex943, align 4, !dbg !5656
  %idxprom949 = sext i32 %818 to i64, !dbg !5657
  %819 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5657
  %scaffold950 = getelementptr inbounds %struct.DTD, %struct.DTD* %819, i32 0, i32 11, !dbg !5658
  %820 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold950, align 8, !dbg !5658
  %arrayidx951 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %820, i64 %idxprom949, !dbg !5657
  %type952 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx951, i32 0, i32 0, !dbg !5659
  store i32 4, i32* %type952, align 8, !dbg !5660
  %821 = load i32, i32* %quant, align 4, !dbg !5661
  %822 = load i32, i32* %myindex943, align 4, !dbg !5662
  %idxprom953 = sext i32 %822 to i64, !dbg !5663
  %823 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5663
  %scaffold954 = getelementptr inbounds %struct.DTD, %struct.DTD* %823, i32 0, i32 11, !dbg !5664
  %824 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold954, align 8, !dbg !5664
  %arrayidx955 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %824, i64 %idxprom953, !dbg !5663
  %quant956 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx955, i32 0, i32 1, !dbg !5665
  store i32 %821, i32* %quant956, align 4, !dbg !5666
  %825 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5667
  %826 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5668
  %827 = load i8*, i8** %s.addr, align 8, !dbg !5669
  %828 = load i8*, i8** %nxt, align 8, !dbg !5670
  %call957 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %825, %struct.encoding* %826, i8* %827, i8* %828), !dbg !5671
  store %struct.ELEMENT_TYPE* %call957, %struct.ELEMENT_TYPE** %el, align 8, !dbg !5672
  %829 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %el, align 8, !dbg !5673
  %tobool958 = icmp ne %struct.ELEMENT_TYPE* %829, null, !dbg !5673
  br i1 %tobool958, label %if.end960, label %if.then959, !dbg !5675

if.then959:                                       ; preds = %if.end948
  store i32 1, i32* %retval, align 4, !dbg !5676
  br label %return, !dbg !5676

if.end960:                                        ; preds = %if.end948
  %830 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %el, align 8, !dbg !5677
  %name961 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %830, i32 0, i32 0, !dbg !5678
  %831 = load i8*, i8** %name961, align 8, !dbg !5678
  store i8* %831, i8** %name933, align 8, !dbg !5679
  %832 = load i8*, i8** %name933, align 8, !dbg !5680
  %833 = load i32, i32* %myindex943, align 4, !dbg !5681
  %idxprom962 = sext i32 %833 to i64, !dbg !5682
  %834 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5682
  %scaffold963 = getelementptr inbounds %struct.DTD, %struct.DTD* %834, i32 0, i32 11, !dbg !5683
  %835 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold963, align 8, !dbg !5683
  %arrayidx964 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %835, i64 %idxprom962, !dbg !5682
  %name965 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx964, i32 0, i32 2, !dbg !5684
  store i8* %832, i8** %name965, align 8, !dbg !5685
  store i32 0, i32* %nameLen, align 4, !dbg !5686
  br label %for.cond966, !dbg !5687

for.cond966:                                      ; preds = %for.body, %if.end960
  %836 = load i32, i32* %nameLen, align 4, !dbg !5688
  %inc967 = add nsw i32 %836, 1, !dbg !5688
  store i32 %inc967, i32* %nameLen, align 4, !dbg !5688
  %idxprom968 = sext i32 %836 to i64, !dbg !5692
  %837 = load i8*, i8** %name933, align 8, !dbg !5692
  %arrayidx969 = getelementptr inbounds i8, i8* %837, i64 %idxprom968, !dbg !5692
  %838 = load i8, i8* %arrayidx969, align 1, !dbg !5692
  %tobool970 = icmp ne i8 %838, 0, !dbg !5693
  br i1 %tobool970, label %for.body, label %for.end, !dbg !5693

for.body:                                         ; preds = %for.cond966
  br label %for.cond966, !dbg !5694

for.end:                                          ; preds = %for.cond966
  %839 = load i32, i32* %nameLen, align 4, !dbg !5696
  %840 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5697
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %840, i32 0, i32 12, !dbg !5698
  %841 = load i32, i32* %contentStringLen, align 8, !dbg !5699
  %add = add i32 %841, %839, !dbg !5699
  store i32 %add, i32* %contentStringLen, align 8, !dbg !5699
  %842 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5700
  %m_elementDeclHandler971 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %842, i32 0, i32 30, !dbg !5700
  %843 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler971, align 8, !dbg !5700
  %tobool972 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %843, null, !dbg !5700
  br i1 %tobool972, label %if.then973, label %if.end974, !dbg !5702

if.then973:                                       ; preds = %for.end
  store i8 0, i8* %handleDefault, align 1, !dbg !5703
  br label %if.end974, !dbg !5704

if.end974:                                        ; preds = %if.then973, %for.end
  br label %if.end975, !dbg !5705

if.end975:                                        ; preds = %if.end974, %elementContent
  br label %sw.epilog1061, !dbg !5706

sw.bb976:                                         ; preds = %if.end13
  store i32 0, i32* %quant, align 4, !dbg !5707
  br label %closeGroup, !dbg !5708

sw.bb977:                                         ; preds = %if.end13
  store i32 1, i32* %quant, align 4, !dbg !5709
  br label %closeGroup, !dbg !5710

sw.bb978:                                         ; preds = %if.end13
  store i32 2, i32* %quant, align 4, !dbg !5711
  br label %closeGroup, !dbg !5712

sw.bb979:                                         ; preds = %if.end13
  store i32 3, i32* %quant, align 4, !dbg !5713
  br label %closeGroup, !dbg !5714

closeGroup:                                       ; preds = %sw.bb979, %sw.bb978, %sw.bb977, %sw.bb976
  %844 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5715
  %in_eldecl980 = getelementptr inbounds %struct.DTD, %struct.DTD* %844, i32 0, i32 10, !dbg !5717
  %845 = load i8, i8* %in_eldecl980, align 8, !dbg !5717
  %tobool981 = icmp ne i8 %845, 0, !dbg !5715
  br i1 %tobool981, label %if.then982, label %if.end1014, !dbg !5718

if.then982:                                       ; preds = %closeGroup
  %846 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5719
  %m_elementDeclHandler983 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %846, i32 0, i32 30, !dbg !5719
  %847 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler983, align 8, !dbg !5719
  %tobool984 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %847, null, !dbg !5719
  br i1 %tobool984, label %if.then985, label %if.end986, !dbg !5722

if.then985:                                       ; preds = %if.then982
  store i8 0, i8* %handleDefault, align 1, !dbg !5723
  br label %if.end986, !dbg !5724

if.end986:                                        ; preds = %if.then985, %if.then982
  %848 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5725
  %scaffLevel987 = getelementptr inbounds %struct.DTD, %struct.DTD* %848, i32 0, i32 15, !dbg !5726
  %849 = load i32, i32* %scaffLevel987, align 4, !dbg !5727
  %dec = add nsw i32 %849, -1, !dbg !5727
  store i32 %dec, i32* %scaffLevel987, align 4, !dbg !5727
  %850 = load i32, i32* %quant, align 4, !dbg !5728
  %851 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5729
  %scaffLevel988 = getelementptr inbounds %struct.DTD, %struct.DTD* %851, i32 0, i32 15, !dbg !5730
  %852 = load i32, i32* %scaffLevel988, align 4, !dbg !5730
  %idxprom989 = sext i32 %852 to i64, !dbg !5731
  %853 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5731
  %scaffIndex990 = getelementptr inbounds %struct.DTD, %struct.DTD* %853, i32 0, i32 16, !dbg !5732
  %854 = load i32*, i32** %scaffIndex990, align 8, !dbg !5732
  %arrayidx991 = getelementptr inbounds i32, i32* %854, i64 %idxprom989, !dbg !5731
  %855 = load i32, i32* %arrayidx991, align 4, !dbg !5731
  %idxprom992 = sext i32 %855 to i64, !dbg !5733
  %856 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5733
  %scaffold993 = getelementptr inbounds %struct.DTD, %struct.DTD* %856, i32 0, i32 11, !dbg !5734
  %857 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold993, align 8, !dbg !5734
  %arrayidx994 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %857, i64 %idxprom992, !dbg !5733
  %quant995 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx994, i32 0, i32 1, !dbg !5735
  store i32 %850, i32* %quant995, align 4, !dbg !5736
  %858 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5737
  %scaffLevel996 = getelementptr inbounds %struct.DTD, %struct.DTD* %858, i32 0, i32 15, !dbg !5739
  %859 = load i32, i32* %scaffLevel996, align 4, !dbg !5739
  %cmp997 = icmp eq i32 %859, 0, !dbg !5740
  br i1 %cmp997, label %if.then999, label %if.end1013, !dbg !5741

if.then999:                                       ; preds = %if.end986
  %860 = load i8, i8* %handleDefault, align 1, !dbg !5742
  %tobool1000 = icmp ne i8 %860, 0, !dbg !5742
  br i1 %tobool1000, label %if.end1010, label %if.then1001, !dbg !5745

if.then1001:                                      ; preds = %if.then999
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %model, metadata !5746, metadata !1076), !dbg !5748
  %861 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5749
  %call1002 = call %struct.XML_cp* @build_model(%struct.XML_ParserStruct* %861), !dbg !5750
  store %struct.XML_cp* %call1002, %struct.XML_cp** %model, align 8, !dbg !5748
  %862 = load %struct.XML_cp*, %struct.XML_cp** %model, align 8, !dbg !5751
  %tobool1003 = icmp ne %struct.XML_cp* %862, null, !dbg !5751
  br i1 %tobool1003, label %if.end1005, label %if.then1004, !dbg !5753

if.then1004:                                      ; preds = %if.then1001
  store i32 1, i32* %retval, align 4, !dbg !5754
  br label %return, !dbg !5754

if.end1005:                                       ; preds = %if.then1001
  %863 = load i8*, i8** %s.addr, align 8, !dbg !5755
  %864 = load i8**, i8*** %eventEndPP, align 8, !dbg !5756
  store i8* %863, i8** %864, align 8, !dbg !5757
  %865 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5758
  %m_elementDeclHandler1006 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %865, i32 0, i32 30, !dbg !5758
  %866 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1006, align 8, !dbg !5758
  %867 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5759
  %m_handlerArg1007 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %867, i32 0, i32 1, !dbg !5759
  %868 = load i8*, i8** %m_handlerArg1007, align 8, !dbg !5759
  %869 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5760
  %m_declElementType1008 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %869, i32 0, i32 61, !dbg !5760
  %870 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType1008, align 8, !dbg !5760
  %name1009 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %870, i32 0, i32 0, !dbg !5761
  %871 = load i8*, i8** %name1009, align 8, !dbg !5761
  %872 = load %struct.XML_cp*, %struct.XML_cp** %model, align 8, !dbg !5762
  call void %866(i8* %868, i8* %871, %struct.XML_cp* %872), !dbg !5758
  br label %if.end1010, !dbg !5763

if.end1010:                                       ; preds = %if.end1005, %if.then999
  %873 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5764
  %in_eldecl1011 = getelementptr inbounds %struct.DTD, %struct.DTD* %873, i32 0, i32 10, !dbg !5765
  store i8 0, i8* %in_eldecl1011, align 8, !dbg !5766
  %874 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5767
  %contentStringLen1012 = getelementptr inbounds %struct.DTD, %struct.DTD* %874, i32 0, i32 12, !dbg !5768
  store i32 0, i32* %contentStringLen1012, align 8, !dbg !5769
  br label %if.end1013, !dbg !5770

if.end1013:                                       ; preds = %if.end1010, %if.end986
  br label %if.end1014, !dbg !5771

if.end1014:                                       ; preds = %if.end1013, %closeGroup
  br label %sw.epilog1061, !dbg !5772

sw.bb1015:                                        ; preds = %if.end13
  %875 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5773
  %876 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5775
  %877 = load i8*, i8** %s.addr, align 8, !dbg !5776
  %878 = load i8*, i8** %next.addr, align 8, !dbg !5777
  %call1016 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %875, %struct.encoding* %876, i8* %877, i8* %878), !dbg !5778
  %tobool1017 = icmp ne i32 %call1016, 0, !dbg !5778
  br i1 %tobool1017, label %if.end1019, label %if.then1018, !dbg !5779

if.then1018:                                      ; preds = %sw.bb1015
  store i32 1, i32* %retval, align 4, !dbg !5780
  br label %return, !dbg !5780

if.end1019:                                       ; preds = %sw.bb1015
  store i8 0, i8* %handleDefault, align 1, !dbg !5781
  br label %sw.epilog1061, !dbg !5782

sw.bb1020:                                        ; preds = %if.end13
  %879 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5783
  %880 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5785
  %881 = load i8*, i8** %s.addr, align 8, !dbg !5786
  %882 = load i8*, i8** %next.addr, align 8, !dbg !5787
  %call1021 = call i32 @reportComment(%struct.XML_ParserStruct* %879, %struct.encoding* %880, i8* %881, i8* %882), !dbg !5788
  %tobool1022 = icmp ne i32 %call1021, 0, !dbg !5788
  br i1 %tobool1022, label %if.end1024, label %if.then1023, !dbg !5789

if.then1023:                                      ; preds = %sw.bb1020
  store i32 1, i32* %retval, align 4, !dbg !5790
  br label %return, !dbg !5790

if.end1024:                                       ; preds = %sw.bb1020
  store i8 0, i8* %handleDefault, align 1, !dbg !5791
  br label %sw.epilog1061, !dbg !5792

sw.bb1025:                                        ; preds = %if.end13
  %883 = load i32, i32* %tok.addr, align 4, !dbg !5793
  switch i32 %883, label %sw.epilog1027 [
    i32 14, label %sw.bb1026
  ], !dbg !5794

sw.bb1026:                                        ; preds = %sw.bb1025
  store i8 0, i8* %handleDefault, align 1, !dbg !5795
  br label %sw.epilog1027, !dbg !5797

sw.epilog1027:                                    ; preds = %sw.bb1025, %sw.bb1026
  br label %sw.epilog1061, !dbg !5798

sw.bb1028:                                        ; preds = %if.end13
  %884 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5799
  %m_startDoctypeDeclHandler1029 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %884, i32 0, i32 19, !dbg !5799
  %885 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler1029, align 8, !dbg !5799
  %tobool1030 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %885, null, !dbg !5799
  br i1 %tobool1030, label %if.then1031, label %if.end1032, !dbg !5801

if.then1031:                                      ; preds = %sw.bb1028
  store i8 0, i8* %handleDefault, align 1, !dbg !5802
  br label %if.end1032, !dbg !5803

if.end1032:                                       ; preds = %if.then1031, %sw.bb1028
  br label %sw.epilog1061, !dbg !5804

sw.bb1033:                                        ; preds = %if.end13
  %886 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5805
  %keepProcessing1034 = getelementptr inbounds %struct.DTD, %struct.DTD* %886, i32 0, i32 6, !dbg !5807
  %887 = load i8, i8* %keepProcessing1034, align 8, !dbg !5807
  %conv1035 = zext i8 %887 to i32, !dbg !5805
  %tobool1036 = icmp ne i32 %conv1035, 0, !dbg !5805
  br i1 %tobool1036, label %land.lhs.true1037, label %if.end1041, !dbg !5808

land.lhs.true1037:                                ; preds = %sw.bb1033
  %888 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5809
  %m_entityDeclHandler1038 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %888, i32 0, i32 32, !dbg !5809
  %889 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler1038, align 8, !dbg !5809
  %tobool1039 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %889, null, !dbg !5809
  br i1 %tobool1039, label %if.then1040, label %if.end1041, !dbg !5811

if.then1040:                                      ; preds = %land.lhs.true1037
  store i8 0, i8* %handleDefault, align 1, !dbg !5812
  br label %if.end1041, !dbg !5813

if.end1041:                                       ; preds = %if.then1040, %land.lhs.true1037, %sw.bb1033
  br label %sw.epilog1061, !dbg !5814

sw.bb1042:                                        ; preds = %if.end13
  %890 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5815
  %m_notationDeclHandler1043 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %890, i32 0, i32 22, !dbg !5815
  %891 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler1043, align 8, !dbg !5815
  %tobool1044 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %891, null, !dbg !5815
  br i1 %tobool1044, label %if.then1045, label %if.end1046, !dbg !5817

if.then1045:                                      ; preds = %sw.bb1042
  store i8 0, i8* %handleDefault, align 1, !dbg !5818
  br label %if.end1046, !dbg !5819

if.end1046:                                       ; preds = %if.then1045, %sw.bb1042
  br label %sw.epilog1061, !dbg !5820

sw.bb1047:                                        ; preds = %if.end13
  %892 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !5821
  %keepProcessing1048 = getelementptr inbounds %struct.DTD, %struct.DTD* %892, i32 0, i32 6, !dbg !5823
  %893 = load i8, i8* %keepProcessing1048, align 8, !dbg !5823
  %conv1049 = zext i8 %893 to i32, !dbg !5821
  %tobool1050 = icmp ne i32 %conv1049, 0, !dbg !5821
  br i1 %tobool1050, label %land.lhs.true1051, label %if.end1055, !dbg !5824

land.lhs.true1051:                                ; preds = %sw.bb1047
  %894 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5825
  %m_attlistDeclHandler1052 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %894, i32 0, i32 31, !dbg !5825
  %895 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler1052, align 8, !dbg !5825
  %tobool1053 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %895, null, !dbg !5825
  br i1 %tobool1053, label %if.then1054, label %if.end1055, !dbg !5827

if.then1054:                                      ; preds = %land.lhs.true1051
  store i8 0, i8* %handleDefault, align 1, !dbg !5828
  br label %if.end1055, !dbg !5829

if.end1055:                                       ; preds = %if.then1054, %land.lhs.true1051, %sw.bb1047
  br label %sw.epilog1061, !dbg !5830

sw.bb1056:                                        ; preds = %if.end13
  %896 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5831
  %m_elementDeclHandler1057 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %896, i32 0, i32 30, !dbg !5831
  %897 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1057, align 8, !dbg !5831
  %tobool1058 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %897, null, !dbg !5831
  br i1 %tobool1058, label %if.then1059, label %if.end1060, !dbg !5833

if.then1059:                                      ; preds = %sw.bb1056
  store i8 0, i8* %handleDefault, align 1, !dbg !5834
  br label %if.end1060, !dbg !5835

if.end1060:                                       ; preds = %if.then1059, %sw.bb1056
  br label %sw.epilog1061, !dbg !5836

sw.epilog1061:                                    ; preds = %if.end13, %if.end1060, %if.end1055, %if.end1046, %if.end1041, %if.end1032, %sw.epilog1027, %if.end1024, %if.end1019, %if.end1014, %if.end975, %if.end925, %if.end907, %if.end881, %if.end868, %if.end850, %if.end802, %if.end778, %if.end709, %if.end695, %if.end669, %if.end641, %sw.bb625, %if.end624, %if.then571, %if.end567, %if.end514, %if.end489, %if.end455, %if.end420, %if.end367, %if.end261, %if.end180, %if.end151, %if.end112, %if.end96, %if.end43, %if.end32, %if.end20
  %898 = load i8, i8* %handleDefault, align 1, !dbg !5837
  %conv1062 = zext i8 %898 to i32, !dbg !5837
  %tobool1063 = icmp ne i32 %conv1062, 0, !dbg !5837
  br i1 %tobool1063, label %land.lhs.true1064, label %if.end1067, !dbg !5839

land.lhs.true1064:                                ; preds = %sw.epilog1061
  %899 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5840
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %899, i32 0, i32 18, !dbg !5840
  %900 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !5840
  %tobool1065 = icmp ne void (i8*, i8*, i32)* %900, null, !dbg !5840
  br i1 %tobool1065, label %if.then1066, label %if.end1067, !dbg !5842

if.then1066:                                      ; preds = %land.lhs.true1064
  %901 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5843
  %902 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5844
  %903 = load i8*, i8** %s.addr, align 8, !dbg !5845
  %904 = load i8*, i8** %next.addr, align 8, !dbg !5846
  call void @reportDefault(%struct.XML_ParserStruct* %901, %struct.encoding* %902, i8* %903, i8* %904), !dbg !5847
  br label %if.end1067, !dbg !5847

if.end1067:                                       ; preds = %if.then1066, %land.lhs.true1064, %sw.epilog1061
  %905 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5848
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %905, i32 0, i32 85, !dbg !5848
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !5848
  %906 = load i32, i32* %parsing, align 8, !dbg !5848
  switch i32 %906, label %sw.default1070 [
    i32 3, label %sw.bb1068
    i32 2, label %sw.bb1069
  ], !dbg !5849

sw.bb1068:                                        ; preds = %if.end1067
  %907 = load i8*, i8** %next.addr, align 8, !dbg !5850
  %908 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !5852
  store i8* %907, i8** %908, align 8, !dbg !5853
  store i32 0, i32* %retval, align 4, !dbg !5854
  br label %return, !dbg !5854

sw.bb1069:                                        ; preds = %if.end1067
  store i32 35, i32* %retval, align 4, !dbg !5855
  br label %return, !dbg !5855

sw.default1070:                                   ; preds = %if.end1067
  %909 = load i8*, i8** %next.addr, align 8, !dbg !5856
  store i8* %909, i8** %s.addr, align 8, !dbg !5857
  %910 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5858
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %910, i32 0, i32 0, !dbg !5858
  %arrayidx1071 = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 0, !dbg !5858
  %911 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx1071, align 8, !dbg !5858
  %912 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !5858
  %913 = load i8*, i8** %s.addr, align 8, !dbg !5858
  %914 = load i8*, i8** %end.addr, align 8, !dbg !5858
  %call1072 = call i32 %911(%struct.encoding* %912, i8* %913, i8* %914, i8** %next.addr), !dbg !5858
  store i32 %call1072, i32* %tok.addr, align 4, !dbg !5859
  br label %sw.epilog1073, !dbg !5860

sw.epilog1073:                                    ; preds = %sw.default1070
  br label %for.cond, !dbg !5861

return:                                           ; preds = %sw.bb1069, %sw.bb1068, %if.then1023, %if.then1018, %if.then1004, %if.then959, %if.then947, %if.then893, %if.then877, %if.then867, %if.then812, %if.then788, %if.then767, %if.then754, %if.then743, %if.then728, %sw.default714, %sw.bb713, %sw.bb712, %if.then688, %if.then662, %if.then646, %if.then635, %if.then587, %if.then581, %if.then529, %if.then477, %if.then454, %if.then439, %if.then418, %if.then346, %if.then291, %if.then278, %if.then241, %if.then191, %if.then175, %if.then170, %if.then125, %if.then119, %sw.bb113, %if.then86, %if.then70, %if.then58, %if.then50, %if.then28, %if.then19, %sw.bb11, %sw.bb9, %sw.bb8, %sw.bb, %if.then6
  %915 = load i32, i32* %retval, align 4, !dbg !5863
  ret i32 %915, !dbg !5863
}

; Function Attrs: nounwind uwtable
define internal i32 @processXmlDecl(%struct.XML_ParserStruct* %parser, i32 %isGeneralTextEntity, i8* %s, i8* %next) #0 !dbg !879 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %isGeneralTextEntity.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %next.addr = alloca i8*, align 8
  %encodingName = alloca i8*, align 8
  %storedEncName = alloca i8*, align 8
  %newEncoding = alloca %struct.encoding*, align 8
  %version = alloca i8*, align 8
  %versionend = alloca i8*, align 8
  %storedversion = alloca i8*, align 8
  %standalone = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !5864, metadata !1076), !dbg !5865
  store i32 %isGeneralTextEntity, i32* %isGeneralTextEntity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %isGeneralTextEntity.addr, metadata !5866, metadata !1076), !dbg !5867
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !5868, metadata !1076), !dbg !5869
  store i8* %next, i8** %next.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %next.addr, metadata !5870, metadata !1076), !dbg !5871
  call void @llvm.dbg.declare(metadata i8** %encodingName, metadata !5872, metadata !1076), !dbg !5873
  store i8* null, i8** %encodingName, align 8, !dbg !5873
  call void @llvm.dbg.declare(metadata i8** %storedEncName, metadata !5874, metadata !1076), !dbg !5875
  store i8* null, i8** %storedEncName, align 8, !dbg !5875
  call void @llvm.dbg.declare(metadata %struct.encoding** %newEncoding, metadata !5876, metadata !1076), !dbg !5877
  store %struct.encoding* null, %struct.encoding** %newEncoding, align 8, !dbg !5877
  call void @llvm.dbg.declare(metadata i8** %version, metadata !5878, metadata !1076), !dbg !5879
  store i8* null, i8** %version, align 8, !dbg !5879
  call void @llvm.dbg.declare(metadata i8** %versionend, metadata !5880, metadata !1076), !dbg !5881
  call void @llvm.dbg.declare(metadata i8** %storedversion, metadata !5882, metadata !1076), !dbg !5883
  store i8* null, i8** %storedversion, align 8, !dbg !5883
  call void @llvm.dbg.declare(metadata i32* %standalone, metadata !5884, metadata !1076), !dbg !5885
  store i32 -1, i32* %standalone, align 4, !dbg !5885
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5886
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 38, !dbg !5886
  %1 = load i8, i8* %m_ns, align 8, !dbg !5886
  %conv = zext i8 %1 to i32, !dbg !5886
  %tobool = icmp ne i32 %conv, 0, !dbg !5886
  %cond = select i1 %tobool, i32 (i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*)* @XmlParseXmlDecl, i32 (i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*)* @XmlParseXmlDecl, !dbg !5886
  %2 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !5888
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5889
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !5889
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !5889
  %5 = load i8*, i8** %s.addr, align 8, !dbg !5890
  %6 = load i8*, i8** %next.addr, align 8, !dbg !5891
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5892
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 47, !dbg !5892
  %call = call i32 %cond(i32 %2, %struct.encoding* %4, i8* %5, i8* %6, i8** %m_eventPtr, i8** %version, i8** %versionend, i8** %encodingName, %struct.encoding** %newEncoding, i32* %standalone), !dbg !5893
  %tobool1 = icmp ne i32 %call, 0, !dbg !5893
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5894

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !5895
  %tobool2 = icmp ne i32 %8, 0, !dbg !5895
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5898

if.then3:                                         ; preds = %if.then
  store i32 31, i32* %retval, align 4, !dbg !5899
  br label %return, !dbg !5899

if.else:                                          ; preds = %if.then
  store i32 30, i32* %retval, align 4, !dbg !5900
  br label %return, !dbg !5900

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %isGeneralTextEntity.addr, align 4, !dbg !5901
  %tobool4 = icmp ne i32 %9, 0, !dbg !5901
  br i1 %tobool4, label %if.end8, label %land.lhs.true, !dbg !5903

land.lhs.true:                                    ; preds = %if.end
  %10 = load i32, i32* %standalone, align 4, !dbg !5904
  %cmp = icmp eq i32 %10, 1, !dbg !5906
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !5907

if.then6:                                         ; preds = %land.lhs.true
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5908
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 65, !dbg !5908
  %12 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !5908
  %standalone7 = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 8, !dbg !5910
  store i8 1, i8* %standalone7, align 2, !dbg !5911
  br label %if.end8, !dbg !5912

if.end8:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5913
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 33, !dbg !5913
  %14 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8, !dbg !5913
  %tobool9 = icmp ne void (i8*, i8*, i8*, i32)* %14, null, !dbg !5913
  br i1 %tobool9, label %if.then10, label %if.else38, !dbg !5915

if.then10:                                        ; preds = %if.end8
  %15 = load i8*, i8** %encodingName, align 8, !dbg !5916
  %cmp11 = icmp ne i8* %15, null, !dbg !5919
  br i1 %cmp11, label %if.then13, label %if.end24, !dbg !5920

if.then13:                                        ; preds = %if.then10
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5921
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 80, !dbg !5921
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5923
  %m_encoding14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 34, !dbg !5923
  %18 = load %struct.encoding*, %struct.encoding** %m_encoding14, align 8, !dbg !5923
  %19 = load i8*, i8** %encodingName, align 8, !dbg !5924
  %20 = load i8*, i8** %encodingName, align 8, !dbg !5925
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5926
  %m_encoding15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 34, !dbg !5926
  %22 = load %struct.encoding*, %struct.encoding** %m_encoding15, align 8, !dbg !5926
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %22, i32 0, i32 4, !dbg !5926
  %23 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !5926
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5926
  %m_encoding16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 34, !dbg !5926
  %25 = load %struct.encoding*, %struct.encoding** %m_encoding16, align 8, !dbg !5926
  %26 = load i8*, i8** %encodingName, align 8, !dbg !5926
  %call17 = call i32 %23(%struct.encoding* %25, i8* %26), !dbg !5926
  %idx.ext = sext i32 %call17 to i64, !dbg !5927
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !5927
  %call18 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool, %struct.encoding* %18, i8* %19, i8* %add.ptr), !dbg !5928
  store i8* %call18, i8** %storedEncName, align 8, !dbg !5929
  %27 = load i8*, i8** %storedEncName, align 8, !dbg !5930
  %tobool19 = icmp ne i8* %27, null, !dbg !5930
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !5932

if.then20:                                        ; preds = %if.then13
  store i32 1, i32* %retval, align 4, !dbg !5933
  br label %return, !dbg !5933

if.end21:                                         ; preds = %if.then13
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5934
  %m_temp2Pool22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 80, !dbg !5934
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool22, i32 0, i32 3, !dbg !5934
  %29 = load i8*, i8** %ptr, align 8, !dbg !5934
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5934
  %m_temp2Pool23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 80, !dbg !5934
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool23, i32 0, i32 4, !dbg !5934
  store i8* %29, i8** %start, align 8, !dbg !5934
  br label %if.end24, !dbg !5935

if.end24:                                         ; preds = %if.end21, %if.then10
  %31 = load i8*, i8** %version, align 8, !dbg !5936
  %tobool25 = icmp ne i8* %31, null, !dbg !5936
  br i1 %tobool25, label %if.then26, label %if.end36, !dbg !5938

if.then26:                                        ; preds = %if.end24
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5939
  %m_temp2Pool27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 80, !dbg !5939
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5941
  %m_encoding28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 34, !dbg !5941
  %34 = load %struct.encoding*, %struct.encoding** %m_encoding28, align 8, !dbg !5941
  %35 = load i8*, i8** %version, align 8, !dbg !5942
  %36 = load i8*, i8** %versionend, align 8, !dbg !5943
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5944
  %m_encoding29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 34, !dbg !5944
  %38 = load %struct.encoding*, %struct.encoding** %m_encoding29, align 8, !dbg !5944
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %38, i32 0, i32 13, !dbg !5945
  %39 = load i32, i32* %minBytesPerChar, align 8, !dbg !5945
  %idx.ext30 = sext i32 %39 to i64, !dbg !5946
  %idx.neg = sub i64 0, %idx.ext30, !dbg !5946
  %add.ptr31 = getelementptr inbounds i8, i8* %36, i64 %idx.neg, !dbg !5946
  %call32 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool27, %struct.encoding* %34, i8* %35, i8* %add.ptr31), !dbg !5947
  store i8* %call32, i8** %storedversion, align 8, !dbg !5948
  %40 = load i8*, i8** %storedversion, align 8, !dbg !5949
  %tobool33 = icmp ne i8* %40, null, !dbg !5949
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !5951

if.then34:                                        ; preds = %if.then26
  store i32 1, i32* %retval, align 4, !dbg !5952
  br label %return, !dbg !5952

if.end35:                                         ; preds = %if.then26
  br label %if.end36, !dbg !5953

if.end36:                                         ; preds = %if.end35, %if.end24
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5954
  %m_xmlDeclHandler37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 33, !dbg !5954
  %42 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler37, align 8, !dbg !5954
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5955
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 1, !dbg !5955
  %44 = load i8*, i8** %m_handlerArg, align 8, !dbg !5955
  %45 = load i8*, i8** %storedversion, align 8, !dbg !5956
  %46 = load i8*, i8** %storedEncName, align 8, !dbg !5957
  %47 = load i32, i32* %standalone, align 4, !dbg !5958
  call void %42(i8* %44, i8* %45, i8* %46, i32 %47), !dbg !5954
  br label %if.end43, !dbg !5959

if.else38:                                        ; preds = %if.end8
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5960
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 18, !dbg !5960
  %49 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !5960
  %tobool39 = icmp ne void (i8*, i8*, i32)* %49, null, !dbg !5960
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !5962

if.then40:                                        ; preds = %if.else38
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5963
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5964
  %m_encoding41 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 34, !dbg !5964
  %52 = load %struct.encoding*, %struct.encoding** %m_encoding41, align 8, !dbg !5964
  %53 = load i8*, i8** %s.addr, align 8, !dbg !5965
  %54 = load i8*, i8** %next.addr, align 8, !dbg !5966
  call void @reportDefault(%struct.XML_ParserStruct* %50, %struct.encoding* %52, i8* %53, i8* %54), !dbg !5967
  br label %if.end42, !dbg !5967

if.end42:                                         ; preds = %if.then40, %if.else38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end36
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5968
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 37, !dbg !5968
  %56 = load i8*, i8** %m_protocolEncodingName, align 8, !dbg !5968
  %cmp44 = icmp eq i8* %56, null, !dbg !5970
  br i1 %cmp44, label %if.then46, label %if.end85, !dbg !5971

if.then46:                                        ; preds = %if.end43
  %57 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8, !dbg !5972
  %tobool47 = icmp ne %struct.encoding* %57, null, !dbg !5972
  br i1 %tobool47, label %if.then48, label %if.else58, !dbg !5975

if.then48:                                        ; preds = %if.then46
  %58 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8, !dbg !5976
  %minBytesPerChar49 = getelementptr inbounds %struct.encoding, %struct.encoding* %58, i32 0, i32 13, !dbg !5979
  %59 = load i32, i32* %minBytesPerChar49, align 8, !dbg !5979
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5980
  %m_encoding50 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 34, !dbg !5980
  %61 = load %struct.encoding*, %struct.encoding** %m_encoding50, align 8, !dbg !5980
  %minBytesPerChar51 = getelementptr inbounds %struct.encoding, %struct.encoding* %61, i32 0, i32 13, !dbg !5981
  %62 = load i32, i32* %minBytesPerChar51, align 8, !dbg !5981
  %cmp52 = icmp ne i32 %59, %62, !dbg !5982
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !5983

if.then54:                                        ; preds = %if.then48
  %63 = load i8*, i8** %encodingName, align 8, !dbg !5984
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5986
  %m_eventPtr55 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 47, !dbg !5986
  store i8* %63, i8** %m_eventPtr55, align 8, !dbg !5987
  store i32 19, i32* %retval, align 4, !dbg !5988
  br label %return, !dbg !5988

if.end56:                                         ; preds = %if.then48
  %65 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8, !dbg !5989
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !5990
  %m_encoding57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 34, !dbg !5990
  store %struct.encoding* %65, %struct.encoding** %m_encoding57, align 8, !dbg !5991
  br label %if.end84, !dbg !5992

if.else58:                                        ; preds = %if.then46
  %67 = load i8*, i8** %encodingName, align 8, !dbg !5993
  %tobool59 = icmp ne i8* %67, null, !dbg !5993
  br i1 %tobool59, label %if.then60, label %if.end83, !dbg !5995

if.then60:                                        ; preds = %if.else58
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5996, metadata !1076), !dbg !5998
  %68 = load i8*, i8** %storedEncName, align 8, !dbg !5999
  %tobool61 = icmp ne i8* %68, null, !dbg !5999
  br i1 %tobool61, label %if.end75, label %if.then62, !dbg !6001

if.then62:                                        ; preds = %if.then60
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6002
  %m_temp2Pool63 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 80, !dbg !6002
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6004
  %m_encoding64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 34, !dbg !6004
  %71 = load %struct.encoding*, %struct.encoding** %m_encoding64, align 8, !dbg !6004
  %72 = load i8*, i8** %encodingName, align 8, !dbg !6005
  %73 = load i8*, i8** %encodingName, align 8, !dbg !6006
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6007
  %m_encoding65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 34, !dbg !6007
  %75 = load %struct.encoding*, %struct.encoding** %m_encoding65, align 8, !dbg !6007
  %nameLength66 = getelementptr inbounds %struct.encoding, %struct.encoding* %75, i32 0, i32 4, !dbg !6007
  %76 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength66, align 8, !dbg !6007
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6007
  %m_encoding67 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 34, !dbg !6007
  %78 = load %struct.encoding*, %struct.encoding** %m_encoding67, align 8, !dbg !6007
  %79 = load i8*, i8** %encodingName, align 8, !dbg !6007
  %call68 = call i32 %76(%struct.encoding* %78, i8* %79), !dbg !6007
  %idx.ext69 = sext i32 %call68 to i64, !dbg !6008
  %add.ptr70 = getelementptr inbounds i8, i8* %73, i64 %idx.ext69, !dbg !6008
  %call71 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool63, %struct.encoding* %71, i8* %72, i8* %add.ptr70), !dbg !6009
  store i8* %call71, i8** %storedEncName, align 8, !dbg !6010
  %80 = load i8*, i8** %storedEncName, align 8, !dbg !6011
  %tobool72 = icmp ne i8* %80, null, !dbg !6011
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !6013

if.then73:                                        ; preds = %if.then62
  store i32 1, i32* %retval, align 4, !dbg !6014
  br label %return, !dbg !6014

if.end74:                                         ; preds = %if.then62
  br label %if.end75, !dbg !6015

if.end75:                                         ; preds = %if.end74, %if.then60
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6016
  %82 = load i8*, i8** %storedEncName, align 8, !dbg !6017
  %call76 = call i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %81, i8* %82), !dbg !6018
  store i32 %call76, i32* %result, align 4, !dbg !6019
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6020
  %m_temp2Pool77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 80, !dbg !6020
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool77), !dbg !6021
  %84 = load i32, i32* %result, align 4, !dbg !6022
  %cmp78 = icmp eq i32 %84, 18, !dbg !6024
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !6025

if.then80:                                        ; preds = %if.end75
  %85 = load i8*, i8** %encodingName, align 8, !dbg !6026
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6027
  %m_eventPtr81 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 47, !dbg !6027
  store i8* %85, i8** %m_eventPtr81, align 8, !dbg !6028
  br label %if.end82, !dbg !6027

if.end82:                                         ; preds = %if.then80, %if.end75
  %87 = load i32, i32* %result, align 4, !dbg !6029
  store i32 %87, i32* %retval, align 4, !dbg !6030
  br label %return, !dbg !6030

if.end83:                                         ; preds = %if.else58
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end56
  br label %if.end85, !dbg !6031

if.end85:                                         ; preds = %if.end84, %if.end43
  %88 = load i8*, i8** %storedEncName, align 8, !dbg !6032
  %tobool86 = icmp ne i8* %88, null, !dbg !6032
  br i1 %tobool86, label %if.then88, label %lor.lhs.false, !dbg !6034

lor.lhs.false:                                    ; preds = %if.end85
  %89 = load i8*, i8** %storedversion, align 8, !dbg !6035
  %tobool87 = icmp ne i8* %89, null, !dbg !6035
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !6037

if.then88:                                        ; preds = %lor.lhs.false, %if.end85
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6038
  %m_temp2Pool89 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 80, !dbg !6038
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool89), !dbg !6039
  br label %if.end90, !dbg !6039

if.end90:                                         ; preds = %if.then88, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !6040
  br label %return, !dbg !6040

return:                                           ; preds = %if.end90, %if.end82, %if.then73, %if.then54, %if.then34, %if.then20, %if.else, %if.then3
  %91 = load i32, i32* %retval, align 4, !dbg !6041
  ret i32 %91, !dbg !6041
}

; Function Attrs: nounwind uwtable
define internal i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 !dbg !882 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !6042, metadata !1076), !dbg !6043
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6044, metadata !1076), !dbg !6045
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6046, metadata !1076), !dbg !6047
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6048, metadata !1076), !dbg !6049
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6050
  %1 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6052
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !6053
  %3 = load i8*, i8** %end.addr, align 8, !dbg !6054
  %call = call i8* @poolAppend(%struct.STRING_POOL* %0, %struct.encoding* %1, i8* %2, i8* %3), !dbg !6055
  %tobool = icmp ne i8* %call, null, !dbg !6055
  br i1 %tobool, label %if.end, label %if.then, !dbg !6056

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6057
  br label %return, !dbg !6057

if.end:                                           ; preds = %entry
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6058
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 3, !dbg !6060
  %5 = load i8*, i8** %ptr1, align 8, !dbg !6060
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6061
  %end2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 2, !dbg !6062
  %7 = load i8*, i8** %end2, align 8, !dbg !6062
  %cmp = icmp eq i8* %5, %7, !dbg !6063
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !6064

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6065
  %call3 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %8), !dbg !6067
  %tobool4 = icmp ne i8 %call3, 0, !dbg !6067
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6068

if.then5:                                         ; preds = %land.lhs.true
  store i8* null, i8** %retval, align 8, !dbg !6069
  br label %return, !dbg !6069

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6070
  %ptr7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3, !dbg !6071
  %10 = load i8*, i8** %ptr7, align 8, !dbg !6072
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6072
  store i8* %incdec.ptr, i8** %ptr7, align 8, !dbg !6072
  store i8 0, i8* %10, align 1, !dbg !6073
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6074
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4, !dbg !6075
  %12 = load i8*, i8** %start, align 8, !dbg !6075
  store i8* %12, i8** %retval, align 8, !dbg !6076
  br label %return, !dbg !6076

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !6077
  ret i8* %13, !dbg !6077
}

; Function Attrs: nounwind uwtable
define internal void @normalizePublicId(i8* %publicId) #0 !dbg !885 {
entry:
  %publicId.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %s = alloca i8*, align 8
  store i8* %publicId, i8** %publicId.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %publicId.addr, metadata !6078, metadata !1076), !dbg !6079
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6080, metadata !1076), !dbg !6081
  %0 = load i8*, i8** %publicId.addr, align 8, !dbg !6082
  store i8* %0, i8** %p, align 8, !dbg !6081
  call void @llvm.dbg.declare(metadata i8** %s, metadata !6083, metadata !1076), !dbg !6084
  %1 = load i8*, i8** %publicId.addr, align 8, !dbg !6085
  store i8* %1, i8** %s, align 8, !dbg !6087
  br label %for.cond, !dbg !6088

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %s, align 8, !dbg !6089
  %3 = load i8, i8* %2, align 1, !dbg !6092
  %tobool = icmp ne i8 %3, 0, !dbg !6093
  br i1 %tobool, label %for.body, label %for.end, !dbg !6093

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s, align 8, !dbg !6094
  %5 = load i8, i8* %4, align 1, !dbg !6096
  %conv = sext i8 %5 to i32, !dbg !6096
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 13, label %sw.bb
    i32 10, label %sw.bb
  ], !dbg !6097

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  %6 = load i8*, i8** %p, align 8, !dbg !6098
  %7 = load i8*, i8** %publicId.addr, align 8, !dbg !6101
  %cmp = icmp ne i8* %6, %7, !dbg !6102
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6103

land.lhs.true:                                    ; preds = %sw.bb
  %8 = load i8*, i8** %p, align 8, !dbg !6104
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 -1, !dbg !6104
  %9 = load i8, i8* %arrayidx, align 1, !dbg !6104
  %conv2 = sext i8 %9 to i32, !dbg !6104
  %cmp3 = icmp ne i32 %conv2, 32, !dbg !6106
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6107

if.then:                                          ; preds = %land.lhs.true
  %10 = load i8*, i8** %p, align 8, !dbg !6108
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6108
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6108
  store i8 32, i8* %10, align 1, !dbg !6109
  br label %if.end, !dbg !6110

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb
  br label %sw.epilog, !dbg !6111

sw.default:                                       ; preds = %for.body
  %11 = load i8*, i8** %s, align 8, !dbg !6112
  %12 = load i8, i8* %11, align 1, !dbg !6113
  %13 = load i8*, i8** %p, align 8, !dbg !6114
  %incdec.ptr5 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6114
  store i8* %incdec.ptr5, i8** %p, align 8, !dbg !6114
  store i8 %12, i8* %13, align 1, !dbg !6115
  br label %sw.epilog, !dbg !6116

sw.epilog:                                        ; preds = %sw.default, %if.end
  br label %for.inc, !dbg !6117

for.inc:                                          ; preds = %sw.epilog
  %14 = load i8*, i8** %s, align 8, !dbg !6118
  %incdec.ptr6 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6118
  store i8* %incdec.ptr6, i8** %s, align 8, !dbg !6118
  br label %for.cond, !dbg !6120

for.end:                                          ; preds = %for.cond
  %15 = load i8*, i8** %p, align 8, !dbg !6121
  %16 = load i8*, i8** %publicId.addr, align 8, !dbg !6123
  %cmp7 = icmp ne i8* %15, %16, !dbg !6124
  br i1 %cmp7, label %land.lhs.true9, label %if.end16, !dbg !6125

land.lhs.true9:                                   ; preds = %for.end
  %17 = load i8*, i8** %p, align 8, !dbg !6126
  %arrayidx10 = getelementptr inbounds i8, i8* %17, i64 -1, !dbg !6126
  %18 = load i8, i8* %arrayidx10, align 1, !dbg !6126
  %conv11 = sext i8 %18 to i32, !dbg !6126
  %cmp12 = icmp eq i32 %conv11, 32, !dbg !6128
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !6129

if.then14:                                        ; preds = %land.lhs.true9
  %19 = load i8*, i8** %p, align 8, !dbg !6130
  %incdec.ptr15 = getelementptr inbounds i8, i8* %19, i32 -1, !dbg !6130
  store i8* %incdec.ptr15, i8** %p, align 8, !dbg !6130
  br label %if.end16, !dbg !6130

if.end16:                                         ; preds = %if.then14, %land.lhs.true9, %for.end
  %20 = load i8*, i8** %p, align 8, !dbg !6131
  store i8 0, i8* %20, align 1, !dbg !6132
  ret void, !dbg !6133
}

; Function Attrs: nounwind uwtable
define internal i32 @contentProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 !dbg !888 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !6134, metadata !1076), !dbg !6135
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !6136, metadata !1076), !dbg !6137
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6138, metadata !1076), !dbg !6139
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !6140, metadata !1076), !dbg !6141
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6142, metadata !1076), !dbg !6143
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6144
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6145
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34, !dbg !6145
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !6145
  %3 = load i8*, i8** %start.addr, align 8, !dbg !6146
  %4 = load i8*, i8** %end.addr, align 8, !dbg !6147
  %5 = load i8**, i8*** %endPtr.addr, align 8, !dbg !6148
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6149
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 85, !dbg !6149
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !6149
  %7 = load i8, i8* %finalBuffer, align 4, !dbg !6149
  %tobool = icmp ne i8 %7, 0, !dbg !6150
  %lnot = xor i1 %tobool, true, !dbg !6150
  %lnot.ext = zext i1 %lnot to i32, !dbg !6150
  %conv = trunc i32 %lnot.ext to i8, !dbg !6151
  %call = call i32 @doContent(%struct.XML_ParserStruct* %0, i32 0, %struct.encoding* %2, i8* %3, i8* %4, i8** %5, i8 zeroext %conv), !dbg !6152
  store i32 %call, i32* %result, align 4, !dbg !6143
  %8 = load i32, i32* %result, align 4, !dbg !6153
  %cmp = icmp eq i32 %8, 0, !dbg !6155
  br i1 %cmp, label %if.then, label %if.end5, !dbg !6156

if.then:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6157
  %call2 = call zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %9), !dbg !6160
  %tobool3 = icmp ne i8 %call2, 0, !dbg !6160
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !6161

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !6162
  br label %return, !dbg !6162

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !6163

if.end5:                                          ; preds = %if.end, %entry
  %10 = load i32, i32* %result, align 4, !dbg !6164
  store i32 %10, i32* %retval, align 4, !dbg !6165
  br label %return, !dbg !6165

return:                                           ; preds = %if.end5, %if.then4
  %11 = load i32, i32* %retval, align 4, !dbg !6166
  ret i32 %11, !dbg !6166
}

; Function Attrs: nounwind uwtable
define internal %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 !dbg !931 {
entry:
  %retval = alloca %struct.ELEMENT_TYPE*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %name = alloca i8*, align 8
  %ret = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !6167, metadata !1076), !dbg !6168
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6169, metadata !1076), !dbg !6170
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6171, metadata !1076), !dbg !6172
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6173, metadata !1076), !dbg !6174
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !6175, metadata !1076), !dbg !6176
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6177
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !6177
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !6177
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !6176
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6178, metadata !1076), !dbg !6179
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6180
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 4, !dbg !6181
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6182
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !6183
  %5 = load i8*, i8** %end.addr, align 8, !dbg !6184
  %call = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %3, i8* %4, i8* %5), !dbg !6185
  store i8* %call, i8** %name, align 8, !dbg !6179
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %ret, metadata !6186, metadata !1076), !dbg !6187
  %6 = load i8*, i8** %name, align 8, !dbg !6188
  %tobool = icmp ne i8* %6, null, !dbg !6188
  br i1 %tobool, label %if.end, label %if.then, !dbg !6190

if.then:                                          ; preds = %entry
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval, align 8, !dbg !6191
  br label %return, !dbg !6191

if.end:                                           ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6192
  %8 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6193
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 1, !dbg !6194
  %9 = load i8*, i8** %name, align 8, !dbg !6195
  %call1 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %7, %struct.HASH_TABLE* %elementTypes, i8* %9, i64 40), !dbg !6196
  %10 = bitcast %struct.NAMED* %call1 to %struct.ELEMENT_TYPE*, !dbg !6197
  store %struct.ELEMENT_TYPE* %10, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !6198
  %11 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !6199
  %tobool2 = icmp ne %struct.ELEMENT_TYPE* %11, null, !dbg !6199
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6201

if.then3:                                         ; preds = %if.end
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval, align 8, !dbg !6202
  br label %return, !dbg !6202

if.end4:                                          ; preds = %if.end
  %12 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !6203
  %name5 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %12, i32 0, i32 0, !dbg !6205
  %13 = load i8*, i8** %name5, align 8, !dbg !6205
  %14 = load i8*, i8** %name, align 8, !dbg !6206
  %cmp = icmp ne i8* %13, %14, !dbg !6207
  br i1 %cmp, label %if.then6, label %if.else, !dbg !6208

if.then6:                                         ; preds = %if.end4
  %15 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6209
  %pool7 = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 4, !dbg !6209
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool7, i32 0, i32 4, !dbg !6209
  %16 = load i8*, i8** %start, align 8, !dbg !6209
  %17 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6209
  %pool8 = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 4, !dbg !6209
  %ptr9 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool8, i32 0, i32 3, !dbg !6209
  store i8* %16, i8** %ptr9, align 8, !dbg !6209
  br label %if.end18, !dbg !6209

if.else:                                          ; preds = %if.end4
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6210
  %pool10 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 4, !dbg !6210
  %ptr11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool10, i32 0, i32 3, !dbg !6210
  %19 = load i8*, i8** %ptr11, align 8, !dbg !6210
  %20 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6210
  %pool12 = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 4, !dbg !6210
  %start13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool12, i32 0, i32 4, !dbg !6210
  store i8* %19, i8** %start13, align 8, !dbg !6210
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6212
  %22 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !6214
  %call14 = call i32 @setElementTypePrefix(%struct.XML_ParserStruct* %21, %struct.ELEMENT_TYPE* %22), !dbg !6215
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6215
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !6216

if.then16:                                        ; preds = %if.else
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval, align 8, !dbg !6217
  br label %return, !dbg !6217

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then6
  %23 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8, !dbg !6218
  store %struct.ELEMENT_TYPE* %23, %struct.ELEMENT_TYPE** %retval, align 8, !dbg !6219
  br label %return, !dbg !6219

return:                                           ; preds = %if.end18, %if.then16, %if.then3, %if.then
  %24 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %retval, align 8, !dbg !6220
  ret %struct.ELEMENT_TYPE* %24, !dbg !6220
}

; Function Attrs: nounwind uwtable
define internal %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 !dbg !934 {
entry:
  %retval = alloca %struct.attribute_id*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %id = alloca %struct.attribute_id*, align 8
  %name = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !6221, metadata !1076), !dbg !6222
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6223, metadata !1076), !dbg !6224
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !6225, metadata !1076), !dbg !6226
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6227, metadata !1076), !dbg !6228
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !6229, metadata !1076), !dbg !6230
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6231
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !6231
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !6231
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !6230
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %id, metadata !6232, metadata !1076), !dbg !6233
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6234, metadata !1076), !dbg !6235
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6236
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 4, !dbg !6236
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool, i32 0, i32 3, !dbg !6236
  %3 = load i8*, i8** %ptr, align 8, !dbg !6236
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6236
  %pool1 = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 4, !dbg !6236
  %end2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool1, i32 0, i32 2, !dbg !6236
  %5 = load i8*, i8** %end2, align 8, !dbg !6236
  %cmp = icmp eq i8* %3, %5, !dbg !6236
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6236

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6238
  %pool3 = getelementptr inbounds %struct.DTD, %struct.DTD* %6, i32 0, i32 4, !dbg !6238
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool3), !dbg !6238
  %tobool = icmp ne i8 %call, 0, !dbg !6238
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6240

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then, !dbg !6241

cond.false:                                       ; preds = %land.lhs.true, %entry
  %7 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6243
  %pool4 = getelementptr inbounds %struct.DTD, %struct.DTD* %7, i32 0, i32 4, !dbg !6243
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool4, i32 0, i32 3, !dbg !6243
  %8 = load i8*, i8** %ptr5, align 8, !dbg !6243
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6243
  store i8* %incdec.ptr, i8** %ptr5, align 8, !dbg !6243
  store i8 0, i8* %8, align 1, !dbg !6243
  br i1 true, label %if.end, label %if.then, !dbg !6245

if.then:                                          ; preds = %cond.false, %cond.true
  store %struct.attribute_id* null, %struct.attribute_id** %retval, align 8, !dbg !6246
  br label %return, !dbg !6246

if.end:                                           ; preds = %cond.false, %cond.true
  %9 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6247
  %pool6 = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 4, !dbg !6248
  %10 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6249
  %11 = load i8*, i8** %start.addr, align 8, !dbg !6250
  %12 = load i8*, i8** %end.addr, align 8, !dbg !6251
  %call7 = call i8* @poolStoreString(%struct.STRING_POOL* %pool6, %struct.encoding* %10, i8* %11, i8* %12), !dbg !6252
  store i8* %call7, i8** %name, align 8, !dbg !6253
  %13 = load i8*, i8** %name, align 8, !dbg !6254
  %tobool8 = icmp ne i8* %13, null, !dbg !6254
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6256

if.then9:                                         ; preds = %if.end
  store %struct.attribute_id* null, %struct.attribute_id** %retval, align 8, !dbg !6257
  br label %return, !dbg !6257

if.end10:                                         ; preds = %if.end
  %14 = load i8*, i8** %name, align 8, !dbg !6258
  %incdec.ptr11 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6258
  store i8* %incdec.ptr11, i8** %name, align 8, !dbg !6258
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6259
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6260
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 2, !dbg !6261
  %17 = load i8*, i8** %name, align 8, !dbg !6262
  %call12 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %15, %struct.HASH_TABLE* %attributeIds, i8* %17, i64 24), !dbg !6263
  %18 = bitcast %struct.NAMED* %call12 to %struct.attribute_id*, !dbg !6264
  store %struct.attribute_id* %18, %struct.attribute_id** %id, align 8, !dbg !6265
  %19 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6266
  %tobool13 = icmp ne %struct.attribute_id* %19, null, !dbg !6266
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !6268

if.then14:                                        ; preds = %if.end10
  store %struct.attribute_id* null, %struct.attribute_id** %retval, align 8, !dbg !6269
  br label %return, !dbg !6269

if.end15:                                         ; preds = %if.end10
  %20 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6270
  %name16 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %20, i32 0, i32 0, !dbg !6272
  %21 = load i8*, i8** %name16, align 8, !dbg !6272
  %22 = load i8*, i8** %name, align 8, !dbg !6273
  %cmp17 = icmp ne i8* %21, %22, !dbg !6274
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !6275

if.then18:                                        ; preds = %if.end15
  %23 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6276
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 4, !dbg !6276
  %start20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool19, i32 0, i32 4, !dbg !6276
  %24 = load i8*, i8** %start20, align 8, !dbg !6276
  %25 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6276
  %pool21 = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 4, !dbg !6276
  %ptr22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool21, i32 0, i32 3, !dbg !6276
  store i8* %24, i8** %ptr22, align 8, !dbg !6276
  br label %if.end152, !dbg !6276

if.else:                                          ; preds = %if.end15
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6277
  %pool23 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 4, !dbg !6277
  %ptr24 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool23, i32 0, i32 3, !dbg !6277
  %27 = load i8*, i8** %ptr24, align 8, !dbg !6277
  %28 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6277
  %pool25 = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 4, !dbg !6277
  %start26 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool25, i32 0, i32 4, !dbg !6277
  store i8* %27, i8** %start26, align 8, !dbg !6277
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6279
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 38, !dbg !6279
  %30 = load i8, i8* %m_ns, align 8, !dbg !6279
  %tobool27 = icmp ne i8 %30, 0, !dbg !6279
  br i1 %tobool27, label %if.else29, label %if.then28, !dbg !6281

if.then28:                                        ; preds = %if.else
  br label %if.end151, !dbg !6282

if.else29:                                        ; preds = %if.else
  %31 = load i8*, i8** %name, align 8, !dbg !6284
  %arrayidx = getelementptr inbounds i8, i8* %31, i64 0, !dbg !6284
  %32 = load i8, i8* %arrayidx, align 1, !dbg !6284
  %conv = sext i8 %32 to i32, !dbg !6284
  %cmp30 = icmp eq i32 %conv, 120, !dbg !6286
  br i1 %cmp30, label %land.lhs.true32, label %if.else71, !dbg !6287

land.lhs.true32:                                  ; preds = %if.else29
  %33 = load i8*, i8** %name, align 8, !dbg !6288
  %arrayidx33 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !6288
  %34 = load i8, i8* %arrayidx33, align 1, !dbg !6288
  %conv34 = sext i8 %34 to i32, !dbg !6288
  %cmp35 = icmp eq i32 %conv34, 109, !dbg !6290
  br i1 %cmp35, label %land.lhs.true37, label %if.else71, !dbg !6291

land.lhs.true37:                                  ; preds = %land.lhs.true32
  %35 = load i8*, i8** %name, align 8, !dbg !6292
  %arrayidx38 = getelementptr inbounds i8, i8* %35, i64 2, !dbg !6292
  %36 = load i8, i8* %arrayidx38, align 1, !dbg !6292
  %conv39 = sext i8 %36 to i32, !dbg !6292
  %cmp40 = icmp eq i32 %conv39, 108, !dbg !6293
  br i1 %cmp40, label %land.lhs.true42, label %if.else71, !dbg !6294

land.lhs.true42:                                  ; preds = %land.lhs.true37
  %37 = load i8*, i8** %name, align 8, !dbg !6295
  %arrayidx43 = getelementptr inbounds i8, i8* %37, i64 3, !dbg !6295
  %38 = load i8, i8* %arrayidx43, align 1, !dbg !6295
  %conv44 = sext i8 %38 to i32, !dbg !6295
  %cmp45 = icmp eq i32 %conv44, 110, !dbg !6296
  br i1 %cmp45, label %land.lhs.true47, label %if.else71, !dbg !6297

land.lhs.true47:                                  ; preds = %land.lhs.true42
  %39 = load i8*, i8** %name, align 8, !dbg !6298
  %arrayidx48 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !6298
  %40 = load i8, i8* %arrayidx48, align 1, !dbg !6298
  %conv49 = sext i8 %40 to i32, !dbg !6298
  %cmp50 = icmp eq i32 %conv49, 115, !dbg !6299
  br i1 %cmp50, label %land.lhs.true52, label %if.else71, !dbg !6300

land.lhs.true52:                                  ; preds = %land.lhs.true47
  %41 = load i8*, i8** %name, align 8, !dbg !6301
  %arrayidx53 = getelementptr inbounds i8, i8* %41, i64 5, !dbg !6301
  %42 = load i8, i8* %arrayidx53, align 1, !dbg !6301
  %conv54 = sext i8 %42 to i32, !dbg !6301
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !6302
  br i1 %cmp55, label %if.then61, label %lor.lhs.false, !dbg !6303

lor.lhs.false:                                    ; preds = %land.lhs.true52
  %43 = load i8*, i8** %name, align 8, !dbg !6304
  %arrayidx57 = getelementptr inbounds i8, i8* %43, i64 5, !dbg !6304
  %44 = load i8, i8* %arrayidx57, align 1, !dbg !6304
  %conv58 = sext i8 %44 to i32, !dbg !6304
  %cmp59 = icmp eq i32 %conv58, 58, !dbg !6306
  br i1 %cmp59, label %if.then61, label %if.else71, !dbg !6307

if.then61:                                        ; preds = %lor.lhs.false, %land.lhs.true52
  %45 = load i8*, i8** %name, align 8, !dbg !6309
  %arrayidx62 = getelementptr inbounds i8, i8* %45, i64 5, !dbg !6309
  %46 = load i8, i8* %arrayidx62, align 1, !dbg !6309
  %conv63 = sext i8 %46 to i32, !dbg !6309
  %cmp64 = icmp eq i32 %conv63, 0, !dbg !6312
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !6313

if.then66:                                        ; preds = %if.then61
  %47 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6314
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %47, i32 0, i32 9, !dbg !6315
  %48 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6316
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %48, i32 0, i32 1, !dbg !6317
  store %struct.prefix* %defaultPrefix, %struct.prefix** %prefix, align 8, !dbg !6318
  br label %if.end70, !dbg !6316

if.else67:                                        ; preds = %if.then61
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6319
  %50 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6320
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 3, !dbg !6321
  %51 = load i8*, i8** %name, align 8, !dbg !6322
  %add.ptr = getelementptr inbounds i8, i8* %51, i64 6, !dbg !6323
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %49, %struct.HASH_TABLE* %prefixes, i8* %add.ptr, i64 16), !dbg !6324
  %52 = bitcast %struct.NAMED* %call68 to %struct.prefix*, !dbg !6325
  %53 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6326
  %prefix69 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %53, i32 0, i32 1, !dbg !6327
  store %struct.prefix* %52, %struct.prefix** %prefix69, align 8, !dbg !6328
  br label %if.end70

if.end70:                                         ; preds = %if.else67, %if.then66
  %54 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6329
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %54, i32 0, i32 3, !dbg !6330
  store i8 1, i8* %xmlns, align 1, !dbg !6331
  br label %if.end150, !dbg !6332

if.else71:                                        ; preds = %lor.lhs.false, %land.lhs.true47, %land.lhs.true42, %land.lhs.true37, %land.lhs.true32, %if.else29
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6333, metadata !1076), !dbg !6335
  store i32 0, i32* %i, align 4, !dbg !6336
  br label %for.cond, !dbg !6338

for.cond:                                         ; preds = %for.inc147, %if.else71
  %55 = load i32, i32* %i, align 4, !dbg !6339
  %idxprom = sext i32 %55 to i64, !dbg !6342
  %56 = load i8*, i8** %name, align 8, !dbg !6342
  %arrayidx72 = getelementptr inbounds i8, i8* %56, i64 %idxprom, !dbg !6342
  %57 = load i8, i8* %arrayidx72, align 1, !dbg !6342
  %tobool73 = icmp ne i8 %57, 0, !dbg !6343
  br i1 %tobool73, label %for.body, label %for.end149, !dbg !6343

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %i, align 4, !dbg !6344
  %idxprom74 = sext i32 %58 to i64, !dbg !6347
  %59 = load i8*, i8** %name, align 8, !dbg !6347
  %arrayidx75 = getelementptr inbounds i8, i8* %59, i64 %idxprom74, !dbg !6347
  %60 = load i8, i8* %arrayidx75, align 1, !dbg !6347
  %conv76 = sext i8 %60 to i32, !dbg !6347
  %cmp77 = icmp eq i32 %conv76, 58, !dbg !6348
  br i1 %cmp77, label %if.then79, label %if.end146, !dbg !6349

if.then79:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6350, metadata !1076), !dbg !6352
  store i32 0, i32* %j, align 4, !dbg !6353
  br label %for.cond80, !dbg !6355

for.cond80:                                       ; preds = %for.inc, %if.then79
  %61 = load i32, i32* %j, align 4, !dbg !6356
  %62 = load i32, i32* %i, align 4, !dbg !6359
  %cmp81 = icmp slt i32 %61, %62, !dbg !6360
  br i1 %cmp81, label %for.body83, label %for.end, !dbg !6361

for.body83:                                       ; preds = %for.cond80
  %63 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6362
  %pool84 = getelementptr inbounds %struct.DTD, %struct.DTD* %63, i32 0, i32 4, !dbg !6362
  %ptr85 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool84, i32 0, i32 3, !dbg !6362
  %64 = load i8*, i8** %ptr85, align 8, !dbg !6362
  %65 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6362
  %pool86 = getelementptr inbounds %struct.DTD, %struct.DTD* %65, i32 0, i32 4, !dbg !6362
  %end87 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool86, i32 0, i32 2, !dbg !6362
  %66 = load i8*, i8** %end87, align 8, !dbg !6362
  %cmp88 = icmp eq i8* %64, %66, !dbg !6362
  br i1 %cmp88, label %land.lhs.true90, label %cond.false95, !dbg !6362

land.lhs.true90:                                  ; preds = %for.body83
  %67 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6365
  %pool91 = getelementptr inbounds %struct.DTD, %struct.DTD* %67, i32 0, i32 4, !dbg !6365
  %call92 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool91), !dbg !6365
  %tobool93 = icmp ne i8 %call92, 0, !dbg !6365
  br i1 %tobool93, label %cond.false95, label %cond.true94, !dbg !6367

cond.true94:                                      ; preds = %land.lhs.true90
  br i1 false, label %if.end102, label %if.then101, !dbg !6368

cond.false95:                                     ; preds = %land.lhs.true90, %for.body83
  %68 = load i32, i32* %j, align 4, !dbg !6370
  %idxprom96 = sext i32 %68 to i64, !dbg !6370
  %69 = load i8*, i8** %name, align 8, !dbg !6370
  %arrayidx97 = getelementptr inbounds i8, i8* %69, i64 %idxprom96, !dbg !6370
  %70 = load i8, i8* %arrayidx97, align 1, !dbg !6370
  %71 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6370
  %pool98 = getelementptr inbounds %struct.DTD, %struct.DTD* %71, i32 0, i32 4, !dbg !6370
  %ptr99 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool98, i32 0, i32 3, !dbg !6370
  %72 = load i8*, i8** %ptr99, align 8, !dbg !6370
  %incdec.ptr100 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !6370
  store i8* %incdec.ptr100, i8** %ptr99, align 8, !dbg !6370
  store i8 %70, i8* %72, align 1, !dbg !6370
  br i1 true, label %if.end102, label %if.then101, !dbg !6372

if.then101:                                       ; preds = %cond.false95, %cond.true94
  store %struct.attribute_id* null, %struct.attribute_id** %retval, align 8, !dbg !6373
  br label %return, !dbg !6373

if.end102:                                        ; preds = %cond.false95, %cond.true94
  br label %for.inc, !dbg !6374

for.inc:                                          ; preds = %if.end102
  %73 = load i32, i32* %j, align 4, !dbg !6375
  %inc = add nsw i32 %73, 1, !dbg !6375
  store i32 %inc, i32* %j, align 4, !dbg !6375
  br label %for.cond80, !dbg !6377

for.end:                                          ; preds = %for.cond80
  %74 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6378
  %pool103 = getelementptr inbounds %struct.DTD, %struct.DTD* %74, i32 0, i32 4, !dbg !6378
  %ptr104 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool103, i32 0, i32 3, !dbg !6378
  %75 = load i8*, i8** %ptr104, align 8, !dbg !6378
  %76 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6378
  %pool105 = getelementptr inbounds %struct.DTD, %struct.DTD* %76, i32 0, i32 4, !dbg !6378
  %end106 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool105, i32 0, i32 2, !dbg !6378
  %77 = load i8*, i8** %end106, align 8, !dbg !6378
  %cmp107 = icmp eq i8* %75, %77, !dbg !6378
  br i1 %cmp107, label %land.lhs.true109, label %cond.false114, !dbg !6378

land.lhs.true109:                                 ; preds = %for.end
  %78 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6380
  %pool110 = getelementptr inbounds %struct.DTD, %struct.DTD* %78, i32 0, i32 4, !dbg !6380
  %call111 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool110), !dbg !6380
  %tobool112 = icmp ne i8 %call111, 0, !dbg !6380
  br i1 %tobool112, label %cond.false114, label %cond.true113, !dbg !6382

cond.true113:                                     ; preds = %land.lhs.true109
  br i1 false, label %if.end119, label %if.then118, !dbg !6383

cond.false114:                                    ; preds = %land.lhs.true109, %for.end
  %79 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6385
  %pool115 = getelementptr inbounds %struct.DTD, %struct.DTD* %79, i32 0, i32 4, !dbg !6385
  %ptr116 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool115, i32 0, i32 3, !dbg !6385
  %80 = load i8*, i8** %ptr116, align 8, !dbg !6385
  %incdec.ptr117 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !6385
  store i8* %incdec.ptr117, i8** %ptr116, align 8, !dbg !6385
  store i8 0, i8* %80, align 1, !dbg !6385
  br i1 true, label %if.end119, label %if.then118, !dbg !6387

if.then118:                                       ; preds = %cond.false114, %cond.true113
  store %struct.attribute_id* null, %struct.attribute_id** %retval, align 8, !dbg !6388
  br label %return, !dbg !6388

if.end119:                                        ; preds = %cond.false114, %cond.true113
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6389
  %82 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6390
  %prefixes120 = getelementptr inbounds %struct.DTD, %struct.DTD* %82, i32 0, i32 3, !dbg !6391
  %83 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6392
  %pool121 = getelementptr inbounds %struct.DTD, %struct.DTD* %83, i32 0, i32 4, !dbg !6392
  %start122 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool121, i32 0, i32 4, !dbg !6392
  %84 = load i8*, i8** %start122, align 8, !dbg !6392
  %call123 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %81, %struct.HASH_TABLE* %prefixes120, i8* %84, i64 16), !dbg !6393
  %85 = bitcast %struct.NAMED* %call123 to %struct.prefix*, !dbg !6394
  %86 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6395
  %prefix124 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %86, i32 0, i32 1, !dbg !6396
  store %struct.prefix* %85, %struct.prefix** %prefix124, align 8, !dbg !6397
  %87 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6398
  %prefix125 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %87, i32 0, i32 1, !dbg !6400
  %88 = load %struct.prefix*, %struct.prefix** %prefix125, align 8, !dbg !6400
  %tobool126 = icmp ne %struct.prefix* %88, null, !dbg !6398
  br i1 %tobool126, label %if.end128, label %if.then127, !dbg !6401

if.then127:                                       ; preds = %if.end119
  store %struct.attribute_id* null, %struct.attribute_id** %retval, align 8, !dbg !6402
  br label %return, !dbg !6402

if.end128:                                        ; preds = %if.end119
  %89 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6403
  %prefix129 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %89, i32 0, i32 1, !dbg !6405
  %90 = load %struct.prefix*, %struct.prefix** %prefix129, align 8, !dbg !6405
  %name130 = getelementptr inbounds %struct.prefix, %struct.prefix* %90, i32 0, i32 0, !dbg !6406
  %91 = load i8*, i8** %name130, align 8, !dbg !6406
  %92 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6407
  %pool131 = getelementptr inbounds %struct.DTD, %struct.DTD* %92, i32 0, i32 4, !dbg !6407
  %start132 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool131, i32 0, i32 4, !dbg !6407
  %93 = load i8*, i8** %start132, align 8, !dbg !6407
  %cmp133 = icmp eq i8* %91, %93, !dbg !6408
  br i1 %cmp133, label %if.then135, label %if.else140, !dbg !6409

if.then135:                                       ; preds = %if.end128
  %94 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6410
  %pool136 = getelementptr inbounds %struct.DTD, %struct.DTD* %94, i32 0, i32 4, !dbg !6410
  %ptr137 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool136, i32 0, i32 3, !dbg !6410
  %95 = load i8*, i8** %ptr137, align 8, !dbg !6410
  %96 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6410
  %pool138 = getelementptr inbounds %struct.DTD, %struct.DTD* %96, i32 0, i32 4, !dbg !6410
  %start139 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool138, i32 0, i32 4, !dbg !6410
  store i8* %95, i8** %start139, align 8, !dbg !6410
  br label %if.end145, !dbg !6410

if.else140:                                       ; preds = %if.end128
  %97 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6411
  %pool141 = getelementptr inbounds %struct.DTD, %struct.DTD* %97, i32 0, i32 4, !dbg !6411
  %start142 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool141, i32 0, i32 4, !dbg !6411
  %98 = load i8*, i8** %start142, align 8, !dbg !6411
  %99 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6411
  %pool143 = getelementptr inbounds %struct.DTD, %struct.DTD* %99, i32 0, i32 4, !dbg !6411
  %ptr144 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool143, i32 0, i32 3, !dbg !6411
  store i8* %98, i8** %ptr144, align 8, !dbg !6411
  br label %if.end145

if.end145:                                        ; preds = %if.else140, %if.then135
  br label %for.end149, !dbg !6412

if.end146:                                        ; preds = %for.body
  br label %for.inc147, !dbg !6413

for.inc147:                                       ; preds = %if.end146
  %100 = load i32, i32* %i, align 4, !dbg !6414
  %inc148 = add nsw i32 %100, 1, !dbg !6414
  store i32 %inc148, i32* %i, align 4, !dbg !6414
  br label %for.cond, !dbg !6416

for.end149:                                       ; preds = %if.end145, %for.cond
  br label %if.end150

if.end150:                                        ; preds = %for.end149, %if.end70
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then28
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then18
  %101 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6417
  store %struct.attribute_id* %101, %struct.attribute_id** %retval, align 8, !dbg !6418
  br label %return, !dbg !6418

return:                                           ; preds = %if.end152, %if.then127, %if.then118, %if.then101, %if.then14, %if.then9, %if.then
  %102 = load %struct.attribute_id*, %struct.attribute_id** %retval, align 8, !dbg !6419
  ret %struct.attribute_id* %102, !dbg !6419
}

; Function Attrs: nounwind uwtable
define internal i8* @poolAppendString(%struct.STRING_POOL* %pool, i8* %s) #0 !dbg !937 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !6420, metadata !1076), !dbg !6421
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !6422, metadata !1076), !dbg !6423
  br label %while.cond, !dbg !6424

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !6425
  %1 = load i8, i8* %0, align 1, !dbg !6427
  %tobool = icmp ne i8 %1, 0, !dbg !6428
  br i1 %tobool, label %while.body, label %while.end, !dbg !6428

while.body:                                       ; preds = %while.cond
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6429
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 3, !dbg !6429
  %3 = load i8*, i8** %ptr, align 8, !dbg !6429
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6429
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 2, !dbg !6429
  %5 = load i8*, i8** %end, align 8, !dbg !6429
  %cmp = icmp eq i8* %3, %5, !dbg !6429
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6429

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6432
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %6), !dbg !6432
  %tobool1 = icmp ne i8 %call, 0, !dbg !6432
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !6434

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then, !dbg !6435

cond.false:                                       ; preds = %land.lhs.true, %while.body
  %7 = load i8*, i8** %s.addr, align 8, !dbg !6437
  %8 = load i8, i8* %7, align 1, !dbg !6437
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6437
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3, !dbg !6437
  %10 = load i8*, i8** %ptr2, align 8, !dbg !6437
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6437
  store i8* %incdec.ptr, i8** %ptr2, align 8, !dbg !6437
  store i8 %8, i8* %10, align 1, !dbg !6437
  br i1 true, label %if.end, label %if.then, !dbg !6439

if.then:                                          ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, align 8, !dbg !6440
  br label %return, !dbg !6440

if.end:                                           ; preds = %cond.false, %cond.true
  %11 = load i8*, i8** %s.addr, align 8, !dbg !6441
  %incdec.ptr3 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !6441
  store i8* %incdec.ptr3, i8** %s.addr, align 8, !dbg !6441
  br label %while.cond, !dbg !6442

while.end:                                        ; preds = %while.cond
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6444
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %12, i32 0, i32 4, !dbg !6445
  %13 = load i8*, i8** %start, align 8, !dbg !6445
  store i8* %13, i8** %retval, align 8, !dbg !6446
  br label %return, !dbg !6446

return:                                           ; preds = %while.end, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !6447
  ret i8* %14, !dbg !6447
}

; Function Attrs: nounwind uwtable
define internal i8* @poolAppend(%struct.STRING_POOL* %pool, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 !dbg !940 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %convert_res = alloca i32, align 4
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !6448, metadata !1076), !dbg !6449
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6450, metadata !1076), !dbg !6451
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6452, metadata !1076), !dbg !6453
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6454, metadata !1076), !dbg !6455
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6456
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3, !dbg !6458
  %1 = load i8*, i8** %ptr1, align 8, !dbg !6458
  %tobool = icmp ne i8* %1, null, !dbg !6456
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6459

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6460
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %2), !dbg !6462
  %tobool2 = icmp ne i8 %call, 0, !dbg !6462
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6463

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval, align 8, !dbg !6464
  br label %return, !dbg !6464

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond, !dbg !6465

for.cond:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i32* %convert_res, metadata !6466, metadata !1076), !dbg !6471
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6472
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %3, i32 0, i32 11, !dbg !6472
  %4 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !6472
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6472
  %6 = load i8*, i8** %end.addr, align 8, !dbg !6472
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6472
  %ptr3 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 3, !dbg !6472
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6472
  %end4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %8, i32 0, i32 2, !dbg !6472
  %9 = load i8*, i8** %end4, align 8, !dbg !6472
  %call5 = call i32 %4(%struct.encoding* %5, i8** %ptr.addr, i8* %6, i8** %ptr3, i8* %9), !dbg !6472
  store i32 %call5, i32* %convert_res, align 4, !dbg !6471
  %10 = load i32, i32* %convert_res, align 4, !dbg !6473
  %cmp = icmp eq i32 %10, 0, !dbg !6475
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !6476

lor.lhs.false:                                    ; preds = %for.cond
  %11 = load i32, i32* %convert_res, align 4, !dbg !6477
  %cmp6 = icmp eq i32 %11, 1, !dbg !6479
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6480

if.then7:                                         ; preds = %lor.lhs.false, %for.cond
  br label %for.end, !dbg !6481

if.end8:                                          ; preds = %lor.lhs.false
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6482
  %call9 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %12), !dbg !6484
  %tobool10 = icmp ne i8 %call9, 0, !dbg !6484
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !6485

if.then11:                                        ; preds = %if.end8
  store i8* null, i8** %retval, align 8, !dbg !6486
  br label %return, !dbg !6486

if.end12:                                         ; preds = %if.end8
  br label %for.cond, !dbg !6487

for.end:                                          ; preds = %if.then7
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6489
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 4, !dbg !6490
  %14 = load i8*, i8** %start, align 8, !dbg !6490
  store i8* %14, i8** %retval, align 8, !dbg !6491
  br label %return, !dbg !6491

return:                                           ; preds = %for.end, %if.then11, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !6492
  ret i8* %15, !dbg !6492
}

; Function Attrs: nounwind uwtable
define internal i32 @defineAttribute(%struct.ELEMENT_TYPE* %type, %struct.attribute_id* %attId, i8 zeroext %isCdata, i8 zeroext %isId, i8* %value, %struct.XML_ParserStruct* %parser) #0 !dbg !941 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct.ELEMENT_TYPE*, align 8
  %attId.addr = alloca %struct.attribute_id*, align 8
  %isCdata.addr = alloca i8, align 1
  %isId.addr = alloca i8, align 1
  %value.addr = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %att = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %i = alloca i32, align 4
  %temp = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %count = alloca i32, align 4
  store %struct.ELEMENT_TYPE* %type, %struct.ELEMENT_TYPE** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %type.addr, metadata !6493, metadata !1076), !dbg !6494
  store %struct.attribute_id* %attId, %struct.attribute_id** %attId.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %attId.addr, metadata !6495, metadata !1076), !dbg !6496
  store i8 %isCdata, i8* %isCdata.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isCdata.addr, metadata !6497, metadata !1076), !dbg !6498
  store i8 %isId, i8* %isId.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isId.addr, metadata !6499, metadata !1076), !dbg !6500
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !6501, metadata !1076), !dbg !6502
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !6503, metadata !1076), !dbg !6504
  call void @llvm.dbg.declare(metadata %struct.DEFAULT_ATTRIBUTE** %att, metadata !6505, metadata !1076), !dbg !6506
  %0 = load i8*, i8** %value.addr, align 8, !dbg !6507
  %tobool = icmp ne i8* %0, null, !dbg !6507
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6509

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %isId.addr, align 1, !dbg !6510
  %conv = zext i8 %1 to i32, !dbg !6510
  %tobool1 = icmp ne i32 %conv, 0, !dbg !6510
  br i1 %tobool1, label %if.then, label %if.end14, !dbg !6512

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6513, metadata !1076), !dbg !6515
  store i32 0, i32* %i, align 4, !dbg !6516
  br label %for.cond, !dbg !6518

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !6519
  %3 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6522
  %nDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %3, i32 0, i32 3, !dbg !6523
  %4 = load i32, i32* %nDefaultAtts, align 8, !dbg !6523
  %cmp = icmp slt i32 %2, %4, !dbg !6524
  br i1 %cmp, label %for.body, label %for.end, !dbg !6525

for.body:                                         ; preds = %for.cond
  %5 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !6526
  %6 = load i32, i32* %i, align 4, !dbg !6528
  %idxprom = sext i32 %6 to i64, !dbg !6529
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6529
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %7, i32 0, i32 5, !dbg !6530
  %8 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !6530
  %arrayidx = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %8, i64 %idxprom, !dbg !6529
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx, i32 0, i32 0, !dbg !6531
  %9 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !6531
  %cmp3 = icmp eq %struct.attribute_id* %5, %9, !dbg !6532
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !6533

if.then5:                                         ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !6534
  br label %return, !dbg !6534

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6535

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !6537
  %inc = add nsw i32 %10, 1, !dbg !6537
  store i32 %inc, i32* %i, align 4, !dbg !6537
  br label %for.cond, !dbg !6539

for.end:                                          ; preds = %for.cond
  %11 = load i8, i8* %isId.addr, align 1, !dbg !6540
  %conv6 = zext i8 %11 to i32, !dbg !6540
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !6540
  br i1 %tobool7, label %land.lhs.true, label %if.end13, !dbg !6542

land.lhs.true:                                    ; preds = %for.end
  %12 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6543
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %12, i32 0, i32 2, !dbg !6545
  %13 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8, !dbg !6545
  %tobool8 = icmp ne %struct.attribute_id* %13, null, !dbg !6543
  br i1 %tobool8, label %if.end13, label %land.lhs.true9, !dbg !6546

land.lhs.true9:                                   ; preds = %land.lhs.true
  %14 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !6547
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %14, i32 0, i32 3, !dbg !6549
  %15 = load i8, i8* %xmlns, align 1, !dbg !6549
  %tobool10 = icmp ne i8 %15, 0, !dbg !6547
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !6550

if.then11:                                        ; preds = %land.lhs.true9
  %16 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !6551
  %17 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6552
  %idAtt12 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %17, i32 0, i32 2, !dbg !6553
  store %struct.attribute_id* %16, %struct.attribute_id** %idAtt12, align 8, !dbg !6554
  br label %if.end13, !dbg !6552

if.end13:                                         ; preds = %if.then11, %land.lhs.true9, %land.lhs.true, %for.end
  br label %if.end14, !dbg !6555

if.end14:                                         ; preds = %if.end13, %lor.lhs.false
  %18 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6556
  %nDefaultAtts15 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %18, i32 0, i32 3, !dbg !6558
  %19 = load i32, i32* %nDefaultAtts15, align 8, !dbg !6558
  %20 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6559
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %20, i32 0, i32 4, !dbg !6560
  %21 = load i32, i32* %allocDefaultAtts, align 4, !dbg !6560
  %cmp16 = icmp eq i32 %19, %21, !dbg !6561
  br i1 %cmp16, label %if.then18, label %if.end45, !dbg !6562

if.then18:                                        ; preds = %if.end14
  %22 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6563
  %allocDefaultAtts19 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %22, i32 0, i32 4, !dbg !6566
  %23 = load i32, i32* %allocDefaultAtts19, align 4, !dbg !6566
  %cmp20 = icmp eq i32 %23, 0, !dbg !6567
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !6568

if.then22:                                        ; preds = %if.then18
  %24 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6569
  %allocDefaultAtts23 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %24, i32 0, i32 4, !dbg !6571
  store i32 8, i32* %allocDefaultAtts23, align 4, !dbg !6572
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6573
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 3, !dbg !6573
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !6573
  %26 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !6573
  %27 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6573
  %allocDefaultAtts24 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %27, i32 0, i32 4, !dbg !6573
  %28 = load i32, i32* %allocDefaultAtts24, align 4, !dbg !6573
  %conv25 = sext i32 %28 to i64, !dbg !6573
  %mul = mul i64 %conv25, 24, !dbg !6573
  %call = call i8* %26(i64 %mul), !dbg !6573
  %29 = bitcast i8* %call to %struct.DEFAULT_ATTRIBUTE*, !dbg !6574
  %30 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6575
  %defaultAtts26 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %30, i32 0, i32 5, !dbg !6576
  store %struct.DEFAULT_ATTRIBUTE* %29, %struct.DEFAULT_ATTRIBUTE** %defaultAtts26, align 8, !dbg !6577
  %31 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6578
  %defaultAtts27 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %31, i32 0, i32 5, !dbg !6580
  %32 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts27, align 8, !dbg !6580
  %tobool28 = icmp ne %struct.DEFAULT_ATTRIBUTE* %32, null, !dbg !6578
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !6581

if.then29:                                        ; preds = %if.then22
  store i32 0, i32* %retval, align 4, !dbg !6582
  br label %return, !dbg !6582

if.end30:                                         ; preds = %if.then22
  br label %if.end44, !dbg !6583

if.else:                                          ; preds = %if.then18
  call void @llvm.dbg.declare(metadata %struct.DEFAULT_ATTRIBUTE** %temp, metadata !6584, metadata !1076), !dbg !6586
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6587, metadata !1076), !dbg !6588
  %33 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6589
  %allocDefaultAtts31 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %33, i32 0, i32 4, !dbg !6590
  %34 = load i32, i32* %allocDefaultAtts31, align 4, !dbg !6590
  %mul32 = mul nsw i32 %34, 2, !dbg !6591
  store i32 %mul32, i32* %count, align 4, !dbg !6588
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6592
  %m_mem33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 3, !dbg !6592
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem33, i32 0, i32 1, !dbg !6592
  %36 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !6592
  %37 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6592
  %defaultAtts34 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %37, i32 0, i32 5, !dbg !6592
  %38 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts34, align 8, !dbg !6592
  %39 = bitcast %struct.DEFAULT_ATTRIBUTE* %38 to i8*, !dbg !6592
  %40 = load i32, i32* %count, align 4, !dbg !6592
  %conv35 = sext i32 %40 to i64, !dbg !6592
  %mul36 = mul i64 %conv35, 24, !dbg !6592
  %call37 = call i8* %36(i8* %39, i64 %mul36), !dbg !6592
  %41 = bitcast i8* %call37 to %struct.DEFAULT_ATTRIBUTE*, !dbg !6593
  store %struct.DEFAULT_ATTRIBUTE* %41, %struct.DEFAULT_ATTRIBUTE** %temp, align 8, !dbg !6594
  %42 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %temp, align 8, !dbg !6595
  %cmp38 = icmp eq %struct.DEFAULT_ATTRIBUTE* %42, null, !dbg !6597
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !6598

if.then40:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !6599
  br label %return, !dbg !6599

if.end41:                                         ; preds = %if.else
  %43 = load i32, i32* %count, align 4, !dbg !6600
  %44 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6601
  %allocDefaultAtts42 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %44, i32 0, i32 4, !dbg !6602
  store i32 %43, i32* %allocDefaultAtts42, align 4, !dbg !6603
  %45 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %temp, align 8, !dbg !6604
  %46 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6605
  %defaultAtts43 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %46, i32 0, i32 5, !dbg !6606
  store %struct.DEFAULT_ATTRIBUTE* %45, %struct.DEFAULT_ATTRIBUTE** %defaultAtts43, align 8, !dbg !6607
  br label %if.end44

if.end44:                                         ; preds = %if.end41, %if.end30
  br label %if.end45, !dbg !6608

if.end45:                                         ; preds = %if.end44, %if.end14
  %47 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6609
  %defaultAtts46 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %47, i32 0, i32 5, !dbg !6610
  %48 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts46, align 8, !dbg !6610
  %49 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6611
  %nDefaultAtts47 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %49, i32 0, i32 3, !dbg !6612
  %50 = load i32, i32* %nDefaultAtts47, align 8, !dbg !6612
  %idx.ext = sext i32 %50 to i64, !dbg !6613
  %add.ptr = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %48, i64 %idx.ext, !dbg !6613
  store %struct.DEFAULT_ATTRIBUTE* %add.ptr, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !6614
  %51 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !6615
  %52 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !6616
  %id48 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %52, i32 0, i32 0, !dbg !6617
  store %struct.attribute_id* %51, %struct.attribute_id** %id48, align 8, !dbg !6618
  %53 = load i8*, i8** %value.addr, align 8, !dbg !6619
  %54 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !6620
  %value49 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %54, i32 0, i32 2, !dbg !6621
  store i8* %53, i8** %value49, align 8, !dbg !6622
  %55 = load i8, i8* %isCdata.addr, align 1, !dbg !6623
  %56 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8, !dbg !6624
  %isCdata50 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %56, i32 0, i32 1, !dbg !6625
  store i8 %55, i8* %isCdata50, align 8, !dbg !6626
  %57 = load i8, i8* %isCdata.addr, align 1, !dbg !6627
  %tobool51 = icmp ne i8 %57, 0, !dbg !6627
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !6629

if.then52:                                        ; preds = %if.end45
  %58 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !6630
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %58, i32 0, i32 2, !dbg !6631
  store i8 1, i8* %maybeTokenized, align 8, !dbg !6632
  br label %if.end53, !dbg !6630

if.end53:                                         ; preds = %if.then52, %if.end45
  %59 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8, !dbg !6633
  %nDefaultAtts54 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %59, i32 0, i32 3, !dbg !6634
  %60 = load i32, i32* %nDefaultAtts54, align 8, !dbg !6635
  %add = add nsw i32 %60, 1, !dbg !6635
  store i32 %add, i32* %nDefaultAtts54, align 8, !dbg !6635
  store i32 1, i32* %retval, align 4, !dbg !6636
  br label %return, !dbg !6636

return:                                           ; preds = %if.end53, %if.then40, %if.then29, %if.then5
  %61 = load i32, i32* %retval, align 4, !dbg !6637
  ret i32 %61, !dbg !6637
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @poolGrow(%struct.STRING_POOL* %pool) #0 !dbg !944 {
entry:
  %retval = alloca i8, align 1
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %tem = alloca %struct.block*, align 8
  %temp = alloca %struct.block*, align 8
  %blockSize = alloca i32, align 4
  %tem106 = alloca %struct.block*, align 8
  %blockSize107 = alloca i32, align 4
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !6638, metadata !1076), !dbg !6639
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6640
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 1, !dbg !6642
  %1 = load %struct.block*, %struct.block** %freeBlocks, align 8, !dbg !6642
  %tobool = icmp ne %struct.block* %1, null, !dbg !6640
  br i1 %tobool, label %if.then, label %if.end57, !dbg !6643

if.then:                                          ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6644
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 4, !dbg !6647
  %3 = load i8*, i8** %start, align 8, !dbg !6647
  %cmp = icmp eq i8* %3, null, !dbg !6648
  br i1 %cmp, label %if.then1, label %if.end, !dbg !6649

if.then1:                                         ; preds = %if.then
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6650
  %freeBlocks2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 1, !dbg !6652
  %5 = load %struct.block*, %struct.block** %freeBlocks2, align 8, !dbg !6652
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6653
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 0, !dbg !6654
  store %struct.block* %5, %struct.block** %blocks, align 8, !dbg !6655
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6656
  %freeBlocks3 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 1, !dbg !6657
  %8 = load %struct.block*, %struct.block** %freeBlocks3, align 8, !dbg !6657
  %next = getelementptr inbounds %struct.block, %struct.block* %8, i32 0, i32 0, !dbg !6658
  %9 = load %struct.block*, %struct.block** %next, align 8, !dbg !6658
  %10 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6659
  %freeBlocks4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %10, i32 0, i32 1, !dbg !6660
  store %struct.block* %9, %struct.block** %freeBlocks4, align 8, !dbg !6661
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6662
  %blocks5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 0, !dbg !6663
  %12 = load %struct.block*, %struct.block** %blocks5, align 8, !dbg !6663
  %next6 = getelementptr inbounds %struct.block, %struct.block* %12, i32 0, i32 0, !dbg !6664
  store %struct.block* null, %struct.block** %next6, align 8, !dbg !6665
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6666
  %blocks7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 0, !dbg !6667
  %14 = load %struct.block*, %struct.block** %blocks7, align 8, !dbg !6667
  %s = getelementptr inbounds %struct.block, %struct.block* %14, i32 0, i32 2, !dbg !6668
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %s, i32 0, i32 0, !dbg !6666
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6669
  %start8 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4, !dbg !6670
  store i8* %arraydecay, i8** %start8, align 8, !dbg !6671
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6672
  %start9 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 4, !dbg !6673
  %17 = load i8*, i8** %start9, align 8, !dbg !6673
  %18 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6674
  %blocks10 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %18, i32 0, i32 0, !dbg !6675
  %19 = load %struct.block*, %struct.block** %blocks10, align 8, !dbg !6675
  %size = getelementptr inbounds %struct.block, %struct.block* %19, i32 0, i32 1, !dbg !6676
  %20 = load i32, i32* %size, align 8, !dbg !6676
  %idx.ext = sext i32 %20 to i64, !dbg !6677
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !6677
  %21 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6678
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %21, i32 0, i32 2, !dbg !6679
  store i8* %add.ptr, i8** %end, align 8, !dbg !6680
  %22 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6681
  %start11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %22, i32 0, i32 4, !dbg !6682
  %23 = load i8*, i8** %start11, align 8, !dbg !6682
  %24 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6683
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %24, i32 0, i32 3, !dbg !6684
  store i8* %23, i8** %ptr, align 8, !dbg !6685
  store i8 1, i8* %retval, align 1, !dbg !6686
  br label %return, !dbg !6686

if.end:                                           ; preds = %if.then
  %25 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6687
  %end12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %25, i32 0, i32 2, !dbg !6689
  %26 = load i8*, i8** %end12, align 8, !dbg !6689
  %27 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6690
  %start13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %27, i32 0, i32 4, !dbg !6691
  %28 = load i8*, i8** %start13, align 8, !dbg !6691
  %sub.ptr.lhs.cast = ptrtoint i8* %26 to i64, !dbg !6692
  %sub.ptr.rhs.cast = ptrtoint i8* %28 to i64, !dbg !6692
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6692
  %29 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6693
  %freeBlocks14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %29, i32 0, i32 1, !dbg !6694
  %30 = load %struct.block*, %struct.block** %freeBlocks14, align 8, !dbg !6694
  %size15 = getelementptr inbounds %struct.block, %struct.block* %30, i32 0, i32 1, !dbg !6695
  %31 = load i32, i32* %size15, align 8, !dbg !6695
  %conv = sext i32 %31 to i64, !dbg !6693
  %cmp16 = icmp slt i64 %sub.ptr.sub, %conv, !dbg !6696
  br i1 %cmp16, label %if.then18, label %if.end56, !dbg !6697

if.then18:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.block** %tem, metadata !6698, metadata !1076), !dbg !6700
  %32 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6701
  %freeBlocks19 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %32, i32 0, i32 1, !dbg !6702
  %33 = load %struct.block*, %struct.block** %freeBlocks19, align 8, !dbg !6702
  %next20 = getelementptr inbounds %struct.block, %struct.block* %33, i32 0, i32 0, !dbg !6703
  %34 = load %struct.block*, %struct.block** %next20, align 8, !dbg !6703
  store %struct.block* %34, %struct.block** %tem, align 8, !dbg !6700
  %35 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6704
  %blocks21 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %35, i32 0, i32 0, !dbg !6705
  %36 = load %struct.block*, %struct.block** %blocks21, align 8, !dbg !6705
  %37 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6706
  %freeBlocks22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %37, i32 0, i32 1, !dbg !6707
  %38 = load %struct.block*, %struct.block** %freeBlocks22, align 8, !dbg !6707
  %next23 = getelementptr inbounds %struct.block, %struct.block* %38, i32 0, i32 0, !dbg !6708
  store %struct.block* %36, %struct.block** %next23, align 8, !dbg !6709
  %39 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6710
  %freeBlocks24 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %39, i32 0, i32 1, !dbg !6711
  %40 = load %struct.block*, %struct.block** %freeBlocks24, align 8, !dbg !6711
  %41 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6712
  %blocks25 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %41, i32 0, i32 0, !dbg !6713
  store %struct.block* %40, %struct.block** %blocks25, align 8, !dbg !6714
  %42 = load %struct.block*, %struct.block** %tem, align 8, !dbg !6715
  %43 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6716
  %freeBlocks26 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %43, i32 0, i32 1, !dbg !6717
  store %struct.block* %42, %struct.block** %freeBlocks26, align 8, !dbg !6718
  %44 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6719
  %blocks27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %44, i32 0, i32 0, !dbg !6720
  %45 = load %struct.block*, %struct.block** %blocks27, align 8, !dbg !6720
  %s28 = getelementptr inbounds %struct.block, %struct.block* %45, i32 0, i32 2, !dbg !6721
  %arraydecay29 = getelementptr inbounds [1 x i8], [1 x i8]* %s28, i32 0, i32 0, !dbg !6722
  %46 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6723
  %start30 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %46, i32 0, i32 4, !dbg !6724
  %47 = load i8*, i8** %start30, align 8, !dbg !6724
  %48 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6725
  %end31 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %48, i32 0, i32 2, !dbg !6726
  %49 = load i8*, i8** %end31, align 8, !dbg !6726
  %50 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6727
  %start32 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %50, i32 0, i32 4, !dbg !6728
  %51 = load i8*, i8** %start32, align 8, !dbg !6728
  %sub.ptr.lhs.cast33 = ptrtoint i8* %49 to i64, !dbg !6729
  %sub.ptr.rhs.cast34 = ptrtoint i8* %51 to i64, !dbg !6729
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !6729
  %mul = mul i64 %sub.ptr.sub35, 1, !dbg !6730
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay29, i8* %47, i64 %mul, i32 1, i1 false), !dbg !6722
  %52 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6731
  %blocks36 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %52, i32 0, i32 0, !dbg !6732
  %53 = load %struct.block*, %struct.block** %blocks36, align 8, !dbg !6732
  %s37 = getelementptr inbounds %struct.block, %struct.block* %53, i32 0, i32 2, !dbg !6733
  %arraydecay38 = getelementptr inbounds [1 x i8], [1 x i8]* %s37, i32 0, i32 0, !dbg !6731
  %54 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6734
  %ptr39 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %54, i32 0, i32 3, !dbg !6735
  %55 = load i8*, i8** %ptr39, align 8, !dbg !6735
  %56 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6736
  %start40 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %56, i32 0, i32 4, !dbg !6737
  %57 = load i8*, i8** %start40, align 8, !dbg !6737
  %sub.ptr.lhs.cast41 = ptrtoint i8* %55 to i64, !dbg !6738
  %sub.ptr.rhs.cast42 = ptrtoint i8* %57 to i64, !dbg !6738
  %sub.ptr.sub43 = sub i64 %sub.ptr.lhs.cast41, %sub.ptr.rhs.cast42, !dbg !6738
  %add.ptr44 = getelementptr inbounds i8, i8* %arraydecay38, i64 %sub.ptr.sub43, !dbg !6739
  %58 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6740
  %ptr45 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %58, i32 0, i32 3, !dbg !6741
  store i8* %add.ptr44, i8** %ptr45, align 8, !dbg !6742
  %59 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6743
  %blocks46 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %59, i32 0, i32 0, !dbg !6744
  %60 = load %struct.block*, %struct.block** %blocks46, align 8, !dbg !6744
  %s47 = getelementptr inbounds %struct.block, %struct.block* %60, i32 0, i32 2, !dbg !6745
  %arraydecay48 = getelementptr inbounds [1 x i8], [1 x i8]* %s47, i32 0, i32 0, !dbg !6743
  %61 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6746
  %start49 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %61, i32 0, i32 4, !dbg !6747
  store i8* %arraydecay48, i8** %start49, align 8, !dbg !6748
  %62 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6749
  %start50 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %62, i32 0, i32 4, !dbg !6750
  %63 = load i8*, i8** %start50, align 8, !dbg !6750
  %64 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6751
  %blocks51 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %64, i32 0, i32 0, !dbg !6752
  %65 = load %struct.block*, %struct.block** %blocks51, align 8, !dbg !6752
  %size52 = getelementptr inbounds %struct.block, %struct.block* %65, i32 0, i32 1, !dbg !6753
  %66 = load i32, i32* %size52, align 8, !dbg !6753
  %idx.ext53 = sext i32 %66 to i64, !dbg !6754
  %add.ptr54 = getelementptr inbounds i8, i8* %63, i64 %idx.ext53, !dbg !6754
  %67 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6755
  %end55 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %67, i32 0, i32 2, !dbg !6756
  store i8* %add.ptr54, i8** %end55, align 8, !dbg !6757
  store i8 1, i8* %retval, align 1, !dbg !6758
  br label %return, !dbg !6758

if.end56:                                         ; preds = %if.end
  br label %if.end57, !dbg !6759

if.end57:                                         ; preds = %if.end56, %entry
  %68 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6760
  %blocks58 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %68, i32 0, i32 0, !dbg !6762
  %69 = load %struct.block*, %struct.block** %blocks58, align 8, !dbg !6762
  %tobool59 = icmp ne %struct.block* %69, null, !dbg !6760
  br i1 %tobool59, label %land.lhs.true, label %if.else, !dbg !6763

land.lhs.true:                                    ; preds = %if.end57
  %70 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6764
  %start60 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %70, i32 0, i32 4, !dbg !6766
  %71 = load i8*, i8** %start60, align 8, !dbg !6766
  %72 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6767
  %blocks61 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %72, i32 0, i32 0, !dbg !6768
  %73 = load %struct.block*, %struct.block** %blocks61, align 8, !dbg !6768
  %s62 = getelementptr inbounds %struct.block, %struct.block* %73, i32 0, i32 2, !dbg !6769
  %arraydecay63 = getelementptr inbounds [1 x i8], [1 x i8]* %s62, i32 0, i32 0, !dbg !6767
  %cmp64 = icmp eq i8* %71, %arraydecay63, !dbg !6770
  br i1 %cmp64, label %if.then66, label %if.else, !dbg !6771

if.then66:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.block** %temp, metadata !6772, metadata !1076), !dbg !6774
  call void @llvm.dbg.declare(metadata i32* %blockSize, metadata !6775, metadata !1076), !dbg !6776
  %74 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6777
  %end67 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %74, i32 0, i32 2, !dbg !6778
  %75 = load i8*, i8** %end67, align 8, !dbg !6778
  %76 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6779
  %start68 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %76, i32 0, i32 4, !dbg !6780
  %77 = load i8*, i8** %start68, align 8, !dbg !6780
  %sub.ptr.lhs.cast69 = ptrtoint i8* %75 to i64, !dbg !6781
  %sub.ptr.rhs.cast70 = ptrtoint i8* %77 to i64, !dbg !6781
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !6781
  %conv72 = trunc i64 %sub.ptr.sub71 to i32, !dbg !6782
  %mul73 = mul i32 %conv72, 2, !dbg !6783
  store i32 %mul73, i32* %blockSize, align 4, !dbg !6776
  %78 = load i32, i32* %blockSize, align 4, !dbg !6784
  %cmp74 = icmp slt i32 %78, 0, !dbg !6786
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !6787

if.then76:                                        ; preds = %if.then66
  store i8 0, i8* %retval, align 1, !dbg !6788
  br label %return, !dbg !6788

if.end77:                                         ; preds = %if.then66
  %79 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6789
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %79, i32 0, i32 5, !dbg !6790
  %80 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !6790
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %80, i32 0, i32 1, !dbg !6791
  %81 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !6791
  %82 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6792
  %blocks78 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %82, i32 0, i32 0, !dbg !6793
  %83 = load %struct.block*, %struct.block** %blocks78, align 8, !dbg !6793
  %84 = bitcast %struct.block* %83 to i8*, !dbg !6792
  %85 = load i32, i32* %blockSize, align 4, !dbg !6794
  %conv79 = sext i32 %85 to i64, !dbg !6794
  %mul80 = mul i64 %conv79, 1, !dbg !6795
  %add = add i64 12, %mul80, !dbg !6796
  %call = call i8* %81(i8* %84, i64 %add), !dbg !6789
  %86 = bitcast i8* %call to %struct.block*, !dbg !6797
  store %struct.block* %86, %struct.block** %temp, align 8, !dbg !6798
  %87 = load %struct.block*, %struct.block** %temp, align 8, !dbg !6799
  %cmp81 = icmp eq %struct.block* %87, null, !dbg !6801
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !6802

if.then83:                                        ; preds = %if.end77
  store i8 0, i8* %retval, align 1, !dbg !6803
  br label %return, !dbg !6803

if.end84:                                         ; preds = %if.end77
  %88 = load %struct.block*, %struct.block** %temp, align 8, !dbg !6804
  %89 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6805
  %blocks85 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %89, i32 0, i32 0, !dbg !6806
  store %struct.block* %88, %struct.block** %blocks85, align 8, !dbg !6807
  %90 = load i32, i32* %blockSize, align 4, !dbg !6808
  %91 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6809
  %blocks86 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %91, i32 0, i32 0, !dbg !6810
  %92 = load %struct.block*, %struct.block** %blocks86, align 8, !dbg !6810
  %size87 = getelementptr inbounds %struct.block, %struct.block* %92, i32 0, i32 1, !dbg !6811
  store i32 %90, i32* %size87, align 8, !dbg !6812
  %93 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6813
  %blocks88 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %93, i32 0, i32 0, !dbg !6814
  %94 = load %struct.block*, %struct.block** %blocks88, align 8, !dbg !6814
  %s89 = getelementptr inbounds %struct.block, %struct.block* %94, i32 0, i32 2, !dbg !6815
  %arraydecay90 = getelementptr inbounds [1 x i8], [1 x i8]* %s89, i32 0, i32 0, !dbg !6813
  %95 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6816
  %ptr91 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %95, i32 0, i32 3, !dbg !6817
  %96 = load i8*, i8** %ptr91, align 8, !dbg !6817
  %97 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6818
  %start92 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %97, i32 0, i32 4, !dbg !6819
  %98 = load i8*, i8** %start92, align 8, !dbg !6819
  %sub.ptr.lhs.cast93 = ptrtoint i8* %96 to i64, !dbg !6820
  %sub.ptr.rhs.cast94 = ptrtoint i8* %98 to i64, !dbg !6820
  %sub.ptr.sub95 = sub i64 %sub.ptr.lhs.cast93, %sub.ptr.rhs.cast94, !dbg !6820
  %add.ptr96 = getelementptr inbounds i8, i8* %arraydecay90, i64 %sub.ptr.sub95, !dbg !6821
  %99 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6822
  %ptr97 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %99, i32 0, i32 3, !dbg !6823
  store i8* %add.ptr96, i8** %ptr97, align 8, !dbg !6824
  %100 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6825
  %blocks98 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %100, i32 0, i32 0, !dbg !6826
  %101 = load %struct.block*, %struct.block** %blocks98, align 8, !dbg !6826
  %s99 = getelementptr inbounds %struct.block, %struct.block* %101, i32 0, i32 2, !dbg !6827
  %arraydecay100 = getelementptr inbounds [1 x i8], [1 x i8]* %s99, i32 0, i32 0, !dbg !6825
  %102 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6828
  %start101 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %102, i32 0, i32 4, !dbg !6829
  store i8* %arraydecay100, i8** %start101, align 8, !dbg !6830
  %103 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6831
  %start102 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %103, i32 0, i32 4, !dbg !6832
  %104 = load i8*, i8** %start102, align 8, !dbg !6832
  %105 = load i32, i32* %blockSize, align 4, !dbg !6833
  %idx.ext103 = sext i32 %105 to i64, !dbg !6834
  %add.ptr104 = getelementptr inbounds i8, i8* %104, i64 %idx.ext103, !dbg !6834
  %106 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6835
  %end105 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %106, i32 0, i32 2, !dbg !6836
  store i8* %add.ptr104, i8** %end105, align 8, !dbg !6837
  br label %if.end168, !dbg !6838

if.else:                                          ; preds = %land.lhs.true, %if.end57
  call void @llvm.dbg.declare(metadata %struct.block** %tem106, metadata !6839, metadata !1076), !dbg !6841
  call void @llvm.dbg.declare(metadata i32* %blockSize107, metadata !6842, metadata !1076), !dbg !6843
  %107 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6844
  %end108 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %107, i32 0, i32 2, !dbg !6845
  %108 = load i8*, i8** %end108, align 8, !dbg !6845
  %109 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6846
  %start109 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %109, i32 0, i32 4, !dbg !6847
  %110 = load i8*, i8** %start109, align 8, !dbg !6847
  %sub.ptr.lhs.cast110 = ptrtoint i8* %108 to i64, !dbg !6848
  %sub.ptr.rhs.cast111 = ptrtoint i8* %110 to i64, !dbg !6848
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111, !dbg !6848
  %conv113 = trunc i64 %sub.ptr.sub112 to i32, !dbg !6849
  store i32 %conv113, i32* %blockSize107, align 4, !dbg !6843
  %111 = load i32, i32* %blockSize107, align 4, !dbg !6850
  %cmp114 = icmp slt i32 %111, 0, !dbg !6852
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !6853

if.then116:                                       ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !6854
  br label %return, !dbg !6854

if.end117:                                        ; preds = %if.else
  %112 = load i32, i32* %blockSize107, align 4, !dbg !6855
  %cmp118 = icmp slt i32 %112, 1024, !dbg !6857
  br i1 %cmp118, label %if.then120, label %if.else121, !dbg !6858

if.then120:                                       ; preds = %if.end117
  store i32 1024, i32* %blockSize107, align 4, !dbg !6859
  br label %if.end123, !dbg !6860

if.else121:                                       ; preds = %if.end117
  %113 = load i32, i32* %blockSize107, align 4, !dbg !6861
  %mul122 = mul nsw i32 %113, 2, !dbg !6861
  store i32 %mul122, i32* %blockSize107, align 4, !dbg !6861
  br label %if.end123

if.end123:                                        ; preds = %if.else121, %if.then120
  %114 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6862
  %mem124 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %114, i32 0, i32 5, !dbg !6863
  %115 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem124, align 8, !dbg !6863
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %115, i32 0, i32 0, !dbg !6864
  %116 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !6864
  %117 = load i32, i32* %blockSize107, align 4, !dbg !6865
  %conv125 = sext i32 %117 to i64, !dbg !6865
  %mul126 = mul i64 %conv125, 1, !dbg !6866
  %add127 = add i64 12, %mul126, !dbg !6867
  %call128 = call i8* %116(i64 %add127), !dbg !6862
  %118 = bitcast i8* %call128 to %struct.block*, !dbg !6868
  store %struct.block* %118, %struct.block** %tem106, align 8, !dbg !6869
  %119 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6870
  %tobool129 = icmp ne %struct.block* %119, null, !dbg !6870
  br i1 %tobool129, label %if.end131, label %if.then130, !dbg !6872

if.then130:                                       ; preds = %if.end123
  store i8 0, i8* %retval, align 1, !dbg !6873
  br label %return, !dbg !6873

if.end131:                                        ; preds = %if.end123
  %120 = load i32, i32* %blockSize107, align 4, !dbg !6874
  %121 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6875
  %size132 = getelementptr inbounds %struct.block, %struct.block* %121, i32 0, i32 1, !dbg !6876
  store i32 %120, i32* %size132, align 8, !dbg !6877
  %122 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6878
  %blocks133 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %122, i32 0, i32 0, !dbg !6879
  %123 = load %struct.block*, %struct.block** %blocks133, align 8, !dbg !6879
  %124 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6880
  %next134 = getelementptr inbounds %struct.block, %struct.block* %124, i32 0, i32 0, !dbg !6881
  store %struct.block* %123, %struct.block** %next134, align 8, !dbg !6882
  %125 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6883
  %126 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6884
  %blocks135 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %126, i32 0, i32 0, !dbg !6885
  store %struct.block* %125, %struct.block** %blocks135, align 8, !dbg !6886
  %127 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6887
  %ptr136 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %127, i32 0, i32 3, !dbg !6889
  %128 = load i8*, i8** %ptr136, align 8, !dbg !6889
  %129 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6890
  %start137 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %129, i32 0, i32 4, !dbg !6891
  %130 = load i8*, i8** %start137, align 8, !dbg !6891
  %cmp138 = icmp ne i8* %128, %130, !dbg !6892
  br i1 %cmp138, label %if.then140, label %if.end150, !dbg !6893

if.then140:                                       ; preds = %if.end131
  %131 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6894
  %s141 = getelementptr inbounds %struct.block, %struct.block* %131, i32 0, i32 2, !dbg !6895
  %arraydecay142 = getelementptr inbounds [1 x i8], [1 x i8]* %s141, i32 0, i32 0, !dbg !6896
  %132 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6897
  %start143 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %132, i32 0, i32 4, !dbg !6898
  %133 = load i8*, i8** %start143, align 8, !dbg !6898
  %134 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6899
  %ptr144 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %134, i32 0, i32 3, !dbg !6900
  %135 = load i8*, i8** %ptr144, align 8, !dbg !6900
  %136 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6901
  %start145 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %136, i32 0, i32 4, !dbg !6902
  %137 = load i8*, i8** %start145, align 8, !dbg !6902
  %sub.ptr.lhs.cast146 = ptrtoint i8* %135 to i64, !dbg !6903
  %sub.ptr.rhs.cast147 = ptrtoint i8* %137 to i64, !dbg !6903
  %sub.ptr.sub148 = sub i64 %sub.ptr.lhs.cast146, %sub.ptr.rhs.cast147, !dbg !6903
  %mul149 = mul i64 %sub.ptr.sub148, 1, !dbg !6904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay142, i8* %133, i64 %mul149, i32 1, i1 false), !dbg !6896
  br label %if.end150, !dbg !6896

if.end150:                                        ; preds = %if.then140, %if.end131
  %138 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6905
  %s151 = getelementptr inbounds %struct.block, %struct.block* %138, i32 0, i32 2, !dbg !6906
  %arraydecay152 = getelementptr inbounds [1 x i8], [1 x i8]* %s151, i32 0, i32 0, !dbg !6905
  %139 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6907
  %ptr153 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %139, i32 0, i32 3, !dbg !6908
  %140 = load i8*, i8** %ptr153, align 8, !dbg !6908
  %141 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6909
  %start154 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %141, i32 0, i32 4, !dbg !6910
  %142 = load i8*, i8** %start154, align 8, !dbg !6910
  %sub.ptr.lhs.cast155 = ptrtoint i8* %140 to i64, !dbg !6911
  %sub.ptr.rhs.cast156 = ptrtoint i8* %142 to i64, !dbg !6911
  %sub.ptr.sub157 = sub i64 %sub.ptr.lhs.cast155, %sub.ptr.rhs.cast156, !dbg !6911
  %add.ptr158 = getelementptr inbounds i8, i8* %arraydecay152, i64 %sub.ptr.sub157, !dbg !6912
  %143 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6913
  %ptr159 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %143, i32 0, i32 3, !dbg !6914
  store i8* %add.ptr158, i8** %ptr159, align 8, !dbg !6915
  %144 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6916
  %s160 = getelementptr inbounds %struct.block, %struct.block* %144, i32 0, i32 2, !dbg !6917
  %arraydecay161 = getelementptr inbounds [1 x i8], [1 x i8]* %s160, i32 0, i32 0, !dbg !6916
  %145 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6918
  %start162 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %145, i32 0, i32 4, !dbg !6919
  store i8* %arraydecay161, i8** %start162, align 8, !dbg !6920
  %146 = load %struct.block*, %struct.block** %tem106, align 8, !dbg !6921
  %s163 = getelementptr inbounds %struct.block, %struct.block* %146, i32 0, i32 2, !dbg !6922
  %arraydecay164 = getelementptr inbounds [1 x i8], [1 x i8]* %s163, i32 0, i32 0, !dbg !6921
  %147 = load i32, i32* %blockSize107, align 4, !dbg !6923
  %idx.ext165 = sext i32 %147 to i64, !dbg !6924
  %add.ptr166 = getelementptr inbounds i8, i8* %arraydecay164, i64 %idx.ext165, !dbg !6924
  %148 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6925
  %end167 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %148, i32 0, i32 2, !dbg !6926
  store i8* %add.ptr166, i8** %end167, align 8, !dbg !6927
  br label %if.end168

if.end168:                                        ; preds = %if.end150, %if.end84
  store i8 1, i8* %retval, align 1, !dbg !6928
  br label %return, !dbg !6928

return:                                           ; preds = %if.end168, %if.then130, %if.then116, %if.then83, %if.then76, %if.then18, %if.then1
  %149 = load i8, i8* %retval, align 1, !dbg !6929
  ret i8 %149, !dbg !6929
}

; Function Attrs: nounwind uwtable
define internal i32 @storeAttributeValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8 zeroext %isCdata, i8* %ptr, i8* %end, %struct.STRING_POOL* %pool) #0 !dbg !947 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %isCdata.addr = alloca i8, align 1
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !6930, metadata !1076), !dbg !6931
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6932, metadata !1076), !dbg !6933
  store i8 %isCdata, i8* %isCdata.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isCdata.addr, metadata !6934, metadata !1076), !dbg !6935
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6936, metadata !1076), !dbg !6937
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6938, metadata !1076), !dbg !6939
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !6940, metadata !1076), !dbg !6941
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6942, metadata !1076), !dbg !6943
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6944
  %1 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !6945
  %2 = load i8, i8* %isCdata.addr, align 1, !dbg !6946
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !6947
  %4 = load i8*, i8** %end.addr, align 8, !dbg !6948
  %5 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6949
  %call = call i32 @appendAttributeValue(%struct.XML_ParserStruct* %0, %struct.encoding* %1, i8 zeroext %2, i8* %3, i8* %4, %struct.STRING_POOL* %5), !dbg !6950
  store i32 %call, i32* %result, align 4, !dbg !6943
  %6 = load i32, i32* %result, align 4, !dbg !6951
  %tobool = icmp ne i32 %6, 0, !dbg !6951
  br i1 %tobool, label %if.then, label %if.end, !dbg !6953

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %result, align 4, !dbg !6954
  store i32 %7, i32* %retval, align 4, !dbg !6955
  br label %return, !dbg !6955

if.end:                                           ; preds = %entry
  %8 = load i8, i8* %isCdata.addr, align 1, !dbg !6956
  %tobool1 = icmp ne i8 %8, 0, !dbg !6956
  br i1 %tobool1, label %if.end9, label %land.lhs.true, !dbg !6958

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6959
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3, !dbg !6959
  %10 = load i8*, i8** %ptr2, align 8, !dbg !6959
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6959
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4, !dbg !6959
  %12 = load i8*, i8** %start, align 8, !dbg !6959
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !6959
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !6959
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6959
  %tobool3 = icmp ne i64 %sub.ptr.sub, 0, !dbg !6959
  br i1 %tobool3, label %land.lhs.true4, label %if.end9, !dbg !6961

land.lhs.true4:                                   ; preds = %land.lhs.true
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6962
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 3, !dbg !6962
  %14 = load i8*, i8** %ptr5, align 8, !dbg !6962
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !6962
  %15 = load i8, i8* %arrayidx, align 1, !dbg !6962
  %conv = sext i8 %15 to i32, !dbg !6962
  %cmp = icmp eq i32 %conv, 32, !dbg !6964
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !6965

if.then7:                                         ; preds = %land.lhs.true4
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6966
  %ptr8 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 3, !dbg !6966
  %17 = load i8*, i8** %ptr8, align 8, !dbg !6966
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 -1, !dbg !6966
  store i8* %incdec.ptr, i8** %ptr8, align 8, !dbg !6966
  br label %if.end9, !dbg !6966

if.end9:                                          ; preds = %if.then7, %land.lhs.true4, %land.lhs.true, %if.end
  %18 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6967
  %ptr10 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %18, i32 0, i32 3, !dbg !6967
  %19 = load i8*, i8** %ptr10, align 8, !dbg !6967
  %20 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6967
  %end11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %20, i32 0, i32 2, !dbg !6967
  %21 = load i8*, i8** %end11, align 8, !dbg !6967
  %cmp12 = icmp eq i8* %19, %21, !dbg !6967
  br i1 %cmp12, label %land.lhs.true14, label %cond.false, !dbg !6967

land.lhs.true14:                                  ; preds = %if.end9
  %22 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6969
  %call15 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %22), !dbg !6969
  %tobool16 = icmp ne i8 %call15, 0, !dbg !6969
  br i1 %tobool16, label %cond.false, label %cond.true, !dbg !6971

cond.true:                                        ; preds = %land.lhs.true14
  br i1 false, label %if.end20, label %if.then19, !dbg !6972

cond.false:                                       ; preds = %land.lhs.true14, %if.end9
  %23 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !6974
  %ptr17 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %23, i32 0, i32 3, !dbg !6974
  %24 = load i8*, i8** %ptr17, align 8, !dbg !6974
  %incdec.ptr18 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !6974
  store i8* %incdec.ptr18, i8** %ptr17, align 8, !dbg !6974
  store i8 0, i8* %24, align 1, !dbg !6974
  br i1 true, label %if.end20, label %if.then19, !dbg !6976

if.then19:                                        ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, align 4, !dbg !6977
  br label %return, !dbg !6977

if.end20:                                         ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !6978
  br label %return, !dbg !6978

return:                                           ; preds = %if.end20, %if.then19, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !6979
  ret i32 %25, !dbg !6979
}

; Function Attrs: nounwind uwtable
define internal i32 @storeEntityValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %entityTextPtr, i8* %entityTextEnd) #0 !dbg !951 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %entityTextPtr.addr = alloca i8*, align 8
  %entityTextEnd.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %pool = alloca %struct.STRING_POOL*, align 8
  %result = alloca i32, align 4
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %buf = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !6980, metadata !1076), !dbg !6981
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !6982, metadata !1076), !dbg !6983
  store i8* %entityTextPtr, i8** %entityTextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entityTextPtr.addr, metadata !6984, metadata !1076), !dbg !6985
  store i8* %entityTextEnd, i8** %entityTextEnd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entityTextEnd.addr, metadata !6986, metadata !1076), !dbg !6987
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !6988, metadata !1076), !dbg !6989
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !6990
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !6990
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !6990
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !6989
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool, metadata !6991, metadata !1076), !dbg !6992
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !6993
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 5, !dbg !6994
  store %struct.STRING_POOL* %entityValuePool, %struct.STRING_POOL** %pool, align 8, !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6995, metadata !1076), !dbg !6996
  store i32 0, i32* %result, align 4, !dbg !6996
  %3 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !6997
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %3, i32 0, i32 0, !dbg !6999
  %4 = load %struct.block*, %struct.block** %blocks, align 8, !dbg !6999
  %tobool = icmp ne %struct.block* %4, null, !dbg !6997
  br i1 %tobool, label %if.end3, label %if.then, !dbg !7000

if.then:                                          ; preds = %entry
  %5 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7001
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %5), !dbg !7004
  %tobool1 = icmp ne i8 %call, 0, !dbg !7004
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !7005

if.then2:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !7006
  br label %return, !dbg !7006

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !7007

if.end3:                                          ; preds = %if.end, %entry
  br label %for.cond, !dbg !7008

for.cond:                                         ; preds = %sw.epilog, %if.end3
  call void @llvm.dbg.declare(metadata i8** %next, metadata !7009, metadata !1076), !dbg !7013
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !7014, metadata !1076), !dbg !7015
  %6 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7016
  %literalScanners = getelementptr inbounds %struct.encoding, %struct.encoding* %6, i32 0, i32 1, !dbg !7016
  %arrayidx = getelementptr inbounds [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %literalScanners, i64 0, i64 1, !dbg !7016
  %7 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !7016
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7016
  %9 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7016
  %10 = load i8*, i8** %entityTextEnd.addr, align 8, !dbg !7016
  %call4 = call i32 %7(%struct.encoding* %8, i8* %9, i8* %10, i8** %next), !dbg !7016
  store i32 %call4, i32* %tok, align 4, !dbg !7015
  %11 = load i32, i32* %tok, align 4, !dbg !7017
  switch i32 %11, label %sw.default [
    i32 28, label %sw.bb
    i32 -4, label %sw.bb5
    i32 9, label %sw.bb6
    i32 6, label %sw.bb6
    i32 -3, label %sw.bb11
    i32 7, label %sw.bb12
    i32 10, label %sw.bb18
    i32 -1, label %sw.bb49
    i32 0, label %sw.bb55
  ], !dbg !7018

sw.bb:                                            ; preds = %for.cond
  %12 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7019
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7021
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 47, !dbg !7021
  store i8* %12, i8** %m_eventPtr, align 8, !dbg !7022
  store i32 10, i32* %result, align 4, !dbg !7023
  br label %endEntityValue, !dbg !7024

sw.bb5:                                           ; preds = %for.cond
  store i32 0, i32* %result, align 4, !dbg !7025
  br label %endEntityValue, !dbg !7026

sw.bb6:                                           ; preds = %for.cond, %for.cond
  %14 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7027
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7029
  %16 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7030
  %17 = load i8*, i8** %next, align 8, !dbg !7031
  %call7 = call i8* @poolAppend(%struct.STRING_POOL* %14, %struct.encoding* %15, i8* %16, i8* %17), !dbg !7032
  %tobool8 = icmp ne i8* %call7, null, !dbg !7032
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !7033

if.then9:                                         ; preds = %sw.bb6
  store i32 1, i32* %result, align 4, !dbg !7034
  br label %endEntityValue, !dbg !7036

if.end10:                                         ; preds = %sw.bb6
  br label %sw.epilog, !dbg !7037

sw.bb11:                                          ; preds = %for.cond
  %18 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7038
  %19 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7039
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %19, i32 0, i32 13, !dbg !7040
  %20 = load i32, i32* %minBytesPerChar, align 8, !dbg !7040
  %idx.ext = sext i32 %20 to i64, !dbg !7041
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !7041
  store i8* %add.ptr, i8** %next, align 8, !dbg !7042
  br label %sw.bb12, !dbg !7043

sw.bb12:                                          ; preds = %for.cond, %sw.bb11
  %21 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7044
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %21, i32 0, i32 2, !dbg !7046
  %22 = load i8*, i8** %end, align 8, !dbg !7046
  %23 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7047
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %23, i32 0, i32 3, !dbg !7048
  %24 = load i8*, i8** %ptr, align 8, !dbg !7048
  %cmp = icmp eq i8* %22, %24, !dbg !7049
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !7050

land.lhs.true:                                    ; preds = %sw.bb12
  %25 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7051
  %call13 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %25), !dbg !7053
  %tobool14 = icmp ne i8 %call13, 0, !dbg !7053
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7054

if.then15:                                        ; preds = %land.lhs.true
  store i32 1, i32* %result, align 4, !dbg !7055
  br label %endEntityValue, !dbg !7057

if.end16:                                         ; preds = %land.lhs.true, %sw.bb12
  %26 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7058
  %ptr17 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %26, i32 0, i32 3, !dbg !7059
  %27 = load i8*, i8** %ptr17, align 8, !dbg !7060
  %incdec.ptr = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7060
  store i8* %incdec.ptr, i8** %ptr17, align 8, !dbg !7060
  store i8 10, i8* %27, align 1, !dbg !7061
  br label %sw.epilog, !dbg !7062

sw.bb18:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !7063, metadata !1076), !dbg !7066
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7067, metadata !1076), !dbg !7068
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7069, metadata !1076), !dbg !7070
  %28 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7071
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %28, i32 0, i32 7, !dbg !7071
  %29 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8, !dbg !7071
  %30 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7071
  %31 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7071
  %call19 = call i32 %29(%struct.encoding* %30, i8* %31), !dbg !7071
  store i32 %call19, i32* %n, align 4, !dbg !7070
  %32 = load i32, i32* %n, align 4, !dbg !7072
  %cmp20 = icmp slt i32 %32, 0, !dbg !7074
  br i1 %cmp20, label %if.then21, label %if.end26, !dbg !7075

if.then21:                                        ; preds = %sw.bb18
  %33 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7076
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7079
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 34, !dbg !7079
  %35 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !7079
  %cmp22 = icmp eq %struct.encoding* %33, %35, !dbg !7080
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !7081

if.then23:                                        ; preds = %if.then21
  %36 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7082
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7083
  %m_eventPtr24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 47, !dbg !7083
  store i8* %36, i8** %m_eventPtr24, align 8, !dbg !7084
  br label %if.end25, !dbg !7083

if.end25:                                         ; preds = %if.then23, %if.then21
  store i32 14, i32* %result, align 4, !dbg !7085
  br label %endEntityValue, !dbg !7086

if.end26:                                         ; preds = %sw.bb18
  %38 = load i32, i32* %n, align 4, !dbg !7087
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !7088
  %call27 = call i32 @XmlUtf8Encode(i32 %38, i8* %arraydecay), !dbg !7089
  store i32 %call27, i32* %n, align 4, !dbg !7090
  %39 = load i32, i32* %n, align 4, !dbg !7091
  %tobool28 = icmp ne i32 %39, 0, !dbg !7091
  br i1 %tobool28, label %if.end35, label %if.then29, !dbg !7093

if.then29:                                        ; preds = %if.end26
  %40 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7094
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7097
  %m_encoding30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 34, !dbg !7097
  %42 = load %struct.encoding*, %struct.encoding** %m_encoding30, align 8, !dbg !7097
  %cmp31 = icmp eq %struct.encoding* %40, %42, !dbg !7098
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !7099

if.then32:                                        ; preds = %if.then29
  %43 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7100
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7101
  %m_eventPtr33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 47, !dbg !7101
  store i8* %43, i8** %m_eventPtr33, align 8, !dbg !7102
  br label %if.end34, !dbg !7101

if.end34:                                         ; preds = %if.then32, %if.then29
  store i32 14, i32* %result, align 4, !dbg !7103
  br label %endEntityValue, !dbg !7104

if.end35:                                         ; preds = %if.end26
  store i32 0, i32* %i, align 4, !dbg !7105
  br label %for.cond36, !dbg !7107

for.cond36:                                       ; preds = %for.inc, %if.end35
  %45 = load i32, i32* %i, align 4, !dbg !7108
  %46 = load i32, i32* %n, align 4, !dbg !7111
  %cmp37 = icmp slt i32 %45, %46, !dbg !7112
  br i1 %cmp37, label %for.body, label %for.end, !dbg !7113

for.body:                                         ; preds = %for.cond36
  %47 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7114
  %end38 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %47, i32 0, i32 2, !dbg !7117
  %48 = load i8*, i8** %end38, align 8, !dbg !7117
  %49 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7118
  %ptr39 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %49, i32 0, i32 3, !dbg !7119
  %50 = load i8*, i8** %ptr39, align 8, !dbg !7119
  %cmp40 = icmp eq i8* %48, %50, !dbg !7120
  br i1 %cmp40, label %land.lhs.true41, label %if.end45, !dbg !7121

land.lhs.true41:                                  ; preds = %for.body
  %51 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7122
  %call42 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %51), !dbg !7124
  %tobool43 = icmp ne i8 %call42, 0, !dbg !7124
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !7125

if.then44:                                        ; preds = %land.lhs.true41
  store i32 1, i32* %result, align 4, !dbg !7126
  br label %endEntityValue, !dbg !7128

if.end45:                                         ; preds = %land.lhs.true41, %for.body
  %52 = load i32, i32* %i, align 4, !dbg !7129
  %idxprom = sext i32 %52 to i64, !dbg !7130
  %arrayidx46 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 %idxprom, !dbg !7130
  %53 = load i8, i8* %arrayidx46, align 1, !dbg !7130
  %54 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8, !dbg !7131
  %ptr47 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %54, i32 0, i32 3, !dbg !7132
  %55 = load i8*, i8** %ptr47, align 8, !dbg !7133
  %incdec.ptr48 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !7133
  store i8* %incdec.ptr48, i8** %ptr47, align 8, !dbg !7133
  store i8 %53, i8* %55, align 1, !dbg !7134
  br label %for.inc, !dbg !7135

for.inc:                                          ; preds = %if.end45
  %56 = load i32, i32* %i, align 4, !dbg !7136
  %inc = add nsw i32 %56, 1, !dbg !7136
  store i32 %inc, i32* %i, align 4, !dbg !7136
  br label %for.cond36, !dbg !7138

for.end:                                          ; preds = %for.cond36
  br label %sw.epilog, !dbg !7139

sw.bb49:                                          ; preds = %for.cond
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7140
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7142
  %m_encoding50 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 34, !dbg !7142
  %59 = load %struct.encoding*, %struct.encoding** %m_encoding50, align 8, !dbg !7142
  %cmp51 = icmp eq %struct.encoding* %57, %59, !dbg !7143
  br i1 %cmp51, label %if.then52, label %if.end54, !dbg !7144

if.then52:                                        ; preds = %sw.bb49
  %60 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7145
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7146
  %m_eventPtr53 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 47, !dbg !7146
  store i8* %60, i8** %m_eventPtr53, align 8, !dbg !7147
  br label %if.end54, !dbg !7146

if.end54:                                         ; preds = %if.then52, %sw.bb49
  store i32 4, i32* %result, align 4, !dbg !7148
  br label %endEntityValue, !dbg !7149

sw.bb55:                                          ; preds = %for.cond
  %62 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7150
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7152
  %m_encoding56 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 34, !dbg !7152
  %64 = load %struct.encoding*, %struct.encoding** %m_encoding56, align 8, !dbg !7152
  %cmp57 = icmp eq %struct.encoding* %62, %64, !dbg !7153
  br i1 %cmp57, label %if.then58, label %if.end60, !dbg !7154

if.then58:                                        ; preds = %sw.bb55
  %65 = load i8*, i8** %next, align 8, !dbg !7155
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7156
  %m_eventPtr59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 47, !dbg !7156
  store i8* %65, i8** %m_eventPtr59, align 8, !dbg !7157
  br label %if.end60, !dbg !7156

if.end60:                                         ; preds = %if.then58, %sw.bb55
  store i32 4, i32* %result, align 4, !dbg !7158
  br label %endEntityValue, !dbg !7159

sw.default:                                       ; preds = %for.cond
  %67 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7160
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7162
  %m_encoding61 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 34, !dbg !7162
  %69 = load %struct.encoding*, %struct.encoding** %m_encoding61, align 8, !dbg !7162
  %cmp62 = icmp eq %struct.encoding* %67, %69, !dbg !7163
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !7164

if.then63:                                        ; preds = %sw.default
  %70 = load i8*, i8** %entityTextPtr.addr, align 8, !dbg !7165
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7166
  %m_eventPtr64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 47, !dbg !7166
  store i8* %70, i8** %m_eventPtr64, align 8, !dbg !7167
  br label %if.end65, !dbg !7166

if.end65:                                         ; preds = %if.then63, %sw.default
  store i32 23, i32* %result, align 4, !dbg !7168
  br label %endEntityValue, !dbg !7169

sw.epilog:                                        ; preds = %for.end, %if.end16, %if.end10
  %72 = load i8*, i8** %next, align 8, !dbg !7170
  store i8* %72, i8** %entityTextPtr.addr, align 8, !dbg !7171
  br label %for.cond, !dbg !7172

endEntityValue:                                   ; preds = %if.end65, %if.end60, %if.end54, %if.then44, %if.end34, %if.end25, %if.then15, %if.then9, %sw.bb5, %sw.bb
  %73 = load i32, i32* %result, align 4, !dbg !7174
  store i32 %73, i32* %retval, align 4, !dbg !7175
  br label %return, !dbg !7175

return:                                           ; preds = %endEntityValue, %if.then2
  %74 = load i32, i32* %retval, align 4, !dbg !7176
  ret i32 %74, !dbg !7176
}

; Function Attrs: nounwind uwtable
define internal %struct.NAMED* @lookup(%struct.XML_ParserStruct* %parser, %struct.HASH_TABLE* %table, i8* %name, i64 %createSize) #0 !dbg !954 {
entry:
  %retval = alloca %struct.NAMED*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %name.addr = alloca i8*, align 8
  %createSize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %tsize = alloca i64, align 8
  %h = alloca i64, align 8
  %mask = alloca i64, align 8
  %step = alloca i8, align 1
  %newPower = alloca i8, align 1
  %newSize = alloca i64, align 8
  %newMask = alloca i64, align 8
  %tsize61 = alloca i64, align 8
  %newV = alloca %struct.NAMED**, align 8
  %newHash = alloca i64, align 8
  %j = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !7177, metadata !1076), !dbg !7178
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !7179, metadata !1076), !dbg !7180
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7181, metadata !1076), !dbg !7182
  store i64 %createSize, i64* %createSize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %createSize.addr, metadata !7183, metadata !1076), !dbg !7184
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7185, metadata !1076), !dbg !7186
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7187
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 2, !dbg !7189
  %1 = load i64, i64* %size, align 8, !dbg !7189
  %cmp = icmp eq i64 %1, 0, !dbg !7190
  br i1 %cmp, label %if.then, label %if.else, !dbg !7191

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %tsize, metadata !7192, metadata !1076), !dbg !7194
  %2 = load i64, i64* %createSize.addr, align 8, !dbg !7195
  %tobool = icmp ne i64 %2, 0, !dbg !7195
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7197

if.then1:                                         ; preds = %if.then
  store %struct.NAMED* null, %struct.NAMED** %retval, align 8, !dbg !7198
  br label %return, !dbg !7198

if.end:                                           ; preds = %if.then
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7199
  %power = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 1, !dbg !7200
  store i8 6, i8* %power, align 8, !dbg !7201
  %4 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7202
  %size2 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %4, i32 0, i32 2, !dbg !7203
  store i64 64, i64* %size2, align 8, !dbg !7204
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7205
  %size3 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 2, !dbg !7206
  %6 = load i64, i64* %size3, align 8, !dbg !7206
  %mul = mul i64 %6, 8, !dbg !7207
  store i64 %mul, i64* %tsize, align 8, !dbg !7208
  %7 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7209
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %7, i32 0, i32 4, !dbg !7210
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !7210
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %8, i32 0, i32 0, !dbg !7211
  %9 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !7211
  %10 = load i64, i64* %tsize, align 8, !dbg !7212
  %call = call i8* %9(i64 %10), !dbg !7209
  %11 = bitcast i8* %call to %struct.NAMED**, !dbg !7213
  %12 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7214
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %12, i32 0, i32 0, !dbg !7215
  store %struct.NAMED** %11, %struct.NAMED*** %v, align 8, !dbg !7216
  %13 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7217
  %v4 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %13, i32 0, i32 0, !dbg !7219
  %14 = load %struct.NAMED**, %struct.NAMED*** %v4, align 8, !dbg !7219
  %tobool5 = icmp ne %struct.NAMED** %14, null, !dbg !7217
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !7220

if.then6:                                         ; preds = %if.end
  %15 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7221
  %size7 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %15, i32 0, i32 2, !dbg !7223
  store i64 0, i64* %size7, align 8, !dbg !7224
  store %struct.NAMED* null, %struct.NAMED** %retval, align 8, !dbg !7225
  br label %return, !dbg !7225

if.end8:                                          ; preds = %if.end
  %16 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7226
  %v9 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %16, i32 0, i32 0, !dbg !7227
  %17 = load %struct.NAMED**, %struct.NAMED*** %v9, align 8, !dbg !7227
  %18 = bitcast %struct.NAMED** %17 to i8*, !dbg !7228
  %19 = load i64, i64* %tsize, align 8, !dbg !7229
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 %19, i32 8, i1 false), !dbg !7228
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7230
  %21 = load i8*, i8** %name.addr, align 8, !dbg !7231
  %call10 = call i64 @hash(%struct.XML_ParserStruct* %20, i8* %21), !dbg !7232
  %22 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7233
  %size11 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %22, i32 0, i32 2, !dbg !7234
  %23 = load i64, i64* %size11, align 8, !dbg !7234
  %sub = sub i64 %23, 1, !dbg !7235
  %and = and i64 %call10, %sub, !dbg !7236
  store i64 %and, i64* %i, align 8, !dbg !7237
  br label %if.end153, !dbg !7238

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %h, metadata !7239, metadata !1076), !dbg !7241
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7242
  %25 = load i8*, i8** %name.addr, align 8, !dbg !7243
  %call12 = call i64 @hash(%struct.XML_ParserStruct* %24, i8* %25), !dbg !7244
  store i64 %call12, i64* %h, align 8, !dbg !7241
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !7245, metadata !1076), !dbg !7246
  %26 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7247
  %size13 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %26, i32 0, i32 2, !dbg !7248
  %27 = load i64, i64* %size13, align 8, !dbg !7248
  %sub14 = sub i64 %27, 1, !dbg !7249
  store i64 %sub14, i64* %mask, align 8, !dbg !7246
  call void @llvm.dbg.declare(metadata i8* %step, metadata !7250, metadata !1076), !dbg !7251
  store i8 0, i8* %step, align 1, !dbg !7251
  %28 = load i64, i64* %h, align 8, !dbg !7252
  %29 = load i64, i64* %mask, align 8, !dbg !7253
  %and15 = and i64 %28, %29, !dbg !7254
  store i64 %and15, i64* %i, align 8, !dbg !7255
  br label %while.cond, !dbg !7256

while.cond:                                       ; preds = %cond.end, %if.else
  %30 = load i64, i64* %i, align 8, !dbg !7257
  %31 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7259
  %v16 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %31, i32 0, i32 0, !dbg !7260
  %32 = load %struct.NAMED**, %struct.NAMED*** %v16, align 8, !dbg !7260
  %arrayidx = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %32, i64 %30, !dbg !7259
  %33 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8, !dbg !7259
  %tobool17 = icmp ne %struct.NAMED* %33, null, !dbg !7261
  br i1 %tobool17, label %while.body, label %while.end, !dbg !7261

while.body:                                       ; preds = %while.cond
  %34 = load i8*, i8** %name.addr, align 8, !dbg !7262
  %35 = load i64, i64* %i, align 8, !dbg !7265
  %36 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7266
  %v18 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %36, i32 0, i32 0, !dbg !7267
  %37 = load %struct.NAMED**, %struct.NAMED*** %v18, align 8, !dbg !7267
  %arrayidx19 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %37, i64 %35, !dbg !7266
  %38 = load %struct.NAMED*, %struct.NAMED** %arrayidx19, align 8, !dbg !7266
  %name20 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %38, i32 0, i32 0, !dbg !7268
  %39 = load i8*, i8** %name20, align 8, !dbg !7268
  %call21 = call zeroext i8 @keyeq(i8* %34, i8* %39), !dbg !7269
  %tobool22 = icmp ne i8 %call21, 0, !dbg !7269
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !7270

if.then23:                                        ; preds = %while.body
  %40 = load i64, i64* %i, align 8, !dbg !7271
  %41 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7272
  %v24 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %41, i32 0, i32 0, !dbg !7273
  %42 = load %struct.NAMED**, %struct.NAMED*** %v24, align 8, !dbg !7273
  %arrayidx25 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %42, i64 %40, !dbg !7272
  %43 = load %struct.NAMED*, %struct.NAMED** %arrayidx25, align 8, !dbg !7272
  store %struct.NAMED* %43, %struct.NAMED** %retval, align 8, !dbg !7274
  br label %return, !dbg !7274

if.end26:                                         ; preds = %while.body
  %44 = load i8, i8* %step, align 1, !dbg !7275
  %tobool27 = icmp ne i8 %44, 0, !dbg !7275
  br i1 %tobool27, label %if.end35, label %if.then28, !dbg !7277

if.then28:                                        ; preds = %if.end26
  %45 = load i64, i64* %h, align 8, !dbg !7278
  %46 = load i64, i64* %mask, align 8, !dbg !7278
  %neg = xor i64 %46, -1, !dbg !7278
  %and29 = and i64 %45, %neg, !dbg !7278
  %47 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7278
  %power30 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %47, i32 0, i32 1, !dbg !7278
  %48 = load i8, i8* %power30, align 8, !dbg !7278
  %conv = zext i8 %48 to i32, !dbg !7278
  %sub31 = sub nsw i32 %conv, 1, !dbg !7278
  %sh_prom = zext i32 %sub31 to i64, !dbg !7278
  %shr = lshr i64 %and29, %sh_prom, !dbg !7278
  %49 = load i64, i64* %mask, align 8, !dbg !7278
  %shr32 = lshr i64 %49, 2, !dbg !7278
  %and33 = and i64 %shr, %shr32, !dbg !7278
  %or = or i64 %and33, 1, !dbg !7278
  %conv34 = trunc i64 %or to i8, !dbg !7278
  store i8 %conv34, i8* %step, align 1, !dbg !7279
  br label %if.end35, !dbg !7280

if.end35:                                         ; preds = %if.then28, %if.end26
  %50 = load i64, i64* %i, align 8, !dbg !7281
  %51 = load i8, i8* %step, align 1, !dbg !7282
  %conv36 = zext i8 %51 to i64, !dbg !7282
  %cmp37 = icmp ult i64 %50, %conv36, !dbg !7283
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !7281

cond.true:                                        ; preds = %if.end35
  %52 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7284
  %size39 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %52, i32 0, i32 2, !dbg !7286
  %53 = load i64, i64* %size39, align 8, !dbg !7286
  %54 = load i8, i8* %step, align 1, !dbg !7287
  %conv40 = zext i8 %54 to i64, !dbg !7287
  %sub41 = sub i64 %53, %conv40, !dbg !7288
  %55 = load i64, i64* %i, align 8, !dbg !7289
  %add = add i64 %55, %sub41, !dbg !7289
  store i64 %add, i64* %i, align 8, !dbg !7289
  br label %cond.end, !dbg !7290

cond.false:                                       ; preds = %if.end35
  %56 = load i8, i8* %step, align 1, !dbg !7291
  %conv42 = zext i8 %56 to i64, !dbg !7291
  %57 = load i64, i64* %i, align 8, !dbg !7293
  %sub43 = sub i64 %57, %conv42, !dbg !7293
  store i64 %sub43, i64* %i, align 8, !dbg !7293
  br label %cond.end, !dbg !7294

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %sub43, %cond.false ], !dbg !7295
  br label %while.cond, !dbg !7297

while.end:                                        ; preds = %while.cond
  %58 = load i64, i64* %createSize.addr, align 8, !dbg !7299
  %tobool44 = icmp ne i64 %58, 0, !dbg !7299
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !7301

if.then45:                                        ; preds = %while.end
  store %struct.NAMED* null, %struct.NAMED** %retval, align 8, !dbg !7302
  br label %return, !dbg !7302

if.end46:                                         ; preds = %while.end
  %59 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7303
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %59, i32 0, i32 3, !dbg !7305
  %60 = load i64, i64* %used, align 8, !dbg !7305
  %61 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7306
  %power47 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %61, i32 0, i32 1, !dbg !7307
  %62 = load i8, i8* %power47, align 8, !dbg !7307
  %conv48 = zext i8 %62 to i32, !dbg !7306
  %sub49 = sub nsw i32 %conv48, 1, !dbg !7308
  %sh_prom50 = zext i32 %sub49 to i64, !dbg !7309
  %shr51 = lshr i64 %60, %sh_prom50, !dbg !7309
  %tobool52 = icmp ne i64 %shr51, 0, !dbg !7309
  br i1 %tobool52, label %if.then53, label %if.end152, !dbg !7310

if.then53:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i8* %newPower, metadata !7311, metadata !1076), !dbg !7313
  %63 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7314
  %power54 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %63, i32 0, i32 1, !dbg !7315
  %64 = load i8, i8* %power54, align 8, !dbg !7315
  %conv55 = zext i8 %64 to i32, !dbg !7314
  %add56 = add nsw i32 %conv55, 1, !dbg !7316
  %conv57 = trunc i32 %add56 to i8, !dbg !7314
  store i8 %conv57, i8* %newPower, align 1, !dbg !7313
  call void @llvm.dbg.declare(metadata i64* %newSize, metadata !7317, metadata !1076), !dbg !7318
  %65 = load i8, i8* %newPower, align 1, !dbg !7319
  %conv58 = zext i8 %65 to i32, !dbg !7319
  %sh_prom59 = zext i32 %conv58 to i64, !dbg !7320
  %shl = shl i64 1, %sh_prom59, !dbg !7320
  store i64 %shl, i64* %newSize, align 8, !dbg !7318
  call void @llvm.dbg.declare(metadata i64* %newMask, metadata !7321, metadata !1076), !dbg !7322
  %66 = load i64, i64* %newSize, align 8, !dbg !7323
  %sub60 = sub i64 %66, 1, !dbg !7324
  store i64 %sub60, i64* %newMask, align 8, !dbg !7322
  call void @llvm.dbg.declare(metadata i64* %tsize61, metadata !7325, metadata !1076), !dbg !7326
  %67 = load i64, i64* %newSize, align 8, !dbg !7327
  %mul62 = mul i64 %67, 8, !dbg !7328
  store i64 %mul62, i64* %tsize61, align 8, !dbg !7326
  call void @llvm.dbg.declare(metadata %struct.NAMED*** %newV, metadata !7329, metadata !1076), !dbg !7330
  %68 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7331
  %mem63 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %68, i32 0, i32 4, !dbg !7332
  %69 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem63, align 8, !dbg !7332
  %malloc_fcn64 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %69, i32 0, i32 0, !dbg !7333
  %70 = load i8* (i64)*, i8* (i64)** %malloc_fcn64, align 8, !dbg !7333
  %71 = load i64, i64* %tsize61, align 8, !dbg !7334
  %call65 = call i8* %70(i64 %71), !dbg !7331
  %72 = bitcast i8* %call65 to %struct.NAMED**, !dbg !7335
  store %struct.NAMED** %72, %struct.NAMED*** %newV, align 8, !dbg !7330
  %73 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !7336
  %tobool66 = icmp ne %struct.NAMED** %73, null, !dbg !7336
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !7338

if.then67:                                        ; preds = %if.then53
  store %struct.NAMED* null, %struct.NAMED** %retval, align 8, !dbg !7339
  br label %return, !dbg !7339

if.end68:                                         ; preds = %if.then53
  %74 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !7340
  %75 = bitcast %struct.NAMED** %74 to i8*, !dbg !7341
  %76 = load i64, i64* %tsize61, align 8, !dbg !7342
  call void @llvm.memset.p0i8.i64(i8* %75, i8 0, i64 %76, i32 8, i1 false), !dbg !7341
  store i64 0, i64* %i, align 8, !dbg !7343
  br label %for.cond, !dbg !7345

for.cond:                                         ; preds = %for.inc, %if.end68
  %77 = load i64, i64* %i, align 8, !dbg !7346
  %78 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7349
  %size69 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %78, i32 0, i32 2, !dbg !7350
  %79 = load i64, i64* %size69, align 8, !dbg !7350
  %cmp70 = icmp ult i64 %77, %79, !dbg !7351
  br i1 %cmp70, label %for.body, label %for.end, !dbg !7352

for.body:                                         ; preds = %for.cond
  %80 = load i64, i64* %i, align 8, !dbg !7353
  %81 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7355
  %v72 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %81, i32 0, i32 0, !dbg !7356
  %82 = load %struct.NAMED**, %struct.NAMED*** %v72, align 8, !dbg !7356
  %arrayidx73 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %82, i64 %80, !dbg !7355
  %83 = load %struct.NAMED*, %struct.NAMED** %arrayidx73, align 8, !dbg !7355
  %tobool74 = icmp ne %struct.NAMED* %83, null, !dbg !7355
  br i1 %tobool74, label %if.then75, label %if.end114, !dbg !7357

if.then75:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %newHash, metadata !7358, metadata !1076), !dbg !7360
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7361
  %85 = load i64, i64* %i, align 8, !dbg !7362
  %86 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7363
  %v76 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %86, i32 0, i32 0, !dbg !7364
  %87 = load %struct.NAMED**, %struct.NAMED*** %v76, align 8, !dbg !7364
  %arrayidx77 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %87, i64 %85, !dbg !7363
  %88 = load %struct.NAMED*, %struct.NAMED** %arrayidx77, align 8, !dbg !7363
  %name78 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %88, i32 0, i32 0, !dbg !7365
  %89 = load i8*, i8** %name78, align 8, !dbg !7365
  %call79 = call i64 @hash(%struct.XML_ParserStruct* %84, i8* %89), !dbg !7366
  store i64 %call79, i64* %newHash, align 8, !dbg !7360
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7367, metadata !1076), !dbg !7368
  %90 = load i64, i64* %newHash, align 8, !dbg !7369
  %91 = load i64, i64* %newMask, align 8, !dbg !7370
  %and80 = and i64 %90, %91, !dbg !7371
  store i64 %and80, i64* %j, align 8, !dbg !7368
  store i8 0, i8* %step, align 1, !dbg !7372
  br label %while.cond81, !dbg !7373

while.cond81:                                     ; preds = %cond.end108, %if.then75
  %92 = load i64, i64* %j, align 8, !dbg !7374
  %93 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !7376
  %arrayidx82 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %93, i64 %92, !dbg !7376
  %94 = load %struct.NAMED*, %struct.NAMED** %arrayidx82, align 8, !dbg !7376
  %tobool83 = icmp ne %struct.NAMED* %94, null, !dbg !7377
  br i1 %tobool83, label %while.body84, label %while.end110, !dbg !7377

while.body84:                                     ; preds = %while.cond81
  %95 = load i8, i8* %step, align 1, !dbg !7378
  %tobool85 = icmp ne i8 %95, 0, !dbg !7378
  br i1 %tobool85, label %if.end97, label %if.then86, !dbg !7381

if.then86:                                        ; preds = %while.body84
  %96 = load i64, i64* %newHash, align 8, !dbg !7382
  %97 = load i64, i64* %newMask, align 8, !dbg !7382
  %neg87 = xor i64 %97, -1, !dbg !7382
  %and88 = and i64 %96, %neg87, !dbg !7382
  %98 = load i8, i8* %newPower, align 1, !dbg !7382
  %conv89 = zext i8 %98 to i32, !dbg !7382
  %sub90 = sub nsw i32 %conv89, 1, !dbg !7382
  %sh_prom91 = zext i32 %sub90 to i64, !dbg !7382
  %shr92 = lshr i64 %and88, %sh_prom91, !dbg !7382
  %99 = load i64, i64* %newMask, align 8, !dbg !7382
  %shr93 = lshr i64 %99, 2, !dbg !7382
  %and94 = and i64 %shr92, %shr93, !dbg !7382
  %or95 = or i64 %and94, 1, !dbg !7382
  %conv96 = trunc i64 %or95 to i8, !dbg !7382
  store i8 %conv96, i8* %step, align 1, !dbg !7383
  br label %if.end97, !dbg !7384

if.end97:                                         ; preds = %if.then86, %while.body84
  %100 = load i64, i64* %j, align 8, !dbg !7385
  %101 = load i8, i8* %step, align 1, !dbg !7386
  %conv98 = zext i8 %101 to i64, !dbg !7386
  %cmp99 = icmp ult i64 %100, %conv98, !dbg !7387
  br i1 %cmp99, label %cond.true101, label %cond.false105, !dbg !7385

cond.true101:                                     ; preds = %if.end97
  %102 = load i64, i64* %newSize, align 8, !dbg !7388
  %103 = load i8, i8* %step, align 1, !dbg !7390
  %conv102 = zext i8 %103 to i64, !dbg !7390
  %sub103 = sub i64 %102, %conv102, !dbg !7391
  %104 = load i64, i64* %j, align 8, !dbg !7392
  %add104 = add i64 %104, %sub103, !dbg !7392
  store i64 %add104, i64* %j, align 8, !dbg !7392
  br label %cond.end108, !dbg !7393

cond.false105:                                    ; preds = %if.end97
  %105 = load i8, i8* %step, align 1, !dbg !7394
  %conv106 = zext i8 %105 to i64, !dbg !7394
  %106 = load i64, i64* %j, align 8, !dbg !7396
  %sub107 = sub i64 %106, %conv106, !dbg !7396
  store i64 %sub107, i64* %j, align 8, !dbg !7396
  br label %cond.end108, !dbg !7397

cond.end108:                                      ; preds = %cond.false105, %cond.true101
  %cond109 = phi i64 [ %add104, %cond.true101 ], [ %sub107, %cond.false105 ], !dbg !7398
  br label %while.cond81, !dbg !7400

while.end110:                                     ; preds = %while.cond81
  %107 = load i64, i64* %i, align 8, !dbg !7402
  %108 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7403
  %v111 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %108, i32 0, i32 0, !dbg !7404
  %109 = load %struct.NAMED**, %struct.NAMED*** %v111, align 8, !dbg !7404
  %arrayidx112 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %109, i64 %107, !dbg !7403
  %110 = load %struct.NAMED*, %struct.NAMED** %arrayidx112, align 8, !dbg !7403
  %111 = load i64, i64* %j, align 8, !dbg !7405
  %112 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !7406
  %arrayidx113 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %112, i64 %111, !dbg !7406
  store %struct.NAMED* %110, %struct.NAMED** %arrayidx113, align 8, !dbg !7407
  br label %if.end114, !dbg !7408

if.end114:                                        ; preds = %while.end110, %for.body
  br label %for.inc, !dbg !7409

for.inc:                                          ; preds = %if.end114
  %113 = load i64, i64* %i, align 8, !dbg !7411
  %inc = add i64 %113, 1, !dbg !7411
  store i64 %inc, i64* %i, align 8, !dbg !7411
  br label %for.cond, !dbg !7413

for.end:                                          ; preds = %for.cond
  %114 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7414
  %mem115 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %114, i32 0, i32 4, !dbg !7415
  %115 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem115, align 8, !dbg !7415
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %115, i32 0, i32 2, !dbg !7416
  %116 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !7416
  %117 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7417
  %v116 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %117, i32 0, i32 0, !dbg !7418
  %118 = load %struct.NAMED**, %struct.NAMED*** %v116, align 8, !dbg !7418
  %119 = bitcast %struct.NAMED** %118 to i8*, !dbg !7417
  call void %116(i8* %119), !dbg !7414
  %120 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8, !dbg !7419
  %121 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7420
  %v117 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %121, i32 0, i32 0, !dbg !7421
  store %struct.NAMED** %120, %struct.NAMED*** %v117, align 8, !dbg !7422
  %122 = load i8, i8* %newPower, align 1, !dbg !7423
  %123 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7424
  %power118 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %123, i32 0, i32 1, !dbg !7425
  store i8 %122, i8* %power118, align 8, !dbg !7426
  %124 = load i64, i64* %newSize, align 8, !dbg !7427
  %125 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7428
  %size119 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %125, i32 0, i32 2, !dbg !7429
  store i64 %124, i64* %size119, align 8, !dbg !7430
  %126 = load i64, i64* %h, align 8, !dbg !7431
  %127 = load i64, i64* %newMask, align 8, !dbg !7432
  %and120 = and i64 %126, %127, !dbg !7433
  store i64 %and120, i64* %i, align 8, !dbg !7434
  store i8 0, i8* %step, align 1, !dbg !7435
  br label %while.cond121, !dbg !7436

while.cond121:                                    ; preds = %cond.end149, %for.end
  %128 = load i64, i64* %i, align 8, !dbg !7437
  %129 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7439
  %v122 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %129, i32 0, i32 0, !dbg !7440
  %130 = load %struct.NAMED**, %struct.NAMED*** %v122, align 8, !dbg !7440
  %arrayidx123 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %130, i64 %128, !dbg !7439
  %131 = load %struct.NAMED*, %struct.NAMED** %arrayidx123, align 8, !dbg !7439
  %tobool124 = icmp ne %struct.NAMED* %131, null, !dbg !7441
  br i1 %tobool124, label %while.body125, label %while.end151, !dbg !7441

while.body125:                                    ; preds = %while.cond121
  %132 = load i8, i8* %step, align 1, !dbg !7442
  %tobool126 = icmp ne i8 %132, 0, !dbg !7442
  br i1 %tobool126, label %if.end138, label %if.then127, !dbg !7445

if.then127:                                       ; preds = %while.body125
  %133 = load i64, i64* %h, align 8, !dbg !7446
  %134 = load i64, i64* %newMask, align 8, !dbg !7446
  %neg128 = xor i64 %134, -1, !dbg !7446
  %and129 = and i64 %133, %neg128, !dbg !7446
  %135 = load i8, i8* %newPower, align 1, !dbg !7446
  %conv130 = zext i8 %135 to i32, !dbg !7446
  %sub131 = sub nsw i32 %conv130, 1, !dbg !7446
  %sh_prom132 = zext i32 %sub131 to i64, !dbg !7446
  %shr133 = lshr i64 %and129, %sh_prom132, !dbg !7446
  %136 = load i64, i64* %newMask, align 8, !dbg !7446
  %shr134 = lshr i64 %136, 2, !dbg !7446
  %and135 = and i64 %shr133, %shr134, !dbg !7446
  %or136 = or i64 %and135, 1, !dbg !7446
  %conv137 = trunc i64 %or136 to i8, !dbg !7446
  store i8 %conv137, i8* %step, align 1, !dbg !7447
  br label %if.end138, !dbg !7448

if.end138:                                        ; preds = %if.then127, %while.body125
  %137 = load i64, i64* %i, align 8, !dbg !7449
  %138 = load i8, i8* %step, align 1, !dbg !7450
  %conv139 = zext i8 %138 to i64, !dbg !7450
  %cmp140 = icmp ult i64 %137, %conv139, !dbg !7451
  br i1 %cmp140, label %cond.true142, label %cond.false146, !dbg !7449

cond.true142:                                     ; preds = %if.end138
  %139 = load i64, i64* %newSize, align 8, !dbg !7452
  %140 = load i8, i8* %step, align 1, !dbg !7454
  %conv143 = zext i8 %140 to i64, !dbg !7454
  %sub144 = sub i64 %139, %conv143, !dbg !7455
  %141 = load i64, i64* %i, align 8, !dbg !7456
  %add145 = add i64 %141, %sub144, !dbg !7456
  store i64 %add145, i64* %i, align 8, !dbg !7456
  br label %cond.end149, !dbg !7457

cond.false146:                                    ; preds = %if.end138
  %142 = load i8, i8* %step, align 1, !dbg !7458
  %conv147 = zext i8 %142 to i64, !dbg !7458
  %143 = load i64, i64* %i, align 8, !dbg !7460
  %sub148 = sub i64 %143, %conv147, !dbg !7460
  store i64 %sub148, i64* %i, align 8, !dbg !7460
  br label %cond.end149, !dbg !7461

cond.end149:                                      ; preds = %cond.false146, %cond.true142
  %cond150 = phi i64 [ %add145, %cond.true142 ], [ %sub148, %cond.false146 ], !dbg !7462
  br label %while.cond121, !dbg !7464

while.end151:                                     ; preds = %while.cond121
  br label %if.end152, !dbg !7466

if.end152:                                        ; preds = %while.end151, %if.end46
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end8
  %144 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7467
  %mem154 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %144, i32 0, i32 4, !dbg !7468
  %145 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem154, align 8, !dbg !7468
  %malloc_fcn155 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %145, i32 0, i32 0, !dbg !7469
  %146 = load i8* (i64)*, i8* (i64)** %malloc_fcn155, align 8, !dbg !7469
  %147 = load i64, i64* %createSize.addr, align 8, !dbg !7470
  %call156 = call i8* %146(i64 %147), !dbg !7467
  %148 = bitcast i8* %call156 to %struct.NAMED*, !dbg !7471
  %149 = load i64, i64* %i, align 8, !dbg !7472
  %150 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7473
  %v157 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %150, i32 0, i32 0, !dbg !7474
  %151 = load %struct.NAMED**, %struct.NAMED*** %v157, align 8, !dbg !7474
  %arrayidx158 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %151, i64 %149, !dbg !7473
  store %struct.NAMED* %148, %struct.NAMED** %arrayidx158, align 8, !dbg !7475
  %152 = load i64, i64* %i, align 8, !dbg !7476
  %153 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7478
  %v159 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %153, i32 0, i32 0, !dbg !7479
  %154 = load %struct.NAMED**, %struct.NAMED*** %v159, align 8, !dbg !7479
  %arrayidx160 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %154, i64 %152, !dbg !7478
  %155 = load %struct.NAMED*, %struct.NAMED** %arrayidx160, align 8, !dbg !7478
  %tobool161 = icmp ne %struct.NAMED* %155, null, !dbg !7478
  br i1 %tobool161, label %if.end163, label %if.then162, !dbg !7480

if.then162:                                       ; preds = %if.end153
  store %struct.NAMED* null, %struct.NAMED** %retval, align 8, !dbg !7481
  br label %return, !dbg !7481

if.end163:                                        ; preds = %if.end153
  %156 = load i64, i64* %i, align 8, !dbg !7482
  %157 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7483
  %v164 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %157, i32 0, i32 0, !dbg !7484
  %158 = load %struct.NAMED**, %struct.NAMED*** %v164, align 8, !dbg !7484
  %arrayidx165 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %158, i64 %156, !dbg !7483
  %159 = load %struct.NAMED*, %struct.NAMED** %arrayidx165, align 8, !dbg !7483
  %160 = bitcast %struct.NAMED* %159 to i8*, !dbg !7485
  %161 = load i64, i64* %createSize.addr, align 8, !dbg !7486
  call void @llvm.memset.p0i8.i64(i8* %160, i8 0, i64 %161, i32 8, i1 false), !dbg !7485
  %162 = load i8*, i8** %name.addr, align 8, !dbg !7487
  %163 = load i64, i64* %i, align 8, !dbg !7488
  %164 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7489
  %v166 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %164, i32 0, i32 0, !dbg !7490
  %165 = load %struct.NAMED**, %struct.NAMED*** %v166, align 8, !dbg !7490
  %arrayidx167 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %165, i64 %163, !dbg !7489
  %166 = load %struct.NAMED*, %struct.NAMED** %arrayidx167, align 8, !dbg !7489
  %name168 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %166, i32 0, i32 0, !dbg !7491
  store i8* %162, i8** %name168, align 8, !dbg !7492
  %167 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7493
  %used169 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %167, i32 0, i32 3, !dbg !7494
  %168 = load i64, i64* %used169, align 8, !dbg !7495
  %inc170 = add i64 %168, 1, !dbg !7495
  store i64 %inc170, i64* %used169, align 8, !dbg !7495
  %169 = load i64, i64* %i, align 8, !dbg !7496
  %170 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !7497
  %v171 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %170, i32 0, i32 0, !dbg !7498
  %171 = load %struct.NAMED**, %struct.NAMED*** %v171, align 8, !dbg !7498
  %arrayidx172 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %171, i64 %169, !dbg !7497
  %172 = load %struct.NAMED*, %struct.NAMED** %arrayidx172, align 8, !dbg !7497
  store %struct.NAMED* %172, %struct.NAMED** %retval, align 8, !dbg !7499
  br label %return, !dbg !7499

return:                                           ; preds = %if.end163, %if.then162, %if.then67, %if.then45, %if.then23, %if.then6, %if.then1
  %173 = load %struct.NAMED*, %struct.NAMED** %retval, align 8, !dbg !7500
  ret %struct.NAMED* %173, !dbg !7500
}

; Function Attrs: nounwind uwtable
define internal i32 @nextScaffoldPart(%struct.XML_ParserStruct* %parser) #0 !dbg !963 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %me = alloca %struct.CONTENT_SCAFFOLD*, align 8
  %next = alloca i32, align 4
  %temp = alloca %struct.CONTENT_SCAFFOLD*, align 8
  %parent = alloca %struct.CONTENT_SCAFFOLD*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !7501, metadata !1076), !dbg !7502
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !7503, metadata !1076), !dbg !7504
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7505
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !7505
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !7505
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !7504
  call void @llvm.dbg.declare(metadata %struct.CONTENT_SCAFFOLD** %me, metadata !7506, metadata !1076), !dbg !7507
  call void @llvm.dbg.declare(metadata i32* %next, metadata !7508, metadata !1076), !dbg !7509
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7510
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 16, !dbg !7512
  %3 = load i32*, i32** %scaffIndex, align 8, !dbg !7512
  %tobool = icmp ne i32* %3, null, !dbg !7510
  br i1 %tobool, label %if.end6, label %if.then, !dbg !7513

if.then:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7514
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 3, !dbg !7514
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !7514
  %5 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !7514
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7514
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 82, !dbg !7514
  %7 = load i32, i32* %m_groupSize, align 8, !dbg !7514
  %conv = zext i32 %7 to i64, !dbg !7514
  %mul = mul i64 %conv, 4, !dbg !7514
  %call = call i8* %5(i64 %mul), !dbg !7514
  %8 = bitcast i8* %call to i32*, !dbg !7516
  %9 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7517
  %scaffIndex1 = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 16, !dbg !7518
  store i32* %8, i32** %scaffIndex1, align 8, !dbg !7519
  %10 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7520
  %scaffIndex2 = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 16, !dbg !7522
  %11 = load i32*, i32** %scaffIndex2, align 8, !dbg !7522
  %tobool3 = icmp ne i32* %11, null, !dbg !7520
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !7523

if.then4:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !7524
  br label %return, !dbg !7524

if.end:                                           ; preds = %if.then
  %12 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7525
  %scaffIndex5 = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 16, !dbg !7526
  %13 = load i32*, i32** %scaffIndex5, align 8, !dbg !7526
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 0, !dbg !7525
  store i32 0, i32* %arrayidx, align 4, !dbg !7527
  br label %if.end6, !dbg !7528

if.end6:                                          ; preds = %if.end, %entry
  %14 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7529
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 14, !dbg !7531
  %15 = load i32, i32* %scaffCount, align 8, !dbg !7531
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7532
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 13, !dbg !7533
  %17 = load i32, i32* %scaffSize, align 4, !dbg !7533
  %cmp = icmp uge i32 %15, %17, !dbg !7534
  br i1 %cmp, label %if.then8, label %if.end34, !dbg !7535

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.CONTENT_SCAFFOLD** %temp, metadata !7536, metadata !1076), !dbg !7538
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7539
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 11, !dbg !7541
  %19 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !7541
  %tobool9 = icmp ne %struct.CONTENT_SCAFFOLD* %19, null, !dbg !7539
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !7542

if.then10:                                        ; preds = %if.then8
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7543
  %m_mem11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 3, !dbg !7543
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem11, i32 0, i32 1, !dbg !7543
  %21 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !7543
  %22 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7543
  %scaffold12 = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 11, !dbg !7543
  %23 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold12, align 8, !dbg !7543
  %24 = bitcast %struct.CONTENT_SCAFFOLD* %23 to i8*, !dbg !7543
  %25 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7543
  %scaffSize13 = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 13, !dbg !7543
  %26 = load i32, i32* %scaffSize13, align 4, !dbg !7543
  %mul14 = mul i32 %26, 2, !dbg !7543
  %conv15 = zext i32 %mul14 to i64, !dbg !7543
  %mul16 = mul i64 %conv15, 32, !dbg !7543
  %call17 = call i8* %21(i8* %24, i64 %mul16), !dbg !7543
  %27 = bitcast i8* %call17 to %struct.CONTENT_SCAFFOLD*, !dbg !7545
  store %struct.CONTENT_SCAFFOLD* %27, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !7546
  %28 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !7547
  %cmp18 = icmp eq %struct.CONTENT_SCAFFOLD* %28, null, !dbg !7549
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7550

if.then20:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !7551
  br label %return, !dbg !7551

if.end21:                                         ; preds = %if.then10
  %29 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7552
  %scaffSize22 = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 13, !dbg !7553
  %30 = load i32, i32* %scaffSize22, align 4, !dbg !7554
  %mul23 = mul i32 %30, 2, !dbg !7554
  store i32 %mul23, i32* %scaffSize22, align 4, !dbg !7554
  br label %if.end32, !dbg !7555

if.else:                                          ; preds = %if.then8
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7556
  %m_mem24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 3, !dbg !7556
  %malloc_fcn25 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem24, i32 0, i32 0, !dbg !7556
  %32 = load i8* (i64)*, i8* (i64)** %malloc_fcn25, align 8, !dbg !7556
  %call26 = call i8* %32(i64 1024), !dbg !7556
  %33 = bitcast i8* %call26 to %struct.CONTENT_SCAFFOLD*, !dbg !7558
  store %struct.CONTENT_SCAFFOLD* %33, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !7559
  %34 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !7560
  %cmp27 = icmp eq %struct.CONTENT_SCAFFOLD* %34, null, !dbg !7562
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7563

if.then29:                                        ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !7564
  br label %return, !dbg !7564

if.end30:                                         ; preds = %if.else
  %35 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7565
  %scaffSize31 = getelementptr inbounds %struct.DTD, %struct.DTD* %35, i32 0, i32 13, !dbg !7566
  store i32 32, i32* %scaffSize31, align 4, !dbg !7567
  br label %if.end32

if.end32:                                         ; preds = %if.end30, %if.end21
  %36 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8, !dbg !7568
  %37 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7569
  %scaffold33 = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 11, !dbg !7570
  store %struct.CONTENT_SCAFFOLD* %36, %struct.CONTENT_SCAFFOLD** %scaffold33, align 8, !dbg !7571
  br label %if.end34, !dbg !7572

if.end34:                                         ; preds = %if.end32, %if.end6
  %38 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7573
  %scaffCount35 = getelementptr inbounds %struct.DTD, %struct.DTD* %38, i32 0, i32 14, !dbg !7574
  %39 = load i32, i32* %scaffCount35, align 8, !dbg !7575
  %inc = add i32 %39, 1, !dbg !7575
  store i32 %inc, i32* %scaffCount35, align 8, !dbg !7575
  store i32 %39, i32* %next, align 4, !dbg !7576
  %40 = load i32, i32* %next, align 4, !dbg !7577
  %idxprom = sext i32 %40 to i64, !dbg !7578
  %41 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7578
  %scaffold36 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 11, !dbg !7579
  %42 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold36, align 8, !dbg !7579
  %arrayidx37 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %42, i64 %idxprom, !dbg !7578
  store %struct.CONTENT_SCAFFOLD* %arrayidx37, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !7580
  %43 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7581
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %43, i32 0, i32 15, !dbg !7583
  %44 = load i32, i32* %scaffLevel, align 4, !dbg !7583
  %tobool38 = icmp ne i32 %44, 0, !dbg !7581
  br i1 %tobool38, label %if.then39, label %if.end60, !dbg !7584

if.then39:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.CONTENT_SCAFFOLD** %parent, metadata !7585, metadata !1076), !dbg !7587
  %45 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7588
  %scaffLevel40 = getelementptr inbounds %struct.DTD, %struct.DTD* %45, i32 0, i32 15, !dbg !7589
  %46 = load i32, i32* %scaffLevel40, align 4, !dbg !7589
  %sub = sub nsw i32 %46, 1, !dbg !7590
  %idxprom41 = sext i32 %sub to i64, !dbg !7591
  %47 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7591
  %scaffIndex42 = getelementptr inbounds %struct.DTD, %struct.DTD* %47, i32 0, i32 16, !dbg !7592
  %48 = load i32*, i32** %scaffIndex42, align 8, !dbg !7592
  %arrayidx43 = getelementptr inbounds i32, i32* %48, i64 %idxprom41, !dbg !7591
  %49 = load i32, i32* %arrayidx43, align 4, !dbg !7591
  %idxprom44 = sext i32 %49 to i64, !dbg !7593
  %50 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7593
  %scaffold45 = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 11, !dbg !7594
  %51 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold45, align 8, !dbg !7594
  %arrayidx46 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %51, i64 %idxprom44, !dbg !7593
  store %struct.CONTENT_SCAFFOLD* %arrayidx46, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !7587
  %52 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !7595
  %lastchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %52, i32 0, i32 4, !dbg !7597
  %53 = load i32, i32* %lastchild, align 4, !dbg !7597
  %tobool47 = icmp ne i32 %53, 0, !dbg !7595
  br i1 %tobool47, label %if.then48, label %if.end53, !dbg !7598

if.then48:                                        ; preds = %if.then39
  %54 = load i32, i32* %next, align 4, !dbg !7599
  %55 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !7601
  %lastchild49 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %55, i32 0, i32 4, !dbg !7602
  %56 = load i32, i32* %lastchild49, align 4, !dbg !7602
  %idxprom50 = sext i32 %56 to i64, !dbg !7603
  %57 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7603
  %scaffold51 = getelementptr inbounds %struct.DTD, %struct.DTD* %57, i32 0, i32 11, !dbg !7604
  %58 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold51, align 8, !dbg !7604
  %arrayidx52 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %58, i64 %idxprom50, !dbg !7603
  %nextsib = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx52, i32 0, i32 6, !dbg !7605
  store i32 %54, i32* %nextsib, align 4, !dbg !7606
  br label %if.end53, !dbg !7607

if.end53:                                         ; preds = %if.then48, %if.then39
  %59 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !7608
  %childcnt = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %59, i32 0, i32 5, !dbg !7610
  %60 = load i32, i32* %childcnt, align 8, !dbg !7610
  %tobool54 = icmp ne i32 %60, 0, !dbg !7608
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !7611

if.then55:                                        ; preds = %if.end53
  %61 = load i32, i32* %next, align 4, !dbg !7612
  %62 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !7613
  %firstchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %62, i32 0, i32 3, !dbg !7614
  store i32 %61, i32* %firstchild, align 8, !dbg !7615
  br label %if.end56, !dbg !7613

if.end56:                                         ; preds = %if.then55, %if.end53
  %63 = load i32, i32* %next, align 4, !dbg !7616
  %64 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !7617
  %lastchild57 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %64, i32 0, i32 4, !dbg !7618
  store i32 %63, i32* %lastchild57, align 4, !dbg !7619
  %65 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8, !dbg !7620
  %childcnt58 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %65, i32 0, i32 5, !dbg !7621
  %66 = load i32, i32* %childcnt58, align 8, !dbg !7622
  %inc59 = add nsw i32 %66, 1, !dbg !7622
  store i32 %inc59, i32* %childcnt58, align 8, !dbg !7622
  br label %if.end60, !dbg !7623

if.end60:                                         ; preds = %if.end56, %if.end34
  %67 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !7624
  %nextsib61 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %67, i32 0, i32 6, !dbg !7625
  store i32 0, i32* %nextsib61, align 4, !dbg !7626
  %68 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !7627
  %childcnt62 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %68, i32 0, i32 5, !dbg !7628
  store i32 0, i32* %childcnt62, align 8, !dbg !7629
  %69 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !7630
  %lastchild63 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %69, i32 0, i32 4, !dbg !7631
  store i32 0, i32* %lastchild63, align 4, !dbg !7632
  %70 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8, !dbg !7633
  %firstchild64 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %70, i32 0, i32 3, !dbg !7634
  store i32 0, i32* %firstchild64, align 8, !dbg !7635
  %71 = load i32, i32* %next, align 4, !dbg !7636
  store i32 %71, i32* %retval, align 4, !dbg !7637
  br label %return, !dbg !7637

return:                                           ; preds = %if.end60, %if.then29, %if.then20, %if.then4
  %72 = load i32, i32* %retval, align 4, !dbg !7638
  ret i32 %72, !dbg !7638
}

; Function Attrs: nounwind uwtable
define internal %struct.XML_cp* @build_model(%struct.XML_ParserStruct* %parser) #0 !dbg !964 {
entry:
  %retval = alloca %struct.XML_cp*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %ret = alloca %struct.XML_cp*, align 8
  %cpos = alloca %struct.XML_cp*, align 8
  %str = alloca i8*, align 8
  %allocsize = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !7639, metadata !1076), !dbg !7640
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !7641, metadata !1076), !dbg !7642
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7643
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !7643
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !7643
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !7642
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %ret, metadata !7644, metadata !1076), !dbg !7645
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %cpos, metadata !7646, metadata !1076), !dbg !7647
  call void @llvm.dbg.declare(metadata i8** %str, metadata !7648, metadata !1076), !dbg !7649
  call void @llvm.dbg.declare(metadata i32* %allocsize, metadata !7650, metadata !1076), !dbg !7651
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7652
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 14, !dbg !7653
  %3 = load i32, i32* %scaffCount, align 8, !dbg !7653
  %conv = zext i32 %3 to i64, !dbg !7652
  %mul = mul i64 %conv, 32, !dbg !7654
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7655
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 12, !dbg !7656
  %5 = load i32, i32* %contentStringLen, align 8, !dbg !7656
  %conv1 = zext i32 %5 to i64, !dbg !7655
  %mul2 = mul i64 %conv1, 1, !dbg !7657
  %add = add i64 %mul, %mul2, !dbg !7658
  %conv3 = trunc i64 %add to i32, !dbg !7659
  store i32 %conv3, i32* %allocsize, align 4, !dbg !7651
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7660
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 3, !dbg !7660
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !7660
  %7 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !7660
  %8 = load i32, i32* %allocsize, align 4, !dbg !7660
  %conv4 = sext i32 %8 to i64, !dbg !7660
  %call = call i8* %7(i64 %conv4), !dbg !7660
  %9 = bitcast i8* %call to %struct.XML_cp*, !dbg !7661
  store %struct.XML_cp* %9, %struct.XML_cp** %ret, align 8, !dbg !7662
  %10 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !7663
  %tobool = icmp ne %struct.XML_cp* %10, null, !dbg !7663
  br i1 %tobool, label %if.end, label %if.then, !dbg !7665

if.then:                                          ; preds = %entry
  store %struct.XML_cp* null, %struct.XML_cp** %retval, align 8, !dbg !7666
  br label %return, !dbg !7666

if.end:                                           ; preds = %entry
  %11 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7667
  %scaffCount5 = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 14, !dbg !7668
  %12 = load i32, i32* %scaffCount5, align 8, !dbg !7668
  %idxprom = zext i32 %12 to i64, !dbg !7669
  %13 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !7669
  %arrayidx = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %13, i64 %idxprom, !dbg !7669
  %14 = bitcast %struct.XML_cp* %arrayidx to i8*, !dbg !7670
  store i8* %14, i8** %str, align 8, !dbg !7671
  %15 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !7672
  %arrayidx6 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %15, i64 1, !dbg !7672
  store %struct.XML_cp* %arrayidx6, %struct.XML_cp** %cpos, align 8, !dbg !7673
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7674
  %17 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !7675
  call void @build_node(%struct.XML_ParserStruct* %16, i32 0, %struct.XML_cp* %17, %struct.XML_cp** %cpos, i8** %str), !dbg !7676
  %18 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8, !dbg !7677
  store %struct.XML_cp* %18, %struct.XML_cp** %retval, align 8, !dbg !7678
  br label %return, !dbg !7678

return:                                           ; preds = %if.end, %if.then
  %19 = load %struct.XML_cp*, %struct.XML_cp** %retval, align 8, !dbg !7679
  ret %struct.XML_cp* %19, !dbg !7679
}

; Function Attrs: nounwind uwtable
define internal i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 !dbg !972 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %target = alloca i8*, align 8
  %data = alloca i8*, align 8
  %tem = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !7680, metadata !1076), !dbg !7681
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7682, metadata !1076), !dbg !7683
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !7684, metadata !1076), !dbg !7685
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7686, metadata !1076), !dbg !7687
  call void @llvm.dbg.declare(metadata i8** %target, metadata !7688, metadata !1076), !dbg !7689
  call void @llvm.dbg.declare(metadata i8** %data, metadata !7690, metadata !1076), !dbg !7691
  call void @llvm.dbg.declare(metadata i8** %tem, metadata !7692, metadata !1076), !dbg !7693
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7694
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 14, !dbg !7694
  %1 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8, !dbg !7694
  %tobool = icmp ne void (i8*, i8*, i8*)* %1, null, !dbg !7694
  br i1 %tobool, label %if.end3, label %if.then, !dbg !7696

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7697
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 18, !dbg !7697
  %3 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !7697
  %tobool1 = icmp ne void (i8*, i8*, i32)* %3, null, !dbg !7697
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7700

if.then2:                                         ; preds = %if.then
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7701
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7702
  %6 = load i8*, i8** %start.addr, align 8, !dbg !7703
  %7 = load i8*, i8** %end.addr, align 8, !dbg !7704
  call void @reportDefault(%struct.XML_ParserStruct* %4, %struct.encoding* %5, i8* %6, i8* %7), !dbg !7705
  br label %if.end, !dbg !7705

if.end:                                           ; preds = %if.then2, %if.then
  store i32 1, i32* %retval, align 4, !dbg !7706
  br label %return, !dbg !7706

if.end3:                                          ; preds = %entry
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7707
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %8, i32 0, i32 13, !dbg !7708
  %9 = load i32, i32* %minBytesPerChar, align 8, !dbg !7708
  %mul = mul nsw i32 %9, 2, !dbg !7709
  %10 = load i8*, i8** %start.addr, align 8, !dbg !7710
  %idx.ext = sext i32 %mul to i64, !dbg !7710
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7710
  store i8* %add.ptr, i8** %start.addr, align 8, !dbg !7710
  %11 = load i8*, i8** %start.addr, align 8, !dbg !7711
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7712
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %12, i32 0, i32 4, !dbg !7712
  %13 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !7712
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7712
  %15 = load i8*, i8** %start.addr, align 8, !dbg !7712
  %call = call i32 %13(%struct.encoding* %14, i8* %15), !dbg !7712
  %idx.ext4 = sext i32 %call to i64, !dbg !7713
  %add.ptr5 = getelementptr inbounds i8, i8* %11, i64 %idx.ext4, !dbg !7713
  store i8* %add.ptr5, i8** %tem, align 8, !dbg !7714
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7715
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 79, !dbg !7715
  %17 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7716
  %18 = load i8*, i8** %start.addr, align 8, !dbg !7717
  %19 = load i8*, i8** %tem, align 8, !dbg !7718
  %call6 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %17, i8* %18, i8* %19), !dbg !7719
  store i8* %call6, i8** %target, align 8, !dbg !7720
  %20 = load i8*, i8** %target, align 8, !dbg !7721
  %tobool7 = icmp ne i8* %20, null, !dbg !7721
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !7723

if.then8:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !7724
  br label %return, !dbg !7724

if.end9:                                          ; preds = %if.end3
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7725
  %m_tempPool10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 79, !dbg !7725
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool10, i32 0, i32 3, !dbg !7725
  %22 = load i8*, i8** %ptr, align 8, !dbg !7725
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7725
  %m_tempPool11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 79, !dbg !7725
  %start12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool11, i32 0, i32 4, !dbg !7725
  store i8* %22, i8** %start12, align 8, !dbg !7725
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7726
  %m_tempPool13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 79, !dbg !7726
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7727
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7728
  %skipS = getelementptr inbounds %struct.encoding, %struct.encoding* %26, i32 0, i32 5, !dbg !7728
  %27 = load i8* (%struct.encoding*, i8*)*, i8* (%struct.encoding*, i8*)** %skipS, align 8, !dbg !7728
  %28 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7728
  %29 = load i8*, i8** %tem, align 8, !dbg !7728
  %call14 = call i8* %27(%struct.encoding* %28, i8* %29), !dbg !7728
  %30 = load i8*, i8** %end.addr, align 8, !dbg !7729
  %31 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7730
  %minBytesPerChar15 = getelementptr inbounds %struct.encoding, %struct.encoding* %31, i32 0, i32 13, !dbg !7731
  %32 = load i32, i32* %minBytesPerChar15, align 8, !dbg !7731
  %mul16 = mul nsw i32 %32, 2, !dbg !7732
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !7733
  %idx.neg = sub i64 0, %idx.ext17, !dbg !7733
  %add.ptr18 = getelementptr inbounds i8, i8* %30, i64 %idx.neg, !dbg !7733
  %call19 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool13, %struct.encoding* %25, i8* %call14, i8* %add.ptr18), !dbg !7734
  store i8* %call19, i8** %data, align 8, !dbg !7735
  %33 = load i8*, i8** %data, align 8, !dbg !7736
  %tobool20 = icmp ne i8* %33, null, !dbg !7736
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !7738

if.then21:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !7739
  br label %return, !dbg !7739

if.end22:                                         ; preds = %if.end9
  %34 = load i8*, i8** %data, align 8, !dbg !7740
  call void @normalizeLines(i8* %34), !dbg !7741
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7742
  %m_processingInstructionHandler23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 14, !dbg !7742
  %36 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler23, align 8, !dbg !7742
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7743
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 1, !dbg !7743
  %38 = load i8*, i8** %m_handlerArg, align 8, !dbg !7743
  %39 = load i8*, i8** %target, align 8, !dbg !7744
  %40 = load i8*, i8** %data, align 8, !dbg !7745
  call void %36(i8* %38, i8* %39, i8* %40), !dbg !7742
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7746
  %m_tempPool24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 79, !dbg !7746
  call void @poolClear(%struct.STRING_POOL* %m_tempPool24), !dbg !7747
  store i32 1, i32* %retval, align 4, !dbg !7748
  br label %return, !dbg !7748

return:                                           ; preds = %if.end22, %if.then21, %if.then8, %if.end
  %42 = load i32, i32* %retval, align 4, !dbg !7749
  ret i32 %42, !dbg !7749
}

; Function Attrs: nounwind uwtable
define internal i32 @reportComment(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 !dbg !976 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %data = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !7750, metadata !1076), !dbg !7751
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7752, metadata !1076), !dbg !7753
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !7754, metadata !1076), !dbg !7755
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7756, metadata !1076), !dbg !7757
  call void @llvm.dbg.declare(metadata i8** %data, metadata !7758, metadata !1076), !dbg !7759
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7760
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 15, !dbg !7760
  %1 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler, align 8, !dbg !7760
  %tobool = icmp ne void (i8*, i8*)* %1, null, !dbg !7760
  br i1 %tobool, label %if.end3, label %if.then, !dbg !7762

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7763
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 18, !dbg !7763
  %3 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !7763
  %tobool1 = icmp ne void (i8*, i8*, i32)* %3, null, !dbg !7763
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7766

if.then2:                                         ; preds = %if.then
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7767
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7768
  %6 = load i8*, i8** %start.addr, align 8, !dbg !7769
  %7 = load i8*, i8** %end.addr, align 8, !dbg !7770
  call void @reportDefault(%struct.XML_ParserStruct* %4, %struct.encoding* %5, i8* %6, i8* %7), !dbg !7771
  br label %if.end, !dbg !7771

if.end:                                           ; preds = %if.then2, %if.then
  store i32 1, i32* %retval, align 4, !dbg !7772
  br label %return, !dbg !7772

if.end3:                                          ; preds = %entry
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7773
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 79, !dbg !7773
  %9 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7774
  %10 = load i8*, i8** %start.addr, align 8, !dbg !7775
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7776
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %11, i32 0, i32 13, !dbg !7777
  %12 = load i32, i32* %minBytesPerChar, align 8, !dbg !7777
  %mul = mul nsw i32 %12, 4, !dbg !7778
  %idx.ext = sext i32 %mul to i64, !dbg !7779
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7779
  %13 = load i8*, i8** %end.addr, align 8, !dbg !7780
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7781
  %minBytesPerChar4 = getelementptr inbounds %struct.encoding, %struct.encoding* %14, i32 0, i32 13, !dbg !7782
  %15 = load i32, i32* %minBytesPerChar4, align 8, !dbg !7782
  %mul5 = mul nsw i32 %15, 3, !dbg !7783
  %idx.ext6 = sext i32 %mul5 to i64, !dbg !7784
  %idx.neg = sub i64 0, %idx.ext6, !dbg !7784
  %add.ptr7 = getelementptr inbounds i8, i8* %13, i64 %idx.neg, !dbg !7784
  %call = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %9, i8* %add.ptr, i8* %add.ptr7), !dbg !7785
  store i8* %call, i8** %data, align 8, !dbg !7786
  %16 = load i8*, i8** %data, align 8, !dbg !7787
  %tobool8 = icmp ne i8* %16, null, !dbg !7787
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !7789

if.then9:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !7790
  br label %return, !dbg !7790

if.end10:                                         ; preds = %if.end3
  %17 = load i8*, i8** %data, align 8, !dbg !7791
  call void @normalizeLines(i8* %17), !dbg !7792
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7793
  %m_commentHandler11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 15, !dbg !7793
  %19 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler11, align 8, !dbg !7793
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7794
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 1, !dbg !7794
  %21 = load i8*, i8** %m_handlerArg, align 8, !dbg !7794
  %22 = load i8*, i8** %data, align 8, !dbg !7795
  call void %19(i8* %21, i8* %22), !dbg !7793
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7796
  %m_tempPool12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 79, !dbg !7796
  call void @poolClear(%struct.STRING_POOL* %m_tempPool12), !dbg !7797
  store i32 1, i32* %retval, align 4, !dbg !7798
  br label %return, !dbg !7798

return:                                           ; preds = %if.end10, %if.then9, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !7799
  ret i32 %24, !dbg !7799
}

declare i32 @XmlParseXmlDecl(i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*) #5

; Function Attrs: nounwind uwtable
define internal i32 @doContent(%struct.XML_ParserStruct* %parser, i32 %startTagLevel, %struct.encoding* %enc, i8* %s, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 !dbg !889 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %startTagLevel.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %dtd = alloca %struct.DTD*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %c = alloca i8, align 1
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %ch = alloca i8, align 1
  %result = alloca i32, align 4
  %context = alloca i8*, align 8
  %tag = alloca %struct.tag*, align 8
  %result150 = alloca i32, align 4
  %toPtr = alloca i8*, align 8
  %rawNameEnd = alloca i8*, align 8
  %fromPtr = alloca i8*, align 8
  %bufSize = alloca i32, align 4
  %convLen = alloca i32, align 4
  %convert_res = alloca i32, align 4
  %temp = alloca i8*, align 8
  %rawName244 = alloca i8*, align 8
  %result248 = alloca i32, align 4
  %bindings249 = alloca %struct.binding*, align 8
  %noElmHandlers = alloca i8, align 1
  %name250 = alloca %struct.TAG_NAME, align 8
  %b = alloca %struct.binding*, align 8
  %len = alloca i32, align 4
  %rawName322 = alloca i8*, align 8
  %tag323 = alloca %struct.tag*, align 8
  %localPart350 = alloca i8*, align 8
  %prefix351 = alloca i8*, align 8
  %uri = alloca i8*, align 8
  %b399 = alloca %struct.binding*, align 8
  %n = alloca i32, align 4
  %buf435 = alloca [4 x i8], align 1
  %c451 = alloca i8, align 1
  %result461 = alloca i32, align 4
  %dataPtr = alloca i8*, align 8
  %charDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %dataPtr531 = alloca i8*, align 8
  %convert_res533 = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !7800, metadata !1076), !dbg !7801
  store i32 %startTagLevel, i32* %startTagLevel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startTagLevel.addr, metadata !7802, metadata !1076), !dbg !7803
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !7804, metadata !1076), !dbg !7805
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !7806, metadata !1076), !dbg !7807
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !7808, metadata !1076), !dbg !7809
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !7810, metadata !1076), !dbg !7811
  store i8 %haveMore, i8* %haveMore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %haveMore.addr, metadata !7812, metadata !1076), !dbg !7813
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !7814, metadata !1076), !dbg !7815
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7816
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !7816
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !7816
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !7815
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !7817, metadata !1076), !dbg !7818
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !7819, metadata !1076), !dbg !7820
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7821
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7823
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !7823
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !7823
  %cmp = icmp eq %struct.encoding* %2, %4, !dbg !7824
  br i1 %cmp, label %if.then, label %if.else, !dbg !7825

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7826
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47, !dbg !7826
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !7828
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7829
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 48, !dbg !7829
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !7830
  br label %if.end, !dbg !7831

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7832
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50, !dbg !7832
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !7832
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0, !dbg !7834
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !7835
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7836
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50, !dbg !7836
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8, !dbg !7836
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 1, !dbg !7837
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !7838
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i8*, i8** %s.addr, align 8, !dbg !7839
  %12 = load i8**, i8*** %eventPP, align 8, !dbg !7840
  store i8* %11, i8** %12, align 8, !dbg !7841
  br label %for.cond, !dbg !7842

for.cond:                                         ; preds = %sw.epilog582, %if.end
  call void @llvm.dbg.declare(metadata i8** %next, metadata !7843, metadata !1076), !dbg !7847
  %13 = load i8*, i8** %s.addr, align 8, !dbg !7848
  store i8* %13, i8** %next, align 8, !dbg !7847
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !7849, metadata !1076), !dbg !7850
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7851
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %14, i32 0, i32 0, !dbg !7851
  %arrayidx = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 1, !dbg !7851
  %15 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !7851
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7851
  %17 = load i8*, i8** %s.addr, align 8, !dbg !7851
  %18 = load i8*, i8** %end.addr, align 8, !dbg !7851
  %call = call i32 %15(%struct.encoding* %16, i8* %17, i8* %18, i8** %next), !dbg !7851
  store i32 %call, i32* %tok, align 4, !dbg !7850
  %19 = load i8*, i8** %next, align 8, !dbg !7852
  %20 = load i8**, i8*** %eventEndPP, align 8, !dbg !7853
  store i8* %19, i8** %20, align 8, !dbg !7854
  %21 = load i32, i32* %tok, align 4, !dbg !7855
  switch i32 %21, label %sw.default [
    i32 -3, label %sw.bb
    i32 -4, label %sw.bb18
    i32 0, label %sw.bb29
    i32 -1, label %sw.bb30
    i32 -2, label %sw.bb34
    i32 9, label %sw.bb38
    i32 2, label %sw.bb149
    i32 1, label %sw.bb149
    i32 4, label %sw.bb243
    i32 3, label %sw.bb243
    i32 5, label %sw.bb316
    i32 10, label %sw.bb426
    i32 12, label %sw.bb446
    i32 7, label %sw.bb447
    i32 8, label %sw.bb460
    i32 -5, label %sw.bb481
    i32 6, label %sw.bb523
    i32 11, label %sw.bb565
    i32 13, label %sw.bb570
  ], !dbg !7856

sw.bb:                                            ; preds = %for.cond
  %22 = load i8, i8* %haveMore.addr, align 1, !dbg !7857
  %tobool = icmp ne i8 %22, 0, !dbg !7857
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !7860

if.then2:                                         ; preds = %sw.bb
  %23 = load i8*, i8** %s.addr, align 8, !dbg !7861
  %24 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !7863
  store i8* %23, i8** %24, align 8, !dbg !7864
  store i32 0, i32* %retval, align 4, !dbg !7865
  br label %return, !dbg !7865

if.end3:                                          ; preds = %sw.bb
  %25 = load i8*, i8** %end.addr, align 8, !dbg !7866
  %26 = load i8**, i8*** %eventEndPP, align 8, !dbg !7867
  store i8* %25, i8** %26, align 8, !dbg !7868
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7869
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 13, !dbg !7869
  %28 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !7869
  %tobool4 = icmp ne void (i8*, i8*, i32)* %28, null, !dbg !7869
  br i1 %tobool4, label %if.then5, label %if.else7, !dbg !7871

if.then5:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i8* %c, metadata !7872, metadata !1076), !dbg !7874
  store i8 10, i8* %c, align 1, !dbg !7874
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7875
  %m_characterDataHandler6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 13, !dbg !7875
  %30 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler6, align 8, !dbg !7875
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7876
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 1, !dbg !7876
  %32 = load i8*, i8** %m_handlerArg, align 8, !dbg !7876
  call void %30(i8* %32, i8* %c, i32 1), !dbg !7875
  br label %if.end11, !dbg !7877

if.else7:                                         ; preds = %if.end3
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7878
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 18, !dbg !7878
  %34 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !7878
  %tobool8 = icmp ne void (i8*, i8*, i32)* %34, null, !dbg !7878
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7880

if.then9:                                         ; preds = %if.else7
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7881
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7882
  %37 = load i8*, i8** %s.addr, align 8, !dbg !7883
  %38 = load i8*, i8** %end.addr, align 8, !dbg !7884
  call void @reportDefault(%struct.XML_ParserStruct* %35, %struct.encoding* %36, i8* %37, i8* %38), !dbg !7885
  br label %if.end10, !dbg !7885

if.end10:                                         ; preds = %if.then9, %if.else7
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then5
  %39 = load i32, i32* %startTagLevel.addr, align 4, !dbg !7886
  %cmp12 = icmp eq i32 %39, 0, !dbg !7888
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !7889

if.then13:                                        ; preds = %if.end11
  store i32 3, i32* %retval, align 4, !dbg !7890
  br label %return, !dbg !7890

if.end14:                                         ; preds = %if.end11
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7891
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 53, !dbg !7891
  %41 = load i32, i32* %m_tagLevel, align 4, !dbg !7891
  %42 = load i32, i32* %startTagLevel.addr, align 4, !dbg !7893
  %cmp15 = icmp ne i32 %41, %42, !dbg !7894
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !7895

if.then16:                                        ; preds = %if.end14
  store i32 13, i32* %retval, align 4, !dbg !7896
  br label %return, !dbg !7896

if.end17:                                         ; preds = %if.end14
  %43 = load i8*, i8** %end.addr, align 8, !dbg !7897
  %44 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !7898
  store i8* %43, i8** %44, align 8, !dbg !7899
  store i32 0, i32* %retval, align 4, !dbg !7900
  br label %return, !dbg !7900

sw.bb18:                                          ; preds = %for.cond
  %45 = load i8, i8* %haveMore.addr, align 1, !dbg !7901
  %tobool19 = icmp ne i8 %45, 0, !dbg !7901
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7903

if.then20:                                        ; preds = %sw.bb18
  %46 = load i8*, i8** %s.addr, align 8, !dbg !7904
  %47 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !7906
  store i8* %46, i8** %47, align 8, !dbg !7907
  store i32 0, i32* %retval, align 4, !dbg !7908
  br label %return, !dbg !7908

if.end21:                                         ; preds = %sw.bb18
  %48 = load i32, i32* %startTagLevel.addr, align 4, !dbg !7909
  %cmp22 = icmp sgt i32 %48, 0, !dbg !7911
  br i1 %cmp22, label %if.then23, label %if.end28, !dbg !7912

if.then23:                                        ; preds = %if.end21
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7913
  %m_tagLevel24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 53, !dbg !7913
  %50 = load i32, i32* %m_tagLevel24, align 4, !dbg !7913
  %51 = load i32, i32* %startTagLevel.addr, align 4, !dbg !7916
  %cmp25 = icmp ne i32 %50, %51, !dbg !7917
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !7918

if.then26:                                        ; preds = %if.then23
  store i32 13, i32* %retval, align 4, !dbg !7919
  br label %return, !dbg !7919

if.end27:                                         ; preds = %if.then23
  %52 = load i8*, i8** %s.addr, align 8, !dbg !7920
  %53 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !7921
  store i8* %52, i8** %53, align 8, !dbg !7922
  store i32 0, i32* %retval, align 4, !dbg !7923
  br label %return, !dbg !7923

if.end28:                                         ; preds = %if.end21
  store i32 3, i32* %retval, align 4, !dbg !7924
  br label %return, !dbg !7924

sw.bb29:                                          ; preds = %for.cond
  %54 = load i8*, i8** %next, align 8, !dbg !7925
  %55 = load i8**, i8*** %eventPP, align 8, !dbg !7926
  store i8* %54, i8** %55, align 8, !dbg !7927
  store i32 4, i32* %retval, align 4, !dbg !7928
  br label %return, !dbg !7928

sw.bb30:                                          ; preds = %for.cond
  %56 = load i8, i8* %haveMore.addr, align 1, !dbg !7929
  %tobool31 = icmp ne i8 %56, 0, !dbg !7929
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !7931

if.then32:                                        ; preds = %sw.bb30
  %57 = load i8*, i8** %s.addr, align 8, !dbg !7932
  %58 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !7934
  store i8* %57, i8** %58, align 8, !dbg !7935
  store i32 0, i32* %retval, align 4, !dbg !7936
  br label %return, !dbg !7936

if.end33:                                         ; preds = %sw.bb30
  store i32 5, i32* %retval, align 4, !dbg !7937
  br label %return, !dbg !7937

sw.bb34:                                          ; preds = %for.cond
  %59 = load i8, i8* %haveMore.addr, align 1, !dbg !7938
  %tobool35 = icmp ne i8 %59, 0, !dbg !7938
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !7940

if.then36:                                        ; preds = %sw.bb34
  %60 = load i8*, i8** %s.addr, align 8, !dbg !7941
  %61 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !7943
  store i8* %60, i8** %61, align 8, !dbg !7944
  store i32 0, i32* %retval, align 4, !dbg !7945
  br label %return, !dbg !7945

if.end37:                                         ; preds = %sw.bb34
  store i32 6, i32* %retval, align 4, !dbg !7946
  br label %return, !dbg !7946

sw.bb38:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %name, metadata !7947, metadata !1076), !dbg !7949
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !7950, metadata !1076), !dbg !7951
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !7952, metadata !1076), !dbg !7953
  %62 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7954
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %62, i32 0, i32 8, !dbg !7954
  %63 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8, !dbg !7954
  %64 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7954
  %65 = load i8*, i8** %s.addr, align 8, !dbg !7954
  %66 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7954
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %66, i32 0, i32 13, !dbg !7954
  %67 = load i32, i32* %minBytesPerChar, align 8, !dbg !7954
  %idx.ext = sext i32 %67 to i64, !dbg !7954
  %add.ptr = getelementptr inbounds i8, i8* %65, i64 %idx.ext, !dbg !7954
  %68 = load i8*, i8** %next, align 8, !dbg !7954
  %69 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7954
  %minBytesPerChar39 = getelementptr inbounds %struct.encoding, %struct.encoding* %69, i32 0, i32 13, !dbg !7954
  %70 = load i32, i32* %minBytesPerChar39, align 8, !dbg !7954
  %idx.ext40 = sext i32 %70 to i64, !dbg !7954
  %idx.neg = sub i64 0, %idx.ext40, !dbg !7954
  %add.ptr41 = getelementptr inbounds i8, i8* %68, i64 %idx.neg, !dbg !7954
  %call42 = call i32 %63(%struct.encoding* %64, i8* %add.ptr, i8* %add.ptr41), !dbg !7954
  %conv = trunc i32 %call42 to i8, !dbg !7955
  store i8 %conv, i8* %ch, align 1, !dbg !7953
  %71 = load i8, i8* %ch, align 1, !dbg !7956
  %tobool43 = icmp ne i8 %71, 0, !dbg !7956
  br i1 %tobool43, label %if.then44, label %if.end56, !dbg !7958

if.then44:                                        ; preds = %sw.bb38
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7959
  %m_characterDataHandler45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 13, !dbg !7959
  %73 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler45, align 8, !dbg !7959
  %tobool46 = icmp ne void (i8*, i8*, i32)* %73, null, !dbg !7959
  br i1 %tobool46, label %if.then47, label %if.else50, !dbg !7962

if.then47:                                        ; preds = %if.then44
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7963
  %m_characterDataHandler48 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 13, !dbg !7963
  %75 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler48, align 8, !dbg !7963
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7964
  %m_handlerArg49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 1, !dbg !7964
  %77 = load i8*, i8** %m_handlerArg49, align 8, !dbg !7964
  call void %75(i8* %77, i8* %ch, i32 1), !dbg !7963
  br label %if.end55, !dbg !7963

if.else50:                                        ; preds = %if.then44
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7965
  %m_defaultHandler51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 18, !dbg !7965
  %79 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler51, align 8, !dbg !7965
  %tobool52 = icmp ne void (i8*, i8*, i32)* %79, null, !dbg !7965
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !7967

if.then53:                                        ; preds = %if.else50
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7968
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7969
  %82 = load i8*, i8** %s.addr, align 8, !dbg !7970
  %83 = load i8*, i8** %next, align 8, !dbg !7971
  call void @reportDefault(%struct.XML_ParserStruct* %80, %struct.encoding* %81, i8* %82, i8* %83), !dbg !7972
  br label %if.end54, !dbg !7972

if.end54:                                         ; preds = %if.then53, %if.else50
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then47
  br label %sw.epilog, !dbg !7973

if.end56:                                         ; preds = %sw.bb38
  %84 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7974
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %84, i32 0, i32 4, !dbg !7975
  %85 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7976
  %86 = load i8*, i8** %s.addr, align 8, !dbg !7977
  %87 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7978
  %minBytesPerChar57 = getelementptr inbounds %struct.encoding, %struct.encoding* %87, i32 0, i32 13, !dbg !7979
  %88 = load i32, i32* %minBytesPerChar57, align 8, !dbg !7979
  %idx.ext58 = sext i32 %88 to i64, !dbg !7980
  %add.ptr59 = getelementptr inbounds i8, i8* %86, i64 %idx.ext58, !dbg !7980
  %89 = load i8*, i8** %next, align 8, !dbg !7981
  %90 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !7982
  %minBytesPerChar60 = getelementptr inbounds %struct.encoding, %struct.encoding* %90, i32 0, i32 13, !dbg !7983
  %91 = load i32, i32* %minBytesPerChar60, align 8, !dbg !7983
  %idx.ext61 = sext i32 %91 to i64, !dbg !7984
  %idx.neg62 = sub i64 0, %idx.ext61, !dbg !7984
  %add.ptr63 = getelementptr inbounds i8, i8* %89, i64 %idx.neg62, !dbg !7984
  %call64 = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %85, i8* %add.ptr59, i8* %add.ptr63), !dbg !7985
  store i8* %call64, i8** %name, align 8, !dbg !7986
  %92 = load i8*, i8** %name, align 8, !dbg !7987
  %tobool65 = icmp ne i8* %92, null, !dbg !7987
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !7989

if.then66:                                        ; preds = %if.end56
  store i32 1, i32* %retval, align 4, !dbg !7990
  br label %return, !dbg !7990

if.end67:                                         ; preds = %if.end56
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !7991
  %94 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7992
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %94, i32 0, i32 0, !dbg !7993
  %95 = load i8*, i8** %name, align 8, !dbg !7994
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %93, %struct.HASH_TABLE* %generalEntities, i8* %95, i64 0), !dbg !7995
  %96 = bitcast %struct.NAMED* %call68 to %struct.ENTITY*, !dbg !7996
  store %struct.ENTITY* %96, %struct.ENTITY** %entity, align 8, !dbg !7997
  %97 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7998
  %pool69 = getelementptr inbounds %struct.DTD, %struct.DTD* %97, i32 0, i32 4, !dbg !7998
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool69, i32 0, i32 4, !dbg !7998
  %98 = load i8*, i8** %start, align 8, !dbg !7998
  %99 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7998
  %pool70 = getelementptr inbounds %struct.DTD, %struct.DTD* %99, i32 0, i32 4, !dbg !7998
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool70, i32 0, i32 3, !dbg !7998
  store i8* %98, i8** %ptr, align 8, !dbg !7998
  %100 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !7999
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %100, i32 0, i32 7, !dbg !8001
  %101 = load i8, i8* %hasParamEntityRefs, align 1, !dbg !8001
  %tobool71 = icmp ne i8 %101, 0, !dbg !7999
  br i1 %tobool71, label %lor.lhs.false, label %if.then74, !dbg !8002

lor.lhs.false:                                    ; preds = %if.end67
  %102 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !8003
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %102, i32 0, i32 8, !dbg !8005
  %103 = load i8, i8* %standalone, align 2, !dbg !8005
  %conv72 = zext i8 %103 to i32, !dbg !8003
  %tobool73 = icmp ne i32 %conv72, 0, !dbg !8003
  br i1 %tobool73, label %if.then74, label %if.else82, !dbg !8006

if.then74:                                        ; preds = %lor.lhs.false, %if.end67
  %104 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8007
  %tobool75 = icmp ne %struct.ENTITY* %104, null, !dbg !8007
  br i1 %tobool75, label %if.else77, label %if.then76, !dbg !8010

if.then76:                                        ; preds = %if.then74
  store i32 11, i32* %retval, align 4, !dbg !8011
  br label %return, !dbg !8011

if.else77:                                        ; preds = %if.then74
  %105 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8012
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %105, i32 0, i32 10, !dbg !8014
  %106 = load i8, i8* %is_internal, align 2, !dbg !8014
  %tobool78 = icmp ne i8 %106, 0, !dbg !8012
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !8015

if.then79:                                        ; preds = %if.else77
  store i32 24, i32* %retval, align 4, !dbg !8016
  br label %return, !dbg !8016

if.end80:                                         ; preds = %if.else77
  br label %if.end81

if.end81:                                         ; preds = %if.end80
  br label %if.end96, !dbg !8017

if.else82:                                        ; preds = %lor.lhs.false
  %107 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8018
  %tobool83 = icmp ne %struct.ENTITY* %107, null, !dbg !8018
  br i1 %tobool83, label %if.end95, label %if.then84, !dbg !8020

if.then84:                                        ; preds = %if.else82
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8021
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %108, i32 0, i32 28, !dbg !8021
  %109 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8, !dbg !8021
  %tobool85 = icmp ne void (i8*, i8*, i32)* %109, null, !dbg !8021
  br i1 %tobool85, label %if.then86, label %if.else89, !dbg !8024

if.then86:                                        ; preds = %if.then84
  %110 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8025
  %m_skippedEntityHandler87 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %110, i32 0, i32 28, !dbg !8025
  %111 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler87, align 8, !dbg !8025
  %112 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8026
  %m_handlerArg88 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %112, i32 0, i32 1, !dbg !8026
  %113 = load i8*, i8** %m_handlerArg88, align 8, !dbg !8026
  %114 = load i8*, i8** %name, align 8, !dbg !8027
  call void %111(i8* %113, i8* %114, i32 0), !dbg !8025
  br label %if.end94, !dbg !8025

if.else89:                                        ; preds = %if.then84
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8028
  %m_defaultHandler90 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %115, i32 0, i32 18, !dbg !8028
  %116 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler90, align 8, !dbg !8028
  %tobool91 = icmp ne void (i8*, i8*, i32)* %116, null, !dbg !8028
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !8030

if.then92:                                        ; preds = %if.else89
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8031
  %118 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8032
  %119 = load i8*, i8** %s.addr, align 8, !dbg !8033
  %120 = load i8*, i8** %next, align 8, !dbg !8034
  call void @reportDefault(%struct.XML_ParserStruct* %117, %struct.encoding* %118, i8* %119, i8* %120), !dbg !8035
  br label %if.end93, !dbg !8035

if.end93:                                         ; preds = %if.then92, %if.else89
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then86
  br label %sw.epilog, !dbg !8036

if.end95:                                         ; preds = %if.else82
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end81
  %121 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8037
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %121, i32 0, i32 8, !dbg !8039
  %122 = load i8, i8* %open, align 8, !dbg !8039
  %tobool97 = icmp ne i8 %122, 0, !dbg !8037
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !8040

if.then98:                                        ; preds = %if.end96
  store i32 12, i32* %retval, align 4, !dbg !8041
  br label %return, !dbg !8041

if.end99:                                         ; preds = %if.end96
  %123 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8042
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %123, i32 0, i32 7, !dbg !8044
  %124 = load i8*, i8** %notation, align 8, !dbg !8044
  %tobool100 = icmp ne i8* %124, null, !dbg !8042
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !8045

if.then101:                                       ; preds = %if.end99
  store i32 15, i32* %retval, align 4, !dbg !8046
  br label %return, !dbg !8046

if.end102:                                        ; preds = %if.end99
  %125 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8047
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %125, i32 0, i32 1, !dbg !8049
  %126 = load i8*, i8** %textPtr, align 8, !dbg !8049
  %tobool103 = icmp ne i8* %126, null, !dbg !8047
  br i1 %tobool103, label %if.then104, label %if.else125, !dbg !8050

if.then104:                                       ; preds = %if.end102
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8051, metadata !1076), !dbg !8053
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8054
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 52, !dbg !8054
  %128 = load i8, i8* %m_defaultExpandInternalEntities, align 8, !dbg !8054
  %tobool105 = icmp ne i8 %128, 0, !dbg !8054
  br i1 %tobool105, label %if.end119, label %if.then106, !dbg !8056

if.then106:                                       ; preds = %if.then104
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8057
  %m_skippedEntityHandler107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 28, !dbg !8057
  %130 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler107, align 8, !dbg !8057
  %tobool108 = icmp ne void (i8*, i8*, i32)* %130, null, !dbg !8057
  br i1 %tobool108, label %if.then109, label %if.else113, !dbg !8060

if.then109:                                       ; preds = %if.then106
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8061
  %m_skippedEntityHandler110 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 28, !dbg !8061
  %132 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler110, align 8, !dbg !8061
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8062
  %m_handlerArg111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 1, !dbg !8062
  %134 = load i8*, i8** %m_handlerArg111, align 8, !dbg !8062
  %135 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8063
  %name112 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %135, i32 0, i32 0, !dbg !8064
  %136 = load i8*, i8** %name112, align 8, !dbg !8064
  call void %132(i8* %134, i8* %136, i32 0), !dbg !8061
  br label %if.end118, !dbg !8061

if.else113:                                       ; preds = %if.then106
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8065
  %m_defaultHandler114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 18, !dbg !8065
  %138 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler114, align 8, !dbg !8065
  %tobool115 = icmp ne void (i8*, i8*, i32)* %138, null, !dbg !8065
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !8067

if.then116:                                       ; preds = %if.else113
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8068
  %140 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8069
  %141 = load i8*, i8** %s.addr, align 8, !dbg !8070
  %142 = load i8*, i8** %next, align 8, !dbg !8071
  call void @reportDefault(%struct.XML_ParserStruct* %139, %struct.encoding* %140, i8* %141, i8* %142), !dbg !8072
  br label %if.end117, !dbg !8072

if.end117:                                        ; preds = %if.then116, %if.else113
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then109
  br label %sw.epilog, !dbg !8073

if.end119:                                        ; preds = %if.then104
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8074
  %144 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8075
  %call120 = call i32 @processInternalEntity(%struct.XML_ParserStruct* %143, %struct.ENTITY* %144, i8 zeroext 0), !dbg !8076
  store i32 %call120, i32* %result, align 4, !dbg !8077
  %145 = load i32, i32* %result, align 4, !dbg !8078
  %cmp121 = icmp ne i32 %145, 0, !dbg !8080
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !8081

if.then123:                                       ; preds = %if.end119
  %146 = load i32, i32* %result, align 4, !dbg !8082
  store i32 %146, i32* %retval, align 4, !dbg !8083
  br label %return, !dbg !8083

if.end124:                                        ; preds = %if.end119
  br label %if.end148, !dbg !8084

if.else125:                                       ; preds = %if.end102
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8085
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 26, !dbg !8085
  %148 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8, !dbg !8085
  %tobool126 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %148, null, !dbg !8085
  br i1 %tobool126, label %if.then127, label %if.else142, !dbg !8087

if.then127:                                       ; preds = %if.else125
  call void @llvm.dbg.declare(metadata i8** %context, metadata !8088, metadata !1076), !dbg !8090
  %149 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8091
  %open128 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %149, i32 0, i32 8, !dbg !8092
  store i8 1, i8* %open128, align 8, !dbg !8093
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8094
  %call129 = call i8* @getContext(%struct.XML_ParserStruct* %150), !dbg !8095
  store i8* %call129, i8** %context, align 8, !dbg !8096
  %151 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8097
  %open130 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %151, i32 0, i32 8, !dbg !8098
  store i8 0, i8* %open130, align 8, !dbg !8099
  %152 = load i8*, i8** %context, align 8, !dbg !8100
  %tobool131 = icmp ne i8* %152, null, !dbg !8100
  br i1 %tobool131, label %if.end133, label %if.then132, !dbg !8102

if.then132:                                       ; preds = %if.then127
  store i32 1, i32* %retval, align 4, !dbg !8103
  br label %return, !dbg !8103

if.end133:                                        ; preds = %if.then127
  %153 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8104
  %m_externalEntityRefHandler134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %153, i32 0, i32 26, !dbg !8104
  %154 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler134, align 8, !dbg !8104
  %155 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8106
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %155, i32 0, i32 27, !dbg !8106
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8, !dbg !8106
  %157 = load i8*, i8** %context, align 8, !dbg !8107
  %158 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8108
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %158, i32 0, i32 5, !dbg !8109
  %159 = load i8*, i8** %base, align 8, !dbg !8109
  %160 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8110
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %160, i32 0, i32 4, !dbg !8111
  %161 = load i8*, i8** %systemId, align 8, !dbg !8111
  %162 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !8112
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %162, i32 0, i32 6, !dbg !8113
  %163 = load i8*, i8** %publicId, align 8, !dbg !8113
  %call135 = call i32 %154(%struct.XML_ParserStruct* %156, i8* %157, i8* %159, i8* %161, i8* %163), !dbg !8104
  %tobool136 = icmp ne i32 %call135, 0, !dbg !8104
  br i1 %tobool136, label %if.end138, label %if.then137, !dbg !8114

if.then137:                                       ; preds = %if.end133
  store i32 21, i32* %retval, align 4, !dbg !8115
  br label %return, !dbg !8115

if.end138:                                        ; preds = %if.end133
  %164 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8116
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %164, i32 0, i32 79, !dbg !8116
  %start139 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 4, !dbg !8116
  %165 = load i8*, i8** %start139, align 8, !dbg !8116
  %166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8116
  %m_tempPool140 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %166, i32 0, i32 79, !dbg !8116
  %ptr141 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool140, i32 0, i32 3, !dbg !8116
  store i8* %165, i8** %ptr141, align 8, !dbg !8116
  br label %if.end147, !dbg !8117

if.else142:                                       ; preds = %if.else125
  %167 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8118
  %m_defaultHandler143 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %167, i32 0, i32 18, !dbg !8118
  %168 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler143, align 8, !dbg !8118
  %tobool144 = icmp ne void (i8*, i8*, i32)* %168, null, !dbg !8118
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !8120

if.then145:                                       ; preds = %if.else142
  %169 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8121
  %170 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8122
  %171 = load i8*, i8** %s.addr, align 8, !dbg !8123
  %172 = load i8*, i8** %next, align 8, !dbg !8124
  call void @reportDefault(%struct.XML_ParserStruct* %169, %struct.encoding* %170, i8* %171, i8* %172), !dbg !8125
  br label %if.end146, !dbg !8125

if.end146:                                        ; preds = %if.then145, %if.else142
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.end138
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.end124
  br label %sw.epilog, !dbg !8126

sw.bb149:                                         ; preds = %for.cond, %for.cond
  call void @llvm.dbg.declare(metadata %struct.tag** %tag, metadata !8127, metadata !1076), !dbg !8129
  call void @llvm.dbg.declare(metadata i32* %result150, metadata !8130, metadata !1076), !dbg !8131
  call void @llvm.dbg.declare(metadata i8** %toPtr, metadata !8132, metadata !1076), !dbg !8133
  %173 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8134
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %173, i32 0, i32 68, !dbg !8134
  %174 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8, !dbg !8134
  %tobool151 = icmp ne %struct.tag* %174, null, !dbg !8134
  br i1 %tobool151, label %if.then152, label %if.else156, !dbg !8136

if.then152:                                       ; preds = %sw.bb149
  %175 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8137
  %m_freeTagList153 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %175, i32 0, i32 68, !dbg !8137
  %176 = load %struct.tag*, %struct.tag** %m_freeTagList153, align 8, !dbg !8137
  store %struct.tag* %176, %struct.tag** %tag, align 8, !dbg !8139
  %177 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8140
  %m_freeTagList154 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %177, i32 0, i32 68, !dbg !8140
  %178 = load %struct.tag*, %struct.tag** %m_freeTagList154, align 8, !dbg !8140
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %178, i32 0, i32 0, !dbg !8141
  %179 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !8141
  %180 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8142
  %m_freeTagList155 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %180, i32 0, i32 68, !dbg !8142
  store %struct.tag* %179, %struct.tag** %m_freeTagList155, align 8, !dbg !8143
  br label %if.end171, !dbg !8144

if.else156:                                       ; preds = %sw.bb149
  %181 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8145
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %181, i32 0, i32 3, !dbg !8145
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !8145
  %182 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !8145
  %call157 = call i8* %182(i64 88), !dbg !8145
  %183 = bitcast i8* %call157 to %struct.tag*, !dbg !8147
  store %struct.tag* %183, %struct.tag** %tag, align 8, !dbg !8148
  %184 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8149
  %tobool158 = icmp ne %struct.tag* %184, null, !dbg !8149
  br i1 %tobool158, label %if.end160, label %if.then159, !dbg !8151

if.then159:                                       ; preds = %if.else156
  store i32 1, i32* %retval, align 4, !dbg !8152
  br label %return, !dbg !8152

if.end160:                                        ; preds = %if.else156
  %185 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8153
  %m_mem161 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %185, i32 0, i32 3, !dbg !8153
  %malloc_fcn162 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem161, i32 0, i32 0, !dbg !8153
  %186 = load i8* (i64)*, i8* (i64)** %malloc_fcn162, align 8, !dbg !8153
  %call163 = call i8* %186(i64 32), !dbg !8153
  %187 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8154
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %187, i32 0, i32 4, !dbg !8155
  store i8* %call163, i8** %buf, align 8, !dbg !8156
  %188 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8157
  %buf164 = getelementptr inbounds %struct.tag, %struct.tag* %188, i32 0, i32 4, !dbg !8159
  %189 = load i8*, i8** %buf164, align 8, !dbg !8159
  %tobool165 = icmp ne i8* %189, null, !dbg !8157
  br i1 %tobool165, label %if.end168, label %if.then166, !dbg !8160

if.then166:                                       ; preds = %if.end160
  %190 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8161
  %m_mem167 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %190, i32 0, i32 3, !dbg !8161
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem167, i32 0, i32 2, !dbg !8161
  %191 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !8161
  %192 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8161
  %193 = bitcast %struct.tag* %192 to i8*, !dbg !8161
  call void %191(i8* %193), !dbg !8161
  store i32 1, i32* %retval, align 4, !dbg !8163
  br label %return, !dbg !8163

if.end168:                                        ; preds = %if.end160
  %194 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8164
  %buf169 = getelementptr inbounds %struct.tag, %struct.tag* %194, i32 0, i32 4, !dbg !8165
  %195 = load i8*, i8** %buf169, align 8, !dbg !8165
  %add.ptr170 = getelementptr inbounds i8, i8* %195, i64 32, !dbg !8166
  %196 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8167
  %bufEnd = getelementptr inbounds %struct.tag, %struct.tag* %196, i32 0, i32 5, !dbg !8168
  store i8* %add.ptr170, i8** %bufEnd, align 8, !dbg !8169
  br label %if.end171

if.end171:                                        ; preds = %if.end168, %if.then152
  %197 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8170
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %197, i32 0, i32 6, !dbg !8171
  store %struct.binding* null, %struct.binding** %bindings, align 8, !dbg !8172
  %198 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8173
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %198, i32 0, i32 67, !dbg !8173
  %199 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !8173
  %200 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8174
  %parent172 = getelementptr inbounds %struct.tag, %struct.tag* %200, i32 0, i32 0, !dbg !8175
  store %struct.tag* %199, %struct.tag** %parent172, align 8, !dbg !8176
  %201 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8177
  %202 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8178
  %m_tagStack173 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %202, i32 0, i32 67, !dbg !8178
  store %struct.tag* %201, %struct.tag** %m_tagStack173, align 8, !dbg !8179
  %203 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8180
  %name174 = getelementptr inbounds %struct.tag, %struct.tag* %203, i32 0, i32 3, !dbg !8181
  %localPart = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name174, i32 0, i32 1, !dbg !8182
  store i8* null, i8** %localPart, align 8, !dbg !8183
  %204 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8184
  %name175 = getelementptr inbounds %struct.tag, %struct.tag* %204, i32 0, i32 3, !dbg !8185
  %prefix = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name175, i32 0, i32 2, !dbg !8186
  store i8* null, i8** %prefix, align 8, !dbg !8187
  %205 = load i8*, i8** %s.addr, align 8, !dbg !8188
  %206 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8189
  %minBytesPerChar176 = getelementptr inbounds %struct.encoding, %struct.encoding* %206, i32 0, i32 13, !dbg !8190
  %207 = load i32, i32* %minBytesPerChar176, align 8, !dbg !8190
  %idx.ext177 = sext i32 %207 to i64, !dbg !8191
  %add.ptr178 = getelementptr inbounds i8, i8* %205, i64 %idx.ext177, !dbg !8191
  %208 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8192
  %rawName = getelementptr inbounds %struct.tag, %struct.tag* %208, i32 0, i32 1, !dbg !8193
  store i8* %add.ptr178, i8** %rawName, align 8, !dbg !8194
  %209 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8195
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %209, i32 0, i32 4, !dbg !8195
  %210 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !8195
  %211 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8195
  %212 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8195
  %rawName179 = getelementptr inbounds %struct.tag, %struct.tag* %212, i32 0, i32 1, !dbg !8195
  %213 = load i8*, i8** %rawName179, align 8, !dbg !8195
  %call180 = call i32 %210(%struct.encoding* %211, i8* %213), !dbg !8195
  %214 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8196
  %rawNameLength = getelementptr inbounds %struct.tag, %struct.tag* %214, i32 0, i32 2, !dbg !8197
  store i32 %call180, i32* %rawNameLength, align 8, !dbg !8198
  %215 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8199
  %m_tagLevel181 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %215, i32 0, i32 53, !dbg !8199
  %216 = load i32, i32* %m_tagLevel181, align 4, !dbg !8200
  %inc = add nsw i32 %216, 1, !dbg !8200
  store i32 %inc, i32* %m_tagLevel181, align 4, !dbg !8200
  call void @llvm.dbg.declare(metadata i8** %rawNameEnd, metadata !8201, metadata !1076), !dbg !8203
  %217 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8204
  %rawName182 = getelementptr inbounds %struct.tag, %struct.tag* %217, i32 0, i32 1, !dbg !8205
  %218 = load i8*, i8** %rawName182, align 8, !dbg !8205
  %219 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8206
  %rawNameLength183 = getelementptr inbounds %struct.tag, %struct.tag* %219, i32 0, i32 2, !dbg !8207
  %220 = load i32, i32* %rawNameLength183, align 8, !dbg !8207
  %idx.ext184 = sext i32 %220 to i64, !dbg !8208
  %add.ptr185 = getelementptr inbounds i8, i8* %218, i64 %idx.ext184, !dbg !8208
  store i8* %add.ptr185, i8** %rawNameEnd, align 8, !dbg !8203
  call void @llvm.dbg.declare(metadata i8** %fromPtr, metadata !8209, metadata !1076), !dbg !8210
  %221 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8211
  %rawName186 = getelementptr inbounds %struct.tag, %struct.tag* %221, i32 0, i32 1, !dbg !8212
  %222 = load i8*, i8** %rawName186, align 8, !dbg !8212
  store i8* %222, i8** %fromPtr, align 8, !dbg !8210
  %223 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8213
  %buf187 = getelementptr inbounds %struct.tag, %struct.tag* %223, i32 0, i32 4, !dbg !8214
  %224 = load i8*, i8** %buf187, align 8, !dbg !8214
  store i8* %224, i8** %toPtr, align 8, !dbg !8215
  br label %for.cond188, !dbg !8216

for.cond188:                                      ; preds = %if.end215, %if.end171
  call void @llvm.dbg.declare(metadata i32* %bufSize, metadata !8217, metadata !1076), !dbg !8221
  call void @llvm.dbg.declare(metadata i32* %convLen, metadata !8222, metadata !1076), !dbg !8223
  call void @llvm.dbg.declare(metadata i32* %convert_res, metadata !8224, metadata !1076), !dbg !8225
  %225 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8226
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %225, i32 0, i32 11, !dbg !8226
  %226 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !8226
  %227 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8226
  %228 = load i8*, i8** %rawNameEnd, align 8, !dbg !8226
  %229 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8226
  %bufEnd189 = getelementptr inbounds %struct.tag, %struct.tag* %229, i32 0, i32 5, !dbg !8226
  %230 = load i8*, i8** %bufEnd189, align 8, !dbg !8226
  %add.ptr190 = getelementptr inbounds i8, i8* %230, i64 -1, !dbg !8226
  %call191 = call i32 %226(%struct.encoding* %227, i8** %fromPtr, i8* %228, i8** %toPtr, i8* %add.ptr190), !dbg !8226
  store i32 %call191, i32* %convert_res, align 4, !dbg !8225
  %231 = load i8*, i8** %toPtr, align 8, !dbg !8227
  %232 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8228
  %buf192 = getelementptr inbounds %struct.tag, %struct.tag* %232, i32 0, i32 4, !dbg !8229
  %233 = load i8*, i8** %buf192, align 8, !dbg !8229
  %sub.ptr.lhs.cast = ptrtoint i8* %231 to i64, !dbg !8230
  %sub.ptr.rhs.cast = ptrtoint i8* %233 to i64, !dbg !8230
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8230
  %conv193 = trunc i64 %sub.ptr.sub to i32, !dbg !8231
  store i32 %conv193, i32* %convLen, align 4, !dbg !8232
  %234 = load i32, i32* %convert_res, align 4, !dbg !8233
  %cmp194 = icmp eq i32 %234, 0, !dbg !8235
  br i1 %cmp194, label %if.then199, label %lor.lhs.false196, !dbg !8236

lor.lhs.false196:                                 ; preds = %for.cond188
  %235 = load i32, i32* %convert_res, align 4, !dbg !8237
  %cmp197 = icmp eq i32 %235, 1, !dbg !8239
  br i1 %cmp197, label %if.then199, label %if.end201, !dbg !8240

if.then199:                                       ; preds = %lor.lhs.false196, %for.cond188
  %236 = load i32, i32* %convLen, align 4, !dbg !8241
  %237 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8243
  %name200 = getelementptr inbounds %struct.tag, %struct.tag* %237, i32 0, i32 3, !dbg !8244
  %strLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name200, i32 0, i32 3, !dbg !8245
  store i32 %236, i32* %strLen, align 8, !dbg !8246
  br label %for.end, !dbg !8247

if.end201:                                        ; preds = %lor.lhs.false196
  %238 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8248
  %bufEnd202 = getelementptr inbounds %struct.tag, %struct.tag* %238, i32 0, i32 5, !dbg !8249
  %239 = load i8*, i8** %bufEnd202, align 8, !dbg !8249
  %240 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8250
  %buf203 = getelementptr inbounds %struct.tag, %struct.tag* %240, i32 0, i32 4, !dbg !8251
  %241 = load i8*, i8** %buf203, align 8, !dbg !8251
  %sub.ptr.lhs.cast204 = ptrtoint i8* %239 to i64, !dbg !8252
  %sub.ptr.rhs.cast205 = ptrtoint i8* %241 to i64, !dbg !8252
  %sub.ptr.sub206 = sub i64 %sub.ptr.lhs.cast204, %sub.ptr.rhs.cast205, !dbg !8252
  %conv207 = trunc i64 %sub.ptr.sub206 to i32, !dbg !8253
  %shl = shl i32 %conv207, 1, !dbg !8254
  store i32 %shl, i32* %bufSize, align 4, !dbg !8255
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !8256, metadata !1076), !dbg !8258
  %242 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8259
  %m_mem208 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %242, i32 0, i32 3, !dbg !8259
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem208, i32 0, i32 1, !dbg !8259
  %243 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !8259
  %244 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8259
  %buf209 = getelementptr inbounds %struct.tag, %struct.tag* %244, i32 0, i32 4, !dbg !8259
  %245 = load i8*, i8** %buf209, align 8, !dbg !8259
  %246 = load i32, i32* %bufSize, align 4, !dbg !8259
  %conv210 = sext i32 %246 to i64, !dbg !8259
  %call211 = call i8* %243(i8* %245, i64 %conv210), !dbg !8259
  store i8* %call211, i8** %temp, align 8, !dbg !8258
  %247 = load i8*, i8** %temp, align 8, !dbg !8260
  %cmp212 = icmp eq i8* %247, null, !dbg !8262
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !8263

if.then214:                                       ; preds = %if.end201
  store i32 1, i32* %retval, align 4, !dbg !8264
  br label %return, !dbg !8264

if.end215:                                        ; preds = %if.end201
  %248 = load i8*, i8** %temp, align 8, !dbg !8265
  %249 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8266
  %buf216 = getelementptr inbounds %struct.tag, %struct.tag* %249, i32 0, i32 4, !dbg !8267
  store i8* %248, i8** %buf216, align 8, !dbg !8268
  %250 = load i8*, i8** %temp, align 8, !dbg !8269
  %251 = load i32, i32* %bufSize, align 4, !dbg !8270
  %idx.ext217 = sext i32 %251 to i64, !dbg !8271
  %add.ptr218 = getelementptr inbounds i8, i8* %250, i64 %idx.ext217, !dbg !8271
  %252 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8272
  %bufEnd219 = getelementptr inbounds %struct.tag, %struct.tag* %252, i32 0, i32 5, !dbg !8273
  store i8* %add.ptr218, i8** %bufEnd219, align 8, !dbg !8274
  %253 = load i8*, i8** %temp, align 8, !dbg !8275
  %254 = load i32, i32* %convLen, align 4, !dbg !8276
  %idx.ext220 = sext i32 %254 to i64, !dbg !8277
  %add.ptr221 = getelementptr inbounds i8, i8* %253, i64 %idx.ext220, !dbg !8277
  store i8* %add.ptr221, i8** %toPtr, align 8, !dbg !8278
  br label %for.cond188, !dbg !8279

for.end:                                          ; preds = %if.then199
  %255 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8281
  %buf222 = getelementptr inbounds %struct.tag, %struct.tag* %255, i32 0, i32 4, !dbg !8282
  %256 = load i8*, i8** %buf222, align 8, !dbg !8282
  %257 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8283
  %name223 = getelementptr inbounds %struct.tag, %struct.tag* %257, i32 0, i32 3, !dbg !8284
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name223, i32 0, i32 0, !dbg !8285
  store i8* %256, i8** %str, align 8, !dbg !8286
  %258 = load i8*, i8** %toPtr, align 8, !dbg !8287
  store i8 0, i8* %258, align 1, !dbg !8288
  %259 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8289
  %260 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8290
  %261 = load i8*, i8** %s.addr, align 8, !dbg !8291
  %262 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8292
  %name224 = getelementptr inbounds %struct.tag, %struct.tag* %262, i32 0, i32 3, !dbg !8293
  %263 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8294
  %bindings225 = getelementptr inbounds %struct.tag, %struct.tag* %263, i32 0, i32 6, !dbg !8295
  %call226 = call i32 @storeAtts(%struct.XML_ParserStruct* %259, %struct.encoding* %260, i8* %261, %struct.TAG_NAME* %name224, %struct.binding** %bindings225), !dbg !8296
  store i32 %call226, i32* %result150, align 4, !dbg !8297
  %264 = load i32, i32* %result150, align 4, !dbg !8298
  %tobool227 = icmp ne i32 %264, 0, !dbg !8298
  br i1 %tobool227, label %if.then228, label %if.end229, !dbg !8300

if.then228:                                       ; preds = %for.end
  %265 = load i32, i32* %result150, align 4, !dbg !8301
  store i32 %265, i32* %retval, align 4, !dbg !8302
  br label %return, !dbg !8302

if.end229:                                        ; preds = %for.end
  %266 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8303
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %266, i32 0, i32 11, !dbg !8303
  %267 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler, align 8, !dbg !8303
  %tobool230 = icmp ne void (i8*, i8*, i8**)* %267, null, !dbg !8303
  br i1 %tobool230, label %if.then231, label %if.else236, !dbg !8305

if.then231:                                       ; preds = %if.end229
  %268 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8306
  %m_startElementHandler232 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %268, i32 0, i32 11, !dbg !8306
  %269 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler232, align 8, !dbg !8306
  %270 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8307
  %m_handlerArg233 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %270, i32 0, i32 1, !dbg !8307
  %271 = load i8*, i8** %m_handlerArg233, align 8, !dbg !8307
  %272 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8308
  %name234 = getelementptr inbounds %struct.tag, %struct.tag* %272, i32 0, i32 3, !dbg !8309
  %str235 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name234, i32 0, i32 0, !dbg !8310
  %273 = load i8*, i8** %str235, align 8, !dbg !8310
  %274 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8311
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %274, i32 0, i32 74, !dbg !8311
  %275 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !8311
  %276 = bitcast %struct.ATTRIBUTE* %275 to i8**, !dbg !8312
  call void %269(i8* %271, i8* %273, i8** %276), !dbg !8306
  br label %if.end241, !dbg !8306

if.else236:                                       ; preds = %if.end229
  %277 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8313
  %m_defaultHandler237 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %277, i32 0, i32 18, !dbg !8313
  %278 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler237, align 8, !dbg !8313
  %tobool238 = icmp ne void (i8*, i8*, i32)* %278, null, !dbg !8313
  br i1 %tobool238, label %if.then239, label %if.end240, !dbg !8315

if.then239:                                       ; preds = %if.else236
  %279 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8316
  %280 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8317
  %281 = load i8*, i8** %s.addr, align 8, !dbg !8318
  %282 = load i8*, i8** %next, align 8, !dbg !8319
  call void @reportDefault(%struct.XML_ParserStruct* %279, %struct.encoding* %280, i8* %281, i8* %282), !dbg !8320
  br label %if.end240, !dbg !8320

if.end240:                                        ; preds = %if.then239, %if.else236
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %if.then231
  %283 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8321
  %m_tempPool242 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %283, i32 0, i32 79, !dbg !8321
  call void @poolClear(%struct.STRING_POOL* %m_tempPool242), !dbg !8322
  br label %sw.epilog, !dbg !8323

sw.bb243:                                         ; preds = %for.cond, %for.cond
  call void @llvm.dbg.declare(metadata i8** %rawName244, metadata !8324, metadata !1076), !dbg !8326
  %284 = load i8*, i8** %s.addr, align 8, !dbg !8327
  %285 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8328
  %minBytesPerChar245 = getelementptr inbounds %struct.encoding, %struct.encoding* %285, i32 0, i32 13, !dbg !8329
  %286 = load i32, i32* %minBytesPerChar245, align 8, !dbg !8329
  %idx.ext246 = sext i32 %286 to i64, !dbg !8330
  %add.ptr247 = getelementptr inbounds i8, i8* %284, i64 %idx.ext246, !dbg !8330
  store i8* %add.ptr247, i8** %rawName244, align 8, !dbg !8326
  call void @llvm.dbg.declare(metadata i32* %result248, metadata !8331, metadata !1076), !dbg !8332
  call void @llvm.dbg.declare(metadata %struct.binding** %bindings249, metadata !8333, metadata !1076), !dbg !8334
  store %struct.binding* null, %struct.binding** %bindings249, align 8, !dbg !8334
  call void @llvm.dbg.declare(metadata i8* %noElmHandlers, metadata !8335, metadata !1076), !dbg !8336
  store i8 1, i8* %noElmHandlers, align 1, !dbg !8336
  call void @llvm.dbg.declare(metadata %struct.TAG_NAME* %name250, metadata !8337, metadata !1076), !dbg !8338
  %287 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8339
  %m_tempPool251 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %287, i32 0, i32 79, !dbg !8339
  %288 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8340
  %289 = load i8*, i8** %rawName244, align 8, !dbg !8341
  %290 = load i8*, i8** %rawName244, align 8, !dbg !8342
  %291 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8343
  %nameLength252 = getelementptr inbounds %struct.encoding, %struct.encoding* %291, i32 0, i32 4, !dbg !8343
  %292 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength252, align 8, !dbg !8343
  %293 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8343
  %294 = load i8*, i8** %rawName244, align 8, !dbg !8343
  %call253 = call i32 %292(%struct.encoding* %293, i8* %294), !dbg !8343
  %idx.ext254 = sext i32 %call253 to i64, !dbg !8344
  %add.ptr255 = getelementptr inbounds i8, i8* %290, i64 %idx.ext254, !dbg !8344
  %call256 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool251, %struct.encoding* %288, i8* %289, i8* %add.ptr255), !dbg !8345
  %str257 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name250, i32 0, i32 0, !dbg !8346
  store i8* %call256, i8** %str257, align 8, !dbg !8347
  %str258 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name250, i32 0, i32 0, !dbg !8348
  %295 = load i8*, i8** %str258, align 8, !dbg !8348
  %tobool259 = icmp ne i8* %295, null, !dbg !8350
  br i1 %tobool259, label %if.end261, label %if.then260, !dbg !8351

if.then260:                                       ; preds = %sw.bb243
  store i32 1, i32* %retval, align 4, !dbg !8352
  br label %return, !dbg !8352

if.end261:                                        ; preds = %sw.bb243
  %296 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8353
  %m_tempPool262 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %296, i32 0, i32 79, !dbg !8353
  %ptr263 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool262, i32 0, i32 3, !dbg !8353
  %297 = load i8*, i8** %ptr263, align 8, !dbg !8353
  %298 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8353
  %m_tempPool264 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %298, i32 0, i32 79, !dbg !8353
  %start265 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool264, i32 0, i32 4, !dbg !8353
  store i8* %297, i8** %start265, align 8, !dbg !8353
  %299 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8354
  %300 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8355
  %301 = load i8*, i8** %s.addr, align 8, !dbg !8356
  %call266 = call i32 @storeAtts(%struct.XML_ParserStruct* %299, %struct.encoding* %300, i8* %301, %struct.TAG_NAME* %name250, %struct.binding** %bindings249), !dbg !8357
  store i32 %call266, i32* %result248, align 4, !dbg !8358
  %302 = load i32, i32* %result248, align 4, !dbg !8359
  %tobool267 = icmp ne i32 %302, 0, !dbg !8359
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !8361

if.then268:                                       ; preds = %if.end261
  %303 = load i32, i32* %result248, align 4, !dbg !8362
  store i32 %303, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

if.end269:                                        ; preds = %if.end261
  %304 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8364
  %m_tempPool270 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %304, i32 0, i32 79, !dbg !8364
  %ptr271 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool270, i32 0, i32 3, !dbg !8364
  %305 = load i8*, i8** %ptr271, align 8, !dbg !8364
  %306 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8364
  %m_tempPool272 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %306, i32 0, i32 79, !dbg !8364
  %start273 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool272, i32 0, i32 4, !dbg !8364
  store i8* %305, i8** %start273, align 8, !dbg !8364
  %307 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8365
  %m_startElementHandler274 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %307, i32 0, i32 11, !dbg !8365
  %308 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler274, align 8, !dbg !8365
  %tobool275 = icmp ne void (i8*, i8*, i8**)* %308, null, !dbg !8365
  br i1 %tobool275, label %if.then276, label %if.end281, !dbg !8367

if.then276:                                       ; preds = %if.end269
  %309 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8368
  %m_startElementHandler277 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %309, i32 0, i32 11, !dbg !8368
  %310 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler277, align 8, !dbg !8368
  %311 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8370
  %m_handlerArg278 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %311, i32 0, i32 1, !dbg !8370
  %312 = load i8*, i8** %m_handlerArg278, align 8, !dbg !8370
  %str279 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name250, i32 0, i32 0, !dbg !8371
  %313 = load i8*, i8** %str279, align 8, !dbg !8371
  %314 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8372
  %m_atts280 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %314, i32 0, i32 74, !dbg !8372
  %315 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts280, align 8, !dbg !8372
  %316 = bitcast %struct.ATTRIBUTE* %315 to i8**, !dbg !8373
  call void %310(i8* %312, i8* %313, i8** %316), !dbg !8368
  store i8 0, i8* %noElmHandlers, align 1, !dbg !8374
  br label %if.end281, !dbg !8375

if.end281:                                        ; preds = %if.then276, %if.end269
  %317 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8376
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %317, i32 0, i32 12, !dbg !8376
  %318 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler, align 8, !dbg !8376
  %tobool282 = icmp ne void (i8*, i8*)* %318, null, !dbg !8376
  br i1 %tobool282, label %if.then283, label %if.end291, !dbg !8378

if.then283:                                       ; preds = %if.end281
  %319 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8379
  %m_startElementHandler284 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %319, i32 0, i32 11, !dbg !8379
  %320 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler284, align 8, !dbg !8379
  %tobool285 = icmp ne void (i8*, i8*, i8**)* %320, null, !dbg !8379
  br i1 %tobool285, label %if.then286, label %if.end287, !dbg !8382

if.then286:                                       ; preds = %if.then283
  %321 = load i8**, i8*** %eventEndPP, align 8, !dbg !8383
  %322 = load i8*, i8** %321, align 8, !dbg !8384
  %323 = load i8**, i8*** %eventPP, align 8, !dbg !8385
  store i8* %322, i8** %323, align 8, !dbg !8386
  br label %if.end287, !dbg !8387

if.end287:                                        ; preds = %if.then286, %if.then283
  %324 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8388
  %m_endElementHandler288 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %324, i32 0, i32 12, !dbg !8388
  %325 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler288, align 8, !dbg !8388
  %326 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8389
  %m_handlerArg289 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %326, i32 0, i32 1, !dbg !8389
  %327 = load i8*, i8** %m_handlerArg289, align 8, !dbg !8389
  %str290 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name250, i32 0, i32 0, !dbg !8390
  %328 = load i8*, i8** %str290, align 8, !dbg !8390
  call void %325(i8* %327, i8* %328), !dbg !8388
  store i8 0, i8* %noElmHandlers, align 1, !dbg !8391
  br label %if.end291, !dbg !8392

if.end291:                                        ; preds = %if.end287, %if.end281
  %329 = load i8, i8* %noElmHandlers, align 1, !dbg !8393
  %conv292 = zext i8 %329 to i32, !dbg !8393
  %tobool293 = icmp ne i32 %conv292, 0, !dbg !8393
  br i1 %tobool293, label %land.lhs.true, label %if.end297, !dbg !8395

land.lhs.true:                                    ; preds = %if.end291
  %330 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8396
  %m_defaultHandler294 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %330, i32 0, i32 18, !dbg !8396
  %331 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler294, align 8, !dbg !8396
  %tobool295 = icmp ne void (i8*, i8*, i32)* %331, null, !dbg !8396
  br i1 %tobool295, label %if.then296, label %if.end297, !dbg !8398

if.then296:                                       ; preds = %land.lhs.true
  %332 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8399
  %333 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8400
  %334 = load i8*, i8** %s.addr, align 8, !dbg !8401
  %335 = load i8*, i8** %next, align 8, !dbg !8402
  call void @reportDefault(%struct.XML_ParserStruct* %332, %struct.encoding* %333, i8* %334, i8* %335), !dbg !8403
  br label %if.end297, !dbg !8403

if.end297:                                        ; preds = %if.then296, %land.lhs.true, %if.end291
  %336 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8404
  %m_tempPool298 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %336, i32 0, i32 79, !dbg !8404
  call void @poolClear(%struct.STRING_POOL* %m_tempPool298), !dbg !8405
  br label %while.cond, !dbg !8406

while.cond:                                       ; preds = %if.end306, %if.end297
  %337 = load %struct.binding*, %struct.binding** %bindings249, align 8, !dbg !8407
  %tobool299 = icmp ne %struct.binding* %337, null, !dbg !8409
  br i1 %tobool299, label %while.body, label %while.end, !dbg !8409

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !8410, metadata !1076), !dbg !8412
  %338 = load %struct.binding*, %struct.binding** %bindings249, align 8, !dbg !8413
  store %struct.binding* %338, %struct.binding** %b, align 8, !dbg !8412
  %339 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8414
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %339, i32 0, i32 24, !dbg !8414
  %340 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8, !dbg !8414
  %tobool300 = icmp ne void (i8*, i8*)* %340, null, !dbg !8414
  br i1 %tobool300, label %if.then301, label %if.end306, !dbg !8416

if.then301:                                       ; preds = %while.body
  %341 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8417
  %m_endNamespaceDeclHandler302 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %341, i32 0, i32 24, !dbg !8417
  %342 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler302, align 8, !dbg !8417
  %343 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8418
  %m_handlerArg303 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %343, i32 0, i32 1, !dbg !8418
  %344 = load i8*, i8** %m_handlerArg303, align 8, !dbg !8418
  %345 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !8419
  %prefix304 = getelementptr inbounds %struct.binding, %struct.binding* %345, i32 0, i32 0, !dbg !8420
  %346 = load %struct.prefix*, %struct.prefix** %prefix304, align 8, !dbg !8420
  %name305 = getelementptr inbounds %struct.prefix, %struct.prefix* %346, i32 0, i32 0, !dbg !8421
  %347 = load i8*, i8** %name305, align 8, !dbg !8421
  call void %342(i8* %344, i8* %347), !dbg !8417
  br label %if.end306, !dbg !8417

if.end306:                                        ; preds = %if.then301, %while.body
  %348 = load %struct.binding*, %struct.binding** %bindings249, align 8, !dbg !8422
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %348, i32 0, i32 1, !dbg !8423
  %349 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !8423
  store %struct.binding* %349, %struct.binding** %bindings249, align 8, !dbg !8424
  %350 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8425
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %350, i32 0, i32 70, !dbg !8425
  %351 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !8425
  %352 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !8426
  %nextTagBinding307 = getelementptr inbounds %struct.binding, %struct.binding* %352, i32 0, i32 1, !dbg !8427
  store %struct.binding* %351, %struct.binding** %nextTagBinding307, align 8, !dbg !8428
  %353 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !8429
  %354 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8430
  %m_freeBindingList308 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %354, i32 0, i32 70, !dbg !8430
  store %struct.binding* %353, %struct.binding** %m_freeBindingList308, align 8, !dbg !8431
  %355 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !8432
  %prevPrefixBinding = getelementptr inbounds %struct.binding, %struct.binding* %355, i32 0, i32 2, !dbg !8433
  %356 = load %struct.binding*, %struct.binding** %prevPrefixBinding, align 8, !dbg !8433
  %357 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !8434
  %prefix309 = getelementptr inbounds %struct.binding, %struct.binding* %357, i32 0, i32 0, !dbg !8435
  %358 = load %struct.prefix*, %struct.prefix** %prefix309, align 8, !dbg !8435
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %358, i32 0, i32 1, !dbg !8436
  store %struct.binding* %356, %struct.binding** %binding, align 8, !dbg !8437
  br label %while.cond, !dbg !8438

while.end:                                        ; preds = %while.cond
  %359 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8440
  %m_tagLevel310 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %359, i32 0, i32 53, !dbg !8440
  %360 = load i32, i32* %m_tagLevel310, align 4, !dbg !8440
  %cmp311 = icmp eq i32 %360, 0, !dbg !8442
  br i1 %cmp311, label %if.then313, label %if.end315, !dbg !8443

if.then313:                                       ; preds = %while.end
  %361 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8444
  %362 = load i8*, i8** %next, align 8, !dbg !8445
  %363 = load i8*, i8** %end.addr, align 8, !dbg !8446
  %364 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !8447
  %call314 = call i32 @epilogProcessor(%struct.XML_ParserStruct* %361, i8* %362, i8* %363, i8** %364), !dbg !8448
  store i32 %call314, i32* %retval, align 4, !dbg !8449
  br label %return, !dbg !8449

if.end315:                                        ; preds = %while.end
  br label %sw.epilog, !dbg !8450

sw.bb316:                                         ; preds = %for.cond
  %365 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8451
  %m_tagLevel317 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %365, i32 0, i32 53, !dbg !8451
  %366 = load i32, i32* %m_tagLevel317, align 4, !dbg !8451
  %367 = load i32, i32* %startTagLevel.addr, align 4, !dbg !8453
  %cmp318 = icmp eq i32 %366, %367, !dbg !8454
  br i1 %cmp318, label %if.then320, label %if.else321, !dbg !8455

if.then320:                                       ; preds = %sw.bb316
  store i32 13, i32* %retval, align 4, !dbg !8456
  br label %return, !dbg !8456

if.else321:                                       ; preds = %sw.bb316
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8457, metadata !1076), !dbg !8459
  call void @llvm.dbg.declare(metadata i8** %rawName322, metadata !8460, metadata !1076), !dbg !8461
  call void @llvm.dbg.declare(metadata %struct.tag** %tag323, metadata !8462, metadata !1076), !dbg !8463
  %368 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8464
  %m_tagStack324 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %368, i32 0, i32 67, !dbg !8464
  %369 = load %struct.tag*, %struct.tag** %m_tagStack324, align 8, !dbg !8464
  store %struct.tag* %369, %struct.tag** %tag323, align 8, !dbg !8463
  %370 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8465
  %parent325 = getelementptr inbounds %struct.tag, %struct.tag* %370, i32 0, i32 0, !dbg !8466
  %371 = load %struct.tag*, %struct.tag** %parent325, align 8, !dbg !8466
  %372 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8467
  %m_tagStack326 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %372, i32 0, i32 67, !dbg !8467
  store %struct.tag* %371, %struct.tag** %m_tagStack326, align 8, !dbg !8468
  %373 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8469
  %m_freeTagList327 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %373, i32 0, i32 68, !dbg !8469
  %374 = load %struct.tag*, %struct.tag** %m_freeTagList327, align 8, !dbg !8469
  %375 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8470
  %parent328 = getelementptr inbounds %struct.tag, %struct.tag* %375, i32 0, i32 0, !dbg !8471
  store %struct.tag* %374, %struct.tag** %parent328, align 8, !dbg !8472
  %376 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8473
  %377 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8474
  %m_freeTagList329 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %377, i32 0, i32 68, !dbg !8474
  store %struct.tag* %376, %struct.tag** %m_freeTagList329, align 8, !dbg !8475
  %378 = load i8*, i8** %s.addr, align 8, !dbg !8476
  %379 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8477
  %minBytesPerChar330 = getelementptr inbounds %struct.encoding, %struct.encoding* %379, i32 0, i32 13, !dbg !8478
  %380 = load i32, i32* %minBytesPerChar330, align 8, !dbg !8478
  %mul = mul nsw i32 %380, 2, !dbg !8479
  %idx.ext331 = sext i32 %mul to i64, !dbg !8480
  %add.ptr332 = getelementptr inbounds i8, i8* %378, i64 %idx.ext331, !dbg !8480
  store i8* %add.ptr332, i8** %rawName322, align 8, !dbg !8481
  %381 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8482
  %nameLength333 = getelementptr inbounds %struct.encoding, %struct.encoding* %381, i32 0, i32 4, !dbg !8482
  %382 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength333, align 8, !dbg !8482
  %383 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8482
  %384 = load i8*, i8** %rawName322, align 8, !dbg !8482
  %call334 = call i32 %382(%struct.encoding* %383, i8* %384), !dbg !8482
  store i32 %call334, i32* %len, align 4, !dbg !8483
  %385 = load i32, i32* %len, align 4, !dbg !8484
  %386 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8486
  %rawNameLength335 = getelementptr inbounds %struct.tag, %struct.tag* %386, i32 0, i32 2, !dbg !8487
  %387 = load i32, i32* %rawNameLength335, align 8, !dbg !8487
  %cmp336 = icmp ne i32 %385, %387, !dbg !8488
  br i1 %cmp336, label %if.then344, label %lor.lhs.false338, !dbg !8489

lor.lhs.false338:                                 ; preds = %if.else321
  %388 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8490
  %rawName339 = getelementptr inbounds %struct.tag, %struct.tag* %388, i32 0, i32 1, !dbg !8492
  %389 = load i8*, i8** %rawName339, align 8, !dbg !8492
  %390 = load i8*, i8** %rawName322, align 8, !dbg !8493
  %391 = load i32, i32* %len, align 4, !dbg !8494
  %conv340 = sext i32 %391 to i64, !dbg !8494
  %call341 = call i32 @memcmp(i8* %389, i8* %390, i64 %conv340) #9, !dbg !8495
  %cmp342 = icmp ne i32 %call341, 0, !dbg !8496
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !8497

if.then344:                                       ; preds = %lor.lhs.false338, %if.else321
  %392 = load i8*, i8** %rawName322, align 8, !dbg !8499
  %393 = load i8**, i8*** %eventPP, align 8, !dbg !8501
  store i8* %392, i8** %393, align 8, !dbg !8502
  store i32 7, i32* %retval, align 4, !dbg !8503
  br label %return, !dbg !8503

if.end345:                                        ; preds = %lor.lhs.false338
  %394 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8504
  %m_tagLevel346 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %394, i32 0, i32 53, !dbg !8504
  %395 = load i32, i32* %m_tagLevel346, align 4, !dbg !8505
  %dec = add nsw i32 %395, -1, !dbg !8505
  store i32 %dec, i32* %m_tagLevel346, align 4, !dbg !8505
  %396 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8506
  %m_endElementHandler347 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %396, i32 0, i32 12, !dbg !8506
  %397 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler347, align 8, !dbg !8506
  %tobool348 = icmp ne void (i8*, i8*)* %397, null, !dbg !8506
  br i1 %tobool348, label %if.then349, label %if.else389, !dbg !8508

if.then349:                                       ; preds = %if.end345
  call void @llvm.dbg.declare(metadata i8** %localPart350, metadata !8509, metadata !1076), !dbg !8511
  call void @llvm.dbg.declare(metadata i8** %prefix351, metadata !8512, metadata !1076), !dbg !8513
  call void @llvm.dbg.declare(metadata i8** %uri, metadata !8514, metadata !1076), !dbg !8515
  %398 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8516
  %name352 = getelementptr inbounds %struct.tag, %struct.tag* %398, i32 0, i32 3, !dbg !8517
  %localPart353 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name352, i32 0, i32 1, !dbg !8518
  %399 = load i8*, i8** %localPart353, align 8, !dbg !8518
  store i8* %399, i8** %localPart350, align 8, !dbg !8519
  %400 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8520
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %400, i32 0, i32 38, !dbg !8520
  %401 = load i8, i8* %m_ns, align 8, !dbg !8520
  %conv354 = zext i8 %401 to i32, !dbg !8520
  %tobool355 = icmp ne i32 %conv354, 0, !dbg !8520
  br i1 %tobool355, label %land.lhs.true356, label %if.end384, !dbg !8522

land.lhs.true356:                                 ; preds = %if.then349
  %402 = load i8*, i8** %localPart350, align 8, !dbg !8523
  %tobool357 = icmp ne i8* %402, null, !dbg !8523
  br i1 %tobool357, label %if.then358, label %if.end384, !dbg !8525

if.then358:                                       ; preds = %land.lhs.true356
  %403 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8526
  %name359 = getelementptr inbounds %struct.tag, %struct.tag* %403, i32 0, i32 3, !dbg !8528
  %str360 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name359, i32 0, i32 0, !dbg !8529
  %404 = load i8*, i8** %str360, align 8, !dbg !8529
  %405 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8530
  %name361 = getelementptr inbounds %struct.tag, %struct.tag* %405, i32 0, i32 3, !dbg !8531
  %uriLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name361, i32 0, i32 4, !dbg !8532
  %406 = load i32, i32* %uriLen, align 4, !dbg !8532
  %idx.ext362 = sext i32 %406 to i64, !dbg !8533
  %add.ptr363 = getelementptr inbounds i8, i8* %404, i64 %idx.ext362, !dbg !8533
  store i8* %add.ptr363, i8** %uri, align 8, !dbg !8534
  br label %while.cond364, !dbg !8535

while.cond364:                                    ; preds = %while.body366, %if.then358
  %407 = load i8*, i8** %localPart350, align 8, !dbg !8536
  %408 = load i8, i8* %407, align 1, !dbg !8538
  %tobool365 = icmp ne i8 %408, 0, !dbg !8539
  br i1 %tobool365, label %while.body366, label %while.end368, !dbg !8539

while.body366:                                    ; preds = %while.cond364
  %409 = load i8*, i8** %localPart350, align 8, !dbg !8540
  %incdec.ptr = getelementptr inbounds i8, i8* %409, i32 1, !dbg !8540
  store i8* %incdec.ptr, i8** %localPart350, align 8, !dbg !8540
  %410 = load i8, i8* %409, align 1, !dbg !8542
  %411 = load i8*, i8** %uri, align 8, !dbg !8543
  %incdec.ptr367 = getelementptr inbounds i8, i8* %411, i32 1, !dbg !8543
  store i8* %incdec.ptr367, i8** %uri, align 8, !dbg !8543
  store i8 %410, i8* %411, align 1, !dbg !8544
  br label %while.cond364, !dbg !8545

while.end368:                                     ; preds = %while.cond364
  %412 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8546
  %name369 = getelementptr inbounds %struct.tag, %struct.tag* %412, i32 0, i32 3, !dbg !8547
  %prefix370 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name369, i32 0, i32 2, !dbg !8548
  %413 = load i8*, i8** %prefix370, align 8, !dbg !8548
  store i8* %413, i8** %prefix351, align 8, !dbg !8549
  %414 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8550
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %414, i32 0, i32 39, !dbg !8550
  %415 = load i8, i8* %m_ns_triplets, align 1, !dbg !8550
  %conv371 = zext i8 %415 to i32, !dbg !8550
  %tobool372 = icmp ne i32 %conv371, 0, !dbg !8550
  br i1 %tobool372, label %land.lhs.true373, label %if.end383, !dbg !8552

land.lhs.true373:                                 ; preds = %while.end368
  %416 = load i8*, i8** %prefix351, align 8, !dbg !8553
  %tobool374 = icmp ne i8* %416, null, !dbg !8553
  br i1 %tobool374, label %if.then375, label %if.end383, !dbg !8555

if.then375:                                       ; preds = %land.lhs.true373
  %417 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8556
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %417, i32 0, i32 83, !dbg !8556
  %418 = load i8, i8* %m_namespaceSeparator, align 4, !dbg !8556
  %419 = load i8*, i8** %uri, align 8, !dbg !8558
  %incdec.ptr376 = getelementptr inbounds i8, i8* %419, i32 1, !dbg !8558
  store i8* %incdec.ptr376, i8** %uri, align 8, !dbg !8558
  store i8 %418, i8* %419, align 1, !dbg !8559
  br label %while.cond377, !dbg !8560

while.cond377:                                    ; preds = %while.body379, %if.then375
  %420 = load i8*, i8** %prefix351, align 8, !dbg !8561
  %421 = load i8, i8* %420, align 1, !dbg !8563
  %tobool378 = icmp ne i8 %421, 0, !dbg !8564
  br i1 %tobool378, label %while.body379, label %while.end382, !dbg !8564

while.body379:                                    ; preds = %while.cond377
  %422 = load i8*, i8** %prefix351, align 8, !dbg !8565
  %incdec.ptr380 = getelementptr inbounds i8, i8* %422, i32 1, !dbg !8565
  store i8* %incdec.ptr380, i8** %prefix351, align 8, !dbg !8565
  %423 = load i8, i8* %422, align 1, !dbg !8567
  %424 = load i8*, i8** %uri, align 8, !dbg !8568
  %incdec.ptr381 = getelementptr inbounds i8, i8* %424, i32 1, !dbg !8568
  store i8* %incdec.ptr381, i8** %uri, align 8, !dbg !8568
  store i8 %423, i8* %424, align 1, !dbg !8569
  br label %while.cond377, !dbg !8570

while.end382:                                     ; preds = %while.cond377
  br label %if.end383, !dbg !8571

if.end383:                                        ; preds = %while.end382, %land.lhs.true373, %while.end368
  %425 = load i8*, i8** %uri, align 8, !dbg !8572
  store i8 0, i8* %425, align 1, !dbg !8573
  br label %if.end384, !dbg !8574

if.end384:                                        ; preds = %if.end383, %land.lhs.true356, %if.then349
  %426 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8575
  %m_endElementHandler385 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %426, i32 0, i32 12, !dbg !8575
  %427 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler385, align 8, !dbg !8575
  %428 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8576
  %m_handlerArg386 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %428, i32 0, i32 1, !dbg !8576
  %429 = load i8*, i8** %m_handlerArg386, align 8, !dbg !8576
  %430 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8577
  %name387 = getelementptr inbounds %struct.tag, %struct.tag* %430, i32 0, i32 3, !dbg !8578
  %str388 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name387, i32 0, i32 0, !dbg !8579
  %431 = load i8*, i8** %str388, align 8, !dbg !8579
  call void %427(i8* %429, i8* %431), !dbg !8575
  br label %if.end394, !dbg !8580

if.else389:                                       ; preds = %if.end345
  %432 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8581
  %m_defaultHandler390 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %432, i32 0, i32 18, !dbg !8581
  %433 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler390, align 8, !dbg !8581
  %tobool391 = icmp ne void (i8*, i8*, i32)* %433, null, !dbg !8581
  br i1 %tobool391, label %if.then392, label %if.end393, !dbg !8583

if.then392:                                       ; preds = %if.else389
  %434 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8584
  %435 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8585
  %436 = load i8*, i8** %s.addr, align 8, !dbg !8586
  %437 = load i8*, i8** %next, align 8, !dbg !8587
  call void @reportDefault(%struct.XML_ParserStruct* %434, %struct.encoding* %435, i8* %436, i8* %437), !dbg !8588
  br label %if.end393, !dbg !8588

if.end393:                                        ; preds = %if.then392, %if.else389
  br label %if.end394

if.end394:                                        ; preds = %if.end393, %if.end384
  br label %while.cond395, !dbg !8589

while.cond395:                                    ; preds = %if.end408, %if.end394
  %438 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8590
  %bindings396 = getelementptr inbounds %struct.tag, %struct.tag* %438, i32 0, i32 6, !dbg !8591
  %439 = load %struct.binding*, %struct.binding** %bindings396, align 8, !dbg !8591
  %tobool397 = icmp ne %struct.binding* %439, null, !dbg !8592
  br i1 %tobool397, label %while.body398, label %while.end418, !dbg !8592

while.body398:                                    ; preds = %while.cond395
  call void @llvm.dbg.declare(metadata %struct.binding** %b399, metadata !8593, metadata !1076), !dbg !8595
  %440 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8596
  %bindings400 = getelementptr inbounds %struct.tag, %struct.tag* %440, i32 0, i32 6, !dbg !8597
  %441 = load %struct.binding*, %struct.binding** %bindings400, align 8, !dbg !8597
  store %struct.binding* %441, %struct.binding** %b399, align 8, !dbg !8595
  %442 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8598
  %m_endNamespaceDeclHandler401 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %442, i32 0, i32 24, !dbg !8598
  %443 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler401, align 8, !dbg !8598
  %tobool402 = icmp ne void (i8*, i8*)* %443, null, !dbg !8598
  br i1 %tobool402, label %if.then403, label %if.end408, !dbg !8600

if.then403:                                       ; preds = %while.body398
  %444 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8601
  %m_endNamespaceDeclHandler404 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %444, i32 0, i32 24, !dbg !8601
  %445 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler404, align 8, !dbg !8601
  %446 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8602
  %m_handlerArg405 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %446, i32 0, i32 1, !dbg !8602
  %447 = load i8*, i8** %m_handlerArg405, align 8, !dbg !8602
  %448 = load %struct.binding*, %struct.binding** %b399, align 8, !dbg !8603
  %prefix406 = getelementptr inbounds %struct.binding, %struct.binding* %448, i32 0, i32 0, !dbg !8604
  %449 = load %struct.prefix*, %struct.prefix** %prefix406, align 8, !dbg !8604
  %name407 = getelementptr inbounds %struct.prefix, %struct.prefix* %449, i32 0, i32 0, !dbg !8605
  %450 = load i8*, i8** %name407, align 8, !dbg !8605
  call void %445(i8* %447, i8* %450), !dbg !8601
  br label %if.end408, !dbg !8601

if.end408:                                        ; preds = %if.then403, %while.body398
  %451 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8606
  %bindings409 = getelementptr inbounds %struct.tag, %struct.tag* %451, i32 0, i32 6, !dbg !8607
  %452 = load %struct.binding*, %struct.binding** %bindings409, align 8, !dbg !8607
  %nextTagBinding410 = getelementptr inbounds %struct.binding, %struct.binding* %452, i32 0, i32 1, !dbg !8608
  %453 = load %struct.binding*, %struct.binding** %nextTagBinding410, align 8, !dbg !8608
  %454 = load %struct.tag*, %struct.tag** %tag323, align 8, !dbg !8609
  %bindings411 = getelementptr inbounds %struct.tag, %struct.tag* %454, i32 0, i32 6, !dbg !8610
  store %struct.binding* %453, %struct.binding** %bindings411, align 8, !dbg !8611
  %455 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8612
  %m_freeBindingList412 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %455, i32 0, i32 70, !dbg !8612
  %456 = load %struct.binding*, %struct.binding** %m_freeBindingList412, align 8, !dbg !8612
  %457 = load %struct.binding*, %struct.binding** %b399, align 8, !dbg !8613
  %nextTagBinding413 = getelementptr inbounds %struct.binding, %struct.binding* %457, i32 0, i32 1, !dbg !8614
  store %struct.binding* %456, %struct.binding** %nextTagBinding413, align 8, !dbg !8615
  %458 = load %struct.binding*, %struct.binding** %b399, align 8, !dbg !8616
  %459 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8617
  %m_freeBindingList414 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %459, i32 0, i32 70, !dbg !8617
  store %struct.binding* %458, %struct.binding** %m_freeBindingList414, align 8, !dbg !8618
  %460 = load %struct.binding*, %struct.binding** %b399, align 8, !dbg !8619
  %prevPrefixBinding415 = getelementptr inbounds %struct.binding, %struct.binding* %460, i32 0, i32 2, !dbg !8620
  %461 = load %struct.binding*, %struct.binding** %prevPrefixBinding415, align 8, !dbg !8620
  %462 = load %struct.binding*, %struct.binding** %b399, align 8, !dbg !8621
  %prefix416 = getelementptr inbounds %struct.binding, %struct.binding* %462, i32 0, i32 0, !dbg !8622
  %463 = load %struct.prefix*, %struct.prefix** %prefix416, align 8, !dbg !8622
  %binding417 = getelementptr inbounds %struct.prefix, %struct.prefix* %463, i32 0, i32 1, !dbg !8623
  store %struct.binding* %461, %struct.binding** %binding417, align 8, !dbg !8624
  br label %while.cond395, !dbg !8625

while.end418:                                     ; preds = %while.cond395
  %464 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8627
  %m_tagLevel419 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %464, i32 0, i32 53, !dbg !8627
  %465 = load i32, i32* %m_tagLevel419, align 4, !dbg !8627
  %cmp420 = icmp eq i32 %465, 0, !dbg !8629
  br i1 %cmp420, label %if.then422, label %if.end424, !dbg !8630

if.then422:                                       ; preds = %while.end418
  %466 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8631
  %467 = load i8*, i8** %next, align 8, !dbg !8632
  %468 = load i8*, i8** %end.addr, align 8, !dbg !8633
  %469 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !8634
  %call423 = call i32 @epilogProcessor(%struct.XML_ParserStruct* %466, i8* %467, i8* %468, i8** %469), !dbg !8635
  store i32 %call423, i32* %retval, align 4, !dbg !8636
  br label %return, !dbg !8636

if.end424:                                        ; preds = %while.end418
  br label %if.end425

if.end425:                                        ; preds = %if.end424
  br label %sw.epilog, !dbg !8637

sw.bb426:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8638, metadata !1076), !dbg !8640
  %470 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8641
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %470, i32 0, i32 7, !dbg !8641
  %471 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8, !dbg !8641
  %472 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8641
  %473 = load i8*, i8** %s.addr, align 8, !dbg !8641
  %call427 = call i32 %471(%struct.encoding* %472, i8* %473), !dbg !8641
  store i32 %call427, i32* %n, align 4, !dbg !8640
  %474 = load i32, i32* %n, align 4, !dbg !8642
  %cmp428 = icmp slt i32 %474, 0, !dbg !8644
  br i1 %cmp428, label %if.then430, label %if.end431, !dbg !8645

if.then430:                                       ; preds = %sw.bb426
  store i32 14, i32* %retval, align 4, !dbg !8646
  br label %return, !dbg !8646

if.end431:                                        ; preds = %sw.bb426
  %475 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8647
  %m_characterDataHandler432 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %475, i32 0, i32 13, !dbg !8647
  %476 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler432, align 8, !dbg !8647
  %tobool433 = icmp ne void (i8*, i8*, i32)* %476, null, !dbg !8647
  br i1 %tobool433, label %if.then434, label %if.else440, !dbg !8649

if.then434:                                       ; preds = %if.end431
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf435, metadata !8650, metadata !1076), !dbg !8652
  %477 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8653
  %m_characterDataHandler436 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %477, i32 0, i32 13, !dbg !8653
  %478 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler436, align 8, !dbg !8653
  %479 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8654
  %m_handlerArg437 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %479, i32 0, i32 1, !dbg !8654
  %480 = load i8*, i8** %m_handlerArg437, align 8, !dbg !8654
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf435, i32 0, i32 0, !dbg !8655
  %481 = load i32, i32* %n, align 4, !dbg !8656
  %arraydecay438 = getelementptr inbounds [4 x i8], [4 x i8]* %buf435, i32 0, i32 0, !dbg !8657
  %call439 = call i32 @XmlUtf8Encode(i32 %481, i8* %arraydecay438), !dbg !8658
  call void %478(i8* %480, i8* %arraydecay, i32 %call439), !dbg !8659
  br label %if.end445, !dbg !8661

if.else440:                                       ; preds = %if.end431
  %482 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8662
  %m_defaultHandler441 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %482, i32 0, i32 18, !dbg !8662
  %483 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler441, align 8, !dbg !8662
  %tobool442 = icmp ne void (i8*, i8*, i32)* %483, null, !dbg !8662
  br i1 %tobool442, label %if.then443, label %if.end444, !dbg !8664

if.then443:                                       ; preds = %if.else440
  %484 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8665
  %485 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8666
  %486 = load i8*, i8** %s.addr, align 8, !dbg !8667
  %487 = load i8*, i8** %next, align 8, !dbg !8668
  call void @reportDefault(%struct.XML_ParserStruct* %484, %struct.encoding* %485, i8* %486, i8* %487), !dbg !8669
  br label %if.end444, !dbg !8669

if.end444:                                        ; preds = %if.then443, %if.else440
  br label %if.end445

if.end445:                                        ; preds = %if.end444, %if.then434
  br label %sw.epilog, !dbg !8670

sw.bb446:                                         ; preds = %for.cond
  store i32 17, i32* %retval, align 4, !dbg !8671
  br label %return, !dbg !8671

sw.bb447:                                         ; preds = %for.cond
  %488 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8672
  %m_characterDataHandler448 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %488, i32 0, i32 13, !dbg !8672
  %489 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler448, align 8, !dbg !8672
  %tobool449 = icmp ne void (i8*, i8*, i32)* %489, null, !dbg !8672
  br i1 %tobool449, label %if.then450, label %if.else454, !dbg !8674

if.then450:                                       ; preds = %sw.bb447
  call void @llvm.dbg.declare(metadata i8* %c451, metadata !8675, metadata !1076), !dbg !8677
  store i8 10, i8* %c451, align 1, !dbg !8677
  %490 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8678
  %m_characterDataHandler452 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %490, i32 0, i32 13, !dbg !8678
  %491 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler452, align 8, !dbg !8678
  %492 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8679
  %m_handlerArg453 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %492, i32 0, i32 1, !dbg !8679
  %493 = load i8*, i8** %m_handlerArg453, align 8, !dbg !8679
  call void %491(i8* %493, i8* %c451, i32 1), !dbg !8678
  br label %if.end459, !dbg !8680

if.else454:                                       ; preds = %sw.bb447
  %494 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8681
  %m_defaultHandler455 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %494, i32 0, i32 18, !dbg !8681
  %495 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler455, align 8, !dbg !8681
  %tobool456 = icmp ne void (i8*, i8*, i32)* %495, null, !dbg !8681
  br i1 %tobool456, label %if.then457, label %if.end458, !dbg !8683

if.then457:                                       ; preds = %if.else454
  %496 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8684
  %497 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8685
  %498 = load i8*, i8** %s.addr, align 8, !dbg !8686
  %499 = load i8*, i8** %next, align 8, !dbg !8687
  call void @reportDefault(%struct.XML_ParserStruct* %496, %struct.encoding* %497, i8* %498, i8* %499), !dbg !8688
  br label %if.end458, !dbg !8688

if.end458:                                        ; preds = %if.then457, %if.else454
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then450
  br label %sw.epilog, !dbg !8689

sw.bb460:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %result461, metadata !8690, metadata !1076), !dbg !8692
  %500 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8693
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %500, i32 0, i32 16, !dbg !8693
  %501 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler, align 8, !dbg !8693
  %tobool462 = icmp ne void (i8*)* %501, null, !dbg !8693
  br i1 %tobool462, label %if.then463, label %if.else466, !dbg !8695

if.then463:                                       ; preds = %sw.bb460
  %502 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8696
  %m_startCdataSectionHandler464 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %502, i32 0, i32 16, !dbg !8696
  %503 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler464, align 8, !dbg !8696
  %504 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8697
  %m_handlerArg465 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %504, i32 0, i32 1, !dbg !8697
  %505 = load i8*, i8** %m_handlerArg465, align 8, !dbg !8697
  call void %503(i8* %505), !dbg !8696
  br label %if.end471, !dbg !8696

if.else466:                                       ; preds = %sw.bb460
  %506 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8698
  %m_defaultHandler467 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %506, i32 0, i32 18, !dbg !8698
  %507 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler467, align 8, !dbg !8698
  %tobool468 = icmp ne void (i8*, i8*, i32)* %507, null, !dbg !8698
  br i1 %tobool468, label %if.then469, label %if.end470, !dbg !8700

if.then469:                                       ; preds = %if.else466
  %508 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8701
  %509 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8702
  %510 = load i8*, i8** %s.addr, align 8, !dbg !8703
  %511 = load i8*, i8** %next, align 8, !dbg !8704
  call void @reportDefault(%struct.XML_ParserStruct* %508, %struct.encoding* %509, i8* %510, i8* %511), !dbg !8705
  br label %if.end470, !dbg !8705

if.end470:                                        ; preds = %if.then469, %if.else466
  br label %if.end471

if.end471:                                        ; preds = %if.end470, %if.then463
  %512 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8706
  %513 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8707
  %514 = load i8*, i8** %end.addr, align 8, !dbg !8708
  %515 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !8709
  %516 = load i8, i8* %haveMore.addr, align 1, !dbg !8710
  %call472 = call i32 @doCdataSection(%struct.XML_ParserStruct* %512, %struct.encoding* %513, i8** %next, i8* %514, i8** %515, i8 zeroext %516), !dbg !8711
  store i32 %call472, i32* %result461, align 4, !dbg !8712
  %517 = load i32, i32* %result461, align 4, !dbg !8713
  %cmp473 = icmp ne i32 %517, 0, !dbg !8715
  br i1 %cmp473, label %if.then475, label %if.else476, !dbg !8716

if.then475:                                       ; preds = %if.end471
  %518 = load i32, i32* %result461, align 4, !dbg !8717
  store i32 %518, i32* %retval, align 4, !dbg !8718
  br label %return, !dbg !8718

if.else476:                                       ; preds = %if.end471
  %519 = load i8*, i8** %next, align 8, !dbg !8719
  %tobool477 = icmp ne i8* %519, null, !dbg !8719
  br i1 %tobool477, label %if.end479, label %if.then478, !dbg !8721

if.then478:                                       ; preds = %if.else476
  %520 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8722
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %520, i32 0, i32 45, !dbg !8722
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @cdataSectionProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !8724
  %521 = load i32, i32* %result461, align 4, !dbg !8725
  store i32 %521, i32* %retval, align 4, !dbg !8726
  br label %return, !dbg !8726

if.end479:                                        ; preds = %if.else476
  br label %if.end480

if.end480:                                        ; preds = %if.end479
  br label %sw.epilog, !dbg !8727

sw.bb481:                                         ; preds = %for.cond
  %522 = load i8, i8* %haveMore.addr, align 1, !dbg !8728
  %tobool482 = icmp ne i8 %522, 0, !dbg !8728
  br i1 %tobool482, label %if.then483, label %if.end484, !dbg !8730

if.then483:                                       ; preds = %sw.bb481
  %523 = load i8*, i8** %s.addr, align 8, !dbg !8731
  %524 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !8733
  store i8* %523, i8** %524, align 8, !dbg !8734
  store i32 0, i32* %retval, align 4, !dbg !8735
  br label %return, !dbg !8735

if.end484:                                        ; preds = %sw.bb481
  %525 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8736
  %m_characterDataHandler485 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %525, i32 0, i32 13, !dbg !8736
  %526 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler485, align 8, !dbg !8736
  %tobool486 = icmp ne void (i8*, i8*, i32)* %526, null, !dbg !8736
  br i1 %tobool486, label %if.then487, label %if.else508, !dbg !8738

if.then487:                                       ; preds = %if.end484
  %527 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8739
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %527, i32 0, i32 14, !dbg !8739
  %528 = load i8, i8* %isUtf8, align 4, !dbg !8739
  %tobool488 = icmp ne i8 %528, 0, !dbg !8739
  br i1 %tobool488, label %if.else500, label %if.then489, !dbg !8742

if.then489:                                       ; preds = %if.then487
  call void @llvm.dbg.declare(metadata i8** %dataPtr, metadata !8743, metadata !1076), !dbg !8745
  %529 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8746
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %529, i32 0, i32 9, !dbg !8746
  %530 = load i8*, i8** %m_dataBuf, align 8, !dbg !8746
  store i8* %530, i8** %dataPtr, align 8, !dbg !8745
  %531 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8747
  %utf8Convert490 = getelementptr inbounds %struct.encoding, %struct.encoding* %531, i32 0, i32 11, !dbg !8747
  %532 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert490, align 8, !dbg !8747
  %533 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8747
  %534 = load i8*, i8** %end.addr, align 8, !dbg !8747
  %535 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8747
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %535, i32 0, i32 10, !dbg !8747
  %536 = load i8*, i8** %m_dataBufEnd, align 8, !dbg !8747
  %call491 = call i32 %532(%struct.encoding* %533, i8** %s.addr, i8* %534, i8** %dataPtr, i8* %536), !dbg !8747
  %537 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8748
  %m_characterDataHandler492 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %537, i32 0, i32 13, !dbg !8748
  %538 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler492, align 8, !dbg !8748
  %539 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8749
  %m_handlerArg493 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %539, i32 0, i32 1, !dbg !8749
  %540 = load i8*, i8** %m_handlerArg493, align 8, !dbg !8749
  %541 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8750
  %m_dataBuf494 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %541, i32 0, i32 9, !dbg !8750
  %542 = load i8*, i8** %m_dataBuf494, align 8, !dbg !8750
  %543 = load i8*, i8** %dataPtr, align 8, !dbg !8751
  %544 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8752
  %m_dataBuf495 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %544, i32 0, i32 9, !dbg !8752
  %545 = load i8*, i8** %m_dataBuf495, align 8, !dbg !8752
  %sub.ptr.lhs.cast496 = ptrtoint i8* %543 to i64, !dbg !8753
  %sub.ptr.rhs.cast497 = ptrtoint i8* %545 to i64, !dbg !8753
  %sub.ptr.sub498 = sub i64 %sub.ptr.lhs.cast496, %sub.ptr.rhs.cast497, !dbg !8753
  %conv499 = trunc i64 %sub.ptr.sub498 to i32, !dbg !8754
  call void %538(i8* %540, i8* %542, i32 %conv499), !dbg !8748
  br label %if.end507, !dbg !8755

if.else500:                                       ; preds = %if.then487
  %546 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8756
  %m_characterDataHandler501 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %546, i32 0, i32 13, !dbg !8756
  %547 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler501, align 8, !dbg !8756
  %548 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8757
  %m_handlerArg502 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %548, i32 0, i32 1, !dbg !8757
  %549 = load i8*, i8** %m_handlerArg502, align 8, !dbg !8757
  %550 = load i8*, i8** %s.addr, align 8, !dbg !8758
  %551 = load i8*, i8** %end.addr, align 8, !dbg !8759
  %552 = load i8*, i8** %s.addr, align 8, !dbg !8760
  %sub.ptr.lhs.cast503 = ptrtoint i8* %551 to i64, !dbg !8761
  %sub.ptr.rhs.cast504 = ptrtoint i8* %552 to i64, !dbg !8761
  %sub.ptr.sub505 = sub i64 %sub.ptr.lhs.cast503, %sub.ptr.rhs.cast504, !dbg !8761
  %conv506 = trunc i64 %sub.ptr.sub505 to i32, !dbg !8762
  call void %547(i8* %549, i8* %550, i32 %conv506), !dbg !8756
  br label %if.end507

if.end507:                                        ; preds = %if.else500, %if.then489
  br label %if.end513, !dbg !8763

if.else508:                                       ; preds = %if.end484
  %553 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8764
  %m_defaultHandler509 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %553, i32 0, i32 18, !dbg !8764
  %554 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler509, align 8, !dbg !8764
  %tobool510 = icmp ne void (i8*, i8*, i32)* %554, null, !dbg !8764
  br i1 %tobool510, label %if.then511, label %if.end512, !dbg !8766

if.then511:                                       ; preds = %if.else508
  %555 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8767
  %556 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8768
  %557 = load i8*, i8** %s.addr, align 8, !dbg !8769
  %558 = load i8*, i8** %end.addr, align 8, !dbg !8770
  call void @reportDefault(%struct.XML_ParserStruct* %555, %struct.encoding* %556, i8* %557, i8* %558), !dbg !8771
  br label %if.end512, !dbg !8771

if.end512:                                        ; preds = %if.then511, %if.else508
  br label %if.end513

if.end513:                                        ; preds = %if.end512, %if.end507
  %559 = load i32, i32* %startTagLevel.addr, align 4, !dbg !8772
  %cmp514 = icmp eq i32 %559, 0, !dbg !8774
  br i1 %cmp514, label %if.then516, label %if.end517, !dbg !8775

if.then516:                                       ; preds = %if.end513
  %560 = load i8*, i8** %end.addr, align 8, !dbg !8776
  %561 = load i8**, i8*** %eventPP, align 8, !dbg !8778
  store i8* %560, i8** %561, align 8, !dbg !8779
  store i32 3, i32* %retval, align 4, !dbg !8780
  br label %return, !dbg !8780

if.end517:                                        ; preds = %if.end513
  %562 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8781
  %m_tagLevel518 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %562, i32 0, i32 53, !dbg !8781
  %563 = load i32, i32* %m_tagLevel518, align 4, !dbg !8781
  %564 = load i32, i32* %startTagLevel.addr, align 4, !dbg !8783
  %cmp519 = icmp ne i32 %563, %564, !dbg !8784
  br i1 %cmp519, label %if.then521, label %if.end522, !dbg !8785

if.then521:                                       ; preds = %if.end517
  %565 = load i8*, i8** %end.addr, align 8, !dbg !8786
  %566 = load i8**, i8*** %eventPP, align 8, !dbg !8788
  store i8* %565, i8** %566, align 8, !dbg !8789
  store i32 13, i32* %retval, align 4, !dbg !8790
  br label %return, !dbg !8790

if.end522:                                        ; preds = %if.end517
  %567 = load i8*, i8** %end.addr, align 8, !dbg !8791
  %568 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !8792
  store i8* %567, i8** %568, align 8, !dbg !8793
  store i32 0, i32* %retval, align 4, !dbg !8794
  br label %return, !dbg !8794

sw.bb523:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %charDataHandler, metadata !8795, metadata !1076), !dbg !8797
  %569 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8798
  %m_characterDataHandler524 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %569, i32 0, i32 13, !dbg !8798
  %570 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler524, align 8, !dbg !8798
  store void (i8*, i8*, i32)* %570, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !8797
  %571 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !8799
  %tobool525 = icmp ne void (i8*, i8*, i32)* %571, null, !dbg !8799
  br i1 %tobool525, label %if.then526, label %if.else559, !dbg !8801

if.then526:                                       ; preds = %sw.bb523
  %572 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8802
  %isUtf8527 = getelementptr inbounds %struct.encoding, %struct.encoding* %572, i32 0, i32 14, !dbg !8802
  %573 = load i8, i8* %isUtf8527, align 4, !dbg !8802
  %tobool528 = icmp ne i8 %573, 0, !dbg !8802
  br i1 %tobool528, label %if.else552, label %if.then529, !dbg !8805

if.then529:                                       ; preds = %if.then526
  br label %for.cond530, !dbg !8806

for.cond530:                                      ; preds = %if.end550, %if.then529
  call void @llvm.dbg.declare(metadata i8** %dataPtr531, metadata !8808, metadata !1076), !dbg !8812
  %574 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8813
  %m_dataBuf532 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %574, i32 0, i32 9, !dbg !8813
  %575 = load i8*, i8** %m_dataBuf532, align 8, !dbg !8813
  store i8* %575, i8** %dataPtr531, align 8, !dbg !8812
  call void @llvm.dbg.declare(metadata i32* %convert_res533, metadata !8814, metadata !1076), !dbg !8815
  %576 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8816
  %utf8Convert534 = getelementptr inbounds %struct.encoding, %struct.encoding* %576, i32 0, i32 11, !dbg !8816
  %577 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert534, align 8, !dbg !8816
  %578 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8816
  %579 = load i8*, i8** %next, align 8, !dbg !8816
  %580 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8816
  %m_dataBufEnd535 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %580, i32 0, i32 10, !dbg !8816
  %581 = load i8*, i8** %m_dataBufEnd535, align 8, !dbg !8816
  %call536 = call i32 %577(%struct.encoding* %578, i8** %s.addr, i8* %579, i8** %dataPtr531, i8* %581), !dbg !8816
  store i32 %call536, i32* %convert_res533, align 4, !dbg !8815
  %582 = load i8*, i8** %s.addr, align 8, !dbg !8817
  %583 = load i8**, i8*** %eventEndPP, align 8, !dbg !8818
  store i8* %582, i8** %583, align 8, !dbg !8819
  %584 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !8820
  %585 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8821
  %m_handlerArg537 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %585, i32 0, i32 1, !dbg !8821
  %586 = load i8*, i8** %m_handlerArg537, align 8, !dbg !8821
  %587 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8822
  %m_dataBuf538 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %587, i32 0, i32 9, !dbg !8822
  %588 = load i8*, i8** %m_dataBuf538, align 8, !dbg !8822
  %589 = load i8*, i8** %dataPtr531, align 8, !dbg !8823
  %590 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8824
  %m_dataBuf539 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %590, i32 0, i32 9, !dbg !8824
  %591 = load i8*, i8** %m_dataBuf539, align 8, !dbg !8824
  %sub.ptr.lhs.cast540 = ptrtoint i8* %589 to i64, !dbg !8825
  %sub.ptr.rhs.cast541 = ptrtoint i8* %591 to i64, !dbg !8825
  %sub.ptr.sub542 = sub i64 %sub.ptr.lhs.cast540, %sub.ptr.rhs.cast541, !dbg !8825
  %conv543 = trunc i64 %sub.ptr.sub542 to i32, !dbg !8826
  call void %584(i8* %586, i8* %588, i32 %conv543), !dbg !8820
  %592 = load i32, i32* %convert_res533, align 4, !dbg !8827
  %cmp544 = icmp eq i32 %592, 0, !dbg !8829
  br i1 %cmp544, label %if.then549, label %lor.lhs.false546, !dbg !8830

lor.lhs.false546:                                 ; preds = %for.cond530
  %593 = load i32, i32* %convert_res533, align 4, !dbg !8831
  %cmp547 = icmp eq i32 %593, 1, !dbg !8833
  br i1 %cmp547, label %if.then549, label %if.end550, !dbg !8834

if.then549:                                       ; preds = %lor.lhs.false546, %for.cond530
  br label %for.end551, !dbg !8835

if.end550:                                        ; preds = %lor.lhs.false546
  %594 = load i8*, i8** %s.addr, align 8, !dbg !8836
  %595 = load i8**, i8*** %eventPP, align 8, !dbg !8837
  store i8* %594, i8** %595, align 8, !dbg !8838
  br label %for.cond530, !dbg !8839

for.end551:                                       ; preds = %if.then549
  br label %if.end558, !dbg !8841

if.else552:                                       ; preds = %if.then526
  %596 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !8842
  %597 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8843
  %m_handlerArg553 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %597, i32 0, i32 1, !dbg !8843
  %598 = load i8*, i8** %m_handlerArg553, align 8, !dbg !8843
  %599 = load i8*, i8** %s.addr, align 8, !dbg !8844
  %600 = load i8*, i8** %next, align 8, !dbg !8845
  %601 = load i8*, i8** %s.addr, align 8, !dbg !8846
  %sub.ptr.lhs.cast554 = ptrtoint i8* %600 to i64, !dbg !8847
  %sub.ptr.rhs.cast555 = ptrtoint i8* %601 to i64, !dbg !8847
  %sub.ptr.sub556 = sub i64 %sub.ptr.lhs.cast554, %sub.ptr.rhs.cast555, !dbg !8847
  %conv557 = trunc i64 %sub.ptr.sub556 to i32, !dbg !8848
  call void %596(i8* %598, i8* %599, i32 %conv557), !dbg !8842
  br label %if.end558

if.end558:                                        ; preds = %if.else552, %for.end551
  br label %if.end564, !dbg !8849

if.else559:                                       ; preds = %sw.bb523
  %602 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8850
  %m_defaultHandler560 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %602, i32 0, i32 18, !dbg !8850
  %603 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler560, align 8, !dbg !8850
  %tobool561 = icmp ne void (i8*, i8*, i32)* %603, null, !dbg !8850
  br i1 %tobool561, label %if.then562, label %if.end563, !dbg !8852

if.then562:                                       ; preds = %if.else559
  %604 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8853
  %605 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8854
  %606 = load i8*, i8** %s.addr, align 8, !dbg !8855
  %607 = load i8*, i8** %next, align 8, !dbg !8856
  call void @reportDefault(%struct.XML_ParserStruct* %604, %struct.encoding* %605, i8* %606, i8* %607), !dbg !8857
  br label %if.end563, !dbg !8857

if.end563:                                        ; preds = %if.then562, %if.else559
  br label %if.end564

if.end564:                                        ; preds = %if.end563, %if.end558
  br label %sw.epilog, !dbg !8858

sw.bb565:                                         ; preds = %for.cond
  %608 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8859
  %609 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8861
  %610 = load i8*, i8** %s.addr, align 8, !dbg !8862
  %611 = load i8*, i8** %next, align 8, !dbg !8863
  %call566 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %608, %struct.encoding* %609, i8* %610, i8* %611), !dbg !8864
  %tobool567 = icmp ne i32 %call566, 0, !dbg !8864
  br i1 %tobool567, label %if.end569, label %if.then568, !dbg !8865

if.then568:                                       ; preds = %sw.bb565
  store i32 1, i32* %retval, align 4, !dbg !8866
  br label %return, !dbg !8866

if.end569:                                        ; preds = %sw.bb565
  br label %sw.epilog, !dbg !8867

sw.bb570:                                         ; preds = %for.cond
  %612 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8868
  %613 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8870
  %614 = load i8*, i8** %s.addr, align 8, !dbg !8871
  %615 = load i8*, i8** %next, align 8, !dbg !8872
  %call571 = call i32 @reportComment(%struct.XML_ParserStruct* %612, %struct.encoding* %613, i8* %614, i8* %615), !dbg !8873
  %tobool572 = icmp ne i32 %call571, 0, !dbg !8873
  br i1 %tobool572, label %if.end574, label %if.then573, !dbg !8874

if.then573:                                       ; preds = %sw.bb570
  store i32 1, i32* %retval, align 4, !dbg !8875
  br label %return, !dbg !8875

if.end574:                                        ; preds = %sw.bb570
  br label %sw.epilog, !dbg !8876

sw.default:                                       ; preds = %for.cond
  %616 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8877
  %m_defaultHandler575 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %616, i32 0, i32 18, !dbg !8877
  %617 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler575, align 8, !dbg !8877
  %tobool576 = icmp ne void (i8*, i8*, i32)* %617, null, !dbg !8877
  br i1 %tobool576, label %if.then577, label %if.end578, !dbg !8879

if.then577:                                       ; preds = %sw.default
  %618 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8880
  %619 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !8881
  %620 = load i8*, i8** %s.addr, align 8, !dbg !8882
  %621 = load i8*, i8** %next, align 8, !dbg !8883
  call void @reportDefault(%struct.XML_ParserStruct* %618, %struct.encoding* %619, i8* %620, i8* %621), !dbg !8884
  br label %if.end578, !dbg !8884

if.end578:                                        ; preds = %if.then577, %sw.default
  br label %sw.epilog, !dbg !8885

sw.epilog:                                        ; preds = %if.end578, %if.end574, %if.end569, %if.end564, %if.end480, %if.end459, %if.end445, %if.end425, %if.end315, %if.end241, %if.end148, %if.end118, %if.end94, %if.end55
  %622 = load i8*, i8** %next, align 8, !dbg !8886
  store i8* %622, i8** %s.addr, align 8, !dbg !8887
  %623 = load i8**, i8*** %eventPP, align 8, !dbg !8888
  store i8* %622, i8** %623, align 8, !dbg !8889
  %624 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8890
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %624, i32 0, i32 85, !dbg !8890
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !8890
  %625 = load i32, i32* %parsing, align 8, !dbg !8890
  switch i32 %625, label %sw.default581 [
    i32 3, label %sw.bb579
    i32 2, label %sw.bb580
  ], !dbg !8891

sw.bb579:                                         ; preds = %sw.epilog
  %626 = load i8*, i8** %next, align 8, !dbg !8892
  %627 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !8894
  store i8* %626, i8** %627, align 8, !dbg !8895
  store i32 0, i32* %retval, align 4, !dbg !8896
  br label %return, !dbg !8896

sw.bb580:                                         ; preds = %sw.epilog
  store i32 35, i32* %retval, align 4, !dbg !8897
  br label %return, !dbg !8897

sw.default581:                                    ; preds = %sw.epilog
  br label %sw.epilog582, !dbg !8898

sw.epilog582:                                     ; preds = %sw.default581
  br label %for.cond, !dbg !8899

return:                                           ; preds = %sw.bb580, %sw.bb579, %if.then573, %if.then568, %if.end522, %if.then521, %if.then516, %if.then483, %if.then478, %if.then475, %sw.bb446, %if.then430, %if.then422, %if.then344, %if.then320, %if.then313, %if.then268, %if.then260, %if.then228, %if.then214, %if.then166, %if.then159, %if.then137, %if.then132, %if.then123, %if.then101, %if.then98, %if.then79, %if.then76, %if.then66, %if.end37, %if.then36, %if.end33, %if.then32, %sw.bb29, %if.end28, %if.end27, %if.then26, %if.then20, %if.end17, %if.then16, %if.then13, %if.then2
  %628 = load i32, i32* %retval, align 4, !dbg !8901
  ret i32 %628, !dbg !8901
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %parser) #0 !dbg !928 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %tag = alloca %struct.tag*, align 8
  %bufSize = alloca i32, align 4
  %nameLen = alloca i32, align 4
  %rawNameBuf = alloca i8*, align 8
  %temp = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !8902, metadata !1076), !dbg !8903
  call void @llvm.dbg.declare(metadata %struct.tag** %tag, metadata !8904, metadata !1076), !dbg !8905
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8906
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 67, !dbg !8906
  %1 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !8906
  store %struct.tag* %1, %struct.tag** %tag, align 8, !dbg !8905
  br label %while.cond, !dbg !8907

while.cond:                                       ; preds = %if.end46, %entry
  %2 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8908
  %tobool = icmp ne %struct.tag* %2, null, !dbg !8910
  br i1 %tobool, label %while.body, label %while.end, !dbg !8910

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %bufSize, metadata !8911, metadata !1076), !dbg !8913
  call void @llvm.dbg.declare(metadata i32* %nameLen, metadata !8914, metadata !1076), !dbg !8915
  %3 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8916
  %name = getelementptr inbounds %struct.tag, %struct.tag* %3, i32 0, i32 3, !dbg !8917
  %strLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name, i32 0, i32 3, !dbg !8918
  %4 = load i32, i32* %strLen, align 8, !dbg !8918
  %add = add nsw i32 %4, 1, !dbg !8919
  %conv = sext i32 %add to i64, !dbg !8920
  %mul = mul i64 1, %conv, !dbg !8921
  %conv1 = trunc i64 %mul to i32, !dbg !8922
  store i32 %conv1, i32* %nameLen, align 4, !dbg !8915
  call void @llvm.dbg.declare(metadata i8** %rawNameBuf, metadata !8923, metadata !1076), !dbg !8924
  %5 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8925
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %5, i32 0, i32 4, !dbg !8926
  %6 = load i8*, i8** %buf, align 8, !dbg !8926
  %7 = load i32, i32* %nameLen, align 4, !dbg !8927
  %idx.ext = sext i32 %7 to i64, !dbg !8928
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !8928
  store i8* %add.ptr, i8** %rawNameBuf, align 8, !dbg !8924
  %8 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8929
  %rawName = getelementptr inbounds %struct.tag, %struct.tag* %8, i32 0, i32 1, !dbg !8931
  %9 = load i8*, i8** %rawName, align 8, !dbg !8931
  %10 = load i8*, i8** %rawNameBuf, align 8, !dbg !8932
  %cmp = icmp eq i8* %9, %10, !dbg !8933
  br i1 %cmp, label %if.then, label %if.end, !dbg !8934

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !8935

if.end:                                           ; preds = %while.body
  %11 = load i32, i32* %nameLen, align 4, !dbg !8936
  %conv3 = sext i32 %11 to i64, !dbg !8936
  %12 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8937
  %rawNameLength = getelementptr inbounds %struct.tag, %struct.tag* %12, i32 0, i32 2, !dbg !8937
  %13 = load i32, i32* %rawNameLength, align 8, !dbg !8937
  %conv4 = sext i32 %13 to i64, !dbg !8937
  %add5 = add i64 %conv4, 0, !dbg !8937
  %add6 = add i64 %conv3, %add5, !dbg !8938
  %conv7 = trunc i64 %add6 to i32, !dbg !8936
  store i32 %conv7, i32* %bufSize, align 4, !dbg !8939
  %14 = load i32, i32* %bufSize, align 4, !dbg !8940
  %conv8 = sext i32 %14 to i64, !dbg !8940
  %15 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8942
  %bufEnd = getelementptr inbounds %struct.tag, %struct.tag* %15, i32 0, i32 5, !dbg !8943
  %16 = load i8*, i8** %bufEnd, align 8, !dbg !8943
  %17 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8944
  %buf9 = getelementptr inbounds %struct.tag, %struct.tag* %17, i32 0, i32 4, !dbg !8945
  %18 = load i8*, i8** %buf9, align 8, !dbg !8945
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !8946
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !8946
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8946
  %cmp10 = icmp sgt i64 %conv8, %sub.ptr.sub, !dbg !8947
  br i1 %cmp10, label %if.then12, label %if.end46, !dbg !8948

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !8949, metadata !1076), !dbg !8951
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !8952
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 3, !dbg !8952
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !8952
  %20 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !8952
  %21 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8952
  %buf13 = getelementptr inbounds %struct.tag, %struct.tag* %21, i32 0, i32 4, !dbg !8952
  %22 = load i8*, i8** %buf13, align 8, !dbg !8952
  %23 = load i32, i32* %bufSize, align 4, !dbg !8952
  %conv14 = sext i32 %23 to i64, !dbg !8952
  %call = call i8* %20(i8* %22, i64 %conv14), !dbg !8952
  store i8* %call, i8** %temp, align 8, !dbg !8951
  %24 = load i8*, i8** %temp, align 8, !dbg !8953
  %cmp15 = icmp eq i8* %24, null, !dbg !8955
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8956

if.then17:                                        ; preds = %if.then12
  store i8 0, i8* %retval, align 1, !dbg !8957
  br label %return, !dbg !8957

if.end18:                                         ; preds = %if.then12
  %25 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8958
  %name19 = getelementptr inbounds %struct.tag, %struct.tag* %25, i32 0, i32 3, !dbg !8960
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name19, i32 0, i32 0, !dbg !8961
  %26 = load i8*, i8** %str, align 8, !dbg !8961
  %27 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8962
  %buf20 = getelementptr inbounds %struct.tag, %struct.tag* %27, i32 0, i32 4, !dbg !8963
  %28 = load i8*, i8** %buf20, align 8, !dbg !8963
  %cmp21 = icmp eq i8* %26, %28, !dbg !8964
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !8965

if.then23:                                        ; preds = %if.end18
  %29 = load i8*, i8** %temp, align 8, !dbg !8966
  %30 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8967
  %name24 = getelementptr inbounds %struct.tag, %struct.tag* %30, i32 0, i32 3, !dbg !8968
  %str25 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name24, i32 0, i32 0, !dbg !8969
  store i8* %29, i8** %str25, align 8, !dbg !8970
  br label %if.end26, !dbg !8967

if.end26:                                         ; preds = %if.then23, %if.end18
  %31 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8971
  %name27 = getelementptr inbounds %struct.tag, %struct.tag* %31, i32 0, i32 3, !dbg !8973
  %localPart = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name27, i32 0, i32 1, !dbg !8974
  %32 = load i8*, i8** %localPart, align 8, !dbg !8974
  %tobool28 = icmp ne i8* %32, null, !dbg !8971
  br i1 %tobool28, label %if.then29, label %if.end39, !dbg !8975

if.then29:                                        ; preds = %if.end26
  %33 = load i8*, i8** %temp, align 8, !dbg !8976
  %34 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8977
  %name30 = getelementptr inbounds %struct.tag, %struct.tag* %34, i32 0, i32 3, !dbg !8978
  %localPart31 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name30, i32 0, i32 1, !dbg !8979
  %35 = load i8*, i8** %localPart31, align 8, !dbg !8979
  %36 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8980
  %buf32 = getelementptr inbounds %struct.tag, %struct.tag* %36, i32 0, i32 4, !dbg !8981
  %37 = load i8*, i8** %buf32, align 8, !dbg !8981
  %sub.ptr.lhs.cast33 = ptrtoint i8* %35 to i64, !dbg !8982
  %sub.ptr.rhs.cast34 = ptrtoint i8* %37 to i64, !dbg !8982
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !8982
  %add.ptr36 = getelementptr inbounds i8, i8* %33, i64 %sub.ptr.sub35, !dbg !8983
  %38 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8984
  %name37 = getelementptr inbounds %struct.tag, %struct.tag* %38, i32 0, i32 3, !dbg !8985
  %localPart38 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name37, i32 0, i32 1, !dbg !8986
  store i8* %add.ptr36, i8** %localPart38, align 8, !dbg !8987
  br label %if.end39, !dbg !8984

if.end39:                                         ; preds = %if.then29, %if.end26
  %39 = load i8*, i8** %temp, align 8, !dbg !8988
  %40 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8989
  %buf40 = getelementptr inbounds %struct.tag, %struct.tag* %40, i32 0, i32 4, !dbg !8990
  store i8* %39, i8** %buf40, align 8, !dbg !8991
  %41 = load i8*, i8** %temp, align 8, !dbg !8992
  %42 = load i32, i32* %bufSize, align 4, !dbg !8993
  %idx.ext41 = sext i32 %42 to i64, !dbg !8994
  %add.ptr42 = getelementptr inbounds i8, i8* %41, i64 %idx.ext41, !dbg !8994
  %43 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !8995
  %bufEnd43 = getelementptr inbounds %struct.tag, %struct.tag* %43, i32 0, i32 5, !dbg !8996
  store i8* %add.ptr42, i8** %bufEnd43, align 8, !dbg !8997
  %44 = load i8*, i8** %temp, align 8, !dbg !8998
  %45 = load i32, i32* %nameLen, align 4, !dbg !8999
  %idx.ext44 = sext i32 %45 to i64, !dbg !9000
  %add.ptr45 = getelementptr inbounds i8, i8* %44, i64 %idx.ext44, !dbg !9000
  store i8* %add.ptr45, i8** %rawNameBuf, align 8, !dbg !9001
  br label %if.end46, !dbg !9002

if.end46:                                         ; preds = %if.end39, %if.end
  %46 = load i8*, i8** %rawNameBuf, align 8, !dbg !9003
  %47 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !9004
  %rawName47 = getelementptr inbounds %struct.tag, %struct.tag* %47, i32 0, i32 1, !dbg !9005
  %48 = load i8*, i8** %rawName47, align 8, !dbg !9005
  %49 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !9006
  %rawNameLength48 = getelementptr inbounds %struct.tag, %struct.tag* %49, i32 0, i32 2, !dbg !9007
  %50 = load i32, i32* %rawNameLength48, align 8, !dbg !9007
  %conv49 = sext i32 %50 to i64, !dbg !9006
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %48, i64 %conv49, i32 1, i1 false), !dbg !9008
  %51 = load i8*, i8** %rawNameBuf, align 8, !dbg !9009
  %52 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !9010
  %rawName50 = getelementptr inbounds %struct.tag, %struct.tag* %52, i32 0, i32 1, !dbg !9011
  store i8* %51, i8** %rawName50, align 8, !dbg !9012
  %53 = load %struct.tag*, %struct.tag** %tag, align 8, !dbg !9013
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %53, i32 0, i32 0, !dbg !9014
  %54 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !9014
  store %struct.tag* %54, %struct.tag** %tag, align 8, !dbg !9015
  br label %while.cond, !dbg !9016

while.end:                                        ; preds = %if.then, %while.cond
  store i8 1, i8* %retval, align 1, !dbg !9018
  br label %return, !dbg !9018

return:                                           ; preds = %while.end, %if.then17
  %55 = load i8, i8* %retval, align 1, !dbg !9019
  ret i8 %55, !dbg !9019
}

; Function Attrs: nounwind uwtable
define internal i32 @processInternalEntity(%struct.XML_ParserStruct* %parser, %struct.ENTITY* %entity, i8 zeroext %betweenDecl) #0 !dbg !892 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %entity.addr = alloca %struct.ENTITY*, align 8
  %betweenDecl.addr = alloca i8, align 1
  %textStart = alloca i8*, align 8
  %textEnd = alloca i8*, align 8
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !9020, metadata !1076), !dbg !9021
  store %struct.ENTITY* %entity, %struct.ENTITY** %entity.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity.addr, metadata !9022, metadata !1076), !dbg !9023
  store i8 %betweenDecl, i8* %betweenDecl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %betweenDecl.addr, metadata !9024, metadata !1076), !dbg !9025
  call void @llvm.dbg.declare(metadata i8** %textStart, metadata !9026, metadata !1076), !dbg !9027
  call void @llvm.dbg.declare(metadata i8** %textEnd, metadata !9028, metadata !1076), !dbg !9029
  call void @llvm.dbg.declare(metadata i8** %next, metadata !9030, metadata !1076), !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9032, metadata !1076), !dbg !9033
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !9034, metadata !1076), !dbg !9035
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9036
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 51, !dbg !9036
  %1 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !9036
  %tobool = icmp ne %struct.open_internal_entity* %1, null, !dbg !9036
  br i1 %tobool, label %if.then, label %if.else, !dbg !9038

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9039
  %m_freeInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 51, !dbg !9039
  %3 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities1, align 8, !dbg !9039
  store %struct.open_internal_entity* %3, %struct.open_internal_entity** %openEntity, align 8, !dbg !9041
  %4 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9042
  %next2 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %4, i32 0, i32 2, !dbg !9043
  %5 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next2, align 8, !dbg !9043
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9044
  %m_freeInternalEntities3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 51, !dbg !9044
  store %struct.open_internal_entity* %5, %struct.open_internal_entity** %m_freeInternalEntities3, align 8, !dbg !9045
  br label %if.end6, !dbg !9046

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9047
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 3, !dbg !9047
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0, !dbg !9047
  %8 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !9047
  %call = call i8* %8(i64 40), !dbg !9047
  %9 = bitcast i8* %call to %struct.open_internal_entity*, !dbg !9049
  store %struct.open_internal_entity* %9, %struct.open_internal_entity** %openEntity, align 8, !dbg !9050
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9051
  %tobool4 = icmp ne %struct.open_internal_entity* %10, null, !dbg !9051
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !9053

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !9054
  br label %return, !dbg !9054

if.end:                                           ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %11 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9055
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %11, i32 0, i32 8, !dbg !9056
  store i8 1, i8* %open, align 8, !dbg !9057
  %12 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9058
  %processed = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %12, i32 0, i32 3, !dbg !9059
  store i32 0, i32* %processed, align 4, !dbg !9060
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9061
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 50, !dbg !9061
  %14 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !9061
  %15 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9062
  %next7 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %15, i32 0, i32 2, !dbg !9063
  store %struct.open_internal_entity* %14, %struct.open_internal_entity** %next7, align 8, !dbg !9064
  %16 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9065
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9066
  %m_openInternalEntities8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 50, !dbg !9066
  store %struct.open_internal_entity* %16, %struct.open_internal_entity** %m_openInternalEntities8, align 8, !dbg !9067
  %18 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9068
  %19 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9069
  %entity9 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %19, i32 0, i32 3, !dbg !9070
  store %struct.ENTITY* %18, %struct.ENTITY** %entity9, align 8, !dbg !9071
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9072
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 53, !dbg !9072
  %21 = load i32, i32* %m_tagLevel, align 4, !dbg !9072
  %22 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9073
  %startTagLevel = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %22, i32 0, i32 4, !dbg !9074
  store i32 %21, i32* %startTagLevel, align 8, !dbg !9075
  %23 = load i8, i8* %betweenDecl.addr, align 1, !dbg !9076
  %24 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9077
  %betweenDecl10 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %24, i32 0, i32 5, !dbg !9078
  store i8 %23, i8* %betweenDecl10, align 4, !dbg !9079
  %25 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9080
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %25, i32 0, i32 0, !dbg !9081
  store i8* null, i8** %internalEventPtr, align 8, !dbg !9082
  %26 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9083
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %26, i32 0, i32 1, !dbg !9084
  store i8* null, i8** %internalEventEndPtr, align 8, !dbg !9085
  %27 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9086
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %27, i32 0, i32 1, !dbg !9087
  %28 = load i8*, i8** %textPtr, align 8, !dbg !9087
  store i8* %28, i8** %textStart, align 8, !dbg !9088
  %29 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9089
  %textPtr11 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %29, i32 0, i32 1, !dbg !9090
  %30 = load i8*, i8** %textPtr11, align 8, !dbg !9090
  %31 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9091
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %31, i32 0, i32 2, !dbg !9092
  %32 = load i32, i32* %textLen, align 8, !dbg !9092
  %idx.ext = sext i32 %32 to i64, !dbg !9093
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !9093
  store i8* %add.ptr, i8** %textEnd, align 8, !dbg !9094
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9095
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9096
  %m_tagLevel12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 53, !dbg !9096
  %35 = load i32, i32* %m_tagLevel12, align 4, !dbg !9096
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9097
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 36, !dbg !9097
  %37 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !9097
  %38 = load i8*, i8** %textStart, align 8, !dbg !9098
  %39 = load i8*, i8** %textEnd, align 8, !dbg !9099
  %call13 = call i32 @doContent(%struct.XML_ParserStruct* %33, i32 %35, %struct.encoding* %37, i8* %38, i8* %39, i8** %next, i8 zeroext 0), !dbg !9100
  store i32 %call13, i32* %result, align 4, !dbg !9101
  %40 = load i32, i32* %result, align 4, !dbg !9102
  %cmp = icmp eq i32 %40, 0, !dbg !9104
  br i1 %cmp, label %if.then14, label %if.end27, !dbg !9105

if.then14:                                        ; preds = %if.end6
  %41 = load i8*, i8** %textEnd, align 8, !dbg !9106
  %42 = load i8*, i8** %next, align 8, !dbg !9109
  %cmp15 = icmp ne i8* %41, %42, !dbg !9110
  br i1 %cmp15, label %land.lhs.true, label %if.else19, !dbg !9111

land.lhs.true:                                    ; preds = %if.then14
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9112
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 85, !dbg !9112
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !9112
  %44 = load i32, i32* %parsing, align 8, !dbg !9112
  %cmp16 = icmp eq i32 %44, 3, !dbg !9114
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !9115

if.then17:                                        ; preds = %land.lhs.true
  %45 = load i8*, i8** %next, align 8, !dbg !9116
  %46 = load i8*, i8** %textStart, align 8, !dbg !9118
  %sub.ptr.lhs.cast = ptrtoint i8* %45 to i64, !dbg !9119
  %sub.ptr.rhs.cast = ptrtoint i8* %46 to i64, !dbg !9119
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9119
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !9120
  %47 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9121
  %processed18 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %47, i32 0, i32 3, !dbg !9122
  store i32 %conv, i32* %processed18, align 4, !dbg !9123
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9124
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 45, !dbg !9124
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @internalEntityProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !9125
  br label %if.end26, !dbg !9126

if.else19:                                        ; preds = %land.lhs.true, %if.then14
  %49 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8, !dbg !9127
  %open20 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %49, i32 0, i32 8, !dbg !9129
  store i8 0, i8* %open20, align 8, !dbg !9130
  %50 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9131
  %next21 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %50, i32 0, i32 2, !dbg !9132
  %51 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next21, align 8, !dbg !9132
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9133
  %m_openInternalEntities22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 50, !dbg !9133
  store %struct.open_internal_entity* %51, %struct.open_internal_entity** %m_openInternalEntities22, align 8, !dbg !9134
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9135
  %m_freeInternalEntities23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 51, !dbg !9135
  %54 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities23, align 8, !dbg !9135
  %55 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9136
  %next24 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %55, i32 0, i32 2, !dbg !9137
  store %struct.open_internal_entity* %54, %struct.open_internal_entity** %next24, align 8, !dbg !9138
  %56 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !9139
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9140
  %m_freeInternalEntities25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 51, !dbg !9140
  store %struct.open_internal_entity* %56, %struct.open_internal_entity** %m_freeInternalEntities25, align 8, !dbg !9141
  br label %if.end26

if.end26:                                         ; preds = %if.else19, %if.then17
  br label %if.end27, !dbg !9142

if.end27:                                         ; preds = %if.end26, %if.end6
  %58 = load i32, i32* %result, align 4, !dbg !9143
  store i32 %58, i32* %retval, align 4, !dbg !9144
  br label %return, !dbg !9144

return:                                           ; preds = %if.end27, %if.then5
  %59 = load i32, i32* %retval, align 4, !dbg !9145
  ret i32 %59, !dbg !9145
}

; Function Attrs: nounwind uwtable
define internal i8* @getContext(%struct.XML_ParserStruct* %parser) #0 !dbg !896 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %needSep = alloca i8, align 1
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %i33 = alloca i32, align 4
  %len34 = alloca i32, align 4
  %s = alloca i8*, align 8
  %prefix = alloca %struct.prefix*, align 8
  %s139 = alloca i8*, align 8
  %e = alloca %struct.ENTITY*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !9146, metadata !1076), !dbg !9147
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !9148, metadata !1076), !dbg !9149
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9150
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !9150
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !9150
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !9149
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !9151, metadata !1076), !dbg !9152
  call void @llvm.dbg.declare(metadata i8* %needSep, metadata !9153, metadata !1076), !dbg !9154
  store i8 0, i8* %needSep, align 1, !dbg !9154
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9155
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 9, !dbg !9157
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 1, !dbg !9158
  %3 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !9158
  %tobool = icmp ne %struct.binding* %3, null, !dbg !9155
  br i1 %tobool, label %if.then, label %if.end31, !dbg !9159

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9160, metadata !1076), !dbg !9162
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9163, metadata !1076), !dbg !9164
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9165
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 79, !dbg !9165
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 3, !dbg !9165
  %5 = load i8*, i8** %ptr, align 8, !dbg !9165
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9165
  %m_tempPool1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 79, !dbg !9165
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool1, i32 0, i32 2, !dbg !9165
  %7 = load i8*, i8** %end, align 8, !dbg !9165
  %cmp = icmp eq i8* %5, %7, !dbg !9165
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !9165

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9167
  %m_tempPool2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 79, !dbg !9167
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool2), !dbg !9167
  %tobool3 = icmp ne i8 %call, 0, !dbg !9167
  br i1 %tobool3, label %cond.false, label %cond.true, !dbg !9169

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then6, !dbg !9170

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9172
  %m_tempPool4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 79, !dbg !9172
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool4, i32 0, i32 3, !dbg !9172
  %10 = load i8*, i8** %ptr5, align 8, !dbg !9172
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9172
  store i8* %incdec.ptr, i8** %ptr5, align 8, !dbg !9172
  store i8 61, i8* %10, align 1, !dbg !9172
  br i1 true, label %if.end, label %if.then6, !dbg !9174

if.then6:                                         ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, align 8, !dbg !9175
  br label %return, !dbg !9175

if.end:                                           ; preds = %cond.false, %cond.true
  %11 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9176
  %defaultPrefix7 = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 9, !dbg !9177
  %binding8 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix7, i32 0, i32 1, !dbg !9178
  %12 = load %struct.binding*, %struct.binding** %binding8, align 8, !dbg !9178
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %12, i32 0, i32 5, !dbg !9179
  %13 = load i32, i32* %uriLen, align 8, !dbg !9179
  store i32 %13, i32* %len, align 4, !dbg !9180
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9181
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 83, !dbg !9181
  %15 = load i8, i8* %m_namespaceSeparator, align 4, !dbg !9181
  %tobool9 = icmp ne i8 %15, 0, !dbg !9181
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9183

if.then10:                                        ; preds = %if.end
  %16 = load i32, i32* %len, align 4, !dbg !9184
  %dec = add nsw i32 %16, -1, !dbg !9184
  store i32 %dec, i32* %len, align 4, !dbg !9184
  br label %if.end11, !dbg !9185

if.end11:                                         ; preds = %if.then10, %if.end
  store i32 0, i32* %i, align 4, !dbg !9186
  br label %for.cond, !dbg !9188

for.cond:                                         ; preds = %for.inc, %if.end11
  %17 = load i32, i32* %i, align 4, !dbg !9189
  %18 = load i32, i32* %len, align 4, !dbg !9192
  %cmp12 = icmp slt i32 %17, %18, !dbg !9193
  br i1 %cmp12, label %for.body, label %for.end, !dbg !9194

for.body:                                         ; preds = %for.cond
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9195
  %m_tempPool13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 79, !dbg !9195
  %ptr14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool13, i32 0, i32 3, !dbg !9195
  %20 = load i8*, i8** %ptr14, align 8, !dbg !9195
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9195
  %m_tempPool15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 79, !dbg !9195
  %end16 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool15, i32 0, i32 2, !dbg !9195
  %22 = load i8*, i8** %end16, align 8, !dbg !9195
  %cmp17 = icmp eq i8* %20, %22, !dbg !9195
  br i1 %cmp17, label %land.lhs.true18, label %cond.false23, !dbg !9195

land.lhs.true18:                                  ; preds = %for.body
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9197
  %m_tempPool19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 79, !dbg !9197
  %call20 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool19), !dbg !9197
  %tobool21 = icmp ne i8 %call20, 0, !dbg !9197
  br i1 %tobool21, label %cond.false23, label %cond.true22, !dbg !9199

cond.true22:                                      ; preds = %land.lhs.true18
  br i1 false, label %if.end30, label %if.then29, !dbg !9200

cond.false23:                                     ; preds = %land.lhs.true18, %for.body
  %24 = load i32, i32* %i, align 4, !dbg !9202
  %idxprom = sext i32 %24 to i64, !dbg !9202
  %25 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9202
  %defaultPrefix24 = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 9, !dbg !9202
  %binding25 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix24, i32 0, i32 1, !dbg !9202
  %26 = load %struct.binding*, %struct.binding** %binding25, align 8, !dbg !9202
  %uri = getelementptr inbounds %struct.binding, %struct.binding* %26, i32 0, i32 4, !dbg !9202
  %27 = load i8*, i8** %uri, align 8, !dbg !9202
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %idxprom, !dbg !9202
  %28 = load i8, i8* %arrayidx, align 1, !dbg !9202
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9202
  %m_tempPool26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 79, !dbg !9202
  %ptr27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool26, i32 0, i32 3, !dbg !9202
  %30 = load i8*, i8** %ptr27, align 8, !dbg !9202
  %incdec.ptr28 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !9202
  store i8* %incdec.ptr28, i8** %ptr27, align 8, !dbg !9202
  store i8 %28, i8* %30, align 1, !dbg !9202
  br i1 true, label %if.end30, label %if.then29, !dbg !9204

if.then29:                                        ; preds = %cond.false23, %cond.true22
  store i8* null, i8** %retval, align 8, !dbg !9205
  br label %return, !dbg !9205

if.end30:                                         ; preds = %cond.false23, %cond.true22
  br label %for.inc, !dbg !9206

for.inc:                                          ; preds = %if.end30
  %31 = load i32, i32* %i, align 4, !dbg !9208
  %inc = add nsw i32 %31, 1, !dbg !9208
  store i32 %inc, i32* %i, align 4, !dbg !9208
  br label %for.cond, !dbg !9210

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %needSep, align 1, !dbg !9211
  br label %if.end31, !dbg !9212

if.end31:                                         ; preds = %for.end, %entry
  %32 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9213
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %32, i32 0, i32 3, !dbg !9214
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %prefixes), !dbg !9215
  br label %for.cond32, !dbg !9216

for.cond32:                                       ; preds = %for.end136, %if.then41, %if.end31
  call void @llvm.dbg.declare(metadata i32* %i33, metadata !9217, metadata !1076), !dbg !9221
  call void @llvm.dbg.declare(metadata i32* %len34, metadata !9222, metadata !1076), !dbg !9223
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9224, metadata !1076), !dbg !9225
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix, metadata !9226, metadata !1076), !dbg !9227
  %call35 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !9228
  %33 = bitcast %struct.NAMED* %call35 to %struct.prefix*, !dbg !9229
  store %struct.prefix* %33, %struct.prefix** %prefix, align 8, !dbg !9227
  %34 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !9230
  %tobool36 = icmp ne %struct.prefix* %34, null, !dbg !9230
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !9232

if.then37:                                        ; preds = %for.cond32
  br label %for.end137, !dbg !9233

if.end38:                                         ; preds = %for.cond32
  %35 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !9234
  %binding39 = getelementptr inbounds %struct.prefix, %struct.prefix* %35, i32 0, i32 1, !dbg !9236
  %36 = load %struct.binding*, %struct.binding** %binding39, align 8, !dbg !9236
  %tobool40 = icmp ne %struct.binding* %36, null, !dbg !9234
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !9237

if.then41:                                        ; preds = %if.end38
  br label %for.cond32, !dbg !9238

if.end42:                                         ; preds = %if.end38
  %37 = load i8, i8* %needSep, align 1, !dbg !9239
  %conv = zext i8 %37 to i32, !dbg !9239
  %tobool43 = icmp ne i32 %conv, 0, !dbg !9239
  br i1 %tobool43, label %land.lhs.true44, label %if.end61, !dbg !9241

land.lhs.true44:                                  ; preds = %if.end42
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9242
  %m_tempPool45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 79, !dbg !9242
  %ptr46 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool45, i32 0, i32 3, !dbg !9242
  %39 = load i8*, i8** %ptr46, align 8, !dbg !9242
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9242
  %m_tempPool47 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 79, !dbg !9242
  %end48 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool47, i32 0, i32 2, !dbg !9242
  %41 = load i8*, i8** %end48, align 8, !dbg !9242
  %cmp49 = icmp eq i8* %39, %41, !dbg !9242
  br i1 %cmp49, label %land.lhs.true51, label %cond.false56, !dbg !9242

land.lhs.true51:                                  ; preds = %land.lhs.true44
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9244
  %m_tempPool52 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 79, !dbg !9244
  %call53 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool52), !dbg !9244
  %tobool54 = icmp ne i8 %call53, 0, !dbg !9244
  br i1 %tobool54, label %cond.false56, label %cond.true55, !dbg !9246

cond.true55:                                      ; preds = %land.lhs.true51
  br i1 false, label %if.end61, label %if.then60, !dbg !9247

cond.false56:                                     ; preds = %land.lhs.true51, %land.lhs.true44
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9249
  %m_tempPool57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 79, !dbg !9249
  %ptr58 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool57, i32 0, i32 3, !dbg !9249
  %44 = load i8*, i8** %ptr58, align 8, !dbg !9249
  %incdec.ptr59 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !9249
  store i8* %incdec.ptr59, i8** %ptr58, align 8, !dbg !9249
  store i8 12, i8* %44, align 1, !dbg !9249
  br i1 true, label %if.end61, label %if.then60, !dbg !9251

if.then60:                                        ; preds = %cond.false56, %cond.true55
  store i8* null, i8** %retval, align 8, !dbg !9252
  br label %return, !dbg !9252

if.end61:                                         ; preds = %cond.false56, %cond.true55, %if.end42
  %45 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !9253
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %45, i32 0, i32 0, !dbg !9255
  %46 = load i8*, i8** %name, align 8, !dbg !9255
  store i8* %46, i8** %s, align 8, !dbg !9256
  br label %for.cond62, !dbg !9257

for.cond62:                                       ; preds = %for.inc82, %if.end61
  %47 = load i8*, i8** %s, align 8, !dbg !9258
  %48 = load i8, i8* %47, align 1, !dbg !9261
  %tobool63 = icmp ne i8 %48, 0, !dbg !9262
  br i1 %tobool63, label %for.body64, label %for.end84, !dbg !9262

for.body64:                                       ; preds = %for.cond62
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9263
  %m_tempPool65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 79, !dbg !9263
  %ptr66 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool65, i32 0, i32 3, !dbg !9263
  %50 = load i8*, i8** %ptr66, align 8, !dbg !9263
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9263
  %m_tempPool67 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 79, !dbg !9263
  %end68 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool67, i32 0, i32 2, !dbg !9263
  %52 = load i8*, i8** %end68, align 8, !dbg !9263
  %cmp69 = icmp eq i8* %50, %52, !dbg !9263
  br i1 %cmp69, label %land.lhs.true71, label %cond.false76, !dbg !9263

land.lhs.true71:                                  ; preds = %for.body64
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9265
  %m_tempPool72 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 79, !dbg !9265
  %call73 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool72), !dbg !9265
  %tobool74 = icmp ne i8 %call73, 0, !dbg !9265
  br i1 %tobool74, label %cond.false76, label %cond.true75, !dbg !9267

cond.true75:                                      ; preds = %land.lhs.true71
  br i1 false, label %if.end81, label %if.then80, !dbg !9268

cond.false76:                                     ; preds = %land.lhs.true71, %for.body64
  %54 = load i8*, i8** %s, align 8, !dbg !9270
  %55 = load i8, i8* %54, align 1, !dbg !9270
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9270
  %m_tempPool77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 79, !dbg !9270
  %ptr78 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool77, i32 0, i32 3, !dbg !9270
  %57 = load i8*, i8** %ptr78, align 8, !dbg !9270
  %incdec.ptr79 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !9270
  store i8* %incdec.ptr79, i8** %ptr78, align 8, !dbg !9270
  store i8 %55, i8* %57, align 1, !dbg !9270
  br i1 true, label %if.end81, label %if.then80, !dbg !9272

if.then80:                                        ; preds = %cond.false76, %cond.true75
  store i8* null, i8** %retval, align 8, !dbg !9273
  br label %return, !dbg !9273

if.end81:                                         ; preds = %cond.false76, %cond.true75
  br label %for.inc82, !dbg !9274

for.inc82:                                        ; preds = %if.end81
  %58 = load i8*, i8** %s, align 8, !dbg !9276
  %incdec.ptr83 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !9276
  store i8* %incdec.ptr83, i8** %s, align 8, !dbg !9276
  br label %for.cond62, !dbg !9278

for.end84:                                        ; preds = %for.cond62
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9279
  %m_tempPool85 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 79, !dbg !9279
  %ptr86 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool85, i32 0, i32 3, !dbg !9279
  %60 = load i8*, i8** %ptr86, align 8, !dbg !9279
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9279
  %m_tempPool87 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 79, !dbg !9279
  %end88 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool87, i32 0, i32 2, !dbg !9279
  %62 = load i8*, i8** %end88, align 8, !dbg !9279
  %cmp89 = icmp eq i8* %60, %62, !dbg !9279
  br i1 %cmp89, label %land.lhs.true91, label %cond.false96, !dbg !9279

land.lhs.true91:                                  ; preds = %for.end84
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9281
  %m_tempPool92 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 79, !dbg !9281
  %call93 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool92), !dbg !9281
  %tobool94 = icmp ne i8 %call93, 0, !dbg !9281
  br i1 %tobool94, label %cond.false96, label %cond.true95, !dbg !9283

cond.true95:                                      ; preds = %land.lhs.true91
  br i1 false, label %if.end101, label %if.then100, !dbg !9284

cond.false96:                                     ; preds = %land.lhs.true91, %for.end84
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9286
  %m_tempPool97 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 79, !dbg !9286
  %ptr98 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool97, i32 0, i32 3, !dbg !9286
  %65 = load i8*, i8** %ptr98, align 8, !dbg !9286
  %incdec.ptr99 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !9286
  store i8* %incdec.ptr99, i8** %ptr98, align 8, !dbg !9286
  store i8 61, i8* %65, align 1, !dbg !9286
  br i1 true, label %if.end101, label %if.then100, !dbg !9288

if.then100:                                       ; preds = %cond.false96, %cond.true95
  store i8* null, i8** %retval, align 8, !dbg !9289
  br label %return, !dbg !9289

if.end101:                                        ; preds = %cond.false96, %cond.true95
  %66 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !9290
  %binding102 = getelementptr inbounds %struct.prefix, %struct.prefix* %66, i32 0, i32 1, !dbg !9291
  %67 = load %struct.binding*, %struct.binding** %binding102, align 8, !dbg !9291
  %uriLen103 = getelementptr inbounds %struct.binding, %struct.binding* %67, i32 0, i32 5, !dbg !9292
  %68 = load i32, i32* %uriLen103, align 8, !dbg !9292
  store i32 %68, i32* %len34, align 4, !dbg !9293
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9294
  %m_namespaceSeparator104 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 83, !dbg !9294
  %70 = load i8, i8* %m_namespaceSeparator104, align 4, !dbg !9294
  %tobool105 = icmp ne i8 %70, 0, !dbg !9294
  br i1 %tobool105, label %if.then106, label %if.end108, !dbg !9296

if.then106:                                       ; preds = %if.end101
  %71 = load i32, i32* %len34, align 4, !dbg !9297
  %dec107 = add nsw i32 %71, -1, !dbg !9297
  store i32 %dec107, i32* %len34, align 4, !dbg !9297
  br label %if.end108, !dbg !9298

if.end108:                                        ; preds = %if.then106, %if.end101
  store i32 0, i32* %i33, align 4, !dbg !9299
  br label %for.cond109, !dbg !9301

for.cond109:                                      ; preds = %for.inc134, %if.end108
  %72 = load i32, i32* %i33, align 4, !dbg !9302
  %73 = load i32, i32* %len34, align 4, !dbg !9305
  %cmp110 = icmp slt i32 %72, %73, !dbg !9306
  br i1 %cmp110, label %for.body112, label %for.end136, !dbg !9307

for.body112:                                      ; preds = %for.cond109
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9308
  %m_tempPool113 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 79, !dbg !9308
  %ptr114 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool113, i32 0, i32 3, !dbg !9308
  %75 = load i8*, i8** %ptr114, align 8, !dbg !9308
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9308
  %m_tempPool115 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 79, !dbg !9308
  %end116 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool115, i32 0, i32 2, !dbg !9308
  %77 = load i8*, i8** %end116, align 8, !dbg !9308
  %cmp117 = icmp eq i8* %75, %77, !dbg !9308
  br i1 %cmp117, label %land.lhs.true119, label %cond.false124, !dbg !9308

land.lhs.true119:                                 ; preds = %for.body112
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9310
  %m_tempPool120 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 79, !dbg !9310
  %call121 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool120), !dbg !9310
  %tobool122 = icmp ne i8 %call121, 0, !dbg !9310
  br i1 %tobool122, label %cond.false124, label %cond.true123, !dbg !9312

cond.true123:                                     ; preds = %land.lhs.true119
  br i1 false, label %if.end133, label %if.then132, !dbg !9313

cond.false124:                                    ; preds = %land.lhs.true119, %for.body112
  %79 = load i32, i32* %i33, align 4, !dbg !9315
  %idxprom125 = sext i32 %79 to i64, !dbg !9315
  %80 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !9315
  %binding126 = getelementptr inbounds %struct.prefix, %struct.prefix* %80, i32 0, i32 1, !dbg !9315
  %81 = load %struct.binding*, %struct.binding** %binding126, align 8, !dbg !9315
  %uri127 = getelementptr inbounds %struct.binding, %struct.binding* %81, i32 0, i32 4, !dbg !9315
  %82 = load i8*, i8** %uri127, align 8, !dbg !9315
  %arrayidx128 = getelementptr inbounds i8, i8* %82, i64 %idxprom125, !dbg !9315
  %83 = load i8, i8* %arrayidx128, align 1, !dbg !9315
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9315
  %m_tempPool129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 79, !dbg !9315
  %ptr130 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool129, i32 0, i32 3, !dbg !9315
  %85 = load i8*, i8** %ptr130, align 8, !dbg !9315
  %incdec.ptr131 = getelementptr inbounds i8, i8* %85, i32 1, !dbg !9315
  store i8* %incdec.ptr131, i8** %ptr130, align 8, !dbg !9315
  store i8 %83, i8* %85, align 1, !dbg !9315
  br i1 true, label %if.end133, label %if.then132, !dbg !9317

if.then132:                                       ; preds = %cond.false124, %cond.true123
  store i8* null, i8** %retval, align 8, !dbg !9318
  br label %return, !dbg !9318

if.end133:                                        ; preds = %cond.false124, %cond.true123
  br label %for.inc134, !dbg !9319

for.inc134:                                       ; preds = %if.end133
  %86 = load i32, i32* %i33, align 4, !dbg !9321
  %inc135 = add nsw i32 %86, 1, !dbg !9321
  store i32 %inc135, i32* %i33, align 4, !dbg !9321
  br label %for.cond109, !dbg !9323

for.end136:                                       ; preds = %for.cond109
  store i8 1, i8* %needSep, align 1, !dbg !9324
  br label %for.cond32, !dbg !9325

for.end137:                                       ; preds = %if.then37
  %87 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9327
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %87, i32 0, i32 0, !dbg !9328
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %generalEntities), !dbg !9329
  br label %for.cond138, !dbg !9330

for.cond138:                                      ; preds = %for.end190, %if.then145, %for.end137
  call void @llvm.dbg.declare(metadata i8** %s139, metadata !9331, metadata !1076), !dbg !9335
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %e, metadata !9336, metadata !1076), !dbg !9337
  %call140 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !9338
  %88 = bitcast %struct.NAMED* %call140 to %struct.ENTITY*, !dbg !9339
  store %struct.ENTITY* %88, %struct.ENTITY** %e, align 8, !dbg !9337
  %89 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !9340
  %tobool141 = icmp ne %struct.ENTITY* %89, null, !dbg !9340
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !9342

if.then142:                                       ; preds = %for.cond138
  br label %for.end191, !dbg !9343

if.end143:                                        ; preds = %for.cond138
  %90 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !9344
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %90, i32 0, i32 8, !dbg !9346
  %91 = load i8, i8* %open, align 8, !dbg !9346
  %tobool144 = icmp ne i8 %91, 0, !dbg !9344
  br i1 %tobool144, label %if.end146, label %if.then145, !dbg !9347

if.then145:                                       ; preds = %if.end143
  br label %for.cond138, !dbg !9348

if.end146:                                        ; preds = %if.end143
  %92 = load i8, i8* %needSep, align 1, !dbg !9349
  %conv147 = zext i8 %92 to i32, !dbg !9349
  %tobool148 = icmp ne i32 %conv147, 0, !dbg !9349
  br i1 %tobool148, label %land.lhs.true149, label %if.end166, !dbg !9351

land.lhs.true149:                                 ; preds = %if.end146
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9352
  %m_tempPool150 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 79, !dbg !9352
  %ptr151 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool150, i32 0, i32 3, !dbg !9352
  %94 = load i8*, i8** %ptr151, align 8, !dbg !9352
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9352
  %m_tempPool152 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 79, !dbg !9352
  %end153 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool152, i32 0, i32 2, !dbg !9352
  %96 = load i8*, i8** %end153, align 8, !dbg !9352
  %cmp154 = icmp eq i8* %94, %96, !dbg !9352
  br i1 %cmp154, label %land.lhs.true156, label %cond.false161, !dbg !9352

land.lhs.true156:                                 ; preds = %land.lhs.true149
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9354
  %m_tempPool157 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 79, !dbg !9354
  %call158 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool157), !dbg !9354
  %tobool159 = icmp ne i8 %call158, 0, !dbg !9354
  br i1 %tobool159, label %cond.false161, label %cond.true160, !dbg !9356

cond.true160:                                     ; preds = %land.lhs.true156
  br i1 false, label %if.end166, label %if.then165, !dbg !9357

cond.false161:                                    ; preds = %land.lhs.true156, %land.lhs.true149
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9359
  %m_tempPool162 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 79, !dbg !9359
  %ptr163 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool162, i32 0, i32 3, !dbg !9359
  %99 = load i8*, i8** %ptr163, align 8, !dbg !9359
  %incdec.ptr164 = getelementptr inbounds i8, i8* %99, i32 1, !dbg !9359
  store i8* %incdec.ptr164, i8** %ptr163, align 8, !dbg !9359
  store i8 12, i8* %99, align 1, !dbg !9359
  br i1 true, label %if.end166, label %if.then165, !dbg !9361

if.then165:                                       ; preds = %cond.false161, %cond.true160
  store i8* null, i8** %retval, align 8, !dbg !9362
  br label %return, !dbg !9362

if.end166:                                        ; preds = %cond.false161, %cond.true160, %if.end146
  %100 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8, !dbg !9363
  %name167 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %100, i32 0, i32 0, !dbg !9365
  %101 = load i8*, i8** %name167, align 8, !dbg !9365
  store i8* %101, i8** %s139, align 8, !dbg !9366
  br label %for.cond168, !dbg !9367

for.cond168:                                      ; preds = %for.inc188, %if.end166
  %102 = load i8*, i8** %s139, align 8, !dbg !9368
  %103 = load i8, i8* %102, align 1, !dbg !9371
  %tobool169 = icmp ne i8 %103, 0, !dbg !9372
  br i1 %tobool169, label %for.body170, label %for.end190, !dbg !9372

for.body170:                                      ; preds = %for.cond168
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9373
  %m_tempPool171 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 79, !dbg !9373
  %ptr172 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool171, i32 0, i32 3, !dbg !9373
  %105 = load i8*, i8** %ptr172, align 8, !dbg !9373
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9373
  %m_tempPool173 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %106, i32 0, i32 79, !dbg !9373
  %end174 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool173, i32 0, i32 2, !dbg !9373
  %107 = load i8*, i8** %end174, align 8, !dbg !9373
  %cmp175 = icmp eq i8* %105, %107, !dbg !9373
  br i1 %cmp175, label %land.lhs.true177, label %cond.false182, !dbg !9373

land.lhs.true177:                                 ; preds = %for.body170
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9375
  %m_tempPool178 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %108, i32 0, i32 79, !dbg !9375
  %call179 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool178), !dbg !9375
  %tobool180 = icmp ne i8 %call179, 0, !dbg !9375
  br i1 %tobool180, label %cond.false182, label %cond.true181, !dbg !9377

cond.true181:                                     ; preds = %land.lhs.true177
  br i1 false, label %if.end187, label %if.then186, !dbg !9378

cond.false182:                                    ; preds = %land.lhs.true177, %for.body170
  %109 = load i8*, i8** %s139, align 8, !dbg !9380
  %110 = load i8, i8* %109, align 1, !dbg !9380
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9380
  %m_tempPool183 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 79, !dbg !9380
  %ptr184 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool183, i32 0, i32 3, !dbg !9380
  %112 = load i8*, i8** %ptr184, align 8, !dbg !9380
  %incdec.ptr185 = getelementptr inbounds i8, i8* %112, i32 1, !dbg !9380
  store i8* %incdec.ptr185, i8** %ptr184, align 8, !dbg !9380
  store i8 %110, i8* %112, align 1, !dbg !9380
  br i1 true, label %if.end187, label %if.then186, !dbg !9382

if.then186:                                       ; preds = %cond.false182, %cond.true181
  store i8* null, i8** %retval, align 8, !dbg !9383
  br label %return, !dbg !9383

if.end187:                                        ; preds = %cond.false182, %cond.true181
  br label %for.inc188, !dbg !9384

for.inc188:                                       ; preds = %if.end187
  %113 = load i8*, i8** %s139, align 8, !dbg !9386
  %incdec.ptr189 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !9386
  store i8* %incdec.ptr189, i8** %s139, align 8, !dbg !9386
  br label %for.cond168, !dbg !9388

for.end190:                                       ; preds = %for.cond168
  store i8 1, i8* %needSep, align 1, !dbg !9389
  br label %for.cond138, !dbg !9390

for.end191:                                       ; preds = %if.then142
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9392
  %m_tempPool192 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 79, !dbg !9392
  %ptr193 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool192, i32 0, i32 3, !dbg !9392
  %115 = load i8*, i8** %ptr193, align 8, !dbg !9392
  %116 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9392
  %m_tempPool194 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %116, i32 0, i32 79, !dbg !9392
  %end195 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool194, i32 0, i32 2, !dbg !9392
  %117 = load i8*, i8** %end195, align 8, !dbg !9392
  %cmp196 = icmp eq i8* %115, %117, !dbg !9392
  br i1 %cmp196, label %land.lhs.true198, label %cond.false203, !dbg !9392

land.lhs.true198:                                 ; preds = %for.end191
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9394
  %m_tempPool199 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 79, !dbg !9394
  %call200 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool199), !dbg !9394
  %tobool201 = icmp ne i8 %call200, 0, !dbg !9394
  br i1 %tobool201, label %cond.false203, label %cond.true202, !dbg !9396

cond.true202:                                     ; preds = %land.lhs.true198
  br i1 false, label %if.end208, label %if.then207, !dbg !9397

cond.false203:                                    ; preds = %land.lhs.true198, %for.end191
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9399
  %m_tempPool204 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 79, !dbg !9399
  %ptr205 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool204, i32 0, i32 3, !dbg !9399
  %120 = load i8*, i8** %ptr205, align 8, !dbg !9399
  %incdec.ptr206 = getelementptr inbounds i8, i8* %120, i32 1, !dbg !9399
  store i8* %incdec.ptr206, i8** %ptr205, align 8, !dbg !9399
  store i8 0, i8* %120, align 1, !dbg !9399
  br i1 true, label %if.end208, label %if.then207, !dbg !9401

if.then207:                                       ; preds = %cond.false203, %cond.true202
  store i8* null, i8** %retval, align 8, !dbg !9402
  br label %return, !dbg !9402

if.end208:                                        ; preds = %cond.false203, %cond.true202
  %121 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9403
  %m_tempPool209 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %121, i32 0, i32 79, !dbg !9403
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool209, i32 0, i32 4, !dbg !9404
  %122 = load i8*, i8** %start, align 8, !dbg !9404
  store i8* %122, i8** %retval, align 8, !dbg !9405
  br label %return, !dbg !9405

return:                                           ; preds = %if.end208, %if.then207, %if.then186, %if.then165, %if.then132, %if.then100, %if.then80, %if.then60, %if.then29, %if.then6
  %123 = load i8*, i8** %retval, align 8, !dbg !9406
  ret i8* %123, !dbg !9406
}

; Function Attrs: nounwind uwtable
define internal i32 @storeAtts(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %attStr, %struct.TAG_NAME* %tagNamePtr, %struct.binding** %bindingsPtr) #0 !dbg !911 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %attStr.addr = alloca i8*, align 8
  %tagNamePtr.addr = alloca %struct.TAG_NAME*, align 8
  %bindingsPtr.addr = alloca %struct.binding**, align 8
  %dtd = alloca %struct.DTD*, align 8
  %elementType = alloca %struct.ELEMENT_TYPE*, align 8
  %nDefaultAtts = alloca i32, align 4
  %appAtts = alloca i8**, align 8
  %attIndex = alloca i32, align 4
  %prefixLen = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %uri = alloca i8*, align 8
  %nPrefixes = alloca i32, align 4
  %binding = alloca %struct.binding*, align 8
  %localPart = alloca i8*, align 8
  %name = alloca i8*, align 8
  %oldAttsSize = alloca i32, align 4
  %temp = alloca %struct.ATTRIBUTE*, align 8
  %currAtt = alloca %struct.ATTRIBUTE*, align 8
  %attId = alloca %struct.attribute_id*, align 8
  %result = alloca i32, align 4
  %isCdata = alloca i8, align 1
  %j = alloca i32, align 4
  %result138 = alloca i32, align 4
  %da = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %result206 = alloca i32, align 4
  %j252 = alloca i32, align 4
  %version = alloca i64, align 8
  %nsAttsSize = alloca i32, align 4
  %temp259 = alloca %struct.NS_ATT*, align 8
  %s = alloca i8*, align 8
  %id311 = alloca %struct.attribute_id*, align 8
  %b = alloca %struct.binding*, align 8
  %uriHash = alloca i64, align 8
  %c = alloca i8, align 1
  %c356 = alloca i8, align 1
  %step = alloca i8, align 1
  %mask = alloca i64, align 8
  %s1 = alloca i8*, align 8
  %s2 = alloca i8*, align 8
  %p = alloca %struct.tag*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !9407, metadata !1076), !dbg !9408
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !9409, metadata !1076), !dbg !9410
  store i8* %attStr, i8** %attStr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %attStr.addr, metadata !9411, metadata !1076), !dbg !9412
  store %struct.TAG_NAME* %tagNamePtr, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TAG_NAME** %tagNamePtr.addr, metadata !9413, metadata !1076), !dbg !9414
  store %struct.binding** %bindingsPtr, %struct.binding*** %bindingsPtr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.binding*** %bindingsPtr.addr, metadata !9415, metadata !1076), !dbg !9416
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !9417, metadata !1076), !dbg !9418
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9419
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !9419
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !9419
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !9418
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %elementType, metadata !9420, metadata !1076), !dbg !9421
  call void @llvm.dbg.declare(metadata i32* %nDefaultAtts, metadata !9422, metadata !1076), !dbg !9423
  call void @llvm.dbg.declare(metadata i8*** %appAtts, metadata !9424, metadata !1076), !dbg !9425
  call void @llvm.dbg.declare(metadata i32* %attIndex, metadata !9426, metadata !1076), !dbg !9427
  store i32 0, i32* %attIndex, align 4, !dbg !9427
  call void @llvm.dbg.declare(metadata i32* %prefixLen, metadata !9428, metadata !1076), !dbg !9429
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9430, metadata !1076), !dbg !9431
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9432, metadata !1076), !dbg !9433
  call void @llvm.dbg.declare(metadata i8** %uri, metadata !9434, metadata !1076), !dbg !9435
  call void @llvm.dbg.declare(metadata i32* %nPrefixes, metadata !9436, metadata !1076), !dbg !9437
  store i32 0, i32* %nPrefixes, align 4, !dbg !9437
  call void @llvm.dbg.declare(metadata %struct.binding** %binding, metadata !9438, metadata !1076), !dbg !9439
  call void @llvm.dbg.declare(metadata i8** %localPart, metadata !9440, metadata !1076), !dbg !9441
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9442
  %3 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9443
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %3, i32 0, i32 1, !dbg !9444
  %4 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !9445
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %4, i32 0, i32 0, !dbg !9446
  %5 = load i8*, i8** %str, align 8, !dbg !9446
  %call = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %2, %struct.HASH_TABLE* %elementTypes, i8* %5, i64 0), !dbg !9447
  %6 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*, !dbg !9448
  store %struct.ELEMENT_TYPE* %6, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9449
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9450
  %tobool = icmp ne %struct.ELEMENT_TYPE* %7, null, !dbg !9450
  br i1 %tobool, label %if.end15, label %if.then, !dbg !9452

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name, metadata !9453, metadata !1076), !dbg !9455
  %8 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9456
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 4, !dbg !9457
  %9 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !9458
  %str1 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %9, i32 0, i32 0, !dbg !9459
  %10 = load i8*, i8** %str1, align 8, !dbg !9459
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %10), !dbg !9460
  store i8* %call2, i8** %name, align 8, !dbg !9455
  %11 = load i8*, i8** %name, align 8, !dbg !9461
  %tobool3 = icmp ne i8* %11, null, !dbg !9461
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !9463

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !9464
  br label %return, !dbg !9464

if.end:                                           ; preds = %if.then
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9465
  %13 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9466
  %elementTypes5 = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 1, !dbg !9467
  %14 = load i8*, i8** %name, align 8, !dbg !9468
  %call6 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %12, %struct.HASH_TABLE* %elementTypes5, i8* %14, i64 40), !dbg !9469
  %15 = bitcast %struct.NAMED* %call6 to %struct.ELEMENT_TYPE*, !dbg !9470
  store %struct.ELEMENT_TYPE* %15, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9471
  %16 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9472
  %tobool7 = icmp ne %struct.ELEMENT_TYPE* %16, null, !dbg !9472
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9474

if.then8:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9475
  br label %return, !dbg !9475

if.end9:                                          ; preds = %if.end
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9476
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 38, !dbg !9476
  %18 = load i8, i8* %m_ns, align 8, !dbg !9476
  %conv = zext i8 %18 to i32, !dbg !9476
  %tobool10 = icmp ne i32 %conv, 0, !dbg !9476
  br i1 %tobool10, label %land.lhs.true, label %if.end14, !dbg !9478

land.lhs.true:                                    ; preds = %if.end9
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9479
  %20 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9481
  %call11 = call i32 @setElementTypePrefix(%struct.XML_ParserStruct* %19, %struct.ELEMENT_TYPE* %20), !dbg !9482
  %tobool12 = icmp ne i32 %call11, 0, !dbg !9482
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !9483

if.then13:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !9484
  br label %return, !dbg !9484

if.end14:                                         ; preds = %land.lhs.true, %if.end9
  br label %if.end15, !dbg !9485

if.end15:                                         ; preds = %if.end14, %entry
  %21 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9486
  %nDefaultAtts16 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %21, i32 0, i32 3, !dbg !9487
  %22 = load i32, i32* %nDefaultAtts16, align 8, !dbg !9487
  store i32 %22, i32* %nDefaultAtts, align 4, !dbg !9488
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9489
  %getAtts = getelementptr inbounds %struct.encoding, %struct.encoding* %23, i32 0, i32 6, !dbg !9489
  %24 = load i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)** %getAtts, align 8, !dbg !9489
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9489
  %26 = load i8*, i8** %attStr.addr, align 8, !dbg !9489
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9489
  %m_attsSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 71, !dbg !9489
  %28 = load i32, i32* %m_attsSize, align 8, !dbg !9489
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9489
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 74, !dbg !9489
  %30 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8, !dbg !9489
  %call17 = call i32 %24(%struct.encoding* %25, i8* %26, i32 %28, %struct.ATTRIBUTE* %30), !dbg !9489
  store i32 %call17, i32* %n, align 4, !dbg !9490
  %31 = load i32, i32* %n, align 4, !dbg !9491
  %32 = load i32, i32* %nDefaultAtts, align 4, !dbg !9493
  %add = add nsw i32 %31, %32, !dbg !9494
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9495
  %m_attsSize18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 71, !dbg !9495
  %34 = load i32, i32* %m_attsSize18, align 8, !dbg !9495
  %cmp = icmp sgt i32 %add, %34, !dbg !9496
  br i1 %cmp, label %if.then20, label %if.end41, !dbg !9497

if.then20:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i32* %oldAttsSize, metadata !9498, metadata !1076), !dbg !9500
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9501
  %m_attsSize21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 71, !dbg !9501
  %36 = load i32, i32* %m_attsSize21, align 8, !dbg !9501
  store i32 %36, i32* %oldAttsSize, align 4, !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.ATTRIBUTE** %temp, metadata !9502, metadata !1076), !dbg !9503
  %37 = load i32, i32* %n, align 4, !dbg !9504
  %38 = load i32, i32* %nDefaultAtts, align 4, !dbg !9505
  %add22 = add nsw i32 %37, %38, !dbg !9506
  %add23 = add nsw i32 %add22, 16, !dbg !9507
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9508
  %m_attsSize24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 71, !dbg !9508
  store i32 %add23, i32* %m_attsSize24, align 8, !dbg !9509
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9510
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 3, !dbg !9510
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !9510
  %41 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !9510
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9510
  %m_atts25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 74, !dbg !9510
  %43 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts25, align 8, !dbg !9510
  %44 = bitcast %struct.ATTRIBUTE* %43 to i8*, !dbg !9510
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9510
  %m_attsSize26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 71, !dbg !9510
  %46 = load i32, i32* %m_attsSize26, align 8, !dbg !9510
  %conv27 = sext i32 %46 to i64, !dbg !9510
  %mul = mul i64 %conv27, 32, !dbg !9510
  %call28 = call i8* %41(i8* %44, i64 %mul), !dbg !9510
  %47 = bitcast i8* %call28 to %struct.ATTRIBUTE*, !dbg !9511
  store %struct.ATTRIBUTE* %47, %struct.ATTRIBUTE** %temp, align 8, !dbg !9512
  %48 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %temp, align 8, !dbg !9513
  %cmp29 = icmp eq %struct.ATTRIBUTE* %48, null, !dbg !9515
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9516

if.then31:                                        ; preds = %if.then20
  store i32 1, i32* %retval, align 4, !dbg !9517
  br label %return, !dbg !9517

if.end32:                                         ; preds = %if.then20
  %49 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %temp, align 8, !dbg !9518
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9519
  %m_atts33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 74, !dbg !9519
  store %struct.ATTRIBUTE* %49, %struct.ATTRIBUTE** %m_atts33, align 8, !dbg !9520
  %51 = load i32, i32* %n, align 4, !dbg !9521
  %52 = load i32, i32* %oldAttsSize, align 4, !dbg !9523
  %cmp34 = icmp sgt i32 %51, %52, !dbg !9524
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !9525

if.then36:                                        ; preds = %if.end32
  %53 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9526
  %getAtts37 = getelementptr inbounds %struct.encoding, %struct.encoding* %53, i32 0, i32 6, !dbg !9526
  %54 = load i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)** %getAtts37, align 8, !dbg !9526
  %55 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9526
  %56 = load i8*, i8** %attStr.addr, align 8, !dbg !9526
  %57 = load i32, i32* %n, align 4, !dbg !9526
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9526
  %m_atts38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 74, !dbg !9526
  %59 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts38, align 8, !dbg !9526
  %call39 = call i32 %54(%struct.encoding* %55, i8* %56, i32 %57, %struct.ATTRIBUTE* %59), !dbg !9526
  br label %if.end40, !dbg !9526

if.end40:                                         ; preds = %if.then36, %if.end32
  br label %if.end41, !dbg !9527

if.end41:                                         ; preds = %if.end40, %if.end15
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9528
  %m_atts42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 74, !dbg !9528
  %61 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts42, align 8, !dbg !9528
  %62 = bitcast %struct.ATTRIBUTE* %61 to i8**, !dbg !9529
  store i8** %62, i8*** %appAtts, align 8, !dbg !9530
  store i32 0, i32* %i, align 4, !dbg !9531
  br label %for.cond, !dbg !9533

for.cond:                                         ; preds = %for.inc155, %if.end41
  %63 = load i32, i32* %i, align 4, !dbg !9534
  %64 = load i32, i32* %n, align 4, !dbg !9537
  %cmp43 = icmp slt i32 %63, %64, !dbg !9538
  br i1 %cmp43, label %for.body, label %for.end157, !dbg !9539

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ATTRIBUTE** %currAtt, metadata !9540, metadata !1076), !dbg !9542
  %65 = load i32, i32* %i, align 4, !dbg !9543
  %idxprom = sext i32 %65 to i64, !dbg !9544
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9544
  %m_atts45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 74, !dbg !9544
  %67 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts45, align 8, !dbg !9544
  %arrayidx = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %67, i64 %idxprom, !dbg !9544
  store %struct.ATTRIBUTE* %arrayidx, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !9542
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %attId, metadata !9545, metadata !1076), !dbg !9546
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9547
  %69 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9548
  %70 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !9549
  %name46 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %70, i32 0, i32 0, !dbg !9550
  %71 = load i8*, i8** %name46, align 8, !dbg !9550
  %72 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !9551
  %name47 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %72, i32 0, i32 0, !dbg !9552
  %73 = load i8*, i8** %name47, align 8, !dbg !9552
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9553
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %74, i32 0, i32 4, !dbg !9553
  %75 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8, !dbg !9553
  %76 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9553
  %77 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8, !dbg !9553
  %name48 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %77, i32 0, i32 0, !dbg !9553
  %78 = load i8*, i8** %name48, align 8, !dbg !9553
  %call49 = call i32 %75(%struct.encoding* %76, i8* %78), !dbg !9553
  %idx.ext = sext i32 %call49 to i64, !dbg !9554
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !9554
  %call50 = call %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %68, %struct.encoding* %69, i8* %71, i8* %add.ptr), !dbg !9555
  store %struct.attribute_id* %call50, %struct.attribute_id** %attId, align 8, !dbg !9546
  %79 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9556
  %tobool51 = icmp ne %struct.attribute_id* %79, null, !dbg !9556
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !9558

if.then52:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !9559
  br label %return, !dbg !9559

if.end53:                                         ; preds = %for.body
  %80 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9560
  %name54 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %80, i32 0, i32 0, !dbg !9562
  %81 = load i8*, i8** %name54, align 8, !dbg !9562
  %arrayidx55 = getelementptr inbounds i8, i8* %81, i64 -1, !dbg !9563
  %82 = load i8, i8* %arrayidx55, align 1, !dbg !9563
  %tobool56 = icmp ne i8 %82, 0, !dbg !9563
  br i1 %tobool56, label %if.then57, label %if.end66, !dbg !9564

if.then57:                                        ; preds = %if.end53
  %83 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9565
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9568
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 34, !dbg !9568
  %85 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !9568
  %cmp58 = icmp eq %struct.encoding* %83, %85, !dbg !9569
  br i1 %cmp58, label %if.then60, label %if.end65, !dbg !9570

if.then60:                                        ; preds = %if.then57
  %86 = load i32, i32* %i, align 4, !dbg !9571
  %idxprom61 = sext i32 %86 to i64, !dbg !9572
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9572
  %m_atts62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 74, !dbg !9572
  %88 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts62, align 8, !dbg !9572
  %arrayidx63 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %88, i64 %idxprom61, !dbg !9572
  %name64 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx63, i32 0, i32 0, !dbg !9573
  %89 = load i8*, i8** %name64, align 8, !dbg !9573
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9574
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 47, !dbg !9574
  store i8* %89, i8** %m_eventPtr, align 8, !dbg !9575
  br label %if.end65, !dbg !9574

if.end65:                                         ; preds = %if.then60, %if.then57
  store i32 8, i32* %retval, align 4, !dbg !9576
  br label %return, !dbg !9576

if.end66:                                         ; preds = %if.end53
  %91 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9577
  %name67 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %91, i32 0, i32 0, !dbg !9578
  %92 = load i8*, i8** %name67, align 8, !dbg !9578
  %arrayidx68 = getelementptr inbounds i8, i8* %92, i64 -1, !dbg !9579
  store i8 1, i8* %arrayidx68, align 1, !dbg !9580
  %93 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9581
  %name69 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %93, i32 0, i32 0, !dbg !9582
  %94 = load i8*, i8** %name69, align 8, !dbg !9582
  %95 = load i32, i32* %attIndex, align 4, !dbg !9583
  %inc = add nsw i32 %95, 1, !dbg !9583
  store i32 %inc, i32* %attIndex, align 4, !dbg !9583
  %idxprom70 = sext i32 %95 to i64, !dbg !9584
  %96 = load i8**, i8*** %appAtts, align 8, !dbg !9584
  %arrayidx71 = getelementptr inbounds i8*, i8** %96, i64 %idxprom70, !dbg !9584
  store i8* %94, i8** %arrayidx71, align 8, !dbg !9585
  %97 = load i32, i32* %i, align 4, !dbg !9586
  %idxprom72 = sext i32 %97 to i64, !dbg !9588
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9588
  %m_atts73 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 74, !dbg !9588
  %99 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts73, align 8, !dbg !9588
  %arrayidx74 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %99, i64 %idxprom72, !dbg !9588
  %normalized = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx74, i32 0, i32 3, !dbg !9589
  %100 = load i8, i8* %normalized, align 8, !dbg !9589
  %tobool75 = icmp ne i8 %100, 0, !dbg !9588
  br i1 %tobool75, label %if.else, label %if.then76, !dbg !9590

if.then76:                                        ; preds = %if.end66
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9591, metadata !1076), !dbg !9593
  call void @llvm.dbg.declare(metadata i8* %isCdata, metadata !9594, metadata !1076), !dbg !9595
  store i8 1, i8* %isCdata, align 1, !dbg !9595
  %101 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9596
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %101, i32 0, i32 2, !dbg !9598
  %102 = load i8, i8* %maybeTokenized, align 8, !dbg !9598
  %tobool77 = icmp ne i8 %102, 0, !dbg !9596
  br i1 %tobool77, label %if.then78, label %if.end94, !dbg !9599

if.then78:                                        ; preds = %if.then76
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9600, metadata !1076), !dbg !9602
  store i32 0, i32* %j, align 4, !dbg !9603
  br label %for.cond79, !dbg !9605

for.cond79:                                       ; preds = %for.inc, %if.then78
  %103 = load i32, i32* %j, align 4, !dbg !9606
  %104 = load i32, i32* %nDefaultAtts, align 4, !dbg !9609
  %cmp80 = icmp slt i32 %103, %104, !dbg !9610
  br i1 %cmp80, label %for.body82, label %for.end, !dbg !9611

for.body82:                                       ; preds = %for.cond79
  %105 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9612
  %106 = load i32, i32* %j, align 4, !dbg !9615
  %idxprom83 = sext i32 %106 to i64, !dbg !9616
  %107 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9616
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %107, i32 0, i32 5, !dbg !9617
  %108 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8, !dbg !9617
  %arrayidx84 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %108, i64 %idxprom83, !dbg !9616
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx84, i32 0, i32 0, !dbg !9618
  %109 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8, !dbg !9618
  %cmp85 = icmp eq %struct.attribute_id* %105, %109, !dbg !9619
  br i1 %cmp85, label %if.then87, label %if.end92, !dbg !9620

if.then87:                                        ; preds = %for.body82
  %110 = load i32, i32* %j, align 4, !dbg !9621
  %idxprom88 = sext i32 %110 to i64, !dbg !9623
  %111 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9623
  %defaultAtts89 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %111, i32 0, i32 5, !dbg !9624
  %112 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts89, align 8, !dbg !9624
  %arrayidx90 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %112, i64 %idxprom88, !dbg !9623
  %isCdata91 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx90, i32 0, i32 1, !dbg !9625
  %113 = load i8, i8* %isCdata91, align 8, !dbg !9625
  store i8 %113, i8* %isCdata, align 1, !dbg !9626
  br label %for.end, !dbg !9627

if.end92:                                         ; preds = %for.body82
  br label %for.inc, !dbg !9628

for.inc:                                          ; preds = %if.end92
  %114 = load i32, i32* %j, align 4, !dbg !9629
  %inc93 = add nsw i32 %114, 1, !dbg !9629
  store i32 %inc93, i32* %j, align 4, !dbg !9629
  br label %for.cond79, !dbg !9631

for.end:                                          ; preds = %if.then87, %for.cond79
  br label %if.end94, !dbg !9632

if.end94:                                         ; preds = %for.end, %if.then76
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9633
  %116 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9634
  %117 = load i8, i8* %isCdata, align 1, !dbg !9635
  %118 = load i32, i32* %i, align 4, !dbg !9636
  %idxprom95 = sext i32 %118 to i64, !dbg !9637
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9637
  %m_atts96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 74, !dbg !9637
  %120 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts96, align 8, !dbg !9637
  %arrayidx97 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %120, i64 %idxprom95, !dbg !9637
  %valuePtr = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx97, i32 0, i32 1, !dbg !9638
  %121 = load i8*, i8** %valuePtr, align 8, !dbg !9638
  %122 = load i32, i32* %i, align 4, !dbg !9639
  %idxprom98 = sext i32 %122 to i64, !dbg !9640
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9640
  %m_atts99 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 74, !dbg !9640
  %124 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts99, align 8, !dbg !9640
  %arrayidx100 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %124, i64 %idxprom98, !dbg !9640
  %valueEnd = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx100, i32 0, i32 2, !dbg !9641
  %125 = load i8*, i8** %valueEnd, align 8, !dbg !9641
  %126 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9642
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %126, i32 0, i32 79, !dbg !9642
  %call101 = call i32 @storeAttributeValue(%struct.XML_ParserStruct* %115, %struct.encoding* %116, i8 zeroext %117, i8* %121, i8* %125, %struct.STRING_POOL* %m_tempPool), !dbg !9643
  store i32 %call101, i32* %result, align 4, !dbg !9644
  %127 = load i32, i32* %result, align 4, !dbg !9645
  %tobool102 = icmp ne i32 %127, 0, !dbg !9645
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !9647

if.then103:                                       ; preds = %if.end94
  %128 = load i32, i32* %result, align 4, !dbg !9648
  store i32 %128, i32* %retval, align 4, !dbg !9649
  br label %return, !dbg !9649

if.end104:                                        ; preds = %if.end94
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9650
  %m_tempPool105 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 79, !dbg !9650
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool105, i32 0, i32 4, !dbg !9650
  %130 = load i8*, i8** %start, align 8, !dbg !9650
  %131 = load i32, i32* %attIndex, align 4, !dbg !9651
  %idxprom106 = sext i32 %131 to i64, !dbg !9652
  %132 = load i8**, i8*** %appAtts, align 8, !dbg !9652
  %arrayidx107 = getelementptr inbounds i8*, i8** %132, i64 %idxprom106, !dbg !9652
  store i8* %130, i8** %arrayidx107, align 8, !dbg !9653
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9654
  %m_tempPool108 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 79, !dbg !9654
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool108, i32 0, i32 3, !dbg !9654
  %134 = load i8*, i8** %ptr, align 8, !dbg !9654
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9654
  %m_tempPool109 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %135, i32 0, i32 79, !dbg !9654
  %start110 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool109, i32 0, i32 4, !dbg !9654
  store i8* %134, i8** %start110, align 8, !dbg !9654
  br label %if.end133, !dbg !9655

if.else:                                          ; preds = %if.end66
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9656
  %m_tempPool111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 79, !dbg !9656
  %137 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !9658
  %138 = load i32, i32* %i, align 4, !dbg !9659
  %idxprom112 = sext i32 %138 to i64, !dbg !9660
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9660
  %m_atts113 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 74, !dbg !9660
  %140 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts113, align 8, !dbg !9660
  %arrayidx114 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %140, i64 %idxprom112, !dbg !9660
  %valuePtr115 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx114, i32 0, i32 1, !dbg !9661
  %141 = load i8*, i8** %valuePtr115, align 8, !dbg !9661
  %142 = load i32, i32* %i, align 4, !dbg !9662
  %idxprom116 = sext i32 %142 to i64, !dbg !9663
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9663
  %m_atts117 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %143, i32 0, i32 74, !dbg !9663
  %144 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts117, align 8, !dbg !9663
  %arrayidx118 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %144, i64 %idxprom116, !dbg !9663
  %valueEnd119 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx118, i32 0, i32 2, !dbg !9664
  %145 = load i8*, i8** %valueEnd119, align 8, !dbg !9664
  %call120 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool111, %struct.encoding* %137, i8* %141, i8* %145), !dbg !9665
  %146 = load i32, i32* %attIndex, align 4, !dbg !9666
  %idxprom121 = sext i32 %146 to i64, !dbg !9667
  %147 = load i8**, i8*** %appAtts, align 8, !dbg !9667
  %arrayidx122 = getelementptr inbounds i8*, i8** %147, i64 %idxprom121, !dbg !9667
  store i8* %call120, i8** %arrayidx122, align 8, !dbg !9668
  %148 = load i32, i32* %attIndex, align 4, !dbg !9669
  %idxprom123 = sext i32 %148 to i64, !dbg !9671
  %149 = load i8**, i8*** %appAtts, align 8, !dbg !9671
  %arrayidx124 = getelementptr inbounds i8*, i8** %149, i64 %idxprom123, !dbg !9671
  %150 = load i8*, i8** %arrayidx124, align 8, !dbg !9671
  %cmp125 = icmp eq i8* %150, null, !dbg !9672
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !9673

if.then127:                                       ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !9674
  br label %return, !dbg !9674

if.end128:                                        ; preds = %if.else
  %151 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9675
  %m_tempPool129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %151, i32 0, i32 79, !dbg !9675
  %ptr130 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool129, i32 0, i32 3, !dbg !9675
  %152 = load i8*, i8** %ptr130, align 8, !dbg !9675
  %153 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9675
  %m_tempPool131 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %153, i32 0, i32 79, !dbg !9675
  %start132 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool131, i32 0, i32 4, !dbg !9675
  store i8* %152, i8** %start132, align 8, !dbg !9675
  br label %if.end133

if.end133:                                        ; preds = %if.end128, %if.end104
  %154 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9676
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %154, i32 0, i32 1, !dbg !9678
  %155 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !9678
  %tobool134 = icmp ne %struct.prefix* %155, null, !dbg !9676
  br i1 %tobool134, label %if.then135, label %if.else152, !dbg !9679

if.then135:                                       ; preds = %if.end133
  %156 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9680
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %156, i32 0, i32 3, !dbg !9683
  %157 = load i8, i8* %xmlns, align 1, !dbg !9683
  %tobool136 = icmp ne i8 %157, 0, !dbg !9680
  br i1 %tobool136, label %if.then137, label %if.else146, !dbg !9684

if.then137:                                       ; preds = %if.then135
  call void @llvm.dbg.declare(metadata i32* %result138, metadata !9685, metadata !1076), !dbg !9687
  %158 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9688
  %159 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9689
  %prefix139 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %159, i32 0, i32 1, !dbg !9690
  %160 = load %struct.prefix*, %struct.prefix** %prefix139, align 8, !dbg !9690
  %161 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9691
  %162 = load i32, i32* %attIndex, align 4, !dbg !9692
  %idxprom140 = sext i32 %162 to i64, !dbg !9693
  %163 = load i8**, i8*** %appAtts, align 8, !dbg !9693
  %arrayidx141 = getelementptr inbounds i8*, i8** %163, i64 %idxprom140, !dbg !9693
  %164 = load i8*, i8** %arrayidx141, align 8, !dbg !9693
  %165 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !9694
  %call142 = call i32 @addBinding(%struct.XML_ParserStruct* %158, %struct.prefix* %160, %struct.attribute_id* %161, i8* %164, %struct.binding** %165), !dbg !9695
  store i32 %call142, i32* %result138, align 4, !dbg !9687
  %166 = load i32, i32* %result138, align 4, !dbg !9696
  %tobool143 = icmp ne i32 %166, 0, !dbg !9696
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !9698

if.then144:                                       ; preds = %if.then137
  %167 = load i32, i32* %result138, align 4, !dbg !9699
  store i32 %167, i32* %retval, align 4, !dbg !9700
  br label %return, !dbg !9700

if.end145:                                        ; preds = %if.then137
  %168 = load i32, i32* %attIndex, align 4, !dbg !9701
  %dec = add nsw i32 %168, -1, !dbg !9701
  store i32 %dec, i32* %attIndex, align 4, !dbg !9701
  br label %if.end151, !dbg !9702

if.else146:                                       ; preds = %if.then135
  %169 = load i32, i32* %attIndex, align 4, !dbg !9703
  %inc147 = add nsw i32 %169, 1, !dbg !9703
  store i32 %inc147, i32* %attIndex, align 4, !dbg !9703
  %170 = load i32, i32* %nPrefixes, align 4, !dbg !9705
  %inc148 = add nsw i32 %170, 1, !dbg !9705
  store i32 %inc148, i32* %nPrefixes, align 4, !dbg !9705
  %171 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8, !dbg !9706
  %name149 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %171, i32 0, i32 0, !dbg !9707
  %172 = load i8*, i8** %name149, align 8, !dbg !9707
  %arrayidx150 = getelementptr inbounds i8, i8* %172, i64 -1, !dbg !9708
  store i8 2, i8* %arrayidx150, align 1, !dbg !9709
  br label %if.end151

if.end151:                                        ; preds = %if.else146, %if.end145
  br label %if.end154, !dbg !9710

if.else152:                                       ; preds = %if.end133
  %173 = load i32, i32* %attIndex, align 4, !dbg !9711
  %inc153 = add nsw i32 %173, 1, !dbg !9711
  store i32 %inc153, i32* %attIndex, align 4, !dbg !9711
  br label %if.end154

if.end154:                                        ; preds = %if.else152, %if.end151
  br label %for.inc155, !dbg !9712

for.inc155:                                       ; preds = %if.end154
  %174 = load i32, i32* %i, align 4, !dbg !9713
  %inc156 = add nsw i32 %174, 1, !dbg !9713
  store i32 %inc156, i32* %i, align 4, !dbg !9713
  br label %for.cond, !dbg !9715

for.end157:                                       ; preds = %for.cond
  %175 = load i32, i32* %attIndex, align 4, !dbg !9716
  %176 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9717
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %176, i32 0, i32 72, !dbg !9717
  store i32 %175, i32* %m_nSpecifiedAtts, align 4, !dbg !9718
  %177 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9719
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %177, i32 0, i32 2, !dbg !9721
  %178 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8, !dbg !9721
  %tobool158 = icmp ne %struct.attribute_id* %178, null, !dbg !9719
  br i1 %tobool158, label %land.lhs.true159, label %if.else181, !dbg !9722

land.lhs.true159:                                 ; preds = %for.end157
  %179 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9723
  %idAtt160 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %179, i32 0, i32 2, !dbg !9725
  %180 = load %struct.attribute_id*, %struct.attribute_id** %idAtt160, align 8, !dbg !9725
  %name161 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %180, i32 0, i32 0, !dbg !9726
  %181 = load i8*, i8** %name161, align 8, !dbg !9726
  %arrayidx162 = getelementptr inbounds i8, i8* %181, i64 -1, !dbg !9727
  %182 = load i8, i8* %arrayidx162, align 1, !dbg !9727
  %conv163 = sext i8 %182 to i32, !dbg !9727
  %tobool164 = icmp ne i32 %conv163, 0, !dbg !9727
  br i1 %tobool164, label %if.then165, label %if.else181, !dbg !9728

if.then165:                                       ; preds = %land.lhs.true159
  store i32 0, i32* %i, align 4, !dbg !9729
  br label %for.cond166, !dbg !9732

for.cond166:                                      ; preds = %for.inc178, %if.then165
  %183 = load i32, i32* %i, align 4, !dbg !9733
  %184 = load i32, i32* %attIndex, align 4, !dbg !9736
  %cmp167 = icmp slt i32 %183, %184, !dbg !9737
  br i1 %cmp167, label %for.body169, label %for.end180, !dbg !9738

for.body169:                                      ; preds = %for.cond166
  %185 = load i32, i32* %i, align 4, !dbg !9739
  %idxprom170 = sext i32 %185 to i64, !dbg !9741
  %186 = load i8**, i8*** %appAtts, align 8, !dbg !9741
  %arrayidx171 = getelementptr inbounds i8*, i8** %186, i64 %idxprom170, !dbg !9741
  %187 = load i8*, i8** %arrayidx171, align 8, !dbg !9741
  %188 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9742
  %idAtt172 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %188, i32 0, i32 2, !dbg !9743
  %189 = load %struct.attribute_id*, %struct.attribute_id** %idAtt172, align 8, !dbg !9743
  %name173 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %189, i32 0, i32 0, !dbg !9744
  %190 = load i8*, i8** %name173, align 8, !dbg !9744
  %cmp174 = icmp eq i8* %187, %190, !dbg !9745
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !9746

if.then176:                                       ; preds = %for.body169
  %191 = load i32, i32* %i, align 4, !dbg !9747
  %192 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9749
  %m_idAttIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %192, i32 0, i32 73, !dbg !9749
  store i32 %191, i32* %m_idAttIndex, align 8, !dbg !9750
  br label %for.end180, !dbg !9751

if.end177:                                        ; preds = %for.body169
  br label %for.inc178, !dbg !9752

for.inc178:                                       ; preds = %if.end177
  %193 = load i32, i32* %i, align 4, !dbg !9754
  %add179 = add nsw i32 %193, 2, !dbg !9754
  store i32 %add179, i32* %i, align 4, !dbg !9754
  br label %for.cond166, !dbg !9756

for.end180:                                       ; preds = %if.then176, %for.cond166
  br label %if.end183, !dbg !9757

if.else181:                                       ; preds = %land.lhs.true159, %for.end157
  %194 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9758
  %m_idAttIndex182 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %194, i32 0, i32 73, !dbg !9758
  store i32 -1, i32* %m_idAttIndex182, align 8, !dbg !9759
  br label %if.end183

if.end183:                                        ; preds = %if.else181, %for.end180
  store i32 0, i32* %i, align 4, !dbg !9760
  br label %for.cond184, !dbg !9762

for.cond184:                                      ; preds = %for.inc245, %if.end183
  %195 = load i32, i32* %i, align 4, !dbg !9763
  %196 = load i32, i32* %nDefaultAtts, align 4, !dbg !9766
  %cmp185 = icmp slt i32 %195, %196, !dbg !9767
  br i1 %cmp185, label %for.body187, label %for.end247, !dbg !9768

for.body187:                                      ; preds = %for.cond184
  call void @llvm.dbg.declare(metadata %struct.DEFAULT_ATTRIBUTE** %da, metadata !9769, metadata !1076), !dbg !9773
  %197 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !9774
  %defaultAtts188 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %197, i32 0, i32 5, !dbg !9775
  %198 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts188, align 8, !dbg !9775
  %199 = load i32, i32* %i, align 4, !dbg !9776
  %idx.ext189 = sext i32 %199 to i64, !dbg !9777
  %add.ptr190 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %198, i64 %idx.ext189, !dbg !9777
  store %struct.DEFAULT_ATTRIBUTE* %add.ptr190, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9773
  %200 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9778
  %id191 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %200, i32 0, i32 0, !dbg !9780
  %201 = load %struct.attribute_id*, %struct.attribute_id** %id191, align 8, !dbg !9780
  %name192 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %201, i32 0, i32 0, !dbg !9781
  %202 = load i8*, i8** %name192, align 8, !dbg !9781
  %arrayidx193 = getelementptr inbounds i8, i8* %202, i64 -1, !dbg !9782
  %203 = load i8, i8* %arrayidx193, align 1, !dbg !9782
  %tobool194 = icmp ne i8 %203, 0, !dbg !9782
  br i1 %tobool194, label %if.end244, label %land.lhs.true195, !dbg !9783

land.lhs.true195:                                 ; preds = %for.body187
  %204 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9784
  %value = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %204, i32 0, i32 2, !dbg !9786
  %205 = load i8*, i8** %value, align 8, !dbg !9786
  %tobool196 = icmp ne i8* %205, null, !dbg !9784
  br i1 %tobool196, label %if.then197, label %if.end244, !dbg !9787

if.then197:                                       ; preds = %land.lhs.true195
  %206 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9788
  %id198 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %206, i32 0, i32 0, !dbg !9791
  %207 = load %struct.attribute_id*, %struct.attribute_id** %id198, align 8, !dbg !9791
  %prefix199 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %207, i32 0, i32 1, !dbg !9792
  %208 = load %struct.prefix*, %struct.prefix** %prefix199, align 8, !dbg !9792
  %tobool200 = icmp ne %struct.prefix* %208, null, !dbg !9788
  br i1 %tobool200, label %if.then201, label %if.else230, !dbg !9793

if.then201:                                       ; preds = %if.then197
  %209 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9794
  %id202 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %209, i32 0, i32 0, !dbg !9797
  %210 = load %struct.attribute_id*, %struct.attribute_id** %id202, align 8, !dbg !9797
  %xmlns203 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %210, i32 0, i32 3, !dbg !9798
  %211 = load i8, i8* %xmlns203, align 1, !dbg !9798
  %tobool204 = icmp ne i8 %211, 0, !dbg !9794
  br i1 %tobool204, label %if.then205, label %if.else215, !dbg !9799

if.then205:                                       ; preds = %if.then201
  call void @llvm.dbg.declare(metadata i32* %result206, metadata !9800, metadata !1076), !dbg !9802
  %212 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9803
  %213 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9804
  %id207 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %213, i32 0, i32 0, !dbg !9805
  %214 = load %struct.attribute_id*, %struct.attribute_id** %id207, align 8, !dbg !9805
  %prefix208 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %214, i32 0, i32 1, !dbg !9806
  %215 = load %struct.prefix*, %struct.prefix** %prefix208, align 8, !dbg !9806
  %216 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9807
  %id209 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %216, i32 0, i32 0, !dbg !9808
  %217 = load %struct.attribute_id*, %struct.attribute_id** %id209, align 8, !dbg !9808
  %218 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9809
  %value210 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %218, i32 0, i32 2, !dbg !9810
  %219 = load i8*, i8** %value210, align 8, !dbg !9810
  %220 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !9811
  %call211 = call i32 @addBinding(%struct.XML_ParserStruct* %212, %struct.prefix* %215, %struct.attribute_id* %217, i8* %219, %struct.binding** %220), !dbg !9812
  store i32 %call211, i32* %result206, align 4, !dbg !9802
  %221 = load i32, i32* %result206, align 4, !dbg !9813
  %tobool212 = icmp ne i32 %221, 0, !dbg !9813
  br i1 %tobool212, label %if.then213, label %if.end214, !dbg !9815

if.then213:                                       ; preds = %if.then205
  %222 = load i32, i32* %result206, align 4, !dbg !9816
  store i32 %222, i32* %retval, align 4, !dbg !9817
  br label %return, !dbg !9817

if.end214:                                        ; preds = %if.then205
  br label %if.end229, !dbg !9818

if.else215:                                       ; preds = %if.then201
  %223 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9819
  %id216 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %223, i32 0, i32 0, !dbg !9821
  %224 = load %struct.attribute_id*, %struct.attribute_id** %id216, align 8, !dbg !9821
  %name217 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %224, i32 0, i32 0, !dbg !9822
  %225 = load i8*, i8** %name217, align 8, !dbg !9822
  %arrayidx218 = getelementptr inbounds i8, i8* %225, i64 -1, !dbg !9823
  store i8 2, i8* %arrayidx218, align 1, !dbg !9824
  %226 = load i32, i32* %nPrefixes, align 4, !dbg !9825
  %inc219 = add nsw i32 %226, 1, !dbg !9825
  store i32 %inc219, i32* %nPrefixes, align 4, !dbg !9825
  %227 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9826
  %id220 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %227, i32 0, i32 0, !dbg !9827
  %228 = load %struct.attribute_id*, %struct.attribute_id** %id220, align 8, !dbg !9827
  %name221 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %228, i32 0, i32 0, !dbg !9828
  %229 = load i8*, i8** %name221, align 8, !dbg !9828
  %230 = load i32, i32* %attIndex, align 4, !dbg !9829
  %inc222 = add nsw i32 %230, 1, !dbg !9829
  store i32 %inc222, i32* %attIndex, align 4, !dbg !9829
  %idxprom223 = sext i32 %230 to i64, !dbg !9830
  %231 = load i8**, i8*** %appAtts, align 8, !dbg !9830
  %arrayidx224 = getelementptr inbounds i8*, i8** %231, i64 %idxprom223, !dbg !9830
  store i8* %229, i8** %arrayidx224, align 8, !dbg !9831
  %232 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9832
  %value225 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %232, i32 0, i32 2, !dbg !9833
  %233 = load i8*, i8** %value225, align 8, !dbg !9833
  %234 = load i32, i32* %attIndex, align 4, !dbg !9834
  %inc226 = add nsw i32 %234, 1, !dbg !9834
  store i32 %inc226, i32* %attIndex, align 4, !dbg !9834
  %idxprom227 = sext i32 %234 to i64, !dbg !9835
  %235 = load i8**, i8*** %appAtts, align 8, !dbg !9835
  %arrayidx228 = getelementptr inbounds i8*, i8** %235, i64 %idxprom227, !dbg !9835
  store i8* %233, i8** %arrayidx228, align 8, !dbg !9836
  br label %if.end229

if.end229:                                        ; preds = %if.else215, %if.end214
  br label %if.end243, !dbg !9837

if.else230:                                       ; preds = %if.then197
  %236 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9838
  %id231 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %236, i32 0, i32 0, !dbg !9840
  %237 = load %struct.attribute_id*, %struct.attribute_id** %id231, align 8, !dbg !9840
  %name232 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %237, i32 0, i32 0, !dbg !9841
  %238 = load i8*, i8** %name232, align 8, !dbg !9841
  %arrayidx233 = getelementptr inbounds i8, i8* %238, i64 -1, !dbg !9842
  store i8 1, i8* %arrayidx233, align 1, !dbg !9843
  %239 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9844
  %id234 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %239, i32 0, i32 0, !dbg !9845
  %240 = load %struct.attribute_id*, %struct.attribute_id** %id234, align 8, !dbg !9845
  %name235 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %240, i32 0, i32 0, !dbg !9846
  %241 = load i8*, i8** %name235, align 8, !dbg !9846
  %242 = load i32, i32* %attIndex, align 4, !dbg !9847
  %inc236 = add nsw i32 %242, 1, !dbg !9847
  store i32 %inc236, i32* %attIndex, align 4, !dbg !9847
  %idxprom237 = sext i32 %242 to i64, !dbg !9848
  %243 = load i8**, i8*** %appAtts, align 8, !dbg !9848
  %arrayidx238 = getelementptr inbounds i8*, i8** %243, i64 %idxprom237, !dbg !9848
  store i8* %241, i8** %arrayidx238, align 8, !dbg !9849
  %244 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8, !dbg !9850
  %value239 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %244, i32 0, i32 2, !dbg !9851
  %245 = load i8*, i8** %value239, align 8, !dbg !9851
  %246 = load i32, i32* %attIndex, align 4, !dbg !9852
  %inc240 = add nsw i32 %246, 1, !dbg !9852
  store i32 %inc240, i32* %attIndex, align 4, !dbg !9852
  %idxprom241 = sext i32 %246 to i64, !dbg !9853
  %247 = load i8**, i8*** %appAtts, align 8, !dbg !9853
  %arrayidx242 = getelementptr inbounds i8*, i8** %247, i64 %idxprom241, !dbg !9853
  store i8* %245, i8** %arrayidx242, align 8, !dbg !9854
  br label %if.end243

if.end243:                                        ; preds = %if.else230, %if.end229
  br label %if.end244, !dbg !9855

if.end244:                                        ; preds = %if.end243, %land.lhs.true195, %for.body187
  br label %for.inc245, !dbg !9856

for.inc245:                                       ; preds = %if.end244
  %248 = load i32, i32* %i, align 4, !dbg !9857
  %inc246 = add nsw i32 %248, 1, !dbg !9857
  store i32 %inc246, i32* %i, align 4, !dbg !9857
  br label %for.cond184, !dbg !9859

for.end247:                                       ; preds = %for.cond184
  %249 = load i32, i32* %attIndex, align 4, !dbg !9860
  %idxprom248 = sext i32 %249 to i64, !dbg !9861
  %250 = load i8**, i8*** %appAtts, align 8, !dbg !9861
  %arrayidx249 = getelementptr inbounds i8*, i8** %250, i64 %idxprom248, !dbg !9861
  store i8* null, i8** %arrayidx249, align 8, !dbg !9862
  store i32 0, i32* %i, align 4, !dbg !9863
  %251 = load i32, i32* %nPrefixes, align 4, !dbg !9864
  %tobool250 = icmp ne i32 %251, 0, !dbg !9864
  br i1 %tobool250, label %if.then251, label %if.end502, !dbg !9866

if.then251:                                       ; preds = %for.end247
  call void @llvm.dbg.declare(metadata i32* %j252, metadata !9867, metadata !1076), !dbg !9869
  call void @llvm.dbg.declare(metadata i64* %version, metadata !9870, metadata !1076), !dbg !9871
  %252 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9872
  %m_nsAttsVersion = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %252, i32 0, i32 76, !dbg !9872
  %253 = load i64, i64* %m_nsAttsVersion, align 8, !dbg !9872
  store i64 %253, i64* %version, align 8, !dbg !9871
  call void @llvm.dbg.declare(metadata i32* %nsAttsSize, metadata !9873, metadata !1076), !dbg !9874
  %254 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9875
  %m_nsAttsPower = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %254, i32 0, i32 77, !dbg !9875
  %255 = load i8, i8* %m_nsAttsPower, align 8, !dbg !9875
  %conv253 = zext i8 %255 to i32, !dbg !9875
  %shl = shl i32 1, %conv253, !dbg !9876
  store i32 %shl, i32* %nsAttsSize, align 4, !dbg !9874
  %256 = load i32, i32* %nPrefixes, align 4, !dbg !9877
  %shl254 = shl i32 %256, 1, !dbg !9879
  %257 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9880
  %m_nsAttsPower255 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %257, i32 0, i32 77, !dbg !9880
  %258 = load i8, i8* %m_nsAttsPower255, align 8, !dbg !9880
  %conv256 = zext i8 %258 to i32, !dbg !9880
  %shr = ashr i32 %shl254, %conv256, !dbg !9881
  %tobool257 = icmp ne i32 %shr, 0, !dbg !9881
  br i1 %tobool257, label %if.then258, label %if.end284, !dbg !9882

if.then258:                                       ; preds = %if.then251
  call void @llvm.dbg.declare(metadata %struct.NS_ATT** %temp259, metadata !9883, metadata !1076), !dbg !9885
  br label %while.cond, !dbg !9886

while.cond:                                       ; preds = %while.body, %if.then258
  %259 = load i32, i32* %nPrefixes, align 4, !dbg !9887
  %260 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9889
  %m_nsAttsPower260 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %260, i32 0, i32 77, !dbg !9889
  %261 = load i8, i8* %m_nsAttsPower260, align 8, !dbg !9890
  %inc261 = add i8 %261, 1, !dbg !9890
  store i8 %inc261, i8* %m_nsAttsPower260, align 8, !dbg !9890
  %conv262 = zext i8 %261 to i32, !dbg !9889
  %shr263 = ashr i32 %259, %conv262, !dbg !9891
  %tobool264 = icmp ne i32 %shr263, 0, !dbg !9892
  br i1 %tobool264, label %while.body, label %while.end, !dbg !9892

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !9893

while.end:                                        ; preds = %while.cond
  %262 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9895
  %m_nsAttsPower265 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %262, i32 0, i32 77, !dbg !9895
  %263 = load i8, i8* %m_nsAttsPower265, align 8, !dbg !9895
  %conv266 = zext i8 %263 to i32, !dbg !9895
  %cmp267 = icmp slt i32 %conv266, 3, !dbg !9897
  br i1 %cmp267, label %if.then269, label %if.end271, !dbg !9898

if.then269:                                       ; preds = %while.end
  %264 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9899
  %m_nsAttsPower270 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %264, i32 0, i32 77, !dbg !9899
  store i8 3, i8* %m_nsAttsPower270, align 8, !dbg !9900
  br label %if.end271, !dbg !9899

if.end271:                                        ; preds = %if.then269, %while.end
  %265 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9901
  %m_nsAttsPower272 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %265, i32 0, i32 77, !dbg !9901
  %266 = load i8, i8* %m_nsAttsPower272, align 8, !dbg !9901
  %conv273 = zext i8 %266 to i32, !dbg !9901
  %shl274 = shl i32 1, %conv273, !dbg !9902
  store i32 %shl274, i32* %nsAttsSize, align 4, !dbg !9903
  %267 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9904
  %m_mem275 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %267, i32 0, i32 3, !dbg !9904
  %realloc_fcn276 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem275, i32 0, i32 1, !dbg !9904
  %268 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn276, align 8, !dbg !9904
  %269 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9904
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %269, i32 0, i32 75, !dbg !9904
  %270 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts, align 8, !dbg !9904
  %271 = bitcast %struct.NS_ATT* %270 to i8*, !dbg !9904
  %272 = load i32, i32* %nsAttsSize, align 4, !dbg !9904
  %conv277 = sext i32 %272 to i64, !dbg !9904
  %mul278 = mul i64 %conv277, 24, !dbg !9904
  %call279 = call i8* %268(i8* %271, i64 %mul278), !dbg !9904
  %273 = bitcast i8* %call279 to %struct.NS_ATT*, !dbg !9905
  store %struct.NS_ATT* %273, %struct.NS_ATT** %temp259, align 8, !dbg !9906
  %274 = load %struct.NS_ATT*, %struct.NS_ATT** %temp259, align 8, !dbg !9907
  %tobool280 = icmp ne %struct.NS_ATT* %274, null, !dbg !9907
  br i1 %tobool280, label %if.end282, label %if.then281, !dbg !9909

if.then281:                                       ; preds = %if.end271
  store i32 1, i32* %retval, align 4, !dbg !9910
  br label %return, !dbg !9910

if.end282:                                        ; preds = %if.end271
  %275 = load %struct.NS_ATT*, %struct.NS_ATT** %temp259, align 8, !dbg !9911
  %276 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9912
  %m_nsAtts283 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %276, i32 0, i32 75, !dbg !9912
  store %struct.NS_ATT* %275, %struct.NS_ATT** %m_nsAtts283, align 8, !dbg !9913
  store i64 0, i64* %version, align 8, !dbg !9914
  br label %if.end284, !dbg !9915

if.end284:                                        ; preds = %if.end282, %if.then251
  %277 = load i64, i64* %version, align 8, !dbg !9916
  %tobool285 = icmp ne i64 %277, 0, !dbg !9916
  br i1 %tobool285, label %if.end297, label %if.then286, !dbg !9918

if.then286:                                       ; preds = %if.end284
  store i64 4294967295, i64* %version, align 8, !dbg !9919
  %278 = load i32, i32* %nsAttsSize, align 4, !dbg !9921
  store i32 %278, i32* %j252, align 4, !dbg !9923
  br label %for.cond287, !dbg !9924

for.cond287:                                      ; preds = %for.body290, %if.then286
  %279 = load i32, i32* %j252, align 4, !dbg !9925
  %cmp288 = icmp ne i32 %279, 0, !dbg !9928
  br i1 %cmp288, label %for.body290, label %for.end296, !dbg !9929

for.body290:                                      ; preds = %for.cond287
  %280 = load i64, i64* %version, align 8, !dbg !9930
  %281 = load i32, i32* %j252, align 4, !dbg !9931
  %dec291 = add nsw i32 %281, -1, !dbg !9931
  store i32 %dec291, i32* %j252, align 4, !dbg !9931
  %idxprom292 = sext i32 %dec291 to i64, !dbg !9932
  %282 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9932
  %m_nsAtts293 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %282, i32 0, i32 75, !dbg !9932
  %283 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts293, align 8, !dbg !9932
  %arrayidx294 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %283, i64 %idxprom292, !dbg !9932
  %version295 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx294, i32 0, i32 0, !dbg !9933
  store i64 %280, i64* %version295, align 8, !dbg !9934
  br label %for.cond287, !dbg !9935

for.end296:                                       ; preds = %for.cond287
  br label %if.end297, !dbg !9937

if.end297:                                        ; preds = %for.end296, %if.end284
  %284 = load i64, i64* %version, align 8, !dbg !9938
  %dec298 = add i64 %284, -1, !dbg !9938
  store i64 %dec298, i64* %version, align 8, !dbg !9938
  %285 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9939
  %m_nsAttsVersion299 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %285, i32 0, i32 76, !dbg !9939
  store i64 %dec298, i64* %m_nsAttsVersion299, align 8, !dbg !9940
  br label %for.cond300, !dbg !9941

for.cond300:                                      ; preds = %for.inc499, %if.end297
  %286 = load i32, i32* %i, align 4, !dbg !9942
  %287 = load i32, i32* %attIndex, align 4, !dbg !9946
  %cmp301 = icmp slt i32 %286, %287, !dbg !9947
  br i1 %cmp301, label %for.body303, label %for.end501, !dbg !9948

for.body303:                                      ; preds = %for.cond300
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9949, metadata !1076), !dbg !9951
  %288 = load i32, i32* %i, align 4, !dbg !9952
  %idxprom304 = sext i32 %288 to i64, !dbg !9953
  %289 = load i8**, i8*** %appAtts, align 8, !dbg !9953
  %arrayidx305 = getelementptr inbounds i8*, i8** %289, i64 %idxprom304, !dbg !9953
  %290 = load i8*, i8** %arrayidx305, align 8, !dbg !9953
  store i8* %290, i8** %s, align 8, !dbg !9951
  %291 = load i8*, i8** %s, align 8, !dbg !9954
  %arrayidx306 = getelementptr inbounds i8, i8* %291, i64 -1, !dbg !9954
  %292 = load i8, i8* %arrayidx306, align 1, !dbg !9954
  %conv307 = sext i8 %292 to i32, !dbg !9954
  %cmp308 = icmp eq i32 %conv307, 2, !dbg !9956
  br i1 %cmp308, label %if.then310, label %if.else496, !dbg !9957

if.then310:                                       ; preds = %for.body303
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %id311, metadata !9958, metadata !1076), !dbg !9960
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !9961, metadata !1076), !dbg !9964
  call void @llvm.dbg.declare(metadata i64* %uriHash, metadata !9965, metadata !1076), !dbg !9966
  %293 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9967
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %293, i32 0, i32 86, !dbg !9967
  %294 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !9967
  store i64 %294, i64* %uriHash, align 8, !dbg !9966
  %295 = load i8*, i8** %s, align 8, !dbg !9968
  %arrayidx312 = getelementptr inbounds i8, i8* %295, i64 -1, !dbg !9969
  store i8 0, i8* %arrayidx312, align 1, !dbg !9970
  %296 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !9971
  %297 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !9972
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %297, i32 0, i32 2, !dbg !9973
  %298 = load i8*, i8** %s, align 8, !dbg !9974
  %call313 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %296, %struct.HASH_TABLE* %attributeIds, i8* %298, i64 0), !dbg !9975
  %299 = bitcast %struct.NAMED* %call313 to %struct.attribute_id*, !dbg !9976
  store %struct.attribute_id* %299, %struct.attribute_id** %id311, align 8, !dbg !9977
  %300 = load %struct.attribute_id*, %struct.attribute_id** %id311, align 8, !dbg !9978
  %tobool314 = icmp ne %struct.attribute_id* %300, null, !dbg !9978
  br i1 %tobool314, label %lor.lhs.false, label %if.then317, !dbg !9980

lor.lhs.false:                                    ; preds = %if.then310
  %301 = load %struct.attribute_id*, %struct.attribute_id** %id311, align 8, !dbg !9981
  %prefix315 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %301, i32 0, i32 1, !dbg !9983
  %302 = load %struct.prefix*, %struct.prefix** %prefix315, align 8, !dbg !9983
  %tobool316 = icmp ne %struct.prefix* %302, null, !dbg !9981
  br i1 %tobool316, label %if.end318, label %if.then317, !dbg !9984

if.then317:                                       ; preds = %lor.lhs.false, %if.then310
  store i32 1, i32* %retval, align 4, !dbg !9985
  br label %return, !dbg !9985

if.end318:                                        ; preds = %lor.lhs.false
  %303 = load %struct.attribute_id*, %struct.attribute_id** %id311, align 8, !dbg !9986
  %prefix319 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %303, i32 0, i32 1, !dbg !9987
  %304 = load %struct.prefix*, %struct.prefix** %prefix319, align 8, !dbg !9987
  %binding320 = getelementptr inbounds %struct.prefix, %struct.prefix* %304, i32 0, i32 1, !dbg !9988
  %305 = load %struct.binding*, %struct.binding** %binding320, align 8, !dbg !9988
  store %struct.binding* %305, %struct.binding** %b, align 8, !dbg !9989
  %306 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !9990
  %tobool321 = icmp ne %struct.binding* %306, null, !dbg !9990
  br i1 %tobool321, label %if.end323, label %if.then322, !dbg !9992

if.then322:                                       ; preds = %if.end318
  store i32 27, i32* %retval, align 4, !dbg !9993
  br label %return, !dbg !9993

if.end323:                                        ; preds = %if.end318
  store i32 0, i32* %j252, align 4, !dbg !9994
  br label %for.cond324, !dbg !9996

for.cond324:                                      ; preds = %for.inc346, %if.end323
  %307 = load i32, i32* %j252, align 4, !dbg !9997
  %308 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !10000
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %308, i32 0, i32 5, !dbg !10001
  %309 = load i32, i32* %uriLen, align 8, !dbg !10001
  %cmp325 = icmp slt i32 %307, %309, !dbg !10002
  br i1 %cmp325, label %for.body327, label %for.end348, !dbg !10003

for.body327:                                      ; preds = %for.cond324
  call void @llvm.dbg.declare(metadata i8* %c, metadata !10004, metadata !1076), !dbg !10006
  %310 = load i32, i32* %j252, align 4, !dbg !10007
  %idxprom328 = sext i32 %310 to i64, !dbg !10008
  %311 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !10008
  %uri329 = getelementptr inbounds %struct.binding, %struct.binding* %311, i32 0, i32 4, !dbg !10009
  %312 = load i8*, i8** %uri329, align 8, !dbg !10009
  %arrayidx330 = getelementptr inbounds i8, i8* %312, i64 %idxprom328, !dbg !10008
  %313 = load i8, i8* %arrayidx330, align 1, !dbg !10008
  store i8 %313, i8* %c, align 1, !dbg !10006
  %314 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10010
  %m_tempPool331 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %314, i32 0, i32 79, !dbg !10010
  %ptr332 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool331, i32 0, i32 3, !dbg !10010
  %315 = load i8*, i8** %ptr332, align 8, !dbg !10010
  %316 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10010
  %m_tempPool333 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %316, i32 0, i32 79, !dbg !10010
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool333, i32 0, i32 2, !dbg !10010
  %317 = load i8*, i8** %end, align 8, !dbg !10010
  %cmp334 = icmp eq i8* %315, %317, !dbg !10010
  br i1 %cmp334, label %land.lhs.true336, label %cond.false, !dbg !10010

land.lhs.true336:                                 ; preds = %for.body327
  %318 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10012
  %m_tempPool337 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %318, i32 0, i32 79, !dbg !10012
  %call338 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool337), !dbg !10012
  %tobool339 = icmp ne i8 %call338, 0, !dbg !10012
  br i1 %tobool339, label %cond.false, label %cond.true, !dbg !10014

cond.true:                                        ; preds = %land.lhs.true336
  br i1 false, label %if.end343, label %if.then342, !dbg !10015

cond.false:                                       ; preds = %land.lhs.true336, %for.body327
  %319 = load i8, i8* %c, align 1, !dbg !10017
  %320 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10017
  %m_tempPool340 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %320, i32 0, i32 79, !dbg !10017
  %ptr341 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool340, i32 0, i32 3, !dbg !10017
  %321 = load i8*, i8** %ptr341, align 8, !dbg !10017
  %incdec.ptr = getelementptr inbounds i8, i8* %321, i32 1, !dbg !10017
  store i8* %incdec.ptr, i8** %ptr341, align 8, !dbg !10017
  store i8 %319, i8* %321, align 1, !dbg !10017
  br i1 true, label %if.end343, label %if.then342, !dbg !10019

if.then342:                                       ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, align 4, !dbg !10020
  br label %return, !dbg !10020

if.end343:                                        ; preds = %cond.false, %cond.true
  %322 = load i64, i64* %uriHash, align 8, !dbg !10021
  %mul344 = mul i64 %322, 1000003, !dbg !10021
  %323 = load i8, i8* %c, align 1, !dbg !10021
  %conv345 = zext i8 %323 to i64, !dbg !10021
  %xor = xor i64 %mul344, %conv345, !dbg !10021
  store i64 %xor, i64* %uriHash, align 8, !dbg !10022
  br label %for.inc346, !dbg !10023

for.inc346:                                       ; preds = %if.end343
  %324 = load i32, i32* %j252, align 4, !dbg !10024
  %inc347 = add nsw i32 %324, 1, !dbg !10024
  store i32 %inc347, i32* %j252, align 4, !dbg !10024
  br label %for.cond324, !dbg !10026

for.end348:                                       ; preds = %for.cond324
  br label %while.cond349, !dbg !10027

while.cond349:                                    ; preds = %while.body354, %for.end348
  %325 = load i8*, i8** %s, align 8, !dbg !10028
  %incdec.ptr350 = getelementptr inbounds i8, i8* %325, i32 1, !dbg !10028
  store i8* %incdec.ptr350, i8** %s, align 8, !dbg !10028
  %326 = load i8, i8* %325, align 1, !dbg !10030
  %conv351 = sext i8 %326 to i32, !dbg !10030
  %cmp352 = icmp ne i32 %conv351, 58, !dbg !10031
  br i1 %cmp352, label %while.body354, label %while.end355, !dbg !10032

while.body354:                                    ; preds = %while.cond349
  br label %while.cond349, !dbg !10033

while.end355:                                     ; preds = %while.cond349
  br label %do.body, !dbg !10035

do.body:                                          ; preds = %do.cond, %while.end355
  call void @llvm.dbg.declare(metadata i8* %c356, metadata !10036, metadata !1076), !dbg !10038
  %327 = load i8*, i8** %s, align 8, !dbg !10039
  %328 = load i8, i8* %327, align 1, !dbg !10040
  store i8 %328, i8* %c356, align 1, !dbg !10038
  %329 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10041
  %m_tempPool357 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %329, i32 0, i32 79, !dbg !10041
  %ptr358 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool357, i32 0, i32 3, !dbg !10041
  %330 = load i8*, i8** %ptr358, align 8, !dbg !10041
  %331 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10041
  %m_tempPool359 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %331, i32 0, i32 79, !dbg !10041
  %end360 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool359, i32 0, i32 2, !dbg !10041
  %332 = load i8*, i8** %end360, align 8, !dbg !10041
  %cmp361 = icmp eq i8* %330, %332, !dbg !10041
  br i1 %cmp361, label %land.lhs.true363, label %cond.false368, !dbg !10041

land.lhs.true363:                                 ; preds = %do.body
  %333 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10043
  %m_tempPool364 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %333, i32 0, i32 79, !dbg !10043
  %call365 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool364), !dbg !10043
  %tobool366 = icmp ne i8 %call365, 0, !dbg !10043
  br i1 %tobool366, label %cond.false368, label %cond.true367, !dbg !10045

cond.true367:                                     ; preds = %land.lhs.true363
  br i1 false, label %if.end373, label %if.then372, !dbg !10046

cond.false368:                                    ; preds = %land.lhs.true363, %do.body
  %334 = load i8*, i8** %s, align 8, !dbg !10048
  %335 = load i8, i8* %334, align 1, !dbg !10048
  %336 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10048
  %m_tempPool369 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %336, i32 0, i32 79, !dbg !10048
  %ptr370 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool369, i32 0, i32 3, !dbg !10048
  %337 = load i8*, i8** %ptr370, align 8, !dbg !10048
  %incdec.ptr371 = getelementptr inbounds i8, i8* %337, i32 1, !dbg !10048
  store i8* %incdec.ptr371, i8** %ptr370, align 8, !dbg !10048
  store i8 %335, i8* %337, align 1, !dbg !10048
  br i1 true, label %if.end373, label %if.then372, !dbg !10050

if.then372:                                       ; preds = %cond.false368, %cond.true367
  store i32 1, i32* %retval, align 4, !dbg !10051
  br label %return, !dbg !10051

if.end373:                                        ; preds = %cond.false368, %cond.true367
  %338 = load i64, i64* %uriHash, align 8, !dbg !10052
  %mul374 = mul i64 %338, 1000003, !dbg !10052
  %339 = load i8, i8* %c356, align 1, !dbg !10052
  %conv375 = zext i8 %339 to i64, !dbg !10052
  %xor376 = xor i64 %mul374, %conv375, !dbg !10052
  store i64 %xor376, i64* %uriHash, align 8, !dbg !10053
  br label %do.cond, !dbg !10054

do.cond:                                          ; preds = %if.end373
  %340 = load i8*, i8** %s, align 8, !dbg !10055
  %incdec.ptr377 = getelementptr inbounds i8, i8* %340, i32 1, !dbg !10055
  store i8* %incdec.ptr377, i8** %s, align 8, !dbg !10055
  %341 = load i8, i8* %340, align 1, !dbg !10056
  %tobool378 = icmp ne i8 %341, 0, !dbg !10057
  br i1 %tobool378, label %do.body, label %do.end, !dbg !10057

do.end:                                           ; preds = %do.cond
  call void @llvm.dbg.declare(metadata i8* %step, metadata !10058, metadata !1076), !dbg !10060
  store i8 0, i8* %step, align 1, !dbg !10060
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !10061, metadata !1076), !dbg !10062
  %342 = load i32, i32* %nsAttsSize, align 4, !dbg !10063
  %sub = sub nsw i32 %342, 1, !dbg !10064
  %conv379 = sext i32 %sub to i64, !dbg !10063
  store i64 %conv379, i64* %mask, align 8, !dbg !10062
  %343 = load i64, i64* %uriHash, align 8, !dbg !10065
  %344 = load i64, i64* %mask, align 8, !dbg !10066
  %and = and i64 %343, %344, !dbg !10067
  %conv380 = trunc i64 %and to i32, !dbg !10065
  store i32 %conv380, i32* %j252, align 4, !dbg !10068
  br label %while.cond381, !dbg !10069

while.cond381:                                    ; preds = %cond.end, %do.end
  %345 = load i32, i32* %j252, align 4, !dbg !10070
  %idxprom382 = sext i32 %345 to i64, !dbg !10072
  %346 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10072
  %m_nsAtts383 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %346, i32 0, i32 75, !dbg !10072
  %347 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts383, align 8, !dbg !10072
  %arrayidx384 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %347, i64 %idxprom382, !dbg !10072
  %version385 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx384, i32 0, i32 0, !dbg !10073
  %348 = load i64, i64* %version385, align 8, !dbg !10073
  %349 = load i64, i64* %version, align 8, !dbg !10074
  %cmp386 = icmp eq i64 %348, %349, !dbg !10075
  br i1 %cmp386, label %while.body388, label %while.end440, !dbg !10076

while.body388:                                    ; preds = %while.cond381
  %350 = load i64, i64* %uriHash, align 8, !dbg !10077
  %351 = load i32, i32* %j252, align 4, !dbg !10080
  %idxprom389 = sext i32 %351 to i64, !dbg !10081
  %352 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10081
  %m_nsAtts390 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %352, i32 0, i32 75, !dbg !10081
  %353 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts390, align 8, !dbg !10081
  %arrayidx391 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %353, i64 %idxprom389, !dbg !10081
  %hash = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx391, i32 0, i32 1, !dbg !10082
  %354 = load i64, i64* %hash, align 8, !dbg !10082
  %cmp392 = icmp eq i64 %350, %354, !dbg !10083
  br i1 %cmp392, label %if.then394, label %if.end418, !dbg !10084

if.then394:                                       ; preds = %while.body388
  call void @llvm.dbg.declare(metadata i8** %s1, metadata !10085, metadata !1076), !dbg !10087
  %355 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10088
  %m_tempPool395 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %355, i32 0, i32 79, !dbg !10088
  %start396 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool395, i32 0, i32 4, !dbg !10088
  %356 = load i8*, i8** %start396, align 8, !dbg !10088
  store i8* %356, i8** %s1, align 8, !dbg !10087
  call void @llvm.dbg.declare(metadata i8** %s2, metadata !10089, metadata !1076), !dbg !10090
  %357 = load i32, i32* %j252, align 4, !dbg !10091
  %idxprom397 = sext i32 %357 to i64, !dbg !10092
  %358 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10092
  %m_nsAtts398 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %358, i32 0, i32 75, !dbg !10092
  %359 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts398, align 8, !dbg !10092
  %arrayidx399 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %359, i64 %idxprom397, !dbg !10092
  %uriName = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx399, i32 0, i32 2, !dbg !10093
  %360 = load i8*, i8** %uriName, align 8, !dbg !10093
  store i8* %360, i8** %s2, align 8, !dbg !10090
  br label %for.cond400, !dbg !10094

for.cond400:                                      ; preds = %for.inc409, %if.then394
  %361 = load i8*, i8** %s1, align 8, !dbg !10095
  %362 = load i8, i8* %361, align 1, !dbg !10099
  %conv401 = sext i8 %362 to i32, !dbg !10099
  %363 = load i8*, i8** %s2, align 8, !dbg !10100
  %364 = load i8, i8* %363, align 1, !dbg !10101
  %conv402 = sext i8 %364 to i32, !dbg !10101
  %cmp403 = icmp eq i32 %conv401, %conv402, !dbg !10102
  br i1 %cmp403, label %land.rhs, label %land.end, !dbg !10103

land.rhs:                                         ; preds = %for.cond400
  %365 = load i8*, i8** %s1, align 8, !dbg !10104
  %366 = load i8, i8* %365, align 1, !dbg !10106
  %conv405 = sext i8 %366 to i32, !dbg !10106
  %cmp406 = icmp ne i32 %conv405, 0, !dbg !10107
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond400
  %367 = phi i1 [ false, %for.cond400 ], [ %cmp406, %land.rhs ]
  br i1 %367, label %for.body408, label %for.end412, !dbg !10108

for.body408:                                      ; preds = %land.end
  br label %for.inc409, !dbg !10110

for.inc409:                                       ; preds = %for.body408
  %368 = load i8*, i8** %s1, align 8, !dbg !10112
  %incdec.ptr410 = getelementptr inbounds i8, i8* %368, i32 1, !dbg !10112
  store i8* %incdec.ptr410, i8** %s1, align 8, !dbg !10112
  %369 = load i8*, i8** %s2, align 8, !dbg !10114
  %incdec.ptr411 = getelementptr inbounds i8, i8* %369, i32 1, !dbg !10114
  store i8* %incdec.ptr411, i8** %s2, align 8, !dbg !10114
  br label %for.cond400, !dbg !10115

for.end412:                                       ; preds = %land.end
  %370 = load i8*, i8** %s1, align 8, !dbg !10116
  %371 = load i8, i8* %370, align 1, !dbg !10118
  %conv413 = sext i8 %371 to i32, !dbg !10118
  %cmp414 = icmp eq i32 %conv413, 0, !dbg !10119
  br i1 %cmp414, label %if.then416, label %if.end417, !dbg !10120

if.then416:                                       ; preds = %for.end412
  store i32 8, i32* %retval, align 4, !dbg !10121
  br label %return, !dbg !10121

if.end417:                                        ; preds = %for.end412
  br label %if.end418, !dbg !10122

if.end418:                                        ; preds = %if.end417, %while.body388
  %372 = load i8, i8* %step, align 1, !dbg !10123
  %tobool419 = icmp ne i8 %372, 0, !dbg !10123
  br i1 %tobool419, label %if.end429, label %if.then420, !dbg !10125

if.then420:                                       ; preds = %if.end418
  %373 = load i64, i64* %uriHash, align 8, !dbg !10126
  %374 = load i64, i64* %mask, align 8, !dbg !10126
  %neg = xor i64 %374, -1, !dbg !10126
  %and421 = and i64 %373, %neg, !dbg !10126
  %375 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10126
  %m_nsAttsPower422 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %375, i32 0, i32 77, !dbg !10126
  %376 = load i8, i8* %m_nsAttsPower422, align 8, !dbg !10126
  %conv423 = zext i8 %376 to i32, !dbg !10126
  %sub424 = sub nsw i32 %conv423, 1, !dbg !10126
  %sh_prom = zext i32 %sub424 to i64, !dbg !10126
  %shr425 = lshr i64 %and421, %sh_prom, !dbg !10126
  %377 = load i64, i64* %mask, align 8, !dbg !10126
  %shr426 = lshr i64 %377, 2, !dbg !10126
  %and427 = and i64 %shr425, %shr426, !dbg !10126
  %or = or i64 %and427, 1, !dbg !10126
  %conv428 = trunc i64 %or to i8, !dbg !10126
  store i8 %conv428, i8* %step, align 1, !dbg !10127
  br label %if.end429, !dbg !10128

if.end429:                                        ; preds = %if.then420, %if.end418
  %378 = load i32, i32* %j252, align 4, !dbg !10129
  %379 = load i8, i8* %step, align 1, !dbg !10130
  %conv430 = zext i8 %379 to i32, !dbg !10130
  %cmp431 = icmp slt i32 %378, %conv430, !dbg !10131
  br i1 %cmp431, label %cond.true433, label %cond.false437, !dbg !10129

cond.true433:                                     ; preds = %if.end429
  %380 = load i32, i32* %nsAttsSize, align 4, !dbg !10132
  %381 = load i8, i8* %step, align 1, !dbg !10134
  %conv434 = zext i8 %381 to i32, !dbg !10134
  %sub435 = sub nsw i32 %380, %conv434, !dbg !10135
  %382 = load i32, i32* %j252, align 4, !dbg !10136
  %add436 = add nsw i32 %382, %sub435, !dbg !10136
  store i32 %add436, i32* %j252, align 4, !dbg !10136
  br label %cond.end, !dbg !10137

cond.false437:                                    ; preds = %if.end429
  %383 = load i8, i8* %step, align 1, !dbg !10138
  %conv438 = zext i8 %383 to i32, !dbg !10138
  %384 = load i32, i32* %j252, align 4, !dbg !10140
  %sub439 = sub nsw i32 %384, %conv438, !dbg !10140
  store i32 %sub439, i32* %j252, align 4, !dbg !10140
  br label %cond.end, !dbg !10141

cond.end:                                         ; preds = %cond.false437, %cond.true433
  %cond = phi i32 [ %add436, %cond.true433 ], [ %sub439, %cond.false437 ], !dbg !10142
  br label %while.cond381, !dbg !10144

while.end440:                                     ; preds = %while.cond381
  %385 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10146
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %385, i32 0, i32 39, !dbg !10146
  %386 = load i8, i8* %m_ns_triplets, align 1, !dbg !10146
  %tobool441 = icmp ne i8 %386, 0, !dbg !10146
  br i1 %tobool441, label %if.then442, label %if.end470, !dbg !10148

if.then442:                                       ; preds = %while.end440
  %387 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10149
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %387, i32 0, i32 83, !dbg !10149
  %388 = load i8, i8* %m_namespaceSeparator, align 4, !dbg !10149
  %389 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10151
  %m_tempPool443 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %389, i32 0, i32 79, !dbg !10151
  %ptr444 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool443, i32 0, i32 3, !dbg !10152
  %390 = load i8*, i8** %ptr444, align 8, !dbg !10152
  %arrayidx445 = getelementptr inbounds i8, i8* %390, i64 -1, !dbg !10151
  store i8 %388, i8* %arrayidx445, align 1, !dbg !10153
  %391 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !10154
  %prefix446 = getelementptr inbounds %struct.binding, %struct.binding* %391, i32 0, i32 0, !dbg !10155
  %392 = load %struct.prefix*, %struct.prefix** %prefix446, align 8, !dbg !10155
  %name447 = getelementptr inbounds %struct.prefix, %struct.prefix* %392, i32 0, i32 0, !dbg !10156
  %393 = load i8*, i8** %name447, align 8, !dbg !10156
  store i8* %393, i8** %s, align 8, !dbg !10157
  br label %do.body448, !dbg !10158

do.body448:                                       ; preds = %do.cond466, %if.then442
  %394 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10159
  %m_tempPool449 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %394, i32 0, i32 79, !dbg !10159
  %ptr450 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool449, i32 0, i32 3, !dbg !10159
  %395 = load i8*, i8** %ptr450, align 8, !dbg !10159
  %396 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10159
  %m_tempPool451 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %396, i32 0, i32 79, !dbg !10159
  %end452 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool451, i32 0, i32 2, !dbg !10159
  %397 = load i8*, i8** %end452, align 8, !dbg !10159
  %cmp453 = icmp eq i8* %395, %397, !dbg !10159
  br i1 %cmp453, label %land.lhs.true455, label %cond.false460, !dbg !10159

land.lhs.true455:                                 ; preds = %do.body448
  %398 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10162
  %m_tempPool456 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %398, i32 0, i32 79, !dbg !10162
  %call457 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool456), !dbg !10162
  %tobool458 = icmp ne i8 %call457, 0, !dbg !10162
  br i1 %tobool458, label %cond.false460, label %cond.true459, !dbg !10164

cond.true459:                                     ; preds = %land.lhs.true455
  br i1 false, label %if.end465, label %if.then464, !dbg !10165

cond.false460:                                    ; preds = %land.lhs.true455, %do.body448
  %399 = load i8*, i8** %s, align 8, !dbg !10167
  %400 = load i8, i8* %399, align 1, !dbg !10167
  %401 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10167
  %m_tempPool461 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %401, i32 0, i32 79, !dbg !10167
  %ptr462 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool461, i32 0, i32 3, !dbg !10167
  %402 = load i8*, i8** %ptr462, align 8, !dbg !10167
  %incdec.ptr463 = getelementptr inbounds i8, i8* %402, i32 1, !dbg !10167
  store i8* %incdec.ptr463, i8** %ptr462, align 8, !dbg !10167
  store i8 %400, i8* %402, align 1, !dbg !10167
  br i1 true, label %if.end465, label %if.then464, !dbg !10169

if.then464:                                       ; preds = %cond.false460, %cond.true459
  store i32 1, i32* %retval, align 4, !dbg !10170
  br label %return, !dbg !10170

if.end465:                                        ; preds = %cond.false460, %cond.true459
  br label %do.cond466, !dbg !10171

do.cond466:                                       ; preds = %if.end465
  %403 = load i8*, i8** %s, align 8, !dbg !10172
  %incdec.ptr467 = getelementptr inbounds i8, i8* %403, i32 1, !dbg !10172
  store i8* %incdec.ptr467, i8** %s, align 8, !dbg !10172
  %404 = load i8, i8* %403, align 1, !dbg !10174
  %tobool468 = icmp ne i8 %404, 0, !dbg !10175
  br i1 %tobool468, label %do.body448, label %do.end469, !dbg !10175

do.end469:                                        ; preds = %do.cond466
  br label %if.end470, !dbg !10176

if.end470:                                        ; preds = %do.end469, %while.end440
  %405 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10177
  %m_tempPool471 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %405, i32 0, i32 79, !dbg !10177
  %start472 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool471, i32 0, i32 4, !dbg !10177
  %406 = load i8*, i8** %start472, align 8, !dbg !10177
  store i8* %406, i8** %s, align 8, !dbg !10178
  %407 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10179
  %m_tempPool473 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %407, i32 0, i32 79, !dbg !10179
  %ptr474 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool473, i32 0, i32 3, !dbg !10179
  %408 = load i8*, i8** %ptr474, align 8, !dbg !10179
  %409 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10179
  %m_tempPool475 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %409, i32 0, i32 79, !dbg !10179
  %start476 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool475, i32 0, i32 4, !dbg !10179
  store i8* %408, i8** %start476, align 8, !dbg !10179
  %410 = load i8*, i8** %s, align 8, !dbg !10180
  %411 = load i32, i32* %i, align 4, !dbg !10181
  %idxprom477 = sext i32 %411 to i64, !dbg !10182
  %412 = load i8**, i8*** %appAtts, align 8, !dbg !10182
  %arrayidx478 = getelementptr inbounds i8*, i8** %412, i64 %idxprom477, !dbg !10182
  store i8* %410, i8** %arrayidx478, align 8, !dbg !10183
  %413 = load i64, i64* %version, align 8, !dbg !10184
  %414 = load i32, i32* %j252, align 4, !dbg !10185
  %idxprom479 = sext i32 %414 to i64, !dbg !10186
  %415 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10186
  %m_nsAtts480 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %415, i32 0, i32 75, !dbg !10186
  %416 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts480, align 8, !dbg !10186
  %arrayidx481 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %416, i64 %idxprom479, !dbg !10186
  %version482 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx481, i32 0, i32 0, !dbg !10187
  store i64 %413, i64* %version482, align 8, !dbg !10188
  %417 = load i64, i64* %uriHash, align 8, !dbg !10189
  %418 = load i32, i32* %j252, align 4, !dbg !10190
  %idxprom483 = sext i32 %418 to i64, !dbg !10191
  %419 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10191
  %m_nsAtts484 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %419, i32 0, i32 75, !dbg !10191
  %420 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts484, align 8, !dbg !10191
  %arrayidx485 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %420, i64 %idxprom483, !dbg !10191
  %hash486 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx485, i32 0, i32 1, !dbg !10192
  store i64 %417, i64* %hash486, align 8, !dbg !10193
  %421 = load i8*, i8** %s, align 8, !dbg !10194
  %422 = load i32, i32* %j252, align 4, !dbg !10195
  %idxprom487 = sext i32 %422 to i64, !dbg !10196
  %423 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10196
  %m_nsAtts488 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %423, i32 0, i32 75, !dbg !10196
  %424 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts488, align 8, !dbg !10196
  %arrayidx489 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %424, i64 %idxprom487, !dbg !10196
  %uriName490 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx489, i32 0, i32 2, !dbg !10197
  store i8* %421, i8** %uriName490, align 8, !dbg !10198
  %425 = load i32, i32* %nPrefixes, align 4, !dbg !10199
  %dec491 = add nsw i32 %425, -1, !dbg !10199
  store i32 %dec491, i32* %nPrefixes, align 4, !dbg !10199
  %tobool492 = icmp ne i32 %dec491, 0, !dbg !10199
  br i1 %tobool492, label %if.end495, label %if.then493, !dbg !10201

if.then493:                                       ; preds = %if.end470
  %426 = load i32, i32* %i, align 4, !dbg !10202
  %add494 = add nsw i32 %426, 2, !dbg !10202
  store i32 %add494, i32* %i, align 4, !dbg !10202
  br label %for.end501, !dbg !10204

if.end495:                                        ; preds = %if.end470
  br label %if.end498, !dbg !10205

if.else496:                                       ; preds = %for.body303
  %427 = load i8*, i8** %s, align 8, !dbg !10206
  %arrayidx497 = getelementptr inbounds i8, i8* %427, i64 -1, !dbg !10207
  store i8 0, i8* %arrayidx497, align 1, !dbg !10208
  br label %if.end498

if.end498:                                        ; preds = %if.else496, %if.end495
  br label %for.inc499, !dbg !10209

for.inc499:                                       ; preds = %if.end498
  %428 = load i32, i32* %i, align 4, !dbg !10210
  %add500 = add nsw i32 %428, 2, !dbg !10210
  store i32 %add500, i32* %i, align 4, !dbg !10210
  br label %for.cond300, !dbg !10212

for.end501:                                       ; preds = %if.then493, %for.cond300
  br label %if.end502, !dbg !10213

if.end502:                                        ; preds = %for.end501, %for.end247
  br label %for.cond503, !dbg !10214

for.cond503:                                      ; preds = %for.inc510, %if.end502
  %429 = load i32, i32* %i, align 4, !dbg !10215
  %430 = load i32, i32* %attIndex, align 4, !dbg !10219
  %cmp504 = icmp slt i32 %429, %430, !dbg !10220
  br i1 %cmp504, label %for.body506, label %for.end512, !dbg !10221

for.body506:                                      ; preds = %for.cond503
  %431 = load i32, i32* %i, align 4, !dbg !10222
  %idxprom507 = sext i32 %431 to i64, !dbg !10223
  %432 = load i8**, i8*** %appAtts, align 8, !dbg !10223
  %arrayidx508 = getelementptr inbounds i8*, i8** %432, i64 %idxprom507, !dbg !10223
  %433 = load i8*, i8** %arrayidx508, align 8, !dbg !10223
  %arrayidx509 = getelementptr inbounds i8, i8* %433, i64 -1, !dbg !10224
  store i8 0, i8* %arrayidx509, align 1, !dbg !10225
  br label %for.inc510, !dbg !10224

for.inc510:                                       ; preds = %for.body506
  %434 = load i32, i32* %i, align 4, !dbg !10226
  %add511 = add nsw i32 %434, 2, !dbg !10226
  store i32 %add511, i32* %i, align 4, !dbg !10226
  br label %for.cond503, !dbg !10228

for.end512:                                       ; preds = %for.cond503
  %435 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !10229
  %436 = load %struct.binding*, %struct.binding** %435, align 8, !dbg !10231
  store %struct.binding* %436, %struct.binding** %binding, align 8, !dbg !10232
  br label %for.cond513, !dbg !10233

for.cond513:                                      ; preds = %for.inc519, %for.end512
  %437 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10234
  %tobool514 = icmp ne %struct.binding* %437, null, !dbg !10237
  br i1 %tobool514, label %for.body515, label %for.end520, !dbg !10237

for.body515:                                      ; preds = %for.cond513
  %438 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10238
  %attId516 = getelementptr inbounds %struct.binding, %struct.binding* %438, i32 0, i32 3, !dbg !10239
  %439 = load %struct.attribute_id*, %struct.attribute_id** %attId516, align 8, !dbg !10239
  %name517 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %439, i32 0, i32 0, !dbg !10240
  %440 = load i8*, i8** %name517, align 8, !dbg !10240
  %arrayidx518 = getelementptr inbounds i8, i8* %440, i64 -1, !dbg !10238
  store i8 0, i8* %arrayidx518, align 1, !dbg !10241
  br label %for.inc519, !dbg !10238

for.inc519:                                       ; preds = %for.body515
  %441 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10242
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %441, i32 0, i32 1, !dbg !10244
  %442 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !10244
  store %struct.binding* %442, %struct.binding** %binding, align 8, !dbg !10245
  br label %for.cond513, !dbg !10246

for.end520:                                       ; preds = %for.cond513
  %443 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10247
  %m_ns521 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %443, i32 0, i32 38, !dbg !10247
  %444 = load i8, i8* %m_ns521, align 8, !dbg !10247
  %tobool522 = icmp ne i8 %444, 0, !dbg !10247
  br i1 %tobool522, label %if.end524, label %if.then523, !dbg !10249

if.then523:                                       ; preds = %for.end520
  store i32 0, i32* %retval, align 4, !dbg !10250
  br label %return, !dbg !10250

if.end524:                                        ; preds = %for.end520
  %445 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !10251
  %prefix525 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %445, i32 0, i32 1, !dbg !10253
  %446 = load %struct.prefix*, %struct.prefix** %prefix525, align 8, !dbg !10253
  %tobool526 = icmp ne %struct.prefix* %446, null, !dbg !10251
  br i1 %tobool526, label %if.then527, label %if.else541, !dbg !10254

if.then527:                                       ; preds = %if.end524
  %447 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8, !dbg !10255
  %prefix528 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %447, i32 0, i32 1, !dbg !10257
  %448 = load %struct.prefix*, %struct.prefix** %prefix528, align 8, !dbg !10257
  %binding529 = getelementptr inbounds %struct.prefix, %struct.prefix* %448, i32 0, i32 1, !dbg !10258
  %449 = load %struct.binding*, %struct.binding** %binding529, align 8, !dbg !10258
  store %struct.binding* %449, %struct.binding** %binding, align 8, !dbg !10259
  %450 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10260
  %tobool530 = icmp ne %struct.binding* %450, null, !dbg !10260
  br i1 %tobool530, label %if.end532, label %if.then531, !dbg !10262

if.then531:                                       ; preds = %if.then527
  store i32 27, i32* %retval, align 4, !dbg !10263
  br label %return, !dbg !10263

if.end532:                                        ; preds = %if.then527
  %451 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !10264
  %str533 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %451, i32 0, i32 0, !dbg !10265
  %452 = load i8*, i8** %str533, align 8, !dbg !10265
  store i8* %452, i8** %localPart, align 8, !dbg !10266
  br label %while.cond534, !dbg !10267

while.cond534:                                    ; preds = %while.body539, %if.end532
  %453 = load i8*, i8** %localPart, align 8, !dbg !10268
  %incdec.ptr535 = getelementptr inbounds i8, i8* %453, i32 1, !dbg !10268
  store i8* %incdec.ptr535, i8** %localPart, align 8, !dbg !10268
  %454 = load i8, i8* %453, align 1, !dbg !10270
  %conv536 = sext i8 %454 to i32, !dbg !10270
  %cmp537 = icmp ne i32 %conv536, 58, !dbg !10271
  br i1 %cmp537, label %while.body539, label %while.end540, !dbg !10272

while.body539:                                    ; preds = %while.cond534
  br label %while.cond534, !dbg !10273

while.end540:                                     ; preds = %while.cond534
  br label %if.end550, !dbg !10275

if.else541:                                       ; preds = %if.end524
  %455 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10276
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %455, i32 0, i32 9, !dbg !10278
  %binding542 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 1, !dbg !10279
  %456 = load %struct.binding*, %struct.binding** %binding542, align 8, !dbg !10279
  %tobool543 = icmp ne %struct.binding* %456, null, !dbg !10276
  br i1 %tobool543, label %if.then544, label %if.else548, !dbg !10280

if.then544:                                       ; preds = %if.else541
  %457 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !10281
  %defaultPrefix545 = getelementptr inbounds %struct.DTD, %struct.DTD* %457, i32 0, i32 9, !dbg !10283
  %binding546 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix545, i32 0, i32 1, !dbg !10284
  %458 = load %struct.binding*, %struct.binding** %binding546, align 8, !dbg !10284
  store %struct.binding* %458, %struct.binding** %binding, align 8, !dbg !10285
  %459 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !10286
  %str547 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %459, i32 0, i32 0, !dbg !10287
  %460 = load i8*, i8** %str547, align 8, !dbg !10287
  store i8* %460, i8** %localPart, align 8, !dbg !10288
  br label %if.end549, !dbg !10289

if.else548:                                       ; preds = %if.else541
  store i32 0, i32* %retval, align 4, !dbg !10290
  br label %return, !dbg !10290

if.end549:                                        ; preds = %if.then544
  br label %if.end550

if.end550:                                        ; preds = %if.end549, %while.end540
  store i32 0, i32* %prefixLen, align 4, !dbg !10291
  %461 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10292
  %m_ns_triplets551 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %461, i32 0, i32 39, !dbg !10292
  %462 = load i8, i8* %m_ns_triplets551, align 1, !dbg !10292
  %conv552 = zext i8 %462 to i32, !dbg !10292
  %tobool553 = icmp ne i32 %conv552, 0, !dbg !10292
  br i1 %tobool553, label %land.lhs.true554, label %if.end568, !dbg !10294

land.lhs.true554:                                 ; preds = %if.end550
  %463 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10295
  %prefix555 = getelementptr inbounds %struct.binding, %struct.binding* %463, i32 0, i32 0, !dbg !10297
  %464 = load %struct.prefix*, %struct.prefix** %prefix555, align 8, !dbg !10297
  %name556 = getelementptr inbounds %struct.prefix, %struct.prefix* %464, i32 0, i32 0, !dbg !10298
  %465 = load i8*, i8** %name556, align 8, !dbg !10298
  %tobool557 = icmp ne i8* %465, null, !dbg !10295
  br i1 %tobool557, label %if.then558, label %if.end568, !dbg !10299

if.then558:                                       ; preds = %land.lhs.true554
  br label %for.cond559, !dbg !10300

for.cond559:                                      ; preds = %for.body566, %if.then558
  %466 = load i32, i32* %prefixLen, align 4, !dbg !10302
  %inc560 = add nsw i32 %466, 1, !dbg !10302
  store i32 %inc560, i32* %prefixLen, align 4, !dbg !10302
  %idxprom561 = sext i32 %466 to i64, !dbg !10306
  %467 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10306
  %prefix562 = getelementptr inbounds %struct.binding, %struct.binding* %467, i32 0, i32 0, !dbg !10307
  %468 = load %struct.prefix*, %struct.prefix** %prefix562, align 8, !dbg !10307
  %name563 = getelementptr inbounds %struct.prefix, %struct.prefix* %468, i32 0, i32 0, !dbg !10308
  %469 = load i8*, i8** %name563, align 8, !dbg !10308
  %arrayidx564 = getelementptr inbounds i8, i8* %469, i64 %idxprom561, !dbg !10306
  %470 = load i8, i8* %arrayidx564, align 1, !dbg !10306
  %tobool565 = icmp ne i8 %470, 0, !dbg !10309
  br i1 %tobool565, label %for.body566, label %for.end567, !dbg !10309

for.body566:                                      ; preds = %for.cond559
  br label %for.cond559, !dbg !10310

for.end567:                                       ; preds = %for.cond559
  br label %if.end568, !dbg !10312

if.end568:                                        ; preds = %for.end567, %land.lhs.true554, %if.end550
  %471 = load i8*, i8** %localPart, align 8, !dbg !10313
  %472 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !10314
  %localPart569 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %472, i32 0, i32 1, !dbg !10315
  store i8* %471, i8** %localPart569, align 8, !dbg !10316
  %473 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10317
  %uriLen570 = getelementptr inbounds %struct.binding, %struct.binding* %473, i32 0, i32 5, !dbg !10318
  %474 = load i32, i32* %uriLen570, align 8, !dbg !10318
  %475 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !10319
  %uriLen571 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %475, i32 0, i32 4, !dbg !10320
  store i32 %474, i32* %uriLen571, align 4, !dbg !10321
  %476 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10322
  %prefix572 = getelementptr inbounds %struct.binding, %struct.binding* %476, i32 0, i32 0, !dbg !10323
  %477 = load %struct.prefix*, %struct.prefix** %prefix572, align 8, !dbg !10323
  %name573 = getelementptr inbounds %struct.prefix, %struct.prefix* %477, i32 0, i32 0, !dbg !10324
  %478 = load i8*, i8** %name573, align 8, !dbg !10324
  %479 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !10325
  %prefix574 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %479, i32 0, i32 2, !dbg !10326
  store i8* %478, i8** %prefix574, align 8, !dbg !10327
  %480 = load i32, i32* %prefixLen, align 4, !dbg !10328
  %481 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !10329
  %prefixLen575 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %481, i32 0, i32 5, !dbg !10330
  store i32 %480, i32* %prefixLen575, align 8, !dbg !10331
  store i32 0, i32* %i, align 4, !dbg !10332
  br label %for.cond576, !dbg !10334

for.cond576:                                      ; preds = %for.body581, %if.end568
  %482 = load i32, i32* %i, align 4, !dbg !10335
  %inc577 = add nsw i32 %482, 1, !dbg !10335
  store i32 %inc577, i32* %i, align 4, !dbg !10335
  %idxprom578 = sext i32 %482 to i64, !dbg !10338
  %483 = load i8*, i8** %localPart, align 8, !dbg !10338
  %arrayidx579 = getelementptr inbounds i8, i8* %483, i64 %idxprom578, !dbg !10338
  %484 = load i8, i8* %arrayidx579, align 1, !dbg !10338
  %tobool580 = icmp ne i8 %484, 0, !dbg !10339
  br i1 %tobool580, label %for.body581, label %for.end582, !dbg !10339

for.body581:                                      ; preds = %for.cond576
  br label %for.cond576, !dbg !10340

for.end582:                                       ; preds = %for.cond576
  %485 = load i32, i32* %i, align 4, !dbg !10342
  %486 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10343
  %uriLen583 = getelementptr inbounds %struct.binding, %struct.binding* %486, i32 0, i32 5, !dbg !10344
  %487 = load i32, i32* %uriLen583, align 8, !dbg !10344
  %add584 = add nsw i32 %485, %487, !dbg !10345
  %488 = load i32, i32* %prefixLen, align 4, !dbg !10346
  %add585 = add nsw i32 %add584, %488, !dbg !10347
  store i32 %add585, i32* %n, align 4, !dbg !10348
  %489 = load i32, i32* %n, align 4, !dbg !10349
  %490 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10351
  %uriAlloc = getelementptr inbounds %struct.binding, %struct.binding* %490, i32 0, i32 6, !dbg !10352
  %491 = load i32, i32* %uriAlloc, align 4, !dbg !10352
  %cmp586 = icmp sgt i32 %489, %491, !dbg !10353
  br i1 %cmp586, label %if.then588, label %if.end620, !dbg !10354

if.then588:                                       ; preds = %for.end582
  call void @llvm.dbg.declare(metadata %struct.tag** %p, metadata !10355, metadata !1076), !dbg !10357
  %492 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10358
  %m_mem589 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %492, i32 0, i32 3, !dbg !10358
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem589, i32 0, i32 0, !dbg !10358
  %493 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !10358
  %494 = load i32, i32* %n, align 4, !dbg !10358
  %add590 = add nsw i32 %494, 24, !dbg !10358
  %conv591 = sext i32 %add590 to i64, !dbg !10358
  %mul592 = mul i64 %conv591, 1, !dbg !10358
  %call593 = call i8* %493(i64 %mul592), !dbg !10358
  store i8* %call593, i8** %uri, align 8, !dbg !10359
  %495 = load i8*, i8** %uri, align 8, !dbg !10360
  %tobool594 = icmp ne i8* %495, null, !dbg !10360
  br i1 %tobool594, label %if.end596, label %if.then595, !dbg !10362

if.then595:                                       ; preds = %if.then588
  store i32 1, i32* %retval, align 4, !dbg !10363
  br label %return, !dbg !10363

if.end596:                                        ; preds = %if.then588
  %496 = load i32, i32* %n, align 4, !dbg !10364
  %add597 = add nsw i32 %496, 24, !dbg !10365
  %497 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10366
  %uriAlloc598 = getelementptr inbounds %struct.binding, %struct.binding* %497, i32 0, i32 6, !dbg !10367
  store i32 %add597, i32* %uriAlloc598, align 4, !dbg !10368
  %498 = load i8*, i8** %uri, align 8, !dbg !10369
  %499 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10370
  %uri599 = getelementptr inbounds %struct.binding, %struct.binding* %499, i32 0, i32 4, !dbg !10371
  %500 = load i8*, i8** %uri599, align 8, !dbg !10371
  %501 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10372
  %uriLen600 = getelementptr inbounds %struct.binding, %struct.binding* %501, i32 0, i32 5, !dbg !10373
  %502 = load i32, i32* %uriLen600, align 8, !dbg !10373
  %conv601 = sext i32 %502 to i64, !dbg !10372
  %mul602 = mul i64 %conv601, 1, !dbg !10374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %498, i8* %500, i64 %mul602, i32 1, i1 false), !dbg !10375
  %503 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10376
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %503, i32 0, i32 67, !dbg !10376
  %504 = load %struct.tag*, %struct.tag** %m_tagStack, align 8, !dbg !10376
  store %struct.tag* %504, %struct.tag** %p, align 8, !dbg !10378
  br label %for.cond603, !dbg !10379

for.cond603:                                      ; preds = %for.inc615, %if.end596
  %505 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !10380
  %tobool604 = icmp ne %struct.tag* %505, null, !dbg !10383
  br i1 %tobool604, label %for.body605, label %for.end616, !dbg !10383

for.body605:                                      ; preds = %for.cond603
  %506 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !10384
  %name606 = getelementptr inbounds %struct.tag, %struct.tag* %506, i32 0, i32 3, !dbg !10386
  %str607 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name606, i32 0, i32 0, !dbg !10387
  %507 = load i8*, i8** %str607, align 8, !dbg !10387
  %508 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10388
  %uri608 = getelementptr inbounds %struct.binding, %struct.binding* %508, i32 0, i32 4, !dbg !10389
  %509 = load i8*, i8** %uri608, align 8, !dbg !10389
  %cmp609 = icmp eq i8* %507, %509, !dbg !10390
  br i1 %cmp609, label %if.then611, label %if.end614, !dbg !10391

if.then611:                                       ; preds = %for.body605
  %510 = load i8*, i8** %uri, align 8, !dbg !10392
  %511 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !10393
  %name612 = getelementptr inbounds %struct.tag, %struct.tag* %511, i32 0, i32 3, !dbg !10394
  %str613 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name612, i32 0, i32 0, !dbg !10395
  store i8* %510, i8** %str613, align 8, !dbg !10396
  br label %if.end614, !dbg !10393

if.end614:                                        ; preds = %if.then611, %for.body605
  br label %for.inc615, !dbg !10397

for.inc615:                                       ; preds = %if.end614
  %512 = load %struct.tag*, %struct.tag** %p, align 8, !dbg !10399
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %512, i32 0, i32 0, !dbg !10401
  %513 = load %struct.tag*, %struct.tag** %parent, align 8, !dbg !10401
  store %struct.tag* %513, %struct.tag** %p, align 8, !dbg !10402
  br label %for.cond603, !dbg !10403

for.end616:                                       ; preds = %for.cond603
  %514 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10404
  %m_mem617 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %514, i32 0, i32 3, !dbg !10404
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem617, i32 0, i32 2, !dbg !10404
  %515 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !10404
  %516 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10404
  %uri618 = getelementptr inbounds %struct.binding, %struct.binding* %516, i32 0, i32 4, !dbg !10404
  %517 = load i8*, i8** %uri618, align 8, !dbg !10404
  call void %515(i8* %517), !dbg !10404
  %518 = load i8*, i8** %uri, align 8, !dbg !10405
  %519 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10406
  %uri619 = getelementptr inbounds %struct.binding, %struct.binding* %519, i32 0, i32 4, !dbg !10407
  store i8* %518, i8** %uri619, align 8, !dbg !10408
  br label %if.end620, !dbg !10409

if.end620:                                        ; preds = %for.end616, %for.end582
  %520 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10410
  %uri621 = getelementptr inbounds %struct.binding, %struct.binding* %520, i32 0, i32 4, !dbg !10411
  %521 = load i8*, i8** %uri621, align 8, !dbg !10411
  %522 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10412
  %uriLen622 = getelementptr inbounds %struct.binding, %struct.binding* %522, i32 0, i32 5, !dbg !10413
  %523 = load i32, i32* %uriLen622, align 8, !dbg !10413
  %idx.ext623 = sext i32 %523 to i64, !dbg !10414
  %add.ptr624 = getelementptr inbounds i8, i8* %521, i64 %idx.ext623, !dbg !10414
  store i8* %add.ptr624, i8** %uri, align 8, !dbg !10415
  %524 = load i8*, i8** %uri, align 8, !dbg !10416
  %525 = load i8*, i8** %localPart, align 8, !dbg !10417
  %526 = load i32, i32* %i, align 4, !dbg !10418
  %conv625 = sext i32 %526 to i64, !dbg !10418
  %mul626 = mul i64 %conv625, 1, !dbg !10419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %524, i8* %525, i64 %mul626, i32 1, i1 false), !dbg !10420
  %527 = load i32, i32* %prefixLen, align 4, !dbg !10421
  %tobool627 = icmp ne i32 %527, 0, !dbg !10421
  br i1 %tobool627, label %if.then628, label %if.end638, !dbg !10423

if.then628:                                       ; preds = %if.end620
  %528 = load i32, i32* %i, align 4, !dbg !10424
  %sub629 = sub nsw i32 %528, 1, !dbg !10426
  %529 = load i8*, i8** %uri, align 8, !dbg !10427
  %idx.ext630 = sext i32 %sub629 to i64, !dbg !10427
  %add.ptr631 = getelementptr inbounds i8, i8* %529, i64 %idx.ext630, !dbg !10427
  store i8* %add.ptr631, i8** %uri, align 8, !dbg !10427
  %530 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10428
  %m_namespaceSeparator632 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %530, i32 0, i32 83, !dbg !10428
  %531 = load i8, i8* %m_namespaceSeparator632, align 4, !dbg !10428
  %532 = load i8*, i8** %uri, align 8, !dbg !10429
  store i8 %531, i8* %532, align 1, !dbg !10430
  %533 = load i8*, i8** %uri, align 8, !dbg !10431
  %add.ptr633 = getelementptr inbounds i8, i8* %533, i64 1, !dbg !10432
  %534 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10433
  %prefix634 = getelementptr inbounds %struct.binding, %struct.binding* %534, i32 0, i32 0, !dbg !10434
  %535 = load %struct.prefix*, %struct.prefix** %prefix634, align 8, !dbg !10434
  %name635 = getelementptr inbounds %struct.prefix, %struct.prefix* %535, i32 0, i32 0, !dbg !10435
  %536 = load i8*, i8** %name635, align 8, !dbg !10435
  %537 = load i32, i32* %prefixLen, align 4, !dbg !10436
  %conv636 = sext i32 %537 to i64, !dbg !10436
  %mul637 = mul i64 %conv636, 1, !dbg !10437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr633, i8* %536, i64 %mul637, i32 1, i1 false), !dbg !10438
  br label %if.end638, !dbg !10439

if.end638:                                        ; preds = %if.then628, %if.end620
  %538 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !10440
  %uri639 = getelementptr inbounds %struct.binding, %struct.binding* %538, i32 0, i32 4, !dbg !10441
  %539 = load i8*, i8** %uri639, align 8, !dbg !10441
  %540 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8, !dbg !10442
  %str640 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %540, i32 0, i32 0, !dbg !10443
  store i8* %539, i8** %str640, align 8, !dbg !10444
  store i32 0, i32* %retval, align 4, !dbg !10445
  br label %return, !dbg !10445

return:                                           ; preds = %if.end638, %if.then595, %if.else548, %if.then531, %if.then523, %if.then464, %if.then416, %if.then372, %if.then342, %if.then322, %if.then317, %if.then281, %if.then213, %if.then144, %if.then127, %if.then103, %if.end65, %if.then52, %if.then31, %if.then13, %if.then8, %if.then4
  %541 = load i32, i32* %retval, align 4, !dbg !10446
  ret i32 %541, !dbg !10446
}

; Function Attrs: nounwind uwtable
define internal i32 @epilogProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 !dbg !922 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !10447, metadata !1076), !dbg !10448
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !10449, metadata !1076), !dbg !10450
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10451, metadata !1076), !dbg !10452
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !10453, metadata !1076), !dbg !10454
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10455
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 45, !dbg !10455
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @epilogProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !10456
  %1 = load i8*, i8** %s.addr, align 8, !dbg !10457
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10458
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !10458
  store i8* %1, i8** %m_eventPtr, align 8, !dbg !10459
  br label %for.cond, !dbg !10460

for.cond:                                         ; preds = %sw.epilog43, %entry
  call void @llvm.dbg.declare(metadata i8** %next, metadata !10461, metadata !1076), !dbg !10465
  store i8* null, i8** %next, align 8, !dbg !10465
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !10466, metadata !1076), !dbg !10467
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10468
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !10468
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !10468
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0, !dbg !10468
  %arrayidx = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 0, !dbg !10468
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !10468
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10468
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !10468
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !10468
  %8 = load i8*, i8** %s.addr, align 8, !dbg !10468
  %9 = load i8*, i8** %end.addr, align 8, !dbg !10468
  %call = call i32 %5(%struct.encoding* %7, i8* %8, i8* %9, i8** %next), !dbg !10468
  store i32 %call, i32* %tok, align 4, !dbg !10467
  %10 = load i8*, i8** %next, align 8, !dbg !10469
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10470
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 48, !dbg !10470
  store i8* %10, i8** %m_eventEndPtr, align 8, !dbg !10471
  %12 = load i32, i32* %tok, align 4, !dbg !10472
  switch i32 %12, label %sw.default [
    i32 -15, label %sw.bb
    i32 -4, label %sw.bb5
    i32 15, label %sw.bb6
    i32 11, label %sw.bb12
    i32 13, label %sw.bb18
    i32 0, label %sw.bb24
    i32 -1, label %sw.bb26
    i32 -2, label %sw.bb31
  ], !dbg !10473

sw.bb:                                            ; preds = %for.cond
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10474
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 18, !dbg !10474
  %14 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !10474
  %tobool = icmp ne void (i8*, i8*, i32)* %14, null, !dbg !10474
  br i1 %tobool, label %if.then, label %if.end4, !dbg !10477

if.then:                                          ; preds = %sw.bb
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10478
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10480
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 34, !dbg !10480
  %17 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8, !dbg !10480
  %18 = load i8*, i8** %s.addr, align 8, !dbg !10481
  %19 = load i8*, i8** %next, align 8, !dbg !10482
  call void @reportDefault(%struct.XML_ParserStruct* %15, %struct.encoding* %17, i8* %18, i8* %19), !dbg !10483
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10484
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 85, !dbg !10484
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !10484
  %21 = load i32, i32* %parsing, align 8, !dbg !10484
  %cmp = icmp eq i32 %21, 2, !dbg !10486
  br i1 %cmp, label %if.then3, label %if.end, !dbg !10487

if.then3:                                         ; preds = %if.then
  store i32 35, i32* %retval, align 4, !dbg !10488
  br label %return, !dbg !10488

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !10489

if.end4:                                          ; preds = %if.end, %sw.bb
  %22 = load i8*, i8** %next, align 8, !dbg !10490
  %23 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10491
  store i8* %22, i8** %23, align 8, !dbg !10492
  store i32 0, i32* %retval, align 4, !dbg !10493
  br label %return, !dbg !10493

sw.bb5:                                           ; preds = %for.cond
  %24 = load i8*, i8** %s.addr, align 8, !dbg !10494
  %25 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10495
  store i8* %24, i8** %25, align 8, !dbg !10496
  store i32 0, i32* %retval, align 4, !dbg !10497
  br label %return, !dbg !10497

sw.bb6:                                           ; preds = %for.cond
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10498
  %m_defaultHandler7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 18, !dbg !10498
  %27 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler7, align 8, !dbg !10498
  %tobool8 = icmp ne void (i8*, i8*, i32)* %27, null, !dbg !10498
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !10500

if.then9:                                         ; preds = %sw.bb6
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10501
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10502
  %m_encoding10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 34, !dbg !10502
  %30 = load %struct.encoding*, %struct.encoding** %m_encoding10, align 8, !dbg !10502
  %31 = load i8*, i8** %s.addr, align 8, !dbg !10503
  %32 = load i8*, i8** %next, align 8, !dbg !10504
  call void @reportDefault(%struct.XML_ParserStruct* %28, %struct.encoding* %30, i8* %31, i8* %32), !dbg !10505
  br label %if.end11, !dbg !10505

if.end11:                                         ; preds = %if.then9, %sw.bb6
  br label %sw.epilog, !dbg !10506

sw.bb12:                                          ; preds = %for.cond
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10507
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10509
  %m_encoding13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 34, !dbg !10509
  %35 = load %struct.encoding*, %struct.encoding** %m_encoding13, align 8, !dbg !10509
  %36 = load i8*, i8** %s.addr, align 8, !dbg !10510
  %37 = load i8*, i8** %next, align 8, !dbg !10511
  %call14 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %33, %struct.encoding* %35, i8* %36, i8* %37), !dbg !10512
  %tobool15 = icmp ne i32 %call14, 0, !dbg !10512
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !10513

if.then16:                                        ; preds = %sw.bb12
  store i32 1, i32* %retval, align 4, !dbg !10514
  br label %return, !dbg !10514

if.end17:                                         ; preds = %sw.bb12
  br label %sw.epilog, !dbg !10515

sw.bb18:                                          ; preds = %for.cond
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10516
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10518
  %m_encoding19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 34, !dbg !10518
  %40 = load %struct.encoding*, %struct.encoding** %m_encoding19, align 8, !dbg !10518
  %41 = load i8*, i8** %s.addr, align 8, !dbg !10519
  %42 = load i8*, i8** %next, align 8, !dbg !10520
  %call20 = call i32 @reportComment(%struct.XML_ParserStruct* %38, %struct.encoding* %40, i8* %41, i8* %42), !dbg !10521
  %tobool21 = icmp ne i32 %call20, 0, !dbg !10521
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !10522

if.then22:                                        ; preds = %sw.bb18
  store i32 1, i32* %retval, align 4, !dbg !10523
  br label %return, !dbg !10523

if.end23:                                         ; preds = %sw.bb18
  br label %sw.epilog, !dbg !10524

sw.bb24:                                          ; preds = %for.cond
  %43 = load i8*, i8** %next, align 8, !dbg !10525
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10526
  %m_eventPtr25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 47, !dbg !10526
  store i8* %43, i8** %m_eventPtr25, align 8, !dbg !10527
  store i32 4, i32* %retval, align 4, !dbg !10528
  br label %return, !dbg !10528

sw.bb26:                                          ; preds = %for.cond
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10529
  %m_parsingStatus27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 85, !dbg !10529
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus27, i32 0, i32 1, !dbg !10529
  %46 = load i8, i8* %finalBuffer, align 4, !dbg !10529
  %tobool28 = icmp ne i8 %46, 0, !dbg !10529
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !10531

if.then29:                                        ; preds = %sw.bb26
  %47 = load i8*, i8** %s.addr, align 8, !dbg !10532
  %48 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10534
  store i8* %47, i8** %48, align 8, !dbg !10535
  store i32 0, i32* %retval, align 4, !dbg !10536
  br label %return, !dbg !10536

if.end30:                                         ; preds = %sw.bb26
  store i32 5, i32* %retval, align 4, !dbg !10537
  br label %return, !dbg !10537

sw.bb31:                                          ; preds = %for.cond
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10538
  %m_parsingStatus32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 85, !dbg !10538
  %finalBuffer33 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus32, i32 0, i32 1, !dbg !10538
  %50 = load i8, i8* %finalBuffer33, align 4, !dbg !10538
  %tobool34 = icmp ne i8 %50, 0, !dbg !10538
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !10540

if.then35:                                        ; preds = %sw.bb31
  %51 = load i8*, i8** %s.addr, align 8, !dbg !10541
  %52 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10543
  store i8* %51, i8** %52, align 8, !dbg !10544
  store i32 0, i32* %retval, align 4, !dbg !10545
  br label %return, !dbg !10545

if.end36:                                         ; preds = %sw.bb31
  store i32 6, i32* %retval, align 4, !dbg !10546
  br label %return, !dbg !10546

sw.default:                                       ; preds = %for.cond
  store i32 9, i32* %retval, align 4, !dbg !10547
  br label %return, !dbg !10547

sw.epilog:                                        ; preds = %if.end23, %if.end17, %if.end11
  %53 = load i8*, i8** %next, align 8, !dbg !10548
  store i8* %53, i8** %s.addr, align 8, !dbg !10549
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10550
  %m_eventPtr37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 47, !dbg !10550
  store i8* %53, i8** %m_eventPtr37, align 8, !dbg !10551
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10552
  %m_parsingStatus38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 85, !dbg !10552
  %parsing39 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus38, i32 0, i32 0, !dbg !10552
  %56 = load i32, i32* %parsing39, align 8, !dbg !10552
  switch i32 %56, label %sw.default42 [
    i32 3, label %sw.bb40
    i32 2, label %sw.bb41
  ], !dbg !10553

sw.bb40:                                          ; preds = %sw.epilog
  %57 = load i8*, i8** %next, align 8, !dbg !10554
  %58 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10556
  store i8* %57, i8** %58, align 8, !dbg !10557
  store i32 0, i32* %retval, align 4, !dbg !10558
  br label %return, !dbg !10558

sw.bb41:                                          ; preds = %sw.epilog
  store i32 35, i32* %retval, align 4, !dbg !10559
  br label %return, !dbg !10559

sw.default42:                                     ; preds = %sw.epilog
  br label %sw.epilog43, !dbg !10560

sw.epilog43:                                      ; preds = %sw.default42
  br label %for.cond, !dbg !10561

return:                                           ; preds = %sw.bb41, %sw.bb40, %sw.default, %if.end36, %if.then35, %if.end30, %if.then29, %sw.bb24, %if.then22, %if.then16, %sw.bb5, %if.end4, %if.then3
  %59 = load i32, i32* %retval, align 4, !dbg !10563
  ret i32 %59, !dbg !10563
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

declare i32 @XmlUtf8Encode(i32, i8*) #5

; Function Attrs: nounwind uwtable
define internal i32 @doCdataSection(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8** %startPtr, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 !dbg !923 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %startPtr.addr = alloca i8**, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %s = alloca i8*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %c = alloca i8, align 1
  %charDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %dataPtr = alloca i8*, align 8
  %convert_res = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !10564, metadata !1076), !dbg !10565
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !10566, metadata !1076), !dbg !10567
  store i8** %startPtr, i8*** %startPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %startPtr.addr, metadata !10568, metadata !1076), !dbg !10569
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10570, metadata !1076), !dbg !10571
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !10572, metadata !1076), !dbg !10573
  store i8 %haveMore, i8* %haveMore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %haveMore.addr, metadata !10574, metadata !1076), !dbg !10575
  call void @llvm.dbg.declare(metadata i8** %s, metadata !10576, metadata !1076), !dbg !10577
  %0 = load i8**, i8*** %startPtr.addr, align 8, !dbg !10578
  %1 = load i8*, i8** %0, align 8, !dbg !10579
  store i8* %1, i8** %s, align 8, !dbg !10577
  call void @llvm.dbg.declare(metadata i8*** %eventPP, metadata !10580, metadata !1076), !dbg !10581
  call void @llvm.dbg.declare(metadata i8*** %eventEndPP, metadata !10582, metadata !1076), !dbg !10583
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10584
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10586
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !10586
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !10586
  %cmp = icmp eq %struct.encoding* %2, %4, !dbg !10587
  br i1 %cmp, label %if.then, label %if.else, !dbg !10588

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10589
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47, !dbg !10589
  store i8** %m_eventPtr, i8*** %eventPP, align 8, !dbg !10591
  %6 = load i8*, i8** %s, align 8, !dbg !10592
  %7 = load i8**, i8*** %eventPP, align 8, !dbg !10593
  store i8* %6, i8** %7, align 8, !dbg !10594
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10595
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 48, !dbg !10595
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8, !dbg !10596
  br label %if.end, !dbg !10597

if.else:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10598
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50, !dbg !10598
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !10598
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 0, !dbg !10600
  store i8** %internalEventPtr, i8*** %eventPP, align 8, !dbg !10601
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10602
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 50, !dbg !10602
  %12 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8, !dbg !10602
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %12, i32 0, i32 1, !dbg !10603
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8, !dbg !10604
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i8*, i8** %s, align 8, !dbg !10605
  %14 = load i8**, i8*** %eventPP, align 8, !dbg !10606
  store i8* %13, i8** %14, align 8, !dbg !10607
  %15 = load i8**, i8*** %startPtr.addr, align 8, !dbg !10608
  store i8* null, i8** %15, align 8, !dbg !10609
  br label %for.cond, !dbg !10610

for.cond:                                         ; preds = %sw.epilog67, %if.end
  call void @llvm.dbg.declare(metadata i8** %next, metadata !10611, metadata !1076), !dbg !10615
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !10616, metadata !1076), !dbg !10617
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10618
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %16, i32 0, i32 0, !dbg !10618
  %arrayidx = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 2, !dbg !10618
  %17 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !10618
  %18 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10618
  %19 = load i8*, i8** %s, align 8, !dbg !10618
  %20 = load i8*, i8** %end.addr, align 8, !dbg !10618
  %call = call i32 %17(%struct.encoding* %18, i8* %19, i8* %20, i8** %next), !dbg !10618
  store i32 %call, i32* %tok, align 4, !dbg !10617
  %21 = load i8*, i8** %next, align 8, !dbg !10619
  %22 = load i8**, i8*** %eventEndPP, align 8, !dbg !10620
  store i8* %21, i8** %22, align 8, !dbg !10621
  %23 = load i32, i32* %tok, align 4, !dbg !10622
  switch i32 %23, label %sw.default [
    i32 40, label %sw.bb
    i32 7, label %sw.bb12
    i32 6, label %sw.bb23
    i32 0, label %sw.bb53
    i32 -2, label %sw.bb54
    i32 -1, label %sw.bb58
    i32 -4, label %sw.bb58
  ], !dbg !10623

sw.bb:                                            ; preds = %for.cond
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10624
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 17, !dbg !10624
  %25 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler, align 8, !dbg !10624
  %tobool = icmp ne void (i8*)* %25, null, !dbg !10624
  br i1 %tobool, label %if.then2, label %if.else4, !dbg !10627

if.then2:                                         ; preds = %sw.bb
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10628
  %m_endCdataSectionHandler3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 17, !dbg !10628
  %27 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler3, align 8, !dbg !10628
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10629
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 1, !dbg !10629
  %29 = load i8*, i8** %m_handlerArg, align 8, !dbg !10629
  call void %27(i8* %29), !dbg !10628
  br label %if.end8, !dbg !10628

if.else4:                                         ; preds = %sw.bb
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10630
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 18, !dbg !10630
  %31 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8, !dbg !10630
  %tobool5 = icmp ne void (i8*, i8*, i32)* %31, null, !dbg !10630
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10632

if.then6:                                         ; preds = %if.else4
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10633
  %33 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10634
  %34 = load i8*, i8** %s, align 8, !dbg !10635
  %35 = load i8*, i8** %next, align 8, !dbg !10636
  call void @reportDefault(%struct.XML_ParserStruct* %32, %struct.encoding* %33, i8* %34, i8* %35), !dbg !10637
  br label %if.end7, !dbg !10637

if.end7:                                          ; preds = %if.then6, %if.else4
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then2
  %36 = load i8*, i8** %next, align 8, !dbg !10638
  %37 = load i8**, i8*** %startPtr.addr, align 8, !dbg !10639
  store i8* %36, i8** %37, align 8, !dbg !10640
  %38 = load i8*, i8** %next, align 8, !dbg !10641
  %39 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10642
  store i8* %38, i8** %39, align 8, !dbg !10643
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10644
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 85, !dbg !10644
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !10644
  %41 = load i32, i32* %parsing, align 8, !dbg !10644
  %cmp9 = icmp eq i32 %41, 2, !dbg !10646
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !10647

if.then10:                                        ; preds = %if.end8
  store i32 35, i32* %retval, align 4, !dbg !10648
  br label %return, !dbg !10648

if.else11:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !10649
  br label %return, !dbg !10649

sw.bb12:                                          ; preds = %for.cond
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10650
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 13, !dbg !10650
  %43 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8, !dbg !10650
  %tobool13 = icmp ne void (i8*, i8*, i32)* %43, null, !dbg !10650
  br i1 %tobool13, label %if.then14, label %if.else17, !dbg !10652

if.then14:                                        ; preds = %sw.bb12
  call void @llvm.dbg.declare(metadata i8* %c, metadata !10653, metadata !1076), !dbg !10655
  store i8 10, i8* %c, align 1, !dbg !10655
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10656
  %m_characterDataHandler15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 13, !dbg !10656
  %45 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler15, align 8, !dbg !10656
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10657
  %m_handlerArg16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 1, !dbg !10657
  %47 = load i8*, i8** %m_handlerArg16, align 8, !dbg !10657
  call void %45(i8* %47, i8* %c, i32 1), !dbg !10656
  br label %if.end22, !dbg !10658

if.else17:                                        ; preds = %sw.bb12
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10659
  %m_defaultHandler18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 18, !dbg !10659
  %49 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler18, align 8, !dbg !10659
  %tobool19 = icmp ne void (i8*, i8*, i32)* %49, null, !dbg !10659
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !10661

if.then20:                                        ; preds = %if.else17
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10662
  %51 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10663
  %52 = load i8*, i8** %s, align 8, !dbg !10664
  %53 = load i8*, i8** %next, align 8, !dbg !10665
  call void @reportDefault(%struct.XML_ParserStruct* %50, %struct.encoding* %51, i8* %52, i8* %53), !dbg !10666
  br label %if.end21, !dbg !10666

if.end21:                                         ; preds = %if.then20, %if.else17
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then14
  br label %sw.epilog, !dbg !10667

sw.bb23:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %charDataHandler, metadata !10668, metadata !1076), !dbg !10670
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10671
  %m_characterDataHandler24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 13, !dbg !10671
  %55 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler24, align 8, !dbg !10671
  store void (i8*, i8*, i32)* %55, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !10670
  %56 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !10672
  %tobool25 = icmp ne void (i8*, i8*, i32)* %56, null, !dbg !10672
  br i1 %tobool25, label %if.then26, label %if.else47, !dbg !10674

if.then26:                                        ; preds = %sw.bb23
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10675
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %57, i32 0, i32 14, !dbg !10675
  %58 = load i8, i8* %isUtf8, align 4, !dbg !10675
  %tobool27 = icmp ne i8 %58, 0, !dbg !10675
  br i1 %tobool27, label %if.else40, label %if.then28, !dbg !10678

if.then28:                                        ; preds = %if.then26
  br label %for.cond29, !dbg !10679

for.cond29:                                       ; preds = %if.end39, %if.then28
  call void @llvm.dbg.declare(metadata i8** %dataPtr, metadata !10681, metadata !1076), !dbg !10685
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10686
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 9, !dbg !10686
  %60 = load i8*, i8** %m_dataBuf, align 8, !dbg !10686
  store i8* %60, i8** %dataPtr, align 8, !dbg !10685
  call void @llvm.dbg.declare(metadata i32* %convert_res, metadata !10687, metadata !1076), !dbg !10688
  %61 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10689
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %61, i32 0, i32 11, !dbg !10689
  %62 = load i32 (%struct.encoding*, i8**, i8*, i8**, i8*)*, i32 (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8, !dbg !10689
  %63 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10689
  %64 = load i8*, i8** %next, align 8, !dbg !10689
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10689
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 10, !dbg !10689
  %66 = load i8*, i8** %m_dataBufEnd, align 8, !dbg !10689
  %call30 = call i32 %62(%struct.encoding* %63, i8** %s, i8* %64, i8** %dataPtr, i8* %66), !dbg !10689
  store i32 %call30, i32* %convert_res, align 4, !dbg !10688
  %67 = load i8*, i8** %next, align 8, !dbg !10690
  %68 = load i8**, i8*** %eventEndPP, align 8, !dbg !10691
  store i8* %67, i8** %68, align 8, !dbg !10692
  %69 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !10693
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10694
  %m_handlerArg31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 1, !dbg !10694
  %71 = load i8*, i8** %m_handlerArg31, align 8, !dbg !10694
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10695
  %m_dataBuf32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 9, !dbg !10695
  %73 = load i8*, i8** %m_dataBuf32, align 8, !dbg !10695
  %74 = load i8*, i8** %dataPtr, align 8, !dbg !10696
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10697
  %m_dataBuf33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 9, !dbg !10697
  %76 = load i8*, i8** %m_dataBuf33, align 8, !dbg !10697
  %sub.ptr.lhs.cast = ptrtoint i8* %74 to i64, !dbg !10698
  %sub.ptr.rhs.cast = ptrtoint i8* %76 to i64, !dbg !10698
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10698
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !10699
  call void %69(i8* %71, i8* %73, i32 %conv), !dbg !10693
  %77 = load i32, i32* %convert_res, align 4, !dbg !10700
  %cmp34 = icmp eq i32 %77, 0, !dbg !10702
  br i1 %cmp34, label %if.then38, label %lor.lhs.false, !dbg !10703

lor.lhs.false:                                    ; preds = %for.cond29
  %78 = load i32, i32* %convert_res, align 4, !dbg !10704
  %cmp36 = icmp eq i32 %78, 1, !dbg !10706
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !10707

if.then38:                                        ; preds = %lor.lhs.false, %for.cond29
  br label %for.end, !dbg !10708

if.end39:                                         ; preds = %lor.lhs.false
  %79 = load i8*, i8** %s, align 8, !dbg !10709
  %80 = load i8**, i8*** %eventPP, align 8, !dbg !10710
  store i8* %79, i8** %80, align 8, !dbg !10711
  br label %for.cond29, !dbg !10712

for.end:                                          ; preds = %if.then38
  br label %if.end46, !dbg !10714

if.else40:                                        ; preds = %if.then26
  %81 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8, !dbg !10715
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10716
  %m_handlerArg41 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 1, !dbg !10716
  %83 = load i8*, i8** %m_handlerArg41, align 8, !dbg !10716
  %84 = load i8*, i8** %s, align 8, !dbg !10717
  %85 = load i8*, i8** %next, align 8, !dbg !10718
  %86 = load i8*, i8** %s, align 8, !dbg !10719
  %sub.ptr.lhs.cast42 = ptrtoint i8* %85 to i64, !dbg !10720
  %sub.ptr.rhs.cast43 = ptrtoint i8* %86 to i64, !dbg !10720
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43, !dbg !10720
  %conv45 = trunc i64 %sub.ptr.sub44 to i32, !dbg !10721
  call void %81(i8* %83, i8* %84, i32 %conv45), !dbg !10715
  br label %if.end46

if.end46:                                         ; preds = %if.else40, %for.end
  br label %if.end52, !dbg !10722

if.else47:                                        ; preds = %sw.bb23
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10723
  %m_defaultHandler48 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 18, !dbg !10723
  %88 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler48, align 8, !dbg !10723
  %tobool49 = icmp ne void (i8*, i8*, i32)* %88, null, !dbg !10723
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !10725

if.then50:                                        ; preds = %if.else47
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10726
  %90 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !10727
  %91 = load i8*, i8** %s, align 8, !dbg !10728
  %92 = load i8*, i8** %next, align 8, !dbg !10729
  call void @reportDefault(%struct.XML_ParserStruct* %89, %struct.encoding* %90, i8* %91, i8* %92), !dbg !10730
  br label %if.end51, !dbg !10730

if.end51:                                         ; preds = %if.then50, %if.else47
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end46
  br label %sw.epilog, !dbg !10731

sw.bb53:                                          ; preds = %for.cond
  %93 = load i8*, i8** %next, align 8, !dbg !10732
  %94 = load i8**, i8*** %eventPP, align 8, !dbg !10733
  store i8* %93, i8** %94, align 8, !dbg !10734
  store i32 4, i32* %retval, align 4, !dbg !10735
  br label %return, !dbg !10735

sw.bb54:                                          ; preds = %for.cond
  %95 = load i8, i8* %haveMore.addr, align 1, !dbg !10736
  %tobool55 = icmp ne i8 %95, 0, !dbg !10736
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !10738

if.then56:                                        ; preds = %sw.bb54
  %96 = load i8*, i8** %s, align 8, !dbg !10739
  %97 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10741
  store i8* %96, i8** %97, align 8, !dbg !10742
  store i32 0, i32* %retval, align 4, !dbg !10743
  br label %return, !dbg !10743

if.end57:                                         ; preds = %sw.bb54
  store i32 6, i32* %retval, align 4, !dbg !10744
  br label %return, !dbg !10744

sw.bb58:                                          ; preds = %for.cond, %for.cond
  %98 = load i8, i8* %haveMore.addr, align 1, !dbg !10745
  %tobool59 = icmp ne i8 %98, 0, !dbg !10745
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !10747

if.then60:                                        ; preds = %sw.bb58
  %99 = load i8*, i8** %s, align 8, !dbg !10748
  %100 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10750
  store i8* %99, i8** %100, align 8, !dbg !10751
  store i32 0, i32* %retval, align 4, !dbg !10752
  br label %return, !dbg !10752

if.end61:                                         ; preds = %sw.bb58
  store i32 20, i32* %retval, align 4, !dbg !10753
  br label %return, !dbg !10753

sw.default:                                       ; preds = %for.cond
  %101 = load i8*, i8** %next, align 8, !dbg !10754
  %102 = load i8**, i8*** %eventPP, align 8, !dbg !10755
  store i8* %101, i8** %102, align 8, !dbg !10756
  store i32 23, i32* %retval, align 4, !dbg !10757
  br label %return, !dbg !10757

sw.epilog:                                        ; preds = %if.end52, %if.end22
  %103 = load i8*, i8** %next, align 8, !dbg !10758
  store i8* %103, i8** %s, align 8, !dbg !10759
  %104 = load i8**, i8*** %eventPP, align 8, !dbg !10760
  store i8* %103, i8** %104, align 8, !dbg !10761
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10762
  %m_parsingStatus62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 85, !dbg !10762
  %parsing63 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus62, i32 0, i32 0, !dbg !10762
  %106 = load i32, i32* %parsing63, align 8, !dbg !10762
  switch i32 %106, label %sw.default66 [
    i32 3, label %sw.bb64
    i32 2, label %sw.bb65
  ], !dbg !10763

sw.bb64:                                          ; preds = %sw.epilog
  %107 = load i8*, i8** %next, align 8, !dbg !10764
  %108 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10766
  store i8* %107, i8** %108, align 8, !dbg !10767
  store i32 0, i32* %retval, align 4, !dbg !10768
  br label %return, !dbg !10768

sw.bb65:                                          ; preds = %sw.epilog
  store i32 35, i32* %retval, align 4, !dbg !10769
  br label %return, !dbg !10769

sw.default66:                                     ; preds = %sw.epilog
  br label %sw.epilog67, !dbg !10770

sw.epilog67:                                      ; preds = %sw.default66
  br label %for.cond, !dbg !10771

return:                                           ; preds = %sw.bb65, %sw.bb64, %sw.default, %if.end61, %if.then60, %if.end57, %if.then56, %sw.bb53, %if.else11, %if.then10
  %109 = load i32, i32* %retval, align 4, !dbg !10773
  ret i32 %109, !dbg !10773
}

; Function Attrs: nounwind uwtable
define internal i32 @cdataSectionProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 !dbg !926 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !10774, metadata !1076), !dbg !10775
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !10776, metadata !1076), !dbg !10777
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10778, metadata !1076), !dbg !10779
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !10780, metadata !1076), !dbg !10781
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10782, metadata !1076), !dbg !10783
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10784
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10785
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34, !dbg !10785
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !10785
  %3 = load i8*, i8** %end.addr, align 8, !dbg !10786
  %4 = load i8**, i8*** %endPtr.addr, align 8, !dbg !10787
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10788
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 85, !dbg !10788
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !10788
  %6 = load i8, i8* %finalBuffer, align 4, !dbg !10788
  %tobool = icmp ne i8 %6, 0, !dbg !10789
  %lnot = xor i1 %tobool, true, !dbg !10789
  %lnot.ext = zext i1 %lnot to i32, !dbg !10789
  %conv = trunc i32 %lnot.ext to i8, !dbg !10790
  %call = call i32 @doCdataSection(%struct.XML_ParserStruct* %0, %struct.encoding* %2, i8** %start.addr, i8* %3, i8** %4, i8 zeroext %conv), !dbg !10791
  store i32 %call, i32* %result, align 4, !dbg !10783
  %7 = load i32, i32* %result, align 4, !dbg !10792
  %cmp = icmp ne i32 %7, 0, !dbg !10794
  br i1 %cmp, label %if.then, label %if.end, !dbg !10795

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %result, align 4, !dbg !10796
  store i32 %8, i32* %retval, align 4, !dbg !10797
  br label %return, !dbg !10797

if.end:                                           ; preds = %entry
  %9 = load i8*, i8** %start.addr, align 8, !dbg !10798
  %tobool2 = icmp ne i8* %9, null, !dbg !10798
  br i1 %tobool2, label %if.then3, label %if.end9, !dbg !10800

if.then3:                                         ; preds = %if.end
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10801
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 84, !dbg !10801
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !10801
  %tobool4 = icmp ne %struct.XML_ParserStruct* %11, null, !dbg !10801
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10804

if.then5:                                         ; preds = %if.then3
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10805
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 45, !dbg !10805
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityContentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !10807
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10808
  %14 = load i8*, i8** %start.addr, align 8, !dbg !10809
  %15 = load i8*, i8** %end.addr, align 8, !dbg !10810
  %16 = load i8**, i8*** %endPtr.addr, align 8, !dbg !10811
  %call6 = call i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %13, i8* %14, i8* %15, i8** %16), !dbg !10812
  store i32 %call6, i32* %retval, align 4, !dbg !10813
  br label %return, !dbg !10813

if.else:                                          ; preds = %if.then3
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10814
  %m_processor7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 45, !dbg !10814
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor7, align 8, !dbg !10816
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10817
  %19 = load i8*, i8** %start.addr, align 8, !dbg !10818
  %20 = load i8*, i8** %end.addr, align 8, !dbg !10819
  %21 = load i8**, i8*** %endPtr.addr, align 8, !dbg !10820
  %call8 = call i32 @contentProcessor(%struct.XML_ParserStruct* %18, i8* %19, i8* %20, i8** %21), !dbg !10821
  store i32 %call8, i32* %retval, align 4, !dbg !10822
  br label %return, !dbg !10822

if.end9:                                          ; preds = %if.end
  %22 = load i32, i32* %result, align 4, !dbg !10823
  store i32 %22, i32* %retval, align 4, !dbg !10824
  br label %return, !dbg !10824

return:                                           ; preds = %if.end9, %if.else, %if.then5, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10825
  ret i32 %23, !dbg !10825
}

; Function Attrs: nounwind uwtable
define internal i32 @internalEntityProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 !dbg !895 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %textStart = alloca i8*, align 8
  %textEnd = alloca i8*, align 8
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !10826, metadata !1076), !dbg !10827
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !10828, metadata !1076), !dbg !10829
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !10830, metadata !1076), !dbg !10831
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %nextPtr.addr, metadata !10832, metadata !1076), !dbg !10833
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !10834, metadata !1076), !dbg !10835
  call void @llvm.dbg.declare(metadata i8** %textStart, metadata !10836, metadata !1076), !dbg !10837
  call void @llvm.dbg.declare(metadata i8** %textEnd, metadata !10838, metadata !1076), !dbg !10839
  call void @llvm.dbg.declare(metadata i8** %next, metadata !10840, metadata !1076), !dbg !10841
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10842, metadata !1076), !dbg !10843
  call void @llvm.dbg.declare(metadata %struct.open_internal_entity** %openEntity, metadata !10844, metadata !1076), !dbg !10845
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10846
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 50, !dbg !10846
  %1 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !10846
  store %struct.open_internal_entity* %1, %struct.open_internal_entity** %openEntity, align 8, !dbg !10845
  %2 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !10847
  %tobool = icmp ne %struct.open_internal_entity* %2, null, !dbg !10847
  br i1 %tobool, label %if.end, label %if.then, !dbg !10849

if.then:                                          ; preds = %entry
  store i32 23, i32* %retval, align 4, !dbg !10850
  br label %return, !dbg !10850

if.end:                                           ; preds = %entry
  %3 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !10851
  %entity1 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %3, i32 0, i32 3, !dbg !10852
  %4 = load %struct.ENTITY*, %struct.ENTITY** %entity1, align 8, !dbg !10852
  store %struct.ENTITY* %4, %struct.ENTITY** %entity, align 8, !dbg !10853
  %5 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10854
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %5, i32 0, i32 1, !dbg !10855
  %6 = load i8*, i8** %textPtr, align 8, !dbg !10855
  %7 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10856
  %processed = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %7, i32 0, i32 3, !dbg !10857
  %8 = load i32, i32* %processed, align 4, !dbg !10857
  %idx.ext = sext i32 %8 to i64, !dbg !10858
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !10858
  store i8* %add.ptr, i8** %textStart, align 8, !dbg !10859
  %9 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10860
  %textPtr2 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %9, i32 0, i32 1, !dbg !10861
  %10 = load i8*, i8** %textPtr2, align 8, !dbg !10861
  %11 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10862
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %11, i32 0, i32 2, !dbg !10863
  %12 = load i32, i32* %textLen, align 8, !dbg !10863
  %idx.ext3 = sext i32 %12 to i64, !dbg !10864
  %add.ptr4 = getelementptr inbounds i8, i8* %10, i64 %idx.ext3, !dbg !10864
  store i8* %add.ptr4, i8** %textEnd, align 8, !dbg !10865
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10866
  %14 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !10867
  %startTagLevel = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %14, i32 0, i32 4, !dbg !10868
  %15 = load i32, i32* %startTagLevel, align 8, !dbg !10868
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10869
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 36, !dbg !10869
  %17 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !10869
  %18 = load i8*, i8** %textStart, align 8, !dbg !10870
  %19 = load i8*, i8** %textEnd, align 8, !dbg !10871
  %call = call i32 @doContent(%struct.XML_ParserStruct* %13, i32 %15, %struct.encoding* %17, i8* %18, i8* %19, i8** %next, i8 zeroext 0), !dbg !10872
  store i32 %call, i32* %result, align 4, !dbg !10873
  %20 = load i32, i32* %result, align 4, !dbg !10874
  %cmp = icmp ne i32 %20, 0, !dbg !10876
  br i1 %cmp, label %if.then5, label %if.else, !dbg !10877

if.then5:                                         ; preds = %if.end
  %21 = load i32, i32* %result, align 4, !dbg !10878
  store i32 %21, i32* %retval, align 4, !dbg !10879
  br label %return, !dbg !10879

if.else:                                          ; preds = %if.end
  %22 = load i8*, i8** %textEnd, align 8, !dbg !10880
  %23 = load i8*, i8** %next, align 8, !dbg !10882
  %cmp6 = icmp ne i8* %22, %23, !dbg !10883
  br i1 %cmp6, label %land.lhs.true, label %if.else11, !dbg !10884

land.lhs.true:                                    ; preds = %if.else
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10885
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 85, !dbg !10885
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !10885
  %25 = load i32, i32* %parsing, align 8, !dbg !10885
  %cmp7 = icmp eq i32 %25, 3, !dbg !10887
  br i1 %cmp7, label %if.then8, label %if.else11, !dbg !10888

if.then8:                                         ; preds = %land.lhs.true
  %26 = load i8*, i8** %next, align 8, !dbg !10889
  %27 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10891
  %textPtr9 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %27, i32 0, i32 1, !dbg !10892
  %28 = load i8*, i8** %textPtr9, align 8, !dbg !10892
  %sub.ptr.lhs.cast = ptrtoint i8* %26 to i64, !dbg !10893
  %sub.ptr.rhs.cast = ptrtoint i8* %28 to i64, !dbg !10893
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10893
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !10894
  %29 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10895
  %processed10 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %29, i32 0, i32 3, !dbg !10896
  store i32 %conv, i32* %processed10, align 4, !dbg !10897
  %30 = load i32, i32* %result, align 4, !dbg !10898
  store i32 %30, i32* %retval, align 4, !dbg !10899
  br label %return, !dbg !10899

if.else11:                                        ; preds = %land.lhs.true, %if.else
  %31 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !10900
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %31, i32 0, i32 8, !dbg !10902
  store i8 0, i8* %open, align 8, !dbg !10903
  %32 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !10904
  %next12 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %32, i32 0, i32 2, !dbg !10905
  %33 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next12, align 8, !dbg !10905
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10906
  %m_openInternalEntities13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 50, !dbg !10906
  store %struct.open_internal_entity* %33, %struct.open_internal_entity** %m_openInternalEntities13, align 8, !dbg !10907
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10908
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 51, !dbg !10908
  %36 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8, !dbg !10908
  %37 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !10909
  %next14 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %37, i32 0, i32 2, !dbg !10910
  store %struct.open_internal_entity* %36, %struct.open_internal_entity** %next14, align 8, !dbg !10911
  %38 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8, !dbg !10912
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10913
  %m_freeInternalEntities15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 51, !dbg !10913
  store %struct.open_internal_entity* %38, %struct.open_internal_entity** %m_freeInternalEntities15, align 8, !dbg !10914
  br label %if.end16

if.end16:                                         ; preds = %if.else11
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10915
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 45, !dbg !10915
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !10917
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10918
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10919
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 84, !dbg !10919
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8, !dbg !10919
  %tobool18 = icmp ne %struct.XML_ParserStruct* %43, null, !dbg !10919
  %cond = select i1 %tobool18, i32 1, i32 0, !dbg !10919
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10920
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 34, !dbg !10920
  %45 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !10920
  %46 = load i8*, i8** %s.addr, align 8, !dbg !10921
  %47 = load i8*, i8** %end.addr, align 8, !dbg !10922
  %48 = load i8**, i8*** %nextPtr.addr, align 8, !dbg !10923
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10924
  %m_parsingStatus19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 85, !dbg !10924
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus19, i32 0, i32 1, !dbg !10924
  %50 = load i8, i8* %finalBuffer, align 4, !dbg !10924
  %tobool20 = icmp ne i8 %50, 0, !dbg !10925
  %lnot = xor i1 %tobool20, true, !dbg !10925
  %lnot.ext = zext i1 %lnot to i32, !dbg !10925
  %conv21 = trunc i32 %lnot.ext to i8, !dbg !10926
  %call22 = call i32 @doContent(%struct.XML_ParserStruct* %41, i32 %cond, %struct.encoding* %45, i8* %46, i8* %47, i8** %48, i8 zeroext %conv21), !dbg !10927
  store i32 %call22, i32* %retval, align 4, !dbg !10928
  br label %return, !dbg !10928

return:                                           ; preds = %if.end17, %if.then8, %if.then5, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !10929
  ret i32 %51, !dbg !10929
}

; Function Attrs: nounwind uwtable
define internal void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %table) #0 !dbg !897 {
entry:
  %iter.addr = alloca %struct.HASH_TABLE_ITER*, align 8
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  store %struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER** %iter.addr, metadata !10930, metadata !1076), !dbg !10931
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !10932, metadata !1076), !dbg !10933
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !10934
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 0, !dbg !10935
  %1 = load %struct.NAMED**, %struct.NAMED*** %v, align 8, !dbg !10935
  %2 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !10936
  %p = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %2, i32 0, i32 0, !dbg !10937
  store %struct.NAMED** %1, %struct.NAMED*** %p, align 8, !dbg !10938
  %3 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !10939
  %p1 = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %3, i32 0, i32 0, !dbg !10940
  %4 = load %struct.NAMED**, %struct.NAMED*** %p1, align 8, !dbg !10940
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !10941
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 2, !dbg !10942
  %6 = load i64, i64* %size, align 8, !dbg !10942
  %add.ptr = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %4, i64 %6, !dbg !10943
  %7 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !10944
  %end = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %7, i32 0, i32 1, !dbg !10945
  store %struct.NAMED** %add.ptr, %struct.NAMED*** %end, align 8, !dbg !10946
  ret void, !dbg !10947
}

; Function Attrs: nounwind uwtable
define internal %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter) #0 !dbg !908 {
entry:
  %retval = alloca %struct.NAMED*, align 8
  %iter.addr = alloca %struct.HASH_TABLE_ITER*, align 8
  %tem = alloca %struct.NAMED*, align 8
  store %struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER** %iter.addr, metadata !10948, metadata !1076), !dbg !10949
  br label %while.cond, !dbg !10950

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !10951
  %p = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %0, i32 0, i32 0, !dbg !10953
  %1 = load %struct.NAMED**, %struct.NAMED*** %p, align 8, !dbg !10953
  %2 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !10954
  %end = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %2, i32 0, i32 1, !dbg !10955
  %3 = load %struct.NAMED**, %struct.NAMED*** %end, align 8, !dbg !10955
  %cmp = icmp ne %struct.NAMED** %1, %3, !dbg !10956
  br i1 %cmp, label %while.body, label %while.end, !dbg !10957

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.NAMED** %tem, metadata !10958, metadata !1076), !dbg !10960
  %4 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8, !dbg !10961
  %p1 = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %4, i32 0, i32 0, !dbg !10962
  %5 = load %struct.NAMED**, %struct.NAMED*** %p1, align 8, !dbg !10963
  %incdec.ptr = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %5, i32 1, !dbg !10963
  store %struct.NAMED** %incdec.ptr, %struct.NAMED*** %p1, align 8, !dbg !10963
  %6 = load %struct.NAMED*, %struct.NAMED** %5, align 8, !dbg !10964
  store %struct.NAMED* %6, %struct.NAMED** %tem, align 8, !dbg !10960
  %7 = load %struct.NAMED*, %struct.NAMED** %tem, align 8, !dbg !10965
  %tobool = icmp ne %struct.NAMED* %7, null, !dbg !10965
  br i1 %tobool, label %if.then, label %if.end, !dbg !10967

if.then:                                          ; preds = %while.body
  %8 = load %struct.NAMED*, %struct.NAMED** %tem, align 8, !dbg !10968
  store %struct.NAMED* %8, %struct.NAMED** %retval, align 8, !dbg !10969
  br label %return, !dbg !10969

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !10970

while.end:                                        ; preds = %while.cond
  store %struct.NAMED* null, %struct.NAMED** %retval, align 8, !dbg !10972
  br label %return, !dbg !10972

return:                                           ; preds = %while.end, %if.then
  %9 = load %struct.NAMED*, %struct.NAMED** %retval, align 8, !dbg !10973
  ret %struct.NAMED* %9, !dbg !10973
}

; Function Attrs: nounwind uwtable
define internal i32 @setElementTypePrefix(%struct.XML_ParserStruct* %parser, %struct.ELEMENT_TYPE* %elementType) #0 !dbg !916 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %elementType.addr = alloca %struct.ELEMENT_TYPE*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %name = alloca i8*, align 8
  %prefix = alloca %struct.prefix*, align 8
  %s = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !10974, metadata !1076), !dbg !10975
  store %struct.ELEMENT_TYPE* %elementType, %struct.ELEMENT_TYPE** %elementType.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ELEMENT_TYPE** %elementType.addr, metadata !10976, metadata !1076), !dbg !10977
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !10978, metadata !1076), !dbg !10979
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !10980
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !10980
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !10980
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !10979
  call void @llvm.dbg.declare(metadata i8** %name, metadata !10981, metadata !1076), !dbg !10982
  %2 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8, !dbg !10983
  %name1 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %2, i32 0, i32 0, !dbg !10985
  %3 = load i8*, i8** %name1, align 8, !dbg !10985
  store i8* %3, i8** %name, align 8, !dbg !10986
  br label %for.cond, !dbg !10987

for.cond:                                         ; preds = %for.inc56, %entry
  %4 = load i8*, i8** %name, align 8, !dbg !10988
  %5 = load i8, i8* %4, align 1, !dbg !10991
  %tobool = icmp ne i8 %5, 0, !dbg !10992
  br i1 %tobool, label %for.body, label %for.end58, !dbg !10992

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %name, align 8, !dbg !10993
  %7 = load i8, i8* %6, align 1, !dbg !10996
  %conv = sext i8 %7 to i32, !dbg !10996
  %cmp = icmp eq i32 %conv, 58, !dbg !10997
  br i1 %cmp, label %if.then, label %if.end55, !dbg !10998

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix, metadata !10999, metadata !1076), !dbg !11001
  call void @llvm.dbg.declare(metadata i8** %s, metadata !11002, metadata !1076), !dbg !11003
  %8 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8, !dbg !11004
  %name3 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %8, i32 0, i32 0, !dbg !11006
  %9 = load i8*, i8** %name3, align 8, !dbg !11006
  store i8* %9, i8** %s, align 8, !dbg !11007
  br label %for.cond4, !dbg !11008

for.cond4:                                        ; preds = %for.inc, %if.then
  %10 = load i8*, i8** %s, align 8, !dbg !11009
  %11 = load i8*, i8** %name, align 8, !dbg !11012
  %cmp5 = icmp ne i8* %10, %11, !dbg !11013
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !11014

for.body7:                                        ; preds = %for.cond4
  %12 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11015
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 4, !dbg !11015
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool, i32 0, i32 3, !dbg !11015
  %13 = load i8*, i8** %ptr, align 8, !dbg !11015
  %14 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11015
  %pool8 = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 4, !dbg !11015
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool8, i32 0, i32 2, !dbg !11015
  %15 = load i8*, i8** %end, align 8, !dbg !11015
  %cmp9 = icmp eq i8* %13, %15, !dbg !11015
  br i1 %cmp9, label %land.lhs.true, label %cond.false, !dbg !11015

land.lhs.true:                                    ; preds = %for.body7
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11018
  %pool11 = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 4, !dbg !11018
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool11), !dbg !11018
  %tobool12 = icmp ne i8 %call, 0, !dbg !11018
  br i1 %tobool12, label %cond.false, label %cond.true, !dbg !11020

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then15, !dbg !11021

cond.false:                                       ; preds = %land.lhs.true, %for.body7
  %17 = load i8*, i8** %s, align 8, !dbg !11023
  %18 = load i8, i8* %17, align 1, !dbg !11023
  %19 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11023
  %pool13 = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 4, !dbg !11023
  %ptr14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool13, i32 0, i32 3, !dbg !11023
  %20 = load i8*, i8** %ptr14, align 8, !dbg !11023
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11023
  store i8* %incdec.ptr, i8** %ptr14, align 8, !dbg !11023
  store i8 %18, i8* %20, align 1, !dbg !11023
  br i1 true, label %if.end, label %if.then15, !dbg !11025

if.then15:                                        ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !11026
  br label %return, !dbg !11026

if.end:                                           ; preds = %cond.false, %cond.true
  br label %for.inc, !dbg !11027

for.inc:                                          ; preds = %if.end
  %21 = load i8*, i8** %s, align 8, !dbg !11028
  %incdec.ptr16 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !11028
  store i8* %incdec.ptr16, i8** %s, align 8, !dbg !11028
  br label %for.cond4, !dbg !11030

for.end:                                          ; preds = %for.cond4
  %22 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11031
  %pool17 = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 4, !dbg !11031
  %ptr18 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool17, i32 0, i32 3, !dbg !11031
  %23 = load i8*, i8** %ptr18, align 8, !dbg !11031
  %24 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11031
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %24, i32 0, i32 4, !dbg !11031
  %end20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool19, i32 0, i32 2, !dbg !11031
  %25 = load i8*, i8** %end20, align 8, !dbg !11031
  %cmp21 = icmp eq i8* %23, %25, !dbg !11031
  br i1 %cmp21, label %land.lhs.true23, label %cond.false28, !dbg !11031

land.lhs.true23:                                  ; preds = %for.end
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11033
  %pool24 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 4, !dbg !11033
  %call25 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool24), !dbg !11033
  %tobool26 = icmp ne i8 %call25, 0, !dbg !11033
  br i1 %tobool26, label %cond.false28, label %cond.true27, !dbg !11035

cond.true27:                                      ; preds = %land.lhs.true23
  br i1 false, label %if.end33, label %if.then32, !dbg !11036

cond.false28:                                     ; preds = %land.lhs.true23, %for.end
  %27 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11038
  %pool29 = getelementptr inbounds %struct.DTD, %struct.DTD* %27, i32 0, i32 4, !dbg !11038
  %ptr30 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool29, i32 0, i32 3, !dbg !11038
  %28 = load i8*, i8** %ptr30, align 8, !dbg !11038
  %incdec.ptr31 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !11038
  store i8* %incdec.ptr31, i8** %ptr30, align 8, !dbg !11038
  store i8 0, i8* %28, align 1, !dbg !11038
  br i1 true, label %if.end33, label %if.then32, !dbg !11040

if.then32:                                        ; preds = %cond.false28, %cond.true27
  store i32 0, i32* %retval, align 4, !dbg !11041
  br label %return, !dbg !11041

if.end33:                                         ; preds = %cond.false28, %cond.true27
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11042
  %30 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11043
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %30, i32 0, i32 3, !dbg !11044
  %31 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11045
  %pool34 = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 4, !dbg !11045
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool34, i32 0, i32 4, !dbg !11045
  %32 = load i8*, i8** %start, align 8, !dbg !11045
  %call35 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %29, %struct.HASH_TABLE* %prefixes, i8* %32, i64 16), !dbg !11046
  %33 = bitcast %struct.NAMED* %call35 to %struct.prefix*, !dbg !11047
  store %struct.prefix* %33, %struct.prefix** %prefix, align 8, !dbg !11048
  %34 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !11049
  %tobool36 = icmp ne %struct.prefix* %34, null, !dbg !11049
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !11051

if.then37:                                        ; preds = %if.end33
  store i32 0, i32* %retval, align 4, !dbg !11052
  br label %return, !dbg !11052

if.end38:                                         ; preds = %if.end33
  %35 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !11053
  %name39 = getelementptr inbounds %struct.prefix, %struct.prefix* %35, i32 0, i32 0, !dbg !11055
  %36 = load i8*, i8** %name39, align 8, !dbg !11055
  %37 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11056
  %pool40 = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 4, !dbg !11056
  %start41 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool40, i32 0, i32 4, !dbg !11056
  %38 = load i8*, i8** %start41, align 8, !dbg !11056
  %cmp42 = icmp eq i8* %36, %38, !dbg !11057
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !11058

if.then44:                                        ; preds = %if.end38
  %39 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11059
  %pool45 = getelementptr inbounds %struct.DTD, %struct.DTD* %39, i32 0, i32 4, !dbg !11059
  %ptr46 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool45, i32 0, i32 3, !dbg !11059
  %40 = load i8*, i8** %ptr46, align 8, !dbg !11059
  %41 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11059
  %pool47 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 4, !dbg !11059
  %start48 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool47, i32 0, i32 4, !dbg !11059
  store i8* %40, i8** %start48, align 8, !dbg !11059
  br label %if.end53, !dbg !11059

if.else:                                          ; preds = %if.end38
  %42 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11060
  %pool49 = getelementptr inbounds %struct.DTD, %struct.DTD* %42, i32 0, i32 4, !dbg !11060
  %start50 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool49, i32 0, i32 4, !dbg !11060
  %43 = load i8*, i8** %start50, align 8, !dbg !11060
  %44 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11060
  %pool51 = getelementptr inbounds %struct.DTD, %struct.DTD* %44, i32 0, i32 4, !dbg !11060
  %ptr52 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool51, i32 0, i32 3, !dbg !11060
  store i8* %43, i8** %ptr52, align 8, !dbg !11060
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then44
  %45 = load %struct.prefix*, %struct.prefix** %prefix, align 8, !dbg !11061
  %46 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8, !dbg !11062
  %prefix54 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %46, i32 0, i32 1, !dbg !11063
  store %struct.prefix* %45, %struct.prefix** %prefix54, align 8, !dbg !11064
  br label %if.end55, !dbg !11065

if.end55:                                         ; preds = %if.end53, %for.body
  br label %for.inc56, !dbg !11066

for.inc56:                                        ; preds = %if.end55
  %47 = load i8*, i8** %name, align 8, !dbg !11067
  %incdec.ptr57 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !11067
  store i8* %incdec.ptr57, i8** %name, align 8, !dbg !11067
  br label %for.cond, !dbg !11069

for.end58:                                        ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !11070
  br label %return, !dbg !11070

return:                                           ; preds = %for.end58, %if.then37, %if.then32, %if.then15
  %48 = load i32, i32* %retval, align 4, !dbg !11071
  ret i32 %48, !dbg !11071
}

; Function Attrs: nounwind uwtable
define internal i32 @addBinding(%struct.XML_ParserStruct* %parser, %struct.prefix* %prefix, %struct.attribute_id* %attId, i8* %uri, %struct.binding** %bindingsPtr) #0 !dbg !919 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %prefix.addr = alloca %struct.prefix*, align 8
  %attId.addr = alloca %struct.attribute_id*, align 8
  %uri.addr = alloca i8*, align 8
  %bindingsPtr.addr = alloca %struct.binding**, align 8
  %mustBeXML = alloca i8, align 1
  %isXML = alloca i8, align 1
  %isXMLNS = alloca i8, align 1
  %b = alloca %struct.binding*, align 8
  %len = alloca i32, align 4
  %temp = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !11072, metadata !1076), !dbg !11073
  store %struct.prefix* %prefix, %struct.prefix** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.prefix** %prefix.addr, metadata !11074, metadata !1076), !dbg !11075
  store %struct.attribute_id* %attId, %struct.attribute_id** %attId.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute_id** %attId.addr, metadata !11076, metadata !1076), !dbg !11077
  store i8* %uri, i8** %uri.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uri.addr, metadata !11078, metadata !1076), !dbg !11079
  store %struct.binding** %bindingsPtr, %struct.binding*** %bindingsPtr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.binding*** %bindingsPtr.addr, metadata !11080, metadata !1076), !dbg !11081
  call void @llvm.dbg.declare(metadata i8* %mustBeXML, metadata !11082, metadata !1076), !dbg !11083
  store i8 0, i8* %mustBeXML, align 1, !dbg !11083
  call void @llvm.dbg.declare(metadata i8* %isXML, metadata !11084, metadata !1076), !dbg !11085
  store i8 1, i8* %isXML, align 1, !dbg !11085
  call void @llvm.dbg.declare(metadata i8* %isXMLNS, metadata !11086, metadata !1076), !dbg !11087
  store i8 1, i8* %isXMLNS, align 1, !dbg !11087
  call void @llvm.dbg.declare(metadata %struct.binding** %b, metadata !11088, metadata !1076), !dbg !11089
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11090, metadata !1076), !dbg !11091
  %0 = load i8*, i8** %uri.addr, align 8, !dbg !11092
  %1 = load i8, i8* %0, align 1, !dbg !11094
  %conv = sext i8 %1 to i32, !dbg !11094
  %cmp = icmp eq i32 %conv, 0, !dbg !11095
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11096

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11097
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %2, i32 0, i32 0, !dbg !11099
  %3 = load i8*, i8** %name, align 8, !dbg !11099
  %tobool = icmp ne i8* %3, null, !dbg !11097
  br i1 %tobool, label %if.then, label %if.end, !dbg !11100

if.then:                                          ; preds = %land.lhs.true
  store i32 28, i32* %retval, align 4, !dbg !11101
  br label %return, !dbg !11101

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11102
  %name2 = getelementptr inbounds %struct.prefix, %struct.prefix* %4, i32 0, i32 0, !dbg !11104
  %5 = load i8*, i8** %name2, align 8, !dbg !11104
  %tobool3 = icmp ne i8* %5, null, !dbg !11102
  br i1 %tobool3, label %land.lhs.true4, label %if.end48, !dbg !11105

land.lhs.true4:                                   ; preds = %if.end
  %6 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11106
  %name5 = getelementptr inbounds %struct.prefix, %struct.prefix* %6, i32 0, i32 0, !dbg !11108
  %7 = load i8*, i8** %name5, align 8, !dbg !11108
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11106
  %8 = load i8, i8* %arrayidx, align 1, !dbg !11106
  %conv6 = sext i8 %8 to i32, !dbg !11106
  %cmp7 = icmp eq i32 %conv6, 120, !dbg !11109
  br i1 %cmp7, label %land.lhs.true9, label %if.end48, !dbg !11110

land.lhs.true9:                                   ; preds = %land.lhs.true4
  %9 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11111
  %name10 = getelementptr inbounds %struct.prefix, %struct.prefix* %9, i32 0, i32 0, !dbg !11112
  %10 = load i8*, i8** %name10, align 8, !dbg !11112
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !11111
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !11111
  %conv12 = sext i8 %11 to i32, !dbg !11111
  %cmp13 = icmp eq i32 %conv12, 109, !dbg !11113
  br i1 %cmp13, label %land.lhs.true15, label %if.end48, !dbg !11114

land.lhs.true15:                                  ; preds = %land.lhs.true9
  %12 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11115
  %name16 = getelementptr inbounds %struct.prefix, %struct.prefix* %12, i32 0, i32 0, !dbg !11116
  %13 = load i8*, i8** %name16, align 8, !dbg !11116
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 2, !dbg !11115
  %14 = load i8, i8* %arrayidx17, align 1, !dbg !11115
  %conv18 = sext i8 %14 to i32, !dbg !11115
  %cmp19 = icmp eq i32 %conv18, 108, !dbg !11117
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !11118

if.then21:                                        ; preds = %land.lhs.true15
  %15 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11120
  %name22 = getelementptr inbounds %struct.prefix, %struct.prefix* %15, i32 0, i32 0, !dbg !11123
  %16 = load i8*, i8** %name22, align 8, !dbg !11123
  %arrayidx23 = getelementptr inbounds i8, i8* %16, i64 3, !dbg !11120
  %17 = load i8, i8* %arrayidx23, align 1, !dbg !11120
  %conv24 = sext i8 %17 to i32, !dbg !11120
  %cmp25 = icmp eq i32 %conv24, 110, !dbg !11124
  br i1 %cmp25, label %land.lhs.true27, label %if.end40, !dbg !11125

land.lhs.true27:                                  ; preds = %if.then21
  %18 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11126
  %name28 = getelementptr inbounds %struct.prefix, %struct.prefix* %18, i32 0, i32 0, !dbg !11128
  %19 = load i8*, i8** %name28, align 8, !dbg !11128
  %arrayidx29 = getelementptr inbounds i8, i8* %19, i64 4, !dbg !11126
  %20 = load i8, i8* %arrayidx29, align 1, !dbg !11126
  %conv30 = sext i8 %20 to i32, !dbg !11126
  %cmp31 = icmp eq i32 %conv30, 115, !dbg !11129
  br i1 %cmp31, label %land.lhs.true33, label %if.end40, !dbg !11130

land.lhs.true33:                                  ; preds = %land.lhs.true27
  %21 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11131
  %name34 = getelementptr inbounds %struct.prefix, %struct.prefix* %21, i32 0, i32 0, !dbg !11132
  %22 = load i8*, i8** %name34, align 8, !dbg !11132
  %arrayidx35 = getelementptr inbounds i8, i8* %22, i64 5, !dbg !11131
  %23 = load i8, i8* %arrayidx35, align 1, !dbg !11131
  %conv36 = sext i8 %23 to i32, !dbg !11131
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !11133
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !11134

if.then39:                                        ; preds = %land.lhs.true33
  store i32 39, i32* %retval, align 4, !dbg !11136
  br label %return, !dbg !11136

if.end40:                                         ; preds = %land.lhs.true33, %land.lhs.true27, %if.then21
  %24 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11137
  %name41 = getelementptr inbounds %struct.prefix, %struct.prefix* %24, i32 0, i32 0, !dbg !11139
  %25 = load i8*, i8** %name41, align 8, !dbg !11139
  %arrayidx42 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !11137
  %26 = load i8, i8* %arrayidx42, align 1, !dbg !11137
  %conv43 = sext i8 %26 to i32, !dbg !11137
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !11140
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !11141

if.then46:                                        ; preds = %if.end40
  store i8 1, i8* %mustBeXML, align 1, !dbg !11142
  br label %if.end47, !dbg !11143

if.end47:                                         ; preds = %if.then46, %if.end40
  br label %if.end48, !dbg !11144

if.end48:                                         ; preds = %if.end47, %land.lhs.true15, %land.lhs.true9, %land.lhs.true4, %if.end
  store i32 0, i32* %len, align 4, !dbg !11145
  br label %for.cond, !dbg !11147

for.cond:                                         ; preds = %for.inc, %if.end48
  %27 = load i32, i32* %len, align 4, !dbg !11148
  %idxprom = sext i32 %27 to i64, !dbg !11151
  %28 = load i8*, i8** %uri.addr, align 8, !dbg !11151
  %arrayidx49 = getelementptr inbounds i8, i8* %28, i64 %idxprom, !dbg !11151
  %29 = load i8, i8* %arrayidx49, align 1, !dbg !11151
  %tobool50 = icmp ne i8 %29, 0, !dbg !11152
  br i1 %tobool50, label %for.body, label %for.end, !dbg !11152

for.body:                                         ; preds = %for.cond
  %30 = load i8, i8* %isXML, align 1, !dbg !11153
  %conv51 = zext i8 %30 to i32, !dbg !11153
  %tobool52 = icmp ne i32 %conv51, 0, !dbg !11153
  br i1 %tobool52, label %land.lhs.true53, label %if.end65, !dbg !11156

land.lhs.true53:                                  ; preds = %for.body
  %31 = load i32, i32* %len, align 4, !dbg !11157
  %cmp54 = icmp sgt i32 %31, 36, !dbg !11159
  br i1 %cmp54, label %if.then64, label %lor.lhs.false, !dbg !11160

lor.lhs.false:                                    ; preds = %land.lhs.true53
  %32 = load i32, i32* %len, align 4, !dbg !11161
  %idxprom56 = sext i32 %32 to i64, !dbg !11163
  %33 = load i8*, i8** %uri.addr, align 8, !dbg !11163
  %arrayidx57 = getelementptr inbounds i8, i8* %33, i64 %idxprom56, !dbg !11163
  %34 = load i8, i8* %arrayidx57, align 1, !dbg !11163
  %conv58 = sext i8 %34 to i32, !dbg !11163
  %35 = load i32, i32* %len, align 4, !dbg !11164
  %idxprom59 = sext i32 %35 to i64, !dbg !11165
  %arrayidx60 = getelementptr inbounds [37 x i8], [37 x i8]* @addBinding.xmlNamespace, i64 0, i64 %idxprom59, !dbg !11165
  %36 = load i8, i8* %arrayidx60, align 1, !dbg !11165
  %conv61 = sext i8 %36 to i32, !dbg !11165
  %cmp62 = icmp ne i32 %conv58, %conv61, !dbg !11166
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !11167

if.then64:                                        ; preds = %lor.lhs.false, %land.lhs.true53
  store i8 0, i8* %isXML, align 1, !dbg !11168
  br label %if.end65, !dbg !11169

if.end65:                                         ; preds = %if.then64, %lor.lhs.false, %for.body
  %37 = load i8, i8* %mustBeXML, align 1, !dbg !11170
  %tobool66 = icmp ne i8 %37, 0, !dbg !11170
  br i1 %tobool66, label %if.end83, label %land.lhs.true67, !dbg !11172

land.lhs.true67:                                  ; preds = %if.end65
  %38 = load i8, i8* %isXMLNS, align 1, !dbg !11173
  %conv68 = zext i8 %38 to i32, !dbg !11173
  %tobool69 = icmp ne i32 %conv68, 0, !dbg !11173
  br i1 %tobool69, label %land.lhs.true70, label %if.end83, !dbg !11175

land.lhs.true70:                                  ; preds = %land.lhs.true67
  %39 = load i32, i32* %len, align 4, !dbg !11176
  %cmp71 = icmp sgt i32 %39, 29, !dbg !11177
  br i1 %cmp71, label %if.then82, label %lor.lhs.false73, !dbg !11178

lor.lhs.false73:                                  ; preds = %land.lhs.true70
  %40 = load i32, i32* %len, align 4, !dbg !11179
  %idxprom74 = sext i32 %40 to i64, !dbg !11181
  %41 = load i8*, i8** %uri.addr, align 8, !dbg !11181
  %arrayidx75 = getelementptr inbounds i8, i8* %41, i64 %idxprom74, !dbg !11181
  %42 = load i8, i8* %arrayidx75, align 1, !dbg !11181
  %conv76 = sext i8 %42 to i32, !dbg !11181
  %43 = load i32, i32* %len, align 4, !dbg !11182
  %idxprom77 = sext i32 %43 to i64, !dbg !11183
  %arrayidx78 = getelementptr inbounds [30 x i8], [30 x i8]* @addBinding.xmlnsNamespace, i64 0, i64 %idxprom77, !dbg !11183
  %44 = load i8, i8* %arrayidx78, align 1, !dbg !11183
  %conv79 = sext i8 %44 to i32, !dbg !11183
  %cmp80 = icmp ne i32 %conv76, %conv79, !dbg !11184
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !11185

if.then82:                                        ; preds = %lor.lhs.false73, %land.lhs.true70
  store i8 0, i8* %isXMLNS, align 1, !dbg !11187
  br label %if.end83, !dbg !11188

if.end83:                                         ; preds = %if.then82, %lor.lhs.false73, %land.lhs.true67, %if.end65
  br label %for.inc, !dbg !11189

for.inc:                                          ; preds = %if.end83
  %45 = load i32, i32* %len, align 4, !dbg !11190
  %inc = add nsw i32 %45, 1, !dbg !11190
  store i32 %inc, i32* %len, align 4, !dbg !11190
  br label %for.cond, !dbg !11192

for.end:                                          ; preds = %for.cond
  %46 = load i8, i8* %isXML, align 1, !dbg !11193
  %conv84 = zext i8 %46 to i32, !dbg !11193
  %tobool85 = icmp ne i32 %conv84, 0, !dbg !11193
  br i1 %tobool85, label %land.rhs, label %land.end, !dbg !11194

land.rhs:                                         ; preds = %for.end
  %47 = load i32, i32* %len, align 4, !dbg !11195
  %cmp86 = icmp eq i32 %47, 36, !dbg !11196
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %48 = phi i1 [ false, %for.end ], [ %cmp86, %land.rhs ]
  %land.ext = zext i1 %48 to i32, !dbg !11197
  %conv88 = trunc i32 %land.ext to i8, !dbg !11199
  store i8 %conv88, i8* %isXML, align 1, !dbg !11200
  %49 = load i8, i8* %isXMLNS, align 1, !dbg !11201
  %conv89 = zext i8 %49 to i32, !dbg !11201
  %tobool90 = icmp ne i32 %conv89, 0, !dbg !11201
  br i1 %tobool90, label %land.rhs91, label %land.end94, !dbg !11202

land.rhs91:                                       ; preds = %land.end
  %50 = load i32, i32* %len, align 4, !dbg !11203
  %cmp92 = icmp eq i32 %50, 29, !dbg !11204
  br label %land.end94

land.end94:                                       ; preds = %land.rhs91, %land.end
  %51 = phi i1 [ false, %land.end ], [ %cmp92, %land.rhs91 ]
  %land.ext95 = zext i1 %51 to i32, !dbg !11205
  %conv96 = trunc i32 %land.ext95 to i8, !dbg !11206
  store i8 %conv96, i8* %isXMLNS, align 1, !dbg !11207
  %52 = load i8, i8* %mustBeXML, align 1, !dbg !11208
  %conv97 = zext i8 %52 to i32, !dbg !11208
  %53 = load i8, i8* %isXML, align 1, !dbg !11210
  %conv98 = zext i8 %53 to i32, !dbg !11210
  %cmp99 = icmp ne i32 %conv97, %conv98, !dbg !11211
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !11212

if.then101:                                       ; preds = %land.end94
  %54 = load i8, i8* %mustBeXML, align 1, !dbg !11213
  %conv102 = zext i8 %54 to i32, !dbg !11213
  %tobool103 = icmp ne i32 %conv102, 0, !dbg !11213
  %cond = select i1 %tobool103, i32 38, i32 40, !dbg !11213
  store i32 %cond, i32* %retval, align 4, !dbg !11214
  br label %return, !dbg !11214

if.end104:                                        ; preds = %land.end94
  %55 = load i8, i8* %isXMLNS, align 1, !dbg !11215
  %tobool105 = icmp ne i8 %55, 0, !dbg !11215
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !11217

if.then106:                                       ; preds = %if.end104
  store i32 40, i32* %retval, align 4, !dbg !11218
  br label %return, !dbg !11218

if.end107:                                        ; preds = %if.end104
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11219
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 83, !dbg !11219
  %57 = load i8, i8* %m_namespaceSeparator, align 4, !dbg !11219
  %tobool108 = icmp ne i8 %57, 0, !dbg !11219
  br i1 %tobool108, label %if.then109, label %if.end111, !dbg !11221

if.then109:                                       ; preds = %if.end107
  %58 = load i32, i32* %len, align 4, !dbg !11222
  %inc110 = add nsw i32 %58, 1, !dbg !11222
  store i32 %inc110, i32* %len, align 4, !dbg !11222
  br label %if.end111, !dbg !11223

if.end111:                                        ; preds = %if.then109, %if.end107
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11224
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 70, !dbg !11224
  %60 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8, !dbg !11224
  %tobool112 = icmp ne %struct.binding* %60, null, !dbg !11224
  br i1 %tobool112, label %if.then113, label %if.else, !dbg !11226

if.then113:                                       ; preds = %if.end111
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11227
  %m_freeBindingList114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 70, !dbg !11227
  %62 = load %struct.binding*, %struct.binding** %m_freeBindingList114, align 8, !dbg !11227
  store %struct.binding* %62, %struct.binding** %b, align 8, !dbg !11229
  %63 = load i32, i32* %len, align 4, !dbg !11230
  %64 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11232
  %uriAlloc = getelementptr inbounds %struct.binding, %struct.binding* %64, i32 0, i32 6, !dbg !11233
  %65 = load i32, i32* %uriAlloc, align 4, !dbg !11233
  %cmp115 = icmp sgt i32 %63, %65, !dbg !11234
  br i1 %cmp115, label %if.then117, label %if.end127, !dbg !11235

if.then117:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !11236, metadata !1076), !dbg !11238
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11239
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 3, !dbg !11239
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1, !dbg !11239
  %67 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8, !dbg !11239
  %68 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11239
  %uri118 = getelementptr inbounds %struct.binding, %struct.binding* %68, i32 0, i32 4, !dbg !11239
  %69 = load i8*, i8** %uri118, align 8, !dbg !11239
  %70 = load i32, i32* %len, align 4, !dbg !11239
  %add = add nsw i32 %70, 24, !dbg !11239
  %conv119 = sext i32 %add to i64, !dbg !11239
  %mul = mul i64 1, %conv119, !dbg !11239
  %call = call i8* %67(i8* %69, i64 %mul), !dbg !11239
  store i8* %call, i8** %temp, align 8, !dbg !11238
  %71 = load i8*, i8** %temp, align 8, !dbg !11240
  %cmp120 = icmp eq i8* %71, null, !dbg !11242
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !11243

if.then122:                                       ; preds = %if.then117
  store i32 1, i32* %retval, align 4, !dbg !11244
  br label %return, !dbg !11244

if.end123:                                        ; preds = %if.then117
  %72 = load i8*, i8** %temp, align 8, !dbg !11245
  %73 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11246
  %uri124 = getelementptr inbounds %struct.binding, %struct.binding* %73, i32 0, i32 4, !dbg !11247
  store i8* %72, i8** %uri124, align 8, !dbg !11248
  %74 = load i32, i32* %len, align 4, !dbg !11249
  %add125 = add nsw i32 %74, 24, !dbg !11250
  %75 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11251
  %uriAlloc126 = getelementptr inbounds %struct.binding, %struct.binding* %75, i32 0, i32 6, !dbg !11252
  store i32 %add125, i32* %uriAlloc126, align 4, !dbg !11253
  br label %if.end127, !dbg !11254

if.end127:                                        ; preds = %if.end123, %if.then113
  %76 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11255
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %76, i32 0, i32 1, !dbg !11256
  %77 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8, !dbg !11256
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11257
  %m_freeBindingList128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 70, !dbg !11257
  store %struct.binding* %77, %struct.binding** %m_freeBindingList128, align 8, !dbg !11258
  br label %if.end148, !dbg !11259

if.else:                                          ; preds = %if.end111
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11260
  %m_mem129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 3, !dbg !11260
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem129, i32 0, i32 0, !dbg !11260
  %80 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8, !dbg !11260
  %call130 = call i8* %80(i64 48), !dbg !11260
  %81 = bitcast i8* %call130 to %struct.binding*, !dbg !11262
  store %struct.binding* %81, %struct.binding** %b, align 8, !dbg !11263
  %82 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11264
  %tobool131 = icmp ne %struct.binding* %82, null, !dbg !11264
  br i1 %tobool131, label %if.end133, label %if.then132, !dbg !11266

if.then132:                                       ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !11267
  br label %return, !dbg !11267

if.end133:                                        ; preds = %if.else
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11268
  %m_mem134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 3, !dbg !11268
  %malloc_fcn135 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem134, i32 0, i32 0, !dbg !11268
  %84 = load i8* (i64)*, i8* (i64)** %malloc_fcn135, align 8, !dbg !11268
  %85 = load i32, i32* %len, align 4, !dbg !11268
  %add136 = add nsw i32 %85, 24, !dbg !11268
  %conv137 = sext i32 %add136 to i64, !dbg !11268
  %mul138 = mul i64 1, %conv137, !dbg !11268
  %call139 = call i8* %84(i64 %mul138), !dbg !11268
  %86 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11269
  %uri140 = getelementptr inbounds %struct.binding, %struct.binding* %86, i32 0, i32 4, !dbg !11270
  store i8* %call139, i8** %uri140, align 8, !dbg !11271
  %87 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11272
  %uri141 = getelementptr inbounds %struct.binding, %struct.binding* %87, i32 0, i32 4, !dbg !11274
  %88 = load i8*, i8** %uri141, align 8, !dbg !11274
  %tobool142 = icmp ne i8* %88, null, !dbg !11272
  br i1 %tobool142, label %if.end145, label %if.then143, !dbg !11275

if.then143:                                       ; preds = %if.end133
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11276
  %m_mem144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 3, !dbg !11276
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem144, i32 0, i32 2, !dbg !11276
  %90 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !11276
  %91 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11276
  %92 = bitcast %struct.binding* %91 to i8*, !dbg !11276
  call void %90(i8* %92), !dbg !11276
  store i32 1, i32* %retval, align 4, !dbg !11278
  br label %return, !dbg !11278

if.end145:                                        ; preds = %if.end133
  %93 = load i32, i32* %len, align 4, !dbg !11279
  %add146 = add nsw i32 %93, 24, !dbg !11280
  %94 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11281
  %uriAlloc147 = getelementptr inbounds %struct.binding, %struct.binding* %94, i32 0, i32 6, !dbg !11282
  store i32 %add146, i32* %uriAlloc147, align 4, !dbg !11283
  br label %if.end148

if.end148:                                        ; preds = %if.end145, %if.end127
  %95 = load i32, i32* %len, align 4, !dbg !11284
  %96 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11285
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %96, i32 0, i32 5, !dbg !11286
  store i32 %95, i32* %uriLen, align 8, !dbg !11287
  %97 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11288
  %uri149 = getelementptr inbounds %struct.binding, %struct.binding* %97, i32 0, i32 4, !dbg !11289
  %98 = load i8*, i8** %uri149, align 8, !dbg !11289
  %99 = load i8*, i8** %uri.addr, align 8, !dbg !11290
  %100 = load i32, i32* %len, align 4, !dbg !11291
  %conv150 = sext i32 %100 to i64, !dbg !11291
  %mul151 = mul i64 %conv150, 1, !dbg !11292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 %mul151, i32 1, i1 false), !dbg !11293
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11294
  %m_namespaceSeparator152 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 83, !dbg !11294
  %102 = load i8, i8* %m_namespaceSeparator152, align 4, !dbg !11294
  %tobool153 = icmp ne i8 %102, 0, !dbg !11294
  br i1 %tobool153, label %if.then154, label %if.end159, !dbg !11296

if.then154:                                       ; preds = %if.end148
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11297
  %m_namespaceSeparator155 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 83, !dbg !11297
  %104 = load i8, i8* %m_namespaceSeparator155, align 4, !dbg !11297
  %105 = load i32, i32* %len, align 4, !dbg !11298
  %sub = sub nsw i32 %105, 1, !dbg !11299
  %idxprom156 = sext i32 %sub to i64, !dbg !11300
  %106 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11300
  %uri157 = getelementptr inbounds %struct.binding, %struct.binding* %106, i32 0, i32 4, !dbg !11301
  %107 = load i8*, i8** %uri157, align 8, !dbg !11301
  %arrayidx158 = getelementptr inbounds i8, i8* %107, i64 %idxprom156, !dbg !11300
  store i8 %104, i8* %arrayidx158, align 1, !dbg !11302
  br label %if.end159, !dbg !11300

if.end159:                                        ; preds = %if.then154, %if.end148
  %108 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11303
  %109 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11304
  %prefix160 = getelementptr inbounds %struct.binding, %struct.binding* %109, i32 0, i32 0, !dbg !11305
  store %struct.prefix* %108, %struct.prefix** %prefix160, align 8, !dbg !11306
  %110 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !11307
  %111 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11308
  %attId161 = getelementptr inbounds %struct.binding, %struct.binding* %111, i32 0, i32 3, !dbg !11309
  store %struct.attribute_id* %110, %struct.attribute_id** %attId161, align 8, !dbg !11310
  %112 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11311
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %112, i32 0, i32 1, !dbg !11312
  %113 = load %struct.binding*, %struct.binding** %binding, align 8, !dbg !11312
  %114 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11313
  %prevPrefixBinding = getelementptr inbounds %struct.binding, %struct.binding* %114, i32 0, i32 2, !dbg !11314
  store %struct.binding* %113, %struct.binding** %prevPrefixBinding, align 8, !dbg !11315
  %115 = load i8*, i8** %uri.addr, align 8, !dbg !11316
  %116 = load i8, i8* %115, align 1, !dbg !11318
  %conv162 = sext i8 %116 to i32, !dbg !11318
  %cmp163 = icmp eq i32 %conv162, 0, !dbg !11319
  br i1 %cmp163, label %land.lhs.true165, label %if.else170, !dbg !11320

land.lhs.true165:                                 ; preds = %if.end159
  %117 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11321
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11323
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 65, !dbg !11323
  %119 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !11323
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %119, i32 0, i32 9, !dbg !11324
  %cmp166 = icmp eq %struct.prefix* %117, %defaultPrefix, !dbg !11325
  br i1 %cmp166, label %if.then168, label %if.else170, !dbg !11326

if.then168:                                       ; preds = %land.lhs.true165
  %120 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11327
  %binding169 = getelementptr inbounds %struct.prefix, %struct.prefix* %120, i32 0, i32 1, !dbg !11328
  store %struct.binding* null, %struct.binding** %binding169, align 8, !dbg !11329
  br label %if.end172, !dbg !11327

if.else170:                                       ; preds = %land.lhs.true165, %if.end159
  %121 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11330
  %122 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11331
  %binding171 = getelementptr inbounds %struct.prefix, %struct.prefix* %122, i32 0, i32 1, !dbg !11332
  store %struct.binding* %121, %struct.binding** %binding171, align 8, !dbg !11333
  br label %if.end172

if.end172:                                        ; preds = %if.else170, %if.then168
  %123 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !11334
  %124 = load %struct.binding*, %struct.binding** %123, align 8, !dbg !11335
  %125 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11336
  %nextTagBinding173 = getelementptr inbounds %struct.binding, %struct.binding* %125, i32 0, i32 1, !dbg !11337
  store %struct.binding* %124, %struct.binding** %nextTagBinding173, align 8, !dbg !11338
  %126 = load %struct.binding*, %struct.binding** %b, align 8, !dbg !11339
  %127 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8, !dbg !11340
  store %struct.binding* %126, %struct.binding** %127, align 8, !dbg !11341
  %128 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8, !dbg !11342
  %tobool174 = icmp ne %struct.attribute_id* %128, null, !dbg !11342
  br i1 %tobool174, label %land.lhs.true175, label %if.end183, !dbg !11344

land.lhs.true175:                                 ; preds = %if.end172
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11345
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 23, !dbg !11345
  %130 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8, !dbg !11345
  %tobool176 = icmp ne void (i8*, i8*, i8*)* %130, null, !dbg !11345
  br i1 %tobool176, label %if.then177, label %if.end183, !dbg !11347

if.then177:                                       ; preds = %land.lhs.true175
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11348
  %m_startNamespaceDeclHandler178 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 23, !dbg !11348
  %132 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler178, align 8, !dbg !11348
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11349
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 1, !dbg !11349
  %134 = load i8*, i8** %m_handlerArg, align 8, !dbg !11349
  %135 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11350
  %name179 = getelementptr inbounds %struct.prefix, %struct.prefix* %135, i32 0, i32 0, !dbg !11351
  %136 = load i8*, i8** %name179, align 8, !dbg !11351
  %137 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8, !dbg !11352
  %binding180 = getelementptr inbounds %struct.prefix, %struct.prefix* %137, i32 0, i32 1, !dbg !11353
  %138 = load %struct.binding*, %struct.binding** %binding180, align 8, !dbg !11353
  %tobool181 = icmp ne %struct.binding* %138, null, !dbg !11352
  br i1 %tobool181, label %cond.true, label %cond.false, !dbg !11352

cond.true:                                        ; preds = %if.then177
  %139 = load i8*, i8** %uri.addr, align 8, !dbg !11354
  br label %cond.end, !dbg !11355

cond.false:                                       ; preds = %if.then177
  br label %cond.end, !dbg !11356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond182 = phi i8* [ %139, %cond.true ], [ null, %cond.false ], !dbg !11358
  call void %132(i8* %134, i8* %136, i8* %cond182), !dbg !11360
  br label %if.end183, !dbg !11360

if.end183:                                        ; preds = %cond.end, %land.lhs.true175, %if.end172
  store i32 0, i32* %retval, align 4, !dbg !11361
  br label %return, !dbg !11361

return:                                           ; preds = %if.end183, %if.then143, %if.then132, %if.then122, %if.then106, %if.then101, %if.then39, %if.then
  %140 = load i32, i32* %retval, align 4, !dbg !11362
  ret i32 %140, !dbg !11362
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 !dbg !927 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !11363, metadata !1076), !dbg !11364
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !11365, metadata !1076), !dbg !11366
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !11367, metadata !1076), !dbg !11368
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !11369, metadata !1076), !dbg !11370
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11371, metadata !1076), !dbg !11372
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11373
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11374
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34, !dbg !11374
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !11374
  %3 = load i8*, i8** %start.addr, align 8, !dbg !11375
  %4 = load i8*, i8** %end.addr, align 8, !dbg !11376
  %5 = load i8**, i8*** %endPtr.addr, align 8, !dbg !11377
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11378
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 85, !dbg !11378
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !11378
  %7 = load i8, i8* %finalBuffer, align 4, !dbg !11378
  %tobool = icmp ne i8 %7, 0, !dbg !11379
  %lnot = xor i1 %tobool, true, !dbg !11379
  %lnot.ext = zext i1 %lnot to i32, !dbg !11379
  %conv = trunc i32 %lnot.ext to i8, !dbg !11380
  %call = call i32 @doContent(%struct.XML_ParserStruct* %0, i32 1, %struct.encoding* %2, i8* %3, i8* %4, i8** %5, i8 zeroext %conv), !dbg !11381
  store i32 %call, i32* %result, align 4, !dbg !11372
  %8 = load i32, i32* %result, align 4, !dbg !11382
  %cmp = icmp eq i32 %8, 0, !dbg !11384
  br i1 %cmp, label %if.then, label %if.end5, !dbg !11385

if.then:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11386
  %call2 = call zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %9), !dbg !11389
  %tobool3 = icmp ne i8 %call2, 0, !dbg !11389
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !11390

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !11391
  br label %return, !dbg !11391

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !11392

if.end5:                                          ; preds = %if.end, %entry
  %10 = load i32, i32* %result, align 4, !dbg !11393
  store i32 %10, i32* %retval, align 4, !dbg !11394
  br label %return, !dbg !11394

return:                                           ; preds = %if.end5, %if.then4
  %11 = load i32, i32* %retval, align 4, !dbg !11395
  ret i32 %11, !dbg !11395
}

; Function Attrs: nounwind uwtable
define internal i32 @appendAttributeValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8 zeroext %isCdata, i8* %ptr, i8* %end, %struct.STRING_POOL* %pool) #0 !dbg !950 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %isCdata.addr = alloca i8, align 1
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %buf = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %checkEntityDecl = alloca i8, align 1
  %ch = alloca i8, align 1
  %result = alloca i32, align 4
  %textEnd = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !11396, metadata !1076), !dbg !11397
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.encoding** %enc.addr, metadata !11398, metadata !1076), !dbg !11399
  store i8 %isCdata, i8* %isCdata.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isCdata.addr, metadata !11400, metadata !1076), !dbg !11401
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11402, metadata !1076), !dbg !11403
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !11404, metadata !1076), !dbg !11405
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !11406, metadata !1076), !dbg !11407
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !11408, metadata !1076), !dbg !11409
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11410
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !11410
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !11410
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !11409
  br label %for.cond, !dbg !11411

for.cond:                                         ; preds = %sw.epilog, %entry
  call void @llvm.dbg.declare(metadata i8** %next, metadata !11412, metadata !1076), !dbg !11416
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !11417, metadata !1076), !dbg !11418
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11419
  %literalScanners = getelementptr inbounds %struct.encoding, %struct.encoding* %2, i32 0, i32 1, !dbg !11419
  %arrayidx = getelementptr inbounds [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %literalScanners, i64 0, i64 0, !dbg !11419
  %3 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !11419
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11419
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !11419
  %6 = load i8*, i8** %end.addr, align 8, !dbg !11419
  %call = call i32 %3(%struct.encoding* %4, i8* %5, i8* %6, i8** %next), !dbg !11419
  store i32 %call, i32* %tok, align 4, !dbg !11418
  %7 = load i32, i32* %tok, align 4, !dbg !11420
  switch i32 %7, label %sw.default [
    i32 -4, label %sw.bb
    i32 0, label %sw.bb1
    i32 -1, label %sw.bb2
    i32 10, label %sw.bb8
    i32 6, label %sw.bb52
    i32 -3, label %sw.bb57
    i32 39, label %sw.bb58
    i32 7, label %sw.bb58
    i32 9, label %sw.bb89
  ], !dbg !11421

sw.bb:                                            ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11422
  br label %return, !dbg !11422

sw.bb1:                                           ; preds = %for.cond
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11424
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11426
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34, !dbg !11426
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !11426
  %cmp = icmp eq %struct.encoding* %8, %10, !dbg !11427
  br i1 %cmp, label %if.then, label %if.end, !dbg !11428

if.then:                                          ; preds = %sw.bb1
  %11 = load i8*, i8** %next, align 8, !dbg !11429
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11430
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 47, !dbg !11430
  store i8* %11, i8** %m_eventPtr, align 8, !dbg !11431
  br label %if.end, !dbg !11430

if.end:                                           ; preds = %if.then, %sw.bb1
  store i32 4, i32* %retval, align 4, !dbg !11432
  br label %return, !dbg !11432

sw.bb2:                                           ; preds = %for.cond
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11433
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11435
  %m_encoding3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 34, !dbg !11435
  %15 = load %struct.encoding*, %struct.encoding** %m_encoding3, align 8, !dbg !11435
  %cmp4 = icmp eq %struct.encoding* %13, %15, !dbg !11436
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !11437

if.then5:                                         ; preds = %sw.bb2
  %16 = load i8*, i8** %ptr.addr, align 8, !dbg !11438
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11439
  %m_eventPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 47, !dbg !11439
  store i8* %16, i8** %m_eventPtr6, align 8, !dbg !11440
  br label %if.end7, !dbg !11439

if.end7:                                          ; preds = %if.then5, %sw.bb2
  store i32 4, i32* %retval, align 4, !dbg !11441
  br label %return, !dbg !11441

sw.bb8:                                           ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !11442, metadata !1076), !dbg !11444
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11445, metadata !1076), !dbg !11446
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11447, metadata !1076), !dbg !11448
  %18 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11449
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %18, i32 0, i32 7, !dbg !11449
  %19 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8, !dbg !11449
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11449
  %21 = load i8*, i8** %ptr.addr, align 8, !dbg !11449
  %call9 = call i32 %19(%struct.encoding* %20, i8* %21), !dbg !11449
  store i32 %call9, i32* %n, align 4, !dbg !11448
  %22 = load i32, i32* %n, align 4, !dbg !11450
  %cmp10 = icmp slt i32 %22, 0, !dbg !11452
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !11453

if.then11:                                        ; preds = %sw.bb8
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11454
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11457
  %m_encoding12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 34, !dbg !11457
  %25 = load %struct.encoding*, %struct.encoding** %m_encoding12, align 8, !dbg !11457
  %cmp13 = icmp eq %struct.encoding* %23, %25, !dbg !11458
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !11459

if.then14:                                        ; preds = %if.then11
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !11460
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11461
  %m_eventPtr15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 47, !dbg !11461
  store i8* %26, i8** %m_eventPtr15, align 8, !dbg !11462
  br label %if.end16, !dbg !11461

if.end16:                                         ; preds = %if.then14, %if.then11
  store i32 14, i32* %retval, align 4, !dbg !11463
  br label %return, !dbg !11463

if.end17:                                         ; preds = %sw.bb8
  %28 = load i8, i8* %isCdata.addr, align 1, !dbg !11464
  %tobool = icmp ne i8 %28, 0, !dbg !11464
  br i1 %tobool, label %if.end27, label %land.lhs.true, !dbg !11466

land.lhs.true:                                    ; preds = %if.end17
  %29 = load i32, i32* %n, align 4, !dbg !11467
  %cmp18 = icmp eq i32 %29, 32, !dbg !11469
  br i1 %cmp18, label %land.lhs.true19, label %if.end27, !dbg !11470

land.lhs.true19:                                  ; preds = %land.lhs.true
  %30 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11471
  %ptr20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %30, i32 0, i32 3, !dbg !11471
  %31 = load i8*, i8** %ptr20, align 8, !dbg !11471
  %32 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11471
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %32, i32 0, i32 4, !dbg !11471
  %33 = load i8*, i8** %start, align 8, !dbg !11471
  %sub.ptr.lhs.cast = ptrtoint i8* %31 to i64, !dbg !11471
  %sub.ptr.rhs.cast = ptrtoint i8* %33 to i64, !dbg !11471
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11471
  %cmp21 = icmp eq i64 %sub.ptr.sub, 0, !dbg !11472
  br i1 %cmp21, label %if.then26, label %lor.lhs.false, !dbg !11473

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %34 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11474
  %ptr22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %34, i32 0, i32 3, !dbg !11474
  %35 = load i8*, i8** %ptr22, align 8, !dbg !11474
  %arrayidx23 = getelementptr inbounds i8, i8* %35, i64 -1, !dbg !11474
  %36 = load i8, i8* %arrayidx23, align 1, !dbg !11474
  %conv = sext i8 %36 to i32, !dbg !11474
  %cmp24 = icmp eq i32 %conv, 32, !dbg !11476
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !11477

if.then26:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  br label %sw.epilog, !dbg !11479

if.end27:                                         ; preds = %lor.lhs.false, %land.lhs.true, %if.end17
  %37 = load i32, i32* %n, align 4, !dbg !11480
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !11481
  %call28 = call i32 @XmlUtf8Encode(i32 %37, i8* %arraydecay), !dbg !11482
  store i32 %call28, i32* %n, align 4, !dbg !11483
  %38 = load i32, i32* %n, align 4, !dbg !11484
  %tobool29 = icmp ne i32 %38, 0, !dbg !11484
  br i1 %tobool29, label %if.end37, label %if.then30, !dbg !11486

if.then30:                                        ; preds = %if.end27
  %39 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11487
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11490
  %m_encoding31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 34, !dbg !11490
  %41 = load %struct.encoding*, %struct.encoding** %m_encoding31, align 8, !dbg !11490
  %cmp32 = icmp eq %struct.encoding* %39, %41, !dbg !11491
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !11492

if.then34:                                        ; preds = %if.then30
  %42 = load i8*, i8** %ptr.addr, align 8, !dbg !11493
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11494
  %m_eventPtr35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 47, !dbg !11494
  store i8* %42, i8** %m_eventPtr35, align 8, !dbg !11495
  br label %if.end36, !dbg !11494

if.end36:                                         ; preds = %if.then34, %if.then30
  store i32 14, i32* %retval, align 4, !dbg !11496
  br label %return, !dbg !11496

if.end37:                                         ; preds = %if.end27
  store i32 0, i32* %i, align 4, !dbg !11497
  br label %for.cond38, !dbg !11499

for.cond38:                                       ; preds = %for.inc, %if.end37
  %44 = load i32, i32* %i, align 4, !dbg !11500
  %45 = load i32, i32* %n, align 4, !dbg !11503
  %cmp39 = icmp slt i32 %44, %45, !dbg !11504
  br i1 %cmp39, label %for.body, label %for.end, !dbg !11505

for.body:                                         ; preds = %for.cond38
  %46 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11506
  %ptr41 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %46, i32 0, i32 3, !dbg !11506
  %47 = load i8*, i8** %ptr41, align 8, !dbg !11506
  %48 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11506
  %end42 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %48, i32 0, i32 2, !dbg !11506
  %49 = load i8*, i8** %end42, align 8, !dbg !11506
  %cmp43 = icmp eq i8* %47, %49, !dbg !11506
  br i1 %cmp43, label %land.lhs.true45, label %cond.false, !dbg !11506

land.lhs.true45:                                  ; preds = %for.body
  %50 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11509
  %call46 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %50), !dbg !11509
  %tobool47 = icmp ne i8 %call46, 0, !dbg !11509
  br i1 %tobool47, label %cond.false, label %cond.true, !dbg !11511

cond.true:                                        ; preds = %land.lhs.true45
  br i1 false, label %if.end51, label %if.then50, !dbg !11512

cond.false:                                       ; preds = %land.lhs.true45, %for.body
  %51 = load i32, i32* %i, align 4, !dbg !11514
  %idxprom = sext i32 %51 to i64, !dbg !11514
  %arrayidx48 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 %idxprom, !dbg !11514
  %52 = load i8, i8* %arrayidx48, align 1, !dbg !11514
  %53 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11514
  %ptr49 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %53, i32 0, i32 3, !dbg !11514
  %54 = load i8*, i8** %ptr49, align 8, !dbg !11514
  %incdec.ptr = getelementptr inbounds i8, i8* %54, i32 1, !dbg !11514
  store i8* %incdec.ptr, i8** %ptr49, align 8, !dbg !11514
  store i8 %52, i8* %54, align 1, !dbg !11514
  br i1 true, label %if.end51, label %if.then50, !dbg !11516

if.then50:                                        ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, align 4, !dbg !11517
  br label %return, !dbg !11517

if.end51:                                         ; preds = %cond.false, %cond.true
  br label %for.inc, !dbg !11518

for.inc:                                          ; preds = %if.end51
  %55 = load i32, i32* %i, align 4, !dbg !11519
  %inc = add nsw i32 %55, 1, !dbg !11519
  store i32 %inc, i32* %i, align 4, !dbg !11519
  br label %for.cond38, !dbg !11521

for.end:                                          ; preds = %for.cond38
  br label %sw.epilog, !dbg !11522

sw.bb52:                                          ; preds = %for.cond
  %56 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11523
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11525
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !11526
  %59 = load i8*, i8** %next, align 8, !dbg !11527
  %call53 = call i8* @poolAppend(%struct.STRING_POOL* %56, %struct.encoding* %57, i8* %58, i8* %59), !dbg !11528
  %tobool54 = icmp ne i8* %call53, null, !dbg !11528
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !11529

if.then55:                                        ; preds = %sw.bb52
  store i32 1, i32* %retval, align 4, !dbg !11530
  br label %return, !dbg !11530

if.end56:                                         ; preds = %sw.bb52
  br label %sw.epilog, !dbg !11531

sw.bb57:                                          ; preds = %for.cond
  %60 = load i8*, i8** %ptr.addr, align 8, !dbg !11532
  %61 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11533
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %61, i32 0, i32 13, !dbg !11534
  %62 = load i32, i32* %minBytesPerChar, align 8, !dbg !11534
  %idx.ext = sext i32 %62 to i64, !dbg !11535
  %add.ptr = getelementptr inbounds i8, i8* %60, i64 %idx.ext, !dbg !11535
  store i8* %add.ptr, i8** %next, align 8, !dbg !11536
  br label %sw.bb58, !dbg !11537

sw.bb58:                                          ; preds = %for.cond, %for.cond, %sw.bb57
  %63 = load i8, i8* %isCdata.addr, align 1, !dbg !11538
  %tobool59 = icmp ne i8 %63, 0, !dbg !11538
  br i1 %tobool59, label %if.end75, label %land.lhs.true60, !dbg !11540

land.lhs.true60:                                  ; preds = %sw.bb58
  %64 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11541
  %ptr61 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %64, i32 0, i32 3, !dbg !11541
  %65 = load i8*, i8** %ptr61, align 8, !dbg !11541
  %66 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11541
  %start62 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %66, i32 0, i32 4, !dbg !11541
  %67 = load i8*, i8** %start62, align 8, !dbg !11541
  %sub.ptr.lhs.cast63 = ptrtoint i8* %65 to i64, !dbg !11541
  %sub.ptr.rhs.cast64 = ptrtoint i8* %67 to i64, !dbg !11541
  %sub.ptr.sub65 = sub i64 %sub.ptr.lhs.cast63, %sub.ptr.rhs.cast64, !dbg !11541
  %cmp66 = icmp eq i64 %sub.ptr.sub65, 0, !dbg !11543
  br i1 %cmp66, label %if.then74, label %lor.lhs.false68, !dbg !11544

lor.lhs.false68:                                  ; preds = %land.lhs.true60
  %68 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11545
  %ptr69 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %68, i32 0, i32 3, !dbg !11545
  %69 = load i8*, i8** %ptr69, align 8, !dbg !11545
  %arrayidx70 = getelementptr inbounds i8, i8* %69, i64 -1, !dbg !11545
  %70 = load i8, i8* %arrayidx70, align 1, !dbg !11545
  %conv71 = sext i8 %70 to i32, !dbg !11545
  %cmp72 = icmp eq i32 %conv71, 32, !dbg !11547
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !11548

if.then74:                                        ; preds = %lor.lhs.false68, %land.lhs.true60
  br label %sw.epilog, !dbg !11549

if.end75:                                         ; preds = %lor.lhs.false68, %sw.bb58
  %71 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11550
  %ptr76 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %71, i32 0, i32 3, !dbg !11550
  %72 = load i8*, i8** %ptr76, align 8, !dbg !11550
  %73 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11550
  %end77 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %73, i32 0, i32 2, !dbg !11550
  %74 = load i8*, i8** %end77, align 8, !dbg !11550
  %cmp78 = icmp eq i8* %72, %74, !dbg !11550
  br i1 %cmp78, label %land.lhs.true80, label %cond.false84, !dbg !11550

land.lhs.true80:                                  ; preds = %if.end75
  %75 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11552
  %call81 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %75), !dbg !11552
  %tobool82 = icmp ne i8 %call81, 0, !dbg !11552
  br i1 %tobool82, label %cond.false84, label %cond.true83, !dbg !11554

cond.true83:                                      ; preds = %land.lhs.true80
  br i1 false, label %if.end88, label %if.then87, !dbg !11555

cond.false84:                                     ; preds = %land.lhs.true80, %if.end75
  %76 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11557
  %ptr85 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %76, i32 0, i32 3, !dbg !11557
  %77 = load i8*, i8** %ptr85, align 8, !dbg !11557
  %incdec.ptr86 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !11557
  store i8* %incdec.ptr86, i8** %ptr85, align 8, !dbg !11557
  store i8 32, i8* %77, align 1, !dbg !11557
  br i1 true, label %if.end88, label %if.then87, !dbg !11559

if.then87:                                        ; preds = %cond.false84, %cond.true83
  store i32 1, i32* %retval, align 4, !dbg !11560
  br label %return, !dbg !11560

if.end88:                                         ; preds = %cond.false84, %cond.true83
  br label %sw.epilog, !dbg !11561

sw.bb89:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11562, metadata !1076), !dbg !11564
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %entity, metadata !11565, metadata !1076), !dbg !11566
  call void @llvm.dbg.declare(metadata i8* %checkEntityDecl, metadata !11567, metadata !1076), !dbg !11568
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11569, metadata !1076), !dbg !11570
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11571
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %78, i32 0, i32 8, !dbg !11571
  %79 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8, !dbg !11571
  %80 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11571
  %81 = load i8*, i8** %ptr.addr, align 8, !dbg !11571
  %82 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11571
  %minBytesPerChar90 = getelementptr inbounds %struct.encoding, %struct.encoding* %82, i32 0, i32 13, !dbg !11571
  %83 = load i32, i32* %minBytesPerChar90, align 8, !dbg !11571
  %idx.ext91 = sext i32 %83 to i64, !dbg !11571
  %add.ptr92 = getelementptr inbounds i8, i8* %81, i64 %idx.ext91, !dbg !11571
  %84 = load i8*, i8** %next, align 8, !dbg !11571
  %85 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11571
  %minBytesPerChar93 = getelementptr inbounds %struct.encoding, %struct.encoding* %85, i32 0, i32 13, !dbg !11571
  %86 = load i32, i32* %minBytesPerChar93, align 8, !dbg !11571
  %idx.ext94 = sext i32 %86 to i64, !dbg !11571
  %idx.neg = sub i64 0, %idx.ext94, !dbg !11571
  %add.ptr95 = getelementptr inbounds i8, i8* %84, i64 %idx.neg, !dbg !11571
  %call96 = call i32 %79(%struct.encoding* %80, i8* %add.ptr92, i8* %add.ptr95), !dbg !11571
  %conv97 = trunc i32 %call96 to i8, !dbg !11572
  store i8 %conv97, i8* %ch, align 1, !dbg !11570
  %87 = load i8, i8* %ch, align 1, !dbg !11573
  %tobool98 = icmp ne i8 %87, 0, !dbg !11573
  br i1 %tobool98, label %if.then99, label %if.end113, !dbg !11575

if.then99:                                        ; preds = %sw.bb89
  %88 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11576
  %ptr100 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %88, i32 0, i32 3, !dbg !11576
  %89 = load i8*, i8** %ptr100, align 8, !dbg !11576
  %90 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11576
  %end101 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %90, i32 0, i32 2, !dbg !11576
  %91 = load i8*, i8** %end101, align 8, !dbg !11576
  %cmp102 = icmp eq i8* %89, %91, !dbg !11576
  br i1 %cmp102, label %land.lhs.true104, label %cond.false108, !dbg !11576

land.lhs.true104:                                 ; preds = %if.then99
  %92 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11579
  %call105 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %92), !dbg !11579
  %tobool106 = icmp ne i8 %call105, 0, !dbg !11579
  br i1 %tobool106, label %cond.false108, label %cond.true107, !dbg !11581

cond.true107:                                     ; preds = %land.lhs.true104
  br i1 false, label %if.end112, label %if.then111, !dbg !11582

cond.false108:                                    ; preds = %land.lhs.true104, %if.then99
  %93 = load i8, i8* %ch, align 1, !dbg !11584
  %94 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11584
  %ptr109 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %94, i32 0, i32 3, !dbg !11584
  %95 = load i8*, i8** %ptr109, align 8, !dbg !11584
  %incdec.ptr110 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !11584
  store i8* %incdec.ptr110, i8** %ptr109, align 8, !dbg !11584
  store i8 %93, i8* %95, align 1, !dbg !11584
  br i1 true, label %if.end112, label %if.then111, !dbg !11586

if.then111:                                       ; preds = %cond.false108, %cond.true107
  store i32 1, i32* %retval, align 4, !dbg !11587
  br label %return, !dbg !11587

if.end112:                                        ; preds = %cond.false108, %cond.true107
  br label %sw.epilog, !dbg !11588

if.end113:                                        ; preds = %sw.bb89
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11589
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 80, !dbg !11589
  %97 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11590
  %98 = load i8*, i8** %ptr.addr, align 8, !dbg !11591
  %99 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11592
  %minBytesPerChar114 = getelementptr inbounds %struct.encoding, %struct.encoding* %99, i32 0, i32 13, !dbg !11593
  %100 = load i32, i32* %minBytesPerChar114, align 8, !dbg !11593
  %idx.ext115 = sext i32 %100 to i64, !dbg !11594
  %add.ptr116 = getelementptr inbounds i8, i8* %98, i64 %idx.ext115, !dbg !11594
  %101 = load i8*, i8** %next, align 8, !dbg !11595
  %102 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11596
  %minBytesPerChar117 = getelementptr inbounds %struct.encoding, %struct.encoding* %102, i32 0, i32 13, !dbg !11597
  %103 = load i32, i32* %minBytesPerChar117, align 8, !dbg !11597
  %idx.ext118 = sext i32 %103 to i64, !dbg !11598
  %idx.neg119 = sub i64 0, %idx.ext118, !dbg !11598
  %add.ptr120 = getelementptr inbounds i8, i8* %101, i64 %idx.neg119, !dbg !11598
  %call121 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool, %struct.encoding* %97, i8* %add.ptr116, i8* %add.ptr120), !dbg !11599
  store i8* %call121, i8** %name, align 8, !dbg !11600
  %104 = load i8*, i8** %name, align 8, !dbg !11601
  %tobool122 = icmp ne i8* %104, null, !dbg !11601
  br i1 %tobool122, label %if.end124, label %if.then123, !dbg !11603

if.then123:                                       ; preds = %if.end113
  store i32 1, i32* %retval, align 4, !dbg !11604
  br label %return, !dbg !11604

if.end124:                                        ; preds = %if.end113
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11605
  %106 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11606
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %106, i32 0, i32 0, !dbg !11607
  %107 = load i8*, i8** %name, align 8, !dbg !11608
  %call125 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %105, %struct.HASH_TABLE* %generalEntities, i8* %107, i64 0), !dbg !11609
  %108 = bitcast %struct.NAMED* %call125 to %struct.ENTITY*, !dbg !11610
  store %struct.ENTITY* %108, %struct.ENTITY** %entity, align 8, !dbg !11611
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11612
  %m_temp2Pool126 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 80, !dbg !11612
  %start127 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool126, i32 0, i32 4, !dbg !11612
  %110 = load i8*, i8** %start127, align 8, !dbg !11612
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11612
  %m_temp2Pool128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 80, !dbg !11612
  %ptr129 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool128, i32 0, i32 3, !dbg !11612
  store i8* %110, i8** %ptr129, align 8, !dbg !11612
  %112 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11613
  %113 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11615
  %pool130 = getelementptr inbounds %struct.DTD, %struct.DTD* %113, i32 0, i32 4, !dbg !11616
  %cmp131 = icmp eq %struct.STRING_POOL* %112, %pool130, !dbg !11617
  br i1 %cmp131, label %if.then133, label %if.else, !dbg !11618

if.then133:                                       ; preds = %if.end124
  %114 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11619
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %114, i32 0, i32 8, !dbg !11620
  %115 = load i8, i8* %standalone, align 2, !dbg !11620
  %conv134 = zext i8 %115 to i32, !dbg !11619
  %tobool135 = icmp ne i32 %conv134, 0, !dbg !11619
  br i1 %tobool135, label %cond.true136, label %cond.false138, !dbg !11619

cond.true136:                                     ; preds = %if.then133
  %116 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11621
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %116, i32 0, i32 50, !dbg !11621
  %117 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8, !dbg !11621
  %tobool137 = icmp ne %struct.open_internal_entity* %117, null, !dbg !11622
  %lnot = xor i1 %tobool137, true, !dbg !11622
  %lnot.ext = zext i1 %lnot to i32, !dbg !11622
  br label %cond.end, !dbg !11623

cond.false138:                                    ; preds = %if.then133
  %118 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11625
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %118, i32 0, i32 7, !dbg !11626
  %119 = load i8, i8* %hasParamEntityRefs, align 1, !dbg !11626
  %tobool139 = icmp ne i8 %119, 0, !dbg !11627
  %lnot140 = xor i1 %tobool139, true, !dbg !11627
  %lnot.ext141 = zext i1 %lnot140 to i32, !dbg !11627
  br label %cond.end, !dbg !11628

cond.end:                                         ; preds = %cond.false138, %cond.true136
  %cond = phi i32 [ %lnot.ext, %cond.true136 ], [ %lnot.ext141, %cond.false138 ], !dbg !11630
  %conv142 = trunc i32 %cond to i8, !dbg !11632
  store i8 %conv142, i8* %checkEntityDecl, align 1, !dbg !11633
  br label %if.end149, !dbg !11634

if.else:                                          ; preds = %if.end124
  %120 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11635
  %hasParamEntityRefs143 = getelementptr inbounds %struct.DTD, %struct.DTD* %120, i32 0, i32 7, !dbg !11636
  %121 = load i8, i8* %hasParamEntityRefs143, align 1, !dbg !11636
  %tobool144 = icmp ne i8 %121, 0, !dbg !11635
  br i1 %tobool144, label %lor.rhs, label %lor.end, !dbg !11637

lor.rhs:                                          ; preds = %if.else
  %122 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11638
  %standalone145 = getelementptr inbounds %struct.DTD, %struct.DTD* %122, i32 0, i32 8, !dbg !11639
  %123 = load i8, i8* %standalone145, align 2, !dbg !11639
  %conv146 = zext i8 %123 to i32, !dbg !11638
  %tobool147 = icmp ne i32 %conv146, 0, !dbg !11640
  br label %lor.end, !dbg !11640

lor.end:                                          ; preds = %lor.rhs, %if.else
  %124 = phi i1 [ true, %if.else ], [ %tobool147, %lor.rhs ]
  %lor.ext = zext i1 %124 to i32, !dbg !11641
  %conv148 = trunc i32 %lor.ext to i8, !dbg !11642
  store i8 %conv148, i8* %checkEntityDecl, align 1, !dbg !11643
  br label %if.end149

if.end149:                                        ; preds = %lor.end, %cond.end
  %125 = load i8, i8* %checkEntityDecl, align 1, !dbg !11644
  %tobool150 = icmp ne i8 %125, 0, !dbg !11644
  br i1 %tobool150, label %if.then151, label %if.else159, !dbg !11646

if.then151:                                       ; preds = %if.end149
  %126 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11647
  %tobool152 = icmp ne %struct.ENTITY* %126, null, !dbg !11647
  br i1 %tobool152, label %if.else154, label %if.then153, !dbg !11650

if.then153:                                       ; preds = %if.then151
  store i32 11, i32* %retval, align 4, !dbg !11651
  br label %return, !dbg !11651

if.else154:                                       ; preds = %if.then151
  %127 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11652
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %127, i32 0, i32 10, !dbg !11654
  %128 = load i8, i8* %is_internal, align 2, !dbg !11654
  %tobool155 = icmp ne i8 %128, 0, !dbg !11652
  br i1 %tobool155, label %if.end157, label %if.then156, !dbg !11655

if.then156:                                       ; preds = %if.else154
  store i32 24, i32* %retval, align 4, !dbg !11656
  br label %return, !dbg !11656

if.end157:                                        ; preds = %if.else154
  br label %if.end158

if.end158:                                        ; preds = %if.end157
  br label %if.end163, !dbg !11657

if.else159:                                       ; preds = %if.end149
  %129 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11658
  %tobool160 = icmp ne %struct.ENTITY* %129, null, !dbg !11658
  br i1 %tobool160, label %if.end162, label %if.then161, !dbg !11660

if.then161:                                       ; preds = %if.else159
  br label %sw.epilog, !dbg !11661

if.end162:                                        ; preds = %if.else159
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end158
  %130 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11663
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %130, i32 0, i32 8, !dbg !11665
  %131 = load i8, i8* %open, align 8, !dbg !11665
  %tobool164 = icmp ne i8 %131, 0, !dbg !11663
  br i1 %tobool164, label %if.then165, label %if.end172, !dbg !11666

if.then165:                                       ; preds = %if.end163
  %132 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11667
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11670
  %m_encoding166 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 34, !dbg !11670
  %134 = load %struct.encoding*, %struct.encoding** %m_encoding166, align 8, !dbg !11670
  %cmp167 = icmp eq %struct.encoding* %132, %134, !dbg !11671
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !11672

if.then169:                                       ; preds = %if.then165
  %135 = load i8*, i8** %ptr.addr, align 8, !dbg !11673
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11674
  %m_eventPtr170 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 47, !dbg !11674
  store i8* %135, i8** %m_eventPtr170, align 8, !dbg !11675
  br label %if.end171, !dbg !11674

if.end171:                                        ; preds = %if.then169, %if.then165
  store i32 12, i32* %retval, align 4, !dbg !11676
  br label %return, !dbg !11676

if.end172:                                        ; preds = %if.end163
  %137 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11677
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %137, i32 0, i32 7, !dbg !11679
  %138 = load i8*, i8** %notation, align 8, !dbg !11679
  %tobool173 = icmp ne i8* %138, null, !dbg !11677
  br i1 %tobool173, label %if.then174, label %if.end181, !dbg !11680

if.then174:                                       ; preds = %if.end172
  %139 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11681
  %140 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11684
  %m_encoding175 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %140, i32 0, i32 34, !dbg !11684
  %141 = load %struct.encoding*, %struct.encoding** %m_encoding175, align 8, !dbg !11684
  %cmp176 = icmp eq %struct.encoding* %139, %141, !dbg !11685
  br i1 %cmp176, label %if.then178, label %if.end180, !dbg !11686

if.then178:                                       ; preds = %if.then174
  %142 = load i8*, i8** %ptr.addr, align 8, !dbg !11687
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11688
  %m_eventPtr179 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %143, i32 0, i32 47, !dbg !11688
  store i8* %142, i8** %m_eventPtr179, align 8, !dbg !11689
  br label %if.end180, !dbg !11688

if.end180:                                        ; preds = %if.then178, %if.then174
  store i32 15, i32* %retval, align 4, !dbg !11690
  br label %return, !dbg !11690

if.end181:                                        ; preds = %if.end172
  %144 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11691
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %144, i32 0, i32 1, !dbg !11693
  %145 = load i8*, i8** %textPtr, align 8, !dbg !11693
  %tobool182 = icmp ne i8* %145, null, !dbg !11691
  br i1 %tobool182, label %if.else190, label %if.then183, !dbg !11694

if.then183:                                       ; preds = %if.end181
  %146 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11695
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11698
  %m_encoding184 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 34, !dbg !11698
  %148 = load %struct.encoding*, %struct.encoding** %m_encoding184, align 8, !dbg !11698
  %cmp185 = icmp eq %struct.encoding* %146, %148, !dbg !11699
  br i1 %cmp185, label %if.then187, label %if.end189, !dbg !11700

if.then187:                                       ; preds = %if.then183
  %149 = load i8*, i8** %ptr.addr, align 8, !dbg !11701
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11702
  %m_eventPtr188 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %150, i32 0, i32 47, !dbg !11702
  store i8* %149, i8** %m_eventPtr188, align 8, !dbg !11703
  br label %if.end189, !dbg !11702

if.end189:                                        ; preds = %if.then187, %if.then183
  store i32 16, i32* %retval, align 4, !dbg !11704
  br label %return, !dbg !11704

if.else190:                                       ; preds = %if.end181
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11705, metadata !1076), !dbg !11707
  call void @llvm.dbg.declare(metadata i8** %textEnd, metadata !11708, metadata !1076), !dbg !11709
  %151 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11710
  %textPtr191 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %151, i32 0, i32 1, !dbg !11711
  %152 = load i8*, i8** %textPtr191, align 8, !dbg !11711
  %153 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11712
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %153, i32 0, i32 2, !dbg !11713
  %154 = load i32, i32* %textLen, align 8, !dbg !11713
  %idx.ext192 = sext i32 %154 to i64, !dbg !11714
  %add.ptr193 = getelementptr inbounds i8, i8* %152, i64 %idx.ext192, !dbg !11714
  store i8* %add.ptr193, i8** %textEnd, align 8, !dbg !11709
  %155 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11715
  %open194 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %155, i32 0, i32 8, !dbg !11716
  store i8 1, i8* %open194, align 8, !dbg !11717
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11718
  %157 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11719
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %157, i32 0, i32 36, !dbg !11719
  %158 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8, !dbg !11719
  %159 = load i8, i8* %isCdata.addr, align 1, !dbg !11720
  %160 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11721
  %textPtr195 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %160, i32 0, i32 1, !dbg !11722
  %161 = load i8*, i8** %textPtr195, align 8, !dbg !11722
  %162 = load i8*, i8** %textEnd, align 8, !dbg !11723
  %163 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !11724
  %call196 = call i32 @appendAttributeValue(%struct.XML_ParserStruct* %156, %struct.encoding* %158, i8 zeroext %159, i8* %161, i8* %162, %struct.STRING_POOL* %163), !dbg !11725
  store i32 %call196, i32* %result, align 4, !dbg !11726
  %164 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8, !dbg !11727
  %open197 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %164, i32 0, i32 8, !dbg !11728
  store i8 0, i8* %open197, align 8, !dbg !11729
  %165 = load i32, i32* %result, align 4, !dbg !11730
  %tobool198 = icmp ne i32 %165, 0, !dbg !11730
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !11732

if.then199:                                       ; preds = %if.else190
  %166 = load i32, i32* %result, align 4, !dbg !11733
  store i32 %166, i32* %retval, align 4, !dbg !11734
  br label %return, !dbg !11734

if.end200:                                        ; preds = %if.else190
  br label %if.end201

if.end201:                                        ; preds = %if.end200
  br label %sw.epilog, !dbg !11735

sw.default:                                       ; preds = %for.cond
  %167 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8, !dbg !11736
  %168 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11738
  %m_encoding202 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %168, i32 0, i32 34, !dbg !11738
  %169 = load %struct.encoding*, %struct.encoding** %m_encoding202, align 8, !dbg !11738
  %cmp203 = icmp eq %struct.encoding* %167, %169, !dbg !11739
  br i1 %cmp203, label %if.then205, label %if.end207, !dbg !11740

if.then205:                                       ; preds = %sw.default
  %170 = load i8*, i8** %ptr.addr, align 8, !dbg !11741
  %171 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11742
  %m_eventPtr206 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %171, i32 0, i32 47, !dbg !11742
  store i8* %170, i8** %m_eventPtr206, align 8, !dbg !11743
  br label %if.end207, !dbg !11742

if.end207:                                        ; preds = %if.then205, %sw.default
  store i32 23, i32* %retval, align 4, !dbg !11744
  br label %return, !dbg !11744

sw.epilog:                                        ; preds = %if.end201, %if.then161, %if.end112, %if.end88, %if.then74, %if.end56, %for.end, %if.then26
  %172 = load i8*, i8** %next, align 8, !dbg !11745
  store i8* %172, i8** %ptr.addr, align 8, !dbg !11746
  br label %for.cond, !dbg !11747

return:                                           ; preds = %if.end207, %if.then199, %if.end189, %if.end180, %if.end171, %if.then156, %if.then153, %if.then123, %if.then111, %if.then87, %if.then55, %if.then50, %if.end36, %if.end16, %if.end7, %if.end, %sw.bb
  %173 = load i32, i32* %retval, align 4, !dbg !11749
  ret i32 %173, !dbg !11749
}

; Function Attrs: nounwind uwtable
define internal i64 @hash(%struct.XML_ParserStruct* %parser, i8* %s) #0 !dbg !957 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %h = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !11750, metadata !1076), !dbg !11751
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !11752, metadata !1076), !dbg !11753
  call void @llvm.dbg.declare(metadata i64* %h, metadata !11754, metadata !1076), !dbg !11755
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11756
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 86, !dbg !11756
  %1 = load i64, i64* %m_hash_secret_salt, align 8, !dbg !11756
  store i64 %1, i64* %h, align 8, !dbg !11755
  br label %while.cond, !dbg !11757

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i8*, i8** %s.addr, align 8, !dbg !11758
  %3 = load i8, i8* %2, align 1, !dbg !11760
  %tobool = icmp ne i8 %3, 0, !dbg !11761
  br i1 %tobool, label %while.body, label %while.end, !dbg !11761

while.body:                                       ; preds = %while.cond
  %4 = load i64, i64* %h, align 8, !dbg !11762
  %mul = mul i64 %4, 1000003, !dbg !11762
  %5 = load i8*, i8** %s.addr, align 8, !dbg !11762
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11762
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !11762
  %6 = load i8, i8* %5, align 1, !dbg !11762
  %conv = zext i8 %6 to i64, !dbg !11762
  %xor = xor i64 %mul, %conv, !dbg !11762
  store i64 %xor, i64* %h, align 8, !dbg !11763
  br label %while.cond, !dbg !11764

while.end:                                        ; preds = %while.cond
  %7 = load i64, i64* %h, align 8, !dbg !11766
  ret i64 %7, !dbg !11767
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @keyeq(i8* %s1, i8* %s2) #0 !dbg !960 {
entry:
  %retval = alloca i8, align 1
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11768, metadata !1076), !dbg !11769
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11770, metadata !1076), !dbg !11771
  br label %for.cond, !dbg !11772

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !11773
  %1 = load i8, i8* %0, align 1, !dbg !11777
  %conv = sext i8 %1 to i32, !dbg !11777
  %2 = load i8*, i8** %s2.addr, align 8, !dbg !11778
  %3 = load i8, i8* %2, align 1, !dbg !11779
  %conv1 = sext i8 %3 to i32, !dbg !11779
  %cmp = icmp eq i32 %conv, %conv1, !dbg !11780
  br i1 %cmp, label %for.body, label %for.end, !dbg !11781

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !11782
  %5 = load i8, i8* %4, align 1, !dbg !11784
  %conv3 = sext i8 %5 to i32, !dbg !11784
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !11785
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11786

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !11787
  br label %return, !dbg !11787

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11788

for.inc:                                          ; preds = %if.end
  %6 = load i8*, i8** %s1.addr, align 8, !dbg !11790
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !11790
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !11790
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !11792
  %incdec.ptr6 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11792
  store i8* %incdec.ptr6, i8** %s2.addr, align 8, !dbg !11792
  br label %for.cond, !dbg !11793

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !11794
  br label %return, !dbg !11794

return:                                           ; preds = %for.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !11795
  ret i8 %8, !dbg !11795
}

; Function Attrs: nounwind uwtable
define internal void @build_node(%struct.XML_ParserStruct* %parser, i32 %src_node, %struct.XML_cp* %dest, %struct.XML_cp** %contpos, i8** %strpos) #0 !dbg !967 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %src_node.addr = alloca i32, align 4
  %dest.addr = alloca %struct.XML_cp*, align 8
  %contpos.addr = alloca %struct.XML_cp**, align 8
  %strpos.addr = alloca i8**, align 8
  %dtd = alloca %struct.DTD*, align 8
  %src = alloca i8*, align 8
  %i = alloca i32, align 4
  %cn = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !11796, metadata !1076), !dbg !11797
  store i32 %src_node, i32* %src_node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_node.addr, metadata !11798, metadata !1076), !dbg !11799
  store %struct.XML_cp* %dest, %struct.XML_cp** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_cp** %dest.addr, metadata !11800, metadata !1076), !dbg !11801
  store %struct.XML_cp** %contpos, %struct.XML_cp*** %contpos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_cp*** %contpos.addr, metadata !11802, metadata !1076), !dbg !11803
  store i8** %strpos, i8*** %strpos.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %strpos.addr, metadata !11804, metadata !1076), !dbg !11805
  call void @llvm.dbg.declare(metadata %struct.DTD** %dtd, metadata !11806, metadata !1076), !dbg !11807
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11808
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65, !dbg !11808
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8, !dbg !11808
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8, !dbg !11807
  %2 = load i32, i32* %src_node.addr, align 4, !dbg !11809
  %idxprom = sext i32 %2 to i64, !dbg !11810
  %3 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11810
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %3, i32 0, i32 11, !dbg !11811
  %4 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8, !dbg !11811
  %arrayidx = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %4, i64 %idxprom, !dbg !11810
  %type = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx, i32 0, i32 0, !dbg !11812
  %5 = load i32, i32* %type, align 8, !dbg !11812
  %6 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11813
  %type1 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %6, i32 0, i32 0, !dbg !11814
  store i32 %5, i32* %type1, align 8, !dbg !11815
  %7 = load i32, i32* %src_node.addr, align 4, !dbg !11816
  %idxprom2 = sext i32 %7 to i64, !dbg !11817
  %8 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11817
  %scaffold3 = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 11, !dbg !11818
  %9 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold3, align 8, !dbg !11818
  %arrayidx4 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %9, i64 %idxprom2, !dbg !11817
  %quant = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx4, i32 0, i32 1, !dbg !11819
  %10 = load i32, i32* %quant, align 4, !dbg !11819
  %11 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11820
  %quant5 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %11, i32 0, i32 1, !dbg !11821
  store i32 %10, i32* %quant5, align 4, !dbg !11822
  %12 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11823
  %type6 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %12, i32 0, i32 0, !dbg !11825
  %13 = load i32, i32* %type6, align 8, !dbg !11825
  %cmp = icmp eq i32 %13, 4, !dbg !11826
  br i1 %cmp, label %if.then, label %if.else, !dbg !11827

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %src, metadata !11828, metadata !1076), !dbg !11830
  %14 = load i8**, i8*** %strpos.addr, align 8, !dbg !11831
  %15 = load i8*, i8** %14, align 8, !dbg !11832
  %16 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11833
  %name = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %16, i32 0, i32 2, !dbg !11834
  store i8* %15, i8** %name, align 8, !dbg !11835
  %17 = load i32, i32* %src_node.addr, align 4, !dbg !11836
  %idxprom7 = sext i32 %17 to i64, !dbg !11837
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11837
  %scaffold8 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 11, !dbg !11838
  %19 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold8, align 8, !dbg !11838
  %arrayidx9 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %19, i64 %idxprom7, !dbg !11837
  %name10 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx9, i32 0, i32 2, !dbg !11839
  %20 = load i8*, i8** %name10, align 8, !dbg !11839
  store i8* %20, i8** %src, align 8, !dbg !11840
  br label %for.cond, !dbg !11841

for.cond:                                         ; preds = %if.end, %if.then
  %21 = load i8*, i8** %src, align 8, !dbg !11842
  %22 = load i8, i8* %21, align 1, !dbg !11846
  %23 = load i8**, i8*** %strpos.addr, align 8, !dbg !11847
  %24 = load i8*, i8** %23, align 8, !dbg !11848
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11848
  store i8* %incdec.ptr, i8** %23, align 8, !dbg !11848
  store i8 %22, i8* %24, align 1, !dbg !11849
  %25 = load i8*, i8** %src, align 8, !dbg !11850
  %26 = load i8, i8* %25, align 1, !dbg !11852
  %tobool = icmp ne i8 %26, 0, !dbg !11852
  br i1 %tobool, label %if.end, label %if.then11, !dbg !11853

if.then11:                                        ; preds = %for.cond
  br label %for.end, !dbg !11854

if.end:                                           ; preds = %for.cond
  %27 = load i8*, i8** %src, align 8, !dbg !11855
  %incdec.ptr12 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !11855
  store i8* %incdec.ptr12, i8** %src, align 8, !dbg !11855
  br label %for.cond, !dbg !11856

for.end:                                          ; preds = %if.then11
  %28 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11858
  %numchildren = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %28, i32 0, i32 3, !dbg !11859
  store i32 0, i32* %numchildren, align 8, !dbg !11860
  %29 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11861
  %children = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %29, i32 0, i32 4, !dbg !11862
  store %struct.XML_cp* null, %struct.XML_cp** %children, align 8, !dbg !11863
  br label %if.end33, !dbg !11864

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11865, metadata !1076), !dbg !11867
  call void @llvm.dbg.declare(metadata i32* %cn, metadata !11868, metadata !1076), !dbg !11869
  %30 = load i32, i32* %src_node.addr, align 4, !dbg !11870
  %idxprom13 = sext i32 %30 to i64, !dbg !11871
  %31 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11871
  %scaffold14 = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 11, !dbg !11872
  %32 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold14, align 8, !dbg !11872
  %arrayidx15 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %32, i64 %idxprom13, !dbg !11871
  %childcnt = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx15, i32 0, i32 5, !dbg !11873
  %33 = load i32, i32* %childcnt, align 8, !dbg !11873
  %34 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11874
  %numchildren16 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %34, i32 0, i32 3, !dbg !11875
  store i32 %33, i32* %numchildren16, align 8, !dbg !11876
  %35 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8, !dbg !11877
  %36 = load %struct.XML_cp*, %struct.XML_cp** %35, align 8, !dbg !11878
  %37 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11879
  %children17 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %37, i32 0, i32 4, !dbg !11880
  store %struct.XML_cp* %36, %struct.XML_cp** %children17, align 8, !dbg !11881
  %38 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11882
  %numchildren18 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %38, i32 0, i32 3, !dbg !11883
  %39 = load i32, i32* %numchildren18, align 8, !dbg !11883
  %40 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8, !dbg !11884
  %41 = load %struct.XML_cp*, %struct.XML_cp** %40, align 8, !dbg !11885
  %idx.ext = zext i32 %39 to i64, !dbg !11885
  %add.ptr = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %41, i64 %idx.ext, !dbg !11885
  store %struct.XML_cp* %add.ptr, %struct.XML_cp** %40, align 8, !dbg !11885
  store i32 0, i32* %i, align 4, !dbg !11886
  %42 = load i32, i32* %src_node.addr, align 4, !dbg !11888
  %idxprom19 = sext i32 %42 to i64, !dbg !11889
  %43 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11889
  %scaffold20 = getelementptr inbounds %struct.DTD, %struct.DTD* %43, i32 0, i32 11, !dbg !11890
  %44 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold20, align 8, !dbg !11890
  %arrayidx21 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %44, i64 %idxprom19, !dbg !11889
  %firstchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx21, i32 0, i32 3, !dbg !11891
  %45 = load i32, i32* %firstchild, align 8, !dbg !11891
  store i32 %45, i32* %cn, align 4, !dbg !11892
  br label %for.cond22, !dbg !11893

for.cond22:                                       ; preds = %for.inc, %if.else
  %46 = load i32, i32* %i, align 4, !dbg !11894
  %47 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11896
  %numchildren23 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %47, i32 0, i32 3, !dbg !11897
  %48 = load i32, i32* %numchildren23, align 8, !dbg !11897
  %cmp24 = icmp ult i32 %46, %48, !dbg !11898
  br i1 %cmp24, label %for.body, label %for.end31, !dbg !11899

for.body:                                         ; preds = %for.cond22
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11901
  %50 = load i32, i32* %cn, align 4, !dbg !11903
  %51 = load i32, i32* %i, align 4, !dbg !11904
  %idxprom25 = zext i32 %51 to i64, !dbg !11905
  %52 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11905
  %children26 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %52, i32 0, i32 4, !dbg !11906
  %53 = load %struct.XML_cp*, %struct.XML_cp** %children26, align 8, !dbg !11906
  %arrayidx27 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %53, i64 %idxprom25, !dbg !11905
  %54 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8, !dbg !11907
  %55 = load i8**, i8*** %strpos.addr, align 8, !dbg !11908
  call void @build_node(%struct.XML_ParserStruct* %49, i32 %50, %struct.XML_cp* %arrayidx27, %struct.XML_cp** %54, i8** %55), !dbg !11909
  br label %for.inc, !dbg !11910

for.inc:                                          ; preds = %for.body
  %56 = load i32, i32* %i, align 4, !dbg !11911
  %inc = add i32 %56, 1, !dbg !11911
  store i32 %inc, i32* %i, align 4, !dbg !11911
  %57 = load i32, i32* %cn, align 4, !dbg !11912
  %idxprom28 = sext i32 %57 to i64, !dbg !11913
  %58 = load %struct.DTD*, %struct.DTD** %dtd, align 8, !dbg !11913
  %scaffold29 = getelementptr inbounds %struct.DTD, %struct.DTD* %58, i32 0, i32 11, !dbg !11914
  %59 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold29, align 8, !dbg !11914
  %arrayidx30 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %59, i64 %idxprom28, !dbg !11913
  %nextsib = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx30, i32 0, i32 6, !dbg !11915
  %60 = load i32, i32* %nextsib, align 4, !dbg !11915
  store i32 %60, i32* %cn, align 4, !dbg !11916
  br label %for.cond22, !dbg !11917

for.end31:                                        ; preds = %for.cond22
  %61 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8, !dbg !11919
  %name32 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %61, i32 0, i32 2, !dbg !11920
  store i8* null, i8** %name32, align 8, !dbg !11921
  br label %if.end33

if.end33:                                         ; preds = %for.end31, %for.end
  ret void, !dbg !11922
}

; Function Attrs: nounwind uwtable
define internal void @normalizeLines(i8* %s) #0 !dbg !975 {
entry:
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !11923, metadata !1076), !dbg !11924
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11925, metadata !1076), !dbg !11926
  br label %for.cond, !dbg !11927

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !11928
  %1 = load i8, i8* %0, align 1, !dbg !11933
  %conv = sext i8 %1 to i32, !dbg !11933
  %cmp = icmp eq i32 %conv, 0, !dbg !11934
  br i1 %cmp, label %if.then, label %if.end, !dbg !11935

if.then:                                          ; preds = %for.cond
  br label %return, !dbg !11936

if.end:                                           ; preds = %for.cond
  %2 = load i8*, i8** %s.addr, align 8, !dbg !11937
  %3 = load i8, i8* %2, align 1, !dbg !11939
  %conv2 = sext i8 %3 to i32, !dbg !11939
  %cmp3 = icmp eq i32 %conv2, 13, !dbg !11940
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !11941

if.then5:                                         ; preds = %if.end
  br label %for.end, !dbg !11942

if.end6:                                          ; preds = %if.end
  br label %for.inc, !dbg !11943

for.inc:                                          ; preds = %if.end6
  %4 = load i8*, i8** %s.addr, align 8, !dbg !11944
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !11944
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !11944
  br label %for.cond, !dbg !11946

for.end:                                          ; preds = %if.then5
  %5 = load i8*, i8** %s.addr, align 8, !dbg !11947
  store i8* %5, i8** %p, align 8, !dbg !11948
  br label %do.body, !dbg !11949

do.body:                                          ; preds = %do.cond, %for.end
  %6 = load i8*, i8** %s.addr, align 8, !dbg !11950
  %7 = load i8, i8* %6, align 1, !dbg !11953
  %conv7 = sext i8 %7 to i32, !dbg !11953
  %cmp8 = icmp eq i32 %conv7, 13, !dbg !11954
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !11955

if.then10:                                        ; preds = %do.body
  %8 = load i8*, i8** %p, align 8, !dbg !11956
  %incdec.ptr11 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !11956
  store i8* %incdec.ptr11, i8** %p, align 8, !dbg !11956
  store i8 10, i8* %8, align 1, !dbg !11958
  %9 = load i8*, i8** %s.addr, align 8, !dbg !11959
  %incdec.ptr12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !11959
  store i8* %incdec.ptr12, i8** %s.addr, align 8, !dbg !11959
  %10 = load i8, i8* %incdec.ptr12, align 1, !dbg !11961
  %conv13 = sext i8 %10 to i32, !dbg !11961
  %cmp14 = icmp eq i32 %conv13, 10, !dbg !11962
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !11963

if.then16:                                        ; preds = %if.then10
  %11 = load i8*, i8** %s.addr, align 8, !dbg !11964
  %incdec.ptr17 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !11964
  store i8* %incdec.ptr17, i8** %s.addr, align 8, !dbg !11964
  br label %if.end18, !dbg !11965

if.end18:                                         ; preds = %if.then16, %if.then10
  br label %if.end21, !dbg !11966

if.else:                                          ; preds = %do.body
  %12 = load i8*, i8** %s.addr, align 8, !dbg !11967
  %incdec.ptr19 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !11967
  store i8* %incdec.ptr19, i8** %s.addr, align 8, !dbg !11967
  %13 = load i8, i8* %12, align 1, !dbg !11968
  %14 = load i8*, i8** %p, align 8, !dbg !11969
  %incdec.ptr20 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !11969
  store i8* %incdec.ptr20, i8** %p, align 8, !dbg !11969
  store i8 %13, i8* %14, align 1, !dbg !11970
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end18
  br label %do.cond, !dbg !11971

do.cond:                                          ; preds = %if.end21
  %15 = load i8*, i8** %s.addr, align 8, !dbg !11972
  %16 = load i8, i8* %15, align 1, !dbg !11974
  %tobool = icmp ne i8 %16, 0, !dbg !11975
  br i1 %tobool, label %do.body, label %do.end, !dbg !11975

do.end:                                           ; preds = %do.cond
  %17 = load i8*, i8** %p, align 8, !dbg !11976
  store i8 0, i8* %17, align 1, !dbg !11977
  br label %return, !dbg !11978

return:                                           ; preds = %do.end, %if.then
  ret void, !dbg !11979
}

; Function Attrs: nounwind uwtable
define internal i64 @generate_hash_secret_salt(%struct.XML_ParserStruct* %parser) #0 !dbg !981 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %entropy = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !11980, metadata !1076), !dbg !11981
  call void @llvm.dbg.declare(metadata i64* %entropy, metadata !11982, metadata !1076), !dbg !11984
  %call = call i64 @gather_time_entropy(), !dbg !11985
  %call1 = call i32 @getpid() #7, !dbg !11986
  %conv = sext i32 %call1 to i64, !dbg !11988
  %xor = xor i64 %call, %conv, !dbg !11989
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !11990
  %1 = ptrtoint %struct.XML_ParserStruct* %0 to i64, !dbg !11991
  %xor2 = xor i64 %xor, %1, !dbg !11992
  store i64 %xor2, i64* %entropy, align 8, !dbg !11984
  %2 = load i64, i64* %entropy, align 8, !dbg !11993
  %mul = mul i64 %2, 2305843009213693951, !dbg !11996
  ret i64 %mul, !dbg !11997
}

; Function Attrs: nounwind uwtable
define internal i64 @gather_time_entropy() #0 !dbg !984 {
entry:
  %tv = alloca %struct.timeval, align 8
  %gettimeofday_res = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !11998, metadata !1076), !dbg !12007
  call void @llvm.dbg.declare(metadata i32* %gettimeofday_res, metadata !12008, metadata !1076), !dbg !12009
  %call = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #7, !dbg !12010
  store i32 %call, i32* %gettimeofday_res, align 4, !dbg !12011
  %0 = load i32, i32* %gettimeofday_res, align 4, !dbg !12012
  %cmp = icmp eq i32 %0, 0, !dbg !12012
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12012

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !12013

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i32 0, i32 0), i32 712, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.gather_time_entropy, i32 0, i32 0)) #8, !dbg !12015
  unreachable, !dbg !12015
                                                  ; No predecessors!
  br label %cond.end, !dbg !12017

cond.end:                                         ; preds = %1, %cond.true
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %tv, i32 0, i32 1, !dbg !12019
  %2 = load i64, i64* %tv_usec, align 8, !dbg !12019
  ret i64 %2, !dbg !12020
}

; Function Attrs: nounwind
declare i32 @getpid() #4

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #4

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor2(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 !dbg !988 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !12021, metadata !1076), !dbg !12022
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !12023, metadata !1076), !dbg !12024
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12025, metadata !1076), !dbg !12026
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !12027, metadata !1076), !dbg !12028
  call void @llvm.dbg.declare(metadata i8** %next, metadata !12029, metadata !1076), !dbg !12030
  %0 = load i8*, i8** %start.addr, align 8, !dbg !12031
  store i8* %0, i8** %next, align 8, !dbg !12030
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !12032, metadata !1076), !dbg !12033
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12034
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34, !dbg !12034
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !12034
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %2, i32 0, i32 0, !dbg !12034
  %arrayidx = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 1, !dbg !12034
  %3 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !12034
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12034
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 34, !dbg !12034
  %5 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !12034
  %6 = load i8*, i8** %start.addr, align 8, !dbg !12034
  %7 = load i8*, i8** %end.addr, align 8, !dbg !12034
  %call = call i32 %3(%struct.encoding* %5, i8* %6, i8* %7, i8** %next), !dbg !12034
  store i32 %call, i32* %tok, align 4, !dbg !12033
  %8 = load i32, i32* %tok, align 4, !dbg !12035
  switch i32 %8, label %sw.epilog [
    i32 14, label %sw.bb
    i32 -1, label %sw.bb2
    i32 -2, label %sw.bb8
  ], !dbg !12036

sw.bb:                                            ; preds = %entry
  %9 = load i8*, i8** %next, align 8, !dbg !12037
  %10 = load i8*, i8** %end.addr, align 8, !dbg !12040
  %cmp = icmp eq i8* %9, %10, !dbg !12041
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12042

land.lhs.true:                                    ; preds = %sw.bb
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12043
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85, !dbg !12043
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1, !dbg !12043
  %12 = load i8, i8* %finalBuffer, align 4, !dbg !12043
  %tobool = icmp ne i8 %12, 0, !dbg !12043
  br i1 %tobool, label %if.end, label %if.then, !dbg !12045

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %next, align 8, !dbg !12046
  %14 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12048
  store i8* %13, i8** %14, align 8, !dbg !12049
  store i32 0, i32* %retval, align 4, !dbg !12050
  br label %return, !dbg !12050

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %15 = load i8*, i8** %next, align 8, !dbg !12051
  store i8* %15, i8** %start.addr, align 8, !dbg !12052
  br label %sw.epilog, !dbg !12053

sw.bb2:                                           ; preds = %entry
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12054
  %m_parsingStatus3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 85, !dbg !12054
  %finalBuffer4 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus3, i32 0, i32 1, !dbg !12054
  %17 = load i8, i8* %finalBuffer4, align 4, !dbg !12054
  %tobool5 = icmp ne i8 %17, 0, !dbg !12054
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !12056

if.then6:                                         ; preds = %sw.bb2
  %18 = load i8*, i8** %start.addr, align 8, !dbg !12057
  %19 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12059
  store i8* %18, i8** %19, align 8, !dbg !12060
  store i32 0, i32* %retval, align 4, !dbg !12061
  br label %return, !dbg !12061

if.end7:                                          ; preds = %sw.bb2
  %20 = load i8*, i8** %start.addr, align 8, !dbg !12062
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12063
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 47, !dbg !12063
  store i8* %20, i8** %m_eventPtr, align 8, !dbg !12064
  store i32 5, i32* %retval, align 4, !dbg !12065
  br label %return, !dbg !12065

sw.bb8:                                           ; preds = %entry
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12066
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 85, !dbg !12066
  %finalBuffer10 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1, !dbg !12066
  %23 = load i8, i8* %finalBuffer10, align 4, !dbg !12066
  %tobool11 = icmp ne i8 %23, 0, !dbg !12066
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !12068

if.then12:                                        ; preds = %sw.bb8
  %24 = load i8*, i8** %start.addr, align 8, !dbg !12069
  %25 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12071
  store i8* %24, i8** %25, align 8, !dbg !12072
  store i32 0, i32* %retval, align 4, !dbg !12073
  br label %return, !dbg !12073

if.end13:                                         ; preds = %sw.bb8
  %26 = load i8*, i8** %start.addr, align 8, !dbg !12074
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12075
  %m_eventPtr14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 47, !dbg !12075
  store i8* %26, i8** %m_eventPtr14, align 8, !dbg !12076
  store i32 6, i32* %retval, align 4, !dbg !12077
  br label %return, !dbg !12077

sw.epilog:                                        ; preds = %entry, %if.end
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12078
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 45, !dbg !12078
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor3, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !12079
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12080
  %30 = load i8*, i8** %start.addr, align 8, !dbg !12081
  %31 = load i8*, i8** %end.addr, align 8, !dbg !12082
  %32 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12083
  %call15 = call i32 @externalEntityInitProcessor3(%struct.XML_ParserStruct* %29, i8* %30, i8* %31, i8** %32), !dbg !12084
  store i32 %call15, i32* %retval, align 4, !dbg !12085
  br label %return, !dbg !12085

return:                                           ; preds = %sw.epilog, %if.end13, %if.then12, %if.end7, %if.then6, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !12086
  ret i32 %33, !dbg !12086
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor3(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 !dbg !989 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %parser.addr, metadata !12087, metadata !1076), !dbg !12088
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !12089, metadata !1076), !dbg !12090
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !12091, metadata !1076), !dbg !12092
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endPtr.addr, metadata !12093, metadata !1076), !dbg !12094
  call void @llvm.dbg.declare(metadata i32* %tok, metadata !12095, metadata !1076), !dbg !12096
  call void @llvm.dbg.declare(metadata i8** %next, metadata !12097, metadata !1076), !dbg !12098
  %0 = load i8*, i8** %start.addr, align 8, !dbg !12099
  store i8* %0, i8** %next, align 8, !dbg !12098
  %1 = load i8*, i8** %start.addr, align 8, !dbg !12100
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12101
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47, !dbg !12101
  store i8* %1, i8** %m_eventPtr, align 8, !dbg !12102
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12103
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34, !dbg !12103
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8, !dbg !12103
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0, !dbg !12103
  %arrayidx = getelementptr inbounds [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [3 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i64 0, i64 1, !dbg !12103
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8, !dbg !12103
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12103
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34, !dbg !12103
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8, !dbg !12103
  %8 = load i8*, i8** %start.addr, align 8, !dbg !12103
  %9 = load i8*, i8** %end.addr, align 8, !dbg !12103
  %call = call i32 %5(%struct.encoding* %7, i8* %8, i8* %9, i8** %next), !dbg !12103
  store i32 %call, i32* %tok, align 4, !dbg !12104
  %10 = load i8*, i8** %next, align 8, !dbg !12105
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12106
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 48, !dbg !12106
  store i8* %10, i8** %m_eventEndPtr, align 8, !dbg !12107
  %12 = load i32, i32* %tok, align 4, !dbg !12108
  switch i32 %12, label %sw.epilog15 [
    i32 12, label %sw.bb
    i32 -1, label %sw.bb5
    i32 -2, label %sw.bb9
  ], !dbg !12109

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12110, metadata !1076), !dbg !12113
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12114
  %14 = load i8*, i8** %start.addr, align 8, !dbg !12115
  %15 = load i8*, i8** %next, align 8, !dbg !12116
  %call2 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %13, i32 1, i8* %14, i8* %15), !dbg !12117
  store i32 %call2, i32* %result, align 4, !dbg !12118
  %16 = load i32, i32* %result, align 4, !dbg !12119
  %cmp = icmp ne i32 %16, 0, !dbg !12121
  br i1 %cmp, label %if.then, label %if.end, !dbg !12122

if.then:                                          ; preds = %sw.bb
  %17 = load i32, i32* %result, align 4, !dbg !12123
  store i32 %17, i32* %retval, align 4, !dbg !12124
  br label %return, !dbg !12124

if.end:                                           ; preds = %sw.bb
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12125
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 85, !dbg !12125
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0, !dbg !12125
  %19 = load i32, i32* %parsing, align 8, !dbg !12125
  switch i32 %19, label %sw.default [
    i32 3, label %sw.bb3
    i32 2, label %sw.bb4
  ], !dbg !12126

sw.bb3:                                           ; preds = %if.end
  %20 = load i8*, i8** %next, align 8, !dbg !12127
  %21 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12129
  store i8* %20, i8** %21, align 8, !dbg !12130
  store i32 0, i32* %retval, align 4, !dbg !12131
  br label %return, !dbg !12131

sw.bb4:                                           ; preds = %if.end
  store i32 35, i32* %retval, align 4, !dbg !12132
  br label %return, !dbg !12132

sw.default:                                       ; preds = %if.end
  %22 = load i8*, i8** %next, align 8, !dbg !12133
  store i8* %22, i8** %start.addr, align 8, !dbg !12134
  br label %sw.epilog, !dbg !12135

sw.epilog:                                        ; preds = %sw.default
  br label %sw.epilog15, !dbg !12136

sw.bb5:                                           ; preds = %entry
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12137
  %m_parsingStatus6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 85, !dbg !12137
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus6, i32 0, i32 1, !dbg !12137
  %24 = load i8, i8* %finalBuffer, align 4, !dbg !12137
  %tobool = icmp ne i8 %24, 0, !dbg !12137
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12139

if.then7:                                         ; preds = %sw.bb5
  %25 = load i8*, i8** %start.addr, align 8, !dbg !12140
  %26 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12142
  store i8* %25, i8** %26, align 8, !dbg !12143
  store i32 0, i32* %retval, align 4, !dbg !12144
  br label %return, !dbg !12144

if.end8:                                          ; preds = %sw.bb5
  store i32 5, i32* %retval, align 4, !dbg !12145
  br label %return, !dbg !12145

sw.bb9:                                           ; preds = %entry
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12146
  %m_parsingStatus10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 85, !dbg !12146
  %finalBuffer11 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus10, i32 0, i32 1, !dbg !12146
  %28 = load i8, i8* %finalBuffer11, align 4, !dbg !12146
  %tobool12 = icmp ne i8 %28, 0, !dbg !12146
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !12148

if.then13:                                        ; preds = %sw.bb9
  %29 = load i8*, i8** %start.addr, align 8, !dbg !12149
  %30 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12151
  store i8* %29, i8** %30, align 8, !dbg !12152
  store i32 0, i32* %retval, align 4, !dbg !12153
  br label %return, !dbg !12153

if.end14:                                         ; preds = %sw.bb9
  store i32 6, i32* %retval, align 4, !dbg !12154
  br label %return, !dbg !12154

sw.epilog15:                                      ; preds = %entry, %sw.epilog
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12155
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 45, !dbg !12155
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityContentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8, !dbg !12156
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12157
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 53, !dbg !12157
  store i32 1, i32* %m_tagLevel, align 4, !dbg !12158
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8, !dbg !12159
  %34 = load i8*, i8** %start.addr, align 8, !dbg !12160
  %35 = load i8*, i8** %end.addr, align 8, !dbg !12161
  %36 = load i8**, i8*** %endPtr.addr, align 8, !dbg !12162
  %call16 = call i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %33, i8* %34, i8* %35, i8** %36), !dbg !12163
  store i32 %call16, i32* %retval, align 4, !dbg !12164
  br label %return, !dbg !12164

return:                                           ; preds = %sw.epilog15, %if.end14, %if.then13, %if.end8, %if.then7, %sw.bb4, %sw.bb3, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !12165
  ret i32 %37, !dbg !12165
}

; Function Attrs: nounwind uwtable
define internal void @hashTableClear(%struct.HASH_TABLE* %table) #0 !dbg !998 {
entry:
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %i = alloca i64, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !12166, metadata !1076), !dbg !12167
  call void @llvm.dbg.declare(metadata i64* %i, metadata !12168, metadata !1076), !dbg !12169
  store i64 0, i64* %i, align 8, !dbg !12170
  br label %for.cond, !dbg !12172

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !12173
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12176
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2, !dbg !12177
  %2 = load i64, i64* %size, align 8, !dbg !12177
  %cmp = icmp ult i64 %0, %2, !dbg !12178
  br i1 %cmp, label %for.body, label %for.end, !dbg !12179

for.body:                                         ; preds = %for.cond
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12180
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 4, !dbg !12182
  %4 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !12182
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %4, i32 0, i32 2, !dbg !12183
  %5 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !12183
  %6 = load i64, i64* %i, align 8, !dbg !12184
  %7 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12185
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %7, i32 0, i32 0, !dbg !12186
  %8 = load %struct.NAMED**, %struct.NAMED*** %v, align 8, !dbg !12186
  %arrayidx = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %8, i64 %6, !dbg !12185
  %9 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8, !dbg !12185
  %10 = bitcast %struct.NAMED* %9 to i8*, !dbg !12185
  call void %5(i8* %10), !dbg !12180
  %11 = load i64, i64* %i, align 8, !dbg !12187
  %12 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12188
  %v1 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %12, i32 0, i32 0, !dbg !12189
  %13 = load %struct.NAMED**, %struct.NAMED*** %v1, align 8, !dbg !12189
  %arrayidx2 = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %13, i64 %11, !dbg !12188
  store %struct.NAMED* null, %struct.NAMED** %arrayidx2, align 8, !dbg !12190
  br label %for.inc, !dbg !12191

for.inc:                                          ; preds = %for.body
  %14 = load i64, i64* %i, align 8, !dbg !12192
  %inc = add i64 %14, 1, !dbg !12192
  store i64 %inc, i64* %i, align 8, !dbg !12192
  br label %for.cond, !dbg !12194

for.end:                                          ; preds = %for.cond
  %15 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12195
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %15, i32 0, i32 3, !dbg !12196
  store i64 0, i64* %used, align 8, !dbg !12197
  ret void, !dbg !12198
}

; Function Attrs: nounwind uwtable
define internal void @hashTableDestroy(%struct.HASH_TABLE* %table) #0 !dbg !1004 {
entry:
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %i = alloca i64, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %table.addr, metadata !12199, metadata !1076), !dbg !12200
  call void @llvm.dbg.declare(metadata i64* %i, metadata !12201, metadata !1076), !dbg !12202
  store i64 0, i64* %i, align 8, !dbg !12203
  br label %for.cond, !dbg !12205

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !12206
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12209
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2, !dbg !12210
  %2 = load i64, i64* %size, align 8, !dbg !12210
  %cmp = icmp ult i64 %0, %2, !dbg !12211
  br i1 %cmp, label %for.body, label %for.end, !dbg !12212

for.body:                                         ; preds = %for.cond
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12213
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 4, !dbg !12214
  %4 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8, !dbg !12214
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %4, i32 0, i32 2, !dbg !12215
  %5 = load void (i8*)*, void (i8*)** %free_fcn, align 8, !dbg !12215
  %6 = load i64, i64* %i, align 8, !dbg !12216
  %7 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12217
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %7, i32 0, i32 0, !dbg !12218
  %8 = load %struct.NAMED**, %struct.NAMED*** %v, align 8, !dbg !12218
  %arrayidx = getelementptr inbounds %struct.NAMED*, %struct.NAMED** %8, i64 %6, !dbg !12217
  %9 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8, !dbg !12217
  %10 = bitcast %struct.NAMED* %9 to i8*, !dbg !12217
  call void %5(i8* %10), !dbg !12213
  br label %for.inc, !dbg !12213

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8, !dbg !12219
  %inc = add i64 %11, 1, !dbg !12219
  store i64 %inc, i64* %i, align 8, !dbg !12219
  br label %for.cond, !dbg !12221

for.end:                                          ; preds = %for.cond
  %12 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12222
  %mem1 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %12, i32 0, i32 4, !dbg !12223
  %13 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem1, align 8, !dbg !12223
  %free_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %13, i32 0, i32 2, !dbg !12224
  %14 = load void (i8*)*, void (i8*)** %free_fcn2, align 8, !dbg !12224
  %15 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8, !dbg !12225
  %v3 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %15, i32 0, i32 0, !dbg !12226
  %16 = load %struct.NAMED**, %struct.NAMED*** %v3, align 8, !dbg !12226
  %17 = bitcast %struct.NAMED** %16 to i8*, !dbg !12225
  call void %14(i8* %17), !dbg !12222
  ret void, !dbg !12227
}

; Function Attrs: nounwind uwtable
define internal i32 @copyEntityTable(%struct.XML_ParserStruct* %oldParser, %struct.HASH_TABLE* %newTable, %struct.STRING_POOL* %newPool, %struct.HASH_TABLE* %oldTable) #0 !dbg !1010 {
entry:
  %retval = alloca i32, align 4
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %newTable.addr = alloca %struct.HASH_TABLE*, align 8
  %newPool.addr = alloca %struct.STRING_POOL*, align 8
  %oldTable.addr = alloca %struct.HASH_TABLE*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %cachedOldBase = alloca i8*, align 8
  %cachedNewBase = alloca i8*, align 8
  %newE = alloca %struct.ENTITY*, align 8
  %name = alloca i8*, align 8
  %oldE = alloca %struct.ENTITY*, align 8
  %tem = alloca i8*, align 8
  %tem41 = alloca i8*, align 8
  %tem52 = alloca i8*, align 8
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.XML_ParserStruct** %oldParser.addr, metadata !12228, metadata !1076), !dbg !12229
  store %struct.HASH_TABLE* %newTable, %struct.HASH_TABLE** %newTable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %newTable.addr, metadata !12230, metadata !1076), !dbg !12231
  store %struct.STRING_POOL* %newPool, %struct.STRING_POOL** %newPool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %newPool.addr, metadata !12232, metadata !1076), !dbg !12233
  store %struct.HASH_TABLE* %oldTable, %struct.HASH_TABLE** %oldTable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE** %oldTable.addr, metadata !12234, metadata !1076), !dbg !12235
  call void @llvm.dbg.declare(metadata %struct.HASH_TABLE_ITER* %iter, metadata !12236, metadata !1076), !dbg !12237
  call void @llvm.dbg.declare(metadata i8** %cachedOldBase, metadata !12238, metadata !1076), !dbg !12239
  store i8* null, i8** %cachedOldBase, align 8, !dbg !12239
  call void @llvm.dbg.declare(metadata i8** %cachedNewBase, metadata !12240, metadata !1076), !dbg !12241
  store i8* null, i8** %cachedNewBase, align 8, !dbg !12241
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %oldTable.addr, align 8, !dbg !12242
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %0), !dbg !12243
  br label %for.cond, !dbg !12244

for.cond:                                         ; preds = %if.end59, %entry
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %newE, metadata !12245, metadata !1076), !dbg !12249
  call void @llvm.dbg.declare(metadata i8** %name, metadata !12250, metadata !1076), !dbg !12251
  call void @llvm.dbg.declare(metadata %struct.ENTITY** %oldE, metadata !12252, metadata !1076), !dbg !12255
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter), !dbg !12256
  %1 = bitcast %struct.NAMED* %call to %struct.ENTITY*, !dbg !12257
  store %struct.ENTITY* %1, %struct.ENTITY** %oldE, align 8, !dbg !12255
  %2 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12258
  %tobool = icmp ne %struct.ENTITY* %2, null, !dbg !12258
  br i1 %tobool, label %if.end, label %if.then, !dbg !12260

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !12261

if.end:                                           ; preds = %for.cond
  %3 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !12262
  %4 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12263
  %name1 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %4, i32 0, i32 0, !dbg !12264
  %5 = load i8*, i8** %name1, align 8, !dbg !12264
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %3, i8* %5), !dbg !12265
  store i8* %call2, i8** %name, align 8, !dbg !12266
  %6 = load i8*, i8** %name, align 8, !dbg !12267
  %tobool3 = icmp ne i8* %6, null, !dbg !12267
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !12269

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12270
  br label %return, !dbg !12270

if.end5:                                          ; preds = %if.end
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8, !dbg !12271
  %8 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %newTable.addr, align 8, !dbg !12272
  %9 = load i8*, i8** %name, align 8, !dbg !12273
  %call6 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %7, %struct.HASH_TABLE* %8, i8* %9, i64 64), !dbg !12274
  %10 = bitcast %struct.NAMED* %call6 to %struct.ENTITY*, !dbg !12275
  store %struct.ENTITY* %10, %struct.ENTITY** %newE, align 8, !dbg !12276
  %11 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12277
  %tobool7 = icmp ne %struct.ENTITY* %11, null, !dbg !12277
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !12279

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !12280
  br label %return, !dbg !12280

if.end9:                                          ; preds = %if.end5
  %12 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12281
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %12, i32 0, i32 4, !dbg !12283
  %13 = load i8*, i8** %systemId, align 8, !dbg !12283
  %tobool10 = icmp ne i8* %13, null, !dbg !12281
  br i1 %tobool10, label %if.then11, label %if.else40, !dbg !12284

if.then11:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %tem, metadata !12285, metadata !1076), !dbg !12287
  %14 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !12288
  %15 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12289
  %systemId12 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %15, i32 0, i32 4, !dbg !12290
  %16 = load i8*, i8** %systemId12, align 8, !dbg !12290
  %call13 = call i8* @poolCopyString(%struct.STRING_POOL* %14, i8* %16), !dbg !12291
  store i8* %call13, i8** %tem, align 8, !dbg !12287
  %17 = load i8*, i8** %tem, align 8, !dbg !12292
  %tobool14 = icmp ne i8* %17, null, !dbg !12292
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !12294

if.then15:                                        ; preds = %if.then11
  store i32 0, i32* %retval, align 4, !dbg !12295
  br label %return, !dbg !12295

if.end16:                                         ; preds = %if.then11
  %18 = load i8*, i8** %tem, align 8, !dbg !12296
  %19 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12297
  %systemId17 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %19, i32 0, i32 4, !dbg !12298
  store i8* %18, i8** %systemId17, align 8, !dbg !12299
  %20 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12300
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %20, i32 0, i32 5, !dbg !12302
  %21 = load i8*, i8** %base, align 8, !dbg !12302
  %tobool18 = icmp ne i8* %21, null, !dbg !12300
  br i1 %tobool18, label %if.then19, label %if.end30, !dbg !12303

if.then19:                                        ; preds = %if.end16
  %22 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12304
  %base20 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %22, i32 0, i32 5, !dbg !12307
  %23 = load i8*, i8** %base20, align 8, !dbg !12307
  %24 = load i8*, i8** %cachedOldBase, align 8, !dbg !12308
  %cmp = icmp eq i8* %23, %24, !dbg !12309
  br i1 %cmp, label %if.then21, label %if.else, !dbg !12310

if.then21:                                        ; preds = %if.then19
  %25 = load i8*, i8** %cachedNewBase, align 8, !dbg !12311
  %26 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12312
  %base22 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %26, i32 0, i32 5, !dbg !12313
  store i8* %25, i8** %base22, align 8, !dbg !12314
  br label %if.end29, !dbg !12312

if.else:                                          ; preds = %if.then19
  %27 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12315
  %base23 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %27, i32 0, i32 5, !dbg !12317
  %28 = load i8*, i8** %base23, align 8, !dbg !12317
  store i8* %28, i8** %cachedOldBase, align 8, !dbg !12318
  %29 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !12319
  %30 = load i8*, i8** %cachedOldBase, align 8, !dbg !12320
  %call24 = call i8* @poolCopyString(%struct.STRING_POOL* %29, i8* %30), !dbg !12321
  store i8* %call24, i8** %tem, align 8, !dbg !12322
  %31 = load i8*, i8** %tem, align 8, !dbg !12323
  %tobool25 = icmp ne i8* %31, null, !dbg !12323
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !12325

if.then26:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !12326
  br label %return, !dbg !12326

if.end27:                                         ; preds = %if.else
  %32 = load i8*, i8** %tem, align 8, !dbg !12327
  %33 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12328
  %base28 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %33, i32 0, i32 5, !dbg !12329
  store i8* %32, i8** %base28, align 8, !dbg !12330
  store i8* %32, i8** %cachedNewBase, align 8, !dbg !12331
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %if.then21
  br label %if.end30, !dbg !12332

if.end30:                                         ; preds = %if.end29, %if.end16
  %34 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12333
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %34, i32 0, i32 6, !dbg !12335
  %35 = load i8*, i8** %publicId, align 8, !dbg !12335
  %tobool31 = icmp ne i8* %35, null, !dbg !12333
  br i1 %tobool31, label %if.then32, label %if.end39, !dbg !12336

if.then32:                                        ; preds = %if.end30
  %36 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !12337
  %37 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12339
  %publicId33 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %37, i32 0, i32 6, !dbg !12340
  %38 = load i8*, i8** %publicId33, align 8, !dbg !12340
  %call34 = call i8* @poolCopyString(%struct.STRING_POOL* %36, i8* %38), !dbg !12341
  store i8* %call34, i8** %tem, align 8, !dbg !12342
  %39 = load i8*, i8** %tem, align 8, !dbg !12343
  %tobool35 = icmp ne i8* %39, null, !dbg !12343
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !12345

if.then36:                                        ; preds = %if.then32
  store i32 0, i32* %retval, align 4, !dbg !12346
  br label %return, !dbg !12346

if.end37:                                         ; preds = %if.then32
  %40 = load i8*, i8** %tem, align 8, !dbg !12347
  %41 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12348
  %publicId38 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %41, i32 0, i32 6, !dbg !12349
  store i8* %40, i8** %publicId38, align 8, !dbg !12350
  br label %if.end39, !dbg !12351

if.end39:                                         ; preds = %if.end37, %if.end30
  br label %if.end49, !dbg !12352

if.else40:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %tem41, metadata !12353, metadata !1076), !dbg !12355
  %42 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !12356
  %43 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12357
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %43, i32 0, i32 1, !dbg !12358
  %44 = load i8*, i8** %textPtr, align 8, !dbg !12358
  %45 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12359
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %45, i32 0, i32 2, !dbg !12360
  %46 = load i32, i32* %textLen, align 8, !dbg !12360
  %call42 = call i8* @poolCopyStringN(%struct.STRING_POOL* %42, i8* %44, i32 %46), !dbg !12361
  store i8* %call42, i8** %tem41, align 8, !dbg !12355
  %47 = load i8*, i8** %tem41, align 8, !dbg !12362
  %tobool43 = icmp ne i8* %47, null, !dbg !12362
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !12364

if.then44:                                        ; preds = %if.else40
  store i32 0, i32* %retval, align 4, !dbg !12365
  br label %return, !dbg !12365

if.end45:                                         ; preds = %if.else40
  %48 = load i8*, i8** %tem41, align 8, !dbg !12366
  %49 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12367
  %textPtr46 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %49, i32 0, i32 1, !dbg !12368
  store i8* %48, i8** %textPtr46, align 8, !dbg !12369
  %50 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12370
  %textLen47 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %50, i32 0, i32 2, !dbg !12371
  %51 = load i32, i32* %textLen47, align 8, !dbg !12371
  %52 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12372
  %textLen48 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %52, i32 0, i32 2, !dbg !12373
  store i32 %51, i32* %textLen48, align 8, !dbg !12374
  br label %if.end49

if.end49:                                         ; preds = %if.end45, %if.end39
  %53 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12375
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %53, i32 0, i32 7, !dbg !12377
  %54 = load i8*, i8** %notation, align 8, !dbg !12377
  %tobool50 = icmp ne i8* %54, null, !dbg !12375
  br i1 %tobool50, label %if.then51, label %if.end59, !dbg !12378

if.then51:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i8** %tem52, metadata !12379, metadata !1076), !dbg !12381
  %55 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8, !dbg !12382
  %56 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12383
  %notation53 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %56, i32 0, i32 7, !dbg !12384
  %57 = load i8*, i8** %notation53, align 8, !dbg !12384
  %call54 = call i8* @poolCopyString(%struct.STRING_POOL* %55, i8* %57), !dbg !12385
  store i8* %call54, i8** %tem52, align 8, !dbg !12381
  %58 = load i8*, i8** %tem52, align 8, !dbg !12386
  %tobool55 = icmp ne i8* %58, null, !dbg !12386
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !12388

if.then56:                                        ; preds = %if.then51
  store i32 0, i32* %retval, align 4, !dbg !12389
  br label %return, !dbg !12389

if.end57:                                         ; preds = %if.then51
  %59 = load i8*, i8** %tem52, align 8, !dbg !12390
  %60 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12391
  %notation58 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %60, i32 0, i32 7, !dbg !12392
  store i8* %59, i8** %notation58, align 8, !dbg !12393
  br label %if.end59, !dbg !12394

if.end59:                                         ; preds = %if.end57, %if.end49
  %61 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12395
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %61, i32 0, i32 9, !dbg !12396
  %62 = load i8, i8* %is_param, align 1, !dbg !12396
  %63 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12397
  %is_param60 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %63, i32 0, i32 9, !dbg !12398
  store i8 %62, i8* %is_param60, align 1, !dbg !12399
  %64 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8, !dbg !12400
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %64, i32 0, i32 10, !dbg !12401
  %65 = load i8, i8* %is_internal, align 2, !dbg !12401
  %66 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8, !dbg !12402
  %is_internal61 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %66, i32 0, i32 10, !dbg !12403
  store i8 %65, i8* %is_internal61, align 2, !dbg !12404
  br label %for.cond, !dbg !12405

for.end:                                          ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !12407
  br label %return, !dbg !12407

return:                                           ; preds = %for.end, %if.then56, %if.then44, %if.then36, %if.then26, %if.then15, %if.then8, %if.then4
  %67 = load i32, i32* %retval, align 4, !dbg !12408
  ret i32 %67, !dbg !12408
}

; Function Attrs: nounwind uwtable
define internal i8* @poolCopyStringN(%struct.STRING_POOL* %pool, i8* %s, i32 %n) #0 !dbg !1013 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.STRING_POOL** %pool.addr, metadata !12409, metadata !1076), !dbg !12410
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !12411, metadata !1076), !dbg !12412
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !12413, metadata !1076), !dbg !12414
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12415
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3, !dbg !12417
  %1 = load i8*, i8** %ptr, align 8, !dbg !12417
  %tobool = icmp ne i8* %1, null, !dbg !12415
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !12418

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12419
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %2), !dbg !12421
  %tobool1 = icmp ne i8 %call, 0, !dbg !12421
  br i1 %tobool1, label %if.end, label %if.then, !dbg !12422

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval, align 8, !dbg !12423
  br label %return, !dbg !12423

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond, !dbg !12424

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %n.addr, align 4, !dbg !12425
  %cmp = icmp sgt i32 %3, 0, !dbg !12429
  br i1 %cmp, label %for.body, label %for.end, !dbg !12430

for.body:                                         ; preds = %for.cond
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12431
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 3, !dbg !12431
  %5 = load i8*, i8** %ptr2, align 8, !dbg !12431
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12431
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 2, !dbg !12431
  %7 = load i8*, i8** %end, align 8, !dbg !12431
  %cmp3 = icmp eq i8* %5, %7, !dbg !12431
  br i1 %cmp3, label %land.lhs.true4, label %cond.false, !dbg !12431

land.lhs.true4:                                   ; preds = %for.body
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12434
  %call5 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %8), !dbg !12434
  %tobool6 = icmp ne i8 %call5, 0, !dbg !12434
  br i1 %tobool6, label %cond.false, label %cond.true, !dbg !12436

cond.true:                                        ; preds = %land.lhs.true4
  br i1 false, label %if.end9, label %if.then8, !dbg !12437

cond.false:                                       ; preds = %land.lhs.true4, %for.body
  %9 = load i8*, i8** %s.addr, align 8, !dbg !12439
  %10 = load i8, i8* %9, align 1, !dbg !12439
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12439
  %ptr7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 3, !dbg !12439
  %12 = load i8*, i8** %ptr7, align 8, !dbg !12439
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !12439
  store i8* %incdec.ptr, i8** %ptr7, align 8, !dbg !12439
  store i8 %10, i8* %12, align 1, !dbg !12439
  br i1 true, label %if.end9, label %if.then8, !dbg !12441

if.then8:                                         ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval, align 8, !dbg !12442
  br label %return, !dbg !12442

if.end9:                                          ; preds = %cond.false, %cond.true
  br label %for.inc, !dbg !12443

for.inc:                                          ; preds = %if.end9
  %13 = load i32, i32* %n.addr, align 4, !dbg !12444
  %dec = add nsw i32 %13, -1, !dbg !12444
  store i32 %dec, i32* %n.addr, align 4, !dbg !12444
  %14 = load i8*, i8** %s.addr, align 8, !dbg !12446
  %incdec.ptr10 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !12446
  store i8* %incdec.ptr10, i8** %s.addr, align 8, !dbg !12446
  br label %for.cond, !dbg !12447

for.end:                                          ; preds = %for.cond
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12448
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4, !dbg !12449
  %16 = load i8*, i8** %start, align 8, !dbg !12449
  store i8* %16, i8** %s.addr, align 8, !dbg !12450
  %17 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12451
  %ptr11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %17, i32 0, i32 3, !dbg !12451
  %18 = load i8*, i8** %ptr11, align 8, !dbg !12451
  %19 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8, !dbg !12451
  %start12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %19, i32 0, i32 4, !dbg !12451
  store i8* %18, i8** %start12, align 8, !dbg !12451
  %20 = load i8*, i8** %s.addr, align 8, !dbg !12452
  store i8* %20, i8** %retval, align 8, !dbg !12453
  br label %return, !dbg !12453

return:                                           ; preds = %for.end, %if.then8, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !12454
  ret i8* %21, !dbg !12454
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1072, !1073}
!llvm.ident = !{!1074}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !158, subprograms: !650, globals: !1021)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmlparse.c", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!2 = !{!3, !12, !18, !24, !67, !73, !78, !83, !96}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Content_Type", file: !4, line: 101, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/expat.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!5 = !{!6, !7, !8, !9, !10, !11}
!6 = !DIEnumerator(name: "XML_CTYPE_EMPTY", value: 1)
!7 = !DIEnumerator(name: "XML_CTYPE_ANY", value: 2)
!8 = !DIEnumerator(name: "XML_CTYPE_MIXED", value: 3)
!9 = !DIEnumerator(name: "XML_CTYPE_NAME", value: 4)
!10 = !DIEnumerator(name: "XML_CTYPE_CHOICE", value: 5)
!11 = !DIEnumerator(name: "XML_CTYPE_SEQ", value: 6)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Content_Quant", file: !4, line: 110, size: 32, align: 32, elements: !13)
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "XML_CQUANT_NONE", value: 0)
!15 = !DIEnumerator(name: "XML_CQUANT_OPT", value: 1)
!16 = !DIEnumerator(name: "XML_CQUANT_REP", value: 2)
!17 = !DIEnumerator(name: "XML_CQUANT_PLUS", value: 3)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Convert_Result", file: !19, line: 133, size: 32, align: 32, elements: !20)
!19 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmltok.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "XML_CONVERT_COMPLETED", value: 0)
!22 = !DIEnumerator(name: "XML_CONVERT_INPUT_INCOMPLETE", value: 1)
!23 = !DIEnumerator(name: "XML_CONVERT_OUTPUT_EXHAUSTED", value: 2)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Error", file: !4, line: 54, size: 32, align: 32, elements: !25)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66}
!26 = !DIEnumerator(name: "XML_ERROR_NONE", value: 0)
!27 = !DIEnumerator(name: "XML_ERROR_NO_MEMORY", value: 1)
!28 = !DIEnumerator(name: "XML_ERROR_SYNTAX", value: 2)
!29 = !DIEnumerator(name: "XML_ERROR_NO_ELEMENTS", value: 3)
!30 = !DIEnumerator(name: "XML_ERROR_INVALID_TOKEN", value: 4)
!31 = !DIEnumerator(name: "XML_ERROR_UNCLOSED_TOKEN", value: 5)
!32 = !DIEnumerator(name: "XML_ERROR_PARTIAL_CHAR", value: 6)
!33 = !DIEnumerator(name: "XML_ERROR_TAG_MISMATCH", value: 7)
!34 = !DIEnumerator(name: "XML_ERROR_DUPLICATE_ATTRIBUTE", value: 8)
!35 = !DIEnumerator(name: "XML_ERROR_JUNK_AFTER_DOC_ELEMENT", value: 9)
!36 = !DIEnumerator(name: "XML_ERROR_PARAM_ENTITY_REF", value: 10)
!37 = !DIEnumerator(name: "XML_ERROR_UNDEFINED_ENTITY", value: 11)
!38 = !DIEnumerator(name: "XML_ERROR_RECURSIVE_ENTITY_REF", value: 12)
!39 = !DIEnumerator(name: "XML_ERROR_ASYNC_ENTITY", value: 13)
!40 = !DIEnumerator(name: "XML_ERROR_BAD_CHAR_REF", value: 14)
!41 = !DIEnumerator(name: "XML_ERROR_BINARY_ENTITY_REF", value: 15)
!42 = !DIEnumerator(name: "XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF", value: 16)
!43 = !DIEnumerator(name: "XML_ERROR_MISPLACED_XML_PI", value: 17)
!44 = !DIEnumerator(name: "XML_ERROR_UNKNOWN_ENCODING", value: 18)
!45 = !DIEnumerator(name: "XML_ERROR_INCORRECT_ENCODING", value: 19)
!46 = !DIEnumerator(name: "XML_ERROR_UNCLOSED_CDATA_SECTION", value: 20)
!47 = !DIEnumerator(name: "XML_ERROR_EXTERNAL_ENTITY_HANDLING", value: 21)
!48 = !DIEnumerator(name: "XML_ERROR_NOT_STANDALONE", value: 22)
!49 = !DIEnumerator(name: "XML_ERROR_UNEXPECTED_STATE", value: 23)
!50 = !DIEnumerator(name: "XML_ERROR_ENTITY_DECLARED_IN_PE", value: 24)
!51 = !DIEnumerator(name: "XML_ERROR_FEATURE_REQUIRES_XML_DTD", value: 25)
!52 = !DIEnumerator(name: "XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING", value: 26)
!53 = !DIEnumerator(name: "XML_ERROR_UNBOUND_PREFIX", value: 27)
!54 = !DIEnumerator(name: "XML_ERROR_UNDECLARING_PREFIX", value: 28)
!55 = !DIEnumerator(name: "XML_ERROR_INCOMPLETE_PE", value: 29)
!56 = !DIEnumerator(name: "XML_ERROR_XML_DECL", value: 30)
!57 = !DIEnumerator(name: "XML_ERROR_TEXT_DECL", value: 31)
!58 = !DIEnumerator(name: "XML_ERROR_PUBLICID", value: 32)
!59 = !DIEnumerator(name: "XML_ERROR_SUSPENDED", value: 33)
!60 = !DIEnumerator(name: "XML_ERROR_NOT_SUSPENDED", value: 34)
!61 = !DIEnumerator(name: "XML_ERROR_ABORTED", value: 35)
!62 = !DIEnumerator(name: "XML_ERROR_FINISHED", value: 36)
!63 = !DIEnumerator(name: "XML_ERROR_SUSPEND_PE", value: 37)
!64 = !DIEnumerator(name: "XML_ERROR_RESERVED_PREFIX_XML", value: 38)
!65 = !DIEnumerator(name: "XML_ERROR_RESERVED_PREFIX_XMLNS", value: 39)
!66 = !DIEnumerator(name: "XML_ERROR_RESERVED_NAMESPACE_URI", value: 40)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Parsing", file: !4, line: 835, size: 32, align: 32, elements: !68)
!68 = !{!69, !70, !71, !72}
!69 = !DIEnumerator(name: "XML_INITIALIZED", value: 0)
!70 = !DIEnumerator(name: "XML_PARSING", value: 1)
!71 = !DIEnumerator(name: "XML_FINISHED", value: 2)
!72 = !DIEnumerator(name: "XML_SUSPENDED", value: 3)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Status", file: !4, line: 45, size: 32, align: 32, elements: !74)
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "XML_STATUS_ERROR", value: 0)
!76 = !DIEnumerator(name: "XML_STATUS_OK", value: 1)
!77 = !DIEnumerator(name: "XML_STATUS_SUSPENDED", value: 2)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_ParamEntityParsing", file: !4, line: 876, size: 32, align: 32, elements: !79)
!79 = !{!80, !81, !82}
!80 = !DIEnumerator(name: "XML_PARAM_ENTITY_PARSING_NEVER", value: 0)
!81 = !DIEnumerator(name: "XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE", value: 1)
!82 = !DIEnumerator(name: "XML_PARAM_ENTITY_PARSING_ALWAYS", value: 2)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_FeatureEnum", file: !4, line: 1012, size: 32, align: 32, elements: !84)
!84 = !{!85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!85 = !DIEnumerator(name: "XML_FEATURE_END", value: 0)
!86 = !DIEnumerator(name: "XML_FEATURE_UNICODE", value: 1)
!87 = !DIEnumerator(name: "XML_FEATURE_UNICODE_WCHAR_T", value: 2)
!88 = !DIEnumerator(name: "XML_FEATURE_DTD", value: 3)
!89 = !DIEnumerator(name: "XML_FEATURE_CONTEXT_BYTES", value: 4)
!90 = !DIEnumerator(name: "XML_FEATURE_MIN_SIZE", value: 5)
!91 = !DIEnumerator(name: "XML_FEATURE_SIZEOF_XML_CHAR", value: 6)
!92 = !DIEnumerator(name: "XML_FEATURE_SIZEOF_XML_LCHAR", value: 7)
!93 = !DIEnumerator(name: "XML_FEATURE_NS", value: 8)
!94 = !DIEnumerator(name: "XML_FEATURE_LARGE_SIZE", value: 9)
!95 = !DIEnumerator(name: "XML_FEATURE_ATTR_INFO", value: 10)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !97, line: 20, size: 32, align: 32, elements: !98)
!97 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/xmlrole.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!98 = !{!99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157}
!99 = !DIEnumerator(name: "XML_ROLE_ERROR", value: -1)
!100 = !DIEnumerator(name: "XML_ROLE_NONE", value: 0)
!101 = !DIEnumerator(name: "XML_ROLE_XML_DECL", value: 1)
!102 = !DIEnumerator(name: "XML_ROLE_INSTANCE_START", value: 2)
!103 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_NONE", value: 3)
!104 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_NAME", value: 4)
!105 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_SYSTEM_ID", value: 5)
!106 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_PUBLIC_ID", value: 6)
!107 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_INTERNAL_SUBSET", value: 7)
!108 = !DIEnumerator(name: "XML_ROLE_DOCTYPE_CLOSE", value: 8)
!109 = !DIEnumerator(name: "XML_ROLE_GENERAL_ENTITY_NAME", value: 9)
!110 = !DIEnumerator(name: "XML_ROLE_PARAM_ENTITY_NAME", value: 10)
!111 = !DIEnumerator(name: "XML_ROLE_ENTITY_NONE", value: 11)
!112 = !DIEnumerator(name: "XML_ROLE_ENTITY_VALUE", value: 12)
!113 = !DIEnumerator(name: "XML_ROLE_ENTITY_SYSTEM_ID", value: 13)
!114 = !DIEnumerator(name: "XML_ROLE_ENTITY_PUBLIC_ID", value: 14)
!115 = !DIEnumerator(name: "XML_ROLE_ENTITY_COMPLETE", value: 15)
!116 = !DIEnumerator(name: "XML_ROLE_ENTITY_NOTATION_NAME", value: 16)
!117 = !DIEnumerator(name: "XML_ROLE_NOTATION_NONE", value: 17)
!118 = !DIEnumerator(name: "XML_ROLE_NOTATION_NAME", value: 18)
!119 = !DIEnumerator(name: "XML_ROLE_NOTATION_SYSTEM_ID", value: 19)
!120 = !DIEnumerator(name: "XML_ROLE_NOTATION_NO_SYSTEM_ID", value: 20)
!121 = !DIEnumerator(name: "XML_ROLE_NOTATION_PUBLIC_ID", value: 21)
!122 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_NAME", value: 22)
!123 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_CDATA", value: 23)
!124 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_ID", value: 24)
!125 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_IDREF", value: 25)
!126 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_IDREFS", value: 26)
!127 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_ENTITY", value: 27)
!128 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_ENTITIES", value: 28)
!129 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN", value: 29)
!130 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS", value: 30)
!131 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_ENUM_VALUE", value: 31)
!132 = !DIEnumerator(name: "XML_ROLE_ATTRIBUTE_NOTATION_VALUE", value: 32)
!133 = !DIEnumerator(name: "XML_ROLE_ATTLIST_NONE", value: 33)
!134 = !DIEnumerator(name: "XML_ROLE_ATTLIST_ELEMENT_NAME", value: 34)
!135 = !DIEnumerator(name: "XML_ROLE_IMPLIED_ATTRIBUTE_VALUE", value: 35)
!136 = !DIEnumerator(name: "XML_ROLE_REQUIRED_ATTRIBUTE_VALUE", value: 36)
!137 = !DIEnumerator(name: "XML_ROLE_DEFAULT_ATTRIBUTE_VALUE", value: 37)
!138 = !DIEnumerator(name: "XML_ROLE_FIXED_ATTRIBUTE_VALUE", value: 38)
!139 = !DIEnumerator(name: "XML_ROLE_ELEMENT_NONE", value: 39)
!140 = !DIEnumerator(name: "XML_ROLE_ELEMENT_NAME", value: 40)
!141 = !DIEnumerator(name: "XML_ROLE_CONTENT_ANY", value: 41)
!142 = !DIEnumerator(name: "XML_ROLE_CONTENT_EMPTY", value: 42)
!143 = !DIEnumerator(name: "XML_ROLE_CONTENT_PCDATA", value: 43)
!144 = !DIEnumerator(name: "XML_ROLE_GROUP_OPEN", value: 44)
!145 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE", value: 45)
!146 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE_REP", value: 46)
!147 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE_OPT", value: 47)
!148 = !DIEnumerator(name: "XML_ROLE_GROUP_CLOSE_PLUS", value: 48)
!149 = !DIEnumerator(name: "XML_ROLE_GROUP_CHOICE", value: 49)
!150 = !DIEnumerator(name: "XML_ROLE_GROUP_SEQUENCE", value: 50)
!151 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT", value: 51)
!152 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT_REP", value: 52)
!153 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT_OPT", value: 53)
!154 = !DIEnumerator(name: "XML_ROLE_CONTENT_ELEMENT_PLUS", value: 54)
!155 = !DIEnumerator(name: "XML_ROLE_PI", value: 55)
!156 = !DIEnumerator(name: "XML_ROLE_COMMENT", value: 56)
!157 = !DIEnumerator(name: "XML_ROLE_PARAM_ENTITY_REF", value: 57)
!158 = !{!159, !161, !162, !223, !303, !169, !646, !359, !202, !523, !443, !591, !295, !203, !594, !647, !648, !212, !434, !477, !471, !623, !519, !160, !483, !511, !552, !180, !532, !182, !533, !575}
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Bool", file: !4, line: 28, baseType: !160)
!160 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Parser", file: !4, line: 25, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64, align: 64)
!164 = !DICompositeType(tag: DW_TAG_structure_type, name: "XML_ParserStruct", file: !1, line: 466, size: 7232, align: 64, elements: !165)
!165 = !{!166, !167, !168, !171, !191, !194, !195, !196, !200, !201, !204, !205, !213, !218, !224, !229, !231, !233, !235, !237, !242, !244, !249, !254, !256, !258, !263, !268, !269, !271, !290, !305, !310, !315, !320, !398, !405, !406, !407, !408, !409, !410, !411, !412, !413, !424, !429, !430, !431, !432, !433, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !518, !520, !521, !522, !592, !593, !615, !616, !617, !618, !619, !620, !621, !622, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !645}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "m_userData", scope: !164, file: !1, line: 469, baseType: !161, size: 64, align: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "m_handlerArg", scope: !164, file: !1, line: 470, baseType: !161, size: 64, align: 64, offset: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "m_buffer", scope: !164, file: !1, line: 471, baseType: !169, size: 64, align: 64, offset: 128)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64, align: 64)
!170 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "m_mem", scope: !164, file: !1, line: 472, baseType: !172, size: 192, align: 64, offset: 192)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Memory_Handling_Suite", file: !4, line: 200, baseType: !174)
!174 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 196, size: 192, align: 64, elements: !175)
!175 = !{!176, !183, !187}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_fcn", scope: !174, file: !4, line: 197, baseType: !177, size: 64, align: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, align: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{!161, !180}
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !181, line: 62, baseType: !182)
!181 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!182 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "realloc_fcn", scope: !174, file: !4, line: 198, baseType: !184, size: 64, align: 64, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DISubroutineType(types: !186)
!186 = !{!161, !161, !180}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "free_fcn", scope: !174, file: !4, line: 199, baseType: !188, size: 64, align: 64, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{null, !161}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "m_bufferPtr", scope: !164, file: !1, line: 474, baseType: !192, size: 64, align: 64, offset: 384)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64, align: 64)
!193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "m_bufferEnd", scope: !164, file: !1, line: 476, baseType: !169, size: 64, align: 64, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "m_bufferLim", scope: !164, file: !1, line: 478, baseType: !192, size: 64, align: 64, offset: 512)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "m_parseEndByteIndex", scope: !164, file: !1, line: 479, baseType: !197, size: 64, align: 64, offset: 576)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Index", file: !198, line: 123, baseType: !199)
!198 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmexpat/lib/expat_external.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!199 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "m_parseEndPtr", scope: !164, file: !1, line: 480, baseType: !192, size: 64, align: 64, offset: 640)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "m_dataBuf", scope: !164, file: !1, line: 481, baseType: !202, size: 64, align: 64, offset: 704)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Char", file: !198, line: 110, baseType: !170)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "m_dataBufEnd", scope: !164, file: !1, line: 482, baseType: !202, size: 64, align: 64, offset: 768)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "m_startElementHandler", scope: !164, file: !1, line: 483, baseType: !206, size: 64, align: 64, offset: 832)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartElementHandler", file: !4, line: 252, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64, align: 64)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !161, !210, !212}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64, align: 64)
!211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "m_endElementHandler", scope: !164, file: !1, line: 484, baseType: !214, size: 64, align: 64, offset: 896)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndElementHandler", file: !4, line: 256, baseType: !215)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{null, !161, !210}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "m_characterDataHandler", scope: !164, file: !1, line: 485, baseType: !219, size: 64, align: 64, offset: 960)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_CharacterDataHandler", file: !4, line: 261, baseType: !220)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64, align: 64)
!221 = !DISubroutineType(types: !222)
!222 = !{null, !161, !210, !223}
!223 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "m_processingInstructionHandler", scope: !164, file: !1, line: 486, baseType: !225, size: 64, align: 64, offset: 1024)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ProcessingInstructionHandler", file: !4, line: 266, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !161, !210, !210}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "m_commentHandler", scope: !164, file: !1, line: 487, baseType: !230, size: 64, align: 64, offset: 1088)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_CommentHandler", file: !4, line: 272, baseType: !215)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "m_startCdataSectionHandler", scope: !164, file: !1, line: 488, baseType: !232, size: 64, align: 64, offset: 1152)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartCdataSectionHandler", file: !4, line: 275, baseType: !188)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "m_endCdataSectionHandler", scope: !164, file: !1, line: 489, baseType: !234, size: 64, align: 64, offset: 1216)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndCdataSectionHandler", file: !4, line: 276, baseType: !188)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "m_defaultHandler", scope: !164, file: !1, line: 490, baseType: !236, size: 64, align: 64, offset: 1280)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_DefaultHandler", file: !4, line: 291, baseType: !220)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "m_startDoctypeDeclHandler", scope: !164, file: !1, line: 491, baseType: !238, size: 64, align: 64, offset: 1344)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartDoctypeDeclHandler", file: !4, line: 298, baseType: !239)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{null, !161, !210, !210, !210, !223}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "m_endDoctypeDeclHandler", scope: !164, file: !1, line: 492, baseType: !243, size: 64, align: 64, offset: 1408)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndDoctypeDeclHandler", file: !4, line: 309, baseType: !188)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "m_unparsedEntityDeclHandler", scope: !164, file: !1, line: 493, baseType: !245, size: 64, align: 64, offset: 1472)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_UnparsedEntityDeclHandler", file: !4, line: 353, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DISubroutineType(types: !248)
!248 = !{null, !161, !210, !210, !210, !210, !210}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "m_notationDeclHandler", scope: !164, file: !1, line: 494, baseType: !250, size: 64, align: 64, offset: 1536)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_NotationDeclHandler", file: !4, line: 365, baseType: !251)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{null, !161, !210, !210, !210, !210}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "m_startNamespaceDeclHandler", scope: !164, file: !1, line: 495, baseType: !255, size: 64, align: 64, offset: 1600)
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartNamespaceDeclHandler", file: !4, line: 378, baseType: !226)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "m_endNamespaceDeclHandler", scope: !164, file: !1, line: 496, baseType: !257, size: 64, align: 64, offset: 1664)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndNamespaceDeclHandler", file: !4, line: 383, baseType: !215)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "m_notStandaloneHandler", scope: !164, file: !1, line: 497, baseType: !259, size: 64, align: 64, offset: 1728)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_NotStandaloneHandler", file: !4, line: 396, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{!223, !161}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "m_externalEntityRefHandler", scope: !164, file: !1, line: 498, baseType: !264, size: 64, align: 64, offset: 1792)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ExternalEntityRefHandler", file: !4, line: 432, baseType: !265)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DISubroutineType(types: !267)
!267 = !{!223, !162, !210, !210, !210, !210}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "m_externalEntityRefHandlerArg", scope: !164, file: !1, line: 499, baseType: !162, size: 64, align: 64, offset: 1856)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "m_skippedEntityHandler", scope: !164, file: !1, line: 500, baseType: !270, size: 64, align: 64, offset: 1920)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_SkippedEntityHandler", file: !4, line: 449, baseType: !220)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingHandler", scope: !164, file: !1, line: 501, baseType: !272, size: 64, align: 64, offset: 1984)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_UnknownEncodingHandler", file: !4, line: 528, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DISubroutineType(types: !275)
!275 = !{!223, !161, !210, !276}
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Encoding", file: !4, line: 511, baseType: !278)
!278 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 506, size: 8384, align: 64, elements: !279)
!279 = !{!280, !284, !285, !289}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !278, file: !4, line: 507, baseType: !281, size: 8192, align: 32)
!281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 8192, align: 32, elements: !282)
!282 = !{!283}
!283 = !DISubrange(count: 256)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !278, file: !4, line: 508, baseType: !161, size: 64, align: 64, offset: 8192)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "convert", scope: !278, file: !4, line: 509, baseType: !286, size: 64, align: 64, offset: 8256)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!287 = !DISubroutineType(types: !288)
!288 = !{!223, !161, !192}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !278, file: !4, line: 510, baseType: !188, size: 64, align: 64, offset: 8320)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "m_elementDeclHandler", scope: !164, file: !1, line: 502, baseType: !291, size: 64, align: 64, offset: 2048)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ElementDeclHandler", file: !4, line: 150, baseType: !292)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DISubroutineType(types: !294)
!294 = !{null, !161, !210, !295}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64, align: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Content", file: !4, line: 135, baseType: !297)
!297 = !DICompositeType(tag: DW_TAG_structure_type, name: "XML_cp", file: !4, line: 137, size: 256, align: 64, elements: !298)
!298 = !{!299, !300, !301, !302, !304}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !297, file: !4, line: 138, baseType: !3, size: 32, align: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !297, file: !4, line: 139, baseType: !12, size: 32, align: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !297, file: !4, line: 140, baseType: !202, size: 64, align: 64, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "numchildren", scope: !297, file: !4, line: 141, baseType: !303, size: 32, align: 32, offset: 128)
!303 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !297, file: !4, line: 142, baseType: !295, size: 64, align: 64, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "m_attlistDeclHandler", scope: !164, file: !1, line: 503, baseType: !306, size: 64, align: 64, offset: 2112)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_AttlistDeclHandler", file: !4, line: 166, baseType: !307)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64, align: 64)
!308 = !DISubroutineType(types: !309)
!309 = !{null, !161, !210, !210, !210, !210, !223}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "m_entityDeclHandler", scope: !164, file: !1, line: 504, baseType: !311, size: 64, align: 64, offset: 2176)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EntityDeclHandler", file: !4, line: 329, baseType: !312)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{null, !161, !210, !223, !210, !223, !210, !210, !210, !210}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "m_xmlDeclHandler", scope: !164, file: !1, line: 505, baseType: !316, size: 64, align: 64, offset: 2240)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_XmlDeclHandler", file: !4, line: 186, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64, align: 64)
!318 = !DISubroutineType(types: !319)
!319 = !{null, !161, !210, !210, !223}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "m_encoding", scope: !164, file: !1, line: 506, baseType: !321, size: 64, align: 64, offset: 2304)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64, align: 64)
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENCODING", file: !19, line: 126, baseType: !324)
!324 = !DICompositeType(tag: DW_TAG_structure_type, name: "encoding", file: !19, line: 139, size: 1088, align: 64, elements: !325)
!325 = !{!326, !335, !339, !343, !347, !351, !355, !367, !368, !369, !380, !381, !386, !395, !396, !397}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "scanners", scope: !324, file: !19, line: 140, baseType: !327, size: 192, align: 64)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 192, align: 64, elements: !333)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCANNER", file: !19, line: 128, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64, align: 64)
!330 = !DISubroutineType(types: !331)
!331 = !{!223, !321, !192, !192, !332}
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64, align: 64)
!333 = !{!334}
!334 = !DISubrange(count: 3)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "literalScanners", scope: !324, file: !19, line: 141, baseType: !336, size: 128, align: 64, offset: 192)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 128, align: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 2)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "sameName", scope: !324, file: !19, line: 142, baseType: !340, size: 64, align: 64, offset: 320)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64, align: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!223, !321, !192, !192}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "nameMatchesAscii", scope: !324, file: !19, line: 145, baseType: !344, size: 64, align: 64, offset: 384)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64, align: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{!223, !321, !192, !192, !192}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "nameLength", scope: !324, file: !19, line: 149, baseType: !348, size: 64, align: 64, offset: 448)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64, align: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!223, !321, !192}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "skipS", scope: !324, file: !19, line: 150, baseType: !352, size: 64, align: 64, offset: 512)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!353 = !DISubroutineType(types: !354)
!354 = !{!192, !321, !192}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "getAtts", scope: !324, file: !19, line: 151, baseType: !356, size: 64, align: 64, offset: 576)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64, align: 64)
!357 = !DISubroutineType(types: !358)
!358 = !{!223, !321, !192, !223, !359}
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64, align: 64)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATTRIBUTE", file: !19, line: 123, baseType: !361)
!361 = !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 118, size: 256, align: 64, elements: !362)
!362 = !{!363, !364, !365, !366}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !361, file: !19, line: 119, baseType: !192, size: 64, align: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "valuePtr", scope: !361, file: !19, line: 120, baseType: !192, size: 64, align: 64, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "valueEnd", scope: !361, file: !19, line: 121, baseType: !192, size: 64, align: 64, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "normalized", scope: !361, file: !19, line: 122, baseType: !170, size: 8, align: 8, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "charRefNumber", scope: !324, file: !19, line: 155, baseType: !348, size: 64, align: 64, offset: 640)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "predefinedEntityName", scope: !324, file: !19, line: 156, baseType: !340, size: 64, align: 64, offset: 704)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "updatePosition", scope: !324, file: !19, line: 159, baseType: !370, size: 64, align: 64, offset: 768)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64, align: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !321, !192, !192, !373}
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64, align: 64)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "POSITION", file: !19, line: 116, baseType: !375)
!375 = !DICompositeType(tag: DW_TAG_structure_type, name: "position", file: !19, line: 112, size: 128, align: 64, elements: !376)
!376 = !{!377, !379}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "lineNumber", scope: !375, file: !19, line: 114, baseType: !378, size: 64, align: 64)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Size", file: !198, line: 124, baseType: !182)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "columnNumber", scope: !375, file: !19, line: 115, baseType: !378, size: 64, align: 64, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "isPublicId", scope: !324, file: !19, line: 163, baseType: !329, size: 64, align: 64, offset: 832)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "utf8Convert", scope: !324, file: !19, line: 167, baseType: !382, size: 64, align: 64, offset: 896)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64, align: 64)
!383 = !DISubroutineType(types: !384)
!384 = !{!18, !321, !332, !192, !385, !192}
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "utf16Convert", scope: !324, file: !19, line: 172, baseType: !387, size: 64, align: 64, offset: 960)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{!18, !321, !332, !192, !390, !393}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64, align: 64)
!392 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, align: 64)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "minBytesPerChar", scope: !324, file: !19, line: 177, baseType: !223, size: 32, align: 32, offset: 1024)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "isUtf8", scope: !324, file: !19, line: 178, baseType: !170, size: 8, align: 8, offset: 1056)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "isUtf16", scope: !324, file: !19, line: 179, baseType: !170, size: 8, align: 8, offset: 1064)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "m_initEncoding", scope: !164, file: !1, line: 507, baseType: !399, size: 1152, align: 64, offset: 2368)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "INIT_ENCODING", file: !19, line: 270, baseType: !400)
!400 = !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 267, size: 1152, align: 64, elements: !401)
!401 = !{!402, !403}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "initEnc", scope: !400, file: !19, line: 268, baseType: !323, size: 1088, align: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "encPtr", scope: !400, file: !19, line: 269, baseType: !404, size: 64, align: 64, offset: 1088)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "m_internalEncoding", scope: !164, file: !1, line: 508, baseType: !321, size: 64, align: 64, offset: 3520)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "m_protocolEncodingName", scope: !164, file: !1, line: 509, baseType: !210, size: 64, align: 64, offset: 3584)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "m_ns", scope: !164, file: !1, line: 510, baseType: !159, size: 8, align: 8, offset: 3648)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "m_ns_triplets", scope: !164, file: !1, line: 511, baseType: !159, size: 8, align: 8, offset: 3656)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingMem", scope: !164, file: !1, line: 512, baseType: !161, size: 64, align: 64, offset: 3712)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingData", scope: !164, file: !1, line: 513, baseType: !161, size: 64, align: 64, offset: 3776)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingHandlerData", scope: !164, file: !1, line: 514, baseType: !161, size: 64, align: 64, offset: 3840)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "m_unknownEncodingRelease", scope: !164, file: !1, line: 515, baseType: !188, size: 64, align: 64, offset: 3904)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "m_prologState", scope: !164, file: !1, line: 516, baseType: !414, size: 128, align: 64, offset: 3968)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "PROLOG_STATE", file: !97, line: 100, baseType: !415)
!415 = !DICompositeType(tag: DW_TAG_structure_type, name: "prolog_state", file: !97, line: 87, size: 128, align: 64, elements: !416)
!416 = !{!417, !422, !423}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !415, file: !97, line: 88, baseType: !418, size: 64, align: 64)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{!223, !421, !223, !192, !192, !321}
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !415, file: !97, line: 93, baseType: !303, size: 32, align: 32, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "role_none", scope: !415, file: !97, line: 94, baseType: !223, size: 32, align: 32, offset: 96)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "m_processor", scope: !164, file: !1, line: 517, baseType: !425, size: 64, align: 64, offset: 4096)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64, align: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "Processor", file: !1, line: 307, baseType: !427)
!427 = !DISubroutineType(types: !428)
!428 = !{!24, !162, !192, !192, !332}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "m_errorCode", scope: !164, file: !1, line: 518, baseType: !24, size: 32, align: 32, offset: 4160)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "m_eventPtr", scope: !164, file: !1, line: 519, baseType: !192, size: 64, align: 64, offset: 4224)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "m_eventEndPtr", scope: !164, file: !1, line: 520, baseType: !192, size: 64, align: 64, offset: 4288)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "m_positionPtr", scope: !164, file: !1, line: 521, baseType: !192, size: 64, align: 64, offset: 4352)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "m_openInternalEntities", scope: !164, file: !1, line: 522, baseType: !434, size: 64, align: 64, offset: 4416)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64, align: 64)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPEN_INTERNAL_ENTITY", file: !1, line: 305, baseType: !436)
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "open_internal_entity", file: !1, line: 298, size: 320, align: 64, elements: !437)
!437 = !{!438, !439, !440, !442, !458, !459}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "internalEventPtr", scope: !436, file: !1, line: 299, baseType: !192, size: 64, align: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "internalEventEndPtr", scope: !436, file: !1, line: 300, baseType: !192, size: 64, align: 64, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !436, file: !1, line: 301, baseType: !441, size: 64, align: 64, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "entity", scope: !436, file: !1, line: 302, baseType: !443, size: 64, align: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENTITY", file: !1, line: 210, baseType: !445)
!445 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 198, size: 512, align: 64, elements: !446)
!446 = !{!447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !445, file: !1, line: 199, baseType: !210, size: 64, align: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "textPtr", scope: !445, file: !1, line: 200, baseType: !210, size: 64, align: 64, offset: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "textLen", scope: !445, file: !1, line: 201, baseType: !223, size: 32, align: 32, offset: 128)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "processed", scope: !445, file: !1, line: 202, baseType: !223, size: 32, align: 32, offset: 160)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "systemId", scope: !445, file: !1, line: 203, baseType: !210, size: 64, align: 64, offset: 192)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !445, file: !1, line: 204, baseType: !210, size: 64, align: 64, offset: 256)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "publicId", scope: !445, file: !1, line: 205, baseType: !210, size: 64, align: 64, offset: 320)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "notation", scope: !445, file: !1, line: 206, baseType: !210, size: 64, align: 64, offset: 384)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !445, file: !1, line: 207, baseType: !159, size: 8, align: 8, offset: 448)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "is_param", scope: !445, file: !1, line: 208, baseType: !159, size: 8, align: 8, offset: 456)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "is_internal", scope: !445, file: !1, line: 209, baseType: !159, size: 8, align: 8, offset: 464)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "startTagLevel", scope: !436, file: !1, line: 303, baseType: !223, size: 32, align: 32, offset: 256)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "betweenDecl", scope: !436, file: !1, line: 304, baseType: !159, size: 8, align: 8, offset: 288)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "m_freeInternalEntities", scope: !164, file: !1, line: 523, baseType: !434, size: 64, align: 64, offset: 4480)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "m_defaultExpandInternalEntities", scope: !164, file: !1, line: 524, baseType: !159, size: 8, align: 8, offset: 4544)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "m_tagLevel", scope: !164, file: !1, line: 525, baseType: !223, size: 32, align: 32, offset: 4576)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "m_declEntity", scope: !164, file: !1, line: 526, baseType: !443, size: 64, align: 64, offset: 4608)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "m_doctypeName", scope: !164, file: !1, line: 527, baseType: !210, size: 64, align: 64, offset: 4672)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "m_doctypeSysid", scope: !164, file: !1, line: 528, baseType: !210, size: 64, align: 64, offset: 4736)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "m_doctypePubid", scope: !164, file: !1, line: 529, baseType: !210, size: 64, align: 64, offset: 4800)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeType", scope: !164, file: !1, line: 530, baseType: !210, size: 64, align: 64, offset: 4864)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "m_declNotationName", scope: !164, file: !1, line: 531, baseType: !210, size: 64, align: 64, offset: 4928)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "m_declNotationPublicId", scope: !164, file: !1, line: 532, baseType: !210, size: 64, align: 64, offset: 4992)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "m_declElementType", scope: !164, file: !1, line: 533, baseType: !471, size: 64, align: 64, offset: 5056)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "ELEMENT_TYPE", file: !1, line: 267, baseType: !473)
!473 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 260, size: 320, align: 64, elements: !474)
!474 = !{!475, !476, !504, !508, !509, !510}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !473, file: !1, line: 261, baseType: !210, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !473, file: !1, line: 262, baseType: !477, size: 64, align: 64, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64, align: 64)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "PREFIX", file: !1, line: 164, baseType: !479)
!479 = !DICompositeType(tag: DW_TAG_structure_type, name: "prefix", file: !1, line: 161, size: 128, align: 64, elements: !480)
!480 = !{!481, !482}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !479, file: !1, line: 162, baseType: !210, size: 64, align: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !479, file: !1, line: 163, baseType: !483, size: 64, align: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64, align: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "BINDING", file: !1, line: 159, baseType: !485)
!485 = !DICompositeType(tag: DW_TAG_structure_type, name: "binding", file: !1, line: 151, size: 384, align: 64, elements: !486)
!486 = !{!487, !489, !491, !492, !501, !502, !503}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !485, file: !1, line: 152, baseType: !488, size: 64, align: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64, align: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "nextTagBinding", scope: !485, file: !1, line: 153, baseType: !490, size: 64, align: 64, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "prevPrefixBinding", scope: !485, file: !1, line: 154, baseType: !490, size: 64, align: 64, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "attId", scope: !485, file: !1, line: 155, baseType: !493, size: 64, align: 64, offset: 192)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64, align: 64)
!494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !495)
!495 = !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_id", file: !1, line: 241, size: 192, align: 64, elements: !496)
!496 = !{!497, !498, !499, !500}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !495, file: !1, line: 242, baseType: !202, size: 64, align: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !495, file: !1, line: 243, baseType: !477, size: 64, align: 64, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "maybeTokenized", scope: !495, file: !1, line: 244, baseType: !159, size: 8, align: 8, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "xmlns", scope: !495, file: !1, line: 245, baseType: !159, size: 8, align: 8, offset: 136)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !485, file: !1, line: 156, baseType: !202, size: 64, align: 64, offset: 256)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "uriLen", scope: !485, file: !1, line: 157, baseType: !223, size: 32, align: 32, offset: 320)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "uriAlloc", scope: !485, file: !1, line: 158, baseType: !223, size: 32, align: 32, offset: 352)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "idAtt", scope: !473, file: !1, line: 263, baseType: !505, size: 64, align: 64, offset: 128)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64, align: 64)
!506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !507)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATTRIBUTE_ID", file: !1, line: 246, baseType: !495)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "nDefaultAtts", scope: !473, file: !1, line: 264, baseType: !223, size: 32, align: 32, offset: 192)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "allocDefaultAtts", scope: !473, file: !1, line: 265, baseType: !223, size: 32, align: 32, offset: 224)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "defaultAtts", scope: !473, file: !1, line: 266, baseType: !511, size: 64, align: 64, offset: 256)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64, align: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "DEFAULT_ATTRIBUTE", file: !1, line: 252, baseType: !513)
!513 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 248, size: 192, align: 64, elements: !514)
!514 = !{!515, !516, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !513, file: !1, line: 249, baseType: !505, size: 64, align: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "isCdata", scope: !513, file: !1, line: 250, baseType: !159, size: 8, align: 8, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !513, file: !1, line: 251, baseType: !210, size: 64, align: 64, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeId", scope: !164, file: !1, line: 534, baseType: !519, size: 64, align: 64, offset: 5120)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64, align: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeIsCdata", scope: !164, file: !1, line: 535, baseType: !159, size: 8, align: 8, offset: 5184)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "m_declAttributeIsId", scope: !164, file: !1, line: 536, baseType: !159, size: 8, align: 8, offset: 5192)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "m_dtd", scope: !164, file: !1, line: 537, baseType: !523, size: 64, align: 64, offset: 5248)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64, align: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "DTD", file: !1, line: 296, baseType: !525)
!525 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 269, size: 2560, align: 64, elements: !526)
!526 = !{!527, !544, !545, !546, !547, !568, !569, !570, !571, !572, !573, !574, !586, !587, !588, !589, !590}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "generalEntities", scope: !525, file: !1, line: 270, baseType: !528, size: 320, align: 64)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_TABLE", file: !1, line: 110, baseType: !529)
!529 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 104, size: 320, align: 64, elements: !530)
!530 = !{!531, !539, !540, !541, !542}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !529, file: !1, line: 105, baseType: !532, size: 64, align: 64)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64, align: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64, align: 64)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "NAMED", file: !1, line: 102, baseType: !535)
!535 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 100, size: 64, align: 64, elements: !536)
!536 = !{!537}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !535, file: !1, line: 101, baseType: !538, size: 64, align: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "KEY", file: !1, line: 98, baseType: !210)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !529, file: !1, line: 106, baseType: !160, size: 8, align: 8, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !529, file: !1, line: 107, baseType: !180, size: 64, align: 64, offset: 128)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !529, file: !1, line: 108, baseType: !180, size: 64, align: 64, offset: 192)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !529, file: !1, line: 109, baseType: !543, size: 64, align: 64, offset: 256)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64, align: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "elementTypes", scope: !525, file: !1, line: 271, baseType: !528, size: 320, align: 64, offset: 320)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "attributeIds", scope: !525, file: !1, line: 272, baseType: !528, size: 320, align: 64, offset: 640)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "prefixes", scope: !525, file: !1, line: 273, baseType: !528, size: 320, align: 64, offset: 960)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !525, file: !1, line: 274, baseType: !548, size: 384, align: 64, offset: 1280)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRING_POOL", file: !1, line: 237, baseType: !549)
!549 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 230, size: 384, align: 64, elements: !550)
!550 = !{!551, !563, !564, !565, !566, !567}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !549, file: !1, line: 231, baseType: !552, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64, align: 64)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLOCK", file: !1, line: 228, baseType: !554)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "block", file: !1, line: 224, size: 128, align: 64, elements: !555)
!555 = !{!556, !558, !559}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !554, file: !1, line: 225, baseType: !557, size: 64, align: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64, align: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !554, file: !1, line: 226, baseType: !223, size: 32, align: 32, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !554, file: !1, line: 227, baseType: !560, size: 8, align: 8, offset: 96)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 8, align: 8, elements: !561)
!561 = !{!562}
!562 = !DISubrange(count: 1)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "freeBlocks", scope: !549, file: !1, line: 232, baseType: !552, size: 64, align: 64, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !549, file: !1, line: 233, baseType: !210, size: 64, align: 64, offset: 128)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !549, file: !1, line: 234, baseType: !202, size: 64, align: 64, offset: 192)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !549, file: !1, line: 235, baseType: !202, size: 64, align: 64, offset: 256)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !549, file: !1, line: 236, baseType: !543, size: 64, align: 64, offset: 320)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "entityValuePool", scope: !525, file: !1, line: 275, baseType: !548, size: 384, align: 64, offset: 1664)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "keepProcessing", scope: !525, file: !1, line: 277, baseType: !159, size: 8, align: 8, offset: 2048)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "hasParamEntityRefs", scope: !525, file: !1, line: 280, baseType: !159, size: 8, align: 8, offset: 2056)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "standalone", scope: !525, file: !1, line: 281, baseType: !159, size: 8, align: 8, offset: 2064)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "defaultPrefix", scope: !525, file: !1, line: 287, baseType: !478, size: 128, align: 64, offset: 2112)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "in_eldecl", scope: !525, file: !1, line: 289, baseType: !159, size: 8, align: 8, offset: 2240)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "scaffold", scope: !525, file: !1, line: 290, baseType: !575, size: 64, align: 64, offset: 2304)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64, align: 64)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONTENT_SCAFFOLD", file: !1, line: 220, baseType: !577)
!577 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 212, size: 256, align: 64, elements: !578)
!578 = !{!579, !580, !581, !582, !583, !584, !585}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !577, file: !1, line: 213, baseType: !3, size: 32, align: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !577, file: !1, line: 214, baseType: !12, size: 32, align: 32, offset: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !577, file: !1, line: 215, baseType: !210, size: 64, align: 64, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "firstchild", scope: !577, file: !1, line: 216, baseType: !223, size: 32, align: 32, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "lastchild", scope: !577, file: !1, line: 217, baseType: !223, size: 32, align: 32, offset: 160)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "childcnt", scope: !577, file: !1, line: 218, baseType: !223, size: 32, align: 32, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "nextsib", scope: !577, file: !1, line: 219, baseType: !223, size: 32, align: 32, offset: 224)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "contentStringLen", scope: !525, file: !1, line: 291, baseType: !303, size: 32, align: 32, offset: 2368)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "scaffSize", scope: !525, file: !1, line: 292, baseType: !303, size: 32, align: 32, offset: 2400)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "scaffCount", scope: !525, file: !1, line: 293, baseType: !303, size: 32, align: 32, offset: 2432)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "scaffLevel", scope: !525, file: !1, line: 294, baseType: !223, size: 32, align: 32, offset: 2464)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "scaffIndex", scope: !525, file: !1, line: 295, baseType: !591, size: 64, align: 64, offset: 2496)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64, align: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "m_curBase", scope: !164, file: !1, line: 538, baseType: !210, size: 64, align: 64, offset: 5312)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "m_tagStack", scope: !164, file: !1, line: 539, baseType: !594, size: 64, align: 64, offset: 5376)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64, align: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "TAG", file: !1, line: 196, baseType: !596)
!596 = !DICompositeType(tag: DW_TAG_structure_type, name: "tag", file: !1, line: 188, size: 704, align: 64, elements: !597)
!597 = !{!598, !600, !601, !602, !612, !613, !614}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !596, file: !1, line: 189, baseType: !599, size: 64, align: 64)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64, align: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "rawName", scope: !596, file: !1, line: 190, baseType: !192, size: 64, align: 64, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "rawNameLength", scope: !596, file: !1, line: 191, baseType: !223, size: 32, align: 32, offset: 128)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !596, file: !1, line: 192, baseType: !603, size: 320, align: 64, offset: 192)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "TAG_NAME", file: !1, line: 173, baseType: !604)
!604 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 166, size: 320, align: 64, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !604, file: !1, line: 167, baseType: !210, size: 64, align: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "localPart", scope: !604, file: !1, line: 168, baseType: !210, size: 64, align: 64, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !604, file: !1, line: 169, baseType: !210, size: 64, align: 64, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "strLen", scope: !604, file: !1, line: 170, baseType: !223, size: 32, align: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "uriLen", scope: !604, file: !1, line: 171, baseType: !223, size: 32, align: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "prefixLen", scope: !604, file: !1, line: 172, baseType: !223, size: 32, align: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !596, file: !1, line: 193, baseType: !169, size: 64, align: 64, offset: 512)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "bufEnd", scope: !596, file: !1, line: 194, baseType: !169, size: 64, align: 64, offset: 576)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "bindings", scope: !596, file: !1, line: 195, baseType: !483, size: 64, align: 64, offset: 640)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "m_freeTagList", scope: !164, file: !1, line: 540, baseType: !594, size: 64, align: 64, offset: 5440)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "m_inheritedBindings", scope: !164, file: !1, line: 541, baseType: !483, size: 64, align: 64, offset: 5504)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "m_freeBindingList", scope: !164, file: !1, line: 542, baseType: !483, size: 64, align: 64, offset: 5568)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "m_attsSize", scope: !164, file: !1, line: 543, baseType: !223, size: 32, align: 32, offset: 5632)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "m_nSpecifiedAtts", scope: !164, file: !1, line: 544, baseType: !223, size: 32, align: 32, offset: 5664)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "m_idAttIndex", scope: !164, file: !1, line: 545, baseType: !223, size: 32, align: 32, offset: 5696)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "m_atts", scope: !164, file: !1, line: 546, baseType: !359, size: 64, align: 64, offset: 5760)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "m_nsAtts", scope: !164, file: !1, line: 547, baseType: !623, size: 64, align: 64, offset: 5824)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64, align: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "NS_ATT", file: !1, line: 258, baseType: !625)
!625 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 254, size: 192, align: 64, elements: !626)
!626 = !{!627, !628, !629}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !625, file: !1, line: 255, baseType: !182, size: 64, align: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !625, file: !1, line: 256, baseType: !182, size: 64, align: 64, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "uriName", scope: !625, file: !1, line: 257, baseType: !210, size: 64, align: 64, offset: 128)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "m_nsAttsVersion", scope: !164, file: !1, line: 548, baseType: !182, size: 64, align: 64, offset: 5888)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "m_nsAttsPower", scope: !164, file: !1, line: 549, baseType: !160, size: 8, align: 8, offset: 5952)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "m_position", scope: !164, file: !1, line: 553, baseType: !374, size: 128, align: 64, offset: 6016)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "m_tempPool", scope: !164, file: !1, line: 554, baseType: !548, size: 384, align: 64, offset: 6144)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "m_temp2Pool", scope: !164, file: !1, line: 555, baseType: !548, size: 384, align: 64, offset: 6528)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "m_groupConnector", scope: !164, file: !1, line: 556, baseType: !169, size: 64, align: 64, offset: 6912)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "m_groupSize", scope: !164, file: !1, line: 557, baseType: !303, size: 32, align: 32, offset: 6976)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "m_namespaceSeparator", scope: !164, file: !1, line: 558, baseType: !203, size: 8, align: 8, offset: 7008)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "m_parentParser", scope: !164, file: !1, line: 559, baseType: !162, size: 64, align: 64, offset: 7040)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "m_parsingStatus", scope: !164, file: !1, line: 560, baseType: !640, size: 64, align: 32, offset: 7104)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ParsingStatus", file: !4, line: 845, baseType: !641)
!641 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 842, size: 64, align: 32, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "parsing", scope: !641, file: !4, line: 843, baseType: !67, size: 32, align: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "finalBuffer", scope: !641, file: !4, line: 844, baseType: !159, size: 8, align: 8, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "m_hash_secret_salt", scope: !164, file: !1, line: 566, baseType: !182, size: 64, align: 64, offset: 7168)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64, align: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64, align: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64, align: 64)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "ICHAR", file: !1, line: 51, baseType: !170)
!650 = !{!651, !655, !658, !661, !664, !667, !670, !673, !674, !677, !680, !683, !684, !687, !690, !691, !694, !697, !700, !703, !706, !709, !712, !715, !718, !721, !722, !725, !728, !731, !734, !737, !740, !743, !746, !749, !752, !753, !756, !759, !762, !765, !768, !771, !774, !777, !780, !783, !786, !789, !792, !796, !799, !802, !803, !806, !809, !810, !813, !816, !819, !820, !821, !827, !830, !839, !850, !853, !856, !860, !864, !867, !870, !871, !872, !875, !876, !879, !882, !885, !888, !889, !892, !895, !896, !897, !908, !911, !916, !919, !922, !923, !926, !927, !928, !931, !934, !937, !940, !941, !944, !947, !950, !951, !954, !957, !960, !963, !964, !967, !972, !975, !976, !977, !980, !981, !984, !987, !988, !989, !990, !991, !994, !995, !998, !1001, !1004, !1005, !1010, !1013, !1016, !1019, !1020}
!651 = distinct !DISubprogram(name: "XML_ParserCreate", scope: !1, file: !1, line: 678, type: !652, isLocal: false, isDefinition: true, scopeLine: 679, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!652 = !DISubroutineType(types: !653)
!653 = !{!162, !210}
!654 = !{}
!655 = distinct !DISubprogram(name: "XML_ParserCreateNS", scope: !1, file: !1, line: 684, type: !656, isLocal: false, isDefinition: true, scopeLine: 685, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!656 = !DISubroutineType(types: !657)
!657 = !{!162, !210, !203}
!658 = distinct !DISubprogram(name: "XML_ParserCreate_MM", scope: !1, file: !1, line: 751, type: !659, isLocal: false, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!659 = !DISubroutineType(types: !660)
!660 = !{!162, !210, !543, !210}
!661 = distinct !DISubprogram(name: "XML_ParserReset", scope: !1, file: !1, line: 959, type: !662, isLocal: false, isDefinition: true, scopeLine: 960, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!662 = !DISubroutineType(types: !663)
!663 = !{!159, !162, !210}
!664 = distinct !DISubprogram(name: "XML_SetEncoding", scope: !1, file: !1, line: 995, type: !665, isLocal: false, isDefinition: true, scopeLine: 996, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!665 = !DISubroutineType(types: !666)
!666 = !{!73, !162, !210}
!667 = distinct !DISubprogram(name: "XML_ExternalEntityParserCreate", scope: !1, file: !1, line: 1014, type: !668, isLocal: false, isDefinition: true, scopeLine: 1017, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!668 = !DISubroutineType(types: !669)
!669 = !{!162, !162, !210, !210}
!670 = distinct !DISubprogram(name: "XML_ParserFree", scope: !1, file: !1, line: 1164, type: !671, isLocal: false, isDefinition: true, scopeLine: 1165, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!671 = !DISubroutineType(types: !672)
!672 = !{null, !162}
!673 = distinct !DISubprogram(name: "XML_UseParserAsHandlerArg", scope: !1, file: !1, line: 1229, type: !671, isLocal: false, isDefinition: true, scopeLine: 1230, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!674 = distinct !DISubprogram(name: "XML_UseForeignDTD", scope: !1, file: !1, line: 1235, type: !675, isLocal: false, isDefinition: true, scopeLine: 1236, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!675 = !DISubroutineType(types: !676)
!676 = !{!24, !162, !159}
!677 = distinct !DISubprogram(name: "XML_SetReturnNSTriplet", scope: !1, file: !1, line: 1249, type: !678, isLocal: false, isDefinition: true, scopeLine: 1250, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!678 = !DISubroutineType(types: !679)
!679 = !{null, !162, !223}
!680 = distinct !DISubprogram(name: "XML_SetUserData", scope: !1, file: !1, line: 1258, type: !681, isLocal: false, isDefinition: true, scopeLine: 1259, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!681 = !DISubroutineType(types: !682)
!682 = !{null, !162, !161}
!683 = distinct !DISubprogram(name: "XML_SetBase", scope: !1, file: !1, line: 1267, type: !665, isLocal: false, isDefinition: true, scopeLine: 1268, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!684 = distinct !DISubprogram(name: "XML_GetBase", scope: !1, file: !1, line: 1281, type: !685, isLocal: false, isDefinition: true, scopeLine: 1282, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!685 = !DISubroutineType(types: !686)
!686 = !{!210, !162}
!687 = distinct !DISubprogram(name: "XML_GetSpecifiedAttributeCount", scope: !1, file: !1, line: 1287, type: !688, isLocal: false, isDefinition: true, scopeLine: 1288, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!688 = !DISubroutineType(types: !689)
!689 = !{!223, !162}
!690 = distinct !DISubprogram(name: "XML_GetIdAttributeIndex", scope: !1, file: !1, line: 1293, type: !688, isLocal: false, isDefinition: true, scopeLine: 1294, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!691 = distinct !DISubprogram(name: "XML_SetElementHandler", scope: !1, file: !1, line: 1307, type: !692, isLocal: false, isDefinition: true, scopeLine: 1310, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !162, !206, !214}
!694 = distinct !DISubprogram(name: "XML_SetStartElementHandler", scope: !1, file: !1, line: 1316, type: !695, isLocal: false, isDefinition: true, scopeLine: 1317, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!695 = !DISubroutineType(types: !696)
!696 = !{null, !162, !206}
!697 = distinct !DISubprogram(name: "XML_SetEndElementHandler", scope: !1, file: !1, line: 1322, type: !698, isLocal: false, isDefinition: true, scopeLine: 1323, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!698 = !DISubroutineType(types: !699)
!699 = !{null, !162, !214}
!700 = distinct !DISubprogram(name: "XML_SetCharacterDataHandler", scope: !1, file: !1, line: 1328, type: !701, isLocal: false, isDefinition: true, scopeLine: 1330, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !162, !219}
!703 = distinct !DISubprogram(name: "XML_SetProcessingInstructionHandler", scope: !1, file: !1, line: 1335, type: !704, isLocal: false, isDefinition: true, scopeLine: 1337, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!704 = !DISubroutineType(types: !705)
!705 = !{null, !162, !225}
!706 = distinct !DISubprogram(name: "XML_SetCommentHandler", scope: !1, file: !1, line: 1342, type: !707, isLocal: false, isDefinition: true, scopeLine: 1344, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!707 = !DISubroutineType(types: !708)
!708 = !{null, !162, !230}
!709 = distinct !DISubprogram(name: "XML_SetCdataSectionHandler", scope: !1, file: !1, line: 1349, type: !710, isLocal: false, isDefinition: true, scopeLine: 1352, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !162, !232, !234}
!712 = distinct !DISubprogram(name: "XML_SetStartCdataSectionHandler", scope: !1, file: !1, line: 1358, type: !713, isLocal: false, isDefinition: true, scopeLine: 1359, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!713 = !DISubroutineType(types: !714)
!714 = !{null, !162, !232}
!715 = distinct !DISubprogram(name: "XML_SetEndCdataSectionHandler", scope: !1, file: !1, line: 1364, type: !716, isLocal: false, isDefinition: true, scopeLine: 1365, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!716 = !DISubroutineType(types: !717)
!717 = !{null, !162, !234}
!718 = distinct !DISubprogram(name: "XML_SetDefaultHandler", scope: !1, file: !1, line: 1370, type: !719, isLocal: false, isDefinition: true, scopeLine: 1372, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !162, !236}
!721 = distinct !DISubprogram(name: "XML_SetDefaultHandlerExpand", scope: !1, file: !1, line: 1378, type: !719, isLocal: false, isDefinition: true, scopeLine: 1380, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!722 = distinct !DISubprogram(name: "XML_SetDoctypeDeclHandler", scope: !1, file: !1, line: 1386, type: !723, isLocal: false, isDefinition: true, scopeLine: 1389, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!723 = !DISubroutineType(types: !724)
!724 = !{null, !162, !238, !243}
!725 = distinct !DISubprogram(name: "XML_SetStartDoctypeDeclHandler", scope: !1, file: !1, line: 1395, type: !726, isLocal: false, isDefinition: true, scopeLine: 1396, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!726 = !DISubroutineType(types: !727)
!727 = !{null, !162, !238}
!728 = distinct !DISubprogram(name: "XML_SetEndDoctypeDeclHandler", scope: !1, file: !1, line: 1401, type: !729, isLocal: false, isDefinition: true, scopeLine: 1402, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !162, !243}
!731 = distinct !DISubprogram(name: "XML_SetUnparsedEntityDeclHandler", scope: !1, file: !1, line: 1407, type: !732, isLocal: false, isDefinition: true, scopeLine: 1409, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!732 = !DISubroutineType(types: !733)
!733 = !{null, !162, !245}
!734 = distinct !DISubprogram(name: "XML_SetNotationDeclHandler", scope: !1, file: !1, line: 1414, type: !735, isLocal: false, isDefinition: true, scopeLine: 1416, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !162, !250}
!737 = distinct !DISubprogram(name: "XML_SetNamespaceDeclHandler", scope: !1, file: !1, line: 1421, type: !738, isLocal: false, isDefinition: true, scopeLine: 1424, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !162, !255, !257}
!740 = distinct !DISubprogram(name: "XML_SetStartNamespaceDeclHandler", scope: !1, file: !1, line: 1430, type: !741, isLocal: false, isDefinition: true, scopeLine: 1431, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!741 = !DISubroutineType(types: !742)
!742 = !{null, !162, !255}
!743 = distinct !DISubprogram(name: "XML_SetEndNamespaceDeclHandler", scope: !1, file: !1, line: 1436, type: !744, isLocal: false, isDefinition: true, scopeLine: 1437, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!744 = !DISubroutineType(types: !745)
!745 = !{null, !162, !257}
!746 = distinct !DISubprogram(name: "XML_SetNotStandaloneHandler", scope: !1, file: !1, line: 1442, type: !747, isLocal: false, isDefinition: true, scopeLine: 1444, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!747 = !DISubroutineType(types: !748)
!748 = !{null, !162, !259}
!749 = distinct !DISubprogram(name: "XML_SetExternalEntityRefHandler", scope: !1, file: !1, line: 1449, type: !750, isLocal: false, isDefinition: true, scopeLine: 1451, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!750 = !DISubroutineType(types: !751)
!751 = !{null, !162, !264}
!752 = distinct !DISubprogram(name: "XML_SetExternalEntityRefHandlerArg", scope: !1, file: !1, line: 1456, type: !681, isLocal: false, isDefinition: true, scopeLine: 1457, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!753 = distinct !DISubprogram(name: "XML_SetSkippedEntityHandler", scope: !1, file: !1, line: 1465, type: !754, isLocal: false, isDefinition: true, scopeLine: 1467, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!754 = !DISubroutineType(types: !755)
!755 = !{null, !162, !270}
!756 = distinct !DISubprogram(name: "XML_SetUnknownEncodingHandler", scope: !1, file: !1, line: 1472, type: !757, isLocal: false, isDefinition: true, scopeLine: 1475, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !162, !272, !161}
!759 = distinct !DISubprogram(name: "XML_SetElementDeclHandler", scope: !1, file: !1, line: 1481, type: !760, isLocal: false, isDefinition: true, scopeLine: 1483, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!760 = !DISubroutineType(types: !761)
!761 = !{null, !162, !291}
!762 = distinct !DISubprogram(name: "XML_SetAttlistDeclHandler", scope: !1, file: !1, line: 1488, type: !763, isLocal: false, isDefinition: true, scopeLine: 1490, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !162, !306}
!765 = distinct !DISubprogram(name: "XML_SetEntityDeclHandler", scope: !1, file: !1, line: 1495, type: !766, isLocal: false, isDefinition: true, scopeLine: 1497, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!766 = !DISubroutineType(types: !767)
!767 = !{null, !162, !311}
!768 = distinct !DISubprogram(name: "XML_SetXmlDeclHandler", scope: !1, file: !1, line: 1502, type: !769, isLocal: false, isDefinition: true, scopeLine: 1503, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!769 = !DISubroutineType(types: !770)
!770 = !{null, !162, !316}
!771 = distinct !DISubprogram(name: "XML_SetParamEntityParsing", scope: !1, file: !1, line: 1508, type: !772, isLocal: false, isDefinition: true, scopeLine: 1510, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!772 = !DISubroutineType(types: !773)
!773 = !{!223, !162, !78}
!774 = distinct !DISubprogram(name: "XML_SetHashSalt", scope: !1, file: !1, line: 1523, type: !775, isLocal: false, isDefinition: true, scopeLine: 1525, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!775 = !DISubroutineType(types: !776)
!776 = !{!223, !162, !182}
!777 = distinct !DISubprogram(name: "XML_Parse", scope: !1, file: !1, line: 1534, type: !778, isLocal: false, isDefinition: true, scopeLine: 1535, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!778 = !DISubroutineType(types: !779)
!779 = !{!73, !162, !192, !223, !223}
!780 = distinct !DISubprogram(name: "XML_ParseBuffer", scope: !1, file: !1, line: 1657, type: !781, isLocal: false, isDefinition: true, scopeLine: 1658, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!781 = !DISubroutineType(types: !782)
!782 = !{!73, !162, !223, !223}
!783 = distinct !DISubprogram(name: "XML_GetBuffer", scope: !1, file: !1, line: 1713, type: !784, isLocal: false, isDefinition: true, scopeLine: 1714, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!784 = !DISubroutineType(types: !785)
!785 = !{!161, !162, !223}
!786 = distinct !DISubprogram(name: "XML_StopParser", scope: !1, file: !1, line: 1809, type: !787, isLocal: false, isDefinition: true, scopeLine: 1810, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!787 = !DISubroutineType(types: !788)
!788 = !{!73, !162, !159}
!789 = distinct !DISubprogram(name: "XML_ResumeParser", scope: !1, file: !1, line: 1839, type: !790, isLocal: false, isDefinition: true, scopeLine: 1840, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!790 = !DISubroutineType(types: !791)
!791 = !{!73, !162}
!792 = distinct !DISubprogram(name: "XML_GetParsingStatus", scope: !1, file: !1, line: 1877, type: !793, isLocal: false, isDefinition: true, scopeLine: 1878, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!793 = !DISubroutineType(types: !794)
!794 = !{null, !162, !795}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64, align: 64)
!796 = distinct !DISubprogram(name: "XML_GetErrorCode", scope: !1, file: !1, line: 1884, type: !797, isLocal: false, isDefinition: true, scopeLine: 1885, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!797 = !DISubroutineType(types: !798)
!798 = !{!24, !162}
!799 = distinct !DISubprogram(name: "XML_GetCurrentByteIndex", scope: !1, file: !1, line: 1890, type: !800, isLocal: false, isDefinition: true, scopeLine: 1891, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!800 = !DISubroutineType(types: !801)
!801 = !{!197, !162}
!802 = distinct !DISubprogram(name: "XML_GetCurrentByteCount", scope: !1, file: !1, line: 1898, type: !688, isLocal: false, isDefinition: true, scopeLine: 1899, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!803 = distinct !DISubprogram(name: "XML_GetInputContext", scope: !1, file: !1, line: 1906, type: !804, isLocal: false, isDefinition: true, scopeLine: 1907, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!804 = !DISubroutineType(types: !805)
!805 = !{!192, !162, !591, !591}
!806 = distinct !DISubprogram(name: "XML_GetCurrentLineNumber", scope: !1, file: !1, line: 1919, type: !807, isLocal: false, isDefinition: true, scopeLine: 1920, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!807 = !DISubroutineType(types: !808)
!808 = !{!378, !162}
!809 = distinct !DISubprogram(name: "XML_GetCurrentColumnNumber", scope: !1, file: !1, line: 1929, type: !807, isLocal: false, isDefinition: true, scopeLine: 1930, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!810 = distinct !DISubprogram(name: "XML_FreeContentModel", scope: !1, file: !1, line: 1939, type: !811, isLocal: false, isDefinition: true, scopeLine: 1940, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!811 = !DISubroutineType(types: !812)
!812 = !{null, !162, !295}
!813 = distinct !DISubprogram(name: "XML_MemMalloc", scope: !1, file: !1, line: 1945, type: !814, isLocal: false, isDefinition: true, scopeLine: 1946, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!814 = !DISubroutineType(types: !815)
!815 = !{!161, !162, !180}
!816 = distinct !DISubprogram(name: "XML_MemRealloc", scope: !1, file: !1, line: 1951, type: !817, isLocal: false, isDefinition: true, scopeLine: 1952, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!817 = !DISubroutineType(types: !818)
!818 = !{!161, !162, !161, !180}
!819 = distinct !DISubprogram(name: "XML_MemFree", scope: !1, file: !1, line: 1957, type: !681, isLocal: false, isDefinition: true, scopeLine: 1958, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!820 = distinct !DISubprogram(name: "XML_DefaultCurrent", scope: !1, file: !1, line: 1963, type: !671, isLocal: false, isDefinition: true, scopeLine: 1964, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!821 = distinct !DISubprogram(name: "XML_ErrorString", scope: !1, file: !1, line: 1977, type: !822, isLocal: false, isDefinition: true, scopeLine: 1978, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!822 = !DISubroutineType(types: !823)
!823 = !{!824, !24}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64, align: 64)
!825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !826)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_LChar", file: !198, line: 111, baseType: !170)
!827 = distinct !DISubprogram(name: "XML_ExpatVersion", scope: !1, file: !1, line: 2028, type: !828, isLocal: false, isDefinition: true, scopeLine: 2028, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!828 = !DISubroutineType(types: !829)
!829 = !{!824}
!830 = distinct !DISubprogram(name: "XML_ExpatVersionInfo", scope: !1, file: !1, line: 2048, type: !831, isLocal: false, isDefinition: true, scopeLine: 2049, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!831 = !DISubroutineType(types: !832)
!832 = !{!833}
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Expat_Version", file: !4, line: 1003, baseType: !834)
!834 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 999, size: 96, align: 32, elements: !835)
!835 = !{!836, !837, !838}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !834, file: !4, line: 1000, baseType: !223, size: 32, align: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !834, file: !4, line: 1001, baseType: !223, size: 32, align: 32, offset: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "micro", scope: !834, file: !4, line: 1002, baseType: !223, size: 32, align: 32, offset: 64)
!839 = distinct !DISubprogram(name: "XML_GetFeatureList", scope: !1, file: !1, line: 2060, type: !840, isLocal: false, isDefinition: true, scopeLine: 2061, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!840 = !DISubroutineType(types: !841)
!841 = !{!842}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64, align: 64)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Feature", file: !4, line: 1031, baseType: !845)
!845 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 1027, size: 192, align: 64, elements: !846)
!846 = !{!847, !848, !849}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "feature", scope: !845, file: !4, line: 1028, baseType: !83, size: 32, align: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !845, file: !4, line: 1029, baseType: !824, size: 64, align: 64, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !845, file: !4, line: 1030, baseType: !199, size: 64, align: 64, offset: 128)
!850 = distinct !DISubprogram(name: "parserCreate", scope: !1, file: !1, line: 759, type: !851, isLocal: true, isDefinition: true, scopeLine: 763, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!851 = !DISubroutineType(types: !852)
!852 = !{!162, !210, !543, !210, !523}
!853 = distinct !DISubprogram(name: "dtdCreate", scope: !1, file: !1, line: 5699, type: !854, isLocal: true, isDefinition: true, scopeLine: 5700, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!854 = !DISubroutineType(types: !855)
!855 = !{!523, !543}
!856 = distinct !DISubprogram(name: "hashTableInit", scope: !1, file: !1, line: 6123, type: !857, isLocal: true, isDefinition: true, scopeLine: 6124, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!857 = !DISubroutineType(types: !858)
!858 = !{null, !859, !543}
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64, align: 64)
!860 = distinct !DISubprogram(name: "poolInit", scope: !1, file: !1, line: 6151, type: !861, isLocal: true, isDefinition: true, scopeLine: 6152, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!861 = !DISubroutineType(types: !862)
!862 = !{null, !863, !543}
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64, align: 64)
!864 = distinct !DISubprogram(name: "moveToFreeBindingList", scope: !1, file: !1, line: 948, type: !865, isLocal: true, isDefinition: true, scopeLine: 949, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !162, !483}
!867 = distinct !DISubprogram(name: "parserInit", scope: !1, file: !1, line: 874, type: !868, isLocal: true, isDefinition: true, scopeLine: 875, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !162, !210}
!870 = distinct !DISubprogram(name: "prologInitProcessor", scope: !1, file: !1, line: 3598, type: !427, isLocal: true, isDefinition: true, scopeLine: 3602, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!871 = distinct !DISubprogram(name: "initializeEncoding", scope: !1, file: !1, line: 3441, type: !797, isLocal: true, isDefinition: true, scopeLine: 3442, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!872 = distinct !DISubprogram(name: "handleUnknownEncoding", scope: !1, file: !1, line: 3559, type: !873, isLocal: true, isDefinition: true, scopeLine: 3560, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!873 = !DISubroutineType(types: !874)
!874 = !{!24, !162, !210}
!875 = distinct !DISubprogram(name: "prologProcessor", scope: !1, file: !1, line: 3783, type: !427, isLocal: true, isDefinition: true, scopeLine: 3787, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!876 = distinct !DISubprogram(name: "doProlog", scope: !1, file: !1, line: 3795, type: !877, isLocal: true, isDefinition: true, scopeLine: 3803, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!877 = !DISubroutineType(types: !878)
!878 = !{!24, !162, !321, !192, !192, !223, !192, !332, !159}
!879 = distinct !DISubprogram(name: "processXmlDecl", scope: !1, file: !1, line: 3470, type: !880, isLocal: true, isDefinition: true, scopeLine: 3472, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!880 = !DISubroutineType(types: !881)
!881 = !{!24, !162, !223, !192, !192}
!882 = distinct !DISubprogram(name: "poolStoreString", scope: !1, file: !1, line: 6252, type: !883, isLocal: true, isDefinition: true, scopeLine: 6254, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!883 = !DISubroutineType(types: !884)
!884 = !{!202, !863, !321, !192, !192}
!885 = distinct !DISubprogram(name: "normalizePublicId", scope: !1, file: !1, line: 5677, type: !886, isLocal: true, isDefinition: true, scopeLine: 5678, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!886 = !DISubroutineType(types: !887)
!887 = !{null, !202}
!888 = distinct !DISubprogram(name: "contentProcessor", scope: !1, file: !1, line: 2149, type: !427, isLocal: true, isDefinition: true, scopeLine: 2153, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!889 = distinct !DISubprogram(name: "doContent", scope: !1, file: !1, line: 2280, type: !890, isLocal: true, isDefinition: true, scopeLine: 2287, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!890 = !DISubroutineType(types: !891)
!891 = !{!24, !162, !223, !321, !192, !192, !332, !159}
!892 = distinct !DISubprogram(name: "processInternalEntity", scope: !1, file: !1, line: 4846, type: !893, isLocal: true, isDefinition: true, scopeLine: 4848, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!893 = !DISubroutineType(types: !894)
!894 = !{!24, !162, !443, !159}
!895 = distinct !DISubprogram(name: "internalEntityProcessor", scope: !1, file: !1, line: 4903, type: !427, isLocal: true, isDefinition: true, scopeLine: 4907, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!896 = distinct !DISubprogram(name: "getContext", scope: !1, file: !1, line: 5547, type: !685, isLocal: true, isDefinition: true, scopeLine: 5548, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!897 = distinct !DISubprogram(name: "hashTableIterInit", scope: !1, file: !1, line: 6133, type: !898, isLocal: true, isDefinition: true, scopeLine: 6134, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!898 = !DISubroutineType(types: !899)
!899 = !{null, !900, !906}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "HASH_TABLE_ITER", file: !1, line: 140, baseType: !902)
!902 = !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 137, size: 128, align: 64, elements: !903)
!903 = !{!904, !905}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !902, file: !1, line: 138, baseType: !532, size: 64, align: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !902, file: !1, line: 139, baseType: !532, size: 64, align: 64, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!908 = distinct !DISubprogram(name: "hashTableIterNext", scope: !1, file: !1, line: 6140, type: !909, isLocal: true, isDefinition: true, scopeLine: 6141, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!909 = !DISubroutineType(types: !910)
!910 = !{!533, !900}
!911 = distinct !DISubprogram(name: "storeAtts", scope: !1, file: !1, line: 2747, type: !912, isLocal: true, isDefinition: true, scopeLine: 2750, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!912 = !DISubroutineType(types: !913)
!913 = !{!24, !162, !321, !192, !914, !915}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64, align: 64)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64, align: 64)
!916 = distinct !DISubprogram(name: "setElementTypePrefix", scope: !1, file: !1, line: 5452, type: !917, isLocal: true, isDefinition: true, scopeLine: 5453, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!917 = !DISubroutineType(types: !918)
!918 = !{!223, !162, !471}
!919 = distinct !DISubprogram(name: "addBinding", scope: !1, file: !1, line: 3101, type: !920, isLocal: true, isDefinition: true, scopeLine: 3103, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!920 = !DISubroutineType(types: !921)
!921 = !{!24, !162, !477, !505, !210, !915}
!922 = distinct !DISubprogram(name: "epilogProcessor", scope: !1, file: !1, line: 4779, type: !427, isLocal: true, isDefinition: true, scopeLine: 4783, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!923 = distinct !DISubprogram(name: "doCdataSection", scope: !1, file: !1, line: 3244, type: !924, isLocal: true, isDefinition: true, scopeLine: 3250, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!924 = !DISubroutineType(types: !925)
!925 = !{!24, !162, !321, !332, !192, !332, !159}
!926 = distinct !DISubprogram(name: "cdataSectionProcessor", scope: !1, file: !1, line: 3218, type: !427, isLocal: true, isDefinition: true, scopeLine: 3222, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!927 = distinct !DISubprogram(name: "externalEntityContentProcessor", scope: !1, file: !1, line: 2265, type: !427, isLocal: true, isDefinition: true, scopeLine: 2269, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!928 = distinct !DISubprogram(name: "storeRawNames", scope: !1, file: !1, line: 2104, type: !929, isLocal: true, isDefinition: true, scopeLine: 2105, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!929 = !DISubroutineType(types: !930)
!930 = !{!159, !162}
!931 = distinct !DISubprogram(name: "getElementType", scope: !1, file: !1, line: 6444, type: !932, isLocal: true, isDefinition: true, scopeLine: 6448, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!932 = !DISubroutineType(types: !933)
!933 = !{!471, !162, !321, !192, !192}
!934 = distinct !DISubprogram(name: "getAttributeId", scope: !1, file: !1, line: 5482, type: !935, isLocal: true, isDefinition: true, scopeLine: 5484, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!935 = !DISubroutineType(types: !936)
!936 = !{!519, !162, !321, !192, !192}
!937 = distinct !DISubprogram(name: "poolAppendString", scope: !1, file: !1, line: 6241, type: !938, isLocal: true, isDefinition: true, scopeLine: 6242, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!938 = !DISubroutineType(types: !939)
!939 = !{!210, !863, !210}
!940 = distinct !DISubprogram(name: "poolAppend", scope: !1, file: !1, line: 6199, type: !883, isLocal: true, isDefinition: true, scopeLine: 6201, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!941 = distinct !DISubprogram(name: "defineAttribute", scope: !1, file: !1, line: 5408, type: !942, isLocal: true, isDefinition: true, scopeLine: 5410, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!942 = !DISubroutineType(types: !943)
!943 = !{!223, !471, !519, !159, !159, !210, !162}
!944 = distinct !DISubprogram(name: "poolGrow", scope: !1, file: !1, line: 6264, type: !945, isLocal: true, isDefinition: true, scopeLine: 6265, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!945 = !DISubroutineType(types: !946)
!946 = !{!159, !863}
!947 = distinct !DISubprogram(name: "storeAttributeValue", scope: !1, file: !1, line: 4973, type: !948, isLocal: true, isDefinition: true, scopeLine: 4976, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!948 = !DISubroutineType(types: !949)
!949 = !{!24, !162, !321, !159, !192, !192, !863}
!950 = distinct !DISubprogram(name: "appendAttributeValue", scope: !1, file: !1, line: 4989, type: !948, isLocal: true, isDefinition: true, scopeLine: 4992, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!951 = distinct !DISubprogram(name: "storeEntityValue", scope: !1, file: !1, line: 5139, type: !952, isLocal: true, isDefinition: true, scopeLine: 5143, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!952 = !DISubroutineType(types: !953)
!953 = !{!24, !162, !321, !192, !192}
!954 = distinct !DISubprogram(name: "lookup", scope: !1, file: !1, line: 6024, type: !955, isLocal: true, isDefinition: true, scopeLine: 6025, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!955 = !DISubroutineType(types: !956)
!956 = !{!533, !162, !859, !538, !180}
!957 = distinct !DISubprogram(name: "hash", scope: !1, file: !1, line: 6015, type: !958, isLocal: true, isDefinition: true, scopeLine: 6016, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!958 = !DISubroutineType(types: !959)
!959 = !{!182, !162, !538}
!960 = distinct !DISubprogram(name: "keyeq", scope: !1, file: !1, line: 6006, type: !961, isLocal: true, isDefinition: true, scopeLine: 6007, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!961 = !DISubroutineType(types: !962)
!962 = !{!159, !538, !538}
!963 = distinct !DISubprogram(name: "nextScaffoldPart", scope: !1, file: !1, line: 6337, type: !688, isLocal: true, isDefinition: true, scopeLine: 6338, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!964 = distinct !DISubprogram(name: "build_model", scope: !1, file: !1, line: 6423, type: !965, isLocal: true, isDefinition: true, scopeLine: 6424, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!965 = !DISubroutineType(types: !966)
!966 = !{!295, !162}
!967 = distinct !DISubprogram(name: "build_node", scope: !1, file: !1, line: 6385, type: !968, isLocal: true, isDefinition: true, scopeLine: 6390, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !162, !223, !295, !970, !971}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64, align: 64)
!972 = distinct !DISubprogram(name: "reportProcessingInstruction", scope: !1, file: !1, line: 5328, type: !973, isLocal: true, isDefinition: true, scopeLine: 5330, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!973 = !DISubroutineType(types: !974)
!974 = !{!223, !162, !321, !192, !192}
!975 = distinct !DISubprogram(name: "normalizeLines", scope: !1, file: !1, line: 5305, type: !886, isLocal: true, isDefinition: true, scopeLine: 5306, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!976 = distinct !DISubprogram(name: "reportComment", scope: !1, file: !1, line: 5357, type: !973, isLocal: true, isDefinition: true, scopeLine: 5359, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!977 = distinct !DISubprogram(name: "destroyBindings", scope: !1, file: !1, line: 1151, type: !978, isLocal: true, isDefinition: true, scopeLine: 1152, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !483, !162}
!980 = distinct !DISubprogram(name: "startParsing", scope: !1, file: !1, line: 736, type: !929, isLocal: true, isDefinition: true, scopeLine: 737, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!981 = distinct !DISubprogram(name: "generate_hash_secret_salt", scope: !1, file: !1, line: 720, type: !982, isLocal: true, isDefinition: true, scopeLine: 721, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!982 = !DISubroutineType(types: !983)
!983 = !{!182, !162}
!984 = distinct !DISubprogram(name: "gather_time_entropy", scope: !1, file: !1, line: 701, type: !985, isLocal: true, isDefinition: true, scopeLine: 702, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!985 = !DISubroutineType(types: !986)
!986 = !{!182}
!987 = distinct !DISubprogram(name: "externalEntityInitProcessor", scope: !1, file: !1, line: 2164, type: !427, isLocal: true, isDefinition: true, scopeLine: 2168, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!988 = distinct !DISubprogram(name: "externalEntityInitProcessor2", scope: !1, file: !1, line: 2177, type: !427, isLocal: true, isDefinition: true, scopeLine: 2181, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!989 = distinct !DISubprogram(name: "externalEntityInitProcessor3", scope: !1, file: !1, line: 2217, type: !427, isLocal: true, isDefinition: true, scopeLine: 2221, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!990 = distinct !DISubprogram(name: "errorProcessor", scope: !1, file: !1, line: 4964, type: !427, isLocal: true, isDefinition: true, scopeLine: 4968, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!991 = distinct !DISubprogram(name: "reportDefault", scope: !1, file: !1, line: 5379, type: !992, isLocal: true, isDefinition: true, scopeLine: 5381, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !162, !321, !192, !192}
!994 = distinct !DISubprogram(name: "setContext", scope: !1, file: !1, line: 5616, type: !662, isLocal: true, isDefinition: true, scopeLine: 5617, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!995 = distinct !DISubprogram(name: "dtdReset", scope: !1, file: !1, line: 5732, type: !996, isLocal: true, isDefinition: true, scopeLine: 5733, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!996 = !DISubroutineType(types: !997)
!997 = !{null, !523, !543}
!998 = distinct !DISubprogram(name: "hashTableClear", scope: !1, file: !1, line: 6103, type: !999, isLocal: true, isDefinition: true, scopeLine: 6104, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!999 = !DISubroutineType(types: !1000)
!1000 = !{null, !859}
!1001 = distinct !DISubprogram(name: "dtdDestroy", scope: !1, file: !1, line: 5774, type: !1002, isLocal: true, isDefinition: true, scopeLine: 5775, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{null, !523, !159, !543}
!1004 = distinct !DISubprogram(name: "hashTableDestroy", scope: !1, file: !1, line: 6114, type: !999, isLocal: true, isDefinition: true, scopeLine: 6115, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1005 = distinct !DISubprogram(name: "dtdCopy", scope: !1, file: !1, line: 5805, type: !1006, isLocal: true, isDefinition: true, scopeLine: 5806, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!223, !162, !523, !1008, !543}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64, align: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!1010 = distinct !DISubprogram(name: "copyEntityTable", scope: !1, file: !1, line: 5937, type: !1011, isLocal: true, isDefinition: true, scopeLine: 5941, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!223, !162, !859, !863, !906}
!1013 = distinct !DISubprogram(name: "poolCopyStringN", scope: !1, file: !1, line: 6227, type: !1014, isLocal: true, isDefinition: true, scopeLine: 6228, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!210, !863, !210, !223}
!1016 = distinct !DISubprogram(name: "poolClear", scope: !1, file: !1, line: 6162, type: !1017, isLocal: true, isDefinition: true, scopeLine: 6163, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{null, !863}
!1019 = distinct !DISubprogram(name: "poolDestroy", scope: !1, file: !1, line: 6182, type: !1017, isLocal: true, isDefinition: true, scopeLine: 6183, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1020 = distinct !DISubprogram(name: "poolCopyString", scope: !1, file: !1, line: 6215, type: !938, isLocal: true, isDefinition: true, scopeLine: 6216, flags: DIFlagPrototyped, isOptimized: false, variables: !654)
!1021 = !{!1022, !1027, !1031, !1035, !1037, !1038, !1042, !1043, !1047, !1051, !1052, !1056, !1058, !1059, !1063, !1065, !1069, !1070}
!1022 = !DIGlobalVariable(name: "message", scope: !821, file: !1, line: 1979, type: !1023, isLocal: true, isDefinition: true, variable: [41 x i8*]* @XML_ErrorString.message)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1024, size: 2624, align: 64, elements: !1025)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !824)
!1025 = !{!1026}
!1026 = !DISubrange(count: 41)
!1027 = !DIGlobalVariable(name: "features", scope: !839, file: !1, line: 2062, type: !1028, isLocal: true, isDefinition: true, variable: [4 x %struct.XML_Feature]* @XML_GetFeatureList.features)
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !843, size: 768, align: 64, elements: !1029)
!1029 = !{!1030}
!1030 = !DISubrange(count: 4)
!1031 = !DIGlobalVariable(name: "atypeCDATA", scope: !876, file: !1, line: 3807, type: !1032, isLocal: true, isDefinition: true, variable: [6 x i8]* @doProlog.atypeCDATA)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 48, align: 8, elements: !1033)
!1033 = !{!1034}
!1034 = !DISubrange(count: 6)
!1035 = !DIGlobalVariable(name: "atypeID", scope: !876, file: !1, line: 3809, type: !1036, isLocal: true, isDefinition: true, variable: [3 x i8]* @doProlog.atypeID)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 24, align: 8, elements: !333)
!1037 = !DIGlobalVariable(name: "atypeIDREF", scope: !876, file: !1, line: 3810, type: !1032, isLocal: true, isDefinition: true, variable: [6 x i8]* @doProlog.atypeIDREF)
!1038 = !DIGlobalVariable(name: "atypeIDREFS", scope: !876, file: !1, line: 3812, type: !1039, isLocal: true, isDefinition: true, variable: [7 x i8]* @doProlog.atypeIDREFS)
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 56, align: 8, elements: !1040)
!1040 = !{!1041}
!1041 = !DISubrange(count: 7)
!1042 = !DIGlobalVariable(name: "atypeENTITY", scope: !876, file: !1, line: 3814, type: !1039, isLocal: true, isDefinition: true, variable: [7 x i8]* @doProlog.atypeENTITY)
!1043 = !DIGlobalVariable(name: "atypeENTITIES", scope: !876, file: !1, line: 3816, type: !1044, isLocal: true, isDefinition: true, variable: [9 x i8]* @doProlog.atypeENTITIES)
!1044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 72, align: 8, elements: !1045)
!1045 = !{!1046}
!1046 = !DISubrange(count: 9)
!1047 = !DIGlobalVariable(name: "atypeNMTOKEN", scope: !876, file: !1, line: 3818, type: !1048, isLocal: true, isDefinition: true, variable: [8 x i8]* @doProlog.atypeNMTOKEN)
!1048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 64, align: 8, elements: !1049)
!1049 = !{!1050}
!1050 = !DISubrange(count: 8)
!1051 = !DIGlobalVariable(name: "atypeNMTOKENS", scope: !876, file: !1, line: 3820, type: !1044, isLocal: true, isDefinition: true, variable: [9 x i8]* @doProlog.atypeNMTOKENS)
!1052 = !DIGlobalVariable(name: "notationPrefix", scope: !876, file: !1, line: 3822, type: !1053, isLocal: true, isDefinition: true, variable: [10 x i8]* @doProlog.notationPrefix)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 80, align: 8, elements: !1054)
!1054 = !{!1055}
!1055 = !DISubrange(count: 10)
!1056 = !DIGlobalVariable(name: "enumValueSep", scope: !876, file: !1, line: 3824, type: !1057, isLocal: true, isDefinition: true, variable: [2 x i8]* @doProlog.enumValueSep)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 16, align: 8, elements: !337)
!1058 = !DIGlobalVariable(name: "enumValueStart", scope: !876, file: !1, line: 3825, type: !1057, isLocal: true, isDefinition: true, variable: [2 x i8]* @doProlog.enumValueStart)
!1059 = !DIGlobalVariable(name: "xmlNamespace", scope: !919, file: !1, line: 3104, type: !1060, isLocal: true, isDefinition: true, variable: [37 x i8]* @addBinding.xmlNamespace)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 296, align: 8, elements: !1061)
!1061 = !{!1062}
!1062 = !DISubrange(count: 37)
!1063 = !DIGlobalVariable(name: "xmlLen", scope: !919, file: !1, line: 3112, type: !1064, isLocal: true, isDefinition: true, variable: i32* @addBinding.xmlLen)
!1064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!1065 = !DIGlobalVariable(name: "xmlnsNamespace", scope: !919, file: !1, line: 3114, type: !1066, isLocal: true, isDefinition: true, variable: [30 x i8]* @addBinding.xmlnsNamespace)
!1066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 240, align: 8, elements: !1067)
!1067 = !{!1068}
!1068 = !DISubrange(count: 30)
!1069 = !DIGlobalVariable(name: "xmlnsLen", scope: !919, file: !1, line: 3121, type: !1064, isLocal: true, isDefinition: true, variable: i32* @addBinding.xmlnsLen)
!1070 = !DIGlobalVariable(name: "implicitContext", scope: !0, file: !1, line: 691, type: !1071, isLocal: true, isDefinition: true, variable: [41 x i8]* @implicitContext)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 328, align: 8, elements: !1025)
!1072 = !{i32 2, !"Dwarf Version", i32 4}
!1073 = !{i32 2, !"Debug Info Version", i32 3}
!1074 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!1075 = !DILocalVariable(name: "encodingName", arg: 1, scope: !651, file: !1, line: 678, type: !210)
!1076 = !DIExpression()
!1077 = !DILocation(line: 678, column: 34, scope: !651)
!1078 = !DILocation(line: 680, column: 30, scope: !651)
!1079 = !DILocation(line: 680, column: 10, scope: !651)
!1080 = !DILocation(line: 680, column: 3, scope: !651)
!1081 = !DILocalVariable(name: "encodingName", arg: 1, scope: !658, file: !1, line: 751, type: !210)
!1082 = !DILocation(line: 751, column: 37, scope: !658)
!1083 = !DILocalVariable(name: "memsuite", arg: 2, scope: !658, file: !1, line: 752, type: !543)
!1084 = !DILocation(line: 752, column: 54, scope: !658)
!1085 = !DILocalVariable(name: "nameSep", arg: 3, scope: !658, file: !1, line: 753, type: !210)
!1086 = !DILocation(line: 753, column: 37, scope: !658)
!1087 = !DILocation(line: 755, column: 23, scope: !658)
!1088 = !DILocation(line: 755, column: 37, scope: !658)
!1089 = !DILocation(line: 755, column: 47, scope: !658)
!1090 = !DILocation(line: 755, column: 10, scope: !658)
!1091 = !DILocation(line: 755, column: 3, scope: !658)
!1092 = !DILocalVariable(name: "encodingName", arg: 1, scope: !655, file: !1, line: 684, type: !210)
!1093 = !DILocation(line: 684, column: 36, scope: !655)
!1094 = !DILocalVariable(name: "nsSep", arg: 2, scope: !655, file: !1, line: 684, type: !203)
!1095 = !DILocation(line: 684, column: 59, scope: !655)
!1096 = !DILocalVariable(name: "tmp", scope: !655, file: !1, line: 686, type: !1097)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 16, align: 8, elements: !337)
!1098 = !DILocation(line: 686, column: 12, scope: !655)
!1099 = !DILocation(line: 687, column: 10, scope: !655)
!1100 = !DILocation(line: 687, column: 3, scope: !655)
!1101 = !DILocation(line: 687, column: 8, scope: !655)
!1102 = !DILocation(line: 688, column: 30, scope: !655)
!1103 = !DILocation(line: 688, column: 50, scope: !655)
!1104 = !DILocation(line: 688, column: 10, scope: !655)
!1105 = !DILocation(line: 688, column: 3, scope: !655)
!1106 = !DILocalVariable(name: "encodingName", arg: 1, scope: !850, file: !1, line: 759, type: !210)
!1107 = !DILocation(line: 759, column: 30, scope: !850)
!1108 = !DILocalVariable(name: "memsuite", arg: 2, scope: !850, file: !1, line: 760, type: !543)
!1109 = !DILocation(line: 760, column: 47, scope: !850)
!1110 = !DILocalVariable(name: "nameSep", arg: 3, scope: !850, file: !1, line: 761, type: !210)
!1111 = !DILocation(line: 761, column: 30, scope: !850)
!1112 = !DILocalVariable(name: "dtd", arg: 4, scope: !850, file: !1, line: 762, type: !523)
!1113 = !DILocation(line: 762, column: 19, scope: !850)
!1114 = !DILocalVariable(name: "parser", scope: !850, file: !1, line: 764, type: !162)
!1115 = !DILocation(line: 764, column: 14, scope: !850)
!1116 = !DILocation(line: 766, column: 7, scope: !1117)
!1117 = distinct !DILexicalBlock(scope: !850, file: !1, line: 766, column: 7)
!1118 = !DILocation(line: 766, column: 7, scope: !850)
!1119 = !DILocalVariable(name: "mtemp", scope: !1120, file: !1, line: 767, type: !646)
!1120 = distinct !DILexicalBlock(scope: !1117, file: !1, line: 766, column: 17)
!1121 = !DILocation(line: 767, column: 32, scope: !1120)
!1122 = !DILocation(line: 769, column: 7, scope: !1120)
!1123 = !DILocation(line: 769, column: 17, scope: !1120)
!1124 = !DILocation(line: 768, column: 14, scope: !1120)
!1125 = !DILocation(line: 768, column: 12, scope: !1120)
!1126 = !DILocation(line: 770, column: 9, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1120, file: !1, line: 770, column: 9)
!1128 = !DILocation(line: 770, column: 16, scope: !1127)
!1129 = !DILocation(line: 770, column: 9, scope: !1120)
!1130 = !DILocation(line: 771, column: 46, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1127, file: !1, line: 770, column: 25)
!1132 = !DILocation(line: 771, column: 54, scope: !1131)
!1133 = !DILocation(line: 771, column: 13, scope: !1131)
!1134 = !DILocation(line: 772, column: 27, scope: !1131)
!1135 = !DILocation(line: 772, column: 37, scope: !1131)
!1136 = !DILocation(line: 772, column: 7, scope: !1131)
!1137 = !DILocation(line: 772, column: 14, scope: !1131)
!1138 = !DILocation(line: 772, column: 25, scope: !1131)
!1139 = !DILocation(line: 773, column: 28, scope: !1131)
!1140 = !DILocation(line: 773, column: 38, scope: !1131)
!1141 = !DILocation(line: 773, column: 7, scope: !1131)
!1142 = !DILocation(line: 773, column: 14, scope: !1131)
!1143 = !DILocation(line: 773, column: 26, scope: !1131)
!1144 = !DILocation(line: 774, column: 25, scope: !1131)
!1145 = !DILocation(line: 774, column: 35, scope: !1131)
!1146 = !DILocation(line: 774, column: 7, scope: !1131)
!1147 = !DILocation(line: 774, column: 14, scope: !1131)
!1148 = !DILocation(line: 774, column: 23, scope: !1131)
!1149 = !DILocation(line: 775, column: 5, scope: !1131)
!1150 = !DILocation(line: 776, column: 3, scope: !1120)
!1151 = !DILocalVariable(name: "mtemp", scope: !1152, file: !1, line: 778, type: !646)
!1152 = distinct !DILexicalBlock(scope: !1117, file: !1, line: 777, column: 8)
!1153 = !DILocation(line: 778, column: 32, scope: !1152)
!1154 = !DILocation(line: 779, column: 26, scope: !1152)
!1155 = !DILocation(line: 779, column: 14, scope: !1152)
!1156 = !DILocation(line: 779, column: 12, scope: !1152)
!1157 = !DILocation(line: 780, column: 9, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !1152, file: !1, line: 780, column: 9)
!1159 = !DILocation(line: 780, column: 16, scope: !1158)
!1160 = !DILocation(line: 780, column: 9, scope: !1152)
!1161 = !DILocation(line: 781, column: 46, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1158, file: !1, line: 780, column: 25)
!1163 = !DILocation(line: 781, column: 54, scope: !1162)
!1164 = !DILocation(line: 781, column: 13, scope: !1162)
!1165 = !DILocation(line: 782, column: 7, scope: !1162)
!1166 = !DILocation(line: 782, column: 14, scope: !1162)
!1167 = !DILocation(line: 782, column: 25, scope: !1162)
!1168 = !DILocation(line: 783, column: 7, scope: !1162)
!1169 = !DILocation(line: 783, column: 14, scope: !1162)
!1170 = !DILocation(line: 783, column: 26, scope: !1162)
!1171 = !DILocation(line: 784, column: 7, scope: !1162)
!1172 = !DILocation(line: 784, column: 14, scope: !1162)
!1173 = !DILocation(line: 784, column: 23, scope: !1162)
!1174 = !DILocation(line: 785, column: 5, scope: !1162)
!1175 = !DILocation(line: 788, column: 8, scope: !1176)
!1176 = distinct !DILexicalBlock(scope: !850, file: !1, line: 788, column: 7)
!1177 = !DILocation(line: 788, column: 7, scope: !850)
!1178 = !DILocation(line: 789, column: 12, scope: !1176)
!1179 = !DILocation(line: 789, column: 5, scope: !1176)
!1180 = !DILocation(line: 791, column: 3, scope: !850)
!1181 = !DILocation(line: 791, column: 10, scope: !850)
!1182 = !DILocation(line: 792, column: 3, scope: !850)
!1183 = !DILocation(line: 792, column: 13, scope: !850)
!1184 = !DILocation(line: 794, column: 3, scope: !850)
!1185 = !DILocation(line: 794, column: 12, scope: !850)
!1186 = !DILocation(line: 795, column: 23, scope: !850)
!1187 = !DILocation(line: 795, column: 10, scope: !850)
!1188 = !DILocation(line: 795, column: 3, scope: !850)
!1189 = !DILocation(line: 795, column: 8, scope: !850)
!1190 = !DILocation(line: 796, column: 7, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !850, file: !1, line: 796, column: 7)
!1192 = !DILocation(line: 796, column: 12, scope: !1191)
!1193 = !DILocation(line: 796, column: 7, scope: !850)
!1194 = !DILocation(line: 797, column: 5, scope: !1195)
!1195 = distinct !DILexicalBlock(scope: !1191, file: !1, line: 796, column: 21)
!1196 = !DILocation(line: 798, column: 5, scope: !1195)
!1197 = !DILocation(line: 808, column: 25, scope: !850)
!1198 = !DILocation(line: 808, column: 3, scope: !850)
!1199 = !DILocation(line: 808, column: 11, scope: !850)
!1200 = !DILocation(line: 809, column: 7, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !850, file: !1, line: 809, column: 7)
!1202 = !DILocation(line: 809, column: 15, scope: !1201)
!1203 = !DILocation(line: 809, column: 7, scope: !850)
!1204 = !DILocation(line: 810, column: 5, scope: !1205)
!1205 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 809, column: 24)
!1206 = !DILocation(line: 814, column: 5, scope: !1205)
!1207 = !DILocation(line: 815, column: 5, scope: !1205)
!1208 = !DILocation(line: 817, column: 16, scope: !850)
!1209 = !DILocation(line: 817, column: 24, scope: !850)
!1210 = !DILocation(line: 817, column: 3, scope: !850)
!1211 = !DILocation(line: 817, column: 14, scope: !850)
!1212 = !DILocation(line: 819, column: 7, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !850, file: !1, line: 819, column: 7)
!1214 = !DILocation(line: 819, column: 7, scope: !850)
!1215 = !DILocation(line: 820, column: 12, scope: !1213)
!1216 = !DILocation(line: 820, column: 5, scope: !1213)
!1217 = !DILocation(line: 820, column: 10, scope: !1213)
!1218 = !DILocation(line: 822, column: 23, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1213, file: !1, line: 821, column: 8)
!1220 = !DILocation(line: 822, column: 31, scope: !1219)
!1221 = !DILocation(line: 822, column: 12, scope: !1219)
!1222 = !DILocation(line: 822, column: 5, scope: !1219)
!1223 = !DILocation(line: 822, column: 10, scope: !1219)
!1224 = !DILocation(line: 823, column: 9, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1219, file: !1, line: 823, column: 9)
!1226 = !DILocation(line: 823, column: 14, scope: !1225)
!1227 = !DILocation(line: 823, column: 9, scope: !1219)
!1228 = !DILocation(line: 824, column: 7, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1225, file: !1, line: 823, column: 23)
!1230 = !DILocation(line: 825, column: 7, scope: !1229)
!1231 = !DILocation(line: 829, column: 7, scope: !1229)
!1232 = !DILocation(line: 830, column: 7, scope: !1229)
!1233 = !DILocation(line: 834, column: 3, scope: !850)
!1234 = !DILocation(line: 834, column: 19, scope: !850)
!1235 = !DILocation(line: 835, column: 3, scope: !850)
!1236 = !DILocation(line: 835, column: 15, scope: !850)
!1237 = !DILocation(line: 836, column: 3, scope: !850)
!1238 = !DILocation(line: 836, column: 24, scope: !850)
!1239 = !DILocation(line: 838, column: 3, scope: !850)
!1240 = !DILocation(line: 838, column: 13, scope: !850)
!1241 = !DILocation(line: 839, column: 3, scope: !850)
!1242 = !DILocation(line: 839, column: 18, scope: !850)
!1243 = !DILocation(line: 841, column: 3, scope: !850)
!1244 = !DILocation(line: 841, column: 26, scope: !850)
!1245 = !DILocation(line: 842, column: 3, scope: !850)
!1246 = !DILocation(line: 842, column: 30, scope: !850)
!1247 = !DILocation(line: 844, column: 3, scope: !850)
!1248 = !DILocation(line: 844, column: 22, scope: !850)
!1249 = !DILocation(line: 845, column: 3, scope: !850)
!1250 = !DILocation(line: 845, column: 6, scope: !850)
!1251 = !DILocation(line: 846, column: 3, scope: !850)
!1252 = !DILocation(line: 846, column: 15, scope: !850)
!1253 = !DILocation(line: 848, column: 3, scope: !850)
!1254 = !DILocation(line: 848, column: 10, scope: !850)
!1255 = !DILocation(line: 849, column: 3, scope: !850)
!1256 = !DILocation(line: 849, column: 17, scope: !850)
!1257 = !DILocation(line: 850, column: 3, scope: !850)
!1258 = !DILocation(line: 850, column: 15, scope: !850)
!1259 = !DILocation(line: 852, column: 13, scope: !850)
!1260 = !DILocation(line: 852, column: 25, scope: !850)
!1261 = !DILocation(line: 852, column: 33, scope: !850)
!1262 = !DILocation(line: 852, column: 3, scope: !850)
!1263 = !DILocation(line: 853, column: 13, scope: !850)
!1264 = !DILocation(line: 853, column: 26, scope: !850)
!1265 = !DILocation(line: 853, column: 34, scope: !850)
!1266 = !DILocation(line: 853, column: 3, scope: !850)
!1267 = !DILocation(line: 854, column: 14, scope: !850)
!1268 = !DILocation(line: 854, column: 22, scope: !850)
!1269 = !DILocation(line: 854, column: 3, scope: !850)
!1270 = !DILocation(line: 856, column: 7, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !850, file: !1, line: 856, column: 7)
!1272 = !DILocation(line: 856, column: 20, scope: !1271)
!1273 = !DILocation(line: 856, column: 24, scope: !1274)
!1274 = !DILexicalBlockFile(scope: !1271, file: !1, discriminator: 1)
!1275 = !DILocation(line: 856, column: 7, scope: !1274)
!1276 = !DILocation(line: 857, column: 20, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1271, file: !1, line: 856, column: 46)
!1278 = !DILocation(line: 857, column: 5, scope: !1277)
!1279 = !DILocation(line: 858, column: 5, scope: !1277)
!1280 = !DILocation(line: 861, column: 7, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !850, file: !1, line: 861, column: 7)
!1282 = !DILocation(line: 861, column: 7, scope: !850)
!1283 = !DILocation(line: 862, column: 5, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1281, file: !1, line: 861, column: 16)
!1285 = !DILocation(line: 862, column: 8, scope: !1284)
!1286 = !DILocation(line: 863, column: 24, scope: !1284)
!1287 = !DILocation(line: 863, column: 5, scope: !1284)
!1288 = !DILocation(line: 863, column: 22, scope: !1284)
!1289 = !DILocation(line: 864, column: 27, scope: !1284)
!1290 = !DILocation(line: 864, column: 26, scope: !1284)
!1291 = !DILocation(line: 864, column: 5, scope: !1284)
!1292 = !DILocation(line: 864, column: 24, scope: !1284)
!1293 = !DILocation(line: 865, column: 3, scope: !1284)
!1294 = !DILocation(line: 867, column: 24, scope: !1295)
!1295 = distinct !DILexicalBlock(scope: !1281, file: !1, line: 866, column: 8)
!1296 = !DILocation(line: 867, column: 5, scope: !1295)
!1297 = !DILocation(line: 867, column: 22, scope: !1295)
!1298 = !DILocation(line: 870, column: 10, scope: !850)
!1299 = !DILocation(line: 870, column: 3, scope: !850)
!1300 = !DILocation(line: 871, column: 1, scope: !850)
!1301 = !DILocalVariable(name: "parser", arg: 1, scope: !661, file: !1, line: 959, type: !162)
!1302 = !DILocation(line: 959, column: 28, scope: !661)
!1303 = !DILocalVariable(name: "encodingName", arg: 2, scope: !661, file: !1, line: 959, type: !210)
!1304 = !DILocation(line: 959, column: 52, scope: !661)
!1305 = !DILocalVariable(name: "tStk", scope: !661, file: !1, line: 961, type: !594)
!1306 = !DILocation(line: 961, column: 8, scope: !661)
!1307 = !DILocalVariable(name: "openEntityList", scope: !661, file: !1, line: 962, type: !434)
!1308 = !DILocation(line: 962, column: 25, scope: !661)
!1309 = !DILocation(line: 963, column: 7, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !661, file: !1, line: 963, column: 7)
!1311 = !DILocation(line: 963, column: 7, scope: !661)
!1312 = !DILocation(line: 964, column: 5, scope: !1310)
!1313 = !DILocation(line: 966, column: 10, scope: !661)
!1314 = !DILocation(line: 966, column: 8, scope: !661)
!1315 = !DILocation(line: 967, column: 3, scope: !661)
!1316 = !DILocation(line: 967, column: 10, scope: !1317)
!1317 = !DILexicalBlockFile(scope: !661, file: !1, discriminator: 1)
!1318 = !DILocation(line: 967, column: 3, scope: !1317)
!1319 = !DILocalVariable(name: "tag", scope: !1320, file: !1, line: 968, type: !594)
!1320 = distinct !DILexicalBlock(scope: !661, file: !1, line: 967, column: 16)
!1321 = !DILocation(line: 968, column: 10, scope: !1320)
!1322 = !DILocation(line: 968, column: 16, scope: !1320)
!1323 = !DILocation(line: 969, column: 12, scope: !1320)
!1324 = !DILocation(line: 969, column: 18, scope: !1320)
!1325 = !DILocation(line: 969, column: 10, scope: !1320)
!1326 = !DILocation(line: 970, column: 19, scope: !1320)
!1327 = !DILocation(line: 970, column: 5, scope: !1320)
!1328 = !DILocation(line: 970, column: 10, scope: !1320)
!1329 = !DILocation(line: 970, column: 17, scope: !1320)
!1330 = !DILocation(line: 971, column: 27, scope: !1320)
!1331 = !DILocation(line: 971, column: 35, scope: !1320)
!1332 = !DILocation(line: 971, column: 40, scope: !1320)
!1333 = !DILocation(line: 971, column: 5, scope: !1320)
!1334 = !DILocation(line: 972, column: 5, scope: !1320)
!1335 = !DILocation(line: 972, column: 10, scope: !1320)
!1336 = !DILocation(line: 972, column: 19, scope: !1320)
!1337 = !DILocation(line: 973, column: 19, scope: !1320)
!1338 = !DILocation(line: 973, column: 5, scope: !1320)
!1339 = !DILocation(line: 973, column: 17, scope: !1320)
!1340 = !DILocation(line: 967, column: 3, scope: !1341)
!1341 = !DILexicalBlockFile(scope: !661, file: !1, discriminator: 2)
!1342 = !DILocation(line: 976, column: 20, scope: !661)
!1343 = !DILocation(line: 976, column: 18, scope: !661)
!1344 = !DILocation(line: 977, column: 3, scope: !661)
!1345 = !DILocation(line: 977, column: 10, scope: !1317)
!1346 = !DILocation(line: 977, column: 3, scope: !1317)
!1347 = !DILocalVariable(name: "openEntity", scope: !1348, file: !1, line: 978, type: !434)
!1348 = distinct !DILexicalBlock(scope: !661, file: !1, line: 977, column: 26)
!1349 = !DILocation(line: 978, column: 27, scope: !1348)
!1350 = !DILocation(line: 978, column: 40, scope: !1348)
!1351 = !DILocation(line: 979, column: 22, scope: !1348)
!1352 = !DILocation(line: 979, column: 34, scope: !1348)
!1353 = !DILocation(line: 979, column: 20, scope: !1348)
!1354 = !DILocation(line: 980, column: 24, scope: !1348)
!1355 = !DILocation(line: 980, column: 5, scope: !1348)
!1356 = !DILocation(line: 980, column: 17, scope: !1348)
!1357 = !DILocation(line: 980, column: 22, scope: !1348)
!1358 = !DILocation(line: 981, column: 28, scope: !1348)
!1359 = !DILocation(line: 981, column: 5, scope: !1348)
!1360 = !DILocation(line: 981, column: 26, scope: !1348)
!1361 = !DILocation(line: 977, column: 3, scope: !1341)
!1362 = !DILocation(line: 983, column: 25, scope: !661)
!1363 = !DILocation(line: 983, column: 33, scope: !661)
!1364 = !DILocation(line: 983, column: 3, scope: !661)
!1365 = !DILocation(line: 984, column: 3, scope: !661)
!1366 = !DILocation(line: 985, column: 7, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !661, file: !1, line: 985, column: 7)
!1368 = !DILocation(line: 985, column: 7, scope: !661)
!1369 = !DILocation(line: 986, column: 5, scope: !1367)
!1370 = !DILocation(line: 986, column: 28, scope: !1367)
!1371 = !DILocation(line: 987, column: 14, scope: !661)
!1372 = !DILocation(line: 987, column: 3, scope: !661)
!1373 = !DILocation(line: 988, column: 14, scope: !661)
!1374 = !DILocation(line: 988, column: 3, scope: !661)
!1375 = !DILocation(line: 989, column: 14, scope: !661)
!1376 = !DILocation(line: 989, column: 22, scope: !661)
!1377 = !DILocation(line: 989, column: 3, scope: !661)
!1378 = !DILocation(line: 990, column: 12, scope: !661)
!1379 = !DILocation(line: 990, column: 19, scope: !661)
!1380 = !DILocation(line: 990, column: 27, scope: !661)
!1381 = !DILocation(line: 990, column: 3, scope: !661)
!1382 = !DILocation(line: 991, column: 3, scope: !661)
!1383 = !DILocation(line: 992, column: 1, scope: !661)
!1384 = !DILocalVariable(name: "parser", arg: 1, scope: !864, file: !1, line: 948, type: !162)
!1385 = !DILocation(line: 948, column: 34, scope: !864)
!1386 = !DILocalVariable(name: "bindings", arg: 2, scope: !864, file: !1, line: 948, type: !483)
!1387 = !DILocation(line: 948, column: 51, scope: !864)
!1388 = !DILocation(line: 950, column: 3, scope: !864)
!1389 = !DILocation(line: 950, column: 10, scope: !1390)
!1390 = !DILexicalBlockFile(scope: !864, file: !1, discriminator: 1)
!1391 = !DILocation(line: 950, column: 3, scope: !1390)
!1392 = !DILocalVariable(name: "b", scope: !1393, file: !1, line: 951, type: !483)
!1393 = distinct !DILexicalBlock(scope: !864, file: !1, line: 950, column: 20)
!1394 = !DILocation(line: 951, column: 14, scope: !1393)
!1395 = !DILocation(line: 951, column: 18, scope: !1393)
!1396 = !DILocation(line: 952, column: 16, scope: !1393)
!1397 = !DILocation(line: 952, column: 26, scope: !1393)
!1398 = !DILocation(line: 952, column: 14, scope: !1393)
!1399 = !DILocation(line: 953, column: 25, scope: !1393)
!1400 = !DILocation(line: 953, column: 5, scope: !1393)
!1401 = !DILocation(line: 953, column: 8, scope: !1393)
!1402 = !DILocation(line: 953, column: 23, scope: !1393)
!1403 = !DILocation(line: 954, column: 23, scope: !1393)
!1404 = !DILocation(line: 954, column: 5, scope: !1393)
!1405 = !DILocation(line: 954, column: 21, scope: !1393)
!1406 = !DILocation(line: 950, column: 3, scope: !1407)
!1407 = !DILexicalBlockFile(scope: !864, file: !1, discriminator: 2)
!1408 = !DILocation(line: 956, column: 1, scope: !864)
!1409 = !DILocalVariable(name: "pool", arg: 1, scope: !1016, file: !1, line: 6162, type: !863)
!1410 = !DILocation(line: 6162, column: 24, scope: !1016)
!1411 = !DILocation(line: 6164, column: 8, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !1016, file: !1, line: 6164, column: 7)
!1413 = !DILocation(line: 6164, column: 14, scope: !1412)
!1414 = !DILocation(line: 6164, column: 7, scope: !1016)
!1415 = !DILocation(line: 6165, column: 24, scope: !1412)
!1416 = !DILocation(line: 6165, column: 30, scope: !1412)
!1417 = !DILocation(line: 6165, column: 5, scope: !1412)
!1418 = !DILocation(line: 6165, column: 11, scope: !1412)
!1419 = !DILocation(line: 6165, column: 22, scope: !1412)
!1420 = !DILocalVariable(name: "p", scope: !1421, file: !1, line: 6167, type: !552)
!1421 = distinct !DILexicalBlock(scope: !1412, file: !1, line: 6166, column: 8)
!1422 = !DILocation(line: 6167, column: 12, scope: !1421)
!1423 = !DILocation(line: 6167, column: 16, scope: !1421)
!1424 = !DILocation(line: 6167, column: 22, scope: !1421)
!1425 = !DILocation(line: 6168, column: 5, scope: !1421)
!1426 = !DILocation(line: 6168, column: 12, scope: !1427)
!1427 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 1)
!1428 = !DILocation(line: 6168, column: 5, scope: !1427)
!1429 = !DILocalVariable(name: "tem", scope: !1430, file: !1, line: 6169, type: !552)
!1430 = distinct !DILexicalBlock(scope: !1421, file: !1, line: 6168, column: 15)
!1431 = !DILocation(line: 6169, column: 14, scope: !1430)
!1432 = !DILocation(line: 6169, column: 20, scope: !1430)
!1433 = !DILocation(line: 6169, column: 23, scope: !1430)
!1434 = !DILocation(line: 6170, column: 17, scope: !1430)
!1435 = !DILocation(line: 6170, column: 23, scope: !1430)
!1436 = !DILocation(line: 6170, column: 7, scope: !1430)
!1437 = !DILocation(line: 6170, column: 10, scope: !1430)
!1438 = !DILocation(line: 6170, column: 15, scope: !1430)
!1439 = !DILocation(line: 6171, column: 26, scope: !1430)
!1440 = !DILocation(line: 6171, column: 7, scope: !1430)
!1441 = !DILocation(line: 6171, column: 13, scope: !1430)
!1442 = !DILocation(line: 6171, column: 24, scope: !1430)
!1443 = !DILocation(line: 6172, column: 11, scope: !1430)
!1444 = !DILocation(line: 6172, column: 9, scope: !1430)
!1445 = !DILocation(line: 6168, column: 5, scope: !1446)
!1446 = !DILexicalBlockFile(scope: !1421, file: !1, discriminator: 2)
!1447 = !DILocation(line: 6175, column: 3, scope: !1016)
!1448 = !DILocation(line: 6175, column: 9, scope: !1016)
!1449 = !DILocation(line: 6175, column: 16, scope: !1016)
!1450 = !DILocation(line: 6176, column: 3, scope: !1016)
!1451 = !DILocation(line: 6176, column: 9, scope: !1016)
!1452 = !DILocation(line: 6176, column: 15, scope: !1016)
!1453 = !DILocation(line: 6177, column: 3, scope: !1016)
!1454 = !DILocation(line: 6177, column: 9, scope: !1016)
!1455 = !DILocation(line: 6177, column: 13, scope: !1016)
!1456 = !DILocation(line: 6178, column: 3, scope: !1016)
!1457 = !DILocation(line: 6178, column: 9, scope: !1016)
!1458 = !DILocation(line: 6178, column: 13, scope: !1016)
!1459 = !DILocation(line: 6179, column: 1, scope: !1016)
!1460 = !DILocalVariable(name: "parser", arg: 1, scope: !867, file: !1, line: 874, type: !162)
!1461 = !DILocation(line: 874, column: 23, scope: !867)
!1462 = !DILocalVariable(name: "encodingName", arg: 2, scope: !867, file: !1, line: 874, type: !210)
!1463 = !DILocation(line: 874, column: 47, scope: !867)
!1464 = !DILocation(line: 876, column: 3, scope: !867)
!1465 = !DILocation(line: 876, column: 13, scope: !867)
!1466 = !DILocation(line: 877, column: 23, scope: !867)
!1467 = !DILocation(line: 877, column: 3, scope: !867)
!1468 = !DILocation(line: 878, column: 27, scope: !867)
!1469 = !DILocation(line: 878, column: 40, scope: !867)
!1470 = !DILocation(line: 879, column: 45, scope: !867)
!1471 = !DILocation(line: 879, column: 55, scope: !867)
!1472 = !DILocation(line: 879, column: 29, scope: !867)
!1473 = !DILocation(line: 878, column: 27, scope: !1474)
!1474 = !DILexicalBlockFile(scope: !867, file: !1, discriminator: 1)
!1475 = !DILocation(line: 878, column: 27, scope: !1476)
!1476 = !DILexicalBlockFile(scope: !867, file: !1, discriminator: 2)
!1477 = !DILocation(line: 878, column: 27, scope: !1478)
!1478 = !DILexicalBlockFile(scope: !867, file: !1, discriminator: 3)
!1479 = !DILocation(line: 878, column: 3, scope: !1478)
!1480 = !DILocation(line: 878, column: 24, scope: !1478)
!1481 = !DILocation(line: 881, column: 3, scope: !867)
!1482 = !DILocation(line: 881, column: 11, scope: !867)
!1483 = !DILocation(line: 882, column: 20, scope: !867)
!1484 = !DILocation(line: 882, column: 35, scope: !867)
!1485 = !DILocation(line: 882, column: 3, scope: !867)
!1486 = !DILocation(line: 883, column: 3, scope: !867)
!1487 = !DILocation(line: 883, column: 12, scope: !867)
!1488 = !DILocation(line: 884, column: 3, scope: !867)
!1489 = !DILocation(line: 884, column: 14, scope: !867)
!1490 = !DILocation(line: 885, column: 3, scope: !867)
!1491 = !DILocation(line: 885, column: 23, scope: !867)
!1492 = !DILocation(line: 886, column: 3, scope: !867)
!1493 = !DILocation(line: 886, column: 21, scope: !867)
!1494 = !DILocation(line: 887, column: 3, scope: !867)
!1495 = !DILocation(line: 887, column: 24, scope: !867)
!1496 = !DILocation(line: 888, column: 3, scope: !867)
!1497 = !DILocation(line: 888, column: 32, scope: !867)
!1498 = !DILocation(line: 889, column: 3, scope: !867)
!1499 = !DILocation(line: 889, column: 18, scope: !867)
!1500 = !DILocation(line: 890, column: 3, scope: !867)
!1501 = !DILocation(line: 890, column: 28, scope: !867)
!1502 = !DILocation(line: 891, column: 3, scope: !867)
!1503 = !DILocation(line: 891, column: 26, scope: !867)
!1504 = !DILocation(line: 892, column: 3, scope: !867)
!1505 = !DILocation(line: 892, column: 18, scope: !867)
!1506 = !DILocation(line: 893, column: 3, scope: !867)
!1507 = !DILocation(line: 893, column: 27, scope: !867)
!1508 = !DILocation(line: 894, column: 3, scope: !867)
!1509 = !DILocation(line: 894, column: 25, scope: !867)
!1510 = !DILocation(line: 895, column: 3, scope: !867)
!1511 = !DILocation(line: 895, column: 29, scope: !867)
!1512 = !DILocation(line: 896, column: 3, scope: !867)
!1513 = !DILocation(line: 896, column: 23, scope: !867)
!1514 = !DILocation(line: 897, column: 3, scope: !867)
!1515 = !DILocation(line: 897, column: 29, scope: !867)
!1516 = !DILocation(line: 898, column: 3, scope: !867)
!1517 = !DILocation(line: 898, column: 27, scope: !867)
!1518 = !DILocation(line: 899, column: 3, scope: !867)
!1519 = !DILocation(line: 899, column: 24, scope: !867)
!1520 = !DILocation(line: 900, column: 3, scope: !867)
!1521 = !DILocation(line: 900, column: 28, scope: !867)
!1522 = !DILocation(line: 901, column: 33, scope: !867)
!1523 = !DILocation(line: 901, column: 3, scope: !867)
!1524 = !DILocation(line: 901, column: 31, scope: !867)
!1525 = !DILocation(line: 902, column: 3, scope: !867)
!1526 = !DILocation(line: 902, column: 24, scope: !867)
!1527 = !DILocation(line: 903, column: 3, scope: !867)
!1528 = !DILocation(line: 903, column: 22, scope: !867)
!1529 = !DILocation(line: 904, column: 3, scope: !867)
!1530 = !DILocation(line: 904, column: 22, scope: !867)
!1531 = !DILocation(line: 905, column: 3, scope: !867)
!1532 = !DILocation(line: 905, column: 21, scope: !867)
!1533 = !DILocation(line: 906, column: 3, scope: !867)
!1534 = !DILocation(line: 906, column: 18, scope: !867)
!1535 = !DILocation(line: 907, column: 15, scope: !867)
!1536 = !DILocation(line: 907, column: 3, scope: !867)
!1537 = !DILocation(line: 907, column: 13, scope: !867)
!1538 = !DILocation(line: 908, column: 15, scope: !867)
!1539 = !DILocation(line: 908, column: 3, scope: !867)
!1540 = !DILocation(line: 908, column: 13, scope: !867)
!1541 = !DILocation(line: 909, column: 3, scope: !867)
!1542 = !DILocation(line: 909, column: 21, scope: !867)
!1543 = !DILocation(line: 910, column: 3, scope: !867)
!1544 = !DILocation(line: 910, column: 15, scope: !867)
!1545 = !DILocation(line: 911, column: 3, scope: !867)
!1546 = !DILocation(line: 911, column: 19, scope: !867)
!1547 = !DILocation(line: 912, column: 3, scope: !867)
!1548 = !DILocation(line: 912, column: 19, scope: !867)
!1549 = !DILocation(line: 913, column: 3, scope: !867)
!1550 = !DILocation(line: 913, column: 14, scope: !867)
!1551 = !DILocation(line: 914, column: 3, scope: !867)
!1552 = !DILocation(line: 914, column: 15, scope: !867)
!1553 = !DILocation(line: 915, column: 3, scope: !867)
!1554 = !DILocation(line: 915, column: 16, scope: !867)
!1555 = !DILocation(line: 916, column: 3, scope: !867)
!1556 = !DILocation(line: 916, column: 16, scope: !867)
!1557 = !DILocation(line: 917, column: 3, scope: !867)
!1558 = !DILocation(line: 917, column: 21, scope: !867)
!1559 = !DILocation(line: 918, column: 3, scope: !867)
!1560 = !DILocation(line: 918, column: 20, scope: !867)
!1561 = !DILocation(line: 919, column: 3, scope: !867)
!1562 = !DILocation(line: 919, column: 24, scope: !867)
!1563 = !DILocation(line: 920, column: 3, scope: !867)
!1564 = !DILocation(line: 920, column: 24, scope: !867)
!1565 = !DILocation(line: 921, column: 3, scope: !867)
!1566 = !DILocation(line: 921, column: 21, scope: !867)
!1567 = !DILocation(line: 922, column: 11, scope: !867)
!1568 = !DILocation(line: 922, column: 3, scope: !867)
!1569 = !DILocation(line: 923, column: 3, scope: !867)
!1570 = !DILocation(line: 923, column: 13, scope: !867)
!1571 = !DILocation(line: 924, column: 3, scope: !867)
!1572 = !DILocation(line: 924, column: 12, scope: !867)
!1573 = !DILocation(line: 925, column: 3, scope: !867)
!1574 = !DILocation(line: 925, column: 15, scope: !867)
!1575 = !DILocation(line: 926, column: 3, scope: !867)
!1576 = !DILocation(line: 926, column: 15, scope: !867)
!1577 = !DILocation(line: 927, column: 3, scope: !867)
!1578 = !DILocation(line: 927, column: 24, scope: !867)
!1579 = !DILocation(line: 928, column: 3, scope: !867)
!1580 = !DILocation(line: 928, column: 33, scope: !867)
!1581 = !DILocation(line: 929, column: 3, scope: !867)
!1582 = !DILocation(line: 929, column: 12, scope: !867)
!1583 = !DILocation(line: 930, column: 3, scope: !867)
!1584 = !DILocation(line: 930, column: 12, scope: !867)
!1585 = !DILocation(line: 931, column: 3, scope: !867)
!1586 = !DILocation(line: 931, column: 21, scope: !867)
!1587 = !DILocation(line: 932, column: 3, scope: !867)
!1588 = !DILocation(line: 932, column: 18, scope: !867)
!1589 = !DILocation(line: 933, column: 3, scope: !867)
!1590 = !DILocation(line: 933, column: 22, scope: !867)
!1591 = !DILocation(line: 934, column: 3, scope: !867)
!1592 = !DILocation(line: 934, column: 26, scope: !867)
!1593 = !DILocation(line: 935, column: 3, scope: !867)
!1594 = !DILocation(line: 935, column: 23, scope: !867)
!1595 = !DILocation(line: 936, column: 3, scope: !867)
!1596 = !DILocation(line: 936, column: 16, scope: !867)
!1597 = !DILocation(line: 937, column: 3, scope: !867)
!1598 = !DILocation(line: 937, column: 14, scope: !867)
!1599 = !DILocation(line: 943, column: 3, scope: !867)
!1600 = !DILocation(line: 943, column: 20, scope: !867)
!1601 = !DILocation(line: 944, column: 1, scope: !867)
!1602 = !DILocalVariable(name: "p", arg: 1, scope: !995, file: !1, line: 5732, type: !523)
!1603 = !DILocation(line: 5732, column: 15, scope: !995)
!1604 = !DILocalVariable(name: "ms", arg: 2, scope: !995, file: !1, line: 5732, type: !543)
!1605 = !DILocation(line: 5732, column: 51, scope: !995)
!1606 = !DILocalVariable(name: "iter", scope: !995, file: !1, line: 5734, type: !901)
!1607 = !DILocation(line: 5734, column: 19, scope: !995)
!1608 = !DILocation(line: 5735, column: 30, scope: !995)
!1609 = !DILocation(line: 5735, column: 33, scope: !995)
!1610 = !DILocation(line: 5735, column: 3, scope: !995)
!1611 = !DILocation(line: 5736, column: 3, scope: !995)
!1612 = !DILocalVariable(name: "e", scope: !1613, file: !1, line: 5737, type: !471)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !1, line: 5736, column: 12)
!1614 = distinct !DILexicalBlock(scope: !1615, file: !1, line: 5736, column: 3)
!1615 = distinct !DILexicalBlock(scope: !995, file: !1, line: 5736, column: 3)
!1616 = !DILocation(line: 5737, column: 19, scope: !1613)
!1617 = !DILocation(line: 5737, column: 39, scope: !1613)
!1618 = !DILocation(line: 5737, column: 23, scope: !1613)
!1619 = !DILocation(line: 5738, column: 10, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !1613, file: !1, line: 5738, column: 9)
!1621 = !DILocation(line: 5738, column: 9, scope: !1613)
!1622 = !DILocation(line: 5739, column: 7, scope: !1620)
!1623 = !DILocation(line: 5740, column: 9, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1613, file: !1, line: 5740, column: 9)
!1625 = !DILocation(line: 5740, column: 12, scope: !1624)
!1626 = !DILocation(line: 5740, column: 29, scope: !1624)
!1627 = !DILocation(line: 5740, column: 9, scope: !1613)
!1628 = !DILocation(line: 5741, column: 7, scope: !1624)
!1629 = !DILocation(line: 5741, column: 11, scope: !1624)
!1630 = !DILocation(line: 5741, column: 20, scope: !1624)
!1631 = !DILocation(line: 5741, column: 23, scope: !1624)
!1632 = !DILocation(line: 5736, column: 3, scope: !1633)
!1633 = !DILexicalBlockFile(scope: !1614, file: !1, discriminator: 1)
!1634 = !DILocation(line: 5743, column: 20, scope: !995)
!1635 = !DILocation(line: 5743, column: 23, scope: !995)
!1636 = !DILocation(line: 5743, column: 3, scope: !995)
!1637 = !DILocation(line: 5748, column: 20, scope: !995)
!1638 = !DILocation(line: 5748, column: 23, scope: !995)
!1639 = !DILocation(line: 5748, column: 3, scope: !995)
!1640 = !DILocation(line: 5749, column: 20, scope: !995)
!1641 = !DILocation(line: 5749, column: 23, scope: !995)
!1642 = !DILocation(line: 5749, column: 3, scope: !995)
!1643 = !DILocation(line: 5750, column: 20, scope: !995)
!1644 = !DILocation(line: 5750, column: 23, scope: !995)
!1645 = !DILocation(line: 5750, column: 3, scope: !995)
!1646 = !DILocation(line: 5751, column: 15, scope: !995)
!1647 = !DILocation(line: 5751, column: 18, scope: !995)
!1648 = !DILocation(line: 5751, column: 3, scope: !995)
!1649 = !DILocation(line: 5752, column: 15, scope: !995)
!1650 = !DILocation(line: 5752, column: 18, scope: !995)
!1651 = !DILocation(line: 5752, column: 3, scope: !995)
!1652 = !DILocation(line: 5753, column: 3, scope: !995)
!1653 = !DILocation(line: 5753, column: 6, scope: !995)
!1654 = !DILocation(line: 5753, column: 20, scope: !995)
!1655 = !DILocation(line: 5753, column: 25, scope: !995)
!1656 = !DILocation(line: 5754, column: 3, scope: !995)
!1657 = !DILocation(line: 5754, column: 6, scope: !995)
!1658 = !DILocation(line: 5754, column: 20, scope: !995)
!1659 = !DILocation(line: 5754, column: 28, scope: !995)
!1660 = !DILocation(line: 5756, column: 3, scope: !995)
!1661 = !DILocation(line: 5756, column: 6, scope: !995)
!1662 = !DILocation(line: 5756, column: 16, scope: !995)
!1663 = !DILocation(line: 5758, column: 3, scope: !995)
!1664 = !DILocation(line: 5758, column: 7, scope: !995)
!1665 = !DILocation(line: 5758, column: 16, scope: !995)
!1666 = !DILocation(line: 5758, column: 19, scope: !995)
!1667 = !DILocation(line: 5759, column: 3, scope: !995)
!1668 = !DILocation(line: 5759, column: 6, scope: !995)
!1669 = !DILocation(line: 5759, column: 17, scope: !995)
!1670 = !DILocation(line: 5760, column: 3, scope: !995)
!1671 = !DILocation(line: 5760, column: 7, scope: !995)
!1672 = !DILocation(line: 5760, column: 16, scope: !995)
!1673 = !DILocation(line: 5760, column: 19, scope: !995)
!1674 = !DILocation(line: 5761, column: 3, scope: !995)
!1675 = !DILocation(line: 5761, column: 6, scope: !995)
!1676 = !DILocation(line: 5761, column: 15, scope: !995)
!1677 = !DILocation(line: 5763, column: 3, scope: !995)
!1678 = !DILocation(line: 5763, column: 6, scope: !995)
!1679 = !DILocation(line: 5763, column: 17, scope: !995)
!1680 = !DILocation(line: 5764, column: 3, scope: !995)
!1681 = !DILocation(line: 5764, column: 6, scope: !995)
!1682 = !DILocation(line: 5764, column: 16, scope: !995)
!1683 = !DILocation(line: 5765, column: 3, scope: !995)
!1684 = !DILocation(line: 5765, column: 6, scope: !995)
!1685 = !DILocation(line: 5765, column: 17, scope: !995)
!1686 = !DILocation(line: 5766, column: 3, scope: !995)
!1687 = !DILocation(line: 5766, column: 6, scope: !995)
!1688 = !DILocation(line: 5766, column: 23, scope: !995)
!1689 = !DILocation(line: 5768, column: 3, scope: !995)
!1690 = !DILocation(line: 5768, column: 6, scope: !995)
!1691 = !DILocation(line: 5768, column: 21, scope: !995)
!1692 = !DILocation(line: 5769, column: 3, scope: !995)
!1693 = !DILocation(line: 5769, column: 6, scope: !995)
!1694 = !DILocation(line: 5769, column: 25, scope: !995)
!1695 = !DILocation(line: 5770, column: 3, scope: !995)
!1696 = !DILocation(line: 5770, column: 6, scope: !995)
!1697 = !DILocation(line: 5770, column: 17, scope: !995)
!1698 = !DILocation(line: 5771, column: 1, scope: !995)
!1699 = !DILocalVariable(name: "parser", arg: 1, scope: !664, file: !1, line: 995, type: !162)
!1700 = !DILocation(line: 995, column: 28, scope: !664)
!1701 = !DILocalVariable(name: "encodingName", arg: 2, scope: !664, file: !1, line: 995, type: !210)
!1702 = !DILocation(line: 995, column: 52, scope: !664)
!1703 = !DILocation(line: 1001, column: 7, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !664, file: !1, line: 1001, column: 7)
!1705 = !DILocation(line: 1001, column: 18, scope: !1704)
!1706 = !DILocation(line: 1001, column: 33, scope: !1704)
!1707 = !DILocation(line: 1001, column: 36, scope: !1708)
!1708 = !DILexicalBlockFile(scope: !1704, file: !1, discriminator: 1)
!1709 = !DILocation(line: 1001, column: 47, scope: !1708)
!1710 = !DILocation(line: 1001, column: 7, scope: !1708)
!1711 = !DILocation(line: 1002, column: 5, scope: !1704)
!1712 = !DILocation(line: 1003, column: 7, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !664, file: !1, line: 1003, column: 7)
!1714 = !DILocation(line: 1003, column: 20, scope: !1713)
!1715 = !DILocation(line: 1003, column: 7, scope: !664)
!1716 = !DILocation(line: 1004, column: 5, scope: !1713)
!1717 = !DILocation(line: 1004, column: 26, scope: !1713)
!1718 = !DILocation(line: 1006, column: 44, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1713, file: !1, line: 1005, column: 8)
!1720 = !DILocation(line: 1006, column: 54, scope: !1719)
!1721 = !DILocation(line: 1006, column: 28, scope: !1719)
!1722 = !DILocation(line: 1006, column: 5, scope: !1719)
!1723 = !DILocation(line: 1006, column: 26, scope: !1719)
!1724 = !DILocation(line: 1007, column: 10, scope: !1725)
!1725 = distinct !DILexicalBlock(scope: !1719, file: !1, line: 1007, column: 9)
!1726 = !DILocation(line: 1007, column: 9, scope: !1719)
!1727 = !DILocation(line: 1008, column: 7, scope: !1725)
!1728 = !DILocation(line: 1010, column: 3, scope: !664)
!1729 = !DILocation(line: 1011, column: 1, scope: !664)
!1730 = !DILocalVariable(name: "pool", arg: 1, scope: !1020, file: !1, line: 6215, type: !863)
!1731 = !DILocation(line: 6215, column: 29, scope: !1020)
!1732 = !DILocalVariable(name: "s", arg: 2, scope: !1020, file: !1, line: 6215, type: !210)
!1733 = !DILocation(line: 6215, column: 51, scope: !1020)
!1734 = !DILocation(line: 6217, column: 3, scope: !1020)
!1735 = !DILocation(line: 6218, column: 10, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1737, file: !1, line: 6218, column: 9)
!1737 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 6217, column: 6)
!1738 = !DILocation(line: 6218, column: 10, scope: !1739)
!1739 = !DILexicalBlockFile(scope: !1736, file: !1, discriminator: 1)
!1740 = !DILocation(line: 6218, column: 9, scope: !1739)
!1741 = !DILocation(line: 6218, column: 10, scope: !1742)
!1742 = !DILexicalBlockFile(scope: !1736, file: !1, discriminator: 2)
!1743 = !DILocation(line: 6218, column: 10, scope: !1744)
!1744 = !DILexicalBlockFile(scope: !1736, file: !1, discriminator: 3)
!1745 = !DILocation(line: 6218, column: 9, scope: !1744)
!1746 = !DILocation(line: 6219, column: 7, scope: !1736)
!1747 = !DILocation(line: 6220, column: 3, scope: !1737)
!1748 = !DILocation(line: 6220, column: 14, scope: !1749)
!1749 = !DILexicalBlockFile(scope: !1020, file: !1, discriminator: 1)
!1750 = !DILocation(line: 6220, column: 12, scope: !1749)
!1751 = !DILocation(line: 6220, column: 3, scope: !1749)
!1752 = !DILocation(line: 6221, column: 7, scope: !1020)
!1753 = !DILocation(line: 6221, column: 13, scope: !1020)
!1754 = !DILocation(line: 6221, column: 5, scope: !1020)
!1755 = !DILocation(line: 6222, column: 3, scope: !1020)
!1756 = !DILocation(line: 6223, column: 10, scope: !1020)
!1757 = !DILocation(line: 6223, column: 3, scope: !1020)
!1758 = !DILocation(line: 6224, column: 1, scope: !1020)
!1759 = !DILocalVariable(name: "oldParser", arg: 1, scope: !667, file: !1, line: 1014, type: !162)
!1760 = !DILocation(line: 1014, column: 43, scope: !667)
!1761 = !DILocalVariable(name: "context", arg: 2, scope: !667, file: !1, line: 1015, type: !210)
!1762 = !DILocation(line: 1015, column: 48, scope: !667)
!1763 = !DILocalVariable(name: "encodingName", arg: 3, scope: !667, file: !1, line: 1016, type: !210)
!1764 = !DILocation(line: 1016, column: 48, scope: !667)
!1765 = !DILocalVariable(name: "parser", scope: !667, file: !1, line: 1018, type: !162)
!1766 = !DILocation(line: 1018, column: 14, scope: !667)
!1767 = !DILocation(line: 1018, column: 23, scope: !667)
!1768 = !DILocalVariable(name: "newDtd", scope: !667, file: !1, line: 1019, type: !523)
!1769 = !DILocation(line: 1019, column: 8, scope: !667)
!1770 = !DILocalVariable(name: "oldDtd", scope: !667, file: !1, line: 1020, type: !523)
!1771 = !DILocation(line: 1020, column: 8, scope: !667)
!1772 = !DILocation(line: 1020, column: 17, scope: !667)
!1773 = !DILocalVariable(name: "oldStartElementHandler", scope: !667, file: !1, line: 1021, type: !206)
!1774 = !DILocation(line: 1021, column: 27, scope: !667)
!1775 = !DILocation(line: 1021, column: 52, scope: !667)
!1776 = !DILocalVariable(name: "oldEndElementHandler", scope: !667, file: !1, line: 1022, type: !214)
!1777 = !DILocation(line: 1022, column: 25, scope: !667)
!1778 = !DILocation(line: 1022, column: 48, scope: !667)
!1779 = !DILocalVariable(name: "oldCharacterDataHandler", scope: !667, file: !1, line: 1023, type: !219)
!1780 = !DILocation(line: 1023, column: 28, scope: !667)
!1781 = !DILocation(line: 1023, column: 54, scope: !667)
!1782 = !DILocalVariable(name: "oldProcessingInstructionHandler", scope: !667, file: !1, line: 1024, type: !225)
!1783 = !DILocation(line: 1024, column: 36, scope: !667)
!1784 = !DILocation(line: 1025, column: 9, scope: !667)
!1785 = !DILocalVariable(name: "oldCommentHandler", scope: !667, file: !1, line: 1026, type: !230)
!1786 = !DILocation(line: 1026, column: 22, scope: !667)
!1787 = !DILocation(line: 1026, column: 42, scope: !667)
!1788 = !DILocalVariable(name: "oldStartCdataSectionHandler", scope: !667, file: !1, line: 1027, type: !232)
!1789 = !DILocation(line: 1027, column: 32, scope: !667)
!1790 = !DILocation(line: 1028, column: 9, scope: !667)
!1791 = !DILocalVariable(name: "oldEndCdataSectionHandler", scope: !667, file: !1, line: 1029, type: !234)
!1792 = !DILocation(line: 1029, column: 30, scope: !667)
!1793 = !DILocation(line: 1030, column: 9, scope: !667)
!1794 = !DILocalVariable(name: "oldDefaultHandler", scope: !667, file: !1, line: 1031, type: !236)
!1795 = !DILocation(line: 1031, column: 22, scope: !667)
!1796 = !DILocation(line: 1031, column: 42, scope: !667)
!1797 = !DILocalVariable(name: "oldUnparsedEntityDeclHandler", scope: !667, file: !1, line: 1032, type: !245)
!1798 = !DILocation(line: 1032, column: 33, scope: !667)
!1799 = !DILocation(line: 1033, column: 9, scope: !667)
!1800 = !DILocalVariable(name: "oldNotationDeclHandler", scope: !667, file: !1, line: 1034, type: !250)
!1801 = !DILocation(line: 1034, column: 27, scope: !667)
!1802 = !DILocation(line: 1034, column: 52, scope: !667)
!1803 = !DILocalVariable(name: "oldStartNamespaceDeclHandler", scope: !667, file: !1, line: 1035, type: !255)
!1804 = !DILocation(line: 1035, column: 33, scope: !667)
!1805 = !DILocation(line: 1036, column: 9, scope: !667)
!1806 = !DILocalVariable(name: "oldEndNamespaceDeclHandler", scope: !667, file: !1, line: 1037, type: !257)
!1807 = !DILocation(line: 1037, column: 31, scope: !667)
!1808 = !DILocation(line: 1038, column: 9, scope: !667)
!1809 = !DILocalVariable(name: "oldNotStandaloneHandler", scope: !667, file: !1, line: 1039, type: !259)
!1810 = !DILocation(line: 1039, column: 28, scope: !667)
!1811 = !DILocation(line: 1039, column: 54, scope: !667)
!1812 = !DILocalVariable(name: "oldExternalEntityRefHandler", scope: !667, file: !1, line: 1040, type: !264)
!1813 = !DILocation(line: 1040, column: 32, scope: !667)
!1814 = !DILocation(line: 1041, column: 9, scope: !667)
!1815 = !DILocalVariable(name: "oldSkippedEntityHandler", scope: !667, file: !1, line: 1042, type: !270)
!1816 = !DILocation(line: 1042, column: 28, scope: !667)
!1817 = !DILocation(line: 1042, column: 54, scope: !667)
!1818 = !DILocalVariable(name: "oldUnknownEncodingHandler", scope: !667, file: !1, line: 1043, type: !272)
!1819 = !DILocation(line: 1043, column: 30, scope: !667)
!1820 = !DILocation(line: 1044, column: 9, scope: !667)
!1821 = !DILocalVariable(name: "oldElementDeclHandler", scope: !667, file: !1, line: 1045, type: !291)
!1822 = !DILocation(line: 1045, column: 26, scope: !667)
!1823 = !DILocation(line: 1045, column: 50, scope: !667)
!1824 = !DILocalVariable(name: "oldAttlistDeclHandler", scope: !667, file: !1, line: 1046, type: !306)
!1825 = !DILocation(line: 1046, column: 26, scope: !667)
!1826 = !DILocation(line: 1046, column: 50, scope: !667)
!1827 = !DILocalVariable(name: "oldEntityDeclHandler", scope: !667, file: !1, line: 1047, type: !311)
!1828 = !DILocation(line: 1047, column: 25, scope: !667)
!1829 = !DILocation(line: 1047, column: 48, scope: !667)
!1830 = !DILocalVariable(name: "oldXmlDeclHandler", scope: !667, file: !1, line: 1048, type: !316)
!1831 = !DILocation(line: 1048, column: 22, scope: !667)
!1832 = !DILocation(line: 1048, column: 42, scope: !667)
!1833 = !DILocalVariable(name: "oldDeclElementType", scope: !667, file: !1, line: 1049, type: !471)
!1834 = !DILocation(line: 1049, column: 18, scope: !667)
!1835 = !DILocation(line: 1049, column: 39, scope: !667)
!1836 = !DILocalVariable(name: "oldUserData", scope: !667, file: !1, line: 1051, type: !161)
!1837 = !DILocation(line: 1051, column: 9, scope: !667)
!1838 = !DILocation(line: 1051, column: 23, scope: !667)
!1839 = !DILocalVariable(name: "oldHandlerArg", scope: !667, file: !1, line: 1052, type: !161)
!1840 = !DILocation(line: 1052, column: 9, scope: !667)
!1841 = !DILocation(line: 1052, column: 25, scope: !667)
!1842 = !DILocalVariable(name: "oldDefaultExpandInternalEntities", scope: !667, file: !1, line: 1053, type: !159)
!1843 = !DILocation(line: 1053, column: 12, scope: !667)
!1844 = !DILocation(line: 1053, column: 47, scope: !667)
!1845 = !DILocalVariable(name: "oldExternalEntityRefHandlerArg", scope: !667, file: !1, line: 1054, type: !162)
!1846 = !DILocation(line: 1054, column: 14, scope: !667)
!1847 = !DILocation(line: 1054, column: 47, scope: !667)
!1848 = !DILocalVariable(name: "oldns_triplets", scope: !667, file: !1, line: 1059, type: !159)
!1849 = !DILocation(line: 1059, column: 12, scope: !667)
!1850 = !DILocation(line: 1059, column: 29, scope: !667)
!1851 = !DILocalVariable(name: "oldhash_secret_salt", scope: !667, file: !1, line: 1065, type: !182)
!1852 = !DILocation(line: 1065, column: 17, scope: !667)
!1853 = !DILocation(line: 1065, column: 39, scope: !667)
!1854 = !DILocation(line: 1077, column: 7, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !667, file: !1, line: 1077, column: 7)
!1856 = !DILocation(line: 1077, column: 7, scope: !667)
!1857 = !DILocalVariable(name: "tmp", scope: !1858, file: !1, line: 1078, type: !1097)
!1858 = distinct !DILexicalBlock(scope: !1855, file: !1, line: 1077, column: 11)
!1859 = !DILocation(line: 1078, column: 14, scope: !1858)
!1860 = !DILocation(line: 1079, column: 12, scope: !1858)
!1861 = !DILocation(line: 1079, column: 5, scope: !1858)
!1862 = !DILocation(line: 1079, column: 10, scope: !1858)
!1863 = !DILocation(line: 1080, column: 27, scope: !1858)
!1864 = !DILocation(line: 1080, column: 42, scope: !1858)
!1865 = !DILocation(line: 1080, column: 50, scope: !1858)
!1866 = !DILocation(line: 1080, column: 57, scope: !1858)
!1867 = !DILocation(line: 1080, column: 62, scope: !1858)
!1868 = !DILocation(line: 1080, column: 14, scope: !1858)
!1869 = !DILocation(line: 1080, column: 12, scope: !1858)
!1870 = !DILocation(line: 1081, column: 3, scope: !1858)
!1871 = !DILocation(line: 1083, column: 27, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1855, file: !1, line: 1082, column: 8)
!1873 = !DILocation(line: 1083, column: 42, scope: !1872)
!1874 = !DILocation(line: 1083, column: 50, scope: !1872)
!1875 = !DILocation(line: 1083, column: 63, scope: !1872)
!1876 = !DILocation(line: 1083, column: 14, scope: !1872)
!1877 = !DILocation(line: 1083, column: 12, scope: !1872)
!1878 = !DILocation(line: 1086, column: 8, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !667, file: !1, line: 1086, column: 7)
!1880 = !DILocation(line: 1086, column: 7, scope: !667)
!1881 = !DILocation(line: 1087, column: 5, scope: !1879)
!1882 = !DILocation(line: 1089, column: 25, scope: !667)
!1883 = !DILocation(line: 1089, column: 3, scope: !667)
!1884 = !DILocation(line: 1089, column: 23, scope: !667)
!1885 = !DILocation(line: 1090, column: 23, scope: !667)
!1886 = !DILocation(line: 1090, column: 3, scope: !667)
!1887 = !DILocation(line: 1090, column: 21, scope: !667)
!1888 = !DILocation(line: 1091, column: 26, scope: !667)
!1889 = !DILocation(line: 1091, column: 3, scope: !667)
!1890 = !DILocation(line: 1091, column: 24, scope: !667)
!1891 = !DILocation(line: 1092, column: 34, scope: !667)
!1892 = !DILocation(line: 1092, column: 3, scope: !667)
!1893 = !DILocation(line: 1092, column: 32, scope: !667)
!1894 = !DILocation(line: 1093, column: 20, scope: !667)
!1895 = !DILocation(line: 1093, column: 3, scope: !667)
!1896 = !DILocation(line: 1093, column: 18, scope: !667)
!1897 = !DILocation(line: 1094, column: 30, scope: !667)
!1898 = !DILocation(line: 1094, column: 3, scope: !667)
!1899 = !DILocation(line: 1094, column: 28, scope: !667)
!1900 = !DILocation(line: 1095, column: 28, scope: !667)
!1901 = !DILocation(line: 1095, column: 3, scope: !667)
!1902 = !DILocation(line: 1095, column: 26, scope: !667)
!1903 = !DILocation(line: 1096, column: 20, scope: !667)
!1904 = !DILocation(line: 1096, column: 3, scope: !667)
!1905 = !DILocation(line: 1096, column: 18, scope: !667)
!1906 = !DILocation(line: 1097, column: 31, scope: !667)
!1907 = !DILocation(line: 1097, column: 3, scope: !667)
!1908 = !DILocation(line: 1097, column: 29, scope: !667)
!1909 = !DILocation(line: 1098, column: 25, scope: !667)
!1910 = !DILocation(line: 1098, column: 3, scope: !667)
!1911 = !DILocation(line: 1098, column: 23, scope: !667)
!1912 = !DILocation(line: 1099, column: 31, scope: !667)
!1913 = !DILocation(line: 1099, column: 3, scope: !667)
!1914 = !DILocation(line: 1099, column: 29, scope: !667)
!1915 = !DILocation(line: 1100, column: 29, scope: !667)
!1916 = !DILocation(line: 1100, column: 3, scope: !667)
!1917 = !DILocation(line: 1100, column: 27, scope: !667)
!1918 = !DILocation(line: 1101, column: 26, scope: !667)
!1919 = !DILocation(line: 1101, column: 3, scope: !667)
!1920 = !DILocation(line: 1101, column: 24, scope: !667)
!1921 = !DILocation(line: 1102, column: 30, scope: !667)
!1922 = !DILocation(line: 1102, column: 3, scope: !667)
!1923 = !DILocation(line: 1102, column: 28, scope: !667)
!1924 = !DILocation(line: 1103, column: 26, scope: !667)
!1925 = !DILocation(line: 1103, column: 3, scope: !667)
!1926 = !DILocation(line: 1103, column: 24, scope: !667)
!1927 = !DILocation(line: 1104, column: 28, scope: !667)
!1928 = !DILocation(line: 1104, column: 3, scope: !667)
!1929 = !DILocation(line: 1104, column: 26, scope: !667)
!1930 = !DILocation(line: 1105, column: 24, scope: !667)
!1931 = !DILocation(line: 1105, column: 3, scope: !667)
!1932 = !DILocation(line: 1105, column: 22, scope: !667)
!1933 = !DILocation(line: 1106, column: 24, scope: !667)
!1934 = !DILocation(line: 1106, column: 3, scope: !667)
!1935 = !DILocation(line: 1106, column: 22, scope: !667)
!1936 = !DILocation(line: 1107, column: 23, scope: !667)
!1937 = !DILocation(line: 1107, column: 3, scope: !667)
!1938 = !DILocation(line: 1107, column: 21, scope: !667)
!1939 = !DILocation(line: 1108, column: 20, scope: !667)
!1940 = !DILocation(line: 1108, column: 3, scope: !667)
!1941 = !DILocation(line: 1108, column: 18, scope: !667)
!1942 = !DILocation(line: 1109, column: 21, scope: !667)
!1943 = !DILocation(line: 1109, column: 3, scope: !667)
!1944 = !DILocation(line: 1109, column: 19, scope: !667)
!1945 = !DILocation(line: 1110, column: 14, scope: !667)
!1946 = !DILocation(line: 1110, column: 3, scope: !667)
!1947 = !DILocation(line: 1110, column: 12, scope: !667)
!1948 = !DILocation(line: 1111, column: 7, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !667, file: !1, line: 1111, column: 7)
!1950 = !DILocation(line: 1111, column: 22, scope: !1949)
!1951 = !DILocation(line: 1111, column: 19, scope: !1949)
!1952 = !DILocation(line: 1111, column: 7, scope: !667)
!1953 = !DILocation(line: 1112, column: 18, scope: !1949)
!1954 = !DILocation(line: 1112, column: 5, scope: !1949)
!1955 = !DILocation(line: 1112, column: 16, scope: !1949)
!1956 = !DILocation(line: 1114, column: 18, scope: !1949)
!1957 = !DILocation(line: 1114, column: 5, scope: !1949)
!1958 = !DILocation(line: 1114, column: 16, scope: !1949)
!1959 = !DILocation(line: 1115, column: 7, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !667, file: !1, line: 1115, column: 7)
!1961 = !DILocation(line: 1115, column: 41, scope: !1960)
!1962 = !DILocation(line: 1115, column: 38, scope: !1960)
!1963 = !DILocation(line: 1115, column: 7, scope: !667)
!1964 = !DILocation(line: 1116, column: 35, scope: !1960)
!1965 = !DILocation(line: 1116, column: 5, scope: !1960)
!1966 = !DILocation(line: 1116, column: 33, scope: !1960)
!1967 = !DILocation(line: 1117, column: 35, scope: !667)
!1968 = !DILocation(line: 1117, column: 3, scope: !667)
!1969 = !DILocation(line: 1117, column: 33, scope: !667)
!1970 = !DILocation(line: 1118, column: 17, scope: !667)
!1971 = !DILocation(line: 1118, column: 3, scope: !667)
!1972 = !DILocation(line: 1118, column: 15, scope: !667)
!1973 = !DILocation(line: 1119, column: 22, scope: !667)
!1974 = !DILocation(line: 1119, column: 3, scope: !667)
!1975 = !DILocation(line: 1119, column: 20, scope: !667)
!1976 = !DILocation(line: 1120, column: 18, scope: !667)
!1977 = !DILocation(line: 1120, column: 3, scope: !667)
!1978 = !DILocation(line: 1120, column: 16, scope: !667)
!1979 = !DILocation(line: 1126, column: 18, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !667, file: !1, line: 1126, column: 9)
!1981 = !DILocation(line: 1126, column: 29, scope: !1980)
!1982 = !DILocation(line: 1126, column: 35, scope: !1980)
!1983 = !DILocation(line: 1126, column: 44, scope: !1980)
!1984 = !DILocation(line: 1126, column: 52, scope: !1980)
!1985 = !DILocation(line: 1126, column: 10, scope: !1980)
!1986 = !DILocation(line: 1127, column: 7, scope: !1980)
!1987 = !DILocation(line: 1127, column: 22, scope: !1988)
!1988 = !DILexicalBlockFile(scope: !1980, file: !1, discriminator: 1)
!1989 = !DILocation(line: 1127, column: 30, scope: !1988)
!1990 = !DILocation(line: 1127, column: 11, scope: !1988)
!1991 = !DILocation(line: 1126, column: 9, scope: !1992)
!1992 = !DILexicalBlockFile(scope: !667, file: !1, discriminator: 1)
!1993 = !DILocation(line: 1128, column: 22, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1980, file: !1, line: 1127, column: 40)
!1995 = !DILocation(line: 1128, column: 7, scope: !1994)
!1996 = !DILocation(line: 1129, column: 7, scope: !1994)
!1997 = !DILocation(line: 1131, column: 5, scope: !667)
!1998 = !DILocation(line: 1131, column: 15, scope: !667)
!1999 = !DILocation(line: 1147, column: 10, scope: !667)
!2000 = !DILocation(line: 1147, column: 3, scope: !667)
!2001 = !DILocation(line: 1148, column: 1, scope: !667)
!2002 = !DILocalVariable(name: "oldParser", arg: 1, scope: !1005, file: !1, line: 5805, type: !162)
!2003 = !DILocation(line: 5805, column: 20, scope: !1005)
!2004 = !DILocalVariable(name: "newDtd", arg: 2, scope: !1005, file: !1, line: 5805, type: !523)
!2005 = !DILocation(line: 5805, column: 36, scope: !1005)
!2006 = !DILocalVariable(name: "oldDtd", arg: 3, scope: !1005, file: !1, line: 5805, type: !1008)
!2007 = !DILocation(line: 5805, column: 55, scope: !1005)
!2008 = !DILocalVariable(name: "ms", arg: 4, scope: !1005, file: !1, line: 5805, type: !543)
!2009 = !DILocation(line: 5805, column: 96, scope: !1005)
!2010 = !DILocalVariable(name: "iter", scope: !1005, file: !1, line: 5807, type: !901)
!2011 = !DILocation(line: 5807, column: 19, scope: !1005)
!2012 = !DILocation(line: 5811, column: 30, scope: !1005)
!2013 = !DILocation(line: 5811, column: 38, scope: !1005)
!2014 = !DILocation(line: 5811, column: 3, scope: !1005)
!2015 = !DILocation(line: 5812, column: 3, scope: !1005)
!2016 = !DILocalVariable(name: "name", scope: !2017, file: !1, line: 5813, type: !210)
!2017 = distinct !DILexicalBlock(scope: !2018, file: !1, line: 5812, column: 12)
!2018 = distinct !DILexicalBlock(scope: !2019, file: !1, line: 5812, column: 3)
!2019 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 5812, column: 3)
!2020 = !DILocation(line: 5813, column: 21, scope: !2017)
!2021 = !DILocalVariable(name: "oldP", scope: !2017, file: !1, line: 5814, type: !2022)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64, align: 64)
!2023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!2024 = !DILocation(line: 5814, column: 19, scope: !2017)
!2025 = !DILocation(line: 5814, column: 36, scope: !2017)
!2026 = !DILocation(line: 5814, column: 26, scope: !2017)
!2027 = !DILocation(line: 5815, column: 10, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2017, file: !1, line: 5815, column: 9)
!2029 = !DILocation(line: 5815, column: 9, scope: !2017)
!2030 = !DILocation(line: 5816, column: 7, scope: !2028)
!2031 = !DILocation(line: 5817, column: 29, scope: !2017)
!2032 = !DILocation(line: 5817, column: 37, scope: !2017)
!2033 = !DILocation(line: 5817, column: 44, scope: !2017)
!2034 = !DILocation(line: 5817, column: 50, scope: !2017)
!2035 = !DILocation(line: 5817, column: 12, scope: !2017)
!2036 = !DILocation(line: 5817, column: 10, scope: !2017)
!2037 = !DILocation(line: 5818, column: 10, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !2017, file: !1, line: 5818, column: 9)
!2039 = !DILocation(line: 5818, column: 9, scope: !2017)
!2040 = !DILocation(line: 5819, column: 7, scope: !2038)
!2041 = !DILocation(line: 5820, column: 17, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2017, file: !1, line: 5820, column: 9)
!2043 = !DILocation(line: 5820, column: 30, scope: !2042)
!2044 = !DILocation(line: 5820, column: 38, scope: !2042)
!2045 = !DILocation(line: 5820, column: 49, scope: !2042)
!2046 = !DILocation(line: 5820, column: 10, scope: !2042)
!2047 = !DILocation(line: 5820, column: 9, scope: !2017)
!2048 = !DILocation(line: 5821, column: 7, scope: !2042)
!2049 = !DILocation(line: 5812, column: 3, scope: !2050)
!2050 = !DILexicalBlockFile(scope: !2018, file: !1, discriminator: 1)
!2051 = !DILocation(line: 5824, column: 30, scope: !1005)
!2052 = !DILocation(line: 5824, column: 38, scope: !1005)
!2053 = !DILocation(line: 5824, column: 3, scope: !1005)
!2054 = !DILocation(line: 5828, column: 3, scope: !1005)
!2055 = !DILocalVariable(name: "newA", scope: !2056, file: !1, line: 5829, type: !519)
!2056 = distinct !DILexicalBlock(scope: !2057, file: !1, line: 5828, column: 12)
!2057 = distinct !DILexicalBlock(scope: !2058, file: !1, line: 5828, column: 3)
!2058 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 5828, column: 3)
!2059 = !DILocation(line: 5829, column: 19, scope: !2056)
!2060 = !DILocalVariable(name: "name", scope: !2056, file: !1, line: 5830, type: !210)
!2061 = !DILocation(line: 5830, column: 21, scope: !2056)
!2062 = !DILocalVariable(name: "oldA", scope: !2056, file: !1, line: 5831, type: !505)
!2063 = !DILocation(line: 5831, column: 25, scope: !2056)
!2064 = !DILocation(line: 5831, column: 48, scope: !2056)
!2065 = !DILocation(line: 5831, column: 32, scope: !2056)
!2066 = !DILocation(line: 5833, column: 10, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2056, file: !1, line: 5833, column: 9)
!2068 = !DILocation(line: 5833, column: 9, scope: !2056)
!2069 = !DILocation(line: 5834, column: 7, scope: !2067)
!2070 = !DILocation(line: 5836, column: 10, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2056, file: !1, line: 5836, column: 9)
!2072 = !DILocation(line: 5836, column: 10, scope: !2073)
!2073 = !DILexicalBlockFile(scope: !2071, file: !1, discriminator: 1)
!2074 = !DILocation(line: 5836, column: 9, scope: !2073)
!2075 = !DILocation(line: 5836, column: 10, scope: !2076)
!2076 = !DILexicalBlockFile(scope: !2071, file: !1, discriminator: 2)
!2077 = !DILocation(line: 5836, column: 10, scope: !2078)
!2078 = !DILexicalBlockFile(scope: !2071, file: !1, discriminator: 3)
!2079 = !DILocation(line: 5836, column: 9, scope: !2078)
!2080 = !DILocation(line: 5837, column: 7, scope: !2071)
!2081 = !DILocation(line: 5838, column: 29, scope: !2056)
!2082 = !DILocation(line: 5838, column: 37, scope: !2056)
!2083 = !DILocation(line: 5838, column: 44, scope: !2056)
!2084 = !DILocation(line: 5838, column: 50, scope: !2056)
!2085 = !DILocation(line: 5838, column: 12, scope: !2056)
!2086 = !DILocation(line: 5838, column: 10, scope: !2056)
!2087 = !DILocation(line: 5839, column: 10, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2056, file: !1, line: 5839, column: 9)
!2089 = !DILocation(line: 5839, column: 9, scope: !2056)
!2090 = !DILocation(line: 5840, column: 7, scope: !2088)
!2091 = !DILocation(line: 5841, column: 5, scope: !2056)
!2092 = !DILocation(line: 5842, column: 35, scope: !2056)
!2093 = !DILocation(line: 5842, column: 48, scope: !2056)
!2094 = !DILocation(line: 5842, column: 56, scope: !2056)
!2095 = !DILocation(line: 5842, column: 71, scope: !2056)
!2096 = !DILocation(line: 5842, column: 28, scope: !2056)
!2097 = !DILocation(line: 5842, column: 12, scope: !2056)
!2098 = !DILocation(line: 5842, column: 10, scope: !2056)
!2099 = !DILocation(line: 5844, column: 10, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2056, file: !1, line: 5844, column: 9)
!2101 = !DILocation(line: 5844, column: 9, scope: !2056)
!2102 = !DILocation(line: 5845, column: 7, scope: !2100)
!2103 = !DILocation(line: 5846, column: 28, scope: !2056)
!2104 = !DILocation(line: 5846, column: 34, scope: !2056)
!2105 = !DILocation(line: 5846, column: 5, scope: !2056)
!2106 = !DILocation(line: 5846, column: 11, scope: !2056)
!2107 = !DILocation(line: 5846, column: 26, scope: !2056)
!2108 = !DILocation(line: 5847, column: 9, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2056, file: !1, line: 5847, column: 9)
!2110 = !DILocation(line: 5847, column: 15, scope: !2109)
!2111 = !DILocation(line: 5847, column: 9, scope: !2056)
!2112 = !DILocation(line: 5848, column: 21, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 5847, column: 23)
!2114 = !DILocation(line: 5848, column: 27, scope: !2113)
!2115 = !DILocation(line: 5848, column: 7, scope: !2113)
!2116 = !DILocation(line: 5848, column: 13, scope: !2113)
!2117 = !DILocation(line: 5848, column: 19, scope: !2113)
!2118 = !DILocation(line: 5849, column: 11, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2113, file: !1, line: 5849, column: 11)
!2120 = !DILocation(line: 5849, column: 17, scope: !2119)
!2121 = !DILocation(line: 5849, column: 28, scope: !2119)
!2122 = !DILocation(line: 5849, column: 36, scope: !2119)
!2123 = !DILocation(line: 5849, column: 24, scope: !2119)
!2124 = !DILocation(line: 5849, column: 11, scope: !2113)
!2125 = !DILocation(line: 5850, column: 25, scope: !2119)
!2126 = !DILocation(line: 5850, column: 33, scope: !2119)
!2127 = !DILocation(line: 5850, column: 9, scope: !2119)
!2128 = !DILocation(line: 5850, column: 15, scope: !2119)
!2129 = !DILocation(line: 5850, column: 22, scope: !2119)
!2130 = !DILocation(line: 5852, column: 41, scope: !2119)
!2131 = !DILocation(line: 5852, column: 54, scope: !2119)
!2132 = !DILocation(line: 5852, column: 62, scope: !2119)
!2133 = !DILocation(line: 5853, column: 41, scope: !2119)
!2134 = !DILocation(line: 5853, column: 47, scope: !2119)
!2135 = !DILocation(line: 5853, column: 55, scope: !2119)
!2136 = !DILocation(line: 5852, column: 34, scope: !2119)
!2137 = !DILocation(line: 5852, column: 24, scope: !2119)
!2138 = !DILocation(line: 5852, column: 9, scope: !2119)
!2139 = !DILocation(line: 5852, column: 15, scope: !2119)
!2140 = !DILocation(line: 5852, column: 22, scope: !2119)
!2141 = !DILocation(line: 5854, column: 5, scope: !2113)
!2142 = !DILocation(line: 5828, column: 3, scope: !2143)
!2143 = !DILexicalBlockFile(scope: !2057, file: !1, discriminator: 1)
!2144 = !DILocation(line: 5859, column: 30, scope: !1005)
!2145 = !DILocation(line: 5859, column: 38, scope: !1005)
!2146 = !DILocation(line: 5859, column: 3, scope: !1005)
!2147 = !DILocation(line: 5861, column: 3, scope: !1005)
!2148 = !DILocalVariable(name: "i", scope: !2149, file: !1, line: 5862, type: !223)
!2149 = distinct !DILexicalBlock(scope: !2150, file: !1, line: 5861, column: 12)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !1, line: 5861, column: 3)
!2151 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 5861, column: 3)
!2152 = !DILocation(line: 5862, column: 9, scope: !2149)
!2153 = !DILocalVariable(name: "newE", scope: !2149, file: !1, line: 5863, type: !471)
!2154 = !DILocation(line: 5863, column: 19, scope: !2149)
!2155 = !DILocalVariable(name: "name", scope: !2149, file: !1, line: 5864, type: !210)
!2156 = !DILocation(line: 5864, column: 21, scope: !2149)
!2157 = !DILocalVariable(name: "oldE", scope: !2149, file: !1, line: 5865, type: !2158)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64, align: 64)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!2160 = !DILocation(line: 5865, column: 25, scope: !2149)
!2161 = !DILocation(line: 5865, column: 48, scope: !2149)
!2162 = !DILocation(line: 5865, column: 32, scope: !2149)
!2163 = !DILocation(line: 5866, column: 10, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 5866, column: 9)
!2165 = !DILocation(line: 5866, column: 9, scope: !2149)
!2166 = !DILocation(line: 5867, column: 7, scope: !2164)
!2167 = !DILocation(line: 5868, column: 29, scope: !2149)
!2168 = !DILocation(line: 5868, column: 37, scope: !2149)
!2169 = !DILocation(line: 5868, column: 44, scope: !2149)
!2170 = !DILocation(line: 5868, column: 50, scope: !2149)
!2171 = !DILocation(line: 5868, column: 12, scope: !2149)
!2172 = !DILocation(line: 5868, column: 10, scope: !2149)
!2173 = !DILocation(line: 5869, column: 10, scope: !2174)
!2174 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 5869, column: 9)
!2175 = !DILocation(line: 5869, column: 9, scope: !2149)
!2176 = !DILocation(line: 5870, column: 7, scope: !2174)
!2177 = !DILocation(line: 5871, column: 35, scope: !2149)
!2178 = !DILocation(line: 5871, column: 48, scope: !2149)
!2179 = !DILocation(line: 5871, column: 56, scope: !2149)
!2180 = !DILocation(line: 5871, column: 71, scope: !2149)
!2181 = !DILocation(line: 5871, column: 28, scope: !2149)
!2182 = !DILocation(line: 5871, column: 12, scope: !2149)
!2183 = !DILocation(line: 5871, column: 10, scope: !2149)
!2184 = !DILocation(line: 5873, column: 10, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 5873, column: 9)
!2186 = !DILocation(line: 5873, column: 9, scope: !2149)
!2187 = !DILocation(line: 5874, column: 7, scope: !2185)
!2188 = !DILocation(line: 5875, column: 9, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 5875, column: 9)
!2190 = !DILocation(line: 5875, column: 15, scope: !2189)
!2191 = !DILocation(line: 5875, column: 9, scope: !2149)
!2192 = !DILocation(line: 5877, column: 11, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 5875, column: 29)
!2194 = !DILocation(line: 5877, column: 15, scope: !2193)
!2195 = !DILocation(line: 5877, column: 26, scope: !2193)
!2196 = !DILocation(line: 5877, column: 32, scope: !2193)
!2197 = !DILocation(line: 5877, column: 45, scope: !2193)
!2198 = !DILocation(line: 5876, column: 27, scope: !2193)
!2199 = !DILocation(line: 5876, column: 7, scope: !2193)
!2200 = !DILocation(line: 5876, column: 13, scope: !2193)
!2201 = !DILocation(line: 5876, column: 25, scope: !2193)
!2202 = !DILocation(line: 5878, column: 12, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 5878, column: 11)
!2204 = !DILocation(line: 5878, column: 18, scope: !2203)
!2205 = !DILocation(line: 5878, column: 11, scope: !2193)
!2206 = !DILocation(line: 5879, column: 9, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 5878, column: 31)
!2208 = !DILocation(line: 5879, column: 13, scope: !2207)
!2209 = !DILocation(line: 5879, column: 22, scope: !2207)
!2210 = !DILocation(line: 5880, column: 9, scope: !2207)
!2211 = !DILocation(line: 5882, column: 5, scope: !2193)
!2212 = !DILocation(line: 5883, column: 9, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 5883, column: 9)
!2214 = !DILocation(line: 5883, column: 15, scope: !2213)
!2215 = !DILocation(line: 5883, column: 9, scope: !2149)
!2216 = !DILocation(line: 5885, column: 18, scope: !2213)
!2217 = !DILocation(line: 5885, column: 31, scope: !2213)
!2218 = !DILocation(line: 5885, column: 39, scope: !2213)
!2219 = !DILocation(line: 5885, column: 54, scope: !2213)
!2220 = !DILocation(line: 5885, column: 60, scope: !2213)
!2221 = !DILocation(line: 5885, column: 67, scope: !2213)
!2222 = !DILocation(line: 5885, column: 11, scope: !2213)
!2223 = !DILocation(line: 5884, column: 21, scope: !2213)
!2224 = !DILocation(line: 5884, column: 7, scope: !2213)
!2225 = !DILocation(line: 5884, column: 13, scope: !2213)
!2226 = !DILocation(line: 5884, column: 19, scope: !2213)
!2227 = !DILocation(line: 5886, column: 51, scope: !2149)
!2228 = !DILocation(line: 5886, column: 57, scope: !2149)
!2229 = !DILocation(line: 5886, column: 30, scope: !2149)
!2230 = !DILocation(line: 5886, column: 36, scope: !2149)
!2231 = !DILocation(line: 5886, column: 49, scope: !2149)
!2232 = !DILocation(line: 5886, column: 5, scope: !2149)
!2233 = !DILocation(line: 5886, column: 11, scope: !2149)
!2234 = !DILocation(line: 5886, column: 28, scope: !2149)
!2235 = !DILocation(line: 5887, column: 9, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 5887, column: 9)
!2237 = !DILocation(line: 5887, column: 15, scope: !2236)
!2238 = !DILocation(line: 5887, column: 9, scope: !2149)
!2239 = !DILocation(line: 5888, column: 39, scope: !2236)
!2240 = !DILocation(line: 5888, column: 52, scope: !2236)
!2241 = !DILocation(line: 5888, column: 60, scope: !2236)
!2242 = !DILocation(line: 5889, column: 39, scope: !2236)
!2243 = !DILocation(line: 5889, column: 45, scope: !2236)
!2244 = !DILocation(line: 5889, column: 53, scope: !2236)
!2245 = !DILocation(line: 5888, column: 32, scope: !2236)
!2246 = !DILocation(line: 5888, column: 22, scope: !2236)
!2247 = !DILocation(line: 5888, column: 7, scope: !2236)
!2248 = !DILocation(line: 5888, column: 13, scope: !2236)
!2249 = !DILocation(line: 5888, column: 20, scope: !2236)
!2250 = !DILocation(line: 5890, column: 12, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 5890, column: 5)
!2252 = !DILocation(line: 5890, column: 10, scope: !2251)
!2253 = !DILocation(line: 5890, column: 17, scope: !2254)
!2254 = !DILexicalBlockFile(scope: !2255, file: !1, discriminator: 1)
!2255 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 5890, column: 5)
!2256 = !DILocation(line: 5890, column: 21, scope: !2254)
!2257 = !DILocation(line: 5890, column: 27, scope: !2254)
!2258 = !DILocation(line: 5890, column: 19, scope: !2254)
!2259 = !DILocation(line: 5890, column: 5, scope: !2254)
!2260 = !DILocation(line: 5892, column: 18, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2255, file: !1, line: 5890, column: 46)
!2262 = !DILocation(line: 5892, column: 31, scope: !2261)
!2263 = !DILocation(line: 5892, column: 39, scope: !2261)
!2264 = !DILocation(line: 5892, column: 72, scope: !2261)
!2265 = !DILocation(line: 5892, column: 54, scope: !2261)
!2266 = !DILocation(line: 5892, column: 60, scope: !2261)
!2267 = !DILocation(line: 5892, column: 75, scope: !2261)
!2268 = !DILocation(line: 5892, column: 79, scope: !2261)
!2269 = !DILocation(line: 5892, column: 11, scope: !2261)
!2270 = !DILocation(line: 5891, column: 33, scope: !2261)
!2271 = !DILocation(line: 5891, column: 25, scope: !2261)
!2272 = !DILocation(line: 5891, column: 7, scope: !2261)
!2273 = !DILocation(line: 5891, column: 13, scope: !2261)
!2274 = !DILocation(line: 5891, column: 28, scope: !2261)
!2275 = !DILocation(line: 5891, column: 31, scope: !2261)
!2276 = !DILocation(line: 5893, column: 56, scope: !2261)
!2277 = !DILocation(line: 5893, column: 38, scope: !2261)
!2278 = !DILocation(line: 5893, column: 44, scope: !2261)
!2279 = !DILocation(line: 5893, column: 59, scope: !2261)
!2280 = !DILocation(line: 5893, column: 25, scope: !2261)
!2281 = !DILocation(line: 5893, column: 7, scope: !2261)
!2282 = !DILocation(line: 5893, column: 13, scope: !2261)
!2283 = !DILocation(line: 5893, column: 28, scope: !2261)
!2284 = !DILocation(line: 5893, column: 36, scope: !2261)
!2285 = !DILocation(line: 5894, column: 29, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2261, file: !1, line: 5894, column: 11)
!2287 = !DILocation(line: 5894, column: 11, scope: !2286)
!2288 = !DILocation(line: 5894, column: 17, scope: !2286)
!2289 = !DILocation(line: 5894, column: 32, scope: !2286)
!2290 = !DILocation(line: 5894, column: 11, scope: !2261)
!2291 = !DILocation(line: 5896, column: 32, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2286, file: !1, line: 5894, column: 39)
!2293 = !DILocation(line: 5896, column: 40, scope: !2292)
!2294 = !DILocation(line: 5896, column: 65, scope: !2292)
!2295 = !DILocation(line: 5896, column: 47, scope: !2292)
!2296 = !DILocation(line: 5896, column: 53, scope: !2292)
!2297 = !DILocation(line: 5896, column: 68, scope: !2292)
!2298 = !DILocation(line: 5896, column: 15, scope: !2292)
!2299 = !DILocation(line: 5895, column: 27, scope: !2292)
!2300 = !DILocation(line: 5895, column: 9, scope: !2292)
!2301 = !DILocation(line: 5895, column: 15, scope: !2292)
!2302 = !DILocation(line: 5895, column: 30, scope: !2292)
!2303 = !DILocation(line: 5896, column: 13, scope: !2292)
!2304 = !DILocation(line: 5897, column: 32, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2292, file: !1, line: 5897, column: 13)
!2306 = !DILocation(line: 5897, column: 14, scope: !2305)
!2307 = !DILocation(line: 5897, column: 20, scope: !2305)
!2308 = !DILocation(line: 5897, column: 35, scope: !2305)
!2309 = !DILocation(line: 5897, column: 13, scope: !2292)
!2310 = !DILocation(line: 5898, column: 11, scope: !2305)
!2311 = !DILocation(line: 5899, column: 7, scope: !2292)
!2312 = !DILocation(line: 5901, column: 27, scope: !2286)
!2313 = !DILocation(line: 5901, column: 9, scope: !2286)
!2314 = !DILocation(line: 5901, column: 15, scope: !2286)
!2315 = !DILocation(line: 5901, column: 30, scope: !2286)
!2316 = !DILocation(line: 5901, column: 36, scope: !2286)
!2317 = !DILocation(line: 5902, column: 5, scope: !2261)
!2318 = !DILocation(line: 5890, column: 42, scope: !2319)
!2319 = !DILexicalBlockFile(scope: !2255, file: !1, discriminator: 2)
!2320 = !DILocation(line: 5890, column: 5, scope: !2319)
!2321 = !DILocation(line: 5861, column: 3, scope: !2322)
!2322 = !DILexicalBlockFile(scope: !2150, file: !1, discriminator: 1)
!2323 = !DILocation(line: 5906, column: 24, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !1005, file: !1, line: 5906, column: 7)
!2325 = !DILocation(line: 5907, column: 26, scope: !2324)
!2326 = !DILocation(line: 5907, column: 34, scope: !2324)
!2327 = !DILocation(line: 5908, column: 26, scope: !2324)
!2328 = !DILocation(line: 5908, column: 34, scope: !2324)
!2329 = !DILocation(line: 5909, column: 26, scope: !2324)
!2330 = !DILocation(line: 5909, column: 34, scope: !2324)
!2331 = !DILocation(line: 5906, column: 8, scope: !2324)
!2332 = !DILocation(line: 5906, column: 7, scope: !1005)
!2333 = !DILocation(line: 5910, column: 7, scope: !2324)
!2334 = !DILocation(line: 5921, column: 28, scope: !1005)
!2335 = !DILocation(line: 5921, column: 36, scope: !1005)
!2336 = !DILocation(line: 5921, column: 3, scope: !1005)
!2337 = !DILocation(line: 5921, column: 11, scope: !1005)
!2338 = !DILocation(line: 5921, column: 26, scope: !1005)
!2339 = !DILocation(line: 5922, column: 32, scope: !1005)
!2340 = !DILocation(line: 5922, column: 40, scope: !1005)
!2341 = !DILocation(line: 5922, column: 3, scope: !1005)
!2342 = !DILocation(line: 5922, column: 11, scope: !1005)
!2343 = !DILocation(line: 5922, column: 30, scope: !1005)
!2344 = !DILocation(line: 5923, column: 24, scope: !1005)
!2345 = !DILocation(line: 5923, column: 32, scope: !1005)
!2346 = !DILocation(line: 5923, column: 3, scope: !1005)
!2347 = !DILocation(line: 5923, column: 11, scope: !1005)
!2348 = !DILocation(line: 5923, column: 22, scope: !1005)
!2349 = !DILocation(line: 5926, column: 23, scope: !1005)
!2350 = !DILocation(line: 5926, column: 31, scope: !1005)
!2351 = !DILocation(line: 5926, column: 3, scope: !1005)
!2352 = !DILocation(line: 5926, column: 11, scope: !1005)
!2353 = !DILocation(line: 5926, column: 21, scope: !1005)
!2354 = !DILocation(line: 5927, column: 22, scope: !1005)
!2355 = !DILocation(line: 5927, column: 30, scope: !1005)
!2356 = !DILocation(line: 5927, column: 3, scope: !1005)
!2357 = !DILocation(line: 5927, column: 11, scope: !1005)
!2358 = !DILocation(line: 5927, column: 20, scope: !1005)
!2359 = !DILocation(line: 5928, column: 30, scope: !1005)
!2360 = !DILocation(line: 5928, column: 38, scope: !1005)
!2361 = !DILocation(line: 5928, column: 3, scope: !1005)
!2362 = !DILocation(line: 5928, column: 11, scope: !1005)
!2363 = !DILocation(line: 5928, column: 28, scope: !1005)
!2364 = !DILocation(line: 5929, column: 23, scope: !1005)
!2365 = !DILocation(line: 5929, column: 31, scope: !1005)
!2366 = !DILocation(line: 5929, column: 3, scope: !1005)
!2367 = !DILocation(line: 5929, column: 11, scope: !1005)
!2368 = !DILocation(line: 5929, column: 21, scope: !1005)
!2369 = !DILocation(line: 5930, column: 24, scope: !1005)
!2370 = !DILocation(line: 5930, column: 32, scope: !1005)
!2371 = !DILocation(line: 5930, column: 3, scope: !1005)
!2372 = !DILocation(line: 5930, column: 11, scope: !1005)
!2373 = !DILocation(line: 5930, column: 22, scope: !1005)
!2374 = !DILocation(line: 5931, column: 24, scope: !1005)
!2375 = !DILocation(line: 5931, column: 32, scope: !1005)
!2376 = !DILocation(line: 5931, column: 3, scope: !1005)
!2377 = !DILocation(line: 5931, column: 11, scope: !1005)
!2378 = !DILocation(line: 5931, column: 22, scope: !1005)
!2379 = !DILocation(line: 5933, column: 3, scope: !1005)
!2380 = !DILocation(line: 5934, column: 1, scope: !1005)
!2381 = !DILocalVariable(name: "parser", arg: 1, scope: !994, file: !1, line: 5616, type: !162)
!2382 = !DILocation(line: 5616, column: 23, scope: !994)
!2383 = !DILocalVariable(name: "context", arg: 2, scope: !994, file: !1, line: 5616, type: !210)
!2384 = !DILocation(line: 5616, column: 47, scope: !994)
!2385 = !DILocalVariable(name: "dtd", scope: !994, file: !1, line: 5618, type: !2386)
!2386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !523)
!2387 = !DILocation(line: 5618, column: 15, scope: !994)
!2388 = !DILocation(line: 5618, column: 21, scope: !994)
!2389 = !DILocalVariable(name: "s", scope: !994, file: !1, line: 5619, type: !210)
!2390 = !DILocation(line: 5619, column: 19, scope: !994)
!2391 = !DILocation(line: 5619, column: 23, scope: !994)
!2392 = !DILocation(line: 5621, column: 3, scope: !994)
!2393 = !DILocation(line: 5621, column: 11, scope: !2394)
!2394 = !DILexicalBlockFile(scope: !994, file: !1, discriminator: 1)
!2395 = !DILocation(line: 5621, column: 10, scope: !2394)
!2396 = !DILocation(line: 5621, column: 19, scope: !2394)
!2397 = !DILocation(line: 5621, column: 3, scope: !2394)
!2398 = !DILocation(line: 5622, column: 10, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2400, file: !1, line: 5622, column: 9)
!2400 = distinct !DILexicalBlock(scope: !994, file: !1, line: 5621, column: 35)
!2401 = !DILocation(line: 5622, column: 9, scope: !2399)
!2402 = !DILocation(line: 5622, column: 12, scope: !2399)
!2403 = !DILocation(line: 5622, column: 27, scope: !2399)
!2404 = !DILocation(line: 5622, column: 31, scope: !2405)
!2405 = !DILexicalBlockFile(scope: !2399, file: !1, discriminator: 1)
!2406 = !DILocation(line: 5622, column: 30, scope: !2405)
!2407 = !DILocation(line: 5622, column: 33, scope: !2405)
!2408 = !DILocation(line: 5622, column: 9, scope: !2405)
!2409 = !DILocalVariable(name: "e", scope: !2410, file: !1, line: 5623, type: !443)
!2410 = distinct !DILexicalBlock(scope: !2399, file: !1, line: 5622, column: 49)
!2411 = !DILocation(line: 5623, column: 15, scope: !2410)
!2412 = !DILocation(line: 5624, column: 12, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2410, file: !1, line: 5624, column: 11)
!2414 = !DILocation(line: 5624, column: 12, scope: !2415)
!2415 = !DILexicalBlockFile(scope: !2413, file: !1, discriminator: 1)
!2416 = !DILocation(line: 5624, column: 11, scope: !2415)
!2417 = !DILocation(line: 5624, column: 12, scope: !2418)
!2418 = !DILexicalBlockFile(scope: !2413, file: !1, discriminator: 2)
!2419 = !DILocation(line: 5624, column: 12, scope: !2420)
!2420 = !DILexicalBlockFile(scope: !2413, file: !1, discriminator: 3)
!2421 = !DILocation(line: 5624, column: 11, scope: !2420)
!2422 = !DILocation(line: 5625, column: 9, scope: !2413)
!2423 = !DILocation(line: 5626, column: 28, scope: !2410)
!2424 = !DILocation(line: 5626, column: 37, scope: !2410)
!2425 = !DILocation(line: 5626, column: 42, scope: !2410)
!2426 = !DILocation(line: 5626, column: 59, scope: !2410)
!2427 = !DILocation(line: 5626, column: 21, scope: !2410)
!2428 = !DILocation(line: 5626, column: 11, scope: !2410)
!2429 = !DILocation(line: 5626, column: 9, scope: !2410)
!2430 = !DILocation(line: 5627, column: 11, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2410, file: !1, line: 5627, column: 11)
!2432 = !DILocation(line: 5627, column: 11, scope: !2410)
!2433 = !DILocation(line: 5628, column: 9, scope: !2431)
!2434 = !DILocation(line: 5628, column: 12, scope: !2431)
!2435 = !DILocation(line: 5628, column: 17, scope: !2431)
!2436 = !DILocation(line: 5629, column: 12, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2410, file: !1, line: 5629, column: 11)
!2438 = !DILocation(line: 5629, column: 11, scope: !2437)
!2439 = !DILocation(line: 5629, column: 14, scope: !2437)
!2440 = !DILocation(line: 5629, column: 11, scope: !2410)
!2441 = !DILocation(line: 5630, column: 10, scope: !2437)
!2442 = !DILocation(line: 5630, column: 9, scope: !2437)
!2443 = !DILocation(line: 5631, column: 17, scope: !2410)
!2444 = !DILocation(line: 5631, column: 15, scope: !2410)
!2445 = !DILocation(line: 5632, column: 7, scope: !2410)
!2446 = !DILocation(line: 5633, column: 5, scope: !2410)
!2447 = !DILocation(line: 5634, column: 15, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2399, file: !1, line: 5634, column: 14)
!2449 = !DILocation(line: 5634, column: 14, scope: !2448)
!2450 = !DILocation(line: 5634, column: 17, scope: !2448)
!2451 = !DILocation(line: 5634, column: 14, scope: !2399)
!2452 = !DILocalVariable(name: "prefix", scope: !2453, file: !1, line: 5635, type: !477)
!2453 = distinct !DILexicalBlock(scope: !2448, file: !1, line: 5634, column: 41)
!2454 = !DILocation(line: 5635, column: 15, scope: !2453)
!2455 = !DILocation(line: 5636, column: 11, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 5636, column: 11)
!2457 = !DILocation(line: 5636, column: 33, scope: !2456)
!2458 = !DILocation(line: 5636, column: 11, scope: !2453)
!2459 = !DILocation(line: 5637, column: 19, scope: !2456)
!2460 = !DILocation(line: 5637, column: 24, scope: !2456)
!2461 = !DILocation(line: 5637, column: 16, scope: !2456)
!2462 = !DILocation(line: 5637, column: 9, scope: !2456)
!2463 = !DILocation(line: 5639, column: 14, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !1, line: 5639, column: 13)
!2465 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 5638, column: 12)
!2466 = !DILocation(line: 5639, column: 14, scope: !2467)
!2467 = !DILexicalBlockFile(scope: !2464, file: !1, discriminator: 1)
!2468 = !DILocation(line: 5639, column: 13, scope: !2467)
!2469 = !DILocation(line: 5639, column: 14, scope: !2470)
!2470 = !DILexicalBlockFile(scope: !2464, file: !1, discriminator: 2)
!2471 = !DILocation(line: 5639, column: 14, scope: !2472)
!2472 = !DILexicalBlockFile(scope: !2464, file: !1, discriminator: 3)
!2473 = !DILocation(line: 5639, column: 13, scope: !2472)
!2474 = !DILocation(line: 5640, column: 11, scope: !2464)
!2475 = !DILocation(line: 5641, column: 35, scope: !2465)
!2476 = !DILocation(line: 5641, column: 44, scope: !2465)
!2477 = !DILocation(line: 5641, column: 49, scope: !2465)
!2478 = !DILocation(line: 5641, column: 59, scope: !2465)
!2479 = !DILocation(line: 5641, column: 28, scope: !2465)
!2480 = !DILocation(line: 5641, column: 18, scope: !2465)
!2481 = !DILocation(line: 5641, column: 16, scope: !2465)
!2482 = !DILocation(line: 5643, column: 14, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2465, file: !1, line: 5643, column: 13)
!2484 = !DILocation(line: 5643, column: 13, scope: !2465)
!2485 = !DILocation(line: 5644, column: 11, scope: !2483)
!2486 = !DILocation(line: 5645, column: 13, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2465, file: !1, line: 5645, column: 13)
!2488 = !DILocation(line: 5645, column: 21, scope: !2487)
!2489 = !DILocation(line: 5645, column: 29, scope: !2487)
!2490 = !DILocation(line: 5645, column: 26, scope: !2487)
!2491 = !DILocation(line: 5645, column: 13, scope: !2465)
!2492 = !DILocation(line: 5646, column: 42, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2487, file: !1, line: 5645, column: 51)
!2494 = !DILocation(line: 5646, column: 47, scope: !2493)
!2495 = !DILocation(line: 5646, column: 53, scope: !2493)
!2496 = !DILocation(line: 5646, column: 61, scope: !2493)
!2497 = !DILocation(line: 5646, column: 26, scope: !2493)
!2498 = !DILocation(line: 5646, column: 11, scope: !2493)
!2499 = !DILocation(line: 5646, column: 19, scope: !2493)
!2500 = !DILocation(line: 5646, column: 24, scope: !2493)
!2501 = !DILocation(line: 5647, column: 16, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2493, file: !1, line: 5647, column: 15)
!2503 = !DILocation(line: 5647, column: 24, scope: !2502)
!2504 = !DILocation(line: 5647, column: 15, scope: !2493)
!2505 = !DILocation(line: 5648, column: 13, scope: !2502)
!2506 = !DILocation(line: 5649, column: 9, scope: !2493)
!2507 = !DILocation(line: 5650, column: 9, scope: !2465)
!2508 = !DILocation(line: 5652, column: 22, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 5652, column: 7)
!2510 = !DILocation(line: 5652, column: 24, scope: !2509)
!2511 = !DILocation(line: 5652, column: 20, scope: !2509)
!2512 = !DILocation(line: 5652, column: 12, scope: !2509)
!2513 = !DILocation(line: 5653, column: 13, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2509, file: !1, line: 5652, column: 7)
!2515 = !DILocation(line: 5653, column: 12, scope: !2514)
!2516 = !DILocation(line: 5653, column: 21, scope: !2514)
!2517 = !DILocation(line: 5653, column: 36, scope: !2514)
!2518 = !DILocation(line: 5653, column: 40, scope: !2519)
!2519 = !DILexicalBlockFile(scope: !2514, file: !1, discriminator: 1)
!2520 = !DILocation(line: 5653, column: 39, scope: !2519)
!2521 = !DILocation(line: 5653, column: 48, scope: !2519)
!2522 = !DILocation(line: 5652, column: 7, scope: !2523)
!2523 = !DILexicalBlockFile(scope: !2509, file: !1, discriminator: 1)
!2524 = !DILocation(line: 5655, column: 14, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 5655, column: 13)
!2526 = !DILocation(line: 5655, column: 14, scope: !2527)
!2527 = !DILexicalBlockFile(scope: !2525, file: !1, discriminator: 1)
!2528 = !DILocation(line: 5655, column: 13, scope: !2527)
!2529 = !DILocation(line: 5655, column: 14, scope: !2530)
!2530 = !DILexicalBlockFile(scope: !2525, file: !1, discriminator: 2)
!2531 = !DILocation(line: 5655, column: 14, scope: !2532)
!2532 = !DILexicalBlockFile(scope: !2525, file: !1, discriminator: 3)
!2533 = !DILocation(line: 5655, column: 13, scope: !2532)
!2534 = !DILocation(line: 5656, column: 11, scope: !2525)
!2535 = !DILocation(line: 5655, column: 14, scope: !2536)
!2536 = !DILexicalBlockFile(scope: !2525, file: !1, discriminator: 4)
!2537 = !DILocation(line: 5654, column: 19, scope: !2514)
!2538 = !DILocation(line: 5652, column: 7, scope: !2539)
!2539 = !DILexicalBlockFile(scope: !2514, file: !1, discriminator: 2)
!2540 = !DILocation(line: 5657, column: 12, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 5657, column: 11)
!2542 = !DILocation(line: 5657, column: 12, scope: !2543)
!2543 = !DILexicalBlockFile(scope: !2541, file: !1, discriminator: 1)
!2544 = !DILocation(line: 5657, column: 11, scope: !2543)
!2545 = !DILocation(line: 5657, column: 12, scope: !2546)
!2546 = !DILexicalBlockFile(scope: !2541, file: !1, discriminator: 2)
!2547 = !DILocation(line: 5657, column: 12, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !2541, file: !1, discriminator: 3)
!2549 = !DILocation(line: 5657, column: 11, scope: !2548)
!2550 = !DILocation(line: 5658, column: 9, scope: !2541)
!2551 = !DILocation(line: 5659, column: 22, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 5659, column: 11)
!2553 = !DILocation(line: 5659, column: 30, scope: !2552)
!2554 = !DILocation(line: 5659, column: 44, scope: !2552)
!2555 = !DILocation(line: 5660, column: 23, scope: !2552)
!2556 = !DILocation(line: 5659, column: 11, scope: !2552)
!2557 = !DILocation(line: 5660, column: 42, scope: !2552)
!2558 = !DILocation(line: 5659, column: 11, scope: !2453)
!2559 = !DILocation(line: 5661, column: 9, scope: !2552)
!2560 = !DILocation(line: 5662, column: 7, scope: !2453)
!2561 = !DILocation(line: 5663, column: 12, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 5663, column: 11)
!2563 = !DILocation(line: 5663, column: 11, scope: !2562)
!2564 = !DILocation(line: 5663, column: 20, scope: !2562)
!2565 = !DILocation(line: 5663, column: 11, scope: !2453)
!2566 = !DILocation(line: 5664, column: 9, scope: !2562)
!2567 = !DILocation(line: 5665, column: 11, scope: !2453)
!2568 = !DILocation(line: 5665, column: 9, scope: !2453)
!2569 = !DILocation(line: 5666, column: 5, scope: !2453)
!2570 = !DILocation(line: 5668, column: 12, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2572, file: !1, line: 5668, column: 11)
!2572 = distinct !DILexicalBlock(scope: !2448, file: !1, line: 5667, column: 10)
!2573 = !DILocation(line: 5668, column: 12, scope: !2574)
!2574 = !DILexicalBlockFile(scope: !2571, file: !1, discriminator: 1)
!2575 = !DILocation(line: 5668, column: 11, scope: !2574)
!2576 = !DILocation(line: 5668, column: 12, scope: !2577)
!2577 = !DILexicalBlockFile(scope: !2571, file: !1, discriminator: 2)
!2578 = !DILocation(line: 5668, column: 12, scope: !2579)
!2579 = !DILexicalBlockFile(scope: !2571, file: !1, discriminator: 3)
!2580 = !DILocation(line: 5668, column: 11, scope: !2579)
!2581 = !DILocation(line: 5669, column: 9, scope: !2571)
!2582 = !DILocation(line: 5670, column: 8, scope: !2572)
!2583 = !DILocation(line: 5621, column: 3, scope: !2584)
!2584 = !DILexicalBlockFile(scope: !994, file: !1, discriminator: 2)
!2585 = !DILocation(line: 5673, column: 3, scope: !994)
!2586 = !DILocation(line: 5674, column: 1, scope: !994)
!2587 = !DILocalVariable(name: "parser", arg: 1, scope: !670, file: !1, line: 1164, type: !162)
!2588 = !DILocation(line: 1164, column: 27, scope: !670)
!2589 = !DILocalVariable(name: "tagList", scope: !670, file: !1, line: 1166, type: !594)
!2590 = !DILocation(line: 1166, column: 8, scope: !670)
!2591 = !DILocalVariable(name: "entityList", scope: !670, file: !1, line: 1167, type: !434)
!2592 = !DILocation(line: 1167, column: 25, scope: !670)
!2593 = !DILocation(line: 1168, column: 7, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !670, file: !1, line: 1168, column: 7)
!2595 = !DILocation(line: 1168, column: 14, scope: !2594)
!2596 = !DILocation(line: 1168, column: 7, scope: !670)
!2597 = !DILocation(line: 1169, column: 5, scope: !2594)
!2598 = !DILocation(line: 1171, column: 13, scope: !670)
!2599 = !DILocation(line: 1171, column: 11, scope: !670)
!2600 = !DILocation(line: 1172, column: 3, scope: !670)
!2601 = !DILocalVariable(name: "p", scope: !2602, file: !1, line: 1173, type: !594)
!2602 = distinct !DILexicalBlock(scope: !2603, file: !1, line: 1172, column: 12)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !1, line: 1172, column: 3)
!2604 = distinct !DILexicalBlock(scope: !670, file: !1, line: 1172, column: 3)
!2605 = !DILocation(line: 1173, column: 10, scope: !2602)
!2606 = !DILocation(line: 1174, column: 9, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2602, file: !1, line: 1174, column: 9)
!2608 = !DILocation(line: 1174, column: 17, scope: !2607)
!2609 = !DILocation(line: 1174, column: 9, scope: !2602)
!2610 = !DILocation(line: 1175, column: 11, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2612, file: !1, line: 1175, column: 11)
!2612 = distinct !DILexicalBlock(scope: !2607, file: !1, line: 1174, column: 26)
!2613 = !DILocation(line: 1175, column: 23, scope: !2611)
!2614 = !DILocation(line: 1175, column: 11, scope: !2612)
!2615 = !DILocation(line: 1176, column: 9, scope: !2611)
!2616 = !DILocation(line: 1177, column: 17, scope: !2612)
!2617 = !DILocation(line: 1177, column: 15, scope: !2612)
!2618 = !DILocation(line: 1178, column: 7, scope: !2612)
!2619 = !DILocation(line: 1178, column: 19, scope: !2612)
!2620 = !DILocation(line: 1179, column: 5, scope: !2612)
!2621 = !DILocation(line: 1180, column: 9, scope: !2602)
!2622 = !DILocation(line: 1180, column: 7, scope: !2602)
!2623 = !DILocation(line: 1181, column: 15, scope: !2602)
!2624 = !DILocation(line: 1181, column: 24, scope: !2602)
!2625 = !DILocation(line: 1181, column: 13, scope: !2602)
!2626 = !DILocation(line: 1182, column: 5, scope: !2602)
!2627 = !DILocation(line: 1183, column: 21, scope: !2602)
!2628 = !DILocation(line: 1183, column: 24, scope: !2602)
!2629 = !DILocation(line: 1183, column: 34, scope: !2602)
!2630 = !DILocation(line: 1183, column: 5, scope: !2602)
!2631 = !DILocation(line: 1184, column: 5, scope: !2602)
!2632 = !DILocation(line: 1172, column: 3, scope: !2633)
!2633 = !DILexicalBlockFile(scope: !2603, file: !1, discriminator: 1)
!2634 = !DILocation(line: 1187, column: 16, scope: !670)
!2635 = !DILocation(line: 1187, column: 14, scope: !670)
!2636 = !DILocation(line: 1188, column: 3, scope: !670)
!2637 = !DILocalVariable(name: "openEntity", scope: !2638, file: !1, line: 1189, type: !434)
!2638 = distinct !DILexicalBlock(scope: !2639, file: !1, line: 1188, column: 12)
!2639 = distinct !DILexicalBlock(scope: !2640, file: !1, line: 1188, column: 3)
!2640 = distinct !DILexicalBlock(scope: !670, file: !1, line: 1188, column: 3)
!2641 = !DILocation(line: 1189, column: 27, scope: !2638)
!2642 = !DILocation(line: 1190, column: 9, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 1190, column: 9)
!2644 = !DILocation(line: 1190, column: 20, scope: !2643)
!2645 = !DILocation(line: 1190, column: 9, scope: !2638)
!2646 = !DILocation(line: 1191, column: 11, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2648, file: !1, line: 1191, column: 11)
!2648 = distinct !DILexicalBlock(scope: !2643, file: !1, line: 1190, column: 29)
!2649 = !DILocation(line: 1191, column: 32, scope: !2647)
!2650 = !DILocation(line: 1191, column: 11, scope: !2648)
!2651 = !DILocation(line: 1192, column: 9, scope: !2647)
!2652 = !DILocation(line: 1193, column: 20, scope: !2648)
!2653 = !DILocation(line: 1193, column: 18, scope: !2648)
!2654 = !DILocation(line: 1194, column: 7, scope: !2648)
!2655 = !DILocation(line: 1194, column: 28, scope: !2648)
!2656 = !DILocation(line: 1195, column: 5, scope: !2648)
!2657 = !DILocation(line: 1196, column: 18, scope: !2638)
!2658 = !DILocation(line: 1196, column: 16, scope: !2638)
!2659 = !DILocation(line: 1197, column: 18, scope: !2638)
!2660 = !DILocation(line: 1197, column: 30, scope: !2638)
!2661 = !DILocation(line: 1197, column: 16, scope: !2638)
!2662 = !DILocation(line: 1198, column: 5, scope: !2638)
!2663 = !DILocation(line: 1188, column: 3, scope: !2664)
!2664 = !DILexicalBlockFile(scope: !2639, file: !1, discriminator: 1)
!2665 = !DILocation(line: 1201, column: 19, scope: !670)
!2666 = !DILocation(line: 1201, column: 36, scope: !670)
!2667 = !DILocation(line: 1201, column: 3, scope: !670)
!2668 = !DILocation(line: 1202, column: 19, scope: !670)
!2669 = !DILocation(line: 1202, column: 38, scope: !670)
!2670 = !DILocation(line: 1202, column: 3, scope: !670)
!2671 = !DILocation(line: 1203, column: 16, scope: !670)
!2672 = !DILocation(line: 1203, column: 3, scope: !670)
!2673 = !DILocation(line: 1204, column: 16, scope: !670)
!2674 = !DILocation(line: 1204, column: 3, scope: !670)
!2675 = !DILocation(line: 1211, column: 7, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !670, file: !1, line: 1211, column: 7)
!2677 = !DILocation(line: 1211, column: 7, scope: !670)
!2678 = !DILocation(line: 1213, column: 16, scope: !2676)
!2679 = !DILocation(line: 1213, column: 33, scope: !2676)
!2680 = !DILocation(line: 1213, column: 32, scope: !2676)
!2681 = !DILocation(line: 1213, column: 22, scope: !2676)
!2682 = !DILocation(line: 1213, column: 48, scope: !2676)
!2683 = !DILocation(line: 1213, column: 56, scope: !2676)
!2684 = !DILocation(line: 1213, column: 5, scope: !2676)
!2685 = !DILocation(line: 1214, column: 3, scope: !670)
!2686 = !DILocation(line: 1218, column: 3, scope: !670)
!2687 = !DILocation(line: 1219, column: 3, scope: !670)
!2688 = !DILocation(line: 1220, column: 3, scope: !670)
!2689 = !DILocation(line: 1221, column: 3, scope: !670)
!2690 = !DILocation(line: 1222, column: 3, scope: !670)
!2691 = !DILocation(line: 1223, column: 7, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !670, file: !1, line: 1223, column: 7)
!2693 = !DILocation(line: 1223, column: 7, scope: !670)
!2694 = !DILocation(line: 1224, column: 5, scope: !2692)
!2695 = !DILocation(line: 1224, column: 28, scope: !2692)
!2696 = !DILocation(line: 1225, column: 3, scope: !670)
!2697 = !DILocation(line: 1226, column: 1, scope: !670)
!2698 = !DILocation(line: 1226, column: 1, scope: !2699)
!2699 = !DILexicalBlockFile(scope: !670, file: !1, discriminator: 1)
!2700 = !DILocalVariable(name: "parser", arg: 1, scope: !987, file: !1, line: 2164, type: !162)
!2701 = !DILocation(line: 2164, column: 40, scope: !987)
!2702 = !DILocalVariable(name: "start", arg: 2, scope: !987, file: !1, line: 2165, type: !192)
!2703 = !DILocation(line: 2165, column: 41, scope: !987)
!2704 = !DILocalVariable(name: "end", arg: 3, scope: !987, file: !1, line: 2166, type: !192)
!2705 = !DILocation(line: 2166, column: 41, scope: !987)
!2706 = !DILocalVariable(name: "endPtr", arg: 4, scope: !987, file: !1, line: 2167, type: !332)
!2707 = !DILocation(line: 2167, column: 42, scope: !987)
!2708 = !DILocalVariable(name: "result", scope: !987, file: !1, line: 2169, type: !24)
!2709 = !DILocation(line: 2169, column: 18, scope: !987)
!2710 = !DILocation(line: 2169, column: 46, scope: !987)
!2711 = !DILocation(line: 2169, column: 27, scope: !987)
!2712 = !DILocation(line: 2170, column: 7, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !987, file: !1, line: 2170, column: 7)
!2714 = !DILocation(line: 2170, column: 14, scope: !2713)
!2715 = !DILocation(line: 2170, column: 7, scope: !987)
!2716 = !DILocation(line: 2171, column: 12, scope: !2713)
!2717 = !DILocation(line: 2171, column: 5, scope: !2713)
!2718 = !DILocation(line: 2172, column: 3, scope: !987)
!2719 = !DILocation(line: 2172, column: 13, scope: !987)
!2720 = !DILocation(line: 2173, column: 39, scope: !987)
!2721 = !DILocation(line: 2173, column: 47, scope: !987)
!2722 = !DILocation(line: 2173, column: 54, scope: !987)
!2723 = !DILocation(line: 2173, column: 59, scope: !987)
!2724 = !DILocation(line: 2173, column: 10, scope: !987)
!2725 = !DILocation(line: 2173, column: 3, scope: !987)
!2726 = !DILocation(line: 2174, column: 1, scope: !987)
!2727 = !DILocalVariable(name: "bindings", arg: 1, scope: !977, file: !1, line: 1151, type: !483)
!2728 = !DILocation(line: 1151, column: 26, scope: !977)
!2729 = !DILocalVariable(name: "parser", arg: 2, scope: !977, file: !1, line: 1151, type: !162)
!2730 = !DILocation(line: 1151, column: 47, scope: !977)
!2731 = !DILocation(line: 1153, column: 3, scope: !977)
!2732 = !DILocalVariable(name: "b", scope: !2733, file: !1, line: 1154, type: !483)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !1, line: 1153, column: 12)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !1, line: 1153, column: 3)
!2735 = distinct !DILexicalBlock(scope: !977, file: !1, line: 1153, column: 3)
!2736 = !DILocation(line: 1154, column: 14, scope: !2733)
!2737 = !DILocation(line: 1154, column: 18, scope: !2733)
!2738 = !DILocation(line: 1155, column: 10, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2733, file: !1, line: 1155, column: 9)
!2740 = !DILocation(line: 1155, column: 9, scope: !2733)
!2741 = !DILocation(line: 1156, column: 7, scope: !2739)
!2742 = !DILocation(line: 1157, column: 16, scope: !2733)
!2743 = !DILocation(line: 1157, column: 19, scope: !2733)
!2744 = !DILocation(line: 1157, column: 14, scope: !2733)
!2745 = !DILocation(line: 1158, column: 5, scope: !2733)
!2746 = !DILocation(line: 1159, column: 5, scope: !2733)
!2747 = !DILocation(line: 1153, column: 3, scope: !2748)
!2748 = !DILexicalBlockFile(scope: !2734, file: !1, discriminator: 1)
!2749 = !DILocation(line: 1161, column: 1, scope: !977)
!2750 = !DILocalVariable(name: "pool", arg: 1, scope: !1019, file: !1, line: 6182, type: !863)
!2751 = !DILocation(line: 6182, column: 26, scope: !1019)
!2752 = !DILocalVariable(name: "p", scope: !1019, file: !1, line: 6184, type: !552)
!2753 = !DILocation(line: 6184, column: 10, scope: !1019)
!2754 = !DILocation(line: 6184, column: 14, scope: !1019)
!2755 = !DILocation(line: 6184, column: 20, scope: !1019)
!2756 = !DILocation(line: 6185, column: 3, scope: !1019)
!2757 = !DILocation(line: 6185, column: 10, scope: !2758)
!2758 = !DILexicalBlockFile(scope: !1019, file: !1, discriminator: 1)
!2759 = !DILocation(line: 6185, column: 3, scope: !2758)
!2760 = !DILocalVariable(name: "tem", scope: !2761, file: !1, line: 6186, type: !552)
!2761 = distinct !DILexicalBlock(scope: !1019, file: !1, line: 6185, column: 13)
!2762 = !DILocation(line: 6186, column: 12, scope: !2761)
!2763 = !DILocation(line: 6186, column: 18, scope: !2761)
!2764 = !DILocation(line: 6186, column: 21, scope: !2761)
!2765 = !DILocation(line: 6187, column: 5, scope: !2761)
!2766 = !DILocation(line: 6187, column: 11, scope: !2761)
!2767 = !DILocation(line: 6187, column: 16, scope: !2761)
!2768 = !DILocation(line: 6187, column: 25, scope: !2761)
!2769 = !DILocation(line: 6188, column: 9, scope: !2761)
!2770 = !DILocation(line: 6188, column: 7, scope: !2761)
!2771 = !DILocation(line: 6185, column: 3, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !1019, file: !1, discriminator: 2)
!2773 = !DILocation(line: 6190, column: 7, scope: !1019)
!2774 = !DILocation(line: 6190, column: 13, scope: !1019)
!2775 = !DILocation(line: 6190, column: 5, scope: !1019)
!2776 = !DILocation(line: 6191, column: 3, scope: !1019)
!2777 = !DILocation(line: 6191, column: 10, scope: !2758)
!2778 = !DILocation(line: 6191, column: 3, scope: !2758)
!2779 = !DILocalVariable(name: "tem", scope: !2780, file: !1, line: 6192, type: !552)
!2780 = distinct !DILexicalBlock(scope: !1019, file: !1, line: 6191, column: 13)
!2781 = !DILocation(line: 6192, column: 12, scope: !2780)
!2782 = !DILocation(line: 6192, column: 18, scope: !2780)
!2783 = !DILocation(line: 6192, column: 21, scope: !2780)
!2784 = !DILocation(line: 6193, column: 5, scope: !2780)
!2785 = !DILocation(line: 6193, column: 11, scope: !2780)
!2786 = !DILocation(line: 6193, column: 16, scope: !2780)
!2787 = !DILocation(line: 6193, column: 25, scope: !2780)
!2788 = !DILocation(line: 6194, column: 9, scope: !2780)
!2789 = !DILocation(line: 6194, column: 7, scope: !2780)
!2790 = !DILocation(line: 6191, column: 3, scope: !2772)
!2791 = !DILocation(line: 6196, column: 1, scope: !1019)
!2792 = !DILocalVariable(name: "p", arg: 1, scope: !1001, file: !1, line: 5774, type: !523)
!2793 = !DILocation(line: 5774, column: 17, scope: !1001)
!2794 = !DILocalVariable(name: "isDocEntity", arg: 2, scope: !1001, file: !1, line: 5774, type: !159)
!2795 = !DILocation(line: 5774, column: 29, scope: !1001)
!2796 = !DILocalVariable(name: "ms", arg: 3, scope: !1001, file: !1, line: 5774, type: !543)
!2797 = !DILocation(line: 5774, column: 75, scope: !1001)
!2798 = !DILocalVariable(name: "iter", scope: !1001, file: !1, line: 5776, type: !901)
!2799 = !DILocation(line: 5776, column: 19, scope: !1001)
!2800 = !DILocation(line: 5777, column: 30, scope: !1001)
!2801 = !DILocation(line: 5777, column: 33, scope: !1001)
!2802 = !DILocation(line: 5777, column: 3, scope: !1001)
!2803 = !DILocation(line: 5778, column: 3, scope: !1001)
!2804 = !DILocalVariable(name: "e", scope: !2805, file: !1, line: 5779, type: !471)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !1, line: 5778, column: 12)
!2806 = distinct !DILexicalBlock(scope: !2807, file: !1, line: 5778, column: 3)
!2807 = distinct !DILexicalBlock(scope: !1001, file: !1, line: 5778, column: 3)
!2808 = !DILocation(line: 5779, column: 19, scope: !2805)
!2809 = !DILocation(line: 5779, column: 39, scope: !2805)
!2810 = !DILocation(line: 5779, column: 23, scope: !2805)
!2811 = !DILocation(line: 5780, column: 10, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 5780, column: 9)
!2813 = !DILocation(line: 5780, column: 9, scope: !2805)
!2814 = !DILocation(line: 5781, column: 7, scope: !2812)
!2815 = !DILocation(line: 5782, column: 9, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 5782, column: 9)
!2817 = !DILocation(line: 5782, column: 12, scope: !2816)
!2818 = !DILocation(line: 5782, column: 29, scope: !2816)
!2819 = !DILocation(line: 5782, column: 9, scope: !2805)
!2820 = !DILocation(line: 5783, column: 7, scope: !2816)
!2821 = !DILocation(line: 5783, column: 11, scope: !2816)
!2822 = !DILocation(line: 5783, column: 20, scope: !2816)
!2823 = !DILocation(line: 5783, column: 23, scope: !2816)
!2824 = !DILocation(line: 5778, column: 3, scope: !2825)
!2825 = !DILexicalBlockFile(scope: !2806, file: !1, discriminator: 1)
!2826 = !DILocation(line: 5785, column: 22, scope: !1001)
!2827 = !DILocation(line: 5785, column: 25, scope: !1001)
!2828 = !DILocation(line: 5785, column: 3, scope: !1001)
!2829 = !DILocation(line: 5789, column: 22, scope: !1001)
!2830 = !DILocation(line: 5789, column: 25, scope: !1001)
!2831 = !DILocation(line: 5789, column: 3, scope: !1001)
!2832 = !DILocation(line: 5790, column: 22, scope: !1001)
!2833 = !DILocation(line: 5790, column: 25, scope: !1001)
!2834 = !DILocation(line: 5790, column: 3, scope: !1001)
!2835 = !DILocation(line: 5791, column: 22, scope: !1001)
!2836 = !DILocation(line: 5791, column: 25, scope: !1001)
!2837 = !DILocation(line: 5791, column: 3, scope: !1001)
!2838 = !DILocation(line: 5792, column: 17, scope: !1001)
!2839 = !DILocation(line: 5792, column: 20, scope: !1001)
!2840 = !DILocation(line: 5792, column: 3, scope: !1001)
!2841 = !DILocation(line: 5793, column: 17, scope: !1001)
!2842 = !DILocation(line: 5793, column: 20, scope: !1001)
!2843 = !DILocation(line: 5793, column: 3, scope: !1001)
!2844 = !DILocation(line: 5794, column: 7, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !1001, file: !1, line: 5794, column: 7)
!2846 = !DILocation(line: 5794, column: 7, scope: !1001)
!2847 = !DILocation(line: 5795, column: 5, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2845, file: !1, line: 5794, column: 20)
!2849 = !DILocation(line: 5795, column: 9, scope: !2848)
!2850 = !DILocation(line: 5795, column: 18, scope: !2848)
!2851 = !DILocation(line: 5795, column: 21, scope: !2848)
!2852 = !DILocation(line: 5796, column: 5, scope: !2848)
!2853 = !DILocation(line: 5796, column: 9, scope: !2848)
!2854 = !DILocation(line: 5796, column: 18, scope: !2848)
!2855 = !DILocation(line: 5796, column: 21, scope: !2848)
!2856 = !DILocation(line: 5797, column: 3, scope: !2848)
!2857 = !DILocation(line: 5798, column: 3, scope: !1001)
!2858 = !DILocation(line: 5798, column: 7, scope: !1001)
!2859 = !DILocation(line: 5798, column: 16, scope: !1001)
!2860 = !DILocation(line: 5799, column: 1, scope: !1001)
!2861 = !DILocalVariable(name: "parser", arg: 1, scope: !673, file: !1, line: 1229, type: !162)
!2862 = !DILocation(line: 1229, column: 38, scope: !673)
!2863 = !DILocation(line: 1231, column: 16, scope: !673)
!2864 = !DILocation(line: 1231, column: 3, scope: !673)
!2865 = !DILocation(line: 1231, column: 14, scope: !673)
!2866 = !DILocation(line: 1232, column: 1, scope: !673)
!2867 = !DILocalVariable(name: "parser", arg: 1, scope: !674, file: !1, line: 1235, type: !162)
!2868 = !DILocation(line: 1235, column: 30, scope: !674)
!2869 = !DILocalVariable(name: "useDTD", arg: 2, scope: !674, file: !1, line: 1235, type: !159)
!2870 = !DILocation(line: 1235, column: 47, scope: !674)
!2871 = !DILocation(line: 1244, column: 3, scope: !674)
!2872 = !DILocalVariable(name: "parser", arg: 1, scope: !677, file: !1, line: 1249, type: !162)
!2873 = !DILocation(line: 1249, column: 35, scope: !677)
!2874 = !DILocalVariable(name: "do_nst", arg: 2, scope: !677, file: !1, line: 1249, type: !223)
!2875 = !DILocation(line: 1249, column: 47, scope: !677)
!2876 = !DILocation(line: 1252, column: 7, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !677, file: !1, line: 1252, column: 7)
!2878 = !DILocation(line: 1252, column: 18, scope: !2877)
!2879 = !DILocation(line: 1252, column: 33, scope: !2877)
!2880 = !DILocation(line: 1252, column: 36, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2877, file: !1, discriminator: 1)
!2882 = !DILocation(line: 1252, column: 47, scope: !2881)
!2883 = !DILocation(line: 1252, column: 7, scope: !2881)
!2884 = !DILocation(line: 1253, column: 5, scope: !2877)
!2885 = !DILocation(line: 1254, column: 17, scope: !677)
!2886 = !DILocation(line: 1254, column: 3, scope: !677)
!2887 = !DILocation(line: 1254, column: 15, scope: !677)
!2888 = !DILocation(line: 1255, column: 1, scope: !677)
!2889 = !DILocation(line: 1255, column: 1, scope: !2890)
!2890 = !DILexicalBlockFile(scope: !677, file: !1, discriminator: 1)
!2891 = !DILocalVariable(name: "parser", arg: 1, scope: !680, file: !1, line: 1258, type: !162)
!2892 = !DILocation(line: 1258, column: 28, scope: !680)
!2893 = !DILocalVariable(name: "p", arg: 2, scope: !680, file: !1, line: 1258, type: !161)
!2894 = !DILocation(line: 1258, column: 42, scope: !680)
!2895 = !DILocation(line: 1260, column: 7, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !680, file: !1, line: 1260, column: 7)
!2897 = !DILocation(line: 1260, column: 21, scope: !2896)
!2898 = !DILocation(line: 1260, column: 18, scope: !2896)
!2899 = !DILocation(line: 1260, column: 7, scope: !680)
!2900 = !DILocation(line: 1261, column: 29, scope: !2896)
!2901 = !DILocation(line: 1261, column: 18, scope: !2896)
!2902 = !DILocation(line: 1261, column: 27, scope: !2896)
!2903 = !DILocation(line: 1261, column: 5, scope: !2896)
!2904 = !DILocation(line: 1261, column: 16, scope: !2896)
!2905 = !DILocation(line: 1263, column: 16, scope: !2896)
!2906 = !DILocation(line: 1263, column: 5, scope: !2896)
!2907 = !DILocation(line: 1263, column: 14, scope: !2896)
!2908 = !DILocation(line: 1264, column: 1, scope: !680)
!2909 = !DILocalVariable(name: "parser", arg: 1, scope: !683, file: !1, line: 1267, type: !162)
!2910 = !DILocation(line: 1267, column: 24, scope: !683)
!2911 = !DILocalVariable(name: "p", arg: 2, scope: !683, file: !1, line: 1267, type: !210)
!2912 = !DILocation(line: 1267, column: 48, scope: !683)
!2913 = !DILocation(line: 1269, column: 7, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !683, file: !1, line: 1269, column: 7)
!2915 = !DILocation(line: 1269, column: 7, scope: !683)
!2916 = !DILocation(line: 1270, column: 25, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1269, column: 10)
!2918 = !DILocation(line: 1270, column: 31, scope: !2917)
!2919 = !DILocation(line: 1270, column: 37, scope: !2917)
!2920 = !DILocation(line: 1270, column: 9, scope: !2917)
!2921 = !DILocation(line: 1270, column: 7, scope: !2917)
!2922 = !DILocation(line: 1271, column: 10, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2917, file: !1, line: 1271, column: 9)
!2924 = !DILocation(line: 1271, column: 9, scope: !2917)
!2925 = !DILocation(line: 1272, column: 7, scope: !2923)
!2926 = !DILocation(line: 1273, column: 15, scope: !2917)
!2927 = !DILocation(line: 1273, column: 5, scope: !2917)
!2928 = !DILocation(line: 1273, column: 13, scope: !2917)
!2929 = !DILocation(line: 1274, column: 3, scope: !2917)
!2930 = !DILocation(line: 1276, column: 5, scope: !2914)
!2931 = !DILocation(line: 1276, column: 13, scope: !2914)
!2932 = !DILocation(line: 1277, column: 3, scope: !683)
!2933 = !DILocation(line: 1278, column: 1, scope: !683)
!2934 = !DILocalVariable(name: "parser", arg: 1, scope: !684, file: !1, line: 1281, type: !162)
!2935 = !DILocation(line: 1281, column: 24, scope: !684)
!2936 = !DILocation(line: 1283, column: 10, scope: !684)
!2937 = !DILocation(line: 1283, column: 3, scope: !684)
!2938 = !DILocalVariable(name: "parser", arg: 1, scope: !687, file: !1, line: 1287, type: !162)
!2939 = !DILocation(line: 1287, column: 43, scope: !687)
!2940 = !DILocation(line: 1289, column: 10, scope: !687)
!2941 = !DILocation(line: 1289, column: 3, scope: !687)
!2942 = !DILocalVariable(name: "parser", arg: 1, scope: !690, file: !1, line: 1293, type: !162)
!2943 = !DILocation(line: 1293, column: 36, scope: !690)
!2944 = !DILocation(line: 1295, column: 10, scope: !690)
!2945 = !DILocation(line: 1295, column: 3, scope: !690)
!2946 = !DILocalVariable(name: "parser", arg: 1, scope: !691, file: !1, line: 1307, type: !162)
!2947 = !DILocation(line: 1307, column: 34, scope: !691)
!2948 = !DILocalVariable(name: "start", arg: 2, scope: !691, file: !1, line: 1308, type: !206)
!2949 = !DILocation(line: 1308, column: 47, scope: !691)
!2950 = !DILocalVariable(name: "end", arg: 3, scope: !691, file: !1, line: 1309, type: !214)
!2951 = !DILocation(line: 1309, column: 45, scope: !691)
!2952 = !DILocation(line: 1311, column: 25, scope: !691)
!2953 = !DILocation(line: 1311, column: 3, scope: !691)
!2954 = !DILocation(line: 1311, column: 23, scope: !691)
!2955 = !DILocation(line: 1312, column: 23, scope: !691)
!2956 = !DILocation(line: 1312, column: 3, scope: !691)
!2957 = !DILocation(line: 1312, column: 21, scope: !691)
!2958 = !DILocation(line: 1313, column: 1, scope: !691)
!2959 = !DILocalVariable(name: "parser", arg: 1, scope: !694, file: !1, line: 1316, type: !162)
!2960 = !DILocation(line: 1316, column: 39, scope: !694)
!2961 = !DILocalVariable(name: "start", arg: 2, scope: !694, file: !1, line: 1317, type: !206)
!2962 = !DILocation(line: 1317, column: 52, scope: !694)
!2963 = !DILocation(line: 1318, column: 25, scope: !694)
!2964 = !DILocation(line: 1318, column: 3, scope: !694)
!2965 = !DILocation(line: 1318, column: 23, scope: !694)
!2966 = !DILocation(line: 1319, column: 1, scope: !694)
!2967 = !DILocalVariable(name: "parser", arg: 1, scope: !697, file: !1, line: 1322, type: !162)
!2968 = !DILocation(line: 1322, column: 37, scope: !697)
!2969 = !DILocalVariable(name: "end", arg: 2, scope: !697, file: !1, line: 1323, type: !214)
!2970 = !DILocation(line: 1323, column: 48, scope: !697)
!2971 = !DILocation(line: 1324, column: 23, scope: !697)
!2972 = !DILocation(line: 1324, column: 3, scope: !697)
!2973 = !DILocation(line: 1324, column: 21, scope: !697)
!2974 = !DILocation(line: 1325, column: 1, scope: !697)
!2975 = !DILocalVariable(name: "parser", arg: 1, scope: !700, file: !1, line: 1328, type: !162)
!2976 = !DILocation(line: 1328, column: 40, scope: !700)
!2977 = !DILocalVariable(name: "handler", arg: 2, scope: !700, file: !1, line: 1329, type: !219)
!2978 = !DILocation(line: 1329, column: 54, scope: !700)
!2979 = !DILocation(line: 1331, column: 26, scope: !700)
!2980 = !DILocation(line: 1331, column: 3, scope: !700)
!2981 = !DILocation(line: 1331, column: 24, scope: !700)
!2982 = !DILocation(line: 1332, column: 1, scope: !700)
!2983 = !DILocalVariable(name: "parser", arg: 1, scope: !703, file: !1, line: 1335, type: !162)
!2984 = !DILocation(line: 1335, column: 48, scope: !703)
!2985 = !DILocalVariable(name: "handler", arg: 2, scope: !703, file: !1, line: 1336, type: !225)
!2986 = !DILocation(line: 1336, column: 70, scope: !703)
!2987 = !DILocation(line: 1338, column: 34, scope: !703)
!2988 = !DILocation(line: 1338, column: 3, scope: !703)
!2989 = !DILocation(line: 1338, column: 32, scope: !703)
!2990 = !DILocation(line: 1339, column: 1, scope: !703)
!2991 = !DILocalVariable(name: "parser", arg: 1, scope: !706, file: !1, line: 1342, type: !162)
!2992 = !DILocation(line: 1342, column: 34, scope: !706)
!2993 = !DILocalVariable(name: "handler", arg: 2, scope: !706, file: !1, line: 1343, type: !230)
!2994 = !DILocation(line: 1343, column: 42, scope: !706)
!2995 = !DILocation(line: 1345, column: 20, scope: !706)
!2996 = !DILocation(line: 1345, column: 3, scope: !706)
!2997 = !DILocation(line: 1345, column: 18, scope: !706)
!2998 = !DILocation(line: 1346, column: 1, scope: !706)
!2999 = !DILocalVariable(name: "parser", arg: 1, scope: !709, file: !1, line: 1349, type: !162)
!3000 = !DILocation(line: 1349, column: 39, scope: !709)
!3001 = !DILocalVariable(name: "start", arg: 2, scope: !709, file: !1, line: 1350, type: !232)
!3002 = !DILocation(line: 1350, column: 57, scope: !709)
!3003 = !DILocalVariable(name: "end", arg: 3, scope: !709, file: !1, line: 1351, type: !234)
!3004 = !DILocation(line: 1351, column: 55, scope: !709)
!3005 = !DILocation(line: 1353, column: 30, scope: !709)
!3006 = !DILocation(line: 1353, column: 3, scope: !709)
!3007 = !DILocation(line: 1353, column: 28, scope: !709)
!3008 = !DILocation(line: 1354, column: 28, scope: !709)
!3009 = !DILocation(line: 1354, column: 3, scope: !709)
!3010 = !DILocation(line: 1354, column: 26, scope: !709)
!3011 = !DILocation(line: 1355, column: 1, scope: !709)
!3012 = !DILocalVariable(name: "parser", arg: 1, scope: !712, file: !1, line: 1358, type: !162)
!3013 = !DILocation(line: 1358, column: 44, scope: !712)
!3014 = !DILocalVariable(name: "start", arg: 2, scope: !712, file: !1, line: 1359, type: !232)
!3015 = !DILocation(line: 1359, column: 62, scope: !712)
!3016 = !DILocation(line: 1360, column: 30, scope: !712)
!3017 = !DILocation(line: 1360, column: 3, scope: !712)
!3018 = !DILocation(line: 1360, column: 28, scope: !712)
!3019 = !DILocation(line: 1361, column: 1, scope: !712)
!3020 = !DILocalVariable(name: "parser", arg: 1, scope: !715, file: !1, line: 1364, type: !162)
!3021 = !DILocation(line: 1364, column: 42, scope: !715)
!3022 = !DILocalVariable(name: "end", arg: 2, scope: !715, file: !1, line: 1365, type: !234)
!3023 = !DILocation(line: 1365, column: 58, scope: !715)
!3024 = !DILocation(line: 1366, column: 28, scope: !715)
!3025 = !DILocation(line: 1366, column: 3, scope: !715)
!3026 = !DILocation(line: 1366, column: 26, scope: !715)
!3027 = !DILocation(line: 1367, column: 1, scope: !715)
!3028 = !DILocalVariable(name: "parser", arg: 1, scope: !718, file: !1, line: 1370, type: !162)
!3029 = !DILocation(line: 1370, column: 34, scope: !718)
!3030 = !DILocalVariable(name: "handler", arg: 2, scope: !718, file: !1, line: 1371, type: !236)
!3031 = !DILocation(line: 1371, column: 42, scope: !718)
!3032 = !DILocation(line: 1373, column: 20, scope: !718)
!3033 = !DILocation(line: 1373, column: 3, scope: !718)
!3034 = !DILocation(line: 1373, column: 18, scope: !718)
!3035 = !DILocation(line: 1374, column: 3, scope: !718)
!3036 = !DILocation(line: 1374, column: 33, scope: !718)
!3037 = !DILocation(line: 1375, column: 1, scope: !718)
!3038 = !DILocalVariable(name: "parser", arg: 1, scope: !721, file: !1, line: 1378, type: !162)
!3039 = !DILocation(line: 1378, column: 40, scope: !721)
!3040 = !DILocalVariable(name: "handler", arg: 2, scope: !721, file: !1, line: 1379, type: !236)
!3041 = !DILocation(line: 1379, column: 48, scope: !721)
!3042 = !DILocation(line: 1381, column: 20, scope: !721)
!3043 = !DILocation(line: 1381, column: 3, scope: !721)
!3044 = !DILocation(line: 1381, column: 18, scope: !721)
!3045 = !DILocation(line: 1382, column: 3, scope: !721)
!3046 = !DILocation(line: 1382, column: 33, scope: !721)
!3047 = !DILocation(line: 1383, column: 1, scope: !721)
!3048 = !DILocalVariable(name: "parser", arg: 1, scope: !722, file: !1, line: 1386, type: !162)
!3049 = !DILocation(line: 1386, column: 38, scope: !722)
!3050 = !DILocalVariable(name: "start", arg: 2, scope: !722, file: !1, line: 1387, type: !238)
!3051 = !DILocation(line: 1387, column: 55, scope: !722)
!3052 = !DILocalVariable(name: "end", arg: 3, scope: !722, file: !1, line: 1388, type: !243)
!3053 = !DILocation(line: 1388, column: 53, scope: !722)
!3054 = !DILocation(line: 1390, column: 29, scope: !722)
!3055 = !DILocation(line: 1390, column: 3, scope: !722)
!3056 = !DILocation(line: 1390, column: 27, scope: !722)
!3057 = !DILocation(line: 1391, column: 27, scope: !722)
!3058 = !DILocation(line: 1391, column: 3, scope: !722)
!3059 = !DILocation(line: 1391, column: 25, scope: !722)
!3060 = !DILocation(line: 1392, column: 1, scope: !722)
!3061 = !DILocalVariable(name: "parser", arg: 1, scope: !725, file: !1, line: 1395, type: !162)
!3062 = !DILocation(line: 1395, column: 43, scope: !725)
!3063 = !DILocalVariable(name: "start", arg: 2, scope: !725, file: !1, line: 1396, type: !238)
!3064 = !DILocation(line: 1396, column: 60, scope: !725)
!3065 = !DILocation(line: 1397, column: 29, scope: !725)
!3066 = !DILocation(line: 1397, column: 3, scope: !725)
!3067 = !DILocation(line: 1397, column: 27, scope: !725)
!3068 = !DILocation(line: 1398, column: 1, scope: !725)
!3069 = !DILocalVariable(name: "parser", arg: 1, scope: !728, file: !1, line: 1401, type: !162)
!3070 = !DILocation(line: 1401, column: 41, scope: !728)
!3071 = !DILocalVariable(name: "end", arg: 2, scope: !728, file: !1, line: 1402, type: !243)
!3072 = !DILocation(line: 1402, column: 56, scope: !728)
!3073 = !DILocation(line: 1403, column: 27, scope: !728)
!3074 = !DILocation(line: 1403, column: 3, scope: !728)
!3075 = !DILocation(line: 1403, column: 25, scope: !728)
!3076 = !DILocation(line: 1404, column: 1, scope: !728)
!3077 = !DILocalVariable(name: "parser", arg: 1, scope: !731, file: !1, line: 1407, type: !162)
!3078 = !DILocation(line: 1407, column: 45, scope: !731)
!3079 = !DILocalVariable(name: "handler", arg: 2, scope: !731, file: !1, line: 1408, type: !245)
!3080 = !DILocation(line: 1408, column: 64, scope: !731)
!3081 = !DILocation(line: 1410, column: 31, scope: !731)
!3082 = !DILocation(line: 1410, column: 3, scope: !731)
!3083 = !DILocation(line: 1410, column: 29, scope: !731)
!3084 = !DILocation(line: 1411, column: 1, scope: !731)
!3085 = !DILocalVariable(name: "parser", arg: 1, scope: !734, file: !1, line: 1414, type: !162)
!3086 = !DILocation(line: 1414, column: 39, scope: !734)
!3087 = !DILocalVariable(name: "handler", arg: 2, scope: !734, file: !1, line: 1415, type: !250)
!3088 = !DILocation(line: 1415, column: 52, scope: !734)
!3089 = !DILocation(line: 1417, column: 25, scope: !734)
!3090 = !DILocation(line: 1417, column: 3, scope: !734)
!3091 = !DILocation(line: 1417, column: 23, scope: !734)
!3092 = !DILocation(line: 1418, column: 1, scope: !734)
!3093 = !DILocalVariable(name: "parser", arg: 1, scope: !737, file: !1, line: 1421, type: !162)
!3094 = !DILocation(line: 1421, column: 40, scope: !737)
!3095 = !DILocalVariable(name: "start", arg: 2, scope: !737, file: !1, line: 1422, type: !255)
!3096 = !DILocation(line: 1422, column: 59, scope: !737)
!3097 = !DILocalVariable(name: "end", arg: 3, scope: !737, file: !1, line: 1423, type: !257)
!3098 = !DILocation(line: 1423, column: 57, scope: !737)
!3099 = !DILocation(line: 1425, column: 31, scope: !737)
!3100 = !DILocation(line: 1425, column: 3, scope: !737)
!3101 = !DILocation(line: 1425, column: 29, scope: !737)
!3102 = !DILocation(line: 1426, column: 29, scope: !737)
!3103 = !DILocation(line: 1426, column: 3, scope: !737)
!3104 = !DILocation(line: 1426, column: 27, scope: !737)
!3105 = !DILocation(line: 1427, column: 1, scope: !737)
!3106 = !DILocalVariable(name: "parser", arg: 1, scope: !740, file: !1, line: 1430, type: !162)
!3107 = !DILocation(line: 1430, column: 45, scope: !740)
!3108 = !DILocalVariable(name: "start", arg: 2, scope: !740, file: !1, line: 1431, type: !255)
!3109 = !DILocation(line: 1431, column: 64, scope: !740)
!3110 = !DILocation(line: 1432, column: 31, scope: !740)
!3111 = !DILocation(line: 1432, column: 3, scope: !740)
!3112 = !DILocation(line: 1432, column: 29, scope: !740)
!3113 = !DILocation(line: 1433, column: 1, scope: !740)
!3114 = !DILocalVariable(name: "parser", arg: 1, scope: !743, file: !1, line: 1436, type: !162)
!3115 = !DILocation(line: 1436, column: 43, scope: !743)
!3116 = !DILocalVariable(name: "end", arg: 2, scope: !743, file: !1, line: 1437, type: !257)
!3117 = !DILocation(line: 1437, column: 60, scope: !743)
!3118 = !DILocation(line: 1438, column: 29, scope: !743)
!3119 = !DILocation(line: 1438, column: 3, scope: !743)
!3120 = !DILocation(line: 1438, column: 27, scope: !743)
!3121 = !DILocation(line: 1439, column: 1, scope: !743)
!3122 = !DILocalVariable(name: "parser", arg: 1, scope: !746, file: !1, line: 1442, type: !162)
!3123 = !DILocation(line: 1442, column: 40, scope: !746)
!3124 = !DILocalVariable(name: "handler", arg: 2, scope: !746, file: !1, line: 1443, type: !259)
!3125 = !DILocation(line: 1443, column: 54, scope: !746)
!3126 = !DILocation(line: 1445, column: 26, scope: !746)
!3127 = !DILocation(line: 1445, column: 3, scope: !746)
!3128 = !DILocation(line: 1445, column: 24, scope: !746)
!3129 = !DILocation(line: 1446, column: 1, scope: !746)
!3130 = !DILocalVariable(name: "parser", arg: 1, scope: !749, file: !1, line: 1449, type: !162)
!3131 = !DILocation(line: 1449, column: 44, scope: !749)
!3132 = !DILocalVariable(name: "handler", arg: 2, scope: !749, file: !1, line: 1450, type: !264)
!3133 = !DILocation(line: 1450, column: 62, scope: !749)
!3134 = !DILocation(line: 1452, column: 30, scope: !749)
!3135 = !DILocation(line: 1452, column: 3, scope: !749)
!3136 = !DILocation(line: 1452, column: 28, scope: !749)
!3137 = !DILocation(line: 1453, column: 1, scope: !749)
!3138 = !DILocalVariable(name: "parser", arg: 1, scope: !752, file: !1, line: 1456, type: !162)
!3139 = !DILocation(line: 1456, column: 47, scope: !752)
!3140 = !DILocalVariable(name: "arg", arg: 2, scope: !752, file: !1, line: 1456, type: !161)
!3141 = !DILocation(line: 1456, column: 61, scope: !752)
!3142 = !DILocation(line: 1458, column: 7, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !752, file: !1, line: 1458, column: 7)
!3144 = !DILocation(line: 1458, column: 7, scope: !752)
!3145 = !DILocation(line: 1459, column: 47, scope: !3143)
!3146 = !DILocation(line: 1459, column: 35, scope: !3143)
!3147 = !DILocation(line: 1459, column: 5, scope: !3143)
!3148 = !DILocation(line: 1459, column: 33, scope: !3143)
!3149 = !DILocation(line: 1461, column: 35, scope: !3143)
!3150 = !DILocation(line: 1461, column: 5, scope: !3143)
!3151 = !DILocation(line: 1461, column: 33, scope: !3143)
!3152 = !DILocation(line: 1462, column: 1, scope: !752)
!3153 = !DILocalVariable(name: "parser", arg: 1, scope: !753, file: !1, line: 1465, type: !162)
!3154 = !DILocation(line: 1465, column: 40, scope: !753)
!3155 = !DILocalVariable(name: "handler", arg: 2, scope: !753, file: !1, line: 1466, type: !270)
!3156 = !DILocation(line: 1466, column: 54, scope: !753)
!3157 = !DILocation(line: 1468, column: 26, scope: !753)
!3158 = !DILocation(line: 1468, column: 3, scope: !753)
!3159 = !DILocation(line: 1468, column: 24, scope: !753)
!3160 = !DILocation(line: 1469, column: 1, scope: !753)
!3161 = !DILocalVariable(name: "parser", arg: 1, scope: !756, file: !1, line: 1472, type: !162)
!3162 = !DILocation(line: 1472, column: 42, scope: !756)
!3163 = !DILocalVariable(name: "handler", arg: 2, scope: !756, file: !1, line: 1473, type: !272)
!3164 = !DILocation(line: 1473, column: 58, scope: !756)
!3165 = !DILocalVariable(name: "data", arg: 3, scope: !756, file: !1, line: 1474, type: !161)
!3166 = !DILocation(line: 1474, column: 37, scope: !756)
!3167 = !DILocation(line: 1476, column: 28, scope: !756)
!3168 = !DILocation(line: 1476, column: 3, scope: !756)
!3169 = !DILocation(line: 1476, column: 26, scope: !756)
!3170 = !DILocation(line: 1477, column: 32, scope: !756)
!3171 = !DILocation(line: 1477, column: 3, scope: !756)
!3172 = !DILocation(line: 1477, column: 30, scope: !756)
!3173 = !DILocation(line: 1478, column: 1, scope: !756)
!3174 = !DILocalVariable(name: "parser", arg: 1, scope: !759, file: !1, line: 1481, type: !162)
!3175 = !DILocation(line: 1481, column: 38, scope: !759)
!3176 = !DILocalVariable(name: "eldecl", arg: 2, scope: !759, file: !1, line: 1482, type: !291)
!3177 = !DILocation(line: 1482, column: 50, scope: !759)
!3178 = !DILocation(line: 1484, column: 24, scope: !759)
!3179 = !DILocation(line: 1484, column: 3, scope: !759)
!3180 = !DILocation(line: 1484, column: 22, scope: !759)
!3181 = !DILocation(line: 1485, column: 1, scope: !759)
!3182 = !DILocalVariable(name: "parser", arg: 1, scope: !762, file: !1, line: 1488, type: !162)
!3183 = !DILocation(line: 1488, column: 38, scope: !762)
!3184 = !DILocalVariable(name: "attdecl", arg: 2, scope: !762, file: !1, line: 1489, type: !306)
!3185 = !DILocation(line: 1489, column: 50, scope: !762)
!3186 = !DILocation(line: 1491, column: 24, scope: !762)
!3187 = !DILocation(line: 1491, column: 3, scope: !762)
!3188 = !DILocation(line: 1491, column: 22, scope: !762)
!3189 = !DILocation(line: 1492, column: 1, scope: !762)
!3190 = !DILocalVariable(name: "parser", arg: 1, scope: !765, file: !1, line: 1495, type: !162)
!3191 = !DILocation(line: 1495, column: 37, scope: !765)
!3192 = !DILocalVariable(name: "handler", arg: 2, scope: !765, file: !1, line: 1496, type: !311)
!3193 = !DILocation(line: 1496, column: 48, scope: !765)
!3194 = !DILocation(line: 1498, column: 23, scope: !765)
!3195 = !DILocation(line: 1498, column: 3, scope: !765)
!3196 = !DILocation(line: 1498, column: 21, scope: !765)
!3197 = !DILocation(line: 1499, column: 1, scope: !765)
!3198 = !DILocalVariable(name: "parser", arg: 1, scope: !768, file: !1, line: 1502, type: !162)
!3199 = !DILocation(line: 1502, column: 34, scope: !768)
!3200 = !DILocalVariable(name: "handler", arg: 2, scope: !768, file: !1, line: 1503, type: !316)
!3201 = !DILocation(line: 1503, column: 42, scope: !768)
!3202 = !DILocation(line: 1504, column: 20, scope: !768)
!3203 = !DILocation(line: 1504, column: 3, scope: !768)
!3204 = !DILocation(line: 1504, column: 18, scope: !768)
!3205 = !DILocation(line: 1505, column: 1, scope: !768)
!3206 = !DILocalVariable(name: "parser", arg: 1, scope: !771, file: !1, line: 1508, type: !162)
!3207 = !DILocation(line: 1508, column: 38, scope: !771)
!3208 = !DILocalVariable(name: "peParsing", arg: 2, scope: !771, file: !1, line: 1509, type: !78)
!3209 = !DILocation(line: 1509, column: 55, scope: !771)
!3210 = !DILocation(line: 1512, column: 7, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !771, file: !1, line: 1512, column: 7)
!3212 = !DILocation(line: 1512, column: 18, scope: !3211)
!3213 = !DILocation(line: 1512, column: 33, scope: !3211)
!3214 = !DILocation(line: 1512, column: 36, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !3211, file: !1, discriminator: 1)
!3216 = !DILocation(line: 1512, column: 47, scope: !3215)
!3217 = !DILocation(line: 1512, column: 7, scope: !3215)
!3218 = !DILocation(line: 1513, column: 5, scope: !3211)
!3219 = !DILocation(line: 1518, column: 10, scope: !771)
!3220 = !DILocation(line: 1518, column: 20, scope: !771)
!3221 = !DILocation(line: 1518, column: 3, scope: !771)
!3222 = !DILocation(line: 1520, column: 1, scope: !771)
!3223 = !DILocalVariable(name: "parser", arg: 1, scope: !774, file: !1, line: 1523, type: !162)
!3224 = !DILocation(line: 1523, column: 28, scope: !774)
!3225 = !DILocalVariable(name: "hash_salt", arg: 2, scope: !774, file: !1, line: 1524, type: !182)
!3226 = !DILocation(line: 1524, column: 31, scope: !774)
!3227 = !DILocation(line: 1527, column: 7, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !774, file: !1, line: 1527, column: 7)
!3229 = !DILocation(line: 1527, column: 18, scope: !3228)
!3230 = !DILocation(line: 1527, column: 33, scope: !3228)
!3231 = !DILocation(line: 1527, column: 36, scope: !3232)
!3232 = !DILexicalBlockFile(scope: !3228, file: !1, discriminator: 1)
!3233 = !DILocation(line: 1527, column: 47, scope: !3232)
!3234 = !DILocation(line: 1527, column: 7, scope: !3232)
!3235 = !DILocation(line: 1528, column: 5, scope: !3228)
!3236 = !DILocation(line: 1529, column: 22, scope: !774)
!3237 = !DILocation(line: 1529, column: 3, scope: !774)
!3238 = !DILocation(line: 1529, column: 20, scope: !774)
!3239 = !DILocation(line: 1530, column: 3, scope: !774)
!3240 = !DILocation(line: 1531, column: 1, scope: !774)
!3241 = !DILocalVariable(name: "parser", arg: 1, scope: !777, file: !1, line: 1534, type: !162)
!3242 = !DILocation(line: 1534, column: 22, scope: !777)
!3243 = !DILocalVariable(name: "s", arg: 2, scope: !777, file: !1, line: 1534, type: !192)
!3244 = !DILocation(line: 1534, column: 42, scope: !777)
!3245 = !DILocalVariable(name: "len", arg: 3, scope: !777, file: !1, line: 1534, type: !223)
!3246 = !DILocation(line: 1534, column: 49, scope: !777)
!3247 = !DILocalVariable(name: "isFinal", arg: 4, scope: !777, file: !1, line: 1534, type: !223)
!3248 = !DILocation(line: 1534, column: 58, scope: !777)
!3249 = !DILocation(line: 1536, column: 11, scope: !777)
!3250 = !DILocation(line: 1536, column: 3, scope: !777)
!3251 = !DILocation(line: 1538, column: 5, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !777, file: !1, line: 1536, column: 23)
!3253 = !DILocation(line: 1538, column: 15, scope: !3252)
!3254 = !DILocation(line: 1539, column: 5, scope: !3252)
!3255 = !DILocation(line: 1541, column: 5, scope: !3252)
!3256 = !DILocation(line: 1541, column: 15, scope: !3252)
!3257 = !DILocation(line: 1542, column: 5, scope: !3252)
!3258 = !DILocation(line: 1544, column: 9, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3252, file: !1, line: 1544, column: 9)
!3260 = !DILocation(line: 1544, column: 22, scope: !3259)
!3261 = !DILocation(line: 1544, column: 30, scope: !3259)
!3262 = !DILocation(line: 1544, column: 47, scope: !3263)
!3263 = !DILexicalBlockFile(scope: !3259, file: !1, discriminator: 1)
!3264 = !DILocation(line: 1544, column: 34, scope: !3263)
!3265 = !DILocation(line: 1544, column: 9, scope: !3263)
!3266 = !DILocation(line: 1545, column: 7, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3259, file: !1, line: 1544, column: 56)
!3268 = !DILocation(line: 1545, column: 17, scope: !3267)
!3269 = !DILocation(line: 1546, column: 7, scope: !3267)
!3270 = !DILocation(line: 1544, column: 53, scope: !3271)
!3271 = !DILexicalBlockFile(scope: !3259, file: !1, discriminator: 2)
!3272 = !DILocation(line: 1549, column: 5, scope: !3252)
!3273 = !DILocation(line: 1549, column: 16, scope: !3252)
!3274 = !DILocation(line: 1550, column: 3, scope: !3252)
!3275 = !DILocation(line: 1552, column: 7, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !777, file: !1, line: 1552, column: 7)
!3277 = !DILocation(line: 1552, column: 11, scope: !3276)
!3278 = !DILocation(line: 1552, column: 7, scope: !777)
!3279 = !DILocation(line: 1553, column: 32, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1552, column: 17)
!3281 = !DILocation(line: 1553, column: 22, scope: !3280)
!3282 = !DILocation(line: 1553, column: 5, scope: !3280)
!3283 = !DILocation(line: 1553, column: 20, scope: !3280)
!3284 = !DILocation(line: 1554, column: 10, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 1554, column: 9)
!3286 = !DILocation(line: 1554, column: 9, scope: !3280)
!3287 = !DILocation(line: 1555, column: 7, scope: !3285)
!3288 = !DILocation(line: 1556, column: 19, scope: !3280)
!3289 = !DILocation(line: 1556, column: 5, scope: !3280)
!3290 = !DILocation(line: 1556, column: 17, scope: !3280)
!3291 = !DILocation(line: 1557, column: 19, scope: !3280)
!3292 = !DILocation(line: 1557, column: 5, scope: !3280)
!3293 = !DILocation(line: 1557, column: 17, scope: !3280)
!3294 = !DILocation(line: 1563, column: 17, scope: !3280)
!3295 = !DILocation(line: 1563, column: 27, scope: !3280)
!3296 = !DILocation(line: 1563, column: 35, scope: !3280)
!3297 = !DILocation(line: 1563, column: 46, scope: !3280)
!3298 = !DILocation(line: 1563, column: 60, scope: !3280)
!3299 = !DILocation(line: 1563, column: 5, scope: !3280)
!3300 = !DILocation(line: 1563, column: 15, scope: !3280)
!3301 = !DILocation(line: 1565, column: 9, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 1565, column: 9)
!3303 = !DILocation(line: 1565, column: 19, scope: !3302)
!3304 = !DILocation(line: 1565, column: 9, scope: !3280)
!3305 = !DILocation(line: 1566, column: 15, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3302, file: !1, line: 1565, column: 38)
!3307 = !DILocation(line: 1566, column: 7, scope: !3306)
!3308 = !DILocation(line: 1568, column: 9, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3306, file: !1, line: 1566, column: 27)
!3310 = !DILocation(line: 1569, column: 23, scope: !3309)
!3311 = !DILocation(line: 1569, column: 9, scope: !3309)
!3312 = !DILocation(line: 1569, column: 21, scope: !3309)
!3313 = !DILocation(line: 1570, column: 9, scope: !3309)
!3314 = !DILocation(line: 1573, column: 9, scope: !3309)
!3315 = !DILocation(line: 1573, column: 20, scope: !3309)
!3316 = !DILocation(line: 1576, column: 9, scope: !3309)
!3317 = !DILocation(line: 1579, column: 19, scope: !3280)
!3318 = !DILocation(line: 1579, column: 5, scope: !3280)
!3319 = !DILocation(line: 1579, column: 17, scope: !3280)
!3320 = !DILocation(line: 1580, column: 5, scope: !3280)
!3321 = !DILocation(line: 1580, column: 15, scope: !3280)
!3322 = !DILocation(line: 1581, column: 5, scope: !3280)
!3323 = !DILocalVariable(name: "buff", scope: !3324, file: !1, line: 1646, type: !161)
!3324 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1645, column: 8)
!3325 = !DILocation(line: 1646, column: 11, scope: !3324)
!3326 = !DILocation(line: 1646, column: 32, scope: !3324)
!3327 = !DILocation(line: 1646, column: 40, scope: !3324)
!3328 = !DILocation(line: 1646, column: 18, scope: !3324)
!3329 = !DILocation(line: 1647, column: 9, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3324, file: !1, line: 1647, column: 9)
!3331 = !DILocation(line: 1647, column: 14, scope: !3330)
!3332 = !DILocation(line: 1647, column: 9, scope: !3324)
!3333 = !DILocation(line: 1648, column: 7, scope: !3330)
!3334 = !DILocation(line: 1650, column: 14, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !1, line: 1649, column: 10)
!3336 = !DILocation(line: 1650, column: 20, scope: !3335)
!3337 = !DILocation(line: 1650, column: 23, scope: !3335)
!3338 = !DILocation(line: 1650, column: 7, scope: !3335)
!3339 = !DILocation(line: 1651, column: 30, scope: !3335)
!3340 = !DILocation(line: 1651, column: 38, scope: !3335)
!3341 = !DILocation(line: 1651, column: 43, scope: !3335)
!3342 = !DILocation(line: 1651, column: 14, scope: !3335)
!3343 = !DILocation(line: 1651, column: 7, scope: !3335)
!3344 = !DILocation(line: 1654, column: 1, scope: !777)
!3345 = !DILocalVariable(name: "parser", arg: 1, scope: !980, file: !1, line: 736, type: !162)
!3346 = !DILocation(line: 736, column: 25, scope: !980)
!3347 = !DILocation(line: 739, column: 9, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !980, file: !1, line: 739, column: 9)
!3349 = !DILocation(line: 739, column: 26, scope: !3348)
!3350 = !DILocation(line: 739, column: 9, scope: !980)
!3351 = !DILocation(line: 740, column: 52, scope: !3348)
!3352 = !DILocation(line: 740, column: 26, scope: !3348)
!3353 = !DILocation(line: 740, column: 7, scope: !3348)
!3354 = !DILocation(line: 740, column: 24, scope: !3348)
!3355 = !DILocation(line: 741, column: 9, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !980, file: !1, line: 741, column: 9)
!3357 = !DILocation(line: 741, column: 9, scope: !980)
!3358 = !DILocation(line: 745, column: 25, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3356, file: !1, line: 741, column: 13)
!3360 = !DILocation(line: 745, column: 14, scope: !3359)
!3361 = !DILocation(line: 745, column: 7, scope: !3359)
!3362 = !DILocation(line: 747, column: 5, scope: !980)
!3363 = !DILocation(line: 748, column: 1, scope: !980)
!3364 = !DILocalVariable(name: "parser", arg: 1, scope: !990, file: !1, line: 4964, type: !162)
!3365 = !DILocation(line: 4964, column: 27, scope: !990)
!3366 = !DILocalVariable(name: "UNUSED_s", arg: 2, scope: !990, file: !1, line: 4965, type: !192)
!3367 = !DILocation(line: 4965, column: 28, scope: !990)
!3368 = !DILocalVariable(name: "UNUSED_end", arg: 3, scope: !990, file: !1, line: 4966, type: !192)
!3369 = !DILocation(line: 4966, column: 28, scope: !990)
!3370 = !DILocalVariable(name: "UNUSED_nextPtr", arg: 4, scope: !990, file: !1, line: 4967, type: !332)
!3371 = !DILocation(line: 4967, column: 29, scope: !990)
!3372 = !DILocation(line: 4969, column: 10, scope: !990)
!3373 = !DILocation(line: 4969, column: 3, scope: !990)
!3374 = !DILocalVariable(name: "parser", arg: 1, scope: !783, file: !1, line: 1713, type: !162)
!3375 = !DILocation(line: 1713, column: 26, scope: !783)
!3376 = !DILocalVariable(name: "len", arg: 2, scope: !783, file: !1, line: 1713, type: !223)
!3377 = !DILocation(line: 1713, column: 38, scope: !783)
!3378 = !DILocation(line: 1715, column: 7, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !783, file: !1, line: 1715, column: 7)
!3380 = !DILocation(line: 1715, column: 11, scope: !3379)
!3381 = !DILocation(line: 1715, column: 7, scope: !783)
!3382 = !DILocation(line: 1716, column: 5, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3379, file: !1, line: 1715, column: 16)
!3384 = !DILocation(line: 1716, column: 15, scope: !3383)
!3385 = !DILocation(line: 1717, column: 5, scope: !3383)
!3386 = !DILocation(line: 1719, column: 11, scope: !783)
!3387 = !DILocation(line: 1719, column: 3, scope: !783)
!3388 = !DILocation(line: 1721, column: 5, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !783, file: !1, line: 1719, column: 23)
!3390 = !DILocation(line: 1721, column: 15, scope: !3389)
!3391 = !DILocation(line: 1722, column: 5, scope: !3389)
!3392 = !DILocation(line: 1724, column: 5, scope: !3389)
!3393 = !DILocation(line: 1724, column: 15, scope: !3389)
!3394 = !DILocation(line: 1725, column: 5, scope: !3389)
!3395 = !DILocation(line: 1727, column: 3, scope: !3389)
!3396 = !DILocation(line: 1729, column: 7, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !783, file: !1, line: 1729, column: 7)
!3398 = !DILocation(line: 1729, column: 13, scope: !3397)
!3399 = !DILocation(line: 1729, column: 25, scope: !3397)
!3400 = !DILocation(line: 1729, column: 23, scope: !3397)
!3401 = !DILocation(line: 1729, column: 11, scope: !3397)
!3402 = !DILocation(line: 1729, column: 7, scope: !783)
!3403 = !DILocalVariable(name: "keep", scope: !3404, file: !1, line: 1731, type: !223)
!3404 = distinct !DILexicalBlock(scope: !3397, file: !1, line: 1729, column: 36)
!3405 = !DILocation(line: 1731, column: 9, scope: !3404)
!3406 = !DILocalVariable(name: "neededSize", scope: !3404, file: !1, line: 1734, type: !223)
!3407 = !DILocation(line: 1734, column: 9, scope: !3404)
!3408 = !DILocation(line: 1734, column: 39, scope: !3404)
!3409 = !DILocation(line: 1734, column: 56, scope: !3404)
!3410 = !DILocation(line: 1734, column: 68, scope: !3404)
!3411 = !DILocation(line: 1734, column: 66, scope: !3404)
!3412 = !DILocation(line: 1734, column: 45, scope: !3404)
!3413 = !DILocation(line: 1734, column: 43, scope: !3404)
!3414 = !DILocation(line: 1735, column: 9, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3404, file: !1, line: 1735, column: 9)
!3416 = !DILocation(line: 1735, column: 20, scope: !3415)
!3417 = !DILocation(line: 1735, column: 9, scope: !3404)
!3418 = !DILocation(line: 1736, column: 7, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3415, file: !1, line: 1735, column: 25)
!3420 = !DILocation(line: 1736, column: 17, scope: !3419)
!3421 = !DILocation(line: 1737, column: 7, scope: !3419)
!3422 = !DILocation(line: 1740, column: 18, scope: !3404)
!3423 = !DILocation(line: 1740, column: 30, scope: !3404)
!3424 = !DILocation(line: 1740, column: 28, scope: !3404)
!3425 = !DILocation(line: 1740, column: 12, scope: !3404)
!3426 = !DILocation(line: 1740, column: 10, scope: !3404)
!3427 = !DILocation(line: 1741, column: 9, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3404, file: !1, line: 1741, column: 9)
!3429 = !DILocation(line: 1741, column: 14, scope: !3428)
!3430 = !DILocation(line: 1741, column: 9, scope: !3404)
!3431 = !DILocation(line: 1742, column: 12, scope: !3428)
!3432 = !DILocation(line: 1742, column: 7, scope: !3428)
!3433 = !DILocation(line: 1743, column: 19, scope: !3404)
!3434 = !DILocation(line: 1743, column: 16, scope: !3404)
!3435 = !DILocation(line: 1745, column: 9, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3404, file: !1, line: 1745, column: 9)
!3437 = !DILocation(line: 1745, column: 24, scope: !3436)
!3438 = !DILocation(line: 1745, column: 36, scope: !3436)
!3439 = !DILocation(line: 1745, column: 34, scope: !3436)
!3440 = !DILocation(line: 1745, column: 21, scope: !3436)
!3441 = !DILocation(line: 1745, column: 9, scope: !3404)
!3442 = !DILocation(line: 1747, column: 11, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !1, line: 1747, column: 11)
!3444 = distinct !DILexicalBlock(scope: !3436, file: !1, line: 1745, column: 44)
!3445 = !DILocation(line: 1747, column: 18, scope: !3443)
!3446 = !DILocation(line: 1747, column: 30, scope: !3443)
!3447 = !DILocation(line: 1747, column: 28, scope: !3443)
!3448 = !DILocation(line: 1747, column: 16, scope: !3443)
!3449 = !DILocation(line: 1747, column: 11, scope: !3444)
!3450 = !DILocalVariable(name: "offset", scope: !3451, file: !1, line: 1748, type: !223)
!3451 = distinct !DILexicalBlock(scope: !3443, file: !1, line: 1747, column: 38)
!3452 = !DILocation(line: 1748, column: 13, scope: !3451)
!3453 = !DILocation(line: 1748, column: 28, scope: !3451)
!3454 = !DILocation(line: 1748, column: 40, scope: !3451)
!3455 = !DILocation(line: 1748, column: 38, scope: !3451)
!3456 = !DILocation(line: 1748, column: 22, scope: !3451)
!3457 = !DILocation(line: 1748, column: 50, scope: !3451)
!3458 = !DILocation(line: 1748, column: 48, scope: !3451)
!3459 = !DILocation(line: 1749, column: 17, scope: !3451)
!3460 = !DILocation(line: 1749, column: 33, scope: !3451)
!3461 = !DILocation(line: 1749, column: 26, scope: !3451)
!3462 = !DILocation(line: 1749, column: 42, scope: !3451)
!3463 = !DILocation(line: 1749, column: 54, scope: !3451)
!3464 = !DILocation(line: 1749, column: 52, scope: !3451)
!3465 = !DILocation(line: 1749, column: 66, scope: !3451)
!3466 = !DILocation(line: 1749, column: 64, scope: !3451)
!3467 = !DILocation(line: 1749, column: 9, scope: !3451)
!3468 = !DILocation(line: 1750, column: 22, scope: !3451)
!3469 = !DILocation(line: 1750, column: 9, scope: !3451)
!3470 = !DILocation(line: 1750, column: 19, scope: !3451)
!3471 = !DILocation(line: 1751, column: 22, scope: !3451)
!3472 = !DILocation(line: 1751, column: 9, scope: !3451)
!3473 = !DILocation(line: 1751, column: 19, scope: !3451)
!3474 = !DILocation(line: 1752, column: 7, scope: !3451)
!3475 = !DILocation(line: 1758, column: 5, scope: !3444)
!3476 = !DILocalVariable(name: "newBuf", scope: !3477, file: !1, line: 1760, type: !169)
!3477 = distinct !DILexicalBlock(scope: !3436, file: !1, line: 1759, column: 10)
!3478 = !DILocation(line: 1760, column: 13, scope: !3477)
!3479 = !DILocalVariable(name: "bufferSize", scope: !3477, file: !1, line: 1761, type: !223)
!3480 = !DILocation(line: 1761, column: 11, scope: !3477)
!3481 = !DILocation(line: 1761, column: 30, scope: !3477)
!3482 = !DILocation(line: 1761, column: 42, scope: !3477)
!3483 = !DILocation(line: 1761, column: 40, scope: !3477)
!3484 = !DILocation(line: 1761, column: 24, scope: !3477)
!3485 = !DILocation(line: 1762, column: 11, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3477, file: !1, line: 1762, column: 11)
!3487 = !DILocation(line: 1762, column: 22, scope: !3486)
!3488 = !DILocation(line: 1762, column: 11, scope: !3477)
!3489 = !DILocation(line: 1763, column: 20, scope: !3486)
!3490 = !DILocation(line: 1763, column: 9, scope: !3486)
!3491 = !DILocation(line: 1764, column: 7, scope: !3477)
!3492 = !DILocation(line: 1766, column: 45, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3477, file: !1, line: 1764, column: 10)
!3494 = !DILocation(line: 1766, column: 32, scope: !3493)
!3495 = !DILocation(line: 1766, column: 20, scope: !3493)
!3496 = !DILocation(line: 1767, column: 7, scope: !3493)
!3497 = !DILocation(line: 1767, column: 16, scope: !3498)
!3498 = !DILexicalBlockFile(scope: !3477, file: !1, discriminator: 1)
!3499 = !DILocation(line: 1767, column: 29, scope: !3498)
!3500 = !DILocation(line: 1767, column: 27, scope: !3498)
!3501 = !DILocation(line: 1767, column: 40, scope: !3498)
!3502 = !DILocation(line: 1767, column: 43, scope: !3503)
!3503 = !DILexicalBlockFile(scope: !3477, file: !1, discriminator: 2)
!3504 = !DILocation(line: 1767, column: 54, scope: !3503)
!3505 = !DILocation(line: 1767, column: 7, scope: !3506)
!3506 = !DILexicalBlockFile(scope: !3493, file: !1, discriminator: 3)
!3507 = !DILocation(line: 1768, column: 11, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3477, file: !1, line: 1768, column: 11)
!3509 = !DILocation(line: 1768, column: 22, scope: !3508)
!3510 = !DILocation(line: 1768, column: 11, scope: !3477)
!3511 = !DILocation(line: 1769, column: 9, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3508, file: !1, line: 1768, column: 28)
!3513 = !DILocation(line: 1769, column: 19, scope: !3512)
!3514 = !DILocation(line: 1770, column: 9, scope: !3512)
!3515 = !DILocation(line: 1772, column: 24, scope: !3477)
!3516 = !DILocation(line: 1772, column: 14, scope: !3477)
!3517 = !DILocation(line: 1773, column: 11, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3477, file: !1, line: 1773, column: 11)
!3519 = !DILocation(line: 1773, column: 18, scope: !3518)
!3520 = !DILocation(line: 1773, column: 11, scope: !3477)
!3521 = !DILocation(line: 1774, column: 9, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3518, file: !1, line: 1773, column: 24)
!3523 = !DILocation(line: 1774, column: 19, scope: !3522)
!3524 = !DILocation(line: 1775, column: 9, scope: !3522)
!3525 = !DILocation(line: 1777, column: 19, scope: !3477)
!3526 = !DILocation(line: 1777, column: 28, scope: !3477)
!3527 = !DILocation(line: 1777, column: 26, scope: !3477)
!3528 = !DILocation(line: 1777, column: 7, scope: !3477)
!3529 = !DILocation(line: 1777, column: 17, scope: !3477)
!3530 = !DILocation(line: 1779, column: 11, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3477, file: !1, line: 1779, column: 11)
!3532 = !DILocation(line: 1779, column: 11, scope: !3477)
!3533 = !DILocalVariable(name: "keep", scope: !3534, file: !1, line: 1780, type: !223)
!3534 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 1779, column: 22)
!3535 = !DILocation(line: 1780, column: 13, scope: !3534)
!3536 = !DILocation(line: 1780, column: 26, scope: !3534)
!3537 = !DILocation(line: 1780, column: 38, scope: !3534)
!3538 = !DILocation(line: 1780, column: 36, scope: !3534)
!3539 = !DILocation(line: 1780, column: 20, scope: !3534)
!3540 = !DILocation(line: 1781, column: 13, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3534, file: !1, line: 1781, column: 13)
!3542 = !DILocation(line: 1781, column: 18, scope: !3541)
!3543 = !DILocation(line: 1781, column: 13, scope: !3534)
!3544 = !DILocation(line: 1782, column: 16, scope: !3541)
!3545 = !DILocation(line: 1782, column: 11, scope: !3541)
!3546 = !DILocation(line: 1783, column: 16, scope: !3534)
!3547 = !DILocation(line: 1783, column: 36, scope: !3534)
!3548 = !DILocation(line: 1783, column: 35, scope: !3534)
!3549 = !DILocation(line: 1783, column: 25, scope: !3534)
!3550 = !DILocation(line: 1783, column: 43, scope: !3534)
!3551 = !DILocation(line: 1783, column: 55, scope: !3534)
!3552 = !DILocation(line: 1783, column: 53, scope: !3534)
!3553 = !DILocation(line: 1783, column: 67, scope: !3534)
!3554 = !DILocation(line: 1783, column: 65, scope: !3534)
!3555 = !DILocation(line: 1783, column: 9, scope: !3534)
!3556 = !DILocation(line: 1784, column: 9, scope: !3534)
!3557 = !DILocation(line: 1785, column: 18, scope: !3534)
!3558 = !DILocation(line: 1785, column: 9, scope: !3534)
!3559 = !DILocation(line: 1785, column: 16, scope: !3534)
!3560 = !DILocation(line: 1786, column: 21, scope: !3534)
!3561 = !DILocation(line: 1786, column: 31, scope: !3534)
!3562 = !DILocation(line: 1786, column: 43, scope: !3534)
!3563 = !DILocation(line: 1786, column: 41, scope: !3534)
!3564 = !DILocation(line: 1786, column: 28, scope: !3534)
!3565 = !DILocation(line: 1786, column: 56, scope: !3534)
!3566 = !DILocation(line: 1786, column: 54, scope: !3534)
!3567 = !DILocation(line: 1786, column: 9, scope: !3534)
!3568 = !DILocation(line: 1786, column: 19, scope: !3534)
!3569 = !DILocation(line: 1787, column: 21, scope: !3534)
!3570 = !DILocation(line: 1787, column: 30, scope: !3534)
!3571 = !DILocation(line: 1787, column: 28, scope: !3534)
!3572 = !DILocation(line: 1787, column: 9, scope: !3534)
!3573 = !DILocation(line: 1787, column: 19, scope: !3534)
!3574 = !DILocation(line: 1788, column: 7, scope: !3534)
!3575 = !DILocation(line: 1790, column: 21, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 1789, column: 12)
!3577 = !DILocation(line: 1790, column: 31, scope: !3576)
!3578 = !DILocation(line: 1790, column: 43, scope: !3576)
!3579 = !DILocation(line: 1790, column: 41, scope: !3576)
!3580 = !DILocation(line: 1790, column: 28, scope: !3576)
!3581 = !DILocation(line: 1790, column: 9, scope: !3576)
!3582 = !DILocation(line: 1790, column: 19, scope: !3576)
!3583 = !DILocation(line: 1791, column: 30, scope: !3576)
!3584 = !DILocation(line: 1791, column: 21, scope: !3576)
!3585 = !DILocation(line: 1791, column: 28, scope: !3576)
!3586 = !DILocation(line: 1791, column: 9, scope: !3576)
!3587 = !DILocation(line: 1791, column: 19, scope: !3576)
!3588 = !DILocation(line: 1802, column: 16, scope: !3404)
!3589 = !DILocation(line: 1802, column: 28, scope: !3404)
!3590 = !DILocation(line: 1802, column: 5, scope: !3404)
!3591 = !DILocation(line: 1802, column: 14, scope: !3404)
!3592 = !DILocation(line: 1803, column: 5, scope: !3404)
!3593 = !DILocation(line: 1803, column: 17, scope: !3404)
!3594 = !DILocation(line: 1804, column: 3, scope: !3404)
!3595 = !DILocation(line: 1805, column: 10, scope: !783)
!3596 = !DILocation(line: 1805, column: 3, scope: !783)
!3597 = !DILocation(line: 1806, column: 1, scope: !783)
!3598 = !DILocalVariable(name: "parser", arg: 1, scope: !780, file: !1, line: 1657, type: !162)
!3599 = !DILocation(line: 1657, column: 28, scope: !780)
!3600 = !DILocalVariable(name: "len", arg: 2, scope: !780, file: !1, line: 1657, type: !223)
!3601 = !DILocation(line: 1657, column: 40, scope: !780)
!3602 = !DILocalVariable(name: "isFinal", arg: 3, scope: !780, file: !1, line: 1657, type: !223)
!3603 = !DILocation(line: 1657, column: 49, scope: !780)
!3604 = !DILocalVariable(name: "start", scope: !780, file: !1, line: 1659, type: !192)
!3605 = !DILocation(line: 1659, column: 15, scope: !780)
!3606 = !DILocalVariable(name: "result", scope: !780, file: !1, line: 1660, type: !73)
!3607 = !DILocation(line: 1660, column: 19, scope: !780)
!3608 = !DILocation(line: 1662, column: 11, scope: !780)
!3609 = !DILocation(line: 1662, column: 3, scope: !780)
!3610 = !DILocation(line: 1664, column: 5, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !780, file: !1, line: 1662, column: 23)
!3612 = !DILocation(line: 1664, column: 15, scope: !3611)
!3613 = !DILocation(line: 1665, column: 5, scope: !3611)
!3614 = !DILocation(line: 1667, column: 5, scope: !3611)
!3615 = !DILocation(line: 1667, column: 15, scope: !3611)
!3616 = !DILocation(line: 1668, column: 5, scope: !3611)
!3617 = !DILocation(line: 1670, column: 9, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3611, file: !1, line: 1670, column: 9)
!3619 = !DILocation(line: 1670, column: 22, scope: !3618)
!3620 = !DILocation(line: 1670, column: 30, scope: !3618)
!3621 = !DILocation(line: 1670, column: 47, scope: !3622)
!3622 = !DILexicalBlockFile(scope: !3618, file: !1, discriminator: 1)
!3623 = !DILocation(line: 1670, column: 34, scope: !3622)
!3624 = !DILocation(line: 1670, column: 9, scope: !3622)
!3625 = !DILocation(line: 1671, column: 7, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3618, file: !1, line: 1670, column: 56)
!3627 = !DILocation(line: 1671, column: 17, scope: !3626)
!3628 = !DILocation(line: 1672, column: 7, scope: !3626)
!3629 = !DILocation(line: 1670, column: 53, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3618, file: !1, discriminator: 2)
!3631 = !DILocation(line: 1675, column: 5, scope: !3611)
!3632 = !DILocation(line: 1675, column: 16, scope: !3611)
!3633 = !DILocation(line: 1676, column: 3, scope: !3611)
!3634 = !DILocation(line: 1678, column: 11, scope: !780)
!3635 = !DILocation(line: 1678, column: 9, scope: !780)
!3636 = !DILocation(line: 1679, column: 17, scope: !780)
!3637 = !DILocation(line: 1679, column: 3, scope: !780)
!3638 = !DILocation(line: 1679, column: 15, scope: !780)
!3639 = !DILocation(line: 1680, column: 16, scope: !780)
!3640 = !DILocation(line: 1680, column: 3, scope: !780)
!3641 = !DILocation(line: 1680, column: 13, scope: !780)
!3642 = !DILocation(line: 1681, column: 17, scope: !780)
!3643 = !DILocation(line: 1681, column: 3, scope: !780)
!3644 = !DILocation(line: 1681, column: 15, scope: !780)
!3645 = !DILocation(line: 1682, column: 24, scope: !780)
!3646 = !DILocation(line: 1682, column: 3, scope: !780)
!3647 = !DILocation(line: 1682, column: 21, scope: !780)
!3648 = !DILocation(line: 1683, column: 30, scope: !780)
!3649 = !DILocation(line: 1683, column: 20, scope: !780)
!3650 = !DILocation(line: 1683, column: 3, scope: !780)
!3651 = !DILocation(line: 1683, column: 18, scope: !780)
!3652 = !DILocation(line: 1685, column: 15, scope: !780)
!3653 = !DILocation(line: 1685, column: 25, scope: !780)
!3654 = !DILocation(line: 1685, column: 33, scope: !780)
!3655 = !DILocation(line: 1685, column: 40, scope: !780)
!3656 = !DILocation(line: 1685, column: 54, scope: !780)
!3657 = !DILocation(line: 1685, column: 3, scope: !780)
!3658 = !DILocation(line: 1685, column: 13, scope: !780)
!3659 = !DILocation(line: 1687, column: 7, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !780, file: !1, line: 1687, column: 7)
!3661 = !DILocation(line: 1687, column: 17, scope: !3660)
!3662 = !DILocation(line: 1687, column: 7, scope: !780)
!3663 = !DILocation(line: 1688, column: 19, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3660, file: !1, line: 1687, column: 36)
!3665 = !DILocation(line: 1688, column: 5, scope: !3664)
!3666 = !DILocation(line: 1688, column: 17, scope: !3664)
!3667 = !DILocation(line: 1689, column: 5, scope: !3664)
!3668 = !DILocation(line: 1689, column: 15, scope: !3664)
!3669 = !DILocation(line: 1690, column: 5, scope: !3664)
!3670 = !DILocation(line: 1693, column: 13, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3660, file: !1, line: 1692, column: 8)
!3672 = !DILocation(line: 1693, column: 5, scope: !3671)
!3673 = !DILocation(line: 1695, column: 14, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3671, file: !1, line: 1693, column: 25)
!3675 = !DILocation(line: 1696, column: 7, scope: !3674)
!3676 = !DILocation(line: 1699, column: 11, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3674, file: !1, line: 1699, column: 11)
!3678 = !DILocation(line: 1699, column: 11, scope: !3674)
!3679 = !DILocation(line: 1700, column: 9, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3677, file: !1, line: 1699, column: 20)
!3681 = !DILocation(line: 1700, column: 20, scope: !3680)
!3682 = !DILocation(line: 1701, column: 16, scope: !3680)
!3683 = !DILocation(line: 1701, column: 9, scope: !3680)
!3684 = !DILocation(line: 1699, column: 11, scope: !3685)
!3685 = !DILexicalBlockFile(scope: !3677, file: !1, discriminator: 1)
!3686 = !DILocation(line: 1704, column: 5, scope: !3674)
!3687 = !DILocation(line: 1707, column: 3, scope: !780)
!3688 = !DILocation(line: 1708, column: 17, scope: !780)
!3689 = !DILocation(line: 1708, column: 3, scope: !780)
!3690 = !DILocation(line: 1708, column: 15, scope: !780)
!3691 = !DILocation(line: 1709, column: 10, scope: !780)
!3692 = !DILocation(line: 1709, column: 3, scope: !780)
!3693 = !DILocation(line: 1710, column: 1, scope: !780)
!3694 = !DILocalVariable(name: "parser", arg: 1, scope: !786, file: !1, line: 1809, type: !162)
!3695 = !DILocation(line: 1809, column: 27, scope: !786)
!3696 = !DILocalVariable(name: "resumable", arg: 2, scope: !786, file: !1, line: 1809, type: !159)
!3697 = !DILocation(line: 1809, column: 44, scope: !786)
!3698 = !DILocation(line: 1811, column: 11, scope: !786)
!3699 = !DILocation(line: 1811, column: 3, scope: !786)
!3700 = !DILocation(line: 1813, column: 9, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !1, line: 1813, column: 9)
!3702 = distinct !DILexicalBlock(scope: !786, file: !1, line: 1811, column: 23)
!3703 = !DILocation(line: 1813, column: 9, scope: !3702)
!3704 = !DILocation(line: 1814, column: 7, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3701, file: !1, line: 1813, column: 20)
!3706 = !DILocation(line: 1814, column: 17, scope: !3705)
!3707 = !DILocation(line: 1815, column: 7, scope: !3705)
!3708 = !DILocation(line: 1817, column: 5, scope: !3702)
!3709 = !DILocation(line: 1817, column: 16, scope: !3702)
!3710 = !DILocation(line: 1818, column: 5, scope: !3702)
!3711 = !DILocation(line: 1820, column: 5, scope: !3702)
!3712 = !DILocation(line: 1820, column: 15, scope: !3702)
!3713 = !DILocation(line: 1821, column: 5, scope: !3702)
!3714 = !DILocation(line: 1823, column: 9, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3702, file: !1, line: 1823, column: 9)
!3716 = !DILocation(line: 1823, column: 9, scope: !3702)
!3717 = !DILocation(line: 1830, column: 7, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 1823, column: 20)
!3719 = !DILocation(line: 1830, column: 18, scope: !3718)
!3720 = !DILocation(line: 1831, column: 5, scope: !3718)
!3721 = !DILocation(line: 1833, column: 7, scope: !3715)
!3722 = !DILocation(line: 1833, column: 18, scope: !3715)
!3723 = !DILocation(line: 1834, column: 3, scope: !3702)
!3724 = !DILocation(line: 1835, column: 3, scope: !786)
!3725 = !DILocation(line: 1836, column: 1, scope: !786)
!3726 = !DILocalVariable(name: "parser", arg: 1, scope: !789, file: !1, line: 1839, type: !162)
!3727 = !DILocation(line: 1839, column: 29, scope: !789)
!3728 = !DILocalVariable(name: "result", scope: !789, file: !1, line: 1841, type: !73)
!3729 = !DILocation(line: 1841, column: 19, scope: !789)
!3730 = !DILocation(line: 1843, column: 7, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !789, file: !1, line: 1843, column: 7)
!3732 = !DILocation(line: 1843, column: 18, scope: !3731)
!3733 = !DILocation(line: 1843, column: 7, scope: !789)
!3734 = !DILocation(line: 1844, column: 5, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3731, file: !1, line: 1843, column: 36)
!3736 = !DILocation(line: 1844, column: 15, scope: !3735)
!3737 = !DILocation(line: 1845, column: 5, scope: !3735)
!3738 = !DILocation(line: 1847, column: 3, scope: !789)
!3739 = !DILocation(line: 1847, column: 14, scope: !789)
!3740 = !DILocation(line: 1849, column: 15, scope: !789)
!3741 = !DILocation(line: 1849, column: 25, scope: !789)
!3742 = !DILocation(line: 1849, column: 33, scope: !789)
!3743 = !DILocation(line: 1849, column: 44, scope: !789)
!3744 = !DILocation(line: 1849, column: 58, scope: !789)
!3745 = !DILocation(line: 1849, column: 3, scope: !789)
!3746 = !DILocation(line: 1849, column: 13, scope: !789)
!3747 = !DILocation(line: 1851, column: 7, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !789, file: !1, line: 1851, column: 7)
!3749 = !DILocation(line: 1851, column: 17, scope: !3748)
!3750 = !DILocation(line: 1851, column: 7, scope: !789)
!3751 = !DILocation(line: 1852, column: 19, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3748, file: !1, line: 1851, column: 36)
!3753 = !DILocation(line: 1852, column: 5, scope: !3752)
!3754 = !DILocation(line: 1852, column: 17, scope: !3752)
!3755 = !DILocation(line: 1853, column: 5, scope: !3752)
!3756 = !DILocation(line: 1853, column: 15, scope: !3752)
!3757 = !DILocation(line: 1854, column: 5, scope: !3752)
!3758 = !DILocation(line: 1857, column: 13, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3748, file: !1, line: 1856, column: 8)
!3760 = !DILocation(line: 1857, column: 5, scope: !3759)
!3761 = !DILocation(line: 1859, column: 14, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1857, column: 25)
!3763 = !DILocation(line: 1860, column: 7, scope: !3762)
!3764 = !DILocation(line: 1863, column: 11, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 1863, column: 11)
!3766 = !DILocation(line: 1863, column: 11, scope: !3762)
!3767 = !DILocation(line: 1864, column: 9, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3765, file: !1, line: 1863, column: 27)
!3769 = !DILocation(line: 1864, column: 20, scope: !3768)
!3770 = !DILocation(line: 1865, column: 16, scope: !3768)
!3771 = !DILocation(line: 1865, column: 9, scope: !3768)
!3772 = !DILocation(line: 1863, column: 11, scope: !3773)
!3773 = !DILexicalBlockFile(scope: !3765, file: !1, discriminator: 1)
!3774 = !DILocation(line: 1868, column: 5, scope: !3762)
!3775 = !DILocation(line: 1871, column: 3, scope: !789)
!3776 = !DILocation(line: 1872, column: 17, scope: !789)
!3777 = !DILocation(line: 1872, column: 3, scope: !789)
!3778 = !DILocation(line: 1872, column: 15, scope: !789)
!3779 = !DILocation(line: 1873, column: 10, scope: !789)
!3780 = !DILocation(line: 1873, column: 3, scope: !789)
!3781 = !DILocation(line: 1874, column: 1, scope: !789)
!3782 = !DILocalVariable(name: "parser", arg: 1, scope: !792, file: !1, line: 1877, type: !162)
!3783 = !DILocation(line: 1877, column: 33, scope: !792)
!3784 = !DILocalVariable(name: "status", arg: 2, scope: !792, file: !1, line: 1877, type: !795)
!3785 = !DILocation(line: 1877, column: 60, scope: !792)
!3786 = !DILocation(line: 1879, column: 3, scope: !792)
!3787 = !DILocation(line: 1879, column: 3, scope: !3788)
!3788 = !DILexicalBlockFile(scope: !792, file: !1, discriminator: 1)
!3789 = !DILocation(line: 1879, column: 3, scope: !3790)
!3790 = !DILexicalBlockFile(scope: !792, file: !1, discriminator: 2)
!3791 = !DILocation(line: 1879, column: 3, scope: !3792)
!3792 = !DILexicalBlockFile(scope: !792, file: !1, discriminator: 3)
!3793 = !DILocation(line: 1880, column: 4, scope: !792)
!3794 = !DILocation(line: 1880, column: 13, scope: !792)
!3795 = !DILocation(line: 1880, column: 21, scope: !792)
!3796 = !DILocation(line: 1881, column: 1, scope: !792)
!3797 = !DILocalVariable(name: "parser", arg: 1, scope: !796, file: !1, line: 1884, type: !162)
!3798 = !DILocation(line: 1884, column: 29, scope: !796)
!3799 = !DILocation(line: 1886, column: 10, scope: !796)
!3800 = !DILocation(line: 1886, column: 3, scope: !796)
!3801 = !DILocalVariable(name: "parser", arg: 1, scope: !799, file: !1, line: 1890, type: !162)
!3802 = !DILocation(line: 1890, column: 36, scope: !799)
!3803 = !DILocation(line: 1892, column: 7, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !799, file: !1, line: 1892, column: 7)
!3805 = !DILocation(line: 1892, column: 7, scope: !799)
!3806 = !DILocation(line: 1893, column: 12, scope: !3804)
!3807 = !DILocation(line: 1893, column: 33, scope: !3804)
!3808 = !DILocation(line: 1893, column: 47, scope: !3804)
!3809 = !DILocation(line: 1893, column: 45, scope: !3804)
!3810 = !DILocation(line: 1893, column: 30, scope: !3804)
!3811 = !DILocation(line: 1893, column: 5, scope: !3804)
!3812 = !DILocation(line: 1894, column: 3, scope: !799)
!3813 = !DILocation(line: 1895, column: 1, scope: !799)
!3814 = !DILocalVariable(name: "parser", arg: 1, scope: !802, file: !1, line: 1898, type: !162)
!3815 = !DILocation(line: 1898, column: 36, scope: !802)
!3816 = !DILocation(line: 1900, column: 7, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !802, file: !1, line: 1900, column: 7)
!3818 = !DILocation(line: 1900, column: 19, scope: !3817)
!3819 = !DILocation(line: 1900, column: 22, scope: !3820)
!3820 = !DILexicalBlockFile(scope: !3817, file: !1, discriminator: 1)
!3821 = !DILocation(line: 1900, column: 7, scope: !3820)
!3822 = !DILocation(line: 1901, column: 18, scope: !3817)
!3823 = !DILocation(line: 1901, column: 32, scope: !3817)
!3824 = !DILocation(line: 1901, column: 30, scope: !3817)
!3825 = !DILocation(line: 1901, column: 12, scope: !3817)
!3826 = !DILocation(line: 1901, column: 5, scope: !3817)
!3827 = !DILocation(line: 1902, column: 3, scope: !802)
!3828 = !DILocation(line: 1903, column: 1, scope: !802)
!3829 = !DILocalVariable(name: "parser", arg: 1, scope: !803, file: !1, line: 1906, type: !162)
!3830 = !DILocation(line: 1906, column: 32, scope: !803)
!3831 = !DILocalVariable(name: "offset", arg: 2, scope: !803, file: !1, line: 1906, type: !591)
!3832 = !DILocation(line: 1906, column: 45, scope: !803)
!3833 = !DILocalVariable(name: "size", arg: 3, scope: !803, file: !1, line: 1906, type: !591)
!3834 = !DILocation(line: 1906, column: 58, scope: !803)
!3835 = !DILocation(line: 1909, column: 7, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !803, file: !1, line: 1909, column: 7)
!3837 = !DILocation(line: 1909, column: 16, scope: !3836)
!3838 = !DILocation(line: 1909, column: 19, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !3836, file: !1, discriminator: 1)
!3840 = !DILocation(line: 1909, column: 7, scope: !3839)
!3841 = !DILocation(line: 1910, column: 21, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3836, file: !1, line: 1909, column: 27)
!3843 = !DILocation(line: 1910, column: 32, scope: !3842)
!3844 = !DILocation(line: 1910, column: 30, scope: !3842)
!3845 = !DILocation(line: 1910, column: 15, scope: !3842)
!3846 = !DILocation(line: 1910, column: 6, scope: !3842)
!3847 = !DILocation(line: 1910, column: 13, scope: !3842)
!3848 = !DILocation(line: 1911, column: 21, scope: !3842)
!3849 = !DILocation(line: 1911, column: 33, scope: !3842)
!3850 = !DILocation(line: 1911, column: 31, scope: !3842)
!3851 = !DILocation(line: 1911, column: 15, scope: !3842)
!3852 = !DILocation(line: 1911, column: 6, scope: !3842)
!3853 = !DILocation(line: 1911, column: 13, scope: !3842)
!3854 = !DILocation(line: 1912, column: 12, scope: !3842)
!3855 = !DILocation(line: 1912, column: 5, scope: !3842)
!3856 = !DILocation(line: 1915, column: 3, scope: !803)
!3857 = !DILocation(line: 1916, column: 1, scope: !803)
!3858 = !DILocalVariable(name: "parser", arg: 1, scope: !806, file: !1, line: 1919, type: !162)
!3859 = !DILocation(line: 1919, column: 37, scope: !806)
!3860 = !DILocation(line: 1921, column: 7, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !806, file: !1, line: 1921, column: 7)
!3862 = !DILocation(line: 1921, column: 16, scope: !3861)
!3863 = !DILocation(line: 1921, column: 19, scope: !3864)
!3864 = !DILexicalBlockFile(scope: !3861, file: !1, discriminator: 1)
!3865 = !DILocation(line: 1921, column: 31, scope: !3864)
!3866 = !DILocation(line: 1921, column: 28, scope: !3864)
!3867 = !DILocation(line: 1921, column: 7, scope: !3864)
!3868 = !DILocation(line: 1922, column: 5, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1921, column: 44)
!3870 = !DILocation(line: 1923, column: 19, scope: !3869)
!3871 = !DILocation(line: 1923, column: 5, scope: !3869)
!3872 = !DILocation(line: 1923, column: 17, scope: !3869)
!3873 = !DILocation(line: 1924, column: 3, scope: !3869)
!3874 = !DILocation(line: 1925, column: 10, scope: !806)
!3875 = !DILocation(line: 1925, column: 19, scope: !806)
!3876 = !DILocation(line: 1925, column: 30, scope: !806)
!3877 = !DILocation(line: 1925, column: 3, scope: !806)
!3878 = !DILocalVariable(name: "parser", arg: 1, scope: !809, file: !1, line: 1929, type: !162)
!3879 = !DILocation(line: 1929, column: 39, scope: !809)
!3880 = !DILocation(line: 1931, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !809, file: !1, line: 1931, column: 7)
!3882 = !DILocation(line: 1931, column: 16, scope: !3881)
!3883 = !DILocation(line: 1931, column: 19, scope: !3884)
!3884 = !DILexicalBlockFile(scope: !3881, file: !1, discriminator: 1)
!3885 = !DILocation(line: 1931, column: 31, scope: !3884)
!3886 = !DILocation(line: 1931, column: 28, scope: !3884)
!3887 = !DILocation(line: 1931, column: 7, scope: !3884)
!3888 = !DILocation(line: 1932, column: 5, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3881, file: !1, line: 1931, column: 44)
!3890 = !DILocation(line: 1933, column: 19, scope: !3889)
!3891 = !DILocation(line: 1933, column: 5, scope: !3889)
!3892 = !DILocation(line: 1933, column: 17, scope: !3889)
!3893 = !DILocation(line: 1934, column: 3, scope: !3889)
!3894 = !DILocation(line: 1935, column: 10, scope: !809)
!3895 = !DILocation(line: 1935, column: 19, scope: !809)
!3896 = !DILocation(line: 1935, column: 3, scope: !809)
!3897 = !DILocalVariable(name: "parser", arg: 1, scope: !810, file: !1, line: 1939, type: !162)
!3898 = !DILocation(line: 1939, column: 33, scope: !810)
!3899 = !DILocalVariable(name: "model", arg: 2, scope: !810, file: !1, line: 1939, type: !295)
!3900 = !DILocation(line: 1939, column: 54, scope: !810)
!3901 = !DILocation(line: 1941, column: 3, scope: !810)
!3902 = !DILocation(line: 1942, column: 1, scope: !810)
!3903 = !DILocalVariable(name: "parser", arg: 1, scope: !813, file: !1, line: 1945, type: !162)
!3904 = !DILocation(line: 1945, column: 26, scope: !813)
!3905 = !DILocalVariable(name: "size", arg: 2, scope: !813, file: !1, line: 1945, type: !180)
!3906 = !DILocation(line: 1945, column: 41, scope: !813)
!3907 = !DILocation(line: 1947, column: 10, scope: !813)
!3908 = !DILocation(line: 1947, column: 3, scope: !813)
!3909 = !DILocalVariable(name: "parser", arg: 1, scope: !816, file: !1, line: 1951, type: !162)
!3910 = !DILocation(line: 1951, column: 27, scope: !816)
!3911 = !DILocalVariable(name: "ptr", arg: 2, scope: !816, file: !1, line: 1951, type: !161)
!3912 = !DILocation(line: 1951, column: 41, scope: !816)
!3913 = !DILocalVariable(name: "size", arg: 3, scope: !816, file: !1, line: 1951, type: !180)
!3914 = !DILocation(line: 1951, column: 53, scope: !816)
!3915 = !DILocation(line: 1953, column: 10, scope: !816)
!3916 = !DILocation(line: 1953, column: 3, scope: !816)
!3917 = !DILocalVariable(name: "parser", arg: 1, scope: !819, file: !1, line: 1957, type: !162)
!3918 = !DILocation(line: 1957, column: 24, scope: !819)
!3919 = !DILocalVariable(name: "ptr", arg: 2, scope: !819, file: !1, line: 1957, type: !161)
!3920 = !DILocation(line: 1957, column: 38, scope: !819)
!3921 = !DILocation(line: 1959, column: 3, scope: !819)
!3922 = !DILocation(line: 1960, column: 1, scope: !819)
!3923 = !DILocalVariable(name: "parser", arg: 1, scope: !820, file: !1, line: 1963, type: !162)
!3924 = !DILocation(line: 1963, column: 31, scope: !820)
!3925 = !DILocation(line: 1965, column: 7, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !820, file: !1, line: 1965, column: 7)
!3927 = !DILocation(line: 1965, column: 7, scope: !820)
!3928 = !DILocation(line: 1966, column: 9, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !1, line: 1966, column: 9)
!3930 = distinct !DILexicalBlock(scope: !3926, file: !1, line: 1965, column: 23)
!3931 = !DILocation(line: 1966, column: 9, scope: !3930)
!3932 = !DILocation(line: 1967, column: 21, scope: !3929)
!3933 = !DILocation(line: 1968, column: 21, scope: !3929)
!3934 = !DILocation(line: 1969, column: 21, scope: !3929)
!3935 = !DILocation(line: 1969, column: 43, scope: !3929)
!3936 = !DILocation(line: 1970, column: 21, scope: !3929)
!3937 = !DILocation(line: 1970, column: 43, scope: !3929)
!3938 = !DILocation(line: 1967, column: 7, scope: !3929)
!3939 = !DILocation(line: 1972, column: 21, scope: !3929)
!3940 = !DILocation(line: 1972, column: 29, scope: !3929)
!3941 = !DILocation(line: 1972, column: 39, scope: !3929)
!3942 = !DILocation(line: 1972, column: 49, scope: !3929)
!3943 = !DILocation(line: 1972, column: 7, scope: !3929)
!3944 = !DILocation(line: 1973, column: 3, scope: !3930)
!3945 = !DILocation(line: 1974, column: 1, scope: !820)
!3946 = !DILocalVariable(name: "parser", arg: 1, scope: !991, file: !1, line: 5379, type: !162)
!3947 = !DILocation(line: 5379, column: 26, scope: !991)
!3948 = !DILocalVariable(name: "enc", arg: 2, scope: !991, file: !1, line: 5379, type: !321)
!3949 = !DILocation(line: 5379, column: 50, scope: !991)
!3950 = !DILocalVariable(name: "s", arg: 3, scope: !991, file: !1, line: 5380, type: !192)
!3951 = !DILocation(line: 5380, column: 27, scope: !991)
!3952 = !DILocalVariable(name: "end", arg: 4, scope: !991, file: !1, line: 5380, type: !192)
!3953 = !DILocation(line: 5380, column: 42, scope: !991)
!3954 = !DILocation(line: 5382, column: 7, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !991, file: !1, line: 5382, column: 7)
!3956 = !DILocation(line: 5382, column: 7, scope: !991)
!3957 = !DILocalVariable(name: "convert_res", scope: !3958, file: !1, line: 5383, type: !18)
!3958 = distinct !DILexicalBlock(scope: !3955, file: !1, line: 5382, column: 29)
!3959 = !DILocation(line: 5383, column: 29, scope: !3958)
!3960 = !DILocalVariable(name: "eventPP", scope: !3958, file: !1, line: 5384, type: !332)
!3961 = !DILocation(line: 5384, column: 18, scope: !3958)
!3962 = !DILocalVariable(name: "eventEndPP", scope: !3958, file: !1, line: 5385, type: !332)
!3963 = !DILocation(line: 5385, column: 18, scope: !3958)
!3964 = !DILocation(line: 5386, column: 9, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3958, file: !1, line: 5386, column: 9)
!3966 = !DILocation(line: 5386, column: 16, scope: !3965)
!3967 = !DILocation(line: 5386, column: 13, scope: !3965)
!3968 = !DILocation(line: 5386, column: 9, scope: !3958)
!3969 = !DILocation(line: 5387, column: 18, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3965, file: !1, line: 5386, column: 26)
!3971 = !DILocation(line: 5387, column: 15, scope: !3970)
!3972 = !DILocation(line: 5388, column: 21, scope: !3970)
!3973 = !DILocation(line: 5388, column: 18, scope: !3970)
!3974 = !DILocation(line: 5389, column: 5, scope: !3970)
!3975 = !DILocation(line: 5391, column: 19, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3965, file: !1, line: 5390, column: 10)
!3977 = !DILocation(line: 5391, column: 41, scope: !3976)
!3978 = !DILocation(line: 5391, column: 15, scope: !3976)
!3979 = !DILocation(line: 5392, column: 22, scope: !3976)
!3980 = !DILocation(line: 5392, column: 44, scope: !3976)
!3981 = !DILocation(line: 5392, column: 18, scope: !3976)
!3982 = !DILocation(line: 5394, column: 5, scope: !3958)
!3983 = !DILocalVariable(name: "dataPtr", scope: !3984, file: !1, line: 5395, type: !648)
!3984 = distinct !DILexicalBlock(scope: !3958, file: !1, line: 5394, column: 8)
!3985 = !DILocation(line: 5395, column: 14, scope: !3984)
!3986 = !DILocation(line: 5395, column: 33, scope: !3984)
!3987 = !DILocation(line: 5396, column: 21, scope: !3984)
!3988 = !DILocation(line: 5396, column: 19, scope: !3984)
!3989 = !DILocation(line: 5397, column: 21, scope: !3984)
!3990 = !DILocation(line: 5397, column: 8, scope: !3984)
!3991 = !DILocation(line: 5397, column: 19, scope: !3984)
!3992 = !DILocation(line: 5398, column: 7, scope: !3984)
!3993 = !DILocation(line: 5398, column: 22, scope: !3984)
!3994 = !DILocation(line: 5398, column: 34, scope: !3984)
!3995 = !DILocation(line: 5398, column: 49, scope: !3984)
!3996 = !DILocation(line: 5398, column: 68, scope: !3984)
!3997 = !DILocation(line: 5398, column: 57, scope: !3984)
!3998 = !DILocation(line: 5398, column: 43, scope: !3984)
!3999 = !DILocation(line: 5399, column: 18, scope: !3984)
!4000 = !DILocation(line: 5399, column: 8, scope: !3984)
!4001 = !DILocation(line: 5399, column: 16, scope: !3984)
!4002 = !DILocation(line: 5400, column: 5, scope: !3984)
!4003 = !DILocation(line: 5400, column: 15, scope: !4004)
!4004 = !DILexicalBlockFile(scope: !3958, file: !1, discriminator: 1)
!4005 = !DILocation(line: 5400, column: 27, scope: !4004)
!4006 = !DILocation(line: 5400, column: 53, scope: !4004)
!4007 = !DILocation(line: 5400, column: 57, scope: !4008)
!4008 = !DILexicalBlockFile(scope: !3958, file: !1, discriminator: 2)
!4009 = !DILocation(line: 5400, column: 69, scope: !4008)
!4010 = !DILocation(line: 5400, column: 5, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !3984, file: !1, discriminator: 3)
!4012 = !DILocation(line: 5401, column: 3, scope: !3958)
!4013 = !DILocation(line: 5403, column: 5, scope: !3955)
!4014 = !DILocation(line: 5403, column: 20, scope: !3955)
!4015 = !DILocation(line: 5403, column: 44, scope: !3955)
!4016 = !DILocation(line: 5403, column: 65, scope: !3955)
!4017 = !DILocation(line: 5403, column: 83, scope: !3955)
!4018 = !DILocation(line: 5403, column: 69, scope: !3955)
!4019 = !DILocation(line: 5403, column: 47, scope: !3955)
!4020 = !DILocation(line: 5404, column: 1, scope: !991)
!4021 = !DILocalVariable(name: "code", arg: 1, scope: !821, file: !1, line: 1977, type: !24)
!4022 = !DILocation(line: 1977, column: 32, scope: !821)
!4023 = !DILocation(line: 2022, column: 7, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !821, file: !1, line: 2022, column: 7)
!4025 = !DILocation(line: 2022, column: 12, scope: !4024)
!4026 = !DILocation(line: 2022, column: 16, scope: !4024)
!4027 = !DILocation(line: 2022, column: 19, scope: !4028)
!4028 = !DILexicalBlockFile(scope: !4024, file: !1, discriminator: 1)
!4029 = !DILocation(line: 2022, column: 24, scope: !4028)
!4030 = !DILocation(line: 2022, column: 7, scope: !4028)
!4031 = !DILocation(line: 2023, column: 20, scope: !4024)
!4032 = !DILocation(line: 2023, column: 12, scope: !4024)
!4033 = !DILocation(line: 2023, column: 5, scope: !4024)
!4034 = !DILocation(line: 2024, column: 3, scope: !821)
!4035 = !DILocation(line: 2025, column: 1, scope: !821)
!4036 = !DILocation(line: 2041, column: 3, scope: !827)
!4037 = !DILocalVariable(name: "version", scope: !830, file: !1, line: 2050, type: !833)
!4038 = !DILocation(line: 2050, column: 21, scope: !830)
!4039 = !DILocation(line: 2052, column: 11, scope: !830)
!4040 = !DILocation(line: 2052, column: 17, scope: !830)
!4041 = !DILocation(line: 2053, column: 11, scope: !830)
!4042 = !DILocation(line: 2053, column: 17, scope: !830)
!4043 = !DILocation(line: 2054, column: 11, scope: !830)
!4044 = !DILocation(line: 2054, column: 17, scope: !830)
!4045 = !DILocation(line: 2056, column: 10, scope: !830)
!4046 = !DILocation(line: 2056, column: 3, scope: !830)
!4047 = !DILocation(line: 2056, column: 3, scope: !4048)
!4048 = !DILexicalBlockFile(scope: !830, file: !1, discriminator: 1)
!4049 = !DILocation(line: 2095, column: 3, scope: !839)
!4050 = !DILocalVariable(name: "ms", arg: 1, scope: !853, file: !1, line: 5699, type: !543)
!4051 = !DILocation(line: 5699, column: 44, scope: !853)
!4052 = !DILocalVariable(name: "p", scope: !853, file: !1, line: 5701, type: !523)
!4053 = !DILocation(line: 5701, column: 8, scope: !853)
!4054 = !DILocation(line: 5701, column: 19, scope: !853)
!4055 = !DILocation(line: 5701, column: 23, scope: !853)
!4056 = !DILocation(line: 5701, column: 12, scope: !853)
!4057 = !DILocation(line: 5702, column: 7, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !853, file: !1, line: 5702, column: 7)
!4059 = !DILocation(line: 5702, column: 9, scope: !4058)
!4060 = !DILocation(line: 5702, column: 7, scope: !853)
!4061 = !DILocation(line: 5703, column: 12, scope: !4058)
!4062 = !DILocation(line: 5703, column: 5, scope: !4058)
!4063 = !DILocation(line: 5704, column: 14, scope: !853)
!4064 = !DILocation(line: 5704, column: 17, scope: !853)
!4065 = !DILocation(line: 5704, column: 24, scope: !853)
!4066 = !DILocation(line: 5704, column: 3, scope: !853)
!4067 = !DILocation(line: 5705, column: 14, scope: !853)
!4068 = !DILocation(line: 5705, column: 17, scope: !853)
!4069 = !DILocation(line: 5705, column: 35, scope: !853)
!4070 = !DILocation(line: 5705, column: 3, scope: !853)
!4071 = !DILocation(line: 5706, column: 19, scope: !853)
!4072 = !DILocation(line: 5706, column: 22, scope: !853)
!4073 = !DILocation(line: 5706, column: 40, scope: !853)
!4074 = !DILocation(line: 5706, column: 3, scope: !853)
!4075 = !DILocation(line: 5707, column: 19, scope: !853)
!4076 = !DILocation(line: 5707, column: 22, scope: !853)
!4077 = !DILocation(line: 5707, column: 37, scope: !853)
!4078 = !DILocation(line: 5707, column: 3, scope: !853)
!4079 = !DILocation(line: 5708, column: 19, scope: !853)
!4080 = !DILocation(line: 5708, column: 22, scope: !853)
!4081 = !DILocation(line: 5708, column: 37, scope: !853)
!4082 = !DILocation(line: 5708, column: 3, scope: !853)
!4083 = !DILocation(line: 5709, column: 19, scope: !853)
!4084 = !DILocation(line: 5709, column: 22, scope: !853)
!4085 = !DILocation(line: 5709, column: 33, scope: !853)
!4086 = !DILocation(line: 5709, column: 3, scope: !853)
!4087 = !DILocation(line: 5714, column: 3, scope: !853)
!4088 = !DILocation(line: 5714, column: 6, scope: !853)
!4089 = !DILocation(line: 5714, column: 20, scope: !853)
!4090 = !DILocation(line: 5714, column: 25, scope: !853)
!4091 = !DILocation(line: 5715, column: 3, scope: !853)
!4092 = !DILocation(line: 5715, column: 6, scope: !853)
!4093 = !DILocation(line: 5715, column: 20, scope: !853)
!4094 = !DILocation(line: 5715, column: 28, scope: !853)
!4095 = !DILocation(line: 5717, column: 3, scope: !853)
!4096 = !DILocation(line: 5717, column: 6, scope: !853)
!4097 = !DILocation(line: 5717, column: 16, scope: !853)
!4098 = !DILocation(line: 5718, column: 3, scope: !853)
!4099 = !DILocation(line: 5718, column: 6, scope: !853)
!4100 = !DILocation(line: 5718, column: 17, scope: !853)
!4101 = !DILocation(line: 5719, column: 3, scope: !853)
!4102 = !DILocation(line: 5719, column: 6, scope: !853)
!4103 = !DILocation(line: 5719, column: 15, scope: !853)
!4104 = !DILocation(line: 5720, column: 3, scope: !853)
!4105 = !DILocation(line: 5720, column: 6, scope: !853)
!4106 = !DILocation(line: 5720, column: 17, scope: !853)
!4107 = !DILocation(line: 5721, column: 3, scope: !853)
!4108 = !DILocation(line: 5721, column: 6, scope: !853)
!4109 = !DILocation(line: 5721, column: 16, scope: !853)
!4110 = !DILocation(line: 5722, column: 3, scope: !853)
!4111 = !DILocation(line: 5722, column: 6, scope: !853)
!4112 = !DILocation(line: 5722, column: 17, scope: !853)
!4113 = !DILocation(line: 5723, column: 3, scope: !853)
!4114 = !DILocation(line: 5723, column: 6, scope: !853)
!4115 = !DILocation(line: 5723, column: 23, scope: !853)
!4116 = !DILocation(line: 5725, column: 3, scope: !853)
!4117 = !DILocation(line: 5725, column: 6, scope: !853)
!4118 = !DILocation(line: 5725, column: 21, scope: !853)
!4119 = !DILocation(line: 5726, column: 3, scope: !853)
!4120 = !DILocation(line: 5726, column: 6, scope: !853)
!4121 = !DILocation(line: 5726, column: 25, scope: !853)
!4122 = !DILocation(line: 5727, column: 3, scope: !853)
!4123 = !DILocation(line: 5727, column: 6, scope: !853)
!4124 = !DILocation(line: 5727, column: 17, scope: !853)
!4125 = !DILocation(line: 5728, column: 10, scope: !853)
!4126 = !DILocation(line: 5728, column: 3, scope: !853)
!4127 = !DILocation(line: 5729, column: 1, scope: !853)
!4128 = !DILocalVariable(name: "pool", arg: 1, scope: !860, file: !1, line: 6151, type: !863)
!4129 = !DILocation(line: 6151, column: 23, scope: !860)
!4130 = !DILocalVariable(name: "ms", arg: 2, scope: !860, file: !1, line: 6151, type: !543)
!4131 = !DILocation(line: 6151, column: 62, scope: !860)
!4132 = !DILocation(line: 6153, column: 3, scope: !860)
!4133 = !DILocation(line: 6153, column: 9, scope: !860)
!4134 = !DILocation(line: 6153, column: 16, scope: !860)
!4135 = !DILocation(line: 6154, column: 3, scope: !860)
!4136 = !DILocation(line: 6154, column: 9, scope: !860)
!4137 = !DILocation(line: 6154, column: 20, scope: !860)
!4138 = !DILocation(line: 6155, column: 3, scope: !860)
!4139 = !DILocation(line: 6155, column: 9, scope: !860)
!4140 = !DILocation(line: 6155, column: 15, scope: !860)
!4141 = !DILocation(line: 6156, column: 3, scope: !860)
!4142 = !DILocation(line: 6156, column: 9, scope: !860)
!4143 = !DILocation(line: 6156, column: 13, scope: !860)
!4144 = !DILocation(line: 6157, column: 3, scope: !860)
!4145 = !DILocation(line: 6157, column: 9, scope: !860)
!4146 = !DILocation(line: 6157, column: 13, scope: !860)
!4147 = !DILocation(line: 6158, column: 15, scope: !860)
!4148 = !DILocation(line: 6158, column: 3, scope: !860)
!4149 = !DILocation(line: 6158, column: 9, scope: !860)
!4150 = !DILocation(line: 6158, column: 13, scope: !860)
!4151 = !DILocation(line: 6159, column: 1, scope: !860)
!4152 = !DILocalVariable(name: "p", arg: 1, scope: !856, file: !1, line: 6123, type: !859)
!4153 = !DILocation(line: 6123, column: 27, scope: !856)
!4154 = !DILocalVariable(name: "ms", arg: 2, scope: !856, file: !1, line: 6123, type: !543)
!4155 = !DILocation(line: 6123, column: 63, scope: !856)
!4156 = !DILocation(line: 6125, column: 3, scope: !856)
!4157 = !DILocation(line: 6125, column: 6, scope: !856)
!4158 = !DILocation(line: 6125, column: 12, scope: !856)
!4159 = !DILocation(line: 6126, column: 3, scope: !856)
!4160 = !DILocation(line: 6126, column: 6, scope: !856)
!4161 = !DILocation(line: 6126, column: 11, scope: !856)
!4162 = !DILocation(line: 6127, column: 3, scope: !856)
!4163 = !DILocation(line: 6127, column: 6, scope: !856)
!4164 = !DILocation(line: 6127, column: 11, scope: !856)
!4165 = !DILocation(line: 6128, column: 3, scope: !856)
!4166 = !DILocation(line: 6128, column: 6, scope: !856)
!4167 = !DILocation(line: 6128, column: 8, scope: !856)
!4168 = !DILocation(line: 6129, column: 12, scope: !856)
!4169 = !DILocation(line: 6129, column: 3, scope: !856)
!4170 = !DILocation(line: 6129, column: 6, scope: !856)
!4171 = !DILocation(line: 6129, column: 10, scope: !856)
!4172 = !DILocation(line: 6130, column: 1, scope: !856)
!4173 = !DILocalVariable(name: "parser", arg: 1, scope: !870, file: !1, line: 3598, type: !162)
!4174 = !DILocation(line: 3598, column: 32, scope: !870)
!4175 = !DILocalVariable(name: "s", arg: 2, scope: !870, file: !1, line: 3599, type: !192)
!4176 = !DILocation(line: 3599, column: 33, scope: !870)
!4177 = !DILocalVariable(name: "end", arg: 3, scope: !870, file: !1, line: 3600, type: !192)
!4178 = !DILocation(line: 3600, column: 33, scope: !870)
!4179 = !DILocalVariable(name: "nextPtr", arg: 4, scope: !870, file: !1, line: 3601, type: !332)
!4180 = !DILocation(line: 3601, column: 34, scope: !870)
!4181 = !DILocalVariable(name: "result", scope: !870, file: !1, line: 3603, type: !24)
!4182 = !DILocation(line: 3603, column: 18, scope: !870)
!4183 = !DILocation(line: 3603, column: 46, scope: !870)
!4184 = !DILocation(line: 3603, column: 27, scope: !870)
!4185 = !DILocation(line: 3604, column: 7, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !870, file: !1, line: 3604, column: 7)
!4187 = !DILocation(line: 3604, column: 14, scope: !4186)
!4188 = !DILocation(line: 3604, column: 7, scope: !870)
!4189 = !DILocation(line: 3605, column: 12, scope: !4186)
!4190 = !DILocation(line: 3605, column: 5, scope: !4186)
!4191 = !DILocation(line: 3606, column: 3, scope: !870)
!4192 = !DILocation(line: 3606, column: 13, scope: !870)
!4193 = !DILocation(line: 3607, column: 26, scope: !870)
!4194 = !DILocation(line: 3607, column: 34, scope: !870)
!4195 = !DILocation(line: 3607, column: 37, scope: !870)
!4196 = !DILocation(line: 3607, column: 42, scope: !870)
!4197 = !DILocation(line: 3607, column: 10, scope: !870)
!4198 = !DILocation(line: 3607, column: 3, scope: !870)
!4199 = !DILocation(line: 3608, column: 1, scope: !870)
!4200 = !DILocalVariable(name: "parser", arg: 1, scope: !871, file: !1, line: 3441, type: !162)
!4201 = !DILocation(line: 3441, column: 31, scope: !871)
!4202 = !DILocalVariable(name: "s", scope: !871, file: !1, line: 3443, type: !192)
!4203 = !DILocation(line: 3443, column: 15, scope: !871)
!4204 = !DILocation(line: 3462, column: 7, scope: !871)
!4205 = !DILocation(line: 3462, column: 5, scope: !871)
!4206 = !DILocation(line: 3464, column: 8, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !871, file: !1, line: 3464, column: 7)
!4208 = !DILocation(line: 3464, column: 51, scope: !4207)
!4209 = !DILocation(line: 3464, column: 66, scope: !4207)
!4210 = !DILocation(line: 3464, column: 76, scope: !4207)
!4211 = !DILocation(line: 3464, column: 7, scope: !4207)
!4212 = !DILocation(line: 3464, column: 7, scope: !871)
!4213 = !DILocation(line: 3465, column: 5, scope: !4207)
!4214 = !DILocation(line: 3466, column: 32, scope: !871)
!4215 = !DILocation(line: 3466, column: 40, scope: !871)
!4216 = !DILocation(line: 3466, column: 10, scope: !871)
!4217 = !DILocation(line: 3466, column: 3, scope: !871)
!4218 = !DILocation(line: 3467, column: 1, scope: !871)
!4219 = !DILocalVariable(name: "parser", arg: 1, scope: !875, file: !1, line: 3783, type: !162)
!4220 = !DILocation(line: 3783, column: 28, scope: !875)
!4221 = !DILocalVariable(name: "s", arg: 2, scope: !875, file: !1, line: 3784, type: !192)
!4222 = !DILocation(line: 3784, column: 29, scope: !875)
!4223 = !DILocalVariable(name: "end", arg: 3, scope: !875, file: !1, line: 3785, type: !192)
!4224 = !DILocation(line: 3785, column: 29, scope: !875)
!4225 = !DILocalVariable(name: "nextPtr", arg: 4, scope: !875, file: !1, line: 3786, type: !332)
!4226 = !DILocation(line: 3786, column: 30, scope: !875)
!4227 = !DILocalVariable(name: "next", scope: !875, file: !1, line: 3788, type: !192)
!4228 = !DILocation(line: 3788, column: 15, scope: !875)
!4229 = !DILocation(line: 3788, column: 22, scope: !875)
!4230 = !DILocalVariable(name: "tok", scope: !875, file: !1, line: 3789, type: !223)
!4231 = !DILocation(line: 3789, column: 7, scope: !875)
!4232 = !DILocation(line: 3789, column: 13, scope: !875)
!4233 = !DILocation(line: 3790, column: 19, scope: !875)
!4234 = !DILocation(line: 3790, column: 27, scope: !875)
!4235 = !DILocation(line: 3790, column: 37, scope: !875)
!4236 = !DILocation(line: 3790, column: 40, scope: !875)
!4237 = !DILocation(line: 3790, column: 45, scope: !875)
!4238 = !DILocation(line: 3790, column: 50, scope: !875)
!4239 = !DILocation(line: 3791, column: 19, scope: !875)
!4240 = !DILocation(line: 3791, column: 39, scope: !875)
!4241 = !DILocation(line: 3791, column: 38, scope: !875)
!4242 = !DILocation(line: 3791, column: 28, scope: !875)
!4243 = !DILocation(line: 3790, column: 10, scope: !875)
!4244 = !DILocation(line: 3790, column: 3, scope: !875)
!4245 = !DILocalVariable(name: "parser", arg: 1, scope: !872, file: !1, line: 3559, type: !162)
!4246 = !DILocation(line: 3559, column: 34, scope: !872)
!4247 = !DILocalVariable(name: "encodingName", arg: 2, scope: !872, file: !1, line: 3559, type: !210)
!4248 = !DILocation(line: 3559, column: 58, scope: !872)
!4249 = !DILocation(line: 3561, column: 7, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !872, file: !1, line: 3561, column: 7)
!4251 = !DILocation(line: 3561, column: 7, scope: !872)
!4252 = !DILocalVariable(name: "info", scope: !4253, file: !1, line: 3562, type: !277)
!4253 = distinct !DILexicalBlock(scope: !4250, file: !1, line: 3561, column: 31)
!4254 = !DILocation(line: 3562, column: 18, scope: !4253)
!4255 = !DILocalVariable(name: "i", scope: !4253, file: !1, line: 3563, type: !223)
!4256 = !DILocation(line: 3563, column: 9, scope: !4253)
!4257 = !DILocation(line: 3564, column: 12, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4253, file: !1, line: 3564, column: 5)
!4259 = !DILocation(line: 3564, column: 10, scope: !4258)
!4260 = !DILocation(line: 3564, column: 17, scope: !4261)
!4261 = !DILexicalBlockFile(scope: !4262, file: !1, discriminator: 1)
!4262 = distinct !DILexicalBlock(scope: !4258, file: !1, line: 3564, column: 5)
!4263 = !DILocation(line: 3564, column: 19, scope: !4261)
!4264 = !DILocation(line: 3564, column: 5, scope: !4261)
!4265 = !DILocation(line: 3565, column: 16, scope: !4262)
!4266 = !DILocation(line: 3565, column: 7, scope: !4262)
!4267 = !DILocation(line: 3565, column: 12, scope: !4262)
!4268 = !DILocation(line: 3565, column: 19, scope: !4262)
!4269 = !DILocation(line: 3564, column: 27, scope: !4270)
!4270 = !DILexicalBlockFile(scope: !4262, file: !1, discriminator: 2)
!4271 = !DILocation(line: 3564, column: 5, scope: !4270)
!4272 = !DILocation(line: 3566, column: 10, scope: !4253)
!4273 = !DILocation(line: 3566, column: 18, scope: !4253)
!4274 = !DILocation(line: 3567, column: 10, scope: !4253)
!4275 = !DILocation(line: 3567, column: 15, scope: !4253)
!4276 = !DILocation(line: 3568, column: 10, scope: !4253)
!4277 = !DILocation(line: 3568, column: 18, scope: !4253)
!4278 = !DILocation(line: 3569, column: 9, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4253, file: !1, line: 3569, column: 9)
!4280 = !DILocation(line: 3569, column: 32, scope: !4279)
!4281 = !DILocation(line: 3569, column: 60, scope: !4279)
!4282 = !DILocation(line: 3569, column: 9, scope: !4253)
!4283 = !DILocalVariable(name: "enc", scope: !4284, file: !1, line: 3571, type: !4285)
!4284 = distinct !DILexicalBlock(scope: !4279, file: !1, line: 3570, column: 40)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64, align: 64)
!4286 = !DILocation(line: 3571, column: 17, scope: !4284)
!4287 = !DILocation(line: 3572, column: 28, scope: !4284)
!4288 = !DILocation(line: 3572, column: 28, scope: !4289)
!4289 = !DILexicalBlockFile(scope: !4284, file: !1, discriminator: 1)
!4290 = !DILocation(line: 3572, column: 7, scope: !4284)
!4291 = !DILocation(line: 3572, column: 26, scope: !4284)
!4292 = !DILocation(line: 3573, column: 12, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 3573, column: 11)
!4294 = !DILocation(line: 3573, column: 11, scope: !4284)
!4295 = !DILocation(line: 3574, column: 18, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 3574, column: 13)
!4297 = distinct !DILexicalBlock(scope: !4293, file: !1, line: 3573, column: 32)
!4298 = !DILocation(line: 3574, column: 13, scope: !4296)
!4299 = !DILocation(line: 3574, column: 13, scope: !4297)
!4300 = !DILocation(line: 3575, column: 16, scope: !4296)
!4301 = !DILocation(line: 3575, column: 29, scope: !4296)
!4302 = !DILocation(line: 3575, column: 11, scope: !4296)
!4303 = !DILocation(line: 3576, column: 9, scope: !4297)
!4304 = !DILocation(line: 3578, column: 14, scope: !4284)
!4305 = !DILocation(line: 3580, column: 40, scope: !4284)
!4306 = !DILocation(line: 3581, column: 45, scope: !4284)
!4307 = !DILocation(line: 3581, column: 40, scope: !4284)
!4308 = !DILocation(line: 3582, column: 45, scope: !4284)
!4309 = !DILocation(line: 3583, column: 45, scope: !4284)
!4310 = !DILocation(line: 3578, column: 13, scope: !4284)
!4311 = !DILocation(line: 3578, column: 11, scope: !4284)
!4312 = !DILocation(line: 3584, column: 11, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 3584, column: 11)
!4314 = !DILocation(line: 3584, column: 11, scope: !4284)
!4315 = !DILocation(line: 3585, column: 36, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4313, file: !1, line: 3584, column: 16)
!4317 = !DILocation(line: 3585, column: 9, scope: !4316)
!4318 = !DILocation(line: 3585, column: 29, scope: !4316)
!4319 = !DILocation(line: 3586, column: 39, scope: !4316)
!4320 = !DILocation(line: 3586, column: 9, scope: !4316)
!4321 = !DILocation(line: 3586, column: 32, scope: !4316)
!4322 = !DILocation(line: 3587, column: 20, scope: !4316)
!4323 = !DILocation(line: 3587, column: 9, scope: !4316)
!4324 = !DILocation(line: 3587, column: 18, scope: !4316)
!4325 = !DILocation(line: 3588, column: 9, scope: !4316)
!4326 = !DILocation(line: 3590, column: 5, scope: !4284)
!4327 = !DILocation(line: 3591, column: 14, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4253, file: !1, line: 3591, column: 9)
!4329 = !DILocation(line: 3591, column: 22, scope: !4328)
!4330 = !DILocation(line: 3591, column: 9, scope: !4253)
!4331 = !DILocation(line: 3592, column: 12, scope: !4328)
!4332 = !DILocation(line: 3592, column: 25, scope: !4328)
!4333 = !DILocation(line: 3592, column: 7, scope: !4328)
!4334 = !DILocation(line: 3593, column: 3, scope: !4253)
!4335 = !DILocation(line: 3594, column: 3, scope: !872)
!4336 = !DILocation(line: 3595, column: 1, scope: !872)
!4337 = !DILocalVariable(name: "parser", arg: 1, scope: !876, file: !1, line: 3795, type: !162)
!4338 = !DILocation(line: 3795, column: 21, scope: !876)
!4339 = !DILocalVariable(name: "enc", arg: 2, scope: !876, file: !1, line: 3796, type: !321)
!4340 = !DILocation(line: 3796, column: 26, scope: !876)
!4341 = !DILocalVariable(name: "s", arg: 3, scope: !876, file: !1, line: 3797, type: !192)
!4342 = !DILocation(line: 3797, column: 22, scope: !876)
!4343 = !DILocalVariable(name: "end", arg: 4, scope: !876, file: !1, line: 3798, type: !192)
!4344 = !DILocation(line: 3798, column: 22, scope: !876)
!4345 = !DILocalVariable(name: "tok", arg: 5, scope: !876, file: !1, line: 3799, type: !223)
!4346 = !DILocation(line: 3799, column: 14, scope: !876)
!4347 = !DILocalVariable(name: "next", arg: 6, scope: !876, file: !1, line: 3800, type: !192)
!4348 = !DILocation(line: 3800, column: 22, scope: !876)
!4349 = !DILocalVariable(name: "nextPtr", arg: 7, scope: !876, file: !1, line: 3801, type: !332)
!4350 = !DILocation(line: 3801, column: 23, scope: !876)
!4351 = !DILocalVariable(name: "haveMore", arg: 8, scope: !876, file: !1, line: 3802, type: !159)
!4352 = !DILocation(line: 3802, column: 19, scope: !876)
!4353 = !DILocalVariable(name: "dtd", scope: !876, file: !1, line: 3828, type: !2386)
!4354 = !DILocation(line: 3828, column: 15, scope: !876)
!4355 = !DILocation(line: 3828, column: 21, scope: !876)
!4356 = !DILocalVariable(name: "eventPP", scope: !876, file: !1, line: 3830, type: !332)
!4357 = !DILocation(line: 3830, column: 16, scope: !876)
!4358 = !DILocalVariable(name: "eventEndPP", scope: !876, file: !1, line: 3831, type: !332)
!4359 = !DILocation(line: 3831, column: 16, scope: !876)
!4360 = !DILocalVariable(name: "quant", scope: !876, file: !1, line: 3832, type: !12)
!4361 = !DILocation(line: 3832, column: 26, scope: !876)
!4362 = !DILocation(line: 3834, column: 7, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !876, file: !1, line: 3834, column: 7)
!4364 = !DILocation(line: 3834, column: 14, scope: !4363)
!4365 = !DILocation(line: 3834, column: 11, scope: !4363)
!4366 = !DILocation(line: 3834, column: 7, scope: !876)
!4367 = !DILocation(line: 3835, column: 16, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 3834, column: 24)
!4369 = !DILocation(line: 3835, column: 13, scope: !4368)
!4370 = !DILocation(line: 3836, column: 19, scope: !4368)
!4371 = !DILocation(line: 3836, column: 16, scope: !4368)
!4372 = !DILocation(line: 3837, column: 3, scope: !4368)
!4373 = !DILocation(line: 3839, column: 17, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 3838, column: 8)
!4375 = !DILocation(line: 3839, column: 39, scope: !4374)
!4376 = !DILocation(line: 3839, column: 13, scope: !4374)
!4377 = !DILocation(line: 3840, column: 20, scope: !4374)
!4378 = !DILocation(line: 3840, column: 42, scope: !4374)
!4379 = !DILocation(line: 3840, column: 16, scope: !4374)
!4380 = !DILocation(line: 3843, column: 3, scope: !876)
!4381 = !DILocalVariable(name: "role", scope: !4382, file: !1, line: 3844, type: !223)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 3843, column: 12)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !1, line: 3843, column: 3)
!4384 = distinct !DILexicalBlock(scope: !876, file: !1, line: 3843, column: 3)
!4385 = !DILocation(line: 3844, column: 9, scope: !4382)
!4386 = !DILocalVariable(name: "handleDefault", scope: !4382, file: !1, line: 3845, type: !159)
!4387 = !DILocation(line: 3845, column: 14, scope: !4382)
!4388 = !DILocation(line: 3846, column: 16, scope: !4382)
!4389 = !DILocation(line: 3846, column: 6, scope: !4382)
!4390 = !DILocation(line: 3846, column: 14, scope: !4382)
!4391 = !DILocation(line: 3847, column: 19, scope: !4382)
!4392 = !DILocation(line: 3847, column: 6, scope: !4382)
!4393 = !DILocation(line: 3847, column: 17, scope: !4382)
!4394 = !DILocation(line: 3848, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4382, file: !1, line: 3848, column: 9)
!4396 = !DILocation(line: 3848, column: 13, scope: !4395)
!4397 = !DILocation(line: 3848, column: 9, scope: !4382)
!4398 = !DILocation(line: 3849, column: 11, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 3849, column: 11)
!4400 = distinct !DILexicalBlock(scope: !4395, file: !1, line: 3848, column: 19)
!4401 = !DILocation(line: 3849, column: 20, scope: !4399)
!4402 = !DILocation(line: 3849, column: 23, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !4399, file: !1, discriminator: 1)
!4404 = !DILocation(line: 3849, column: 27, scope: !4403)
!4405 = !DILocation(line: 3849, column: 11, scope: !4403)
!4406 = !DILocation(line: 3850, column: 20, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4399, file: !1, line: 3849, column: 47)
!4408 = !DILocation(line: 3850, column: 10, scope: !4407)
!4409 = !DILocation(line: 3850, column: 18, scope: !4407)
!4410 = !DILocation(line: 3851, column: 9, scope: !4407)
!4411 = !DILocation(line: 3853, column: 15, scope: !4400)
!4412 = !DILocation(line: 3853, column: 7, scope: !4400)
!4413 = !DILocation(line: 3855, column: 20, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 3853, column: 20)
!4415 = !DILocation(line: 3855, column: 10, scope: !4414)
!4416 = !DILocation(line: 3855, column: 18, scope: !4414)
!4417 = !DILocation(line: 3856, column: 9, scope: !4414)
!4418 = !DILocation(line: 3858, column: 9, scope: !4414)
!4419 = !DILocation(line: 3860, column: 9, scope: !4414)
!4420 = !DILocation(line: 3862, column: 16, scope: !4414)
!4421 = !DILocation(line: 3862, column: 15, scope: !4414)
!4422 = !DILocation(line: 3862, column: 13, scope: !4414)
!4423 = !DILocation(line: 3863, column: 9, scope: !4414)
!4424 = !DILocation(line: 3883, column: 9, scope: !4414)
!4425 = !DILocation(line: 3885, column: 16, scope: !4414)
!4426 = !DILocation(line: 3885, column: 15, scope: !4414)
!4427 = !DILocation(line: 3885, column: 13, scope: !4414)
!4428 = !DILocation(line: 3886, column: 16, scope: !4414)
!4429 = !DILocation(line: 3886, column: 14, scope: !4414)
!4430 = !DILocation(line: 3887, column: 9, scope: !4414)
!4431 = !DILocation(line: 3889, column: 5, scope: !4400)
!4432 = !DILocation(line: 3890, column: 12, scope: !4382)
!4433 = !DILocation(line: 3890, column: 10, scope: !4382)
!4434 = !DILocation(line: 3891, column: 13, scope: !4382)
!4435 = !DILocation(line: 3891, column: 5, scope: !4382)
!4436 = !DILocalVariable(name: "result", scope: !4437, file: !1, line: 3894, type: !24)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 3893, column: 7)
!4438 = distinct !DILexicalBlock(scope: !4382, file: !1, line: 3891, column: 19)
!4439 = !DILocation(line: 3894, column: 24, scope: !4437)
!4440 = !DILocation(line: 3894, column: 48, scope: !4437)
!4441 = !DILocation(line: 3894, column: 59, scope: !4437)
!4442 = !DILocation(line: 3894, column: 62, scope: !4437)
!4443 = !DILocation(line: 3894, column: 33, scope: !4437)
!4444 = !DILocation(line: 3895, column: 13, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4437, file: !1, line: 3895, column: 13)
!4446 = !DILocation(line: 3895, column: 20, scope: !4445)
!4447 = !DILocation(line: 3895, column: 13, scope: !4437)
!4448 = !DILocation(line: 3896, column: 18, scope: !4445)
!4449 = !DILocation(line: 3896, column: 11, scope: !4445)
!4450 = !DILocation(line: 3897, column: 15, scope: !4437)
!4451 = !DILocation(line: 3897, column: 13, scope: !4437)
!4452 = !DILocation(line: 3898, column: 23, scope: !4437)
!4453 = !DILocation(line: 3900, column: 7, scope: !4438)
!4454 = !DILocation(line: 3902, column: 11, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 3902, column: 11)
!4456 = !DILocation(line: 3902, column: 11, scope: !4438)
!4457 = !DILocation(line: 3903, column: 40, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4455, file: !1, line: 3902, column: 36)
!4459 = !DILocation(line: 3903, column: 50, scope: !4458)
!4460 = !DILocation(line: 3903, column: 55, scope: !4458)
!4461 = !DILocation(line: 3903, column: 58, scope: !4458)
!4462 = !DILocation(line: 3903, column: 23, scope: !4458)
!4463 = !DILocation(line: 3903, column: 9, scope: !4458)
!4464 = !DILocation(line: 3903, column: 21, scope: !4458)
!4465 = !DILocation(line: 3904, column: 14, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4458, file: !1, line: 3904, column: 13)
!4467 = !DILocation(line: 3904, column: 13, scope: !4458)
!4468 = !DILocation(line: 3905, column: 11, scope: !4466)
!4469 = !DILocation(line: 3906, column: 9, scope: !4458)
!4470 = !DILocation(line: 3907, column: 9, scope: !4458)
!4471 = !DILocation(line: 3907, column: 22, scope: !4458)
!4472 = !DILocation(line: 3908, column: 23, scope: !4458)
!4473 = !DILocation(line: 3909, column: 7, scope: !4458)
!4474 = !DILocation(line: 3910, column: 7, scope: !4438)
!4475 = !DILocation(line: 3910, column: 20, scope: !4438)
!4476 = !DILocation(line: 3911, column: 7, scope: !4438)
!4477 = !DILocation(line: 3913, column: 11, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 3913, column: 11)
!4479 = !DILocation(line: 3913, column: 11, scope: !4438)
!4480 = !DILocation(line: 3914, column: 9, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4478, file: !1, line: 3913, column: 36)
!4482 = !DILocation(line: 3914, column: 33, scope: !4481)
!4483 = !DILocation(line: 3914, column: 45, scope: !4481)
!4484 = !DILocation(line: 3914, column: 58, scope: !4481)
!4485 = !DILocation(line: 3915, column: 33, scope: !4481)
!4486 = !DILocation(line: 3916, column: 9, scope: !4481)
!4487 = !DILocation(line: 3916, column: 21, scope: !4481)
!4488 = !DILocation(line: 3917, column: 20, scope: !4481)
!4489 = !DILocation(line: 3917, column: 9, scope: !4481)
!4490 = !DILocation(line: 3918, column: 23, scope: !4481)
!4491 = !DILocation(line: 3919, column: 7, scope: !4481)
!4492 = !DILocation(line: 3920, column: 7, scope: !4438)
!4493 = !DILocation(line: 3942, column: 7, scope: !4438)
!4494 = !DILocation(line: 3942, column: 12, scope: !4438)
!4495 = !DILocation(line: 3942, column: 31, scope: !4438)
!4496 = !DILocation(line: 3943, column: 11, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 3943, column: 11)
!4498 = !DILocation(line: 3943, column: 11, scope: !4438)
!4499 = !DILocalVariable(name: "pubId", scope: !4500, file: !1, line: 3944, type: !202)
!4500 = distinct !DILexicalBlock(scope: !4497, file: !1, line: 3943, column: 36)
!4501 = !DILocation(line: 3944, column: 19, scope: !4500)
!4502 = !DILocation(line: 3945, column: 14, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 3945, column: 13)
!4504 = !DILocation(line: 3945, column: 13, scope: !4500)
!4505 = !DILocation(line: 3946, column: 11, scope: !4503)
!4506 = !DILocation(line: 3947, column: 34, scope: !4500)
!4507 = !DILocation(line: 3947, column: 44, scope: !4500)
!4508 = !DILocation(line: 3948, column: 33, scope: !4500)
!4509 = !DILocation(line: 3948, column: 37, scope: !4500)
!4510 = !DILocation(line: 3948, column: 42, scope: !4500)
!4511 = !DILocation(line: 3948, column: 35, scope: !4500)
!4512 = !DILocation(line: 3949, column: 33, scope: !4500)
!4513 = !DILocation(line: 3949, column: 40, scope: !4500)
!4514 = !DILocation(line: 3949, column: 45, scope: !4500)
!4515 = !DILocation(line: 3949, column: 38, scope: !4500)
!4516 = !DILocation(line: 3947, column: 17, scope: !4500)
!4517 = !DILocation(line: 3947, column: 15, scope: !4500)
!4518 = !DILocation(line: 3950, column: 14, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 3950, column: 13)
!4520 = !DILocation(line: 3950, column: 13, scope: !4500)
!4521 = !DILocation(line: 3951, column: 11, scope: !4519)
!4522 = !DILocation(line: 3952, column: 27, scope: !4500)
!4523 = !DILocation(line: 3952, column: 9, scope: !4500)
!4524 = !DILocation(line: 3953, column: 9, scope: !4500)
!4525 = !DILocation(line: 3954, column: 24, scope: !4500)
!4526 = !DILocation(line: 3954, column: 9, scope: !4500)
!4527 = !DILocation(line: 3954, column: 22, scope: !4500)
!4528 = !DILocation(line: 3955, column: 23, scope: !4500)
!4529 = !DILocation(line: 3956, column: 9, scope: !4500)
!4530 = !DILocation(line: 3943, column: 11, scope: !4531)
!4531 = !DILexicalBlockFile(scope: !4497, file: !1, discriminator: 1)
!4532 = !DILocation(line: 3960, column: 12, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 3960, column: 11)
!4534 = !DILocation(line: 3960, column: 11, scope: !4438)
!4535 = !DILocation(line: 3961, column: 9, scope: !4533)
!4536 = !DILocation(line: 3960, column: 12, scope: !4537)
!4537 = !DILexicalBlockFile(scope: !4533, file: !1, discriminator: 1)
!4538 = !DILocation(line: 3963, column: 11, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 3963, column: 11)
!4540 = !DILocation(line: 3963, column: 16, scope: !4539)
!4541 = !DILocation(line: 3963, column: 31, scope: !4539)
!4542 = !DILocation(line: 3963, column: 34, scope: !4543)
!4543 = !DILexicalBlockFile(scope: !4539, file: !1, discriminator: 1)
!4544 = !DILocation(line: 3963, column: 11, scope: !4543)
!4545 = !DILocalVariable(name: "tem", scope: !4546, file: !1, line: 3964, type: !202)
!4546 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 3963, column: 46)
!4547 = !DILocation(line: 3964, column: 19, scope: !4546)
!4548 = !DILocation(line: 3964, column: 42, scope: !4546)
!4549 = !DILocation(line: 3964, column: 47, scope: !4546)
!4550 = !DILocation(line: 3965, column: 41, scope: !4546)
!4551 = !DILocation(line: 3966, column: 41, scope: !4546)
!4552 = !DILocation(line: 3966, column: 45, scope: !4546)
!4553 = !DILocation(line: 3966, column: 50, scope: !4546)
!4554 = !DILocation(line: 3966, column: 43, scope: !4546)
!4555 = !DILocation(line: 3967, column: 41, scope: !4546)
!4556 = !DILocation(line: 3967, column: 48, scope: !4546)
!4557 = !DILocation(line: 3967, column: 53, scope: !4546)
!4558 = !DILocation(line: 3967, column: 46, scope: !4546)
!4559 = !DILocation(line: 3964, column: 25, scope: !4546)
!4560 = !DILocation(line: 3968, column: 14, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4546, file: !1, line: 3968, column: 13)
!4562 = !DILocation(line: 3968, column: 13, scope: !4546)
!4563 = !DILocation(line: 3969, column: 11, scope: !4561)
!4564 = !DILocation(line: 3970, column: 27, scope: !4546)
!4565 = !DILocation(line: 3970, column: 9, scope: !4546)
!4566 = !DILocation(line: 3971, column: 32, scope: !4546)
!4567 = !DILocation(line: 3971, column: 9, scope: !4546)
!4568 = !DILocation(line: 3971, column: 21, scope: !4546)
!4569 = !DILocation(line: 3971, column: 30, scope: !4546)
!4570 = !DILocation(line: 3972, column: 9, scope: !4546)
!4571 = !DILocation(line: 3973, column: 13, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4546, file: !1, line: 3973, column: 13)
!4573 = !DILocation(line: 3973, column: 13, scope: !4546)
!4574 = !DILocation(line: 3974, column: 25, scope: !4572)
!4575 = !DILocation(line: 3974, column: 11, scope: !4572)
!4576 = !DILocation(line: 3975, column: 7, scope: !4546)
!4577 = !DILocation(line: 3976, column: 7, scope: !4438)
!4578 = !DILocation(line: 3978, column: 11, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 3978, column: 11)
!4580 = !DILocation(line: 3978, column: 11, scope: !4438)
!4581 = !DILocation(line: 3979, column: 9, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4579, file: !1, line: 3978, column: 24)
!4583 = !DILocation(line: 3979, column: 33, scope: !4582)
!4584 = !DILocation(line: 3979, column: 45, scope: !4582)
!4585 = !DILocation(line: 3980, column: 33, scope: !4582)
!4586 = !DILocation(line: 3980, column: 47, scope: !4582)
!4587 = !DILocation(line: 3981, column: 20, scope: !4582)
!4588 = !DILocation(line: 3981, column: 9, scope: !4582)
!4589 = !DILocation(line: 3982, column: 23, scope: !4582)
!4590 = !DILocation(line: 3983, column: 7, scope: !4582)
!4591 = !DILocation(line: 4024, column: 11, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4024, column: 11)
!4593 = !DILocation(line: 4024, column: 11, scope: !4438)
!4594 = !DILocation(line: 4025, column: 9, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 4024, column: 34)
!4596 = !DILocation(line: 4025, column: 31, scope: !4595)
!4597 = !DILocation(line: 4026, column: 23, scope: !4595)
!4598 = !DILocation(line: 4027, column: 7, scope: !4595)
!4599 = !DILocation(line: 4028, column: 7, scope: !4438)
!4600 = !DILocation(line: 4066, column: 7, scope: !4438)
!4601 = !DILocation(line: 4066, column: 17, scope: !4438)
!4602 = !DILocation(line: 4067, column: 31, scope: !4438)
!4603 = !DILocation(line: 4067, column: 39, scope: !4438)
!4604 = !DILocation(line: 4067, column: 42, scope: !4438)
!4605 = !DILocation(line: 4067, column: 47, scope: !4438)
!4606 = !DILocation(line: 4067, column: 14, scope: !4438)
!4607 = !DILocation(line: 4067, column: 7, scope: !4438)
!4608 = !DILocation(line: 4069, column: 40, scope: !4438)
!4609 = !DILocation(line: 4069, column: 48, scope: !4438)
!4610 = !DILocation(line: 4069, column: 53, scope: !4438)
!4611 = !DILocation(line: 4069, column: 56, scope: !4438)
!4612 = !DILocation(line: 4069, column: 25, scope: !4438)
!4613 = !DILocation(line: 4069, column: 7, scope: !4438)
!4614 = !DILocation(line: 4069, column: 23, scope: !4438)
!4615 = !DILocation(line: 4070, column: 12, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4070, column: 11)
!4617 = !DILocation(line: 4070, column: 11, scope: !4438)
!4618 = !DILocation(line: 4071, column: 9, scope: !4616)
!4619 = !DILocation(line: 4072, column: 7, scope: !4438)
!4620 = !DILocation(line: 4074, column: 40, scope: !4438)
!4621 = !DILocation(line: 4074, column: 48, scope: !4438)
!4622 = !DILocation(line: 4074, column: 53, scope: !4438)
!4623 = !DILocation(line: 4074, column: 56, scope: !4438)
!4624 = !DILocation(line: 4074, column: 25, scope: !4438)
!4625 = !DILocation(line: 4074, column: 7, scope: !4438)
!4626 = !DILocation(line: 4074, column: 23, scope: !4438)
!4627 = !DILocation(line: 4075, column: 12, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4075, column: 11)
!4629 = !DILocation(line: 4075, column: 11, scope: !4438)
!4630 = !DILocation(line: 4076, column: 9, scope: !4628)
!4631 = !DILocation(line: 4077, column: 7, scope: !4438)
!4632 = !DILocation(line: 4077, column: 28, scope: !4438)
!4633 = !DILocation(line: 4078, column: 7, scope: !4438)
!4634 = !DILocation(line: 4078, column: 25, scope: !4438)
!4635 = !DILocation(line: 4079, column: 7, scope: !4438)
!4636 = !DILocation(line: 4079, column: 25, scope: !4438)
!4637 = !DILocation(line: 4080, column: 7, scope: !4438)
!4638 = !DILocation(line: 4082, column: 7, scope: !4438)
!4639 = !DILocation(line: 4082, column: 28, scope: !4438)
!4640 = !DILocation(line: 4083, column: 7, scope: !4438)
!4641 = !DILocation(line: 4083, column: 25, scope: !4438)
!4642 = !DILocation(line: 4084, column: 7, scope: !4438)
!4643 = !DILocation(line: 4086, column: 7, scope: !4438)
!4644 = !DILocation(line: 4086, column: 25, scope: !4438)
!4645 = !DILocation(line: 4087, column: 7, scope: !4438)
!4646 = !DILocation(line: 4087, column: 25, scope: !4438)
!4647 = !DILocation(line: 4088, column: 7, scope: !4438)
!4648 = !DILocation(line: 4090, column: 7, scope: !4438)
!4649 = !DILocation(line: 4090, column: 25, scope: !4438)
!4650 = !DILocation(line: 4091, column: 7, scope: !4438)
!4651 = !DILocation(line: 4093, column: 7, scope: !4438)
!4652 = !DILocation(line: 4093, column: 25, scope: !4438)
!4653 = !DILocation(line: 4094, column: 7, scope: !4438)
!4654 = !DILocation(line: 4096, column: 7, scope: !4438)
!4655 = !DILocation(line: 4096, column: 25, scope: !4438)
!4656 = !DILocation(line: 4097, column: 7, scope: !4438)
!4657 = !DILocation(line: 4099, column: 7, scope: !4438)
!4658 = !DILocation(line: 4099, column: 25, scope: !4438)
!4659 = !DILocation(line: 4100, column: 7, scope: !4438)
!4660 = !DILocation(line: 4102, column: 7, scope: !4438)
!4661 = !DILocation(line: 4102, column: 25, scope: !4438)
!4662 = !DILocation(line: 4103, column: 7, scope: !4438)
!4663 = !DILocation(line: 4105, column: 7, scope: !4438)
!4664 = !DILocation(line: 4105, column: 25, scope: !4438)
!4665 = !DILocation(line: 4107, column: 11, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4107, column: 11)
!4667 = !DILocation(line: 4107, column: 16, scope: !4666)
!4668 = !DILocation(line: 4107, column: 31, scope: !4666)
!4669 = !DILocation(line: 4107, column: 34, scope: !4670)
!4670 = !DILexicalBlockFile(scope: !4666, file: !1, discriminator: 1)
!4671 = !DILocation(line: 4107, column: 11, scope: !4670)
!4672 = !DILocation(line: 4108, column: 23, scope: !4666)
!4673 = !DILocation(line: 4108, column: 9, scope: !4666)
!4674 = !DILocation(line: 4109, column: 7, scope: !4438)
!4675 = !DILocation(line: 4112, column: 11, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4112, column: 11)
!4677 = !DILocation(line: 4112, column: 16, scope: !4676)
!4678 = !DILocation(line: 4112, column: 31, scope: !4676)
!4679 = !DILocation(line: 4112, column: 34, scope: !4680)
!4680 = !DILexicalBlockFile(scope: !4676, file: !1, discriminator: 1)
!4681 = !DILocation(line: 4112, column: 11, scope: !4680)
!4682 = !DILocalVariable(name: "prefix", scope: !4683, file: !1, line: 4113, type: !210)
!4683 = distinct !DILexicalBlock(scope: !4676, file: !1, line: 4112, column: 54)
!4684 = !DILocation(line: 4113, column: 25, scope: !4683)
!4685 = !DILocation(line: 4114, column: 13, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !1, line: 4114, column: 13)
!4687 = !DILocation(line: 4114, column: 13, scope: !4683)
!4688 = !DILocation(line: 4115, column: 18, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !1, line: 4114, column: 32)
!4690 = !DILocation(line: 4116, column: 9, scope: !4689)
!4691 = !DILocation(line: 4118, column: 21, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4686, file: !1, line: 4117, column: 14)
!4693 = !DILocation(line: 4118, column: 26, scope: !4692)
!4694 = !DILocation(line: 4118, column: 18, scope: !4692)
!4695 = !DILocation(line: 4122, column: 32, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4683, file: !1, line: 4122, column: 13)
!4697 = !DILocation(line: 4122, column: 42, scope: !4696)
!4698 = !DILocation(line: 4122, column: 14, scope: !4696)
!4699 = !DILocation(line: 4122, column: 13, scope: !4683)
!4700 = !DILocation(line: 4123, column: 11, scope: !4696)
!4701 = !DILocation(line: 4124, column: 26, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4683, file: !1, line: 4124, column: 13)
!4703 = !DILocation(line: 4124, column: 36, scope: !4702)
!4704 = !DILocation(line: 4124, column: 41, scope: !4702)
!4705 = !DILocation(line: 4124, column: 44, scope: !4702)
!4706 = !DILocation(line: 4124, column: 14, scope: !4702)
!4707 = !DILocation(line: 4124, column: 13, scope: !4683)
!4708 = !DILocation(line: 4125, column: 11, scope: !4702)
!4709 = !DILocation(line: 4126, column: 29, scope: !4683)
!4710 = !DILocation(line: 4126, column: 38, scope: !4683)
!4711 = !DILocation(line: 4126, column: 9, scope: !4683)
!4712 = !DILocation(line: 4126, column: 27, scope: !4683)
!4713 = !DILocation(line: 4127, column: 23, scope: !4683)
!4714 = !DILocation(line: 4128, column: 7, scope: !4683)
!4715 = !DILocation(line: 4129, column: 7, scope: !4438)
!4716 = !DILocation(line: 4132, column: 11, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4132, column: 11)
!4718 = !DILocation(line: 4132, column: 16, scope: !4717)
!4719 = !DILocation(line: 4132, column: 11, scope: !4438)
!4720 = !DILocation(line: 4133, column: 30, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !1, line: 4133, column: 13)
!4722 = distinct !DILexicalBlock(scope: !4717, file: !1, line: 4132, column: 32)
!4723 = !DILocation(line: 4133, column: 47, scope: !4721)
!4724 = !DILocation(line: 4134, column: 30, scope: !4721)
!4725 = !DILocation(line: 4134, column: 52, scope: !4721)
!4726 = !DILocation(line: 4135, column: 33, scope: !4721)
!4727 = !DILocation(line: 4133, column: 14, scope: !4721)
!4728 = !DILocation(line: 4133, column: 13, scope: !4722)
!4729 = !DILocation(line: 4136, column: 11, scope: !4721)
!4730 = !DILocation(line: 4137, column: 13, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4722, file: !1, line: 4137, column: 13)
!4732 = !DILocation(line: 4137, column: 32, scope: !4731)
!4733 = !DILocation(line: 4137, column: 35, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4731, file: !1, discriminator: 1)
!4735 = !DILocation(line: 4137, column: 13, scope: !4734)
!4736 = !DILocation(line: 4138, column: 16, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !1, line: 4138, column: 15)
!4738 = distinct !DILexicalBlock(scope: !4731, file: !1, line: 4137, column: 54)
!4739 = !DILocation(line: 4138, column: 15, scope: !4737)
!4740 = !DILocation(line: 4138, column: 34, scope: !4737)
!4741 = !DILocation(line: 4139, column: 15, scope: !4737)
!4742 = !DILocation(line: 4139, column: 20, scope: !4743)
!4743 = !DILexicalBlockFile(scope: !4737, file: !1, discriminator: 1)
!4744 = !DILocation(line: 4139, column: 19, scope: !4743)
!4745 = !DILocation(line: 4139, column: 38, scope: !4743)
!4746 = !DILocation(line: 4140, column: 19, scope: !4737)
!4747 = !DILocation(line: 4140, column: 22, scope: !4743)
!4748 = !DILocation(line: 4140, column: 43, scope: !4743)
!4749 = !DILocation(line: 4138, column: 15, scope: !4750)
!4750 = !DILexicalBlockFile(scope: !4738, file: !1, discriminator: 1)
!4751 = !DILocation(line: 4142, column: 18, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !1, line: 4142, column: 17)
!4753 = distinct !DILexicalBlock(scope: !4737, file: !1, line: 4140, column: 63)
!4754 = !DILocation(line: 4142, column: 18, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4752, file: !1, discriminator: 1)
!4756 = !DILocation(line: 4143, column: 17, scope: !4752)
!4757 = !DILocation(line: 4142, column: 18, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !4752, file: !1, discriminator: 2)
!4759 = !DILocation(line: 4142, column: 18, scope: !4760)
!4760 = !DILexicalBlockFile(scope: !4752, file: !1, discriminator: 3)
!4761 = !DILocation(line: 4143, column: 17, scope: !4755)
!4762 = !DILocation(line: 4143, column: 21, scope: !4758)
!4763 = !DILocation(line: 4143, column: 21, scope: !4760)
!4764 = !DILocation(line: 4142, column: 17, scope: !4765)
!4765 = !DILexicalBlockFile(scope: !4753, file: !1, discriminator: 4)
!4766 = !DILocation(line: 4143, column: 21, scope: !4767)
!4767 = !DILexicalBlockFile(scope: !4752, file: !1, discriminator: 4)
!4768 = !DILocation(line: 4143, column: 21, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4752, file: !1, discriminator: 5)
!4770 = !DILocation(line: 4142, column: 17, scope: !4771)
!4771 = !DILexicalBlockFile(scope: !4753, file: !1, discriminator: 5)
!4772 = !DILocation(line: 4144, column: 15, scope: !4752)
!4773 = !DILocation(line: 4145, column: 33, scope: !4753)
!4774 = !DILocation(line: 4145, column: 42, scope: !4753)
!4775 = !DILocation(line: 4145, column: 13, scope: !4753)
!4776 = !DILocation(line: 4145, column: 31, scope: !4753)
!4777 = !DILocation(line: 4146, column: 13, scope: !4753)
!4778 = !DILocation(line: 4147, column: 11, scope: !4753)
!4779 = !DILocation(line: 4148, column: 25, scope: !4738)
!4780 = !DILocation(line: 4148, column: 12, scope: !4738)
!4781 = !DILocation(line: 4148, column: 23, scope: !4738)
!4782 = !DILocation(line: 4149, column: 11, scope: !4738)
!4783 = !DILocation(line: 4149, column: 30, scope: !4738)
!4784 = !DILocation(line: 4149, column: 42, scope: !4738)
!4785 = !DILocation(line: 4149, column: 59, scope: !4738)
!4786 = !DILocation(line: 4150, column: 30, scope: !4738)
!4787 = !DILocation(line: 4150, column: 47, scope: !4738)
!4788 = !DILocation(line: 4150, column: 53, scope: !4738)
!4789 = !DILocation(line: 4151, column: 33, scope: !4738)
!4790 = !DILocation(line: 4151, column: 38, scope: !4738)
!4791 = !DILocation(line: 4152, column: 22, scope: !4738)
!4792 = !DILocation(line: 4152, column: 11, scope: !4738)
!4793 = !DILocation(line: 4153, column: 25, scope: !4738)
!4794 = !DILocation(line: 4154, column: 9, scope: !4738)
!4795 = !DILocation(line: 4155, column: 7, scope: !4722)
!4796 = !DILocation(line: 4156, column: 7, scope: !4438)
!4797 = !DILocation(line: 4159, column: 11, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4159, column: 11)
!4799 = !DILocation(line: 4159, column: 16, scope: !4798)
!4800 = !DILocation(line: 4159, column: 11, scope: !4438)
!4801 = !DILocalVariable(name: "attVal", scope: !4802, file: !1, line: 4160, type: !210)
!4802 = distinct !DILexicalBlock(scope: !4798, file: !1, line: 4159, column: 32)
!4803 = !DILocation(line: 4160, column: 25, scope: !4802)
!4804 = !DILocalVariable(name: "result", scope: !4802, file: !1, line: 4161, type: !24)
!4805 = !DILocation(line: 4161, column: 24, scope: !4802)
!4806 = !DILocation(line: 4162, column: 31, scope: !4802)
!4807 = !DILocation(line: 4162, column: 39, scope: !4802)
!4808 = !DILocation(line: 4162, column: 44, scope: !4802)
!4809 = !DILocation(line: 4163, column: 31, scope: !4802)
!4810 = !DILocation(line: 4163, column: 35, scope: !4802)
!4811 = !DILocation(line: 4163, column: 40, scope: !4802)
!4812 = !DILocation(line: 4163, column: 33, scope: !4802)
!4813 = !DILocation(line: 4164, column: 31, scope: !4802)
!4814 = !DILocation(line: 4164, column: 38, scope: !4802)
!4815 = !DILocation(line: 4164, column: 43, scope: !4802)
!4816 = !DILocation(line: 4164, column: 36, scope: !4802)
!4817 = !DILocation(line: 4165, column: 32, scope: !4802)
!4818 = !DILocation(line: 4165, column: 37, scope: !4802)
!4819 = !DILocation(line: 4162, column: 11, scope: !4802)
!4820 = !DILocation(line: 4166, column: 13, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4802, file: !1, line: 4166, column: 13)
!4822 = !DILocation(line: 4166, column: 13, scope: !4802)
!4823 = !DILocation(line: 4167, column: 18, scope: !4821)
!4824 = !DILocation(line: 4167, column: 11, scope: !4821)
!4825 = !DILocation(line: 4168, column: 18, scope: !4802)
!4826 = !DILocation(line: 4168, column: 16, scope: !4802)
!4827 = !DILocation(line: 4169, column: 9, scope: !4802)
!4828 = !DILocation(line: 4171, column: 30, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4802, file: !1, line: 4171, column: 13)
!4830 = !DILocation(line: 4171, column: 47, scope: !4829)
!4831 = !DILocation(line: 4172, column: 30, scope: !4829)
!4832 = !DILocation(line: 4172, column: 63, scope: !4829)
!4833 = !DILocation(line: 4172, column: 71, scope: !4829)
!4834 = !DILocation(line: 4171, column: 14, scope: !4829)
!4835 = !DILocation(line: 4171, column: 13, scope: !4802)
!4836 = !DILocation(line: 4173, column: 11, scope: !4829)
!4837 = !DILocation(line: 4174, column: 13, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4802, file: !1, line: 4174, column: 13)
!4839 = !DILocation(line: 4174, column: 32, scope: !4838)
!4840 = !DILocation(line: 4174, column: 35, scope: !4841)
!4841 = !DILexicalBlockFile(scope: !4838, file: !1, discriminator: 1)
!4842 = !DILocation(line: 4174, column: 13, scope: !4841)
!4843 = !DILocation(line: 4175, column: 16, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !1, line: 4175, column: 15)
!4845 = distinct !DILexicalBlock(scope: !4838, file: !1, line: 4174, column: 54)
!4846 = !DILocation(line: 4175, column: 15, scope: !4844)
!4847 = !DILocation(line: 4175, column: 34, scope: !4844)
!4848 = !DILocation(line: 4176, column: 15, scope: !4844)
!4849 = !DILocation(line: 4176, column: 20, scope: !4850)
!4850 = !DILexicalBlockFile(scope: !4844, file: !1, discriminator: 1)
!4851 = !DILocation(line: 4176, column: 19, scope: !4850)
!4852 = !DILocation(line: 4176, column: 38, scope: !4850)
!4853 = !DILocation(line: 4177, column: 19, scope: !4844)
!4854 = !DILocation(line: 4177, column: 22, scope: !4850)
!4855 = !DILocation(line: 4177, column: 43, scope: !4850)
!4856 = !DILocation(line: 4175, column: 15, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4845, file: !1, discriminator: 1)
!4858 = !DILocation(line: 4179, column: 18, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !1, line: 4179, column: 17)
!4860 = distinct !DILexicalBlock(scope: !4844, file: !1, line: 4177, column: 63)
!4861 = !DILocation(line: 4179, column: 18, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !4859, file: !1, discriminator: 1)
!4863 = !DILocation(line: 4180, column: 17, scope: !4859)
!4864 = !DILocation(line: 4179, column: 18, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4859, file: !1, discriminator: 2)
!4866 = !DILocation(line: 4179, column: 18, scope: !4867)
!4867 = !DILexicalBlockFile(scope: !4859, file: !1, discriminator: 3)
!4868 = !DILocation(line: 4180, column: 17, scope: !4862)
!4869 = !DILocation(line: 4180, column: 21, scope: !4865)
!4870 = !DILocation(line: 4180, column: 21, scope: !4867)
!4871 = !DILocation(line: 4179, column: 17, scope: !4872)
!4872 = !DILexicalBlockFile(scope: !4860, file: !1, discriminator: 4)
!4873 = !DILocation(line: 4180, column: 21, scope: !4874)
!4874 = !DILexicalBlockFile(scope: !4859, file: !1, discriminator: 4)
!4875 = !DILocation(line: 4180, column: 21, scope: !4876)
!4876 = !DILexicalBlockFile(scope: !4859, file: !1, discriminator: 5)
!4877 = !DILocation(line: 4179, column: 17, scope: !4878)
!4878 = !DILexicalBlockFile(scope: !4860, file: !1, discriminator: 5)
!4879 = !DILocation(line: 4181, column: 15, scope: !4859)
!4880 = !DILocation(line: 4182, column: 33, scope: !4860)
!4881 = !DILocation(line: 4182, column: 42, scope: !4860)
!4882 = !DILocation(line: 4182, column: 13, scope: !4860)
!4883 = !DILocation(line: 4182, column: 31, scope: !4860)
!4884 = !DILocation(line: 4183, column: 13, scope: !4860)
!4885 = !DILocation(line: 4184, column: 11, scope: !4860)
!4886 = !DILocation(line: 4185, column: 25, scope: !4845)
!4887 = !DILocation(line: 4185, column: 12, scope: !4845)
!4888 = !DILocation(line: 4185, column: 23, scope: !4845)
!4889 = !DILocation(line: 4186, column: 11, scope: !4845)
!4890 = !DILocation(line: 4186, column: 30, scope: !4845)
!4891 = !DILocation(line: 4186, column: 42, scope: !4845)
!4892 = !DILocation(line: 4186, column: 59, scope: !4845)
!4893 = !DILocation(line: 4187, column: 30, scope: !4845)
!4894 = !DILocation(line: 4187, column: 47, scope: !4845)
!4895 = !DILocation(line: 4187, column: 53, scope: !4845)
!4896 = !DILocation(line: 4188, column: 30, scope: !4845)
!4897 = !DILocation(line: 4189, column: 30, scope: !4845)
!4898 = !DILocation(line: 4189, column: 35, scope: !4845)
!4899 = !DILocation(line: 4190, column: 22, scope: !4845)
!4900 = !DILocation(line: 4190, column: 11, scope: !4845)
!4901 = !DILocation(line: 4191, column: 25, scope: !4845)
!4902 = !DILocation(line: 4192, column: 9, scope: !4845)
!4903 = !DILocation(line: 4193, column: 7, scope: !4802)
!4904 = !DILocation(line: 4194, column: 7, scope: !4438)
!4905 = !DILocation(line: 4196, column: 11, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4196, column: 11)
!4907 = !DILocation(line: 4196, column: 16, scope: !4906)
!4908 = !DILocation(line: 4196, column: 11, scope: !4438)
!4909 = !DILocalVariable(name: "result", scope: !4910, file: !1, line: 4197, type: !24)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !1, line: 4196, column: 32)
!4911 = !DILocation(line: 4197, column: 24, scope: !4910)
!4912 = !DILocation(line: 4197, column: 50, scope: !4910)
!4913 = !DILocation(line: 4197, column: 58, scope: !4910)
!4914 = !DILocation(line: 4198, column: 45, scope: !4910)
!4915 = !DILocation(line: 4198, column: 49, scope: !4910)
!4916 = !DILocation(line: 4198, column: 54, scope: !4910)
!4917 = !DILocation(line: 4198, column: 47, scope: !4910)
!4918 = !DILocation(line: 4199, column: 45, scope: !4910)
!4919 = !DILocation(line: 4199, column: 52, scope: !4910)
!4920 = !DILocation(line: 4199, column: 57, scope: !4910)
!4921 = !DILocation(line: 4199, column: 50, scope: !4910)
!4922 = !DILocation(line: 4197, column: 33, scope: !4910)
!4923 = !DILocation(line: 4200, column: 13, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4910, file: !1, line: 4200, column: 13)
!4925 = !DILocation(line: 4200, column: 13, scope: !4910)
!4926 = !DILocation(line: 4201, column: 33, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4924, file: !1, line: 4200, column: 25)
!4928 = !DILocation(line: 4201, column: 11, scope: !4927)
!4929 = !DILocation(line: 4201, column: 23, scope: !4927)
!4930 = !DILocation(line: 4201, column: 31, scope: !4927)
!4931 = !DILocation(line: 4202, column: 39, scope: !4927)
!4932 = !DILocation(line: 4202, column: 33, scope: !4927)
!4933 = !DILocation(line: 4202, column: 11, scope: !4927)
!4934 = !DILocation(line: 4202, column: 23, scope: !4927)
!4935 = !DILocation(line: 4202, column: 31, scope: !4927)
!4936 = !DILocation(line: 4203, column: 11, scope: !4927)
!4937 = !DILocation(line: 4204, column: 15, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4927, file: !1, line: 4204, column: 15)
!4939 = !DILocation(line: 4204, column: 15, scope: !4927)
!4940 = !DILocation(line: 4205, column: 27, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !1, line: 4204, column: 34)
!4942 = !DILocation(line: 4205, column: 14, scope: !4941)
!4943 = !DILocation(line: 4205, column: 25, scope: !4941)
!4944 = !DILocation(line: 4206, column: 13, scope: !4941)
!4945 = !DILocation(line: 4206, column: 31, scope: !4941)
!4946 = !DILocation(line: 4207, column: 31, scope: !4941)
!4947 = !DILocation(line: 4207, column: 43, scope: !4941)
!4948 = !DILocation(line: 4208, column: 31, scope: !4941)
!4949 = !DILocation(line: 4208, column: 43, scope: !4941)
!4950 = !DILocation(line: 4209, column: 31, scope: !4941)
!4951 = !DILocation(line: 4209, column: 43, scope: !4941)
!4952 = !DILocation(line: 4210, column: 31, scope: !4941)
!4953 = !DILocation(line: 4210, column: 43, scope: !4941)
!4954 = !DILocation(line: 4211, column: 31, scope: !4941)
!4955 = !DILocation(line: 4212, column: 27, scope: !4941)
!4956 = !DILocation(line: 4213, column: 11, scope: !4941)
!4957 = !DILocation(line: 4214, column: 9, scope: !4927)
!4958 = !DILocation(line: 4216, column: 11, scope: !4924)
!4959 = !DILocation(line: 4217, column: 13, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4910, file: !1, line: 4217, column: 13)
!4961 = !DILocation(line: 4217, column: 20, scope: !4960)
!4962 = !DILocation(line: 4217, column: 13, scope: !4910)
!4963 = !DILocation(line: 4218, column: 18, scope: !4960)
!4964 = !DILocation(line: 4218, column: 11, scope: !4960)
!4965 = !DILocation(line: 4219, column: 7, scope: !4910)
!4966 = !DILocation(line: 4220, column: 7, scope: !4438)
!4967 = !DILocation(line: 4225, column: 7, scope: !4438)
!4968 = !DILocation(line: 4225, column: 12, scope: !4438)
!4969 = !DILocation(line: 4225, column: 31, scope: !4438)
!4970 = !DILocation(line: 4226, column: 11, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4226, column: 11)
!4972 = !DILocation(line: 4226, column: 11, scope: !4438)
!4973 = !DILocation(line: 4227, column: 41, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 4226, column: 36)
!4975 = !DILocation(line: 4227, column: 51, scope: !4974)
!4976 = !DILocation(line: 4228, column: 40, scope: !4974)
!4977 = !DILocation(line: 4228, column: 44, scope: !4974)
!4978 = !DILocation(line: 4228, column: 49, scope: !4974)
!4979 = !DILocation(line: 4228, column: 42, scope: !4974)
!4980 = !DILocation(line: 4229, column: 40, scope: !4974)
!4981 = !DILocation(line: 4229, column: 47, scope: !4974)
!4982 = !DILocation(line: 4229, column: 52, scope: !4974)
!4983 = !DILocation(line: 4229, column: 45, scope: !4974)
!4984 = !DILocation(line: 4227, column: 24, scope: !4974)
!4985 = !DILocation(line: 4227, column: 9, scope: !4974)
!4986 = !DILocation(line: 4227, column: 22, scope: !4974)
!4987 = !DILocation(line: 4230, column: 13, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4974, file: !1, line: 4230, column: 13)
!4989 = !DILocation(line: 4230, column: 26, scope: !4988)
!4990 = !DILocation(line: 4230, column: 13, scope: !4974)
!4991 = !DILocation(line: 4231, column: 11, scope: !4988)
!4992 = !DILocation(line: 4232, column: 9, scope: !4974)
!4993 = !DILocation(line: 4233, column: 23, scope: !4974)
!4994 = !DILocation(line: 4234, column: 7, scope: !4974)
!4995 = !DILocation(line: 4241, column: 12, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4241, column: 11)
!4997 = !DILocation(line: 4241, column: 17, scope: !4996)
!4998 = !DILocation(line: 4245, column: 11, scope: !4996)
!4999 = !DILocation(line: 4245, column: 14, scope: !5000)
!5000 = !DILexicalBlockFile(scope: !4996, file: !1, discriminator: 1)
!5001 = !DILocation(line: 4246, column: 11, scope: !4996)
!5002 = !DILocation(line: 4246, column: 15, scope: !5000)
!5003 = !DILocation(line: 4246, column: 36, scope: !5000)
!5004 = !DILocation(line: 4241, column: 11, scope: !5005)
!5005 = !DILexicalBlockFile(scope: !4438, file: !1, discriminator: 1)
!5006 = !DILocation(line: 4247, column: 9, scope: !4996)
!5007 = !DILocation(line: 4249, column: 7, scope: !4438)
!5008 = !DILocation(line: 4263, column: 11, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4263, column: 11)
!5010 = !DILocation(line: 4263, column: 16, scope: !5009)
!5011 = !DILocation(line: 4263, column: 31, scope: !5009)
!5012 = !DILocation(line: 4263, column: 34, scope: !5013)
!5013 = !DILexicalBlockFile(scope: !5009, file: !1, discriminator: 1)
!5014 = !DILocation(line: 4263, column: 11, scope: !5013)
!5015 = !DILocation(line: 4264, column: 49, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5009, file: !1, line: 4263, column: 46)
!5017 = !DILocation(line: 4264, column: 54, scope: !5016)
!5018 = !DILocation(line: 4264, column: 60, scope: !5016)
!5019 = !DILocation(line: 4265, column: 48, scope: !5016)
!5020 = !DILocation(line: 4265, column: 52, scope: !5016)
!5021 = !DILocation(line: 4265, column: 57, scope: !5016)
!5022 = !DILocation(line: 4265, column: 50, scope: !5016)
!5023 = !DILocation(line: 4266, column: 48, scope: !5016)
!5024 = !DILocation(line: 4266, column: 55, scope: !5016)
!5025 = !DILocation(line: 4266, column: 60, scope: !5016)
!5026 = !DILocation(line: 4266, column: 53, scope: !5016)
!5027 = !DILocation(line: 4264, column: 32, scope: !5016)
!5028 = !DILocation(line: 4264, column: 9, scope: !5016)
!5029 = !DILocation(line: 4264, column: 21, scope: !5016)
!5030 = !DILocation(line: 4264, column: 30, scope: !5016)
!5031 = !DILocation(line: 4267, column: 14, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5016, file: !1, line: 4267, column: 13)
!5033 = !DILocation(line: 4267, column: 26, scope: !5032)
!5034 = !DILocation(line: 4267, column: 13, scope: !5016)
!5035 = !DILocation(line: 4268, column: 11, scope: !5032)
!5036 = !DILocation(line: 4269, column: 28, scope: !5016)
!5037 = !DILocation(line: 4269, column: 9, scope: !5016)
!5038 = !DILocation(line: 4269, column: 21, scope: !5016)
!5039 = !DILocation(line: 4269, column: 26, scope: !5016)
!5040 = !DILocation(line: 4270, column: 9, scope: !5016)
!5041 = !DILocation(line: 4271, column: 13, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5016, file: !1, line: 4271, column: 13)
!5043 = !DILocation(line: 4271, column: 13, scope: !5016)
!5044 = !DILocation(line: 4272, column: 25, scope: !5042)
!5045 = !DILocation(line: 4272, column: 11, scope: !5042)
!5046 = !DILocation(line: 4273, column: 7, scope: !5016)
!5047 = !DILocation(line: 4274, column: 7, scope: !4438)
!5048 = !DILocation(line: 4276, column: 11, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4276, column: 11)
!5050 = !DILocation(line: 4276, column: 16, scope: !5049)
!5051 = !DILocation(line: 4276, column: 31, scope: !5049)
!5052 = !DILocation(line: 4276, column: 34, scope: !5053)
!5053 = !DILexicalBlockFile(scope: !5049, file: !1, discriminator: 1)
!5054 = !DILocation(line: 4276, column: 45, scope: !5053)
!5055 = !DILocation(line: 4276, column: 48, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !5049, file: !1, discriminator: 2)
!5057 = !DILocation(line: 4276, column: 11, scope: !5056)
!5058 = !DILocation(line: 4277, column: 23, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 4276, column: 67)
!5060 = !DILocation(line: 4277, column: 10, scope: !5059)
!5061 = !DILocation(line: 4277, column: 21, scope: !5059)
!5062 = !DILocation(line: 4278, column: 9, scope: !5059)
!5063 = !DILocation(line: 4278, column: 27, scope: !5059)
!5064 = !DILocation(line: 4279, column: 27, scope: !5059)
!5065 = !DILocation(line: 4279, column: 39, scope: !5059)
!5066 = !DILocation(line: 4280, column: 27, scope: !5059)
!5067 = !DILocation(line: 4280, column: 39, scope: !5059)
!5068 = !DILocation(line: 4282, column: 27, scope: !5059)
!5069 = !DILocation(line: 4282, column: 39, scope: !5059)
!5070 = !DILocation(line: 4283, column: 27, scope: !5059)
!5071 = !DILocation(line: 4283, column: 39, scope: !5059)
!5072 = !DILocation(line: 4284, column: 27, scope: !5059)
!5073 = !DILocation(line: 4284, column: 39, scope: !5059)
!5074 = !DILocation(line: 4286, column: 23, scope: !5059)
!5075 = !DILocation(line: 4287, column: 7, scope: !5059)
!5076 = !DILocation(line: 4288, column: 7, scope: !4438)
!5077 = !DILocation(line: 4290, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4290, column: 11)
!5079 = !DILocation(line: 4290, column: 16, scope: !5078)
!5080 = !DILocation(line: 4290, column: 31, scope: !5078)
!5081 = !DILocation(line: 4290, column: 34, scope: !5082)
!5082 = !DILexicalBlockFile(scope: !5078, file: !1, discriminator: 1)
!5083 = !DILocation(line: 4290, column: 11, scope: !5082)
!5084 = !DILocation(line: 4291, column: 49, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5078, file: !1, line: 4290, column: 46)
!5086 = !DILocation(line: 4291, column: 54, scope: !5085)
!5087 = !DILocation(line: 4291, column: 60, scope: !5085)
!5088 = !DILocation(line: 4291, column: 65, scope: !5085)
!5089 = !DILocation(line: 4291, column: 68, scope: !5085)
!5090 = !DILocation(line: 4291, column: 32, scope: !5085)
!5091 = !DILocation(line: 4291, column: 9, scope: !5085)
!5092 = !DILocation(line: 4291, column: 21, scope: !5085)
!5093 = !DILocation(line: 4291, column: 30, scope: !5085)
!5094 = !DILocation(line: 4292, column: 14, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5085, file: !1, line: 4292, column: 13)
!5096 = !DILocation(line: 4292, column: 26, scope: !5095)
!5097 = !DILocation(line: 4292, column: 13, scope: !5085)
!5098 = !DILocation(line: 4293, column: 11, scope: !5095)
!5099 = !DILocation(line: 4294, column: 9, scope: !5085)
!5100 = !DILocation(line: 4295, column: 13, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5085, file: !1, line: 4295, column: 13)
!5102 = !DILocation(line: 4295, column: 13, scope: !5085)
!5103 = !DILocation(line: 4296, column: 25, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5101, file: !1, line: 4295, column: 40)
!5105 = !DILocation(line: 4296, column: 12, scope: !5104)
!5106 = !DILocation(line: 4296, column: 23, scope: !5104)
!5107 = !DILocation(line: 4297, column: 11, scope: !5104)
!5108 = !DILocation(line: 4297, column: 37, scope: !5104)
!5109 = !DILocation(line: 4298, column: 37, scope: !5104)
!5110 = !DILocation(line: 4298, column: 49, scope: !5104)
!5111 = !DILocation(line: 4299, column: 37, scope: !5104)
!5112 = !DILocation(line: 4299, column: 49, scope: !5104)
!5113 = !DILocation(line: 4300, column: 37, scope: !5104)
!5114 = !DILocation(line: 4300, column: 49, scope: !5104)
!5115 = !DILocation(line: 4301, column: 37, scope: !5104)
!5116 = !DILocation(line: 4301, column: 49, scope: !5104)
!5117 = !DILocation(line: 4302, column: 37, scope: !5104)
!5118 = !DILocation(line: 4302, column: 49, scope: !5104)
!5119 = !DILocation(line: 4303, column: 25, scope: !5104)
!5120 = !DILocation(line: 4304, column: 9, scope: !5104)
!5121 = !DILocation(line: 4305, column: 18, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5101, file: !1, line: 4305, column: 18)
!5123 = !DILocation(line: 4305, column: 18, scope: !5101)
!5124 = !DILocation(line: 4306, column: 25, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 4305, column: 37)
!5126 = !DILocation(line: 4306, column: 12, scope: !5125)
!5127 = !DILocation(line: 4306, column: 23, scope: !5125)
!5128 = !DILocation(line: 4307, column: 11, scope: !5125)
!5129 = !DILocation(line: 4307, column: 29, scope: !5125)
!5130 = !DILocation(line: 4308, column: 29, scope: !5125)
!5131 = !DILocation(line: 4308, column: 41, scope: !5125)
!5132 = !DILocation(line: 4310, column: 29, scope: !5125)
!5133 = !DILocation(line: 4310, column: 41, scope: !5125)
!5134 = !DILocation(line: 4311, column: 29, scope: !5125)
!5135 = !DILocation(line: 4311, column: 41, scope: !5125)
!5136 = !DILocation(line: 4312, column: 29, scope: !5125)
!5137 = !DILocation(line: 4312, column: 41, scope: !5125)
!5138 = !DILocation(line: 4313, column: 29, scope: !5125)
!5139 = !DILocation(line: 4313, column: 41, scope: !5125)
!5140 = !DILocation(line: 4314, column: 25, scope: !5125)
!5141 = !DILocation(line: 4315, column: 9, scope: !5125)
!5142 = !DILocation(line: 4316, column: 7, scope: !5085)
!5143 = !DILocation(line: 4317, column: 7, scope: !4438)
!5144 = !DILocation(line: 4320, column: 13, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5146, file: !1, line: 4320, column: 13)
!5146 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4319, column: 7)
!5147 = !DILocation(line: 4320, column: 13, scope: !5146)
!5148 = !DILocation(line: 4321, column: 11, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5145, file: !1, line: 4320, column: 52)
!5150 = !DILocation(line: 4321, column: 22, scope: !5149)
!5151 = !DILocation(line: 4322, column: 11, scope: !5149)
!5152 = !DILocation(line: 4324, column: 13, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5146, file: !1, line: 4324, column: 13)
!5154 = !DILocation(line: 4324, column: 18, scope: !5153)
!5155 = !DILocation(line: 4324, column: 13, scope: !5146)
!5156 = !DILocalVariable(name: "name", scope: !5157, file: !1, line: 4325, type: !210)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !1, line: 4324, column: 34)
!5158 = !DILocation(line: 4325, column: 27, scope: !5157)
!5159 = !DILocation(line: 4325, column: 51, scope: !5157)
!5160 = !DILocation(line: 4325, column: 56, scope: !5157)
!5161 = !DILocation(line: 4325, column: 62, scope: !5157)
!5162 = !DILocation(line: 4325, column: 67, scope: !5157)
!5163 = !DILocation(line: 4325, column: 70, scope: !5157)
!5164 = !DILocation(line: 4325, column: 34, scope: !5157)
!5165 = !DILocation(line: 4326, column: 16, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 4326, column: 15)
!5167 = !DILocation(line: 4326, column: 15, scope: !5157)
!5168 = !DILocation(line: 4327, column: 13, scope: !5166)
!5169 = !DILocation(line: 4328, column: 41, scope: !5157)
!5170 = !DILocation(line: 4328, column: 50, scope: !5157)
!5171 = !DILocation(line: 4328, column: 55, scope: !5157)
!5172 = !DILocation(line: 4328, column: 72, scope: !5157)
!5173 = !DILocation(line: 4328, column: 34, scope: !5157)
!5174 = !DILocation(line: 4328, column: 24, scope: !5157)
!5175 = !DILocation(line: 4328, column: 11, scope: !5157)
!5176 = !DILocation(line: 4328, column: 22, scope: !5157)
!5177 = !DILocation(line: 4330, column: 16, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 4330, column: 15)
!5179 = !DILocation(line: 4330, column: 15, scope: !5157)
!5180 = !DILocation(line: 4331, column: 13, scope: !5178)
!5181 = !DILocation(line: 4332, column: 15, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 4332, column: 15)
!5183 = !DILocation(line: 4332, column: 27, scope: !5182)
!5184 = !DILocation(line: 4332, column: 35, scope: !5182)
!5185 = !DILocation(line: 4332, column: 32, scope: !5182)
!5186 = !DILocation(line: 4332, column: 15, scope: !5157)
!5187 = !DILocation(line: 4333, column: 13, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5182, file: !1, line: 4332, column: 41)
!5189 = !DILocation(line: 4334, column: 13, scope: !5188)
!5190 = !DILocation(line: 4334, column: 24, scope: !5188)
!5191 = !DILocation(line: 4335, column: 11, scope: !5188)
!5192 = !DILocation(line: 4337, column: 13, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5182, file: !1, line: 4336, column: 16)
!5194 = !DILocation(line: 4338, column: 13, scope: !5193)
!5195 = !DILocation(line: 4338, column: 25, scope: !5193)
!5196 = !DILocation(line: 4338, column: 34, scope: !5193)
!5197 = !DILocation(line: 4339, column: 13, scope: !5193)
!5198 = !DILocation(line: 4339, column: 25, scope: !5193)
!5199 = !DILocation(line: 4339, column: 34, scope: !5193)
!5200 = !DILocation(line: 4343, column: 41, scope: !5193)
!5201 = !DILocation(line: 4343, column: 54, scope: !5193)
!5202 = !DILocation(line: 4343, column: 57, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5193, file: !1, discriminator: 1)
!5204 = !DILocation(line: 4343, column: 54, scope: !5203)
!5205 = !DILocation(line: 4343, column: 39, scope: !5206)
!5206 = !DILexicalBlockFile(scope: !5193, file: !1, discriminator: 2)
!5207 = !DILocation(line: 4343, column: 13, scope: !5206)
!5208 = !DILocation(line: 4343, column: 25, scope: !5206)
!5209 = !DILocation(line: 4343, column: 37, scope: !5206)
!5210 = !DILocation(line: 4344, column: 17, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5193, file: !1, line: 4344, column: 17)
!5212 = !DILocation(line: 4344, column: 17, scope: !5193)
!5213 = !DILocation(line: 4345, column: 29, scope: !5211)
!5214 = !DILocation(line: 4345, column: 15, scope: !5211)
!5215 = !DILocation(line: 4347, column: 9, scope: !5157)
!5216 = !DILocation(line: 4349, column: 11, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5153, file: !1, line: 4348, column: 14)
!5218 = !DILocation(line: 4350, column: 11, scope: !5217)
!5219 = !DILocation(line: 4350, column: 22, scope: !5217)
!5220 = !DILocation(line: 4353, column: 7, scope: !4438)
!5221 = !DILocation(line: 4385, column: 7, scope: !4438)
!5222 = !DILocation(line: 4385, column: 18, scope: !4438)
!5223 = !DILocation(line: 4387, column: 7, scope: !4438)
!5224 = !DILocation(line: 4389, column: 7, scope: !4438)
!5225 = !DILocation(line: 4389, column: 28, scope: !4438)
!5226 = !DILocation(line: 4390, column: 7, scope: !4438)
!5227 = !DILocation(line: 4390, column: 24, scope: !4438)
!5228 = !DILocation(line: 4391, column: 11, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4391, column: 11)
!5230 = !DILocation(line: 4391, column: 11, scope: !4438)
!5231 = !DILocation(line: 4392, column: 45, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !1, line: 4391, column: 32)
!5233 = !DILocation(line: 4392, column: 55, scope: !5232)
!5234 = !DILocation(line: 4392, column: 60, scope: !5232)
!5235 = !DILocation(line: 4392, column: 63, scope: !5232)
!5236 = !DILocation(line: 4392, column: 28, scope: !5232)
!5237 = !DILocation(line: 4392, column: 9, scope: !5232)
!5238 = !DILocation(line: 4392, column: 26, scope: !5232)
!5239 = !DILocation(line: 4393, column: 14, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5232, file: !1, line: 4393, column: 13)
!5241 = !DILocation(line: 4393, column: 13, scope: !5232)
!5242 = !DILocation(line: 4394, column: 11, scope: !5240)
!5243 = !DILocation(line: 4395, column: 9, scope: !5232)
!5244 = !DILocation(line: 4396, column: 23, scope: !5232)
!5245 = !DILocation(line: 4397, column: 7, scope: !5232)
!5246 = !DILocation(line: 4398, column: 7, scope: !4438)
!5247 = !DILocation(line: 4400, column: 12, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4400, column: 11)
!5249 = !DILocation(line: 4400, column: 11, scope: !4438)
!5250 = !DILocation(line: 4401, column: 9, scope: !5248)
!5251 = !DILocation(line: 4402, column: 11, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4402, column: 11)
!5253 = !DILocation(line: 4402, column: 11, scope: !4438)
!5254 = !DILocalVariable(name: "tem", scope: !5255, file: !1, line: 4403, type: !202)
!5255 = distinct !DILexicalBlock(scope: !5252, file: !1, line: 4402, column: 29)
!5256 = !DILocation(line: 4403, column: 19, scope: !5255)
!5257 = !DILocation(line: 4403, column: 42, scope: !5255)
!5258 = !DILocation(line: 4404, column: 41, scope: !5255)
!5259 = !DILocation(line: 4405, column: 41, scope: !5255)
!5260 = !DILocation(line: 4405, column: 45, scope: !5255)
!5261 = !DILocation(line: 4405, column: 50, scope: !5255)
!5262 = !DILocation(line: 4405, column: 43, scope: !5255)
!5263 = !DILocation(line: 4406, column: 41, scope: !5255)
!5264 = !DILocation(line: 4406, column: 48, scope: !5255)
!5265 = !DILocation(line: 4406, column: 53, scope: !5255)
!5266 = !DILocation(line: 4406, column: 46, scope: !5255)
!5267 = !DILocation(line: 4403, column: 25, scope: !5255)
!5268 = !DILocation(line: 4407, column: 14, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5255, file: !1, line: 4407, column: 13)
!5270 = !DILocation(line: 4407, column: 13, scope: !5255)
!5271 = !DILocation(line: 4408, column: 11, scope: !5269)
!5272 = !DILocation(line: 4409, column: 27, scope: !5255)
!5273 = !DILocation(line: 4409, column: 9, scope: !5255)
!5274 = !DILocation(line: 4410, column: 32, scope: !5255)
!5275 = !DILocation(line: 4410, column: 9, scope: !5255)
!5276 = !DILocation(line: 4410, column: 30, scope: !5255)
!5277 = !DILocation(line: 4411, column: 9, scope: !5255)
!5278 = !DILocation(line: 4412, column: 23, scope: !5255)
!5279 = !DILocation(line: 4413, column: 7, scope: !5255)
!5280 = !DILocation(line: 4414, column: 7, scope: !4438)
!5281 = !DILocation(line: 4416, column: 11, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4416, column: 11)
!5283 = !DILocation(line: 4416, column: 28, scope: !5282)
!5284 = !DILocation(line: 4416, column: 31, scope: !5285)
!5285 = !DILexicalBlockFile(scope: !5282, file: !1, discriminator: 1)
!5286 = !DILocation(line: 4416, column: 11, scope: !5285)
!5287 = !DILocalVariable(name: "systemId", scope: !5288, file: !1, line: 4417, type: !210)
!5288 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 4416, column: 52)
!5289 = !DILocation(line: 4417, column: 25, scope: !5288)
!5290 = !DILocation(line: 4418, column: 30, scope: !5288)
!5291 = !DILocation(line: 4418, column: 40, scope: !5288)
!5292 = !DILocation(line: 4419, column: 29, scope: !5288)
!5293 = !DILocation(line: 4419, column: 33, scope: !5288)
!5294 = !DILocation(line: 4419, column: 38, scope: !5288)
!5295 = !DILocation(line: 4419, column: 31, scope: !5288)
!5296 = !DILocation(line: 4420, column: 29, scope: !5288)
!5297 = !DILocation(line: 4420, column: 36, scope: !5288)
!5298 = !DILocation(line: 4420, column: 41, scope: !5288)
!5299 = !DILocation(line: 4420, column: 34, scope: !5288)
!5300 = !DILocation(line: 4418, column: 13, scope: !5288)
!5301 = !DILocation(line: 4421, column: 14, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5288, file: !1, line: 4421, column: 13)
!5303 = !DILocation(line: 4421, column: 13, scope: !5288)
!5304 = !DILocation(line: 4422, column: 11, scope: !5302)
!5305 = !DILocation(line: 4423, column: 23, scope: !5288)
!5306 = !DILocation(line: 4423, column: 10, scope: !5288)
!5307 = !DILocation(line: 4423, column: 21, scope: !5288)
!5308 = !DILocation(line: 4424, column: 9, scope: !5288)
!5309 = !DILocation(line: 4424, column: 29, scope: !5288)
!5310 = !DILocation(line: 4425, column: 29, scope: !5288)
!5311 = !DILocation(line: 4426, column: 29, scope: !5288)
!5312 = !DILocation(line: 4427, column: 29, scope: !5288)
!5313 = !DILocation(line: 4428, column: 29, scope: !5288)
!5314 = !DILocation(line: 4429, column: 23, scope: !5288)
!5315 = !DILocation(line: 4430, column: 7, scope: !5288)
!5316 = !DILocation(line: 4431, column: 18, scope: !4438)
!5317 = !DILocation(line: 4431, column: 7, scope: !4438)
!5318 = !DILocation(line: 4432, column: 7, scope: !4438)
!5319 = !DILocation(line: 4434, column: 11, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4434, column: 11)
!5321 = !DILocation(line: 4434, column: 32, scope: !5320)
!5322 = !DILocation(line: 4434, column: 35, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !5320, file: !1, discriminator: 1)
!5324 = !DILocation(line: 4434, column: 11, scope: !5323)
!5325 = !DILocation(line: 4435, column: 23, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5320, file: !1, line: 4434, column: 56)
!5327 = !DILocation(line: 4435, column: 10, scope: !5326)
!5328 = !DILocation(line: 4435, column: 21, scope: !5326)
!5329 = !DILocation(line: 4436, column: 9, scope: !5326)
!5330 = !DILocation(line: 4436, column: 29, scope: !5326)
!5331 = !DILocation(line: 4437, column: 29, scope: !5326)
!5332 = !DILocation(line: 4438, column: 29, scope: !5326)
!5333 = !DILocation(line: 4440, column: 29, scope: !5326)
!5334 = !DILocation(line: 4441, column: 23, scope: !5326)
!5335 = !DILocation(line: 4442, column: 7, scope: !5326)
!5336 = !DILocation(line: 4443, column: 18, scope: !4438)
!5337 = !DILocation(line: 4443, column: 7, scope: !4438)
!5338 = !DILocation(line: 4444, column: 7, scope: !4438)
!5339 = !DILocation(line: 4446, column: 15, scope: !4438)
!5340 = !DILocation(line: 4446, column: 7, scope: !4438)
!5341 = !DILocation(line: 4450, column: 9, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4446, column: 20)
!5343 = !DILocation(line: 4452, column: 9, scope: !5342)
!5344 = !DILocation(line: 4454, column: 9, scope: !5342)
!5345 = !DILocation(line: 4474, column: 11, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4474, column: 11)
!5347 = !DILocation(line: 4474, column: 23, scope: !5346)
!5348 = !DILocation(line: 4474, column: 32, scope: !5346)
!5349 = !DILocation(line: 4474, column: 29, scope: !5346)
!5350 = !DILocation(line: 4474, column: 11, scope: !4438)
!5351 = !DILocation(line: 4475, column: 13, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !1, line: 4475, column: 13)
!5353 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 4474, column: 43)
!5354 = !DILocation(line: 4475, column: 13, scope: !5353)
!5355 = !DILocalVariable(name: "temp", scope: !5356, file: !1, line: 4476, type: !169)
!5356 = distinct !DILexicalBlock(scope: !5352, file: !1, line: 4475, column: 24)
!5357 = !DILocation(line: 4476, column: 17, scope: !5356)
!5358 = !DILocation(line: 4476, column: 32, scope: !5356)
!5359 = !DILocation(line: 4477, column: 15, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5356, file: !1, line: 4477, column: 15)
!5361 = !DILocation(line: 4477, column: 20, scope: !5360)
!5362 = !DILocation(line: 4477, column: 15, scope: !5356)
!5363 = !DILocation(line: 4478, column: 13, scope: !5360)
!5364 = !DILocation(line: 4479, column: 28, scope: !5356)
!5365 = !DILocation(line: 4479, column: 11, scope: !5356)
!5366 = !DILocation(line: 4479, column: 26, scope: !5356)
!5367 = !DILocation(line: 4480, column: 15, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5356, file: !1, line: 4480, column: 15)
!5369 = !DILocation(line: 4480, column: 20, scope: !5368)
!5370 = !DILocation(line: 4480, column: 15, scope: !5356)
!5371 = !DILocalVariable(name: "temp", scope: !5372, file: !1, line: 4481, type: !591)
!5372 = distinct !DILexicalBlock(scope: !5368, file: !1, line: 4480, column: 32)
!5373 = !DILocation(line: 4481, column: 18, scope: !5372)
!5374 = !DILocation(line: 4481, column: 32, scope: !5372)
!5375 = !DILocation(line: 4481, column: 25, scope: !5372)
!5376 = !DILocation(line: 4483, column: 17, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 4483, column: 17)
!5378 = !DILocation(line: 4483, column: 22, scope: !5377)
!5379 = !DILocation(line: 4483, column: 17, scope: !5372)
!5380 = !DILocation(line: 4484, column: 15, scope: !5377)
!5381 = !DILocation(line: 4485, column: 31, scope: !5372)
!5382 = !DILocation(line: 4485, column: 13, scope: !5372)
!5383 = !DILocation(line: 4485, column: 18, scope: !5372)
!5384 = !DILocation(line: 4485, column: 29, scope: !5372)
!5385 = !DILocation(line: 4486, column: 11, scope: !5372)
!5386 = !DILocation(line: 4487, column: 9, scope: !5356)
!5387 = !DILocation(line: 4489, column: 36, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5352, file: !1, line: 4488, column: 14)
!5389 = !DILocation(line: 4489, column: 11, scope: !5388)
!5390 = !DILocation(line: 4489, column: 26, scope: !5388)
!5391 = !DILocation(line: 4490, column: 16, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5388, file: !1, line: 4490, column: 15)
!5393 = !DILocation(line: 4490, column: 15, scope: !5388)
!5394 = !DILocation(line: 4491, column: 13, scope: !5392)
!5395 = !DILocation(line: 4493, column: 7, scope: !5353)
!5396 = !DILocation(line: 4494, column: 22, scope: !4438)
!5397 = !DILocation(line: 4494, column: 34, scope: !4438)
!5398 = !DILocation(line: 4494, column: 7, scope: !4438)
!5399 = !DILocation(line: 4494, column: 41, scope: !4438)
!5400 = !DILocation(line: 4495, column: 11, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4495, column: 11)
!5402 = !DILocation(line: 4495, column: 16, scope: !5401)
!5403 = !DILocation(line: 4495, column: 11, scope: !4438)
!5404 = !DILocalVariable(name: "myindex", scope: !5405, file: !1, line: 4496, type: !223)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !1, line: 4495, column: 27)
!5406 = !DILocation(line: 4496, column: 13, scope: !5405)
!5407 = !DILocation(line: 4496, column: 40, scope: !5405)
!5408 = !DILocation(line: 4496, column: 23, scope: !5405)
!5409 = !DILocation(line: 4497, column: 13, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 4497, column: 13)
!5411 = !DILocation(line: 4497, column: 21, scope: !5410)
!5412 = !DILocation(line: 4497, column: 13, scope: !5405)
!5413 = !DILocation(line: 4498, column: 11, scope: !5410)
!5414 = !DILocation(line: 4499, column: 44, scope: !5405)
!5415 = !DILocation(line: 4499, column: 25, scope: !5405)
!5416 = !DILocation(line: 4499, column: 30, scope: !5405)
!5417 = !DILocation(line: 4499, column: 9, scope: !5405)
!5418 = !DILocation(line: 4499, column: 14, scope: !5405)
!5419 = !DILocation(line: 4499, column: 42, scope: !5405)
!5420 = !DILocation(line: 4500, column: 9, scope: !5405)
!5421 = !DILocation(line: 4500, column: 14, scope: !5405)
!5422 = !DILocation(line: 4500, column: 24, scope: !5405)
!5423 = !DILocation(line: 4501, column: 23, scope: !5405)
!5424 = !DILocation(line: 4501, column: 9, scope: !5405)
!5425 = !DILocation(line: 4501, column: 14, scope: !5405)
!5426 = !DILocation(line: 4501, column: 32, scope: !5405)
!5427 = !DILocation(line: 4501, column: 37, scope: !5405)
!5428 = !DILocation(line: 4502, column: 13, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 4502, column: 13)
!5430 = !DILocation(line: 4502, column: 13, scope: !5405)
!5431 = !DILocation(line: 4503, column: 25, scope: !5429)
!5432 = !DILocation(line: 4503, column: 11, scope: !5429)
!5433 = !DILocation(line: 4504, column: 7, scope: !5405)
!5434 = !DILocation(line: 4505, column: 7, scope: !4438)
!5435 = !DILocation(line: 4507, column: 26, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4507, column: 11)
!5437 = !DILocation(line: 4507, column: 38, scope: !5436)
!5438 = !DILocation(line: 4507, column: 11, scope: !5436)
!5439 = !DILocation(line: 4507, column: 45, scope: !5436)
!5440 = !DILocation(line: 4507, column: 11, scope: !4438)
!5441 = !DILocation(line: 4508, column: 9, scope: !5436)
!5442 = !DILocation(line: 4509, column: 22, scope: !4438)
!5443 = !DILocation(line: 4509, column: 34, scope: !4438)
!5444 = !DILocation(line: 4509, column: 7, scope: !4438)
!5445 = !DILocation(line: 4509, column: 41, scope: !4438)
!5446 = !DILocation(line: 4510, column: 11, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4510, column: 11)
!5448 = !DILocation(line: 4510, column: 16, scope: !5447)
!5449 = !DILocation(line: 4510, column: 26, scope: !5447)
!5450 = !DILocation(line: 4510, column: 29, scope: !5451)
!5451 = !DILexicalBlockFile(scope: !5447, file: !1, discriminator: 1)
!5452 = !DILocation(line: 4510, column: 11, scope: !5451)
!5453 = !DILocation(line: 4511, column: 23, scope: !5447)
!5454 = !DILocation(line: 4511, column: 9, scope: !5447)
!5455 = !DILocation(line: 4512, column: 7, scope: !4438)
!5456 = !DILocation(line: 4514, column: 26, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4514, column: 11)
!5458 = !DILocation(line: 4514, column: 38, scope: !5457)
!5459 = !DILocation(line: 4514, column: 11, scope: !5457)
!5460 = !DILocation(line: 4514, column: 45, scope: !5457)
!5461 = !DILocation(line: 4514, column: 11, scope: !4438)
!5462 = !DILocation(line: 4515, column: 9, scope: !5457)
!5463 = !DILocation(line: 4516, column: 11, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4516, column: 11)
!5465 = !DILocation(line: 4516, column: 16, scope: !5464)
!5466 = !DILocation(line: 4517, column: 11, scope: !5464)
!5467 = !DILocation(line: 4517, column: 30, scope: !5468)
!5468 = !DILexicalBlockFile(scope: !5464, file: !1, discriminator: 1)
!5469 = !DILocation(line: 4517, column: 42, scope: !5468)
!5470 = !DILocation(line: 4517, column: 15, scope: !5468)
!5471 = !DILocation(line: 4518, column: 11, scope: !5464)
!5472 = !DILocation(line: 4518, column: 45, scope: !5468)
!5473 = !DILocation(line: 4518, column: 50, scope: !5468)
!5474 = !DILocation(line: 4518, column: 61, scope: !5468)
!5475 = !DILocation(line: 4518, column: 29, scope: !5468)
!5476 = !DILocation(line: 4518, column: 34, scope: !5468)
!5477 = !DILocation(line: 4518, column: 15, scope: !5468)
!5478 = !DILocation(line: 4518, column: 20, scope: !5468)
!5479 = !DILocation(line: 4518, column: 67, scope: !5468)
!5480 = !DILocation(line: 4519, column: 15, scope: !5464)
!5481 = !DILocation(line: 4516, column: 11, scope: !5005)
!5482 = !DILocation(line: 4521, column: 39, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5464, file: !1, line: 4520, column: 13)
!5484 = !DILocation(line: 4521, column: 44, scope: !5483)
!5485 = !DILocation(line: 4521, column: 55, scope: !5483)
!5486 = !DILocation(line: 4521, column: 23, scope: !5483)
!5487 = !DILocation(line: 4521, column: 28, scope: !5483)
!5488 = !DILocation(line: 4521, column: 9, scope: !5483)
!5489 = !DILocation(line: 4521, column: 14, scope: !5483)
!5490 = !DILocation(line: 4521, column: 61, scope: !5483)
!5491 = !DILocation(line: 4522, column: 13, scope: !5483)
!5492 = !DILocation(line: 4523, column: 13, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5483, file: !1, line: 4523, column: 13)
!5494 = !DILocation(line: 4523, column: 13, scope: !5483)
!5495 = !DILocation(line: 4524, column: 25, scope: !5493)
!5496 = !DILocation(line: 4524, column: 11, scope: !5493)
!5497 = !DILocation(line: 4525, column: 7, scope: !5483)
!5498 = !DILocation(line: 4526, column: 22, scope: !4438)
!5499 = !DILocation(line: 4526, column: 34, scope: !4438)
!5500 = !DILocation(line: 4526, column: 7, scope: !4438)
!5501 = !DILocation(line: 4526, column: 41, scope: !4438)
!5502 = !DILocation(line: 4527, column: 7, scope: !4438)
!5503 = !DILocation(line: 4602, column: 12, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4602, column: 11)
!5505 = !DILocation(line: 4602, column: 17, scope: !5504)
!5506 = !DILocation(line: 4602, column: 28, scope: !5504)
!5507 = !DILocation(line: 4603, column: 11, scope: !5504)
!5508 = !DILocation(line: 4603, column: 32, scope: !5504)
!5509 = !DILocation(line: 4604, column: 12, scope: !5504)
!5510 = !DILocation(line: 4604, column: 33, scope: !5504)
!5511 = !DILocation(line: 4602, column: 11, scope: !5005)
!5512 = !DILocation(line: 4605, column: 9, scope: !5504)
!5513 = !DILocation(line: 4606, column: 7, scope: !4438)
!5514 = !DILocation(line: 4611, column: 11, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4611, column: 11)
!5516 = !DILocation(line: 4611, column: 11, scope: !4438)
!5517 = !DILocation(line: 4612, column: 42, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5515, file: !1, line: 4611, column: 31)
!5519 = !DILocation(line: 4612, column: 50, scope: !5518)
!5520 = !DILocation(line: 4612, column: 55, scope: !5518)
!5521 = !DILocation(line: 4612, column: 58, scope: !5518)
!5522 = !DILocation(line: 4612, column: 27, scope: !5518)
!5523 = !DILocation(line: 4612, column: 9, scope: !5518)
!5524 = !DILocation(line: 4612, column: 25, scope: !5518)
!5525 = !DILocation(line: 4613, column: 14, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5518, file: !1, line: 4613, column: 13)
!5527 = !DILocation(line: 4613, column: 13, scope: !5518)
!5528 = !DILocation(line: 4614, column: 11, scope: !5526)
!5529 = !DILocation(line: 4615, column: 9, scope: !5518)
!5530 = !DILocation(line: 4615, column: 14, scope: !5518)
!5531 = !DILocation(line: 4615, column: 25, scope: !5518)
!5532 = !DILocation(line: 4616, column: 9, scope: !5518)
!5533 = !DILocation(line: 4616, column: 14, scope: !5518)
!5534 = !DILocation(line: 4616, column: 25, scope: !5518)
!5535 = !DILocation(line: 4617, column: 9, scope: !5518)
!5536 = !DILocation(line: 4617, column: 14, scope: !5518)
!5537 = !DILocation(line: 4617, column: 24, scope: !5518)
!5538 = !DILocation(line: 4618, column: 23, scope: !5518)
!5539 = !DILocation(line: 4619, column: 7, scope: !5518)
!5540 = !DILocation(line: 4620, column: 7, scope: !4438)
!5541 = !DILocation(line: 4624, column: 11, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4624, column: 11)
!5543 = !DILocation(line: 4624, column: 16, scope: !5542)
!5544 = !DILocation(line: 4624, column: 11, scope: !4438)
!5545 = !DILocation(line: 4625, column: 13, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5547, file: !1, line: 4625, column: 13)
!5547 = distinct !DILexicalBlock(scope: !5542, file: !1, line: 4624, column: 27)
!5548 = !DILocation(line: 4625, column: 13, scope: !5547)
!5549 = !DILocalVariable(name: "content", scope: !5550, file: !1, line: 4626, type: !295)
!5550 = distinct !DILexicalBlock(scope: !5546, file: !1, line: 4625, column: 33)
!5551 = !DILocation(line: 4626, column: 25, scope: !5550)
!5552 = !DILocation(line: 4626, column: 51, scope: !5550)
!5553 = !DILocation(line: 4626, column: 35, scope: !5550)
!5554 = !DILocation(line: 4627, column: 16, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5550, file: !1, line: 4627, column: 15)
!5556 = !DILocation(line: 4627, column: 15, scope: !5550)
!5557 = !DILocation(line: 4628, column: 13, scope: !5555)
!5558 = !DILocation(line: 4629, column: 11, scope: !5550)
!5559 = !DILocation(line: 4629, column: 20, scope: !5550)
!5560 = !DILocation(line: 4629, column: 26, scope: !5550)
!5561 = !DILocation(line: 4630, column: 11, scope: !5550)
!5562 = !DILocation(line: 4630, column: 20, scope: !5550)
!5563 = !DILocation(line: 4630, column: 25, scope: !5550)
!5564 = !DILocation(line: 4631, column: 11, scope: !5550)
!5565 = !DILocation(line: 4631, column: 20, scope: !5550)
!5566 = !DILocation(line: 4631, column: 32, scope: !5550)
!5567 = !DILocation(line: 4632, column: 11, scope: !5550)
!5568 = !DILocation(line: 4632, column: 20, scope: !5550)
!5569 = !DILocation(line: 4632, column: 29, scope: !5550)
!5570 = !DILocation(line: 4633, column: 29, scope: !5550)
!5571 = !DILocation(line: 4633, column: 34, scope: !5550)
!5572 = !DILocation(line: 4633, column: 28, scope: !5550)
!5573 = !DILocation(line: 4633, column: 11, scope: !5550)
!5574 = !DILocation(line: 4633, column: 20, scope: !5550)
!5575 = !DILocation(line: 4633, column: 25, scope: !5550)
!5576 = !DILocation(line: 4636, column: 25, scope: !5550)
!5577 = !DILocation(line: 4636, column: 12, scope: !5550)
!5578 = !DILocation(line: 4636, column: 23, scope: !5550)
!5579 = !DILocation(line: 4637, column: 11, scope: !5550)
!5580 = !DILocation(line: 4637, column: 30, scope: !5550)
!5581 = !DILocation(line: 4637, column: 42, scope: !5550)
!5582 = !DILocation(line: 4637, column: 59, scope: !5550)
!5583 = !DILocation(line: 4637, column: 65, scope: !5550)
!5584 = !DILocation(line: 4638, column: 25, scope: !5550)
!5585 = !DILocation(line: 4639, column: 9, scope: !5550)
!5586 = !DILocation(line: 4640, column: 9, scope: !5547)
!5587 = !DILocation(line: 4640, column: 14, scope: !5547)
!5588 = !DILocation(line: 4640, column: 24, scope: !5547)
!5589 = !DILocation(line: 4641, column: 7, scope: !5547)
!5590 = !DILocation(line: 4642, column: 7, scope: !4438)
!5591 = !DILocation(line: 4645, column: 11, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4645, column: 11)
!5593 = !DILocation(line: 4645, column: 16, scope: !5592)
!5594 = !DILocation(line: 4645, column: 11, scope: !4438)
!5595 = !DILocation(line: 4646, column: 39, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 4645, column: 27)
!5597 = !DILocation(line: 4646, column: 44, scope: !5596)
!5598 = !DILocation(line: 4646, column: 55, scope: !5596)
!5599 = !DILocation(line: 4646, column: 23, scope: !5596)
!5600 = !DILocation(line: 4646, column: 28, scope: !5596)
!5601 = !DILocation(line: 4646, column: 9, scope: !5596)
!5602 = !DILocation(line: 4646, column: 14, scope: !5596)
!5603 = !DILocation(line: 4646, column: 61, scope: !5596)
!5604 = !DILocation(line: 4647, column: 13, scope: !5596)
!5605 = !DILocation(line: 4648, column: 13, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5596, file: !1, line: 4648, column: 13)
!5607 = !DILocation(line: 4648, column: 13, scope: !5596)
!5608 = !DILocation(line: 4649, column: 25, scope: !5606)
!5609 = !DILocation(line: 4649, column: 11, scope: !5606)
!5610 = !DILocation(line: 4650, column: 7, scope: !5596)
!5611 = !DILocation(line: 4651, column: 7, scope: !4438)
!5612 = !DILocation(line: 4654, column: 13, scope: !4438)
!5613 = !DILocation(line: 4655, column: 7, scope: !4438)
!5614 = !DILocation(line: 4657, column: 13, scope: !4438)
!5615 = !DILocation(line: 4658, column: 7, scope: !4438)
!5616 = !DILocation(line: 4660, column: 13, scope: !4438)
!5617 = !DILocation(line: 4661, column: 7, scope: !4438)
!5618 = !DILocation(line: 4663, column: 13, scope: !4438)
!5619 = !DILocation(line: 4663, column: 7, scope: !4438)
!5620 = !DILocation(line: 4665, column: 11, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4665, column: 11)
!5622 = !DILocation(line: 4665, column: 16, scope: !5621)
!5623 = !DILocation(line: 4665, column: 11, scope: !4438)
!5624 = !DILocalVariable(name: "el", scope: !5625, file: !1, line: 4666, type: !471)
!5625 = distinct !DILexicalBlock(scope: !5621, file: !1, line: 4665, column: 27)
!5626 = !DILocation(line: 4666, column: 23, scope: !5625)
!5627 = !DILocalVariable(name: "name", scope: !5625, file: !1, line: 4667, type: !210)
!5628 = !DILocation(line: 4667, column: 25, scope: !5625)
!5629 = !DILocalVariable(name: "nameLen", scope: !5625, file: !1, line: 4668, type: !223)
!5630 = !DILocation(line: 4668, column: 13, scope: !5625)
!5631 = !DILocalVariable(name: "nxt", scope: !5625, file: !1, line: 4669, type: !192)
!5632 = !DILocation(line: 4669, column: 21, scope: !5625)
!5633 = !DILocation(line: 4669, column: 28, scope: !5625)
!5634 = !DILocation(line: 4669, column: 34, scope: !5625)
!5635 = !DILocation(line: 4670, column: 30, scope: !5625)
!5636 = !DILocation(line: 4669, column: 28, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !5625, file: !1, discriminator: 1)
!5638 = !DILocation(line: 4671, column: 30, scope: !5625)
!5639 = !DILocation(line: 4671, column: 37, scope: !5625)
!5640 = !DILocation(line: 4671, column: 42, scope: !5625)
!5641 = !DILocation(line: 4671, column: 35, scope: !5625)
!5642 = !DILocation(line: 4669, column: 28, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5625, file: !1, discriminator: 2)
!5644 = !DILocation(line: 4669, column: 28, scope: !5645)
!5645 = !DILexicalBlockFile(scope: !5625, file: !1, discriminator: 3)
!5646 = !DILocation(line: 4669, column: 21, scope: !5645)
!5647 = !DILocalVariable(name: "myindex", scope: !5625, file: !1, line: 4672, type: !223)
!5648 = !DILocation(line: 4672, column: 13, scope: !5625)
!5649 = !DILocation(line: 4672, column: 40, scope: !5625)
!5650 = !DILocation(line: 4672, column: 23, scope: !5625)
!5651 = !DILocation(line: 4673, column: 13, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 4673, column: 13)
!5653 = !DILocation(line: 4673, column: 21, scope: !5652)
!5654 = !DILocation(line: 4673, column: 13, scope: !5625)
!5655 = !DILocation(line: 4674, column: 11, scope: !5652)
!5656 = !DILocation(line: 4675, column: 23, scope: !5625)
!5657 = !DILocation(line: 4675, column: 9, scope: !5625)
!5658 = !DILocation(line: 4675, column: 14, scope: !5625)
!5659 = !DILocation(line: 4675, column: 32, scope: !5625)
!5660 = !DILocation(line: 4675, column: 37, scope: !5625)
!5661 = !DILocation(line: 4676, column: 40, scope: !5625)
!5662 = !DILocation(line: 4676, column: 23, scope: !5625)
!5663 = !DILocation(line: 4676, column: 9, scope: !5625)
!5664 = !DILocation(line: 4676, column: 14, scope: !5625)
!5665 = !DILocation(line: 4676, column: 32, scope: !5625)
!5666 = !DILocation(line: 4676, column: 38, scope: !5625)
!5667 = !DILocation(line: 4677, column: 29, scope: !5625)
!5668 = !DILocation(line: 4677, column: 37, scope: !5625)
!5669 = !DILocation(line: 4677, column: 42, scope: !5625)
!5670 = !DILocation(line: 4677, column: 45, scope: !5625)
!5671 = !DILocation(line: 4677, column: 14, scope: !5625)
!5672 = !DILocation(line: 4677, column: 12, scope: !5625)
!5673 = !DILocation(line: 4678, column: 14, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 4678, column: 13)
!5675 = !DILocation(line: 4678, column: 13, scope: !5625)
!5676 = !DILocation(line: 4679, column: 11, scope: !5674)
!5677 = !DILocation(line: 4680, column: 16, scope: !5625)
!5678 = !DILocation(line: 4680, column: 20, scope: !5625)
!5679 = !DILocation(line: 4680, column: 14, scope: !5625)
!5680 = !DILocation(line: 4681, column: 39, scope: !5625)
!5681 = !DILocation(line: 4681, column: 23, scope: !5625)
!5682 = !DILocation(line: 4681, column: 9, scope: !5625)
!5683 = !DILocation(line: 4681, column: 14, scope: !5625)
!5684 = !DILocation(line: 4681, column: 32, scope: !5625)
!5685 = !DILocation(line: 4681, column: 37, scope: !5625)
!5686 = !DILocation(line: 4682, column: 17, scope: !5625)
!5687 = !DILocation(line: 4683, column: 9, scope: !5625)
!5688 = !DILocation(line: 4683, column: 28, scope: !5689)
!5689 = !DILexicalBlockFile(scope: !5690, file: !1, discriminator: 1)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !1, line: 4683, column: 9)
!5691 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 4683, column: 9)
!5692 = !DILocation(line: 4683, column: 16, scope: !5689)
!5693 = !DILocation(line: 4683, column: 9, scope: !5689)
!5694 = !DILocation(line: 4683, column: 9, scope: !5695)
!5695 = !DILexicalBlockFile(scope: !5690, file: !1, discriminator: 2)
!5696 = !DILocation(line: 4684, column: 35, scope: !5625)
!5697 = !DILocation(line: 4684, column: 9, scope: !5625)
!5698 = !DILocation(line: 4684, column: 14, scope: !5625)
!5699 = !DILocation(line: 4684, column: 31, scope: !5625)
!5700 = !DILocation(line: 4685, column: 13, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 4685, column: 13)
!5702 = !DILocation(line: 4685, column: 13, scope: !5625)
!5703 = !DILocation(line: 4686, column: 25, scope: !5701)
!5704 = !DILocation(line: 4686, column: 11, scope: !5701)
!5705 = !DILocation(line: 4687, column: 7, scope: !5625)
!5706 = !DILocation(line: 4688, column: 7, scope: !4438)
!5707 = !DILocation(line: 4691, column: 13, scope: !4438)
!5708 = !DILocation(line: 4692, column: 7, scope: !4438)
!5709 = !DILocation(line: 4694, column: 13, scope: !4438)
!5710 = !DILocation(line: 4695, column: 7, scope: !4438)
!5711 = !DILocation(line: 4697, column: 13, scope: !4438)
!5712 = !DILocation(line: 4698, column: 7, scope: !4438)
!5713 = !DILocation(line: 4700, column: 13, scope: !4438)
!5714 = !DILocation(line: 4700, column: 7, scope: !4438)
!5715 = !DILocation(line: 4702, column: 11, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4702, column: 11)
!5717 = !DILocation(line: 4702, column: 16, scope: !5716)
!5718 = !DILocation(line: 4702, column: 11, scope: !4438)
!5719 = !DILocation(line: 4703, column: 13, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !1, line: 4703, column: 13)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !1, line: 4702, column: 27)
!5722 = !DILocation(line: 4703, column: 13, scope: !5721)
!5723 = !DILocation(line: 4704, column: 25, scope: !5720)
!5724 = !DILocation(line: 4704, column: 11, scope: !5720)
!5725 = !DILocation(line: 4705, column: 9, scope: !5721)
!5726 = !DILocation(line: 4705, column: 14, scope: !5721)
!5727 = !DILocation(line: 4705, column: 24, scope: !5721)
!5728 = !DILocation(line: 4706, column: 65, scope: !5721)
!5729 = !DILocation(line: 4706, column: 39, scope: !5721)
!5730 = !DILocation(line: 4706, column: 44, scope: !5721)
!5731 = !DILocation(line: 4706, column: 23, scope: !5721)
!5732 = !DILocation(line: 4706, column: 28, scope: !5721)
!5733 = !DILocation(line: 4706, column: 9, scope: !5721)
!5734 = !DILocation(line: 4706, column: 14, scope: !5721)
!5735 = !DILocation(line: 4706, column: 57, scope: !5721)
!5736 = !DILocation(line: 4706, column: 63, scope: !5721)
!5737 = !DILocation(line: 4707, column: 13, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5721, file: !1, line: 4707, column: 13)
!5739 = !DILocation(line: 4707, column: 18, scope: !5738)
!5740 = !DILocation(line: 4707, column: 29, scope: !5738)
!5741 = !DILocation(line: 4707, column: 13, scope: !5721)
!5742 = !DILocation(line: 4708, column: 16, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !1, line: 4708, column: 15)
!5744 = distinct !DILexicalBlock(scope: !5738, file: !1, line: 4707, column: 35)
!5745 = !DILocation(line: 4708, column: 15, scope: !5744)
!5746 = !DILocalVariable(name: "model", scope: !5747, file: !1, line: 4709, type: !295)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !1, line: 4708, column: 31)
!5748 = !DILocation(line: 4709, column: 26, scope: !5747)
!5749 = !DILocation(line: 4709, column: 46, scope: !5747)
!5750 = !DILocation(line: 4709, column: 34, scope: !5747)
!5751 = !DILocation(line: 4710, column: 18, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5747, file: !1, line: 4710, column: 17)
!5753 = !DILocation(line: 4710, column: 17, scope: !5747)
!5754 = !DILocation(line: 4711, column: 15, scope: !5752)
!5755 = !DILocation(line: 4712, column: 27, scope: !5747)
!5756 = !DILocation(line: 4712, column: 14, scope: !5747)
!5757 = !DILocation(line: 4712, column: 25, scope: !5747)
!5758 = !DILocation(line: 4713, column: 13, scope: !5747)
!5759 = !DILocation(line: 4713, column: 32, scope: !5747)
!5760 = !DILocation(line: 4713, column: 44, scope: !5747)
!5761 = !DILocation(line: 4713, column: 61, scope: !5747)
!5762 = !DILocation(line: 4713, column: 67, scope: !5747)
!5763 = !DILocation(line: 4714, column: 11, scope: !5747)
!5764 = !DILocation(line: 4715, column: 11, scope: !5744)
!5765 = !DILocation(line: 4715, column: 16, scope: !5744)
!5766 = !DILocation(line: 4715, column: 26, scope: !5744)
!5767 = !DILocation(line: 4716, column: 11, scope: !5744)
!5768 = !DILocation(line: 4716, column: 16, scope: !5744)
!5769 = !DILocation(line: 4716, column: 33, scope: !5744)
!5770 = !DILocation(line: 4717, column: 9, scope: !5744)
!5771 = !DILocation(line: 4718, column: 7, scope: !5721)
!5772 = !DILocation(line: 4719, column: 7, scope: !4438)
!5773 = !DILocation(line: 4723, column: 40, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4723, column: 11)
!5775 = !DILocation(line: 4723, column: 48, scope: !5774)
!5776 = !DILocation(line: 4723, column: 53, scope: !5774)
!5777 = !DILocation(line: 4723, column: 56, scope: !5774)
!5778 = !DILocation(line: 4723, column: 12, scope: !5774)
!5779 = !DILocation(line: 4723, column: 11, scope: !4438)
!5780 = !DILocation(line: 4724, column: 9, scope: !5774)
!5781 = !DILocation(line: 4725, column: 21, scope: !4438)
!5782 = !DILocation(line: 4726, column: 7, scope: !4438)
!5783 = !DILocation(line: 4728, column: 26, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4728, column: 11)
!5785 = !DILocation(line: 4728, column: 34, scope: !5784)
!5786 = !DILocation(line: 4728, column: 39, scope: !5784)
!5787 = !DILocation(line: 4728, column: 42, scope: !5784)
!5788 = !DILocation(line: 4728, column: 12, scope: !5784)
!5789 = !DILocation(line: 4728, column: 11, scope: !4438)
!5790 = !DILocation(line: 4729, column: 9, scope: !5784)
!5791 = !DILocation(line: 4730, column: 21, scope: !4438)
!5792 = !DILocation(line: 4731, column: 7, scope: !4438)
!5793 = !DILocation(line: 4733, column: 15, scope: !4438)
!5794 = !DILocation(line: 4733, column: 7, scope: !4438)
!5795 = !DILocation(line: 4735, column: 23, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4733, column: 20)
!5797 = !DILocation(line: 4736, column: 9, scope: !5796)
!5798 = !DILocation(line: 4738, column: 7, scope: !4438)
!5799 = !DILocation(line: 4740, column: 11, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4740, column: 11)
!5801 = !DILocation(line: 4740, column: 11, scope: !4438)
!5802 = !DILocation(line: 4741, column: 23, scope: !5800)
!5803 = !DILocation(line: 4741, column: 9, scope: !5800)
!5804 = !DILocation(line: 4742, column: 7, scope: !4438)
!5805 = !DILocation(line: 4744, column: 11, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4744, column: 11)
!5807 = !DILocation(line: 4744, column: 16, scope: !5806)
!5808 = !DILocation(line: 4744, column: 31, scope: !5806)
!5809 = !DILocation(line: 4744, column: 34, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5806, file: !1, discriminator: 1)
!5811 = !DILocation(line: 4744, column: 11, scope: !5810)
!5812 = !DILocation(line: 4745, column: 23, scope: !5806)
!5813 = !DILocation(line: 4745, column: 9, scope: !5806)
!5814 = !DILocation(line: 4746, column: 7, scope: !4438)
!5815 = !DILocation(line: 4748, column: 11, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4748, column: 11)
!5817 = !DILocation(line: 4748, column: 11, scope: !4438)
!5818 = !DILocation(line: 4749, column: 23, scope: !5816)
!5819 = !DILocation(line: 4749, column: 9, scope: !5816)
!5820 = !DILocation(line: 4750, column: 7, scope: !4438)
!5821 = !DILocation(line: 4752, column: 11, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4752, column: 11)
!5823 = !DILocation(line: 4752, column: 16, scope: !5822)
!5824 = !DILocation(line: 4752, column: 31, scope: !5822)
!5825 = !DILocation(line: 4752, column: 34, scope: !5826)
!5826 = !DILexicalBlockFile(scope: !5822, file: !1, discriminator: 1)
!5827 = !DILocation(line: 4752, column: 11, scope: !5826)
!5828 = !DILocation(line: 4753, column: 23, scope: !5822)
!5829 = !DILocation(line: 4753, column: 9, scope: !5822)
!5830 = !DILocation(line: 4754, column: 7, scope: !4438)
!5831 = !DILocation(line: 4756, column: 11, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 4756, column: 11)
!5833 = !DILocation(line: 4756, column: 11, scope: !4438)
!5834 = !DILocation(line: 4757, column: 23, scope: !5832)
!5835 = !DILocation(line: 4757, column: 9, scope: !5832)
!5836 = !DILocation(line: 4758, column: 7, scope: !4438)
!5837 = !DILocation(line: 4761, column: 9, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !4382, file: !1, line: 4761, column: 9)
!5839 = !DILocation(line: 4761, column: 23, scope: !5838)
!5840 = !DILocation(line: 4761, column: 26, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5838, file: !1, discriminator: 1)
!5842 = !DILocation(line: 4761, column: 9, scope: !5841)
!5843 = !DILocation(line: 4762, column: 21, scope: !5838)
!5844 = !DILocation(line: 4762, column: 29, scope: !5838)
!5845 = !DILocation(line: 4762, column: 34, scope: !5838)
!5846 = !DILocation(line: 4762, column: 37, scope: !5838)
!5847 = !DILocation(line: 4762, column: 7, scope: !5838)
!5848 = !DILocation(line: 4764, column: 13, scope: !4382)
!5849 = !DILocation(line: 4764, column: 5, scope: !4382)
!5850 = !DILocation(line: 4766, column: 18, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !4382, file: !1, line: 4764, column: 25)
!5852 = !DILocation(line: 4766, column: 8, scope: !5851)
!5853 = !DILocation(line: 4766, column: 16, scope: !5851)
!5854 = !DILocation(line: 4767, column: 7, scope: !5851)
!5855 = !DILocation(line: 4769, column: 7, scope: !5851)
!5856 = !DILocation(line: 4771, column: 11, scope: !5851)
!5857 = !DILocation(line: 4771, column: 9, scope: !5851)
!5858 = !DILocation(line: 4772, column: 13, scope: !5851)
!5859 = !DILocation(line: 4772, column: 11, scope: !5851)
!5860 = !DILocation(line: 4773, column: 5, scope: !5851)
!5861 = !DILocation(line: 3843, column: 3, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !4383, file: !1, discriminator: 1)
!5863 = !DILocation(line: 4776, column: 1, scope: !876)
!5864 = !DILocalVariable(name: "parser", arg: 1, scope: !879, file: !1, line: 3470, type: !162)
!5865 = !DILocation(line: 3470, column: 27, scope: !879)
!5866 = !DILocalVariable(name: "isGeneralTextEntity", arg: 2, scope: !879, file: !1, line: 3470, type: !223)
!5867 = !DILocation(line: 3470, column: 39, scope: !879)
!5868 = !DILocalVariable(name: "s", arg: 3, scope: !879, file: !1, line: 3471, type: !192)
!5869 = !DILocation(line: 3471, column: 28, scope: !879)
!5870 = !DILocalVariable(name: "next", arg: 4, scope: !879, file: !1, line: 3471, type: !192)
!5871 = !DILocation(line: 3471, column: 43, scope: !879)
!5872 = !DILocalVariable(name: "encodingName", scope: !879, file: !1, line: 3473, type: !192)
!5873 = !DILocation(line: 3473, column: 15, scope: !879)
!5874 = !DILocalVariable(name: "storedEncName", scope: !879, file: !1, line: 3474, type: !210)
!5875 = !DILocation(line: 3474, column: 19, scope: !879)
!5876 = !DILocalVariable(name: "newEncoding", scope: !879, file: !1, line: 3475, type: !321)
!5877 = !DILocation(line: 3475, column: 19, scope: !879)
!5878 = !DILocalVariable(name: "version", scope: !879, file: !1, line: 3476, type: !192)
!5879 = !DILocation(line: 3476, column: 15, scope: !879)
!5880 = !DILocalVariable(name: "versionend", scope: !879, file: !1, line: 3477, type: !192)
!5881 = !DILocation(line: 3477, column: 15, scope: !879)
!5882 = !DILocalVariable(name: "storedversion", scope: !879, file: !1, line: 3478, type: !210)
!5883 = !DILocation(line: 3478, column: 19, scope: !879)
!5884 = !DILocalVariable(name: "standalone", scope: !879, file: !1, line: 3479, type: !223)
!5885 = !DILocation(line: 3479, column: 7, scope: !879)
!5886 = !DILocation(line: 3480, column: 9, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3480, column: 7)
!5888 = !DILocation(line: 3482, column: 28, scope: !5887)
!5889 = !DILocation(line: 3483, column: 28, scope: !5887)
!5890 = !DILocation(line: 3484, column: 28, scope: !5887)
!5891 = !DILocation(line: 3485, column: 28, scope: !5887)
!5892 = !DILocation(line: 3486, column: 29, scope: !5887)
!5893 = !DILocation(line: 3480, column: 8, scope: !5887)
!5894 = !DILocation(line: 3480, column: 7, scope: !879)
!5895 = !DILocation(line: 3492, column: 9, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !1, line: 3492, column: 9)
!5897 = distinct !DILexicalBlock(scope: !5887, file: !1, line: 3491, column: 42)
!5898 = !DILocation(line: 3492, column: 9, scope: !5897)
!5899 = !DILocation(line: 3493, column: 7, scope: !5896)
!5900 = !DILocation(line: 3495, column: 7, scope: !5896)
!5901 = !DILocation(line: 3497, column: 8, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3497, column: 7)
!5903 = !DILocation(line: 3497, column: 28, scope: !5902)
!5904 = !DILocation(line: 3497, column: 31, scope: !5905)
!5905 = !DILexicalBlockFile(scope: !5902, file: !1, discriminator: 1)
!5906 = !DILocation(line: 3497, column: 42, scope: !5905)
!5907 = !DILocation(line: 3497, column: 7, scope: !5905)
!5908 = !DILocation(line: 3498, column: 5, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5902, file: !1, line: 3497, column: 48)
!5910 = !DILocation(line: 3498, column: 11, scope: !5909)
!5911 = !DILocation(line: 3498, column: 22, scope: !5909)
!5912 = !DILocation(line: 3503, column: 3, scope: !5909)
!5913 = !DILocation(line: 3504, column: 7, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3504, column: 7)
!5915 = !DILocation(line: 3504, column: 7, scope: !879)
!5916 = !DILocation(line: 3505, column: 9, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5918, file: !1, line: 3505, column: 9)
!5918 = distinct !DILexicalBlock(scope: !5914, file: !1, line: 3504, column: 23)
!5919 = !DILocation(line: 3505, column: 22, scope: !5917)
!5920 = !DILocation(line: 3505, column: 9, scope: !5918)
!5921 = !DILocation(line: 3506, column: 40, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5917, file: !1, line: 3505, column: 31)
!5923 = !DILocation(line: 3507, column: 39, scope: !5922)
!5924 = !DILocation(line: 3508, column: 39, scope: !5922)
!5925 = !DILocation(line: 3509, column: 39, scope: !5922)
!5926 = !DILocation(line: 3510, column: 41, scope: !5922)
!5927 = !DILocation(line: 3510, column: 39, scope: !5922)
!5928 = !DILocation(line: 3506, column: 23, scope: !5922)
!5929 = !DILocation(line: 3506, column: 21, scope: !5922)
!5930 = !DILocation(line: 3511, column: 12, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5922, file: !1, line: 3511, column: 11)
!5932 = !DILocation(line: 3511, column: 11, scope: !5922)
!5933 = !DILocation(line: 3512, column: 15, scope: !5931)
!5934 = !DILocation(line: 3513, column: 7, scope: !5922)
!5935 = !DILocation(line: 3514, column: 5, scope: !5922)
!5936 = !DILocation(line: 3515, column: 9, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5918, file: !1, line: 3515, column: 9)
!5938 = !DILocation(line: 3515, column: 9, scope: !5918)
!5939 = !DILocation(line: 3516, column: 40, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5937, file: !1, line: 3515, column: 18)
!5941 = !DILocation(line: 3517, column: 39, scope: !5940)
!5942 = !DILocation(line: 3518, column: 39, scope: !5940)
!5943 = !DILocation(line: 3519, column: 39, scope: !5940)
!5944 = !DILocation(line: 3519, column: 52, scope: !5940)
!5945 = !DILocation(line: 3519, column: 62, scope: !5940)
!5946 = !DILocation(line: 3519, column: 50, scope: !5940)
!5947 = !DILocation(line: 3516, column: 23, scope: !5940)
!5948 = !DILocation(line: 3516, column: 21, scope: !5940)
!5949 = !DILocation(line: 3520, column: 12, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5940, file: !1, line: 3520, column: 11)
!5951 = !DILocation(line: 3520, column: 11, scope: !5940)
!5952 = !DILocation(line: 3521, column: 9, scope: !5950)
!5953 = !DILocation(line: 3522, column: 5, scope: !5940)
!5954 = !DILocation(line: 3523, column: 5, scope: !5918)
!5955 = !DILocation(line: 3523, column: 20, scope: !5918)
!5956 = !DILocation(line: 3523, column: 32, scope: !5918)
!5957 = !DILocation(line: 3523, column: 47, scope: !5918)
!5958 = !DILocation(line: 3523, column: 62, scope: !5918)
!5959 = !DILocation(line: 3524, column: 3, scope: !5918)
!5960 = !DILocation(line: 3525, column: 12, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5914, file: !1, line: 3525, column: 12)
!5962 = !DILocation(line: 3525, column: 12, scope: !5914)
!5963 = !DILocation(line: 3526, column: 19, scope: !5961)
!5964 = !DILocation(line: 3526, column: 27, scope: !5961)
!5965 = !DILocation(line: 3526, column: 37, scope: !5961)
!5966 = !DILocation(line: 3526, column: 40, scope: !5961)
!5967 = !DILocation(line: 3526, column: 5, scope: !5961)
!5968 = !DILocation(line: 3527, column: 7, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3527, column: 7)
!5970 = !DILocation(line: 3527, column: 28, scope: !5969)
!5971 = !DILocation(line: 3527, column: 7, scope: !879)
!5972 = !DILocation(line: 3528, column: 9, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !1, line: 3528, column: 9)
!5974 = distinct !DILexicalBlock(scope: !5969, file: !1, line: 3527, column: 37)
!5975 = !DILocation(line: 3528, column: 9, scope: !5974)
!5976 = !DILocation(line: 3529, column: 11, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !1, line: 3529, column: 11)
!5978 = distinct !DILexicalBlock(scope: !5973, file: !1, line: 3528, column: 22)
!5979 = !DILocation(line: 3529, column: 24, scope: !5977)
!5980 = !DILocation(line: 3529, column: 43, scope: !5977)
!5981 = !DILocation(line: 3529, column: 53, scope: !5977)
!5982 = !DILocation(line: 3529, column: 40, scope: !5977)
!5983 = !DILocation(line: 3529, column: 11, scope: !5978)
!5984 = !DILocation(line: 3530, column: 20, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 3529, column: 70)
!5986 = !DILocation(line: 3530, column: 9, scope: !5985)
!5987 = !DILocation(line: 3530, column: 18, scope: !5985)
!5988 = !DILocation(line: 3531, column: 9, scope: !5985)
!5989 = !DILocation(line: 3533, column: 18, scope: !5978)
!5990 = !DILocation(line: 3533, column: 7, scope: !5978)
!5991 = !DILocation(line: 3533, column: 16, scope: !5978)
!5992 = !DILocation(line: 3534, column: 5, scope: !5978)
!5993 = !DILocation(line: 3535, column: 14, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5973, file: !1, line: 3535, column: 14)
!5995 = !DILocation(line: 3535, column: 14, scope: !5973)
!5996 = !DILocalVariable(name: "result", scope: !5997, file: !1, line: 3536, type: !24)
!5997 = distinct !DILexicalBlock(scope: !5994, file: !1, line: 3535, column: 28)
!5998 = !DILocation(line: 3536, column: 22, scope: !5997)
!5999 = !DILocation(line: 3537, column: 12, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !1, line: 3537, column: 11)
!6001 = !DILocation(line: 3537, column: 11, scope: !5997)
!6002 = !DILocation(line: 3539, column: 12, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6000, file: !1, line: 3537, column: 27)
!6004 = !DILocation(line: 3539, column: 23, scope: !6003)
!6005 = !DILocation(line: 3539, column: 33, scope: !6003)
!6006 = !DILocation(line: 3540, column: 11, scope: !6003)
!6007 = !DILocation(line: 3540, column: 26, scope: !6003)
!6008 = !DILocation(line: 3540, column: 24, scope: !6003)
!6009 = !DILocation(line: 3538, column: 25, scope: !6003)
!6010 = !DILocation(line: 3538, column: 23, scope: !6003)
!6011 = !DILocation(line: 3541, column: 14, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6003, file: !1, line: 3541, column: 13)
!6013 = !DILocation(line: 3541, column: 13, scope: !6003)
!6014 = !DILocation(line: 3542, column: 11, scope: !6012)
!6015 = !DILocation(line: 3543, column: 7, scope: !6003)
!6016 = !DILocation(line: 3544, column: 38, scope: !5997)
!6017 = !DILocation(line: 3544, column: 46, scope: !5997)
!6018 = !DILocation(line: 3544, column: 16, scope: !5997)
!6019 = !DILocation(line: 3544, column: 14, scope: !5997)
!6020 = !DILocation(line: 3545, column: 18, scope: !5997)
!6021 = !DILocation(line: 3545, column: 7, scope: !5997)
!6022 = !DILocation(line: 3546, column: 11, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !5997, file: !1, line: 3546, column: 11)
!6024 = !DILocation(line: 3546, column: 18, scope: !6023)
!6025 = !DILocation(line: 3546, column: 11, scope: !5997)
!6026 = !DILocation(line: 3547, column: 20, scope: !6023)
!6027 = !DILocation(line: 3547, column: 9, scope: !6023)
!6028 = !DILocation(line: 3547, column: 18, scope: !6023)
!6029 = !DILocation(line: 3548, column: 14, scope: !5997)
!6030 = !DILocation(line: 3548, column: 7, scope: !5997)
!6031 = !DILocation(line: 3550, column: 3, scope: !5974)
!6032 = !DILocation(line: 3552, column: 7, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3552, column: 7)
!6034 = !DILocation(line: 3552, column: 21, scope: !6033)
!6035 = !DILocation(line: 3552, column: 24, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !6033, file: !1, discriminator: 1)
!6037 = !DILocation(line: 3552, column: 7, scope: !6036)
!6038 = !DILocation(line: 3553, column: 16, scope: !6033)
!6039 = !DILocation(line: 3553, column: 5, scope: !6033)
!6040 = !DILocation(line: 3555, column: 3, scope: !879)
!6041 = !DILocation(line: 3556, column: 1, scope: !879)
!6042 = !DILocalVariable(name: "pool", arg: 1, scope: !882, file: !1, line: 6252, type: !863)
!6043 = !DILocation(line: 6252, column: 30, scope: !882)
!6044 = !DILocalVariable(name: "enc", arg: 2, scope: !882, file: !1, line: 6252, type: !321)
!6045 = !DILocation(line: 6252, column: 52, scope: !882)
!6046 = !DILocalVariable(name: "ptr", arg: 3, scope: !882, file: !1, line: 6253, type: !192)
!6047 = !DILocation(line: 6253, column: 29, scope: !882)
!6048 = !DILocalVariable(name: "end", arg: 4, scope: !882, file: !1, line: 6253, type: !192)
!6049 = !DILocation(line: 6253, column: 46, scope: !882)
!6050 = !DILocation(line: 6255, column: 19, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !882, file: !1, line: 6255, column: 7)
!6052 = !DILocation(line: 6255, column: 25, scope: !6051)
!6053 = !DILocation(line: 6255, column: 30, scope: !6051)
!6054 = !DILocation(line: 6255, column: 35, scope: !6051)
!6055 = !DILocation(line: 6255, column: 8, scope: !6051)
!6056 = !DILocation(line: 6255, column: 7, scope: !882)
!6057 = !DILocation(line: 6256, column: 5, scope: !6051)
!6058 = !DILocation(line: 6257, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !882, file: !1, line: 6257, column: 7)
!6060 = !DILocation(line: 6257, column: 13, scope: !6059)
!6061 = !DILocation(line: 6257, column: 20, scope: !6059)
!6062 = !DILocation(line: 6257, column: 26, scope: !6059)
!6063 = !DILocation(line: 6257, column: 17, scope: !6059)
!6064 = !DILocation(line: 6257, column: 30, scope: !6059)
!6065 = !DILocation(line: 6257, column: 43, scope: !6066)
!6066 = !DILexicalBlockFile(scope: !6059, file: !1, discriminator: 1)
!6067 = !DILocation(line: 6257, column: 34, scope: !6066)
!6068 = !DILocation(line: 6257, column: 7, scope: !6066)
!6069 = !DILocation(line: 6258, column: 5, scope: !6059)
!6070 = !DILocation(line: 6259, column: 5, scope: !882)
!6071 = !DILocation(line: 6259, column: 11, scope: !882)
!6072 = !DILocation(line: 6259, column: 15, scope: !882)
!6073 = !DILocation(line: 6259, column: 18, scope: !882)
!6074 = !DILocation(line: 6260, column: 10, scope: !882)
!6075 = !DILocation(line: 6260, column: 16, scope: !882)
!6076 = !DILocation(line: 6260, column: 3, scope: !882)
!6077 = !DILocation(line: 6261, column: 1, scope: !882)
!6078 = !DILocalVariable(name: "publicId", arg: 1, scope: !885, file: !1, line: 5677, type: !202)
!6079 = !DILocation(line: 5677, column: 29, scope: !885)
!6080 = !DILocalVariable(name: "p", scope: !885, file: !1, line: 5679, type: !202)
!6081 = !DILocation(line: 5679, column: 13, scope: !885)
!6082 = !DILocation(line: 5679, column: 17, scope: !885)
!6083 = !DILocalVariable(name: "s", scope: !885, file: !1, line: 5680, type: !202)
!6084 = !DILocation(line: 5680, column: 13, scope: !885)
!6085 = !DILocation(line: 5681, column: 12, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !885, file: !1, line: 5681, column: 3)
!6087 = !DILocation(line: 5681, column: 10, scope: !6086)
!6088 = !DILocation(line: 5681, column: 8, scope: !6086)
!6089 = !DILocation(line: 5681, column: 23, scope: !6090)
!6090 = !DILexicalBlockFile(scope: !6091, file: !1, discriminator: 1)
!6091 = distinct !DILexicalBlock(scope: !6086, file: !1, line: 5681, column: 3)
!6092 = !DILocation(line: 5681, column: 22, scope: !6090)
!6093 = !DILocation(line: 5681, column: 3, scope: !6090)
!6094 = !DILocation(line: 5682, column: 14, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6091, file: !1, line: 5681, column: 31)
!6096 = !DILocation(line: 5682, column: 13, scope: !6095)
!6097 = !DILocation(line: 5682, column: 5, scope: !6095)
!6098 = !DILocation(line: 5686, column: 11, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !1, line: 5686, column: 11)
!6100 = distinct !DILexicalBlock(scope: !6095, file: !1, line: 5682, column: 17)
!6101 = !DILocation(line: 5686, column: 16, scope: !6099)
!6102 = !DILocation(line: 5686, column: 13, scope: !6099)
!6103 = !DILocation(line: 5686, column: 25, scope: !6099)
!6104 = !DILocation(line: 5686, column: 28, scope: !6105)
!6105 = !DILexicalBlockFile(scope: !6099, file: !1, discriminator: 1)
!6106 = !DILocation(line: 5686, column: 34, scope: !6105)
!6107 = !DILocation(line: 5686, column: 11, scope: !6105)
!6108 = !DILocation(line: 5687, column: 11, scope: !6099)
!6109 = !DILocation(line: 5687, column: 14, scope: !6099)
!6110 = !DILocation(line: 5687, column: 9, scope: !6099)
!6111 = !DILocation(line: 5688, column: 7, scope: !6100)
!6112 = !DILocation(line: 5690, column: 15, scope: !6100)
!6113 = !DILocation(line: 5690, column: 14, scope: !6100)
!6114 = !DILocation(line: 5690, column: 9, scope: !6100)
!6115 = !DILocation(line: 5690, column: 12, scope: !6100)
!6116 = !DILocation(line: 5691, column: 5, scope: !6100)
!6117 = !DILocation(line: 5692, column: 3, scope: !6095)
!6118 = !DILocation(line: 5681, column: 27, scope: !6119)
!6119 = !DILexicalBlockFile(scope: !6091, file: !1, discriminator: 2)
!6120 = !DILocation(line: 5681, column: 3, scope: !6119)
!6121 = !DILocation(line: 5693, column: 7, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !885, file: !1, line: 5693, column: 7)
!6123 = !DILocation(line: 5693, column: 12, scope: !6122)
!6124 = !DILocation(line: 5693, column: 9, scope: !6122)
!6125 = !DILocation(line: 5693, column: 21, scope: !6122)
!6126 = !DILocation(line: 5693, column: 24, scope: !6127)
!6127 = !DILexicalBlockFile(scope: !6122, file: !1, discriminator: 1)
!6128 = !DILocation(line: 5693, column: 30, scope: !6127)
!6129 = !DILocation(line: 5693, column: 7, scope: !6127)
!6130 = !DILocation(line: 5694, column: 5, scope: !6122)
!6131 = !DILocation(line: 5695, column: 4, scope: !885)
!6132 = !DILocation(line: 5695, column: 6, scope: !885)
!6133 = !DILocation(line: 5696, column: 1, scope: !885)
!6134 = !DILocalVariable(name: "parser", arg: 1, scope: !888, file: !1, line: 2149, type: !162)
!6135 = !DILocation(line: 2149, column: 29, scope: !888)
!6136 = !DILocalVariable(name: "start", arg: 2, scope: !888, file: !1, line: 2150, type: !192)
!6137 = !DILocation(line: 2150, column: 30, scope: !888)
!6138 = !DILocalVariable(name: "end", arg: 3, scope: !888, file: !1, line: 2151, type: !192)
!6139 = !DILocation(line: 2151, column: 30, scope: !888)
!6140 = !DILocalVariable(name: "endPtr", arg: 4, scope: !888, file: !1, line: 2152, type: !332)
!6141 = !DILocation(line: 2152, column: 31, scope: !888)
!6142 = !DILocalVariable(name: "result", scope: !888, file: !1, line: 2154, type: !24)
!6143 = !DILocation(line: 2154, column: 18, scope: !888)
!6144 = !DILocation(line: 2154, column: 37, scope: !888)
!6145 = !DILocation(line: 2154, column: 48, scope: !888)
!6146 = !DILocation(line: 2154, column: 58, scope: !888)
!6147 = !DILocation(line: 2154, column: 65, scope: !888)
!6148 = !DILocation(line: 2155, column: 37, scope: !888)
!6149 = !DILocation(line: 2155, column: 56, scope: !888)
!6150 = !DILocation(line: 2155, column: 55, scope: !888)
!6151 = !DILocation(line: 2155, column: 45, scope: !888)
!6152 = !DILocation(line: 2154, column: 27, scope: !888)
!6153 = !DILocation(line: 2156, column: 7, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !888, file: !1, line: 2156, column: 7)
!6155 = !DILocation(line: 2156, column: 14, scope: !6154)
!6156 = !DILocation(line: 2156, column: 7, scope: !888)
!6157 = !DILocation(line: 2157, column: 24, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !1, line: 2157, column: 9)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 2156, column: 33)
!6160 = !DILocation(line: 2157, column: 10, scope: !6158)
!6161 = !DILocation(line: 2157, column: 9, scope: !6159)
!6162 = !DILocation(line: 2158, column: 7, scope: !6158)
!6163 = !DILocation(line: 2159, column: 3, scope: !6159)
!6164 = !DILocation(line: 2160, column: 10, scope: !888)
!6165 = !DILocation(line: 2160, column: 3, scope: !888)
!6166 = !DILocation(line: 2161, column: 1, scope: !888)
!6167 = !DILocalVariable(name: "parser", arg: 1, scope: !931, file: !1, line: 6444, type: !162)
!6168 = !DILocation(line: 6444, column: 27, scope: !931)
!6169 = !DILocalVariable(name: "enc", arg: 2, scope: !931, file: !1, line: 6445, type: !321)
!6170 = !DILocation(line: 6445, column: 32, scope: !931)
!6171 = !DILocalVariable(name: "ptr", arg: 3, scope: !931, file: !1, line: 6446, type: !192)
!6172 = !DILocation(line: 6446, column: 28, scope: !931)
!6173 = !DILocalVariable(name: "end", arg: 4, scope: !931, file: !1, line: 6447, type: !192)
!6174 = !DILocation(line: 6447, column: 28, scope: !931)
!6175 = !DILocalVariable(name: "dtd", scope: !931, file: !1, line: 6449, type: !2386)
!6176 = !DILocation(line: 6449, column: 15, scope: !931)
!6177 = !DILocation(line: 6449, column: 21, scope: !931)
!6178 = !DILocalVariable(name: "name", scope: !931, file: !1, line: 6450, type: !210)
!6179 = !DILocation(line: 6450, column: 19, scope: !931)
!6180 = !DILocation(line: 6450, column: 43, scope: !931)
!6181 = !DILocation(line: 6450, column: 48, scope: !931)
!6182 = !DILocation(line: 6450, column: 54, scope: !931)
!6183 = !DILocation(line: 6450, column: 59, scope: !931)
!6184 = !DILocation(line: 6450, column: 64, scope: !931)
!6185 = !DILocation(line: 6450, column: 26, scope: !931)
!6186 = !DILocalVariable(name: "ret", scope: !931, file: !1, line: 6451, type: !471)
!6187 = !DILocation(line: 6451, column: 17, scope: !931)
!6188 = !DILocation(line: 6453, column: 8, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !931, file: !1, line: 6453, column: 7)
!6190 = !DILocation(line: 6453, column: 7, scope: !931)
!6191 = !DILocation(line: 6454, column: 5, scope: !6189)
!6192 = !DILocation(line: 6455, column: 33, scope: !931)
!6193 = !DILocation(line: 6455, column: 42, scope: !931)
!6194 = !DILocation(line: 6455, column: 47, scope: !931)
!6195 = !DILocation(line: 6455, column: 61, scope: !931)
!6196 = !DILocation(line: 6455, column: 26, scope: !931)
!6197 = !DILocation(line: 6455, column: 9, scope: !931)
!6198 = !DILocation(line: 6455, column: 7, scope: !931)
!6199 = !DILocation(line: 6456, column: 8, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !931, file: !1, line: 6456, column: 7)
!6201 = !DILocation(line: 6456, column: 7, scope: !931)
!6202 = !DILocation(line: 6457, column: 5, scope: !6200)
!6203 = !DILocation(line: 6458, column: 7, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !931, file: !1, line: 6458, column: 7)
!6205 = !DILocation(line: 6458, column: 12, scope: !6204)
!6206 = !DILocation(line: 6458, column: 20, scope: !6204)
!6207 = !DILocation(line: 6458, column: 17, scope: !6204)
!6208 = !DILocation(line: 6458, column: 7, scope: !931)
!6209 = !DILocation(line: 6459, column: 5, scope: !6204)
!6210 = !DILocation(line: 6461, column: 5, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6204, file: !1, line: 6460, column: 8)
!6212 = !DILocation(line: 6462, column: 31, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6211, file: !1, line: 6462, column: 9)
!6214 = !DILocation(line: 6462, column: 39, scope: !6213)
!6215 = !DILocation(line: 6462, column: 10, scope: !6213)
!6216 = !DILocation(line: 6462, column: 9, scope: !6211)
!6217 = !DILocation(line: 6463, column: 7, scope: !6213)
!6218 = !DILocation(line: 6465, column: 10, scope: !931)
!6219 = !DILocation(line: 6465, column: 3, scope: !931)
!6220 = !DILocation(line: 6466, column: 1, scope: !931)
!6221 = !DILocalVariable(name: "parser", arg: 1, scope: !934, file: !1, line: 5482, type: !162)
!6222 = !DILocation(line: 5482, column: 27, scope: !934)
!6223 = !DILocalVariable(name: "enc", arg: 2, scope: !934, file: !1, line: 5482, type: !321)
!6224 = !DILocation(line: 5482, column: 51, scope: !934)
!6225 = !DILocalVariable(name: "start", arg: 3, scope: !934, file: !1, line: 5483, type: !192)
!6226 = !DILocation(line: 5483, column: 28, scope: !934)
!6227 = !DILocalVariable(name: "end", arg: 4, scope: !934, file: !1, line: 5483, type: !192)
!6228 = !DILocation(line: 5483, column: 47, scope: !934)
!6229 = !DILocalVariable(name: "dtd", scope: !934, file: !1, line: 5485, type: !2386)
!6230 = !DILocation(line: 5485, column: 15, scope: !934)
!6231 = !DILocation(line: 5485, column: 21, scope: !934)
!6232 = !DILocalVariable(name: "id", scope: !934, file: !1, line: 5486, type: !519)
!6233 = !DILocation(line: 5486, column: 17, scope: !934)
!6234 = !DILocalVariable(name: "name", scope: !934, file: !1, line: 5487, type: !210)
!6235 = !DILocation(line: 5487, column: 19, scope: !934)
!6236 = !DILocation(line: 5488, column: 8, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !934, file: !1, line: 5488, column: 7)
!6238 = !DILocation(line: 5488, column: 8, scope: !6239)
!6239 = !DILexicalBlockFile(scope: !6237, file: !1, discriminator: 1)
!6240 = !DILocation(line: 5488, column: 7, scope: !6239)
!6241 = !DILocation(line: 5488, column: 8, scope: !6242)
!6242 = !DILexicalBlockFile(scope: !6237, file: !1, discriminator: 2)
!6243 = !DILocation(line: 5488, column: 8, scope: !6244)
!6244 = !DILexicalBlockFile(scope: !6237, file: !1, discriminator: 3)
!6245 = !DILocation(line: 5488, column: 7, scope: !6244)
!6246 = !DILocation(line: 5489, column: 5, scope: !6237)
!6247 = !DILocation(line: 5490, column: 27, scope: !934)
!6248 = !DILocation(line: 5490, column: 32, scope: !934)
!6249 = !DILocation(line: 5490, column: 38, scope: !934)
!6250 = !DILocation(line: 5490, column: 43, scope: !934)
!6251 = !DILocation(line: 5490, column: 50, scope: !934)
!6252 = !DILocation(line: 5490, column: 10, scope: !934)
!6253 = !DILocation(line: 5490, column: 8, scope: !934)
!6254 = !DILocation(line: 5491, column: 8, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !934, file: !1, line: 5491, column: 7)
!6256 = !DILocation(line: 5491, column: 7, scope: !934)
!6257 = !DILocation(line: 5492, column: 5, scope: !6255)
!6258 = !DILocation(line: 5494, column: 3, scope: !934)
!6259 = !DILocation(line: 5495, column: 31, scope: !934)
!6260 = !DILocation(line: 5495, column: 40, scope: !934)
!6261 = !DILocation(line: 5495, column: 45, scope: !934)
!6262 = !DILocation(line: 5495, column: 59, scope: !934)
!6263 = !DILocation(line: 5495, column: 24, scope: !934)
!6264 = !DILocation(line: 5495, column: 8, scope: !934)
!6265 = !DILocation(line: 5495, column: 6, scope: !934)
!6266 = !DILocation(line: 5496, column: 8, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !934, file: !1, line: 5496, column: 7)
!6268 = !DILocation(line: 5496, column: 7, scope: !934)
!6269 = !DILocation(line: 5497, column: 5, scope: !6267)
!6270 = !DILocation(line: 5498, column: 7, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !934, file: !1, line: 5498, column: 7)
!6272 = !DILocation(line: 5498, column: 11, scope: !6271)
!6273 = !DILocation(line: 5498, column: 19, scope: !6271)
!6274 = !DILocation(line: 5498, column: 16, scope: !6271)
!6275 = !DILocation(line: 5498, column: 7, scope: !934)
!6276 = !DILocation(line: 5499, column: 5, scope: !6271)
!6277 = !DILocation(line: 5501, column: 5, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 5500, column: 8)
!6279 = !DILocation(line: 5502, column: 10, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6278, file: !1, line: 5502, column: 9)
!6281 = !DILocation(line: 5502, column: 9, scope: !6278)
!6282 = !DILocation(line: 5502, column: 9, scope: !6283)
!6283 = !DILexicalBlockFile(scope: !6278, file: !1, discriminator: 1)
!6284 = !DILocation(line: 5504, column: 14, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6280, file: !1, line: 5504, column: 14)
!6286 = !DILocation(line: 5504, column: 22, scope: !6285)
!6287 = !DILocation(line: 5505, column: 9, scope: !6285)
!6288 = !DILocation(line: 5505, column: 12, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6285, file: !1, discriminator: 1)
!6290 = !DILocation(line: 5505, column: 20, scope: !6289)
!6291 = !DILocation(line: 5506, column: 9, scope: !6285)
!6292 = !DILocation(line: 5506, column: 12, scope: !6289)
!6293 = !DILocation(line: 5506, column: 20, scope: !6289)
!6294 = !DILocation(line: 5507, column: 9, scope: !6285)
!6295 = !DILocation(line: 5507, column: 12, scope: !6289)
!6296 = !DILocation(line: 5507, column: 20, scope: !6289)
!6297 = !DILocation(line: 5508, column: 9, scope: !6285)
!6298 = !DILocation(line: 5508, column: 12, scope: !6289)
!6299 = !DILocation(line: 5508, column: 20, scope: !6289)
!6300 = !DILocation(line: 5509, column: 9, scope: !6285)
!6301 = !DILocation(line: 5509, column: 13, scope: !6289)
!6302 = !DILocation(line: 5509, column: 21, scope: !6289)
!6303 = !DILocation(line: 5509, column: 36, scope: !6289)
!6304 = !DILocation(line: 5509, column: 39, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6285, file: !1, discriminator: 2)
!6306 = !DILocation(line: 5509, column: 47, scope: !6305)
!6307 = !DILocation(line: 5504, column: 14, scope: !6308)
!6308 = !DILexicalBlockFile(scope: !6280, file: !1, discriminator: 1)
!6309 = !DILocation(line: 5510, column: 11, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !1, line: 5510, column: 11)
!6311 = distinct !DILexicalBlock(scope: !6285, file: !1, line: 5509, column: 71)
!6312 = !DILocation(line: 5510, column: 19, scope: !6310)
!6313 = !DILocation(line: 5510, column: 11, scope: !6311)
!6314 = !DILocation(line: 5511, column: 23, scope: !6310)
!6315 = !DILocation(line: 5511, column: 28, scope: !6310)
!6316 = !DILocation(line: 5511, column: 9, scope: !6310)
!6317 = !DILocation(line: 5511, column: 13, scope: !6310)
!6318 = !DILocation(line: 5511, column: 20, scope: !6310)
!6319 = !DILocation(line: 5513, column: 39, scope: !6310)
!6320 = !DILocation(line: 5513, column: 48, scope: !6310)
!6321 = !DILocation(line: 5513, column: 53, scope: !6310)
!6322 = !DILocation(line: 5513, column: 63, scope: !6310)
!6323 = !DILocation(line: 5513, column: 68, scope: !6310)
!6324 = !DILocation(line: 5513, column: 32, scope: !6310)
!6325 = !DILocation(line: 5513, column: 22, scope: !6310)
!6326 = !DILocation(line: 5513, column: 9, scope: !6310)
!6327 = !DILocation(line: 5513, column: 13, scope: !6310)
!6328 = !DILocation(line: 5513, column: 20, scope: !6310)
!6329 = !DILocation(line: 5514, column: 7, scope: !6311)
!6330 = !DILocation(line: 5514, column: 11, scope: !6311)
!6331 = !DILocation(line: 5514, column: 17, scope: !6311)
!6332 = !DILocation(line: 5515, column: 5, scope: !6311)
!6333 = !DILocalVariable(name: "i", scope: !6334, file: !1, line: 5517, type: !223)
!6334 = distinct !DILexicalBlock(scope: !6285, file: !1, line: 5516, column: 10)
!6335 = !DILocation(line: 5517, column: 11, scope: !6334)
!6336 = !DILocation(line: 5518, column: 14, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6334, file: !1, line: 5518, column: 7)
!6338 = !DILocation(line: 5518, column: 12, scope: !6337)
!6339 = !DILocation(line: 5518, column: 24, scope: !6340)
!6340 = !DILexicalBlockFile(scope: !6341, file: !1, discriminator: 1)
!6341 = distinct !DILexicalBlock(scope: !6337, file: !1, line: 5518, column: 7)
!6342 = !DILocation(line: 5518, column: 19, scope: !6340)
!6343 = !DILocation(line: 5518, column: 7, scope: !6340)
!6344 = !DILocation(line: 5520, column: 18, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !1, line: 5520, column: 13)
!6346 = distinct !DILexicalBlock(scope: !6341, file: !1, line: 5518, column: 33)
!6347 = !DILocation(line: 5520, column: 13, scope: !6345)
!6348 = !DILocation(line: 5520, column: 21, scope: !6345)
!6349 = !DILocation(line: 5520, column: 13, scope: !6346)
!6350 = !DILocalVariable(name: "j", scope: !6351, file: !1, line: 5521, type: !223)
!6351 = distinct !DILexicalBlock(scope: !6345, file: !1, line: 5520, column: 44)
!6352 = !DILocation(line: 5521, column: 15, scope: !6351)
!6353 = !DILocation(line: 5522, column: 18, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6351, file: !1, line: 5522, column: 11)
!6355 = !DILocation(line: 5522, column: 16, scope: !6354)
!6356 = !DILocation(line: 5522, column: 23, scope: !6357)
!6357 = !DILexicalBlockFile(scope: !6358, file: !1, discriminator: 1)
!6358 = distinct !DILexicalBlock(scope: !6354, file: !1, line: 5522, column: 11)
!6359 = !DILocation(line: 5522, column: 27, scope: !6357)
!6360 = !DILocation(line: 5522, column: 25, scope: !6357)
!6361 = !DILocation(line: 5522, column: 11, scope: !6357)
!6362 = !DILocation(line: 5523, column: 18, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6364, file: !1, line: 5523, column: 17)
!6364 = distinct !DILexicalBlock(scope: !6358, file: !1, line: 5522, column: 35)
!6365 = !DILocation(line: 5523, column: 18, scope: !6366)
!6366 = !DILexicalBlockFile(scope: !6363, file: !1, discriminator: 1)
!6367 = !DILocation(line: 5523, column: 17, scope: !6366)
!6368 = !DILocation(line: 5523, column: 18, scope: !6369)
!6369 = !DILexicalBlockFile(scope: !6363, file: !1, discriminator: 2)
!6370 = !DILocation(line: 5523, column: 18, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !6363, file: !1, discriminator: 3)
!6372 = !DILocation(line: 5523, column: 17, scope: !6371)
!6373 = !DILocation(line: 5524, column: 15, scope: !6363)
!6374 = !DILocation(line: 5525, column: 11, scope: !6364)
!6375 = !DILocation(line: 5522, column: 31, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6358, file: !1, discriminator: 2)
!6377 = !DILocation(line: 5522, column: 11, scope: !6376)
!6378 = !DILocation(line: 5526, column: 16, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6351, file: !1, line: 5526, column: 15)
!6380 = !DILocation(line: 5526, column: 16, scope: !6381)
!6381 = !DILexicalBlockFile(scope: !6379, file: !1, discriminator: 1)
!6382 = !DILocation(line: 5526, column: 15, scope: !6381)
!6383 = !DILocation(line: 5526, column: 16, scope: !6384)
!6384 = !DILexicalBlockFile(scope: !6379, file: !1, discriminator: 2)
!6385 = !DILocation(line: 5526, column: 16, scope: !6386)
!6386 = !DILexicalBlockFile(scope: !6379, file: !1, discriminator: 3)
!6387 = !DILocation(line: 5526, column: 15, scope: !6386)
!6388 = !DILocation(line: 5527, column: 13, scope: !6379)
!6389 = !DILocation(line: 5528, column: 41, scope: !6351)
!6390 = !DILocation(line: 5528, column: 50, scope: !6351)
!6391 = !DILocation(line: 5528, column: 55, scope: !6351)
!6392 = !DILocation(line: 5528, column: 65, scope: !6351)
!6393 = !DILocation(line: 5528, column: 34, scope: !6351)
!6394 = !DILocation(line: 5528, column: 24, scope: !6351)
!6395 = !DILocation(line: 5528, column: 11, scope: !6351)
!6396 = !DILocation(line: 5528, column: 15, scope: !6351)
!6397 = !DILocation(line: 5528, column: 22, scope: !6351)
!6398 = !DILocation(line: 5530, column: 16, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6351, file: !1, line: 5530, column: 15)
!6400 = !DILocation(line: 5530, column: 20, scope: !6399)
!6401 = !DILocation(line: 5530, column: 15, scope: !6351)
!6402 = !DILocation(line: 5531, column: 13, scope: !6399)
!6403 = !DILocation(line: 5532, column: 15, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6351, file: !1, line: 5532, column: 15)
!6405 = !DILocation(line: 5532, column: 19, scope: !6404)
!6406 = !DILocation(line: 5532, column: 27, scope: !6404)
!6407 = !DILocation(line: 5532, column: 35, scope: !6404)
!6408 = !DILocation(line: 5532, column: 32, scope: !6404)
!6409 = !DILocation(line: 5532, column: 15, scope: !6351)
!6410 = !DILocation(line: 5533, column: 13, scope: !6404)
!6411 = !DILocation(line: 5535, column: 13, scope: !6404)
!6412 = !DILocation(line: 5536, column: 11, scope: !6351)
!6413 = !DILocation(line: 5538, column: 7, scope: !6346)
!6414 = !DILocation(line: 5518, column: 29, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !6341, file: !1, discriminator: 2)
!6416 = !DILocation(line: 5518, column: 7, scope: !6415)
!6417 = !DILocation(line: 5541, column: 10, scope: !934)
!6418 = !DILocation(line: 5541, column: 3, scope: !934)
!6419 = !DILocation(line: 5542, column: 1, scope: !934)
!6420 = !DILocalVariable(name: "pool", arg: 1, scope: !937, file: !1, line: 6241, type: !863)
!6421 = !DILocation(line: 6241, column: 31, scope: !937)
!6422 = !DILocalVariable(name: "s", arg: 2, scope: !937, file: !1, line: 6241, type: !210)
!6423 = !DILocation(line: 6241, column: 53, scope: !937)
!6424 = !DILocation(line: 6243, column: 3, scope: !937)
!6425 = !DILocation(line: 6243, column: 11, scope: !6426)
!6426 = !DILexicalBlockFile(scope: !937, file: !1, discriminator: 1)
!6427 = !DILocation(line: 6243, column: 10, scope: !6426)
!6428 = !DILocation(line: 6243, column: 3, scope: !6426)
!6429 = !DILocation(line: 6244, column: 10, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6431, file: !1, line: 6244, column: 9)
!6431 = distinct !DILexicalBlock(scope: !937, file: !1, line: 6243, column: 14)
!6432 = !DILocation(line: 6244, column: 10, scope: !6433)
!6433 = !DILexicalBlockFile(scope: !6430, file: !1, discriminator: 1)
!6434 = !DILocation(line: 6244, column: 9, scope: !6433)
!6435 = !DILocation(line: 6244, column: 10, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6430, file: !1, discriminator: 2)
!6437 = !DILocation(line: 6244, column: 10, scope: !6438)
!6438 = !DILexicalBlockFile(scope: !6430, file: !1, discriminator: 3)
!6439 = !DILocation(line: 6244, column: 9, scope: !6438)
!6440 = !DILocation(line: 6245, column: 7, scope: !6430)
!6441 = !DILocation(line: 6246, column: 6, scope: !6431)
!6442 = !DILocation(line: 6243, column: 3, scope: !6443)
!6443 = !DILexicalBlockFile(scope: !937, file: !1, discriminator: 2)
!6444 = !DILocation(line: 6248, column: 10, scope: !937)
!6445 = !DILocation(line: 6248, column: 16, scope: !937)
!6446 = !DILocation(line: 6248, column: 3, scope: !937)
!6447 = !DILocation(line: 6249, column: 1, scope: !937)
!6448 = !DILocalVariable(name: "pool", arg: 1, scope: !940, file: !1, line: 6199, type: !863)
!6449 = !DILocation(line: 6199, column: 25, scope: !940)
!6450 = !DILocalVariable(name: "enc", arg: 2, scope: !940, file: !1, line: 6199, type: !321)
!6451 = !DILocation(line: 6199, column: 47, scope: !940)
!6452 = !DILocalVariable(name: "ptr", arg: 3, scope: !940, file: !1, line: 6200, type: !192)
!6453 = !DILocation(line: 6200, column: 24, scope: !940)
!6454 = !DILocalVariable(name: "end", arg: 4, scope: !940, file: !1, line: 6200, type: !192)
!6455 = !DILocation(line: 6200, column: 41, scope: !940)
!6456 = !DILocation(line: 6202, column: 8, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !940, file: !1, line: 6202, column: 7)
!6458 = !DILocation(line: 6202, column: 14, scope: !6457)
!6459 = !DILocation(line: 6202, column: 18, scope: !6457)
!6460 = !DILocation(line: 6202, column: 31, scope: !6461)
!6461 = !DILexicalBlockFile(scope: !6457, file: !1, discriminator: 1)
!6462 = !DILocation(line: 6202, column: 22, scope: !6461)
!6463 = !DILocation(line: 6202, column: 7, scope: !6461)
!6464 = !DILocation(line: 6203, column: 5, scope: !6457)
!6465 = !DILocation(line: 6204, column: 3, scope: !940)
!6466 = !DILocalVariable(name: "convert_res", scope: !6467, file: !1, line: 6205, type: !6470)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !1, line: 6204, column: 12)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !1, line: 6204, column: 3)
!6469 = distinct !DILexicalBlock(scope: !940, file: !1, line: 6204, column: 3)
!6470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!6471 = !DILocation(line: 6205, column: 35, scope: !6467)
!6472 = !DILocation(line: 6205, column: 49, scope: !6467)
!6473 = !DILocation(line: 6206, column: 10, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6467, file: !1, line: 6206, column: 9)
!6475 = !DILocation(line: 6206, column: 22, scope: !6474)
!6476 = !DILocation(line: 6206, column: 48, scope: !6474)
!6477 = !DILocation(line: 6206, column: 52, scope: !6478)
!6478 = !DILexicalBlockFile(scope: !6474, file: !1, discriminator: 1)
!6479 = !DILocation(line: 6206, column: 64, scope: !6478)
!6480 = !DILocation(line: 6206, column: 9, scope: !6478)
!6481 = !DILocation(line: 6207, column: 7, scope: !6474)
!6482 = !DILocation(line: 6208, column: 19, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6467, file: !1, line: 6208, column: 9)
!6484 = !DILocation(line: 6208, column: 10, scope: !6483)
!6485 = !DILocation(line: 6208, column: 9, scope: !6467)
!6486 = !DILocation(line: 6209, column: 7, scope: !6483)
!6487 = !DILocation(line: 6204, column: 3, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6468, file: !1, discriminator: 1)
!6489 = !DILocation(line: 6211, column: 10, scope: !940)
!6490 = !DILocation(line: 6211, column: 16, scope: !940)
!6491 = !DILocation(line: 6211, column: 3, scope: !940)
!6492 = !DILocation(line: 6212, column: 1, scope: !940)
!6493 = !DILocalVariable(name: "type", arg: 1, scope: !941, file: !1, line: 5408, type: !471)
!6494 = !DILocation(line: 5408, column: 31, scope: !941)
!6495 = !DILocalVariable(name: "attId", arg: 2, scope: !941, file: !1, line: 5408, type: !519)
!6496 = !DILocation(line: 5408, column: 51, scope: !941)
!6497 = !DILocalVariable(name: "isCdata", arg: 3, scope: !941, file: !1, line: 5408, type: !159)
!6498 = !DILocation(line: 5408, column: 67, scope: !941)
!6499 = !DILocalVariable(name: "isId", arg: 4, scope: !941, file: !1, line: 5409, type: !159)
!6500 = !DILocation(line: 5409, column: 26, scope: !941)
!6501 = !DILocalVariable(name: "value", arg: 5, scope: !941, file: !1, line: 5409, type: !210)
!6502 = !DILocation(line: 5409, column: 48, scope: !941)
!6503 = !DILocalVariable(name: "parser", arg: 6, scope: !941, file: !1, line: 5409, type: !162)
!6504 = !DILocation(line: 5409, column: 66, scope: !941)
!6505 = !DILocalVariable(name: "att", scope: !941, file: !1, line: 5411, type: !511)
!6506 = !DILocation(line: 5411, column: 22, scope: !941)
!6507 = !DILocation(line: 5412, column: 7, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !941, file: !1, line: 5412, column: 7)
!6509 = !DILocation(line: 5412, column: 13, scope: !6508)
!6510 = !DILocation(line: 5412, column: 16, scope: !6511)
!6511 = !DILexicalBlockFile(scope: !6508, file: !1, discriminator: 1)
!6512 = !DILocation(line: 5412, column: 7, scope: !6511)
!6513 = !DILocalVariable(name: "i", scope: !6514, file: !1, line: 5415, type: !223)
!6514 = distinct !DILexicalBlock(scope: !6508, file: !1, line: 5412, column: 22)
!6515 = !DILocation(line: 5415, column: 9, scope: !6514)
!6516 = !DILocation(line: 5416, column: 12, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6514, file: !1, line: 5416, column: 5)
!6518 = !DILocation(line: 5416, column: 10, scope: !6517)
!6519 = !DILocation(line: 5416, column: 17, scope: !6520)
!6520 = !DILexicalBlockFile(scope: !6521, file: !1, discriminator: 1)
!6521 = distinct !DILexicalBlock(scope: !6517, file: !1, line: 5416, column: 5)
!6522 = !DILocation(line: 5416, column: 21, scope: !6520)
!6523 = !DILocation(line: 5416, column: 27, scope: !6520)
!6524 = !DILocation(line: 5416, column: 19, scope: !6520)
!6525 = !DILocation(line: 5416, column: 5, scope: !6520)
!6526 = !DILocation(line: 5417, column: 11, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6521, file: !1, line: 5417, column: 11)
!6528 = !DILocation(line: 5417, column: 38, scope: !6527)
!6529 = !DILocation(line: 5417, column: 20, scope: !6527)
!6530 = !DILocation(line: 5417, column: 26, scope: !6527)
!6531 = !DILocation(line: 5417, column: 41, scope: !6527)
!6532 = !DILocation(line: 5417, column: 17, scope: !6527)
!6533 = !DILocation(line: 5417, column: 11, scope: !6521)
!6534 = !DILocation(line: 5418, column: 9, scope: !6527)
!6535 = !DILocation(line: 5417, column: 41, scope: !6536)
!6536 = !DILexicalBlockFile(scope: !6527, file: !1, discriminator: 1)
!6537 = !DILocation(line: 5416, column: 42, scope: !6538)
!6538 = !DILexicalBlockFile(scope: !6521, file: !1, discriminator: 2)
!6539 = !DILocation(line: 5416, column: 5, scope: !6538)
!6540 = !DILocation(line: 5419, column: 9, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6514, file: !1, line: 5419, column: 9)
!6542 = !DILocation(line: 5419, column: 14, scope: !6541)
!6543 = !DILocation(line: 5419, column: 18, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6541, file: !1, discriminator: 1)
!6545 = !DILocation(line: 5419, column: 24, scope: !6544)
!6546 = !DILocation(line: 5419, column: 30, scope: !6544)
!6547 = !DILocation(line: 5419, column: 34, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !6541, file: !1, discriminator: 2)
!6549 = !DILocation(line: 5419, column: 41, scope: !6548)
!6550 = !DILocation(line: 5419, column: 9, scope: !6548)
!6551 = !DILocation(line: 5420, column: 21, scope: !6541)
!6552 = !DILocation(line: 5420, column: 7, scope: !6541)
!6553 = !DILocation(line: 5420, column: 13, scope: !6541)
!6554 = !DILocation(line: 5420, column: 19, scope: !6541)
!6555 = !DILocation(line: 5421, column: 3, scope: !6514)
!6556 = !DILocation(line: 5422, column: 7, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !941, file: !1, line: 5422, column: 7)
!6558 = !DILocation(line: 5422, column: 13, scope: !6557)
!6559 = !DILocation(line: 5422, column: 29, scope: !6557)
!6560 = !DILocation(line: 5422, column: 35, scope: !6557)
!6561 = !DILocation(line: 5422, column: 26, scope: !6557)
!6562 = !DILocation(line: 5422, column: 7, scope: !941)
!6563 = !DILocation(line: 5423, column: 9, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !1, line: 5423, column: 9)
!6565 = distinct !DILexicalBlock(scope: !6557, file: !1, line: 5422, column: 53)
!6566 = !DILocation(line: 5423, column: 15, scope: !6564)
!6567 = !DILocation(line: 5423, column: 32, scope: !6564)
!6568 = !DILocation(line: 5423, column: 9, scope: !6565)
!6569 = !DILocation(line: 5424, column: 7, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6564, file: !1, line: 5423, column: 38)
!6571 = !DILocation(line: 5424, column: 13, scope: !6570)
!6572 = !DILocation(line: 5424, column: 30, scope: !6570)
!6573 = !DILocation(line: 5425, column: 48, scope: !6570)
!6574 = !DILocation(line: 5425, column: 27, scope: !6570)
!6575 = !DILocation(line: 5425, column: 7, scope: !6570)
!6576 = !DILocation(line: 5425, column: 13, scope: !6570)
!6577 = !DILocation(line: 5425, column: 25, scope: !6570)
!6578 = !DILocation(line: 5427, column: 12, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6570, file: !1, line: 5427, column: 11)
!6580 = !DILocation(line: 5427, column: 18, scope: !6579)
!6581 = !DILocation(line: 5427, column: 11, scope: !6570)
!6582 = !DILocation(line: 5428, column: 9, scope: !6579)
!6583 = !DILocation(line: 5429, column: 5, scope: !6570)
!6584 = !DILocalVariable(name: "temp", scope: !6585, file: !1, line: 5431, type: !511)
!6585 = distinct !DILexicalBlock(scope: !6564, file: !1, line: 5430, column: 10)
!6586 = !DILocation(line: 5431, column: 26, scope: !6585)
!6587 = !DILocalVariable(name: "count", scope: !6585, file: !1, line: 5432, type: !223)
!6588 = !DILocation(line: 5432, column: 11, scope: !6585)
!6589 = !DILocation(line: 5432, column: 19, scope: !6585)
!6590 = !DILocation(line: 5432, column: 25, scope: !6585)
!6591 = !DILocation(line: 5432, column: 42, scope: !6585)
!6592 = !DILocation(line: 5434, column: 9, scope: !6585)
!6593 = !DILocation(line: 5433, column: 14, scope: !6585)
!6594 = !DILocation(line: 5433, column: 12, scope: !6585)
!6595 = !DILocation(line: 5435, column: 11, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6585, file: !1, line: 5435, column: 11)
!6597 = !DILocation(line: 5435, column: 16, scope: !6596)
!6598 = !DILocation(line: 5435, column: 11, scope: !6585)
!6599 = !DILocation(line: 5436, column: 9, scope: !6596)
!6600 = !DILocation(line: 5437, column: 32, scope: !6585)
!6601 = !DILocation(line: 5437, column: 7, scope: !6585)
!6602 = !DILocation(line: 5437, column: 13, scope: !6585)
!6603 = !DILocation(line: 5437, column: 30, scope: !6585)
!6604 = !DILocation(line: 5438, column: 27, scope: !6585)
!6605 = !DILocation(line: 5438, column: 7, scope: !6585)
!6606 = !DILocation(line: 5438, column: 13, scope: !6585)
!6607 = !DILocation(line: 5438, column: 25, scope: !6585)
!6608 = !DILocation(line: 5440, column: 3, scope: !6565)
!6609 = !DILocation(line: 5441, column: 9, scope: !941)
!6610 = !DILocation(line: 5441, column: 15, scope: !941)
!6611 = !DILocation(line: 5441, column: 29, scope: !941)
!6612 = !DILocation(line: 5441, column: 35, scope: !941)
!6613 = !DILocation(line: 5441, column: 27, scope: !941)
!6614 = !DILocation(line: 5441, column: 7, scope: !941)
!6615 = !DILocation(line: 5442, column: 13, scope: !941)
!6616 = !DILocation(line: 5442, column: 3, scope: !941)
!6617 = !DILocation(line: 5442, column: 8, scope: !941)
!6618 = !DILocation(line: 5442, column: 11, scope: !941)
!6619 = !DILocation(line: 5443, column: 16, scope: !941)
!6620 = !DILocation(line: 5443, column: 3, scope: !941)
!6621 = !DILocation(line: 5443, column: 8, scope: !941)
!6622 = !DILocation(line: 5443, column: 14, scope: !941)
!6623 = !DILocation(line: 5444, column: 18, scope: !941)
!6624 = !DILocation(line: 5444, column: 3, scope: !941)
!6625 = !DILocation(line: 5444, column: 8, scope: !941)
!6626 = !DILocation(line: 5444, column: 16, scope: !941)
!6627 = !DILocation(line: 5445, column: 8, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !941, file: !1, line: 5445, column: 7)
!6629 = !DILocation(line: 5445, column: 7, scope: !941)
!6630 = !DILocation(line: 5446, column: 5, scope: !6628)
!6631 = !DILocation(line: 5446, column: 12, scope: !6628)
!6632 = !DILocation(line: 5446, column: 27, scope: !6628)
!6633 = !DILocation(line: 5447, column: 3, scope: !941)
!6634 = !DILocation(line: 5447, column: 9, scope: !941)
!6635 = !DILocation(line: 5447, column: 22, scope: !941)
!6636 = !DILocation(line: 5448, column: 3, scope: !941)
!6637 = !DILocation(line: 5449, column: 1, scope: !941)
!6638 = !DILocalVariable(name: "pool", arg: 1, scope: !944, file: !1, line: 6264, type: !863)
!6639 = !DILocation(line: 6264, column: 23, scope: !944)
!6640 = !DILocation(line: 6266, column: 7, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !944, file: !1, line: 6266, column: 7)
!6642 = !DILocation(line: 6266, column: 13, scope: !6641)
!6643 = !DILocation(line: 6266, column: 7, scope: !944)
!6644 = !DILocation(line: 6267, column: 9, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !1, line: 6267, column: 9)
!6646 = distinct !DILexicalBlock(scope: !6641, file: !1, line: 6266, column: 25)
!6647 = !DILocation(line: 6267, column: 15, scope: !6645)
!6648 = !DILocation(line: 6267, column: 21, scope: !6645)
!6649 = !DILocation(line: 6267, column: 9, scope: !6646)
!6650 = !DILocation(line: 6268, column: 22, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6645, file: !1, line: 6267, column: 27)
!6652 = !DILocation(line: 6268, column: 28, scope: !6651)
!6653 = !DILocation(line: 6268, column: 7, scope: !6651)
!6654 = !DILocation(line: 6268, column: 13, scope: !6651)
!6655 = !DILocation(line: 6268, column: 20, scope: !6651)
!6656 = !DILocation(line: 6269, column: 26, scope: !6651)
!6657 = !DILocation(line: 6269, column: 32, scope: !6651)
!6658 = !DILocation(line: 6269, column: 44, scope: !6651)
!6659 = !DILocation(line: 6269, column: 7, scope: !6651)
!6660 = !DILocation(line: 6269, column: 13, scope: !6651)
!6661 = !DILocation(line: 6269, column: 24, scope: !6651)
!6662 = !DILocation(line: 6270, column: 7, scope: !6651)
!6663 = !DILocation(line: 6270, column: 13, scope: !6651)
!6664 = !DILocation(line: 6270, column: 21, scope: !6651)
!6665 = !DILocation(line: 6270, column: 26, scope: !6651)
!6666 = !DILocation(line: 6271, column: 21, scope: !6651)
!6667 = !DILocation(line: 6271, column: 27, scope: !6651)
!6668 = !DILocation(line: 6271, column: 35, scope: !6651)
!6669 = !DILocation(line: 6271, column: 7, scope: !6651)
!6670 = !DILocation(line: 6271, column: 13, scope: !6651)
!6671 = !DILocation(line: 6271, column: 19, scope: !6651)
!6672 = !DILocation(line: 6272, column: 19, scope: !6651)
!6673 = !DILocation(line: 6272, column: 25, scope: !6651)
!6674 = !DILocation(line: 6272, column: 33, scope: !6651)
!6675 = !DILocation(line: 6272, column: 39, scope: !6651)
!6676 = !DILocation(line: 6272, column: 47, scope: !6651)
!6677 = !DILocation(line: 6272, column: 31, scope: !6651)
!6678 = !DILocation(line: 6272, column: 7, scope: !6651)
!6679 = !DILocation(line: 6272, column: 13, scope: !6651)
!6680 = !DILocation(line: 6272, column: 17, scope: !6651)
!6681 = !DILocation(line: 6273, column: 19, scope: !6651)
!6682 = !DILocation(line: 6273, column: 25, scope: !6651)
!6683 = !DILocation(line: 6273, column: 7, scope: !6651)
!6684 = !DILocation(line: 6273, column: 13, scope: !6651)
!6685 = !DILocation(line: 6273, column: 17, scope: !6651)
!6686 = !DILocation(line: 6274, column: 7, scope: !6651)
!6687 = !DILocation(line: 6276, column: 9, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6646, file: !1, line: 6276, column: 9)
!6689 = !DILocation(line: 6276, column: 15, scope: !6688)
!6690 = !DILocation(line: 6276, column: 21, scope: !6688)
!6691 = !DILocation(line: 6276, column: 27, scope: !6688)
!6692 = !DILocation(line: 6276, column: 19, scope: !6688)
!6693 = !DILocation(line: 6276, column: 35, scope: !6688)
!6694 = !DILocation(line: 6276, column: 41, scope: !6688)
!6695 = !DILocation(line: 6276, column: 53, scope: !6688)
!6696 = !DILocation(line: 6276, column: 33, scope: !6688)
!6697 = !DILocation(line: 6276, column: 9, scope: !6646)
!6698 = !DILocalVariable(name: "tem", scope: !6699, file: !1, line: 6277, type: !552)
!6699 = distinct !DILexicalBlock(scope: !6688, file: !1, line: 6276, column: 59)
!6700 = !DILocation(line: 6277, column: 14, scope: !6699)
!6701 = !DILocation(line: 6277, column: 20, scope: !6699)
!6702 = !DILocation(line: 6277, column: 26, scope: !6699)
!6703 = !DILocation(line: 6277, column: 38, scope: !6699)
!6704 = !DILocation(line: 6278, column: 32, scope: !6699)
!6705 = !DILocation(line: 6278, column: 38, scope: !6699)
!6706 = !DILocation(line: 6278, column: 7, scope: !6699)
!6707 = !DILocation(line: 6278, column: 13, scope: !6699)
!6708 = !DILocation(line: 6278, column: 25, scope: !6699)
!6709 = !DILocation(line: 6278, column: 30, scope: !6699)
!6710 = !DILocation(line: 6279, column: 22, scope: !6699)
!6711 = !DILocation(line: 6279, column: 28, scope: !6699)
!6712 = !DILocation(line: 6279, column: 7, scope: !6699)
!6713 = !DILocation(line: 6279, column: 13, scope: !6699)
!6714 = !DILocation(line: 6279, column: 20, scope: !6699)
!6715 = !DILocation(line: 6280, column: 26, scope: !6699)
!6716 = !DILocation(line: 6280, column: 7, scope: !6699)
!6717 = !DILocation(line: 6280, column: 13, scope: !6699)
!6718 = !DILocation(line: 6280, column: 24, scope: !6699)
!6719 = !DILocation(line: 6281, column: 14, scope: !6699)
!6720 = !DILocation(line: 6281, column: 20, scope: !6699)
!6721 = !DILocation(line: 6281, column: 28, scope: !6699)
!6722 = !DILocation(line: 6281, column: 7, scope: !6699)
!6723 = !DILocation(line: 6281, column: 31, scope: !6699)
!6724 = !DILocation(line: 6281, column: 37, scope: !6699)
!6725 = !DILocation(line: 6282, column: 15, scope: !6699)
!6726 = !DILocation(line: 6282, column: 21, scope: !6699)
!6727 = !DILocation(line: 6282, column: 27, scope: !6699)
!6728 = !DILocation(line: 6282, column: 33, scope: !6699)
!6729 = !DILocation(line: 6282, column: 25, scope: !6699)
!6730 = !DILocation(line: 6282, column: 40, scope: !6699)
!6731 = !DILocation(line: 6283, column: 19, scope: !6699)
!6732 = !DILocation(line: 6283, column: 25, scope: !6699)
!6733 = !DILocation(line: 6283, column: 33, scope: !6699)
!6734 = !DILocation(line: 6283, column: 38, scope: !6699)
!6735 = !DILocation(line: 6283, column: 44, scope: !6699)
!6736 = !DILocation(line: 6283, column: 50, scope: !6699)
!6737 = !DILocation(line: 6283, column: 56, scope: !6699)
!6738 = !DILocation(line: 6283, column: 48, scope: !6699)
!6739 = !DILocation(line: 6283, column: 35, scope: !6699)
!6740 = !DILocation(line: 6283, column: 7, scope: !6699)
!6741 = !DILocation(line: 6283, column: 13, scope: !6699)
!6742 = !DILocation(line: 6283, column: 17, scope: !6699)
!6743 = !DILocation(line: 6284, column: 21, scope: !6699)
!6744 = !DILocation(line: 6284, column: 27, scope: !6699)
!6745 = !DILocation(line: 6284, column: 35, scope: !6699)
!6746 = !DILocation(line: 6284, column: 7, scope: !6699)
!6747 = !DILocation(line: 6284, column: 13, scope: !6699)
!6748 = !DILocation(line: 6284, column: 19, scope: !6699)
!6749 = !DILocation(line: 6285, column: 19, scope: !6699)
!6750 = !DILocation(line: 6285, column: 25, scope: !6699)
!6751 = !DILocation(line: 6285, column: 33, scope: !6699)
!6752 = !DILocation(line: 6285, column: 39, scope: !6699)
!6753 = !DILocation(line: 6285, column: 47, scope: !6699)
!6754 = !DILocation(line: 6285, column: 31, scope: !6699)
!6755 = !DILocation(line: 6285, column: 7, scope: !6699)
!6756 = !DILocation(line: 6285, column: 13, scope: !6699)
!6757 = !DILocation(line: 6285, column: 17, scope: !6699)
!6758 = !DILocation(line: 6286, column: 7, scope: !6699)
!6759 = !DILocation(line: 6288, column: 3, scope: !6646)
!6760 = !DILocation(line: 6289, column: 7, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !944, file: !1, line: 6289, column: 7)
!6762 = !DILocation(line: 6289, column: 13, scope: !6761)
!6763 = !DILocation(line: 6289, column: 20, scope: !6761)
!6764 = !DILocation(line: 6289, column: 23, scope: !6765)
!6765 = !DILexicalBlockFile(scope: !6761, file: !1, discriminator: 1)
!6766 = !DILocation(line: 6289, column: 29, scope: !6765)
!6767 = !DILocation(line: 6289, column: 38, scope: !6765)
!6768 = !DILocation(line: 6289, column: 44, scope: !6765)
!6769 = !DILocation(line: 6289, column: 52, scope: !6765)
!6770 = !DILocation(line: 6289, column: 35, scope: !6765)
!6771 = !DILocation(line: 6289, column: 7, scope: !6765)
!6772 = !DILocalVariable(name: "temp", scope: !6773, file: !1, line: 6290, type: !552)
!6773 = distinct !DILexicalBlock(scope: !6761, file: !1, line: 6289, column: 55)
!6774 = !DILocation(line: 6290, column: 12, scope: !6773)
!6775 = !DILocalVariable(name: "blockSize", scope: !6773, file: !1, line: 6291, type: !223)
!6776 = !DILocation(line: 6291, column: 9, scope: !6773)
!6777 = !DILocation(line: 6291, column: 38, scope: !6773)
!6778 = !DILocation(line: 6291, column: 44, scope: !6773)
!6779 = !DILocation(line: 6291, column: 50, scope: !6773)
!6780 = !DILocation(line: 6291, column: 56, scope: !6773)
!6781 = !DILocation(line: 6291, column: 48, scope: !6773)
!6782 = !DILocation(line: 6291, column: 27, scope: !6773)
!6783 = !DILocation(line: 6291, column: 62, scope: !6773)
!6784 = !DILocation(line: 6293, column: 9, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 6293, column: 9)
!6786 = !DILocation(line: 6293, column: 19, scope: !6785)
!6787 = !DILocation(line: 6293, column: 9, scope: !6773)
!6788 = !DILocation(line: 6294, column: 7, scope: !6785)
!6789 = !DILocation(line: 6297, column: 7, scope: !6773)
!6790 = !DILocation(line: 6297, column: 13, scope: !6773)
!6791 = !DILocation(line: 6297, column: 18, scope: !6773)
!6792 = !DILocation(line: 6297, column: 30, scope: !6773)
!6793 = !DILocation(line: 6297, column: 36, scope: !6773)
!6794 = !DILocation(line: 6299, column: 33, scope: !6773)
!6795 = !DILocation(line: 6299, column: 43, scope: !6773)
!6796 = !DILocation(line: 6299, column: 31, scope: !6773)
!6797 = !DILocation(line: 6296, column: 12, scope: !6773)
!6798 = !DILocation(line: 6296, column: 10, scope: !6773)
!6799 = !DILocation(line: 6300, column: 9, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 6300, column: 9)
!6801 = !DILocation(line: 6300, column: 14, scope: !6800)
!6802 = !DILocation(line: 6300, column: 9, scope: !6773)
!6803 = !DILocation(line: 6301, column: 7, scope: !6800)
!6804 = !DILocation(line: 6302, column: 20, scope: !6773)
!6805 = !DILocation(line: 6302, column: 5, scope: !6773)
!6806 = !DILocation(line: 6302, column: 11, scope: !6773)
!6807 = !DILocation(line: 6302, column: 18, scope: !6773)
!6808 = !DILocation(line: 6303, column: 26, scope: !6773)
!6809 = !DILocation(line: 6303, column: 5, scope: !6773)
!6810 = !DILocation(line: 6303, column: 11, scope: !6773)
!6811 = !DILocation(line: 6303, column: 19, scope: !6773)
!6812 = !DILocation(line: 6303, column: 24, scope: !6773)
!6813 = !DILocation(line: 6304, column: 17, scope: !6773)
!6814 = !DILocation(line: 6304, column: 23, scope: !6773)
!6815 = !DILocation(line: 6304, column: 31, scope: !6773)
!6816 = !DILocation(line: 6304, column: 36, scope: !6773)
!6817 = !DILocation(line: 6304, column: 42, scope: !6773)
!6818 = !DILocation(line: 6304, column: 48, scope: !6773)
!6819 = !DILocation(line: 6304, column: 54, scope: !6773)
!6820 = !DILocation(line: 6304, column: 46, scope: !6773)
!6821 = !DILocation(line: 6304, column: 33, scope: !6773)
!6822 = !DILocation(line: 6304, column: 5, scope: !6773)
!6823 = !DILocation(line: 6304, column: 11, scope: !6773)
!6824 = !DILocation(line: 6304, column: 15, scope: !6773)
!6825 = !DILocation(line: 6305, column: 19, scope: !6773)
!6826 = !DILocation(line: 6305, column: 25, scope: !6773)
!6827 = !DILocation(line: 6305, column: 33, scope: !6773)
!6828 = !DILocation(line: 6305, column: 5, scope: !6773)
!6829 = !DILocation(line: 6305, column: 11, scope: !6773)
!6830 = !DILocation(line: 6305, column: 17, scope: !6773)
!6831 = !DILocation(line: 6306, column: 17, scope: !6773)
!6832 = !DILocation(line: 6306, column: 23, scope: !6773)
!6833 = !DILocation(line: 6306, column: 31, scope: !6773)
!6834 = !DILocation(line: 6306, column: 29, scope: !6773)
!6835 = !DILocation(line: 6306, column: 5, scope: !6773)
!6836 = !DILocation(line: 6306, column: 11, scope: !6773)
!6837 = !DILocation(line: 6306, column: 15, scope: !6773)
!6838 = !DILocation(line: 6307, column: 3, scope: !6773)
!6839 = !DILocalVariable(name: "tem", scope: !6840, file: !1, line: 6309, type: !552)
!6840 = distinct !DILexicalBlock(scope: !6761, file: !1, line: 6308, column: 8)
!6841 = !DILocation(line: 6309, column: 12, scope: !6840)
!6842 = !DILocalVariable(name: "blockSize", scope: !6840, file: !1, line: 6310, type: !223)
!6843 = !DILocation(line: 6310, column: 9, scope: !6840)
!6844 = !DILocation(line: 6310, column: 27, scope: !6840)
!6845 = !DILocation(line: 6310, column: 33, scope: !6840)
!6846 = !DILocation(line: 6310, column: 39, scope: !6840)
!6847 = !DILocation(line: 6310, column: 45, scope: !6840)
!6848 = !DILocation(line: 6310, column: 37, scope: !6840)
!6849 = !DILocation(line: 6310, column: 21, scope: !6840)
!6850 = !DILocation(line: 6312, column: 9, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 6312, column: 9)
!6852 = !DILocation(line: 6312, column: 19, scope: !6851)
!6853 = !DILocation(line: 6312, column: 9, scope: !6840)
!6854 = !DILocation(line: 6313, column: 7, scope: !6851)
!6855 = !DILocation(line: 6315, column: 9, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 6315, column: 9)
!6857 = !DILocation(line: 6315, column: 19, scope: !6856)
!6858 = !DILocation(line: 6315, column: 9, scope: !6840)
!6859 = !DILocation(line: 6316, column: 17, scope: !6856)
!6860 = !DILocation(line: 6316, column: 7, scope: !6856)
!6861 = !DILocation(line: 6318, column: 17, scope: !6856)
!6862 = !DILocation(line: 6319, column: 20, scope: !6840)
!6863 = !DILocation(line: 6319, column: 26, scope: !6840)
!6864 = !DILocation(line: 6319, column: 31, scope: !6840)
!6865 = !DILocation(line: 6320, column: 43, scope: !6840)
!6866 = !DILocation(line: 6320, column: 53, scope: !6840)
!6867 = !DILocation(line: 6320, column: 41, scope: !6840)
!6868 = !DILocation(line: 6319, column: 11, scope: !6840)
!6869 = !DILocation(line: 6319, column: 9, scope: !6840)
!6870 = !DILocation(line: 6321, column: 10, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 6321, column: 9)
!6872 = !DILocation(line: 6321, column: 9, scope: !6840)
!6873 = !DILocation(line: 6322, column: 7, scope: !6871)
!6874 = !DILocation(line: 6323, column: 17, scope: !6840)
!6875 = !DILocation(line: 6323, column: 5, scope: !6840)
!6876 = !DILocation(line: 6323, column: 10, scope: !6840)
!6877 = !DILocation(line: 6323, column: 15, scope: !6840)
!6878 = !DILocation(line: 6324, column: 17, scope: !6840)
!6879 = !DILocation(line: 6324, column: 23, scope: !6840)
!6880 = !DILocation(line: 6324, column: 5, scope: !6840)
!6881 = !DILocation(line: 6324, column: 10, scope: !6840)
!6882 = !DILocation(line: 6324, column: 15, scope: !6840)
!6883 = !DILocation(line: 6325, column: 20, scope: !6840)
!6884 = !DILocation(line: 6325, column: 5, scope: !6840)
!6885 = !DILocation(line: 6325, column: 11, scope: !6840)
!6886 = !DILocation(line: 6325, column: 18, scope: !6840)
!6887 = !DILocation(line: 6326, column: 9, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 6326, column: 9)
!6889 = !DILocation(line: 6326, column: 15, scope: !6888)
!6890 = !DILocation(line: 6326, column: 22, scope: !6888)
!6891 = !DILocation(line: 6326, column: 28, scope: !6888)
!6892 = !DILocation(line: 6326, column: 19, scope: !6888)
!6893 = !DILocation(line: 6326, column: 9, scope: !6840)
!6894 = !DILocation(line: 6327, column: 14, scope: !6888)
!6895 = !DILocation(line: 6327, column: 19, scope: !6888)
!6896 = !DILocation(line: 6327, column: 7, scope: !6888)
!6897 = !DILocation(line: 6327, column: 22, scope: !6888)
!6898 = !DILocation(line: 6327, column: 28, scope: !6888)
!6899 = !DILocation(line: 6328, column: 15, scope: !6888)
!6900 = !DILocation(line: 6328, column: 21, scope: !6888)
!6901 = !DILocation(line: 6328, column: 27, scope: !6888)
!6902 = !DILocation(line: 6328, column: 33, scope: !6888)
!6903 = !DILocation(line: 6328, column: 25, scope: !6888)
!6904 = !DILocation(line: 6328, column: 40, scope: !6888)
!6905 = !DILocation(line: 6329, column: 17, scope: !6840)
!6906 = !DILocation(line: 6329, column: 22, scope: !6840)
!6907 = !DILocation(line: 6329, column: 27, scope: !6840)
!6908 = !DILocation(line: 6329, column: 33, scope: !6840)
!6909 = !DILocation(line: 6329, column: 39, scope: !6840)
!6910 = !DILocation(line: 6329, column: 45, scope: !6840)
!6911 = !DILocation(line: 6329, column: 37, scope: !6840)
!6912 = !DILocation(line: 6329, column: 24, scope: !6840)
!6913 = !DILocation(line: 6329, column: 5, scope: !6840)
!6914 = !DILocation(line: 6329, column: 11, scope: !6840)
!6915 = !DILocation(line: 6329, column: 15, scope: !6840)
!6916 = !DILocation(line: 6330, column: 19, scope: !6840)
!6917 = !DILocation(line: 6330, column: 24, scope: !6840)
!6918 = !DILocation(line: 6330, column: 5, scope: !6840)
!6919 = !DILocation(line: 6330, column: 11, scope: !6840)
!6920 = !DILocation(line: 6330, column: 17, scope: !6840)
!6921 = !DILocation(line: 6331, column: 17, scope: !6840)
!6922 = !DILocation(line: 6331, column: 22, scope: !6840)
!6923 = !DILocation(line: 6331, column: 26, scope: !6840)
!6924 = !DILocation(line: 6331, column: 24, scope: !6840)
!6925 = !DILocation(line: 6331, column: 5, scope: !6840)
!6926 = !DILocation(line: 6331, column: 11, scope: !6840)
!6927 = !DILocation(line: 6331, column: 15, scope: !6840)
!6928 = !DILocation(line: 6333, column: 3, scope: !944)
!6929 = !DILocation(line: 6334, column: 1, scope: !944)
!6930 = !DILocalVariable(name: "parser", arg: 1, scope: !947, file: !1, line: 4973, type: !162)
!6931 = !DILocation(line: 4973, column: 32, scope: !947)
!6932 = !DILocalVariable(name: "enc", arg: 2, scope: !947, file: !1, line: 4973, type: !321)
!6933 = !DILocation(line: 4973, column: 56, scope: !947)
!6934 = !DILocalVariable(name: "isCdata", arg: 3, scope: !947, file: !1, line: 4973, type: !159)
!6935 = !DILocation(line: 4973, column: 70, scope: !947)
!6936 = !DILocalVariable(name: "ptr", arg: 4, scope: !947, file: !1, line: 4974, type: !192)
!6937 = !DILocation(line: 4974, column: 33, scope: !947)
!6938 = !DILocalVariable(name: "end", arg: 5, scope: !947, file: !1, line: 4974, type: !192)
!6939 = !DILocation(line: 4974, column: 50, scope: !947)
!6940 = !DILocalVariable(name: "pool", arg: 6, scope: !947, file: !1, line: 4975, type: !863)
!6941 = !DILocation(line: 4975, column: 34, scope: !947)
!6942 = !DILocalVariable(name: "result", scope: !947, file: !1, line: 4977, type: !24)
!6943 = !DILocation(line: 4977, column: 18, scope: !947)
!6944 = !DILocation(line: 4977, column: 48, scope: !947)
!6945 = !DILocation(line: 4977, column: 56, scope: !947)
!6946 = !DILocation(line: 4977, column: 61, scope: !947)
!6947 = !DILocation(line: 4977, column: 70, scope: !947)
!6948 = !DILocation(line: 4978, column: 48, scope: !947)
!6949 = !DILocation(line: 4978, column: 53, scope: !947)
!6950 = !DILocation(line: 4977, column: 27, scope: !947)
!6951 = !DILocation(line: 4979, column: 7, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !947, file: !1, line: 4979, column: 7)
!6953 = !DILocation(line: 4979, column: 7, scope: !947)
!6954 = !DILocation(line: 4980, column: 12, scope: !6952)
!6955 = !DILocation(line: 4980, column: 5, scope: !6952)
!6956 = !DILocation(line: 4981, column: 8, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !947, file: !1, line: 4981, column: 7)
!6958 = !DILocation(line: 4981, column: 16, scope: !6957)
!6959 = !DILocation(line: 4981, column: 19, scope: !6960)
!6960 = !DILexicalBlockFile(scope: !6957, file: !1, discriminator: 1)
!6961 = !DILocation(line: 4981, column: 36, scope: !6960)
!6962 = !DILocation(line: 4981, column: 39, scope: !6963)
!6963 = !DILexicalBlockFile(scope: !6957, file: !1, discriminator: 2)
!6964 = !DILocation(line: 4981, column: 58, scope: !6963)
!6965 = !DILocation(line: 4981, column: 7, scope: !6963)
!6966 = !DILocation(line: 4982, column: 5, scope: !6957)
!6967 = !DILocation(line: 4983, column: 8, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !947, file: !1, line: 4983, column: 7)
!6969 = !DILocation(line: 4983, column: 8, scope: !6970)
!6970 = !DILexicalBlockFile(scope: !6968, file: !1, discriminator: 1)
!6971 = !DILocation(line: 4983, column: 7, scope: !6970)
!6972 = !DILocation(line: 4983, column: 8, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6968, file: !1, discriminator: 2)
!6974 = !DILocation(line: 4983, column: 8, scope: !6975)
!6975 = !DILexicalBlockFile(scope: !6968, file: !1, discriminator: 3)
!6976 = !DILocation(line: 4983, column: 7, scope: !6975)
!6977 = !DILocation(line: 4984, column: 5, scope: !6968)
!6978 = !DILocation(line: 4985, column: 3, scope: !947)
!6979 = !DILocation(line: 4986, column: 1, scope: !947)
!6980 = !DILocalVariable(name: "parser", arg: 1, scope: !951, file: !1, line: 5139, type: !162)
!6981 = !DILocation(line: 5139, column: 29, scope: !951)
!6982 = !DILocalVariable(name: "enc", arg: 2, scope: !951, file: !1, line: 5140, type: !321)
!6983 = !DILocation(line: 5140, column: 34, scope: !951)
!6984 = !DILocalVariable(name: "entityTextPtr", arg: 3, scope: !951, file: !1, line: 5141, type: !192)
!6985 = !DILocation(line: 5141, column: 30, scope: !951)
!6986 = !DILocalVariable(name: "entityTextEnd", arg: 4, scope: !951, file: !1, line: 5142, type: !192)
!6987 = !DILocation(line: 5142, column: 30, scope: !951)
!6988 = !DILocalVariable(name: "dtd", scope: !951, file: !1, line: 5144, type: !2386)
!6989 = !DILocation(line: 5144, column: 15, scope: !951)
!6990 = !DILocation(line: 5144, column: 21, scope: !951)
!6991 = !DILocalVariable(name: "pool", scope: !951, file: !1, line: 5145, type: !863)
!6992 = !DILocation(line: 5145, column: 16, scope: !951)
!6993 = !DILocation(line: 5145, column: 25, scope: !951)
!6994 = !DILocation(line: 5145, column: 30, scope: !951)
!6995 = !DILocalVariable(name: "result", scope: !951, file: !1, line: 5146, type: !24)
!6996 = !DILocation(line: 5146, column: 18, scope: !951)
!6997 = !DILocation(line: 5154, column: 8, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !951, file: !1, line: 5154, column: 7)
!6999 = !DILocation(line: 5154, column: 14, scope: !6998)
!7000 = !DILocation(line: 5154, column: 7, scope: !951)
!7001 = !DILocation(line: 5155, column: 19, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !1, line: 5155, column: 9)
!7003 = distinct !DILexicalBlock(scope: !6998, file: !1, line: 5154, column: 22)
!7004 = !DILocation(line: 5155, column: 10, scope: !7002)
!7005 = !DILocation(line: 5155, column: 9, scope: !7003)
!7006 = !DILocation(line: 5156, column: 7, scope: !7002)
!7007 = !DILocation(line: 5157, column: 3, scope: !7003)
!7008 = !DILocation(line: 5159, column: 3, scope: !951)
!7009 = !DILocalVariable(name: "next", scope: !7010, file: !1, line: 5160, type: !192)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !1, line: 5159, column: 12)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !1, line: 5159, column: 3)
!7012 = distinct !DILexicalBlock(scope: !951, file: !1, line: 5159, column: 3)
!7013 = !DILocation(line: 5160, column: 17, scope: !7010)
!7014 = !DILocalVariable(name: "tok", scope: !7010, file: !1, line: 5161, type: !223)
!7015 = !DILocation(line: 5161, column: 9, scope: !7010)
!7016 = !DILocation(line: 5161, column: 15, scope: !7010)
!7017 = !DILocation(line: 5162, column: 13, scope: !7010)
!7018 = !DILocation(line: 5162, column: 5, scope: !7010)
!7019 = !DILocation(line: 5229, column: 18, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7010, file: !1, line: 5162, column: 18)
!7021 = !DILocation(line: 5229, column: 7, scope: !7020)
!7022 = !DILocation(line: 5229, column: 16, scope: !7020)
!7023 = !DILocation(line: 5230, column: 14, scope: !7020)
!7024 = !DILocation(line: 5231, column: 7, scope: !7020)
!7025 = !DILocation(line: 5233, column: 14, scope: !7020)
!7026 = !DILocation(line: 5234, column: 7, scope: !7020)
!7027 = !DILocation(line: 5237, column: 23, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 5237, column: 11)
!7029 = !DILocation(line: 5237, column: 29, scope: !7028)
!7030 = !DILocation(line: 5237, column: 34, scope: !7028)
!7031 = !DILocation(line: 5237, column: 49, scope: !7028)
!7032 = !DILocation(line: 5237, column: 12, scope: !7028)
!7033 = !DILocation(line: 5237, column: 11, scope: !7020)
!7034 = !DILocation(line: 5238, column: 16, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7028, file: !1, line: 5237, column: 56)
!7036 = !DILocation(line: 5239, column: 9, scope: !7035)
!7037 = !DILocation(line: 5241, column: 7, scope: !7020)
!7038 = !DILocation(line: 5243, column: 14, scope: !7020)
!7039 = !DILocation(line: 5243, column: 30, scope: !7020)
!7040 = !DILocation(line: 5243, column: 35, scope: !7020)
!7041 = !DILocation(line: 5243, column: 28, scope: !7020)
!7042 = !DILocation(line: 5243, column: 12, scope: !7020)
!7043 = !DILocation(line: 5243, column: 7, scope: !7020)
!7044 = !DILocation(line: 5246, column: 11, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 5246, column: 11)
!7046 = !DILocation(line: 5246, column: 17, scope: !7045)
!7047 = !DILocation(line: 5246, column: 24, scope: !7045)
!7048 = !DILocation(line: 5246, column: 30, scope: !7045)
!7049 = !DILocation(line: 5246, column: 21, scope: !7045)
!7050 = !DILocation(line: 5246, column: 34, scope: !7045)
!7051 = !DILocation(line: 5246, column: 47, scope: !7052)
!7052 = !DILexicalBlockFile(scope: !7045, file: !1, discriminator: 1)
!7053 = !DILocation(line: 5246, column: 38, scope: !7052)
!7054 = !DILocation(line: 5246, column: 11, scope: !7052)
!7055 = !DILocation(line: 5247, column: 22, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7045, file: !1, line: 5246, column: 54)
!7057 = !DILocation(line: 5248, column: 9, scope: !7056)
!7058 = !DILocation(line: 5250, column: 9, scope: !7020)
!7059 = !DILocation(line: 5250, column: 15, scope: !7020)
!7060 = !DILocation(line: 5250, column: 19, scope: !7020)
!7061 = !DILocation(line: 5250, column: 22, scope: !7020)
!7062 = !DILocation(line: 5251, column: 7, scope: !7020)
!7063 = !DILocalVariable(name: "buf", scope: !7064, file: !1, line: 5254, type: !7065)
!7064 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 5253, column: 7)
!7065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 32, align: 8, elements: !1029)
!7066 = !DILocation(line: 5254, column: 18, scope: !7064)
!7067 = !DILocalVariable(name: "i", scope: !7064, file: !1, line: 5255, type: !223)
!7068 = !DILocation(line: 5255, column: 13, scope: !7064)
!7069 = !DILocalVariable(name: "n", scope: !7064, file: !1, line: 5256, type: !223)
!7070 = !DILocation(line: 5256, column: 13, scope: !7064)
!7071 = !DILocation(line: 5256, column: 17, scope: !7064)
!7072 = !DILocation(line: 5257, column: 13, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7064, file: !1, line: 5257, column: 13)
!7074 = !DILocation(line: 5257, column: 15, scope: !7073)
!7075 = !DILocation(line: 5257, column: 13, scope: !7064)
!7076 = !DILocation(line: 5258, column: 15, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 5258, column: 15)
!7078 = distinct !DILexicalBlock(scope: !7073, file: !1, line: 5257, column: 20)
!7079 = !DILocation(line: 5258, column: 22, scope: !7077)
!7080 = !DILocation(line: 5258, column: 19, scope: !7077)
!7081 = !DILocation(line: 5258, column: 15, scope: !7078)
!7082 = !DILocation(line: 5259, column: 24, scope: !7077)
!7083 = !DILocation(line: 5259, column: 13, scope: !7077)
!7084 = !DILocation(line: 5259, column: 22, scope: !7077)
!7085 = !DILocation(line: 5260, column: 18, scope: !7078)
!7086 = !DILocation(line: 5261, column: 11, scope: !7078)
!7087 = !DILocation(line: 5263, column: 23, scope: !7064)
!7088 = !DILocation(line: 5263, column: 35, scope: !7064)
!7089 = !DILocation(line: 5263, column: 13, scope: !7064)
!7090 = !DILocation(line: 5263, column: 11, scope: !7064)
!7091 = !DILocation(line: 5264, column: 14, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7064, file: !1, line: 5264, column: 13)
!7093 = !DILocation(line: 5264, column: 13, scope: !7064)
!7094 = !DILocation(line: 5265, column: 15, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !1, line: 5265, column: 15)
!7096 = distinct !DILexicalBlock(scope: !7092, file: !1, line: 5264, column: 17)
!7097 = !DILocation(line: 5265, column: 22, scope: !7095)
!7098 = !DILocation(line: 5265, column: 19, scope: !7095)
!7099 = !DILocation(line: 5265, column: 15, scope: !7096)
!7100 = !DILocation(line: 5266, column: 24, scope: !7095)
!7101 = !DILocation(line: 5266, column: 13, scope: !7095)
!7102 = !DILocation(line: 5266, column: 22, scope: !7095)
!7103 = !DILocation(line: 5267, column: 18, scope: !7096)
!7104 = !DILocation(line: 5268, column: 11, scope: !7096)
!7105 = !DILocation(line: 5270, column: 16, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7064, file: !1, line: 5270, column: 9)
!7107 = !DILocation(line: 5270, column: 14, scope: !7106)
!7108 = !DILocation(line: 5270, column: 21, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !7110, file: !1, discriminator: 1)
!7110 = distinct !DILexicalBlock(scope: !7106, file: !1, line: 5270, column: 9)
!7111 = !DILocation(line: 5270, column: 25, scope: !7109)
!7112 = !DILocation(line: 5270, column: 23, scope: !7109)
!7113 = !DILocation(line: 5270, column: 9, scope: !7109)
!7114 = !DILocation(line: 5271, column: 15, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !1, line: 5271, column: 15)
!7116 = distinct !DILexicalBlock(scope: !7110, file: !1, line: 5270, column: 33)
!7117 = !DILocation(line: 5271, column: 21, scope: !7115)
!7118 = !DILocation(line: 5271, column: 28, scope: !7115)
!7119 = !DILocation(line: 5271, column: 34, scope: !7115)
!7120 = !DILocation(line: 5271, column: 25, scope: !7115)
!7121 = !DILocation(line: 5271, column: 38, scope: !7115)
!7122 = !DILocation(line: 5271, column: 51, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !7115, file: !1, discriminator: 1)
!7124 = !DILocation(line: 5271, column: 42, scope: !7123)
!7125 = !DILocation(line: 5271, column: 15, scope: !7123)
!7126 = !DILocation(line: 5272, column: 20, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7115, file: !1, line: 5271, column: 58)
!7128 = !DILocation(line: 5273, column: 13, scope: !7127)
!7129 = !DILocation(line: 5275, column: 32, scope: !7116)
!7130 = !DILocation(line: 5275, column: 28, scope: !7116)
!7131 = !DILocation(line: 5275, column: 13, scope: !7116)
!7132 = !DILocation(line: 5275, column: 19, scope: !7116)
!7133 = !DILocation(line: 5275, column: 23, scope: !7116)
!7134 = !DILocation(line: 5275, column: 26, scope: !7116)
!7135 = !DILocation(line: 5276, column: 9, scope: !7116)
!7136 = !DILocation(line: 5270, column: 29, scope: !7137)
!7137 = !DILexicalBlockFile(scope: !7110, file: !1, discriminator: 2)
!7138 = !DILocation(line: 5270, column: 9, scope: !7137)
!7139 = !DILocation(line: 5278, column: 7, scope: !7020)
!7140 = !DILocation(line: 5280, column: 11, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 5280, column: 11)
!7142 = !DILocation(line: 5280, column: 18, scope: !7141)
!7143 = !DILocation(line: 5280, column: 15, scope: !7141)
!7144 = !DILocation(line: 5280, column: 11, scope: !7020)
!7145 = !DILocation(line: 5281, column: 20, scope: !7141)
!7146 = !DILocation(line: 5281, column: 9, scope: !7141)
!7147 = !DILocation(line: 5281, column: 18, scope: !7141)
!7148 = !DILocation(line: 5282, column: 14, scope: !7020)
!7149 = !DILocation(line: 5283, column: 7, scope: !7020)
!7150 = !DILocation(line: 5285, column: 11, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 5285, column: 11)
!7152 = !DILocation(line: 5285, column: 18, scope: !7151)
!7153 = !DILocation(line: 5285, column: 15, scope: !7151)
!7154 = !DILocation(line: 5285, column: 11, scope: !7020)
!7155 = !DILocation(line: 5286, column: 20, scope: !7151)
!7156 = !DILocation(line: 5286, column: 9, scope: !7151)
!7157 = !DILocation(line: 5286, column: 18, scope: !7151)
!7158 = !DILocation(line: 5287, column: 14, scope: !7020)
!7159 = !DILocation(line: 5288, column: 7, scope: !7020)
!7160 = !DILocation(line: 5290, column: 11, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 5290, column: 11)
!7162 = !DILocation(line: 5290, column: 18, scope: !7161)
!7163 = !DILocation(line: 5290, column: 15, scope: !7161)
!7164 = !DILocation(line: 5290, column: 11, scope: !7020)
!7165 = !DILocation(line: 5291, column: 20, scope: !7161)
!7166 = !DILocation(line: 5291, column: 9, scope: !7161)
!7167 = !DILocation(line: 5291, column: 18, scope: !7161)
!7168 = !DILocation(line: 5292, column: 14, scope: !7020)
!7169 = !DILocation(line: 5293, column: 7, scope: !7020)
!7170 = !DILocation(line: 5295, column: 21, scope: !7010)
!7171 = !DILocation(line: 5295, column: 19, scope: !7010)
!7172 = !DILocation(line: 5159, column: 3, scope: !7173)
!7173 = !DILexicalBlockFile(scope: !7011, file: !1, discriminator: 1)
!7174 = !DILocation(line: 5301, column: 10, scope: !951)
!7175 = !DILocation(line: 5301, column: 3, scope: !951)
!7176 = !DILocation(line: 5302, column: 1, scope: !951)
!7177 = !DILocalVariable(name: "parser", arg: 1, scope: !954, file: !1, line: 6024, type: !162)
!7178 = !DILocation(line: 6024, column: 19, scope: !954)
!7179 = !DILocalVariable(name: "table", arg: 2, scope: !954, file: !1, line: 6024, type: !859)
!7180 = !DILocation(line: 6024, column: 39, scope: !954)
!7181 = !DILocalVariable(name: "name", arg: 3, scope: !954, file: !1, line: 6024, type: !538)
!7182 = !DILocation(line: 6024, column: 50, scope: !954)
!7183 = !DILocalVariable(name: "createSize", arg: 4, scope: !954, file: !1, line: 6024, type: !180)
!7184 = !DILocation(line: 6024, column: 63, scope: !954)
!7185 = !DILocalVariable(name: "i", scope: !954, file: !1, line: 6026, type: !180)
!7186 = !DILocation(line: 6026, column: 10, scope: !954)
!7187 = !DILocation(line: 6027, column: 7, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !954, file: !1, line: 6027, column: 7)
!7189 = !DILocation(line: 6027, column: 14, scope: !7188)
!7190 = !DILocation(line: 6027, column: 19, scope: !7188)
!7191 = !DILocation(line: 6027, column: 7, scope: !954)
!7192 = !DILocalVariable(name: "tsize", scope: !7193, file: !1, line: 6028, type: !180)
!7193 = distinct !DILexicalBlock(scope: !7188, file: !1, line: 6027, column: 25)
!7194 = !DILocation(line: 6028, column: 12, scope: !7193)
!7195 = !DILocation(line: 6029, column: 10, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !1, line: 6029, column: 9)
!7197 = !DILocation(line: 6029, column: 9, scope: !7193)
!7198 = !DILocation(line: 6030, column: 7, scope: !7196)
!7199 = !DILocation(line: 6031, column: 5, scope: !7193)
!7200 = !DILocation(line: 6031, column: 12, scope: !7193)
!7201 = !DILocation(line: 6031, column: 18, scope: !7193)
!7202 = !DILocation(line: 6033, column: 5, scope: !7193)
!7203 = !DILocation(line: 6033, column: 12, scope: !7193)
!7204 = !DILocation(line: 6033, column: 17, scope: !7193)
!7205 = !DILocation(line: 6034, column: 13, scope: !7193)
!7206 = !DILocation(line: 6034, column: 20, scope: !7193)
!7207 = !DILocation(line: 6034, column: 25, scope: !7193)
!7208 = !DILocation(line: 6034, column: 11, scope: !7193)
!7209 = !DILocation(line: 6035, column: 26, scope: !7193)
!7210 = !DILocation(line: 6035, column: 33, scope: !7193)
!7211 = !DILocation(line: 6035, column: 38, scope: !7193)
!7212 = !DILocation(line: 6035, column: 49, scope: !7193)
!7213 = !DILocation(line: 6035, column: 16, scope: !7193)
!7214 = !DILocation(line: 6035, column: 5, scope: !7193)
!7215 = !DILocation(line: 6035, column: 12, scope: !7193)
!7216 = !DILocation(line: 6035, column: 14, scope: !7193)
!7217 = !DILocation(line: 6036, column: 10, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7193, file: !1, line: 6036, column: 9)
!7219 = !DILocation(line: 6036, column: 17, scope: !7218)
!7220 = !DILocation(line: 6036, column: 9, scope: !7193)
!7221 = !DILocation(line: 6037, column: 7, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 6036, column: 20)
!7223 = !DILocation(line: 6037, column: 14, scope: !7222)
!7224 = !DILocation(line: 6037, column: 19, scope: !7222)
!7225 = !DILocation(line: 6038, column: 7, scope: !7222)
!7226 = !DILocation(line: 6040, column: 12, scope: !7193)
!7227 = !DILocation(line: 6040, column: 19, scope: !7193)
!7228 = !DILocation(line: 6040, column: 5, scope: !7193)
!7229 = !DILocation(line: 6040, column: 25, scope: !7193)
!7230 = !DILocation(line: 6041, column: 14, scope: !7193)
!7231 = !DILocation(line: 6041, column: 22, scope: !7193)
!7232 = !DILocation(line: 6041, column: 9, scope: !7193)
!7233 = !DILocation(line: 6041, column: 46, scope: !7193)
!7234 = !DILocation(line: 6041, column: 53, scope: !7193)
!7235 = !DILocation(line: 6041, column: 58, scope: !7193)
!7236 = !DILocation(line: 6041, column: 28, scope: !7193)
!7237 = !DILocation(line: 6041, column: 7, scope: !7193)
!7238 = !DILocation(line: 6042, column: 3, scope: !7193)
!7239 = !DILocalVariable(name: "h", scope: !7240, file: !1, line: 6044, type: !182)
!7240 = distinct !DILexicalBlock(scope: !7188, file: !1, line: 6043, column: 8)
!7241 = !DILocation(line: 6044, column: 19, scope: !7240)
!7242 = !DILocation(line: 6044, column: 28, scope: !7240)
!7243 = !DILocation(line: 6044, column: 36, scope: !7240)
!7244 = !DILocation(line: 6044, column: 23, scope: !7240)
!7245 = !DILocalVariable(name: "mask", scope: !7240, file: !1, line: 6045, type: !182)
!7246 = !DILocation(line: 6045, column: 19, scope: !7240)
!7247 = !DILocation(line: 6045, column: 41, scope: !7240)
!7248 = !DILocation(line: 6045, column: 48, scope: !7240)
!7249 = !DILocation(line: 6045, column: 53, scope: !7240)
!7250 = !DILocalVariable(name: "step", scope: !7240, file: !1, line: 6046, type: !160)
!7251 = !DILocation(line: 6046, column: 19, scope: !7240)
!7252 = !DILocation(line: 6047, column: 9, scope: !7240)
!7253 = !DILocation(line: 6047, column: 13, scope: !7240)
!7254 = !DILocation(line: 6047, column: 11, scope: !7240)
!7255 = !DILocation(line: 6047, column: 7, scope: !7240)
!7256 = !DILocation(line: 6048, column: 5, scope: !7240)
!7257 = !DILocation(line: 6048, column: 21, scope: !7258)
!7258 = !DILexicalBlockFile(scope: !7240, file: !1, discriminator: 1)
!7259 = !DILocation(line: 6048, column: 12, scope: !7258)
!7260 = !DILocation(line: 6048, column: 19, scope: !7258)
!7261 = !DILocation(line: 6048, column: 5, scope: !7258)
!7262 = !DILocation(line: 6049, column: 17, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !1, line: 6049, column: 11)
!7264 = distinct !DILexicalBlock(scope: !7240, file: !1, line: 6048, column: 25)
!7265 = !DILocation(line: 6049, column: 32, scope: !7263)
!7266 = !DILocation(line: 6049, column: 23, scope: !7263)
!7267 = !DILocation(line: 6049, column: 30, scope: !7263)
!7268 = !DILocation(line: 6049, column: 36, scope: !7263)
!7269 = !DILocation(line: 6049, column: 11, scope: !7263)
!7270 = !DILocation(line: 6049, column: 11, scope: !7264)
!7271 = !DILocation(line: 6050, column: 25, scope: !7263)
!7272 = !DILocation(line: 6050, column: 16, scope: !7263)
!7273 = !DILocation(line: 6050, column: 23, scope: !7263)
!7274 = !DILocation(line: 6050, column: 9, scope: !7263)
!7275 = !DILocation(line: 6051, column: 12, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7264, file: !1, line: 6051, column: 11)
!7277 = !DILocation(line: 6051, column: 11, scope: !7264)
!7278 = !DILocation(line: 6052, column: 16, scope: !7276)
!7279 = !DILocation(line: 6052, column: 14, scope: !7276)
!7280 = !DILocation(line: 6052, column: 9, scope: !7276)
!7281 = !DILocation(line: 6053, column: 7, scope: !7264)
!7282 = !DILocation(line: 6053, column: 11, scope: !7264)
!7283 = !DILocation(line: 6053, column: 9, scope: !7264)
!7284 = !DILocation(line: 6053, column: 24, scope: !7285)
!7285 = !DILexicalBlockFile(scope: !7264, file: !1, discriminator: 1)
!7286 = !DILocation(line: 6053, column: 31, scope: !7285)
!7287 = !DILocation(line: 6053, column: 38, scope: !7285)
!7288 = !DILocation(line: 6053, column: 36, scope: !7285)
!7289 = !DILocation(line: 6053, column: 21, scope: !7285)
!7290 = !DILocation(line: 6053, column: 7, scope: !7285)
!7291 = !DILocation(line: 6053, column: 52, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7264, file: !1, discriminator: 2)
!7293 = !DILocation(line: 6053, column: 49, scope: !7292)
!7294 = !DILocation(line: 6053, column: 7, scope: !7292)
!7295 = !DILocation(line: 6053, column: 7, scope: !7296)
!7296 = !DILexicalBlockFile(scope: !7264, file: !1, discriminator: 3)
!7297 = !DILocation(line: 6048, column: 5, scope: !7298)
!7298 = !DILexicalBlockFile(scope: !7240, file: !1, discriminator: 2)
!7299 = !DILocation(line: 6055, column: 10, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7240, file: !1, line: 6055, column: 9)
!7301 = !DILocation(line: 6055, column: 9, scope: !7240)
!7302 = !DILocation(line: 6056, column: 7, scope: !7300)
!7303 = !DILocation(line: 6059, column: 9, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7240, file: !1, line: 6059, column: 9)
!7305 = !DILocation(line: 6059, column: 16, scope: !7304)
!7306 = !DILocation(line: 6059, column: 25, scope: !7304)
!7307 = !DILocation(line: 6059, column: 32, scope: !7304)
!7308 = !DILocation(line: 6059, column: 38, scope: !7304)
!7309 = !DILocation(line: 6059, column: 21, scope: !7304)
!7310 = !DILocation(line: 6059, column: 9, scope: !7240)
!7311 = !DILocalVariable(name: "newPower", scope: !7312, file: !1, line: 6060, type: !160)
!7312 = distinct !DILexicalBlock(scope: !7304, file: !1, line: 6059, column: 44)
!7313 = !DILocation(line: 6060, column: 21, scope: !7312)
!7314 = !DILocation(line: 6060, column: 32, scope: !7312)
!7315 = !DILocation(line: 6060, column: 39, scope: !7312)
!7316 = !DILocation(line: 6060, column: 45, scope: !7312)
!7317 = !DILocalVariable(name: "newSize", scope: !7312, file: !1, line: 6061, type: !180)
!7318 = !DILocation(line: 6061, column: 14, scope: !7312)
!7319 = !DILocation(line: 6061, column: 37, scope: !7312)
!7320 = !DILocation(line: 6061, column: 34, scope: !7312)
!7321 = !DILocalVariable(name: "newMask", scope: !7312, file: !1, line: 6062, type: !182)
!7322 = !DILocation(line: 6062, column: 21, scope: !7312)
!7323 = !DILocation(line: 6062, column: 46, scope: !7312)
!7324 = !DILocation(line: 6062, column: 54, scope: !7312)
!7325 = !DILocalVariable(name: "tsize", scope: !7312, file: !1, line: 6063, type: !180)
!7326 = !DILocation(line: 6063, column: 14, scope: !7312)
!7327 = !DILocation(line: 6063, column: 22, scope: !7312)
!7328 = !DILocation(line: 6063, column: 30, scope: !7312)
!7329 = !DILocalVariable(name: "newV", scope: !7312, file: !1, line: 6064, type: !532)
!7330 = !DILocation(line: 6064, column: 15, scope: !7312)
!7331 = !DILocation(line: 6064, column: 32, scope: !7312)
!7332 = !DILocation(line: 6064, column: 39, scope: !7312)
!7333 = !DILocation(line: 6064, column: 44, scope: !7312)
!7334 = !DILocation(line: 6064, column: 55, scope: !7312)
!7335 = !DILocation(line: 6064, column: 22, scope: !7312)
!7336 = !DILocation(line: 6065, column: 12, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 6065, column: 11)
!7338 = !DILocation(line: 6065, column: 11, scope: !7312)
!7339 = !DILocation(line: 6066, column: 9, scope: !7337)
!7340 = !DILocation(line: 6067, column: 14, scope: !7312)
!7341 = !DILocation(line: 6067, column: 7, scope: !7312)
!7342 = !DILocation(line: 6067, column: 23, scope: !7312)
!7343 = !DILocation(line: 6068, column: 14, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 6068, column: 7)
!7345 = !DILocation(line: 6068, column: 12, scope: !7344)
!7346 = !DILocation(line: 6068, column: 19, scope: !7347)
!7347 = !DILexicalBlockFile(scope: !7348, file: !1, discriminator: 1)
!7348 = distinct !DILexicalBlock(scope: !7344, file: !1, line: 6068, column: 7)
!7349 = !DILocation(line: 6068, column: 23, scope: !7347)
!7350 = !DILocation(line: 6068, column: 30, scope: !7347)
!7351 = !DILocation(line: 6068, column: 21, scope: !7347)
!7352 = !DILocation(line: 6068, column: 7, scope: !7347)
!7353 = !DILocation(line: 6069, column: 22, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 6069, column: 13)
!7355 = !DILocation(line: 6069, column: 13, scope: !7354)
!7356 = !DILocation(line: 6069, column: 20, scope: !7354)
!7357 = !DILocation(line: 6069, column: 13, scope: !7348)
!7358 = !DILocalVariable(name: "newHash", scope: !7359, file: !1, line: 6070, type: !182)
!7359 = distinct !DILexicalBlock(scope: !7354, file: !1, line: 6069, column: 26)
!7360 = !DILocation(line: 6070, column: 25, scope: !7359)
!7361 = !DILocation(line: 6070, column: 40, scope: !7359)
!7362 = !DILocation(line: 6070, column: 57, scope: !7359)
!7363 = !DILocation(line: 6070, column: 48, scope: !7359)
!7364 = !DILocation(line: 6070, column: 55, scope: !7359)
!7365 = !DILocation(line: 6070, column: 61, scope: !7359)
!7366 = !DILocation(line: 6070, column: 35, scope: !7359)
!7367 = !DILocalVariable(name: "j", scope: !7359, file: !1, line: 6071, type: !180)
!7368 = !DILocation(line: 6071, column: 18, scope: !7359)
!7369 = !DILocation(line: 6071, column: 22, scope: !7359)
!7370 = !DILocation(line: 6071, column: 32, scope: !7359)
!7371 = !DILocation(line: 6071, column: 30, scope: !7359)
!7372 = !DILocation(line: 6072, column: 16, scope: !7359)
!7373 = !DILocation(line: 6073, column: 11, scope: !7359)
!7374 = !DILocation(line: 6073, column: 23, scope: !7375)
!7375 = !DILexicalBlockFile(scope: !7359, file: !1, discriminator: 1)
!7376 = !DILocation(line: 6073, column: 18, scope: !7375)
!7377 = !DILocation(line: 6073, column: 11, scope: !7375)
!7378 = !DILocation(line: 6074, column: 18, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !1, line: 6074, column: 17)
!7380 = distinct !DILexicalBlock(scope: !7359, file: !1, line: 6073, column: 27)
!7381 = !DILocation(line: 6074, column: 17, scope: !7380)
!7382 = !DILocation(line: 6075, column: 22, scope: !7379)
!7383 = !DILocation(line: 6075, column: 20, scope: !7379)
!7384 = !DILocation(line: 6075, column: 15, scope: !7379)
!7385 = !DILocation(line: 6076, column: 13, scope: !7380)
!7386 = !DILocation(line: 6076, column: 17, scope: !7380)
!7387 = !DILocation(line: 6076, column: 15, scope: !7380)
!7388 = !DILocation(line: 6076, column: 30, scope: !7389)
!7389 = !DILexicalBlockFile(scope: !7380, file: !1, discriminator: 1)
!7390 = !DILocation(line: 6076, column: 40, scope: !7389)
!7391 = !DILocation(line: 6076, column: 38, scope: !7389)
!7392 = !DILocation(line: 6076, column: 27, scope: !7389)
!7393 = !DILocation(line: 6076, column: 13, scope: !7389)
!7394 = !DILocation(line: 6076, column: 54, scope: !7395)
!7395 = !DILexicalBlockFile(scope: !7380, file: !1, discriminator: 2)
!7396 = !DILocation(line: 6076, column: 51, scope: !7395)
!7397 = !DILocation(line: 6076, column: 13, scope: !7395)
!7398 = !DILocation(line: 6076, column: 13, scope: !7399)
!7399 = !DILexicalBlockFile(scope: !7380, file: !1, discriminator: 3)
!7400 = !DILocation(line: 6073, column: 11, scope: !7401)
!7401 = !DILexicalBlockFile(scope: !7359, file: !1, discriminator: 2)
!7402 = !DILocation(line: 6078, column: 30, scope: !7359)
!7403 = !DILocation(line: 6078, column: 21, scope: !7359)
!7404 = !DILocation(line: 6078, column: 28, scope: !7359)
!7405 = !DILocation(line: 6078, column: 16, scope: !7359)
!7406 = !DILocation(line: 6078, column: 11, scope: !7359)
!7407 = !DILocation(line: 6078, column: 19, scope: !7359)
!7408 = !DILocation(line: 6079, column: 9, scope: !7359)
!7409 = !DILocation(line: 6069, column: 23, scope: !7410)
!7410 = !DILexicalBlockFile(scope: !7354, file: !1, discriminator: 1)
!7411 = !DILocation(line: 6068, column: 37, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !7348, file: !1, discriminator: 2)
!7413 = !DILocation(line: 6068, column: 7, scope: !7412)
!7414 = !DILocation(line: 6080, column: 7, scope: !7312)
!7415 = !DILocation(line: 6080, column: 14, scope: !7312)
!7416 = !DILocation(line: 6080, column: 19, scope: !7312)
!7417 = !DILocation(line: 6080, column: 28, scope: !7312)
!7418 = !DILocation(line: 6080, column: 35, scope: !7312)
!7419 = !DILocation(line: 6081, column: 18, scope: !7312)
!7420 = !DILocation(line: 6081, column: 7, scope: !7312)
!7421 = !DILocation(line: 6081, column: 14, scope: !7312)
!7422 = !DILocation(line: 6081, column: 16, scope: !7312)
!7423 = !DILocation(line: 6082, column: 22, scope: !7312)
!7424 = !DILocation(line: 6082, column: 7, scope: !7312)
!7425 = !DILocation(line: 6082, column: 14, scope: !7312)
!7426 = !DILocation(line: 6082, column: 20, scope: !7312)
!7427 = !DILocation(line: 6083, column: 21, scope: !7312)
!7428 = !DILocation(line: 6083, column: 7, scope: !7312)
!7429 = !DILocation(line: 6083, column: 14, scope: !7312)
!7430 = !DILocation(line: 6083, column: 19, scope: !7312)
!7431 = !DILocation(line: 6084, column: 11, scope: !7312)
!7432 = !DILocation(line: 6084, column: 15, scope: !7312)
!7433 = !DILocation(line: 6084, column: 13, scope: !7312)
!7434 = !DILocation(line: 6084, column: 9, scope: !7312)
!7435 = !DILocation(line: 6085, column: 12, scope: !7312)
!7436 = !DILocation(line: 6086, column: 7, scope: !7312)
!7437 = !DILocation(line: 6086, column: 23, scope: !7438)
!7438 = !DILexicalBlockFile(scope: !7312, file: !1, discriminator: 1)
!7439 = !DILocation(line: 6086, column: 14, scope: !7438)
!7440 = !DILocation(line: 6086, column: 21, scope: !7438)
!7441 = !DILocation(line: 6086, column: 7, scope: !7438)
!7442 = !DILocation(line: 6087, column: 14, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7444, file: !1, line: 6087, column: 13)
!7444 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 6086, column: 27)
!7445 = !DILocation(line: 6087, column: 13, scope: !7444)
!7446 = !DILocation(line: 6088, column: 18, scope: !7443)
!7447 = !DILocation(line: 6088, column: 16, scope: !7443)
!7448 = !DILocation(line: 6088, column: 11, scope: !7443)
!7449 = !DILocation(line: 6089, column: 9, scope: !7444)
!7450 = !DILocation(line: 6089, column: 13, scope: !7444)
!7451 = !DILocation(line: 6089, column: 11, scope: !7444)
!7452 = !DILocation(line: 6089, column: 26, scope: !7453)
!7453 = !DILexicalBlockFile(scope: !7444, file: !1, discriminator: 1)
!7454 = !DILocation(line: 6089, column: 36, scope: !7453)
!7455 = !DILocation(line: 6089, column: 34, scope: !7453)
!7456 = !DILocation(line: 6089, column: 23, scope: !7453)
!7457 = !DILocation(line: 6089, column: 9, scope: !7453)
!7458 = !DILocation(line: 6089, column: 50, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !7444, file: !1, discriminator: 2)
!7460 = !DILocation(line: 6089, column: 47, scope: !7459)
!7461 = !DILocation(line: 6089, column: 9, scope: !7459)
!7462 = !DILocation(line: 6089, column: 9, scope: !7463)
!7463 = !DILexicalBlockFile(scope: !7444, file: !1, discriminator: 3)
!7464 = !DILocation(line: 6086, column: 7, scope: !7465)
!7465 = !DILexicalBlockFile(scope: !7312, file: !1, discriminator: 2)
!7466 = !DILocation(line: 6091, column: 5, scope: !7312)
!7467 = !DILocation(line: 6093, column: 26, scope: !954)
!7468 = !DILocation(line: 6093, column: 33, scope: !954)
!7469 = !DILocation(line: 6093, column: 38, scope: !954)
!7470 = !DILocation(line: 6093, column: 49, scope: !954)
!7471 = !DILocation(line: 6093, column: 17, scope: !954)
!7472 = !DILocation(line: 6093, column: 12, scope: !954)
!7473 = !DILocation(line: 6093, column: 3, scope: !954)
!7474 = !DILocation(line: 6093, column: 10, scope: !954)
!7475 = !DILocation(line: 6093, column: 15, scope: !954)
!7476 = !DILocation(line: 6094, column: 17, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !954, file: !1, line: 6094, column: 7)
!7478 = !DILocation(line: 6094, column: 8, scope: !7477)
!7479 = !DILocation(line: 6094, column: 15, scope: !7477)
!7480 = !DILocation(line: 6094, column: 7, scope: !954)
!7481 = !DILocation(line: 6095, column: 5, scope: !7477)
!7482 = !DILocation(line: 6096, column: 19, scope: !954)
!7483 = !DILocation(line: 6096, column: 10, scope: !954)
!7484 = !DILocation(line: 6096, column: 17, scope: !954)
!7485 = !DILocation(line: 6096, column: 3, scope: !954)
!7486 = !DILocation(line: 6096, column: 26, scope: !954)
!7487 = !DILocation(line: 6097, column: 23, scope: !954)
!7488 = !DILocation(line: 6097, column: 12, scope: !954)
!7489 = !DILocation(line: 6097, column: 3, scope: !954)
!7490 = !DILocation(line: 6097, column: 10, scope: !954)
!7491 = !DILocation(line: 6097, column: 16, scope: !954)
!7492 = !DILocation(line: 6097, column: 21, scope: !954)
!7493 = !DILocation(line: 6098, column: 4, scope: !954)
!7494 = !DILocation(line: 6098, column: 11, scope: !954)
!7495 = !DILocation(line: 6098, column: 16, scope: !954)
!7496 = !DILocation(line: 6099, column: 19, scope: !954)
!7497 = !DILocation(line: 6099, column: 10, scope: !954)
!7498 = !DILocation(line: 6099, column: 17, scope: !954)
!7499 = !DILocation(line: 6099, column: 3, scope: !954)
!7500 = !DILocation(line: 6100, column: 1, scope: !954)
!7501 = !DILocalVariable(name: "parser", arg: 1, scope: !963, file: !1, line: 6337, type: !162)
!7502 = !DILocation(line: 6337, column: 29, scope: !963)
!7503 = !DILocalVariable(name: "dtd", scope: !963, file: !1, line: 6339, type: !2386)
!7504 = !DILocation(line: 6339, column: 15, scope: !963)
!7505 = !DILocation(line: 6339, column: 21, scope: !963)
!7506 = !DILocalVariable(name: "me", scope: !963, file: !1, line: 6340, type: !575)
!7507 = !DILocation(line: 6340, column: 22, scope: !963)
!7508 = !DILocalVariable(name: "next", scope: !963, file: !1, line: 6341, type: !223)
!7509 = !DILocation(line: 6341, column: 7, scope: !963)
!7510 = !DILocation(line: 6343, column: 8, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !963, file: !1, line: 6343, column: 7)
!7512 = !DILocation(line: 6343, column: 13, scope: !7511)
!7513 = !DILocation(line: 6343, column: 7, scope: !963)
!7514 = !DILocation(line: 6344, column: 30, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7511, file: !1, line: 6343, column: 25)
!7516 = !DILocation(line: 6344, column: 23, scope: !7515)
!7517 = !DILocation(line: 6344, column: 5, scope: !7515)
!7518 = !DILocation(line: 6344, column: 10, scope: !7515)
!7519 = !DILocation(line: 6344, column: 21, scope: !7515)
!7520 = !DILocation(line: 6345, column: 10, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7515, file: !1, line: 6345, column: 9)
!7522 = !DILocation(line: 6345, column: 15, scope: !7521)
!7523 = !DILocation(line: 6345, column: 9, scope: !7515)
!7524 = !DILocation(line: 6346, column: 7, scope: !7521)
!7525 = !DILocation(line: 6347, column: 5, scope: !7515)
!7526 = !DILocation(line: 6347, column: 10, scope: !7515)
!7527 = !DILocation(line: 6347, column: 24, scope: !7515)
!7528 = !DILocation(line: 6348, column: 3, scope: !7515)
!7529 = !DILocation(line: 6350, column: 7, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !963, file: !1, line: 6350, column: 7)
!7531 = !DILocation(line: 6350, column: 12, scope: !7530)
!7532 = !DILocation(line: 6350, column: 26, scope: !7530)
!7533 = !DILocation(line: 6350, column: 31, scope: !7530)
!7534 = !DILocation(line: 6350, column: 23, scope: !7530)
!7535 = !DILocation(line: 6350, column: 7, scope: !963)
!7536 = !DILocalVariable(name: "temp", scope: !7537, file: !1, line: 6351, type: !575)
!7537 = distinct !DILexicalBlock(scope: !7530, file: !1, line: 6350, column: 42)
!7538 = !DILocation(line: 6351, column: 23, scope: !7537)
!7539 = !DILocation(line: 6352, column: 9, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7537, file: !1, line: 6352, column: 9)
!7541 = !DILocation(line: 6352, column: 14, scope: !7540)
!7542 = !DILocation(line: 6352, column: 9, scope: !7537)
!7543 = !DILocation(line: 6354, column: 9, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7540, file: !1, line: 6352, column: 24)
!7545 = !DILocation(line: 6353, column: 14, scope: !7544)
!7546 = !DILocation(line: 6353, column: 12, scope: !7544)
!7547 = !DILocation(line: 6355, column: 11, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7544, file: !1, line: 6355, column: 11)
!7549 = !DILocation(line: 6355, column: 16, scope: !7548)
!7550 = !DILocation(line: 6355, column: 11, scope: !7544)
!7551 = !DILocation(line: 6356, column: 9, scope: !7548)
!7552 = !DILocation(line: 6357, column: 7, scope: !7544)
!7553 = !DILocation(line: 6357, column: 12, scope: !7544)
!7554 = !DILocation(line: 6357, column: 22, scope: !7544)
!7555 = !DILocation(line: 6358, column: 5, scope: !7544)
!7556 = !DILocation(line: 6360, column: 34, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7540, file: !1, line: 6359, column: 10)
!7558 = !DILocation(line: 6360, column: 14, scope: !7557)
!7559 = !DILocation(line: 6360, column: 12, scope: !7557)
!7560 = !DILocation(line: 6362, column: 11, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7557, file: !1, line: 6362, column: 11)
!7562 = !DILocation(line: 6362, column: 16, scope: !7561)
!7563 = !DILocation(line: 6362, column: 11, scope: !7557)
!7564 = !DILocation(line: 6363, column: 9, scope: !7561)
!7565 = !DILocation(line: 6364, column: 7, scope: !7557)
!7566 = !DILocation(line: 6364, column: 12, scope: !7557)
!7567 = !DILocation(line: 6364, column: 22, scope: !7557)
!7568 = !DILocation(line: 6366, column: 21, scope: !7537)
!7569 = !DILocation(line: 6366, column: 5, scope: !7537)
!7570 = !DILocation(line: 6366, column: 10, scope: !7537)
!7571 = !DILocation(line: 6366, column: 19, scope: !7537)
!7572 = !DILocation(line: 6367, column: 3, scope: !7537)
!7573 = !DILocation(line: 6368, column: 10, scope: !963)
!7574 = !DILocation(line: 6368, column: 15, scope: !963)
!7575 = !DILocation(line: 6368, column: 25, scope: !963)
!7576 = !DILocation(line: 6368, column: 8, scope: !963)
!7577 = !DILocation(line: 6369, column: 23, scope: !963)
!7578 = !DILocation(line: 6369, column: 9, scope: !963)
!7579 = !DILocation(line: 6369, column: 14, scope: !963)
!7580 = !DILocation(line: 6369, column: 6, scope: !963)
!7581 = !DILocation(line: 6370, column: 7, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !963, file: !1, line: 6370, column: 7)
!7583 = !DILocation(line: 6370, column: 12, scope: !7582)
!7584 = !DILocation(line: 6370, column: 7, scope: !963)
!7585 = !DILocalVariable(name: "parent", scope: !7586, file: !1, line: 6371, type: !575)
!7586 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 6370, column: 24)
!7587 = !DILocation(line: 6371, column: 23, scope: !7586)
!7588 = !DILocation(line: 6371, column: 63, scope: !7586)
!7589 = !DILocation(line: 6371, column: 68, scope: !7586)
!7590 = !DILocation(line: 6371, column: 78, scope: !7586)
!7591 = !DILocation(line: 6371, column: 47, scope: !7586)
!7592 = !DILocation(line: 6371, column: 52, scope: !7586)
!7593 = !DILocation(line: 6371, column: 33, scope: !7586)
!7594 = !DILocation(line: 6371, column: 38, scope: !7586)
!7595 = !DILocation(line: 6372, column: 9, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7586, file: !1, line: 6372, column: 9)
!7597 = !DILocation(line: 6372, column: 17, scope: !7596)
!7598 = !DILocation(line: 6372, column: 9, scope: !7586)
!7599 = !DILocation(line: 6373, column: 50, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7596, file: !1, line: 6372, column: 28)
!7601 = !DILocation(line: 6373, column: 21, scope: !7600)
!7602 = !DILocation(line: 6373, column: 29, scope: !7600)
!7603 = !DILocation(line: 6373, column: 7, scope: !7600)
!7604 = !DILocation(line: 6373, column: 12, scope: !7600)
!7605 = !DILocation(line: 6373, column: 40, scope: !7600)
!7606 = !DILocation(line: 6373, column: 48, scope: !7600)
!7607 = !DILocation(line: 6374, column: 5, scope: !7600)
!7608 = !DILocation(line: 6375, column: 10, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7586, file: !1, line: 6375, column: 9)
!7610 = !DILocation(line: 6375, column: 18, scope: !7609)
!7611 = !DILocation(line: 6375, column: 9, scope: !7586)
!7612 = !DILocation(line: 6376, column: 28, scope: !7609)
!7613 = !DILocation(line: 6376, column: 7, scope: !7609)
!7614 = !DILocation(line: 6376, column: 15, scope: !7609)
!7615 = !DILocation(line: 6376, column: 26, scope: !7609)
!7616 = !DILocation(line: 6377, column: 25, scope: !7586)
!7617 = !DILocation(line: 6377, column: 5, scope: !7586)
!7618 = !DILocation(line: 6377, column: 13, scope: !7586)
!7619 = !DILocation(line: 6377, column: 23, scope: !7586)
!7620 = !DILocation(line: 6378, column: 5, scope: !7586)
!7621 = !DILocation(line: 6378, column: 13, scope: !7586)
!7622 = !DILocation(line: 6378, column: 21, scope: !7586)
!7623 = !DILocation(line: 6379, column: 3, scope: !7586)
!7624 = !DILocation(line: 6380, column: 51, scope: !963)
!7625 = !DILocation(line: 6380, column: 55, scope: !963)
!7626 = !DILocation(line: 6380, column: 63, scope: !963)
!7627 = !DILocation(line: 6380, column: 36, scope: !963)
!7628 = !DILocation(line: 6380, column: 40, scope: !963)
!7629 = !DILocation(line: 6380, column: 49, scope: !963)
!7630 = !DILocation(line: 6380, column: 20, scope: !963)
!7631 = !DILocation(line: 6380, column: 24, scope: !963)
!7632 = !DILocation(line: 6380, column: 34, scope: !963)
!7633 = !DILocation(line: 6380, column: 3, scope: !963)
!7634 = !DILocation(line: 6380, column: 7, scope: !963)
!7635 = !DILocation(line: 6380, column: 18, scope: !963)
!7636 = !DILocation(line: 6381, column: 10, scope: !963)
!7637 = !DILocation(line: 6381, column: 3, scope: !963)
!7638 = !DILocation(line: 6382, column: 1, scope: !963)
!7639 = !DILocalVariable(name: "parser", arg: 1, scope: !964, file: !1, line: 6423, type: !162)
!7640 = !DILocation(line: 6423, column: 25, scope: !964)
!7641 = !DILocalVariable(name: "dtd", scope: !964, file: !1, line: 6425, type: !2386)
!7642 = !DILocation(line: 6425, column: 15, scope: !964)
!7643 = !DILocation(line: 6425, column: 21, scope: !964)
!7644 = !DILocalVariable(name: "ret", scope: !964, file: !1, line: 6426, type: !295)
!7645 = !DILocation(line: 6426, column: 16, scope: !964)
!7646 = !DILocalVariable(name: "cpos", scope: !964, file: !1, line: 6427, type: !295)
!7647 = !DILocation(line: 6427, column: 16, scope: !964)
!7648 = !DILocalVariable(name: "str", scope: !964, file: !1, line: 6428, type: !202)
!7649 = !DILocation(line: 6428, column: 14, scope: !964)
!7650 = !DILocalVariable(name: "allocsize", scope: !964, file: !1, line: 6429, type: !223)
!7651 = !DILocation(line: 6429, column: 7, scope: !964)
!7652 = !DILocation(line: 6429, column: 20, scope: !964)
!7653 = !DILocation(line: 6429, column: 25, scope: !964)
!7654 = !DILocation(line: 6429, column: 36, scope: !964)
!7655 = !DILocation(line: 6430, column: 23, scope: !964)
!7656 = !DILocation(line: 6430, column: 28, scope: !964)
!7657 = !DILocation(line: 6430, column: 45, scope: !964)
!7658 = !DILocation(line: 6430, column: 20, scope: !964)
!7659 = !DILocation(line: 6429, column: 19, scope: !964)
!7660 = !DILocation(line: 6432, column: 24, scope: !964)
!7661 = !DILocation(line: 6432, column: 9, scope: !964)
!7662 = !DILocation(line: 6432, column: 7, scope: !964)
!7663 = !DILocation(line: 6433, column: 8, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !964, file: !1, line: 6433, column: 7)
!7665 = !DILocation(line: 6433, column: 7, scope: !964)
!7666 = !DILocation(line: 6434, column: 5, scope: !7664)
!7667 = !DILocation(line: 6436, column: 29, scope: !964)
!7668 = !DILocation(line: 6436, column: 34, scope: !964)
!7669 = !DILocation(line: 6436, column: 25, scope: !964)
!7670 = !DILocation(line: 6436, column: 10, scope: !964)
!7671 = !DILocation(line: 6436, column: 7, scope: !964)
!7672 = !DILocation(line: 6437, column: 11, scope: !964)
!7673 = !DILocation(line: 6437, column: 8, scope: !964)
!7674 = !DILocation(line: 6439, column: 14, scope: !964)
!7675 = !DILocation(line: 6439, column: 25, scope: !964)
!7676 = !DILocation(line: 6439, column: 3, scope: !964)
!7677 = !DILocation(line: 6440, column: 10, scope: !964)
!7678 = !DILocation(line: 6440, column: 3, scope: !964)
!7679 = !DILocation(line: 6441, column: 1, scope: !964)
!7680 = !DILocalVariable(name: "parser", arg: 1, scope: !972, file: !1, line: 5328, type: !162)
!7681 = !DILocation(line: 5328, column: 40, scope: !972)
!7682 = !DILocalVariable(name: "enc", arg: 2, scope: !972, file: !1, line: 5328, type: !321)
!7683 = !DILocation(line: 5328, column: 64, scope: !972)
!7684 = !DILocalVariable(name: "start", arg: 3, scope: !972, file: !1, line: 5329, type: !192)
!7685 = !DILocation(line: 5329, column: 41, scope: !972)
!7686 = !DILocalVariable(name: "end", arg: 4, scope: !972, file: !1, line: 5329, type: !192)
!7687 = !DILocation(line: 5329, column: 60, scope: !972)
!7688 = !DILocalVariable(name: "target", scope: !972, file: !1, line: 5331, type: !210)
!7689 = !DILocation(line: 5331, column: 19, scope: !972)
!7690 = !DILocalVariable(name: "data", scope: !972, file: !1, line: 5332, type: !202)
!7691 = !DILocation(line: 5332, column: 13, scope: !972)
!7692 = !DILocalVariable(name: "tem", scope: !972, file: !1, line: 5333, type: !192)
!7693 = !DILocation(line: 5333, column: 15, scope: !972)
!7694 = !DILocation(line: 5334, column: 8, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !972, file: !1, line: 5334, column: 7)
!7696 = !DILocation(line: 5334, column: 7, scope: !972)
!7697 = !DILocation(line: 5335, column: 9, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !1, line: 5335, column: 9)
!7699 = distinct !DILexicalBlock(scope: !7695, file: !1, line: 5334, column: 38)
!7700 = !DILocation(line: 5335, column: 9, scope: !7699)
!7701 = !DILocation(line: 5336, column: 21, scope: !7698)
!7702 = !DILocation(line: 5336, column: 29, scope: !7698)
!7703 = !DILocation(line: 5336, column: 34, scope: !7698)
!7704 = !DILocation(line: 5336, column: 41, scope: !7698)
!7705 = !DILocation(line: 5336, column: 7, scope: !7698)
!7706 = !DILocation(line: 5337, column: 5, scope: !7699)
!7707 = !DILocation(line: 5339, column: 12, scope: !972)
!7708 = !DILocation(line: 5339, column: 17, scope: !972)
!7709 = !DILocation(line: 5339, column: 33, scope: !972)
!7710 = !DILocation(line: 5339, column: 9, scope: !972)
!7711 = !DILocation(line: 5340, column: 9, scope: !972)
!7712 = !DILocation(line: 5340, column: 17, scope: !972)
!7713 = !DILocation(line: 5340, column: 15, scope: !972)
!7714 = !DILocation(line: 5340, column: 7, scope: !972)
!7715 = !DILocation(line: 5341, column: 29, scope: !972)
!7716 = !DILocation(line: 5341, column: 39, scope: !972)
!7717 = !DILocation(line: 5341, column: 44, scope: !972)
!7718 = !DILocation(line: 5341, column: 51, scope: !972)
!7719 = !DILocation(line: 5341, column: 12, scope: !972)
!7720 = !DILocation(line: 5341, column: 10, scope: !972)
!7721 = !DILocation(line: 5342, column: 8, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !972, file: !1, line: 5342, column: 7)
!7723 = !DILocation(line: 5342, column: 7, scope: !972)
!7724 = !DILocation(line: 5343, column: 5, scope: !7722)
!7725 = !DILocation(line: 5344, column: 3, scope: !972)
!7726 = !DILocation(line: 5345, column: 27, scope: !972)
!7727 = !DILocation(line: 5345, column: 37, scope: !972)
!7728 = !DILocation(line: 5346, column: 25, scope: !972)
!7729 = !DILocation(line: 5347, column: 25, scope: !972)
!7730 = !DILocation(line: 5347, column: 31, scope: !972)
!7731 = !DILocation(line: 5347, column: 36, scope: !972)
!7732 = !DILocation(line: 5347, column: 51, scope: !972)
!7733 = !DILocation(line: 5347, column: 29, scope: !972)
!7734 = !DILocation(line: 5345, column: 10, scope: !972)
!7735 = !DILocation(line: 5345, column: 8, scope: !972)
!7736 = !DILocation(line: 5348, column: 8, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !972, file: !1, line: 5348, column: 7)
!7738 = !DILocation(line: 5348, column: 7, scope: !972)
!7739 = !DILocation(line: 5349, column: 5, scope: !7737)
!7740 = !DILocation(line: 5350, column: 18, scope: !972)
!7741 = !DILocation(line: 5350, column: 3, scope: !972)
!7742 = !DILocation(line: 5351, column: 3, scope: !972)
!7743 = !DILocation(line: 5351, column: 32, scope: !972)
!7744 = !DILocation(line: 5351, column: 44, scope: !972)
!7745 = !DILocation(line: 5351, column: 52, scope: !972)
!7746 = !DILocation(line: 5352, column: 14, scope: !972)
!7747 = !DILocation(line: 5352, column: 3, scope: !972)
!7748 = !DILocation(line: 5353, column: 3, scope: !972)
!7749 = !DILocation(line: 5354, column: 1, scope: !972)
!7750 = !DILocalVariable(name: "parser", arg: 1, scope: !976, file: !1, line: 5357, type: !162)
!7751 = !DILocation(line: 5357, column: 26, scope: !976)
!7752 = !DILocalVariable(name: "enc", arg: 2, scope: !976, file: !1, line: 5357, type: !321)
!7753 = !DILocation(line: 5357, column: 50, scope: !976)
!7754 = !DILocalVariable(name: "start", arg: 3, scope: !976, file: !1, line: 5358, type: !192)
!7755 = !DILocation(line: 5358, column: 27, scope: !976)
!7756 = !DILocalVariable(name: "end", arg: 4, scope: !976, file: !1, line: 5358, type: !192)
!7757 = !DILocation(line: 5358, column: 46, scope: !976)
!7758 = !DILocalVariable(name: "data", scope: !976, file: !1, line: 5360, type: !202)
!7759 = !DILocation(line: 5360, column: 13, scope: !976)
!7760 = !DILocation(line: 5361, column: 8, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !976, file: !1, line: 5361, column: 7)
!7762 = !DILocation(line: 5361, column: 7, scope: !976)
!7763 = !DILocation(line: 5362, column: 9, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !1, line: 5362, column: 9)
!7765 = distinct !DILexicalBlock(scope: !7761, file: !1, line: 5361, column: 24)
!7766 = !DILocation(line: 5362, column: 9, scope: !7765)
!7767 = !DILocation(line: 5363, column: 21, scope: !7764)
!7768 = !DILocation(line: 5363, column: 29, scope: !7764)
!7769 = !DILocation(line: 5363, column: 34, scope: !7764)
!7770 = !DILocation(line: 5363, column: 41, scope: !7764)
!7771 = !DILocation(line: 5363, column: 7, scope: !7764)
!7772 = !DILocation(line: 5364, column: 5, scope: !7765)
!7773 = !DILocation(line: 5366, column: 27, scope: !976)
!7774 = !DILocation(line: 5367, column: 26, scope: !976)
!7775 = !DILocation(line: 5368, column: 26, scope: !976)
!7776 = !DILocation(line: 5368, column: 34, scope: !976)
!7777 = !DILocation(line: 5368, column: 39, scope: !976)
!7778 = !DILocation(line: 5368, column: 55, scope: !976)
!7779 = !DILocation(line: 5368, column: 32, scope: !976)
!7780 = !DILocation(line: 5369, column: 26, scope: !976)
!7781 = !DILocation(line: 5369, column: 32, scope: !976)
!7782 = !DILocation(line: 5369, column: 37, scope: !976)
!7783 = !DILocation(line: 5369, column: 53, scope: !976)
!7784 = !DILocation(line: 5369, column: 30, scope: !976)
!7785 = !DILocation(line: 5366, column: 10, scope: !976)
!7786 = !DILocation(line: 5366, column: 8, scope: !976)
!7787 = !DILocation(line: 5370, column: 8, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !976, file: !1, line: 5370, column: 7)
!7789 = !DILocation(line: 5370, column: 7, scope: !976)
!7790 = !DILocation(line: 5371, column: 5, scope: !7788)
!7791 = !DILocation(line: 5372, column: 18, scope: !976)
!7792 = !DILocation(line: 5372, column: 3, scope: !976)
!7793 = !DILocation(line: 5373, column: 3, scope: !976)
!7794 = !DILocation(line: 5373, column: 18, scope: !976)
!7795 = !DILocation(line: 5373, column: 30, scope: !976)
!7796 = !DILocation(line: 5374, column: 14, scope: !976)
!7797 = !DILocation(line: 5374, column: 3, scope: !976)
!7798 = !DILocation(line: 5375, column: 3, scope: !976)
!7799 = !DILocation(line: 5376, column: 1, scope: !976)
!7800 = !DILocalVariable(name: "parser", arg: 1, scope: !889, file: !1, line: 2280, type: !162)
!7801 = !DILocation(line: 2280, column: 22, scope: !889)
!7802 = !DILocalVariable(name: "startTagLevel", arg: 2, scope: !889, file: !1, line: 2281, type: !223)
!7803 = !DILocation(line: 2281, column: 15, scope: !889)
!7804 = !DILocalVariable(name: "enc", arg: 3, scope: !889, file: !1, line: 2282, type: !321)
!7805 = !DILocation(line: 2282, column: 27, scope: !889)
!7806 = !DILocalVariable(name: "s", arg: 4, scope: !889, file: !1, line: 2283, type: !192)
!7807 = !DILocation(line: 2283, column: 23, scope: !889)
!7808 = !DILocalVariable(name: "end", arg: 5, scope: !889, file: !1, line: 2284, type: !192)
!7809 = !DILocation(line: 2284, column: 23, scope: !889)
!7810 = !DILocalVariable(name: "nextPtr", arg: 6, scope: !889, file: !1, line: 2285, type: !332)
!7811 = !DILocation(line: 2285, column: 24, scope: !889)
!7812 = !DILocalVariable(name: "haveMore", arg: 7, scope: !889, file: !1, line: 2286, type: !159)
!7813 = !DILocation(line: 2286, column: 20, scope: !889)
!7814 = !DILocalVariable(name: "dtd", scope: !889, file: !1, line: 2289, type: !2386)
!7815 = !DILocation(line: 2289, column: 15, scope: !889)
!7816 = !DILocation(line: 2289, column: 21, scope: !889)
!7817 = !DILocalVariable(name: "eventPP", scope: !889, file: !1, line: 2291, type: !332)
!7818 = !DILocation(line: 2291, column: 16, scope: !889)
!7819 = !DILocalVariable(name: "eventEndPP", scope: !889, file: !1, line: 2292, type: !332)
!7820 = !DILocation(line: 2292, column: 16, scope: !889)
!7821 = !DILocation(line: 2293, column: 7, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !889, file: !1, line: 2293, column: 7)
!7823 = !DILocation(line: 2293, column: 14, scope: !7822)
!7824 = !DILocation(line: 2293, column: 11, scope: !7822)
!7825 = !DILocation(line: 2293, column: 7, scope: !889)
!7826 = !DILocation(line: 2294, column: 16, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7822, file: !1, line: 2293, column: 24)
!7828 = !DILocation(line: 2294, column: 13, scope: !7827)
!7829 = !DILocation(line: 2295, column: 19, scope: !7827)
!7830 = !DILocation(line: 2295, column: 16, scope: !7827)
!7831 = !DILocation(line: 2296, column: 3, scope: !7827)
!7832 = !DILocation(line: 2298, column: 17, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7822, file: !1, line: 2297, column: 8)
!7834 = !DILocation(line: 2298, column: 39, scope: !7833)
!7835 = !DILocation(line: 2298, column: 13, scope: !7833)
!7836 = !DILocation(line: 2299, column: 20, scope: !7833)
!7837 = !DILocation(line: 2299, column: 42, scope: !7833)
!7838 = !DILocation(line: 2299, column: 16, scope: !7833)
!7839 = !DILocation(line: 2301, column: 14, scope: !889)
!7840 = !DILocation(line: 2301, column: 4, scope: !889)
!7841 = !DILocation(line: 2301, column: 12, scope: !889)
!7842 = !DILocation(line: 2303, column: 3, scope: !889)
!7843 = !DILocalVariable(name: "next", scope: !7844, file: !1, line: 2304, type: !192)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 2303, column: 12)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !1, line: 2303, column: 3)
!7846 = distinct !DILexicalBlock(scope: !889, file: !1, line: 2303, column: 3)
!7847 = !DILocation(line: 2304, column: 17, scope: !7844)
!7848 = !DILocation(line: 2304, column: 24, scope: !7844)
!7849 = !DILocalVariable(name: "tok", scope: !7844, file: !1, line: 2305, type: !223)
!7850 = !DILocation(line: 2305, column: 9, scope: !7844)
!7851 = !DILocation(line: 2305, column: 15, scope: !7844)
!7852 = !DILocation(line: 2306, column: 19, scope: !7844)
!7853 = !DILocation(line: 2306, column: 6, scope: !7844)
!7854 = !DILocation(line: 2306, column: 17, scope: !7844)
!7855 = !DILocation(line: 2307, column: 13, scope: !7844)
!7856 = !DILocation(line: 2307, column: 5, scope: !7844)
!7857 = !DILocation(line: 2309, column: 11, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2309, column: 11)
!7859 = distinct !DILexicalBlock(scope: !7844, file: !1, line: 2307, column: 18)
!7860 = !DILocation(line: 2309, column: 11, scope: !7859)
!7861 = !DILocation(line: 2310, column: 20, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7858, file: !1, line: 2309, column: 21)
!7863 = !DILocation(line: 2310, column: 10, scope: !7862)
!7864 = !DILocation(line: 2310, column: 18, scope: !7862)
!7865 = !DILocation(line: 2311, column: 9, scope: !7862)
!7866 = !DILocation(line: 2313, column: 21, scope: !7859)
!7867 = !DILocation(line: 2313, column: 8, scope: !7859)
!7868 = !DILocation(line: 2313, column: 19, scope: !7859)
!7869 = !DILocation(line: 2314, column: 11, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2314, column: 11)
!7871 = !DILocation(line: 2314, column: 11, scope: !7859)
!7872 = !DILocalVariable(name: "c", scope: !7873, file: !1, line: 2315, type: !203)
!7873 = distinct !DILexicalBlock(scope: !7870, file: !1, line: 2314, column: 33)
!7874 = !DILocation(line: 2315, column: 18, scope: !7873)
!7875 = !DILocation(line: 2316, column: 9, scope: !7873)
!7876 = !DILocation(line: 2316, column: 30, scope: !7873)
!7877 = !DILocation(line: 2317, column: 7, scope: !7873)
!7878 = !DILocation(line: 2318, column: 16, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7870, file: !1, line: 2318, column: 16)
!7880 = !DILocation(line: 2318, column: 16, scope: !7870)
!7881 = !DILocation(line: 2319, column: 23, scope: !7879)
!7882 = !DILocation(line: 2319, column: 31, scope: !7879)
!7883 = !DILocation(line: 2319, column: 36, scope: !7879)
!7884 = !DILocation(line: 2319, column: 39, scope: !7879)
!7885 = !DILocation(line: 2319, column: 9, scope: !7879)
!7886 = !DILocation(line: 2323, column: 11, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2323, column: 11)
!7888 = !DILocation(line: 2323, column: 25, scope: !7887)
!7889 = !DILocation(line: 2323, column: 11, scope: !7859)
!7890 = !DILocation(line: 2324, column: 9, scope: !7887)
!7891 = !DILocation(line: 2325, column: 11, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2325, column: 11)
!7893 = !DILocation(line: 2325, column: 23, scope: !7892)
!7894 = !DILocation(line: 2325, column: 20, scope: !7892)
!7895 = !DILocation(line: 2325, column: 11, scope: !7859)
!7896 = !DILocation(line: 2326, column: 9, scope: !7892)
!7897 = !DILocation(line: 2327, column: 18, scope: !7859)
!7898 = !DILocation(line: 2327, column: 8, scope: !7859)
!7899 = !DILocation(line: 2327, column: 16, scope: !7859)
!7900 = !DILocation(line: 2328, column: 7, scope: !7859)
!7901 = !DILocation(line: 2330, column: 11, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2330, column: 11)
!7903 = !DILocation(line: 2330, column: 11, scope: !7859)
!7904 = !DILocation(line: 2331, column: 20, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7902, file: !1, line: 2330, column: 21)
!7906 = !DILocation(line: 2331, column: 10, scope: !7905)
!7907 = !DILocation(line: 2331, column: 18, scope: !7905)
!7908 = !DILocation(line: 2332, column: 9, scope: !7905)
!7909 = !DILocation(line: 2334, column: 11, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2334, column: 11)
!7911 = !DILocation(line: 2334, column: 25, scope: !7910)
!7912 = !DILocation(line: 2334, column: 11, scope: !7859)
!7913 = !DILocation(line: 2335, column: 13, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 2335, column: 13)
!7915 = distinct !DILexicalBlock(scope: !7910, file: !1, line: 2334, column: 30)
!7916 = !DILocation(line: 2335, column: 25, scope: !7914)
!7917 = !DILocation(line: 2335, column: 22, scope: !7914)
!7918 = !DILocation(line: 2335, column: 13, scope: !7915)
!7919 = !DILocation(line: 2336, column: 11, scope: !7914)
!7920 = !DILocation(line: 2337, column: 20, scope: !7915)
!7921 = !DILocation(line: 2337, column: 10, scope: !7915)
!7922 = !DILocation(line: 2337, column: 18, scope: !7915)
!7923 = !DILocation(line: 2338, column: 9, scope: !7915)
!7924 = !DILocation(line: 2340, column: 7, scope: !7859)
!7925 = !DILocation(line: 2342, column: 18, scope: !7859)
!7926 = !DILocation(line: 2342, column: 8, scope: !7859)
!7927 = !DILocation(line: 2342, column: 16, scope: !7859)
!7928 = !DILocation(line: 2343, column: 7, scope: !7859)
!7929 = !DILocation(line: 2345, column: 11, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2345, column: 11)
!7931 = !DILocation(line: 2345, column: 11, scope: !7859)
!7932 = !DILocation(line: 2346, column: 20, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7930, file: !1, line: 2345, column: 21)
!7934 = !DILocation(line: 2346, column: 10, scope: !7933)
!7935 = !DILocation(line: 2346, column: 18, scope: !7933)
!7936 = !DILocation(line: 2347, column: 9, scope: !7933)
!7937 = !DILocation(line: 2349, column: 7, scope: !7859)
!7938 = !DILocation(line: 2351, column: 11, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2351, column: 11)
!7940 = !DILocation(line: 2351, column: 11, scope: !7859)
!7941 = !DILocation(line: 2352, column: 20, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7939, file: !1, line: 2351, column: 21)
!7943 = !DILocation(line: 2352, column: 10, scope: !7942)
!7944 = !DILocation(line: 2352, column: 18, scope: !7942)
!7945 = !DILocation(line: 2353, column: 9, scope: !7942)
!7946 = !DILocation(line: 2355, column: 7, scope: !7859)
!7947 = !DILocalVariable(name: "name", scope: !7948, file: !1, line: 2358, type: !210)
!7948 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2357, column: 7)
!7949 = !DILocation(line: 2358, column: 25, scope: !7948)
!7950 = !DILocalVariable(name: "entity", scope: !7948, file: !1, line: 2359, type: !443)
!7951 = !DILocation(line: 2359, column: 17, scope: !7948)
!7952 = !DILocalVariable(name: "ch", scope: !7948, file: !1, line: 2360, type: !203)
!7953 = !DILocation(line: 2360, column: 18, scope: !7948)
!7954 = !DILocation(line: 2360, column: 34, scope: !7948)
!7955 = !DILocation(line: 2360, column: 23, scope: !7948)
!7956 = !DILocation(line: 2363, column: 13, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 2363, column: 13)
!7958 = !DILocation(line: 2363, column: 13, scope: !7948)
!7959 = !DILocation(line: 2364, column: 15, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !1, line: 2364, column: 15)
!7961 = distinct !DILexicalBlock(scope: !7957, file: !1, line: 2363, column: 17)
!7962 = !DILocation(line: 2364, column: 15, scope: !7961)
!7963 = !DILocation(line: 2365, column: 13, scope: !7960)
!7964 = !DILocation(line: 2365, column: 34, scope: !7960)
!7965 = !DILocation(line: 2366, column: 20, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7960, file: !1, line: 2366, column: 20)
!7967 = !DILocation(line: 2366, column: 20, scope: !7960)
!7968 = !DILocation(line: 2367, column: 27, scope: !7966)
!7969 = !DILocation(line: 2367, column: 35, scope: !7966)
!7970 = !DILocation(line: 2367, column: 40, scope: !7966)
!7971 = !DILocation(line: 2367, column: 43, scope: !7966)
!7972 = !DILocation(line: 2367, column: 13, scope: !7966)
!7973 = !DILocation(line: 2368, column: 11, scope: !7961)
!7974 = !DILocation(line: 2370, column: 33, scope: !7948)
!7975 = !DILocation(line: 2370, column: 38, scope: !7948)
!7976 = !DILocation(line: 2370, column: 44, scope: !7948)
!7977 = !DILocation(line: 2371, column: 33, scope: !7948)
!7978 = !DILocation(line: 2371, column: 37, scope: !7948)
!7979 = !DILocation(line: 2371, column: 42, scope: !7948)
!7980 = !DILocation(line: 2371, column: 35, scope: !7948)
!7981 = !DILocation(line: 2372, column: 33, scope: !7948)
!7982 = !DILocation(line: 2372, column: 40, scope: !7948)
!7983 = !DILocation(line: 2372, column: 45, scope: !7948)
!7984 = !DILocation(line: 2372, column: 38, scope: !7948)
!7985 = !DILocation(line: 2370, column: 16, scope: !7948)
!7986 = !DILocation(line: 2370, column: 14, scope: !7948)
!7987 = !DILocation(line: 2373, column: 14, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 2373, column: 13)
!7989 = !DILocation(line: 2373, column: 13, scope: !7948)
!7990 = !DILocation(line: 2374, column: 11, scope: !7988)
!7991 = !DILocation(line: 2375, column: 35, scope: !7948)
!7992 = !DILocation(line: 2375, column: 44, scope: !7948)
!7993 = !DILocation(line: 2375, column: 49, scope: !7948)
!7994 = !DILocation(line: 2375, column: 66, scope: !7948)
!7995 = !DILocation(line: 2375, column: 28, scope: !7948)
!7996 = !DILocation(line: 2375, column: 18, scope: !7948)
!7997 = !DILocation(line: 2375, column: 16, scope: !7948)
!7998 = !DILocation(line: 2376, column: 9, scope: !7948)
!7999 = !DILocation(line: 2381, column: 14, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 2381, column: 13)
!8001 = !DILocation(line: 2381, column: 19, scope: !8000)
!8002 = !DILocation(line: 2381, column: 38, scope: !8000)
!8003 = !DILocation(line: 2381, column: 41, scope: !8004)
!8004 = !DILexicalBlockFile(scope: !8000, file: !1, discriminator: 1)
!8005 = !DILocation(line: 2381, column: 46, scope: !8004)
!8006 = !DILocation(line: 2381, column: 13, scope: !8004)
!8007 = !DILocation(line: 2382, column: 16, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !1, line: 2382, column: 15)
!8009 = distinct !DILexicalBlock(scope: !8000, file: !1, line: 2381, column: 58)
!8010 = !DILocation(line: 2382, column: 15, scope: !8009)
!8011 = !DILocation(line: 2383, column: 13, scope: !8008)
!8012 = !DILocation(line: 2384, column: 21, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8008, file: !1, line: 2384, column: 20)
!8014 = !DILocation(line: 2384, column: 29, scope: !8013)
!8015 = !DILocation(line: 2384, column: 20, scope: !8008)
!8016 = !DILocation(line: 2385, column: 13, scope: !8013)
!8017 = !DILocation(line: 2386, column: 9, scope: !8009)
!8018 = !DILocation(line: 2387, column: 19, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8000, file: !1, line: 2387, column: 18)
!8020 = !DILocation(line: 2387, column: 18, scope: !8000)
!8021 = !DILocation(line: 2388, column: 15, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8023, file: !1, line: 2388, column: 15)
!8023 = distinct !DILexicalBlock(scope: !8019, file: !1, line: 2387, column: 27)
!8024 = !DILocation(line: 2388, column: 15, scope: !8023)
!8025 = !DILocation(line: 2389, column: 13, scope: !8022)
!8026 = !DILocation(line: 2389, column: 34, scope: !8022)
!8027 = !DILocation(line: 2389, column: 46, scope: !8022)
!8028 = !DILocation(line: 2390, column: 20, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8022, file: !1, line: 2390, column: 20)
!8030 = !DILocation(line: 2390, column: 20, scope: !8022)
!8031 = !DILocation(line: 2391, column: 27, scope: !8029)
!8032 = !DILocation(line: 2391, column: 35, scope: !8029)
!8033 = !DILocation(line: 2391, column: 40, scope: !8029)
!8034 = !DILocation(line: 2391, column: 43, scope: !8029)
!8035 = !DILocation(line: 2391, column: 13, scope: !8029)
!8036 = !DILocation(line: 2392, column: 11, scope: !8023)
!8037 = !DILocation(line: 2394, column: 13, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 2394, column: 13)
!8039 = !DILocation(line: 2394, column: 21, scope: !8038)
!8040 = !DILocation(line: 2394, column: 13, scope: !7948)
!8041 = !DILocation(line: 2395, column: 11, scope: !8038)
!8042 = !DILocation(line: 2396, column: 13, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 2396, column: 13)
!8044 = !DILocation(line: 2396, column: 21, scope: !8043)
!8045 = !DILocation(line: 2396, column: 13, scope: !7948)
!8046 = !DILocation(line: 2397, column: 11, scope: !8043)
!8047 = !DILocation(line: 2398, column: 13, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 2398, column: 13)
!8049 = !DILocation(line: 2398, column: 21, scope: !8048)
!8050 = !DILocation(line: 2398, column: 13, scope: !7948)
!8051 = !DILocalVariable(name: "result", scope: !8052, file: !1, line: 2399, type: !24)
!8052 = distinct !DILexicalBlock(scope: !8048, file: !1, line: 2398, column: 30)
!8053 = !DILocation(line: 2399, column: 26, scope: !8052)
!8054 = !DILocation(line: 2400, column: 16, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2400, column: 15)
!8056 = !DILocation(line: 2400, column: 15, scope: !8052)
!8057 = !DILocation(line: 2401, column: 17, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !1, line: 2401, column: 17)
!8059 = distinct !DILexicalBlock(scope: !8055, file: !1, line: 2400, column: 47)
!8060 = !DILocation(line: 2401, column: 17, scope: !8059)
!8061 = !DILocation(line: 2402, column: 15, scope: !8058)
!8062 = !DILocation(line: 2402, column: 36, scope: !8058)
!8063 = !DILocation(line: 2402, column: 48, scope: !8058)
!8064 = !DILocation(line: 2402, column: 56, scope: !8058)
!8065 = !DILocation(line: 2403, column: 22, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8058, file: !1, line: 2403, column: 22)
!8067 = !DILocation(line: 2403, column: 22, scope: !8058)
!8068 = !DILocation(line: 2404, column: 29, scope: !8066)
!8069 = !DILocation(line: 2404, column: 37, scope: !8066)
!8070 = !DILocation(line: 2404, column: 42, scope: !8066)
!8071 = !DILocation(line: 2404, column: 45, scope: !8066)
!8072 = !DILocation(line: 2404, column: 15, scope: !8066)
!8073 = !DILocation(line: 2405, column: 13, scope: !8059)
!8074 = !DILocation(line: 2407, column: 42, scope: !8052)
!8075 = !DILocation(line: 2407, column: 50, scope: !8052)
!8076 = !DILocation(line: 2407, column: 20, scope: !8052)
!8077 = !DILocation(line: 2407, column: 18, scope: !8052)
!8078 = !DILocation(line: 2408, column: 15, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8052, file: !1, line: 2408, column: 15)
!8080 = !DILocation(line: 2408, column: 22, scope: !8079)
!8081 = !DILocation(line: 2408, column: 15, scope: !8052)
!8082 = !DILocation(line: 2409, column: 20, scope: !8079)
!8083 = !DILocation(line: 2409, column: 13, scope: !8079)
!8084 = !DILocation(line: 2410, column: 9, scope: !8052)
!8085 = !DILocation(line: 2411, column: 18, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8048, file: !1, line: 2411, column: 18)
!8087 = !DILocation(line: 2411, column: 18, scope: !8048)
!8088 = !DILocalVariable(name: "context", scope: !8089, file: !1, line: 2412, type: !210)
!8089 = distinct !DILexicalBlock(scope: !8086, file: !1, line: 2411, column: 44)
!8090 = !DILocation(line: 2412, column: 27, scope: !8089)
!8091 = !DILocation(line: 2413, column: 11, scope: !8089)
!8092 = !DILocation(line: 2413, column: 19, scope: !8089)
!8093 = !DILocation(line: 2413, column: 24, scope: !8089)
!8094 = !DILocation(line: 2414, column: 32, scope: !8089)
!8095 = !DILocation(line: 2414, column: 21, scope: !8089)
!8096 = !DILocation(line: 2414, column: 19, scope: !8089)
!8097 = !DILocation(line: 2415, column: 11, scope: !8089)
!8098 = !DILocation(line: 2415, column: 19, scope: !8089)
!8099 = !DILocation(line: 2415, column: 24, scope: !8089)
!8100 = !DILocation(line: 2416, column: 16, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8089, file: !1, line: 2416, column: 15)
!8102 = !DILocation(line: 2416, column: 15, scope: !8089)
!8103 = !DILocation(line: 2417, column: 13, scope: !8101)
!8104 = !DILocation(line: 2418, column: 16, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8089, file: !1, line: 2418, column: 15)
!8106 = !DILocation(line: 2418, column: 41, scope: !8105)
!8107 = !DILocation(line: 2419, column: 41, scope: !8105)
!8108 = !DILocation(line: 2420, column: 41, scope: !8105)
!8109 = !DILocation(line: 2420, column: 49, scope: !8105)
!8110 = !DILocation(line: 2421, column: 41, scope: !8105)
!8111 = !DILocation(line: 2421, column: 49, scope: !8105)
!8112 = !DILocation(line: 2422, column: 41, scope: !8105)
!8113 = !DILocation(line: 2422, column: 49, scope: !8105)
!8114 = !DILocation(line: 2418, column: 15, scope: !8089)
!8115 = !DILocation(line: 2423, column: 13, scope: !8105)
!8116 = !DILocation(line: 2424, column: 11, scope: !8089)
!8117 = !DILocation(line: 2425, column: 9, scope: !8089)
!8118 = !DILocation(line: 2426, column: 18, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8086, file: !1, line: 2426, column: 18)
!8120 = !DILocation(line: 2426, column: 18, scope: !8086)
!8121 = !DILocation(line: 2427, column: 25, scope: !8119)
!8122 = !DILocation(line: 2427, column: 33, scope: !8119)
!8123 = !DILocation(line: 2427, column: 38, scope: !8119)
!8124 = !DILocation(line: 2427, column: 41, scope: !8119)
!8125 = !DILocation(line: 2427, column: 11, scope: !8119)
!8126 = !DILocation(line: 2428, column: 9, scope: !7948)
!8127 = !DILocalVariable(name: "tag", scope: !8128, file: !1, line: 2434, type: !594)
!8128 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2433, column: 7)
!8129 = !DILocation(line: 2434, column: 14, scope: !8128)
!8130 = !DILocalVariable(name: "result", scope: !8128, file: !1, line: 2435, type: !24)
!8131 = !DILocation(line: 2435, column: 24, scope: !8128)
!8132 = !DILocalVariable(name: "toPtr", scope: !8128, file: !1, line: 2436, type: !202)
!8133 = !DILocation(line: 2436, column: 19, scope: !8128)
!8134 = !DILocation(line: 2437, column: 13, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8128, file: !1, line: 2437, column: 13)
!8136 = !DILocation(line: 2437, column: 13, scope: !8128)
!8137 = !DILocation(line: 2438, column: 17, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8135, file: !1, line: 2437, column: 26)
!8139 = !DILocation(line: 2438, column: 15, scope: !8138)
!8140 = !DILocation(line: 2439, column: 25, scope: !8138)
!8141 = !DILocation(line: 2439, column: 38, scope: !8138)
!8142 = !DILocation(line: 2439, column: 11, scope: !8138)
!8143 = !DILocation(line: 2439, column: 23, scope: !8138)
!8144 = !DILocation(line: 2440, column: 9, scope: !8138)
!8145 = !DILocation(line: 2442, column: 24, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8135, file: !1, line: 2441, column: 14)
!8147 = !DILocation(line: 2442, column: 17, scope: !8146)
!8148 = !DILocation(line: 2442, column: 15, scope: !8146)
!8149 = !DILocation(line: 2443, column: 16, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8146, file: !1, line: 2443, column: 15)
!8151 = !DILocation(line: 2443, column: 15, scope: !8146)
!8152 = !DILocation(line: 2444, column: 13, scope: !8150)
!8153 = !DILocation(line: 2445, column: 30, scope: !8146)
!8154 = !DILocation(line: 2445, column: 11, scope: !8146)
!8155 = !DILocation(line: 2445, column: 16, scope: !8146)
!8156 = !DILocation(line: 2445, column: 20, scope: !8146)
!8157 = !DILocation(line: 2446, column: 16, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8146, file: !1, line: 2446, column: 15)
!8159 = !DILocation(line: 2446, column: 21, scope: !8158)
!8160 = !DILocation(line: 2446, column: 15, scope: !8146)
!8161 = !DILocation(line: 2447, column: 13, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8158, file: !1, line: 2446, column: 26)
!8163 = !DILocation(line: 2448, column: 13, scope: !8162)
!8164 = !DILocation(line: 2450, column: 25, scope: !8146)
!8165 = !DILocation(line: 2450, column: 30, scope: !8146)
!8166 = !DILocation(line: 2450, column: 34, scope: !8146)
!8167 = !DILocation(line: 2450, column: 11, scope: !8146)
!8168 = !DILocation(line: 2450, column: 16, scope: !8146)
!8169 = !DILocation(line: 2450, column: 23, scope: !8146)
!8170 = !DILocation(line: 2452, column: 9, scope: !8128)
!8171 = !DILocation(line: 2452, column: 14, scope: !8128)
!8172 = !DILocation(line: 2452, column: 23, scope: !8128)
!8173 = !DILocation(line: 2453, column: 23, scope: !8128)
!8174 = !DILocation(line: 2453, column: 9, scope: !8128)
!8175 = !DILocation(line: 2453, column: 14, scope: !8128)
!8176 = !DILocation(line: 2453, column: 21, scope: !8128)
!8177 = !DILocation(line: 2454, column: 20, scope: !8128)
!8178 = !DILocation(line: 2454, column: 9, scope: !8128)
!8179 = !DILocation(line: 2454, column: 18, scope: !8128)
!8180 = !DILocation(line: 2455, column: 9, scope: !8128)
!8181 = !DILocation(line: 2455, column: 14, scope: !8128)
!8182 = !DILocation(line: 2455, column: 19, scope: !8128)
!8183 = !DILocation(line: 2455, column: 29, scope: !8128)
!8184 = !DILocation(line: 2456, column: 9, scope: !8128)
!8185 = !DILocation(line: 2456, column: 14, scope: !8128)
!8186 = !DILocation(line: 2456, column: 19, scope: !8128)
!8187 = !DILocation(line: 2456, column: 26, scope: !8128)
!8188 = !DILocation(line: 2457, column: 24, scope: !8128)
!8189 = !DILocation(line: 2457, column: 28, scope: !8128)
!8190 = !DILocation(line: 2457, column: 33, scope: !8128)
!8191 = !DILocation(line: 2457, column: 26, scope: !8128)
!8192 = !DILocation(line: 2457, column: 9, scope: !8128)
!8193 = !DILocation(line: 2457, column: 14, scope: !8128)
!8194 = !DILocation(line: 2457, column: 22, scope: !8128)
!8195 = !DILocation(line: 2458, column: 30, scope: !8128)
!8196 = !DILocation(line: 2458, column: 9, scope: !8128)
!8197 = !DILocation(line: 2458, column: 14, scope: !8128)
!8198 = !DILocation(line: 2458, column: 28, scope: !8128)
!8199 = !DILocation(line: 2459, column: 11, scope: !8128)
!8200 = !DILocation(line: 2459, column: 9, scope: !8128)
!8201 = !DILocalVariable(name: "rawNameEnd", scope: !8202, file: !1, line: 2461, type: !192)
!8202 = distinct !DILexicalBlock(scope: !8128, file: !1, line: 2460, column: 9)
!8203 = !DILocation(line: 2461, column: 23, scope: !8202)
!8204 = !DILocation(line: 2461, column: 36, scope: !8202)
!8205 = !DILocation(line: 2461, column: 41, scope: !8202)
!8206 = !DILocation(line: 2461, column: 51, scope: !8202)
!8207 = !DILocation(line: 2461, column: 56, scope: !8202)
!8208 = !DILocation(line: 2461, column: 49, scope: !8202)
!8209 = !DILocalVariable(name: "fromPtr", scope: !8202, file: !1, line: 2462, type: !192)
!8210 = !DILocation(line: 2462, column: 23, scope: !8202)
!8211 = !DILocation(line: 2462, column: 33, scope: !8202)
!8212 = !DILocation(line: 2462, column: 38, scope: !8202)
!8213 = !DILocation(line: 2463, column: 31, scope: !8202)
!8214 = !DILocation(line: 2463, column: 36, scope: !8202)
!8215 = !DILocation(line: 2463, column: 17, scope: !8202)
!8216 = !DILocation(line: 2464, column: 11, scope: !8202)
!8217 = !DILocalVariable(name: "bufSize", scope: !8218, file: !1, line: 2465, type: !223)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !1, line: 2464, column: 20)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !1, line: 2464, column: 11)
!8220 = distinct !DILexicalBlock(scope: !8202, file: !1, line: 2464, column: 11)
!8221 = !DILocation(line: 2465, column: 17, scope: !8218)
!8222 = !DILocalVariable(name: "convLen", scope: !8218, file: !1, line: 2466, type: !223)
!8223 = !DILocation(line: 2466, column: 17, scope: !8218)
!8224 = !DILocalVariable(name: "convert_res", scope: !8218, file: !1, line: 2467, type: !6470)
!8225 = !DILocation(line: 2467, column: 43, scope: !8218)
!8226 = !DILocation(line: 2467, column: 57, scope: !8218)
!8227 = !DILocation(line: 2470, column: 29, scope: !8218)
!8228 = !DILocation(line: 2470, column: 49, scope: !8218)
!8229 = !DILocation(line: 2470, column: 54, scope: !8218)
!8230 = !DILocation(line: 2470, column: 35, scope: !8218)
!8231 = !DILocation(line: 2470, column: 23, scope: !8218)
!8232 = !DILocation(line: 2470, column: 21, scope: !8218)
!8233 = !DILocation(line: 2471, column: 18, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8218, file: !1, line: 2471, column: 17)
!8235 = !DILocation(line: 2471, column: 30, scope: !8234)
!8236 = !DILocation(line: 2471, column: 56, scope: !8234)
!8237 = !DILocation(line: 2471, column: 60, scope: !8238)
!8238 = !DILexicalBlockFile(scope: !8234, file: !1, discriminator: 1)
!8239 = !DILocation(line: 2471, column: 72, scope: !8238)
!8240 = !DILocation(line: 2471, column: 17, scope: !8238)
!8241 = !DILocation(line: 2472, column: 34, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8234, file: !1, line: 2471, column: 106)
!8243 = !DILocation(line: 2472, column: 15, scope: !8242)
!8244 = !DILocation(line: 2472, column: 20, scope: !8242)
!8245 = !DILocation(line: 2472, column: 25, scope: !8242)
!8246 = !DILocation(line: 2472, column: 32, scope: !8242)
!8247 = !DILocation(line: 2473, column: 15, scope: !8242)
!8248 = !DILocation(line: 2475, column: 29, scope: !8218)
!8249 = !DILocation(line: 2475, column: 34, scope: !8218)
!8250 = !DILocation(line: 2475, column: 43, scope: !8218)
!8251 = !DILocation(line: 2475, column: 48, scope: !8218)
!8252 = !DILocation(line: 2475, column: 41, scope: !8218)
!8253 = !DILocation(line: 2475, column: 23, scope: !8218)
!8254 = !DILocation(line: 2475, column: 53, scope: !8218)
!8255 = !DILocation(line: 2475, column: 21, scope: !8218)
!8256 = !DILocalVariable(name: "temp", scope: !8257, file: !1, line: 2477, type: !169)
!8257 = distinct !DILexicalBlock(scope: !8218, file: !1, line: 2476, column: 13)
!8258 = !DILocation(line: 2477, column: 21, scope: !8257)
!8259 = !DILocation(line: 2477, column: 36, scope: !8257)
!8260 = !DILocation(line: 2478, column: 19, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8257, file: !1, line: 2478, column: 19)
!8262 = !DILocation(line: 2478, column: 24, scope: !8261)
!8263 = !DILocation(line: 2478, column: 19, scope: !8257)
!8264 = !DILocation(line: 2479, column: 17, scope: !8261)
!8265 = !DILocation(line: 2480, column: 26, scope: !8257)
!8266 = !DILocation(line: 2480, column: 15, scope: !8257)
!8267 = !DILocation(line: 2480, column: 20, scope: !8257)
!8268 = !DILocation(line: 2480, column: 24, scope: !8257)
!8269 = !DILocation(line: 2481, column: 29, scope: !8257)
!8270 = !DILocation(line: 2481, column: 36, scope: !8257)
!8271 = !DILocation(line: 2481, column: 34, scope: !8257)
!8272 = !DILocation(line: 2481, column: 15, scope: !8257)
!8273 = !DILocation(line: 2481, column: 20, scope: !8257)
!8274 = !DILocation(line: 2481, column: 27, scope: !8257)
!8275 = !DILocation(line: 2482, column: 35, scope: !8257)
!8276 = !DILocation(line: 2482, column: 42, scope: !8257)
!8277 = !DILocation(line: 2482, column: 40, scope: !8257)
!8278 = !DILocation(line: 2482, column: 21, scope: !8257)
!8279 = !DILocation(line: 2464, column: 11, scope: !8280)
!8280 = !DILexicalBlockFile(scope: !8219, file: !1, discriminator: 1)
!8281 = !DILocation(line: 2486, column: 37, scope: !8128)
!8282 = !DILocation(line: 2486, column: 42, scope: !8128)
!8283 = !DILocation(line: 2486, column: 9, scope: !8128)
!8284 = !DILocation(line: 2486, column: 14, scope: !8128)
!8285 = !DILocation(line: 2486, column: 19, scope: !8128)
!8286 = !DILocation(line: 2486, column: 23, scope: !8128)
!8287 = !DILocation(line: 2487, column: 10, scope: !8128)
!8288 = !DILocation(line: 2487, column: 16, scope: !8128)
!8289 = !DILocation(line: 2488, column: 28, scope: !8128)
!8290 = !DILocation(line: 2488, column: 36, scope: !8128)
!8291 = !DILocation(line: 2488, column: 41, scope: !8128)
!8292 = !DILocation(line: 2488, column: 46, scope: !8128)
!8293 = !DILocation(line: 2488, column: 51, scope: !8128)
!8294 = !DILocation(line: 2488, column: 60, scope: !8128)
!8295 = !DILocation(line: 2488, column: 65, scope: !8128)
!8296 = !DILocation(line: 2488, column: 18, scope: !8128)
!8297 = !DILocation(line: 2488, column: 16, scope: !8128)
!8298 = !DILocation(line: 2489, column: 13, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8128, file: !1, line: 2489, column: 13)
!8300 = !DILocation(line: 2489, column: 13, scope: !8128)
!8301 = !DILocation(line: 2490, column: 18, scope: !8299)
!8302 = !DILocation(line: 2490, column: 11, scope: !8299)
!8303 = !DILocation(line: 2491, column: 13, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8128, file: !1, line: 2491, column: 13)
!8305 = !DILocation(line: 2491, column: 13, scope: !8128)
!8306 = !DILocation(line: 2492, column: 11, scope: !8304)
!8307 = !DILocation(line: 2492, column: 31, scope: !8304)
!8308 = !DILocation(line: 2492, column: 43, scope: !8304)
!8309 = !DILocation(line: 2492, column: 48, scope: !8304)
!8310 = !DILocation(line: 2492, column: 53, scope: !8304)
!8311 = !DILocation(line: 2493, column: 50, scope: !8304)
!8312 = !DILocation(line: 2493, column: 31, scope: !8304)
!8313 = !DILocation(line: 2494, column: 18, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8304, file: !1, line: 2494, column: 18)
!8315 = !DILocation(line: 2494, column: 18, scope: !8304)
!8316 = !DILocation(line: 2495, column: 25, scope: !8314)
!8317 = !DILocation(line: 2495, column: 33, scope: !8314)
!8318 = !DILocation(line: 2495, column: 38, scope: !8314)
!8319 = !DILocation(line: 2495, column: 41, scope: !8314)
!8320 = !DILocation(line: 2495, column: 11, scope: !8314)
!8321 = !DILocation(line: 2496, column: 20, scope: !8128)
!8322 = !DILocation(line: 2496, column: 9, scope: !8128)
!8323 = !DILocation(line: 2497, column: 9, scope: !8128)
!8324 = !DILocalVariable(name: "rawName", scope: !8325, file: !1, line: 2503, type: !192)
!8325 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2502, column: 7)
!8326 = !DILocation(line: 2503, column: 21, scope: !8325)
!8327 = !DILocation(line: 2503, column: 31, scope: !8325)
!8328 = !DILocation(line: 2503, column: 35, scope: !8325)
!8329 = !DILocation(line: 2503, column: 40, scope: !8325)
!8330 = !DILocation(line: 2503, column: 33, scope: !8325)
!8331 = !DILocalVariable(name: "result", scope: !8325, file: !1, line: 2504, type: !24)
!8332 = !DILocation(line: 2504, column: 24, scope: !8325)
!8333 = !DILocalVariable(name: "bindings", scope: !8325, file: !1, line: 2505, type: !483)
!8334 = !DILocation(line: 2505, column: 18, scope: !8325)
!8335 = !DILocalVariable(name: "noElmHandlers", scope: !8325, file: !1, line: 2506, type: !159)
!8336 = !DILocation(line: 2506, column: 18, scope: !8325)
!8337 = !DILocalVariable(name: "name", scope: !8325, file: !1, line: 2507, type: !603)
!8338 = !DILocation(line: 2507, column: 18, scope: !8325)
!8339 = !DILocation(line: 2508, column: 37, scope: !8325)
!8340 = !DILocation(line: 2508, column: 47, scope: !8325)
!8341 = !DILocation(line: 2508, column: 52, scope: !8325)
!8342 = !DILocation(line: 2509, column: 36, scope: !8325)
!8343 = !DILocation(line: 2509, column: 46, scope: !8325)
!8344 = !DILocation(line: 2509, column: 44, scope: !8325)
!8345 = !DILocation(line: 2508, column: 20, scope: !8325)
!8346 = !DILocation(line: 2508, column: 14, scope: !8325)
!8347 = !DILocation(line: 2508, column: 18, scope: !8325)
!8348 = !DILocation(line: 2510, column: 19, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2510, column: 13)
!8350 = !DILocation(line: 2510, column: 14, scope: !8349)
!8351 = !DILocation(line: 2510, column: 13, scope: !8325)
!8352 = !DILocation(line: 2511, column: 11, scope: !8349)
!8353 = !DILocation(line: 2512, column: 9, scope: !8325)
!8354 = !DILocation(line: 2513, column: 28, scope: !8325)
!8355 = !DILocation(line: 2513, column: 36, scope: !8325)
!8356 = !DILocation(line: 2513, column: 41, scope: !8325)
!8357 = !DILocation(line: 2513, column: 18, scope: !8325)
!8358 = !DILocation(line: 2513, column: 16, scope: !8325)
!8359 = !DILocation(line: 2514, column: 13, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2514, column: 13)
!8361 = !DILocation(line: 2514, column: 13, scope: !8325)
!8362 = !DILocation(line: 2515, column: 18, scope: !8360)
!8363 = !DILocation(line: 2515, column: 11, scope: !8360)
!8364 = !DILocation(line: 2516, column: 9, scope: !8325)
!8365 = !DILocation(line: 2517, column: 13, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2517, column: 13)
!8367 = !DILocation(line: 2517, column: 13, scope: !8325)
!8368 = !DILocation(line: 2518, column: 11, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8366, file: !1, line: 2517, column: 34)
!8370 = !DILocation(line: 2518, column: 31, scope: !8369)
!8371 = !DILocation(line: 2518, column: 48, scope: !8369)
!8372 = !DILocation(line: 2518, column: 72, scope: !8369)
!8373 = !DILocation(line: 2518, column: 53, scope: !8369)
!8374 = !DILocation(line: 2519, column: 25, scope: !8369)
!8375 = !DILocation(line: 2520, column: 9, scope: !8369)
!8376 = !DILocation(line: 2521, column: 13, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2521, column: 13)
!8378 = !DILocation(line: 2521, column: 13, scope: !8325)
!8379 = !DILocation(line: 2522, column: 15, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !1, line: 2522, column: 15)
!8381 = distinct !DILexicalBlock(scope: !8377, file: !1, line: 2521, column: 32)
!8382 = !DILocation(line: 2522, column: 15, scope: !8381)
!8383 = !DILocation(line: 2523, column: 25, scope: !8380)
!8384 = !DILocation(line: 2523, column: 24, scope: !8380)
!8385 = !DILocation(line: 2523, column: 14, scope: !8380)
!8386 = !DILocation(line: 2523, column: 22, scope: !8380)
!8387 = !DILocation(line: 2523, column: 13, scope: !8380)
!8388 = !DILocation(line: 2524, column: 11, scope: !8381)
!8389 = !DILocation(line: 2524, column: 29, scope: !8381)
!8390 = !DILocation(line: 2524, column: 46, scope: !8381)
!8391 = !DILocation(line: 2525, column: 25, scope: !8381)
!8392 = !DILocation(line: 2526, column: 9, scope: !8381)
!8393 = !DILocation(line: 2527, column: 13, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2527, column: 13)
!8395 = !DILocation(line: 2527, column: 27, scope: !8394)
!8396 = !DILocation(line: 2527, column: 30, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !8394, file: !1, discriminator: 1)
!8398 = !DILocation(line: 2527, column: 13, scope: !8397)
!8399 = !DILocation(line: 2528, column: 25, scope: !8394)
!8400 = !DILocation(line: 2528, column: 33, scope: !8394)
!8401 = !DILocation(line: 2528, column: 38, scope: !8394)
!8402 = !DILocation(line: 2528, column: 41, scope: !8394)
!8403 = !DILocation(line: 2528, column: 11, scope: !8394)
!8404 = !DILocation(line: 2529, column: 20, scope: !8325)
!8405 = !DILocation(line: 2529, column: 9, scope: !8325)
!8406 = !DILocation(line: 2530, column: 9, scope: !8325)
!8407 = !DILocation(line: 2530, column: 16, scope: !8408)
!8408 = !DILexicalBlockFile(scope: !8325, file: !1, discriminator: 1)
!8409 = !DILocation(line: 2530, column: 9, scope: !8408)
!8410 = !DILocalVariable(name: "b", scope: !8411, file: !1, line: 2531, type: !483)
!8411 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2530, column: 26)
!8412 = !DILocation(line: 2531, column: 20, scope: !8411)
!8413 = !DILocation(line: 2531, column: 24, scope: !8411)
!8414 = !DILocation(line: 2532, column: 15, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8411, file: !1, line: 2532, column: 15)
!8416 = !DILocation(line: 2532, column: 15, scope: !8411)
!8417 = !DILocation(line: 2533, column: 13, scope: !8415)
!8418 = !DILocation(line: 2533, column: 37, scope: !8415)
!8419 = !DILocation(line: 2533, column: 49, scope: !8415)
!8420 = !DILocation(line: 2533, column: 52, scope: !8415)
!8421 = !DILocation(line: 2533, column: 60, scope: !8415)
!8422 = !DILocation(line: 2534, column: 22, scope: !8411)
!8423 = !DILocation(line: 2534, column: 32, scope: !8411)
!8424 = !DILocation(line: 2534, column: 20, scope: !8411)
!8425 = !DILocation(line: 2535, column: 31, scope: !8411)
!8426 = !DILocation(line: 2535, column: 11, scope: !8411)
!8427 = !DILocation(line: 2535, column: 14, scope: !8411)
!8428 = !DILocation(line: 2535, column: 29, scope: !8411)
!8429 = !DILocation(line: 2536, column: 29, scope: !8411)
!8430 = !DILocation(line: 2536, column: 11, scope: !8411)
!8431 = !DILocation(line: 2536, column: 27, scope: !8411)
!8432 = !DILocation(line: 2537, column: 32, scope: !8411)
!8433 = !DILocation(line: 2537, column: 35, scope: !8411)
!8434 = !DILocation(line: 2537, column: 11, scope: !8411)
!8435 = !DILocation(line: 2537, column: 14, scope: !8411)
!8436 = !DILocation(line: 2537, column: 22, scope: !8411)
!8437 = !DILocation(line: 2537, column: 30, scope: !8411)
!8438 = !DILocation(line: 2530, column: 9, scope: !8439)
!8439 = !DILexicalBlockFile(scope: !8325, file: !1, discriminator: 2)
!8440 = !DILocation(line: 2540, column: 11, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2540, column: 11)
!8442 = !DILocation(line: 2540, column: 20, scope: !8441)
!8443 = !DILocation(line: 2540, column: 11, scope: !7859)
!8444 = !DILocation(line: 2541, column: 32, scope: !8441)
!8445 = !DILocation(line: 2541, column: 40, scope: !8441)
!8446 = !DILocation(line: 2541, column: 46, scope: !8441)
!8447 = !DILocation(line: 2541, column: 51, scope: !8441)
!8448 = !DILocation(line: 2541, column: 16, scope: !8441)
!8449 = !DILocation(line: 2541, column: 9, scope: !8441)
!8450 = !DILocation(line: 2542, column: 7, scope: !7859)
!8451 = !DILocation(line: 2544, column: 11, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2544, column: 11)
!8453 = !DILocation(line: 2544, column: 23, scope: !8452)
!8454 = !DILocation(line: 2544, column: 20, scope: !8452)
!8455 = !DILocation(line: 2544, column: 11, scope: !7859)
!8456 = !DILocation(line: 2545, column: 9, scope: !8452)
!8457 = !DILocalVariable(name: "len", scope: !8458, file: !1, line: 2547, type: !223)
!8458 = distinct !DILexicalBlock(scope: !8452, file: !1, line: 2546, column: 12)
!8459 = !DILocation(line: 2547, column: 13, scope: !8458)
!8460 = !DILocalVariable(name: "rawName", scope: !8458, file: !1, line: 2548, type: !192)
!8461 = !DILocation(line: 2548, column: 21, scope: !8458)
!8462 = !DILocalVariable(name: "tag", scope: !8458, file: !1, line: 2549, type: !594)
!8463 = !DILocation(line: 2549, column: 14, scope: !8458)
!8464 = !DILocation(line: 2549, column: 20, scope: !8458)
!8465 = !DILocation(line: 2550, column: 20, scope: !8458)
!8466 = !DILocation(line: 2550, column: 25, scope: !8458)
!8467 = !DILocation(line: 2550, column: 9, scope: !8458)
!8468 = !DILocation(line: 2550, column: 18, scope: !8458)
!8469 = !DILocation(line: 2551, column: 23, scope: !8458)
!8470 = !DILocation(line: 2551, column: 9, scope: !8458)
!8471 = !DILocation(line: 2551, column: 14, scope: !8458)
!8472 = !DILocation(line: 2551, column: 21, scope: !8458)
!8473 = !DILocation(line: 2552, column: 23, scope: !8458)
!8474 = !DILocation(line: 2552, column: 9, scope: !8458)
!8475 = !DILocation(line: 2552, column: 21, scope: !8458)
!8476 = !DILocation(line: 2553, column: 19, scope: !8458)
!8477 = !DILocation(line: 2553, column: 23, scope: !8458)
!8478 = !DILocation(line: 2553, column: 28, scope: !8458)
!8479 = !DILocation(line: 2553, column: 43, scope: !8458)
!8480 = !DILocation(line: 2553, column: 21, scope: !8458)
!8481 = !DILocation(line: 2553, column: 17, scope: !8458)
!8482 = !DILocation(line: 2554, column: 15, scope: !8458)
!8483 = !DILocation(line: 2554, column: 13, scope: !8458)
!8484 = !DILocation(line: 2555, column: 13, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8458, file: !1, line: 2555, column: 13)
!8486 = !DILocation(line: 2555, column: 20, scope: !8485)
!8487 = !DILocation(line: 2555, column: 25, scope: !8485)
!8488 = !DILocation(line: 2555, column: 17, scope: !8485)
!8489 = !DILocation(line: 2556, column: 13, scope: !8485)
!8490 = !DILocation(line: 2556, column: 23, scope: !8491)
!8491 = !DILexicalBlockFile(scope: !8485, file: !1, discriminator: 1)
!8492 = !DILocation(line: 2556, column: 28, scope: !8491)
!8493 = !DILocation(line: 2556, column: 37, scope: !8491)
!8494 = !DILocation(line: 2556, column: 46, scope: !8491)
!8495 = !DILocation(line: 2556, column: 16, scope: !8491)
!8496 = !DILocation(line: 2556, column: 51, scope: !8491)
!8497 = !DILocation(line: 2555, column: 13, scope: !8498)
!8498 = !DILexicalBlockFile(scope: !8458, file: !1, discriminator: 1)
!8499 = !DILocation(line: 2557, column: 22, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8485, file: !1, line: 2556, column: 57)
!8501 = !DILocation(line: 2557, column: 12, scope: !8500)
!8502 = !DILocation(line: 2557, column: 20, scope: !8500)
!8503 = !DILocation(line: 2558, column: 11, scope: !8500)
!8504 = !DILocation(line: 2560, column: 11, scope: !8458)
!8505 = !DILocation(line: 2560, column: 9, scope: !8458)
!8506 = !DILocation(line: 2561, column: 13, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8458, file: !1, line: 2561, column: 13)
!8508 = !DILocation(line: 2561, column: 13, scope: !8458)
!8509 = !DILocalVariable(name: "localPart", scope: !8510, file: !1, line: 2562, type: !210)
!8510 = distinct !DILexicalBlock(scope: !8507, file: !1, line: 2561, column: 32)
!8511 = !DILocation(line: 2562, column: 27, scope: !8510)
!8512 = !DILocalVariable(name: "prefix", scope: !8510, file: !1, line: 2563, type: !210)
!8513 = !DILocation(line: 2563, column: 27, scope: !8510)
!8514 = !DILocalVariable(name: "uri", scope: !8510, file: !1, line: 2564, type: !202)
!8515 = !DILocation(line: 2564, column: 21, scope: !8510)
!8516 = !DILocation(line: 2565, column: 23, scope: !8510)
!8517 = !DILocation(line: 2565, column: 28, scope: !8510)
!8518 = !DILocation(line: 2565, column: 33, scope: !8510)
!8519 = !DILocation(line: 2565, column: 21, scope: !8510)
!8520 = !DILocation(line: 2566, column: 15, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8510, file: !1, line: 2566, column: 15)
!8522 = !DILocation(line: 2566, column: 18, scope: !8521)
!8523 = !DILocation(line: 2566, column: 21, scope: !8524)
!8524 = !DILexicalBlockFile(scope: !8521, file: !1, discriminator: 1)
!8525 = !DILocation(line: 2566, column: 15, scope: !8524)
!8526 = !DILocation(line: 2571, column: 31, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8521, file: !1, line: 2566, column: 32)
!8528 = !DILocation(line: 2571, column: 36, scope: !8527)
!8529 = !DILocation(line: 2571, column: 41, scope: !8527)
!8530 = !DILocation(line: 2571, column: 47, scope: !8527)
!8531 = !DILocation(line: 2571, column: 52, scope: !8527)
!8532 = !DILocation(line: 2571, column: 57, scope: !8527)
!8533 = !DILocation(line: 2571, column: 45, scope: !8527)
!8534 = !DILocation(line: 2571, column: 17, scope: !8527)
!8535 = !DILocation(line: 2573, column: 13, scope: !8527)
!8536 = !DILocation(line: 2573, column: 21, scope: !8537)
!8537 = !DILexicalBlockFile(scope: !8527, file: !1, discriminator: 1)
!8538 = !DILocation(line: 2573, column: 20, scope: !8537)
!8539 = !DILocation(line: 2573, column: 13, scope: !8537)
!8540 = !DILocation(line: 2573, column: 51, scope: !8541)
!8541 = !DILexicalBlockFile(scope: !8527, file: !1, discriminator: 2)
!8542 = !DILocation(line: 2573, column: 41, scope: !8541)
!8543 = !DILocation(line: 2573, column: 36, scope: !8541)
!8544 = !DILocation(line: 2573, column: 39, scope: !8541)
!8545 = !DILocation(line: 2573, column: 13, scope: !8541)
!8546 = !DILocation(line: 2574, column: 34, scope: !8527)
!8547 = !DILocation(line: 2574, column: 39, scope: !8527)
!8548 = !DILocation(line: 2574, column: 44, scope: !8527)
!8549 = !DILocation(line: 2574, column: 20, scope: !8527)
!8550 = !DILocation(line: 2575, column: 17, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8527, file: !1, line: 2575, column: 17)
!8552 = !DILocation(line: 2575, column: 29, scope: !8551)
!8553 = !DILocation(line: 2575, column: 32, scope: !8554)
!8554 = !DILexicalBlockFile(scope: !8551, file: !1, discriminator: 1)
!8555 = !DILocation(line: 2575, column: 17, scope: !8554)
!8556 = !DILocation(line: 2576, column: 24, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8551, file: !1, line: 2575, column: 40)
!8558 = !DILocation(line: 2576, column: 19, scope: !8557)
!8559 = !DILocation(line: 2576, column: 22, scope: !8557)
!8560 = !DILocation(line: 2577, column: 15, scope: !8557)
!8561 = !DILocation(line: 2577, column: 23, scope: !8562)
!8562 = !DILexicalBlockFile(scope: !8557, file: !1, discriminator: 1)
!8563 = !DILocation(line: 2577, column: 22, scope: !8562)
!8564 = !DILocation(line: 2577, column: 15, scope: !8562)
!8565 = !DILocation(line: 2577, column: 47, scope: !8566)
!8566 = !DILexicalBlockFile(scope: !8557, file: !1, discriminator: 2)
!8567 = !DILocation(line: 2577, column: 40, scope: !8566)
!8568 = !DILocation(line: 2577, column: 35, scope: !8566)
!8569 = !DILocation(line: 2577, column: 38, scope: !8566)
!8570 = !DILocation(line: 2577, column: 15, scope: !8566)
!8571 = !DILocation(line: 2578, column: 14, scope: !8557)
!8572 = !DILocation(line: 2579, column: 14, scope: !8527)
!8573 = !DILocation(line: 2579, column: 18, scope: !8527)
!8574 = !DILocation(line: 2580, column: 11, scope: !8527)
!8575 = !DILocation(line: 2581, column: 11, scope: !8510)
!8576 = !DILocation(line: 2581, column: 29, scope: !8510)
!8577 = !DILocation(line: 2581, column: 41, scope: !8510)
!8578 = !DILocation(line: 2581, column: 46, scope: !8510)
!8579 = !DILocation(line: 2581, column: 51, scope: !8510)
!8580 = !DILocation(line: 2582, column: 9, scope: !8510)
!8581 = !DILocation(line: 2583, column: 18, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8507, file: !1, line: 2583, column: 18)
!8583 = !DILocation(line: 2583, column: 18, scope: !8507)
!8584 = !DILocation(line: 2584, column: 25, scope: !8582)
!8585 = !DILocation(line: 2584, column: 33, scope: !8582)
!8586 = !DILocation(line: 2584, column: 38, scope: !8582)
!8587 = !DILocation(line: 2584, column: 41, scope: !8582)
!8588 = !DILocation(line: 2584, column: 11, scope: !8582)
!8589 = !DILocation(line: 2585, column: 9, scope: !8458)
!8590 = !DILocation(line: 2585, column: 16, scope: !8498)
!8591 = !DILocation(line: 2585, column: 21, scope: !8498)
!8592 = !DILocation(line: 2585, column: 9, scope: !8498)
!8593 = !DILocalVariable(name: "b", scope: !8594, file: !1, line: 2586, type: !483)
!8594 = distinct !DILexicalBlock(scope: !8458, file: !1, line: 2585, column: 31)
!8595 = !DILocation(line: 2586, column: 20, scope: !8594)
!8596 = !DILocation(line: 2586, column: 24, scope: !8594)
!8597 = !DILocation(line: 2586, column: 29, scope: !8594)
!8598 = !DILocation(line: 2587, column: 15, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8594, file: !1, line: 2587, column: 15)
!8600 = !DILocation(line: 2587, column: 15, scope: !8594)
!8601 = !DILocation(line: 2588, column: 13, scope: !8599)
!8602 = !DILocation(line: 2588, column: 37, scope: !8599)
!8603 = !DILocation(line: 2588, column: 49, scope: !8599)
!8604 = !DILocation(line: 2588, column: 52, scope: !8599)
!8605 = !DILocation(line: 2588, column: 60, scope: !8599)
!8606 = !DILocation(line: 2589, column: 27, scope: !8594)
!8607 = !DILocation(line: 2589, column: 32, scope: !8594)
!8608 = !DILocation(line: 2589, column: 42, scope: !8594)
!8609 = !DILocation(line: 2589, column: 11, scope: !8594)
!8610 = !DILocation(line: 2589, column: 16, scope: !8594)
!8611 = !DILocation(line: 2589, column: 25, scope: !8594)
!8612 = !DILocation(line: 2590, column: 31, scope: !8594)
!8613 = !DILocation(line: 2590, column: 11, scope: !8594)
!8614 = !DILocation(line: 2590, column: 14, scope: !8594)
!8615 = !DILocation(line: 2590, column: 29, scope: !8594)
!8616 = !DILocation(line: 2591, column: 29, scope: !8594)
!8617 = !DILocation(line: 2591, column: 11, scope: !8594)
!8618 = !DILocation(line: 2591, column: 27, scope: !8594)
!8619 = !DILocation(line: 2592, column: 32, scope: !8594)
!8620 = !DILocation(line: 2592, column: 35, scope: !8594)
!8621 = !DILocation(line: 2592, column: 11, scope: !8594)
!8622 = !DILocation(line: 2592, column: 14, scope: !8594)
!8623 = !DILocation(line: 2592, column: 22, scope: !8594)
!8624 = !DILocation(line: 2592, column: 30, scope: !8594)
!8625 = !DILocation(line: 2585, column: 9, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !8458, file: !1, discriminator: 2)
!8627 = !DILocation(line: 2594, column: 13, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8458, file: !1, line: 2594, column: 13)
!8629 = !DILocation(line: 2594, column: 22, scope: !8628)
!8630 = !DILocation(line: 2594, column: 13, scope: !8458)
!8631 = !DILocation(line: 2595, column: 34, scope: !8628)
!8632 = !DILocation(line: 2595, column: 42, scope: !8628)
!8633 = !DILocation(line: 2595, column: 48, scope: !8628)
!8634 = !DILocation(line: 2595, column: 53, scope: !8628)
!8635 = !DILocation(line: 2595, column: 18, scope: !8628)
!8636 = !DILocation(line: 2595, column: 11, scope: !8628)
!8637 = !DILocation(line: 2597, column: 7, scope: !7859)
!8638 = !DILocalVariable(name: "n", scope: !8639, file: !1, line: 2600, type: !223)
!8639 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2599, column: 7)
!8640 = !DILocation(line: 2600, column: 13, scope: !8639)
!8641 = !DILocation(line: 2600, column: 17, scope: !8639)
!8642 = !DILocation(line: 2601, column: 13, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8639, file: !1, line: 2601, column: 13)
!8644 = !DILocation(line: 2601, column: 15, scope: !8643)
!8645 = !DILocation(line: 2601, column: 13, scope: !8639)
!8646 = !DILocation(line: 2602, column: 11, scope: !8643)
!8647 = !DILocation(line: 2603, column: 13, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8639, file: !1, line: 2603, column: 13)
!8649 = !DILocation(line: 2603, column: 13, scope: !8639)
!8650 = !DILocalVariable(name: "buf", scope: !8651, file: !1, line: 2604, type: !7065)
!8651 = distinct !DILexicalBlock(scope: !8648, file: !1, line: 2603, column: 35)
!8652 = !DILocation(line: 2604, column: 20, scope: !8651)
!8653 = !DILocation(line: 2605, column: 11, scope: !8651)
!8654 = !DILocation(line: 2605, column: 32, scope: !8651)
!8655 = !DILocation(line: 2605, column: 44, scope: !8651)
!8656 = !DILocation(line: 2605, column: 59, scope: !8651)
!8657 = !DILocation(line: 2605, column: 71, scope: !8651)
!8658 = !DILocation(line: 2605, column: 49, scope: !8651)
!8659 = !DILocation(line: 2605, column: 11, scope: !8660)
!8660 = !DILexicalBlockFile(scope: !8651, file: !1, discriminator: 1)
!8661 = !DILocation(line: 2606, column: 9, scope: !8651)
!8662 = !DILocation(line: 2607, column: 18, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8648, file: !1, line: 2607, column: 18)
!8664 = !DILocation(line: 2607, column: 18, scope: !8648)
!8665 = !DILocation(line: 2608, column: 25, scope: !8663)
!8666 = !DILocation(line: 2608, column: 33, scope: !8663)
!8667 = !DILocation(line: 2608, column: 38, scope: !8663)
!8668 = !DILocation(line: 2608, column: 41, scope: !8663)
!8669 = !DILocation(line: 2608, column: 11, scope: !8663)
!8670 = !DILocation(line: 2610, column: 7, scope: !7859)
!8671 = !DILocation(line: 2612, column: 7, scope: !7859)
!8672 = !DILocation(line: 2614, column: 11, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2614, column: 11)
!8674 = !DILocation(line: 2614, column: 11, scope: !7859)
!8675 = !DILocalVariable(name: "c", scope: !8676, file: !1, line: 2615, type: !203)
!8676 = distinct !DILexicalBlock(scope: !8673, file: !1, line: 2614, column: 33)
!8677 = !DILocation(line: 2615, column: 18, scope: !8676)
!8678 = !DILocation(line: 2616, column: 9, scope: !8676)
!8679 = !DILocation(line: 2616, column: 30, scope: !8676)
!8680 = !DILocation(line: 2617, column: 7, scope: !8676)
!8681 = !DILocation(line: 2618, column: 16, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8673, file: !1, line: 2618, column: 16)
!8683 = !DILocation(line: 2618, column: 16, scope: !8673)
!8684 = !DILocation(line: 2619, column: 23, scope: !8682)
!8685 = !DILocation(line: 2619, column: 31, scope: !8682)
!8686 = !DILocation(line: 2619, column: 36, scope: !8682)
!8687 = !DILocation(line: 2619, column: 39, scope: !8682)
!8688 = !DILocation(line: 2619, column: 9, scope: !8682)
!8689 = !DILocation(line: 2620, column: 7, scope: !7859)
!8690 = !DILocalVariable(name: "result", scope: !8691, file: !1, line: 2623, type: !24)
!8691 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2622, column: 7)
!8692 = !DILocation(line: 2623, column: 24, scope: !8691)
!8693 = !DILocation(line: 2624, column: 13, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8691, file: !1, line: 2624, column: 13)
!8695 = !DILocation(line: 2624, column: 13, scope: !8691)
!8696 = !DILocation(line: 2625, column: 11, scope: !8694)
!8697 = !DILocation(line: 2625, column: 36, scope: !8694)
!8698 = !DILocation(line: 2642, column: 18, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8694, file: !1, line: 2642, column: 18)
!8700 = !DILocation(line: 2642, column: 18, scope: !8694)
!8701 = !DILocation(line: 2643, column: 25, scope: !8699)
!8702 = !DILocation(line: 2643, column: 33, scope: !8699)
!8703 = !DILocation(line: 2643, column: 38, scope: !8699)
!8704 = !DILocation(line: 2643, column: 41, scope: !8699)
!8705 = !DILocation(line: 2643, column: 11, scope: !8699)
!8706 = !DILocation(line: 2644, column: 33, scope: !8691)
!8707 = !DILocation(line: 2644, column: 41, scope: !8691)
!8708 = !DILocation(line: 2644, column: 53, scope: !8691)
!8709 = !DILocation(line: 2644, column: 58, scope: !8691)
!8710 = !DILocation(line: 2644, column: 67, scope: !8691)
!8711 = !DILocation(line: 2644, column: 18, scope: !8691)
!8712 = !DILocation(line: 2644, column: 16, scope: !8691)
!8713 = !DILocation(line: 2645, column: 13, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8691, file: !1, line: 2645, column: 13)
!8715 = !DILocation(line: 2645, column: 20, scope: !8714)
!8716 = !DILocation(line: 2645, column: 13, scope: !8691)
!8717 = !DILocation(line: 2646, column: 18, scope: !8714)
!8718 = !DILocation(line: 2646, column: 11, scope: !8714)
!8719 = !DILocation(line: 2647, column: 19, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8714, file: !1, line: 2647, column: 18)
!8721 = !DILocation(line: 2647, column: 18, scope: !8714)
!8722 = !DILocation(line: 2648, column: 11, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8720, file: !1, line: 2647, column: 25)
!8724 = !DILocation(line: 2648, column: 21, scope: !8723)
!8725 = !DILocation(line: 2649, column: 18, scope: !8723)
!8726 = !DILocation(line: 2649, column: 11, scope: !8723)
!8727 = !DILocation(line: 2652, column: 7, scope: !7859)
!8728 = !DILocation(line: 2654, column: 11, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2654, column: 11)
!8730 = !DILocation(line: 2654, column: 11, scope: !7859)
!8731 = !DILocation(line: 2655, column: 20, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8729, file: !1, line: 2654, column: 21)
!8733 = !DILocation(line: 2655, column: 10, scope: !8732)
!8734 = !DILocation(line: 2655, column: 18, scope: !8732)
!8735 = !DILocation(line: 2656, column: 9, scope: !8732)
!8736 = !DILocation(line: 2658, column: 11, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2658, column: 11)
!8738 = !DILocation(line: 2658, column: 11, scope: !7859)
!8739 = !DILocation(line: 2659, column: 13, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !1, line: 2659, column: 13)
!8741 = distinct !DILexicalBlock(scope: !8737, file: !1, line: 2658, column: 33)
!8742 = !DILocation(line: 2659, column: 13, scope: !8741)
!8743 = !DILocalVariable(name: "dataPtr", scope: !8744, file: !1, line: 2660, type: !648)
!8744 = distinct !DILexicalBlock(scope: !8740, file: !1, line: 2659, column: 35)
!8745 = !DILocation(line: 2660, column: 18, scope: !8744)
!8746 = !DILocation(line: 2660, column: 37, scope: !8744)
!8747 = !DILocation(line: 2661, column: 11, scope: !8744)
!8748 = !DILocation(line: 2662, column: 11, scope: !8744)
!8749 = !DILocation(line: 2662, column: 32, scope: !8744)
!8750 = !DILocation(line: 2662, column: 44, scope: !8744)
!8751 = !DILocation(line: 2663, column: 38, scope: !8744)
!8752 = !DILocation(line: 2663, column: 57, scope: !8744)
!8753 = !DILocation(line: 2663, column: 46, scope: !8744)
!8754 = !DILocation(line: 2663, column: 32, scope: !8744)
!8755 = !DILocation(line: 2664, column: 9, scope: !8744)
!8756 = !DILocation(line: 2666, column: 11, scope: !8740)
!8757 = !DILocation(line: 2666, column: 32, scope: !8740)
!8758 = !DILocation(line: 2667, column: 44, scope: !8740)
!8759 = !DILocation(line: 2668, column: 50, scope: !8740)
!8760 = !DILocation(line: 2668, column: 68, scope: !8740)
!8761 = !DILocation(line: 2668, column: 54, scope: !8740)
!8762 = !DILocation(line: 2668, column: 32, scope: !8740)
!8763 = !DILocation(line: 2669, column: 7, scope: !8741)
!8764 = !DILocation(line: 2670, column: 16, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8737, file: !1, line: 2670, column: 16)
!8766 = !DILocation(line: 2670, column: 16, scope: !8737)
!8767 = !DILocation(line: 2671, column: 23, scope: !8765)
!8768 = !DILocation(line: 2671, column: 31, scope: !8765)
!8769 = !DILocation(line: 2671, column: 36, scope: !8765)
!8770 = !DILocation(line: 2671, column: 39, scope: !8765)
!8771 = !DILocation(line: 2671, column: 9, scope: !8765)
!8772 = !DILocation(line: 2675, column: 11, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2675, column: 11)
!8774 = !DILocation(line: 2675, column: 25, scope: !8773)
!8775 = !DILocation(line: 2675, column: 11, scope: !7859)
!8776 = !DILocation(line: 2676, column: 20, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8773, file: !1, line: 2675, column: 31)
!8778 = !DILocation(line: 2676, column: 10, scope: !8777)
!8779 = !DILocation(line: 2676, column: 18, scope: !8777)
!8780 = !DILocation(line: 2677, column: 9, scope: !8777)
!8781 = !DILocation(line: 2679, column: 11, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2679, column: 11)
!8783 = !DILocation(line: 2679, column: 23, scope: !8782)
!8784 = !DILocation(line: 2679, column: 20, scope: !8782)
!8785 = !DILocation(line: 2679, column: 11, scope: !7859)
!8786 = !DILocation(line: 2680, column: 20, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8782, file: !1, line: 2679, column: 38)
!8788 = !DILocation(line: 2680, column: 10, scope: !8787)
!8789 = !DILocation(line: 2680, column: 18, scope: !8787)
!8790 = !DILocation(line: 2681, column: 9, scope: !8787)
!8791 = !DILocation(line: 2683, column: 18, scope: !7859)
!8792 = !DILocation(line: 2683, column: 8, scope: !7859)
!8793 = !DILocation(line: 2683, column: 16, scope: !7859)
!8794 = !DILocation(line: 2684, column: 7, scope: !7859)
!8795 = !DILocalVariable(name: "charDataHandler", scope: !8796, file: !1, line: 2687, type: !219)
!8796 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2686, column: 7)
!8797 = !DILocation(line: 2687, column: 34, scope: !8796)
!8798 = !DILocation(line: 2687, column: 52, scope: !8796)
!8799 = !DILocation(line: 2688, column: 13, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8796, file: !1, line: 2688, column: 13)
!8801 = !DILocation(line: 2688, column: 13, scope: !8796)
!8802 = !DILocation(line: 2689, column: 15, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !1, line: 2689, column: 15)
!8804 = distinct !DILexicalBlock(scope: !8800, file: !1, line: 2688, column: 30)
!8805 = !DILocation(line: 2689, column: 15, scope: !8804)
!8806 = !DILocation(line: 2690, column: 13, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !1, line: 2689, column: 37)
!8808 = !DILocalVariable(name: "dataPtr", scope: !8809, file: !1, line: 2691, type: !648)
!8809 = distinct !DILexicalBlock(scope: !8810, file: !1, line: 2690, column: 22)
!8810 = distinct !DILexicalBlock(scope: !8811, file: !1, line: 2690, column: 13)
!8811 = distinct !DILexicalBlock(scope: !8807, file: !1, line: 2690, column: 13)
!8812 = !DILocation(line: 2691, column: 22, scope: !8809)
!8813 = !DILocation(line: 2691, column: 41, scope: !8809)
!8814 = !DILocalVariable(name: "convert_res", scope: !8809, file: !1, line: 2692, type: !6470)
!8815 = !DILocation(line: 2692, column: 45, scope: !8809)
!8816 = !DILocation(line: 2692, column: 59, scope: !8809)
!8817 = !DILocation(line: 2693, column: 29, scope: !8809)
!8818 = !DILocation(line: 2693, column: 16, scope: !8809)
!8819 = !DILocation(line: 2693, column: 27, scope: !8809)
!8820 = !DILocation(line: 2694, column: 15, scope: !8809)
!8821 = !DILocation(line: 2694, column: 31, scope: !8809)
!8822 = !DILocation(line: 2694, column: 43, scope: !8809)
!8823 = !DILocation(line: 2695, column: 37, scope: !8809)
!8824 = !DILocation(line: 2695, column: 56, scope: !8809)
!8825 = !DILocation(line: 2695, column: 45, scope: !8809)
!8826 = !DILocation(line: 2695, column: 31, scope: !8809)
!8827 = !DILocation(line: 2696, column: 20, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 2696, column: 19)
!8829 = !DILocation(line: 2696, column: 32, scope: !8828)
!8830 = !DILocation(line: 2696, column: 58, scope: !8828)
!8831 = !DILocation(line: 2696, column: 62, scope: !8832)
!8832 = !DILexicalBlockFile(scope: !8828, file: !1, discriminator: 1)
!8833 = !DILocation(line: 2696, column: 74, scope: !8832)
!8834 = !DILocation(line: 2696, column: 19, scope: !8832)
!8835 = !DILocation(line: 2697, column: 17, scope: !8828)
!8836 = !DILocation(line: 2698, column: 26, scope: !8809)
!8837 = !DILocation(line: 2698, column: 16, scope: !8809)
!8838 = !DILocation(line: 2698, column: 24, scope: !8809)
!8839 = !DILocation(line: 2690, column: 13, scope: !8840)
!8840 = !DILexicalBlockFile(scope: !8810, file: !1, discriminator: 1)
!8841 = !DILocation(line: 2700, column: 11, scope: !8807)
!8842 = !DILocation(line: 2702, column: 13, scope: !8803)
!8843 = !DILocation(line: 2702, column: 29, scope: !8803)
!8844 = !DILocation(line: 2703, column: 41, scope: !8803)
!8845 = !DILocation(line: 2704, column: 47, scope: !8803)
!8846 = !DILocation(line: 2704, column: 66, scope: !8803)
!8847 = !DILocation(line: 2704, column: 52, scope: !8803)
!8848 = !DILocation(line: 2704, column: 29, scope: !8803)
!8849 = !DILocation(line: 2705, column: 9, scope: !8804)
!8850 = !DILocation(line: 2706, column: 18, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8800, file: !1, line: 2706, column: 18)
!8852 = !DILocation(line: 2706, column: 18, scope: !8800)
!8853 = !DILocation(line: 2707, column: 25, scope: !8851)
!8854 = !DILocation(line: 2707, column: 33, scope: !8851)
!8855 = !DILocation(line: 2707, column: 38, scope: !8851)
!8856 = !DILocation(line: 2707, column: 41, scope: !8851)
!8857 = !DILocation(line: 2707, column: 11, scope: !8851)
!8858 = !DILocation(line: 2709, column: 7, scope: !7859)
!8859 = !DILocation(line: 2711, column: 40, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2711, column: 11)
!8861 = !DILocation(line: 2711, column: 48, scope: !8860)
!8862 = !DILocation(line: 2711, column: 53, scope: !8860)
!8863 = !DILocation(line: 2711, column: 56, scope: !8860)
!8864 = !DILocation(line: 2711, column: 12, scope: !8860)
!8865 = !DILocation(line: 2711, column: 11, scope: !7859)
!8866 = !DILocation(line: 2712, column: 9, scope: !8860)
!8867 = !DILocation(line: 2713, column: 7, scope: !7859)
!8868 = !DILocation(line: 2715, column: 26, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2715, column: 11)
!8870 = !DILocation(line: 2715, column: 34, scope: !8869)
!8871 = !DILocation(line: 2715, column: 39, scope: !8869)
!8872 = !DILocation(line: 2715, column: 42, scope: !8869)
!8873 = !DILocation(line: 2715, column: 12, scope: !8869)
!8874 = !DILocation(line: 2715, column: 11, scope: !7859)
!8875 = !DILocation(line: 2716, column: 9, scope: !8869)
!8876 = !DILocation(line: 2717, column: 7, scope: !7859)
!8877 = !DILocation(line: 2719, column: 11, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 2719, column: 11)
!8879 = !DILocation(line: 2719, column: 11, scope: !7859)
!8880 = !DILocation(line: 2720, column: 23, scope: !8878)
!8881 = !DILocation(line: 2720, column: 31, scope: !8878)
!8882 = !DILocation(line: 2720, column: 36, scope: !8878)
!8883 = !DILocation(line: 2720, column: 39, scope: !8878)
!8884 = !DILocation(line: 2720, column: 9, scope: !8878)
!8885 = !DILocation(line: 2721, column: 7, scope: !7859)
!8886 = !DILocation(line: 2723, column: 20, scope: !7844)
!8887 = !DILocation(line: 2723, column: 18, scope: !7844)
!8888 = !DILocation(line: 2723, column: 6, scope: !7844)
!8889 = !DILocation(line: 2723, column: 14, scope: !7844)
!8890 = !DILocation(line: 2724, column: 13, scope: !7844)
!8891 = !DILocation(line: 2724, column: 5, scope: !7844)
!8892 = !DILocation(line: 2726, column: 18, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !7844, file: !1, line: 2724, column: 25)
!8894 = !DILocation(line: 2726, column: 8, scope: !8893)
!8895 = !DILocation(line: 2726, column: 16, scope: !8893)
!8896 = !DILocation(line: 2727, column: 7, scope: !8893)
!8897 = !DILocation(line: 2729, column: 7, scope: !8893)
!8898 = !DILocation(line: 2731, column: 5, scope: !8893)
!8899 = !DILocation(line: 2303, column: 3, scope: !8900)
!8900 = !DILexicalBlockFile(scope: !7845, file: !1, discriminator: 1)
!8901 = !DILocation(line: 2734, column: 1, scope: !889)
!8902 = !DILocalVariable(name: "parser", arg: 1, scope: !928, file: !1, line: 2104, type: !162)
!8903 = !DILocation(line: 2104, column: 26, scope: !928)
!8904 = !DILocalVariable(name: "tag", scope: !928, file: !1, line: 2106, type: !594)
!8905 = !DILocation(line: 2106, column: 8, scope: !928)
!8906 = !DILocation(line: 2106, column: 14, scope: !928)
!8907 = !DILocation(line: 2107, column: 3, scope: !928)
!8908 = !DILocation(line: 2107, column: 10, scope: !8909)
!8909 = !DILexicalBlockFile(scope: !928, file: !1, discriminator: 1)
!8910 = !DILocation(line: 2107, column: 3, scope: !8909)
!8911 = !DILocalVariable(name: "bufSize", scope: !8912, file: !1, line: 2108, type: !223)
!8912 = distinct !DILexicalBlock(scope: !928, file: !1, line: 2107, column: 15)
!8913 = !DILocation(line: 2108, column: 9, scope: !8912)
!8914 = !DILocalVariable(name: "nameLen", scope: !8912, file: !1, line: 2109, type: !223)
!8915 = !DILocation(line: 2109, column: 9, scope: !8912)
!8916 = !DILocation(line: 2109, column: 39, scope: !8912)
!8917 = !DILocation(line: 2109, column: 44, scope: !8912)
!8918 = !DILocation(line: 2109, column: 49, scope: !8912)
!8919 = !DILocation(line: 2109, column: 56, scope: !8912)
!8920 = !DILocation(line: 2109, column: 38, scope: !8912)
!8921 = !DILocation(line: 2109, column: 36, scope: !8912)
!8922 = !DILocation(line: 2109, column: 19, scope: !8912)
!8923 = !DILocalVariable(name: "rawNameBuf", scope: !8912, file: !1, line: 2110, type: !169)
!8924 = !DILocation(line: 2110, column: 11, scope: !8912)
!8925 = !DILocation(line: 2110, column: 24, scope: !8912)
!8926 = !DILocation(line: 2110, column: 29, scope: !8912)
!8927 = !DILocation(line: 2110, column: 35, scope: !8912)
!8928 = !DILocation(line: 2110, column: 33, scope: !8912)
!8929 = !DILocation(line: 2116, column: 9, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8912, file: !1, line: 2116, column: 9)
!8931 = !DILocation(line: 2116, column: 14, scope: !8930)
!8932 = !DILocation(line: 2116, column: 25, scope: !8930)
!8933 = !DILocation(line: 2116, column: 22, scope: !8930)
!8934 = !DILocation(line: 2116, column: 9, scope: !8912)
!8935 = !DILocation(line: 2117, column: 7, scope: !8930)
!8936 = !DILocation(line: 2121, column: 15, scope: !8912)
!8937 = !DILocation(line: 2121, column: 25, scope: !8912)
!8938 = !DILocation(line: 2121, column: 23, scope: !8912)
!8939 = !DILocation(line: 2121, column: 13, scope: !8912)
!8940 = !DILocation(line: 2122, column: 9, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8912, file: !1, line: 2122, column: 9)
!8942 = !DILocation(line: 2122, column: 19, scope: !8941)
!8943 = !DILocation(line: 2122, column: 24, scope: !8941)
!8944 = !DILocation(line: 2122, column: 33, scope: !8941)
!8945 = !DILocation(line: 2122, column: 38, scope: !8941)
!8946 = !DILocation(line: 2122, column: 31, scope: !8941)
!8947 = !DILocation(line: 2122, column: 17, scope: !8941)
!8948 = !DILocation(line: 2122, column: 9, scope: !8912)
!8949 = !DILocalVariable(name: "temp", scope: !8950, file: !1, line: 2123, type: !169)
!8950 = distinct !DILexicalBlock(scope: !8941, file: !1, line: 2122, column: 43)
!8951 = !DILocation(line: 2123, column: 13, scope: !8950)
!8952 = !DILocation(line: 2123, column: 28, scope: !8950)
!8953 = !DILocation(line: 2124, column: 11, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8950, file: !1, line: 2124, column: 11)
!8955 = !DILocation(line: 2124, column: 16, scope: !8954)
!8956 = !DILocation(line: 2124, column: 11, scope: !8950)
!8957 = !DILocation(line: 2125, column: 9, scope: !8954)
!8958 = !DILocation(line: 2129, column: 11, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8950, file: !1, line: 2129, column: 11)
!8960 = !DILocation(line: 2129, column: 16, scope: !8959)
!8961 = !DILocation(line: 2129, column: 21, scope: !8959)
!8962 = !DILocation(line: 2129, column: 40, scope: !8959)
!8963 = !DILocation(line: 2129, column: 45, scope: !8959)
!8964 = !DILocation(line: 2129, column: 25, scope: !8959)
!8965 = !DILocation(line: 2129, column: 11, scope: !8950)
!8966 = !DILocation(line: 2130, column: 37, scope: !8959)
!8967 = !DILocation(line: 2130, column: 9, scope: !8959)
!8968 = !DILocation(line: 2130, column: 14, scope: !8959)
!8969 = !DILocation(line: 2130, column: 19, scope: !8959)
!8970 = !DILocation(line: 2130, column: 23, scope: !8959)
!8971 = !DILocation(line: 2134, column: 11, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8950, file: !1, line: 2134, column: 11)
!8973 = !DILocation(line: 2134, column: 16, scope: !8972)
!8974 = !DILocation(line: 2134, column: 21, scope: !8972)
!8975 = !DILocation(line: 2134, column: 11, scope: !8950)
!8976 = !DILocation(line: 2135, column: 43, scope: !8972)
!8977 = !DILocation(line: 2135, column: 51, scope: !8972)
!8978 = !DILocation(line: 2135, column: 56, scope: !8972)
!8979 = !DILocation(line: 2135, column: 61, scope: !8972)
!8980 = !DILocation(line: 2136, column: 63, scope: !8972)
!8981 = !DILocation(line: 2136, column: 68, scope: !8972)
!8982 = !DILocation(line: 2135, column: 71, scope: !8972)
!8983 = !DILocation(line: 2135, column: 48, scope: !8972)
!8984 = !DILocation(line: 2135, column: 9, scope: !8972)
!8985 = !DILocation(line: 2135, column: 14, scope: !8972)
!8986 = !DILocation(line: 2135, column: 19, scope: !8972)
!8987 = !DILocation(line: 2135, column: 29, scope: !8972)
!8988 = !DILocation(line: 2137, column: 18, scope: !8950)
!8989 = !DILocation(line: 2137, column: 7, scope: !8950)
!8990 = !DILocation(line: 2137, column: 12, scope: !8950)
!8991 = !DILocation(line: 2137, column: 16, scope: !8950)
!8992 = !DILocation(line: 2138, column: 21, scope: !8950)
!8993 = !DILocation(line: 2138, column: 28, scope: !8950)
!8994 = !DILocation(line: 2138, column: 26, scope: !8950)
!8995 = !DILocation(line: 2138, column: 7, scope: !8950)
!8996 = !DILocation(line: 2138, column: 12, scope: !8950)
!8997 = !DILocation(line: 2138, column: 19, scope: !8950)
!8998 = !DILocation(line: 2139, column: 20, scope: !8950)
!8999 = !DILocation(line: 2139, column: 27, scope: !8950)
!9000 = !DILocation(line: 2139, column: 25, scope: !8950)
!9001 = !DILocation(line: 2139, column: 18, scope: !8950)
!9002 = !DILocation(line: 2140, column: 5, scope: !8950)
!9003 = !DILocation(line: 2141, column: 12, scope: !8912)
!9004 = !DILocation(line: 2141, column: 24, scope: !8912)
!9005 = !DILocation(line: 2141, column: 29, scope: !8912)
!9006 = !DILocation(line: 2141, column: 38, scope: !8912)
!9007 = !DILocation(line: 2141, column: 43, scope: !8912)
!9008 = !DILocation(line: 2141, column: 5, scope: !8912)
!9009 = !DILocation(line: 2142, column: 20, scope: !8912)
!9010 = !DILocation(line: 2142, column: 5, scope: !8912)
!9011 = !DILocation(line: 2142, column: 10, scope: !8912)
!9012 = !DILocation(line: 2142, column: 18, scope: !8912)
!9013 = !DILocation(line: 2143, column: 11, scope: !8912)
!9014 = !DILocation(line: 2143, column: 16, scope: !8912)
!9015 = !DILocation(line: 2143, column: 9, scope: !8912)
!9016 = !DILocation(line: 2107, column: 3, scope: !9017)
!9017 = !DILexicalBlockFile(scope: !928, file: !1, discriminator: 2)
!9018 = !DILocation(line: 2145, column: 3, scope: !928)
!9019 = !DILocation(line: 2146, column: 1, scope: !928)
!9020 = !DILocalVariable(name: "parser", arg: 1, scope: !892, file: !1, line: 4846, type: !162)
!9021 = !DILocation(line: 4846, column: 34, scope: !892)
!9022 = !DILocalVariable(name: "entity", arg: 2, scope: !892, file: !1, line: 4846, type: !443)
!9023 = !DILocation(line: 4846, column: 50, scope: !892)
!9024 = !DILocalVariable(name: "betweenDecl", arg: 3, scope: !892, file: !1, line: 4847, type: !159)
!9025 = !DILocation(line: 4847, column: 32, scope: !892)
!9026 = !DILocalVariable(name: "textStart", scope: !892, file: !1, line: 4849, type: !192)
!9027 = !DILocation(line: 4849, column: 15, scope: !892)
!9028 = !DILocalVariable(name: "textEnd", scope: !892, file: !1, line: 4849, type: !192)
!9029 = !DILocation(line: 4849, column: 27, scope: !892)
!9030 = !DILocalVariable(name: "next", scope: !892, file: !1, line: 4850, type: !192)
!9031 = !DILocation(line: 4850, column: 15, scope: !892)
!9032 = !DILocalVariable(name: "result", scope: !892, file: !1, line: 4851, type: !24)
!9033 = !DILocation(line: 4851, column: 18, scope: !892)
!9034 = !DILocalVariable(name: "openEntity", scope: !892, file: !1, line: 4852, type: !434)
!9035 = !DILocation(line: 4852, column: 25, scope: !892)
!9036 = !DILocation(line: 4854, column: 7, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !892, file: !1, line: 4854, column: 7)
!9038 = !DILocation(line: 4854, column: 7, scope: !892)
!9039 = !DILocation(line: 4855, column: 18, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9037, file: !1, line: 4854, column: 29)
!9041 = !DILocation(line: 4855, column: 16, scope: !9040)
!9042 = !DILocation(line: 4856, column: 28, scope: !9040)
!9043 = !DILocation(line: 4856, column: 40, scope: !9040)
!9044 = !DILocation(line: 4856, column: 5, scope: !9040)
!9045 = !DILocation(line: 4856, column: 26, scope: !9040)
!9046 = !DILocation(line: 4857, column: 3, scope: !9040)
!9047 = !DILocation(line: 4859, column: 42, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9037, file: !1, line: 4858, column: 8)
!9049 = !DILocation(line: 4859, column: 18, scope: !9048)
!9050 = !DILocation(line: 4859, column: 16, scope: !9048)
!9051 = !DILocation(line: 4860, column: 10, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9048, file: !1, line: 4860, column: 9)
!9053 = !DILocation(line: 4860, column: 9, scope: !9048)
!9054 = !DILocation(line: 4861, column: 7, scope: !9052)
!9055 = !DILocation(line: 4863, column: 3, scope: !892)
!9056 = !DILocation(line: 4863, column: 11, scope: !892)
!9057 = !DILocation(line: 4863, column: 16, scope: !892)
!9058 = !DILocation(line: 4864, column: 3, scope: !892)
!9059 = !DILocation(line: 4864, column: 11, scope: !892)
!9060 = !DILocation(line: 4864, column: 21, scope: !892)
!9061 = !DILocation(line: 4865, column: 22, scope: !892)
!9062 = !DILocation(line: 4865, column: 3, scope: !892)
!9063 = !DILocation(line: 4865, column: 15, scope: !892)
!9064 = !DILocation(line: 4865, column: 20, scope: !892)
!9065 = !DILocation(line: 4866, column: 26, scope: !892)
!9066 = !DILocation(line: 4866, column: 3, scope: !892)
!9067 = !DILocation(line: 4866, column: 24, scope: !892)
!9068 = !DILocation(line: 4867, column: 24, scope: !892)
!9069 = !DILocation(line: 4867, column: 3, scope: !892)
!9070 = !DILocation(line: 4867, column: 15, scope: !892)
!9071 = !DILocation(line: 4867, column: 22, scope: !892)
!9072 = !DILocation(line: 4868, column: 31, scope: !892)
!9073 = !DILocation(line: 4868, column: 3, scope: !892)
!9074 = !DILocation(line: 4868, column: 15, scope: !892)
!9075 = !DILocation(line: 4868, column: 29, scope: !892)
!9076 = !DILocation(line: 4869, column: 29, scope: !892)
!9077 = !DILocation(line: 4869, column: 3, scope: !892)
!9078 = !DILocation(line: 4869, column: 15, scope: !892)
!9079 = !DILocation(line: 4869, column: 27, scope: !892)
!9080 = !DILocation(line: 4870, column: 3, scope: !892)
!9081 = !DILocation(line: 4870, column: 15, scope: !892)
!9082 = !DILocation(line: 4870, column: 32, scope: !892)
!9083 = !DILocation(line: 4871, column: 3, scope: !892)
!9084 = !DILocation(line: 4871, column: 15, scope: !892)
!9085 = !DILocation(line: 4871, column: 35, scope: !892)
!9086 = !DILocation(line: 4872, column: 23, scope: !892)
!9087 = !DILocation(line: 4872, column: 31, scope: !892)
!9088 = !DILocation(line: 4872, column: 13, scope: !892)
!9089 = !DILocation(line: 4873, column: 22, scope: !892)
!9090 = !DILocation(line: 4873, column: 30, scope: !892)
!9091 = !DILocation(line: 4873, column: 40, scope: !892)
!9092 = !DILocation(line: 4873, column: 48, scope: !892)
!9093 = !DILocation(line: 4873, column: 38, scope: !892)
!9094 = !DILocation(line: 4873, column: 11, scope: !892)
!9095 = !DILocation(line: 4883, column: 24, scope: !892)
!9096 = !DILocation(line: 4883, column: 32, scope: !892)
!9097 = !DILocation(line: 4883, column: 42, scope: !892)
!9098 = !DILocation(line: 4883, column: 60, scope: !892)
!9099 = !DILocation(line: 4884, column: 24, scope: !892)
!9100 = !DILocation(line: 4883, column: 14, scope: !892)
!9101 = !DILocation(line: 4883, column: 12, scope: !892)
!9102 = !DILocation(line: 4886, column: 7, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !892, file: !1, line: 4886, column: 7)
!9104 = !DILocation(line: 4886, column: 14, scope: !9103)
!9105 = !DILocation(line: 4886, column: 7, scope: !892)
!9106 = !DILocation(line: 4887, column: 9, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !1, line: 4887, column: 9)
!9108 = distinct !DILexicalBlock(scope: !9103, file: !1, line: 4886, column: 33)
!9109 = !DILocation(line: 4887, column: 20, scope: !9107)
!9110 = !DILocation(line: 4887, column: 17, scope: !9107)
!9111 = !DILocation(line: 4887, column: 25, scope: !9107)
!9112 = !DILocation(line: 4887, column: 28, scope: !9113)
!9113 = !DILexicalBlockFile(scope: !9107, file: !1, discriminator: 1)
!9114 = !DILocation(line: 4887, column: 39, scope: !9113)
!9115 = !DILocation(line: 4887, column: 9, scope: !9113)
!9116 = !DILocation(line: 4888, column: 33, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9107, file: !1, line: 4887, column: 57)
!9118 = !DILocation(line: 4888, column: 40, scope: !9117)
!9119 = !DILocation(line: 4888, column: 38, scope: !9117)
!9120 = !DILocation(line: 4888, column: 27, scope: !9117)
!9121 = !DILocation(line: 4888, column: 7, scope: !9117)
!9122 = !DILocation(line: 4888, column: 15, scope: !9117)
!9123 = !DILocation(line: 4888, column: 25, scope: !9117)
!9124 = !DILocation(line: 4889, column: 7, scope: !9117)
!9125 = !DILocation(line: 4889, column: 17, scope: !9117)
!9126 = !DILocation(line: 4890, column: 5, scope: !9117)
!9127 = !DILocation(line: 4892, column: 7, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9107, file: !1, line: 4891, column: 10)
!9129 = !DILocation(line: 4892, column: 15, scope: !9128)
!9130 = !DILocation(line: 4892, column: 20, scope: !9128)
!9131 = !DILocation(line: 4893, column: 30, scope: !9128)
!9132 = !DILocation(line: 4893, column: 42, scope: !9128)
!9133 = !DILocation(line: 4893, column: 7, scope: !9128)
!9134 = !DILocation(line: 4893, column: 28, scope: !9128)
!9135 = !DILocation(line: 4895, column: 26, scope: !9128)
!9136 = !DILocation(line: 4895, column: 7, scope: !9128)
!9137 = !DILocation(line: 4895, column: 19, scope: !9128)
!9138 = !DILocation(line: 4895, column: 24, scope: !9128)
!9139 = !DILocation(line: 4896, column: 30, scope: !9128)
!9140 = !DILocation(line: 4896, column: 7, scope: !9128)
!9141 = !DILocation(line: 4896, column: 28, scope: !9128)
!9142 = !DILocation(line: 4898, column: 3, scope: !9108)
!9143 = !DILocation(line: 4899, column: 10, scope: !892)
!9144 = !DILocation(line: 4899, column: 3, scope: !892)
!9145 = !DILocation(line: 4900, column: 1, scope: !892)
!9146 = !DILocalVariable(name: "parser", arg: 1, scope: !896, file: !1, line: 5547, type: !162)
!9147 = !DILocation(line: 5547, column: 23, scope: !896)
!9148 = !DILocalVariable(name: "dtd", scope: !896, file: !1, line: 5549, type: !2386)
!9149 = !DILocation(line: 5549, column: 15, scope: !896)
!9150 = !DILocation(line: 5549, column: 21, scope: !896)
!9151 = !DILocalVariable(name: "iter", scope: !896, file: !1, line: 5550, type: !901)
!9152 = !DILocation(line: 5550, column: 19, scope: !896)
!9153 = !DILocalVariable(name: "needSep", scope: !896, file: !1, line: 5551, type: !159)
!9154 = !DILocation(line: 5551, column: 12, scope: !896)
!9155 = !DILocation(line: 5553, column: 7, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !896, file: !1, line: 5553, column: 7)
!9157 = !DILocation(line: 5553, column: 12, scope: !9156)
!9158 = !DILocation(line: 5553, column: 26, scope: !9156)
!9159 = !DILocation(line: 5553, column: 7, scope: !896)
!9160 = !DILocalVariable(name: "i", scope: !9161, file: !1, line: 5554, type: !223)
!9161 = distinct !DILexicalBlock(scope: !9156, file: !1, line: 5553, column: 35)
!9162 = !DILocation(line: 5554, column: 9, scope: !9161)
!9163 = !DILocalVariable(name: "len", scope: !9161, file: !1, line: 5555, type: !223)
!9164 = !DILocation(line: 5555, column: 9, scope: !9161)
!9165 = !DILocation(line: 5556, column: 10, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9161, file: !1, line: 5556, column: 9)
!9167 = !DILocation(line: 5556, column: 10, scope: !9168)
!9168 = !DILexicalBlockFile(scope: !9166, file: !1, discriminator: 1)
!9169 = !DILocation(line: 5556, column: 9, scope: !9168)
!9170 = !DILocation(line: 5556, column: 10, scope: !9171)
!9171 = !DILexicalBlockFile(scope: !9166, file: !1, discriminator: 2)
!9172 = !DILocation(line: 5556, column: 10, scope: !9173)
!9173 = !DILexicalBlockFile(scope: !9166, file: !1, discriminator: 3)
!9174 = !DILocation(line: 5556, column: 9, scope: !9173)
!9175 = !DILocation(line: 5557, column: 7, scope: !9166)
!9176 = !DILocation(line: 5558, column: 11, scope: !9161)
!9177 = !DILocation(line: 5558, column: 16, scope: !9161)
!9178 = !DILocation(line: 5558, column: 30, scope: !9161)
!9179 = !DILocation(line: 5558, column: 39, scope: !9161)
!9180 = !DILocation(line: 5558, column: 9, scope: !9161)
!9181 = !DILocation(line: 5559, column: 9, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9161, file: !1, line: 5559, column: 9)
!9183 = !DILocation(line: 5559, column: 9, scope: !9161)
!9184 = !DILocation(line: 5560, column: 10, scope: !9182)
!9185 = !DILocation(line: 5560, column: 7, scope: !9182)
!9186 = !DILocation(line: 5561, column: 12, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9161, file: !1, line: 5561, column: 5)
!9188 = !DILocation(line: 5561, column: 10, scope: !9187)
!9189 = !DILocation(line: 5561, column: 17, scope: !9190)
!9190 = !DILexicalBlockFile(scope: !9191, file: !1, discriminator: 1)
!9191 = distinct !DILexicalBlock(scope: !9187, file: !1, line: 5561, column: 5)
!9192 = !DILocation(line: 5561, column: 21, scope: !9190)
!9193 = !DILocation(line: 5561, column: 19, scope: !9190)
!9194 = !DILocation(line: 5561, column: 5, scope: !9190)
!9195 = !DILocation(line: 5562, column: 12, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9191, file: !1, line: 5562, column: 11)
!9197 = !DILocation(line: 5562, column: 12, scope: !9198)
!9198 = !DILexicalBlockFile(scope: !9196, file: !1, discriminator: 1)
!9199 = !DILocation(line: 5562, column: 11, scope: !9198)
!9200 = !DILocation(line: 5562, column: 12, scope: !9201)
!9201 = !DILexicalBlockFile(scope: !9196, file: !1, discriminator: 2)
!9202 = !DILocation(line: 5562, column: 12, scope: !9203)
!9203 = !DILexicalBlockFile(scope: !9196, file: !1, discriminator: 3)
!9204 = !DILocation(line: 5562, column: 11, scope: !9203)
!9205 = !DILocation(line: 5563, column: 9, scope: !9196)
!9206 = !DILocation(line: 5562, column: 12, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !9196, file: !1, discriminator: 4)
!9208 = !DILocation(line: 5561, column: 27, scope: !9209)
!9209 = !DILexicalBlockFile(scope: !9191, file: !1, discriminator: 2)
!9210 = !DILocation(line: 5561, column: 5, scope: !9209)
!9211 = !DILocation(line: 5564, column: 13, scope: !9161)
!9212 = !DILocation(line: 5565, column: 3, scope: !9161)
!9213 = !DILocation(line: 5567, column: 30, scope: !896)
!9214 = !DILocation(line: 5567, column: 35, scope: !896)
!9215 = !DILocation(line: 5567, column: 3, scope: !896)
!9216 = !DILocation(line: 5568, column: 3, scope: !896)
!9217 = !DILocalVariable(name: "i", scope: !9218, file: !1, line: 5569, type: !223)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !1, line: 5568, column: 12)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !1, line: 5568, column: 3)
!9220 = distinct !DILexicalBlock(scope: !896, file: !1, line: 5568, column: 3)
!9221 = !DILocation(line: 5569, column: 9, scope: !9218)
!9222 = !DILocalVariable(name: "len", scope: !9218, file: !1, line: 5570, type: !223)
!9223 = !DILocation(line: 5570, column: 9, scope: !9218)
!9224 = !DILocalVariable(name: "s", scope: !9218, file: !1, line: 5571, type: !210)
!9225 = !DILocation(line: 5571, column: 21, scope: !9218)
!9226 = !DILocalVariable(name: "prefix", scope: !9218, file: !1, line: 5572, type: !477)
!9227 = !DILocation(line: 5572, column: 13, scope: !9218)
!9228 = !DILocation(line: 5572, column: 32, scope: !9218)
!9229 = !DILocation(line: 5572, column: 22, scope: !9218)
!9230 = !DILocation(line: 5573, column: 10, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 5573, column: 9)
!9232 = !DILocation(line: 5573, column: 9, scope: !9218)
!9233 = !DILocation(line: 5574, column: 7, scope: !9231)
!9234 = !DILocation(line: 5575, column: 10, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 5575, column: 9)
!9236 = !DILocation(line: 5575, column: 18, scope: !9235)
!9237 = !DILocation(line: 5575, column: 9, scope: !9218)
!9238 = !DILocation(line: 5576, column: 7, scope: !9235)
!9239 = !DILocation(line: 5577, column: 9, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 5577, column: 9)
!9241 = !DILocation(line: 5577, column: 17, scope: !9240)
!9242 = !DILocation(line: 5577, column: 21, scope: !9243)
!9243 = !DILexicalBlockFile(scope: !9240, file: !1, discriminator: 1)
!9244 = !DILocation(line: 5577, column: 21, scope: !9245)
!9245 = !DILexicalBlockFile(scope: !9240, file: !1, discriminator: 2)
!9246 = !DILocation(line: 5577, column: 9, scope: !9245)
!9247 = !DILocation(line: 5577, column: 21, scope: !9248)
!9248 = !DILexicalBlockFile(scope: !9240, file: !1, discriminator: 3)
!9249 = !DILocation(line: 5577, column: 21, scope: !9250)
!9250 = !DILexicalBlockFile(scope: !9240, file: !1, discriminator: 4)
!9251 = !DILocation(line: 5577, column: 9, scope: !9250)
!9252 = !DILocation(line: 5578, column: 7, scope: !9240)
!9253 = !DILocation(line: 5579, column: 14, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 5579, column: 5)
!9255 = !DILocation(line: 5579, column: 22, scope: !9254)
!9256 = !DILocation(line: 5579, column: 12, scope: !9254)
!9257 = !DILocation(line: 5579, column: 10, scope: !9254)
!9258 = !DILocation(line: 5579, column: 29, scope: !9259)
!9259 = !DILexicalBlockFile(scope: !9260, file: !1, discriminator: 1)
!9260 = distinct !DILexicalBlock(scope: !9254, file: !1, line: 5579, column: 5)
!9261 = !DILocation(line: 5579, column: 28, scope: !9259)
!9262 = !DILocation(line: 5579, column: 5, scope: !9259)
!9263 = !DILocation(line: 5580, column: 12, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9260, file: !1, line: 5580, column: 11)
!9265 = !DILocation(line: 5580, column: 12, scope: !9266)
!9266 = !DILexicalBlockFile(scope: !9264, file: !1, discriminator: 1)
!9267 = !DILocation(line: 5580, column: 11, scope: !9266)
!9268 = !DILocation(line: 5580, column: 12, scope: !9269)
!9269 = !DILexicalBlockFile(scope: !9264, file: !1, discriminator: 2)
!9270 = !DILocation(line: 5580, column: 12, scope: !9271)
!9271 = !DILexicalBlockFile(scope: !9264, file: !1, discriminator: 3)
!9272 = !DILocation(line: 5580, column: 11, scope: !9271)
!9273 = !DILocation(line: 5581, column: 9, scope: !9264)
!9274 = !DILocation(line: 5580, column: 12, scope: !9275)
!9275 = !DILexicalBlockFile(scope: !9264, file: !1, discriminator: 4)
!9276 = !DILocation(line: 5579, column: 33, scope: !9277)
!9277 = !DILexicalBlockFile(scope: !9260, file: !1, discriminator: 2)
!9278 = !DILocation(line: 5579, column: 5, scope: !9277)
!9279 = !DILocation(line: 5582, column: 10, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 5582, column: 9)
!9281 = !DILocation(line: 5582, column: 10, scope: !9282)
!9282 = !DILexicalBlockFile(scope: !9280, file: !1, discriminator: 1)
!9283 = !DILocation(line: 5582, column: 9, scope: !9282)
!9284 = !DILocation(line: 5582, column: 10, scope: !9285)
!9285 = !DILexicalBlockFile(scope: !9280, file: !1, discriminator: 2)
!9286 = !DILocation(line: 5582, column: 10, scope: !9287)
!9287 = !DILexicalBlockFile(scope: !9280, file: !1, discriminator: 3)
!9288 = !DILocation(line: 5582, column: 9, scope: !9287)
!9289 = !DILocation(line: 5583, column: 7, scope: !9280)
!9290 = !DILocation(line: 5584, column: 11, scope: !9218)
!9291 = !DILocation(line: 5584, column: 19, scope: !9218)
!9292 = !DILocation(line: 5584, column: 28, scope: !9218)
!9293 = !DILocation(line: 5584, column: 9, scope: !9218)
!9294 = !DILocation(line: 5585, column: 9, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 5585, column: 9)
!9296 = !DILocation(line: 5585, column: 9, scope: !9218)
!9297 = !DILocation(line: 5586, column: 10, scope: !9295)
!9298 = !DILocation(line: 5586, column: 7, scope: !9295)
!9299 = !DILocation(line: 5587, column: 12, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 5587, column: 5)
!9301 = !DILocation(line: 5587, column: 10, scope: !9300)
!9302 = !DILocation(line: 5587, column: 17, scope: !9303)
!9303 = !DILexicalBlockFile(scope: !9304, file: !1, discriminator: 1)
!9304 = distinct !DILexicalBlock(scope: !9300, file: !1, line: 5587, column: 5)
!9305 = !DILocation(line: 5587, column: 21, scope: !9303)
!9306 = !DILocation(line: 5587, column: 19, scope: !9303)
!9307 = !DILocation(line: 5587, column: 5, scope: !9303)
!9308 = !DILocation(line: 5588, column: 12, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9304, file: !1, line: 5588, column: 11)
!9310 = !DILocation(line: 5588, column: 12, scope: !9311)
!9311 = !DILexicalBlockFile(scope: !9309, file: !1, discriminator: 1)
!9312 = !DILocation(line: 5588, column: 11, scope: !9311)
!9313 = !DILocation(line: 5588, column: 12, scope: !9314)
!9314 = !DILexicalBlockFile(scope: !9309, file: !1, discriminator: 2)
!9315 = !DILocation(line: 5588, column: 12, scope: !9316)
!9316 = !DILexicalBlockFile(scope: !9309, file: !1, discriminator: 3)
!9317 = !DILocation(line: 5588, column: 11, scope: !9316)
!9318 = !DILocation(line: 5589, column: 9, scope: !9309)
!9319 = !DILocation(line: 5588, column: 12, scope: !9320)
!9320 = !DILexicalBlockFile(scope: !9309, file: !1, discriminator: 4)
!9321 = !DILocation(line: 5587, column: 27, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !9304, file: !1, discriminator: 2)
!9323 = !DILocation(line: 5587, column: 5, scope: !9322)
!9324 = !DILocation(line: 5590, column: 13, scope: !9218)
!9325 = !DILocation(line: 5568, column: 3, scope: !9326)
!9326 = !DILexicalBlockFile(scope: !9219, file: !1, discriminator: 1)
!9327 = !DILocation(line: 5594, column: 30, scope: !896)
!9328 = !DILocation(line: 5594, column: 35, scope: !896)
!9329 = !DILocation(line: 5594, column: 3, scope: !896)
!9330 = !DILocation(line: 5595, column: 3, scope: !896)
!9331 = !DILocalVariable(name: "s", scope: !9332, file: !1, line: 5596, type: !210)
!9332 = distinct !DILexicalBlock(scope: !9333, file: !1, line: 5595, column: 12)
!9333 = distinct !DILexicalBlock(scope: !9334, file: !1, line: 5595, column: 3)
!9334 = distinct !DILexicalBlock(scope: !896, file: !1, line: 5595, column: 3)
!9335 = !DILocation(line: 5596, column: 21, scope: !9332)
!9336 = !DILocalVariable(name: "e", scope: !9332, file: !1, line: 5597, type: !443)
!9337 = !DILocation(line: 5597, column: 13, scope: !9332)
!9338 = !DILocation(line: 5597, column: 27, scope: !9332)
!9339 = !DILocation(line: 5597, column: 17, scope: !9332)
!9340 = !DILocation(line: 5598, column: 10, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9332, file: !1, line: 5598, column: 9)
!9342 = !DILocation(line: 5598, column: 9, scope: !9332)
!9343 = !DILocation(line: 5599, column: 7, scope: !9341)
!9344 = !DILocation(line: 5600, column: 10, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9332, file: !1, line: 5600, column: 9)
!9346 = !DILocation(line: 5600, column: 13, scope: !9345)
!9347 = !DILocation(line: 5600, column: 9, scope: !9332)
!9348 = !DILocation(line: 5601, column: 7, scope: !9345)
!9349 = !DILocation(line: 5602, column: 9, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9332, file: !1, line: 5602, column: 9)
!9351 = !DILocation(line: 5602, column: 17, scope: !9350)
!9352 = !DILocation(line: 5602, column: 21, scope: !9353)
!9353 = !DILexicalBlockFile(scope: !9350, file: !1, discriminator: 1)
!9354 = !DILocation(line: 5602, column: 21, scope: !9355)
!9355 = !DILexicalBlockFile(scope: !9350, file: !1, discriminator: 2)
!9356 = !DILocation(line: 5602, column: 9, scope: !9355)
!9357 = !DILocation(line: 5602, column: 21, scope: !9358)
!9358 = !DILexicalBlockFile(scope: !9350, file: !1, discriminator: 3)
!9359 = !DILocation(line: 5602, column: 21, scope: !9360)
!9360 = !DILexicalBlockFile(scope: !9350, file: !1, discriminator: 4)
!9361 = !DILocation(line: 5602, column: 9, scope: !9360)
!9362 = !DILocation(line: 5603, column: 7, scope: !9350)
!9363 = !DILocation(line: 5604, column: 14, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9332, file: !1, line: 5604, column: 5)
!9365 = !DILocation(line: 5604, column: 17, scope: !9364)
!9366 = !DILocation(line: 5604, column: 12, scope: !9364)
!9367 = !DILocation(line: 5604, column: 10, scope: !9364)
!9368 = !DILocation(line: 5604, column: 24, scope: !9369)
!9369 = !DILexicalBlockFile(scope: !9370, file: !1, discriminator: 1)
!9370 = distinct !DILexicalBlock(scope: !9364, file: !1, line: 5604, column: 5)
!9371 = !DILocation(line: 5604, column: 23, scope: !9369)
!9372 = !DILocation(line: 5604, column: 5, scope: !9369)
!9373 = !DILocation(line: 5605, column: 12, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 5605, column: 11)
!9375 = !DILocation(line: 5605, column: 12, scope: !9376)
!9376 = !DILexicalBlockFile(scope: !9374, file: !1, discriminator: 1)
!9377 = !DILocation(line: 5605, column: 11, scope: !9376)
!9378 = !DILocation(line: 5605, column: 12, scope: !9379)
!9379 = !DILexicalBlockFile(scope: !9374, file: !1, discriminator: 2)
!9380 = !DILocation(line: 5605, column: 12, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !9374, file: !1, discriminator: 3)
!9382 = !DILocation(line: 5605, column: 11, scope: !9381)
!9383 = !DILocation(line: 5606, column: 9, scope: !9374)
!9384 = !DILocation(line: 5605, column: 12, scope: !9385)
!9385 = !DILexicalBlockFile(scope: !9374, file: !1, discriminator: 4)
!9386 = !DILocation(line: 5604, column: 28, scope: !9387)
!9387 = !DILexicalBlockFile(scope: !9370, file: !1, discriminator: 2)
!9388 = !DILocation(line: 5604, column: 5, scope: !9387)
!9389 = !DILocation(line: 5607, column: 13, scope: !9332)
!9390 = !DILocation(line: 5595, column: 3, scope: !9391)
!9391 = !DILexicalBlockFile(scope: !9333, file: !1, discriminator: 1)
!9392 = !DILocation(line: 5610, column: 8, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !896, file: !1, line: 5610, column: 7)
!9394 = !DILocation(line: 5610, column: 8, scope: !9395)
!9395 = !DILexicalBlockFile(scope: !9393, file: !1, discriminator: 1)
!9396 = !DILocation(line: 5610, column: 7, scope: !9395)
!9397 = !DILocation(line: 5610, column: 8, scope: !9398)
!9398 = !DILexicalBlockFile(scope: !9393, file: !1, discriminator: 2)
!9399 = !DILocation(line: 5610, column: 8, scope: !9400)
!9400 = !DILexicalBlockFile(scope: !9393, file: !1, discriminator: 3)
!9401 = !DILocation(line: 5610, column: 7, scope: !9400)
!9402 = !DILocation(line: 5611, column: 5, scope: !9393)
!9403 = !DILocation(line: 5612, column: 10, scope: !896)
!9404 = !DILocation(line: 5612, column: 19, scope: !896)
!9405 = !DILocation(line: 5612, column: 3, scope: !896)
!9406 = !DILocation(line: 5613, column: 1, scope: !896)
!9407 = !DILocalVariable(name: "parser", arg: 1, scope: !911, file: !1, line: 2747, type: !162)
!9408 = !DILocation(line: 2747, column: 22, scope: !911)
!9409 = !DILocalVariable(name: "enc", arg: 2, scope: !911, file: !1, line: 2747, type: !321)
!9410 = !DILocation(line: 2747, column: 46, scope: !911)
!9411 = !DILocalVariable(name: "attStr", arg: 3, scope: !911, file: !1, line: 2748, type: !192)
!9412 = !DILocation(line: 2748, column: 23, scope: !911)
!9413 = !DILocalVariable(name: "tagNamePtr", arg: 4, scope: !911, file: !1, line: 2748, type: !914)
!9414 = !DILocation(line: 2748, column: 41, scope: !911)
!9415 = !DILocalVariable(name: "bindingsPtr", arg: 5, scope: !911, file: !1, line: 2749, type: !915)
!9416 = !DILocation(line: 2749, column: 21, scope: !911)
!9417 = !DILocalVariable(name: "dtd", scope: !911, file: !1, line: 2751, type: !2386)
!9418 = !DILocation(line: 2751, column: 15, scope: !911)
!9419 = !DILocation(line: 2751, column: 21, scope: !911)
!9420 = !DILocalVariable(name: "elementType", scope: !911, file: !1, line: 2752, type: !471)
!9421 = !DILocation(line: 2752, column: 17, scope: !911)
!9422 = !DILocalVariable(name: "nDefaultAtts", scope: !911, file: !1, line: 2753, type: !223)
!9423 = !DILocation(line: 2753, column: 7, scope: !911)
!9424 = !DILocalVariable(name: "appAtts", scope: !911, file: !1, line: 2754, type: !212)
!9425 = !DILocation(line: 2754, column: 20, scope: !911)
!9426 = !DILocalVariable(name: "attIndex", scope: !911, file: !1, line: 2755, type: !223)
!9427 = !DILocation(line: 2755, column: 7, scope: !911)
!9428 = !DILocalVariable(name: "prefixLen", scope: !911, file: !1, line: 2756, type: !223)
!9429 = !DILocation(line: 2756, column: 7, scope: !911)
!9430 = !DILocalVariable(name: "i", scope: !911, file: !1, line: 2757, type: !223)
!9431 = !DILocation(line: 2757, column: 7, scope: !911)
!9432 = !DILocalVariable(name: "n", scope: !911, file: !1, line: 2758, type: !223)
!9433 = !DILocation(line: 2758, column: 7, scope: !911)
!9434 = !DILocalVariable(name: "uri", scope: !911, file: !1, line: 2759, type: !202)
!9435 = !DILocation(line: 2759, column: 13, scope: !911)
!9436 = !DILocalVariable(name: "nPrefixes", scope: !911, file: !1, line: 2760, type: !223)
!9437 = !DILocation(line: 2760, column: 7, scope: !911)
!9438 = !DILocalVariable(name: "binding", scope: !911, file: !1, line: 2761, type: !483)
!9439 = !DILocation(line: 2761, column: 12, scope: !911)
!9440 = !DILocalVariable(name: "localPart", scope: !911, file: !1, line: 2762, type: !210)
!9441 = !DILocation(line: 2762, column: 19, scope: !911)
!9442 = !DILocation(line: 2765, column: 40, scope: !911)
!9443 = !DILocation(line: 2765, column: 49, scope: !911)
!9444 = !DILocation(line: 2765, column: 54, scope: !911)
!9445 = !DILocation(line: 2765, column: 68, scope: !911)
!9446 = !DILocation(line: 2765, column: 80, scope: !911)
!9447 = !DILocation(line: 2765, column: 33, scope: !911)
!9448 = !DILocation(line: 2765, column: 17, scope: !911)
!9449 = !DILocation(line: 2765, column: 15, scope: !911)
!9450 = !DILocation(line: 2766, column: 8, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2766, column: 7)
!9452 = !DILocation(line: 2766, column: 7, scope: !911)
!9453 = !DILocalVariable(name: "name", scope: !9454, file: !1, line: 2767, type: !210)
!9454 = distinct !DILexicalBlock(scope: !9451, file: !1, line: 2766, column: 21)
!9455 = !DILocation(line: 2767, column: 21, scope: !9454)
!9456 = !DILocation(line: 2767, column: 44, scope: !9454)
!9457 = !DILocation(line: 2767, column: 49, scope: !9454)
!9458 = !DILocation(line: 2767, column: 55, scope: !9454)
!9459 = !DILocation(line: 2767, column: 67, scope: !9454)
!9460 = !DILocation(line: 2767, column: 28, scope: !9454)
!9461 = !DILocation(line: 2768, column: 10, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9454, file: !1, line: 2768, column: 9)
!9463 = !DILocation(line: 2768, column: 9, scope: !9454)
!9464 = !DILocation(line: 2769, column: 7, scope: !9462)
!9465 = !DILocation(line: 2770, column: 42, scope: !9454)
!9466 = !DILocation(line: 2770, column: 51, scope: !9454)
!9467 = !DILocation(line: 2770, column: 56, scope: !9454)
!9468 = !DILocation(line: 2770, column: 70, scope: !9454)
!9469 = !DILocation(line: 2770, column: 35, scope: !9454)
!9470 = !DILocation(line: 2770, column: 19, scope: !9454)
!9471 = !DILocation(line: 2770, column: 17, scope: !9454)
!9472 = !DILocation(line: 2772, column: 10, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9454, file: !1, line: 2772, column: 9)
!9474 = !DILocation(line: 2772, column: 9, scope: !9454)
!9475 = !DILocation(line: 2773, column: 7, scope: !9473)
!9476 = !DILocation(line: 2774, column: 9, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9454, file: !1, line: 2774, column: 9)
!9478 = !DILocation(line: 2774, column: 12, scope: !9477)
!9479 = !DILocation(line: 2774, column: 37, scope: !9480)
!9480 = !DILexicalBlockFile(scope: !9477, file: !1, discriminator: 1)
!9481 = !DILocation(line: 2774, column: 45, scope: !9480)
!9482 = !DILocation(line: 2774, column: 16, scope: !9480)
!9483 = !DILocation(line: 2774, column: 9, scope: !9480)
!9484 = !DILocation(line: 2775, column: 7, scope: !9477)
!9485 = !DILocation(line: 2776, column: 3, scope: !9454)
!9486 = !DILocation(line: 2777, column: 18, scope: !911)
!9487 = !DILocation(line: 2777, column: 31, scope: !911)
!9488 = !DILocation(line: 2777, column: 16, scope: !911)
!9489 = !DILocation(line: 2780, column: 7, scope: !911)
!9490 = !DILocation(line: 2780, column: 5, scope: !911)
!9491 = !DILocation(line: 2781, column: 7, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2781, column: 7)
!9493 = !DILocation(line: 2781, column: 11, scope: !9492)
!9494 = !DILocation(line: 2781, column: 9, scope: !9492)
!9495 = !DILocation(line: 2781, column: 26, scope: !9492)
!9496 = !DILocation(line: 2781, column: 24, scope: !9492)
!9497 = !DILocation(line: 2781, column: 7, scope: !911)
!9498 = !DILocalVariable(name: "oldAttsSize", scope: !9499, file: !1, line: 2782, type: !223)
!9499 = distinct !DILexicalBlock(scope: !9492, file: !1, line: 2781, column: 36)
!9500 = !DILocation(line: 2782, column: 9, scope: !9499)
!9501 = !DILocation(line: 2782, column: 23, scope: !9499)
!9502 = !DILocalVariable(name: "temp", scope: !9499, file: !1, line: 2783, type: !359)
!9503 = !DILocation(line: 2783, column: 16, scope: !9499)
!9504 = !DILocation(line: 2787, column: 16, scope: !9499)
!9505 = !DILocation(line: 2787, column: 20, scope: !9499)
!9506 = !DILocation(line: 2787, column: 18, scope: !9499)
!9507 = !DILocation(line: 2787, column: 33, scope: !9499)
!9508 = !DILocation(line: 2787, column: 5, scope: !9499)
!9509 = !DILocation(line: 2787, column: 14, scope: !9499)
!9510 = !DILocation(line: 2788, column: 25, scope: !9499)
!9511 = !DILocation(line: 2788, column: 12, scope: !9499)
!9512 = !DILocation(line: 2788, column: 10, scope: !9499)
!9513 = !DILocation(line: 2789, column: 9, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9499, file: !1, line: 2789, column: 9)
!9515 = !DILocation(line: 2789, column: 14, scope: !9514)
!9516 = !DILocation(line: 2789, column: 9, scope: !9499)
!9517 = !DILocation(line: 2790, column: 7, scope: !9514)
!9518 = !DILocation(line: 2791, column: 12, scope: !9499)
!9519 = !DILocation(line: 2791, column: 5, scope: !9499)
!9520 = !DILocation(line: 2791, column: 10, scope: !9499)
!9521 = !DILocation(line: 2798, column: 9, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9499, file: !1, line: 2798, column: 9)
!9523 = !DILocation(line: 2798, column: 13, scope: !9522)
!9524 = !DILocation(line: 2798, column: 11, scope: !9522)
!9525 = !DILocation(line: 2798, column: 9, scope: !9499)
!9526 = !DILocation(line: 2799, column: 7, scope: !9522)
!9527 = !DILocation(line: 2800, column: 3, scope: !9499)
!9528 = !DILocation(line: 2802, column: 32, scope: !911)
!9529 = !DILocation(line: 2802, column: 13, scope: !911)
!9530 = !DILocation(line: 2802, column: 11, scope: !911)
!9531 = !DILocation(line: 2803, column: 10, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2803, column: 3)
!9533 = !DILocation(line: 2803, column: 8, scope: !9532)
!9534 = !DILocation(line: 2803, column: 15, scope: !9535)
!9535 = !DILexicalBlockFile(scope: !9536, file: !1, discriminator: 1)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !1, line: 2803, column: 3)
!9537 = !DILocation(line: 2803, column: 19, scope: !9535)
!9538 = !DILocation(line: 2803, column: 17, scope: !9535)
!9539 = !DILocation(line: 2803, column: 3, scope: !9535)
!9540 = !DILocalVariable(name: "currAtt", scope: !9541, file: !1, line: 2804, type: !359)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !1, line: 2803, column: 27)
!9542 = !DILocation(line: 2804, column: 16, scope: !9541)
!9543 = !DILocation(line: 2804, column: 32, scope: !9541)
!9544 = !DILocation(line: 2804, column: 27, scope: !9541)
!9545 = !DILocalVariable(name: "attId", scope: !9541, file: !1, line: 2809, type: !519)
!9546 = !DILocation(line: 2809, column: 19, scope: !9541)
!9547 = !DILocation(line: 2809, column: 42, scope: !9541)
!9548 = !DILocation(line: 2809, column: 50, scope: !9541)
!9549 = !DILocation(line: 2809, column: 55, scope: !9541)
!9550 = !DILocation(line: 2809, column: 64, scope: !9541)
!9551 = !DILocation(line: 2810, column: 42, scope: !9541)
!9552 = !DILocation(line: 2810, column: 51, scope: !9541)
!9553 = !DILocation(line: 2811, column: 44, scope: !9541)
!9554 = !DILocation(line: 2811, column: 42, scope: !9541)
!9555 = !DILocation(line: 2809, column: 27, scope: !9541)
!9556 = !DILocation(line: 2812, column: 10, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9541, file: !1, line: 2812, column: 9)
!9558 = !DILocation(line: 2812, column: 9, scope: !9541)
!9559 = !DILocation(line: 2813, column: 7, scope: !9557)
!9560 = !DILocation(line: 2826, column: 10, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9541, file: !1, line: 2826, column: 9)
!9562 = !DILocation(line: 2826, column: 17, scope: !9561)
!9563 = !DILocation(line: 2826, column: 9, scope: !9561)
!9564 = !DILocation(line: 2826, column: 9, scope: !9541)
!9565 = !DILocation(line: 2827, column: 11, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !1, line: 2827, column: 11)
!9567 = distinct !DILexicalBlock(scope: !9561, file: !1, line: 2826, column: 28)
!9568 = !DILocation(line: 2827, column: 18, scope: !9566)
!9569 = !DILocation(line: 2827, column: 15, scope: !9566)
!9570 = !DILocation(line: 2827, column: 11, scope: !9567)
!9571 = !DILocation(line: 2828, column: 25, scope: !9566)
!9572 = !DILocation(line: 2828, column: 20, scope: !9566)
!9573 = !DILocation(line: 2828, column: 28, scope: !9566)
!9574 = !DILocation(line: 2828, column: 9, scope: !9566)
!9575 = !DILocation(line: 2828, column: 18, scope: !9566)
!9576 = !DILocation(line: 2829, column: 7, scope: !9567)
!9577 = !DILocation(line: 2831, column: 6, scope: !9541)
!9578 = !DILocation(line: 2831, column: 13, scope: !9541)
!9579 = !DILocation(line: 2831, column: 5, scope: !9541)
!9580 = !DILocation(line: 2831, column: 23, scope: !9541)
!9581 = !DILocation(line: 2832, column: 27, scope: !9541)
!9582 = !DILocation(line: 2832, column: 34, scope: !9541)
!9583 = !DILocation(line: 2832, column: 21, scope: !9541)
!9584 = !DILocation(line: 2832, column: 5, scope: !9541)
!9585 = !DILocation(line: 2832, column: 25, scope: !9541)
!9586 = !DILocation(line: 2833, column: 15, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9541, file: !1, line: 2833, column: 9)
!9588 = !DILocation(line: 2833, column: 10, scope: !9587)
!9589 = !DILocation(line: 2833, column: 18, scope: !9587)
!9590 = !DILocation(line: 2833, column: 9, scope: !9541)
!9591 = !DILocalVariable(name: "result", scope: !9592, file: !1, line: 2834, type: !24)
!9592 = distinct !DILexicalBlock(scope: !9587, file: !1, line: 2833, column: 30)
!9593 = !DILocation(line: 2834, column: 22, scope: !9592)
!9594 = !DILocalVariable(name: "isCdata", scope: !9592, file: !1, line: 2835, type: !159)
!9595 = !DILocation(line: 2835, column: 16, scope: !9592)
!9596 = !DILocation(line: 2838, column: 11, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9592, file: !1, line: 2838, column: 11)
!9598 = !DILocation(line: 2838, column: 18, scope: !9597)
!9599 = !DILocation(line: 2838, column: 11, scope: !9592)
!9600 = !DILocalVariable(name: "j", scope: !9601, file: !1, line: 2839, type: !223)
!9601 = distinct !DILexicalBlock(scope: !9597, file: !1, line: 2838, column: 34)
!9602 = !DILocation(line: 2839, column: 13, scope: !9601)
!9603 = !DILocation(line: 2840, column: 16, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9601, file: !1, line: 2840, column: 9)
!9605 = !DILocation(line: 2840, column: 14, scope: !9604)
!9606 = !DILocation(line: 2840, column: 21, scope: !9607)
!9607 = !DILexicalBlockFile(scope: !9608, file: !1, discriminator: 1)
!9608 = distinct !DILexicalBlock(scope: !9604, file: !1, line: 2840, column: 9)
!9609 = !DILocation(line: 2840, column: 25, scope: !9607)
!9610 = !DILocation(line: 2840, column: 23, scope: !9607)
!9611 = !DILocation(line: 2840, column: 9, scope: !9607)
!9612 = !DILocation(line: 2841, column: 15, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !1, line: 2841, column: 15)
!9614 = distinct !DILexicalBlock(scope: !9608, file: !1, line: 2840, column: 44)
!9615 = !DILocation(line: 2841, column: 49, scope: !9613)
!9616 = !DILocation(line: 2841, column: 24, scope: !9613)
!9617 = !DILocation(line: 2841, column: 37, scope: !9613)
!9618 = !DILocation(line: 2841, column: 52, scope: !9613)
!9619 = !DILocation(line: 2841, column: 21, scope: !9613)
!9620 = !DILocation(line: 2841, column: 15, scope: !9614)
!9621 = !DILocation(line: 2842, column: 48, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9613, file: !1, line: 2841, column: 56)
!9623 = !DILocation(line: 2842, column: 23, scope: !9622)
!9624 = !DILocation(line: 2842, column: 36, scope: !9622)
!9625 = !DILocation(line: 2842, column: 51, scope: !9622)
!9626 = !DILocation(line: 2842, column: 21, scope: !9622)
!9627 = !DILocation(line: 2843, column: 13, scope: !9622)
!9628 = !DILocation(line: 2845, column: 9, scope: !9614)
!9629 = !DILocation(line: 2840, column: 40, scope: !9630)
!9630 = !DILexicalBlockFile(scope: !9608, file: !1, discriminator: 2)
!9631 = !DILocation(line: 2840, column: 9, scope: !9630)
!9632 = !DILocation(line: 2846, column: 7, scope: !9601)
!9633 = !DILocation(line: 2849, column: 36, scope: !9592)
!9634 = !DILocation(line: 2849, column: 44, scope: !9592)
!9635 = !DILocation(line: 2849, column: 49, scope: !9592)
!9636 = !DILocation(line: 2850, column: 41, scope: !9592)
!9637 = !DILocation(line: 2850, column: 36, scope: !9592)
!9638 = !DILocation(line: 2850, column: 44, scope: !9592)
!9639 = !DILocation(line: 2850, column: 59, scope: !9592)
!9640 = !DILocation(line: 2850, column: 54, scope: !9592)
!9641 = !DILocation(line: 2850, column: 62, scope: !9592)
!9642 = !DILocation(line: 2851, column: 37, scope: !9592)
!9643 = !DILocation(line: 2849, column: 16, scope: !9592)
!9644 = !DILocation(line: 2849, column: 14, scope: !9592)
!9645 = !DILocation(line: 2852, column: 11, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9592, file: !1, line: 2852, column: 11)
!9647 = !DILocation(line: 2852, column: 11, scope: !9592)
!9648 = !DILocation(line: 2853, column: 16, scope: !9646)
!9649 = !DILocation(line: 2853, column: 9, scope: !9646)
!9650 = !DILocation(line: 2854, column: 27, scope: !9592)
!9651 = !DILocation(line: 2854, column: 15, scope: !9592)
!9652 = !DILocation(line: 2854, column: 7, scope: !9592)
!9653 = !DILocation(line: 2854, column: 25, scope: !9592)
!9654 = !DILocation(line: 2855, column: 7, scope: !9592)
!9655 = !DILocation(line: 2856, column: 5, scope: !9592)
!9656 = !DILocation(line: 2859, column: 44, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9587, file: !1, line: 2857, column: 10)
!9658 = !DILocation(line: 2859, column: 54, scope: !9657)
!9659 = !DILocation(line: 2859, column: 64, scope: !9657)
!9660 = !DILocation(line: 2859, column: 59, scope: !9657)
!9661 = !DILocation(line: 2859, column: 67, scope: !9657)
!9662 = !DILocation(line: 2860, column: 48, scope: !9657)
!9663 = !DILocation(line: 2860, column: 43, scope: !9657)
!9664 = !DILocation(line: 2860, column: 51, scope: !9657)
!9665 = !DILocation(line: 2859, column: 27, scope: !9657)
!9666 = !DILocation(line: 2859, column: 15, scope: !9657)
!9667 = !DILocation(line: 2859, column: 7, scope: !9657)
!9668 = !DILocation(line: 2859, column: 25, scope: !9657)
!9669 = !DILocation(line: 2861, column: 19, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9657, file: !1, line: 2861, column: 11)
!9671 = !DILocation(line: 2861, column: 11, scope: !9670)
!9672 = !DILocation(line: 2861, column: 29, scope: !9670)
!9673 = !DILocation(line: 2861, column: 11, scope: !9657)
!9674 = !DILocation(line: 2862, column: 9, scope: !9670)
!9675 = !DILocation(line: 2863, column: 7, scope: !9657)
!9676 = !DILocation(line: 2866, column: 9, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9541, file: !1, line: 2866, column: 9)
!9678 = !DILocation(line: 2866, column: 16, scope: !9677)
!9679 = !DILocation(line: 2866, column: 9, scope: !9541)
!9680 = !DILocation(line: 2867, column: 11, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9682, file: !1, line: 2867, column: 11)
!9682 = distinct !DILexicalBlock(scope: !9677, file: !1, line: 2866, column: 24)
!9683 = !DILocation(line: 2867, column: 18, scope: !9681)
!9684 = !DILocation(line: 2867, column: 11, scope: !9682)
!9685 = !DILocalVariable(name: "result", scope: !9686, file: !1, line: 2869, type: !24)
!9686 = distinct !DILexicalBlock(scope: !9681, file: !1, line: 2867, column: 25)
!9687 = !DILocation(line: 2869, column: 24, scope: !9686)
!9688 = !DILocation(line: 2869, column: 44, scope: !9686)
!9689 = !DILocation(line: 2869, column: 52, scope: !9686)
!9690 = !DILocation(line: 2869, column: 59, scope: !9686)
!9691 = !DILocation(line: 2869, column: 67, scope: !9686)
!9692 = !DILocation(line: 2870, column: 52, scope: !9686)
!9693 = !DILocation(line: 2870, column: 44, scope: !9686)
!9694 = !DILocation(line: 2870, column: 63, scope: !9686)
!9695 = !DILocation(line: 2869, column: 33, scope: !9686)
!9696 = !DILocation(line: 2871, column: 13, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9686, file: !1, line: 2871, column: 13)
!9698 = !DILocation(line: 2871, column: 13, scope: !9686)
!9699 = !DILocation(line: 2872, column: 18, scope: !9697)
!9700 = !DILocation(line: 2872, column: 11, scope: !9697)
!9701 = !DILocation(line: 2873, column: 9, scope: !9686)
!9702 = !DILocation(line: 2874, column: 7, scope: !9686)
!9703 = !DILocation(line: 2877, column: 17, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9681, file: !1, line: 2875, column: 12)
!9705 = !DILocation(line: 2878, column: 18, scope: !9704)
!9706 = !DILocation(line: 2879, column: 10, scope: !9704)
!9707 = !DILocation(line: 2879, column: 17, scope: !9704)
!9708 = !DILocation(line: 2879, column: 9, scope: !9704)
!9709 = !DILocation(line: 2879, column: 27, scope: !9704)
!9710 = !DILocation(line: 2881, column: 5, scope: !9682)
!9711 = !DILocation(line: 2883, column: 15, scope: !9677)
!9712 = !DILocation(line: 2884, column: 3, scope: !9541)
!9713 = !DILocation(line: 2803, column: 23, scope: !9714)
!9714 = !DILexicalBlockFile(scope: !9536, file: !1, discriminator: 2)
!9715 = !DILocation(line: 2803, column: 3, scope: !9714)
!9716 = !DILocation(line: 2887, column: 20, scope: !911)
!9717 = !DILocation(line: 2887, column: 3, scope: !911)
!9718 = !DILocation(line: 2887, column: 18, scope: !911)
!9719 = !DILocation(line: 2888, column: 7, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2888, column: 7)
!9721 = !DILocation(line: 2888, column: 20, scope: !9720)
!9722 = !DILocation(line: 2888, column: 26, scope: !9720)
!9723 = !DILocation(line: 2888, column: 30, scope: !9724)
!9724 = !DILexicalBlockFile(scope: !9720, file: !1, discriminator: 1)
!9725 = !DILocation(line: 2888, column: 43, scope: !9724)
!9726 = !DILocation(line: 2888, column: 50, scope: !9724)
!9727 = !DILocation(line: 2888, column: 29, scope: !9724)
!9728 = !DILocation(line: 2888, column: 7, scope: !9724)
!9729 = !DILocation(line: 2889, column: 12, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9731, file: !1, line: 2889, column: 5)
!9731 = distinct !DILexicalBlock(scope: !9720, file: !1, line: 2888, column: 61)
!9732 = !DILocation(line: 2889, column: 10, scope: !9730)
!9733 = !DILocation(line: 2889, column: 17, scope: !9734)
!9734 = !DILexicalBlockFile(scope: !9735, file: !1, discriminator: 1)
!9735 = distinct !DILexicalBlock(scope: !9730, file: !1, line: 2889, column: 5)
!9736 = !DILocation(line: 2889, column: 21, scope: !9734)
!9737 = !DILocation(line: 2889, column: 19, scope: !9734)
!9738 = !DILocation(line: 2889, column: 5, scope: !9734)
!9739 = !DILocation(line: 2890, column: 19, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9735, file: !1, line: 2890, column: 11)
!9741 = !DILocation(line: 2890, column: 11, scope: !9740)
!9742 = !DILocation(line: 2890, column: 25, scope: !9740)
!9743 = !DILocation(line: 2890, column: 38, scope: !9740)
!9744 = !DILocation(line: 2890, column: 45, scope: !9740)
!9745 = !DILocation(line: 2890, column: 22, scope: !9740)
!9746 = !DILocation(line: 2890, column: 11, scope: !9735)
!9747 = !DILocation(line: 2891, column: 22, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9740, file: !1, line: 2890, column: 51)
!9749 = !DILocation(line: 2891, column: 9, scope: !9748)
!9750 = !DILocation(line: 2891, column: 20, scope: !9748)
!9751 = !DILocation(line: 2892, column: 9, scope: !9748)
!9752 = !DILocation(line: 2890, column: 45, scope: !9753)
!9753 = !DILexicalBlockFile(scope: !9740, file: !1, discriminator: 1)
!9754 = !DILocation(line: 2889, column: 33, scope: !9755)
!9755 = !DILexicalBlockFile(scope: !9735, file: !1, discriminator: 2)
!9756 = !DILocation(line: 2889, column: 5, scope: !9755)
!9757 = !DILocation(line: 2894, column: 3, scope: !9731)
!9758 = !DILocation(line: 2896, column: 5, scope: !9720)
!9759 = !DILocation(line: 2896, column: 16, scope: !9720)
!9760 = !DILocation(line: 2899, column: 10, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2899, column: 3)
!9762 = !DILocation(line: 2899, column: 8, scope: !9761)
!9763 = !DILocation(line: 2899, column: 15, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !9765, file: !1, discriminator: 1)
!9765 = distinct !DILexicalBlock(scope: !9761, file: !1, line: 2899, column: 3)
!9766 = !DILocation(line: 2899, column: 19, scope: !9764)
!9767 = !DILocation(line: 2899, column: 17, scope: !9764)
!9768 = !DILocation(line: 2899, column: 3, scope: !9764)
!9769 = !DILocalVariable(name: "da", scope: !9770, file: !1, line: 2900, type: !9771)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !1, line: 2899, column: 38)
!9771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9772, size: 64, align: 64)
!9772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!9773 = !DILocation(line: 2900, column: 30, scope: !9770)
!9774 = !DILocation(line: 2900, column: 35, scope: !9770)
!9775 = !DILocation(line: 2900, column: 48, scope: !9770)
!9776 = !DILocation(line: 2900, column: 62, scope: !9770)
!9777 = !DILocation(line: 2900, column: 60, scope: !9770)
!9778 = !DILocation(line: 2901, column: 11, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9770, file: !1, line: 2901, column: 9)
!9780 = !DILocation(line: 2901, column: 15, scope: !9779)
!9781 = !DILocation(line: 2901, column: 19, scope: !9779)
!9782 = !DILocation(line: 2901, column: 10, scope: !9779)
!9783 = !DILocation(line: 2901, column: 29, scope: !9779)
!9784 = !DILocation(line: 2901, column: 32, scope: !9785)
!9785 = !DILexicalBlockFile(scope: !9779, file: !1, discriminator: 1)
!9786 = !DILocation(line: 2901, column: 36, scope: !9785)
!9787 = !DILocation(line: 2901, column: 9, scope: !9785)
!9788 = !DILocation(line: 2902, column: 11, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !1, line: 2902, column: 11)
!9790 = distinct !DILexicalBlock(scope: !9779, file: !1, line: 2901, column: 43)
!9791 = !DILocation(line: 2902, column: 15, scope: !9789)
!9792 = !DILocation(line: 2902, column: 19, scope: !9789)
!9793 = !DILocation(line: 2902, column: 11, scope: !9790)
!9794 = !DILocation(line: 2903, column: 13, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9796, file: !1, line: 2903, column: 13)
!9796 = distinct !DILexicalBlock(scope: !9789, file: !1, line: 2902, column: 27)
!9797 = !DILocation(line: 2903, column: 17, scope: !9795)
!9798 = !DILocation(line: 2903, column: 21, scope: !9795)
!9799 = !DILocation(line: 2903, column: 13, scope: !9796)
!9800 = !DILocalVariable(name: "result", scope: !9801, file: !1, line: 2904, type: !24)
!9801 = distinct !DILexicalBlock(scope: !9795, file: !1, line: 2903, column: 28)
!9802 = !DILocation(line: 2904, column: 26, scope: !9801)
!9803 = !DILocation(line: 2904, column: 46, scope: !9801)
!9804 = !DILocation(line: 2904, column: 54, scope: !9801)
!9805 = !DILocation(line: 2904, column: 58, scope: !9801)
!9806 = !DILocation(line: 2904, column: 62, scope: !9801)
!9807 = !DILocation(line: 2904, column: 70, scope: !9801)
!9808 = !DILocation(line: 2904, column: 74, scope: !9801)
!9809 = !DILocation(line: 2905, column: 46, scope: !9801)
!9810 = !DILocation(line: 2905, column: 50, scope: !9801)
!9811 = !DILocation(line: 2905, column: 57, scope: !9801)
!9812 = !DILocation(line: 2904, column: 35, scope: !9801)
!9813 = !DILocation(line: 2906, column: 15, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9801, file: !1, line: 2906, column: 15)
!9815 = !DILocation(line: 2906, column: 15, scope: !9801)
!9816 = !DILocation(line: 2907, column: 20, scope: !9814)
!9817 = !DILocation(line: 2907, column: 13, scope: !9814)
!9818 = !DILocation(line: 2908, column: 9, scope: !9801)
!9819 = !DILocation(line: 2910, column: 12, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9795, file: !1, line: 2909, column: 14)
!9821 = !DILocation(line: 2910, column: 16, scope: !9820)
!9822 = !DILocation(line: 2910, column: 20, scope: !9820)
!9823 = !DILocation(line: 2910, column: 11, scope: !9820)
!9824 = !DILocation(line: 2910, column: 30, scope: !9820)
!9825 = !DILocation(line: 2911, column: 20, scope: !9820)
!9826 = !DILocation(line: 2912, column: 33, scope: !9820)
!9827 = !DILocation(line: 2912, column: 37, scope: !9820)
!9828 = !DILocation(line: 2912, column: 41, scope: !9820)
!9829 = !DILocation(line: 2912, column: 27, scope: !9820)
!9830 = !DILocation(line: 2912, column: 11, scope: !9820)
!9831 = !DILocation(line: 2912, column: 31, scope: !9820)
!9832 = !DILocation(line: 2913, column: 33, scope: !9820)
!9833 = !DILocation(line: 2913, column: 37, scope: !9820)
!9834 = !DILocation(line: 2913, column: 27, scope: !9820)
!9835 = !DILocation(line: 2913, column: 11, scope: !9820)
!9836 = !DILocation(line: 2913, column: 31, scope: !9820)
!9837 = !DILocation(line: 2915, column: 7, scope: !9796)
!9838 = !DILocation(line: 2917, column: 10, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9789, file: !1, line: 2916, column: 12)
!9840 = !DILocation(line: 2917, column: 14, scope: !9839)
!9841 = !DILocation(line: 2917, column: 18, scope: !9839)
!9842 = !DILocation(line: 2917, column: 9, scope: !9839)
!9843 = !DILocation(line: 2917, column: 28, scope: !9839)
!9844 = !DILocation(line: 2918, column: 31, scope: !9839)
!9845 = !DILocation(line: 2918, column: 35, scope: !9839)
!9846 = !DILocation(line: 2918, column: 39, scope: !9839)
!9847 = !DILocation(line: 2918, column: 25, scope: !9839)
!9848 = !DILocation(line: 2918, column: 9, scope: !9839)
!9849 = !DILocation(line: 2918, column: 29, scope: !9839)
!9850 = !DILocation(line: 2919, column: 31, scope: !9839)
!9851 = !DILocation(line: 2919, column: 35, scope: !9839)
!9852 = !DILocation(line: 2919, column: 25, scope: !9839)
!9853 = !DILocation(line: 2919, column: 9, scope: !9839)
!9854 = !DILocation(line: 2919, column: 29, scope: !9839)
!9855 = !DILocation(line: 2921, column: 5, scope: !9790)
!9856 = !DILocation(line: 2922, column: 3, scope: !9770)
!9857 = !DILocation(line: 2899, column: 34, scope: !9858)
!9858 = !DILexicalBlockFile(scope: !9765, file: !1, discriminator: 2)
!9859 = !DILocation(line: 2899, column: 3, scope: !9858)
!9860 = !DILocation(line: 2923, column: 11, scope: !911)
!9861 = !DILocation(line: 2923, column: 3, scope: !911)
!9862 = !DILocation(line: 2923, column: 21, scope: !911)
!9863 = !DILocation(line: 2927, column: 5, scope: !911)
!9864 = !DILocation(line: 2928, column: 7, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !911, file: !1, line: 2928, column: 7)
!9866 = !DILocation(line: 2928, column: 7, scope: !911)
!9867 = !DILocalVariable(name: "j", scope: !9868, file: !1, line: 2929, type: !223)
!9868 = distinct !DILexicalBlock(scope: !9865, file: !1, line: 2928, column: 18)
!9869 = !DILocation(line: 2929, column: 9, scope: !9868)
!9870 = !DILocalVariable(name: "version", scope: !9868, file: !1, line: 2930, type: !182)
!9871 = !DILocation(line: 2930, column: 19, scope: !9868)
!9872 = !DILocation(line: 2930, column: 29, scope: !9868)
!9873 = !DILocalVariable(name: "nsAttsSize", scope: !9868, file: !1, line: 2931, type: !223)
!9874 = !DILocation(line: 2931, column: 9, scope: !9868)
!9875 = !DILocation(line: 2931, column: 32, scope: !9868)
!9876 = !DILocation(line: 2931, column: 29, scope: !9868)
!9877 = !DILocation(line: 2933, column: 10, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9868, file: !1, line: 2933, column: 9)
!9879 = !DILocation(line: 2933, column: 20, scope: !9878)
!9880 = !DILocation(line: 2933, column: 29, scope: !9878)
!9881 = !DILocation(line: 2933, column: 26, scope: !9878)
!9882 = !DILocation(line: 2933, column: 9, scope: !9868)
!9883 = !DILocalVariable(name: "temp", scope: !9884, file: !1, line: 2934, type: !623)
!9884 = distinct !DILexicalBlock(scope: !9878, file: !1, line: 2933, column: 42)
!9885 = !DILocation(line: 2934, column: 15, scope: !9884)
!9886 = !DILocation(line: 2936, column: 7, scope: !9884)
!9887 = !DILocation(line: 2936, column: 14, scope: !9888)
!9888 = !DILexicalBlockFile(scope: !9884, file: !1, discriminator: 1)
!9889 = !DILocation(line: 2936, column: 27, scope: !9888)
!9890 = !DILocation(line: 2936, column: 38, scope: !9888)
!9891 = !DILocation(line: 2936, column: 24, scope: !9888)
!9892 = !DILocation(line: 2936, column: 7, scope: !9888)
!9893 = !DILocation(line: 2936, column: 7, scope: !9894)
!9894 = !DILexicalBlockFile(scope: !9884, file: !1, discriminator: 2)
!9895 = !DILocation(line: 2937, column: 11, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9884, file: !1, line: 2937, column: 11)
!9897 = !DILocation(line: 2937, column: 23, scope: !9896)
!9898 = !DILocation(line: 2937, column: 11, scope: !9884)
!9899 = !DILocation(line: 2938, column: 9, scope: !9896)
!9900 = !DILocation(line: 2938, column: 21, scope: !9896)
!9901 = !DILocation(line: 2939, column: 30, scope: !9884)
!9902 = !DILocation(line: 2939, column: 27, scope: !9884)
!9903 = !DILocation(line: 2939, column: 18, scope: !9884)
!9904 = !DILocation(line: 2940, column: 24, scope: !9884)
!9905 = !DILocation(line: 2940, column: 14, scope: !9884)
!9906 = !DILocation(line: 2940, column: 12, scope: !9884)
!9907 = !DILocation(line: 2941, column: 12, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9884, file: !1, line: 2941, column: 11)
!9909 = !DILocation(line: 2941, column: 11, scope: !9884)
!9910 = !DILocation(line: 2942, column: 9, scope: !9908)
!9911 = !DILocation(line: 2943, column: 16, scope: !9884)
!9912 = !DILocation(line: 2943, column: 7, scope: !9884)
!9913 = !DILocation(line: 2943, column: 14, scope: !9884)
!9914 = !DILocation(line: 2944, column: 15, scope: !9884)
!9915 = !DILocation(line: 2945, column: 5, scope: !9884)
!9916 = !DILocation(line: 2947, column: 10, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9868, file: !1, line: 2947, column: 9)
!9918 = !DILocation(line: 2947, column: 9, scope: !9868)
!9919 = !DILocation(line: 2948, column: 15, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9917, file: !1, line: 2947, column: 19)
!9921 = !DILocation(line: 2949, column: 16, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9920, file: !1, line: 2949, column: 7)
!9923 = !DILocation(line: 2949, column: 14, scope: !9922)
!9924 = !DILocation(line: 2949, column: 12, scope: !9922)
!9925 = !DILocation(line: 2949, column: 28, scope: !9926)
!9926 = !DILexicalBlockFile(scope: !9927, file: !1, discriminator: 1)
!9927 = distinct !DILexicalBlock(scope: !9922, file: !1, line: 2949, column: 7)
!9928 = !DILocation(line: 2949, column: 30, scope: !9926)
!9929 = !DILocation(line: 2949, column: 7, scope: !9926)
!9930 = !DILocation(line: 2950, column: 31, scope: !9927)
!9931 = !DILocation(line: 2950, column: 16, scope: !9927)
!9932 = !DILocation(line: 2950, column: 9, scope: !9927)
!9933 = !DILocation(line: 2950, column: 21, scope: !9927)
!9934 = !DILocation(line: 2950, column: 29, scope: !9927)
!9935 = !DILocation(line: 2949, column: 7, scope: !9936)
!9936 = !DILexicalBlockFile(scope: !9927, file: !1, discriminator: 2)
!9937 = !DILocation(line: 2951, column: 5, scope: !9920)
!9938 = !DILocation(line: 2952, column: 21, scope: !9868)
!9939 = !DILocation(line: 2952, column: 5, scope: !9868)
!9940 = !DILocation(line: 2952, column: 19, scope: !9868)
!9941 = !DILocation(line: 2955, column: 5, scope: !9868)
!9942 = !DILocation(line: 2955, column: 12, scope: !9943)
!9943 = !DILexicalBlockFile(scope: !9944, file: !1, discriminator: 1)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !1, line: 2955, column: 5)
!9945 = distinct !DILexicalBlock(scope: !9868, file: !1, line: 2955, column: 5)
!9946 = !DILocation(line: 2955, column: 16, scope: !9943)
!9947 = !DILocation(line: 2955, column: 14, scope: !9943)
!9948 = !DILocation(line: 2955, column: 5, scope: !9943)
!9949 = !DILocalVariable(name: "s", scope: !9950, file: !1, line: 2956, type: !210)
!9950 = distinct !DILexicalBlock(scope: !9944, file: !1, line: 2955, column: 34)
!9951 = !DILocation(line: 2956, column: 23, scope: !9950)
!9952 = !DILocation(line: 2956, column: 35, scope: !9950)
!9953 = !DILocation(line: 2956, column: 27, scope: !9950)
!9954 = !DILocation(line: 2957, column: 11, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9950, file: !1, line: 2957, column: 11)
!9956 = !DILocation(line: 2957, column: 17, scope: !9955)
!9957 = !DILocation(line: 2957, column: 11, scope: !9950)
!9958 = !DILocalVariable(name: "id", scope: !9959, file: !1, line: 2958, type: !519)
!9959 = distinct !DILexicalBlock(scope: !9955, file: !1, line: 2957, column: 23)
!9960 = !DILocation(line: 2958, column: 23, scope: !9959)
!9961 = !DILocalVariable(name: "b", scope: !9959, file: !1, line: 2959, type: !9962)
!9962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9963, size: 64, align: 64)
!9963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!9964 = !DILocation(line: 2959, column: 24, scope: !9959)
!9965 = !DILocalVariable(name: "uriHash", scope: !9959, file: !1, line: 2960, type: !182)
!9966 = !DILocation(line: 2960, column: 23, scope: !9959)
!9967 = !DILocation(line: 2960, column: 33, scope: !9959)
!9968 = !DILocation(line: 2961, column: 22, scope: !9959)
!9969 = !DILocation(line: 2961, column: 9, scope: !9959)
!9970 = !DILocation(line: 2961, column: 29, scope: !9959)
!9971 = !DILocation(line: 2962, column: 37, scope: !9959)
!9972 = !DILocation(line: 2962, column: 46, scope: !9959)
!9973 = !DILocation(line: 2962, column: 51, scope: !9959)
!9974 = !DILocation(line: 2962, column: 65, scope: !9959)
!9975 = !DILocation(line: 2962, column: 30, scope: !9959)
!9976 = !DILocation(line: 2962, column: 14, scope: !9959)
!9977 = !DILocation(line: 2962, column: 12, scope: !9959)
!9978 = !DILocation(line: 2963, column: 14, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 2963, column: 13)
!9980 = !DILocation(line: 2963, column: 17, scope: !9979)
!9981 = !DILocation(line: 2963, column: 21, scope: !9982)
!9982 = !DILexicalBlockFile(scope: !9979, file: !1, discriminator: 1)
!9983 = !DILocation(line: 2963, column: 25, scope: !9982)
!9984 = !DILocation(line: 2963, column: 13, scope: !9982)
!9985 = !DILocation(line: 2964, column: 11, scope: !9979)
!9986 = !DILocation(line: 2965, column: 13, scope: !9959)
!9987 = !DILocation(line: 2965, column: 17, scope: !9959)
!9988 = !DILocation(line: 2965, column: 25, scope: !9959)
!9989 = !DILocation(line: 2965, column: 11, scope: !9959)
!9990 = !DILocation(line: 2966, column: 14, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 2966, column: 13)
!9992 = !DILocation(line: 2966, column: 13, scope: !9959)
!9993 = !DILocation(line: 2967, column: 11, scope: !9991)
!9994 = !DILocation(line: 2970, column: 16, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 2970, column: 9)
!9996 = !DILocation(line: 2970, column: 14, scope: !9995)
!9997 = !DILocation(line: 2970, column: 21, scope: !9998)
!9998 = !DILexicalBlockFile(scope: !9999, file: !1, discriminator: 1)
!9999 = distinct !DILexicalBlock(scope: !9995, file: !1, line: 2970, column: 9)
!10000 = !DILocation(line: 2970, column: 25, scope: !9998)
!10001 = !DILocation(line: 2970, column: 28, scope: !9998)
!10002 = !DILocation(line: 2970, column: 23, scope: !9998)
!10003 = !DILocation(line: 2970, column: 9, scope: !9998)
!10004 = !DILocalVariable(name: "c", scope: !10005, file: !1, line: 2971, type: !211)
!10005 = distinct !DILexicalBlock(scope: !9999, file: !1, line: 2970, column: 41)
!10006 = !DILocation(line: 2971, column: 26, scope: !10005)
!10007 = !DILocation(line: 2971, column: 37, scope: !10005)
!10008 = !DILocation(line: 2971, column: 30, scope: !10005)
!10009 = !DILocation(line: 2971, column: 33, scope: !10005)
!10010 = !DILocation(line: 2972, column: 16, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10005, file: !1, line: 2972, column: 15)
!10012 = !DILocation(line: 2972, column: 16, scope: !10013)
!10013 = !DILexicalBlockFile(scope: !10011, file: !1, discriminator: 1)
!10014 = !DILocation(line: 2972, column: 15, scope: !10013)
!10015 = !DILocation(line: 2972, column: 16, scope: !10016)
!10016 = !DILexicalBlockFile(scope: !10011, file: !1, discriminator: 2)
!10017 = !DILocation(line: 2972, column: 16, scope: !10018)
!10018 = !DILexicalBlockFile(scope: !10011, file: !1, discriminator: 3)
!10019 = !DILocation(line: 2972, column: 15, scope: !10018)
!10020 = !DILocation(line: 2973, column: 13, scope: !10011)
!10021 = !DILocation(line: 2974, column: 21, scope: !10005)
!10022 = !DILocation(line: 2974, column: 19, scope: !10005)
!10023 = !DILocation(line: 2975, column: 9, scope: !10005)
!10024 = !DILocation(line: 2970, column: 37, scope: !10025)
!10025 = !DILexicalBlockFile(scope: !9999, file: !1, discriminator: 2)
!10026 = !DILocation(line: 2970, column: 9, scope: !10025)
!10027 = !DILocation(line: 2976, column: 9, scope: !9959)
!10028 = !DILocation(line: 2976, column: 18, scope: !10029)
!10029 = !DILexicalBlockFile(scope: !9959, file: !1, discriminator: 1)
!10030 = !DILocation(line: 2976, column: 16, scope: !10029)
!10031 = !DILocation(line: 2976, column: 21, scope: !10029)
!10032 = !DILocation(line: 2976, column: 9, scope: !10029)
!10033 = !DILocation(line: 2976, column: 9, scope: !10034)
!10034 = !DILexicalBlockFile(scope: !9959, file: !1, discriminator: 2)
!10035 = !DILocation(line: 2978, column: 9, scope: !9959)
!10036 = !DILocalVariable(name: "c", scope: !10037, file: !1, line: 2979, type: !211)
!10037 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 2978, column: 12)
!10038 = !DILocation(line: 2979, column: 26, scope: !10037)
!10039 = !DILocation(line: 2979, column: 31, scope: !10037)
!10040 = !DILocation(line: 2979, column: 30, scope: !10037)
!10041 = !DILocation(line: 2980, column: 16, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10037, file: !1, line: 2980, column: 15)
!10043 = !DILocation(line: 2980, column: 16, scope: !10044)
!10044 = !DILexicalBlockFile(scope: !10042, file: !1, discriminator: 1)
!10045 = !DILocation(line: 2980, column: 15, scope: !10044)
!10046 = !DILocation(line: 2980, column: 16, scope: !10047)
!10047 = !DILexicalBlockFile(scope: !10042, file: !1, discriminator: 2)
!10048 = !DILocation(line: 2980, column: 16, scope: !10049)
!10049 = !DILexicalBlockFile(scope: !10042, file: !1, discriminator: 3)
!10050 = !DILocation(line: 2980, column: 15, scope: !10049)
!10051 = !DILocation(line: 2981, column: 13, scope: !10042)
!10052 = !DILocation(line: 2982, column: 21, scope: !10037)
!10053 = !DILocation(line: 2982, column: 19, scope: !10037)
!10054 = !DILocation(line: 2983, column: 9, scope: !10037)
!10055 = !DILocation(line: 2983, column: 20, scope: !10029)
!10056 = !DILocation(line: 2983, column: 18, scope: !10029)
!10057 = !DILocation(line: 2983, column: 9, scope: !10029)
!10058 = !DILocalVariable(name: "step", scope: !10059, file: !1, line: 2988, type: !160)
!10059 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 2985, column: 9)
!10060 = !DILocation(line: 2988, column: 25, scope: !10059)
!10061 = !DILocalVariable(name: "mask", scope: !10059, file: !1, line: 2989, type: !182)
!10062 = !DILocation(line: 2989, column: 25, scope: !10059)
!10063 = !DILocation(line: 2989, column: 32, scope: !10059)
!10064 = !DILocation(line: 2989, column: 43, scope: !10059)
!10065 = !DILocation(line: 2990, column: 15, scope: !10059)
!10066 = !DILocation(line: 2990, column: 25, scope: !10059)
!10067 = !DILocation(line: 2990, column: 23, scope: !10059)
!10068 = !DILocation(line: 2990, column: 13, scope: !10059)
!10069 = !DILocation(line: 2991, column: 11, scope: !10059)
!10070 = !DILocation(line: 2991, column: 25, scope: !10071)
!10071 = !DILexicalBlockFile(scope: !10059, file: !1, discriminator: 1)
!10072 = !DILocation(line: 2991, column: 18, scope: !10071)
!10073 = !DILocation(line: 2991, column: 28, scope: !10071)
!10074 = !DILocation(line: 2991, column: 39, scope: !10071)
!10075 = !DILocation(line: 2991, column: 36, scope: !10071)
!10076 = !DILocation(line: 2991, column: 11, scope: !10071)
!10077 = !DILocation(line: 2993, column: 17, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !1, line: 2993, column: 17)
!10079 = distinct !DILexicalBlock(scope: !10059, file: !1, line: 2991, column: 48)
!10080 = !DILocation(line: 2993, column: 35, scope: !10078)
!10081 = !DILocation(line: 2993, column: 28, scope: !10078)
!10082 = !DILocation(line: 2993, column: 38, scope: !10078)
!10083 = !DILocation(line: 2993, column: 25, scope: !10078)
!10084 = !DILocation(line: 2993, column: 17, scope: !10079)
!10085 = !DILocalVariable(name: "s1", scope: !10086, file: !1, line: 2994, type: !210)
!10086 = distinct !DILexicalBlock(scope: !10078, file: !1, line: 2993, column: 44)
!10087 = !DILocation(line: 2994, column: 31, scope: !10086)
!10088 = !DILocation(line: 2994, column: 36, scope: !10086)
!10089 = !DILocalVariable(name: "s2", scope: !10086, file: !1, line: 2995, type: !210)
!10090 = !DILocation(line: 2995, column: 31, scope: !10086)
!10091 = !DILocation(line: 2995, column: 43, scope: !10086)
!10092 = !DILocation(line: 2995, column: 36, scope: !10086)
!10093 = !DILocation(line: 2995, column: 46, scope: !10086)
!10094 = !DILocation(line: 2997, column: 15, scope: !10086)
!10095 = !DILocation(line: 2997, column: 23, scope: !10096)
!10096 = !DILexicalBlockFile(scope: !10097, file: !1, discriminator: 1)
!10097 = distinct !DILexicalBlock(scope: !10098, file: !1, line: 2997, column: 15)
!10098 = distinct !DILexicalBlock(scope: !10086, file: !1, line: 2997, column: 15)
!10099 = !DILocation(line: 2997, column: 22, scope: !10096)
!10100 = !DILocation(line: 2997, column: 30, scope: !10096)
!10101 = !DILocation(line: 2997, column: 29, scope: !10096)
!10102 = !DILocation(line: 2997, column: 26, scope: !10096)
!10103 = !DILocation(line: 2997, column: 33, scope: !10096)
!10104 = !DILocation(line: 2997, column: 37, scope: !10105)
!10105 = !DILexicalBlockFile(scope: !10097, file: !1, discriminator: 2)
!10106 = !DILocation(line: 2997, column: 36, scope: !10105)
!10107 = !DILocation(line: 2997, column: 40, scope: !10105)
!10108 = !DILocation(line: 2997, column: 15, scope: !10109)
!10109 = !DILexicalBlockFile(scope: !10098, file: !1, discriminator: 3)
!10110 = !DILocation(line: 2997, column: 15, scope: !10111)
!10111 = !DILexicalBlockFile(scope: !10098, file: !1, discriminator: 4)
!10112 = !DILocation(line: 2997, column: 48, scope: !10113)
!10113 = !DILexicalBlockFile(scope: !10097, file: !1, discriminator: 5)
!10114 = !DILocation(line: 2997, column: 54, scope: !10113)
!10115 = !DILocation(line: 2997, column: 15, scope: !10113)
!10116 = !DILocation(line: 2998, column: 20, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10086, file: !1, line: 2998, column: 19)
!10118 = !DILocation(line: 2998, column: 19, scope: !10117)
!10119 = !DILocation(line: 2998, column: 23, scope: !10117)
!10120 = !DILocation(line: 2998, column: 19, scope: !10086)
!10121 = !DILocation(line: 2999, column: 17, scope: !10117)
!10122 = !DILocation(line: 3000, column: 13, scope: !10086)
!10123 = !DILocation(line: 3001, column: 18, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10079, file: !1, line: 3001, column: 17)
!10125 = !DILocation(line: 3001, column: 17, scope: !10079)
!10126 = !DILocation(line: 3002, column: 22, scope: !10124)
!10127 = !DILocation(line: 3002, column: 20, scope: !10124)
!10128 = !DILocation(line: 3002, column: 15, scope: !10124)
!10129 = !DILocation(line: 3003, column: 13, scope: !10079)
!10130 = !DILocation(line: 3003, column: 17, scope: !10079)
!10131 = !DILocation(line: 3003, column: 15, scope: !10079)
!10132 = !DILocation(line: 3003, column: 30, scope: !10133)
!10133 = !DILexicalBlockFile(scope: !10079, file: !1, discriminator: 1)
!10134 = !DILocation(line: 3003, column: 43, scope: !10133)
!10135 = !DILocation(line: 3003, column: 41, scope: !10133)
!10136 = !DILocation(line: 3003, column: 27, scope: !10133)
!10137 = !DILocation(line: 3003, column: 13, scope: !10133)
!10138 = !DILocation(line: 3003, column: 57, scope: !10139)
!10139 = !DILexicalBlockFile(scope: !10079, file: !1, discriminator: 2)
!10140 = !DILocation(line: 3003, column: 54, scope: !10139)
!10141 = !DILocation(line: 3003, column: 13, scope: !10139)
!10142 = !DILocation(line: 3003, column: 13, scope: !10143)
!10143 = !DILexicalBlockFile(scope: !10079, file: !1, discriminator: 3)
!10144 = !DILocation(line: 2991, column: 11, scope: !10145)
!10145 = !DILexicalBlockFile(scope: !10059, file: !1, discriminator: 2)
!10146 = !DILocation(line: 3007, column: 13, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 3007, column: 13)
!10148 = !DILocation(line: 3007, column: 13, scope: !9959)
!10149 = !DILocation(line: 3008, column: 30, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10147, file: !1, line: 3007, column: 26)
!10151 = !DILocation(line: 3008, column: 11, scope: !10150)
!10152 = !DILocation(line: 3008, column: 20, scope: !10150)
!10153 = !DILocation(line: 3008, column: 28, scope: !10150)
!10154 = !DILocation(line: 3009, column: 15, scope: !10150)
!10155 = !DILocation(line: 3009, column: 18, scope: !10150)
!10156 = !DILocation(line: 3009, column: 26, scope: !10150)
!10157 = !DILocation(line: 3009, column: 13, scope: !10150)
!10158 = !DILocation(line: 3010, column: 11, scope: !10150)
!10159 = !DILocation(line: 3011, column: 18, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1, line: 3011, column: 17)
!10161 = distinct !DILexicalBlock(scope: !10150, file: !1, line: 3010, column: 14)
!10162 = !DILocation(line: 3011, column: 18, scope: !10163)
!10163 = !DILexicalBlockFile(scope: !10160, file: !1, discriminator: 1)
!10164 = !DILocation(line: 3011, column: 17, scope: !10163)
!10165 = !DILocation(line: 3011, column: 18, scope: !10166)
!10166 = !DILexicalBlockFile(scope: !10160, file: !1, discriminator: 2)
!10167 = !DILocation(line: 3011, column: 18, scope: !10168)
!10168 = !DILexicalBlockFile(scope: !10160, file: !1, discriminator: 3)
!10169 = !DILocation(line: 3011, column: 17, scope: !10168)
!10170 = !DILocation(line: 3012, column: 15, scope: !10160)
!10171 = !DILocation(line: 3013, column: 11, scope: !10161)
!10172 = !DILocation(line: 3013, column: 22, scope: !10173)
!10173 = !DILexicalBlockFile(scope: !10150, file: !1, discriminator: 1)
!10174 = !DILocation(line: 3013, column: 20, scope: !10173)
!10175 = !DILocation(line: 3013, column: 11, scope: !10173)
!10176 = !DILocation(line: 3014, column: 9, scope: !10150)
!10177 = !DILocation(line: 3017, column: 13, scope: !9959)
!10178 = !DILocation(line: 3017, column: 11, scope: !9959)
!10179 = !DILocation(line: 3018, column: 9, scope: !9959)
!10180 = !DILocation(line: 3019, column: 22, scope: !9959)
!10181 = !DILocation(line: 3019, column: 17, scope: !9959)
!10182 = !DILocation(line: 3019, column: 9, scope: !9959)
!10183 = !DILocation(line: 3019, column: 20, scope: !9959)
!10184 = !DILocation(line: 3022, column: 29, scope: !9959)
!10185 = !DILocation(line: 3022, column: 16, scope: !9959)
!10186 = !DILocation(line: 3022, column: 9, scope: !9959)
!10187 = !DILocation(line: 3022, column: 19, scope: !9959)
!10188 = !DILocation(line: 3022, column: 27, scope: !9959)
!10189 = !DILocation(line: 3023, column: 26, scope: !9959)
!10190 = !DILocation(line: 3023, column: 16, scope: !9959)
!10191 = !DILocation(line: 3023, column: 9, scope: !9959)
!10192 = !DILocation(line: 3023, column: 19, scope: !9959)
!10193 = !DILocation(line: 3023, column: 24, scope: !9959)
!10194 = !DILocation(line: 3024, column: 29, scope: !9959)
!10195 = !DILocation(line: 3024, column: 16, scope: !9959)
!10196 = !DILocation(line: 3024, column: 9, scope: !9959)
!10197 = !DILocation(line: 3024, column: 19, scope: !9959)
!10198 = !DILocation(line: 3024, column: 27, scope: !9959)
!10199 = !DILocation(line: 3026, column: 14, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !9959, file: !1, line: 3026, column: 13)
!10201 = !DILocation(line: 3026, column: 13, scope: !9959)
!10202 = !DILocation(line: 3027, column: 13, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10200, file: !1, line: 3026, column: 27)
!10204 = !DILocation(line: 3028, column: 11, scope: !10203)
!10205 = !DILocation(line: 3030, column: 7, scope: !9959)
!10206 = !DILocation(line: 3032, column: 22, scope: !9955)
!10207 = !DILocation(line: 3032, column: 9, scope: !9955)
!10208 = !DILocation(line: 3032, column: 29, scope: !9955)
!10209 = !DILocation(line: 3033, column: 5, scope: !9950)
!10210 = !DILocation(line: 2955, column: 28, scope: !10211)
!10211 = !DILexicalBlockFile(scope: !9944, file: !1, discriminator: 2)
!10212 = !DILocation(line: 2955, column: 5, scope: !10211)
!10213 = !DILocation(line: 3034, column: 3, scope: !9868)
!10214 = !DILocation(line: 3036, column: 3, scope: !911)
!10215 = !DILocation(line: 3036, column: 10, scope: !10216)
!10216 = !DILexicalBlockFile(scope: !10217, file: !1, discriminator: 1)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !1, line: 3036, column: 3)
!10218 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3036, column: 3)
!10219 = !DILocation(line: 3036, column: 14, scope: !10216)
!10220 = !DILocation(line: 3036, column: 12, scope: !10216)
!10221 = !DILocation(line: 3036, column: 3, scope: !10216)
!10222 = !DILocation(line: 3037, column: 27, scope: !10217)
!10223 = !DILocation(line: 3037, column: 19, scope: !10217)
!10224 = !DILocation(line: 3037, column: 5, scope: !10217)
!10225 = !DILocation(line: 3037, column: 36, scope: !10217)
!10226 = !DILocation(line: 3036, column: 26, scope: !10227)
!10227 = !DILexicalBlockFile(scope: !10217, file: !1, discriminator: 2)
!10228 = !DILocation(line: 3036, column: 3, scope: !10227)
!10229 = !DILocation(line: 3038, column: 19, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3038, column: 3)
!10231 = !DILocation(line: 3038, column: 18, scope: !10230)
!10232 = !DILocation(line: 3038, column: 16, scope: !10230)
!10233 = !DILocation(line: 3038, column: 8, scope: !10230)
!10234 = !DILocation(line: 3038, column: 32, scope: !10235)
!10235 = !DILexicalBlockFile(scope: !10236, file: !1, discriminator: 1)
!10236 = distinct !DILexicalBlock(scope: !10230, file: !1, line: 3038, column: 3)
!10237 = !DILocation(line: 3038, column: 3, scope: !10235)
!10238 = !DILocation(line: 3039, column: 5, scope: !10236)
!10239 = !DILocation(line: 3039, column: 14, scope: !10236)
!10240 = !DILocation(line: 3039, column: 21, scope: !10236)
!10241 = !DILocation(line: 3039, column: 30, scope: !10236)
!10242 = !DILocation(line: 3038, column: 51, scope: !10243)
!10243 = !DILexicalBlockFile(scope: !10236, file: !1, discriminator: 2)
!10244 = !DILocation(line: 3038, column: 60, scope: !10243)
!10245 = !DILocation(line: 3038, column: 49, scope: !10243)
!10246 = !DILocation(line: 3038, column: 3, scope: !10243)
!10247 = !DILocation(line: 3041, column: 8, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3041, column: 7)
!10249 = !DILocation(line: 3041, column: 7, scope: !911)
!10250 = !DILocation(line: 3042, column: 5, scope: !10248)
!10251 = !DILocation(line: 3045, column: 7, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3045, column: 7)
!10253 = !DILocation(line: 3045, column: 20, scope: !10252)
!10254 = !DILocation(line: 3045, column: 7, scope: !911)
!10255 = !DILocation(line: 3046, column: 15, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10252, file: !1, line: 3045, column: 28)
!10257 = !DILocation(line: 3046, column: 28, scope: !10256)
!10258 = !DILocation(line: 3046, column: 36, scope: !10256)
!10259 = !DILocation(line: 3046, column: 13, scope: !10256)
!10260 = !DILocation(line: 3047, column: 10, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10256, file: !1, line: 3047, column: 9)
!10262 = !DILocation(line: 3047, column: 9, scope: !10256)
!10263 = !DILocation(line: 3048, column: 7, scope: !10261)
!10264 = !DILocation(line: 3049, column: 17, scope: !10256)
!10265 = !DILocation(line: 3049, column: 29, scope: !10256)
!10266 = !DILocation(line: 3049, column: 15, scope: !10256)
!10267 = !DILocation(line: 3050, column: 5, scope: !10256)
!10268 = !DILocation(line: 3050, column: 22, scope: !10269)
!10269 = !DILexicalBlockFile(scope: !10256, file: !1, discriminator: 1)
!10270 = !DILocation(line: 3050, column: 12, scope: !10269)
!10271 = !DILocation(line: 3050, column: 25, scope: !10269)
!10272 = !DILocation(line: 3050, column: 5, scope: !10269)
!10273 = !DILocation(line: 3050, column: 5, scope: !10274)
!10274 = !DILexicalBlockFile(scope: !10256, file: !1, discriminator: 2)
!10275 = !DILocation(line: 3052, column: 3, scope: !10256)
!10276 = !DILocation(line: 3053, column: 12, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10252, file: !1, line: 3053, column: 12)
!10278 = !DILocation(line: 3053, column: 17, scope: !10277)
!10279 = !DILocation(line: 3053, column: 31, scope: !10277)
!10280 = !DILocation(line: 3053, column: 12, scope: !10252)
!10281 = !DILocation(line: 3054, column: 15, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10277, file: !1, line: 3053, column: 40)
!10283 = !DILocation(line: 3054, column: 20, scope: !10282)
!10284 = !DILocation(line: 3054, column: 34, scope: !10282)
!10285 = !DILocation(line: 3054, column: 13, scope: !10282)
!10286 = !DILocation(line: 3055, column: 17, scope: !10282)
!10287 = !DILocation(line: 3055, column: 29, scope: !10282)
!10288 = !DILocation(line: 3055, column: 15, scope: !10282)
!10289 = !DILocation(line: 3056, column: 3, scope: !10282)
!10290 = !DILocation(line: 3058, column: 5, scope: !10277)
!10291 = !DILocation(line: 3059, column: 13, scope: !911)
!10292 = !DILocation(line: 3060, column: 7, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3060, column: 7)
!10294 = !DILocation(line: 3060, column: 19, scope: !10293)
!10295 = !DILocation(line: 3060, column: 22, scope: !10296)
!10296 = !DILexicalBlockFile(scope: !10293, file: !1, discriminator: 1)
!10297 = !DILocation(line: 3060, column: 31, scope: !10296)
!10298 = !DILocation(line: 3060, column: 39, scope: !10296)
!10299 = !DILocation(line: 3060, column: 7, scope: !10296)
!10300 = !DILocation(line: 3061, column: 5, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10293, file: !1, line: 3060, column: 45)
!10302 = !DILocation(line: 3061, column: 43, scope: !10303)
!10303 = !DILexicalBlockFile(scope: !10304, file: !1, discriminator: 1)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !1, line: 3061, column: 5)
!10305 = distinct !DILexicalBlock(scope: !10301, file: !1, line: 3061, column: 5)
!10306 = !DILocation(line: 3061, column: 12, scope: !10303)
!10307 = !DILocation(line: 3061, column: 21, scope: !10303)
!10308 = !DILocation(line: 3061, column: 29, scope: !10303)
!10309 = !DILocation(line: 3061, column: 5, scope: !10303)
!10310 = !DILocation(line: 3061, column: 5, scope: !10311)
!10311 = !DILexicalBlockFile(scope: !10304, file: !1, discriminator: 2)
!10312 = !DILocation(line: 3063, column: 3, scope: !10301)
!10313 = !DILocation(line: 3064, column: 27, scope: !911)
!10314 = !DILocation(line: 3064, column: 3, scope: !911)
!10315 = !DILocation(line: 3064, column: 15, scope: !911)
!10316 = !DILocation(line: 3064, column: 25, scope: !911)
!10317 = !DILocation(line: 3065, column: 24, scope: !911)
!10318 = !DILocation(line: 3065, column: 33, scope: !911)
!10319 = !DILocation(line: 3065, column: 3, scope: !911)
!10320 = !DILocation(line: 3065, column: 15, scope: !911)
!10321 = !DILocation(line: 3065, column: 22, scope: !911)
!10322 = !DILocation(line: 3066, column: 24, scope: !911)
!10323 = !DILocation(line: 3066, column: 33, scope: !911)
!10324 = !DILocation(line: 3066, column: 41, scope: !911)
!10325 = !DILocation(line: 3066, column: 3, scope: !911)
!10326 = !DILocation(line: 3066, column: 15, scope: !911)
!10327 = !DILocation(line: 3066, column: 22, scope: !911)
!10328 = !DILocation(line: 3067, column: 27, scope: !911)
!10329 = !DILocation(line: 3067, column: 3, scope: !911)
!10330 = !DILocation(line: 3067, column: 15, scope: !911)
!10331 = !DILocation(line: 3067, column: 25, scope: !911)
!10332 = !DILocation(line: 3068, column: 10, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3068, column: 3)
!10334 = !DILocation(line: 3068, column: 8, scope: !10333)
!10335 = !DILocation(line: 3068, column: 26, scope: !10336)
!10336 = !DILexicalBlockFile(scope: !10337, file: !1, discriminator: 1)
!10337 = distinct !DILexicalBlock(scope: !10333, file: !1, line: 3068, column: 3)
!10338 = !DILocation(line: 3068, column: 15, scope: !10336)
!10339 = !DILocation(line: 3068, column: 3, scope: !10336)
!10340 = !DILocation(line: 3068, column: 3, scope: !10341)
!10341 = !DILexicalBlockFile(scope: !10337, file: !1, discriminator: 2)
!10342 = !DILocation(line: 3070, column: 7, scope: !911)
!10343 = !DILocation(line: 3070, column: 11, scope: !911)
!10344 = !DILocation(line: 3070, column: 20, scope: !911)
!10345 = !DILocation(line: 3070, column: 9, scope: !911)
!10346 = !DILocation(line: 3070, column: 29, scope: !911)
!10347 = !DILocation(line: 3070, column: 27, scope: !911)
!10348 = !DILocation(line: 3070, column: 5, scope: !911)
!10349 = !DILocation(line: 3071, column: 7, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3071, column: 7)
!10351 = !DILocation(line: 3071, column: 11, scope: !10350)
!10352 = !DILocation(line: 3071, column: 20, scope: !10350)
!10353 = !DILocation(line: 3071, column: 9, scope: !10350)
!10354 = !DILocation(line: 3071, column: 7, scope: !911)
!10355 = !DILocalVariable(name: "p", scope: !10356, file: !1, line: 3072, type: !594)
!10356 = distinct !DILexicalBlock(scope: !10350, file: !1, line: 3071, column: 30)
!10357 = !DILocation(line: 3072, column: 10, scope: !10356)
!10358 = !DILocation(line: 3073, column: 23, scope: !10356)
!10359 = !DILocation(line: 3073, column: 9, scope: !10356)
!10360 = !DILocation(line: 3074, column: 10, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10356, file: !1, line: 3074, column: 9)
!10362 = !DILocation(line: 3074, column: 9, scope: !10356)
!10363 = !DILocation(line: 3075, column: 7, scope: !10361)
!10364 = !DILocation(line: 3076, column: 25, scope: !10356)
!10365 = !DILocation(line: 3076, column: 27, scope: !10356)
!10366 = !DILocation(line: 3076, column: 5, scope: !10356)
!10367 = !DILocation(line: 3076, column: 14, scope: !10356)
!10368 = !DILocation(line: 3076, column: 23, scope: !10356)
!10369 = !DILocation(line: 3077, column: 12, scope: !10356)
!10370 = !DILocation(line: 3077, column: 17, scope: !10356)
!10371 = !DILocation(line: 3077, column: 26, scope: !10356)
!10372 = !DILocation(line: 3077, column: 31, scope: !10356)
!10373 = !DILocation(line: 3077, column: 40, scope: !10356)
!10374 = !DILocation(line: 3077, column: 47, scope: !10356)
!10375 = !DILocation(line: 3077, column: 5, scope: !10356)
!10376 = !DILocation(line: 3078, column: 14, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10356, file: !1, line: 3078, column: 5)
!10378 = !DILocation(line: 3078, column: 12, scope: !10377)
!10379 = !DILocation(line: 3078, column: 10, scope: !10377)
!10380 = !DILocation(line: 3078, column: 24, scope: !10381)
!10381 = !DILexicalBlockFile(scope: !10382, file: !1, discriminator: 1)
!10382 = distinct !DILexicalBlock(scope: !10377, file: !1, line: 3078, column: 5)
!10383 = !DILocation(line: 3078, column: 5, scope: !10381)
!10384 = !DILocation(line: 3079, column: 11, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10382, file: !1, line: 3079, column: 11)
!10386 = !DILocation(line: 3079, column: 14, scope: !10385)
!10387 = !DILocation(line: 3079, column: 19, scope: !10385)
!10388 = !DILocation(line: 3079, column: 26, scope: !10385)
!10389 = !DILocation(line: 3079, column: 35, scope: !10385)
!10390 = !DILocation(line: 3079, column: 23, scope: !10385)
!10391 = !DILocation(line: 3079, column: 11, scope: !10382)
!10392 = !DILocation(line: 3080, column: 23, scope: !10385)
!10393 = !DILocation(line: 3080, column: 9, scope: !10385)
!10394 = !DILocation(line: 3080, column: 12, scope: !10385)
!10395 = !DILocation(line: 3080, column: 17, scope: !10385)
!10396 = !DILocation(line: 3080, column: 21, scope: !10385)
!10397 = !DILocation(line: 3079, column: 35, scope: !10398)
!10398 = !DILexicalBlockFile(scope: !10385, file: !1, discriminator: 1)
!10399 = !DILocation(line: 3078, column: 31, scope: !10400)
!10400 = !DILexicalBlockFile(scope: !10382, file: !1, discriminator: 2)
!10401 = !DILocation(line: 3078, column: 34, scope: !10400)
!10402 = !DILocation(line: 3078, column: 29, scope: !10400)
!10403 = !DILocation(line: 3078, column: 5, scope: !10400)
!10404 = !DILocation(line: 3081, column: 5, scope: !10356)
!10405 = !DILocation(line: 3082, column: 20, scope: !10356)
!10406 = !DILocation(line: 3082, column: 5, scope: !10356)
!10407 = !DILocation(line: 3082, column: 14, scope: !10356)
!10408 = !DILocation(line: 3082, column: 18, scope: !10356)
!10409 = !DILocation(line: 3083, column: 3, scope: !10356)
!10410 = !DILocation(line: 3085, column: 9, scope: !911)
!10411 = !DILocation(line: 3085, column: 18, scope: !911)
!10412 = !DILocation(line: 3085, column: 24, scope: !911)
!10413 = !DILocation(line: 3085, column: 33, scope: !911)
!10414 = !DILocation(line: 3085, column: 22, scope: !911)
!10415 = !DILocation(line: 3085, column: 7, scope: !911)
!10416 = !DILocation(line: 3086, column: 10, scope: !911)
!10417 = !DILocation(line: 3086, column: 15, scope: !911)
!10418 = !DILocation(line: 3086, column: 26, scope: !911)
!10419 = !DILocation(line: 3086, column: 28, scope: !911)
!10420 = !DILocation(line: 3086, column: 3, scope: !911)
!10421 = !DILocation(line: 3088, column: 7, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !911, file: !1, line: 3088, column: 7)
!10423 = !DILocation(line: 3088, column: 7, scope: !911)
!10424 = !DILocation(line: 3089, column: 12, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10422, file: !1, line: 3088, column: 18)
!10426 = !DILocation(line: 3089, column: 14, scope: !10425)
!10427 = !DILocation(line: 3089, column: 9, scope: !10425)
!10428 = !DILocation(line: 3090, column: 12, scope: !10425)
!10429 = !DILocation(line: 3090, column: 6, scope: !10425)
!10430 = !DILocation(line: 3090, column: 10, scope: !10425)
!10431 = !DILocation(line: 3091, column: 12, scope: !10425)
!10432 = !DILocation(line: 3091, column: 16, scope: !10425)
!10433 = !DILocation(line: 3091, column: 21, scope: !10425)
!10434 = !DILocation(line: 3091, column: 30, scope: !10425)
!10435 = !DILocation(line: 3091, column: 38, scope: !10425)
!10436 = !DILocation(line: 3091, column: 44, scope: !10425)
!10437 = !DILocation(line: 3091, column: 54, scope: !10425)
!10438 = !DILocation(line: 3091, column: 5, scope: !10425)
!10439 = !DILocation(line: 3092, column: 3, scope: !10425)
!10440 = !DILocation(line: 3093, column: 21, scope: !911)
!10441 = !DILocation(line: 3093, column: 30, scope: !911)
!10442 = !DILocation(line: 3093, column: 3, scope: !911)
!10443 = !DILocation(line: 3093, column: 15, scope: !911)
!10444 = !DILocation(line: 3093, column: 19, scope: !911)
!10445 = !DILocation(line: 3094, column: 3, scope: !911)
!10446 = !DILocation(line: 3095, column: 1, scope: !911)
!10447 = !DILocalVariable(name: "parser", arg: 1, scope: !922, file: !1, line: 4779, type: !162)
!10448 = !DILocation(line: 4779, column: 28, scope: !922)
!10449 = !DILocalVariable(name: "s", arg: 2, scope: !922, file: !1, line: 4780, type: !192)
!10450 = !DILocation(line: 4780, column: 29, scope: !922)
!10451 = !DILocalVariable(name: "end", arg: 3, scope: !922, file: !1, line: 4781, type: !192)
!10452 = !DILocation(line: 4781, column: 29, scope: !922)
!10453 = !DILocalVariable(name: "nextPtr", arg: 4, scope: !922, file: !1, line: 4782, type: !332)
!10454 = !DILocation(line: 4782, column: 30, scope: !922)
!10455 = !DILocation(line: 4784, column: 3, scope: !922)
!10456 = !DILocation(line: 4784, column: 13, scope: !922)
!10457 = !DILocation(line: 4785, column: 14, scope: !922)
!10458 = !DILocation(line: 4785, column: 3, scope: !922)
!10459 = !DILocation(line: 4785, column: 12, scope: !922)
!10460 = !DILocation(line: 4786, column: 3, scope: !922)
!10461 = !DILocalVariable(name: "next", scope: !10462, file: !1, line: 4787, type: !192)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !1, line: 4786, column: 12)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !1, line: 4786, column: 3)
!10464 = distinct !DILexicalBlock(scope: !922, file: !1, line: 4786, column: 3)
!10465 = !DILocation(line: 4787, column: 17, scope: !10462)
!10466 = !DILocalVariable(name: "tok", scope: !10462, file: !1, line: 4788, type: !223)
!10467 = !DILocation(line: 4788, column: 9, scope: !10462)
!10468 = !DILocation(line: 4788, column: 15, scope: !10462)
!10469 = !DILocation(line: 4789, column: 19, scope: !10462)
!10470 = !DILocation(line: 4789, column: 5, scope: !10462)
!10471 = !DILocation(line: 4789, column: 17, scope: !10462)
!10472 = !DILocation(line: 4790, column: 13, scope: !10462)
!10473 = !DILocation(line: 4790, column: 5, scope: !10462)
!10474 = !DILocation(line: 4793, column: 11, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1, line: 4793, column: 11)
!10476 = distinct !DILexicalBlock(scope: !10462, file: !1, line: 4790, column: 18)
!10477 = !DILocation(line: 4793, column: 11, scope: !10476)
!10478 = !DILocation(line: 4794, column: 23, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10475, file: !1, line: 4793, column: 27)
!10480 = !DILocation(line: 4794, column: 31, scope: !10479)
!10481 = !DILocation(line: 4794, column: 41, scope: !10479)
!10482 = !DILocation(line: 4794, column: 44, scope: !10479)
!10483 = !DILocation(line: 4794, column: 9, scope: !10479)
!10484 = !DILocation(line: 4795, column: 13, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10479, file: !1, line: 4795, column: 13)
!10486 = !DILocation(line: 4795, column: 24, scope: !10485)
!10487 = !DILocation(line: 4795, column: 13, scope: !10479)
!10488 = !DILocation(line: 4796, column: 11, scope: !10485)
!10489 = !DILocation(line: 4797, column: 7, scope: !10479)
!10490 = !DILocation(line: 4798, column: 18, scope: !10476)
!10491 = !DILocation(line: 4798, column: 8, scope: !10476)
!10492 = !DILocation(line: 4798, column: 16, scope: !10476)
!10493 = !DILocation(line: 4799, column: 7, scope: !10476)
!10494 = !DILocation(line: 4801, column: 18, scope: !10476)
!10495 = !DILocation(line: 4801, column: 8, scope: !10476)
!10496 = !DILocation(line: 4801, column: 16, scope: !10476)
!10497 = !DILocation(line: 4802, column: 7, scope: !10476)
!10498 = !DILocation(line: 4804, column: 11, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10476, file: !1, line: 4804, column: 11)
!10500 = !DILocation(line: 4804, column: 11, scope: !10476)
!10501 = !DILocation(line: 4805, column: 23, scope: !10499)
!10502 = !DILocation(line: 4805, column: 31, scope: !10499)
!10503 = !DILocation(line: 4805, column: 41, scope: !10499)
!10504 = !DILocation(line: 4805, column: 44, scope: !10499)
!10505 = !DILocation(line: 4805, column: 9, scope: !10499)
!10506 = !DILocation(line: 4806, column: 7, scope: !10476)
!10507 = !DILocation(line: 4808, column: 40, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10476, file: !1, line: 4808, column: 11)
!10509 = !DILocation(line: 4808, column: 48, scope: !10508)
!10510 = !DILocation(line: 4808, column: 58, scope: !10508)
!10511 = !DILocation(line: 4808, column: 61, scope: !10508)
!10512 = !DILocation(line: 4808, column: 12, scope: !10508)
!10513 = !DILocation(line: 4808, column: 11, scope: !10476)
!10514 = !DILocation(line: 4809, column: 9, scope: !10508)
!10515 = !DILocation(line: 4810, column: 7, scope: !10476)
!10516 = !DILocation(line: 4812, column: 26, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10476, file: !1, line: 4812, column: 11)
!10518 = !DILocation(line: 4812, column: 34, scope: !10517)
!10519 = !DILocation(line: 4812, column: 44, scope: !10517)
!10520 = !DILocation(line: 4812, column: 47, scope: !10517)
!10521 = !DILocation(line: 4812, column: 12, scope: !10517)
!10522 = !DILocation(line: 4812, column: 11, scope: !10476)
!10523 = !DILocation(line: 4813, column: 9, scope: !10517)
!10524 = !DILocation(line: 4814, column: 7, scope: !10476)
!10525 = !DILocation(line: 4816, column: 18, scope: !10476)
!10526 = !DILocation(line: 4816, column: 7, scope: !10476)
!10527 = !DILocation(line: 4816, column: 16, scope: !10476)
!10528 = !DILocation(line: 4817, column: 7, scope: !10476)
!10529 = !DILocation(line: 4819, column: 12, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10476, file: !1, line: 4819, column: 11)
!10531 = !DILocation(line: 4819, column: 11, scope: !10476)
!10532 = !DILocation(line: 4820, column: 20, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10530, file: !1, line: 4819, column: 28)
!10534 = !DILocation(line: 4820, column: 10, scope: !10533)
!10535 = !DILocation(line: 4820, column: 18, scope: !10533)
!10536 = !DILocation(line: 4821, column: 9, scope: !10533)
!10537 = !DILocation(line: 4823, column: 7, scope: !10476)
!10538 = !DILocation(line: 4825, column: 12, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10476, file: !1, line: 4825, column: 11)
!10540 = !DILocation(line: 4825, column: 11, scope: !10476)
!10541 = !DILocation(line: 4826, column: 20, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10539, file: !1, line: 4825, column: 28)
!10543 = !DILocation(line: 4826, column: 10, scope: !10542)
!10544 = !DILocation(line: 4826, column: 18, scope: !10542)
!10545 = !DILocation(line: 4827, column: 9, scope: !10542)
!10546 = !DILocation(line: 4829, column: 7, scope: !10476)
!10547 = !DILocation(line: 4831, column: 7, scope: !10476)
!10548 = !DILocation(line: 4833, column: 20, scope: !10462)
!10549 = !DILocation(line: 4833, column: 18, scope: !10462)
!10550 = !DILocation(line: 4833, column: 5, scope: !10462)
!10551 = !DILocation(line: 4833, column: 14, scope: !10462)
!10552 = !DILocation(line: 4834, column: 13, scope: !10462)
!10553 = !DILocation(line: 4834, column: 5, scope: !10462)
!10554 = !DILocation(line: 4836, column: 18, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10462, file: !1, line: 4834, column: 25)
!10556 = !DILocation(line: 4836, column: 8, scope: !10555)
!10557 = !DILocation(line: 4836, column: 16, scope: !10555)
!10558 = !DILocation(line: 4837, column: 7, scope: !10555)
!10559 = !DILocation(line: 4839, column: 7, scope: !10555)
!10560 = !DILocation(line: 4841, column: 5, scope: !10555)
!10561 = !DILocation(line: 4786, column: 3, scope: !10562)
!10562 = !DILexicalBlockFile(scope: !10463, file: !1, discriminator: 1)
!10563 = !DILocation(line: 4843, column: 1, scope: !922)
!10564 = !DILocalVariable(name: "parser", arg: 1, scope: !923, file: !1, line: 3244, type: !162)
!10565 = !DILocation(line: 3244, column: 27, scope: !923)
!10566 = !DILocalVariable(name: "enc", arg: 2, scope: !923, file: !1, line: 3245, type: !321)
!10567 = !DILocation(line: 3245, column: 32, scope: !923)
!10568 = !DILocalVariable(name: "startPtr", arg: 3, scope: !923, file: !1, line: 3246, type: !332)
!10569 = !DILocation(line: 3246, column: 29, scope: !923)
!10570 = !DILocalVariable(name: "end", arg: 4, scope: !923, file: !1, line: 3247, type: !192)
!10571 = !DILocation(line: 3247, column: 28, scope: !923)
!10572 = !DILocalVariable(name: "nextPtr", arg: 5, scope: !923, file: !1, line: 3248, type: !332)
!10573 = !DILocation(line: 3248, column: 29, scope: !923)
!10574 = !DILocalVariable(name: "haveMore", arg: 6, scope: !923, file: !1, line: 3249, type: !159)
!10575 = !DILocation(line: 3249, column: 25, scope: !923)
!10576 = !DILocalVariable(name: "s", scope: !923, file: !1, line: 3251, type: !192)
!10577 = !DILocation(line: 3251, column: 15, scope: !923)
!10578 = !DILocation(line: 3251, column: 20, scope: !923)
!10579 = !DILocation(line: 3251, column: 19, scope: !923)
!10580 = !DILocalVariable(name: "eventPP", scope: !923, file: !1, line: 3252, type: !332)
!10581 = !DILocation(line: 3252, column: 16, scope: !923)
!10582 = !DILocalVariable(name: "eventEndPP", scope: !923, file: !1, line: 3253, type: !332)
!10583 = !DILocation(line: 3253, column: 16, scope: !923)
!10584 = !DILocation(line: 3254, column: 7, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !923, file: !1, line: 3254, column: 7)
!10586 = !DILocation(line: 3254, column: 14, scope: !10585)
!10587 = !DILocation(line: 3254, column: 11, scope: !10585)
!10588 = !DILocation(line: 3254, column: 7, scope: !923)
!10589 = !DILocation(line: 3255, column: 16, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10585, file: !1, line: 3254, column: 24)
!10591 = !DILocation(line: 3255, column: 13, scope: !10590)
!10592 = !DILocation(line: 3256, column: 16, scope: !10590)
!10593 = !DILocation(line: 3256, column: 6, scope: !10590)
!10594 = !DILocation(line: 3256, column: 14, scope: !10590)
!10595 = !DILocation(line: 3257, column: 19, scope: !10590)
!10596 = !DILocation(line: 3257, column: 16, scope: !10590)
!10597 = !DILocation(line: 3258, column: 3, scope: !10590)
!10598 = !DILocation(line: 3260, column: 17, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10585, file: !1, line: 3259, column: 8)
!10600 = !DILocation(line: 3260, column: 39, scope: !10599)
!10601 = !DILocation(line: 3260, column: 13, scope: !10599)
!10602 = !DILocation(line: 3261, column: 20, scope: !10599)
!10603 = !DILocation(line: 3261, column: 42, scope: !10599)
!10604 = !DILocation(line: 3261, column: 16, scope: !10599)
!10605 = !DILocation(line: 3263, column: 14, scope: !923)
!10606 = !DILocation(line: 3263, column: 4, scope: !923)
!10607 = !DILocation(line: 3263, column: 12, scope: !923)
!10608 = !DILocation(line: 3264, column: 4, scope: !923)
!10609 = !DILocation(line: 3264, column: 13, scope: !923)
!10610 = !DILocation(line: 3266, column: 3, scope: !923)
!10611 = !DILocalVariable(name: "next", scope: !10612, file: !1, line: 3267, type: !192)
!10612 = distinct !DILexicalBlock(scope: !10613, file: !1, line: 3266, column: 12)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !1, line: 3266, column: 3)
!10614 = distinct !DILexicalBlock(scope: !923, file: !1, line: 3266, column: 3)
!10615 = !DILocation(line: 3267, column: 17, scope: !10612)
!10616 = !DILocalVariable(name: "tok", scope: !10612, file: !1, line: 3268, type: !223)
!10617 = !DILocation(line: 3268, column: 9, scope: !10612)
!10618 = !DILocation(line: 3268, column: 15, scope: !10612)
!10619 = !DILocation(line: 3269, column: 19, scope: !10612)
!10620 = !DILocation(line: 3269, column: 6, scope: !10612)
!10621 = !DILocation(line: 3269, column: 17, scope: !10612)
!10622 = !DILocation(line: 3270, column: 13, scope: !10612)
!10623 = !DILocation(line: 3270, column: 5, scope: !10612)
!10624 = !DILocation(line: 3272, column: 11, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10626, file: !1, line: 3272, column: 11)
!10626 = distinct !DILexicalBlock(scope: !10612, file: !1, line: 3270, column: 18)
!10627 = !DILocation(line: 3272, column: 11, scope: !10626)
!10628 = !DILocation(line: 3273, column: 9, scope: !10625)
!10629 = !DILocation(line: 3273, column: 32, scope: !10625)
!10630 = !DILocation(line: 3279, column: 16, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10625, file: !1, line: 3279, column: 16)
!10632 = !DILocation(line: 3279, column: 16, scope: !10625)
!10633 = !DILocation(line: 3280, column: 23, scope: !10631)
!10634 = !DILocation(line: 3280, column: 31, scope: !10631)
!10635 = !DILocation(line: 3280, column: 36, scope: !10631)
!10636 = !DILocation(line: 3280, column: 39, scope: !10631)
!10637 = !DILocation(line: 3280, column: 9, scope: !10631)
!10638 = !DILocation(line: 3281, column: 19, scope: !10626)
!10639 = !DILocation(line: 3281, column: 8, scope: !10626)
!10640 = !DILocation(line: 3281, column: 17, scope: !10626)
!10641 = !DILocation(line: 3282, column: 18, scope: !10626)
!10642 = !DILocation(line: 3282, column: 8, scope: !10626)
!10643 = !DILocation(line: 3282, column: 16, scope: !10626)
!10644 = !DILocation(line: 3283, column: 11, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10626, file: !1, line: 3283, column: 11)
!10646 = !DILocation(line: 3283, column: 22, scope: !10645)
!10647 = !DILocation(line: 3283, column: 11, scope: !10626)
!10648 = !DILocation(line: 3284, column: 9, scope: !10645)
!10649 = !DILocation(line: 3286, column: 9, scope: !10645)
!10650 = !DILocation(line: 3288, column: 11, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10626, file: !1, line: 3288, column: 11)
!10652 = !DILocation(line: 3288, column: 11, scope: !10626)
!10653 = !DILocalVariable(name: "c", scope: !10654, file: !1, line: 3289, type: !203)
!10654 = distinct !DILexicalBlock(scope: !10651, file: !1, line: 3288, column: 33)
!10655 = !DILocation(line: 3289, column: 18, scope: !10654)
!10656 = !DILocation(line: 3290, column: 9, scope: !10654)
!10657 = !DILocation(line: 3290, column: 30, scope: !10654)
!10658 = !DILocation(line: 3291, column: 7, scope: !10654)
!10659 = !DILocation(line: 3292, column: 16, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10651, file: !1, line: 3292, column: 16)
!10661 = !DILocation(line: 3292, column: 16, scope: !10651)
!10662 = !DILocation(line: 3293, column: 23, scope: !10660)
!10663 = !DILocation(line: 3293, column: 31, scope: !10660)
!10664 = !DILocation(line: 3293, column: 36, scope: !10660)
!10665 = !DILocation(line: 3293, column: 39, scope: !10660)
!10666 = !DILocation(line: 3293, column: 9, scope: !10660)
!10667 = !DILocation(line: 3294, column: 7, scope: !10626)
!10668 = !DILocalVariable(name: "charDataHandler", scope: !10669, file: !1, line: 3297, type: !219)
!10669 = distinct !DILexicalBlock(scope: !10626, file: !1, line: 3296, column: 7)
!10670 = !DILocation(line: 3297, column: 34, scope: !10669)
!10671 = !DILocation(line: 3297, column: 52, scope: !10669)
!10672 = !DILocation(line: 3298, column: 13, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !1, line: 3298, column: 13)
!10674 = !DILocation(line: 3298, column: 13, scope: !10669)
!10675 = !DILocation(line: 3299, column: 15, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !1, line: 3299, column: 15)
!10677 = distinct !DILexicalBlock(scope: !10673, file: !1, line: 3298, column: 30)
!10678 = !DILocation(line: 3299, column: 15, scope: !10677)
!10679 = !DILocation(line: 3300, column: 13, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10676, file: !1, line: 3299, column: 37)
!10681 = !DILocalVariable(name: "dataPtr", scope: !10682, file: !1, line: 3301, type: !648)
!10682 = distinct !DILexicalBlock(scope: !10683, file: !1, line: 3300, column: 22)
!10683 = distinct !DILexicalBlock(scope: !10684, file: !1, line: 3300, column: 13)
!10684 = distinct !DILexicalBlock(scope: !10680, file: !1, line: 3300, column: 13)
!10685 = !DILocation(line: 3301, column: 22, scope: !10682)
!10686 = !DILocation(line: 3301, column: 41, scope: !10682)
!10687 = !DILocalVariable(name: "convert_res", scope: !10682, file: !1, line: 3302, type: !6470)
!10688 = !DILocation(line: 3302, column: 45, scope: !10682)
!10689 = !DILocation(line: 3302, column: 59, scope: !10682)
!10690 = !DILocation(line: 3303, column: 29, scope: !10682)
!10691 = !DILocation(line: 3303, column: 16, scope: !10682)
!10692 = !DILocation(line: 3303, column: 27, scope: !10682)
!10693 = !DILocation(line: 3304, column: 15, scope: !10682)
!10694 = !DILocation(line: 3304, column: 31, scope: !10682)
!10695 = !DILocation(line: 3304, column: 43, scope: !10682)
!10696 = !DILocation(line: 3305, column: 37, scope: !10682)
!10697 = !DILocation(line: 3305, column: 56, scope: !10682)
!10698 = !DILocation(line: 3305, column: 45, scope: !10682)
!10699 = !DILocation(line: 3305, column: 31, scope: !10682)
!10700 = !DILocation(line: 3306, column: 20, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10682, file: !1, line: 3306, column: 19)
!10702 = !DILocation(line: 3306, column: 32, scope: !10701)
!10703 = !DILocation(line: 3306, column: 58, scope: !10701)
!10704 = !DILocation(line: 3306, column: 62, scope: !10705)
!10705 = !DILexicalBlockFile(scope: !10701, file: !1, discriminator: 1)
!10706 = !DILocation(line: 3306, column: 74, scope: !10705)
!10707 = !DILocation(line: 3306, column: 19, scope: !10705)
!10708 = !DILocation(line: 3307, column: 17, scope: !10701)
!10709 = !DILocation(line: 3308, column: 26, scope: !10682)
!10710 = !DILocation(line: 3308, column: 16, scope: !10682)
!10711 = !DILocation(line: 3308, column: 24, scope: !10682)
!10712 = !DILocation(line: 3300, column: 13, scope: !10713)
!10713 = !DILexicalBlockFile(scope: !10683, file: !1, discriminator: 1)
!10714 = !DILocation(line: 3310, column: 11, scope: !10680)
!10715 = !DILocation(line: 3312, column: 13, scope: !10676)
!10716 = !DILocation(line: 3312, column: 29, scope: !10676)
!10717 = !DILocation(line: 3313, column: 41, scope: !10676)
!10718 = !DILocation(line: 3314, column: 47, scope: !10676)
!10719 = !DILocation(line: 3314, column: 66, scope: !10676)
!10720 = !DILocation(line: 3314, column: 52, scope: !10676)
!10721 = !DILocation(line: 3314, column: 29, scope: !10676)
!10722 = !DILocation(line: 3315, column: 9, scope: !10677)
!10723 = !DILocation(line: 3316, column: 18, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10673, file: !1, line: 3316, column: 18)
!10725 = !DILocation(line: 3316, column: 18, scope: !10673)
!10726 = !DILocation(line: 3317, column: 25, scope: !10724)
!10727 = !DILocation(line: 3317, column: 33, scope: !10724)
!10728 = !DILocation(line: 3317, column: 38, scope: !10724)
!10729 = !DILocation(line: 3317, column: 41, scope: !10724)
!10730 = !DILocation(line: 3317, column: 11, scope: !10724)
!10731 = !DILocation(line: 3319, column: 7, scope: !10626)
!10732 = !DILocation(line: 3321, column: 18, scope: !10626)
!10733 = !DILocation(line: 3321, column: 8, scope: !10626)
!10734 = !DILocation(line: 3321, column: 16, scope: !10626)
!10735 = !DILocation(line: 3322, column: 7, scope: !10626)
!10736 = !DILocation(line: 3324, column: 11, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10626, file: !1, line: 3324, column: 11)
!10738 = !DILocation(line: 3324, column: 11, scope: !10626)
!10739 = !DILocation(line: 3325, column: 20, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10737, file: !1, line: 3324, column: 21)
!10741 = !DILocation(line: 3325, column: 10, scope: !10740)
!10742 = !DILocation(line: 3325, column: 18, scope: !10740)
!10743 = !DILocation(line: 3326, column: 9, scope: !10740)
!10744 = !DILocation(line: 3328, column: 7, scope: !10626)
!10745 = !DILocation(line: 3331, column: 11, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10626, file: !1, line: 3331, column: 11)
!10747 = !DILocation(line: 3331, column: 11, scope: !10626)
!10748 = !DILocation(line: 3332, column: 20, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10746, file: !1, line: 3331, column: 21)
!10750 = !DILocation(line: 3332, column: 10, scope: !10749)
!10751 = !DILocation(line: 3332, column: 18, scope: !10749)
!10752 = !DILocation(line: 3333, column: 9, scope: !10749)
!10753 = !DILocation(line: 3335, column: 7, scope: !10626)
!10754 = !DILocation(line: 3337, column: 18, scope: !10626)
!10755 = !DILocation(line: 3337, column: 8, scope: !10626)
!10756 = !DILocation(line: 3337, column: 16, scope: !10626)
!10757 = !DILocation(line: 3338, column: 7, scope: !10626)
!10758 = !DILocation(line: 3341, column: 20, scope: !10612)
!10759 = !DILocation(line: 3341, column: 18, scope: !10612)
!10760 = !DILocation(line: 3341, column: 6, scope: !10612)
!10761 = !DILocation(line: 3341, column: 14, scope: !10612)
!10762 = !DILocation(line: 3342, column: 13, scope: !10612)
!10763 = !DILocation(line: 3342, column: 5, scope: !10612)
!10764 = !DILocation(line: 3344, column: 18, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10612, file: !1, line: 3342, column: 25)
!10766 = !DILocation(line: 3344, column: 8, scope: !10765)
!10767 = !DILocation(line: 3344, column: 16, scope: !10765)
!10768 = !DILocation(line: 3345, column: 7, scope: !10765)
!10769 = !DILocation(line: 3347, column: 7, scope: !10765)
!10770 = !DILocation(line: 3349, column: 5, scope: !10765)
!10771 = !DILocation(line: 3266, column: 3, scope: !10772)
!10772 = !DILexicalBlockFile(scope: !10613, file: !1, discriminator: 1)
!10773 = !DILocation(line: 3352, column: 1, scope: !923)
!10774 = !DILocalVariable(name: "parser", arg: 1, scope: !926, file: !1, line: 3218, type: !162)
!10775 = !DILocation(line: 3218, column: 34, scope: !926)
!10776 = !DILocalVariable(name: "start", arg: 2, scope: !926, file: !1, line: 3219, type: !192)
!10777 = !DILocation(line: 3219, column: 35, scope: !926)
!10778 = !DILocalVariable(name: "end", arg: 3, scope: !926, file: !1, line: 3220, type: !192)
!10779 = !DILocation(line: 3220, column: 35, scope: !926)
!10780 = !DILocalVariable(name: "endPtr", arg: 4, scope: !926, file: !1, line: 3221, type: !332)
!10781 = !DILocation(line: 3221, column: 36, scope: !926)
!10782 = !DILocalVariable(name: "result", scope: !926, file: !1, line: 3223, type: !24)
!10783 = !DILocation(line: 3223, column: 18, scope: !926)
!10784 = !DILocation(line: 3223, column: 42, scope: !926)
!10785 = !DILocation(line: 3223, column: 50, scope: !926)
!10786 = !DILocation(line: 3223, column: 68, scope: !926)
!10787 = !DILocation(line: 3224, column: 42, scope: !926)
!10788 = !DILocation(line: 3224, column: 61, scope: !926)
!10789 = !DILocation(line: 3224, column: 60, scope: !926)
!10790 = !DILocation(line: 3224, column: 50, scope: !926)
!10791 = !DILocation(line: 3223, column: 27, scope: !926)
!10792 = !DILocation(line: 3225, column: 7, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !926, file: !1, line: 3225, column: 7)
!10794 = !DILocation(line: 3225, column: 14, scope: !10793)
!10795 = !DILocation(line: 3225, column: 7, scope: !926)
!10796 = !DILocation(line: 3226, column: 12, scope: !10793)
!10797 = !DILocation(line: 3226, column: 5, scope: !10793)
!10798 = !DILocation(line: 3227, column: 7, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !926, file: !1, line: 3227, column: 7)
!10800 = !DILocation(line: 3227, column: 7, scope: !926)
!10801 = !DILocation(line: 3228, column: 9, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10803, file: !1, line: 3228, column: 9)
!10803 = distinct !DILexicalBlock(scope: !10799, file: !1, line: 3227, column: 14)
!10804 = !DILocation(line: 3228, column: 9, scope: !10803)
!10805 = !DILocation(line: 3229, column: 7, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10802, file: !1, line: 3228, column: 23)
!10807 = !DILocation(line: 3229, column: 17, scope: !10806)
!10808 = !DILocation(line: 3230, column: 45, scope: !10806)
!10809 = !DILocation(line: 3230, column: 53, scope: !10806)
!10810 = !DILocation(line: 3230, column: 60, scope: !10806)
!10811 = !DILocation(line: 3230, column: 65, scope: !10806)
!10812 = !DILocation(line: 3230, column: 14, scope: !10806)
!10813 = !DILocation(line: 3230, column: 7, scope: !10806)
!10814 = !DILocation(line: 3233, column: 7, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10802, file: !1, line: 3232, column: 10)
!10816 = !DILocation(line: 3233, column: 17, scope: !10815)
!10817 = !DILocation(line: 3234, column: 31, scope: !10815)
!10818 = !DILocation(line: 3234, column: 39, scope: !10815)
!10819 = !DILocation(line: 3234, column: 46, scope: !10815)
!10820 = !DILocation(line: 3234, column: 51, scope: !10815)
!10821 = !DILocation(line: 3234, column: 14, scope: !10815)
!10822 = !DILocation(line: 3234, column: 7, scope: !10815)
!10823 = !DILocation(line: 3237, column: 10, scope: !926)
!10824 = !DILocation(line: 3237, column: 3, scope: !926)
!10825 = !DILocation(line: 3238, column: 1, scope: !926)
!10826 = !DILocalVariable(name: "parser", arg: 1, scope: !895, file: !1, line: 4903, type: !162)
!10827 = !DILocation(line: 4903, column: 36, scope: !895)
!10828 = !DILocalVariable(name: "s", arg: 2, scope: !895, file: !1, line: 4904, type: !192)
!10829 = !DILocation(line: 4904, column: 37, scope: !895)
!10830 = !DILocalVariable(name: "end", arg: 3, scope: !895, file: !1, line: 4905, type: !192)
!10831 = !DILocation(line: 4905, column: 37, scope: !895)
!10832 = !DILocalVariable(name: "nextPtr", arg: 4, scope: !895, file: !1, line: 4906, type: !332)
!10833 = !DILocation(line: 4906, column: 38, scope: !895)
!10834 = !DILocalVariable(name: "entity", scope: !895, file: !1, line: 4908, type: !443)
!10835 = !DILocation(line: 4908, column: 11, scope: !895)
!10836 = !DILocalVariable(name: "textStart", scope: !895, file: !1, line: 4909, type: !192)
!10837 = !DILocation(line: 4909, column: 15, scope: !895)
!10838 = !DILocalVariable(name: "textEnd", scope: !895, file: !1, line: 4909, type: !192)
!10839 = !DILocation(line: 4909, column: 27, scope: !895)
!10840 = !DILocalVariable(name: "next", scope: !895, file: !1, line: 4910, type: !192)
!10841 = !DILocation(line: 4910, column: 15, scope: !895)
!10842 = !DILocalVariable(name: "result", scope: !895, file: !1, line: 4911, type: !24)
!10843 = !DILocation(line: 4911, column: 18, scope: !895)
!10844 = !DILocalVariable(name: "openEntity", scope: !895, file: !1, line: 4912, type: !434)
!10845 = !DILocation(line: 4912, column: 25, scope: !895)
!10846 = !DILocation(line: 4912, column: 38, scope: !895)
!10847 = !DILocation(line: 4913, column: 8, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !895, file: !1, line: 4913, column: 7)
!10849 = !DILocation(line: 4913, column: 7, scope: !895)
!10850 = !DILocation(line: 4914, column: 5, scope: !10848)
!10851 = !DILocation(line: 4916, column: 12, scope: !895)
!10852 = !DILocation(line: 4916, column: 24, scope: !895)
!10853 = !DILocation(line: 4916, column: 10, scope: !895)
!10854 = !DILocation(line: 4917, column: 24, scope: !895)
!10855 = !DILocation(line: 4917, column: 32, scope: !895)
!10856 = !DILocation(line: 4917, column: 43, scope: !895)
!10857 = !DILocation(line: 4917, column: 51, scope: !895)
!10858 = !DILocation(line: 4917, column: 41, scope: !895)
!10859 = !DILocation(line: 4917, column: 13, scope: !895)
!10860 = !DILocation(line: 4918, column: 22, scope: !895)
!10861 = !DILocation(line: 4918, column: 30, scope: !895)
!10862 = !DILocation(line: 4918, column: 40, scope: !895)
!10863 = !DILocation(line: 4918, column: 48, scope: !895)
!10864 = !DILocation(line: 4918, column: 38, scope: !895)
!10865 = !DILocation(line: 4918, column: 11, scope: !895)
!10866 = !DILocation(line: 4928, column: 24, scope: !895)
!10867 = !DILocation(line: 4928, column: 32, scope: !895)
!10868 = !DILocation(line: 4928, column: 44, scope: !895)
!10869 = !DILocation(line: 4928, column: 59, scope: !895)
!10870 = !DILocation(line: 4929, column: 24, scope: !895)
!10871 = !DILocation(line: 4929, column: 35, scope: !895)
!10872 = !DILocation(line: 4928, column: 14, scope: !895)
!10873 = !DILocation(line: 4928, column: 12, scope: !895)
!10874 = !DILocation(line: 4931, column: 7, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !895, file: !1, line: 4931, column: 7)
!10876 = !DILocation(line: 4931, column: 14, scope: !10875)
!10877 = !DILocation(line: 4931, column: 7, scope: !895)
!10878 = !DILocation(line: 4932, column: 12, scope: !10875)
!10879 = !DILocation(line: 4932, column: 5, scope: !10875)
!10880 = !DILocation(line: 4933, column: 12, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10875, file: !1, line: 4933, column: 12)
!10882 = !DILocation(line: 4933, column: 23, scope: !10881)
!10883 = !DILocation(line: 4933, column: 20, scope: !10881)
!10884 = !DILocation(line: 4933, column: 28, scope: !10881)
!10885 = !DILocation(line: 4933, column: 31, scope: !10886)
!10886 = !DILexicalBlockFile(scope: !10881, file: !1, discriminator: 1)
!10887 = !DILocation(line: 4933, column: 42, scope: !10886)
!10888 = !DILocation(line: 4933, column: 12, scope: !10886)
!10889 = !DILocation(line: 4934, column: 31, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10881, file: !1, line: 4933, column: 60)
!10891 = !DILocation(line: 4934, column: 46, scope: !10890)
!10892 = !DILocation(line: 4934, column: 54, scope: !10890)
!10893 = !DILocation(line: 4934, column: 36, scope: !10890)
!10894 = !DILocation(line: 4934, column: 25, scope: !10890)
!10895 = !DILocation(line: 4934, column: 5, scope: !10890)
!10896 = !DILocation(line: 4934, column: 13, scope: !10890)
!10897 = !DILocation(line: 4934, column: 23, scope: !10890)
!10898 = !DILocation(line: 4935, column: 12, scope: !10890)
!10899 = !DILocation(line: 4935, column: 5, scope: !10890)
!10900 = !DILocation(line: 4938, column: 5, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10881, file: !1, line: 4937, column: 8)
!10902 = !DILocation(line: 4938, column: 13, scope: !10901)
!10903 = !DILocation(line: 4938, column: 18, scope: !10901)
!10904 = !DILocation(line: 4939, column: 28, scope: !10901)
!10905 = !DILocation(line: 4939, column: 40, scope: !10901)
!10906 = !DILocation(line: 4939, column: 5, scope: !10901)
!10907 = !DILocation(line: 4939, column: 26, scope: !10901)
!10908 = !DILocation(line: 4941, column: 24, scope: !10901)
!10909 = !DILocation(line: 4941, column: 5, scope: !10901)
!10910 = !DILocation(line: 4941, column: 17, scope: !10901)
!10911 = !DILocation(line: 4941, column: 22, scope: !10901)
!10912 = !DILocation(line: 4942, column: 28, scope: !10901)
!10913 = !DILocation(line: 4942, column: 5, scope: !10901)
!10914 = !DILocation(line: 4942, column: 26, scope: !10901)
!10915 = !DILocation(line: 4956, column: 5, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !895, file: !1, line: 4955, column: 3)
!10917 = !DILocation(line: 4956, column: 15, scope: !10916)
!10918 = !DILocation(line: 4958, column: 22, scope: !10916)
!10919 = !DILocation(line: 4958, column: 30, scope: !10916)
!10920 = !DILocation(line: 4958, column: 52, scope: !10916)
!10921 = !DILocation(line: 4958, column: 62, scope: !10916)
!10922 = !DILocation(line: 4958, column: 65, scope: !10916)
!10923 = !DILocation(line: 4959, column: 22, scope: !10916)
!10924 = !DILocation(line: 4959, column: 42, scope: !10916)
!10925 = !DILocation(line: 4959, column: 41, scope: !10916)
!10926 = !DILocation(line: 4959, column: 31, scope: !10916)
!10927 = !DILocation(line: 4958, column: 12, scope: !10916)
!10928 = !DILocation(line: 4958, column: 5, scope: !10916)
!10929 = !DILocation(line: 4961, column: 1, scope: !895)
!10930 = !DILocalVariable(name: "iter", arg: 1, scope: !897, file: !1, line: 6133, type: !900)
!10931 = !DILocation(line: 6133, column: 36, scope: !897)
!10932 = !DILocalVariable(name: "table", arg: 2, scope: !897, file: !1, line: 6133, type: !906)
!10933 = !DILocation(line: 6133, column: 60, scope: !897)
!10934 = !DILocation(line: 6135, column: 13, scope: !897)
!10935 = !DILocation(line: 6135, column: 20, scope: !897)
!10936 = !DILocation(line: 6135, column: 3, scope: !897)
!10937 = !DILocation(line: 6135, column: 9, scope: !897)
!10938 = !DILocation(line: 6135, column: 11, scope: !897)
!10939 = !DILocation(line: 6136, column: 15, scope: !897)
!10940 = !DILocation(line: 6136, column: 21, scope: !897)
!10941 = !DILocation(line: 6136, column: 25, scope: !897)
!10942 = !DILocation(line: 6136, column: 32, scope: !897)
!10943 = !DILocation(line: 6136, column: 23, scope: !897)
!10944 = !DILocation(line: 6136, column: 3, scope: !897)
!10945 = !DILocation(line: 6136, column: 9, scope: !897)
!10946 = !DILocation(line: 6136, column: 13, scope: !897)
!10947 = !DILocation(line: 6137, column: 1, scope: !897)
!10948 = !DILocalVariable(name: "iter", arg: 1, scope: !908, file: !1, line: 6140, type: !900)
!10949 = !DILocation(line: 6140, column: 36, scope: !908)
!10950 = !DILocation(line: 6142, column: 3, scope: !908)
!10951 = !DILocation(line: 6142, column: 10, scope: !10952)
!10952 = !DILexicalBlockFile(scope: !908, file: !1, discriminator: 1)
!10953 = !DILocation(line: 6142, column: 16, scope: !10952)
!10954 = !DILocation(line: 6142, column: 21, scope: !10952)
!10955 = !DILocation(line: 6142, column: 27, scope: !10952)
!10956 = !DILocation(line: 6142, column: 18, scope: !10952)
!10957 = !DILocation(line: 6142, column: 3, scope: !10952)
!10958 = !DILocalVariable(name: "tem", scope: !10959, file: !1, line: 6143, type: !533)
!10959 = distinct !DILexicalBlock(scope: !908, file: !1, line: 6142, column: 32)
!10960 = !DILocation(line: 6143, column: 12, scope: !10959)
!10961 = !DILocation(line: 6143, column: 20, scope: !10959)
!10962 = !DILocation(line: 6143, column: 26, scope: !10959)
!10963 = !DILocation(line: 6143, column: 28, scope: !10959)
!10964 = !DILocation(line: 6143, column: 18, scope: !10959)
!10965 = !DILocation(line: 6144, column: 9, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10959, file: !1, line: 6144, column: 9)
!10967 = !DILocation(line: 6144, column: 9, scope: !10959)
!10968 = !DILocation(line: 6145, column: 14, scope: !10966)
!10969 = !DILocation(line: 6145, column: 7, scope: !10966)
!10970 = !DILocation(line: 6142, column: 3, scope: !10971)
!10971 = !DILexicalBlockFile(scope: !908, file: !1, discriminator: 2)
!10972 = !DILocation(line: 6147, column: 3, scope: !908)
!10973 = !DILocation(line: 6148, column: 1, scope: !908)
!10974 = !DILocalVariable(name: "parser", arg: 1, scope: !916, file: !1, line: 5452, type: !162)
!10975 = !DILocation(line: 5452, column: 33, scope: !916)
!10976 = !DILocalVariable(name: "elementType", arg: 2, scope: !916, file: !1, line: 5452, type: !471)
!10977 = !DILocation(line: 5452, column: 55, scope: !916)
!10978 = !DILocalVariable(name: "dtd", scope: !916, file: !1, line: 5454, type: !2386)
!10979 = !DILocation(line: 5454, column: 15, scope: !916)
!10980 = !DILocation(line: 5454, column: 21, scope: !916)
!10981 = !DILocalVariable(name: "name", scope: !916, file: !1, line: 5455, type: !210)
!10982 = !DILocation(line: 5455, column: 19, scope: !916)
!10983 = !DILocation(line: 5456, column: 15, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !916, file: !1, line: 5456, column: 3)
!10985 = !DILocation(line: 5456, column: 28, scope: !10984)
!10986 = !DILocation(line: 5456, column: 13, scope: !10984)
!10987 = !DILocation(line: 5456, column: 8, scope: !10984)
!10988 = !DILocation(line: 5456, column: 35, scope: !10989)
!10989 = !DILexicalBlockFile(scope: !10990, file: !1, discriminator: 1)
!10990 = distinct !DILexicalBlock(scope: !10984, file: !1, line: 5456, column: 3)
!10991 = !DILocation(line: 5456, column: 34, scope: !10989)
!10992 = !DILocation(line: 5456, column: 3, scope: !10989)
!10993 = !DILocation(line: 5457, column: 10, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10995, file: !1, line: 5457, column: 9)
!10995 = distinct !DILexicalBlock(scope: !10990, file: !1, line: 5456, column: 49)
!10996 = !DILocation(line: 5457, column: 9, scope: !10994)
!10997 = !DILocation(line: 5457, column: 15, scope: !10994)
!10998 = !DILocation(line: 5457, column: 9, scope: !10995)
!10999 = !DILocalVariable(name: "prefix", scope: !11000, file: !1, line: 5458, type: !477)
!11000 = distinct !DILexicalBlock(scope: !10994, file: !1, line: 5457, column: 38)
!11001 = !DILocation(line: 5458, column: 15, scope: !11000)
!11002 = !DILocalVariable(name: "s", scope: !11000, file: !1, line: 5459, type: !210)
!11003 = !DILocation(line: 5459, column: 23, scope: !11000)
!11004 = !DILocation(line: 5460, column: 16, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11000, file: !1, line: 5460, column: 7)
!11006 = !DILocation(line: 5460, column: 29, scope: !11005)
!11007 = !DILocation(line: 5460, column: 14, scope: !11005)
!11008 = !DILocation(line: 5460, column: 12, scope: !11005)
!11009 = !DILocation(line: 5460, column: 35, scope: !11010)
!11010 = !DILexicalBlockFile(scope: !11011, file: !1, discriminator: 1)
!11011 = distinct !DILexicalBlock(scope: !11005, file: !1, line: 5460, column: 7)
!11012 = !DILocation(line: 5460, column: 40, scope: !11010)
!11013 = !DILocation(line: 5460, column: 37, scope: !11010)
!11014 = !DILocation(line: 5460, column: 7, scope: !11010)
!11015 = !DILocation(line: 5461, column: 14, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 5461, column: 13)
!11017 = distinct !DILexicalBlock(scope: !11011, file: !1, line: 5460, column: 51)
!11018 = !DILocation(line: 5461, column: 14, scope: !11019)
!11019 = !DILexicalBlockFile(scope: !11016, file: !1, discriminator: 1)
!11020 = !DILocation(line: 5461, column: 13, scope: !11019)
!11021 = !DILocation(line: 5461, column: 14, scope: !11022)
!11022 = !DILexicalBlockFile(scope: !11016, file: !1, discriminator: 2)
!11023 = !DILocation(line: 5461, column: 14, scope: !11024)
!11024 = !DILexicalBlockFile(scope: !11016, file: !1, discriminator: 3)
!11025 = !DILocation(line: 5461, column: 13, scope: !11024)
!11026 = !DILocation(line: 5462, column: 11, scope: !11016)
!11027 = !DILocation(line: 5463, column: 7, scope: !11017)
!11028 = !DILocation(line: 5460, column: 47, scope: !11029)
!11029 = !DILexicalBlockFile(scope: !11011, file: !1, discriminator: 2)
!11030 = !DILocation(line: 5460, column: 7, scope: !11029)
!11031 = !DILocation(line: 5464, column: 12, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11000, file: !1, line: 5464, column: 11)
!11033 = !DILocation(line: 5464, column: 12, scope: !11034)
!11034 = !DILexicalBlockFile(scope: !11032, file: !1, discriminator: 1)
!11035 = !DILocation(line: 5464, column: 11, scope: !11034)
!11036 = !DILocation(line: 5464, column: 12, scope: !11037)
!11037 = !DILexicalBlockFile(scope: !11032, file: !1, discriminator: 2)
!11038 = !DILocation(line: 5464, column: 12, scope: !11039)
!11039 = !DILexicalBlockFile(scope: !11032, file: !1, discriminator: 3)
!11040 = !DILocation(line: 5464, column: 11, scope: !11039)
!11041 = !DILocation(line: 5465, column: 9, scope: !11032)
!11042 = !DILocation(line: 5466, column: 33, scope: !11000)
!11043 = !DILocation(line: 5466, column: 42, scope: !11000)
!11044 = !DILocation(line: 5466, column: 47, scope: !11000)
!11045 = !DILocation(line: 5466, column: 57, scope: !11000)
!11046 = !DILocation(line: 5466, column: 26, scope: !11000)
!11047 = !DILocation(line: 5466, column: 16, scope: !11000)
!11048 = !DILocation(line: 5466, column: 14, scope: !11000)
!11049 = !DILocation(line: 5468, column: 12, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11000, file: !1, line: 5468, column: 11)
!11051 = !DILocation(line: 5468, column: 11, scope: !11000)
!11052 = !DILocation(line: 5469, column: 9, scope: !11050)
!11053 = !DILocation(line: 5470, column: 11, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11000, file: !1, line: 5470, column: 11)
!11055 = !DILocation(line: 5470, column: 19, scope: !11054)
!11056 = !DILocation(line: 5470, column: 27, scope: !11054)
!11057 = !DILocation(line: 5470, column: 24, scope: !11054)
!11058 = !DILocation(line: 5470, column: 11, scope: !11000)
!11059 = !DILocation(line: 5471, column: 9, scope: !11054)
!11060 = !DILocation(line: 5473, column: 9, scope: !11054)
!11061 = !DILocation(line: 5474, column: 29, scope: !11000)
!11062 = !DILocation(line: 5474, column: 7, scope: !11000)
!11063 = !DILocation(line: 5474, column: 20, scope: !11000)
!11064 = !DILocation(line: 5474, column: 27, scope: !11000)
!11065 = !DILocation(line: 5476, column: 5, scope: !11000)
!11066 = !DILocation(line: 5477, column: 3, scope: !10995)
!11067 = !DILocation(line: 5456, column: 45, scope: !11068)
!11068 = !DILexicalBlockFile(scope: !10990, file: !1, discriminator: 2)
!11069 = !DILocation(line: 5456, column: 3, scope: !11068)
!11070 = !DILocation(line: 5478, column: 3, scope: !916)
!11071 = !DILocation(line: 5479, column: 1, scope: !916)
!11072 = !DILocalVariable(name: "parser", arg: 1, scope: !919, file: !1, line: 3101, type: !162)
!11073 = !DILocation(line: 3101, column: 23, scope: !919)
!11074 = !DILocalVariable(name: "prefix", arg: 2, scope: !919, file: !1, line: 3101, type: !477)
!11075 = !DILocation(line: 3101, column: 39, scope: !919)
!11076 = !DILocalVariable(name: "attId", arg: 3, scope: !919, file: !1, line: 3101, type: !505)
!11077 = !DILocation(line: 3101, column: 67, scope: !919)
!11078 = !DILocalVariable(name: "uri", arg: 4, scope: !919, file: !1, line: 3102, type: !210)
!11079 = !DILocation(line: 3102, column: 28, scope: !919)
!11080 = !DILocalVariable(name: "bindingsPtr", arg: 5, scope: !919, file: !1, line: 3102, type: !915)
!11081 = !DILocation(line: 3102, column: 43, scope: !919)
!11082 = !DILocalVariable(name: "mustBeXML", scope: !919, file: !1, line: 3124, type: !159)
!11083 = !DILocation(line: 3124, column: 12, scope: !919)
!11084 = !DILocalVariable(name: "isXML", scope: !919, file: !1, line: 3125, type: !159)
!11085 = !DILocation(line: 3125, column: 12, scope: !919)
!11086 = !DILocalVariable(name: "isXMLNS", scope: !919, file: !1, line: 3126, type: !159)
!11087 = !DILocation(line: 3126, column: 12, scope: !919)
!11088 = !DILocalVariable(name: "b", scope: !919, file: !1, line: 3128, type: !483)
!11089 = !DILocation(line: 3128, column: 12, scope: !919)
!11090 = !DILocalVariable(name: "len", scope: !919, file: !1, line: 3129, type: !223)
!11091 = !DILocation(line: 3129, column: 7, scope: !919)
!11092 = !DILocation(line: 3132, column: 8, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3132, column: 7)
!11094 = !DILocation(line: 3132, column: 7, scope: !11093)
!11095 = !DILocation(line: 3132, column: 12, scope: !11093)
!11096 = !DILocation(line: 3132, column: 27, scope: !11093)
!11097 = !DILocation(line: 3132, column: 30, scope: !11098)
!11098 = !DILexicalBlockFile(scope: !11093, file: !1, discriminator: 1)
!11099 = !DILocation(line: 3132, column: 38, scope: !11098)
!11100 = !DILocation(line: 3132, column: 7, scope: !11098)
!11101 = !DILocation(line: 3133, column: 5, scope: !11093)
!11102 = !DILocation(line: 3135, column: 7, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3135, column: 7)
!11104 = !DILocation(line: 3135, column: 15, scope: !11103)
!11105 = !DILocation(line: 3136, column: 7, scope: !11103)
!11106 = !DILocation(line: 3136, column: 10, scope: !11107)
!11107 = !DILexicalBlockFile(scope: !11103, file: !1, discriminator: 1)
!11108 = !DILocation(line: 3136, column: 18, scope: !11107)
!11109 = !DILocation(line: 3136, column: 26, scope: !11107)
!11110 = !DILocation(line: 3137, column: 7, scope: !11103)
!11111 = !DILocation(line: 3137, column: 10, scope: !11107)
!11112 = !DILocation(line: 3137, column: 18, scope: !11107)
!11113 = !DILocation(line: 3137, column: 26, scope: !11107)
!11114 = !DILocation(line: 3138, column: 7, scope: !11103)
!11115 = !DILocation(line: 3138, column: 10, scope: !11107)
!11116 = !DILocation(line: 3138, column: 18, scope: !11107)
!11117 = !DILocation(line: 3138, column: 26, scope: !11107)
!11118 = !DILocation(line: 3135, column: 7, scope: !11119)
!11119 = !DILexicalBlockFile(scope: !919, file: !1, discriminator: 1)
!11120 = !DILocation(line: 3141, column: 9, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !1, line: 3141, column: 9)
!11122 = distinct !DILexicalBlock(scope: !11103, file: !1, line: 3138, column: 45)
!11123 = !DILocation(line: 3141, column: 17, scope: !11121)
!11124 = !DILocation(line: 3141, column: 25, scope: !11121)
!11125 = !DILocation(line: 3142, column: 9, scope: !11121)
!11126 = !DILocation(line: 3142, column: 12, scope: !11127)
!11127 = !DILexicalBlockFile(scope: !11121, file: !1, discriminator: 1)
!11128 = !DILocation(line: 3142, column: 20, scope: !11127)
!11129 = !DILocation(line: 3142, column: 28, scope: !11127)
!11130 = !DILocation(line: 3143, column: 9, scope: !11121)
!11131 = !DILocation(line: 3143, column: 12, scope: !11127)
!11132 = !DILocation(line: 3143, column: 20, scope: !11127)
!11133 = !DILocation(line: 3143, column: 28, scope: !11127)
!11134 = !DILocation(line: 3141, column: 9, scope: !11135)
!11135 = !DILexicalBlockFile(scope: !11122, file: !1, discriminator: 1)
!11136 = !DILocation(line: 3144, column: 7, scope: !11121)
!11137 = !DILocation(line: 3146, column: 9, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11122, file: !1, line: 3146, column: 9)
!11139 = !DILocation(line: 3146, column: 17, scope: !11138)
!11140 = !DILocation(line: 3146, column: 25, scope: !11138)
!11141 = !DILocation(line: 3146, column: 9, scope: !11122)
!11142 = !DILocation(line: 3147, column: 17, scope: !11138)
!11143 = !DILocation(line: 3147, column: 7, scope: !11138)
!11144 = !DILocation(line: 3148, column: 3, scope: !11122)
!11145 = !DILocation(line: 3150, column: 12, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3150, column: 3)
!11147 = !DILocation(line: 3150, column: 8, scope: !11146)
!11148 = !DILocation(line: 3150, column: 21, scope: !11149)
!11149 = !DILexicalBlockFile(scope: !11150, file: !1, discriminator: 1)
!11150 = distinct !DILexicalBlock(scope: !11146, file: !1, line: 3150, column: 3)
!11151 = !DILocation(line: 3150, column: 17, scope: !11149)
!11152 = !DILocation(line: 3150, column: 3, scope: !11149)
!11153 = !DILocation(line: 3151, column: 9, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !1, line: 3151, column: 9)
!11155 = distinct !DILexicalBlock(scope: !11150, file: !1, line: 3150, column: 34)
!11156 = !DILocation(line: 3151, column: 15, scope: !11154)
!11157 = !DILocation(line: 3151, column: 19, scope: !11158)
!11158 = !DILexicalBlockFile(scope: !11154, file: !1, discriminator: 1)
!11159 = !DILocation(line: 3151, column: 23, scope: !11158)
!11160 = !DILocation(line: 3151, column: 32, scope: !11158)
!11161 = !DILocation(line: 3151, column: 39, scope: !11162)
!11162 = !DILexicalBlockFile(scope: !11154, file: !1, discriminator: 2)
!11163 = !DILocation(line: 3151, column: 35, scope: !11162)
!11164 = !DILocation(line: 3151, column: 60, scope: !11162)
!11165 = !DILocation(line: 3151, column: 47, scope: !11162)
!11166 = !DILocation(line: 3151, column: 44, scope: !11162)
!11167 = !DILocation(line: 3151, column: 9, scope: !11162)
!11168 = !DILocation(line: 3152, column: 13, scope: !11154)
!11169 = !DILocation(line: 3152, column: 7, scope: !11154)
!11170 = !DILocation(line: 3154, column: 10, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11155, file: !1, line: 3154, column: 9)
!11172 = !DILocation(line: 3154, column: 20, scope: !11171)
!11173 = !DILocation(line: 3154, column: 23, scope: !11174)
!11174 = !DILexicalBlockFile(scope: !11171, file: !1, discriminator: 1)
!11175 = !DILocation(line: 3155, column: 9, scope: !11171)
!11176 = !DILocation(line: 3155, column: 13, scope: !11174)
!11177 = !DILocation(line: 3155, column: 17, scope: !11174)
!11178 = !DILocation(line: 3155, column: 28, scope: !11174)
!11179 = !DILocation(line: 3155, column: 35, scope: !11180)
!11180 = !DILexicalBlockFile(scope: !11171, file: !1, discriminator: 2)
!11181 = !DILocation(line: 3155, column: 31, scope: !11180)
!11182 = !DILocation(line: 3155, column: 58, scope: !11180)
!11183 = !DILocation(line: 3155, column: 43, scope: !11180)
!11184 = !DILocation(line: 3155, column: 40, scope: !11180)
!11185 = !DILocation(line: 3154, column: 9, scope: !11186)
!11186 = !DILexicalBlockFile(scope: !11155, file: !1, discriminator: 2)
!11187 = !DILocation(line: 3156, column: 15, scope: !11171)
!11188 = !DILocation(line: 3156, column: 7, scope: !11171)
!11189 = !DILocation(line: 3157, column: 3, scope: !11155)
!11190 = !DILocation(line: 3150, column: 30, scope: !11191)
!11191 = !DILexicalBlockFile(scope: !11150, file: !1, discriminator: 2)
!11192 = !DILocation(line: 3150, column: 3, scope: !11191)
!11193 = !DILocation(line: 3158, column: 11, scope: !919)
!11194 = !DILocation(line: 3158, column: 17, scope: !919)
!11195 = !DILocation(line: 3158, column: 20, scope: !11119)
!11196 = !DILocation(line: 3158, column: 24, scope: !11119)
!11197 = !DILocation(line: 3158, column: 17, scope: !11198)
!11198 = !DILexicalBlockFile(scope: !919, file: !1, discriminator: 2)
!11199 = !DILocation(line: 3158, column: 11, scope: !11198)
!11200 = !DILocation(line: 3158, column: 9, scope: !11198)
!11201 = !DILocation(line: 3159, column: 13, scope: !919)
!11202 = !DILocation(line: 3159, column: 21, scope: !919)
!11203 = !DILocation(line: 3159, column: 24, scope: !11119)
!11204 = !DILocation(line: 3159, column: 28, scope: !11119)
!11205 = !DILocation(line: 3159, column: 21, scope: !11198)
!11206 = !DILocation(line: 3159, column: 13, scope: !11198)
!11207 = !DILocation(line: 3159, column: 11, scope: !11198)
!11208 = !DILocation(line: 3161, column: 7, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3161, column: 7)
!11210 = !DILocation(line: 3161, column: 20, scope: !11209)
!11211 = !DILocation(line: 3161, column: 17, scope: !11209)
!11212 = !DILocation(line: 3161, column: 7, scope: !919)
!11213 = !DILocation(line: 3162, column: 12, scope: !11209)
!11214 = !DILocation(line: 3162, column: 5, scope: !11209)
!11215 = !DILocation(line: 3165, column: 7, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3165, column: 7)
!11217 = !DILocation(line: 3165, column: 7, scope: !919)
!11218 = !DILocation(line: 3166, column: 5, scope: !11216)
!11219 = !DILocation(line: 3168, column: 7, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3168, column: 7)
!11221 = !DILocation(line: 3168, column: 7, scope: !919)
!11222 = !DILocation(line: 3169, column: 8, scope: !11220)
!11223 = !DILocation(line: 3169, column: 5, scope: !11220)
!11224 = !DILocation(line: 3170, column: 7, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3170, column: 7)
!11226 = !DILocation(line: 3170, column: 7, scope: !919)
!11227 = !DILocation(line: 3171, column: 9, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11225, file: !1, line: 3170, column: 24)
!11229 = !DILocation(line: 3171, column: 7, scope: !11228)
!11230 = !DILocation(line: 3172, column: 9, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11228, file: !1, line: 3172, column: 9)
!11232 = !DILocation(line: 3172, column: 15, scope: !11231)
!11233 = !DILocation(line: 3172, column: 18, scope: !11231)
!11234 = !DILocation(line: 3172, column: 13, scope: !11231)
!11235 = !DILocation(line: 3172, column: 9, scope: !11228)
!11236 = !DILocalVariable(name: "temp", scope: !11237, file: !1, line: 3173, type: !202)
!11237 = distinct !DILexicalBlock(scope: !11231, file: !1, line: 3172, column: 28)
!11238 = !DILocation(line: 3173, column: 17, scope: !11237)
!11239 = !DILocation(line: 3173, column: 36, scope: !11237)
!11240 = !DILocation(line: 3175, column: 11, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11237, file: !1, line: 3175, column: 11)
!11242 = !DILocation(line: 3175, column: 16, scope: !11241)
!11243 = !DILocation(line: 3175, column: 11, scope: !11237)
!11244 = !DILocation(line: 3176, column: 9, scope: !11241)
!11245 = !DILocation(line: 3177, column: 16, scope: !11237)
!11246 = !DILocation(line: 3177, column: 7, scope: !11237)
!11247 = !DILocation(line: 3177, column: 10, scope: !11237)
!11248 = !DILocation(line: 3177, column: 14, scope: !11237)
!11249 = !DILocation(line: 3178, column: 21, scope: !11237)
!11250 = !DILocation(line: 3178, column: 25, scope: !11237)
!11251 = !DILocation(line: 3178, column: 7, scope: !11237)
!11252 = !DILocation(line: 3178, column: 10, scope: !11237)
!11253 = !DILocation(line: 3178, column: 19, scope: !11237)
!11254 = !DILocation(line: 3179, column: 5, scope: !11237)
!11255 = !DILocation(line: 3180, column: 23, scope: !11228)
!11256 = !DILocation(line: 3180, column: 26, scope: !11228)
!11257 = !DILocation(line: 3180, column: 5, scope: !11228)
!11258 = !DILocation(line: 3180, column: 21, scope: !11228)
!11259 = !DILocation(line: 3181, column: 3, scope: !11228)
!11260 = !DILocation(line: 3183, column: 20, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11225, file: !1, line: 3182, column: 8)
!11262 = !DILocation(line: 3183, column: 9, scope: !11261)
!11263 = !DILocation(line: 3183, column: 7, scope: !11261)
!11264 = !DILocation(line: 3184, column: 10, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11261, file: !1, line: 3184, column: 9)
!11266 = !DILocation(line: 3184, column: 9, scope: !11261)
!11267 = !DILocation(line: 3185, column: 7, scope: !11265)
!11268 = !DILocation(line: 3186, column: 26, scope: !11261)
!11269 = !DILocation(line: 3186, column: 5, scope: !11261)
!11270 = !DILocation(line: 3186, column: 8, scope: !11261)
!11271 = !DILocation(line: 3186, column: 12, scope: !11261)
!11272 = !DILocation(line: 3187, column: 10, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11261, file: !1, line: 3187, column: 9)
!11274 = !DILocation(line: 3187, column: 13, scope: !11273)
!11275 = !DILocation(line: 3187, column: 9, scope: !11261)
!11276 = !DILocation(line: 3188, column: 7, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11273, file: !1, line: 3187, column: 18)
!11278 = !DILocation(line: 3189, column: 7, scope: !11277)
!11279 = !DILocation(line: 3191, column: 19, scope: !11261)
!11280 = !DILocation(line: 3191, column: 23, scope: !11261)
!11281 = !DILocation(line: 3191, column: 5, scope: !11261)
!11282 = !DILocation(line: 3191, column: 8, scope: !11261)
!11283 = !DILocation(line: 3191, column: 17, scope: !11261)
!11284 = !DILocation(line: 3193, column: 15, scope: !919)
!11285 = !DILocation(line: 3193, column: 3, scope: !919)
!11286 = !DILocation(line: 3193, column: 6, scope: !919)
!11287 = !DILocation(line: 3193, column: 13, scope: !919)
!11288 = !DILocation(line: 3194, column: 10, scope: !919)
!11289 = !DILocation(line: 3194, column: 13, scope: !919)
!11290 = !DILocation(line: 3194, column: 18, scope: !919)
!11291 = !DILocation(line: 3194, column: 23, scope: !919)
!11292 = !DILocation(line: 3194, column: 27, scope: !919)
!11293 = !DILocation(line: 3194, column: 3, scope: !919)
!11294 = !DILocation(line: 3195, column: 7, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3195, column: 7)
!11296 = !DILocation(line: 3195, column: 7, scope: !919)
!11297 = !DILocation(line: 3196, column: 23, scope: !11295)
!11298 = !DILocation(line: 3196, column: 12, scope: !11295)
!11299 = !DILocation(line: 3196, column: 16, scope: !11295)
!11300 = !DILocation(line: 3196, column: 5, scope: !11295)
!11301 = !DILocation(line: 3196, column: 8, scope: !11295)
!11302 = !DILocation(line: 3196, column: 21, scope: !11295)
!11303 = !DILocation(line: 3197, column: 15, scope: !919)
!11304 = !DILocation(line: 3197, column: 3, scope: !919)
!11305 = !DILocation(line: 3197, column: 6, scope: !919)
!11306 = !DILocation(line: 3197, column: 13, scope: !919)
!11307 = !DILocation(line: 3198, column: 14, scope: !919)
!11308 = !DILocation(line: 3198, column: 3, scope: !919)
!11309 = !DILocation(line: 3198, column: 6, scope: !919)
!11310 = !DILocation(line: 3198, column: 12, scope: !919)
!11311 = !DILocation(line: 3199, column: 26, scope: !919)
!11312 = !DILocation(line: 3199, column: 34, scope: !919)
!11313 = !DILocation(line: 3199, column: 3, scope: !919)
!11314 = !DILocation(line: 3199, column: 6, scope: !919)
!11315 = !DILocation(line: 3199, column: 24, scope: !919)
!11316 = !DILocation(line: 3201, column: 8, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3201, column: 7)
!11318 = !DILocation(line: 3201, column: 7, scope: !11317)
!11319 = !DILocation(line: 3201, column: 12, scope: !11317)
!11320 = !DILocation(line: 3201, column: 27, scope: !11317)
!11321 = !DILocation(line: 3201, column: 30, scope: !11322)
!11322 = !DILexicalBlockFile(scope: !11317, file: !1, discriminator: 1)
!11323 = !DILocation(line: 3201, column: 41, scope: !11322)
!11324 = !DILocation(line: 3201, column: 47, scope: !11322)
!11325 = !DILocation(line: 3201, column: 37, scope: !11322)
!11326 = !DILocation(line: 3201, column: 7, scope: !11322)
!11327 = !DILocation(line: 3202, column: 5, scope: !11317)
!11328 = !DILocation(line: 3202, column: 13, scope: !11317)
!11329 = !DILocation(line: 3202, column: 21, scope: !11317)
!11330 = !DILocation(line: 3204, column: 23, scope: !11317)
!11331 = !DILocation(line: 3204, column: 5, scope: !11317)
!11332 = !DILocation(line: 3204, column: 13, scope: !11317)
!11333 = !DILocation(line: 3204, column: 21, scope: !11317)
!11334 = !DILocation(line: 3205, column: 24, scope: !919)
!11335 = !DILocation(line: 3205, column: 23, scope: !919)
!11336 = !DILocation(line: 3205, column: 3, scope: !919)
!11337 = !DILocation(line: 3205, column: 6, scope: !919)
!11338 = !DILocation(line: 3205, column: 21, scope: !919)
!11339 = !DILocation(line: 3206, column: 18, scope: !919)
!11340 = !DILocation(line: 3206, column: 4, scope: !919)
!11341 = !DILocation(line: 3206, column: 16, scope: !919)
!11342 = !DILocation(line: 3208, column: 7, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !919, file: !1, line: 3208, column: 7)
!11344 = !DILocation(line: 3208, column: 13, scope: !11343)
!11345 = !DILocation(line: 3208, column: 16, scope: !11346)
!11346 = !DILexicalBlockFile(scope: !11343, file: !1, discriminator: 1)
!11347 = !DILocation(line: 3208, column: 7, scope: !11346)
!11348 = !DILocation(line: 3209, column: 5, scope: !11343)
!11349 = !DILocation(line: 3209, column: 31, scope: !11343)
!11350 = !DILocation(line: 3209, column: 43, scope: !11343)
!11351 = !DILocation(line: 3209, column: 51, scope: !11343)
!11352 = !DILocation(line: 3210, column: 31, scope: !11343)
!11353 = !DILocation(line: 3210, column: 39, scope: !11343)
!11354 = !DILocation(line: 3210, column: 49, scope: !11346)
!11355 = !DILocation(line: 3210, column: 31, scope: !11346)
!11356 = !DILocation(line: 3210, column: 31, scope: !11357)
!11357 = !DILexicalBlockFile(scope: !11343, file: !1, discriminator: 2)
!11358 = !DILocation(line: 3210, column: 31, scope: !11359)
!11359 = !DILexicalBlockFile(scope: !11343, file: !1, discriminator: 3)
!11360 = !DILocation(line: 3209, column: 5, scope: !11346)
!11361 = !DILocation(line: 3211, column: 3, scope: !919)
!11362 = !DILocation(line: 3212, column: 1, scope: !919)
!11363 = !DILocalVariable(name: "parser", arg: 1, scope: !927, file: !1, line: 2265, type: !162)
!11364 = !DILocation(line: 2265, column: 43, scope: !927)
!11365 = !DILocalVariable(name: "start", arg: 2, scope: !927, file: !1, line: 2266, type: !192)
!11366 = !DILocation(line: 2266, column: 44, scope: !927)
!11367 = !DILocalVariable(name: "end", arg: 3, scope: !927, file: !1, line: 2267, type: !192)
!11368 = !DILocation(line: 2267, column: 44, scope: !927)
!11369 = !DILocalVariable(name: "endPtr", arg: 4, scope: !927, file: !1, line: 2268, type: !332)
!11370 = !DILocation(line: 2268, column: 45, scope: !927)
!11371 = !DILocalVariable(name: "result", scope: !927, file: !1, line: 2270, type: !24)
!11372 = !DILocation(line: 2270, column: 18, scope: !927)
!11373 = !DILocation(line: 2270, column: 37, scope: !927)
!11374 = !DILocation(line: 2270, column: 48, scope: !927)
!11375 = !DILocation(line: 2270, column: 58, scope: !927)
!11376 = !DILocation(line: 2270, column: 65, scope: !927)
!11377 = !DILocation(line: 2271, column: 37, scope: !927)
!11378 = !DILocation(line: 2271, column: 56, scope: !927)
!11379 = !DILocation(line: 2271, column: 55, scope: !927)
!11380 = !DILocation(line: 2271, column: 45, scope: !927)
!11381 = !DILocation(line: 2270, column: 27, scope: !927)
!11382 = !DILocation(line: 2272, column: 7, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !927, file: !1, line: 2272, column: 7)
!11384 = !DILocation(line: 2272, column: 14, scope: !11383)
!11385 = !DILocation(line: 2272, column: 7, scope: !927)
!11386 = !DILocation(line: 2273, column: 24, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !1, line: 2273, column: 9)
!11388 = distinct !DILexicalBlock(scope: !11383, file: !1, line: 2272, column: 33)
!11389 = !DILocation(line: 2273, column: 10, scope: !11387)
!11390 = !DILocation(line: 2273, column: 9, scope: !11388)
!11391 = !DILocation(line: 2274, column: 7, scope: !11387)
!11392 = !DILocation(line: 2275, column: 3, scope: !11388)
!11393 = !DILocation(line: 2276, column: 10, scope: !927)
!11394 = !DILocation(line: 2276, column: 3, scope: !927)
!11395 = !DILocation(line: 2277, column: 1, scope: !927)
!11396 = !DILocalVariable(name: "parser", arg: 1, scope: !950, file: !1, line: 4989, type: !162)
!11397 = !DILocation(line: 4989, column: 33, scope: !950)
!11398 = !DILocalVariable(name: "enc", arg: 2, scope: !950, file: !1, line: 4989, type: !321)
!11399 = !DILocation(line: 4989, column: 57, scope: !950)
!11400 = !DILocalVariable(name: "isCdata", arg: 3, scope: !950, file: !1, line: 4989, type: !159)
!11401 = !DILocation(line: 4989, column: 71, scope: !950)
!11402 = !DILocalVariable(name: "ptr", arg: 4, scope: !950, file: !1, line: 4990, type: !192)
!11403 = !DILocation(line: 4990, column: 34, scope: !950)
!11404 = !DILocalVariable(name: "end", arg: 5, scope: !950, file: !1, line: 4990, type: !192)
!11405 = !DILocation(line: 4990, column: 51, scope: !950)
!11406 = !DILocalVariable(name: "pool", arg: 6, scope: !950, file: !1, line: 4991, type: !863)
!11407 = !DILocation(line: 4991, column: 35, scope: !950)
!11408 = !DILocalVariable(name: "dtd", scope: !950, file: !1, line: 4993, type: !2386)
!11409 = !DILocation(line: 4993, column: 15, scope: !950)
!11410 = !DILocation(line: 4993, column: 21, scope: !950)
!11411 = !DILocation(line: 4994, column: 3, scope: !950)
!11412 = !DILocalVariable(name: "next", scope: !11413, file: !1, line: 4995, type: !192)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !1, line: 4994, column: 12)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !1, line: 4994, column: 3)
!11415 = distinct !DILexicalBlock(scope: !950, file: !1, line: 4994, column: 3)
!11416 = !DILocation(line: 4995, column: 17, scope: !11413)
!11417 = !DILocalVariable(name: "tok", scope: !11413, file: !1, line: 4996, type: !223)
!11418 = !DILocation(line: 4996, column: 9, scope: !11413)
!11419 = !DILocation(line: 4996, column: 15, scope: !11413)
!11420 = !DILocation(line: 4997, column: 13, scope: !11413)
!11421 = !DILocation(line: 4997, column: 5, scope: !11413)
!11422 = !DILocation(line: 4999, column: 7, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11413, file: !1, line: 4997, column: 18)
!11424 = !DILocation(line: 5001, column: 11, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5001, column: 11)
!11426 = !DILocation(line: 5001, column: 18, scope: !11425)
!11427 = !DILocation(line: 5001, column: 15, scope: !11425)
!11428 = !DILocation(line: 5001, column: 11, scope: !11423)
!11429 = !DILocation(line: 5002, column: 20, scope: !11425)
!11430 = !DILocation(line: 5002, column: 9, scope: !11425)
!11431 = !DILocation(line: 5002, column: 18, scope: !11425)
!11432 = !DILocation(line: 5003, column: 7, scope: !11423)
!11433 = !DILocation(line: 5005, column: 11, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5005, column: 11)
!11435 = !DILocation(line: 5005, column: 18, scope: !11434)
!11436 = !DILocation(line: 5005, column: 15, scope: !11434)
!11437 = !DILocation(line: 5005, column: 11, scope: !11423)
!11438 = !DILocation(line: 5006, column: 20, scope: !11434)
!11439 = !DILocation(line: 5006, column: 9, scope: !11434)
!11440 = !DILocation(line: 5006, column: 18, scope: !11434)
!11441 = !DILocation(line: 5007, column: 7, scope: !11423)
!11442 = !DILocalVariable(name: "buf", scope: !11443, file: !1, line: 5010, type: !7065)
!11443 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5009, column: 7)
!11444 = !DILocation(line: 5010, column: 18, scope: !11443)
!11445 = !DILocalVariable(name: "i", scope: !11443, file: !1, line: 5011, type: !223)
!11446 = !DILocation(line: 5011, column: 13, scope: !11443)
!11447 = !DILocalVariable(name: "n", scope: !11443, file: !1, line: 5012, type: !223)
!11448 = !DILocation(line: 5012, column: 13, scope: !11443)
!11449 = !DILocation(line: 5012, column: 17, scope: !11443)
!11450 = !DILocation(line: 5013, column: 13, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11443, file: !1, line: 5013, column: 13)
!11452 = !DILocation(line: 5013, column: 15, scope: !11451)
!11453 = !DILocation(line: 5013, column: 13, scope: !11443)
!11454 = !DILocation(line: 5014, column: 15, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !1, line: 5014, column: 15)
!11456 = distinct !DILexicalBlock(scope: !11451, file: !1, line: 5013, column: 20)
!11457 = !DILocation(line: 5014, column: 22, scope: !11455)
!11458 = !DILocation(line: 5014, column: 19, scope: !11455)
!11459 = !DILocation(line: 5014, column: 15, scope: !11456)
!11460 = !DILocation(line: 5015, column: 24, scope: !11455)
!11461 = !DILocation(line: 5015, column: 13, scope: !11455)
!11462 = !DILocation(line: 5015, column: 22, scope: !11455)
!11463 = !DILocation(line: 5016, column: 11, scope: !11456)
!11464 = !DILocation(line: 5018, column: 14, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11443, file: !1, line: 5018, column: 13)
!11466 = !DILocation(line: 5019, column: 13, scope: !11465)
!11467 = !DILocation(line: 5019, column: 16, scope: !11468)
!11468 = !DILexicalBlockFile(scope: !11465, file: !1, discriminator: 1)
!11469 = !DILocation(line: 5019, column: 18, scope: !11468)
!11470 = !DILocation(line: 5020, column: 13, scope: !11465)
!11471 = !DILocation(line: 5020, column: 17, scope: !11468)
!11472 = !DILocation(line: 5020, column: 34, scope: !11468)
!11473 = !DILocation(line: 5020, column: 39, scope: !11468)
!11474 = !DILocation(line: 5020, column: 42, scope: !11475)
!11475 = !DILexicalBlockFile(scope: !11465, file: !1, discriminator: 2)
!11476 = !DILocation(line: 5020, column: 61, scope: !11475)
!11477 = !DILocation(line: 5018, column: 13, scope: !11478)
!11478 = !DILexicalBlockFile(scope: !11443, file: !1, discriminator: 1)
!11479 = !DILocation(line: 5021, column: 11, scope: !11465)
!11480 = !DILocation(line: 5022, column: 23, scope: !11443)
!11481 = !DILocation(line: 5022, column: 35, scope: !11443)
!11482 = !DILocation(line: 5022, column: 13, scope: !11443)
!11483 = !DILocation(line: 5022, column: 11, scope: !11443)
!11484 = !DILocation(line: 5023, column: 14, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11443, file: !1, line: 5023, column: 13)
!11486 = !DILocation(line: 5023, column: 13, scope: !11443)
!11487 = !DILocation(line: 5024, column: 15, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !1, line: 5024, column: 15)
!11489 = distinct !DILexicalBlock(scope: !11485, file: !1, line: 5023, column: 17)
!11490 = !DILocation(line: 5024, column: 22, scope: !11488)
!11491 = !DILocation(line: 5024, column: 19, scope: !11488)
!11492 = !DILocation(line: 5024, column: 15, scope: !11489)
!11493 = !DILocation(line: 5025, column: 24, scope: !11488)
!11494 = !DILocation(line: 5025, column: 13, scope: !11488)
!11495 = !DILocation(line: 5025, column: 22, scope: !11488)
!11496 = !DILocation(line: 5026, column: 11, scope: !11489)
!11497 = !DILocation(line: 5028, column: 16, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11443, file: !1, line: 5028, column: 9)
!11499 = !DILocation(line: 5028, column: 14, scope: !11498)
!11500 = !DILocation(line: 5028, column: 21, scope: !11501)
!11501 = !DILexicalBlockFile(scope: !11502, file: !1, discriminator: 1)
!11502 = distinct !DILexicalBlock(scope: !11498, file: !1, line: 5028, column: 9)
!11503 = !DILocation(line: 5028, column: 25, scope: !11501)
!11504 = !DILocation(line: 5028, column: 23, scope: !11501)
!11505 = !DILocation(line: 5028, column: 9, scope: !11501)
!11506 = !DILocation(line: 5029, column: 16, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !1, line: 5029, column: 15)
!11508 = distinct !DILexicalBlock(scope: !11502, file: !1, line: 5028, column: 33)
!11509 = !DILocation(line: 5029, column: 16, scope: !11510)
!11510 = !DILexicalBlockFile(scope: !11507, file: !1, discriminator: 1)
!11511 = !DILocation(line: 5029, column: 15, scope: !11510)
!11512 = !DILocation(line: 5029, column: 16, scope: !11513)
!11513 = !DILexicalBlockFile(scope: !11507, file: !1, discriminator: 2)
!11514 = !DILocation(line: 5029, column: 16, scope: !11515)
!11515 = !DILexicalBlockFile(scope: !11507, file: !1, discriminator: 3)
!11516 = !DILocation(line: 5029, column: 15, scope: !11515)
!11517 = !DILocation(line: 5030, column: 13, scope: !11507)
!11518 = !DILocation(line: 5031, column: 9, scope: !11508)
!11519 = !DILocation(line: 5028, column: 29, scope: !11520)
!11520 = !DILexicalBlockFile(scope: !11502, file: !1, discriminator: 2)
!11521 = !DILocation(line: 5028, column: 9, scope: !11520)
!11522 = !DILocation(line: 5033, column: 7, scope: !11423)
!11523 = !DILocation(line: 5035, column: 23, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5035, column: 11)
!11525 = !DILocation(line: 5035, column: 29, scope: !11524)
!11526 = !DILocation(line: 5035, column: 34, scope: !11524)
!11527 = !DILocation(line: 5035, column: 39, scope: !11524)
!11528 = !DILocation(line: 5035, column: 12, scope: !11524)
!11529 = !DILocation(line: 5035, column: 11, scope: !11423)
!11530 = !DILocation(line: 5036, column: 9, scope: !11524)
!11531 = !DILocation(line: 5037, column: 7, scope: !11423)
!11532 = !DILocation(line: 5039, column: 14, scope: !11423)
!11533 = !DILocation(line: 5039, column: 20, scope: !11423)
!11534 = !DILocation(line: 5039, column: 25, scope: !11423)
!11535 = !DILocation(line: 5039, column: 18, scope: !11423)
!11536 = !DILocation(line: 5039, column: 12, scope: !11423)
!11537 = !DILocation(line: 5039, column: 7, scope: !11423)
!11538 = !DILocation(line: 5043, column: 12, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5043, column: 11)
!11540 = !DILocation(line: 5043, column: 20, scope: !11539)
!11541 = !DILocation(line: 5043, column: 24, scope: !11542)
!11542 = !DILexicalBlockFile(scope: !11539, file: !1, discriminator: 1)
!11543 = !DILocation(line: 5043, column: 41, scope: !11542)
!11544 = !DILocation(line: 5043, column: 46, scope: !11542)
!11545 = !DILocation(line: 5043, column: 49, scope: !11546)
!11546 = !DILexicalBlockFile(scope: !11539, file: !1, discriminator: 2)
!11547 = !DILocation(line: 5043, column: 68, scope: !11546)
!11548 = !DILocation(line: 5043, column: 11, scope: !11546)
!11549 = !DILocation(line: 5044, column: 9, scope: !11539)
!11550 = !DILocation(line: 5045, column: 12, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5045, column: 11)
!11552 = !DILocation(line: 5045, column: 12, scope: !11553)
!11553 = !DILexicalBlockFile(scope: !11551, file: !1, discriminator: 1)
!11554 = !DILocation(line: 5045, column: 11, scope: !11553)
!11555 = !DILocation(line: 5045, column: 12, scope: !11556)
!11556 = !DILexicalBlockFile(scope: !11551, file: !1, discriminator: 2)
!11557 = !DILocation(line: 5045, column: 12, scope: !11558)
!11558 = !DILexicalBlockFile(scope: !11551, file: !1, discriminator: 3)
!11559 = !DILocation(line: 5045, column: 11, scope: !11558)
!11560 = !DILocation(line: 5046, column: 9, scope: !11551)
!11561 = !DILocation(line: 5047, column: 7, scope: !11423)
!11562 = !DILocalVariable(name: "name", scope: !11563, file: !1, line: 5050, type: !210)
!11563 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5049, column: 7)
!11564 = !DILocation(line: 5050, column: 25, scope: !11563)
!11565 = !DILocalVariable(name: "entity", scope: !11563, file: !1, line: 5051, type: !443)
!11566 = !DILocation(line: 5051, column: 17, scope: !11563)
!11567 = !DILocalVariable(name: "checkEntityDecl", scope: !11563, file: !1, line: 5052, type: !170)
!11568 = !DILocation(line: 5052, column: 14, scope: !11563)
!11569 = !DILocalVariable(name: "ch", scope: !11563, file: !1, line: 5053, type: !203)
!11570 = !DILocation(line: 5053, column: 18, scope: !11563)
!11571 = !DILocation(line: 5053, column: 34, scope: !11563)
!11572 = !DILocation(line: 5053, column: 23, scope: !11563)
!11573 = !DILocation(line: 5056, column: 13, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 5056, column: 13)
!11575 = !DILocation(line: 5056, column: 13, scope: !11563)
!11576 = !DILocation(line: 5057, column: 16, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !1, line: 5057, column: 15)
!11578 = distinct !DILexicalBlock(scope: !11574, file: !1, line: 5056, column: 17)
!11579 = !DILocation(line: 5057, column: 16, scope: !11580)
!11580 = !DILexicalBlockFile(scope: !11577, file: !1, discriminator: 1)
!11581 = !DILocation(line: 5057, column: 15, scope: !11580)
!11582 = !DILocation(line: 5057, column: 16, scope: !11583)
!11583 = !DILexicalBlockFile(scope: !11577, file: !1, discriminator: 2)
!11584 = !DILocation(line: 5057, column: 16, scope: !11585)
!11585 = !DILexicalBlockFile(scope: !11577, file: !1, discriminator: 3)
!11586 = !DILocation(line: 5057, column: 15, scope: !11585)
!11587 = !DILocation(line: 5058, column: 17, scope: !11577)
!11588 = !DILocation(line: 5059, column: 11, scope: !11578)
!11589 = !DILocation(line: 5061, column: 33, scope: !11563)
!11590 = !DILocation(line: 5061, column: 44, scope: !11563)
!11591 = !DILocation(line: 5062, column: 32, scope: !11563)
!11592 = !DILocation(line: 5062, column: 38, scope: !11563)
!11593 = !DILocation(line: 5062, column: 43, scope: !11563)
!11594 = !DILocation(line: 5062, column: 36, scope: !11563)
!11595 = !DILocation(line: 5063, column: 32, scope: !11563)
!11596 = !DILocation(line: 5063, column: 39, scope: !11563)
!11597 = !DILocation(line: 5063, column: 44, scope: !11563)
!11598 = !DILocation(line: 5063, column: 37, scope: !11563)
!11599 = !DILocation(line: 5061, column: 16, scope: !11563)
!11600 = !DILocation(line: 5061, column: 14, scope: !11563)
!11601 = !DILocation(line: 5064, column: 14, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 5064, column: 13)
!11603 = !DILocation(line: 5064, column: 13, scope: !11563)
!11604 = !DILocation(line: 5065, column: 11, scope: !11602)
!11605 = !DILocation(line: 5066, column: 35, scope: !11563)
!11606 = !DILocation(line: 5066, column: 44, scope: !11563)
!11607 = !DILocation(line: 5066, column: 49, scope: !11563)
!11608 = !DILocation(line: 5066, column: 66, scope: !11563)
!11609 = !DILocation(line: 5066, column: 28, scope: !11563)
!11610 = !DILocation(line: 5066, column: 18, scope: !11563)
!11611 = !DILocation(line: 5066, column: 16, scope: !11563)
!11612 = !DILocation(line: 5067, column: 9, scope: !11563)
!11613 = !DILocation(line: 5071, column: 13, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 5071, column: 13)
!11615 = !DILocation(line: 5071, column: 22, scope: !11614)
!11616 = !DILocation(line: 5071, column: 27, scope: !11614)
!11617 = !DILocation(line: 5071, column: 18, scope: !11614)
!11618 = !DILocation(line: 5071, column: 13, scope: !11563)
!11619 = !DILocation(line: 5076, column: 16, scope: !11614)
!11620 = !DILocation(line: 5076, column: 21, scope: !11614)
!11621 = !DILocation(line: 5077, column: 19, scope: !11614)
!11622 = !DILocation(line: 5077, column: 18, scope: !11614)
!11623 = !DILocation(line: 5076, column: 16, scope: !11624)
!11624 = !DILexicalBlockFile(scope: !11614, file: !1, discriminator: 1)
!11625 = !DILocation(line: 5078, column: 19, scope: !11614)
!11626 = !DILocation(line: 5078, column: 24, scope: !11614)
!11627 = !DILocation(line: 5078, column: 18, scope: !11614)
!11628 = !DILocation(line: 5076, column: 16, scope: !11629)
!11629 = !DILexicalBlockFile(scope: !11614, file: !1, discriminator: 2)
!11630 = !DILocation(line: 5076, column: 16, scope: !11631)
!11631 = !DILexicalBlockFile(scope: !11614, file: !1, discriminator: 3)
!11632 = !DILocation(line: 5076, column: 15, scope: !11631)
!11633 = !DILocation(line: 5072, column: 27, scope: !11614)
!11634 = !DILocation(line: 5072, column: 11, scope: !11614)
!11635 = !DILocation(line: 5080, column: 30, scope: !11614)
!11636 = !DILocation(line: 5080, column: 35, scope: !11614)
!11637 = !DILocation(line: 5080, column: 54, scope: !11614)
!11638 = !DILocation(line: 5080, column: 57, scope: !11624)
!11639 = !DILocation(line: 5080, column: 62, scope: !11624)
!11640 = !DILocation(line: 5080, column: 54, scope: !11624)
!11641 = !DILocation(line: 5080, column: 54, scope: !11629)
!11642 = !DILocation(line: 5080, column: 29, scope: !11629)
!11643 = !DILocation(line: 5080, column: 27, scope: !11629)
!11644 = !DILocation(line: 5081, column: 13, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 5081, column: 13)
!11646 = !DILocation(line: 5081, column: 13, scope: !11563)
!11647 = !DILocation(line: 5082, column: 16, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !1, line: 5082, column: 15)
!11649 = distinct !DILexicalBlock(scope: !11645, file: !1, line: 5081, column: 30)
!11650 = !DILocation(line: 5082, column: 15, scope: !11649)
!11651 = !DILocation(line: 5083, column: 13, scope: !11648)
!11652 = !DILocation(line: 5084, column: 21, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11648, file: !1, line: 5084, column: 20)
!11654 = !DILocation(line: 5084, column: 29, scope: !11653)
!11655 = !DILocation(line: 5084, column: 20, scope: !11648)
!11656 = !DILocation(line: 5085, column: 13, scope: !11653)
!11657 = !DILocation(line: 5086, column: 9, scope: !11649)
!11658 = !DILocation(line: 5087, column: 19, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11645, file: !1, line: 5087, column: 18)
!11660 = !DILocation(line: 5087, column: 18, scope: !11645)
!11661 = !DILocation(line: 5098, column: 11, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11659, file: !1, line: 5087, column: 27)
!11663 = !DILocation(line: 5100, column: 13, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 5100, column: 13)
!11665 = !DILocation(line: 5100, column: 21, scope: !11664)
!11666 = !DILocation(line: 5100, column: 13, scope: !11563)
!11667 = !DILocation(line: 5101, column: 15, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !1, line: 5101, column: 15)
!11669 = distinct !DILexicalBlock(scope: !11664, file: !1, line: 5100, column: 27)
!11670 = !DILocation(line: 5101, column: 22, scope: !11668)
!11671 = !DILocation(line: 5101, column: 19, scope: !11668)
!11672 = !DILocation(line: 5101, column: 15, scope: !11669)
!11673 = !DILocation(line: 5102, column: 24, scope: !11668)
!11674 = !DILocation(line: 5102, column: 13, scope: !11668)
!11675 = !DILocation(line: 5102, column: 22, scope: !11668)
!11676 = !DILocation(line: 5103, column: 11, scope: !11669)
!11677 = !DILocation(line: 5105, column: 13, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 5105, column: 13)
!11679 = !DILocation(line: 5105, column: 21, scope: !11678)
!11680 = !DILocation(line: 5105, column: 13, scope: !11563)
!11681 = !DILocation(line: 5106, column: 15, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !1, line: 5106, column: 15)
!11683 = distinct !DILexicalBlock(scope: !11678, file: !1, line: 5105, column: 31)
!11684 = !DILocation(line: 5106, column: 22, scope: !11682)
!11685 = !DILocation(line: 5106, column: 19, scope: !11682)
!11686 = !DILocation(line: 5106, column: 15, scope: !11683)
!11687 = !DILocation(line: 5107, column: 24, scope: !11682)
!11688 = !DILocation(line: 5107, column: 13, scope: !11682)
!11689 = !DILocation(line: 5107, column: 22, scope: !11682)
!11690 = !DILocation(line: 5108, column: 11, scope: !11683)
!11691 = !DILocation(line: 5110, column: 14, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 5110, column: 13)
!11693 = !DILocation(line: 5110, column: 22, scope: !11692)
!11694 = !DILocation(line: 5110, column: 13, scope: !11563)
!11695 = !DILocation(line: 5111, column: 15, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !1, line: 5111, column: 15)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !1, line: 5110, column: 31)
!11698 = !DILocation(line: 5111, column: 22, scope: !11696)
!11699 = !DILocation(line: 5111, column: 19, scope: !11696)
!11700 = !DILocation(line: 5111, column: 15, scope: !11697)
!11701 = !DILocation(line: 5112, column: 24, scope: !11696)
!11702 = !DILocation(line: 5112, column: 13, scope: !11696)
!11703 = !DILocation(line: 5112, column: 22, scope: !11696)
!11704 = !DILocation(line: 5113, column: 11, scope: !11697)
!11705 = !DILocalVariable(name: "result", scope: !11706, file: !1, line: 5116, type: !24)
!11706 = distinct !DILexicalBlock(scope: !11692, file: !1, line: 5115, column: 14)
!11707 = !DILocation(line: 5116, column: 26, scope: !11706)
!11708 = !DILocalVariable(name: "textEnd", scope: !11706, file: !1, line: 5117, type: !210)
!11709 = !DILocation(line: 5117, column: 27, scope: !11706)
!11710 = !DILocation(line: 5117, column: 37, scope: !11706)
!11711 = !DILocation(line: 5117, column: 45, scope: !11706)
!11712 = !DILocation(line: 5117, column: 55, scope: !11706)
!11713 = !DILocation(line: 5117, column: 63, scope: !11706)
!11714 = !DILocation(line: 5117, column: 53, scope: !11706)
!11715 = !DILocation(line: 5118, column: 11, scope: !11706)
!11716 = !DILocation(line: 5118, column: 19, scope: !11706)
!11717 = !DILocation(line: 5118, column: 24, scope: !11706)
!11718 = !DILocation(line: 5119, column: 41, scope: !11706)
!11719 = !DILocation(line: 5119, column: 49, scope: !11706)
!11720 = !DILocation(line: 5119, column: 67, scope: !11706)
!11721 = !DILocation(line: 5120, column: 49, scope: !11706)
!11722 = !DILocation(line: 5120, column: 57, scope: !11706)
!11723 = !DILocation(line: 5121, column: 49, scope: !11706)
!11724 = !DILocation(line: 5121, column: 58, scope: !11706)
!11725 = !DILocation(line: 5119, column: 20, scope: !11706)
!11726 = !DILocation(line: 5119, column: 18, scope: !11706)
!11727 = !DILocation(line: 5122, column: 11, scope: !11706)
!11728 = !DILocation(line: 5122, column: 19, scope: !11706)
!11729 = !DILocation(line: 5122, column: 24, scope: !11706)
!11730 = !DILocation(line: 5123, column: 15, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11706, file: !1, line: 5123, column: 15)
!11732 = !DILocation(line: 5123, column: 15, scope: !11706)
!11733 = !DILocation(line: 5124, column: 20, scope: !11731)
!11734 = !DILocation(line: 5124, column: 13, scope: !11731)
!11735 = !DILocation(line: 5127, column: 7, scope: !11423)
!11736 = !DILocation(line: 5129, column: 11, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 5129, column: 11)
!11738 = !DILocation(line: 5129, column: 18, scope: !11737)
!11739 = !DILocation(line: 5129, column: 15, scope: !11737)
!11740 = !DILocation(line: 5129, column: 11, scope: !11423)
!11741 = !DILocation(line: 5130, column: 20, scope: !11737)
!11742 = !DILocation(line: 5130, column: 9, scope: !11737)
!11743 = !DILocation(line: 5130, column: 18, scope: !11737)
!11744 = !DILocation(line: 5131, column: 7, scope: !11423)
!11745 = !DILocation(line: 5133, column: 11, scope: !11413)
!11746 = !DILocation(line: 5133, column: 9, scope: !11413)
!11747 = !DILocation(line: 4994, column: 3, scope: !11748)
!11748 = !DILexicalBlockFile(scope: !11414, file: !1, discriminator: 1)
!11749 = !DILocation(line: 5136, column: 1, scope: !950)
!11750 = !DILocalVariable(name: "parser", arg: 1, scope: !957, file: !1, line: 6015, type: !162)
!11751 = !DILocation(line: 6015, column: 17, scope: !957)
!11752 = !DILocalVariable(name: "s", arg: 2, scope: !957, file: !1, line: 6015, type: !538)
!11753 = !DILocation(line: 6015, column: 29, scope: !957)
!11754 = !DILocalVariable(name: "h", scope: !957, file: !1, line: 6017, type: !182)
!11755 = !DILocation(line: 6017, column: 17, scope: !957)
!11756 = !DILocation(line: 6017, column: 21, scope: !957)
!11757 = !DILocation(line: 6018, column: 3, scope: !957)
!11758 = !DILocation(line: 6018, column: 11, scope: !11759)
!11759 = !DILexicalBlockFile(scope: !957, file: !1, discriminator: 1)
!11760 = !DILocation(line: 6018, column: 10, scope: !11759)
!11761 = !DILocation(line: 6018, column: 3, scope: !11759)
!11762 = !DILocation(line: 6019, column: 9, scope: !957)
!11763 = !DILocation(line: 6019, column: 7, scope: !957)
!11764 = !DILocation(line: 6018, column: 3, scope: !11765)
!11765 = !DILexicalBlockFile(scope: !957, file: !1, discriminator: 2)
!11766 = !DILocation(line: 6020, column: 10, scope: !957)
!11767 = !DILocation(line: 6020, column: 3, scope: !957)
!11768 = !DILocalVariable(name: "s1", arg: 1, scope: !960, file: !1, line: 6006, type: !538)
!11769 = !DILocation(line: 6006, column: 11, scope: !960)
!11770 = !DILocalVariable(name: "s2", arg: 2, scope: !960, file: !1, line: 6006, type: !538)
!11771 = !DILocation(line: 6006, column: 19, scope: !960)
!11772 = !DILocation(line: 6008, column: 3, scope: !960)
!11773 = !DILocation(line: 6008, column: 11, scope: !11774)
!11774 = !DILexicalBlockFile(scope: !11775, file: !1, discriminator: 1)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !1, line: 6008, column: 3)
!11776 = distinct !DILexicalBlock(scope: !960, file: !1, line: 6008, column: 3)
!11777 = !DILocation(line: 6008, column: 10, scope: !11774)
!11778 = !DILocation(line: 6008, column: 18, scope: !11774)
!11779 = !DILocation(line: 6008, column: 17, scope: !11774)
!11780 = !DILocation(line: 6008, column: 14, scope: !11774)
!11781 = !DILocation(line: 6008, column: 3, scope: !11774)
!11782 = !DILocation(line: 6009, column: 10, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11775, file: !1, line: 6009, column: 9)
!11784 = !DILocation(line: 6009, column: 9, scope: !11783)
!11785 = !DILocation(line: 6009, column: 13, scope: !11783)
!11786 = !DILocation(line: 6009, column: 9, scope: !11775)
!11787 = !DILocation(line: 6010, column: 7, scope: !11783)
!11788 = !DILocation(line: 6009, column: 16, scope: !11789)
!11789 = !DILexicalBlockFile(scope: !11783, file: !1, discriminator: 1)
!11790 = !DILocation(line: 6008, column: 24, scope: !11791)
!11791 = !DILexicalBlockFile(scope: !11775, file: !1, discriminator: 2)
!11792 = !DILocation(line: 6008, column: 30, scope: !11791)
!11793 = !DILocation(line: 6008, column: 3, scope: !11791)
!11794 = !DILocation(line: 6011, column: 3, scope: !960)
!11795 = !DILocation(line: 6012, column: 1, scope: !960)
!11796 = !DILocalVariable(name: "parser", arg: 1, scope: !967, file: !1, line: 6385, type: !162)
!11797 = !DILocation(line: 6385, column: 23, scope: !967)
!11798 = !DILocalVariable(name: "src_node", arg: 2, scope: !967, file: !1, line: 6386, type: !223)
!11799 = !DILocation(line: 6386, column: 16, scope: !967)
!11800 = !DILocalVariable(name: "dest", arg: 3, scope: !967, file: !1, line: 6387, type: !295)
!11801 = !DILocation(line: 6387, column: 25, scope: !967)
!11802 = !DILocalVariable(name: "contpos", arg: 4, scope: !967, file: !1, line: 6388, type: !970)
!11803 = !DILocation(line: 6388, column: 26, scope: !967)
!11804 = !DILocalVariable(name: "strpos", arg: 5, scope: !967, file: !1, line: 6389, type: !971)
!11805 = !DILocation(line: 6389, column: 23, scope: !967)
!11806 = !DILocalVariable(name: "dtd", scope: !967, file: !1, line: 6391, type: !2386)
!11807 = !DILocation(line: 6391, column: 15, scope: !967)
!11808 = !DILocation(line: 6391, column: 21, scope: !967)
!11809 = !DILocation(line: 6392, column: 30, scope: !967)
!11810 = !DILocation(line: 6392, column: 16, scope: !967)
!11811 = !DILocation(line: 6392, column: 21, scope: !967)
!11812 = !DILocation(line: 6392, column: 40, scope: !967)
!11813 = !DILocation(line: 6392, column: 3, scope: !967)
!11814 = !DILocation(line: 6392, column: 9, scope: !967)
!11815 = !DILocation(line: 6392, column: 14, scope: !967)
!11816 = !DILocation(line: 6393, column: 31, scope: !967)
!11817 = !DILocation(line: 6393, column: 17, scope: !967)
!11818 = !DILocation(line: 6393, column: 22, scope: !967)
!11819 = !DILocation(line: 6393, column: 41, scope: !967)
!11820 = !DILocation(line: 6393, column: 3, scope: !967)
!11821 = !DILocation(line: 6393, column: 9, scope: !967)
!11822 = !DILocation(line: 6393, column: 15, scope: !967)
!11823 = !DILocation(line: 6394, column: 7, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !967, file: !1, line: 6394, column: 7)
!11825 = !DILocation(line: 6394, column: 13, scope: !11824)
!11826 = !DILocation(line: 6394, column: 18, scope: !11824)
!11827 = !DILocation(line: 6394, column: 7, scope: !967)
!11828 = !DILocalVariable(name: "src", scope: !11829, file: !1, line: 6395, type: !210)
!11829 = distinct !DILexicalBlock(scope: !11824, file: !1, line: 6394, column: 37)
!11830 = !DILocation(line: 6395, column: 21, scope: !11829)
!11831 = !DILocation(line: 6396, column: 19, scope: !11829)
!11832 = !DILocation(line: 6396, column: 18, scope: !11829)
!11833 = !DILocation(line: 6396, column: 5, scope: !11829)
!11834 = !DILocation(line: 6396, column: 11, scope: !11829)
!11835 = !DILocation(line: 6396, column: 16, scope: !11829)
!11836 = !DILocation(line: 6397, column: 25, scope: !11829)
!11837 = !DILocation(line: 6397, column: 11, scope: !11829)
!11838 = !DILocation(line: 6397, column: 16, scope: !11829)
!11839 = !DILocation(line: 6397, column: 35, scope: !11829)
!11840 = !DILocation(line: 6397, column: 9, scope: !11829)
!11841 = !DILocation(line: 6398, column: 5, scope: !11829)
!11842 = !DILocation(line: 6399, column: 23, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !1, line: 6398, column: 14)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !1, line: 6398, column: 5)
!11845 = distinct !DILexicalBlock(scope: !11829, file: !1, line: 6398, column: 5)
!11846 = !DILocation(line: 6399, column: 22, scope: !11843)
!11847 = !DILocation(line: 6399, column: 10, scope: !11843)
!11848 = !DILocation(line: 6399, column: 17, scope: !11843)
!11849 = !DILocation(line: 6399, column: 20, scope: !11843)
!11850 = !DILocation(line: 6400, column: 13, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11843, file: !1, line: 6400, column: 11)
!11852 = !DILocation(line: 6400, column: 12, scope: !11851)
!11853 = !DILocation(line: 6400, column: 11, scope: !11843)
!11854 = !DILocation(line: 6401, column: 9, scope: !11851)
!11855 = !DILocation(line: 6402, column: 10, scope: !11843)
!11856 = !DILocation(line: 6398, column: 5, scope: !11857)
!11857 = !DILexicalBlockFile(scope: !11844, file: !1, discriminator: 1)
!11858 = !DILocation(line: 6404, column: 5, scope: !11829)
!11859 = !DILocation(line: 6404, column: 11, scope: !11829)
!11860 = !DILocation(line: 6404, column: 23, scope: !11829)
!11861 = !DILocation(line: 6405, column: 5, scope: !11829)
!11862 = !DILocation(line: 6405, column: 11, scope: !11829)
!11863 = !DILocation(line: 6405, column: 20, scope: !11829)
!11864 = !DILocation(line: 6406, column: 3, scope: !11829)
!11865 = !DILocalVariable(name: "i", scope: !11866, file: !1, line: 6408, type: !303)
!11866 = distinct !DILexicalBlock(scope: !11824, file: !1, line: 6407, column: 8)
!11867 = !DILocation(line: 6408, column: 18, scope: !11866)
!11868 = !DILocalVariable(name: "cn", scope: !11866, file: !1, line: 6409, type: !223)
!11869 = !DILocation(line: 6409, column: 9, scope: !11866)
!11870 = !DILocation(line: 6410, column: 39, scope: !11866)
!11871 = !DILocation(line: 6410, column: 25, scope: !11866)
!11872 = !DILocation(line: 6410, column: 30, scope: !11866)
!11873 = !DILocation(line: 6410, column: 49, scope: !11866)
!11874 = !DILocation(line: 6410, column: 5, scope: !11866)
!11875 = !DILocation(line: 6410, column: 11, scope: !11866)
!11876 = !DILocation(line: 6410, column: 23, scope: !11866)
!11877 = !DILocation(line: 6411, column: 23, scope: !11866)
!11878 = !DILocation(line: 6411, column: 22, scope: !11866)
!11879 = !DILocation(line: 6411, column: 5, scope: !11866)
!11880 = !DILocation(line: 6411, column: 11, scope: !11866)
!11881 = !DILocation(line: 6411, column: 20, scope: !11866)
!11882 = !DILocation(line: 6412, column: 17, scope: !11866)
!11883 = !DILocation(line: 6412, column: 23, scope: !11866)
!11884 = !DILocation(line: 6412, column: 6, scope: !11866)
!11885 = !DILocation(line: 6412, column: 14, scope: !11866)
!11886 = !DILocation(line: 6413, column: 12, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11866, file: !1, line: 6413, column: 5)
!11888 = !DILocation(line: 6413, column: 36, scope: !11887)
!11889 = !DILocation(line: 6413, column: 22, scope: !11887)
!11890 = !DILocation(line: 6413, column: 27, scope: !11887)
!11891 = !DILocation(line: 6413, column: 46, scope: !11887)
!11892 = !DILocation(line: 6413, column: 20, scope: !11887)
!11893 = !DILocation(line: 6413, column: 10, scope: !11887)
!11894 = !DILocation(line: 6414, column: 10, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11887, file: !1, line: 6413, column: 5)
!11896 = !DILocation(line: 6414, column: 14, scope: !11895)
!11897 = !DILocation(line: 6414, column: 20, scope: !11895)
!11898 = !DILocation(line: 6414, column: 12, scope: !11895)
!11899 = !DILocation(line: 6413, column: 5, scope: !11900)
!11900 = !DILexicalBlockFile(scope: !11887, file: !1, discriminator: 1)
!11901 = !DILocation(line: 6416, column: 18, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11895, file: !1, line: 6415, column: 47)
!11903 = !DILocation(line: 6416, column: 26, scope: !11902)
!11904 = !DILocation(line: 6416, column: 47, scope: !11902)
!11905 = !DILocation(line: 6416, column: 32, scope: !11902)
!11906 = !DILocation(line: 6416, column: 38, scope: !11902)
!11907 = !DILocation(line: 6416, column: 52, scope: !11902)
!11908 = !DILocation(line: 6416, column: 61, scope: !11902)
!11909 = !DILocation(line: 6416, column: 7, scope: !11902)
!11910 = !DILocation(line: 6417, column: 5, scope: !11902)
!11911 = !DILocation(line: 6415, column: 11, scope: !11895)
!11912 = !DILocation(line: 6415, column: 34, scope: !11895)
!11913 = !DILocation(line: 6415, column: 20, scope: !11895)
!11914 = !DILocation(line: 6415, column: 25, scope: !11895)
!11915 = !DILocation(line: 6415, column: 38, scope: !11895)
!11916 = !DILocation(line: 6415, column: 18, scope: !11895)
!11917 = !DILocation(line: 6413, column: 5, scope: !11918)
!11918 = !DILexicalBlockFile(scope: !11895, file: !1, discriminator: 2)
!11919 = !DILocation(line: 6418, column: 5, scope: !11866)
!11920 = !DILocation(line: 6418, column: 11, scope: !11866)
!11921 = !DILocation(line: 6418, column: 16, scope: !11866)
!11922 = !DILocation(line: 6420, column: 1, scope: !967)
!11923 = !DILocalVariable(name: "s", arg: 1, scope: !975, file: !1, line: 5305, type: !202)
!11924 = !DILocation(line: 5305, column: 26, scope: !975)
!11925 = !DILocalVariable(name: "p", scope: !975, file: !1, line: 5307, type: !202)
!11926 = !DILocation(line: 5307, column: 13, scope: !975)
!11927 = !DILocation(line: 5308, column: 3, scope: !975)
!11928 = !DILocation(line: 5309, column: 10, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !1, line: 5309, column: 9)
!11930 = distinct !DILexicalBlock(scope: !11931, file: !1, line: 5308, column: 16)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !1, line: 5308, column: 3)
!11932 = distinct !DILexicalBlock(scope: !975, file: !1, line: 5308, column: 3)
!11933 = !DILocation(line: 5309, column: 9, scope: !11929)
!11934 = !DILocation(line: 5309, column: 12, scope: !11929)
!11935 = !DILocation(line: 5309, column: 9, scope: !11930)
!11936 = !DILocation(line: 5310, column: 7, scope: !11929)
!11937 = !DILocation(line: 5311, column: 10, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11930, file: !1, line: 5311, column: 9)
!11939 = !DILocation(line: 5311, column: 9, scope: !11938)
!11940 = !DILocation(line: 5311, column: 12, scope: !11938)
!11941 = !DILocation(line: 5311, column: 9, scope: !11930)
!11942 = !DILocation(line: 5312, column: 7, scope: !11938)
!11943 = !DILocation(line: 5313, column: 3, scope: !11930)
!11944 = !DILocation(line: 5308, column: 12, scope: !11945)
!11945 = !DILexicalBlockFile(scope: !11931, file: !1, discriminator: 1)
!11946 = !DILocation(line: 5308, column: 3, scope: !11945)
!11947 = !DILocation(line: 5314, column: 7, scope: !975)
!11948 = !DILocation(line: 5314, column: 5, scope: !975)
!11949 = !DILocation(line: 5315, column: 3, scope: !975)
!11950 = !DILocation(line: 5316, column: 10, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !1, line: 5316, column: 9)
!11952 = distinct !DILexicalBlock(scope: !975, file: !1, line: 5315, column: 6)
!11953 = !DILocation(line: 5316, column: 9, scope: !11951)
!11954 = !DILocation(line: 5316, column: 12, scope: !11951)
!11955 = !DILocation(line: 5316, column: 9, scope: !11952)
!11956 = !DILocation(line: 5317, column: 9, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11951, file: !1, line: 5316, column: 20)
!11958 = !DILocation(line: 5317, column: 12, scope: !11957)
!11959 = !DILocation(line: 5318, column: 12, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11957, file: !1, line: 5318, column: 11)
!11961 = !DILocation(line: 5318, column: 11, scope: !11960)
!11962 = !DILocation(line: 5318, column: 16, scope: !11960)
!11963 = !DILocation(line: 5318, column: 11, scope: !11957)
!11964 = !DILocation(line: 5319, column: 10, scope: !11960)
!11965 = !DILocation(line: 5319, column: 9, scope: !11960)
!11966 = !DILocation(line: 5320, column: 5, scope: !11957)
!11967 = !DILocation(line: 5322, column: 16, scope: !11951)
!11968 = !DILocation(line: 5322, column: 14, scope: !11951)
!11969 = !DILocation(line: 5322, column: 9, scope: !11951)
!11970 = !DILocation(line: 5322, column: 12, scope: !11951)
!11971 = !DILocation(line: 5323, column: 3, scope: !11952)
!11972 = !DILocation(line: 5323, column: 13, scope: !11973)
!11973 = !DILexicalBlockFile(scope: !975, file: !1, discriminator: 1)
!11974 = !DILocation(line: 5323, column: 12, scope: !11973)
!11975 = !DILocation(line: 5323, column: 3, scope: !11973)
!11976 = !DILocation(line: 5324, column: 4, scope: !975)
!11977 = !DILocation(line: 5324, column: 6, scope: !975)
!11978 = !DILocation(line: 5325, column: 1, scope: !975)
!11979 = !DILocation(line: 5325, column: 1, scope: !11973)
!11980 = !DILocalVariable(name: "parser", arg: 1, scope: !981, file: !1, line: 720, type: !162)
!11981 = !DILocation(line: 720, column: 38, scope: !981)
!11982 = !DILocalVariable(name: "entropy", scope: !981, file: !1, line: 724, type: !11983)
!11983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!11984 = !DILocation(line: 724, column: 23, scope: !981)
!11985 = !DILocation(line: 725, column: 7, scope: !981)
!11986 = !DILocation(line: 725, column: 31, scope: !11987)
!11987 = !DILexicalBlockFile(scope: !981, file: !1, discriminator: 1)
!11988 = !DILocation(line: 725, column: 31, scope: !981)
!11989 = !DILocation(line: 725, column: 29, scope: !981)
!11990 = !DILocation(line: 725, column: 57, scope: !981)
!11991 = !DILocation(line: 725, column: 42, scope: !981)
!11992 = !DILocation(line: 725, column: 40, scope: !981)
!11993 = !DILocation(line: 731, column: 12, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !1, line: 730, column: 10)
!11995 = distinct !DILexicalBlock(scope: !981, file: !1, line: 728, column: 7)
!11996 = !DILocation(line: 731, column: 20, scope: !11994)
!11997 = !DILocation(line: 731, column: 5, scope: !11994)
!11998 = !DILocalVariable(name: "tv", scope: !984, file: !1, line: 708, type: !11999)
!11999 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !12000, line: 30, size: 128, align: 64, elements: !12001)
!12000 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!12001 = !{!12002, !12005}
!12002 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11999, file: !12000, line: 32, baseType: !12003, size: 64, align: 64)
!12003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !12004, line: 139, baseType: !199)
!12004 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmexpat")
!12005 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !11999, file: !12000, line: 33, baseType: !12006, size: 64, align: 64, offset: 64)
!12006 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !12004, line: 141, baseType: !199)
!12007 = !DILocation(line: 708, column: 18, scope: !984)
!12008 = !DILocalVariable(name: "gettimeofday_res", scope: !984, file: !1, line: 709, type: !223)
!12009 = !DILocation(line: 709, column: 7, scope: !984)
!12010 = !DILocation(line: 711, column: 22, scope: !984)
!12011 = !DILocation(line: 711, column: 20, scope: !984)
!12012 = !DILocation(line: 712, column: 3, scope: !984)
!12013 = !DILocation(line: 712, column: 3, scope: !12014)
!12014 = !DILexicalBlockFile(scope: !984, file: !1, discriminator: 1)
!12015 = !DILocation(line: 712, column: 3, scope: !12016)
!12016 = !DILexicalBlockFile(scope: !984, file: !1, discriminator: 2)
!12017 = !DILocation(line: 712, column: 3, scope: !12018)
!12018 = !DILexicalBlockFile(scope: !984, file: !1, discriminator: 3)
!12019 = !DILocation(line: 715, column: 13, scope: !984)
!12020 = !DILocation(line: 715, column: 3, scope: !984)
!12021 = !DILocalVariable(name: "parser", arg: 1, scope: !988, file: !1, line: 2177, type: !162)
!12022 = !DILocation(line: 2177, column: 41, scope: !988)
!12023 = !DILocalVariable(name: "start", arg: 2, scope: !988, file: !1, line: 2178, type: !192)
!12024 = !DILocation(line: 2178, column: 42, scope: !988)
!12025 = !DILocalVariable(name: "end", arg: 3, scope: !988, file: !1, line: 2179, type: !192)
!12026 = !DILocation(line: 2179, column: 42, scope: !988)
!12027 = !DILocalVariable(name: "endPtr", arg: 4, scope: !988, file: !1, line: 2180, type: !332)
!12028 = !DILocation(line: 2180, column: 43, scope: !988)
!12029 = !DILocalVariable(name: "next", scope: !988, file: !1, line: 2182, type: !192)
!12030 = !DILocation(line: 2182, column: 15, scope: !988)
!12031 = !DILocation(line: 2182, column: 22, scope: !988)
!12032 = !DILocalVariable(name: "tok", scope: !988, file: !1, line: 2183, type: !223)
!12033 = !DILocation(line: 2183, column: 7, scope: !988)
!12034 = !DILocation(line: 2183, column: 13, scope: !988)
!12035 = !DILocation(line: 2184, column: 11, scope: !988)
!12036 = !DILocation(line: 2184, column: 3, scope: !988)
!12037 = !DILocation(line: 2191, column: 9, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !1, line: 2191, column: 9)
!12039 = distinct !DILexicalBlock(scope: !988, file: !1, line: 2184, column: 16)
!12040 = !DILocation(line: 2191, column: 17, scope: !12038)
!12041 = !DILocation(line: 2191, column: 14, scope: !12038)
!12042 = !DILocation(line: 2191, column: 21, scope: !12038)
!12043 = !DILocation(line: 2191, column: 25, scope: !12044)
!12044 = !DILexicalBlockFile(scope: !12038, file: !1, discriminator: 1)
!12045 = !DILocation(line: 2191, column: 9, scope: !12044)
!12046 = !DILocation(line: 2192, column: 17, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12038, file: !1, line: 2191, column: 41)
!12048 = !DILocation(line: 2192, column: 8, scope: !12047)
!12049 = !DILocation(line: 2192, column: 15, scope: !12047)
!12050 = !DILocation(line: 2193, column: 7, scope: !12047)
!12051 = !DILocation(line: 2195, column: 13, scope: !12039)
!12052 = !DILocation(line: 2195, column: 11, scope: !12039)
!12053 = !DILocation(line: 2196, column: 5, scope: !12039)
!12054 = !DILocation(line: 2198, column: 10, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12039, file: !1, line: 2198, column: 9)
!12056 = !DILocation(line: 2198, column: 9, scope: !12039)
!12057 = !DILocation(line: 2199, column: 17, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12055, file: !1, line: 2198, column: 26)
!12059 = !DILocation(line: 2199, column: 8, scope: !12058)
!12060 = !DILocation(line: 2199, column: 15, scope: !12058)
!12061 = !DILocation(line: 2200, column: 7, scope: !12058)
!12062 = !DILocation(line: 2202, column: 16, scope: !12039)
!12063 = !DILocation(line: 2202, column: 5, scope: !12039)
!12064 = !DILocation(line: 2202, column: 14, scope: !12039)
!12065 = !DILocation(line: 2203, column: 5, scope: !12039)
!12066 = !DILocation(line: 2205, column: 10, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12039, file: !1, line: 2205, column: 9)
!12068 = !DILocation(line: 2205, column: 9, scope: !12039)
!12069 = !DILocation(line: 2206, column: 17, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12067, file: !1, line: 2205, column: 26)
!12071 = !DILocation(line: 2206, column: 8, scope: !12070)
!12072 = !DILocation(line: 2206, column: 15, scope: !12070)
!12073 = !DILocation(line: 2207, column: 7, scope: !12070)
!12074 = !DILocation(line: 2209, column: 16, scope: !12039)
!12075 = !DILocation(line: 2209, column: 5, scope: !12039)
!12076 = !DILocation(line: 2209, column: 14, scope: !12039)
!12077 = !DILocation(line: 2210, column: 5, scope: !12039)
!12078 = !DILocation(line: 2212, column: 3, scope: !988)
!12079 = !DILocation(line: 2212, column: 13, scope: !988)
!12080 = !DILocation(line: 2213, column: 39, scope: !988)
!12081 = !DILocation(line: 2213, column: 47, scope: !988)
!12082 = !DILocation(line: 2213, column: 54, scope: !988)
!12083 = !DILocation(line: 2213, column: 59, scope: !988)
!12084 = !DILocation(line: 2213, column: 10, scope: !988)
!12085 = !DILocation(line: 2213, column: 3, scope: !988)
!12086 = !DILocation(line: 2214, column: 1, scope: !988)
!12087 = !DILocalVariable(name: "parser", arg: 1, scope: !989, file: !1, line: 2217, type: !162)
!12088 = !DILocation(line: 2217, column: 41, scope: !989)
!12089 = !DILocalVariable(name: "start", arg: 2, scope: !989, file: !1, line: 2218, type: !192)
!12090 = !DILocation(line: 2218, column: 42, scope: !989)
!12091 = !DILocalVariable(name: "end", arg: 3, scope: !989, file: !1, line: 2219, type: !192)
!12092 = !DILocation(line: 2219, column: 42, scope: !989)
!12093 = !DILocalVariable(name: "endPtr", arg: 4, scope: !989, file: !1, line: 2220, type: !332)
!12094 = !DILocation(line: 2220, column: 43, scope: !989)
!12095 = !DILocalVariable(name: "tok", scope: !989, file: !1, line: 2222, type: !223)
!12096 = !DILocation(line: 2222, column: 7, scope: !989)
!12097 = !DILocalVariable(name: "next", scope: !989, file: !1, line: 2223, type: !192)
!12098 = !DILocation(line: 2223, column: 15, scope: !989)
!12099 = !DILocation(line: 2223, column: 22, scope: !989)
!12100 = !DILocation(line: 2224, column: 14, scope: !989)
!12101 = !DILocation(line: 2224, column: 3, scope: !989)
!12102 = !DILocation(line: 2224, column: 12, scope: !989)
!12103 = !DILocation(line: 2225, column: 9, scope: !989)
!12104 = !DILocation(line: 2225, column: 7, scope: !989)
!12105 = !DILocation(line: 2226, column: 17, scope: !989)
!12106 = !DILocation(line: 2226, column: 3, scope: !989)
!12107 = !DILocation(line: 2226, column: 15, scope: !989)
!12108 = !DILocation(line: 2228, column: 11, scope: !989)
!12109 = !DILocation(line: 2228, column: 3, scope: !989)
!12110 = !DILocalVariable(name: "result", scope: !12111, file: !1, line: 2231, type: !24)
!12111 = distinct !DILexicalBlock(scope: !12112, file: !1, line: 2230, column: 5)
!12112 = distinct !DILexicalBlock(scope: !989, file: !1, line: 2228, column: 16)
!12113 = !DILocation(line: 2231, column: 22, scope: !12111)
!12114 = !DILocation(line: 2232, column: 31, scope: !12111)
!12115 = !DILocation(line: 2232, column: 42, scope: !12111)
!12116 = !DILocation(line: 2232, column: 49, scope: !12111)
!12117 = !DILocation(line: 2232, column: 16, scope: !12111)
!12118 = !DILocation(line: 2232, column: 14, scope: !12111)
!12119 = !DILocation(line: 2233, column: 11, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12111, file: !1, line: 2233, column: 11)
!12121 = !DILocation(line: 2233, column: 18, scope: !12120)
!12122 = !DILocation(line: 2233, column: 11, scope: !12111)
!12123 = !DILocation(line: 2234, column: 16, scope: !12120)
!12124 = !DILocation(line: 2234, column: 9, scope: !12120)
!12125 = !DILocation(line: 2235, column: 15, scope: !12111)
!12126 = !DILocation(line: 2235, column: 7, scope: !12111)
!12127 = !DILocation(line: 2237, column: 19, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12111, file: !1, line: 2235, column: 27)
!12129 = !DILocation(line: 2237, column: 10, scope: !12128)
!12130 = !DILocation(line: 2237, column: 17, scope: !12128)
!12131 = !DILocation(line: 2238, column: 9, scope: !12128)
!12132 = !DILocation(line: 2240, column: 9, scope: !12128)
!12133 = !DILocation(line: 2242, column: 17, scope: !12128)
!12134 = !DILocation(line: 2242, column: 15, scope: !12128)
!12135 = !DILocation(line: 2243, column: 7, scope: !12128)
!12136 = !DILocation(line: 2245, column: 5, scope: !12112)
!12137 = !DILocation(line: 2247, column: 10, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12112, file: !1, line: 2247, column: 9)
!12139 = !DILocation(line: 2247, column: 9, scope: !12112)
!12140 = !DILocation(line: 2248, column: 17, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12138, file: !1, line: 2247, column: 26)
!12142 = !DILocation(line: 2248, column: 8, scope: !12141)
!12143 = !DILocation(line: 2248, column: 15, scope: !12141)
!12144 = !DILocation(line: 2249, column: 7, scope: !12141)
!12145 = !DILocation(line: 2251, column: 5, scope: !12112)
!12146 = !DILocation(line: 2253, column: 10, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12112, file: !1, line: 2253, column: 9)
!12148 = !DILocation(line: 2253, column: 9, scope: !12112)
!12149 = !DILocation(line: 2254, column: 17, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12147, file: !1, line: 2253, column: 26)
!12151 = !DILocation(line: 2254, column: 8, scope: !12150)
!12152 = !DILocation(line: 2254, column: 15, scope: !12150)
!12153 = !DILocation(line: 2255, column: 7, scope: !12150)
!12154 = !DILocation(line: 2257, column: 5, scope: !12112)
!12155 = !DILocation(line: 2259, column: 3, scope: !989)
!12156 = !DILocation(line: 2259, column: 13, scope: !989)
!12157 = !DILocation(line: 2260, column: 3, scope: !989)
!12158 = !DILocation(line: 2260, column: 12, scope: !989)
!12159 = !DILocation(line: 2261, column: 41, scope: !989)
!12160 = !DILocation(line: 2261, column: 49, scope: !989)
!12161 = !DILocation(line: 2261, column: 56, scope: !989)
!12162 = !DILocation(line: 2261, column: 61, scope: !989)
!12163 = !DILocation(line: 2261, column: 10, scope: !989)
!12164 = !DILocation(line: 2261, column: 3, scope: !989)
!12165 = !DILocation(line: 2262, column: 1, scope: !989)
!12166 = !DILocalVariable(name: "table", arg: 1, scope: !998, file: !1, line: 6103, type: !859)
!12167 = !DILocation(line: 6103, column: 28, scope: !998)
!12168 = !DILocalVariable(name: "i", scope: !998, file: !1, line: 6105, type: !180)
!12169 = !DILocation(line: 6105, column: 10, scope: !998)
!12170 = !DILocation(line: 6106, column: 10, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !998, file: !1, line: 6106, column: 3)
!12172 = !DILocation(line: 6106, column: 8, scope: !12171)
!12173 = !DILocation(line: 6106, column: 15, scope: !12174)
!12174 = !DILexicalBlockFile(scope: !12175, file: !1, discriminator: 1)
!12175 = distinct !DILexicalBlock(scope: !12171, file: !1, line: 6106, column: 3)
!12176 = !DILocation(line: 6106, column: 19, scope: !12174)
!12177 = !DILocation(line: 6106, column: 26, scope: !12174)
!12178 = !DILocation(line: 6106, column: 17, scope: !12174)
!12179 = !DILocation(line: 6106, column: 3, scope: !12174)
!12180 = !DILocation(line: 6107, column: 5, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12175, file: !1, line: 6106, column: 37)
!12182 = !DILocation(line: 6107, column: 12, scope: !12181)
!12183 = !DILocation(line: 6107, column: 17, scope: !12181)
!12184 = !DILocation(line: 6107, column: 35, scope: !12181)
!12185 = !DILocation(line: 6107, column: 26, scope: !12181)
!12186 = !DILocation(line: 6107, column: 33, scope: !12181)
!12187 = !DILocation(line: 6108, column: 14, scope: !12181)
!12188 = !DILocation(line: 6108, column: 5, scope: !12181)
!12189 = !DILocation(line: 6108, column: 12, scope: !12181)
!12190 = !DILocation(line: 6108, column: 17, scope: !12181)
!12191 = !DILocation(line: 6109, column: 3, scope: !12181)
!12192 = !DILocation(line: 6106, column: 33, scope: !12193)
!12193 = !DILexicalBlockFile(scope: !12175, file: !1, discriminator: 2)
!12194 = !DILocation(line: 6106, column: 3, scope: !12193)
!12195 = !DILocation(line: 6110, column: 3, scope: !998)
!12196 = !DILocation(line: 6110, column: 10, scope: !998)
!12197 = !DILocation(line: 6110, column: 15, scope: !998)
!12198 = !DILocation(line: 6111, column: 1, scope: !998)
!12199 = !DILocalVariable(name: "table", arg: 1, scope: !1004, file: !1, line: 6114, type: !859)
!12200 = !DILocation(line: 6114, column: 30, scope: !1004)
!12201 = !DILocalVariable(name: "i", scope: !1004, file: !1, line: 6116, type: !180)
!12202 = !DILocation(line: 6116, column: 10, scope: !1004)
!12203 = !DILocation(line: 6117, column: 10, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !1004, file: !1, line: 6117, column: 3)
!12205 = !DILocation(line: 6117, column: 8, scope: !12204)
!12206 = !DILocation(line: 6117, column: 15, scope: !12207)
!12207 = !DILexicalBlockFile(scope: !12208, file: !1, discriminator: 1)
!12208 = distinct !DILexicalBlock(scope: !12204, file: !1, line: 6117, column: 3)
!12209 = !DILocation(line: 6117, column: 19, scope: !12207)
!12210 = !DILocation(line: 6117, column: 26, scope: !12207)
!12211 = !DILocation(line: 6117, column: 17, scope: !12207)
!12212 = !DILocation(line: 6117, column: 3, scope: !12207)
!12213 = !DILocation(line: 6118, column: 5, scope: !12208)
!12214 = !DILocation(line: 6118, column: 12, scope: !12208)
!12215 = !DILocation(line: 6118, column: 17, scope: !12208)
!12216 = !DILocation(line: 6118, column: 35, scope: !12208)
!12217 = !DILocation(line: 6118, column: 26, scope: !12208)
!12218 = !DILocation(line: 6118, column: 33, scope: !12208)
!12219 = !DILocation(line: 6117, column: 33, scope: !12220)
!12220 = !DILexicalBlockFile(scope: !12208, file: !1, discriminator: 2)
!12221 = !DILocation(line: 6117, column: 3, scope: !12220)
!12222 = !DILocation(line: 6119, column: 3, scope: !1004)
!12223 = !DILocation(line: 6119, column: 10, scope: !1004)
!12224 = !DILocation(line: 6119, column: 15, scope: !1004)
!12225 = !DILocation(line: 6119, column: 24, scope: !1004)
!12226 = !DILocation(line: 6119, column: 31, scope: !1004)
!12227 = !DILocation(line: 6120, column: 1, scope: !1004)
!12228 = !DILocalVariable(name: "oldParser", arg: 1, scope: !1010, file: !1, line: 5937, type: !162)
!12229 = !DILocation(line: 5937, column: 28, scope: !1010)
!12230 = !DILocalVariable(name: "newTable", arg: 2, scope: !1010, file: !1, line: 5938, type: !859)
!12231 = !DILocation(line: 5938, column: 29, scope: !1010)
!12232 = !DILocalVariable(name: "newPool", arg: 3, scope: !1010, file: !1, line: 5939, type: !863)
!12233 = !DILocation(line: 5939, column: 30, scope: !1010)
!12234 = !DILocalVariable(name: "oldTable", arg: 4, scope: !1010, file: !1, line: 5940, type: !906)
!12235 = !DILocation(line: 5940, column: 35, scope: !1010)
!12236 = !DILocalVariable(name: "iter", scope: !1010, file: !1, line: 5942, type: !901)
!12237 = !DILocation(line: 5942, column: 19, scope: !1010)
!12238 = !DILocalVariable(name: "cachedOldBase", scope: !1010, file: !1, line: 5943, type: !210)
!12239 = !DILocation(line: 5943, column: 19, scope: !1010)
!12240 = !DILocalVariable(name: "cachedNewBase", scope: !1010, file: !1, line: 5944, type: !210)
!12241 = !DILocation(line: 5944, column: 19, scope: !1010)
!12242 = !DILocation(line: 5946, column: 28, scope: !1010)
!12243 = !DILocation(line: 5946, column: 3, scope: !1010)
!12244 = !DILocation(line: 5948, column: 3, scope: !1010)
!12245 = !DILocalVariable(name: "newE", scope: !12246, file: !1, line: 5949, type: !443)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !1, line: 5948, column: 12)
!12247 = distinct !DILexicalBlock(scope: !12248, file: !1, line: 5948, column: 3)
!12248 = distinct !DILexicalBlock(scope: !1010, file: !1, line: 5948, column: 3)
!12249 = !DILocation(line: 5949, column: 13, scope: !12246)
!12250 = !DILocalVariable(name: "name", scope: !12246, file: !1, line: 5950, type: !210)
!12251 = !DILocation(line: 5950, column: 21, scope: !12246)
!12252 = !DILocalVariable(name: "oldE", scope: !12246, file: !1, line: 5951, type: !12253)
!12253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12254, size: 64, align: 64)
!12254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!12255 = !DILocation(line: 5951, column: 19, scope: !12246)
!12256 = !DILocation(line: 5951, column: 36, scope: !12246)
!12257 = !DILocation(line: 5951, column: 26, scope: !12246)
!12258 = !DILocation(line: 5952, column: 10, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12246, file: !1, line: 5952, column: 9)
!12260 = !DILocation(line: 5952, column: 9, scope: !12246)
!12261 = !DILocation(line: 5953, column: 7, scope: !12259)
!12262 = !DILocation(line: 5954, column: 27, scope: !12246)
!12263 = !DILocation(line: 5954, column: 36, scope: !12246)
!12264 = !DILocation(line: 5954, column: 42, scope: !12246)
!12265 = !DILocation(line: 5954, column: 12, scope: !12246)
!12266 = !DILocation(line: 5954, column: 10, scope: !12246)
!12267 = !DILocation(line: 5955, column: 10, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12246, file: !1, line: 5955, column: 9)
!12269 = !DILocation(line: 5955, column: 9, scope: !12246)
!12270 = !DILocation(line: 5956, column: 7, scope: !12268)
!12271 = !DILocation(line: 5957, column: 29, scope: !12246)
!12272 = !DILocation(line: 5957, column: 40, scope: !12246)
!12273 = !DILocation(line: 5957, column: 50, scope: !12246)
!12274 = !DILocation(line: 5957, column: 22, scope: !12246)
!12275 = !DILocation(line: 5957, column: 12, scope: !12246)
!12276 = !DILocation(line: 5957, column: 10, scope: !12246)
!12277 = !DILocation(line: 5958, column: 10, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12246, file: !1, line: 5958, column: 9)
!12279 = !DILocation(line: 5958, column: 9, scope: !12246)
!12280 = !DILocation(line: 5959, column: 7, scope: !12278)
!12281 = !DILocation(line: 5960, column: 9, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12246, file: !1, line: 5960, column: 9)
!12283 = !DILocation(line: 5960, column: 15, scope: !12282)
!12284 = !DILocation(line: 5960, column: 9, scope: !12246)
!12285 = !DILocalVariable(name: "tem", scope: !12286, file: !1, line: 5961, type: !210)
!12286 = distinct !DILexicalBlock(scope: !12282, file: !1, line: 5960, column: 25)
!12287 = !DILocation(line: 5961, column: 23, scope: !12286)
!12288 = !DILocation(line: 5961, column: 44, scope: !12286)
!12289 = !DILocation(line: 5961, column: 53, scope: !12286)
!12290 = !DILocation(line: 5961, column: 59, scope: !12286)
!12291 = !DILocation(line: 5961, column: 29, scope: !12286)
!12292 = !DILocation(line: 5962, column: 12, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12286, file: !1, line: 5962, column: 11)
!12294 = !DILocation(line: 5962, column: 11, scope: !12286)
!12295 = !DILocation(line: 5963, column: 9, scope: !12293)
!12296 = !DILocation(line: 5964, column: 24, scope: !12286)
!12297 = !DILocation(line: 5964, column: 7, scope: !12286)
!12298 = !DILocation(line: 5964, column: 13, scope: !12286)
!12299 = !DILocation(line: 5964, column: 22, scope: !12286)
!12300 = !DILocation(line: 5965, column: 11, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12286, file: !1, line: 5965, column: 11)
!12302 = !DILocation(line: 5965, column: 17, scope: !12301)
!12303 = !DILocation(line: 5965, column: 11, scope: !12286)
!12304 = !DILocation(line: 5966, column: 13, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !1, line: 5966, column: 13)
!12306 = distinct !DILexicalBlock(scope: !12301, file: !1, line: 5965, column: 23)
!12307 = !DILocation(line: 5966, column: 19, scope: !12305)
!12308 = !DILocation(line: 5966, column: 27, scope: !12305)
!12309 = !DILocation(line: 5966, column: 24, scope: !12305)
!12310 = !DILocation(line: 5966, column: 13, scope: !12306)
!12311 = !DILocation(line: 5967, column: 24, scope: !12305)
!12312 = !DILocation(line: 5967, column: 11, scope: !12305)
!12313 = !DILocation(line: 5967, column: 17, scope: !12305)
!12314 = !DILocation(line: 5967, column: 22, scope: !12305)
!12315 = !DILocation(line: 5969, column: 27, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12305, file: !1, line: 5968, column: 14)
!12317 = !DILocation(line: 5969, column: 33, scope: !12316)
!12318 = !DILocation(line: 5969, column: 25, scope: !12316)
!12319 = !DILocation(line: 5970, column: 32, scope: !12316)
!12320 = !DILocation(line: 5970, column: 41, scope: !12316)
!12321 = !DILocation(line: 5970, column: 17, scope: !12316)
!12322 = !DILocation(line: 5970, column: 15, scope: !12316)
!12323 = !DILocation(line: 5971, column: 16, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12316, file: !1, line: 5971, column: 15)
!12325 = !DILocation(line: 5971, column: 15, scope: !12316)
!12326 = !DILocation(line: 5972, column: 13, scope: !12324)
!12327 = !DILocation(line: 5973, column: 40, scope: !12316)
!12328 = !DILocation(line: 5973, column: 27, scope: !12316)
!12329 = !DILocation(line: 5973, column: 33, scope: !12316)
!12330 = !DILocation(line: 5973, column: 38, scope: !12316)
!12331 = !DILocation(line: 5973, column: 25, scope: !12316)
!12332 = !DILocation(line: 5975, column: 7, scope: !12306)
!12333 = !DILocation(line: 5976, column: 11, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12286, file: !1, line: 5976, column: 11)
!12335 = !DILocation(line: 5976, column: 17, scope: !12334)
!12336 = !DILocation(line: 5976, column: 11, scope: !12286)
!12337 = !DILocation(line: 5977, column: 30, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12334, file: !1, line: 5976, column: 27)
!12339 = !DILocation(line: 5977, column: 39, scope: !12338)
!12340 = !DILocation(line: 5977, column: 45, scope: !12338)
!12341 = !DILocation(line: 5977, column: 15, scope: !12338)
!12342 = !DILocation(line: 5977, column: 13, scope: !12338)
!12343 = !DILocation(line: 5978, column: 14, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12338, file: !1, line: 5978, column: 13)
!12345 = !DILocation(line: 5978, column: 13, scope: !12338)
!12346 = !DILocation(line: 5979, column: 11, scope: !12344)
!12347 = !DILocation(line: 5980, column: 26, scope: !12338)
!12348 = !DILocation(line: 5980, column: 9, scope: !12338)
!12349 = !DILocation(line: 5980, column: 15, scope: !12338)
!12350 = !DILocation(line: 5980, column: 24, scope: !12338)
!12351 = !DILocation(line: 5981, column: 7, scope: !12338)
!12352 = !DILocation(line: 5982, column: 5, scope: !12286)
!12353 = !DILocalVariable(name: "tem", scope: !12354, file: !1, line: 5984, type: !210)
!12354 = distinct !DILexicalBlock(scope: !12282, file: !1, line: 5983, column: 10)
!12355 = !DILocation(line: 5984, column: 23, scope: !12354)
!12356 = !DILocation(line: 5984, column: 45, scope: !12354)
!12357 = !DILocation(line: 5984, column: 54, scope: !12354)
!12358 = !DILocation(line: 5984, column: 60, scope: !12354)
!12359 = !DILocation(line: 5985, column: 45, scope: !12354)
!12360 = !DILocation(line: 5985, column: 51, scope: !12354)
!12361 = !DILocation(line: 5984, column: 29, scope: !12354)
!12362 = !DILocation(line: 5986, column: 12, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12354, file: !1, line: 5986, column: 11)
!12364 = !DILocation(line: 5986, column: 11, scope: !12354)
!12365 = !DILocation(line: 5987, column: 9, scope: !12363)
!12366 = !DILocation(line: 5988, column: 23, scope: !12354)
!12367 = !DILocation(line: 5988, column: 7, scope: !12354)
!12368 = !DILocation(line: 5988, column: 13, scope: !12354)
!12369 = !DILocation(line: 5988, column: 21, scope: !12354)
!12370 = !DILocation(line: 5989, column: 23, scope: !12354)
!12371 = !DILocation(line: 5989, column: 29, scope: !12354)
!12372 = !DILocation(line: 5989, column: 7, scope: !12354)
!12373 = !DILocation(line: 5989, column: 13, scope: !12354)
!12374 = !DILocation(line: 5989, column: 21, scope: !12354)
!12375 = !DILocation(line: 5991, column: 9, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12246, file: !1, line: 5991, column: 9)
!12377 = !DILocation(line: 5991, column: 15, scope: !12376)
!12378 = !DILocation(line: 5991, column: 9, scope: !12246)
!12379 = !DILocalVariable(name: "tem", scope: !12380, file: !1, line: 5992, type: !210)
!12380 = distinct !DILexicalBlock(scope: !12376, file: !1, line: 5991, column: 25)
!12381 = !DILocation(line: 5992, column: 23, scope: !12380)
!12382 = !DILocation(line: 5992, column: 44, scope: !12380)
!12383 = !DILocation(line: 5992, column: 53, scope: !12380)
!12384 = !DILocation(line: 5992, column: 59, scope: !12380)
!12385 = !DILocation(line: 5992, column: 29, scope: !12380)
!12386 = !DILocation(line: 5993, column: 12, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12380, file: !1, line: 5993, column: 11)
!12388 = !DILocation(line: 5993, column: 11, scope: !12380)
!12389 = !DILocation(line: 5994, column: 9, scope: !12387)
!12390 = !DILocation(line: 5995, column: 24, scope: !12380)
!12391 = !DILocation(line: 5995, column: 7, scope: !12380)
!12392 = !DILocation(line: 5995, column: 13, scope: !12380)
!12393 = !DILocation(line: 5995, column: 22, scope: !12380)
!12394 = !DILocation(line: 5996, column: 5, scope: !12380)
!12395 = !DILocation(line: 5997, column: 22, scope: !12246)
!12396 = !DILocation(line: 5997, column: 28, scope: !12246)
!12397 = !DILocation(line: 5997, column: 5, scope: !12246)
!12398 = !DILocation(line: 5997, column: 11, scope: !12246)
!12399 = !DILocation(line: 5997, column: 20, scope: !12246)
!12400 = !DILocation(line: 5998, column: 25, scope: !12246)
!12401 = !DILocation(line: 5998, column: 31, scope: !12246)
!12402 = !DILocation(line: 5998, column: 5, scope: !12246)
!12403 = !DILocation(line: 5998, column: 11, scope: !12246)
!12404 = !DILocation(line: 5998, column: 23, scope: !12246)
!12405 = !DILocation(line: 5948, column: 3, scope: !12406)
!12406 = !DILexicalBlockFile(scope: !12247, file: !1, discriminator: 1)
!12407 = !DILocation(line: 6000, column: 3, scope: !1010)
!12408 = !DILocation(line: 6001, column: 1, scope: !1010)
!12409 = !DILocalVariable(name: "pool", arg: 1, scope: !1013, file: !1, line: 6227, type: !863)
!12410 = !DILocation(line: 6227, column: 30, scope: !1013)
!12411 = !DILocalVariable(name: "s", arg: 2, scope: !1013, file: !1, line: 6227, type: !210)
!12412 = !DILocation(line: 6227, column: 52, scope: !1013)
!12413 = !DILocalVariable(name: "n", arg: 3, scope: !1013, file: !1, line: 6227, type: !223)
!12414 = !DILocation(line: 6227, column: 59, scope: !1013)
!12415 = !DILocation(line: 6229, column: 8, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !1013, file: !1, line: 6229, column: 7)
!12417 = !DILocation(line: 6229, column: 14, scope: !12416)
!12418 = !DILocation(line: 6229, column: 18, scope: !12416)
!12419 = !DILocation(line: 6229, column: 31, scope: !12420)
!12420 = !DILexicalBlockFile(scope: !12416, file: !1, discriminator: 1)
!12421 = !DILocation(line: 6229, column: 22, scope: !12420)
!12422 = !DILocation(line: 6229, column: 7, scope: !12420)
!12423 = !DILocation(line: 6230, column: 5, scope: !12416)
!12424 = !DILocation(line: 6231, column: 3, scope: !1013)
!12425 = !DILocation(line: 6231, column: 10, scope: !12426)
!12426 = !DILexicalBlockFile(scope: !12427, file: !1, discriminator: 1)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !1, line: 6231, column: 3)
!12428 = distinct !DILexicalBlock(scope: !1013, file: !1, line: 6231, column: 3)
!12429 = !DILocation(line: 6231, column: 12, scope: !12426)
!12430 = !DILocation(line: 6231, column: 3, scope: !12426)
!12431 = !DILocation(line: 6232, column: 10, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !1, line: 6232, column: 9)
!12433 = distinct !DILexicalBlock(scope: !12427, file: !1, line: 6231, column: 27)
!12434 = !DILocation(line: 6232, column: 10, scope: !12435)
!12435 = !DILexicalBlockFile(scope: !12432, file: !1, discriminator: 1)
!12436 = !DILocation(line: 6232, column: 9, scope: !12435)
!12437 = !DILocation(line: 6232, column: 10, scope: !12438)
!12438 = !DILexicalBlockFile(scope: !12432, file: !1, discriminator: 2)
!12439 = !DILocation(line: 6232, column: 10, scope: !12440)
!12440 = !DILexicalBlockFile(scope: !12432, file: !1, discriminator: 3)
!12441 = !DILocation(line: 6232, column: 9, scope: !12440)
!12442 = !DILocation(line: 6233, column: 7, scope: !12432)
!12443 = !DILocation(line: 6234, column: 3, scope: !12433)
!12444 = !DILocation(line: 6231, column: 17, scope: !12445)
!12445 = !DILexicalBlockFile(scope: !12427, file: !1, discriminator: 2)
!12446 = !DILocation(line: 6231, column: 23, scope: !12445)
!12447 = !DILocation(line: 6231, column: 3, scope: !12445)
!12448 = !DILocation(line: 6235, column: 7, scope: !1013)
!12449 = !DILocation(line: 6235, column: 13, scope: !1013)
!12450 = !DILocation(line: 6235, column: 5, scope: !1013)
!12451 = !DILocation(line: 6236, column: 3, scope: !1013)
!12452 = !DILocation(line: 6237, column: 10, scope: !1013)
!12453 = !DILocation(line: 6237, column: 3, scope: !1013)
!12454 = !DILocation(line: 6238, column: 1, scope: !1013)

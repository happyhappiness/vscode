<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1929_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">DCIGETTEXT<pos:position pos:line="2" pos:column="11"/></name> <argument_list pos:line="2" pos:column="12">(<argument><expr><name pos:line="2" pos:column="13">domainname<pos:position pos:line="2" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="25">msgid1<pos:position pos:line="2" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="33">msgid2<pos:position pos:line="2" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="41">plural<pos:position pos:line="2" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="49">n<pos:position pos:line="2" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="52">category<pos:position pos:line="2" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2" pos:column="61"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">domainname<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">msgid1<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="5" pos:column="6">const<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">msgid2<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="6" pos:column="6">int<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">plural<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="7" pos:column="6">unsigned<pos:position pos:line="7" pos:column="14"/></name> <name pos:line="7" pos:column="15">long<pos:position pos:line="7" pos:column="19"/></name> <name pos:line="7" pos:column="20">int<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">n<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="8" pos:column="6">int<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">category<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
<block pos:line="9" pos:column="1">{
<cpp:ifndef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifndef<pos:position pos:line="10" pos:column="8"/></cpp:directive> <name pos:line="10" pos:column="9">HAVE_ALLOCA<pos:position pos:line="10" pos:column="20"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">block_list<pos:position pos:line="11" pos:column="20"/></name></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name pos:line="11" pos:column="22">block_list<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><name pos:line="11" pos:column="35">NULL<pos:position pos:line="11" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">loaded_l10nfile<pos:position pos:line="13" pos:column="25"/></name></name> <modifier pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></modifier></type><name pos:line="13" pos:column="27">domain<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">binding<pos:position pos:line="14" pos:column="17"/></name></name> <modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">binding<pos:position pos:line="14" pos:column="26"/></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">categoryname<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="16" pos:column="3">const<pos:position pos:line="16" pos:column="8"/></specifier> <name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">categoryvalue<pos:position pos:line="16" pos:column="28"/></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name> <modifier pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></modifier></type><name pos:line="17" pos:column="9">dirname<pos:position pos:line="17" pos:column="16"/></name></decl>, <modifier pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="19">xdomainname<pos:position pos:line="17" pos:column="30"/></name></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name> <modifier pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></modifier></type><name pos:line="18" pos:column="9">single_locale<pos:position pos:line="18" pos:column="22"/></name></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name> <modifier pos:line="19" pos:column="8">*<pos:position pos:line="19" pos:column="9"/></modifier></type><name pos:line="19" pos:column="9">retval<pos:position pos:line="19" pos:column="15"/></name></decl>;<pos:position pos:line="19" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">size_t<pos:position pos:line="20" pos:column="9"/></name></type> <name pos:line="20" pos:column="10">retlen<pos:position pos:line="20" pos:column="16"/></name></decl>;<pos:position pos:line="20" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">saved_errno<pos:position pos:line="21" pos:column="18"/></name></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">defined<pos:position pos:line="22" pos:column="12"/></name> <name pos:line="22" pos:column="13">HAVE_TSEARCH<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">||<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">defined<pos:position pos:line="22" pos:column="36"/></name> <name pos:line="22" pos:column="37">_LIBC<pos:position pos:line="22" pos:column="42"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="23" pos:column="3">struct<pos:position pos:line="23" pos:column="9"/></name> <name pos:line="23" pos:column="10">known_translation_t<pos:position pos:line="23" pos:column="29"/></name></name> <modifier pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></modifier></type><name pos:line="23" pos:column="31">search<pos:position pos:line="23" pos:column="37"/></name></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="24" pos:column="3">struct<pos:position pos:line="24" pos:column="9"/></name> <name pos:line="24" pos:column="10">known_translation_t<pos:position pos:line="24" pos:column="29"/></name></name> <modifier pos:line="24" pos:column="30">*<pos:position pos:line="24" pos:column="31"/></modifier><modifier pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></modifier></type><name pos:line="24" pos:column="32">foundp<pos:position pos:line="24" pos:column="38"/></name> <init pos:line="24" pos:column="39">= <expr><name pos:line="24" pos:column="41">NULL<pos:position pos:line="24" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">size_t<pos:position pos:line="25" pos:column="9"/></name></type> <name pos:line="25" pos:column="10">msgid_len<pos:position pos:line="25" pos:column="19"/></name></decl>;<pos:position pos:line="25" pos:column="20"/></decl_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">size_t<pos:position pos:line="27" pos:column="9"/></name></type> <name pos:line="27" pos:column="10">domainname_len<pos:position pos:line="27" pos:column="24"/></name></decl>;<pos:position pos:line="27" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* If no real MSGID is given return NULL.  */</comment>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">msgid1<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">==<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">NULL<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
    <block type="pseudo"><return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">NULL<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">__libc_rwlock_rdlock<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">_nl_state_lock<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* If DOMAINNAME is NULL, we are interested in the default domain.  If
     CATEGORY is not LC_MESSAGES this might not make much sense but the
     definition left this undefined.  */</comment>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">domainname<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">==<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">NULL<pos:position pos:line="38" pos:column="25"/></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition><then pos:line="38" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="5">domainname<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">_nl_current_default_domain<pos:position pos:line="39" pos:column="44"/></name></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt></block></then></if>

<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if<pos:position pos:line="41" pos:column="4"/></cpp:directive> <expr><name pos:line="41" pos:column="5">defined<pos:position pos:line="41" pos:column="12"/></name> <name pos:line="41" pos:column="13">HAVE_TSEARCH<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">||<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">defined<pos:position pos:line="41" pos:column="36"/></name> <name pos:line="41" pos:column="37">_LIBC<pos:position pos:line="41" pos:column="42"/></name></expr></cpp:if>
  <expr_stmt><expr><name pos:line="42" pos:column="3">msgid_len<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">strlen<pos:position pos:line="42" pos:column="21"/></name> <argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">msgid1<pos:position pos:line="42" pos:column="29"/></name></expr></argument>)<pos:position pos:line="42" pos:column="30"/></argument_list></call> <operator pos:line="42" pos:column="31">+<pos:position pos:line="42" pos:column="32"/></operator> <literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="44" pos:column="3">/* Try to find the translation among those which we found at
     some time.  */</comment>
  <expr_stmt><expr><name pos:line="46" pos:column="3">search<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator>struct <name pos:line="46" pos:column="20">known_translation_t<pos:position pos:line="46" pos:column="39"/></name> <operator pos:line="46" pos:column="40">*<pos:position pos:line="46" pos:column="41"/></operator><operator pos:line="46" pos:column="41">)<pos:position pos:line="46" pos:column="42"/></operator>
	   <call><name pos:line="47" pos:column="12">alloca<pos:position pos:line="47" pos:column="18"/></name> <argument_list pos:line="47" pos:column="19">(<argument><expr><call><name pos:line="47" pos:column="20">offsetof<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr pos:line="47" pos:column="30">struct <name pos:line="47" pos:column="37">known_translation_t<pos:position pos:line="47" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">msgid<pos:position pos:line="47" pos:column="63"/></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call> <operator pos:line="47" pos:column="65">+<pos:position pos:line="47" pos:column="66"/></operator> <name pos:line="47" pos:column="67">msgid_len<pos:position pos:line="47" pos:column="76"/></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">memcpy<pos:position pos:line="48" pos:column="9"/></name> <argument_list pos:line="48" pos:column="10">(<argument><expr><name><name pos:line="48" pos:column="11">search<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">msgid<pos:position pos:line="48" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="26">msgid1<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">msgid_len<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="49" pos:column="3">search<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">domainname<pos:position pos:line="49" pos:column="21"/></name></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <operator pos:line="49" pos:column="24">(<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="25">char<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">*<pos:position pos:line="49" pos:column="31"/></operator><operator pos:line="49" pos:column="31">)<pos:position pos:line="49" pos:column="32"/></operator> <name pos:line="49" pos:column="33">domainname<pos:position pos:line="49" pos:column="43"/></name></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="50" pos:column="3">search<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">category<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">category<pos:position pos:line="50" pos:column="30"/></name></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="52" pos:column="3">foundp<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator>struct <name pos:line="52" pos:column="20">known_translation_t<pos:position pos:line="52" pos:column="39"/></name> <operator pos:line="52" pos:column="40">*<pos:position pos:line="52" pos:column="41"/></operator><operator pos:line="52" pos:column="41">*<pos:position pos:line="52" pos:column="42"/></operator><operator pos:line="52" pos:column="42">)<pos:position pos:line="52" pos:column="43"/></operator> <call><name pos:line="52" pos:column="44">tfind<pos:position pos:line="52" pos:column="49"/></name> <argument_list pos:line="52" pos:column="50">(<argument><expr><name pos:line="52" pos:column="51">search<pos:position pos:line="52" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="59">&amp;<pos:position pos:line="52" pos:column="64"/></operator><name pos:line="52" pos:column="60">root<pos:position pos:line="52" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">transcmp<pos:position pos:line="52" pos:column="74"/></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></expr_stmt>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">foundp<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">!=<pos:position pos:line="53" pos:column="16"/></operator> <name pos:line="53" pos:column="17">NULL<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">&amp;&amp;<pos:position pos:line="53" pos:column="32"/></operator> <name><operator pos:line="53" pos:column="25">(<pos:position pos:line="53" pos:column="26"/></operator><operator pos:line="53" pos:column="26">*<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">foundp<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">)<pos:position pos:line="53" pos:column="34"/></operator><operator pos:line="53" pos:column="34">-&gt;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="36">counter<pos:position pos:line="53" pos:column="43"/></name></name> <operator pos:line="53" pos:column="44">==<pos:position pos:line="53" pos:column="46"/></operator> <name pos:line="53" pos:column="47">_nl_msg_cat_cntr<pos:position pos:line="53" pos:column="63"/></name></expr>)<pos:position pos:line="53" pos:column="64"/></condition><then pos:line="53" pos:column="64">
    <block pos:line="54" pos:column="5">{
      <comment type="block" pos:line="55" pos:column="7">/* Now deal with plural.  */</comment>
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">plural<pos:position pos:line="56" pos:column="17"/></name></expr>)<pos:position pos:line="56" pos:column="18"/></condition><then pos:line="56" pos:column="18">
	<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="9">retval<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <call><name pos:line="57" pos:column="18">plural_lookup<pos:position pos:line="57" pos:column="31"/></name> <argument_list pos:line="57" pos:column="32">(<argument><expr><name><operator pos:line="57" pos:column="33">(<pos:position pos:line="57" pos:column="34"/></operator><operator pos:line="57" pos:column="34">*<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">foundp<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">)<pos:position pos:line="57" pos:column="42"/></operator><operator pos:line="57" pos:column="42">-&gt;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="44">domain<pos:position pos:line="57" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="52">n<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><name><operator pos:line="57" pos:column="55">(<pos:position pos:line="57" pos:column="56"/></operator><operator pos:line="57" pos:column="56">*<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="57">foundp<pos:position pos:line="57" pos:column="63"/></name><operator pos:line="57" pos:column="63">)<pos:position pos:line="57" pos:column="64"/></operator><operator pos:line="57" pos:column="64">-&gt;<pos:position pos:line="57" pos:column="69"/></operator><name pos:line="57" pos:column="66">translation<pos:position pos:line="57" pos:column="77"/></name></name></expr></argument>,
				<argument><expr><name><operator pos:line="58" pos:column="33">(<pos:position pos:line="58" pos:column="34"/></operator><operator pos:line="58" pos:column="34">*<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">foundp<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">)<pos:position pos:line="58" pos:column="42"/></operator><operator pos:line="58" pos:column="42">-&gt;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="44">translation_length<pos:position pos:line="58" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt></block></then>
      <else pos:line="59" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="9">retval<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <operator pos:line="60" pos:column="18">(<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="19">char<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">*<pos:position pos:line="60" pos:column="25"/></operator><operator pos:line="60" pos:column="25">)<pos:position pos:line="60" pos:column="26"/></operator> <name><operator pos:line="60" pos:column="27">(<pos:position pos:line="60" pos:column="28"/></operator><operator pos:line="60" pos:column="28">*<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="29">foundp<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">)<pos:position pos:line="60" pos:column="36"/></operator><operator pos:line="60" pos:column="36">-&gt;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="38">translation<pos:position pos:line="60" pos:column="49"/></name></name></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="62" pos:column="7">__libc_rwlock_unlock<pos:position pos:line="62" pos:column="27"/></name> <argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">_nl_state_lock<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
      <return pos:line="63" pos:column="7">return <expr><name pos:line="63" pos:column="14">retval<pos:position pos:line="63" pos:column="20"/></name></expr>;<pos:position pos:line="63" pos:column="21"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="67" pos:column="3">/* Preserve the `errno' value.  */</comment>
  <expr_stmt><expr><name pos:line="68" pos:column="3">saved_errno<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <name pos:line="68" pos:column="17">errno<pos:position pos:line="68" pos:column="22"/></name></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="70" pos:column="3">/* See whether this is a SUID binary or not.  */</comment>
  <expr_stmt><expr><name pos:line="71" pos:column="3">DETERMINE_SECURE<pos:position pos:line="71" pos:column="19"/></name></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="73" pos:column="3">/* First find matching binding.  */</comment>
  <for pos:line="74" pos:column="3">for <control pos:line="74" pos:column="7">(<init><expr><name pos:line="74" pos:column="8">binding<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="18">_nl_domain_bindings<pos:position pos:line="74" pos:column="37"/></name></expr>;<pos:position pos:line="74" pos:column="38"/></init> <condition><expr><name pos:line="74" pos:column="39">binding<pos:position pos:line="74" pos:column="46"/></name> <operator pos:line="74" pos:column="47">!=<pos:position pos:line="74" pos:column="49"/></operator> <name pos:line="74" pos:column="50">NULL<pos:position pos:line="74" pos:column="54"/></name></expr>;<pos:position pos:line="74" pos:column="55"/></condition> <incr><expr><name pos:line="74" pos:column="56">binding<pos:position pos:line="74" pos:column="63"/></name> <operator pos:line="74" pos:column="64">=<pos:position pos:line="74" pos:column="65"/></operator> <name><name pos:line="74" pos:column="66">binding<pos:position pos:line="74" pos:column="73"/></name><operator pos:line="74" pos:column="73">-&gt;<pos:position pos:line="74" pos:column="78"/></operator><name pos:line="74" pos:column="75">next<pos:position pos:line="74" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="74" pos:column="80"/></control>
    <block pos:line="75" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="76" pos:column="7">int<pos:position pos:line="76" pos:column="10"/></name></type> <name pos:line="76" pos:column="11">compare<pos:position pos:line="76" pos:column="18"/></name> <init pos:line="76" pos:column="19">= <expr><call><name pos:line="76" pos:column="21">strcmp<pos:position pos:line="76" pos:column="27"/></name> <argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">domainname<pos:position pos:line="76" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="41">binding<pos:position pos:line="76" pos:column="48"/></name><operator pos:line="76" pos:column="48">-&gt;<pos:position pos:line="76" pos:column="53"/></operator><name pos:line="76" pos:column="50">domainname<pos:position pos:line="76" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="76" pos:column="62"/></decl_stmt>
      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><name pos:line="77" pos:column="11">compare<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">==<pos:position pos:line="77" pos:column="21"/></operator> <literal type="number" pos:line="77" pos:column="22">0<pos:position pos:line="77" pos:column="23"/></literal></expr>)<pos:position pos:line="77" pos:column="24"/></condition><then pos:line="77" pos:column="24">
	<comment type="block" pos:line="78" pos:column="9">/* We found it!  */</comment>
	<block type="pseudo"><break pos:line="79" pos:column="9">break;<pos:position pos:line="79" pos:column="15"/></break></block></then></if>
      <if pos:line="80" pos:column="7">if <condition pos:line="80" pos:column="10">(<expr><name pos:line="80" pos:column="11">compare<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">&lt;<pos:position pos:line="80" pos:column="23"/></operator> <literal type="number" pos:line="80" pos:column="21">0<pos:position pos:line="80" pos:column="22"/></literal></expr>)<pos:position pos:line="80" pos:column="23"/></condition><then pos:line="80" pos:column="23">
	<block pos:line="81" pos:column="9">{
	  <comment type="block" pos:line="82" pos:column="11">/* It is not in the list.  */</comment>
	  <expr_stmt><expr><name pos:line="83" pos:column="11">binding<pos:position pos:line="83" pos:column="18"/></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <name pos:line="83" pos:column="21">NULL<pos:position pos:line="83" pos:column="25"/></name></expr>;<pos:position pos:line="83" pos:column="26"/></expr_stmt>
	  <break pos:line="84" pos:column="11">break;<pos:position pos:line="84" pos:column="17"/></break>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></for>

  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><name pos:line="88" pos:column="7">binding<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">==<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">NULL<pos:position pos:line="88" pos:column="22"/></name></expr>)<pos:position pos:line="88" pos:column="23"/></condition><then pos:line="88" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="5">dirname<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">=<pos:position pos:line="89" pos:column="14"/></operator> <operator pos:line="89" pos:column="15">(<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="16">char<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">*<pos:position pos:line="89" pos:column="22"/></operator><operator pos:line="89" pos:column="22">)<pos:position pos:line="89" pos:column="23"/></operator> <name pos:line="89" pos:column="24">_nl_default_dirname<pos:position pos:line="89" pos:column="43"/></name></expr>;<pos:position pos:line="89" pos:column="44"/></expr_stmt></block></then>
  <elseif pos:line="90" pos:column="3">else <if pos:line="90" pos:column="8">if <condition pos:line="90" pos:column="11">(<expr><call><name pos:line="90" pos:column="12">IS_ABSOLUTE_PATH<pos:position pos:line="90" pos:column="28"/></name> <argument_list pos:line="90" pos:column="29">(<argument><expr><name><name pos:line="90" pos:column="30">binding<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">-&gt;<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="39">dirname<pos:position pos:line="90" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="48"/></condition><then pos:line="90" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="5">dirname<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <name><name pos:line="91" pos:column="15">binding<pos:position pos:line="91" pos:column="22"/></name><operator pos:line="91" pos:column="22">-&gt;<pos:position pos:line="91" pos:column="27"/></operator><name pos:line="91" pos:column="24">dirname<pos:position pos:line="91" pos:column="31"/></name></name></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt></block></then></if></elseif>
  <else pos:line="92" pos:column="3">else
    <block pos:line="93" pos:column="5">{
      <comment type="block" pos:line="94" pos:column="7">/* We have a relative path.  Make it absolute now.  */</comment>
      <decl_stmt><decl><type><name pos:line="95" pos:column="7">size_t<pos:position pos:line="95" pos:column="13"/></name></type> <name pos:line="95" pos:column="14">dirname_len<pos:position pos:line="95" pos:column="25"/></name> <init pos:line="95" pos:column="26">= <expr><call><name pos:line="95" pos:column="28">strlen<pos:position pos:line="95" pos:column="34"/></name> <argument_list pos:line="95" pos:column="35">(<argument><expr><name><name pos:line="95" pos:column="36">binding<pos:position pos:line="95" pos:column="43"/></name><operator pos:line="95" pos:column="43">-&gt;<pos:position pos:line="95" pos:column="48"/></operator><name pos:line="95" pos:column="45">dirname<pos:position pos:line="95" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="53"/></argument_list></call> <operator pos:line="95" pos:column="54">+<pos:position pos:line="95" pos:column="55"/></operator> <literal type="number" pos:line="95" pos:column="56">1<pos:position pos:line="95" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="95" pos:column="58"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="96" pos:column="7">size_t<pos:position pos:line="96" pos:column="13"/></name></type> <name pos:line="96" pos:column="14">path_max<pos:position pos:line="96" pos:column="22"/></name></decl>;<pos:position pos:line="96" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="97" pos:column="7">char<pos:position pos:line="97" pos:column="11"/></name> <modifier pos:line="97" pos:column="12">*<pos:position pos:line="97" pos:column="13"/></modifier></type><name pos:line="97" pos:column="13">ret<pos:position pos:line="97" pos:column="16"/></name></decl>;<pos:position pos:line="97" pos:column="17"/></decl_stmt>

      <expr_stmt><expr><name pos:line="99" pos:column="7">path_max<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <operator pos:line="99" pos:column="18">(<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="19">unsigned<pos:position pos:line="99" pos:column="27"/></name> <name pos:line="99" pos:column="28">int<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">)<pos:position pos:line="99" pos:column="32"/></operator> <name pos:line="99" pos:column="33">PATH_MAX<pos:position pos:line="99" pos:column="41"/></name></expr>;<pos:position pos:line="99" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="100" pos:column="7">path_max<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">+=<pos:position pos:line="100" pos:column="18"/></operator> <literal type="number" pos:line="100" pos:column="19">2<pos:position pos:line="100" pos:column="20"/></literal></expr>;<pos:position pos:line="100" pos:column="21"/></expr_stmt>		<comment type="block" pos:line="100" pos:column="33">/* The getcwd docs say to do this.  */</comment>

      <for pos:line="102" pos:column="7">for <control pos:line="102" pos:column="11">(<init pos:line="102" pos:column="12">;<pos:position pos:line="102" pos:column="13"/></init><condition pos:line="102" pos:column="13">;<pos:position pos:line="102" pos:column="14"/></condition><incr/>)<pos:position pos:line="102" pos:column="15"/></control>
	<block pos:line="103" pos:column="9">{
	  <expr_stmt><expr><name pos:line="104" pos:column="11">dirname<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">=<pos:position pos:line="104" pos:column="20"/></operator> <operator pos:line="104" pos:column="21">(<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="22">char<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">*<pos:position pos:line="104" pos:column="28"/></operator><operator pos:line="104" pos:column="28">)<pos:position pos:line="104" pos:column="29"/></operator> <call><name pos:line="104" pos:column="30">alloca<pos:position pos:line="104" pos:column="36"/></name> <argument_list pos:line="104" pos:column="37">(<argument><expr><name pos:line="104" pos:column="38">path_max<pos:position pos:line="104" pos:column="46"/></name> <operator pos:line="104" pos:column="47">+<pos:position pos:line="104" pos:column="48"/></operator> <name pos:line="104" pos:column="49">dirname_len<pos:position pos:line="104" pos:column="60"/></name></expr></argument>)<pos:position pos:line="104" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="62"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="105" pos:column="11">ADD_BLOCK<pos:position pos:line="105" pos:column="20"/></name> <argument_list pos:line="105" pos:column="21">(<argument><expr><name pos:line="105" pos:column="22">block_list<pos:position pos:line="105" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="34">dirname<pos:position pos:line="105" pos:column="41"/></name></expr></argument>)<pos:position pos:line="105" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="43"/></expr_stmt>

	  <expr_stmt><expr><call><name pos:line="107" pos:column="11">__set_errno<pos:position pos:line="107" pos:column="22"/></name> <argument_list pos:line="107" pos:column="23">(<argument><expr><literal type="number" pos:line="107" pos:column="24">0<pos:position pos:line="107" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="108" pos:column="11">ret<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">=<pos:position pos:line="108" pos:column="16"/></operator> <call><name pos:line="108" pos:column="17">getcwd<pos:position pos:line="108" pos:column="23"/></name> <argument_list pos:line="108" pos:column="24">(<argument><expr><name pos:line="108" pos:column="25">dirname<pos:position pos:line="108" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="34">path_max<pos:position pos:line="108" pos:column="42"/></name></expr></argument>)<pos:position pos:line="108" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="44"/></expr_stmt>
	  <if pos:line="109" pos:column="11">if <condition pos:line="109" pos:column="14">(<expr><name pos:line="109" pos:column="15">ret<pos:position pos:line="109" pos:column="18"/></name> <operator pos:line="109" pos:column="19">!=<pos:position pos:line="109" pos:column="21"/></operator> <name pos:line="109" pos:column="22">NULL<pos:position pos:line="109" pos:column="26"/></name> <operator pos:line="109" pos:column="27">||<pos:position pos:line="109" pos:column="29"/></operator> <name pos:line="109" pos:column="30">errno<pos:position pos:line="109" pos:column="35"/></name> <operator pos:line="109" pos:column="36">!=<pos:position pos:line="109" pos:column="38"/></operator> <name pos:line="109" pos:column="39">ERANGE<pos:position pos:line="109" pos:column="45"/></name></expr>)<pos:position pos:line="109" pos:column="46"/></condition><then pos:line="109" pos:column="46">
	    <block type="pseudo"><break pos:line="110" pos:column="13">break;<pos:position pos:line="110" pos:column="19"/></break></block></then></if>

	  <expr_stmt><expr><name pos:line="112" pos:column="11">path_max<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">+=<pos:position pos:line="112" pos:column="22"/></operator> <name pos:line="112" pos:column="23">path_max<pos:position pos:line="112" pos:column="31"/></name> <operator pos:line="112" pos:column="32">/<pos:position pos:line="112" pos:column="33"/></operator> <literal type="number" pos:line="112" pos:column="34">2<pos:position pos:line="112" pos:column="35"/></literal></expr>;<pos:position pos:line="112" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="113" pos:column="11">path_max<pos:position pos:line="113" pos:column="19"/></name> <operator pos:line="113" pos:column="20">+=<pos:position pos:line="113" pos:column="22"/></operator> <name pos:line="113" pos:column="23">PATH_INCR<pos:position pos:line="113" pos:column="32"/></name></expr>;<pos:position pos:line="113" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></for>

      <if pos:line="116" pos:column="7">if <condition pos:line="116" pos:column="10">(<expr><name pos:line="116" pos:column="11">ret<pos:position pos:line="116" pos:column="14"/></name> <operator pos:line="116" pos:column="15">==<pos:position pos:line="116" pos:column="17"/></operator> <name pos:line="116" pos:column="18">NULL<pos:position pos:line="116" pos:column="22"/></name></expr>)<pos:position pos:line="116" pos:column="23"/></condition><then pos:line="116" pos:column="23">
	<block pos:line="117" pos:column="9">{
	  <comment type="block" pos:line="118" pos:column="11">/* We cannot get the current working directory.  Don't signal an
	     error but simply return the default string.  */</comment>
	  <expr_stmt><expr><call><name pos:line="120" pos:column="11">FREE_BLOCKS<pos:position pos:line="120" pos:column="22"/></name> <argument_list pos:line="120" pos:column="23">(<argument><expr><name pos:line="120" pos:column="24">block_list<pos:position pos:line="120" pos:column="34"/></name></expr></argument>)<pos:position pos:line="120" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="121" pos:column="11">__libc_rwlock_unlock<pos:position pos:line="121" pos:column="31"/></name> <argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">_nl_state_lock<pos:position pos:line="121" pos:column="47"/></name></expr></argument>)<pos:position pos:line="121" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="49"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="122" pos:column="11">__set_errno<pos:position pos:line="122" pos:column="22"/></name> <argument_list pos:line="122" pos:column="23">(<argument><expr><name pos:line="122" pos:column="24">saved_errno<pos:position pos:line="122" pos:column="35"/></name></expr></argument>)<pos:position pos:line="122" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="37"/></expr_stmt>
	  <return pos:line="123" pos:column="11">return <expr><operator pos:line="123" pos:column="18">(<pos:position pos:line="123" pos:column="19"/></operator><ternary><condition><expr><name pos:line="123" pos:column="19">plural<pos:position pos:line="123" pos:column="25"/></name> <operator pos:line="123" pos:column="26">==<pos:position pos:line="123" pos:column="28"/></operator> <literal type="number" pos:line="123" pos:column="29">0<pos:position pos:line="123" pos:column="30"/></literal></expr>
		  ?<pos:position pos:line="124" pos:column="20"/></condition><then pos:line="124" pos:column="20"> <expr><operator pos:line="124" pos:column="21">(<pos:position pos:line="124" pos:column="22"/></operator><name pos:line="124" pos:column="22">char<pos:position pos:line="124" pos:column="26"/></name> <operator pos:line="124" pos:column="27">*<pos:position pos:line="124" pos:column="28"/></operator><operator pos:line="124" pos:column="28">)<pos:position pos:line="124" pos:column="29"/></operator> <name pos:line="124" pos:column="30">msgid1<pos:position pos:line="124" pos:column="36"/></name></expr>
		  <comment type="block" pos:line="125" pos:column="19">/* Use the Germanic plural rule.  */</comment>
		  <pos:position pos:line="126" pos:column="5"/></then><else pos:line="126" pos:column="19">: <expr><ternary><condition><expr><name pos:line="126" pos:column="21">n<pos:position pos:line="126" pos:column="22"/></name> <operator pos:line="126" pos:column="23">==<pos:position pos:line="126" pos:column="25"/></operator> <literal type="number" pos:line="126" pos:column="26">1<pos:position pos:line="126" pos:column="27"/></literal></expr> ?<pos:position pos:line="126" pos:column="29"/></condition><then pos:line="126" pos:column="29"> <expr><operator pos:line="126" pos:column="30">(<pos:position pos:line="126" pos:column="31"/></operator><name pos:line="126" pos:column="31">char<pos:position pos:line="126" pos:column="35"/></name> <operator pos:line="126" pos:column="36">*<pos:position pos:line="126" pos:column="37"/></operator><operator pos:line="126" pos:column="37">)<pos:position pos:line="126" pos:column="38"/></operator> <name pos:line="126" pos:column="39">msgid1<pos:position pos:line="126" pos:column="45"/></name></expr> <pos:position pos:line="126" pos:column="46"/></then><else pos:line="126" pos:column="46">: <expr><operator pos:line="126" pos:column="48">(<pos:position pos:line="126" pos:column="49"/></operator><name pos:line="126" pos:column="49">char<pos:position pos:line="126" pos:column="53"/></name> <operator pos:line="126" pos:column="54">*<pos:position pos:line="126" pos:column="55"/></operator><operator pos:line="126" pos:column="55">)<pos:position pos:line="126" pos:column="56"/></operator> <name pos:line="126" pos:column="57">msgid2<pos:position pos:line="126" pos:column="63"/></name></expr></else></ternary></expr></else></ternary><operator pos:line="126" pos:column="63">)<pos:position pos:line="126" pos:column="64"/></operator></expr>;<pos:position pos:line="126" pos:column="65"/></return>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="129" pos:column="7">stpcpy<pos:position pos:line="129" pos:column="13"/></name> <argument_list pos:line="129" pos:column="14">(<argument><expr><call><name pos:line="129" pos:column="15">stpcpy<pos:position pos:line="129" pos:column="21"/></name> <argument_list pos:line="129" pos:column="22">(<argument><expr><call><name pos:line="129" pos:column="23">strchr<pos:position pos:line="129" pos:column="29"/></name> <argument_list pos:line="129" pos:column="30">(<argument><expr><name pos:line="129" pos:column="31">dirname<pos:position pos:line="129" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="129" pos:column="40">'\0'<pos:position pos:line="129" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="47">"/"<pos:position pos:line="129" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="53">binding<pos:position pos:line="129" pos:column="60"/></name><operator pos:line="129" pos:column="60">-&gt;<pos:position pos:line="129" pos:column="65"/></operator><name pos:line="129" pos:column="62">dirname<pos:position pos:line="129" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></else></if>

  <comment type="block" pos:line="132" pos:column="3">/* Now determine the symbolic name of CATEGORY and its value.  */</comment>
  <expr_stmt><expr><name pos:line="133" pos:column="3">categoryname<pos:position pos:line="133" pos:column="15"/></name> <operator pos:line="133" pos:column="16">=<pos:position pos:line="133" pos:column="17"/></operator> <call><name pos:line="133" pos:column="18">category_to_name<pos:position pos:line="133" pos:column="34"/></name> <argument_list pos:line="133" pos:column="35">(<argument><expr><name pos:line="133" pos:column="36">category<pos:position pos:line="133" pos:column="44"/></name></expr></argument>)<pos:position pos:line="133" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="134" pos:column="3">categoryvalue<pos:position pos:line="134" pos:column="16"/></name> <operator pos:line="134" pos:column="17">=<pos:position pos:line="134" pos:column="18"/></operator> <call><name pos:line="134" pos:column="19">guess_category_value<pos:position pos:line="134" pos:column="39"/></name> <argument_list pos:line="134" pos:column="40">(<argument><expr><name pos:line="134" pos:column="41">category<pos:position pos:line="134" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="51">categoryname<pos:position pos:line="134" pos:column="63"/></name></expr></argument>)<pos:position pos:line="134" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="65"/></expr_stmt>

  <expr_stmt><expr><name pos:line="136" pos:column="3">domainname_len<pos:position pos:line="136" pos:column="17"/></name> <operator pos:line="136" pos:column="18">=<pos:position pos:line="136" pos:column="19"/></operator> <call><name pos:line="136" pos:column="20">strlen<pos:position pos:line="136" pos:column="26"/></name> <argument_list pos:line="136" pos:column="27">(<argument><expr><name pos:line="136" pos:column="28">domainname<pos:position pos:line="136" pos:column="38"/></name></expr></argument>)<pos:position pos:line="136" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="137" pos:column="3">xdomainname<pos:position pos:line="137" pos:column="14"/></name> <operator pos:line="137" pos:column="15">=<pos:position pos:line="137" pos:column="16"/></operator> <operator pos:line="137" pos:column="17">(<pos:position pos:line="137" pos:column="18"/></operator><name pos:line="137" pos:column="18">char<pos:position pos:line="137" pos:column="22"/></name> <operator pos:line="137" pos:column="23">*<pos:position pos:line="137" pos:column="24"/></operator><operator pos:line="137" pos:column="24">)<pos:position pos:line="137" pos:column="25"/></operator> <call><name pos:line="137" pos:column="26">alloca<pos:position pos:line="137" pos:column="32"/></name> <argument_list pos:line="137" pos:column="33">(<argument><expr><call><name pos:line="137" pos:column="34">strlen<pos:position pos:line="137" pos:column="40"/></name> <argument_list pos:line="137" pos:column="41">(<argument><expr><name pos:line="137" pos:column="42">categoryname<pos:position pos:line="137" pos:column="54"/></name></expr></argument>)<pos:position pos:line="137" pos:column="55"/></argument_list></call>
				 <operator pos:line="138" pos:column="34">+<pos:position pos:line="138" pos:column="35"/></operator> <name pos:line="138" pos:column="36">domainname_len<pos:position pos:line="138" pos:column="50"/></name> <operator pos:line="138" pos:column="51">+<pos:position pos:line="138" pos:column="52"/></operator> <literal type="number" pos:line="138" pos:column="53">5<pos:position pos:line="138" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="139" pos:column="3">ADD_BLOCK<pos:position pos:line="139" pos:column="12"/></name> <argument_list pos:line="139" pos:column="13">(<argument><expr><name pos:line="139" pos:column="14">block_list<pos:position pos:line="139" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="26">xdomainname<pos:position pos:line="139" pos:column="37"/></name></expr></argument>)<pos:position pos:line="139" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="141" pos:column="3">stpcpy<pos:position pos:line="141" pos:column="9"/></name> <argument_list pos:line="141" pos:column="10">(<argument><expr><call><name pos:line="141" pos:column="11">mempcpy<pos:position pos:line="141" pos:column="18"/></name> <argument_list pos:line="141" pos:column="19">(<argument><expr><call><name pos:line="141" pos:column="20">stpcpy<pos:position pos:line="141" pos:column="26"/></name> <argument_list pos:line="141" pos:column="27">(<argument><expr><call><name pos:line="141" pos:column="28">stpcpy<pos:position pos:line="141" pos:column="34"/></name> <argument_list pos:line="141" pos:column="35">(<argument><expr><name pos:line="141" pos:column="36">xdomainname<pos:position pos:line="141" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="49">categoryname<pos:position pos:line="141" pos:column="61"/></name></expr></argument>)<pos:position pos:line="141" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="64">"/"<pos:position pos:line="141" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="68"/></argument_list></call></expr></argument>,
		  <argument><expr><name pos:line="142" pos:column="19">domainname<pos:position pos:line="142" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="31">domainname_len<pos:position pos:line="142" pos:column="45"/></name></expr></argument>)<pos:position pos:line="142" pos:column="46"/></argument_list></call></expr></argument>,
	  <argument><expr><literal type="string" pos:line="143" pos:column="11">".mo"<pos:position pos:line="143" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="18"/></expr_stmt>

  <comment type="block" pos:line="145" pos:column="3">/* Creating working area.  */</comment>
  <expr_stmt><expr><name pos:line="146" pos:column="3">single_locale<pos:position pos:line="146" pos:column="16"/></name> <operator pos:line="146" pos:column="17">=<pos:position pos:line="146" pos:column="18"/></operator> <operator pos:line="146" pos:column="19">(<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="20">char<pos:position pos:line="146" pos:column="24"/></name> <operator pos:line="146" pos:column="25">*<pos:position pos:line="146" pos:column="26"/></operator><operator pos:line="146" pos:column="26">)<pos:position pos:line="146" pos:column="27"/></operator> <call><name pos:line="146" pos:column="28">alloca<pos:position pos:line="146" pos:column="34"/></name> <argument_list pos:line="146" pos:column="35">(<argument><expr><call><name pos:line="146" pos:column="36">strlen<pos:position pos:line="146" pos:column="42"/></name> <argument_list pos:line="146" pos:column="43">(<argument><expr><name pos:line="146" pos:column="44">categoryvalue<pos:position pos:line="146" pos:column="57"/></name></expr></argument>)<pos:position pos:line="146" pos:column="58"/></argument_list></call> <operator pos:line="146" pos:column="59">+<pos:position pos:line="146" pos:column="60"/></operator> <literal type="number" pos:line="146" pos:column="61">1<pos:position pos:line="146" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="147" pos:column="3">ADD_BLOCK<pos:position pos:line="147" pos:column="12"/></name> <argument_list pos:line="147" pos:column="13">(<argument><expr><name pos:line="147" pos:column="14">block_list<pos:position pos:line="147" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="26">single_locale<pos:position pos:line="147" pos:column="39"/></name></expr></argument>)<pos:position pos:line="147" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>


  <comment type="block" pos:line="150" pos:column="3">/* Search for the given string.  This is a loop because we perhaps
     got an ordered list of languages to consider for the translation.  */</comment>
  <while pos:line="152" pos:column="3">while <condition pos:line="152" pos:column="9">(<expr><literal type="number" pos:line="152" pos:column="10">1<pos:position pos:line="152" pos:column="11"/></literal></expr>)<pos:position pos:line="152" pos:column="12"/></condition>
    <block pos:line="153" pos:column="5">{
      <comment type="block" pos:line="154" pos:column="7">/* Make CATEGORYVALUE point to the next element of the list.  */</comment>
      <while pos:line="155" pos:column="7">while <condition pos:line="155" pos:column="13">(<expr><name><name pos:line="155" pos:column="14">categoryvalue<pos:position pos:line="155" pos:column="27"/></name><index pos:line="155" pos:column="27">[<expr><literal type="number" pos:line="155" pos:column="28">0<pos:position pos:line="155" pos:column="29"/></literal></expr>]<pos:position pos:line="155" pos:column="30"/></index></name> <operator pos:line="155" pos:column="31">!=<pos:position pos:line="155" pos:column="33"/></operator> <literal type="char" pos:line="155" pos:column="34">'\0'<pos:position pos:line="155" pos:column="38"/></literal> <operator pos:line="155" pos:column="39">&amp;&amp;<pos:position pos:line="155" pos:column="49"/></operator> <name><name pos:line="155" pos:column="42">categoryvalue<pos:position pos:line="155" pos:column="55"/></name><index pos:line="155" pos:column="55">[<expr><literal type="number" pos:line="155" pos:column="56">0<pos:position pos:line="155" pos:column="57"/></literal></expr>]<pos:position pos:line="155" pos:column="58"/></index></name> <operator pos:line="155" pos:column="59">==<pos:position pos:line="155" pos:column="61"/></operator> <literal type="char" pos:line="155" pos:column="62">':'<pos:position pos:line="155" pos:column="65"/></literal></expr>)<pos:position pos:line="155" pos:column="66"/></condition>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="156" pos:column="9">++<pos:position pos:line="156" pos:column="11"/></operator><name pos:line="156" pos:column="11">categoryvalue<pos:position pos:line="156" pos:column="24"/></name></expr>;<pos:position pos:line="156" pos:column="25"/></expr_stmt></block></while>
      <if pos:line="157" pos:column="7">if <condition pos:line="157" pos:column="10">(<expr><name><name pos:line="157" pos:column="11">categoryvalue<pos:position pos:line="157" pos:column="24"/></name><index pos:line="157" pos:column="24">[<expr><literal type="number" pos:line="157" pos:column="25">0<pos:position pos:line="157" pos:column="26"/></literal></expr>]<pos:position pos:line="157" pos:column="27"/></index></name> <operator pos:line="157" pos:column="28">==<pos:position pos:line="157" pos:column="30"/></operator> <literal type="char" pos:line="157" pos:column="31">'\0'<pos:position pos:line="157" pos:column="35"/></literal></expr>)<pos:position pos:line="157" pos:column="36"/></condition><then pos:line="157" pos:column="36">
	<block pos:line="158" pos:column="9">{
	  <comment type="block" pos:line="159" pos:column="11">/* The whole contents of CATEGORYVALUE has been searched but
	     no valid entry has been found.  We solve this situation
	     by implicitly appending a "C" entry, i.e. no translation
	     will take place.  */</comment>
	  <expr_stmt><expr><name><name pos:line="163" pos:column="11">single_locale<pos:position pos:line="163" pos:column="24"/></name><index pos:line="163" pos:column="24">[<expr><literal type="number" pos:line="163" pos:column="25">0<pos:position pos:line="163" pos:column="26"/></literal></expr>]<pos:position pos:line="163" pos:column="27"/></index></name> <operator pos:line="163" pos:column="28">=<pos:position pos:line="163" pos:column="29"/></operator> <literal type="char" pos:line="163" pos:column="30">'C'<pos:position pos:line="163" pos:column="33"/></literal></expr>;<pos:position pos:line="163" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="164" pos:column="11">single_locale<pos:position pos:line="164" pos:column="24"/></name><index pos:line="164" pos:column="24">[<expr><literal type="number" pos:line="164" pos:column="25">1<pos:position pos:line="164" pos:column="26"/></literal></expr>]<pos:position pos:line="164" pos:column="27"/></index></name> <operator pos:line="164" pos:column="28">=<pos:position pos:line="164" pos:column="29"/></operator> <literal type="char" pos:line="164" pos:column="30">'\0'<pos:position pos:line="164" pos:column="34"/></literal></expr>;<pos:position pos:line="164" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="165" pos:column="10"/></block></then>
      <else pos:line="166" pos:column="7">else
	<block pos:line="167" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="168" pos:column="11">char<pos:position pos:line="168" pos:column="15"/></name> <modifier pos:line="168" pos:column="16">*<pos:position pos:line="168" pos:column="17"/></modifier></type><name pos:line="168" pos:column="17">cp<pos:position pos:line="168" pos:column="19"/></name> <init pos:line="168" pos:column="20">= <expr><name pos:line="168" pos:column="22">single_locale<pos:position pos:line="168" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="168" pos:column="36"/></decl_stmt>
	  <while pos:line="169" pos:column="11">while <condition pos:line="169" pos:column="17">(<expr><name><name pos:line="169" pos:column="18">categoryvalue<pos:position pos:line="169" pos:column="31"/></name><index pos:line="169" pos:column="31">[<expr><literal type="number" pos:line="169" pos:column="32">0<pos:position pos:line="169" pos:column="33"/></literal></expr>]<pos:position pos:line="169" pos:column="34"/></index></name> <operator pos:line="169" pos:column="35">!=<pos:position pos:line="169" pos:column="37"/></operator> <literal type="char" pos:line="169" pos:column="38">'\0'<pos:position pos:line="169" pos:column="42"/></literal> <operator pos:line="169" pos:column="43">&amp;&amp;<pos:position pos:line="169" pos:column="53"/></operator> <name><name pos:line="169" pos:column="46">categoryvalue<pos:position pos:line="169" pos:column="59"/></name><index pos:line="169" pos:column="59">[<expr><literal type="number" pos:line="169" pos:column="60">0<pos:position pos:line="169" pos:column="61"/></literal></expr>]<pos:position pos:line="169" pos:column="62"/></index></name> <operator pos:line="169" pos:column="63">!=<pos:position pos:line="169" pos:column="65"/></operator> <literal type="char" pos:line="169" pos:column="66">':'<pos:position pos:line="169" pos:column="69"/></literal></expr>)<pos:position pos:line="169" pos:column="70"/></condition>
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="170" pos:column="13">*<pos:position pos:line="170" pos:column="14"/></operator><name pos:line="170" pos:column="14">cp<pos:position pos:line="170" pos:column="16"/></name><operator pos:line="170" pos:column="16">++<pos:position pos:line="170" pos:column="18"/></operator> <operator pos:line="170" pos:column="19">=<pos:position pos:line="170" pos:column="20"/></operator> <operator pos:line="170" pos:column="21">*<pos:position pos:line="170" pos:column="22"/></operator><name pos:line="170" pos:column="22">categoryvalue<pos:position pos:line="170" pos:column="35"/></name><operator pos:line="170" pos:column="35">++<pos:position pos:line="170" pos:column="37"/></operator></expr>;<pos:position pos:line="170" pos:column="38"/></expr_stmt></block></while>
	  <expr_stmt><expr><operator pos:line="171" pos:column="11">*<pos:position pos:line="171" pos:column="12"/></operator><name pos:line="171" pos:column="12">cp<pos:position pos:line="171" pos:column="14"/></name> <operator pos:line="171" pos:column="15">=<pos:position pos:line="171" pos:column="16"/></operator> <literal type="char" pos:line="171" pos:column="17">'\0'<pos:position pos:line="171" pos:column="21"/></literal></expr>;<pos:position pos:line="171" pos:column="22"/></expr_stmt>

	  <comment type="block" pos:line="173" pos:column="11">/* When this is a SUID binary we must not allow accessing files
	     outside the dedicated directories.  */</comment>
	  <if pos:line="175" pos:column="11">if <condition pos:line="175" pos:column="14">(<expr><name pos:line="175" pos:column="15">ENABLE_SECURE<pos:position pos:line="175" pos:column="28"/></name> <operator pos:line="175" pos:column="29">&amp;&amp;<pos:position pos:line="175" pos:column="39"/></operator> <call><name pos:line="175" pos:column="32">IS_PATH_WITH_DIR<pos:position pos:line="175" pos:column="48"/></name> <argument_list pos:line="175" pos:column="49">(<argument><expr><name pos:line="175" pos:column="50">single_locale<pos:position pos:line="175" pos:column="63"/></name></expr></argument>)<pos:position pos:line="175" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="65"/></condition><then pos:line="175" pos:column="65">
	    <comment type="block" pos:line="176" pos:column="13">/* Ingore this entry.  */</comment>
	    <block type="pseudo"><continue pos:line="177" pos:column="13">continue;<pos:position pos:line="177" pos:column="22"/></continue></block></then></if>
	}<pos:position pos:line="178" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="180" pos:column="7">/* If the current locale value is C (or POSIX) we don't load a
	 domain.  Return the MSGID.  */</comment>
      <if pos:line="182" pos:column="7">if <condition pos:line="182" pos:column="10">(<expr><call><name pos:line="182" pos:column="11">strcmp<pos:position pos:line="182" pos:column="17"/></name> <argument_list pos:line="182" pos:column="18">(<argument><expr><name pos:line="182" pos:column="19">single_locale<pos:position pos:line="182" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="34">"C"<pos:position pos:line="182" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="38"/></argument_list></call> <operator pos:line="182" pos:column="39">==<pos:position pos:line="182" pos:column="41"/></operator> <literal type="number" pos:line="182" pos:column="42">0<pos:position pos:line="182" pos:column="43"/></literal>
	  <operator pos:line="183" pos:column="11">||<pos:position pos:line="183" pos:column="13"/></operator> <call><name pos:line="183" pos:column="14">strcmp<pos:position pos:line="183" pos:column="20"/></name> <argument_list pos:line="183" pos:column="21">(<argument><expr><name pos:line="183" pos:column="22">single_locale<pos:position pos:line="183" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="37">"POSIX"<pos:position pos:line="183" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="45"/></argument_list></call> <operator pos:line="183" pos:column="46">==<pos:position pos:line="183" pos:column="48"/></operator> <literal type="number" pos:line="183" pos:column="49">0<pos:position pos:line="183" pos:column="50"/></literal></expr>)<pos:position pos:line="183" pos:column="51"/></condition><then pos:line="183" pos:column="51">
	<block pos:line="184" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="185" pos:column="11">FREE_BLOCKS<pos:position pos:line="185" pos:column="22"/></name> <argument_list pos:line="185" pos:column="23">(<argument><expr><name pos:line="185" pos:column="24">block_list<pos:position pos:line="185" pos:column="34"/></name></expr></argument>)<pos:position pos:line="185" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="186" pos:column="11">__libc_rwlock_unlock<pos:position pos:line="186" pos:column="31"/></name> <argument_list pos:line="186" pos:column="32">(<argument><expr><name pos:line="186" pos:column="33">_nl_state_lock<pos:position pos:line="186" pos:column="47"/></name></expr></argument>)<pos:position pos:line="186" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="49"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="187" pos:column="11">__set_errno<pos:position pos:line="187" pos:column="22"/></name> <argument_list pos:line="187" pos:column="23">(<argument><expr><name pos:line="187" pos:column="24">saved_errno<pos:position pos:line="187" pos:column="35"/></name></expr></argument>)<pos:position pos:line="187" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="37"/></expr_stmt>
	  <return pos:line="188" pos:column="11">return <expr><operator pos:line="188" pos:column="18">(<pos:position pos:line="188" pos:column="19"/></operator><ternary><condition><expr><name pos:line="188" pos:column="19">plural<pos:position pos:line="188" pos:column="25"/></name> <operator pos:line="188" pos:column="26">==<pos:position pos:line="188" pos:column="28"/></operator> <literal type="number" pos:line="188" pos:column="29">0<pos:position pos:line="188" pos:column="30"/></literal></expr>
		  ?<pos:position pos:line="189" pos:column="20"/></condition><then pos:line="189" pos:column="20"> <expr><operator pos:line="189" pos:column="21">(<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="22">char<pos:position pos:line="189" pos:column="26"/></name> <operator pos:line="189" pos:column="27">*<pos:position pos:line="189" pos:column="28"/></operator><operator pos:line="189" pos:column="28">)<pos:position pos:line="189" pos:column="29"/></operator> <name pos:line="189" pos:column="30">msgid1<pos:position pos:line="189" pos:column="36"/></name></expr>
		  <comment type="block" pos:line="190" pos:column="19">/* Use the Germanic plural rule.  */</comment>
		  <pos:position pos:line="191" pos:column="5"/></then><else pos:line="191" pos:column="19">: <expr><ternary><condition><expr><name pos:line="191" pos:column="21">n<pos:position pos:line="191" pos:column="22"/></name> <operator pos:line="191" pos:column="23">==<pos:position pos:line="191" pos:column="25"/></operator> <literal type="number" pos:line="191" pos:column="26">1<pos:position pos:line="191" pos:column="27"/></literal></expr> ?<pos:position pos:line="191" pos:column="29"/></condition><then pos:line="191" pos:column="29"> <expr><operator pos:line="191" pos:column="30">(<pos:position pos:line="191" pos:column="31"/></operator><name pos:line="191" pos:column="31">char<pos:position pos:line="191" pos:column="35"/></name> <operator pos:line="191" pos:column="36">*<pos:position pos:line="191" pos:column="37"/></operator><operator pos:line="191" pos:column="37">)<pos:position pos:line="191" pos:column="38"/></operator> <name pos:line="191" pos:column="39">msgid1<pos:position pos:line="191" pos:column="45"/></name></expr> <pos:position pos:line="191" pos:column="46"/></then><else pos:line="191" pos:column="46">: <expr><operator pos:line="191" pos:column="48">(<pos:position pos:line="191" pos:column="49"/></operator><name pos:line="191" pos:column="49">char<pos:position pos:line="191" pos:column="53"/></name> <operator pos:line="191" pos:column="54">*<pos:position pos:line="191" pos:column="55"/></operator><operator pos:line="191" pos:column="55">)<pos:position pos:line="191" pos:column="56"/></operator> <name pos:line="191" pos:column="57">msgid2<pos:position pos:line="191" pos:column="63"/></name></expr></else></ternary></expr></else></ternary><operator pos:line="191" pos:column="63">)<pos:position pos:line="191" pos:column="64"/></operator></expr>;<pos:position pos:line="191" pos:column="65"/></return>
	}<pos:position pos:line="192" pos:column="10"/></block></then></if>


      <comment type="block" pos:line="195" pos:column="7">/* Find structure describing the message catalog matching the
	 DOMAINNAME and CATEGORY.  */</comment>
      <expr_stmt><expr><name pos:line="197" pos:column="7">domain<pos:position pos:line="197" pos:column="13"/></name> <operator pos:line="197" pos:column="14">=<pos:position pos:line="197" pos:column="15"/></operator> <call><name pos:line="197" pos:column="16">_nl_find_domain<pos:position pos:line="197" pos:column="31"/></name> <argument_list pos:line="197" pos:column="32">(<argument><expr><name pos:line="197" pos:column="33">dirname<pos:position pos:line="197" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="42">single_locale<pos:position pos:line="197" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="57">xdomainname<pos:position pos:line="197" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="70">binding<pos:position pos:line="197" pos:column="77"/></name></expr></argument>)<pos:position pos:line="197" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="79"/></expr_stmt>

      <if pos:line="199" pos:column="7">if <condition pos:line="199" pos:column="10">(<expr><name pos:line="199" pos:column="11">domain<pos:position pos:line="199" pos:column="17"/></name> <operator pos:line="199" pos:column="18">!=<pos:position pos:line="199" pos:column="20"/></operator> <name pos:line="199" pos:column="21">NULL<pos:position pos:line="199" pos:column="25"/></name></expr>)<pos:position pos:line="199" pos:column="26"/></condition><then pos:line="199" pos:column="26">
	<block pos:line="200" pos:column="9">{
	  <expr_stmt><expr><name pos:line="201" pos:column="11">retval<pos:position pos:line="201" pos:column="17"/></name> <operator pos:line="201" pos:column="18">=<pos:position pos:line="201" pos:column="19"/></operator> <call><name pos:line="201" pos:column="20">_nl_find_msg<pos:position pos:line="201" pos:column="32"/></name> <argument_list pos:line="201" pos:column="33">(<argument><expr><name pos:line="201" pos:column="34">domain<pos:position pos:line="201" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="42">binding<pos:position pos:line="201" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="51">msgid1<pos:position pos:line="201" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="201" pos:column="59">&amp;<pos:position pos:line="201" pos:column="64"/></operator><name pos:line="201" pos:column="60">retlen<pos:position pos:line="201" pos:column="66"/></name></expr></argument>)<pos:position pos:line="201" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="68"/></expr_stmt>

	  <if pos:line="203" pos:column="11">if <condition pos:line="203" pos:column="14">(<expr><name pos:line="203" pos:column="15">retval<pos:position pos:line="203" pos:column="21"/></name> <operator pos:line="203" pos:column="22">==<pos:position pos:line="203" pos:column="24"/></operator> <name pos:line="203" pos:column="25">NULL<pos:position pos:line="203" pos:column="29"/></name></expr>)<pos:position pos:line="203" pos:column="30"/></condition><then pos:line="203" pos:column="30">
	    <block pos:line="204" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="205" pos:column="15">int<pos:position pos:line="205" pos:column="18"/></name></type> <name pos:line="205" pos:column="19">cnt<pos:position pos:line="205" pos:column="22"/></name></decl>;<pos:position pos:line="205" pos:column="23"/></decl_stmt>

	      <for pos:line="207" pos:column="15">for <control pos:line="207" pos:column="19">(<init><expr><name pos:line="207" pos:column="20">cnt<pos:position pos:line="207" pos:column="23"/></name> <operator pos:line="207" pos:column="24">=<pos:position pos:line="207" pos:column="25"/></operator> <literal type="number" pos:line="207" pos:column="26">0<pos:position pos:line="207" pos:column="27"/></literal></expr>;<pos:position pos:line="207" pos:column="28"/></init> <condition><expr><name><name pos:line="207" pos:column="29">domain<pos:position pos:line="207" pos:column="35"/></name><operator pos:line="207" pos:column="35">-&gt;<pos:position pos:line="207" pos:column="40"/></operator><name pos:line="207" pos:column="37">successor<pos:position pos:line="207" pos:column="46"/></name><index pos:line="207" pos:column="46">[<expr><name pos:line="207" pos:column="47">cnt<pos:position pos:line="207" pos:column="50"/></name></expr>]<pos:position pos:line="207" pos:column="51"/></index></name> <operator pos:line="207" pos:column="52">!=<pos:position pos:line="207" pos:column="54"/></operator> <name pos:line="207" pos:column="55">NULL<pos:position pos:line="207" pos:column="59"/></name></expr>;<pos:position pos:line="207" pos:column="60"/></condition> <incr><expr><operator pos:line="207" pos:column="61">++<pos:position pos:line="207" pos:column="63"/></operator><name pos:line="207" pos:column="63">cnt<pos:position pos:line="207" pos:column="66"/></name></expr></incr>)<pos:position pos:line="207" pos:column="67"/></control>
		<block pos:line="208" pos:column="17">{
		  <expr_stmt><expr><name pos:line="209" pos:column="19">retval<pos:position pos:line="209" pos:column="25"/></name> <operator pos:line="209" pos:column="26">=<pos:position pos:line="209" pos:column="27"/></operator> <call><name pos:line="209" pos:column="28">_nl_find_msg<pos:position pos:line="209" pos:column="40"/></name> <argument_list pos:line="209" pos:column="41">(<argument><expr><name><name pos:line="209" pos:column="42">domain<pos:position pos:line="209" pos:column="48"/></name><operator pos:line="209" pos:column="48">-&gt;<pos:position pos:line="209" pos:column="53"/></operator><name pos:line="209" pos:column="50">successor<pos:position pos:line="209" pos:column="59"/></name><index pos:line="209" pos:column="59">[<expr><name pos:line="209" pos:column="60">cnt<pos:position pos:line="209" pos:column="63"/></name></expr>]<pos:position pos:line="209" pos:column="64"/></index></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="66">binding<pos:position pos:line="209" pos:column="73"/></name></expr></argument>,
					 <argument><expr><name pos:line="210" pos:column="42">msgid1<pos:position pos:line="210" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="50">&amp;<pos:position pos:line="210" pos:column="55"/></operator><name pos:line="210" pos:column="51">retlen<pos:position pos:line="210" pos:column="57"/></name></expr></argument>)<pos:position pos:line="210" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="59"/></expr_stmt>

		  <if pos:line="212" pos:column="19">if <condition pos:line="212" pos:column="22">(<expr><name pos:line="212" pos:column="23">retval<pos:position pos:line="212" pos:column="29"/></name> <operator pos:line="212" pos:column="30">!=<pos:position pos:line="212" pos:column="32"/></operator> <name pos:line="212" pos:column="33">NULL<pos:position pos:line="212" pos:column="37"/></name></expr>)<pos:position pos:line="212" pos:column="38"/></condition><then pos:line="212" pos:column="38">
		    <block pos:line="213" pos:column="21">{
		      <expr_stmt><expr><name pos:line="214" pos:column="23">domain<pos:position pos:line="214" pos:column="29"/></name> <operator pos:line="214" pos:column="30">=<pos:position pos:line="214" pos:column="31"/></operator> <name><name pos:line="214" pos:column="32">domain<pos:position pos:line="214" pos:column="38"/></name><operator pos:line="214" pos:column="38">-&gt;<pos:position pos:line="214" pos:column="43"/></operator><name pos:line="214" pos:column="40">successor<pos:position pos:line="214" pos:column="49"/></name><index pos:line="214" pos:column="49">[<expr><name pos:line="214" pos:column="50">cnt<pos:position pos:line="214" pos:column="53"/></name></expr>]<pos:position pos:line="214" pos:column="54"/></index></name></expr>;<pos:position pos:line="214" pos:column="55"/></expr_stmt>
		      <break pos:line="215" pos:column="23">break;<pos:position pos:line="215" pos:column="29"/></break>
		    }<pos:position pos:line="216" pos:column="22"/></block></then></if>
		}<pos:position pos:line="217" pos:column="18"/></block></for>
	    }<pos:position pos:line="218" pos:column="14"/></block></then></if>

	  <if pos:line="220" pos:column="11">if <condition pos:line="220" pos:column="14">(<expr><name pos:line="220" pos:column="15">retval<pos:position pos:line="220" pos:column="21"/></name> <operator pos:line="220" pos:column="22">!=<pos:position pos:line="220" pos:column="24"/></operator> <name pos:line="220" pos:column="25">NULL<pos:position pos:line="220" pos:column="29"/></name></expr>)<pos:position pos:line="220" pos:column="30"/></condition><then pos:line="220" pos:column="30">
	    <block pos:line="221" pos:column="13">{
	      <comment type="block" pos:line="222" pos:column="15">/* Found the translation of MSGID1 in domain DOMAIN:
		 starting at RETVAL, RETLEN bytes.  */</comment>
	      <expr_stmt><expr><call><name pos:line="224" pos:column="15">FREE_BLOCKS<pos:position pos:line="224" pos:column="26"/></name> <argument_list pos:line="224" pos:column="27">(<argument><expr><name pos:line="224" pos:column="28">block_list<pos:position pos:line="224" pos:column="38"/></name></expr></argument>)<pos:position pos:line="224" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="40"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="225" pos:column="15">__set_errno<pos:position pos:line="225" pos:column="26"/></name> <argument_list pos:line="225" pos:column="27">(<argument><expr><name pos:line="225" pos:column="28">saved_errno<pos:position pos:line="225" pos:column="39"/></name></expr></argument>)<pos:position pos:line="225" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="41"/></expr_stmt>
<cpp:if pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">if<pos:position pos:line="226" pos:column="4"/></cpp:directive> <expr><name pos:line="226" pos:column="5">defined<pos:position pos:line="226" pos:column="12"/></name> <name pos:line="226" pos:column="13">HAVE_TSEARCH<pos:position pos:line="226" pos:column="25"/></name> <operator pos:line="226" pos:column="26">||<pos:position pos:line="226" pos:column="28"/></operator> <name pos:line="226" pos:column="29">defined<pos:position pos:line="226" pos:column="36"/></name> <name pos:line="226" pos:column="37">_LIBC<pos:position pos:line="226" pos:column="42"/></name></expr></cpp:if>
	      <if pos:line="227" pos:column="15">if <condition pos:line="227" pos:column="18">(<expr><name pos:line="227" pos:column="19">foundp<pos:position pos:line="227" pos:column="25"/></name> <operator pos:line="227" pos:column="26">==<pos:position pos:line="227" pos:column="28"/></operator> <name pos:line="227" pos:column="29">NULL<pos:position pos:line="227" pos:column="33"/></name></expr>)<pos:position pos:line="227" pos:column="34"/></condition><then pos:line="227" pos:column="34">
		<block pos:line="228" pos:column="17">{
		  <comment type="block" pos:line="229" pos:column="19">/* Create a new entry and add it to the search tree.  */</comment>
		  <decl_stmt><decl><type><name><name pos:line="230" pos:column="19">struct<pos:position pos:line="230" pos:column="25"/></name> <name pos:line="230" pos:column="26">known_translation_t<pos:position pos:line="230" pos:column="45"/></name></name> <modifier pos:line="230" pos:column="46">*<pos:position pos:line="230" pos:column="47"/></modifier></type><name pos:line="230" pos:column="47">newp<pos:position pos:line="230" pos:column="51"/></name></decl>;<pos:position pos:line="230" pos:column="52"/></decl_stmt>

		  <expr_stmt><expr><name pos:line="232" pos:column="19">newp<pos:position pos:line="232" pos:column="23"/></name> <operator pos:line="232" pos:column="24">=<pos:position pos:line="232" pos:column="25"/></operator> <operator pos:line="232" pos:column="26">(<pos:position pos:line="232" pos:column="27"/></operator>struct <name pos:line="232" pos:column="34">known_translation_t<pos:position pos:line="232" pos:column="53"/></name> <operator pos:line="232" pos:column="54">*<pos:position pos:line="232" pos:column="55"/></operator><operator pos:line="232" pos:column="55">)<pos:position pos:line="232" pos:column="56"/></operator>
		    <call><name pos:line="233" pos:column="21">malloc<pos:position pos:line="233" pos:column="27"/></name> <argument_list pos:line="233" pos:column="28">(<argument><expr><call><name pos:line="233" pos:column="29">offsetof<pos:position pos:line="233" pos:column="37"/></name> <argument_list pos:line="233" pos:column="38">(<argument><expr pos:line="233" pos:column="39">struct <name pos:line="233" pos:column="46">known_translation_t<pos:position pos:line="233" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="67">msgid<pos:position pos:line="233" pos:column="72"/></name></expr></argument>)<pos:position pos:line="233" pos:column="73"/></argument_list></call>
			    <operator pos:line="234" pos:column="29">+<pos:position pos:line="234" pos:column="30"/></operator> <name pos:line="234" pos:column="31">msgid_len<pos:position pos:line="234" pos:column="40"/></name> <operator pos:line="234" pos:column="41">+<pos:position pos:line="234" pos:column="42"/></operator> <name pos:line="234" pos:column="43">domainname_len<pos:position pos:line="234" pos:column="57"/></name> <operator pos:line="234" pos:column="58">+<pos:position pos:line="234" pos:column="59"/></operator> <literal type="number" pos:line="234" pos:column="60">1<pos:position pos:line="234" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="63"/></expr_stmt>
		  <if pos:line="235" pos:column="19">if <condition pos:line="235" pos:column="22">(<expr><name pos:line="235" pos:column="23">newp<pos:position pos:line="235" pos:column="27"/></name> <operator pos:line="235" pos:column="28">!=<pos:position pos:line="235" pos:column="30"/></operator> <name pos:line="235" pos:column="31">NULL<pos:position pos:line="235" pos:column="35"/></name></expr>)<pos:position pos:line="235" pos:column="36"/></condition><then pos:line="235" pos:column="36">
		    <block pos:line="236" pos:column="21">{
		      <expr_stmt><expr><name><name pos:line="237" pos:column="23">newp<pos:position pos:line="237" pos:column="27"/></name><operator pos:line="237" pos:column="27">-&gt;<pos:position pos:line="237" pos:column="32"/></operator><name pos:line="237" pos:column="29">domainname<pos:position pos:line="237" pos:column="39"/></name></name> <operator pos:line="237" pos:column="40">=<pos:position pos:line="237" pos:column="41"/></operator>
			<call><name pos:line="238" pos:column="25">mempcpy<pos:position pos:line="238" pos:column="32"/></name> <argument_list pos:line="238" pos:column="33">(<argument><expr><name><name pos:line="238" pos:column="34">newp<pos:position pos:line="238" pos:column="38"/></name><operator pos:line="238" pos:column="38">-&gt;<pos:position pos:line="238" pos:column="43"/></operator><name pos:line="238" pos:column="40">msgid<pos:position pos:line="238" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="47">msgid1<pos:position pos:line="238" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="55">msgid_len<pos:position pos:line="238" pos:column="64"/></name></expr></argument>)<pos:position pos:line="238" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="66"/></expr_stmt>
		      <expr_stmt><expr><call><name pos:line="239" pos:column="23">memcpy<pos:position pos:line="239" pos:column="29"/></name> <argument_list pos:line="239" pos:column="30">(<argument><expr><name><name pos:line="239" pos:column="31">newp<pos:position pos:line="239" pos:column="35"/></name><operator pos:line="239" pos:column="35">-&gt;<pos:position pos:line="239" pos:column="40"/></operator><name pos:line="239" pos:column="37">domainname<pos:position pos:line="239" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="49">domainname<pos:position pos:line="239" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="61">domainname_len<pos:position pos:line="239" pos:column="75"/></name> <operator pos:line="239" pos:column="76">+<pos:position pos:line="239" pos:column="77"/></operator> <literal type="number" pos:line="239" pos:column="78">1<pos:position pos:line="239" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="81"/></expr_stmt>
		      <expr_stmt><expr><name><name pos:line="240" pos:column="23">newp<pos:position pos:line="240" pos:column="27"/></name><operator pos:line="240" pos:column="27">-&gt;<pos:position pos:line="240" pos:column="32"/></operator><name pos:line="240" pos:column="29">category<pos:position pos:line="240" pos:column="37"/></name></name> <operator pos:line="240" pos:column="38">=<pos:position pos:line="240" pos:column="39"/></operator> <name pos:line="240" pos:column="40">category<pos:position pos:line="240" pos:column="48"/></name></expr>;<pos:position pos:line="240" pos:column="49"/></expr_stmt>
		      <expr_stmt><expr><name><name pos:line="241" pos:column="23">newp<pos:position pos:line="241" pos:column="27"/></name><operator pos:line="241" pos:column="27">-&gt;<pos:position pos:line="241" pos:column="32"/></operator><name pos:line="241" pos:column="29">counter<pos:position pos:line="241" pos:column="36"/></name></name> <operator pos:line="241" pos:column="37">=<pos:position pos:line="241" pos:column="38"/></operator> <name pos:line="241" pos:column="39">_nl_msg_cat_cntr<pos:position pos:line="241" pos:column="55"/></name></expr>;<pos:position pos:line="241" pos:column="56"/></expr_stmt>
		      <expr_stmt><expr><name><name pos:line="242" pos:column="23">newp<pos:position pos:line="242" pos:column="27"/></name><operator pos:line="242" pos:column="27">-&gt;<pos:position pos:line="242" pos:column="32"/></operator><name pos:line="242" pos:column="29">domain<pos:position pos:line="242" pos:column="35"/></name></name> <operator pos:line="242" pos:column="36">=<pos:position pos:line="242" pos:column="37"/></operator> <name pos:line="242" pos:column="38">domain<pos:position pos:line="242" pos:column="44"/></name></expr>;<pos:position pos:line="242" pos:column="45"/></expr_stmt>
		      <expr_stmt><expr><name><name pos:line="243" pos:column="23">newp<pos:position pos:line="243" pos:column="27"/></name><operator pos:line="243" pos:column="27">-&gt;<pos:position pos:line="243" pos:column="32"/></operator><name pos:line="243" pos:column="29">translation<pos:position pos:line="243" pos:column="40"/></name></name> <operator pos:line="243" pos:column="41">=<pos:position pos:line="243" pos:column="42"/></operator> <name pos:line="243" pos:column="43">retval<pos:position pos:line="243" pos:column="49"/></name></expr>;<pos:position pos:line="243" pos:column="50"/></expr_stmt>
		      <expr_stmt><expr><name><name pos:line="244" pos:column="23">newp<pos:position pos:line="244" pos:column="27"/></name><operator pos:line="244" pos:column="27">-&gt;<pos:position pos:line="244" pos:column="32"/></operator><name pos:line="244" pos:column="29">translation_length<pos:position pos:line="244" pos:column="47"/></name></name> <operator pos:line="244" pos:column="48">=<pos:position pos:line="244" pos:column="49"/></operator> <name pos:line="244" pos:column="50">retlen<pos:position pos:line="244" pos:column="56"/></name></expr>;<pos:position pos:line="244" pos:column="57"/></expr_stmt>

		      <comment type="block" pos:line="246" pos:column="23">/* Insert the entry in the search tree.  */</comment>
		      <expr_stmt><expr><name pos:line="247" pos:column="23">foundp<pos:position pos:line="247" pos:column="29"/></name> <operator pos:line="247" pos:column="30">=<pos:position pos:line="247" pos:column="31"/></operator> <operator pos:line="247" pos:column="32">(<pos:position pos:line="247" pos:column="33"/></operator>struct <name pos:line="247" pos:column="40">known_translation_t<pos:position pos:line="247" pos:column="59"/></name> <operator pos:line="247" pos:column="60">*<pos:position pos:line="247" pos:column="61"/></operator><operator pos:line="247" pos:column="61">*<pos:position pos:line="247" pos:column="62"/></operator><operator pos:line="247" pos:column="62">)<pos:position pos:line="247" pos:column="63"/></operator>
			<call><name pos:line="248" pos:column="25">tsearch<pos:position pos:line="248" pos:column="32"/></name> <argument_list pos:line="248" pos:column="33">(<argument><expr><name pos:line="248" pos:column="34">newp<pos:position pos:line="248" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="248" pos:column="40">&amp;<pos:position pos:line="248" pos:column="45"/></operator><name pos:line="248" pos:column="41">root<pos:position pos:line="248" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="47">transcmp<pos:position pos:line="248" pos:column="55"/></name></expr></argument>)<pos:position pos:line="248" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="57"/></expr_stmt>
		      <if pos:line="249" pos:column="23">if <condition pos:line="249" pos:column="26">(<expr><name pos:line="249" pos:column="27">foundp<pos:position pos:line="249" pos:column="33"/></name> <operator pos:line="249" pos:column="34">==<pos:position pos:line="249" pos:column="36"/></operator> <name pos:line="249" pos:column="37">NULL<pos:position pos:line="249" pos:column="41"/></name>
			  <operator pos:line="250" pos:column="27">||<pos:position pos:line="250" pos:column="29"/></operator> <call><name pos:line="250" pos:column="30">__builtin_expect<pos:position pos:line="250" pos:column="46"/></name> <argument_list pos:line="250" pos:column="47">(<argument><expr><operator pos:line="250" pos:column="48">*<pos:position pos:line="250" pos:column="49"/></operator><name pos:line="250" pos:column="49">foundp<pos:position pos:line="250" pos:column="55"/></name> <operator pos:line="250" pos:column="56">!=<pos:position pos:line="250" pos:column="58"/></operator> <name pos:line="250" pos:column="59">newp<pos:position pos:line="250" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="250" pos:column="65">0<pos:position pos:line="250" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="250" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="250" pos:column="68"/></condition><then pos:line="250" pos:column="68">
			<comment type="block" pos:line="251" pos:column="25">/* The insert failed.  */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="252" pos:column="25">free<pos:position pos:line="252" pos:column="29"/></name> <argument_list pos:line="252" pos:column="30">(<argument><expr><name pos:line="252" pos:column="31">newp<pos:position pos:line="252" pos:column="35"/></name></expr></argument>)<pos:position pos:line="252" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="37"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="253" pos:column="22"/></block></then></if>
		}<pos:position pos:line="254" pos:column="18"/></block></then>
	      <else pos:line="255" pos:column="15">else
		<block pos:line="256" pos:column="17">{
		  <comment type="block" pos:line="257" pos:column="19">/* We can update the existing entry.  */</comment>
		  <expr_stmt><expr><name><operator pos:line="258" pos:column="19">(<pos:position pos:line="258" pos:column="20"/></operator><operator pos:line="258" pos:column="20">*<pos:position pos:line="258" pos:column="21"/></operator><name pos:line="258" pos:column="21">foundp<pos:position pos:line="258" pos:column="27"/></name><operator pos:line="258" pos:column="27">)<pos:position pos:line="258" pos:column="28"/></operator><operator pos:line="258" pos:column="28">-&gt;<pos:position pos:line="258" pos:column="33"/></operator><name pos:line="258" pos:column="30">counter<pos:position pos:line="258" pos:column="37"/></name></name> <operator pos:line="258" pos:column="38">=<pos:position pos:line="258" pos:column="39"/></operator> <name pos:line="258" pos:column="40">_nl_msg_cat_cntr<pos:position pos:line="258" pos:column="56"/></name></expr>;<pos:position pos:line="258" pos:column="57"/></expr_stmt>
		  <expr_stmt><expr><name><operator pos:line="259" pos:column="19">(<pos:position pos:line="259" pos:column="20"/></operator><operator pos:line="259" pos:column="20">*<pos:position pos:line="259" pos:column="21"/></operator><name pos:line="259" pos:column="21">foundp<pos:position pos:line="259" pos:column="27"/></name><operator pos:line="259" pos:column="27">)<pos:position pos:line="259" pos:column="28"/></operator><operator pos:line="259" pos:column="28">-&gt;<pos:position pos:line="259" pos:column="33"/></operator><name pos:line="259" pos:column="30">domain<pos:position pos:line="259" pos:column="36"/></name></name> <operator pos:line="259" pos:column="37">=<pos:position pos:line="259" pos:column="38"/></operator> <name pos:line="259" pos:column="39">domain<pos:position pos:line="259" pos:column="45"/></name></expr>;<pos:position pos:line="259" pos:column="46"/></expr_stmt>
		  <expr_stmt><expr><name><operator pos:line="260" pos:column="19">(<pos:position pos:line="260" pos:column="20"/></operator><operator pos:line="260" pos:column="20">*<pos:position pos:line="260" pos:column="21"/></operator><name pos:line="260" pos:column="21">foundp<pos:position pos:line="260" pos:column="27"/></name><operator pos:line="260" pos:column="27">)<pos:position pos:line="260" pos:column="28"/></operator><operator pos:line="260" pos:column="28">-&gt;<pos:position pos:line="260" pos:column="33"/></operator><name pos:line="260" pos:column="30">translation<pos:position pos:line="260" pos:column="41"/></name></name> <operator pos:line="260" pos:column="42">=<pos:position pos:line="260" pos:column="43"/></operator> <name pos:line="260" pos:column="44">retval<pos:position pos:line="260" pos:column="50"/></name></expr>;<pos:position pos:line="260" pos:column="51"/></expr_stmt>
		  <expr_stmt><expr><name><operator pos:line="261" pos:column="19">(<pos:position pos:line="261" pos:column="20"/></operator><operator pos:line="261" pos:column="20">*<pos:position pos:line="261" pos:column="21"/></operator><name pos:line="261" pos:column="21">foundp<pos:position pos:line="261" pos:column="27"/></name><operator pos:line="261" pos:column="27">)<pos:position pos:line="261" pos:column="28"/></operator><operator pos:line="261" pos:column="28">-&gt;<pos:position pos:line="261" pos:column="33"/></operator><name pos:line="261" pos:column="30">translation_length<pos:position pos:line="261" pos:column="48"/></name></name> <operator pos:line="261" pos:column="49">=<pos:position pos:line="261" pos:column="50"/></operator> <name pos:line="261" pos:column="51">retlen<pos:position pos:line="261" pos:column="57"/></name></expr>;<pos:position pos:line="261" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="262" pos:column="18"/></block></else></if>
<cpp:endif pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">endif<pos:position pos:line="263" pos:column="7"/></cpp:directive></cpp:endif>
	      <comment type="block" pos:line="264" pos:column="15">/* Now deal with plural.  */</comment>
	      <if pos:line="265" pos:column="15">if <condition pos:line="265" pos:column="18">(<expr><name pos:line="265" pos:column="19">plural<pos:position pos:line="265" pos:column="25"/></name></expr>)<pos:position pos:line="265" pos:column="26"/></condition><then pos:line="265" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="266" pos:column="17">retval<pos:position pos:line="266" pos:column="23"/></name> <operator pos:line="266" pos:column="24">=<pos:position pos:line="266" pos:column="25"/></operator> <call><name pos:line="266" pos:column="26">plural_lookup<pos:position pos:line="266" pos:column="39"/></name> <argument_list pos:line="266" pos:column="40">(<argument><expr><name pos:line="266" pos:column="41">domain<pos:position pos:line="266" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="49">n<pos:position pos:line="266" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="52">retval<pos:position pos:line="266" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="60">retlen<pos:position pos:line="266" pos:column="66"/></name></expr></argument>)<pos:position pos:line="266" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="68"/></expr_stmt></block></then></if>

	      <expr_stmt><expr><call><name pos:line="268" pos:column="15">__libc_rwlock_unlock<pos:position pos:line="268" pos:column="35"/></name> <argument_list pos:line="268" pos:column="36">(<argument><expr><name pos:line="268" pos:column="37">_nl_state_lock<pos:position pos:line="268" pos:column="51"/></name></expr></argument>)<pos:position pos:line="268" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="53"/></expr_stmt>
	      <return pos:line="269" pos:column="15">return <expr><name pos:line="269" pos:column="22">retval<pos:position pos:line="269" pos:column="28"/></name></expr>;<pos:position pos:line="269" pos:column="29"/></return>
	    }<pos:position pos:line="270" pos:column="14"/></block></then></if>
	}<pos:position pos:line="271" pos:column="10"/></block></then></if>
    }<pos:position pos:line="272" pos:column="6"/></block></while>
  <comment type="block" pos:line="273" pos:column="3">/* NOTREACHED */</comment>
}<pos:position pos:line="274" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_400_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_crypt_hdr<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">p<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">set_empty_signas<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">crypt_app<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">smime_cryptalg<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><name pos:line="3" pos:column="23">LONG_STRING<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name> <init pos:line="3" pos:column="36">= <expr><literal type="string" pos:line="3" pos:column="38">"\0"<pos:position pos:line="3" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">sign_as<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><name pos:line="4" pos:column="16">LONG_STRING<pos:position pos:line="4" pos:column="27"/></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name> <init pos:line="4" pos:column="29">= <expr><literal type="string" pos:line="4" pos:column="31">"\0"<pos:position pos:line="4" pos:column="35"/></literal></expr></init></decl>, <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="38">q<pos:position pos:line="4" pos:column="39"/></name></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">flags<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">WithCrypto<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">p<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <call><name pos:line="10" pos:column="7">skip_email_wsp<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">p<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init pos:line="11" pos:column="8">;<pos:position pos:line="11" pos:column="9"/></init> <condition><expr><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">p<pos:position pos:line="11" pos:column="12"/></name></expr>;<pos:position pos:line="11" pos:column="13"/></condition> <incr><expr><name pos:line="11" pos:column="14">p<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">++<pos:position pos:line="11" pos:column="17"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="18"/></control>
  <block pos:line="12" pos:column="3">{

    <switch pos:line="14" pos:column="5">switch <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">p<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition>
    <block pos:line="15" pos:column="5">{
      <case pos:line="16" pos:column="7">case <expr><literal type="char" pos:line="16" pos:column="12">'e'<pos:position pos:line="16" pos:column="15"/></literal></expr>:<pos:position pos:line="16" pos:column="16"/></case>
      <case pos:line="17" pos:column="7">case <expr><literal type="char" pos:line="17" pos:column="12">'E'<pos:position pos:line="17" pos:column="15"/></literal></expr>:<pos:position pos:line="17" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="18" pos:column="9">flags<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">|=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">ENCRYPT<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>

      <case pos:line="21" pos:column="7">case <expr><literal type="char" pos:line="21" pos:column="12">'o'<pos:position pos:line="21" pos:column="15"/></literal></expr>:<pos:position pos:line="21" pos:column="16"/></case>
      <case pos:line="22" pos:column="7">case <expr><literal type="char" pos:line="22" pos:column="12">'O'<pos:position pos:line="22" pos:column="15"/></literal></expr>:<pos:position pos:line="22" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="23" pos:column="9">flags<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">|=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">OPPENCRYPT<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
        <break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>

      <case pos:line="26" pos:column="7">case <expr><literal type="char" pos:line="26" pos:column="12">'s'<pos:position pos:line="26" pos:column="15"/></literal></expr>:<pos:position pos:line="26" pos:column="16"/></case>
      <case pos:line="27" pos:column="7">case <expr><literal type="char" pos:line="27" pos:column="12">'S'<pos:position pos:line="27" pos:column="15"/></literal></expr>:<pos:position pos:line="27" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="28" pos:column="9">flags<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">|=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">SIGN<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">q<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">sign_as<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></operator><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">p<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">+<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal><operator pos:line="31" pos:column="18">)<pos:position pos:line="31" pos:column="19"/></operator> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <literal type="char" pos:line="31" pos:column="23">'&lt;'<pos:position pos:line="31" pos:column="29"/></literal></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27">
        <block pos:line="32" pos:column="9">{
          <for pos:line="33" pos:column="11">for <control pos:line="33" pos:column="15">(<init><expr><name pos:line="33" pos:column="16">p<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">+=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">2<pos:position pos:line="33" pos:column="22"/></literal></expr>;<pos:position pos:line="33" pos:column="23"/></init>
	       <condition><expr><operator pos:line="34" pos:column="16">*<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">p<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&amp;&amp;<pos:position pos:line="34" pos:column="29"/></operator> <operator pos:line="34" pos:column="22">*<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">p<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">!=<pos:position pos:line="34" pos:column="27"/></operator> <literal type="char" pos:line="34" pos:column="28">'&gt;'<pos:position pos:line="34" pos:column="34"/></literal> <operator pos:line="34" pos:column="32">&amp;&amp;<pos:position pos:line="34" pos:column="42"/></operator> <name pos:line="34" pos:column="35">q<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">&lt;<pos:position pos:line="34" pos:column="41"/></operator> <name pos:line="34" pos:column="39">sign_as<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">+<pos:position pos:line="34" pos:column="48"/></operator> <sizeof pos:line="34" pos:column="49">sizeof <argument_list pos:line="34" pos:column="56">(<argument><expr><name pos:line="34" pos:column="57">sign_as<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></sizeof> <operator pos:line="34" pos:column="66">-<pos:position pos:line="34" pos:column="67"/></operator> <literal type="number" pos:line="34" pos:column="68">1<pos:position pos:line="34" pos:column="69"/></literal></expr>;<pos:position pos:line="34" pos:column="70"/></condition>
               <incr><expr><operator pos:line="35" pos:column="16">*<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">q<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">++<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <operator pos:line="35" pos:column="23">*<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">p<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">++<pos:position pos:line="35" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="28"/></control>
	    <block type="pseudo"><empty_stmt pos:line="36" pos:column="13">;<pos:position pos:line="36" pos:column="14"/></empty_stmt></block></for>

          <if pos:line="38" pos:column="11">if <condition pos:line="38" pos:column="14">(<expr><operator pos:line="38" pos:column="15">*<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">p<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">!=<pos:position pos:line="38" pos:column="19"/></operator><literal type="char" pos:line="38" pos:column="19">'&gt;'<pos:position pos:line="38" pos:column="25"/></literal></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23">
          <block pos:line="39" pos:column="11">{
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">mutt_error<pos:position pos:line="40" pos:column="23"/></name></type> <name pos:line="40" pos:column="24">_<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><literal type="string" pos:line="40" pos:column="26">"Illegal crypto header"<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></decl>;<pos:position pos:line="40" pos:column="51"/></decl_stmt>
            <return pos:line="41" pos:column="13">return <expr><literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr>;<pos:position pos:line="41" pos:column="22"/></return>
          }<pos:position pos:line="42" pos:column="12"/></block></then></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="45" pos:column="9">*<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">q<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <literal type="char" pos:line="45" pos:column="14">'\0'<pos:position pos:line="45" pos:column="18"/></literal></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>
        <break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>

      <comment type="block" pos:line="48" pos:column="7">/* This used to be the micalg parameter.
       *
       * It's no longer needed, so we just skip the parameter in order
       * to be able to recall old messages.
       */</comment>
      <case pos:line="53" pos:column="7">case <expr><literal type="char" pos:line="53" pos:column="12">'m'<pos:position pos:line="53" pos:column="15"/></literal></expr>:<pos:position pos:line="53" pos:column="16"/></case>
      <case pos:line="54" pos:column="7">case <expr><literal type="char" pos:line="54" pos:column="12">'M'<pos:position pos:line="54" pos:column="15"/></literal></expr>:<pos:position pos:line="54" pos:column="16"/></case>
        <if pos:line="55" pos:column="9">if<condition pos:line="55" pos:column="11">(<expr><operator pos:line="55" pos:column="12">*<pos:position pos:line="55" pos:column="13"/></operator><operator pos:line="55" pos:column="13">(<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">p<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">+<pos:position pos:line="55" pos:column="16"/></operator><literal type="number" pos:line="55" pos:column="16">1<pos:position pos:line="55" pos:column="17"/></literal><operator pos:line="55" pos:column="17">)<pos:position pos:line="55" pos:column="18"/></operator> <operator pos:line="55" pos:column="19">==<pos:position pos:line="55" pos:column="21"/></operator> <literal type="char" pos:line="55" pos:column="22">'&lt;'<pos:position pos:line="55" pos:column="28"/></literal></expr>)<pos:position pos:line="55" pos:column="26"/></condition><then pos:line="55" pos:column="26">
        <block pos:line="56" pos:column="9">{
	  <for pos:line="57" pos:column="11">for <control pos:line="57" pos:column="15">(<init><expr><name pos:line="57" pos:column="16">p<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">+=<pos:position pos:line="57" pos:column="20"/></operator> <literal type="number" pos:line="57" pos:column="21">2<pos:position pos:line="57" pos:column="22"/></literal></expr>;<pos:position pos:line="57" pos:column="23"/></init> <condition><expr><operator pos:line="57" pos:column="24">*<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="25">p<pos:position pos:line="57" pos:column="26"/></name> <operator pos:line="57" pos:column="27">&amp;&amp;<pos:position pos:line="57" pos:column="37"/></operator> <operator pos:line="57" pos:column="30">*<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="31">p<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">!=<pos:position pos:line="57" pos:column="35"/></operator> <literal type="char" pos:line="57" pos:column="36">'&gt;'<pos:position pos:line="57" pos:column="42"/></literal></expr>;<pos:position pos:line="57" pos:column="40"/></condition> <incr><expr><name pos:line="57" pos:column="41">p<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">++<pos:position pos:line="57" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="45"/></control>
	    <block type="pseudo"><empty_stmt pos:line="58" pos:column="13">;<pos:position pos:line="58" pos:column="14"/></empty_stmt></block></for>
	  <if pos:line="59" pos:column="11">if<condition pos:line="59" pos:column="13">(<expr><operator pos:line="59" pos:column="14">*<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">p<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">!=<pos:position pos:line="59" pos:column="19"/></operator> <literal type="char" pos:line="59" pos:column="20">'&gt;'<pos:position pos:line="59" pos:column="26"/></literal></expr>)<pos:position pos:line="59" pos:column="24"/></condition><then pos:line="59" pos:column="24">
	  <block pos:line="60" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="61" pos:column="13">mutt_error<pos:position pos:line="61" pos:column="23"/></name></type> <name pos:line="61" pos:column="24">_<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><literal type="string" pos:line="61" pos:column="26">"Illegal crypto header"<pos:position pos:line="61" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></decl>;<pos:position pos:line="61" pos:column="51"/></decl_stmt>
	    <return pos:line="62" pos:column="13">return <expr><literal type="number" pos:line="62" pos:column="20">0<pos:position pos:line="62" pos:column="21"/></literal></expr>;<pos:position pos:line="62" pos:column="22"/></return>
	  }<pos:position pos:line="63" pos:column="12"/></block></then></if>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

	<break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break>


      <case pos:line="69" pos:column="7">case <expr><literal type="char" pos:line="69" pos:column="12">'c'<pos:position pos:line="69" pos:column="15"/></literal></expr>:<pos:position pos:line="69" pos:column="16"/></case>
      <case pos:line="70" pos:column="7">case <expr><literal type="char" pos:line="70" pos:column="12">'C'<pos:position pos:line="70" pos:column="15"/></literal></expr>:<pos:position pos:line="70" pos:column="16"/></case>
   	<expr_stmt><expr><name pos:line="71" pos:column="9">q<pos:position pos:line="71" pos:column="10"/></name> <operator pos:line="71" pos:column="11">=<pos:position pos:line="71" pos:column="12"/></operator> <name pos:line="71" pos:column="13">smime_cryptalg<pos:position pos:line="71" pos:column="27"/></name></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>

        <if pos:line="73" pos:column="9">if<condition pos:line="73" pos:column="11">(<expr><operator pos:line="73" pos:column="12">*<pos:position pos:line="73" pos:column="13"/></operator><operator pos:line="73" pos:column="13">(<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">p<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">+<pos:position pos:line="73" pos:column="16"/></operator><literal type="number" pos:line="73" pos:column="16">1<pos:position pos:line="73" pos:column="17"/></literal><operator pos:line="73" pos:column="17">)<pos:position pos:line="73" pos:column="18"/></operator> <operator pos:line="73" pos:column="19">==<pos:position pos:line="73" pos:column="21"/></operator> <literal type="char" pos:line="73" pos:column="22">'&lt;'<pos:position pos:line="73" pos:column="28"/></literal></expr>)<pos:position pos:line="73" pos:column="26"/></condition><then pos:line="73" pos:column="26">
	<block pos:line="74" pos:column="9">{
	  <for pos:line="75" pos:column="11">for<control pos:line="75" pos:column="14">(<init><expr><name pos:line="75" pos:column="15">p<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">+=<pos:position pos:line="75" pos:column="19"/></operator> <literal type="number" pos:line="75" pos:column="20">2<pos:position pos:line="75" pos:column="21"/></literal></expr>;<pos:position pos:line="75" pos:column="22"/></init> <condition><expr><operator pos:line="75" pos:column="23">*<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">p<pos:position pos:line="75" pos:column="25"/></name> <operator pos:line="75" pos:column="26">&amp;&amp;<pos:position pos:line="75" pos:column="36"/></operator> <operator pos:line="75" pos:column="29">*<pos:position pos:line="75" pos:column="30"/></operator><name pos:line="75" pos:column="30">p<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">!=<pos:position pos:line="75" pos:column="34"/></operator> <literal type="char" pos:line="75" pos:column="35">'&gt;'<pos:position pos:line="75" pos:column="41"/></literal> <operator pos:line="75" pos:column="39">&amp;&amp;<pos:position pos:line="75" pos:column="49"/></operator> <name pos:line="75" pos:column="42">q<pos:position pos:line="75" pos:column="43"/></name> <operator pos:line="75" pos:column="44">&lt;<pos:position pos:line="75" pos:column="48"/></operator> <name pos:line="75" pos:column="46">smime_cryptalg<pos:position pos:line="75" pos:column="60"/></name> <operator pos:line="75" pos:column="61">+<pos:position pos:line="75" pos:column="62"/></operator> <sizeof pos:line="75" pos:column="63">sizeof<argument_list pos:line="75" pos:column="69">(<argument><expr><name pos:line="75" pos:column="70">smime_cryptalg<pos:position pos:line="75" pos:column="84"/></name></expr></argument>)<pos:position pos:line="75" pos:column="85"/></argument_list></sizeof> <operator pos:line="75" pos:column="86">-<pos:position pos:line="75" pos:column="87"/></operator> <literal type="number" pos:line="75" pos:column="88">1<pos:position pos:line="75" pos:column="89"/></literal></expr>;<pos:position pos:line="75" pos:column="90"/></condition>
	      <incr><expr><operator pos:line="76" pos:column="15">*<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="16">q<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">++<pos:position pos:line="76" pos:column="19"/></operator> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <operator pos:line="76" pos:column="22">*<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">p<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">++<pos:position pos:line="76" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="76" pos:column="27"/></control>
	    <block type="pseudo"><empty_stmt pos:line="77" pos:column="13">;<pos:position pos:line="77" pos:column="14"/></empty_stmt></block></for>

	  <if pos:line="79" pos:column="11">if<condition pos:line="79" pos:column="13">(<expr><operator pos:line="79" pos:column="14">*<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="15">p<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">!=<pos:position pos:line="79" pos:column="19"/></operator> <literal type="char" pos:line="79" pos:column="20">'&gt;'<pos:position pos:line="79" pos:column="26"/></literal></expr>)<pos:position pos:line="79" pos:column="24"/></condition><then pos:line="79" pos:column="24">
	  <block pos:line="80" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="81" pos:column="13">mutt_error<pos:position pos:line="81" pos:column="23"/></name></type> <name pos:line="81" pos:column="24">_<pos:position pos:line="81" pos:column="25"/></name><argument_list pos:line="81" pos:column="25">(<argument><expr><literal type="string" pos:line="81" pos:column="26">"Illegal S/MIME header"<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="50"/></argument_list></decl>;<pos:position pos:line="81" pos:column="51"/></decl_stmt>
	    <return pos:line="82" pos:column="13">return <expr><literal type="number" pos:line="82" pos:column="20">0<pos:position pos:line="82" pos:column="21"/></literal></expr>;<pos:position pos:line="82" pos:column="22"/></return>
	  }<pos:position pos:line="83" pos:column="12"/></block></then></if>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="86" pos:column="9">*<pos:position pos:line="86" pos:column="10"/></operator><name pos:line="86" pos:column="10">q<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <literal type="char" pos:line="86" pos:column="14">'\0'<pos:position pos:line="86" pos:column="18"/></literal></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
	<break pos:line="87" pos:column="9">break;<pos:position pos:line="87" pos:column="15"/></break>

      <case pos:line="89" pos:column="7">case <expr><literal type="char" pos:line="89" pos:column="12">'i'<pos:position pos:line="89" pos:column="15"/></literal></expr>:<pos:position pos:line="89" pos:column="16"/></case>
      <case pos:line="90" pos:column="7">case <expr><literal type="char" pos:line="90" pos:column="12">'I'<pos:position pos:line="90" pos:column="15"/></literal></expr>:<pos:position pos:line="90" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="91" pos:column="9">flags<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">|=<pos:position pos:line="91" pos:column="17"/></operator> <name pos:line="91" pos:column="18">INLINE<pos:position pos:line="91" pos:column="24"/></name></expr>;<pos:position pos:line="91" pos:column="25"/></expr_stmt>
	<break pos:line="92" pos:column="9">break;<pos:position pos:line="92" pos:column="15"/></break>

      <default pos:line="94" pos:column="7">default:<pos:position pos:line="94" pos:column="15"/></default>
        <decl_stmt><decl><type><name pos:line="95" pos:column="9">mutt_error<pos:position pos:line="95" pos:column="19"/></name></type> <name pos:line="95" pos:column="20">_<pos:position pos:line="95" pos:column="21"/></name><argument_list pos:line="95" pos:column="21">(<argument><expr><literal type="string" pos:line="95" pos:column="22">"Illegal crypto header"<pos:position pos:line="95" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="46"/></argument_list></decl>;<pos:position pos:line="95" pos:column="47"/></decl_stmt>
        <return pos:line="96" pos:column="9">return <expr><literal type="number" pos:line="96" pos:column="16">0<pos:position pos:line="96" pos:column="17"/></literal></expr>;<pos:position pos:line="96" pos:column="18"/></return>
    }<pos:position pos:line="97" pos:column="6"/></block></switch>

  }<pos:position pos:line="99" pos:column="4"/></block></for>

  <comment type="block" pos:line="101" pos:column="3">/* the cryptalg field must not be empty */</comment>
  <if pos:line="102" pos:column="3">if <condition pos:line="102" pos:column="6">(<expr><operator pos:line="102" pos:column="7">(<pos:position pos:line="102" pos:column="8"/></operator><name pos:line="102" pos:column="8">WithCrypto<pos:position pos:line="102" pos:column="18"/></name> <operator pos:line="102" pos:column="19">&amp;<pos:position pos:line="102" pos:column="24"/></operator> <name pos:line="102" pos:column="21">APPLICATION_SMIME<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">)<pos:position pos:line="102" pos:column="39"/></operator> <operator pos:line="102" pos:column="40">&amp;&amp;<pos:position pos:line="102" pos:column="50"/></operator> <operator pos:line="102" pos:column="43">*<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="44">smime_cryptalg<pos:position pos:line="102" pos:column="58"/></name></expr>)<pos:position pos:line="102" pos:column="59"/></condition><then pos:line="102" pos:column="59">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="5">mutt_str_replace<pos:position pos:line="103" pos:column="21"/></name> <argument_list pos:line="103" pos:column="22">(<argument><expr><operator pos:line="103" pos:column="23">&amp;<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="24">SmimeCryptAlg<pos:position pos:line="103" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="39">smime_cryptalg<pos:position pos:line="103" pos:column="53"/></name></expr></argument>)<pos:position pos:line="103" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="55"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="105" pos:column="3">/* Set {Smime,Pgp}SignAs, if desired. */</comment>

  <if pos:line="107" pos:column="3">if <condition pos:line="107" pos:column="6">(<expr><operator pos:line="107" pos:column="7">(<pos:position pos:line="107" pos:column="8"/></operator><name pos:line="107" pos:column="8">WithCrypto<pos:position pos:line="107" pos:column="18"/></name> <operator pos:line="107" pos:column="19">&amp;<pos:position pos:line="107" pos:column="24"/></operator> <name pos:line="107" pos:column="21">APPLICATION_PGP<pos:position pos:line="107" pos:column="36"/></name><operator pos:line="107" pos:column="36">)<pos:position pos:line="107" pos:column="37"/></operator> <operator pos:line="107" pos:column="38">&amp;&amp;<pos:position pos:line="107" pos:column="48"/></operator> <operator pos:line="107" pos:column="41">(<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="42">crypt_app<pos:position pos:line="107" pos:column="51"/></name> <operator pos:line="107" pos:column="52">==<pos:position pos:line="107" pos:column="54"/></operator> <name pos:line="107" pos:column="55">APPLICATION_PGP<pos:position pos:line="107" pos:column="70"/></name><operator pos:line="107" pos:column="70">)<pos:position pos:line="107" pos:column="71"/></operator>
      <operator pos:line="108" pos:column="7">&amp;&amp;<pos:position pos:line="108" pos:column="17"/></operator> <operator pos:line="108" pos:column="10">(<pos:position pos:line="108" pos:column="11"/></operator><name pos:line="108" pos:column="11">flags<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">&amp;<pos:position pos:line="108" pos:column="22"/></operator> <name pos:line="108" pos:column="19">SIGN<pos:position pos:line="108" pos:column="23"/></name><operator pos:line="108" pos:column="23">)<pos:position pos:line="108" pos:column="24"/></operator>
      <operator pos:line="109" pos:column="7">&amp;&amp;<pos:position pos:line="109" pos:column="17"/></operator> <operator pos:line="109" pos:column="10">(<pos:position pos:line="109" pos:column="11"/></operator><name pos:line="109" pos:column="11">set_empty_signas<pos:position pos:line="109" pos:column="27"/></name> <operator pos:line="109" pos:column="28">||<pos:position pos:line="109" pos:column="30"/></operator> <operator pos:line="109" pos:column="31">*<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="32">sign_as<pos:position pos:line="109" pos:column="39"/></name><operator pos:line="109" pos:column="39">)<pos:position pos:line="109" pos:column="40"/></operator></expr>)<pos:position pos:line="109" pos:column="41"/></condition><then pos:line="109" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="5">mutt_str_replace<pos:position pos:line="110" pos:column="21"/></name> <argument_list pos:line="110" pos:column="22">(<argument><expr><operator pos:line="110" pos:column="23">&amp;<pos:position pos:line="110" pos:column="28"/></operator><name pos:line="110" pos:column="24">PgpSignAs<pos:position pos:line="110" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="35">sign_as<pos:position pos:line="110" pos:column="42"/></name></expr></argument>)<pos:position pos:line="110" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="44"/></expr_stmt></block></then></if>

  <if pos:line="112" pos:column="3">if <condition pos:line="112" pos:column="6">(<expr><operator pos:line="112" pos:column="7">(<pos:position pos:line="112" pos:column="8"/></operator><name pos:line="112" pos:column="8">WithCrypto<pos:position pos:line="112" pos:column="18"/></name> <operator pos:line="112" pos:column="19">&amp;<pos:position pos:line="112" pos:column="24"/></operator> <name pos:line="112" pos:column="21">APPLICATION_SMIME<pos:position pos:line="112" pos:column="38"/></name><operator pos:line="112" pos:column="38">)<pos:position pos:line="112" pos:column="39"/></operator> <operator pos:line="112" pos:column="40">&amp;&amp;<pos:position pos:line="112" pos:column="50"/></operator> <operator pos:line="112" pos:column="43">(<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="44">crypt_app<pos:position pos:line="112" pos:column="53"/></name> <operator pos:line="112" pos:column="54">==<pos:position pos:line="112" pos:column="56"/></operator> <name pos:line="112" pos:column="57">APPLICATION_SMIME<pos:position pos:line="112" pos:column="74"/></name><operator pos:line="112" pos:column="74">)<pos:position pos:line="112" pos:column="75"/></operator>
      <operator pos:line="113" pos:column="7">&amp;&amp;<pos:position pos:line="113" pos:column="17"/></operator> <operator pos:line="113" pos:column="10">(<pos:position pos:line="113" pos:column="11"/></operator><name pos:line="113" pos:column="11">flags<pos:position pos:line="113" pos:column="16"/></name> <operator pos:line="113" pos:column="17">&amp;<pos:position pos:line="113" pos:column="22"/></operator> <name pos:line="113" pos:column="19">SIGN<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">)<pos:position pos:line="113" pos:column="24"/></operator>
      <operator pos:line="114" pos:column="7">&amp;&amp;<pos:position pos:line="114" pos:column="17"/></operator> <operator pos:line="114" pos:column="10">(<pos:position pos:line="114" pos:column="11"/></operator><name pos:line="114" pos:column="11">set_empty_signas<pos:position pos:line="114" pos:column="27"/></name> <operator pos:line="114" pos:column="28">||<pos:position pos:line="114" pos:column="30"/></operator> <operator pos:line="114" pos:column="31">*<pos:position pos:line="114" pos:column="32"/></operator><name pos:line="114" pos:column="32">sign_as<pos:position pos:line="114" pos:column="39"/></name><operator pos:line="114" pos:column="39">)<pos:position pos:line="114" pos:column="40"/></operator></expr>)<pos:position pos:line="114" pos:column="41"/></condition><then pos:line="114" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="5">mutt_str_replace<pos:position pos:line="115" pos:column="21"/></name> <argument_list pos:line="115" pos:column="22">(<argument><expr><operator pos:line="115" pos:column="23">&amp;<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="24">SmimeDefaultKey<pos:position pos:line="115" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="41">sign_as<pos:position pos:line="115" pos:column="48"/></name></expr></argument>)<pos:position pos:line="115" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="50"/></expr_stmt></block></then></if>

  <return pos:line="117" pos:column="3">return <expr><name pos:line="117" pos:column="10">flags<pos:position pos:line="117" pos:column="15"/></name></expr>;<pos:position pos:line="117" pos:column="16"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

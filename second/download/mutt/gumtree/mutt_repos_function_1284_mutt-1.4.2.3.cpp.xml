<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1284_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cmd_parse_expunge<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">IMAP_DATA<pos:position pos:line="1" pos:column="41"/></name><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type> <name pos:line="1" pos:column="43">idata<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">s<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">expno<pos:position pos:line="3" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="14">cur<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HEADER<pos:position pos:line="4" pos:column="9"/></name><modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type> <name pos:line="4" pos:column="11">h<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">dprint<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="number" pos:line="6" pos:column="11">2<pos:position pos:line="6" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">debugfile<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">,<pos:position pos:line="6" pos:column="25"/></operator> <literal type="string" pos:line="6" pos:column="26">"Handling EXPUNGE\n"<pos:position pos:line="6" pos:column="46"/></literal><operator pos:line="6" pos:column="46">)<pos:position pos:line="6" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">expno<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">atoi<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* walk headers, zero seqno of expunged message, decrement seqno of those
   * above. Possibly we could avoid walking the whole list by resorting
   * and guessing a good starting point, but I'm guessing the resort would
   * nullify the gains */</comment>
  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">cur<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">cur<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&lt;<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="23">idata<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">ctx<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">msgcount<pos:position pos:line="14" pos:column="43"/></name></name></expr>;<pos:position pos:line="14" pos:column="44"/></condition> <incr><expr><name pos:line="14" pos:column="45">cur<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">++<pos:position pos:line="14" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="51"/></control>
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">h<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <name><name pos:line="16" pos:column="9">idata<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">ctx<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">hdrs<pos:position pos:line="16" pos:column="25"/></name><index pos:line="16" pos:column="25">[<expr><name pos:line="16" pos:column="26">cur<pos:position pos:line="16" pos:column="29"/></name></expr>]<pos:position pos:line="16" pos:column="30"/></index></name></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">h<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">index<pos:position pos:line="18" pos:column="17"/></name></name><operator pos:line="18" pos:column="17">+<pos:position pos:line="18" pos:column="18"/></operator><literal type="number" pos:line="18" pos:column="18">1<pos:position pos:line="18" pos:column="19"/></literal> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">expno<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="7">h<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">index<pos:position pos:line="19" pos:column="15"/></name></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <operator pos:line="19" pos:column="18">-<pos:position pos:line="19" pos:column="19"/></operator><literal type="number" pos:line="19" pos:column="19">1<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name><name pos:line="20" pos:column="14">h<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">index<pos:position pos:line="20" pos:column="22"/></name></name><operator pos:line="20" pos:column="22">+<pos:position pos:line="20" pos:column="23"/></operator><literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal> <operator pos:line="20" pos:column="25">&gt;<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="27">expno<pos:position pos:line="20" pos:column="32"/></name></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="7">h<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">-&gt;<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="10">index<pos:position pos:line="21" pos:column="15"/></name></name><operator pos:line="21" pos:column="15">--<pos:position pos:line="21" pos:column="17"/></operator></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="22" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">idata<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">reopen<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">|=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">IMAP_EXPUNGE_PENDING<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

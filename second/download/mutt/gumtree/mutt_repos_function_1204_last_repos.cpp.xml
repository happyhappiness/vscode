<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1204_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">local_to_intl<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">user<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">domain<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">intl_user<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="28">intl_domain<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><name pos:line="3" pos:column="42">NULL<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">mailbox<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tmp<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">intl_user<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">safe_strdup<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">user<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">intl_domain<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">safe_strdup<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">domain<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* we don't want charset-hook effects, so we set flags to 0 */</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">mutt_convert_string<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><operator pos:line="11" pos:column="28">&amp;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="29">intl_user<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">Charset<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="49">"utf-8"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="58">0<pos:position pos:line="11" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call> <operator pos:line="11" pos:column="61">==<pos:position pos:line="11" pos:column="63"/></operator> <operator pos:line="11" pos:column="64">-<pos:position pos:line="11" pos:column="65"/></operator><literal type="number" pos:line="11" pos:column="65">1<pos:position pos:line="11" pos:column="66"/></literal></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67">
    <block type="pseudo"><goto pos:line="12" pos:column="5">goto <name pos:line="12" pos:column="10">cleanup<pos:position pos:line="12" pos:column="17"/></name>;<pos:position pos:line="12" pos:column="18"/></goto></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">mutt_convert_string<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">intl_domain<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">Charset<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="51">"utf-8"<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="60">0<pos:position pos:line="14" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call> <operator pos:line="14" pos:column="63">==<pos:position pos:line="14" pos:column="65"/></operator> <operator pos:line="14" pos:column="66">-<pos:position pos:line="14" pos:column="67"/></operator><literal type="number" pos:line="14" pos:column="67">1<pos:position pos:line="14" pos:column="68"/></literal></expr>)<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69">
    <block type="pseudo"><goto pos:line="15" pos:column="5">goto <name pos:line="15" pos:column="10">cleanup<pos:position pos:line="15" pos:column="17"/></name>;<pos:position pos:line="15" pos:column="18"/></goto></block></then></if>

<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">HAVE_LIBIDN<pos:position pos:line="17" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">option<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">OPTIDNENCODE<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
  <block pos:line="19" pos:column="3">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">idna_to_ascii_8z<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">intl_domain<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="41">tmp<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">IDNA_ALLOW_UNASSIGNED<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call> <operator pos:line="20" pos:column="69">!=<pos:position pos:line="20" pos:column="71"/></operator> <name pos:line="20" pos:column="72">IDNA_SUCCESS<pos:position pos:line="20" pos:column="84"/></name></expr>)<pos:position pos:line="20" pos:column="85"/></condition><then pos:line="20" pos:column="85">
      <block type="pseudo"><goto pos:line="21" pos:column="7">goto <name pos:line="21" pos:column="12">cleanup<pos:position pos:line="21" pos:column="19"/></name>;<pos:position pos:line="21" pos:column="20"/></goto></block></then></if>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">mutt_str_replace<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><operator pos:line="22" pos:column="23">&amp;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="24">intl_domain<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">tmp<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="24" pos:column="8">/* HAVE_LIBIDN */</comment>

  <expr_stmt><expr><name pos:line="26" pos:column="3">mailbox<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name pos:line="26" pos:column="13">safe_malloc<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><call><name pos:line="26" pos:column="26">mutt_strlen<pos:position pos:line="26" pos:column="37"/></name> <argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">intl_user<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call> <operator pos:line="26" pos:column="50">+<pos:position pos:line="26" pos:column="51"/></operator> <call><name pos:line="26" pos:column="52">mutt_strlen<pos:position pos:line="26" pos:column="63"/></name> <argument_list pos:line="26" pos:column="64">(<argument><expr><name pos:line="26" pos:column="65">intl_domain<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call> <operator pos:line="26" pos:column="78">+<pos:position pos:line="26" pos:column="79"/></operator> <literal type="number" pos:line="26" pos:column="80">2<pos:position pos:line="26" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="83"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sprintf<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">mailbox<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"%s@%s"<pos:position pos:line="27" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="30">NONULL<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">intl_user<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="49">NONULL<pos:position pos:line="27" pos:column="55"/></name><argument_list pos:line="27" pos:column="55">(<argument><expr><name pos:line="27" pos:column="56">intl_domain<pos:position pos:line="27" pos:column="67"/></name></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt> <comment type="block" pos:line="27" pos:column="71">/* __SPRINTF_CHECKED__ */</comment>

<label><name pos:line="29" pos:column="1">cleanup<pos:position pos:line="29" pos:column="8"/></name>:<pos:position pos:line="29" pos:column="9"/></label>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">FREE<pos:position pos:line="30" pos:column="7"/></name> <argument_list pos:line="30" pos:column="8">(<argument><expr><operator pos:line="30" pos:column="9">&amp;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="10">intl_user<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">FREE<pos:position pos:line="31" pos:column="7"/></name> <argument_list pos:line="31" pos:column="8">(<argument><expr><operator pos:line="31" pos:column="9">&amp;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="10">intl_domain<pos:position pos:line="31" pos:column="21"/></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">FREE<pos:position pos:line="32" pos:column="7"/></name> <argument_list pos:line="32" pos:column="8">(<argument><expr><operator pos:line="32" pos:column="9">&amp;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="10">tmp<pos:position pos:line="32" pos:column="13"/></name></expr></argument>)<pos:position pos:line="32" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>

  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">mailbox<pos:position pos:line="34" pos:column="17"/></name></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

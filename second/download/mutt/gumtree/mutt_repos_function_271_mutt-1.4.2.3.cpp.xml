<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_271_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_prepare_template<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">FILE<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fp<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">CONTEXT<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ctx<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">HEADER<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">newhdr<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">HEADER<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">hdr<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">short<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">weed<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">MESSAGE<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">msg<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">file<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="28"/></name></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">LIST<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name></decl>, <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier><modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="14">q<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">BODY<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">b<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">FILE<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">bfp<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rv<pos:position pos:line="10" pos:column="9"/></name> <init pos:line="10" pos:column="10">= <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">STATE<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">s<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memset<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><operator pos:line="13" pos:column="11">&amp;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="12">s<pos:position pos:line="13" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="18">sizeof <argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">s<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
  
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">fp<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">&amp;&amp;<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">msg<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">mx_open_message<pos:position pos:line="15" pos:column="36"/></name> <argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">ctx<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="43">hdr<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">msgno<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call><operator pos:line="15" pos:column="54">)<pos:position pos:line="15" pos:column="55"/></operator> <operator pos:line="15" pos:column="56">==<pos:position pos:line="15" pos:column="58"/></operator> <name pos:line="15" pos:column="59">NULL<pos:position pos:line="15" pos:column="63"/></name></expr>)<pos:position pos:line="15" pos:column="64"/></condition><then pos:line="15" pos:column="64">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">fp<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11"> <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="12">fp<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name><name pos:line="18" pos:column="17">msg<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">fp<pos:position pos:line="18" pos:column="24"/></name></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">bfp<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <name pos:line="20" pos:column="9">fp<pos:position pos:line="20" pos:column="11"/></name></expr>;<pos:position pos:line="20" pos:column="12"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* parse the message header and MIME structure */</comment>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">fseek<pos:position pos:line="24" pos:column="8"/></name> <argument_list pos:line="24" pos:column="9">(<argument><expr><name pos:line="24" pos:column="10">fp<pos:position pos:line="24" pos:column="12"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="14">hdr<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">offset<pos:position pos:line="24" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">newhdr<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">offset<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name><name pos:line="25" pos:column="20">hdr<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">offset<pos:position pos:line="25" pos:column="31"/></name></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">newhdr<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">env<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">mutt_read_rfc822_header<pos:position pos:line="26" pos:column="40"/></name> <argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">fp<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">newhdr<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="54">1<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">weed<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">newhdr<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">content<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">length<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name><name pos:line="27" pos:column="29">hdr<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">content<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">length<pos:position pos:line="27" pos:column="49"/></name></name></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">mutt_parse_part<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">fp<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="24">newhdr<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">content<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="30" pos:column="3">/* weed user-agent, x-mailer - we don't want them here */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">p<pos:position pos:line="31" pos:column="4"/></name> <operator pos:line="31" pos:column="5">=<pos:position pos:line="31" pos:column="6"/></operator> <name><name pos:line="31" pos:column="7">newhdr<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">env<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">userhdrs<pos:position pos:line="31" pos:column="28"/></name></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt> 
  <expr_stmt><expr><name pos:line="32" pos:column="3">q<pos:position pos:line="32" pos:column="4"/></name> <operator pos:line="32" pos:column="5">=<pos:position pos:line="32" pos:column="6"/></operator> <operator pos:line="32" pos:column="7">&amp;<pos:position pos:line="32" pos:column="12"/></operator><name><name pos:line="32" pos:column="8">newhdr<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">env<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">userhdrs<pos:position pos:line="32" pos:column="29"/></name></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>

  <while pos:line="34" pos:column="3">while <condition pos:line="34" pos:column="9">(<expr><name pos:line="34" pos:column="10">p<pos:position pos:line="34" pos:column="11"/></name></expr>)<pos:position pos:line="34" pos:column="12"/></condition>
  <block pos:line="35" pos:column="3">{
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><call><name pos:line="36" pos:column="10">ascii_strncasecmp<pos:position pos:line="36" pos:column="27"/></name> <argument_list pos:line="36" pos:column="28">(<argument><expr><name><name pos:line="36" pos:column="29">p<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">data<pos:position pos:line="36" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"x-mailer:"<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="51">9<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call> <operator pos:line="36" pos:column="54">||<pos:position pos:line="36" pos:column="56"/></operator> <operator pos:line="36" pos:column="57">!<pos:position pos:line="36" pos:column="58"/></operator><call><name pos:line="36" pos:column="58">ascii_strncasecmp<pos:position pos:line="36" pos:column="75"/></name> <argument_list pos:line="36" pos:column="76">(<argument><expr><name><name pos:line="36" pos:column="77">p<pos:position pos:line="36" pos:column="78"/></name><operator pos:line="36" pos:column="78">-&gt;<pos:position pos:line="36" pos:column="83"/></operator><name pos:line="36" pos:column="80">data<pos:position pos:line="36" pos:column="84"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="86">"user-agent:"<pos:position pos:line="36" pos:column="99"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="101">11<pos:position pos:line="36" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="104"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="105"/></condition><then pos:line="36" pos:column="105">
    <block pos:line="37" pos:column="5">{
      <expr_stmt><expr><operator pos:line="38" pos:column="7">*<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">q<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <name><name pos:line="38" pos:column="12">p<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">next<pos:position pos:line="38" pos:column="19"/></name></name></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">p<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">next<pos:position pos:line="39" pos:column="14"/></name></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="17">NULL<pos:position pos:line="39" pos:column="21"/></name></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">mutt_free_list<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><operator pos:line="40" pos:column="23">&amp;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="24">p<pos:position pos:line="40" pos:column="25"/></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <else pos:line="42" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">q<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <operator pos:line="43" pos:column="11">&amp;<pos:position pos:line="43" pos:column="16"/></operator><name><name pos:line="43" pos:column="12">p<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">next<pos:position pos:line="43" pos:column="19"/></name></name></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">p<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <operator pos:line="45" pos:column="9">*<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">q<pos:position pos:line="45" pos:column="11"/></name></expr>;<pos:position pos:line="45" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">safe_free<pos:position pos:line="48" pos:column="12"/></name> <argument_list pos:line="48" pos:column="13">(<argument><expr><operator pos:line="48" pos:column="14">(<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">void<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">*<pos:position pos:line="48" pos:column="21"/></operator><operator pos:line="48" pos:column="21">*<pos:position pos:line="48" pos:column="22"/></operator><operator pos:line="48" pos:column="22">)<pos:position pos:line="48" pos:column="23"/></operator> <operator pos:line="48" pos:column="24">&amp;<pos:position pos:line="48" pos:column="29"/></operator><name><name pos:line="48" pos:column="25">newhdr<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">env<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">-&gt;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="38">message_id<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">safe_free<pos:position pos:line="49" pos:column="12"/></name> <argument_list pos:line="49" pos:column="13">(<argument><expr><operator pos:line="49" pos:column="14">(<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">void<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">*<pos:position pos:line="49" pos:column="21"/></operator><operator pos:line="49" pos:column="21">*<pos:position pos:line="49" pos:column="22"/></operator><operator pos:line="49" pos:column="22">)<pos:position pos:line="49" pos:column="23"/></operator> <operator pos:line="49" pos:column="24">&amp;<pos:position pos:line="49" pos:column="29"/></operator><name><name pos:line="49" pos:column="25">newhdr<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">-&gt;<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="33">env<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">-&gt;<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="38">mail_followup_to<pos:position pos:line="49" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt> <comment type="block" pos:line="49" pos:column="57">/* really? */</comment>

<cpp:ifdef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifdef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">HAVE_PGP<pos:position pos:line="51" pos:column="16"/></name></cpp:ifdef>
  <comment type="block" pos:line="52" pos:column="3">/* decrypt pgp/mime encoded messages */</comment>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><operator pos:line="53" pos:column="7">(<pos:position pos:line="53" pos:column="8"/></operator><name><name pos:line="53" pos:column="8">hdr<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">pgp<pos:position pos:line="53" pos:column="16"/></name></name> <operator pos:line="53" pos:column="17">&amp;<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="19">PGPENCRYPT<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">)<pos:position pos:line="53" pos:column="30"/></operator> <operator pos:line="53" pos:column="31">&amp;&amp;<pos:position pos:line="53" pos:column="41"/></operator> 
      <call><name pos:line="54" pos:column="7">mutt_is_multipart_encrypted<pos:position pos:line="54" pos:column="34"/></name> <argument_list pos:line="54" pos:column="35">(<argument><expr><name><name pos:line="54" pos:column="36">newhdr<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">-&gt;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="44">content<pos:position pos:line="54" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="53"/></condition><then pos:line="54" pos:column="53">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">newhdr<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">-&gt;<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="13">pgp<pos:position pos:line="56" pos:column="16"/></name></name> <operator pos:line="56" pos:column="17">|=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">PGPENCRYPT<pos:position pos:line="56" pos:column="30"/></name></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><call><name pos:line="57" pos:column="10">pgp_valid_passphrase<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">()<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33">
      <block type="pseudo"><goto pos:line="58" pos:column="7">goto <name pos:line="58" pos:column="12">err<pos:position pos:line="58" pos:column="15"/></name>;<pos:position pos:line="58" pos:column="16"/></goto></block></then></if>

    <decl_stmt><decl><type><name pos:line="60" pos:column="5">mutt_message<pos:position pos:line="60" pos:column="17"/></name></type> <name pos:line="60" pos:column="18">_<pos:position pos:line="60" pos:column="19"/></name><argument_list pos:line="60" pos:column="19">(<argument><expr><literal type="string" pos:line="60" pos:column="20">"Invoking PGP..."<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></decl>;<pos:position pos:line="60" pos:column="39"/></decl_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><call><name pos:line="61" pos:column="9">pgp_decrypt_mime<pos:position pos:line="61" pos:column="25"/></name> <argument_list pos:line="61" pos:column="26">(<argument><expr><name pos:line="61" pos:column="27">fp<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="31">&amp;<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="32">bfp<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="37">newhdr<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">content<pos:position pos:line="61" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="54">&amp;<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="55">b<pos:position pos:line="61" pos:column="56"/></name></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call> <operator pos:line="61" pos:column="58">==<pos:position pos:line="61" pos:column="60"/></operator> <operator pos:line="61" pos:column="61">-<pos:position pos:line="61" pos:column="62"/></operator><literal type="number" pos:line="61" pos:column="62">1<pos:position pos:line="61" pos:column="63"/></literal></expr>)<pos:position pos:line="61" pos:column="64"/></condition><then pos:line="61" pos:column="64">
    <block pos:line="62" pos:column="5">{
 <label><name pos:line="63" pos:column="2">err<pos:position pos:line="63" pos:column="5"/></name>:<pos:position pos:line="63" pos:column="6"/></label>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">mx_close_message<pos:position pos:line="64" pos:column="23"/></name> <argument_list pos:line="64" pos:column="24">(<argument><expr><operator pos:line="64" pos:column="25">&amp;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="26">msg<pos:position pos:line="64" pos:column="29"/></name></expr></argument>)<pos:position pos:line="64" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">mutt_free_envelope<pos:position pos:line="65" pos:column="25"/></name> <argument_list pos:line="65" pos:column="26">(<argument><expr><operator pos:line="65" pos:column="27">&amp;<pos:position pos:line="65" pos:column="32"/></operator><name><name pos:line="65" pos:column="28">newhdr<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">env<pos:position pos:line="65" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">mutt_free_body<pos:position pos:line="66" pos:column="21"/></name> <argument_list pos:line="66" pos:column="22">(<argument><expr><operator pos:line="66" pos:column="23">&amp;<pos:position pos:line="66" pos:column="28"/></operator><name><name pos:line="66" pos:column="24">newhdr<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">-&gt;<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="32">content<pos:position pos:line="66" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
      <return pos:line="67" pos:column="7">return <expr><operator pos:line="67" pos:column="14">-<pos:position pos:line="67" pos:column="15"/></operator><literal type="number" pos:line="67" pos:column="15">1<pos:position pos:line="67" pos:column="16"/></literal></expr>;<pos:position pos:line="67" pos:column="17"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">mutt_free_body<pos:position pos:line="70" pos:column="19"/></name> <argument_list pos:line="70" pos:column="20">(<argument><expr><operator pos:line="70" pos:column="21">&amp;<pos:position pos:line="70" pos:column="26"/></operator><name><name pos:line="70" pos:column="22">newhdr<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">content<pos:position pos:line="70" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">newhdr<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">-&gt;<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="13">content<pos:position pos:line="71" pos:column="20"/></name></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <name pos:line="71" pos:column="23">b<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">mutt_clear_error<pos:position pos:line="73" pos:column="21"/></name> <argument_list pos:line="73" pos:column="22">()<pos:position pos:line="73" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="76" pos:column="3">/* 
   * remove a potential multipart/signed layer - useful when
   * resending messages 
   */</comment>
  
  <if pos:line="81" pos:column="3">if <condition pos:line="81" pos:column="6">(<expr><call><name pos:line="81" pos:column="7">mutt_is_multipart_signed<pos:position pos:line="81" pos:column="31"/></name> <argument_list pos:line="81" pos:column="32">(<argument><expr><name><name pos:line="81" pos:column="33">newhdr<pos:position pos:line="81" pos:column="39"/></name><operator pos:line="81" pos:column="39">-&gt;<pos:position pos:line="81" pos:column="44"/></operator><name pos:line="81" pos:column="41">content<pos:position pos:line="81" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="50"/></condition><then pos:line="81" pos:column="50">
  <block pos:line="82" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">newhdr<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">pgp<pos:position pos:line="83" pos:column="16"/></name></name> <operator pos:line="83" pos:column="17">|=<pos:position pos:line="83" pos:column="19"/></operator> <name pos:line="83" pos:column="20">PGPSIGN<pos:position pos:line="83" pos:column="27"/></name></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
    
    <comment type="block" pos:line="85" pos:column="5">/* destroy the signature */</comment>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">mutt_free_body<pos:position pos:line="86" pos:column="19"/></name> <argument_list pos:line="86" pos:column="20">(<argument><expr><operator pos:line="86" pos:column="21">&amp;<pos:position pos:line="86" pos:column="26"/></operator><name><name pos:line="86" pos:column="22">newhdr<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">-&gt;<pos:position pos:line="86" pos:column="33"/></operator><name pos:line="86" pos:column="30">content<pos:position pos:line="86" pos:column="37"/></name><operator pos:line="86" pos:column="37">-&gt;<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="39">parts<pos:position pos:line="86" pos:column="44"/></name><operator pos:line="86" pos:column="44">-&gt;<pos:position pos:line="86" pos:column="49"/></operator><name pos:line="86" pos:column="46">next<pos:position pos:line="86" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">newhdr<pos:position pos:line="87" pos:column="11"/></name><operator pos:line="87" pos:column="11">-&gt;<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="13">content<pos:position pos:line="87" pos:column="20"/></name></name> <operator pos:line="87" pos:column="21">=<pos:position pos:line="87" pos:column="22"/></operator> <call><name pos:line="87" pos:column="23">mutt_remove_multipart<pos:position pos:line="87" pos:column="44"/></name> <argument_list pos:line="87" pos:column="45">(<argument><expr><name><name pos:line="87" pos:column="46">newhdr<pos:position pos:line="87" pos:column="52"/></name><operator pos:line="87" pos:column="52">-&gt;<pos:position pos:line="87" pos:column="57"/></operator><name pos:line="87" pos:column="54">content<pos:position pos:line="87" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="91" pos:column="3">/* 
   * We don't need no primary multipart.
   * Note: We _do_ preserve messages!
   * 
   * XXX - we don't handle multipart/alternative in any 
   * smart way when sending messages.  However, one may
   * consider this a feature.
   * 
   */</comment>

  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><name><name pos:line="101" pos:column="7">newhdr<pos:position pos:line="101" pos:column="13"/></name><operator pos:line="101" pos:column="13">-&gt;<pos:position pos:line="101" pos:column="18"/></operator><name pos:line="101" pos:column="15">content<pos:position pos:line="101" pos:column="22"/></name><operator pos:line="101" pos:column="22">-&gt;<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="24">type<pos:position pos:line="101" pos:column="28"/></name></name> <operator pos:line="101" pos:column="29">==<pos:position pos:line="101" pos:column="31"/></operator> <name pos:line="101" pos:column="32">TYPEMULTIPART<pos:position pos:line="101" pos:column="45"/></name></expr>)<pos:position pos:line="101" pos:column="46"/></condition><then pos:line="101" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="102" pos:column="5">newhdr<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">-&gt;<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="13">content<pos:position pos:line="102" pos:column="20"/></name></name> <operator pos:line="102" pos:column="21">=<pos:position pos:line="102" pos:column="22"/></operator> <call><name pos:line="102" pos:column="23">mutt_remove_multipart<pos:position pos:line="102" pos:column="44"/></name> <argument_list pos:line="102" pos:column="45">(<argument><expr><name><name pos:line="102" pos:column="46">newhdr<pos:position pos:line="102" pos:column="52"/></name><operator pos:line="102" pos:column="52">-&gt;<pos:position pos:line="102" pos:column="57"/></operator><name pos:line="102" pos:column="54">content<pos:position pos:line="102" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="63"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="104" pos:column="3">s<pos:position pos:line="104" pos:column="4"/></name><operator pos:line="104" pos:column="4">.<pos:position pos:line="104" pos:column="5"/></operator><name pos:line="104" pos:column="5">fpin<pos:position pos:line="104" pos:column="9"/></name></name> <operator pos:line="104" pos:column="10">=<pos:position pos:line="104" pos:column="11"/></operator> <name pos:line="104" pos:column="12">bfp<pos:position pos:line="104" pos:column="15"/></name></expr>;<pos:position pos:line="104" pos:column="16"/></expr_stmt>
  
  <comment type="block" pos:line="106" pos:column="3">/* create temporary files for all attachments */</comment>
  <for pos:line="107" pos:column="3">for <control pos:line="107" pos:column="7">(<init><expr><name pos:line="107" pos:column="8">b<pos:position pos:line="107" pos:column="9"/></name> <operator pos:line="107" pos:column="10">=<pos:position pos:line="107" pos:column="11"/></operator> <name><name pos:line="107" pos:column="12">newhdr<pos:position pos:line="107" pos:column="18"/></name><operator pos:line="107" pos:column="18">-&gt;<pos:position pos:line="107" pos:column="23"/></operator><name pos:line="107" pos:column="20">content<pos:position pos:line="107" pos:column="27"/></name></name></expr>;<pos:position pos:line="107" pos:column="28"/></init> <condition><expr><name pos:line="107" pos:column="29">b<pos:position pos:line="107" pos:column="30"/></name></expr>;<pos:position pos:line="107" pos:column="31"/></condition> <incr><expr><name pos:line="107" pos:column="32">b<pos:position pos:line="107" pos:column="33"/></name> <operator pos:line="107" pos:column="34">=<pos:position pos:line="107" pos:column="35"/></operator> <name><name pos:line="107" pos:column="36">b<pos:position pos:line="107" pos:column="37"/></name><operator pos:line="107" pos:column="37">-&gt;<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="39">next<pos:position pos:line="107" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="107" pos:column="44"/></control>
  <block pos:line="108" pos:column="3">{
    
    <comment type="block" pos:line="110" pos:column="5">/* what follows is roughly a receive-mode variant of
     * mutt_get_tmp_attachment () from muttlib.c
     */</comment>

    <expr_stmt><expr><name><name pos:line="114" pos:column="5">file<pos:position pos:line="114" pos:column="9"/></name><index pos:line="114" pos:column="9">[<expr><literal type="number" pos:line="114" pos:column="10">0<pos:position pos:line="114" pos:column="11"/></literal></expr>]<pos:position pos:line="114" pos:column="12"/></index></name> <operator pos:line="114" pos:column="13">=<pos:position pos:line="114" pos:column="14"/></operator> <literal type="char" pos:line="114" pos:column="15">'\0'<pos:position pos:line="114" pos:column="19"/></literal></expr>;<pos:position pos:line="114" pos:column="20"/></expr_stmt>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><name><name pos:line="115" pos:column="9">b<pos:position pos:line="115" pos:column="10"/></name><operator pos:line="115" pos:column="10">-&gt;<pos:position pos:line="115" pos:column="15"/></operator><name pos:line="115" pos:column="12">filename<pos:position pos:line="115" pos:column="20"/></name></name></expr>)<pos:position pos:line="115" pos:column="21"/></condition><then pos:line="115" pos:column="21">
    <block pos:line="116" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="117" pos:column="7">strfcpy<pos:position pos:line="117" pos:column="14"/></name> <argument_list pos:line="117" pos:column="15">(<argument><expr><name pos:line="117" pos:column="16">file<pos:position pos:line="117" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="22">b<pos:position pos:line="117" pos:column="23"/></name><operator pos:line="117" pos:column="23">-&gt;<pos:position pos:line="117" pos:column="28"/></operator><name pos:line="117" pos:column="25">filename<pos:position pos:line="117" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="117" pos:column="35">sizeof <argument_list pos:line="117" pos:column="42">(<argument><expr><name pos:line="117" pos:column="43">file<pos:position pos:line="117" pos:column="47"/></name></expr></argument>)<pos:position pos:line="117" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="117" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="118" pos:column="7">b<pos:position pos:line="118" pos:column="8"/></name><operator pos:line="118" pos:column="8">-&gt;<pos:position pos:line="118" pos:column="13"/></operator><name pos:line="118" pos:column="10">d_filename<pos:position pos:line="118" pos:column="20"/></name></name> <operator pos:line="118" pos:column="21">=<pos:position pos:line="118" pos:column="22"/></operator> <call><name pos:line="118" pos:column="23">safe_strdup<pos:position pos:line="118" pos:column="34"/></name> <argument_list pos:line="118" pos:column="35">(<argument><expr><name><name pos:line="118" pos:column="36">b<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">-&gt;<pos:position pos:line="118" pos:column="42"/></operator><name pos:line="118" pos:column="39">filename<pos:position pos:line="118" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></then>
    <else pos:line="120" pos:column="5">else
    <block pos:line="121" pos:column="5">{
      <comment type="block" pos:line="122" pos:column="7">/* avoid Content-Disposition: header with temporary filename */</comment>
      <expr_stmt><expr><name><name pos:line="123" pos:column="7">b<pos:position pos:line="123" pos:column="8"/></name><operator pos:line="123" pos:column="8">-&gt;<pos:position pos:line="123" pos:column="13"/></operator><name pos:line="123" pos:column="10">use_disp<pos:position pos:line="123" pos:column="18"/></name></name> <operator pos:line="123" pos:column="19">=<pos:position pos:line="123" pos:column="20"/></operator> <literal type="number" pos:line="123" pos:column="21">0<pos:position pos:line="123" pos:column="22"/></literal></expr>;<pos:position pos:line="123" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="124" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="126" pos:column="5">/* set up state flags */</comment>

    <expr_stmt><expr><name><name pos:line="128" pos:column="5">s<pos:position pos:line="128" pos:column="6"/></name><operator pos:line="128" pos:column="6">.<pos:position pos:line="128" pos:column="7"/></operator><name pos:line="128" pos:column="7">flags<pos:position pos:line="128" pos:column="12"/></name></name> <operator pos:line="128" pos:column="13">=<pos:position pos:line="128" pos:column="14"/></operator> <literal type="number" pos:line="128" pos:column="15">0<pos:position pos:line="128" pos:column="16"/></literal></expr>;<pos:position pos:line="128" pos:column="17"/></expr_stmt>

    <if pos:line="130" pos:column="5">if <condition pos:line="130" pos:column="8">(<expr><name><name pos:line="130" pos:column="9">b<pos:position pos:line="130" pos:column="10"/></name><operator pos:line="130" pos:column="10">-&gt;<pos:position pos:line="130" pos:column="15"/></operator><name pos:line="130" pos:column="12">type<pos:position pos:line="130" pos:column="16"/></name></name> <operator pos:line="130" pos:column="17">==<pos:position pos:line="130" pos:column="19"/></operator> <name pos:line="130" pos:column="20">TYPETEXT<pos:position pos:line="130" pos:column="28"/></name></expr>)<pos:position pos:line="130" pos:column="29"/></condition><then pos:line="130" pos:column="29">
    <block pos:line="131" pos:column="5">{
      <if pos:line="132" pos:column="7">if <condition pos:line="132" pos:column="10">(<expr><operator pos:line="132" pos:column="11">!<pos:position pos:line="132" pos:column="12"/></operator><call><name pos:line="132" pos:column="12">ascii_strcasecmp<pos:position pos:line="132" pos:column="28"/></name> <argument_list pos:line="132" pos:column="29">(<argument><expr><literal type="string" pos:line="132" pos:column="30">"yes"<pos:position pos:line="132" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="132" pos:column="37">mutt_get_parameter<pos:position pos:line="132" pos:column="55"/></name> <argument_list pos:line="132" pos:column="56">(<argument><expr><literal type="string" pos:line="132" pos:column="57">"x-mutt-noconv"<pos:position pos:line="132" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="74">b<pos:position pos:line="132" pos:column="75"/></name><operator pos:line="132" pos:column="75">-&gt;<pos:position pos:line="132" pos:column="80"/></operator><name pos:line="132" pos:column="77">parameter<pos:position pos:line="132" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="89"/></condition><then pos:line="132" pos:column="89">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="133" pos:column="9">b<pos:position pos:line="133" pos:column="10"/></name><operator pos:line="133" pos:column="10">-&gt;<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="12">noconv<pos:position pos:line="133" pos:column="18"/></name></name> <operator pos:line="133" pos:column="19">=<pos:position pos:line="133" pos:column="20"/></operator> <literal type="number" pos:line="133" pos:column="21">1<pos:position pos:line="133" pos:column="22"/></literal></expr>;<pos:position pos:line="133" pos:column="23"/></expr_stmt></block></then>
      <else pos:line="134" pos:column="7">else
      <block pos:line="135" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="136" pos:column="9">s<pos:position pos:line="136" pos:column="10"/></name><operator pos:line="136" pos:column="10">.<pos:position pos:line="136" pos:column="11"/></operator><name pos:line="136" pos:column="11">flags<pos:position pos:line="136" pos:column="16"/></name></name> <operator pos:line="136" pos:column="17">|=<pos:position pos:line="136" pos:column="19"/></operator> <name pos:line="136" pos:column="20">M_CHARCONV<pos:position pos:line="136" pos:column="30"/></name></expr>;<pos:position pos:line="136" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="137" pos:column="9">b<pos:position pos:line="137" pos:column="10"/></name><operator pos:line="137" pos:column="10">-&gt;<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="12">noconv<pos:position pos:line="137" pos:column="18"/></name></name> <operator pos:line="137" pos:column="19">=<pos:position pos:line="137" pos:column="20"/></operator> <literal type="number" pos:line="137" pos:column="21">0<pos:position pos:line="137" pos:column="22"/></literal></expr>;<pos:position pos:line="137" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="138" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="140" pos:column="7">mutt_delete_parameter<pos:position pos:line="140" pos:column="28"/></name> <argument_list pos:line="140" pos:column="29">(<argument><expr><literal type="string" pos:line="140" pos:column="30">"x-mutt-noconv"<pos:position pos:line="140" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="140" pos:column="47">&amp;<pos:position pos:line="140" pos:column="52"/></operator><name><name pos:line="140" pos:column="48">b<pos:position pos:line="140" pos:column="49"/></name><operator pos:line="140" pos:column="49">-&gt;<pos:position pos:line="140" pos:column="54"/></operator><name pos:line="140" pos:column="51">parameter<pos:position pos:line="140" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="143" pos:column="5">mutt_adv_mktemp<pos:position pos:line="143" pos:column="20"/></name> <argument_list pos:line="143" pos:column="21">(<argument><expr><name pos:line="143" pos:column="22">file<pos:position pos:line="143" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="143" pos:column="28">sizeof<argument_list pos:line="143" pos:column="34">(<argument><expr><name pos:line="143" pos:column="35">file<pos:position pos:line="143" pos:column="39"/></name></expr></argument>)<pos:position pos:line="143" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="143" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="42"/></expr_stmt>
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><operator pos:line="144" pos:column="9">(<pos:position pos:line="144" pos:column="10"/></operator><name><name pos:line="144" pos:column="10">s<pos:position pos:line="144" pos:column="11"/></name><operator pos:line="144" pos:column="11">.<pos:position pos:line="144" pos:column="12"/></operator><name pos:line="144" pos:column="12">fpout<pos:position pos:line="144" pos:column="17"/></name></name> <operator pos:line="144" pos:column="18">=<pos:position pos:line="144" pos:column="19"/></operator> <call><name pos:line="144" pos:column="20">safe_fopen<pos:position pos:line="144" pos:column="30"/></name> <argument_list pos:line="144" pos:column="31">(<argument><expr><name pos:line="144" pos:column="32">file<pos:position pos:line="144" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="38">"w"<pos:position pos:line="144" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="42"/></argument_list></call><operator pos:line="144" pos:column="42">)<pos:position pos:line="144" pos:column="43"/></operator> <operator pos:line="144" pos:column="44">==<pos:position pos:line="144" pos:column="46"/></operator> <name pos:line="144" pos:column="47">NULL<pos:position pos:line="144" pos:column="51"/></name></expr>)<pos:position pos:line="144" pos:column="52"/></condition><then pos:line="144" pos:column="52">
      <block type="pseudo"><goto pos:line="145" pos:column="7">goto <name pos:line="145" pos:column="12">bail<pos:position pos:line="145" pos:column="16"/></name>;<pos:position pos:line="145" pos:column="17"/></goto></block></then></if>

    
    <expr_stmt><expr><call><name pos:line="148" pos:column="5">mutt_decode_attachment<pos:position pos:line="148" pos:column="27"/></name> <argument_list pos:line="148" pos:column="28">(<argument><expr><name pos:line="148" pos:column="29">b<pos:position pos:line="148" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="32">&amp;<pos:position pos:line="148" pos:column="37"/></operator><name pos:line="148" pos:column="33">s<pos:position pos:line="148" pos:column="34"/></name></expr></argument>)<pos:position pos:line="148" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="36"/></expr_stmt>

    <if pos:line="150" pos:column="5">if <condition pos:line="150" pos:column="8">(<expr><call><name pos:line="150" pos:column="9">safe_fclose<pos:position pos:line="150" pos:column="20"/></name> <argument_list pos:line="150" pos:column="21">(<argument><expr><operator pos:line="150" pos:column="22">&amp;<pos:position pos:line="150" pos:column="27"/></operator><name><name pos:line="150" pos:column="23">s<pos:position pos:line="150" pos:column="24"/></name><operator pos:line="150" pos:column="24">.<pos:position pos:line="150" pos:column="25"/></operator><name pos:line="150" pos:column="25">fpout<pos:position pos:line="150" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="31"/></argument_list></call> <operator pos:line="150" pos:column="32">!=<pos:position pos:line="150" pos:column="34"/></operator> <literal type="number" pos:line="150" pos:column="35">0<pos:position pos:line="150" pos:column="36"/></literal></expr>)<pos:position pos:line="150" pos:column="37"/></condition><then pos:line="150" pos:column="37">
      <block type="pseudo"><goto pos:line="151" pos:column="7">goto <name pos:line="151" pos:column="12">bail<pos:position pos:line="151" pos:column="16"/></name>;<pos:position pos:line="151" pos:column="17"/></goto></block></then></if>

    <expr_stmt><expr><call><name pos:line="153" pos:column="5">mutt_str_replace<pos:position pos:line="153" pos:column="21"/></name> <argument_list pos:line="153" pos:column="22">(<argument><expr><operator pos:line="153" pos:column="23">&amp;<pos:position pos:line="153" pos:column="28"/></operator><name><name pos:line="153" pos:column="24">b<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">-&gt;<pos:position pos:line="153" pos:column="30"/></operator><name pos:line="153" pos:column="27">filename<pos:position pos:line="153" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="37">file<pos:position pos:line="153" pos:column="41"/></name></expr></argument>)<pos:position pos:line="153" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="154" pos:column="5">b<pos:position pos:line="154" pos:column="6"/></name><operator pos:line="154" pos:column="6">-&gt;<pos:position pos:line="154" pos:column="11"/></operator><name pos:line="154" pos:column="8">unlink<pos:position pos:line="154" pos:column="14"/></name></name> <operator pos:line="154" pos:column="15">=<pos:position pos:line="154" pos:column="16"/></operator> <literal type="number" pos:line="154" pos:column="17">1<pos:position pos:line="154" pos:column="18"/></literal></expr>;<pos:position pos:line="154" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="156" pos:column="5">mutt_stamp_attachment<pos:position pos:line="156" pos:column="26"/></name> <argument_list pos:line="156" pos:column="27">(<argument><expr><name pos:line="156" pos:column="28">b<pos:position pos:line="156" pos:column="29"/></name></expr></argument>)<pos:position pos:line="156" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="158" pos:column="5">mutt_free_body<pos:position pos:line="158" pos:column="19"/></name> <argument_list pos:line="158" pos:column="20">(<argument><expr><operator pos:line="158" pos:column="21">&amp;<pos:position pos:line="158" pos:column="26"/></operator><name><name pos:line="158" pos:column="22">b<pos:position pos:line="158" pos:column="23"/></name><operator pos:line="158" pos:column="23">-&gt;<pos:position pos:line="158" pos:column="28"/></operator><name pos:line="158" pos:column="25">parts<pos:position pos:line="158" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="32"/></expr_stmt>
    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><name><name pos:line="159" pos:column="9">b<pos:position pos:line="159" pos:column="10"/></name><operator pos:line="159" pos:column="10">-&gt;<pos:position pos:line="159" pos:column="15"/></operator><name pos:line="159" pos:column="12">hdr<pos:position pos:line="159" pos:column="15"/></name></name></expr>)<pos:position pos:line="159" pos:column="16"/></condition><then pos:line="159" pos:column="16"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="159" pos:column="17">b<pos:position pos:line="159" pos:column="18"/></name><operator pos:line="159" pos:column="18">-&gt;<pos:position pos:line="159" pos:column="23"/></operator><name pos:line="159" pos:column="20">hdr<pos:position pos:line="159" pos:column="23"/></name><operator pos:line="159" pos:column="23">-&gt;<pos:position pos:line="159" pos:column="28"/></operator><name pos:line="159" pos:column="25">content<pos:position pos:line="159" pos:column="32"/></name></name> <operator pos:line="159" pos:column="33">=<pos:position pos:line="159" pos:column="34"/></operator> <name pos:line="159" pos:column="35">NULL<pos:position pos:line="159" pos:column="39"/></name></expr>;<pos:position pos:line="159" pos:column="40"/></expr_stmt></block></then></if> <comment type="block" pos:line="159" pos:column="41">/* avoid dangling pointer */</comment>
  }<pos:position pos:line="160" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="162" pos:column="3">rv<pos:position pos:line="162" pos:column="5"/></name> <operator pos:line="162" pos:column="6">=<pos:position pos:line="162" pos:column="7"/></operator> <literal type="number" pos:line="162" pos:column="8">0<pos:position pos:line="162" pos:column="9"/></literal></expr>;<pos:position pos:line="162" pos:column="10"/></expr_stmt>
  
  <label><name pos:line="164" pos:column="3">bail<pos:position pos:line="164" pos:column="7"/></name>:<pos:position pos:line="164" pos:column="8"/></label>
  
  <comment type="block" pos:line="166" pos:column="3">/* that's it. */</comment>
  <if pos:line="167" pos:column="3">if <condition pos:line="167" pos:column="6">(<expr><name pos:line="167" pos:column="7">bfp<pos:position pos:line="167" pos:column="10"/></name> <operator pos:line="167" pos:column="11">!=<pos:position pos:line="167" pos:column="13"/></operator> <name pos:line="167" pos:column="14">fp<pos:position pos:line="167" pos:column="16"/></name></expr>)<pos:position pos:line="167" pos:column="17"/></condition><then pos:line="167" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="167" pos:column="18">fclose<pos:position pos:line="167" pos:column="24"/></name> <argument_list pos:line="167" pos:column="25">(<argument><expr><name pos:line="167" pos:column="26">bfp<pos:position pos:line="167" pos:column="29"/></name></expr></argument>)<pos:position pos:line="167" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="31"/></expr_stmt></block></then></if>
  <if pos:line="168" pos:column="3">if <condition pos:line="168" pos:column="6">(<expr><name pos:line="168" pos:column="7">msg<pos:position pos:line="168" pos:column="10"/></name></expr>)<pos:position pos:line="168" pos:column="11"/></condition><then pos:line="168" pos:column="11"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="12">mx_close_message<pos:position pos:line="168" pos:column="28"/></name> <argument_list pos:line="168" pos:column="29">(<argument><expr><operator pos:line="168" pos:column="30">&amp;<pos:position pos:line="168" pos:column="35"/></operator><name pos:line="168" pos:column="31">msg<pos:position pos:line="168" pos:column="34"/></name></expr></argument>)<pos:position pos:line="168" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="36"/></expr_stmt></block></then></if>
  
  <if pos:line="170" pos:column="3">if <condition pos:line="170" pos:column="6">(<expr><name pos:line="170" pos:column="7">rv<pos:position pos:line="170" pos:column="9"/></name> <operator pos:line="170" pos:column="10">==<pos:position pos:line="170" pos:column="12"/></operator> <operator pos:line="170" pos:column="13">-<pos:position pos:line="170" pos:column="14"/></operator><literal type="number" pos:line="170" pos:column="14">1<pos:position pos:line="170" pos:column="15"/></literal></expr>)<pos:position pos:line="170" pos:column="16"/></condition><then pos:line="170" pos:column="16">
  <block pos:line="171" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">mutt_free_envelope<pos:position pos:line="172" pos:column="23"/></name> <argument_list pos:line="172" pos:column="24">(<argument><expr><operator pos:line="172" pos:column="25">&amp;<pos:position pos:line="172" pos:column="30"/></operator><name><name pos:line="172" pos:column="26">newhdr<pos:position pos:line="172" pos:column="32"/></name><operator pos:line="172" pos:column="32">-&gt;<pos:position pos:line="172" pos:column="37"/></operator><name pos:line="172" pos:column="34">env<pos:position pos:line="172" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="173" pos:column="5">mutt_free_body<pos:position pos:line="173" pos:column="19"/></name> <argument_list pos:line="173" pos:column="20">(<argument><expr><operator pos:line="173" pos:column="21">&amp;<pos:position pos:line="173" pos:column="26"/></operator><name><name pos:line="173" pos:column="22">newhdr<pos:position pos:line="173" pos:column="28"/></name><operator pos:line="173" pos:column="28">-&gt;<pos:position pos:line="173" pos:column="33"/></operator><name pos:line="173" pos:column="30">content<pos:position pos:line="173" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="174" pos:column="4"/></block></then></if>
  
  <return pos:line="176" pos:column="3">return <expr><name pos:line="176" pos:column="10">rv<pos:position pos:line="176" pos:column="12"/></name></expr>;<pos:position pos:line="176" pos:column="13"/></return>
}<pos:position pos:line="177" pos:column="2"/></block></function></unit>

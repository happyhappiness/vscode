<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_135_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_display_message<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">HEADER<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">cur<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="35">buf<pos:position pos:line="3" pos:column="38"/></name><index pos:line="3" pos:column="38">[<expr><name pos:line="3" pos:column="39">LONG_STRING<pos:position pos:line="3" pos:column="50"/></name></expr>]<pos:position pos:line="3" pos:column="51"/></index></name></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name> <init pos:line="4" pos:column="10">= <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="15">builtin<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">cmflags<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">M_CM_DECODE<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">|<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="31">M_CM_DISPLAY<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">|<pos:position pos:line="5" pos:column="45"/></operator> <name pos:line="5" pos:column="46">M_CM_CHARCONV<pos:position pos:line="5" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">fpout<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fpfilterout<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">pid_t<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">filterpid<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><operator pos:line="8" pos:column="21">-<pos:position pos:line="8" pos:column="22"/></operator><literal type="number" pos:line="8" pos:column="22">1<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">res<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">snprintf<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">buf<pos:position pos:line="11" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="18">sizeof <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">buf<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"%s/%s"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="41">TYPE<pos:position pos:line="11" pos:column="45"/></name> <argument_list pos:line="11" pos:column="46">(<argument><expr><name><name pos:line="11" pos:column="47">cur<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">-&gt;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="52">content<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr></argument>,
	    <argument><expr><name><name pos:line="12" pos:column="13">cur<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">content<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">subtype<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">mutt_parse_mime_message<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">Context<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">cur<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mutt_message_hook<pos:position pos:line="15" pos:column="20"/></name> <argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">Context<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">cur<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">M_MESSAGEHOOK<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>

<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">HAVE_PGP<pos:position pos:line="17" pos:column="16"/></name></cpp:ifdef>
  <comment type="block" pos:line="18" pos:column="3">/* see if PGP is needed for this message.  if so, we should exit curses */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">cur<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">pgp<pos:position pos:line="19" pos:column="15"/></name></name></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16">
  <block pos:line="20" pos:column="3">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">cur<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">pgp<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">&amp;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="20">PGPENCRYPT<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31">
    <block pos:line="22" pos:column="5">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">!<pos:position pos:line="23" pos:column="12"/></operator><call><name pos:line="23" pos:column="12">pgp_valid_passphrase<pos:position pos:line="23" pos:column="32"/></name> <argument_list pos:line="23" pos:column="33">()<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36">
	<block type="pseudo"><return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="26" pos:column="7">cmflags<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">|=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">M_CM_VERIFY<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><name><name pos:line="28" pos:column="14">cur<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">pgp<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">&amp;<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="25">PGPSIGN<pos:position pos:line="28" pos:column="32"/></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
    <block pos:line="29" pos:column="5">{
      <comment type="block" pos:line="30" pos:column="7">/* find out whether or not the verify signature */</comment>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><call><name pos:line="31" pos:column="11">query_quadoption<pos:position pos:line="31" pos:column="27"/></name> <argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">OPT_VERIFYSIG<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="44">_<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">(<argument><expr><literal type="string" pos:line="31" pos:column="46">"Verify PGP signature?"<pos:position pos:line="31" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call> <operator pos:line="31" pos:column="72">==<pos:position pos:line="31" pos:column="74"/></operator> <name pos:line="31" pos:column="75">M_YES<pos:position pos:line="31" pos:column="80"/></name></expr>)<pos:position pos:line="31" pos:column="81"/></condition><then pos:line="31" pos:column="81">
      <block pos:line="32" pos:column="7">{
	<expr_stmt><expr><name pos:line="33" pos:column="9">cmflags<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">|=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">M_CM_VERIFY<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><operator pos:line="38" pos:column="7">(<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">cmflags<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">&amp;<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="18">M_CM_VERIFY<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">)<pos:position pos:line="38" pos:column="30"/></operator> <operator pos:line="38" pos:column="31">||<pos:position pos:line="38" pos:column="33"/></operator> <operator pos:line="38" pos:column="34">(<pos:position pos:line="38" pos:column="35"/></operator><name><name pos:line="38" pos:column="35">cur<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">pgp<pos:position pos:line="38" pos:column="43"/></name></name> <operator pos:line="38" pos:column="44">&amp;<pos:position pos:line="38" pos:column="49"/></operator> <name pos:line="38" pos:column="46">PGPENCRYPT<pos:position pos:line="38" pos:column="56"/></name><operator pos:line="38" pos:column="56">)<pos:position pos:line="38" pos:column="57"/></operator></expr>)<pos:position pos:line="38" pos:column="58"/></condition><then pos:line="38" pos:column="58">
  <block pos:line="39" pos:column="3">{
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">cur<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">env<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">from<pos:position pos:line="40" pos:column="23"/></name></name></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">pgp_invoke_getkeys<pos:position pos:line="41" pos:column="25"/></name> <argument_list pos:line="41" pos:column="26">(<argument><expr><name><name pos:line="41" pos:column="27">cur<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">env<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">from<pos:position pos:line="41" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="43" pos:column="5">mutt_message<pos:position pos:line="43" pos:column="17"/></name></type> <name pos:line="43" pos:column="18">_<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="string" pos:line="43" pos:column="20">"Invoking PGP..."<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></decl>;<pos:position pos:line="43" pos:column="39"/></decl_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">mutt_mktemp<pos:position pos:line="48" pos:column="14"/></name> <argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">tempfile<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">(<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">fpout<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">safe_fopen<pos:position pos:line="49" pos:column="26"/></name> <argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">tempfile<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="38">"w"<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call><operator pos:line="49" pos:column="42">)<pos:position pos:line="49" pos:column="43"/></operator> <operator pos:line="49" pos:column="44">==<pos:position pos:line="49" pos:column="46"/></operator> <name pos:line="49" pos:column="47">NULL<pos:position pos:line="49" pos:column="51"/></name></expr>)<pos:position pos:line="49" pos:column="52"/></condition><then pos:line="49" pos:column="52">
  <block pos:line="50" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">mutt_error<pos:position pos:line="51" pos:column="15"/></name></type> <name pos:line="51" pos:column="16">_<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><literal type="string" pos:line="51" pos:column="18">"Could not create temporary file!"<pos:position pos:line="51" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></decl>;<pos:position pos:line="51" pos:column="54"/></decl_stmt>
    <return pos:line="52" pos:column="5">return <expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal><operator pos:line="52" pos:column="14">)<pos:position pos:line="52" pos:column="15"/></operator></expr>;<pos:position pos:line="52" pos:column="16"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">DisplayFilter<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">&amp;&amp;<pos:position pos:line="55" pos:column="31"/></operator> <operator pos:line="55" pos:column="24">*<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">DisplayFilter<pos:position pos:line="55" pos:column="38"/></name></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39"> 
  <block pos:line="56" pos:column="3">{
    <expr_stmt><expr><name pos:line="57" pos:column="5">fpfilterout<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <name pos:line="57" pos:column="19">fpout<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="58" pos:column="5">fpout<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <name pos:line="58" pos:column="13">NULL<pos:position pos:line="58" pos:column="17"/></name></expr>;<pos:position pos:line="58" pos:column="18"/></expr_stmt>
    <comment type="block" pos:line="59" pos:column="5">/* mutt_endwin (NULL); */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">filterpid<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <call><name pos:line="60" pos:column="17">mutt_create_filter_fd<pos:position pos:line="60" pos:column="38"/></name> <argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">DisplayFilter<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="55">&amp;<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="56">fpout<pos:position pos:line="60" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="63">NULL<pos:position pos:line="60" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="69">NULL<pos:position pos:line="60" pos:column="73"/></name></expr></argument>,
				       <argument><expr><operator pos:line="61" pos:column="40">-<pos:position pos:line="61" pos:column="41"/></operator><literal type="number" pos:line="61" pos:column="41">1<pos:position pos:line="61" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="44">fileno<pos:position pos:line="61" pos:column="50"/></name><argument_list pos:line="61" pos:column="50">(<argument><expr><name pos:line="61" pos:column="51">fpfilterout<pos:position pos:line="61" pos:column="62"/></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="61" pos:column="65">-<pos:position pos:line="61" pos:column="66"/></operator><literal type="number" pos:line="61" pos:column="66">1<pos:position pos:line="61" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">filterpid<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">&lt;<pos:position pos:line="62" pos:column="23"/></operator> <literal type="number" pos:line="62" pos:column="21">0<pos:position pos:line="62" pos:column="22"/></literal></expr>)<pos:position pos:line="62" pos:column="23"/></condition><then pos:line="62" pos:column="23">
    <block pos:line="63" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">mutt_error<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><call><name pos:line="64" pos:column="19">_<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">(<argument><expr><literal type="string" pos:line="64" pos:column="21">"Cannot create display filter"<pos:position pos:line="64" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">safe_fclose<pos:position pos:line="65" pos:column="18"/></name> <argument_list pos:line="65" pos:column="19">(<argument><expr><operator pos:line="65" pos:column="20">&amp;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="21">fpfilterout<pos:position pos:line="65" pos:column="32"/></name></expr></argument>)<pos:position pos:line="65" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">unlink<pos:position pos:line="66" pos:column="13"/></name> <argument_list pos:line="66" pos:column="14">(<argument><expr><name pos:line="66" pos:column="15">tempfile<pos:position pos:line="66" pos:column="23"/></name></expr></argument>)<pos:position pos:line="66" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt>
      <return pos:line="67" pos:column="7">return <expr><literal type="number" pos:line="67" pos:column="14">0<pos:position pos:line="67" pos:column="15"/></literal></expr>;<pos:position pos:line="67" pos:column="16"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><operator pos:line="71" pos:column="7">!<pos:position pos:line="71" pos:column="8"/></operator><name pos:line="71" pos:column="8">Pager<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">||<pos:position pos:line="71" pos:column="16"/></operator> <call><name pos:line="71" pos:column="17">mutt_strcmp<pos:position pos:line="71" pos:column="28"/></name> <argument_list pos:line="71" pos:column="29">(<argument><expr><name pos:line="71" pos:column="30">Pager<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="37">"builtin"<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call> <operator pos:line="71" pos:column="48">==<pos:position pos:line="71" pos:column="50"/></operator> <literal type="number" pos:line="71" pos:column="51">0<pos:position pos:line="71" pos:column="52"/></literal></expr>)<pos:position pos:line="71" pos:column="53"/></condition><then pos:line="71" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="5">builtin<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">=<pos:position pos:line="72" pos:column="14"/></operator> <literal type="number" pos:line="72" pos:column="15">1<pos:position pos:line="72" pos:column="16"/></literal></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="73" pos:column="3">else
  <block pos:line="74" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">mutt_make_string<pos:position pos:line="75" pos:column="21"/></name> <argument_list pos:line="75" pos:column="22">(<argument><expr><name pos:line="75" pos:column="23">buf<pos:position pos:line="75" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="28">sizeof <argument_list pos:line="75" pos:column="35">(<argument><expr><name pos:line="75" pos:column="36">buf<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="42">NONULL<pos:position pos:line="75" pos:column="48"/></name><argument_list pos:line="75" pos:column="48">(<argument><expr><name pos:line="75" pos:column="49">PagerFmt<pos:position pos:line="75" pos:column="57"/></name></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="75" pos:column="60">Context<pos:position pos:line="75" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="69">cur<pos:position pos:line="75" pos:column="72"/></name></expr></argument>)<pos:position pos:line="75" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">fputs<pos:position pos:line="76" pos:column="10"/></name> <argument_list pos:line="76" pos:column="11">(<argument><expr><name pos:line="76" pos:column="12">buf<pos:position pos:line="76" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="17">fpout<pos:position pos:line="76" pos:column="22"/></name></expr></argument>)<pos:position pos:line="76" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">fputs<pos:position pos:line="77" pos:column="10"/></name> <argument_list pos:line="77" pos:column="11">(<argument><expr><literal type="string" pos:line="77" pos:column="12">"\n\n"<pos:position pos:line="77" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="20">fpout<pos:position pos:line="77" pos:column="25"/></name></expr></argument>)<pos:position pos:line="77" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="80" pos:column="3">res<pos:position pos:line="80" pos:column="6"/></name> <operator pos:line="80" pos:column="7">=<pos:position pos:line="80" pos:column="8"/></operator> <call><name pos:line="80" pos:column="9">mutt_copy_message<pos:position pos:line="80" pos:column="26"/></name> <argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">fpout<pos:position pos:line="80" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="35">Context<pos:position pos:line="80" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="44">cur<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">cmflags<pos:position pos:line="80" pos:column="56"/></name></expr></argument>,
       	<argument><expr><operator pos:line="81" pos:column="9">(<pos:position pos:line="81" pos:column="10"/></operator><ternary><condition><expr><call><name pos:line="81" pos:column="10">option<pos:position pos:line="81" pos:column="16"/></name> <argument_list pos:line="81" pos:column="17">(<argument><expr><name pos:line="81" pos:column="18">OPTWEED<pos:position pos:line="81" pos:column="25"/></name></expr></argument>)<pos:position pos:line="81" pos:column="26"/></argument_list></call></expr> ?<pos:position pos:line="81" pos:column="28"/></condition><then pos:line="81" pos:column="28"> <expr><operator pos:line="81" pos:column="29">(<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="30">CH_WEED<pos:position pos:line="81" pos:column="37"/></name> <operator pos:line="81" pos:column="38">|<pos:position pos:line="81" pos:column="39"/></operator> <name pos:line="81" pos:column="40">CH_REORDER<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">)<pos:position pos:line="81" pos:column="51"/></operator></expr> <pos:position pos:line="81" pos:column="52"/></then><else pos:line="81" pos:column="52">: <expr><literal type="number" pos:line="81" pos:column="54">0<pos:position pos:line="81" pos:column="55"/></literal></expr></else></ternary><operator pos:line="81" pos:column="55">)<pos:position pos:line="81" pos:column="56"/></operator> <operator pos:line="81" pos:column="57">|<pos:position pos:line="81" pos:column="58"/></operator> <name pos:line="81" pos:column="59">CH_DECODE<pos:position pos:line="81" pos:column="68"/></name> <operator pos:line="81" pos:column="69">|<pos:position pos:line="81" pos:column="70"/></operator> <name pos:line="81" pos:column="71">CH_FROM<pos:position pos:line="81" pos:column="78"/></name></expr></argument>)<pos:position pos:line="81" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="80"/></expr_stmt>
  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><operator pos:line="82" pos:column="7">(<pos:position pos:line="82" pos:column="8"/></operator><call><name pos:line="82" pos:column="8">safe_fclose<pos:position pos:line="82" pos:column="19"/></name> <argument_list pos:line="82" pos:column="20">(<argument><expr><operator pos:line="82" pos:column="21">&amp;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="22">fpout<pos:position pos:line="82" pos:column="27"/></name></expr></argument>)<pos:position pos:line="82" pos:column="28"/></argument_list></call> <operator pos:line="82" pos:column="29">!=<pos:position pos:line="82" pos:column="31"/></operator> <literal type="number" pos:line="82" pos:column="32">0<pos:position pos:line="82" pos:column="33"/></literal> <operator pos:line="82" pos:column="34">&amp;&amp;<pos:position pos:line="82" pos:column="44"/></operator> <name pos:line="82" pos:column="37">errno<pos:position pos:line="82" pos:column="42"/></name> <operator pos:line="82" pos:column="43">!=<pos:position pos:line="82" pos:column="45"/></operator> <name pos:line="82" pos:column="46">EPIPE<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">)<pos:position pos:line="82" pos:column="52"/></operator> <operator pos:line="82" pos:column="53">||<pos:position pos:line="82" pos:column="55"/></operator> <name pos:line="82" pos:column="56">res<pos:position pos:line="82" pos:column="59"/></name> <operator pos:line="82" pos:column="60">==<pos:position pos:line="82" pos:column="62"/></operator> <operator pos:line="82" pos:column="63">-<pos:position pos:line="82" pos:column="64"/></operator><literal type="number" pos:line="82" pos:column="64">1<pos:position pos:line="82" pos:column="65"/></literal></expr>)<pos:position pos:line="82" pos:column="66"/></condition><then pos:line="82" pos:column="66">
  <block pos:line="83" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">mutt_error<pos:position pos:line="84" pos:column="15"/></name> <argument_list pos:line="84" pos:column="16">(<argument><expr><call><name pos:line="84" pos:column="17">_<pos:position pos:line="84" pos:column="18"/></name><argument_list pos:line="84" pos:column="18">(<argument><expr><literal type="string" pos:line="84" pos:column="19">"Could not copy message"<pos:position pos:line="84" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="46"/></expr_stmt>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">fpfilterout<pos:position pos:line="85" pos:column="20"/></name> <operator pos:line="85" pos:column="21">!=<pos:position pos:line="85" pos:column="23"/></operator> <name pos:line="85" pos:column="24">NULL<pos:position pos:line="85" pos:column="28"/></name></expr>)<pos:position pos:line="85" pos:column="29"/></condition><then pos:line="85" pos:column="29">
    <block pos:line="86" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">mutt_wait_filter<pos:position pos:line="87" pos:column="23"/></name> <argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">filterpid<pos:position pos:line="87" pos:column="34"/></name></expr></argument>)<pos:position pos:line="87" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">safe_fclose<pos:position pos:line="88" pos:column="18"/></name> <argument_list pos:line="88" pos:column="19">(<argument><expr><operator pos:line="88" pos:column="20">&amp;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="21">fpfilterout<pos:position pos:line="88" pos:column="32"/></name></expr></argument>)<pos:position pos:line="88" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">mutt_unlink<pos:position pos:line="90" pos:column="16"/></name> <argument_list pos:line="90" pos:column="17">(<argument><expr><name pos:line="90" pos:column="18">tempfile<pos:position pos:line="90" pos:column="26"/></name></expr></argument>)<pos:position pos:line="90" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="28"/></expr_stmt>
    <return pos:line="91" pos:column="5">return <expr><literal type="number" pos:line="91" pos:column="12">0<pos:position pos:line="91" pos:column="13"/></literal></expr>;<pos:position pos:line="91" pos:column="14"/></return>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>

  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><name pos:line="94" pos:column="7">fpfilterout<pos:position pos:line="94" pos:column="18"/></name> <operator pos:line="94" pos:column="19">!=<pos:position pos:line="94" pos:column="21"/></operator> <name pos:line="94" pos:column="22">NULL<pos:position pos:line="94" pos:column="26"/></name> <operator pos:line="94" pos:column="27">&amp;&amp;<pos:position pos:line="94" pos:column="37"/></operator> <call><name pos:line="94" pos:column="30">mutt_wait_filter<pos:position pos:line="94" pos:column="46"/></name> <argument_list pos:line="94" pos:column="47">(<argument><expr><name pos:line="94" pos:column="48">filterpid<pos:position pos:line="94" pos:column="57"/></name></expr></argument>)<pos:position pos:line="94" pos:column="58"/></argument_list></call> <operator pos:line="94" pos:column="59">!=<pos:position pos:line="94" pos:column="61"/></operator> <literal type="number" pos:line="94" pos:column="62">0<pos:position pos:line="94" pos:column="63"/></literal></expr>)<pos:position pos:line="94" pos:column="64"/></condition><then pos:line="94" pos:column="64">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="95" pos:column="29"/></name> <argument_list pos:line="95" pos:column="30">(<argument><expr><name pos:line="95" pos:column="31">NULL<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">safe_fclose<pos:position pos:line="97" pos:column="14"/></name> <argument_list pos:line="97" pos:column="15">(<argument><expr><operator pos:line="97" pos:column="16">&amp;<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="17">fpfilterout<pos:position pos:line="97" pos:column="28"/></name></expr></argument>)<pos:position pos:line="97" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="30"/></expr_stmt>
  
<cpp:ifdef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifdef<pos:position pos:line="99" pos:column="7"/></cpp:directive> <name pos:line="99" pos:column="8">HAVE_PGP<pos:position pos:line="99" pos:column="16"/></name></cpp:ifdef>
  <comment type="block" pos:line="100" pos:column="3">/* update PGP information for this message */</comment>
  <expr_stmt><expr><name><name pos:line="101" pos:column="3">cur<pos:position pos:line="101" pos:column="6"/></name><operator pos:line="101" pos:column="6">-&gt;<pos:position pos:line="101" pos:column="11"/></operator><name pos:line="101" pos:column="8">pgp<pos:position pos:line="101" pos:column="11"/></name></name> <operator pos:line="101" pos:column="12">|=<pos:position pos:line="101" pos:column="14"/></operator> <call><name pos:line="101" pos:column="15">pgp_query<pos:position pos:line="101" pos:column="24"/></name> <argument_list pos:line="101" pos:column="25">(<argument><expr><name><name pos:line="101" pos:column="26">cur<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">-&gt;<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="31">content<pos:position pos:line="101" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="104" pos:column="3">if <condition pos:line="104" pos:column="6">(<expr><name pos:line="104" pos:column="7">builtin<pos:position pos:line="104" pos:column="14"/></name></expr>)<pos:position pos:line="104" pos:column="15"/></condition><then pos:line="104" pos:column="15">
  <block pos:line="105" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="106" pos:column="5">pager_t<pos:position pos:line="106" pos:column="12"/></name></type> <name pos:line="106" pos:column="13">info<pos:position pos:line="106" pos:column="17"/></name></decl>;<pos:position pos:line="106" pos:column="18"/></decl_stmt>

<cpp:ifdef pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">ifdef<pos:position pos:line="108" pos:column="7"/></cpp:directive> <name pos:line="108" pos:column="8">HAVE_PGP<pos:position pos:line="108" pos:column="16"/></name></cpp:ifdef>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><name pos:line="109" pos:column="9">cmflags<pos:position pos:line="109" pos:column="16"/></name> <operator pos:line="109" pos:column="17">&amp;<pos:position pos:line="109" pos:column="22"/></operator> <name pos:line="109" pos:column="19">M_CM_VERIFY<pos:position pos:line="109" pos:column="30"/></name></expr>)<pos:position pos:line="109" pos:column="31"/></condition><then pos:line="109" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="7">mutt_message<pos:position pos:line="110" pos:column="19"/></name> <argument_list pos:line="110" pos:column="20">(<argument><expr><ternary><condition><expr><operator pos:line="110" pos:column="21">(<pos:position pos:line="110" pos:column="22"/></operator><name><name pos:line="110" pos:column="22">cur<pos:position pos:line="110" pos:column="25"/></name><operator pos:line="110" pos:column="25">-&gt;<pos:position pos:line="110" pos:column="30"/></operator><name pos:line="110" pos:column="27">pgp<pos:position pos:line="110" pos:column="30"/></name></name> <operator pos:line="110" pos:column="31">&amp;<pos:position pos:line="110" pos:column="36"/></operator> <name pos:line="110" pos:column="33">PGPGOODSIGN<pos:position pos:line="110" pos:column="44"/></name><operator pos:line="110" pos:column="44">)<pos:position pos:line="110" pos:column="45"/></operator></expr> ?<pos:position pos:line="110" pos:column="47"/></condition><then pos:line="110" pos:column="47">
		    <expr><call><name pos:line="111" pos:column="21">_<pos:position pos:line="111" pos:column="22"/></name><argument_list pos:line="111" pos:column="22">(<argument><expr><literal type="string" pos:line="111" pos:column="23">"PGP signature successfully verified."<pos:position pos:line="111" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="62"/></argument_list></call></expr> <pos:position pos:line="111" pos:column="63"/></then><else pos:line="111" pos:column="63">:
		    <expr><call><name pos:line="112" pos:column="21">_<pos:position pos:line="112" pos:column="22"/></name><argument_list pos:line="112" pos:column="22">(<argument><expr><literal type="string" pos:line="112" pos:column="23">"PGP signature could NOT be verified."<pos:position pos:line="112" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="112" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="64"/></expr_stmt></block></then></if>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="115" pos:column="5">/* Invoke the builtin pager */</comment>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">memset<pos:position pos:line="116" pos:column="11"/></name> <argument_list pos:line="116" pos:column="12">(<argument><expr><operator pos:line="116" pos:column="13">&amp;<pos:position pos:line="116" pos:column="18"/></operator><name pos:line="116" pos:column="14">info<pos:position pos:line="116" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="20">0<pos:position pos:line="116" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="23">sizeof <argument_list pos:line="116" pos:column="30">(<argument><expr><name pos:line="116" pos:column="31">pager_t<pos:position pos:line="116" pos:column="38"/></name></expr></argument>)<pos:position pos:line="116" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="116" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">info<pos:position pos:line="117" pos:column="9"/></name><operator pos:line="117" pos:column="9">.<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="10">hdr<pos:position pos:line="117" pos:column="13"/></name></name> <operator pos:line="117" pos:column="14">=<pos:position pos:line="117" pos:column="15"/></operator> <name pos:line="117" pos:column="16">cur<pos:position pos:line="117" pos:column="19"/></name></expr>;<pos:position pos:line="117" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="118" pos:column="5">info<pos:position pos:line="118" pos:column="9"/></name><operator pos:line="118" pos:column="9">.<pos:position pos:line="118" pos:column="10"/></operator><name pos:line="118" pos:column="10">ctx<pos:position pos:line="118" pos:column="13"/></name></name> <operator pos:line="118" pos:column="14">=<pos:position pos:line="118" pos:column="15"/></operator> <name pos:line="118" pos:column="16">Context<pos:position pos:line="118" pos:column="23"/></name></expr>;<pos:position pos:line="118" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="119" pos:column="5">rc<pos:position pos:line="119" pos:column="7"/></name> <operator pos:line="119" pos:column="8">=<pos:position pos:line="119" pos:column="9"/></operator> <call><name pos:line="119" pos:column="10">mutt_pager<pos:position pos:line="119" pos:column="20"/></name> <argument_list pos:line="119" pos:column="21">(<argument><expr><name pos:line="119" pos:column="22">NULL<pos:position pos:line="119" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="28">tempfile<pos:position pos:line="119" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="38">M_PAGER_MESSAGE<pos:position pos:line="119" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="55">&amp;<pos:position pos:line="119" pos:column="60"/></operator><name pos:line="119" pos:column="56">info<pos:position pos:line="119" pos:column="60"/></name></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></then>
  <else pos:line="121" pos:column="3">else
  <block pos:line="122" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="123" pos:column="5">int<pos:position pos:line="123" pos:column="8"/></name></type> <name pos:line="123" pos:column="9">r<pos:position pos:line="123" pos:column="10"/></name></decl>;<pos:position pos:line="123" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="125" pos:column="5">mutt_endwin<pos:position pos:line="125" pos:column="16"/></name> <argument_list pos:line="125" pos:column="17">(<argument><expr><name pos:line="125" pos:column="18">NULL<pos:position pos:line="125" pos:column="22"/></name></expr></argument>)<pos:position pos:line="125" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="126" pos:column="5">snprintf<pos:position pos:line="126" pos:column="13"/></name> <argument_list pos:line="126" pos:column="14">(<argument><expr><name pos:line="126" pos:column="15">buf<pos:position pos:line="126" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="126" pos:column="20">sizeof <argument_list pos:line="126" pos:column="27">(<argument><expr><name pos:line="126" pos:column="28">buf<pos:position pos:line="126" pos:column="31"/></name></expr></argument>)<pos:position pos:line="126" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="34">"%s %s"<pos:position pos:line="126" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="126" pos:column="43">NONULL<pos:position pos:line="126" pos:column="49"/></name><argument_list pos:line="126" pos:column="49">(<argument><expr><name pos:line="126" pos:column="50">Pager<pos:position pos:line="126" pos:column="55"/></name></expr></argument>)<pos:position pos:line="126" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="126" pos:column="58">tempfile<pos:position pos:line="126" pos:column="66"/></name></expr></argument>)<pos:position pos:line="126" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="68"/></expr_stmt>
    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><operator pos:line="127" pos:column="9">(<pos:position pos:line="127" pos:column="10"/></operator><name pos:line="127" pos:column="10">r<pos:position pos:line="127" pos:column="11"/></name> <operator pos:line="127" pos:column="12">=<pos:position pos:line="127" pos:column="13"/></operator> <call><name pos:line="127" pos:column="14">mutt_system<pos:position pos:line="127" pos:column="25"/></name> <argument_list pos:line="127" pos:column="26">(<argument><expr><name pos:line="127" pos:column="27">buf<pos:position pos:line="127" pos:column="30"/></name></expr></argument>)<pos:position pos:line="127" pos:column="31"/></argument_list></call><operator pos:line="127" pos:column="31">)<pos:position pos:line="127" pos:column="32"/></operator> <operator pos:line="127" pos:column="33">==<pos:position pos:line="127" pos:column="35"/></operator> <operator pos:line="127" pos:column="36">-<pos:position pos:line="127" pos:column="37"/></operator><literal type="number" pos:line="127" pos:column="37">1<pos:position pos:line="127" pos:column="38"/></literal></expr>)<pos:position pos:line="127" pos:column="39"/></condition><then pos:line="127" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="7">mutt_error<pos:position pos:line="128" pos:column="17"/></name> <argument_list pos:line="128" pos:column="18">(<argument><expr><call><name pos:line="128" pos:column="19">_<pos:position pos:line="128" pos:column="20"/></name><argument_list pos:line="128" pos:column="20">(<argument><expr><literal type="string" pos:line="128" pos:column="21">"Error running \"%s\"!"<pos:position pos:line="128" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="128" pos:column="47">buf<pos:position pos:line="128" pos:column="50"/></name></expr></argument>)<pos:position pos:line="128" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="52"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">unlink<pos:position pos:line="129" pos:column="11"/></name> <argument_list pos:line="129" pos:column="12">(<argument><expr><name pos:line="129" pos:column="13">tempfile<pos:position pos:line="129" pos:column="21"/></name></expr></argument>)<pos:position pos:line="129" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">keypad<pos:position pos:line="130" pos:column="11"/></name> <argument_list pos:line="130" pos:column="12">(<argument><expr><name pos:line="130" pos:column="13">stdscr<pos:position pos:line="130" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="21">TRUE<pos:position pos:line="130" pos:column="25"/></name></expr></argument>)<pos:position pos:line="130" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="27"/></expr_stmt>
    <if pos:line="131" pos:column="5">if <condition pos:line="131" pos:column="8">(<expr><name pos:line="131" pos:column="9">r<pos:position pos:line="131" pos:column="10"/></name> <operator pos:line="131" pos:column="11">!=<pos:position pos:line="131" pos:column="13"/></operator> <operator pos:line="131" pos:column="14">-<pos:position pos:line="131" pos:column="15"/></operator><literal type="number" pos:line="131" pos:column="15">1<pos:position pos:line="131" pos:column="16"/></literal></expr>)<pos:position pos:line="131" pos:column="17"/></condition><then pos:line="131" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="7">mutt_set_flag<pos:position pos:line="132" pos:column="20"/></name> <argument_list pos:line="132" pos:column="21">(<argument><expr><name pos:line="132" pos:column="22">Context<pos:position pos:line="132" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="31">cur<pos:position pos:line="132" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="36">M_READ<pos:position pos:line="132" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="44">1<pos:position pos:line="132" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="47"/></expr_stmt></block></then></if>
    <if pos:line="133" pos:column="5">if <condition pos:line="133" pos:column="8">(<expr><name pos:line="133" pos:column="9">r<pos:position pos:line="133" pos:column="10"/></name> <operator pos:line="133" pos:column="11">!=<pos:position pos:line="133" pos:column="13"/></operator> <operator pos:line="133" pos:column="14">-<pos:position pos:line="133" pos:column="15"/></operator><literal type="number" pos:line="133" pos:column="15">1<pos:position pos:line="133" pos:column="16"/></literal> <operator pos:line="133" pos:column="17">&amp;&amp;<pos:position pos:line="133" pos:column="27"/></operator> <call><name pos:line="133" pos:column="20">option<pos:position pos:line="133" pos:column="26"/></name> <argument_list pos:line="133" pos:column="27">(<argument><expr><name pos:line="133" pos:column="28">OPTPROMPTAFTER<pos:position pos:line="133" pos:column="42"/></name></expr></argument>)<pos:position pos:line="133" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="44"/></condition><then pos:line="133" pos:column="44">
    <block pos:line="134" pos:column="5">{
      <macro><name pos:line="135" pos:column="7">mutt_ungetch<pos:position pos:line="135" pos:column="19"/></name> <argument_list pos:line="135" pos:column="20">(<argument pos:line="135" pos:column="21">mutt_any_key_to_continue _(<literal type="string" pos:line="135" pos:column="48">"Command: "<pos:position pos:line="135" pos:column="59"/></literal>)<pos:position pos:line="135" pos:column="60"/></argument>, <argument><literal type="number" pos:line="135" pos:column="62">0<pos:position pos:line="135" pos:column="63"/></literal></argument>)<pos:position pos:line="135" pos:column="64"/></argument_list></macro><empty_stmt pos:line="135" pos:column="64">;<pos:position pos:line="135" pos:column="65"/></empty_stmt>
      <expr_stmt><expr><name pos:line="136" pos:column="7">rc<pos:position pos:line="136" pos:column="9"/></name> <operator pos:line="136" pos:column="10">=<pos:position pos:line="136" pos:column="11"/></operator> <call><name pos:line="136" pos:column="12">km_dokey<pos:position pos:line="136" pos:column="20"/></name> <argument_list pos:line="136" pos:column="21">(<argument><expr><name pos:line="136" pos:column="22">MENU_PAGER<pos:position pos:line="136" pos:column="32"/></name></expr></argument>)<pos:position pos:line="136" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then>
    <else pos:line="138" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="7">rc<pos:position pos:line="139" pos:column="9"/></name> <operator pos:line="139" pos:column="10">=<pos:position pos:line="139" pos:column="11"/></operator> <literal type="number" pos:line="139" pos:column="12">0<pos:position pos:line="139" pos:column="13"/></literal></expr>;<pos:position pos:line="139" pos:column="14"/></expr_stmt></block></else></if>
  }<pos:position pos:line="140" pos:column="4"/></block></else></if>

  <return pos:line="142" pos:column="3">return <expr><name pos:line="142" pos:column="10">rc<pos:position pos:line="142" pos:column="12"/></name></expr>;<pos:position pos:line="142" pos:column="13"/></return>
}<pos:position pos:line="143" pos:column="2"/></block></function></unit>

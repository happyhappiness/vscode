<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_716_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">data_object_to_stream<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">gpgme_data_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">data<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">FILE<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">fp<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">err<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><literal type="number" pos:line="4" pos:column="12">4096<pos:position pos:line="4" pos:column="16"/></literal></expr>]<pos:position pos:line="4" pos:column="17"/></index></name></decl>, <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">p<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">nread<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">err<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><ternary><condition><expr><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><call><name pos:line="7" pos:column="11">gpgme_data_seek<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">data<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="34">0<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="37">SEEK_SET<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call> <operator pos:line="7" pos:column="47">==<pos:position pos:line="7" pos:column="49"/></operator> <operator pos:line="7" pos:column="50">-<pos:position pos:line="7" pos:column="51"/></operator><literal type="number" pos:line="7" pos:column="51">1<pos:position pos:line="7" pos:column="52"/></literal><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator></expr>
         ?<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11"> <expr><call><name pos:line="8" pos:column="12">gpgme_error_from_errno<pos:position pos:line="8" pos:column="34"/></name> <argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">errno<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr> <pos:position pos:line="8" pos:column="43"/></then><else pos:line="8" pos:column="43">: <expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr></else></ternary><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">err<pos:position pos:line="9" pos:column="10"/></name></expr>)<pos:position pos:line="9" pos:column="11"/></condition><then pos:line="9" pos:column="11">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">mutt_error<pos:position pos:line="11" pos:column="17"/></name> <argument_list pos:line="11" pos:column="18">(<argument><expr><call><name pos:line="11" pos:column="19">_<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"error rewinding data object: %s\n"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="59">gpgme_strerror<pos:position pos:line="11" pos:column="73"/></name> <argument_list pos:line="11" pos:column="74">(<argument><expr><name pos:line="11" pos:column="75">err<pos:position pos:line="11" pos:column="78"/></name></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><operator pos:line="12" pos:column="14">-<pos:position pos:line="12" pos:column="15"/></operator><literal type="number" pos:line="12" pos:column="15">1<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

  <while pos:line="15" pos:column="3">while <condition pos:line="15" pos:column="9">(<expr><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">nread<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">gpgme_data_read<pos:position pos:line="15" pos:column="34"/></name> <argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">data<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">buf<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="47">sizeof <argument_list pos:line="15" pos:column="54">(<argument><expr><name pos:line="15" pos:column="55">buf<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator></expr>)<pos:position pos:line="15" pos:column="62"/></condition>
    <block pos:line="16" pos:column="5">{
      <comment type="block" pos:line="17" pos:column="7">/* fixme: we are not really converting CRLF to LF but just
         skipping CR. Doing it correctly needs a more complex logic */</comment>
      <for pos:line="19" pos:column="7">for <control pos:line="19" pos:column="11">(<init><expr><name pos:line="19" pos:column="12">p<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name></expr>;<pos:position pos:line="19" pos:column="18"/></init> <condition><expr><name pos:line="19" pos:column="19">nread<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></condition> <incr><expr><name pos:line="19" pos:column="26">p<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">++<pos:position pos:line="19" pos:column="29"/></operator></expr><operator pos:line="19" pos:column="29">,<pos:position pos:line="19" pos:column="30"/></operator> <expr><name pos:line="19" pos:column="31">nread<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">--<pos:position pos:line="19" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="39"/></control>
        <block pos:line="20" pos:column="9">{
          <if pos:line="21" pos:column="11">if <condition pos:line="21" pos:column="14">(<expr><operator pos:line="21" pos:column="15">*<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">p<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">!=<pos:position pos:line="21" pos:column="20"/></operator> <literal type="char" pos:line="21" pos:column="21">'\r'<pos:position pos:line="21" pos:column="25"/></literal></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="13">putc<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><operator pos:line="22" pos:column="19">*<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">p<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">fp<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></for>

     <if pos:line="25" pos:column="6">if <condition pos:line="25" pos:column="9">(<expr><call><name pos:line="25" pos:column="10">ferror<pos:position pos:line="25" pos:column="16"/></name> <argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">fp<pos:position pos:line="25" pos:column="20"/></name></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
       <block pos:line="26" pos:column="8">{
         <expr_stmt><expr><call><name pos:line="27" pos:column="10">mutt_perror<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"[tempfile]"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
         <return pos:line="28" pos:column="10">return <expr><operator pos:line="28" pos:column="17">-<pos:position pos:line="28" pos:column="18"/></operator><literal type="number" pos:line="28" pos:column="18">1<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></return>
       }<pos:position pos:line="29" pos:column="9"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">nread<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">==<pos:position pos:line="31" pos:column="15"/></operator> <operator pos:line="31" pos:column="16">-<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">mutt_error<pos:position pos:line="33" pos:column="17"/></name> <argument_list pos:line="33" pos:column="18">(<argument><expr><call><name pos:line="33" pos:column="19">_<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"error reading data object: %s\n"<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="57">strerror<pos:position pos:line="33" pos:column="65"/></name> <argument_list pos:line="33" pos:column="66">(<argument><expr><name pos:line="33" pos:column="67">errno<pos:position pos:line="33" pos:column="72"/></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="75"/></expr_stmt>
      <return pos:line="34" pos:column="7">return <expr><operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1657_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">crypt_write_signed<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">BODY<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">a<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">STATE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">tempfile<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fp<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">c<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">short<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">hadcr<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">bytes<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">WithCrypto<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><operator pos:line="11" pos:column="8">(<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">fp<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">safe_fopen<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">tempfile<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="36">"w"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call><operator pos:line="11" pos:column="40">)<pos:position pos:line="11" pos:column="41"/></operator></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_perror<pos:position pos:line="13" pos:column="16"/></name> <argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">tempfile<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
      
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">fseeko<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name><name pos:line="17" pos:column="11">s<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">fpin<pos:position pos:line="17" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="20">a<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">hdr_offset<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="35">0<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">bytes<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <name><name pos:line="18" pos:column="11">a<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">length<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">+<pos:position pos:line="18" pos:column="22"/></operator> <name><name pos:line="18" pos:column="23">a<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">offset<pos:position pos:line="18" pos:column="32"/></name></name> <operator pos:line="18" pos:column="33">-<pos:position pos:line="18" pos:column="34"/></operator> <name><name pos:line="18" pos:column="35">a<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">hdr_offset<pos:position pos:line="18" pos:column="48"/></name></name></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">hadcr<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">bytes<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">&gt;<pos:position pos:line="20" pos:column="20"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>)<pos:position pos:line="20" pos:column="20"/></condition>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">c<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">fgetc<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name><name pos:line="22" pos:column="21">s<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">fpin<pos:position pos:line="22" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call><operator pos:line="22" pos:column="29">)<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="34">EOF<pos:position pos:line="22" pos:column="37"/></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
      <block type="pseudo"><break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break></block></then></if>
    
    <expr_stmt><expr><name pos:line="25" pos:column="5">bytes<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">--<pos:position pos:line="25" pos:column="12"/></operator></expr>;<pos:position pos:line="25" pos:column="13"/></expr_stmt>
    
    <if pos:line="27" pos:column="5">if  <condition pos:line="27" pos:column="9">(<expr><name pos:line="27" pos:column="10">c<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">==<pos:position pos:line="27" pos:column="14"/></operator> <literal type="char" pos:line="27" pos:column="15">'\r'<pos:position pos:line="27" pos:column="19"/></literal></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">hadcr<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <literal type="number" pos:line="28" pos:column="15">1<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt></block></then>
    <else pos:line="29" pos:column="5">else 
    <block pos:line="30" pos:column="5">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">c<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">==<pos:position pos:line="31" pos:column="15"/></operator> <literal type="char" pos:line="31" pos:column="16">'\n'<pos:position pos:line="31" pos:column="20"/></literal> <operator pos:line="31" pos:column="21">&amp;&amp;<pos:position pos:line="31" pos:column="31"/></operator> <operator pos:line="31" pos:column="24">!<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">hadcr<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="9">fputc<pos:position pos:line="32" pos:column="14"/></name> <argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="char" pos:line="32" pos:column="16">'\r'<pos:position pos:line="32" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="22">fp<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt></block></then></if>
      
      <expr_stmt><expr><name pos:line="34" pos:column="7">hadcr<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <literal type="number" pos:line="34" pos:column="15">0<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
    
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">fputc<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">c<pos:position pos:line="37" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="15">fp<pos:position pos:line="37" pos:column="17"/></name></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    
  }<pos:position pos:line="39" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">safe_fclose<pos:position pos:line="40" pos:column="14"/></name> <argument_list pos:line="40" pos:column="15">(<argument><expr><operator pos:line="40" pos:column="16">&amp;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="17">fp<pos:position pos:line="40" pos:column="19"/></name></expr></argument>)<pos:position pos:line="40" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>

  <return pos:line="42" pos:column="3">return <expr><literal type="number" pos:line="42" pos:column="10">0<pos:position pos:line="42" pos:column="11"/></literal></expr>;<pos:position pos:line="42" pos:column="12"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1707_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">smtp_open<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">CONNECTION<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">conn<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">mutt_socket_open<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">conn<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="8" pos:column="3">/* get greeting string */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">rc<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">smtp_get_resp<pos:position pos:line="9" pos:column="26"/></name> <argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">conn<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">rc<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">rc<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">smtp_helo<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">conn<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">rc<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">USE_SSL<pos:position pos:line="15" pos:column="15"/></name></cpp:ifdef>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">conn<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">ssf<pos:position pos:line="16" pos:column="16"/></name></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">rc<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <name pos:line="17" pos:column="10">MUTT_NO<pos:position pos:line="17" pos:column="17"/></name></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">option<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">OPTSSLFORCETLS<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">rc<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <name pos:line="19" pos:column="10">MUTT_YES<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><call><name pos:line="20" pos:column="12">mutt_bit_isset<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">Capabilities<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">STARTTLS<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call> <operator pos:line="20" pos:column="52">&amp;&amp;<pos:position pos:line="20" pos:column="62"/></operator>
           <operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">rc<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">query_quadoption<pos:position pos:line="21" pos:column="34"/></name> <argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">OPT_SSLSTARTTLS<pos:position pos:line="21" pos:column="51"/></name></expr></argument>,
                                   <argument><expr><call><name pos:line="22" pos:column="36">_<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><literal type="string" pos:line="22" pos:column="38">"Secure connection with TLS?"<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call><operator pos:line="22" pos:column="69">)<pos:position pos:line="22" pos:column="70"/></operator> <operator pos:line="22" pos:column="71">==<pos:position pos:line="22" pos:column="73"/></operator> <operator pos:line="22" pos:column="74">-<pos:position pos:line="22" pos:column="75"/></operator><literal type="number" pos:line="22" pos:column="75">1<pos:position pos:line="22" pos:column="76"/></literal></expr>)<pos:position pos:line="22" pos:column="77"/></condition><then pos:line="22" pos:column="77">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">rc<pos:position pos:line="23" pos:column="14"/></name></expr>;<pos:position pos:line="23" pos:column="15"/></return></block></then></if></elseif></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">rc<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">==<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">MUTT_YES<pos:position pos:line="25" pos:column="21"/></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
  <block pos:line="26" pos:column="3">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">mutt_socket_write<pos:position pos:line="27" pos:column="26"/></name> <argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">conn<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="34">"STARTTLS\r\n"<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call> <operator pos:line="27" pos:column="50">&lt;<pos:position pos:line="27" pos:column="54"/></operator> <literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">smtp_err_write<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></return></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">rc<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">smtp_get_resp<pos:position pos:line="29" pos:column="28"/></name> <argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">conn<pos:position pos:line="29" pos:column="34"/></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call><operator pos:line="29" pos:column="35">)<pos:position pos:line="29" pos:column="36"/></operator></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">rc<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">mutt_ssl_starttls<pos:position pos:line="32" pos:column="26"/></name> <argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">conn<pos:position pos:line="32" pos:column="32"/></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34">
    <block pos:line="33" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">mutt_error<pos:position pos:line="34" pos:column="17"/></name> <argument_list pos:line="34" pos:column="18">(<argument><expr><call><name pos:line="34" pos:column="19">_<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><literal type="string" pos:line="34" pos:column="21">"Could not negotiate TLS connection"<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">mutt_sleep<pos:position pos:line="35" pos:column="17"/></name> <argument_list pos:line="35" pos:column="18">(<argument><expr><literal type="number" pos:line="35" pos:column="19">1<pos:position pos:line="35" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
      <return pos:line="36" pos:column="7">return <expr><operator pos:line="36" pos:column="14">-<pos:position pos:line="36" pos:column="15"/></operator><literal type="number" pos:line="36" pos:column="15">1<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* re-EHLO to get authentication mechanisms */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">rc<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">smtp_helo<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">conn<pos:position pos:line="40" pos:column="30"/></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call><operator pos:line="40" pos:column="31">)<pos:position pos:line="40" pos:column="32"/></operator></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33">
      <block type="pseudo"><return pos:line="41" pos:column="7">return <expr><name pos:line="41" pos:column="14">rc<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name><name pos:line="45" pos:column="7">conn<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">account<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">.<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">flags<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">&amp;<pos:position pos:line="45" pos:column="32"/></operator> <name pos:line="45" pos:column="29">MUTT_ACCT_USER<pos:position pos:line="45" pos:column="43"/></name></expr>)<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44">
  <block pos:line="46" pos:column="3">{
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">!<pos:position pos:line="47" pos:column="10"/></operator><call><name pos:line="47" pos:column="10">mutt_bit_isset<pos:position pos:line="47" pos:column="24"/></name> <argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">Capabilities<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">AUTH<pos:position pos:line="47" pos:column="44"/></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="46"/></condition><then pos:line="47" pos:column="46">
    <block pos:line="48" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">mutt_error<pos:position pos:line="49" pos:column="17"/></name> <argument_list pos:line="49" pos:column="18">(<argument><expr><call><name pos:line="49" pos:column="19">_<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><literal type="string" pos:line="49" pos:column="21">"SMTP server does not support authentication"<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">mutt_sleep<pos:position pos:line="50" pos:column="17"/></name> <argument_list pos:line="50" pos:column="18">(<argument><expr><literal type="number" pos:line="50" pos:column="19">1<pos:position pos:line="50" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
      <return pos:line="51" pos:column="7">return <expr><operator pos:line="51" pos:column="14">-<pos:position pos:line="51" pos:column="15"/></operator><literal type="number" pos:line="51" pos:column="15">1<pos:position pos:line="51" pos:column="16"/></literal></expr>;<pos:position pos:line="51" pos:column="17"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">USE_SASL<pos:position pos:line="54" pos:column="16"/></name></cpp:ifdef>
    <return pos:line="55" pos:column="5">return <expr><call><name pos:line="55" pos:column="12">smtp_auth<pos:position pos:line="55" pos:column="21"/></name> <argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">conn<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></return>
<cpp:else pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">else<pos:position pos:line="56" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">mutt_error<pos:position pos:line="57" pos:column="15"/></name> <argument_list pos:line="57" pos:column="16">(<argument><expr><call><name pos:line="57" pos:column="17">_<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><literal type="string" pos:line="57" pos:column="19">"SMTP authentication requires SASL"<pos:position pos:line="57" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">mutt_sleep<pos:position pos:line="58" pos:column="15"/></name> <argument_list pos:line="58" pos:column="16">(<argument><expr><literal type="number" pos:line="58" pos:column="17">1<pos:position pos:line="58" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">-<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="13">1<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></return>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="60" pos:column="8">/* USE_SASL */</comment>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <return pos:line="63" pos:column="3">return <expr><literal type="number" pos:line="63" pos:column="10">0<pos:position pos:line="63" pos:column="11"/></literal></expr>;<pos:position pos:line="63" pos:column="12"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

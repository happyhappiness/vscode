<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2122_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">browse_add_list_result<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">IMAP_DATA<pos:position pos:line="1" pos:column="45"/></name><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">idata<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type> <name pos:line="1" pos:column="66">cmd<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
  <parameter><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">browser_state<pos:position pos:line="2" pos:column="23"/></name></name><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">state<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">short<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">isparent<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_LIST<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">list<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">IMAP_MBOX<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">mx<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">imap_parse_path<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><name><name pos:line="8" pos:column="24">state<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">folder<pos:position pos:line="8" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="39">&amp;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="40">mx<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">dprint<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="number" pos:line="10" pos:column="13">2<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">debugfile<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">,<pos:position pos:line="10" pos:column="27"/></operator>
      <literal type="string" pos:line="11" pos:column="7">"browse_add_list_result: current folder %s makes no sense\n"<pos:position pos:line="11" pos:column="67"/></literal><operator pos:line="11" pos:column="67">,<pos:position pos:line="11" pos:column="68"/></operator> <name><name pos:line="11" pos:column="69">state<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">-&gt;<pos:position pos:line="11" pos:column="79"/></operator><name pos:line="11" pos:column="76">folder<pos:position pos:line="11" pos:column="82"/></name></name><operator pos:line="11" pos:column="82">)<pos:position pos:line="11" pos:column="83"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="85"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">imap_cmd_start<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">idata<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">cmd<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">idata<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">cmdtype<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">IMAP_CT_LIST<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">idata<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">cmddata<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="21">list<pos:position pos:line="17" pos:column="25"/></name></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
  <do pos:line="18" pos:column="3">do
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">list<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">.<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">name<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">rc<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">imap_cmd_step<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">idata<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">rc<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">==<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">IMAP_CMD_CONTINUE<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">&amp;&amp;<pos:position pos:line="23" pos:column="43"/></operator> <name><name pos:line="23" pos:column="36">list<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">.<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">name<pos:position pos:line="23" pos:column="45"/></name></name></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46">
    <block pos:line="24" pos:column="5">{
      <comment type="block" pos:line="25" pos:column="7">/* Let a parent folder never be selectable for navigation */</comment>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">isparent<pos:position pos:line="26" pos:column="19"/></name></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="9">list<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">.<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">noselect<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt></block></then></if>
      <comment type="block" pos:line="28" pos:column="7">/* prune current folder from output */</comment>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">isparent<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">||<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">mutt_strncmp<pos:position pos:line="29" pos:column="35"/></name> <argument_list pos:line="29" pos:column="36">(<argument><expr><name><name pos:line="29" pos:column="37">list<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">.<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">name<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="48">mx<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">.<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">mbox<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="57">strlen<pos:position pos:line="29" pos:column="63"/></name> <argument_list pos:line="29" pos:column="64">(<argument><expr><name><name pos:line="29" pos:column="65">list<pos:position pos:line="29" pos:column="69"/></name><operator pos:line="29" pos:column="69">.<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="70">name<pos:position pos:line="29" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="77"/></condition><then pos:line="29" pos:column="77">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">imap_add_folder<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">list<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">.<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">delim<pos:position pos:line="30" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="38">list<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">.<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="43">name<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="49">list<pos:position pos:line="30" pos:column="53"/></name><operator pos:line="30" pos:column="53">.<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="54">noselect<pos:position pos:line="30" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="64">list<pos:position pos:line="30" pos:column="68"/></name><operator pos:line="30" pos:column="68">.<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="69">noinferiors<pos:position pos:line="30" pos:column="80"/></name></name></expr></argument>,
                         <argument><expr><name pos:line="31" pos:column="26">state<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">isparent<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block>
  while <condition pos:line="34" pos:column="9">(<expr><name pos:line="34" pos:column="10">rc<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">==<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">IMAP_CMD_CONTINUE<pos:position pos:line="34" pos:column="33"/></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition>;<pos:position pos:line="34" pos:column="35"/></do>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">idata<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">cmddata<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">NULL<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">FREE<pos:position pos:line="37" pos:column="7"/></name> <argument_list pos:line="37" pos:column="8">(<argument><expr><operator pos:line="37" pos:column="9">&amp;<pos:position pos:line="37" pos:column="14"/></operator><name><name pos:line="37" pos:column="10">mx<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">.<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">mbox<pos:position pos:line="37" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
  <return pos:line="38" pos:column="3">return <expr><ternary><condition><expr><name pos:line="38" pos:column="10">rc<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">==<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">IMAP_CMD_OK<pos:position pos:line="38" pos:column="27"/></name></expr> ?<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29"> <expr><literal type="number" pos:line="38" pos:column="30">0<pos:position pos:line="38" pos:column="31"/></literal></expr> <pos:position pos:line="38" pos:column="32"/></then><else pos:line="38" pos:column="32">: <expr><operator pos:line="38" pos:column="34">-<pos:position pos:line="38" pos:column="35"/></operator><literal type="number" pos:line="38" pos:column="35">1<pos:position pos:line="38" pos:column="36"/></literal></expr></else></ternary></expr>;<pos:position pos:line="38" pos:column="37"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

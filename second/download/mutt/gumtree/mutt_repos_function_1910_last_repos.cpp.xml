<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1910_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">extend_alias_table<pos:position pos:line="2" pos:column="19"/></name> <parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">new_size<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">alias_map<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">new_map<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">new_size<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <ternary><condition><expr><name pos:line="7" pos:column="14">maxmap<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr> ?<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <expr><literal type="number" pos:line="7" pos:column="28">100<pos:position pos:line="7" pos:column="31"/></literal></expr> <pos:position pos:line="7" pos:column="32"/></then><else pos:line="7" pos:column="32">: <expr><literal type="number" pos:line="7" pos:column="34">2<pos:position pos:line="7" pos:column="35"/></literal> <operator pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">maxmap<pos:position pos:line="7" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">new_map<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator>struct <name pos:line="8" pos:column="21">alias_map<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></operator><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <call><name pos:line="8" pos:column="34">realloc<pos:position pos:line="8" pos:column="41"/></name> <argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">map<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="48">(<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">new_size<pos:position pos:line="8" pos:column="57"/></name>
						<operator pos:line="9" pos:column="49">*<pos:position pos:line="9" pos:column="50"/></operator> <sizeof pos:line="9" pos:column="51">sizeof <argument_list pos:line="9" pos:column="58">(<argument><expr pos:line="9" pos:column="59">struct <name pos:line="9" pos:column="66">alias_map<pos:position pos:line="9" pos:column="75"/></name></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></sizeof><operator pos:line="9" pos:column="76">)<pos:position pos:line="9" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="79"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">new_map<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">==<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">NULL<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23">
    <comment type="block" pos:line="11" pos:column="5">/* Simply don't extend: we don't have any more core.  */</comment>
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">map<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name pos:line="14" pos:column="9">new_map<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">maxmap<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name pos:line="15" pos:column="12">new_size<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
  <return pos:line="16" pos:column="3">return <expr><literal type="number" pos:line="16" pos:column="10">0<pos:position pos:line="16" pos:column="11"/></literal></expr>;<pos:position pos:line="16" pos:column="12"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

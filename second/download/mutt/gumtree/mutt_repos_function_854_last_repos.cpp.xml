<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_854_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">parse_attr_spec<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">BUFFER<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">buf<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">BUFFER<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">s<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">fg<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">bg<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">int<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">attr<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">BUFFER<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type><name pos:line="2" pos:column="78">err<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
  
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">fg<pos:position pos:line="5" pos:column="8"/></name></expr>)<pos:position pos:line="5" pos:column="9"/></condition><then pos:line="5" pos:column="9"> <block type="pseudo"><expr_stmt><expr><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">fg<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">=<pos:position pos:line="5" pos:column="15"/></operator> <operator pos:line="5" pos:column="16">-<pos:position pos:line="5" pos:column="17"/></operator><literal type="number" pos:line="5" pos:column="17">1<pos:position pos:line="5" pos:column="18"/></literal></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt></block></then></if> 
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">bg<pos:position pos:line="6" pos:column="8"/></name></expr>)<pos:position pos:line="6" pos:column="9"/></condition><then pos:line="6" pos:column="9"> <block type="pseudo"><expr_stmt><expr><operator pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">bg<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <operator pos:line="6" pos:column="16">-<pos:position pos:line="6" pos:column="17"/></operator><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">MoreArgs<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">s<pos:position pos:line="8" pos:column="20"/></name></expr></argument>)<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">strfcpy<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">err<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">data<pos:position pos:line="10" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="25">_<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="string" pos:line="10" pos:column="27">"mono: too few arguments"<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="55">err<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">dsize<pos:position pos:line="10" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">mutt_extract_token<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">buf<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">s<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">ascii_strcasecmp<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><literal type="string" pos:line="16" pos:column="25">"bold"<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="33">buf<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">data<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call> <operator pos:line="16" pos:column="44">==<pos:position pos:line="16" pos:column="46"/></operator> <literal type="number" pos:line="16" pos:column="47">0<pos:position pos:line="16" pos:column="48"/></literal></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">attr<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">|=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">A_BOLD<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">ascii_strcasecmp<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><literal type="string" pos:line="18" pos:column="30">"underline"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">buf<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">data<pos:position pos:line="18" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call> <operator pos:line="18" pos:column="54">==<pos:position pos:line="18" pos:column="56"/></operator> <literal type="number" pos:line="18" pos:column="57">0<pos:position pos:line="18" pos:column="58"/></literal></expr>)<pos:position pos:line="18" pos:column="59"/></condition><then pos:line="18" pos:column="59">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">attr<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">|=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">A_UNDERLINE<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><call><name pos:line="20" pos:column="12">ascii_strcasecmp<pos:position pos:line="20" pos:column="28"/></name> <argument_list pos:line="20" pos:column="29">(<argument><expr><literal type="string" pos:line="20" pos:column="30">"none"<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="38">buf<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">data<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call> <operator pos:line="20" pos:column="49">==<pos:position pos:line="20" pos:column="51"/></operator> <literal type="number" pos:line="20" pos:column="52">0<pos:position pos:line="20" pos:column="53"/></literal></expr>)<pos:position pos:line="20" pos:column="54"/></condition><then pos:line="20" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">attr<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">A_NORMAL<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="22" pos:column="3">else <if pos:line="22" pos:column="8">if <condition pos:line="22" pos:column="11">(<expr><call><name pos:line="22" pos:column="12">ascii_strcasecmp<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="string" pos:line="22" pos:column="30">"reverse"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="41">buf<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="46">data<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call> <operator pos:line="22" pos:column="52">==<pos:position pos:line="22" pos:column="54"/></operator> <literal type="number" pos:line="22" pos:column="55">0<pos:position pos:line="22" pos:column="56"/></literal></expr>)<pos:position pos:line="22" pos:column="57"/></condition><then pos:line="22" pos:column="57">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">attr<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">|=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">A_REVERSE<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="24" pos:column="3">else <if pos:line="24" pos:column="8">if <condition pos:line="24" pos:column="11">(<expr><call><name pos:line="24" pos:column="12">ascii_strcasecmp<pos:position pos:line="24" pos:column="28"/></name> <argument_list pos:line="24" pos:column="29">(<argument><expr><literal type="string" pos:line="24" pos:column="30">"standout"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="42">buf<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">data<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call> <operator pos:line="24" pos:column="53">==<pos:position pos:line="24" pos:column="55"/></operator> <literal type="number" pos:line="24" pos:column="56">0<pos:position pos:line="24" pos:column="57"/></literal></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">attr<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">|=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">A_STANDOUT<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="26" pos:column="3">else <if pos:line="26" pos:column="8">if <condition pos:line="26" pos:column="11">(<expr><call><name pos:line="26" pos:column="12">ascii_strcasecmp<pos:position pos:line="26" pos:column="28"/></name> <argument_list pos:line="26" pos:column="29">(<argument><expr><literal type="string" pos:line="26" pos:column="30">"normal"<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="40">buf<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">data<pos:position pos:line="26" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call> <operator pos:line="26" pos:column="51">==<pos:position pos:line="26" pos:column="53"/></operator> <literal type="number" pos:line="26" pos:column="54">0<pos:position pos:line="26" pos:column="55"/></literal></expr>)<pos:position pos:line="26" pos:column="56"/></condition><then pos:line="26" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="5">*<pos:position pos:line="27" pos:column="6"/></operator><name pos:line="27" pos:column="6">attr<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">A_NORMAL<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="27" pos:column="23">/* needs use = instead of |= to clear other bits */</comment>
  <else pos:line="28" pos:column="3">else
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">snprintf<pos:position pos:line="30" pos:column="13"/></name> <argument_list pos:line="30" pos:column="14">(<argument><expr><name><name pos:line="30" pos:column="15">err<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">data<pos:position pos:line="30" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="26">err<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">dsize<pos:position pos:line="30" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="38">_<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><literal type="string" pos:line="30" pos:column="40">"%s: no such attribute"<pos:position pos:line="30" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="66">buf<pos:position pos:line="30" pos:column="69"/></name><operator pos:line="30" pos:column="69">-&gt;<pos:position pos:line="30" pos:column="74"/></operator><name pos:line="30" pos:column="71">data<pos:position pos:line="30" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="77"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></else></if>
  
  <return pos:line="34" pos:column="3">return <expr><literal type="number" pos:line="34" pos:column="10">0<pos:position pos:line="34" pos:column="11"/></literal></expr>;<pos:position pos:line="34" pos:column="12"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

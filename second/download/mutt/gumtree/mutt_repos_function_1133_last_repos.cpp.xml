<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1133_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">pop_fetch_mail<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">LONG_STRING<pos:position pos:line="3" pos:column="26"/></name></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">msgbuf<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">SHORT_STRING<pos:position pos:line="4" pos:column="27"/></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">url<pos:position pos:line="5" pos:column="12"/></name></decl>, <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="10">delanswer<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">last<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="31">msgs<pos:position pos:line="6" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="37">bytes<pos:position pos:line="6" pos:column="42"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="44">rset<pos:position pos:line="6" pos:column="48"/></name> <init pos:line="6" pos:column="49">= <expr><literal type="number" pos:line="6" pos:column="51">0<pos:position pos:line="6" pos:column="52"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="54">ret<pos:position pos:line="6" pos:column="57"/></name></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CONNECTION<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">conn<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CONTEXT<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">ctx<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">MESSAGE<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">msg<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">ACCOUNT<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">acct<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">POP_DATA<pos:position pos:line="11" pos:column="11"/></name> <modifier pos:line="11" pos:column="12">*<pos:position pos:line="11" pos:column="13"/></modifier></type><name pos:line="11" pos:column="13">pop_data<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">PopHost<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
  <block pos:line="14" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">mutt_error<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">_<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><literal type="string" pos:line="15" pos:column="18">"POP host is not defined."<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></decl>;<pos:position pos:line="15" pos:column="46"/></decl_stmt>
    <return pos:line="16" pos:column="5">return;<pos:position pos:line="16" pos:column="12"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">url<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <name pos:line="19" pos:column="9">p<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">safe_calloc<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><call><name pos:line="19" pos:column="26">strlen<pos:position pos:line="19" pos:column="32"/></name> <argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">PopHost<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call> <operator pos:line="19" pos:column="43">+<pos:position pos:line="19" pos:column="44"/></operator> <literal type="number" pos:line="19" pos:column="45">7<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="48">sizeof <argument_list pos:line="19" pos:column="55">(<argument><expr><name pos:line="19" pos:column="56">char<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">url_check_scheme<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">PopHost<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call> <operator pos:line="20" pos:column="34">==<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">U_UNKNOWN<pos:position pos:line="20" pos:column="46"/></name></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">strcpy<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">url<pos:position pos:line="22" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="18">"pop://"<pos:position pos:line="22" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>	<comment type="block" pos:line="22" pos:column="33">/* __STRCPY_CHECKED__ */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">p<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">strchr<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">url<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="22">'\0'<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">strcpy<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">p<pos:position pos:line="25" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="14">PopHost<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>		<comment type="block" pos:line="25" pos:column="33">/* __STRCPY_CHECKED__ */</comment>

  <expr_stmt><expr><name pos:line="27" pos:column="3">ret<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name pos:line="27" pos:column="9">pop_parse_path<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">url<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="30">&amp;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="31">acct<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">FREE<pos:position pos:line="28" pos:column="7"/></name> <argument_list pos:line="28" pos:column="8">(<argument><expr><operator pos:line="28" pos:column="9">&amp;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="10">url<pos:position pos:line="28" pos:column="13"/></name></expr></argument>)<pos:position pos:line="28" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">ret<pos:position pos:line="29" pos:column="10"/></name></expr>)<pos:position pos:line="29" pos:column="11"/></condition><then pos:line="29" pos:column="11">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">mutt_error<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><call><name pos:line="31" pos:column="17">_<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><literal type="string" pos:line="31" pos:column="19">"%s is an invalid POP path"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">PopHost<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>
    <return pos:line="32" pos:column="5">return;<pos:position pos:line="32" pos:column="12"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="35" pos:column="3">conn<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">mutt_conn_find<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">NULL<pos:position pos:line="35" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="32">&amp;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="33">acct<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">!<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">conn<pos:position pos:line="36" pos:column="12"/></name></expr>)<pos:position pos:line="36" pos:column="13"/></condition><then pos:line="36" pos:column="13">
    <block type="pseudo"><return pos:line="37" pos:column="5">return;<pos:position pos:line="37" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="39" pos:column="3">pop_data<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">safe_calloc<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><literal type="number" pos:line="39" pos:column="27">1<pos:position pos:line="39" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="30">sizeof <argument_list pos:line="39" pos:column="37">(<argument><expr><name pos:line="39" pos:column="38">POP_DATA<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">pop_data<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">conn<pos:position pos:line="40" pos:column="17"/></name></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">conn<pos:position pos:line="40" pos:column="24"/></name></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><call><name pos:line="42" pos:column="7">pop_open_connection<pos:position pos:line="42" pos:column="26"/></name> <argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">pop_data<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call> <operator pos:line="42" pos:column="38">&lt;<pos:position pos:line="42" pos:column="42"/></operator> <literal type="number" pos:line="42" pos:column="40">0<pos:position pos:line="42" pos:column="41"/></literal></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42">
  <block pos:line="43" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">mutt_socket_free<pos:position pos:line="44" pos:column="21"/></name> <argument_list pos:line="44" pos:column="22">(<argument><expr><name><name pos:line="44" pos:column="23">pop_data<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">conn<pos:position pos:line="44" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">FREE<pos:position pos:line="45" pos:column="9"/></name> <argument_list pos:line="45" pos:column="10">(<argument><expr><operator pos:line="45" pos:column="11">&amp;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="12">pop_data<pos:position pos:line="45" pos:column="20"/></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
    <return pos:line="46" pos:column="5">return;<pos:position pos:line="46" pos:column="12"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="49" pos:column="3">conn<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">-&gt;<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="9">data<pos:position pos:line="49" pos:column="13"/></name></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">pop_data<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="51" pos:column="3">mutt_message<pos:position pos:line="51" pos:column="15"/></name></type> <name pos:line="51" pos:column="16">_<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><literal type="string" pos:line="51" pos:column="18">"Checking for new messages..."<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></decl>;<pos:position pos:line="51" pos:column="50"/></decl_stmt>

  <comment type="block" pos:line="53" pos:column="3">/* find out how many messages are in the mailbox. */</comment>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">strfcpy<pos:position pos:line="54" pos:column="10"/></name> <argument_list pos:line="54" pos:column="11">(<argument><expr><name pos:line="54" pos:column="12">buffer<pos:position pos:line="54" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="20">"STAT\r\n"<pos:position pos:line="54" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="32">sizeof <argument_list pos:line="54" pos:column="39">(<argument><expr><name pos:line="54" pos:column="40">buffer<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="55" pos:column="3">ret<pos:position pos:line="55" pos:column="6"/></name> <operator pos:line="55" pos:column="7">=<pos:position pos:line="55" pos:column="8"/></operator> <call><name pos:line="55" pos:column="9">pop_query<pos:position pos:line="55" pos:column="18"/></name> <argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">pop_data<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="30">buffer<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="38">sizeof <argument_list pos:line="55" pos:column="45">(<argument><expr><name pos:line="55" pos:column="46">buffer<pos:position pos:line="55" pos:column="52"/></name></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt>
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">ret<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">==<pos:position pos:line="56" pos:column="13"/></operator> <operator pos:line="56" pos:column="14">-<pos:position pos:line="56" pos:column="15"/></operator><literal type="number" pos:line="56" pos:column="15">1<pos:position pos:line="56" pos:column="16"/></literal></expr>)<pos:position pos:line="56" pos:column="17"/></condition><then pos:line="56" pos:column="17">
    <block type="pseudo"><goto pos:line="57" pos:column="5">goto <name pos:line="57" pos:column="10">fail<pos:position pos:line="57" pos:column="14"/></name>;<pos:position pos:line="57" pos:column="15"/></goto></block></then></if>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">ret<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">==<pos:position pos:line="58" pos:column="13"/></operator> <operator pos:line="58" pos:column="14">-<pos:position pos:line="58" pos:column="15"/></operator><literal type="number" pos:line="58" pos:column="15">2<pos:position pos:line="58" pos:column="16"/></literal></expr>)<pos:position pos:line="58" pos:column="17"/></condition><then pos:line="58" pos:column="17">
  <block pos:line="59" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">mutt_error<pos:position pos:line="60" pos:column="15"/></name> <argument_list pos:line="60" pos:column="16">(<argument><expr><literal type="string" pos:line="60" pos:column="17">"%s"<pos:position pos:line="60" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="23">pop_data<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">err_msg<pos:position pos:line="60" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
    <goto pos:line="61" pos:column="5">goto <name pos:line="61" pos:column="10">finish<pos:position pos:line="61" pos:column="16"/></name>;<pos:position pos:line="61" pos:column="17"/></goto>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">sscanf<pos:position pos:line="64" pos:column="9"/></name> <argument_list pos:line="64" pos:column="10">(<argument><expr><name pos:line="64" pos:column="11">buffer<pos:position pos:line="64" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="19">"+OK %d %d"<pos:position pos:line="64" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="32">&amp;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="33">msgs<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="39">&amp;<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="40">bytes<pos:position pos:line="64" pos:column="45"/></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="66" pos:column="3">/* only get unread messages */</comment>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name pos:line="67" pos:column="7">msgs<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">&gt;<pos:position pos:line="67" pos:column="16"/></operator> <literal type="number" pos:line="67" pos:column="14">0<pos:position pos:line="67" pos:column="15"/></literal> <operator pos:line="67" pos:column="16">&amp;&amp;<pos:position pos:line="67" pos:column="26"/></operator> <call><name pos:line="67" pos:column="19">option<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">OPTPOPLAST<pos:position pos:line="67" pos:column="37"/></name></expr></argument>)<pos:position pos:line="67" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="39"/></condition><then pos:line="67" pos:column="39">
  <block pos:line="68" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">strfcpy<pos:position pos:line="69" pos:column="12"/></name> <argument_list pos:line="69" pos:column="13">(<argument><expr><name pos:line="69" pos:column="14">buffer<pos:position pos:line="69" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="22">"LAST\r\n"<pos:position pos:line="69" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="34">sizeof <argument_list pos:line="69" pos:column="41">(<argument><expr><name pos:line="69" pos:column="42">buffer<pos:position pos:line="69" pos:column="48"/></name></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="70" pos:column="5">ret<pos:position pos:line="70" pos:column="8"/></name> <operator pos:line="70" pos:column="9">=<pos:position pos:line="70" pos:column="10"/></operator> <call><name pos:line="70" pos:column="11">pop_query<pos:position pos:line="70" pos:column="20"/></name> <argument_list pos:line="70" pos:column="21">(<argument><expr><name pos:line="70" pos:column="22">pop_data<pos:position pos:line="70" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="32">buffer<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="40">sizeof <argument_list pos:line="70" pos:column="47">(<argument><expr><name pos:line="70" pos:column="48">buffer<pos:position pos:line="70" pos:column="54"/></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">ret<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">==<pos:position pos:line="71" pos:column="15"/></operator> <operator pos:line="71" pos:column="16">-<pos:position pos:line="71" pos:column="17"/></operator><literal type="number" pos:line="71" pos:column="17">1<pos:position pos:line="71" pos:column="18"/></literal></expr>)<pos:position pos:line="71" pos:column="19"/></condition><then pos:line="71" pos:column="19">
      <block type="pseudo"><goto pos:line="72" pos:column="7">goto <name pos:line="72" pos:column="12">fail<pos:position pos:line="72" pos:column="16"/></name>;<pos:position pos:line="72" pos:column="17"/></goto></block></then></if>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">ret<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">==<pos:position pos:line="73" pos:column="15"/></operator> <literal type="number" pos:line="73" pos:column="16">0<pos:position pos:line="73" pos:column="17"/></literal></expr>)<pos:position pos:line="73" pos:column="18"/></condition><then pos:line="73" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="7">sscanf<pos:position pos:line="74" pos:column="13"/></name> <argument_list pos:line="74" pos:column="14">(<argument><expr><name pos:line="74" pos:column="15">buffer<pos:position pos:line="74" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="23">"+OK %d"<pos:position pos:line="74" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="74" pos:column="33">&amp;<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="34">last<pos:position pos:line="74" pos:column="38"/></name></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt></block></then></if>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><name pos:line="77" pos:column="7">msgs<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">&lt;=<pos:position pos:line="77" pos:column="17"/></operator> <name pos:line="77" pos:column="15">last<pos:position pos:line="77" pos:column="19"/></name></expr>)<pos:position pos:line="77" pos:column="20"/></condition><then pos:line="77" pos:column="20">
  <block pos:line="78" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="79" pos:column="5">mutt_message<pos:position pos:line="79" pos:column="17"/></name></type> <name pos:line="79" pos:column="18">_<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><literal type="string" pos:line="79" pos:column="20">"No new mail in POP mailbox."<pos:position pos:line="79" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="50"/></argument_list></decl>;<pos:position pos:line="79" pos:column="51"/></decl_stmt>
    <goto pos:line="80" pos:column="5">goto <name pos:line="80" pos:column="10">finish<pos:position pos:line="80" pos:column="16"/></name>;<pos:position pos:line="80" pos:column="17"/></goto>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>

  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><call><name pos:line="83" pos:column="7">mx_open_mailbox<pos:position pos:line="83" pos:column="22"/></name> <argument_list pos:line="83" pos:column="23">(<argument><expr><call><name pos:line="83" pos:column="24">NONULL<pos:position pos:line="83" pos:column="30"/></name> <argument_list pos:line="83" pos:column="31">(<argument><expr><name pos:line="83" pos:column="32">Spoolfile<pos:position pos:line="83" pos:column="41"/></name></expr></argument>)<pos:position pos:line="83" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="83" pos:column="44">MUTT_APPEND<pos:position pos:line="83" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="57">&amp;<pos:position pos:line="83" pos:column="62"/></operator><name pos:line="83" pos:column="58">ctx<pos:position pos:line="83" pos:column="61"/></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call> <operator pos:line="83" pos:column="63">==<pos:position pos:line="83" pos:column="65"/></operator> <name pos:line="83" pos:column="66">NULL<pos:position pos:line="83" pos:column="70"/></name></expr>)<pos:position pos:line="83" pos:column="71"/></condition><then pos:line="83" pos:column="71">
    <block type="pseudo"><goto pos:line="84" pos:column="5">goto <name pos:line="84" pos:column="10">finish<pos:position pos:line="84" pos:column="16"/></name>;<pos:position pos:line="84" pos:column="17"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="86" pos:column="3">delanswer<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <call><name pos:line="86" pos:column="15">query_quadoption<pos:position pos:line="86" pos:column="31"/></name> <argument_list pos:line="86" pos:column="32">(<argument><expr><name pos:line="86" pos:column="33">OPT_POPDELETE<pos:position pos:line="86" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="48">_<pos:position pos:line="86" pos:column="49"/></name><argument_list pos:line="86" pos:column="49">(<argument><expr><literal type="string" pos:line="86" pos:column="50">"Delete messages from server?"<pos:position pos:line="86" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="83"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="88" pos:column="3">snprintf<pos:position pos:line="88" pos:column="11"/></name> <argument_list pos:line="88" pos:column="12">(<argument><expr><name pos:line="88" pos:column="13">msgbuf<pos:position pos:line="88" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="21">sizeof <argument_list pos:line="88" pos:column="28">(<argument><expr><name pos:line="88" pos:column="29">msgbuf<pos:position pos:line="88" pos:column="35"/></name></expr></argument>)<pos:position pos:line="88" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="38">_<pos:position pos:line="88" pos:column="39"/></name><argument_list pos:line="88" pos:column="39">(<argument><expr><literal type="string" pos:line="88" pos:column="40">"Reading new messages (%d bytes)..."<pos:position pos:line="88" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="88" pos:column="79">bytes<pos:position pos:line="88" pos:column="84"/></name></expr></argument>)<pos:position pos:line="88" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="86"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="89" pos:column="3">mutt_message<pos:position pos:line="89" pos:column="15"/></name> <argument_list pos:line="89" pos:column="16">(<argument><expr><literal type="string" pos:line="89" pos:column="17">"%s"<pos:position pos:line="89" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="23">msgbuf<pos:position pos:line="89" pos:column="29"/></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>

  <for pos:line="91" pos:column="3">for <control pos:line="91" pos:column="7">(<init><expr><name pos:line="91" pos:column="8">i<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <name pos:line="91" pos:column="12">last<pos:position pos:line="91" pos:column="16"/></name> <operator pos:line="91" pos:column="17">+<pos:position pos:line="91" pos:column="18"/></operator> <literal type="number" pos:line="91" pos:column="19">1<pos:position pos:line="91" pos:column="20"/></literal></expr> ;<pos:position pos:line="91" pos:column="22"/></init> <condition><expr><name pos:line="91" pos:column="23">i<pos:position pos:line="91" pos:column="24"/></name> <operator pos:line="91" pos:column="25">&lt;=<pos:position pos:line="91" pos:column="30"/></operator> <name pos:line="91" pos:column="28">msgs<pos:position pos:line="91" pos:column="32"/></name></expr> ;<pos:position pos:line="91" pos:column="34"/></condition> <incr><expr><name pos:line="91" pos:column="35">i<pos:position pos:line="91" pos:column="36"/></name><operator pos:line="91" pos:column="36">++<pos:position pos:line="91" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="91" pos:column="39"/></control>
  <block pos:line="92" pos:column="3">{
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><operator pos:line="93" pos:column="9">(<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">msg<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <call><name pos:line="93" pos:column="16">mx_open_new_message<pos:position pos:line="93" pos:column="35"/></name> <argument_list pos:line="93" pos:column="36">(<argument><expr><operator pos:line="93" pos:column="37">&amp;<pos:position pos:line="93" pos:column="42"/></operator><name pos:line="93" pos:column="38">ctx<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="43">NULL<pos:position pos:line="93" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="49">MUTT_ADD_FROM<pos:position pos:line="93" pos:column="62"/></name></expr></argument>)<pos:position pos:line="93" pos:column="63"/></argument_list></call><operator pos:line="93" pos:column="63">)<pos:position pos:line="93" pos:column="64"/></operator> <operator pos:line="93" pos:column="65">==<pos:position pos:line="93" pos:column="67"/></operator> <name pos:line="93" pos:column="68">NULL<pos:position pos:line="93" pos:column="72"/></name></expr>)<pos:position pos:line="93" pos:column="73"/></condition><then pos:line="93" pos:column="73">
      <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="7">ret<pos:position pos:line="94" pos:column="10"/></name> <operator pos:line="94" pos:column="11">=<pos:position pos:line="94" pos:column="12"/></operator> <operator pos:line="94" pos:column="13">-<pos:position pos:line="94" pos:column="14"/></operator><literal type="number" pos:line="94" pos:column="14">3<pos:position pos:line="94" pos:column="15"/></literal></expr>;<pos:position pos:line="94" pos:column="16"/></expr_stmt></block></then>
    <else pos:line="95" pos:column="5">else
    <block pos:line="96" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">snprintf<pos:position pos:line="97" pos:column="15"/></name> <argument_list pos:line="97" pos:column="16">(<argument><expr><name pos:line="97" pos:column="17">buffer<pos:position pos:line="97" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="25">sizeof <argument_list pos:line="97" pos:column="32">(<argument><expr><name pos:line="97" pos:column="33">buffer<pos:position pos:line="97" pos:column="39"/></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="42">"RETR %d\r\n"<pos:position pos:line="97" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="57">i<pos:position pos:line="97" pos:column="58"/></name></expr></argument>)<pos:position pos:line="97" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><name pos:line="98" pos:column="7">ret<pos:position pos:line="98" pos:column="10"/></name> <operator pos:line="98" pos:column="11">=<pos:position pos:line="98" pos:column="12"/></operator> <call><name pos:line="98" pos:column="13">pop_fetch_data<pos:position pos:line="98" pos:column="27"/></name> <argument_list pos:line="98" pos:column="28">(<argument><expr><name pos:line="98" pos:column="29">pop_data<pos:position pos:line="98" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="39">buffer<pos:position pos:line="98" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="47">NULL<pos:position pos:line="98" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="53">fetch_message<pos:position pos:line="98" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="68">msg<pos:position pos:line="98" pos:column="71"/></name><operator pos:line="98" pos:column="71">-&gt;<pos:position pos:line="98" pos:column="76"/></operator><name pos:line="98" pos:column="73">fp<pos:position pos:line="98" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="77"/></expr_stmt>
      <if pos:line="99" pos:column="7">if <condition pos:line="99" pos:column="10">(<expr><name pos:line="99" pos:column="11">ret<pos:position pos:line="99" pos:column="14"/></name> <operator pos:line="99" pos:column="15">==<pos:position pos:line="99" pos:column="17"/></operator> <operator pos:line="99" pos:column="18">-<pos:position pos:line="99" pos:column="19"/></operator><literal type="number" pos:line="99" pos:column="19">3<pos:position pos:line="99" pos:column="20"/></literal></expr>)<pos:position pos:line="99" pos:column="21"/></condition><then pos:line="99" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="9">rset<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <literal type="number" pos:line="100" pos:column="16">1<pos:position pos:line="100" pos:column="17"/></literal></expr>;<pos:position pos:line="100" pos:column="18"/></expr_stmt></block></then></if>

      <if pos:line="102" pos:column="7">if <condition pos:line="102" pos:column="10">(<expr><name pos:line="102" pos:column="11">ret<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">==<pos:position pos:line="102" pos:column="17"/></operator> <literal type="number" pos:line="102" pos:column="18">0<pos:position pos:line="102" pos:column="19"/></literal> <operator pos:line="102" pos:column="20">&amp;&amp;<pos:position pos:line="102" pos:column="30"/></operator> <call><name pos:line="102" pos:column="23">mx_commit_message<pos:position pos:line="102" pos:column="40"/></name> <argument_list pos:line="102" pos:column="41">(<argument><expr><name pos:line="102" pos:column="42">msg<pos:position pos:line="102" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="47">&amp;<pos:position pos:line="102" pos:column="52"/></operator><name pos:line="102" pos:column="48">ctx<pos:position pos:line="102" pos:column="51"/></name></expr></argument>)<pos:position pos:line="102" pos:column="52"/></argument_list></call> <operator pos:line="102" pos:column="53">!=<pos:position pos:line="102" pos:column="55"/></operator> <literal type="number" pos:line="102" pos:column="56">0<pos:position pos:line="102" pos:column="57"/></literal></expr>)<pos:position pos:line="102" pos:column="58"/></condition><then pos:line="102" pos:column="58">
      <block pos:line="103" pos:column="7">{
	<expr_stmt><expr><name pos:line="104" pos:column="9">rset<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <literal type="number" pos:line="104" pos:column="16">1<pos:position pos:line="104" pos:column="17"/></literal></expr>;<pos:position pos:line="104" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="105" pos:column="9">ret<pos:position pos:line="105" pos:column="12"/></name> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <operator pos:line="105" pos:column="15">-<pos:position pos:line="105" pos:column="16"/></operator><literal type="number" pos:line="105" pos:column="16">3<pos:position pos:line="105" pos:column="17"/></literal></expr>;<pos:position pos:line="105" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="106" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="108" pos:column="7">mx_close_message<pos:position pos:line="108" pos:column="23"/></name> <argument_list pos:line="108" pos:column="24">(<argument><expr><operator pos:line="108" pos:column="25">&amp;<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="26">ctx<pos:position pos:line="108" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="31">&amp;<pos:position pos:line="108" pos:column="36"/></operator><name pos:line="108" pos:column="32">msg<pos:position pos:line="108" pos:column="35"/></name></expr></argument>)<pos:position pos:line="108" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></else></if>

    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">ret<pos:position pos:line="111" pos:column="12"/></name> <operator pos:line="111" pos:column="13">==<pos:position pos:line="111" pos:column="15"/></operator> <literal type="number" pos:line="111" pos:column="16">0<pos:position pos:line="111" pos:column="17"/></literal> <operator pos:line="111" pos:column="18">&amp;&amp;<pos:position pos:line="111" pos:column="28"/></operator> <name pos:line="111" pos:column="21">delanswer<pos:position pos:line="111" pos:column="30"/></name> <operator pos:line="111" pos:column="31">==<pos:position pos:line="111" pos:column="33"/></operator> <name pos:line="111" pos:column="34">MUTT_YES<pos:position pos:line="111" pos:column="42"/></name></expr>)<pos:position pos:line="111" pos:column="43"/></condition><then pos:line="111" pos:column="43">
    <block pos:line="112" pos:column="5">{
      <comment type="block" pos:line="113" pos:column="7">/* delete the message on the server */</comment>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">snprintf<pos:position pos:line="114" pos:column="15"/></name> <argument_list pos:line="114" pos:column="16">(<argument><expr><name pos:line="114" pos:column="17">buffer<pos:position pos:line="114" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="114" pos:column="25">sizeof <argument_list pos:line="114" pos:column="32">(<argument><expr><name pos:line="114" pos:column="33">buffer<pos:position pos:line="114" pos:column="39"/></name></expr></argument>)<pos:position pos:line="114" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="42">"DELE %d\r\n"<pos:position pos:line="114" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="57">i<pos:position pos:line="114" pos:column="58"/></name></expr></argument>)<pos:position pos:line="114" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><name pos:line="115" pos:column="7">ret<pos:position pos:line="115" pos:column="10"/></name> <operator pos:line="115" pos:column="11">=<pos:position pos:line="115" pos:column="12"/></operator> <call><name pos:line="115" pos:column="13">pop_query<pos:position pos:line="115" pos:column="22"/></name> <argument_list pos:line="115" pos:column="23">(<argument><expr><name pos:line="115" pos:column="24">pop_data<pos:position pos:line="115" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="34">buffer<pos:position pos:line="115" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="115" pos:column="42">sizeof <argument_list pos:line="115" pos:column="49">(<argument><expr><name pos:line="115" pos:column="50">buffer<pos:position pos:line="115" pos:column="56"/></name></expr></argument>)<pos:position pos:line="115" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="115" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>

    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><name pos:line="118" pos:column="9">ret<pos:position pos:line="118" pos:column="12"/></name> <operator pos:line="118" pos:column="13">==<pos:position pos:line="118" pos:column="15"/></operator> <operator pos:line="118" pos:column="16">-<pos:position pos:line="118" pos:column="17"/></operator><literal type="number" pos:line="118" pos:column="17">1<pos:position pos:line="118" pos:column="18"/></literal></expr>)<pos:position pos:line="118" pos:column="19"/></condition><then pos:line="118" pos:column="19">
    <block pos:line="119" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="120" pos:column="7">mx_close_mailbox<pos:position pos:line="120" pos:column="23"/></name> <argument_list pos:line="120" pos:column="24">(<argument><expr><operator pos:line="120" pos:column="25">&amp;<pos:position pos:line="120" pos:column="30"/></operator><name pos:line="120" pos:column="26">ctx<pos:position pos:line="120" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="31">NULL<pos:position pos:line="120" pos:column="35"/></name></expr></argument>)<pos:position pos:line="120" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="37"/></expr_stmt>
      <goto pos:line="121" pos:column="7">goto <name pos:line="121" pos:column="12">fail<pos:position pos:line="121" pos:column="16"/></name>;<pos:position pos:line="121" pos:column="17"/></goto>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>
    <if pos:line="123" pos:column="5">if <condition pos:line="123" pos:column="8">(<expr><name pos:line="123" pos:column="9">ret<pos:position pos:line="123" pos:column="12"/></name> <operator pos:line="123" pos:column="13">==<pos:position pos:line="123" pos:column="15"/></operator> <operator pos:line="123" pos:column="16">-<pos:position pos:line="123" pos:column="17"/></operator><literal type="number" pos:line="123" pos:column="17">2<pos:position pos:line="123" pos:column="18"/></literal></expr>)<pos:position pos:line="123" pos:column="19"/></condition><then pos:line="123" pos:column="19">
    <block pos:line="124" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="125" pos:column="7">mutt_error<pos:position pos:line="125" pos:column="17"/></name> <argument_list pos:line="125" pos:column="18">(<argument><expr><literal type="string" pos:line="125" pos:column="19">"%s"<pos:position pos:line="125" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="25">pop_data<pos:position pos:line="125" pos:column="33"/></name><operator pos:line="125" pos:column="33">-&gt;<pos:position pos:line="125" pos:column="38"/></operator><name pos:line="125" pos:column="35">err_msg<pos:position pos:line="125" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="44"/></expr_stmt>
      <break pos:line="126" pos:column="7">break;<pos:position pos:line="126" pos:column="13"/></break>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if>
    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><name pos:line="128" pos:column="9">ret<pos:position pos:line="128" pos:column="12"/></name> <operator pos:line="128" pos:column="13">==<pos:position pos:line="128" pos:column="15"/></operator> <operator pos:line="128" pos:column="16">-<pos:position pos:line="128" pos:column="17"/></operator><literal type="number" pos:line="128" pos:column="17">3<pos:position pos:line="128" pos:column="18"/></literal></expr>)<pos:position pos:line="128" pos:column="19"/></condition><then pos:line="128" pos:column="19">
    <block pos:line="129" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="130" pos:column="7">mutt_error<pos:position pos:line="130" pos:column="17"/></name></type> <name pos:line="130" pos:column="18">_<pos:position pos:line="130" pos:column="19"/></name><argument_list pos:line="130" pos:column="19">(<argument><expr><literal type="string" pos:line="130" pos:column="20">"Error while writing mailbox!"<pos:position pos:line="130" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="51"/></argument_list></decl>;<pos:position pos:line="130" pos:column="52"/></decl_stmt>
      <break pos:line="131" pos:column="7">break;<pos:position pos:line="131" pos:column="13"/></break>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="134" pos:column="5">mutt_message<pos:position pos:line="134" pos:column="17"/></name> <argument_list pos:line="134" pos:column="18">(<argument><expr><call><name pos:line="134" pos:column="19">_<pos:position pos:line="134" pos:column="20"/></name><argument_list pos:line="134" pos:column="20">(<argument><expr><literal type="string" pos:line="134" pos:column="21">"%s [%d of %d messages read]"<pos:position pos:line="134" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="134" pos:column="53">msgbuf<pos:position pos:line="134" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="61">i<pos:position pos:line="134" pos:column="62"/></name> <operator pos:line="134" pos:column="63">-<pos:position pos:line="134" pos:column="64"/></operator> <name pos:line="134" pos:column="65">last<pos:position pos:line="134" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="71">msgs<pos:position pos:line="134" pos:column="75"/></name> <operator pos:line="134" pos:column="76">-<pos:position pos:line="134" pos:column="77"/></operator> <name pos:line="134" pos:column="78">last<pos:position pos:line="134" pos:column="82"/></name></expr></argument>)<pos:position pos:line="134" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="84"/></expr_stmt>
  }<pos:position pos:line="135" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="137" pos:column="3">mx_close_mailbox<pos:position pos:line="137" pos:column="19"/></name> <argument_list pos:line="137" pos:column="20">(<argument><expr><operator pos:line="137" pos:column="21">&amp;<pos:position pos:line="137" pos:column="26"/></operator><name pos:line="137" pos:column="22">ctx<pos:position pos:line="137" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="27">NULL<pos:position pos:line="137" pos:column="31"/></name></expr></argument>)<pos:position pos:line="137" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="33"/></expr_stmt>

  <if pos:line="139" pos:column="3">if <condition pos:line="139" pos:column="6">(<expr><name pos:line="139" pos:column="7">rset<pos:position pos:line="139" pos:column="11"/></name></expr>)<pos:position pos:line="139" pos:column="12"/></condition><then pos:line="139" pos:column="12">
  <block pos:line="140" pos:column="3">{
    <comment type="block" pos:line="141" pos:column="5">/* make sure no messages get deleted */</comment>
    <expr_stmt><expr><call><name pos:line="142" pos:column="5">strfcpy<pos:position pos:line="142" pos:column="12"/></name> <argument_list pos:line="142" pos:column="13">(<argument><expr><name pos:line="142" pos:column="14">buffer<pos:position pos:line="142" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="22">"RSET\r\n"<pos:position pos:line="142" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="34">sizeof <argument_list pos:line="142" pos:column="41">(<argument><expr><name pos:line="142" pos:column="42">buffer<pos:position pos:line="142" pos:column="48"/></name></expr></argument>)<pos:position pos:line="142" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="142" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="51"/></expr_stmt>
    <if pos:line="143" pos:column="5">if <condition pos:line="143" pos:column="8">(<expr><call><name pos:line="143" pos:column="9">pop_query<pos:position pos:line="143" pos:column="18"/></name> <argument_list pos:line="143" pos:column="19">(<argument><expr><name pos:line="143" pos:column="20">pop_data<pos:position pos:line="143" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="30">buffer<pos:position pos:line="143" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="143" pos:column="38">sizeof <argument_list pos:line="143" pos:column="45">(<argument><expr><name pos:line="143" pos:column="46">buffer<pos:position pos:line="143" pos:column="52"/></name></expr></argument>)<pos:position pos:line="143" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="143" pos:column="54"/></argument_list></call> <operator pos:line="143" pos:column="55">==<pos:position pos:line="143" pos:column="57"/></operator> <operator pos:line="143" pos:column="58">-<pos:position pos:line="143" pos:column="59"/></operator><literal type="number" pos:line="143" pos:column="59">1<pos:position pos:line="143" pos:column="60"/></literal></expr>)<pos:position pos:line="143" pos:column="61"/></condition><then pos:line="143" pos:column="61">
      <block type="pseudo"><goto pos:line="144" pos:column="7">goto <name pos:line="144" pos:column="12">fail<pos:position pos:line="144" pos:column="16"/></name>;<pos:position pos:line="144" pos:column="17"/></goto></block></then></if>
  }<pos:position pos:line="145" pos:column="4"/></block></then></if>

<label><name pos:line="147" pos:column="1">finish<pos:position pos:line="147" pos:column="7"/></name>:<pos:position pos:line="147" pos:column="8"/></label>
  <comment type="block" pos:line="148" pos:column="3">/* exit gracefully */</comment>
  <expr_stmt><expr><call><name pos:line="149" pos:column="3">strfcpy<pos:position pos:line="149" pos:column="10"/></name> <argument_list pos:line="149" pos:column="11">(<argument><expr><name pos:line="149" pos:column="12">buffer<pos:position pos:line="149" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="20">"QUIT\r\n"<pos:position pos:line="149" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="149" pos:column="32">sizeof <argument_list pos:line="149" pos:column="39">(<argument><expr><name pos:line="149" pos:column="40">buffer<pos:position pos:line="149" pos:column="46"/></name></expr></argument>)<pos:position pos:line="149" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="149" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="49"/></expr_stmt>
  <if pos:line="150" pos:column="3">if <condition pos:line="150" pos:column="6">(<expr><call><name pos:line="150" pos:column="7">pop_query<pos:position pos:line="150" pos:column="16"/></name> <argument_list pos:line="150" pos:column="17">(<argument><expr><name pos:line="150" pos:column="18">pop_data<pos:position pos:line="150" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="28">buffer<pos:position pos:line="150" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="150" pos:column="36">sizeof <argument_list pos:line="150" pos:column="43">(<argument><expr><name pos:line="150" pos:column="44">buffer<pos:position pos:line="150" pos:column="50"/></name></expr></argument>)<pos:position pos:line="150" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="150" pos:column="52"/></argument_list></call> <operator pos:line="150" pos:column="53">==<pos:position pos:line="150" pos:column="55"/></operator> <operator pos:line="150" pos:column="56">-<pos:position pos:line="150" pos:column="57"/></operator><literal type="number" pos:line="150" pos:column="57">1<pos:position pos:line="150" pos:column="58"/></literal></expr>)<pos:position pos:line="150" pos:column="59"/></condition><then pos:line="150" pos:column="59">
    <block type="pseudo"><goto pos:line="151" pos:column="5">goto <name pos:line="151" pos:column="10">fail<pos:position pos:line="151" pos:column="14"/></name>;<pos:position pos:line="151" pos:column="15"/></goto></block></then></if>
  <expr_stmt><expr><call><name pos:line="152" pos:column="3">mutt_socket_close<pos:position pos:line="152" pos:column="20"/></name> <argument_list pos:line="152" pos:column="21">(<argument><expr><name pos:line="152" pos:column="22">conn<pos:position pos:line="152" pos:column="26"/></name></expr></argument>)<pos:position pos:line="152" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="153" pos:column="3">FREE<pos:position pos:line="153" pos:column="7"/></name> <argument_list pos:line="153" pos:column="8">(<argument><expr><operator pos:line="153" pos:column="9">&amp;<pos:position pos:line="153" pos:column="14"/></operator><name pos:line="153" pos:column="10">pop_data<pos:position pos:line="153" pos:column="18"/></name></expr></argument>)<pos:position pos:line="153" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="20"/></expr_stmt>
  <return pos:line="154" pos:column="3">return;<pos:position pos:line="154" pos:column="10"/></return>

<label><name pos:line="156" pos:column="1">fail<pos:position pos:line="156" pos:column="5"/></name>:<pos:position pos:line="156" pos:column="6"/></label>
  <decl_stmt><decl><type><name pos:line="157" pos:column="3">mutt_error<pos:position pos:line="157" pos:column="13"/></name></type> <name pos:line="157" pos:column="14">_<pos:position pos:line="157" pos:column="15"/></name><argument_list pos:line="157" pos:column="15">(<argument><expr><literal type="string" pos:line="157" pos:column="16">"Server closed connection!"<pos:position pos:line="157" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="44"/></argument_list></decl>;<pos:position pos:line="157" pos:column="45"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="158" pos:column="3">mutt_socket_close<pos:position pos:line="158" pos:column="20"/></name> <argument_list pos:line="158" pos:column="21">(<argument><expr><name pos:line="158" pos:column="22">conn<pos:position pos:line="158" pos:column="26"/></name></expr></argument>)<pos:position pos:line="158" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="159" pos:column="3">FREE<pos:position pos:line="159" pos:column="7"/></name> <argument_list pos:line="159" pos:column="8">(<argument><expr><operator pos:line="159" pos:column="9">&amp;<pos:position pos:line="159" pos:column="14"/></operator><name pos:line="159" pos:column="10">pop_data<pos:position pos:line="159" pos:column="18"/></name></expr></argument>)<pos:position pos:line="159" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="20"/></expr_stmt>
}<pos:position pos:line="160" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_120.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_signed_handler<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">BODY<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">a<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">STATE<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">protocol<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">protocol_major<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">TYPEOTHER<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">protocol_minor<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">BODY<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">b<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><name pos:line="8" pos:column="13">a<pos:position pos:line="8" pos:column="14"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">BODY<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier><modifier pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></modifier></type><name pos:line="9" pos:column="10">signatures<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">sigcnt<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name></decl>;<pos:position pos:line="11" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">short<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">goodsig<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">1<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">rc<pos:position pos:line="13" pos:column="9"/></name> <init pos:line="13" pos:column="10">= <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="14"/></decl_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">WithCrypto<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">protocol<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">mutt_get_parameter<pos:position pos:line="18" pos:column="32"/></name> <argument_list pos:line="18" pos:column="33">(<argument><expr><literal type="string" pos:line="18" pos:column="34">"protocol"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="46">a<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">parameter<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">a<pos:position pos:line="19" pos:column="4"/></name> <operator pos:line="19" pos:column="5">=<pos:position pos:line="19" pos:column="6"/></operator> <name><name pos:line="19" pos:column="7">a<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">parts<pos:position pos:line="19" pos:column="15"/></name></name></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* extract the protocol information */</comment>
  
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">protocol<pos:position pos:line="23" pos:column="15"/></name></expr>)<pos:position pos:line="23" pos:column="16"/></condition><then pos:line="23" pos:column="16">
  <block pos:line="24" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name></type> <name><name pos:line="25" pos:column="10">major<pos:position pos:line="25" pos:column="15"/></name><index pos:line="25" pos:column="15">[<expr><name pos:line="25" pos:column="16">STRING<pos:position pos:line="25" pos:column="22"/></name></expr>]<pos:position pos:line="25" pos:column="23"/></index></name></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">t<pos:position pos:line="26" pos:column="12"/></name></decl>;<pos:position pos:line="26" pos:column="13"/></decl_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">protocol_minor<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <call><name pos:line="28" pos:column="27">strchr<pos:position pos:line="28" pos:column="33"/></name> <argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">protocol<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="45">'/'<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call><operator pos:line="28" pos:column="49">)<pos:position pos:line="28" pos:column="50"/></operator></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51"> <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="52">protocol_minor<pos:position pos:line="28" pos:column="66"/></name><operator pos:line="28" pos:column="66">++<pos:position pos:line="28" pos:column="68"/></operator></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">strfcpy<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">major<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="21">protocol<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="31">sizeof<argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">major<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">(<expr><operator pos:line="31" pos:column="8">(<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">t<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">strchr<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">major<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="27">'/'<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call><operator pos:line="31" pos:column="31">)<pos:position pos:line="31" pos:column="32"/></operator></expr>)<pos:position pos:line="31" pos:column="33"/></condition><then pos:line="31" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="32" pos:column="7">*<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">t<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <literal type="char" pos:line="32" pos:column="12">'\0'<pos:position pos:line="32" pos:column="16"/></literal></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt></block></then></if>
    
    <expr_stmt><expr><name pos:line="34" pos:column="5">protocol_major<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">mutt_check_mime_type<pos:position pos:line="34" pos:column="42"/></name> <argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">major<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* consistency check */</comment>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><operator pos:line="39" pos:column="8">(<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="9">a<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">&amp;&amp;<pos:position pos:line="39" pos:column="21"/></operator> <name><name pos:line="39" pos:column="14">a<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">next<pos:position pos:line="39" pos:column="21"/></name></name> <operator pos:line="39" pos:column="22">&amp;&amp;<pos:position pos:line="39" pos:column="32"/></operator> <name><name pos:line="39" pos:column="25">a<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">next<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">-&gt;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="34">type<pos:position pos:line="39" pos:column="38"/></name></name> <operator pos:line="39" pos:column="39">==<pos:position pos:line="39" pos:column="41"/></operator> <name pos:line="39" pos:column="42">protocol_major<pos:position pos:line="39" pos:column="56"/></name> <operator pos:line="39" pos:column="57">&amp;&amp;<pos:position pos:line="39" pos:column="67"/></operator> 
      <operator pos:line="40" pos:column="7">!<pos:position pos:line="40" pos:column="8"/></operator><call><name pos:line="40" pos:column="8">mutt_strcasecmp<pos:position pos:line="40" pos:column="23"/></name> <argument_list pos:line="40" pos:column="24">(<argument><expr><name><name pos:line="40" pos:column="25">a<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">next<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">subtype<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">protocol_minor<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call><operator pos:line="40" pos:column="58">)<pos:position pos:line="40" pos:column="59"/></operator></expr>)<pos:position pos:line="40" pos:column="60"/></condition><then pos:line="40" pos:column="60">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">state_attach_puts<pos:position pos:line="42" pos:column="22"/></name> <argument_list pos:line="42" pos:column="23">(<argument><expr><call><name pos:line="42" pos:column="24">_<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><literal type="string" pos:line="42" pos:column="26">"[-- Error: "<pos:position pos:line="42" pos:column="39"/></literal>
                         <literal type="string" pos:line="43" pos:column="26">"Inconsistent multipart/signed structure! --]\n\n"<pos:position pos:line="43" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="77"/></argument_list></call></expr></argument>,
                       <argument><expr><name pos:line="44" pos:column="24">s<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><call><name pos:line="45" pos:column="12">mutt_body_handler<pos:position pos:line="45" pos:column="29"/></name> <argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">a<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">s<pos:position pos:line="45" pos:column="35"/></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="37"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">(<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">WithCrypto<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">&amp;<pos:position pos:line="49" pos:column="24"/></operator> <name pos:line="49" pos:column="21">APPLICATION_PGP<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">)<pos:position pos:line="49" pos:column="37"/></operator>
      <operator pos:line="50" pos:column="7">&amp;&amp;<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="10">protocol_major<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">==<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">TYPEAPPLICATION<pos:position pos:line="50" pos:column="43"/></name>
      <operator pos:line="51" pos:column="7">&amp;&amp;<pos:position pos:line="51" pos:column="17"/></operator> <operator pos:line="51" pos:column="10">!<pos:position pos:line="51" pos:column="11"/></operator><call><name pos:line="51" pos:column="11">ascii_strcasecmp<pos:position pos:line="51" pos:column="27"/></name> <argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">protocol_minor<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="45">"pgp-signature"<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62">
    <block type="pseudo"><empty_stmt pos:line="52" pos:column="5">;<pos:position pos:line="52" pos:column="6"/></empty_stmt></block></then>
  <elseif pos:line="53" pos:column="3">else <if pos:line="53" pos:column="8">if <condition pos:line="53" pos:column="11">(<expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">WithCrypto<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">&amp;<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="26">APPLICATION_SMIME<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">)<pos:position pos:line="53" pos:column="44"/></operator>
           <operator pos:line="54" pos:column="12">&amp;&amp;<pos:position pos:line="54" pos:column="22"/></operator> <name pos:line="54" pos:column="15">protocol_major<pos:position pos:line="54" pos:column="29"/></name> <operator pos:line="54" pos:column="30">==<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="33">TYPEAPPLICATION<pos:position pos:line="54" pos:column="48"/></name>
	   <operator pos:line="55" pos:column="12">&amp;&amp;<pos:position pos:line="55" pos:column="22"/></operator> <operator pos:line="55" pos:column="15">!<pos:position pos:line="55" pos:column="16"/></operator><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><call><name pos:line="55" pos:column="17">ascii_strcasecmp<pos:position pos:line="55" pos:column="33"/></name> <argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">protocol_minor<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="51">"x-pkcs7-signature"<pos:position pos:line="55" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call>
	       <operator pos:line="56" pos:column="16">&amp;&amp;<pos:position pos:line="56" pos:column="26"/></operator> <call><name pos:line="56" pos:column="19">ascii_strcasecmp<pos:position pos:line="56" pos:column="35"/></name> <argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">protocol_minor<pos:position pos:line="56" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="53">"pkcs7-signature"<pos:position pos:line="56" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="71"/></argument_list></call><operator pos:line="56" pos:column="71">)<pos:position pos:line="56" pos:column="72"/></operator></expr>)<pos:position pos:line="56" pos:column="73"/></condition><then pos:line="56" pos:column="73">
    <block type="pseudo"><empty_stmt pos:line="57" pos:column="5">;<pos:position pos:line="57" pos:column="6"/></empty_stmt></block></then></if></elseif>
  <elseif pos:line="58" pos:column="3">else <if pos:line="58" pos:column="8">if <condition pos:line="58" pos:column="11">(<expr><name pos:line="58" pos:column="12">protocol_major<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">==<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">TYPEMULTIPART<pos:position pos:line="58" pos:column="43"/></name>
	   <operator pos:line="59" pos:column="12">&amp;&amp;<pos:position pos:line="59" pos:column="22"/></operator> <operator pos:line="59" pos:column="15">!<pos:position pos:line="59" pos:column="16"/></operator><call><name pos:line="59" pos:column="16">ascii_strcasecmp<pos:position pos:line="59" pos:column="32"/></name> <argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">protocol_minor<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="50">"mixed"<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="59"/></condition><then pos:line="59" pos:column="59">
    <block type="pseudo"><empty_stmt pos:line="60" pos:column="5">;<pos:position pos:line="60" pos:column="6"/></empty_stmt></block></then></if></elseif>
  <else pos:line="61" pos:column="3">else
  <block pos:line="62" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">state_printf<pos:position pos:line="63" pos:column="17"/></name> <argument_list pos:line="63" pos:column="18">(<argument><expr><name pos:line="63" pos:column="19">s<pos:position pos:line="63" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="22">_<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><literal type="string" pos:line="63" pos:column="24">"[-- Error: "<pos:position pos:line="63" pos:column="37"/></literal>
                       <literal type="string" pos:line="64" pos:column="24">"Unknown multipart/signed protocol %s! --]\n\n"<pos:position pos:line="64" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr></argument>,
                  <argument><expr><name pos:line="65" pos:column="19">protocol<pos:position pos:line="65" pos:column="27"/></name></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><call><name pos:line="66" pos:column="12">mutt_body_handler<pos:position pos:line="66" pos:column="29"/></name> <argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">a<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">s<pos:position pos:line="66" pos:column="35"/></name></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></return>
  }<pos:position pos:line="67" pos:column="4"/></block></else></if>
  
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name><name pos:line="69" pos:column="7">s<pos:position pos:line="69" pos:column="8"/></name><operator pos:line="69" pos:column="8">-&gt;<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="10">flags<pos:position pos:line="69" pos:column="15"/></name></name> <operator pos:line="69" pos:column="16">&amp;<pos:position pos:line="69" pos:column="21"/></operator> <name pos:line="69" pos:column="18">M_DISPLAY<pos:position pos:line="69" pos:column="27"/></name></expr>)<pos:position pos:line="69" pos:column="28"/></condition><then pos:line="69" pos:column="28">
  <block pos:line="70" pos:column="3">{
    
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">crypt_fetch_signatures<pos:position pos:line="72" pos:column="27"/></name> <argument_list pos:line="72" pos:column="28">(<argument><expr><operator pos:line="72" pos:column="29">&amp;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="30">signatures<pos:position pos:line="72" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="42">a<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">-&gt;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="45">next<pos:position pos:line="72" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="51">&amp;<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="52">sigcnt<pos:position pos:line="72" pos:column="58"/></name></expr></argument>)<pos:position pos:line="72" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt>
    
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">sigcnt<pos:position pos:line="74" pos:column="15"/></name></expr>)<pos:position pos:line="74" pos:column="16"/></condition><then pos:line="74" pos:column="16">
    <block pos:line="75" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">mutt_mktemp<pos:position pos:line="76" pos:column="18"/></name> <argument_list pos:line="76" pos:column="19">(<argument><expr><name pos:line="76" pos:column="20">tempfile<pos:position pos:line="76" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="30">sizeof <argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">tempfile<pos:position pos:line="76" pos:column="46"/></name></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><call><name pos:line="77" pos:column="11">crypt_write_signed<pos:position pos:line="77" pos:column="29"/></name> <argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">a<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="34">s<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="37">tempfile<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call> <operator pos:line="77" pos:column="47">==<pos:position pos:line="77" pos:column="49"/></operator> <literal type="number" pos:line="77" pos:column="50">0<pos:position pos:line="77" pos:column="51"/></literal></expr>)<pos:position pos:line="77" pos:column="52"/></condition><then pos:line="77" pos:column="52">
      <block pos:line="78" pos:column="7">{
	<for pos:line="79" pos:column="9">for <control pos:line="79" pos:column="13">(<init><expr><name pos:line="79" pos:column="14">i<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <literal type="number" pos:line="79" pos:column="18">0<pos:position pos:line="79" pos:column="19"/></literal></expr>;<pos:position pos:line="79" pos:column="20"/></init> <condition><expr><name pos:line="79" pos:column="21">i<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">&lt;<pos:position pos:line="79" pos:column="27"/></operator> <name pos:line="79" pos:column="25">sigcnt<pos:position pos:line="79" pos:column="31"/></name></expr>;<pos:position pos:line="79" pos:column="32"/></condition> <incr><expr><name pos:line="79" pos:column="33">i<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">++<pos:position pos:line="79" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="37"/></control>
	<block pos:line="80" pos:column="9">{
	  <if pos:line="81" pos:column="11">if <condition pos:line="81" pos:column="14">(<expr><operator pos:line="81" pos:column="15">(<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="16">WithCrypto<pos:position pos:line="81" pos:column="26"/></name> <operator pos:line="81" pos:column="27">&amp;<pos:position pos:line="81" pos:column="32"/></operator> <name pos:line="81" pos:column="29">APPLICATION_PGP<pos:position pos:line="81" pos:column="44"/></name><operator pos:line="81" pos:column="44">)<pos:position pos:line="81" pos:column="45"/></operator>
              <operator pos:line="82" pos:column="15">&amp;&amp;<pos:position pos:line="82" pos:column="25"/></operator> <name><name pos:line="82" pos:column="18">signatures<pos:position pos:line="82" pos:column="28"/></name><index pos:line="82" pos:column="28">[<expr><name pos:line="82" pos:column="29">i<pos:position pos:line="82" pos:column="30"/></name></expr>]<pos:position pos:line="82" pos:column="31"/></index></name><operator pos:line="82" pos:column="31">-&gt;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="33">type<pos:position pos:line="82" pos:column="37"/></name> <operator pos:line="82" pos:column="38">==<pos:position pos:line="82" pos:column="40"/></operator> <name pos:line="82" pos:column="41">TYPEAPPLICATION<pos:position pos:line="82" pos:column="56"/></name> 
	      <operator pos:line="83" pos:column="15">&amp;&amp;<pos:position pos:line="83" pos:column="25"/></operator> <operator pos:line="83" pos:column="18">!<pos:position pos:line="83" pos:column="19"/></operator><call><name pos:line="83" pos:column="19">ascii_strcasecmp<pos:position pos:line="83" pos:column="35"/></name> <argument_list pos:line="83" pos:column="36">(<argument><expr><name><name pos:line="83" pos:column="37">signatures<pos:position pos:line="83" pos:column="47"/></name><index pos:line="83" pos:column="47">[<expr><name pos:line="83" pos:column="48">i<pos:position pos:line="83" pos:column="49"/></name></expr>]<pos:position pos:line="83" pos:column="50"/></index></name><operator pos:line="83" pos:column="50">-&gt;<pos:position pos:line="83" pos:column="55"/></operator><name pos:line="83" pos:column="52">subtype<pos:position pos:line="83" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="61">"pgp-signature"<pos:position pos:line="83" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="78"/></condition><then pos:line="83" pos:column="78">
	  <block pos:line="84" pos:column="11">{
	    <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><call><name pos:line="85" pos:column="17">crypt_pgp_verify_one<pos:position pos:line="85" pos:column="37"/></name> <argument_list pos:line="85" pos:column="38">(<argument><expr><name><name pos:line="85" pos:column="39">signatures<pos:position pos:line="85" pos:column="49"/></name><index pos:line="85" pos:column="49">[<expr><name pos:line="85" pos:column="50">i<pos:position pos:line="85" pos:column="51"/></name></expr>]<pos:position pos:line="85" pos:column="52"/></index></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="54">s<pos:position pos:line="85" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="57">tempfile<pos:position pos:line="85" pos:column="65"/></name></expr></argument>)<pos:position pos:line="85" pos:column="66"/></argument_list></call> <operator pos:line="85" pos:column="67">!=<pos:position pos:line="85" pos:column="69"/></operator> <literal type="number" pos:line="85" pos:column="70">0<pos:position pos:line="85" pos:column="71"/></literal></expr>)<pos:position pos:line="85" pos:column="72"/></condition><then pos:line="85" pos:column="72">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="15">goodsig<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">=<pos:position pos:line="86" pos:column="24"/></operator> <literal type="number" pos:line="86" pos:column="25">0<pos:position pos:line="86" pos:column="26"/></literal></expr>;<pos:position pos:line="86" pos:column="27"/></expr_stmt></block></then></if>
	    
	    <continue pos:line="88" pos:column="13">continue;<pos:position pos:line="88" pos:column="22"/></continue>
	  }<pos:position pos:line="89" pos:column="12"/></block></then></if>

	  <if pos:line="91" pos:column="11">if <condition pos:line="91" pos:column="14">(<expr><operator pos:line="91" pos:column="15">(<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="16">WithCrypto<pos:position pos:line="91" pos:column="26"/></name> <operator pos:line="91" pos:column="27">&amp;<pos:position pos:line="91" pos:column="32"/></operator> <name pos:line="91" pos:column="29">APPLICATION_SMIME<pos:position pos:line="91" pos:column="46"/></name><operator pos:line="91" pos:column="46">)<pos:position pos:line="91" pos:column="47"/></operator>
              <operator pos:line="92" pos:column="15">&amp;&amp;<pos:position pos:line="92" pos:column="25"/></operator> <name><name pos:line="92" pos:column="18">signatures<pos:position pos:line="92" pos:column="28"/></name><index pos:line="92" pos:column="28">[<expr><name pos:line="92" pos:column="29">i<pos:position pos:line="92" pos:column="30"/></name></expr>]<pos:position pos:line="92" pos:column="31"/></index></name><operator pos:line="92" pos:column="31">-&gt;<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="33">type<pos:position pos:line="92" pos:column="37"/></name> <operator pos:line="92" pos:column="38">==<pos:position pos:line="92" pos:column="40"/></operator> <name pos:line="92" pos:column="41">TYPEAPPLICATION<pos:position pos:line="92" pos:column="56"/></name> 
	      <operator pos:line="93" pos:column="15">&amp;&amp;<pos:position pos:line="93" pos:column="25"/></operator> <operator pos:line="93" pos:column="18">(<pos:position pos:line="93" pos:column="19"/></operator><operator pos:line="93" pos:column="19">!<pos:position pos:line="93" pos:column="20"/></operator><call><name pos:line="93" pos:column="20">ascii_strcasecmp<pos:position pos:line="93" pos:column="36"/></name><argument_list pos:line="93" pos:column="36">(<argument><expr><name><name pos:line="93" pos:column="37">signatures<pos:position pos:line="93" pos:column="47"/></name><index pos:line="93" pos:column="47">[<expr><name pos:line="93" pos:column="48">i<pos:position pos:line="93" pos:column="49"/></name></expr>]<pos:position pos:line="93" pos:column="50"/></index></name><operator pos:line="93" pos:column="50">-&gt;<pos:position pos:line="93" pos:column="55"/></operator><name pos:line="93" pos:column="52">subtype<pos:position pos:line="93" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="61">"x-pkcs7-signature"<pos:position pos:line="93" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="81"/></argument_list></call>
		  <operator pos:line="94" pos:column="19">||<pos:position pos:line="94" pos:column="21"/></operator> <operator pos:line="94" pos:column="22">!<pos:position pos:line="94" pos:column="23"/></operator><call><name pos:line="94" pos:column="23">ascii_strcasecmp<pos:position pos:line="94" pos:column="39"/></name><argument_list pos:line="94" pos:column="39">(<argument><expr><name><name pos:line="94" pos:column="40">signatures<pos:position pos:line="94" pos:column="50"/></name><index pos:line="94" pos:column="50">[<expr><name pos:line="94" pos:column="51">i<pos:position pos:line="94" pos:column="52"/></name></expr>]<pos:position pos:line="94" pos:column="53"/></index></name><operator pos:line="94" pos:column="53">-&gt;<pos:position pos:line="94" pos:column="58"/></operator><name pos:line="94" pos:column="55">subtype<pos:position pos:line="94" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="64">"pkcs7-signature"<pos:position pos:line="94" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="82"/></argument_list></call><operator pos:line="94" pos:column="82">)<pos:position pos:line="94" pos:column="83"/></operator></expr>)<pos:position pos:line="94" pos:column="84"/></condition><then pos:line="94" pos:column="84">
	  <block pos:line="95" pos:column="11">{
	    <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><call><name pos:line="96" pos:column="17">crypt_smime_verify_one<pos:position pos:line="96" pos:column="39"/></name> <argument_list pos:line="96" pos:column="40">(<argument><expr><name><name pos:line="96" pos:column="41">signatures<pos:position pos:line="96" pos:column="51"/></name><index pos:line="96" pos:column="51">[<expr><name pos:line="96" pos:column="52">i<pos:position pos:line="96" pos:column="53"/></name></expr>]<pos:position pos:line="96" pos:column="54"/></index></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="56">s<pos:position pos:line="96" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="59">tempfile<pos:position pos:line="96" pos:column="67"/></name></expr></argument>)<pos:position pos:line="96" pos:column="68"/></argument_list></call> <operator pos:line="96" pos:column="69">!=<pos:position pos:line="96" pos:column="71"/></operator> <literal type="number" pos:line="96" pos:column="72">0<pos:position pos:line="96" pos:column="73"/></literal></expr>)<pos:position pos:line="96" pos:column="74"/></condition><then pos:line="96" pos:column="74">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="15">goodsig<pos:position pos:line="97" pos:column="22"/></name> <operator pos:line="97" pos:column="23">=<pos:position pos:line="97" pos:column="24"/></operator> <literal type="number" pos:line="97" pos:column="25">0<pos:position pos:line="97" pos:column="26"/></literal></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt></block></then></if>
	    
	    <continue pos:line="99" pos:column="13">continue;<pos:position pos:line="99" pos:column="22"/></continue>
	  }<pos:position pos:line="100" pos:column="12"/></block></then></if>

	  <expr_stmt><expr><call><name pos:line="102" pos:column="11">state_printf<pos:position pos:line="102" pos:column="23"/></name> <argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">s<pos:position pos:line="102" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="102" pos:column="28">_<pos:position pos:line="102" pos:column="29"/></name><argument_list pos:line="102" pos:column="29">(<argument><expr><literal type="string" pos:line="102" pos:column="30">"[-- Warning: "<pos:position pos:line="102" pos:column="45"/></literal>
                             <literal type="string" pos:line="103" pos:column="30">"We can't verify %s/%s signatures. --]\n\n"<pos:position pos:line="103" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="74"/></argument_list></call></expr></argument>,
			  <argument><expr><call><name pos:line="104" pos:column="27">TYPE<pos:position pos:line="104" pos:column="31"/></name><argument_list pos:line="104" pos:column="31">(<argument><expr><name><name pos:line="104" pos:column="32">signatures<pos:position pos:line="104" pos:column="42"/></name><index pos:line="104" pos:column="42">[<expr><name pos:line="104" pos:column="43">i<pos:position pos:line="104" pos:column="44"/></name></expr>]<pos:position pos:line="104" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="104" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="48">signatures<pos:position pos:line="104" pos:column="58"/></name><index pos:line="104" pos:column="58">[<expr><name pos:line="104" pos:column="59">i<pos:position pos:line="104" pos:column="60"/></name></expr>]<pos:position pos:line="104" pos:column="61"/></index></name><operator pos:line="104" pos:column="61">-&gt;<pos:position pos:line="104" pos:column="66"/></operator><name pos:line="104" pos:column="63">subtype<pos:position pos:line="104" pos:column="70"/></name></expr></argument>)<pos:position pos:line="104" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="105" pos:column="10"/></block></for>
      }<pos:position pos:line="106" pos:column="8"/></block></then></if>
      
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">mutt_unlink<pos:position pos:line="108" pos:column="18"/></name> <argument_list pos:line="108" pos:column="19">(<argument><expr><name pos:line="108" pos:column="20">tempfile<pos:position pos:line="108" pos:column="28"/></name></expr></argument>)<pos:position pos:line="108" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="110" pos:column="7">b<pos:position pos:line="110" pos:column="8"/></name><operator pos:line="110" pos:column="8">-&gt;<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="10">goodsig<pos:position pos:line="110" pos:column="17"/></name></name> <operator pos:line="110" pos:column="18">=<pos:position pos:line="110" pos:column="19"/></operator> <name pos:line="110" pos:column="20">goodsig<pos:position pos:line="110" pos:column="27"/></name></expr>;<pos:position pos:line="110" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="111" pos:column="7">b<pos:position pos:line="111" pos:column="8"/></name><operator pos:line="111" pos:column="8">-&gt;<pos:position pos:line="111" pos:column="13"/></operator><name pos:line="111" pos:column="10">badsig<pos:position pos:line="111" pos:column="16"/></name></name>  <operator pos:line="111" pos:column="18">=<pos:position pos:line="111" pos:column="19"/></operator> <operator pos:line="111" pos:column="20">!<pos:position pos:line="111" pos:column="21"/></operator><name pos:line="111" pos:column="21">goodsig<pos:position pos:line="111" pos:column="28"/></name></expr>;<pos:position pos:line="111" pos:column="29"/></expr_stmt>
      
      <comment type="block" pos:line="113" pos:column="7">/* Now display the signed body */</comment>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">state_attach_puts<pos:position pos:line="114" pos:column="24"/></name> <argument_list pos:line="114" pos:column="25">(<argument><expr><call><name pos:line="114" pos:column="26">_<pos:position pos:line="114" pos:column="27"/></name><argument_list pos:line="114" pos:column="27">(<argument><expr><literal type="string" pos:line="114" pos:column="28">"[-- The following data is signed --]\n\n"<pos:position pos:line="114" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="114" pos:column="73">s<pos:position pos:line="114" pos:column="74"/></name></expr></argument>)<pos:position pos:line="114" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="76"/></expr_stmt>


      <expr_stmt><expr><call><name pos:line="117" pos:column="7">FREE<pos:position pos:line="117" pos:column="11"/></name> <argument_list pos:line="117" pos:column="12">(<argument><expr><operator pos:line="117" pos:column="13">&amp;<pos:position pos:line="117" pos:column="18"/></operator><name pos:line="117" pos:column="14">signatures<pos:position pos:line="117" pos:column="24"/></name></expr></argument>)<pos:position pos:line="117" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="118" pos:column="6"/></block></then>
    <else pos:line="119" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="7">state_attach_puts<pos:position pos:line="120" pos:column="24"/></name> <argument_list pos:line="120" pos:column="25">(<argument><expr><call><name pos:line="120" pos:column="26">_<pos:position pos:line="120" pos:column="27"/></name><argument_list pos:line="120" pos:column="27">(<argument><expr><literal type="string" pos:line="120" pos:column="28">"[-- Warning: Can't find any signatures. --]\n\n"<pos:position pos:line="120" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="120" pos:column="80">s<pos:position pos:line="120" pos:column="81"/></name></expr></argument>)<pos:position pos:line="120" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="83"/></expr_stmt></block></else></if>
  }<pos:position pos:line="121" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><name pos:line="123" pos:column="3">rc<pos:position pos:line="123" pos:column="5"/></name> <operator pos:line="123" pos:column="6">=<pos:position pos:line="123" pos:column="7"/></operator> <call><name pos:line="123" pos:column="8">mutt_body_handler<pos:position pos:line="123" pos:column="25"/></name> <argument_list pos:line="123" pos:column="26">(<argument><expr><name pos:line="123" pos:column="27">a<pos:position pos:line="123" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="30">s<pos:position pos:line="123" pos:column="31"/></name></expr></argument>)<pos:position pos:line="123" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="33"/></expr_stmt>
  
  <if pos:line="125" pos:column="3">if <condition pos:line="125" pos:column="6">(<expr><name><name pos:line="125" pos:column="7">s<pos:position pos:line="125" pos:column="8"/></name><operator pos:line="125" pos:column="8">-&gt;<pos:position pos:line="125" pos:column="13"/></operator><name pos:line="125" pos:column="10">flags<pos:position pos:line="125" pos:column="15"/></name></name> <operator pos:line="125" pos:column="16">&amp;<pos:position pos:line="125" pos:column="21"/></operator> <name pos:line="125" pos:column="18">M_DISPLAY<pos:position pos:line="125" pos:column="27"/></name> <operator pos:line="125" pos:column="28">&amp;&amp;<pos:position pos:line="125" pos:column="38"/></operator> <name pos:line="125" pos:column="31">sigcnt<pos:position pos:line="125" pos:column="37"/></name></expr>)<pos:position pos:line="125" pos:column="38"/></condition><then pos:line="125" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="5">state_attach_puts<pos:position pos:line="126" pos:column="22"/></name> <argument_list pos:line="126" pos:column="23">(<argument><expr><call><name pos:line="126" pos:column="24">_<pos:position pos:line="126" pos:column="25"/></name><argument_list pos:line="126" pos:column="25">(<argument><expr><literal type="string" pos:line="126" pos:column="26">"\n[-- End of signed data --]\n"<pos:position pos:line="126" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="126" pos:column="61">s<pos:position pos:line="126" pos:column="62"/></name></expr></argument>)<pos:position pos:line="126" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="64"/></expr_stmt></block></then></if>
  
  <return pos:line="128" pos:column="3">return <expr><name pos:line="128" pos:column="10">rc<pos:position pos:line="128" pos:column="12"/></name></expr>;<pos:position pos:line="128" pos:column="13"/></return>
}<pos:position pos:line="129" pos:column="2"/></block></function></unit>

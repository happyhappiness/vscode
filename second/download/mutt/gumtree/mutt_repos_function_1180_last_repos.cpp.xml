<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1180_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">rfc3676_space_stuff<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">HEADER<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">hdr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">DEBUG<pos:position pos:line="3" pos:column="10"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">lc<pos:position pos:line="4" pos:column="9"/></name> <init pos:line="4" pos:column="10">= <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">len<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">c<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="char" pos:line="6" pos:column="21">'\0'<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">FILE<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">in<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="21">out<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">buf<pos:position pos:line="9" pos:column="11"/></name><index pos:line="9" pos:column="11">[<expr><name pos:line="9" pos:column="12">LONG_STRING<pos:position pos:line="9" pos:column="23"/></name></expr>]<pos:position pos:line="9" pos:column="24"/></index></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">tmpfile<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="10" pos:column="31"/></name></expr>]<pos:position pos:line="10" pos:column="32"/></index></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">hdr<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">||<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">!<pos:position pos:line="12" pos:column="16"/></operator><name><name pos:line="12" pos:column="16">hdr<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">content<pos:position pos:line="12" pos:column="28"/></name></name> <operator pos:line="12" pos:column="29">||<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="32">!<pos:position pos:line="12" pos:column="33"/></operator><name><name pos:line="12" pos:column="33">hdr<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">content<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">filename<pos:position pos:line="12" pos:column="55"/></name></name></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56">
    <block type="pseudo"><return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">dprint<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="number" pos:line="15" pos:column="11">2<pos:position pos:line="15" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">debugfile<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">,<pos:position pos:line="15" pos:column="25"/></operator> <literal type="string" pos:line="15" pos:column="26">"f=f: postprocess %s\n"<pos:position pos:line="15" pos:column="49"/></literal><operator pos:line="15" pos:column="49">,<pos:position pos:line="15" pos:column="50"/></operator> <name><name pos:line="15" pos:column="51">hdr<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">content<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">-&gt;<pos:position pos:line="15" pos:column="68"/></operator><name pos:line="15" pos:column="65">filename<pos:position pos:line="15" pos:column="73"/></name></name><operator pos:line="15" pos:column="73">)<pos:position pos:line="15" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">in<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">safe_fopen<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">hdr<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">content<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">filename<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="49">"r"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator> <operator pos:line="17" pos:column="55">==<pos:position pos:line="17" pos:column="57"/></operator> <name pos:line="17" pos:column="58">NULL<pos:position pos:line="17" pos:column="62"/></name></expr>)<pos:position pos:line="17" pos:column="63"/></condition><then pos:line="17" pos:column="63">
    <block type="pseudo"><return pos:line="18" pos:column="5">return;<pos:position pos:line="18" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">mutt_mktemp<pos:position pos:line="20" pos:column="14"/></name> <argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">tmpfile<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="25">sizeof <argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">tmpfile<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">out<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">safe_fopen<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">tmpfile<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="35">"w+"<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call><operator pos:line="21" pos:column="40">)<pos:position pos:line="21" pos:column="41"/></operator> <operator pos:line="21" pos:column="42">==<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="45">NULL<pos:position pos:line="21" pos:column="49"/></name></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">safe_fclose<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><operator pos:line="23" pos:column="18">&amp;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="19">in<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <return pos:line="24" pos:column="5">return;<pos:position pos:line="24" pos:column="12"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <while pos:line="27" pos:column="3">while <condition pos:line="27" pos:column="9">(<expr><call><name pos:line="27" pos:column="10">fgets<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">buf<pos:position pos:line="27" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="22">sizeof <argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">buf<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">in<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="40"/></condition>
  <block pos:line="28" pos:column="3">{
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">ascii_strncmp<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="string" pos:line="29" pos:column="24">"From "<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">buf<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="38">5<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call> <operator pos:line="29" pos:column="41">==<pos:position pos:line="29" pos:column="43"/></operator> <literal type="number" pos:line="29" pos:column="44">0<pos:position pos:line="29" pos:column="45"/></literal> <operator pos:line="29" pos:column="46">||<pos:position pos:line="29" pos:column="48"/></operator> <name><name pos:line="29" pos:column="49">buf<pos:position pos:line="29" pos:column="52"/></name><index pos:line="29" pos:column="52">[<expr><literal type="number" pos:line="29" pos:column="53">0<pos:position pos:line="29" pos:column="54"/></literal></expr>]<pos:position pos:line="29" pos:column="55"/></index></name> <operator pos:line="29" pos:column="56">==<pos:position pos:line="29" pos:column="58"/></operator> <literal type="char" pos:line="29" pos:column="59">' '<pos:position pos:line="29" pos:column="62"/></literal></expr>)<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63"> <block pos:line="29" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">fputc<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><literal type="char" pos:line="30" pos:column="14">' '<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="19">out<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">DEBUG<pos:position pos:line="31" pos:column="10"/></name></expr></cpp:if>
      <expr_stmt><expr><name pos:line="32" pos:column="7">lc<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">++<pos:position pos:line="32" pos:column="11"/></operator></expr>;<pos:position pos:line="32" pos:column="12"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">len<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <call><name pos:line="33" pos:column="13">mutt_strlen<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">buf<pos:position pos:line="33" pos:column="29"/></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">len<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">&gt;<pos:position pos:line="34" pos:column="19"/></operator> <literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
      <block pos:line="35" pos:column="7">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">c<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <name><name pos:line="36" pos:column="13">buf<pos:position pos:line="36" pos:column="16"/></name><index pos:line="36" pos:column="16">[<expr><name pos:line="36" pos:column="17">len<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-<pos:position pos:line="36" pos:column="21"/></operator><literal type="number" pos:line="36" pos:column="21">1<pos:position pos:line="36" pos:column="22"/></literal></expr>]<pos:position pos:line="36" pos:column="23"/></index></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">buf<pos:position pos:line="37" pos:column="12"/></name><index pos:line="37" pos:column="12">[<expr><name pos:line="37" pos:column="13">len<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">1<pos:position pos:line="37" pos:column="18"/></literal></expr>]<pos:position pos:line="37" pos:column="19"/></index></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="char" pos:line="37" pos:column="22">'\0'<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">dprint<pos:position pos:line="39" pos:column="13"/></name> <argument_list pos:line="39" pos:column="14">(<argument><expr><literal type="number" pos:line="39" pos:column="15">4<pos:position pos:line="39" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="18">(<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">debugfile<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">,<pos:position pos:line="39" pos:column="29"/></operator> <literal type="string" pos:line="39" pos:column="30">"f=f: line %d needs space-stuffing: '%s'\n"<pos:position pos:line="39" pos:column="73"/></literal><operator pos:line="39" pos:column="73">,<pos:position pos:line="39" pos:column="74"/></operator>
                  <name pos:line="40" pos:column="19">lc<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">,<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">buf<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">)<pos:position pos:line="40" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">len<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">&gt;<pos:position pos:line="41" pos:column="19"/></operator> <literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr>)<pos:position pos:line="41" pos:column="19"/></condition><then pos:line="41" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="9">buf<pos:position pos:line="42" pos:column="12"/></name><index pos:line="42" pos:column="12">[<expr><name pos:line="42" pos:column="13">len<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">1<pos:position pos:line="42" pos:column="18"/></literal></expr>]<pos:position pos:line="42" pos:column="19"/></index></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">c<pos:position pos:line="42" pos:column="23"/></name></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">fputs<pos:position pos:line="45" pos:column="10"/></name> <argument_list pos:line="45" pos:column="11">(<argument><expr><name pos:line="45" pos:column="12">buf<pos:position pos:line="45" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="17">out<pos:position pos:line="45" pos:column="20"/></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">safe_fclose<pos:position pos:line="47" pos:column="14"/></name> <argument_list pos:line="47" pos:column="15">(<argument><expr><operator pos:line="47" pos:column="16">&amp;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="17">in<pos:position pos:line="47" pos:column="19"/></name></expr></argument>)<pos:position pos:line="47" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">safe_fclose<pos:position pos:line="48" pos:column="14"/></name> <argument_list pos:line="48" pos:column="15">(<argument><expr><operator pos:line="48" pos:column="16">&amp;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="17">out<pos:position pos:line="48" pos:column="20"/></name></expr></argument>)<pos:position pos:line="48" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">mutt_set_mtime<pos:position pos:line="49" pos:column="17"/></name> <argument_list pos:line="49" pos:column="18">(<argument><expr><name><name pos:line="49" pos:column="19">hdr<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">-&gt;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="24">content<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">-&gt;<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="33">filename<pos:position pos:line="49" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="43">tmpfile<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">unlink<pos:position pos:line="50" pos:column="9"/></name> <argument_list pos:line="50" pos:column="10">(<argument><expr><name><name pos:line="50" pos:column="11">hdr<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">content<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">filename<pos:position pos:line="50" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">mutt_str_replace<pos:position pos:line="51" pos:column="19"/></name> <argument_list pos:line="51" pos:column="20">(<argument><expr><operator pos:line="51" pos:column="21">&amp;<pos:position pos:line="51" pos:column="26"/></operator><name><name pos:line="51" pos:column="22">hdr<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">content<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">filename<pos:position pos:line="51" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">tmpfile<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

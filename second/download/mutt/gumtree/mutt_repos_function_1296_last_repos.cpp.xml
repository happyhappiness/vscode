<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1296_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">find_word<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">src<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">src<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><name pos:line="5" pos:column="10">p<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">&amp;&amp;<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">p<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&amp;&amp;<pos:position pos:line="5" pos:column="28"/></operator> <call><name pos:line="5" pos:column="21">strchr<pos:position pos:line="5" pos:column="27"/></name> <argument_list pos:line="5" pos:column="28">(<argument><expr><literal type="string" pos:line="5" pos:column="29">" \t\n"<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">p<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="42"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">p<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">++<pos:position pos:line="6" pos:column="8"/></operator></expr>;<pos:position pos:line="6" pos:column="9"/></expr_stmt></block></while>
  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">&amp;&amp;<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">p<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&amp;&amp;<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><call><name pos:line="7" pos:column="22">strchr<pos:position pos:line="7" pos:column="28"/></name> <argument_list pos:line="7" pos:column="29">(<argument><expr><literal type="string" pos:line="7" pos:column="30">" \t\n"<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">p<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="43"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">p<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">++<pos:position pos:line="8" pos:column="8"/></operator></expr>;<pos:position pos:line="8" pos:column="9"/></expr_stmt></block></while>
  <return pos:line="9" pos:column="3">return <expr><name pos:line="9" pos:column="10">p<pos:position pos:line="9" pos:column="11"/></name></expr>;<pos:position pos:line="9" pos:column="12"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_418_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">_smime_getkeys<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">mailbox<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">smime_key_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">key<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">NULL<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">k<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name pos:line="4" pos:column="13">NULL<pos:position pos:line="4" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">STRING<pos:position pos:line="5" pos:column="18"/></name></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">key<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">smime_get_key_by_addr<pos:position pos:line="7" pos:column="30"/></name> <argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">mailbox<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">KEYFLAG_CANENCRYPT<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="61">0<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="64">1<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">key<pos:position pos:line="9" pos:column="11"/></name></expr>)<pos:position pos:line="9" pos:column="12"/></condition><then pos:line="9" pos:column="12">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">snprintf<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">buf<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="19">sizeof<argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">buf<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="32">_<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><literal type="string" pos:line="11" pos:column="34">"Enter keyID for %s: "<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr></argument>,
	     <argument><expr><name pos:line="12" pos:column="14">mailbox<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">key<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">smime_ask_for_key<pos:position pos:line="13" pos:column="28"/></name> <argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">buf<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">KEYFLAG_CANENCRYPT<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="55">0<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">key<pos:position pos:line="16" pos:column="10"/></name></expr>)<pos:position pos:line="16" pos:column="11"/></condition><then pos:line="16" pos:column="11">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">k<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <name><name pos:line="18" pos:column="9">key<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">hash<pos:position pos:line="18" pos:column="18"/></name></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* the key used last time. */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">SmimeKeyToUse<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">&amp;&amp;<pos:position pos:line="21" pos:column="34"/></operator> 
        <operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">mutt_strcasecmp<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">k<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">SmimeKeyToUse<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">+<pos:position pos:line="22" pos:column="45"/></operator> <call><name pos:line="22" pos:column="46">mutt_strlen<pos:position pos:line="22" pos:column="57"/></name> <argument_list pos:line="22" pos:column="58">(<argument><expr><name pos:line="22" pos:column="59">SmimeKeys<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call><operator pos:line="22" pos:column="69">+<pos:position pos:line="22" pos:column="70"/></operator><literal type="number" pos:line="22" pos:column="70">1<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="73"/></condition><then pos:line="22" pos:column="73">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">smime_free_key<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="24">key<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
      <return pos:line="25" pos:column="7">return;<pos:position pos:line="25" pos:column="14"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="10">smime_void_passphrase<pos:position pos:line="27" pos:column="31"/></name> <argument_list pos:line="27" pos:column="32">()<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">snprintf<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">SmimeKeyToUse<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="30">sizeof <argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">SmimeKeyToUse<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="54">"%s/%s"<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>, 
	      <argument><expr><call><name pos:line="30" pos:column="15">NONULL<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">SmimeKeys<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">k<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">snprintf<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">SmimeCertToUse<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="31">sizeof <argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">SmimeCertToUse<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="56">"%s/%s"<pos:position pos:line="32" pos:column="63"/></literal></expr></argument>,
	      <argument><expr><call><name pos:line="33" pos:column="15">NONULL<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">SmimeCertificates<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">k<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">mutt_strcasecmp<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">k<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">SmimeDefaultKey<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">smime_void_passphrase<pos:position pos:line="36" pos:column="28"/></name> <argument_list pos:line="36" pos:column="29">()<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">smime_free_key<pos:position pos:line="38" pos:column="19"/></name> <argument_list pos:line="38" pos:column="20">(<argument><expr><operator pos:line="38" pos:column="21">&amp;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="22">key<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
    <return pos:line="39" pos:column="5">return;<pos:position pos:line="39" pos:column="12"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">*<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">SmimeKeyToUse<pos:position pos:line="42" pos:column="21"/></name></expr>)<pos:position pos:line="42" pos:column="22"/></condition><then pos:line="42" pos:column="22">
  <block pos:line="43" pos:column="3">{
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">!<pos:position pos:line="44" pos:column="10"/></operator><call><name pos:line="44" pos:column="10">mutt_strcasecmp<pos:position pos:line="44" pos:column="25"/></name> <argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">SmimeDefaultKey<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, 
                          <argument><expr><name pos:line="45" pos:column="27">SmimeKeyToUse<pos:position pos:line="45" pos:column="40"/></name> <operator pos:line="45" pos:column="41">+<pos:position pos:line="45" pos:column="42"/></operator> <call><name pos:line="45" pos:column="43">mutt_strlen<pos:position pos:line="45" pos:column="54"/></name> <argument_list pos:line="45" pos:column="55">(<argument><expr><name pos:line="45" pos:column="56">SmimeKeys<pos:position pos:line="45" pos:column="65"/></name></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></call><operator pos:line="45" pos:column="66">+<pos:position pos:line="45" pos:column="67"/></operator><literal type="number" pos:line="45" pos:column="67">1<pos:position pos:line="45" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70">
      <block type="pseudo"><return pos:line="46" pos:column="7">return;<pos:position pos:line="46" pos:column="14"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">smime_void_passphrase<pos:position pos:line="48" pos:column="26"/></name> <argument_list pos:line="48" pos:column="27">()<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="51" pos:column="3">snprintf<pos:position pos:line="51" pos:column="11"/></name> <argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">SmimeKeyToUse<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="28">sizeof <argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">SmimeKeyToUse<pos:position pos:line="51" pos:column="49"/></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="52">"%s/%s"<pos:position pos:line="51" pos:column="59"/></literal></expr></argument>, 
	    <argument><expr><call><name pos:line="52" pos:column="13">NONULL<pos:position pos:line="52" pos:column="19"/></name> <argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">SmimeKeys<pos:position pos:line="52" pos:column="30"/></name></expr></argument>)<pos:position pos:line="52" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="33">NONULL<pos:position pos:line="52" pos:column="39"/></name> <argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">SmimeDefaultKey<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">snprintf<pos:position pos:line="54" pos:column="11"/></name> <argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">SmimeCertToUse<pos:position pos:line="54" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="29">sizeof <argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">SmimeCertToUse<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="54">"%s/%s"<pos:position pos:line="54" pos:column="61"/></literal></expr></argument>,
	    <argument><expr><call><name pos:line="55" pos:column="13">NONULL<pos:position pos:line="55" pos:column="19"/></name> <argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">SmimeCertificates<pos:position pos:line="55" pos:column="38"/></name></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="41">NONULL<pos:position pos:line="55" pos:column="47"/></name> <argument_list pos:line="55" pos:column="48">(<argument><expr><name pos:line="55" pos:column="49">SmimeDefaultKey<pos:position pos:line="55" pos:column="64"/></name></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="67"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

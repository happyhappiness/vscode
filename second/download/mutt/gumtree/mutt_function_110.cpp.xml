<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_110.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pgp_gpgme_encrypted_handler<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">BODY<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">a<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">STATE<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">s<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fpout<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BODY<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tattach<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">BODY<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">orig_body<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">a<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">is_signed<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name> <init pos:line="8" pos:column="10">= <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">dprint<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="number" pos:line="10" pos:column="11">2<pos:position pos:line="10" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">debugfile<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">,<pos:position pos:line="10" pos:column="25"/></operator> <literal type="string" pos:line="10" pos:column="26">"Entering pgp_encrypted handler\n"<pos:position pos:line="10" pos:column="60"/></literal><operator pos:line="10" pos:column="60">)<pos:position pos:line="10" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">a<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <name><name pos:line="11" pos:column="7">a<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">parts<pos:position pos:line="11" pos:column="15"/></name></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">a<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">||<pos:position pos:line="12" pos:column="12"/></operator> <name><name pos:line="12" pos:column="13">a<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">type<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">!=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">TYPEAPPLICATION<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">||<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="43">!<pos:position pos:line="12" pos:column="44"/></operator><name><name pos:line="12" pos:column="44">a<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">subtype<pos:position pos:line="12" pos:column="54"/></name></name>
      <operator pos:line="13" pos:column="7">||<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">ascii_strcasecmp<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="string" pos:line="13" pos:column="28">"pgp-encrypted"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="45">a<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">subtype<pos:position pos:line="13" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call> 
      <operator pos:line="14" pos:column="7">||<pos:position pos:line="14" pos:column="9"/></operator> <operator pos:line="14" pos:column="10">!<pos:position pos:line="14" pos:column="11"/></operator><name><name pos:line="14" pos:column="11">a<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">next<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">||<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">a<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">next<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">type<pos:position pos:line="14" pos:column="35"/></name></name> <operator pos:line="14" pos:column="36">!=<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="39">TYPEAPPLICATION<pos:position pos:line="14" pos:column="54"/></name> <operator pos:line="14" pos:column="55">||<pos:position pos:line="14" pos:column="57"/></operator> <operator pos:line="14" pos:column="58">!<pos:position pos:line="14" pos:column="59"/></operator><name><name pos:line="14" pos:column="59">a<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">-&gt;<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="62">next<pos:position pos:line="14" pos:column="66"/></name><operator pos:line="14" pos:column="66">-&gt;<pos:position pos:line="14" pos:column="71"/></operator><name pos:line="14" pos:column="68">subtype<pos:position pos:line="14" pos:column="75"/></name></name>
      <operator pos:line="15" pos:column="7">||<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">ascii_strcasecmp<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"octet-stream"<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="44">a<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">next<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">subtype<pos:position pos:line="15" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr> )<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
    <block pos:line="16" pos:column="5">{
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name><name pos:line="17" pos:column="11">s<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">flags<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="22">M_DISPLAY<pos:position pos:line="17" pos:column="31"/></name></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">state_attach_puts<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><call><name pos:line="18" pos:column="28">_<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><literal type="string" pos:line="18" pos:column="30">"[-- Error: malformed PGP/MIME message! --]\n\n"<pos:position pos:line="18" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="19" pos:column="28">s<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then></if>
      <return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* Move forward to the application/pgp-encrypted body. */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">a<pos:position pos:line="24" pos:column="4"/></name> <operator pos:line="24" pos:column="5">=<pos:position pos:line="24" pos:column="6"/></operator> <name><name pos:line="24" pos:column="7">a<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">next<pos:position pos:line="24" pos:column="14"/></name></name></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">mutt_mktemp<pos:position pos:line="26" pos:column="14"/></name> <argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">tempfile<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="26">sizeof <argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">tempfile<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">!<pos:position pos:line="27" pos:column="8"/></operator><operator pos:line="27" pos:column="8">(<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">fpout<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">safe_fopen<pos:position pos:line="27" pos:column="27"/></name> <argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">tempfile<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"w+"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator></expr>)<pos:position pos:line="27" pos:column="46"/></condition><then pos:line="27" pos:column="46">
    <block pos:line="28" pos:column="5">{
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name><name pos:line="29" pos:column="11">s<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">flags<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">&amp;<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="22">M_DISPLAY<pos:position pos:line="29" pos:column="31"/></name></expr>)<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">state_attach_puts<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><call><name pos:line="30" pos:column="28">_<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><literal type="string" pos:line="30" pos:column="30">"[-- Error: could not create temporary file! "<pos:position pos:line="30" pos:column="76"/></literal>
                             <literal type="string" pos:line="31" pos:column="30">"--]\n"<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">s<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt></block></then></if>
      <return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">-<pos:position pos:line="32" pos:column="15"/></operator><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr>;<pos:position pos:line="32" pos:column="17"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="35" pos:column="3">tattach<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">decrypt_part<pos:position pos:line="35" pos:column="25"/></name> <argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">a<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">s<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">fpout<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="40">0<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="44">is_signed<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">tattach<pos:position pos:line="36" pos:column="14"/></name></expr>)<pos:position pos:line="36" pos:column="15"/></condition><then pos:line="36" pos:column="15">
    <block pos:line="37" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">tattach<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">goodsig<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">is_signed<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">&gt;<pos:position pos:line="38" pos:column="40"/></operator> <literal type="number" pos:line="38" pos:column="38">0<pos:position pos:line="38" pos:column="39"/></literal></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>

      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name><name pos:line="40" pos:column="11">s<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">flags<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">&amp;<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="22">M_DISPLAY<pos:position pos:line="40" pos:column="31"/></name></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="9">state_attach_puts<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><ternary><condition><expr><name pos:line="41" pos:column="28">is_signed<pos:position pos:line="41" pos:column="37"/></name></expr>?<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38">
          <expr><call><name pos:line="42" pos:column="11">_<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><literal type="string" pos:line="42" pos:column="13">"[-- The following data is PGP/MIME signed and encrypted --]\n\n"<pos:position pos:line="42" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="79"/></argument_list></call></expr></then><else pos:line="42" pos:column="79">:
          <expr><call><name pos:line="43" pos:column="11">_<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="string" pos:line="43" pos:column="13">"[-- The following data is PGP/MIME encrypted --]\n\n"<pos:position pos:line="43" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr></else></ternary></expr></argument>,
                           <argument><expr><name pos:line="44" pos:column="28">s<pos:position pos:line="44" pos:column="29"/></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt></block></then></if>
      
      <block pos:line="46" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">FILE<pos:position pos:line="47" pos:column="13"/></name> <modifier pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></modifier></type><name pos:line="47" pos:column="15">savefp<pos:position pos:line="47" pos:column="21"/></name> <init pos:line="47" pos:column="22">= <expr><name><name pos:line="47" pos:column="24">s<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">-&gt;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="27">fpin<pos:position pos:line="47" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="47" pos:column="32"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">s<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">fpin<pos:position pos:line="48" pos:column="16"/></name></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">fpout<pos:position pos:line="48" pos:column="24"/></name></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">rc<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <call><name pos:line="49" pos:column="14">mutt_body_handler<pos:position pos:line="49" pos:column="31"/></name> <argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">tattach<pos:position pos:line="49" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">s<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">s<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">fpin<pos:position pos:line="50" pos:column="16"/></name></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">savefp<pos:position pos:line="50" pos:column="25"/></name></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block>

      <comment type="block" pos:line="53" pos:column="7">/* 
       * if a multipart/signed is the _only_ sub-part of a
       * multipart/encrypted, cache signature verification
       * status.
       */</comment>
      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><call><name pos:line="58" pos:column="11">mutt_is_multipart_signed<pos:position pos:line="58" pos:column="35"/></name> <argument_list pos:line="58" pos:column="36">(<argument><expr><name pos:line="58" pos:column="37">tattach<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call> <operator pos:line="58" pos:column="46">&amp;&amp;<pos:position pos:line="58" pos:column="56"/></operator> <operator pos:line="58" pos:column="49">!<pos:position pos:line="58" pos:column="50"/></operator><name><name pos:line="58" pos:column="50">tattach<pos:position pos:line="58" pos:column="57"/></name><operator pos:line="58" pos:column="57">-&gt;<pos:position pos:line="58" pos:column="62"/></operator><name pos:line="58" pos:column="59">next<pos:position pos:line="58" pos:column="63"/></name></name></expr>)<pos:position pos:line="58" pos:column="64"/></condition><then pos:line="58" pos:column="64">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="9">orig_body<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">goodsig<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">|=<pos:position pos:line="59" pos:column="30"/></operator> <name><name pos:line="59" pos:column="31">tattach<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">-&gt;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="40">goodsig<pos:position pos:line="59" pos:column="47"/></name></name></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt></block></then></if>
    
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><name><name pos:line="61" pos:column="11">s<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">flags<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">&amp;<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="22">M_DISPLAY<pos:position pos:line="61" pos:column="31"/></name></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32">
        <block pos:line="62" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="63" pos:column="11">state_puts<pos:position pos:line="63" pos:column="21"/></name> <argument_list pos:line="63" pos:column="22">(<argument><expr><literal type="string" pos:line="63" pos:column="23">"\n"<pos:position pos:line="63" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="29">s<pos:position pos:line="63" pos:column="30"/></name></expr></argument>)<pos:position pos:line="63" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="64" pos:column="11">state_attach_puts<pos:position pos:line="64" pos:column="28"/></name> <argument_list pos:line="64" pos:column="29">(<argument><expr><ternary><condition><expr><name pos:line="64" pos:column="30">is_signed<pos:position pos:line="64" pos:column="39"/></name></expr>?<pos:position pos:line="64" pos:column="40"/></condition><then pos:line="64" pos:column="40">
             <expr><call><name pos:line="65" pos:column="14">_<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><literal type="string" pos:line="65" pos:column="16">"[-- End of PGP/MIME signed and encrypted data --]\n"<pos:position pos:line="65" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr></then><else pos:line="65" pos:column="70">:
             <expr><call><name pos:line="66" pos:column="14">_<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="string" pos:line="66" pos:column="16">"[-- End of PGP/MIME encrypted data --]\n"<pos:position pos:line="66" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr></else></ternary></expr></argument>,
                             <argument><expr><name pos:line="67" pos:column="30">s<pos:position pos:line="67" pos:column="31"/></name></expr></argument>)<pos:position pos:line="67" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="70" pos:column="7">mutt_free_body<pos:position pos:line="70" pos:column="21"/></name> <argument_list pos:line="70" pos:column="22">(<argument><expr><operator pos:line="70" pos:column="23">&amp;<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="24">tattach<pos:position pos:line="70" pos:column="31"/></name></expr></argument>)<pos:position pos:line="70" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">safe_fclose<pos:position pos:line="73" pos:column="14"/></name> <argument_list pos:line="73" pos:column="15">(<argument><expr><operator pos:line="73" pos:column="16">&amp;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="17">fpout<pos:position pos:line="73" pos:column="22"/></name></expr></argument>)<pos:position pos:line="73" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">mutt_unlink<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><name pos:line="74" pos:column="15">tempfile<pos:position pos:line="74" pos:column="23"/></name></expr></argument>)<pos:position pos:line="74" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">dprint<pos:position pos:line="75" pos:column="9"/></name> <argument_list pos:line="75" pos:column="10">(<argument><expr><literal type="number" pos:line="75" pos:column="11">2<pos:position pos:line="75" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="75" pos:column="14">(<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="15">debugfile<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">,<pos:position pos:line="75" pos:column="25"/></operator> <literal type="string" pos:line="75" pos:column="26">"Leaving pgp_encrypted handler\n"<pos:position pos:line="75" pos:column="59"/></literal><operator pos:line="75" pos:column="59">)<pos:position pos:line="75" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="62"/></expr_stmt>

  <return pos:line="77" pos:column="3">return <expr><name pos:line="77" pos:column="10">rc<pos:position pos:line="77" pos:column="12"/></name></expr>;<pos:position pos:line="77" pos:column="13"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

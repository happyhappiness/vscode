<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_613_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">attach_forward_msgs<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">FILE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">fp<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">HEADER<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">hdr<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, 
	       <parameter><decl><type><name pos:line="2" pos:column="16">ATTACHPTR<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier><modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">idx<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">short<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">idxlen<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">BODY<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">cur<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HEADER<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">curhdr<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">HEADER<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tmphdr<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">short<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">BODY<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier><modifier pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></modifier></type><name pos:line="9" pos:column="10">last<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">tmpbody<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="10" pos:column="31"/></name></expr>]<pos:position pos:line="10" pos:column="32"/></index></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">FILE<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">tmpfp<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">cmflags<pos:position pos:line="13" pos:column="14"/></name> <init pos:line="13" pos:column="15">= <expr><literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">chflags<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><name pos:line="14" pos:column="17">CH_XMIT<pos:position pos:line="14" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
  
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">cur<pos:position pos:line="16" pos:column="10"/></name></expr>)<pos:position pos:line="16" pos:column="11"/></condition><then pos:line="16" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">curhdr<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name><name pos:line="17" pos:column="14">cur<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">hdr<pos:position pos:line="17" pos:column="22"/></name></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt></block></then>
  <else pos:line="18" pos:column="3">else
  <block pos:line="19" pos:column="3">{
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">i<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <literal type="number" pos:line="20" pos:column="14">0<pos:position pos:line="20" pos:column="15"/></literal></expr>;<pos:position pos:line="20" pos:column="16"/></init> <condition><expr><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="21">idxlen<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></condition> <incr><expr><name pos:line="20" pos:column="29">i<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">++<pos:position pos:line="20" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="33"/></control>
      <block type="pseudo"><if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name><name pos:line="21" pos:column="11">idx<pos:position pos:line="21" pos:column="14"/></name><index pos:line="21" pos:column="14">[<expr><name pos:line="21" pos:column="15">i<pos:position pos:line="21" pos:column="16"/></name></expr>]<pos:position pos:line="21" pos:column="17"/></index></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name><name pos:line="21" pos:column="19">content<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">tagged<pos:position pos:line="21" pos:column="34"/></name></name></expr>)<pos:position pos:line="21" pos:column="35"/></condition><then pos:line="21" pos:column="35">
      <block pos:line="22" pos:column="7">{
	<expr_stmt><expr><name pos:line="23" pos:column="9">curhdr<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name><name pos:line="23" pos:column="18">idx<pos:position pos:line="23" pos:column="21"/></name><index pos:line="23" pos:column="21">[<expr><name pos:line="23" pos:column="22">i<pos:position pos:line="23" pos:column="23"/></name></expr>]<pos:position pos:line="23" pos:column="24"/></index></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name><name pos:line="23" pos:column="26">content<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">hdr<pos:position pos:line="23" pos:column="38"/></name></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
	<break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if></block></for>
  }<pos:position pos:line="26" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="28" pos:column="3">tmphdr<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">mutt_new_header<pos:position pos:line="28" pos:column="27"/></name> <argument_list pos:line="28" pos:column="28">()<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">tmphdr<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">env<pos:position pos:line="29" pos:column="14"/></name></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">mutt_new_envelope<pos:position pos:line="29" pos:column="34"/></name> <argument_list pos:line="29" pos:column="35">()<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">mutt_make_forward_subject<pos:position pos:line="30" pos:column="28"/></name> <argument_list pos:line="30" pos:column="29">(<argument><expr><name><name pos:line="30" pos:column="30">tmphdr<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">env<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">Context<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">curhdr<pos:position pos:line="30" pos:column="58"/></name></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>


  <expr_stmt><expr><name><name pos:line="33" pos:column="3">tmpbody<pos:position pos:line="33" pos:column="10"/></name><index pos:line="33" pos:column="10">[<expr><literal type="number" pos:line="33" pos:column="11">0<pos:position pos:line="33" pos:column="12"/></literal></expr>]<pos:position pos:line="33" pos:column="13"/></index></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <literal type="char" pos:line="33" pos:column="16">'\0'<pos:position pos:line="33" pos:column="20"/></literal></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">rc<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">query_quadoption<pos:position pos:line="35" pos:column="29"/></name> <argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">OPT_MIMEFWD<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, 
		 <argument><expr><call><name pos:line="36" pos:column="18">_<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="string" pos:line="36" pos:column="20">"Forward MIME encapsulated?"<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call><operator pos:line="36" pos:column="50">)<pos:position pos:line="36" pos:column="51"/></operator> <operator pos:line="36" pos:column="52">==<pos:position pos:line="36" pos:column="54"/></operator> <name pos:line="36" pos:column="55">M_NO<pos:position pos:line="36" pos:column="59"/></name></expr>)<pos:position pos:line="36" pos:column="60"/></condition><then pos:line="36" pos:column="60">
  <block pos:line="37" pos:column="3">{
    
    <comment type="block" pos:line="39" pos:column="5">/* no MIME encapsulation */</comment>
    
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">mutt_mktemp<pos:position pos:line="41" pos:column="16"/></name> <argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">tmpbody<pos:position pos:line="41" pos:column="25"/></name></expr></argument>)<pos:position pos:line="41" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><operator pos:line="42" pos:column="10">(<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">tmpfp<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <call><name pos:line="42" pos:column="19">safe_fopen<pos:position pos:line="42" pos:column="29"/></name> <argument_list pos:line="42" pos:column="30">(<argument><expr><name pos:line="42" pos:column="31">tmpbody<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="40">"w"<pos:position pos:line="42" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call><operator pos:line="42" pos:column="44">)<pos:position pos:line="42" pos:column="45"/></operator></expr>)<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46">
    <block pos:line="43" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">mutt_error<pos:position pos:line="44" pos:column="17"/></name> <argument_list pos:line="44" pos:column="18">(<argument><expr><call><name pos:line="44" pos:column="19">_<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><literal type="string" pos:line="44" pos:column="21">"Can't create %s."<pos:position pos:line="44" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">tmpbody<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">mutt_free_header<pos:position pos:line="45" pos:column="23"/></name> <argument_list pos:line="45" pos:column="24">(<argument><expr><operator pos:line="45" pos:column="25">&amp;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="26">tmphdr<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
      <return pos:line="46" pos:column="7">return;<pos:position pos:line="46" pos:column="14"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">option<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">OPTFORWQUOTE<pos:position pos:line="49" pos:column="29"/></name></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
    <block pos:line="50" pos:column="5">{
      <expr_stmt><expr><name pos:line="51" pos:column="7">chflags<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">|=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">CH_PREFIX<pos:position pos:line="51" pos:column="27"/></name></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">cmflags<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">|=<pos:position pos:line="52" pos:column="17"/></operator> <name pos:line="52" pos:column="18">M_CM_PREFIX<pos:position pos:line="52" pos:column="29"/></name></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><call><name pos:line="55" pos:column="9">option<pos:position pos:line="55" pos:column="15"/></name> <argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">OPTFORWDECODE<pos:position pos:line="55" pos:column="30"/></name></expr></argument>)<pos:position pos:line="55" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32">
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><name pos:line="57" pos:column="7">cmflags<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">|=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">M_CM_DECODE<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">|<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">M_CM_CHARCONV<pos:position pos:line="57" pos:column="45"/></name></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>
      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><call><name pos:line="58" pos:column="11">option<pos:position pos:line="58" pos:column="17"/></name> <argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">OPTWEED<pos:position pos:line="58" pos:column="26"/></name></expr></argument>)<pos:position pos:line="58" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28">
      <block pos:line="59" pos:column="7">{
	<expr_stmt><expr><name pos:line="60" pos:column="9">chflags<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">|=<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">CH_WEED<pos:position pos:line="60" pos:column="27"/></name> <operator pos:line="60" pos:column="28">|<pos:position pos:line="60" pos:column="29"/></operator> <name pos:line="60" pos:column="30">CH_REORDER<pos:position pos:line="60" pos:column="40"/></name></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">cmflags<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">|=<pos:position pos:line="61" pos:column="19"/></operator> <name pos:line="61" pos:column="20">M_CM_WEED<pos:position pos:line="61" pos:column="29"/></name></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    
    
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">cur<pos:position pos:line="66" pos:column="12"/></name></expr>)<pos:position pos:line="66" pos:column="13"/></condition><then pos:line="66" pos:column="13">
    <block pos:line="67" pos:column="5">{
      <comment type="block" pos:line="68" pos:column="7">/* mutt_message_hook (cur-&gt;hdr, M_MESSAGEHOOK); */</comment> 
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">mutt_forward_intro<pos:position pos:line="69" pos:column="25"/></name> <argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">tmpfp<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="34">cur<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-&gt;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="39">hdr<pos:position pos:line="69" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">_mutt_copy_message<pos:position pos:line="70" pos:column="25"/></name> <argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">tmpfp<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="34">fp<pos:position pos:line="70" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="38">cur<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">-&gt;<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="43">hdr<pos:position pos:line="70" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="48">cur<pos:position pos:line="70" pos:column="51"/></name><operator pos:line="70" pos:column="51">-&gt;<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="53">hdr<pos:position pos:line="70" pos:column="56"/></name><operator pos:line="70" pos:column="56">-&gt;<pos:position pos:line="70" pos:column="61"/></operator><name pos:line="70" pos:column="58">content<pos:position pos:line="70" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="67">cmflags<pos:position pos:line="70" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="76">chflags<pos:position pos:line="70" pos:column="83"/></name></expr></argument>)<pos:position pos:line="70" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="85"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">mutt_forward_trailer<pos:position pos:line="71" pos:column="27"/></name> <argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">tmpfp<pos:position pos:line="71" pos:column="34"/></name></expr></argument>)<pos:position pos:line="71" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <else pos:line="73" pos:column="5">else
    <block pos:line="74" pos:column="5">{
      <for pos:line="75" pos:column="7">for <control pos:line="75" pos:column="11">(<init><expr><name pos:line="75" pos:column="12">i<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <literal type="number" pos:line="75" pos:column="16">0<pos:position pos:line="75" pos:column="17"/></literal></expr>;<pos:position pos:line="75" pos:column="18"/></init> <condition><expr><name pos:line="75" pos:column="19">i<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">&lt;<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="23">idxlen<pos:position pos:line="75" pos:column="29"/></name></expr>;<pos:position pos:line="75" pos:column="30"/></condition> <incr><expr><name pos:line="75" pos:column="31">i<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">++<pos:position pos:line="75" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="35"/></control>
      <block pos:line="76" pos:column="7">{
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name><name pos:line="77" pos:column="13">idx<pos:position pos:line="77" pos:column="16"/></name><index pos:line="77" pos:column="16">[<expr><name pos:line="77" pos:column="17">i<pos:position pos:line="77" pos:column="18"/></name></expr>]<pos:position pos:line="77" pos:column="19"/></index></name><operator pos:line="77" pos:column="19">-&gt;<pos:position pos:line="77" pos:column="24"/></operator><name><name pos:line="77" pos:column="21">content<pos:position pos:line="77" pos:column="28"/></name><operator pos:line="77" pos:column="28">-&gt;<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="30">tagged<pos:position pos:line="77" pos:column="36"/></name></name></expr>)<pos:position pos:line="77" pos:column="37"/></condition><then pos:line="77" pos:column="37">
	<block pos:line="78" pos:column="9">{
	  <comment type="block" pos:line="79" pos:column="11">/* mutt_message_hook (idx[i]-&gt;content-&gt;hdr, M_MESSAGEHOOK); */</comment> 
	  <expr_stmt><expr><call><name pos:line="80" pos:column="11">mutt_forward_intro<pos:position pos:line="80" pos:column="29"/></name> <argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">tmpfp<pos:position pos:line="80" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="38">idx<pos:position pos:line="80" pos:column="41"/></name><index pos:line="80" pos:column="41">[<expr><name pos:line="80" pos:column="42">i<pos:position pos:line="80" pos:column="43"/></name></expr>]<pos:position pos:line="80" pos:column="44"/></index></name><operator pos:line="80" pos:column="44">-&gt;<pos:position pos:line="80" pos:column="49"/></operator><name><name pos:line="80" pos:column="46">content<pos:position pos:line="80" pos:column="53"/></name><operator pos:line="80" pos:column="53">-&gt;<pos:position pos:line="80" pos:column="58"/></operator><name pos:line="80" pos:column="55">hdr<pos:position pos:line="80" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="60"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="81" pos:column="11">_mutt_copy_message<pos:position pos:line="81" pos:column="29"/></name> <argument_list pos:line="81" pos:column="30">(<argument><expr><name pos:line="81" pos:column="31">tmpfp<pos:position pos:line="81" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="38">fp<pos:position pos:line="81" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="42">idx<pos:position pos:line="81" pos:column="45"/></name><index pos:line="81" pos:column="45">[<expr><name pos:line="81" pos:column="46">i<pos:position pos:line="81" pos:column="47"/></name></expr>]<pos:position pos:line="81" pos:column="48"/></index></name><operator pos:line="81" pos:column="48">-&gt;<pos:position pos:line="81" pos:column="53"/></operator><name><name pos:line="81" pos:column="50">content<pos:position pos:line="81" pos:column="57"/></name><operator pos:line="81" pos:column="57">-&gt;<pos:position pos:line="81" pos:column="62"/></operator><name pos:line="81" pos:column="59">hdr<pos:position pos:line="81" pos:column="62"/></name></name></expr></argument>,
			      <argument><expr><name><name pos:line="82" pos:column="31">idx<pos:position pos:line="82" pos:column="34"/></name><index pos:line="82" pos:column="34">[<expr><name pos:line="82" pos:column="35">i<pos:position pos:line="82" pos:column="36"/></name></expr>]<pos:position pos:line="82" pos:column="37"/></index></name><operator pos:line="82" pos:column="37">-&gt;<pos:position pos:line="82" pos:column="42"/></operator><name><name pos:line="82" pos:column="39">content<pos:position pos:line="82" pos:column="46"/></name><operator pos:line="82" pos:column="46">-&gt;<pos:position pos:line="82" pos:column="51"/></operator><name pos:line="82" pos:column="48">hdr<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">-&gt;<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="53">content<pos:position pos:line="82" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="62">cmflags<pos:position pos:line="82" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="71">chflags<pos:position pos:line="82" pos:column="78"/></name></expr></argument>)<pos:position pos:line="82" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="80"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="83" pos:column="11">mutt_forward_trailer<pos:position pos:line="83" pos:column="31"/></name> <argument_list pos:line="83" pos:column="32">(<argument><expr><name pos:line="83" pos:column="33">tmpfp<pos:position pos:line="83" pos:column="38"/></name></expr></argument>)<pos:position pos:line="83" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>
      }<pos:position pos:line="85" pos:column="8"/></block></for>
    }<pos:position pos:line="86" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">fclose<pos:position pos:line="87" pos:column="11"/></name> <argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">tmpfp<pos:position pos:line="87" pos:column="18"/></name></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then>
  <elseif pos:line="89" pos:column="3">else <if pos:line="89" pos:column="8">if <condition pos:line="89" pos:column="11">(<expr><name pos:line="89" pos:column="12">rc<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">==<pos:position pos:line="89" pos:column="17"/></operator> <name pos:line="89" pos:column="18">M_YES<pos:position pos:line="89" pos:column="23"/></name></expr>)<pos:position pos:line="89" pos:column="24"/></condition><then pos:line="89" pos:column="24">	<comment type="block" pos:line="89" pos:column="25">/* do MIME encapsulation - we don't need to do much here */</comment>
  <block pos:line="90" pos:column="3">{
    <expr_stmt><expr><name pos:line="91" pos:column="5">last<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <operator pos:line="91" pos:column="12">&amp;<pos:position pos:line="91" pos:column="17"/></operator><name><name pos:line="91" pos:column="13">tmphdr<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">-&gt;<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="21">content<pos:position pos:line="91" pos:column="28"/></name></name></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">cur<pos:position pos:line="92" pos:column="12"/></name></expr>)<pos:position pos:line="92" pos:column="13"/></condition><then pos:line="92" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="7">mutt_copy_body<pos:position pos:line="93" pos:column="21"/></name> <argument_list pos:line="93" pos:column="22">(<argument><expr><name pos:line="93" pos:column="23">fp<pos:position pos:line="93" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="27">last<pos:position pos:line="93" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="33">cur<pos:position pos:line="93" pos:column="36"/></name></expr></argument>)<pos:position pos:line="93" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="94" pos:column="5">else
    <block pos:line="95" pos:column="5">{
      <for pos:line="96" pos:column="7">for <control pos:line="96" pos:column="11">(<init><expr><name pos:line="96" pos:column="12">i<pos:position pos:line="96" pos:column="13"/></name> <operator pos:line="96" pos:column="14">=<pos:position pos:line="96" pos:column="15"/></operator> <literal type="number" pos:line="96" pos:column="16">0<pos:position pos:line="96" pos:column="17"/></literal></expr>;<pos:position pos:line="96" pos:column="18"/></init> <condition><expr><name pos:line="96" pos:column="19">i<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">&lt;<pos:position pos:line="96" pos:column="25"/></operator> <name pos:line="96" pos:column="23">idxlen<pos:position pos:line="96" pos:column="29"/></name></expr>;<pos:position pos:line="96" pos:column="30"/></condition> <incr><expr><name pos:line="96" pos:column="31">i<pos:position pos:line="96" pos:column="32"/></name><operator pos:line="96" pos:column="32">++<pos:position pos:line="96" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="96" pos:column="35"/></control>
	<block type="pseudo"><if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name><name pos:line="97" pos:column="13">idx<pos:position pos:line="97" pos:column="16"/></name><index pos:line="97" pos:column="16">[<expr><name pos:line="97" pos:column="17">i<pos:position pos:line="97" pos:column="18"/></name></expr>]<pos:position pos:line="97" pos:column="19"/></index></name><operator pos:line="97" pos:column="19">-&gt;<pos:position pos:line="97" pos:column="24"/></operator><name><name pos:line="97" pos:column="21">content<pos:position pos:line="97" pos:column="28"/></name><operator pos:line="97" pos:column="28">-&gt;<pos:position pos:line="97" pos:column="33"/></operator><name pos:line="97" pos:column="30">tagged<pos:position pos:line="97" pos:column="36"/></name></name></expr>)<pos:position pos:line="97" pos:column="37"/></condition><then pos:line="97" pos:column="37">
	<block pos:line="98" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="99" pos:column="11">mutt_copy_body<pos:position pos:line="99" pos:column="25"/></name> <argument_list pos:line="99" pos:column="26">(<argument><expr><name pos:line="99" pos:column="27">fp<pos:position pos:line="99" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="31">last<pos:position pos:line="99" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="37">idx<pos:position pos:line="99" pos:column="40"/></name><index pos:line="99" pos:column="40">[<expr><name pos:line="99" pos:column="41">i<pos:position pos:line="99" pos:column="42"/></name></expr>]<pos:position pos:line="99" pos:column="43"/></index></name><operator pos:line="99" pos:column="43">-&gt;<pos:position pos:line="99" pos:column="48"/></operator><name pos:line="99" pos:column="45">content<pos:position pos:line="99" pos:column="52"/></name></expr></argument>)<pos:position pos:line="99" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="54"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="100" pos:column="11">last<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <operator pos:line="100" pos:column="18">&amp;<pos:position pos:line="100" pos:column="23"/></operator><operator pos:line="100" pos:column="19">(<pos:position pos:line="100" pos:column="20"/></operator><name><operator pos:line="100" pos:column="20">(<pos:position pos:line="100" pos:column="21"/></operator><operator pos:line="100" pos:column="21">*<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">last<pos:position pos:line="100" pos:column="26"/></name><operator pos:line="100" pos:column="26">)<pos:position pos:line="100" pos:column="27"/></operator><operator pos:line="100" pos:column="27">-&gt;<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="29">next<pos:position pos:line="100" pos:column="33"/></name></name><operator pos:line="100" pos:column="33">)<pos:position pos:line="100" pos:column="34"/></operator></expr>;<pos:position pos:line="100" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="101" pos:column="10"/></block></then></if></block></for>
    }<pos:position pos:line="102" pos:column="6"/></block></else></if>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if></elseif>
  <else pos:line="104" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="5">mutt_free_header<pos:position pos:line="105" pos:column="21"/></name> <argument_list pos:line="105" pos:column="22">(<argument><expr><operator pos:line="105" pos:column="23">&amp;<pos:position pos:line="105" pos:column="28"/></operator><name pos:line="105" pos:column="24">tmphdr<pos:position pos:line="105" pos:column="30"/></name></expr></argument>)<pos:position pos:line="105" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="32"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="107" pos:column="3">ci_send_message<pos:position pos:line="107" pos:column="18"/></name> <argument_list pos:line="107" pos:column="19">(<argument><expr><literal type="number" pos:line="107" pos:column="20">0<pos:position pos:line="107" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="23">tmphdr<pos:position pos:line="107" pos:column="29"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="107" pos:column="31">*<pos:position pos:line="107" pos:column="32"/></operator><name pos:line="107" pos:column="32">tmpbody<pos:position pos:line="107" pos:column="39"/></name></expr> ?<pos:position pos:line="107" pos:column="41"/></condition><then pos:line="107" pos:column="41"> <expr><name pos:line="107" pos:column="42">tmpbody<pos:position pos:line="107" pos:column="49"/></name></expr> <pos:position pos:line="107" pos:column="50"/></then><else pos:line="107" pos:column="50">: <expr><name pos:line="107" pos:column="52">NULL<pos:position pos:line="107" pos:column="56"/></name></expr></else></ternary></expr></argument>, 
		   <argument><expr><name pos:line="108" pos:column="20">NULL<pos:position pos:line="108" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="26">curhdr<pos:position pos:line="108" pos:column="32"/></name></expr></argument>)<pos:position pos:line="108" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="34"/></expr_stmt>

}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_873_mutt-1.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_check_preauth<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">X509<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">cert<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">host<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">SHORT_STRING<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* check session cache first */</comment>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">check_certificate_cache<pos:position pos:line="6" pos:column="30"/></name> <argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">cert<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">dprint<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="number" pos:line="8" pos:column="13">2<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">debugfile<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">,<pos:position pos:line="8" pos:column="27"/></operator> <literal type="string" pos:line="8" pos:column="28">"ssl_check_preauth: using cached certificate\n"<pos:position pos:line="8" pos:column="75"/></literal><operator pos:line="8" pos:column="75">)<pos:position pos:line="8" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">1<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">buf<pos:position pos:line="12" pos:column="6"/></name><index pos:line="12" pos:column="6">[<expr><literal type="number" pos:line="12" pos:column="7">0<pos:position pos:line="12" pos:column="8"/></literal></expr>]<pos:position pos:line="12" pos:column="9"/></index></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">host<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">&amp;&amp;<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="15">option<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">OPTSSLVERIFYHOST<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call> <operator pos:line="13" pos:column="41">!=<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">MUTT_NO<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><call><name pos:line="15" pos:column="10">check_host<pos:position pos:line="15" pos:column="20"/></name> <argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">cert<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">host<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">buf<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="39">sizeof <argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">buf<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">mutt_error<pos:position pos:line="17" pos:column="17"/></name> <argument_list pos:line="17" pos:column="18">(<argument><expr><call><name pos:line="17" pos:column="19">_<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"Certificate host check failed: %s"<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">buf<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">mutt_sleep<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><literal type="number" pos:line="18" pos:column="19">2<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
      <return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">-<pos:position pos:line="19" pos:column="15"/></operator><literal type="number" pos:line="19" pos:column="15">1<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">dprint<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="number" pos:line="21" pos:column="13">2<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">debugfile<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">,<pos:position pos:line="21" pos:column="27"/></operator> <literal type="string" pos:line="21" pos:column="28">"ssl_check_preauth: hostname check passed\n"<pos:position pos:line="21" pos:column="72"/></literal><operator pos:line="21" pos:column="72">)<pos:position pos:line="21" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name pos:line="24" pos:column="7">check_certificate_by_signer<pos:position pos:line="24" pos:column="34"/></name> <argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">cert<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">dprint<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="number" pos:line="26" pos:column="13">2<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">debugfile<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">,<pos:position pos:line="26" pos:column="27"/></operator> <literal type="string" pos:line="26" pos:column="28">"ssl_check_preauth: signer check passed\n"<pos:position pos:line="26" pos:column="70"/></literal><operator pos:line="26" pos:column="70">)<pos:position pos:line="26" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* automatic check from user's database */</comment>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">SslCertFile<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&amp;&amp;<pos:position pos:line="31" pos:column="29"/></operator> <call><name pos:line="31" pos:column="22">check_certificate_by_digest<pos:position pos:line="31" pos:column="49"/></name> <argument_list pos:line="31" pos:column="50">(<argument><expr><name pos:line="31" pos:column="51">cert<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="57"/></condition><then pos:line="31" pos:column="57">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">dprint<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="number" pos:line="33" pos:column="13">2<pos:position pos:line="33" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">debugfile<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">,<pos:position pos:line="33" pos:column="27"/></operator> <literal type="string" pos:line="33" pos:column="28">"ssl_check_preauth: digest check passed\n"<pos:position pos:line="33" pos:column="70"/></literal><operator pos:line="33" pos:column="70">)<pos:position pos:line="33" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><literal type="number" pos:line="34" pos:column="12">1<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <return pos:line="37" pos:column="3">return <expr><literal type="number" pos:line="37" pos:column="10">0<pos:position pos:line="37" pos:column="11"/></literal></expr>;<pos:position pos:line="37" pos:column="12"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>
